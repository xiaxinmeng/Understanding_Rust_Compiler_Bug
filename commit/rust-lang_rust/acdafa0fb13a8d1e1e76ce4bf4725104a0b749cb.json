{"sha": "acdafa0fb13a8d1e1e76ce4bf4725104a0b749cb", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFjZGFmYTBmYjEzYThkMWUxZTc2Y2U0YmY0NzI1MTA0YTBiNzQ5Y2I=", "commit": {"author": {"name": "Markus Wein", "email": "markus.wein@nuclearsquid.com", "date": "2018-07-11T11:21:10Z"}, "committer": {"name": "Markus Wein", "email": "markus.wein@nuclearsquid.com", "date": "2018-07-16T18:37:15Z"}, "message": "Document From conversions for OsString and OsStr", "tree": {"sha": "7c58045339b409ed90bcadf8f375c9b8c88fa662", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7c58045339b409ed90bcadf8f375c9b8c88fa662"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/acdafa0fb13a8d1e1e76ce4bf4725104a0b749cb", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEQ8MKkRpyVqocFY36vBHMFyRe2poFAltM5dsACgkQvBHMFyRe\n2poyNBAArajbNUh3ozyNOcCLxnlGkM2tDe2w/WGEiagv2okn5B4X3JvJlRMWSHfC\nVr+qNmnRHBqHvXRoqMADEe+LheRbL179tPlPYGJVE7/f2hSMvfqc1lMzMtlYIoGk\njOTu2oOpvDPJp3QQZx8vowYDl8PspCgZhjkwZDd6RHZfC2QbM7H6fG+q42h6ojFQ\nZ/2cPqval0h02EjG+u5IrIoHieooA3ZgALw4iLHb9B/Dcx1YfzGSVgWDJY1KwK+j\nvUgwiRXIfzQ8p+llZ4JvrK2Dcyi7WJBpuuujNFGk5VHOdI/cfrE94Oo+yCltYPay\nI86kp7wwqy0u6iG0xiEHqxpQCwqN6FZX9BH3Pmf86cd8KnNVuXx5u61Kc9zf9yIU\nvEowARBxGB9DNQ5R7dsaBPQ7UC/lrRJ47fado3mjiEKbx50BlRpuvnPwyUdRyB7i\nszBqfe4aRnYjWYpjWBORD2Ega7aau5lGbEafQotwakMlIH6wIJxGBWZS4WA81N+K\neLGukQ4zcbF79HpEexYz8xhqb6Ig4YxuGrNCRiDZuYNBBgFMtTxxtqNH3UklTejp\nkOZC76CxL0z9ZCQ2U8OE+JurwSeRtgLkv0lMcPLl+BAAg0zvC/AUNL6lw+YJFeZM\nM+bLG/YUPtRVbxEth+NfaUh6z97XM9QIpJt97gtXVqocTiBWQj8=\n=gUvP\n-----END PGP SIGNATURE-----", "payload": "tree 7c58045339b409ed90bcadf8f375c9b8c88fa662\nparent 50702b28383c15907c29e8f70256cdd439800834\nauthor Markus Wein <markus.wein@nuclearsquid.com> 1531308070 +0200\ncommitter Markus Wein <markus.wein@nuclearsquid.com> 1531766235 +0200\n\nDocument From conversions for OsString and OsStr\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/acdafa0fb13a8d1e1e76ce4bf4725104a0b749cb", "html_url": "https://github.com/rust-lang/rust/commit/acdafa0fb13a8d1e1e76ce4bf4725104a0b749cb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/acdafa0fb13a8d1e1e76ce4bf4725104a0b749cb/comments", "author": {"login": "cypher", "id": 978, "node_id": "MDQ6VXNlcjk3OA==", "avatar_url": "https://avatars.githubusercontent.com/u/978?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cypher", "html_url": "https://github.com/cypher", "followers_url": "https://api.github.com/users/cypher/followers", "following_url": "https://api.github.com/users/cypher/following{/other_user}", "gists_url": "https://api.github.com/users/cypher/gists{/gist_id}", "starred_url": "https://api.github.com/users/cypher/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cypher/subscriptions", "organizations_url": "https://api.github.com/users/cypher/orgs", "repos_url": "https://api.github.com/users/cypher/repos", "events_url": "https://api.github.com/users/cypher/events{/privacy}", "received_events_url": "https://api.github.com/users/cypher/received_events", "type": "User", "site_admin": false}, "committer": {"login": "cypher", "id": 978, "node_id": "MDQ6VXNlcjk3OA==", "avatar_url": "https://avatars.githubusercontent.com/u/978?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cypher", "html_url": "https://github.com/cypher", "followers_url": "https://api.github.com/users/cypher/followers", "following_url": "https://api.github.com/users/cypher/following{/other_user}", "gists_url": "https://api.github.com/users/cypher/gists{/gist_id}", "starred_url": "https://api.github.com/users/cypher/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cypher/subscriptions", "organizations_url": "https://api.github.com/users/cypher/orgs", "repos_url": "https://api.github.com/users/cypher/repos", "events_url": "https://api.github.com/users/cypher/events{/privacy}", "received_events_url": "https://api.github.com/users/cypher/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "50702b28383c15907c29e8f70256cdd439800834", "url": "https://api.github.com/repos/rust-lang/rust/commits/50702b28383c15907c29e8f70256cdd439800834", "html_url": "https://github.com/rust-lang/rust/commit/50702b28383c15907c29e8f70256cdd439800834"}], "stats": {"total": 21, "additions": 21, "deletions": 0}, "files": [{"sha": "9b91bd0d41efadd1d1fe99592a4fdf6f9b757815", "filename": "src/libstd/ffi/os_str.rs", "status": "modified", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/acdafa0fb13a8d1e1e76ce4bf4725104a0b749cb/src%2Flibstd%2Fffi%2Fos_str.rs", "raw_url": "https://github.com/rust-lang/rust/raw/acdafa0fb13a8d1e1e76ce4bf4725104a0b749cb/src%2Flibstd%2Fffi%2Fos_str.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fffi%2Fos_str.rs?ref=acdafa0fb13a8d1e1e76ce4bf4725104a0b749cb", "patch": "@@ -348,6 +348,11 @@ impl OsString {\n \n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n impl From<String> for OsString {\n+    /// Converts a [`String`] into a [`OsString`].\n+    /// The conversion copies the data, and includes an allocation on the heap.\n+    ///\n+    /// [`String`]: ../string/struct.String.html\n+    /// [`OsString`]: struct.OsString.html\n     fn from(s: String) -> OsString {\n         OsString { inner: Buf::from_string(s) }\n     }\n@@ -630,13 +635,21 @@ impl<'a> From<&'a OsStr> for Box<OsStr> {\n \n #[stable(feature = \"os_string_from_box\", since = \"1.18.0\")]\n impl From<Box<OsStr>> for OsString {\n+    /// Converts a `Box<OsStr>` into a `OsString` without copying or allocating.\n+    ///\n+    /// [`Box`]: ../boxed/struct.Box.html\n+    /// [`OsString`]: ../ffi/struct.OsString.html\n     fn from(boxed: Box<OsStr>) -> OsString {\n         boxed.into_os_string()\n     }\n }\n \n #[stable(feature = \"box_from_os_string\", since = \"1.20.0\")]\n impl From<OsString> for Box<OsStr> {\n+    /// Converts a [`OsString`] into a [`Box`]`<OsStr>` without copying or allocating.\n+    ///\n+    /// [`Box`]: ../boxed/struct.Box.html\n+    /// [`OsString`]: ../ffi/struct.OsString.html\n     fn from(s: OsString) -> Box<OsStr> {\n         s.into_boxed_os_str()\n     }\n@@ -652,6 +665,10 @@ impl Clone for Box<OsStr> {\n \n #[stable(feature = \"shared_from_slice2\", since = \"1.24.0\")]\n impl From<OsString> for Arc<OsStr> {\n+    /// Converts a [`OsString`] into a [`Arc`]`<OsStr>` without copying or allocating.\n+    ///\n+    /// [`Arc`]: ../sync/struct.Arc.html\n+    /// [`OsString`]: ../ffi/struct.OsString.html\n     #[inline]\n     fn from(s: OsString) -> Arc<OsStr> {\n         let arc = s.inner.into_arc();\n@@ -670,6 +687,10 @@ impl<'a> From<&'a OsStr> for Arc<OsStr> {\n \n #[stable(feature = \"shared_from_slice2\", since = \"1.24.0\")]\n impl From<OsString> for Rc<OsStr> {\n+    /// Converts a [`OsString`] into a [`Rc`]`<OsStr>` without copying or allocating.\n+    ///\n+    /// [`Rc`]: ../rc/struct.Rc.html\n+    /// [`OsString`]: ../ffi/struct.OsString.html\n     #[inline]\n     fn from(s: OsString) -> Rc<OsStr> {\n         let rc = s.inner.into_rc();"}]}