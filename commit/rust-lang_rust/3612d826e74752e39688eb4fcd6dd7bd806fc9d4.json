{"sha": "3612d826e74752e39688eb4fcd6dd7bd806fc9d4", "node_id": "MDY6Q29tbWl0NzI0NzEyOjM2MTJkODI2ZTc0NzUyZTM5Njg4ZWI0ZmNkNmRkN2JkODA2ZmM5ZDQ=", "commit": {"author": {"name": "David Renshaw", "email": "david@sandstorm.io", "date": "2017-03-21T15:04:49Z"}, "committer": {"name": "David Renshaw", "email": "david@sandstorm.io", "date": "2017-03-21T15:04:49Z"}, "message": "ast::Attribute no longer has a 'value' field", "tree": {"sha": "5fb576af93d45bd5a069363fcefe47f2533761af", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5fb576af93d45bd5a069363fcefe47f2533761af"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3612d826e74752e39688eb4fcd6dd7bd806fc9d4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3612d826e74752e39688eb4fcd6dd7bd806fc9d4", "html_url": "https://github.com/rust-lang/rust/commit/3612d826e74752e39688eb4fcd6dd7bd806fc9d4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3612d826e74752e39688eb4fcd6dd7bd806fc9d4/comments", "author": null, "committer": null, "parents": [{"sha": "a82924b3e2fdd8d2fb50eee345b6f65709be9d10", "url": "https://api.github.com/repos/rust-lang/rust/commits/a82924b3e2fdd8d2fb50eee345b6f65709be9d10", "html_url": "https://github.com/rust-lang/rust/commit/a82924b3e2fdd8d2fb50eee345b6f65709be9d10"}], "stats": {"total": 6, "additions": 3, "deletions": 3}, "files": [{"sha": "04b11ff60783d8cfc12ce54b92c5d50ba884cbba", "filename": "src/bin/miri.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/3612d826e74752e39688eb4fcd6dd7bd806fc9d4/src%2Fbin%2Fmiri.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3612d826e74752e39688eb4fcd6dd7bd806fc9d4/src%2Fbin%2Fmiri.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbin%2Fmiri.rs?ref=3612d826e74752e39688eb4fcd6dd7bd806fc9d4", "patch": "@@ -82,7 +82,7 @@ fn after_analysis<'a, 'tcx>(state: &mut CompileState<'a, 'tcx>) {\n         impl<'a, 'tcx: 'a, 'hir> itemlikevisit::ItemLikeVisitor<'hir> for Visitor<'a, 'tcx> {\n             fn visit_item(&mut self, i: &'hir hir::Item) {\n                 if let hir::Item_::ItemFn(_, _, _, _, _, body_id) = i.node {\n-                    if i.attrs.iter().any(|attr| attr.value.name == \"test\") {\n+                    if i.attrs.iter().any(|attr| attr.name().map_or(false, |n| n == \"test\")) {\n                         let did = self.1.hir.body_owner_def_id(body_id);\n                         println!(\"running test: {}\", self.1.hir.def_path(did).to_string(self.1));\n                         miri::eval_main(self.1, did, self.0);\n@@ -117,8 +117,8 @@ fn resource_limits_from_attributes(state: &CompileState) -> miri::ResourceLimits\n         }\n     };\n \n-    for attr in krate.attrs.iter().filter(|a| a.name() == \"miri\") {\n-        if let MetaItemKind::List(ref items) = attr.value.node {\n+    for attr in krate.attrs.iter().filter(|a| a.name().map_or(false, |n| n == \"miri\")) {\n+        if let Some(items) = attr.meta_item_list() {\n             for item in items {\n                 if let NestedMetaItemKind::MetaItem(ref inner) = item.node {\n                     if let MetaItemKind::NameValue(ref value) = inner.node {"}]}