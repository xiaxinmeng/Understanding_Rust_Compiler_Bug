{"sha": "0d928b6ed01ec66b4f6c4ea07d838bdcc5db4f23", "node_id": "C_kwDOAAsO6NoAKDBkOTI4YjZlZDAxZWM2NmI0ZjZjNGVhMDdkODM4YmRjYzVkYjRmMjM", "commit": {"author": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2022-02-08T16:05:00Z"}, "committer": {"name": "Guillaume Gomez", "email": "guillaume.gomez@huawei.com", "date": "2022-02-16T19:43:31Z"}, "message": "Update rustdoc tests to adapt to changes to the sidebar", "tree": {"sha": "005305f021fcc86ea6c95c283ac3b7e1bfaf9bae", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/005305f021fcc86ea6c95c283ac3b7e1bfaf9bae"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0d928b6ed01ec66b4f6c4ea07d838bdcc5db4f23", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0d928b6ed01ec66b4f6c4ea07d838bdcc5db4f23", "html_url": "https://github.com/rust-lang/rust/commit/0d928b6ed01ec66b4f6c4ea07d838bdcc5db4f23", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0d928b6ed01ec66b4f6c4ea07d838bdcc5db4f23/comments", "author": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "committer": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5136b549c9b8906065681844e6a30082a6f5742e", "url": "https://api.github.com/repos/rust-lang/rust/commits/5136b549c9b8906065681844e6a30082a6f5742e", "html_url": "https://github.com/rust-lang/rust/commit/5136b549c9b8906065681844e6a30082a6f5742e"}], "stats": {"total": 118, "additions": 59, "deletions": 59}, "files": [{"sha": "a680635ef8ae411f068db93f530ee913be1a2903", "filename": "src/test/rustdoc-gui/hash-item-expansion.goml", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/0d928b6ed01ec66b4f6c4ea07d838bdcc5db4f23/src%2Ftest%2Frustdoc-gui%2Fhash-item-expansion.goml", "raw_url": "https://github.com/rust-lang/rust/raw/0d928b6ed01ec66b4f6c4ea07d838bdcc5db4f23/src%2Ftest%2Frustdoc-gui%2Fhash-item-expansion.goml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-gui%2Fhash-item-expansion.goml?ref=0d928b6ed01ec66b4f6c4ea07d838bdcc5db4f23", "patch": "@@ -5,7 +5,7 @@ assert-attribute: (\"#blanket-implementations-list > details:nth-child(2)\", {\"ope\n // We first check that the impl block is open by default.\n assert-attribute: (\"#implementations + details\", {\"open\": \"\"})\n // To ensure that we will click on the currently hidden method.\n-assert-text: (\".sidebar-links > a\", \"must_use\")\n-click: \".sidebar-links > a\"\n+assert-text: (\".sidebar-elems section .block li > a\", \"must_use\")\n+click: \".sidebar-elems section .block li > a\"\n // We check that the impl block was opened as expected so that we can see the method.\n assert-attribute: (\"#implementations + details\", {\"open\": \"\"})"}, {"sha": "79f18db8fc7cde424abeb23607bedd19a005a963", "filename": "src/test/rustdoc-gui/sidebar-mobile.goml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0d928b6ed01ec66b4f6c4ea07d838bdcc5db4f23/src%2Ftest%2Frustdoc-gui%2Fsidebar-mobile.goml", "raw_url": "https://github.com/rust-lang/rust/raw/0d928b6ed01ec66b4f6c4ea07d838bdcc5db4f23/src%2Ftest%2Frustdoc-gui%2Fsidebar-mobile.goml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-gui%2Fsidebar-mobile.goml?ref=0d928b6ed01ec66b4f6c4ea07d838bdcc5db4f23", "patch": "@@ -33,7 +33,7 @@ assert-property: (\".mobile-topbar\", {\"clientHeight\": \"45\"})\n // Check that clicking an element from the sidebar scrolls to the right place\n // so the target is not obscured by the topbar.\n click: \".sidebar-menu-toggle\"\n-click: \".sidebar-links a\"\n+click: \".sidebar-elems section .block li > a\"\n assert-position: (\"#method\\.must_use\", {\"y\": 45})\n \n // Check that the bottom-most item on the sidebar menu can be scrolled fully into view."}, {"sha": "6b79b00d3f7862589a765b0da9fca70aa12dc33c", "filename": "src/test/rustdoc-gui/sidebar.goml", "status": "modified", "additions": 17, "deletions": 17, "changes": 34, "blob_url": "https://github.com/rust-lang/rust/blob/0d928b6ed01ec66b4f6c4ea07d838bdcc5db4f23/src%2Ftest%2Frustdoc-gui%2Fsidebar.goml", "raw_url": "https://github.com/rust-lang/rust/raw/0d928b6ed01ec66b4f6c4ea07d838bdcc5db4f23/src%2Ftest%2Frustdoc-gui%2Fsidebar.goml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-gui%2Fsidebar.goml?ref=0d928b6ed01ec66b4f6c4ea07d838bdcc5db4f23", "patch": "@@ -13,15 +13,15 @@ assert-css: (\"#all-types\", {\"color\": \"rgb(53, 109, 164)\"})\n // We check that we have the crates list and that the \"current\" on is \"test_docs\".\n assert-text: (\".sidebar-elems .crate > ul > li > a.current\", \"test_docs\")\n // And we're also supposed to have the list of items in the current module.\n-assert-text: (\".sidebar-elems .items > ul > li:nth-child(1)\", \"Modules\")\n-assert-text: (\".sidebar-elems .items > ul > li:nth-child(2)\", \"Macros\")\n-assert-text: (\".sidebar-elems .items > ul > li:nth-child(3)\", \"Structs\")\n-assert-text: (\".sidebar-elems .items > ul > li:nth-child(4)\", \"Enums\")\n-assert-text: (\".sidebar-elems .items > ul > li:nth-child(5)\", \"Traits\")\n-assert-text: (\".sidebar-elems .items > ul > li:nth-child(6)\", \"Functions\")\n-assert-text: (\".sidebar-elems .items > ul > li:nth-child(7)\", \"Type Definitions\")\n-assert-text: (\".sidebar-elems .items > ul > li:nth-child(8)\", \"Unions\")\n-assert-text: (\".sidebar-elems .items > ul > li:nth-child(9)\", \"Keywords\")\n+assert-text: (\".sidebar-elems section ul > li:nth-child(1)\", \"Modules\")\n+assert-text: (\".sidebar-elems section ul > li:nth-child(2)\", \"Macros\")\n+assert-text: (\".sidebar-elems section ul > li:nth-child(3)\", \"Structs\")\n+assert-text: (\".sidebar-elems section ul > li:nth-child(4)\", \"Enums\")\n+assert-text: (\".sidebar-elems section ul > li:nth-child(5)\", \"Traits\")\n+assert-text: (\".sidebar-elems section ul > li:nth-child(6)\", \"Functions\")\n+assert-text: (\".sidebar-elems section ul > li:nth-child(7)\", \"Type Definitions\")\n+assert-text: (\".sidebar-elems section ul > li:nth-child(8)\", \"Unions\")\n+assert-text: (\".sidebar-elems section ul > li:nth-child(9)\", \"Keywords\")\n assert-text: (\"#structs + .item-table .item-left > a\", \"Foo\")\n click: \"#structs + .item-table .item-left > a\"\n \n@@ -30,7 +30,7 @@ assert-count: (\".sidebar .location\", 2)\n // We check that there is no crate listed outside of the top level.\n assert-false: \".sidebar-elems > .crate\"\n \n-click: \".sidebar-links a\"\n+click: \".sidebar-elems section .block li > a\"\n assert-property-false: (\"html\", {\"scrollTop\": \"0\"})\n \n click: \".sidebar h2.location a\"\n@@ -47,11 +47,11 @@ assert-text: (\".sidebar > .location\", \"Crate lib2\")\n // We check that we have the crates list and that the \"current\" on is now \"lib2\".\n assert-text: (\".sidebar-elems .crate > ul > li > a.current\", \"lib2\")\n // We now go to the \"foobar\" function page.\n-assert-text: (\".sidebar-elems > .items > ul > li:nth-child(1)\", \"Modules\")\n-assert-text: (\".sidebar-elems > .items > ul > li:nth-child(2)\", \"Structs\")\n-assert-text: (\".sidebar-elems > .items > ul > li:nth-child(3)\", \"Traits\")\n-assert-text: (\".sidebar-elems > .items > ul > li:nth-child(4)\", \"Functions\")\n-assert-text: (\".sidebar-elems > .items > ul > li:nth-child(5)\", \"Type Definitions\")\n+assert-text: (\".sidebar-elems > section .block ul > li:nth-child(1)\", \"Modules\")\n+assert-text: (\".sidebar-elems > section .block ul > li:nth-child(2)\", \"Structs\")\n+assert-text: (\".sidebar-elems > section .block ul > li:nth-child(3)\", \"Traits\")\n+assert-text: (\".sidebar-elems > section .block ul > li:nth-child(4)\", \"Functions\")\n+assert-text: (\".sidebar-elems > section .block ul > li:nth-child(5)\", \"Type Definitions\")\n assert-text: (\"#functions + .item-table .item-left > a\", \"foobar\")\n click: \"#functions + .item-table .item-left > a\"\n \n@@ -72,12 +72,12 @@ goto: ./sub_module/sub_sub_module/index.html\n assert-text: (\".sidebar > .location\", \"Module sub_sub_module\")\n // We check that we don't have the crate list.\n assert-false: \".sidebar-elems .crate\"\n-assert-text: (\".sidebar-elems .items > ul > li:nth-child(1)\", \"Functions\")\n+assert-text: (\".sidebar-elems > section ul > li:nth-child(1)\", \"Functions\")\n assert-text: (\"#functions + .item-table .item-left > a\", \"foo\")\n \n // Links to trait implementations in the sidebar should not wrap even if they are long.\n goto: file://|DOC_PATH|/lib2/struct.HasALongTraitWithParams.html\n-assert-property: (\".sidebar-links a\", {\"offsetHeight\": 29})\n+assert-property: (\".sidebar-elems section .block li > a\", {\"offsetHeight\": 29})\n \n // Test that clicking on of the \"In <module>\" headings in the sidebar links to the\n // appropriate anchor in index.html."}, {"sha": "d77d1dca483e0e0cbbb03cb169d98e08f9314bc0", "filename": "src/test/rustdoc-gui/trait-sidebar-item-order.goml", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/0d928b6ed01ec66b4f6c4ea07d838bdcc5db4f23/src%2Ftest%2Frustdoc-gui%2Ftrait-sidebar-item-order.goml", "raw_url": "https://github.com/rust-lang/rust/raw/0d928b6ed01ec66b4f6c4ea07d838bdcc5db4f23/src%2Ftest%2Frustdoc-gui%2Ftrait-sidebar-item-order.goml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-gui%2Ftrait-sidebar-item-order.goml?ref=0d928b6ed01ec66b4f6c4ea07d838bdcc5db4f23", "patch": "@@ -1,8 +1,8 @@\n // Checks that the elements in the sidebar are alphabetically sorted.\n goto: file://|DOC_PATH|/test_docs/trait.AnotherOne.html\n-assert-text: (\".sidebar-links a:nth-of-type(1)\", \"another\")\n-assert-text: (\".sidebar-links a:nth-of-type(2)\", \"func1\")\n-assert-text: (\".sidebar-links a:nth-of-type(3)\", \"func2\")\n-assert-text: (\".sidebar-links a:nth-of-type(4)\", \"func3\")\n-assert-text: (\".sidebar-links a:nth-of-type(5)\", \"hello\")\n-assert-text: (\".sidebar-links a:nth-of-type(6)\", \"why_not\")\n+assert-text: (\".sidebar-elems section .block li:nth-of-type(1) > a\", \"another\")\n+assert-text: (\".sidebar-elems section .block li:nth-of-type(2) > a\", \"func1\")\n+assert-text: (\".sidebar-elems section .block li:nth-of-type(3) > a\", \"func2\")\n+assert-text: (\".sidebar-elems section .block li:nth-of-type(4) > a\", \"func3\")\n+assert-text: (\".sidebar-elems section .block li:nth-of-type(5) > a\", \"hello\")\n+assert-text: (\".sidebar-elems section .block li:nth-of-type(6) > a\", \"why_not\")"}, {"sha": "da50fb86cd581a57bf6694df89e97a591677d2ec", "filename": "src/test/rustdoc/associated-consts.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/0d928b6ed01ec66b4f6c4ea07d838bdcc5db4f23/src%2Ftest%2Frustdoc%2Fassociated-consts.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0d928b6ed01ec66b4f6c4ea07d838bdcc5db4f23/src%2Ftest%2Frustdoc%2Fassociated-consts.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fassociated-consts.rs?ref=0d928b6ed01ec66b4f6c4ea07d838bdcc5db4f23", "patch": "@@ -10,7 +10,7 @@ pub struct Bar;\n \n // @has 'foo/struct.Bar.html'\n // @has - '//h3[@class=\"sidebar-title\"]' 'Associated Constants'\n-// @has - '//div[@class=\"sidebar-elems\"]//div[@class=\"sidebar-links\"]/a' 'FOO'\n+// @has - '//div[@class=\"sidebar-elems\"]//a' 'FOO'\n impl Trait for Bar {\n     const FOO: u32 = 1;\n \n@@ -23,7 +23,7 @@ pub enum Foo {\n \n // @has 'foo/enum.Foo.html'\n // @has - '//h3[@class=\"sidebar-title\"]' 'Associated Constants'\n-// @has - '//div[@class=\"sidebar-elems\"]//div[@class=\"sidebar-links\"]/a' 'FOO'\n+// @has - '//div[@class=\"sidebar-elems\"]//a' 'FOO'\n impl Trait for Foo {\n     const FOO: u32 = 1;\n "}, {"sha": "fdf8434224f839b0a00453f32ae77eb2b147b3bf", "filename": "src/test/rustdoc/deref-mut-methods.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0d928b6ed01ec66b4f6c4ea07d838bdcc5db4f23/src%2Ftest%2Frustdoc%2Fderef-mut-methods.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0d928b6ed01ec66b4f6c4ea07d838bdcc5db4f23/src%2Ftest%2Frustdoc%2Fderef-mut-methods.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fderef-mut-methods.rs?ref=0d928b6ed01ec66b4f6c4ea07d838bdcc5db4f23", "patch": "@@ -9,7 +9,7 @@ impl Foo {\n }\n \n // @has foo/struct.Bar.html\n-// @has - '//div[@class=\"sidebar-links\"]/a[@href=\"#method.foo\"]' 'foo'\n+// @has - '//*[@class=\"sidebar-elems\"]//*[@class=\"block\"]//a[@href=\"#method.foo\"]' 'foo'\n pub struct Bar {\n     foo: Foo,\n }"}, {"sha": "746df9c804ebb37a876355449063ff06a309dcbe", "filename": "src/test/rustdoc/deref-recursive-pathbuf.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/0d928b6ed01ec66b4f6c4ea07d838bdcc5db4f23/src%2Ftest%2Frustdoc%2Fderef-recursive-pathbuf.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0d928b6ed01ec66b4f6c4ea07d838bdcc5db4f23/src%2Ftest%2Frustdoc%2Fderef-recursive-pathbuf.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fderef-recursive-pathbuf.rs?ref=0d928b6ed01ec66b4f6c4ea07d838bdcc5db4f23", "patch": "@@ -8,9 +8,9 @@\n // @has '-' '//*[@id=\"deref-methods-Path\"]' 'Methods from Deref<Target = Path>'\n // @has '-' '//*[@class=\"impl-items\"]//*[@id=\"method.exists\"]' 'pub fn exists(&self)'\n // @has '-' '//*[@class=\"sidebar-title\"]/a[@href=\"#deref-methods-PathBuf\"]' 'Methods from Deref<Target=PathBuf>'\n-// @has '-' '//*[@class=\"sidebar-links\"]/a[@href=\"#method.as_path\"]' 'as_path'\n+// @has '-' '//*[@class=\"sidebar-elems\"]//*[@class=\"block\"]//a[@href=\"#method.as_path\"]' 'as_path'\n // @has '-' '//*[@class=\"sidebar-title\"]/a[@href=\"#deref-methods-Path\"]' 'Methods from Deref<Target=Path>'\n-// @has '-' '//*[@class=\"sidebar-links\"]/a[@href=\"#method.exists\"]' 'exists'\n+// @has '-' '//*[@class=\"sidebar-elems\"]//*[@class=\"block\"]//a[@href=\"#method.exists\"]' 'exists'\n \n #![crate_name = \"foo\"]\n "}, {"sha": "d5f8473f2842d255754d90d44bb6a16cedaafc2f", "filename": "src/test/rustdoc/deref-recursive.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/0d928b6ed01ec66b4f6c4ea07d838bdcc5db4f23/src%2Ftest%2Frustdoc%2Fderef-recursive.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0d928b6ed01ec66b4f6c4ea07d838bdcc5db4f23/src%2Ftest%2Frustdoc%2Fderef-recursive.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fderef-recursive.rs?ref=0d928b6ed01ec66b4f6c4ea07d838bdcc5db4f23", "patch": "@@ -8,9 +8,9 @@\n // @has '-' '//*[@id=\"deref-methods-Baz\"]' 'Methods from Deref<Target = Baz>'\n // @has '-' '//*[@class=\"impl-items\"]//*[@id=\"method.baz\"]' 'pub fn baz(&self)'\n // @has '-' '//*[@class=\"sidebar-title\"]/a[@href=\"#deref-methods-Bar\"]' 'Methods from Deref<Target=Bar>'\n-// @has '-' '//*[@class=\"sidebar-links\"]/a[@href=\"#method.bar\"]' 'bar'\n+// @has '-' '//*[@class=\"sidebar-elems\"]//section//a[@href=\"#method.bar\"]' 'bar'\n // @has '-' '//*[@class=\"sidebar-title\"]/a[@href=\"#deref-methods-Baz\"]' 'Methods from Deref<Target=Baz>'\n-// @has '-' '//*[@class=\"sidebar-links\"]/a[@href=\"#method.baz\"]' 'baz'\n+// @has '-' '//*[@class=\"sidebar-elems\"]//section//a[@href=\"#method.baz\"]' 'baz'\n \n #![crate_name = \"foo\"]\n "}, {"sha": "28f977e315abf4aabe9b53f880767d09386dfdad", "filename": "src/test/rustdoc/deref-typedef.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/0d928b6ed01ec66b4f6c4ea07d838bdcc5db4f23/src%2Ftest%2Frustdoc%2Fderef-typedef.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0d928b6ed01ec66b4f6c4ea07d838bdcc5db4f23/src%2Ftest%2Frustdoc%2Fderef-typedef.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fderef-typedef.rs?ref=0d928b6ed01ec66b4f6c4ea07d838bdcc5db4f23", "patch": "@@ -7,10 +7,10 @@\n // @has '-' '//*[@class=\"impl-items\"]//*[@id=\"method.foo_c\"]' 'pub fn foo_c(&self)'\n // @has '-' '//*[@class=\"impl-items\"]//*[@id=\"method.foo_j\"]' 'pub fn foo_j(&self)'\n // @has '-' '//*[@class=\"sidebar-title\"]/a[@href=\"#deref-methods-FooJ\"]' 'Methods from Deref<Target=FooJ>'\n-// @has '-' '//*[@class=\"sidebar-links\"]/a[@href=\"#method.foo_a\"]' 'foo_a'\n-// @has '-' '//*[@class=\"sidebar-links\"]/a[@href=\"#method.foo_b\"]' 'foo_b'\n-// @has '-' '//*[@class=\"sidebar-links\"]/a[@href=\"#method.foo_c\"]' 'foo_c'\n-// @has '-' '//*[@class=\"sidebar-links\"]/a[@href=\"#method.foo_j\"]' 'foo_j'\n+// @has '-' '//*[@class=\"sidebar-elems\"]//section//a[@href=\"#method.foo_a\"]' 'foo_a'\n+// @has '-' '//*[@class=\"sidebar-elems\"]//section//a[@href=\"#method.foo_b\"]' 'foo_b'\n+// @has '-' '//*[@class=\"sidebar-elems\"]//section//a[@href=\"#method.foo_c\"]' 'foo_c'\n+// @has '-' '//*[@class=\"sidebar-elems\"]//section//a[@href=\"#method.foo_j\"]' 'foo_j'\n \n pub struct FooA;\n pub type FooB = FooA;"}, {"sha": "b7bbf140cfd00309faba4d42d4c9b582010c6335", "filename": "src/test/rustdoc/double-quote-escape.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0d928b6ed01ec66b4f6c4ea07d838bdcc5db4f23/src%2Ftest%2Frustdoc%2Fdouble-quote-escape.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0d928b6ed01ec66b4f6c4ea07d838bdcc5db4f23/src%2Ftest%2Frustdoc%2Fdouble-quote-escape.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fdouble-quote-escape.rs?ref=0d928b6ed01ec66b4f6c4ea07d838bdcc5db4f23", "patch": "@@ -8,5 +8,5 @@ pub trait Foo<T> {\n pub struct Bar;\n \n // @has foo/struct.Bar.html\n-// @has - '//*[@class=\"sidebar-links\"]/a[@href=\"#impl-Foo%3Cunsafe%20extern%20%22C%22%20fn()%3E\"]' 'Foo<unsafe extern \"C\" fn()>'\n+// @has - '//*[@class=\"sidebar-elems\"]//section//a[@href=\"#impl-Foo%3Cunsafe%20extern%20%22C%22%20fn()%3E\"]' 'Foo<unsafe extern \"C\" fn()>'\n impl Foo<unsafe extern \"C\" fn()> for Bar {}"}, {"sha": "1268c9587f84724f3c0349ab6335567f4ac67347", "filename": "src/test/rustdoc/generic-impl.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0d928b6ed01ec66b4f6c4ea07d838bdcc5db4f23/src%2Ftest%2Frustdoc%2Fgeneric-impl.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0d928b6ed01ec66b4f6c4ea07d838bdcc5db4f23/src%2Ftest%2Frustdoc%2Fgeneric-impl.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fgeneric-impl.rs?ref=0d928b6ed01ec66b4f6c4ea07d838bdcc5db4f23", "patch": "@@ -7,7 +7,7 @@ pub struct Bar;\n \n // @has foo/struct.Foo.html '//*[@id=\"impl-ToString\"]//h3[@class=\"code-header in-band\"]' 'impl<T> ToString for T'\n pub struct Foo;\n-// @has foo/struct.Foo.html '//div[@class=\"sidebar-links\"]/a[@href=\"#impl-ToString\"]' 'ToString'\n+// @has foo/struct.Foo.html '//*[@class=\"sidebar-elems\"]//section//a[@href=\"#impl-ToString\"]' 'ToString'\n \n impl fmt::Display for Foo {\n     fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {"}, {"sha": "50f4af3aaafef91a61c64eb786846e1486544bad", "filename": "src/test/rustdoc/method-list.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/0d928b6ed01ec66b4f6c4ea07d838bdcc5db4f23/src%2Ftest%2Frustdoc%2Fmethod-list.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0d928b6ed01ec66b4f6c4ea07d838bdcc5db4f23/src%2Ftest%2Frustdoc%2Fmethod-list.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fmethod-list.rs?ref=0d928b6ed01ec66b4f6c4ea07d838bdcc5db4f23", "patch": "@@ -1,8 +1,8 @@\n #![crate_name = \"foo\"]\n \n // @has foo/struct.Foo.html\n-// @has - '//*[@class=\"sidebar-links\"]/a' 'super_long_name'\n-// @has - '//*[@class=\"sidebar-links\"]/a' 'Disp'\n+// @has - '//*[@class=\"sidebar-elems\"]//section//a' 'super_long_name'\n+// @has - '//*[@class=\"sidebar-elems\"]//section//a' 'Disp'\n pub struct Foo(usize);\n \n impl Foo {"}, {"sha": "b995fff1f9aa70633373f937aa762100917c57f0", "filename": "src/test/rustdoc/negative-impl-sidebar.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0d928b6ed01ec66b4f6c4ea07d838bdcc5db4f23/src%2Ftest%2Frustdoc%2Fnegative-impl-sidebar.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0d928b6ed01ec66b4f6c4ea07d838bdcc5db4f23/src%2Ftest%2Frustdoc%2Fnegative-impl-sidebar.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fnegative-impl-sidebar.rs?ref=0d928b6ed01ec66b4f6c4ea07d838bdcc5db4f23", "patch": "@@ -5,5 +5,5 @@ pub struct Foo;\n \n // @has foo/struct.Foo.html\n // @has - '//*[@class=\"sidebar-title\"]/a[@href=\"#trait-implementations\"]' 'Trait Implementations'\n-// @has - '//*[@class=\"sidebar-links\"]/a' '!Sync'\n+// @has - '//*[@class=\"sidebar-elems\"]//section//a' '!Sync'\n impl !Sync for Foo {}"}, {"sha": "619f40eff8984fc6ee45fdf1f58fa233b23e60c2", "filename": "src/test/rustdoc/recursive-deref-sidebar.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/0d928b6ed01ec66b4f6c4ea07d838bdcc5db4f23/src%2Ftest%2Frustdoc%2Frecursive-deref-sidebar.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0d928b6ed01ec66b4f6c4ea07d838bdcc5db4f23/src%2Ftest%2Frustdoc%2Frecursive-deref-sidebar.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Frecursive-deref-sidebar.rs?ref=0d928b6ed01ec66b4f6c4ea07d838bdcc5db4f23", "patch": "@@ -9,13 +9,13 @@ impl B { pub fn foo_b(&self) {} }\n pub struct C {}\n impl C { pub fn foo_c(&self) {} }\n \n-// @has recursive_deref_sidebar/struct.A.html '//div[@class=\"sidebar-links\"]' 'foo_b'\n+// @has recursive_deref_sidebar/struct.A.html '//*[@class=\"sidebar-elems\"]//section' 'foo_b'\n impl Deref for A {\n     type Target = B;\n     fn deref(&self) -> &B { todo!() }\n }\n \n-// @has recursive_deref_sidebar/struct.A.html '//div[@class=\"sidebar-links\"]' 'foo_c'\n+// @has recursive_deref_sidebar/struct.A.html '//*[@class=\"sidebar-elems\"]//section' 'foo_c'\n impl Deref for B {\n     type Target = C;\n     fn deref(&self) -> &C { todo!() }"}, {"sha": "375cad9da7f88010070b87b326750d55e63c5dc7", "filename": "src/test/rustdoc/sidebar-items.rs", "status": "modified", "additions": 12, "deletions": 12, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/0d928b6ed01ec66b4f6c4ea07d838bdcc5db4f23/src%2Ftest%2Frustdoc%2Fsidebar-items.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0d928b6ed01ec66b4f6c4ea07d838bdcc5db4f23/src%2Ftest%2Frustdoc%2Fsidebar-items.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fsidebar-items.rs?ref=0d928b6ed01ec66b4f6c4ea07d838bdcc5db4f23", "patch": "@@ -2,13 +2,13 @@\n \n // @has foo/trait.Foo.html\n // @has - '//*[@class=\"sidebar-title\"]/a[@href=\"#required-methods\"]' 'Required Methods'\n-// @has - '//*[@class=\"sidebar-links\"]/a' 'bar'\n+// @has - '//*[@class=\"sidebar-elems\"]//section//a' 'bar'\n // @has - '//*[@class=\"sidebar-title\"]/a[@href=\"#provided-methods\"]' 'Provided Methods'\n-// @has - '//*[@class=\"sidebar-links\"]/a' 'foo'\n+// @has - '//*[@class=\"sidebar-elems\"]//section//a' 'foo'\n // @has - '//*[@class=\"sidebar-title\"]/a[@href=\"#associated-const\"]' 'Associated Constants'\n-// @has - '//*[@class=\"sidebar-links\"]/a' 'BAR'\n+// @has - '//*[@class=\"sidebar-elems\"]//section//a' 'BAR'\n // @has - '//*[@class=\"sidebar-title\"]/a[@href=\"#associated-types\"]' 'Associated Types'\n-// @has - '//*[@class=\"sidebar-links\"]/a' 'Output'\n+// @has - '//*[@class=\"sidebar-elems\"]//section//a' 'Output'\n pub trait Foo {\n     const BAR: u32 = 0;\n     type Output: ?Sized;\n@@ -19,9 +19,9 @@ pub trait Foo {\n \n // @has foo/struct.Bar.html\n // @has - '//*[@class=\"sidebar-title\"]/a[@href=\"#fields\"]' 'Fields'\n-// @has - '//*[@class=\"sidebar-links\"]/a[@href=\"#structfield.f\"]' 'f'\n-// @has - '//*[@class=\"sidebar-links\"]/a[@href=\"#structfield.u\"]' 'u'\n-// @!has - '//*[@class=\"sidebar-links\"]/a' 'waza'\n+// @has - '//*[@class=\"sidebar-elems\"]//section//a[@href=\"#structfield.f\"]' 'f'\n+// @has - '//*[@class=\"sidebar-elems\"]//section//a[@href=\"#structfield.u\"]' 'u'\n+// @!has - '//*[@class=\"sidebar-elems\"]//section//a' 'waza'\n pub struct Bar {\n     pub f: u32,\n     pub u: u32,\n@@ -30,18 +30,18 @@ pub struct Bar {\n \n // @has foo/enum.En.html\n // @has - '//*[@class=\"sidebar-title\"]/a[@href=\"#variants\"]' 'Variants'\n-// @has - '//*[@class=\"sidebar-links\"]/a' 'Foo'\n-// @has - '//*[@class=\"sidebar-links\"]/a' 'Bar'\n+// @has - '//*[@class=\"sidebar-elems\"]//section//a' 'Foo'\n+// @has - '//*[@class=\"sidebar-elems\"]//section//a' 'Bar'\n pub enum En {\n     Foo,\n     Bar,\n }\n \n // @has foo/union.MyUnion.html\n // @has - '//*[@class=\"sidebar-title\"]/a[@href=\"#fields\"]' 'Fields'\n-// @has - '//*[@class=\"sidebar-links\"]/a[@href=\"#structfield.f1\"]' 'f1'\n-// @has - '//*[@class=\"sidebar-links\"]/a[@href=\"#structfield.f2\"]' 'f2'\n-// @!has - '//*[@class=\"sidebar-links\"]/a' 'waza'\n+// @has - '//*[@class=\"sidebar-elems\"]//section//a[@href=\"#structfield.f1\"]' 'f1'\n+// @has - '//*[@class=\"sidebar-elems\"]//section//a[@href=\"#structfield.f2\"]' 'f2'\n+// @!has - '//*[@class=\"sidebar-elems\"]//section//a' 'waza'\n pub union MyUnion {\n     pub f1: u32,\n     pub f2: f32,"}, {"sha": "7858f35a2616e57c3d61802956c3900683ba08c3", "filename": "src/test/rustdoc/sidebar-link-generation.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0d928b6ed01ec66b4f6c4ea07d838bdcc5db4f23/src%2Ftest%2Frustdoc%2Fsidebar-link-generation.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0d928b6ed01ec66b4f6c4ea07d838bdcc5db4f23/src%2Ftest%2Frustdoc%2Fsidebar-link-generation.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fsidebar-link-generation.rs?ref=0d928b6ed01ec66b4f6c4ea07d838bdcc5db4f23", "patch": "@@ -1,6 +1,6 @@\n #![crate_name = \"foo\"]\n \n-// @has foo/struct.SomeStruct.html '//*[@class=\"sidebar-links\"]/a[@href=\"#method.some_fn-1\"]' \\\n+// @has foo/struct.SomeStruct.html '//*[@class=\"sidebar-elems\"]//section//li/a[@href=\"#method.some_fn-1\"]' \\\n //          \"some_fn\"\n pub struct SomeStruct<T> { _inner: T }\n "}, {"sha": "15515039659991b29fffeeb81e80ef975c974597", "filename": "src/test/rustdoc/sidebar-links-to-foreign-impl.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/0d928b6ed01ec66b4f6c4ea07d838bdcc5db4f23/src%2Ftest%2Frustdoc%2Fsidebar-links-to-foreign-impl.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0d928b6ed01ec66b4f6c4ea07d838bdcc5db4f23/src%2Ftest%2Frustdoc%2Fsidebar-links-to-foreign-impl.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fsidebar-links-to-foreign-impl.rs?ref=0d928b6ed01ec66b4f6c4ea07d838bdcc5db4f23", "patch": "@@ -5,9 +5,9 @@\n // @has foo/trait.Foo.html\n // @has - '//*[@class=\"sidebar-title\"]/a[@href=\"#foreign-impls\"]' 'Implementations on Foreign Types'\n // @has - '//h2[@id=\"foreign-impls\"]' 'Implementations on Foreign Types'\n-// @has - '//*[@class=\"sidebar-links\"]/a[@href=\"#impl-Foo-for-u32\"]' 'u32'\n+// @has - '//*[@class=\"sidebar-elems\"]//section//a[@href=\"#impl-Foo-for-u32\"]' 'u32'\n // @has - '//*[@id=\"impl-Foo-for-u32\"]//h3[@class=\"code-header in-band\"]' 'impl Foo for u32'\n-// @has - '//*[@class=\"sidebar-links\"]/a[@href=\"#impl-Foo-for-%26%27a%20str\"]' \"&'a str\"\n+// @has - '//*[@class=\"sidebar-elems\"]//section//a[@href=\"#impl-Foo-for-%26%27a%20str\"]' \"&'a str\"\n // @has - '//*[@id=\"impl-Foo-for-%26%27a%20str\"]//h3[@class=\"code-header in-band\"]' \"impl<'a> Foo for &'a str\"\n pub trait Foo {}\n "}]}