{"sha": "27fe959c2c99207828cedfe19dbf96debd3be591", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI3ZmU5NTljMmM5OTIwNzgyOGNlZGZlMTlkYmY5NmRlYmQzYmU1OTE=", "commit": {"author": {"name": "LeSeulArtichaut", "email": "leseulartichaut@gmail.com", "date": "2021-05-14T21:19:59Z"}, "committer": {"name": "LeSeulArtichaut", "email": "leseulartichaut@gmail.com", "date": "2021-05-19T22:01:05Z"}, "message": "Check for raw pointer dereference in THIR unsafeck", "tree": {"sha": "032331ed30cfa08471cd2a400b3f47fb618dd4a4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/032331ed30cfa08471cd2a400b3f47fb618dd4a4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/27fe959c2c99207828cedfe19dbf96debd3be591", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/27fe959c2c99207828cedfe19dbf96debd3be591", "html_url": "https://github.com/rust-lang/rust/commit/27fe959c2c99207828cedfe19dbf96debd3be591", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/27fe959c2c99207828cedfe19dbf96debd3be591/comments", "author": {"login": "LeSeulArtichaut", "id": 38361244, "node_id": "MDQ6VXNlcjM4MzYxMjQ0", "avatar_url": "https://avatars.githubusercontent.com/u/38361244?v=4", "gravatar_id": "", "url": "https://api.github.com/users/LeSeulArtichaut", "html_url": "https://github.com/LeSeulArtichaut", "followers_url": "https://api.github.com/users/LeSeulArtichaut/followers", "following_url": "https://api.github.com/users/LeSeulArtichaut/following{/other_user}", "gists_url": "https://api.github.com/users/LeSeulArtichaut/gists{/gist_id}", "starred_url": "https://api.github.com/users/LeSeulArtichaut/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/LeSeulArtichaut/subscriptions", "organizations_url": "https://api.github.com/users/LeSeulArtichaut/orgs", "repos_url": "https://api.github.com/users/LeSeulArtichaut/repos", "events_url": "https://api.github.com/users/LeSeulArtichaut/events{/privacy}", "received_events_url": "https://api.github.com/users/LeSeulArtichaut/received_events", "type": "User", "site_admin": false}, "committer": {"login": "LeSeulArtichaut", "id": 38361244, "node_id": "MDQ6VXNlcjM4MzYxMjQ0", "avatar_url": "https://avatars.githubusercontent.com/u/38361244?v=4", "gravatar_id": "", "url": "https://api.github.com/users/LeSeulArtichaut", "html_url": "https://github.com/LeSeulArtichaut", "followers_url": "https://api.github.com/users/LeSeulArtichaut/followers", "following_url": "https://api.github.com/users/LeSeulArtichaut/following{/other_user}", "gists_url": "https://api.github.com/users/LeSeulArtichaut/gists{/gist_id}", "starred_url": "https://api.github.com/users/LeSeulArtichaut/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/LeSeulArtichaut/subscriptions", "organizations_url": "https://api.github.com/users/LeSeulArtichaut/orgs", "repos_url": "https://api.github.com/users/LeSeulArtichaut/repos", "events_url": "https://api.github.com/users/LeSeulArtichaut/events{/privacy}", "received_events_url": "https://api.github.com/users/LeSeulArtichaut/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f94942d8421dc4b1da86d07069571ddb43127235", "url": "https://api.github.com/repos/rust-lang/rust/commits/f94942d8421dc4b1da86d07069571ddb43127235", "html_url": "https://github.com/rust-lang/rust/commit/f94942d8421dc4b1da86d07069571ddb43127235"}], "stats": {"total": 123, "additions": 113, "deletions": 10}, "files": [{"sha": "c1866b9a4379107c2e2d7e4ccd62fc8cbb4b8fe4", "filename": "compiler/rustc_mir_build/src/check_unsafety.rs", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/27fe959c2c99207828cedfe19dbf96debd3be591/compiler%2Frustc_mir_build%2Fsrc%2Fcheck_unsafety.rs", "raw_url": "https://github.com/rust-lang/rust/raw/27fe959c2c99207828cedfe19dbf96debd3be591/compiler%2Frustc_mir_build%2Fsrc%2Fcheck_unsafety.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir_build%2Fsrc%2Fcheck_unsafety.rs?ref=27fe959c2c99207828cedfe19dbf96debd3be591", "patch": "@@ -153,6 +153,11 @@ impl<'a, 'tcx> Visitor<'a, 'tcx> for UnsafetyVisitor<'a, 'tcx> {\n             ExprKind::InlineAsm { .. } | ExprKind::LlvmInlineAsm { .. } => {\n                 self.requires_unsafe(expr.span, UseOfInlineAssembly);\n             }\n+            ExprKind::Deref { arg } => {\n+                if self.thir[arg].ty.is_unsafe_ptr() {\n+                    self.requires_unsafe(expr.span, DerefOfRawPointer);\n+                }\n+            }\n             _ => {}\n         }\n \n@@ -203,7 +208,6 @@ enum UnsafeOpKind {\n     UseOfMutableStatic,\n     #[allow(dead_code)] // FIXME\n     UseOfExternStatic,\n-    #[allow(dead_code)] // FIXME\n     DerefOfRawPointer,\n     #[allow(dead_code)] // FIXME\n     AssignToDroppingUnionField,"}, {"sha": "3afbea07931d40d7c6e49f63d6598a2e60fe7bc9", "filename": "src/test/ui/generator/issue-45729-unsafe-in-generator.mir.stderr", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/27fe959c2c99207828cedfe19dbf96debd3be591/src%2Ftest%2Fui%2Fgenerator%2Fissue-45729-unsafe-in-generator.mir.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/27fe959c2c99207828cedfe19dbf96debd3be591/src%2Ftest%2Fui%2Fgenerator%2Fissue-45729-unsafe-in-generator.mir.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fgenerator%2Fissue-45729-unsafe-in-generator.mir.stderr?ref=27fe959c2c99207828cedfe19dbf96debd3be591", "patch": "@@ -1,5 +1,5 @@\n error[E0133]: dereference of raw pointer is unsafe and requires unsafe function or block\n-  --> $DIR/issue-45729-unsafe-in-generator.rs:5:9\n+  --> $DIR/issue-45729-unsafe-in-generator.rs:8:9\n    |\n LL |         *(1 as *mut u32) = 42;\n    |         ^^^^^^^^^^^^^^^^^^^^^ dereference of raw pointer", "previous_filename": "src/test/ui/generator/issue-45729-unsafe-in-generator.stderr"}, {"sha": "379c36d2ca32187ceb96e38d470499988fd4bf02", "filename": "src/test/ui/generator/issue-45729-unsafe-in-generator.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/27fe959c2c99207828cedfe19dbf96debd3be591/src%2Ftest%2Fui%2Fgenerator%2Fissue-45729-unsafe-in-generator.rs", "raw_url": "https://github.com/rust-lang/rust/raw/27fe959c2c99207828cedfe19dbf96debd3be591/src%2Ftest%2Fui%2Fgenerator%2Fissue-45729-unsafe-in-generator.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fgenerator%2Fissue-45729-unsafe-in-generator.rs?ref=27fe959c2c99207828cedfe19dbf96debd3be591", "patch": "@@ -1,3 +1,6 @@\n+// revisions: mir thir\n+// [thir]compile-flags: -Z thir-unsafeck\n+\n #![feature(generators)]\n \n fn main() {"}, {"sha": "a0905f98ca7c62d1157bbc577c31265a43ad8ec7", "filename": "src/test/ui/generator/issue-45729-unsafe-in-generator.thir.stderr", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/27fe959c2c99207828cedfe19dbf96debd3be591/src%2Ftest%2Fui%2Fgenerator%2Fissue-45729-unsafe-in-generator.thir.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/27fe959c2c99207828cedfe19dbf96debd3be591/src%2Ftest%2Fui%2Fgenerator%2Fissue-45729-unsafe-in-generator.thir.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fgenerator%2Fissue-45729-unsafe-in-generator.thir.stderr?ref=27fe959c2c99207828cedfe19dbf96debd3be591", "patch": "@@ -0,0 +1,11 @@\n+error[E0133]: dereference of raw pointer is unsafe and requires unsafe function or block\n+  --> $DIR/issue-45729-unsafe-in-generator.rs:8:9\n+   |\n+LL |         *(1 as *mut u32) = 42;\n+   |         ^^^^^^^^^^^^^^^^ dereference of raw pointer\n+   |\n+   = note: raw pointers may be NULL, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0133`."}, {"sha": "96e50ba67991c62a91423fce16d9172b47d203a9", "filename": "src/test/ui/issues/issue-47412.mir.stderr", "status": "renamed", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/27fe959c2c99207828cedfe19dbf96debd3be591/src%2Ftest%2Fui%2Fissues%2Fissue-47412.mir.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/27fe959c2c99207828cedfe19dbf96debd3be591/src%2Ftest%2Fui%2Fissues%2Fissue-47412.mir.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-47412.mir.stderr?ref=27fe959c2c99207828cedfe19dbf96debd3be591", "patch": "@@ -1,13 +1,13 @@\n error[E0133]: access to union field is unsafe and requires unsafe function or block\n-  --> $DIR/issue-47412.rs:11:11\n+  --> $DIR/issue-47412.rs:14:11\n    |\n LL |     match u.void {}\n    |           ^^^^^^ access to union field\n    |\n    = note: the field may not be properly initialized: using uninitialized data will cause undefined behavior\n \n error[E0133]: dereference of raw pointer is unsafe and requires unsafe function or block\n-  --> $DIR/issue-47412.rs:17:11\n+  --> $DIR/issue-47412.rs:21:11\n    |\n LL |     match *ptr {}\n    |           ^^^^ dereference of raw pointer", "previous_filename": "src/test/ui/issues/issue-47412.stderr"}, {"sha": "d395285eee0a03cf01a1c0a79b6e1e951874f8a1", "filename": "src/test/ui/issues/issue-47412.rs", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/27fe959c2c99207828cedfe19dbf96debd3be591/src%2Ftest%2Fui%2Fissues%2Fissue-47412.rs", "raw_url": "https://github.com/rust-lang/rust/raw/27fe959c2c99207828cedfe19dbf96debd3be591/src%2Ftest%2Fui%2Fissues%2Fissue-47412.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-47412.rs?ref=27fe959c2c99207828cedfe19dbf96debd3be591", "patch": "@@ -1,3 +1,6 @@\n+// revisions: mir thir\n+// [thir]compile-flags: -Z thir-unsafeck\n+\n #[derive(Copy, Clone)]\n enum Void {}\n \n@@ -9,7 +12,8 @@ fn union_field() {\n     union Union { unit: (), void: Void }\n     let u = Union { unit: () };\n     match u.void {}\n-    //~^ ERROR access to union field is unsafe\n+    //[mir]~^ ERROR access to union field is unsafe\n+    // FIXME(thir-unsafeck): AccessToUnionField unimplemented\n }\n \n fn raw_ptr_deref() {"}, {"sha": "2d6004b7911d6255ce0e00b7a1f9b5fb7a61c1db", "filename": "src/test/ui/issues/issue-47412.thir.stderr", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/27fe959c2c99207828cedfe19dbf96debd3be591/src%2Ftest%2Fui%2Fissues%2Fissue-47412.thir.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/27fe959c2c99207828cedfe19dbf96debd3be591/src%2Ftest%2Fui%2Fissues%2Fissue-47412.thir.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-47412.thir.stderr?ref=27fe959c2c99207828cedfe19dbf96debd3be591", "patch": "@@ -0,0 +1,11 @@\n+error[E0133]: dereference of raw pointer is unsafe and requires unsafe function or block\n+  --> $DIR/issue-47412.rs:21:11\n+   |\n+LL |     match *ptr {}\n+   |           ^^^^ dereference of raw pointer\n+   |\n+   = note: raw pointers may be NULL, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0133`."}, {"sha": "ea7b2048e836fb96d775565f6c6a87f39f4ba2d5", "filename": "src/test/ui/traits/safety-fn-body.mir.stderr", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/27fe959c2c99207828cedfe19dbf96debd3be591/src%2Ftest%2Fui%2Ftraits%2Fsafety-fn-body.mir.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/27fe959c2c99207828cedfe19dbf96debd3be591/src%2Ftest%2Fui%2Ftraits%2Fsafety-fn-body.mir.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftraits%2Fsafety-fn-body.mir.stderr?ref=27fe959c2c99207828cedfe19dbf96debd3be591", "patch": "@@ -1,5 +1,5 @@\n error[E0133]: dereference of raw pointer is unsafe and requires unsafe function or block\n-  --> $DIR/safety-fn-body.rs:11:9\n+  --> $DIR/safety-fn-body.rs:14:9\n    |\n LL |         *self += 1;\n    |         ^^^^^^^^^^ dereference of raw pointer", "previous_filename": "src/test/ui/traits/safety-fn-body.stderr"}, {"sha": "2cc4fe1b344a494be6ce56714eac35dcd0b9e4d5", "filename": "src/test/ui/traits/safety-fn-body.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/27fe959c2c99207828cedfe19dbf96debd3be591/src%2Ftest%2Fui%2Ftraits%2Fsafety-fn-body.rs", "raw_url": "https://github.com/rust-lang/rust/raw/27fe959c2c99207828cedfe19dbf96debd3be591/src%2Ftest%2Fui%2Ftraits%2Fsafety-fn-body.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftraits%2Fsafety-fn-body.rs?ref=27fe959c2c99207828cedfe19dbf96debd3be591", "patch": "@@ -1,6 +1,9 @@\n // Check that an unsafe impl does not imply that unsafe actions are\n // legal in the methods.\n \n+// revisions: mir thir\n+// [thir]compile-flags: -Z thir-unsafeck\n+\n unsafe trait UnsafeTrait : Sized {\n     fn foo(self) { }\n }"}, {"sha": "94a1a2a03cdf2bf4a3ab95ebefb751962fa769ac", "filename": "src/test/ui/traits/safety-fn-body.thir.stderr", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/27fe959c2c99207828cedfe19dbf96debd3be591/src%2Ftest%2Fui%2Ftraits%2Fsafety-fn-body.thir.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/27fe959c2c99207828cedfe19dbf96debd3be591/src%2Ftest%2Fui%2Ftraits%2Fsafety-fn-body.thir.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftraits%2Fsafety-fn-body.thir.stderr?ref=27fe959c2c99207828cedfe19dbf96debd3be591", "patch": "@@ -0,0 +1,11 @@\n+error[E0133]: dereference of raw pointer is unsafe and requires unsafe function or block\n+  --> $DIR/safety-fn-body.rs:14:9\n+   |\n+LL |         *self += 1;\n+   |         ^^^^^ dereference of raw pointer\n+   |\n+   = note: raw pointers may be NULL, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0133`."}, {"sha": "33f762ccf63016a0f1f9a94c5bd3ec1614b18e7a", "filename": "src/test/ui/unsafe/issue-45087-unreachable-unsafe.mir.stderr", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/27fe959c2c99207828cedfe19dbf96debd3be591/src%2Ftest%2Fui%2Funsafe%2Fissue-45087-unreachable-unsafe.mir.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/27fe959c2c99207828cedfe19dbf96debd3be591/src%2Ftest%2Fui%2Funsafe%2Fissue-45087-unreachable-unsafe.mir.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Funsafe%2Fissue-45087-unreachable-unsafe.mir.stderr?ref=27fe959c2c99207828cedfe19dbf96debd3be591", "patch": "@@ -1,5 +1,5 @@\n error[E0133]: dereference of raw pointer is unsafe and requires unsafe function or block\n-  --> $DIR/issue-45087-unreachable-unsafe.rs:3:5\n+  --> $DIR/issue-45087-unreachable-unsafe.rs:6:5\n    |\n LL |     *(1 as *mut u32) = 42;\n    |     ^^^^^^^^^^^^^^^^^^^^^ dereference of raw pointer", "previous_filename": "src/test/ui/unsafe/issue-45087-unreachable-unsafe.stderr"}, {"sha": "071cea8fbd78bd905a4f9cfea5951de842ad05a7", "filename": "src/test/ui/unsafe/issue-45087-unreachable-unsafe.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/27fe959c2c99207828cedfe19dbf96debd3be591/src%2Ftest%2Fui%2Funsafe%2Fissue-45087-unreachable-unsafe.rs", "raw_url": "https://github.com/rust-lang/rust/raw/27fe959c2c99207828cedfe19dbf96debd3be591/src%2Ftest%2Fui%2Funsafe%2Fissue-45087-unreachable-unsafe.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Funsafe%2Fissue-45087-unreachable-unsafe.rs?ref=27fe959c2c99207828cedfe19dbf96debd3be591", "patch": "@@ -1,3 +1,6 @@\n+// revisions: mir thir\n+// [thir]compile-flags: -Z thir-unsafeck\n+\n fn main() {\n     return;\n     *(1 as *mut u32) = 42;"}, {"sha": "b89401ce837067a4fe8dbf62d6c363df24167936", "filename": "src/test/ui/unsafe/issue-45087-unreachable-unsafe.thir.stderr", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/27fe959c2c99207828cedfe19dbf96debd3be591/src%2Ftest%2Fui%2Funsafe%2Fissue-45087-unreachable-unsafe.thir.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/27fe959c2c99207828cedfe19dbf96debd3be591/src%2Ftest%2Fui%2Funsafe%2Fissue-45087-unreachable-unsafe.thir.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Funsafe%2Fissue-45087-unreachable-unsafe.thir.stderr?ref=27fe959c2c99207828cedfe19dbf96debd3be591", "patch": "@@ -0,0 +1,11 @@\n+error[E0133]: dereference of raw pointer is unsafe and requires unsafe function or block\n+  --> $DIR/issue-45087-unreachable-unsafe.rs:6:5\n+   |\n+LL |     *(1 as *mut u32) = 42;\n+   |     ^^^^^^^^^^^^^^^^ dereference of raw pointer\n+   |\n+   = note: raw pointers may be NULL, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0133`."}, {"sha": "fee645e4118def822b21cc723cc18c6a5d5095fd", "filename": "src/test/ui/unsafe/unsafe-fn-assign-deref-ptr.mir.stderr", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/27fe959c2c99207828cedfe19dbf96debd3be591/src%2Ftest%2Fui%2Funsafe%2Funsafe-fn-assign-deref-ptr.mir.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/27fe959c2c99207828cedfe19dbf96debd3be591/src%2Ftest%2Fui%2Funsafe%2Funsafe-fn-assign-deref-ptr.mir.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Funsafe%2Funsafe-fn-assign-deref-ptr.mir.stderr?ref=27fe959c2c99207828cedfe19dbf96debd3be591", "patch": "@@ -1,5 +1,5 @@\n error[E0133]: dereference of raw pointer is unsafe and requires unsafe function or block\n-  --> $DIR/unsafe-fn-assign-deref-ptr.rs:2:5\n+  --> $DIR/unsafe-fn-assign-deref-ptr.rs:5:5\n    |\n LL |     *p = 0;\n    |     ^^^^^^ dereference of raw pointer", "previous_filename": "src/test/ui/unsafe/unsafe-fn-assign-deref-ptr.stderr"}, {"sha": "a94e94375ae6a3bcbe88daa32597348b743f46cf", "filename": "src/test/ui/unsafe/unsafe-fn-assign-deref-ptr.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/27fe959c2c99207828cedfe19dbf96debd3be591/src%2Ftest%2Fui%2Funsafe%2Funsafe-fn-assign-deref-ptr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/27fe959c2c99207828cedfe19dbf96debd3be591/src%2Ftest%2Fui%2Funsafe%2Funsafe-fn-assign-deref-ptr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Funsafe%2Funsafe-fn-assign-deref-ptr.rs?ref=27fe959c2c99207828cedfe19dbf96debd3be591", "patch": "@@ -1,3 +1,6 @@\n+// revisions: mir thir\n+// [thir]compile-flags: -Z thir-unsafeck\n+\n fn f(p: *mut u8) {\n     *p = 0; //~ ERROR dereference of raw pointer is unsafe\n     return;"}, {"sha": "498d26d30ffcfc1fbcd4c7e08da2c9f09254a81c", "filename": "src/test/ui/unsafe/unsafe-fn-assign-deref-ptr.thir.stderr", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/27fe959c2c99207828cedfe19dbf96debd3be591/src%2Ftest%2Fui%2Funsafe%2Funsafe-fn-assign-deref-ptr.thir.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/27fe959c2c99207828cedfe19dbf96debd3be591/src%2Ftest%2Fui%2Funsafe%2Funsafe-fn-assign-deref-ptr.thir.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Funsafe%2Funsafe-fn-assign-deref-ptr.thir.stderr?ref=27fe959c2c99207828cedfe19dbf96debd3be591", "patch": "@@ -0,0 +1,11 @@\n+error[E0133]: dereference of raw pointer is unsafe and requires unsafe function or block\n+  --> $DIR/unsafe-fn-assign-deref-ptr.rs:5:5\n+   |\n+LL |     *p = 0;\n+   |     ^^ dereference of raw pointer\n+   |\n+   = note: raw pointers may be NULL, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0133`."}, {"sha": "a26149924458cd0c786af2d8063c857d8ccab44e", "filename": "src/test/ui/unsafe/unsafe-fn-deref-ptr.mir.stderr", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/27fe959c2c99207828cedfe19dbf96debd3be591/src%2Ftest%2Fui%2Funsafe%2Funsafe-fn-deref-ptr.mir.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/27fe959c2c99207828cedfe19dbf96debd3be591/src%2Ftest%2Fui%2Funsafe%2Funsafe-fn-deref-ptr.mir.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Funsafe%2Funsafe-fn-deref-ptr.mir.stderr?ref=27fe959c2c99207828cedfe19dbf96debd3be591", "patch": "@@ -1,5 +1,5 @@\n error[E0133]: dereference of raw pointer is unsafe and requires unsafe function or block\n-  --> $DIR/unsafe-fn-deref-ptr.rs:2:12\n+  --> $DIR/unsafe-fn-deref-ptr.rs:5:12\n    |\n LL |     return *p;\n    |            ^^ dereference of raw pointer", "previous_filename": "src/test/ui/unsafe/unsafe-fn-deref-ptr.stderr"}, {"sha": "dc989535bd650a8551b29dc1fec404fe911a24ca", "filename": "src/test/ui/unsafe/unsafe-fn-deref-ptr.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/27fe959c2c99207828cedfe19dbf96debd3be591/src%2Ftest%2Fui%2Funsafe%2Funsafe-fn-deref-ptr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/27fe959c2c99207828cedfe19dbf96debd3be591/src%2Ftest%2Fui%2Funsafe%2Funsafe-fn-deref-ptr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Funsafe%2Funsafe-fn-deref-ptr.rs?ref=27fe959c2c99207828cedfe19dbf96debd3be591", "patch": "@@ -1,3 +1,6 @@\n+// revisions: mir thir\n+// [thir]compile-flags: -Z thir-unsafeck\n+\n fn f(p: *const u8) -> u8 {\n     return *p; //~ ERROR dereference of raw pointer is unsafe\n }"}, {"sha": "6897e4e691ad009d114fdededd51a226fb75d1e8", "filename": "src/test/ui/unsafe/unsafe-fn-deref-ptr.thir.stderr", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/27fe959c2c99207828cedfe19dbf96debd3be591/src%2Ftest%2Fui%2Funsafe%2Funsafe-fn-deref-ptr.thir.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/27fe959c2c99207828cedfe19dbf96debd3be591/src%2Ftest%2Fui%2Funsafe%2Funsafe-fn-deref-ptr.thir.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Funsafe%2Funsafe-fn-deref-ptr.thir.stderr?ref=27fe959c2c99207828cedfe19dbf96debd3be591", "patch": "@@ -0,0 +1,11 @@\n+error[E0133]: dereference of raw pointer is unsafe and requires unsafe function or block\n+  --> $DIR/unsafe-fn-deref-ptr.rs:5:12\n+   |\n+LL |     return *p;\n+   |            ^^ dereference of raw pointer\n+   |\n+   = note: raw pointers may be NULL, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0133`."}, {"sha": "99808495ea6757b2c73ae47906ad28b227053e36", "filename": "src/test/ui/unsafe/unsafe-unstable-const-fn.mir.stderr", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/27fe959c2c99207828cedfe19dbf96debd3be591/src%2Ftest%2Fui%2Funsafe%2Funsafe-unstable-const-fn.mir.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/27fe959c2c99207828cedfe19dbf96debd3be591/src%2Ftest%2Fui%2Funsafe%2Funsafe-unstable-const-fn.mir.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Funsafe%2Funsafe-unstable-const-fn.mir.stderr?ref=27fe959c2c99207828cedfe19dbf96debd3be591", "patch": "@@ -1,5 +1,5 @@\n error[E0133]: dereference of raw pointer is unsafe and requires unsafe function or block\n-  --> $DIR/unsafe-unstable-const-fn.rs:8:5\n+  --> $DIR/unsafe-unstable-const-fn.rs:11:5\n    |\n LL |     *a == b\n    |     ^^ dereference of raw pointer", "previous_filename": "src/test/ui/unsafe/unsafe-unstable-const-fn.stderr"}, {"sha": "0476759ca6d980f44af8889e640d5030178e0f79", "filename": "src/test/ui/unsafe/unsafe-unstable-const-fn.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/27fe959c2c99207828cedfe19dbf96debd3be591/src%2Ftest%2Fui%2Funsafe%2Funsafe-unstable-const-fn.rs", "raw_url": "https://github.com/rust-lang/rust/raw/27fe959c2c99207828cedfe19dbf96debd3be591/src%2Ftest%2Fui%2Funsafe%2Funsafe-unstable-const-fn.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Funsafe%2Funsafe-unstable-const-fn.rs?ref=27fe959c2c99207828cedfe19dbf96debd3be591", "patch": "@@ -1,3 +1,6 @@\n+// revisions: mir thir\n+// [thir]compile-flags: -Z thir-unsafeck\n+\n #![stable(feature = \"foo\", since = \"1.33.0\")]\n #![feature(staged_api)]\n #![feature(const_raw_ptr_deref)]"}, {"sha": "49d6a96860b907c858a622123d14e6acc6f287e3", "filename": "src/test/ui/unsafe/unsafe-unstable-const-fn.thir.stderr", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/27fe959c2c99207828cedfe19dbf96debd3be591/src%2Ftest%2Fui%2Funsafe%2Funsafe-unstable-const-fn.thir.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/27fe959c2c99207828cedfe19dbf96debd3be591/src%2Ftest%2Fui%2Funsafe%2Funsafe-unstable-const-fn.thir.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Funsafe%2Funsafe-unstable-const-fn.thir.stderr?ref=27fe959c2c99207828cedfe19dbf96debd3be591", "patch": "@@ -0,0 +1,11 @@\n+error[E0133]: dereference of raw pointer is unsafe and requires unsafe function or block\n+  --> $DIR/unsafe-unstable-const-fn.rs:11:5\n+   |\n+LL |     *a == b\n+   |     ^^ dereference of raw pointer\n+   |\n+   = note: raw pointers may be NULL, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0133`."}]}