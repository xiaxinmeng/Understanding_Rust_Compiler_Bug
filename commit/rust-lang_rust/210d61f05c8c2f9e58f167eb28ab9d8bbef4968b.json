{"sha": "210d61f05c8c2f9e58f167eb28ab9d8bbef4968b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjIxMGQ2MWYwNWM4YzJmOWU1OGYxNjdlYjI4YWI5ZDhiYmVmNDk2OGI=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2018-07-23T03:06:08Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2018-07-23T03:06:08Z"}, "message": "Auto merge of #52571 - oli-obk:promotion_abort, r=nagisa\n\nAbort if a promoted fails to be const evaluable and its runtime checks didn't trigger\n\nr? @eddyb\n\ncc @RalfJung @nagisa\n\ncc https://github.com/rust-lang/rust/issues/49760", "tree": {"sha": "64835cc660ba2f197f64f16039724c7f28e0382e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/64835cc660ba2f197f64f16039724c7f28e0382e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/210d61f05c8c2f9e58f167eb28ab9d8bbef4968b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/210d61f05c8c2f9e58f167eb28ab9d8bbef4968b", "html_url": "https://github.com/rust-lang/rust/commit/210d61f05c8c2f9e58f167eb28ab9d8bbef4968b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/210d61f05c8c2f9e58f167eb28ab9d8bbef4968b/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "02b0479c26b389f08e51da4fc5b6e99488fdb96f", "url": "https://api.github.com/repos/rust-lang/rust/commits/02b0479c26b389f08e51da4fc5b6e99488fdb96f", "html_url": "https://github.com/rust-lang/rust/commit/02b0479c26b389f08e51da4fc5b6e99488fdb96f"}, {"sha": "233a6e13ca2f6dec6590a6bf92dd73de303a9d00", "url": "https://api.github.com/repos/rust-lang/rust/commits/233a6e13ca2f6dec6590a6bf92dd73de303a9d00", "html_url": "https://github.com/rust-lang/rust/commit/233a6e13ca2f6dec6590a6bf92dd73de303a9d00"}], "stats": {"total": 49, "additions": 46, "deletions": 3}, "files": [{"sha": "52234af08c1ab5d8f7103a0e9681dac27f9905e9", "filename": "src/librustc_codegen_llvm/mir/operand.rs", "status": "modified", "additions": 8, "deletions": 3, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/210d61f05c8c2f9e58f167eb28ab9d8bbef4968b/src%2Flibrustc_codegen_llvm%2Fmir%2Foperand.rs", "raw_url": "https://github.com/rust-lang/rust/raw/210d61f05c8c2f9e58f167eb28ab9d8bbef4968b/src%2Flibrustc_codegen_llvm%2Fmir%2Foperand.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_llvm%2Fmir%2Foperand.rs?ref=210d61f05c8c2f9e58f167eb28ab9d8bbef4968b", "patch": "@@ -18,7 +18,7 @@ use rustc_data_structures::indexed_vec::Idx;\n use rustc_data_structures::sync::Lrc;\n \n use base;\n-use common::{CodegenCx, C_null, C_undef, C_usize};\n+use common::{CodegenCx, C_undef, C_usize};\n use builder::{Builder, MemFlags};\n use value::Value;\n use type_of::LayoutLlvmExt;\n@@ -411,7 +411,10 @@ impl<'a, 'tcx> FunctionCx<'a, 'tcx> {\n                     .unwrap_or_else(|err| {\n                         match constant.literal {\n                             mir::Literal::Promoted { .. } => {\n-                                // FIXME: generate a panic here\n+                                // this is unreachable as long as runtime\n+                                // and compile-time agree on values\n+                                // With floats that won't always be true\n+                                // so we generate an abort below\n                             },\n                             mir::Literal::Value { .. } => {\n                                 err.report_as_error(\n@@ -420,10 +423,12 @@ impl<'a, 'tcx> FunctionCx<'a, 'tcx> {\n                                 );\n                             },\n                         }\n+                        let fnname = bx.cx.get_intrinsic(&(\"llvm.trap\"));\n+                        bx.call(fnname, &[], None);\n                         // We've errored, so we don't have to produce working code.\n                         let layout = bx.cx.layout_of(ty);\n                         PlaceRef::new_sized(\n-                            C_null(layout.llvm_type(bx.cx).ptr_to()),\n+                            C_undef(layout.llvm_type(bx.cx).ptr_to()),\n                             layout,\n                             layout.align,\n                         ).load(bx)"}, {"sha": "29a4b9219923247447afc6c843c1a73113532d89", "filename": "src/test/run-pass/invalid_const_promotion.rs", "status": "added", "additions": 38, "deletions": 0, "changes": 38, "blob_url": "https://github.com/rust-lang/rust/blob/210d61f05c8c2f9e58f167eb28ab9d8bbef4968b/src%2Ftest%2Frun-pass%2Finvalid_const_promotion.rs", "raw_url": "https://github.com/rust-lang/rust/raw/210d61f05c8c2f9e58f167eb28ab9d8bbef4968b/src%2Ftest%2Frun-pass%2Finvalid_const_promotion.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Finvalid_const_promotion.rs?ref=210d61f05c8c2f9e58f167eb28ab9d8bbef4968b", "patch": "@@ -0,0 +1,38 @@\n+// Copyright 2018 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// ignore-wasm32\n+// ignore-emscripten\n+\n+#![feature(const_fn)]\n+#![allow(const_err)]\n+\n+use std::env;\n+use std::process::{Command, Stdio};\n+\n+const fn bar() -> usize { 0 - 1 }\n+\n+fn foo() {\n+    let _: &'static _ = &bar();\n+}\n+\n+fn main() {\n+    let args: Vec<String> = env::args().collect();\n+    if args.len() > 1 && args[1] == \"test\" {\n+        foo();\n+        return;\n+    }\n+\n+    let mut p = Command::new(&args[0])\n+        .stdout(Stdio::piped())\n+        .stdin(Stdio::piped())\n+        .arg(\"test\").output().unwrap();\n+    assert!(!p.status.success());\n+}"}]}