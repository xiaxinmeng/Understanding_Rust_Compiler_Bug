{"sha": "c87d2ccf88f1b9ca039d18530fd474e5ad868bc4", "node_id": "MDY6Q29tbWl0NzI0NzEyOmM4N2QyY2NmODhmMWI5Y2EwMzlkMTg1MzBmZDQ3NGU1YWQ4NjhiYzQ=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-05-08T06:56:26Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-05-08T10:43:43Z"}, "message": "test for #50518\n\nIt was fixed somewhere between 1.28.0 and 1.31.1\n\ncloses #50518", "tree": {"sha": "4777fffc2f5d4820136d9f87accdb832492145b6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4777fffc2f5d4820136d9f87accdb832492145b6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c87d2ccf88f1b9ca039d18530fd474e5ad868bc4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c87d2ccf88f1b9ca039d18530fd474e5ad868bc4", "html_url": "https://github.com/rust-lang/rust/commit/c87d2ccf88f1b9ca039d18530fd474e5ad868bc4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c87d2ccf88f1b9ca039d18530fd474e5ad868bc4/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c3b8ab5199af4a3c11d14b0cbdb17a641e8eee71", "url": "https://api.github.com/repos/rust-lang/rust/commits/c3b8ab5199af4a3c11d14b0cbdb17a641e8eee71", "html_url": "https://github.com/rust-lang/rust/commit/c3b8ab5199af4a3c11d14b0cbdb17a641e8eee71"}], "stats": {"total": 40, "additions": 40, "deletions": 0}, "files": [{"sha": "d776d181b62682301ea9a8e00e5d8c0939a1dbd6", "filename": "src/test/ui/issues/issue-50518.rs", "status": "added", "additions": 40, "deletions": 0, "changes": 40, "blob_url": "https://github.com/rust-lang/rust/blob/c87d2ccf88f1b9ca039d18530fd474e5ad868bc4/src%2Ftest%2Fui%2Fissues%2Fissue-50518.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c87d2ccf88f1b9ca039d18530fd474e5ad868bc4/src%2Ftest%2Fui%2Fissues%2Fissue-50518.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-50518.rs?ref=c87d2ccf88f1b9ca039d18530fd474e5ad868bc4", "patch": "@@ -0,0 +1,40 @@\n+// compile-pass\n+use std::marker::PhantomData;\n+\n+struct Meta<A> {\n+    value: i32,\n+    type_: PhantomData<A>\n+}\n+\n+trait MetaTrait {\n+    fn get_value(&self) -> i32;\n+}\n+\n+impl<A> MetaTrait for Meta<A> {\n+    fn get_value(&self) -> i32 { self.value }\n+}\n+\n+trait Bar {\n+    fn get_const(&self) -> &dyn MetaTrait;\n+}\n+\n+struct Foo<A> {\n+    _value: A\n+}\n+\n+impl<A: 'static> Foo<A> {\n+    const CONST: &'static dyn MetaTrait = &Meta::<Self> {\n+        value: 10,\n+        type_: PhantomData\n+    };\n+}\n+\n+impl<A: 'static> Bar for Foo<A> {\n+    fn get_const(&self) -> &dyn MetaTrait { Self::CONST }\n+}\n+\n+fn main() {\n+    let foo = Foo::<i32> { _value: 10 };\n+    let bar: &dyn Bar = &foo;\n+    println!(\"const {}\", bar.get_const().get_value());\n+}"}]}