{"sha": "2f0e6a3ba585e00205805d6cb9fdcbe4b1d1be63", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJmMGU2YTNiYTU4NWUwMDIwNTgwNWQ2Y2I5ZmRjYmU0YjFkMWJlNjM=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2018-03-10T13:31:06Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2018-03-10T13:31:06Z"}, "message": "Auto merge of #48388 - kyrias:relro-level-cg, r=alexcrichton\n\nAdd relro-level tests\n\nThe `relro-level` debugging flag was added in #43170 which was merged in July 2017.  This PR moves this flag to be a proper codegen flag.", "tree": {"sha": "7d1312a6d8de8f4937c1646dd6dde25f86f5ee03", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7d1312a6d8de8f4937c1646dd6dde25f86f5ee03"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2f0e6a3ba585e00205805d6cb9fdcbe4b1d1be63", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2f0e6a3ba585e00205805d6cb9fdcbe4b1d1be63", "html_url": "https://github.com/rust-lang/rust/commit/2f0e6a3ba585e00205805d6cb9fdcbe4b1d1be63", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2f0e6a3ba585e00205805d6cb9fdcbe4b1d1be63/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "87344aa59af2ebb868253228e2b558d701573dff", "url": "https://api.github.com/repos/rust-lang/rust/commits/87344aa59af2ebb868253228e2b558d701573dff", "html_url": "https://github.com/rust-lang/rust/commit/87344aa59af2ebb868253228e2b558d701573dff"}, {"sha": "1dbce4b0afb8f76eb7cd7aad0e3c34d4f7fc2274", "url": "https://api.github.com/repos/rust-lang/rust/commits/1dbce4b0afb8f76eb7cd7aad0e3c34d4f7fc2274", "html_url": "https://github.com/rust-lang/rust/commit/1dbce4b0afb8f76eb7cd7aad0e3c34d4f7fc2274"}], "stats": {"total": 69, "additions": 62, "deletions": 7}, "files": [{"sha": "9baee26770998a4ffe92f3bb53ad7d4a303134d9", "filename": "src/librustc_back/lib.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/2f0e6a3ba585e00205805d6cb9fdcbe4b1d1be63/src%2Flibrustc_back%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2f0e6a3ba585e00205805d6cb9fdcbe4b1d1be63/src%2Flibrustc_back%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_back%2Flib.rs?ref=2f0e6a3ba585e00205805d6cb9fdcbe4b1d1be63", "patch": "@@ -131,6 +131,7 @@ pub enum RelroLevel {\n     Full,\n     Partial,\n     Off,\n+    None,\n }\n \n impl RelroLevel {\n@@ -139,6 +140,7 @@ impl RelroLevel {\n             RelroLevel::Full => \"full\",\n             RelroLevel::Partial => \"partial\",\n             RelroLevel::Off => \"off\",\n+            RelroLevel::None => \"none\",\n         }\n     }\n }\n@@ -151,6 +153,7 @@ impl FromStr for RelroLevel {\n             \"full\" => Ok(RelroLevel::Full),\n             \"partial\" => Ok(RelroLevel::Partial),\n             \"off\" => Ok(RelroLevel::Off),\n+            \"none\" => Ok(RelroLevel::None),\n             _ => Err(()),\n         }\n     }\n@@ -162,6 +165,7 @@ impl ToJson for RelroLevel {\n             RelroLevel::Full => \"full\".to_json(),\n             RelroLevel::Partial => \"partial\".to_json(),\n             RelroLevel::Off => \"off\".to_json(),\n+            RelroLevel::None => \"None\".to_json(),\n         }\n     }\n }"}, {"sha": "250d85d45203ed5c261e27c1776049662c53b569", "filename": "src/librustc_back/target/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/2f0e6a3ba585e00205805d6cb9fdcbe4b1d1be63/src%2Flibrustc_back%2Ftarget%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2f0e6a3ba585e00205805d6cb9fdcbe4b1d1be63/src%2Flibrustc_back%2Ftarget%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_back%2Ftarget%2Fmod.rs?ref=2f0e6a3ba585e00205805d6cb9fdcbe4b1d1be63", "patch": "@@ -514,7 +514,7 @@ impl Default for TargetOptions {\n             has_rpath: false,\n             no_default_libraries: true,\n             position_independent_executables: false,\n-            relro_level: RelroLevel::Off,\n+            relro_level: RelroLevel::None,\n             pre_link_objects_exe: Vec::new(),\n             pre_link_objects_dll: Vec::new(),\n             post_link_objects: Vec::new(),"}, {"sha": "235a95f63e4ca8ae3f470c5aed26786248931a38", "filename": "src/librustc_trans/back/link.rs", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/2f0e6a3ba585e00205805d6cb9fdcbe4b1d1be63/src%2Flibrustc_trans%2Fback%2Flink.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2f0e6a3ba585e00205805d6cb9fdcbe4b1d1be63/src%2Flibrustc_trans%2Fback%2Flink.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Fback%2Flink.rs?ref=2f0e6a3ba585e00205805d6cb9fdcbe4b1d1be63", "patch": "@@ -1014,7 +1014,11 @@ fn link_args(cmd: &mut Linker,\n         RelroLevel::Partial => {\n             cmd.partial_relro();\n         },\n-        RelroLevel::Off => {},\n+        RelroLevel::Off => {\n+            cmd.no_relro();\n+        },\n+        RelroLevel::None => {\n+        },\n     }\n \n     // Pass optimization flags down to the linker."}, {"sha": "9bd7d83a19185135f3f4f9307f974b1583c22211", "filename": "src/librustc_trans/back/linker.rs", "status": "modified", "additions": 18, "deletions": 5, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/2f0e6a3ba585e00205805d6cb9fdcbe4b1d1be63/src%2Flibrustc_trans%2Fback%2Flinker.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2f0e6a3ba585e00205805d6cb9fdcbe4b1d1be63/src%2Flibrustc_trans%2Fback%2Flinker.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Fback%2Flinker.rs?ref=2f0e6a3ba585e00205805d6cb9fdcbe4b1d1be63", "patch": "@@ -113,8 +113,9 @@ pub trait Linker {\n     fn gc_sections(&mut self, keep_metadata: bool);\n     fn position_independent_executable(&mut self);\n     fn no_position_independent_executable(&mut self);\n-    fn partial_relro(&mut self);\n     fn full_relro(&mut self);\n+    fn partial_relro(&mut self);\n+    fn no_relro(&mut self);\n     fn optimize(&mut self);\n     fn debuginfo(&mut self);\n     fn no_default_libraries(&mut self);\n@@ -188,8 +189,9 @@ impl<'a> Linker for GccLinker<'a> {\n     fn add_object(&mut self, path: &Path) { self.cmd.arg(path); }\n     fn position_independent_executable(&mut self) { self.cmd.arg(\"-pie\"); }\n     fn no_position_independent_executable(&mut self) { self.cmd.arg(\"-no-pie\"); }\n-    fn partial_relro(&mut self) { self.linker_arg(\"-z,relro\"); }\n     fn full_relro(&mut self) { self.linker_arg(\"-z,relro,-z,now\"); }\n+    fn partial_relro(&mut self) { self.linker_arg(\"-z,relro\"); }\n+    fn no_relro(&mut self) { self.linker_arg(\"-z,norelro\"); }\n     fn build_static_executable(&mut self) { self.cmd.arg(\"-static\"); }\n     fn args(&mut self, args: &[String]) { self.cmd.args(args); }\n \n@@ -452,11 +454,15 @@ impl<'a> Linker for MsvcLinker<'a> {\n         // noop\n     }\n \n+    fn full_relro(&mut self) {\n+        // noop\n+    }\n+\n     fn partial_relro(&mut self) {\n         // noop\n     }\n \n-    fn full_relro(&mut self) {\n+    fn no_relro(&mut self) {\n         // noop\n     }\n \n@@ -664,11 +670,15 @@ impl<'a> Linker for EmLinker<'a> {\n         // noop\n     }\n \n+    fn full_relro(&mut self) {\n+        // noop\n+    }\n+\n     fn partial_relro(&mut self) {\n         // noop\n     }\n \n-    fn full_relro(&mut self) {\n+    fn no_relro(&mut self) {\n         // noop\n     }\n \n@@ -829,10 +839,13 @@ impl Linker for WasmLd {\n     fn position_independent_executable(&mut self) {\n     }\n \n+    fn full_relro(&mut self) {\n+    }\n+\n     fn partial_relro(&mut self) {\n     }\n \n-    fn full_relro(&mut self) {\n+    fn no_relro(&mut self) {\n     }\n \n     fn build_static_executable(&mut self) {"}, {"sha": "673ba9a9a02c8c2c8b0c9546227eb92913d8430e", "filename": "src/test/run-make/relro-levels/Makefile", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/2f0e6a3ba585e00205805d6cb9fdcbe4b1d1be63/src%2Ftest%2Frun-make%2Frelro-levels%2FMakefile", "raw_url": "https://github.com/rust-lang/rust/raw/2f0e6a3ba585e00205805d6cb9fdcbe4b1d1be63/src%2Ftest%2Frun-make%2Frelro-levels%2FMakefile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Frelro-levels%2FMakefile?ref=2f0e6a3ba585e00205805d6cb9fdcbe4b1d1be63", "patch": "@@ -0,0 +1,21 @@\n+-include ../tools.mk\n+\n+# This tests the different -Zrelro-level values, and makes sure that they they work properly.\n+\n+all:\n+ifeq ($(UNAME),Linux)\n+\t# Ensure that binaries built with the full relro level links them with both\n+\t# RELRO and BIND_NOW for doing eager symbol resolving.\n+\t$(RUSTC) -Zrelro-level=full hello.rs\n+\treadelf -l $(TMPDIR)/hello | grep -q GNU_RELRO\n+\treadelf -d $(TMPDIR)/hello | grep -q BIND_NOW\n+\n+\t$(RUSTC) -Zrelro-level=partial hello.rs\n+\treadelf -l $(TMPDIR)/hello | grep -q GNU_RELRO\n+\n+\t# Ensure that we're *not* built with RELRO when setting it to off.  We do\n+\t# not want to check for BIND_NOW however, as the linker might have that\n+\t# enabled by default.\n+\t$(RUSTC) -Zrelro-level=off hello.rs\n+\t! readelf -l $(TMPDIR)/hello | grep -q GNU_RELRO\n+endif"}, {"sha": "41782851a1a6d763c5487a0ae35edc01fb71d6fb", "filename": "src/test/run-make/relro-levels/hello.rs", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/2f0e6a3ba585e00205805d6cb9fdcbe4b1d1be63/src%2Ftest%2Frun-make%2Frelro-levels%2Fhello.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2f0e6a3ba585e00205805d6cb9fdcbe4b1d1be63/src%2Ftest%2Frun-make%2Frelro-levels%2Fhello.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Frelro-levels%2Fhello.rs?ref=2f0e6a3ba585e00205805d6cb9fdcbe4b1d1be63", "patch": "@@ -0,0 +1,13 @@\n+// Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+fn main() {\n+    println!(\"Hello, world!\");\n+}"}]}