{"sha": "8bcf4b0efc3a11cc4745e128f237392387300e93", "node_id": "C_kwDOAAsO6NoAKDhiY2Y0YjBlZmMzYTExY2M0NzQ1ZTEyOGYyMzczOTIzODczMDBlOTM", "commit": {"author": {"name": "Michael Goulet", "email": "michael@errs.io", "date": "2022-05-06T02:34:26Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-05-06T02:34:26Z"}, "message": "Rollup merge of #96744 - est31:join_osstr, r=thomcc\n\nImplement [OsStr]::join\n\nImplements join for `OsStr` and `OsString` slices:\n\n```Rust\n    let strings = [OsStr::new(\"hello\"), OsStr::new(\"dear\"), OsStr::new(\"world\")];\n    assert_eq!(\"hello dear world\", strings.join(OsStr::new(\" \")));\n````\n\nThis saves one from converting to strings and back, or from implementing it manually.", "tree": {"sha": "c4a759571a0c0813473f9fe4978493f9de3cba82", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c4a759571a0c0813473f9fe4978493f9de3cba82"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8bcf4b0efc3a11cc4745e128f237392387300e93", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJidIkzCRBK7hj4Ov3rIwAAlVIIAH5FSFzuzbPtJtgJPj/Q6u2Q\nd2ToVylkljv8HqQ3JfpUjUrGfyGEauAx7YhWMLuJPtuLJiVyxVhb9Exql0hpFwz6\nwOzpT8wThENrIdYfP0VEgv0zZdV8IdgUPNALq4OBptRN0j9Mb35ld1/0AFbL+ozx\nXf2KzzkniBybnhlRiFdGVgaXv5Nni0NB1AOl7w/r5/aQ7Zi6/YbL8dreGqimJjJZ\nA5iF5kTTE6+ZfsVaIrO4jS5U+t9hPfyCs3DPG4RdWnhSnx2KHwYvGE6QqLFZF6Ot\nXZiVSBmWMQAOVG5qri/YkrKTF/plu/84pmhEsROz1VnhkKO1p0IOgf3B0j2e2ho=\n=kXmL\n-----END PGP SIGNATURE-----\n", "payload": "tree c4a759571a0c0813473f9fe4978493f9de3cba82\nparent 7cdad775363e5c4b723870ecfcd091ee1a13a9dd\nparent 4fcbc53820ab423bbeb41f07822369aa05da1d68\nauthor Michael Goulet <michael@errs.io> 1651804466 -0700\ncommitter GitHub <noreply@github.com> 1651804466 -0700\n\nRollup merge of #96744 - est31:join_osstr, r=thomcc\n\nImplement [OsStr]::join\n\nImplements join for `OsStr` and `OsString` slices:\n\n```Rust\n    let strings = [OsStr::new(\"hello\"), OsStr::new(\"dear\"), OsStr::new(\"world\")];\n    assert_eq!(\"hello dear world\", strings.join(OsStr::new(\" \")));\n````\n\nThis saves one from converting to strings and back, or from implementing it manually.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8bcf4b0efc3a11cc4745e128f237392387300e93", "html_url": "https://github.com/rust-lang/rust/commit/8bcf4b0efc3a11cc4745e128f237392387300e93", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8bcf4b0efc3a11cc4745e128f237392387300e93/comments", "author": {"login": "compiler-errors", "id": 3674314, "node_id": "MDQ6VXNlcjM2NzQzMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3674314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/compiler-errors", "html_url": "https://github.com/compiler-errors", "followers_url": "https://api.github.com/users/compiler-errors/followers", "following_url": "https://api.github.com/users/compiler-errors/following{/other_user}", "gists_url": "https://api.github.com/users/compiler-errors/gists{/gist_id}", "starred_url": "https://api.github.com/users/compiler-errors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/compiler-errors/subscriptions", "organizations_url": "https://api.github.com/users/compiler-errors/orgs", "repos_url": "https://api.github.com/users/compiler-errors/repos", "events_url": "https://api.github.com/users/compiler-errors/events{/privacy}", "received_events_url": "https://api.github.com/users/compiler-errors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7cdad775363e5c4b723870ecfcd091ee1a13a9dd", "url": "https://api.github.com/repos/rust-lang/rust/commits/7cdad775363e5c4b723870ecfcd091ee1a13a9dd", "html_url": "https://github.com/rust-lang/rust/commit/7cdad775363e5c4b723870ecfcd091ee1a13a9dd"}, {"sha": "4fcbc53820ab423bbeb41f07822369aa05da1d68", "url": "https://api.github.com/repos/rust-lang/rust/commits/4fcbc53820ab423bbeb41f07822369aa05da1d68", "html_url": "https://github.com/rust-lang/rust/commit/4fcbc53820ab423bbeb41f07822369aa05da1d68"}], "stats": {"total": 33, "additions": 33, "deletions": 0}, "files": [{"sha": "dd316bdb2c6ce5476a31b95a23801ba248b92232", "filename": "library/std/src/ffi/os_str.rs", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/8bcf4b0efc3a11cc4745e128f237392387300e93/library%2Fstd%2Fsrc%2Fffi%2Fos_str.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8bcf4b0efc3a11cc4745e128f237392387300e93/library%2Fstd%2Fsrc%2Fffi%2Fos_str.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fffi%2Fos_str.rs?ref=8bcf4b0efc3a11cc4745e128f237392387300e93", "patch": "@@ -1222,6 +1222,23 @@ impl OsStr {\n     }\n }\n \n+#[unstable(feature = \"slice_concat_ext\", issue = \"27747\")]\n+impl<S: Borrow<OsStr>> alloc::slice::Join<&OsStr> for [S] {\n+    type Output = OsString;\n+\n+    fn join(slice: &Self, sep: &OsStr) -> OsString {\n+        let Some(first) = slice.first() else {\n+            return OsString::new();\n+        };\n+        let first = first.borrow().to_owned();\n+        slice[1..].iter().fold(first, |mut a, b| {\n+            a.push(sep);\n+            a.push(b.borrow());\n+            a\n+        })\n+    }\n+}\n+\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n impl Borrow<OsStr> for OsString {\n     #[inline]"}, {"sha": "d7926749aae2090416729d0aec53db4bf0a6b276", "filename": "library/std/src/ffi/os_str/tests.rs", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/8bcf4b0efc3a11cc4745e128f237392387300e93/library%2Fstd%2Fsrc%2Fffi%2Fos_str%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8bcf4b0efc3a11cc4745e128f237392387300e93/library%2Fstd%2Fsrc%2Fffi%2Fos_str%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fffi%2Fos_str%2Ftests.rs?ref=8bcf4b0efc3a11cc4745e128f237392387300e93", "patch": "@@ -84,6 +84,20 @@ fn test_os_string_reserve_exact() {\n     assert!(os_string.capacity() >= 33)\n }\n \n+#[test]\n+fn test_os_string_join() {\n+    let strings = [OsStr::new(\"hello\"), OsStr::new(\"dear\"), OsStr::new(\"world\")];\n+    assert_eq!(\"hello\", strings[..1].join(OsStr::new(\" \")));\n+    assert_eq!(\"hello dear world\", strings.join(OsStr::new(\" \")));\n+    assert_eq!(\"hellodearworld\", strings.join(OsStr::new(\"\")));\n+    assert_eq!(\"hello.\\n dear.\\n world\", strings.join(OsStr::new(\".\\n \")));\n+\n+    assert_eq!(\"dear world\", strings[1..].join(&OsString::from(\" \")));\n+\n+    let strings_abc = [OsString::from(\"a\"), OsString::from(\"b\"), OsString::from(\"c\")];\n+    assert_eq!(\"a b c\", strings_abc.join(OsStr::new(\" \")));\n+}\n+\n #[test]\n fn test_os_string_default() {\n     let os_string: OsString = Default::default();"}, {"sha": "d70befa9d20c8ffc4fe929f3e3a8e8f4c2148de0", "filename": "library/std/src/lib.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8bcf4b0efc3a11cc4745e128f237392387300e93/library%2Fstd%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8bcf4b0efc3a11cc4745e128f237392387300e93/library%2Fstd%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Flib.rs?ref=8bcf4b0efc3a11cc4745e128f237392387300e93", "patch": "@@ -241,6 +241,7 @@\n #![feature(intra_doc_pointers)]\n #![feature(lang_items)]\n #![feature(let_chains)]\n+#![feature(let_else)]\n #![feature(linkage)]\n #![feature(min_specialization)]\n #![feature(must_not_suspend)]\n@@ -300,6 +301,7 @@\n #![feature(toowned_clone_into)]\n #![feature(try_reserve_kind)]\n #![feature(vec_into_raw_parts)]\n+#![feature(slice_concat_trait)]\n //\n // Library features (unwind):\n #![feature(panic_unwind)]"}]}