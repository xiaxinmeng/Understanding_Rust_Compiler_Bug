{"sha": "3a046ffa71ae9a991479a435a451b528ee4f71f0", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNhMDQ2ZmZhNzFhZTlhOTkxNDc5YTQzNWE0NTFiNTI4ZWU0ZjcxZjA=", "commit": {"author": {"name": "Taiki Endo", "email": "te316e89@gmail.com", "date": "2019-09-16T23:39:34Z"}, "committer": {"name": "Taiki Endo", "email": "te316e89@gmail.com", "date": "2019-09-16T23:39:34Z"}, "message": "Elide lifetimes in `Pin<&(mut) Self>`", "tree": {"sha": "b405647225ae513f23ad8497fd8351808a89bac2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b405647225ae513f23ad8497fd8351808a89bac2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3a046ffa71ae9a991479a435a451b528ee4f71f0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3a046ffa71ae9a991479a435a451b528ee4f71f0", "html_url": "https://github.com/rust-lang/rust/commit/3a046ffa71ae9a991479a435a451b528ee4f71f0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3a046ffa71ae9a991479a435a451b528ee4f71f0/comments", "author": {"login": "taiki-e", "id": 43724913, "node_id": "MDQ6VXNlcjQzNzI0OTEz", "avatar_url": "https://avatars.githubusercontent.com/u/43724913?v=4", "gravatar_id": "", "url": "https://api.github.com/users/taiki-e", "html_url": "https://github.com/taiki-e", "followers_url": "https://api.github.com/users/taiki-e/followers", "following_url": "https://api.github.com/users/taiki-e/following{/other_user}", "gists_url": "https://api.github.com/users/taiki-e/gists{/gist_id}", "starred_url": "https://api.github.com/users/taiki-e/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/taiki-e/subscriptions", "organizations_url": "https://api.github.com/users/taiki-e/orgs", "repos_url": "https://api.github.com/users/taiki-e/repos", "events_url": "https://api.github.com/users/taiki-e/events{/privacy}", "received_events_url": "https://api.github.com/users/taiki-e/received_events", "type": "User", "site_admin": false}, "committer": {"login": "taiki-e", "id": 43724913, "node_id": "MDQ6VXNlcjQzNzI0OTEz", "avatar_url": "https://avatars.githubusercontent.com/u/43724913?v=4", "gravatar_id": "", "url": "https://api.github.com/users/taiki-e", "html_url": "https://github.com/taiki-e", "followers_url": "https://api.github.com/users/taiki-e/followers", "following_url": "https://api.github.com/users/taiki-e/following{/other_user}", "gists_url": "https://api.github.com/users/taiki-e/gists{/gist_id}", "starred_url": "https://api.github.com/users/taiki-e/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/taiki-e/subscriptions", "organizations_url": "https://api.github.com/users/taiki-e/orgs", "repos_url": "https://api.github.com/users/taiki-e/repos", "events_url": "https://api.github.com/users/taiki-e/events{/privacy}", "received_events_url": "https://api.github.com/users/taiki-e/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a44881d892fb4f4a8ed93f8f392bab942fac7a41", "url": "https://api.github.com/repos/rust-lang/rust/commits/a44881d892fb4f4a8ed93f8f392bab942fac7a41", "html_url": "https://github.com/rust-lang/rust/commit/a44881d892fb4f4a8ed93f8f392bab942fac7a41"}], "stats": {"total": 8, "additions": 4, "deletions": 4}, "files": [{"sha": "5569d99f8d81ddfe310210ac76b89dfe1bbd9c68", "filename": "src/libcore/option.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/3a046ffa71ae9a991479a435a451b528ee4f71f0/src%2Flibcore%2Foption.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3a046ffa71ae9a991479a435a451b528ee4f71f0/src%2Flibcore%2Foption.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Foption.rs?ref=3a046ffa71ae9a991479a435a451b528ee4f71f0", "patch": "@@ -295,7 +295,7 @@ impl<T> Option<T> {\n     /// [`Pin`]: ../pin/struct.Pin.html\n     #[inline]\n     #[stable(feature = \"pin\", since = \"1.33.0\")]\n-    pub fn as_pin_ref<'a>(self: Pin<&'a Option<T>>) -> Option<Pin<&'a T>> {\n+    pub fn as_pin_ref(self: Pin<&Self>) -> Option<Pin<&T>> {\n         unsafe {\n             Pin::get_ref(self).as_ref().map(|x| Pin::new_unchecked(x))\n         }\n@@ -306,7 +306,7 @@ impl<T> Option<T> {\n     /// [`Pin`]: ../pin/struct.Pin.html\n     #[inline]\n     #[stable(feature = \"pin\", since = \"1.33.0\")]\n-    pub fn as_pin_mut<'a>(self: Pin<&'a mut Option<T>>) -> Option<Pin<&'a mut T>> {\n+    pub fn as_pin_mut(self: Pin<&mut Self>) -> Option<Pin<&mut T>> {\n         unsafe {\n             Pin::get_unchecked_mut(self).as_mut().map(|x| Pin::new_unchecked(x))\n         }"}, {"sha": "bddd477c6d85c4f105792d19c725f9f76d549afd", "filename": "src/libcore/pin.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/3a046ffa71ae9a991479a435a451b528ee4f71f0/src%2Flibcore%2Fpin.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3a046ffa71ae9a991479a435a451b528ee4f71f0/src%2Flibcore%2Fpin.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fpin.rs?ref=3a046ffa71ae9a991479a435a451b528ee4f71f0", "patch": "@@ -233,7 +233,7 @@\n //! # type Field = i32;\n //! # struct Struct { field: Field }\n //! impl Struct {\n-//!     fn pin_get_field<'a>(self: Pin<&'a mut Self>) -> &'a mut Field {\n+//!     fn pin_get_field(self: Pin<&mut Self>) -> &mut Field {\n //!         // This is okay because `field` is never considered pinned.\n //!         unsafe { &mut self.get_unchecked_mut().field }\n //!     }\n@@ -257,7 +257,7 @@\n //! # type Field = i32;\n //! # struct Struct { field: Field }\n //! impl Struct {\n-//!     fn pin_get_field<'a>(self: Pin<&'a mut Self>) -> Pin<&'a mut Field> {\n+//!     fn pin_get_field(self: Pin<&mut Self>) -> Pin<&mut Field> {\n //!         // This is okay because `field` is pinned when `self` is.\n //!         unsafe { self.map_unchecked_mut(|s| &mut s.field) }\n //!     }"}]}