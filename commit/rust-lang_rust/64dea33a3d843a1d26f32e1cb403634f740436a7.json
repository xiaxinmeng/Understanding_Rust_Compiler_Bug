{"sha": "64dea33a3d843a1d26f32e1cb403634f740436a7", "node_id": "C_kwDOAAsO6NoAKDY0ZGVhMzNhM2Q4NDNhMWQyNmYzMmUxY2I0MDM2MzRmNzQwNDM2YTc", "commit": {"author": {"name": "Esteban Kuber", "email": "esteban@kuber.com.ar", "date": "2021-12-02T23:41:45Z"}, "committer": {"name": "Esteban Kuber", "email": "esteban@kuber.com.ar", "date": "2021-12-13T17:09:16Z"}, "message": "review comments", "tree": {"sha": "f38dba84fed148021f02b65c97083be0cba29a1c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f38dba84fed148021f02b65c97083be0cba29a1c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/64dea33a3d843a1d26f32e1cb403634f740436a7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/64dea33a3d843a1d26f32e1cb403634f740436a7", "html_url": "https://github.com/rust-lang/rust/commit/64dea33a3d843a1d26f32e1cb403634f740436a7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/64dea33a3d843a1d26f32e1cb403634f740436a7/comments", "author": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "committer": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d59f74aeaf55d017eb0e4969fd778779154cb637", "url": "https://api.github.com/repos/rust-lang/rust/commits/d59f74aeaf55d017eb0e4969fd778779154cb637", "html_url": "https://github.com/rust-lang/rust/commit/d59f74aeaf55d017eb0e4969fd778779154cb637"}], "stats": {"total": 54, "additions": 37, "deletions": 17}, "files": [{"sha": "b15e0c327d3ee4594f8c364ffe8d2e88698742a7", "filename": "compiler/rustc_trait_selection/src/traits/error_reporting/suggestions.rs", "status": "modified", "additions": 20, "deletions": 8, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/64dea33a3d843a1d26f32e1cb403634f740436a7/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Ferror_reporting%2Fsuggestions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/64dea33a3d843a1d26f32e1cb403634f740436a7/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Ferror_reporting%2Fsuggestions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Ferror_reporting%2Fsuggestions.rs?ref=64dea33a3d843a1d26f32e1cb403634f740436a7", "patch": "@@ -1735,16 +1735,13 @@ impl<'a, 'tcx> InferCtxtExt<'tcx> for InferCtxt<'a, 'tcx> {\n                 //    | |\n                 // LL | |              foo(tx.clone());\n                 // LL | |          }).await;\n-                //    | |          - ^^^^^^- value is later dropped here\n-                //    | |          | |\n-                //    | |__________| await occurs here, with value maybe used later\n+                //    | |          - ^^^^^^ await occurs here, with value maybe used later\n+                //    | |__________|\n                 //    |            has type `closure` which is not `Send`\n+                // note: value is later dropped here\n+                // LL | |          }).await;\n+                //    | |                  ^\n                 //\n-                // If available, use the scope span to annotate the drop location.\n-                if let Some(scope_span) = scope_span {\n-                    let scope_span = source_map.end_point(scope_span);\n-                    span.push_span_label(scope_span, format!(\"{} is later dropped here\", snippet));\n-                }\n                 span.push_span_label(\n                     yield_span,\n                     format!(\"{} occurs here, with {} maybe used later\", await_or_yield, snippet),\n@@ -1753,13 +1750,28 @@ impl<'a, 'tcx> InferCtxtExt<'tcx> for InferCtxt<'a, 'tcx> {\n                     interior_span,\n                     format!(\"has type `{}` which {}\", target_ty, trait_explanation),\n                 );\n+                // If available, use the scope span to annotate the drop location.\n+                let mut scope_note = None;\n+                if let Some(scope_span) = scope_span {\n+                    let scope_span = source_map.end_point(scope_span);\n+\n+                    let msg = format!(\"{} is later dropped here\", snippet);\n+                    if source_map.is_multiline(yield_span.between(scope_span)) {\n+                        span.push_span_label(scope_span, msg);\n+                    } else {\n+                        scope_note = Some((scope_span, msg));\n+                    }\n+                }\n                 err.span_note(\n                     span,\n                     &format!(\n                         \"{} {} as this value is used across {}\",\n                         future_or_generator, trait_explanation, an_await_or_yield\n                     ),\n                 );\n+                if let Some((span, msg)) = scope_note {\n+                    err.span_note(span, &msg);\n+                }\n             }\n         };\n         match interior_or_upvar_span {"}, {"sha": "db3099381196b771692e3f1b29677d201c77aea1", "filename": "src/test/ui/async-await/issue-70935-complex-spans.stderr", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/64dea33a3d843a1d26f32e1cb403634f740436a7/src%2Ftest%2Fui%2Fasync-await%2Fissue-70935-complex-spans.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/64dea33a3d843a1d26f32e1cb403634f740436a7/src%2Ftest%2Fui%2Fasync-await%2Fissue-70935-complex-spans.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fasync-await%2Fissue-70935-complex-spans.stderr?ref=64dea33a3d843a1d26f32e1cb403634f740436a7", "patch": "@@ -12,10 +12,14 @@ LL |           baz(|| async{\n    |  _____________-\n LL | |             foo(tx.clone());\n LL | |         }).await;\n-   | |         - ^^^^^^- the value is later dropped here\n-   | |         | |\n-   | |_________| await occurs here, with the value maybe used later\n+   | |         - ^^^^^^ await occurs here, with the value maybe used later\n+   | |_________|\n    |           has type `[closure@$DIR/issue-70935-complex-spans.rs:13:13: 15:10]` which is not `Send`\n+note: the value is later dropped here\n+  --> $DIR/issue-70935-complex-spans.rs:15:17\n+   |\n+LL |         }).await;\n+   |                 ^\n \n error: aborting due to previous error\n "}, {"sha": "b4d2006480390302ff4c02886bf3cfcdae3fc3dc", "filename": "src/test/ui/async-await/issues/issue-65436-raw-ptr-not-send.stderr", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/64dea33a3d843a1d26f32e1cb403634f740436a7/src%2Ftest%2Fui%2Fasync-await%2Fissues%2Fissue-65436-raw-ptr-not-send.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/64dea33a3d843a1d26f32e1cb403634f740436a7/src%2Ftest%2Fui%2Fasync-await%2Fissues%2Fissue-65436-raw-ptr-not-send.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fasync-await%2Fissues%2Fissue-65436-raw-ptr-not-send.stderr?ref=64dea33a3d843a1d26f32e1cb403634f740436a7", "patch": "@@ -9,10 +9,14 @@ note: future is not `Send` as this value is used across an await\n   --> $DIR/issue-65436-raw-ptr-not-send.rs:14:35\n    |\n LL |         bar(Foo(std::ptr::null())).await;\n-   |                 ----------------  ^^^^^^- `std::ptr::null()` is later dropped here\n-   |                 |                 |\n-   |                 |                 await occurs here, with `std::ptr::null()` maybe used later\n+   |                 ----------------  ^^^^^^ await occurs here, with `std::ptr::null()` maybe used later\n+   |                 |\n    |                 has type `*const u8` which is not `Send`\n+note: `std::ptr::null()` is later dropped here\n+  --> $DIR/issue-65436-raw-ptr-not-send.rs:14:41\n+   |\n+LL |         bar(Foo(std::ptr::null())).await;\n+   |                                         ^\n help: consider moving this into a `let` binding to create a shorter lived borrow\n   --> $DIR/issue-65436-raw-ptr-not-send.rs:14:13\n    |"}, {"sha": "24673777b8039dd24bd54f963220920055248d60", "filename": "src/test/ui/async-await/unnecessary-await.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/64dea33a3d843a1d26f32e1cb403634f740436a7/src%2Ftest%2Fui%2Fasync-await%2Funnecessary-await.rs", "raw_url": "https://github.com/rust-lang/rust/raw/64dea33a3d843a1d26f32e1cb403634f740436a7/src%2Ftest%2Fui%2Fasync-await%2Funnecessary-await.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fasync-await%2Funnecessary-await.rs?ref=64dea33a3d843a1d26f32e1cb403634f740436a7", "patch": "@@ -1,8 +1,8 @@\n // edition:2018\n \n async fn foo () { }\n-fn bar () -> impl std::future::Future { async {} }\n-fn boo () {}\n+fn bar() -> impl std::future::Future { async {} }\n+fn boo() {}\n \n async fn baz() -> std::io::Result<()> {\n     foo().await;"}, {"sha": "23dea2d3a0c74bd067a6ee50e4c77c67d64e1e89", "filename": "src/test/ui/async-await/unnecessary-await.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/64dea33a3d843a1d26f32e1cb403634f740436a7/src%2Ftest%2Fui%2Fasync-await%2Funnecessary-await.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/64dea33a3d843a1d26f32e1cb403634f740436a7/src%2Ftest%2Fui%2Fasync-await%2Funnecessary-await.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fasync-await%2Funnecessary-await.stderr?ref=64dea33a3d843a1d26f32e1cb403634f740436a7", "patch": "@@ -16,7 +16,7 @@ LL +     boo();\n    | \n help: alternatively, consider making `fn boo` asynchronous\n    |\n-LL | async fn boo () {}\n+LL | async fn boo() {}\n    | +++++\n \n error: aborting due to previous error"}]}