{"sha": "fa922ab876cb3140de2ead9c8ad88a75982c167c", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZhOTIyYWI4NzZjYjMxNDBkZTJlYWQ5YzhhZDg4YTc1OTgyYzE2N2M=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2018-12-22T13:49:10Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2018-12-22T13:49:10Z"}, "message": "Auto merge of #57060 - nikic:inhabit-perf-2, r=varkor\n\nShort-circuit DefIdForest::intersection()\n\nIf the forest is already empty, there is no point in intersecting further.\n\nAlso handle the first element separately, so we don't compute an unnecessary intersection between the full forest and the first element, which is always equal to the first element.\n\nThis is the second try at fixing #57028, as the previous attempt only recovered part of the regression. I checked locally that this drops time spent in ty::inhabitedness for syn-check a lot, though not to zero.\n\nr? @varkor", "tree": {"sha": "448be2134239f359ba139ae046937cefdfafd362", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/448be2134239f359ba139ae046937cefdfafd362"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/fa922ab876cb3140de2ead9c8ad88a75982c167c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/fa922ab876cb3140de2ead9c8ad88a75982c167c", "html_url": "https://github.com/rust-lang/rust/commit/fa922ab876cb3140de2ead9c8ad88a75982c167c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/fa922ab876cb3140de2ead9c8ad88a75982c167c/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9966590422ed3e6bd97bc1967b7435a03cfb949b", "url": "https://api.github.com/repos/rust-lang/rust/commits/9966590422ed3e6bd97bc1967b7435a03cfb949b", "html_url": "https://github.com/rust-lang/rust/commit/9966590422ed3e6bd97bc1967b7435a03cfb949b"}, {"sha": "f93cbf617000673e5ad2fc0fd0eff0c9ea229314", "url": "https://api.github.com/repos/rust-lang/rust/commits/f93cbf617000673e5ad2fc0fd0eff0c9ea229314", "html_url": "https://github.com/rust-lang/rust/commit/f93cbf617000673e5ad2fc0fd0eff0c9ea229314"}], "stats": {"total": 13, "additions": 12, "deletions": 1}, "files": [{"sha": "af2185205a33df38c449fb0f838953c99c0ab9f3", "filename": "src/librustc/ty/inhabitedness/def_id_forest.rs", "status": "modified", "additions": 12, "deletions": 1, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/fa922ab876cb3140de2ead9c8ad88a75982c167c/src%2Flibrustc%2Fty%2Finhabitedness%2Fdef_id_forest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fa922ab876cb3140de2ead9c8ad88a75982c167c/src%2Flibrustc%2Fty%2Finhabitedness%2Fdef_id_forest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Finhabitedness%2Fdef_id_forest.rs?ref=fa922ab876cb3140de2ead9c8ad88a75982c167c", "patch": "@@ -74,10 +74,21 @@ impl<'a, 'gcx, 'tcx> DefIdForest {\n                            iter: I) -> DefIdForest\n             where I: IntoIterator<Item=DefIdForest>\n     {\n-        let mut ret = DefIdForest::full(tcx);\n+        let mut iter = iter.into_iter();\n+        let mut ret = if let Some(first) = iter.next() {\n+            first\n+        } else {\n+            return DefIdForest::full(tcx);\n+        };\n+\n         let mut next_ret = SmallVec::new();\n         let mut old_ret: SmallVec<[DefId; 1]> = SmallVec::new();\n         for next_forest in iter {\n+            // No need to continue if the intersection is already empty.\n+            if ret.is_empty() {\n+                break;\n+            }\n+\n             for id in ret.root_ids.drain() {\n                 if next_forest.contains(tcx, id) {\n                     next_ret.push(id);"}]}