{"sha": "629f7ab4a32e6afea7563698ad7278bbd1e67ee4", "node_id": "MDY6Q29tbWl0NzI0NzEyOjYyOWY3YWI0YTMyZTZhZmVhNzU2MzY5OGFkNzI3OGJiZDFlNjdlZTQ=", "commit": {"author": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2019-08-20T11:37:49Z"}, "committer": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2019-09-07T09:00:49Z"}, "message": "Don't perform neg overflow checks when they are disabled", "tree": {"sha": "7fe9110a002c7e1c4645ff9acdcf68b153105795", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7fe9110a002c7e1c4645ff9acdcf68b153105795"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/629f7ab4a32e6afea7563698ad7278bbd1e67ee4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/629f7ab4a32e6afea7563698ad7278bbd1e67ee4", "html_url": "https://github.com/rust-lang/rust/commit/629f7ab4a32e6afea7563698ad7278bbd1e67ee4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/629f7ab4a32e6afea7563698ad7278bbd1e67ee4/comments", "author": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bfb49e7d19040dddc0a544fc52dcfb4ec99ab98e", "url": "https://api.github.com/repos/rust-lang/rust/commits/bfb49e7d19040dddc0a544fc52dcfb4ec99ab98e", "html_url": "https://github.com/rust-lang/rust/commit/bfb49e7d19040dddc0a544fc52dcfb4ec99ab98e"}], "stats": {"total": 7, "additions": 7, "deletions": 0}, "files": [{"sha": "68ca6cffbef6ccb840616a385fd74c0b74691312", "filename": "src/base.rs", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/629f7ab4a32e6afea7563698ad7278bbd1e67ee4/src%2Fbase.rs", "raw_url": "https://github.com/rust-lang/rust/raw/629f7ab4a32e6afea7563698ad7278bbd1e67ee4/src%2Fbase.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbase.rs?ref=629f7ab4a32e6afea7563698ad7278bbd1e67ee4", "patch": "@@ -162,6 +162,13 @@ fn codegen_fn_content(fx: &mut FunctionCx<'_, '_, impl Backend>) {\n                 target,\n                 cleanup: _,\n             } => {\n+                if !fx.tcx.sess.overflow_checks() {\n+                    if let mir::interpret::PanicInfo::OverflowNeg = *msg {\n+                        let target = fx.get_ebb(*target);\n+                        fx.bcx.ins().jump(target, &[]);\n+                        continue;\n+                    }\n+                }\n                 let cond = trans_operand(fx, cond).load_scalar(fx);\n                 // TODO HACK brz/brnz for i8/i16 is not yet implemented\n                 let cond = fx.bcx.ins().uextend(types::I32, cond);"}]}