{"sha": "a912fedd0fb2ffc6927e2116110dc94ed3e45336", "node_id": "C_kwDOAAsO6NoAKGE5MTJmZWRkMGZiMmZmYzY5MjdlMjExNjExMGRjOTRlZDNlNDUzMzY", "commit": {"author": {"name": "Andreas Jonson", "email": "andjo403@users.noreply.github.com", "date": "2021-11-14T13:01:30Z"}, "committer": {"name": "Andreas Jonson", "email": "andjo403@users.noreply.github.com", "date": "2021-11-14T15:35:09Z"}, "message": "Remove workaround for the forward progress handling in LLVM", "tree": {"sha": "b06ea5f2100306b5109218f820ae77720adb8288", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b06ea5f2100306b5109218f820ae77720adb8288"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a912fedd0fb2ffc6927e2116110dc94ed3e45336", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a912fedd0fb2ffc6927e2116110dc94ed3e45336", "html_url": "https://github.com/rust-lang/rust/commit/a912fedd0fb2ffc6927e2116110dc94ed3e45336", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a912fedd0fb2ffc6927e2116110dc94ed3e45336/comments", "author": {"login": "andjo403", "id": 844398, "node_id": "MDQ6VXNlcjg0NDM5OA==", "avatar_url": "https://avatars.githubusercontent.com/u/844398?v=4", "gravatar_id": "", "url": "https://api.github.com/users/andjo403", "html_url": "https://github.com/andjo403", "followers_url": "https://api.github.com/users/andjo403/followers", "following_url": "https://api.github.com/users/andjo403/following{/other_user}", "gists_url": "https://api.github.com/users/andjo403/gists{/gist_id}", "starred_url": "https://api.github.com/users/andjo403/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/andjo403/subscriptions", "organizations_url": "https://api.github.com/users/andjo403/orgs", "repos_url": "https://api.github.com/users/andjo403/repos", "events_url": "https://api.github.com/users/andjo403/events{/privacy}", "received_events_url": "https://api.github.com/users/andjo403/received_events", "type": "User", "site_admin": false}, "committer": {"login": "andjo403", "id": 844398, "node_id": "MDQ6VXNlcjg0NDM5OA==", "avatar_url": "https://avatars.githubusercontent.com/u/844398?v=4", "gravatar_id": "", "url": "https://api.github.com/users/andjo403", "html_url": "https://github.com/andjo403", "followers_url": "https://api.github.com/users/andjo403/followers", "following_url": "https://api.github.com/users/andjo403/following{/other_user}", "gists_url": "https://api.github.com/users/andjo403/gists{/gist_id}", "starred_url": "https://api.github.com/users/andjo403/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/andjo403/subscriptions", "organizations_url": "https://api.github.com/users/andjo403/orgs", "repos_url": "https://api.github.com/users/andjo403/repos", "events_url": "https://api.github.com/users/andjo403/events{/privacy}", "received_events_url": "https://api.github.com/users/andjo403/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d5a6aafb8847eeae39f23f852dd33e32ca2ca914", "url": "https://api.github.com/repos/rust-lang/rust/commits/d5a6aafb8847eeae39f23f852dd33e32ca2ca914", "html_url": "https://github.com/rust-lang/rust/commit/d5a6aafb8847eeae39f23f852dd33e32ca2ca914"}], "stats": {"total": 6, "additions": 1, "deletions": 5}, "files": [{"sha": "f3a2382ef32d901c5e179f772b51b53dbcf384f1", "filename": "src/intrinsic/mod.rs", "status": "modified", "additions": 1, "deletions": 5, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/a912fedd0fb2ffc6927e2116110dc94ed3e45336/src%2Fintrinsic%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a912fedd0fb2ffc6927e2116110dc94ed3e45336/src%2Fintrinsic%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fintrinsic%2Fmod.rs?ref=a912fedd0fb2ffc6927e2116110dc94ed3e45336", "patch": "@@ -316,7 +316,7 @@ impl<'a, 'gcc, 'tcx> IntrinsicCallMethods<'tcx> for Builder<'a, 'gcc, 'tcx> {\n                     extended_asm.add_input_operand(None, \"r\", result.llval);\n                     extended_asm.add_clobber(\"memory\");\n                     extended_asm.set_volatile_flag(true);\n-                    \n+\n                     // We have copied the value to `result` already.\n                     return;\n                 }\n@@ -363,10 +363,6 @@ impl<'a, 'gcc, 'tcx> IntrinsicCallMethods<'tcx> for Builder<'a, 'gcc, 'tcx> {\n         cond\n     }\n \n-    fn sideeffect(&mut self) {\n-        // TODO(antoyo)\n-    }\n-\n     fn type_test(&mut self, _pointer: Self::Value, _typeid: Self::Value) -> Self::Value {\n         // Unsupported.\n         self.context.new_rvalue_from_int(self.int_type, 0)"}]}