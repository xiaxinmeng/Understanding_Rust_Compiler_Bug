{"sha": "bd156846fa84fde77cc801ea3b1f4d5750db94a4", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJkMTU2ODQ2ZmE4NGZkZTc3Y2M4MDFlYTNiMWY0ZDU3NTBkYjk0YTQ=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2020-03-25T07:35:17Z"}, "committer": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2020-03-25T07:35:17Z"}, "message": "improve non-exhaustive struct pat error", "tree": {"sha": "e8597581ccfad8d3a1e3eb2046d30198a955b22f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e8597581ccfad8d3a1e3eb2046d30198a955b22f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/bd156846fa84fde77cc801ea3b1f4d5750db94a4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/bd156846fa84fde77cc801ea3b1f4d5750db94a4", "html_url": "https://github.com/rust-lang/rust/commit/bd156846fa84fde77cc801ea3b1f4d5750db94a4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/bd156846fa84fde77cc801ea3b1f4d5750db94a4/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "58fee523cfe1e242cbf8776bb8513fb8325bc0ab", "url": "https://api.github.com/repos/rust-lang/rust/commits/58fee523cfe1e242cbf8776bb8513fb8325bc0ab", "html_url": "https://github.com/rust-lang/rust/commit/58fee523cfe1e242cbf8776bb8513fb8325bc0ab"}], "stats": {"total": 57, "additions": 49, "deletions": 8}, "files": [{"sha": "ea04454a356de4ae7968d42a9a3d160d957916cc", "filename": "src/librustc_typeck/check/pat.rs", "status": "modified", "additions": 24, "deletions": 8, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/bd156846fa84fde77cc801ea3b1f4d5750db94a4/src%2Flibrustc_typeck%2Fcheck%2Fpat.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bd156846fa84fde77cc801ea3b1f4d5750db94a4/src%2Flibrustc_typeck%2Fcheck%2Fpat.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fpat.rs?ref=bd156846fa84fde77cc801ea3b1f4d5750db94a4", "patch": "@@ -1082,14 +1082,7 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n \n         // Require `..` if struct has non_exhaustive attribute.\n         if variant.is_field_list_non_exhaustive() && !adt.did.is_local() && !etc {\n-            struct_span_err!(\n-                tcx.sess,\n-                pat.span,\n-                E0638,\n-                \"`..` required with {} marked as non-exhaustive\",\n-                adt.variant_descr()\n-            )\n-            .emit();\n+            self.error_foreign_non_exhaustive_spat(pat, adt.variant_descr(), fields.is_empty());\n         }\n \n         // Report an error if incorrect number of the fields were specified.\n@@ -1108,6 +1101,29 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n         no_field_errors\n     }\n \n+    fn error_foreign_non_exhaustive_spat(&self, pat: &Pat<'_>, descr: &str, no_fields: bool) {\n+        let sess = self.tcx.sess;\n+        let sm = sess.source_map();\n+        let sp_brace = sm.end_point(pat.span);\n+        let sp_comma = sm.end_point(pat.span.with_hi(sp_brace.hi()));\n+        let sugg = if no_fields || sp_brace != sp_comma { \".. }\" } else { \", .. }\" };\n+\n+        let mut err = struct_span_err!(\n+            sess,\n+            pat.span,\n+            E0638,\n+            \"`..` required with {} marked as non-exhaustive\",\n+            descr\n+        );\n+        err.span_suggestion_verbose(\n+            sp_comma,\n+            \"add `..` at the end of the field list\",\n+            sugg.to_string(),\n+            Applicability::MachineApplicable,\n+        );\n+        err.emit();\n+    }\n+\n     fn error_field_already_bound(&self, span: Span, ident: ast::Ident, other_field: Span) {\n         struct_span_err!(\n             self.tcx.sess,"}, {"sha": "b1351e6fb9c4bcd9e9c8d14189a43a3de47ce5b8", "filename": "src/test/ui/rfc-2008-non-exhaustive/struct.stderr", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/bd156846fa84fde77cc801ea3b1f4d5750db94a4/src%2Ftest%2Fui%2Frfc-2008-non-exhaustive%2Fstruct.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/bd156846fa84fde77cc801ea3b1f4d5750db94a4/src%2Ftest%2Fui%2Frfc-2008-non-exhaustive%2Fstruct.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc-2008-non-exhaustive%2Fstruct.stderr?ref=bd156846fa84fde77cc801ea3b1f4d5750db94a4", "patch": "@@ -62,18 +62,33 @@ error[E0638]: `..` required with struct marked as non-exhaustive\n    |\n LL |     let NormalStruct { first_field, second_field } = ns;\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |\n+help: add `..` at the end of the field list\n+   |\n+LL |     let NormalStruct { first_field, second_field , .. } = ns;\n+   |                                                  ^^^^^^\n \n error[E0638]: `..` required with struct marked as non-exhaustive\n   --> $DIR/struct.rs:26:9\n    |\n LL |     let TupleStruct { 0: first_field, 1: second_field } = ts;\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |\n+help: add `..` at the end of the field list\n+   |\n+LL |     let TupleStruct { 0: first_field, 1: second_field , .. } = ts;\n+   |                                                       ^^^^^^\n \n error[E0638]: `..` required with struct marked as non-exhaustive\n   --> $DIR/struct.rs:35:9\n    |\n LL |     let UnitStruct { } = us;\n    |         ^^^^^^^^^^^^^^\n+   |\n+help: add `..` at the end of the field list\n+   |\n+LL |     let UnitStruct { .. } = us;\n+   |                      ^^^^\n \n error: aborting due to 9 previous errors\n "}, {"sha": "94432ce29d59eadceaadf7008c8b6ca5f677a8ac", "filename": "src/test/ui/rfc-2008-non-exhaustive/variant.stderr", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/bd156846fa84fde77cc801ea3b1f4d5750db94a4/src%2Ftest%2Fui%2Frfc-2008-non-exhaustive%2Fvariant.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/bd156846fa84fde77cc801ea3b1f4d5750db94a4/src%2Ftest%2Fui%2Frfc-2008-non-exhaustive%2Fvariant.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc-2008-non-exhaustive%2Fvariant.stderr?ref=bd156846fa84fde77cc801ea3b1f4d5750db94a4", "patch": "@@ -69,12 +69,22 @@ error[E0638]: `..` required with variant marked as non-exhaustive\n    |\n LL |         NonExhaustiveVariants::Struct { field } => \"\"\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |\n+help: add `..` at the end of the field list\n+   |\n+LL |         NonExhaustiveVariants::Struct { field , .. } => \"\"\n+   |                                               ^^^^^^\n \n error[E0638]: `..` required with variant marked as non-exhaustive\n   --> $DIR/variant.rs:30:12\n    |\n LL |     if let NonExhaustiveVariants::Struct { field } = variant_struct {\n    |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |\n+help: add `..` at the end of the field list\n+   |\n+LL |     if let NonExhaustiveVariants::Struct { field , .. } = variant_struct {\n+   |                                                  ^^^^^^\n \n error: aborting due to 8 previous errors\n "}]}