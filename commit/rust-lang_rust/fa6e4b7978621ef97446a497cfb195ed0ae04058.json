{"sha": "fa6e4b7978621ef97446a497cfb195ed0ae04058", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZhNmU0Yjc5Nzg2MjFlZjk3NDQ2YTQ5N2NmYjE5NWVkMGFlMDQwNTg=", "commit": {"author": {"name": "bors[bot]", "email": "bors[bot]@users.noreply.github.com", "date": "2019-01-13T19:01:06Z"}, "committer": {"name": "bors[bot]", "email": "bors[bot]@users.noreply.github.com", "date": "2019-01-13T19:01:06Z"}, "message": "Merge #532\n\n532: fix go to parent module r=matklad a=matklad\n\n\n\nCo-authored-by: Aleksey Kladov <aleksey.kladov@gmail.com>", "tree": {"sha": "6e9b1d619ed2f60988567b1fcbef38df60490737", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6e9b1d619ed2f60988567b1fcbef38df60490737"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/fa6e4b7978621ef97446a497cfb195ed0ae04058", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/fa6e4b7978621ef97446a497cfb195ed0ae04058", "html_url": "https://github.com/rust-lang/rust/commit/fa6e4b7978621ef97446a497cfb195ed0ae04058", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/fa6e4b7978621ef97446a497cfb195ed0ae04058/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "parents": [{"sha": "d3dfafd393e1c42494af5a15e319ba884c30f9aa", "url": "https://api.github.com/repos/rust-lang/rust/commits/d3dfafd393e1c42494af5a15e319ba884c30f9aa", "html_url": "https://github.com/rust-lang/rust/commit/d3dfafd393e1c42494af5a15e319ba884c30f9aa"}, {"sha": "077a02271c855841be39d4b6b45b7df14a6fc067", "url": "https://api.github.com/repos/rust-lang/rust/commits/077a02271c855841be39d4b6b45b7df14a6fc067", "html_url": "https://github.com/rust-lang/rust/commit/077a02271c855841be39d4b6b45b7df14a6fc067"}], "stats": {"total": 23, "additions": 21, "deletions": 2}, "files": [{"sha": "230d0f67aac7950f31f0879717739638cae5048e", "filename": "crates/ra_ide_api/src/navigation_target.rs", "status": "modified", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/fa6e4b7978621ef97446a497cfb195ed0ae04058/crates%2Fra_ide_api%2Fsrc%2Fnavigation_target.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fa6e4b7978621ef97446a497cfb195ed0ae04058/crates%2Fra_ide_api%2Fsrc%2Fnavigation_target.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Fnavigation_target.rs?ref=fa6e4b7978621ef97446a497cfb195ed0ae04058", "patch": "@@ -89,6 +89,25 @@ impl NavigationTarget {\n         Ok(res)\n     }\n \n+    pub(crate) fn from_module_to_decl(\n+        db: &RootDatabase,\n+        module: hir::Module,\n+    ) -> Cancelable<NavigationTarget> {\n+        let name = module\n+            .name(db)?\n+            .map(|it| it.to_string().into())\n+            .unwrap_or_default();\n+        if let Some((file_id, source)) = module.declaration_source(db)? {\n+            return Ok(NavigationTarget::from_syntax(\n+                file_id,\n+                name,\n+                None,\n+                source.syntax(),\n+            ));\n+        }\n+        NavigationTarget::from_module(db, module)\n+    }\n+\n     // TODO once Def::Item is gone, this should be able to always return a NavigationTarget\n     pub(crate) fn from_def(db: &RootDatabase, def: Def) -> Cancelable<Option<NavigationTarget>> {\n         let res = match def {"}, {"sha": "675042a6c0ff7f4b84eda6d66327628e61275d58", "filename": "crates/ra_ide_api/src/parent_module.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/fa6e4b7978621ef97446a497cfb195ed0ae04058/crates%2Fra_ide_api%2Fsrc%2Fparent_module.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fa6e4b7978621ef97446a497cfb195ed0ae04058/crates%2Fra_ide_api%2Fsrc%2Fparent_module.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Fparent_module.rs?ref=fa6e4b7978621ef97446a497cfb195ed0ae04058", "patch": "@@ -12,7 +12,7 @@ pub(crate) fn parent_module(\n         None => return Ok(Vec::new()),\n         Some(it) => it,\n     };\n-    let nav = NavigationTarget::from_module(db, module)?;\n+    let nav = NavigationTarget::from_module_to_decl(db, module)?;\n     Ok(vec![nav])\n }\n \n@@ -31,7 +31,7 @@ mod tests {\n             \",\n         );\n         let nav = analysis.parent_module(pos).unwrap().pop().unwrap();\n-        nav.assert_match(\"foo SOURCE_FILE FileId(2) [0; 10)\");\n+        nav.assert_match(\"foo MODULE FileId(1) [0; 8)\");\n     }\n \n     #[test]"}]}