{"sha": "1bbd97c11f6ab9b042fb7342c55399576e04c2f1", "node_id": "MDY6Q29tbWl0NzI0NzEyOjFiYmQ5N2MxMWY2YWI5YjA0MmZiNzM0MmM1NTM5OTU3NmUwNGMyZjE=", "commit": {"author": {"name": "Taras Shpot", "email": "mrshpot@gmail.com", "date": "2012-01-21T14:21:18Z"}, "committer": {"name": "Taras Shpot", "email": "mrshpot@gmail.com", "date": "2012-01-21T14:21:18Z"}, "message": "doc: Fix typo", "tree": {"sha": "ba270b0717bec1dc07df9cd1478eda9824d88bb4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ba270b0717bec1dc07df9cd1478eda9824d88bb4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1bbd97c11f6ab9b042fb7342c55399576e04c2f1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1bbd97c11f6ab9b042fb7342c55399576e04c2f1", "html_url": "https://github.com/rust-lang/rust/commit/1bbd97c11f6ab9b042fb7342c55399576e04c2f1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1bbd97c11f6ab9b042fb7342c55399576e04c2f1/comments", "author": {"login": "mrshpot", "id": 329796, "node_id": "MDQ6VXNlcjMyOTc5Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/329796?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mrshpot", "html_url": "https://github.com/mrshpot", "followers_url": "https://api.github.com/users/mrshpot/followers", "following_url": "https://api.github.com/users/mrshpot/following{/other_user}", "gists_url": "https://api.github.com/users/mrshpot/gists{/gist_id}", "starred_url": "https://api.github.com/users/mrshpot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mrshpot/subscriptions", "organizations_url": "https://api.github.com/users/mrshpot/orgs", "repos_url": "https://api.github.com/users/mrshpot/repos", "events_url": "https://api.github.com/users/mrshpot/events{/privacy}", "received_events_url": "https://api.github.com/users/mrshpot/received_events", "type": "User", "site_admin": false}, "committer": {"login": "mrshpot", "id": 329796, "node_id": "MDQ6VXNlcjMyOTc5Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/329796?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mrshpot", "html_url": "https://github.com/mrshpot", "followers_url": "https://api.github.com/users/mrshpot/followers", "following_url": "https://api.github.com/users/mrshpot/following{/other_user}", "gists_url": "https://api.github.com/users/mrshpot/gists{/gist_id}", "starred_url": "https://api.github.com/users/mrshpot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mrshpot/subscriptions", "organizations_url": "https://api.github.com/users/mrshpot/orgs", "repos_url": "https://api.github.com/users/mrshpot/repos", "events_url": "https://api.github.com/users/mrshpot/events{/privacy}", "received_events_url": "https://api.github.com/users/mrshpot/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4d757b9e9fd84b0bef547b615350f6bfec829690", "url": "https://api.github.com/repos/rust-lang/rust/commits/4d757b9e9fd84b0bef547b615350f6bfec829690", "html_url": "https://github.com/rust-lang/rust/commit/4d757b9e9fd84b0bef547b615350f6bfec829690"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "433187dd773e36e46c63172404142e5cc094d3ee", "filename": "doc/tutorial.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1bbd97c11f6ab9b042fb7342c55399576e04c2f1/doc%2Ftutorial.md", "raw_url": "https://github.com/rust-lang/rust/raw/1bbd97c11f6ab9b042fb7342c55399576e04c2f1/doc%2Ftutorial.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/doc%2Ftutorial.md?ref=1bbd97c11f6ab9b042fb7342c55399576e04c2f1", "patch": "@@ -898,7 +898,7 @@ that callers have the flexibility to pass whatever they want.\n ~~~~\n ## xfail-test\n fn call_twice(f: fn()) { f(); f(); }\n-call_twice({|| \"I am a stack closure; });\n+call_twice({|| \"I am a stack closure\"; });\n call_twice(fn@() { \"I am a boxed closure\"; });\n fn bare_function() { \"I am a plain function\"; }\n call_twice(bare_function);"}]}