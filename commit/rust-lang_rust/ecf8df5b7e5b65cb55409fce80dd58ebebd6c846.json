{"sha": "ecf8df5b7e5b65cb55409fce80dd58ebebd6c846", "node_id": "MDY6Q29tbWl0NzI0NzEyOmVjZjhkZjViN2U1YjY1Y2I1NTQwOWZjZTgwZGQ1OGViZWJkNmM4NDY=", "commit": {"author": {"name": "Vytautas Astrauskas", "email": "vastrauskas@gmail.com", "date": "2018-12-13T15:23:53Z"}, "committer": {"name": "Vytautas Astrauskas", "email": "vastrauskas@gmail.com", "date": "2018-12-17T11:18:35Z"}, "message": "Address the pull request review comments.", "tree": {"sha": "62ebb60be34fdf45abde6497abfa056d9e36a8b9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/62ebb60be34fdf45abde6497abfa056d9e36a8b9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ecf8df5b7e5b65cb55409fce80dd58ebebd6c846", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ecf8df5b7e5b65cb55409fce80dd58ebebd6c846", "html_url": "https://github.com/rust-lang/rust/commit/ecf8df5b7e5b65cb55409fce80dd58ebebd6c846", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ecf8df5b7e5b65cb55409fce80dd58ebebd6c846/comments", "author": {"login": "vakaras", "id": 75347, "node_id": "MDQ6VXNlcjc1MzQ3", "avatar_url": "https://avatars.githubusercontent.com/u/75347?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vakaras", "html_url": "https://github.com/vakaras", "followers_url": "https://api.github.com/users/vakaras/followers", "following_url": "https://api.github.com/users/vakaras/following{/other_user}", "gists_url": "https://api.github.com/users/vakaras/gists{/gist_id}", "starred_url": "https://api.github.com/users/vakaras/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vakaras/subscriptions", "organizations_url": "https://api.github.com/users/vakaras/orgs", "repos_url": "https://api.github.com/users/vakaras/repos", "events_url": "https://api.github.com/users/vakaras/events{/privacy}", "received_events_url": "https://api.github.com/users/vakaras/received_events", "type": "User", "site_admin": false}, "committer": {"login": "vakaras", "id": 75347, "node_id": "MDQ6VXNlcjc1MzQ3", "avatar_url": "https://avatars.githubusercontent.com/u/75347?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vakaras", "html_url": "https://github.com/vakaras", "followers_url": "https://api.github.com/users/vakaras/followers", "following_url": "https://api.github.com/users/vakaras/following{/other_user}", "gists_url": "https://api.github.com/users/vakaras/gists{/gist_id}", "starred_url": "https://api.github.com/users/vakaras/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vakaras/subscriptions", "organizations_url": "https://api.github.com/users/vakaras/orgs", "repos_url": "https://api.github.com/users/vakaras/repos", "events_url": "https://api.github.com/users/vakaras/events{/privacy}", "received_events_url": "https://api.github.com/users/vakaras/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "91bfbb968751ae8441ebccefed7cd63ca00b43dd", "url": "https://api.github.com/repos/rust-lang/rust/commits/91bfbb968751ae8441ebccefed7cd63ca00b43dd", "html_url": "https://github.com/rust-lang/rust/commit/91bfbb968751ae8441ebccefed7cd63ca00b43dd"}], "stats": {"total": 26, "additions": 12, "deletions": 14}, "files": [{"sha": "edf4aeab1c70fb1ba0c4fa1e1186c8ae416d28d7", "filename": "src/tools/compiletest/Cargo.toml", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/ecf8df5b7e5b65cb55409fce80dd58ebebd6c846/src%2Ftools%2Fcompiletest%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/ecf8df5b7e5b65cb55409fce80dd58ebebd6c846/src%2Ftools%2Fcompiletest%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fcompiletest%2FCargo.toml?ref=ecf8df5b7e5b65cb55409fce80dd58ebebd6c846", "patch": "@@ -15,6 +15,7 @@ serde_json = \"1.0\"\n serde_derive = \"1.0\"\n rustfix = \"0.4.1\"\n lazy_static = \"1.0\"\n+walkdir = \"2\"\n \n [target.'cfg(unix)'.dependencies]\n libc = \"0.2\""}, {"sha": "a532e900ea3e0854e953876c0907d058c320ab24", "filename": "src/tools/compiletest/src/main.rs", "status": "modified", "additions": 11, "deletions": 14, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/ecf8df5b7e5b65cb55409fce80dd58ebebd6c846/src%2Ftools%2Fcompiletest%2Fsrc%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ecf8df5b7e5b65cb55409fce80dd58ebebd6c846/src%2Ftools%2Fcompiletest%2Fsrc%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fcompiletest%2Fsrc%2Fmain.rs?ref=ecf8df5b7e5b65cb55409fce80dd58ebebd6c846", "patch": "@@ -28,6 +28,7 @@ extern crate serde_derive;\n extern crate serde_json;\n extern crate test;\n extern crate rustfix;\n+extern crate walkdir;\n \n use common::CompareMode;\n use common::{expected_output_path, output_base_dir, output_relative_path, UI_EXTENSIONS};\n@@ -43,6 +44,7 @@ use std::path::{Path, PathBuf};\n use std::process::Command;\n use test::ColorConfig;\n use util::logv;\n+use walkdir::WalkDir;\n \n use self::header::{EarlyProps, Ignore};\n \n@@ -682,18 +684,13 @@ fn stamp(config: &Config, testpaths: &TestPaths, revision: Option<&str>) -> Path\n     output_base_dir(config, testpaths, revision).join(\"stamp\")\n }\n \n-/// Walk the directory at `path` and collect timestamps of all files into `inputs`.\n-fn collect_timestamps(path: &PathBuf, inputs: &mut Vec<FileTime>) {\n-    let mut entries = path.read_dir().unwrap().collect::<Vec<_>>();\n-    while let Some(entry) = entries.pop() {\n-        let entry = entry.unwrap();\n-        let path = entry.path();\n-        if entry.metadata().unwrap().is_file() {\n-            inputs.push(mtime(&path));\n-        } else {\n-            entries.extend(path.read_dir().unwrap());\n-        }\n-    }\n+/// Return an iterator over timestamps of files in the directory at `path`.\n+fn collect_timestamps(path: &PathBuf) -> impl Iterator<Item=FileTime> {\n+    WalkDir::new(path)\n+        .into_iter()\n+        .map(|entry| entry.unwrap())\n+        .filter(|entry| entry.metadata().unwrap().is_file())\n+        .map(|entry| mtime(entry.path()))\n }\n \n fn up_to_date(\n@@ -739,7 +736,7 @@ fn up_to_date(\n     for pretty_printer_file in &pretty_printer_files {\n         inputs.push(mtime(&rust_src_dir.join(pretty_printer_file)));\n     }\n-    collect_timestamps(&config.run_lib_path, &mut inputs);\n+    inputs.extend(collect_timestamps(&config.run_lib_path));\n     if let Some(ref rustdoc_path) = config.rustdoc_path {\n         inputs.push(mtime(&rustdoc_path));\n         inputs.push(mtime(&rust_src_dir.join(\"src/etc/htmldocck.py\")));\n@@ -752,7 +749,7 @@ fn up_to_date(\n     }\n \n     // Compiletest itself.\n-    collect_timestamps(&rust_src_dir.join(\"src/tools/compiletest/\"), &mut inputs);\n+    inputs.extend(collect_timestamps(&rust_src_dir.join(\"src/tools/compiletest/\")));\n \n     inputs.iter().any(|input| *input > stamp)\n }"}]}