{"sha": "a9e1b1fba05ce94a65f511e2c07bd086c1b0f00f", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE5ZTFiMWZiYTA1Y2U5NGE2NWY1MTFlMmMwN2JkMDg2YzFiMGYwMGY=", "commit": {"author": {"name": "mcarton", "email": "cartonmartin+git@gmail.com", "date": "2016-02-07T13:40:45Z"}, "committer": {"name": "mcarton", "email": "cartonmartin+git@gmail.com", "date": "2016-02-07T13:40:45Z"}, "message": "Small cleanup", "tree": {"sha": "3d529f99d3b34cc4598122489ce38fc7bf8e21b6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3d529f99d3b34cc4598122489ce38fc7bf8e21b6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a9e1b1fba05ce94a65f511e2c07bd086c1b0f00f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a9e1b1fba05ce94a65f511e2c07bd086c1b0f00f", "html_url": "https://github.com/rust-lang/rust/commit/a9e1b1fba05ce94a65f511e2c07bd086c1b0f00f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a9e1b1fba05ce94a65f511e2c07bd086c1b0f00f/comments", "author": {"login": "mcarton", "id": 3751788, "node_id": "MDQ6VXNlcjM3NTE3ODg=", "avatar_url": "https://avatars.githubusercontent.com/u/3751788?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mcarton", "html_url": "https://github.com/mcarton", "followers_url": "https://api.github.com/users/mcarton/followers", "following_url": "https://api.github.com/users/mcarton/following{/other_user}", "gists_url": "https://api.github.com/users/mcarton/gists{/gist_id}", "starred_url": "https://api.github.com/users/mcarton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mcarton/subscriptions", "organizations_url": "https://api.github.com/users/mcarton/orgs", "repos_url": "https://api.github.com/users/mcarton/repos", "events_url": "https://api.github.com/users/mcarton/events{/privacy}", "received_events_url": "https://api.github.com/users/mcarton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "mcarton", "id": 3751788, "node_id": "MDQ6VXNlcjM3NTE3ODg=", "avatar_url": "https://avatars.githubusercontent.com/u/3751788?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mcarton", "html_url": "https://github.com/mcarton", "followers_url": "https://api.github.com/users/mcarton/followers", "following_url": "https://api.github.com/users/mcarton/following{/other_user}", "gists_url": "https://api.github.com/users/mcarton/gists{/gist_id}", "starred_url": "https://api.github.com/users/mcarton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mcarton/subscriptions", "organizations_url": "https://api.github.com/users/mcarton/orgs", "repos_url": "https://api.github.com/users/mcarton/repos", "events_url": "https://api.github.com/users/mcarton/events{/privacy}", "received_events_url": "https://api.github.com/users/mcarton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "344698377f04124a5df01e498e55c3e27eac294d", "url": "https://api.github.com/repos/rust-lang/rust/commits/344698377f04124a5df01e498e55c3e27eac294d", "html_url": "https://github.com/rust-lang/rust/commit/344698377f04124a5df01e498e55c3e27eac294d"}], "stats": {"total": 13, "additions": 4, "deletions": 9}, "files": [{"sha": "525c7b7a6fde2e8acd5c6209deef94f69447bab6", "filename": "src/copies.rs", "status": "modified", "additions": 4, "deletions": 9, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/a9e1b1fba05ce94a65f511e2c07bd086c1b0f00f/src%2Fcopies.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a9e1b1fba05ce94a65f511e2c07bd086c1b0f00f/src%2Fcopies.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcopies.rs?ref=a9e1b1fba05ce94a65f511e2c07bd086c1b0f00f", "patch": "@@ -54,15 +54,10 @@ impl LateLintPass for CopyAndPaste {\n /// Implementation of `IF_SAME_THEN_ELSE`.\n fn lint_same_then_else(cx: &LateContext, expr: &Expr) {\n     if let ExprIf(_, ref then_block, Some(ref else_expr)) = expr.node {\n-        let must_lint = if let ExprBlock(ref else_block) = else_expr.node {\n-            is_block_equal(cx, &then_block, &else_block, false)\n-        }\n-        else {\n-            false\n-        };\n-\n-        if must_lint {\n-            span_lint(cx, IF_SAME_THEN_ELSE, expr.span, \"this if has the same then and else blocks\");\n+        if let ExprBlock(ref else_block) = else_expr.node {\n+            if is_block_equal(cx, &then_block, &else_block, false) {\n+                span_lint(cx, IF_SAME_THEN_ELSE, expr.span, \"this if has the same then and else blocks\");\n+            }\n         }\n     }\n }"}]}