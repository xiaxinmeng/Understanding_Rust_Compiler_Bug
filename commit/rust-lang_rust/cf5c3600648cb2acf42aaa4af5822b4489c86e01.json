{"sha": "cf5c3600648cb2acf42aaa4af5822b4489c86e01", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNmNWMzNjAwNjQ4Y2IyYWNmNDJhYWE0YWY1ODIyYjQ0ODljODZlMDE=", "commit": {"author": {"name": "gnzlbg", "email": "gonzalobg88@gmail.com", "date": "2019-03-04T17:17:41Z"}, "committer": {"name": "gnzlbg", "email": "gonzalobg88@gmail.com", "date": "2019-03-19T12:58:48Z"}, "message": "Export stats::Summary from libtest", "tree": {"sha": "2b4f3975a8dd8f14b4e46cd51c046434c87b9e8a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2b4f3975a8dd8f14b4e46cd51c046434c87b9e8a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/cf5c3600648cb2acf42aaa4af5822b4489c86e01", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/cf5c3600648cb2acf42aaa4af5822b4489c86e01", "html_url": "https://github.com/rust-lang/rust/commit/cf5c3600648cb2acf42aaa4af5822b4489c86e01", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/cf5c3600648cb2acf42aaa4af5822b4489c86e01/comments", "author": {"login": "gnzlbg", "id": 904614, "node_id": "MDQ6VXNlcjkwNDYxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/904614?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gnzlbg", "html_url": "https://github.com/gnzlbg", "followers_url": "https://api.github.com/users/gnzlbg/followers", "following_url": "https://api.github.com/users/gnzlbg/following{/other_user}", "gists_url": "https://api.github.com/users/gnzlbg/gists{/gist_id}", "starred_url": "https://api.github.com/users/gnzlbg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gnzlbg/subscriptions", "organizations_url": "https://api.github.com/users/gnzlbg/orgs", "repos_url": "https://api.github.com/users/gnzlbg/repos", "events_url": "https://api.github.com/users/gnzlbg/events{/privacy}", "received_events_url": "https://api.github.com/users/gnzlbg/received_events", "type": "User", "site_admin": false}, "committer": {"login": "gnzlbg", "id": 904614, "node_id": "MDQ6VXNlcjkwNDYxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/904614?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gnzlbg", "html_url": "https://github.com/gnzlbg", "followers_url": "https://api.github.com/users/gnzlbg/followers", "following_url": "https://api.github.com/users/gnzlbg/following{/other_user}", "gists_url": "https://api.github.com/users/gnzlbg/gists{/gist_id}", "starred_url": "https://api.github.com/users/gnzlbg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gnzlbg/subscriptions", "organizations_url": "https://api.github.com/users/gnzlbg/orgs", "repos_url": "https://api.github.com/users/gnzlbg/repos", "events_url": "https://api.github.com/users/gnzlbg/events{/privacy}", "received_events_url": "https://api.github.com/users/gnzlbg/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a5e7f0c75b5db5c0ded0b46437ba17673cb98aa9", "url": "https://api.github.com/repos/rust-lang/rust/commits/a5e7f0c75b5db5c0ded0b46437ba17673cb98aa9", "html_url": "https://github.com/rust-lang/rust/commit/a5e7f0c75b5db5c0ded0b46437ba17673cb98aa9"}], "stats": {"total": 5, "additions": 4, "deletions": 1}, "files": [{"sha": "3fcba0f579145b4ebb02afc8d4f80f0c1289f244", "filename": "src/libtest/lib.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/cf5c3600648cb2acf42aaa4af5822b4489c86e01/src%2Flibtest%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cf5c3600648cb2acf42aaa4af5822b4489c86e01/src%2Flibtest%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibtest%2Flib.rs?ref=cf5c3600648cb2acf42aaa4af5822b4489c86e01", "patch": "@@ -17,11 +17,14 @@\n #![feature(test)]\n \n extern crate libtest;\n+\n+// FIXME: we should be more explicit about the exact APIs that we\n+// export to users.\n pub use libtest::{\n     assert_test_result, filter_tests, parse_opts, run_test, test_main, test_main_static,\n     Bencher, DynTestFn, DynTestName, Metric, MetricMap, Options, RunIgnored, ShouldPanic,\n     StaticBenchFn, StaticTestFn, StaticTestName, TestDesc, TestDescAndFn, TestName, TestOpts,\n-    TestResult, TrFailed, TrFailedMsg, TrIgnored, TrOk,\n+    TestResult, TrFailed, TrFailedMsg, TrIgnored, TrOk, stats::Summary\n };\n \n /// A function that is opaque to the optimizer, to allow benchmarks to"}]}