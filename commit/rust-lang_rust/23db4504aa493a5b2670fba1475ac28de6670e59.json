{"sha": "23db4504aa493a5b2670fba1475ac28de6670e59", "node_id": "MDY6Q29tbWl0NzI0NzEyOjIzZGI0NTA0YWE0OTNhNWIyNjcwZmJhMTQ3NWFjMjhkZTY2NzBlNTk=", "commit": {"author": {"name": "Mark Mansi", "email": "markm@cs.wisc.edu", "date": "2019-09-12T22:42:10Z"}, "committer": {"name": "Mark Mansi", "email": "markm@cs.wisc.edu", "date": "2019-09-12T22:42:10Z"}, "message": "minor fixes", "tree": {"sha": "1b327669bc31d336baa782386dc77a06947d93a2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1b327669bc31d336baa782386dc77a06947d93a2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/23db4504aa493a5b2670fba1475ac28de6670e59", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/23db4504aa493a5b2670fba1475ac28de6670e59", "html_url": "https://github.com/rust-lang/rust/commit/23db4504aa493a5b2670fba1475ac28de6670e59", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/23db4504aa493a5b2670fba1475ac28de6670e59/comments", "author": {"login": "mark-i-m", "id": 8827840, "node_id": "MDQ6VXNlcjg4Mjc4NDA=", "avatar_url": "https://avatars.githubusercontent.com/u/8827840?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mark-i-m", "html_url": "https://github.com/mark-i-m", "followers_url": "https://api.github.com/users/mark-i-m/followers", "following_url": "https://api.github.com/users/mark-i-m/following{/other_user}", "gists_url": "https://api.github.com/users/mark-i-m/gists{/gist_id}", "starred_url": "https://api.github.com/users/mark-i-m/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mark-i-m/subscriptions", "organizations_url": "https://api.github.com/users/mark-i-m/orgs", "repos_url": "https://api.github.com/users/mark-i-m/repos", "events_url": "https://api.github.com/users/mark-i-m/events{/privacy}", "received_events_url": "https://api.github.com/users/mark-i-m/received_events", "type": "User", "site_admin": false}, "committer": {"login": "mark-i-m", "id": 8827840, "node_id": "MDQ6VXNlcjg4Mjc4NDA=", "avatar_url": "https://avatars.githubusercontent.com/u/8827840?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mark-i-m", "html_url": "https://github.com/mark-i-m", "followers_url": "https://api.github.com/users/mark-i-m/followers", "following_url": "https://api.github.com/users/mark-i-m/following{/other_user}", "gists_url": "https://api.github.com/users/mark-i-m/gists{/gist_id}", "starred_url": "https://api.github.com/users/mark-i-m/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mark-i-m/subscriptions", "organizations_url": "https://api.github.com/users/mark-i-m/orgs", "repos_url": "https://api.github.com/users/mark-i-m/repos", "events_url": "https://api.github.com/users/mark-i-m/events{/privacy}", "received_events_url": "https://api.github.com/users/mark-i-m/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "68b1a8741ebffde9e1bca054569211f66e3deea3", "url": "https://api.github.com/repos/rust-lang/rust/commits/68b1a8741ebffde9e1bca054569211f66e3deea3", "html_url": "https://github.com/rust-lang/rust/commit/68b1a8741ebffde9e1bca054569211f66e3deea3"}], "stats": {"total": 11, "additions": 8, "deletions": 3}, "files": [{"sha": "660f510ac196eadab6484ad4a58c2b9f569d6624", "filename": "src/librustc_mir/borrow_check/nll/region_infer/error_reporting/mod.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/23db4504aa493a5b2670fba1475ac28de6670e59/src%2Flibrustc_mir%2Fborrow_check%2Fnll%2Fregion_infer%2Ferror_reporting%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/23db4504aa493a5b2670fba1475ac28de6670e59/src%2Flibrustc_mir%2Fborrow_check%2Fnll%2Fregion_infer%2Ferror_reporting%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check%2Fnll%2Fregion_infer%2Ferror_reporting%2Fmod.rs?ref=23db4504aa493a5b2670fba1475ac28de6670e59", "patch": "@@ -56,6 +56,7 @@ enum Trace {\n \n /// Various pieces of state used when reporting borrow checker errors.\n pub struct ErrorReportingCtx<'a, 'b, 'tcx> {\n+    #[allow(dead_code)] // FIXME(mark-i-m): used by outlives suggestions\n     rinfcx: &'b RegionInferenceContext<'tcx>,\n     infcx: &'b InferCtxt<'a, 'tcx>,\n \n@@ -335,12 +336,12 @@ impl<'tcx> RegionInferenceContext<'tcx> {\n             }\n             (ConstraintCategory::Assignment, true, false)\n             | (ConstraintCategory::CallArgument, true, false) => {\n-                let mut db = self.report_escaping_data_error(&errctx, &errci, renctx);\n+                let db = self.report_escaping_data_error(&errctx, &errci, renctx);\n \n                 db\n             }\n             _ => {\n-                let mut db = self.report_general_error(&errctx, &errci, renctx);\n+                let db = self.report_general_error(&errctx, &errci, renctx);\n \n                 db\n             }"}, {"sha": "78e7943598d68ad7eb8761fe5f3bd935b04ef2c1", "filename": "src/librustc_mir/borrow_check/nll/region_infer/mod.rs", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/23db4504aa493a5b2670fba1475ac28de6670e59/src%2Flibrustc_mir%2Fborrow_check%2Fnll%2Fregion_infer%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/23db4504aa493a5b2670fba1475ac28de6670e59/src%2Flibrustc_mir%2Fborrow_check%2Fnll%2Fregion_infer%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check%2Fnll%2Fregion_infer%2Fmod.rs?ref=23db4504aa493a5b2670fba1475ac28de6670e59", "patch": "@@ -11,7 +11,6 @@ use crate::borrow_check::nll::{\n     region_infer::values::{\n         PlaceholderIndices, RegionElement, ToElementIndex\n     },\n-    region_infer::error_reporting::outlives_suggestion::OutlivesSuggestionBuilder,\n     type_check::{free_region_relations::UniversalRegionRelations, Locations},\n };\n use crate::borrow_check::Upvar;\n@@ -1340,6 +1339,7 @@ impl<'tcx> RegionInferenceContext<'tcx> {\n                         mir_def_id,\n                         fr,\n                         &mut propagated_outlives_requirements,\n+                        errors_buffer,\n                         region_naming,\n                     );\n                 }\n@@ -1371,6 +1371,7 @@ impl<'tcx> RegionInferenceContext<'tcx> {\n         mir_def_id: DefId,\n         longer_fr: RegionVid,\n         propagated_outlives_requirements: &mut Option<&mut Vec<ClosureOutlivesRequirement<'tcx>>>,\n+        errors_buffer: &mut Vec<Diagnostic>,\n         region_naming: &mut RegionErrorNamingCtx,\n     ) {\n         debug!(\"check_universal_region(fr={:?})\", longer_fr);\n@@ -1398,6 +1399,7 @@ impl<'tcx> RegionInferenceContext<'tcx> {\n                 upvars,\n                 mir_def_id,\n                 propagated_outlives_requirements,\n+                errors_buffer,\n                 region_naming,\n             );\n             return;\n@@ -1414,6 +1416,7 @@ impl<'tcx> RegionInferenceContext<'tcx> {\n                 upvars,\n                 mir_def_id,\n                 propagated_outlives_requirements,\n+                errors_buffer,\n                 region_naming,\n             ) {\n                 // continuing to iterate just reports more errors than necessary\n@@ -1435,6 +1438,7 @@ impl<'tcx> RegionInferenceContext<'tcx> {\n         upvars: &[Upvar],\n         mir_def_id: DefId,\n         propagated_outlives_requirements: &mut Option<&mut Vec<ClosureOutlivesRequirement<'tcx>>>,\n+        errors_buffer: &mut Vec<Diagnostic>,\n         region_naming: &mut RegionErrorNamingCtx,\n     ) -> Option<ErrorReported> {\n         // If it is known that `fr: o`, carry on."}]}