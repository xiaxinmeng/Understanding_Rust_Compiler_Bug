{"sha": "8a5843f07f20ae70b8caa24d78857ef221b54ccb", "node_id": "C_kwDOAAsO6NoAKDhhNTg0M2YwN2YyMGFlNzBiOGNhYTI0ZDc4ODU3ZWYyMjFiNTRjY2I", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2023-02-21T22:01:59Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2023-02-21T22:01:59Z"}, "message": "Rollup merge of #108202 - compiler-errors:non_lifetime_binders-type-match-ice, r=davidtwco\n\nMake sure `test_type_match` doesn't ICE with late-bound types\n\nFixes #108190 (in a kind of hacky way, anyways doesn't really matter)", "tree": {"sha": "680983327dc4a0513668d10c3a5869c2abc09800", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/680983327dc4a0513668d10c3a5869c2abc09800"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8a5843f07f20ae70b8caa24d78857ef221b54ccb", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJj9T9XCRBK7hj4Ov3rIwAAVvgIAHN1hDRoUEJMUdecSRFRX+4k\nIBjLKUFuYQpLkn14zx+BZ4FsbMQFiN4Vu9bee0pKMvINkYdbXYjj1HbiYhXXo9/P\nQ+qb0DfrZ8f5UT0GUB6QfHQG3MnY/qzYUHi0tQDPyA5ElDL2upmQkhJa+ZQotb++\n7kAh2WG2m7Qyp2wxkNQqSu9X7hd94nYPD7f8cqP6gyUu5TjTNXXaw/uc4XkIJpdd\n58RXIZt2zHlRkTqQXvZKFSLqlqkzORJCo7Iyp6g6uGJVQc/5zEXG6KdrJHKetOgj\nwgqxc52eZrtJjcHO2Z5lsE04GFeYPJh4Ts9dviIwtmeCcab+I/foTp8itGCbmHw=\n=7XZ+\n-----END PGP SIGNATURE-----\n", "payload": "tree 680983327dc4a0513668d10c3a5869c2abc09800\nparent 314fe4d170eae08a3f5c991133946d761e077280\nparent c13d5f1aebe05839907e401f2fc975f1df03a79e\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1677016919 +0100\ncommitter GitHub <noreply@github.com> 1677016919 +0100\n\nRollup merge of #108202 - compiler-errors:non_lifetime_binders-type-match-ice, r=davidtwco\n\nMake sure `test_type_match` doesn't ICE with late-bound types\n\nFixes #108190 (in a kind of hacky way, anyways doesn't really matter)\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8a5843f07f20ae70b8caa24d78857ef221b54ccb", "html_url": "https://github.com/rust-lang/rust/commit/8a5843f07f20ae70b8caa24d78857ef221b54ccb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8a5843f07f20ae70b8caa24d78857ef221b54ccb/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "314fe4d170eae08a3f5c991133946d761e077280", "url": "https://api.github.com/repos/rust-lang/rust/commits/314fe4d170eae08a3f5c991133946d761e077280", "html_url": "https://github.com/rust-lang/rust/commit/314fe4d170eae08a3f5c991133946d761e077280"}, {"sha": "c13d5f1aebe05839907e401f2fc975f1df03a79e", "url": "https://api.github.com/repos/rust-lang/rust/commits/c13d5f1aebe05839907e401f2fc975f1df03a79e", "html_url": "https://github.com/rust-lang/rust/commit/c13d5f1aebe05839907e401f2fc975f1df03a79e"}], "stats": {"total": 28, "additions": 27, "deletions": 1}, "files": [{"sha": "2f7c496161bca1d29ab46ca7c3c397392105cb30", "filename": "compiler/rustc_infer/src/infer/outlives/test_type_match.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/8a5843f07f20ae70b8caa24d78857ef221b54ccb/compiler%2Frustc_infer%2Fsrc%2Finfer%2Foutlives%2Ftest_type_match.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8a5843f07f20ae70b8caa24d78857ef221b54ccb/compiler%2Frustc_infer%2Fsrc%2Finfer%2Foutlives%2Ftest_type_match.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_infer%2Fsrc%2Finfer%2Foutlives%2Ftest_type_match.rs?ref=8a5843f07f20ae70b8caa24d78857ef221b54ccb", "patch": "@@ -186,7 +186,8 @@ impl<'tcx> TypeRelation<'tcx> for Match<'tcx> {\n \n     #[instrument(skip(self), level = \"debug\")]\n     fn tys(&mut self, pattern: Ty<'tcx>, value: Ty<'tcx>) -> RelateResult<'tcx, Ty<'tcx>> {\n-        if let ty::Error(_) = pattern.kind() {\n+        // FIXME(non_lifetime_binders): What to do here?\n+        if matches!(pattern.kind(), ty::Error(_) | ty::Bound(..)) {\n             // Unlike normal `TypeRelation` rules, `ty::Error` does not equal any type.\n             self.no_match()\n         } else if pattern == value {"}, {"sha": "5ff7089b993a828f29ce8bfc49a578b467cc19ff", "filename": "tests/ui/traits/non_lifetime_binders/type-match-with-late-bound.rs", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/8a5843f07f20ae70b8caa24d78857ef221b54ccb/tests%2Fui%2Ftraits%2Fnon_lifetime_binders%2Ftype-match-with-late-bound.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8a5843f07f20ae70b8caa24d78857ef221b54ccb/tests%2Fui%2Ftraits%2Fnon_lifetime_binders%2Ftype-match-with-late-bound.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ftraits%2Fnon_lifetime_binders%2Ftype-match-with-late-bound.rs?ref=8a5843f07f20ae70b8caa24d78857ef221b54ccb", "patch": "@@ -0,0 +1,14 @@\n+// edition:2021\n+// check-pass\n+\n+// Checks that test_type_match code doesn't ICE when predicates have late-bound types\n+\n+#![feature(non_lifetime_binders)]\n+//~^ WARN is incomplete and may not be safe to use\n+\n+async fn walk2<'a, T: 'a>(_: T)\n+where\n+    for<F> F: 'a,\n+{}\n+\n+fn main() {}"}, {"sha": "3609bed28dffb92f0e588c6298a415fccb4ade5b", "filename": "tests/ui/traits/non_lifetime_binders/type-match-with-late-bound.stderr", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/8a5843f07f20ae70b8caa24d78857ef221b54ccb/tests%2Fui%2Ftraits%2Fnon_lifetime_binders%2Ftype-match-with-late-bound.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/8a5843f07f20ae70b8caa24d78857ef221b54ccb/tests%2Fui%2Ftraits%2Fnon_lifetime_binders%2Ftype-match-with-late-bound.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ftraits%2Fnon_lifetime_binders%2Ftype-match-with-late-bound.stderr?ref=8a5843f07f20ae70b8caa24d78857ef221b54ccb", "patch": "@@ -0,0 +1,11 @@\n+warning: the feature `non_lifetime_binders` is incomplete and may not be safe to use and/or cause compiler crashes\n+  --> $DIR/type-match-with-late-bound.rs:6:12\n+   |\n+LL | #![feature(non_lifetime_binders)]\n+   |            ^^^^^^^^^^^^^^^^^^^^\n+   |\n+   = note: see issue #108185 <https://github.com/rust-lang/rust/issues/108185> for more information\n+   = note: `#[warn(incomplete_features)]` on by default\n+\n+warning: 1 warning emitted\n+"}]}