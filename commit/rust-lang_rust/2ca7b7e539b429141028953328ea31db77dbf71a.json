{"sha": "2ca7b7e539b429141028953328ea31db77dbf71a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJjYTdiN2U1MzliNDI5MTQxMDI4OTUzMzI4ZWEzMWRiNzdkYmY3MWE=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-12-13T03:21:22Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-12-13T03:21:22Z"}, "message": "Rollup merge of #66341 - crgl:vec-deque-extend, r=Amanieu\n\nMatch `VecDeque::extend` to `Vec::extend_desugared`\n\nCurrently, `VecDeque::extend` [does not reserve at all](https://github.com/rust-lang/rust/pull/65069#discussion_r333166522). This implementation still runs a check every iteration of the loop, but should reallocate at most once for the common cases where the `size_hint` lower bound is exact. Further optimizations in the future could improve this for some common cases, but given the complexity of the `Vec::extend` implementation it's not immediately clear that this would be worthwhile.", "tree": {"sha": "be8404e896662fb1f69be29d53f85f933eb43e72", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/be8404e896662fb1f69be29d53f85f933eb43e72"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2ca7b7e539b429141028953328ea31db77dbf71a", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJd8wOyCRBK7hj4Ov3rIwAAdHIIABaUP38QvB///aroIN0kg0zO\nlDQRwhk7EooW5xYkE6aBmY0Zl3zlDtecSNIJwsEcpkgrSApTRSQ88JbbGyGBcWt+\nYDwc+slfeet9VmS5JIYLkTyperhSLBAjK/WbuajhydTP35rR0S+UmCntj+49nRiT\npmxOeoVApf3vOEvhvtATZv7naUExLD+AxC+3NrBwpGOeFJ9C2ghzmfueY41a82Tg\n/Ze86ZhLR6OkyAAJcedVCmvCVkPv7SYhaFLI0zlkpmFIJ69qUfKko/iOAVrwadq5\n++Sc7Jv5dD10HvY/kS6hnY9dHdCOd5CXckWy92jCezZYmO6F3zE8xw6+HPJI4H0=\n=60jg\n-----END PGP SIGNATURE-----\n", "payload": "tree be8404e896662fb1f69be29d53f85f933eb43e72\nparent 3eeb8d4f2fbae0bb1c587d00b5abeaf938da47f4\nparent 164d1a205d21e0bc54b60cb4e9badf27b3883ffd\nauthor Mazdak Farrokhzad <twingoow@gmail.com> 1576207282 +0100\ncommitter GitHub <noreply@github.com> 1576207282 +0100\n\nRollup merge of #66341 - crgl:vec-deque-extend, r=Amanieu\n\nMatch `VecDeque::extend` to `Vec::extend_desugared`\n\nCurrently, `VecDeque::extend` [does not reserve at all](https://github.com/rust-lang/rust/pull/65069#discussion_r333166522). This implementation still runs a check every iteration of the loop, but should reallocate at most once for the common cases where the `size_hint` lower bound is exact. Further optimizations in the future could improve this for some common cases, but given the complexity of the `Vec::extend` implementation it's not immediately clear that this would be worthwhile.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2ca7b7e539b429141028953328ea31db77dbf71a", "html_url": "https://github.com/rust-lang/rust/commit/2ca7b7e539b429141028953328ea31db77dbf71a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2ca7b7e539b429141028953328ea31db77dbf71a/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3eeb8d4f2fbae0bb1c587d00b5abeaf938da47f4", "url": "https://api.github.com/repos/rust-lang/rust/commits/3eeb8d4f2fbae0bb1c587d00b5abeaf938da47f4", "html_url": "https://github.com/rust-lang/rust/commit/3eeb8d4f2fbae0bb1c587d00b5abeaf938da47f4"}, {"sha": "164d1a205d21e0bc54b60cb4e9badf27b3883ffd", "url": "https://api.github.com/repos/rust-lang/rust/commits/164d1a205d21e0bc54b60cb4e9badf27b3883ffd", "html_url": "https://github.com/rust-lang/rust/commit/164d1a205d21e0bc54b60cb4e9badf27b3883ffd"}], "stats": {"total": 17, "additions": 16, "deletions": 1}, "files": [{"sha": "ebd3f0100771b64d5f7b03dbfdf91a7755897dac", "filename": "src/liballoc/collections/vec_deque.rs", "status": "modified", "additions": 16, "deletions": 1, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/2ca7b7e539b429141028953328ea31db77dbf71a/src%2Fliballoc%2Fcollections%2Fvec_deque.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2ca7b7e539b429141028953328ea31db77dbf71a/src%2Fliballoc%2Fcollections%2Fvec_deque.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Fcollections%2Fvec_deque.rs?ref=2ca7b7e539b429141028953328ea31db77dbf71a", "patch": "@@ -2809,7 +2809,22 @@ impl<'a, T> IntoIterator for &'a mut VecDeque<T> {\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n impl<A> Extend<A> for VecDeque<A> {\n     fn extend<T: IntoIterator<Item = A>>(&mut self, iter: T) {\n-        iter.into_iter().for_each(move |elt| self.push_back(elt));\n+        // This function should be the moral equivalent of:\n+        //\n+        //      for item in iter.into_iter() {\n+        //          self.push_back(item);\n+        //      }\n+        let mut iter = iter.into_iter();\n+        while let Some(element) = iter.next() {\n+            if self.len() == self.capacity() {\n+                let (lower, _) = iter.size_hint();\n+                self.reserve(lower.saturating_add(1));\n+            }\n+\n+            let head = self.head;\n+            self.head = self.wrap_add(self.head, 1);\n+            unsafe { self.buffer_write(head, element); }\n+        }\n     }\n }\n "}]}