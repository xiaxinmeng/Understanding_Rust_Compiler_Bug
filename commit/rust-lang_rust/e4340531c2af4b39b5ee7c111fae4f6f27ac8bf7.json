{"sha": "e4340531c2af4b39b5ee7c111fae4f6f27ac8bf7", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU0MzQwNTMxYzJhZjRiMzliNWVlN2MxMTFmYWU0ZjZmMjdhYzhiZjc=", "commit": {"author": {"name": "Felix S. Klock II", "email": "pnkfelix@pnkfx.org", "date": "2015-03-30T09:47:27Z"}, "committer": {"name": "Felix S. Klock II", "email": "pnkfelix@pnkfx.org", "date": "2015-03-30T12:10:46Z"}, "message": "Fallout to test.", "tree": {"sha": "a321a1a48da27fb6466672ea20011e30c1691825", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a321a1a48da27fb6466672ea20011e30c1691825"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e4340531c2af4b39b5ee7c111fae4f6f27ac8bf7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e4340531c2af4b39b5ee7c111fae4f6f27ac8bf7", "html_url": "https://github.com/rust-lang/rust/commit/e4340531c2af4b39b5ee7c111fae4f6f27ac8bf7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e4340531c2af4b39b5ee7c111fae4f6f27ac8bf7/comments", "author": {"login": "pnkfelix", "id": 173127, "node_id": "MDQ6VXNlcjE3MzEyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/173127?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pnkfelix", "html_url": "https://github.com/pnkfelix", "followers_url": "https://api.github.com/users/pnkfelix/followers", "following_url": "https://api.github.com/users/pnkfelix/following{/other_user}", "gists_url": "https://api.github.com/users/pnkfelix/gists{/gist_id}", "starred_url": "https://api.github.com/users/pnkfelix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pnkfelix/subscriptions", "organizations_url": "https://api.github.com/users/pnkfelix/orgs", "repos_url": "https://api.github.com/users/pnkfelix/repos", "events_url": "https://api.github.com/users/pnkfelix/events{/privacy}", "received_events_url": "https://api.github.com/users/pnkfelix/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pnkfelix", "id": 173127, "node_id": "MDQ6VXNlcjE3MzEyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/173127?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pnkfelix", "html_url": "https://github.com/pnkfelix", "followers_url": "https://api.github.com/users/pnkfelix/followers", "following_url": "https://api.github.com/users/pnkfelix/following{/other_user}", "gists_url": "https://api.github.com/users/pnkfelix/gists{/gist_id}", "starred_url": "https://api.github.com/users/pnkfelix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pnkfelix/subscriptions", "organizations_url": "https://api.github.com/users/pnkfelix/orgs", "repos_url": "https://api.github.com/users/pnkfelix/repos", "events_url": "https://api.github.com/users/pnkfelix/events{/privacy}", "received_events_url": "https://api.github.com/users/pnkfelix/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f513380cf51eb5fd977b8815a7acd999e424dc93", "url": "https://api.github.com/repos/rust-lang/rust/commits/f513380cf51eb5fd977b8815a7acd999e424dc93", "html_url": "https://github.com/rust-lang/rust/commit/f513380cf51eb5fd977b8815a7acd999e424dc93"}], "stats": {"total": 62, "additions": 61, "deletions": 1}, "files": [{"sha": "64033623fe2d13e86ca3349dd9d520de47346564", "filename": "src/test/compile-fail/borrowck-issue-14498.rs", "status": "modified", "additions": 61, "deletions": 1, "changes": 62, "blob_url": "https://github.com/rust-lang/rust/blob/e4340531c2af4b39b5ee7c111fae4f6f27ac8bf7/src%2Ftest%2Fcompile-fail%2Fborrowck-issue-14498.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e4340531c2af4b39b5ee7c111fae4f6f27ac8bf7/src%2Ftest%2Fcompile-fail%2Fborrowck-issue-14498.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fborrowck-issue-14498.rs?ref=e4340531c2af4b39b5ee7c111fae4f6f27ac8bf7", "patch": "@@ -9,56 +9,116 @@\n // except according to those terms.\n \n // This tests that we can't modify Box<&mut T> contents while they\n-// are borrowed.\n+// are borrowed (#14498).\n+//\n+// Also includes tests of the errors reported when the Box in question\n+// is immutable (#14270).\n \n #![feature(box_syntax)]\n \n struct A { a: isize }\n struct B<'a> { a: Box<&'a mut isize> }\n \n+fn indirect_write_to_imm_box() {\n+    let mut x: isize = 1;\n+    let y: Box<_> = box &mut x;\n+    let p = &y;\n+    ***p = 2; //~ ERROR cannot assign to data in an immutable container\n+    drop(p);\n+}\n+\n fn borrow_in_var_from_var() {\n+    let mut x: isize = 1;\n+    let mut y: Box<_> = box &mut x;\n+    let p = &y;\n+    let q = &***p;\n+    **y = 2; //~ ERROR cannot assign to `**y` because it is borrowed\n+    drop(p);\n+    drop(q);\n+}\n+\n+fn borrow_in_var_from_var_via_imm_box() {\n     let mut x: isize = 1;\n     let y: Box<_> = box &mut x;\n     let p = &y;\n     let q = &***p;\n     **y = 2; //~ ERROR cannot assign to `**y` because it is borrowed\n+    //~^         ERROR cannot assign to data in an immutable container\n     drop(p);\n     drop(q);\n }\n \n fn borrow_in_var_from_field() {\n+    let mut x = A { a: 1 };\n+    let mut y: Box<_> = box &mut x.a;\n+    let p = &y;\n+    let q = &***p;\n+    **y = 2; //~ ERROR cannot assign to `**y` because it is borrowed\n+    drop(p);\n+    drop(q);\n+}\n+\n+fn borrow_in_var_from_field_via_imm_box() {\n     let mut x = A { a: 1 };\n     let y: Box<_> = box &mut x.a;\n     let p = &y;\n     let q = &***p;\n     **y = 2; //~ ERROR cannot assign to `**y` because it is borrowed\n+    //~^         ERROR cannot assign to data in an immutable container\n     drop(p);\n     drop(q);\n }\n \n fn borrow_in_field_from_var() {\n+    let mut x: isize = 1;\n+    let mut y = B { a: box &mut x };\n+    let p = &y.a;\n+    let q = &***p;\n+    **y.a = 2; //~ ERROR cannot assign to `**y.a` because it is borrowed\n+    drop(p);\n+    drop(q);\n+}\n+\n+fn borrow_in_field_from_var_via_imm_box() {\n     let mut x: isize = 1;\n     let y = B { a: box &mut x };\n     let p = &y.a;\n     let q = &***p;\n     **y.a = 2; //~ ERROR cannot assign to `**y.a` because it is borrowed\n+    //~^           ERROR cannot assign to data in an immutable container\n     drop(p);\n     drop(q);\n }\n \n fn borrow_in_field_from_field() {\n+    let mut x = A { a: 1 };\n+    let mut y = B { a: box &mut x.a };\n+    let p = &y.a;\n+    let q = &***p;\n+    **y.a = 2; //~ ERROR cannot assign to `**y.a` because it is borrowed\n+    drop(p);\n+    drop(q);\n+}\n+\n+fn borrow_in_field_from_field_via_imm_box() {\n     let mut x = A { a: 1 };\n     let y = B { a: box &mut x.a };\n     let p = &y.a;\n     let q = &***p;\n     **y.a = 2; //~ ERROR cannot assign to `**y.a` because it is borrowed\n+    //~^           ERROR cannot assign to data in an immutable container\n     drop(p);\n     drop(q);\n }\n \n fn main() {\n+    indirect_write_to_imm_box();\n     borrow_in_var_from_var();\n+    borrow_in_var_from_var_via_imm_box();\n     borrow_in_var_from_field();\n+    borrow_in_var_from_field_via_imm_box();\n     borrow_in_field_from_var();\n+    borrow_in_field_from_var_via_imm_box();\n     borrow_in_field_from_field();\n+    borrow_in_field_from_field_via_imm_box();\n }"}]}