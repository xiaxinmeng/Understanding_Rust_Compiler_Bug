{"sha": "c6079d05860e9d69c867007305e7c15ce4d8c389", "node_id": "MDY6Q29tbWl0NzI0NzEyOmM2MDc5ZDA1ODYwZTlkNjljODY3MDA3MzA1ZTdjMTVjZTRkOGMzODk=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2015-12-21T02:26:10Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2015-12-21T02:26:10Z"}, "message": "Auto merge of #30486 - nagisa:mir-fix-geps, r=luqmana\n\nFixes https://github.com/rust-lang/rust/issues/30474", "tree": {"sha": "1c40b8f58c2308f9a2fee490b6dbf46bd9e46b2f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1c40b8f58c2308f9a2fee490b6dbf46bd9e46b2f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c6079d05860e9d69c867007305e7c15ce4d8c389", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c6079d05860e9d69c867007305e7c15ce4d8c389", "html_url": "https://github.com/rust-lang/rust/commit/c6079d05860e9d69c867007305e7c15ce4d8c389", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c6079d05860e9d69c867007305e7c15ce4d8c389/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2b8e96dad2d30d1ece97a382e63dd845b354890e", "url": "https://api.github.com/repos/rust-lang/rust/commits/2b8e96dad2d30d1ece97a382e63dd845b354890e", "html_url": "https://github.com/rust-lang/rust/commit/2b8e96dad2d30d1ece97a382e63dd845b354890e"}, {"sha": "2b2f983523e6ca12889cd319cf32f558d79cdfd6", "url": "https://api.github.com/repos/rust-lang/rust/commits/2b2f983523e6ca12889cd319cf32f558d79cdfd6", "html_url": "https://github.com/rust-lang/rust/commit/2b2f983523e6ca12889cd319cf32f558d79cdfd6"}], "stats": {"total": 9, "additions": 6, "deletions": 3}, "files": [{"sha": "b167633909a4a3bde6f5d02ddf6e22cefd8113cd", "filename": "src/librustc_trans/trans/mir/lvalue.rs", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/c6079d05860e9d69c867007305e7c15ce4d8c389/src%2Flibrustc_trans%2Ftrans%2Fmir%2Flvalue.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c6079d05860e9d69c867007305e7c15ce4d8c389/src%2Flibrustc_trans%2Ftrans%2Fmir%2Flvalue.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Ftrans%2Fmir%2Flvalue.rs?ref=c6079d05860e9d69c867007305e7c15ce4d8c389", "patch": "@@ -132,15 +132,17 @@ impl<'bcx, 'tcx> MirContext<'bcx, 'tcx> {\n                     mir::ProjectionElem::Index(ref index) => {\n                         let index = self.trans_operand(bcx, index);\n                         let llindex = self.prepare_index(bcx, index.immediate());\n-                        (build::InBoundsGEP(bcx, tr_base.llval, &[llindex]),\n+                        let zero = common::C_uint(bcx.ccx(), 0u64);\n+                        (build::InBoundsGEP(bcx, tr_base.llval, &[zero, llindex]),\n                          ptr::null_mut())\n                     }\n                     mir::ProjectionElem::ConstantIndex { offset,\n                                                          from_end: false,\n                                                          min_length: _ } => {\n                         let lloffset = common::C_u32(bcx.ccx(), offset);\n                         let llindex = self.prepare_index(bcx, lloffset);\n-                        (build::InBoundsGEP(bcx, tr_base.llval, &[llindex]),\n+                        let zero = common::C_uint(bcx.ccx(), 0u64);\n+                        (build::InBoundsGEP(bcx, tr_base.llval, &[zero, llindex]),\n                          ptr::null_mut())\n                     }\n                     mir::ProjectionElem::ConstantIndex { offset,\n@@ -150,7 +152,8 @@ impl<'bcx, 'tcx> MirContext<'bcx, 'tcx> {\n                         let lllen = self.lvalue_len(bcx, tr_base);\n                         let llindex = build::Sub(bcx, lllen, lloffset, DebugLoc::None);\n                         let llindex = self.prepare_index(bcx, llindex);\n-                        (build::InBoundsGEP(bcx, tr_base.llval, &[llindex]),\n+                        let zero = common::C_uint(bcx.ccx(), 0u64);\n+                        (build::InBoundsGEP(bcx, tr_base.llval, &[zero, llindex]),\n                          ptr::null_mut())\n                     }\n                     mir::ProjectionElem::Downcast(..) => {"}]}