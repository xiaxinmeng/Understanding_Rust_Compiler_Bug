{"sha": "eba54c2fc9c15ec6480385486b7f711a7f2ca39e", "node_id": "C_kwDOAAsO6NoAKGViYTU0YzJmYzljMTVlYzY0ODAzODU0ODZiN2Y3MTFhN2YyY2EzOWU", "commit": {"author": {"name": "Stanislav", "email": "enomado@users.noreply.github.com", "date": "2022-09-07T01:09:25Z"}, "committer": {"name": "Stanislav", "email": "enomado@users.noreply.github.com", "date": "2022-09-07T01:09:25Z"}, "message": "pretty solition works", "tree": {"sha": "1f3e4c30a012444fd601f8fd97aa40b0b1453d8d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1f3e4c30a012444fd601f8fd97aa40b0b1453d8d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/eba54c2fc9c15ec6480385486b7f711a7f2ca39e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/eba54c2fc9c15ec6480385486b7f711a7f2ca39e", "html_url": "https://github.com/rust-lang/rust/commit/eba54c2fc9c15ec6480385486b7f711a7f2ca39e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/eba54c2fc9c15ec6480385486b7f711a7f2ca39e/comments", "author": {"login": "enomado", "id": 707007, "node_id": "MDQ6VXNlcjcwNzAwNw==", "avatar_url": "https://avatars.githubusercontent.com/u/707007?v=4", "gravatar_id": "", "url": "https://api.github.com/users/enomado", "html_url": "https://github.com/enomado", "followers_url": "https://api.github.com/users/enomado/followers", "following_url": "https://api.github.com/users/enomado/following{/other_user}", "gists_url": "https://api.github.com/users/enomado/gists{/gist_id}", "starred_url": "https://api.github.com/users/enomado/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/enomado/subscriptions", "organizations_url": "https://api.github.com/users/enomado/orgs", "repos_url": "https://api.github.com/users/enomado/repos", "events_url": "https://api.github.com/users/enomado/events{/privacy}", "received_events_url": "https://api.github.com/users/enomado/received_events", "type": "User", "site_admin": false}, "committer": {"login": "enomado", "id": 707007, "node_id": "MDQ6VXNlcjcwNzAwNw==", "avatar_url": "https://avatars.githubusercontent.com/u/707007?v=4", "gravatar_id": "", "url": "https://api.github.com/users/enomado", "html_url": "https://github.com/enomado", "followers_url": "https://api.github.com/users/enomado/followers", "following_url": "https://api.github.com/users/enomado/following{/other_user}", "gists_url": "https://api.github.com/users/enomado/gists{/gist_id}", "starred_url": "https://api.github.com/users/enomado/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/enomado/subscriptions", "organizations_url": "https://api.github.com/users/enomado/orgs", "repos_url": "https://api.github.com/users/enomado/repos", "events_url": "https://api.github.com/users/enomado/events{/privacy}", "received_events_url": "https://api.github.com/users/enomado/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "92d54f9b304092f20645d8ef0d54d7b724810428", "url": "https://api.github.com/repos/rust-lang/rust/commits/92d54f9b304092f20645d8ef0d54d7b724810428", "html_url": "https://github.com/rust-lang/rust/commit/92d54f9b304092f20645d8ef0d54d7b724810428"}], "stats": {"total": 30, "additions": 6, "deletions": 24}, "files": [{"sha": "6c8ae812c97c7d424c54626155f3a62f9e3e8511", "filename": "crates/ide/src/references.rs", "status": "modified", "additions": 6, "deletions": 24, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/eba54c2fc9c15ec6480385486b7f711a7f2ca39e/crates%2Fide%2Fsrc%2Freferences.rs", "raw_url": "https://github.com/rust-lang/rust/raw/eba54c2fc9c15ec6480385486b7f711a7f2ca39e/crates%2Fide%2Fsrc%2Freferences.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Freferences.rs?ref=eba54c2fc9c15ec6480385486b7f711a7f2ca39e", "patch": "@@ -79,7 +79,7 @@ pub(crate) fn find_all_refs(\n                 retain_adt_literal_usages(&mut usages, def, sema);\n             }\n \n-            retain_import_usages(&mut usages, sema);\n+            retain_import_usages(&mut usages);\n \n             let references = usages\n                 .into_iter()\n@@ -114,33 +114,15 @@ pub(crate) fn find_all_refs(\n     }\n }\n \n-fn retain_import_usages(usages: &mut UsageSearchResult, sema: &Semantics<'_, RootDatabase>) {\n+fn retain_import_usages(usages: &mut UsageSearchResult) {\n     // todo use this https://github.com/rust-lang/rust-analyzer/blob/master/crates/rust-analyzer/src/config.rs#L432\n \n     for (_file_id, refs) in &mut usages.references {\n-        refs.retain(|it| {\n-            match it.name.as_name_ref() {\n-                Some(name_ref) => name_ref.syntax().ancestors().any(|it_ref| {\n-                    dbg!(&it_ref);\n-                    !matches!(it_ref.kind(), USE)\n-                }),\n-                None => true,\n+        refs.retain(|it| match it.name.as_name_ref() {\n+            Some(name_ref) => {\n+                !name_ref.syntax().ancestors().any(|it_ref| matches!(it_ref.kind(), USE))\n             }\n-\n-            // this works:\n-            // let file_sema = sema.parse(file_id.clone()).syntax().clone();\n-\n-            // let maybe_node = file_sema.child_or_token_at_range(it.range.clone());\n-\n-            // if let Some(node) = maybe_node {\n-            //     let res = match node {\n-            //         syntax::NodeOrToken::Node(x) => !matches!(x.kind(), USE),\n-            //         syntax::NodeOrToken::Token(_) => true,\n-            //     };\n-            //     res\n-            // } else {\n-            //     true\n-            // }\n+            None => true,\n         });\n     }\n }"}]}