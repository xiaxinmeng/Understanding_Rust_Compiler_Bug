{"sha": "ee810a75e41368387918759ed191657f05650f05", "node_id": "MDY6Q29tbWl0NzI0NzEyOmVlODEwYTc1ZTQxMzY4Mzg3OTE4NzU5ZWQxOTE2NTdmMDU2NTBmMDU=", "commit": {"author": {"name": "Nathan Corbyn", "email": "me@nathancorbyn.com", "date": "2020-06-09T14:49:59Z"}, "committer": {"name": "Nathan Corbyn", "email": "me@nathancorbyn.com", "date": "2020-06-15T08:40:56Z"}, "message": "Fix exports with `#[inline(always)]`", "tree": {"sha": "94cb432f7a4afaefc451bcde7a506bfc8918b765", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/94cb432f7a4afaefc451bcde7a506bfc8918b765"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ee810a75e41368387918759ed191657f05650f05", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ee810a75e41368387918759ed191657f05650f05", "html_url": "https://github.com/rust-lang/rust/commit/ee810a75e41368387918759ed191657f05650f05", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ee810a75e41368387918759ed191657f05650f05/comments", "author": {"login": "doctorn", "id": 6421560, "node_id": "MDQ6VXNlcjY0MjE1NjA=", "avatar_url": "https://avatars.githubusercontent.com/u/6421560?v=4", "gravatar_id": "", "url": "https://api.github.com/users/doctorn", "html_url": "https://github.com/doctorn", "followers_url": "https://api.github.com/users/doctorn/followers", "following_url": "https://api.github.com/users/doctorn/following{/other_user}", "gists_url": "https://api.github.com/users/doctorn/gists{/gist_id}", "starred_url": "https://api.github.com/users/doctorn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/doctorn/subscriptions", "organizations_url": "https://api.github.com/users/doctorn/orgs", "repos_url": "https://api.github.com/users/doctorn/repos", "events_url": "https://api.github.com/users/doctorn/events{/privacy}", "received_events_url": "https://api.github.com/users/doctorn/received_events", "type": "User", "site_admin": false}, "committer": {"login": "doctorn", "id": 6421560, "node_id": "MDQ6VXNlcjY0MjE1NjA=", "avatar_url": "https://avatars.githubusercontent.com/u/6421560?v=4", "gravatar_id": "", "url": "https://api.github.com/users/doctorn", "html_url": "https://github.com/doctorn", "followers_url": "https://api.github.com/users/doctorn/followers", "following_url": "https://api.github.com/users/doctorn/following{/other_user}", "gists_url": "https://api.github.com/users/doctorn/gists{/gist_id}", "starred_url": "https://api.github.com/users/doctorn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/doctorn/subscriptions", "organizations_url": "https://api.github.com/users/doctorn/orgs", "repos_url": "https://api.github.com/users/doctorn/repos", "events_url": "https://api.github.com/users/doctorn/events{/privacy}", "received_events_url": "https://api.github.com/users/doctorn/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d23bedd13d70597a7db70ef5ea549fc7a4063d10", "url": "https://api.github.com/repos/rust-lang/rust/commits/d23bedd13d70597a7db70ef5ea549fc7a4063d10", "html_url": "https://github.com/rust-lang/rust/commit/d23bedd13d70597a7db70ef5ea549fc7a4063d10"}], "stats": {"total": 86, "additions": 68, "deletions": 18}, "files": [{"sha": "24d324ff09c4c3d2554d08294c286f05d4b6863a", "filename": "src/librustc_middle/mir/mono.rs", "status": "modified", "additions": 5, "deletions": 10, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/ee810a75e41368387918759ed191657f05650f05/src%2Flibrustc_middle%2Fmir%2Fmono.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ee810a75e41368387918759ed191657f05650f05/src%2Flibrustc_middle%2Fmir%2Fmono.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_middle%2Fmir%2Fmono.rs?ref=ee810a75e41368387918759ed191657f05650f05", "patch": "@@ -91,10 +91,9 @@ impl<'tcx> MonoItem<'tcx> {\n         match *self {\n             MonoItem::Fn(ref instance) => {\n                 let entry_def_id = tcx.entry_fn(LOCAL_CRATE).map(|(id, _)| id);\n-                // If this function isn't inlined or otherwise has explicit\n-                // linkage or an extern indicator, then we'll be creating a\n-                // globally shared version.\n-                if self.explicit_linkage(tcx).is_some()\n+                // If this function isn't inlined or otherwise has an extern\n+                // indicator, then we'll be creating a globally shared version.\n+                if tcx.codegen_fn_attrs(instance.def_id()).contains_extern_indicator()\n                     || !instance.def.generates_cgu_internal_copy(tcx)\n                     || Some(instance.def_id()) == entry_def_id.map(LocalDefId::to_def_id)\n                 {\n@@ -103,12 +102,8 @@ impl<'tcx> MonoItem<'tcx> {\n \n                 // At this point we don't have explicit linkage and we're an\n                 // inlined function. If we're inlining into all CGUs then we'll\n-                // be creating a local copy per CGU. We need to watch out here\n-                // for an extern indicator as we don't want to optimise away\n-                // inlined functions that should be exported.\n-                if generate_cgu_internal_copies\n-                    && !tcx.codegen_fn_attrs(instance.def_id()).contains_extern_indicator()\n-                {\n+                // be creating a local copy per CGU. \n+                if generate_cgu_internal_copies {\n                     return InstantiationMode::LocalCopy;\n                 }\n "}, {"sha": "519be6b6a99a43d2d870ee6dfcad1117f264a753", "filename": "src/test/codegen/cdylib-external-inline-fns.rs", "status": "modified", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/ee810a75e41368387918759ed191657f05650f05/src%2Ftest%2Fcodegen%2Fcdylib-external-inline-fns.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ee810a75e41368387918759ed191657f05650f05/src%2Ftest%2Fcodegen%2Fcdylib-external-inline-fns.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcodegen%2Fcdylib-external-inline-fns.rs?ref=ee810a75e41368387918759ed191657f05650f05", "patch": "@@ -21,3 +21,23 @@ extern \"C\" fn c() {}\n #[export_name = \"d\"]\n #[inline]\n extern \"C\" fn d() {}\n+\n+// CHECK: define void @e()\n+#[no_mangle]\n+#[inline(always)]\n+pub extern \"C\" fn e() {}\n+\n+// CHECK: define void @f()\n+#[export_name = \"f\"]\n+#[inline(always)]\n+pub extern \"C\" fn f() {}\n+\n+// CHECK: define void @g()\n+#[no_mangle]\n+#[inline(always)]\n+extern \"C\" fn g() {}\n+\n+// CHECK: define void @h()\n+#[export_name = \"h\"]\n+#[inline(always)]\n+extern \"C\" fn h() {}"}, {"sha": "11427ae38822ff0f47b2759aa4ffb80f6584f9a7", "filename": "src/test/codegen/export-no-mangle.rs", "status": "modified", "additions": 13, "deletions": 8, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/ee810a75e41368387918759ed191657f05650f05/src%2Ftest%2Fcodegen%2Fexport-no-mangle.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ee810a75e41368387918759ed191657f05650f05/src%2Ftest%2Fcodegen%2Fexport-no-mangle.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcodegen%2Fexport-no-mangle.rs?ref=ee810a75e41368387918759ed191657f05650f05", "patch": "@@ -11,16 +11,21 @@ mod private {\n     #[export_name = \"BAR\"]\n     static BAR: u32 = 3;\n \n-    // CHECK: void @foo()\n+    // CHECK: void @a()\n     #[no_mangle]\n-    pub extern fn foo() {}\n+    pub extern fn a() {}\n \n-    // CHECK: void @bar()\n-    #[export_name = \"bar\"]\n-    extern fn bar() {}\n+    // CHECK: void @b()\n+    #[export_name = \"b\"]\n+    extern fn b() {}\n \n-    // CHECK: void @baz()\n-    #[export_name = \"baz\"]\n+    // CHECK: void @c()\n+    #[export_name = \"c\"]\n     #[inline]\n-    extern fn baz() {}\n+    extern fn c() {}\n+    \n+    // CHECK: void @d()\n+    #[export_name = \"d\"]\n+    #[inline(always)]\n+    extern fn d() {}\n }"}, {"sha": "41820b057f1ef27710bf098403d3829daee3dac8", "filename": "src/test/codegen/external-no-mangle-fns.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/ee810a75e41368387918759ed191657f05650f05/src%2Ftest%2Fcodegen%2Fexternal-no-mangle-fns.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ee810a75e41368387918759ed191657f05650f05/src%2Ftest%2Fcodegen%2Fexternal-no-mangle-fns.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcodegen%2Fexternal-no-mangle-fns.rs?ref=ee810a75e41368387918759ed191657f05650f05", "patch": "@@ -63,3 +63,13 @@ fn i() {}\n #[no_mangle]\n #[inline]\n pub fn j() {}\n+\n+// CHECK: define void @k()\n+#[no_mangle]\n+#[inline(always)]\n+fn k() {}\n+\n+// CHECK: define void @l()\n+#[no_mangle]\n+#[inline(always)]\n+pub fn l() {}"}, {"sha": "8876ab7376afe3ce5ca7b7c400c86251efae375e", "filename": "src/test/codegen/staticlib-external-inline-fns.rs", "status": "modified", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/ee810a75e41368387918759ed191657f05650f05/src%2Ftest%2Fcodegen%2Fstaticlib-external-inline-fns.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ee810a75e41368387918759ed191657f05650f05/src%2Ftest%2Fcodegen%2Fstaticlib-external-inline-fns.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcodegen%2Fstaticlib-external-inline-fns.rs?ref=ee810a75e41368387918759ed191657f05650f05", "patch": "@@ -21,3 +21,23 @@ extern \"C\" fn c() {}\n #[export_name = \"d\"]\n #[inline]\n extern \"C\" fn d() {}\n+\n+// CHECK: define void @e()\n+#[no_mangle]\n+#[inline(always)]\n+pub extern \"C\" fn e() {}\n+\n+// CHECK: define void @f()\n+#[export_name = \"f\"]\n+#[inline(always)]\n+pub extern \"C\" fn f() {}\n+\n+// CHECK: define void @g()\n+#[no_mangle]\n+#[inline(always)]\n+extern \"C\" fn g() {}\n+\n+// CHECK: define void @h()\n+#[export_name = \"h\"]\n+#[inline(always)]\n+extern \"C\" fn h() {}"}]}