{"sha": "c3b9a19eb72ae9542272ae7a22ac3fb57c75daca", "node_id": "MDY6Q29tbWl0NzI0NzEyOmMzYjlhMTllYjcyYWU5NTQyMjcyYWU3YTIyYWMzZmI1N2M3NWRhY2E=", "commit": {"author": {"name": "TomasKralCZ", "email": "tomas@kral.hk", "date": "2020-01-19T16:40:53Z"}, "committer": {"name": "TomasKralCZ", "email": "tomas@kral.hk", "date": "2020-01-19T16:40:53Z"}, "message": "fix 'add_explicit_type' assist range", "tree": {"sha": "9dd83467e95f8e645b21af55c4a8ff7b796ac826", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9dd83467e95f8e645b21af55c4a8ff7b796ac826"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c3b9a19eb72ae9542272ae7a22ac3fb57c75daca", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c3b9a19eb72ae9542272ae7a22ac3fb57c75daca", "html_url": "https://github.com/rust-lang/rust/commit/c3b9a19eb72ae9542272ae7a22ac3fb57c75daca", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c3b9a19eb72ae9542272ae7a22ac3fb57c75daca/comments", "author": {"login": "TomasKralCZ", "id": 23663355, "node_id": "MDQ6VXNlcjIzNjYzMzU1", "avatar_url": "https://avatars.githubusercontent.com/u/23663355?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TomasKralCZ", "html_url": "https://github.com/TomasKralCZ", "followers_url": "https://api.github.com/users/TomasKralCZ/followers", "following_url": "https://api.github.com/users/TomasKralCZ/following{/other_user}", "gists_url": "https://api.github.com/users/TomasKralCZ/gists{/gist_id}", "starred_url": "https://api.github.com/users/TomasKralCZ/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TomasKralCZ/subscriptions", "organizations_url": "https://api.github.com/users/TomasKralCZ/orgs", "repos_url": "https://api.github.com/users/TomasKralCZ/repos", "events_url": "https://api.github.com/users/TomasKralCZ/events{/privacy}", "received_events_url": "https://api.github.com/users/TomasKralCZ/received_events", "type": "User", "site_admin": false}, "committer": {"login": "TomasKralCZ", "id": 23663355, "node_id": "MDQ6VXNlcjIzNjYzMzU1", "avatar_url": "https://avatars.githubusercontent.com/u/23663355?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TomasKralCZ", "html_url": "https://github.com/TomasKralCZ", "followers_url": "https://api.github.com/users/TomasKralCZ/followers", "following_url": "https://api.github.com/users/TomasKralCZ/following{/other_user}", "gists_url": "https://api.github.com/users/TomasKralCZ/gists{/gist_id}", "starred_url": "https://api.github.com/users/TomasKralCZ/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TomasKralCZ/subscriptions", "organizations_url": "https://api.github.com/users/TomasKralCZ/orgs", "repos_url": "https://api.github.com/users/TomasKralCZ/repos", "events_url": "https://api.github.com/users/TomasKralCZ/events{/privacy}", "received_events_url": "https://api.github.com/users/TomasKralCZ/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8dc94a452cb908e789c926255146d1b4bf6682fb", "url": "https://api.github.com/repos/rust-lang/rust/commits/8dc94a452cb908e789c926255146d1b4bf6682fb", "html_url": "https://github.com/rust-lang/rust/commit/8dc94a452cb908e789c926255146d1b4bf6682fb"}], "stats": {"total": 27, "additions": 26, "deletions": 1}, "files": [{"sha": "713abf9109e1839061da6d816a490ff63ba79204", "filename": "crates/ra_assists/src/assists/add_explicit_type.rs", "status": "modified", "additions": 26, "deletions": 1, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/c3b9a19eb72ae9542272ae7a22ac3fb57c75daca/crates%2Fra_assists%2Fsrc%2Fassists%2Fadd_explicit_type.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c3b9a19eb72ae9542272ae7a22ac3fb57c75daca/crates%2Fra_assists%2Fsrc%2Fassists%2Fadd_explicit_type.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_assists%2Fsrc%2Fassists%2Fadd_explicit_type.rs?ref=c3b9a19eb72ae9542272ae7a22ac3fb57c75daca", "patch": "@@ -1,7 +1,8 @@\n use hir::{db::HirDatabase, HirDisplay};\n use ra_syntax::{\n     ast::{self, AstNode, LetStmt, NameOwner},\n-    T,\n+    SyntaxKind::EQ,\n+    TextRange, T,\n };\n \n use crate::{Assist, AssistCtx, AssistId};\n@@ -34,6 +35,14 @@ pub(crate) fn add_explicit_type(ctx: AssistCtx<impl HirDatabase>) -> Option<Assi\n     // The binding must have a name\n     let name = pat.name()?;\n     let name_range = name.syntax().text_range();\n+    // Assist should only be applicable if cursor is between 'let' and '='\n+    let stmt_range = stmt.syntax().text_range();\n+    let eq_range = stmt.syntax().descendants_with_tokens().find(|t| t.kind() == EQ)?.text_range();\n+    let let_range = TextRange::from_to(stmt_range.start(), eq_range.start());\n+    let cursor_in_range = ctx.frange.range.is_subrange(&let_range);\n+    if !cursor_in_range {\n+        return None;\n+    }\n     // Assist not applicable if the type has already been specified\n     if stmt.syntax().children_with_tokens().any(|child| child.kind() == T![:]) {\n         return None;\n@@ -109,4 +118,20 @@ mod tests {\n     fn add_explicit_type_not_applicable_if_specified_ty_is_tuple() {\n         check_assist_not_applicable(add_explicit_type, \"fn f() { let a<|>: (i32, i32) = (3, 4); }\");\n     }\n+\n+    #[test]\n+    fn add_explicit_type_not_applicable_if_cursor_after_equals() {\n+        check_assist_not_applicable(\n+            add_explicit_type,\n+            \"fn f() {let a =<|> match 1 {2 => 3, 3 => 5};}\",\n+        )\n+    }\n+\n+    #[test]\n+    fn add_explicit_type_not_applicable_if_cursor_before_let() {\n+        check_assist_not_applicable(\n+            add_explicit_type,\n+            \"fn f() <|>{let a = match 1 {2 => 3, 3 => 5};}\",\n+        )\n+    }\n }"}]}