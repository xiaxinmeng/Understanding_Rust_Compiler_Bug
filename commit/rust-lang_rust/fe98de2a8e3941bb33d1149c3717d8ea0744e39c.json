{"sha": "fe98de2a8e3941bb33d1149c3717d8ea0744e39c", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZlOThkZTJhOGUzOTQxYmIzM2QxMTQ5YzM3MTdkOGVhMDc0NGUzOWM=", "commit": {"author": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2020-07-17T18:04:31Z"}, "committer": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2020-07-17T18:04:36Z"}, "message": "intra-doc links: Resolve modules in type namespace", "tree": {"sha": "162667968fbfc07ebeedf203f0d09a3b64915a88", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/162667968fbfc07ebeedf203f0d09a3b64915a88"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/fe98de2a8e3941bb33d1149c3717d8ea0744e39c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/fe98de2a8e3941bb33d1149c3717d8ea0744e39c", "html_url": "https://github.com/rust-lang/rust/commit/fe98de2a8e3941bb33d1149c3717d8ea0744e39c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/fe98de2a8e3941bb33d1149c3717d8ea0744e39c/comments", "author": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3014f23ddd437d2ba9947383c4565d09c1eb39f2", "url": "https://api.github.com/repos/rust-lang/rust/commits/3014f23ddd437d2ba9947383c4565d09c1eb39f2", "html_url": "https://github.com/rust-lang/rust/commit/3014f23ddd437d2ba9947383c4565d09c1eb39f2"}], "stats": {"total": 23, "additions": 8, "deletions": 15}, "files": [{"sha": "e187b9251f71e5194d002060dbca21f94b2211e7", "filename": "src/librustdoc/passes/collect_intra_doc_links.rs", "status": "modified", "additions": 8, "deletions": 15, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/fe98de2a8e3941bb33d1149c3717d8ea0744e39c/src%2Flibrustdoc%2Fpasses%2Fcollect_intra_doc_links.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fe98de2a8e3941bb33d1149c3717d8ea0744e39c/src%2Flibrustdoc%2Fpasses%2Fcollect_intra_doc_links.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fpasses%2Fcollect_intra_doc_links.rs?ref=fe98de2a8e3941bb33d1149c3717d8ea0744e39c", "patch": "@@ -584,25 +584,18 @@ impl<'a, 'tcx> DocFolder for LinkCollector<'a, 'tcx> {\n             let (res, fragment) = {\n                 let mut kind = None;\n                 let mut disambiguator = None;\n-                path_str = if let Some(prefix) = [\"struct@\", \"enum@\", \"type@\", \"trait@\", \"union@\"]\n-                    .iter()\n-                    .find(|p| link.starts_with(**p))\n+                path_str = if let Some(prefix) =\n+                    [\"struct@\", \"enum@\", \"type@\", \"trait@\", \"union@\", \"module@\", \"mod@\"]\n+                        .iter()\n+                        .find(|p| link.starts_with(**p))\n                 {\n                     kind = Some(TypeNS);\n                     disambiguator = Some(&prefix[..prefix.len() - 1]);\n                     link.trim_start_matches(prefix)\n-                } else if let Some(prefix) = [\n-                    \"const@\",\n-                    \"static@\",\n-                    \"value@\",\n-                    \"function@\",\n-                    \"mod@\",\n-                    \"fn@\",\n-                    \"module@\",\n-                    \"method@\",\n-                ]\n-                .iter()\n-                .find(|p| link.starts_with(**p))\n+                } else if let Some(prefix) =\n+                    [\"const@\", \"static@\", \"value@\", \"function@\", \"fn@\", \"method@\"]\n+                        .iter()\n+                        .find(|p| link.starts_with(**p))\n                 {\n                     kind = Some(ValueNS);\n                     disambiguator = Some(&prefix[..prefix.len() - 1]);"}]}