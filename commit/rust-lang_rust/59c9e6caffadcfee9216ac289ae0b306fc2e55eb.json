{"sha": "59c9e6caffadcfee9216ac289ae0b306fc2e55eb", "node_id": "MDY6Q29tbWl0NzI0NzEyOjU5YzllNmNhZmZhZGNmZWU5MjE2YWMyODlhZTBiMzA2ZmMyZTU1ZWI=", "commit": {"author": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2011-01-12T02:30:22Z"}, "committer": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2011-01-12T02:30:22Z"}, "message": "Guard unguarded log calls that snuck in. Shave 5s off building rustc.", "tree": {"sha": "a25f977a226b7f353584452e4cf5266e9be34b7b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a25f977a226b7f353584452e4cf5266e9be34b7b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/59c9e6caffadcfee9216ac289ae0b306fc2e55eb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/59c9e6caffadcfee9216ac289ae0b306fc2e55eb", "html_url": "https://github.com/rust-lang/rust/commit/59c9e6caffadcfee9216ac289ae0b306fc2e55eb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/59c9e6caffadcfee9216ac289ae0b306fc2e55eb/comments", "author": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "committer": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b81aa05fa19a748e04808145cd8b7241f785693c", "url": "https://api.github.com/repos/rust-lang/rust/commits/b81aa05fa19a748e04808145cd8b7241f785693c", "html_url": "https://github.com/rust-lang/rust/commit/b81aa05fa19a748e04808145cd8b7241f785693c"}], "stats": {"total": 8, "additions": 5, "deletions": 3}, "files": [{"sha": "db28527437155bdb5cd95555e68715f7c9819c34", "filename": "src/boot/me/trans.ml", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/59c9e6caffadcfee9216ac289ae0b306fc2e55eb/src%2Fboot%2Fme%2Ftrans.ml", "raw_url": "https://github.com/rust-lang/rust/raw/59c9e6caffadcfee9216ac289ae0b306fc2e55eb/src%2Fboot%2Fme%2Ftrans.ml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fboot%2Fme%2Ftrans.ml?ref=59c9e6caffadcfee9216ac289ae0b306fc2e55eb", "patch": "@@ -1344,8 +1344,10 @@ let trans_visitor\n           let is_stateful =\n             if (force_stateful || type_has_state cx t) then 1L else 0L\n           in\n-          log cx \"tydesc for %a has sz=%Ld, align=%Ld, is_stateful=%Ld\"\n-            Ast.sprintf_ty t sz align is_stateful;\n+            iflog\n+              (fun _ ->\n+                 log cx \"tydesc for %a has sz=%Ld, align=%Ld, is_stateful=%Ld\"\n+                   Ast.sprintf_ty t sz align is_stateful);\n             Asm.DEF\n               (tydesc_fixup,\n                Asm.SEQ\n@@ -5955,7 +5957,7 @@ let trans_visitor\n     let (header_tup, oid, i) = tag in\n     let tinfo = Hashtbl.find cx.ctxt_all_tag_info oid in\n     let (n, _, _) = Hashtbl.find tinfo.tag_nums i in\n-    let _ = log cx \"tag variant: %s -> tag value #%d\" n i in\n+    let _ = iflog (fun _ -> log cx \"tag variant: %s -> tag value #%d\" n i) in\n     let (dst_cell, dst_slot) = get_current_output_cell_and_slot() in\n     let dst_cell = deref_slot true dst_cell dst_slot in\n     let tag_cell = get_element_ptr dst_cell Abi.tag_elt_discriminant in"}]}