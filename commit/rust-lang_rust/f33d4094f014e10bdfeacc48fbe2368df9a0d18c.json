{"sha": "f33d4094f014e10bdfeacc48fbe2368df9a0d18c", "node_id": "C_kwDOAAsO6NoAKGYzM2Q0MDk0ZjAxNGUxMGJkZmVhY2M0OGZiZTIzNjhkZjlhMGQxOGM", "commit": {"author": {"name": "Dylan DPC", "email": "99973273+Dylan-DPC@users.noreply.github.com", "date": "2022-11-28T10:12:09Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-11-28T10:12:09Z"}, "message": "Rollup merge of #104360 - petrochenkov:stabverb, r=TaKO8Ki\n\nStabilize native library modifier `verbatim`\n\nStabilization report - https://github.com/rust-lang/rust/pull/104360#issuecomment-1312724787.\n\ncc https://github.com/rust-lang/rust/issues/81490\nCloses https://github.com/rust-lang/rust/issues/99425", "tree": {"sha": "ed92469fd1619c8f091b9c32138f22ba3ada7cb4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ed92469fd1619c8f091b9c32138f22ba3ada7cb4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f33d4094f014e10bdfeacc48fbe2368df9a0d18c", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJjhIl5CRBK7hj4Ov3rIwAANo8IAIc8FKeREVgv/8YXfMIk/Jyr\neENrUxpODswFAmEWwcqVEQa7ihUB0YzXYe9ppHjPv9GeqR44kI2XiO5JLKhD45oG\naIc1KFkDDfn7Q7/ZaolXIUYgVXHF/W4+hb+K+crnZsyBs5Ed0O6uII/klza13LaY\no0U6RdUQshN00zLiJ+pyysKAd+wONJl8B0yE3WK+/+tbM2Nt+5/Z4mUlo2NR8YNT\nzseGv91hvd7nkEVh4ttbMeQQpTo4garss8AF6AFHmY0GAr9eNLjZkEHnsHtXBcaD\nqtUkoIm/MddkuT24NuCLIOxnIQC5+YcwLcy+J4oNXhvR/QyZy025Ew4jF4AQTCI=\n=l/KV\n-----END PGP SIGNATURE-----\n", "payload": "tree ed92469fd1619c8f091b9c32138f22ba3ada7cb4\nparent dd12cd6dc631b5e964d541d370ca863c2242376c\nparent 5b0e80ecf32e2c4f01d6f45fbcfd9b1709381289\nauthor Dylan DPC <99973273+Dylan-DPC@users.noreply.github.com> 1669630329 +0530\ncommitter GitHub <noreply@github.com> 1669630329 +0530\n\nRollup merge of #104360 - petrochenkov:stabverb, r=TaKO8Ki\n\nStabilize native library modifier `verbatim`\n\nStabilization report - https://github.com/rust-lang/rust/pull/104360#issuecomment-1312724787.\n\ncc https://github.com/rust-lang/rust/issues/81490\nCloses https://github.com/rust-lang/rust/issues/99425\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f33d4094f014e10bdfeacc48fbe2368df9a0d18c", "html_url": "https://github.com/rust-lang/rust/commit/f33d4094f014e10bdfeacc48fbe2368df9a0d18c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f33d4094f014e10bdfeacc48fbe2368df9a0d18c/comments", "author": {"login": "Dylan-DPC", "id": 99973273, "node_id": "U_kgDOBfV4mQ", "avatar_url": "https://avatars.githubusercontent.com/u/99973273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dylan-DPC", "html_url": "https://github.com/Dylan-DPC", "followers_url": "https://api.github.com/users/Dylan-DPC/followers", "following_url": "https://api.github.com/users/Dylan-DPC/following{/other_user}", "gists_url": "https://api.github.com/users/Dylan-DPC/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dylan-DPC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dylan-DPC/subscriptions", "organizations_url": "https://api.github.com/users/Dylan-DPC/orgs", "repos_url": "https://api.github.com/users/Dylan-DPC/repos", "events_url": "https://api.github.com/users/Dylan-DPC/events{/privacy}", "received_events_url": "https://api.github.com/users/Dylan-DPC/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "dd12cd6dc631b5e964d541d370ca863c2242376c", "url": "https://api.github.com/repos/rust-lang/rust/commits/dd12cd6dc631b5e964d541d370ca863c2242376c", "html_url": "https://github.com/rust-lang/rust/commit/dd12cd6dc631b5e964d541d370ca863c2242376c"}, {"sha": "5b0e80ecf32e2c4f01d6f45fbcfd9b1709381289", "url": "https://api.github.com/repos/rust-lang/rust/commits/5b0e80ecf32e2c4f01d6f45fbcfd9b1709381289", "html_url": "https://github.com/rust-lang/rust/commit/5b0e80ecf32e2c4f01d6f45fbcfd9b1709381289"}], "stats": {"total": 168, "additions": 73, "deletions": 95}, "files": [{"sha": "7cb4f5503a101f1da94d1b78ed4020154c83317b", "filename": "compiler/rustc_codegen_ssa/src/back/link.rs", "status": "modified", "additions": 6, "deletions": 10, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/f33d4094f014e10bdfeacc48fbe2368df9a0d18c/compiler%2Frustc_codegen_ssa%2Fsrc%2Fback%2Flink.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f33d4094f014e10bdfeacc48fbe2368df9a0d18c/compiler%2Frustc_codegen_ssa%2Fsrc%2Fback%2Flink.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_ssa%2Fsrc%2Fback%2Flink.rs?ref=f33d4094f014e10bdfeacc48fbe2368df9a0d18c", "patch": "@@ -377,12 +377,8 @@ fn link_rlib<'a>(\n                 find_native_static_library(name.as_str(), lib.verbatim, &lib_search_paths, sess);\n             if sess.opts.unstable_opts.packed_bundled_libs && flavor == RlibFlavor::Normal {\n                 let filename = lib.filename.unwrap();\n-                let lib_path = find_native_static_library(\n-                    filename.as_str(),\n-                    Some(true),\n-                    &lib_search_paths,\n-                    sess,\n-                );\n+                let lib_path =\n+                    find_native_static_library(filename.as_str(), true, &lib_search_paths, sess);\n                 let src = read(lib_path)\n                     .map_err(|e| sess.emit_fatal(errors::ReadFileError { message: e }))?;\n                 let (data, _) = create_wrapper_file(sess, b\".bundled_lib\".to_vec(), &src);\n@@ -465,7 +461,7 @@ fn collate_raw_dylibs<'a, 'b>(\n \n     for lib in used_libraries {\n         if lib.kind == NativeLibKind::RawDylib {\n-            let ext = if matches!(lib.verbatim, Some(true)) { \"\" } else { \".dll\" };\n+            let ext = if lib.verbatim { \"\" } else { \".dll\" };\n             let name = format!(\"{}{}\", lib.name.expect(\"unnamed raw-dylib library\"), ext);\n             let imports = dylib_table.entry(name.clone()).or_default();\n             for import in &lib.dll_imports {\n@@ -1335,7 +1331,7 @@ fn print_native_static_libs(sess: &Session, all_native_libs: &[NativeLib]) {\n                 NativeLibKind::Static { bundle: Some(false), .. }\n                 | NativeLibKind::Dylib { .. }\n                 | NativeLibKind::Unspecified => {\n-                    let verbatim = lib.verbatim.unwrap_or(false);\n+                    let verbatim = lib.verbatim;\n                     if sess.target.is_like_msvc {\n                         Some(format!(\"{}{}\", name, if verbatim { \"\" } else { \".lib\" }))\n                     } else if sess.target.linker_flavor.is_gnu() {\n@@ -2306,7 +2302,7 @@ fn add_native_libs_from_crate(\n         _ => &codegen_results.crate_info.native_libraries[&cnum],\n     };\n \n-    let mut last = (None, NativeLibKind::Unspecified, None);\n+    let mut last = (None, NativeLibKind::Unspecified, false);\n     for lib in native_libs {\n         let Some(name) = lib.name else {\n             continue;\n@@ -2323,7 +2319,7 @@ fn add_native_libs_from_crate(\n         };\n \n         let name = name.as_str();\n-        let verbatim = lib.verbatim.unwrap_or(false);\n+        let verbatim = lib.verbatim;\n         match lib.kind {\n             NativeLibKind::Static { bundle, whole_archive } => {\n                 if link_static {"}, {"sha": "f087d903e5568f835476c6a43d8dd8c4f7dda6ce", "filename": "compiler/rustc_codegen_ssa/src/back/linker.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f33d4094f014e10bdfeacc48fbe2368df9a0d18c/compiler%2Frustc_codegen_ssa%2Fsrc%2Fback%2Flinker.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f33d4094f014e10bdfeacc48fbe2368df9a0d18c/compiler%2Frustc_codegen_ssa%2Fsrc%2Fback%2Flinker.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_ssa%2Fsrc%2Fback%2Flinker.rs?ref=f33d4094f014e10bdfeacc48fbe2368df9a0d18c", "patch": "@@ -515,7 +515,7 @@ impl<'a> Linker for GccLinker<'a> {\n             // -force_load is the macOS equivalent of --whole-archive, but it\n             // involves passing the full path to the library to link.\n             self.linker_arg(\"-force_load\");\n-            let lib = find_native_static_library(lib, Some(verbatim), search_path, &self.sess);\n+            let lib = find_native_static_library(lib, verbatim, search_path, &self.sess);\n             self.linker_arg(&lib);\n         }\n     }"}, {"sha": "def6390f6a36bcbd15d9610ceaa412eef883eeda", "filename": "compiler/rustc_codegen_ssa/src/lib.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/f33d4094f014e10bdfeacc48fbe2368df9a0d18c/compiler%2Frustc_codegen_ssa%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f33d4094f014e10bdfeacc48fbe2368df9a0d18c/compiler%2Frustc_codegen_ssa%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_ssa%2Fsrc%2Flib.rs?ref=f33d4094f014e10bdfeacc48fbe2368df9a0d18c", "patch": "@@ -116,7 +116,7 @@ pub struct NativeLib {\n     pub name: Option<Symbol>,\n     pub filename: Option<Symbol>,\n     pub cfg: Option<ast::MetaItem>,\n-    pub verbatim: Option<bool>,\n+    pub verbatim: bool,\n     pub dll_imports: Vec<cstore::DllImport>,\n }\n \n@@ -127,7 +127,7 @@ impl From<&cstore::NativeLib> for NativeLib {\n             filename: lib.filename,\n             name: lib.name,\n             cfg: lib.cfg.clone(),\n-            verbatim: lib.verbatim,\n+            verbatim: lib.verbatim.unwrap_or(false),\n             dll_imports: lib.dll_imports.clone(),\n         }\n     }"}, {"sha": "7678ce323dfbc04fb0f254e47e214ca9ed833e68", "filename": "compiler/rustc_feature/src/accepted.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f33d4094f014e10bdfeacc48fbe2368df9a0d18c/compiler%2Frustc_feature%2Fsrc%2Faccepted.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f33d4094f014e10bdfeacc48fbe2368df9a0d18c/compiler%2Frustc_feature%2Fsrc%2Faccepted.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_feature%2Fsrc%2Faccepted.rs?ref=f33d4094f014e10bdfeacc48fbe2368df9a0d18c", "patch": "@@ -237,6 +237,8 @@ declare_features! (\n     (accepted, native_link_modifiers, \"1.61.0\", Some(81490), None),\n     /// Allows specifying the bundle link modifier\n     (accepted, native_link_modifiers_bundle, \"1.63.0\", Some(81490), None),\n+    /// Allows specifying the verbatim link modifier\n+    (accepted, native_link_modifiers_verbatim, \"CURRENT_RUSTC_VERSION\", Some(81490), None),\n     /// Allows specifying the whole-archive link modifier\n     (accepted, native_link_modifiers_whole_archive, \"1.61.0\", Some(81490), None),\n     /// Allows using non lexical lifetimes (RFC 2094)."}, {"sha": "69c5297bf6b82564395b902052c9ce01ec38e3fa", "filename": "compiler/rustc_feature/src/active.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f33d4094f014e10bdfeacc48fbe2368df9a0d18c/compiler%2Frustc_feature%2Fsrc%2Factive.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f33d4094f014e10bdfeacc48fbe2368df9a0d18c/compiler%2Frustc_feature%2Fsrc%2Factive.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_feature%2Fsrc%2Factive.rs?ref=f33d4094f014e10bdfeacc48fbe2368df9a0d18c", "patch": "@@ -455,8 +455,6 @@ declare_features! (\n     (active, naked_functions, \"1.9.0\", Some(32408), None),\n     /// Allows specifying the as-needed link modifier\n     (active, native_link_modifiers_as_needed, \"1.53.0\", Some(81490), None),\n-    /// Allows specifying the verbatim link modifier\n-    (active, native_link_modifiers_verbatim, \"1.53.0\", Some(81490), None),\n     /// Allow negative trait implementations.\n     (active, negative_impls, \"1.44.0\", Some(68318), None),\n     /// Allows the `!` type. Does not imply 'exhaustive_patterns' (below) any more."}, {"sha": "1fd35adf1bd2cc4c4ac7f865e10d55d0d1a04b82", "filename": "compiler/rustc_metadata/src/native_libs.rs", "status": "modified", "additions": 5, "deletions": 8, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/f33d4094f014e10bdfeacc48fbe2368df9a0d18c/compiler%2Frustc_metadata%2Fsrc%2Fnative_libs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f33d4094f014e10bdfeacc48fbe2368df9a0d18c/compiler%2Frustc_metadata%2Fsrc%2Fnative_libs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_metadata%2Fsrc%2Fnative_libs.rs?ref=f33d4094f014e10bdfeacc48fbe2368df9a0d18c", "patch": "@@ -29,11 +29,11 @@ use std::path::PathBuf;\n \n pub fn find_native_static_library(\n     name: &str,\n-    verbatim: Option<bool>,\n+    verbatim: bool,\n     search_paths: &[PathBuf],\n     sess: &Session,\n ) -> PathBuf {\n-    let formats = if verbatim.unwrap_or(false) {\n+    let formats = if verbatim {\n         vec![(\"\".into(), \"\".into())]\n     } else {\n         let os = (sess.target.staticlib_prefix.clone(), sess.target.staticlib_suffix.clone());\n@@ -52,7 +52,7 @@ pub fn find_native_static_library(\n         }\n     }\n \n-    sess.emit_fatal(MissingNativeLibrary::new(name, verbatim.unwrap_or(false)));\n+    sess.emit_fatal(MissingNativeLibrary::new(name, verbatim));\n }\n \n fn find_bundled_library(\n@@ -66,7 +66,7 @@ fn find_bundled_library(\n             let NativeLibKind::Static { bundle: Some(true) | None, .. } = kind {\n         find_native_static_library(\n             name.unwrap().as_str(),\n-            verbatim,\n+            verbatim.unwrap_or(false),\n             &sess.target_filesearch(PathKind::Native).search_path_dirs(),\n             sess,\n         ).file_name().and_then(|s| s.to_str()).map(Symbol::intern)\n@@ -311,10 +311,7 @@ impl<'tcx> Collector<'tcx> {\n                             sess.emit_err(BundleNeedsStatic { span });\n                         }\n \n-                        (\"verbatim\", _) => {\n-                            report_unstable_modifier!(native_link_modifiers_verbatim);\n-                            assign_modifier(&mut verbatim)\n-                        }\n+                        (\"verbatim\", _) => assign_modifier(&mut verbatim),\n \n                         (\"whole-archive\", Some(NativeLibKind::Static { whole_archive, .. })) => {\n                             assign_modifier(whole_archive)"}, {"sha": "927810351e958c1f73e7879bb8df49cbf75922f4", "filename": "compiler/rustc_session/src/config.rs", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/f33d4094f014e10bdfeacc48fbe2368df9a0d18c/compiler%2Frustc_session%2Fsrc%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f33d4094f014e10bdfeacc48fbe2368df9a0d18c/compiler%2Frustc_session%2Fsrc%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_session%2Fsrc%2Fconfig.rs?ref=f33d4094f014e10bdfeacc48fbe2368df9a0d18c", "patch": "@@ -2029,10 +2029,7 @@ fn parse_native_lib_modifiers(\n                 \"linking modifier `bundle` is only compatible with `static` linking kind\",\n             ),\n \n-            (\"verbatim\", _) => {\n-                report_unstable_modifier();\n-                assign_modifier(&mut verbatim)\n-            }\n+            (\"verbatim\", _) => assign_modifier(&mut verbatim),\n \n             (\"whole-archive\", NativeLibKind::Static { whole_archive, .. }) => {\n                 assign_modifier(whole_archive)"}, {"sha": "ef6eee75f1ce6c2cdc4d0ed83e43144e60bb68de", "filename": "src/doc/rustc/src/command-line-arguments.md", "status": "modified", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/f33d4094f014e10bdfeacc48fbe2368df9a0d18c/src%2Fdoc%2Frustc%2Fsrc%2Fcommand-line-arguments.md", "raw_url": "https://github.com/rust-lang/rust/raw/f33d4094f014e10bdfeacc48fbe2368df9a0d18c/src%2Fdoc%2Frustc%2Fsrc%2Fcommand-line-arguments.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Frustc%2Fsrc%2Fcommand-line-arguments.md?ref=f33d4094f014e10bdfeacc48fbe2368df9a0d18c", "patch": "@@ -104,6 +104,33 @@ This modifier has no effect when building other targets like executables or dyna\n \n The default for this modifier is `+bundle`.\n \n+### Linking modifiers: `verbatim`\n+\n+This modifier is compatible with all linking kinds.\n+\n+`+verbatim` means that rustc itself won't add any target-specified library prefixes or suffixes\n+(like `lib` or `.a`) to the library name, and will try its best to ask for the same thing from the\n+linker.\n+\n+For `ld`-like linkers supporting GNU extensions rustc will use the `-l:filename` syntax (note the\n+colon) when passing the library, so the linker won't add any prefixes or suffixes to it.\n+See [`-l namespec`](https://sourceware.org/binutils/docs/ld/Options.html) in ld documentation for\n+more details. \\\n+For linkers not supporting any verbatim modifiers (e.g. `link.exe` or `ld64`) the library name will\n+be passed as is. So the most reliable cross-platform use scenarios for this option are when no\n+linker is involved, for example bundling native libraries into rlibs.\n+\n+`-verbatim` means that rustc will either add a target-specific prefix and suffix to the library\n+name before passing it to linker, or won't prevent linker from implicitly adding it. \\\n+In case of `raw-dylib` kind in particular `.dll` will be added to the library name on Windows.\n+\n+The default for this modifier is `-verbatim`.\n+\n+NOTE: Even with `+verbatim` and `-l:filename` syntax `ld`-like linkers do not typically support\n+passing absolute paths to libraries. Usually such paths need to be passed as input files without\n+using any options like `-l`, e.g. `ld /my/absolute/path`. \\\n+`-Clink-arg=/my/absolute/path` can be used for doing this from stable `rustc`.\n+\n <a id=\"option-crate-type\"></a>\n ## `--crate-type`: a list of types of crates for the compiler to emit\n "}, {"sha": "02bd87e50956d4ee83acec6e389a63e83513e4a2", "filename": "src/doc/unstable-book/src/language-features/native-link-modifiers-verbatim.md", "status": "removed", "additions": 0, "deletions": 20, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/dd12cd6dc631b5e964d541d370ca863c2242376c/src%2Fdoc%2Funstable-book%2Fsrc%2Flanguage-features%2Fnative-link-modifiers-verbatim.md", "raw_url": "https://github.com/rust-lang/rust/raw/dd12cd6dc631b5e964d541d370ca863c2242376c/src%2Fdoc%2Funstable-book%2Fsrc%2Flanguage-features%2Fnative-link-modifiers-verbatim.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Funstable-book%2Fsrc%2Flanguage-features%2Fnative-link-modifiers-verbatim.md?ref=dd12cd6dc631b5e964d541d370ca863c2242376c", "patch": "@@ -1,20 +0,0 @@\n-# `native_link_modifiers_verbatim`\n-\n-The tracking issue for this feature is: [#81490]\n-\n-[#81490]: https://github.com/rust-lang/rust/issues/81490\n-\n-------------------------\n-\n-The `native_link_modifiers_verbatim` feature allows you to use the `verbatim` modifier.\n-\n-`+verbatim` means that rustc itself won't add any target-specified library prefixes or suffixes (like `lib` or `.a`) to the library name, and will try its best to ask for the same thing from the linker.\n-\n-For `ld`-like linkers rustc will use the `-l:filename` syntax (note the colon) when passing the library, so the linker won't add any prefixes or suffixes as well.\n-See [`-l namespec`](https://sourceware.org/binutils/docs/ld/Options.html) in ld documentation for more details.\n-For linkers not supporting any verbatim modifiers (e.g. `link.exe` or `ld64`) the library name will be passed as is.\n-\n-The default for this modifier is `-verbatim`.\n-\n-This RFC changes the behavior of `raw-dylib` linking kind specified by [RFC 2627](https://github.com/rust-lang/rfcs/pull/2627). The `.dll` suffix (or other target-specified suffixes for other targets) is now added automatically.\n-If your DLL doesn't have the `.dll` suffix, it can be specified with `+verbatim`."}, {"sha": "666e4084ce295d4cc16b80d61b2b6bacecd53006", "filename": "src/test/run-make/native-link-modifier-verbatim-linker/Makefile", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/f33d4094f014e10bdfeacc48fbe2368df9a0d18c/src%2Ftest%2Frun-make%2Fnative-link-modifier-verbatim-linker%2FMakefile", "raw_url": "https://github.com/rust-lang/rust/raw/f33d4094f014e10bdfeacc48fbe2368df9a0d18c/src%2Ftest%2Frun-make%2Fnative-link-modifier-verbatim-linker%2FMakefile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Fnative-link-modifier-verbatim-linker%2FMakefile?ref=f33d4094f014e10bdfeacc48fbe2368df9a0d18c", "patch": "@@ -6,10 +6,10 @@ include ../../run-make-fulldeps/tools.mk\n all:\n \t# Verbatim allows specify precise name.\n \t$(RUSTC) local_native_dep.rs --crate-type=staticlib -o $(TMPDIR)/local_some_strange_name.ext\n-\t$(RUSTC) main.rs -Zunstable-options -l static:+verbatim=local_some_strange_name.ext\n+\t$(RUSTC) main.rs -l static:+verbatim=local_some_strange_name.ext\n \n \t# With verbatim any other name cannot be used (local).\n \t$(RUSTC) local_native_dep.rs --crate-type=staticlib -o $(TMPDIR)/liblocal_native_dep.a\n \t$(RUSTC) local_native_dep.rs --crate-type=staticlib -o $(TMPDIR)/local_native_dep.a\n \t$(RUSTC) local_native_dep.rs --crate-type=staticlib -o $(TMPDIR)/local_native_dep.lib\n-\t$(RUSTC) main.rs -Zunstable-options -l static:+verbatim=local_native_dep 2>&1 | $(CGREP) \"local_native_dep\"\n+\t$(RUSTC) main.rs -l static:+verbatim=local_native_dep 2>&1 | $(CGREP) \"local_native_dep\""}, {"sha": "6f01f37804a2ac5e2dd0f738e95a5dc21bdd3cea", "filename": "src/test/run-make/native-link-modifier-verbatim-rustc/Makefile", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/f33d4094f014e10bdfeacc48fbe2368df9a0d18c/src%2Ftest%2Frun-make%2Fnative-link-modifier-verbatim-rustc%2FMakefile", "raw_url": "https://github.com/rust-lang/rust/raw/f33d4094f014e10bdfeacc48fbe2368df9a0d18c/src%2Ftest%2Frun-make%2Fnative-link-modifier-verbatim-rustc%2FMakefile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Fnative-link-modifier-verbatim-rustc%2FMakefile?ref=f33d4094f014e10bdfeacc48fbe2368df9a0d18c", "patch": "@@ -3,10 +3,10 @@ include ../../run-make-fulldeps/tools.mk\n all:\n \t# Verbatim allows specify precise name.\n \t$(RUSTC) upstream_native_dep.rs --crate-type=staticlib -o $(TMPDIR)/upstream_some_strange_name.ext\n-\t$(RUSTC) rust_dep.rs -Zunstable-options -l static:+verbatim=upstream_some_strange_name.ext --crate-type rlib\n+\t$(RUSTC) rust_dep.rs -l static:+verbatim=upstream_some_strange_name.ext --crate-type rlib\n \n \t# With verbatim any other name cannot be used (upstream).\n \t$(RUSTC) upstream_native_dep.rs --crate-type=staticlib -o $(TMPDIR)/libupstream_native_dep.a\n \t$(RUSTC) upstream_native_dep.rs --crate-type=staticlib -o $(TMPDIR)/upstream_native_dep.a\n \t$(RUSTC) upstream_native_dep.rs --crate-type=staticlib -o $(TMPDIR)/upstream_native_dep.lib\n-\t$(RUSTC) rust_dep.rs -Zunstable-options -l static:+verbatim=upstream_native_dep --crate-type rlib 2>&1 | $(CGREP) \"upstream_native_dep\"\n+\t$(RUSTC) rust_dep.rs -l static:+verbatim=upstream_native_dep --crate-type rlib 2>&1 | $(CGREP) \"upstream_native_dep\""}, {"sha": "5fb1204037c933e3168b844231cb006f971f658f", "filename": "src/test/run-make/raw-dylib-c/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f33d4094f014e10bdfeacc48fbe2368df9a0d18c/src%2Ftest%2Frun-make%2Fraw-dylib-c%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f33d4094f014e10bdfeacc48fbe2368df9a0d18c/src%2Ftest%2Frun-make%2Fraw-dylib-c%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Fraw-dylib-c%2Flib.rs?ref=f33d4094f014e10bdfeacc48fbe2368df9a0d18c", "patch": "@@ -1,4 +1,4 @@\n-#![feature(raw_dylib, native_link_modifiers_verbatim)]\n+#![feature(raw_dylib)]\n \n #[link(name = \"extern_1.dll\", kind = \"raw-dylib\", modifiers = \"+verbatim\")]\n extern {"}, {"sha": "77e41e237d42a2f2cfaa0abc7e0b8af27df94eea", "filename": "src/test/run-make/rlib-format-packed-bundled-libs-2/rust_dep.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/f33d4094f014e10bdfeacc48fbe2368df9a0d18c/src%2Ftest%2Frun-make%2Frlib-format-packed-bundled-libs-2%2Frust_dep.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f33d4094f014e10bdfeacc48fbe2368df9a0d18c/src%2Ftest%2Frun-make%2Frlib-format-packed-bundled-libs-2%2Frust_dep.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Frlib-format-packed-bundled-libs-2%2Frust_dep.rs?ref=f33d4094f014e10bdfeacc48fbe2368df9a0d18c", "patch": "@@ -1,4 +1,3 @@\n-#![feature(native_link_modifiers_verbatim)]\n #[link(name = \"native_dep.ext\", kind = \"static\", modifiers = \"+verbatim\")]\n extern \"C\" {\n     fn native_f1() -> i32;"}, {"sha": "7b09195dc3fb0c4a4c56b21d67ece79bb8dd2c00", "filename": "src/test/ui/feature-gates/feature-gate-native_link_modifiers_verbatim.rs", "status": "removed", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/dd12cd6dc631b5e964d541d370ca863c2242376c/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-native_link_modifiers_verbatim.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dd12cd6dc631b5e964d541d370ca863c2242376c/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-native_link_modifiers_verbatim.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-native_link_modifiers_verbatim.rs?ref=dd12cd6dc631b5e964d541d370ca863c2242376c", "patch": "@@ -1,5 +0,0 @@\n-#[link(name = \"foo\", modifiers = \"+verbatim\")]\n-//~^ ERROR: linking modifier `verbatim` is unstable\n-extern \"C\" {}\n-\n-fn main() {}"}, {"sha": "3bfbeb8db35fe3d4ba6b51f9f52366fa079244a3", "filename": "src/test/ui/feature-gates/feature-gate-native_link_modifiers_verbatim.stderr", "status": "removed", "additions": 0, "deletions": 12, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/dd12cd6dc631b5e964d541d370ca863c2242376c/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-native_link_modifiers_verbatim.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/dd12cd6dc631b5e964d541d370ca863c2242376c/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-native_link_modifiers_verbatim.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-native_link_modifiers_verbatim.stderr?ref=dd12cd6dc631b5e964d541d370ca863c2242376c", "patch": "@@ -1,12 +0,0 @@\n-error[E0658]: linking modifier `verbatim` is unstable\n-  --> $DIR/feature-gate-native_link_modifiers_verbatim.rs:1:34\n-   |\n-LL | #[link(name = \"foo\", modifiers = \"+verbatim\")]\n-   |                                  ^^^^^^^^^^^\n-   |\n-   = note: see issue #81490 <https://github.com/rust-lang/rust/issues/81490> for more information\n-   = help: add `#![feature(native_link_modifiers_verbatim)]` to the crate attributes to enable\n-\n-error: aborting due to previous error\n-\n-For more information about this error, try `rustc --explain E0658`."}, {"sha": "34f720dd2d3c588e1847c73ba6938417e71050f2", "filename": "src/test/ui/linkage-attr/link-attr-validation-late.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/f33d4094f014e10bdfeacc48fbe2368df9a0d18c/src%2Ftest%2Fui%2Flinkage-attr%2Flink-attr-validation-late.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f33d4094f014e10bdfeacc48fbe2368df9a0d18c/src%2Ftest%2Fui%2Flinkage-attr%2Flink-attr-validation-late.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flinkage-attr%2Flink-attr-validation-late.rs?ref=f33d4094f014e10bdfeacc48fbe2368df9a0d18c", "patch": "@@ -1,4 +1,3 @@\n-#![feature(native_link_modifiers_verbatim)]\n #![feature(link_cfg)]\n \n // Top-level ill-formed"}, {"sha": "1ad5fbaf7de8066f2f34d8a4828ada45e9b4b833", "filename": "src/test/ui/linkage-attr/link-attr-validation-late.stderr", "status": "modified", "additions": 24, "deletions": 24, "changes": 48, "blob_url": "https://github.com/rust-lang/rust/blob/f33d4094f014e10bdfeacc48fbe2368df9a0d18c/src%2Ftest%2Fui%2Flinkage-attr%2Flink-attr-validation-late.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f33d4094f014e10bdfeacc48fbe2368df9a0d18c/src%2Ftest%2Fui%2Flinkage-attr%2Flink-attr-validation-late.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flinkage-attr%2Flink-attr-validation-late.stderr?ref=f33d4094f014e10bdfeacc48fbe2368df9a0d18c", "patch": "@@ -1,143 +1,143 @@\n error: unexpected `#[link]` argument, expected one of: name, kind, modifiers, cfg, wasm_import_module, import_name_type\n-  --> $DIR/link-attr-validation-late.rs:5:22\n+  --> $DIR/link-attr-validation-late.rs:4:22\n    |\n LL | #[link(name = \"...\", \"literal\")]\n    |                      ^^^^^^^^^\n \n error: unexpected `#[link]` argument, expected one of: name, kind, modifiers, cfg, wasm_import_module, import_name_type\n-  --> $DIR/link-attr-validation-late.rs:6:22\n+  --> $DIR/link-attr-validation-late.rs:5:22\n    |\n LL | #[link(name = \"...\", unknown)]\n    |                      ^^^^^^^\n \n error: multiple `name` arguments in a single `#[link]` attribute\n-  --> $DIR/link-attr-validation-late.rs:10:22\n+  --> $DIR/link-attr-validation-late.rs:9:22\n    |\n LL | #[link(name = \"foo\", name = \"bar\")]\n    |                      ^^^^^^^^^^^^\n \n error: multiple `kind` arguments in a single `#[link]` attribute\n-  --> $DIR/link-attr-validation-late.rs:11:38\n+  --> $DIR/link-attr-validation-late.rs:10:38\n    |\n LL | #[link(name = \"...\", kind = \"dylib\", kind = \"bar\")]\n    |                                      ^^^^^^^^^^^^\n \n error: multiple `modifiers` arguments in a single `#[link]` attribute\n-  --> $DIR/link-attr-validation-late.rs:12:47\n+  --> $DIR/link-attr-validation-late.rs:11:47\n    |\n LL | #[link(name = \"...\", modifiers = \"+verbatim\", modifiers = \"bar\")]\n    |                                               ^^^^^^^^^^^^^^^^^\n \n error: multiple `cfg` arguments in a single `#[link]` attribute\n-  --> $DIR/link-attr-validation-late.rs:13:34\n+  --> $DIR/link-attr-validation-late.rs:12:34\n    |\n LL | #[link(name = \"...\", cfg(FALSE), cfg(FALSE))]\n    |                                  ^^^^^^^^^^\n \n error: multiple `wasm_import_module` arguments in a single `#[link]` attribute\n-  --> $DIR/link-attr-validation-late.rs:14:36\n+  --> $DIR/link-attr-validation-late.rs:13:36\n    |\n LL | #[link(wasm_import_module = \"foo\", wasm_import_module = \"bar\")]\n    |                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: link name must be of the form `name = \"string\"`\n-  --> $DIR/link-attr-validation-late.rs:18:8\n+  --> $DIR/link-attr-validation-late.rs:17:8\n    |\n LL | #[link(name)]\n    |        ^^^^\n \n error[E0459]: `#[link]` attribute requires a `name = \"string\"` argument\n-  --> $DIR/link-attr-validation-late.rs:18:1\n+  --> $DIR/link-attr-validation-late.rs:17:1\n    |\n LL | #[link(name)]\n    | ^^^^^^^^^^^^^ missing `name` argument\n \n error: link name must be of the form `name = \"string\"`\n-  --> $DIR/link-attr-validation-late.rs:20:8\n+  --> $DIR/link-attr-validation-late.rs:19:8\n    |\n LL | #[link(name())]\n    |        ^^^^^^\n \n error[E0459]: `#[link]` attribute requires a `name = \"string\"` argument\n-  --> $DIR/link-attr-validation-late.rs:20:1\n+  --> $DIR/link-attr-validation-late.rs:19:1\n    |\n LL | #[link(name())]\n    | ^^^^^^^^^^^^^^^ missing `name` argument\n \n error: link kind must be of the form `kind = \"string\"`\n-  --> $DIR/link-attr-validation-late.rs:22:22\n+  --> $DIR/link-attr-validation-late.rs:21:22\n    |\n LL | #[link(name = \"...\", kind)]\n    |                      ^^^^\n \n error: link kind must be of the form `kind = \"string\"`\n-  --> $DIR/link-attr-validation-late.rs:23:22\n+  --> $DIR/link-attr-validation-late.rs:22:22\n    |\n LL | #[link(name = \"...\", kind())]\n    |                      ^^^^^^\n \n error: link modifiers must be of the form `modifiers = \"string\"`\n-  --> $DIR/link-attr-validation-late.rs:24:22\n+  --> $DIR/link-attr-validation-late.rs:23:22\n    |\n LL | #[link(name = \"...\", modifiers)]\n    |                      ^^^^^^^^^\n \n error: link modifiers must be of the form `modifiers = \"string\"`\n-  --> $DIR/link-attr-validation-late.rs:25:22\n+  --> $DIR/link-attr-validation-late.rs:24:22\n    |\n LL | #[link(name = \"...\", modifiers())]\n    |                      ^^^^^^^^^^^\n \n error: link cfg must be of the form `cfg(/* predicate */)`\n-  --> $DIR/link-attr-validation-late.rs:26:22\n+  --> $DIR/link-attr-validation-late.rs:25:22\n    |\n LL | #[link(name = \"...\", cfg)]\n    |                      ^^^\n \n error: link cfg must be of the form `cfg(/* predicate */)`\n-  --> $DIR/link-attr-validation-late.rs:27:22\n+  --> $DIR/link-attr-validation-late.rs:26:22\n    |\n LL | #[link(name = \"...\", cfg = \"literal\")]\n    |                      ^^^^^^^^^^^^^^^\n \n error: link cfg must have a single predicate argument\n-  --> $DIR/link-attr-validation-late.rs:28:22\n+  --> $DIR/link-attr-validation-late.rs:27:22\n    |\n LL | #[link(name = \"...\", cfg(\"literal\"))]\n    |                      ^^^^^^^^^^^^^^\n \n error: wasm import module must be of the form `wasm_import_module = \"string\"`\n-  --> $DIR/link-attr-validation-late.rs:29:22\n+  --> $DIR/link-attr-validation-late.rs:28:22\n    |\n LL | #[link(name = \"...\", wasm_import_module)]\n    |                      ^^^^^^^^^^^^^^^^^^\n \n error: wasm import module must be of the form `wasm_import_module = \"string\"`\n-  --> $DIR/link-attr-validation-late.rs:30:22\n+  --> $DIR/link-attr-validation-late.rs:29:22\n    |\n LL | #[link(name = \"...\", wasm_import_module())]\n    |                      ^^^^^^^^^^^^^^^^^^^^\n \n error: invalid linking modifier syntax, expected '+' or '-' prefix before one of: bundle, verbatim, whole-archive, as-needed\n-  --> $DIR/link-attr-validation-late.rs:34:34\n+  --> $DIR/link-attr-validation-late.rs:33:34\n    |\n LL | #[link(name = \"...\", modifiers = \"\")]\n    |                                  ^^\n \n error: invalid linking modifier syntax, expected '+' or '-' prefix before one of: bundle, verbatim, whole-archive, as-needed\n-  --> $DIR/link-attr-validation-late.rs:35:34\n+  --> $DIR/link-attr-validation-late.rs:34:34\n    |\n LL | #[link(name = \"...\", modifiers = \"no-plus-minus\")]\n    |                                  ^^^^^^^^^^^^^^^\n \n error: unknown linking modifier `unknown`, expected one of: bundle, verbatim, whole-archive, as-needed\n-  --> $DIR/link-attr-validation-late.rs:36:34\n+  --> $DIR/link-attr-validation-late.rs:35:34\n    |\n LL | #[link(name = \"...\", modifiers = \"+unknown\")]\n    |                                  ^^^^^^^^^^\n \n error: multiple `verbatim` modifiers in a single `modifiers` argument\n-  --> $DIR/link-attr-validation-late.rs:37:34\n+  --> $DIR/link-attr-validation-late.rs:36:34\n    |\n LL | #[link(name = \"...\", modifiers = \"+verbatim,+verbatim\")]\n    |                                  ^^^^^^^^^^^^^^^^^^^^^"}]}