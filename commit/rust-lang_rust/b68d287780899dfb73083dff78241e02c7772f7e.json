{"sha": "b68d287780899dfb73083dff78241e02c7772f7e", "node_id": "MDY6Q29tbWl0NzI0NzEyOmI2OGQyODc3ODA4OTlkZmI3MzA4M2RmZjc4MjQxZTAyYzc3NzJmN2U=", "commit": {"author": {"name": "Erick Tryzelaar", "email": "erick.tryzelaar@gmail.com", "date": "2012-09-28T02:24:11Z"}, "committer": {"name": "Erick Tryzelaar", "email": "erick.tryzelaar@gmail.com", "date": "2012-09-28T02:24:11Z"}, "message": "libsyntax: Fix long line", "tree": {"sha": "0f08f9845abcdb541381b0847669870373c69435", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0f08f9845abcdb541381b0847669870373c69435"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b68d287780899dfb73083dff78241e02c7772f7e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b68d287780899dfb73083dff78241e02c7772f7e", "html_url": "https://github.com/rust-lang/rust/commit/b68d287780899dfb73083dff78241e02c7772f7e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b68d287780899dfb73083dff78241e02c7772f7e/comments", "author": {"login": "erickt", "id": 84711, "node_id": "MDQ6VXNlcjg0NzEx", "avatar_url": "https://avatars.githubusercontent.com/u/84711?v=4", "gravatar_id": "", "url": "https://api.github.com/users/erickt", "html_url": "https://github.com/erickt", "followers_url": "https://api.github.com/users/erickt/followers", "following_url": "https://api.github.com/users/erickt/following{/other_user}", "gists_url": "https://api.github.com/users/erickt/gists{/gist_id}", "starred_url": "https://api.github.com/users/erickt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/erickt/subscriptions", "organizations_url": "https://api.github.com/users/erickt/orgs", "repos_url": "https://api.github.com/users/erickt/repos", "events_url": "https://api.github.com/users/erickt/events{/privacy}", "received_events_url": "https://api.github.com/users/erickt/received_events", "type": "User", "site_admin": false}, "committer": {"login": "erickt", "id": 84711, "node_id": "MDQ6VXNlcjg0NzEx", "avatar_url": "https://avatars.githubusercontent.com/u/84711?v=4", "gravatar_id": "", "url": "https://api.github.com/users/erickt", "html_url": "https://github.com/erickt", "followers_url": "https://api.github.com/users/erickt/followers", "following_url": "https://api.github.com/users/erickt/following{/other_user}", "gists_url": "https://api.github.com/users/erickt/gists{/gist_id}", "starred_url": "https://api.github.com/users/erickt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/erickt/subscriptions", "organizations_url": "https://api.github.com/users/erickt/orgs", "repos_url": "https://api.github.com/users/erickt/repos", "events_url": "https://api.github.com/users/erickt/events{/privacy}", "received_events_url": "https://api.github.com/users/erickt/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "dc2f775037089cd5ce66eabb6a7d5405033e69f7", "url": "https://api.github.com/repos/rust-lang/rust/commits/dc2f775037089cd5ce66eabb6a7d5405033e69f7", "html_url": "https://github.com/rust-lang/rust/commit/dc2f775037089cd5ce66eabb6a7d5405033e69f7"}], "stats": {"total": 3, "additions": 2, "deletions": 1}, "files": [{"sha": "d81bd09f37a12d270fff0731e6982c2e18a50651", "filename": "src/libsyntax/parse/parser.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/b68d287780899dfb73083dff78241e02c7772f7e/src%2Flibsyntax%2Fparse%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b68d287780899dfb73083dff78241e02c7772f7e/src%2Flibsyntax%2Fparse%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fparser.rs?ref=b68d287780899dfb73083dff78241e02c7772f7e", "patch": "@@ -2231,7 +2231,8 @@ impl parser {\n         self.expect(token::LBRACE);\n         let {inner, next} = maybe_parse_inner_attrs_and_next(self,\n                                                              parse_attrs);\n-        return (inner, self.parse_block_tail_(lo, if us { unsafe_blk } else { default_blk }, next));\n+        let blk_check_mode = if us { unsafe_blk } else { default_blk };\n+        return (inner, self.parse_block_tail_(lo, blk_check_mode, next));\n     }\n \n     fn parse_block_no_value() -> blk {"}]}