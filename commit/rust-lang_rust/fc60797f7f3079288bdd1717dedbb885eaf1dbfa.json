{"sha": "fc60797f7f3079288bdd1717dedbb885eaf1dbfa", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZjNjA3OTdmN2YzMDc5Mjg4YmRkMTcxN2RlZGJiODg1ZWFmMWRiZmE=", "commit": {"author": {"name": "Vadim Chugunov", "email": "vadimcn@gmail.com", "date": "2014-10-07T06:15:12Z"}, "committer": {"name": "Vadim Chugunov", "email": "vadimcn@gmail.com", "date": "2014-10-07T09:13:05Z"}, "message": "Fix the most egregious instances of \"local ambiguity: multiple parsing options...\" error in macros, which often occurs when trying to match parts of Rust syntax.\nFor example, this matcher: `fn $name:ident( $($param:ident : $pty:ty),* )` would fail when parsing `fn foo()`, because macro parser wouldn't realize that an ident cannot start with `)`.\n\nThis resolves #5902, and at least partially mitigates #9364 and #3232.", "tree": {"sha": "21306daa9579c113d1609afa78c521e7cc1479e9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/21306daa9579c113d1609afa78c521e7cc1479e9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/fc60797f7f3079288bdd1717dedbb885eaf1dbfa", "comment_count": 5, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/fc60797f7f3079288bdd1717dedbb885eaf1dbfa", "html_url": "https://github.com/rust-lang/rust/commit/fc60797f7f3079288bdd1717dedbb885eaf1dbfa", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/fc60797f7f3079288bdd1717dedbb885eaf1dbfa/comments", "author": {"login": "vadimcn", "id": 3203809, "node_id": "MDQ6VXNlcjMyMDM4MDk=", "avatar_url": "https://avatars.githubusercontent.com/u/3203809?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vadimcn", "html_url": "https://github.com/vadimcn", "followers_url": "https://api.github.com/users/vadimcn/followers", "following_url": "https://api.github.com/users/vadimcn/following{/other_user}", "gists_url": "https://api.github.com/users/vadimcn/gists{/gist_id}", "starred_url": "https://api.github.com/users/vadimcn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vadimcn/subscriptions", "organizations_url": "https://api.github.com/users/vadimcn/orgs", "repos_url": "https://api.github.com/users/vadimcn/repos", "events_url": "https://api.github.com/users/vadimcn/events{/privacy}", "received_events_url": "https://api.github.com/users/vadimcn/received_events", "type": "User", "site_admin": false}, "committer": {"login": "vadimcn", "id": 3203809, "node_id": "MDQ6VXNlcjMyMDM4MDk=", "avatar_url": "https://avatars.githubusercontent.com/u/3203809?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vadimcn", "html_url": "https://github.com/vadimcn", "followers_url": "https://api.github.com/users/vadimcn/followers", "following_url": "https://api.github.com/users/vadimcn/following{/other_user}", "gists_url": "https://api.github.com/users/vadimcn/gists{/gist_id}", "starred_url": "https://api.github.com/users/vadimcn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vadimcn/subscriptions", "organizations_url": "https://api.github.com/users/vadimcn/orgs", "repos_url": "https://api.github.com/users/vadimcn/repos", "events_url": "https://api.github.com/users/vadimcn/events{/privacy}", "received_events_url": "https://api.github.com/users/vadimcn/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e62ef37cfae680e60584731635a89e955121a5bb", "url": "https://api.github.com/repos/rust-lang/rust/commits/e62ef37cfae680e60584731635a89e955121a5bb", "html_url": "https://github.com/rust-lang/rust/commit/e62ef37cfae680e60584731635a89e955121a5bb"}], "stats": {"total": 41, "additions": 40, "deletions": 1}, "files": [{"sha": "88376108fecbc747edc09568a1783f34899df87c", "filename": "src/libsyntax/ext/tt/macro_parser.rs", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/fc60797f7f3079288bdd1717dedbb885eaf1dbfa/src%2Flibsyntax%2Fext%2Ftt%2Fmacro_parser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fc60797f7f3079288bdd1717dedbb885eaf1dbfa/src%2Flibsyntax%2Fext%2Ftt%2Fmacro_parser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Ftt%2Fmacro_parser.rs?ref=fc60797f7f3079288bdd1717dedbb885eaf1dbfa", "patch": "@@ -350,7 +350,16 @@ pub fn parse(sess: &ParseSess,\n                         sp_lo: sp.lo\n                     });\n                   }\n-                  MatchNonterminal(_,_,_) => { bb_eis.push(ei) }\n+                  MatchNonterminal(_,_,_) => {\n+                    // Built-in nonterminals never start with these tokens,\n+                    // so we can eliminate them from consideration.\n+                    match tok {\n+                        token::RPAREN |\n+                        token::RBRACE |\n+                        token::RBRACKET => {},\n+                        _ => bb_eis.push(ei)\n+                    }\n+                  }\n                   MatchTok(ref t) => {\n                     let mut ei_t = ei.clone();\n                     if token_name_eq(t,&tok) {"}, {"sha": "2a00e5b861602cc06e34f030c43fb4d81c2b969f", "filename": "src/test/run-pass/macro-nt-list.rs", "status": "added", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/fc60797f7f3079288bdd1717dedbb885eaf1dbfa/src%2Ftest%2Frun-pass%2Fmacro-nt-list.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fc60797f7f3079288bdd1717dedbb885eaf1dbfa/src%2Ftest%2Frun-pass%2Fmacro-nt-list.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fmacro-nt-list.rs?ref=fc60797f7f3079288bdd1717dedbb885eaf1dbfa", "patch": "@@ -0,0 +1,30 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#![feature(macro_rules)]\n+\n+macro_rules! list (\n+    ( ($($id:ident),*) ) => (());\n+    ( [$($id:ident),*] ) => (());\n+    ( {$($id:ident),*} ) => (());\n+)\n+\n+macro_rules! tt_list (\n+    ( ($($tt:tt),*) ) => (());\n+)\n+\n+pub fn main() {\n+    list!( () );\n+    list!( [] );\n+    list!( {} );\n+\n+    tt_list!( (a, b, c) );\n+    tt_list!( () );\n+}"}]}