{"sha": "fd62c180fef3279925934a317cd4dd3ccecff8dc", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZkNjJjMTgwZmVmMzI3OTkyNTkzNGEzMTdjZDRkZDNjY2VjZmY4ZGM=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2020-10-25T09:56:16Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2020-10-25T09:56:16Z"}, "message": "Auto merge of #6162 - josephlr:empty-loop-no-std, r=flip1995\n\nUpdate empty_loop documentation/message.\n\nOriginally part of #6161, but now this PR only deals with `std` crates\n\nThis change:\n  - Updates the `std` message .\n  - Updates the docs to mention how the busy loops should be fixed\n    - Gives examples of how to do this for `no_std` targets\n  - Updates the tests/stderr files to test this change.\n\nchangelog: Update `empty_loop` lint documentation", "tree": {"sha": "2f6cd5ded8b8cc87ccdd841f4aafad1131f20bc7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2f6cd5ded8b8cc87ccdd841f4aafad1131f20bc7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/fd62c180fef3279925934a317cd4dd3ccecff8dc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/fd62c180fef3279925934a317cd4dd3ccecff8dc", "html_url": "https://github.com/rust-lang/rust/commit/fd62c180fef3279925934a317cd4dd3ccecff8dc", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/fd62c180fef3279925934a317cd4dd3ccecff8dc/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6b01c39e644dbe8b358e6c02a51169aa1fbef561", "url": "https://api.github.com/repos/rust-lang/rust/commits/6b01c39e644dbe8b358e6c02a51169aa1fbef561", "html_url": "https://github.com/rust-lang/rust/commit/6b01c39e644dbe8b358e6c02a51169aa1fbef561"}, {"sha": "3807634a470b572303d95feb8a5db273c7cea4af", "url": "https://api.github.com/repos/rust-lang/rust/commits/3807634a470b572303d95feb8a5db273c7cea4af", "html_url": "https://github.com/rust-lang/rust/commit/3807634a470b572303d95feb8a5db273c7cea4af"}], "stats": {"total": 43, "additions": 33, "deletions": 10}, "files": [{"sha": "44f2674eaa24585f550a61231abdaef641cd5f42", "filename": "clippy_lints/src/loops.rs", "status": "modified", "additions": 23, "deletions": 6, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/fd62c180fef3279925934a317cd4dd3ccecff8dc/clippy_lints%2Fsrc%2Floops.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fd62c180fef3279925934a317cd4dd3ccecff8dc/clippy_lints%2Fsrc%2Floops.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Floops.rs?ref=fd62c180fef3279925934a317cd4dd3ccecff8dc", "patch": "@@ -294,9 +294,24 @@ declare_clippy_lint! {\n declare_clippy_lint! {\n     /// **What it does:** Checks for empty `loop` expressions.\n     ///\n-    /// **Why is this bad?** Those busy loops burn CPU cycles without doing\n-    /// anything. Think of the environment and either block on something or at least\n-    /// make the thread sleep for some microseconds.\n+    /// **Why is this bad?** These busy loops burn CPU cycles without doing\n+    /// anything. It is _almost always_ a better idea to `panic!` than to have\n+    /// a busy loop.\n+    ///\n+    /// If panicking isn't possible, think of the environment and either:\n+    ///   - block on something\n+    ///   - sleep the thread for some microseconds\n+    ///   - yield or pause the thread\n+    ///\n+    /// For `std` targets, this can be done with\n+    /// [`std::thread::sleep`](https://doc.rust-lang.org/std/thread/fn.sleep.html)\n+    /// or [`std::thread::yield_now`](https://doc.rust-lang.org/std/thread/fn.yield_now.html).\n+    ///\n+    /// For `no_std` targets, doing this is more complicated, especially because\n+    /// `#[panic_handler]`s can't panic. To stop/pause the thread, you will\n+    /// probably need to invoke some target-specific intrinsic. Examples include:\n+    ///   - [`x86_64::instructions::hlt`](https://docs.rs/x86_64/0.12.2/x86_64/instructions/fn.hlt.html)\n+    ///   - [`cortex_m::asm::wfi`](https://docs.rs/cortex-m/0.6.3/cortex_m/asm/fn.wfi.html)\n     ///\n     /// **Known problems:** None.\n     ///\n@@ -529,13 +544,15 @@ impl<'tcx> LateLintPass<'tcx> for Loops {\n         // (even if the \"match\" or \"if let\" is used for declaration)\n         if let ExprKind::Loop(ref block, _, LoopSource::Loop) = expr.kind {\n             // also check for empty `loop {}` statements\n+            // TODO(issue #6161): Enable for no_std crates (outside of #[panic_handler])\n             if block.stmts.is_empty() && block.expr.is_none() && !is_no_std_crate(cx.tcx.hir().krate()) {\n-                span_lint(\n+                span_lint_and_help(\n                     cx,\n                     EMPTY_LOOP,\n                     expr.span,\n-                    \"empty `loop {}` detected. You may want to either use `panic!()` or add \\\n-                     `std::thread::sleep(..);` to the loop body.\",\n+                    \"empty `loop {}` wastes CPU cycles\",\n+                    None,\n+                    \"You should either use `panic!()` or add `std::thread::sleep(..);` to the loop body.\",\n                 );\n             }\n "}, {"sha": "bb03ce4035533a4b19a8bb0cb99e8cfb1b43fe47", "filename": "tests/ui/crashes/ice-360.stderr", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/fd62c180fef3279925934a317cd4dd3ccecff8dc/tests%2Fui%2Fcrashes%2Fice-360.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fd62c180fef3279925934a317cd4dd3ccecff8dc/tests%2Fui%2Fcrashes%2Fice-360.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fcrashes%2Fice-360.stderr?ref=fd62c180fef3279925934a317cd4dd3ccecff8dc", "patch": "@@ -12,13 +12,14 @@ LL | |     }\n    |\n    = note: `-D clippy::while-let-loop` implied by `-D warnings`\n \n-error: empty `loop {}` detected. You may want to either use `panic!()` or add `std::thread::sleep(..);` to the loop body.\n+error: empty `loop {}` wastes CPU cycles\n   --> $DIR/ice-360.rs:10:9\n    |\n LL |         loop {}\n    |         ^^^^^^^\n    |\n    = note: `-D clippy::empty-loop` implied by `-D warnings`\n+   = help: You should either use `panic!()` or add `std::thread::sleep(..);` to the loop body.\n \n error: aborting due to 2 previous errors\n "}, {"sha": "fd3979f259a145c6ea6a917fb2876a7119d7f3f8", "filename": "tests/ui/empty_loop.stderr", "status": "modified", "additions": 8, "deletions": 3, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/fd62c180fef3279925934a317cd4dd3ccecff8dc/tests%2Fui%2Fempty_loop.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fd62c180fef3279925934a317cd4dd3ccecff8dc/tests%2Fui%2Fempty_loop.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fempty_loop.stderr?ref=fd62c180fef3279925934a317cd4dd3ccecff8dc", "patch": "@@ -1,22 +1,27 @@\n-error: empty `loop {}` detected. You may want to either use `panic!()` or add `std::thread::sleep(..);` to the loop body.\n+error: empty `loop {}` wastes CPU cycles\n   --> $DIR/empty_loop.rs:9:5\n    |\n LL |     loop {}\n    |     ^^^^^^^\n    |\n    = note: `-D clippy::empty-loop` implied by `-D warnings`\n+   = help: You should either use `panic!()` or add `std::thread::sleep(..);` to the loop body.\n \n-error: empty `loop {}` detected. You may want to either use `panic!()` or add `std::thread::sleep(..);` to the loop body.\n+error: empty `loop {}` wastes CPU cycles\n   --> $DIR/empty_loop.rs:11:9\n    |\n LL |         loop {}\n    |         ^^^^^^^\n+   |\n+   = help: You should either use `panic!()` or add `std::thread::sleep(..);` to the loop body.\n \n-error: empty `loop {}` detected. You may want to either use `panic!()` or add `std::thread::sleep(..);` to the loop body.\n+error: empty `loop {}` wastes CPU cycles\n   --> $DIR/empty_loop.rs:15:9\n    |\n LL |         'inner: loop {}\n    |         ^^^^^^^^^^^^^^^\n+   |\n+   = help: You should either use `panic!()` or add `std::thread::sleep(..);` to the loop body.\n \n error: aborting due to 3 previous errors\n "}, {"sha": "879d1d5d916e439bf219fef4e343ab0320c13d51", "filename": "tests/ui/empty_loop_no_std.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/fd62c180fef3279925934a317cd4dd3ccecff8dc/tests%2Fui%2Fempty_loop_no_std.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fd62c180fef3279925934a317cd4dd3ccecff8dc/tests%2Fui%2Fempty_loop_no_std.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fempty_loop_no_std.rs?ref=fd62c180fef3279925934a317cd4dd3ccecff8dc", "previous_filename": "tests/ui/issue-3746.rs"}]}