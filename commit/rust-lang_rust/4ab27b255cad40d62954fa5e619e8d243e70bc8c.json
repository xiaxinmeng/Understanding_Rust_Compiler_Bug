{"sha": "4ab27b255cad40d62954fa5e619e8d243e70bc8c", "node_id": "MDY6Q29tbWl0NzI0NzEyOjRhYjI3YjI1NWNhZDQwZDYyOTU0ZmE1ZTYxOWU4ZDI0M2U3MGJjOGM=", "commit": {"author": {"name": "Ariel Ben-Yehuda", "email": "ariel.byd@gmail.com", "date": "2018-12-14T23:52:50Z"}, "committer": {"name": "Ariel Ben-Yehuda", "email": "ariel.byd@gmail.com", "date": "2019-01-03T22:34:52Z"}, "message": "fix ppaux", "tree": {"sha": "62d3a6da5baf992d94725d25e727abb1ae9d583a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/62d3a6da5baf992d94725d25e727abb1ae9d583a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4ab27b255cad40d62954fa5e619e8d243e70bc8c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4ab27b255cad40d62954fa5e619e8d243e70bc8c", "html_url": "https://github.com/rust-lang/rust/commit/4ab27b255cad40d62954fa5e619e8d243e70bc8c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4ab27b255cad40d62954fa5e619e8d243e70bc8c/comments", "author": {"login": "arielb1", "id": 1830974, "node_id": "MDQ6VXNlcjE4MzA5NzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1830974?v=4", "gravatar_id": "", "url": "https://api.github.com/users/arielb1", "html_url": "https://github.com/arielb1", "followers_url": "https://api.github.com/users/arielb1/followers", "following_url": "https://api.github.com/users/arielb1/following{/other_user}", "gists_url": "https://api.github.com/users/arielb1/gists{/gist_id}", "starred_url": "https://api.github.com/users/arielb1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/arielb1/subscriptions", "organizations_url": "https://api.github.com/users/arielb1/orgs", "repos_url": "https://api.github.com/users/arielb1/repos", "events_url": "https://api.github.com/users/arielb1/events{/privacy}", "received_events_url": "https://api.github.com/users/arielb1/received_events", "type": "User", "site_admin": false}, "committer": {"login": "arielb1", "id": 1830974, "node_id": "MDQ6VXNlcjE4MzA5NzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1830974?v=4", "gravatar_id": "", "url": "https://api.github.com/users/arielb1", "html_url": "https://github.com/arielb1", "followers_url": "https://api.github.com/users/arielb1/followers", "following_url": "https://api.github.com/users/arielb1/following{/other_user}", "gists_url": "https://api.github.com/users/arielb1/gists{/gist_id}", "starred_url": "https://api.github.com/users/arielb1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/arielb1/subscriptions", "organizations_url": "https://api.github.com/users/arielb1/orgs", "repos_url": "https://api.github.com/users/arielb1/repos", "events_url": "https://api.github.com/users/arielb1/events{/privacy}", "received_events_url": "https://api.github.com/users/arielb1/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "571a15bd15f02a65f1978b9b72589beb89a60782", "url": "https://api.github.com/repos/rust-lang/rust/commits/571a15bd15f02a65f1978b9b72589beb89a60782", "html_url": "https://github.com/rust-lang/rust/commit/571a15bd15f02a65f1978b9b72589beb89a60782"}], "stats": {"total": 9, "additions": 8, "deletions": 1}, "files": [{"sha": "b49852be38dde384a3790da17a231b8ab7b25595", "filename": "src/librustc/util/ppaux.rs", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/4ab27b255cad40d62954fa5e619e8d243e70bc8c/src%2Flibrustc%2Futil%2Fppaux.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4ab27b255cad40d62954fa5e619e8d243e70bc8c/src%2Flibrustc%2Futil%2Fppaux.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Futil%2Fppaux.rs?ref=4ab27b255cad40d62954fa5e619e8d243e70bc8c", "patch": "@@ -712,6 +712,7 @@ define_print! {\n             ty::tls::with(|tcx| {\n                 // Use a type that can't appear in defaults of type parameters.\n                 let dummy_self = tcx.mk_infer(ty::FreshTy(0));\n+                let mut first = true;\n \n                 if let Some(principal) = self.principal() {\n                     let principal = tcx\n@@ -724,11 +725,17 @@ define_print! {\n                             .with_self_ty(tcx, dummy_self)\n                     }).collect::<Vec<_>>();\n                     cx.parameterized(f, principal.substs, principal.def_id, &projections)?;\n+                    first = false;\n                 }\n \n                 // Builtin bounds.\n                 for did in self.auto_traits() {\n-                    write!(f, \" + {}\", tcx.item_path_str(did))?;\n+                    if !first {\n+                        write!(f, \" + \")?;\n+                    }\n+                    first = false;\n+\n+                    write!(f, \"{}\", tcx.item_path_str(did))?;\n                 }\n \n                 Ok(())"}]}