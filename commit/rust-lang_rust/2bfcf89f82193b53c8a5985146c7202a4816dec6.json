{"sha": "2bfcf89f82193b53c8a5985146c7202a4816dec6", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJiZmNmODlmODIxOTNiNTNjOGE1OTg1MTQ2YzcyMDJhNDgxNmRlYzY=", "commit": {"author": {"name": "Jeremy Stucki", "email": "stucki.jeremy@gmail.com", "date": "2019-08-14T05:36:37Z"}, "committer": {"name": "Jeremy Stucki", "email": "stucki.jeremy@gmail.com", "date": "2019-08-14T05:36:37Z"}, "message": "Merge branch 'origin/master' into flat-map", "tree": {"sha": "e977cfd47338f1e7e43a297307b84e25161c11bb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e977cfd47338f1e7e43a297307b84e25161c11bb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2bfcf89f82193b53c8a5985146c7202a4816dec6", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEnLVrz+MJS3aQxZ9oj1SKWi7RP1gFAl1Tne4ACgkQj1SKWi7R\nP1iJORAAkJnl3WSCuhvxYzFfNH8OQsDoTQY9cBD6ywbIe47WFa28VZLuDUSmPVMa\nE/R1Kf/oTS8R0T82dWYFu5ZX3kJ99B5WMAxP40Rhy4xprn17/gEUVJLqL+wL1LE9\nqsd7Pn/u7hxEBwNbCbd82V99aBkP6G3VDitk87847Eu0oAoUQVOaw6ncWyELL+iq\n55yW35Zsky74ViXzVV+46DCVns4mvkycASWmcr2r6MSC/y6CHpT8zdpc/pZWmWb1\nCfhN9CK+AvwgFcVGe4i9NXPkfegEiBT/LRi+fNrnSMfqPKwWxl6kyEyd1Pm8dZfK\nAPZOYy3dabquI4W0JVwhVoOtsKaoyCgreYVgrlLKU9KOTi7IRmnBlQVKyJBEBRkt\n1cC4dYqizMEl5zR6o8jrQ4TvzJ3pqG7ICB7qo3dui4n3HGpkvP1P1gdwpzEKUfrG\nvglZfe1KtnB+oB0049DEk0IPU1DKOuQWoEOEdhuY66xgUEByxNbDgBGmE38Ii1ge\nEpb2RysPcrPytPFe7DNH47lOOcHslFAMDUaPr2Z9TeTgdQtAYeK9534Ky/Ff0tpY\nCg/MsE+Fut9KxrDq+dbF1bMVxSjHgphvVMqJN0jGB5iSiU48DHo8dHz4pOVlVSwN\nx1Xg7rMGA8DVSu/LB0q/wco18NF7vkiY1qRBDlBuyeLaxI0LVgw=\n=Zwcp\n-----END PGP SIGNATURE-----", "payload": "tree e977cfd47338f1e7e43a297307b84e25161c11bb\nparent 2fe5e2cea91030737f38df81e5f82e652927491f\nparent c154754b74577906c5d55d57f7daeff02d6a33e7\nauthor Jeremy Stucki <stucki.jeremy@gmail.com> 1565760997 +0200\ncommitter Jeremy Stucki <stucki.jeremy@gmail.com> 1565760997 +0200\n\nMerge branch 'origin/master' into flat-map\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2bfcf89f82193b53c8a5985146c7202a4816dec6", "html_url": "https://github.com/rust-lang/rust/commit/2bfcf89f82193b53c8a5985146c7202a4816dec6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2bfcf89f82193b53c8a5985146c7202a4816dec6/comments", "author": {"login": "jeremystucki", "id": 7629727, "node_id": "MDQ6VXNlcjc2Mjk3Mjc=", "avatar_url": "https://avatars.githubusercontent.com/u/7629727?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jeremystucki", "html_url": "https://github.com/jeremystucki", "followers_url": "https://api.github.com/users/jeremystucki/followers", "following_url": "https://api.github.com/users/jeremystucki/following{/other_user}", "gists_url": "https://api.github.com/users/jeremystucki/gists{/gist_id}", "starred_url": "https://api.github.com/users/jeremystucki/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jeremystucki/subscriptions", "organizations_url": "https://api.github.com/users/jeremystucki/orgs", "repos_url": "https://api.github.com/users/jeremystucki/repos", "events_url": "https://api.github.com/users/jeremystucki/events{/privacy}", "received_events_url": "https://api.github.com/users/jeremystucki/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jeremystucki", "id": 7629727, "node_id": "MDQ6VXNlcjc2Mjk3Mjc=", "avatar_url": "https://avatars.githubusercontent.com/u/7629727?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jeremystucki", "html_url": "https://github.com/jeremystucki", "followers_url": "https://api.github.com/users/jeremystucki/followers", "following_url": "https://api.github.com/users/jeremystucki/following{/other_user}", "gists_url": "https://api.github.com/users/jeremystucki/gists{/gist_id}", "starred_url": "https://api.github.com/users/jeremystucki/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jeremystucki/subscriptions", "organizations_url": "https://api.github.com/users/jeremystucki/orgs", "repos_url": "https://api.github.com/users/jeremystucki/repos", "events_url": "https://api.github.com/users/jeremystucki/events{/privacy}", "received_events_url": "https://api.github.com/users/jeremystucki/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2fe5e2cea91030737f38df81e5f82e652927491f", "url": "https://api.github.com/repos/rust-lang/rust/commits/2fe5e2cea91030737f38df81e5f82e652927491f", "html_url": "https://github.com/rust-lang/rust/commit/2fe5e2cea91030737f38df81e5f82e652927491f"}, {"sha": "c154754b74577906c5d55d57f7daeff02d6a33e7", "url": "https://api.github.com/repos/rust-lang/rust/commits/c154754b74577906c5d55d57f7daeff02d6a33e7", "html_url": "https://github.com/rust-lang/rust/commit/c154754b74577906c5d55d57f7daeff02d6a33e7"}], "stats": {"total": 96, "additions": 68, "deletions": 28}, "files": [{"sha": "39ac112481e45bdad684ee8db84d0e4ee759f4f5", "filename": "clippy_lints/src/methods/mod.rs", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/2bfcf89f82193b53c8a5985146c7202a4816dec6/clippy_lints%2Fsrc%2Fmethods%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2bfcf89f82193b53c8a5985146c7202a4816dec6/clippy_lints%2Fsrc%2Fmethods%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmethods%2Fmod.rs?ref=2bfcf89f82193b53c8a5985146c7202a4816dec6", "patch": "@@ -1094,11 +1094,12 @@ impl<'a, 'tcx> LateLintPass<'a, 'tcx> for Methods {\n                         (Predicate::Projection(poly_projection_predicate), _) => {\n                             let binder = poly_projection_predicate.ty();\n                             let associated_type = binder.skip_binder();\n-                            let associated_type_is_self_type = same_tys(cx, ty, associated_type);\n \n-                            // if the associated type is self, early return and do not trigger lint\n-                            if associated_type_is_self_type {\n-                                return;\n+                            // walk the associated type and check for Self\n+                            for inner_type in associated_type.walk() {\n+                                if same_tys(cx, ty, inner_type) {\n+                                    return;\n+                                }\n                             }\n                         },\n                         (_, _) => {},"}, {"sha": "3608c0e61251a594cf45575a9793d6de43f61f8d", "filename": "clippy_lints/src/write.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/2bfcf89f82193b53c8a5985146c7202a4816dec6/clippy_lints%2Fsrc%2Fwrite.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2bfcf89f82193b53c8a5985146c7202a4816dec6/clippy_lints%2Fsrc%2Fwrite.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fwrite.rs?ref=2bfcf89f82193b53c8a5985146c7202a4816dec6", "patch": "@@ -73,7 +73,7 @@ declare_clippy_lint! {\n     /// lint is to catch debugging remnants.\n     ///\n     /// **Why is this bad?** The purpose of the `Debug` trait is to facilitate\n-    /// debugging Rust code. It should not be used in in user-facing output.\n+    /// debugging Rust code. It should not be used in user-facing output.\n     ///\n     /// **Example:**\n     /// ```rust"}, {"sha": "d87580191fb94b162ec2e11b3599909250b80f41", "filename": "doc/adding_lints.md", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/2bfcf89f82193b53c8a5985146c7202a4816dec6/doc%2Fadding_lints.md", "raw_url": "https://github.com/rust-lang/rust/raw/2bfcf89f82193b53c8a5985146c7202a4816dec6/doc%2Fadding_lints.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/doc%2Fadding_lints.md?ref=2bfcf89f82193b53c8a5985146c7202a4816dec6", "patch": "@@ -10,6 +10,7 @@ because that's clearly a non-descriptive name.\n * [Setup](#Setup)\n * [Testing](#Testing)\n * [Rustfix tests](#Rustfix-tests)\n+* [Edition 2018 tests](#Edition-2018-tests)\n * [Lint declaration](#Lint-declaration)\n * [Lint passes](#Lint-passes)\n * [Emitting a lint](#Emitting-a-lint)\n@@ -101,6 +102,12 @@ Use `tests/ui/update-all-references.sh` to automatically generate the\n \n With tests in place, let's have a look at implementing our lint now.\n \n+### Edition 2018 tests\n+\n+Some features require the 2018 edition to work (e.g. `async_await`), but\n+compile-test tests run on the 2015 edition by default. To change this behavior\n+add `// compile-flags: --edition 2018` at the top of the test file.\n+\n ### Testing manually\n \n Manually testing against an example file can be useful if you have added some"}, {"sha": "5ae2b32c1bb08fc2a6a9f78165c4666032a1e392", "filename": "tests/ui/methods.rs", "status": "modified", "additions": 18, "deletions": 1, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/2bfcf89f82193b53c8a5985146c7202a4816dec6/tests%2Fui%2Fmethods.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2bfcf89f82193b53c8a5985146c7202a4816dec6/tests%2Fui%2Fmethods.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmethods.rs?ref=2bfcf89f82193b53c8a5985146c7202a4816dec6", "patch": "@@ -1,5 +1,7 @@\n // aux-build:option_helpers.rs\n+// compile-flags: --edition 2018\n \n+#![feature(async_await)]\n #![warn(clippy::all, clippy::pedantic, clippy::option_unwrap_used)]\n #![allow(\n     clippy::blacklisted_name,\n@@ -11,7 +13,6 @@\n     clippy::needless_pass_by_value,\n     clippy::default_trait_access,\n     clippy::use_self,\n-    clippy::new_ret_no_self,\n     clippy::useless_format,\n     clippy::wrong_self_convention\n )]\n@@ -138,6 +139,22 @@ impl<T> V<T> {\n     }\n }\n \n+struct AsyncNew;\n+\n+impl AsyncNew {\n+    async fn new() -> Option<Self> {\n+        None\n+    }\n+}\n+\n+struct BadNew;\n+\n+impl BadNew {\n+    fn new() -> i32 {\n+        0\n+    }\n+}\n+\n impl Mul<T> for T {\n     type Output = T;\n     // No error, obviously."}, {"sha": "8d09c49f005befedce599c4b840910498f43ac97", "filename": "tests/ui/methods.stderr", "status": "modified", "additions": 31, "deletions": 21, "changes": 52, "blob_url": "https://github.com/rust-lang/rust/blob/2bfcf89f82193b53c8a5985146c7202a4816dec6/tests%2Fui%2Fmethods.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/2bfcf89f82193b53c8a5985146c7202a4816dec6/tests%2Fui%2Fmethods.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmethods.stderr?ref=2bfcf89f82193b53c8a5985146c7202a4816dec6", "patch": "@@ -1,5 +1,5 @@\n error: defining a method called `add` on this type; consider implementing the `std::ops::Add` trait or choosing a less ambiguous name\n-  --> $DIR/methods.rs:36:5\n+  --> $DIR/methods.rs:37:5\n    |\n LL | /     pub fn add(self, other: T) -> T {\n LL | |         self\n@@ -8,8 +8,18 @@ LL | |     }\n    |\n    = note: `-D clippy::should-implement-trait` implied by `-D warnings`\n \n+error: methods called `new` usually return `Self`\n+  --> $DIR/methods.rs:153:5\n+   |\n+LL | /     fn new() -> i32 {\n+LL | |         0\n+LL | |     }\n+   | |_____^\n+   |\n+   = note: `-D clippy::new-ret-no-self` implied by `-D warnings`\n+\n error: called `map(f).unwrap_or(a)` on an Option value. This can be done more directly by calling `map_or(a, f)` instead\n-  --> $DIR/methods.rs:158:13\n+  --> $DIR/methods.rs:175:13\n    |\n LL |       let _ = opt.map(|x| x + 1)\n    |  _____________^\n@@ -21,7 +31,7 @@ LL | |                .unwrap_or(0);\n    = note: replace `map(|x| x + 1).unwrap_or(0)` with `map_or(0, |x| x + 1)`\n \n error: called `map(f).unwrap_or(a)` on an Option value. This can be done more directly by calling `map_or(a, f)` instead\n-  --> $DIR/methods.rs:162:13\n+  --> $DIR/methods.rs:179:13\n    |\n LL |       let _ = opt.map(|x| {\n    |  _____________^\n@@ -31,7 +41,7 @@ LL | |               ).unwrap_or(0);\n    | |____________________________^\n \n error: called `map(f).unwrap_or(a)` on an Option value. This can be done more directly by calling `map_or(a, f)` instead\n-  --> $DIR/methods.rs:166:13\n+  --> $DIR/methods.rs:183:13\n    |\n LL |       let _ = opt.map(|x| x + 1)\n    |  _____________^\n@@ -41,15 +51,15 @@ LL | |                 });\n    | |__________________^\n \n error: called `map(f).unwrap_or(None)` on an Option value. This can be done more directly by calling `and_then(f)` instead\n-  --> $DIR/methods.rs:171:13\n+  --> $DIR/methods.rs:188:13\n    |\n LL |     let _ = opt.map(|x| Some(x + 1)).unwrap_or(None);\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: replace `map(|x| Some(x + 1)).unwrap_or(None)` with `and_then(|x| Some(x + 1))`\n \n error: called `map(f).unwrap_or(None)` on an Option value. This can be done more directly by calling `and_then(f)` instead\n-  --> $DIR/methods.rs:173:13\n+  --> $DIR/methods.rs:190:13\n    |\n LL |       let _ = opt.map(|x| {\n    |  _____________^\n@@ -59,7 +69,7 @@ LL | |     ).unwrap_or(None);\n    | |_____________________^\n \n error: called `map(f).unwrap_or(None)` on an Option value. This can be done more directly by calling `and_then(f)` instead\n-  --> $DIR/methods.rs:177:13\n+  --> $DIR/methods.rs:194:13\n    |\n LL |       let _ = opt\n    |  _____________^\n@@ -70,15 +80,15 @@ LL | |         .unwrap_or(None);\n    = note: replace `map(|x| Some(x + 1)).unwrap_or(None)` with `and_then(|x| Some(x + 1))`\n \n error: called `map(f).unwrap_or(a)` on an Option value. This can be done more directly by calling `map_or(a, f)` instead\n-  --> $DIR/methods.rs:188:13\n+  --> $DIR/methods.rs:205:13\n    |\n LL |     let _ = Some(\"prefix\").map(|p| format!(\"{}.\", p)).unwrap_or(id);\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: replace `map(|p| format!(\"{}.\", p)).unwrap_or(id)` with `map_or(id, |p| format!(\"{}.\", p))`\n \n error: called `map(f).unwrap_or_else(g)` on an Option value. This can be done more directly by calling `map_or_else(g, f)` instead\n-  --> $DIR/methods.rs:192:13\n+  --> $DIR/methods.rs:209:13\n    |\n LL |       let _ = opt.map(|x| x + 1)\n    |  _____________^\n@@ -90,7 +100,7 @@ LL | |                .unwrap_or_else(|| 0);\n    = note: replace `map(|x| x + 1).unwrap_or_else(|| 0)` with `map_or_else(|| 0, |x| x + 1)`\n \n error: called `map(f).unwrap_or_else(g)` on an Option value. This can be done more directly by calling `map_or_else(g, f)` instead\n-  --> $DIR/methods.rs:196:13\n+  --> $DIR/methods.rs:213:13\n    |\n LL |       let _ = opt.map(|x| {\n    |  _____________^\n@@ -100,7 +110,7 @@ LL | |               ).unwrap_or_else(|| 0);\n    | |____________________________________^\n \n error: called `map(f).unwrap_or_else(g)` on an Option value. This can be done more directly by calling `map_or_else(g, f)` instead\n-  --> $DIR/methods.rs:200:13\n+  --> $DIR/methods.rs:217:13\n    |\n LL |       let _ = opt.map(|x| x + 1)\n    |  _____________^\n@@ -110,7 +120,7 @@ LL | |                 );\n    | |_________________^\n \n error: called `filter(p).next()` on an `Iterator`. This is more succinctly expressed by calling `.find(p)` instead.\n-  --> $DIR/methods.rs:230:13\n+  --> $DIR/methods.rs:247:13\n    |\n LL |     let _ = v.iter().filter(|&x| *x < 0).next();\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n@@ -119,7 +129,7 @@ LL |     let _ = v.iter().filter(|&x| *x < 0).next();\n    = note: replace `filter(|&x| *x < 0).next()` with `find(|&x| *x < 0)`\n \n error: called `filter(p).next()` on an `Iterator`. This is more succinctly expressed by calling `.find(p)` instead.\n-  --> $DIR/methods.rs:233:13\n+  --> $DIR/methods.rs:250:13\n    |\n LL |       let _ = v.iter().filter(|&x| {\n    |  _____________^\n@@ -129,7 +139,7 @@ LL | |                    ).next();\n    | |___________________________^\n \n error: called `is_some()` after searching an `Iterator` with find. This is more succinctly expressed by calling `any()`.\n-  --> $DIR/methods.rs:249:13\n+  --> $DIR/methods.rs:266:13\n    |\n LL |     let _ = v.iter().find(|&x| *x < 0).is_some();\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n@@ -138,7 +148,7 @@ LL |     let _ = v.iter().find(|&x| *x < 0).is_some();\n    = note: replace `find(|&x| *x < 0).is_some()` with `any(|x| *x < 0)`\n \n error: called `is_some()` after searching an `Iterator` with find. This is more succinctly expressed by calling `any()`.\n-  --> $DIR/methods.rs:252:13\n+  --> $DIR/methods.rs:269:13\n    |\n LL |       let _ = v.iter().find(|&x| {\n    |  _____________^\n@@ -148,15 +158,15 @@ LL | |                    ).is_some();\n    | |______________________________^\n \n error: called `is_some()` after searching an `Iterator` with position. This is more succinctly expressed by calling `any()`.\n-  --> $DIR/methods.rs:258:13\n+  --> $DIR/methods.rs:275:13\n    |\n LL |     let _ = v.iter().position(|&x| x < 0).is_some();\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: replace `position(|&x| x < 0).is_some()` with `any(|&x| x < 0)`\n \n error: called `is_some()` after searching an `Iterator` with position. This is more succinctly expressed by calling `any()`.\n-  --> $DIR/methods.rs:261:13\n+  --> $DIR/methods.rs:278:13\n    |\n LL |       let _ = v.iter().position(|&x| {\n    |  _____________^\n@@ -166,15 +176,15 @@ LL | |                    ).is_some();\n    | |______________________________^\n \n error: called `is_some()` after searching an `Iterator` with rposition. This is more succinctly expressed by calling `any()`.\n-  --> $DIR/methods.rs:267:13\n+  --> $DIR/methods.rs:284:13\n    |\n LL |     let _ = v.iter().rposition(|&x| x < 0).is_some();\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: replace `rposition(|&x| x < 0).is_some()` with `any(|&x| x < 0)`\n \n error: called `is_some()` after searching an `Iterator` with rposition. This is more succinctly expressed by calling `any()`.\n-  --> $DIR/methods.rs:270:13\n+  --> $DIR/methods.rs:287:13\n    |\n LL |       let _ = v.iter().rposition(|&x| {\n    |  _____________^\n@@ -184,12 +194,12 @@ LL | |                    ).is_some();\n    | |______________________________^\n \n error: used unwrap() on an Option value. If you don't want to handle the None case gracefully, consider using expect() to provide a better panic message\n-  --> $DIR/methods.rs:285:13\n+  --> $DIR/methods.rs:302:13\n    |\n LL |     let _ = opt.unwrap();\n    |             ^^^^^^^^^^^^\n    |\n    = note: `-D clippy::option-unwrap-used` implied by `-D warnings`\n \n-error: aborting due to 20 previous errors\n+error: aborting due to 21 previous errors\n "}, {"sha": "36b4785ac87e5ade955115152dfc0aeb215d7f2a", "filename": "util/fetch_prs_between.sh", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/2bfcf89f82193b53c8a5985146c7202a4816dec6/util%2Ffetch_prs_between.sh", "raw_url": "https://github.com/rust-lang/rust/raw/2bfcf89f82193b53c8a5985146c7202a4816dec6/util%2Ffetch_prs_between.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/util%2Ffetch_prs_between.sh?ref=2bfcf89f82193b53c8a5985146c7202a4816dec6", "patch": "@@ -14,7 +14,12 @@ IFS='\n for pr in $(git log --oneline --grep \"Merge #\" --grep \"Merge pull request\" --grep \"Auto merge of\" \"$first...$last\" | sort -rn | uniq); do\n   id=$(echo $pr | rg -o '#[0-9]{3,5}' | cut -c 2-)\n   commit=$(echo $pr | cut -d' ' -f 1)\n+  message=$(git --no-pager show --pretty=medium $commit)\n+  if [ ! -z $(echo \"$message\" | rg \"^[\\s]{4}changelog: [nN]one\\.*$\") ]; then\n+    continue\n+  fi\n+\n   echo \"URL: https://github.com/rust-lang/rust-clippy/pull/$id\"\n-  echo \"$(git --no-pager show --pretty=medium $commit)\"\n+  echo \"$message\"\n   echo \"---------------------------------------------------------\\n\"\n done"}]}