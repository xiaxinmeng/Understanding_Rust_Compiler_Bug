{"sha": "0f61aa1f09f0609271d3c0a3d23815488ec94949", "node_id": "MDY6Q29tbWl0NzI0NzEyOjBmNjFhYTFmMDlmMDYwOTI3MWQzYzBhM2QyMzgxNTQ4OGVjOTQ5NDk=", "commit": {"author": {"name": "kjeremy", "email": "kjeremy@gmail.com", "date": "2019-07-31T17:59:14Z"}, "committer": {"name": "kjeremy", "email": "kjeremy@gmail.com", "date": "2019-07-31T17:59:14Z"}, "message": "Unconditionally trim the end of comments", "tree": {"sha": "ee77d2ed8300fad294b1609f4eba7c7cba232147", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ee77d2ed8300fad294b1609f4eba7c7cba232147"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0f61aa1f09f0609271d3c0a3d23815488ec94949", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0f61aa1f09f0609271d3c0a3d23815488ec94949", "html_url": "https://github.com/rust-lang/rust/commit/0f61aa1f09f0609271d3c0a3d23815488ec94949", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0f61aa1f09f0609271d3c0a3d23815488ec94949/comments", "author": {"login": "kjeremy", "id": 4325700, "node_id": "MDQ6VXNlcjQzMjU3MDA=", "avatar_url": "https://avatars.githubusercontent.com/u/4325700?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kjeremy", "html_url": "https://github.com/kjeremy", "followers_url": "https://api.github.com/users/kjeremy/followers", "following_url": "https://api.github.com/users/kjeremy/following{/other_user}", "gists_url": "https://api.github.com/users/kjeremy/gists{/gist_id}", "starred_url": "https://api.github.com/users/kjeremy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kjeremy/subscriptions", "organizations_url": "https://api.github.com/users/kjeremy/orgs", "repos_url": "https://api.github.com/users/kjeremy/repos", "events_url": "https://api.github.com/users/kjeremy/events{/privacy}", "received_events_url": "https://api.github.com/users/kjeremy/received_events", "type": "User", "site_admin": false}, "committer": {"login": "kjeremy", "id": 4325700, "node_id": "MDQ6VXNlcjQzMjU3MDA=", "avatar_url": "https://avatars.githubusercontent.com/u/4325700?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kjeremy", "html_url": "https://github.com/kjeremy", "followers_url": "https://api.github.com/users/kjeremy/followers", "following_url": "https://api.github.com/users/kjeremy/following{/other_user}", "gists_url": "https://api.github.com/users/kjeremy/gists{/gist_id}", "starred_url": "https://api.github.com/users/kjeremy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kjeremy/subscriptions", "organizations_url": "https://api.github.com/users/kjeremy/orgs", "repos_url": "https://api.github.com/users/kjeremy/repos", "events_url": "https://api.github.com/users/kjeremy/events{/privacy}", "received_events_url": "https://api.github.com/users/kjeremy/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d65dc40348afc90c812b4d392f8e085eca78fc17", "url": "https://api.github.com/repos/rust-lang/rust/commits/d65dc40348afc90c812b4d392f8e085eca78fc17", "html_url": "https://github.com/rust-lang/rust/commit/d65dc40348afc90c812b4d392f8e085eca78fc17"}], "stats": {"total": 18, "additions": 5, "deletions": 13}, "files": [{"sha": "6f04896172c9956bf729be057b85357f657d3a4d", "filename": "crates/ra_syntax/src/ast.rs", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/0f61aa1f09f0609271d3c0a3d23815488ec94949/crates%2Fra_syntax%2Fsrc%2Fast.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0f61aa1f09f0609271d3c0a3d23815488ec94949/crates%2Fra_syntax%2Fsrc%2Fast.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Fsrc%2Fast.rs?ref=0f61aa1f09f0609271d3c0a3d23815488ec94949", "patch": "@@ -181,10 +181,7 @@ fn test_doc_comment_multi_line_block_strips_suffix() {\n     .ok()\n     .unwrap();\n     let module = file.syntax().descendants().find_map(Module::cast).unwrap();\n-    assert_eq!(\n-        \"        this\\n        is\\n        mod foo\\n       \",\n-        module.doc_comment_text().unwrap()\n-    );\n+    assert_eq!(\"        this\\n        is\\n        mod foo\", module.doc_comment_text().unwrap());\n }\n \n #[test]"}, {"sha": "1b9a2b20cf446767a534a79331ca1683a679e875", "filename": "crates/ra_syntax/src/ast/traits.rs", "status": "modified", "additions": 4, "deletions": 9, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/0f61aa1f09f0609271d3c0a3d23815488ec94949/crates%2Fra_syntax%2Fsrc%2Fast%2Ftraits.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0f61aa1f09f0609271d3c0a3d23815488ec94949/crates%2Fra_syntax%2Fsrc%2Fast%2Ftraits.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Fsrc%2Fast%2Ftraits.rs?ref=0f61aa1f09f0609271d3c0a3d23815488ec94949", "patch": "@@ -115,8 +115,8 @@ pub trait DocCommentsOwner: AstNode {\n     }\n \n     /// Returns the textual content of a doc comment block as a single string.\n-    /// That is, strips leading `///` or trailing `*/` (+ optional 1 character of whitespace in either direction)\n-    /// and joins lines.\n+    /// That is, strips leading `///` (+ optional 1 character of whitespace),\n+    /// trailing `*/`, trailing whitespace and then joins the lines.\n     fn doc_comment_text(&self) -> Option<String> {\n         let mut has_comments = false;\n         let docs = self\n@@ -137,17 +137,12 @@ pub trait DocCommentsOwner: AstNode {\n                     };\n \n                 let end = if comment.kind().shape.is_block() && line.ends_with(\"*/\") {\n-                    // FIXME: Use `nth_back` here once stable\n-                    if line.chars().rev().nth(2).map(|c| c.is_whitespace()).unwrap_or(false) {\n-                        line.len() - 3\n-                    } else {\n-                        line.len() - 2\n-                    }\n+                    line.len() - 2\n                 } else {\n                     line.len()\n                 };\n \n-                line[pos..end].to_owned()\n+                line[pos..end].trim_end().to_owned()\n             })\n             .join(\"\\n\");\n "}]}