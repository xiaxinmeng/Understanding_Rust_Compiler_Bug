{"sha": "9dd1dcf5ac3f9f28da2e7bbec22adbc8fe811065", "node_id": "MDY6Q29tbWl0NzI0NzEyOjlkZDFkY2Y1YWMzZjlmMjhkYTJlN2JiZWMyMmFkYmM4ZmU4MTEwNjU=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2019-09-18T11:24:53Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-09-18T11:24:53Z"}, "message": "Merge #1867\n\n1867: tweak installation process r=matklad a=matklad\n\n\n\nCo-authored-by: Aleksey Kladov <aleksey.kladov@gmail.com>", "tree": {"sha": "a907d71d440040f1371814cfed6af6f637e38b63", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a907d71d440040f1371814cfed6af6f637e38b63"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9dd1dcf5ac3f9f28da2e7bbec22adbc8fe811065", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJdghQFCRBK7hj4Ov3rIwAAdHIIAJ8+iPApoV4DCqumTlzjUzGe\nH02KsBuHeT25WoDld+BcKq1b1CeQs1s4tntl0sXTP3sIACcMt+wRRMHwXCQ/Snjs\nlrbIffwcxAtVYOCMKXEJ+1/V0R6Rmvs3W1ISzwrTPNwTTxgvt8b1d7tnyeyspuEw\n3fqn90gbzNV6aie7oY5uDdyd6875OQxIYdNGErdNS++51GB624L+dPVIdaGnlr3I\nqOR0/xvez1e0L2GVWxd2f8A7EgZf9DNQeBOUTI+cnEwHnJE6K9vKecgNwF9USogn\nEqD3gB8dkQtw3pFyJkE7eqeuNWAJnBmBay5m31hbtjLum8CsZasHRT/TX79tLFA=\n=IG8B\n-----END PGP SIGNATURE-----\n", "payload": "tree a907d71d440040f1371814cfed6af6f637e38b63\nparent 630d212525192c714d4fbab398031aa88c49e538\nparent 1e16ac031542b629d7997816592742dbf9f911f6\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1568805893 +0000\ncommitter GitHub <noreply@github.com> 1568805893 +0000\n\nMerge #1867\n\n1867: tweak installation process r=matklad a=matklad\n\n\n\nCo-authored-by: Aleksey Kladov <aleksey.kladov@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9dd1dcf5ac3f9f28da2e7bbec22adbc8fe811065", "html_url": "https://github.com/rust-lang/rust/commit/9dd1dcf5ac3f9f28da2e7bbec22adbc8fe811065", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9dd1dcf5ac3f9f28da2e7bbec22adbc8fe811065/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "630d212525192c714d4fbab398031aa88c49e538", "url": "https://api.github.com/repos/rust-lang/rust/commits/630d212525192c714d4fbab398031aa88c49e538", "html_url": "https://github.com/rust-lang/rust/commit/630d212525192c714d4fbab398031aa88c49e538"}, {"sha": "1e16ac031542b629d7997816592742dbf9f911f6", "url": "https://api.github.com/repos/rust-lang/rust/commits/1e16ac031542b629d7997816592742dbf9f911f6", "html_url": "https://github.com/rust-lang/rust/commit/1e16ac031542b629d7997816592742dbf9f911f6"}], "stats": {"total": 53, "additions": 32, "deletions": 21}, "files": [{"sha": "e249c6486352c654b22b3eca2c351738c08b498c", "filename": "README.md", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/9dd1dcf5ac3f9f28da2e7bbec22adbc8fe811065/README.md", "raw_url": "https://github.com/rust-lang/rust/raw/9dd1dcf5ac3f9f28da2e7bbec22adbc8fe811065/README.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/README.md?ref=9dd1dcf5ac3f9f28da2e7bbec22adbc8fe811065", "patch": "@@ -23,9 +23,10 @@ useful IDE experience and some people use it as a daily driver.\n To build rust-analyzer, you need:\n \n * latest stable rust for language server itself\n-* latest stable npm and VS Code for VS Code extension (`code` should be in path)\n+* latest stable npm and VS Code for VS Code extension\n \n-For setup for other editors, see [./docs/user](./docs/user).\n+To quickly install rust-analyzer with VS Code extension with standard setup\n+(`code` and `cargo` in `$PATH`, etc), use this:\n \n ```\n # clone the repo\n@@ -37,6 +38,9 @@ $ cargo install-ra\n # alternatively, install only the server. Binary name is `ra_lsp_server`.\n $ cargo install-ra --server\n ```\n+\n+For non-standard setup of VS Code and other editors, see [./docs/user](./docs/user).\n+\n ## Documentation\n \n If you want to **contribute** to rust-analyzer or just curious about how things work"}, {"sha": "9ba23caaa99278e8dede6dfe629131bd066da85f", "filename": "crates/ra_tools/src/lib.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/9dd1dcf5ac3f9f28da2e7bbec22adbc8fe811065/crates%2Fra_tools%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9dd1dcf5ac3f9f28da2e7bbec22adbc8fe811065/crates%2Fra_tools%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_tools%2Fsrc%2Flib.rs?ref=9dd1dcf5ac3f9f28da2e7bbec22adbc8fe811065", "patch": "@@ -79,13 +79,13 @@ pub fn project_root() -> PathBuf {\n     Path::new(&env!(\"CARGO_MANIFEST_DIR\")).ancestors().nth(2).unwrap().to_path_buf()\n }\n \n-pub struct Cmd {\n-    pub unix: &'static str,\n-    pub windows: &'static str,\n-    pub work_dir: &'static str,\n+pub struct Cmd<'a> {\n+    pub unix: &'a str,\n+    pub windows: &'a str,\n+    pub work_dir: &'a str,\n }\n \n-impl Cmd {\n+impl Cmd<'_> {\n     pub fn run(self) -> Result<()> {\n         if cfg!(windows) {\n             run(self.windows, self.work_dir)"}, {"sha": "65d211b44f3360105bb4436ec0df572bee0b7587", "filename": "crates/ra_tools/src/main.rs", "status": "modified", "additions": 21, "deletions": 14, "changes": 35, "blob_url": "https://github.com/rust-lang/rust/blob/9dd1dcf5ac3f9f28da2e7bbec22adbc8fe811065/crates%2Fra_tools%2Fsrc%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9dd1dcf5ac3f9f28da2e7bbec22adbc8fe811065/crates%2Fra_tools%2Fsrc%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_tools%2Fsrc%2Fmain.rs?ref=9dd1dcf5ac3f9f28da2e7bbec22adbc8fe811065", "patch": "@@ -167,27 +167,34 @@ fn install_client(ClientOpt::VsCode: ClientOpt) -> Result<()> {\n     }\n     .run()?;\n \n-    let code_in_path = Cmd {\n-        unix: r\"code --version\",\n-        windows: r\"cmd.exe /c code.cmd --version\",\n-        work_dir: \"./editors/code\",\n-    }\n-    .run()\n-    .is_ok();\n-    if !code_in_path {\n-        Err(\"Can't execute `code --version`. Perhaps it is not in $PATH?\")?;\n-    }\n+    let code_binary = [\"code\", \"code-insiders\"].iter().find(|bin| {\n+        Cmd {\n+            unix: &format!(\"{} --version\", bin),\n+            windows: &format!(\"cmd.exe /c {}.cmd --version\", bin),\n+            work_dir: \"./editors/code\",\n+        }\n+        .run()\n+        .is_ok()\n+    });\n+\n+    let code_binary = match code_binary {\n+        Some(it) => it,\n+        None => Err(\"Can't execute `code --version`. Perhaps it is not in $PATH?\")?,\n+    };\n \n     Cmd {\n-        unix: r\"code --install-extension ./ra-lsp-0.0.1.vsix --force\",\n-        windows: r\"cmd.exe /c code.cmd --install-extension ./ra-lsp-0.0.1.vsix --force\",\n+        unix: &format!(r\"{} --install-extension ./ra-lsp-0.0.1.vsix --force\", code_binary),\n+        windows: &format!(\n+            r\"cmd.exe /c {}.cmd --install-extension ./ra-lsp-0.0.1.vsix --force\",\n+            code_binary\n+        ),\n         work_dir: \"./editors/code\",\n     }\n     .run()?;\n \n     let output = Cmd {\n-        unix: r\"code --list-extensions\",\n-        windows: r\"cmd.exe /c code.cmd --list-extensions\",\n+        unix: &format!(r\"{} --list-extensions\", code_binary),\n+        windows: &format!(r\"cmd.exe /c {}.cmd --list-extensions\", code_binary),\n         work_dir: \".\",\n     }\n     .run_with_output()?;"}]}