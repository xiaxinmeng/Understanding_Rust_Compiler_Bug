{"sha": "85b2d9bf6f2b04ae8996050b2fb276bd58cd92de", "node_id": "MDY6Q29tbWl0NzI0NzEyOjg1YjJkOWJmNmYyYjA0YWU4OTk2MDUwYjJmYjI3NmJkNThjZDkyZGU=", "commit": {"author": {"name": "Alexis Bourget", "email": "alexis.bourget@gmail.com", "date": "2020-09-08T21:05:51Z"}, "committer": {"name": "Alexis Bourget", "email": "alexis.bourget@gmail.com", "date": "2020-09-21T19:50:26Z"}, "message": "fmt", "tree": {"sha": "a2868e0a400cf6a19c934839b985c12c87338270", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a2868e0a400cf6a19c934839b985c12c87338270"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/85b2d9bf6f2b04ae8996050b2fb276bd58cd92de", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/85b2d9bf6f2b04ae8996050b2fb276bd58cd92de", "html_url": "https://github.com/rust-lang/rust/commit/85b2d9bf6f2b04ae8996050b2fb276bd58cd92de", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/85b2d9bf6f2b04ae8996050b2fb276bd58cd92de/comments", "author": {"login": "poliorcetics", "id": 7951708, "node_id": "MDQ6VXNlcjc5NTE3MDg=", "avatar_url": "https://avatars.githubusercontent.com/u/7951708?v=4", "gravatar_id": "", "url": "https://api.github.com/users/poliorcetics", "html_url": "https://github.com/poliorcetics", "followers_url": "https://api.github.com/users/poliorcetics/followers", "following_url": "https://api.github.com/users/poliorcetics/following{/other_user}", "gists_url": "https://api.github.com/users/poliorcetics/gists{/gist_id}", "starred_url": "https://api.github.com/users/poliorcetics/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/poliorcetics/subscriptions", "organizations_url": "https://api.github.com/users/poliorcetics/orgs", "repos_url": "https://api.github.com/users/poliorcetics/repos", "events_url": "https://api.github.com/users/poliorcetics/events{/privacy}", "received_events_url": "https://api.github.com/users/poliorcetics/received_events", "type": "User", "site_admin": false}, "committer": {"login": "poliorcetics", "id": 7951708, "node_id": "MDQ6VXNlcjc5NTE3MDg=", "avatar_url": "https://avatars.githubusercontent.com/u/7951708?v=4", "gravatar_id": "", "url": "https://api.github.com/users/poliorcetics", "html_url": "https://github.com/poliorcetics", "followers_url": "https://api.github.com/users/poliorcetics/followers", "following_url": "https://api.github.com/users/poliorcetics/following{/other_user}", "gists_url": "https://api.github.com/users/poliorcetics/gists{/gist_id}", "starred_url": "https://api.github.com/users/poliorcetics/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/poliorcetics/subscriptions", "organizations_url": "https://api.github.com/users/poliorcetics/orgs", "repos_url": "https://api.github.com/users/poliorcetics/repos", "events_url": "https://api.github.com/users/poliorcetics/events{/privacy}", "received_events_url": "https://api.github.com/users/poliorcetics/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fc152cd67e0b6d3f11f49eae43183d03a3b8bf17", "url": "https://api.github.com/repos/rust-lang/rust/commits/fc152cd67e0b6d3f11f49eae43183d03a3b8bf17", "html_url": "https://github.com/rust-lang/rust/commit/fc152cd67e0b6d3f11f49eae43183d03a3b8bf17"}], "stats": {"total": 12, "additions": 7, "deletions": 5}, "files": [{"sha": "ab97352a806adc3f4638f70005693c830f85251c", "filename": "library/core/tests/iter.rs", "status": "modified", "additions": 7, "deletions": 5, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/85b2d9bf6f2b04ae8996050b2fb276bd58cd92de/library%2Fcore%2Ftests%2Fiter.rs", "raw_url": "https://github.com/rust-lang/rust/raw/85b2d9bf6f2b04ae8996050b2fb276bd58cd92de/library%2Fcore%2Ftests%2Fiter.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Ftests%2Fiter.rs?ref=85b2d9bf6f2b04ae8996050b2fb276bd58cd92de", "patch": "@@ -379,7 +379,9 @@ fn test_zip_next_back_side_effects_exhausted() {\n #[derive(Debug)]\n struct CountClone(Cell<i32>);\n \n-fn count_clone() -> CountClone { CountClone(Cell::new(0)) }\n+fn count_clone() -> CountClone {\n+    CountClone(Cell::new(0))\n+}\n \n impl PartialEq<i32> for CountClone {\n     fn eq(&self, rhs: &i32) -> bool {\n@@ -401,15 +403,15 @@ fn test_zip_cloned_sideffectful() {\n     let xs = [count_clone(), count_clone(), count_clone(), count_clone()];\n     let ys = [count_clone(), count_clone()];\n \n-    for _ in xs.iter().cloned().zip(ys.iter().cloned()) { }\n+    for _ in xs.iter().cloned().zip(ys.iter().cloned()) {}\n \n     assert_eq!(&xs, &[1, 1, 1, 0][..]);\n     assert_eq!(&ys, &[1, 1][..]);\n \n     let xs = [count_clone(), count_clone()];\n     let ys = [count_clone(), count_clone(), count_clone(), count_clone()];\n \n-    for _ in xs.iter().cloned().zip(ys.iter().cloned()) { }\n+    for _ in xs.iter().cloned().zip(ys.iter().cloned()) {}\n \n     assert_eq!(&xs, &[1, 1][..]);\n     assert_eq!(&ys, &[1, 1, 0, 0][..]);\n@@ -420,15 +422,15 @@ fn test_zip_map_sideffectful() {\n     let mut xs = [0; 6];\n     let mut ys = [0; 4];\n \n-    for _ in xs.iter_mut().map(|x| *x += 1).zip(ys.iter_mut().map(|y| *y += 1)) { }\n+    for _ in xs.iter_mut().map(|x| *x += 1).zip(ys.iter_mut().map(|y| *y += 1)) {}\n \n     assert_eq!(&xs, &[1, 1, 1, 1, 1, 0]);\n     assert_eq!(&ys, &[1, 1, 1, 1]);\n \n     let mut xs = [0; 4];\n     let mut ys = [0; 6];\n \n-    for _ in xs.iter_mut().map(|x| *x += 1).zip(ys.iter_mut().map(|y| *y += 1)) { }\n+    for _ in xs.iter_mut().map(|x| *x += 1).zip(ys.iter_mut().map(|y| *y += 1)) {}\n \n     assert_eq!(&xs, &[1, 1, 1, 1]);\n     assert_eq!(&ys, &[1, 1, 1, 1, 0, 0]);"}]}