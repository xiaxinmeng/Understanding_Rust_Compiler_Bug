{"sha": "b72c43739d37b9a495bdbd64852198ba1f7f0807", "node_id": "MDY6Q29tbWl0NzI0NzEyOmI3MmM0MzczOWQzN2I5YTQ5NWJkYmQ2NDg1MjE5OGJhMWY3ZjA4MDc=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2013-08-23T06:23:51Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2013-08-24T01:38:59Z"}, "message": "rt: Remove old precise GC code", "tree": {"sha": "c62262d47c5b928c4c37f2785b1017462fcf3993", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c62262d47c5b928c4c37f2785b1017462fcf3993"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b72c43739d37b9a495bdbd64852198ba1f7f0807", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b72c43739d37b9a495bdbd64852198ba1f7f0807", "html_url": "https://github.com/rust-lang/rust/commit/b72c43739d37b9a495bdbd64852198ba1f7f0807", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b72c43739d37b9a495bdbd64852198ba1f7f0807/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c17447f8b30a11ce6624c7088f647a6261c70135", "url": "https://api.github.com/repos/rust-lang/rust/commits/c17447f8b30a11ce6624c7088f647a6261c70135", "html_url": "https://github.com/rust-lang/rust/commit/c17447f8b30a11ce6624c7088f647a6261c70135"}], "stats": {"total": 127, "additions": 0, "deletions": 127}, "files": [{"sha": "915848e6abd46b4db3ce5bb9eb39d792cc80b262", "filename": "mk/rt.mk", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/b72c43739d37b9a495bdbd64852198ba1f7f0807/mk%2Frt.mk", "raw_url": "https://github.com/rust-lang/rust/raw/b72c43739d37b9a495bdbd64852198ba1f7f0807/mk%2Frt.mk", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/mk%2Frt.mk?ref=b72c43739d37b9a495bdbd64852198ba1f7f0807", "patch": "@@ -71,7 +71,6 @@ RUNTIME_CXXS_$(1)_$(2) := \\\n               rt/rust_upcall.cpp \\\n               rt/rust_uv.cpp \\\n               rt/rust_crate_map.cpp \\\n-              rt/rust_gc_metadata.cpp \\\n               rt/rust_util.cpp \\\n               rt/rust_log.cpp \\\n               rt/isaac/randport.cpp \\"}, {"sha": "ead0fb63793ce627fcb5ecc17cab1ee5b0647939", "filename": "src/libstd/rt/mod.rs", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/b72c43739d37b9a495bdbd64852198ba1f7f0807/src%2Flibstd%2Frt%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b72c43739d37b9a495bdbd64852198ba1f7f0807/src%2Flibstd%2Frt%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Frt%2Fmod.rs?ref=b72c43739d37b9a495bdbd64852198ba1f7f0807", "patch": "@@ -224,10 +224,7 @@ pub fn init(argc: int, argv: **u8, crate_map: *u8) {\n         args::init(argc, argv);\n         env::init();\n         logging::init(crate_map);\n-        rust_update_gc_metadata(crate_map);\n     }\n-\n-    externfn!(fn rust_update_gc_metadata(crate_map: *u8));\n }\n \n /// One-time runtime cleanup."}, {"sha": "e37856255a7d60a360873d326cb66360cecb20c8", "filename": "src/rt/rust_gc_metadata.cpp", "status": "removed", "additions": 0, "deletions": 95, "changes": 95, "blob_url": "https://github.com/rust-lang/rust/blob/c17447f8b30a11ce6624c7088f647a6261c70135/src%2Frt%2Frust_gc_metadata.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/c17447f8b30a11ce6624c7088f647a6261c70135/src%2Frt%2Frust_gc_metadata.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frust_gc_metadata.cpp?ref=c17447f8b30a11ce6624c7088f647a6261c70135", "patch": "@@ -1,95 +0,0 @@\n-// Copyright 2012 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n-#include \"rust_gc_metadata.h\"\n-#include \"rust_crate_map.h\"\n-#include \"rust_globals.h\"\n-\n-#include <algorithm>\n-#include <vector>\n-\n-struct safe_point {\n-    uintptr_t safe_point_loc;\n-    uintptr_t safe_point_meta;\n-    uintptr_t function_meta;\n-};\n-\n-struct update_gc_entry_args {\n-    std::vector<safe_point> *safe_points;\n-};\n-\n-static void\n-update_gc_entry(const mod_entry *entry, void *cookie) {\n-    update_gc_entry_args *args = (update_gc_entry_args *)cookie;\n-    if (!strcmp(entry->name, \"_gc_module_metadata\")) {\n-        uintptr_t *next = (uintptr_t *)entry->state;\n-        uint32_t num_safe_points = *(uint32_t *)next;\n-        next++;\n-\n-        for (uint32_t i = 0; i < num_safe_points; i++) {\n-            safe_point sp = { next[0], next[1], next[2] };\n-            next += 3;\n-\n-            args->safe_points->push_back(sp);\n-        }\n-    }\n-}\n-\n-static bool\n-cmp_safe_point(safe_point a, safe_point b) {\n-    return a.safe_point_loc < b.safe_point_loc;\n-}\n-\n-uintptr_t *global_safe_points = 0;\n-\n-void\n-update_gc_metadata(const void* map) {\n-    std::vector<safe_point> safe_points;\n-    update_gc_entry_args args = { &safe_points };\n-\n-    // Extract list of safe points from each module.\n-    iter_crate_map((const cratemap *)map, update_gc_entry, (void *)&args);\n-    std::sort(safe_points.begin(), safe_points.end(), cmp_safe_point);\n-\n-    // Serialize safe point list into format expected by runtime.\n-    global_safe_points =\n-        (uintptr_t *)malloc((safe_points.size()*3 + 1)*sizeof(uintptr_t));\n-    if (!global_safe_points) return;\n-\n-    uintptr_t *next = global_safe_points;\n-    *next = safe_points.size();\n-    next++;\n-    for (uint32_t i = 0; i < safe_points.size(); i++) {\n-        next[0] = safe_points[i].safe_point_loc;\n-        next[1] = safe_points[i].safe_point_meta;\n-        next[2] = safe_points[i].function_meta;\n-        next += 3;\n-    }\n-}\n-\n-extern \"C\" CDECL void *\n-rust_gc_metadata() {\n-    return (void *)global_safe_points;\n-}\n-\n-extern \"C\" CDECL void\n-rust_update_gc_metadata(const void* map) {\n-    update_gc_metadata(map);\n-}\n-\n-//\n-// Local Variables:\n-// mode: C++\n-// fill-column: 78;\n-// indent-tabs-mode: nil\n-// c-basic-offset: 4\n-// buffer-file-coding-system: utf-8-unix\n-// End:\n-//"}, {"sha": "d8d98e75b937349316af0196bccfa143758e77f6", "filename": "src/rt/rust_gc_metadata.h", "status": "removed", "additions": 0, "deletions": 26, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/c17447f8b30a11ce6624c7088f647a6261c70135/src%2Frt%2Frust_gc_metadata.h", "raw_url": "https://github.com/rust-lang/rust/raw/c17447f8b30a11ce6624c7088f647a6261c70135/src%2Frt%2Frust_gc_metadata.h", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frust_gc_metadata.h?ref=c17447f8b30a11ce6624c7088f647a6261c70135", "patch": "@@ -1,26 +0,0 @@\n-// Copyright 2012 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n-#ifndef RUST_GC_METADATA_H\n-#define RUST_GC_METADATA_H\n-\n-void update_gc_metadata(const void* map);\n-\n-//\n-// Local Variables:\n-// mode: C++\n-// fill-column: 78;\n-// indent-tabs-mode: nil\n-// c-basic-offset: 4\n-// buffer-file-coding-system: utf-8-unix\n-// End:\n-//\n-\n-#endif /* RUST_GC_METADATA_H */"}, {"sha": "6e95d96012bbfab310ab7ea3e1b4e569475bd142", "filename": "src/rt/rustrt.def.in", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b72c43739d37b9a495bdbd64852198ba1f7f0807/src%2Frt%2Frustrt.def.in", "raw_url": "https://github.com/rust-lang/rust/raw/b72c43739d37b9a495bdbd64852198ba1f7f0807/src%2Frt%2Frustrt.def.in", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frustrt.def.in?ref=b72c43739d37b9a495bdbd64852198ba1f7f0807", "patch": "@@ -130,8 +130,6 @@ rust_lock_little_lock\n rust_unlock_little_lock\n tdefl_compress_mem_to_heap\n tinfl_decompress_mem_to_heap\n-rust_gc_metadata\n-rust_update_gc_metadata\n rust_uv_ip4_port\n rust_uv_ip6_port\n rust_uv_tcp_getpeername"}]}