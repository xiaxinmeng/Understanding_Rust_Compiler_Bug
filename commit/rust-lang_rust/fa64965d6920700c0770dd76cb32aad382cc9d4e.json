{"sha": "fa64965d6920700c0770dd76cb32aad382cc9d4e", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZhNjQ5NjVkNjkyMDcwMGMwNzcwZGQ3NmNiMzJhYWQzODJjYzlkNGU=", "commit": {"author": {"name": "James Sanders", "email": "sanderjd@gmail.com", "date": "2014-04-18T23:40:34Z"}, "committer": {"name": "James Sanders", "email": "sanderjd@gmail.com", "date": "2014-04-18T23:40:34Z"}, "message": "Fix a couple places in docs where try_send wasn't changed to send_opt", "tree": {"sha": "359cafa1d1025a4b7dc8ddb9a4266ffde469a79e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/359cafa1d1025a4b7dc8ddb9a4266ffde469a79e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/fa64965d6920700c0770dd76cb32aad382cc9d4e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/fa64965d6920700c0770dd76cb32aad382cc9d4e", "html_url": "https://github.com/rust-lang/rust/commit/fa64965d6920700c0770dd76cb32aad382cc9d4e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/fa64965d6920700c0770dd76cb32aad382cc9d4e/comments", "author": {"login": "jsanders", "id": 38320, "node_id": "MDQ6VXNlcjM4MzIw", "avatar_url": "https://avatars.githubusercontent.com/u/38320?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsanders", "html_url": "https://github.com/jsanders", "followers_url": "https://api.github.com/users/jsanders/followers", "following_url": "https://api.github.com/users/jsanders/following{/other_user}", "gists_url": "https://api.github.com/users/jsanders/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsanders/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsanders/subscriptions", "organizations_url": "https://api.github.com/users/jsanders/orgs", "repos_url": "https://api.github.com/users/jsanders/repos", "events_url": "https://api.github.com/users/jsanders/events{/privacy}", "received_events_url": "https://api.github.com/users/jsanders/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jsanders", "id": 38320, "node_id": "MDQ6VXNlcjM4MzIw", "avatar_url": "https://avatars.githubusercontent.com/u/38320?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsanders", "html_url": "https://github.com/jsanders", "followers_url": "https://api.github.com/users/jsanders/followers", "following_url": "https://api.github.com/users/jsanders/following{/other_user}", "gists_url": "https://api.github.com/users/jsanders/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsanders/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsanders/subscriptions", "organizations_url": "https://api.github.com/users/jsanders/orgs", "repos_url": "https://api.github.com/users/jsanders/repos", "events_url": "https://api.github.com/users/jsanders/events{/privacy}", "received_events_url": "https://api.github.com/users/jsanders/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b75683cadf6c4c55360202cd6a0106be80532451", "url": "https://api.github.com/repos/rust-lang/rust/commits/b75683cadf6c4c55360202cd6a0106be80532451", "html_url": "https://github.com/rust-lang/rust/commit/b75683cadf6c4c55360202cd6a0106be80532451"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "901a9051d0aca83b717b3b9929026b64db13291c", "filename": "src/libstd/comm/mod.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/fa64965d6920700c0770dd76cb32aad382cc9d4e/src%2Flibstd%2Fcomm%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fa64965d6920700c0770dd76cb32aad382cc9d4e/src%2Flibstd%2Fcomm%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fcomm%2Fmod.rs?ref=fa64965d6920700c0770dd76cb32aad382cc9d4e", "patch": "@@ -479,7 +479,7 @@ impl<T: Send> Sender<T> {\n     /// then the other end could immediately disconnect.\n     ///\n     /// The purpose of this functionality is to propagate failure among tasks.\n-    /// If failure is not desired, then consider using the `try_send` method\n+    /// If failure is not desired, then consider using the `send_opt` method\n     pub fn send(&self, t: T) {\n         if self.send_opt(t).is_err() {\n             fail!(\"sending on a closed channel\");\n@@ -669,7 +669,7 @@ impl<T: Send> SyncSender<T> {\n \n     /// Attempts to send a value on this channel without blocking.\n     ///\n-    /// This method semantically differs from `Sender::try_send` because it can\n+    /// This method semantically differs from `Sender::send_opt` because it can\n     /// fail if the receiver has not disconnected yet. If the buffer on this\n     /// channel is full, this function will immediately return the data back to\n     /// the callee."}]}