{"sha": "3f7aeb30ae966bf7a73735169b4243727f5c456b", "node_id": "C_kwDOAAsO6NoAKDNmN2FlYjMwYWU5NjZiZjdhNzM3MzUxNjliNDI0MzcyN2Y1YzQ1NmI", "commit": {"author": {"name": "Boxy", "email": "supbscripter@gmail.com", "date": "2023-03-23T00:07:55Z"}, "committer": {"name": "Boxy", "email": "supbscripter@gmail.com", "date": "2023-03-23T00:07:55Z"}, "message": "make param bound vars visibly bound vars", "tree": {"sha": "513abf9d4507fc6bc0d415c9734f17cf3efcd87a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/513abf9d4507fc6bc0d415c9734f17cf3efcd87a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3f7aeb30ae966bf7a73735169b4243727f5c456b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3f7aeb30ae966bf7a73735169b4243727f5c456b", "html_url": "https://github.com/rust-lang/rust/commit/3f7aeb30ae966bf7a73735169b4243727f5c456b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3f7aeb30ae966bf7a73735169b4243727f5c456b/comments", "author": {"login": "BoxyUwU", "id": 21149742, "node_id": "MDQ6VXNlcjIxMTQ5NzQy", "avatar_url": "https://avatars.githubusercontent.com/u/21149742?v=4", "gravatar_id": "", "url": "https://api.github.com/users/BoxyUwU", "html_url": "https://github.com/BoxyUwU", "followers_url": "https://api.github.com/users/BoxyUwU/followers", "following_url": "https://api.github.com/users/BoxyUwU/following{/other_user}", "gists_url": "https://api.github.com/users/BoxyUwU/gists{/gist_id}", "starred_url": "https://api.github.com/users/BoxyUwU/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/BoxyUwU/subscriptions", "organizations_url": "https://api.github.com/users/BoxyUwU/orgs", "repos_url": "https://api.github.com/users/BoxyUwU/repos", "events_url": "https://api.github.com/users/BoxyUwU/events{/privacy}", "received_events_url": "https://api.github.com/users/BoxyUwU/received_events", "type": "User", "site_admin": false}, "committer": {"login": "BoxyUwU", "id": 21149742, "node_id": "MDQ6VXNlcjIxMTQ5NzQy", "avatar_url": "https://avatars.githubusercontent.com/u/21149742?v=4", "gravatar_id": "", "url": "https://api.github.com/users/BoxyUwU", "html_url": "https://github.com/BoxyUwU", "followers_url": "https://api.github.com/users/BoxyUwU/followers", "following_url": "https://api.github.com/users/BoxyUwU/following{/other_user}", "gists_url": "https://api.github.com/users/BoxyUwU/gists{/gist_id}", "starred_url": "https://api.github.com/users/BoxyUwU/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/BoxyUwU/subscriptions", "organizations_url": "https://api.github.com/users/BoxyUwU/orgs", "repos_url": "https://api.github.com/users/BoxyUwU/repos", "events_url": "https://api.github.com/users/BoxyUwU/events{/privacy}", "received_events_url": "https://api.github.com/users/BoxyUwU/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "77d50a8870a912af1def75760b9638db892717c5", "url": "https://api.github.com/repos/rust-lang/rust/commits/77d50a8870a912af1def75760b9638db892717c5", "html_url": "https://github.com/rust-lang/rust/commit/77d50a8870a912af1def75760b9638db892717c5"}], "stats": {"total": 6, "additions": 5, "deletions": 1}, "files": [{"sha": "659c50a392ecd631effe159807960f8c34fd7ec6", "filename": "compiler/rustc_middle/src/ty/print/pretty.rs", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/3f7aeb30ae966bf7a73735169b4243727f5c456b/compiler%2Frustc_middle%2Fsrc%2Fty%2Fprint%2Fpretty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3f7aeb30ae966bf7a73735169b4243727f5c456b/compiler%2Frustc_middle%2Fsrc%2Fty%2Fprint%2Fpretty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fty%2Fprint%2Fpretty.rs?ref=3f7aeb30ae966bf7a73735169b4243727f5c456b", "patch": "@@ -704,7 +704,11 @@ pub trait PrettyPrinter<'tcx>:\n                 ty::BoundTyKind::Anon(bv) => {\n                     self.pretty_print_bound_var(debruijn, ty::BoundVar::from_u32(bv))?\n                 }\n-                ty::BoundTyKind::Param(_, s) => p!(write(\"{}\", s)),\n+                ty::BoundTyKind::Param(_, s) => match self.should_print_verbose() {\n+                    true if debruijn == ty::INNERMOST => p!(write(\"^{}\", s)),\n+                    true => p!(write(\"^{}_{}\", debruijn.index(), s)),\n+                    false => p!(write(\"{}\", s)),\n+                },\n             },\n             ty::Adt(def, substs) => {\n                 p!(print_def_path(def.did(), substs));"}]}