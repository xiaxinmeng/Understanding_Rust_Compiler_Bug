{"sha": "dc10ccfe89d6c8b4ca7993afd66c5dd83f6712ee", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRjMTBjY2ZlODlkNmM4YjRjYTc5OTNhZmQ2NmM1ZGQ4M2Y2NzEyZWU=", "commit": {"author": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2020-12-01T13:19:53Z"}, "committer": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2020-12-02T09:42:50Z"}, "message": "Add checks for #[doc(keyword = \"...\")] and move them into rustc_passes", "tree": {"sha": "e028f38265c0b6982b9f4c3798e4bb07764ce68c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e028f38265c0b6982b9f4c3798e4bb07764ce68c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/dc10ccfe89d6c8b4ca7993afd66c5dd83f6712ee", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/dc10ccfe89d6c8b4ca7993afd66c5dd83f6712ee", "html_url": "https://github.com/rust-lang/rust/commit/dc10ccfe89d6c8b4ca7993afd66c5dd83f6712ee", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/dc10ccfe89d6c8b4ca7993afd66c5dd83f6712ee/comments", "author": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "committer": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5a228263b861dd5ed4f0b8d799337745b1d1a39b", "url": "https://api.github.com/repos/rust-lang/rust/commits/5a228263b861dd5ed4f0b8d799337745b1d1a39b", "html_url": "https://github.com/rust-lang/rust/commit/5a228263b861dd5ed4f0b8d799337745b1d1a39b"}], "stats": {"total": 63, "additions": 53, "deletions": 10}, "files": [{"sha": "fc97ca035b9b4028e8475f89a3ba71c266d20c4c", "filename": "compiler/rustc_passes/src/check_attr.rs", "status": "modified", "additions": 53, "deletions": 7, "changes": 60, "blob_url": "https://github.com/rust-lang/rust/blob/dc10ccfe89d6c8b4ca7993afd66c5dd83f6712ee/compiler%2Frustc_passes%2Fsrc%2Fcheck_attr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dc10ccfe89d6c8b4ca7993afd66c5dd83f6712ee/compiler%2Frustc_passes%2Fsrc%2Fcheck_attr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_passes%2Fsrc%2Fcheck_attr.rs?ref=dc10ccfe89d6c8b4ca7993afd66c5dd83f6712ee", "patch": "@@ -287,24 +287,20 @@ impl CheckAttrVisitor<'tcx> {\n         }\n     }\n \n-    fn doc_alias_str_error(&self, meta: &NestedMetaItem) {\n+    fn doc_attr_str_error(&self, meta: &NestedMetaItem, attr_name: &str) {\n         self.tcx\n             .sess\n             .struct_span_err(\n                 meta.span(),\n-                \"doc alias attribute expects a string: #[doc(alias = \\\"0\\\")]\",\n+                &format!(\"doc {0} attribute expects a string: #[doc({0} = \\\"a\\\")]\", attr_name),\n             )\n             .emit();\n     }\n \n     fn check_doc_alias(&self, meta: &NestedMetaItem, hir_id: HirId, target: Target) -> bool {\n-        if !meta.is_value_str() {\n-            self.doc_alias_str_error(meta);\n-            return false;\n-        }\n         let doc_alias = meta.value_str().map(|s| s.to_string()).unwrap_or_else(String::new);\n         if doc_alias.is_empty() {\n-            self.doc_alias_str_error(meta);\n+            self.doc_attr_str_error(meta, \"alias\");\n             return false;\n         }\n         if let Some(c) =\n@@ -365,6 +361,49 @@ impl CheckAttrVisitor<'tcx> {\n         true\n     }\n \n+    fn check_doc_keyword(&self, meta: &NestedMetaItem, hir_id: HirId) -> bool {\n+        let doc_keyword = meta.value_str().map(|s| s.to_string()).unwrap_or_else(String::new);\n+        if doc_keyword.is_empty() {\n+            self.doc_attr_str_error(meta, \"keyword\");\n+            return false;\n+        }\n+        match self.tcx.hir().expect_item(hir_id).kind {\n+            ItemKind::Mod(ref module) => {\n+                if !module.item_ids.is_empty() {\n+                    self.tcx\n+                        .sess\n+                        .struct_span_err(\n+                            meta.span(),\n+                            \"`#[doc(keyword = \\\"...\\\")]` can only be used on empty modules\",\n+                        )\n+                        .emit();\n+                    return false;\n+                }\n+            }\n+            _ => {\n+                self.tcx\n+                    .sess\n+                    .struct_span_err(\n+                        meta.span(),\n+                        \"`#[doc(keyword = \\\"...\\\")]` can only be used on modules\",\n+                    )\n+                    .emit();\n+                return false;\n+            }\n+        }\n+        if !rustc_lexer::is_ident(&doc_keyword) {\n+            self.tcx\n+                .sess\n+                .struct_span_err(\n+                    meta.name_value_literal_span().unwrap_or_else(|| meta.span()),\n+                    &format!(\"`{}` is not a valid identifier\", doc_keyword),\n+                )\n+                .emit();\n+            return false;\n+        }\n+        true\n+    }\n+\n     fn check_attr_crate_level(\n         &self,\n         meta: &NestedMetaItem,\n@@ -384,6 +423,7 @@ impl CheckAttrVisitor<'tcx> {\n                 .emit();\n             return false;\n         }\n+        true\n     }\n \n     fn check_doc_attrs(&self, attr: &Attribute, hir_id: HirId, target: Target) -> bool {\n@@ -396,6 +436,12 @@ impl CheckAttrVisitor<'tcx> {\n                         {\n                             return false;\n                         }\n+                    } else if meta.has_name(sym::keyword) {\n+                        if !self.check_attr_crate_level(meta, hir_id, \"keyword\")\n+                            || !self.check_doc_keyword(meta, hir_id)\n+                        {\n+                            return false;\n+                        }\n                     }\n                 }\n             }"}, {"sha": "cd2700be5a741d8144e7237b7df328e1bf06aeae", "filename": "src/librustdoc/clean/mod.rs", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/dc10ccfe89d6c8b4ca7993afd66c5dd83f6712ee/src%2Flibrustdoc%2Fclean%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dc10ccfe89d6c8b4ca7993afd66c5dd83f6712ee/src%2Flibrustdoc%2Fclean%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fclean%2Fmod.rs?ref=dc10ccfe89d6c8b4ca7993afd66c5dd83f6712ee", "patch": "@@ -162,9 +162,6 @@ impl Clean<ExternalCrate> for CrateNum {\n                 .collect()\n         };\n \n-        let get_span =\n-            |attr: &ast::NestedMetaItem| Some(attr.meta_item()?.name_value_literal()?.span);\n-\n         let as_keyword = |res: Res| {\n             if let Res::Def(DefKind::Mod, def_id) = res {\n                 let attrs = cx.tcx.get_attrs(def_id).clean(cx);"}]}