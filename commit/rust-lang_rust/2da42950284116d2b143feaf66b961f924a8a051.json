{"sha": "2da42950284116d2b143feaf66b961f924a8a051", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJkYTQyOTUwMjg0MTE2ZDJiMTQzZmVhZjY2Yjk2MWY5MjRhOGEwNTE=", "commit": {"author": {"name": "Yuki Okushi", "email": "jtitor@2k36.org", "date": "2021-06-04T21:13:45Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-06-04T21:13:45Z"}, "message": "Rollup merge of #85979 - tlyu:where-no-unsized-indirection, r=estebank\n\ndon't suggest unsized indirection in where-clauses\n\nSkip where-clauses when suggesting using indirection in combination with\n`?Sized` bounds on type parameters.\n\nFixes #85943.\n\n`@estebank` I think this doesn't conflict with your work in #85947; please let me know if you'd like me to cherry pick it to a new branch based on yours instead.", "tree": {"sha": "701eb2e6ed44c038c31eb383fa82138e95c21753", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/701eb2e6ed44c038c31eb383fa82138e95c21753"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2da42950284116d2b143feaf66b961f924a8a051", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJgupeJCRBK7hj4Ov3rIwAAPSMIAHvQqCHwd4H6WoW3lmbity1O\nLXcHzpeBdiXLxbgtpJfZmxjQD+vugQYmBZgWtTiW5X6X2rtz2iTJIxCdklNxR6Kd\nYlfqfgJW9SbBX00/87XXqMdaeFt0ohJ+IvaYfesbBPmbPnx6AFhz37E27yDSIAG6\nSZggDrl0hOCpFqau1Slp7XHL1a9IZ4aiNLRY+d2vlftsFcoP9jIuPGBRgOywxqKi\n6dKaVET7nLc7d4O0wNWboa2Abd7snkkQro8sisv6oAPZh/gWWhaM4jtxxgM/jl87\nvL1v58INK2AR0/6HUxOWGAsSMZa5xwGegvV2EL6ZBFHqS+t9mgcUzeFfaedhRNc=\n=i2GC\n-----END PGP SIGNATURE-----\n", "payload": "tree 701eb2e6ed44c038c31eb383fa82138e95c21753\nparent 5d30ab85b29c217760506770cdce7ee2617d8314\nparent e848be06e1b5c71e6973a61d2323d37b44176502\nauthor Yuki Okushi <jtitor@2k36.org> 1622841225 +0900\ncommitter GitHub <noreply@github.com> 1622841225 +0900\n\nRollup merge of #85979 - tlyu:where-no-unsized-indirection, r=estebank\n\ndon't suggest unsized indirection in where-clauses\n\nSkip where-clauses when suggesting using indirection in combination with\n`?Sized` bounds on type parameters.\n\nFixes #85943.\n\n`@estebank` I think this doesn't conflict with your work in #85947; please let me know if you'd like me to cherry pick it to a new branch based on yours instead.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2da42950284116d2b143feaf66b961f924a8a051", "html_url": "https://github.com/rust-lang/rust/commit/2da42950284116d2b143feaf66b961f924a8a051", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2da42950284116d2b143feaf66b961f924a8a051/comments", "author": {"login": "JohnTitor", "id": 25030997, "node_id": "MDQ6VXNlcjI1MDMwOTk3", "avatar_url": "https://avatars.githubusercontent.com/u/25030997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JohnTitor", "html_url": "https://github.com/JohnTitor", "followers_url": "https://api.github.com/users/JohnTitor/followers", "following_url": "https://api.github.com/users/JohnTitor/following{/other_user}", "gists_url": "https://api.github.com/users/JohnTitor/gists{/gist_id}", "starred_url": "https://api.github.com/users/JohnTitor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JohnTitor/subscriptions", "organizations_url": "https://api.github.com/users/JohnTitor/orgs", "repos_url": "https://api.github.com/users/JohnTitor/repos", "events_url": "https://api.github.com/users/JohnTitor/events{/privacy}", "received_events_url": "https://api.github.com/users/JohnTitor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5d30ab85b29c217760506770cdce7ee2617d8314", "url": "https://api.github.com/repos/rust-lang/rust/commits/5d30ab85b29c217760506770cdce7ee2617d8314", "html_url": "https://github.com/rust-lang/rust/commit/5d30ab85b29c217760506770cdce7ee2617d8314"}, {"sha": "e848be06e1b5c71e6973a61d2323d37b44176502", "url": "https://api.github.com/repos/rust-lang/rust/commits/e848be06e1b5c71e6973a61d2323d37b44176502", "html_url": "https://github.com/rust-lang/rust/commit/e848be06e1b5c71e6973a61d2323d37b44176502"}], "stats": {"total": 33, "additions": 33, "deletions": 0}, "files": [{"sha": "19c3385dd4cbcbc119df5a9144fc0cf8a7eea2b0", "filename": "compiler/rustc_trait_selection/src/traits/error_reporting/mod.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/2da42950284116d2b143feaf66b961f924a8a051/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Ferror_reporting%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2da42950284116d2b143feaf66b961f924a8a051/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Ferror_reporting%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Ferror_reporting%2Fmod.rs?ref=2da42950284116d2b143feaf66b961f924a8a051", "patch": "@@ -1878,6 +1878,10 @@ impl<'v> Visitor<'v> for FindTypeParam {\n         hir::intravisit::NestedVisitorMap::None\n     }\n \n+    fn visit_where_predicate(&mut self, _: &'v hir::WherePredicate<'v>) {\n+        // Skip where-clauses, to avoid suggesting indirection for type parameters found there.\n+    }\n+\n     fn visit_ty(&mut self, ty: &hir::Ty<'_>) {\n         // We collect the spans of all uses of the \"bare\" type param, like in `field: T` or\n         // `field: (T, T)` where we could make `T: ?Sized` while skipping cases that are known to be"}, {"sha": "390d8bbdd5326e5124632da5ee4ce19dd40a9aaf", "filename": "src/test/ui/suggestions/issue-85943-no-suggest-unsized-indirection-in-where-clause.rs", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/2da42950284116d2b143feaf66b961f924a8a051/src%2Ftest%2Fui%2Fsuggestions%2Fissue-85943-no-suggest-unsized-indirection-in-where-clause.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2da42950284116d2b143feaf66b961f924a8a051/src%2Ftest%2Fui%2Fsuggestions%2Fissue-85943-no-suggest-unsized-indirection-in-where-clause.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Fissue-85943-no-suggest-unsized-indirection-in-where-clause.rs?ref=2da42950284116d2b143feaf66b961f924a8a051", "patch": "@@ -0,0 +1,9 @@\n+// Regression test for #85943: should not emit suggestions for adding\n+// indirection to type parameters in where-clauses when suggesting\n+// adding `?Sized`.\n+struct A<T>(T) where T: Send;\n+struct B(A<[u8]>);\n+//~^ ERROR the size for values of type\n+\n+pub fn main() {\n+}"}, {"sha": "735aeb0e0e79995b8b106077ac09ea5db6e4d59c", "filename": "src/test/ui/suggestions/issue-85943-no-suggest-unsized-indirection-in-where-clause.stderr", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/2da42950284116d2b143feaf66b961f924a8a051/src%2Ftest%2Fui%2Fsuggestions%2Fissue-85943-no-suggest-unsized-indirection-in-where-clause.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/2da42950284116d2b143feaf66b961f924a8a051/src%2Ftest%2Fui%2Fsuggestions%2Fissue-85943-no-suggest-unsized-indirection-in-where-clause.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Fissue-85943-no-suggest-unsized-indirection-in-where-clause.stderr?ref=2da42950284116d2b143feaf66b961f924a8a051", "patch": "@@ -0,0 +1,20 @@\n+error[E0277]: the size for values of type `[u8]` cannot be known at compilation time\n+  --> $DIR/issue-85943-no-suggest-unsized-indirection-in-where-clause.rs:5:10\n+   |\n+LL | struct A<T>(T) where T: Send;\n+   |          - required by this bound in `A`\n+LL | struct B(A<[u8]>);\n+   |          ^^^^^^^ doesn't have a size known at compile-time\n+   |\n+   = help: the trait `Sized` is not implemented for `[u8]`\n+help: you could relax the implicit `Sized` bound on `T` if it were used through indirection like `&T` or `Box<T>`\n+  --> $DIR/issue-85943-no-suggest-unsized-indirection-in-where-clause.rs:4:10\n+   |\n+LL | struct A<T>(T) where T: Send;\n+   |          ^  - ...if indirection were used here: `Box<T>`\n+   |          |\n+   |          this could be changed to `T: ?Sized`...\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0277`."}]}