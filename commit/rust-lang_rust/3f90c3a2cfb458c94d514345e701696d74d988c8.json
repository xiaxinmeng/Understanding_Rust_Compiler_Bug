{"sha": "3f90c3a2cfb458c94d514345e701696d74d988c8", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNmOTBjM2EyY2ZiNDU4Yzk0ZDUxNDM0NWU3MDE2OTZkNzRkOTg4Yzg=", "commit": {"author": {"name": "Sunjay Varma", "email": "sunjay@users.noreply.github.com", "date": "2017-10-10T20:31:43Z"}, "committer": {"name": "Sunjay Varma", "email": "varma.sunjay@gmail.com", "date": "2017-10-18T03:05:45Z"}, "message": "Added a section about updating submodules\n\nThe process for updating rustfmt is quite involved because of the way everything is configured. This section covers the steps for updating rustfmt and rationale behind them.", "tree": {"sha": "afdf8d757db2b2e04ede00ecae629f80e4217d55", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/afdf8d757db2b2e04ede00ecae629f80e4217d55"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3f90c3a2cfb458c94d514345e701696d74d988c8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3f90c3a2cfb458c94d514345e701696d74d988c8", "html_url": "https://github.com/rust-lang/rust/commit/3f90c3a2cfb458c94d514345e701696d74d988c8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3f90c3a2cfb458c94d514345e701696d74d988c8/comments", "author": {"login": "sunjay", "id": 530939, "node_id": "MDQ6VXNlcjUzMDkzOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/530939?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sunjay", "html_url": "https://github.com/sunjay", "followers_url": "https://api.github.com/users/sunjay/followers", "following_url": "https://api.github.com/users/sunjay/following{/other_user}", "gists_url": "https://api.github.com/users/sunjay/gists{/gist_id}", "starred_url": "https://api.github.com/users/sunjay/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sunjay/subscriptions", "organizations_url": "https://api.github.com/users/sunjay/orgs", "repos_url": "https://api.github.com/users/sunjay/repos", "events_url": "https://api.github.com/users/sunjay/events{/privacy}", "received_events_url": "https://api.github.com/users/sunjay/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sunjay", "id": 530939, "node_id": "MDQ6VXNlcjUzMDkzOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/530939?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sunjay", "html_url": "https://github.com/sunjay", "followers_url": "https://api.github.com/users/sunjay/followers", "following_url": "https://api.github.com/users/sunjay/following{/other_user}", "gists_url": "https://api.github.com/users/sunjay/gists{/gist_id}", "starred_url": "https://api.github.com/users/sunjay/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sunjay/subscriptions", "organizations_url": "https://api.github.com/users/sunjay/orgs", "repos_url": "https://api.github.com/users/sunjay/repos", "events_url": "https://api.github.com/users/sunjay/events{/privacy}", "received_events_url": "https://api.github.com/users/sunjay/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bd4907d534a1894e28a1f3cf672022e29eabf194", "url": "https://api.github.com/repos/rust-lang/rust/commits/bd4907d534a1894e28a1f3cf672022e29eabf194", "html_url": "https://github.com/rust-lang/rust/commit/bd4907d534a1894e28a1f3cf672022e29eabf194"}], "stats": {"total": 64, "additions": 63, "deletions": 1}, "files": [{"sha": "34789f144f4b07e3905fa5820da363729f9a7548", "filename": "CONTRIBUTING.md", "status": "modified", "additions": 63, "deletions": 1, "changes": 64, "blob_url": "https://github.com/rust-lang/rust/blob/3f90c3a2cfb458c94d514345e701696d74d988c8/CONTRIBUTING.md", "raw_url": "https://github.com/rust-lang/rust/raw/3f90c3a2cfb458c94d514345e701696d74d988c8/CONTRIBUTING.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/CONTRIBUTING.md?ref=3f90c3a2cfb458c94d514345e701696d74d988c8", "patch": "@@ -364,6 +364,7 @@ It can also be more convenient during development to set `submodules = false`\n in the `config.toml` to prevent `x.py` from resetting to the original branch.\n \n #### Breaking rustfmt or rls\n+[breaking-rustfmt-or-rls]: #breaking-rustfmt-or-rls\n \n Rust's build system also builds the\n [RLS](https://github.com/rust-lang-nursery/rls)\n@@ -382,7 +383,9 @@ When this happens, follow these steps:\n 1. First, if it doesn't exist already, create a `config.toml` by copying\n    `config.toml.example` in the root directory of the Rust repository.\n    Set `submodules = false` in the `[build]` section. This will prevent `x.py`\n-   from resetting to the original branch after you make your changes.\n+   from resetting to the original branch after you make your changes. If you\n+   need to [update any submodules to their latest versions][updating-submodules],\n+   see the section of this file about that for more information.\n 2. Run `./x.py test src/tools/rustfmt`. Fix any errors in the submodule itself\n    (the `src/tools/rustfmt` directory) until it works.\n 3. Run `./x.py test src/tools/rls`. Fix any errors in the submodule itself\n@@ -401,6 +404,65 @@ When this happens, follow these steps:\n 12. Eventually the rls/rustfmt submodules will get re-updated back to the\n     master branch\n \n+#### Updating submodules\n+[updating-submodules]: #updating-submodules\n+\n+These instructions are specific to updating `rustfmt`, however they may apply\n+to the other submodules as well. Please help by improving these instructions\n+if you find any discrepencies or special cases that need to be addressed.\n+\n+To update the `rustfmt` submodule, start by running the appropriate\n+[`git submodule` command](https://git-scm.com/book/en/v2/Git-Tools-Submodules).\n+For example, to update to the latest commit on the remote master branch,\n+you may want to run:\n+```\n+git submodule update --remote src/tools/rustfmt\n+```\n+If you run `./x.py build` now, and you are lucky, it may just work. If you see\n+an error message about patches that did not resolve to any crates, you will need\n+to complete a few more steps which are outlined with their rationale below.\n+\n+*(This error may change in the future to include more information.)*\n+```\n+error: failed to resolve patches for `https://github.com/rust-lang-nursery/rustfmt`\n+\n+Caused by:\n+  patch for `rustfmt-nightly` in `https://github.com/rust-lang-nursery/rustfmt` did not resolve to any crates\n+failed to run: ~/rust/build/x86_64-unknown-linux-gnu/stage0/bin/cargo build --manifest-path ~/rust/src/bootstrap/Cargo.toml\n+```\n+\n+If you haven't used the `[patch]`\n+section of `Cargo.toml` before, there is [some relevant documentation about it\n+in the cargo docs](http://doc.crates.io/manifest.html#the-patch-section). In\n+addition to that, you should read the \n+[Overriding dependencies](http://doc.crates.io/specifying-dependencies.html#overriding-dependencies)\n+section of the documentation as well.\n+\n+Specifically, the following [section in Overriding dependencies](http://doc.crates.io/specifying-dependencies.html#testing-a-bugfix) reveals what the problem is:\n+\n+> Next up we need to ensure that our lock file is updated to use this new version of uuid so our project uses the locally checked out copy instead of one from crates.io. The way [patch] works is that it'll load the dependency at ../path/to/uuid and then whenever crates.io is queried for versions of uuid it'll also return the local version.\n+> \n+> This means that the version number of the local checkout is significant and will affect whether the patch is used. Our manifest declared uuid = \"1.0\" which means we'll only resolve to >= 1.0.0, < 2.0.0, and Cargo's greedy resolution algorithm also means that we'll resolve to the maximum version within that range. Typically this doesn't matter as the version of the git repository will already be greater or match the maximum version published on crates.io, but it's important to keep this in mind!\n+\n+This says that when we updated the submodule, the version number in our\n+`src/tools/rustfmt/Cargo.toml` changed. The new version is different from\n+the version in `Cargo.lock`, so the build can no longer continue.\n+\n+To resolve this, we need to update `Cargo.lock`. Luckily, cargo provides a\n+command to do this easily.\n+\n+First, go into the `src/` directory since that is where `Cargo.toml` is in\n+the rust repository. Then run, `cargo update -p rustfmt-nightly` to solve\n+the problem.\n+\n+```\n+$ cd src\n+$ cargo update -p rustfmt-nightly\n+```\n+\n+This should change the version listed in `src/Cargo.lock` to the new version you updated\n+the submodule to. Running `./x.py build` should work now.\n+\n ## Writing Documentation\n [writing-documentation]: #writing-documentation\n "}]}