{"sha": "582c71731d57531605a2c0b470ba9d803ff19d89", "node_id": "MDY6Q29tbWl0NzI0NzEyOjU4MmM3MTczMWQ1NzUzMTYwNWEyYzBiNDcwYmE5ZDgwM2ZmMTlkODk=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-04-26T00:06:01Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-04-27T18:24:43Z"}, "message": "rustc: Clean up some enum code", "tree": {"sha": "c5727bf1408ea46f7e2a1769aeff40f50b4be081", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c5727bf1408ea46f7e2a1769aeff40f50b4be081"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/582c71731d57531605a2c0b470ba9d803ff19d89", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/582c71731d57531605a2c0b470ba9d803ff19d89", "html_url": "https://github.com/rust-lang/rust/commit/582c71731d57531605a2c0b470ba9d803ff19d89", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/582c71731d57531605a2c0b470ba9d803ff19d89/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "dfc81dfa90d16243f1f3ed556868d53107ee3227", "url": "https://api.github.com/repos/rust-lang/rust/commits/dfc81dfa90d16243f1f3ed556868d53107ee3227", "html_url": "https://github.com/rust-lang/rust/commit/dfc81dfa90d16243f1f3ed556868d53107ee3227"}], "stats": {"total": 21, "additions": 5, "deletions": 16}, "files": [{"sha": "ac30135f6f233b757691733899e790e1c2b4780f", "filename": "src/rustc/middle/trans/common.rs", "status": "modified", "additions": 2, "deletions": 13, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/582c71731d57531605a2c0b470ba9d803ff19d89/src%2Frustc%2Fmiddle%2Ftrans%2Fcommon.rs", "raw_url": "https://github.com/rust-lang/rust/raw/582c71731d57531605a2c0b470ba9d803ff19d89/src%2Frustc%2Fmiddle%2Ftrans%2Fcommon.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustc%2Fmiddle%2Ftrans%2Fcommon.rs?ref=582c71731d57531605a2c0b470ba9d803ff19d89", "patch": "@@ -680,25 +680,14 @@ fn T_opaque_cbox_ptr(cx: @crate_ctxt) -> TypeRef {\n     ret T_opaque_box_ptr(cx);\n }\n \n-fn T_enum_variant(cx: @crate_ctxt) -> TypeRef {\n+fn T_enum_discrim(cx: @crate_ctxt) -> TypeRef {\n     ret cx.int_type;\n }\n \n-fn T_enum(cx: @crate_ctxt, size: uint) -> TypeRef {\n-    let s = \"enum_\" + uint::to_str(size, 10u);\n-    alt name_has_type(cx.tn, s) { some(t) { ret t; } _ {} }\n-    let t =\n-        if size == 0u {\n-            T_struct([T_enum_variant(cx)])\n-        } else { T_struct([T_enum_variant(cx), T_array(T_i8(), size)]) };\n-    associate_type(cx.tn, s, t);\n-    ret t;\n-}\n-\n fn T_opaque_enum(cx: @crate_ctxt) -> TypeRef {\n     let s = \"opaque_enum\";\n     alt name_has_type(cx.tn, s) { some(t) { ret t; } _ {} }\n-    let t = T_struct([T_enum_variant(cx), T_i8()]);\n+    let t = T_struct([T_enum_discrim(cx), T_i8()]);\n     associate_type(cx.tn, s, t);\n     ret t;\n }"}, {"sha": "d1297bd3e4b7ec89018db5550224cdb6623b8890", "filename": "src/rustc/middle/trans/shape.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/582c71731d57531605a2c0b470ba9d803ff19d89/src%2Frustc%2Fmiddle%2Ftrans%2Fshape.rs", "raw_url": "https://github.com/rust-lang/rust/raw/582c71731d57531605a2c0b470ba9d803ff19d89/src%2Frustc%2Fmiddle%2Ftrans%2Fshape.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustc%2Fmiddle%2Ftrans%2Fshape.rs?ref=582c71731d57531605a2c0b470ba9d803ff19d89", "patch": "@@ -200,7 +200,7 @@ fn compute_static_enum_size(ccx: @crate_ctxt, largest_variants: [uint],\n     // FIXME (issue #792): This is wrong. If the enum starts with an 8 byte\n     // aligned quantity, we don't align it.\n     if vec::len(*variants) > 1u {\n-        let variant_t = T_enum_variant(ccx);\n+        let variant_t = T_enum_discrim(ccx);\n         max_size += llsize_of_real(ccx, variant_t) as u16;\n         let align = llalign_of_pref(ccx, variant_t) as u8;\n         if max_align < align { max_align = align; }"}, {"sha": "6d1c4a8b430815807785848552aa81c0c7161e5d", "filename": "src/rustc/middle/trans/type_of.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/582c71731d57531605a2c0b470ba9d803ff19d89/src%2Frustc%2Fmiddle%2Ftrans%2Ftype_of.rs", "raw_url": "https://github.com/rust-lang/rust/raw/582c71731d57531605a2c0b470ba9d803ff19d89/src%2Frustc%2Fmiddle%2Ftrans%2Ftype_of.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustc%2Fmiddle%2Ftrans%2Ftype_of.rs?ref=582c71731d57531605a2c0b470ba9d803ff19d89", "patch": "@@ -158,10 +158,10 @@ fn type_of_enum(cx: @crate_ctxt, did: ast::def_id, t: ty::t)\n         let degen = (*ty::enum_variants(cx.tcx, did)).len() == 1u;\n         let size = shape::static_size_of_enum(cx, t);\n         if !degen {\n-            [T_enum_variant(cx), T_array(T_i8(), size)]\n+            [T_enum_discrim(cx), T_array(T_i8(), size)]\n         }\n         else if size == 0u {\n-            [T_enum_variant(cx)]\n+            [T_enum_discrim(cx)]\n         }\n         else {\n             [T_array(T_i8(), size)]"}]}