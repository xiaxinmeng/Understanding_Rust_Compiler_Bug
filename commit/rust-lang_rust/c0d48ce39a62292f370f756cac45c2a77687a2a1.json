{"sha": "c0d48ce39a62292f370f756cac45c2a77687a2a1", "node_id": "MDY6Q29tbWl0NzI0NzEyOmMwZDQ4Y2UzOWE2MjI5MmYzNzBmNzU2Y2FjNDVjMmE3NzY4N2EyYTE=", "commit": {"author": {"name": "Pietro Albini", "email": "pietro@pietroalbini.org", "date": "2018-11-18T22:24:54Z"}, "committer": {"name": "kennytm", "email": "kennytm@gmail.com", "date": "2018-11-19T14:06:32Z"}, "message": "Rollup merge of #56007 - RalfJung:non-const-call, r=oli-obk\n\nCTFE: dynamically make sure we do not call non-const-fn\n\nI'd love to have a test case for this, but I don't know how.\n\nI am also really surprised by this test case that changed behavior: Why did it even start execution if it already determined that it shouldn't?!?\n\nr? @oli-obk", "tree": {"sha": "b3f50c287c67b24165c3f2a5a33ec20c7b394c02", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b3f50c287c67b24165c3f2a5a33ec20c7b394c02"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c0d48ce39a62292f370f756cac45c2a77687a2a1", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEZ1R8CLMp8f2GxWoQ/vbIBR0OATwFAlvyw2kACgkQ/vbIBR0O\nATz7HQ/+Or0QjK2pnlhlJAieXfiriMFXHgBJYfK7MoJrPcds2sWybySy4nNI5fGx\nmO++poMKF+1hYp1MPbukHD6kQ6v76of86w3xYhRglp/5zuhWFg3ee9N7pVH3pnq9\nTIsd3W5FHYdLRpBnO6c4S1Z7LSRaSiu0tJjnhOZVEHTnDKpYw37WuPv/Cn9Rz20B\ngemKYqWG+TKj73l7pyvXjvr6pgzn+gPB7NNcCcOfbxU+5BIUQ5tnaRebFs8PRA5g\nPNfd1SpGbPtfuuVTLptwI9hpAks4S29Drvvi6fF0z5JFeZKACVEzfjGRmJ7aiWOj\nasXjapcofXM5VzE+qEkeovxPEC7eiul+fyGHrBtE1tCknVTL0JmobRhXZUnpykqh\nySByYihhCk+VJgVbRl1ZIrvA2ElzbyzcOAGa/FEt2hSRBPgRXgxhOgvwPvJfWlcV\nP92YcMDZFm27toZN85aaN8dTcaO9NoT5moB+LAuJ7CBgo0GH0prmEMwrLa5MZwtV\n2QMgG6Cnp0gMWyuLjL+6VzAyf/K1CHjJKdNe2o+RLhnLdvl3I8py5HdJ2qqTRBMQ\n9XqY58FxA1dFurweTQbAxm7pjKmnkAcbxeS32ZftQvPXIvSd3o8vGnRXR8NHCwO/\nKaFmdBJPPkka4gGzC6E7qofvDmU58i3v1Pz07fW8OBhiDm9t10g=\n=ZTyE\n-----END PGP SIGNATURE-----", "payload": "tree b3f50c287c67b24165c3f2a5a33ec20c7b394c02\nparent cc6473d342ca017a983ff5805a4fde052b7301d5\nparent 0c0478d57a5bc3a85fb695b84c06d38494f70529\nauthor Pietro Albini <pietro@pietroalbini.org> 1542579894 +0100\ncommitter kennytm <kennytm@gmail.com> 1542636392 +0800\n\nRollup merge of #56007 - RalfJung:non-const-call, r=oli-obk\n\nCTFE: dynamically make sure we do not call non-const-fn\n\nI'd love to have a test case for this, but I don't know how.\n\nI am also really surprised by this test case that changed behavior: Why did it even start execution if it already determined that it shouldn't?!?\n\nr? @oli-obk\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c0d48ce39a62292f370f756cac45c2a77687a2a1", "html_url": "https://github.com/rust-lang/rust/commit/c0d48ce39a62292f370f756cac45c2a77687a2a1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c0d48ce39a62292f370f756cac45c2a77687a2a1/comments", "author": {"login": "pietroalbini", "id": 2299951, "node_id": "MDQ6VXNlcjIyOTk5NTE=", "avatar_url": "https://avatars.githubusercontent.com/u/2299951?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pietroalbini", "html_url": "https://github.com/pietroalbini", "followers_url": "https://api.github.com/users/pietroalbini/followers", "following_url": "https://api.github.com/users/pietroalbini/following{/other_user}", "gists_url": "https://api.github.com/users/pietroalbini/gists{/gist_id}", "starred_url": "https://api.github.com/users/pietroalbini/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pietroalbini/subscriptions", "organizations_url": "https://api.github.com/users/pietroalbini/orgs", "repos_url": "https://api.github.com/users/pietroalbini/repos", "events_url": "https://api.github.com/users/pietroalbini/events{/privacy}", "received_events_url": "https://api.github.com/users/pietroalbini/received_events", "type": "User", "site_admin": false}, "committer": {"login": "kennytm", "id": 103023, "node_id": "MDQ6VXNlcjEwMzAyMw==", "avatar_url": "https://avatars.githubusercontent.com/u/103023?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kennytm", "html_url": "https://github.com/kennytm", "followers_url": "https://api.github.com/users/kennytm/followers", "following_url": "https://api.github.com/users/kennytm/following{/other_user}", "gists_url": "https://api.github.com/users/kennytm/gists{/gist_id}", "starred_url": "https://api.github.com/users/kennytm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kennytm/subscriptions", "organizations_url": "https://api.github.com/users/kennytm/orgs", "repos_url": "https://api.github.com/users/kennytm/repos", "events_url": "https://api.github.com/users/kennytm/events{/privacy}", "received_events_url": "https://api.github.com/users/kennytm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cc6473d342ca017a983ff5805a4fde052b7301d5", "url": "https://api.github.com/repos/rust-lang/rust/commits/cc6473d342ca017a983ff5805a4fde052b7301d5", "html_url": "https://github.com/rust-lang/rust/commit/cc6473d342ca017a983ff5805a4fde052b7301d5"}, {"sha": "0c0478d57a5bc3a85fb695b84c06d38494f70529", "url": "https://api.github.com/repos/rust-lang/rust/commits/0c0478d57a5bc3a85fb695b84c06d38494f70529", "html_url": "https://github.com/rust-lang/rust/commit/0c0478d57a5bc3a85fb695b84c06d38494f70529"}], "stats": {"total": 71, "additions": 60, "deletions": 11}, "files": [{"sha": "51046399ec2017bed8a78d95f84f155f6fc38bd1", "filename": "src/librustc_mir/const_eval.rs", "status": "modified", "additions": 11, "deletions": 5, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/c0d48ce39a62292f370f756cac45c2a77687a2a1/src%2Flibrustc_mir%2Fconst_eval.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c0d48ce39a62292f370f756cac45c2a77687a2a1/src%2Flibrustc_mir%2Fconst_eval.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fconst_eval.rs?ref=c0d48ce39a62292f370f756cac45c2a77687a2a1", "patch": "@@ -365,13 +365,19 @@ impl<'a, 'mir, 'tcx> interpret::Machine<'a, 'mir, 'tcx>\n         ret: Option<mir::BasicBlock>,\n     ) -> EvalResult<'tcx, Option<&'mir mir::Mir<'tcx>>> {\n         debug!(\"eval_fn_call: {:?}\", instance);\n-        if !ecx.tcx.is_const_fn(instance.def_id()) {\n+        // Execution might have wandered off into other crates, so we cannot to a stability-\n+        // sensitive check here.  But we can at least rule out functions that are not const\n+        // at all.\n+        if !ecx.tcx.is_const_fn_raw(instance.def_id()) {\n             // Some functions we support even if they are non-const -- but avoid testing\n-            // that for const fn!\n-            if ecx.hook_fn(instance, args, dest)? {\n+            // that for const fn!  We certainly do *not* want to actually call the fn\n+            // though, so be sure we return here.\n+            return if ecx.hook_fn(instance, args, dest)? {\n                 ecx.goto_block(ret)?; // fully evaluated and done\n-                return Ok(None);\n-            }\n+                Ok(None)\n+            } else {\n+                err!(MachineError(format!(\"calling non-const function `{}`\", instance)))\n+            };\n         }\n         // This is a const fn. Call it.\n         Ok(Some(match ecx.load_mir(instance.def) {"}, {"sha": "17dc9f94fe19c80c4ed26e877e121b5b34e43c3e", "filename": "src/test/compile-fail/const-fn-error.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c0d48ce39a62292f370f756cac45c2a77687a2a1/src%2Ftest%2Fcompile-fail%2Fconst-fn-error.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c0d48ce39a62292f370f756cac45c2a77687a2a1/src%2Ftest%2Fcompile-fail%2Fconst-fn-error.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fconst-fn-error.rs?ref=c0d48ce39a62292f370f756cac45c2a77687a2a1", "patch": "@@ -19,6 +19,7 @@ const fn f(x: usize) -> usize {\n     for i in 0..x {\n         //~^ ERROR E0015\n         //~| ERROR E0019\n+        //~| ERROR E0080\n         sum += i;\n     }\n     sum"}, {"sha": "1ed513033fd5d34f34644abd70d560d0fb750d02", "filename": "src/test/compile-fail/issue-52443.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c0d48ce39a62292f370f756cac45c2a77687a2a1/src%2Ftest%2Fcompile-fail%2Fissue-52443.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c0d48ce39a62292f370f756cac45c2a77687a2a1/src%2Ftest%2Fcompile-fail%2Fissue-52443.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-52443.rs?ref=c0d48ce39a62292f370f756cac45c2a77687a2a1", "patch": "@@ -14,4 +14,5 @@ fn main() {\n     [(); {while true {break}; 0}]; //~ ERROR constant contains unimplemented expression type\n     [(); { for _ in 0usize.. {}; 0}]; //~ ERROR calls in constants are limited to constant functions\n     //~^ ERROR constant contains unimplemented expression type\n+    //~| ERROR evaluation of constant value failed\n }"}, {"sha": "bd407192cd7a1079e98050f9bb8b997b8dcf647b", "filename": "src/test/ui/consts/const-call.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c0d48ce39a62292f370f756cac45c2a77687a2a1/src%2Ftest%2Fui%2Fconsts%2Fconst-call.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c0d48ce39a62292f370f756cac45c2a77687a2a1/src%2Ftest%2Fui%2Fconsts%2Fconst-call.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fconst-call.rs?ref=c0d48ce39a62292f370f756cac45c2a77687a2a1", "patch": "@@ -15,4 +15,5 @@ fn f(x: usize) -> usize {\n fn main() {\n     let _ = [0; f(2)];\n     //~^ ERROR calls in constants are limited to constant functions\n+    //~| ERROR evaluation of constant value failed\n }"}, {"sha": "219fcec51b386f47196541a4d9d62dd2842351a4", "filename": "src/test/ui/consts/const-call.stderr", "status": "modified", "additions": 9, "deletions": 2, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/c0d48ce39a62292f370f756cac45c2a77687a2a1/src%2Ftest%2Fui%2Fconsts%2Fconst-call.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/c0d48ce39a62292f370f756cac45c2a77687a2a1/src%2Ftest%2Fui%2Fconsts%2Fconst-call.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fconst-call.stderr?ref=c0d48ce39a62292f370f756cac45c2a77687a2a1", "patch": "@@ -4,6 +4,13 @@ error[E0015]: calls in constants are limited to constant functions, tuple struct\n LL |     let _ = [0; f(2)];\n    |                 ^^^^\n \n-error: aborting due to previous error\n+error[E0080]: evaluation of constant value failed\n+  --> $DIR/const-call.rs:16:17\n+   |\n+LL |     let _ = [0; f(2)];\n+   |                 ^^^^ calling non-const function `f`\n+\n+error: aborting due to 2 previous errors\n \n-For more information about this error, try `rustc --explain E0015`.\n+Some errors occurred: E0015, E0080.\n+For more information about an error, try `rustc --explain E0015`."}, {"sha": "f01fd1fd8f1442571c9a7cfa6f9005f647b335a2", "filename": "src/test/ui/issues/issue-39559-2.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c0d48ce39a62292f370f756cac45c2a77687a2a1/src%2Ftest%2Fui%2Fissues%2Fissue-39559-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c0d48ce39a62292f370f756cac45c2a77687a2a1/src%2Ftest%2Fui%2Fissues%2Fissue-39559-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-39559-2.rs?ref=c0d48ce39a62292f370f756cac45c2a77687a2a1", "patch": "@@ -23,6 +23,8 @@ impl Dim for Dim3 {\n fn main() {\n     let array: [usize; Dim3::dim()]\n     //~^ ERROR E0015\n+    //~| ERROR E0080\n         = [0; Dim3::dim()];\n         //~^ ERROR E0015\n+        //~| ERROR E0080\n }"}, {"sha": "57e9f23e0b33c311ba0492a00c0a130d74137661", "filename": "src/test/ui/issues/issue-39559-2.stderr", "status": "modified", "additions": 16, "deletions": 3, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/c0d48ce39a62292f370f756cac45c2a77687a2a1/src%2Ftest%2Fui%2Fissues%2Fissue-39559-2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/c0d48ce39a62292f370f756cac45c2a77687a2a1/src%2Ftest%2Fui%2Fissues%2Fissue-39559-2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-39559-2.stderr?ref=c0d48ce39a62292f370f756cac45c2a77687a2a1", "patch": "@@ -4,12 +4,25 @@ error[E0015]: calls in constants are limited to constant functions, tuple struct\n LL |     let array: [usize; Dim3::dim()]\n    |                        ^^^^^^^^^^^\n \n+error[E0080]: evaluation of constant value failed\n+  --> $DIR/issue-39559-2.rs:24:24\n+   |\n+LL |     let array: [usize; Dim3::dim()]\n+   |                        ^^^^^^^^^^^ calling non-const function `<Dim3 as Dim>::dim`\n+\n error[E0015]: calls in constants are limited to constant functions, tuple structs and tuple variants\n-  --> $DIR/issue-39559-2.rs:26:15\n+  --> $DIR/issue-39559-2.rs:27:15\n    |\n LL |         = [0; Dim3::dim()];\n    |               ^^^^^^^^^^^\n \n-error: aborting due to 2 previous errors\n+error[E0080]: evaluation of constant value failed\n+  --> $DIR/issue-39559-2.rs:27:15\n+   |\n+LL |         = [0; Dim3::dim()];\n+   |               ^^^^^^^^^^^ calling non-const function `<Dim3 as Dim>::dim`\n+\n+error: aborting due to 4 previous errors\n \n-For more information about this error, try `rustc --explain E0015`.\n+Some errors occurred: E0015, E0080.\n+For more information about an error, try `rustc --explain E0015`."}, {"sha": "60b18a66f1a384c02b5664356a7182d70849836a", "filename": "src/test/ui/issues/issue-43105.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c0d48ce39a62292f370f756cac45c2a77687a2a1/src%2Ftest%2Fui%2Fissues%2Fissue-43105.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c0d48ce39a62292f370f756cac45c2a77687a2a1/src%2Ftest%2Fui%2Fissues%2Fissue-43105.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-43105.rs?ref=c0d48ce39a62292f370f756cac45c2a77687a2a1", "patch": "@@ -12,10 +12,12 @@ fn xyz() -> u8 { 42 }\n \n const NUM: u8 = xyz();\n //~^ ERROR calls in constants are limited to constant functions, tuple structs and tuple variants\n+//~| ERROR any use of this value will cause an error [const_err]\n \n fn main() {\n     match 1 {\n         NUM => unimplemented!(),\n+        //~^ ERROR could not evaluate constant pattern\n         _ => unimplemented!(),\n     }\n }"}, {"sha": "f26447ed2b9f0a860a9f7d29cbbb2f50c68a54ac", "filename": "src/test/ui/issues/issue-43105.stderr", "status": "modified", "additions": 17, "deletions": 1, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/c0d48ce39a62292f370f756cac45c2a77687a2a1/src%2Ftest%2Fui%2Fissues%2Fissue-43105.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/c0d48ce39a62292f370f756cac45c2a77687a2a1/src%2Ftest%2Fui%2Fissues%2Fissue-43105.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-43105.stderr?ref=c0d48ce39a62292f370f756cac45c2a77687a2a1", "patch": "@@ -4,6 +4,22 @@ error[E0015]: calls in constants are limited to constant functions, tuple struct\n LL | const NUM: u8 = xyz();\n    |                 ^^^^^\n \n-error: aborting due to previous error\n+error: any use of this value will cause an error\n+  --> $DIR/issue-43105.rs:13:1\n+   |\n+LL | const NUM: u8 = xyz();\n+   | ^^^^^^^^^^^^^^^^-----^\n+   |                 |\n+   |                 calling non-const function `xyz`\n+   |\n+   = note: #[deny(const_err)] on by default\n+\n+error: could not evaluate constant pattern\n+  --> $DIR/issue-43105.rs:19:9\n+   |\n+LL |         NUM => unimplemented!(),\n+   |         ^^^\n+\n+error: aborting due to 3 previous errors\n \n For more information about this error, try `rustc --explain E0015`."}]}