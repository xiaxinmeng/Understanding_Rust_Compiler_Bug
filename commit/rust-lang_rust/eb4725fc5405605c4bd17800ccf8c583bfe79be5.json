{"sha": "eb4725fc5405605c4bd17800ccf8c583bfe79be5", "node_id": "MDY6Q29tbWl0NzI0NzEyOmViNDcyNWZjNTQwNTYwNWM0YmQxNzgwMGNjZjhjNTgzYmZlNzliZTU=", "commit": {"author": {"name": "Amanieu d'Antras", "email": "amanieu@gmail.com", "date": "2020-03-31T22:15:39Z"}, "committer": {"name": "Amanieu d'Antras", "email": "amanieu@gmail.com", "date": "2020-04-29T00:05:56Z"}, "message": "Remove Session::no_landing_pads()", "tree": {"sha": "d6c51023d3641ca9781bf3b85c876d79f2e200ee", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d6c51023d3641ca9781bf3b85c876d79f2e200ee"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/eb4725fc5405605c4bd17800ccf8c583bfe79be5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/eb4725fc5405605c4bd17800ccf8c583bfe79be5", "html_url": "https://github.com/rust-lang/rust/commit/eb4725fc5405605c4bd17800ccf8c583bfe79be5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/eb4725fc5405605c4bd17800ccf8c583bfe79be5/comments", "author": {"login": "Amanieu", "id": 278509, "node_id": "MDQ6VXNlcjI3ODUwOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/278509?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Amanieu", "html_url": "https://github.com/Amanieu", "followers_url": "https://api.github.com/users/Amanieu/followers", "following_url": "https://api.github.com/users/Amanieu/following{/other_user}", "gists_url": "https://api.github.com/users/Amanieu/gists{/gist_id}", "starred_url": "https://api.github.com/users/Amanieu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Amanieu/subscriptions", "organizations_url": "https://api.github.com/users/Amanieu/orgs", "repos_url": "https://api.github.com/users/Amanieu/repos", "events_url": "https://api.github.com/users/Amanieu/events{/privacy}", "received_events_url": "https://api.github.com/users/Amanieu/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Amanieu", "id": 278509, "node_id": "MDQ6VXNlcjI3ODUwOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/278509?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Amanieu", "html_url": "https://github.com/Amanieu", "followers_url": "https://api.github.com/users/Amanieu/followers", "following_url": "https://api.github.com/users/Amanieu/following{/other_user}", "gists_url": "https://api.github.com/users/Amanieu/gists{/gist_id}", "starred_url": "https://api.github.com/users/Amanieu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Amanieu/subscriptions", "organizations_url": "https://api.github.com/users/Amanieu/orgs", "repos_url": "https://api.github.com/users/Amanieu/repos", "events_url": "https://api.github.com/users/Amanieu/events{/privacy}", "received_events_url": "https://api.github.com/users/Amanieu/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "06e15a4ef91724cfaf3856f33277416bc53fa814", "url": "https://api.github.com/repos/rust-lang/rust/commits/06e15a4ef91724cfaf3856f33277416bc53fa814", "html_url": "https://github.com/rust-lang/rust/commit/06e15a4ef91724cfaf3856f33277416bc53fa814"}], "stats": {"total": 29, "additions": 14, "deletions": 15}, "files": [{"sha": "6ef303c848dc34900b53c0f86e62476f3ff6a38d", "filename": "src/librustc_codegen_llvm/attributes.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/eb4725fc5405605c4bd17800ccf8c583bfe79be5/src%2Flibrustc_codegen_llvm%2Fattributes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/eb4725fc5405605c4bd17800ccf8c583bfe79be5/src%2Flibrustc_codegen_llvm%2Fattributes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_llvm%2Fattributes.rs?ref=eb4725fc5405605c4bd17800ccf8c583bfe79be5", "patch": "@@ -13,6 +13,7 @@ use rustc_middle::ty::query::Providers;\n use rustc_middle::ty::{self, TyCtxt};\n use rustc_session::config::{OptLevel, Sanitizer};\n use rustc_session::Session;\n+use rustc_target::spec::PanicStrategy;\n \n use crate::attributes;\n use crate::llvm::AttributePlace::Function;\n@@ -270,7 +271,9 @@ pub fn from_fn_attrs(cx: &CodegenCx<'ll, 'tcx>, llfn: &'ll Value, instance: ty::\n     //\n     // You can also find more info on why Windows is whitelisted here in:\n     //      https://bugzilla.mozilla.org/show_bug.cgi?id=1302078\n-    if !cx.sess().no_landing_pads() || cx.sess().target.target.options.requires_uwtable {\n+    if cx.sess().panic_strategy() == PanicStrategy::Unwind\n+        || cx.sess().target.target.options.requires_uwtable\n+    {\n         attributes::emit_uwtable(llfn, true);\n     }\n "}, {"sha": "ddf21ff6338eba44d7bee10c897304d30a44b5f3", "filename": "src/librustc_codegen_llvm/intrinsic.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/eb4725fc5405605c4bd17800ccf8c583bfe79be5/src%2Flibrustc_codegen_llvm%2Fintrinsic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/eb4725fc5405605c4bd17800ccf8c583bfe79be5/src%2Flibrustc_codegen_llvm%2Fintrinsic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_llvm%2Fintrinsic.rs?ref=eb4725fc5405605c4bd17800ccf8c583bfe79be5", "patch": "@@ -22,6 +22,7 @@ use rustc_middle::ty::{self, Ty};\n use rustc_middle::{bug, span_bug};\n use rustc_span::Span;\n use rustc_target::abi::{self, HasDataLayout, LayoutOf, Primitive};\n+use rustc_target::spec::PanicStrategy;\n \n use std::cmp::Ordering;\n use std::iter;\n@@ -804,7 +805,7 @@ fn try_intrinsic(\n     catch_func: &'ll Value,\n     dest: &'ll Value,\n ) {\n-    if bx.sess().no_landing_pads() {\n+    if bx.sess().panic_strategy() == PanicStrategy::Abort {\n         bx.call(try_func, &[data], None);\n         // Return 0 unconditionally from the intrinsic call;\n         // we can never unwind."}, {"sha": "4bc377a6d17773f56248e98a11cd29b58a77e6d5", "filename": "src/librustc_codegen_ssa/back/write.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/eb4725fc5405605c4bd17800ccf8c583bfe79be5/src%2Flibrustc_codegen_ssa%2Fback%2Fwrite.rs", "raw_url": "https://github.com/rust-lang/rust/raw/eb4725fc5405605c4bd17800ccf8c583bfe79be5/src%2Flibrustc_codegen_ssa%2Fback%2Fwrite.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_ssa%2Fback%2Fwrite.rs?ref=eb4725fc5405605c4bd17800ccf8c583bfe79be5", "patch": "@@ -36,7 +36,7 @@ use rustc_session::Session;\n use rustc_span::hygiene::ExpnId;\n use rustc_span::source_map::SourceMap;\n use rustc_span::symbol::{sym, Symbol};\n-use rustc_target::spec::MergeFunctions;\n+use rustc_target::spec::{MergeFunctions, PanicStrategy};\n \n use std::any::Any;\n use std::fs;\n@@ -1021,7 +1021,7 @@ fn start_executing_work<B: ExtraBackendMethods>(\n         crate_types: sess.crate_types.borrow().clone(),\n         each_linked_rlib_for_lto,\n         lto: sess.lto(),\n-        no_landing_pads: sess.no_landing_pads(),\n+        no_landing_pads: sess.panic_strategy() == PanicStrategy::Abort,\n         fewer_names: sess.fewer_names(),\n         save_temps: sess.opts.cg.save_temps,\n         opts: Arc::new(sess.opts.clone()),"}, {"sha": "00caa06a6c0ff51656c4d3e26dd3be3620a6f86b", "filename": "src/librustc_mir/transform/generator.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/eb4725fc5405605c4bd17800ccf8c583bfe79be5/src%2Flibrustc_mir%2Ftransform%2Fgenerator.rs", "raw_url": "https://github.com/rust-lang/rust/raw/eb4725fc5405605c4bd17800ccf8c583bfe79be5/src%2Flibrustc_mir%2Ftransform%2Fgenerator.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Ftransform%2Fgenerator.rs?ref=eb4725fc5405605c4bd17800ccf8c583bfe79be5", "patch": "@@ -68,6 +68,7 @@ use rustc_middle::ty::subst::SubstsRef;\n use rustc_middle::ty::GeneratorSubsts;\n use rustc_middle::ty::{self, AdtDef, Ty, TyCtxt};\n use rustc_target::abi::VariantIdx;\n+use rustc_target::spec::PanicStrategy;\n use std::borrow::Cow;\n use std::iter;\n \n@@ -978,7 +979,7 @@ fn can_return<'tcx>(tcx: TyCtxt<'tcx>, body: &Body<'tcx>) -> bool {\n \n fn can_unwind<'tcx>(tcx: TyCtxt<'tcx>, body: &Body<'tcx>) -> bool {\n     // Nothing can unwind when landing pads are off.\n-    if tcx.sess.no_landing_pads() {\n+    if tcx.sess.panic_strategy() == PanicStrategy::Abort {\n         return false;\n     }\n "}, {"sha": "3bffafa1b2f9ce27bc9ff50b652d7029936291f4", "filename": "src/librustc_mir/transform/no_landing_pads.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/eb4725fc5405605c4bd17800ccf8c583bfe79be5/src%2Flibrustc_mir%2Ftransform%2Fno_landing_pads.rs", "raw_url": "https://github.com/rust-lang/rust/raw/eb4725fc5405605c4bd17800ccf8c583bfe79be5/src%2Flibrustc_mir%2Ftransform%2Fno_landing_pads.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Ftransform%2Fno_landing_pads.rs?ref=eb4725fc5405605c4bd17800ccf8c583bfe79be5", "patch": "@@ -5,6 +5,7 @@ use crate::transform::{MirPass, MirSource};\n use rustc_middle::mir::visit::MutVisitor;\n use rustc_middle::mir::*;\n use rustc_middle::ty::TyCtxt;\n+use rustc_target::spec::PanicStrategy;\n \n pub struct NoLandingPads<'tcx> {\n     tcx: TyCtxt<'tcx>,\n@@ -23,7 +24,7 @@ impl<'tcx> MirPass<'tcx> for NoLandingPads<'tcx> {\n }\n \n pub fn no_landing_pads<'tcx>(tcx: TyCtxt<'tcx>, body: &mut Body<'tcx>) {\n-    if tcx.sess.no_landing_pads() {\n+    if tcx.sess.panic_strategy() == PanicStrategy::Abort {\n         NoLandingPads::new(tcx).visit_body(body);\n     }\n }"}, {"sha": "a86ef7f2f522ad314ad66cdb4031a3d54c929575", "filename": "src/librustc_mir/transform/remove_noop_landing_pads.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/eb4725fc5405605c4bd17800ccf8c583bfe79be5/src%2Flibrustc_mir%2Ftransform%2Fremove_noop_landing_pads.rs", "raw_url": "https://github.com/rust-lang/rust/raw/eb4725fc5405605c4bd17800ccf8c583bfe79be5/src%2Flibrustc_mir%2Ftransform%2Fremove_noop_landing_pads.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Ftransform%2Fremove_noop_landing_pads.rs?ref=eb4725fc5405605c4bd17800ccf8c583bfe79be5", "patch": "@@ -3,14 +3,15 @@ use crate::util::patch::MirPatch;\n use rustc_index::bit_set::BitSet;\n use rustc_middle::mir::*;\n use rustc_middle::ty::TyCtxt;\n+use rustc_target::spec::PanicStrategy;\n \n /// A pass that removes noop landing pads and replaces jumps to them with\n /// `None`. This is important because otherwise LLVM generates terrible\n /// code for these.\n pub struct RemoveNoopLandingPads;\n \n pub fn remove_noop_landing_pads<'tcx>(tcx: TyCtxt<'tcx>, body: &mut Body<'tcx>) {\n-    if tcx.sess.no_landing_pads() {\n+    if tcx.sess.panic_strategy() == PanicStrategy::Abort {\n         return;\n     }\n     debug!(\"remove_noop_landing_pads({:?})\", body);"}, {"sha": "5a1a6c7bbf790767a8175474b9e2cf5a60c7bebf", "filename": "src/librustc_mir_build/build/mod.rs", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/eb4725fc5405605c4bd17800ccf8c583bfe79be5/src%2Flibrustc_mir_build%2Fbuild%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/eb4725fc5405605c4bd17800ccf8c583bfe79be5/src%2Flibrustc_mir_build%2Fbuild%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir_build%2Fbuild%2Fmod.rs?ref=eb4725fc5405605c4bd17800ccf8c583bfe79be5", "patch": "@@ -533,11 +533,6 @@ fn should_abort_on_panic(tcx: TyCtxt<'_>, fn_def_id: LocalDefId, _abi: Abi) -> b\n         return false;\n     }\n \n-    // We cannot add landing pads, so don't add one.\n-    if tcx.sess.no_landing_pads() {\n-        return false;\n-    }\n-\n     // This is a special case: some functions have a C abi but are meant to\n     // unwind anyway. Don't stop them.\n     match unwind_attr {"}, {"sha": "3b7c2f268ce5d08b94b58cae9764617c6729371a", "filename": "src/librustc_session/session.rs", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/eb4725fc5405605c4bd17800ccf8c583bfe79be5/src%2Flibrustc_session%2Fsession.rs", "raw_url": "https://github.com/rust-lang/rust/raw/eb4725fc5405605c4bd17800ccf8c583bfe79be5/src%2Flibrustc_session%2Fsession.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_session%2Fsession.rs?ref=eb4725fc5405605c4bd17800ccf8c583bfe79be5", "patch": "@@ -540,9 +540,6 @@ impl Session {\n         self.opts.debugging_opts.fewer_names || !more_names\n     }\n \n-    pub fn no_landing_pads(&self) -> bool {\n-        self.panic_strategy() == PanicStrategy::Abort\n-    }\n     pub fn unstable_options(&self) -> bool {\n         self.opts.debugging_opts.unstable_options\n     }"}]}