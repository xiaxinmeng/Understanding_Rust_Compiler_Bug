{"sha": "0a6ef35c8c38c8aa4a088d43e2ecb79cecd63baa", "node_id": "MDY6Q29tbWl0NzI0NzEyOjBhNmVmMzVjOGMzOGM4YWE0YTA4OGQ0M2UyZWNiNzljZWNkNjNiYWE=", "commit": {"author": {"name": "Tim Chevalier", "email": "chevalier@alum.wellesley.edu", "date": "2012-06-14T22:14:18Z"}, "committer": {"name": "Tim Chevalier", "email": "chevalier@alum.wellesley.edu", "date": "2012-06-14T22:35:43Z"}, "message": "while => for", "tree": {"sha": "32210dda3558f7efaa7d2ccb8c541b354a07b63d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/32210dda3558f7efaa7d2ccb8c541b354a07b63d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0a6ef35c8c38c8aa4a088d43e2ecb79cecd63baa", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0a6ef35c8c38c8aa4a088d43e2ecb79cecd63baa", "html_url": "https://github.com/rust-lang/rust/commit/0a6ef35c8c38c8aa4a088d43e2ecb79cecd63baa", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0a6ef35c8c38c8aa4a088d43e2ecb79cecd63baa/comments", "author": {"login": "catamorphism", "id": 427212, "node_id": "MDQ6VXNlcjQyNzIxMg==", "avatar_url": "https://avatars.githubusercontent.com/u/427212?v=4", "gravatar_id": "", "url": "https://api.github.com/users/catamorphism", "html_url": "https://github.com/catamorphism", "followers_url": "https://api.github.com/users/catamorphism/followers", "following_url": "https://api.github.com/users/catamorphism/following{/other_user}", "gists_url": "https://api.github.com/users/catamorphism/gists{/gist_id}", "starred_url": "https://api.github.com/users/catamorphism/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/catamorphism/subscriptions", "organizations_url": "https://api.github.com/users/catamorphism/orgs", "repos_url": "https://api.github.com/users/catamorphism/repos", "events_url": "https://api.github.com/users/catamorphism/events{/privacy}", "received_events_url": "https://api.github.com/users/catamorphism/received_events", "type": "User", "site_admin": false}, "committer": {"login": "catamorphism", "id": 427212, "node_id": "MDQ6VXNlcjQyNzIxMg==", "avatar_url": "https://avatars.githubusercontent.com/u/427212?v=4", "gravatar_id": "", "url": "https://api.github.com/users/catamorphism", "html_url": "https://github.com/catamorphism", "followers_url": "https://api.github.com/users/catamorphism/followers", "following_url": "https://api.github.com/users/catamorphism/following{/other_user}", "gists_url": "https://api.github.com/users/catamorphism/gists{/gist_id}", "starred_url": "https://api.github.com/users/catamorphism/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/catamorphism/subscriptions", "organizations_url": "https://api.github.com/users/catamorphism/orgs", "repos_url": "https://api.github.com/users/catamorphism/repos", "events_url": "https://api.github.com/users/catamorphism/events{/privacy}", "received_events_url": "https://api.github.com/users/catamorphism/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "13d4b61182e139dd0bd3bcc73fbeb3fa37f30170", "url": "https://api.github.com/repos/rust-lang/rust/commits/13d4b61182e139dd0bd3bcc73fbeb3fa37f30170", "html_url": "https://github.com/rust-lang/rust/commit/13d4b61182e139dd0bd3bcc73fbeb3fa37f30170"}], "stats": {"total": 7, "additions": 3, "deletions": 4}, "files": [{"sha": "dee7ef70d817e5d810afbbf792ec94641c60e267", "filename": "src/test/bench/sudoku.rs", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/0a6ef35c8c38c8aa4a088d43e2ecb79cecd63baa/src%2Ftest%2Fbench%2Fsudoku.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0a6ef35c8c38c8aa4a088d43e2ecb79cecd63baa/src%2Ftest%2Fbench%2Fsudoku.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fbench%2Fsudoku.rs?ref=0a6ef35c8c38c8aa4a088d43e2ecb79cecd63baa", "patch": "@@ -59,14 +59,12 @@ fn solve_grid(g: grid_t) {\n             drop_colors(g, avail, row, col);\n \n             // find first remaining color that is available\n-            let mut i = 1 as uint;\n-            while i < (10 as uint) { /* FIXME llvm ctlhd */\n+            for uint::range(1u, 10u) {|i|\n                 if bitv::get(avail, i) {\n                     g[row][col] = i as u8;\n                     ret true;\n                 }\n-                i += 1 as uint; /* else */\n-            }\n+            };\n         }\n         g[row][col] = 0u8;\n         ret false;\n@@ -131,6 +129,7 @@ fn write_grid(f: io::writer, g: grid_t) {\n fn main(args: [str]) {\n     let grid = if vec::len(args) == 1u {\n         // FIXME create sudoku inline since nested vec consts dont work yet\n+        // (#571)\n         let g = vec::from_fn(10u, {|_i|\n             vec::to_mut(vec::from_elem(10u, 0 as u8))\n         });"}]}