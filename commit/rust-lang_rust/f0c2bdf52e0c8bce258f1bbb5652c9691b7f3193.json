{"sha": "f0c2bdf52e0c8bce258f1bbb5652c9691b7f3193", "node_id": "MDY6Q29tbWl0NzI0NzEyOmYwYzJiZGY1MmUwYzhiY2UyNThmMWJiYjU2NTJjOTY5MWI3ZjMxOTM=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2019-06-20T15:11:08Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2019-06-20T15:11:08Z"}, "message": "Auto merge of #61998 - eddyb:type-name-params, r=oli-obk\n\nrustc_mir: support type parameters by printing them as `_`.\n\nFixes #61894.\nr? @oli-obk", "tree": {"sha": "b3749284593cdf105aa814ac103a9036ce10f901", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b3749284593cdf105aa814ac103a9036ce10f901"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f0c2bdf52e0c8bce258f1bbb5652c9691b7f3193", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f0c2bdf52e0c8bce258f1bbb5652c9691b7f3193", "html_url": "https://github.com/rust-lang/rust/commit/f0c2bdf52e0c8bce258f1bbb5652c9691b7f3193", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f0c2bdf52e0c8bce258f1bbb5652c9691b7f3193/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c1a5edd939bb3303d4ff1a4380a7a7378244938d", "url": "https://api.github.com/repos/rust-lang/rust/commits/c1a5edd939bb3303d4ff1a4380a7a7378244938d", "html_url": "https://github.com/rust-lang/rust/commit/c1a5edd939bb3303d4ff1a4380a7a7378244938d"}, {"sha": "3606003a5bf808c399cc9bae2e825dba4040f193", "url": "https://api.github.com/repos/rust-lang/rust/commits/3606003a5bf808c399cc9bae2e825dba4040f193", "html_url": "https://github.com/rust-lang/rust/commit/3606003a5bf808c399cc9bae2e825dba4040f193"}], "stats": {"total": 66, "additions": 45, "deletions": 21}, "files": [{"sha": "f207cfc6b39cde6b99238a0749ba77921f24efa3", "filename": "src/librustc_mir/interpret/intrinsics/type_name.rs", "status": "modified", "additions": 26, "deletions": 21, "changes": 47, "blob_url": "https://github.com/rust-lang/rust/blob/f0c2bdf52e0c8bce258f1bbb5652c9691b7f3193/src%2Flibrustc_mir%2Finterpret%2Fintrinsics%2Ftype_name.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f0c2bdf52e0c8bce258f1bbb5652c9691b7f3193/src%2Flibrustc_mir%2Finterpret%2Fintrinsics%2Ftype_name.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Finterpret%2Fintrinsics%2Ftype_name.rs?ref=f0c2bdf52e0c8bce258f1bbb5652c9691b7f3193", "patch": "@@ -31,9 +31,9 @@ impl<'tcx> Printer<'tcx> for AbsolutePathPrinter<'tcx> {\n         Ok(self)\n     }\n \n-    fn print_type(self, ty: Ty<'tcx>) -> Result<Self::Type, Self::Error> {\n+    fn print_type(mut self, ty: Ty<'tcx>) -> Result<Self::Type, Self::Error> {\n         match ty.sty {\n-            // types without identity\n+            // Types without identity.\n             | ty::Bool\n             | ty::Char\n             | ty::Int(_)\n@@ -48,28 +48,33 @@ impl<'tcx> Printer<'tcx> for AbsolutePathPrinter<'tcx> {\n             | ty::Never\n             | ty::Tuple(_)\n             | ty::Dynamic(_, _)\n-            | ty::Adt(..)\n-            | ty::Foreign(_)\n-            // should be unreachable, but there's no hurt in printing it (and better than ICEing)\n-            | ty::Error\n             => self.pretty_print_type(ty),\n-            | ty::Infer(_)\n-            | ty::Bound(_, _)\n+\n+            // Placeholders (all printed as `_` to uniformize them).\n             | ty::Param(_)\n+            | ty::Bound(..)\n             | ty::Placeholder(_)\n-            | ty::Projection(_)\n-            | ty::UnnormalizedProjection(_)\n-            | ty::GeneratorWitness(_)\n-            => bug!(\n-                \"{:#?} in `type_name` should not happen because we are always monomorphized\",\n-                ty,\n-            ),\n-            // types with identity (print the module path instead)\n-            | ty::FnDef(did, substs)\n-            | ty::Opaque(did, substs)\n-            => self.print_def_path(did, substs),\n-            ty::Closure(did, substs) => self.print_def_path(did, substs.substs),\n-            ty::Generator(did, substs, _) => self.print_def_path(did, substs.substs),\n+            | ty::Infer(_)\n+            | ty::Error\n+            => {\n+                write!(self, \"_\")?;\n+                Ok(self)\n+            }\n+\n+            // Types with identity (print the module path).\n+            | ty::Adt(&ty::AdtDef { did: def_id, .. }, substs)\n+            | ty::FnDef(def_id, substs)\n+            | ty::Opaque(def_id, substs)\n+            | ty::Projection(ty::ProjectionTy { item_def_id: def_id, substs })\n+            | ty::UnnormalizedProjection(ty::ProjectionTy { item_def_id: def_id, substs })\n+            | ty::Closure(def_id, ty::ClosureSubsts { substs })\n+            | ty::Generator(def_id, ty::GeneratorSubsts { substs }, _)\n+            => self.print_def_path(def_id, substs),\n+            ty::Foreign(def_id) => self.print_def_path(def_id, &[]),\n+\n+            ty::GeneratorWitness(_) => {\n+                bug!(\"type_name: unexpected `GeneratorWitness`\")\n+            }\n         }\n     }\n "}, {"sha": "9ab969be46a459d8d8305fa4dd49cf5a96c299da", "filename": "src/test/run-pass/issues/issue-61894.rs", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/f0c2bdf52e0c8bce258f1bbb5652c9691b7f3193/src%2Ftest%2Frun-pass%2Fissues%2Fissue-61894.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f0c2bdf52e0c8bce258f1bbb5652c9691b7f3193/src%2Ftest%2Frun-pass%2Fissues%2Fissue-61894.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissues%2Fissue-61894.rs?ref=f0c2bdf52e0c8bce258f1bbb5652c9691b7f3193", "patch": "@@ -0,0 +1,19 @@\n+#![feature(core_intrinsics)]\n+\n+use std::intrinsics::type_name;\n+\n+struct Bar<M>(M);\n+\n+impl<M> Bar<M> {\n+    fn foo(&self) -> &'static str {\n+        fn f() {}\n+        fn type_name_of<T>(_: T) -> &'static str {\n+            unsafe { type_name::<T>() }\n+        }\n+        type_name_of(f)\n+    }\n+}\n+\n+fn main() {\n+    assert_eq!(Bar(()).foo(), \"issue_61894::Bar<_>::foo::f\");\n+}"}]}