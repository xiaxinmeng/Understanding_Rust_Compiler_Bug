{"sha": "0c8ebea227306704b98aaee362c89ae951cab89b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjBjOGViZWEyMjczMDY3MDRiOThhYWVlMzYyYzg5YWU5NTFjYWI4OWI=", "commit": {"author": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2019-06-24T19:17:48Z"}, "committer": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2019-07-02T16:25:22Z"}, "message": "s/abstract_type_generics/opaque_type_generics/", "tree": {"sha": "9f9e5ba86ef7452f04fab54770151862b54187af", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9f9e5ba86ef7452f04fab54770151862b54187af"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0c8ebea227306704b98aaee362c89ae951cab89b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0c8ebea227306704b98aaee362c89ae951cab89b", "html_url": "https://github.com/rust-lang/rust/commit/0c8ebea227306704b98aaee362c89ae951cab89b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0c8ebea227306704b98aaee362c89ae951cab89b/comments", "author": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6234aed6c71741911726d5e8731f23957bc524e6", "url": "https://api.github.com/repos/rust-lang/rust/commits/6234aed6c71741911726d5e8731f23957bc524e6", "html_url": "https://github.com/rust-lang/rust/commit/6234aed6c71741911726d5e8731f23957bc524e6"}], "stats": {"total": 10, "additions": 5, "deletions": 5}, "files": [{"sha": "b1ede2ae2cd461e12ad97a2b64054413f43703c5", "filename": "src/librustc/infer/opaque_types/mod.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/0c8ebea227306704b98aaee362c89ae951cab89b/src%2Flibrustc%2Finfer%2Fopaque_types%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0c8ebea227306704b98aaee362c89ae951cab89b/src%2Flibrustc%2Finfer%2Fopaque_types%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Finfer%2Fopaque_types%2Fmod.rs?ref=0c8ebea227306704b98aaee362c89ae951cab89b", "patch": "@@ -333,7 +333,7 @@ impl<'a, 'tcx> InferCtxt<'a, 'tcx> {\n \n         debug!(\"constrain_opaque_type: concrete_ty={:?}\", concrete_ty);\n \n-        let abstract_type_generics = tcx.generics_of(def_id);\n+        let opaque_type_generics = tcx.generics_of(def_id);\n \n         let span = tcx.def_span(def_id);\n \n@@ -365,7 +365,7 @@ impl<'a, 'tcx> InferCtxt<'a, 'tcx> {\n         // `['a]` for the first impl trait and `'b` for the\n         // second.\n         let mut least_region = None;\n-        for param in &abstract_type_generics.params {\n+        for param in &opaque_type_generics.params {\n             match param.kind {\n                 GenericParamDefKind::Lifetime => {}\n                 _ => continue,\n@@ -396,7 +396,7 @@ impl<'a, 'tcx> InferCtxt<'a, 'tcx> {\n                         // regions that appear in the impl trait.\n                         return self.generate_member_constraint(\n                             concrete_ty,\n-                            abstract_type_generics,\n+                            opaque_type_generics,\n                             opaque_defn,\n                             def_id,\n                             lr,\n@@ -427,7 +427,7 @@ impl<'a, 'tcx> InferCtxt<'a, 'tcx> {\n     fn generate_member_constraint(\n         &self,\n         concrete_ty: Ty<'tcx>,\n-        abstract_type_generics: &ty::Generics,\n+        opaque_type_generics: &ty::Generics,\n         opaque_defn: &OpaqueTypeDecl<'tcx>,\n         opaque_type_def_id: DefId,\n         conflict1: ty::Region<'tcx>,\n@@ -447,7 +447,7 @@ impl<'a, 'tcx> InferCtxt<'a, 'tcx> {\n         // type can be equal to any of the region parameters of the\n         // opaque type definition.\n         let choice_regions: Lrc<Vec<ty::Region<'tcx>>> = Lrc::new(\n-            abstract_type_generics\n+            opaque_type_generics\n                 .params\n                 .iter()\n                 .filter(|param| match param.kind {"}]}