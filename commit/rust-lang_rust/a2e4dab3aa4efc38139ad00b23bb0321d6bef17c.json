{"sha": "a2e4dab3aa4efc38139ad00b23bb0321d6bef17c", "node_id": "C_kwDOAAsO6NoAKGEyZTRkYWIzYWE0ZWZjMzgxMzlhZDAwYjIzYmIwMzIxZDZiZWYxN2M", "commit": {"author": {"name": "Dylan DPC", "email": "99973273+Dylan-DPC@users.noreply.github.com", "date": "2023-05-03T18:47:24Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2023-05-03T18:47:24Z"}, "message": "Rollup merge of #110874 - compiler-errors:index-op-specific, r=oli-obk\n\nAdjust obligation cause code for `find_and_report_unsatisfied_index_impl`\n\nMakes the error message a bit easier to read.", "tree": {"sha": "a6caffef2fe6a5b2dc84a092f66a2f3533b381ab", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a6caffef2fe6a5b2dc84a092f66a2f3533b381ab"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a2e4dab3aa4efc38139ad00b23bb0321d6bef17c", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJkUqw8CRBK7hj4Ov3rIwAArMoIAKj6qcwTLJYNiHOJYG7qmfZg\nMefBidQTmOX+HWeFtqlsCfZDqG1AgNJ8V+DAOVl38Nk6wHncm9oEcM3NWazgnjxI\nwCdBU25bU6P8Mu6BYS70Krk6fH+CCGR4iM6bPYft3NC5alvBfeRROPQcAHiUQpGd\nXcJLfP7N3V+sYEwxlIuF7hhNFo/Dg6mUuyB1D302ARApqvxQAxfcvRNKX8Tsfp7N\nS03wu9zkKsecIweDtcApXGfnNuS173Nc6l5eM6xhZ5wm0L3zXN8otOVjxnjOov8V\nE8mZiFJGhTvbrkZDT2XDFmQ/a1OfOx8R0vh2RczEJ9yK03C8XjIKpjOzCuZc/dQ=\n=jPQP\n-----END PGP SIGNATURE-----\n", "payload": "tree a6caffef2fe6a5b2dc84a092f66a2f3533b381ab\nparent 80df4ab403cbdaf0fc7a8301d8490ee60d7063bf\nparent 20742ea21ab0556d22321481bed1e8a6dad88c56\nauthor Dylan DPC <99973273+Dylan-DPC@users.noreply.github.com> 1683139644 +0530\ncommitter GitHub <noreply@github.com> 1683139644 +0530\n\nRollup merge of #110874 - compiler-errors:index-op-specific, r=oli-obk\n\nAdjust obligation cause code for `find_and_report_unsatisfied_index_impl`\n\nMakes the error message a bit easier to read.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a2e4dab3aa4efc38139ad00b23bb0321d6bef17c", "html_url": "https://github.com/rust-lang/rust/commit/a2e4dab3aa4efc38139ad00b23bb0321d6bef17c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a2e4dab3aa4efc38139ad00b23bb0321d6bef17c/comments", "author": {"login": "Dylan-DPC", "id": 99973273, "node_id": "U_kgDOBfV4mQ", "avatar_url": "https://avatars.githubusercontent.com/u/99973273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dylan-DPC", "html_url": "https://github.com/Dylan-DPC", "followers_url": "https://api.github.com/users/Dylan-DPC/followers", "following_url": "https://api.github.com/users/Dylan-DPC/following{/other_user}", "gists_url": "https://api.github.com/users/Dylan-DPC/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dylan-DPC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dylan-DPC/subscriptions", "organizations_url": "https://api.github.com/users/Dylan-DPC/orgs", "repos_url": "https://api.github.com/users/Dylan-DPC/repos", "events_url": "https://api.github.com/users/Dylan-DPC/events{/privacy}", "received_events_url": "https://api.github.com/users/Dylan-DPC/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "80df4ab403cbdaf0fc7a8301d8490ee60d7063bf", "url": "https://api.github.com/repos/rust-lang/rust/commits/80df4ab403cbdaf0fc7a8301d8490ee60d7063bf", "html_url": "https://github.com/rust-lang/rust/commit/80df4ab403cbdaf0fc7a8301d8490ee60d7063bf"}, {"sha": "20742ea21ab0556d22321481bed1e8a6dad88c56", "url": "https://api.github.com/repos/rust-lang/rust/commits/20742ea21ab0556d22321481bed1e8a6dad88c56", "html_url": "https://github.com/rust-lang/rust/commit/20742ea21ab0556d22321481bed1e8a6dad88c56"}], "stats": {"total": 43, "additions": 28, "deletions": 15}, "files": [{"sha": "047d8a82bfc3f63a7ce776989e450888a0bd2a2b", "filename": "compiler/rustc_hir_typeck/src/expr.rs", "status": "modified", "additions": 16, "deletions": 9, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/a2e4dab3aa4efc38139ad00b23bb0321d6bef17c/compiler%2Frustc_hir_typeck%2Fsrc%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a2e4dab3aa4efc38139ad00b23bb0321d6bef17c/compiler%2Frustc_hir_typeck%2Fsrc%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_hir_typeck%2Fsrc%2Fexpr.rs?ref=a2e4dab3aa4efc38139ad00b23bb0321d6bef17c", "patch": "@@ -2822,7 +2822,7 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n                     // but has nested obligations which are unsatisfied.\n                     for (base_t, _) in self.autoderef(base.span, base_t).silence_errors() {\n                         if let Some((_, index_ty, element_ty)) =\n-                            self.find_and_report_unsatisfied_index_impl(expr.hir_id, base, base_t)\n+                            self.find_and_report_unsatisfied_index_impl(base, base_t)\n                         {\n                             self.demand_coerce(idx, idx_t, index_ty, None, AllowTwoPhase::No);\n                             return element_ty;\n@@ -2881,7 +2881,6 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n     /// predicates cause this to be, so that the user can add them to fix their code.\n     fn find_and_report_unsatisfied_index_impl(\n         &self,\n-        index_expr_hir_id: HirId,\n         base_expr: &hir::Expr<'_>,\n         base_ty: Ty<'tcx>,\n     ) -> Option<(ErrorGuaranteed, Ty<'tcx>, Ty<'tcx>)> {\n@@ -2914,13 +2913,21 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n             // in the first place.\n             ocx.register_obligations(traits::predicates_for_generics(\n                 |idx, span| {\n-                    traits::ObligationCause::new(\n-                        base_expr.span,\n-                        self.body_id,\n-                        if span.is_dummy() {\n-                            traits::ExprItemObligation(impl_def_id, index_expr_hir_id, idx)\n-                        } else {\n-                            traits::ExprBindingObligation(impl_def_id, span, index_expr_hir_id, idx)\n+                    cause.clone().derived_cause(\n+                        ty::Binder::dummy(ty::TraitPredicate {\n+                            trait_ref: impl_trait_ref,\n+                            polarity: ty::ImplPolarity::Positive,\n+                            constness: ty::BoundConstness::NotConst,\n+                        }),\n+                        |derived| {\n+                            traits::ImplDerivedObligation(Box::new(\n+                                traits::ImplDerivedObligationCause {\n+                                    derived,\n+                                    impl_or_alias_def_id: impl_def_id,\n+                                    impl_def_predicate_index: Some(idx),\n+                                    span,\n+                                },\n+                            ))\n                         },\n                     )\n                 },"}, {"sha": "cdb23372c4ba5c4e273e603997395c33de64b02c", "filename": "tests/ui/typeck/bad-index-due-to-nested.stderr", "status": "modified", "additions": 12, "deletions": 6, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/a2e4dab3aa4efc38139ad00b23bb0321d6bef17c/tests%2Fui%2Ftypeck%2Fbad-index-due-to-nested.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/a2e4dab3aa4efc38139ad00b23bb0321d6bef17c/tests%2Fui%2Ftypeck%2Fbad-index-due-to-nested.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ftypeck%2Fbad-index-due-to-nested.stderr?ref=a2e4dab3aa4efc38139ad00b23bb0321d6bef17c", "patch": "@@ -4,11 +4,14 @@ error[E0277]: the trait bound `K: Hash` is not satisfied\n LL |     map[k]\n    |     ^^^ the trait `Hash` is not implemented for `K`\n    |\n-note: required by a bound in `<HashMap<K, V> as Index<&K>>`\n-  --> $DIR/bad-index-due-to-nested.rs:9:8\n+note: required for `HashMap<K, V>` to implement `Index<&K>`\n+  --> $DIR/bad-index-due-to-nested.rs:7:12\n    |\n+LL | impl<K, V> Index<&K> for HashMap<K, V>\n+   |            ^^^^^^^^^     ^^^^^^^^^^^^^\n+LL | where\n LL |     K: Hash,\n-   |        ^^^^ required by this bound in `<HashMap<K, V> as Index<&K>>`\n+   |        ---- unsatisfied trait bound introduced here\n help: consider restricting type parameter `K`\n    |\n LL | fn index<'a, K: std::hash::Hash, V>(map: &'a HashMap<K, V>, k: K) -> &'a V {\n@@ -20,11 +23,14 @@ error[E0277]: the trait bound `V: Copy` is not satisfied\n LL |     map[k]\n    |     ^^^ the trait `Copy` is not implemented for `V`\n    |\n-note: required by a bound in `<HashMap<K, V> as Index<&K>>`\n-  --> $DIR/bad-index-due-to-nested.rs:10:8\n+note: required for `HashMap<K, V>` to implement `Index<&K>`\n+  --> $DIR/bad-index-due-to-nested.rs:7:12\n    |\n+LL | impl<K, V> Index<&K> for HashMap<K, V>\n+   |            ^^^^^^^^^     ^^^^^^^^^^^^^\n+...\n LL |     V: Copy,\n-   |        ^^^^ required by this bound in `<HashMap<K, V> as Index<&K>>`\n+   |        ---- unsatisfied trait bound introduced here\n help: consider restricting type parameter `V`\n    |\n LL | fn index<'a, K, V: std::marker::Copy>(map: &'a HashMap<K, V>, k: K) -> &'a V {"}]}