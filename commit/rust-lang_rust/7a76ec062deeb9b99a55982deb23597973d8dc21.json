{"sha": "7a76ec062deeb9b99a55982deb23597973d8dc21", "node_id": "MDY6Q29tbWl0NzI0NzEyOjdhNzZlYzA2MmRlZWI5Yjk5YTU1OTgyZGViMjM1OTc5NzNkOGRjMjE=", "commit": {"author": {"name": "Caleb Cartwright", "email": "caleb.cartwright@outlook.com", "date": "2020-03-26T20:26:58Z"}, "committer": {"name": "Caleb Cartwright", "email": "caleb.cartwright@outlook.com", "date": "2020-03-26T20:26:58Z"}, "message": "deps: bump to rustc v644", "tree": {"sha": "011bfdedac4843b4f6cfa69a62557e8c026fc8ad", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/011bfdedac4843b4f6cfa69a62557e8c026fc8ad"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7a76ec062deeb9b99a55982deb23597973d8dc21", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7a76ec062deeb9b99a55982deb23597973d8dc21", "html_url": "https://github.com/rust-lang/rust/commit/7a76ec062deeb9b99a55982deb23597973d8dc21", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7a76ec062deeb9b99a55982deb23597973d8dc21/comments", "author": {"login": "calebcartwright", "id": 13042488, "node_id": "MDQ6VXNlcjEzMDQyNDg4", "avatar_url": "https://avatars.githubusercontent.com/u/13042488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/calebcartwright", "html_url": "https://github.com/calebcartwright", "followers_url": "https://api.github.com/users/calebcartwright/followers", "following_url": "https://api.github.com/users/calebcartwright/following{/other_user}", "gists_url": "https://api.github.com/users/calebcartwright/gists{/gist_id}", "starred_url": "https://api.github.com/users/calebcartwright/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/calebcartwright/subscriptions", "organizations_url": "https://api.github.com/users/calebcartwright/orgs", "repos_url": "https://api.github.com/users/calebcartwright/repos", "events_url": "https://api.github.com/users/calebcartwright/events{/privacy}", "received_events_url": "https://api.github.com/users/calebcartwright/received_events", "type": "User", "site_admin": false}, "committer": {"login": "calebcartwright", "id": 13042488, "node_id": "MDQ6VXNlcjEzMDQyNDg4", "avatar_url": "https://avatars.githubusercontent.com/u/13042488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/calebcartwright", "html_url": "https://github.com/calebcartwright", "followers_url": "https://api.github.com/users/calebcartwright/followers", "following_url": "https://api.github.com/users/calebcartwright/following{/other_user}", "gists_url": "https://api.github.com/users/calebcartwright/gists{/gist_id}", "starred_url": "https://api.github.com/users/calebcartwright/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/calebcartwright/subscriptions", "organizations_url": "https://api.github.com/users/calebcartwright/orgs", "repos_url": "https://api.github.com/users/calebcartwright/repos", "events_url": "https://api.github.com/users/calebcartwright/events{/privacy}", "received_events_url": "https://api.github.com/users/calebcartwright/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9f53665f91be16c9aa7afd83f7c79357fec9152b", "url": "https://api.github.com/repos/rust-lang/rust/commits/9f53665f91be16c9aa7afd83f7c79357fec9152b", "html_url": "https://github.com/rust-lang/rust/commit/9f53665f91be16c9aa7afd83f7c79357fec9152b"}], "stats": {"total": 297, "additions": 148, "deletions": 149}, "files": [{"sha": "c127b4b7db9277292f0813f28bda20c711742ca5", "filename": "Cargo.lock", "status": "modified", "additions": 100, "deletions": 101, "changes": 201, "blob_url": "https://github.com/rust-lang/rust/blob/7a76ec062deeb9b99a55982deb23597973d8dc21/Cargo.lock", "raw_url": "https://github.com/rust-lang/rust/raw/7a76ec062deeb9b99a55982deb23597973d8dc21/Cargo.lock", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Cargo.lock?ref=7a76ec062deeb9b99a55982deb23597973d8dc21", "patch": "@@ -617,49 +617,49 @@ dependencies = [\n \n [[package]]\n name = \"rustc-ap-arena\"\n-version = \"642.0.0\"\n+version = \"644.0.0\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n dependencies = [\n- \"rustc-ap-rustc_data_structures 642.0.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"rustc-ap-rustc_data_structures 644.0.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"smallvec 1.2.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n \n [[package]]\n name = \"rustc-ap-graphviz\"\n-version = \"642.0.0\"\n+version = \"644.0.0\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n \n [[package]]\n name = \"rustc-ap-rustc_ast_pretty\"\n-version = \"642.0.0\"\n+version = \"644.0.0\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n dependencies = [\n  \"log 0.4.8 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"rustc-ap-rustc_data_structures 642.0.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"rustc-ap-rustc_span 642.0.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"rustc-ap-syntax 642.0.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"rustc-ap-rustc_data_structures 644.0.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"rustc-ap-rustc_span 644.0.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"rustc-ap-syntax 644.0.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n \n [[package]]\n name = \"rustc-ap-rustc_attr\"\n-version = \"642.0.0\"\n-source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-dependencies = [\n- \"rustc-ap-rustc_ast_pretty 642.0.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"rustc-ap-rustc_data_structures 642.0.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"rustc-ap-rustc_errors 642.0.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"rustc-ap-rustc_feature 642.0.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"rustc-ap-rustc_macros 642.0.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"rustc-ap-rustc_session 642.0.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"rustc-ap-rustc_span 642.0.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"rustc-ap-serialize 642.0.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"rustc-ap-syntax 642.0.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n+version = \"644.0.0\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+dependencies = [\n+ \"rustc-ap-rustc_ast_pretty 644.0.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"rustc-ap-rustc_data_structures 644.0.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"rustc-ap-rustc_errors 644.0.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"rustc-ap-rustc_feature 644.0.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"rustc-ap-rustc_macros 644.0.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"rustc-ap-rustc_session 644.0.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"rustc-ap-rustc_span 644.0.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"rustc-ap-serialize 644.0.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"rustc-ap-syntax 644.0.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"smallvec 1.2.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n \n [[package]]\n name = \"rustc-ap-rustc_data_structures\"\n-version = \"642.0.0\"\n+version = \"644.0.0\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n dependencies = [\n  \"bitflags 1.2.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n@@ -672,9 +672,9 @@ dependencies = [\n  \"log 0.4.8 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"measureme 0.7.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"parking_lot 0.9.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"rustc-ap-graphviz 642.0.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"rustc-ap-rustc_index 642.0.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"rustc-ap-serialize 642.0.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"rustc-ap-graphviz 644.0.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"rustc-ap-rustc_index 644.0.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"rustc-ap-serialize 644.0.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"rustc-hash 1.0.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"rustc-rayon 0.3.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"rustc-rayon-core 0.3.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n@@ -685,15 +685,15 @@ dependencies = [\n \n [[package]]\n name = \"rustc-ap-rustc_errors\"\n-version = \"642.0.0\"\n+version = \"644.0.0\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n dependencies = [\n  \"annotate-snippets 0.6.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"atty 0.2.13 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"log 0.4.8 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"rustc-ap-rustc_data_structures 642.0.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"rustc-ap-rustc_span 642.0.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"rustc-ap-serialize 642.0.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"rustc-ap-rustc_data_structures 644.0.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"rustc-ap-rustc_span 644.0.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"rustc-ap-serialize 644.0.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"termcolor 1.0.5 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"termize 0.1.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"unicode-width 0.1.6 (registry+https://github.com/rust-lang/crates.io-index)\",\n@@ -702,42 +702,41 @@ dependencies = [\n \n [[package]]\n name = \"rustc-ap-rustc_feature\"\n-version = \"642.0.0\"\n+version = \"644.0.0\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n dependencies = [\n  \"lazy_static 1.4.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"rustc-ap-rustc_data_structures 642.0.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"rustc-ap-rustc_span 642.0.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"rustc-ap-rustc_data_structures 644.0.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"rustc-ap-rustc_span 644.0.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n \n [[package]]\n name = \"rustc-ap-rustc_fs_util\"\n-version = \"642.0.0\"\n+version = \"644.0.0\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n \n [[package]]\n name = \"rustc-ap-rustc_index\"\n-version = \"642.0.0\"\n+version = \"644.0.0\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n dependencies = [\n- \"rustc-ap-serialize 642.0.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"rustc-ap-serialize 644.0.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"smallvec 1.2.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n \n [[package]]\n name = \"rustc-ap-rustc_lexer\"\n-version = \"642.0.0\"\n+version = \"644.0.0\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n dependencies = [\n  \"unicode-xid 0.2.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n \n [[package]]\n name = \"rustc-ap-rustc_macros\"\n-version = \"642.0.0\"\n+version = \"644.0.0\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n dependencies = [\n- \"itertools 0.8.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"proc-macro2 1.0.6 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"quote 1.0.2 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"syn 1.0.5 (registry+https://github.com/rust-lang/crates.io-index)\",\n@@ -746,75 +745,75 @@ dependencies = [\n \n [[package]]\n name = \"rustc-ap-rustc_parse\"\n-version = \"642.0.0\"\n+version = \"644.0.0\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n dependencies = [\n  \"bitflags 1.2.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"log 0.4.8 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"rustc-ap-rustc_ast_pretty 642.0.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"rustc-ap-rustc_attr 642.0.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"rustc-ap-rustc_data_structures 642.0.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"rustc-ap-rustc_errors 642.0.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"rustc-ap-rustc_feature 642.0.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"rustc-ap-rustc_lexer 642.0.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"rustc-ap-rustc_session 642.0.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"rustc-ap-rustc_span 642.0.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"rustc-ap-syntax 642.0.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"rustc-ap-rustc_ast_pretty 644.0.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"rustc-ap-rustc_attr 644.0.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"rustc-ap-rustc_data_structures 644.0.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"rustc-ap-rustc_errors 644.0.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"rustc-ap-rustc_feature 644.0.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"rustc-ap-rustc_lexer 644.0.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"rustc-ap-rustc_session 644.0.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"rustc-ap-rustc_span 644.0.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"rustc-ap-syntax 644.0.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"smallvec 1.2.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"unicode-normalization 0.1.12 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n \n [[package]]\n name = \"rustc-ap-rustc_session\"\n-version = \"642.0.0\"\n+version = \"644.0.0\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n dependencies = [\n  \"log 0.4.8 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"num_cpus 1.10.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"rustc-ap-rustc_data_structures 642.0.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"rustc-ap-rustc_errors 642.0.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"rustc-ap-rustc_feature 642.0.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"rustc-ap-rustc_fs_util 642.0.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"rustc-ap-rustc_index 642.0.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"rustc-ap-rustc_span 642.0.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"rustc-ap-rustc_target 642.0.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"rustc-ap-serialize 642.0.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"rustc-ap-syntax 642.0.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"rustc-ap-rustc_data_structures 644.0.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"rustc-ap-rustc_errors 644.0.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"rustc-ap-rustc_feature 644.0.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"rustc-ap-rustc_fs_util 644.0.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"rustc-ap-rustc_index 644.0.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"rustc-ap-rustc_span 644.0.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"rustc-ap-rustc_target 644.0.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"rustc-ap-serialize 644.0.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"rustc-ap-syntax 644.0.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n \n [[package]]\n name = \"rustc-ap-rustc_span\"\n-version = \"642.0.0\"\n+version = \"644.0.0\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n dependencies = [\n  \"cfg-if 0.1.10 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"log 0.4.8 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"rustc-ap-arena 642.0.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"rustc-ap-rustc_data_structures 642.0.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"rustc-ap-rustc_index 642.0.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"rustc-ap-rustc_macros 642.0.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"rustc-ap-serialize 642.0.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"rustc-ap-arena 644.0.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"rustc-ap-rustc_data_structures 644.0.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"rustc-ap-rustc_index 644.0.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"rustc-ap-rustc_macros 644.0.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"rustc-ap-serialize 644.0.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"scoped-tls 1.0.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"unicode-width 0.1.6 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n \n [[package]]\n name = \"rustc-ap-rustc_target\"\n-version = \"642.0.0\"\n+version = \"644.0.0\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n dependencies = [\n  \"bitflags 1.2.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"log 0.4.8 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"rustc-ap-rustc_data_structures 642.0.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"rustc-ap-rustc_index 642.0.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"rustc-ap-rustc_macros 642.0.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"rustc-ap-rustc_span 642.0.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"rustc-ap-serialize 642.0.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"rustc-ap-rustc_data_structures 644.0.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"rustc-ap-rustc_index 644.0.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"rustc-ap-rustc_macros 644.0.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"rustc-ap-rustc_span 644.0.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"rustc-ap-serialize 644.0.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n \n [[package]]\n name = \"rustc-ap-serialize\"\n-version = \"642.0.0\"\n+version = \"644.0.0\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n dependencies = [\n  \"indexmap 1.3.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n@@ -823,16 +822,16 @@ dependencies = [\n \n [[package]]\n name = \"rustc-ap-syntax\"\n-version = \"642.0.0\"\n+version = \"644.0.0\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n dependencies = [\n  \"log 0.4.8 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"rustc-ap-rustc_data_structures 642.0.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"rustc-ap-rustc_index 642.0.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"rustc-ap-rustc_lexer 642.0.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"rustc-ap-rustc_macros 642.0.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"rustc-ap-rustc_span 642.0.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"rustc-ap-serialize 642.0.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"rustc-ap-rustc_data_structures 644.0.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"rustc-ap-rustc_index 644.0.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"rustc-ap-rustc_lexer 644.0.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"rustc-ap-rustc_macros 644.0.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"rustc-ap-rustc_span 644.0.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"rustc-ap-serialize 644.0.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"scoped-tls 1.0.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"smallvec 1.2.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n@@ -912,14 +911,14 @@ dependencies = [\n  \"lazy_static 1.4.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"log 0.4.8 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"regex 1.3.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"rustc-ap-rustc_ast_pretty 642.0.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"rustc-ap-rustc_data_structures 642.0.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"rustc-ap-rustc_errors 642.0.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"rustc-ap-rustc_parse 642.0.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"rustc-ap-rustc_session 642.0.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"rustc-ap-rustc_span 642.0.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"rustc-ap-rustc_target 642.0.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"rustc-ap-syntax 642.0.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"rustc-ap-rustc_ast_pretty 644.0.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"rustc-ap-rustc_data_structures 644.0.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"rustc-ap-rustc_errors 644.0.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"rustc-ap-rustc_parse 644.0.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"rustc-ap-rustc_session 644.0.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"rustc-ap-rustc_span 644.0.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"rustc-ap-rustc_target 644.0.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"rustc-ap-syntax 644.0.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"rustc-workspace-hack 1.0.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"rustfmt-config_proc_macro 0.2.0\",\n  \"serde 1.0.101 (registry+https://github.com/rust-lang/crates.io-index)\",\n@@ -1276,23 +1275,23 @@ dependencies = [\n \"checksum regex 1.3.1 (registry+https://github.com/rust-lang/crates.io-index)\" = \"dc220bd33bdce8f093101afe22a037b8eb0e5af33592e6a9caafff0d4cb81cbd\"\n \"checksum regex-syntax 0.6.12 (registry+https://github.com/rust-lang/crates.io-index)\" = \"11a7e20d1cce64ef2fed88b66d347f88bd9babb82845b2b858f3edbf59a4f716\"\n \"checksum rust-argon2 0.5.1 (registry+https://github.com/rust-lang/crates.io-index)\" = \"4ca4eaef519b494d1f2848fc602d18816fed808a981aedf4f1f00ceb7c9d32cf\"\n-\"checksum rustc-ap-arena 642.0.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"ea82fa3d9a8add7422228ca1a2cbba0784fa8861f56148ff64da08b3c7921b03\"\n-\"checksum rustc-ap-graphviz 642.0.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"638d0b2b3bcf99824e0cb5a25dbc547b61dc20942e11daf6a97e981918aa18e5\"\n-\"checksum rustc-ap-rustc_ast_pretty 642.0.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"d38bab04dd676dee6d2f9670506a18c31bfce38bf7f8420aa83eb1140ecde049\"\n-\"checksum rustc-ap-rustc_attr 642.0.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"10b843ba8b1ed43739133047673b9f6a54d3b3b4d328d69c6ea89ff971395f35\"\n-\"checksum rustc-ap-rustc_data_structures 642.0.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"dc3d1c6d0a80ab0c1df76405377cec0f3d5423fb5b0953a8eac70a2ad6c44df2\"\n-\"checksum rustc-ap-rustc_errors 642.0.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"4909a1eca29331332257230f29120a8ff68c9e37d868c564fcd599e430cf8914\"\n-\"checksum rustc-ap-rustc_feature 642.0.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"63ab887a181d795cf5fd3edadf367760deafb90aefb844f168ab5255266e3478\"\n-\"checksum rustc-ap-rustc_fs_util 642.0.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"70814116df3c5fbec8f06f6a1d013ca481f620fd22a9475754e9bf3ee9ba70d8\"\n-\"checksum rustc-ap-rustc_index 642.0.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"ac1bf1d3cf3d119d41353d6fd229ef7272d5097bc0924de021c0294bf86d48bf\"\n-\"checksum rustc-ap-rustc_lexer 642.0.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"4cda21a32cebdc11ec4f5393aa2fcde5ed1b2f673a8571e5a4dcdf07e4ae9cac\"\n-\"checksum rustc-ap-rustc_macros 642.0.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"75c47b48ea51910ecfd853c9248a9bf4c767bc823449ab6a1d864dff65fbae16\"\n-\"checksum rustc-ap-rustc_parse 642.0.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"abd88e89cd5b5d28dcd3a347a3d534c08627d9455570dc1a2d402cb8437b9d30\"\n-\"checksum rustc-ap-rustc_session 642.0.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"5b8487b4575fbb2d1fc6f1cd61225efd108a4d36817e6fb9b643d57fcae9cb12\"\n-\"checksum rustc-ap-rustc_span 642.0.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"f69746c0d4c21bf20a5bb2bd247261a1aa8631f04202d7303352942dde70d987\"\n-\"checksum rustc-ap-rustc_target 642.0.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"8bbc6ae09b5d42ec66edd520e8412e0615c53a7c93607fe33dc4abab60ba7c8b\"\n-\"checksum rustc-ap-serialize 642.0.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"e13a1ead0252fc3d96da4c336a95950be6795f2b00c84a67ccadf26142f8cb41\"\n-\"checksum rustc-ap-syntax 642.0.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"e1f59f48ca3a2ec16a7e82e718ed5aadf9c9e08cf63015d28b4e774767524a6a\"\n+\"checksum rustc-ap-arena 644.0.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"80a4f7385e1a0bd8869b1c49738eb6a5c552d66cbea1b880d0481048588fc565\"\n+\"checksum rustc-ap-graphviz 644.0.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"da134a8459132ec83aba664fbc791c5e409539534bcdeb9df3d29b6ca7c37a76\"\n+\"checksum rustc-ap-rustc_ast_pretty 644.0.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"41b1280428ae4a3e6b944f2045578a4737cf367db1ac1bdcf66e6e3f886ec981\"\n+\"checksum rustc-ap-rustc_attr 644.0.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"b3f27b42985109679eadcf07e0b0f227b9ba3d203173766b2c1a9ee0bbda05e4\"\n+\"checksum rustc-ap-rustc_data_structures 644.0.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"c8d3f4519ec1dad0b704129a4f891e7c75239850fa683765a63f163ea8ffa7b9\"\n+\"checksum rustc-ap-rustc_errors 644.0.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"4e870484235e89654b66b10467862f3d60a698c0d5983aa51b42563733b77f71\"\n+\"checksum rustc-ap-rustc_feature 644.0.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"03e3e31e687890adfbc606e8f41e460408bc5b7a94c785d36e7cebc4c9193d00\"\n+\"checksum rustc-ap-rustc_fs_util 644.0.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"23e0f0111c0b6ce58385784ecb4945f6b02c449591c13087dba5e82bbd900ac1\"\n+\"checksum rustc-ap-rustc_index 644.0.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"808d42ae6e32607870710ff7ac0faa89b4ce8f8a4aa0a0d875e8ea62e4911a6c\"\n+\"checksum rustc-ap-rustc_lexer 644.0.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"f1494650ca657dd164503e03ebe5a3172fdfe1750e427aa7e139fbda4460817e\"\n+\"checksum rustc-ap-rustc_macros 644.0.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"df5ad90674b7aac5606fc923d1aa8b804a11a4e65bf2fe850447b28a2bd9a011\"\n+\"checksum rustc-ap-rustc_parse 644.0.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"cb47830cfbb7b05eba5d5ec7c53dfb57dd76d09977e9a78eb7798a2b606bfec6\"\n+\"checksum rustc-ap-rustc_session 644.0.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"d44935089371d9e4c91eb90c9a3358b44c0b59ef1b4552f05cecb8025b1971f0\"\n+\"checksum rustc-ap-rustc_span 644.0.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"ccd71ce20995448afe2af68c32d06b01ee160d55ef9e5eebe81a7ca085324dd0\"\n+\"checksum rustc-ap-rustc_target 644.0.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"9bf8ba8d508f3e4e9e625566295bc1437d0327e7cd3c821e08f65e5801da6904\"\n+\"checksum rustc-ap-serialize 644.0.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"e7b029cc11516918c37b55230edbfc693dabbe1481013cadc506bdd345e63587\"\n+\"checksum rustc-ap-syntax 644.0.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"478155ef59211e934a79bd1ed4dbbbb5d1226bd8921e2aa7edb23d8f5f8d1080\"\n \"checksum rustc-demangle 0.1.16 (registry+https://github.com/rust-lang/crates.io-index)\" = \"4c691c0e608126e00913e33f0ccf3727d5fc84573623b8d65b2df340b5201783\"\n \"checksum rustc-hash 1.0.1 (registry+https://github.com/rust-lang/crates.io-index)\" = \"7540fc8b0c49f096ee9c961cda096467dce8084bec6bdca2fc83895fd9b28cb8\"\n \"checksum rustc-rayon 0.3.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"f32767f90d938f1b7199a174ef249ae1924f6e5bbdb9d112fea141e016f25b3a\""}, {"sha": "5f1aae6c8eb506e2df6b08be583205108b7a6bb5", "filename": "Cargo.toml", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/7a76ec062deeb9b99a55982deb23597973d8dc21/Cargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/7a76ec062deeb9b99a55982deb23597973d8dc21/Cargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Cargo.toml?ref=7a76ec062deeb9b99a55982deb23597973d8dc21", "patch": "@@ -64,35 +64,35 @@ rustc-workspace-hack = \"1.0.0\"\n \n [dependencies.rustc_ast_pretty]\n package = \"rustc-ap-rustc_ast_pretty\"\n-version = \"642.0.0\"\n+version = \"644.0.0\"\n \n [dependencies.rustc_data_structures]\n package = \"rustc-ap-rustc_data_structures\"\n-version = \"642.0.0\"\n+version = \"644.0.0\"\n \n [dependencies.rustc_errors]\n package = \"rustc-ap-rustc_errors\"\n-version = \"642.0.0\"\n+version = \"644.0.0\"\n \n [dependencies.rustc_parse]\n package = \"rustc-ap-rustc_parse\"\n-version = \"642.0.0\"\n+version = \"644.0.0\"\n \n [dependencies.rustc_session]\n package = \"rustc-ap-rustc_session\"\n-version = \"642.0.0\"\n+version = \"644.0.0\"\n \n [dependencies.rustc_span]\n package = \"rustc-ap-rustc_span\"\n-version = \"642.0.0\"\n+version = \"644.0.0\"\n \n [dependencies.rustc_target]\n package = \"rustc-ap-rustc_target\"\n-version = \"642.0.0\"\n+version = \"644.0.0\"\n \n [dependencies.syntax]\n package = \"rustc-ap-syntax\"\n-version = \"642.0.0\"\n+version = \"644.0.0\"\n \n [dev-dependencies]\n lazy_static = \"1.0.0\""}, {"sha": "56bb19b7e54b6d0e453a47faae518182daf88adc", "filename": "src/closures.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/7a76ec062deeb9b99a55982deb23597973d8dc21/src%2Fclosures.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7a76ec062deeb9b99a55982deb23597973d8dc21/src%2Fclosures.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fclosures.rs?ref=7a76ec062deeb9b99a55982deb23597973d8dc21", "patch": "@@ -25,7 +25,7 @@ use crate::utils::{last_line_width, left_most_sub_expr, stmt_expr, NodeIdExt};\n \n pub(crate) fn rewrite_closure(\n     capture: ast::CaptureBy,\n-    is_async: &ast::IsAsync,\n+    is_async: &ast::Async,\n     movability: ast::Movability,\n     fn_decl: &ast::FnDecl,\n     body: &ast::Expr,\n@@ -50,7 +50,7 @@ pub(crate) fn rewrite_closure(\n         }\n \n         let result = match fn_decl.output {\n-            ast::FunctionRetTy::Default(_) if !context.inside_macro() => {\n+            ast::FnRetTy::Default(_) if !context.inside_macro() => {\n                 try_rewrite_without_block(body, &prefix, context, shape, body_shape)\n             }\n             _ => None,\n@@ -214,7 +214,7 @@ fn rewrite_closure_block(\n // Return type is (prefix, extra_offset)\n fn rewrite_closure_fn_decl(\n     capture: ast::CaptureBy,\n-    asyncness: &ast::IsAsync,\n+    asyncness: &ast::Async,\n     movability: ast::Movability,\n     fn_decl: &ast::FnDecl,\n     body: &ast::Expr,"}, {"sha": "b9622faef4a2902fca590329320bd114dec1bd51", "filename": "src/items.rs", "status": "modified", "additions": 17, "deletions": 17, "changes": 34, "blob_url": "https://github.com/rust-lang/rust/blob/7a76ec062deeb9b99a55982deb23597973d8dc21/src%2Fitems.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7a76ec062deeb9b99a55982deb23597973d8dc21/src%2Fitems.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fitems.rs?ref=7a76ec062deeb9b99a55982deb23597973d8dc21", "patch": "@@ -165,10 +165,10 @@ pub(crate) struct FnSig<'a> {\n     decl: &'a ast::FnDecl,\n     generics: &'a ast::Generics,\n     ext: ast::Extern,\n-    is_async: Cow<'a, ast::IsAsync>,\n-    constness: ast::Constness,\n+    is_async: Cow<'a, ast::Async>,\n+    constness: ast::Const,\n     defaultness: ast::Defaultness,\n-    unsafety: ast::Unsafety,\n+    unsafety: ast::Unsafe,\n     visibility: ast::Visibility,\n }\n \n@@ -182,10 +182,10 @@ impl<'a> FnSig<'a> {\n             decl,\n             generics,\n             ext: ast::Extern::None,\n-            is_async: Cow::Owned(ast::IsAsync::NotAsync),\n-            constness: ast::Constness::NotConst,\n+            is_async: Cow::Owned(ast::Async::No),\n+            constness: ast::Const::No,\n             defaultness: ast::Defaultness::Final,\n-            unsafety: ast::Unsafety::Normal,\n+            unsafety: ast::Unsafe::No,\n             visibility: vis,\n         }\n     }\n@@ -196,8 +196,8 @@ impl<'a> FnSig<'a> {\n     ) -> FnSig<'a> {\n         FnSig {\n             unsafety: method_sig.header.unsafety,\n-            is_async: Cow::Borrowed(&method_sig.header.asyncness.node),\n-            constness: method_sig.header.constness.node,\n+            is_async: Cow::Borrowed(&method_sig.header.asyncness),\n+            constness: method_sig.header.constness,\n             defaultness: ast::Defaultness::Final,\n             ext: method_sig.header.ext,\n             decl: &*method_sig.decl,\n@@ -224,8 +224,8 @@ impl<'a> FnSig<'a> {\n                     decl,\n                     generics,\n                     ext: fn_sig.header.ext,\n-                    constness: fn_sig.header.constness.node,\n-                    is_async: Cow::Borrowed(&fn_sig.header.asyncness.node),\n+                    constness: fn_sig.header.constness,\n+                    is_async: Cow::Borrowed(&fn_sig.header.asyncness),\n                     defaultness,\n                     unsafety: fn_sig.header.unsafety,\n                     visibility: vis.clone(),\n@@ -1908,11 +1908,11 @@ pub(crate) fn rewrite_associated_impl_type(\n     }\n }\n \n-impl Rewrite for ast::FunctionRetTy {\n+impl Rewrite for ast::FnRetTy {\n     fn rewrite(&self, context: &RewriteContext<'_>, shape: Shape) -> Option<String> {\n         match *self {\n-            ast::FunctionRetTy::Default(_) => Some(String::new()),\n-            ast::FunctionRetTy::Ty(ref ty) => {\n+            ast::FnRetTy::Default(_) => Some(String::new()),\n+            ast::FnRetTy::Ty(ref ty) => {\n                 if context.config.version() == Version::One\n                     || context.config.indent_style() == IndentStyle::Visual\n                 {\n@@ -2290,7 +2290,7 @@ fn rewrite_fn_base(\n     }\n \n     // Return type.\n-    if let ast::FunctionRetTy::Ty(..) = fd.output {\n+    if let ast::FnRetTy::Ty(..) = fd.output {\n         let ret_should_indent = match context.config.indent_style() {\n             // If our params are block layout then we surely must have space.\n             IndentStyle::Block if put_params_in_block || fd.inputs.is_empty() => false,\n@@ -2396,8 +2396,8 @@ fn rewrite_fn_base(\n     }\n \n     let pos_before_where = match fd.output {\n-        ast::FunctionRetTy::Default(..) => params_span.hi(),\n-        ast::FunctionRetTy::Ty(ref ty) => ty.span.hi(),\n+        ast::FnRetTy::Default(..) => params_span.hi(),\n+        ast::FnRetTy::Ty(ref ty) => ty.span.hi(),\n     };\n \n     let is_params_multi_lined = param_str.contains('\\n');\n@@ -2425,7 +2425,7 @@ fn rewrite_fn_base(\n     // If there are neither where-clause nor return type, we may be missing comments between\n     // params and `{`.\n     if where_clause_str.is_empty() {\n-        if let ast::FunctionRetTy::Default(ret_span) = fd.output {\n+        if let ast::FnRetTy::Default(ret_span) = fd.output {\n             match recover_missing_comment_in_span(\n                 mk_sp(params_span.hi(), ret_span.hi()),\n                 shape,"}, {"sha": "70d808047f8b967b0d31fb09233b62d2081e33a7", "filename": "src/modules.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/7a76ec062deeb9b99a55982deb23597973d8dc21/src%2Fmodules.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7a76ec062deeb9b99a55982deb23597973d8dc21/src%2Fmodules.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fmodules.rs?ref=7a76ec062deeb9b99a55982deb23597973d8dc21", "patch": "@@ -35,9 +35,9 @@ struct Directory {\n }\n \n impl<'a> Directory {\n-    fn to_syntax_directory(&'a self) -> rustc_parse::Directory<'a> {\n+    fn to_syntax_directory(&'a self) -> rustc_parse::Directory {\n         rustc_parse::Directory {\n-            path: Cow::Borrowed(&self.path),\n+            path: self.path.clone(),\n             ownership: self.ownership.clone(),\n         }\n     }"}, {"sha": "a2055b6f4ea15b5ae16ff5f47541514778475ffa", "filename": "src/modules/visitor.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/7a76ec062deeb9b99a55982deb23597973d8dc21/src%2Fmodules%2Fvisitor.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7a76ec062deeb9b99a55982deb23597973d8dc21/src%2Fmodules%2Fvisitor.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fmodules%2Fvisitor.rs?ref=7a76ec062deeb9b99a55982deb23597973d8dc21", "patch": "@@ -15,11 +15,11 @@ pub(crate) struct ModItem {\n pub(crate) struct CfgIfVisitor<'a> {\n     parse_sess: &'a ParseSess,\n     mods: Vec<ModItem>,\n-    base_dir: Directory<'a>,\n+    base_dir: Directory,\n }\n \n impl<'a> CfgIfVisitor<'a> {\n-    pub(crate) fn new(parse_sess: &'a ParseSess, base_dir: Directory<'a>) -> CfgIfVisitor<'a> {\n+    pub(crate) fn new(parse_sess: &'a ParseSess, base_dir: Directory) -> CfgIfVisitor<'a> {\n         CfgIfVisitor {\n             mods: vec![],\n             parse_sess,"}, {"sha": "47ddac9b98b1381ba9f962ca8c8ec6efc3e5da3e", "filename": "src/spanned.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/7a76ec062deeb9b99a55982deb23597973d8dc21/src%2Fspanned.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7a76ec062deeb9b99a55982deb23597973d8dc21/src%2Fspanned.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fspanned.rs?ref=7a76ec062deeb9b99a55982deb23597973d8dc21", "patch": "@@ -151,11 +151,11 @@ impl Spanned for ast::WherePredicate {\n     }\n }\n \n-impl Spanned for ast::FunctionRetTy {\n+impl Spanned for ast::FnRetTy {\n     fn span(&self) -> Span {\n         match *self {\n-            ast::FunctionRetTy::Default(span) => span,\n-            ast::FunctionRetTy::Ty(ref ty) => ty.span,\n+            ast::FnRetTy::Default(span) => span,\n+            ast::FnRetTy::Ty(ref ty) => ty.span,\n         }\n     }\n }"}, {"sha": "d30693fd388d951e067e7b3f5a975dbed9f62240", "filename": "src/types.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/7a76ec062deeb9b99a55982deb23597973d8dc21/src%2Ftypes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7a76ec062deeb9b99a55982deb23597973d8dc21/src%2Ftypes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftypes.rs?ref=7a76ec062deeb9b99a55982deb23597973d8dc21", "patch": "@@ -2,7 +2,7 @@ use std::iter::ExactSizeIterator;\n use std::ops::Deref;\n \n use rustc_span::{symbol::kw, BytePos, Span};\n-use syntax::ast::{self, FunctionRetTy, Mutability};\n+use syntax::ast::{self, FnRetTy, Mutability};\n \n use crate::config::lists::*;\n use crate::config::{IndentStyle, TypeDensity, Version};\n@@ -292,7 +292,7 @@ fn rewrite_segment(\n \n fn format_function_type<'a, I>(\n     inputs: I,\n-    output: &FunctionRetTy,\n+    output: &FnRetTy,\n     variadic: bool,\n     span: Span,\n     context: &RewriteContext<'_>,\n@@ -311,11 +311,11 @@ where\n         IndentStyle::Visual => shape.block_left(4)?,\n     };\n     let output = match *output {\n-        FunctionRetTy::Ty(ref ty) => {\n+        FnRetTy::Ty(ref ty) => {\n             let type_str = ty.rewrite(context, ty_shape)?;\n             format!(\" -> {}\", type_str)\n         }\n-        FunctionRetTy::Default(..) => String::new(),\n+        FnRetTy::Default(..) => String::new(),\n     };\n \n     let list_shape = if context.use_block_indent() {"}, {"sha": "f17dbd2561d1093708c31411ffc9ee7049f9a929", "filename": "src/utils.rs", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/7a76ec062deeb9b99a55982deb23597973d8dc21/src%2Futils.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7a76ec062deeb9b99a55982deb23597973d8dc21/src%2Futils.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Futils.rs?ref=7a76ec062deeb9b99a55982deb23597973d8dc21", "patch": "@@ -86,18 +86,18 @@ pub(crate) fn format_visibility(\n }\n \n #[inline]\n-pub(crate) fn format_async(is_async: &ast::IsAsync) -> &'static str {\n+pub(crate) fn format_async(is_async: &ast::Async) -> &'static str {\n     match is_async {\n-        ast::IsAsync::Async { .. } => \"async \",\n-        ast::IsAsync::NotAsync => \"\",\n+        ast::Async::Yes { .. } => \"async \",\n+        ast::Async::No => \"\",\n     }\n }\n \n #[inline]\n-pub(crate) fn format_constness(constness: ast::Constness) -> &'static str {\n+pub(crate) fn format_constness(constness: ast::Const) -> &'static str {\n     match constness {\n-        ast::Constness::Const => \"const \",\n-        ast::Constness::NotConst => \"\",\n+        ast::Const::Yes(..) => \"const \",\n+        ast::Const::No => \"\",\n     }\n }\n \n@@ -110,10 +110,10 @@ pub(crate) fn format_defaultness(defaultness: ast::Defaultness) -> &'static str\n }\n \n #[inline]\n-pub(crate) fn format_unsafety(unsafety: ast::Unsafety) -> &'static str {\n+pub(crate) fn format_unsafety(unsafety: ast::Unsafe) -> &'static str {\n     match unsafety {\n-        ast::Unsafety::Unsafe => \"unsafe \",\n-        ast::Unsafety::Normal => \"\",\n+        ast::Unsafe::Yes(..) => \"unsafe \",\n+        ast::Unsafe::No => \"\",\n     }\n }\n "}]}