{"sha": "47464e556c160ce705c2e3c84f501ad4e8dbb123", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ3NDY0ZTU1NmMxNjBjZTcwNWMyZTNjODRmNTAxYWQ0ZThkYmIxMjM=", "commit": {"author": {"name": "Kirill Bulatov", "email": "mail4score@gmail.com", "date": "2020-12-01T20:46:06Z"}, "committer": {"name": "Kirill Bulatov", "email": "mail4score@gmail.com", "date": "2020-12-07T21:41:08Z"}, "message": "Properly fill client completion resolve capabilities data", "tree": {"sha": "b007b475fccd932c9697fb07f70885ecf693c374", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b007b475fccd932c9697fb07f70885ecf693c374"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/47464e556c160ce705c2e3c84f501ad4e8dbb123", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/47464e556c160ce705c2e3c84f501ad4e8dbb123", "html_url": "https://github.com/rust-lang/rust/commit/47464e556c160ce705c2e3c84f501ad4e8dbb123", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/47464e556c160ce705c2e3c84f501ad4e8dbb123/comments", "author": {"login": "SomeoneToIgnore", "id": 2690773, "node_id": "MDQ6VXNlcjI2OTA3NzM=", "avatar_url": "https://avatars.githubusercontent.com/u/2690773?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SomeoneToIgnore", "html_url": "https://github.com/SomeoneToIgnore", "followers_url": "https://api.github.com/users/SomeoneToIgnore/followers", "following_url": "https://api.github.com/users/SomeoneToIgnore/following{/other_user}", "gists_url": "https://api.github.com/users/SomeoneToIgnore/gists{/gist_id}", "starred_url": "https://api.github.com/users/SomeoneToIgnore/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SomeoneToIgnore/subscriptions", "organizations_url": "https://api.github.com/users/SomeoneToIgnore/orgs", "repos_url": "https://api.github.com/users/SomeoneToIgnore/repos", "events_url": "https://api.github.com/users/SomeoneToIgnore/events{/privacy}", "received_events_url": "https://api.github.com/users/SomeoneToIgnore/received_events", "type": "User", "site_admin": false}, "committer": {"login": "SomeoneToIgnore", "id": 2690773, "node_id": "MDQ6VXNlcjI2OTA3NzM=", "avatar_url": "https://avatars.githubusercontent.com/u/2690773?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SomeoneToIgnore", "html_url": "https://github.com/SomeoneToIgnore", "followers_url": "https://api.github.com/users/SomeoneToIgnore/followers", "following_url": "https://api.github.com/users/SomeoneToIgnore/following{/other_user}", "gists_url": "https://api.github.com/users/SomeoneToIgnore/gists{/gist_id}", "starred_url": "https://api.github.com/users/SomeoneToIgnore/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SomeoneToIgnore/subscriptions", "organizations_url": "https://api.github.com/users/SomeoneToIgnore/orgs", "repos_url": "https://api.github.com/users/SomeoneToIgnore/repos", "events_url": "https://api.github.com/users/SomeoneToIgnore/events{/privacy}", "received_events_url": "https://api.github.com/users/SomeoneToIgnore/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9a4daffe16f81e154b542a195fdf81463e5212bb", "url": "https://api.github.com/repos/rust-lang/rust/commits/9a4daffe16f81e154b542a195fdf81463e5212bb", "html_url": "https://github.com/rust-lang/rust/commit/9a4daffe16f81e154b542a195fdf81463e5212bb"}], "stats": {"total": 61, "additions": 56, "deletions": 5}, "files": [{"sha": "736af455ef0b0217f76a076b26685ea33a5eb8e2", "filename": "crates/completion/src/config.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/47464e556c160ce705c2e3c84f501ad4e8dbb123/crates%2Fcompletion%2Fsrc%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/47464e556c160ce705c2e3c84f501ad4e8dbb123/crates%2Fcompletion%2Fsrc%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fcompletion%2Fsrc%2Fconfig.rs?ref=47464e556c160ce705c2e3c84f501ad4e8dbb123", "patch": "@@ -5,6 +5,7 @@\n //! completions if we are allowed to.\n \n use ide_db::helpers::insert_use::MergeBehaviour;\n+use rustc_hash::FxHashSet;\n \n #[derive(Clone, Debug, PartialEq, Eq)]\n pub struct CompletionConfig {\n@@ -14,6 +15,14 @@ pub struct CompletionConfig {\n     pub add_call_argument_snippets: bool,\n     pub snippet_cap: Option<SnippetCap>,\n     pub merge: Option<MergeBehaviour>,\n+    pub resolve_capabilities: FxHashSet<CompletionResolveCapability>,\n+}\n+\n+#[derive(Debug, Copy, Clone, Hash, Eq, PartialEq)]\n+pub enum CompletionResolveCapability {\n+    Documentation,\n+    Detail,\n+    AdditionalTextEdits,\n }\n \n impl CompletionConfig {\n@@ -36,6 +45,7 @@ impl Default for CompletionConfig {\n             add_call_argument_snippets: true,\n             snippet_cap: Some(SnippetCap { _private: () }),\n             merge: Some(MergeBehaviour::Full),\n+            resolve_capabilities: FxHashSet::default(),\n         }\n     }\n }"}, {"sha": "c689b0ddee57b36c6fd3f5de41be29346c021ff9", "filename": "crates/completion/src/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/47464e556c160ce705c2e3c84f501ad4e8dbb123/crates%2Fcompletion%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/47464e556c160ce705c2e3c84f501ad4e8dbb123/crates%2Fcompletion%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fcompletion%2Fsrc%2Flib.rs?ref=47464e556c160ce705c2e3c84f501ad4e8dbb123", "patch": "@@ -17,7 +17,7 @@ use ide_db::RootDatabase;\n use crate::{completions::Completions, context::CompletionContext, item::CompletionKind};\n \n pub use crate::{\n-    config::CompletionConfig,\n+    config::{CompletionConfig, CompletionResolveCapability},\n     item::{CompletionItem, CompletionItemKind, CompletionScore, ImportToAdd, InsertTextFormat},\n };\n "}, {"sha": "d1a27f3a599568a688dd751d78ef94298df9324b", "filename": "crates/ide/src/lib.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/47464e556c160ce705c2e3c84f501ad4e8dbb123/crates%2Fide%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/47464e556c160ce705c2e3c84f501ad4e8dbb123/crates%2Fide%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Flib.rs?ref=47464e556c160ce705c2e3c84f501ad4e8dbb123", "patch": "@@ -80,8 +80,8 @@ pub use crate::{\n     },\n };\n pub use completion::{\n-    CompletionConfig, CompletionItem, CompletionItemKind, CompletionScore, ImportToAdd,\n-    InsertTextFormat,\n+    CompletionConfig, CompletionItem, CompletionItemKind, CompletionResolveCapability,\n+    CompletionScore, ImportToAdd, InsertTextFormat,\n };\n pub use ide_db::{\n     call_info::CallInfo,"}, {"sha": "d6b862088b280f7f6477083bfa1c0978fbd59f8b", "filename": "crates/rust-analyzer/src/caps.rs", "status": "modified", "additions": 40, "deletions": 1, "changes": 41, "blob_url": "https://github.com/rust-lang/rust/blob/47464e556c160ce705c2e3c84f501ad4e8dbb123/crates%2Frust-analyzer%2Fsrc%2Fcaps.rs", "raw_url": "https://github.com/rust-lang/rust/raw/47464e556c160ce705c2e3c84f501ad4e8dbb123/crates%2Frust-analyzer%2Fsrc%2Fcaps.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fcaps.rs?ref=47464e556c160ce705c2e3c84f501ad4e8dbb123", "patch": "@@ -1,6 +1,7 @@\n //! Advertizes the capabilities of the LSP Server.\n use std::env;\n \n+use ide::CompletionResolveCapability;\n use lsp_types::{\n     CallHierarchyServerCapability, ClientCapabilities, CodeActionKind, CodeActionOptions,\n     CodeActionProviderCapability, CodeLensOptions, CompletionOptions,\n@@ -11,6 +12,7 @@ use lsp_types::{\n     TextDocumentSyncKind, TextDocumentSyncOptions, TypeDefinitionProviderCapability,\n     WorkDoneProgressOptions,\n };\n+use rustc_hash::FxHashSet;\n use serde_json::json;\n \n use crate::semantic_tokens;\n@@ -48,7 +50,9 @@ pub fn server_capabilities(client_caps: &ClientCapabilities) -> ServerCapabiliti\n         document_symbol_provider: Some(OneOf::Left(true)),\n         workspace_symbol_provider: Some(OneOf::Left(true)),\n         code_action_provider: Some(code_action_capabilities(client_caps)),\n-        code_lens_provider: Some(CodeLensOptions { resolve_provider: Some(true) }),\n+        code_lens_provider: Some(CodeLensOptions {\n+            resolve_provider: resolve_provider(client_caps),\n+        }),\n         document_formatting_provider: Some(OneOf::Left(true)),\n         document_range_formatting_provider: None,\n         document_on_type_formatting_provider: Some(DocumentOnTypeFormattingOptions {\n@@ -93,6 +97,41 @@ pub fn server_capabilities(client_caps: &ClientCapabilities) -> ServerCapabiliti\n     }\n }\n \n+fn resolve_provider(client_caps: &ClientCapabilities) -> Option<bool> {\n+    if enabled_resolve_capabilities(client_caps)?.is_empty() {\n+        None\n+    } else {\n+        Some(true)\n+    }\n+}\n+\n+/// Parses client capabilities and returns all that rust-analyzer supports.\n+pub fn enabled_resolve_capabilities(\n+    caps: &ClientCapabilities,\n+) -> Option<FxHashSet<CompletionResolveCapability>> {\n+    Some(\n+        caps.text_document\n+            .as_ref()?\n+            .completion\n+            .as_ref()?\n+            .completion_item\n+            .as_ref()?\n+            .resolve_support\n+            .as_ref()?\n+            .properties\n+            .iter()\n+            .filter_map(|cap_string| {\n+                Some(match cap_string.as_str() {\n+                    \"additionalTextEdits\" => CompletionResolveCapability::AdditionalTextEdits,\n+                    \"detail\" => CompletionResolveCapability::Detail,\n+                    \"documentation\" => CompletionResolveCapability::Documentation,\n+                    _unsupported => return None,\n+                })\n+            })\n+            .collect(),\n+    )\n+}\n+\n fn code_action_capabilities(client_caps: &ClientCapabilities) -> CodeActionProviderCapability {\n     client_caps\n         .text_document"}, {"sha": "83f09782969d68857aabd75172e0d3d31a815da1", "filename": "crates/rust-analyzer/src/config.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/47464e556c160ce705c2e3c84f501ad4e8dbb123/crates%2Frust-analyzer%2Fsrc%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/47464e556c160ce705c2e3c84f501ad4e8dbb123/crates%2Frust-analyzer%2Fsrc%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fconfig.rs?ref=47464e556c160ce705c2e3c84f501ad4e8dbb123", "patch": "@@ -19,7 +19,7 @@ use rustc_hash::FxHashSet;\n use serde::Deserialize;\n use vfs::AbsPathBuf;\n \n-use crate::diagnostics::DiagnosticsMapConfig;\n+use crate::{caps::enabled_resolve_capabilities, diagnostics::DiagnosticsMapConfig};\n \n #[derive(Debug, Clone)]\n pub struct Config {\n@@ -388,6 +388,8 @@ impl Config {\n             }\n \n             self.completion.allow_snippets(false);\n+            self.completion.resolve_capabilities =\n+                enabled_resolve_capabilities(caps).unwrap_or_default();\n             if let Some(completion) = &doc_caps.completion {\n                 if let Some(completion_item) = &completion.completion_item {\n                     if let Some(value) = completion_item.snippet_support {"}]}