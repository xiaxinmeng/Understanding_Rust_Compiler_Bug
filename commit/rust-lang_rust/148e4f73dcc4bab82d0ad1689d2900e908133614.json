{"sha": "148e4f73dcc4bab82d0ad1689d2900e908133614", "node_id": "C_kwDOAAsO6NoAKDE0OGU0ZjczZGNjNGJhYjgyZDBhZDE2ODlkMjkwMGU5MDgxMzM2MTQ", "commit": {"author": {"name": "Michael Goulet", "email": "michael@errs.io", "date": "2023-01-14T04:46:23Z"}, "committer": {"name": "Michael Goulet", "email": "michael@errs.io", "date": "2023-01-17T17:40:38Z"}, "message": "new trait solver: only consider goal changed if response is not identity", "tree": {"sha": "3d9b50726c548d0d78cef9d03cb3d7cd452b7c31", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3d9b50726c548d0d78cef9d03cb3d7cd452b7c31"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/148e4f73dcc4bab82d0ad1689d2900e908133614", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/148e4f73dcc4bab82d0ad1689d2900e908133614", "html_url": "https://github.com/rust-lang/rust/commit/148e4f73dcc4bab82d0ad1689d2900e908133614", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/148e4f73dcc4bab82d0ad1689d2900e908133614/comments", "author": {"login": "compiler-errors", "id": 3674314, "node_id": "MDQ6VXNlcjM2NzQzMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3674314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/compiler-errors", "html_url": "https://github.com/compiler-errors", "followers_url": "https://api.github.com/users/compiler-errors/followers", "following_url": "https://api.github.com/users/compiler-errors/following{/other_user}", "gists_url": "https://api.github.com/users/compiler-errors/gists{/gist_id}", "starred_url": "https://api.github.com/users/compiler-errors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/compiler-errors/subscriptions", "organizations_url": "https://api.github.com/users/compiler-errors/orgs", "repos_url": "https://api.github.com/users/compiler-errors/repos", "events_url": "https://api.github.com/users/compiler-errors/events{/privacy}", "received_events_url": "https://api.github.com/users/compiler-errors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "compiler-errors", "id": 3674314, "node_id": "MDQ6VXNlcjM2NzQzMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3674314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/compiler-errors", "html_url": "https://github.com/compiler-errors", "followers_url": "https://api.github.com/users/compiler-errors/followers", "following_url": "https://api.github.com/users/compiler-errors/following{/other_user}", "gists_url": "https://api.github.com/users/compiler-errors/gists{/gist_id}", "starred_url": "https://api.github.com/users/compiler-errors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/compiler-errors/subscriptions", "organizations_url": "https://api.github.com/users/compiler-errors/orgs", "repos_url": "https://api.github.com/users/compiler-errors/repos", "events_url": "https://api.github.com/users/compiler-errors/events{/privacy}", "received_events_url": "https://api.github.com/users/compiler-errors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "38a76f33220c4b9d13dda1fa8f6c629c8a7bcc5d", "url": "https://api.github.com/repos/rust-lang/rust/commits/38a76f33220c4b9d13dda1fa8f6c629c8a7bcc5d", "html_url": "https://github.com/rust-lang/rust/commit/38a76f33220c4b9d13dda1fa8f6c629c8a7bcc5d"}], "stats": {"total": 18, "additions": 17, "deletions": 1}, "files": [{"sha": "7f3567c08be775f5ff35d614fc0a98dfa136b1c2", "filename": "compiler/rustc_middle/src/infer/canonical.rs", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/148e4f73dcc4bab82d0ad1689d2900e908133614/compiler%2Frustc_middle%2Fsrc%2Finfer%2Fcanonical.rs", "raw_url": "https://github.com/rust-lang/rust/raw/148e4f73dcc4bab82d0ad1689d2900e908133614/compiler%2Frustc_middle%2Fsrc%2Finfer%2Fcanonical.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Finfer%2Fcanonical.rs?ref=148e4f73dcc4bab82d0ad1689d2900e908133614", "patch": "@@ -68,6 +68,22 @@ pub struct CanonicalVarValues<'tcx> {\n     pub var_values: IndexVec<BoundVar, GenericArg<'tcx>>,\n }\n \n+impl CanonicalVarValues<'_> {\n+    pub fn is_identity(&self) -> bool {\n+        self.var_values.iter_enumerated().all(|(bv, arg)| match arg.unpack() {\n+            ty::GenericArgKind::Lifetime(r) => {\n+                matches!(*r, ty::ReLateBound(ty::INNERMOST, br) if br.var == bv)\n+            }\n+            ty::GenericArgKind::Type(ty) => {\n+                matches!(*ty.kind(), ty::Bound(ty::INNERMOST, bt) if bt.var == bv)\n+            }\n+            ty::GenericArgKind::Const(ct) => {\n+                matches!(ct.kind(), ty::ConstKind::Bound(ty::INNERMOST, bc) if bc == bv)\n+            }\n+        })\n+    }\n+}\n+\n /// When we canonicalize a value to form a query, we wind up replacing\n /// various parts of it with canonical variables. This struct stores\n /// those replaced bits to remember for when we process the query"}, {"sha": "80775b7aaf2c068277d72864e47549a49c10de26", "filename": "compiler/rustc_trait_selection/src/solve/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/148e4f73dcc4bab82d0ad1689d2900e908133614/compiler%2Frustc_trait_selection%2Fsrc%2Fsolve%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/148e4f73dcc4bab82d0ad1689d2900e908133614/compiler%2Frustc_trait_selection%2Fsrc%2Fsolve%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_trait_selection%2Fsrc%2Fsolve%2Fmod.rs?ref=148e4f73dcc4bab82d0ad1689d2900e908133614", "patch": "@@ -178,7 +178,7 @@ impl<'tcx> EvalCtxt<'tcx> {\n         let canonical_goal = infcx.canonicalize_query(goal, &mut orig_values);\n         let canonical_response = self.evaluate_canonical_goal(canonical_goal)?;\n         Ok((\n-            true, // FIXME: check whether `var_values` are an identity substitution.\n+            !canonical_response.value.var_values.is_identity(),\n             instantiate_canonical_query_response(infcx, &orig_values, canonical_response),\n         ))\n     }"}]}