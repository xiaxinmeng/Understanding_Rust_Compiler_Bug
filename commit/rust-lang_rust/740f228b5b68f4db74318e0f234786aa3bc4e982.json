{"sha": "740f228b5b68f4db74318e0f234786aa3bc4e982", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc0MGYyMjhiNWI2OGY0ZGI3NDMxOGUwZjIzNDc4NmFhM2JjNGU5ODI=", "commit": {"author": {"name": "Dylan MacKenzie", "email": "ecstaticmorse@gmail.com", "date": "2020-04-21T17:14:21Z"}, "committer": {"name": "Dylan MacKenzie", "email": "ecstaticmorse@gmail.com", "date": "2020-04-23T01:24:20Z"}, "message": "Remove `predecessors_for`\n\nThere is no `Arc::map` equivalent to `LockGuard::map`", "tree": {"sha": "ec6b3872de0bbfcdb0c756c8ac1b7ce329d569b0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ec6b3872de0bbfcdb0c756c8ac1b7ce329d569b0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/740f228b5b68f4db74318e0f234786aa3bc4e982", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/740f228b5b68f4db74318e0f234786aa3bc4e982", "html_url": "https://github.com/rust-lang/rust/commit/740f228b5b68f4db74318e0f234786aa3bc4e982", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/740f228b5b68f4db74318e0f234786aa3bc4e982/comments", "author": {"login": "ecstatic-morse", "id": 29463364, "node_id": "MDQ6VXNlcjI5NDYzMzY0", "avatar_url": "https://avatars.githubusercontent.com/u/29463364?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ecstatic-morse", "html_url": "https://github.com/ecstatic-morse", "followers_url": "https://api.github.com/users/ecstatic-morse/followers", "following_url": "https://api.github.com/users/ecstatic-morse/following{/other_user}", "gists_url": "https://api.github.com/users/ecstatic-morse/gists{/gist_id}", "starred_url": "https://api.github.com/users/ecstatic-morse/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ecstatic-morse/subscriptions", "organizations_url": "https://api.github.com/users/ecstatic-morse/orgs", "repos_url": "https://api.github.com/users/ecstatic-morse/repos", "events_url": "https://api.github.com/users/ecstatic-morse/events{/privacy}", "received_events_url": "https://api.github.com/users/ecstatic-morse/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ecstatic-morse", "id": 29463364, "node_id": "MDQ6VXNlcjI5NDYzMzY0", "avatar_url": "https://avatars.githubusercontent.com/u/29463364?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ecstatic-morse", "html_url": "https://github.com/ecstatic-morse", "followers_url": "https://api.github.com/users/ecstatic-morse/followers", "following_url": "https://api.github.com/users/ecstatic-morse/following{/other_user}", "gists_url": "https://api.github.com/users/ecstatic-morse/gists{/gist_id}", "starred_url": "https://api.github.com/users/ecstatic-morse/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ecstatic-morse/subscriptions", "organizations_url": "https://api.github.com/users/ecstatic-morse/orgs", "repos_url": "https://api.github.com/users/ecstatic-morse/repos", "events_url": "https://api.github.com/users/ecstatic-morse/events{/privacy}", "received_events_url": "https://api.github.com/users/ecstatic-morse/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "db9b05aeb52b77d1eb780ee005979b63d093c214", "url": "https://api.github.com/repos/rust-lang/rust/commits/db9b05aeb52b77d1eb780ee005979b63d093c214", "html_url": "https://github.com/rust-lang/rust/commit/db9b05aeb52b77d1eb780ee005979b63d093c214"}], "stats": {"total": 21, "additions": 5, "deletions": 16}, "files": [{"sha": "1516143cb1ac957edf54639359a0aa964f3b5246", "filename": "src/librustc_codegen_ssa/mir/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/740f228b5b68f4db74318e0f234786aa3bc4e982/src%2Flibrustc_codegen_ssa%2Fmir%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/740f228b5b68f4db74318e0f234786aa3bc4e982/src%2Flibrustc_codegen_ssa%2Fmir%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_ssa%2Fmir%2Fmod.rs?ref=740f228b5b68f4db74318e0f234786aa3bc4e982", "patch": "@@ -155,7 +155,7 @@ pub fn codegen_mir<'a, 'tcx, Bx: BuilderMethods<'a, 'tcx>>(\n     let cleanup_kinds = analyze::cleanup_kinds(&mir);\n     // Allocate a `Block` for every basic block, except\n     // the start block, if nothing loops back to it.\n-    let reentrant_start_block = !mir.predecessors_for(mir::START_BLOCK).is_empty();\n+    let reentrant_start_block = !mir.predecessors()[mir::START_BLOCK].is_empty();\n     let block_bxs: IndexVec<mir::BasicBlock, Bx::BasicBlock> = mir\n         .basic_blocks()\n         .indices()"}, {"sha": "566817ea0d02793574aa2dea8e01a2611aec8ff5", "filename": "src/librustc_middle/mir/mod.rs", "status": "modified", "additions": 1, "deletions": 12, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/740f228b5b68f4db74318e0f234786aa3bc4e982/src%2Flibrustc_middle%2Fmir%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/740f228b5b68f4db74318e0f234786aa3bc4e982/src%2Flibrustc_middle%2Fmir%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_middle%2Fmir%2Fmod.rs?ref=740f228b5b68f4db74318e0f234786aa3bc4e982", "patch": "@@ -23,14 +23,12 @@ use rustc_ast::ast::Name;\n use rustc_data_structures::fx::FxHashSet;\n use rustc_data_structures::graph::dominators::{dominators, Dominators};\n use rustc_data_structures::graph::{self, GraphSuccessors};\n-use rustc_data_structures::sync::MappedLockGuard;\n use rustc_index::bit_set::BitMatrix;\n use rustc_index::vec::{Idx, IndexVec};\n use rustc_macros::HashStable;\n use rustc_serialize::{Decodable, Encodable};\n use rustc_span::symbol::Symbol;\n use rustc_span::{Span, DUMMY_SP};\n-use smallvec::SmallVec;\n use std::borrow::Cow;\n use std::fmt::{self, Debug, Display, Formatter, Write};\n use std::ops::{Index, IndexMut};\n@@ -392,15 +390,6 @@ impl<'tcx> Body<'tcx> {\n         Location { block: bb, statement_index: self[bb].statements.len() }\n     }\n \n-    #[inline]\n-    pub fn predecessors_for(\n-        &self,\n-        bb: BasicBlock,\n-    ) -> impl std::ops::Deref<Target = SmallVec<[BasicBlock; 4]>> + '_ {\n-        let predecessors = self.predecessor_cache.compute(&self.basic_blocks);\n-        MappedLockGuard::map(predecessors, |preds| &mut preds[bb])\n-    }\n-\n     #[inline]\n     pub fn predecessors(&self) -> impl std::ops::Deref<Target = Predecessors> + '_ {\n         self.predecessor_cache.compute(&self.basic_blocks)\n@@ -2676,7 +2665,7 @@ impl graph::GraphPredecessors<'graph> for Body<'tcx> {\n impl graph::WithPredecessors for Body<'tcx> {\n     #[inline]\n     fn predecessors(&self, node: Self::Node) -> <Self as graph::GraphPredecessors<'_>>::Iter {\n-        self.predecessors_for(node).clone().into_iter()\n+        self.predecessors()[node].clone().into_iter()\n     }\n }\n "}, {"sha": "8f771fd738ddda5f32b1c8b577262e3fae9ef056", "filename": "src/librustc_mir/borrow_check/diagnostics/conflict_errors.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/740f228b5b68f4db74318e0f234786aa3bc4e982/src%2Flibrustc_mir%2Fborrow_check%2Fdiagnostics%2Fconflict_errors.rs", "raw_url": "https://github.com/rust-lang/rust/raw/740f228b5b68f4db74318e0f234786aa3bc4e982/src%2Flibrustc_mir%2Fborrow_check%2Fdiagnostics%2Fconflict_errors.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check%2Fdiagnostics%2Fconflict_errors.rs?ref=740f228b5b68f4db74318e0f234786aa3bc4e982", "patch": "@@ -1268,7 +1268,7 @@ impl<'cx, 'tcx> MirBorrowckCtxt<'cx, 'tcx> {\n             location: Location,\n         ) -> impl Iterator<Item = Location> + 'a {\n             if location.statement_index == 0 {\n-                let predecessors = body.predecessors_for(location.block).to_vec();\n+                let predecessors = body.predecessors()[location.block].to_vec();\n                 Either::Left(predecessors.into_iter().map(move |bb| body.terminator_loc(bb)))\n             } else {\n                 Either::Right(std::iter::once(Location {"}, {"sha": "6cd814962c6133fac8e86a8d544b5984327c19d8", "filename": "src/librustc_mir/borrow_check/region_infer/values.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/740f228b5b68f4db74318e0f234786aa3bc4e982/src%2Flibrustc_mir%2Fborrow_check%2Fregion_infer%2Fvalues.rs", "raw_url": "https://github.com/rust-lang/rust/raw/740f228b5b68f4db74318e0f234786aa3bc4e982/src%2Flibrustc_mir%2Fborrow_check%2Fregion_infer%2Fvalues.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check%2Fregion_infer%2Fvalues.rs?ref=740f228b5b68f4db74318e0f234786aa3bc4e982", "patch": "@@ -89,7 +89,7 @@ impl RegionValueElements {\n             // If this is a basic block head, then the predecessors are\n             // the terminators of other basic blocks\n             stack.extend(\n-                body.predecessors_for(block)\n+                body.predecessors()[block]\n                     .iter()\n                     .map(|&pred_bb| body.terminator_loc(pred_bb))\n                     .map(|pred_loc| self.point_from_location(pred_loc)),"}, {"sha": "ec52a08c7b2162094da07e03d8f0e203c42947cb", "filename": "src/librustc_mir/borrow_check/type_check/liveness/trace.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/740f228b5b68f4db74318e0f234786aa3bc4e982/src%2Flibrustc_mir%2Fborrow_check%2Ftype_check%2Fliveness%2Ftrace.rs", "raw_url": "https://github.com/rust-lang/rust/raw/740f228b5b68f4db74318e0f234786aa3bc4e982/src%2Flibrustc_mir%2Fborrow_check%2Ftype_check%2Fliveness%2Ftrace.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check%2Ftype_check%2Fliveness%2Ftrace.rs?ref=740f228b5b68f4db74318e0f234786aa3bc4e982", "patch": "@@ -303,7 +303,7 @@ impl LivenessResults<'me, 'typeck, 'flow, 'tcx> {\n         }\n \n         let body = self.cx.body;\n-        for &pred_block in body.predecessors_for(block).iter() {\n+        for &pred_block in body.predecessors()[block].iter() {\n             debug!(\"compute_drop_live_points_for_block: pred_block = {:?}\", pred_block,);\n \n             // Check whether the variable is (at least partially)"}]}