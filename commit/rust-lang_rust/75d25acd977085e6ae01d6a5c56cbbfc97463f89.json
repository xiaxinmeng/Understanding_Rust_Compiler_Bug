{"sha": "75d25acd977085e6ae01d6a5c56cbbfc97463f89", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc1ZDI1YWNkOTc3MDg1ZTZhZTAxZDZhNWM1NmNiYmZjOTc0NjNmODk=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2017-11-10T16:42:49Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2017-11-10T16:42:49Z"}, "message": "Auto merge of #45804 - gnzlbg:div_intr, r=alexcrichton\n\n[intrinsics] add missing div and rem vector intrinsics", "tree": {"sha": "2273d4d61d36c50e108907b9837223779d04e455", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2273d4d61d36c50e108907b9837223779d04e455"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/75d25acd977085e6ae01d6a5c56cbbfc97463f89", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/75d25acd977085e6ae01d6a5c56cbbfc97463f89", "html_url": "https://github.com/rust-lang/rust/commit/75d25acd977085e6ae01d6a5c56cbbfc97463f89", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/75d25acd977085e6ae01d6a5c56cbbfc97463f89/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "563dc5171fd5d96f9714b4e722ad1d80a25f1dba", "url": "https://api.github.com/repos/rust-lang/rust/commits/563dc5171fd5d96f9714b4e722ad1d80a25f1dba", "html_url": "https://github.com/rust-lang/rust/commit/563dc5171fd5d96f9714b4e722ad1d80a25f1dba"}, {"sha": "01ced6ecda12add7251b39b6f27bf8d627df7d8a", "url": "https://api.github.com/repos/rust-lang/rust/commits/01ced6ecda12add7251b39b6f27bf8d627df7d8a", "html_url": "https://github.com/rust-lang/rust/commit/01ced6ecda12add7251b39b6f27bf8d627df7d8a"}], "stats": {"total": 30, "additions": 23, "deletions": 7}, "files": [{"sha": "2f1a95038eae59a543a580eb16198bc26f5e43d5", "filename": "src/librustc_trans/intrinsic.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/75d25acd977085e6ae01d6a5c56cbbfc97463f89/src%2Flibrustc_trans%2Fintrinsic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/75d25acd977085e6ae01d6a5c56cbbfc97463f89/src%2Flibrustc_trans%2Fintrinsic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Fintrinsic.rs?ref=75d25acd977085e6ae01d6a5c56cbbfc97463f89", "patch": "@@ -1203,7 +1203,8 @@ fn generic_simd_intrinsic<'a, 'tcx>(\n         simd_add: TyUint, TyInt => add, TyFloat => fadd;\n         simd_sub: TyUint, TyInt => sub, TyFloat => fsub;\n         simd_mul: TyUint, TyInt => mul, TyFloat => fmul;\n-        simd_div: TyFloat => fdiv;\n+        simd_div: TyUint => udiv, TyInt => sdiv, TyFloat => fdiv;\n+        simd_rem: TyUint => urem, TyInt => srem, TyFloat => frem;\n         simd_shl: TyUint, TyInt => shl;\n         simd_shr: TyUint => lshr, TyInt => ashr;\n         simd_and: TyUint, TyInt => and;"}, {"sha": "6ef0c37a31583e4b96a8d05ac98e7bd50feec30f", "filename": "src/librustc_typeck/check/intrinsic.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/75d25acd977085e6ae01d6a5c56cbbfc97463f89/src%2Flibrustc_typeck%2Fcheck%2Fintrinsic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/75d25acd977085e6ae01d6a5c56cbbfc97463f89/src%2Flibrustc_typeck%2Fcheck%2Fintrinsic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fintrinsic.rs?ref=75d25acd977085e6ae01d6a5c56cbbfc97463f89", "patch": "@@ -348,7 +348,7 @@ pub fn check_platform_intrinsic_type<'a, 'tcx>(tcx: TyCtxt<'a, 'tcx, 'tcx>,\n         \"simd_eq\" | \"simd_ne\" | \"simd_lt\" | \"simd_le\" | \"simd_gt\" | \"simd_ge\" => {\n             (2, vec![param(0), param(0)], param(1))\n         }\n-        \"simd_add\" | \"simd_sub\" | \"simd_mul\" |\n+        \"simd_add\" | \"simd_sub\" | \"simd_mul\" | \"simd_rem\" |\n         \"simd_div\" | \"simd_shl\" | \"simd_shr\" |\n         \"simd_and\" | \"simd_or\" | \"simd_xor\" => {\n             (1, vec![param(0), param(0)], param(0))"}, {"sha": "ee08ca05e803fca35452eef49dd4c0affdc46edb", "filename": "src/test/compile-fail/simd-intrinsic-generic-arithmetic.rs", "status": "modified", "additions": 6, "deletions": 5, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/75d25acd977085e6ae01d6a5c56cbbfc97463f89/src%2Ftest%2Fcompile-fail%2Fsimd-intrinsic-generic-arithmetic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/75d25acd977085e6ae01d6a5c56cbbfc97463f89/src%2Ftest%2Fcompile-fail%2Fsimd-intrinsic-generic-arithmetic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fsimd-intrinsic-generic-arithmetic.rs?ref=75d25acd977085e6ae01d6a5c56cbbfc97463f89", "patch": "@@ -27,6 +27,7 @@ extern \"platform-intrinsic\" {\n     fn simd_sub<T>(x: T, y: T) -> T;\n     fn simd_mul<T>(x: T, y: T) -> T;\n     fn simd_div<T>(x: T, y: T) -> T;\n+    fn simd_rem<T>(x: T, y: T) -> T;\n     fn simd_shl<T>(x: T, y: T) -> T;\n     fn simd_shr<T>(x: T, y: T) -> T;\n     fn simd_and<T>(x: T, y: T) -> T;\n@@ -49,8 +50,12 @@ fn main() {\n         simd_mul(x, x);\n         simd_mul(y, y);\n         simd_mul(z, z);\n-\n+        simd_div(x, x);\n+        simd_div(y, y);\n         simd_div(z, z);\n+        simd_rem(x, x);\n+        simd_rem(y, y);\n+        simd_rem(z, z);\n \n         simd_shl(x, x);\n         simd_shl(y, y);\n@@ -84,10 +89,6 @@ fn main() {\n         //~^ ERROR expected SIMD input type, found non-SIMD `i32`\n \n \n-        simd_div(x, x);\n-//~^ ERROR unsupported operation on `i32x4` with element `i32`\n-        simd_div(y, y);\n-//~^ ERROR unsupported operation on `u32x4` with element `u32`\n         simd_shl(z, z);\n //~^ ERROR unsupported operation on `f32x4` with element `f32`\n         simd_shr(z, z);"}, {"sha": "1894cd0084bcb167a4c4d8e50da6efaf6390fb92", "filename": "src/test/run-pass/simd-intrinsic-generic-arithmetic.rs", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/75d25acd977085e6ae01d6a5c56cbbfc97463f89/src%2Ftest%2Frun-pass%2Fsimd-intrinsic-generic-arithmetic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/75d25acd977085e6ae01d6a5c56cbbfc97463f89/src%2Ftest%2Frun-pass%2Fsimd-intrinsic-generic-arithmetic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fsimd-intrinsic-generic-arithmetic.rs?ref=75d25acd977085e6ae01d6a5c56cbbfc97463f89", "patch": "@@ -35,6 +35,7 @@ extern \"platform-intrinsic\" {\n     fn simd_sub<T>(x: T, y: T) -> T;\n     fn simd_mul<T>(x: T, y: T) -> T;\n     fn simd_div<T>(x: T, y: T) -> T;\n+    fn simd_rem<T>(x: T, y: T) -> T;\n     fn simd_shl<T>(x: T, y: T) -> T;\n     fn simd_shr<T>(x: T, y: T) -> T;\n     fn simd_and<T>(x: T, y: T) -> T;\n@@ -72,9 +73,22 @@ fn main() {\n         all_eq!(simd_sub(z2, z1), f32x4(1.0, 1.0, 1.0, 1.0));\n         all_eq!(simd_sub(z1, z2), f32x4(-1.0, -1.0, -1.0, -1.0));\n \n+        all_eq!(simd_div(x1, x1), i32x4(1, 1, 1, 1));\n+        all_eq!(simd_div(i32x4(2, 4, 6, 8), i32x4(2, 2, 2, 2)), x1);\n+        all_eq!(simd_div(y1, y1), u32x4(1, 1, 1, 1));\n+        all_eq!(simd_div(u32x4(2, 4, 6, 8), u32x4(2, 2, 2, 2)), y1);\n+        all_eq!(simd_div(z1, z1), f32x4(1.0, 1.0, 1.0, 1.0));\n         all_eq!(simd_div(z1, z2), f32x4(1.0/2.0, 2.0/3.0, 3.0/4.0, 4.0/5.0));\n         all_eq!(simd_div(z2, z1), f32x4(2.0/1.0, 3.0/2.0, 4.0/3.0, 5.0/4.0));\n \n+        all_eq!(simd_rem(x1, x1), i32x4(0, 0, 0, 0));\n+        all_eq!(simd_rem(x2, x1), i32x4(0, 1, 1, 1));\n+        all_eq!(simd_rem(y1, y1), u32x4(0, 0, 0, 0));\n+        all_eq!(simd_rem(y2, y1), u32x4(0, 1, 1, 1));\n+        all_eq!(simd_rem(z1, z1), f32x4(0.0, 0.0, 0.0, 0.0));\n+        all_eq!(simd_rem(z1, z2), z1);\n+        all_eq!(simd_rem(z2, z1), f32x4(0.0, 1.0, 1.0, 1.0));\n+\n         all_eq!(simd_shl(x1, x2), i32x4(1 << 2, 2 << 3, 3 << 4, 4 << 5));\n         all_eq!(simd_shl(x2, x1), i32x4(2 << 1, 3 << 2, 4 << 3, 5 << 4));\n         all_eq!(simd_shl(y1, y2), u32x4(1 << 2, 2 << 3, 3 << 4, 4 << 5));"}]}