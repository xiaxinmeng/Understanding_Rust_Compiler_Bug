{"sha": "ed276caeec64033f38a18dbe796dc78ce3c57c6a", "node_id": "MDY6Q29tbWl0NzI0NzEyOmVkMjc2Y2FlZWM2NDAzM2YzOGExOGRiZTc5NmRjNzhjZTNjNTdjNmE=", "commit": {"author": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2015-04-07T22:11:16Z"}, "committer": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2015-04-08T00:54:34Z"}, "message": "mk: Stop documenating non-facade crates\n\nThis commit ceases documentation-by-default of crates such as `term`,\n`serialize`, and `alloc`. Crates like `term` and `rand` have duplicates on\n`crates.io` and the search index entries generated in the local tree end up\nonly leading to confusion. Crates like the entire compiler infrastructure,\n`flate`, or `rbml` don't need to be documented in such a prominent location.\n\nThis change also means that doc tests will no longer be run for crates beyond\nthe facade (e.g. `serialize` or `term`), but there were very few doc tests in\nthere to begin with.\n\nCloses #22168", "tree": {"sha": "8286edc62d83fc6fec76ec0fb6e3647bbef91ad5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8286edc62d83fc6fec76ec0fb6e3647bbef91ad5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ed276caeec64033f38a18dbe796dc78ce3c57c6a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ed276caeec64033f38a18dbe796dc78ce3c57c6a", "html_url": "https://github.com/rust-lang/rust/commit/ed276caeec64033f38a18dbe796dc78ce3c57c6a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ed276caeec64033f38a18dbe796dc78ce3c57c6a/comments", "author": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2b9076ee19da12e3a70bdb2c630e55f8395173d2", "url": "https://api.github.com/repos/rust-lang/rust/commits/2b9076ee19da12e3a70bdb2c630e55f8395173d2", "html_url": "https://github.com/rust-lang/rust/commit/2b9076ee19da12e3a70bdb2c630e55f8395173d2"}], "stats": {"total": 49, "additions": 12, "deletions": 37}, "files": [{"sha": "666d95b6d651d83a05b06f0302d395828cd16af1", "filename": "mk/crates.mk", "status": "modified", "additions": 3, "deletions": 32, "changes": 35, "blob_url": "https://github.com/rust-lang/rust/blob/ed276caeec64033f38a18dbe796dc78ce3c57c6a/mk%2Fcrates.mk", "raw_url": "https://github.com/rust-lang/rust/raw/ed276caeec64033f38a18dbe796dc78ce3c57c6a/mk%2Fcrates.mk", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/mk%2Fcrates.mk?ref=ed276caeec64033f38a18dbe796dc78ce3c57c6a", "patch": "@@ -118,42 +118,13 @@ ONLY_RLIB_collections := 1\n ONLY_RLIB_unicode := 1\n ONLY_RLIB_rustc_bitflags := 1\n \n+# Documented-by-default crates\n+DOC_CRATES := std alloc collections core libc unicode\n+\n ################################################################################\n # You should not need to edit below this line\n ################################################################################\n \n-# On channels where the only usable crate is std, only build documentation for\n-# std. This keeps distributions small and doesn't clutter up the API docs with\n-# confusing internal details from the crates behind the facade.\n-#\n-# (Disabled while cmr figures out how to change rustdoc to make reexports work\n-# slightly nicer. Otherwise, all cross-crate links to Vec will go to\n-# libcollections, breaking them, and [src] links for anything reexported will\n-# not work.)\n-\n-#ifeq ($(CFG_RELEASE_CHANNEL),stable)\n-#DOC_CRATES := std\n-#else\n-#ifeq ($(CFG_RELEASE_CHANNEL),beta)\n-#DOC_CRATES := std\n-#else\n-DOC_CRATES := $(filter-out rustc, \\\n-\t   $(filter-out rustc_trans, \\\n-\t   $(filter-out rustc_typeck, \\\n-\t   $(filter-out rustc_borrowck, \\\n-\t   $(filter-out rustc_resolve, \\\n-\t   $(filter-out rustc_driver, \\\n-\t   $(filter-out rustc_privacy, \\\n-\t   $(filter-out rustc_lint, \\\n-\t   $(filter-out log, \\\n-\t   $(filter-out getopts, \\\n-\t   $(filter-out syntax, $(CRATES))))))))))))\n-#endif\n-#endif\n-COMPILER_DOC_CRATES := rustc rustc_trans rustc_borrowck rustc_resolve \\\n-                       rustc_typeck rustc_driver syntax rustc_privacy \\\n-                       rustc_lint\n-\n # This macro creates some simple definitions for each crate being built, just\n # some munging of all of the parameters above.\n #"}, {"sha": "d179d337faa61215f8084ae9f4ca6215fc05199c", "filename": "mk/docs.mk", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/ed276caeec64033f38a18dbe796dc78ce3c57c6a/mk%2Fdocs.mk", "raw_url": "https://github.com/rust-lang/rust/raw/ed276caeec64033f38a18dbe796dc78ce3c57c6a/mk%2Fdocs.mk", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/mk%2Fdocs.mk?ref=ed276caeec64033f38a18dbe796dc78ce3c57c6a", "patch": "@@ -250,18 +250,20 @@ endif\n doc/$(1)/:\n \t$$(Q)mkdir -p $$@\n \n-$(2) += doc/$(1)/index.html\n doc/$(1)/index.html: CFG_COMPILER_HOST_TRIPLE = $(CFG_TARGET)\n doc/$(1)/index.html: $$(LIB_DOC_DEP_$(1)) doc/$(1)/\n \t@$$(call E, rustdoc: $$@)\n \t$$(Q)CFG_LLVM_LINKAGE_FILE=$$(LLVM_LINKAGE_PATH_$(CFG_BUILD)) \\\n \t\t$$(RUSTDOC) --cfg dox --cfg stage2 $$(RUSTFLAGS_$(1)) $$<\n endef\n \n-$(foreach crate,$(DOC_CRATES),$(eval $(call DEF_LIB_DOC,$(crate),DOC_TARGETS)))\n+$(foreach crate,$(CRATES),$(eval $(call DEF_LIB_DOC,$(crate))))\n \n+COMPILER_DOC_TARGETS := $(CRATES:%=doc/%/index.html)\n ifdef CFG_COMPILER_DOCS\n-  $(foreach crate,$(COMPILER_DOC_CRATES),$(eval $(call DEF_LIB_DOC,$(crate),COMPILER_DOC_TARGETS)))\n+  DOC_TARGETS += $(COMPILER_DOC_TARGETS)\n+else\n+  DOC_TARGETS += $(DOC_CRATES:%=doc/%/index.html)\n endif\n \n ifdef CFG_DISABLE_DOCS"}, {"sha": "a540d2bace4c604fc6bcde29e4f651c5120911c3", "filename": "mk/tests.mk", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/ed276caeec64033f38a18dbe796dc78ce3c57c6a/mk%2Ftests.mk", "raw_url": "https://github.com/rust-lang/rust/raw/ed276caeec64033f38a18dbe796dc78ce3c57c6a/mk%2Ftests.mk", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/mk%2Ftests.mk?ref=ed276caeec64033f38a18dbe796dc78ce3c57c6a", "patch": "@@ -22,9 +22,11 @@ $(eval $(call RUST_CRATE,coretest))\n DEPS_collectionstest :=\n $(eval $(call RUST_CRATE,collectionstest))\n \n-TEST_TARGET_CRATES = $(filter-out core unicode,$(TARGET_CRATES)) collectionstest coretest\n+TEST_TARGET_CRATES = $(filter-out core unicode,$(TARGET_CRATES)) \\\n+\t\t\tcollectionstest coretest\n TEST_DOC_CRATES = $(DOC_CRATES)\n-TEST_HOST_CRATES = $(filter-out rustc_typeck rustc_borrowck rustc_resolve rustc_trans rustc_lint,\\\n+TEST_HOST_CRATES = $(filter-out rustc_typeck rustc_borrowck rustc_resolve \\\n+\t\t   \t\trustc_trans rustc_lint,\\\n                      $(HOST_CRATES))\n TEST_CRATES = $(TEST_TARGET_CRATES) $(TEST_HOST_CRATES)\n "}]}