{"sha": "ba3a4f6cc6a9a29c67b325d8a6a5d3b081f97773", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJhM2E0ZjZjYzZhOWEyOWM2N2IzMjVkOGE2YTVkM2IwODFmOTc3NzM=", "commit": {"author": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2011-04-26T20:07:51Z"}, "committer": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2011-04-26T20:08:48Z"}, "message": "rustc: Cap ridiculous type name sizes", "tree": {"sha": "365c1db629f99386b95271a9c129301690329717", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/365c1db629f99386b95271a9c129301690329717"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ba3a4f6cc6a9a29c67b325d8a6a5d3b081f97773", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ba3a4f6cc6a9a29c67b325d8a6a5d3b081f97773", "html_url": "https://github.com/rust-lang/rust/commit/ba3a4f6cc6a9a29c67b325d8a6a5d3b081f97773", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ba3a4f6cc6a9a29c67b325d8a6a5d3b081f97773/comments", "author": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "79d27ccb586148eae822276d8513359c9a373f32", "url": "https://api.github.com/repos/rust-lang/rust/commits/79d27ccb586148eae822276d8513359c9a373f32", "html_url": "https://github.com/rust-lang/rust/commit/79d27ccb586148eae822276d8513359c9a373f32"}], "stats": {"total": 4, "additions": 3, "deletions": 1}, "files": [{"sha": "24078767f197a61da5d81e5b94f6d7802eddd8e9", "filename": "src/comp/middle/ty.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ba3a4f6cc6a9a29c67b325d8a6a5d3b081f97773/src%2Fcomp%2Fmiddle%2Fty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ba3a4f6cc6a9a29c67b325d8a6a5d3b081f97773/src%2Fcomp%2Fmiddle%2Fty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Fty.rs?ref=ba3a4f6cc6a9a29c67b325d8a6a5d3b081f97773", "patch": "@@ -630,7 +630,9 @@ fn ty_to_str(ctxt cx, &t typ) -> str {\n fn ty_to_abbrev_str(ctxt cx, t typ) -> str {\n     auto f = def_to_str;\n     auto ecx = @rec(ds=f, tcx=cx);\n-    ret metadata.Encode.ty_str(ecx, typ);\n+    auto s = metadata.Encode.ty_str(ecx, typ);\n+    if (_str.byte_len(s) >= 64u) { s = _str.substr(s, 0u, 64u); }\n+    ret s;\n }\n \n // Type folds"}]}