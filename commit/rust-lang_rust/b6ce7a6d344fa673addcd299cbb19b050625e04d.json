{"sha": "b6ce7a6d344fa673addcd299cbb19b050625e04d", "node_id": "MDY6Q29tbWl0NzI0NzEyOmI2Y2U3YTZkMzQ0ZmE2NzNhZGRjZDI5OWNiYjE5YjA1MDYyNWUwNGQ=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2018-12-19T07:26:24Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2018-12-20T09:15:38Z"}, "message": "make it compile", "tree": {"sha": "1e4a1531d3c9431a1f2ec43b41b19e5ad6b2ad4c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1e4a1531d3c9431a1f2ec43b41b19e5ad6b2ad4c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b6ce7a6d344fa673addcd299cbb19b050625e04d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b6ce7a6d344fa673addcd299cbb19b050625e04d", "html_url": "https://github.com/rust-lang/rust/commit/b6ce7a6d344fa673addcd299cbb19b050625e04d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b6ce7a6d344fa673addcd299cbb19b050625e04d/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "dea1a69e1cb0af7d6917d351a811ef205b7dfef9", "url": "https://api.github.com/repos/rust-lang/rust/commits/dea1a69e1cb0af7d6917d351a811ef205b7dfef9", "html_url": "https://github.com/rust-lang/rust/commit/dea1a69e1cb0af7d6917d351a811ef205b7dfef9"}], "stats": {"total": 15, "additions": 6, "deletions": 9}, "files": [{"sha": "9f39d3a59da5bdd38ec08a25baf73fa6c5274a16", "filename": "crates/ra_analysis/src/db.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/b6ce7a6d344fa673addcd299cbb19b050625e04d/crates%2Fra_analysis%2Fsrc%2Fdb.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b6ce7a6d344fa673addcd299cbb19b050625e04d/crates%2Fra_analysis%2Fsrc%2Fdb.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_analysis%2Fsrc%2Fdb.rs?ref=b6ce7a6d344fa673addcd299cbb19b050625e04d", "patch": "@@ -61,7 +61,10 @@ salsa::database_storage! {\n     pub(crate) struct RootDatabaseStorage for RootDatabase {\n         impl ra_db::FilesDatabase {\n             fn file_text() for ra_db::FileTextQuery;\n+            fn file_relative_path() for ra_db::FileRelativePathQuery;\n             fn file_source_root() for ra_db::FileSourceRootQuery;\n+            fn source_root_files() for ra_db::SourceRootFilesQuery;\n+            fn source_root_file_by_path() for ra_db::SourceRootFileByPathQuery;\n             fn source_root() for ra_db::SourceRootQuery;\n             fn libraries() for ra_db::LibrariesQuery;\n             fn crate_graph() for ra_db::CrateGraphQuery;"}, {"sha": "e2c20b0e3909a341e43cf7bd2ec1843d993a6fda", "filename": "crates/ra_analysis/src/imp.rs", "status": "modified", "additions": 1, "deletions": 8, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/b6ce7a6d344fa673addcd299cbb19b050625e04d/crates%2Fra_analysis%2Fsrc%2Fimp.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b6ce7a6d344fa673addcd299cbb19b050625e04d/crates%2Fra_analysis%2Fsrc%2Fimp.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_analysis%2Fsrc%2Fimp.rs?ref=b6ce7a6d344fa673addcd299cbb19b050625e04d", "patch": "@@ -51,9 +51,6 @@ impl AnalysisHostImpl {\n                 .set(file_id, Arc::new(text))\n         }\n         if !(change.files_added.is_empty() && change.files_removed.is_empty()) {\n-            let file_resolver = change\n-                .file_resolver\n-                .expect(\"change resolver when changing set of files\");\n             let mut source_root = SourceRoot::clone(&self.db.source_root(WORKSPACE));\n             for (file_id, text) in change.files_added {\n                 self.db\n@@ -70,7 +67,6 @@ impl AnalysisHostImpl {\n                     .set(file_id, Arc::new(String::new()));\n                 source_root.files.remove(&file_id);\n             }\n-            source_root.file_resolver = file_resolver;\n             self.db\n                 .query_mut(ra_db::SourceRootQuery)\n                 .set(WORKSPACE, Arc::new(source_root))\n@@ -95,10 +91,7 @@ impl AnalysisHostImpl {\n                         .query_mut(ra_db::FileTextQuery)\n                         .set_constant(file_id, Arc::new(text));\n                 }\n-                let source_root = SourceRoot {\n-                    files,\n-                    file_resolver: library.file_resolver,\n-                };\n+                let source_root = SourceRoot { files };\n                 self.db\n                     .query_mut(ra_db::SourceRootQuery)\n                     .set(source_root_id, Arc::new(source_root));"}, {"sha": "65b674da9bf89a3791b71ac6f670fee613fa2ac3", "filename": "crates/ra_db/src/input.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b6ce7a6d344fa673addcd299cbb19b050625e04d/crates%2Fra_db%2Fsrc%2Finput.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b6ce7a6d344fa673addcd299cbb19b050625e04d/crates%2Fra_db%2Fsrc%2Finput.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_db%2Fsrc%2Finput.rs?ref=b6ce7a6d344fa673addcd299cbb19b050625e04d", "patch": "@@ -98,7 +98,7 @@ salsa::query_group! {\n             storage input;\n         }\n         fn source_root_file_by_path(id: SourceRootId, path: RelativePathBuf) -> Option<FileId> {\n-            type SourceRootFilesByPathQuery;\n+            type SourceRootFileByPathQuery;\n             storage input;\n         }\n         fn source_root(id: SourceRootId) -> Arc<SourceRoot> {"}, {"sha": "783b7a7998d579c2926636c7933ed5f315624b03", "filename": "crates/ra_db/src/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/b6ce7a6d344fa673addcd299cbb19b050625e04d/crates%2Fra_db%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b6ce7a6d344fa673addcd299cbb19b050625e04d/crates%2Fra_db%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_db%2Fsrc%2Flib.rs?ref=b6ce7a6d344fa673addcd299cbb19b050625e04d", "patch": "@@ -28,6 +28,7 @@ pub use crate::{\n     input::{\n         FilesDatabase, FileId, CrateId, SourceRoot, SourceRootId, CrateGraph, WORKSPACE,\n         FileTextQuery, FileSourceRootQuery, SourceRootQuery, LibrariesQuery, CrateGraphQuery,\n+        FileRelativePathQuery, SourceRootFilesQuery, SourceRootFileByPathQuery,\n     },\n     loc2id::{LocationIntener, NumericId},\n };"}]}