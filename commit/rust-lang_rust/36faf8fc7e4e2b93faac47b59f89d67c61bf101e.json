{"sha": "36faf8fc7e4e2b93faac47b59f89d67c61bf101e", "node_id": "C_kwDOAAsO6NoAKDM2ZmFmOGZjN2U0ZTJiOTNmYWFjNDdiNTlmODlkNjdjNjFiZjEwMWU", "commit": {"author": {"name": "ouz-a", "email": "oguz.agcayazi@gmail.com", "date": "2022-08-26T12:41:14Z"}, "committer": {"name": "ouz-a", "email": "oguz.agcayazi@gmail.com", "date": "2022-08-26T18:02:35Z"}, "message": "Don't catch overflow when running with cargo doc", "tree": {"sha": "ea799e93fa642565d0ad1110329bd4f289e7ba1f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ea799e93fa642565d0ad1110329bd4f289e7ba1f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/36faf8fc7e4e2b93faac47b59f89d67c61bf101e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/36faf8fc7e4e2b93faac47b59f89d67c61bf101e", "html_url": "https://github.com/rust-lang/rust/commit/36faf8fc7e4e2b93faac47b59f89d67c61bf101e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/36faf8fc7e4e2b93faac47b59f89d67c61bf101e/comments", "author": {"login": "ouz-a", "id": 90461915, "node_id": "MDQ6VXNlcjkwNDYxOTE1", "avatar_url": "https://avatars.githubusercontent.com/u/90461915?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ouz-a", "html_url": "https://github.com/ouz-a", "followers_url": "https://api.github.com/users/ouz-a/followers", "following_url": "https://api.github.com/users/ouz-a/following{/other_user}", "gists_url": "https://api.github.com/users/ouz-a/gists{/gist_id}", "starred_url": "https://api.github.com/users/ouz-a/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ouz-a/subscriptions", "organizations_url": "https://api.github.com/users/ouz-a/orgs", "repos_url": "https://api.github.com/users/ouz-a/repos", "events_url": "https://api.github.com/users/ouz-a/events{/privacy}", "received_events_url": "https://api.github.com/users/ouz-a/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ouz-a", "id": 90461915, "node_id": "MDQ6VXNlcjkwNDYxOTE1", "avatar_url": "https://avatars.githubusercontent.com/u/90461915?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ouz-a", "html_url": "https://github.com/ouz-a", "followers_url": "https://api.github.com/users/ouz-a/followers", "following_url": "https://api.github.com/users/ouz-a/following{/other_user}", "gists_url": "https://api.github.com/users/ouz-a/gists{/gist_id}", "starred_url": "https://api.github.com/users/ouz-a/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ouz-a/subscriptions", "organizations_url": "https://api.github.com/users/ouz-a/orgs", "repos_url": "https://api.github.com/users/ouz-a/repos", "events_url": "https://api.github.com/users/ouz-a/events{/privacy}", "received_events_url": "https://api.github.com/users/ouz-a/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "983f4daddf238d114c4adc4751c5528fc6695a5a", "url": "https://api.github.com/repos/rust-lang/rust/commits/983f4daddf238d114c4adc4751c5528fc6695a5a", "html_url": "https://github.com/rust-lang/rust/commit/983f4daddf238d114c4adc4751c5528fc6695a5a"}], "stats": {"total": 5, "additions": 4, "deletions": 1}, "files": [{"sha": "444ca6471e2e4d51696f25da4abfd4a1881e4c76", "filename": "compiler/rustc_trait_selection/src/traits/project.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/36faf8fc7e4e2b93faac47b59f89d67c61bf101e/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fproject.rs", "raw_url": "https://github.com/rust-lang/rust/raw/36faf8fc7e4e2b93faac47b59f89d67c61bf101e/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fproject.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fproject.rs?ref=36faf8fc7e4e2b93faac47b59f89d67c61bf101e", "patch": "@@ -557,7 +557,10 @@ impl<'a, 'b, 'tcx> TypeFolder<'tcx> for AssocTypeNormalizer<'a, 'b, 'tcx> {\n                 // For cases like #95134 we would like to catch overflows early\n                 // otherwise they slip away away and cause ICE.\n                 let recursion_limit = self.tcx().recursion_limit();\n-                if !recursion_limit.value_within_limit(self.depth) {\n+                if !recursion_limit.value_within_limit(self.depth)\n+                    // HACK: Don't overflow when running cargo doc see #100991\n+                    && !self.tcx().sess.opts.actually_rustdoc\n+                {\n                     let obligation = Obligation::with_depth(\n                         self.cause.clone(),\n                         recursion_limit.0,"}]}