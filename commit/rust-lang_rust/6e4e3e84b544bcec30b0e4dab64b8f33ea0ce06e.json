{"sha": "6e4e3e84b544bcec30b0e4dab64b8f33ea0ce06e", "node_id": "C_kwDOAAsO6NoAKDZlNGUzZTg0YjU0NGJjZWMzMGIwZTRkYWI2NGI4ZjMzZWEwY2UwNmU", "commit": {"author": {"name": "est31", "email": "MTest31@outlook.com", "date": "2022-08-15T15:35:34Z"}, "committer": {"name": "est31", "email": "MTest31@outlook.com", "date": "2022-08-27T15:08:53Z"}, "message": "Adjust backtrace stabilization version to CURRENT_RUSTC_VERSION", "tree": {"sha": "dee075305c5e1ad100868b610dfc64cece943855", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/dee075305c5e1ad100868b610dfc64cece943855"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6e4e3e84b544bcec30b0e4dab64b8f33ea0ce06e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6e4e3e84b544bcec30b0e4dab64b8f33ea0ce06e", "html_url": "https://github.com/rust-lang/rust/commit/6e4e3e84b544bcec30b0e4dab64b8f33ea0ce06e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6e4e3e84b544bcec30b0e4dab64b8f33ea0ce06e/comments", "author": {"login": "est31", "id": 8872119, "node_id": "MDQ6VXNlcjg4NzIxMTk=", "avatar_url": "https://avatars.githubusercontent.com/u/8872119?v=4", "gravatar_id": "", "url": "https://api.github.com/users/est31", "html_url": "https://github.com/est31", "followers_url": "https://api.github.com/users/est31/followers", "following_url": "https://api.github.com/users/est31/following{/other_user}", "gists_url": "https://api.github.com/users/est31/gists{/gist_id}", "starred_url": "https://api.github.com/users/est31/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/est31/subscriptions", "organizations_url": "https://api.github.com/users/est31/orgs", "repos_url": "https://api.github.com/users/est31/repos", "events_url": "https://api.github.com/users/est31/events{/privacy}", "received_events_url": "https://api.github.com/users/est31/received_events", "type": "User", "site_admin": false}, "committer": {"login": "est31", "id": 8872119, "node_id": "MDQ6VXNlcjg4NzIxMTk=", "avatar_url": "https://avatars.githubusercontent.com/u/8872119?v=4", "gravatar_id": "", "url": "https://api.github.com/users/est31", "html_url": "https://github.com/est31", "followers_url": "https://api.github.com/users/est31/followers", "following_url": "https://api.github.com/users/est31/following{/other_user}", "gists_url": "https://api.github.com/users/est31/gists{/gist_id}", "starred_url": "https://api.github.com/users/est31/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/est31/subscriptions", "organizations_url": "https://api.github.com/users/est31/orgs", "repos_url": "https://api.github.com/users/est31/repos", "events_url": "https://api.github.com/users/est31/events{/privacy}", "received_events_url": "https://api.github.com/users/est31/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e576a9b554f24a26c36c04b41c901636d190605b", "url": "https://api.github.com/repos/rust-lang/rust/commits/e576a9b554f24a26c36c04b41c901636d190605b", "html_url": "https://github.com/rust-lang/rust/commit/e576a9b554f24a26c36c04b41c901636d190605b"}], "stats": {"total": 26, "additions": 13, "deletions": 13}, "files": [{"sha": "354200d4c95e99a0261d6ea5a2b5568560ca4e9f", "filename": "library/std/src/backtrace.rs", "status": "modified", "additions": 13, "deletions": 13, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/6e4e3e84b544bcec30b0e4dab64b8f33ea0ce06e/library%2Fstd%2Fsrc%2Fbacktrace.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6e4e3e84b544bcec30b0e4dab64b8f33ea0ce06e/library%2Fstd%2Fsrc%2Fbacktrace.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fbacktrace.rs?ref=6e4e3e84b544bcec30b0e4dab64b8f33ea0ce06e", "patch": "@@ -58,7 +58,7 @@\n //! `RUST_LIB_BACKTRACE` or `RUST_BACKTRACE` at runtime might not actually change\n //! how backtraces are captured.\n \n-#![stable(feature = \"backtrace\", since = \"1.65.0\")]\n+#![stable(feature = \"backtrace\", since = \"CURRENT_RUSTC_VERSION\")]\n \n #[cfg(test)]\n mod tests;\n@@ -104,29 +104,29 @@ use crate::vec::Vec;\n /// previous point in time. In some instances the `Backtrace` type may\n /// internally be empty due to configuration. For more information see\n /// `Backtrace::capture`.\n-#[stable(feature = \"backtrace\", since = \"1.65.0\")]\n+#[stable(feature = \"backtrace\", since = \"CURRENT_RUSTC_VERSION\")]\n #[must_use]\n pub struct Backtrace {\n     inner: Inner,\n }\n \n /// The current status of a backtrace, indicating whether it was captured or\n /// whether it is empty for some other reason.\n-#[stable(feature = \"backtrace\", since = \"1.65.0\")]\n+#[stable(feature = \"backtrace\", since = \"CURRENT_RUSTC_VERSION\")]\n #[non_exhaustive]\n #[derive(Debug, PartialEq, Eq)]\n pub enum BacktraceStatus {\n     /// Capturing a backtrace is not supported, likely because it's not\n     /// implemented for the current platform.\n-    #[stable(feature = \"backtrace\", since = \"1.65.0\")]\n+    #[stable(feature = \"backtrace\", since = \"CURRENT_RUSTC_VERSION\")]\n     Unsupported,\n     /// Capturing a backtrace has been disabled through either the\n     /// `RUST_LIB_BACKTRACE` or `RUST_BACKTRACE` environment variables.\n-    #[stable(feature = \"backtrace\", since = \"1.65.0\")]\n+    #[stable(feature = \"backtrace\", since = \"CURRENT_RUSTC_VERSION\")]\n     Disabled,\n     /// A backtrace has been captured and the `Backtrace` should print\n     /// reasonable information when rendered.\n-    #[stable(feature = \"backtrace\", since = \"1.65.0\")]\n+    #[stable(feature = \"backtrace\", since = \"CURRENT_RUSTC_VERSION\")]\n     Captured,\n }\n \n@@ -173,7 +173,7 @@ enum BytesOrWide {\n     Wide(Vec<u16>),\n }\n \n-#[stable(feature = \"backtrace\", since = \"1.65.0\")]\n+#[stable(feature = \"backtrace\", since = \"CURRENT_RUSTC_VERSION\")]\n impl fmt::Debug for Backtrace {\n     fn fmt(&self, fmt: &mut fmt::Formatter<'_>) -> fmt::Result {\n         let capture = match &self.inner {\n@@ -289,7 +289,7 @@ impl Backtrace {\n     ///\n     /// To forcibly capture a backtrace regardless of environment variables, use\n     /// the `Backtrace::force_capture` function.\n-    #[stable(feature = \"backtrace\", since = \"1.65.0\")]\n+    #[stable(feature = \"backtrace\", since = \"CURRENT_RUSTC_VERSION\")]\n     #[inline(never)] // want to make sure there's a frame here to remove\n     pub fn capture() -> Backtrace {\n         if !Backtrace::enabled() {\n@@ -308,16 +308,16 @@ impl Backtrace {\n     /// Note that capturing a backtrace can be an expensive operation on some\n     /// platforms, so this should be used with caution in performance-sensitive\n     /// parts of code.\n-    #[stable(feature = \"backtrace\", since = \"1.65.0\")]\n+    #[stable(feature = \"backtrace\", since = \"CURRENT_RUSTC_VERSION\")]\n     #[inline(never)] // want to make sure there's a frame here to remove\n     pub fn force_capture() -> Backtrace {\n         Backtrace::create(Backtrace::force_capture as usize)\n     }\n \n     /// Forcibly captures a disabled backtrace, regardless of environment\n     /// variable configuration.\n-    #[stable(feature = \"backtrace\", since = \"1.65.0\")]\n-    #[rustc_const_stable(feature = \"backtrace\", since = \"1.65.0\")]\n+    #[stable(feature = \"backtrace\", since = \"CURRENT_RUSTC_VERSION\")]\n+    #[rustc_const_stable(feature = \"backtrace\", since = \"CURRENT_RUSTC_VERSION\")]\n     pub const fn disabled() -> Backtrace {\n         Backtrace { inner: Inner::Disabled }\n     }\n@@ -361,7 +361,7 @@ impl Backtrace {\n     /// Returns the status of this backtrace, indicating whether this backtrace\n     /// request was unsupported, disabled, or a stack trace was actually\n     /// captured.\n-    #[stable(feature = \"backtrace\", since = \"1.65.0\")]\n+    #[stable(feature = \"backtrace\", since = \"CURRENT_RUSTC_VERSION\")]\n     #[must_use]\n     pub fn status(&self) -> BacktraceStatus {\n         match self.inner {\n@@ -381,7 +381,7 @@ impl<'a> Backtrace {\n     }\n }\n \n-#[stable(feature = \"backtrace\", since = \"1.65.0\")]\n+#[stable(feature = \"backtrace\", since = \"CURRENT_RUSTC_VERSION\")]\n impl fmt::Display for Backtrace {\n     fn fmt(&self, fmt: &mut fmt::Formatter<'_>) -> fmt::Result {\n         let capture = match &self.inner {"}]}