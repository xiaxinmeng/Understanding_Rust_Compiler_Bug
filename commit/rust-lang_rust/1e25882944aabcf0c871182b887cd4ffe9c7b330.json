{"sha": "1e25882944aabcf0c871182b887cd4ffe9c7b330", "node_id": "C_kwDOAAsO6NoAKDFlMjU4ODI5NDRhYWJjZjBjODcxMTgyYjg4N2NkNGZmZTljN2IzMzA", "commit": {"author": {"name": "yukang", "email": "moorekang@gmail.com", "date": "2022-10-13T15:27:17Z"}, "committer": {"name": "yukang", "email": "moorekang@gmail.com", "date": "2022-11-04T02:35:36Z"}, "message": "fix #102806, suggest use .. to fill in the rest of the fields of Struct", "tree": {"sha": "2bef772d7d5d88173b8eddedca32592753431a6e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2bef772d7d5d88173b8eddedca32592753431a6e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1e25882944aabcf0c871182b887cd4ffe9c7b330", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1e25882944aabcf0c871182b887cd4ffe9c7b330", "html_url": "https://github.com/rust-lang/rust/commit/1e25882944aabcf0c871182b887cd4ffe9c7b330", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1e25882944aabcf0c871182b887cd4ffe9c7b330/comments", "author": {"login": "chenyukang", "id": 230646, "node_id": "MDQ6VXNlcjIzMDY0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/230646?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chenyukang", "html_url": "https://github.com/chenyukang", "followers_url": "https://api.github.com/users/chenyukang/followers", "following_url": "https://api.github.com/users/chenyukang/following{/other_user}", "gists_url": "https://api.github.com/users/chenyukang/gists{/gist_id}", "starred_url": "https://api.github.com/users/chenyukang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chenyukang/subscriptions", "organizations_url": "https://api.github.com/users/chenyukang/orgs", "repos_url": "https://api.github.com/users/chenyukang/repos", "events_url": "https://api.github.com/users/chenyukang/events{/privacy}", "received_events_url": "https://api.github.com/users/chenyukang/received_events", "type": "User", "site_admin": false}, "committer": {"login": "chenyukang", "id": 230646, "node_id": "MDQ6VXNlcjIzMDY0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/230646?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chenyukang", "html_url": "https://github.com/chenyukang", "followers_url": "https://api.github.com/users/chenyukang/followers", "following_url": "https://api.github.com/users/chenyukang/following{/other_user}", "gists_url": "https://api.github.com/users/chenyukang/gists{/gist_id}", "starred_url": "https://api.github.com/users/chenyukang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chenyukang/subscriptions", "organizations_url": "https://api.github.com/users/chenyukang/orgs", "repos_url": "https://api.github.com/users/chenyukang/repos", "events_url": "https://api.github.com/users/chenyukang/events{/privacy}", "received_events_url": "https://api.github.com/users/chenyukang/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6718ea1cff98da785c10079cac1c1ecc30c12d52", "url": "https://api.github.com/repos/rust-lang/rust/commits/6718ea1cff98da785c10079cac1c1ecc30c12d52", "html_url": "https://github.com/rust-lang/rust/commit/6718ea1cff98da785c10079cac1c1ecc30c12d52"}], "stats": {"total": 106, "additions": 103, "deletions": 3}, "files": [{"sha": "455ff34f7247f3a8d632ac6e57c50c46094b91df", "filename": "compiler/rustc_error_messages/locales/en-US/parser.ftl", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/1e25882944aabcf0c871182b887cd4ffe9c7b330/compiler%2Frustc_error_messages%2Flocales%2Fen-US%2Fparser.ftl", "raw_url": "https://github.com/rust-lang/rust/raw/1e25882944aabcf0c871182b887cd4ffe9c7b330/compiler%2Frustc_error_messages%2Flocales%2Fen-US%2Fparser.ftl", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_error_messages%2Flocales%2Fen-US%2Fparser.ftl?ref=1e25882944aabcf0c871182b887cd4ffe9c7b330", "patch": "@@ -112,6 +112,9 @@ parser_missing_semicolon_before_array = expected `;`, found `[`\n parser_invalid_block_macro_segment = cannot use a `block` macro fragment here\n     .label = the `block` fragment is within this context\n \n+parser_expect_dotdot_not_dotdotdot = expected `..`, found `...`\n+    .suggestion = use `..` to fill in the rest of the fields\n+\n parser_if_expression_missing_then_block = this `if` expression is missing a block after the condition\n     .add_then_block = add a block here\n     .condition_possibly_unfinished = this binary operation is possibly unfinished"}, {"sha": "b02bd664533736734f0d0e6a0959efc2e95226f2", "filename": "compiler/rustc_parse/src/errors.rs", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/1e25882944aabcf0c871182b887cd4ffe9c7b330/compiler%2Frustc_parse%2Fsrc%2Ferrors.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1e25882944aabcf0c871182b887cd4ffe9c7b330/compiler%2Frustc_parse%2Fsrc%2Ferrors.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_parse%2Fsrc%2Ferrors.rs?ref=1e25882944aabcf0c871182b887cd4ffe9c7b330", "patch": "@@ -368,6 +368,15 @@ pub(crate) struct MissingSemicolonBeforeArray {\n     pub semicolon: Span,\n }\n \n+#[derive(Diagnostic)]\n+#[diag(parser_expect_dotdot_not_dotdotdot)]\n+pub(crate) struct MissingDotDot {\n+    #[primary_span]\n+    pub token_span: Span,\n+    #[suggestion_verbose(applicability = \"maybe-incorrect\", code = \"..\")]\n+    pub sugg_span: Span,\n+}\n+\n #[derive(Diagnostic)]\n #[diag(parser_invalid_block_macro_segment)]\n pub(crate) struct InvalidBlockMacroSegment {"}, {"sha": "7de025e7860dd0fd6637d06595ad45788852066a", "filename": "compiler/rustc_parse/src/parser/expr.rs", "status": "modified", "additions": 18, "deletions": 3, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/1e25882944aabcf0c871182b887cd4ffe9c7b330/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1e25882944aabcf0c871182b887cd4ffe9c7b330/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fexpr.rs?ref=1e25882944aabcf0c871182b887cd4ffe9c7b330", "patch": "@@ -20,9 +20,9 @@ use crate::errors::{\n     InvalidNumLiteralSuffix, LabeledLoopInBreak, LeadingPlusNotSupported, LeftArrowOperator,\n     LifetimeInBorrowExpression, MacroInvocationWithQualifiedPath, MalformedLoopLabel,\n     MatchArmBodyWithoutBraces, MatchArmBodyWithoutBracesSugg, MissingCommaAfterMatchArm,\n-    MissingInInForLoop, MissingInInForLoopSub, MissingSemicolonBeforeArray, NoFieldsForFnCall,\n-    NotAsNegationOperator, NotAsNegationOperatorSub, OctalFloatLiteralNotSupported,\n-    OuterAttributeNotAllowedOnIfElse, ParenthesesWithStructFields,\n+    MissingDotDot, MissingInInForLoop, MissingInInForLoopSub, MissingSemicolonBeforeArray,\n+    NoFieldsForFnCall, NotAsNegationOperator, NotAsNegationOperatorSub,\n+    OctalFloatLiteralNotSupported, OuterAttributeNotAllowedOnIfElse, ParenthesesWithStructFields,\n     RequireColonAfterLabeledExpression, ShiftInterpretedAsGeneric, StructLiteralNotAllowedHere,\n     StructLiteralNotAllowedHereSugg, TildeAsUnaryOperator, UnexpectedTokenAfterLabel,\n     UnexpectedTokenAfterLabelSugg, WrapExpressionInParentheses,\n@@ -2897,6 +2897,21 @@ impl<'a> Parser<'a> {\n                 }\n                 self.recover_struct_comma_after_dotdot(exp_span);\n                 break;\n+            } else if self.token == token::DotDotDot {\n+                // suggest `..v` instead of `...v`\n+                let snapshot = self.create_snapshot_for_diagnostic();\n+                let span = self.token.span;\n+                self.bump();\n+                match self.parse_expr() {\n+                    Ok(_p) => {\n+                        self.sess.emit_err(MissingDotDot { token_span: span, sugg_span: span });\n+                        break;\n+                    }\n+                    Err(inner_err) => {\n+                        inner_err.cancel();\n+                        self.restore_snapshot(snapshot);\n+                    }\n+                }\n             }\n \n             let recovery_field = self.find_struct_error_after_field_looking_code();"}, {"sha": "f5513c87a92e8cfd77b373401c83ac7723101e56", "filename": "src/test/ui/parser/issue-102806.rs", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/1e25882944aabcf0c871182b887cd4ffe9c7b330/src%2Ftest%2Fui%2Fparser%2Fissue-102806.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1e25882944aabcf0c871182b887cd4ffe9c7b330/src%2Ftest%2Fui%2Fparser%2Fissue-102806.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fissue-102806.rs?ref=1e25882944aabcf0c871182b887cd4ffe9c7b330", "patch": "@@ -0,0 +1,22 @@\n+#![allow(dead_code)]\n+\n+struct V3 {\n+    x: f32,\n+    y: f32,\n+    z: f32,\n+}\n+\n+fn pz(v: V3) {\n+    let _ = V3 { z: 0.0, ...v};\n+    //~^ ERROR expected `..`\n+    //~| ERROR missing fields `x` and `y` in initializer of `V3`\n+    let _ = V3 { z: 0.0, ... };\n+    //~^ expected identifier\n+    //~| ERROR missing fields `x` and `y` in initializer of `V3`\n+\n+    let _ = V3 { z: 0.0, ...Default::default() };\n+    //~^ ERROR expected `..`\n+    //~| ERROR missing fields `x` and `y` in initializer of `V3`\n+}\n+\n+fn main() {}"}, {"sha": "53a43b53961413601498015e8f895b96b979f0e1", "filename": "src/test/ui/parser/issue-102806.stderr", "status": "added", "additions": 51, "deletions": 0, "changes": 51, "blob_url": "https://github.com/rust-lang/rust/blob/1e25882944aabcf0c871182b887cd4ffe9c7b330/src%2Ftest%2Fui%2Fparser%2Fissue-102806.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1e25882944aabcf0c871182b887cd4ffe9c7b330/src%2Ftest%2Fui%2Fparser%2Fissue-102806.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fissue-102806.stderr?ref=1e25882944aabcf0c871182b887cd4ffe9c7b330", "patch": "@@ -0,0 +1,51 @@\n+error: expected `..`, found `...`\n+  --> $DIR/issue-102806.rs:10:26\n+   |\n+LL |     let _ = V3 { z: 0.0, ...v};\n+   |                          ^^^\n+   |\n+help: use `..` to fill in the rest of the fields\n+   |\n+LL |     let _ = V3 { z: 0.0, ..v};\n+   |                          ~~\n+\n+error: expected identifier, found `...`\n+  --> $DIR/issue-102806.rs:13:26\n+   |\n+LL |     let _ = V3 { z: 0.0, ... };\n+   |             --           ^^^ expected identifier\n+   |             |\n+   |             while parsing this struct\n+\n+error: expected `..`, found `...`\n+  --> $DIR/issue-102806.rs:17:26\n+   |\n+LL |     let _ = V3 { z: 0.0, ...Default::default() };\n+   |                          ^^^\n+   |\n+help: use `..` to fill in the rest of the fields\n+   |\n+LL |     let _ = V3 { z: 0.0, ..Default::default() };\n+   |                          ~~\n+\n+error[E0063]: missing fields `x` and `y` in initializer of `V3`\n+  --> $DIR/issue-102806.rs:10:13\n+   |\n+LL |     let _ = V3 { z: 0.0, ...v};\n+   |             ^^ missing `x` and `y`\n+\n+error[E0063]: missing fields `x` and `y` in initializer of `V3`\n+  --> $DIR/issue-102806.rs:13:13\n+   |\n+LL |     let _ = V3 { z: 0.0, ... };\n+   |             ^^ missing `x` and `y`\n+\n+error[E0063]: missing fields `x` and `y` in initializer of `V3`\n+  --> $DIR/issue-102806.rs:17:13\n+   |\n+LL |     let _ = V3 { z: 0.0, ...Default::default() };\n+   |             ^^ missing `x` and `y`\n+\n+error: aborting due to 6 previous errors\n+\n+For more information about this error, try `rustc --explain E0063`."}]}