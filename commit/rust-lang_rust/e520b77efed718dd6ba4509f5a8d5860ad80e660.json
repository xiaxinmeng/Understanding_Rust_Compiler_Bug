{"sha": "e520b77efed718dd6ba4509f5a8d5860ad80e660", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU1MjBiNzdlZmVkNzE4ZGQ2YmE0NTA5ZjVhOGQ1ODYwYWQ4MGU2NjA=", "commit": {"author": {"name": "Clar Charr", "email": "clar@charr.xyz", "date": "2017-01-11T03:17:47Z"}, "committer": {"name": "Clar Charr", "email": "clar@charr.xyz", "date": "2017-01-13T20:51:50Z"}, "message": "expect_err for Result.", "tree": {"sha": "86692066f0bc756c8ab71599ae0f92d0de3da2ca", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/86692066f0bc756c8ab71599ae0f92d0de3da2ca"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e520b77efed718dd6ba4509f5a8d5860ad80e660", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e520b77efed718dd6ba4509f5a8d5860ad80e660", "html_url": "https://github.com/rust-lang/rust/commit/e520b77efed718dd6ba4509f5a8d5860ad80e660", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e520b77efed718dd6ba4509f5a8d5860ad80e660/comments", "author": {"login": "clarfonthey", "id": 15850505, "node_id": "MDQ6VXNlcjE1ODUwNTA1", "avatar_url": "https://avatars.githubusercontent.com/u/15850505?v=4", "gravatar_id": "", "url": "https://api.github.com/users/clarfonthey", "html_url": "https://github.com/clarfonthey", "followers_url": "https://api.github.com/users/clarfonthey/followers", "following_url": "https://api.github.com/users/clarfonthey/following{/other_user}", "gists_url": "https://api.github.com/users/clarfonthey/gists{/gist_id}", "starred_url": "https://api.github.com/users/clarfonthey/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/clarfonthey/subscriptions", "organizations_url": "https://api.github.com/users/clarfonthey/orgs", "repos_url": "https://api.github.com/users/clarfonthey/repos", "events_url": "https://api.github.com/users/clarfonthey/events{/privacy}", "received_events_url": "https://api.github.com/users/clarfonthey/received_events", "type": "User", "site_admin": false}, "committer": {"login": "clarfonthey", "id": 15850505, "node_id": "MDQ6VXNlcjE1ODUwNTA1", "avatar_url": "https://avatars.githubusercontent.com/u/15850505?v=4", "gravatar_id": "", "url": "https://api.github.com/users/clarfonthey", "html_url": "https://github.com/clarfonthey", "followers_url": "https://api.github.com/users/clarfonthey/followers", "following_url": "https://api.github.com/users/clarfonthey/following{/other_user}", "gists_url": "https://api.github.com/users/clarfonthey/gists{/gist_id}", "starred_url": "https://api.github.com/users/clarfonthey/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/clarfonthey/subscriptions", "organizations_url": "https://api.github.com/users/clarfonthey/orgs", "repos_url": "https://api.github.com/users/clarfonthey/repos", "events_url": "https://api.github.com/users/clarfonthey/events{/privacy}", "received_events_url": "https://api.github.com/users/clarfonthey/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7bffede97cf58f7159e261eac592f9cf88ce209d", "url": "https://api.github.com/repos/rust-lang/rust/commits/7bffede97cf58f7159e261eac592f9cf88ce209d", "html_url": "https://github.com/rust-lang/rust/commit/7bffede97cf58f7159e261eac592f9cf88ce209d"}], "stats": {"total": 39, "additions": 39, "deletions": 0}, "files": [{"sha": "f02df88bb2efa4d89dea460f7aad3d1cf71a3a88", "filename": "src/libcore/result.rs", "status": "modified", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/e520b77efed718dd6ba4509f5a8d5860ad80e660/src%2Flibcore%2Fresult.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e520b77efed718dd6ba4509f5a8d5860ad80e660/src%2Flibcore%2Fresult.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fresult.rs?ref=e520b77efed718dd6ba4509f5a8d5860ad80e660", "patch": "@@ -798,6 +798,31 @@ impl<T: fmt::Debug, E> Result<T, E> {\n             Err(e) => e,\n         }\n     }\n+\n+    /// Unwraps a result, yielding the content of an `Err`.\n+    ///\n+    /// # Panics\n+    ///\n+    /// Panics if the value is an `Ok`, with a panic message including the\n+    /// passed message, and the content of the `Ok`.\n+    ///\n+    /// # Examples\n+    ///\n+    /// Basic usage:\n+    ///\n+    /// ```{.should_panic}\n+    /// # #![feature(result_expect_err)]\n+    /// let x: Result<u32, &str> = Ok(10);\n+    /// x.expect_err(\"Testing expect_err\"); // panics with `Testing expect_err: 10`\n+    /// ```\n+    #[inline]\n+    #[unstable(feature = \"result_expect_err\", issue = \"39041\")]\n+    pub fn expect_err(self, msg: &str) -> E {\n+        match self {\n+            Ok(t) => unwrap_failed(msg, t),\n+            Err(e) => e,\n+        }\n+    }\n }\n \n impl<T: Default, E> Result<T, E> {"}, {"sha": "ee47b510ee0744fef35629d023734c4782a78c7a", "filename": "src/libcoretest/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/e520b77efed718dd6ba4509f5a8d5860ad80e660/src%2Flibcoretest%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e520b77efed718dd6ba4509f5a8d5860ad80e660/src%2Flibcoretest%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcoretest%2Flib.rs?ref=e520b77efed718dd6ba4509f5a8d5860ad80e660", "patch": "@@ -23,6 +23,7 @@\n #![feature(nonzero)]\n #![feature(rand)]\n #![feature(raw)]\n+#![feature(result_expect_err)]\n #![feature(sip_hash_13)]\n #![feature(slice_patterns)]\n #![feature(step_by)]"}, {"sha": "4c5f19dee12935efbbeb6b09f12ecbabf5b6765e", "filename": "src/libcoretest/result.rs", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/e520b77efed718dd6ba4509f5a8d5860ad80e660/src%2Flibcoretest%2Fresult.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e520b77efed718dd6ba4509f5a8d5860ad80e660/src%2Flibcoretest%2Fresult.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcoretest%2Fresult.rs?ref=e520b77efed718dd6ba4509f5a8d5860ad80e660", "patch": "@@ -151,6 +151,19 @@ pub fn test_expect_err() {\n     err.expect(\"Got expected error\");\n }\n \n+\n+#[test]\n+pub fn test_expect_err_err() {\n+    let ok: Result<&'static str, isize> = Err(100);\n+    assert_eq!(ok.expect_err(\"Unexpected ok\"), 100);\n+}\n+#[test]\n+#[should_panic(expected=\"Got expected ok: \\\"All good\\\"\")]\n+pub fn test_expect_err_ok() {\n+    let err: Result<&'static str, isize> = Ok(\"All good\");\n+    err.expect_err(\"Got expected ok\");\n+}\n+\n #[test]\n pub fn test_iter() {\n     let ok: Result<isize, &'static str> = Ok(100);"}]}