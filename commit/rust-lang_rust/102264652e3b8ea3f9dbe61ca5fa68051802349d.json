{"sha": "102264652e3b8ea3f9dbe61ca5fa68051802349d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjEwMjI2NDY1MmUzYjhlYTNmOWRiZTYxY2E1ZmE2ODA1MTgwMjM0OWQ=", "commit": {"author": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2021-09-08T15:36:41Z"}, "committer": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2021-09-08T15:36:41Z"}, "message": "Revert \"Remove optimization_fuel_crate from Session\"\n\nThis reverts commit 5464b2e713d5366b3aec5c6eebbe1b84a782c51e.", "tree": {"sha": "435cdb7755ecc5c7af4a184ffbf211177a85f8b3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/435cdb7755ecc5c7af4a184ffbf211177a85f8b3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/102264652e3b8ea3f9dbe61ca5fa68051802349d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/102264652e3b8ea3f9dbe61ca5fa68051802349d", "html_url": "https://github.com/rust-lang/rust/commit/102264652e3b8ea3f9dbe61ca5fa68051802349d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/102264652e3b8ea3f9dbe61ca5fa68051802349d/comments", "author": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "434cb437b55d61bcb54a01921de7ac752e6dee13", "url": "https://api.github.com/repos/rust-lang/rust/commits/434cb437b55d61bcb54a01921de7ac752e6dee13", "html_url": "https://github.com/rust-lang/rust/commit/434cb437b55d61bcb54a01921de7ac752e6dee13"}], "stats": {"total": 7, "additions": 6, "deletions": 1}, "files": [{"sha": "4471e1e0ae8b46b7b3534a1407b2054c3fe3275f", "filename": "compiler/rustc_session/src/session.rs", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/102264652e3b8ea3f9dbe61ca5fa68051802349d/compiler%2Frustc_session%2Fsrc%2Fsession.rs", "raw_url": "https://github.com/rust-lang/rust/raw/102264652e3b8ea3f9dbe61ca5fa68051802349d/compiler%2Frustc_session%2Fsrc%2Fsession.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_session%2Fsrc%2Fsession.rs?ref=102264652e3b8ea3f9dbe61ca5fa68051802349d", "patch": "@@ -170,6 +170,9 @@ pub struct Session {\n     /// Data about code being compiled, gathered during compilation.\n     pub code_stats: CodeStats,\n \n+    /// If `-zfuel=crate=n` is specified, `Some(crate)`.\n+    optimization_fuel_crate: Option<String>,\n+\n     /// Tracks fuel info if `-zfuel=crate=n` is specified.\n     optimization_fuel: Lock<OptimizationFuel>,\n \n@@ -883,7 +886,7 @@ impl Session {\n     /// This expends fuel if applicable, and records fuel if applicable.\n     pub fn consider_optimizing<T: Fn() -> String>(&self, crate_name: &str, msg: T) -> bool {\n         let mut ret = true;\n-        if let Some(c) = self.opts.debugging_opts.fuel.as_ref().map(|i| &i.0) {\n+        if let Some(ref c) = self.optimization_fuel_crate {\n             if c == crate_name {\n                 assert_eq!(self.threads(), 1);\n                 let mut fuel = self.optimization_fuel.lock();\n@@ -1254,6 +1257,7 @@ pub fn build_session(\n     let local_crate_source_file =\n         local_crate_source_file.map(|path| file_path_mapping.map_prefix(path).0);\n \n+    let optimization_fuel_crate = sopts.debugging_opts.fuel.as_ref().map(|i| i.0.clone());\n     let optimization_fuel = Lock::new(OptimizationFuel {\n         remaining: sopts.debugging_opts.fuel.as_ref().map_or(0, |i| i.1),\n         out_of_fuel: false,\n@@ -1305,6 +1309,7 @@ pub fn build_session(\n             normalize_projection_ty: AtomicUsize::new(0),\n         },\n         code_stats: Default::default(),\n+        optimization_fuel_crate,\n         optimization_fuel,\n         print_fuel,\n         jobserver: jobserver::client(),"}]}