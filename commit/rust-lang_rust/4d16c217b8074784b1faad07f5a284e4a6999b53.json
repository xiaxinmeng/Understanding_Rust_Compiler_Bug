{"sha": "4d16c217b8074784b1faad07f5a284e4a6999b53", "node_id": "MDY6Q29tbWl0NzI0NzEyOjRkMTZjMjE3YjgwNzQ3ODRiMWZhYWQwN2Y1YTI4NGU0YTY5OTliNTM=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2020-03-10T15:20:47Z"}, "committer": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2020-03-10T16:46:19Z"}, "message": "Matrix::push: recursively expand or-patterns", "tree": {"sha": "82fc1a45256fdea7ef104e5ef74f1c7828789375", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/82fc1a45256fdea7ef104e5ef74f1c7828789375"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4d16c217b8074784b1faad07f5a284e4a6999b53", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4d16c217b8074784b1faad07f5a284e4a6999b53", "html_url": "https://github.com/rust-lang/rust/commit/4d16c217b8074784b1faad07f5a284e4a6999b53", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4d16c217b8074784b1faad07f5a284e4a6999b53/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "dd155df0a69338757ca39a2a606a6accb7b8d342", "url": "https://api.github.com/repos/rust-lang/rust/commits/dd155df0a69338757ca39a2a606a6accb7b8d342", "html_url": "https://github.com/rust-lang/rust/commit/dd155df0a69338757ca39a2a606a6accb7b8d342"}], "stats": {"total": 49, "additions": 48, "deletions": 1}, "files": [{"sha": "37ad5f5ea4e382a3ff804baf36812670ab4652ef", "filename": "src/librustc_mir_build/hair/pattern/_match.rs", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/4d16c217b8074784b1faad07f5a284e4a6999b53/src%2Flibrustc_mir_build%2Fhair%2Fpattern%2F_match.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4d16c217b8074784b1faad07f5a284e4a6999b53/src%2Flibrustc_mir_build%2Fhair%2Fpattern%2F_match.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir_build%2Fhair%2Fpattern%2F_match.rs?ref=4d16c217b8074784b1faad07f5a284e4a6999b53", "patch": "@@ -480,7 +480,11 @@ impl<'p, 'tcx> Matrix<'p, 'tcx> {\n     /// Pushes a new row to the matrix. If the row starts with an or-pattern, this expands it.\n     crate fn push(&mut self, row: PatStack<'p, 'tcx>) {\n         if let Some(rows) = row.expand_or_pat() {\n-            self.0.extend(rows);\n+            for row in rows {\n+                // We recursively expand the or-patterns of the new rows.\n+                // This is necessary as we might have `0 | (1 | 2)` or e.g., `x @ 0 | x @ (1 | 2)`.\n+                self.push(row)\n+            }\n         } else {\n             self.0.push(row);\n         }"}, {"sha": "59533cefea64c8caf97c259725fd31478432b3ae", "filename": "src/test/ui/or-patterns/issue-69875-should-have-been-expanded-earlier-non-exhaustive.rs", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/4d16c217b8074784b1faad07f5a284e4a6999b53/src%2Ftest%2Fui%2For-patterns%2Fissue-69875-should-have-been-expanded-earlier-non-exhaustive.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4d16c217b8074784b1faad07f5a284e4a6999b53/src%2Ftest%2Fui%2For-patterns%2Fissue-69875-should-have-been-expanded-earlier-non-exhaustive.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2For-patterns%2Fissue-69875-should-have-been-expanded-earlier-non-exhaustive.rs?ref=4d16c217b8074784b1faad07f5a284e4a6999b53", "patch": "@@ -0,0 +1,9 @@\n+#![feature(or_patterns)]\n+\n+fn main() {\n+    let 0 | (1 | 2) = 0; //~ ERROR refutable pattern in local binding\n+    match 0 {\n+        //~^ ERROR non-exhaustive patterns\n+        0 | (1 | 2) => {}\n+    }\n+}"}, {"sha": "58286e87869a421e8dc720781effa0aae5a644b7", "filename": "src/test/ui/or-patterns/issue-69875-should-have-been-expanded-earlier-non-exhaustive.stderr", "status": "added", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/4d16c217b8074784b1faad07f5a284e4a6999b53/src%2Ftest%2Fui%2For-patterns%2Fissue-69875-should-have-been-expanded-earlier-non-exhaustive.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/4d16c217b8074784b1faad07f5a284e4a6999b53/src%2Ftest%2Fui%2For-patterns%2Fissue-69875-should-have-been-expanded-earlier-non-exhaustive.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2For-patterns%2Fissue-69875-should-have-been-expanded-earlier-non-exhaustive.stderr?ref=4d16c217b8074784b1faad07f5a284e4a6999b53", "patch": "@@ -0,0 +1,25 @@\n+error[E0005]: refutable pattern in local binding: `std::i32::MIN..=-1i32` and `3i32..=std::i32::MAX` not covered\n+  --> $DIR/issue-69875-should-have-been-expanded-earlier-non-exhaustive.rs:4:9\n+   |\n+LL |     let 0 | (1 | 2) = 0;\n+   |         ^^^^^^^^^^^ patterns `std::i32::MIN..=-1i32` and `3i32..=std::i32::MAX` not covered\n+   |\n+   = note: `let` bindings require an \"irrefutable pattern\", like a `struct` or an `enum` with only one variant\n+   = note: for more information, visit https://doc.rust-lang.org/book/ch18-02-refutability.html\n+help: you might want to use `if let` to ignore the variant that isn't matched\n+   |\n+LL |     if let 0 | (1 | 2) = 0 { /* */ }\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+\n+error[E0004]: non-exhaustive patterns: `std::i32::MIN..=-1i32` and `3i32..=std::i32::MAX` not covered\n+  --> $DIR/issue-69875-should-have-been-expanded-earlier-non-exhaustive.rs:5:11\n+   |\n+LL |     match 0 {\n+   |           ^ patterns `std::i32::MIN..=-1i32` and `3i32..=std::i32::MAX` not covered\n+   |\n+   = help: ensure that all possible cases are being handled, possibly by adding wildcards or more match arms\n+\n+error: aborting due to 2 previous errors\n+\n+Some errors have detailed explanations: E0004, E0005.\n+For more information about an error, try `rustc --explain E0004`."}, {"sha": "1de563dedbf18b6c6822d72cf4b7383b9623aa60", "filename": "src/test/ui/or-patterns/issue-69875-should-have-been-expanded-earlier.rs", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/4d16c217b8074784b1faad07f5a284e4a6999b53/src%2Ftest%2Fui%2For-patterns%2Fissue-69875-should-have-been-expanded-earlier.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4d16c217b8074784b1faad07f5a284e4a6999b53/src%2Ftest%2Fui%2For-patterns%2Fissue-69875-should-have-been-expanded-earlier.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2For-patterns%2Fissue-69875-should-have-been-expanded-earlier.rs?ref=4d16c217b8074784b1faad07f5a284e4a6999b53", "patch": "@@ -0,0 +1,9 @@\n+// check-pass\n+\n+#![feature(or_patterns)]\n+\n+fn main() {\n+    let 0 | (1 | _) = 0;\n+    if let 0 | (1 | 2) = 0 {}\n+    if let x @ 0 | x @ (1 | 2) = 0 {}\n+}"}]}