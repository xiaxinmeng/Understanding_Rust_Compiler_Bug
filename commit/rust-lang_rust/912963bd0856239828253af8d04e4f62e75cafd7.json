{"sha": "912963bd0856239828253af8d04e4f62e75cafd7", "node_id": "MDY6Q29tbWl0NzI0NzEyOjkxMjk2M2JkMDg1NjIzOTgyODI1M2FmOGQwNGU0ZjYyZTc1Y2FmZDc=", "commit": {"author": {"name": "Chris Denton", "email": "christophersdenton@gmail.com", "date": "2020-05-25T12:53:02Z"}, "committer": {"name": "Chris Denton", "email": "christophersdenton@gmail.com", "date": "2020-05-25T12:53:02Z"}, "message": "Remove legacy InnoSetup GUI installer\n\nOn Windows the InnoSetup installer was superseded by the MSI installer. It's no longer needed.", "tree": {"sha": "3269a2e5b92264af3627f8bbb3db6fe7a3192cde", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3269a2e5b92264af3627f8bbb3db6fe7a3192cde"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/912963bd0856239828253af8d04e4f62e75cafd7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/912963bd0856239828253af8d04e4f62e75cafd7", "html_url": "https://github.com/rust-lang/rust/commit/912963bd0856239828253af8d04e4f62e75cafd7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/912963bd0856239828253af8d04e4f62e75cafd7/comments", "author": {"login": "ChrisDenton", "id": 4459874, "node_id": "MDQ6VXNlcjQ0NTk4NzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/4459874?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ChrisDenton", "html_url": "https://github.com/ChrisDenton", "followers_url": "https://api.github.com/users/ChrisDenton/followers", "following_url": "https://api.github.com/users/ChrisDenton/following{/other_user}", "gists_url": "https://api.github.com/users/ChrisDenton/gists{/gist_id}", "starred_url": "https://api.github.com/users/ChrisDenton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ChrisDenton/subscriptions", "organizations_url": "https://api.github.com/users/ChrisDenton/orgs", "repos_url": "https://api.github.com/users/ChrisDenton/repos", "events_url": "https://api.github.com/users/ChrisDenton/events{/privacy}", "received_events_url": "https://api.github.com/users/ChrisDenton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ChrisDenton", "id": 4459874, "node_id": "MDQ6VXNlcjQ0NTk4NzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/4459874?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ChrisDenton", "html_url": "https://github.com/ChrisDenton", "followers_url": "https://api.github.com/users/ChrisDenton/followers", "following_url": "https://api.github.com/users/ChrisDenton/following{/other_user}", "gists_url": "https://api.github.com/users/ChrisDenton/gists{/gist_id}", "starred_url": "https://api.github.com/users/ChrisDenton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ChrisDenton/subscriptions", "organizations_url": "https://api.github.com/users/ChrisDenton/orgs", "repos_url": "https://api.github.com/users/ChrisDenton/repos", "events_url": "https://api.github.com/users/ChrisDenton/events{/privacy}", "received_events_url": "https://api.github.com/users/ChrisDenton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "997d953eeec0be62c59ea028c95cd7be49adf58f", "url": "https://api.github.com/repos/rust-lang/rust/commits/997d953eeec0be62c59ea028c95cd7be49adf58f", "html_url": "https://github.com/rust-lang/rust/commit/997d953eeec0be62c59ea028c95cd7be49adf58f"}], "stats": {"total": 423, "additions": 0, "deletions": 423}, "files": [{"sha": "6383cbdc139d12021488af2a46ca6bcc0a0c0c87", "filename": ".github/workflows/ci.yml", "status": "modified", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/912963bd0856239828253af8d04e4f62e75cafd7/.github%2Fworkflows%2Fci.yml", "raw_url": "https://github.com/rust-lang/rust/raw/912963bd0856239828253af8d04e4f62e75cafd7/.github%2Fworkflows%2Fci.yml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/.github%2Fworkflows%2Fci.yml?ref=912963bd0856239828253af8d04e4f62e75cafd7", "patch": "@@ -90,9 +90,6 @@ jobs:\n       - name: install WIX\n         run: src/ci/scripts/install-wix.sh\n         if: success() && !env.SKIP_JOB\n-      - name: install InnoSetup\n-        run: src/ci/scripts/install-innosetup.sh\n-        if: success() && !env.SKIP_JOB\n       - name: ensure the build happens on a partition with enough space\n         run: src/ci/scripts/symlink-build-dir.sh\n         if: success() && !env.SKIP_JOB\n@@ -200,9 +197,6 @@ jobs:\n       - name: install WIX\n         run: src/ci/scripts/install-wix.sh\n         if: success() && !env.SKIP_JOB\n-      - name: install InnoSetup\n-        run: src/ci/scripts/install-innosetup.sh\n-        if: success() && !env.SKIP_JOB\n       - name: ensure the build happens on a partition with enough space\n         run: src/ci/scripts/symlink-build-dir.sh\n         if: success() && !env.SKIP_JOB\n@@ -552,9 +546,6 @@ jobs:\n       - name: install WIX\n         run: src/ci/scripts/install-wix.sh\n         if: success() && !env.SKIP_JOB\n-      - name: install InnoSetup\n-        run: src/ci/scripts/install-innosetup.sh\n-        if: success() && !env.SKIP_JOB\n       - name: ensure the build happens on a partition with enough space\n         run: src/ci/scripts/symlink-build-dir.sh\n         if: success() && !env.SKIP_JOB"}, {"sha": "b6c8e0652d1bd0e8f344d665e91260a537c0bae7", "filename": "src/bootstrap/dist.rs", "status": "modified", "additions": 0, "deletions": 21, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/912963bd0856239828253af8d04e4f62e75cafd7/src%2Fbootstrap%2Fdist.rs", "raw_url": "https://github.com/rust-lang/rust/raw/912963bd0856239828253af8d04e4f62e75cafd7/src%2Fbootstrap%2Fdist.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fdist.rs?ref=912963bd0856239828253af8d04e4f62e75cafd7", "patch": "@@ -1859,28 +1859,7 @@ impl Step for Extended {\n                 prepare(\"rust-mingw\");\n             }\n \n-            builder.install(&xform(&etc.join(\"exe/rust.iss\")), &exe, 0o644);\n-            builder.install(&etc.join(\"exe/modpath.iss\"), &exe, 0o644);\n-            builder.install(&etc.join(\"exe/upgrade.iss\"), &exe, 0o644);\n             builder.install(&etc.join(\"gfx/rust-logo.ico\"), &exe, 0o644);\n-            builder.create(&exe.join(\"LICENSE.txt\"), &license);\n-\n-            // Generate exe installer\n-            builder.info(\"building `exe` installer with `iscc`\");\n-            let mut cmd = Command::new(\"iscc\");\n-            cmd.arg(\"rust.iss\").arg(\"/Q\").current_dir(&exe);\n-            if target.contains(\"windows-gnu\") {\n-                cmd.arg(\"/dMINGW\");\n-            }\n-            add_env(builder, &mut cmd, target);\n-            let time = timeit(builder);\n-            builder.run(&mut cmd);\n-            drop(time);\n-            builder.install(\n-                &exe.join(format!(\"{}-{}.exe\", pkgname(builder, \"rust\"), target)),\n-                &distdir(builder),\n-                0o755,\n-            );\n \n             // Generate msi installer\n             let wix = PathBuf::from(env::var_os(\"WIX\").unwrap());"}, {"sha": "5ceb280953a024f5d9f098f2d9f0623e46de3fc6", "filename": "src/ci/azure-pipelines/steps/run.yml", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/912963bd0856239828253af8d04e4f62e75cafd7/src%2Fci%2Fazure-pipelines%2Fsteps%2Frun.yml", "raw_url": "https://github.com/rust-lang/rust/raw/912963bd0856239828253af8d04e4f62e75cafd7/src%2Fci%2Fazure-pipelines%2Fsteps%2Frun.yml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fazure-pipelines%2Fsteps%2Frun.yml?ref=912963bd0856239828253af8d04e4f62e75cafd7", "patch": "@@ -66,10 +66,6 @@ steps:\n   displayName: Install wix\n   condition: and(succeeded(), not(variables.SKIP_JOB))\n \n-- bash: src/ci/scripts/install-innosetup.sh\n-  displayName: Install InnoSetup\n-  condition: and(succeeded(), not(variables.SKIP_JOB))\n-\n - bash: src/ci/scripts/symlink-build-dir.sh\n   displayName: Ensure the build happens on a partition with enough space\n   condition: and(succeeded(), not(variables.SKIP_JOB))"}, {"sha": "7a0cd7600598d8cdf0f34cba2aed432529753e56", "filename": "src/ci/github-actions/ci.yml", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/912963bd0856239828253af8d04e4f62e75cafd7/src%2Fci%2Fgithub-actions%2Fci.yml", "raw_url": "https://github.com/rust-lang/rust/raw/912963bd0856239828253af8d04e4f62e75cafd7/src%2Fci%2Fgithub-actions%2Fci.yml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fgithub-actions%2Fci.yml?ref=912963bd0856239828253af8d04e4f62e75cafd7", "patch": "@@ -131,10 +131,6 @@ x--expand-yaml-anchors--remove:\n         run: src/ci/scripts/install-wix.sh\n         <<: *step\n \n-      - name: install InnoSetup\n-        run: src/ci/scripts/install-innosetup.sh\n-        <<: *step\n-\n       - name: ensure the build happens on a partition with enough space\n         run: src/ci/scripts/symlink-build-dir.sh\n         <<: *step"}, {"sha": "04ca249777a11a55228c5dbb6a94c59254afab20", "filename": "src/ci/scripts/install-innosetup.sh", "status": "removed", "additions": 0, "deletions": 18, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/997d953eeec0be62c59ea028c95cd7be49adf58f/src%2Fci%2Fscripts%2Finstall-innosetup.sh", "raw_url": "https://github.com/rust-lang/rust/raw/997d953eeec0be62c59ea028c95cd7be49adf58f/src%2Fci%2Fscripts%2Finstall-innosetup.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fscripts%2Finstall-innosetup.sh?ref=997d953eeec0be62c59ea028c95cd7be49adf58f", "patch": "@@ -1,18 +0,0 @@\n-#!/bin/bash\n-# We use InnoSetup and its `iscc` program to also create combined installers.\n-# Honestly at this point WIX above and `iscc` are just holdovers from\n-# oh-so-long-ago and are required for creating installers on Windows. I think\n-# one is MSI installers and one is EXE, but they're not used so frequently at\n-# this point anyway so perhaps it's a wash!\n-\n-set -euo pipefail\n-IFS=$'\\n\\t'\n-\n-source \"$(cd \"$(dirname \"$0\")\" && pwd)/../shared.sh\"\n-\n-if isWindows; then\n-    curl.exe -o is-install.exe \"${MIRRORS_BASE}/2017-08-22-is.exe\"\n-    cmd.exe //c \"is-install.exe /VERYSILENT /SUPPRESSMSGBOXES /NORESTART /SP-\"\n-\n-    ciCommandAddPath \"C:\\\\Program Files (x86)\\\\Inno Setup 5\"\n-fi"}, {"sha": "2cfc8698c4b67f7e9c8c9cb569aaa54758645542", "filename": "src/etc/installer/exe/modpath.iss", "status": "removed", "additions": 0, "deletions": 219, "changes": 219, "blob_url": "https://github.com/rust-lang/rust/blob/997d953eeec0be62c59ea028c95cd7be49adf58f/src%2Fetc%2Finstaller%2Fexe%2Fmodpath.iss", "raw_url": "https://github.com/rust-lang/rust/raw/997d953eeec0be62c59ea028c95cd7be49adf58f/src%2Fetc%2Finstaller%2Fexe%2Fmodpath.iss", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fetc%2Finstaller%2Fexe%2Fmodpath.iss?ref=997d953eeec0be62c59ea028c95cd7be49adf58f", "patch": "@@ -1,219 +0,0 @@\n-// ----------------------------------------------------------------------------\n-//\n-// Inno Setup Ver:\t5.4.2\n-// Script Version:\t1.4.1\n-// Author:\t\t\tJared Breland <jbreland@legroom.net>\n-// Homepage:\t\thttp://www.legroom.net/software\n-// License:\t\t\tGNU Lesser General Public License (LGPL), version 3\n-//\t\t\t\t\t\thttp://www.gnu.org/licenses/lgpl.html\n-//\n-// Script Function:\n-//\tAllow modification of environmental path directly from Inno Setup installers\n-//\n-// Instructions:\n-//\tCopy modpath.iss to the same directory as your setup script\n-//\n-//\tAdd this statement to your [Setup] section\n-//\t\tChangesEnvironment=true\n-//\n-//\tAdd this statement to your [Tasks] section\n-//\tYou can change the Description or Flags\n-//\tYou can change the Name, but it must match the ModPathName setting below\n-//\t\tName: modifypath; Description: &Add application directory to your environmental path; Flags: unchecked\n-//\n-//\tAdd the following to the end of your [Code] section\n-//\tModPathName defines the name of the task defined above\n-//\tModPathType defines whether the 'user' or 'system' path will be modified;\n-//\t\tthis will default to user if anything other than system is set\n-//\tsetArrayLength must specify the total number of dirs to be added\n-//\tResult[0] contains first directory, Result[1] contains second, etc.\n-//\t\tconst\n-//\t\t\tModPathName = 'modifypath';\n-//\t\t\tModPathType = 'user';\n-//\n-//\t\tfunction ModPathDir(): TArrayOfString;\n-//\t\tbegin\n-//\t\t\tsetArrayLength(Result, 1);\n-//\t\t\tResult[0] := ExpandConstant('{app}');\n-//\t\tend;\n-//\t\t#include \"modpath.iss\"\n-// ----------------------------------------------------------------------------\n-\n-procedure ModPath();\n-var\n-\toldpath:\tString;\n-\tnewpath:\tString;\n-\tupdatepath:\tBoolean;\n-\tpathArr:\tTArrayOfString;\n-\taExecFile:\tString;\n-\taExecArr:\tTArrayOfString;\n-\ti, d:\t\tInteger;\n-\tpathdir:\tTArrayOfString;\n-\tregroot:\tInteger;\n-\tregpath:\tString;\n-\n-begin\n-\t// Get constants from main script and adjust behavior accordingly\n-\t// ModPathType MUST be 'system' or 'user'; force 'user' if invalid\n-\tif ModPathType = 'system' then begin\n-\t\tregroot := HKEY_LOCAL_MACHINE;\n-\t\tregpath := 'SYSTEM\\CurrentControlSet\\Control\\Session Manager\\Environment';\n-\tend else begin\n-\t\tregroot := HKEY_CURRENT_USER;\n-\t\tregpath := 'Environment';\n-\tend;\n-\n-\t// Get array of new directories and act on each individually\n-\tpathdir := ModPathDir();\n-\tfor d := 0 to GetArrayLength(pathdir)-1 do begin\n-\t\tupdatepath := true;\n-\n-\t\t// Modify WinNT path\n-\t\tif UsingWinNT() = true then begin\n-\n-\t\t\t// Get current path, split into an array\n-\t\t\tRegQueryStringValue(regroot, regpath, 'Path', oldpath);\n-\t\t\toldpath := oldpath + ';';\n-\t\t\ti := 0;\n-\n-\t\t\twhile (Pos(';', oldpath) > 0) do begin\n-\t\t\t\tSetArrayLength(pathArr, i+1);\n-\t\t\t\tpathArr[i] := Copy(oldpath, 0, Pos(';', oldpath)-1);\n-\t\t\t\toldpath := Copy(oldpath, Pos(';', oldpath)+1, Length(oldpath));\n-\t\t\t\ti := i + 1;\n-\n-\t\t\t\t// Check if current directory matches app dir\n-\t\t\t\tif pathdir[d] = pathArr[i-1] then begin\n-\t\t\t\t\t// if uninstalling, remove dir from path\n-\t\t\t\t\tif IsUninstaller() = true then begin\n-\t\t\t\t\t\tcontinue;\n-\t\t\t\t\t// if installing, flag that dir already exists in path\n-\t\t\t\t\tend else begin\n-\t\t\t\t\t\tupdatepath := false;\n-\t\t\t\t\tend;\n-\t\t\t\tend;\n-\n-\t\t\t\t// Add current directory to new path\n-\t\t\t\tif i = 1 then begin\n-\t\t\t\t\tnewpath := pathArr[i-1];\n-\t\t\t\tend else begin\n-\t\t\t\t\tnewpath := newpath + ';' + pathArr[i-1];\n-\t\t\t\tend;\n-\t\t\tend;\n-\n-\t\t\t// Append app dir to path if not already included\n-\t\t\tif (IsUninstaller() = false) AND (updatepath = true) then\n-\t\t\t\tnewpath := newpath + ';' + pathdir[d];\n-\n-\t\t\t// Write new path\n-\t\t\tRegWriteStringValue(regroot, regpath, 'Path', newpath);\n-\n-\t\t// Modify Win9x path\n-\t\tend else begin\n-\n-\t\t\t// Convert to shortened dirname\n-\t\t\tpathdir[d] := GetShortName(pathdir[d]);\n-\n-\t\t\t// If autoexec.bat exists, check if app dir already exists in path\n-\t\t\taExecFile := 'C:\\AUTOEXEC.BAT';\n-\t\t\tif FileExists(aExecFile) then begin\n-\t\t\t\tLoadStringsFromFile(aExecFile, aExecArr);\n-\t\t\t\tfor i := 0 to GetArrayLength(aExecArr)-1 do begin\n-\t\t\t\t\tif IsUninstaller() = false then begin\n-\t\t\t\t\t\t// If app dir already exists while installing, skip add\n-\t\t\t\t\t\tif (Pos(pathdir[d], aExecArr[i]) > 0) then\n-\t\t\t\t\t\t\tupdatepath := false;\n-\t\t\t\t\t\t\tbreak;\n-\t\t\t\t\tend else begin\n-\t\t\t\t\t\t// If app dir exists and = what we originally set, then delete at uninstall\n-\t\t\t\t\t\tif aExecArr[i] = 'SET PATH=%PATH%;' + pathdir[d] then\n-\t\t\t\t\t\t\taExecArr[i] := '';\n-\t\t\t\t\tend;\n-\t\t\t\tend;\n-\t\t\tend;\n-\n-\t\t\t// If app dir not found, or autoexec.bat didn't exist, then (create and) append to current path\n-\t\t\tif (IsUninstaller() = false) AND (updatepath = true) then begin\n-\t\t\t\tSaveStringToFile(aExecFile, #13#10 + 'SET PATH=%PATH%;' + pathdir[d], True);\n-\n-\t\t\t// If uninstalling, write the full autoexec out\n-\t\t\tend else begin\n-\t\t\t\tSaveStringsToFile(aExecFile, aExecArr, False);\n-\t\t\tend;\n-\t\tend;\n-\tend;\n-end;\n-\n-// Split a string into an array using passed delimiter\n-procedure Explode(var Dest: TArrayOfString; Text: String; Separator: String);\n-var\n-\ti: Integer;\n-begin\n-\ti := 0;\n-\trepeat\n-\t\tSetArrayLength(Dest, i+1);\n-\t\tif Pos(Separator,Text) > 0 then\tbegin\n-\t\t\tDest[i] := Copy(Text, 1, Pos(Separator, Text)-1);\n-\t\t\tText := Copy(Text, Pos(Separator,Text) + Length(Separator), Length(Text));\n-\t\t\ti := i + 1;\n-\t\tend else begin\n-\t\t\t Dest[i] := Text;\n-\t\t\t Text := '';\n-\t\tend;\n-\tuntil Length(Text)=0;\n-end;\n-\n-\n-procedure ModPathCurStepChanged(CurStep: TSetupStep);\n-var\n-\ttaskname:\tString;\n-begin\n-\ttaskname := ModPathName;\n-\tif CurStep = ssPostInstall then\n-\t\tif IsTaskSelected(taskname) then\n-\t\t\tModPath();\n-end;\n-\n-procedure CurUninstallStepChanged(CurUninstallStep: TUninstallStep);\n-var\n-\taSelectedTasks:\tTArrayOfString;\n-\ti:\t\t\t\tInteger;\n-\ttaskname:\t\tString;\n-\tregpath:\t\tString;\n-\tregstring:\t\tString;\n-\tappid:\t\t\tString;\n-begin\n-\t// only run during actual uninstall\n-\tif CurUninstallStep = usUninstall then begin\n-\t\t// get list of selected tasks saved in registry at install time\n-\t\tappid := '{#emit SetupSetting(\"AppId\")}';\n-\t\tif appid = '' then appid := '{#emit SetupSetting(\"AppName\")}';\n-\t\tregpath := ExpandConstant('Software\\Microsoft\\Windows\\CurrentVersion\\Uninstall\\'+appid+'_is1');\n-\t\tRegQueryStringValue(HKLM, regpath, 'Inno Setup: Selected Tasks', regstring);\n-\t\tif regstring = '' then RegQueryStringValue(HKCU, regpath, 'Inno Setup: Selected Tasks', regstring);\n-\n-\t\t// check each task; if matches modpath taskname, trigger patch removal\n-\t\tif regstring <> '' then begin\n-\t\t\ttaskname := ModPathName;\n-\t\t\tExplode(aSelectedTasks, regstring, ',');\n-\t\t\tif GetArrayLength(aSelectedTasks) > 0 then begin\n-\t\t\t\tfor i := 0 to GetArrayLength(aSelectedTasks)-1 do begin\n-\t\t\t\t\tif comparetext(aSelectedTasks[i], taskname) = 0 then\n-\t\t\t\t\t\tModPath();\n-\t\t\t\tend;\n-\t\t\tend;\n-\t\tend;\n-\tend;\n-end;\n-\n-function NeedRestart(): Boolean;\n-var\n-\ttaskname:\tString;\n-begin\n-\ttaskname := ModPathName;\n-\tif IsTaskSelected(taskname) and not UsingWinNT() then begin\n-\t\tResult := True;\n-\tend else begin\n-\t\tResult := False;\n-\tend;\n-end;"}, {"sha": "70648beac38b03565f77547f23542998dcce10b0", "filename": "src/etc/installer/exe/rust.iss", "status": "removed", "additions": 0, "deletions": 87, "changes": 87, "blob_url": "https://github.com/rust-lang/rust/blob/997d953eeec0be62c59ea028c95cd7be49adf58f/src%2Fetc%2Finstaller%2Fexe%2Frust.iss", "raw_url": "https://github.com/rust-lang/rust/raw/997d953eeec0be62c59ea028c95cd7be49adf58f/src%2Fetc%2Finstaller%2Fexe%2Frust.iss", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fetc%2Finstaller%2Fexe%2Frust.iss?ref=997d953eeec0be62c59ea028c95cd7be49adf58f", "patch": "@@ -1,87 +0,0 @@\n-#define CFG_RELEASE_NUM GetEnv(\"CFG_RELEASE_NUM\")\n-#define CFG_RELEASE GetEnv(\"CFG_RELEASE\")\n-#define CFG_PACKAGE_NAME GetEnv(\"CFG_PACKAGE_NAME\")\n-#define CFG_BUILD GetEnv(\"CFG_BUILD\")\n-\n-[Setup]\n-\n-SetupIconFile=rust-logo.ico\n-AppName=Rust\n-AppVersion={#CFG_RELEASE}\n-AppCopyright=Copyright (C) 2006-2014 Mozilla Foundation, MIT license\n-AppPublisher=Mozilla Foundation\n-AppPublisherURL=http://www.rust-lang.org\n-VersionInfoVersion={#CFG_RELEASE_NUM}\n-LicenseFile=LICENSE.txt\n-\n-PrivilegesRequired=lowest\n-DisableWelcomePage=true\n-DisableProgramGroupPage=true\n-DisableReadyPage=true\n-DisableStartupPrompt=true\n-\n-OutputDir=.\\\n-SourceDir=.\\\n-OutputBaseFilename={#CFG_PACKAGE_NAME}-{#CFG_BUILD}\n-DefaultDirName={sd}\\Rust\n-\n-Compression=lzma2/normal\n-InternalCompressLevel=normal\n-SolidCompression=no\n-\n-ChangesEnvironment=true\n-ChangesAssociations=no\n-AllowUNCPath=false\n-AllowNoIcons=true\n-Uninstallable=yes\n-\n-[Tasks]\n-Name: modifypath; Description: &Add {app}\\bin to your PATH (recommended)\n-\n-[Components]\n-Name: rust; Description: \"Rust compiler and standard crates\"; Types: full compact custom; Flags: fixed\n-#ifdef MINGW\n-Name: gcc; Description: \"Linker and platform libraries\"; Types: full\n-#endif\n-Name: docs; Description: \"HTML documentation\"; Types: full\n-Name: cargo; Description: \"Cargo, the Rust package manager\"; Types: full\n-Name: std; Description: \"The Rust Standard Library\"; Types: full\n-// tool-rls-start\n-Name: rls; Description: \"RLS, the Rust Language Server\"\n-// tool-rls-end\n-\n-[Files]\n-Source: \"rustc/*.*\"; DestDir: \"{app}\"; Flags: ignoreversion recursesubdirs; Components: rust\n-#ifdef MINGW\n-Source: \"rust-mingw/*.*\"; DestDir: \"{app}\"; Flags: ignoreversion recursesubdirs; Components: gcc\n-#endif\n-Source: \"rust-docs/*.*\"; DestDir: \"{app}\"; Flags: ignoreversion recursesubdirs; Components: docs\n-Source: \"cargo/*.*\"; DestDir: \"{app}\"; Flags: ignoreversion recursesubdirs; Components: cargo\n-Source: \"rust-std/*.*\"; DestDir: \"{app}\"; Flags: ignoreversion recursesubdirs; Components: std\n-// tool-rls-start\n-Source: \"rls/*.*\"; DestDir: \"{app}\"; Flags: ignoreversion recursesubdirs; Components: rls\n-Source: \"rust-analysis/*.*\"; DestDir: \"{app}\"; Flags: ignoreversion recursesubdirs; Components: rls\n-// tool-rls-end\n-\n-[Code]\n-const\n-\tModPathName = 'modifypath';\n-\tModPathType = 'user';\n-\n-function ModPathDir(): TArrayOfString;\n-begin\n-\tsetArrayLength(Result, 1)\n-\tResult[0] := ExpandConstant('{app}\\bin');\n-end;\n-\n-#include \"modpath.iss\"\n-#include \"upgrade.iss\"\n-\n-// Both modpath.iss and upgrade.iss want to overload CurStepChanged.\n-// This version does the overload then delegates to each.\n-\n-procedure CurStepChanged(CurStep: TSetupStep);\n-begin\n-  UpgradeCurStepChanged(CurStep);\n-  ModPathCurStepChanged(CurStep);\n-end;"}, {"sha": "29da7c333bb72b3c1cc1d6d463b8acc792c16363", "filename": "src/etc/installer/exe/upgrade.iss", "status": "removed", "additions": 0, "deletions": 61, "changes": 61, "blob_url": "https://github.com/rust-lang/rust/blob/997d953eeec0be62c59ea028c95cd7be49adf58f/src%2Fetc%2Finstaller%2Fexe%2Fupgrade.iss", "raw_url": "https://github.com/rust-lang/rust/raw/997d953eeec0be62c59ea028c95cd7be49adf58f/src%2Fetc%2Finstaller%2Fexe%2Fupgrade.iss", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fetc%2Finstaller%2Fexe%2Fupgrade.iss?ref=997d953eeec0be62c59ea028c95cd7be49adf58f", "patch": "@@ -1,61 +0,0 @@\n-// The following code taken from https://stackoverflow.com/questions/2000296/innosetup-how-to-automatically-uninstall-previous-installed-version\n-// It performs upgrades by running the uninstaller before the install\n-\n-/////////////////////////////////////////////////////////////////////\n-function GetUninstallString(): String;\n-var\n-  sUnInstPath: String;\n-  sUnInstallString: String;\n-begin\n-  sUnInstPath := ExpandConstant('Software\\Microsoft\\Windows\\CurrentVersion\\Uninstall\\Rust_is1');\n-  sUnInstallString := '';\n-  if not RegQueryStringValue(HKLM, sUnInstPath, 'UninstallString', sUnInstallString) then\n-    RegQueryStringValue(HKCU, sUnInstPath, 'UninstallString', sUnInstallString);\n-  Result := sUnInstallString;\n-end;\n-\n-\n-/////////////////////////////////////////////////////////////////////\n-function IsUpgrade(): Boolean;\n-begin\n-  Result := (GetUninstallString() <> '');\n-end;\n-\n-\n-/////////////////////////////////////////////////////////////////////\n-function UnInstallOldVersion(): Integer;\n-var\n-  sUnInstallString: String;\n-  iResultCode: Integer;\n-begin\n-// Return Values:\n-// 1 - uninstall string is empty\n-// 2 - error executing the UnInstallString\n-// 3 - successfully executed the UnInstallString\n-\n-  // default return value\n-  Result := 0;\n-\n-  // get the uninstall string of the old app\n-  sUnInstallString := GetUninstallString();\n-  if sUnInstallString <> '' then begin\n-    sUnInstallString := RemoveQuotes(sUnInstallString);\n-    if Exec(sUnInstallString, '/SILENT /NORESTART /SUPPRESSMSGBOXES','', SW_HIDE, ewWaitUntilTerminated, iResultCode) then\n-      Result := 3\n-    else\n-      Result := 2;\n-  end else\n-    Result := 1;\n-end;\n-\n-/////////////////////////////////////////////////////////////////////\n-procedure UpgradeCurStepChanged(CurStep: TSetupStep);\n-begin\n-  if (CurStep=ssInstall) then\n-  begin\n-    if (IsUpgrade()) then\n-    begin\n-      UnInstallOldVersion();\n-    end;\n-  end;\n-end;"}]}