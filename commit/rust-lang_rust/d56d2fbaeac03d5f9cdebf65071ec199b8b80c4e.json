{"sha": "d56d2fbaeac03d5f9cdebf65071ec199b8b80c4e", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQ1NmQyZmJhZWFjMDNkNWY5Y2RlYmY2NTA3MWVjMTk5YjhiODBjNGU=", "commit": {"author": {"name": "John K\u00e5re Alsaker", "email": "john.kare.alsaker@gmail.com", "date": "2018-11-30T16:45:33Z"}, "committer": {"name": "John K\u00e5re Alsaker", "email": "john.kare.alsaker@gmail.com", "date": "2019-04-25T16:23:33Z"}, "message": "Update rvalue_promotable_map", "tree": {"sha": "75a45947bcc386060baf8eab8d8baee6c8dbff8d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/75a45947bcc386060baf8eab8d8baee6c8dbff8d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d56d2fbaeac03d5f9cdebf65071ec199b8b80c4e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d56d2fbaeac03d5f9cdebf65071ec199b8b80c4e", "html_url": "https://github.com/rust-lang/rust/commit/d56d2fbaeac03d5f9cdebf65071ec199b8b80c4e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d56d2fbaeac03d5f9cdebf65071ec199b8b80c4e/comments", "author": {"login": "Zoxc", "id": 25784, "node_id": "MDQ6VXNlcjI1Nzg0", "avatar_url": "https://avatars.githubusercontent.com/u/25784?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Zoxc", "html_url": "https://github.com/Zoxc", "followers_url": "https://api.github.com/users/Zoxc/followers", "following_url": "https://api.github.com/users/Zoxc/following{/other_user}", "gists_url": "https://api.github.com/users/Zoxc/gists{/gist_id}", "starred_url": "https://api.github.com/users/Zoxc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Zoxc/subscriptions", "organizations_url": "https://api.github.com/users/Zoxc/orgs", "repos_url": "https://api.github.com/users/Zoxc/repos", "events_url": "https://api.github.com/users/Zoxc/events{/privacy}", "received_events_url": "https://api.github.com/users/Zoxc/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Zoxc", "id": 25784, "node_id": "MDQ6VXNlcjI1Nzg0", "avatar_url": "https://avatars.githubusercontent.com/u/25784?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Zoxc", "html_url": "https://github.com/Zoxc", "followers_url": "https://api.github.com/users/Zoxc/followers", "following_url": "https://api.github.com/users/Zoxc/following{/other_user}", "gists_url": "https://api.github.com/users/Zoxc/gists{/gist_id}", "starred_url": "https://api.github.com/users/Zoxc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Zoxc/subscriptions", "organizations_url": "https://api.github.com/users/Zoxc/orgs", "repos_url": "https://api.github.com/users/Zoxc/repos", "events_url": "https://api.github.com/users/Zoxc/events{/privacy}", "received_events_url": "https://api.github.com/users/Zoxc/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b8b4ad597a2eac24452e2e78f7b043805f2bb846", "url": "https://api.github.com/repos/rust-lang/rust/commits/b8b4ad597a2eac24452e2e78f7b043805f2bb846", "html_url": "https://github.com/rust-lang/rust/commit/b8b4ad597a2eac24452e2e78f7b043805f2bb846"}], "stats": {"total": 16, "additions": 7, "deletions": 9}, "files": [{"sha": "b8677280b10428ac8a3c650b8cc5042f79cfbfe4", "filename": "src/librustc/arena.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d56d2fbaeac03d5f9cdebf65071ec199b8b80c4e/src%2Flibrustc%2Farena.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d56d2fbaeac03d5f9cdebf65071ec199b8b80c4e/src%2Flibrustc%2Farena.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Farena.rs?ref=d56d2fbaeac03d5f9cdebf65071ec199b8b80c4e", "patch": "@@ -17,6 +17,7 @@ macro_rules! arena_types {\n             [few] mir_keys: rustc::util::nodemap::DefIdSet,\n             [decode] specialization_graph: rustc::traits::specialization_graph::Graph,\n             [] region_scope_tree: rustc::middle::region::ScopeTree,\n+            [] item_local_set: rustc::util::nodemap::ItemLocalSet,\n         ], $tcx);\n     )\n }"}, {"sha": "f00cd5584eba338c7986bdfdb488c2df04f4a39e", "filename": "src/librustc/middle/expr_use_visitor.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/d56d2fbaeac03d5f9cdebf65071ec199b8b80c4e/src%2Flibrustc%2Fmiddle%2Fexpr_use_visitor.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d56d2fbaeac03d5f9cdebf65071ec199b8b80c4e/src%2Flibrustc%2Fmiddle%2Fexpr_use_visitor.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fexpr_use_visitor.rs?ref=d56d2fbaeac03d5f9cdebf65071ec199b8b80c4e", "patch": "@@ -17,7 +17,6 @@ use crate::middle::region;\n use crate::ty::{self, DefIdTree, TyCtxt, adjustment};\n \n use crate::hir::{self, PatKind};\n-use rustc_data_structures::sync::Lrc;\n use std::rc::Rc;\n use syntax::ptr::P;\n use syntax_pos::Span;\n@@ -272,7 +271,7 @@ impl<'a, 'tcx> ExprUseVisitor<'a, 'tcx, 'tcx> {\n                param_env: ty::ParamEnv<'tcx>,\n                region_scope_tree: &'a region::ScopeTree,\n                tables: &'a ty::TypeckTables<'tcx>,\n-               rvalue_promotable_map: Option<Lrc<ItemLocalSet>>)\n+               rvalue_promotable_map: Option<&'tcx ItemLocalSet>)\n                -> Self\n     {\n         ExprUseVisitor {"}, {"sha": "a5578ead9dd8fe7c5e5b4150639a726fad3d9e27", "filename": "src/librustc/middle/mem_categorization.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/d56d2fbaeac03d5f9cdebf65071ec199b8b80c4e/src%2Flibrustc%2Fmiddle%2Fmem_categorization.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d56d2fbaeac03d5f9cdebf65071ec199b8b80c4e/src%2Flibrustc%2Fmiddle%2Fmem_categorization.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fmem_categorization.rs?ref=d56d2fbaeac03d5f9cdebf65071ec199b8b80c4e", "patch": "@@ -77,7 +77,6 @@ use syntax_pos::Span;\n use std::borrow::Cow;\n use std::fmt;\n use std::hash::{Hash, Hasher};\n-use rustc_data_structures::sync::Lrc;\n use rustc_data_structures::indexed_vec::Idx;\n use std::rc::Rc;\n use crate::util::nodemap::ItemLocalSet;\n@@ -290,7 +289,7 @@ pub struct MemCategorizationContext<'a, 'gcx: 'a+'tcx, 'tcx: 'a> {\n     pub tcx: TyCtxt<'a, 'gcx, 'tcx>,\n     pub region_scope_tree: &'a region::ScopeTree,\n     pub tables: &'a ty::TypeckTables<'tcx>,\n-    rvalue_promotable_map: Option<Lrc<ItemLocalSet>>,\n+    rvalue_promotable_map: Option<&'tcx ItemLocalSet>,\n     infcx: Option<&'a InferCtxt<'a, 'gcx, 'tcx>>,\n }\n \n@@ -400,7 +399,7 @@ impl<'a, 'tcx> MemCategorizationContext<'a, 'tcx, 'tcx> {\n     pub fn new(tcx: TyCtxt<'a, 'tcx, 'tcx>,\n                region_scope_tree: &'a region::ScopeTree,\n                tables: &'a ty::TypeckTables<'tcx>,\n-               rvalue_promotable_map: Option<Lrc<ItemLocalSet>>)\n+               rvalue_promotable_map: Option<&'tcx ItemLocalSet>)\n                -> MemCategorizationContext<'a, 'tcx, 'tcx> {\n         MemCategorizationContext {\n             tcx,"}, {"sha": "18c977c43a7bb3559bd1f6477da51ede3b182f59", "filename": "src/librustc/query/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d56d2fbaeac03d5f9cdebf65071ec199b8b80c4e/src%2Flibrustc%2Fquery%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d56d2fbaeac03d5f9cdebf65071ec199b8b80c4e/src%2Flibrustc%2Fquery%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fquery%2Fmod.rs?ref=d56d2fbaeac03d5f9cdebf65071ec199b8b80c4e", "patch": "@@ -504,7 +504,7 @@ rustc_queries! {\n             }\n             cache { true }\n         }\n-        query rvalue_promotable_map(key: DefId) -> Lrc<ItemLocalSet> {\n+        query rvalue_promotable_map(key: DefId) -> &'tcx ItemLocalSet {\n             desc { |tcx|\n                 \"checking which parts of `{}` are promotable to static\",\n                 tcx.def_path_str(key)"}, {"sha": "5553f1311545c7a72ee30e3d9a89d0bb393a8367", "filename": "src/librustc_passes/rvalue_promotion.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/d56d2fbaeac03d5f9cdebf65071ec199b8b80c4e/src%2Flibrustc_passes%2Frvalue_promotion.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d56d2fbaeac03d5f9cdebf65071ec199b8b80c4e/src%2Flibrustc_passes%2Frvalue_promotion.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_passes%2Frvalue_promotion.rs?ref=d56d2fbaeac03d5f9cdebf65071ec199b8b80c4e", "patch": "@@ -25,7 +25,6 @@ use rustc::ty::query::Providers;\n use rustc::ty::subst::{InternalSubsts, SubstsRef};\n use rustc::util::nodemap::{ItemLocalSet, HirIdSet};\n use rustc::hir;\n-use rustc_data_structures::sync::Lrc;\n use syntax_pos::{Span, DUMMY_SP};\n use log::debug;\n use Promotability::*;\n@@ -53,7 +52,7 @@ fn const_is_rvalue_promotable_to_static<'a, 'tcx>(tcx: TyCtxt<'a, 'tcx, 'tcx>,\n \n fn rvalue_promotable_map<'a, 'tcx>(tcx: TyCtxt<'a, 'tcx, 'tcx>,\n                                    def_id: DefId)\n-                                   -> Lrc<ItemLocalSet>\n+                                   -> &'tcx ItemLocalSet\n {\n     let outer_def_id = tcx.closure_base_def_id(def_id);\n     if outer_def_id != def_id {\n@@ -77,7 +76,7 @@ fn rvalue_promotable_map<'a, 'tcx>(tcx: TyCtxt<'a, 'tcx, 'tcx>,\n     let body_id = tcx.hir().body_owned_by(hir_id);\n     let _ = visitor.check_nested_body(body_id);\n \n-    Lrc::new(visitor.result)\n+    tcx.arena.alloc(visitor.result)\n }\n \n struct CheckCrateVisitor<'a, 'tcx: 'a> {"}]}