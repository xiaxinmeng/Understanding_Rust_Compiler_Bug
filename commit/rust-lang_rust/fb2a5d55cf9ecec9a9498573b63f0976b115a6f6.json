{"sha": "fb2a5d55cf9ecec9a9498573b63f0976b115a6f6", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZiMmE1ZDU1Y2Y5ZWNlYzlhOTQ5ODU3M2I2M2YwOTc2YjExNWE2ZjY=", "commit": {"author": {"name": "Kornel", "email": "kornel@geekhood.net", "date": "2017-11-07T11:23:20Z"}, "committer": {"name": "Kornel", "email": "kornel@geekhood.net", "date": "2017-11-07T11:23:20Z"}, "message": "Remove deprecated message\n\nSecond stage of #43067", "tree": {"sha": "40ec49aa4ae8484c90127e78ccf9075cc73942d0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/40ec49aa4ae8484c90127e78ccf9075cc73942d0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/fb2a5d55cf9ecec9a9498573b63f0976b115a6f6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/fb2a5d55cf9ecec9a9498573b63f0976b115a6f6", "html_url": "https://github.com/rust-lang/rust/commit/fb2a5d55cf9ecec9a9498573b63f0976b115a6f6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/fb2a5d55cf9ecec9a9498573b63f0976b115a6f6/comments", "author": {"login": "kornelski", "id": 72159, "node_id": "MDQ6VXNlcjcyMTU5", "avatar_url": "https://avatars.githubusercontent.com/u/72159?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kornelski", "html_url": "https://github.com/kornelski", "followers_url": "https://api.github.com/users/kornelski/followers", "following_url": "https://api.github.com/users/kornelski/following{/other_user}", "gists_url": "https://api.github.com/users/kornelski/gists{/gist_id}", "starred_url": "https://api.github.com/users/kornelski/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kornelski/subscriptions", "organizations_url": "https://api.github.com/users/kornelski/orgs", "repos_url": "https://api.github.com/users/kornelski/repos", "events_url": "https://api.github.com/users/kornelski/events{/privacy}", "received_events_url": "https://api.github.com/users/kornelski/received_events", "type": "User", "site_admin": false}, "committer": {"login": "kornelski", "id": 72159, "node_id": "MDQ6VXNlcjcyMTU5", "avatar_url": "https://avatars.githubusercontent.com/u/72159?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kornelski", "html_url": "https://github.com/kornelski", "followers_url": "https://api.github.com/users/kornelski/followers", "following_url": "https://api.github.com/users/kornelski/following{/other_user}", "gists_url": "https://api.github.com/users/kornelski/gists{/gist_id}", "starred_url": "https://api.github.com/users/kornelski/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kornelski/subscriptions", "organizations_url": "https://api.github.com/users/kornelski/orgs", "repos_url": "https://api.github.com/users/kornelski/repos", "events_url": "https://api.github.com/users/kornelski/events{/privacy}", "received_events_url": "https://api.github.com/users/kornelski/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a17e72462fcf4c4b8699fba086ab5363b0bba3bb", "url": "https://api.github.com/repos/rust-lang/rust/commits/a17e72462fcf4c4b8699fba086ab5363b0bba3bb", "html_url": "https://github.com/rust-lang/rust/commit/a17e72462fcf4c4b8699fba086ab5363b0bba3bb"}], "stats": {"total": 21, "additions": 0, "deletions": 21}, "files": [{"sha": "c9d6c965bf2d44363726909368183fb477b1aadf", "filename": "src/librustc_trans/back/link.rs", "status": "modified", "additions": 0, "deletions": 21, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/fb2a5d55cf9ecec9a9498573b63f0976b115a6f6/src%2Flibrustc_trans%2Fback%2Flink.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fb2a5d55cf9ecec9a9498573b63f0976b115a6f6/src%2Flibrustc_trans%2Fback%2Flink.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Fback%2Flink.rs?ref=fb2a5d55cf9ecec9a9498573b63f0976b115a6f6", "patch": "@@ -503,31 +503,10 @@ fn link_staticlib(sess: &Session,\n     if !all_native_libs.is_empty() {\n         if sess.opts.prints.contains(&PrintRequest::NativeStaticLibs) {\n             print_native_static_libs(sess, &all_native_libs);\n-        } else {\n-            // Fallback for backwards compatibility only\n-            print_native_static_libs_legacy(sess, &all_native_libs);\n         }\n     }\n }\n \n-fn print_native_static_libs_legacy(sess: &Session, all_native_libs: &[NativeLibrary]) {\n-    sess.note_without_error(\"link against the following native artifacts when linking against \\\n-                             this static library\");\n-    sess.note_without_error(\"This list will not be printed by default. \\\n-        Please add --print=native-static-libs if you need this information\");\n-\n-    for lib in all_native_libs.iter().filter(|l| relevant_lib(sess, l)) {\n-        let name = match lib.kind {\n-            NativeLibraryKind::NativeStaticNobundle |\n-            NativeLibraryKind::NativeUnknown => \"library\",\n-            NativeLibraryKind::NativeFramework => \"framework\",\n-            // These are included, no need to print them\n-            NativeLibraryKind::NativeStatic => continue,\n-        };\n-        sess.note_without_error(&format!(\"{}: {}\", name, lib.name));\n-    }\n-}\n-\n fn print_native_static_libs(sess: &Session, all_native_libs: &[NativeLibrary]) {\n     let lib_args: Vec<_> = all_native_libs.iter()\n         .filter(|l| relevant_lib(sess, l))"}]}