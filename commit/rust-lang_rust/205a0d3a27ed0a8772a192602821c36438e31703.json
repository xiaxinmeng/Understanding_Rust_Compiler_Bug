{"sha": "205a0d3a27ed0a8772a192602821c36438e31703", "node_id": "MDY6Q29tbWl0NzI0NzEyOjIwNWEwZDNhMjdlZDBhODc3MmExOTI2MDI4MjFjMzY0MzhlMzE3MDM=", "commit": {"author": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2021-05-10T18:05:24Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-05-10T18:05:24Z"}, "message": "Rollup merge of #84465 - jyn514:primitive, r=GuillaumeGomez\n\nrustdoc: Implement `is_primitive` in terms of `primitive_type()`\n\nPreviously, they disagreed about what types were primitives.\n\nr? `@GuillaumeGomez`", "tree": {"sha": "aaa443072bcd4930068d082a26f6c90c000f6541", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/aaa443072bcd4930068d082a26f6c90c000f6541"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/205a0d3a27ed0a8772a192602821c36438e31703", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJgmXXkCRBK7hj4Ov3rIwAA1KMIAA4Yp83s3B6sfr2xabCN/xxy\nQovKd2QmxI40nvYkEzYtwX9sAAheObVj4XaYIjnsPqxqHYZEEONfEfkWNNVVp3/F\nLv5gBqZvR3cs820W8DYMkZivsiKNKNLFJiBD3qUOeHlLCZOikM1e1uGPhqswR5B3\nHgyqIGyK0Waii0kc6r5xD/ClBFw7FvG57d4rlNdmhj7ZL1XvnLb/Y8buSZBEstg5\nltw9INnUHL7wXOipEgXcr5YiPGEPR7//ghdIYlk9lR+l0orZfMSfqmgDTIaoiZd+\nuo72UELFOvc3HEWskyFVvC6Ie8tAM5KBqPK5/z22Ypap40RrUivxBPQzK8qY1KA=\n=i9rK\n-----END PGP SIGNATURE-----\n", "payload": "tree aaa443072bcd4930068d082a26f6c90c000f6541\nparent 266f452118e27e6a3d9d6b6f9d5483890a18345f\nparent 909a33d3b4035c29ceb9cd79da4191b32a5a4391\nauthor Guillaume Gomez <guillaume1.gomez@gmail.com> 1620669924 +0200\ncommitter GitHub <noreply@github.com> 1620669924 +0200\n\nRollup merge of #84465 - jyn514:primitive, r=GuillaumeGomez\n\nrustdoc: Implement `is_primitive` in terms of `primitive_type()`\n\nPreviously, they disagreed about what types were primitives.\n\nr? `@GuillaumeGomez`\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/205a0d3a27ed0a8772a192602821c36438e31703", "html_url": "https://github.com/rust-lang/rust/commit/205a0d3a27ed0a8772a192602821c36438e31703", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/205a0d3a27ed0a8772a192602821c36438e31703/comments", "author": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "266f452118e27e6a3d9d6b6f9d5483890a18345f", "url": "https://api.github.com/repos/rust-lang/rust/commits/266f452118e27e6a3d9d6b6f9d5483890a18345f", "html_url": "https://github.com/rust-lang/rust/commit/266f452118e27e6a3d9d6b6f9d5483890a18345f"}, {"sha": "909a33d3b4035c29ceb9cd79da4191b32a5a4391", "url": "https://api.github.com/repos/rust-lang/rust/commits/909a33d3b4035c29ceb9cd79da4191b32a5a4391", "html_url": "https://github.com/rust-lang/rust/commit/909a33d3b4035c29ceb9cd79da4191b32a5a4391"}], "stats": {"total": 9, "additions": 1, "deletions": 8}, "files": [{"sha": "bca7a8cfcee0970a62b55b05ecff01c93dd5c501", "filename": "src/librustdoc/clean/types.rs", "status": "modified", "additions": 1, "deletions": 8, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/205a0d3a27ed0a8772a192602821c36438e31703/src%2Flibrustdoc%2Fclean%2Ftypes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/205a0d3a27ed0a8772a192602821c36438e31703/src%2Flibrustdoc%2Fclean%2Ftypes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fclean%2Ftypes.rs?ref=205a0d3a27ed0a8772a192602821c36438e31703", "patch": "@@ -1606,7 +1606,6 @@ impl Type {\n                 }\n             }\n             RawPointer(..) => Some(PrimitiveType::RawPointer),\n-            BorrowedRef { type_: box Generic(..), .. } => Some(PrimitiveType::Reference),\n             BareFunction(..) => Some(PrimitiveType::Fn),\n             Never => Some(PrimitiveType::Never),\n             _ => None,\n@@ -1665,13 +1664,7 @@ impl Type {\n     }\n \n     crate fn is_primitive(&self) -> bool {\n-        match self {\n-            Self::Primitive(_) => true,\n-            Self::BorrowedRef { ref type_, .. } | Self::RawPointer(_, ref type_) => {\n-                type_.is_primitive()\n-            }\n-            _ => false,\n-        }\n+        self.primitive_type().is_some()\n     }\n \n     crate fn projection(&self) -> Option<(&Type, DefId, Symbol)> {"}]}