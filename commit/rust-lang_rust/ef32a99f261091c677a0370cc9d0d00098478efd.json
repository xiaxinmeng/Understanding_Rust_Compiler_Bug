{"sha": "ef32a99f261091c677a0370cc9d0d00098478efd", "node_id": "MDY6Q29tbWl0NzI0NzEyOmVmMzJhOTlmMjYxMDkxYzY3N2EwMzcwY2M5ZDBkMDAwOTg0NzhlZmQ=", "commit": {"author": {"name": "Ben Blum", "email": "bblum@andrew.cmu.edu", "date": "2012-08-09T23:54:25Z"}, "committer": {"name": "Ben Blum", "email": "bblum@andrew.cmu.edu", "date": "2012-08-10T00:29:34Z"}, "message": "vim: hilight 'self' as a constant instead of a keyword", "tree": {"sha": "5ae552aa71ccb0f1952b4bce40911c156858592f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5ae552aa71ccb0f1952b4bce40911c156858592f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ef32a99f261091c677a0370cc9d0d00098478efd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ef32a99f261091c677a0370cc9d0d00098478efd", "html_url": "https://github.com/rust-lang/rust/commit/ef32a99f261091c677a0370cc9d0d00098478efd", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ef32a99f261091c677a0370cc9d0d00098478efd/comments", "author": {"login": "bblum", "id": 1820515, "node_id": "MDQ6VXNlcjE4MjA1MTU=", "avatar_url": "https://avatars.githubusercontent.com/u/1820515?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bblum", "html_url": "https://github.com/bblum", "followers_url": "https://api.github.com/users/bblum/followers", "following_url": "https://api.github.com/users/bblum/following{/other_user}", "gists_url": "https://api.github.com/users/bblum/gists{/gist_id}", "starred_url": "https://api.github.com/users/bblum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bblum/subscriptions", "organizations_url": "https://api.github.com/users/bblum/orgs", "repos_url": "https://api.github.com/users/bblum/repos", "events_url": "https://api.github.com/users/bblum/events{/privacy}", "received_events_url": "https://api.github.com/users/bblum/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bblum", "id": 1820515, "node_id": "MDQ6VXNlcjE4MjA1MTU=", "avatar_url": "https://avatars.githubusercontent.com/u/1820515?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bblum", "html_url": "https://github.com/bblum", "followers_url": "https://api.github.com/users/bblum/followers", "following_url": "https://api.github.com/users/bblum/following{/other_user}", "gists_url": "https://api.github.com/users/bblum/gists{/gist_id}", "starred_url": "https://api.github.com/users/bblum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bblum/subscriptions", "organizations_url": "https://api.github.com/users/bblum/orgs", "repos_url": "https://api.github.com/users/bblum/repos", "events_url": "https://api.github.com/users/bblum/events{/privacy}", "received_events_url": "https://api.github.com/users/bblum/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d9134928552bd863295e5110e4fe1f53a6c81405", "url": "https://api.github.com/repos/rust-lang/rust/commits/d9134928552bd863295e5110e4fe1f53a6c81405", "html_url": "https://github.com/rust-lang/rust/commit/d9134928552bd863295e5110e4fe1f53a6c81405"}], "stats": {"total": 4, "additions": 3, "deletions": 1}, "files": [{"sha": "70b8698553ea7873a74dace6df37c4e0626a342b", "filename": "src/etc/vim/syntax/rust.vim", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ef32a99f261091c677a0370cc9d0d00098478efd/src%2Fetc%2Fvim%2Fsyntax%2Frust.vim", "raw_url": "https://github.com/rust-lang/rust/raw/ef32a99f261091c677a0370cc9d0d00098478efd/src%2Fetc%2Fvim%2Fsyntax%2Frust.vim", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fetc%2Fvim%2Fsyntax%2Frust.vim?ref=ef32a99f261091c677a0370cc9d0d00098478efd", "patch": "@@ -16,7 +16,7 @@ syn keyword   rustKeyword     alt again as break\n syn keyword   rustKeyword     check claim const copy do drop else export extern fail\n syn keyword   rustKeyword     for if impl import in let log\n syn keyword   rustKeyword     loop match mod module move mut new of owned priv pub pure\n-syn keyword   rustKeyword     ret return self to unchecked\n+syn keyword   rustKeyword     ret return to unchecked\n syn match     rustKeyword     \"unsafe\" \" Allows also matching unsafe::foo()\n syn keyword   rustKeyword     use while with\n \" FIXME: Scoped impl's name is also fallen in this category\n@@ -42,6 +42,7 @@ syn keyword   rustType        size_t ptrdiff_t clock_t time_t\n syn keyword   rustType        c_longlong c_ulonglong intptr_t uintptr_t\n syn keyword   rustType        off_t dev_t ino_t pid_t mode_t ssize_t\n \n+syn keyword   rustSelf        self\n syn keyword   rustBoolean     true false\n \n syn keyword   rustConstant    some none       \" option\n@@ -112,6 +113,7 @@ hi def link rustCharacter     Character\n hi def link rustNumber        Number\n hi def link rustBoolean       Boolean\n hi def link rustConstant      Constant\n+hi def link rustSelf          Constant\n hi def link rustFloat         Float\n hi def link rustAssert        Keyword\n hi def link rustKeyword       Keyword"}]}