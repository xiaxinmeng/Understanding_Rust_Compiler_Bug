{"sha": "f28d89f6fb6e02c3b018cd81bf2ca13c7de3571c", "node_id": "MDY6Q29tbWl0NzI0NzEyOmYyOGQ4OWY2ZmI2ZTAyYzNiMDE4Y2Q4MWJmMmNhMTNjN2RlMzU3MWM=", "commit": {"author": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2015-02-16T05:57:43Z"}, "committer": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2015-02-17T00:53:37Z"}, "message": "Rollup merge of #22366 - dotdash:ret_adjust, r=alexcrichton\n\nWithout the adjustments the retslot might have the wrong type, e.g. when\nthe return value is implicitly coerced to a trait object.\n\nFixes #22346", "tree": {"sha": "c74dd6641137a36b3563c07ba3ea5b87d0c195e0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c74dd6641137a36b3563c07ba3ea5b87d0c195e0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f28d89f6fb6e02c3b018cd81bf2ca13c7de3571c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f28d89f6fb6e02c3b018cd81bf2ca13c7de3571c", "html_url": "https://github.com/rust-lang/rust/commit/f28d89f6fb6e02c3b018cd81bf2ca13c7de3571c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f28d89f6fb6e02c3b018cd81bf2ca13c7de3571c/comments", "author": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e0477fa7f956246ee83f9ff2d70febe0d203e352", "url": "https://api.github.com/repos/rust-lang/rust/commits/e0477fa7f956246ee83f9ff2d70febe0d203e352", "html_url": "https://github.com/rust-lang/rust/commit/e0477fa7f956246ee83f9ff2d70febe0d203e352"}, {"sha": "109e1184aa47cad4f866811fc547d7237e73194a", "url": "https://api.github.com/repos/rust-lang/rust/commits/109e1184aa47cad4f866811fc547d7237e73194a", "html_url": "https://github.com/rust-lang/rust/commit/109e1184aa47cad4f866811fc547d7237e73194a"}], "stats": {"total": 19, "additions": 18, "deletions": 1}, "files": [{"sha": "e6cd44676cefb6a11dca91a98c3277d369739163", "filename": "src/librustc_trans/trans/controlflow.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f28d89f6fb6e02c3b018cd81bf2ca13c7de3571c/src%2Flibrustc_trans%2Ftrans%2Fcontrolflow.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f28d89f6fb6e02c3b018cd81bf2ca13c7de3571c/src%2Flibrustc_trans%2Ftrans%2Fcontrolflow.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Ftrans%2Fcontrolflow.rs?ref=f28d89f6fb6e02c3b018cd81bf2ca13c7de3571c", "patch": "@@ -339,7 +339,7 @@ pub fn trans_ret<'blk, 'tcx>(bcx: Block<'blk, 'tcx>,\n     let mut bcx = bcx;\n     let dest = match (fcx.llretslotptr.get(), retval_expr) {\n         (Some(_), Some(retval_expr)) => {\n-            let ret_ty = expr_ty(bcx, &*retval_expr);\n+            let ret_ty = expr_ty_adjusted(bcx, &*retval_expr);\n             expr::SaveIn(fcx.get_ret_slot(bcx, ty::FnConverging(ret_ty), \"ret_slot\"))\n         }\n         _ => expr::Ignore,"}, {"sha": "3193e5c5fc2477f9005f9ba79580d93c41de4444", "filename": "src/test/run-pass/issue22346.rs", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/f28d89f6fb6e02c3b018cd81bf2ca13c7de3571c/src%2Ftest%2Frun-pass%2Fissue22346.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f28d89f6fb6e02c3b018cd81bf2ca13c7de3571c/src%2Ftest%2Frun-pass%2Fissue22346.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue22346.rs?ref=f28d89f6fb6e02c3b018cd81bf2ca13c7de3571c", "patch": "@@ -0,0 +1,17 @@\n+// Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// This used to cause an ICE because the retslot for the \"return\" had the wrong type\n+fn testcase<'a>() -> Box<Iterator<Item=usize> + 'a> {\n+    return Box::new(range(0, 3).map(|i| { return i; }));\n+}\n+\n+fn main() {\n+}"}]}