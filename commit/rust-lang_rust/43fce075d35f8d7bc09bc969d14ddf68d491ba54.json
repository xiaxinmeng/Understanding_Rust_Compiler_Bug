{"sha": "43fce075d35f8d7bc09bc969d14ddf68d491ba54", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQzZmNlMDc1ZDM1ZjhkN2JjMDliYzk2OWQxNGRkZjY4ZDQ5MWJhNTQ=", "commit": {"author": {"name": "Matthew Jasper", "email": "mjjasper1@gmail.com", "date": "2018-06-27T21:06:21Z"}, "committer": {"name": "Matthew Jasper", "email": "mjjasper1@gmail.com", "date": "2018-06-27T21:06:21Z"}, "message": "Update MIR opt tests", "tree": {"sha": "9cd9d9d978dd0aa0c3b589482f042b7d1ed18f38", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9cd9d9d978dd0aa0c3b589482f042b7d1ed18f38"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/43fce075d35f8d7bc09bc969d14ddf68d491ba54", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/43fce075d35f8d7bc09bc969d14ddf68d491ba54", "html_url": "https://github.com/rust-lang/rust/commit/43fce075d35f8d7bc09bc969d14ddf68d491ba54", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/43fce075d35f8d7bc09bc969d14ddf68d491ba54/comments", "author": {"login": "matthewjasper", "id": 20113453, "node_id": "MDQ6VXNlcjIwMTEzNDUz", "avatar_url": "https://avatars.githubusercontent.com/u/20113453?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthewjasper", "html_url": "https://github.com/matthewjasper", "followers_url": "https://api.github.com/users/matthewjasper/followers", "following_url": "https://api.github.com/users/matthewjasper/following{/other_user}", "gists_url": "https://api.github.com/users/matthewjasper/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthewjasper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthewjasper/subscriptions", "organizations_url": "https://api.github.com/users/matthewjasper/orgs", "repos_url": "https://api.github.com/users/matthewjasper/repos", "events_url": "https://api.github.com/users/matthewjasper/events{/privacy}", "received_events_url": "https://api.github.com/users/matthewjasper/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matthewjasper", "id": 20113453, "node_id": "MDQ6VXNlcjIwMTEzNDUz", "avatar_url": "https://avatars.githubusercontent.com/u/20113453?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthewjasper", "html_url": "https://github.com/matthewjasper", "followers_url": "https://api.github.com/users/matthewjasper/followers", "following_url": "https://api.github.com/users/matthewjasper/following{/other_user}", "gists_url": "https://api.github.com/users/matthewjasper/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthewjasper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthewjasper/subscriptions", "organizations_url": "https://api.github.com/users/matthewjasper/orgs", "repos_url": "https://api.github.com/users/matthewjasper/repos", "events_url": "https://api.github.com/users/matthewjasper/events{/privacy}", "received_events_url": "https://api.github.com/users/matthewjasper/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9185bb30615b4670d89704cc7aec7434fb47a721", "url": "https://api.github.com/repos/rust-lang/rust/commits/9185bb30615b4670d89704cc7aec7434fb47a721", "html_url": "https://github.com/rust-lang/rust/commit/9185bb30615b4670d89704cc7aec7434fb47a721"}], "stats": {"total": 208, "additions": 83, "deletions": 125}, "files": [{"sha": "440ad3518ae5afc97ab74c48d429d6bd56f9db1d", "filename": "src/test/mir-opt/combine_array_len.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/43fce075d35f8d7bc09bc969d14ddf68d491ba54/src%2Ftest%2Fmir-opt%2Fcombine_array_len.rs", "raw_url": "https://github.com/rust-lang/rust/raw/43fce075d35f8d7bc09bc969d14ddf68d491ba54/src%2Ftest%2Fmir-opt%2Fcombine_array_len.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fcombine_array_len.rs?ref=43fce075d35f8d7bc09bc969d14ddf68d491ba54", "patch": "@@ -21,13 +21,13 @@ fn main() {\n // END RUST SOURCE\n \n // START rustc.norm2.InstCombine.before.mir\n-//     _5 = Len(_1);\n+//     _4 = Len(_1);\n //     ...\n-//     _10 = Len(_1);\n+//     _8 = Len(_1);\n // END rustc.norm2.InstCombine.before.mir\n \n // START rustc.norm2.InstCombine.after.mir\n-//     _5 = const 2usize;\n+//     _4 = const 2usize;\n //     ...\n-//     _10 = const 2usize;\n+//     _8 = const 2usize;\n // END rustc.norm2.InstCombine.after.mir"}, {"sha": "067a937b0b30c878a33fd1d8c9ead1669abe5446", "filename": "src/test/mir-opt/copy_propagation.rs", "status": "modified", "additions": 3, "deletions": 6, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/43fce075d35f8d7bc09bc969d14ddf68d491ba54/src%2Ftest%2Fmir-opt%2Fcopy_propagation.rs", "raw_url": "https://github.com/rust-lang/rust/raw/43fce075d35f8d7bc09bc969d14ddf68d491ba54/src%2Ftest%2Fmir-opt%2Fcopy_propagation.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fcopy_propagation.rs?ref=43fce075d35f8d7bc09bc969d14ddf68d491ba54", "patch": "@@ -22,20 +22,17 @@ fn main() {\n // START rustc.test.CopyPropagation.before.mir\n //  bb0: {\n //      ...\n-//      _3 = _1;\n+//      _2 = _1;\n //      ...\n-//      _2 = move _3;\n-//      ...\n-//      _4 = _2;\n-//      _0 = move _4;\n+//      _0 = _2;\n //      ...\n //      return;\n //  }\n // END rustc.test.CopyPropagation.before.mir\n // START rustc.test.CopyPropagation.after.mir\n //  bb0: {\n //      ...\n-//      _0 = move _1;\n+//      _0 = _1;\n //      ...\n //      return;\n //  }"}, {"sha": "dacaff8f2d9420bbee07e0de845669a801a2456b", "filename": "src/test/mir-opt/copy_propagation_arg.rs", "status": "modified", "additions": 4, "deletions": 6, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/43fce075d35f8d7bc09bc969d14ddf68d491ba54/src%2Ftest%2Fmir-opt%2Fcopy_propagation_arg.rs", "raw_url": "https://github.com/rust-lang/rust/raw/43fce075d35f8d7bc09bc969d14ddf68d491ba54/src%2Ftest%2Fmir-opt%2Fcopy_propagation_arg.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fcopy_propagation_arg.rs?ref=43fce075d35f8d7bc09bc969d14ddf68d491ba54", "patch": "@@ -117,25 +117,23 @@ fn main() {\n // START rustc.arg_src.CopyPropagation.before.mir\n // bb0: {\n //      ...\n-//      _3 = _1;\n-//      _2 = move _3;\n+//      _2 = _1;\n //      ...\n //      _1 = const 123i32;\n //      ...\n-//      _4 = _2;\n-//      _0 = move _4;\n+//      _0 = _2;\n //      ...\n //      return;\n //  }\n // END rustc.arg_src.CopyPropagation.before.mir\n // START rustc.arg_src.CopyPropagation.after.mir\n // bb0: {\n //     ...\n-//     _3 = _1;\n+//     _2 = _1;\n //     ...\n //     _1 = const 123i32;\n //     ...\n-//     _0 = move _3;\n+//     _0 = _2;\n //     ...\n //     return;\n // }"}, {"sha": "9496fd9e6c173119d94f7f5f140f4c7f21548da4", "filename": "src/test/mir-opt/end_region_5.rs", "status": "modified", "additions": 1, "deletions": 5, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/43fce075d35f8d7bc09bc969d14ddf68d491ba54/src%2Ftest%2Fmir-opt%2Fend_region_5.rs", "raw_url": "https://github.com/rust-lang/rust/raw/43fce075d35f8d7bc09bc969d14ddf68d491ba54/src%2Ftest%2Fmir-opt%2Fend_region_5.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fend_region_5.rs?ref=43fce075d35f8d7bc09bc969d14ddf68d491ba54", "patch": "@@ -68,13 +68,9 @@ fn foo<F>(f: F) where F: FnOnce() -> i32 {\n // START rustc.main-{{closure}}.SimplifyCfg-qualify-consts.after.mir\n // fn main::{{closure}}(_1: [closure@NodeId(18) d:&'14s D]) -> i32 {\n //    let mut _0: i32;\n-//    let mut _2: i32;\n //\n //    bb0: {\n-//        StorageLive(_2);\n-//        _2 = ((*(_1.0: &'14s D)).0: i32);\n-//        _0 = move _2;\n-//        StorageDead(_2);\n+//        _0 = ((*(_1.0: &'14s D)).0: i32);\n //        return;\n //    }\n // END rustc.main-{{closure}}.SimplifyCfg-qualify-consts.after.mir"}, {"sha": "910362f65c8d92d797c8c3c16404ff329108730c", "filename": "src/test/mir-opt/end_region_6.rs", "status": "modified", "additions": 1, "deletions": 5, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/43fce075d35f8d7bc09bc969d14ddf68d491ba54/src%2Ftest%2Fmir-opt%2Fend_region_6.rs", "raw_url": "https://github.com/rust-lang/rust/raw/43fce075d35f8d7bc09bc969d14ddf68d491ba54/src%2Ftest%2Fmir-opt%2Fend_region_6.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fend_region_6.rs?ref=43fce075d35f8d7bc09bc969d14ddf68d491ba54", "patch": "@@ -70,14 +70,10 @@ fn foo<F>(f: F) where F: FnOnce() -> i32 {\n //     ...\n //     let _2: &'16_0rs D;\n //     ...\n-//     let mut _3: i32;\n //     bb0: {\n //         StorageLive(_2);\n //         _2 = &'16_0rs (*(_1.0: &'19s D));\n-//         StorageLive(_3);\n-//         _3 = ((*_2).0: i32);\n-//         _0 = move _3;\n-//         StorageDead(_3);\n+//         _0 = ((*_2).0: i32);\n //         EndRegion('16_0rs);\n //         StorageDead(_2);\n //         return;"}, {"sha": "e44b41993aa9512329cbefe78f3077d11a980efc", "filename": "src/test/mir-opt/end_region_7.rs", "status": "modified", "additions": 1, "deletions": 5, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/43fce075d35f8d7bc09bc969d14ddf68d491ba54/src%2Ftest%2Fmir-opt%2Fend_region_7.rs", "raw_url": "https://github.com/rust-lang/rust/raw/43fce075d35f8d7bc09bc969d14ddf68d491ba54/src%2Ftest%2Fmir-opt%2Fend_region_7.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fend_region_7.rs?ref=43fce075d35f8d7bc09bc969d14ddf68d491ba54", "patch": "@@ -78,14 +78,10 @@ fn foo<F>(f: F) where F: FnOnce() -> i32 {\n //     ...\n //     let _2: &'16_0rs D;\n //     ...\n-//     let mut _3: i32;\n //     bb0: {\n //         StorageLive(_2);\n //         _2 = &'16_0rs (_1.0: D);\n-//         StorageLive(_3);\n-//         _3 = ((*_2).0: i32);\n-//         _0 = move _3;\n-//         StorageDead(_3);\n+//         _0 = ((*_2).0: i32);\n //         EndRegion('16_0rs);\n //         StorageDead(_2);\n //         drop(_1) -> [return: bb2, unwind: bb1];"}, {"sha": "7fdf971b3b9df0bd945de24c4347e3decb51976b", "filename": "src/test/mir-opt/end_region_8.rs", "status": "modified", "additions": 1, "deletions": 5, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/43fce075d35f8d7bc09bc969d14ddf68d491ba54/src%2Ftest%2Fmir-opt%2Fend_region_8.rs", "raw_url": "https://github.com/rust-lang/rust/raw/43fce075d35f8d7bc09bc969d14ddf68d491ba54/src%2Ftest%2Fmir-opt%2Fend_region_8.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fend_region_8.rs?ref=43fce075d35f8d7bc09bc969d14ddf68d491ba54", "patch": "@@ -76,13 +76,9 @@ fn foo<F>(f: F) where F: FnOnce() -> i32 {\n // START rustc.main-{{closure}}.SimplifyCfg-qualify-consts.after.mir\n // fn main::{{closure}}(_1: [closure@NodeId(22) r:&'19s D]) -> i32 {\n //     let mut _0: i32;\n-//     let mut _2: i32;\n //\n //     bb0: {\n-//         StorageLive(_2);\n-//         _2 = ((*(_1.0: &'21_1rs D)).0: i32);\n-//         _0 = move _2;\n-//         StorageDead(_2);\n+//         _0 = ((*(_1.0: &'21_1rs D)).0: i32);\n //         return;\n //     }\n // }"}, {"sha": "fab2f9eff5af35d47add05bd81b010ad18b027c4", "filename": "src/test/mir-opt/end_region_destruction_extents_1.rs", "status": "modified", "additions": 43, "deletions": 57, "changes": 100, "blob_url": "https://github.com/rust-lang/rust/blob/43fce075d35f8d7bc09bc969d14ddf68d491ba54/src%2Ftest%2Fmir-opt%2Fend_region_destruction_extents_1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/43fce075d35f8d7bc09bc969d14ddf68d491ba54/src%2Ftest%2Fmir-opt%2Fend_region_destruction_extents_1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fend_region_destruction_extents_1.rs?ref=43fce075d35f8d7bc09bc969d14ddf68d491ba54", "patch": "@@ -65,52 +65,45 @@ unsafe impl<'a, #[may_dangle] 'b> Drop for D1<'a, 'b> {\n \n // START rustc.main.QualifyAndPromoteConstants.before.mir\n // fn main() -> () {\n-//     let mut _0: ();\n+// let mut _0: ();\n //     let mut _1: &'12ds S1;\n-//     let mut _2: &'12ds S1;\n-//     let mut _3: D1<'12ds, '10s>;\n+//     let mut _2: D1<'12ds, '10s>;\n+//     let mut _3: &'12ds S1;\n //     let mut _4: &'12ds S1;\n-//     let mut _5: &'12ds S1;\n-//     let mut _6: S1;\n+//     let mut _5: S1;\n+//     let mut _6: &'10s S1;\n //     let mut _7: &'10s S1;\n-//     let mut _8: &'10s S1;\n-//     let mut _9: S1;\n-//\n+//     let mut _8: S1;\n //     bb0: {\n //         StorageLive(_2);\n //         StorageLive(_3);\n //         StorageLive(_4);\n //         StorageLive(_5);\n+//         _5 = S1::{{constructor}}(const \"ex1\",);\n+//         _4 = &'12ds _5;\n+//         _3 = &'12ds (*_4);\n //         StorageLive(_6);\n-//         _6 = S1::{{constructor}}(const \"ex1\",);\n-//         _5 = &'12ds _6;\n-//         _4 = &'12ds (*_5);\n //         StorageLive(_7);\n //         StorageLive(_8);\n-//         StorageLive(_9);\n-//         _9 = S1::{{constructor}}(const \"dang1\",);\n-//         _8 = &'10s _9;\n-//         _7 = &'10s (*_8);\n-//         _3 = D1<'12ds, '10s>::{{constructor}}(move _4, move _7);\n+//         _8 = S1::{{constructor}}(const \"dang1\",);\n+//         _7 = &'10s _8;\n+//         _6 = &'10s (*_7);\n+//         _2 = D1<'12ds, '10s>::{{constructor}}(move _3, move _6);\n //         EndRegion('10s);\n-//         StorageDead(_7);\n-//         StorageDead(_4);\n-//         _2 = (_3.0: &'12ds S1);\n-//         _1 = move _2;\n-//         StorageDead(_2);\n-//         drop(_3) -> [return: bb2, unwind: bb1];\n+//         StorageDead(_6);\n+//         StorageDead(_3);\n+//         _1 = (_2.0: &'12ds S1);\n+//         drop(_2) -> [return: bb2, unwind: bb1];\n //     }\n-//\n //     bb1: {\n //         resume;\n //     }\n-//\n //     bb2: {\n-//         StorageDead(_3);\n+//         StorageDead(_2);\n+//         StorageDead(_7);\n //         StorageDead(_8);\n-//         StorageDead(_9);\n+//         StorageDead(_4);\n //         StorageDead(_5);\n-//         StorageDead(_6);\n //         EndRegion('12ds);\n //         _0 = ();\n //         return;\n@@ -119,51 +112,44 @@ unsafe impl<'a, #[may_dangle] 'b> Drop for D1<'a, 'b> {\n // END rustc.main.QualifyAndPromoteConstants.before.mir\n \n // START rustc.main.QualifyAndPromoteConstants.after.mir\n-// fn main() -> () {\n+// fn main() -> (){\n //     let mut _0: ();\n //     let mut _1: &'12ds S1;\n-//     let mut _2: &'12ds S1;\n-//     let mut _3: D1<'12ds, '10s>;\n+//     let mut _2: D1<'12ds, '10s>;\n+//     let mut _3: &'12ds S1;\n //     let mut _4: &'12ds S1;\n-//     let mut _5: &'12ds S1;\n-//     let mut _6: S1;\n+//     let mut _5: S1;\n+//     let mut _6: &'10s S1;\n //     let mut _7: &'10s S1;\n-//     let mut _8: &'10s S1;\n-//     let mut _9: S1;\n-//     let mut _10: &'10s S1;\n-//     let mut _11: &'12ds S1;\n-//\n+//     let mut _8: S1;\n+//     let mut _9: &'10s S1;\n+//     let mut _10: &'12ds S1;\n //     bb0: {\n //         StorageLive(_2);\n //         StorageLive(_3);\n //         StorageLive(_4);\n-//         StorageLive(_5);\n-//         _11 = promoted[1];\n-//         _5 = &'12ds (*_11);\n-//         _4 = &'12ds (*_5);\n+//         _10 = promoted[1];\n+//         _4 = &'12ds (*_10);\n+//         _3 = &'12ds (*_4);\n+//         StorageLive(_6);\n //         StorageLive(_7);\n-//         StorageLive(_8);\n-//         _10 = promoted[0];\n-//         _8 = &'10s (*_10);\n-//         _7 = &'10s (*_8);\n-//         _3 = D1<'12ds, '10s>::{{constructor}}(move _4, move _7);\n+//         _9 = promoted[0];\n+//         _7 = &'10s (*_9);\n+//         _6 = &'10s (*_7);\n+//         _2 = D1<'12ds, '10s>::{{constructor}}(move _3, move _6);\n //         EndRegion('10s);\n-//         StorageDead(_7);\n-//         StorageDead(_4);\n-//         _2 = (_3.0: &'12ds S1);\n-//         _1 = move _2;\n-//         StorageDead(_2);\n-//         drop(_3) -> [return: bb2, unwind: bb1];\n+//         StorageDead(_6);\n+//         StorageDead(_3);\n+//         _1 = (_2.0: &'12ds S1);\n+//         drop(_2) -> [return: bb2, unwind: bb1];\n //     }\n-//\n //     bb1: {\n //         resume;\n //     }\n-//\n //     bb2: {\n-//         StorageDead(_3);\n-//         StorageDead(_8);\n-//         StorageDead(_5);\n+//         StorageDead(_2);\n+//         StorageDead(_7);\n+//         StorageDead(_4);\n //         EndRegion('12ds);\n //         _0 = ();\n //         return;"}, {"sha": "6ce51be3ec5db8d1231f827cb9c06e5f825565c0", "filename": "src/test/mir-opt/inline-closure-borrows-arg.rs", "status": "modified", "additions": 3, "deletions": 5, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/43fce075d35f8d7bc09bc969d14ddf68d491ba54/src%2Ftest%2Fmir-opt%2Finline-closure-borrows-arg.rs", "raw_url": "https://github.com/rust-lang/rust/raw/43fce075d35f8d7bc09bc969d14ddf68d491ba54/src%2Ftest%2Fmir-opt%2Finline-closure-borrows-arg.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Finline-closure-borrows-arg.rs?ref=43fce075d35f8d7bc09bc969d14ddf68d491ba54", "patch": "@@ -38,11 +38,9 @@ fn foo<T: Copy>(_t: T, q: &i32) -> i32 {\n //     ...\n //     _7 = &(*_2);\n //     _5 = (move _6, move _7);\n-//     _9 = move (_5.0: &i32);\n-//     _10 = move (_5.1: &i32);\n-//     StorageLive(_8);\n-//     _8 = (*_9);\n-//     _0 = move _8;\n+//     _8 = move (_5.0: &i32);\n+//     _9 = move (_5.1: &i32);\n+//     _0 = (*_8);\n //     ...\n //     return;\n // }"}, {"sha": "22e7de31e90cf2c95a5a527faf70422e6305fd99", "filename": "src/test/mir-opt/inline-closure.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/43fce075d35f8d7bc09bc969d14ddf68d491ba54/src%2Ftest%2Fmir-opt%2Finline-closure.rs", "raw_url": "https://github.com/rust-lang/rust/raw/43fce075d35f8d7bc09bc969d14ddf68d491ba54/src%2Ftest%2Fmir-opt%2Finline-closure.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Finline-closure.rs?ref=43fce075d35f8d7bc09bc969d14ddf68d491ba54", "patch": "@@ -36,7 +36,7 @@ fn foo<T: Copy>(_t: T, q: i32) -> i32 {\n //     _5 = (move _6, move _7);\n //     _8 = move (_5.0: i32);\n //     _9 = move (_5.1: i32);\n-//     _0 = move _8;\n+//     _0 = _8;\n //     ...\n //     return;\n // }"}, {"sha": "646c4312fc21f9598197ad5ebf719c735fd11762", "filename": "src/test/mir-opt/lower_128bit_debug_test.rs", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/43fce075d35f8d7bc09bc969d14ddf68d491ba54/src%2Ftest%2Fmir-opt%2Flower_128bit_debug_test.rs", "raw_url": "https://github.com/rust-lang/rust/raw/43fce075d35f8d7bc09bc969d14ddf68d491ba54/src%2Ftest%2Fmir-opt%2Flower_128bit_debug_test.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Flower_128bit_debug_test.rs?ref=43fce075d35f8d7bc09bc969d14ddf68d491ba54", "patch": "@@ -182,8 +182,8 @@ fn main() {\n //     ...\n //     _1 = move (_13.0: i128);\n //     ...\n-//     _17 = const 7i32 as u128 (Misc);\n-//     _14 = const compiler_builtins::int::shift::rust_i128_shro(_1, move _17) -> bb16;\n+//     _16 = const 7i32 as u128 (Misc);\n+//     _14 = const compiler_builtins::int::shift::rust_i128_shro(_1, move _16) -> bb16;\n //     ...\n //     _1 = move (_14.0: i128);\n //     ...\n@@ -195,8 +195,8 @@ fn main() {\n //     ...\n //     assert(!move (_13.1: bool), \"attempt to shift left with overflow\") -> bb8;\n //     ...\n-//     _16 = const 6i32 as u128 (Misc);\n-//     _13 = const compiler_builtins::int::shift::rust_i128_shlo(_1, move _16) -> bb14;\n+//     _15 = const 6i32 as u128 (Misc);\n+//     _13 = const compiler_builtins::int::shift::rust_i128_shlo(_1, move _15) -> bb14;\n //     ...\n //     assert(!move (_14.1: bool), \"attempt to shift right with overflow\") -> bb9;\n // END rustc.test_signed.Lower128Bit.after.mir\n@@ -218,8 +218,8 @@ fn main() {\n //     ...\n //     _1 = move (_7.0: u128);\n //     ...\n-//     _11 = const 7i32 as u128 (Misc);\n-//     _8 = const compiler_builtins::int::shift::rust_u128_shro(_1, move _11) -> bb14;\n+//     _10 = const 7i32 as u128 (Misc);\n+//     _8 = const compiler_builtins::int::shift::rust_u128_shro(_1, move _10) -> bb14;\n //     ...\n //     _1 = move (_8.0: u128);\n //     ...\n@@ -231,8 +231,8 @@ fn main() {\n //     ...\n //     assert(!move (_7.1: bool), \"attempt to shift left with overflow\") -> bb6;\n //     ...\n-//     _10 = const 6i32 as u128 (Misc);\n-//     _7 = const compiler_builtins::int::shift::rust_u128_shlo(_1, move _10) -> bb12;\n+//     _9 = const 6i32 as u128 (Misc);\n+//     _7 = const compiler_builtins::int::shift::rust_u128_shlo(_1, move _9) -> bb12;\n //     ...\n //     assert(!move (_8.1: bool), \"attempt to shift right with overflow\") -> bb7;\n // END rustc.test_unsigned.Lower128Bit.after.mir"}, {"sha": "27446d6bd28f58c2b7485d2abcb5e3e4e3da500c", "filename": "src/test/mir-opt/lower_128bit_test.rs", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/43fce075d35f8d7bc09bc969d14ddf68d491ba54/src%2Ftest%2Fmir-opt%2Flower_128bit_test.rs", "raw_url": "https://github.com/rust-lang/rust/raw/43fce075d35f8d7bc09bc969d14ddf68d491ba54/src%2Ftest%2Fmir-opt%2Flower_128bit_test.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Flower_128bit_test.rs?ref=43fce075d35f8d7bc09bc969d14ddf68d491ba54", "patch": "@@ -176,11 +176,11 @@ fn main() {\n //     ...\n //     _1 = const compiler_builtins::int::addsub::rust_i128_sub(_1, const 2i128) -> bb6;\n //     ...\n-//     _11 = const 7i32 as u32 (Misc);\n-//     _1 = const compiler_builtins::int::shift::rust_i128_shr(_1, move _11) -> bb9;\n+//     _10 = const 7i32 as u32 (Misc);\n+//     _1 = const compiler_builtins::int::shift::rust_i128_shr(_1, move _10) -> bb9;\n //     ...\n-//     _12 = const 6i32 as u32 (Misc);\n-//     _1 = const compiler_builtins::int::shift::rust_i128_shl(_1, move _12) -> bb10;\n+//     _11 = const 6i32 as u32 (Misc);\n+//     _1 = const compiler_builtins::int::shift::rust_i128_shl(_1, move _11) -> bb10;\n // END rustc.test_signed.Lower128Bit.after.mir\n \n // START rustc.test_unsigned.Lower128Bit.after.mir\n@@ -194,9 +194,9 @@ fn main() {\n //     ...\n //     _1 = const compiler_builtins::int::addsub::rust_u128_sub(_1, const 2u128) -> bb4;\n //     ...\n-//     _5 = const 7i32 as u32 (Misc);\n-//     _1 = const compiler_builtins::int::shift::rust_u128_shr(_1, move _5) -> bb7;\n+//     _4 = const 7i32 as u32 (Misc);\n+//     _1 = const compiler_builtins::int::shift::rust_u128_shr(_1, move _4) -> bb7;\n //     ...\n-//     _6 = const 6i32 as u32 (Misc);\n-//     _1 = const compiler_builtins::int::shift::rust_u128_shl(_1, move _6) -> bb8;\n+//     _5 = const 6i32 as u32 (Misc);\n+//     _1 = const compiler_builtins::int::shift::rust_u128_shl(_1, move _5) -> bb8;\n // END rustc.test_unsigned.Lower128Bit.after.mir"}, {"sha": "a8dd6c73ef017fcd53af55691eae02cbf0e8d415", "filename": "src/test/mir-opt/nll/region-subtyping-basic.rs", "status": "modified", "additions": 4, "deletions": 6, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/43fce075d35f8d7bc09bc969d14ddf68d491ba54/src%2Ftest%2Fmir-opt%2Fnll%2Fregion-subtyping-basic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/43fce075d35f8d7bc09bc969d14ddf68d491ba54/src%2Ftest%2Fmir-opt%2Fnll%2Fregion-subtyping-basic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fnll%2Fregion-subtyping-basic.rs?ref=43fce075d35f8d7bc09bc969d14ddf68d491ba54", "patch": "@@ -32,9 +32,9 @@ fn main() {\n \n // END RUST SOURCE\n // START rustc.main.nll.0.mir\n-// | '_#2r    | {bb2[0..=6], bb3[0..=1]}\n-// | '_#3r    | {bb2[1..=6], bb3[0..=1]}\n-// | '_#4r    | {bb2[5..=6], bb3[0..=1]}\n+// | '_#2r    | {bb2[0..=3], bb3[0..=1]}\n+// | '_#3r    | {bb2[1..=3], bb3[0..=1]}\n+// | '_#4r    | {bb2[3], bb3[0..=1]}\n // END rustc.main.nll.0.mir\n // START rustc.main.nll.0.mir\n // let _6: &'_#4r usize;\n@@ -43,7 +43,5 @@ fn main() {\n // ...\n // _2 = &'_#2r _1[_3];\n // ...\n-// _7 = _2;\n-// ...\n-// _6 = move _7;\n+// _6 = _2;\n // END rustc.main.nll.0.mir"}, {"sha": "2d5c98ff0ed91336fd24a8c153bc5377f23d7b50", "filename": "src/test/mir-opt/validate_1.rs", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/43fce075d35f8d7bc09bc969d14ddf68d491ba54/src%2Ftest%2Fmir-opt%2Fvalidate_1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/43fce075d35f8d7bc09bc969d14ddf68d491ba54/src%2Ftest%2Fmir-opt%2Fvalidate_1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fvalidate_1.rs?ref=43fce075d35f8d7bc09bc969d14ddf68d491ba54", "patch": "@@ -67,10 +67,7 @@ fn main() {\n //         Validate(Suspend(ReScope(Remainder(BlockRemainder { block: ItemLocalId(25), first_statement_index: 0 }))), [(*_2): i32]);\n //         _3 = &ReErased (*_2);\n //         Validate(Acquire, [(*_3): i32/ReScope(Remainder(BlockRemainder { block: ItemLocalId(25), first_statement_index: 0 })) (imm)]);\n-//         StorageLive(_4);\n-//         _4 = (*_3);\n-//         _0 = move _4;\n-//         StorageDead(_4);\n+//         _0 = (*_3);\n //         EndRegion(ReScope(Remainder(BlockRemainder { block: ItemLocalId(25), first_statement_index: 0 })));\n //         StorageDead(_3);\n //         return;"}]}