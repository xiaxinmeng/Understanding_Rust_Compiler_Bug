{"sha": "da0e0b6f5e3cacd5342eb58f78960206639c49c6", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRhMGUwYjZmNWUzY2FjZDUzNDJlYjU4Zjc4OTYwMjA2NjM5YzQ5YzY=", "commit": {"author": {"name": "Eric Holk", "email": "eholk@mozilla.com", "date": "2011-05-24T19:31:59Z"}, "committer": {"name": "Eric Holk", "email": "eholk@mozilla.com", "date": "2011-05-27T22:20:58Z"}, "message": "Removing excessively verbous logging.", "tree": {"sha": "7d100b2e24ab62517b74b32ef8cecd7d1e9aaf06", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7d100b2e24ab62517b74b32ef8cecd7d1e9aaf06"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/da0e0b6f5e3cacd5342eb58f78960206639c49c6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/da0e0b6f5e3cacd5342eb58f78960206639c49c6", "html_url": "https://github.com/rust-lang/rust/commit/da0e0b6f5e3cacd5342eb58f78960206639c49c6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/da0e0b6f5e3cacd5342eb58f78960206639c49c6/comments", "author": null, "committer": null, "parents": [{"sha": "a88af906c594f56709ff8e31db1148a08cd52996", "url": "https://api.github.com/repos/rust-lang/rust/commits/a88af906c594f56709ff8e31db1148a08cd52996", "html_url": "https://github.com/rust-lang/rust/commit/a88af906c594f56709ff8e31db1148a08cd52996"}], "stats": {"total": 37, "additions": 0, "deletions": 37}, "files": [{"sha": "069e5bdb25806fad49537c17ba5ad24c3c677344", "filename": "src/comp/middle/trans.rs", "status": "modified", "additions": 0, "deletions": 37, "changes": 37, "blob_url": "https://github.com/rust-lang/rust/blob/da0e0b6f5e3cacd5342eb58f78960206639c49c6/src%2Fcomp%2Fmiddle%2Ftrans.rs", "raw_url": "https://github.com/rust-lang/rust/raw/da0e0b6f5e3cacd5342eb58f78960206639c49c6/src%2Fcomp%2Fmiddle%2Ftrans.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Ftrans.rs?ref=da0e0b6f5e3cacd5342eb58f78960206639c49c6", "patch": "@@ -5855,11 +5855,6 @@ fn trans_spawn(&@block_ctxt cx,\n         }\n     };\n \n-    // dump a bunch of information\n-    log_err \"Translating Spawn \" +\n-        \"(The compiled program is not actually running yet, don't worry!\";\n-    log_err #fmt(\"task name: %s\", tname);\n-\n     // Generate code\n     //\n     // This is a several step process. The following things need to happen\n@@ -5920,20 +5915,8 @@ fn trans_spawn(&@block_ctxt cx,\n \n     // But first, we'll create a task.\n     let ValueRef lltname = C_str(bcx.fcx.lcx.ccx, tname);\n-    log_err #fmt(\"ty(new_task) = %s\",\n-                 val_str(bcx.fcx.lcx.ccx.tn, \n-                         bcx.fcx.lcx.ccx.upcalls.new_task));\n-    log_err #fmt(\"ty(lltaskptr) = %s\",\n-                 val_str(bcx.fcx.lcx.ccx.tn, \n-                         bcx.fcx.lltaskptr));\n-    log_err #fmt(\"ty(lltname) = %s\",\n-                 val_str(bcx.fcx.lcx.ccx.tn, \n-                         lltname));\n-\n-    log_err \"Building upcall_new_task\";\n     auto new_task = bcx.build.Call(bcx.fcx.lcx.ccx.upcalls.new_task,\n                               [bcx.fcx.lltaskptr, lltname]);\n-    log_err \"Done\";\n \n     // Okay, start the task.\n     // First we find the function\n@@ -5955,29 +5938,9 @@ fn trans_spawn(&@block_ctxt cx,\n \n     auto args_size = size_of(bcx, args_ty).val;\n \n-    log_err \"Building call to start_task\";\n-    log_err #fmt(\"ty(start_task) = %s\", \n-                 val_str(bcx.fcx.lcx.ccx.tn,\n-                         bcx.fcx.lcx.ccx.upcalls.start_task));\n-    log_err #fmt(\"ty(lltaskptr) = %s\", \n-                 val_str(bcx.fcx.lcx.ccx.tn,\n-                         bcx.fcx.lltaskptr));\n-    log_err #fmt(\"ty(new_task) = %s\", \n-                 val_str(bcx.fcx.lcx.ccx.tn,\n-                         new_task));\n-    log_err #fmt(\"ty(llfnptr) = %s\", \n-                 val_str(bcx.fcx.lcx.ccx.tn,\n-                         llfnptr_i));\n-    log_err #fmt(\"ty(llargs) = %s\", \n-                 val_str(bcx.fcx.lcx.ccx.tn,\n-                         llargs_i));\n-    log_err #fmt(\"ty(args_size) = %s\", \n-                 val_str(bcx.fcx.lcx.ccx.tn,\n-                         args_size));\n     bcx.build.Call(bcx.fcx.lcx.ccx.upcalls.start_task,\n                    [bcx.fcx.lltaskptr, new_task,\n                     llfnptr_i, llargs_i, args_size]);\n-    log_err \"Done\";\n \n     /*\n     alt(dom) {"}]}