{"sha": "8858d71d28d68a0063f3ccab1fbf378d69afc78b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjg4NThkNzFkMjhkNjhhMDA2M2YzY2NhYjFmYmYzNzhkNjlhZmM3OGI=", "commit": {"author": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2019-11-16T15:12:09Z"}, "committer": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2020-03-02T12:15:51Z"}, "message": "Put back output-format option for show-coverage", "tree": {"sha": "4fba810613c4117e5bb0771de81a61280c6537c1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4fba810613c4117e5bb0771de81a61280c6537c1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8858d71d28d68a0063f3ccab1fbf378d69afc78b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8858d71d28d68a0063f3ccab1fbf378d69afc78b", "html_url": "https://github.com/rust-lang/rust/commit/8858d71d28d68a0063f3ccab1fbf378d69afc78b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8858d71d28d68a0063f3ccab1fbf378d69afc78b/comments", "author": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "committer": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6af4fd385ec23145bc3ba08f700c61361ae961c0", "url": "https://api.github.com/repos/rust-lang/rust/commits/6af4fd385ec23145bc3ba08f700c61361ae961c0", "html_url": "https://github.com/rust-lang/rust/commit/6af4fd385ec23145bc3ba08f700c61361ae961c0"}], "stats": {"total": 65, "additions": 56, "deletions": 9}, "files": [{"sha": "99a55f3c682826490a09b9111bfe2d72d8a5c058", "filename": "src/librustdoc/config.rs", "status": "modified", "additions": 51, "deletions": 8, "changes": 59, "blob_url": "https://github.com/rust-lang/rust/blob/8858d71d28d68a0063f3ccab1fbf378d69afc78b/src%2Flibrustdoc%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8858d71d28d68a0063f3ccab1fbf378d69afc78b/src%2Flibrustdoc%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fconfig.rs?ref=8858d71d28d68a0063f3ccab1fbf378d69afc78b", "patch": "@@ -1,5 +1,6 @@\n use std::collections::BTreeMap;\n use std::ffi::OsStr;\n+use std::convert::TryFrom;\n use std::fmt;\n use std::path::PathBuf;\n \n@@ -24,6 +25,33 @@ use crate::opts;\n use crate::passes::{self, Condition, DefaultPassOption};\n use crate::theme;\n \n+#[derive(Clone, Copy, PartialEq, Eq, Debug)]\n+pub enum OutputFormat {\n+    Json,\n+    HTML,\n+}\n+\n+impl OutputFormat {\n+    pub fn is_json(&self) -> bool {\n+        match *self {\n+            OutputFormat::Json => true,\n+            _ => false,\n+        }\n+    }\n+}\n+\n+impl TryFrom<&str> for OutputFormat {\n+    type Error = String;\n+\n+    fn try_from(value: &str) -> Result<Self, Self::Error> {\n+        match value {\n+            \"json\" => Ok(OutputFormat::Json),\n+            \"html\" => Ok(OutputFormat::HTML),\n+            _ => Err(format!(\"unknown output format `{}`\", value)),\n+        }\n+    }\n+}\n+\n /// Configuration options for rustdoc.\n #[derive(Clone)]\n pub struct Options {\n@@ -115,6 +143,8 @@ pub struct Options {\n     pub crate_version: Option<String>,\n     /// Collected options specific to outputting final pages.\n     pub render_options: RenderOptions,\n+    /// Output format rendering (used only for \"show-coverage\" option for the moment)\n+    pub output_format: Option<OutputFormat>,\n }\n \n impl fmt::Debug for Options {\n@@ -425,14 +455,6 @@ impl Options {\n             }\n         }\n \n-        match matches.opt_str(\"w\").as_ref().map(|s| &**s) {\n-            Some(\"html\") | None => {}\n-            Some(s) => {\n-                diag.struct_err(&format!(\"unknown output format: {}\", s)).emit();\n-                return Err(1);\n-            }\n-        }\n-\n         let index_page = matches.opt_str(\"index-page\").map(|s| PathBuf::from(&s));\n         if let Some(ref index_page) = index_page {\n             if !index_page.is_file() {\n@@ -469,6 +491,23 @@ impl Options {\n             }\n         };\n \n+        let output_format = match matches.opt_str(\"output-format\") {\n+            Some(s) => match OutputFormat::try_from(s.as_str()) {\n+                Ok(o) => {\n+                    if o.is_json() && !show_coverage {\n+                        diag.struct_err(\"json output format isn't supported for doc generation\")\n+                            .emit();\n+                        return Err(1);\n+                    }\n+                    Some(o)\n+                }\n+                Err(e) => {\n+                    diag.struct_err(&e).emit();\n+                    return Err(1);\n+                }\n+            }\n+            None => None,\n+        };\n         let crate_name = matches.opt_str(\"crate-name\");\n         let proc_macro_crate = crate_types.contains(&CrateType::ProcMacro);\n         let playground_url = matches.opt_str(\"playground-url\");\n@@ -553,6 +592,7 @@ impl Options {\n                 generate_search_filter,\n                 generate_redirect_pages,\n             },\n+            output_format,\n         })\n     }\n \n@@ -568,6 +608,9 @@ fn check_deprecated_options(matches: &getopts::Matches, diag: &rustc_errors::Han\n \n     for flag in deprecated_flags.iter() {\n         if matches.opt_present(flag) {\n+            if *flag == \"output-format\" && matches.opt_present(\"show-coverage\") {\n+                continue;\n+            }\n             let mut err =\n                 diag.struct_warn(&format!(\"the '{}' flag is considered deprecated\", flag));\n             err.warn("}, {"sha": "b9ae3d53afc042b3b7d5750680f1b860e1ba19fa", "filename": "src/librustdoc/core.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8858d71d28d68a0063f3ccab1fbf378d69afc78b/src%2Flibrustdoc%2Fcore.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8858d71d28d68a0063f3ccab1fbf378d69afc78b/src%2Flibrustdoc%2Fcore.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fcore.rs?ref=8858d71d28d68a0063f3ccab1fbf378d69afc78b", "patch": "@@ -228,6 +228,7 @@ pub fn run_core(options: RustdocOptions) -> (clean::Crate, RenderInfo, RenderOpt\n         mut manual_passes,\n         display_warnings,\n         render_options,\n+        output_format,\n         ..\n     } = options;\n \n@@ -385,6 +386,7 @@ pub fn run_core(options: RustdocOptions) -> (clean::Crate, RenderInfo, RenderOpt\n \n                 let mut renderinfo = RenderInfo::default();\n                 renderinfo.access_levels = access_levels;\n+                renderinfo.output_format = output_format;\n \n                 let mut ctxt = DocContext {\n                     tcx,"}, {"sha": "016054c688ddc050fa880e746d82e8a45fbd15db", "filename": "src/librustdoc/html/render.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/8858d71d28d68a0063f3ccab1fbf378d69afc78b/src%2Flibrustdoc%2Fhtml%2Frender.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8858d71d28d68a0063f3ccab1fbf378d69afc78b/src%2Flibrustdoc%2Fhtml%2Frender.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Frender.rs?ref=8858d71d28d68a0063f3ccab1fbf378d69afc78b", "patch": "@@ -60,7 +60,7 @@ use serde::ser::SerializeSeq;\n use serde::{Serialize, Serializer};\n \n use crate::clean::{self, AttributesExt, Deprecation, GetDefId, SelfTy};\n-use crate::config::RenderOptions;\n+use crate::config::{OutputFormat, RenderOptions};\n use crate::docfs::{DocFS, ErrorStorage, PathError};\n use crate::doctree;\n use crate::html::escape::Escape;\n@@ -270,6 +270,7 @@ pub struct RenderInfo {\n     pub deref_trait_did: Option<DefId>,\n     pub deref_mut_trait_did: Option<DefId>,\n     pub owned_box_did: Option<DefId>,\n+    pub output_format: Option<OutputFormat>,\n }\n \n // Helper structs for rendering items/sidebars and carrying along contextual"}, {"sha": "4198369eca8f55eed32237f160aa70de389bee7e", "filename": "src/librustdoc/html/render/cache.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/8858d71d28d68a0063f3ccab1fbf378d69afc78b/src%2Flibrustdoc%2Fhtml%2Frender%2Fcache.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8858d71d28d68a0063f3ccab1fbf378d69afc78b/src%2Flibrustdoc%2Fhtml%2Frender%2Fcache.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Frender%2Fcache.rs?ref=8858d71d28d68a0063f3ccab1fbf378d69afc78b", "patch": "@@ -139,6 +139,7 @@ impl Cache {\n             deref_trait_did,\n             deref_mut_trait_did,\n             owned_box_did,\n+            ..\n         } = renderinfo;\n \n         let external_paths ="}]}