{"sha": "be7b576cc5030e9824ff8f8025dbef9ba92c7fab", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJlN2I1NzZjYzUwMzBlOTgyNGZmOGY4MDI1ZGJlZjliYTkyYzdmYWI=", "commit": {"author": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2016-05-24T19:08:07Z"}, "committer": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2016-05-24T19:08:07Z"}, "message": "correct typo in comment", "tree": {"sha": "fe0b58c19731d8a5eced98c09d551f83ed8d3271", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fe0b58c19731d8a5eced98c09d551f83ed8d3271"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/be7b576cc5030e9824ff8f8025dbef9ba92c7fab", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/be7b576cc5030e9824ff8f8025dbef9ba92c7fab", "html_url": "https://github.com/rust-lang/rust/commit/be7b576cc5030e9824ff8f8025dbef9ba92c7fab", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/be7b576cc5030e9824ff8f8025dbef9ba92c7fab/comments", "author": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "02af34def742cf1e1ad0427e1a1760114ceefdc7", "url": "https://api.github.com/repos/rust-lang/rust/commits/02af34def742cf1e1ad0427e1a1760114ceefdc7", "html_url": "https://github.com/rust-lang/rust/commit/02af34def742cf1e1ad0427e1a1760114ceefdc7"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "2ded643ef4fdd309da56c954925557c879a8f2b1", "filename": "src/librustc_trans/partitioning.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/be7b576cc5030e9824ff8f8025dbef9ba92c7fab/src%2Flibrustc_trans%2Fpartitioning.rs", "raw_url": "https://github.com/rust-lang/rust/raw/be7b576cc5030e9824ff8f8025dbef9ba92c7fab/src%2Flibrustc_trans%2Fpartitioning.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Fpartitioning.rs?ref=be7b576cc5030e9824ff8f8025dbef9ba92c7fab", "patch": "@@ -228,7 +228,7 @@ fn place_root_translation_items<'a, 'tcx, I>(tcx: TyCtxt<'a, 'tcx, 'tcx>,\n         }\n     }\n \n-    // always ensure we have at least one CGO; otherwise, if we have a\n+    // always ensure we have at least one CGU; otherwise, if we have a\n     // crate with just types (for example), we could wind up with no CGU\n     if codegen_units.is_empty() {\n         let codegen_unit_name = InternedString::new(FALLBACK_CODEGEN_UNIT);"}]}