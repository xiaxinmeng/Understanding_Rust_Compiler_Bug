{"sha": "083a20fb1aee4daef685735652ae21e9b370350d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjA4M2EyMGZiMWFlZTRkYWVmNjg1NzM1NjUyYWUyMWU5YjM3MDM1MGQ=", "commit": {"author": {"name": "St\u00e9phane Campinas", "email": "stephane.campinas@gmail.com", "date": "2019-01-16T22:06:28Z"}, "committer": {"name": "St\u00e9phane Campinas", "email": "stephane.campinas@gmail.com", "date": "2019-01-16T22:06:28Z"}, "message": "version-gate the formatting of commented strings", "tree": {"sha": "76abade5132ecabba1eec46df98343fe75135e7f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/76abade5132ecabba1eec46df98343fe75135e7f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/083a20fb1aee4daef685735652ae21e9b370350d", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQEzBAABCgAdFiEEipi5pnt+pUplKNfibVYg2QghATMFAlw/quQACgkQbVYg2Qgh\nATN/BQf/Tklas2+Qbqgb9cUbKB7zVsfNC+EeBzms/KWrGReQYWdoWq5lXGndD6cF\n2LdNE72syAMq6kN0CRcrThb1uzFxLxJOAT+rVlzmQIvGVC2N0kF3sQnTQ6TRgl9F\nXwu3MK8KRVBuU/qVB5GUFEfsW/HTAP6N8WX1l9c9fbinuGNfhzYk7O595mLtrR/E\nHLbS94dvCly7gkxKw7PGRyn5VjCPJ0IK2c1pIa1Ol2CByPiUf+50/R5HnKJHSiLj\nV+V5loqWZUslAyn7TxG6IOW0mVjJV9zgQ6bV3wo5bJ9Mrlo880jwq1rj6nf2N1Pu\noLyC5zfMvEQqKmboPoScWDutVubPiA==\n=UwSa\n-----END PGP SIGNATURE-----", "payload": "tree 76abade5132ecabba1eec46df98343fe75135e7f\nparent baa62c609e421c4518070958df9ef721c20857e1\nauthor St\u00e9phane Campinas <stephane.campinas@gmail.com> 1547676388 +0100\ncommitter St\u00e9phane Campinas <stephane.campinas@gmail.com> 1547676388 +0100\n\nversion-gate the formatting of commented strings\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/083a20fb1aee4daef685735652ae21e9b370350d", "html_url": "https://github.com/rust-lang/rust/commit/083a20fb1aee4daef685735652ae21e9b370350d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/083a20fb1aee4daef685735652ae21e9b370350d/comments", "author": {"login": "scampi", "id": 795879, "node_id": "MDQ6VXNlcjc5NTg3OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/795879?v=4", "gravatar_id": "", "url": "https://api.github.com/users/scampi", "html_url": "https://github.com/scampi", "followers_url": "https://api.github.com/users/scampi/followers", "following_url": "https://api.github.com/users/scampi/following{/other_user}", "gists_url": "https://api.github.com/users/scampi/gists{/gist_id}", "starred_url": "https://api.github.com/users/scampi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/scampi/subscriptions", "organizations_url": "https://api.github.com/users/scampi/orgs", "repos_url": "https://api.github.com/users/scampi/repos", "events_url": "https://api.github.com/users/scampi/events{/privacy}", "received_events_url": "https://api.github.com/users/scampi/received_events", "type": "User", "site_admin": false}, "committer": {"login": "scampi", "id": 795879, "node_id": "MDQ6VXNlcjc5NTg3OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/795879?v=4", "gravatar_id": "", "url": "https://api.github.com/users/scampi", "html_url": "https://github.com/scampi", "followers_url": "https://api.github.com/users/scampi/followers", "following_url": "https://api.github.com/users/scampi/following{/other_user}", "gists_url": "https://api.github.com/users/scampi/gists{/gist_id}", "starred_url": "https://api.github.com/users/scampi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/scampi/subscriptions", "organizations_url": "https://api.github.com/users/scampi/orgs", "repos_url": "https://api.github.com/users/scampi/repos", "events_url": "https://api.github.com/users/scampi/events{/privacy}", "received_events_url": "https://api.github.com/users/scampi/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "baa62c609e421c4518070958df9ef721c20857e1", "url": "https://api.github.com/repos/rust-lang/rust/commits/baa62c609e421c4518070958df9ef721c20857e1", "html_url": "https://github.com/rust-lang/rust/commit/baa62c609e421c4518070958df9ef721c20857e1"}], "stats": {"total": 52, "additions": 44, "deletions": 8}, "files": [{"sha": "2f357d7e359e3c96330e654a767bb64813a53a37", "filename": "src/utils.rs", "status": "modified", "additions": 10, "deletions": 7, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/083a20fb1aee4daef685735652ae21e9b370350d/src%2Futils.rs", "raw_url": "https://github.com/rust-lang/rust/raw/083a20fb1aee4daef685735652ae21e9b370350d/src%2Futils.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Futils.rs?ref=083a20fb1aee4daef685735652ae21e9b370350d", "patch": "@@ -22,7 +22,7 @@ use syntax::source_map::{BytePos, Span, NO_EXPANSION};\n use syntax_pos::Mark;\n \n use comment::{filter_normal_code, CharClasses, FullCodeCharKind, LineClasses};\n-use config::Config;\n+use config::{Config, Version};\n use rewrite::RewriteContext;\n use shape::{Indent, Shape};\n \n@@ -527,8 +527,9 @@ pub fn trim_left_preserve_layout(orig: &str, indent: Indent, config: &Config) ->\n                 Some(get_prefix_space_width(config, &line))\n             };\n \n-            let new_veto_trim_value =\n-                (kind.is_string() || kind.is_commented_string()) && !line.ends_with('\\\\');\n+            let new_veto_trim_value = (kind.is_string()\n+                || (config.version() == Version::Two && kind.is_commented_string()))\n+                && !line.ends_with('\\\\');\n             let line = if veto_trim || new_veto_trim_value {\n                 veto_trim = new_veto_trim_value;\n                 trimmed = false;\n@@ -541,10 +542,12 @@ pub fn trim_left_preserve_layout(orig: &str, indent: Indent, config: &Config) ->\n             // Because there is a veto against trimming and indenting lines within a string,\n             // such lines should not be taken into account when computing the minimum.\n             match kind {\n-                FullCodeCharKind::InString\n-                | FullCodeCharKind::EndString\n-                | FullCodeCharKind::InStringCommented\n-                | FullCodeCharKind::EndStringCommented => None,\n+                FullCodeCharKind::InStringCommented | FullCodeCharKind::EndStringCommented\n+                    if config.version() == Version::Two =>\n+                {\n+                    None\n+                }\n+                FullCodeCharKind::InString | FullCodeCharKind::EndString => None,\n                 _ => prefix_space_width,\n             }\n         })"}, {"sha": "3c2e27e2293df9737b48b4970513b99373fed811", "filename": "tests/source/issue-3270/one.rs", "status": "renamed", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/083a20fb1aee4daef685735652ae21e9b370350d/tests%2Fsource%2Fissue-3270%2Fone.rs", "raw_url": "https://github.com/rust-lang/rust/raw/083a20fb1aee4daef685735652ae21e9b370350d/tests%2Fsource%2Fissue-3270%2Fone.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fsource%2Fissue-3270%2Fone.rs?ref=083a20fb1aee4daef685735652ae21e9b370350d", "patch": "@@ -1,3 +1,5 @@\n+// rustfmt-version: One\n+\n pub fn main() {\n     /*   let s = String::from(\n         \"", "previous_filename": "tests/target/issue-3270.rs"}, {"sha": "0eb756471e748d143778ee0f131a6267242b6204", "filename": "tests/source/issue-3270/two.rs", "status": "renamed", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/083a20fb1aee4daef685735652ae21e9b370350d/tests%2Fsource%2Fissue-3270%2Ftwo.rs", "raw_url": "https://github.com/rust-lang/rust/raw/083a20fb1aee4daef685735652ae21e9b370350d/tests%2Fsource%2Fissue-3270%2Ftwo.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fsource%2Fissue-3270%2Ftwo.rs?ref=083a20fb1aee4daef685735652ae21e9b370350d", "patch": "@@ -1,3 +1,5 @@\n+// rustfmt-version: Two\n+\n pub fn main() {\n  /*   let s = String::from(\n         \"", "previous_filename": "tests/source/issue-3270.rs"}, {"sha": "4dffe0ab8360024c2b35bc1ab531279b4a66485c", "filename": "tests/target/issue-3132.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/083a20fb1aee4daef685735652ae21e9b370350d/tests%2Ftarget%2Fissue-3132.rs", "raw_url": "https://github.com/rust-lang/rust/raw/083a20fb1aee4daef685735652ae21e9b370350d/tests%2Ftarget%2Fissue-3132.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fissue-3132.rs?ref=083a20fb1aee4daef685735652ae21e9b370350d", "patch": "@@ -1,3 +1,5 @@\n+// rustfmt-version: Two\n+\n fn test() {\n     /*\n     a"}, {"sha": "78de94732432bda4b021a7b6b3832a9b8936183a", "filename": "tests/target/issue-3270/one.rs", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/083a20fb1aee4daef685735652ae21e9b370350d/tests%2Ftarget%2Fissue-3270%2Fone.rs", "raw_url": "https://github.com/rust-lang/rust/raw/083a20fb1aee4daef685735652ae21e9b370350d/tests%2Ftarget%2Fissue-3270%2Fone.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fissue-3270%2Fone.rs?ref=083a20fb1aee4daef685735652ae21e9b370350d", "patch": "@@ -0,0 +1,12 @@\n+// rustfmt-version: One\n+\n+pub fn main() {\n+    /*   let s = String::from(\n+            \"\n+    hello\n+    world\n+    \",\n+        ); */\n+\n+    assert_eq!(s, \"\\nhello\\nworld\\n\");\n+}"}, {"sha": "e48b5921329109284741b730aa46ebc35293de29", "filename": "tests/target/issue-3270/two.rs", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/083a20fb1aee4daef685735652ae21e9b370350d/tests%2Ftarget%2Fissue-3270%2Ftwo.rs", "raw_url": "https://github.com/rust-lang/rust/raw/083a20fb1aee4daef685735652ae21e9b370350d/tests%2Ftarget%2Fissue-3270%2Ftwo.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fissue-3270%2Ftwo.rs?ref=083a20fb1aee4daef685735652ae21e9b370350d", "patch": "@@ -0,0 +1,12 @@\n+// rustfmt-version: Two\n+\n+pub fn main() {\n+    /*   let s = String::from(\n+        \"\n+hello\n+world\n+\",\n+    ); */\n+\n+    assert_eq!(s, \"\\nhello\\nworld\\n\");\n+}"}, {"sha": "7435c5f0866e04e4a774c2dcc1d2281485e6ee47", "filename": "tests/target/issue-3270/wrap.rs", "status": "renamed", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/083a20fb1aee4daef685735652ae21e9b370350d/tests%2Ftarget%2Fissue-3270%2Fwrap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/083a20fb1aee4daef685735652ae21e9b370350d/tests%2Ftarget%2Fissue-3270%2Fwrap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fissue-3270%2Fwrap.rs?ref=083a20fb1aee4daef685735652ae21e9b370350d", "patch": "@@ -1,9 +1,12 @@\n // rustfmt-wrap_comments: true\n+// rustfmt-version: Two\n \n+// check that a line below max_width does not get over the limit when wrapping\n+// it in a block comment\n fn func() {\n     let x = 42;\n     /*\n-    let something = \"one line line  line  line  line  line  line  line  line  line  line  line\n+    let something = \"one line line  line  line  line  line  line  line  line  line  line  line line\n   two lines\n          three lines\";\n      */", "previous_filename": "tests/target/issue-3270-wrap.rs"}]}