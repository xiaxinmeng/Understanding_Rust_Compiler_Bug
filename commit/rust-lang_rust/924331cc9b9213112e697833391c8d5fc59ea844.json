{"sha": "924331cc9b9213112e697833391c8d5fc59ea844", "node_id": "MDY6Q29tbWl0NzI0NzEyOjkyNDMzMWNjOWI5MjEzMTEyZTY5NzgzMzM5MWM4ZDVmYzU5ZWE4NDQ=", "commit": {"author": {"name": "Josh Stone", "email": "jistone@redhat.com", "date": "2017-10-26T22:56:59Z"}, "committer": {"name": "Josh Stone", "email": "jistone@redhat.com", "date": "2017-10-27T00:19:29Z"}, "message": "configure.py: fix --disable-option-checking\n\nGetting the value of this argument needs another level of indexing,\nas `known_args` are stored in `{dict}[list](opt, value)` form.\n\nAlso, when option-checking is disabled, let this bypass the check that\noptions are only passed once, and just apply the last value.", "tree": {"sha": "101fb52c2f238cd11bd1446774d2d97c3ff0f9b1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/101fb52c2f238cd11bd1446774d2d97c3ff0f9b1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/924331cc9b9213112e697833391c8d5fc59ea844", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/924331cc9b9213112e697833391c8d5fc59ea844", "html_url": "https://github.com/rust-lang/rust/commit/924331cc9b9213112e697833391c8d5fc59ea844", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/924331cc9b9213112e697833391c8d5fc59ea844/comments", "author": {"login": "cuviper", "id": 36186, "node_id": "MDQ6VXNlcjM2MTg2", "avatar_url": "https://avatars.githubusercontent.com/u/36186?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cuviper", "html_url": "https://github.com/cuviper", "followers_url": "https://api.github.com/users/cuviper/followers", "following_url": "https://api.github.com/users/cuviper/following{/other_user}", "gists_url": "https://api.github.com/users/cuviper/gists{/gist_id}", "starred_url": "https://api.github.com/users/cuviper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cuviper/subscriptions", "organizations_url": "https://api.github.com/users/cuviper/orgs", "repos_url": "https://api.github.com/users/cuviper/repos", "events_url": "https://api.github.com/users/cuviper/events{/privacy}", "received_events_url": "https://api.github.com/users/cuviper/received_events", "type": "User", "site_admin": false}, "committer": {"login": "cuviper", "id": 36186, "node_id": "MDQ6VXNlcjM2MTg2", "avatar_url": "https://avatars.githubusercontent.com/u/36186?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cuviper", "html_url": "https://github.com/cuviper", "followers_url": "https://api.github.com/users/cuviper/followers", "following_url": "https://api.github.com/users/cuviper/following{/other_user}", "gists_url": "https://api.github.com/users/cuviper/gists{/gist_id}", "starred_url": "https://api.github.com/users/cuviper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cuviper/subscriptions", "organizations_url": "https://api.github.com/users/cuviper/orgs", "repos_url": "https://api.github.com/users/cuviper/repos", "events_url": "https://api.github.com/users/cuviper/events{/privacy}", "received_events_url": "https://api.github.com/users/cuviper/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b218a02ad8b8b79b30a847eadf3e9c739560fadf", "url": "https://api.github.com/repos/rust-lang/rust/commits/b218a02ad8b8b79b30a847eadf3e9c739560fadf", "html_url": "https://github.com/rust-lang/rust/commit/b218a02ad8b8b79b30a847eadf3e9c739560fadf"}], "stats": {"total": 13, "additions": 9, "deletions": 4}, "files": [{"sha": "579422c97993ccbb0d5ad361240b8ebee254f5d1", "filename": "src/bootstrap/configure.py", "status": "modified", "additions": 9, "deletions": 4, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/924331cc9b9213112e697833391c8d5fc59ea844/src%2Fbootstrap%2Fconfigure.py", "raw_url": "https://github.com/rust-lang/rust/raw/924331cc9b9213112e697833391c8d5fc59ea844/src%2Fbootstrap%2Fconfigure.py", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fconfigure.py?ref=924331cc9b9213112e697833391c8d5fc59ea844", "patch": "@@ -225,7 +225,12 @@ def err(msg):\n         unknown_args.append(arg)\n p(\"\")\n \n-if 'option-checking' not in known_args or known_args['option-checking'][1]:\n+# Note: here and a few other places, we use [-1] to apply the *last* value\n+# passed.  But if option-checking is enabled, then the known_args loop will\n+# also assert that options are only passed once.\n+option_checking = ('option-checking' not in known_args\n+                   or known_args['option-checking'][-1][1])\n+if option_checking:\n     if len(unknown_args) > 0:\n         err(\"Option '\" + unknown_args[0] + \"' is not recognized\")\n     if len(need_value_args) > 0:\n@@ -238,7 +243,7 @@ def err(msg):\n \n def build():\n     if 'build' in known_args:\n-        return known_args['build'][0][1]\n+        return known_args['build'][-1][1]\n     return bootstrap.default_build_triple()\n \n \n@@ -276,9 +281,9 @@ def set(key, value):\n \n     # Ensure each option is only passed once\n     arr = known_args[key]\n-    if len(arr) > 1:\n+    if option_checking and len(arr) > 1:\n         err(\"Option '{}' provided more than once\".format(key))\n-    option, value = arr[0]\n+    option, value = arr[-1]\n \n     # If we have a clear avenue to set our value in rustbuild, do so\n     if option.rustbuild is not None:"}]}