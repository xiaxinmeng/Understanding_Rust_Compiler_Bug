{"sha": "191b6c798fa40334ec8898d07b4d28fd76743120", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE5MWI2Yzc5OGZhNDAzMzRlYzg4OThkMDdiNGQyOGZkNzY3NDMxMjA=", "commit": {"author": {"name": "ThibsG", "email": "Thibs@debian.com", "date": "2020-08-22T08:35:18Z"}, "committer": {"name": "ThibsG", "email": "Thibs@debian.com", "date": "2020-08-22T10:58:35Z"}, "message": "Don't lint if it has always inline attribute", "tree": {"sha": "7f0361f2d0d240f13f2c51951fda6d356d5fc110", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7f0361f2d0d240f13f2c51951fda6d356d5fc110"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/191b6c798fa40334ec8898d07b4d28fd76743120", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/191b6c798fa40334ec8898d07b4d28fd76743120", "html_url": "https://github.com/rust-lang/rust/commit/191b6c798fa40334ec8898d07b4d28fd76743120", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/191b6c798fa40334ec8898d07b4d28fd76743120/comments", "author": {"login": "ThibsG", "id": 12683889, "node_id": "MDQ6VXNlcjEyNjgzODg5", "avatar_url": "https://avatars.githubusercontent.com/u/12683889?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ThibsG", "html_url": "https://github.com/ThibsG", "followers_url": "https://api.github.com/users/ThibsG/followers", "following_url": "https://api.github.com/users/ThibsG/following{/other_user}", "gists_url": "https://api.github.com/users/ThibsG/gists{/gist_id}", "starred_url": "https://api.github.com/users/ThibsG/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ThibsG/subscriptions", "organizations_url": "https://api.github.com/users/ThibsG/orgs", "repos_url": "https://api.github.com/users/ThibsG/repos", "events_url": "https://api.github.com/users/ThibsG/events{/privacy}", "received_events_url": "https://api.github.com/users/ThibsG/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ThibsG", "id": 12683889, "node_id": "MDQ6VXNlcjEyNjgzODg5", "avatar_url": "https://avatars.githubusercontent.com/u/12683889?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ThibsG", "html_url": "https://github.com/ThibsG", "followers_url": "https://api.github.com/users/ThibsG/followers", "following_url": "https://api.github.com/users/ThibsG/following{/other_user}", "gists_url": "https://api.github.com/users/ThibsG/gists{/gist_id}", "starred_url": "https://api.github.com/users/ThibsG/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ThibsG/subscriptions", "organizations_url": "https://api.github.com/users/ThibsG/orgs", "repos_url": "https://api.github.com/users/ThibsG/repos", "events_url": "https://api.github.com/users/ThibsG/events{/privacy}", "received_events_url": "https://api.github.com/users/ThibsG/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a8520b06365013cb5777f21cfc2672ab6f2cc21d", "url": "https://api.github.com/repos/rust-lang/rust/commits/a8520b06365013cb5777f21cfc2672ab6f2cc21d", "html_url": "https://github.com/rust-lang/rust/commit/a8520b06365013cb5777f21cfc2672ab6f2cc21d"}], "stats": {"total": 41, "additions": 38, "deletions": 3}, "files": [{"sha": "92f42168a1eabc56dd5df476d1f5b138211dff57", "filename": "clippy_lints/src/trivially_copy_pass_by_ref.rs", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/191b6c798fa40334ec8898d07b4d28fd76743120/clippy_lints%2Fsrc%2Ftrivially_copy_pass_by_ref.rs", "raw_url": "https://github.com/rust-lang/rust/raw/191b6c798fa40334ec8898d07b4d28fd76743120/clippy_lints%2Fsrc%2Ftrivially_copy_pass_by_ref.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Ftrivially_copy_pass_by_ref.rs?ref=191b6c798fa40334ec8898d07b4d28fd76743120", "patch": "@@ -2,6 +2,7 @@ use std::cmp;\n \n use crate::utils::{is_copy, is_self_ty, snippet, span_lint_and_sugg};\n use if_chain::if_chain;\n+use rustc_ast::attr;\n use rustc_errors::Applicability;\n use rustc_hir as hir;\n use rustc_hir::intravisit::FnKind;\n@@ -155,8 +156,12 @@ impl<'tcx> LateLintPass<'tcx> for TriviallyCopyPassByRef {\n                     return;\n                 }\n                 for a in attrs {\n-                    if a.meta_item_list().is_some() && a.has_name(sym!(proc_macro_derive)) {\n-                        return;\n+                    if let Some(meta_items) = a.meta_item_list() {\n+                        if a.has_name(sym!(proc_macro_derive))\n+                            || (a.has_name(sym!(inline)) && attr::list_contains_name(&meta_items, sym!(always)))\n+                        {\n+                            return;\n+                        }\n                     }\n                 }\n             },"}, {"sha": "e7e0a31febc45919ca44408c7772a83cc162126c", "filename": "tests/ui/trivially_copy_pass_by_ref.rs", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/191b6c798fa40334ec8898d07b4d28fd76743120/tests%2Fui%2Ftrivially_copy_pass_by_ref.rs", "raw_url": "https://github.com/rust-lang/rust/raw/191b6c798fa40334ec8898d07b4d28fd76743120/tests%2Fui%2Ftrivially_copy_pass_by_ref.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ftrivially_copy_pass_by_ref.rs?ref=191b6c798fa40334ec8898d07b4d28fd76743120", "patch": "@@ -97,6 +97,24 @@ mod issue3992 {\n     pub fn c(d: &u16) {}\n }\n \n+mod issue5876 {\n+    // Don't lint here as it is always inlined\n+    #[inline(always)]\n+    fn foo_always(x: &i32) {\n+        println!(\"{}\", x);\n+    }\n+\n+    #[inline(never)]\n+    fn foo_never(x: &i32) {\n+        println!(\"{}\", x);\n+    }\n+\n+    #[inline]\n+    fn foo(x: &i32) {\n+        println!(\"{}\", x);\n+    }\n+}\n+\n fn main() {\n     let (mut foo, bar) = (Foo(0), Bar([0; 24]));\n     let (mut a, b, c, x, y, z) = (0, 0, Bar([0; 24]), 0, Foo(0), 0);"}, {"sha": "ccc3cdb2b74264fec42b9741312f627315ee906b", "filename": "tests/ui/trivially_copy_pass_by_ref.stderr", "status": "modified", "additions": 13, "deletions": 1, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/191b6c798fa40334ec8898d07b4d28fd76743120/tests%2Fui%2Ftrivially_copy_pass_by_ref.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/191b6c798fa40334ec8898d07b4d28fd76743120/tests%2Fui%2Ftrivially_copy_pass_by_ref.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ftrivially_copy_pass_by_ref.stderr?ref=191b6c798fa40334ec8898d07b4d28fd76743120", "patch": "@@ -94,5 +94,17 @@ error: this argument (N byte) is passed by reference, but would be more efficien\n LL |     fn trait_method2(&self, _color: &Color);\n    |                                     ^^^^^^ help: consider passing by value instead: `Color`\n \n-error: aborting due to 15 previous errors\n+error: this argument (N byte) is passed by reference, but would be more efficient if passed by value (limit: N byte)\n+  --> $DIR/trivially_copy_pass_by_ref.rs:108:21\n+   |\n+LL |     fn foo_never(x: &i32) {\n+   |                     ^^^^ help: consider passing by value instead: `i32`\n+\n+error: this argument (N byte) is passed by reference, but would be more efficient if passed by value (limit: N byte)\n+  --> $DIR/trivially_copy_pass_by_ref.rs:113:15\n+   |\n+LL |     fn foo(x: &i32) {\n+   |               ^^^^ help: consider passing by value instead: `i32`\n+\n+error: aborting due to 17 previous errors\n "}]}