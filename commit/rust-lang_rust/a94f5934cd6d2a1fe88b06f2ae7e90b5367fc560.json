{"sha": "a94f5934cd6d2a1fe88b06f2ae7e90b5367fc560", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE5NGY1OTM0Y2Q2ZDJhMWZlODhiMDZmMmFlN2U5MGI1MzY3ZmM1NjA=", "commit": {"author": {"name": "Nick Cameron", "email": "ncameron@mozilla.com", "date": "2016-10-06T03:44:59Z"}, "committer": {"name": "Nick Cameron", "email": "ncameron@mozilla.com", "date": "2016-10-11T19:40:22Z"}, "message": "Stabilise attributes on statements.\n\nNote that attributes on expressions are still unstable and are behind the `stmt_expr_attributes` flag.\n\ncc [Tracking issue](https://github.com/rust-lang/rust/issues/15701)", "tree": {"sha": "8941049fdc476a0de38a82f294eccf16c7a02b3a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8941049fdc476a0de38a82f294eccf16c7a02b3a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a94f5934cd6d2a1fe88b06f2ae7e90b5367fc560", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a94f5934cd6d2a1fe88b06f2ae7e90b5367fc560", "html_url": "https://github.com/rust-lang/rust/commit/a94f5934cd6d2a1fe88b06f2ae7e90b5367fc560", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a94f5934cd6d2a1fe88b06f2ae7e90b5367fc560/comments", "author": {"login": "nrc", "id": 762626, "node_id": "MDQ6VXNlcjc2MjYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/762626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nrc", "html_url": "https://github.com/nrc", "followers_url": "https://api.github.com/users/nrc/followers", "following_url": "https://api.github.com/users/nrc/following{/other_user}", "gists_url": "https://api.github.com/users/nrc/gists{/gist_id}", "starred_url": "https://api.github.com/users/nrc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nrc/subscriptions", "organizations_url": "https://api.github.com/users/nrc/orgs", "repos_url": "https://api.github.com/users/nrc/repos", "events_url": "https://api.github.com/users/nrc/events{/privacy}", "received_events_url": "https://api.github.com/users/nrc/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nrc", "id": 762626, "node_id": "MDQ6VXNlcjc2MjYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/762626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nrc", "html_url": "https://github.com/nrc", "followers_url": "https://api.github.com/users/nrc/followers", "following_url": "https://api.github.com/users/nrc/following{/other_user}", "gists_url": "https://api.github.com/users/nrc/gists{/gist_id}", "starred_url": "https://api.github.com/users/nrc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nrc/subscriptions", "organizations_url": "https://api.github.com/users/nrc/orgs", "repos_url": "https://api.github.com/users/nrc/repos", "events_url": "https://api.github.com/users/nrc/events{/privacy}", "received_events_url": "https://api.github.com/users/nrc/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9bc6d2609233cece91803a8163dc3ba5579dfde8", "url": "https://api.github.com/repos/rust-lang/rust/commits/9bc6d2609233cece91803a8163dc3ba5579dfde8", "html_url": "https://github.com/rust-lang/rust/commit/9bc6d2609233cece91803a8163dc3ba5579dfde8"}], "stats": {"total": 34, "additions": 12, "deletions": 22}, "files": [{"sha": "84f459bf8724fd40d10034d0ece03d002f8b07f4", "filename": "src/doc/reference.md", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/a94f5934cd6d2a1fe88b06f2ae7e90b5367fc560/src%2Fdoc%2Freference.md", "raw_url": "https://github.com/rust-lang/rust/raw/a94f5934cd6d2a1fe88b06f2ae7e90b5367fc560/src%2Fdoc%2Freference.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Freference.md?ref=a94f5934cd6d2a1fe88b06f2ae7e90b5367fc560", "patch": "@@ -2472,8 +2472,7 @@ The currently implemented features of the reference compiler are:\n * - `default_type_parameter_fallback` - Allows type parameter defaults to\n                                         influence type inference.\n \n-* - `stmt_expr_attributes` - Allows attributes on expressions and\n-                             non-item statements.\n+* - `stmt_expr_attributes` - Allows attributes on expressions.\n \n * - `type_ascription` - Allows type ascription expressions `expr: Type`.\n "}, {"sha": "3b81ea4917f2bf9e496981d0f5f1050016d635f0", "filename": "src/libsyntax/config.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/a94f5934cd6d2a1fe88b06f2ae7e90b5367fc560/src%2Flibsyntax%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a94f5934cd6d2a1fe88b06f2ae7e90b5367fc560/src%2Flibsyntax%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fconfig.rs?ref=a94f5934cd6d2a1fe88b06f2ae7e90b5367fc560", "patch": "@@ -153,7 +153,7 @@ impl<'a> StripUnconfigured<'a> {\n     }\n \n     // Visit attributes on expression and statements (but not attributes on items in blocks).\n-    fn visit_stmt_or_expr_attrs(&mut self, attrs: &[ast::Attribute]) {\n+    fn visit_expr_attrs(&mut self, attrs: &[ast::Attribute]) {\n         // flag the offending attributes\n         for attr in attrs.iter() {\n             if !self.features.map(|features| features.stmt_expr_attributes).unwrap_or(true) {\n@@ -227,7 +227,7 @@ impl<'a> StripUnconfigured<'a> {\n     }\n \n     pub fn configure_expr(&mut self, expr: P<ast::Expr>) -> P<ast::Expr> {\n-        self.visit_stmt_or_expr_attrs(expr.attrs());\n+        self.visit_expr_attrs(expr.attrs());\n \n         // If an expr is valid to cfg away it will have been removed by the\n         // outer stmt or expression folder before descending in here.\n@@ -245,7 +245,6 @@ impl<'a> StripUnconfigured<'a> {\n     }\n \n     pub fn configure_stmt(&mut self, stmt: ast::Stmt) -> Option<ast::Stmt> {\n-        self.visit_stmt_or_expr_attrs(stmt.attrs());\n         self.configure(stmt)\n     }\n }"}, {"sha": "1ba1bb35bb5f3b679eec4f749415025bc347402d", "filename": "src/test/compile-fail/mir-dataflow/def-inits-1.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/a94f5934cd6d2a1fe88b06f2ae7e90b5367fc560/src%2Ftest%2Fcompile-fail%2Fmir-dataflow%2Fdef-inits-1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a94f5934cd6d2a1fe88b06f2ae7e90b5367fc560/src%2Ftest%2Fcompile-fail%2Fmir-dataflow%2Fdef-inits-1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fmir-dataflow%2Fdef-inits-1.rs?ref=a94f5934cd6d2a1fe88b06f2ae7e90b5367fc560", "patch": "@@ -11,7 +11,6 @@\n // General test of maybe_uninits state computed by MIR dataflow.\n \n #![feature(rustc_attrs)]\n-#![feature(stmt_expr_attributes)]\n \n use std::intrinsics::rustc_peek;\n use std::mem::{drop, replace};"}, {"sha": "c8cf44adb97199d9ad0bafa8595c52254617fd54", "filename": "src/test/compile-fail/mir-dataflow/inits-1.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/a94f5934cd6d2a1fe88b06f2ae7e90b5367fc560/src%2Ftest%2Fcompile-fail%2Fmir-dataflow%2Finits-1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a94f5934cd6d2a1fe88b06f2ae7e90b5367fc560/src%2Ftest%2Fcompile-fail%2Fmir-dataflow%2Finits-1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fmir-dataflow%2Finits-1.rs?ref=a94f5934cd6d2a1fe88b06f2ae7e90b5367fc560", "patch": "@@ -11,7 +11,6 @@\n // General test of maybe_inits state computed by MIR dataflow.\n \n #![feature(rustc_attrs)]\n-#![feature(stmt_expr_attributes)]\n \n use std::intrinsics::rustc_peek;\n use std::mem::{drop, replace};"}, {"sha": "a82bfc896988075ac0a718b75833473ce78d8872", "filename": "src/test/compile-fail/mir-dataflow/uninits-1.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/a94f5934cd6d2a1fe88b06f2ae7e90b5367fc560/src%2Ftest%2Fcompile-fail%2Fmir-dataflow%2Funinits-1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a94f5934cd6d2a1fe88b06f2ae7e90b5367fc560/src%2Ftest%2Fcompile-fail%2Fmir-dataflow%2Funinits-1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fmir-dataflow%2Funinits-1.rs?ref=a94f5934cd6d2a1fe88b06f2ae7e90b5367fc560", "patch": "@@ -11,7 +11,6 @@\n // General test of maybe_uninits state computed by MIR dataflow.\n \n #![feature(rustc_attrs)]\n-#![feature(stmt_expr_attributes)]\n \n use std::intrinsics::rustc_peek;\n use std::mem::{drop, replace};"}, {"sha": "8cfdae506625e3d47d26db6065499f4614b2d6d6", "filename": "src/test/compile-fail/mir-dataflow/uninits-2.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/a94f5934cd6d2a1fe88b06f2ae7e90b5367fc560/src%2Ftest%2Fcompile-fail%2Fmir-dataflow%2Funinits-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a94f5934cd6d2a1fe88b06f2ae7e90b5367fc560/src%2Ftest%2Fcompile-fail%2Fmir-dataflow%2Funinits-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fmir-dataflow%2Funinits-2.rs?ref=a94f5934cd6d2a1fe88b06f2ae7e90b5367fc560", "patch": "@@ -11,7 +11,6 @@\n // General test of maybe_uninits state computed by MIR dataflow.\n \n #![feature(rustc_attrs)]\n-#![feature(stmt_expr_attributes)]\n \n use std::intrinsics::rustc_peek;\n use std::mem::{drop, replace};"}, {"sha": "2fda2ee0900c7470ea82f045817f7cd223e54532", "filename": "src/test/compile-fail/stmt_expr_attrs_no_feature.rs", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/a94f5934cd6d2a1fe88b06f2ae7e90b5367fc560/src%2Ftest%2Fcompile-fail%2Fstmt_expr_attrs_no_feature.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a94f5934cd6d2a1fe88b06f2ae7e90b5367fc560/src%2Ftest%2Fcompile-fail%2Fstmt_expr_attrs_no_feature.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fstmt_expr_attrs_no_feature.rs?ref=a94f5934cd6d2a1fe88b06f2ae7e90b5367fc560", "patch": "@@ -21,15 +21,15 @@ fn main() {\n     #[attr]\n     fn a() {}\n \n-    #[attr] //~ ERROR 15701\n+    #[attr]\n     {\n \n     }\n \n-    #[attr] //~ ERROR 15701\n+    #[attr]\n     5;\n \n-    #[attr] //~ ERROR 15701\n+    #[attr]\n     stmt_mac!();\n }\n \n@@ -43,7 +43,7 @@ fn c() {\n \n #[cfg(not(unset))]\n fn j() {\n-    #[attr] //~ ERROR 15701\n+    #[attr]\n     5;\n }\n \n@@ -55,7 +55,7 @@ fn d() {\n \n #[cfg_attr(not(unset), cfg(not(unset)))]\n fn i() {\n-    #[attr] //~ ERROR 15701\n+    #[attr]\n     8;\n }\n \n@@ -64,7 +64,7 @@ fn i() {\n macro_rules! item_mac {\n     ($e:ident) => {\n         fn $e() {\n-            #[attr] //~ ERROR 15701\n+            #[attr]\n             42;\n \n             #[cfg(unset)]\n@@ -75,7 +75,7 @@ macro_rules! item_mac {\n \n             #[cfg(not(unset))]\n             fn k() {\n-                #[attr] //~ ERROR 15701\n+                #[attr]\n                 5;\n             }\n \n@@ -87,7 +87,7 @@ macro_rules! item_mac {\n \n             #[cfg_attr(not(unset), cfg(not(unset)))]\n             fn h() {\n-                #[attr] //~ ERROR 15701\n+                #[attr]\n                 8;\n             }\n "}, {"sha": "012fe0d95ec49c7a554201a1c3c46eba539051d5", "filename": "src/test/run-pass/const-negation.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a94f5934cd6d2a1fe88b06f2ae7e90b5367fc560/src%2Ftest%2Frun-pass%2Fconst-negation.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a94f5934cd6d2a1fe88b06f2ae7e90b5367fc560/src%2Ftest%2Frun-pass%2Fconst-negation.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fconst-negation.rs?ref=a94f5934cd6d2a1fe88b06f2ae7e90b5367fc560", "patch": "@@ -8,8 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#![feature(stmt_expr_attributes)]\n-\n #[deny(const_err)]\n \n fn main() {"}, {"sha": "c85ab535fc16b4b69e46791149367ad5d60ad714", "filename": "src/test/run-pass/enum-discrim-autosizing.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a94f5934cd6d2a1fe88b06f2ae7e90b5367fc560/src%2Ftest%2Frun-pass%2Fenum-discrim-autosizing.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a94f5934cd6d2a1fe88b06f2ae7e90b5367fc560/src%2Ftest%2Frun-pass%2Fenum-discrim-autosizing.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fenum-discrim-autosizing.rs?ref=a94f5934cd6d2a1fe88b06f2ae7e90b5367fc560", "patch": "@@ -8,8 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#![feature(stmt_expr_attributes)]\n-\n use std::mem::size_of;\n \n enum Ei8 {"}, {"sha": "f16057ccab16cbbae5f37db9c44e6c30f457d21b", "filename": "src/test/run-pass/issue-8460.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a94f5934cd6d2a1fe88b06f2ae7e90b5367fc560/src%2Ftest%2Frun-pass%2Fissue-8460.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a94f5934cd6d2a1fe88b06f2ae7e90b5367fc560/src%2Ftest%2Frun-pass%2Fissue-8460.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-8460.rs?ref=a94f5934cd6d2a1fe88b06f2ae7e90b5367fc560", "patch": "@@ -11,7 +11,7 @@\n // ignore-emscripten no threads support\n // ignore-pretty : (#23623) problems when  ending with // comments\n \n-#![feature(rustc_attrs, stmt_expr_attributes, zero_one)]\n+#![feature(rustc_attrs, zero_one)]\n \n use std::num::Zero;\n use std::thread;"}]}