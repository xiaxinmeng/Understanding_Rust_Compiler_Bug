{"sha": "e65de39763cc516a92c768c5644d7f86e973fb24", "node_id": "C_kwDOAAsO6NoAKGU2NWRlMzk3NjNjYzUxNmE5MmM3NjhjNTY0NGQ3Zjg2ZTk3M2ZiMjQ", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2022-08-15T18:11:41Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-08-15T18:11:41Z"}, "message": "Rollup merge of #100586 - the8472:available_parallelism_2, r=jyn514\n\nReland changes replacing num_cpus with available_parallelism\n\nSince #97925 added cgroupv1 support the problem in #97549 which lead to the previous revert should be addressed now.\n\nCargo has reapplied the replacement too https://github.com/rust-lang/cargo/pull/10969\n\nReverts 1ae4b258267462da0b1aae1badcf83578153c799 (part of #97911)\nRelands #94524", "tree": {"sha": "c4a707523bfd7a0b4c4cc5f9da41862e2a885975", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c4a707523bfd7a0b4c4cc5f9da41862e2a885975"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e65de39763cc516a92c768c5644d7f86e973fb24", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJi+oxdCRBK7hj4Ov3rIwAAjm0IAB3Lc2MrBlg0uZ0sFJUN6qKV\nJx9rimbkHRff27s6r4qPkGh8fg1EJtZnn5C+truYh7heceqE7KfYf6DgQWq7KYmU\nE5wtTRyMx+ki43NaSyGD+JePQ+ln3LR19e4BxOamOTj4irZO4XjUzb7GZFQzvWQr\njPJwfXwoCMN9YwoPhjENUkjaYiKLVhhPairJ/qHuJl2PACI107/jpw1nYXVTsk3T\nQnHhPsL8TE3NhhkVPU2gr9PXO26xX3y0oWjhjgv8WNfpQY8Uy99hBMRKEIUmgeVn\nkYjzuF3vMIbM63xLG+ZxphIk5Bedg4m4LWe8h2jZsiiIbaiNBLQOT0hCz/6t7wU=\n=Do0J\n-----END PGP SIGNATURE-----\n", "payload": "tree c4a707523bfd7a0b4c4cc5f9da41862e2a885975\nparent fba30041f6d892cdd93d650d96d8f42ab0602d19\nparent 84531229bb923cdad698f271bdc1311f67f174e8\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1660587101 +0200\ncommitter GitHub <noreply@github.com> 1660587101 +0200\n\nRollup merge of #100586 - the8472:available_parallelism_2, r=jyn514\n\nReland changes replacing num_cpus with available_parallelism\n\nSince #97925 added cgroupv1 support the problem in #97549 which lead to the previous revert should be addressed now.\n\nCargo has reapplied the replacement too https://github.com/rust-lang/cargo/pull/10969\n\nReverts 1ae4b258267462da0b1aae1badcf83578153c799 (part of #97911)\nRelands #94524\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e65de39763cc516a92c768c5644d7f86e973fb24", "html_url": "https://github.com/rust-lang/rust/commit/e65de39763cc516a92c768c5644d7f86e973fb24", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e65de39763cc516a92c768c5644d7f86e973fb24/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fba30041f6d892cdd93d650d96d8f42ab0602d19", "url": "https://api.github.com/repos/rust-lang/rust/commits/fba30041f6d892cdd93d650d96d8f42ab0602d19", "html_url": "https://github.com/rust-lang/rust/commit/fba30041f6d892cdd93d650d96d8f42ab0602d19"}, {"sha": "84531229bb923cdad698f271bdc1311f67f174e8", "url": "https://api.github.com/repos/rust-lang/rust/commits/84531229bb923cdad698f271bdc1311f67f174e8", "html_url": "https://github.com/rust-lang/rust/commit/84531229bb923cdad698f271bdc1311f67f174e8"}], "stats": {"total": 18, "additions": 7, "deletions": 11}, "files": [{"sha": "395f5a127bd3dca45e5985df26fe904976240422", "filename": "Cargo.lock", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e65de39763cc516a92c768c5644d7f86e973fb24/Cargo.lock", "raw_url": "https://github.com/rust-lang/rust/raw/e65de39763cc516a92c768c5644d7f86e973fb24/Cargo.lock", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Cargo.lock?ref=e65de39763cc516a92c768c5644d7f86e973fb24", "patch": "@@ -257,7 +257,6 @@ dependencies = [\n  \"anyhow\",\n  \"flate2\",\n  \"hex 0.4.2\",\n- \"num_cpus\",\n  \"rayon\",\n  \"serde\",\n  \"serde_json\",\n@@ -4442,7 +4441,6 @@ name = \"rustc_session\"\n version = \"0.0.0\"\n dependencies = [\n  \"getopts\",\n- \"num_cpus\",\n  \"rustc_ast\",\n  \"rustc_data_structures\",\n  \"rustc_errors\","}, {"sha": "6b1eaa4d399d9d291133d36e7de2d46c93464b22", "filename": "compiler/rustc_session/Cargo.toml", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/e65de39763cc516a92c768c5644d7f86e973fb24/compiler%2Frustc_session%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/e65de39763cc516a92c768c5644d7f86e973fb24/compiler%2Frustc_session%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_session%2FCargo.toml?ref=e65de39763cc516a92c768c5644d7f86e973fb24", "patch": "@@ -15,6 +15,5 @@ rustc_serialize = { path = \"../rustc_serialize\" }\n rustc_data_structures = { path = \"../rustc_data_structures\" }\n rustc_span = { path = \"../rustc_span\" }\n rustc_fs_util = { path = \"../rustc_fs_util\" }\n-num_cpus = \"1.0\"\n rustc_ast = { path = \"../rustc_ast\" }\n rustc_lint_defs = { path = \"../rustc_lint_defs\" }"}, {"sha": "46bba02537dc7b830f20d03450c307b964c0c301", "filename": "compiler/rustc_session/src/options.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e65de39763cc516a92c768c5644d7f86e973fb24/compiler%2Frustc_session%2Fsrc%2Foptions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e65de39763cc516a92c768c5644d7f86e973fb24/compiler%2Frustc_session%2Fsrc%2Foptions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_session%2Fsrc%2Foptions.rs?ref=e65de39763cc516a92c768c5644d7f86e973fb24", "patch": "@@ -582,7 +582,7 @@ mod parse {\n     pub(crate) fn parse_threads(slot: &mut usize, v: Option<&str>) -> bool {\n         match v.and_then(|s| s.parse().ok()) {\n             Some(0) => {\n-                *slot = ::num_cpus::get();\n+                *slot = std::thread::available_parallelism().map_or(1, std::num::NonZeroUsize::get);\n                 true\n             }\n             Some(i) => {"}, {"sha": "84c06fdce70f551ace3e51f554d26aea3d7cbe55", "filename": "src/bootstrap/Cargo.lock", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/e65de39763cc516a92c768c5644d7f86e973fb24/src%2Fbootstrap%2FCargo.lock", "raw_url": "https://github.com/rust-lang/rust/raw/e65de39763cc516a92c768c5644d7f86e973fb24/src%2Fbootstrap%2FCargo.lock", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2FCargo.lock?ref=e65de39763cc516a92c768c5644d7f86e973fb24", "patch": "@@ -53,7 +53,6 @@ dependencies = [\n  \"hex\",\n  \"ignore\",\n  \"libc\",\n- \"num_cpus\",\n  \"once_cell\",\n  \"opener\",\n  \"pretty_assertions\","}, {"sha": "2dad41bb18fceb48cc5a73848615dba9b14ae7bc", "filename": "src/bootstrap/Cargo.toml", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/e65de39763cc516a92c768c5644d7f86e973fb24/src%2Fbootstrap%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/e65de39763cc516a92c768c5644d7f86e973fb24/src%2Fbootstrap%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2FCargo.toml?ref=e65de39763cc516a92c768c5644d7f86e973fb24", "patch": "@@ -38,7 +38,6 @@ test = false\n cmake = \"0.1.38\"\n fd-lock = \"3.0.6\"\n filetime = \"0.2\"\n-num_cpus = \"1.0\"\n getopts = \"0.2.19\"\n cc = \"1.0.69\"\n libc = \"0.2\""}, {"sha": "203db2d3876ecf495a539912de46efb7d3064b28", "filename": "src/bootstrap/config.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e65de39763cc516a92c768c5644d7f86e973fb24/src%2Fbootstrap%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e65de39763cc516a92c768c5644d7f86e973fb24/src%2Fbootstrap%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fconfig.rs?ref=e65de39763cc516a92c768c5644d7f86e973fb24", "patch": "@@ -1465,7 +1465,7 @@ fn set<T>(field: &mut T, val: Option<T>) {\n \n fn threads_from_config(v: u32) -> u32 {\n     match v {\n-        0 => num_cpus::get() as u32,\n+        0 => std::thread::available_parallelism().map_or(1, std::num::NonZeroUsize::get) as u32,\n         n => n,\n     }\n }"}, {"sha": "789da74810035fee1ba918183bab31b61ff2348c", "filename": "src/bootstrap/flags.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e65de39763cc516a92c768c5644d7f86e973fb24/src%2Fbootstrap%2Fflags.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e65de39763cc516a92c768c5644d7f86e973fb24/src%2Fbootstrap%2Fflags.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fflags.rs?ref=e65de39763cc516a92c768c5644d7f86e973fb24", "patch": "@@ -220,7 +220,7 @@ To learn more about a subcommand, run `./x.py <subcommand> -h`\",\n         let j_msg = format!(\n             \"number of jobs to run in parallel; \\\n              defaults to {} (this host's logical CPU count)\",\n-            num_cpus::get()\n+            std::thread::available_parallelism().map_or(1, std::num::NonZeroUsize::get)\n         );\n         opts.optopt(\"j\", \"jobs\", &j_msg, \"JOBS\");\n         opts.optflag(\"h\", \"help\", \"print this help message\");"}, {"sha": "dcfa92d1004cde1830a95765233700aa1a3ec3d0", "filename": "src/bootstrap/lib.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e65de39763cc516a92c768c5644d7f86e973fb24/src%2Fbootstrap%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e65de39763cc516a92c768c5644d7f86e973fb24/src%2Fbootstrap%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Flib.rs?ref=e65de39763cc516a92c768c5644d7f86e973fb24", "patch": "@@ -1008,7 +1008,9 @@ impl Build {\n     /// Returns the number of parallel jobs that have been configured for this\n     /// build.\n     fn jobs(&self) -> u32 {\n-        self.config.jobs.unwrap_or_else(|| num_cpus::get() as u32)\n+        self.config.jobs.unwrap_or_else(|| {\n+            std::thread::available_parallelism().map_or(1, std::num::NonZeroUsize::get) as u32\n+        })\n     }\n \n     fn debuginfo_map_to(&self, which: GitRepo) -> Option<String> {"}, {"sha": "c437bde5ae69a47233ef3a16678dac8aff9d51a3", "filename": "src/tools/build-manifest/Cargo.toml", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/e65de39763cc516a92c768c5644d7f86e973fb24/src%2Ftools%2Fbuild-manifest%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/e65de39763cc516a92c768c5644d7f86e973fb24/src%2Ftools%2Fbuild-manifest%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fbuild-manifest%2FCargo.toml?ref=e65de39763cc516a92c768c5644d7f86e973fb24", "patch": "@@ -13,4 +13,3 @@ tar = \"0.4.29\"\n sha2 = \"0.10.1\"\n rayon = \"1.5.1\"\n hex = \"0.4.2\"\n-num_cpus = \"1.13.0\""}, {"sha": "1a6760d8c68b9fa91e45aecdd3485e6891b491d3", "filename": "src/tools/build-manifest/src/main.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e65de39763cc516a92c768c5644d7f86e973fb24/src%2Ftools%2Fbuild-manifest%2Fsrc%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e65de39763cc516a92c768c5644d7f86e973fb24/src%2Ftools%2Fbuild-manifest%2Fsrc%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fbuild-manifest%2Fsrc%2Fmain.rs?ref=e65de39763cc516a92c768c5644d7f86e973fb24", "patch": "@@ -210,7 +210,7 @@ fn main() {\n     let num_threads = if let Some(num) = env::var_os(\"BUILD_MANIFEST_NUM_THREADS\") {\n         num.to_str().unwrap().parse().expect(\"invalid number for BUILD_MANIFEST_NUM_THREADS\")\n     } else {\n-        num_cpus::get()\n+        std::thread::available_parallelism().map_or(1, std::num::NonZeroUsize::get)\n     };\n     rayon::ThreadPoolBuilder::new()\n         .num_threads(num_threads)"}]}