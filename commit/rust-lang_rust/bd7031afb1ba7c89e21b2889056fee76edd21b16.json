{"sha": "bd7031afb1ba7c89e21b2889056fee76edd21b16", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJkNzAzMWFmYjFiYTdjODllMjFiMjg4OTA1NmZlZTc2ZWRkMjFiMTY=", "commit": {"author": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2018-08-15T12:36:45Z"}, "committer": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2018-08-15T12:36:45Z"}, "message": "Fix codegen of SwitchInt", "tree": {"sha": "c5f6956fe6ed554f96d2ea3d649a0220b7980d19", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c5f6956fe6ed554f96d2ea3d649a0220b7980d19"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/bd7031afb1ba7c89e21b2889056fee76edd21b16", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/bd7031afb1ba7c89e21b2889056fee76edd21b16", "html_url": "https://github.com/rust-lang/rust/commit/bd7031afb1ba7c89e21b2889056fee76edd21b16", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/bd7031afb1ba7c89e21b2889056fee76edd21b16/comments", "author": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e6fb51540673819a956d5ac514506832da5bc153", "url": "https://api.github.com/repos/rust-lang/rust/commits/e6fb51540673819a956d5ac514506832da5bc153", "html_url": "https://github.com/rust-lang/rust/commit/e6fb51540673819a956d5ac514506832da5bc153"}], "stats": {"total": 5, "additions": 4, "deletions": 1}, "files": [{"sha": "adb032a3520ec429270e99133cde26f4f5da5943", "filename": "src/base.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/bd7031afb1ba7c89e21b2889056fee76edd21b16/src%2Fbase.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bd7031afb1ba7c89e21b2889056fee76edd21b16/src%2Fbase.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbase.rs?ref=bd7031afb1ba7c89e21b2889056fee76edd21b16", "patch": "@@ -89,6 +89,8 @@ fn trans_fn<'a, 'tcx: 'a>(\n     // Step 6. Codegen function\n     crate::abi::codegen_fn_prelude(&mut fx, start_ebb);\n     codegen_fn_content(&mut fx);\n+    fx.bcx.seal_all_blocks();\n+    fx.bcx.finalize();\n \n     // Step 7. Print function to terminal for debugging\n     let mut writer = crate::pretty_clif::CommentWriter(fx.comments);\n@@ -180,7 +182,6 @@ fn codegen_fn_content<'a, 'tcx: 'a>(fx: &mut FunctionCx<'a, 'tcx, impl Backend>)\n                 values,\n                 targets,\n             } => {\n-                fx.bcx.ins().trap(TrapCode::User(0));\n                 // TODO: prevent panics on large and negative disciminants\n                 if should_codegen(fx.tcx.sess) {\n                     let discr = trans_operand(fx, discr).load_value(fx);\n@@ -193,6 +194,8 @@ fn codegen_fn_content<'a, 'tcx: 'a>(fx: &mut FunctionCx<'a, 'tcx, impl Backend>)\n                     fx.bcx.ins().br_table(discr, jump_table);\n                     let otherwise_ebb = fx.get_ebb(targets[targets.len() - 1]);\n                     fx.bcx.ins().jump(otherwise_ebb, &[]);\n+                } else {\n+                    fx.bcx.ins().trap(TrapCode::User(0));\n                 }\n             }\n             TerminatorKind::Call {"}]}