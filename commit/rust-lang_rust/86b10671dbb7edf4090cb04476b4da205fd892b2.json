{"sha": "86b10671dbb7edf4090cb04476b4da205fd892b2", "node_id": "MDY6Q29tbWl0NzI0NzEyOjg2YjEwNjcxZGJiN2VkZjQwOTBjYjA0NDc2YjRkYTIwNWZkODkyYjI=", "commit": {"author": {"name": "Without Boats", "email": "woboats@gmail.com", "date": "2017-04-24T05:00:09Z"}, "committer": {"name": "Without Boats", "email": "woboats@gmail.com", "date": "2017-04-24T05:00:09Z"}, "message": "Associated consts are not object safe.", "tree": {"sha": "ca4f0b6eb413b63de278ac0c533d5caf42948ed0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ca4f0b6eb413b63de278ac0c533d5caf42948ed0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/86b10671dbb7edf4090cb04476b4da205fd892b2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/86b10671dbb7edf4090cb04476b4da205fd892b2", "html_url": "https://github.com/rust-lang/rust/commit/86b10671dbb7edf4090cb04476b4da205fd892b2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/86b10671dbb7edf4090cb04476b4da205fd892b2/comments", "author": {"login": "withoutboats", "id": 9063376, "node_id": "MDQ6VXNlcjkwNjMzNzY=", "avatar_url": "https://avatars.githubusercontent.com/u/9063376?v=4", "gravatar_id": "", "url": "https://api.github.com/users/withoutboats", "html_url": "https://github.com/withoutboats", "followers_url": "https://api.github.com/users/withoutboats/followers", "following_url": "https://api.github.com/users/withoutboats/following{/other_user}", "gists_url": "https://api.github.com/users/withoutboats/gists{/gist_id}", "starred_url": "https://api.github.com/users/withoutboats/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/withoutboats/subscriptions", "organizations_url": "https://api.github.com/users/withoutboats/orgs", "repos_url": "https://api.github.com/users/withoutboats/repos", "events_url": "https://api.github.com/users/withoutboats/events{/privacy}", "received_events_url": "https://api.github.com/users/withoutboats/received_events", "type": "User", "site_admin": false}, "committer": {"login": "withoutboats", "id": 9063376, "node_id": "MDQ6VXNlcjkwNjMzNzY=", "avatar_url": "https://avatars.githubusercontent.com/u/9063376?v=4", "gravatar_id": "", "url": "https://api.github.com/users/withoutboats", "html_url": "https://github.com/withoutboats", "followers_url": "https://api.github.com/users/withoutboats/followers", "following_url": "https://api.github.com/users/withoutboats/following{/other_user}", "gists_url": "https://api.github.com/users/withoutboats/gists{/gist_id}", "starred_url": "https://api.github.com/users/withoutboats/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/withoutboats/subscriptions", "organizations_url": "https://api.github.com/users/withoutboats/orgs", "repos_url": "https://api.github.com/users/withoutboats/repos", "events_url": "https://api.github.com/users/withoutboats/events{/privacy}", "received_events_url": "https://api.github.com/users/withoutboats/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "15ce54096a589de277771ad1f55a334fe2661a64", "url": "https://api.github.com/repos/rust-lang/rust/commits/15ce54096a589de277771ad1f55a334fe2661a64", "html_url": "https://github.com/rust-lang/rust/commit/15ce54096a589de277771ad1f55a334fe2661a64"}], "stats": {"total": 9, "additions": 9, "deletions": 0}, "files": [{"sha": "f51711d031036820ce6b8f923408df1ec0cd1440", "filename": "src/librustc/traits/object_safety.rs", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/86b10671dbb7edf4090cb04476b4da205fd892b2/src%2Flibrustc%2Ftraits%2Fobject_safety.rs", "raw_url": "https://github.com/rust-lang/rust/raw/86b10671dbb7edf4090cb04476b4da205fd892b2/src%2Flibrustc%2Ftraits%2Fobject_safety.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Ftraits%2Fobject_safety.rs?ref=86b10671dbb7edf4090cb04476b4da205fd892b2", "patch": "@@ -37,6 +37,9 @@ pub enum ObjectSafetyViolation {\n \n     /// Method has something illegal\n     Method(ast::Name, MethodViolationCode),\n+\n+    /// Associated const\n+    AssociatedConst(ast::Name),\n }\n \n impl ObjectSafetyViolation {\n@@ -54,6 +57,8 @@ impl ObjectSafetyViolation {\n                          in its arguments or return type\", name).into(),\n             ObjectSafetyViolation::Method(name, MethodViolationCode::Generic) =>\n                 format!(\"method `{}` has generic type parameters\", name).into(),\n+            ObjectSafetyViolation::AssociatedConst(name) =>\n+                format!(\"the trait cannot contain associated consts, such as `{}`\", name),\n         }\n     }\n }\n@@ -141,6 +146,10 @@ impl<'a, 'gcx, 'tcx> TyCtxt<'a, 'gcx, 'tcx> {\n             violations.push(ObjectSafetyViolation::SupertraitSelf);\n         }\n \n+        violations.extend(self.associated_items(trait_def_id)\n+            .filter(|item| item.kind == ty::AssociatedKind::Const)\n+            .map(|item| ObjectSafetyViolation::AssociatedConst(item.name)));\n+\n         debug!(\"object_safety_violations_for_trait(trait_def_id={:?}) = {:?}\",\n                trait_def_id,\n                violations);"}]}