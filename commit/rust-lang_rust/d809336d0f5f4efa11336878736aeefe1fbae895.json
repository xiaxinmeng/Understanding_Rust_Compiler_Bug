{"sha": "d809336d0f5f4efa11336878736aeefe1fbae895", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQ4MDkzMzZkMGY1ZjRlZmExMTMzNjg3ODczNmFlZWZlMWZiYWU4OTU=", "commit": {"author": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2012-07-17T00:08:27Z"}, "committer": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2012-07-17T00:08:27Z"}, "message": "Fix reflection on vstore_fixed estrs and evecs.", "tree": {"sha": "69cbd93af994b41386272de959b04ec93c841fa5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/69cbd93af994b41386272de959b04ec93c841fa5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d809336d0f5f4efa11336878736aeefe1fbae895", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d809336d0f5f4efa11336878736aeefe1fbae895", "html_url": "https://github.com/rust-lang/rust/commit/d809336d0f5f4efa11336878736aeefe1fbae895", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d809336d0f5f4efa11336878736aeefe1fbae895/comments", "author": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "committer": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "053bdcac2d1b6872fe54b6c928910a3eba8eca67", "url": "https://api.github.com/repos/rust-lang/rust/commits/053bdcac2d1b6872fe54b6c928910a3eba8eca67", "html_url": "https://github.com/rust-lang/rust/commit/053bdcac2d1b6872fe54b6c928910a3eba8eca67"}], "stats": {"total": 42, "additions": 19, "deletions": 23}, "files": [{"sha": "b980aff822c6d40a57c5d232ce6bbfa8e83bbdf1", "filename": "src/rustc/front/intrinsic.rs", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/d809336d0f5f4efa11336878736aeefe1fbae895/src%2Frustc%2Ffront%2Fintrinsic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d809336d0f5f4efa11336878736aeefe1fbae895/src%2Frustc%2Ffront%2Fintrinsic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustc%2Ffront%2Fintrinsic.rs?ref=d809336d0f5f4efa11336878736aeefe1fbae895", "patch": "@@ -46,7 +46,7 @@ mod intrinsic {\n         fn visit_estr_box() -> bool;\n         fn visit_estr_uniq() -> bool;\n         fn visit_estr_slice() -> bool;\n-        fn visit_estr_fixed(sz: uint) -> bool;\n+        fn visit_estr_fixed(n: uint, sz: uint, align: uint) -> bool;\n \n         fn visit_box(mtbl: uint, inner: *tydesc) -> bool;\n         fn visit_uniq(mtbl: uint, inner: *tydesc) -> bool;\n@@ -58,9 +58,8 @@ mod intrinsic {\n         fn visit_evec_box(mtbl: uint, inner: *tydesc) -> bool;\n         fn visit_evec_uniq(mtbl: uint, inner: *tydesc) -> bool;\n         fn visit_evec_slice(mtbl: uint, inner: *tydesc) -> bool;\n-        fn visit_evec_fixed(n: uint, mtbl: uint,\n-                            sz: uint, align: uint,\n-                            inner: *tydesc) -> bool;\n+        fn visit_evec_fixed(n: uint, sz: uint, align: uint,\n+                            mtbl: uint, inner: *tydesc) -> bool;\n \n         fn visit_enter_rec(n_fields: uint,\n                            sz: uint, align: uint) -> bool;"}, {"sha": "2e673f8fe13ef5b73d7b85b6935520ef0d1a9424", "filename": "src/test/run-pass/issue-2930.rs", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/d809336d0f5f4efa11336878736aeefe1fbae895/src%2Ftest%2Frun-pass%2Fissue-2930.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d809336d0f5f4efa11336878736aeefe1fbae895/src%2Ftest%2Frun-pass%2Fissue-2930.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-2930.rs?ref=d809336d0f5f4efa11336878736aeefe1fbae895", "patch": "@@ -1,7 +1,3 @@\n-// xfail-pretty\n-// xfail-win32\n-// xfail-test\n-\n // Generated from pipe compiler\n mod stream {\n     fn init<T: send>() -> (client::stream<T>, server::stream<T>) {"}, {"sha": "2a45b257ee0c2a0622c8f31dd507e76b4ac4ffc6", "filename": "src/test/run-pass/reflect-visit-data.rs", "status": "modified", "additions": 12, "deletions": 11, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/d809336d0f5f4efa11336878736aeefe1fbae895/src%2Ftest%2Frun-pass%2Freflect-visit-data.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d809336d0f5f4efa11336878736aeefe1fbae895/src%2Ftest%2Frun-pass%2Freflect-visit-data.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Freflect-visit-data.rs?ref=d809336d0f5f4efa11336878736aeefe1fbae895", "patch": "@@ -199,9 +199,11 @@ impl ptr_visitor<V: ty_visitor movable_ptr>\n         true\n     }\n \n-    fn visit_estr_fixed(sz: uint) -> bool {\n-        self.align_to::<u8>();\n-        if ! self.inner.visit_estr_fixed(sz) { ret false; }\n+    fn visit_estr_fixed(n: uint,\n+                        sz: uint,\n+                        align: uint) -> bool {\n+        self.align(align);\n+        if ! self.inner.visit_estr_fixed(n, sz, align) { ret false; }\n         self.bump(sz);\n         true\n     }\n@@ -272,11 +274,10 @@ impl ptr_visitor<V: ty_visitor movable_ptr>\n         true\n     }\n \n-    fn visit_evec_fixed(mtbl: uint, n: uint,\n-                        sz: uint, align: uint,\n-                        inner: *tydesc) -> bool {\n+    fn visit_evec_fixed(n: uint, sz: uint, align: uint,\n+                        mtbl: uint, inner: *tydesc) -> bool {\n         self.align(align);\n-        if ! self.inner.visit_evec_fixed(mtbl, n, sz, align, inner) {\n+        if ! self.inner.visit_evec_fixed(n, sz, align, mtbl, inner) {\n             ret false;\n         }\n         self.bump(sz);\n@@ -522,7 +523,8 @@ impl of ty_visitor for my_visitor {\n     fn visit_estr_box() -> bool { true }\n     fn visit_estr_uniq() -> bool { true }\n     fn visit_estr_slice() -> bool { true }\n-    fn visit_estr_fixed(_sz: uint) -> bool { true }\n+    fn visit_estr_fixed(_n: uint, _sz: uint,\n+                        _align: uint) -> bool { true }\n \n     fn visit_box(_mtbl: uint, _inner: *tydesc) -> bool { true }\n     fn visit_uniq(_mtbl: uint, _inner: *tydesc) -> bool { true }\n@@ -534,9 +536,8 @@ impl of ty_visitor for my_visitor {\n     fn visit_evec_box(_mtbl: uint, _inner: *tydesc) -> bool { true }\n     fn visit_evec_uniq(_mtbl: uint, _inner: *tydesc) -> bool { true }\n     fn visit_evec_slice(_mtbl: uint, _inner: *tydesc) -> bool { true }\n-    fn visit_evec_fixed(_n: uint, _mtbl: uint,\n-                        _sz: uint, _align: uint,\n-                        _inner: *tydesc) -> bool { true }\n+    fn visit_evec_fixed(_n: uint, _sz: uint, _align: uint,\n+                        _mtbl: uint, _inner: *tydesc) -> bool { true }\n \n     fn visit_enter_rec(_n_fields: uint,\n                        _sz: uint, _align: uint) -> bool { true }"}, {"sha": "87f64c17e17dc131e5948cbc20ca8284daa68db5", "filename": "src/test/run-pass/reflect-visit-type.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/d809336d0f5f4efa11336878736aeefe1fbae895/src%2Ftest%2Frun-pass%2Freflect-visit-type.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d809336d0f5f4efa11336878736aeefe1fbae895/src%2Ftest%2Frun-pass%2Freflect-visit-type.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Freflect-visit-type.rs?ref=d809336d0f5f4efa11336878736aeefe1fbae895", "patch": "@@ -54,7 +54,8 @@ impl of ty_visitor for my_visitor {\n     fn visit_estr_box() -> bool { true }\n     fn visit_estr_uniq() -> bool { true }\n     fn visit_estr_slice() -> bool { true }\n-    fn visit_estr_fixed(_sz: uint) -> bool { true }\n+    fn visit_estr_fixed(_sz: uint, _sz: uint,\n+                        _align: uint) -> bool { true }\n \n     fn visit_box(_mtbl: uint, _inner: *tydesc) -> bool { true }\n     fn visit_uniq(_mtbl: uint, _inner: *tydesc) -> bool { true }\n@@ -71,9 +72,8 @@ impl of ty_visitor for my_visitor {\n     fn visit_evec_box(_mtbl: uint, _inner: *tydesc) -> bool { true }\n     fn visit_evec_uniq(_mtbl: uint, _inner: *tydesc) -> bool { true }\n     fn visit_evec_slice(_mtbl: uint, _inner: *tydesc) -> bool { true }\n-    fn visit_evec_fixed(_n: uint, _mtbl: uint,\n-                        _sz: uint, _align: uint,\n-                        _inner: *tydesc) -> bool { true }\n+    fn visit_evec_fixed(_n: uint, _sz: uint, _align: uint,\n+                        _mtbl: uint, _inner: *tydesc) -> bool { true }\n \n     fn visit_enter_rec(_n_fields: uint,\n                        _sz: uint, _align: uint) -> bool { true }"}]}