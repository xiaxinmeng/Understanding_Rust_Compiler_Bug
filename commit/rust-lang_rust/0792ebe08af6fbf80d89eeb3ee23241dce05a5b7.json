{"sha": "0792ebe08af6fbf80d89eeb3ee23241dce05a5b7", "node_id": "MDY6Q29tbWl0NzI0NzEyOjA3OTJlYmUwOGFmNmZiZjgwZDg5ZWViM2VlMjMyNDFkY2UwNWE1Yjc=", "commit": {"author": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2012-09-28T19:03:54Z"}, "committer": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2012-09-28T19:03:54Z"}, "message": "Finish de-exporting int-template and the int modules.", "tree": {"sha": "e025466b9e5526e53e1e4296b5944f10a669ac1d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e025466b9e5526e53e1e4296b5944f10a669ac1d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0792ebe08af6fbf80d89eeb3ee23241dce05a5b7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0792ebe08af6fbf80d89eeb3ee23241dce05a5b7", "html_url": "https://github.com/rust-lang/rust/commit/0792ebe08af6fbf80d89eeb3ee23241dce05a5b7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0792ebe08af6fbf80d89eeb3ee23241dce05a5b7/comments", "author": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "committer": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3efe4997348110da45c4dad8254f73928638e3ff", "url": "https://api.github.com/repos/rust-lang/rust/commits/3efe4997348110da45c4dad8254f73928638e3ff", "html_url": "https://github.com/rust-lang/rust/commit/3efe4997348110da45c4dad8254f73928638e3ff"}], "stats": {"total": 66, "additions": 18, "deletions": 48}, "files": [{"sha": "ea2645107cfad9ec66358ef3f0123084b5dd672c", "filename": "src/libcore/core.rc", "status": "modified", "additions": 1, "deletions": 17, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/0792ebe08af6fbf80d89eeb3ee23241dce05a5b7/src%2Flibcore%2Fcore.rc", "raw_url": "https://github.com/rust-lang/rust/raw/0792ebe08af6fbf80d89eeb3ee23241dce05a5b7/src%2Flibcore%2Fcore.rc", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fcore.rc?ref=0792ebe08af6fbf80d89eeb3ee23241dce05a5b7", "patch": "@@ -84,54 +84,38 @@ export private;\n // Built-in-type support modules\n \n /// Operations and constants for `int`\n-#[legacy_exports]\n #[path = \"int-template\"]\n mod int {\n-    #[legacy_exports];\n-    use inst::{ pow };\n-    export pow;\n+    pub use inst::{ pow };\n     #[path = \"int.rs\"]\n-    #[legacy_exports]\n     mod inst;\n }\n \n /// Operations and constants for `i8`\n-#[legacy_exports]\n #[path = \"int-template\"]\n mod i8 {\n-    #[legacy_exports];\n     #[path = \"i8.rs\"]\n-    #[legacy_exports]\n     mod inst;\n }\n \n /// Operations and constants for `i16`\n-#[legacy_exports]\n #[path = \"int-template\"]\n mod i16 {\n-    #[legacy_exports];\n     #[path = \"i16.rs\"]\n-    #[legacy_exports]\n     mod inst;\n }\n \n /// Operations and constants for `i32`\n-#[legacy_exports]\n #[path = \"int-template\"]\n mod i32 {\n-    #[legacy_exports];\n     #[path = \"i32.rs\"]\n-    #[legacy_exports]\n     mod inst;\n }\n \n /// Operations and constants for `i64`\n-#[legacy_exports]\n #[path = \"int-template\"]\n mod i64 {\n-    #[legacy_exports];\n     #[path = \"i64.rs\"]\n-    #[legacy_exports]\n     mod inst;\n }\n "}, {"sha": "ddd26205000734852ec37638ea388d12545b3664", "filename": "src/libcore/int-template.rs", "status": "modified", "additions": 6, "deletions": 20, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/0792ebe08af6fbf80d89eeb3ee23241dce05a5b7/src%2Flibcore%2Fint-template.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0792ebe08af6fbf80d89eeb3ee23241dce05a5b7/src%2Flibcore%2Fint-template.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fint-template.rs?ref=0792ebe08af6fbf80d89eeb3ee23241dce05a5b7", "patch": "@@ -7,20 +7,6 @@ use cmp::{Eq, Ord};\n use from_str::FromStr;\n use num::from_int;\n \n-export min_value, max_value;\n-export min, max;\n-export add, sub, mul, div, rem;\n-export lt, le, eq, ne, ge, gt;\n-export is_positive, is_negative;\n-export is_nonpositive, is_nonnegative;\n-export range;\n-export compl;\n-export abs;\n-export parse_bytes, from_str, to_str, to_str_bytes, str;\n-export num, ord, eq, times, timesi;\n-export bits, bytes;\n-export str;\n-\n pub const bits : uint = inst::bits;\n pub const bytes : uint = (inst::bits / 8);\n \n@@ -190,7 +176,7 @@ pub fn str(i: T) -> ~str { return to_str(i, 10u); }\n // FIXME: Has alignment issues on windows and 32-bit linux (#2609)\n #[test]\n #[ignore]\n-pub fn test_from_str() {\n+fn test_from_str() {\n     assert from_str(~\"0\") == Some(0 as T);\n     assert from_str(~\"3\") == Some(3 as T);\n     assert from_str(~\"10\") == Some(10 as T);\n@@ -210,7 +196,7 @@ pub fn test_from_str() {\n // FIXME: Has alignment issues on windows and 32-bit linux (#2609)\n #[test]\n #[ignore]\n-pub fn test_parse_bytes() {\n+fn test_parse_bytes() {\n     use str::to_bytes;\n     assert parse_bytes(to_bytes(~\"123\"), 10u) == Some(123 as T);\n     assert parse_bytes(to_bytes(~\"1001\"), 2u) == Some(9 as T);\n@@ -235,7 +221,7 @@ pub fn test_parse_bytes() {\n }\n \n #[test]\n-pub fn test_to_str() {\n+fn test_to_str() {\n     assert (to_str(0 as T, 10u) == ~\"0\");\n     assert (to_str(1 as T, 10u) == ~\"1\");\n     assert (to_str(-1 as T, 10u) == ~\"-1\");\n@@ -244,7 +230,7 @@ pub fn test_to_str() {\n }\n \n #[test]\n-pub fn test_interfaces() {\n+fn test_interfaces() {\n     fn test<U:num::Num cmp::Eq>(+ten: U) {\n         assert (ten.to_int() == 10);\n \n@@ -263,7 +249,7 @@ pub fn test_interfaces() {\n }\n \n #[test]\n-pub fn test_times() {\n+fn test_times() {\n     use iter::Times;\n     let ten = 10 as T;\n     let mut accum = 0;\n@@ -274,7 +260,7 @@ pub fn test_times() {\n #[test]\n #[should_fail]\n #[ignore(cfg(windows))]\n-pub fn test_times_negative() {\n+fn test_times_negative() {\n     use iter::Times;\n     for (-10).times { log(error, ~\"nope!\"); }\n }"}, {"sha": "9e7055c3e7a64a6065a70a048342dd60575ecc51", "filename": "src/libcore/int-template/i16.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/0792ebe08af6fbf80d89eeb3ee23241dce05a5b7/src%2Flibcore%2Fint-template%2Fi16.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0792ebe08af6fbf80d89eeb3ee23241dce05a5b7/src%2Flibcore%2Fint-template%2Fi16.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fint-template%2Fi16.rs?ref=0792ebe08af6fbf80d89eeb3ee23241dce05a5b7", "patch": "@@ -1,2 +1,2 @@\n-type T = i16;\n-const bits: uint = u16::bits;\n\\ No newline at end of file\n+pub type T = i16;\n+pub const bits: uint = u16::bits;\n\\ No newline at end of file"}, {"sha": "6545eaffdac921984278079333ec8fedb6a610da", "filename": "src/libcore/int-template/i32.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/0792ebe08af6fbf80d89eeb3ee23241dce05a5b7/src%2Flibcore%2Fint-template%2Fi32.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0792ebe08af6fbf80d89eeb3ee23241dce05a5b7/src%2Flibcore%2Fint-template%2Fi32.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fint-template%2Fi32.rs?ref=0792ebe08af6fbf80d89eeb3ee23241dce05a5b7", "patch": "@@ -1,2 +1,2 @@\n-type T = i32;\n-const bits: uint = u32::bits;\n+pub type T = i32;\n+pub const bits: uint = u32::bits;"}, {"sha": "c6ed97e8162c68f0953a88952e1f39b735efea51", "filename": "src/libcore/int-template/i64.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/0792ebe08af6fbf80d89eeb3ee23241dce05a5b7/src%2Flibcore%2Fint-template%2Fi64.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0792ebe08af6fbf80d89eeb3ee23241dce05a5b7/src%2Flibcore%2Fint-template%2Fi64.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fint-template%2Fi64.rs?ref=0792ebe08af6fbf80d89eeb3ee23241dce05a5b7", "patch": "@@ -1,2 +1,2 @@\n-type T = i64;\n-const bits: uint = u64::bits;\n\\ No newline at end of file\n+pub type T = i64;\n+pub const bits: uint = u64::bits;\n\\ No newline at end of file"}, {"sha": "0a2823e63c6edf39bf6184cb232900f46428ce25", "filename": "src/libcore/int-template/i8.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/0792ebe08af6fbf80d89eeb3ee23241dce05a5b7/src%2Flibcore%2Fint-template%2Fi8.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0792ebe08af6fbf80d89eeb3ee23241dce05a5b7/src%2Flibcore%2Fint-template%2Fi8.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fint-template%2Fi8.rs?ref=0792ebe08af6fbf80d89eeb3ee23241dce05a5b7", "patch": "@@ -1,2 +1,2 @@\n-type T = i8;\n-const bits: uint = u8::bits;\n\\ No newline at end of file\n+pub type T = i8;\n+pub const bits: uint = u8::bits;\n\\ No newline at end of file"}, {"sha": "8b898b173ac31a411867233bcaf08ef5ad33fbb1", "filename": "src/libcore/int-template/int.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/0792ebe08af6fbf80d89eeb3ee23241dce05a5b7/src%2Flibcore%2Fint-template%2Fint.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0792ebe08af6fbf80d89eeb3ee23241dce05a5b7/src%2Flibcore%2Fint-template%2Fint.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fint-template%2Fint.rs?ref=0792ebe08af6fbf80d89eeb3ee23241dce05a5b7", "patch": "@@ -1,8 +1,8 @@\n-type T = int;\n-const bits: uint = uint::bits;\n+pub type T = int;\n+pub const bits: uint = uint::bits;\n \n /// Returns `base` raised to the power of `exponent`\n-fn pow(base: int, exponent: uint) -> int {\n+pub fn pow(base: int, exponent: uint) -> int {\n     if exponent == 0u { return 1; } //Not mathemtically true if ~[base == 0]\n     if base     == 0  { return 0; }\n     let mut my_pow  = exponent;"}]}