{"sha": "0bf7b551585b1474521540cb9a95ac51d97fc60b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjBiZjdiNTUxNTg1YjE0NzQ1MjE1NDBjYjlhOTVhYzUxZDk3ZmM2MGI=", "commit": {"author": {"name": "John K\u00e5re Alsaker", "email": "john.kare.alsaker@gmail.com", "date": "2017-09-08T05:58:08Z"}, "committer": {"name": "Ariel Ben-Yehuda", "email": "ariel.byd@gmail.com", "date": "2017-09-20T13:36:24Z"}, "message": "Remove debug statements", "tree": {"sha": "8c145d136da0882667685ace20ab75c4045579d5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8c145d136da0882667685ace20ab75c4045579d5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0bf7b551585b1474521540cb9a95ac51d97fc60b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0bf7b551585b1474521540cb9a95ac51d97fc60b", "html_url": "https://github.com/rust-lang/rust/commit/0bf7b551585b1474521540cb9a95ac51d97fc60b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0bf7b551585b1474521540cb9a95ac51d97fc60b/comments", "author": {"login": "Zoxc", "id": 25784, "node_id": "MDQ6VXNlcjI1Nzg0", "avatar_url": "https://avatars.githubusercontent.com/u/25784?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Zoxc", "html_url": "https://github.com/Zoxc", "followers_url": "https://api.github.com/users/Zoxc/followers", "following_url": "https://api.github.com/users/Zoxc/following{/other_user}", "gists_url": "https://api.github.com/users/Zoxc/gists{/gist_id}", "starred_url": "https://api.github.com/users/Zoxc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Zoxc/subscriptions", "organizations_url": "https://api.github.com/users/Zoxc/orgs", "repos_url": "https://api.github.com/users/Zoxc/repos", "events_url": "https://api.github.com/users/Zoxc/events{/privacy}", "received_events_url": "https://api.github.com/users/Zoxc/received_events", "type": "User", "site_admin": false}, "committer": {"login": "arielb1", "id": 1830974, "node_id": "MDQ6VXNlcjE4MzA5NzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1830974?v=4", "gravatar_id": "", "url": "https://api.github.com/users/arielb1", "html_url": "https://github.com/arielb1", "followers_url": "https://api.github.com/users/arielb1/followers", "following_url": "https://api.github.com/users/arielb1/following{/other_user}", "gists_url": "https://api.github.com/users/arielb1/gists{/gist_id}", "starred_url": "https://api.github.com/users/arielb1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/arielb1/subscriptions", "organizations_url": "https://api.github.com/users/arielb1/orgs", "repos_url": "https://api.github.com/users/arielb1/repos", "events_url": "https://api.github.com/users/arielb1/events{/privacy}", "received_events_url": "https://api.github.com/users/arielb1/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "dba2ca888ae1b526a166344b4462e8e294fcb6a4", "url": "https://api.github.com/repos/rust-lang/rust/commits/dba2ca888ae1b526a166344b4462e8e294fcb6a4", "html_url": "https://github.com/rust-lang/rust/commit/dba2ca888ae1b526a166344b4462e8e294fcb6a4"}], "stats": {"total": 9, "additions": 0, "deletions": 9}, "files": [{"sha": "5a029236bcdb4ed8ccd80b70f3eac7aabb8ddf3e", "filename": "src/librustc_typeck/check/generator_interior.rs", "status": "modified", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/0bf7b551585b1474521540cb9a95ac51d97fc60b/src%2Flibrustc_typeck%2Fcheck%2Fgenerator_interior.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0bf7b551585b1474521540cb9a95ac51d97fc60b/src%2Flibrustc_typeck%2Fcheck%2Fgenerator_interior.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fgenerator_interior.rs?ref=0bf7b551585b1474521540cb9a95ac51d97fc60b", "patch": "@@ -33,11 +33,6 @@ impl<'a, 'gcx, 'tcx> InteriorVisitor<'a, 'gcx, 'tcx> {\n     fn record(&mut self, ty: Ty<'tcx>, scope: Option<region::Scope>, expr: Option<&'tcx Expr>) {\n         use syntax_pos::DUMMY_SP;\n \n-        if self.fcx.tcx.sess.verbose() {\n-        let span = scope.map_or(DUMMY_SP, |s| s.span(self.fcx.tcx, &self.region_scope_tree));\n-        self.fcx.tcx.sess.span_warn(span, &format!(\"temporary scope for node id {:?}\", expr));\n-        }\n-\n         let live_across_yield = scope.map_or(Some(DUMMY_SP), |s| {\n             self.region_scope_tree.yield_in_scope(s).and_then(|(span, expr_count)| {\n                 // Check if the span in the region comes after the expression\n@@ -121,10 +116,6 @@ impl<'a, 'gcx, 'tcx> Visitor<'tcx> for InteriorVisitor<'a, 'gcx, 'tcx> {\n     fn visit_expr(&mut self, expr: &'tcx Expr) {\n         self.expr_count += 1;\n \n-        if self.fcx.tcx.sess.verbose() {\n-        self.fcx.tcx.sess.span_warn(expr.span, &format!(\"node id {:?}\", expr.id));\n-        }\n-\n         let scope = self.region_scope_tree.temporary_scope(expr.hir_id.local_id);\n \n "}]}