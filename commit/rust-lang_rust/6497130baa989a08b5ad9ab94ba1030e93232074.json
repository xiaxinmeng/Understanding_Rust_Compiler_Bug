{"sha": "6497130baa989a08b5ad9ab94ba1030e93232074", "node_id": "C_kwDOAAsO6NoAKDY0OTcxMzBiYWE5ODlhMDhiNWFkOWFiOTRiYTEwMzBlOTMyMzIwNzQ", "commit": {"author": {"name": "Dylan DPC", "email": "99973273+Dylan-DPC@users.noreply.github.com", "date": "2022-07-09T05:58:07Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-07-09T05:58:07Z"}, "message": "Rollup merge of #99043 - compiler-errors:derive-nit, r=cjgillot\n\nCollapse some weirdly-wrapping derives\n\nself-explanatory", "tree": {"sha": "b175126dcf8f8a095c9188d5a17bc2cd26252a8b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b175126dcf8f8a095c9188d5a17bc2cd26252a8b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6497130baa989a08b5ad9ab94ba1030e93232074", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJiyRjvCRBK7hj4Ov3rIwAAinEIAH+CyaP6r5x+nNz3ZrghTcmV\n1teN3XwcaFiniSDRDAiIRe4gSDn2pj43spjDaP9KYHGzpcY9biDN2N1LUppfRI5J\nIau+PFEmR9csY5JhqlEfNkFP703UyFs/COR7PuBm5GagH/KyP4r6dCqjYh/cxWKc\n1Y0OcWVp8fk6s5iOnHqhROrpZghyfH931QA52XwOpkDrzZzTaXcSbMY5AI2KveaE\n703A6bITwRh9Lsc8j5e6hMRi6IfVHJLp55Gnk3dX/3CL0FiJSeeCLX7bcFz/+7NZ\n0/5w2H3V3JTOTq/zdNIRHSdQJwYqnfShlLzfGsw2qdU+veYY6lsuOzGLepAjHuI=\n=CInr\n-----END PGP SIGNATURE-----\n", "payload": "tree b175126dcf8f8a095c9188d5a17bc2cd26252a8b\nparent d75a5723dbc9bbc58bf7614b3a729bf5d359290b\nparent 69ac8a68af483e9cfa17938158f9779c05231d94\nauthor Dylan DPC <99973273+Dylan-DPC@users.noreply.github.com> 1657346287 +0530\ncommitter GitHub <noreply@github.com> 1657346287 +0530\n\nRollup merge of #99043 - compiler-errors:derive-nit, r=cjgillot\n\nCollapse some weirdly-wrapping derives\n\nself-explanatory\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6497130baa989a08b5ad9ab94ba1030e93232074", "html_url": "https://github.com/rust-lang/rust/commit/6497130baa989a08b5ad9ab94ba1030e93232074", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6497130baa989a08b5ad9ab94ba1030e93232074/comments", "author": {"login": "Dylan-DPC", "id": 99973273, "node_id": "U_kgDOBfV4mQ", "avatar_url": "https://avatars.githubusercontent.com/u/99973273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dylan-DPC", "html_url": "https://github.com/Dylan-DPC", "followers_url": "https://api.github.com/users/Dylan-DPC/followers", "following_url": "https://api.github.com/users/Dylan-DPC/following{/other_user}", "gists_url": "https://api.github.com/users/Dylan-DPC/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dylan-DPC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dylan-DPC/subscriptions", "organizations_url": "https://api.github.com/users/Dylan-DPC/orgs", "repos_url": "https://api.github.com/users/Dylan-DPC/repos", "events_url": "https://api.github.com/users/Dylan-DPC/events{/privacy}", "received_events_url": "https://api.github.com/users/Dylan-DPC/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d75a5723dbc9bbc58bf7614b3a729bf5d359290b", "url": "https://api.github.com/repos/rust-lang/rust/commits/d75a5723dbc9bbc58bf7614b3a729bf5d359290b", "html_url": "https://github.com/rust-lang/rust/commit/d75a5723dbc9bbc58bf7614b3a729bf5d359290b"}, {"sha": "69ac8a68af483e9cfa17938158f9779c05231d94", "url": "https://api.github.com/repos/rust-lang/rust/commits/69ac8a68af483e9cfa17938158f9779c05231d94", "html_url": "https://github.com/rust-lang/rust/commit/69ac8a68af483e9cfa17938158f9779c05231d94"}], "stats": {"total": 84, "additions": 12, "deletions": 72}, "files": [{"sha": "04f585df34cc26dff42bfab2543ca743556d7f92", "filename": "compiler/rustc_hir/src/hir.rs", "status": "modified", "additions": 4, "deletions": 24, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/6497130baa989a08b5ad9ab94ba1030e93232074/compiler%2Frustc_hir%2Fsrc%2Fhir.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6497130baa989a08b5ad9ab94ba1030e93232074/compiler%2Frustc_hir%2Fsrc%2Fhir.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_hir%2Fsrc%2Fhir.rs?ref=6497130baa989a08b5ad9ab94ba1030e93232074", "patch": "@@ -1438,18 +1438,8 @@ impl<'hir> Body<'hir> {\n }\n \n /// The type of source expression that caused this generator to be created.\n-#[derive(\n-    Clone,\n-    PartialEq,\n-    PartialOrd,\n-    Eq,\n-    Hash,\n-    HashStable_Generic,\n-    Encodable,\n-    Decodable,\n-    Debug,\n-    Copy\n-)]\n+#[derive(Clone, PartialEq, PartialOrd, Eq, Hash, Debug, Copy)]\n+#[derive(HashStable_Generic, Encodable, Decodable)]\n pub enum GeneratorKind {\n     /// An explicit `async` block or the body of an async function.\n     Async(AsyncGeneratorKind),\n@@ -1481,18 +1471,8 @@ impl GeneratorKind {\n ///\n /// This helps error messages but is also used to drive coercions in\n /// type-checking (see #60424).\n-#[derive(\n-    Clone,\n-    PartialEq,\n-    PartialOrd,\n-    Eq,\n-    Hash,\n-    HashStable_Generic,\n-    Encodable,\n-    Decodable,\n-    Debug,\n-    Copy\n-)]\n+#[derive(Clone, PartialEq, PartialOrd, Eq, Hash, Debug, Copy)]\n+#[derive(HashStable_Generic, Encodable, Decodable)]\n pub enum AsyncGeneratorKind {\n     /// An explicit `async` block written by the user.\n     Block,"}, {"sha": "65d2cd64bf69319c9b2e1e06924c1d0cfc697c5e", "filename": "compiler/rustc_target/src/asm/mod.rs", "status": "modified", "additions": 8, "deletions": 48, "changes": 56, "blob_url": "https://github.com/rust-lang/rust/blob/6497130baa989a08b5ad9ab94ba1030e93232074/compiler%2Frustc_target%2Fsrc%2Fasm%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6497130baa989a08b5ad9ab94ba1030e93232074/compiler%2Frustc_target%2Fsrc%2Fasm%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_target%2Fsrc%2Fasm%2Fmod.rs?ref=6497130baa989a08b5ad9ab94ba1030e93232074", "patch": "@@ -244,18 +244,8 @@ impl FromStr for InlineAsmArch {\n     }\n }\n \n-#[derive(\n-    Copy,\n-    Clone,\n-    Encodable,\n-    Decodable,\n-    Debug,\n-    Eq,\n-    PartialEq,\n-    PartialOrd,\n-    Hash,\n-    HashStable_Generic\n-)]\n+#[derive(Copy, Clone, Debug, Eq, PartialEq, PartialOrd, Hash)]\n+#[derive(HashStable_Generic, Encodable, Decodable)]\n pub enum InlineAsmReg {\n     X86(X86InlineAsmReg),\n     Arm(ArmInlineAsmReg),\n@@ -406,18 +396,8 @@ impl InlineAsmReg {\n     }\n }\n \n-#[derive(\n-    Copy,\n-    Clone,\n-    Encodable,\n-    Decodable,\n-    Debug,\n-    Eq,\n-    PartialEq,\n-    PartialOrd,\n-    Hash,\n-    HashStable_Generic\n-)]\n+#[derive(Copy, Clone, Debug, Eq, PartialEq, PartialOrd, Hash)]\n+#[derive(HashStable_Generic, Encodable, Decodable)]\n pub enum InlineAsmRegClass {\n     X86(X86InlineAsmRegClass),\n     Arm(ArmInlineAsmRegClass),\n@@ -620,18 +600,8 @@ impl InlineAsmRegClass {\n     }\n }\n \n-#[derive(\n-    Copy,\n-    Clone,\n-    Encodable,\n-    Decodable,\n-    Debug,\n-    Eq,\n-    PartialEq,\n-    PartialOrd,\n-    Hash,\n-    HashStable_Generic\n-)]\n+#[derive(Copy, Clone, Debug, Eq, PartialEq, PartialOrd, Hash)]\n+#[derive(HashStable_Generic, Encodable, Decodable)]\n pub enum InlineAsmRegOrRegClass {\n     Reg(InlineAsmReg),\n     RegClass(InlineAsmRegClass),\n@@ -808,18 +778,8 @@ pub fn allocatable_registers(\n     }\n }\n \n-#[derive(\n-    Copy,\n-    Clone,\n-    Encodable,\n-    Decodable,\n-    Debug,\n-    Eq,\n-    PartialEq,\n-    PartialOrd,\n-    Hash,\n-    HashStable_Generic\n-)]\n+#[derive(Copy, Clone, Debug, Eq, PartialEq, PartialOrd, Hash)]\n+#[derive(HashStable_Generic, Encodable, Decodable)]\n pub enum InlineAsmClobberAbi {\n     X86,\n     X86_64Win,"}]}