{"sha": "56328a595201285fcafc07835a64799cf59171f4", "node_id": "MDY6Q29tbWl0NzI0NzEyOjU2MzI4YTU5NTIwMTI4NWZjYWZjMDc4MzVhNjQ3OTljZjU5MTcxZjQ=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-04-04T13:09:03Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-04-04T13:09:03Z"}, "message": "Rollup merge of #59596 - LukasKalbertodt:fix-range-fmt, r=Kimundi\n\nForward formatter settings to bounds of `Range<T>` in `fmt::Debug` impl\n\nBefore this change, formatter settings were lost when printing a `Range`. For example, printing a `Range<f32>` with `{:.2?}` would not apply the precision modifier when printing the floats. Now the `Debug` impls look a bit more verbose, but modifier are not lost.\n\n---\n\nI assume the exact output of `Debug` impls in `std` cannot be relied on by users and thus can change, right?", "tree": {"sha": "422e3e0b174d37ea1e3db7efdb11349260627dad", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/422e3e0b174d37ea1e3db7efdb11349260627dad"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/56328a595201285fcafc07835a64799cf59171f4", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJcpgHvCRBK7hj4Ov3rIwAAdHIIAFWk7knksRDlyEDeqboXvZaf\njICjF9rfrE1EjZ6zGJr2ZPCrEhCel7GSTNPv6NUPFTNxRNB3pWxra0ITbDavt7JL\nDQwadDBLjR0BOeLjmi46A/xIbtfEc4wYn/Yjni99vKUqN7cLPLd5pV8SzyTOlhB+\n2TZMGdcl3qeLWudbfDurr6P/6XFJqWOONIsxuJl2OCBMZxM0SNYzUyS6TYxtEdbF\nF+KvHGHQ7Xju08T2v2VWKljTo49cl0fPaWsphtqQoq3xMb/knXqac30ilmhbIvJ1\njTof6nPvY0IoGgyCRg+rxoAKbAoMUsbGoz7DdQlF/PTyTf5kEavQxnej8m2em6s=\n=7ufc\n-----END PGP SIGNATURE-----\n", "payload": "tree 422e3e0b174d37ea1e3db7efdb11349260627dad\nparent 9f8f89105c75fb3be810a0ec76506e94ed66988b\nparent d3d3049f3a37687981eb48559470f59337694bf6\nauthor Mazdak Farrokhzad <twingoow@gmail.com> 1554383343 +0200\ncommitter GitHub <noreply@github.com> 1554383343 +0200\n\nRollup merge of #59596 - LukasKalbertodt:fix-range-fmt, r=Kimundi\n\nForward formatter settings to bounds of `Range<T>` in `fmt::Debug` impl\n\nBefore this change, formatter settings were lost when printing a `Range`. For example, printing a `Range<f32>` with `{:.2?}` would not apply the precision modifier when printing the floats. Now the `Debug` impls look a bit more verbose, but modifier are not lost.\n\n---\n\nI assume the exact output of `Debug` impls in `std` cannot be relied on by users and thus can change, right?\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/56328a595201285fcafc07835a64799cf59171f4", "html_url": "https://github.com/rust-lang/rust/commit/56328a595201285fcafc07835a64799cf59171f4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/56328a595201285fcafc07835a64799cf59171f4/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9f8f89105c75fb3be810a0ec76506e94ed66988b", "url": "https://api.github.com/repos/rust-lang/rust/commits/9f8f89105c75fb3be810a0ec76506e94ed66988b", "html_url": "https://github.com/rust-lang/rust/commit/9f8f89105c75fb3be810a0ec76506e94ed66988b"}, {"sha": "d3d3049f3a37687981eb48559470f59337694bf6", "url": "https://api.github.com/repos/rust-lang/rust/commits/d3d3049f3a37687981eb48559470f59337694bf6", "html_url": "https://github.com/rust-lang/rust/commit/d3d3049f3a37687981eb48559470f59337694bf6"}], "stats": {"total": 22, "additions": 17, "deletions": 5}, "files": [{"sha": "5b6023f2e2cbb0c4cb636b062f10c7f78e593cc5", "filename": "src/libcore/ops/range.rs", "status": "modified", "additions": 17, "deletions": 5, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/56328a595201285fcafc07835a64799cf59171f4/src%2Flibcore%2Fops%2Frange.rs", "raw_url": "https://github.com/rust-lang/rust/raw/56328a595201285fcafc07835a64799cf59171f4/src%2Flibcore%2Fops%2Frange.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fops%2Frange.rs?ref=56328a595201285fcafc07835a64799cf59171f4", "patch": "@@ -85,7 +85,10 @@ pub struct Range<Idx> {\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n impl<Idx: fmt::Debug> fmt::Debug for Range<Idx> {\n     fn fmt(&self, fmt: &mut fmt::Formatter) -> fmt::Result {\n-        write!(fmt, \"{:?}..{:?}\", self.start, self.end)\n+        self.start.fmt(fmt)?;\n+        write!(fmt, \"..\")?;\n+        self.end.fmt(fmt)?;\n+        Ok(())\n     }\n }\n \n@@ -184,7 +187,9 @@ pub struct RangeFrom<Idx> {\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n impl<Idx: fmt::Debug> fmt::Debug for RangeFrom<Idx> {\n     fn fmt(&self, fmt: &mut fmt::Formatter) -> fmt::Result {\n-        write!(fmt, \"{:?}..\", self.start)\n+        self.start.fmt(fmt)?;\n+        write!(fmt, \"..\")?;\n+        Ok(())\n     }\n }\n \n@@ -266,7 +271,9 @@ pub struct RangeTo<Idx> {\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n impl<Idx: fmt::Debug> fmt::Debug for RangeTo<Idx> {\n     fn fmt(&self, fmt: &mut fmt::Formatter) -> fmt::Result {\n-        write!(fmt, \"..{:?}\", self.end)\n+        write!(fmt, \"..\")?;\n+        self.end.fmt(fmt)?;\n+        Ok(())\n     }\n }\n \n@@ -467,7 +474,10 @@ impl<Idx> RangeInclusive<Idx> {\n #[stable(feature = \"inclusive_range\", since = \"1.26.0\")]\n impl<Idx: fmt::Debug> fmt::Debug for RangeInclusive<Idx> {\n     fn fmt(&self, fmt: &mut fmt::Formatter) -> fmt::Result {\n-        write!(fmt, \"{:?}..={:?}\", self.start, self.end)\n+        self.start.fmt(fmt)?;\n+        write!(fmt, \"..=\")?;\n+        self.end.fmt(fmt)?;\n+        Ok(())\n     }\n }\n \n@@ -602,7 +612,9 @@ pub struct RangeToInclusive<Idx> {\n #[stable(feature = \"inclusive_range\", since = \"1.26.0\")]\n impl<Idx: fmt::Debug> fmt::Debug for RangeToInclusive<Idx> {\n     fn fmt(&self, fmt: &mut fmt::Formatter) -> fmt::Result {\n-        write!(fmt, \"..={:?}\", self.end)\n+        write!(fmt, \"..=\")?;\n+        self.end.fmt(fmt)?;\n+        Ok(())\n     }\n }\n "}]}