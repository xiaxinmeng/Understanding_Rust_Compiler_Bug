{"sha": "68e9aa5fcbfbb1b5e87c667372ac7212746779c0", "node_id": "MDY6Q29tbWl0NzI0NzEyOjY4ZTlhYTVmY2JmYmIxYjVlODdjNjY3MzcyYWM3MjEyNzQ2Nzc5YzA=", "commit": {"author": {"name": "Michael Sullivan", "email": "sully@msully.net", "date": "2012-07-30T18:21:40Z"}, "committer": {"name": "Michael Sullivan", "email": "sully@msully.net", "date": "2012-07-30T18:29:24Z"}, "message": "Make at_vec push functions more like the current vec ones.", "tree": {"sha": "07b280f4286d175e8aca677b86dd77fc61b157df", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/07b280f4286d175e8aca677b86dd77fc61b157df"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/68e9aa5fcbfbb1b5e87c667372ac7212746779c0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/68e9aa5fcbfbb1b5e87c667372ac7212746779c0", "html_url": "https://github.com/rust-lang/rust/commit/68e9aa5fcbfbb1b5e87c667372ac7212746779c0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/68e9aa5fcbfbb1b5e87c667372ac7212746779c0/comments", "author": {"login": "msullivan", "id": 340349, "node_id": "MDQ6VXNlcjM0MDM0OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/340349?v=4", "gravatar_id": "", "url": "https://api.github.com/users/msullivan", "html_url": "https://github.com/msullivan", "followers_url": "https://api.github.com/users/msullivan/followers", "following_url": "https://api.github.com/users/msullivan/following{/other_user}", "gists_url": "https://api.github.com/users/msullivan/gists{/gist_id}", "starred_url": "https://api.github.com/users/msullivan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/msullivan/subscriptions", "organizations_url": "https://api.github.com/users/msullivan/orgs", "repos_url": "https://api.github.com/users/msullivan/repos", "events_url": "https://api.github.com/users/msullivan/events{/privacy}", "received_events_url": "https://api.github.com/users/msullivan/received_events", "type": "User", "site_admin": false}, "committer": {"login": "msullivan", "id": 340349, "node_id": "MDQ6VXNlcjM0MDM0OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/340349?v=4", "gravatar_id": "", "url": "https://api.github.com/users/msullivan", "html_url": "https://github.com/msullivan", "followers_url": "https://api.github.com/users/msullivan/followers", "following_url": "https://api.github.com/users/msullivan/following{/other_user}", "gists_url": "https://api.github.com/users/msullivan/gists{/gist_id}", "starred_url": "https://api.github.com/users/msullivan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/msullivan/subscriptions", "organizations_url": "https://api.github.com/users/msullivan/orgs", "repos_url": "https://api.github.com/users/msullivan/repos", "events_url": "https://api.github.com/users/msullivan/events{/privacy}", "received_events_url": "https://api.github.com/users/msullivan/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "519deca7168713a141e7341315a98b35e1f55ef2", "url": "https://api.github.com/repos/rust-lang/rust/commits/519deca7168713a141e7341315a98b35e1f55ef2", "html_url": "https://github.com/rust-lang/rust/commit/519deca7168713a141e7341315a98b35e1f55ef2"}], "stats": {"total": 20, "additions": 14, "deletions": 6}, "files": [{"sha": "66c0de07a76734678ad044683ee0ce1a4b83b905", "filename": "src/libcore/at_vec.rs", "status": "modified", "additions": 14, "deletions": 6, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/68e9aa5fcbfbb1b5e87c667372ac7212746779c0/src%2Flibcore%2Fat_vec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/68e9aa5fcbfbb1b5e87c667372ac7212746779c0/src%2Flibcore%2Fat_vec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fat_vec.rs?ref=68e9aa5fcbfbb1b5e87c667372ac7212746779c0", "patch": "@@ -131,25 +131,33 @@ mod unsafe {\n         (**repr).fill = new_len * sys::size_of::<T>();\n     }\n \n-    /// Append an element to a vector\n     #[inline(always)]\n     unsafe fn push<T>(&v: @[const T], +initval: T) {\n         let repr: **vec_repr = ::unsafe::reinterpret_cast(addr_of(v));\n         let fill = (**repr).fill;\n         if (**repr).alloc > fill {\n-            (**repr).fill += sys::size_of::<T>();\n-            let p = addr_of((**repr).data);\n-            let p = ptr::offset(p, fill) as *mut T;\n-            rusti::move_val_init(*p, initval);\n+            push_fast(v, initval);\n         }\n         else {\n             push_slow(v, initval);\n         }\n     }\n+    // This doesn't bother to make sure we have space.\n+    #[inline(always)] // really pretty please\n+    unsafe fn push_fast<T>(&v: @[const T], +initval: T) {\n+        let repr: **vec_repr = ::unsafe::reinterpret_cast(addr_of(v));\n+        let fill = (**repr).fill;\n+        (**repr).fill += sys::size_of::<T>();\n+        let p = ptr::addr_of((**repr).data);\n+        let p = ptr::offset(p, fill) as *mut T;\n+        rusti::move_val_init(*p, initval);\n+    }\n+\n     unsafe fn push_slow<T>(&v: @[const T], +initval: T) {\n         reserve_at_least(v, v.len() + 1u);\n-        push(v, initval);\n+        push_fast(v, initval);\n     }\n+\n     /**\n      * Reserves capacity for exactly `n` elements in the given vector.\n      *"}]}