{"sha": "fbb6b13140867c3c9e89aba42ee73f6bba2734d1", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZiYjZiMTMxNDA4NjdjM2M5ZTg5YWJhNDJlZTczZjZiYmEyNzM0ZDE=", "commit": {"author": {"name": "Philipp Krones", "email": "uwdkn@student.kit.edu", "date": "2018-09-15T09:56:11Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2018-09-15T09:56:11Z"}, "message": "Merge pull request #3068 from matthiaskrgr/string\n\nconvert \"\".to_string() and \"\".to_owned() to String::new()", "tree": {"sha": "7ceaac5ddc52ee85f2253421960f4d705e958f89", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7ceaac5ddc52ee85f2253421960f4d705e958f89"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/fbb6b13140867c3c9e89aba42ee73f6bba2734d1", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJbnNc7CRBK7hj4Ov3rIwAAdHIIAAedRosZYTqXrF7VUYzj5xj+\nk+Cw/G9iE/NaOCXnjojzJC75h2gZcVFzEm3gue9XX5fhaRj6oX8aAwesBh0PsBu9\n/RcybZpJqyAM1fiHohtQy53zzR3MxRPxo4oGrA5qlowS0lSapkYDL58MfkIgfrCh\nNib9MOL3gLKCnbmUKfveOlxtcKFuoNZCkrZ9RuPUPfcDzI+OiOIR24iXg6jQ0oQU\nHN31cVQBx0IlO6Q5WQsTr8QpBxUdzJiqIHT6MTqQ5IxU6cBNimiWesVdX4j/ohrj\nA4rzjXPc0jcMGqNjKrAS5C0VcbG5JK2d3hFgmeSVXym1NpUA4ZIe98gytu7neGo=\n=XQEj\n-----END PGP SIGNATURE-----\n", "payload": "tree 7ceaac5ddc52ee85f2253421960f4d705e958f89\nparent f166b7d2f4fb184e757c52973054ec07a7b8be60\nparent 021748eb6a2fd86bd21e173cef04c19bdb456bb4\nauthor Philipp Krones <uwdkn@student.kit.edu> 1537005371 +0200\ncommitter GitHub <noreply@github.com> 1537005371 +0200\n\nMerge pull request #3068 from matthiaskrgr/string\n\nconvert \"\".to_string() and \"\".to_owned() to String::new()"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/fbb6b13140867c3c9e89aba42ee73f6bba2734d1", "html_url": "https://github.com/rust-lang/rust/commit/fbb6b13140867c3c9e89aba42ee73f6bba2734d1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/fbb6b13140867c3c9e89aba42ee73f6bba2734d1/comments", "author": {"login": "flip1995", "id": 9744647, "node_id": "MDQ6VXNlcjk3NDQ2NDc=", "avatar_url": "https://avatars.githubusercontent.com/u/9744647?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flip1995", "html_url": "https://github.com/flip1995", "followers_url": "https://api.github.com/users/flip1995/followers", "following_url": "https://api.github.com/users/flip1995/following{/other_user}", "gists_url": "https://api.github.com/users/flip1995/gists{/gist_id}", "starred_url": "https://api.github.com/users/flip1995/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flip1995/subscriptions", "organizations_url": "https://api.github.com/users/flip1995/orgs", "repos_url": "https://api.github.com/users/flip1995/repos", "events_url": "https://api.github.com/users/flip1995/events{/privacy}", "received_events_url": "https://api.github.com/users/flip1995/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f166b7d2f4fb184e757c52973054ec07a7b8be60", "url": "https://api.github.com/repos/rust-lang/rust/commits/f166b7d2f4fb184e757c52973054ec07a7b8be60", "html_url": "https://github.com/rust-lang/rust/commit/f166b7d2f4fb184e757c52973054ec07a7b8be60"}, {"sha": "021748eb6a2fd86bd21e173cef04c19bdb456bb4", "url": "https://api.github.com/repos/rust-lang/rust/commits/021748eb6a2fd86bd21e173cef04c19bdb456bb4", "html_url": "https://github.com/rust-lang/rust/commit/021748eb6a2fd86bd21e173cef04c19bdb456bb4"}], "stats": {"total": 24, "additions": 12, "deletions": 12}, "files": [{"sha": "da6e860e236ce92ba4cce85dcab52d5a1e42c7a6", "filename": "clippy_lints/src/else_if_without_else.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fbb6b13140867c3c9e89aba42ee73f6bba2734d1/clippy_lints%2Fsrc%2Felse_if_without_else.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fbb6b13140867c3c9e89aba42ee73f6bba2734d1/clippy_lints%2Fsrc%2Felse_if_without_else.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Felse_if_without_else.rs?ref=fbb6b13140867c3c9e89aba42ee73f6bba2734d1", "patch": "@@ -62,7 +62,7 @@ impl EarlyLintPass for ElseIfWithoutElse {\n                     els.span,\n                     \"if expression with an `else if`, but without a final `else`\",\n                     \"add an `else` block here\",\n-                    \"\".to_string()\n+                    String::new()\n                 );\n             }\n "}, {"sha": "3adc4302730ff311405857da33ca23a40743c68c", "filename": "clippy_lints/src/loops.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/fbb6b13140867c3c9e89aba42ee73f6bba2734d1/clippy_lints%2Fsrc%2Floops.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fbb6b13140867c3c9e89aba42ee73f6bba2734d1/clippy_lints%2Fsrc%2Floops.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Floops.rs?ref=fbb6b13140867c3c9e89aba42ee73f6bba2734d1", "patch": "@@ -956,7 +956,7 @@ fn detect_manual_memcpy<'a, 'tcx>(\n                         return if offset.negate {\n                             format!(\"({} - {})\", snippet(cx, end.span, \"<src>.len()\"), offset.value)\n                         } else {\n-                            \"\".to_owned()\n+                            String::new()\n                         };\n                     }\n                 }\n@@ -1067,14 +1067,14 @@ fn check_for_loop_range<'a, 'tcx>(\n                 let starts_at_zero = is_integer_literal(start, 0);\n \n                 let skip = if starts_at_zero {\n-                    \"\".to_owned()\n+                    String::new()\n                 } else {\n                     format!(\".skip({})\", snippet(cx, start.span, \"..\"))\n                 };\n \n                 let take = if let Some(end) = *end {\n                     if is_len_call(end, indexed) {\n-                        \"\".to_owned()\n+                        String::new()\n                     } else {\n                         match limits {\n                             ast::RangeLimits::Closed => {\n@@ -1085,7 +1085,7 @@ fn check_for_loop_range<'a, 'tcx>(\n                         }\n                     }\n                 } else {\n-                    \"\".to_owned()\n+                    String::new()\n                 };\n \n                 let (ref_mut, method) = if visitor.indexed_mut.contains(&indexed) {"}, {"sha": "dcc4dca392975babb357f2f450d52b666a14d82f", "filename": "clippy_lints/src/misc.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fbb6b13140867c3c9e89aba42ee73f6bba2734d1/clippy_lints%2Fsrc%2Fmisc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fbb6b13140867c3c9e89aba42ee73f6bba2734d1/clippy_lints%2Fsrc%2Fmisc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmisc.rs?ref=fbb6b13140867c3c9e89aba42ee73f6bba2734d1", "patch": "@@ -287,7 +287,7 @@ impl<'a, 'tcx> LateLintPass<'a, 'tcx> for Pass {\n                     let tyopt = if let Some(ref ty) = l.ty {\n                         format!(\": &{mutopt}{ty}\", mutopt=mutopt, ty=snippet(cx, ty.span, \"_\"))\n                     } else {\n-                        \"\".to_owned()\n+                        String::new()\n                     };\n                     span_lint_and_then(cx,\n                         TOPLEVEL_REF_ARG,"}, {"sha": "6292af92e260219a348353cdd086157bc302e2f0", "filename": "clippy_lints/src/ranges.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/fbb6b13140867c3c9e89aba42ee73f6bba2734d1/clippy_lints%2Fsrc%2Franges.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fbb6b13140867c3c9e89aba42ee73f6bba2734d1/clippy_lints%2Fsrc%2Franges.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Franges.rs?ref=fbb6b13140867c3c9e89aba42ee73f6bba2734d1", "patch": "@@ -146,7 +146,7 @@ impl<'a, 'tcx> LateLintPass<'a, 'tcx> for Pass {\n                     expr.span,\n                     \"an inclusive range would be more readable\",\n                     |db| {\n-                        let start = start.map_or(\"\".to_owned(), |x| Sugg::hir(cx, x, \"x\").to_string());\n+                        let start = start.map_or(String::new(), |x| Sugg::hir(cx, x, \"x\").to_string());\n                         let end = Sugg::hir(cx, y, \"y\");\n                         if let Some(is_wrapped) = &snippet_opt(cx, expr.span) {\n                             if is_wrapped.starts_with('(') && is_wrapped.ends_with(')') {\n@@ -175,7 +175,7 @@ impl<'a, 'tcx> LateLintPass<'a, 'tcx> for Pass {\n                     expr.span,\n                     \"an exclusive range would be more readable\",\n                     |db| {\n-                        let start = start.map_or(\"\".to_owned(), |x| Sugg::hir(cx, x, \"x\").to_string());\n+                        let start = start.map_or(String::new(), |x| Sugg::hir(cx, x, \"x\").to_string());\n                         let end = Sugg::hir(cx, y, \"y\");\n                         db.span_suggestion(expr.span,\n                                            \"use\","}, {"sha": "cd3a7259aae32b44584143a48d65415d42627138", "filename": "clippy_lints/src/swap.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/fbb6b13140867c3c9e89aba42ee73f6bba2734d1/clippy_lints%2Fsrc%2Fswap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fbb6b13140867c3c9e89aba42ee73f6bba2734d1/clippy_lints%2Fsrc%2Fswap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fswap.rs?ref=fbb6b13140867c3c9e89aba42ee73f6bba2734d1", "patch": "@@ -119,13 +119,13 @@ fn check_manual_swap(cx: &LateContext<'_, '_>, block: &Block) {\n                                  snippet(cx, idx1.span, \"..\"),\n                                  snippet(cx, idx2.span, \"..\")))\n                     } else {\n-                        (false, \"\".to_owned(), \"\".to_owned())\n+                        (false, String::new(), String::new())\n                     }\n                 } else if let (Some(first), Some(second)) = (Sugg::hir_opt(cx, lhs1), Sugg::hir_opt(cx, rhs1)) {\n                     (true, format!(\" `{}` and `{}`\", first, second),\n                         format!(\"std::mem::swap({}, {})\", first.mut_addr(), second.mut_addr()))\n                 } else {\n-                    (true, \"\".to_owned(), \"\".to_owned())\n+                    (true, String::new(), String::new())\n                 };\n \n                 let span = w[0].span.to(second.span);\n@@ -169,7 +169,7 @@ fn check_suspicious_swap(cx: &LateContext<'_, '_>, block: &Block) {\n                         second.mut_addr().to_string(),\n                     )\n                 } else {\n-                    (\"\".to_owned(), \"\".to_owned(), \"\".to_owned())\n+                    (String::new(), String::new(), String::new())\n                 };\n \n                 let span = first.span.to(second.span);"}, {"sha": "857238e9002bf5a8092c2f02c3701df94f42889a", "filename": "clippy_lints/src/types.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fbb6b13140867c3c9e89aba42ee73f6bba2734d1/clippy_lints%2Fsrc%2Ftypes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fbb6b13140867c3c9e89aba42ee73f6bba2734d1/clippy_lints%2Fsrc%2Ftypes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Ftypes.rs?ref=fbb6b13140867c3c9e89aba42ee73f6bba2734d1", "patch": "@@ -319,7 +319,7 @@ fn check_ty_rptr(cx: &LateContext<'_, '_>, ast_ty: &hir::Ty, is_local: bool, lt:\n                     }\n \n                     let ltopt = if lt.is_elided() {\n-                        \"\".to_owned()\n+                        String::new()\n                     } else {\n                         format!(\"{} \", lt.name.ident().name.as_str())\n                     };"}]}