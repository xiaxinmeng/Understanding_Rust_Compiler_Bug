{"sha": "05c5df56824aaf931aef617827589bb0f3936ffa", "node_id": "C_kwDOAAsO6NoAKDA1YzVkZjU2ODI0YWFmOTMxYWVmNjE3ODI3NTg5YmIwZjM5MzZmZmE", "commit": {"author": {"name": "Caleb Cartwright", "email": "caleb.cartwright@outlook.com", "date": "2023-05-12T02:51:41Z"}, "committer": {"name": "Caleb Cartwright", "email": "caleb.cartwright@outlook.com", "date": "2023-05-12T02:59:38Z"}, "message": "refactor: use by-ref TokenTree iterator to avoid a few clones", "tree": {"sha": "a5030e64699065ac3502a68fbb871bd610ff4992", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a5030e64699065ac3502a68fbb871bd610ff4992"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/05c5df56824aaf931aef617827589bb0f3936ffa", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/05c5df56824aaf931aef617827589bb0f3936ffa", "html_url": "https://github.com/rust-lang/rust/commit/05c5df56824aaf931aef617827589bb0f3936ffa", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/05c5df56824aaf931aef617827589bb0f3936ffa/comments", "author": {"login": "calebcartwright", "id": 13042488, "node_id": "MDQ6VXNlcjEzMDQyNDg4", "avatar_url": "https://avatars.githubusercontent.com/u/13042488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/calebcartwright", "html_url": "https://github.com/calebcartwright", "followers_url": "https://api.github.com/users/calebcartwright/followers", "following_url": "https://api.github.com/users/calebcartwright/following{/other_user}", "gists_url": "https://api.github.com/users/calebcartwright/gists{/gist_id}", "starred_url": "https://api.github.com/users/calebcartwright/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/calebcartwright/subscriptions", "organizations_url": "https://api.github.com/users/calebcartwright/orgs", "repos_url": "https://api.github.com/users/calebcartwright/repos", "events_url": "https://api.github.com/users/calebcartwright/events{/privacy}", "received_events_url": "https://api.github.com/users/calebcartwright/received_events", "type": "User", "site_admin": false}, "committer": {"login": "calebcartwright", "id": 13042488, "node_id": "MDQ6VXNlcjEzMDQyNDg4", "avatar_url": "https://avatars.githubusercontent.com/u/13042488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/calebcartwright", "html_url": "https://github.com/calebcartwright", "followers_url": "https://api.github.com/users/calebcartwright/followers", "following_url": "https://api.github.com/users/calebcartwright/following{/other_user}", "gists_url": "https://api.github.com/users/calebcartwright/gists{/gist_id}", "starred_url": "https://api.github.com/users/calebcartwright/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/calebcartwright/subscriptions", "organizations_url": "https://api.github.com/users/calebcartwright/orgs", "repos_url": "https://api.github.com/users/calebcartwright/repos", "events_url": "https://api.github.com/users/calebcartwright/events{/privacy}", "received_events_url": "https://api.github.com/users/calebcartwright/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5b24e12785e6a6bacb69953fb389bcd2fc11ae87", "url": "https://api.github.com/repos/rust-lang/rust/commits/5b24e12785e6a6bacb69953fb389bcd2fc11ae87", "html_url": "https://github.com/rust-lang/rust/commit/5b24e12785e6a6bacb69953fb389bcd2fc11ae87"}], "stats": {"total": 12, "additions": 6, "deletions": 6}, "files": [{"sha": "ee56d45c9c826eb85c79865d34ba3710ece3685f", "filename": "compiler/rustc_builtin_macros/src/concat_idents.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/05c5df56824aaf931aef617827589bb0f3936ffa/compiler%2Frustc_builtin_macros%2Fsrc%2Fconcat_idents.rs", "raw_url": "https://github.com/rust-lang/rust/raw/05c5df56824aaf931aef617827589bb0f3936ffa/compiler%2Frustc_builtin_macros%2Fsrc%2Fconcat_idents.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_builtin_macros%2Fsrc%2Fconcat_idents.rs?ref=05c5df56824aaf931aef617827589bb0f3936ffa", "patch": "@@ -19,7 +19,7 @@ pub fn expand_concat_idents<'cx>(\n     }\n \n     let mut res_str = String::new();\n-    for (i, e) in tts.into_trees().enumerate() {\n+    for (i, e) in tts.trees().enumerate() {\n         if i & 1 == 1 {\n             match e {\n                 TokenTree::Token(Token { kind: token::Comma, .. }, _) => {}"}, {"sha": "9c98723e1f43f96ccedc581d6603987c760cc938", "filename": "compiler/rustc_builtin_macros/src/trace_macros.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/05c5df56824aaf931aef617827589bb0f3936ffa/compiler%2Frustc_builtin_macros%2Fsrc%2Ftrace_macros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/05c5df56824aaf931aef617827589bb0f3936ffa/compiler%2Frustc_builtin_macros%2Fsrc%2Ftrace_macros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_builtin_macros%2Fsrc%2Ftrace_macros.rs?ref=05c5df56824aaf931aef617827589bb0f3936ffa", "patch": "@@ -8,7 +8,7 @@ pub fn expand_trace_macros(\n     sp: Span,\n     tt: TokenStream,\n ) -> Box<dyn base::MacResult + 'static> {\n-    let mut cursor = tt.into_trees();\n+    let mut cursor = tt.trees();\n     let mut err = false;\n     let value = match &cursor.next() {\n         Some(TokenTree::Token(token, _)) if token.is_keyword(kw::True) => true,"}, {"sha": "b1c45eaf601e501f22f90485a48fa455bc14a51e", "filename": "compiler/rustc_lint/src/builtin.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/05c5df56824aaf931aef617827589bb0f3936ffa/compiler%2Frustc_lint%2Fsrc%2Fbuiltin.rs", "raw_url": "https://github.com/rust-lang/rust/raw/05c5df56824aaf931aef617827589bb0f3936ffa/compiler%2Frustc_lint%2Fsrc%2Fbuiltin.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_lint%2Fsrc%2Fbuiltin.rs?ref=05c5df56824aaf931aef617827589bb0f3936ffa", "patch": "@@ -1882,8 +1882,8 @@ declare_lint_pass!(\n struct UnderMacro(bool);\n \n impl KeywordIdents {\n-    fn check_tokens(&mut self, cx: &EarlyContext<'_>, tokens: TokenStream) {\n-        for tt in tokens.into_trees() {\n+    fn check_tokens(&mut self, cx: &EarlyContext<'_>, tokens: &TokenStream) {\n+        for tt in tokens.trees() {\n             match tt {\n                 // Only report non-raw idents.\n                 TokenTree::Token(token, _) => {\n@@ -1944,10 +1944,10 @@ impl KeywordIdents {\n \n impl EarlyLintPass for KeywordIdents {\n     fn check_mac_def(&mut self, cx: &EarlyContext<'_>, mac_def: &ast::MacroDef) {\n-        self.check_tokens(cx, mac_def.body.tokens.clone());\n+        self.check_tokens(cx, &mac_def.body.tokens);\n     }\n     fn check_mac(&mut self, cx: &EarlyContext<'_>, mac: &ast::MacCall) {\n-        self.check_tokens(cx, mac.args.tokens.clone());\n+        self.check_tokens(cx, &mac.args.tokens);\n     }\n     fn check_ident(&mut self, cx: &EarlyContext<'_>, ident: Ident) {\n         self.check_ident_token(cx, UnderMacro(false), ident);"}]}