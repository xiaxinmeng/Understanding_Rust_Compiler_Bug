{"sha": "91ba04d872ad13b93e80c8bda42d06b62d5deaa2", "node_id": "MDY6Q29tbWl0NzI0NzEyOjkxYmEwNGQ4NzJhZDEzYjkzZTgwYzhiZGE0MmQwNmI2MmQ1ZGVhYTI=", "commit": {"author": {"name": "Camelid", "email": "camelidcamel@gmail.com", "date": "2020-10-17T03:35:56Z"}, "committer": {"name": "Camelid", "email": "camelidcamel@gmail.com", "date": "2020-10-17T20:20:42Z"}, "message": "Note that `BasicBlock` is just an index", "tree": {"sha": "91b4335f0493b201227895ca8e9f042ca167a3e0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/91b4335f0493b201227895ca8e9f042ca167a3e0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/91ba04d872ad13b93e80c8bda42d06b62d5deaa2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/91ba04d872ad13b93e80c8bda42d06b62d5deaa2", "html_url": "https://github.com/rust-lang/rust/commit/91ba04d872ad13b93e80c8bda42d06b62d5deaa2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/91ba04d872ad13b93e80c8bda42d06b62d5deaa2/comments", "author": {"login": "camelid", "id": 37223377, "node_id": "MDQ6VXNlcjM3MjIzMzc3", "avatar_url": "https://avatars.githubusercontent.com/u/37223377?v=4", "gravatar_id": "", "url": "https://api.github.com/users/camelid", "html_url": "https://github.com/camelid", "followers_url": "https://api.github.com/users/camelid/followers", "following_url": "https://api.github.com/users/camelid/following{/other_user}", "gists_url": "https://api.github.com/users/camelid/gists{/gist_id}", "starred_url": "https://api.github.com/users/camelid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/camelid/subscriptions", "organizations_url": "https://api.github.com/users/camelid/orgs", "repos_url": "https://api.github.com/users/camelid/repos", "events_url": "https://api.github.com/users/camelid/events{/privacy}", "received_events_url": "https://api.github.com/users/camelid/received_events", "type": "User", "site_admin": false}, "committer": {"login": "camelid", "id": 37223377, "node_id": "MDQ6VXNlcjM3MjIzMzc3", "avatar_url": "https://avatars.githubusercontent.com/u/37223377?v=4", "gravatar_id": "", "url": "https://api.github.com/users/camelid", "html_url": "https://github.com/camelid", "followers_url": "https://api.github.com/users/camelid/followers", "following_url": "https://api.github.com/users/camelid/following{/other_user}", "gists_url": "https://api.github.com/users/camelid/gists{/gist_id}", "starred_url": "https://api.github.com/users/camelid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/camelid/subscriptions", "organizations_url": "https://api.github.com/users/camelid/orgs", "repos_url": "https://api.github.com/users/camelid/repos", "events_url": "https://api.github.com/users/camelid/events{/privacy}", "received_events_url": "https://api.github.com/users/camelid/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f1b97ee7f8ffb1a814944b85c7e05a1555a7eda5", "url": "https://api.github.com/repos/rust-lang/rust/commits/f1b97ee7f8ffb1a814944b85c7e05a1555a7eda5", "html_url": "https://github.com/rust-lang/rust/commit/f1b97ee7f8ffb1a814944b85c7e05a1555a7eda5"}], "stats": {"total": 5, "additions": 4, "deletions": 1}, "files": [{"sha": "b38efedbf607ecbcfbeadf3787199fe561d28b3a", "filename": "compiler/rustc_middle/src/mir/mod.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/91ba04d872ad13b93e80c8bda42d06b62d5deaa2/compiler%2Frustc_middle%2Fsrc%2Fmir%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/91ba04d872ad13b93e80c8bda42d06b62d5deaa2/compiler%2Frustc_middle%2Fsrc%2Fmir%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fmir%2Fmod.rs?ref=91ba04d872ad13b93e80c8bda42d06b62d5deaa2", "patch": "@@ -146,7 +146,7 @@ impl<'tcx> MirSource<'tcx> {\n /// The lowered representation of a single function.\n #[derive(Clone, TyEncodable, TyDecodable, Debug, HashStable, TypeFoldable)]\n pub struct Body<'tcx> {\n-    /// A list of basic blocks. References to basic block use a newtyped index type `BasicBlock`\n+    /// A list of basic blocks. References to basic block use a newtyped index type [`BasicBlock`]\n     /// that indexes into this vector.\n     basic_blocks: IndexVec<BasicBlock, BasicBlockData<'tcx>>,\n \n@@ -1106,6 +1106,9 @@ rustc_index::newtype_index! {\n     /// are edges that go from a multi-successor node to a multi-predecessor node. This pass is\n     /// needed because some analyses require that there are no critical edges in the CFG.\n     ///\n+    /// Note that this type is just an index into [`Body.basic_blocks`](Body::basic_blocks);\n+    /// the actual data that a basic block holds is in [`BasicBlockData`].\n+    ///\n     /// Read more about basic blocks in the [rustc-dev-guide][guide-mir].\n     ///\n     /// [CFG]: https://rustc-dev-guide.rust-lang.org/appendix/background.html#cfg"}]}