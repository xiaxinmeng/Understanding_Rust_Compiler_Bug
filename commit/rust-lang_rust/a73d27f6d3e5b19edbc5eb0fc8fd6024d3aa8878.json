{"sha": "a73d27f6d3e5b19edbc5eb0fc8fd6024d3aa8878", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE3M2QyN2Y2ZDNlNWIxOWVkYmM1ZWIwZmM4ZmQ2MDI0ZDNhYTg4Nzg=", "commit": {"author": {"name": "Andrew Paseltiner", "email": "apaseltiner@gmail.com", "date": "2015-08-30T01:06:11Z"}, "committer": {"name": "Andrew Paseltiner", "email": "apaseltiner@gmail.com", "date": "2015-08-31T17:57:59Z"}, "message": "Implement RFC 839 for `{HashMap, HashSet}`\n\nIt appears that these impls were left out of #25989 by mistake.", "tree": {"sha": "ed1285cffee728ec1dbe0066b2b81f0799544d3f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ed1285cffee728ec1dbe0066b2b81f0799544d3f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a73d27f6d3e5b19edbc5eb0fc8fd6024d3aa8878", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a73d27f6d3e5b19edbc5eb0fc8fd6024d3aa8878", "html_url": "https://github.com/rust-lang/rust/commit/a73d27f6d3e5b19edbc5eb0fc8fd6024d3aa8878", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a73d27f6d3e5b19edbc5eb0fc8fd6024d3aa8878/comments", "author": {"login": "apasel422", "id": 8644784, "node_id": "MDQ6VXNlcjg2NDQ3ODQ=", "avatar_url": "https://avatars.githubusercontent.com/u/8644784?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apasel422", "html_url": "https://github.com/apasel422", "followers_url": "https://api.github.com/users/apasel422/followers", "following_url": "https://api.github.com/users/apasel422/following{/other_user}", "gists_url": "https://api.github.com/users/apasel422/gists{/gist_id}", "starred_url": "https://api.github.com/users/apasel422/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apasel422/subscriptions", "organizations_url": "https://api.github.com/users/apasel422/orgs", "repos_url": "https://api.github.com/users/apasel422/repos", "events_url": "https://api.github.com/users/apasel422/events{/privacy}", "received_events_url": "https://api.github.com/users/apasel422/received_events", "type": "User", "site_admin": false}, "committer": {"login": "apasel422", "id": 8644784, "node_id": "MDQ6VXNlcjg2NDQ3ODQ=", "avatar_url": "https://avatars.githubusercontent.com/u/8644784?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apasel422", "html_url": "https://github.com/apasel422", "followers_url": "https://api.github.com/users/apasel422/followers", "following_url": "https://api.github.com/users/apasel422/following{/other_user}", "gists_url": "https://api.github.com/users/apasel422/gists{/gist_id}", "starred_url": "https://api.github.com/users/apasel422/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apasel422/subscriptions", "organizations_url": "https://api.github.com/users/apasel422/orgs", "repos_url": "https://api.github.com/users/apasel422/repos", "events_url": "https://api.github.com/users/apasel422/events{/privacy}", "received_events_url": "https://api.github.com/users/apasel422/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9982314577e3d86da87b8024496d932b2cfff298", "url": "https://api.github.com/repos/rust-lang/rust/commits/9982314577e3d86da87b8024496d932b2cfff298", "html_url": "https://github.com/rust-lang/rust/commit/9982314577e3d86da87b8024496d932b2cfff298"}], "stats": {"total": 62, "additions": 62, "deletions": 0}, "files": [{"sha": "4ad8fce8120aa2318db78c476b2aad8c3f46bf03", "filename": "src/libstd/collections/hash/map.rs", "status": "modified", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/a73d27f6d3e5b19edbc5eb0fc8fd6024d3aa8878/src%2Flibstd%2Fcollections%2Fhash%2Fmap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a73d27f6d3e5b19edbc5eb0fc8fd6024d3aa8878/src%2Flibstd%2Fcollections%2Fhash%2Fmap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fcollections%2Fhash%2Fmap.rs?ref=a73d27f6d3e5b19edbc5eb0fc8fd6024d3aa8878", "patch": "@@ -1583,6 +1583,14 @@ impl<K, V, S> Extend<(K, V)> for HashMap<K, V, S>\n     }\n }\n \n+#[stable(feature = \"hash_extend_copy\", since = \"1.4.0\")]\n+impl<'a, K, V, S> Extend<(&'a K, &'a V)> for HashMap<K, V, S>\n+    where K: Eq + Hash + Copy, V: Copy, S: HashState\n+{\n+    fn extend<T: IntoIterator<Item=(&'a K, &'a V)>>(&mut self, iter: T) {\n+        self.extend(iter.into_iter().map(|(&key, &value)| (key, value)));\n+    }\n+}\n \n /// `RandomState` is the default state for `HashMap` types.\n ///\n@@ -2347,4 +2355,20 @@ mod test_map {\n             check(&m);\n         }\n     }\n+\n+    #[test]\n+    fn test_extend_ref() {\n+        let mut a = HashMap::new();\n+        a.insert(1, \"one\");\n+        let mut b = HashMap::new();\n+        b.insert(2, \"two\");\n+        b.insert(3, \"three\");\n+\n+        a.extend(&b);\n+\n+        assert_eq!(a.len(), 3);\n+        assert_eq!(a[&1], \"one\");\n+        assert_eq!(a[&2], \"two\");\n+        assert_eq!(a[&3], \"three\");\n+    }\n }"}, {"sha": "7264b5827c4fb0d46d9ff6719824e0ebda671614", "filename": "src/libstd/collections/hash/set.rs", "status": "modified", "additions": 38, "deletions": 0, "changes": 38, "blob_url": "https://github.com/rust-lang/rust/blob/a73d27f6d3e5b19edbc5eb0fc8fd6024d3aa8878/src%2Flibstd%2Fcollections%2Fhash%2Fset.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a73d27f6d3e5b19edbc5eb0fc8fd6024d3aa8878/src%2Flibstd%2Fcollections%2Fhash%2Fset.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fcollections%2Fhash%2Fset.rs?ref=a73d27f6d3e5b19edbc5eb0fc8fd6024d3aa8878", "patch": "@@ -654,6 +654,16 @@ impl<T, S> Extend<T> for HashSet<T, S>\n     }\n }\n \n+#[stable(feature = \"hash_extend_copy\", since = \"1.4.0\")]\n+impl<'a, T, S> Extend<&'a T> for HashSet<T, S>\n+    where T: 'a + Eq + Hash + Copy,\n+          S: HashState,\n+{\n+    fn extend<I: IntoIterator<Item=&'a T>>(&mut self, iter: I) {\n+        self.extend(iter.into_iter().cloned());\n+    }\n+}\n+\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n impl<T, S> Default for HashSet<T, S>\n     where T: Eq + Hash,\n@@ -1325,4 +1335,32 @@ mod test_set {\n         assert_eq!(it.next(), Some(&Foo(\"a\", 2)));\n         assert_eq!(it.next(), None);\n     }\n+\n+    #[test]\n+    fn test_extend_ref() {\n+        let mut a = HashSet::new();\n+        a.insert(1);\n+\n+        a.extend(&[2, 3, 4]);\n+\n+        assert_eq!(a.len(), 4);\n+        assert!(a.contains(&1));\n+        assert!(a.contains(&2));\n+        assert!(a.contains(&3));\n+        assert!(a.contains(&4));\n+\n+        let mut b = HashSet::new();\n+        b.insert(5);\n+        b.insert(6);\n+\n+        a.extend(&b);\n+\n+        assert_eq!(a.len(), 6);\n+        assert!(a.contains(&1));\n+        assert!(a.contains(&2));\n+        assert!(a.contains(&3));\n+        assert!(a.contains(&4));\n+        assert!(a.contains(&5));\n+        assert!(a.contains(&6));\n+    }\n }"}]}