{"sha": "a95c71e0ac3dc97468d7432d5011fbb413ba9263", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE5NWM3MWUwYWMzZGM5NzQ2OGQ3NDMyZDUwMTFmYmI0MTNiYTkyNjM=", "commit": {"author": {"name": "Murarth", "email": "murarth@gmail.com", "date": "2014-11-24T05:22:07Z"}, "committer": {"name": "Murarth", "email": "murarth@gmail.com", "date": "2014-11-24T17:07:19Z"}, "message": "Fixed \"::::\" appearing in module_path!()", "tree": {"sha": "940adeeb748493a9dfe7a307af65967efae1e04d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/940adeeb748493a9dfe7a307af65967efae1e04d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a95c71e0ac3dc97468d7432d5011fbb413ba9263", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a95c71e0ac3dc97468d7432d5011fbb413ba9263", "html_url": "https://github.com/rust-lang/rust/commit/a95c71e0ac3dc97468d7432d5011fbb413ba9263", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a95c71e0ac3dc97468d7432d5011fbb413ba9263/comments", "author": {"login": "murarth", "id": 1332722, "node_id": "MDQ6VXNlcjEzMzI3MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/1332722?v=4", "gravatar_id": "", "url": "https://api.github.com/users/murarth", "html_url": "https://github.com/murarth", "followers_url": "https://api.github.com/users/murarth/followers", "following_url": "https://api.github.com/users/murarth/following{/other_user}", "gists_url": "https://api.github.com/users/murarth/gists{/gist_id}", "starred_url": "https://api.github.com/users/murarth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/murarth/subscriptions", "organizations_url": "https://api.github.com/users/murarth/orgs", "repos_url": "https://api.github.com/users/murarth/repos", "events_url": "https://api.github.com/users/murarth/events{/privacy}", "received_events_url": "https://api.github.com/users/murarth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "murarth", "id": 1332722, "node_id": "MDQ6VXNlcjEzMzI3MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/1332722?v=4", "gravatar_id": "", "url": "https://api.github.com/users/murarth", "html_url": "https://github.com/murarth", "followers_url": "https://api.github.com/users/murarth/followers", "following_url": "https://api.github.com/users/murarth/following{/other_user}", "gists_url": "https://api.github.com/users/murarth/gists{/gist_id}", "starred_url": "https://api.github.com/users/murarth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/murarth/subscriptions", "organizations_url": "https://api.github.com/users/murarth/orgs", "repos_url": "https://api.github.com/users/murarth/repos", "events_url": "https://api.github.com/users/murarth/events{/privacy}", "received_events_url": "https://api.github.com/users/murarth/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c637cab85323c97be37d0c12bfa0fc0e9ea2c367", "url": "https://api.github.com/repos/rust-lang/rust/commits/c637cab85323c97be37d0c12bfa0fc0e9ea2c367", "html_url": "https://github.com/rust-lang/rust/commit/c637cab85323c97be37d0c12bfa0fc0e9ea2c367"}], "stats": {"total": 11, "additions": 9, "deletions": 2}, "files": [{"sha": "a697d332d16afebb09fa8b9d91954ba7471fb24d", "filename": "src/libsyntax/ext/expand.rs", "status": "modified", "additions": 9, "deletions": 2, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/a95c71e0ac3dc97468d7432d5011fbb413ba9263/src%2Flibsyntax%2Fext%2Fexpand.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a95c71e0ac3dc97468d7432d5011fbb413ba9263/src%2Flibsyntax%2Fext%2Fexpand.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Fexpand.rs?ref=a95c71e0ac3dc97468d7432d5011fbb413ba9263", "patch": "@@ -412,12 +412,19 @@ pub fn expand_item(it: P<ast::Item>, fld: &mut MacroExpander)\n     let mut new_items = match it.node {\n         ast::ItemMac(..) => expand_item_mac(it, fld),\n         ast::ItemMod(_) | ast::ItemForeignMod(_) => {\n-            fld.cx.mod_push(it.ident);\n+            let valid_ident =\n+                it.ident.name != parse::token::special_idents::invalid.name;\n+\n+            if valid_ident {\n+                fld.cx.mod_push(it.ident);\n+            }\n             let macro_escape = contains_macro_escape(new_attrs.as_slice());\n             let result = with_exts_frame!(fld.cx.syntax_env,\n                                           macro_escape,\n                                           noop_fold_item(it, fld));\n-            fld.cx.mod_pop();\n+            if valid_ident {\n+                fld.cx.mod_pop();\n+            }\n             result\n         },\n         _ => {"}]}