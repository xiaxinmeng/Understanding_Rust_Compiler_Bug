{"sha": "f108fce21cd025ead58ced8c21a8156fe339e26f", "node_id": "MDY6Q29tbWl0NzI0NzEyOmYxMDhmY2UyMWNkMDI1ZWFkNThjZWQ4YzIxYTgxNTZmZTMzOWUyNmY=", "commit": {"author": {"name": "Chris Wong", "email": "lambda.fairy@gmail.com", "date": "2017-10-08T08:42:33Z"}, "committer": {"name": "Chris Wong", "email": "lambda.fairy@gmail.com", "date": "2017-10-08T08:44:13Z"}, "message": "Make the result of `Literal::string()` more readable\n\nCloses #45076", "tree": {"sha": "757bcba6214099c4dff34f19f6415e4102f2f3c1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/757bcba6214099c4dff34f19f6415e4102f2f3c1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f108fce21cd025ead58ced8c21a8156fe339e26f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f108fce21cd025ead58ced8c21a8156fe339e26f", "html_url": "https://github.com/rust-lang/rust/commit/f108fce21cd025ead58ced8c21a8156fe339e26f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f108fce21cd025ead58ced8c21a8156fe339e26f/comments", "author": {"login": "lambda-fairy", "id": 1572323, "node_id": "MDQ6VXNlcjE1NzIzMjM=", "avatar_url": "https://avatars.githubusercontent.com/u/1572323?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lambda-fairy", "html_url": "https://github.com/lambda-fairy", "followers_url": "https://api.github.com/users/lambda-fairy/followers", "following_url": "https://api.github.com/users/lambda-fairy/following{/other_user}", "gists_url": "https://api.github.com/users/lambda-fairy/gists{/gist_id}", "starred_url": "https://api.github.com/users/lambda-fairy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lambda-fairy/subscriptions", "organizations_url": "https://api.github.com/users/lambda-fairy/orgs", "repos_url": "https://api.github.com/users/lambda-fairy/repos", "events_url": "https://api.github.com/users/lambda-fairy/events{/privacy}", "received_events_url": "https://api.github.com/users/lambda-fairy/received_events", "type": "User", "site_admin": false}, "committer": {"login": "lambda-fairy", "id": 1572323, "node_id": "MDQ6VXNlcjE1NzIzMjM=", "avatar_url": "https://avatars.githubusercontent.com/u/1572323?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lambda-fairy", "html_url": "https://github.com/lambda-fairy", "followers_url": "https://api.github.com/users/lambda-fairy/followers", "following_url": "https://api.github.com/users/lambda-fairy/following{/other_user}", "gists_url": "https://api.github.com/users/lambda-fairy/gists{/gist_id}", "starred_url": "https://api.github.com/users/lambda-fairy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lambda-fairy/subscriptions", "organizations_url": "https://api.github.com/users/lambda-fairy/orgs", "repos_url": "https://api.github.com/users/lambda-fairy/repos", "events_url": "https://api.github.com/users/lambda-fairy/events{/privacy}", "received_events_url": "https://api.github.com/users/lambda-fairy/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ac76206be4e257ee901983ac67e33ca2842b4f01", "url": "https://api.github.com/repos/rust-lang/rust/commits/ac76206be4e257ee901983ac67e33ca2842b4f01", "html_url": "https://github.com/rust-lang/rust/commit/ac76206be4e257ee901983ac67e33ca2842b4f01"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "cf30966fa89715c2ff695069b5ca9f00321df21f", "filename": "src/libproc_macro/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f108fce21cd025ead58ced8c21a8156fe339e26f/src%2Flibproc_macro%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f108fce21cd025ead58ced8c21a8156fe339e26f/src%2Flibproc_macro%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibproc_macro%2Flib.rs?ref=f108fce21cd025ead58ced8c21a8156fe339e26f", "patch": "@@ -488,7 +488,7 @@ impl Literal {\n     pub fn string(string: &str) -> Literal {\n         let mut escaped = String::new();\n         for ch in string.chars() {\n-            escaped.extend(ch.escape_unicode());\n+            escaped.extend(ch.escape_debug());\n         }\n         Literal(token::Literal(token::Lit::Str_(Symbol::intern(&escaped)), None))\n     }"}]}