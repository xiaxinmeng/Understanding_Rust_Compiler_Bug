{"sha": "47c84c4234a6e3ee24888bd94daeec13df7dd20d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ3Yzg0YzQyMzRhNmUzZWUyNDg4OGJkOTRkYWVlYzEzZGY3ZGQyMGQ=", "commit": {"author": {"name": "Eduard-Mihai Burtescu", "email": "edy.burt@gmail.com", "date": "2018-11-16T11:37:55Z"}, "committer": {"name": "Eduard-Mihai Burtescu", "email": "edy.burt@gmail.com", "date": "2018-11-16T13:08:18Z"}, "message": "[eddyb] rustc_codegen_llvm: remove unnecessary `'a` from `LlvmCodegenBackend` impls.", "tree": {"sha": "3ee09885f032d159268da5964e1d6969c4925e31", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3ee09885f032d159268da5964e1d6969c4925e31"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/47c84c4234a6e3ee24888bd94daeec13df7dd20d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/47c84c4234a6e3ee24888bd94daeec13df7dd20d", "html_url": "https://github.com/rust-lang/rust/commit/47c84c4234a6e3ee24888bd94daeec13df7dd20d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/47c84c4234a6e3ee24888bd94daeec13df7dd20d/comments", "author": {"login": "eddyb", "id": 77424, "node_id": "MDQ6VXNlcjc3NDI0", "avatar_url": "https://avatars.githubusercontent.com/u/77424?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eddyb", "html_url": "https://github.com/eddyb", "followers_url": "https://api.github.com/users/eddyb/followers", "following_url": "https://api.github.com/users/eddyb/following{/other_user}", "gists_url": "https://api.github.com/users/eddyb/gists{/gist_id}", "starred_url": "https://api.github.com/users/eddyb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eddyb/subscriptions", "organizations_url": "https://api.github.com/users/eddyb/orgs", "repos_url": "https://api.github.com/users/eddyb/repos", "events_url": "https://api.github.com/users/eddyb/events{/privacy}", "received_events_url": "https://api.github.com/users/eddyb/received_events", "type": "User", "site_admin": false}, "committer": {"login": "eddyb", "id": 77424, "node_id": "MDQ6VXNlcjc3NDI0", "avatar_url": "https://avatars.githubusercontent.com/u/77424?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eddyb", "html_url": "https://github.com/eddyb", "followers_url": "https://api.github.com/users/eddyb/followers", "following_url": "https://api.github.com/users/eddyb/following{/other_user}", "gists_url": "https://api.github.com/users/eddyb/gists{/gist_id}", "starred_url": "https://api.github.com/users/eddyb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eddyb/subscriptions", "organizations_url": "https://api.github.com/users/eddyb/orgs", "repos_url": "https://api.github.com/users/eddyb/repos", "events_url": "https://api.github.com/users/eddyb/events{/privacy}", "received_events_url": "https://api.github.com/users/eddyb/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9f49a2626e335a83351317bcdae09fda3d42e4cf", "url": "https://api.github.com/repos/rust-lang/rust/commits/9f49a2626e335a83351317bcdae09fda3d42e4cf", "html_url": "https://github.com/rust-lang/rust/commit/9f49a2626e335a83351317bcdae09fda3d42e4cf"}], "stats": {"total": 6, "additions": 3, "deletions": 3}, "files": [{"sha": "29bc3becd7e0d08e25eec7950538914e02711964", "filename": "src/librustc_codegen_llvm/lib.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/47c84c4234a6e3ee24888bd94daeec13df7dd20d/src%2Flibrustc_codegen_llvm%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/47c84c4234a6e3ee24888bd94daeec13df7dd20d/src%2Flibrustc_codegen_llvm%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_llvm%2Flib.rs?ref=47c84c4234a6e3ee24888bd94daeec13df7dd20d", "patch": "@@ -229,16 +229,16 @@ impl WriteBackendMethods for LlvmCodegenBackend {\n     }\n }\n \n-unsafe impl<'a> Send for LlvmCodegenBackend {} // Llvm is on a per-thread basis\n-unsafe impl<'a> Sync for LlvmCodegenBackend {}\n+unsafe impl Send for LlvmCodegenBackend {} // Llvm is on a per-thread basis\n+unsafe impl Sync for LlvmCodegenBackend {}\n \n impl LlvmCodegenBackend {\n     pub fn new() -> Box<dyn CodegenBackend> {\n         box LlvmCodegenBackend(())\n     }\n }\n \n-impl<'a> CodegenBackend for LlvmCodegenBackend {\n+impl CodegenBackend for LlvmCodegenBackend {\n     fn init(&self, sess: &Session) {\n         llvm_util::init(sess); // Make sure llvm is inited\n     }"}]}