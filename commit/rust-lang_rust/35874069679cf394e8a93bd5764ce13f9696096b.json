{"sha": "35874069679cf394e8a93bd5764ce13f9696096b", "node_id": "C_kwDOAAsO6NoAKDM1ODc0MDY5Njc5Y2YzOTRlOGE5M2JkNTc2NGNlMTNmOTY5NjA5NmI", "commit": {"author": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2022-04-24T02:44:25Z"}, "committer": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2022-04-24T02:51:11Z"}, "message": "Better handle too many `#` recovery in raw str\n\nPoint at all the unnecessary trailing `#`.\nBetter handle interaction with outer attributes when `;` is missing.\n\nFix #95030.", "tree": {"sha": "bdfe89e44fe7160daac1b8fce7d357ea09a3bc43", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bdfe89e44fe7160daac1b8fce7d357ea09a3bc43"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/35874069679cf394e8a93bd5764ce13f9696096b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/35874069679cf394e8a93bd5764ce13f9696096b", "html_url": "https://github.com/rust-lang/rust/commit/35874069679cf394e8a93bd5764ce13f9696096b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/35874069679cf394e8a93bd5764ce13f9696096b/comments", "author": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "committer": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1e9aa8a96b207668799365bf891a459b62410b60", "url": "https://api.github.com/repos/rust-lang/rust/commits/1e9aa8a96b207668799365bf891a459b62410b60", "html_url": "https://github.com/rust-lang/rust/commit/1e9aa8a96b207668799365bf891a459b62410b60"}], "stats": {"total": 99, "additions": 84, "deletions": 15}, "files": [{"sha": "acc0d7a6ee05efd86769c227f4e167aa887f9082", "filename": "compiler/rustc_parse/src/parser/diagnostics.rs", "status": "modified", "additions": 34, "deletions": 9, "changes": 43, "blob_url": "https://github.com/rust-lang/rust/blob/35874069679cf394e8a93bd5764ce13f9696096b/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/35874069679cf394e8a93bd5764ce13f9696096b/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fdiagnostics.rs?ref=35874069679cf394e8a93bd5764ce13f9696096b", "patch": "@@ -431,10 +431,11 @@ impl<'a> Parser<'a> {\n                 return Ok(true);\n             } else if self.look_ahead(0, |t| {\n                 t == &token::CloseDelim(token::Brace)\n-                    || (\n-                        t.can_begin_expr() && t != &token::Semi && t != &token::Pound\n-                        // Avoid triggering with too many trailing `#` in raw string.\n-                    )\n+                    || (t.can_begin_expr() && t != &token::Semi && t != &token::Pound)\n+                    // Avoid triggering with too many trailing `#` in raw string.\n+                    || (sm.is_multiline(\n+                        self.prev_token.span.shrink_to_hi().until(self.token.span.shrink_to_lo())\n+                    ) && t == &token::Pound)\n             }) {\n                 // Missing semicolon typo. This is triggered if the next token could either start a\n                 // new statement or is a block close. For example:\n@@ -508,7 +509,12 @@ impl<'a> Parser<'a> {\n         }\n \n         if self.check_too_many_raw_str_terminators(&mut err) {\n-            return Err(err);\n+            if expected.contains(&TokenType::Token(token::Semi)) && self.eat(&token::Semi) {\n+                err.emit();\n+                return Ok(true);\n+            } else {\n+                return Err(err);\n+            }\n         }\n \n         if self.prev_token.span == DUMMY_SP {\n@@ -538,22 +544,41 @@ impl<'a> Parser<'a> {\n     }\n \n     fn check_too_many_raw_str_terminators(&mut self, err: &mut Diagnostic) -> bool {\n+        let sm = self.sess.source_map();\n         match (&self.prev_token.kind, &self.token.kind) {\n             (\n                 TokenKind::Literal(Lit {\n                     kind: LitKind::StrRaw(n_hashes) | LitKind::ByteStrRaw(n_hashes),\n                     ..\n                 }),\n                 TokenKind::Pound,\n-            ) => {\n+            ) if !sm.is_multiline(\n+                self.prev_token.span.shrink_to_hi().until(self.token.span.shrink_to_lo()),\n+            ) =>\n+            {\n+                let n_hashes: u8 = *n_hashes;\n                 err.set_primary_message(\"too many `#` when terminating raw string\");\n+                let str_span = self.prev_token.span;\n+                let mut span = self.token.span;\n+                let mut count = 0;\n+                while self.token.kind == TokenKind::Pound\n+                    && !sm.is_multiline(span.shrink_to_hi().until(self.token.span.shrink_to_lo()))\n+                {\n+                    span = span.with_hi(self.token.span.hi());\n+                    self.bump();\n+                    count += 1;\n+                }\n+                err.set_span(span);\n                 err.span_suggestion(\n-                    self.token.span,\n-                    \"remove the extra `#`\",\n+                    span,\n+                    &format!(\"remove the extra `#`{}\", pluralize!(count)),\n                     String::new(),\n                     Applicability::MachineApplicable,\n                 );\n-                err.note(&format!(\"the raw string started with {n_hashes} `#`s\"));\n+                err.span_label(\n+                    str_span,\n+                    &format!(\"this raw string started with {n_hashes} `#`{}\", pluralize!(n_hashes)),\n+                );\n                 true\n             }\n             _ => false,"}, {"sha": "38537f8b31e64e1bd392faa7b63c81bb83c8a6ad", "filename": "src/test/ui/parser/raw/raw-str-unbalanced.rs", "status": "modified", "additions": 19, "deletions": 1, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/35874069679cf394e8a93bd5764ce13f9696096b/src%2Ftest%2Fui%2Fparser%2Fraw%2Fraw-str-unbalanced.rs", "raw_url": "https://github.com/rust-lang/rust/raw/35874069679cf394e8a93bd5764ce13f9696096b/src%2Ftest%2Fui%2Fparser%2Fraw%2Fraw-str-unbalanced.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fraw%2Fraw-str-unbalanced.rs?ref=35874069679cf394e8a93bd5764ce13f9696096b", "patch": "@@ -1,4 +1,22 @@\n static s: &'static str =\n+    r#\"\"## //~ ERROR too many `#` when terminating raw string\n+;\n+\n+static s2: &'static str =\n     r#\"\n-      \"## //~ too many `#` when terminating raw string\n+      \"#### //~ ERROR too many `#` when terminating raw string\n ;\n+\n+const A: &'static str = r\"\" //~ ERROR expected `;`, found `#`\n+\n+// Test\n+#[test]\n+fn test() {}\n+\n+const B: &'static str = r\"\"## //~ ERROR too many `#` when terminating raw string\n+\n+// Test\n+#[test]\n+fn test2() {}\n+\n+fn main() {}"}, {"sha": "eac8c06c1df5cad02fecadddb6ade773a060d3a9", "filename": "src/test/ui/parser/raw/raw-str-unbalanced.stderr", "status": "modified", "additions": 31, "deletions": 5, "changes": 36, "blob_url": "https://github.com/rust-lang/rust/blob/35874069679cf394e8a93bd5764ce13f9696096b/src%2Ftest%2Fui%2Fparser%2Fraw%2Fraw-str-unbalanced.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/35874069679cf394e8a93bd5764ce13f9696096b/src%2Ftest%2Fui%2Fparser%2Fraw%2Fraw-str-unbalanced.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fraw%2Fraw-str-unbalanced.stderr?ref=35874069679cf394e8a93bd5764ce13f9696096b", "patch": "@@ -1,10 +1,36 @@\n error: too many `#` when terminating raw string\n-  --> $DIR/raw-str-unbalanced.rs:3:9\n+  --> $DIR/raw-str-unbalanced.rs:2:10\n    |\n-LL |       \"##\n-   |         ^ help: remove the extra `#`\n+LL |     r#\"\"##\n+   |     -----^ help: remove the extra `#`\n+   |     |\n+   |     this raw string started with 1 `#`\n+\n+error: too many `#` when terminating raw string\n+  --> $DIR/raw-str-unbalanced.rs:7:9\n+   |\n+LL | /     r#\"\n+LL | |       \"####\n+   | |        -^^^ help: remove the extra `#`s\n+   | |________|\n+   |          this raw string started with 1 `#`\n+\n+error: expected `;`, found `#`\n+  --> $DIR/raw-str-unbalanced.rs:10:28\n+   |\n+LL | const A: &'static str = r\"\"\n+   |                            ^ help: add `;` here\n+...\n+LL | #[test]\n+   | - unexpected token\n+\n+error: too many `#` when terminating raw string\n+  --> $DIR/raw-str-unbalanced.rs:16:28\n    |\n-   = note: the raw string started with 1 `#`s\n+LL | const B: &'static str = r\"\"##\n+   |                         ---^^ help: remove the extra `#`s\n+   |                         |\n+   |                         this raw string started with 0 `#`s\n \n-error: aborting due to previous error\n+error: aborting due to 4 previous errors\n "}]}