{"sha": "205b483edd713b88b8fb23305fb81dc6d7b52ce5", "node_id": "MDY6Q29tbWl0NzI0NzEyOjIwNWI0ODNlZGQ3MTNiODhiOGZiMjMzMDVmYjgxZGM2ZDdiNTJjZTU=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-07-07T22:09:54Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-07-07T22:09:54Z"}, "message": "tutorial: Discuss failure and asserts together", "tree": {"sha": "3544bdfb17c9fe921414eaa546b47fe041e5fa1f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3544bdfb17c9fe921414eaa546b47fe041e5fa1f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/205b483edd713b88b8fb23305fb81dc6d7b52ce5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/205b483edd713b88b8fb23305fb81dc6d7b52ce5", "html_url": "https://github.com/rust-lang/rust/commit/205b483edd713b88b8fb23305fb81dc6d7b52ce5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/205b483edd713b88b8fb23305fb81dc6d7b52ce5/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "59355e99ca6e6124dac22cb1700b7a5320984cb8", "url": "https://api.github.com/repos/rust-lang/rust/commits/59355e99ca6e6124dac22cb1700b7a5320984cb8", "html_url": "https://github.com/rust-lang/rust/commit/59355e99ca6e6124dac22cb1700b7a5320984cb8"}], "stats": {"total": 30, "additions": 15, "deletions": 15}, "files": [{"sha": "601a5c336ffe4eff730185c71472adee4126b644", "filename": "doc/tutorial.md", "status": "modified", "additions": 15, "deletions": 15, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/205b483edd713b88b8fb23305fb81dc6d7b52ce5/doc%2Ftutorial.md", "raw_url": "https://github.com/rust-lang/rust/raw/205b483edd713b88b8fb23305fb81dc6d7b52ce5/doc%2Ftutorial.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/doc%2Ftutorial.md?ref=205b483edd713b88b8fb23305fb81dc6d7b52ce5", "patch": "@@ -819,6 +819,21 @@ handle the failure, allowing the program to continue running.\n to access a vector out of bounds, or running a pattern match with no\n matching clauses, both result in the equivalent of a `fail`.\n \n+## Assertions\n+\n+The keyword `assert`, followed by an expression with boolean type,\n+will check that the given expression results in `true`, and cause a\n+failure otherwise. It is typically used to double-check things that\n+*should* hold at a certain point in a program. `assert` statements are\n+always active; there is no way to build Rust code with assertions\n+disabled.\n+\n+~~~~\n+let mut x = 100;\n+while (x > 10) { x -= 10; }\n+assert x == 10;\n+~~~~\n+\n ## Logging\n \n Rust has a built-in logging mechanism, using the `log` statement.\n@@ -861,21 +876,6 @@ and will log the formatted string:\n Because the macros `#debug`, `#warn`, and `#error` expand to calls to `log`,\n their arguments are also lazily evaluated.\n \n-## Assertions\n-\n-The keyword `assert`, followed by an expression with boolean type,\n-will check that the given expression results in `true`, and cause a\n-failure otherwise. It is typically used to double-check things that\n-*should* hold at a certain point in a program. `assert` statements are\n-always active; there is no way to build Rust code with assertions\n-disabled.\n-\n-~~~~\n-let mut x = 100;\n-while (x > 10) { x -= 10; }\n-assert x == 10;\n-~~~~\n-\n # Functions\n \n Like all other static declarations, such as `type`, functions can be"}]}