{"sha": "b56b175c6c3d77f66793b2062b6325f822c87136", "node_id": "MDY6Q29tbWl0NzI0NzEyOmI1NmIxNzVjNmMzZDc3ZjY2NzkzYjIwNjJiNjMyNWY4MjJjODcxMzY=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-04-24T23:16:03Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-04-24T23:16:03Z"}, "message": "Auto merge of #84310 - RalfJung:const-fn-feature-flags, r=oli-obk\n\nfurther split up const_fn feature flag\n\nThis continues the work on splitting up `const_fn` into separate feature flags:\n* `const_fn_trait_bound` for `const fn` with trait bounds\n* `const_fn_unsize` for unsizing coercions in `const fn` (looks like only `dyn` unsizing is still guarded here)\n\nI don't know if there are even any things left that `const_fn` guards... at least libcore and liballoc do not need it any more.\n\n`@oli-obk` are you currently able to do reviews?", "tree": {"sha": "330de8b31a7fff50d3d8a253decc30cd3f4977c9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/330de8b31a7fff50d3d8a253decc30cd3f4977c9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b56b175c6c3d77f66793b2062b6325f822c87136", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b56b175c6c3d77f66793b2062b6325f822c87136", "html_url": "https://github.com/rust-lang/rust/commit/b56b175c6c3d77f66793b2062b6325f822c87136", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b56b175c6c3d77f66793b2062b6325f822c87136/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "42816d61ead7e46d462df997958ccfd514f8c21c", "url": "https://api.github.com/repos/rust-lang/rust/commits/42816d61ead7e46d462df997958ccfd514f8c21c", "html_url": "https://github.com/rust-lang/rust/commit/42816d61ead7e46d462df997958ccfd514f8c21c"}, {"sha": "49054c3617bb04ba4f108ab7a5fbe6cda74bcbd3", "url": "https://api.github.com/repos/rust-lang/rust/commits/49054c3617bb04ba4f108ab7a5fbe6cda74bcbd3", "html_url": "https://github.com/rust-lang/rust/commit/49054c3617bb04ba4f108ab7a5fbe6cda74bcbd3"}], "stats": {"total": 290, "additions": 176, "deletions": 114}, "files": [{"sha": "ffec28a395fdb15fdc6131d8b462df5e9f4e6ce9", "filename": "compiler/rustc_ast/src/lib.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/b56b175c6c3d77f66793b2062b6325f822c87136/compiler%2Frustc_ast%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b56b175c6c3d77f66793b2062b6325f822c87136/compiler%2Frustc_ast%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_ast%2Fsrc%2Flib.rs?ref=b56b175c6c3d77f66793b2062b6325f822c87136", "patch": "@@ -10,7 +10,8 @@\n )]\n #![feature(box_syntax)]\n #![feature(box_patterns)]\n-#![feature(const_fn)] // For the `transmute` in `P::new`\n+#![cfg_attr(bootstrap, feature(const_fn))] // For the `transmute` in `P::new`\n+#![cfg_attr(not(bootstrap), feature(const_fn_unsize))] // For the `transmute` in `P::new`\n #![feature(const_fn_transmute)]\n #![feature(const_panic)]\n #![feature(crate_visibility_modifier)]"}, {"sha": "41a1fa488d31b1e16091662f922b3512d207028d", "filename": "compiler/rustc_error_codes/src/error_codes.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b56b175c6c3d77f66793b2062b6325f822c87136/compiler%2Frustc_error_codes%2Fsrc%2Ferror_codes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b56b175c6c3d77f66793b2062b6325f822c87136/compiler%2Frustc_error_codes%2Fsrc%2Ferror_codes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_error_codes%2Fsrc%2Ferror_codes.rs?ref=b56b175c6c3d77f66793b2062b6325f822c87136", "patch": "@@ -416,7 +416,6 @@ E0716: include_str!(\"./error_codes/E0716.md\"),\n E0718: include_str!(\"./error_codes/E0718.md\"),\n E0719: include_str!(\"./error_codes/E0719.md\"),\n E0720: include_str!(\"./error_codes/E0720.md\"),\n-E0723: include_str!(\"./error_codes/E0723.md\"),\n E0724: include_str!(\"./error_codes/E0724.md\"),\n E0725: include_str!(\"./error_codes/E0725.md\"),\n E0727: include_str!(\"./error_codes/E0727.md\"),\n@@ -636,6 +635,7 @@ E0781: include_str!(\"./error_codes/E0781.md\"),\n     E0717, // rustc_promotable without stability attribute\n //  E0721, // `await` keyword\n     E0722, // Malformed `#[optimize]` attribute\n+//    E0723, unstable feature in `const` context\n     E0726, // non-explicit (not `'_`) elided lifetime in unsupported position\n //  E0738, // Removed; errored on `#[track_caller] fn`s in `extern \"Rust\" { ... }`.\n     E0757, // `#[ffi_const]` functions cannot be `#[ffi_pure]`"}, {"sha": "bc2244219156cae0f4c725b39a23f21d93448365", "filename": "compiler/rustc_error_codes/src/error_codes/E0723.md", "status": "removed", "additions": 0, "deletions": 20, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/42816d61ead7e46d462df997958ccfd514f8c21c/compiler%2Frustc_error_codes%2Fsrc%2Ferror_codes%2FE0723.md", "raw_url": "https://github.com/rust-lang/rust/raw/42816d61ead7e46d462df997958ccfd514f8c21c/compiler%2Frustc_error_codes%2Fsrc%2Ferror_codes%2FE0723.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_error_codes%2Fsrc%2Ferror_codes%2FE0723.md?ref=42816d61ead7e46d462df997958ccfd514f8c21c", "patch": "@@ -1,20 +0,0 @@\n-An unstable feature in `const` contexts was used.\n-\n-Erroneous code example:\n-\n-```compile_fail,E0723\n-const fn foo<T: Copy>(_: T) { // error!\n-   // ...\n-}\n-```\n-\n-To enable this feature on a nightly version of rustc, add the `const_fn`\n-feature flag:\n-\n-```\n-#![feature(const_fn)]\n-\n-const fn foo<T: Copy>(_: T) { // ok!\n-   // ...\n-}\n-```"}, {"sha": "72babb7aec171f17752a8cda1c18f88f063c1d56", "filename": "compiler/rustc_feature/src/active.rs", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/b56b175c6c3d77f66793b2062b6325f822c87136/compiler%2Frustc_feature%2Fsrc%2Factive.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b56b175c6c3d77f66793b2062b6325f822c87136/compiler%2Frustc_feature%2Fsrc%2Factive.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_feature%2Fsrc%2Factive.rs?ref=b56b175c6c3d77f66793b2062b6325f822c87136", "patch": "@@ -645,6 +645,12 @@ declare_features! (\n     /// Allows `extern \"wasm\" fn`\n     (active, wasm_abi, \"1.53.0\", Some(83788), None),\n \n+    /// Allows trait bounds in `const fn`.\n+    (active, const_fn_trait_bound, \"1.53.0\", Some(57563), None),\n+\n+    /// Allows unsizing coercions in `const fn`.\n+    (active, const_fn_unsize, \"1.53.0\", Some(64992), None),\n+\n     // -------------------------------------------------------------------------\n     // feature-group-end: actual feature gates\n     // -------------------------------------------------------------------------"}, {"sha": "65c99535c4e3474e830c6b20f45dddfbea45437b", "filename": "compiler/rustc_hir/src/lib.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/b56b175c6c3d77f66793b2062b6325f822c87136/compiler%2Frustc_hir%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b56b175c6c3d77f66793b2062b6325f822c87136/compiler%2Frustc_hir%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_hir%2Fsrc%2Flib.rs?ref=b56b175c6c3d77f66793b2062b6325f822c87136", "patch": "@@ -3,7 +3,6 @@\n //! [rustc dev guide]: https://rustc-dev-guide.rust-lang.org/hir.html\n \n #![feature(crate_visibility_modifier)]\n-#![feature(const_fn)] // For the unsizing cast on `&[]`\n #![feature(const_panic)]\n #![feature(extended_key_value_attributes)]\n #![feature(in_band_lifetimes)]"}, {"sha": "9c306d02512007b4b94f4845d1d3475e5c90fe59", "filename": "compiler/rustc_index/src/lib.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/b56b175c6c3d77f66793b2062b6325f822c87136/compiler%2Frustc_index%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b56b175c6c3d77f66793b2062b6325f822c87136/compiler%2Frustc_index%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_index%2Fsrc%2Flib.rs?ref=b56b175c6c3d77f66793b2062b6325f822c87136", "patch": "@@ -1,5 +1,4 @@\n #![feature(allow_internal_unstable)]\n-#![feature(const_fn)]\n #![feature(const_panic)]\n #![feature(extend_one)]\n #![feature(iter_zip)]"}, {"sha": "15b4a7ed2071784eef55ce060f6f8bfd4f39470e", "filename": "compiler/rustc_infer/src/lib.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/b56b175c6c3d77f66793b2062b6325f822c87136/compiler%2Frustc_infer%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b56b175c6c3d77f66793b2062b6325f822c87136/compiler%2Frustc_infer%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_infer%2Fsrc%2Flib.rs?ref=b56b175c6c3d77f66793b2062b6325f822c87136", "patch": "@@ -16,7 +16,6 @@\n #![feature(bool_to_option)]\n #![feature(box_patterns)]\n #![feature(box_syntax)]\n-#![feature(const_fn)]\n #![feature(const_panic)]\n #![feature(extend_one)]\n #![feature(iter_zip)]"}, {"sha": "45ea07a3db6b607960edcba5f96514cbc0d964de", "filename": "compiler/rustc_middle/src/lib.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/b56b175c6c3d77f66793b2062b6325f822c87136/compiler%2Frustc_middle%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b56b175c6c3d77f66793b2062b6325f822c87136/compiler%2Frustc_middle%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Flib.rs?ref=b56b175c6c3d77f66793b2062b6325f822c87136", "patch": "@@ -29,7 +29,6 @@\n #![feature(bool_to_option)]\n #![feature(box_patterns)]\n #![feature(box_syntax)]\n-#![feature(const_fn)]\n #![feature(const_panic)]\n #![feature(core_intrinsics)]\n #![feature(discriminant_kind)]"}, {"sha": "783aa9465c395a82870c83698de366e1042a2673", "filename": "compiler/rustc_mir/src/lib.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/b56b175c6c3d77f66793b2062b6325f822c87136/compiler%2Frustc_mir%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b56b175c6c3d77f66793b2062b6325f822c87136/compiler%2Frustc_mir%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir%2Fsrc%2Flib.rs?ref=b56b175c6c3d77f66793b2062b6325f822c87136", "patch": "@@ -12,7 +12,6 @@ Rust MIR: a lowered representation of Rust.\n #![feature(bool_to_option)]\n #![feature(box_patterns)]\n #![feature(box_syntax)]\n-#![feature(const_fn)]\n #![feature(const_panic)]\n #![feature(crate_visibility_modifier)]\n #![feature(decl_macro)]"}, {"sha": "ffeaaf60a30cf36596fac6c03ed3b60ff387972a", "filename": "compiler/rustc_mir/src/transform/check_consts/ops.rs", "status": "modified", "additions": 16, "deletions": 24, "changes": 40, "blob_url": "https://github.com/rust-lang/rust/blob/b56b175c6c3d77f66793b2062b6325f822c87136/compiler%2Frustc_mir%2Fsrc%2Ftransform%2Fcheck_consts%2Fops.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b56b175c6c3d77f66793b2062b6325f822c87136/compiler%2Frustc_mir%2Fsrc%2Ftransform%2Fcheck_consts%2Fops.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir%2Fsrc%2Ftransform%2Fcheck_consts%2Fops.rs?ref=b56b175c6c3d77f66793b2062b6325f822c87136", "patch": "@@ -540,12 +540,17 @@ impl NonConstOp for UnionAccess {\n pub struct UnsizingCast;\n impl NonConstOp for UnsizingCast {\n     fn status_in_item(&self, ccx: &ConstCx<'_, '_>) -> Status {\n-        mcf_status_in_item(ccx)\n+        if ccx.const_kind() != hir::ConstContext::ConstFn {\n+            Status::Allowed\n+        } else {\n+            Status::Unstable(sym::const_fn_unsize)\n+        }\n     }\n \n     fn build_error(&self, ccx: &ConstCx<'_, 'tcx>, span: Span) -> DiagnosticBuilder<'tcx> {\n-        mcf_build_error(\n-            ccx,\n+        feature_err(\n+            &ccx.tcx.sess.parse_sess,\n+            sym::const_fn_unsize,\n             span,\n             \"unsizing casts to types besides slices are not allowed in const fn\",\n         )\n@@ -642,12 +647,17 @@ pub mod ty {\n         }\n \n         fn status_in_item(&self, ccx: &ConstCx<'_, '_>) -> Status {\n-            mcf_status_in_item(ccx)\n+            if ccx.const_kind() != hir::ConstContext::ConstFn {\n+                Status::Allowed\n+            } else {\n+                Status::Unstable(sym::const_fn_trait_bound)\n+            }\n         }\n \n         fn build_error(&self, ccx: &ConstCx<'_, 'tcx>, span: Span) -> DiagnosticBuilder<'tcx> {\n-            mcf_build_error(\n-                ccx,\n+            feature_err(\n+                &ccx.tcx.sess.parse_sess,\n+                sym::const_fn_trait_bound,\n                 span,\n                 \"trait bounds other than `Sized` on const fn parameters are unstable\",\n             )\n@@ -672,21 +682,3 @@ pub mod ty {\n         }\n     }\n }\n-\n-fn mcf_status_in_item(ccx: &ConstCx<'_, '_>) -> Status {\n-    if ccx.const_kind() != hir::ConstContext::ConstFn {\n-        Status::Allowed\n-    } else {\n-        Status::Unstable(sym::const_fn)\n-    }\n-}\n-\n-fn mcf_build_error(ccx: &ConstCx<'_, 'tcx>, span: Span, msg: &str) -> DiagnosticBuilder<'tcx> {\n-    let mut err = struct_span_err!(ccx.tcx.sess, span, E0723, \"{}\", msg);\n-    err.note(\n-        \"see issue #57563 <https://github.com/rust-lang/rust/issues/57563> \\\n-             for more information\",\n-    );\n-    err.help(\"add `#![feature(const_fn)]` to the crate attributes to enable\");\n-    err\n-}"}, {"sha": "cf7d404a077896ea711fae6128ed91097c900269", "filename": "compiler/rustc_mir/src/transform/check_consts/validation.rs", "status": "modified", "additions": 6, "deletions": 8, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/b56b175c6c3d77f66793b2062b6325f822c87136/compiler%2Frustc_mir%2Fsrc%2Ftransform%2Fcheck_consts%2Fvalidation.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b56b175c6c3d77f66793b2062b6325f822c87136/compiler%2Frustc_mir%2Fsrc%2Ftransform%2Fcheck_consts%2Fvalidation.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir%2Fsrc%2Ftransform%2Fcheck_consts%2Fvalidation.rs?ref=b56b175c6c3d77f66793b2062b6325f822c87136", "patch": "@@ -1,6 +1,6 @@\n //! The `Visitor` responsible for actually checking a `mir::Body` for invalid operations.\n \n-use rustc_errors::{struct_span_err, Applicability, Diagnostic, ErrorReported};\n+use rustc_errors::{Applicability, Diagnostic, ErrorReported};\n use rustc_hir::def_id::DefId;\n use rustc_hir::{self as hir, HirId, LangItem};\n use rustc_index::bit_set::BitSet;\n@@ -234,13 +234,11 @@ impl Validator<'mir, 'tcx> {\n             if self.is_const_stable_const_fn() {\n                 let hir_id = tcx.hir().local_def_id_to_hir_id(def_id);\n                 if crate::const_eval::is_parent_const_impl_raw(tcx, hir_id) {\n-                    struct_span_err!(\n-                        self.ccx.tcx.sess,\n-                        self.span,\n-                        E0723,\n-                        \"trait methods cannot be stable const fn\"\n-                    )\n-                    .emit();\n+                    self.ccx\n+                        .tcx\n+                        .sess\n+                        .struct_span_err(self.span, \"trait methods cannot be stable const fn\")\n+                        .emit();\n                 }\n             }\n "}, {"sha": "da9a0b08e865b0d59520e3e435f8f2b336ed3169", "filename": "compiler/rustc_mir_build/src/lib.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/b56b175c6c3d77f66793b2062b6325f822c87136/compiler%2Frustc_mir_build%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b56b175c6c3d77f66793b2062b6325f822c87136/compiler%2Frustc_mir_build%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir_build%2Fsrc%2Flib.rs?ref=b56b175c6c3d77f66793b2062b6325f822c87136", "patch": "@@ -4,7 +4,6 @@\n #![feature(array_windows)]\n #![feature(box_patterns)]\n #![feature(box_syntax)]\n-#![feature(const_fn)]\n #![feature(const_panic)]\n #![feature(control_flow_enum)]\n #![feature(crate_visibility_modifier)]"}, {"sha": "0be7ef7e12a3eec7c9e7f6d8f77ce775d23eb8ed", "filename": "compiler/rustc_passes/src/lib.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/b56b175c6c3d77f66793b2062b6325f822c87136/compiler%2Frustc_passes%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b56b175c6c3d77f66793b2062b6325f822c87136/compiler%2Frustc_passes%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_passes%2Fsrc%2Flib.rs?ref=b56b175c6c3d77f66793b2062b6325f822c87136", "patch": "@@ -5,7 +5,6 @@\n //! This API is completely unstable and subject to change.\n \n #![doc(html_root_url = \"https://doc.rust-lang.org/nightly/nightly-rustc/\")]\n-#![feature(const_fn)]\n #![feature(const_panic)]\n #![feature(crate_visibility_modifier)]\n #![feature(in_band_lifetimes)]"}, {"sha": "be72baefb9edcc356395c428fa8d3b23912d5f27", "filename": "compiler/rustc_query_system/src/lib.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/b56b175c6c3d77f66793b2062b6325f822c87136/compiler%2Frustc_query_system%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b56b175c6c3d77f66793b2062b6325f822c87136/compiler%2Frustc_query_system%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_query_system%2Fsrc%2Flib.rs?ref=b56b175c6c3d77f66793b2062b6325f822c87136", "patch": "@@ -1,5 +1,4 @@\n #![feature(bool_to_option)]\n-#![feature(const_fn)]\n #![feature(const_panic)]\n #![feature(core_intrinsics)]\n #![feature(drain_filter)]"}, {"sha": "d30236ec3eccca8371bdf4f4fe6fb812e8098831", "filename": "compiler/rustc_span/src/lib.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/b56b175c6c3d77f66793b2062b6325f822c87136/compiler%2Frustc_span%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b56b175c6c3d77f66793b2062b6325f822c87136/compiler%2Frustc_span%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_span%2Fsrc%2Flib.rs?ref=b56b175c6c3d77f66793b2062b6325f822c87136", "patch": "@@ -16,7 +16,6 @@\n #![doc(html_root_url = \"https://doc.rust-lang.org/nightly/nightly-rustc/\")]\n #![feature(array_windows)]\n #![feature(crate_visibility_modifier)]\n-#![feature(const_fn)]\n #![feature(const_panic)]\n #![feature(negative_impls)]\n #![feature(nll)]"}, {"sha": "fdfd226b4259bceaf03a59921fd27f84d86212c9", "filename": "compiler/rustc_span/src/symbol.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b56b175c6c3d77f66793b2062b6325f822c87136/compiler%2Frustc_span%2Fsrc%2Fsymbol.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b56b175c6c3d77f66793b2062b6325f822c87136/compiler%2Frustc_span%2Fsrc%2Fsymbol.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_span%2Fsrc%2Fsymbol.rs?ref=b56b175c6c3d77f66793b2062b6325f822c87136", "patch": "@@ -382,8 +382,10 @@ symbols! {\n         const_fn,\n         const_fn_floating_point_arithmetic,\n         const_fn_fn_ptr_basics,\n+        const_fn_trait_bound,\n         const_fn_transmute,\n         const_fn_union,\n+        const_fn_unsize,\n         const_generic_defaults,\n         const_generics,\n         const_generics_defaults,"}, {"sha": "6702538874705df0ffe83ed820bf5453b2bc1223", "filename": "compiler/rustc_target/src/lib.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/b56b175c6c3d77f66793b2062b6325f822c87136/compiler%2Frustc_target%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b56b175c6c3d77f66793b2062b6325f822c87136/compiler%2Frustc_target%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_target%2Fsrc%2Flib.rs?ref=b56b175c6c3d77f66793b2062b6325f822c87136", "patch": "@@ -9,7 +9,6 @@\n \n #![doc(html_root_url = \"https://doc.rust-lang.org/nightly/nightly-rustc/\")]\n #![feature(bool_to_option)]\n-#![feature(const_fn)]\n #![feature(const_panic)]\n #![feature(nll)]\n #![feature(never_type)]"}, {"sha": "3a5dcec668ff6f310bac35f8c04aacd7c6d253fe", "filename": "library/alloc/src/lib.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/b56b175c6c3d77f66793b2062b6325f822c87136/library%2Falloc%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b56b175c6c3d77f66793b2062b6325f822c87136/library%2Falloc%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Falloc%2Fsrc%2Flib.rs?ref=b56b175c6c3d77f66793b2062b6325f822c87136", "patch": "@@ -89,7 +89,8 @@\n #![feature(cfg_target_has_atomic)]\n #![feature(coerce_unsized)]\n #![feature(const_btree_new)]\n-#![feature(const_fn)]\n+#![cfg_attr(bootstrap, feature(const_fn))]\n+#![cfg_attr(not(bootstrap), feature(const_fn_trait_bound))]\n #![feature(cow_is_borrowed)]\n #![feature(const_cow_is_borrowed)]\n #![feature(destructuring_assignment)]"}, {"sha": "0e2c140c367a92ce6a89879fb5ed26fa2d7bd52c", "filename": "library/core/src/lib.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/b56b175c6c3d77f66793b2062b6325f822c87136/library%2Fcore%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b56b175c6c3d77f66793b2062b6325f822c87136/library%2Fcore%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Flib.rs?ref=b56b175c6c3d77f66793b2062b6325f822c87136", "patch": "@@ -81,11 +81,12 @@\n #![feature(const_refs_to_cell)]\n #![feature(const_panic)]\n #![feature(const_pin)]\n-#![feature(const_fn)]\n+#![cfg_attr(bootstrap, feature(const_fn))]\n #![feature(const_fn_union)]\n #![feature(const_impl_trait)]\n #![feature(const_fn_floating_point_arithmetic)]\n #![feature(const_fn_fn_ptr_basics)]\n+#![cfg_attr(not(bootstrap), feature(const_fn_trait_bound))]\n #![feature(const_option)]\n #![feature(const_precise_live_drops)]\n #![feature(const_ptr_offset)]"}, {"sha": "ad2a8c771de9caed4c7a9106d0d51420e1b2aa77", "filename": "src/ci/pgo.sh", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b56b175c6c3d77f66793b2062b6325f822c87136/src%2Fci%2Fpgo.sh", "raw_url": "https://github.com/rust-lang/rust/raw/b56b175c6c3d77f66793b2062b6325f822c87136/src%2Fci%2Fpgo.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fpgo.sh?ref=b56b175c6c3d77f66793b2062b6325f822c87136", "patch": "@@ -12,7 +12,7 @@ RUSTC_BOOTSTRAP=1 ./build/$PGO_HOST/stage2/bin/rustc --edition=2018 \\\n \n # Download and build a single-file stress test benchmark on perf.rust-lang.org.\n function pgo_perf_benchmark {\n-    local PERF=e095f5021bf01cf3800f50b3a9f14a9683eb3e4e\n+    local PERF=9442def56a39d742bf27ebcc3e0614cf117e1bc2\n     local github_prefix=https://raw.githubusercontent.com/rust-lang/rustc-perf/$PERF\n     local name=$1\n     curl -o /tmp/$name.rs $github_prefix/collector/benchmarks/$name/src/lib.rs"}, {"sha": "f2d9758b8dc08cee390edb4d8483e8c0824508ff", "filename": "src/test/ui/consts/const-eval/issue-49296.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b56b175c6c3d77f66793b2062b6325f822c87136/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fissue-49296.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b56b175c6c3d77f66793b2062b6325f822c87136/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fissue-49296.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fissue-49296.rs?ref=b56b175c6c3d77f66793b2062b6325f822c87136", "patch": "@@ -1,7 +1,7 @@\n // issue-49296: Unsafe shenigans in constants can result in missing errors\n \n-#![feature(const_fn)]\n #![feature(const_fn_union)]\n+#![feature(const_fn_trait_bound)]\n \n const unsafe fn transmute<T: Copy, U: Copy>(t: T) -> U {\n     #[repr(C)]"}, {"sha": "1928c51885efff2d97205da720e57fad152097b1", "filename": "src/test/ui/consts/const-fn.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/b56b175c6c3d77f66793b2062b6325f822c87136/src%2Ftest%2Fui%2Fconsts%2Fconst-fn.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b56b175c6c3d77f66793b2062b6325f822c87136/src%2Ftest%2Fui%2Fconsts%2Fconst-fn.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fconst-fn.rs?ref=b56b175c6c3d77f66793b2062b6325f822c87136", "patch": "@@ -3,7 +3,8 @@\n \n // A very basic test of const fn functionality.\n \n-#![feature(const_fn, const_indexing)]\n+#![feature(const_indexing)]\n+#![feature(const_fn_trait_bound)]\n \n const fn add(x: u32, y: u32) -> u32 {\n     x + y"}, {"sha": "ded05cb17c51349cd023c3542c4fb2ecd4a2ae54", "filename": "src/test/ui/consts/const_fn_trait_bound.gated.stderr", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/b56b175c6c3d77f66793b2062b6325f822c87136/src%2Ftest%2Fui%2Fconsts%2Fconst_fn_trait_bound.gated.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b56b175c6c3d77f66793b2062b6325f822c87136/src%2Ftest%2Fui%2Fconsts%2Fconst_fn_trait_bound.gated.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fconst_fn_trait_bound.gated.stderr?ref=b56b175c6c3d77f66793b2062b6325f822c87136", "patch": "@@ -0,0 +1,8 @@\n+error: fatal error triggered by #[rustc_error]\n+  --> $DIR/const_fn_trait_bound.rs:17:1\n+   |\n+LL | fn main() {}\n+   | ^^^^^^^^^\n+\n+error: aborting due to previous error\n+"}, {"sha": "b1ef820d827b4b24fff5a6285550f80185f2a993", "filename": "src/test/ui/consts/const_fn_trait_bound.rs", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/b56b175c6c3d77f66793b2062b6325f822c87136/src%2Ftest%2Fui%2Fconsts%2Fconst_fn_trait_bound.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b56b175c6c3d77f66793b2062b6325f822c87136/src%2Ftest%2Fui%2Fconsts%2Fconst_fn_trait_bound.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fconst_fn_trait_bound.rs?ref=b56b175c6c3d77f66793b2062b6325f822c87136", "patch": "@@ -0,0 +1,17 @@\n+// gate-test-const_fn_trait_bound\n+\n+// revisions: stock gated\n+\n+#![feature(rustc_attrs)]\n+#![cfg_attr(gated, feature(const_fn_trait_bound))]\n+\n+const fn test1<T: std::ops::Add>() {}\n+//[stock]~^ trait bounds\n+const fn test2(_x: &dyn Send) {}\n+//[stock]~^ trait bounds\n+const fn test3() -> &'static dyn Send { loop {} }\n+//[stock]~^ trait bounds\n+\n+\n+#[rustc_error]\n+fn main() {} //[gated]~ fatal error triggered by #[rustc_error]"}, {"sha": "2ad45f3afde8f8d334a3ebf5c9416902379a739a", "filename": "src/test/ui/consts/const_fn_trait_bound.stock.stderr", "status": "added", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/b56b175c6c3d77f66793b2062b6325f822c87136/src%2Ftest%2Fui%2Fconsts%2Fconst_fn_trait_bound.stock.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b56b175c6c3d77f66793b2062b6325f822c87136/src%2Ftest%2Fui%2Fconsts%2Fconst_fn_trait_bound.stock.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fconst_fn_trait_bound.stock.stderr?ref=b56b175c6c3d77f66793b2062b6325f822c87136", "patch": "@@ -0,0 +1,30 @@\n+error[E0658]: trait bounds other than `Sized` on const fn parameters are unstable\n+  --> $DIR/const_fn_trait_bound.rs:8:16\n+   |\n+LL | const fn test1<T: std::ops::Add>() {}\n+   |                ^\n+   |\n+   = note: see issue #57563 <https://github.com/rust-lang/rust/issues/57563> for more information\n+   = help: add `#![feature(const_fn_trait_bound)]` to the crate attributes to enable\n+\n+error[E0658]: trait bounds other than `Sized` on const fn parameters are unstable\n+  --> $DIR/const_fn_trait_bound.rs:10:16\n+   |\n+LL | const fn test2(_x: &dyn Send) {}\n+   |                ^^\n+   |\n+   = note: see issue #57563 <https://github.com/rust-lang/rust/issues/57563> for more information\n+   = help: add `#![feature(const_fn_trait_bound)]` to the crate attributes to enable\n+\n+error[E0658]: trait bounds other than `Sized` on const fn parameters are unstable\n+  --> $DIR/const_fn_trait_bound.rs:12:21\n+   |\n+LL | const fn test3() -> &'static dyn Send { loop {} }\n+   |                     ^^^^^^^^^^^^^^^^^\n+   |\n+   = note: see issue #57563 <https://github.com/rust-lang/rust/issues/57563> for more information\n+   = help: add `#![feature(const_fn_trait_bound)]` to the crate attributes to enable\n+\n+error: aborting due to 3 previous errors\n+\n+For more information about this error, try `rustc --explain E0658`."}, {"sha": "8a65c274ca933fb0aed2d17c3bffc539d4b2cc3e", "filename": "src/test/ui/consts/const_fn_unsize.gated.stderr", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/b56b175c6c3d77f66793b2062b6325f822c87136/src%2Ftest%2Fui%2Fconsts%2Fconst_fn_unsize.gated.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b56b175c6c3d77f66793b2062b6325f822c87136/src%2Ftest%2Fui%2Fconsts%2Fconst_fn_unsize.gated.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fconst_fn_unsize.gated.stderr?ref=b56b175c6c3d77f66793b2062b6325f822c87136", "patch": "@@ -0,0 +1,8 @@\n+error: fatal error triggered by #[rustc_error]\n+  --> $DIR/const_fn_unsize.rs:16:1\n+   |\n+LL | fn main() {}\n+   | ^^^^^^^^^\n+\n+error: aborting due to previous error\n+"}, {"sha": "0cab3b0a031b1f48678965cb133a24024b697c37", "filename": "src/test/ui/consts/const_fn_unsize.rs", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/b56b175c6c3d77f66793b2062b6325f822c87136/src%2Ftest%2Fui%2Fconsts%2Fconst_fn_unsize.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b56b175c6c3d77f66793b2062b6325f822c87136/src%2Ftest%2Fui%2Fconsts%2Fconst_fn_unsize.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fconst_fn_unsize.rs?ref=b56b175c6c3d77f66793b2062b6325f822c87136", "patch": "@@ -0,0 +1,16 @@\n+// gate-test-const_fn_unsize\n+\n+// revisions: stock gated\n+\n+#![feature(rustc_attrs)]\n+#![cfg_attr(gated, feature(const_fn_unsize))]\n+\n+use std::ptr::NonNull;\n+\n+const fn test() {\n+    let _x = NonNull::<[i32; 0]>::dangling() as NonNull<[i32]>;\n+    //[stock]~^ unsizing cast\n+}\n+\n+#[rustc_error]\n+fn main() {} //[gated]~ fatal error triggered by #[rustc_error]"}, {"sha": "cc746d4f175cabd8a88254d95cef111a1b1dabd6", "filename": "src/test/ui/consts/const_fn_unsize.stock.stderr", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/b56b175c6c3d77f66793b2062b6325f822c87136/src%2Ftest%2Fui%2Fconsts%2Fconst_fn_unsize.stock.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b56b175c6c3d77f66793b2062b6325f822c87136/src%2Ftest%2Fui%2Fconsts%2Fconst_fn_unsize.stock.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fconst_fn_unsize.stock.stderr?ref=b56b175c6c3d77f66793b2062b6325f822c87136", "patch": "@@ -0,0 +1,12 @@\n+error[E0658]: unsizing casts to types besides slices are not allowed in const fn\n+  --> $DIR/const_fn_unsize.rs:11:14\n+   |\n+LL |     let _x = NonNull::<[i32; 0]>::dangling() as NonNull<[i32]>;\n+   |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |\n+   = note: see issue #64992 <https://github.com/rust-lang/rust/issues/64992> for more information\n+   = help: add `#![feature(const_fn_unsize)]` to the crate attributes to enable\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0658`."}, {"sha": "e6ce7e12520f509504e1bc298418a705a31d364b", "filename": "src/test/ui/consts/min_const_fn/min_const_fn.stderr", "status": "modified", "additions": 28, "deletions": 28, "changes": 56, "blob_url": "https://github.com/rust-lang/rust/blob/b56b175c6c3d77f66793b2062b6325f822c87136/src%2Ftest%2Fui%2Fconsts%2Fmin_const_fn%2Fmin_const_fn.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b56b175c6c3d77f66793b2062b6325f822c87136/src%2Ftest%2Fui%2Fconsts%2Fmin_const_fn%2Fmin_const_fn.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fmin_const_fn%2Fmin_const_fn.stderr?ref=b56b175c6c3d77f66793b2062b6325f822c87136", "patch": "@@ -130,23 +130,23 @@ LL |     const fn get_mut_sq(&mut self) -> &mut T { &mut self.0 }\n    = note: see issue #57349 <https://github.com/rust-lang/rust/issues/57349> for more information\n    = help: add `#![feature(const_mut_refs)]` to the crate attributes to enable\n \n-error[E0723]: trait bounds other than `Sized` on const fn parameters are unstable\n+error[E0658]: trait bounds other than `Sized` on const fn parameters are unstable\n   --> $DIR/min_const_fn.rs:84:16\n    |\n LL | const fn foo11<T: std::fmt::Display>(t: T) -> T { t }\n    |                ^\n    |\n    = note: see issue #57563 <https://github.com/rust-lang/rust/issues/57563> for more information\n-   = help: add `#![feature(const_fn)]` to the crate attributes to enable\n+   = help: add `#![feature(const_fn_trait_bound)]` to the crate attributes to enable\n \n-error[E0723]: trait bounds other than `Sized` on const fn parameters are unstable\n+error[E0658]: trait bounds other than `Sized` on const fn parameters are unstable\n   --> $DIR/min_const_fn.rs:86:18\n    |\n LL | const fn foo11_2<T: Send>(t: T) -> T { t }\n    |                  ^\n    |\n    = note: see issue #57563 <https://github.com/rust-lang/rust/issues/57563> for more information\n-   = help: add `#![feature(const_fn)]` to the crate attributes to enable\n+   = help: add `#![feature(const_fn_trait_bound)]` to the crate attributes to enable\n \n error[E0013]: constant functions cannot refer to statics\n   --> $DIR/min_const_fn.rs:90:27\n@@ -209,41 +209,41 @@ LL | const fn inc(x: &mut i32) { *x += 1 }\n    = note: see issue #57349 <https://github.com/rust-lang/rust/issues/57349> for more information\n    = help: add `#![feature(const_mut_refs)]` to the crate attributes to enable\n \n-error[E0723]: trait bounds other than `Sized` on const fn parameters are unstable\n+error[E0658]: trait bounds other than `Sized` on const fn parameters are unstable\n   --> $DIR/min_const_fn.rs:110:6\n    |\n LL | impl<T: std::fmt::Debug> Foo<T> {\n    |      ^\n    |\n    = note: see issue #57563 <https://github.com/rust-lang/rust/issues/57563> for more information\n-   = help: add `#![feature(const_fn)]` to the crate attributes to enable\n+   = help: add `#![feature(const_fn_trait_bound)]` to the crate attributes to enable\n \n-error[E0723]: trait bounds other than `Sized` on const fn parameters are unstable\n+error[E0658]: trait bounds other than `Sized` on const fn parameters are unstable\n   --> $DIR/min_const_fn.rs:115:6\n    |\n LL | impl<T: std::fmt::Debug + Sized> Foo<T> {\n    |      ^\n    |\n    = note: see issue #57563 <https://github.com/rust-lang/rust/issues/57563> for more information\n-   = help: add `#![feature(const_fn)]` to the crate attributes to enable\n+   = help: add `#![feature(const_fn_trait_bound)]` to the crate attributes to enable\n \n-error[E0723]: trait bounds other than `Sized` on const fn parameters are unstable\n+error[E0658]: trait bounds other than `Sized` on const fn parameters are unstable\n   --> $DIR/min_const_fn.rs:120:6\n    |\n LL | impl<T: Sync + Sized> Foo<T> {\n    |      ^\n    |\n    = note: see issue #57563 <https://github.com/rust-lang/rust/issues/57563> for more information\n-   = help: add `#![feature(const_fn)]` to the crate attributes to enable\n+   = help: add `#![feature(const_fn_trait_bound)]` to the crate attributes to enable\n \n-error[E0723]: trait bounds other than `Sized` on const fn parameters are unstable\n+error[E0658]: trait bounds other than `Sized` on const fn parameters are unstable\n   --> $DIR/min_const_fn.rs:126:34\n    |\n LL | const fn no_apit2(_x: AlanTuring<impl std::fmt::Debug>) {}\n    |                                  ^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: see issue #57563 <https://github.com/rust-lang/rust/issues/57563> for more information\n-   = help: add `#![feature(const_fn)]` to the crate attributes to enable\n+   = help: add `#![feature(const_fn_trait_bound)]` to the crate attributes to enable\n \n error[E0493]: destructors cannot be evaluated at compile-time\n   --> $DIR/min_const_fn.rs:126:19\n@@ -253,14 +253,14 @@ LL | const fn no_apit2(_x: AlanTuring<impl std::fmt::Debug>) {}\n    |                   |\n    |                   constant functions cannot evaluate destructors\n \n-error[E0723]: trait bounds other than `Sized` on const fn parameters are unstable\n+error[E0658]: trait bounds other than `Sized` on const fn parameters are unstable\n   --> $DIR/min_const_fn.rs:129:22\n    |\n LL | const fn no_apit(_x: impl std::fmt::Debug) {}\n    |                      ^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: see issue #57563 <https://github.com/rust-lang/rust/issues/57563> for more information\n-   = help: add `#![feature(const_fn)]` to the crate attributes to enable\n+   = help: add `#![feature(const_fn_trait_bound)]` to the crate attributes to enable\n \n error[E0493]: destructors cannot be evaluated at compile-time\n   --> $DIR/min_const_fn.rs:129:18\n@@ -270,50 +270,50 @@ LL | const fn no_apit(_x: impl std::fmt::Debug) {}\n    |                  |\n    |                  constant functions cannot evaluate destructors\n \n-error[E0723]: trait bounds other than `Sized` on const fn parameters are unstable\n+error[E0658]: trait bounds other than `Sized` on const fn parameters are unstable\n   --> $DIR/min_const_fn.rs:132:23\n    |\n LL | const fn no_dyn_trait(_x: &dyn std::fmt::Debug) {}\n    |                       ^^\n    |\n    = note: see issue #57563 <https://github.com/rust-lang/rust/issues/57563> for more information\n-   = help: add `#![feature(const_fn)]` to the crate attributes to enable\n+   = help: add `#![feature(const_fn_trait_bound)]` to the crate attributes to enable\n \n-error[E0723]: trait bounds other than `Sized` on const fn parameters are unstable\n+error[E0658]: trait bounds other than `Sized` on const fn parameters are unstable\n   --> $DIR/min_const_fn.rs:134:32\n    |\n LL | const fn no_dyn_trait_ret() -> &'static dyn std::fmt::Debug { &() }\n    |                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: see issue #57563 <https://github.com/rust-lang/rust/issues/57563> for more information\n-   = help: add `#![feature(const_fn)]` to the crate attributes to enable\n+   = help: add `#![feature(const_fn_trait_bound)]` to the crate attributes to enable\n \n-error[E0723]: unsizing casts to types besides slices are not allowed in const fn\n+error[E0658]: unsizing casts to types besides slices are not allowed in const fn\n   --> $DIR/min_const_fn.rs:134:63\n    |\n LL | const fn no_dyn_trait_ret() -> &'static dyn std::fmt::Debug { &() }\n    |                                                               ^^^\n    |\n-   = note: see issue #57563 <https://github.com/rust-lang/rust/issues/57563> for more information\n-   = help: add `#![feature(const_fn)]` to the crate attributes to enable\n+   = note: see issue #64992 <https://github.com/rust-lang/rust/issues/64992> for more information\n+   = help: add `#![feature(const_fn_unsize)]` to the crate attributes to enable\n \n-error[E0723]: unsizing casts to types besides slices are not allowed in const fn\n+error[E0658]: unsizing casts to types besides slices are not allowed in const fn\n   --> $DIR/min_const_fn.rs:134:63\n    |\n LL | const fn no_dyn_trait_ret() -> &'static dyn std::fmt::Debug { &() }\n    |                                                               ^^^\n    |\n-   = note: see issue #57563 <https://github.com/rust-lang/rust/issues/57563> for more information\n-   = help: add `#![feature(const_fn)]` to the crate attributes to enable\n+   = note: see issue #64992 <https://github.com/rust-lang/rust/issues/64992> for more information\n+   = help: add `#![feature(const_fn_unsize)]` to the crate attributes to enable\n \n-error[E0723]: unsizing casts to types besides slices are not allowed in const fn\n+error[E0658]: unsizing casts to types besides slices are not allowed in const fn\n   --> $DIR/min_const_fn.rs:141:42\n    |\n LL | const fn really_no_traits_i_mean_it() { (&() as &dyn std::fmt::Debug, ()).1 }\n    |                                          ^^^\n    |\n-   = note: see issue #57563 <https://github.com/rust-lang/rust/issues/57563> for more information\n-   = help: add `#![feature(const_fn)]` to the crate attributes to enable\n+   = note: see issue #64992 <https://github.com/rust-lang/rust/issues/64992> for more information\n+   = help: add `#![feature(const_fn_unsize)]` to the crate attributes to enable\n \n error[E0658]: function pointers cannot appear in constant functions\n   --> $DIR/min_const_fn.rs:144:21\n@@ -344,5 +344,5 @@ LL | const fn no_fn_ptrs2() -> fn() { fn foo() {} foo }\n \n error: aborting due to 39 previous errors\n \n-Some errors have detailed explanations: E0013, E0493, E0658, E0723.\n+Some errors have detailed explanations: E0013, E0493, E0658.\n For more information about an error, try `rustc --explain E0013`."}, {"sha": "cf635d656996e0baf728c9159b6f14529c0b47f4", "filename": "src/test/ui/consts/min_const_fn/min_const_fn_dyn.stderr", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/b56b175c6c3d77f66793b2062b6325f822c87136/src%2Ftest%2Fui%2Fconsts%2Fmin_const_fn%2Fmin_const_fn_dyn.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b56b175c6c3d77f66793b2062b6325f822c87136/src%2Ftest%2Fui%2Fconsts%2Fmin_const_fn%2Fmin_const_fn_dyn.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fmin_const_fn%2Fmin_const_fn_dyn.stderr?ref=b56b175c6c3d77f66793b2062b6325f822c87136", "patch": "@@ -1,21 +1,21 @@\n-error[E0723]: trait bounds other than `Sized` on const fn parameters are unstable\n+error[E0658]: trait bounds other than `Sized` on const fn parameters are unstable\n   --> $DIR/min_const_fn_dyn.rs:9:5\n    |\n LL |     x.0.field;\n    |     ^^^^^^^^^\n    |\n    = note: see issue #57563 <https://github.com/rust-lang/rust/issues/57563> for more information\n-   = help: add `#![feature(const_fn)]` to the crate attributes to enable\n+   = help: add `#![feature(const_fn_trait_bound)]` to the crate attributes to enable\n \n-error[E0723]: unsizing casts to types besides slices are not allowed in const fn\n+error[E0658]: unsizing casts to types besides slices are not allowed in const fn\n   --> $DIR/min_const_fn_dyn.rs:12:66\n    |\n LL | const fn no_inner_dyn_trait_ret() -> Hide { Hide(HasDyn { field: &0 }) }\n    |                                                                  ^^\n    |\n-   = note: see issue #57563 <https://github.com/rust-lang/rust/issues/57563> for more information\n-   = help: add `#![feature(const_fn)]` to the crate attributes to enable\n+   = note: see issue #64992 <https://github.com/rust-lang/rust/issues/64992> for more information\n+   = help: add `#![feature(const_fn_unsize)]` to the crate attributes to enable\n \n error: aborting due to 2 previous errors\n \n-For more information about this error, try `rustc --explain E0723`.\n+For more information about this error, try `rustc --explain E0658`."}, {"sha": "79691cddfb40311e4e0bd6a29cdd704ec8a28e37", "filename": "src/test/ui/consts/unsizing-cast-non-null.stderr", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/b56b175c6c3d77f66793b2062b6325f822c87136/src%2Ftest%2Fui%2Fconsts%2Funsizing-cast-non-null.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b56b175c6c3d77f66793b2062b6325f822c87136/src%2Ftest%2Fui%2Fconsts%2Funsizing-cast-non-null.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Funsizing-cast-non-null.stderr?ref=b56b175c6c3d77f66793b2062b6325f822c87136", "patch": "@@ -1,12 +1,12 @@\n-error[E0723]: unsizing casts to types besides slices are not allowed in const fn\n+error[E0658]: unsizing casts to types besides slices are not allowed in const fn\n   --> $DIR/unsizing-cast-non-null.rs:6:5\n    |\n LL |     NonNull::<[T; 0]>::dangling()\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n-   = note: see issue #57563 <https://github.com/rust-lang/rust/issues/57563> for more information\n-   = help: add `#![feature(const_fn)]` to the crate attributes to enable\n+   = note: see issue #64992 <https://github.com/rust-lang/rust/issues/64992> for more information\n+   = help: add `#![feature(const_fn_unsize)]` to the crate attributes to enable\n \n error: aborting due to previous error\n \n-For more information about this error, try `rustc --explain E0723`.\n+For more information about this error, try `rustc --explain E0658`."}, {"sha": "2fbbbbffac484a0c6d58ce2e5ccd6ec2fb62bb75", "filename": "src/test/ui/consts/unstable-const-fn-in-libcore.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b56b175c6c3d77f66793b2062b6325f822c87136/src%2Ftest%2Fui%2Fconsts%2Funstable-const-fn-in-libcore.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b56b175c6c3d77f66793b2062b6325f822c87136/src%2Ftest%2Fui%2Fconsts%2Funstable-const-fn-in-libcore.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Funstable-const-fn-in-libcore.rs?ref=b56b175c6c3d77f66793b2062b6325f822c87136", "patch": "@@ -6,7 +6,7 @@\n #![stable(feature = \"core\", since = \"1.6.0\")]\n #![feature(rustc_const_unstable)]\n #![feature(staged_api)]\n-#![feature(const_fn)]\n+#![feature(const_fn_trait_bound)]\n \n enum Opt<T> {\n     Some(T),"}, {"sha": "c37990b1af3ddf4ab086779d294038264bb047de", "filename": "src/test/ui/rfc-2632-const-trait-impl/call-generic-method-chain.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b56b175c6c3d77f66793b2062b6325f822c87136/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Fcall-generic-method-chain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b56b175c6c3d77f66793b2062b6325f822c87136/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Fcall-generic-method-chain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Fcall-generic-method-chain.rs?ref=b56b175c6c3d77f66793b2062b6325f822c87136", "patch": "@@ -2,8 +2,8 @@\n \n // check-pass\n \n-#![feature(const_fn)]\n #![feature(const_trait_impl)]\n+#![feature(const_fn_trait_bound)]\n #![allow(incomplete_features)]\n \n struct S;"}, {"sha": "d553b2ab8ec47b75e31dabed861570048e68238c", "filename": "src/test/ui/rfc-2632-const-trait-impl/call-generic-method-dup-bound.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b56b175c6c3d77f66793b2062b6325f822c87136/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Fcall-generic-method-dup-bound.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b56b175c6c3d77f66793b2062b6325f822c87136/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Fcall-generic-method-dup-bound.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Fcall-generic-method-dup-bound.rs?ref=b56b175c6c3d77f66793b2062b6325f822c87136", "patch": "@@ -1,8 +1,8 @@\n // check-pass\n \n-#![feature(const_fn)]\n #![feature(const_trait_impl)]\n #![feature(const_trait_bound_opt_out)]\n+#![feature(const_fn_trait_bound)]\n #![allow(incomplete_features)]\n \n struct S;"}, {"sha": "74b0d5fbe474ba767110754fbf0ddf0cfb5ab22a", "filename": "src/test/ui/rfc-2632-const-trait-impl/call-generic-method-pass.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b56b175c6c3d77f66793b2062b6325f822c87136/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Fcall-generic-method-pass.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b56b175c6c3d77f66793b2062b6325f822c87136/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Fcall-generic-method-pass.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Fcall-generic-method-pass.rs?ref=b56b175c6c3d77f66793b2062b6325f822c87136", "patch": "@@ -2,8 +2,8 @@\n \n // check-pass\n \n-#![feature(const_fn)]\n #![feature(const_trait_impl)]\n+#![feature(const_fn_trait_bound)]\n #![allow(incomplete_features)]\n \n struct S;"}, {"sha": "d3680820312605d8a57a14353e830254cfa405b4", "filename": "src/test/ui/rfc-2632-const-trait-impl/generic-bound.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b56b175c6c3d77f66793b2062b6325f822c87136/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Fgeneric-bound.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b56b175c6c3d77f66793b2062b6325f822c87136/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Fgeneric-bound.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Fgeneric-bound.rs?ref=b56b175c6c3d77f66793b2062b6325f822c87136", "patch": "@@ -2,7 +2,7 @@\n \n #![allow(incomplete_features)]\n #![feature(const_trait_impl)]\n-#![feature(const_fn)]\n+#![feature(const_fn_trait_bound)]\n \n use std::marker::PhantomData;\n "}, {"sha": "5b2ebccef1c6dd42c5654bafd35d0e1653d5eb31", "filename": "src/test/ui/rfc-2632-const-trait-impl/stability.stderr", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/b56b175c6c3d77f66793b2062b6325f822c87136/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Fstability.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b56b175c6c3d77f66793b2062b6325f822c87136/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Fstability.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Fstability.stderr?ref=b56b175c6c3d77f66793b2062b6325f822c87136", "patch": "@@ -1,4 +1,4 @@\n-error[E0723]: trait methods cannot be stable const fn\n+error: trait methods cannot be stable const fn\n   --> $DIR/stability.rs:14:5\n    |\n LL | /     fn sub(self, rhs: Self) -> Self {\n@@ -17,4 +17,3 @@ LL |     Int(1i32) + Int(2i32)\n \n error: aborting due to 2 previous errors\n \n-For more information about this error, try `rustc --explain E0723`."}]}