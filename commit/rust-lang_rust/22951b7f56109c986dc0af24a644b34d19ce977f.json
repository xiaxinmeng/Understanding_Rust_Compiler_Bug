{"sha": "22951b7f56109c986dc0af24a644b34d19ce977f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjIyOTUxYjdmNTYxMDljOTg2ZGMwYWYyNGE2NDRiMzRkMTljZTk3N2Y=", "commit": {"author": {"name": "Amanieu d'Antras", "email": "amanieu@gmail.com", "date": "2021-04-28T06:12:49Z"}, "committer": {"name": "Amanieu d'Antras", "email": "amanieu@gmail.com", "date": "2021-04-28T06:27:06Z"}, "message": "Stabilize vec_extend_from_within", "tree": {"sha": "c95468861939fb18c29792c66f0f467ff73d1ff9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c95468861939fb18c29792c66f0f467ff73d1ff9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/22951b7f56109c986dc0af24a644b34d19ce977f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/22951b7f56109c986dc0af24a644b34d19ce977f", "html_url": "https://github.com/rust-lang/rust/commit/22951b7f56109c986dc0af24a644b34d19ce977f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/22951b7f56109c986dc0af24a644b34d19ce977f/comments", "author": {"login": "Amanieu", "id": 278509, "node_id": "MDQ6VXNlcjI3ODUwOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/278509?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Amanieu", "html_url": "https://github.com/Amanieu", "followers_url": "https://api.github.com/users/Amanieu/followers", "following_url": "https://api.github.com/users/Amanieu/following{/other_user}", "gists_url": "https://api.github.com/users/Amanieu/gists{/gist_id}", "starred_url": "https://api.github.com/users/Amanieu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Amanieu/subscriptions", "organizations_url": "https://api.github.com/users/Amanieu/orgs", "repos_url": "https://api.github.com/users/Amanieu/repos", "events_url": "https://api.github.com/users/Amanieu/events{/privacy}", "received_events_url": "https://api.github.com/users/Amanieu/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Amanieu", "id": 278509, "node_id": "MDQ6VXNlcjI3ODUwOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/278509?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Amanieu", "html_url": "https://github.com/Amanieu", "followers_url": "https://api.github.com/users/Amanieu/followers", "following_url": "https://api.github.com/users/Amanieu/following{/other_user}", "gists_url": "https://api.github.com/users/Amanieu/gists{/gist_id}", "starred_url": "https://api.github.com/users/Amanieu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Amanieu/subscriptions", "organizations_url": "https://api.github.com/users/Amanieu/orgs", "repos_url": "https://api.github.com/users/Amanieu/repos", "events_url": "https://api.github.com/users/Amanieu/events{/privacy}", "received_events_url": "https://api.github.com/users/Amanieu/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "727d101561f9b1e81c6282943292d990288ca479", "url": "https://api.github.com/repos/rust-lang/rust/commits/727d101561f9b1e81c6282943292d990288ca479", "html_url": "https://github.com/rust-lang/rust/commit/727d101561f9b1e81c6282943292d990288ca479"}], "stats": {"total": 6, "additions": 1, "deletions": 5}, "files": [{"sha": "15308a4469bf059dda2f06ad3e23d89f25800b68", "filename": "library/alloc/src/lib.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/22951b7f56109c986dc0af24a644b34d19ce977f/library%2Falloc%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/22951b7f56109c986dc0af24a644b34d19ce977f/library%2Falloc%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Falloc%2Fsrc%2Flib.rs?ref=22951b7f56109c986dc0af24a644b34d19ce977f", "patch": "@@ -76,7 +76,6 @@\n #![cfg_attr(test, feature(test))]\n #![cfg_attr(test, feature(new_uninit))]\n #![feature(allocator_api)]\n-#![feature(vec_extend_from_within)]\n #![feature(array_chunks)]\n #![feature(array_methods)]\n #![feature(array_windows)]"}, {"sha": "85c9446689e6719e4430f1e09c31d86733b7b5d7", "filename": "library/alloc/src/vec/mod.rs", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/22951b7f56109c986dc0af24a644b34d19ce977f/library%2Falloc%2Fsrc%2Fvec%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/22951b7f56109c986dc0af24a644b34d19ce977f/library%2Falloc%2Fsrc%2Fvec%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Falloc%2Fsrc%2Fvec%2Fmod.rs?ref=22951b7f56109c986dc0af24a644b34d19ce977f", "patch": "@@ -2124,8 +2124,6 @@ impl<T: Clone, A: Allocator> Vec<T, A> {\n     /// ## Examples\n     ///\n     /// ```\n-    /// #![feature(vec_extend_from_within)]\n-    ///\n     /// let mut vec = vec![0, 1, 2, 3, 4];\n     ///\n     /// vec.extend_from_within(2..);\n@@ -2137,7 +2135,7 @@ impl<T: Clone, A: Allocator> Vec<T, A> {\n     /// vec.extend_from_within(4..8);\n     /// assert_eq!(vec, [0, 1, 2, 3, 4, 2, 3, 4, 0, 1, 4, 2, 3, 4]);\n     /// ```\n-    #[unstable(feature = \"vec_extend_from_within\", issue = \"81656\")]\n+    #[stable(feature = \"vec_extend_from_within\", since = \"1.53.0\")]\n     pub fn extend_from_within<R>(&mut self, src: R)\n     where\n         R: RangeBounds<usize>,"}, {"sha": "25a83a0b01438ba52fcb077f87a757d81d4754a7", "filename": "library/alloc/tests/lib.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/22951b7f56109c986dc0af24a644b34d19ce977f/library%2Falloc%2Ftests%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/22951b7f56109c986dc0af24a644b34d19ce977f/library%2Falloc%2Ftests%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Falloc%2Ftests%2Flib.rs?ref=22951b7f56109c986dc0af24a644b34d19ce977f", "patch": "@@ -20,7 +20,6 @@\n #![feature(vecdeque_binary_search)]\n #![feature(slice_group_by)]\n #![feature(slice_partition_dedup)]\n-#![feature(vec_extend_from_within)]\n #![feature(vec_spare_capacity)]\n #![feature(string_remove_matches)]\n "}]}