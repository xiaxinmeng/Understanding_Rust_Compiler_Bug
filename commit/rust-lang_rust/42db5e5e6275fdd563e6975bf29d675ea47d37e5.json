{"sha": "42db5e5e6275fdd563e6975bf29d675ea47d37e5", "node_id": "C_kwDOAAsO6NoAKDQyZGI1ZTVlNjI3NWZkZDU2M2U2OTc1YmYyOWQ2NzVlYTQ3ZDM3ZTU", "commit": {"author": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2022-11-06T11:40:31Z"}, "committer": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2022-11-24T17:48:59Z"}, "message": "Use kw::Empty for elided lifetimes in path.", "tree": {"sha": "3e728ea32c34aab15bd9debec38c74e451c714f4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3e728ea32c34aab15bd9debec38c74e451c714f4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/42db5e5e6275fdd563e6975bf29d675ea47d37e5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/42db5e5e6275fdd563e6975bf29d675ea47d37e5", "html_url": "https://github.com/rust-lang/rust/commit/42db5e5e6275fdd563e6975bf29d675ea47d37e5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/42db5e5e6275fdd563e6975bf29d675ea47d37e5/comments", "author": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "committer": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "93cfcedfd5582ef4d2966d39eb32d2aa3e3f2dee", "url": "https://api.github.com/repos/rust-lang/rust/commits/93cfcedfd5582ef4d2966d39eb32d2aa3e3f2dee", "html_url": "https://github.com/rust-lang/rust/commit/93cfcedfd5582ef4d2966d39eb32d2aa3e3f2dee"}], "stats": {"total": 14, "additions": 9, "deletions": 5}, "files": [{"sha": "220941dcd5dbf6c4b0696b6c4d7fef98aa578a4f", "filename": "clippy_lints/src/lifetimes.rs", "status": "modified", "additions": 9, "deletions": 5, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/42db5e5e6275fdd563e6975bf29d675ea47d37e5/clippy_lints%2Fsrc%2Flifetimes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/42db5e5e6275fdd563e6975bf29d675ea47d37e5/clippy_lints%2Fsrc%2Flifetimes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Flifetimes.rs?ref=42db5e5e6275fdd563e6975bf29d675ea47d37e5", "patch": "@@ -10,8 +10,8 @@ use rustc_hir::lang_items;\n use rustc_hir::FnRetTy::Return;\n use rustc_hir::{\n     BareFnTy, BodyId, FnDecl, GenericArg, GenericBound, GenericParam, GenericParamKind, Generics, Impl, ImplItem,\n-    ImplItemKind, Item, ItemKind, Lifetime, LifetimeName, PolyTraitRef, PredicateOrigin, TraitFn, TraitItem,\n-    TraitItemKind, Ty, TyKind, WherePredicate,\n+    ImplItemKind, Item, ItemKind, Lifetime, LifetimeName, LifetimeParamKind, PolyTraitRef, PredicateOrigin, TraitFn,\n+    TraitItem, TraitItemKind, Ty, TyKind, WherePredicate,\n };\n use rustc_lint::{LateContext, LateLintPass};\n use rustc_middle::hir::nested_filter as middle_nested_filter;\n@@ -595,7 +595,9 @@ fn report_extra_lifetimes<'tcx>(cx: &LateContext<'tcx>, func: &'tcx FnDecl<'_>,\n         .params\n         .iter()\n         .filter_map(|par| match par.kind {\n-            GenericParamKind::Lifetime { .. } => Some((par.name.ident().name, par.span)),\n+            GenericParamKind::Lifetime {\n+                kind: LifetimeParamKind::Explicit,\n+            } => Some((par.name.ident().name, par.span)),\n             _ => None,\n         })\n         .collect();\n@@ -620,7 +622,9 @@ fn report_extra_impl_lifetimes<'tcx>(cx: &LateContext<'tcx>, impl_: &'tcx Impl<'\n         .params\n         .iter()\n         .filter_map(|par| match par.kind {\n-            GenericParamKind::Lifetime { .. } => Some((par.name.ident().name, par.span)),\n+            GenericParamKind::Lifetime {\n+                kind: LifetimeParamKind::Explicit,\n+            } => Some((par.name.ident().name, par.span)),\n             _ => None,\n         })\n         .collect();\n@@ -647,7 +651,7 @@ struct BodyLifetimeChecker {\n impl<'tcx> Visitor<'tcx> for BodyLifetimeChecker {\n     // for lifetimes as parameters of generics\n     fn visit_lifetime(&mut self, lifetime: &'tcx Lifetime) {\n-        if lifetime.ident.name != kw::UnderscoreLifetime && lifetime.ident.name != kw::StaticLifetime {\n+        if !lifetime.is_anonymous() && lifetime.ident.name != kw::StaticLifetime {\n             self.lifetimes_used_in_body = true;\n         }\n     }"}]}