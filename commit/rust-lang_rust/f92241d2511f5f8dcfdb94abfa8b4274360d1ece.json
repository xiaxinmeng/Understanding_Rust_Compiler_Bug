{"sha": "f92241d2511f5f8dcfdb94abfa8b4274360d1ece", "node_id": "C_kwDOAAsO6NoAKGY5MjI0MWQyNTExZjVmOGRjZmRiOTRhYmZhOGI0Mjc0MzYwZDFlY2U", "commit": {"author": {"name": "DrMeepster", "email": "19316085+DrMeepster@users.noreply.github.com", "date": "2021-06-29T21:50:50Z"}, "committer": {"name": "DrMeepster", "email": "19316085+DrMeepster@users.noreply.github.com", "date": "2021-11-03T05:47:26Z"}, "message": "Don't reinitialize here", "tree": {"sha": "7ea311dff3fab7919beb90e22fc7701d19015be4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7ea311dff3fab7919beb90e22fc7701d19015be4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f92241d2511f5f8dcfdb94abfa8b4274360d1ece", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f92241d2511f5f8dcfdb94abfa8b4274360d1ece", "html_url": "https://github.com/rust-lang/rust/commit/f92241d2511f5f8dcfdb94abfa8b4274360d1ece", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f92241d2511f5f8dcfdb94abfa8b4274360d1ece/comments", "author": {"login": "DrMeepster", "id": 19316085, "node_id": "MDQ6VXNlcjE5MzE2MDg1", "avatar_url": "https://avatars.githubusercontent.com/u/19316085?v=4", "gravatar_id": "", "url": "https://api.github.com/users/DrMeepster", "html_url": "https://github.com/DrMeepster", "followers_url": "https://api.github.com/users/DrMeepster/followers", "following_url": "https://api.github.com/users/DrMeepster/following{/other_user}", "gists_url": "https://api.github.com/users/DrMeepster/gists{/gist_id}", "starred_url": "https://api.github.com/users/DrMeepster/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/DrMeepster/subscriptions", "organizations_url": "https://api.github.com/users/DrMeepster/orgs", "repos_url": "https://api.github.com/users/DrMeepster/repos", "events_url": "https://api.github.com/users/DrMeepster/events{/privacy}", "received_events_url": "https://api.github.com/users/DrMeepster/received_events", "type": "User", "site_admin": false}, "committer": {"login": "DrMeepster", "id": 19316085, "node_id": "MDQ6VXNlcjE5MzE2MDg1", "avatar_url": "https://avatars.githubusercontent.com/u/19316085?v=4", "gravatar_id": "", "url": "https://api.github.com/users/DrMeepster", "html_url": "https://github.com/DrMeepster", "followers_url": "https://api.github.com/users/DrMeepster/followers", "following_url": "https://api.github.com/users/DrMeepster/following{/other_user}", "gists_url": "https://api.github.com/users/DrMeepster/gists{/gist_id}", "starred_url": "https://api.github.com/users/DrMeepster/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/DrMeepster/subscriptions", "organizations_url": "https://api.github.com/users/DrMeepster/orgs", "repos_url": "https://api.github.com/users/DrMeepster/repos", "events_url": "https://api.github.com/users/DrMeepster/events{/privacy}", "received_events_url": "https://api.github.com/users/DrMeepster/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5a97090b04262f3960323d16fe062b969466994e", "url": "https://api.github.com/repos/rust-lang/rust/commits/5a97090b04262f3960323d16fe062b969466994e", "html_url": "https://github.com/rust-lang/rust/commit/5a97090b04262f3960323d16fe062b969466994e"}], "stats": {"total": 9, "additions": 8, "deletions": 1}, "files": [{"sha": "a75dbc76278df6b058c6c1bad67e549c6de5e8dc", "filename": "library/std/src/io/copy.rs", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/f92241d2511f5f8dcfdb94abfa8b4274360d1ece/library%2Fstd%2Fsrc%2Fio%2Fcopy.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f92241d2511f5f8dcfdb94abfa8b4274360d1ece/library%2Fstd%2Fsrc%2Fio%2Fcopy.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fio%2Fcopy.rs?ref=f92241d2511f5f8dcfdb94abfa8b4274360d1ece", "patch": "@@ -83,21 +83,28 @@ impl<I: Write> BufferedCopySpec for BufWriter<I> {\n         }\n \n         let mut len = 0;\n+        let mut init = 0;\n \n         loop {\n             let buf = writer.buffer_mut();\n             let mut read_buf = ReadBuf::uninit(buf.spare_capacity_mut());\n \n+            // SAFETY: init is either 0 or the initialized_len of the previous iteration\n+            unsafe {\n+                read_buf.assume_init(init);\n+            }\n+\n             if read_buf.capacity() >= DEFAULT_BUF_SIZE {\n                 match reader.read_buf(&mut read_buf) {\n-                    //Ok(0) => return Ok(len), // EOF reached\n                     Ok(()) => {\n                         let bytes_read = read_buf.filled_len();\n \n                         if bytes_read == 0 {\n                             return Ok(len);\n                         }\n \n+                        init = read_buf.initialized_len();\n+\n                         // SAFETY: ReadBuf guarantees all of its filled bytes are init\n                         unsafe { buf.set_len(buf.len() + bytes_read) };\n                         len += bytes_read as u64;"}]}