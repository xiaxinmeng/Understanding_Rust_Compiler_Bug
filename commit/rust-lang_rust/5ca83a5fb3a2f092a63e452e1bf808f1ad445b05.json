{"sha": "5ca83a5fb3a2f092a63e452e1bf808f1ad445b05", "node_id": "C_kwDOAAsO6NoAKDVjYTgzYTVmYjNhMmYwOTJhNjNlNDUyZTFiZjgwOGYxYWQ0NDViMDU", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2021-12-30T11:20:35Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2022-01-01T15:58:30Z"}, "message": "internal: add tests for patterns", "tree": {"sha": "b6b2298105bb225e160a2733b6c18f864548b7cf", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b6b2298105bb225e160a2733b6c18f864548b7cf"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5ca83a5fb3a2f092a63e452e1bf808f1ad445b05", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5ca83a5fb3a2f092a63e452e1bf808f1ad445b05", "html_url": "https://github.com/rust-lang/rust/commit/5ca83a5fb3a2f092a63e452e1bf808f1ad445b05", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5ca83a5fb3a2f092a63e452e1bf808f1ad445b05/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3d63abf1d868218613f33dc59968d3671f7f14a8", "url": "https://api.github.com/repos/rust-lang/rust/commits/3d63abf1d868218613f33dc59968d3671f7f14a8", "html_url": "https://github.com/rust-lang/rust/commit/3d63abf1d868218613f33dc59968d3671f7f14a8"}], "stats": {"total": 10, "additions": 10, "deletions": 0}, "files": [{"sha": "18d9ece2a2caae5cf66793a4809be8d3434eee44", "filename": "crates/parser/src/tests/entries.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/5ca83a5fb3a2f092a63e452e1bf808f1ad445b05/crates%2Fparser%2Fsrc%2Ftests%2Fentries.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5ca83a5fb3a2f092a63e452e1bf808f1ad445b05/crates%2Fparser%2Fsrc%2Ftests%2Fentries.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Fsrc%2Ftests%2Fentries.rs?ref=5ca83a5fb3a2f092a63e452e1bf808f1ad445b05", "patch": "@@ -21,12 +21,22 @@ fn stmt() {\n     check_prefix(PrefixEntryPoint::Stmt, \"92; fn\", \"92\");\n     check_prefix(PrefixEntryPoint::Stmt, \"let _ = 92; 1\", \"let _ = 92\");\n     check_prefix(PrefixEntryPoint::Stmt, \"pub fn f() {} = 92\", \"pub fn f() {}\");\n+    check_prefix(PrefixEntryPoint::Stmt, \"struct S;;\", \"struct S;\");\n+    check_prefix(PrefixEntryPoint::Stmt, \"fn f() {};\", \"fn f() {}\");\n     check_prefix(PrefixEntryPoint::Stmt, \";;;\", \";\");\n     check_prefix(PrefixEntryPoint::Stmt, \"+\", \"+\");\n     check_prefix(PrefixEntryPoint::Stmt, \"@\", \"@\");\n     check_prefix(PrefixEntryPoint::Stmt, \"loop {} - 1\", \"loop {}\");\n }\n \n+#[test]\n+fn pat() {\n+    check_prefix(PrefixEntryPoint::Pat, \"x y\", \"x\");\n+    check_prefix(PrefixEntryPoint::Pat, \"fn f() {}\", \"fn\");\n+    // FIXME: this one is wrong\n+    check_prefix(PrefixEntryPoint::Pat, \".. ..\", \".. ..\");\n+}\n+\n fn check_prefix(entry: PrefixEntryPoint, input: &str, prefix: &str) {\n     let lexed = LexedStr::new(input);\n     let input = lexed.to_input();"}]}