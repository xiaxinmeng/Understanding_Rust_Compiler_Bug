{"sha": "464dd814ca6426638e9fe399ba8527a9dba9ca5e", "node_id": "C_kwDOAAsO6NoAKDQ2NGRkODE0Y2E2NDI2NjM4ZTlmZTM5OWJhODUyN2E5ZGJhOWNhNWU", "commit": {"author": {"name": "Lukas Wirth", "email": "lukastw97@gmail.com", "date": "2022-03-03T21:59:34Z"}, "committer": {"name": "Lukas Wirth", "email": "lukastw97@gmail.com", "date": "2022-03-03T21:59:34Z"}, "message": "slightly improve highlighting performance for derive annotated items", "tree": {"sha": "2d6fe785fc147ecc2c641c5a7361a98d8b361cc0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2d6fe785fc147ecc2c641c5a7361a98d8b361cc0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/464dd814ca6426638e9fe399ba8527a9dba9ca5e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/464dd814ca6426638e9fe399ba8527a9dba9ca5e", "html_url": "https://github.com/rust-lang/rust/commit/464dd814ca6426638e9fe399ba8527a9dba9ca5e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/464dd814ca6426638e9fe399ba8527a9dba9ca5e/comments", "author": {"login": "Veykril", "id": 3757771, "node_id": "MDQ6VXNlcjM3NTc3NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/3757771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veykril", "html_url": "https://github.com/Veykril", "followers_url": "https://api.github.com/users/Veykril/followers", "following_url": "https://api.github.com/users/Veykril/following{/other_user}", "gists_url": "https://api.github.com/users/Veykril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veykril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veykril/subscriptions", "organizations_url": "https://api.github.com/users/Veykril/orgs", "repos_url": "https://api.github.com/users/Veykril/repos", "events_url": "https://api.github.com/users/Veykril/events{/privacy}", "received_events_url": "https://api.github.com/users/Veykril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Veykril", "id": 3757771, "node_id": "MDQ6VXNlcjM3NTc3NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/3757771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veykril", "html_url": "https://github.com/Veykril", "followers_url": "https://api.github.com/users/Veykril/followers", "following_url": "https://api.github.com/users/Veykril/following{/other_user}", "gists_url": "https://api.github.com/users/Veykril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veykril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veykril/subscriptions", "organizations_url": "https://api.github.com/users/Veykril/orgs", "repos_url": "https://api.github.com/users/Veykril/repos", "events_url": "https://api.github.com/users/Veykril/events{/privacy}", "received_events_url": "https://api.github.com/users/Veykril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8ded3ec9cf1b0bf2f08cb849ea969c65c3d497c0", "url": "https://api.github.com/repos/rust-lang/rust/commits/8ded3ec9cf1b0bf2f08cb849ea969c65c3d497c0", "html_url": "https://github.com/rust-lang/rust/commit/8ded3ec9cf1b0bf2f08cb849ea969c65c3d497c0"}], "stats": {"total": 25, "additions": 13, "deletions": 12}, "files": [{"sha": "776a0f8295287db7c053a6c46dfb630e3d4c08e9", "filename": "crates/ide/src/syntax_highlighting.rs", "status": "modified", "additions": 11, "deletions": 5, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/464dd814ca6426638e9fe399ba8527a9dba9ca5e/crates%2Fide%2Fsrc%2Fsyntax_highlighting.rs", "raw_url": "https://github.com/rust-lang/rust/raw/464dd814ca6426638e9fe399ba8527a9dba9ca5e/crates%2Fide%2Fsrc%2Fsyntax_highlighting.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fsyntax_highlighting.rs?ref=464dd814ca6426638e9fe399ba8527a9dba9ca5e", "patch": "@@ -206,6 +206,7 @@ fn traverse(\n \n     let mut current_macro_call: Option<ast::MacroCall> = None;\n     let mut current_attr_call = None;\n+    let mut current_derive_call = None;\n     let mut current_macro: Option<ast::Macro> = None;\n     let mut macro_highlighter = MacroHighlighter::default();\n     let mut inside_attribute = false;\n@@ -249,7 +250,7 @@ fn traverse(\n                     };\n                     match adt {\n                         Some(adt) if sema.is_derive_annotated(&adt) => {\n-                            current_attr_call = Some(adt.into());\n+                            current_derive_call = Some(ast::Item::from(adt));\n                         }\n                         _ => (),\n                     }\n@@ -273,7 +274,10 @@ fn traverse(\n                     macro_highlighter = MacroHighlighter::default();\n                 }\n                 Some(item) if current_attr_call.as_ref().map_or(false, |it| *it == item) => {\n-                    current_attr_call = None\n+                    current_attr_call = None;\n+                }\n+                Some(item) if current_derive_call.as_ref().map_or(false, |it| *it == item) => {\n+                    current_derive_call = None;\n                 }\n                 None if ast::Attr::can_cast(node.kind()) => inside_attribute = false,\n                 _ => (),\n@@ -301,17 +305,19 @@ fn traverse(\n         // as calling `descend_into_macros_single` gets rather expensive if done for every single token\n         // additionally, do not descend into comments, descending maps down to doc attributes which get\n         // tagged as string literals.\n-        let descend_token = (current_macro_call.is_some() || current_attr_call.is_some())\n+        let descend_token = (current_macro_call.is_some()\n+            || current_attr_call.is_some()\n+            || current_derive_call.is_some())\n             && element.kind() != COMMENT;\n         let element_to_highlight = if descend_token {\n             let token = match &element {\n                 NodeOrToken::Node(_) => continue,\n                 NodeOrToken::Token(tok) => tok.clone(),\n             };\n-            let in_mcall_outside_tt = current_macro_call.is_some()\n+            let in_mcall_outside_tt = current_attr_call.is_none()\n                 && token.parent().as_ref().map(SyntaxNode::kind) != Some(TOKEN_TREE);\n             let token = match in_mcall_outside_tt {\n-                // not in the macros token tree, don't attempt to descend\n+                // not in the macros/derives token tree, don't attempt to descend\n                 true => token,\n                 false => sema.descend_into_macros_single(token),\n             };"}, {"sha": "9e36b56d283152cc6b01f27bdd3b2f64414663b3", "filename": "crates/ide/src/syntax_highlighting/test_data/highlight_lifetimes.html", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/464dd814ca6426638e9fe399ba8527a9dba9ca5e/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Ftest_data%2Fhighlight_lifetimes.html", "raw_url": "https://github.com/rust-lang/rust/raw/464dd814ca6426638e9fe399ba8527a9dba9ca5e/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Ftest_data%2Fhighlight_lifetimes.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Ftest_data%2Fhighlight_lifetimes.html?ref=464dd814ca6426638e9fe399ba8527a9dba9ca5e", "patch": "@@ -51,7 +51,4 @@\n <span class=\"keyword\">where</span>\n     <span class=\"lifetime\">'a</span><span class=\"colon\">:</span> <span class=\"lifetime\">'a</span><span class=\"comma\">,</span>\n     <span class=\"lifetime\">'static</span><span class=\"colon\">:</span> <span class=\"lifetime\">'static</span>\n-<span class=\"brace\">{</span>\n-\n-<span class=\"brace\">}</span>\n-</code></pre>\n\\ No newline at end of file\n+<span class=\"brace\">{</span><span class=\"brace\">}</span></code></pre>\n\\ No newline at end of file"}, {"sha": "27686ab9447be409ed4ec8a81bb63d40a296353a", "filename": "crates/ide/src/syntax_highlighting/tests.rs", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/464dd814ca6426638e9fe399ba8527a9dba9ca5e/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/464dd814ca6426638e9fe399ba8527a9dba9ca5e/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Ftests.rs?ref=464dd814ca6426638e9fe399ba8527a9dba9ca5e", "patch": "@@ -327,9 +327,7 @@ impl<'a> Foo<'_, 'a, 'static>\n where\n     'a: 'a,\n     'static: 'static\n-{\n-\n-}\n+{}\n \"#,\n         expect_file![\"./test_data/highlight_lifetimes.html\"],\n         false,"}]}