{"sha": "c53ceba56f0b0ec5d3ee20a19f0f6aace6d26228", "node_id": "C_kwDOAAsO6NoAKGM1M2NlYmE1NmYwYjBlYzVkM2VlMjBhMTlmMGY2YWFjZTZkMjYyMjg", "commit": {"author": {"name": "disco07", "email": "koneenok@outlook.fr", "date": "2023-05-11T05:20:02Z"}, "committer": {"name": "disco07", "email": "koneenok@outlook.fr", "date": "2023-05-11T05:20:02Z"}, "message": "update tests", "tree": {"sha": "a970c31dcc64af9bda7a4201c6273b2b5c29fc5e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a970c31dcc64af9bda7a4201c6273b2b5c29fc5e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c53ceba56f0b0ec5d3ee20a19f0f6aace6d26228", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c53ceba56f0b0ec5d3ee20a19f0f6aace6d26228", "html_url": "https://github.com/rust-lang/rust/commit/c53ceba56f0b0ec5d3ee20a19f0f6aace6d26228", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c53ceba56f0b0ec5d3ee20a19f0f6aace6d26228/comments", "author": {"login": "disco07", "id": 60718751, "node_id": "MDQ6VXNlcjYwNzE4NzUx", "avatar_url": "https://avatars.githubusercontent.com/u/60718751?v=4", "gravatar_id": "", "url": "https://api.github.com/users/disco07", "html_url": "https://github.com/disco07", "followers_url": "https://api.github.com/users/disco07/followers", "following_url": "https://api.github.com/users/disco07/following{/other_user}", "gists_url": "https://api.github.com/users/disco07/gists{/gist_id}", "starred_url": "https://api.github.com/users/disco07/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/disco07/subscriptions", "organizations_url": "https://api.github.com/users/disco07/orgs", "repos_url": "https://api.github.com/users/disco07/repos", "events_url": "https://api.github.com/users/disco07/events{/privacy}", "received_events_url": "https://api.github.com/users/disco07/received_events", "type": "User", "site_admin": false}, "committer": {"login": "disco07", "id": 60718751, "node_id": "MDQ6VXNlcjYwNzE4NzUx", "avatar_url": "https://avatars.githubusercontent.com/u/60718751?v=4", "gravatar_id": "", "url": "https://api.github.com/users/disco07", "html_url": "https://github.com/disco07", "followers_url": "https://api.github.com/users/disco07/followers", "following_url": "https://api.github.com/users/disco07/following{/other_user}", "gists_url": "https://api.github.com/users/disco07/gists{/gist_id}", "starred_url": "https://api.github.com/users/disco07/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/disco07/subscriptions", "organizations_url": "https://api.github.com/users/disco07/orgs", "repos_url": "https://api.github.com/users/disco07/repos", "events_url": "https://api.github.com/users/disco07/events{/privacy}", "received_events_url": "https://api.github.com/users/disco07/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3991dd10b524637a113824ac3272620bd9a1c409", "url": "https://api.github.com/repos/rust-lang/rust/commits/3991dd10b524637a113824ac3272620bd9a1c409", "html_url": "https://github.com/rust-lang/rust/commit/3991dd10b524637a113824ac3272620bd9a1c409"}], "stats": {"total": 52, "additions": 30, "deletions": 22}, "files": [{"sha": "94c89049189eb373d9057d0506a58f46f04d5609", "filename": "tests/ui/redundant_pattern_matching_option.fixed", "status": "modified", "additions": 9, "deletions": 5, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/c53ceba56f0b0ec5d3ee20a19f0f6aace6d26228/tests%2Fui%2Fredundant_pattern_matching_option.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/c53ceba56f0b0ec5d3ee20a19f0f6aace6d26228/tests%2Fui%2Fredundant_pattern_matching_option.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fredundant_pattern_matching_option.fixed?ref=c53ceba56f0b0ec5d3ee20a19f0f6aace6d26228", "patch": "@@ -91,15 +91,19 @@ fn issue7921() {\n }\n \n fn issue10726() {\n-    Some(42).is_some();\n+    let x = Some(42);\n+    let y = None::<()>;\n \n-    Some(42).is_none();\n+    x.is_some();\n \n-    None::<()>.is_some();\n+    x.is_none();\n \n-    None::<()>.is_none();\n+    y.is_some();\n+\n+    y.is_none();\n \n-    match Some(42) {\n+    // Don't lint\n+    match x {\n         Some(21) => true,\n         _ => false,\n     };"}, {"sha": "303a0280e9d912ec1739db76a16e07ea74fa8d26", "filename": "tests/ui/redundant_pattern_matching_option.rs", "status": "modified", "additions": 9, "deletions": 5, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/c53ceba56f0b0ec5d3ee20a19f0f6aace6d26228/tests%2Fui%2Fredundant_pattern_matching_option.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c53ceba56f0b0ec5d3ee20a19f0f6aace6d26228/tests%2Fui%2Fredundant_pattern_matching_option.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fredundant_pattern_matching_option.rs?ref=c53ceba56f0b0ec5d3ee20a19f0f6aace6d26228", "patch": "@@ -106,27 +106,31 @@ fn issue7921() {\n }\n \n fn issue10726() {\n-    match Some(42) {\n+    let x = Some(42);\n+    let y = None::<()>;\n+\n+    match x {\n         Some(_) => true,\n         _ => false,\n     };\n \n-    match Some(42) {\n+    match x {\n         None => true,\n         _ => false,\n     };\n \n-    match None::<()> {\n+    match y {\n         Some(_) => true,\n         _ => false,\n     };\n \n-    match None::<()> {\n+    match y {\n         None => true,\n         _ => false,\n     };\n \n-    match Some(42) {\n+    // Don't lint\n+    match x {\n         Some(21) => true,\n         _ => false,\n     };"}, {"sha": "eb4d87ba2b5e9f11ba344ff0466769152110f6e1", "filename": "tests/ui/redundant_pattern_matching_option.stderr", "status": "modified", "additions": 12, "deletions": 12, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/c53ceba56f0b0ec5d3ee20a19f0f6aace6d26228/tests%2Fui%2Fredundant_pattern_matching_option.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/c53ceba56f0b0ec5d3ee20a19f0f6aace6d26228/tests%2Fui%2Fredundant_pattern_matching_option.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fredundant_pattern_matching_option.stderr?ref=c53ceba56f0b0ec5d3ee20a19f0f6aace6d26228", "patch": "@@ -149,40 +149,40 @@ LL |     if let None = *&None::<()> {}\n    |     -------^^^^--------------- help: try this: `if (&None::<()>).is_none()`\n \n error: redundant pattern matching, consider using `is_some()`\n-  --> $DIR/redundant_pattern_matching_option.rs:109:5\n+  --> $DIR/redundant_pattern_matching_option.rs:112:5\n    |\n-LL | /     match Some(42) {\n+LL | /     match x {\n LL | |         Some(_) => true,\n LL | |         _ => false,\n LL | |     };\n-   | |_____^ help: try this: `Some(42).is_some()`\n+   | |_____^ help: try this: `x.is_some()`\n \n error: redundant pattern matching, consider using `is_none()`\n-  --> $DIR/redundant_pattern_matching_option.rs:114:5\n+  --> $DIR/redundant_pattern_matching_option.rs:117:5\n    |\n-LL | /     match Some(42) {\n+LL | /     match x {\n LL | |         None => true,\n LL | |         _ => false,\n LL | |     };\n-   | |_____^ help: try this: `Some(42).is_none()`\n+   | |_____^ help: try this: `x.is_none()`\n \n error: redundant pattern matching, consider using `is_some()`\n-  --> $DIR/redundant_pattern_matching_option.rs:119:5\n+  --> $DIR/redundant_pattern_matching_option.rs:122:5\n    |\n-LL | /     match None::<()> {\n+LL | /     match y {\n LL | |         Some(_) => true,\n LL | |         _ => false,\n LL | |     };\n-   | |_____^ help: try this: `None::<()>.is_some()`\n+   | |_____^ help: try this: `y.is_some()`\n \n error: redundant pattern matching, consider using `is_none()`\n-  --> $DIR/redundant_pattern_matching_option.rs:124:5\n+  --> $DIR/redundant_pattern_matching_option.rs:127:5\n    |\n-LL | /     match None::<()> {\n+LL | /     match y {\n LL | |         None => true,\n LL | |         _ => false,\n LL | |     };\n-   | |_____^ help: try this: `None::<()>.is_none()`\n+   | |_____^ help: try this: `y.is_none()`\n \n error: aborting due to 26 previous errors\n "}]}