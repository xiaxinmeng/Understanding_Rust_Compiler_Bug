{"sha": "db171649d3e2298859740d164f92e99c8bd3cf4b", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRiMTcxNjQ5ZDNlMjI5ODg1OTc0MGQxNjRmOTJlOTljOGJkM2NmNGI=", "commit": {"author": {"name": "ljedrz", "email": "ljedrz@gmail.com", "date": "2018-10-02T09:00:11Z"}, "committer": {"name": "ljedrz", "email": "ljedrz@gmail.com", "date": "2018-10-03T07:04:02Z"}, "message": "rustc/ty: calculate span after a possible early continue", "tree": {"sha": "29e95c356fcd800cb7d09c939a5f5dff41df63d1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/29e95c356fcd800cb7d09c939a5f5dff41df63d1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/db171649d3e2298859740d164f92e99c8bd3cf4b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/db171649d3e2298859740d164f92e99c8bd3cf4b", "html_url": "https://github.com/rust-lang/rust/commit/db171649d3e2298859740d164f92e99c8bd3cf4b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/db171649d3e2298859740d164f92e99c8bd3cf4b/comments", "author": {"login": "ljedrz", "id": 3750347, "node_id": "MDQ6VXNlcjM3NTAzNDc=", "avatar_url": "https://avatars.githubusercontent.com/u/3750347?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ljedrz", "html_url": "https://github.com/ljedrz", "followers_url": "https://api.github.com/users/ljedrz/followers", "following_url": "https://api.github.com/users/ljedrz/following{/other_user}", "gists_url": "https://api.github.com/users/ljedrz/gists{/gist_id}", "starred_url": "https://api.github.com/users/ljedrz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ljedrz/subscriptions", "organizations_url": "https://api.github.com/users/ljedrz/orgs", "repos_url": "https://api.github.com/users/ljedrz/repos", "events_url": "https://api.github.com/users/ljedrz/events{/privacy}", "received_events_url": "https://api.github.com/users/ljedrz/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ljedrz", "id": 3750347, "node_id": "MDQ6VXNlcjM3NTAzNDc=", "avatar_url": "https://avatars.githubusercontent.com/u/3750347?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ljedrz", "html_url": "https://github.com/ljedrz", "followers_url": "https://api.github.com/users/ljedrz/followers", "following_url": "https://api.github.com/users/ljedrz/following{/other_user}", "gists_url": "https://api.github.com/users/ljedrz/gists{/gist_id}", "starred_url": "https://api.github.com/users/ljedrz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ljedrz/subscriptions", "organizations_url": "https://api.github.com/users/ljedrz/orgs", "repos_url": "https://api.github.com/users/ljedrz/repos", "events_url": "https://api.github.com/users/ljedrz/events{/privacy}", "received_events_url": "https://api.github.com/users/ljedrz/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "774881d78ef39069df2374586e28d1eb82507fe1", "url": "https://api.github.com/repos/rust-lang/rust/commits/774881d78ef39069df2374586e28d1eb82507fe1", "html_url": "https://github.com/rust-lang/rust/commit/774881d78ef39069df2374586e28d1eb82507fe1"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "e4141211a4fe521bde857592de08ca0d80d327ef", "filename": "src/librustc/ty/util.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/db171649d3e2298859740d164f92e99c8bd3cf4b/src%2Flibrustc%2Fty%2Futil.rs", "raw_url": "https://github.com/rust-lang/rust/raw/db171649d3e2298859740d164f92e99c8bd3cf4b/src%2Flibrustc%2Fty%2Futil.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Futil.rs?ref=db171649d3e2298859740d164f92e99c8bd3cf4b", "patch": "@@ -205,11 +205,11 @@ impl<'tcx> ty::ParamEnv<'tcx> {\n             let mut infringing = Vec::new();\n             for variant in &adt.variants {\n                 for field in &variant.fields {\n-                    let span = tcx.def_span(field.did);\n                     let ty = field.ty(tcx, substs);\n                     if ty.references_error() {\n                         continue;\n                     }\n+                    let span = tcx.def_span(field.did);\n                     let cause = ObligationCause { span, ..ObligationCause::dummy() };\n                     let ctx = traits::FulfillmentContext::new();\n                     match traits::fully_normalize(&infcx, ctx, cause, self, &ty) {"}]}