{"sha": "c29a502e2549aba7e47a6f40581e5ccf74b5f481", "node_id": "MDY6Q29tbWl0NzI0NzEyOmMyOWE1MDJlMjU0OWFiYTdlNDdhNmY0MDU4MWU1Y2NmNzRiNWY0ODE=", "commit": {"author": {"name": "Veetaha", "email": "gerzoh1@gmail.com", "date": "2020-03-07T22:01:48Z"}, "committer": {"name": "Veetaha", "email": "gerzoh1@gmail.com", "date": "2020-03-07T22:01:48Z"}, "message": "vscode: care about alwaysDownloadServer option before asking\n\nAlso renamed BinarySource to ArtifactSource in anticipation of\nnightlies installation that requires downloading\nnot a binary itself but .vsix package, thus generalized\nto `artifact` term", "tree": {"sha": "72e84436a18794f40ffc93757d4c29075f9c3de8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/72e84436a18794f40ffc93757d4c29075f9c3de8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c29a502e2549aba7e47a6f40581e5ccf74b5f481", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c29a502e2549aba7e47a6f40581e5ccf74b5f481", "html_url": "https://github.com/rust-lang/rust/commit/c29a502e2549aba7e47a6f40581e5ccf74b5f481", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c29a502e2549aba7e47a6f40581e5ccf74b5f481/comments", "author": null, "committer": null, "parents": [{"sha": "9dae94a78dd5b660dd97f884b91067c55b4a418e", "url": "https://api.github.com/repos/rust-lang/rust/commits/9dae94a78dd5b660dd97f884b91067c55b4a418e", "html_url": "https://github.com/rust-lang/rust/commit/9dae94a78dd5b660dd97f884b91067c55b4a418e"}], "stats": {"total": 54, "additions": 31, "deletions": 23}, "files": [{"sha": "c4acb632dbfec4fd92714e5a23e36c761ddf8999", "filename": "editors/code/src/config.ts", "status": "modified", "additions": 6, "deletions": 5, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/c29a502e2549aba7e47a6f40581e5ccf74b5f481/editors%2Fcode%2Fsrc%2Fconfig.ts", "raw_url": "https://github.com/rust-lang/rust/raw/c29a502e2549aba7e47a6f40581e5ccf74b5f481/editors%2Fcode%2Fsrc%2Fconfig.ts", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fsrc%2Fconfig.ts?ref=c29a502e2549aba7e47a6f40581e5ccf74b5f481", "patch": "@@ -1,6 +1,6 @@\n import * as os from \"os\";\n import * as vscode from 'vscode';\n-import { BinarySource } from \"./installation/interfaces\";\n+import { ArtifactSource } from \"./installation/interfaces\";\n import { log } from \"./util\";\n \n const RA_LSP_DEBUG = process.env.__RA_LSP_SERVER_DEBUG;\n@@ -114,12 +114,12 @@ export class Config {\n         }\n     }\n \n-    get serverSource(): null | BinarySource {\n+    get serverSource(): null | ArtifactSource {\n         const serverPath = RA_LSP_DEBUG ?? this.cfg.get<null | string>(\"serverPath\");\n \n         if (serverPath) {\n             return {\n-                type: BinarySource.Type.ExplicitPath,\n+                type: ArtifactSource.Type.ExplicitPath,\n                 path: Config.replaceTildeWithHomeDir(serverPath)\n             };\n         }\n@@ -129,11 +129,12 @@ export class Config {\n         if (!prebuiltBinaryName) return null;\n \n         return {\n-            type: BinarySource.Type.GithubRelease,\n+            type: ArtifactSource.Type.GithubRelease,\n             dir: this.ctx.globalStoragePath,\n             file: prebuiltBinaryName,\n             storage: this.ctx.globalState,\n-            version: Config.extensionVersion,\n+            tag: Config.extensionVersion,\n+            askBeforeDownload: !(this.cfg.get(\"alwaysDownloadServer\") as boolean),\n             repo: {\n                 name: \"rust-analyzer\",\n                 owner: \"rust-analyzer\","}, {"sha": "50b635921860a1ced73fee3824e18476f2db65af", "filename": "editors/code/src/installation/interfaces.ts", "status": "modified", "additions": 10, "deletions": 5, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/c29a502e2549aba7e47a6f40581e5ccf74b5f481/editors%2Fcode%2Fsrc%2Finstallation%2Finterfaces.ts", "raw_url": "https://github.com/rust-lang/rust/raw/c29a502e2549aba7e47a6f40581e5ccf74b5f481/editors%2Fcode%2Fsrc%2Finstallation%2Finterfaces.ts", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fsrc%2Finstallation%2Finterfaces.ts?ref=c29a502e2549aba7e47a6f40581e5ccf74b5f481", "patch": "@@ -14,14 +14,14 @@ export interface ArtifactReleaseInfo {\n }\n \n /**\n- * Represents the source of a binary artifact which is either specified by the user\n+ * Represents the source of a an artifact which is either specified by the user\n  * explicitly, or bundled by this extension from GitHub releases.\n  */\n-export type BinarySource = BinarySource.ExplicitPath | BinarySource.GithubRelease;\n+export type ArtifactSource = ArtifactSource.ExplicitPath | ArtifactSource.GithubRelease;\n \n-export namespace BinarySource {\n+export namespace ArtifactSource {\n     /**\n-     * Type tag for `BinarySource` discriminated union.\n+     * Type tag for `ArtifactSource` discriminated union.\n      */\n     export const enum Type { ExplicitPath, GithubRelease }\n \n@@ -56,13 +56,18 @@ export namespace BinarySource {\n         /**\n          * Tag of github release that denotes a version required by this extension.\n          */\n-        version: string;\n+        tag: string;\n \n         /**\n          * Object that provides `get()/update()` operations to store metadata\n          * about the actual binary, e.g. its actual version.\n          */\n         storage: vscode.Memento;\n+\n+        /**\n+         * Ask for the user permission before downloading the artifact.\n+         */\n+        askBeforeDownload: boolean;\n     }\n \n }"}, {"sha": "ef1c45ff65906244d79cb9018eb78b950260f13e", "filename": "editors/code/src/installation/server.ts", "status": "modified", "additions": 15, "deletions": 13, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/c29a502e2549aba7e47a6f40581e5ccf74b5f481/editors%2Fcode%2Fsrc%2Finstallation%2Fserver.ts", "raw_url": "https://github.com/rust-lang/rust/raw/c29a502e2549aba7e47a6f40581e5ccf74b5f481/editors%2Fcode%2Fsrc%2Finstallation%2Fserver.ts", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fsrc%2Finstallation%2Fserver.ts?ref=c29a502e2549aba7e47a6f40581e5ccf74b5f481", "patch": "@@ -3,12 +3,12 @@ import * as path from \"path\";\n import { promises as dns } from \"dns\";\n import { spawnSync } from \"child_process\";\n \n-import { BinarySource } from \"./interfaces\";\n+import { ArtifactSource } from \"./interfaces\";\n import { fetchArtifactReleaseInfo } from \"./fetch_artifact_release_info\";\n import { downloadArtifact } from \"./download_artifact\";\n import { log, assert } from \"../util\";\n \n-export async function ensureServerBinary(source: null | BinarySource): Promise<null | string> {\n+export async function ensureServerBinary(source: null | ArtifactSource): Promise<null | string> {\n     if (!source) {\n         vscode.window.showErrorMessage(\n             \"Unfortunately we don't ship binaries for your platform yet. \" +\n@@ -22,7 +22,7 @@ export async function ensureServerBinary(source: null | BinarySource): Promise<n\n     }\n \n     switch (source.type) {\n-        case BinarySource.Type.ExplicitPath: {\n+        case ArtifactSource.Type.ExplicitPath: {\n             if (isBinaryAvailable(source.path)) {\n                 return source.path;\n             }\n@@ -34,24 +34,26 @@ export async function ensureServerBinary(source: null | BinarySource): Promise<n\n             );\n             return null;\n         }\n-        case BinarySource.Type.GithubRelease: {\n+        case ArtifactSource.Type.GithubRelease: {\n             const prebuiltBinaryPath = path.join(source.dir, source.file);\n \n             const installedVersion: null | string = getServerVersion(source.storage);\n-            const requiredVersion: string = source.version;\n+            const requiredVersion: string = source.tag;\n \n             log.debug(\"Installed version:\", installedVersion, \"required:\", requiredVersion);\n \n             if (isBinaryAvailable(prebuiltBinaryPath) && installedVersion === requiredVersion) {\n                 return prebuiltBinaryPath;\n             }\n \n-            const userResponse = await vscode.window.showInformationMessage(\n-                `Language server version ${source.version} for rust-analyzer is not installed. ` +\n-                \"Do you want to download it now?\",\n-                \"Download now\", \"Cancel\"\n-            );\n-            if (userResponse !== \"Download now\") return null;\n+            if (source.askBeforeDownload) {\n+                const userResponse = await vscode.window.showInformationMessage(\n+                    `Language server version ${source.tag} for rust-analyzer is not installed. ` +\n+                    \"Do you want to download it now?\",\n+                    \"Download now\", \"Cancel\"\n+                );\n+                if (userResponse !== \"Download now\") return null;\n+            }\n \n             if (!await downloadServer(source)) return null;\n \n@@ -60,9 +62,9 @@ export async function ensureServerBinary(source: null | BinarySource): Promise<n\n     }\n }\n \n-async function downloadServer(source: BinarySource.GithubRelease): Promise<boolean> {\n+async function downloadServer(source: ArtifactSource.GithubRelease): Promise<boolean> {\n     try {\n-        const releaseInfo = await fetchArtifactReleaseInfo(source.repo, source.file, source.version);\n+        const releaseInfo = await fetchArtifactReleaseInfo(source.repo, source.file, source.tag);\n \n         await downloadArtifact(releaseInfo, source.file, source.dir, \"language server\");\n         await setServerVersion(source.storage, releaseInfo.releaseName);"}]}