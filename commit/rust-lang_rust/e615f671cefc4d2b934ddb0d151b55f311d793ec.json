{"sha": "e615f671cefc4d2b934ddb0d151b55f311d793ec", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU2MTVmNjcxY2VmYzRkMmI5MzRkZGIwZDE1MWI1NWYzMTFkNzkzZWM=", "commit": {"author": {"name": "Scott Olson", "email": "scott@solson.me", "date": "2016-12-16T08:06:03Z"}, "committer": {"name": "Scott Olson", "email": "scott@solson.me", "date": "2016-12-17T06:03:34Z"}, "message": "Remove potentially wrong PartialEq from PrimVal.", "tree": {"sha": "19a9615bcfa6fe514614d8a745aea79f254348b7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/19a9615bcfa6fe514614d8a745aea79f254348b7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e615f671cefc4d2b934ddb0d151b55f311d793ec", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e615f671cefc4d2b934ddb0d151b55f311d793ec", "html_url": "https://github.com/rust-lang/rust/commit/e615f671cefc4d2b934ddb0d151b55f311d793ec", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e615f671cefc4d2b934ddb0d151b55f311d793ec/comments", "author": {"login": "solson", "id": 26806, "node_id": "MDQ6VXNlcjI2ODA2", "avatar_url": "https://avatars.githubusercontent.com/u/26806?v=4", "gravatar_id": "", "url": "https://api.github.com/users/solson", "html_url": "https://github.com/solson", "followers_url": "https://api.github.com/users/solson/followers", "following_url": "https://api.github.com/users/solson/following{/other_user}", "gists_url": "https://api.github.com/users/solson/gists{/gist_id}", "starred_url": "https://api.github.com/users/solson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/solson/subscriptions", "organizations_url": "https://api.github.com/users/solson/orgs", "repos_url": "https://api.github.com/users/solson/repos", "events_url": "https://api.github.com/users/solson/events{/privacy}", "received_events_url": "https://api.github.com/users/solson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "solson", "id": 26806, "node_id": "MDQ6VXNlcjI2ODA2", "avatar_url": "https://avatars.githubusercontent.com/u/26806?v=4", "gravatar_id": "", "url": "https://api.github.com/users/solson", "html_url": "https://github.com/solson", "followers_url": "https://api.github.com/users/solson/followers", "following_url": "https://api.github.com/users/solson/following{/other_user}", "gists_url": "https://api.github.com/users/solson/gists{/gist_id}", "starred_url": "https://api.github.com/users/solson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/solson/subscriptions", "organizations_url": "https://api.github.com/users/solson/orgs", "repos_url": "https://api.github.com/users/solson/repos", "events_url": "https://api.github.com/users/solson/events{/privacy}", "received_events_url": "https://api.github.com/users/solson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "67e1627a5543bb504b5783cfd4d214d183e4be28", "url": "https://api.github.com/repos/rust-lang/rust/commits/67e1627a5543bb504b5783cfd4d214d183e4be28", "html_url": "https://github.com/rust-lang/rust/commit/67e1627a5543bb504b5783cfd4d214d183e4be28"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "72e64c6a6fd95c20ba8401f160cecfe74b20ee64", "filename": "src/terminator/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e615f671cefc4d2b934ddb0d151b55f311d793ec/src%2Fterminator%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e615f671cefc4d2b934ddb0d151b55f311d793ec/src%2Fterminator%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fterminator%2Fmod.rs?ref=e615f671cefc4d2b934ddb0d151b55f311d793ec", "patch": "@@ -53,7 +53,7 @@ impl<'a, 'tcx> EvalContext<'a, 'tcx> {\n                 for (index, const_val) in values.iter().enumerate() {\n                     let val = self.const_to_value(const_val)?;\n                     let prim = self.value_to_primval(val, discr_ty)?;\n-                    if discr_prim == prim {\n+                    if discr_prim.bits() == prim.bits() {\n                         target_block = targets[index];\n                         break;\n                     }"}, {"sha": "ae42cb9bfd32028870a2ddcb8023eb1bd523f339", "filename": "src/value.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e615f671cefc4d2b934ddb0d151b55f311d793ec/src%2Fvalue.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e615f671cefc4d2b934ddb0d151b55f311d793ec/src%2Fvalue.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fvalue.rs?ref=e615f671cefc4d2b934ddb0d151b55f311d793ec", "patch": "@@ -47,7 +47,7 @@ pub enum Value {\n /// `memory::Allocation`. It is in many ways like a small chunk of a `Allocation`, up to 8 bytes in\n /// size. Like a range of bytes in an `Allocation`, a `PrimVal` can either represent the raw bytes\n /// of a simple value, a pointer into another `Allocation`, or be undefined.\n-#[derive(Clone, Copy, Debug, PartialEq)]\n+#[derive(Clone, Copy, Debug)]\n pub enum PrimVal {\n     /// The raw bytes of a simple value.\n     Bytes(u64),"}]}