{"sha": "7cf710c66f5645193a765ededfed77eaec9a19a9", "node_id": "MDY6Q29tbWl0NzI0NzEyOjdjZjcxMGM2NmY1NjQ1MTkzYTc2NWVkZWRmZWQ3N2VhZWM5YTE5YTk=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2020-02-28T23:03:28Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-02-28T23:03:28Z"}, "message": "Merge #3372\n\n3372: vscode: migrate to more type-safe assert impl r=matklad a=Veetaha\n\nhttps://www.typescriptlang.org/docs/handbook/release-notes/typescript-3-7.html#assertion-functions\n\nCo-authored-by: Veetaha <gerzoh1@gmail.com>", "tree": {"sha": "37d90acc05413f8a0cca0b8c20b4bb84b0dbb41e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/37d90acc05413f8a0cca0b8c20b4bb84b0dbb41e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7cf710c66f5645193a765ededfed77eaec9a19a9", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJeWZxACRBK7hj4Ov3rIwAAdHIIAJMgWtLWWW90yoo07+YQrdd2\noYdxcxZReMQSQP79dqjxB54b2w2qrcTN7gr+VWRAhuQW8ppaZdhNGxmgr+XFwF7t\n792NCNG7nDKKTZHGfS1LPZmNbRaE8MVck4PDkv0z/yYXzon97E/FWbWpYrboSwM1\nqUV6bytBY2n7jGGHTa6XxyLdkdHByQOlHXKSU7ceHR5n6l0I2I1PMeFGuhUc6LvK\nV0/NwB1FSZDbeJEvljGhB8S3+rDFmsnv2SLM+HUkoF5UtNgs719FnZKHWMZlhicN\nDn5238fZBarSk4OQBwytLwkd6mEVec22rc14zXnjFczkIW8u5s06RavtdmOMlRI=\n=NkYw\n-----END PGP SIGNATURE-----\n", "payload": "tree 37d90acc05413f8a0cca0b8c20b4bb84b0dbb41e\nparent cc477edc6692608ca809ba39db274c5e837a3498\nparent 6dc598fa6331de6124a255527e37804d82372fdc\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1582931008 +0000\ncommitter GitHub <noreply@github.com> 1582931008 +0000\n\nMerge #3372\n\n3372: vscode: migrate to more type-safe assert impl r=matklad a=Veetaha\n\nhttps://www.typescriptlang.org/docs/handbook/release-notes/typescript-3-7.html#assertion-functions\n\nCo-authored-by: Veetaha <gerzoh1@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7cf710c66f5645193a765ededfed77eaec9a19a9", "html_url": "https://github.com/rust-lang/rust/commit/7cf710c66f5645193a765ededfed77eaec9a19a9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7cf710c66f5645193a765ededfed77eaec9a19a9/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cc477edc6692608ca809ba39db274c5e837a3498", "url": "https://api.github.com/repos/rust-lang/rust/commits/cc477edc6692608ca809ba39db274c5e837a3498", "html_url": "https://github.com/rust-lang/rust/commit/cc477edc6692608ca809ba39db274c5e837a3498"}, {"sha": "6dc598fa6331de6124a255527e37804d82372fdc", "url": "https://api.github.com/repos/rust-lang/rust/commits/6dc598fa6331de6124a255527e37804d82372fdc", "html_url": "https://github.com/rust-lang/rust/commit/6dc598fa6331de6124a255527e37804d82372fdc"}], "stats": {"total": 32, "additions": 19, "deletions": 13}, "files": [{"sha": "97e4d67c21d2f600a9401525e4aa706085c6214a", "filename": "editors/code/src/installation/download_artifact.ts", "status": "modified", "additions": 4, "deletions": 5, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/7cf710c66f5645193a765ededfed77eaec9a19a9/editors%2Fcode%2Fsrc%2Finstallation%2Fdownload_artifact.ts", "raw_url": "https://github.com/rust-lang/rust/raw/7cf710c66f5645193a765ededfed77eaec9a19a9/editors%2Fcode%2Fsrc%2Finstallation%2Fdownload_artifact.ts", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fsrc%2Finstallation%2Fdownload_artifact.ts?ref=7cf710c66f5645193a765ededfed77eaec9a19a9", "patch": "@@ -1,10 +1,10 @@\n import * as vscode from \"vscode\";\n import * as path from \"path\";\n import { promises as fs } from \"fs\";\n-import { strict as assert } from \"assert\";\n \n import { ArtifactReleaseInfo } from \"./interfaces\";\n import { downloadFile } from \"./download_file\";\n+import { assert } from \"../util\";\n \n /**\n  * Downloads artifact from given `downloadUrl`.\n@@ -19,11 +19,10 @@ export async function downloadArtifact(\n     installationDir: string,\n     displayName: string,\n ) {\n-    await fs.mkdir(installationDir).catch(err => assert.strictEqual(\n-        err?.code,\n-        \"EEXIST\",\n+    await fs.mkdir(installationDir).catch(err => assert(\n+        err?.code === \"EEXIST\",\n         `Couldn't create directory \"${installationDir}\" to download ` +\n-        `${artifactFileName} artifact: ${err.message}`\n+        `${artifactFileName} artifact: ${err?.message}`\n     ));\n \n     const installationPath = path.join(installationDir, artifactFileName);"}, {"sha": "ee8949d61c4052dad087d24fa51a7c6d321ea0e8", "filename": "editors/code/src/installation/download_file.ts", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/7cf710c66f5645193a765ededfed77eaec9a19a9/editors%2Fcode%2Fsrc%2Finstallation%2Fdownload_file.ts", "raw_url": "https://github.com/rust-lang/rust/raw/7cf710c66f5645193a765ededfed77eaec9a19a9/editors%2Fcode%2Fsrc%2Finstallation%2Fdownload_file.ts", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fsrc%2Finstallation%2Fdownload_file.ts?ref=7cf710c66f5645193a765ededfed77eaec9a19a9", "patch": "@@ -2,8 +2,7 @@ import fetch from \"node-fetch\";\n import * as fs from \"fs\";\n import * as stream from \"stream\";\n import * as util from \"util\";\n-import { strict as assert } from \"assert\";\n-import { log } from \"../util\";\n+import { log, assert } from \"../util\";\n \n const pipeline = util.promisify(stream.pipeline);\n "}, {"sha": "6a6cf4f8c3ad97dc34168c3db16683a7a602e239", "filename": "editors/code/src/installation/server.ts", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/7cf710c66f5645193a765ededfed77eaec9a19a9/editors%2Fcode%2Fsrc%2Finstallation%2Fserver.ts", "raw_url": "https://github.com/rust-lang/rust/raw/7cf710c66f5645193a765ededfed77eaec9a19a9/editors%2Fcode%2Fsrc%2Finstallation%2Fserver.ts", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fsrc%2Finstallation%2Fserver.ts?ref=7cf710c66f5645193a765ededfed77eaec9a19a9", "patch": "@@ -1,13 +1,12 @@\n import * as vscode from \"vscode\";\n import * as path from \"path\";\n-import { strict as assert } from \"assert\";\n import { promises as dns } from \"dns\";\n import { spawnSync } from \"child_process\";\n \n import { BinarySource } from \"./interfaces\";\n import { fetchArtifactReleaseInfo } from \"./fetch_artifact_release_info\";\n import { downloadArtifact } from \"./download_artifact\";\n-import { log } from \"../util\";\n+import { log, assert } from \"../util\";\n \n export async function ensureServerBinary(source: null | BinarySource): Promise<null | string> {\n     if (!source) {"}, {"sha": "f56c6badaf3cd62a4f9028ffaa17a9e791536150", "filename": "editors/code/src/util.ts", "status": "modified", "additions": 13, "deletions": 4, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/7cf710c66f5645193a765ededfed77eaec9a19a9/editors%2Fcode%2Fsrc%2Futil.ts", "raw_url": "https://github.com/rust-lang/rust/raw/7cf710c66f5645193a765ededfed77eaec9a19a9/editors%2Fcode%2Fsrc%2Futil.ts", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fsrc%2Futil.ts?ref=7cf710c66f5645193a765ededfed77eaec9a19a9", "patch": "@@ -1,22 +1,31 @@\n import * as lc from \"vscode-languageclient\";\n import * as vscode from \"vscode\";\n+import { strict as nativeAssert } from \"assert\";\n \n-let enabled: boolean = false;\n+export function assert(condition: boolean, explanation: string): asserts condition {\n+    try {\n+        nativeAssert(condition, explanation);\n+    } catch (err) {\n+        log.error(`Assertion failed:`, explanation);\n+        throw err;\n+    }\n+}\n \n export const log = {\n+    enabled: true,\n     debug(message?: any, ...optionalParams: any[]): void {\n-        if (!enabled) return;\n+        if (!log.enabled) return;\n         // eslint-disable-next-line no-console\n         console.log(message, ...optionalParams);\n     },\n     error(message?: any, ...optionalParams: any[]): void {\n-        if (!enabled) return;\n+        if (!log.enabled) return;\n         debugger;\n         // eslint-disable-next-line no-console\n         console.error(message, ...optionalParams);\n     },\n     setEnabled(yes: boolean): void {\n-        enabled = yes;\n+        log.enabled = yes;\n     }\n };\n "}]}