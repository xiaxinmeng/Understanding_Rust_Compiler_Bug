{"sha": "260653772a35d44ea474fc6d464432ac6f2a676f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI2MDY1Mzc3MmEzNWQ0NGVhNDc0ZmM2ZDQ2NDQzMmFjNmYyYTY3NmY=", "commit": {"author": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2018-01-17T22:43:31Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2018-01-17T22:43:31Z"}, "message": "Rollup merge of #47520 - mbrubeck:fstat, r=Mark-Simulacrum\n\nUse File::metadata instead of fs::metadata to choose buffer size\n\nThis replaces a `stat` syscall with `fstat` or similar, which can be faster.  Fixes #47519.", "tree": {"sha": "9015b4a16bf5c5f5885507e7124405b3ee40333a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9015b4a16bf5c5f5885507e7124405b3ee40333a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/260653772a35d44ea474fc6d464432ac6f2a676f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/260653772a35d44ea474fc6d464432ac6f2a676f", "html_url": "https://github.com/rust-lang/rust/commit/260653772a35d44ea474fc6d464432ac6f2a676f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/260653772a35d44ea474fc6d464432ac6f2a676f/comments", "author": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "009bc2a3aa5ed42f5b50ff30a4eedf9f900c9dfc", "url": "https://api.github.com/repos/rust-lang/rust/commits/009bc2a3aa5ed42f5b50ff30a4eedf9f900c9dfc", "html_url": "https://github.com/rust-lang/rust/commit/009bc2a3aa5ed42f5b50ff30a4eedf9f900c9dfc"}, {"sha": "e9fdee8818f5c089013b9c8604e183b1cbd816ad", "url": "https://api.github.com/repos/rust-lang/rust/commits/e9fdee8818f5c089013b9c8604e183b1cbd816ad", "html_url": "https://github.com/rust-lang/rust/commit/e9fdee8818f5c089013b9c8604e183b1cbd816ad"}], "stats": {"total": 16, "additions": 9, "deletions": 7}, "files": [{"sha": "d1f3ccbd2c6e041de5c08b02bea5ea52c9e4324c", "filename": "src/libstd/fs.rs", "status": "modified", "additions": 9, "deletions": 7, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/260653772a35d44ea474fc6d464432ac6f2a676f/src%2Flibstd%2Ffs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/260653772a35d44ea474fc6d464432ac6f2a676f/src%2Flibstd%2Ffs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Ffs.rs?ref=260653772a35d44ea474fc6d464432ac6f2a676f", "patch": "@@ -211,12 +211,12 @@ pub struct DirBuilder {\n     recursive: bool,\n }\n \n-/// How large a buffer to pre-allocate before reading the entire file at `path`.\n-fn initial_buffer_size<P: AsRef<Path>>(path: P) -> usize {\n+/// How large a buffer to pre-allocate before reading the entire file.\n+fn initial_buffer_size(file: &File) -> usize {\n     // Allocate one extra byte so the buffer doesn't need to grow before the\n     // final `read` call at the end of the file.  Don't worry about `usize`\n     // overflow because reading will fail regardless in that case.\n-    metadata(path).map(|m| m.len() as usize + 1).unwrap_or(0)\n+    file.metadata().map(|m| m.len() as usize + 1).unwrap_or(0)\n }\n \n /// Read the entire contents of a file into a bytes vector.\n@@ -254,8 +254,9 @@ fn initial_buffer_size<P: AsRef<Path>>(path: P) -> usize {\n /// ```\n #[unstable(feature = \"fs_read_write\", issue = \"46588\")]\n pub fn read<P: AsRef<Path>>(path: P) -> io::Result<Vec<u8>> {\n-    let mut bytes = Vec::with_capacity(initial_buffer_size(&path));\n-    File::open(path)?.read_to_end(&mut bytes)?;\n+    let mut file = File::open(path)?;\n+    let mut bytes = Vec::with_capacity(initial_buffer_size(&file));\n+    file.read_to_end(&mut bytes)?;\n     Ok(bytes)\n }\n \n@@ -295,8 +296,9 @@ pub fn read<P: AsRef<Path>>(path: P) -> io::Result<Vec<u8>> {\n /// ```\n #[unstable(feature = \"fs_read_write\", issue = \"46588\")]\n pub fn read_string<P: AsRef<Path>>(path: P) -> io::Result<String> {\n-    let mut string = String::with_capacity(initial_buffer_size(&path));\n-    File::open(path)?.read_to_string(&mut string)?;\n+    let mut file = File::open(path)?;\n+    let mut string = String::with_capacity(initial_buffer_size(&file));\n+    file.read_to_string(&mut string)?;\n     Ok(string)\n }\n "}]}