{"sha": "682889fb06591c4245422b73b005c5d8ae2d0cad", "node_id": "C_kwDOAAsO6NoAKDY4Mjg4OWZiMDY1OTFjNDI0NTQyMmI3M2IwMDVjNWQ4YWUyZDBjYWQ", "commit": {"author": {"name": "Michael Howell", "email": "michael@notriddle.com", "date": "2022-06-13T19:56:01Z"}, "committer": {"name": "Michael Howell", "email": "michael@notriddle.com", "date": "2022-06-13T20:16:01Z"}, "message": "rustdoc:  remove link on slice brackets\n\nSince #97668 was merged, the slice::get function now looks like this:\n\n![image](https://user-images.githubusercontent.com/1593513/173430685-1dd2b275-2439-4392-b7d4-96bcb355a377.png)\n\nThat whole thing, `[T]`, is a single link to `primitive.slice.html`. This\ndefinitely fixes it for this case, but it's not obvious what we should do for\nslices of concrete types:\n\n![image](https://user-images.githubusercontent.com/1593513/173430968-7eed1aec-b688-4f84-a492-9210aff0037a.png)\n\nThere are actually three links in that `[u8]`: the opening brace `[` is a\nlink to `primitive.slice.html`, the `u8` is a link to `primitive.u8.html`,\nand the final `]` is a link to `primitive.slice.html`. This is a serious\n[usability bug](https://usability.yale.edu/web-accessibility/articles/links):\nthe square braces are much too small for anyone who doesn't have perfect\nmotor control using mouse or touch, provide an excessive number of tab stops\nfor anyone using keyboard, and no visual indication whatsoever that they're\nseparate links.\n\nNow that slices of generic types are linked, it seems reasonable to err on\nthe side of less clutter and stop linking concrete slices to the slice page.", "tree": {"sha": "b9633603ec056760f53930ba7587c32e4dc0d7f7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b9633603ec056760f53930ba7587c32e4dc0d7f7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/682889fb06591c4245422b73b005c5d8ae2d0cad", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/682889fb06591c4245422b73b005c5d8ae2d0cad", "html_url": "https://github.com/rust-lang/rust/commit/682889fb06591c4245422b73b005c5d8ae2d0cad", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/682889fb06591c4245422b73b005c5d8ae2d0cad/comments", "author": {"login": "notriddle", "id": 1593513, "node_id": "MDQ6VXNlcjE1OTM1MTM=", "avatar_url": "https://avatars.githubusercontent.com/u/1593513?v=4", "gravatar_id": "", "url": "https://api.github.com/users/notriddle", "html_url": "https://github.com/notriddle", "followers_url": "https://api.github.com/users/notriddle/followers", "following_url": "https://api.github.com/users/notriddle/following{/other_user}", "gists_url": "https://api.github.com/users/notriddle/gists{/gist_id}", "starred_url": "https://api.github.com/users/notriddle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/notriddle/subscriptions", "organizations_url": "https://api.github.com/users/notriddle/orgs", "repos_url": "https://api.github.com/users/notriddle/repos", "events_url": "https://api.github.com/users/notriddle/events{/privacy}", "received_events_url": "https://api.github.com/users/notriddle/received_events", "type": "User", "site_admin": false}, "committer": {"login": "notriddle", "id": 1593513, "node_id": "MDQ6VXNlcjE1OTM1MTM=", "avatar_url": "https://avatars.githubusercontent.com/u/1593513?v=4", "gravatar_id": "", "url": "https://api.github.com/users/notriddle", "html_url": "https://github.com/notriddle", "followers_url": "https://api.github.com/users/notriddle/followers", "following_url": "https://api.github.com/users/notriddle/following{/other_user}", "gists_url": "https://api.github.com/users/notriddle/gists{/gist_id}", "starred_url": "https://api.github.com/users/notriddle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/notriddle/subscriptions", "organizations_url": "https://api.github.com/users/notriddle/orgs", "repos_url": "https://api.github.com/users/notriddle/repos", "events_url": "https://api.github.com/users/notriddle/events{/privacy}", "received_events_url": "https://api.github.com/users/notriddle/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "083721a1a7365d3afe1521cd2661b2201aac0450", "url": "https://api.github.com/repos/rust-lang/rust/commits/083721a1a7365d3afe1521cd2661b2201aac0450", "html_url": "https://github.com/rust-lang/rust/commit/083721a1a7365d3afe1521cd2661b2201aac0450"}], "stats": {"total": 35, "additions": 5, "deletions": 30}, "files": [{"sha": "394db2d0cda6bfd783497e9fa529a0f26540b05d", "filename": "src/librustdoc/html/format.rs", "status": "modified", "additions": 2, "deletions": 27, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/682889fb06591c4245422b73b005c5d8ae2d0cad/src%2Flibrustdoc%2Fhtml%2Fformat.rs", "raw_url": "https://github.com/rust-lang/rust/raw/682889fb06591c4245422b73b005c5d8ae2d0cad/src%2Flibrustdoc%2Fhtml%2Fformat.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fformat.rs?ref=682889fb06591c4245422b73b005c5d8ae2d0cad", "patch": "@@ -886,9 +886,9 @@ fn fmt_type<'cx>(\n                 primitive_link(f, PrimitiveType::Slice, &format!(\"[{name}]\"), cx)\n             }\n             _ => {\n-                primitive_link(f, PrimitiveType::Slice, \"[\", cx)?;\n+                write!(f, \"[\")?;\n                 fmt::Display::fmt(&t.print(cx), f)?;\n-                primitive_link(f, PrimitiveType::Slice, \"]\", cx)\n+                write!(f, \"]\")\n             }\n         },\n         clean::Array(ref t, ref n) => {\n@@ -926,31 +926,6 @@ fn fmt_type<'cx>(\n             let m = mutability.print_with_space();\n             let amp = if f.alternate() { \"&\".to_string() } else { \"&amp;\".to_string() };\n             match **ty {\n-                clean::Slice(ref bt) => {\n-                    // `BorrowedRef{ ... Slice(T) }` is `&[T]`\n-                    match **bt {\n-                        clean::Generic(name) => primitive_link(\n-                            f,\n-                            PrimitiveType::Slice,\n-                            &format!(\"{amp}{lt}{m}[{name}]\"),\n-                            cx,\n-                        ),\n-                        _ => {\n-                            primitive_link(\n-                                f,\n-                                PrimitiveType::Slice,\n-                                &format!(\"{}{}{}[\", amp, lt, m),\n-                                cx,\n-                            )?;\n-                            if f.alternate() {\n-                                write!(f, \"{:#}\", bt.print(cx))?;\n-                            } else {\n-                                write!(f, \"{}\", bt.print(cx))?;\n-                            }\n-                            primitive_link(f, PrimitiveType::Slice, \"]\", cx)\n-                        }\n-                    }\n-                }\n                 clean::DynTrait(ref bounds, ref trait_lt)\n                     if bounds.len() > 1 || trait_lt.is_some() =>\n                 {"}, {"sha": "7bec7582df7c9c8f96f481e642c052009cafc46b", "filename": "src/test/rustdoc/slice-links.link_box_u32.html", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/682889fb06591c4245422b73b005c5d8ae2d0cad/src%2Ftest%2Frustdoc%2Fslice-links.link_box_u32.html", "raw_url": "https://github.com/rust-lang/rust/raw/682889fb06591c4245422b73b005c5d8ae2d0cad/src%2Ftest%2Frustdoc%2Fslice-links.link_box_u32.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fslice-links.link_box_u32.html?ref=682889fb06591c4245422b73b005c5d8ae2d0cad", "patch": "@@ -1 +1 @@\n-<code>pub fn gamma() -&gt; <a class=\"struct\" href=\"struct.MyBox.html\" title=\"struct foo::MyBox\">MyBox</a>&lt;<a class=\"primitive\" href=\"{{channel}}/core/primitive.slice.html\">[</a><a class=\"primitive\" href=\"{{channel}}/core/primitive.u32.html\">u32</a><a class=\"primitive\" href=\"{{channel}}/core/primitive.slice.html\">]</a>&gt;</code>\n\\ No newline at end of file\n+<code>pub fn gamma() -&gt; <a class=\"struct\" href=\"struct.MyBox.html\" title=\"struct foo::MyBox\">MyBox</a>&lt;[<a class=\"primitive\" href=\"{{channel}}/core/primitive.u32.html\">u32</a>]&gt;</code>\n\\ No newline at end of file"}, {"sha": "1d0f2bf75a233c4be2b7dcaf46a65296b4cde459", "filename": "src/test/rustdoc/slice-links.link_slice_generic.html", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/682889fb06591c4245422b73b005c5d8ae2d0cad/src%2Ftest%2Frustdoc%2Fslice-links.link_slice_generic.html", "raw_url": "https://github.com/rust-lang/rust/raw/682889fb06591c4245422b73b005c5d8ae2d0cad/src%2Ftest%2Frustdoc%2Fslice-links.link_slice_generic.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fslice-links.link_slice_generic.html?ref=682889fb06591c4245422b73b005c5d8ae2d0cad", "patch": "@@ -1 +1 @@\n-<code>pub fn beta&lt;T&gt;() -&gt; <a class=\"primitive\" href=\"{{channel}}/core/primitive.slice.html\">&amp;'static [T]</a></code>\n\\ No newline at end of file\n+<code>pub fn beta&lt;T&gt;() -&gt; &amp;'static <a class=\"primitive\" href=\"{{channel}}/core/primitive.slice.html\">[T]</a></code>\n\\ No newline at end of file"}, {"sha": "c86d383042615388ebe4fa0fb22b8ab0ab53538d", "filename": "src/test/rustdoc/slice-links.link_slice_u32.html", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/682889fb06591c4245422b73b005c5d8ae2d0cad/src%2Ftest%2Frustdoc%2Fslice-links.link_slice_u32.html", "raw_url": "https://github.com/rust-lang/rust/raw/682889fb06591c4245422b73b005c5d8ae2d0cad/src%2Ftest%2Frustdoc%2Fslice-links.link_slice_u32.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fslice-links.link_slice_u32.html?ref=682889fb06591c4245422b73b005c5d8ae2d0cad", "patch": "@@ -1 +1 @@\n-<code>pub fn alpha() -&gt; <a class=\"primitive\" href=\"{{channel}}/core/primitive.slice.html\">&amp;'static [</a><a class=\"primitive\" href=\"{{channel}}/core/primitive.u32.html\">u32</a><a class=\"primitive\" href=\"{{channel}}/core/primitive.slice.html\">]</a></code>\n\\ No newline at end of file\n+<code>pub fn alpha() -&gt; &amp;'static [<a class=\"primitive\" href=\"{{channel}}/core/primitive.u32.html\">u32</a>]</code>\n\\ No newline at end of file"}]}