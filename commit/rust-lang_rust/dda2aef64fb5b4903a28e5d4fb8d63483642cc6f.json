{"sha": "dda2aef64fb5b4903a28e5d4fb8d63483642cc6f", "node_id": "C_kwDOAAsO6NoAKGRkYTJhZWY2NGZiNWI0OTAzYTI4ZTVkNGZiOGQ2MzQ4MzY0MmNjNmY", "commit": {"author": {"name": "Aaron Hill", "email": "aa1ronham@gmail.com", "date": "2022-01-03T03:37:05Z"}, "committer": {"name": "Aaron Hill", "email": "aa1ronham@gmail.com", "date": "2022-01-11T15:16:22Z"}, "message": "Store a `Symbol` instead of an `Ident` in `VariantDef`/`FieldDef`\n\nThe field is also renamed from `ident` to `name. In most cases,\nwe don't actually need the `Span`. A new `ident` method is added\nto `VariantDef` and `FieldDef`, which constructs the full `Ident`\nusing `tcx.def_ident_span()`. This method is used in the cases\nwhere we actually need an `Ident`.\n\nThis makes incremental compilation properly track changes\nto the `Span`, without all of the invalidations caused by storing\na `Span` directly via an `Ident`.", "tree": {"sha": "2d9a80aeff6475956dc45fdef35296ea34e7592e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2d9a80aeff6475956dc45fdef35296ea34e7592e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/dda2aef64fb5b4903a28e5d4fb8d63483642cc6f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/dda2aef64fb5b4903a28e5d4fb8d63483642cc6f", "html_url": "https://github.com/rust-lang/rust/commit/dda2aef64fb5b4903a28e5d4fb8d63483642cc6f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/dda2aef64fb5b4903a28e5d4fb8d63483642cc6f/comments", "author": {"login": "Aaron1011", "id": 1408859, "node_id": "MDQ6VXNlcjE0MDg4NTk=", "avatar_url": "https://avatars.githubusercontent.com/u/1408859?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Aaron1011", "html_url": "https://github.com/Aaron1011", "followers_url": "https://api.github.com/users/Aaron1011/followers", "following_url": "https://api.github.com/users/Aaron1011/following{/other_user}", "gists_url": "https://api.github.com/users/Aaron1011/gists{/gist_id}", "starred_url": "https://api.github.com/users/Aaron1011/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Aaron1011/subscriptions", "organizations_url": "https://api.github.com/users/Aaron1011/orgs", "repos_url": "https://api.github.com/users/Aaron1011/repos", "events_url": "https://api.github.com/users/Aaron1011/events{/privacy}", "received_events_url": "https://api.github.com/users/Aaron1011/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Aaron1011", "id": 1408859, "node_id": "MDQ6VXNlcjE0MDg4NTk=", "avatar_url": "https://avatars.githubusercontent.com/u/1408859?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Aaron1011", "html_url": "https://github.com/Aaron1011", "followers_url": "https://api.github.com/users/Aaron1011/followers", "following_url": "https://api.github.com/users/Aaron1011/following{/other_user}", "gists_url": "https://api.github.com/users/Aaron1011/gists{/gist_id}", "starred_url": "https://api.github.com/users/Aaron1011/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Aaron1011/subscriptions", "organizations_url": "https://api.github.com/users/Aaron1011/orgs", "repos_url": "https://api.github.com/users/Aaron1011/repos", "events_url": "https://api.github.com/users/Aaron1011/events{/privacy}", "received_events_url": "https://api.github.com/users/Aaron1011/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c8ea0420cb6ce2262a93a919c2bb70378f5cd3ae", "url": "https://api.github.com/repos/rust-lang/rust/commits/c8ea0420cb6ce2262a93a919c2bb70378f5cd3ae", "html_url": "https://github.com/rust-lang/rust/commit/c8ea0420cb6ce2262a93a919c2bb70378f5cd3ae"}], "stats": {"total": 8, "additions": 4, "deletions": 4}, "files": [{"sha": "6422f5aabe5e2a3fc93dbeea67a4d41d941f8853", "filename": "clippy_lints/src/default.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/dda2aef64fb5b4903a28e5d4fb8d63483642cc6f/clippy_lints%2Fsrc%2Fdefault.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dda2aef64fb5b4903a28e5d4fb8d63483642cc6f/clippy_lints%2Fsrc%2Fdefault.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fdefault.rs?ref=dda2aef64fb5b4903a28e5d4fb8d63483642cc6f", "patch": "@@ -198,7 +198,7 @@ impl LateLintPass<'_> for Default {\n                 let ext_with_default = !variant\n                     .fields\n                     .iter()\n-                    .all(|field| assigned_fields.iter().any(|(a, _)| a == &field.ident.name));\n+                    .all(|field| assigned_fields.iter().any(|(a, _)| a == &field.name));\n \n                 let field_list = assigned_fields\n                     .into_iter()"}, {"sha": "15215ac15cdb9d8440dd85c205cd37d2b3187741", "filename": "clippy_lints/src/default_numeric_fallback.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/dda2aef64fb5b4903a28e5d4fb8d63483642cc6f/clippy_lints%2Fsrc%2Fdefault_numeric_fallback.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dda2aef64fb5b4903a28e5d4fb8d63483642cc6f/clippy_lints%2Fsrc%2Fdefault_numeric_fallback.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fdefault_numeric_fallback.rs?ref=dda2aef64fb5b4903a28e5d4fb8d63483642cc6f", "patch": "@@ -161,7 +161,7 @@ impl<'a, 'tcx> Visitor<'tcx> for NumericFallbackVisitor<'a, 'tcx> {\n                                 fields_def\n                                     .iter()\n                                     .find_map(|f_def| {\n-                                        if f_def.ident == field.ident\n+                                        if f_def.ident(self.cx.tcx) == field.ident\n                                             { Some(self.cx.tcx.type_of(f_def.did)) }\n                                         else { None }\n                                     });"}, {"sha": "388bb3727f96cfa9753eb7b8df887158526d5be0", "filename": "clippy_lints/src/inconsistent_struct_constructor.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/dda2aef64fb5b4903a28e5d4fb8d63483642cc6f/clippy_lints%2Fsrc%2Finconsistent_struct_constructor.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dda2aef64fb5b4903a28e5d4fb8d63483642cc6f/clippy_lints%2Fsrc%2Finconsistent_struct_constructor.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Finconsistent_struct_constructor.rs?ref=dda2aef64fb5b4903a28e5d4fb8d63483642cc6f", "patch": "@@ -76,7 +76,7 @@ impl LateLintPass<'_> for InconsistentStructConstructor {\n             then {\n                 let mut def_order_map = FxHashMap::default();\n                 for (idx, field) in variant.fields.iter().enumerate() {\n-                    def_order_map.insert(field.ident.name, idx);\n+                    def_order_map.insert(field.name, idx);\n                 }\n \n                 if is_consistent_order(fields, &def_order_map) {"}, {"sha": "5fa8f249e701e91d9b3cadf574f27ab873e0154b", "filename": "clippy_lints/src/matches.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/dda2aef64fb5b4903a28e5d4fb8d63483642cc6f/clippy_lints%2Fsrc%2Fmatches.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dda2aef64fb5b4903a28e5d4fb8d63483642cc6f/clippy_lints%2Fsrc%2Fmatches.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmatches.rs?ref=dda2aef64fb5b4903a28e5d4fb8d63483642cc6f", "patch": "@@ -1136,7 +1136,7 @@ fn check_wild_enum_match(cx: &LateContext<'_>, ex: &Expr<'_>, arms: &[Arm<'_>])\n                 s.push_str(\"::\");\n                 s\n             },\n-            variant.ident.name,\n+            variant.name,\n             match variant.ctor_kind {\n                 CtorKind::Fn if variant.fields.len() == 1 => \"(_)\",\n                 CtorKind::Fn => \"(..)\","}]}