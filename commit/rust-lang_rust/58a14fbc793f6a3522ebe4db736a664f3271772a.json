{"sha": "58a14fbc793f6a3522ebe4db736a664f3271772a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjU4YTE0ZmJjNzkzZjZhMzUyMmViZTRkYjczNmE2NjRmMzI3MTc3MmE=", "commit": {"author": {"name": "Marcus Klaas", "email": "mail@marcusklaas.nl", "date": "2015-05-02T17:12:16Z"}, "committer": {"name": "Marcus Klaas", "email": "mail@marcusklaas.nl", "date": "2015-05-04T07:25:20Z"}, "message": "Correctly indent use items and functions", "tree": {"sha": "117001e945680500f28112c467bb9dde0bf20691", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/117001e945680500f28112c467bb9dde0bf20691"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/58a14fbc793f6a3522ebe4db736a664f3271772a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/58a14fbc793f6a3522ebe4db736a664f3271772a", "html_url": "https://github.com/rust-lang/rust/commit/58a14fbc793f6a3522ebe4db736a664f3271772a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/58a14fbc793f6a3522ebe4db736a664f3271772a/comments", "author": {"login": "marcusklaas", "id": 1255413, "node_id": "MDQ6VXNlcjEyNTU0MTM=", "avatar_url": "https://avatars.githubusercontent.com/u/1255413?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marcusklaas", "html_url": "https://github.com/marcusklaas", "followers_url": "https://api.github.com/users/marcusklaas/followers", "following_url": "https://api.github.com/users/marcusklaas/following{/other_user}", "gists_url": "https://api.github.com/users/marcusklaas/gists{/gist_id}", "starred_url": "https://api.github.com/users/marcusklaas/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marcusklaas/subscriptions", "organizations_url": "https://api.github.com/users/marcusklaas/orgs", "repos_url": "https://api.github.com/users/marcusklaas/repos", "events_url": "https://api.github.com/users/marcusklaas/events{/privacy}", "received_events_url": "https://api.github.com/users/marcusklaas/received_events", "type": "User", "site_admin": false}, "committer": {"login": "marcusklaas", "id": 1255413, "node_id": "MDQ6VXNlcjEyNTU0MTM=", "avatar_url": "https://avatars.githubusercontent.com/u/1255413?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marcusklaas", "html_url": "https://github.com/marcusklaas", "followers_url": "https://api.github.com/users/marcusklaas/followers", "following_url": "https://api.github.com/users/marcusklaas/following{/other_user}", "gists_url": "https://api.github.com/users/marcusklaas/gists{/gist_id}", "starred_url": "https://api.github.com/users/marcusklaas/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marcusklaas/subscriptions", "organizations_url": "https://api.github.com/users/marcusklaas/orgs", "repos_url": "https://api.github.com/users/marcusklaas/repos", "events_url": "https://api.github.com/users/marcusklaas/events{/privacy}", "received_events_url": "https://api.github.com/users/marcusklaas/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f83e3400cbbb5e30a11276799af15cc14158eda0", "url": "https://api.github.com/repos/rust-lang/rust/commits/f83e3400cbbb5e30a11276799af15cc14158eda0", "html_url": "https://github.com/rust-lang/rust/commit/f83e3400cbbb5e30a11276799af15cc14158eda0"}], "stats": {"total": 83, "additions": 45, "deletions": 38}, "files": [{"sha": "9cdd89df0cb3282129e7536abd44a2c317e988f5", "filename": "src/imports.rs", "status": "modified", "additions": 18, "deletions": 28, "changes": 46, "blob_url": "https://github.com/rust-lang/rust/blob/58a14fbc793f6a3522ebe4db736a664f3271772a/src%2Fimports.rs", "raw_url": "https://github.com/rust-lang/rust/raw/58a14fbc793f6a3522ebe4db736a664f3271772a/src%2Fimports.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fimports.rs?ref=58a14fbc793f6a3522ebe4db736a664f3271772a", "patch": "@@ -12,58 +12,48 @@ use visitor::FmtVisitor;\n use lists::{write_list, ListFormatting, SeparatorTactic, ListTactic};\n \n use syntax::ast;\n-use syntax::codemap::Span;\n use syntax::parse::token;\n use syntax::print::pprust;\n \n-use {IDEAL_WIDTH, MAX_WIDTH};\n-\n // TODO change import lists with one item to a single import\n //      remove empty lists (if they're even possible)\n // TODO (some day) remove unused imports, expand globs, compress many single imports into a list import\n \n impl<'a> FmtVisitor<'a> {\n     // Basically just pretty prints a multi-item import.\n     pub fn rewrite_use_list(&mut self,\n+                            block_indent: usize,\n+                            budget: usize, // excluding indentation\n                             path: &ast::Path,\n                             path_list: &[ast::PathListItem],\n-                            visibility: ast::Visibility,\n-                            vp_span: Span) -> String {\n-        // FIXME check indentation\n-        let l_loc = self.codemap.lookup_char_pos(vp_span.lo);\n-\n+                            visibility: ast::Visibility) -> Option<String> {\n         let path_str = pprust::path_to_string(&path);\n \n         let vis = match visibility {\n             ast::Public => \"pub \",\n             _ => \"\"\n         };\n \n-        // 1 = {\n-        let mut indent = l_loc.col.0 + path_str.len() + 1;\n-        if path_str.len() > 0 {\n-            // 2 = ::\n-            indent += 2;\n-        }\n+        // 2 = ::\n+        let path_separation_w = if path_str.len() > 0 { 2 } else { 0 };\n+        // 5 = \"use \" + {\n+        let indent = path_str.len() + 5 + path_separation_w + vis.len();\n         // 2 = } + ;\n-        let used_width = indent + 2 + vis.len();\n-        let budget = if used_width >= IDEAL_WIDTH {\n-            if used_width < MAX_WIDTH {\n-                MAX_WIDTH - used_width\n-            } else {\n-                // Give up\n-                return String::new();\n-            }\n+        let used_width = indent + 2;\n+\n+        let remaining_budget = if used_width >= budget {\n+            return None;\n         } else {\n-            IDEAL_WIDTH - used_width\n+            budget - used_width\n         };\n+\n         let fmt = ListFormatting {\n             tactic: ListTactic::Mixed,\n             separator: \",\",\n             trailing_separator: SeparatorTactic::Never,\n-            indent: indent,\n-            h_width: budget,\n-            v_width: budget,\n+            indent: block_indent + indent,\n+            h_width: remaining_budget,\n+            v_width: remaining_budget,\n         };\n \n         // TODO handle any comments inbetween items.\n@@ -89,10 +79,10 @@ impl<'a> FmtVisitor<'a> {\n                 ast::PathListItem_::PathListMod{ .. } => None,\n             }\n         })).collect();\n-        if path_str.len() == 0 {\n+        Some(if path_str.len() == 0 {\n             format!(\"{}use {{{}}};\", vis, write_list(&items, &fmt))\n         } else {\n             format!(\"{}use {}::{{{}}};\", vis, path_str, write_list(&items, &fmt))\n-        }\n+        })\n     }\n }"}, {"sha": "b4fe95c9dd3316533f8b99ff295aa236788c56ea", "filename": "src/visitor.rs", "status": "modified", "additions": 14, "deletions": 10, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/58a14fbc793f6a3522ebe4db736a664f3271772a/src%2Fvisitor.rs", "raw_url": "https://github.com/rust-lang/rust/raw/58a14fbc793f6a3522ebe4db736a664f3271772a/src%2Fvisitor.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fvisitor.rs?ref=58a14fbc793f6a3522ebe4db736a664f3271772a", "patch": "@@ -14,7 +14,7 @@ use syntax::visit;\n \n use utils;\n \n-use {MAX_WIDTH, TAB_SPACES, SKIP_ANNOTATION};\n+use {IDEAL_WIDTH, MAX_WIDTH, TAB_SPACES, SKIP_ANNOTATION};\n use changes::ChangeSet;\n \n pub struct FmtVisitor<'a> {\n@@ -93,7 +93,7 @@ impl<'a, 'v> visit::Visitor<'v> for FmtVisitor<'a> {\n                 b: &'v ast::Block,\n                 s: Span,\n                 _: ast::NodeId) {\n-        self.format_missing(s.lo);\n+        self.format_missing_with_indent(s.lo);\n         self.last_pos = s.lo;\n \n         let indent = self.block_indent;\n@@ -145,20 +145,24 @@ impl<'a, 'v> visit::Visitor<'v> for FmtVisitor<'a> {\n \n         match item.node {\n             ast::Item_::ItemUse(ref vp) => {\n+                self.format_missing_with_indent(item.span.lo);\n                 match vp.node {\n                     ast::ViewPath_::ViewPathList(ref path, ref path_list) => {\n-                        self.format_missing(item.span.lo);\n-                        let new_str = self.rewrite_use_list(path,\n-                                                            path_list,\n-                                                            item.vis,\n-                                                            vp.span);\n-                        self.changes.push_str_span(item.span, &new_str);\n-                        self.last_pos = item.span.hi;\n+                        let block_indent = self.block_indent;\n+                        let budget = IDEAL_WIDTH - block_indent;\n+                        if let Some(new_str) = self.rewrite_use_list(block_indent,\n+                                                                     budget,\n+                                                                     path,\n+                                                                     path_list,\n+                                                                     item.vis) {\n+                            self.changes.push_str_span(item.span, &new_str);\n+                            self.last_pos = item.span.hi;\n+                        }\n                     }\n                     ast::ViewPath_::ViewPathGlob(_) => {\n                         // FIXME convert to list?\n                     }\n-                    _ => {}\n+                    ast::ViewPath_::ViewPathSimple(_,_) => {}\n                 }\n                 visit::walk_item(self, item);\n             }"}, {"sha": "72c4a1fb769d109c0eaf4c1ca44dbab049ba095f", "filename": "tests/idem/imports.rs", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/58a14fbc793f6a3522ebe4db736a664f3271772a/tests%2Fidem%2Fimports.rs", "raw_url": "https://github.com/rust-lang/rust/raw/58a14fbc793f6a3522ebe4db736a664f3271772a/tests%2Fidem%2Fimports.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fidem%2Fimports.rs?ref=58a14fbc793f6a3522ebe4db736a664f3271772a", "patch": "@@ -8,3 +8,16 @@ use {Foo, Bar};\n use Foo::{Bar, Baz};\n pub use syntax::ast::{Expr_, Expr, ExprAssign, ExprCall, ExprMethodCall,\n                       ExprPath};\n+\n+mod Foo {\n+    pub use syntax::ast::{Expr_, ExprEval, ToExpr, ExprMethodCall, ToExprPath};\n+\n+    mod Foo2 {\n+        pub use syntax::ast::{Expr_, ExprEval, ToExpr, ExprMethodCall,\n+                              ToExprPath};\n+    }\n+}\n+\n+fn test() {\n+    use Baz::*;\n+}"}]}