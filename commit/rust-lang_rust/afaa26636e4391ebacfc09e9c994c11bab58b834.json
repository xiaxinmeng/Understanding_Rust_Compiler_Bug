{"sha": "afaa26636e4391ebacfc09e9c994c11bab58b834", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFmYWEyNjYzNmU0MzkxZWJhY2ZjMDllOWM5OTRjMTFiYWI1OGI4MzQ=", "commit": {"author": {"name": "Marcus Klaas de Vries", "email": "mail@marcusklaas.nl", "date": "2019-01-15T14:24:04Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-01-19T12:37:25Z"}, "message": "Add additional pattern variants", "tree": {"sha": "79d66f1d2eb70f3092285ab37f1e21c3832ea8b8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/79d66f1d2eb70f3092285ab37f1e21c3832ea8b8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/afaa26636e4391ebacfc09e9c994c11bab58b834", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/afaa26636e4391ebacfc09e9c994c11bab58b834", "html_url": "https://github.com/rust-lang/rust/commit/afaa26636e4391ebacfc09e9c994c11bab58b834", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/afaa26636e4391ebacfc09e9c994c11bab58b834/comments", "author": {"login": "marcusklaas", "id": 1255413, "node_id": "MDQ6VXNlcjEyNTU0MTM=", "avatar_url": "https://avatars.githubusercontent.com/u/1255413?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marcusklaas", "html_url": "https://github.com/marcusklaas", "followers_url": "https://api.github.com/users/marcusklaas/followers", "following_url": "https://api.github.com/users/marcusklaas/following{/other_user}", "gists_url": "https://api.github.com/users/marcusklaas/gists{/gist_id}", "starred_url": "https://api.github.com/users/marcusklaas/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marcusklaas/subscriptions", "organizations_url": "https://api.github.com/users/marcusklaas/orgs", "repos_url": "https://api.github.com/users/marcusklaas/repos", "events_url": "https://api.github.com/users/marcusklaas/events{/privacy}", "received_events_url": "https://api.github.com/users/marcusklaas/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0a82d9cdc975da27e78839e1a8cb873ba99ae64b", "url": "https://api.github.com/repos/rust-lang/rust/commits/0a82d9cdc975da27e78839e1a8cb873ba99ae64b", "html_url": "https://github.com/rust-lang/rust/commit/0a82d9cdc975da27e78839e1a8cb873ba99ae64b"}], "stats": {"total": 204, "additions": 142, "deletions": 62}, "files": [{"sha": "c551e445a040dcd1ed8ba8c843a266b4b742671c", "filename": "crates/ra_hir/src/code_model_impl/function/scope.rs", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/afaa26636e4391ebacfc09e9c994c11bab58b834/crates%2Fra_hir%2Fsrc%2Fcode_model_impl%2Ffunction%2Fscope.rs", "raw_url": "https://github.com/rust-lang/rust/raw/afaa26636e4391ebacfc09e9c994c11bab58b834/crates%2Fra_hir%2Fsrc%2Fcode_model_impl%2Ffunction%2Fscope.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Fcode_model_impl%2Ffunction%2Fscope.rs?ref=afaa26636e4391ebacfc09e9c994c11bab58b834", "patch": "@@ -47,9 +47,11 @@ impl FnScopes {\n         compute_expr_scopes(body.body_expr(), &body, &mut scopes, root);\n         scopes\n     }\n+\n     pub fn entries(&self, scope: ScopeId) -> &[ScopeEntry] {\n         &self.scopes[scope].entries\n     }\n+\n     pub fn scope_chain_for<'a>(&'a self, expr: ExprId) -> impl Iterator<Item = ScopeId> + 'a {\n         generate(self.scope_for(expr), move |&scope| {\n             self.scopes[scope].parent\n@@ -76,12 +78,14 @@ impl FnScopes {\n             entries: vec![],\n         })\n     }\n+\n     fn new_scope(&mut self, parent: ScopeId) -> ScopeId {\n         self.scopes.alloc(ScopeData {\n             parent: Some(parent),\n             entries: vec![],\n         })\n     }\n+\n     fn add_bindings(&mut self, body: &Body, scope: ScopeId, pat: PatId) {\n         match &body[pat] {\n             Pat::Bind { name } => self.scopes[scope].entries.push(ScopeEntry {\n@@ -91,15 +95,18 @@ impl FnScopes {\n             p => p.walk_child_pats(|pat| self.add_bindings(body, scope, pat)),\n         }\n     }\n+\n     fn add_params_bindings(&mut self, scope: ScopeId, params: &[PatId]) {\n         let body = Arc::clone(&self.body);\n         params\n             .into_iter()\n             .for_each(|pat| self.add_bindings(&body, scope, *pat));\n     }\n+\n     fn set_scope(&mut self, node: ExprId, scope: ScopeId) {\n         self.scope_for.insert(node, scope);\n     }\n+\n     fn scope_for(&self, expr: ExprId) -> Option<ScopeId> {\n         self.scope_for.get(&expr).map(|&scope| scope)\n     }\n@@ -121,6 +128,7 @@ impl ScopeEntryWithSyntax {\n     pub fn name(&self) -> &Name {\n         &self.name\n     }\n+\n     pub fn ptr(&self) -> LocalSyntaxPtr {\n         self.ptr\n     }\n@@ -132,6 +140,7 @@ impl ScopesWithSyntaxMapping {\n             self.scopes.scopes[scope].parent\n         })\n     }\n+\n     pub fn scope_chain_for_offset<'a>(\n         &'a self,\n         offset: TextUnit,\n@@ -152,6 +161,7 @@ impl ScopesWithSyntaxMapping {\n \n         generate(scope, move |&scope| self.scopes.scopes[scope].parent)\n     }\n+\n     // XXX: during completion, cursor might be outside of any particular\n     // expression. Try to figure out the correct scope...\n     fn adjust(&self, ptr: LocalSyntaxPtr, original_scope: ScopeId, offset: TextUnit) -> ScopeId {\n@@ -225,6 +235,7 @@ impl ScopeEntry {\n     pub fn name(&self) -> &Name {\n         &self.name\n     }\n+\n     pub fn pat(&self) -> PatId {\n         self.pat\n     }"}, {"sha": "8f7e753090af7e4711900891b009d3ee1885b2b3", "filename": "crates/ra_hir/src/expr.rs", "status": "modified", "additions": 54, "deletions": 13, "changes": 67, "blob_url": "https://github.com/rust-lang/rust/blob/afaa26636e4391ebacfc09e9c994c11bab58b834/crates%2Fra_hir%2Fsrc%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/afaa26636e4391ebacfc09e9c994c11bab58b834/crates%2Fra_hir%2Fsrc%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Fexpr.rs?ref=afaa26636e4391ebacfc09e9c994c11bab58b834", "patch": "@@ -329,9 +329,25 @@ impl Expr {\n pub struct PatId(RawId);\n impl_arena_id!(PatId);\n \n+/// Close relative to rustc's hir::PatKind\n #[derive(Debug, Clone, Eq, PartialEq)]\n pub enum Pat {\n-    Missing,\n+    Missing, // do we need this?\n+    Wild,\n+    Tuple(Vec<PatId>),\n+    Struct, // TODO\n+    Range {\n+        start: ExprId,\n+        end: ExprId,\n+    },\n+    Box(PatId),\n+    Slice {\n+        prefix: Vec<PatId>,\n+        rest: Option<PatId>,\n+        suffix: Vec<PatId>,\n+    },\n+    Path(Path),\n+    Lit(ExprId),\n     Bind {\n         name: Name,\n     },\n@@ -348,11 +364,25 @@ pub enum Pat {\n impl Pat {\n     pub fn walk_child_pats(&self, mut f: impl FnMut(PatId)) {\n         match self {\n-            Pat::Missing | Pat::Bind { .. } => {}\n-            Pat::TupleStruct { args, .. } => {\n+            Pat::Range { .. }\n+            | Pat::Lit(..)\n+            | Pat::Path(..)\n+            | Pat::Wild\n+            | Pat::Missing\n+            | Pat::Bind { .. } => {}\n+            Pat::Tuple(args) | Pat::TupleStruct { args, .. } => {\n                 args.iter().map(|pat| *pat).for_each(f);\n             }\n-            Pat::Ref { pat, .. } => f(*pat),\n+            Pat::Ref { pat, .. } | Pat::Box(pat) => f(*pat),\n+            Pat::Slice {\n+                prefix,\n+                rest,\n+                suffix,\n+            } => {\n+                let total_iter = prefix.iter().chain(rest.iter()).chain(suffix.iter());\n+                total_iter.map(|pat| *pat).for_each(f);\n+            }\n+            Pat::Struct { .. } => {} // TODO\n         }\n     }\n }\n@@ -745,30 +775,41 @@ impl ExprCollector {\n     }\n \n     fn collect_pat(&mut self, pat: &ast::Pat) -> PatId {\n-        let syntax_ptr = LocalSyntaxPtr::new(pat.syntax());\n-        match pat.kind() {\n+        let pattern = match pat.kind() {\n             ast::PatKind::BindPat(bp) => {\n                 let name = bp\n                     .name()\n                     .map(|nr| nr.as_name())\n                     .unwrap_or_else(Name::missing);\n-                self.alloc_pat(Pat::Bind { name }, syntax_ptr)\n+                Pat::Bind { name }\n             }\n             ast::PatKind::TupleStructPat(p) => {\n                 let path = p.path().and_then(Path::from_ast);\n                 let args = p.args().map(|p| self.collect_pat(p)).collect();\n-                self.alloc_pat(Pat::TupleStruct { path, args }, syntax_ptr)\n+                Pat::TupleStruct { path, args }\n             }\n             ast::PatKind::RefPat(p) => {\n                 let pat = self.collect_pat_opt(p.pat());\n                 let mutability = Mutability::from_mutable(p.is_mut());\n-                self.alloc_pat(Pat::Ref { pat, mutability }, syntax_ptr)\n+                Pat::Ref { pat, mutability }\n             }\n-            _ => {\n-                // TODO\n-                self.alloc_pat(Pat::Missing, syntax_ptr)\n+            ast::PatKind::PathPat(p) => {\n+                let path = p.path().and_then(Path::from_ast);\n+                path.map(|path| Pat::Path(path)).unwrap_or(Pat::Missing)\n             }\n-        }\n+            ast::PatKind::TuplePat(p) => {\n+                let args = p.args().map(|p| self.collect_pat(p)).collect();\n+                Pat::Tuple(args)\n+            }\n+            ast::PatKind::PlaceholderPat(_) => Pat::Wild,\n+            // TODO: implement\n+            ast::PatKind::FieldPatList(_)\n+            | ast::PatKind::SlicePat(_)\n+            | ast::PatKind::StructPat(_)\n+            | ast::PatKind::RangePat(_) => Pat::Missing,\n+        };\n+        let syntax_ptr = LocalSyntaxPtr::new(pat.syntax());\n+        self.alloc_pat(pattern, syntax_ptr)\n     }\n \n     fn collect_pat_opt(&mut self, pat: Option<&ast::Pat>) -> PatId {"}, {"sha": "854d3e3d91d2a6f1cb9754a7634630188dbf1937", "filename": "crates/ra_hir/src/ty.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/afaa26636e4391ebacfc09e9c994c11bab58b834/crates%2Fra_hir%2Fsrc%2Fty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/afaa26636e4391ebacfc09e9c994c11bab58b834/crates%2Fra_hir%2Fsrc%2Fty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Fty.rs?ref=afaa26636e4391ebacfc09e9c994c11bab58b834", "patch": "@@ -1168,6 +1168,8 @@ impl<'a, D: HirDatabase> InferenceContext<'a, D> {\n                         decl_ty\n                     };\n \n+                    // TODO: walk the pattern here?\n+\n                     self.write_pat_ty(*pat, ty);\n                 }\n                 Statement::Expr(expr) => {\n@@ -1188,6 +1190,9 @@ impl<'a, D: HirDatabase> InferenceContext<'a, D> {\n         for (type_ref, pat) in signature.params().iter().zip(body.params()) {\n             let ty = self.make_ty(type_ref);\n             let ty = self.insert_type_vars(ty);\n+\n+            // TODO: walk pattern?\n+\n             self.write_pat_ty(*pat, ty);\n         }\n         self.return_ty = {"}, {"sha": "fc1e5b09c15bb6cfa6a6667b7e87bc7a67041ac7", "filename": "crates/ra_hir/src/ty/tests.rs", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/afaa26636e4391ebacfc09e9c994c11bab58b834/crates%2Fra_hir%2Fsrc%2Fty%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/afaa26636e4391ebacfc09e9c994c11bab58b834/crates%2Fra_hir%2Fsrc%2Fty%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Fty%2Ftests.rs?ref=afaa26636e4391ebacfc09e9c994c11bab58b834", "patch": "@@ -358,6 +358,21 @@ fn test(x: &str, y: isize) {\n     );\n }\n \n+#[test]\n+fn infer_pattern() {\n+    check_inference(\n+        r#\"\n+fn test(x: &i32) {\n+    let y = x;\n+    let &z = x;\n+    let a = z;\n+    let (c, d) = (1, \"hello\");\n+}\n+\"#,\n+        \"pattern.txt\",\n+    );\n+}\n+\n fn infer(content: &str) -> String {\n     let (db, _, file_id) = MockDatabase::with_single_file(content);\n     let source_file = db.source_file(file_id);"}, {"sha": "2fd146bf1e75838af50eee2c9cd12fc9131cb3bc", "filename": "crates/ra_syntax/src/ast/generated.rs", "status": "modified", "additions": 10, "deletions": 2, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/afaa26636e4391ebacfc09e9c994c11bab58b834/crates%2Fra_syntax%2Fsrc%2Fast%2Fgenerated.rs", "raw_url": "https://github.com/rust-lang/rust/raw/afaa26636e4391ebacfc09e9c994c11bab58b834/crates%2Fra_syntax%2Fsrc%2Fast%2Fgenerated.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Fsrc%2Fast%2Fgenerated.rs?ref=afaa26636e4391ebacfc09e9c994c11bab58b834", "patch": "@@ -2285,7 +2285,11 @@ impl AstNode for PathPat {\n }\n \n \n-impl PathPat {}\n+impl PathPat {\n+    pub fn path(&self) -> Option<&Path> {\n+        super::child_opt(self)\n+    }\n+}\n \n // PathSegment\n #[derive(Debug, PartialEq, Eq, Hash)]\n@@ -3219,7 +3223,11 @@ impl AstNode for TuplePat {\n }\n \n \n-impl TuplePat {}\n+impl TuplePat {\n+    pub fn args(&self) -> impl Iterator<Item = &Pat> {\n+        super::children(self)\n+    }\n+}\n \n // TupleStructPat\n #[derive(Debug, PartialEq, Eq, Hash)]"}, {"sha": "b524c8aaf2eb44ee77f7ac2190b9659dcdb58970", "filename": "crates/ra_syntax/src/grammar.ron", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/afaa26636e4391ebacfc09e9c994c11bab58b834/crates%2Fra_syntax%2Fsrc%2Fgrammar.ron", "raw_url": "https://github.com/rust-lang/rust/raw/afaa26636e4391ebacfc09e9c994c11bab58b834/crates%2Fra_syntax%2Fsrc%2Fgrammar.ron", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Fsrc%2Fgrammar.ron?ref=afaa26636e4391ebacfc09e9c994c11bab58b834", "patch": "@@ -490,14 +490,14 @@ Grammar(\n         \"RefPat\": ( options: [ \"Pat\" ]),\n         \"BindPat\": ( traits: [\"NameOwner\"] ),\n         \"PlaceholderPat\": (),\n-        \"PathPat\": (),\n+        \"PathPat\": ( options: [\"Path\"] ),\n         \"StructPat\": (),\n         \"FieldPatList\": (),\n         \"TupleStructPat\": (\n             options: [\"Path\"],\n             collections: [[\"args\", \"Pat\"]],\n         ),\n-        \"TuplePat\": (),\n+        \"TuplePat\": ( collections: [[\"args\", \"Pat\"]] ),\n         \"SlicePat\": (),\n         \"RangePat\": (),\n "}, {"sha": "a36fb2f1cd9845685c446b89f5a0038f1b3c152c", "filename": "editors/code/package-lock.json", "status": "modified", "additions": 45, "deletions": 45, "changes": 90, "blob_url": "https://github.com/rust-lang/rust/blob/afaa26636e4391ebacfc09e9c994c11bab58b834/editors%2Fcode%2Fpackage-lock.json", "raw_url": "https://github.com/rust-lang/rust/raw/afaa26636e4391ebacfc09e9c994c11bab58b834/editors%2Fcode%2Fpackage-lock.json", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fpackage-lock.json?ref=afaa26636e4391ebacfc09e9c994c11bab58b834", "patch": "@@ -183,7 +183,7 @@\n             \"dependencies\": {\n                 \"chalk\": {\n                     \"version\": \"1.1.3\",\n-                    \"resolved\": \"https://registry.npmjs.org/chalk/-/chalk-1.1.3.tgz\",\n+                    \"resolved\": \"http://registry.npmjs.org/chalk/-/chalk-1.1.3.tgz\",\n                     \"integrity\": \"sha1-qBFcVeSnAv5NFQq9OHKCKn4J/Jg=\",\n                     \"dev\": true,\n                     \"requires\": {\n@@ -348,7 +348,7 @@\n             \"dependencies\": {\n                 \"readable-stream\": {\n                     \"version\": \"2.3.6\",\n-                    \"resolved\": \"https://registry.npmjs.org/readable-stream/-/readable-stream-2.3.6.tgz\",\n+                    \"resolved\": \"http://registry.npmjs.org/readable-stream/-/readable-stream-2.3.6.tgz\",\n                     \"integrity\": \"sha512-tQtKA9WIAhBF3+VLAseyMqZeBjW0AHJoxOtYqSUZNJxauErmLbVm2FW1y+J/YA9dUrAC39ITejlZWhVIwawkKw==\",\n                     \"dev\": true,\n                     \"requires\": {\n@@ -363,7 +363,7 @@\n                 },\n                 \"string_decoder\": {\n                     \"version\": \"1.1.1\",\n-                    \"resolved\": \"https://registry.npmjs.org/string_decoder/-/string_decoder-1.1.1.tgz\",\n+                    \"resolved\": \"http://registry.npmjs.org/string_decoder/-/string_decoder-1.1.1.tgz\",\n                     \"integrity\": \"sha512-n/ShnvDi6FHbbVfviro+WojiFzv+s8MPMHBczVePfUpDJLwoLT0ht1l4YwBCbi8pJAveEEdnkHyPyTP/mzRfwg==\",\n                     \"dev\": true,\n                     \"requires\": {\n@@ -425,7 +425,7 @@\n         },\n         \"css-select\": {\n             \"version\": \"1.2.0\",\n-            \"resolved\": \"https://registry.npmjs.org/css-select/-/css-select-1.2.0.tgz\",\n+            \"resolved\": \"http://registry.npmjs.org/css-select/-/css-select-1.2.0.tgz\",\n             \"integrity\": \"sha1-KzoRBTnFNV8c2NMUYj6HCxIeyFg=\",\n             \"dev\": true,\n             \"requires\": {\n@@ -461,7 +461,7 @@\n         },\n         \"deep-assign\": {\n             \"version\": \"1.0.0\",\n-            \"resolved\": \"https://registry.npmjs.org/deep-assign/-/deep-assign-1.0.0.tgz\",\n+            \"resolved\": \"http://registry.npmjs.org/deep-assign/-/deep-assign-1.0.0.tgz\",\n             \"integrity\": \"sha1-sJJ0O+hCfcYh6gBnzex+cN0Z83s=\",\n             \"dev\": true,\n             \"requires\": {\n@@ -507,7 +507,7 @@\n             \"dependencies\": {\n                 \"domelementtype\": {\n                     \"version\": \"1.1.3\",\n-                    \"resolved\": \"https://registry.npmjs.org/domelementtype/-/domelementtype-1.1.3.tgz\",\n+                    \"resolved\": \"http://registry.npmjs.org/domelementtype/-/domelementtype-1.1.3.tgz\",\n                     \"integrity\": \"sha1-vSh3PiZCiBrsUVRJJCmcXNgiGFs=\",\n                     \"dev\": true\n                 }\n@@ -540,7 +540,7 @@\n         },\n         \"duplexer\": {\n             \"version\": \"0.1.1\",\n-            \"resolved\": \"https://registry.npmjs.org/duplexer/-/duplexer-0.1.1.tgz\",\n+            \"resolved\": \"http://registry.npmjs.org/duplexer/-/duplexer-0.1.1.tgz\",\n             \"integrity\": \"sha1-rOb/gIwc5mtX0ev5eXessCM0z8E=\",\n             \"dev\": true\n         },\n@@ -558,7 +558,7 @@\n             \"dependencies\": {\n                 \"readable-stream\": {\n                     \"version\": \"2.3.6\",\n-                    \"resolved\": \"https://registry.npmjs.org/readable-stream/-/readable-stream-2.3.6.tgz\",\n+                    \"resolved\": \"http://registry.npmjs.org/readable-stream/-/readable-stream-2.3.6.tgz\",\n                     \"integrity\": \"sha512-tQtKA9WIAhBF3+VLAseyMqZeBjW0AHJoxOtYqSUZNJxauErmLbVm2FW1y+J/YA9dUrAC39ITejlZWhVIwawkKw==\",\n                     \"dev\": true,\n                     \"requires\": {\n@@ -573,7 +573,7 @@\n                 },\n                 \"string_decoder\": {\n                     \"version\": \"1.1.1\",\n-                    \"resolved\": \"https://registry.npmjs.org/string_decoder/-/string_decoder-1.1.1.tgz\",\n+                    \"resolved\": \"http://registry.npmjs.org/string_decoder/-/string_decoder-1.1.1.tgz\",\n                     \"integrity\": \"sha512-n/ShnvDi6FHbbVfviro+WojiFzv+s8MPMHBczVePfUpDJLwoLT0ht1l4YwBCbi8pJAveEEdnkHyPyTP/mzRfwg==\",\n                     \"dev\": true,\n                     \"requires\": {\n@@ -627,7 +627,7 @@\n         },\n         \"event-stream\": {\n             \"version\": \"3.3.4\",\n-            \"resolved\": \"https://registry.npmjs.org/event-stream/-/event-stream-3.3.4.tgz\",\n+            \"resolved\": \"http://registry.npmjs.org/event-stream/-/event-stream-3.3.4.tgz\",\n             \"integrity\": \"sha1-SrTJoPWlTbkzi0w02Gv86PSzVXE=\",\n             \"dev\": true,\n             \"requires\": {\n@@ -694,7 +694,7 @@\n             \"dependencies\": {\n                 \"readable-stream\": {\n                     \"version\": \"2.3.6\",\n-                    \"resolved\": \"https://registry.npmjs.org/readable-stream/-/readable-stream-2.3.6.tgz\",\n+                    \"resolved\": \"http://registry.npmjs.org/readable-stream/-/readable-stream-2.3.6.tgz\",\n                     \"integrity\": \"sha512-tQtKA9WIAhBF3+VLAseyMqZeBjW0AHJoxOtYqSUZNJxauErmLbVm2FW1y+J/YA9dUrAC39ITejlZWhVIwawkKw==\",\n                     \"dev\": true,\n                     \"requires\": {\n@@ -709,7 +709,7 @@\n                 },\n                 \"string_decoder\": {\n                     \"version\": \"1.1.1\",\n-                    \"resolved\": \"https://registry.npmjs.org/string_decoder/-/string_decoder-1.1.1.tgz\",\n+                    \"resolved\": \"http://registry.npmjs.org/string_decoder/-/string_decoder-1.1.1.tgz\",\n                     \"integrity\": \"sha512-n/ShnvDi6FHbbVfviro+WojiFzv+s8MPMHBczVePfUpDJLwoLT0ht1l4YwBCbi8pJAveEEdnkHyPyTP/mzRfwg==\",\n                     \"dev\": true,\n                     \"requires\": {\n@@ -828,7 +828,7 @@\n             \"dependencies\": {\n                 \"readable-stream\": {\n                     \"version\": \"2.3.6\",\n-                    \"resolved\": \"https://registry.npmjs.org/readable-stream/-/readable-stream-2.3.6.tgz\",\n+                    \"resolved\": \"http://registry.npmjs.org/readable-stream/-/readable-stream-2.3.6.tgz\",\n                     \"integrity\": \"sha512-tQtKA9WIAhBF3+VLAseyMqZeBjW0AHJoxOtYqSUZNJxauErmLbVm2FW1y+J/YA9dUrAC39ITejlZWhVIwawkKw==\",\n                     \"dev\": true,\n                     \"requires\": {\n@@ -843,7 +843,7 @@\n                 },\n                 \"string_decoder\": {\n                     \"version\": \"1.1.1\",\n-                    \"resolved\": \"https://registry.npmjs.org/string_decoder/-/string_decoder-1.1.1.tgz\",\n+                    \"resolved\": \"http://registry.npmjs.org/string_decoder/-/string_decoder-1.1.1.tgz\",\n                     \"integrity\": \"sha512-n/ShnvDi6FHbbVfviro+WojiFzv+s8MPMHBczVePfUpDJLwoLT0ht1l4YwBCbi8pJAveEEdnkHyPyTP/mzRfwg==\",\n                     \"dev\": true,\n                     \"requires\": {\n@@ -904,7 +904,7 @@\n                 },\n                 \"readable-stream\": {\n                     \"version\": \"1.0.34\",\n-                    \"resolved\": \"https://registry.npmjs.org/readable-stream/-/readable-stream-1.0.34.tgz\",\n+                    \"resolved\": \"http://registry.npmjs.org/readable-stream/-/readable-stream-1.0.34.tgz\",\n                     \"integrity\": \"sha1-Elgg40vIQtLyqq+v5MKRbuMsFXw=\",\n                     \"dev\": true,\n                     \"requires\": {\n@@ -916,13 +916,13 @@\n                 },\n                 \"string_decoder\": {\n                     \"version\": \"0.10.31\",\n-                    \"resolved\": \"https://registry.npmjs.org/string_decoder/-/string_decoder-0.10.31.tgz\",\n+                    \"resolved\": \"http://registry.npmjs.org/string_decoder/-/string_decoder-0.10.31.tgz\",\n                     \"integrity\": \"sha1-YuIDvEF2bGwoyfyEMB2rHFMQ+pQ=\",\n                     \"dev\": true\n                 },\n                 \"through2\": {\n                     \"version\": \"0.6.5\",\n-                    \"resolved\": \"https://registry.npmjs.org/through2/-/through2-0.6.5.tgz\",\n+                    \"resolved\": \"http://registry.npmjs.org/through2/-/through2-0.6.5.tgz\",\n                     \"integrity\": \"sha1-QaucZ7KdVyCQcUEOHXp6lozTrUg=\",\n                     \"dev\": true,\n                     \"requires\": {\n@@ -1192,7 +1192,7 @@\n         },\n         \"is-obj\": {\n             \"version\": \"1.0.1\",\n-            \"resolved\": \"https://registry.npmjs.org/is-obj/-/is-obj-1.0.1.tgz\",\n+            \"resolved\": \"http://registry.npmjs.org/is-obj/-/is-obj-1.0.1.tgz\",\n             \"integrity\": \"sha1-PkcprB9f3gJc19g6iW2rn09n2w8=\",\n             \"dev\": true\n         },\n@@ -1319,7 +1319,7 @@\n         },\n         \"kind-of\": {\n             \"version\": \"1.1.0\",\n-            \"resolved\": \"https://registry.npmjs.org/kind-of/-/kind-of-1.1.0.tgz\",\n+            \"resolved\": \"http://registry.npmjs.org/kind-of/-/kind-of-1.1.0.tgz\",\n             \"integrity\": \"sha1-FAo9LUGjbS78+pN3tiwk+ElaXEQ=\",\n             \"dev\": true\n         },\n@@ -1334,7 +1334,7 @@\n             \"dependencies\": {\n                 \"readable-stream\": {\n                     \"version\": \"2.3.6\",\n-                    \"resolved\": \"https://registry.npmjs.org/readable-stream/-/readable-stream-2.3.6.tgz\",\n+                    \"resolved\": \"http://registry.npmjs.org/readable-stream/-/readable-stream-2.3.6.tgz\",\n                     \"integrity\": \"sha512-tQtKA9WIAhBF3+VLAseyMqZeBjW0AHJoxOtYqSUZNJxauErmLbVm2FW1y+J/YA9dUrAC39ITejlZWhVIwawkKw==\",\n                     \"dev\": true,\n                     \"requires\": {\n@@ -1349,7 +1349,7 @@\n                 },\n                 \"string_decoder\": {\n                     \"version\": \"1.1.1\",\n-                    \"resolved\": \"https://registry.npmjs.org/string_decoder/-/string_decoder-1.1.1.tgz\",\n+                    \"resolved\": \"http://registry.npmjs.org/string_decoder/-/string_decoder-1.1.1.tgz\",\n                     \"integrity\": \"sha512-n/ShnvDi6FHbbVfviro+WojiFzv+s8MPMHBczVePfUpDJLwoLT0ht1l4YwBCbi8pJAveEEdnkHyPyTP/mzRfwg==\",\n                     \"dev\": true,\n                     \"requires\": {\n@@ -1384,7 +1384,7 @@\n         },\n         \"map-stream\": {\n             \"version\": \"0.1.0\",\n-            \"resolved\": \"https://registry.npmjs.org/map-stream/-/map-stream-0.1.0.tgz\",\n+            \"resolved\": \"http://registry.npmjs.org/map-stream/-/map-stream-0.1.0.tgz\",\n             \"integrity\": \"sha1-5WqpTEyAVaFkBKBnS3jyFffI4ZQ=\",\n             \"dev\": true\n         },\n@@ -1439,13 +1439,13 @@\n         },\n         \"minimist\": {\n             \"version\": \"0.0.8\",\n-            \"resolved\": \"https://registry.npmjs.org/minimist/-/minimist-0.0.8.tgz\",\n+            \"resolved\": \"http://registry.npmjs.org/minimist/-/minimist-0.0.8.tgz\",\n             \"integrity\": \"sha1-hX/Kv8M5fSYluCKCYuhqp6ARsF0=\",\n             \"dev\": true\n         },\n         \"mkdirp\": {\n             \"version\": \"0.5.1\",\n-            \"resolved\": \"https://registry.npmjs.org/mkdirp/-/mkdirp-0.5.1.tgz\",\n+            \"resolved\": \"http://registry.npmjs.org/mkdirp/-/mkdirp-0.5.1.tgz\",\n             \"integrity\": \"sha1-MAV0OOrGz3+MR2fzhkjWaX11yQM=\",\n             \"dev\": true,\n             \"requires\": {\n@@ -1618,7 +1618,7 @@\n             \"dependencies\": {\n                 \"readable-stream\": {\n                     \"version\": \"2.3.6\",\n-                    \"resolved\": \"https://registry.npmjs.org/readable-stream/-/readable-stream-2.3.6.tgz\",\n+                    \"resolved\": \"http://registry.npmjs.org/readable-stream/-/readable-stream-2.3.6.tgz\",\n                     \"integrity\": \"sha512-tQtKA9WIAhBF3+VLAseyMqZeBjW0AHJoxOtYqSUZNJxauErmLbVm2FW1y+J/YA9dUrAC39ITejlZWhVIwawkKw==\",\n                     \"dev\": true,\n                     \"requires\": {\n@@ -1633,7 +1633,7 @@\n                 },\n                 \"string_decoder\": {\n                     \"version\": \"1.1.1\",\n-                    \"resolved\": \"https://registry.npmjs.org/string_decoder/-/string_decoder-1.1.1.tgz\",\n+                    \"resolved\": \"http://registry.npmjs.org/string_decoder/-/string_decoder-1.1.1.tgz\",\n                     \"integrity\": \"sha512-n/ShnvDi6FHbbVfviro+WojiFzv+s8MPMHBczVePfUpDJLwoLT0ht1l4YwBCbi8pJAveEEdnkHyPyTP/mzRfwg==\",\n                     \"dev\": true,\n                     \"requires\": {\n@@ -1644,13 +1644,13 @@\n         },\n         \"os-homedir\": {\n             \"version\": \"1.0.2\",\n-            \"resolved\": \"https://registry.npmjs.org/os-homedir/-/os-homedir-1.0.2.tgz\",\n+            \"resolved\": \"http://registry.npmjs.org/os-homedir/-/os-homedir-1.0.2.tgz\",\n             \"integrity\": \"sha1-/7xJiDNuDoM94MFox+8VISGqf7M=\",\n             \"dev\": true\n         },\n         \"os-tmpdir\": {\n             \"version\": \"1.0.2\",\n-            \"resolved\": \"https://registry.npmjs.org/os-tmpdir/-/os-tmpdir-1.0.2.tgz\",\n+            \"resolved\": \"http://registry.npmjs.org/os-tmpdir/-/os-tmpdir-1.0.2.tgz\",\n             \"integrity\": \"sha1-u+Z0BseaqFxc/sdm/lc0VV36EnQ=\",\n             \"dev\": true\n         },\n@@ -1666,7 +1666,7 @@\n         },\n         \"parse-semver\": {\n             \"version\": \"1.1.1\",\n-            \"resolved\": \"https://registry.npmjs.org/parse-semver/-/parse-semver-1.1.1.tgz\",\n+            \"resolved\": \"http://registry.npmjs.org/parse-semver/-/parse-semver-1.1.1.tgz\",\n             \"integrity\": \"sha1-mkr9bfBj3Egm+T+6SpnPIj9mbLg=\",\n             \"dev\": true,\n             \"requires\": {\n@@ -1690,7 +1690,7 @@\n         },\n         \"path-is-absolute\": {\n             \"version\": \"1.0.1\",\n-            \"resolved\": \"https://registry.npmjs.org/path-is-absolute/-/path-is-absolute-1.0.1.tgz\",\n+            \"resolved\": \"http://registry.npmjs.org/path-is-absolute/-/path-is-absolute-1.0.1.tgz\",\n             \"integrity\": \"sha1-F0uSaHNVNP+8es5r9TpanhtcX18=\",\n             \"dev\": true\n         },\n@@ -1702,7 +1702,7 @@\n         },\n         \"pause-stream\": {\n             \"version\": \"0.0.11\",\n-            \"resolved\": \"https://registry.npmjs.org/pause-stream/-/pause-stream-0.0.11.tgz\",\n+            \"resolved\": \"http://registry.npmjs.org/pause-stream/-/pause-stream-0.0.11.tgz\",\n             \"integrity\": \"sha1-/lo0sMvOErWqaitAPuLnO2AvFEU=\",\n             \"dev\": true,\n             \"requires\": {\n@@ -1955,7 +1955,7 @@\n         },\n         \"split\": {\n             \"version\": \"0.3.3\",\n-            \"resolved\": \"https://registry.npmjs.org/split/-/split-0.3.3.tgz\",\n+            \"resolved\": \"http://registry.npmjs.org/split/-/split-0.3.3.tgz\",\n             \"integrity\": \"sha1-zQ7qXmOiEd//frDwkcQTPi0N0o8=\",\n             \"dev\": true,\n             \"requires\": {\n@@ -1964,7 +1964,7 @@\n         },\n         \"sprintf-js\": {\n             \"version\": \"1.0.3\",\n-            \"resolved\": \"https://registry.npmjs.org/sprintf-js/-/sprintf-js-1.0.3.tgz\",\n+            \"resolved\": \"http://registry.npmjs.org/sprintf-js/-/sprintf-js-1.0.3.tgz\",\n             \"integrity\": \"sha1-BOaSb2YolTVPPdAVIDYzuFcpfiw=\",\n             \"dev\": true\n         },\n@@ -1993,7 +1993,7 @@\n         },\n         \"stream-combiner\": {\n             \"version\": \"0.0.4\",\n-            \"resolved\": \"https://registry.npmjs.org/stream-combiner/-/stream-combiner-0.0.4.tgz\",\n+            \"resolved\": \"http://registry.npmjs.org/stream-combiner/-/stream-combiner-0.0.4.tgz\",\n             \"integrity\": \"sha1-TV5DPBhSYd3mI8o/RMWGvPXErRQ=\",\n             \"dev\": true,\n             \"requires\": {\n@@ -2017,7 +2017,7 @@\n             \"dependencies\": {\n                 \"readable-stream\": {\n                     \"version\": \"2.3.6\",\n-                    \"resolved\": \"https://registry.npmjs.org/readable-stream/-/readable-stream-2.3.6.tgz\",\n+                    \"resolved\": \"http://registry.npmjs.org/readable-stream/-/readable-stream-2.3.6.tgz\",\n                     \"integrity\": \"sha512-tQtKA9WIAhBF3+VLAseyMqZeBjW0AHJoxOtYqSUZNJxauErmLbVm2FW1y+J/YA9dUrAC39ITejlZWhVIwawkKw==\",\n                     \"dev\": true,\n                     \"requires\": {\n@@ -2032,7 +2032,7 @@\n                 },\n                 \"string_decoder\": {\n                     \"version\": \"1.1.1\",\n-                    \"resolved\": \"https://registry.npmjs.org/string_decoder/-/string_decoder-1.1.1.tgz\",\n+                    \"resolved\": \"http://registry.npmjs.org/string_decoder/-/string_decoder-1.1.1.tgz\",\n                     \"integrity\": \"sha512-n/ShnvDi6FHbbVfviro+WojiFzv+s8MPMHBczVePfUpDJLwoLT0ht1l4YwBCbi8pJAveEEdnkHyPyTP/mzRfwg==\",\n                     \"dev\": true,\n                     \"requires\": {\n@@ -2058,7 +2058,7 @@\n         },\n         \"strip-ansi\": {\n             \"version\": \"3.0.1\",\n-            \"resolved\": \"https://registry.npmjs.org/strip-ansi/-/strip-ansi-3.0.1.tgz\",\n+            \"resolved\": \"http://registry.npmjs.org/strip-ansi/-/strip-ansi-3.0.1.tgz\",\n             \"integrity\": \"sha1-ajhfuIU9lS1f8F0Oiq+UJ43GPc8=\",\n             \"dev\": true,\n             \"requires\": {\n@@ -2073,7 +2073,7 @@\n         },\n         \"tar\": {\n             \"version\": \"2.2.1\",\n-            \"resolved\": \"https://registry.npmjs.org/tar/-/tar-2.2.1.tgz\",\n+            \"resolved\": \"http://registry.npmjs.org/tar/-/tar-2.2.1.tgz\",\n             \"integrity\": \"sha1-jk0qJWwOIYXGsYrWlK7JaLg8sdE=\",\n             \"dev\": true,\n             \"requires\": {\n@@ -2084,7 +2084,7 @@\n         },\n         \"through\": {\n             \"version\": \"2.3.8\",\n-            \"resolved\": \"https://registry.npmjs.org/through/-/through-2.3.8.tgz\",\n+            \"resolved\": \"http://registry.npmjs.org/through/-/through-2.3.8.tgz\",\n             \"integrity\": \"sha1-DdTJ/6q8NXlgsbckEV1+Doai4fU=\",\n             \"dev\": true\n         },\n@@ -2100,7 +2100,7 @@\n             \"dependencies\": {\n                 \"readable-stream\": {\n                     \"version\": \"2.3.6\",\n-                    \"resolved\": \"https://registry.npmjs.org/readable-stream/-/readable-stream-2.3.6.tgz\",\n+                    \"resolved\": \"http://registry.npmjs.org/readable-stream/-/readable-stream-2.3.6.tgz\",\n                     \"integrity\": \"sha512-tQtKA9WIAhBF3+VLAseyMqZeBjW0AHJoxOtYqSUZNJxauErmLbVm2FW1y+J/YA9dUrAC39ITejlZWhVIwawkKw==\",\n                     \"dev\": true,\n                     \"requires\": {\n@@ -2115,7 +2115,7 @@\n                 },\n                 \"string_decoder\": {\n                     \"version\": \"1.1.1\",\n-                    \"resolved\": \"https://registry.npmjs.org/string_decoder/-/string_decoder-1.1.1.tgz\",\n+                    \"resolved\": \"http://registry.npmjs.org/string_decoder/-/string_decoder-1.1.1.tgz\",\n                     \"integrity\": \"sha512-n/ShnvDi6FHbbVfviro+WojiFzv+s8MPMHBczVePfUpDJLwoLT0ht1l4YwBCbi8pJAveEEdnkHyPyTP/mzRfwg==\",\n                     \"dev\": true,\n                     \"requires\": {\n@@ -2223,7 +2223,7 @@\n         },\n         \"tunnel\": {\n             \"version\": \"0.0.4\",\n-            \"resolved\": \"https://registry.npmjs.org/tunnel/-/tunnel-0.0.4.tgz\",\n+            \"resolved\": \"http://registry.npmjs.org/tunnel/-/tunnel-0.0.4.tgz\",\n             \"integrity\": \"sha1-LTeFoVjBdMmhbcLARuxfxfF0IhM=\",\n             \"dev\": true\n         },\n@@ -2254,7 +2254,7 @@\n             \"dependencies\": {\n                 \"underscore\": {\n                     \"version\": \"1.8.3\",\n-                    \"resolved\": \"https://registry.npmjs.org/underscore/-/underscore-1.8.3.tgz\",\n+                    \"resolved\": \"http://registry.npmjs.org/underscore/-/underscore-1.8.3.tgz\",\n                     \"integrity\": \"sha1-Tz+1OxBuYJf8+ctBCfKl6b36UCI=\",\n                     \"dev\": true\n                 }\n@@ -2397,7 +2397,7 @@\n                 },\n                 \"readable-stream\": {\n                     \"version\": \"2.3.6\",\n-                    \"resolved\": \"https://registry.npmjs.org/readable-stream/-/readable-stream-2.3.6.tgz\",\n+                    \"resolved\": \"http://registry.npmjs.org/readable-stream/-/readable-stream-2.3.6.tgz\",\n                     \"integrity\": \"sha512-tQtKA9WIAhBF3+VLAseyMqZeBjW0AHJoxOtYqSUZNJxauErmLbVm2FW1y+J/YA9dUrAC39ITejlZWhVIwawkKw==\",\n                     \"dev\": true,\n                     \"requires\": {\n@@ -2412,7 +2412,7 @@\n                 },\n                 \"string_decoder\": {\n                     \"version\": \"1.1.1\",\n-                    \"resolved\": \"https://registry.npmjs.org/string_decoder/-/string_decoder-1.1.1.tgz\",\n+                    \"resolved\": \"http://registry.npmjs.org/string_decoder/-/string_decoder-1.1.1.tgz\",\n                     \"integrity\": \"sha512-n/ShnvDi6FHbbVfviro+WojiFzv+s8MPMHBczVePfUpDJLwoLT0ht1l4YwBCbi8pJAveEEdnkHyPyTP/mzRfwg==\",\n                     \"dev\": true,\n                     \"requires\": {"}]}