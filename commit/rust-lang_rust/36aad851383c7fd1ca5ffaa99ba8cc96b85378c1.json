{"sha": "36aad851383c7fd1ca5ffaa99ba8cc96b85378c1", "node_id": "MDY6Q29tbWl0NzI0NzEyOjM2YWFkODUxMzgzYzdmZDFjYTVmZmFhOTliYThjYzk2Yjg1Mzc4YzE=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2018-11-20T21:39:50Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2018-11-20T21:39:50Z"}, "message": "add item map query", "tree": {"sha": "512fce887b8d79fa2d6442dde5c5b0262ac4757f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/512fce887b8d79fa2d6442dde5c5b0262ac4757f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/36aad851383c7fd1ca5ffaa99ba8cc96b85378c1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/36aad851383c7fd1ca5ffaa99ba8cc96b85378c1", "html_url": "https://github.com/rust-lang/rust/commit/36aad851383c7fd1ca5ffaa99ba8cc96b85378c1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/36aad851383c7fd1ca5ffaa99ba8cc96b85378c1/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9bb11aee44f377fdf2ce7bed5c09ccbcf30f9b57", "url": "https://api.github.com/repos/rust-lang/rust/commits/9bb11aee44f377fdf2ce7bed5c09ccbcf30f9b57", "html_url": "https://github.com/rust-lang/rust/commit/9bb11aee44f377fdf2ce7bed5c09ccbcf30f9b57"}], "stats": {"total": 31, "additions": 23, "deletions": 8}, "files": [{"sha": "cecce3447de7bb3ab3f9bd94aced96e7b0c7ad44", "filename": "crates/ra_analysis/src/db.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/36aad851383c7fd1ca5ffaa99ba8cc96b85378c1/crates%2Fra_analysis%2Fsrc%2Fdb.rs", "raw_url": "https://github.com/rust-lang/rust/raw/36aad851383c7fd1ca5ffaa99ba8cc96b85378c1/crates%2Fra_analysis%2Fsrc%2Fdb.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_analysis%2Fsrc%2Fdb.rs?ref=36aad851383c7fd1ca5ffaa99ba8cc96b85378c1", "patch": "@@ -8,7 +8,7 @@ use crate::{\n     db,\n     descriptors::{\n         DescriptorDatabase, FnScopesQuery, FnSyntaxQuery, ModuleScopeQuery, ModuleTreeQuery,\n-        SubmodulesQuery,\n+        SubmodulesQuery, ItemMapQuery,\n     },\n     symbol_index::SymbolIndex,\n     syntax_ptr::SyntaxPtr,\n@@ -85,8 +85,9 @@ salsa::database_storage! {\n         }\n         impl DescriptorDatabase {\n             fn module_tree() for ModuleTreeQuery;\n-            fn module_scope() for ModuleScopeQuery;\n             fn fn_scopes() for FnScopesQuery;\n+            fn _item_map() for ItemMapQuery;\n+            fn _module_scope() for ModuleScopeQuery;\n             fn _fn_syntax() for FnSyntaxQuery;\n             fn _submodules() for SubmodulesQuery;\n         }"}, {"sha": "30bc5eca28e3ba1c51c397e9f487bc174b621e24", "filename": "crates/ra_analysis/src/descriptors/mod.rs", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/36aad851383c7fd1ca5ffaa99ba8cc96b85378c1/crates%2Fra_analysis%2Fsrc%2Fdescriptors%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/36aad851383c7fd1ca5ffaa99ba8cc96b85378c1/crates%2Fra_analysis%2Fsrc%2Fdescriptors%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_analysis%2Fsrc%2Fdescriptors%2Fmod.rs?ref=36aad851383c7fd1ca5ffaa99ba8cc96b85378c1", "patch": "@@ -11,7 +11,7 @@ use ra_syntax::{\n use crate::{\n     db::SyntaxDatabase,\n     descriptors::function::{resolve_local_name, FnId, FnScopes},\n-    descriptors::module::{ModuleId, ModuleScope, ModuleTree, ModuleSource},\n+    descriptors::module::{ModuleId, ModuleScope, ModuleTree, ModuleSource, nameres::ItemMap},\n     input::SourceRootId,\n     loc2id::IdDatabase,\n     syntax_ptr::LocalSyntaxPtr,\n@@ -25,6 +25,10 @@ salsa::query_group! {\n             use fn function::imp::fn_scopes;\n         }\n \n+        fn _item_map(source_root_id: SourceRootId) -> Cancelable<Arc<ItemMap>> {\n+            type ItemMapQuery;\n+            use fn module::nameres::item_map;\n+        }\n         fn _module_tree(source_root_id: SourceRootId) -> Cancelable<Arc<ModuleTree>> {\n             type ModuleTreeQuery;\n             use fn module::imp::module_tree;"}, {"sha": "124926a40da7765f9d2227dda32c6361dbf1d8df", "filename": "crates/ra_analysis/src/descriptors/module/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/36aad851383c7fd1ca5ffaa99ba8cc96b85378c1/crates%2Fra_analysis%2Fsrc%2Fdescriptors%2Fmodule%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/36aad851383c7fd1ca5ffaa99ba8cc96b85378c1/crates%2Fra_analysis%2Fsrc%2Fdescriptors%2Fmodule%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_analysis%2Fsrc%2Fdescriptors%2Fmodule%2Fmod.rs?ref=36aad851383c7fd1ca5ffaa99ba8cc96b85378c1", "patch": "@@ -1,6 +1,6 @@\n pub(super) mod imp;\n mod scope;\n-mod nameres;\n+pub(super) mod nameres;\n \n use std::sync::Arc;\n "}, {"sha": "657e5bd1c8bb478caae351b8aec7abd9c1101f51", "filename": "crates/ra_analysis/src/descriptors/module/nameres.rs", "status": "modified", "additions": 14, "deletions": 4, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/36aad851383c7fd1ca5ffaa99ba8cc96b85378c1/crates%2Fra_analysis%2Fsrc%2Fdescriptors%2Fmodule%2Fnameres.rs", "raw_url": "https://github.com/rust-lang/rust/raw/36aad851383c7fd1ca5ffaa99ba8cc96b85378c1/crates%2Fra_analysis%2Fsrc%2Fdescriptors%2Fmodule%2Fnameres.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_analysis%2Fsrc%2Fdescriptors%2Fmodule%2Fnameres.rs?ref=36aad851383c7fd1ca5ffaa99ba8cc96b85378c1", "patch": "@@ -9,6 +9,7 @@ use ra_syntax::{\n };\n \n use crate::{\n+    Cancelable,\n     loc2id::{DefId, DefLoc},\n     descriptors::{\n         DescriptorDatabase,\n@@ -45,20 +46,29 @@ enum PathKind {\n     Crate,\n }\n \n-#[derive(Debug)]\n-struct ItemMap {\n+pub(crate) fn item_map(\n+    db: &impl DescriptorDatabase,\n+    source_root: SourceRootId,\n+) -> Cancelable<Arc<ItemMap>> {\n+    unimplemented!()\n+}\n+\n+/// Item map is the result of the name resolution. Item map contains, for each\n+/// module, the set of visible items.\n+#[derive(Debug, PartialEq, Eq)]\n+pub(crate) struct ItemMap {\n     per_module: FxHashMap<ModuleId, ModuleItems>,\n }\n \n-#[derive(Debug, Default)]\n+#[derive(Debug, Default, PartialEq, Eq)]\n struct ModuleItems {\n     items: FxHashMap<SmolStr, Resolution>,\n     import_resolutions: FxHashMap<LocalSyntaxPtr, DefId>,\n }\n \n /// Resolution is basically `DefId` atm, but it should account for stuff like\n /// multiple namespaces, ambiguity and errors.\n-#[derive(Debug, Clone)]\n+#[derive(Debug, Clone, PartialEq, Eq)]\n struct Resolution {\n     /// None for unresolved\n     def_id: Option<DefId>,"}]}