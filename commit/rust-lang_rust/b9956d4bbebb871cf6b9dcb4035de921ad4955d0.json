{"sha": "b9956d4bbebb871cf6b9dcb4035de921ad4955d0", "node_id": "MDY6Q29tbWl0NzI0NzEyOmI5OTU2ZDRiYmViYjg3MWNmNmI5ZGNiNDAzNWRlOTIxYWQ0OTU1ZDA=", "commit": {"author": {"name": "djzin", "email": "noreply@github.com", "date": "2016-12-27T11:35:56Z"}, "committer": {"name": "djzin", "email": "noreply@github.com", "date": "2017-01-14T16:51:51Z"}, "message": "shorten range syntax", "tree": {"sha": "9b2c9a0e15b947894005239bb4e0bcf5b2176c6e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9b2c9a0e15b947894005239bb4e0bcf5b2176c6e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b9956d4bbebb871cf6b9dcb4035de921ad4955d0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b9956d4bbebb871cf6b9dcb4035de921ad4955d0", "html_url": "https://github.com/rust-lang/rust/commit/b9956d4bbebb871cf6b9dcb4035de921ad4955d0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b9956d4bbebb871cf6b9dcb4035de921ad4955d0/comments", "author": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "58e597e1f7a3d08ea25651f6c6cb35bf18df5820", "url": "https://api.github.com/repos/rust-lang/rust/commits/58e597e1f7a3d08ea25651f6c6cb35bf18df5820", "html_url": "https://github.com/rust-lang/rust/commit/58e597e1f7a3d08ea25651f6c6cb35bf18df5820"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "3264e1923373b73ecfa042eb73bd97273cac86e5", "filename": "src/libcollections/btree/set.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b9956d4bbebb871cf6b9dcb4035de921ad4955d0/src%2Flibcollections%2Fbtree%2Fset.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b9956d4bbebb871cf6b9dcb4035de921ad4955d0/src%2Flibcollections%2Fbtree%2Fset.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcollections%2Fbtree%2Fset.rs?ref=b9956d4bbebb871cf6b9dcb4035de921ad4955d0", "patch": "@@ -227,7 +227,7 @@ impl<T: Ord> BTreeSet<T> {\n     /// for &elem in set.range((Included(&4), Included(&8))) {\n     ///     println!(\"{}\", elem);\n     /// }\n-    /// assert_eq!(Some(&5), set.range((Included(&4), Unbounded)).next());\n+    /// assert_eq!(Some(&5), set.range(4..).next());\n     /// ```\n     #[unstable(feature = \"btree_range\",\n                reason = \"matches collection reform specification, waiting for dust to settle\","}]}