{"sha": "93bb57e765bf7b3dcb8d3ac4e29d6ddf8df8f091", "node_id": "MDY6Q29tbWl0NzI0NzEyOjkzYmI1N2U3NjViZjdiM2RjYjhkM2FjNGUyOWQ2ZGRmOGRmOGYwOTE=", "commit": {"author": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2015-08-12T05:11:20Z"}, "committer": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2015-08-12T05:11:20Z"}, "message": "rollup merge of #27605: AlisdairO/diagnostics387\n\nAs title :-)\nPart of #24407.\n\nr? @Manishearth", "tree": {"sha": "15ff0c7bc38507c227bdae663e8c2558c37d828f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/15ff0c7bc38507c227bdae663e8c2558c37d828f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/93bb57e765bf7b3dcb8d3ac4e29d6ddf8df8f091", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/93bb57e765bf7b3dcb8d3ac4e29d6ddf8df8f091", "html_url": "https://github.com/rust-lang/rust/commit/93bb57e765bf7b3dcb8d3ac4e29d6ddf8df8f091", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/93bb57e765bf7b3dcb8d3ac4e29d6ddf8df8f091/comments", "author": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "58b0aa5e420643d454cf141263652a8bcb6a35f1", "url": "https://api.github.com/repos/rust-lang/rust/commits/58b0aa5e420643d454cf141263652a8bcb6a35f1", "html_url": "https://github.com/rust-lang/rust/commit/58b0aa5e420643d454cf141263652a8bcb6a35f1"}, {"sha": "f0419661f0d27f5662f03359ebf0091a4ac7b7b2", "url": "https://api.github.com/repos/rust-lang/rust/commits/f0419661f0d27f5662f03359ebf0091a4ac7b7b2", "html_url": "https://github.com/rust-lang/rust/commit/f0419661f0d27f5662f03359ebf0091a4ac7b7b2"}], "stats": {"total": 55, "additions": 54, "deletions": 1}, "files": [{"sha": "850701e704613c3ac666d5338c3db85a6903fc97", "filename": "src/librustc_borrowck/diagnostics.rs", "status": "modified", "additions": 54, "deletions": 1, "changes": 55, "blob_url": "https://github.com/rust-lang/rust/blob/93bb57e765bf7b3dcb8d3ac4e29d6ddf8df8f091/src%2Flibrustc_borrowck%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/93bb57e765bf7b3dcb8d3ac4e29d6ddf8df8f091/src%2Flibrustc_borrowck%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_borrowck%2Fdiagnostics.rs?ref=93bb57e765bf7b3dcb8d3ac4e29d6ddf8df8f091", "patch": "@@ -158,6 +158,60 @@ fn main(){\n     x = 5;\n }\n ```\n+\"##,\n+\n+E0387: r##\"\n+This error occurs when an attempt is made to mutate or mutably reference data\n+that a closure has captured immutably. Examples of this error are shown below:\n+\n+```\n+// Accepts a function or a closure that captures its environment immutably.\n+// Closures passed to foo will not be able to mutate their closed-over state.\n+fn foo<F: Fn()>(f: F) { }\n+\n+// Attempts to mutate closed-over data.  Error message reads:\n+// `cannot assign to data in a captured outer variable...`\n+fn mutable() {\n+    let mut x = 0u32;\n+    foo(|| x = 2);\n+}\n+\n+// Attempts to take a mutable reference to closed-over data.  Error message\n+// reads: `cannot borrow data mutably in a captured outer variable...`\n+fn mut_addr() {\n+    let mut x = 0u32;\n+    foo(|| { let y = &mut x; });\n+}\n+```\n+\n+The problem here is that foo is defined as accepting a parameter of type `Fn`.\n+Closures passed into foo will thus be inferred to be of type `Fn`, meaning that\n+they capture their context immutably.\n+\n+If the definition of `foo` is under your control, the simplest solution is to\n+capture the data mutably. This can be done by defining `foo` to take FnMut\n+rather than Fn:\n+\n+```\n+fn foo<F: FnMut()>(f: F) { }\n+```\n+\n+Alternatively, we can consider using the `Cell` and `RefCell` types to achieve\n+interior mutability through a shared reference. Our example's `mutable` function\n+could be redefined as below:\n+\n+```\n+use std::cell::Cell;\n+\n+fn mutable() {\n+    let x = Cell::new(0u32);\n+    foo(|| x.set(2));\n+}\n+```\n+\n+You can read more about cell types in the API documentation:\n+\n+https://doc.rust-lang.org/std/cell/\n \"##\n \n }\n@@ -166,7 +220,6 @@ register_diagnostics! {\n     E0383, // partial reinitialization of uninitialized structure\n     E0385, // {} in an aliasable location\n     E0386, // {} in an immutable container\n-    E0387, // {} in a captured outer variable in an `Fn` closure\n     E0388, // {} in a static location\n     E0389  // {} in a `&` reference\n }"}]}