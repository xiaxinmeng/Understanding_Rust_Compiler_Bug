{"sha": "9c4308ed9296b4023b627337c81d55c4532d11c1", "node_id": "MDY6Q29tbWl0NzI0NzEyOjljNDMwOGVkOTI5NmI0MDIzYjYyNzMzN2M4MWQ1NWM0NTMyZDExYzE=", "commit": {"author": {"name": "John K\u00e5re Alsaker", "email": "john.kare.alsaker@gmail.com", "date": "2020-02-07T18:01:27Z"}, "committer": {"name": "John K\u00e5re Alsaker", "email": "john.kare.alsaker@gmail.com", "date": "2020-03-14T21:52:29Z"}, "message": "Update `find`", "tree": {"sha": "c791960e578071617b363a501ffb9ca5630160e3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c791960e578071617b363a501ffb9ca5630160e3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9c4308ed9296b4023b627337c81d55c4532d11c1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9c4308ed9296b4023b627337c81d55c4532d11c1", "html_url": "https://github.com/rust-lang/rust/commit/9c4308ed9296b4023b627337c81d55c4532d11c1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9c4308ed9296b4023b627337c81d55c4532d11c1/comments", "author": {"login": "Zoxc", "id": 25784, "node_id": "MDQ6VXNlcjI1Nzg0", "avatar_url": "https://avatars.githubusercontent.com/u/25784?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Zoxc", "html_url": "https://github.com/Zoxc", "followers_url": "https://api.github.com/users/Zoxc/followers", "following_url": "https://api.github.com/users/Zoxc/following{/other_user}", "gists_url": "https://api.github.com/users/Zoxc/gists{/gist_id}", "starred_url": "https://api.github.com/users/Zoxc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Zoxc/subscriptions", "organizations_url": "https://api.github.com/users/Zoxc/orgs", "repos_url": "https://api.github.com/users/Zoxc/repos", "events_url": "https://api.github.com/users/Zoxc/events{/privacy}", "received_events_url": "https://api.github.com/users/Zoxc/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Zoxc", "id": 25784, "node_id": "MDQ6VXNlcjI1Nzg0", "avatar_url": "https://avatars.githubusercontent.com/u/25784?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Zoxc", "html_url": "https://github.com/Zoxc", "followers_url": "https://api.github.com/users/Zoxc/followers", "following_url": "https://api.github.com/users/Zoxc/following{/other_user}", "gists_url": "https://api.github.com/users/Zoxc/gists{/gist_id}", "starred_url": "https://api.github.com/users/Zoxc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Zoxc/subscriptions", "organizations_url": "https://api.github.com/users/Zoxc/orgs", "repos_url": "https://api.github.com/users/Zoxc/repos", "events_url": "https://api.github.com/users/Zoxc/events{/privacy}", "received_events_url": "https://api.github.com/users/Zoxc/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d5827d8bc1fd18883ad7f7a220490d12f60ae704", "url": "https://api.github.com/repos/rust-lang/rust/commits/d5827d8bc1fd18883ad7f7a220490d12f60ae704", "html_url": "https://github.com/rust-lang/rust/commit/d5827d8bc1fd18883ad7f7a220490d12f60ae704"}], "stats": {"total": 9, "additions": 2, "deletions": 7}, "files": [{"sha": "c98a919d0f5f33dfe4478df52cc52379fbc2cef5", "filename": "src/librustc/hir/map/mod.rs", "status": "modified", "additions": 2, "deletions": 7, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/9c4308ed9296b4023b627337c81d55c4532d11c1/src%2Flibrustc%2Fhir%2Fmap%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9c4308ed9296b4023b627337c81d55c4532d11c1/src%2Flibrustc%2Fhir%2Fmap%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fhir%2Fmap%2Fmod.rs?ref=9c4308ed9296b4023b627337c81d55c4532d11c1", "patch": "@@ -607,13 +607,8 @@ impl<'hir> Map<'hir> {\n \n     /// Retrieves the `Node` corresponding to `id`, returning `None` if cannot be found.\n     pub fn find(&self, hir_id: HirId) -> Option<Node<'hir>> {\n-        let result = self.find_entry(hir_id).and_then(|entry| {\n-            if let Node::Crate(..) = entry.node { None } else { Some(entry.node) }\n-        });\n-        if result.is_some() {\n-            self.read(hir_id);\n-        }\n-        result\n+        let node = self.get_entry(hir_id).node;\n+        if let Node::Crate(..) = node { None } else { Some(node) }\n     }\n \n     /// Similar to `get_parent`; returns the parent HIR Id, or just `hir_id` if there"}]}