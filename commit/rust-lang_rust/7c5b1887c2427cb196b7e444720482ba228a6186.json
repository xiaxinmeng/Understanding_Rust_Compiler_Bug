{"sha": "7c5b1887c2427cb196b7e444720482ba228a6186", "node_id": "C_kwDOAAsO6NoAKDdjNWIxODg3YzI0MjdjYjE5NmI3ZTQ0NDcyMDQ4MmJhMjI4YTYxODY", "commit": {"author": {"name": "Steven Casper", "email": "sebastiancasper3@gmail.com", "date": "2022-11-05T04:21:55Z"}, "committer": {"name": "Steven Casper", "email": "sebastiancasper3@gmail.com", "date": "2022-11-05T04:21:55Z"}, "message": "Bless all let_underscore tests", "tree": {"sha": "5cd22a8f932fe943e68ca78b5093b8f6f72db13e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5cd22a8f932fe943e68ca78b5093b8f6f72db13e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7c5b1887c2427cb196b7e444720482ba228a6186", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7c5b1887c2427cb196b7e444720482ba228a6186", "html_url": "https://github.com/rust-lang/rust/commit/7c5b1887c2427cb196b7e444720482ba228a6186", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7c5b1887c2427cb196b7e444720482ba228a6186/comments", "author": {"login": "SquareMan", "id": 3579314, "node_id": "MDQ6VXNlcjM1NzkzMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3579314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SquareMan", "html_url": "https://github.com/SquareMan", "followers_url": "https://api.github.com/users/SquareMan/followers", "following_url": "https://api.github.com/users/SquareMan/following{/other_user}", "gists_url": "https://api.github.com/users/SquareMan/gists{/gist_id}", "starred_url": "https://api.github.com/users/SquareMan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SquareMan/subscriptions", "organizations_url": "https://api.github.com/users/SquareMan/orgs", "repos_url": "https://api.github.com/users/SquareMan/repos", "events_url": "https://api.github.com/users/SquareMan/events{/privacy}", "received_events_url": "https://api.github.com/users/SquareMan/received_events", "type": "User", "site_admin": false}, "committer": {"login": "SquareMan", "id": 3579314, "node_id": "MDQ6VXNlcjM1NzkzMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3579314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SquareMan", "html_url": "https://github.com/SquareMan", "followers_url": "https://api.github.com/users/SquareMan/followers", "following_url": "https://api.github.com/users/SquareMan/following{/other_user}", "gists_url": "https://api.github.com/users/SquareMan/gists{/gist_id}", "starred_url": "https://api.github.com/users/SquareMan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SquareMan/subscriptions", "organizations_url": "https://api.github.com/users/SquareMan/orgs", "repos_url": "https://api.github.com/users/SquareMan/repos", "events_url": "https://api.github.com/users/SquareMan/events{/privacy}", "received_events_url": "https://api.github.com/users/SquareMan/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "398f9468df633d98ff626743ad339124697d5c85", "url": "https://api.github.com/repos/rust-lang/rust/commits/398f9468df633d98ff626743ad339124697d5c85", "html_url": "https://github.com/rust-lang/rust/commit/398f9468df633d98ff626743ad339124697d5c85"}], "stats": {"total": 33, "additions": 17, "deletions": 16}, "files": [{"sha": "5ab2f8a4323abafb10abb68657d9d39f1a775057", "filename": "clippy_lints/foo.txt", "status": "added", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/7c5b1887c2427cb196b7e444720482ba228a6186/clippy_lints%2Ffoo.txt", "raw_url": "https://github.com/rust-lang/rust/raw/7c5b1887c2427cb196b7e444720482ba228a6186/clippy_lints%2Ffoo.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Ffoo.txt?ref=7c5b1887c2427cb196b7e444720482ba228a6186", "patch": "@@ -0,0 +1 @@\n+Hello\n\\ No newline at end of file"}, {"sha": "f137d4112092d9fce7591817f0356958ba85f179", "filename": "tests/ui/let_underscore_lock.stderr", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/7c5b1887c2427cb196b7e444720482ba228a6186/tests%2Fui%2Flet_underscore_lock.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/7c5b1887c2427cb196b7e444720482ba228a6186/tests%2Fui%2Flet_underscore_lock.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Flet_underscore_lock.stderr?ref=7c5b1887c2427cb196b7e444720482ba228a6186", "patch": "@@ -1,4 +1,4 @@\n-error: non-binding let on a synchronization lock\n+error: non-binding `let` on a synchronization lock\n   --> $DIR/let_underscore_lock.rs:9:5\n    |\n LL |     let _ = p_m.lock();\n@@ -7,23 +7,23 @@ LL |     let _ = p_m.lock();\n    = help: consider using an underscore-prefixed named binding or dropping explicitly with `std::mem::drop`\n    = note: `-D clippy::let-underscore-lock` implied by `-D warnings`\n \n-error: non-binding let on a synchronization lock\n+error: non-binding `let` on a synchronization lock\n   --> $DIR/let_underscore_lock.rs:12:5\n    |\n LL |     let _ = p_m1.lock();\n    |     ^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: consider using an underscore-prefixed named binding or dropping explicitly with `std::mem::drop`\n \n-error: non-binding let on a synchronization lock\n+error: non-binding `let` on a synchronization lock\n   --> $DIR/let_underscore_lock.rs:15:5\n    |\n LL |     let _ = p_rw.read();\n    |     ^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: consider using an underscore-prefixed named binding or dropping explicitly with `std::mem::drop`\n \n-error: non-binding let on a synchronization lock\n+error: non-binding `let` on a synchronization lock\n   --> $DIR/let_underscore_lock.rs:16:5\n    |\n LL |     let _ = p_rw.write();"}, {"sha": "28d760eb46ecccd27d0d1ec2658d4606b566e084", "filename": "tests/ui/let_underscore_must_use.stderr", "status": "modified", "additions": 12, "deletions": 12, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/7c5b1887c2427cb196b7e444720482ba228a6186/tests%2Fui%2Flet_underscore_must_use.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/7c5b1887c2427cb196b7e444720482ba228a6186/tests%2Fui%2Flet_underscore_must_use.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Flet_underscore_must_use.stderr?ref=7c5b1887c2427cb196b7e444720482ba228a6186", "patch": "@@ -1,4 +1,4 @@\n-error: non-binding let on a result of a `#[must_use]` function\n+error: non-binding `let` on a result of a `#[must_use]` function\n   --> $DIR/let_underscore_must_use.rs:67:5\n    |\n LL |     let _ = f();\n@@ -7,87 +7,87 @@ LL |     let _ = f();\n    = help: consider explicitly using function result\n    = note: `-D clippy::let-underscore-must-use` implied by `-D warnings`\n \n-error: non-binding let on an expression with `#[must_use]` type\n+error: non-binding `let` on an expression with `#[must_use]` type\n   --> $DIR/let_underscore_must_use.rs:68:5\n    |\n LL |     let _ = g();\n    |     ^^^^^^^^^^^^\n    |\n    = help: consider explicitly using expression value\n \n-error: non-binding let on a result of a `#[must_use]` function\n+error: non-binding `let` on a result of a `#[must_use]` function\n   --> $DIR/let_underscore_must_use.rs:70:5\n    |\n LL |     let _ = l(0_u32);\n    |     ^^^^^^^^^^^^^^^^^\n    |\n    = help: consider explicitly using function result\n \n-error: non-binding let on a result of a `#[must_use]` function\n+error: non-binding `let` on a result of a `#[must_use]` function\n   --> $DIR/let_underscore_must_use.rs:74:5\n    |\n LL |     let _ = s.f();\n    |     ^^^^^^^^^^^^^^\n    |\n    = help: consider explicitly using function result\n \n-error: non-binding let on an expression with `#[must_use]` type\n+error: non-binding `let` on an expression with `#[must_use]` type\n   --> $DIR/let_underscore_must_use.rs:75:5\n    |\n LL |     let _ = s.g();\n    |     ^^^^^^^^^^^^^^\n    |\n    = help: consider explicitly using expression value\n \n-error: non-binding let on a result of a `#[must_use]` function\n+error: non-binding `let` on a result of a `#[must_use]` function\n   --> $DIR/let_underscore_must_use.rs:78:5\n    |\n LL |     let _ = S::h();\n    |     ^^^^^^^^^^^^^^^\n    |\n    = help: consider explicitly using function result\n \n-error: non-binding let on an expression with `#[must_use]` type\n+error: non-binding `let` on an expression with `#[must_use]` type\n   --> $DIR/let_underscore_must_use.rs:79:5\n    |\n LL |     let _ = S::p();\n    |     ^^^^^^^^^^^^^^^\n    |\n    = help: consider explicitly using expression value\n \n-error: non-binding let on a result of a `#[must_use]` function\n+error: non-binding `let` on a result of a `#[must_use]` function\n   --> $DIR/let_underscore_must_use.rs:81:5\n    |\n LL |     let _ = S::a();\n    |     ^^^^^^^^^^^^^^^\n    |\n    = help: consider explicitly using function result\n \n-error: non-binding let on an expression with `#[must_use]` type\n+error: non-binding `let` on an expression with `#[must_use]` type\n   --> $DIR/let_underscore_must_use.rs:83:5\n    |\n LL |     let _ = if true { Ok(()) } else { Err(()) };\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: consider explicitly using expression value\n \n-error: non-binding let on a result of a `#[must_use]` function\n+error: non-binding `let` on a result of a `#[must_use]` function\n   --> $DIR/let_underscore_must_use.rs:87:5\n    |\n LL |     let _ = a.is_ok();\n    |     ^^^^^^^^^^^^^^^^^^\n    |\n    = help: consider explicitly using function result\n \n-error: non-binding let on an expression with `#[must_use]` type\n+error: non-binding `let` on an expression with `#[must_use]` type\n   --> $DIR/let_underscore_must_use.rs:89:5\n    |\n LL |     let _ = a.map(|_| ());\n    |     ^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: consider explicitly using expression value\n \n-error: non-binding let on an expression with `#[must_use]` type\n+error: non-binding `let` on an expression with `#[must_use]` type\n   --> $DIR/let_underscore_must_use.rs:91:5\n    |\n LL |     let _ = a;"}]}