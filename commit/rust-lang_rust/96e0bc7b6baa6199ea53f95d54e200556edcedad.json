{"sha": "96e0bc7b6baa6199ea53f95d54e200556edcedad", "node_id": "MDY6Q29tbWl0NzI0NzEyOjk2ZTBiYzdiNmJhYTYxOTllYTUzZjk1ZDU0ZTIwMDU1NmVkY2VkYWQ=", "commit": {"author": {"name": "Dylan DPC", "email": "dylan.dpc@gmail.com", "date": "2020-08-29T23:43:54Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-08-29T23:43:54Z"}, "message": "Rollup merge of #75990 - rylev:arm-fastfail, r=alexcrichton\n\nAdd __fastfail for Windows on arm/aarch64\n\nFixes #73215", "tree": {"sha": "5188bf128dbba461f6ba8de637c5aca2ec470bbe", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5188bf128dbba461f6ba8de637c5aca2ec470bbe"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/96e0bc7b6baa6199ea53f95d54e200556edcedad", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJfSug6CRBK7hj4Ov3rIwAAdHIIAH+OTtTmNoE4hqCF0doL0Ok+\nFz07Ko8H/OZPlPQkO7sCqQjWQOCsAPH7DU+dETBSuIFqVtliPhTG0p3MKRe14O+R\n+2r3yx5Xfm0alWMFK5Vx6gBdUo6kLBReJDcvzZUR1TQiBCft/OfEaTQCEYlrNwAm\n7sUlG+YguOlTk72tooC2ijnHYP1MQUPal+e3BIT51+pnTVdY5ioRjD07muxHPFjy\nqSgmEnrcMbfNH+2bgV+V9T5fTBEZ5uir302/VeeGsvDrRaz56N9O6SdzD1gPYAqG\nkAdLUThNWeQ2lDJrL+immeqmBuBq02f0mbbQA7oaLnArpgw0hJlAvQe7MMJB0kQ=\n=HA3G\n-----END PGP SIGNATURE-----\n", "payload": "tree 5188bf128dbba461f6ba8de637c5aca2ec470bbe\nparent 3b9ca2cb5208526275f79e41a87f7dde22cb1a8b\nparent d931e974029a3475bd6712ca8d3bc9cb9dfe558f\nauthor Dylan DPC <dylan.dpc@gmail.com> 1598744634 +0200\ncommitter GitHub <noreply@github.com> 1598744634 +0200\n\nRollup merge of #75990 - rylev:arm-fastfail, r=alexcrichton\n\nAdd __fastfail for Windows on arm/aarch64\n\nFixes #73215\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/96e0bc7b6baa6199ea53f95d54e200556edcedad", "html_url": "https://github.com/rust-lang/rust/commit/96e0bc7b6baa6199ea53f95d54e200556edcedad", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/96e0bc7b6baa6199ea53f95d54e200556edcedad/comments", "author": {"login": "Dylan-DPC", "id": 99973273, "node_id": "U_kgDOBfV4mQ", "avatar_url": "https://avatars.githubusercontent.com/u/99973273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dylan-DPC", "html_url": "https://github.com/Dylan-DPC", "followers_url": "https://api.github.com/users/Dylan-DPC/followers", "following_url": "https://api.github.com/users/Dylan-DPC/following{/other_user}", "gists_url": "https://api.github.com/users/Dylan-DPC/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dylan-DPC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dylan-DPC/subscriptions", "organizations_url": "https://api.github.com/users/Dylan-DPC/orgs", "repos_url": "https://api.github.com/users/Dylan-DPC/repos", "events_url": "https://api.github.com/users/Dylan-DPC/events{/privacy}", "received_events_url": "https://api.github.com/users/Dylan-DPC/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3b9ca2cb5208526275f79e41a87f7dde22cb1a8b", "url": "https://api.github.com/repos/rust-lang/rust/commits/3b9ca2cb5208526275f79e41a87f7dde22cb1a8b", "html_url": "https://github.com/rust-lang/rust/commit/3b9ca2cb5208526275f79e41a87f7dde22cb1a8b"}, {"sha": "d931e974029a3475bd6712ca8d3bc9cb9dfe558f", "url": "https://api.github.com/repos/rust-lang/rust/commits/d931e974029a3475bd6712ca8d3bc9cb9dfe558f", "html_url": "https://github.com/rust-lang/rust/commit/d931e974029a3475bd6712ca8d3bc9cb9dfe558f"}], "stats": {"total": 33, "additions": 27, "deletions": 6}, "files": [{"sha": "3b08a64b22d85f89a562cd23a893a815a2019bf8", "filename": "library/panic_abort/src/lib.rs", "status": "modified", "additions": 14, "deletions": 3, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/96e0bc7b6baa6199ea53f95d54e200556edcedad/library%2Fpanic_abort%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/96e0bc7b6baa6199ea53f95d54e200556edcedad/library%2Fpanic_abort%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fpanic_abort%2Fsrc%2Flib.rs?ref=96e0bc7b6baa6199ea53f95d54e200556edcedad", "patch": "@@ -17,7 +17,7 @@\n #![feature(panic_runtime)]\n #![feature(staged_api)]\n #![feature(rustc_attrs)]\n-#![feature(llvm_asm)]\n+#![feature(asm)]\n \n use core::any::Any;\n \n@@ -47,7 +47,7 @@ pub unsafe extern \"C\" fn __rust_start_panic(_payload: usize) -> u32 {\n                 }\n                 __rust_abort();\n             }\n-        } else if #[cfg(all(windows, any(target_arch = \"x86\", target_arch = \"x86_64\")))] {\n+        } else if #[cfg(windows)] {\n             // On Windows, use the processor-specific __fastfail mechanism. In Windows 8\n             // and later, this will terminate the process immediately without running any\n             // in-process exception handlers. In earlier versions of Windows, this\n@@ -59,7 +59,18 @@ pub unsafe extern \"C\" fn __rust_start_panic(_payload: usize) -> u32 {\n             //\n             // Note: this is the same implementation as in libstd's `abort_internal`\n             unsafe fn abort() -> ! {\n-                llvm_asm!(\"int $$0x29\" :: \"{ecx}\"(7) ::: volatile); // 7 is FAST_FAIL_FATAL_APP_EXIT\n+                const FAST_FAIL_FATAL_APP_EXIT: usize = 7;\n+                cfg_if::cfg_if! {\n+                    if #[cfg(any(target_arch = \"x86\", target_arch = \"x86_64\"))] {\n+                        asm!(\"int $$0x29\", in(\"ecx\") FAST_FAIL_FATAL_APP_EXIT);\n+                    } else if #[cfg(all(target_arch = \"arm\", target_feature = \"thumb-mode\"))] {\n+                        asm!(\".inst 0xDEFB\", in(\"r0\") FAST_FAIL_FATAL_APP_EXIT);\n+                    } else if #[cfg(target_arch = \"aarch64\")] {\n+                        asm!(\"brk 0xF003\", in(\"x0\") FAST_FAIL_FATAL_APP_EXIT);\n+                    } else {\n+                        core::intrinsics::abort();\n+                    }\n+                }\n                 core::intrinsics::unreachable();\n             }\n         } else {"}, {"sha": "8178e6806b9b30ddcd3db1cdc3b07086e79bb96f", "filename": "library/std/src/sys/windows/mod.rs", "status": "modified", "additions": 13, "deletions": 3, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/96e0bc7b6baa6199ea53f95d54e200556edcedad/library%2Fstd%2Fsrc%2Fsys%2Fwindows%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/96e0bc7b6baa6199ea53f95d54e200556edcedad/library%2Fstd%2Fsrc%2Fsys%2Fwindows%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsys%2Fwindows%2Fmod.rs?ref=96e0bc7b6baa6199ea53f95d54e200556edcedad", "patch": "@@ -306,10 +306,20 @@ pub fn dur2timeout(dur: Duration) -> c::DWORD {\n /// that function for more information on `__fastfail`\n #[allow(unreachable_code)]\n pub fn abort_internal() -> ! {\n-    #[cfg(any(target_arch = \"x86\", target_arch = \"x86_64\"))]\n+    const FAST_FAIL_FATAL_APP_EXIT: usize = 7;\n     unsafe {\n-        llvm_asm!(\"int $$0x29\" :: \"{ecx}\"(7) ::: volatile); // 7 is FAST_FAIL_FATAL_APP_EXIT\n-        crate::intrinsics::unreachable();\n+        cfg_if::cfg_if! {\n+            if #[cfg(any(target_arch = \"x86\", target_arch = \"x86_64\"))] {\n+                asm!(\"int $$0x29\", in(\"ecx\") FAST_FAIL_FATAL_APP_EXIT);\n+                crate::intrinsics::unreachable();\n+            } else if #[cfg(all(target_arch = \"arm\", target_feature = \"thumb-mode\"))] {\n+                asm!(\".inst 0xDEFB\", in(\"r0\") FAST_FAIL_FATAL_APP_EXIT);\n+                crate::intrinsics::unreachable();\n+            } else if #[cfg(target_arch = \"aarch64\")] {\n+                asm!(\"brk 0xF003\", in(\"x0\") FAST_FAIL_FATAL_APP_EXIT);\n+                crate::intrinsics::unreachable();\n+            }\n+        }\n     }\n     crate::intrinsics::abort();\n }"}]}