{"sha": "c23151bdb1b242d96d545cfe4c5f3314b6ef448c", "node_id": "MDY6Q29tbWl0NzI0NzEyOmMyMzE1MWJkYjFiMjQyZDk2ZDU0NWNmZTRjNWYzMzE0YjZlZjQ0OGM=", "commit": {"author": {"name": "Tomasz Mi\u0105sko", "email": "tomasz.miasko@gmail.com", "date": "2020-09-04T00:00:00Z"}, "committer": {"name": "Tomasz Mi\u0105sko", "email": "tomasz.miasko@gmail.com", "date": "2020-09-04T00:00:00Z"}, "message": "inliner: Add mir-opt tests for codegen attributes compatibility", "tree": {"sha": "36bcb96c4a283033f44ea34f09b54c722b24c991", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/36bcb96c4a283033f44ea34f09b54c722b24c991"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c23151bdb1b242d96d545cfe4c5f3314b6ef448c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c23151bdb1b242d96d545cfe4c5f3314b6ef448c", "html_url": "https://github.com/rust-lang/rust/commit/c23151bdb1b242d96d545cfe4c5f3314b6ef448c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c23151bdb1b242d96d545cfe4c5f3314b6ef448c/comments", "author": {"login": "tmiasko", "id": 51362316, "node_id": "MDQ6VXNlcjUxMzYyMzE2", "avatar_url": "https://avatars.githubusercontent.com/u/51362316?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tmiasko", "html_url": "https://github.com/tmiasko", "followers_url": "https://api.github.com/users/tmiasko/followers", "following_url": "https://api.github.com/users/tmiasko/following{/other_user}", "gists_url": "https://api.github.com/users/tmiasko/gists{/gist_id}", "starred_url": "https://api.github.com/users/tmiasko/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tmiasko/subscriptions", "organizations_url": "https://api.github.com/users/tmiasko/orgs", "repos_url": "https://api.github.com/users/tmiasko/repos", "events_url": "https://api.github.com/users/tmiasko/events{/privacy}", "received_events_url": "https://api.github.com/users/tmiasko/received_events", "type": "User", "site_admin": false}, "committer": {"login": "tmiasko", "id": 51362316, "node_id": "MDQ6VXNlcjUxMzYyMzE2", "avatar_url": "https://avatars.githubusercontent.com/u/51362316?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tmiasko", "html_url": "https://github.com/tmiasko", "followers_url": "https://api.github.com/users/tmiasko/followers", "following_url": "https://api.github.com/users/tmiasko/following{/other_user}", "gists_url": "https://api.github.com/users/tmiasko/gists{/gist_id}", "starred_url": "https://api.github.com/users/tmiasko/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tmiasko/subscriptions", "organizations_url": "https://api.github.com/users/tmiasko/orgs", "repos_url": "https://api.github.com/users/tmiasko/repos", "events_url": "https://api.github.com/users/tmiasko/events{/privacy}", "received_events_url": "https://api.github.com/users/tmiasko/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "326b772609c4cfbd09026c534be4cbfda36fbcf4", "url": "https://api.github.com/repos/rust-lang/rust/commits/326b772609c4cfbd09026c534be4cbfda36fbcf4", "html_url": "https://github.com/rust-lang/rust/commit/326b772609c4cfbd09026c534be4cbfda36fbcf4"}], "stats": {"total": 133, "additions": 133, "deletions": 0}, "files": [{"sha": "ff9049edb4f2c53b584e5323d23e542393bdf036", "filename": "src/test/mir-opt/inline/inline-compatibility.rs", "status": "added", "additions": 39, "deletions": 0, "changes": 39, "blob_url": "https://github.com/rust-lang/rust/blob/c23151bdb1b242d96d545cfe4c5f3314b6ef448c/src%2Ftest%2Fmir-opt%2Finline%2Finline-compatibility.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c23151bdb1b242d96d545cfe4c5f3314b6ef448c/src%2Ftest%2Fmir-opt%2Finline%2Finline-compatibility.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Finline%2Finline-compatibility.rs?ref=c23151bdb1b242d96d545cfe4c5f3314b6ef448c", "patch": "@@ -0,0 +1,39 @@\n+// Checks that only functions with compatible attributes are inlined.\n+//\n+// only-x86_64\n+// needs-sanitizer-address\n+// compile-flags: -Zsanitizer=address\n+\n+#![crate_type = \"lib\"]\n+#![feature(no_sanitize)]\n+#![feature(target_feature_11)]\n+\n+// EMIT_MIR inline_compatibility.inlined_target_feature.Inline.diff\n+#[target_feature(enable = \"sse2\")]\n+pub unsafe fn inlined_target_feature() {\n+    target_feature();\n+}\n+\n+// EMIT_MIR inline_compatibility.not_inlined_target_feature.Inline.diff\n+pub unsafe fn not_inlined_target_feature() {\n+    target_feature();\n+}\n+\n+// EMIT_MIR inline_compatibility.inlined_no_sanitize.Inline.diff\n+#[no_sanitize(address)]\n+pub unsafe fn inlined_no_sanitize() {\n+    no_sanitize();\n+}\n+\n+// EMIT_MIR inline_compatibility.not_inlined_no_sanitize.Inline.diff\n+pub unsafe fn not_inlined_no_sanitize() {\n+    no_sanitize();\n+}\n+\n+#[inline]\n+#[target_feature(enable = \"sse2\")]\n+pub unsafe fn target_feature() {}\n+\n+#[inline]\n+#[no_sanitize(address, memory)]\n+pub unsafe fn no_sanitize() {}"}, {"sha": "7b0ecaffdd7cb6f18b3cf14f0a70664ada5baffa", "filename": "src/test/mir-opt/inline/inline_compatibility.inlined_no_sanitize.Inline.diff", "status": "added", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/c23151bdb1b242d96d545cfe4c5f3314b6ef448c/src%2Ftest%2Fmir-opt%2Finline%2Finline_compatibility.inlined_no_sanitize.Inline.diff", "raw_url": "https://github.com/rust-lang/rust/raw/c23151bdb1b242d96d545cfe4c5f3314b6ef448c/src%2Ftest%2Fmir-opt%2Finline%2Finline_compatibility.inlined_no_sanitize.Inline.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Finline%2Finline_compatibility.inlined_no_sanitize.Inline.diff?ref=c23151bdb1b242d96d545cfe4c5f3314b6ef448c", "patch": "@@ -0,0 +1,25 @@\n+- // MIR for `inlined_no_sanitize` before Inline\n++ // MIR for `inlined_no_sanitize` after Inline\n+  \n+  fn inlined_no_sanitize() -> () {\n+      let mut _0: ();                      // return place in scope 0 at $DIR/inline-compatibility.rs:24:37: 24:37\n+      let _1: ();                          // in scope 0 at $DIR/inline-compatibility.rs:25:5: 25:18\n++     scope 1 {\n++     }\n+  \n+      bb0: {\n+          StorageLive(_1);                 // scope 0 at $DIR/inline-compatibility.rs:25:5: 25:18\n+-         _1 = no_sanitize() -> bb1;       // scope 0 at $DIR/inline-compatibility.rs:25:5: 25:18\n+-                                          // mir::Constant\n+-                                          // + span: $DIR/inline-compatibility.rs:25:5: 25:16\n+-                                          // + literal: Const { ty: unsafe fn() {no_sanitize}, val: Value(Scalar(<ZST>)) }\n+-     }\n+- \n+-     bb1: {\n++         _1 = const ();                   // scope 1 at $DIR/inline-compatibility.rs:39:29: 39:31\n+          StorageDead(_1);                 // scope 0 at $DIR/inline-compatibility.rs:25:18: 25:19\n+          _0 = const ();                   // scope 0 at $DIR/inline-compatibility.rs:24:37: 26:2\n+          return;                          // scope 0 at $DIR/inline-compatibility.rs:26:2: 26:2\n+      }\n+  }\n+  "}, {"sha": "f55eae6c50a5f4855f99c06e7490b5d495844423", "filename": "src/test/mir-opt/inline/inline_compatibility.inlined_target_feature.Inline.diff", "status": "added", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/c23151bdb1b242d96d545cfe4c5f3314b6ef448c/src%2Ftest%2Fmir-opt%2Finline%2Finline_compatibility.inlined_target_feature.Inline.diff", "raw_url": "https://github.com/rust-lang/rust/raw/c23151bdb1b242d96d545cfe4c5f3314b6ef448c/src%2Ftest%2Fmir-opt%2Finline%2Finline_compatibility.inlined_target_feature.Inline.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Finline%2Finline_compatibility.inlined_target_feature.Inline.diff?ref=c23151bdb1b242d96d545cfe4c5f3314b6ef448c", "patch": "@@ -0,0 +1,25 @@\n+- // MIR for `inlined_target_feature` before Inline\n++ // MIR for `inlined_target_feature` after Inline\n+  \n+  fn inlined_target_feature() -> () {\n+      let mut _0: ();                      // return place in scope 0 at $DIR/inline-compatibility.rs:13:40: 13:40\n+      let _1: ();                          // in scope 0 at $DIR/inline-compatibility.rs:14:5: 14:21\n++     scope 1 {\n++     }\n+  \n+      bb0: {\n+          StorageLive(_1);                 // scope 0 at $DIR/inline-compatibility.rs:14:5: 14:21\n+-         _1 = target_feature() -> bb1;    // scope 0 at $DIR/inline-compatibility.rs:14:5: 14:21\n+-                                          // mir::Constant\n+-                                          // + span: $DIR/inline-compatibility.rs:14:5: 14:19\n+-                                          // + literal: Const { ty: unsafe fn() {target_feature}, val: Value(Scalar(<ZST>)) }\n+-     }\n+- \n+-     bb1: {\n++         _1 = const ();                   // scope 1 at $DIR/inline-compatibility.rs:35:32: 35:34\n+          StorageDead(_1);                 // scope 0 at $DIR/inline-compatibility.rs:14:21: 14:22\n+          _0 = const ();                   // scope 0 at $DIR/inline-compatibility.rs:13:40: 15:2\n+          return;                          // scope 0 at $DIR/inline-compatibility.rs:15:2: 15:2\n+      }\n+  }\n+  "}, {"sha": "651eadc1e849ca1b56613901b67a971089e86ed2", "filename": "src/test/mir-opt/inline/inline_compatibility.not_inlined_no_sanitize.Inline.diff", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/c23151bdb1b242d96d545cfe4c5f3314b6ef448c/src%2Ftest%2Fmir-opt%2Finline%2Finline_compatibility.not_inlined_no_sanitize.Inline.diff", "raw_url": "https://github.com/rust-lang/rust/raw/c23151bdb1b242d96d545cfe4c5f3314b6ef448c/src%2Ftest%2Fmir-opt%2Finline%2Finline_compatibility.not_inlined_no_sanitize.Inline.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Finline%2Finline_compatibility.not_inlined_no_sanitize.Inline.diff?ref=c23151bdb1b242d96d545cfe4c5f3314b6ef448c", "patch": "@@ -0,0 +1,22 @@\n+- // MIR for `not_inlined_no_sanitize` before Inline\n++ // MIR for `not_inlined_no_sanitize` after Inline\n+  \n+  fn not_inlined_no_sanitize() -> () {\n+      let mut _0: ();                      // return place in scope 0 at $DIR/inline-compatibility.rs:29:41: 29:41\n+      let _1: ();                          // in scope 0 at $DIR/inline-compatibility.rs:30:5: 30:18\n+  \n+      bb0: {\n+          StorageLive(_1);                 // scope 0 at $DIR/inline-compatibility.rs:30:5: 30:18\n+          _1 = no_sanitize() -> bb1;       // scope 0 at $DIR/inline-compatibility.rs:30:5: 30:18\n+                                           // mir::Constant\n+                                           // + span: $DIR/inline-compatibility.rs:30:5: 30:16\n+                                           // + literal: Const { ty: unsafe fn() {no_sanitize}, val: Value(Scalar(<ZST>)) }\n+      }\n+  \n+      bb1: {\n+          StorageDead(_1);                 // scope 0 at $DIR/inline-compatibility.rs:30:18: 30:19\n+          _0 = const ();                   // scope 0 at $DIR/inline-compatibility.rs:29:41: 31:2\n+          return;                          // scope 0 at $DIR/inline-compatibility.rs:31:2: 31:2\n+      }\n+  }\n+  "}, {"sha": "55b9edf3adc1f6b59b680173d91e69ed6c463d14", "filename": "src/test/mir-opt/inline/inline_compatibility.not_inlined_target_feature.Inline.diff", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/c23151bdb1b242d96d545cfe4c5f3314b6ef448c/src%2Ftest%2Fmir-opt%2Finline%2Finline_compatibility.not_inlined_target_feature.Inline.diff", "raw_url": "https://github.com/rust-lang/rust/raw/c23151bdb1b242d96d545cfe4c5f3314b6ef448c/src%2Ftest%2Fmir-opt%2Finline%2Finline_compatibility.not_inlined_target_feature.Inline.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Finline%2Finline_compatibility.not_inlined_target_feature.Inline.diff?ref=c23151bdb1b242d96d545cfe4c5f3314b6ef448c", "patch": "@@ -0,0 +1,22 @@\n+- // MIR for `not_inlined_target_feature` before Inline\n++ // MIR for `not_inlined_target_feature` after Inline\n+  \n+  fn not_inlined_target_feature() -> () {\n+      let mut _0: ();                      // return place in scope 0 at $DIR/inline-compatibility.rs:18:44: 18:44\n+      let _1: ();                          // in scope 0 at $DIR/inline-compatibility.rs:19:5: 19:21\n+  \n+      bb0: {\n+          StorageLive(_1);                 // scope 0 at $DIR/inline-compatibility.rs:19:5: 19:21\n+          _1 = target_feature() -> bb1;    // scope 0 at $DIR/inline-compatibility.rs:19:5: 19:21\n+                                           // mir::Constant\n+                                           // + span: $DIR/inline-compatibility.rs:19:5: 19:19\n+                                           // + literal: Const { ty: unsafe fn() {target_feature}, val: Value(Scalar(<ZST>)) }\n+      }\n+  \n+      bb1: {\n+          StorageDead(_1);                 // scope 0 at $DIR/inline-compatibility.rs:19:21: 19:22\n+          _0 = const ();                   // scope 0 at $DIR/inline-compatibility.rs:18:44: 20:2\n+          return;                          // scope 0 at $DIR/inline-compatibility.rs:20:2: 20:2\n+      }\n+  }\n+  "}]}