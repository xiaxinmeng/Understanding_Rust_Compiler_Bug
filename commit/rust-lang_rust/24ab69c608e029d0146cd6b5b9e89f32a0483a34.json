{"sha": "24ab69c608e029d0146cd6b5b9e89f32a0483a34", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI0YWI2OWM2MDhlMDI5ZDAxNDZjZDZiNWI5ZTg5ZjMyYTA0ODNhMzQ=", "commit": {"author": {"name": "Brandon", "email": "brandondong604@hotmail.com", "date": "2021-04-08T16:27:04Z"}, "committer": {"name": "Brandon", "email": "brandondong604@hotmail.com", "date": "2021-04-08T16:27:04Z"}, "message": "Add FIXME for macro case", "tree": {"sha": "03dbb8ce0ed41d6450ece457d6eee94b3674ce27", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/03dbb8ce0ed41d6450ece457d6eee94b3674ce27"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/24ab69c608e029d0146cd6b5b9e89f32a0483a34", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/24ab69c608e029d0146cd6b5b9e89f32a0483a34", "html_url": "https://github.com/rust-lang/rust/commit/24ab69c608e029d0146cd6b5b9e89f32a0483a34", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/24ab69c608e029d0146cd6b5b9e89f32a0483a34/comments", "author": {"login": "brandondong", "id": 13722457, "node_id": "MDQ6VXNlcjEzNzIyNDU3", "avatar_url": "https://avatars.githubusercontent.com/u/13722457?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brandondong", "html_url": "https://github.com/brandondong", "followers_url": "https://api.github.com/users/brandondong/followers", "following_url": "https://api.github.com/users/brandondong/following{/other_user}", "gists_url": "https://api.github.com/users/brandondong/gists{/gist_id}", "starred_url": "https://api.github.com/users/brandondong/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brandondong/subscriptions", "organizations_url": "https://api.github.com/users/brandondong/orgs", "repos_url": "https://api.github.com/users/brandondong/repos", "events_url": "https://api.github.com/users/brandondong/events{/privacy}", "received_events_url": "https://api.github.com/users/brandondong/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brandondong", "id": 13722457, "node_id": "MDQ6VXNlcjEzNzIyNDU3", "avatar_url": "https://avatars.githubusercontent.com/u/13722457?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brandondong", "html_url": "https://github.com/brandondong", "followers_url": "https://api.github.com/users/brandondong/followers", "following_url": "https://api.github.com/users/brandondong/following{/other_user}", "gists_url": "https://api.github.com/users/brandondong/gists{/gist_id}", "starred_url": "https://api.github.com/users/brandondong/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brandondong/subscriptions", "organizations_url": "https://api.github.com/users/brandondong/orgs", "repos_url": "https://api.github.com/users/brandondong/repos", "events_url": "https://api.github.com/users/brandondong/events{/privacy}", "received_events_url": "https://api.github.com/users/brandondong/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1ccfd0cedae91065d2484920484dfdaee116d590", "url": "https://api.github.com/repos/rust-lang/rust/commits/1ccfd0cedae91065d2484920484dfdaee116d590", "html_url": "https://github.com/rust-lang/rust/commit/1ccfd0cedae91065d2484920484dfdaee116d590"}], "stats": {"total": 13, "additions": 13, "deletions": 0}, "files": [{"sha": "8e295098f9860e9515cf6a4ac6e0e80c90fd3291", "filename": "crates/ide_assists/src/handlers/extract_function.rs", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/24ab69c608e029d0146cd6b5b9e89f32a0483a34/crates%2Fide_assists%2Fsrc%2Fhandlers%2Fextract_function.rs", "raw_url": "https://github.com/rust-lang/rust/raw/24ab69c608e029d0146cd6b5b9e89f32a0483a34/crates%2Fide_assists%2Fsrc%2Fhandlers%2Fextract_function.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_assists%2Fsrc%2Fhandlers%2Fextract_function.rs?ref=24ab69c608e029d0146cd6b5b9e89f32a0483a34", "patch": "@@ -729,6 +729,14 @@ fn reference_is_exclusive(\n \n /// checks if this expr requires `&mut` access, recurses on field access\n fn expr_require_exclusive_access(ctx: &AssistContext, expr: &ast::Expr) -> Option<bool> {\n+    match expr {\n+        ast::Expr::MacroCall(_) => {\n+            // FIXME: expand macro and check output for mutable usages of the variable?\n+            return None;\n+        }\n+        _ => (),\n+    }\n+\n     let parent = expr.syntax().parent()?;\n \n     if let Some(bin_expr) = ast::BinExpr::cast(parent.clone()) {\n@@ -804,6 +812,11 @@ fn path_element_of_reference(\n         stdx::never!(false, \"cannot find path parent of variable usage: {:?}\", token);\n         None\n     })?;\n+    stdx::always!(\n+        matches!(path, ast::Expr::PathExpr(_) | ast::Expr::MacroCall(_)),\n+        \"unexpected expression type for variable usage: {:?}\",\n+        path\n+    );\n     Some(path)\n }\n "}]}