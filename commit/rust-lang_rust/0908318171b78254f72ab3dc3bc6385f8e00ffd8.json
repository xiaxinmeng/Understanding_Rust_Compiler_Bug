{"sha": "0908318171b78254f72ab3dc3bc6385f8e00ffd8", "node_id": "MDY6Q29tbWl0NzI0NzEyOjA5MDgzMTgxNzFiNzgyNTRmNzJhYjNkYzNiYzYzODVmOGUwMGZmZDg=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-07-15T14:05:45Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-07-15T14:06:04Z"}, "message": "Show fewer syntax errors", "tree": {"sha": "92d0b80f026338080e9e2d1068d7c1dfdc3872bd", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/92d0b80f026338080e9e2d1068d7c1dfdc3872bd"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0908318171b78254f72ab3dc3bc6385f8e00ffd8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0908318171b78254f72ab3dc3bc6385f8e00ffd8", "html_url": "https://github.com/rust-lang/rust/commit/0908318171b78254f72ab3dc3bc6385f8e00ffd8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0908318171b78254f72ab3dc3bc6385f8e00ffd8/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4c08fc9be3f7b79e3040a154aa97c29c97ee5a49", "url": "https://api.github.com/repos/rust-lang/rust/commits/4c08fc9be3f7b79e3040a154aa97c29c97ee5a49", "html_url": "https://github.com/rust-lang/rust/commit/4c08fc9be3f7b79e3040a154aa97c29c97ee5a49"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "fe75f4b2c4de3e2d615d0c3333b67f28aa4135f3", "filename": "crates/ra_ide/src/diagnostics.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/0908318171b78254f72ab3dc3bc6385f8e00ffd8/crates%2Fra_ide%2Fsrc%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0908318171b78254f72ab3dc3bc6385f8e00ffd8/crates%2Fra_ide%2Fsrc%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fdiagnostics.rs?ref=0908318171b78254f72ab3dc3bc6385f8e00ffd8", "patch": "@@ -35,8 +35,8 @@ pub(crate) fn diagnostics(db: &RootDatabase, file_id: FileId) -> Vec<Diagnostic>\n     let parse = db.parse(file_id);\n     let mut res = Vec::new();\n \n-    // [#34344] Only take first 500 errors to prevent slowing down editor/ide, the number 500 is chosen arbitrarily.\n-    res.extend(parse.errors().iter().take(500).map(|err| Diagnostic {\n+    // [#34344] Only take first 128 errors to prevent slowing down editor/ide, the number 128 is chosen arbitrarily.\n+    res.extend(parse.errors().iter().take(128).map(|err| Diagnostic {\n         range: err.range(),\n         message: format!(\"Syntax Error: {}\", err),\n         severity: Severity::Error,"}]}