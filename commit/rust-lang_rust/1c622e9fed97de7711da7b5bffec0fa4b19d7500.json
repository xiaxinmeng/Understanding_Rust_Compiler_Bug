{"sha": "1c622e9fed97de7711da7b5bffec0fa4b19d7500", "node_id": "MDY6Q29tbWl0NzI0NzEyOjFjNjIyZTlmZWQ5N2RlNzcxMWRhN2I1YmZmZWMwZmE0YjE5ZDc1MDA=", "commit": {"author": {"name": "Florian Diebold", "email": "flodiebold@gmail.com", "date": "2019-11-30T11:48:51Z"}, "committer": {"name": "Florian Diebold", "email": "flodiebold@gmail.com", "date": "2019-11-30T11:57:32Z"}, "message": "Add cycle recovery for type aliases", "tree": {"sha": "0471718f620bfdcb207387f6ae58bdfa5ca47e4e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0471718f620bfdcb207387f6ae58bdfa5ca47e4e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1c622e9fed97de7711da7b5bffec0fa4b19d7500", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1c622e9fed97de7711da7b5bffec0fa4b19d7500", "html_url": "https://github.com/rust-lang/rust/commit/1c622e9fed97de7711da7b5bffec0fa4b19d7500", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1c622e9fed97de7711da7b5bffec0fa4b19d7500/comments", "author": {"login": "flodiebold", "id": 906069, "node_id": "MDQ6VXNlcjkwNjA2OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/906069?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flodiebold", "html_url": "https://github.com/flodiebold", "followers_url": "https://api.github.com/users/flodiebold/followers", "following_url": "https://api.github.com/users/flodiebold/following{/other_user}", "gists_url": "https://api.github.com/users/flodiebold/gists{/gist_id}", "starred_url": "https://api.github.com/users/flodiebold/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flodiebold/subscriptions", "organizations_url": "https://api.github.com/users/flodiebold/orgs", "repos_url": "https://api.github.com/users/flodiebold/repos", "events_url": "https://api.github.com/users/flodiebold/events{/privacy}", "received_events_url": "https://api.github.com/users/flodiebold/received_events", "type": "User", "site_admin": false}, "committer": {"login": "flodiebold", "id": 906069, "node_id": "MDQ6VXNlcjkwNjA2OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/906069?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flodiebold", "html_url": "https://github.com/flodiebold", "followers_url": "https://api.github.com/users/flodiebold/followers", "following_url": "https://api.github.com/users/flodiebold/following{/other_user}", "gists_url": "https://api.github.com/users/flodiebold/gists{/gist_id}", "starred_url": "https://api.github.com/users/flodiebold/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flodiebold/subscriptions", "organizations_url": "https://api.github.com/users/flodiebold/orgs", "repos_url": "https://api.github.com/users/flodiebold/repos", "events_url": "https://api.github.com/users/flodiebold/events{/privacy}", "received_events_url": "https://api.github.com/users/flodiebold/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3ca40f7c08718a44c6d08d2cbe060244340e7157", "url": "https://api.github.com/repos/rust-lang/rust/commits/3ca40f7c08718a44c6d08d2cbe060244340e7157", "html_url": "https://github.com/rust-lang/rust/commit/3ca40f7c08718a44c6d08d2cbe060244340e7157"}], "stats": {"total": 12, "additions": 10, "deletions": 2}, "files": [{"sha": "222a36a9f89d9afa51d42fcfb6cfe3f88e5c2c43", "filename": "crates/ra_hir_ty/src/db.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/1c622e9fed97de7711da7b5bffec0fa4b19d7500/crates%2Fra_hir_ty%2Fsrc%2Fdb.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1c622e9fed97de7711da7b5bffec0fa4b19d7500/crates%2Fra_hir_ty%2Fsrc%2Fdb.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_ty%2Fsrc%2Fdb.rs?ref=1c622e9fed97de7711da7b5bffec0fa4b19d7500", "patch": "@@ -22,6 +22,7 @@ pub trait HirDatabase: DefDatabase {\n     fn infer(&self, def: DefWithBodyId) -> Arc<InferenceResult>;\n \n     #[salsa::invoke(crate::lower::ty_query)]\n+    #[salsa::cycle(crate::lower::ty_recover)]\n     fn ty(&self, def: TyDefId) -> Ty;\n \n     #[salsa::invoke(crate::lower::value_ty_query)]"}, {"sha": "32569ac66f6c5416ef0a6b51b9cdb3b118dcb67d", "filename": "crates/ra_hir_ty/src/lower.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/1c622e9fed97de7711da7b5bffec0fa4b19d7500/crates%2Fra_hir_ty%2Fsrc%2Flower.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1c622e9fed97de7711da7b5bffec0fa4b19d7500/crates%2Fra_hir_ty%2Fsrc%2Flower.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_ty%2Fsrc%2Flower.rs?ref=1c622e9fed97de7711da7b5bffec0fa4b19d7500", "patch": "@@ -742,6 +742,11 @@ pub(crate) fn ty_query(db: &impl HirDatabase, def: TyDefId) -> Ty {\n         TyDefId::TypeAliasId(it) => type_for_type_alias(db, it),\n     }\n }\n+\n+pub(crate) fn ty_recover(_db: &impl HirDatabase, _cycle: &[String], _def: &TyDefId) -> Ty {\n+    Ty::Unknown\n+}\n+\n pub(crate) fn value_ty_query(db: &impl HirDatabase, def: ValueTyDefId) -> Ty {\n     match def {\n         ValueTyDefId::FunctionId(it) => type_for_fn(db, it),"}, {"sha": "c856d6afdbe58d77e43b1b5a597046a00bebad78", "filename": "crates/ra_hir_ty/src/tests.rs", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/1c622e9fed97de7711da7b5bffec0fa4b19d7500/crates%2Fra_hir_ty%2Fsrc%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1c622e9fed97de7711da7b5bffec0fa4b19d7500/crates%2Fra_hir_ty%2Fsrc%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_ty%2Fsrc%2Ftests.rs?ref=1c622e9fed97de7711da7b5bffec0fa4b19d7500", "patch": "@@ -2154,7 +2154,6 @@ fn test(x: Foo, y: Bar<&str>, z: Baz<i8, u8>) {\n }\n \n #[test]\n-#[should_panic] // we currently can't handle this\n fn recursive_type_alias() {\n     assert_snapshot!(\n         infer(r#\"\n@@ -2163,7 +2162,10 @@ type Foo = Foo;\n type Bar = A<Bar>;\n fn test(x: Foo) {}\n \"#),\n-        @\"\"\n+        @r###\"\n+    [59; 60) 'x': {unknown}\n+    [67; 69) '{}': ()\n+    \"###\n     )\n }\n "}]}