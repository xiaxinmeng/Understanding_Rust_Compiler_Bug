{"sha": "1d286f7918307f1b2bfa9a157070cc99c0465f30", "node_id": "MDY6Q29tbWl0NzI0NzEyOjFkMjg2Zjc5MTgzMDdmMWIyYmZhOWExNTcwNzBjYzk5YzA0NjVmMzA=", "commit": {"author": {"name": "kennytm", "email": "kennytm@gmail.com", "date": "2019-03-24T07:32:49Z"}, "committer": {"name": "kennytm", "email": "kennytm@gmail.com", "date": "2019-03-24T11:00:04Z"}, "message": "Rollup merge of #59296 - petrochenkov:stdup, r=estebank\n\nDo not encode gensymed imports in metadata\n\n(Unless they are underscore `_` imports which are re-gensymed on crate loading, see https://github.com/rust-lang/rust/pull/56392.)\n\nWe cannot encode gensymed imports properly in metadata and if we encode them improperly, we can get erroneous name conflicts downstream.\nGensymed imports are produced by the compiler, so we control their set, and can be sure that none of them needs being encoded for use from other crates.\n\nA workaround that fixes https://github.com/rust-lang/rust/issues/59243.", "tree": {"sha": "ff1b09ca82c6e52a7e749cce99b669233b2e0309", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ff1b09ca82c6e52a7e749cce99b669233b2e0309"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1d286f7918307f1b2bfa9a157070cc99c0465f30", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEZ1R8CLMp8f2GxWoQ/vbIBR0OATwFAlyXYzQACgkQ/vbIBR0O\nATy8pA/6Axkgv6Oq3UQ2LqLdm7Yshz2oxHlVjO8lfE3rCZOSrcDGlWA490Sz5wCJ\nyEVzpeqyOQegTsmttwcyZQyFynEfaCggPcL7eCoIyGmRdftlfAAexQiGxBdLqwza\nmySjIij7ahG8PrR90gJgp7OzZ+amcIDz3u2Rzth/WKWetHy/i+YQiEf3plebb+A0\n5eEbRGbJIQDajx5fGlYyXu53CecEjNj/q59ehcJxzax/HnKXpnMscBa4eOnWqU9Y\n3wR2XQB9/vENYEh4AqCDfR9nsa145CGZb3tAgARHt4PGJkQU9xSCBz76rWXJloRZ\n8MRnHlNu1GjUFu/RX9WDh/xkok3VribF5zbrK28D8WqRfW6VZZcS9RmxFLPXU3X1\nBTmqnKllojgFK3rvv/KsMQEtNu45ZqOFazqhp9C5WBTQ9uR+woTLdCR48zFytLFi\nt4mY8YA/dMudPT4YWP9c3+uQcix13yjojkFFFiiPbGJ+gBKJ2cndZWvIIrZBxbCB\nXPIuQ2nG5W1wm4l/bao4kZ3zUPHZTkyr/ykljd5CyotIOZHW8W5eGIOGyorG1rWH\nzXWld2W8hJuA7C8ZyW/iDX4pvGBkFKzSr5x6u6SaLAbvRb08DUGuGND+0qrzFXXF\ndetl7SnbEUjLH77mNKxRdo2eia9qTXuKHaRoKGETdOsVBacMyz4=\n=leXM\n-----END PGP SIGNATURE-----", "payload": "tree ff1b09ca82c6e52a7e749cce99b669233b2e0309\nparent 42b7d2c170bfe1623e63ff913bf2d2ac4d059bc1\nparent 30d5dc9a0ac48b7fae1e5ca79987fa004b00eec1\nauthor kennytm <kennytm@gmail.com> 1553412769 +0800\ncommitter kennytm <kennytm@gmail.com> 1553425204 +0800\n\nRollup merge of #59296 - petrochenkov:stdup, r=estebank\n\nDo not encode gensymed imports in metadata\n\n(Unless they are underscore `_` imports which are re-gensymed on crate loading, see https://github.com/rust-lang/rust/pull/56392.)\n\nWe cannot encode gensymed imports properly in metadata and if we encode them improperly, we can get erroneous name conflicts downstream.\nGensymed imports are produced by the compiler, so we control their set, and can be sure that none of them needs being encoded for use from other crates.\n\nA workaround that fixes https://github.com/rust-lang/rust/issues/59243.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1d286f7918307f1b2bfa9a157070cc99c0465f30", "html_url": "https://github.com/rust-lang/rust/commit/1d286f7918307f1b2bfa9a157070cc99c0465f30", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1d286f7918307f1b2bfa9a157070cc99c0465f30/comments", "author": {"login": "kennytm", "id": 103023, "node_id": "MDQ6VXNlcjEwMzAyMw==", "avatar_url": "https://avatars.githubusercontent.com/u/103023?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kennytm", "html_url": "https://github.com/kennytm", "followers_url": "https://api.github.com/users/kennytm/followers", "following_url": "https://api.github.com/users/kennytm/following{/other_user}", "gists_url": "https://api.github.com/users/kennytm/gists{/gist_id}", "starred_url": "https://api.github.com/users/kennytm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kennytm/subscriptions", "organizations_url": "https://api.github.com/users/kennytm/orgs", "repos_url": "https://api.github.com/users/kennytm/repos", "events_url": "https://api.github.com/users/kennytm/events{/privacy}", "received_events_url": "https://api.github.com/users/kennytm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "kennytm", "id": 103023, "node_id": "MDQ6VXNlcjEwMzAyMw==", "avatar_url": "https://avatars.githubusercontent.com/u/103023?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kennytm", "html_url": "https://github.com/kennytm", "followers_url": "https://api.github.com/users/kennytm/followers", "following_url": "https://api.github.com/users/kennytm/following{/other_user}", "gists_url": "https://api.github.com/users/kennytm/gists{/gist_id}", "starred_url": "https://api.github.com/users/kennytm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kennytm/subscriptions", "organizations_url": "https://api.github.com/users/kennytm/orgs", "repos_url": "https://api.github.com/users/kennytm/repos", "events_url": "https://api.github.com/users/kennytm/events{/privacy}", "received_events_url": "https://api.github.com/users/kennytm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "42b7d2c170bfe1623e63ff913bf2d2ac4d059bc1", "url": "https://api.github.com/repos/rust-lang/rust/commits/42b7d2c170bfe1623e63ff913bf2d2ac4d059bc1", "html_url": "https://github.com/rust-lang/rust/commit/42b7d2c170bfe1623e63ff913bf2d2ac4d059bc1"}, {"sha": "30d5dc9a0ac48b7fae1e5ca79987fa004b00eec1", "url": "https://api.github.com/repos/rust-lang/rust/commits/30d5dc9a0ac48b7fae1e5ca79987fa004b00eec1", "html_url": "https://github.com/rust-lang/rust/commit/30d5dc9a0ac48b7fae1e5ca79987fa004b00eec1"}], "stats": {"total": 24, "additions": 20, "deletions": 4}, "files": [{"sha": "f312ef216822d1c74af14aa51f6fb34c7887af7d", "filename": "src/librustc_resolve/build_reduced_graph.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/1d286f7918307f1b2bfa9a157070cc99c0465f30/src%2Flibrustc_resolve%2Fbuild_reduced_graph.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1d286f7918307f1b2bfa9a157070cc99c0465f30/src%2Flibrustc_resolve%2Fbuild_reduced_graph.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2Fbuild_reduced_graph.rs?ref=1d286f7918307f1b2bfa9a157070cc99c0465f30", "patch": "@@ -303,7 +303,7 @@ impl<'a> Resolver<'a> {\n                 }\n \n                 // Empty groups `a::b::{}` are turned into synthetic `self` imports\n-                // `a::b::c::{self as _}`, so that their prefixes are correctly\n+                // `a::b::c::{self as __dummy}`, so that their prefixes are correctly\n                 // resolved and checked for privacy/stability/etc.\n                 if items.is_empty() && !empty_for_self(&prefix) {\n                     let new_span = prefix[prefix.len() - 1].ident.span;\n@@ -312,7 +312,7 @@ impl<'a> Resolver<'a> {\n                             Ident::new(keywords::SelfLower.name(), new_span)\n                         ),\n                         kind: ast::UseTreeKind::Simple(\n-                            Some(Ident::new(keywords::Underscore.name().gensymed(), new_span)),\n+                            Some(Ident::new(Name::gensym(\"__dummy\"), new_span)),\n                             ast::DUMMY_NODE_ID,\n                             ast::DUMMY_NODE_ID,\n                         ),"}, {"sha": "bda59c6c46c8bd2a83ac2093b53cbaf152941960", "filename": "src/librustc_resolve/resolve_imports.rs", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/1d286f7918307f1b2bfa9a157070cc99c0465f30/src%2Flibrustc_resolve%2Fresolve_imports.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1d286f7918307f1b2bfa9a157070cc99c0465f30/src%2Flibrustc_resolve%2Fresolve_imports.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2Fresolve_imports.rs?ref=1d286f7918307f1b2bfa9a157070cc99c0465f30", "patch": "@@ -1295,9 +1295,11 @@ impl<'a, 'b:'a> ImportResolver<'a, 'b> {\n                 None => continue,\n             };\n \n-            // Filter away \"empty import canaries\" and ambiguous imports.\n+            // Filter away ambiguous and gensymed imports. Gensymed imports\n+            // (e.g. implicitly injected `std`) cannot be properly encoded in metadata,\n+            // so they can cause name conflict errors downstream.\n             let is_good_import = binding.is_import() && !binding.is_ambiguity() &&\n-                                 binding.vis != ty::Visibility::Invisible;\n+                                 !(ident.name.is_gensymed() && ident.name != \"_\");\n             if is_good_import || binding.is_macro_def() {\n                 let def = binding.def();\n                 if def != Def::Err {"}, {"sha": "f61aa4284d29b65030568fd0c0c8e241b78484b4", "filename": "src/libsyntax_pos/symbol.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/1d286f7918307f1b2bfa9a157070cc99c0465f30/src%2Flibsyntax_pos%2Fsymbol.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1d286f7918307f1b2bfa9a157070cc99c0465f30/src%2Flibsyntax_pos%2Fsymbol.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax_pos%2Fsymbol.rs?ref=1d286f7918307f1b2bfa9a157070cc99c0465f30", "patch": "@@ -179,6 +179,10 @@ impl Symbol {\n         with_interner(|interner| interner.gensymed(self))\n     }\n \n+    pub fn is_gensymed(self) -> bool {\n+        with_interner(|interner| interner.is_gensymed(self))\n+    }\n+\n     pub fn as_str(self) -> LocalInternedString {\n         with_interner(|interner| unsafe {\n             LocalInternedString {"}, {"sha": "bbb19f5ec65199e60ca8d273f8c180a30a47eaf2", "filename": "src/test/ui/imports/auxiliary/gensymed.rs", "status": "added", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/1d286f7918307f1b2bfa9a157070cc99c0465f30/src%2Ftest%2Fui%2Fimports%2Fauxiliary%2Fgensymed.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1d286f7918307f1b2bfa9a157070cc99c0465f30/src%2Ftest%2Fui%2Fimports%2Fauxiliary%2Fgensymed.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fimports%2Fauxiliary%2Fgensymed.rs?ref=1d286f7918307f1b2bfa9a157070cc99c0465f30", "patch": "@@ -0,0 +1,3 @@\n+// edition:2018\n+\n+mod std {}"}, {"sha": "317441079ff87c71953eaa45dec3eefb24e28f0e", "filename": "src/test/ui/imports/gensymed.rs", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/1d286f7918307f1b2bfa9a157070cc99c0465f30/src%2Ftest%2Fui%2Fimports%2Fgensymed.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1d286f7918307f1b2bfa9a157070cc99c0465f30/src%2Ftest%2Fui%2Fimports%2Fgensymed.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fimports%2Fgensymed.rs?ref=1d286f7918307f1b2bfa9a157070cc99c0465f30", "patch": "@@ -0,0 +1,7 @@\n+// compile-pass\n+// edition:2018\n+// aux-build:gensymed.rs\n+\n+extern crate gensymed;\n+\n+fn main() {}"}]}