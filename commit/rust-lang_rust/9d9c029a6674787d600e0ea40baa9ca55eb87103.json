{"sha": "9d9c029a6674787d600e0ea40baa9ca55eb87103", "node_id": "MDY6Q29tbWl0NzI0NzEyOjlkOWMwMjlhNjY3NDc4N2Q2MDBlMGVhNDBiYWE5Y2E1NWViODcxMDM=", "commit": {"author": {"name": "Cobrand", "email": "cobrandw@gmail.com", "date": "2016-09-03T10:41:02Z"}, "committer": {"name": "Cobrand", "email": "cobrandw@gmail.com", "date": "2016-09-03T10:51:16Z"}, "message": "doc: Contributing.md: mention of `make tidy`", "tree": {"sha": "e65b8bec4dc742f75b7f7c99325bda0ed8e1c57a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e65b8bec4dc742f75b7f7c99325bda0ed8e1c57a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9d9c029a6674787d600e0ea40baa9ca55eb87103", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9d9c029a6674787d600e0ea40baa9ca55eb87103", "html_url": "https://github.com/rust-lang/rust/commit/9d9c029a6674787d600e0ea40baa9ca55eb87103", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9d9c029a6674787d600e0ea40baa9ca55eb87103/comments", "author": {"login": "Cobrand", "id": 8882127, "node_id": "MDQ6VXNlcjg4ODIxMjc=", "avatar_url": "https://avatars.githubusercontent.com/u/8882127?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Cobrand", "html_url": "https://github.com/Cobrand", "followers_url": "https://api.github.com/users/Cobrand/followers", "following_url": "https://api.github.com/users/Cobrand/following{/other_user}", "gists_url": "https://api.github.com/users/Cobrand/gists{/gist_id}", "starred_url": "https://api.github.com/users/Cobrand/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Cobrand/subscriptions", "organizations_url": "https://api.github.com/users/Cobrand/orgs", "repos_url": "https://api.github.com/users/Cobrand/repos", "events_url": "https://api.github.com/users/Cobrand/events{/privacy}", "received_events_url": "https://api.github.com/users/Cobrand/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Cobrand", "id": 8882127, "node_id": "MDQ6VXNlcjg4ODIxMjc=", "avatar_url": "https://avatars.githubusercontent.com/u/8882127?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Cobrand", "html_url": "https://github.com/Cobrand", "followers_url": "https://api.github.com/users/Cobrand/followers", "following_url": "https://api.github.com/users/Cobrand/following{/other_user}", "gists_url": "https://api.github.com/users/Cobrand/gists{/gist_id}", "starred_url": "https://api.github.com/users/Cobrand/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Cobrand/subscriptions", "organizations_url": "https://api.github.com/users/Cobrand/orgs", "repos_url": "https://api.github.com/users/Cobrand/repos", "events_url": "https://api.github.com/users/Cobrand/events{/privacy}", "received_events_url": "https://api.github.com/users/Cobrand/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a029ea343fe5c9b7cf550902b5a507cd8c22a833", "url": "https://api.github.com/repos/rust-lang/rust/commits/a029ea343fe5c9b7cf550902b5a507cd8c22a833", "html_url": "https://github.com/rust-lang/rust/commit/a029ea343fe5c9b7cf550902b5a507cd8c22a833"}], "stats": {"total": 13, "additions": 13, "deletions": 0}, "files": [{"sha": "4c0f93c3703a59259014e294ee1acaa9faa4b1d6", "filename": "CONTRIBUTING.md", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/9d9c029a6674787d600e0ea40baa9ca55eb87103/CONTRIBUTING.md", "raw_url": "https://github.com/rust-lang/rust/raw/9d9c029a6674787d600e0ea40baa9ca55eb87103/CONTRIBUTING.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/CONTRIBUTING.md?ref=9d9c029a6674787d600e0ea40baa9ca55eb87103", "patch": "@@ -151,6 +151,10 @@ Some common make targets are:\n   command above as we only build the stage1 compiler, not the entire thing).\n   You can also leave off the `-rpass` to run all stage1 test types.\n - `make check-stage1-coretest` - Run stage1 tests in `libcore`.\n+- `make tidy` - Check that the source code is in compliance with Rust's style\n+  guidelines. There is no official document describing Rust's full guidelines \n+  as of yet, but basic rules like 4 spaces for indentation and no more than 99\n+  characters in a single line should be kept in mind when writing code.\n \n ## Pull Requests\n \n@@ -177,6 +181,15 @@ you\u2019re adding something to the standard library, try\n \n This will not rebuild the compiler, but will run the tests.\n \n+Please make sure your pull request is in compliance with Rust's style\n+guidelines by running\n+\n+    $ make tidy\n+\n+Make this check before every pull request (and every new commit in a pull\n+request) ; you can add [git hooks](https://git-scm.com/book/en/v2/Customizing-Git-Git-Hooks)\n+before every push to make sure you never forget to make this check.\n+\n All pull requests are reviewed by another person. We have a bot,\n @rust-highfive, that will automatically assign a random person to review your\n request."}]}