{"sha": "91384386209b0b122f88f675a4b095a8ae46a238", "node_id": "MDY6Q29tbWl0NzI0NzEyOjkxMzg0Mzg2MjA5YjBiMTIyZjg4ZjY3NWE0YjA5NWE4YWU0NmEyMzg=", "commit": {"author": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2010-07-01T22:59:29Z"}, "committer": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2010-07-01T22:59:29Z"}, "message": "Convey auto-deref judgments made in typechecker to trans layer; control the decision in one place.", "tree": {"sha": "bad6d2dc6b783476b760ad99b28d9dbe5cf4fb19", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bad6d2dc6b783476b760ad99b28d9dbe5cf4fb19"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/91384386209b0b122f88f675a4b095a8ae46a238", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/91384386209b0b122f88f675a4b095a8ae46a238", "html_url": "https://github.com/rust-lang/rust/commit/91384386209b0b122f88f675a4b095a8ae46a238", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/91384386209b0b122f88f675a4b095a8ae46a238/comments", "author": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "committer": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "90b36dcd264b065f5b5963eda928c02f39cb2987", "url": "https://api.github.com/repos/rust-lang/rust/commits/90b36dcd264b065f5b5963eda928c02f39cb2987", "html_url": "https://github.com/rust-lang/rust/commit/90b36dcd264b065f5b5963eda928c02f39cb2987"}], "stats": {"total": 38, "additions": 35, "deletions": 3}, "files": [{"sha": "a2a132b2fdddd8a6523f1e9f3d195f578b5d2f40", "filename": "src/boot/me/semant.ml", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/91384386209b0b122f88f675a4b095a8ae46a238/src%2Fboot%2Fme%2Fsemant.ml", "raw_url": "https://github.com/rust-lang/rust/raw/91384386209b0b122f88f675a4b095a8ae46a238/src%2Fboot%2Fme%2Fsemant.ml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fboot%2Fme%2Fsemant.ml?ref=91384386209b0b122f88f675a4b095a8ae46a238", "patch": "@@ -91,6 +91,7 @@ type ctxt =\n       ctxt_slot_is_arg: (node_id,unit) Hashtbl.t;\n       ctxt_slot_keys: (node_id,Ast.slot_key) Hashtbl.t;\n       ctxt_node_referenced: (node_id, unit) Hashtbl.t;\n+      ctxt_auto_deref_lval: (node_id, bool) Hashtbl.t;\n       ctxt_all_item_names: (node_id,Ast.name) Hashtbl.t;\n       ctxt_all_item_types: (node_id,Ast.ty) Hashtbl.t;\n       ctxt_all_lval_types: (node_id,Ast.ty) Hashtbl.t;\n@@ -181,6 +182,7 @@ let new_ctxt sess abi crate =\n     ctxt_slot_is_arg = Hashtbl.create 0;\n     ctxt_slot_keys = Hashtbl.create 0;\n     ctxt_node_referenced = Hashtbl.create 0;\n+    ctxt_auto_deref_lval = Hashtbl.create 0;\n     ctxt_all_item_names = Hashtbl.create 0;\n     ctxt_all_item_types = Hashtbl.create 0;\n     ctxt_all_lval_types = Hashtbl.create 0;"}, {"sha": "fd651003351543ef9a86ac377189af6cd4f1a197", "filename": "src/boot/me/trans.ml", "status": "modified", "additions": 14, "deletions": 3, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/91384386209b0b122f88f675a4b095a8ae46a238/src%2Fboot%2Fme%2Ftrans.ml", "raw_url": "https://github.com/rust-lang/rust/raw/91384386209b0b122f88f675a4b095a8ae46a238/src%2Fboot%2Fme%2Ftrans.ml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fboot%2Fme%2Ftrans.ml?ref=91384386209b0b122f88f675a4b095a8ae46a238", "patch": "@@ -956,7 +956,6 @@ let trans_visitor\n         based elt_reg\n \n   and trans_lval_full\n-      (dctrl:deref_ctrl)\n       (initializing:bool)\n       (lv:Ast.lval)\n       : (Il.cell * Ast.ty) =\n@@ -970,11 +969,23 @@ let trans_visitor\n               in\n                 trans_slot_lval_ext initializing base_ty base_cell comp\n \n-          | Ast.LVAL_base _ ->\n+          | Ast.LVAL_base nbi ->\n               let sloti = lval_base_to_slot cx lv in\n               let cell = cell_of_block_slot sloti.id in\n               let ty = slot_ty sloti.node in\n               let cell = deref_slot initializing cell sloti.node in\n+              let dctrl =\n+                (* If this fails, type didn't visit the lval, and we\n+                 * don't know whether to auto-deref its base. Crashing\n+                 * here is best. Compiler bug.\n+                 *)\n+                match htab_search cx.ctxt_auto_deref_lval nbi.id with\n+                    None ->\n+                      bugi cx nbi.id\n+                        \"Lval without auto-deref info; bad typecheck?\"\n+                  | Some true -> DEREF_all_boxes\n+                  | Some false -> DEREF_none\n+              in\n                 deref_ty dctrl initializing cell ty\n       in\n         iflog\n@@ -1004,7 +1015,7 @@ let trans_visitor\n       (initializing:bool)\n       (lv:Ast.lval)\n       : (Il.cell * Ast.ty) =\n-    trans_lval_full DEREF_none initializing lv\n+    trans_lval_full initializing lv\n \n   and trans_lval_init (lv:Ast.lval) : (Il.cell * Ast.ty) =\n     trans_lval_maybe_init true lv"}, {"sha": "c0b16e702399aa31eec20d41b1aa3db2071946b3", "filename": "src/boot/me/type.ml", "status": "modified", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/91384386209b0b122f88f675a4b095a8ae46a238/src%2Fboot%2Fme%2Ftype.ml", "raw_url": "https://github.com/rust-lang/rust/raw/91384386209b0b122f88f675a4b095a8ae46a238/src%2Fboot%2Fme%2Ftype.ml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fboot%2Fme%2Ftype.ml?ref=91384386209b0b122f88f675a4b095a8ae46a238", "patch": "@@ -1065,6 +1065,20 @@ let process_crate (cx:ctxt) (crate:Ast.crate) : unit =\n                                 log cx \"lval-base slot tyspec for %a = %s\"\n                                   Ast.sprintf_lval lval (tyspec_to_str (!tv));\n                           end;\n+                        begin\n+                          match htab_search\n+                            cx.ctxt_auto_deref_lval nbi.id\n+                          with\n+                              None ->\n+                                htab_put cx.ctxt_auto_deref_lval\n+                                  nbi.id ucx.box_ok\n+                            | Some b ->\n+                                (* A given source-occurrence of a name-base\n+                                 * should never change its auto-deref\n+                                 * nature.\n+                                 *)\n+                                assert (b = ucx.box_ok);\n+                        end;\n                         unify_slot ucx slot (Some referent) tv\n \n                     | _ ->\n@@ -1210,6 +1224,10 @@ let process_crate (cx:ctxt) (crate:Ast.crate) : unit =\n             let tv = any() in\n               unify_expr rval_ctx\n                 (Ast.EXPR_binary (binop, Ast.ATOM_lval dst, at)) tv;\n+              (* Force-override the 'auto-deref' judgment that was cached \n+               * in cx.ctxt_auto_deref_lval by preceding unify_expr call.\n+               *)\n+              Hashtbl.replace cx.ctxt_auto_deref_lval (lval_base_id dst) false;\n               unify_lval lval_ctx dst tv;\n \n         | Ast.STMT_call (out, callee, args) ->\n@@ -1315,6 +1333,7 @@ let process_crate (cx:ctxt) (crate:Ast.crate) : unit =\n         Hashtbl.iter\n           (fun _ params -> Array.iter (fun tv -> tv := TYSPEC_all) params)\n           item_params;\n+        log cx \"finished typechecking stmt: %a\" Ast.sprintf_stmt stmt;\n       with\n           Semant_err (None, msg) ->\n             raise (Semant_err ((Some stmt.id), msg))"}]}