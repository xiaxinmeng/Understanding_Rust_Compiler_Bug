{"sha": "eb637d26ba4652ea65ef58288af0697c32ebc503", "node_id": "MDY6Q29tbWl0NzI0NzEyOmViNjM3ZDI2YmE0NjUyZWE2NWVmNTgyODhhZjA2OTdjMzJlYmM1MDM=", "commit": {"author": {"name": "Nicholas Nethercote", "email": "nnethercote@mozilla.com", "date": "2018-10-26T11:06:59Z"}, "committer": {"name": "Nicholas Nethercote", "email": "nnethercote@mozilla.com", "date": "2018-10-26T11:08:39Z"}, "message": "Avoid unnecessary allocations in `float_lit` and `integer_lit`.\n\nThis commit avoids an allocation when parsing any float and integer\nliterals that don't involved underscores.\n\nThis reduces the number of allocations done for the `tuple-stress`\nbenchmark by 10%, reducing its instruction count by just under 1%.", "tree": {"sha": "9e1aa216e2474f3d8f4f6d7c9993b0336b9eb2b2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9e1aa216e2474f3d8f4f6d7c9993b0336b9eb2b2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/eb637d26ba4652ea65ef58288af0697c32ebc503", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/eb637d26ba4652ea65ef58288af0697c32ebc503", "html_url": "https://github.com/rust-lang/rust/commit/eb637d26ba4652ea65ef58288af0697c32ebc503", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/eb637d26ba4652ea65ef58288af0697c32ebc503/comments", "author": {"login": "nnethercote", "id": 1940286, "node_id": "MDQ6VXNlcjE5NDAyODY=", "avatar_url": "https://avatars.githubusercontent.com/u/1940286?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nnethercote", "html_url": "https://github.com/nnethercote", "followers_url": "https://api.github.com/users/nnethercote/followers", "following_url": "https://api.github.com/users/nnethercote/following{/other_user}", "gists_url": "https://api.github.com/users/nnethercote/gists{/gist_id}", "starred_url": "https://api.github.com/users/nnethercote/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nnethercote/subscriptions", "organizations_url": "https://api.github.com/users/nnethercote/orgs", "repos_url": "https://api.github.com/users/nnethercote/repos", "events_url": "https://api.github.com/users/nnethercote/events{/privacy}", "received_events_url": "https://api.github.com/users/nnethercote/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nnethercote", "id": 1940286, "node_id": "MDQ6VXNlcjE5NDAyODY=", "avatar_url": "https://avatars.githubusercontent.com/u/1940286?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nnethercote", "html_url": "https://github.com/nnethercote", "followers_url": "https://api.github.com/users/nnethercote/followers", "following_url": "https://api.github.com/users/nnethercote/following{/other_user}", "gists_url": "https://api.github.com/users/nnethercote/gists{/gist_id}", "starred_url": "https://api.github.com/users/nnethercote/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nnethercote/subscriptions", "organizations_url": "https://api.github.com/users/nnethercote/orgs", "repos_url": "https://api.github.com/users/nnethercote/repos", "events_url": "https://api.github.com/users/nnethercote/events{/privacy}", "received_events_url": "https://api.github.com/users/nnethercote/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f99911a4a0bead7dd1f9ef2f90442844434cc391", "url": "https://api.github.com/repos/rust-lang/rust/commits/f99911a4a0bead7dd1f9ef2f90442844434cc391", "html_url": "https://github.com/rust-lang/rust/commit/f99911a4a0bead7dd1f9ef2f90442844434cc391"}], "stats": {"total": 23, "additions": 19, "deletions": 4}, "files": [{"sha": "77a2ae6acf00b680e4028bd5d98012f20b225980", "filename": "src/libsyntax/parse/mod.rs", "status": "modified", "additions": 19, "deletions": 4, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/eb637d26ba4652ea65ef58288af0697c32ebc503/src%2Flibsyntax%2Fparse%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/eb637d26ba4652ea65ef58288af0697c32ebc503/src%2Flibsyntax%2Fparse%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fmod.rs?ref=eb637d26ba4652ea65ef58288af0697c32ebc503", "patch": "@@ -494,8 +494,17 @@ fn float_lit(s: &str, suffix: Option<Symbol>, diag: Option<(Span, &Handler)>)\n                  -> Option<ast::LitKind> {\n     debug!(\"float_lit: {:?}, {:?}\", s, suffix);\n     // FIXME #2252: bounds checking float literals is deferred until trans\n-    let s = s.chars().filter(|&c| c != '_').collect::<String>();\n-    filtered_float_lit(Symbol::intern(&s), suffix, diag)\n+\n+    // Strip underscores without allocating a new String unless necessary.\n+    let s2;\n+    let s = if s.chars().any(|c| c == '_') {\n+        s2 = s.chars().filter(|&c| c != '_').collect::<String>();\n+        &s2\n+    } else {\n+        s\n+    };\n+\n+    filtered_float_lit(Symbol::intern(s), suffix, diag)\n }\n \n /// Parse a string representing a byte literal into its final form. Similar to `char_lit`\n@@ -591,8 +600,14 @@ fn integer_lit(s: &str, suffix: Option<Symbol>, diag: Option<(Span, &Handler)>)\n                    -> Option<ast::LitKind> {\n     // s can only be ascii, byte indexing is fine\n \n-    let s2 = s.chars().filter(|&c| c != '_').collect::<String>();\n-    let mut s = &s2[..];\n+    // Strip underscores without allocating a new String unless necessary.\n+    let s2;\n+    let mut s = if s.chars().any(|c| c == '_') {\n+        s2 = s.chars().filter(|&c| c != '_').collect::<String>();\n+        &s2\n+    } else {\n+        s\n+    };\n \n     debug!(\"integer_lit: {}, {:?}\", s, suffix);\n "}]}