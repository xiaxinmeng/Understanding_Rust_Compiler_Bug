{"sha": "4d17658940ec73554dfef799b22e8829ab5ad61a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjRkMTc2NTg5NDBlYzczNTU0ZGZlZjc5OWIyMmU4ODI5YWI1YWQ2MWE=", "commit": {"author": {"name": "kjeremy", "email": "kjeremy@gmail.com", "date": "2019-10-30T18:39:05Z"}, "committer": {"name": "kjeremy", "email": "kjeremy@gmail.com", "date": "2019-10-30T18:39:05Z"}, "message": "Use match_ast! in FnCallNode::with_node", "tree": {"sha": "77df94684e42ff4f508d14d4ad2dbe388d26535b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/77df94684e42ff4f508d14d4ad2dbe388d26535b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4d17658940ec73554dfef799b22e8829ab5ad61a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4d17658940ec73554dfef799b22e8829ab5ad61a", "html_url": "https://github.com/rust-lang/rust/commit/4d17658940ec73554dfef799b22e8829ab5ad61a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4d17658940ec73554dfef799b22e8829ab5ad61a/comments", "author": {"login": "kjeremy", "id": 4325700, "node_id": "MDQ6VXNlcjQzMjU3MDA=", "avatar_url": "https://avatars.githubusercontent.com/u/4325700?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kjeremy", "html_url": "https://github.com/kjeremy", "followers_url": "https://api.github.com/users/kjeremy/followers", "following_url": "https://api.github.com/users/kjeremy/following{/other_user}", "gists_url": "https://api.github.com/users/kjeremy/gists{/gist_id}", "starred_url": "https://api.github.com/users/kjeremy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kjeremy/subscriptions", "organizations_url": "https://api.github.com/users/kjeremy/orgs", "repos_url": "https://api.github.com/users/kjeremy/repos", "events_url": "https://api.github.com/users/kjeremy/events{/privacy}", "received_events_url": "https://api.github.com/users/kjeremy/received_events", "type": "User", "site_admin": false}, "committer": {"login": "kjeremy", "id": 4325700, "node_id": "MDQ6VXNlcjQzMjU3MDA=", "avatar_url": "https://avatars.githubusercontent.com/u/4325700?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kjeremy", "html_url": "https://github.com/kjeremy", "followers_url": "https://api.github.com/users/kjeremy/followers", "following_url": "https://api.github.com/users/kjeremy/following{/other_user}", "gists_url": "https://api.github.com/users/kjeremy/gists{/gist_id}", "starred_url": "https://api.github.com/users/kjeremy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kjeremy/subscriptions", "organizations_url": "https://api.github.com/users/kjeremy/orgs", "repos_url": "https://api.github.com/users/kjeremy/repos", "events_url": "https://api.github.com/users/kjeremy/events{/privacy}", "received_events_url": "https://api.github.com/users/kjeremy/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7ad55e976c3f88e92075379c8a4c1f413665b458", "url": "https://api.github.com/repos/rust-lang/rust/commits/7ad55e976c3f88e92075379c8a4c1f413665b458", "html_url": "https://github.com/rust-lang/rust/commit/7ad55e976c3f88e92075379c8a4c1f413665b458"}], "stats": {"total": 17, "additions": 8, "deletions": 9}, "files": [{"sha": "3572825b57a6890522f7f333f5afe9098b257a52", "filename": "crates/ra_ide_api/src/call_info.rs", "status": "modified", "additions": 8, "deletions": 9, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/4d17658940ec73554dfef799b22e8829ab5ad61a/crates%2Fra_ide_api%2Fsrc%2Fcall_info.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4d17658940ec73554dfef799b22e8829ab5ad61a/crates%2Fra_ide_api%2Fsrc%2Fcall_info.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Fcall_info.rs?ref=4d17658940ec73554dfef799b22e8829ab5ad61a", "patch": "@@ -4,7 +4,7 @@ use ra_db::SourceDatabase;\n use ra_syntax::{\n     algo::ancestors_at_offset,\n     ast::{self, ArgListOwner},\n-    AstNode, SyntaxNode, TextUnit,\n+    match_ast, AstNode, SyntaxNode, TextUnit,\n };\n use test_utils::tested_by;\n \n@@ -91,14 +91,13 @@ enum FnCallNode {\n impl FnCallNode {\n     fn with_node(syntax: &SyntaxNode, offset: TextUnit) -> Option<FnCallNode> {\n         ancestors_at_offset(syntax, offset).find_map(|node| {\n-            if let Some(expr) = ast::CallExpr::cast(node.clone()) {\n-                Some(FnCallNode::CallExpr(expr))\n-            } else if let Some(expr) = ast::MethodCallExpr::cast(node.clone()) {\n-                Some(FnCallNode::MethodCallExpr(expr))\n-            } else if let Some(expr) = ast::MacroCall::cast(node) {\n-                Some(FnCallNode::MacroCallExpr(expr))\n-            } else {\n-                None\n+            match_ast! {\n+                match node {\n+                    ast::CallExpr(it) => { Some(FnCallNode::CallExpr(it)) },\n+                    ast::MethodCallExpr(it) => { Some(FnCallNode::MethodCallExpr(it)) },\n+                    ast::MacroCall(it) => { Some(FnCallNode::MacroCallExpr(it)) },\n+                    _ => { None },\n+                }\n             }\n         })\n     }"}]}