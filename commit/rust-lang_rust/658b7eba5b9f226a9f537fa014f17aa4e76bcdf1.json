{"sha": "658b7eba5b9f226a9f537fa014f17aa4e76bcdf1", "node_id": "MDY6Q29tbWl0NzI0NzEyOjY1OGI3ZWJhNWI5ZjIyNmE5ZjUzN2ZhMDE0ZjE3YWE0ZTc2YmNkZjE=", "commit": {"author": {"name": "llogiq", "email": "bogusandre@gmail.com", "date": "2015-09-08T05:41:50Z"}, "committer": {"name": "llogiq", "email": "bogusandre@gmail.com", "date": "2015-09-08T05:41:50Z"}, "message": "Fixed required type coercion\n\nI'd have thought that the types of the slice::Split would have been inferred, but this appears not to be the case. Reverted this one change.", "tree": {"sha": "d0000d81c21aeacd4ee27b35c2bb1948b3eb51d5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d0000d81c21aeacd4ee27b35c2bb1948b3eb51d5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/658b7eba5b9f226a9f537fa014f17aa4e76bcdf1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/658b7eba5b9f226a9f537fa014f17aa4e76bcdf1", "html_url": "https://github.com/rust-lang/rust/commit/658b7eba5b9f226a9f537fa014f17aa4e76bcdf1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/658b7eba5b9f226a9f537fa014f17aa4e76bcdf1/comments", "author": {"login": "llogiq", "id": 4200835, "node_id": "MDQ6VXNlcjQyMDA4MzU=", "avatar_url": "https://avatars.githubusercontent.com/u/4200835?v=4", "gravatar_id": "", "url": "https://api.github.com/users/llogiq", "html_url": "https://github.com/llogiq", "followers_url": "https://api.github.com/users/llogiq/followers", "following_url": "https://api.github.com/users/llogiq/following{/other_user}", "gists_url": "https://api.github.com/users/llogiq/gists{/gist_id}", "starred_url": "https://api.github.com/users/llogiq/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/llogiq/subscriptions", "organizations_url": "https://api.github.com/users/llogiq/orgs", "repos_url": "https://api.github.com/users/llogiq/repos", "events_url": "https://api.github.com/users/llogiq/events{/privacy}", "received_events_url": "https://api.github.com/users/llogiq/received_events", "type": "User", "site_admin": false}, "committer": {"login": "llogiq", "id": 4200835, "node_id": "MDQ6VXNlcjQyMDA4MzU=", "avatar_url": "https://avatars.githubusercontent.com/u/4200835?v=4", "gravatar_id": "", "url": "https://api.github.com/users/llogiq", "html_url": "https://github.com/llogiq", "followers_url": "https://api.github.com/users/llogiq/followers", "following_url": "https://api.github.com/users/llogiq/following{/other_user}", "gists_url": "https://api.github.com/users/llogiq/gists{/gist_id}", "starred_url": "https://api.github.com/users/llogiq/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/llogiq/subscriptions", "organizations_url": "https://api.github.com/users/llogiq/orgs", "repos_url": "https://api.github.com/users/llogiq/repos", "events_url": "https://api.github.com/users/llogiq/events{/privacy}", "received_events_url": "https://api.github.com/users/llogiq/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "808390817aa50b6251e957075c22a688bc96ce9f", "url": "https://api.github.com/repos/rust-lang/rust/commits/808390817aa50b6251e957075c22a688bc96ce9f", "html_url": "https://github.com/rust-lang/rust/commit/808390817aa50b6251e957075c22a688bc96ce9f"}], "stats": {"total": 3, "additions": 2, "deletions": 1}, "files": [{"sha": "e99e2c50d1dbafaeecb58aafc09d92c21395dabc", "filename": "src/libstd/sys/unix/os.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/658b7eba5b9f226a9f537fa014f17aa4e76bcdf1/src%2Flibstd%2Fsys%2Funix%2Fos.rs", "raw_url": "https://github.com/rust-lang/rust/raw/658b7eba5b9f226a9f537fa014f17aa4e76bcdf1/src%2Flibstd%2Fsys%2Funix%2Fos.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Funix%2Fos.rs?ref=658b7eba5b9f226a9f537fa014f17aa4e76bcdf1", "patch": "@@ -141,7 +141,8 @@ pub fn split_paths(unparsed: &OsStr) -> SplitPaths {\n     fn is_colon(b: &u8) -> bool { *b == b':' }\n     let unparsed = unparsed.as_bytes();\n     SplitPaths {\n-        iter: unparsed.split(is_colon).map(bytes_to_path)\n+        iter: unparsed.split(is_colon as fn(&u8) -> bool)\n+                      .map(bytes_to_path as fn(&'a [u8]) -> PathBuf)\n     }\n }\n "}]}