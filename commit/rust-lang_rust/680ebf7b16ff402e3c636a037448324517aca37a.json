{"sha": "680ebf7b16ff402e3c636a037448324517aca37a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjY4MGViZjdiMTZmZjQwMmUzYzYzNmEwMzc0NDgzMjQ1MTdhY2EzN2E=", "commit": {"author": {"name": "varkor", "email": "github@varkor.com", "date": "2018-01-04T00:17:36Z"}, "committer": {"name": "varkor", "email": "github@varkor.com", "date": "2018-01-04T00:17:36Z"}, "message": "Add min and max specialisations for RangeInclusive", "tree": {"sha": "08a3f20e0b17a75b6c5aa116f4d20b127deea884", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/08a3f20e0b17a75b6c5aa116f4d20b127deea884"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/680ebf7b16ff402e3c636a037448324517aca37a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/680ebf7b16ff402e3c636a037448324517aca37a", "html_url": "https://github.com/rust-lang/rust/commit/680ebf7b16ff402e3c636a037448324517aca37a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/680ebf7b16ff402e3c636a037448324517aca37a/comments", "author": {"login": "varkor", "id": 3943692, "node_id": "MDQ6VXNlcjM5NDM2OTI=", "avatar_url": "https://avatars.githubusercontent.com/u/3943692?v=4", "gravatar_id": "", "url": "https://api.github.com/users/varkor", "html_url": "https://github.com/varkor", "followers_url": "https://api.github.com/users/varkor/followers", "following_url": "https://api.github.com/users/varkor/following{/other_user}", "gists_url": "https://api.github.com/users/varkor/gists{/gist_id}", "starred_url": "https://api.github.com/users/varkor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/varkor/subscriptions", "organizations_url": "https://api.github.com/users/varkor/orgs", "repos_url": "https://api.github.com/users/varkor/repos", "events_url": "https://api.github.com/users/varkor/events{/privacy}", "received_events_url": "https://api.github.com/users/varkor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "varkor", "id": 3943692, "node_id": "MDQ6VXNlcjM5NDM2OTI=", "avatar_url": "https://avatars.githubusercontent.com/u/3943692?v=4", "gravatar_id": "", "url": "https://api.github.com/users/varkor", "html_url": "https://github.com/varkor", "followers_url": "https://api.github.com/users/varkor/followers", "following_url": "https://api.github.com/users/varkor/following{/other_user}", "gists_url": "https://api.github.com/users/varkor/gists{/gist_id}", "starred_url": "https://api.github.com/users/varkor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/varkor/subscriptions", "organizations_url": "https://api.github.com/users/varkor/orgs", "repos_url": "https://api.github.com/users/varkor/repos", "events_url": "https://api.github.com/users/varkor/events{/privacy}", "received_events_url": "https://api.github.com/users/varkor/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8d1a30289ea13c433a92e31627f8533350835328", "url": "https://api.github.com/repos/rust-lang/rust/commits/8d1a30289ea13c433a92e31627f8533350835328", "html_url": "https://github.com/rust-lang/rust/commit/8d1a30289ea13c433a92e31627f8533350835328"}], "stats": {"total": 10, "additions": 10, "deletions": 0}, "files": [{"sha": "19a76302f178a9fb35eed9aa50e11143fa00c14c", "filename": "src/libcore/iter/range.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/680ebf7b16ff402e3c636a037448324517aca37a/src%2Flibcore%2Fiter%2Frange.rs", "raw_url": "https://github.com/rust-lang/rust/raw/680ebf7b16ff402e3c636a037448324517aca37a/src%2Flibcore%2Fiter%2Frange.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fiter%2Frange.rs?ref=680ebf7b16ff402e3c636a037448324517aca37a", "patch": "@@ -367,6 +367,16 @@ impl<A: Step> Iterator for ops::RangeInclusive<A> {\n         self.end.replace_zero();\n         None\n     }\n+\n+    #[inline]\n+    fn min(self) -> Option<A> {\n+        Some(self.start)\n+    }\n+\n+    #[inline]\n+    fn max(self) -> Option<A> {\n+        Some(self.end)\n+    }\n }\n \n #[unstable(feature = \"inclusive_range\", reason = \"recently added, follows RFC\", issue = \"28237\")]"}]}