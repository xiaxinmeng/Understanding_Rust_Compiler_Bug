{"sha": "4d8273dea5d2f398c473dd4a9c8a178dadc5be4c", "node_id": "MDY6Q29tbWl0NzI0NzEyOjRkODI3M2RlYTVkMmYzOThjNDczZGQ0YTljOGExNzhkYWRjNWJlNGM=", "commit": {"author": {"name": "Trevor Spiteri", "email": "tspiteri@ieee.org", "date": "2020-03-31T19:37:13Z"}, "committer": {"name": "Trevor Spiteri", "email": "tspiteri@ieee.org", "date": "2020-03-31T19:37:13Z"}, "message": "expand vec![] to Vec::new()", "tree": {"sha": "b1d93164c2280d21ecf744ac4d713871922015f4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b1d93164c2280d21ecf744ac4d713871922015f4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4d8273dea5d2f398c473dd4a9c8a178dadc5be4c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4d8273dea5d2f398c473dd4a9c8a178dadc5be4c", "html_url": "https://github.com/rust-lang/rust/commit/4d8273dea5d2f398c473dd4a9c8a178dadc5be4c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4d8273dea5d2f398c473dd4a9c8a178dadc5be4c/comments", "author": {"login": "tspiteri", "id": 18604588, "node_id": "MDQ6VXNlcjE4NjA0NTg4", "avatar_url": "https://avatars.githubusercontent.com/u/18604588?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tspiteri", "html_url": "https://github.com/tspiteri", "followers_url": "https://api.github.com/users/tspiteri/followers", "following_url": "https://api.github.com/users/tspiteri/following{/other_user}", "gists_url": "https://api.github.com/users/tspiteri/gists{/gist_id}", "starred_url": "https://api.github.com/users/tspiteri/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tspiteri/subscriptions", "organizations_url": "https://api.github.com/users/tspiteri/orgs", "repos_url": "https://api.github.com/users/tspiteri/repos", "events_url": "https://api.github.com/users/tspiteri/events{/privacy}", "received_events_url": "https://api.github.com/users/tspiteri/received_events", "type": "User", "site_admin": false}, "committer": {"login": "tspiteri", "id": 18604588, "node_id": "MDQ6VXNlcjE4NjA0NTg4", "avatar_url": "https://avatars.githubusercontent.com/u/18604588?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tspiteri", "html_url": "https://github.com/tspiteri", "followers_url": "https://api.github.com/users/tspiteri/followers", "following_url": "https://api.github.com/users/tspiteri/following{/other_user}", "gists_url": "https://api.github.com/users/tspiteri/gists{/gist_id}", "starred_url": "https://api.github.com/users/tspiteri/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tspiteri/subscriptions", "organizations_url": "https://api.github.com/users/tspiteri/orgs", "repos_url": "https://api.github.com/users/tspiteri/repos", "events_url": "https://api.github.com/users/tspiteri/events{/privacy}", "received_events_url": "https://api.github.com/users/tspiteri/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "75ff3110ac6d8a0259023b83fd20d7ab295f8dd6", "url": "https://api.github.com/repos/rust-lang/rust/commits/75ff3110ac6d8a0259023b83fd20d7ab295f8dd6", "html_url": "https://github.com/rust-lang/rust/commit/75ff3110ac6d8a0259023b83fd20d7ab295f8dd6"}], "stats": {"total": 6, "additions": 6, "deletions": 0}, "files": [{"sha": "4bc0c3a079d5ca80451a8a68458206be5d92a10a", "filename": "src/liballoc/macros.rs", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/4d8273dea5d2f398c473dd4a9c8a178dadc5be4c/src%2Fliballoc%2Fmacros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4d8273dea5d2f398c473dd4a9c8a178dadc5be4c/src%2Fliballoc%2Fmacros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Fmacros.rs?ref=4d8273dea5d2f398c473dd4a9c8a178dadc5be4c", "patch": "@@ -36,6 +36,9 @@\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n #[allow_internal_unstable(box_syntax)]\n macro_rules! vec {\n+    () => (\n+        $crate::vec::Vec::new()\n+    );\n     ($elem:expr; $n:expr) => (\n         $crate::vec::from_elem($elem, $n)\n     );\n@@ -51,6 +54,9 @@ macro_rules! vec {\n // NB see the slice::hack module in slice.rs for more information\n #[cfg(test)]\n macro_rules! vec {\n+    () => (\n+        $crate::vec::Vec::new()\n+    );\n     ($elem:expr; $n:expr) => (\n         $crate::vec::from_elem($elem, $n)\n     );"}]}