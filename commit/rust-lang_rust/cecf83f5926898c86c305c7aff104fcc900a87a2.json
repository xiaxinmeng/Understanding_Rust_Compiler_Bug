{"sha": "cecf83f5926898c86c305c7aff104fcc900a87a2", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNlY2Y4M2Y1OTI2ODk4Yzg2YzMwNWM3YWZmMTA0ZmNjOTAwYTg3YTI=", "commit": {"author": {"name": "Tomasz Mi\u0105sko", "email": "tomasz.miasko@gmail.com", "date": "2016-02-06T17:42:17Z"}, "committer": {"name": "Tomasz Mi\u0105sko", "email": "tomasz.miasko@gmail.com", "date": "2016-02-08T20:26:48Z"}, "message": "Breaking tokens into pieces should behave similar to Parser::bump.\n\nPreviously when breaking tokens into smaller pieces, the replace_token\nfunction have been used. It replaced current token and updated span\ninformation, but it did not clear the list of expected tokens, neither\ndid it update remaining info about last token. This could lead to\nincorrect error message, like one described in the issue #24780:\n\n  expected one of ... `>` ...  found `>`", "tree": {"sha": "1ee7cff9363f77cd6a53b0026689b1c9d06652b5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1ee7cff9363f77cd6a53b0026689b1c9d06652b5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/cecf83f5926898c86c305c7aff104fcc900a87a2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/cecf83f5926898c86c305c7aff104fcc900a87a2", "html_url": "https://github.com/rust-lang/rust/commit/cecf83f5926898c86c305c7aff104fcc900a87a2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/cecf83f5926898c86c305c7aff104fcc900a87a2/comments", "author": {"login": "tmiasko", "id": 51362316, "node_id": "MDQ6VXNlcjUxMzYyMzE2", "avatar_url": "https://avatars.githubusercontent.com/u/51362316?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tmiasko", "html_url": "https://github.com/tmiasko", "followers_url": "https://api.github.com/users/tmiasko/followers", "following_url": "https://api.github.com/users/tmiasko/following{/other_user}", "gists_url": "https://api.github.com/users/tmiasko/gists{/gist_id}", "starred_url": "https://api.github.com/users/tmiasko/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tmiasko/subscriptions", "organizations_url": "https://api.github.com/users/tmiasko/orgs", "repos_url": "https://api.github.com/users/tmiasko/repos", "events_url": "https://api.github.com/users/tmiasko/events{/privacy}", "received_events_url": "https://api.github.com/users/tmiasko/received_events", "type": "User", "site_admin": false}, "committer": {"login": "tmiasko", "id": 51362316, "node_id": "MDQ6VXNlcjUxMzYyMzE2", "avatar_url": "https://avatars.githubusercontent.com/u/51362316?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tmiasko", "html_url": "https://github.com/tmiasko", "followers_url": "https://api.github.com/users/tmiasko/followers", "following_url": "https://api.github.com/users/tmiasko/following{/other_user}", "gists_url": "https://api.github.com/users/tmiasko/gists{/gist_id}", "starred_url": "https://api.github.com/users/tmiasko/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tmiasko/subscriptions", "organizations_url": "https://api.github.com/users/tmiasko/orgs", "repos_url": "https://api.github.com/users/tmiasko/repos", "events_url": "https://api.github.com/users/tmiasko/events{/privacy}", "received_events_url": "https://api.github.com/users/tmiasko/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "695c907dcc7c81c5fc052f426f7764476c12cf15", "url": "https://api.github.com/repos/rust-lang/rust/commits/695c907dcc7c81c5fc052f426f7764476c12cf15", "html_url": "https://github.com/rust-lang/rust/commit/695c907dcc7c81c5fc052f426f7764476c12cf15"}], "stats": {"total": 50, "additions": 39, "deletions": 11}, "files": [{"sha": "82bfc26ee34ab219a047c9230a957fbece3fa988", "filename": "src/libsyntax/parse/parser.rs", "status": "modified", "additions": 19, "deletions": 11, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/cecf83f5926898c86c305c7aff104fcc900a87a2/src%2Flibsyntax%2Fparse%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cecf83f5926898c86c305c7aff104fcc900a87a2/src%2Flibsyntax%2Fparse%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fparser.rs?ref=cecf83f5926898c86c305c7aff104fcc900a87a2", "patch": "@@ -682,7 +682,7 @@ impl<'a> Parser<'a> {\n             token::AndAnd => {\n                 let span = self.span;\n                 let lo = span.lo + BytePos(1);\n-                Ok(self.replace_token(token::BinOp(token::And), lo, span.hi))\n+                Ok(self.bump_with(token::BinOp(token::And), lo, span.hi))\n             }\n             _ => self.unexpected()\n         }\n@@ -717,7 +717,7 @@ impl<'a> Parser<'a> {\n             token::BinOp(token::Shl) => {\n                 let span = self.span;\n                 let lo = span.lo + BytePos(1);\n-                self.replace_token(token::Lt, lo, span.hi);\n+                self.bump_with(token::Lt, lo, span.hi);\n                 true\n             }\n             _ => false,\n@@ -745,17 +745,17 @@ impl<'a> Parser<'a> {\n             token::BinOp(token::Shr) => {\n                 let span = self.span;\n                 let lo = span.lo + BytePos(1);\n-                Ok(self.replace_token(token::Gt, lo, span.hi))\n+                Ok(self.bump_with(token::Gt, lo, span.hi))\n             }\n             token::BinOpEq(token::Shr) => {\n                 let span = self.span;\n                 let lo = span.lo + BytePos(1);\n-                Ok(self.replace_token(token::Ge, lo, span.hi))\n+                Ok(self.bump_with(token::Ge, lo, span.hi))\n             }\n             token::Ge => {\n                 let span = self.span;\n                 let lo = span.lo + BytePos(1);\n-                Ok(self.replace_token(token::Eq, lo, span.hi))\n+                Ok(self.bump_with(token::Eq, lo, span.hi))\n             }\n             _ => {\n                 let gt_str = Parser::token_to_string(&token::Gt);\n@@ -977,15 +977,23 @@ impl<'a> Parser<'a> {\n         old_token\n     }\n \n-    /// EFFECT: replace the current token and span with the given one\n-    pub fn replace_token(&mut self,\n-                         next: token::Token,\n-                         lo: BytePos,\n-                         hi: BytePos) {\n+    /// Advance the parser using provided token as a next one. Use this when\n+    /// consuming a part of a token. For example a single `<` from `<<`.\n+    pub fn bump_with(&mut self,\n+                     next: token::Token,\n+                     lo: BytePos,\n+                     hi: BytePos) {\n         self.last_span = mk_sp(self.span.lo, lo);\n-        self.token = next;\n+        // It would be incorrect to just stash current token, but fortunately\n+        // for tokens currently using `bump_with`, last_token will be of no\n+        // use anyway.\n+        self.last_token = None;\n+        self.last_token_interpolated = false;\n         self.span = mk_sp(lo, hi);\n+        self.token = next;\n+        self.expected_tokens.clear();\n     }\n+\n     pub fn buffer_length(&mut self) -> isize {\n         if self.buffer_start <= self.buffer_end {\n             return self.buffer_end - self.buffer_start;"}, {"sha": "56b91699478ef92277ccfce9601d1b6a706f30c9", "filename": "src/test/parse-fail/issue-24780.rs", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/cecf83f5926898c86c305c7aff104fcc900a87a2/src%2Ftest%2Fparse-fail%2Fissue-24780.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cecf83f5926898c86c305c7aff104fcc900a87a2/src%2Ftest%2Fparse-fail%2Fissue-24780.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fparse-fail%2Fissue-24780.rs?ref=cecf83f5926898c86c305c7aff104fcc900a87a2", "patch": "@@ -0,0 +1,20 @@\n+// Copyright 2016 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// Verify that '>' is not both expected and found at the same time, as it used\n+// to happen in #24780. For example, following should be an error:\n+// expected one of ..., `>`, ... found `>`\n+//\n+// compile-flags: -Z parse-only\n+\n+fn foo() -> Vec<usize>> {\n+    //~^ ERROR expected one of `!`, `::`, `where`, or `{`, found `>`\n+    Vec::new()\n+}"}]}