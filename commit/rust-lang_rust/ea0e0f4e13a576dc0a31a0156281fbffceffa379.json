{"sha": "ea0e0f4e13a576dc0a31a0156281fbffceffa379", "node_id": "C_kwDOAAsO6NoAKGVhMGUwZjRlMTNhNTc2ZGMwYTMxYTAxNTYyODFmYmZmY2VmZmEzNzk", "commit": {"author": {"name": "Yoshiki Matsuda", "email": "myskjp@gmail.com", "date": "2022-06-06T14:13:54Z"}, "committer": {"name": "Yoshiki Matsuda", "email": "myskjp@gmail.com", "date": "2022-07-02T13:54:37Z"}, "message": "avoid holding the temp_dir for empty metadata file", "tree": {"sha": "57cf65ea9ac3a8e99cdc4b857b59ea8fb17e25b6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/57cf65ea9ac3a8e99cdc4b857b59ea8fb17e25b6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ea0e0f4e13a576dc0a31a0156281fbffceffa379", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ea0e0f4e13a576dc0a31a0156281fbffceffa379", "html_url": "https://github.com/rust-lang/rust/commit/ea0e0f4e13a576dc0a31a0156281fbffceffa379", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ea0e0f4e13a576dc0a31a0156281fbffceffa379/comments", "author": {"login": "m-ysk", "id": 47472854, "node_id": "MDQ6VXNlcjQ3NDcyODU0", "avatar_url": "https://avatars.githubusercontent.com/u/47472854?v=4", "gravatar_id": "", "url": "https://api.github.com/users/m-ysk", "html_url": "https://github.com/m-ysk", "followers_url": "https://api.github.com/users/m-ysk/followers", "following_url": "https://api.github.com/users/m-ysk/following{/other_user}", "gists_url": "https://api.github.com/users/m-ysk/gists{/gist_id}", "starred_url": "https://api.github.com/users/m-ysk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/m-ysk/subscriptions", "organizations_url": "https://api.github.com/users/m-ysk/orgs", "repos_url": "https://api.github.com/users/m-ysk/repos", "events_url": "https://api.github.com/users/m-ysk/events{/privacy}", "received_events_url": "https://api.github.com/users/m-ysk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "m-ysk", "id": 47472854, "node_id": "MDQ6VXNlcjQ3NDcyODU0", "avatar_url": "https://avatars.githubusercontent.com/u/47472854?v=4", "gravatar_id": "", "url": "https://api.github.com/users/m-ysk", "html_url": "https://github.com/m-ysk", "followers_url": "https://api.github.com/users/m-ysk/followers", "following_url": "https://api.github.com/users/m-ysk/following{/other_user}", "gists_url": "https://api.github.com/users/m-ysk/gists{/gist_id}", "starred_url": "https://api.github.com/users/m-ysk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/m-ysk/subscriptions", "organizations_url": "https://api.github.com/users/m-ysk/orgs", "repos_url": "https://api.github.com/users/m-ysk/repos", "events_url": "https://api.github.com/users/m-ysk/events{/privacy}", "received_events_url": "https://api.github.com/users/m-ysk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3e309350d2dcac7f6e28754008fc899dea88bae9", "url": "https://api.github.com/repos/rust-lang/rust/commits/3e309350d2dcac7f6e28754008fc899dea88bae9", "html_url": "https://github.com/rust-lang/rust/commit/3e309350d2dcac7f6e28754008fc899dea88bae9"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "2b5bafb8b9cc3f1a9a4379fee931cfa12b1f1b24", "filename": "compiler/rustc_metadata/src/rmeta/encoder.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ea0e0f4e13a576dc0a31a0156281fbffceffa379/compiler%2Frustc_metadata%2Fsrc%2Frmeta%2Fencoder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ea0e0f4e13a576dc0a31a0156281fbffceffa379/compiler%2Frustc_metadata%2Fsrc%2Frmeta%2Fencoder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_metadata%2Fsrc%2Frmeta%2Fencoder.rs?ref=ea0e0f4e13a576dc0a31a0156281fbffceffa379", "patch": "@@ -2158,7 +2158,7 @@ impl EncodedMetadata {\n         let file = std::fs::File::open(&path)?;\n         let file_metadata = file.metadata()?;\n         if file_metadata.len() == 0 {\n-            return Ok(Self { mmap: None, _temp_dir: temp_dir });\n+            return Ok(Self { mmap: None, _temp_dir: None });\n         }\n         let mmap = unsafe { Some(Mmap::map(file)?) };\n         Ok(Self { mmap, _temp_dir: temp_dir })"}]}