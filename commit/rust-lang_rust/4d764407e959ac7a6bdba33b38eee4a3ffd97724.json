{"sha": "4d764407e959ac7a6bdba33b38eee4a3ffd97724", "node_id": "MDY6Q29tbWl0NzI0NzEyOjRkNzY0NDA3ZTk1OWFjN2E2YmRiYTMzYjM4ZWVlNGEzZmZkOTc3MjQ=", "commit": {"author": {"name": "kennytm", "email": "kennytm@gmail.com", "date": "2018-11-13T05:03:24Z"}, "committer": {"name": "kennytm", "email": "kennytm@gmail.com", "date": "2018-11-13T11:20:58Z"}, "message": "Rollup merge of #55896 - rust-lang:opt-fuse, r=shepmaster\n\nDocument optimizations enabled by FusedIterator\n\nWhen reading this I wondered what \u201csome significant optimizations\u201d referred to. As far as I can tell from reading code, the specialization of `.fuse()` is the only case where `FusedIterator` has any impact at all. Is this accurate @Stebalien?", "tree": {"sha": "e28db30405ff10faa1e2f691ab6c3bf9690e2a9b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e28db30405ff10faa1e2f691ab6c3bf9690e2a9b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4d764407e959ac7a6bdba33b38eee4a3ffd97724", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEZ1R8CLMp8f2GxWoQ/vbIBR0OATwFAlvqs5oACgkQ/vbIBR0O\nATzxIw/7Bh9Ci0q3WYU7ImdKgM+GmSK1+snNaCmeJqKhYgIt0xE57W2bVBrMlnoR\nBOX4/ZXwv8Y+lfBEQyHkrH+DFWrlnimXZQ/q0NO9vZMy3i+YWNf2LJxporrAZ+sn\ngviIiwsMJRFSWmQLgazNLYzaIgFwO/gdJ5eikqIA+Ul8jRJxvUi4Uwtpz3/m2tbg\nJI/ZmaV/X3d5yB+KI8sXQyt+UGvJ/w+lfAE3lV4QM71IUonox3n9gmlt+8oFt93h\nX38WLc14AF0wNI14T5D83jvyX/BT84Qa9z1VlW3EjvDjc+kt0k0Ve/tY1C5DDuwq\nkDWTwI0GGDVG8I7Hgkvet7lrFjc/OMS3BBS+BtUWvbwiNaevHa07YIm26LKjj/0q\nXnuRrnITVO6gvC0DIdgrZ9dofhWGTfNCHKgUy4sdLkH+1J2e3DwFF3gAtQQqmjmU\n49NXvGKsZBC5hg7fEx4Igeu+IXGwZCrCt5tjtEeX3XKCzK/XHPbyC5S+evEHgVoH\nd8QUeZ+TvylNveR4kHk7LLYszW9b4QGcbgd6wghTHAsGKwIZyqDaPLn3ZACpkhw4\nUK341PLciJU/UXAdJjibFkTCYSYjw6u4G8A3YpVo6NNsZjzr/qSKUQnznBnMlr5l\ngGePxsB7FvfuUfZpLivlVzYi2lOH2IBQ1AGE2XluGya2MmnsnOI=\n=MzTh\n-----END PGP SIGNATURE-----", "payload": "tree e28db30405ff10faa1e2f691ab6c3bf9690e2a9b\nparent 99986a5a057a02fb37e41c3e4fe20db1f75aa6cc\nparent 4da9f1069f16ec06912f85f0ca684f09f36d45a7\nauthor kennytm <kennytm@gmail.com> 1542085404 +0800\ncommitter kennytm <kennytm@gmail.com> 1542108058 +0800\n\nRollup merge of #55896 - rust-lang:opt-fuse, r=shepmaster\n\nDocument optimizations enabled by FusedIterator\n\nWhen reading this I wondered what \u201csome significant optimizations\u201d referred to. As far as I can tell from reading code, the specialization of `.fuse()` is the only case where `FusedIterator` has any impact at all. Is this accurate @Stebalien?\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4d764407e959ac7a6bdba33b38eee4a3ffd97724", "html_url": "https://github.com/rust-lang/rust/commit/4d764407e959ac7a6bdba33b38eee4a3ffd97724", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4d764407e959ac7a6bdba33b38eee4a3ffd97724/comments", "author": {"login": "kennytm", "id": 103023, "node_id": "MDQ6VXNlcjEwMzAyMw==", "avatar_url": "https://avatars.githubusercontent.com/u/103023?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kennytm", "html_url": "https://github.com/kennytm", "followers_url": "https://api.github.com/users/kennytm/followers", "following_url": "https://api.github.com/users/kennytm/following{/other_user}", "gists_url": "https://api.github.com/users/kennytm/gists{/gist_id}", "starred_url": "https://api.github.com/users/kennytm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kennytm/subscriptions", "organizations_url": "https://api.github.com/users/kennytm/orgs", "repos_url": "https://api.github.com/users/kennytm/repos", "events_url": "https://api.github.com/users/kennytm/events{/privacy}", "received_events_url": "https://api.github.com/users/kennytm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "kennytm", "id": 103023, "node_id": "MDQ6VXNlcjEwMzAyMw==", "avatar_url": "https://avatars.githubusercontent.com/u/103023?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kennytm", "html_url": "https://github.com/kennytm", "followers_url": "https://api.github.com/users/kennytm/followers", "following_url": "https://api.github.com/users/kennytm/following{/other_user}", "gists_url": "https://api.github.com/users/kennytm/gists{/gist_id}", "starred_url": "https://api.github.com/users/kennytm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kennytm/subscriptions", "organizations_url": "https://api.github.com/users/kennytm/orgs", "repos_url": "https://api.github.com/users/kennytm/repos", "events_url": "https://api.github.com/users/kennytm/events{/privacy}", "received_events_url": "https://api.github.com/users/kennytm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "99986a5a057a02fb37e41c3e4fe20db1f75aa6cc", "url": "https://api.github.com/repos/rust-lang/rust/commits/99986a5a057a02fb37e41c3e4fe20db1f75aa6cc", "html_url": "https://github.com/rust-lang/rust/commit/99986a5a057a02fb37e41c3e4fe20db1f75aa6cc"}, {"sha": "4da9f1069f16ec06912f85f0ca684f09f36d45a7", "url": "https://api.github.com/repos/rust-lang/rust/commits/4da9f1069f16ec06912f85f0ca684f09f36d45a7", "html_url": "https://github.com/rust-lang/rust/commit/4da9f1069f16ec06912f85f0ca684f09f36d45a7"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "d2c5a3bed2869aa137a91b7af1dc225ced0a29d2", "filename": "src/libcore/iter/traits.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4d764407e959ac7a6bdba33b38eee4a3ffd97724/src%2Flibcore%2Fiter%2Ftraits.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4d764407e959ac7a6bdba33b38eee4a3ffd97724/src%2Flibcore%2Fiter%2Ftraits.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fiter%2Ftraits.rs?ref=4d764407e959ac7a6bdba33b38eee4a3ffd97724", "patch": "@@ -960,7 +960,7 @@ impl<T, U, E> Product<Result<U, E>> for Result<T, E>\n ///\n /// Calling next on a fused iterator that has returned `None` once is guaranteed\n /// to return [`None`] again. This trait should be implemented by all iterators\n-/// that behave this way because it allows for some significant optimizations.\n+/// that behave this way because it allows optimizing [`Iterator::fuse`].\n ///\n /// Note: In general, you should not use `FusedIterator` in generic bounds if\n /// you need a fused iterator. Instead, you should just call [`Iterator::fuse`]"}]}