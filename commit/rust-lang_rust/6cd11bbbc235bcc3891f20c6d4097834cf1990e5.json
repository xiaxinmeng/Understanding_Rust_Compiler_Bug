{"sha": "6cd11bbbc235bcc3891f20c6d4097834cf1990e5", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZjZDExYmJiYzIzNWJjYzM4OTFmMjBjNmQ0MDk3ODM0Y2YxOTkwZTU=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2021-05-08T21:14:47Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-05-08T21:14:47Z"}, "message": "Merge #8775\n\n8775: Add `=` to pattern recovery r=Veykril a=Veykril\n\nbors r+\n\nCo-authored-by: Lukas Wirth <lukastw97@gmail.com>", "tree": {"sha": "8f246de36dcc04d33285ab2f2f9558f7e975626a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8f246de36dcc04d33285ab2f2f9558f7e975626a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6cd11bbbc235bcc3891f20c6d4097834cf1990e5", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJglv9HCRBK7hj4Ov3rIwAAPJwIAHrVMnnK9WNRsWM2FSKq1SmL\nuX/qzQxFvONlrgn7fi7VfdiIKyNzMkY7AcgVKSZd9E2bIihkgvCFRRv+MCR+qWKu\n17cp7KsPFXOQ5p3NvSI7BWPQNkKDROt5yCKwJrVZORq6VUv6Yd4YNH32CxpjzfHK\nBbFWtcFoYI/LneolNGuzfU+dFrF+RHHE6m5JUpzyAzfPNEC4CCtL/IFYTbjBJ+yb\nunvvRCrdXD3o6cYHHbVS3m9mnc80UE7OPRDm+ojPfYw4RBgW85vNcIimeBzAztew\nwg+jyLjrSqkQoYrJlozoyAPC2JZluYrX879Tp3NDtoErW2pjahHa4usCZTwsHfE=\n=IBI6\n-----END PGP SIGNATURE-----\n", "payload": "tree 8f246de36dcc04d33285ab2f2f9558f7e975626a\nparent 4e33cbc6ad40b993d2c0e67a93bbf4a48a54a8eb\nparent 174f043c8d9186d2bec7c9a45b7a6ca68b232c80\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1620508487 +0000\ncommitter GitHub <noreply@github.com> 1620508487 +0000\n\nMerge #8775\n\n8775: Add `=` to pattern recovery r=Veykril a=Veykril\n\nbors r+\n\nCo-authored-by: Lukas Wirth <lukastw97@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6cd11bbbc235bcc3891f20c6d4097834cf1990e5", "html_url": "https://github.com/rust-lang/rust/commit/6cd11bbbc235bcc3891f20c6d4097834cf1990e5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6cd11bbbc235bcc3891f20c6d4097834cf1990e5/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4e33cbc6ad40b993d2c0e67a93bbf4a48a54a8eb", "url": "https://api.github.com/repos/rust-lang/rust/commits/4e33cbc6ad40b993d2c0e67a93bbf4a48a54a8eb", "html_url": "https://github.com/rust-lang/rust/commit/4e33cbc6ad40b993d2c0e67a93bbf4a48a54a8eb"}, {"sha": "174f043c8d9186d2bec7c9a45b7a6ca68b232c80", "url": "https://api.github.com/repos/rust-lang/rust/commits/174f043c8d9186d2bec7c9a45b7a6ca68b232c80", "html_url": "https://github.com/rust-lang/rust/commit/174f043c8d9186d2bec7c9a45b7a6ca68b232c80"}], "stats": {"total": 25, "additions": 23, "deletions": 2}, "files": [{"sha": "787eb2fd3f36cdad3ca17d324e713df0d2c72793", "filename": "crates/ide_completion/src/context.rs", "status": "modified", "additions": 22, "deletions": 1, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/6cd11bbbc235bcc3891f20c6d4097834cf1990e5/crates%2Fide_completion%2Fsrc%2Fcontext.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6cd11bbbc235bcc3891f20c6d4097834cf1990e5/crates%2Fide_completion%2Fsrc%2Fcontext.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_completion%2Fsrc%2Fcontext.rs?ref=6cd11bbbc235bcc3891f20c6d4097834cf1990e5", "patch": "@@ -313,7 +313,8 @@ impl<'a> CompletionContext<'a> {\n                         cov_mark::hit!(expected_type_let_with_leading_char);\n                         cov_mark::hit!(expected_type_let_without_leading_char);\n                         let ty = it.pat()\n-                            .and_then(|pat| self.sema.type_of_pat(&pat));\n+                            .and_then(|pat| self.sema.type_of_pat(&pat))\n+                            .or_else(|| it.initializer().and_then(|it| self.sema.type_of_expr(&it)));\n                         let name = if let Some(ast::Pat::IdentPat(ident)) = it.pat() {\n                             ident.name().map(NameOrNameRef::Name)\n                         } else {\n@@ -719,6 +720,26 @@ fn foo() {\n         );\n     }\n \n+    #[test]\n+    fn expected_type_let_pat() {\n+        check_expected_type_and_name(\n+            r#\"\n+fn foo() {\n+    let x$0 = 0u32;\n+}\n+\"#,\n+            expect![[r#\"ty: u32, name: ?\"#]],\n+        );\n+        check_expected_type_and_name(\n+            r#\"\n+fn foo() {\n+    let $0 = 0u32;\n+}\n+\"#,\n+            expect![[r#\"ty: u32, name: ?\"#]],\n+        );\n+    }\n+\n     #[test]\n     fn expected_type_fn_param_without_leading_char() {\n         cov_mark::check!(expected_type_fn_param_without_leading_char);"}, {"sha": "f1d1f9eaa60c6f77887a257d755c93780f1886a6", "filename": "crates/parser/src/grammar/patterns.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6cd11bbbc235bcc3891f20c6d4097834cf1990e5/crates%2Fparser%2Fsrc%2Fgrammar%2Fpatterns.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6cd11bbbc235bcc3891f20c6d4097834cf1990e5/crates%2Fparser%2Fsrc%2Fgrammar%2Fpatterns.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Fsrc%2Fgrammar%2Fpatterns.rs?ref=6cd11bbbc235bcc3891f20c6d4097834cf1990e5", "patch": "@@ -83,7 +83,7 @@ fn pattern_single_r(p: &mut Parser, recovery_set: TokenSet) {\n }\n \n const PAT_RECOVERY_SET: TokenSet =\n-    TokenSet::new(&[T![let], T![if], T![while], T![loop], T![match], T![')'], T![,]]);\n+    TokenSet::new(&[T![let], T![if], T![while], T![loop], T![match], T![')'], T![,], T![=]]);\n \n fn atom_pat(p: &mut Parser, recovery_set: TokenSet) -> Option<CompletedMarker> {\n     let m = match p.nth(0) {"}]}