{"sha": "a3d9980b25a239da612df9f8a38dec95f57adf4a", "node_id": "MDY6Q29tbWl0NzI0NzEyOmEzZDk5ODBiMjVhMjM5ZGE2MTJkZjlmOGEzOGRlYzk1ZjU3YWRmNGE=", "commit": {"author": {"name": "Brendan Zabarauskas", "email": "bjzaba@yahoo.com.au", "date": "2014-03-23T00:34:07Z"}, "committer": {"name": "Brendan Zabarauskas", "email": "bjzaba@yahoo.com.au", "date": "2014-04-30T01:50:31Z"}, "message": "Document how generated bitflags can be extended with type and trait implementations", "tree": {"sha": "b0862f3726a600c1acf3d2f0e55550eb23679822", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b0862f3726a600c1acf3d2f0e55550eb23679822"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a3d9980b25a239da612df9f8a38dec95f57adf4a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a3d9980b25a239da612df9f8a38dec95f57adf4a", "html_url": "https://github.com/rust-lang/rust/commit/a3d9980b25a239da612df9f8a38dec95f57adf4a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a3d9980b25a239da612df9f8a38dec95f57adf4a/comments", "author": {"login": "brendanzab", "id": 695077, "node_id": "MDQ6VXNlcjY5NTA3Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/695077?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brendanzab", "html_url": "https://github.com/brendanzab", "followers_url": "https://api.github.com/users/brendanzab/followers", "following_url": "https://api.github.com/users/brendanzab/following{/other_user}", "gists_url": "https://api.github.com/users/brendanzab/gists{/gist_id}", "starred_url": "https://api.github.com/users/brendanzab/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brendanzab/subscriptions", "organizations_url": "https://api.github.com/users/brendanzab/orgs", "repos_url": "https://api.github.com/users/brendanzab/repos", "events_url": "https://api.github.com/users/brendanzab/events{/privacy}", "received_events_url": "https://api.github.com/users/brendanzab/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brendanzab", "id": 695077, "node_id": "MDQ6VXNlcjY5NTA3Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/695077?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brendanzab", "html_url": "https://github.com/brendanzab", "followers_url": "https://api.github.com/users/brendanzab/followers", "following_url": "https://api.github.com/users/brendanzab/following{/other_user}", "gists_url": "https://api.github.com/users/brendanzab/gists{/gist_id}", "starred_url": "https://api.github.com/users/brendanzab/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brendanzab/subscriptions", "organizations_url": "https://api.github.com/users/brendanzab/orgs", "repos_url": "https://api.github.com/users/brendanzab/repos", "events_url": "https://api.github.com/users/brendanzab/events{/privacy}", "received_events_url": "https://api.github.com/users/brendanzab/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8b58981871660bd83454878af50de8157ed3ea5e", "url": "https://api.github.com/repos/rust-lang/rust/commits/8b58981871660bd83454878af50de8157ed3ea5e", "html_url": "https://github.com/rust-lang/rust/commit/8b58981871660bd83454878af50de8157ed3ea5e"}], "stats": {"total": 34, "additions": 34, "deletions": 0}, "files": [{"sha": "22b98faf6bf0bc66beab35ce5ea93ac47d9665ee", "filename": "src/libcollections/bitflags.rs", "status": "modified", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/rust-lang/rust/blob/a3d9980b25a239da612df9f8a38dec95f57adf4a/src%2Flibcollections%2Fbitflags.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a3d9980b25a239da612df9f8a38dec95f57adf4a/src%2Flibcollections%2Fbitflags.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcollections%2Fbitflags.rs?ref=a3d9980b25a239da612df9f8a38dec95f57adf4a", "patch": "@@ -38,6 +38,40 @@\n //! }\n //! ~~~\n //!\n+//! The generated `struct`s can also be extended with type and trait implementations:\n+//!\n+//! ~~~rust\n+//! #[feature(phase)];\n+//! #[phase(syntax)] extern crate collections;\n+//!\n+//! use std::fmt;\n+//!\n+//! bitflags!(Flags: u32 {\n+//!     FlagA   = 0x00000001,\n+//!     FlagB   = 0x00000010\n+//! })\n+//!\n+//! impl Flags {\n+//!     pub fn clear(&mut self) {\n+//!         self.bits = 0;  // The `bits` field can be accessed from within the\n+//!                         // same module where the `bitflags!` macro was invoked.\n+//!     }\n+//! }\n+//!\n+//! impl fmt::Show for Flags {\n+//!     fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {\n+//!         write!(f.buf, \"hi!\")\n+//!     }\n+//! }\n+//!\n+//! fn main() {\n+//!     let mut flags = FlagA | FlagB;\n+//!     flags.clear();\n+//!     assert!(flags.is_empty());\n+//!     assert_eq!(format!(\"{}\", flags), ~\"hi!\");\n+//! }\n+//! ~~~\n+//!\n //! # Operators\n //!\n //! The following operator traits are implemented for the generated `struct`:"}]}