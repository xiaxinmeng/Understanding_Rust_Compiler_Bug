{"sha": "7b3b0bad1fe992441ae1c954ac63528d600a5ce4", "node_id": "MDY6Q29tbWl0NzI0NzEyOjdiM2IwYmFkMWZlOTkyNDQxYWUxYzk1NGFjNjM1MjhkNjAwYTVjZTQ=", "commit": {"author": {"name": "Kaelin Laundry", "email": "wasabifan@outlook.com", "date": "2020-12-29T03:33:16Z"}, "committer": {"name": "Kaelin Laundry", "email": "wasabifan@outlook.com", "date": "2020-12-29T03:33:16Z"}, "message": "Pass --all-targets to \"cargo check\"", "tree": {"sha": "076c127dc964b1438e6f855b730d01f64da271c5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/076c127dc964b1438e6f855b730d01f64da271c5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7b3b0bad1fe992441ae1c954ac63528d600a5ce4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7b3b0bad1fe992441ae1c954ac63528d600a5ce4", "html_url": "https://github.com/rust-lang/rust/commit/7b3b0bad1fe992441ae1c954ac63528d600a5ce4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7b3b0bad1fe992441ae1c954ac63528d600a5ce4/comments", "author": {"login": "WasabiFan", "id": 3310349, "node_id": "MDQ6VXNlcjMzMTAzNDk=", "avatar_url": "https://avatars.githubusercontent.com/u/3310349?v=4", "gravatar_id": "", "url": "https://api.github.com/users/WasabiFan", "html_url": "https://github.com/WasabiFan", "followers_url": "https://api.github.com/users/WasabiFan/followers", "following_url": "https://api.github.com/users/WasabiFan/following{/other_user}", "gists_url": "https://api.github.com/users/WasabiFan/gists{/gist_id}", "starred_url": "https://api.github.com/users/WasabiFan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/WasabiFan/subscriptions", "organizations_url": "https://api.github.com/users/WasabiFan/orgs", "repos_url": "https://api.github.com/users/WasabiFan/repos", "events_url": "https://api.github.com/users/WasabiFan/events{/privacy}", "received_events_url": "https://api.github.com/users/WasabiFan/received_events", "type": "User", "site_admin": false}, "committer": {"login": "WasabiFan", "id": 3310349, "node_id": "MDQ6VXNlcjMzMTAzNDk=", "avatar_url": "https://avatars.githubusercontent.com/u/3310349?v=4", "gravatar_id": "", "url": "https://api.github.com/users/WasabiFan", "html_url": "https://github.com/WasabiFan", "followers_url": "https://api.github.com/users/WasabiFan/followers", "following_url": "https://api.github.com/users/WasabiFan/following{/other_user}", "gists_url": "https://api.github.com/users/WasabiFan/gists{/gist_id}", "starred_url": "https://api.github.com/users/WasabiFan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/WasabiFan/subscriptions", "organizations_url": "https://api.github.com/users/WasabiFan/orgs", "repos_url": "https://api.github.com/users/WasabiFan/repos", "events_url": "https://api.github.com/users/WasabiFan/events{/privacy}", "received_events_url": "https://api.github.com/users/WasabiFan/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "77ad203a719be074e81485af7a4fb02fac6cbf61", "url": "https://api.github.com/repos/rust-lang/rust/commits/77ad203a719be074e81485af7a4fb02fac6cbf61", "html_url": "https://github.com/rust-lang/rust/commit/77ad203a719be074e81485af7a4fb02fac6cbf61"}], "stats": {"total": 5, "additions": 5, "deletions": 0}, "files": [{"sha": "3e0b40cbc2281799cb941d08dc1e789bf7830a51", "filename": "crates/project_model/src/cargo_workspace.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/7b3b0bad1fe992441ae1c954ac63528d600a5ce4/crates%2Fproject_model%2Fsrc%2Fcargo_workspace.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7b3b0bad1fe992441ae1c954ac63528d600a5ce4/crates%2Fproject_model%2Fsrc%2Fcargo_workspace.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fproject_model%2Fsrc%2Fcargo_workspace.rs?ref=7b3b0bad1fe992441ae1c954ac63528d600a5ce4", "patch": "@@ -334,6 +334,11 @@ pub(crate) fn load_extern_resources(\n     let mut cmd = Command::new(toolchain::cargo());\n     cmd.args(&[\"check\", \"--message-format=json\", \"--manifest-path\"]).arg(cargo_toml);\n \n+    // --all-targets includes tests, benches and examples in addition to the\n+    // default lib and bins. This is an independent concept from the --targets\n+    // flag below.\n+    cmd.arg(\"--all-targets\");\n+\n     if let Some(target) = &cargo_features.target {\n         cmd.args(&[\"--target\", target]);\n     }"}]}