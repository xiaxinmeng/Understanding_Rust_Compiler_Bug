{"sha": "6345e4a1bcee38c42ee5817426beda78f43431ca", "node_id": "MDY6Q29tbWl0NzI0NzEyOjYzNDVlNGExYmNlZTM4YzQyZWU1ODE3NDI2YmVkYTc4ZjQzNDMxY2E=", "commit": {"author": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2020-07-03T14:52:56Z"}, "committer": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2020-07-03T14:52:56Z"}, "message": "Implement variant_count intrinisic", "tree": {"sha": "95db9fbd805b7a0644727266af66383a7125b44e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/95db9fbd805b7a0644727266af66383a7125b44e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6345e4a1bcee38c42ee5817426beda78f43431ca", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6345e4a1bcee38c42ee5817426beda78f43431ca", "html_url": "https://github.com/rust-lang/rust/commit/6345e4a1bcee38c42ee5817426beda78f43431ca", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6345e4a1bcee38c42ee5817426beda78f43431ca/comments", "author": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "699da394ccd44de318da444bae28e472882ca830", "url": "https://api.github.com/repos/rust-lang/rust/commits/699da394ccd44de318da444bae28e472882ca830", "html_url": "https://github.com/rust-lang/rust/commit/699da394ccd44de318da444bae28e472882ca830"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "d93da0fb0873a556b11b9c9c91c293ec86bfce5d", "filename": "src/intrinsics/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6345e4a1bcee38c42ee5817426beda78f43431ca/src%2Fintrinsics%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6345e4a1bcee38c42ee5817426beda78f43431ca/src%2Fintrinsics%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fintrinsics%2Fmod.rs?ref=6345e4a1bcee38c42ee5817426beda78f43431ca", "patch": "@@ -838,7 +838,7 @@ pub(crate) fn codegen_intrinsic_call<'tcx>(\n             dest.write_cvalue(fx, val);\n         };\n \n-        size_of | pref_align_of | min_align_of | needs_drop | type_id | type_name, () {\n+        size_of | pref_align_of | min_align_of | needs_drop | type_id | type_name | variant_count, () {\n             let const_val =\n                 fx.tcx.const_eval_instance(ParamEnv::reveal_all(), instance, None).unwrap();\n             let val = crate::constant::trans_const_value("}]}