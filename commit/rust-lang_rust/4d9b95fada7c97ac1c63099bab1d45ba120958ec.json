{"sha": "4d9b95fada7c97ac1c63099bab1d45ba120958ec", "node_id": "MDY6Q29tbWl0NzI0NzEyOjRkOWI5NWZhZGE3Yzk3YWMxYzYzMDk5YmFiMWQ0NWJhMTIwOTU4ZWM=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2013-11-11T16:56:18Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2013-11-11T16:56:18Z"}, "message": "auto merge of #10417 : cmr/rust/vec_overflow, r=huonw\n\nFixes #10271", "tree": {"sha": "eb5403a0e63e24a12bd2bc9590e386afaccbd3d2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/eb5403a0e63e24a12bd2bc9590e386afaccbd3d2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4d9b95fada7c97ac1c63099bab1d45ba120958ec", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4d9b95fada7c97ac1c63099bab1d45ba120958ec", "html_url": "https://github.com/rust-lang/rust/commit/4d9b95fada7c97ac1c63099bab1d45ba120958ec", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4d9b95fada7c97ac1c63099bab1d45ba120958ec/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4059b5c4b3b8a57a645982b0770d25f0283dfb06", "url": "https://api.github.com/repos/rust-lang/rust/commits/4059b5c4b3b8a57a645982b0770d25f0283dfb06", "html_url": "https://github.com/rust-lang/rust/commit/4059b5c4b3b8a57a645982b0770d25f0283dfb06"}, {"sha": "a46b2b8e7aafd23a4d3850d4de6653e363fd0813", "url": "https://api.github.com/repos/rust-lang/rust/commits/a46b2b8e7aafd23a4d3850d4de6653e363fd0813", "html_url": "https://github.com/rust-lang/rust/commit/a46b2b8e7aafd23a4d3850d4de6653e363fd0813"}], "stats": {"total": 6, "additions": 5, "deletions": 1}, "files": [{"sha": "c2aa4c234d1b72f47a76c5dd495e59d8992a8938", "filename": "src/libstd/vec.rs", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/4d9b95fada7c97ac1c63099bab1d45ba120958ec/src%2Flibstd%2Fvec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4d9b95fada7c97ac1c63099bab1d45ba120958ec/src%2Flibstd%2Fvec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fvec.rs?ref=4d9b95fada7c97ac1c63099bab1d45ba120958ec", "patch": "@@ -186,7 +186,11 @@ pub fn with_capacity<T>(capacity: uint) -> ~[T] {\n             vec\n         } else {\n             let alloc = capacity * mem::nonzero_size_of::<T>();\n-            let ptr = malloc_raw(alloc + mem::size_of::<Vec<()>>()) as *mut Vec<()>;\n+            let size = alloc + mem::size_of::<Vec<()>>();\n+            if alloc / mem::nonzero_size_of::<T>() != capacity || size < alloc {\n+                fail!(\"vector size is too large: {}\", capacity);\n+            }\n+            let ptr = malloc_raw(size) as *mut Vec<()>;\n             (*ptr).alloc = alloc;\n             (*ptr).fill = 0;\n             cast::transmute(ptr)"}]}