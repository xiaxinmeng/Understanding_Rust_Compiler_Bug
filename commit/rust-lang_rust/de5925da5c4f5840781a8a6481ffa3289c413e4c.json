{"sha": "de5925da5c4f5840781a8a6481ffa3289c413e4c", "node_id": "C_kwDOAAsO6NoAKGRlNTkyNWRhNWM0ZjU4NDA3ODFhOGE2NDgxZmZhMzI4OWM0MTNlNGM", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2022-03-23T14:11:42Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-03-23T14:11:42Z"}, "message": "Merge #11801\n\n11801: fix: avoid returning `None` from `Span::join` to fix some proc macros r=jonas-schievink a=jonas-schievink\n\nSome proc macros, notably rocket, `.unwrap()` the result of `Span::join` (and correctly so, it should never be `None`). We don't have a proper implementation of that API, so we always returned `None`. This changes our stub impl to return the first span instead.\r\n\r\nDoes not fully fix rocket's macros, they need other stuff to work too.\r\n\r\nbors r+\n\nCo-authored-by: Jonas Schievink <jonas.schievink@ferrous-systems.com>", "tree": {"sha": "64718b0b47787a707aaa71076175a24f882556fd", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/64718b0b47787a707aaa71076175a24f882556fd"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/de5925da5c4f5840781a8a6481ffa3289c413e4c", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJiOyqeCRBK7hj4Ov3rIwAAguUIAKYBw2lVQiwzjsIOsBZ8oU0y\ntq164pDUMhd9DRGbmiWVgH+eW4kST3spFGdc4C7IQFKdO1kDkiOH21eAJF3cNtzc\nVO74DHy56o/r9MCtjXURZmfkq0coKahkMpo4GRCMfsHyunJvo42JVkoEjKXKm0Yv\naYzI1P66+mJM4Qq89FFzAeNiVwNLxmGM+2RLhj5SySKaBD+E5Yrsl05Q6hsaYBKm\nO2Do+vFm0Ifsqry/M+DSxBTWjCPS5IOComiZVnAYfljNvUzpSVfqEyp9pBrtYjFl\ntCdPgPHfjfx7BBd3bKebBKhP9Kl/z3wX7O+czAn0qz0Ru6LQ0NK62rlahBCZ1lE=\n=25uf\n-----END PGP SIGNATURE-----\n", "payload": "tree 64718b0b47787a707aaa71076175a24f882556fd\nparent 83b4329c6f5914cd5aba7ef51f8cc2aea10522d9\nparent 1e2a4c1bdbc72b6cf5cc894d96fdbf8d5709e44a\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1648044702 +0000\ncommitter GitHub <noreply@github.com> 1648044702 +0000\n\nMerge #11801\n\n11801: fix: avoid returning `None` from `Span::join` to fix some proc macros r=jonas-schievink a=jonas-schievink\n\nSome proc macros, notably rocket, `.unwrap()` the result of `Span::join` (and correctly so, it should never be `None`). We don't have a proper implementation of that API, so we always returned `None`. This changes our stub impl to return the first span instead.\r\n\r\nDoes not fully fix rocket's macros, they need other stuff to work too.\r\n\r\nbors r+\n\nCo-authored-by: Jonas Schievink <jonas.schievink@ferrous-systems.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/de5925da5c4f5840781a8a6481ffa3289c413e4c", "html_url": "https://github.com/rust-lang/rust/commit/de5925da5c4f5840781a8a6481ffa3289c413e4c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/de5925da5c4f5840781a8a6481ffa3289c413e4c/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "83b4329c6f5914cd5aba7ef51f8cc2aea10522d9", "url": "https://api.github.com/repos/rust-lang/rust/commits/83b4329c6f5914cd5aba7ef51f8cc2aea10522d9", "html_url": "https://github.com/rust-lang/rust/commit/83b4329c6f5914cd5aba7ef51f8cc2aea10522d9"}, {"sha": "1e2a4c1bdbc72b6cf5cc894d96fdbf8d5709e44a", "url": "https://api.github.com/repos/rust-lang/rust/commits/1e2a4c1bdbc72b6cf5cc894d96fdbf8d5709e44a", "html_url": "https://github.com/rust-lang/rust/commit/1e2a4c1bdbc72b6cf5cc894d96fdbf8d5709e44a"}], "stats": {"total": 25, "additions": 15, "deletions": 10}, "files": [{"sha": "4dc506e0f19f0d6cee70ce5bfd4d06217eebefa4", "filename": "crates/proc_macro_srv/src/abis/abi_1_47/rustc_server.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/de5925da5c4f5840781a8a6481ffa3289c413e4c/crates%2Fproc_macro_srv%2Fsrc%2Fabis%2Fabi_1_47%2Frustc_server.rs", "raw_url": "https://github.com/rust-lang/rust/raw/de5925da5c4f5840781a8a6481ffa3289c413e4c/crates%2Fproc_macro_srv%2Fsrc%2Fabis%2Fabi_1_47%2Frustc_server.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fproc_macro_srv%2Fsrc%2Fabis%2Fabi_1_47%2Frustc_server.rs?ref=de5925da5c4f5840781a8a6481ffa3289c413e4c", "patch": "@@ -662,8 +662,9 @@ impl server::Span for Rustc {\n         // FIXME handle span\n         LineColumn { line: 0, column: 0 }\n     }\n-    fn join(&mut self, _first: Self::Span, _second: Self::Span) -> Option<Self::Span> {\n-        None\n+    fn join(&mut self, first: Self::Span, _second: Self::Span) -> Option<Self::Span> {\n+        // Just return the first span again, because some macros will unwrap the result.\n+        Some(first)\n     }\n     fn resolved_at(&mut self, _span: Self::Span, _at: Self::Span) -> Self::Span {\n         // FIXME handle span"}, {"sha": "7b333836b1108965e3c5bdcc345f8c25b5c1b812", "filename": "crates/proc_macro_srv/src/abis/abi_1_54/rustc_server.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/de5925da5c4f5840781a8a6481ffa3289c413e4c/crates%2Fproc_macro_srv%2Fsrc%2Fabis%2Fabi_1_54%2Frustc_server.rs", "raw_url": "https://github.com/rust-lang/rust/raw/de5925da5c4f5840781a8a6481ffa3289c413e4c/crates%2Fproc_macro_srv%2Fsrc%2Fabis%2Fabi_1_54%2Frustc_server.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fproc_macro_srv%2Fsrc%2Fabis%2Fabi_1_54%2Frustc_server.rs?ref=de5925da5c4f5840781a8a6481ffa3289c413e4c", "patch": "@@ -665,8 +665,9 @@ impl server::Span for Rustc {\n         // FIXME handle span\n         LineColumn { line: 0, column: 0 }\n     }\n-    fn join(&mut self, _first: Self::Span, _second: Self::Span) -> Option<Self::Span> {\n-        None\n+    fn join(&mut self, first: Self::Span, _second: Self::Span) -> Option<Self::Span> {\n+        // Just return the first span again, because some macros will unwrap the result.\n+        Some(first)\n     }\n     fn resolved_at(&mut self, _span: Self::Span, _at: Self::Span) -> Self::Span {\n         // FIXME handle span"}, {"sha": "8517eddf991797d4915f33d0c1715451679ae410", "filename": "crates/proc_macro_srv/src/abis/abi_1_56/rustc_server.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/de5925da5c4f5840781a8a6481ffa3289c413e4c/crates%2Fproc_macro_srv%2Fsrc%2Fabis%2Fabi_1_56%2Frustc_server.rs", "raw_url": "https://github.com/rust-lang/rust/raw/de5925da5c4f5840781a8a6481ffa3289c413e4c/crates%2Fproc_macro_srv%2Fsrc%2Fabis%2Fabi_1_56%2Frustc_server.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fproc_macro_srv%2Fsrc%2Fabis%2Fabi_1_56%2Frustc_server.rs?ref=de5925da5c4f5840781a8a6481ffa3289c413e4c", "patch": "@@ -677,8 +677,9 @@ impl server::Span for Rustc {\n         // FIXME handle span\n         LineColumn { line: 0, column: 0 }\n     }\n-    fn join(&mut self, _first: Self::Span, _second: Self::Span) -> Option<Self::Span> {\n-        None\n+    fn join(&mut self, first: Self::Span, _second: Self::Span) -> Option<Self::Span> {\n+        // Just return the first span again, because some macros will unwrap the result.\n+        Some(first)\n     }\n     fn resolved_at(&mut self, _span: Self::Span, _at: Self::Span) -> Self::Span {\n         // FIXME handle span"}, {"sha": "48597e894c649ca64fca0633d0566af668464bc2", "filename": "crates/proc_macro_srv/src/abis/abi_1_57/rustc_server.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/de5925da5c4f5840781a8a6481ffa3289c413e4c/crates%2Fproc_macro_srv%2Fsrc%2Fabis%2Fabi_1_57%2Frustc_server.rs", "raw_url": "https://github.com/rust-lang/rust/raw/de5925da5c4f5840781a8a6481ffa3289c413e4c/crates%2Fproc_macro_srv%2Fsrc%2Fabis%2Fabi_1_57%2Frustc_server.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fproc_macro_srv%2Fsrc%2Fabis%2Fabi_1_57%2Frustc_server.rs?ref=de5925da5c4f5840781a8a6481ffa3289c413e4c", "patch": "@@ -677,8 +677,9 @@ impl server::Span for Rustc {\n         // FIXME handle span\n         LineColumn { line: 0, column: 0 }\n     }\n-    fn join(&mut self, _first: Self::Span, _second: Self::Span) -> Option<Self::Span> {\n-        None\n+    fn join(&mut self, first: Self::Span, _second: Self::Span) -> Option<Self::Span> {\n+        // Just return the first span again, because some macros will unwrap the result.\n+        Some(first)\n     }\n     fn resolved_at(&mut self, _span: Self::Span, _at: Self::Span) -> Self::Span {\n         // FIXME handle span"}, {"sha": "6c57ac92dc6757b146939af71cfda31289bf7441", "filename": "crates/proc_macro_srv/src/abis/abi_1_58/rustc_server.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/de5925da5c4f5840781a8a6481ffa3289c413e4c/crates%2Fproc_macro_srv%2Fsrc%2Fabis%2Fabi_1_58%2Frustc_server.rs", "raw_url": "https://github.com/rust-lang/rust/raw/de5925da5c4f5840781a8a6481ffa3289c413e4c/crates%2Fproc_macro_srv%2Fsrc%2Fabis%2Fabi_1_58%2Frustc_server.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fproc_macro_srv%2Fsrc%2Fabis%2Fabi_1_58%2Frustc_server.rs?ref=de5925da5c4f5840781a8a6481ffa3289c413e4c", "patch": "@@ -681,8 +681,9 @@ impl server::Span for Rustc {\n         // FIXME handle span\n         LineColumn { line: 0, column: 0 }\n     }\n-    fn join(&mut self, _first: Self::Span, _second: Self::Span) -> Option<Self::Span> {\n-        None\n+    fn join(&mut self, first: Self::Span, _second: Self::Span) -> Option<Self::Span> {\n+        // Just return the first span again, because some macros will unwrap the result.\n+        Some(first)\n     }\n     fn resolved_at(&mut self, _span: Self::Span, _at: Self::Span) -> Self::Span {\n         // FIXME handle span"}]}