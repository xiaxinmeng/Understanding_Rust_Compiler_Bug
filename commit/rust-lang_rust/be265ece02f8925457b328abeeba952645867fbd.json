{"sha": "be265ece02f8925457b328abeeba952645867fbd", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJlMjY1ZWNlMDJmODkyNTQ1N2IzMjhhYmVlYmE5NTI2NDU4NjdmYmQ=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-06-27T16:21:26Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-06-27T17:22:31Z"}, "message": "Add example expect test for goto definition", "tree": {"sha": "3952d97456359f25b52774e08d692ffb16a67b01", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3952d97456359f25b52774e08d692ffb16a67b01"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/be265ece02f8925457b328abeeba952645867fbd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/be265ece02f8925457b328abeeba952645867fbd", "html_url": "https://github.com/rust-lang/rust/commit/be265ece02f8925457b328abeeba952645867fbd", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/be265ece02f8925457b328abeeba952645867fbd/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "03c5a6690d943e48ac5b5464c2ac2fd054ea6251", "url": "https://api.github.com/repos/rust-lang/rust/commits/03c5a6690d943e48ac5b5464c2ac2fd054ea6251", "html_url": "https://github.com/rust-lang/rust/commit/03c5a6690d943e48ac5b5464c2ac2fd054ea6251"}], "stats": {"total": 43, "additions": 35, "deletions": 8}, "files": [{"sha": "de7337be136735a4d6e207f92b46111644d308a4", "filename": "Cargo.lock", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/be265ece02f8925457b328abeeba952645867fbd/Cargo.lock", "raw_url": "https://github.com/rust-lang/rust/raw/be265ece02f8925457b328abeeba952645867fbd/Cargo.lock", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Cargo.lock?ref=be265ece02f8925457b328abeeba952645867fbd", "patch": "@@ -1130,6 +1130,7 @@ name = \"ra_ide\"\n version = \"0.1.0\"\n dependencies = [\n  \"either\",\n+ \"expect\",\n  \"indexmap\",\n  \"insta\",\n  \"itertools\","}, {"sha": "8e889230939840de52b474723c48756a04d0db95", "filename": "crates/ra_ide/Cargo.toml", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/be265ece02f8925457b328abeeba952645867fbd/crates%2Fra_ide%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/be265ece02f8925457b328abeeba952645867fbd/crates%2Fra_ide%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2FCargo.toml?ref=be265ece02f8925457b328abeeba952645867fbd", "patch": "@@ -28,6 +28,7 @@ ra_cfg = { path = \"../ra_cfg\" }\n ra_fmt = { path = \"../ra_fmt\" }\n ra_prof = { path = \"../ra_prof\" }\n test_utils = { path = \"../test_utils\" }\n+expect = { path = \"../expect\" }\n ra_assists = { path = \"../ra_assists\" }\n ra_ssr = { path = \"../ra_ssr\" }\n "}, {"sha": "969d5e0ffc7f76870967adeeee444f148e94e9c9", "filename": "crates/ra_ide/src/goto_definition.rs", "status": "modified", "additions": 33, "deletions": 8, "changes": 41, "blob_url": "https://github.com/rust-lang/rust/blob/be265ece02f8925457b328abeeba952645867fbd/crates%2Fra_ide%2Fsrc%2Fgoto_definition.rs", "raw_url": "https://github.com/rust-lang/rust/raw/be265ece02f8925457b328abeeba952645867fbd/crates%2Fra_ide%2Fsrc%2Fgoto_definition.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fgoto_definition.rs?ref=be265ece02f8925457b328abeeba952645867fbd", "patch": "@@ -103,6 +103,7 @@ pub(crate) fn reference_definition(\n \n #[cfg(test)]\n mod tests {\n+    use expect::{expect, Expect};\n     use test_utils::assert_eq_text;\n \n     use crate::mock_analysis::analysis_and_position;\n@@ -142,16 +143,40 @@ mod tests {\n         nav.assert_match(expected);\n     }\n \n+    fn check(ra_fixture: &str, expect: Expect) {\n+        let (analysis, pos) = analysis_and_position(ra_fixture);\n+\n+        let mut navs = analysis.goto_definition(pos).unwrap().unwrap().info;\n+        if navs.len() == 0 {\n+            panic!(\"unresolved reference\")\n+        }\n+        assert_eq!(navs.len(), 1);\n+\n+        let nav = navs.pop().unwrap();\n+        let file_text = analysis.file_text(nav.file_id()).unwrap();\n+\n+        let mut actual = nav.debug_render();\n+        actual += \"\\n\";\n+        actual += &file_text[nav.full_range()].to_string();\n+        if let Some(focus) = nav.focus_range() {\n+            actual += \"|\";\n+            actual += &file_text[focus];\n+            actual += \"\\n\";\n+        }\n+        expect.assert_eq(&actual);\n+    }\n+\n     #[test]\n     fn goto_def_in_items() {\n-        check_goto(\n-            \"\n-            //- /lib.rs\n-            struct Foo;\n-            enum E { X(Foo<|>) }\n-            \",\n-            \"Foo STRUCT_DEF FileId(1) 0..11 7..10\",\n-            \"struct Foo;|Foo\",\n+        check(\n+            r#\"\n+struct Foo;\n+enum E { X(Foo<|>) }\n+\"#,\n+            expect![[r#\"\n+                Foo STRUCT_DEF FileId(1) 0..11 7..10\n+                struct Foo;|Foo\n+            \"#]],\n         );\n     }\n "}]}