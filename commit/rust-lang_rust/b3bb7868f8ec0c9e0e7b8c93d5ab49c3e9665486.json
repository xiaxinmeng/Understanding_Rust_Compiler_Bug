{"sha": "b3bb7868f8ec0c9e0e7b8c93d5ab49c3e9665486", "node_id": "MDY6Q29tbWl0NzI0NzEyOmIzYmI3ODY4ZjhlYzBjOWUwZTdiOGM5M2Q1YWI0OWMzZTk2NjU0ODY=", "commit": {"author": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2021-09-13T19:20:38Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-09-13T19:20:38Z"}, "message": "Rollup merge of #88033 - GuillaumeGomez:jump-to-def-primitive, r=jyn514\n\nAdd links for primitives in \"jump to definition\" feature\n\nFollow-up of #84176.\n\nI created a function `primitive_from_str` which is code that was originally in `collect_intra_doc_links::resolve_primitive` to prevent code duplication.\n\nI also created the `primitive_link_url` function which is somewhat similar to `primitive_link` but too much different to merge both of them.\n\nr? ``@jyn514``", "tree": {"sha": "af7e5af67d0e350f4f264925a59265fc4068351f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/af7e5af67d0e350f4f264925a59265fc4068351f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b3bb7868f8ec0c9e0e7b8c93d5ab49c3e9665486", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJhP6SGCRBK7hj4Ov3rIwAAt24IAFFtdL9gChCjnX3MVSQTxsQ3\nDD+iJzqo62IQr2f5+Wber5GK6Y7N2A+Jl44xPNNniBQ+8gWctPPu4oHNxDMLpqA2\nrCYEmKSPJf1m5jMd9gOAu4Ir7qAdQkiJvmADVOw+XoD8R1ri7d/6AW3D1xhZSyds\n1Im9yUlsflCuoAmYUor47BLhZHYzmx7mPBFF5uCqUeAGm/AW4gbU7k5YR9yYxxgz\nnbvOv4gZ1/KVKCEvGrSfaIfip8FC0soWaqpztaYaZfw0Xuz/hkWlbQbvow3Jo7oH\n3x00XnpoK9Ou2ZFJ+OSgKzaMOv7xv4KBj6FwR2lbU3DBmEJM18KQhJ5YciO7BLo=\n=arvf\n-----END PGP SIGNATURE-----\n", "payload": "tree af7e5af67d0e350f4f264925a59265fc4068351f\nparent b0ee4951f0289aa31e54b101c5706f220315e197\nparent d73c0a3d6905a1c6cba7a78c2a5dd7b922f39a8f\nauthor Guillaume Gomez <guillaume1.gomez@gmail.com> 1631560838 +0200\ncommitter GitHub <noreply@github.com> 1631560838 +0200\n\nRollup merge of #88033 - GuillaumeGomez:jump-to-def-primitive, r=jyn514\n\nAdd links for primitives in \"jump to definition\" feature\n\nFollow-up of #84176.\n\nI created a function `primitive_from_str` which is code that was originally in `collect_intra_doc_links::resolve_primitive` to prevent code duplication.\n\nI also created the `primitive_link_url` function which is somewhat similar to `primitive_link` but too much different to merge both of them.\n\nr? ``@jyn514``\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b3bb7868f8ec0c9e0e7b8c93d5ab49c3e9665486", "html_url": "https://github.com/rust-lang/rust/commit/b3bb7868f8ec0c9e0e7b8c93d5ab49c3e9665486", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b3bb7868f8ec0c9e0e7b8c93d5ab49c3e9665486/comments", "author": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b0ee4951f0289aa31e54b101c5706f220315e197", "url": "https://api.github.com/repos/rust-lang/rust/commits/b0ee4951f0289aa31e54b101c5706f220315e197", "html_url": "https://github.com/rust-lang/rust/commit/b0ee4951f0289aa31e54b101c5706f220315e197"}, {"sha": "d73c0a3d6905a1c6cba7a78c2a5dd7b922f39a8f", "url": "https://api.github.com/repos/rust-lang/rust/commits/d73c0a3d6905a1c6cba7a78c2a5dd7b922f39a8f", "html_url": "https://github.com/rust-lang/rust/commit/d73c0a3d6905a1c6cba7a78c2a5dd7b922f39a8f"}], "stats": {"total": 51, "additions": 43, "deletions": 8}, "files": [{"sha": "ece3ee640e2a69a6f8193a4f2672032b87b8097c", "filename": "src/librustdoc/html/highlight.rs", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/b3bb7868f8ec0c9e0e7b8c93d5ab49c3e9665486/src%2Flibrustdoc%2Fhtml%2Fhighlight.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b3bb7868f8ec0c9e0e7b8c93d5ab49c3e9665486/src%2Flibrustdoc%2Fhtml%2Fhighlight.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fhighlight.rs?ref=b3bb7868f8ec0c9e0e7b8c93d5ab49c3e9665486", "patch": "@@ -5,6 +5,7 @@\n //!\n //! Use the `render_with_highlighting` to highlight some rust code.\n \n+use crate::clean::PrimitiveType;\n use crate::html::escape::Escape;\n use crate::html::render::Context;\n \n@@ -584,6 +585,13 @@ fn string<T: Display>(\n                             .ok()\n                             .map(|(url, _, _)| url)\n                     }\n+                    LinkFromSrc::Primitive(prim) => format::href_with_root_path(\n+                        PrimitiveType::primitive_locations(context.tcx())[&prim],\n+                        context,\n+                        Some(context_info.root_path),\n+                    )\n+                    .ok()\n+                    .map(|(url, _, _)| url),\n                 }\n             })\n         {"}, {"sha": "d517f3ac0e3a9e1a16db7d886a31dc263bedc90b", "filename": "src/librustdoc/html/render/span_map.rs", "status": "modified", "additions": 11, "deletions": 7, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/b3bb7868f8ec0c9e0e7b8c93d5ab49c3e9665486/src%2Flibrustdoc%2Fhtml%2Frender%2Fspan_map.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b3bb7868f8ec0c9e0e7b8c93d5ab49c3e9665486/src%2Flibrustdoc%2Fhtml%2Frender%2Fspan_map.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Frender%2Fspan_map.rs?ref=b3bb7868f8ec0c9e0e7b8c93d5ab49c3e9665486", "patch": "@@ -1,4 +1,4 @@\n-use crate::clean;\n+use crate::clean::{self, PrimitiveType};\n use crate::html::sources;\n \n use rustc_data_structures::fx::FxHashMap;\n@@ -22,6 +22,7 @@ use std::path::{Path, PathBuf};\n crate enum LinkFromSrc {\n     Local(clean::Span),\n     External(DefId),\n+    Primitive(PrimitiveType),\n }\n \n /// This function will do at most two things:\n@@ -73,17 +74,20 @@ impl<'tcx> SpanMapVisitor<'tcx> {\n                 Some(def_id)\n             }\n             Res::Local(_) => None,\n+            Res::PrimTy(p) => {\n+                // FIXME: Doesn't handle \"path-like\" primitives like arrays or tuples.\n+                let span = path_span.unwrap_or(path.span);\n+                self.matches.insert(span, LinkFromSrc::Primitive(PrimitiveType::from(p)));\n+                return;\n+            }\n             Res::Err => return,\n             _ => return,\n         };\n         if let Some(span) = self.tcx.hir().res_span(path.res) {\n-            self.matches.insert(\n-                path_span.unwrap_or_else(|| path.span),\n-                LinkFromSrc::Local(clean::Span::new(span)),\n-            );\n-        } else if let Some(def_id) = info {\n             self.matches\n-                .insert(path_span.unwrap_or_else(|| path.span), LinkFromSrc::External(def_id));\n+                .insert(path_span.unwrap_or(path.span), LinkFromSrc::Local(clean::Span::new(span)));\n+        } else if let Some(def_id) = info {\n+            self.matches.insert(path_span.unwrap_or(path.span), LinkFromSrc::External(def_id));\n         }\n     }\n }"}, {"sha": "b129ceb5b7302ebd4d611d50684a7aadbba3fc6e", "filename": "src/test/rustdoc/check-source-code-urls-to-def-std.rs", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/b3bb7868f8ec0c9e0e7b8c93d5ab49c3e9665486/src%2Ftest%2Frustdoc%2Fcheck-source-code-urls-to-def-std.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b3bb7868f8ec0c9e0e7b8c93d5ab49c3e9665486/src%2Ftest%2Frustdoc%2Fcheck-source-code-urls-to-def-std.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fcheck-source-code-urls-to-def-std.rs?ref=b3bb7868f8ec0c9e0e7b8c93d5ab49c3e9665486", "patch": "@@ -0,0 +1,17 @@\n+// compile-flags: -Zunstable-options --generate-link-to-definition\n+\n+#![crate_name = \"foo\"]\n+\n+// @has 'src/foo/check-source-code-urls-to-def-std.rs.html'\n+\n+fn babar() {}\n+\n+// @has - '//a[@href=\"{{channel}}/std/primitive.u32.html\"]' 'u32'\n+// @has - '//a[@href=\"{{channel}}/std/primitive.str.html\"]' 'str'\n+// @has - '//a[@href=\"{{channel}}/std/primitive.bool.html\"]' 'bool'\n+// @has - '//a[@href=\"../../src/foo/check-source-code-urls-to-def-std.rs.html#7\"]' 'babar'\n+pub fn foo(a: u32, b: &str, c: String) {\n+    let x = 12;\n+    let y: bool = true;\n+    babar();\n+}"}, {"sha": "0cb8e4230166ff0d2484afd7e8142479938bcce9", "filename": "src/test/rustdoc/check-source-code-urls-to-def.rs", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/b3bb7868f8ec0c9e0e7b8c93d5ab49c3e9665486/src%2Ftest%2Frustdoc%2Fcheck-source-code-urls-to-def.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b3bb7868f8ec0c9e0e7b8c93d5ab49c3e9665486/src%2Ftest%2Frustdoc%2Fcheck-source-code-urls-to-def.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fcheck-source-code-urls-to-def.rs?ref=b3bb7868f8ec0c9e0e7b8c93d5ab49c3e9665486", "patch": "@@ -27,6 +27,8 @@ impl Foo {\n fn babar() {}\n \n // @has - '//a/@href' '/struct.String.html'\n+// @has - '//a/@href' '/primitive.u32.html'\n+// @has - '//a/@href' '/primitive.str.html'\n // @count - '//a[@href=\"../../src/foo/check-source-code-urls-to-def.rs.html#21\"]' 5\n // @has - '//a[@href=\"../../source_code/struct.SourceCode.html\"]' 'source_code::SourceCode'\n pub fn foo(a: u32, b: &str, c: String, d: Foo, e: bar::Bar, f: source_code::SourceCode) {\n@@ -40,5 +42,9 @@ pub fn foo(a: u32, b: &str, c: String, d: Foo, e: bar::Bar, f: source_code::Sour\n \n // @has - '//a[@href=\"../../src/foo/auxiliary/source-code-bar.rs.html#14-16\"]' 'bar::sub::Trait'\n // @has - '//a[@href=\"../../src/foo/auxiliary/source-code-bar.rs.html#14-16\"]' 'Trait'\n-pub fn foo2<T: bar::sub::Trait, V: Trait>(t: &T, v: &V) {\n+pub fn foo2<T: bar::sub::Trait, V: Trait>(t: &T, v: &V, b: bool) {\n }\n+\n+// @has - '//a[@href=\"../../foo/primitive.bool.html\"]' 'bool'\n+#[doc(primitive = \"bool\")]\n+mod whatever {}"}]}