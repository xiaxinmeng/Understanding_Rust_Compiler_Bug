{"sha": "e3b611f61954c565b550a6f6ae42715f56db0d85", "node_id": "MDY6Q29tbWl0NzI0NzEyOmUzYjYxMWY2MTk1NGM1NjViNTUwYTZmNmFlNDI3MTVmNTZkYjBkODU=", "commit": {"author": {"name": "Felix S. Klock II", "email": "pnkfelix@pnkfx.org", "date": "2018-09-18T00:03:54Z"}, "committer": {"name": "Felix S. Klock II", "email": "pnkfelix@pnkfx.org", "date": "2018-09-18T00:06:45Z"}, "message": "Regression test for this particular change.", "tree": {"sha": "06595b03dbb0a6a1ccc819780c835fc0ec698cde", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/06595b03dbb0a6a1ccc819780c835fc0ec698cde"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e3b611f61954c565b550a6f6ae42715f56db0d85", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e3b611f61954c565b550a6f6ae42715f56db0d85", "html_url": "https://github.com/rust-lang/rust/commit/e3b611f61954c565b550a6f6ae42715f56db0d85", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e3b611f61954c565b550a6f6ae42715f56db0d85/comments", "author": {"login": "pnkfelix", "id": 173127, "node_id": "MDQ6VXNlcjE3MzEyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/173127?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pnkfelix", "html_url": "https://github.com/pnkfelix", "followers_url": "https://api.github.com/users/pnkfelix/followers", "following_url": "https://api.github.com/users/pnkfelix/following{/other_user}", "gists_url": "https://api.github.com/users/pnkfelix/gists{/gist_id}", "starred_url": "https://api.github.com/users/pnkfelix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pnkfelix/subscriptions", "organizations_url": "https://api.github.com/users/pnkfelix/orgs", "repos_url": "https://api.github.com/users/pnkfelix/repos", "events_url": "https://api.github.com/users/pnkfelix/events{/privacy}", "received_events_url": "https://api.github.com/users/pnkfelix/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pnkfelix", "id": 173127, "node_id": "MDQ6VXNlcjE3MzEyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/173127?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pnkfelix", "html_url": "https://github.com/pnkfelix", "followers_url": "https://api.github.com/users/pnkfelix/followers", "following_url": "https://api.github.com/users/pnkfelix/following{/other_user}", "gists_url": "https://api.github.com/users/pnkfelix/gists{/gist_id}", "starred_url": "https://api.github.com/users/pnkfelix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pnkfelix/subscriptions", "organizations_url": "https://api.github.com/users/pnkfelix/orgs", "repos_url": "https://api.github.com/users/pnkfelix/repos", "events_url": "https://api.github.com/users/pnkfelix/events{/privacy}", "received_events_url": "https://api.github.com/users/pnkfelix/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "673cd6efbe176e85c1198d9640f457aef2a53071", "url": "https://api.github.com/repos/rust-lang/rust/commits/673cd6efbe176e85c1198d9640f457aef2a53071", "html_url": "https://github.com/rust-lang/rust/commit/673cd6efbe176e85c1198d9640f457aef2a53071"}], "stats": {"total": 94, "additions": 94, "deletions": 0}, "files": [{"sha": "fff73c6d0fa9c360e975388b7d2abd9fb61563e9", "filename": "src/test/ui/nll/issue-52059-report-when-borrow-and-drop-conflict.rs", "status": "added", "additions": 33, "deletions": 0, "changes": 33, "blob_url": "https://github.com/rust-lang/rust/blob/e3b611f61954c565b550a6f6ae42715f56db0d85/src%2Ftest%2Fui%2Fnll%2Fissue-52059-report-when-borrow-and-drop-conflict.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e3b611f61954c565b550a6f6ae42715f56db0d85/src%2Ftest%2Fui%2Fnll%2Fissue-52059-report-when-borrow-and-drop-conflict.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fissue-52059-report-when-borrow-and-drop-conflict.rs?ref=e3b611f61954c565b550a6f6ae42715f56db0d85", "patch": "@@ -0,0 +1,33 @@\n+// rust-lang/rust#52059: Regardless of whether you are moving out of a\n+// Drop type or just introducing an inadvertant alias via a borrow of\n+// one of its fields, it is useful to be reminded of the significance\n+// of the fact that the type implements Drop.\n+\n+#![feature(nll)]\n+#![allow(dead_code)]\n+\n+pub struct S<'a> { url: &'a mut String }\n+\n+impl<'a> Drop for S<'a> { fn drop(&mut self) { } }\n+\n+fn finish_1(s: S) -> &mut String {\n+    s.url\n+}\n+//~^^ ERROR borrow may still be in use when destructor runs\n+\n+fn finish_2(s: S) -> &mut String {\n+    let p = &mut *s.url; p\n+}\n+//~^^ ERROR borrow may still be in use when destructor runs\n+\n+fn finish_3(s: S) -> &mut String {\n+    let p: &mut _ = s.url; p\n+}\n+//~^^ ERROR borrow may still be in use when destructor runs\n+\n+fn finish_4(s: S) -> &mut String {\n+    let p = s.url; p\n+}\n+//~^^ ERROR cannot move out of type `S<'_>`, which implements the `Drop` trait\n+\n+fn main() {}"}, {"sha": "71c97b7ad6b80091d0bf8e410dc02d307cec57d2", "filename": "src/test/ui/nll/issue-52059-report-when-borrow-and-drop-conflict.stderr", "status": "added", "additions": 61, "deletions": 0, "changes": 61, "blob_url": "https://github.com/rust-lang/rust/blob/e3b611f61954c565b550a6f6ae42715f56db0d85/src%2Ftest%2Fui%2Fnll%2Fissue-52059-report-when-borrow-and-drop-conflict.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e3b611f61954c565b550a6f6ae42715f56db0d85/src%2Ftest%2Fui%2Fnll%2Fissue-52059-report-when-borrow-and-drop-conflict.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fissue-52059-report-when-borrow-and-drop-conflict.stderr?ref=e3b611f61954c565b550a6f6ae42715f56db0d85", "patch": "@@ -0,0 +1,61 @@\n+error[E0713]: borrow may still be in use when destructor runs\n+  --> $DIR/issue-52059-report-when-borrow-and-drop-conflict.rs:14:5\n+   |\n+LL |     s.url\n+   |     ^^^^^\n+LL | }\n+   | - here, drop of `s` needs exclusive access to `*s.url`, because the type `S<'_>` implements the `Drop` trait\n+   |\n+note: borrowed value must be valid for the anonymous lifetime #1 defined on the function body at 13:1...\n+  --> $DIR/issue-52059-report-when-borrow-and-drop-conflict.rs:13:1\n+   |\n+LL | / fn finish_1(s: S) -> &mut String {\n+LL | |     s.url\n+LL | | }\n+   | |_^\n+\n+error[E0713]: borrow may still be in use when destructor runs\n+  --> $DIR/issue-52059-report-when-borrow-and-drop-conflict.rs:19:13\n+   |\n+LL |     let p = &mut *s.url; p\n+   |             ^^^^^^^^^^^\n+LL | }\n+   | - here, drop of `s` needs exclusive access to `*s.url`, because the type `S<'_>` implements the `Drop` trait\n+   |\n+note: borrowed value must be valid for the anonymous lifetime #1 defined on the function body at 18:1...\n+  --> $DIR/issue-52059-report-when-borrow-and-drop-conflict.rs:18:1\n+   |\n+LL | / fn finish_2(s: S) -> &mut String {\n+LL | |     let p = &mut *s.url; p\n+LL | | }\n+   | |_^\n+\n+error[E0713]: borrow may still be in use when destructor runs\n+  --> $DIR/issue-52059-report-when-borrow-and-drop-conflict.rs:24:21\n+   |\n+LL |     let p: &mut _ = s.url; p\n+   |                     ^^^^^\n+LL | }\n+   | - here, drop of `s` needs exclusive access to `*s.url`, because the type `S<'_>` implements the `Drop` trait\n+   |\n+note: borrowed value must be valid for the anonymous lifetime #1 defined on the function body at 23:1...\n+  --> $DIR/issue-52059-report-when-borrow-and-drop-conflict.rs:23:1\n+   |\n+LL | / fn finish_3(s: S) -> &mut String {\n+LL | |     let p: &mut _ = s.url; p\n+LL | | }\n+   | |_^\n+\n+error[E0509]: cannot move out of type `S<'_>`, which implements the `Drop` trait\n+  --> $DIR/issue-52059-report-when-borrow-and-drop-conflict.rs:29:13\n+   |\n+LL |     let p = s.url; p\n+   |             ^^^^^\n+   |             |\n+   |             cannot move out of here\n+   |             help: consider borrowing here: `&s.url`\n+\n+error: aborting due to 4 previous errors\n+\n+Some errors occurred: E0509, E0713.\n+For more information about an error, try `rustc --explain E0509`."}]}