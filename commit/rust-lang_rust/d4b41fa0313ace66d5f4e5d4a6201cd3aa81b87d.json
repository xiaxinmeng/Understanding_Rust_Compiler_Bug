{"sha": "d4b41fa0313ace66d5f4e5d4a6201cd3aa81b87d", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQ0YjQxZmEwMzEzYWNlNjZkNWY0ZTVkNGE2MjAxY2QzYWE4MWI4N2Q=", "commit": {"author": {"name": "Thomas de Zeeuw", "email": "thomasdezeeuw@gmail.com", "date": "2018-11-15T19:24:02Z"}, "committer": {"name": "Thomas de Zeeuw", "email": "thomasdezeeuw@gmail.com", "date": "2018-12-03T09:49:33Z"}, "message": "Add sync::Weak::ptr_eq", "tree": {"sha": "682d5127d22a1788671980ffdb64e1e32f6a7a45", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/682d5127d22a1788671980ffdb64e1e32f6a7a45"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d4b41fa0313ace66d5f4e5d4a6201cd3aa81b87d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d4b41fa0313ace66d5f4e5d4a6201cd3aa81b87d", "html_url": "https://github.com/rust-lang/rust/commit/d4b41fa0313ace66d5f4e5d4a6201cd3aa81b87d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d4b41fa0313ace66d5f4e5d4a6201cd3aa81b87d/comments", "author": {"login": "Thomasdezeeuw", "id": 3159064, "node_id": "MDQ6VXNlcjMxNTkwNjQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3159064?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Thomasdezeeuw", "html_url": "https://github.com/Thomasdezeeuw", "followers_url": "https://api.github.com/users/Thomasdezeeuw/followers", "following_url": "https://api.github.com/users/Thomasdezeeuw/following{/other_user}", "gists_url": "https://api.github.com/users/Thomasdezeeuw/gists{/gist_id}", "starred_url": "https://api.github.com/users/Thomasdezeeuw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Thomasdezeeuw/subscriptions", "organizations_url": "https://api.github.com/users/Thomasdezeeuw/orgs", "repos_url": "https://api.github.com/users/Thomasdezeeuw/repos", "events_url": "https://api.github.com/users/Thomasdezeeuw/events{/privacy}", "received_events_url": "https://api.github.com/users/Thomasdezeeuw/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Thomasdezeeuw", "id": 3159064, "node_id": "MDQ6VXNlcjMxNTkwNjQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3159064?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Thomasdezeeuw", "html_url": "https://github.com/Thomasdezeeuw", "followers_url": "https://api.github.com/users/Thomasdezeeuw/followers", "following_url": "https://api.github.com/users/Thomasdezeeuw/following{/other_user}", "gists_url": "https://api.github.com/users/Thomasdezeeuw/gists{/gist_id}", "starred_url": "https://api.github.com/users/Thomasdezeeuw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Thomasdezeeuw/subscriptions", "organizations_url": "https://api.github.com/users/Thomasdezeeuw/orgs", "repos_url": "https://api.github.com/users/Thomasdezeeuw/repos", "events_url": "https://api.github.com/users/Thomasdezeeuw/events{/privacy}", "received_events_url": "https://api.github.com/users/Thomasdezeeuw/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "380dd7d47b574697fe87ef00ad5ffcbb6651c501", "url": "https://api.github.com/repos/rust-lang/rust/commits/380dd7d47b574697fe87ef00ad5ffcbb6651c501", "html_url": "https://github.com/rust-lang/rust/commit/380dd7d47b574697fe87ef00ad5ffcbb6651c501"}], "stats": {"total": 47, "additions": 47, "deletions": 0}, "files": [{"sha": "0a397f79103dbbf5826f61b8a54322e483485fc8", "filename": "src/liballoc/sync.rs", "status": "modified", "additions": 47, "deletions": 0, "changes": 47, "blob_url": "https://github.com/rust-lang/rust/blob/d4b41fa0313ace66d5f4e5d4a6201cd3aa81b87d/src%2Fliballoc%2Fsync.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d4b41fa0313ace66d5f4e5d4a6201cd3aa81b87d/src%2Fliballoc%2Fsync.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Fsync.rs?ref=d4b41fa0313ace66d5f4e5d4a6201cd3aa81b87d", "patch": "@@ -1130,6 +1130,53 @@ impl<T: ?Sized> Weak<T> {\n             Some(unsafe { self.ptr.as_ref() })\n         }\n     }\n+\n+    /// Returns true if the two `Weak`s point to the same value (not just values\n+    /// that compare as equal).\n+    ///\n+    /// # Notes\n+    ///\n+    /// Since this compares pointers it means that `Weak::new()` will equal each\n+    /// other, even though they don't point to any value.\n+    ///\n+    ///\n+    /// # Examples\n+    ///\n+    /// ```\n+    /// #![feature(weak_ptr_eq)]\n+    /// use std::sync::{Arc, Weak};\n+    ///\n+    /// let first_rc = Arc::new(5);\n+    /// let first = Arc::downgrade(&first_rc);\n+    /// let second = Arc::downgrade(&first_rc);\n+    ///\n+    /// assert!(Weak::ptr_eq(&first, &second));\n+    ///\n+    /// let third_rc = Arc::new(5);\n+    /// let third = Arc::downgrade(&third_rc);\n+    ///\n+    /// assert!(!Weak::ptr_eq(&first, &third));\n+    /// ```\n+    ///\n+    /// Comparing `Weak::new`.\n+    ///\n+    /// ```\n+    /// #![feature(weak_ptr_eq)]\n+    /// use std::sync::{Arc, Weak};\n+    ///\n+    /// let first = Weak::new();\n+    /// let second = Weak::new();\n+    /// assert!(Weak::ptr_eq(&first, &second));\n+    ///\n+    /// let third_rc = Arc::new(());\n+    /// let third = Arc::downgrade(&third_rc);\n+    /// assert!(!Weak::ptr_eq(&first, &third));\n+    /// ```\n+    #[inline]\n+    #[unstable(feature = \"weak_ptr_eq\", issue = \"55981\")]\n+    pub fn ptr_eq(this: &Self, other: &Self) -> bool {\n+        this.ptr.as_ptr() == other.ptr.as_ptr()\n+    }\n }\n \n #[stable(feature = \"arc_weak\", since = \"1.4.0\")]"}]}