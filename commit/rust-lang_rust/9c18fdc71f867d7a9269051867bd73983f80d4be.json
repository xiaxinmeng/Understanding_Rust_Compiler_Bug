{"sha": "9c18fdc71f867d7a9269051867bd73983f80d4be", "node_id": "C_kwDOAAsO6NoAKDljMThmZGM3MWY4NjdkN2E5MjY5MDUxODY3YmQ3Mzk4M2Y4MGQ0YmU", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2022-08-03T20:29:29Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-08-03T20:29:29Z"}, "message": "Rollup merge of #99786 - obeis:issue-99625, r=compiler-errors\n\nRecover from C++ style `enum struct`\n\nCloses #99625", "tree": {"sha": "96114b3114f4f2adfa1350a7e7ca758e2b77cd38", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/96114b3114f4f2adfa1350a7e7ca758e2b77cd38"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9c18fdc71f867d7a9269051867bd73983f80d4be", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJi6tqpCRBK7hj4Ov3rIwAAauUIAJQIicRITbu7Ig3KMdHZpiKJ\nMT0kHNZWHjaDcF0z4rY95WujLv7Sf80Y/JiOhWErpnoIp1zVYZe55O0b3YKFJ/h6\nmdv5t+qIV8CDZHyiM1qDEDDdXLftinAPUEAGEfmYdRTJ5izSd0W5lD2H2fxRO+aS\nob5YCsxCd80/49zENcJPVJYiynjNclW+NEM1/SSAISJF3Stc68mRWUo/0znT2Cd2\nA2YLUVo9n21rUXrMIZkxMK2dlZWxAiE7/5suVa6w4qcWqmWUW3qhVS7gl7h1uhYw\n13Dz3SSfN/AmxH3t1g3kFgaGzyMgdl3H6xoAh3B0M5CYrbieDSBpHr9Zv+R6e/A=\n=G56e\n-----END PGP SIGNATURE-----\n", "payload": "tree 96114b3114f4f2adfa1350a7e7ca758e2b77cd38\nparent 0de7f756f034d9be9ea9d00ad994b3d5002f9255\nparent 0ad06f14820e90cb22b02b3678b6af20e0fe358a\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1659558569 +0200\ncommitter GitHub <noreply@github.com> 1659558569 +0200\n\nRollup merge of #99786 - obeis:issue-99625, r=compiler-errors\n\nRecover from C++ style `enum struct`\n\nCloses #99625\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9c18fdc71f867d7a9269051867bd73983f80d4be", "html_url": "https://github.com/rust-lang/rust/commit/9c18fdc71f867d7a9269051867bd73983f80d4be", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9c18fdc71f867d7a9269051867bd73983f80d4be/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0de7f756f034d9be9ea9d00ad994b3d5002f9255", "url": "https://api.github.com/repos/rust-lang/rust/commits/0de7f756f034d9be9ea9d00ad994b3d5002f9255", "html_url": "https://github.com/rust-lang/rust/commit/0de7f756f034d9be9ea9d00ad994b3d5002f9255"}, {"sha": "0ad06f14820e90cb22b02b3678b6af20e0fe358a", "url": "https://api.github.com/repos/rust-lang/rust/commits/0ad06f14820e90cb22b02b3678b6af20e0fe358a", "html_url": "https://github.com/rust-lang/rust/commit/0ad06f14820e90cb22b02b3678b6af20e0fe358a"}], "stats": {"total": 53, "additions": 53, "deletions": 0}, "files": [{"sha": "5670729253dace0bce275dc43bfe4304af8d2a7d", "filename": "compiler/rustc_parse/src/parser/item.rs", "status": "modified", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/9c18fdc71f867d7a9269051867bd73983f80d4be/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fitem.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9c18fdc71f867d7a9269051867bd73983f80d4be/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fitem.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fitem.rs?ref=9c18fdc71f867d7a9269051867bd73983f80d4be", "patch": "@@ -1216,6 +1216,25 @@ impl<'a> Parser<'a> {\n \n     /// Parses an enum declaration.\n     fn parse_item_enum(&mut self) -> PResult<'a, ItemInfo> {\n+        if self.token.is_keyword(kw::Struct) {\n+            let mut err = self.struct_span_err(\n+                self.prev_token.span.to(self.token.span),\n+                \"`enum` and `struct` are mutually exclusive\",\n+            );\n+            err.span_suggestion(\n+                self.prev_token.span.to(self.token.span),\n+                \"replace `enum struct` with\",\n+                \"enum\",\n+                Applicability::MachineApplicable,\n+            );\n+            if self.look_ahead(1, |t| t.is_ident()) {\n+                self.bump();\n+                err.emit();\n+            } else {\n+                return Err(err);\n+            }\n+        }\n+\n         let id = self.parse_ident()?;\n         let mut generics = self.parse_generics()?;\n         generics.where_clause = self.parse_where_clause()?;"}, {"sha": "4b4a416b1ac828fa0ef7c6091032136f4a0e518e", "filename": "src/test/ui/parser/issue-99625-enum-struct-mutually-exclusive.fixed", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/9c18fdc71f867d7a9269051867bd73983f80d4be/src%2Ftest%2Fui%2Fparser%2Fissue-99625-enum-struct-mutually-exclusive.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/9c18fdc71f867d7a9269051867bd73983f80d4be/src%2Ftest%2Fui%2Fparser%2Fissue-99625-enum-struct-mutually-exclusive.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fissue-99625-enum-struct-mutually-exclusive.fixed?ref=9c18fdc71f867d7a9269051867bd73983f80d4be", "patch": "@@ -0,0 +1,13 @@\n+// run-rustfix\n+\n+pub enum Range {\n+    //~^ ERROR `enum` and `struct` are mutually exclusive\n+    Valid {\n+        begin: u32,\n+        len: u32,\n+    },\n+    Out,\n+}\n+\n+fn main() {\n+}"}, {"sha": "9cc886641293b3731fb5fcb781143ded6dc0ba85", "filename": "src/test/ui/parser/issue-99625-enum-struct-mutually-exclusive.rs", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/9c18fdc71f867d7a9269051867bd73983f80d4be/src%2Ftest%2Fui%2Fparser%2Fissue-99625-enum-struct-mutually-exclusive.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9c18fdc71f867d7a9269051867bd73983f80d4be/src%2Ftest%2Fui%2Fparser%2Fissue-99625-enum-struct-mutually-exclusive.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fissue-99625-enum-struct-mutually-exclusive.rs?ref=9c18fdc71f867d7a9269051867bd73983f80d4be", "patch": "@@ -0,0 +1,13 @@\n+// run-rustfix\n+\n+pub enum struct Range {\n+    //~^ ERROR `enum` and `struct` are mutually exclusive\n+    Valid {\n+        begin: u32,\n+        len: u32,\n+    },\n+    Out,\n+}\n+\n+fn main() {\n+}"}, {"sha": "edc640bf5ec22c3c35c12263666b0d007bbde050", "filename": "src/test/ui/parser/issue-99625-enum-struct-mutually-exclusive.stderr", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/9c18fdc71f867d7a9269051867bd73983f80d4be/src%2Ftest%2Fui%2Fparser%2Fissue-99625-enum-struct-mutually-exclusive.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/9c18fdc71f867d7a9269051867bd73983f80d4be/src%2Ftest%2Fui%2Fparser%2Fissue-99625-enum-struct-mutually-exclusive.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fissue-99625-enum-struct-mutually-exclusive.stderr?ref=9c18fdc71f867d7a9269051867bd73983f80d4be", "patch": "@@ -0,0 +1,8 @@\n+error: `enum` and `struct` are mutually exclusive\n+  --> $DIR/issue-99625-enum-struct-mutually-exclusive.rs:3:5\n+   |\n+LL | pub enum struct Range {\n+   |     ^^^^^^^^^^^ help: replace `enum struct` with: `enum`\n+\n+error: aborting due to previous error\n+"}]}