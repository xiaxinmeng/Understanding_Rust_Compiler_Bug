{"sha": "62d38da9fab089520b0e10e71a54be0d30b0490a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjYyZDM4ZGE5ZmFiMDg5NTIwYjBlMTBlNzFhNTRiZTBkMzBiMDQ5MGE=", "commit": {"author": {"name": "Yuki Okushi", "email": "huyuumi.dev@gmail.com", "date": "2021-03-16T14:53:52Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-03-16T14:53:52Z"}, "message": "Rollup merge of #81822 - Kixunil:path_try_exists, r=kennytm\n\nAdded `try_exists()` method to `std::path::Path`\n\nThis method is similar to the existing `exists()` method, except it\ndoesn't silently ignore the errors, leading to less error-prone code.\n\nThis change intentionally does NOT touch the documentation of `exists()`\nnor recommend people to use this method while it's unstable.\nSuch changes are reserved for stabilization to prevent confusing people.\n\nApart from that it avoids conflicts with #80979.\n\n`@joshtriplett` requested this PR in [internals discussion](https://internals.rust-lang.org/t/the-api-of-path-exists-encourages-broken-code/13817/25?u=kixunil)", "tree": {"sha": "ba3cc8360b17d7ae546fc31d410bcbab9c691ca4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ba3cc8360b17d7ae546fc31d410bcbab9c691ca4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/62d38da9fab089520b0e10e71a54be0d30b0490a", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJgUMaBCRBK7hj4Ov3rIwAAdHIIAEe5Y6ZJ3iG6aIxf5F+cTA46\n0BWQ+Tm/gXh1GVdTLN2cVxLsdXtb7+ud9Mn2J5YqHECHA+prkr+pco6u+3lbHhdo\ng4Q/Q4YQt7iRON9J190MdZAxTrmNbeE2iPYB0ObTHUgwqJIAJd74Hlh06pzW5zOb\naNXHlTQ9rdK596CZ/qgLWoHNN2SXwIZngMgmUjFKy5FCUqn1PUuLhtwuTWYDiqir\n6rGIEMnF7p15KZhCTBthmSI6FRXbd5hblthlpkJPjfxoZsvDfniQsJO6p7zGSW0A\nmUZeZWBR5lDAmDIf+PCagF96yfn6LM2ajeD4H/biudbcTD+fYFtMmqvZhqYSDbc=\n=sBZ5\n-----END PGP SIGNATURE-----\n", "payload": "tree ba3cc8360b17d7ae546fc31d410bcbab9c691ca4\nparent f24ce9b0140d9be5a336954e878d0c1522966bb8\nparent 4330268181c3de234457138f23bb821afd0c181e\nauthor Yuki Okushi <huyuumi.dev@gmail.com> 1615906432 +0900\ncommitter GitHub <noreply@github.com> 1615906432 +0900\n\nRollup merge of #81822 - Kixunil:path_try_exists, r=kennytm\n\nAdded `try_exists()` method to `std::path::Path`\n\nThis method is similar to the existing `exists()` method, except it\ndoesn't silently ignore the errors, leading to less error-prone code.\n\nThis change intentionally does NOT touch the documentation of `exists()`\nnor recommend people to use this method while it's unstable.\nSuch changes are reserved for stabilization to prevent confusing people.\n\nApart from that it avoids conflicts with #80979.\n\n`@joshtriplett` requested this PR in [internals discussion](https://internals.rust-lang.org/t/the-api-of-path-exists-encourages-broken-code/13817/25?u=kixunil)\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/62d38da9fab089520b0e10e71a54be0d30b0490a", "html_url": "https://github.com/rust-lang/rust/commit/62d38da9fab089520b0e10e71a54be0d30b0490a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/62d38da9fab089520b0e10e71a54be0d30b0490a/comments", "author": {"login": "JohnTitor", "id": 25030997, "node_id": "MDQ6VXNlcjI1MDMwOTk3", "avatar_url": "https://avatars.githubusercontent.com/u/25030997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JohnTitor", "html_url": "https://github.com/JohnTitor", "followers_url": "https://api.github.com/users/JohnTitor/followers", "following_url": "https://api.github.com/users/JohnTitor/following{/other_user}", "gists_url": "https://api.github.com/users/JohnTitor/gists{/gist_id}", "starred_url": "https://api.github.com/users/JohnTitor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JohnTitor/subscriptions", "organizations_url": "https://api.github.com/users/JohnTitor/orgs", "repos_url": "https://api.github.com/users/JohnTitor/repos", "events_url": "https://api.github.com/users/JohnTitor/events{/privacy}", "received_events_url": "https://api.github.com/users/JohnTitor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f24ce9b0140d9be5a336954e878d0c1522966bb8", "url": "https://api.github.com/repos/rust-lang/rust/commits/f24ce9b0140d9be5a336954e878d0c1522966bb8", "html_url": "https://github.com/rust-lang/rust/commit/f24ce9b0140d9be5a336954e878d0c1522966bb8"}, {"sha": "4330268181c3de234457138f23bb821afd0c181e", "url": "https://api.github.com/repos/rust-lang/rust/commits/4330268181c3de234457138f23bb821afd0c181e", "html_url": "https://github.com/rust-lang/rust/commit/4330268181c3de234457138f23bb821afd0c181e"}], "stats": {"total": 30, "additions": 30, "deletions": 0}, "files": [{"sha": "57c892f32b193e9957dfbb6a866d1905aa5d0e71", "filename": "library/std/src/path.rs", "status": "modified", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/62d38da9fab089520b0e10e71a54be0d30b0490a/library%2Fstd%2Fsrc%2Fpath.rs", "raw_url": "https://github.com/rust-lang/rust/raw/62d38da9fab089520b0e10e71a54be0d30b0490a/library%2Fstd%2Fsrc%2Fpath.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fpath.rs?ref=62d38da9fab089520b0e10e71a54be0d30b0490a", "patch": "@@ -2472,6 +2472,36 @@ impl Path {\n         fs::metadata(self).is_ok()\n     }\n \n+    /// Returns `Ok(true)` if the path points at an existing entity.\n+    ///\n+    /// This function will traverse symbolic links to query information about the\n+    /// destination file. In case of broken symbolic links this will return `Ok(false)`.\n+    ///\n+    /// As opposed to the `exists()` method, this one doesn't silently ignore errors\n+    /// unrelated to the path not existing. (E.g. it will return `Err(_)` in case of permission\n+    /// denied on some of the parent directories.)\n+    ///\n+    /// # Examples\n+    ///\n+    /// ```no_run\n+    /// #![feature(path_try_exists)]\n+    ///\n+    /// use std::path::Path;\n+    /// assert!(!Path::new(\"does_not_exist.txt\").try_exists().expect(\"Can't check existence of file does_not_exist.txt\"));\n+    /// assert!(Path::new(\"/root/secret_file.txt\").try_exists().is_err());\n+    /// ```\n+    // FIXME: stabilization should modify documentation of `exists()` to recommend this method\n+    // instead.\n+    #[unstable(feature = \"path_try_exists\", issue = \"83186\")]\n+    #[inline]\n+    pub fn try_exists(&self) -> io::Result<bool> {\n+        match fs::metadata(self) {\n+            Ok(_) => Ok(true),\n+            Err(error) if error.kind() == io::ErrorKind::NotFound => Ok(false),\n+            Err(error) => Err(error),\n+        }\n+    }\n+\n     /// Returns `true` if the path exists on disk and is pointing at a regular file.\n     ///\n     /// This function will traverse symbolic links to query information about the"}]}