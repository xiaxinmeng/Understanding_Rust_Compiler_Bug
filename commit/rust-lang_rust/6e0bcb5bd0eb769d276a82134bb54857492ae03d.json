{"sha": "6e0bcb5bd0eb769d276a82134bb54857492ae03d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZlMGJjYjViZDBlYjc2OWQyNzZhODIxMzRiYjU0ODU3NDkyYWUwM2Q=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-01-16T23:38:40Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-01-17T05:12:34Z"}, "message": "rustdoc: Eliminate AST usage in gen module", "tree": {"sha": "7c03ea6f5ddc6d5cdd2f80f381b9d3d3942326f6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7c03ea6f5ddc6d5cdd2f80f381b9d3d3942326f6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6e0bcb5bd0eb769d276a82134bb54857492ae03d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6e0bcb5bd0eb769d276a82134bb54857492ae03d", "html_url": "https://github.com/rust-lang/rust/commit/6e0bcb5bd0eb769d276a82134bb54857492ae03d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6e0bcb5bd0eb769d276a82134bb54857492ae03d/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c4de718f378d6be0c52e77971045f1bff3af4664", "url": "https://api.github.com/repos/rust-lang/rust/commits/c4de718f378d6be0c52e77971045f1bff3af4664", "html_url": "https://github.com/rust-lang/rust/commit/c4de718f378d6be0c52e77971045f1bff3af4664"}], "stats": {"total": 62, "additions": 28, "deletions": 34}, "files": [{"sha": "b1f511e1f6a340d4842f098b06873a0f7605c2e8", "filename": "src/rustdoc/gen.rs", "status": "modified", "additions": 26, "deletions": 33, "changes": 59, "blob_url": "https://github.com/rust-lang/rust/blob/6e0bcb5bd0eb769d276a82134bb54857492ae03d/src%2Frustdoc%2Fgen.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6e0bcb5bd0eb769d276a82134bb54857492ae03d/src%2Frustdoc%2Fgen.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustdoc%2Fgen.rs?ref=6e0bcb5bd0eb769d276a82134bb54857492ae03d", "patch": "@@ -1,74 +1,56 @@\n import std::io;\n import std::io::writer_util;\n-import rustc::syntax::ast;\n-import rustc::syntax::print::pprust;\n \n export write_markdown;\n \n type ctxt = {\n-    ps: pprust::ps,\n     w: io::writer\n };\n \n fn write_markdown(\n     doc: doc::cratedoc,\n-    crate: @ast::crate,\n     writer: io::writer\n ) {\n     let ctxt = {\n-        ps: pprust::rust_printer(writer),\n         w: writer\n     };\n \n     write_header(ctxt, doc.topmod.name);\n-    write_top_module(ctxt, crate, doc.topmod);\n+    write_top_module(ctxt, doc.topmod);\n }\n \n fn write_top_module(\n     ctxt: ctxt,\n-    crate: @ast::crate,\n     moddoc: doc::moddoc\n ) {\n-    write_mod_contents(ctxt, crate, moddoc);\n+    write_mod_contents(ctxt, moddoc);\n }\n \n fn write_mod(\n     ctxt: ctxt,\n-    crate: @ast::crate,\n     moddoc: doc::moddoc\n ) {\n-    write_mod_contents(ctxt, crate, moddoc);\n+    write_mod_contents(ctxt, moddoc);\n }\n \n fn write_mod_contents(\n     ctxt: ctxt,\n-    crate: @ast::crate,\n     moddoc: doc::moddoc\n ) {\n     for fndoc in *moddoc.fns {\n-        write_fn(ctxt, crate, fndoc);\n+        write_fn(ctxt, fndoc);\n     }\n \n     for moddoc in *moddoc.mods {\n-        write_mod(ctxt, crate, moddoc);\n+        write_mod(ctxt, moddoc);\n     }\n }\n \n fn write_fn(\n     ctxt: ctxt,\n-    crate: @ast::crate,\n     fndoc: doc::fndoc\n ) {\n-    import rustc::middle::ast_map;\n-\n-    let map = ast_map::map_crate(*crate);\n-    let decl = alt map.get(fndoc.id) {\n-      ast_map::node_item(@{\n-        node: ast::item_fn(decl, _, _), _\n-      }) { decl }\n-    };\n-\n-    write_fndoc(ctxt, fndoc.name, fndoc, decl);\n+    write_fndoc(ctxt, fndoc.name, fndoc);\n }\n \n #[doc(\n@@ -87,7 +69,7 @@ fn write_header(ctxt: ctxt, name: str) {\n        doc = \"Function docs extracted from attributes\",\n        _fn = \"AST object representing this function\")\n )]\n-fn write_fndoc(ctxt: ctxt, ident: str, doc: doc::fndoc, decl: ast::fn_decl) {\n+fn write_fndoc(ctxt: ctxt, ident: str, doc: doc::fndoc) {\n     ctxt.w.write_line(\"## Function `\" + ident + \"`\");\n     ctxt.w.write_line(doc.brief);\n     alt doc.desc {\n@@ -102,22 +84,33 @@ fn write_fndoc(ctxt: ctxt, ident: str, doc: doc::fndoc, decl: ast::fn_decl) {\n         ctxt.w.write_str(\"### Argument `\" + arg + \"`: \");\n         ctxt.w.write_str(desc)\n     }\n-    ctxt.w.write_line(\"### Returns `\" + pprust::ty_to_str(decl.output) + \"`\");\n     alt doc.return {\n-      some({desc: some(d), _}) { ctxt.w.write_line(d); }\n-      _ { }\n+      some(doc) {\n+        alt doc.ty {\n+          some(ty) {\n+            ctxt.w.write_line(\"### Returns `\" + ty + \"`\");\n+            alt doc.desc {\n+              some(d) {\n+                ctxt.w.write_line(d);\n+              }\n+              none. { }\n+            }\n+          }\n+          none. { fail \"unimplemented\"; }\n+        }\n+      }\n+      none. { }\n     }\n }\n \n #[cfg(test)]\n mod tests {\n     fn write_markdown_str(\n-        doc: doc::cratedoc,\n-        crate: @ast::crate\n+        doc: doc::cratedoc\n     ) -> str {\n         let buffer = io::mk_mem_buffer();\n         let writer = io::mem_buffer_writer(buffer);\n-        write_markdown(doc, crate, writer);\n+        write_markdown(doc, writer);\n         ret io::mem_buffer_str(buffer);\n     }\n \n@@ -126,7 +119,7 @@ mod tests {\n         let source = \"\";\n         let ast = parse::from_str(source);\n         let doc = extract::extract(ast, \"belch\");\n-        let markdown = write_markdown_str(doc, ast);\n+        let markdown = write_markdown_str(doc);\n         assert str::contains(markdown, \"# Crate belch\\n\");\n     }\n \n@@ -135,7 +128,7 @@ mod tests {\n         let source = \"fn func() { }\";\n         let ast = parse::from_str(source);\n         let doc = extract::extract(ast, \"\");\n-        let markdown = write_markdown_str(doc, ast);\n+        let markdown = write_markdown_str(doc);\n         assert str::contains(markdown, \"## Function `func`\");\n     }\n }\n\\ No newline at end of file"}, {"sha": "956c2d1319a3e8c1a83003fa0c1b9597daa8f108", "filename": "src/rustdoc/rustdoc.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/6e0bcb5bd0eb769d276a82134bb54857492ae03d/src%2Frustdoc%2Frustdoc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6e0bcb5bd0eb769d276a82134bb54857492ae03d/src%2Frustdoc%2Frustdoc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustdoc%2Frustdoc.rs?ref=6e0bcb5bd0eb769d276a82134bb54857492ae03d", "patch": "@@ -23,5 +23,6 @@ fn main(argv: [str]) {\n     let default_name = source_file;\n     let crate = parse::from_file(source_file);\n     let doc = extract::extract(crate, default_name);\n-    gen::write_markdown(doc, crate, std::io::stdout());\n+    let doc = tystr_pass::run(doc, crate);\n+    gen::write_markdown(doc, std::io::stdout());\n }"}]}