{"sha": "77333a571ffb401a6765bbc80dea082ad08238d9", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc3MzMzYTU3MWZmYjQwMWE2NzY1YmJjODBkZWEwODJhZDA4MjM4ZDk=", "commit": {"author": {"name": "Florian Diebold", "email": "flodiebold@gmail.com", "date": "2021-04-03T19:59:13Z"}, "committer": {"name": "Florian Diebold", "email": "flodiebold@gmail.com", "date": "2021-04-04T11:16:38Z"}, "message": "More TyBuilder use", "tree": {"sha": "d43b8f7881fc361ee347b32a2a19bbeee5ee1501", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d43b8f7881fc361ee347b32a2a19bbeee5ee1501"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/77333a571ffb401a6765bbc80dea082ad08238d9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/77333a571ffb401a6765bbc80dea082ad08238d9", "html_url": "https://github.com/rust-lang/rust/commit/77333a571ffb401a6765bbc80dea082ad08238d9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/77333a571ffb401a6765bbc80dea082ad08238d9/comments", "author": {"login": "flodiebold", "id": 906069, "node_id": "MDQ6VXNlcjkwNjA2OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/906069?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flodiebold", "html_url": "https://github.com/flodiebold", "followers_url": "https://api.github.com/users/flodiebold/followers", "following_url": "https://api.github.com/users/flodiebold/following{/other_user}", "gists_url": "https://api.github.com/users/flodiebold/gists{/gist_id}", "starred_url": "https://api.github.com/users/flodiebold/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flodiebold/subscriptions", "organizations_url": "https://api.github.com/users/flodiebold/orgs", "repos_url": "https://api.github.com/users/flodiebold/repos", "events_url": "https://api.github.com/users/flodiebold/events{/privacy}", "received_events_url": "https://api.github.com/users/flodiebold/received_events", "type": "User", "site_admin": false}, "committer": {"login": "flodiebold", "id": 906069, "node_id": "MDQ6VXNlcjkwNjA2OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/906069?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flodiebold", "html_url": "https://github.com/flodiebold", "followers_url": "https://api.github.com/users/flodiebold/followers", "following_url": "https://api.github.com/users/flodiebold/following{/other_user}", "gists_url": "https://api.github.com/users/flodiebold/gists{/gist_id}", "starred_url": "https://api.github.com/users/flodiebold/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flodiebold/subscriptions", "organizations_url": "https://api.github.com/users/flodiebold/orgs", "repos_url": "https://api.github.com/users/flodiebold/repos", "events_url": "https://api.github.com/users/flodiebold/events{/privacy}", "received_events_url": "https://api.github.com/users/flodiebold/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "66fec39aa04ea59ac39d52f0872c0a6c52a27e35", "url": "https://api.github.com/repos/rust-lang/rust/commits/66fec39aa04ea59ac39d52f0872c0a6c52a27e35", "html_url": "https://github.com/rust-lang/rust/commit/66fec39aa04ea59ac39d52f0872c0a6c52a27e35"}], "stats": {"total": 21, "additions": 9, "deletions": 12}, "files": [{"sha": "ed8c677a8f79d7a1379354432087d5a32fdd0fd4", "filename": "crates/hir_ty/src/infer/coerce.rs", "status": "modified", "additions": 9, "deletions": 12, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/77333a571ffb401a6765bbc80dea082ad08238d9/crates%2Fhir_ty%2Fsrc%2Finfer%2Fcoerce.rs", "raw_url": "https://github.com/rust-lang/rust/raw/77333a571ffb401a6765bbc80dea082ad08238d9/crates%2Fhir_ty%2Fsrc%2Finfer%2Fcoerce.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_ty%2Fsrc%2Finfer%2Fcoerce.rs?ref=77333a571ffb401a6765bbc80dea082ad08238d9", "patch": "@@ -8,7 +8,7 @@ use chalk_ir::{cast::Cast, Mutability, TyVariableKind};\n use hir_def::lang_item::LangItemTarget;\n \n use crate::{\n-    autoderef, to_chalk_trait_id, traits::Solution, Interner, Substitution, TraitRef, Ty,\n+    autoderef, traits::Solution, Interner, Ty,\n     TyBuilder, TyKind,\n };\n \n@@ -131,18 +131,15 @@ impl<'a> InferenceContext<'a> {\n             _ => return None,\n         };\n \n-        let generic_params = crate::utils::generics(self.db.upcast(), coerce_unsized_trait.into());\n-        if generic_params.len() != 2 {\n-            // The CoerceUnsized trait should have two generic params: Self and T.\n-            return None;\n-        }\n+        let trait_ref = {\n+            let b = TyBuilder::trait_ref(self.db, coerce_unsized_trait);\n+            if b.remaining() != 2 {\n+                // The CoerceUnsized trait should have two generic params: Self and T.\n+                return None;\n+            }\n+            b.push(from_ty.clone()).push(to_ty.clone()).build()\n+        };\n \n-        let substs = Substitution::build_for_generics(&generic_params)\n-            .push(from_ty.clone())\n-            .push(to_ty.clone())\n-            .build();\n-        let trait_ref =\n-            TraitRef { trait_id: to_chalk_trait_id(coerce_unsized_trait), substitution: substs };\n         let goal = InEnvironment::new(self.trait_env.env.clone(), trait_ref.cast(&Interner));\n \n         let canonicalizer = self.canonicalizer();"}]}