{"sha": "a38f02c44c56c2b6378e18ae238f4178db7eafd9", "node_id": "MDY6Q29tbWl0NzI0NzEyOmEzOGYwMmM0NGM1NmMyYjYzNzhlMThhZTIzOGY0MTc4ZGI3ZWFmZDk=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2021-06-09T16:21:23Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2021-06-09T16:24:59Z"}, "message": "isolated operations return EPERM; tweak isolation hint", "tree": {"sha": "74914f3aa94a3b9c60ec3269e312c6251c72d32e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/74914f3aa94a3b9c60ec3269e312c6251c72d32e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a38f02c44c56c2b6378e18ae238f4178db7eafd9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a38f02c44c56c2b6378e18ae238f4178db7eafd9", "html_url": "https://github.com/rust-lang/rust/commit/a38f02c44c56c2b6378e18ae238f4178db7eafd9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a38f02c44c56c2b6378e18ae238f4178db7eafd9/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "31c1afac5dc5fb3872bf8f0dbb461461f859c54f", "url": "https://api.github.com/repos/rust-lang/rust/commits/31c1afac5dc5fb3872bf8f0dbb461461f859c54f", "html_url": "https://github.com/rust-lang/rust/commit/31c1afac5dc5fb3872bf8f0dbb461461f859c54f"}], "stats": {"total": 35, "additions": 20, "deletions": 15}, "files": [{"sha": "1687297bde7c00734067537447f657a945dc97ff", "filename": "src/diagnostics.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/a38f02c44c56c2b6378e18ae238f4178db7eafd9/src%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a38f02c44c56c2b6378e18ae238f4178db7eafd9/src%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdiagnostics.rs?ref=a38f02c44c56c2b6378e18ae238f4178db7eafd9", "patch": "@@ -84,7 +84,10 @@ pub fn report_error<'tcx, 'mir>(\n             #[rustfmt::skip]\n             let helps = match info {\n                 UnsupportedInIsolation(_) =>\n-                    vec![(None, format!(\"pass the flag `-Zmiri-disable-isolation` to disable isolation; or pass `-Zmiri-isolation-error=warn to configure Miri to return an error code from isolated operations and continue with a warning\"))],\n+                    vec![\n+                        (None, format!(\"pass the flag `-Zmiri-disable-isolation` to disable isolation;\")),\n+                        (None, format!(\"or pass `-Zmiri-isolation-error=warn to configure Miri to return an error code from isolated operations (if supported for that operation) and continue with a warning\")),\n+                    ],\n                 ExperimentalUb { url, .. } =>\n                     vec![\n                         (None, format!(\"this indicates a potential bug in the program: it performed an invalid operation, but the rules it violated are still experimental\")),"}, {"sha": "8586d732dce6b07ec64a0bc9dcffa80e2e385e3b", "filename": "src/helpers.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/a38f02c44c56c2b6378e18ae238f4178db7eafd9/src%2Fhelpers.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a38f02c44c56c2b6378e18ae238f4178db7eafd9/src%2Fhelpers.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fhelpers.rs?ref=a38f02c44c56c2b6378e18ae238f4178db7eafd9", "patch": "@@ -485,7 +485,7 @@ pub trait EvalContextExt<'mir, 'tcx: 'mir>: crate::MiriEvalContextExt<'mir, 'tcx\n                 WouldBlock => \"EWOULDBLOCK\",\n                 _ => {\n                     throw_unsup_format!(\n-                        \"io error {:?} cannot be transformed into a raw os error\",\n+                        \"io error {:?} cannot be translated into a raw os error\",\n                         err_kind\n                     )\n                 }\n@@ -496,8 +496,9 @@ pub trait EvalContextExt<'mir, 'tcx: 'mir>: crate::MiriEvalContextExt<'mir, 'tcx\n                 \"c\",\n                 match err_kind {\n                     NotFound => \"ERROR_FILE_NOT_FOUND\",\n+                    PermissionDenied => \"ERROR_ACCESS_DENIED\",\n                     _ => throw_unsup_format!(\n-                        \"io error {:?} cannot be transformed into a raw os error\",\n+                        \"io error {:?} cannot be translated into a raw os error\",\n                         err_kind\n                     ),\n                 },"}, {"sha": "0c42daa2446a0b942c6e2a9b3fdb219ab79a8bab", "filename": "src/shims/env.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/a38f02c44c56c2b6378e18ae238f4178db7eafd9/src%2Fshims%2Fenv.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a38f02c44c56c2b6378e18ae238f4178db7eafd9/src%2Fshims%2Fenv.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fshims%2Fenv.rs?ref=a38f02c44c56c2b6378e18ae238f4178db7eafd9", "patch": "@@ -324,7 +324,7 @@ pub trait EvalContextExt<'mir, 'tcx: 'mir>: crate::MiriEvalContextExt<'mir, 'tcx\n \n         if let IsolatedOp::Reject(reject_with) = this.machine.isolated_op {\n             this.reject_in_isolation(\"getcwd\", reject_with)?;\n-            this.set_last_error_from_io_error(ErrorKind::NotFound)?;\n+            this.set_last_error_from_io_error(ErrorKind::PermissionDenied)?;\n             return Ok(Scalar::null_ptr(&*this.tcx));\n         }\n \n@@ -356,7 +356,7 @@ pub trait EvalContextExt<'mir, 'tcx: 'mir>: crate::MiriEvalContextExt<'mir, 'tcx\n \n         if let IsolatedOp::Reject(reject_with) = this.machine.isolated_op {\n             this.reject_in_isolation(\"GetCurrentDirectoryW\", reject_with)?;\n-            this.set_last_error_from_io_error(ErrorKind::NotFound)?;\n+            this.set_last_error_from_io_error(ErrorKind::PermissionDenied)?;\n             return Ok(0);\n         }\n \n@@ -382,7 +382,7 @@ pub trait EvalContextExt<'mir, 'tcx: 'mir>: crate::MiriEvalContextExt<'mir, 'tcx\n \n         if let IsolatedOp::Reject(reject_with) = this.machine.isolated_op {\n             this.reject_in_isolation(\"chdir\", reject_with)?;\n-            this.set_last_error_from_io_error(ErrorKind::NotFound)?;\n+            this.set_last_error_from_io_error(ErrorKind::PermissionDenied)?;\n \n             return Ok(-1);\n         }\n@@ -410,7 +410,7 @@ pub trait EvalContextExt<'mir, 'tcx: 'mir>: crate::MiriEvalContextExt<'mir, 'tcx\n \n         if let IsolatedOp::Reject(reject_with) = this.machine.isolated_op {\n             this.reject_in_isolation(\"SetCurrentDirectoryW\", reject_with)?;\n-            this.set_last_error_from_io_error(ErrorKind::NotFound)?;\n+            this.set_last_error_from_io_error(ErrorKind::PermissionDenied)?;\n \n             return Ok(0);\n         }"}, {"sha": "b5fe6114b2f3fa871b8699f40c52bdd147726552", "filename": "tests/run-pass/current_dir_with_isolation.rs", "status": "modified", "additions": 7, "deletions": 6, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/a38f02c44c56c2b6378e18ae238f4178db7eafd9/tests%2Frun-pass%2Fcurrent_dir_with_isolation.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a38f02c44c56c2b6378e18ae238f4178db7eafd9/tests%2Frun-pass%2Fcurrent_dir_with_isolation.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frun-pass%2Fcurrent_dir_with_isolation.rs?ref=a38f02c44c56c2b6378e18ae238f4178db7eafd9", "patch": "@@ -1,20 +1,21 @@\n // compile-flags: -Zmiri-isolation-error=warn-nobacktrace\n-// normalize-stderr-test \"(getcwd|GetCurrentDirectoryW)\" -> \"$$GET\"\n-// normalize-stderr-test \"(chdir|SetCurrentDirectoryW)\" -> \"$$SET\"\n+// normalize-stderr-test \"(getcwd|GetCurrentDirectoryW)\" -> \"$$GETCWD\"\n+// normalize-stderr-test \"(chdir|SetCurrentDirectoryW)\" -> \"$$SETCWD\"\n \n use std::env;\n use std::io::ErrorKind;\n \n fn main() {\n     // Test that current dir operations return a proper error instead\n     // of stopping the machine in isolation mode\n-    assert_eq!(env::current_dir().unwrap_err().kind(), ErrorKind::NotFound);\n+    assert_eq!(env::current_dir().unwrap_err().kind(), ErrorKind::PermissionDenied);\n     for _i in 0..3 {\n-        assert_eq!(env::current_dir().unwrap_err().kind(), ErrorKind::NotFound);\n+        // Ensure we get no repeated warnings when doing this multiple times.\n+        assert_eq!(env::current_dir().unwrap_err().kind(), ErrorKind::PermissionDenied);\n     }\n \n-    assert_eq!(env::set_current_dir(\"..\").unwrap_err().kind(), ErrorKind::NotFound);\n+    assert_eq!(env::set_current_dir(\"..\").unwrap_err().kind(), ErrorKind::PermissionDenied);\n     for _i in 0..3 {\n-        assert_eq!(env::set_current_dir(\"..\").unwrap_err().kind(), ErrorKind::NotFound);\n+        assert_eq!(env::set_current_dir(\"..\").unwrap_err().kind(), ErrorKind::PermissionDenied);\n     }\n }"}, {"sha": "589ca65a1e47e410396d8f353e3909de7283b690", "filename": "tests/run-pass/current_dir_with_isolation.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/a38f02c44c56c2b6378e18ae238f4178db7eafd9/tests%2Frun-pass%2Fcurrent_dir_with_isolation.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/a38f02c44c56c2b6378e18ae238f4178db7eafd9/tests%2Frun-pass%2Fcurrent_dir_with_isolation.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frun-pass%2Fcurrent_dir_with_isolation.stderr?ref=a38f02c44c56c2b6378e18ae238f4178db7eafd9", "patch": "@@ -1,4 +1,4 @@\n-warning: `$GET` was made to return an error due to isolation\n+warning: `$GETCWD` was made to return an error due to isolation\n \n-warning: `$SET` was made to return an error due to isolation\n+warning: `$SETCWD` was made to return an error due to isolation\n "}]}