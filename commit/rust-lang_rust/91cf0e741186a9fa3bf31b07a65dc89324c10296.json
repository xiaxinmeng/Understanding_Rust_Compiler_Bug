{"sha": "91cf0e741186a9fa3bf31b07a65dc89324c10296", "node_id": "MDY6Q29tbWl0NzI0NzEyOjkxY2YwZTc0MTE4NmE5ZmEzYmYzMWIwN2E2NWRjODkzMjRjMTAyOTY=", "commit": {"author": {"name": "Matthew Jasper", "email": "mjjasper1@gmail.com", "date": "2020-01-30T20:24:44Z"}, "committer": {"name": "Matthew Jasper", "email": "mjjasper1@gmail.com", "date": "2020-02-02T21:46:29Z"}, "message": "Don't requery the param_env of a union\n\nUnion fields have the ParamEnv of the union.", "tree": {"sha": "3ba9c47408c93cccd614100ad44824b5b9e8f3e0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3ba9c47408c93cccd614100ad44824b5b9e8f3e0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/91cf0e741186a9fa3bf31b07a65dc89324c10296", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/91cf0e741186a9fa3bf31b07a65dc89324c10296", "html_url": "https://github.com/rust-lang/rust/commit/91cf0e741186a9fa3bf31b07a65dc89324c10296", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/91cf0e741186a9fa3bf31b07a65dc89324c10296/comments", "author": {"login": "matthewjasper", "id": 20113453, "node_id": "MDQ6VXNlcjIwMTEzNDUz", "avatar_url": "https://avatars.githubusercontent.com/u/20113453?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthewjasper", "html_url": "https://github.com/matthewjasper", "followers_url": "https://api.github.com/users/matthewjasper/followers", "following_url": "https://api.github.com/users/matthewjasper/following{/other_user}", "gists_url": "https://api.github.com/users/matthewjasper/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthewjasper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthewjasper/subscriptions", "organizations_url": "https://api.github.com/users/matthewjasper/orgs", "repos_url": "https://api.github.com/users/matthewjasper/repos", "events_url": "https://api.github.com/users/matthewjasper/events{/privacy}", "received_events_url": "https://api.github.com/users/matthewjasper/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matthewjasper", "id": 20113453, "node_id": "MDQ6VXNlcjIwMTEzNDUz", "avatar_url": "https://avatars.githubusercontent.com/u/20113453?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthewjasper", "html_url": "https://github.com/matthewjasper", "followers_url": "https://api.github.com/users/matthewjasper/followers", "following_url": "https://api.github.com/users/matthewjasper/following{/other_user}", "gists_url": "https://api.github.com/users/matthewjasper/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthewjasper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthewjasper/subscriptions", "organizations_url": "https://api.github.com/users/matthewjasper/orgs", "repos_url": "https://api.github.com/users/matthewjasper/repos", "events_url": "https://api.github.com/users/matthewjasper/events{/privacy}", "received_events_url": "https://api.github.com/users/matthewjasper/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f43c34a134358471726f25fe5973b8c7e177c825", "url": "https://api.github.com/repos/rust-lang/rust/commits/f43c34a134358471726f25fe5973b8c7e177c825", "html_url": "https://github.com/rust-lang/rust/commit/f43c34a134358471726f25fe5973b8c7e177c825"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "8d2cfd9a335d15ecdecaea6f1ca14265769e37c2", "filename": "src/librustc_typeck/check/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/91cf0e741186a9fa3bf31b07a65dc89324c10296/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/91cf0e741186a9fa3bf31b07a65dc89324c10296/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs?ref=91cf0e741186a9fa3bf31b07a65dc89324c10296", "patch": "@@ -1545,11 +1545,11 @@ fn check_union_fields(tcx: TyCtxt<'_>, span: Span, item_def_id: DefId) -> bool {\n     if let ty::Adt(def, substs) = item_type.kind {\n         assert!(def.is_union());\n         let fields = &def.non_enum_variant().fields;\n+        let param_env = tcx.param_env(item_def_id);\n         for field in fields {\n             let field_ty = field.ty(tcx, substs);\n             // We are currently checking the type this field came from, so it must be local.\n             let field_span = tcx.hir().span_if_local(field.did).unwrap();\n-            let param_env = tcx.param_env(field.did);\n             if field_ty.needs_drop(tcx, param_env) {\n                 struct_span_err!(\n                     tcx.sess,"}]}