{"sha": "b539906de1d12dc935a1c3db9e511518dddabb3d", "node_id": "MDY6Q29tbWl0NzI0NzEyOmI1Mzk5MDZkZTFkMTJkYzkzNWExYzNkYjllNTExNTE4ZGRkYWJiM2Q=", "commit": {"author": {"name": "Alexis Beingessner", "email": "a.beingessner@gmail.com", "date": "2015-07-28T22:41:58Z"}, "committer": {"name": "Alexis Beingessner", "email": "a.beingessner@gmail.com", "date": "2015-07-28T22:41:58Z"}, "message": "clarify subtyping", "tree": {"sha": "367842d26888a35345301fe16939de1d78744e52", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/367842d26888a35345301fe16939de1d78744e52"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b539906de1d12dc935a1c3db9e511518dddabb3d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b539906de1d12dc935a1c3db9e511518dddabb3d", "html_url": "https://github.com/rust-lang/rust/commit/b539906de1d12dc935a1c3db9e511518dddabb3d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b539906de1d12dc935a1c3db9e511518dddabb3d/comments", "author": {"login": "Gankra", "id": 1136864, "node_id": "MDQ6VXNlcjExMzY4NjQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1136864?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Gankra", "html_url": "https://github.com/Gankra", "followers_url": "https://api.github.com/users/Gankra/followers", "following_url": "https://api.github.com/users/Gankra/following{/other_user}", "gists_url": "https://api.github.com/users/Gankra/gists{/gist_id}", "starred_url": "https://api.github.com/users/Gankra/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Gankra/subscriptions", "organizations_url": "https://api.github.com/users/Gankra/orgs", "repos_url": "https://api.github.com/users/Gankra/repos", "events_url": "https://api.github.com/users/Gankra/events{/privacy}", "received_events_url": "https://api.github.com/users/Gankra/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Gankra", "id": 1136864, "node_id": "MDQ6VXNlcjExMzY4NjQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1136864?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Gankra", "html_url": "https://github.com/Gankra", "followers_url": "https://api.github.com/users/Gankra/followers", "following_url": "https://api.github.com/users/Gankra/following{/other_user}", "gists_url": "https://api.github.com/users/Gankra/gists{/gist_id}", "starred_url": "https://api.github.com/users/Gankra/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Gankra/subscriptions", "organizations_url": "https://api.github.com/users/Gankra/orgs", "repos_url": "https://api.github.com/users/Gankra/repos", "events_url": "https://api.github.com/users/Gankra/events{/privacy}", "received_events_url": "https://api.github.com/users/Gankra/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9123bb02ca3d71e16ce3e4a2ebb1fca49fcd93e2", "url": "https://api.github.com/repos/rust-lang/rust/commits/9123bb02ca3d71e16ce3e4a2ebb1fca49fcd93e2", "html_url": "https://github.com/rust-lang/rust/commit/9123bb02ca3d71e16ce3e4a2ebb1fca49fcd93e2"}], "stats": {"total": 8, "additions": 4, "deletions": 4}, "files": [{"sha": "767a0aca542f96b26ec7127f428aa6184439bffd", "filename": "src/doc/tarpl/subtyping.md", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/b539906de1d12dc935a1c3db9e511518dddabb3d/src%2Fdoc%2Ftarpl%2Fsubtyping.md", "raw_url": "https://github.com/rust-lang/rust/raw/b539906de1d12dc935a1c3db9e511518dddabb3d/src%2Fdoc%2Ftarpl%2Fsubtyping.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Ftarpl%2Fsubtyping.md?ref=b539906de1d12dc935a1c3db9e511518dddabb3d", "patch": "@@ -1,9 +1,9 @@\n % Subtyping and Variance\n \n-Although Rust doesn't have any notion of inheritance, it *does* include\n-subtyping. In Rust, subtyping derives entirely from *lifetimes*. Since lifetimes\n-are scopes, we can partially order them based on the *contains* (outlives)\n-relationship. We can even express this as a generic bound.\n+Although Rust doesn't have any notion of structural inheritance, it *does*\n+include subtyping. In Rust, subtyping derives entirely from *lifetimes*. Since\n+lifetimes are scopes, we can partially order them based on the *contains*\n+(outlives) relationship. We can even express this as a generic bound.\n \n Subtyping on lifetimes in terms of that relationship: if `'a: 'b` (\"a contains\n b\" or \"a outlives b\"), then `'a` is a subtype of `'b`. This is a large source of"}]}