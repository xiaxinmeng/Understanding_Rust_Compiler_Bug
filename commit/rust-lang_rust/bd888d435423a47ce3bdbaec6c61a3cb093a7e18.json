{"sha": "bd888d435423a47ce3bdbaec6c61a3cb093a7e18", "node_id": "C_kwDOAAsO6NoAKGJkODg4ZDQzNTQyM2E0N2NlM2JkYmFlYzZjNjFhM2NiMDkzYTdlMTg", "commit": {"author": {"name": "dswij", "email": "dswijj@gmail.com", "date": "2022-03-17T06:33:09Z"}, "committer": {"name": "dswij", "email": "dswijj@gmail.com", "date": "2022-03-17T06:38:39Z"}, "message": "Add some comments", "tree": {"sha": "52261056b593fbde274a3fc79ce47a1d004aef66", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/52261056b593fbde274a3fc79ce47a1d004aef66"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/bd888d435423a47ce3bdbaec6c61a3cb093a7e18", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/bd888d435423a47ce3bdbaec6c61a3cb093a7e18", "html_url": "https://github.com/rust-lang/rust/commit/bd888d435423a47ce3bdbaec6c61a3cb093a7e18", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/bd888d435423a47ce3bdbaec6c61a3cb093a7e18/comments", "author": {"login": "dswij", "id": 44697459, "node_id": "MDQ6VXNlcjQ0Njk3NDU5", "avatar_url": "https://avatars.githubusercontent.com/u/44697459?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dswij", "html_url": "https://github.com/dswij", "followers_url": "https://api.github.com/users/dswij/followers", "following_url": "https://api.github.com/users/dswij/following{/other_user}", "gists_url": "https://api.github.com/users/dswij/gists{/gist_id}", "starred_url": "https://api.github.com/users/dswij/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dswij/subscriptions", "organizations_url": "https://api.github.com/users/dswij/orgs", "repos_url": "https://api.github.com/users/dswij/repos", "events_url": "https://api.github.com/users/dswij/events{/privacy}", "received_events_url": "https://api.github.com/users/dswij/received_events", "type": "User", "site_admin": false}, "committer": {"login": "dswij", "id": 44697459, "node_id": "MDQ6VXNlcjQ0Njk3NDU5", "avatar_url": "https://avatars.githubusercontent.com/u/44697459?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dswij", "html_url": "https://github.com/dswij", "followers_url": "https://api.github.com/users/dswij/followers", "following_url": "https://api.github.com/users/dswij/following{/other_user}", "gists_url": "https://api.github.com/users/dswij/gists{/gist_id}", "starred_url": "https://api.github.com/users/dswij/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dswij/subscriptions", "organizations_url": "https://api.github.com/users/dswij/orgs", "repos_url": "https://api.github.com/users/dswij/repos", "events_url": "https://api.github.com/users/dswij/events{/privacy}", "received_events_url": "https://api.github.com/users/dswij/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6a3dbe4798e3966b80b16373fda75f5e4dd91384", "url": "https://api.github.com/repos/rust-lang/rust/commits/6a3dbe4798e3966b80b16373fda75f5e4dd91384", "html_url": "https://github.com/rust-lang/rust/commit/6a3dbe4798e3966b80b16373fda75f5e4dd91384"}], "stats": {"total": 3, "additions": 3, "deletions": 0}, "files": [{"sha": "2369be708129403f242fcdbfd55204d1295cf47b", "filename": "clippy_lints/src/methods/unnecessary_lazy_eval.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/bd888d435423a47ce3bdbaec6c61a3cb093a7e18/clippy_lints%2Fsrc%2Fmethods%2Funnecessary_lazy_eval.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bd888d435423a47ce3bdbaec6c61a3cb093a7e18/clippy_lints%2Fsrc%2Fmethods%2Funnecessary_lazy_eval.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmethods%2Funnecessary_lazy_eval.rs?ref=bd888d435423a47ce3bdbaec6c61a3cb093a7e18", "patch": "@@ -48,6 +48,9 @@ pub(super) fn check<'tcx>(\n                     Applicability::MaybeIncorrect\n                 };\n \n+                // This is a duplicate of what's happening in clippy_lints::methods::method_call,\n+                // which isn't ideal, We want to get the method call span,\n+                // but prefer to avoid changing the signature of the function itself.\n                 if let hir::ExprKind::MethodCall(_, _, span) = expr.kind {\n                     span_lint_and_then(cx, UNNECESSARY_LAZY_EVALUATIONS, expr.span, msg, |diag| {\n                         diag.span_suggestion("}]}