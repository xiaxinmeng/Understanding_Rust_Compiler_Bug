{"sha": "cd3d22d287e0b4a9bb5a31d0832a369a8fb8320f", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNkM2QyMmQyODdlMGI0YTliYjVhMzFkMDgzMmEzNjlhOGZiODMyMGY=", "commit": {"author": {"name": "Philipp Hansch", "email": "dev@phansch.net", "date": "2018-05-12T09:01:56Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2018-05-12T09:01:56Z"}, "message": "Merge pull request #2748 from phansch/explain_how_to_fix_nightly_build_failures\n\nExplain how to debug and fix nightly build failures", "tree": {"sha": "45be6242cdfceff0797645676f5bb96febbc2ae2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/45be6242cdfceff0797645676f5bb96febbc2ae2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/cd3d22d287e0b4a9bb5a31d0832a369a8fb8320f", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJa9q2ECRBK7hj4Ov3rIwAAdHIIALLvr+JStKWYvYu0yiTVF+RW\nTjp3cIBD14yn6rqZDba91N1HPAuEhRI8X/7YQWe+tQr2ARg4NrRuKEpKSdysmfOS\nk+YrQ6El+76wrXHDnFTXmnBiiDVOIdeL/D08G2P+bLD7Yskb2V/zJiCv+icsFaBr\nDv+3nQVBYyWqQc9KQ0MfHjlVAIdGXmCgcmSW4oImPpgtGCKE/J5D3eTSkdmpbgaF\nvfIHD69lxwGo4B0F0CMprthpf+O6HyPaNS9aa1g/269XmxW/uLV/l5lfqNC2J1P2\nSV31AIqqGAacf+B79NOkWvbwmKSt0gzhKGDtaKHvhjHgrIUye6OQ6K6AmHAbe2o=\n=4EwB\n-----END PGP SIGNATURE-----\n", "payload": "tree 45be6242cdfceff0797645676f5bb96febbc2ae2\nparent 7a4c00c669b3bf0ffb24c7aa89a776cd48f1e2d0\nparent fa0d9c578219bbb0d931221ee258fb603e24e940\nauthor Philipp Hansch <dev@phansch.net> 1526115716 +0200\ncommitter GitHub <noreply@github.com> 1526115716 +0200\n\nMerge pull request #2748 from phansch/explain_how_to_fix_nightly_build_failures\n\nExplain how to debug and fix nightly build failures"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/cd3d22d287e0b4a9bb5a31d0832a369a8fb8320f", "html_url": "https://github.com/rust-lang/rust/commit/cd3d22d287e0b4a9bb5a31d0832a369a8fb8320f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/cd3d22d287e0b4a9bb5a31d0832a369a8fb8320f/comments", "author": {"login": "phansch", "id": 2042399, "node_id": "MDQ6VXNlcjIwNDIzOTk=", "avatar_url": "https://avatars.githubusercontent.com/u/2042399?v=4", "gravatar_id": "", "url": "https://api.github.com/users/phansch", "html_url": "https://github.com/phansch", "followers_url": "https://api.github.com/users/phansch/followers", "following_url": "https://api.github.com/users/phansch/following{/other_user}", "gists_url": "https://api.github.com/users/phansch/gists{/gist_id}", "starred_url": "https://api.github.com/users/phansch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/phansch/subscriptions", "organizations_url": "https://api.github.com/users/phansch/orgs", "repos_url": "https://api.github.com/users/phansch/repos", "events_url": "https://api.github.com/users/phansch/events{/privacy}", "received_events_url": "https://api.github.com/users/phansch/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7a4c00c669b3bf0ffb24c7aa89a776cd48f1e2d0", "url": "https://api.github.com/repos/rust-lang/rust/commits/7a4c00c669b3bf0ffb24c7aa89a776cd48f1e2d0", "html_url": "https://github.com/rust-lang/rust/commit/7a4c00c669b3bf0ffb24c7aa89a776cd48f1e2d0"}, {"sha": "fa0d9c578219bbb0d931221ee258fb603e24e940", "url": "https://api.github.com/repos/rust-lang/rust/commits/fa0d9c578219bbb0d931221ee258fb603e24e940", "html_url": "https://github.com/rust-lang/rust/commit/fa0d9c578219bbb0d931221ee258fb603e24e940"}], "stats": {"total": 14, "additions": 14, "deletions": 0}, "files": [{"sha": "69bc3546ba05fbbf3be311dafb200b31045f872e", "filename": "CONTRIBUTING.md", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/cd3d22d287e0b4a9bb5a31d0832a369a8fb8320f/CONTRIBUTING.md", "raw_url": "https://github.com/rust-lang/rust/raw/cd3d22d287e0b4a9bb5a31d0832a369a8fb8320f/CONTRIBUTING.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/CONTRIBUTING.md?ref=cd3d22d287e0b4a9bb5a31d0832a369a8fb8320f", "patch": "@@ -17,6 +17,7 @@ All contributors are expected to follow the [Rust Code of Conduct](http://www.ru\n   * [Running test suite](#running-test-suite)\n   * [Testing manually](#testing-manually)\n   * [How Clippy works](#how-clippy-works)\n+  * [Fixing nightly build failures](#fixing-nightly-build-failures)\n * [Contributions](#contributions)\n \n ## Getting started\n@@ -209,6 +210,17 @@ The difference between `EarlyLintPass` and `LateLintPass` is that the methods of\n \n That's why the `else_if_without_else` example uses the `register_early_lint_pass` function. Because the [actual lint logic][else_if_without_else] does not depend on any type information.\n \n+### Fixing nightly build failures\n+\n+Clippy will sometimes break with new nightly version releases. This is expected because Clippy still depends on nightly Rust. Most of the times we have to adapt to the changes and only very rarely there's an actual bug in rust.\n+\n+In order to find out why Clippy does not work properly with a new nightly version, you can use the [rust-toolstate commit history][toolstate_commit_history].\n+You will then have to look for the last commit that contains `test-pass -> build-fail` or `test-pass` -> `test-fail` for the `clippy-driver` component. [Here][toolstate_commit] is an example.\n+\n+The commit message contains a link to the PR. The PRs are usually small enough to discover the breaking API change and if they are bigger, they likely include some discussion that may help you to fix Clippy.\n+\n+Fixing nightly build failures is also a good way to learn about actual rustc internals.\n+\n ## Contributions\n \n Contributions to Clippy should be made in the form of GitHub pull requests. Each pull request will\n@@ -229,3 +241,5 @@ All code in this repository is under the [Mozilla Public License, 2.0](https://w\n [reg_late_lint_pass]: https://doc.rust-lang.org/nightly/nightly-rustc/rustc_plugin/registry/struct.Registry.html#method.register_late_lint_pass\n [early_lint_pass]: https://doc.rust-lang.org/nightly/nightly-rustc/rustc/lint/trait.EarlyLintPass.html\n [late_lint_pass]: https://doc.rust-lang.org/nightly/nightly-rustc/rustc/lint/trait.LateLintPass.html\n+[toolstate_commit_history]: https://github.com/rust-lang-nursery/rust-toolstate/commits/master\n+[toolstate_commit]: https://github.com/rust-lang-nursery/rust-toolstate/commit/6ce0459f6bfa7c528ae1886492a3e0b5ef0ee547"}]}