{"sha": "6a3ebe6adc58b60cf963b2dd314bc84afd59a0a2", "node_id": "C_kwDOAAsO6NoAKDZhM2ViZTZhZGM1OGI2MGNmOTYzYjJkZDMxNGJjODRhZmQ1OWEwYTI", "commit": {"author": {"name": "Joshua Nelson", "email": "github@jyn.dev", "date": "2022-12-24T02:02:34Z"}, "committer": {"name": "Joshua Nelson", "email": "github@jyn.dev", "date": "2022-12-24T02:10:22Z"}, "message": "Pass `branch.{branch}.remote=origin` to `git submodule update`\n\nThis works around a bug in git itself; see\nhttps://github.com/rust-lang/rust/issues/101144.", "tree": {"sha": "b99b8309768be8cba6d2fa9e7d30214e3be32301", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b99b8309768be8cba6d2fa9e7d30214e3be32301"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6a3ebe6adc58b60cf963b2dd314bc84afd59a0a2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6a3ebe6adc58b60cf963b2dd314bc84afd59a0a2", "html_url": "https://github.com/rust-lang/rust/commit/6a3ebe6adc58b60cf963b2dd314bc84afd59a0a2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6a3ebe6adc58b60cf963b2dd314bc84afd59a0a2/comments", "author": {"login": "jyn514", "id": 23638587, "node_id": "MDQ6VXNlcjIzNjM4NTg3", "avatar_url": "https://avatars.githubusercontent.com/u/23638587?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jyn514", "html_url": "https://github.com/jyn514", "followers_url": "https://api.github.com/users/jyn514/followers", "following_url": "https://api.github.com/users/jyn514/following{/other_user}", "gists_url": "https://api.github.com/users/jyn514/gists{/gist_id}", "starred_url": "https://api.github.com/users/jyn514/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jyn514/subscriptions", "organizations_url": "https://api.github.com/users/jyn514/orgs", "repos_url": "https://api.github.com/users/jyn514/repos", "events_url": "https://api.github.com/users/jyn514/events{/privacy}", "received_events_url": "https://api.github.com/users/jyn514/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jyn514", "id": 23638587, "node_id": "MDQ6VXNlcjIzNjM4NTg3", "avatar_url": "https://avatars.githubusercontent.com/u/23638587?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jyn514", "html_url": "https://github.com/jyn514", "followers_url": "https://api.github.com/users/jyn514/followers", "following_url": "https://api.github.com/users/jyn514/following{/other_user}", "gists_url": "https://api.github.com/users/jyn514/gists{/gist_id}", "starred_url": "https://api.github.com/users/jyn514/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jyn514/subscriptions", "organizations_url": "https://api.github.com/users/jyn514/orgs", "repos_url": "https://api.github.com/users/jyn514/repos", "events_url": "https://api.github.com/users/jyn514/events{/privacy}", "received_events_url": "https://api.github.com/users/jyn514/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "af3e06f1bf4ca49407562b1b84744e27905bea98", "url": "https://api.github.com/repos/rust-lang/rust/commits/af3e06f1bf4ca49407562b1b84744e27905bea98", "html_url": "https://github.com/rust-lang/rust/commit/af3e06f1bf4ca49407562b1b84744e27905bea98"}], "stats": {"total": 26, "additions": 23, "deletions": 3}, "files": [{"sha": "5cdd841cd6ed0b7d64993f57365a209ca142e8b7", "filename": "src/bootstrap/lib.rs", "status": "modified", "additions": 23, "deletions": 3, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/6a3ebe6adc58b60cf963b2dd314bc84afd59a0a2/src%2Fbootstrap%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6a3ebe6adc58b60cf963b2dd314bc84afd59a0a2/src%2Fbootstrap%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Flib.rs?ref=6a3ebe6adc58b60cf963b2dd314bc84afd59a0a2", "patch": "@@ -110,7 +110,7 @@ use std::fs::{self, File};\n use std::io;\n use std::io::ErrorKind;\n use std::path::{Path, PathBuf};\n-use std::process::Command;\n+use std::process::{Command, Stdio};\n use std::str;\n \n use channel::GitInfo;\n@@ -661,12 +661,32 @@ impl Build {\n \n         // Try passing `--progress` to start, then run git again without if that fails.\n         let update = |progress: bool| {\n-            let mut git = Command::new(\"git\");\n+            // Git is buggy and will try to fetch submodules from the tracking branch for *this* repository,\n+            // even though that has no relation to the upstream for the submodule.\n+            let current_branch = {\n+                let output = self\n+                    .config\n+                    .git()\n+                    .args([\"symbolic-ref\", \"--short\", \"HEAD\"])\n+                    .stderr(Stdio::inherit())\n+                    .output();\n+                let output = t!(output);\n+                if output.status.success() {\n+                    Some(String::from_utf8(output.stdout).unwrap().trim().to_owned())\n+                } else {\n+                    None\n+                }\n+            };\n+\n+            let mut git = self.config.git();\n+            if let Some(branch) = current_branch {\n+                git.arg(\"-c\").arg(format!(\"branch.{branch}.remote=origin\"));\n+            }\n             git.args(&[\"submodule\", \"update\", \"--init\", \"--recursive\", \"--depth=1\"]);\n             if progress {\n                 git.arg(\"--progress\");\n             }\n-            git.arg(relative_path).current_dir(&self.config.src);\n+            git.arg(relative_path);\n             git\n         };\n         // NOTE: doesn't use `try_run` because this shouldn't print an error if it fails."}]}