{"sha": "a10fe902d2c7afe3d42e9b00627a6983488521d3", "node_id": "C_kwDOAAsO6NoAKGExMGZlOTAyZDJjN2FmZTNkNDJlOWIwMDYyN2E2OTgzNDg4NTIxZDM", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-05-03T20:42:35Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-05-03T20:42:35Z"}, "message": "Auto merge of #8779 - binggh:easier-needless-late-init, r=llogiq\n\nEasier readability for `needless_late_init` message\n\nCloses #8530\n\nUpdated the lint to use a `MultiSpan`, showing where the `let` statement was first used and where the initialisation statement was done, as in the format described, for easier readability.\n\nWas wondering why, when pushing the span label for the initialisation statement, that sometimes the prior statement above the initialisation statement gets pulled into the output as well - any insight is appreciated!\n\n---\n\nchangelog: [`needless_late_init`]: Now shows the `let` statement where it was first initialized", "tree": {"sha": "8cb315c0df07395438dd0b7ef76a20f93fdde317", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8cb315c0df07395438dd0b7ef76a20f93fdde317"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a10fe902d2c7afe3d42e9b00627a6983488521d3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a10fe902d2c7afe3d42e9b00627a6983488521d3", "html_url": "https://github.com/rust-lang/rust/commit/a10fe902d2c7afe3d42e9b00627a6983488521d3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a10fe902d2c7afe3d42e9b00627a6983488521d3/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "38b7a041cc8b346927b74edd8c7ddccee47a4c93", "url": "https://api.github.com/repos/rust-lang/rust/commits/38b7a041cc8b346927b74edd8c7ddccee47a4c93", "html_url": "https://github.com/rust-lang/rust/commit/38b7a041cc8b346927b74edd8c7ddccee47a4c93"}, {"sha": "7017eb102d71526205b2feded779ff1f26d11da1", "url": "https://api.github.com/repos/rust-lang/rust/commits/7017eb102d71526205b2feded779ff1f26d11da1", "html_url": "https://github.com/rust-lang/rust/commit/7017eb102d71526205b2feded779ff1f26d11da1"}], "stats": {"total": 45, "additions": 34, "deletions": 11}, "files": [{"sha": "b70871b38beab178f63735330657ab8388e2f355", "filename": "clippy_lints/src/needless_late_init.rs", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/a10fe902d2c7afe3d42e9b00627a6983488521d3/clippy_lints%2Fsrc%2Fneedless_late_init.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a10fe902d2c7afe3d42e9b00627a6983488521d3/clippy_lints%2Fsrc%2Fneedless_late_init.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fneedless_late_init.rs?ref=a10fe902d2c7afe3d42e9b00627a6983488521d3", "patch": "@@ -3,7 +3,7 @@ use clippy_utils::path_to_local;\n use clippy_utils::source::snippet_opt;\n use clippy_utils::ty::needs_ordered_drop;\n use clippy_utils::visitors::{expr_visitor, expr_visitor_no_bodies, is_local_used};\n-use rustc_errors::Applicability;\n+use rustc_errors::{Applicability, MultiSpan};\n use rustc_hir::intravisit::Visitor;\n use rustc_hir::{\n     BindingAnnotation, Block, Expr, ExprKind, HirId, Local, LocalSource, MatchSource, Node, Pat, PatKind, Stmt,\n@@ -267,11 +267,14 @@ fn check<'tcx>(\n     match usage.expr.kind {\n         ExprKind::Assign(..) => {\n             let assign = LocalAssign::new(cx, usage.expr, binding_id)?;\n+            let mut msg_span = MultiSpan::from_spans(vec![local_stmt.span, assign.span]);\n+            msg_span.push_span_label(local_stmt.span, \"created here\");\n+            msg_span.push_span_label(assign.span, \"initialised here\");\n \n             span_lint_and_then(\n                 cx,\n                 NEEDLESS_LATE_INIT,\n-                local_stmt.span,\n+                msg_span,\n                 \"unneeded late initialization\",\n                 |diag| {\n                     diag.tool_only_span_suggestion(\n@@ -365,7 +368,6 @@ fn check<'tcx>(\n impl<'tcx> LateLintPass<'tcx> for NeedlessLateInit {\n     fn check_local(&mut self, cx: &LateContext<'tcx>, local: &'tcx Local<'tcx>) {\n         let mut parents = cx.tcx.hir().parent_iter(local.hir_id);\n-\n         if_chain! {\n             if let Local {\n                 init: None,"}, {"sha": "d33a117b288cb5482a5bd0cc87dc446e3f091109", "filename": "tests/ui/needless_late_init.stderr", "status": "modified", "additions": 12, "deletions": 3, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/a10fe902d2c7afe3d42e9b00627a6983488521d3/tests%2Fui%2Fneedless_late_init.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/a10fe902d2c7afe3d42e9b00627a6983488521d3/tests%2Fui%2Fneedless_late_init.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fneedless_late_init.stderr?ref=a10fe902d2c7afe3d42e9b00627a6983488521d3", "patch": "@@ -123,7 +123,10 @@ error: unneeded late initialization\n   --> $DIR/needless_late_init.rs:60:5\n    |\n LL |     let x;\n-   |     ^^^^^^\n+   |     ^^^^^^ created here\n+LL |     let y = SignificantDrop;\n+LL |     x = 1;\n+   |     ^^^^^ initialised here\n    |\n help: declare `x` here\n    |\n@@ -134,7 +137,10 @@ error: unneeded late initialization\n   --> $DIR/needless_late_init.rs:64:5\n    |\n LL |     let x;\n-   |     ^^^^^^\n+   |     ^^^^^^ created here\n+LL |     let y = 1;\n+LL |     x = SignificantDrop;\n+   |     ^^^^^^^^^^^^^^^^^^^ initialised here\n    |\n help: declare `x` here\n    |\n@@ -145,7 +151,10 @@ error: unneeded late initialization\n   --> $DIR/needless_late_init.rs:68:5\n    |\n LL |     let x;\n-   |     ^^^^^^\n+   |     ^^^^^^ created here\n+...\n+LL |     x = SignificantDrop;\n+   |     ^^^^^^^^^^^^^^^^^^^ initialised here\n    |\n help: declare `x` here\n    |"}, {"sha": "8c664309e3e83fe4838fbcfc12d7c5e586109c42", "filename": "tests/ui/needless_late_init_fixable.stderr", "status": "modified", "additions": 17, "deletions": 5, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/a10fe902d2c7afe3d42e9b00627a6983488521d3/tests%2Fui%2Fneedless_late_init_fixable.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/a10fe902d2c7afe3d42e9b00627a6983488521d3/tests%2Fui%2Fneedless_late_init_fixable.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fneedless_late_init_fixable.stderr?ref=a10fe902d2c7afe3d42e9b00627a6983488521d3", "patch": "@@ -2,7 +2,9 @@ error: unneeded late initialization\n   --> $DIR/needless_late_init_fixable.rs:6:5\n    |\n LL |     let a;\n-   |     ^^^^^^\n+   |     ^^^^^^ created here\n+LL |     a = \"zero\";\n+   |     ^^^^^^^^^^ initialised here\n    |\n    = note: `-D clippy::needless-late-init` implied by `-D warnings`\n help: declare `a` here\n@@ -14,7 +16,10 @@ error: unneeded late initialization\n   --> $DIR/needless_late_init_fixable.rs:9:5\n    |\n LL |     let b;\n-   |     ^^^^^^\n+   |     ^^^^^^ created here\n+LL |     let c;\n+LL |     b = 1;\n+   |     ^^^^^ initialised here\n    |\n help: declare `b` here\n    |\n@@ -25,7 +30,10 @@ error: unneeded late initialization\n   --> $DIR/needless_late_init_fixable.rs:10:5\n    |\n LL |     let c;\n-   |     ^^^^^^\n+   |     ^^^^^^ created here\n+LL |     b = 1;\n+LL |     c = 2;\n+   |     ^^^^^ initialised here\n    |\n help: declare `c` here\n    |\n@@ -36,7 +44,9 @@ error: unneeded late initialization\n   --> $DIR/needless_late_init_fixable.rs:14:5\n    |\n LL |     let d: usize;\n-   |     ^^^^^^^^^^^^^\n+   |     ^^^^^^^^^^^^^ created here\n+LL |     d = 1;\n+   |     ^^^^^ initialised here\n    |\n help: declare `d` here\n    |\n@@ -47,7 +57,9 @@ error: unneeded late initialization\n   --> $DIR/needless_late_init_fixable.rs:17:5\n    |\n LL |     let e;\n-   |     ^^^^^^\n+   |     ^^^^^^ created here\n+LL |     e = format!(\"{}\", d);\n+   |     ^^^^^^^^^^^^^^^^^^^^ initialised here\n    |\n help: declare `e` here\n    |"}]}