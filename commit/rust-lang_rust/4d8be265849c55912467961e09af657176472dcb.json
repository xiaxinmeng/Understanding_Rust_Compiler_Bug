{"sha": "4d8be265849c55912467961e09af657176472dcb", "node_id": "MDY6Q29tbWl0NzI0NzEyOjRkOGJlMjY1ODQ5YzU1OTEyNDY3OTYxZTA5YWY2NTcxNzY0NzJkY2I=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2018-08-18T09:42:28Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2018-08-18T09:42:28Z"}, "message": "refactor", "tree": {"sha": "6d1808a89a57db69211a1dd5d4f25c4650da10d7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6d1808a89a57db69211a1dd5d4f25c4650da10d7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4d8be265849c55912467961e09af657176472dcb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4d8be265849c55912467961e09af657176472dcb", "html_url": "https://github.com/rust-lang/rust/commit/4d8be265849c55912467961e09af657176472dcb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4d8be265849c55912467961e09af657176472dcb/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a5eeef0eeed092cb663afc3b0cda2c0df0c7e793", "url": "https://api.github.com/repos/rust-lang/rust/commits/a5eeef0eeed092cb663afc3b0cda2c0df0c7e793", "html_url": "https://github.com/rust-lang/rust/commit/a5eeef0eeed092cb663afc3b0cda2c0df0c7e793"}], "stats": {"total": 36, "additions": 20, "deletions": 16}, "files": [{"sha": "63c4c77cf61c16437fdbe1030e6f7c72a59a5cd4", "filename": "crates/libanalysis/src/lib.rs", "status": "modified", "additions": 17, "deletions": 11, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/4d8be265849c55912467961e09af657176472dcb/crates%2Flibanalysis%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4d8be265849c55912467961e09af657176472dcb/crates%2Flibanalysis%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Flibanalysis%2Fsrc%2Flib.rs?ref=4d8be265849c55912467961e09af657176472dcb", "patch": "@@ -26,7 +26,7 @@ use std::{\n };\n \n use libsyntax2::{\n-    TextUnit, TextRange,\n+    TextUnit, TextRange, SmolStr,\n     ast::{self, AstNode, NameOwner, ParsedFile},\n     SyntaxKind::*,\n };\n@@ -144,7 +144,21 @@ impl World {\n         if let Some(name) = find_node::<ast::Name>(syntax, offset) {\n             if let Some(module) = name.syntax().parent().and_then(ast::Module::cast) {\n                 if module.has_semi() {\n-                    return Ok(self.resolve_module(id, module));\n+                    let file_ids = self.resolve_module(id, module);\n+\n+                    let res = file_ids.into_iter().map(|id| {\n+                        let name = module.name()\n+                            .map(|n| n.text())\n+                            .unwrap_or_else(|| SmolStr::new(\"\"));\n+                        let symbol = FileSymbol {\n+                            name,\n+                            node_range: TextRange::offset_len(0.into(), 0.into()),\n+                            kind: MODULE,\n+                        };\n+                        (id, symbol)\n+                    }).collect();\n+\n+                    return Ok(res);\n                 }\n             }\n         }\n@@ -159,7 +173,7 @@ impl World {\n         self.world_symbols(query)\n     }\n \n-    fn resolve_module(&self, id: FileId, module: ast::Module) -> Vec<(FileId, FileSymbol)> {\n+    fn resolve_module(&self, id: FileId, module: ast::Module) -> Vec<FileId> {\n         let name = match module.name() {\n             Some(name) => name.text(),\n             None => return Vec::new(),\n@@ -170,14 +184,6 @@ impl World {\n         ];\n         paths.iter()\n             .filter_map(|path| self.resolve_relative_path(id, path))\n-            .map(|id| {\n-                let symbol = FileSymbol {\n-                    name: name.clone(),\n-                    node_range: TextRange::offset_len(0.into(), 0.into()),\n-                    kind: MODULE,\n-                };\n-                (id, symbol)\n-            })\n             .collect()\n     }\n "}, {"sha": "55f41c2c57474af26c302584b19301a7f90cc938", "filename": "crates/libeditor/Cargo.toml", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/4d8be265849c55912467961e09af657176472dcb/crates%2Flibeditor%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/4d8be265849c55912467961e09af657176472dcb/crates%2Flibeditor%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Flibeditor%2FCargo.toml?ref=4d8be265849c55912467961e09af657176472dcb", "patch": "@@ -9,7 +9,6 @@ itertools = \"0.7.8\"\n superslice = \"0.1.0\"\n \n libsyntax2 = { path = \"../libsyntax2\" }\n-smol_str = \"0.1.0\"\n \n [dev-dependencies]\n assert_eq_text = { path = \"../assert_eq_text\" }"}, {"sha": "abd104af2badbb99e31b2ac0d3d4e6c85a145354", "filename": "crates/libeditor/src/lib.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/4d8be265849c55912467961e09af657176472dcb/crates%2Flibeditor%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4d8be265849c55912467961e09af657176472dcb/crates%2Flibeditor%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Flibeditor%2Fsrc%2Flib.rs?ref=4d8be265849c55912467961e09af657176472dcb", "patch": "@@ -1,7 +1,6 @@\n extern crate libsyntax2;\n extern crate superslice;\n extern crate itertools;\n-extern crate smol_str;\n \n mod extend_selection;\n mod symbols;"}, {"sha": "b2b05bc6a24c1ab76dadc8608281c7b240b71fe2", "filename": "crates/libeditor/src/symbols.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/4d8be265849c55912467961e09af657176472dcb/crates%2Flibeditor%2Fsrc%2Fsymbols.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4d8be265849c55912467961e09af657176472dcb/crates%2Flibeditor%2Fsrc%2Fsymbols.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Flibeditor%2Fsrc%2Fsymbols.rs?ref=4d8be265849c55912467961e09af657176472dcb", "patch": "@@ -1,6 +1,5 @@\n-use smol_str::SmolStr;\n use libsyntax2::{\n-    SyntaxKind, SyntaxNodeRef, AstNode, ParsedFile,\n+    SyntaxKind, SyntaxNodeRef, AstNode, ParsedFile, SmolStr,\n     ast::{self, NameOwner},\n     algo::{\n         visit::{visitor, Visitor},"}, {"sha": "c078baa3a05a226795bc1b7a5eba5c966040cf5d", "filename": "crates/libsyntax2/src/lib.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/4d8be265849c55912467961e09af657176472dcb/crates%2Flibsyntax2%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4d8be265849c55912467961e09af657176472dcb/crates%2Flibsyntax2%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Flibsyntax2%2Fsrc%2Flib.rs?ref=4d8be265849c55912467961e09af657176472dcb", "patch": "@@ -41,10 +41,11 @@ mod yellow;\n pub mod utils;\n \n pub use {\n+    text_unit::{TextRange, TextUnit},\n+    smol_str::SmolStr,\n     ast::{AstNode, ParsedFile},\n     lexer::{tokenize, Token},\n     syntax_kinds::SyntaxKind,\n-    text_unit::{TextRange, TextUnit},\n     yellow::{SyntaxNode, SyntaxNodeRef, OwnedRoot, RefRoot, TreeRoot, SyntaxError},\n };\n "}]}