{"sha": "1d2308f2ed2c8708f78c5253661ec957f29b503b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjFkMjMwOGYyZWQyYzg3MDhmNzhjNTI1MzY2MWVjOTU3ZjI5YjUwM2I=", "commit": {"author": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2016-08-30T08:39:08Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2016-08-30T08:39:08Z"}, "message": "Rollup merge of #36125 - gavinb:error_msgs_p1, r=jonathandturner\n\nUpdate Error format for E0164, E0165, E0184\n\nPart of #35233\n\nr? @jonathandturner", "tree": {"sha": "9ecd55fffbd5b11c5ff58010e74b98c1bc5c8ec4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9ecd55fffbd5b11c5ff58010e74b98c1bc5c8ec4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1d2308f2ed2c8708f78c5253661ec957f29b503b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1d2308f2ed2c8708f78c5253661ec957f29b503b", "html_url": "https://github.com/rust-lang/rust/commit/1d2308f2ed2c8708f78c5253661ec957f29b503b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1d2308f2ed2c8708f78c5253661ec957f29b503b/comments", "author": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9a3cfe91291c78c8c1e3fc75e274693b523dece6", "url": "https://api.github.com/repos/rust-lang/rust/commits/9a3cfe91291c78c8c1e3fc75e274693b523dece6", "html_url": "https://github.com/rust-lang/rust/commit/9a3cfe91291c78c8c1e3fc75e274693b523dece6"}, {"sha": "2967dcc4d7bf0722fb348092a254aaa12deaa6d8", "url": "https://api.github.com/repos/rust-lang/rust/commits/2967dcc4d7bf0722fb348092a254aaa12deaa6d8", "html_url": "https://github.com/rust-lang/rust/commit/2967dcc4d7bf0722fb348092a254aaa12deaa6d8"}], "stats": {"total": 18, "additions": 14, "deletions": 4}, "files": [{"sha": "e71a780dd89bca7e6e2649b16befbcc8cb61ca29", "filename": "src/librustc_const_eval/check_match.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/1d2308f2ed2c8708f78c5253661ec957f29b503b/src%2Flibrustc_const_eval%2Fcheck_match.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1d2308f2ed2c8708f78c5253661ec957f29b503b/src%2Flibrustc_const_eval%2Fcheck_match.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_const_eval%2Fcheck_match.rs?ref=1d2308f2ed2c8708f78c5253661ec957f29b503b", "patch": "@@ -324,7 +324,10 @@ fn check_arms(cx: &MatchCheckCtxt,\n                             let &(ref first_arm_pats, _) = &arms[0];\n                             let first_pat = &first_arm_pats[0];\n                             let span = first_pat.span;\n-                            span_err!(cx.tcx.sess, span, E0165, \"irrefutable while-let pattern\");\n+                            struct_span_err!(cx.tcx.sess, span, E0165,\n+                                             \"irrefutable while-let pattern\")\n+                                .span_label(span, &format!(\"irrefutable pattern\"))\n+                                .emit();\n                         },\n \n                         hir::MatchSource::ForLoopDesugar => {"}, {"sha": "225468cb9f40c40d7cd98db80ed56efcc4c2b50e", "filename": "src/librustc_typeck/check/_match.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/1d2308f2ed2c8708f78c5253661ec957f29b503b/src%2Flibrustc_typeck%2Fcheck%2F_match.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1d2308f2ed2c8708f78c5253661ec957f29b503b/src%2Flibrustc_typeck%2Fcheck%2F_match.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2F_match.rs?ref=1d2308f2ed2c8708f78c5253661ec957f29b503b", "patch": "@@ -574,7 +574,8 @@ impl<'a, 'gcx, 'tcx> FnCtxt<'a, 'gcx, 'tcx> {\n                 tcx.sess.add_lint(lint::builtin::MATCH_OF_UNIT_VARIANT_VIA_PAREN_DOTDOT,\n                                   pat.id, pat.span, msg);\n             } else {\n-                span_err!(tcx.sess, pat.span, E0164, \"{}\", msg);\n+                struct_span_err!(tcx.sess, pat.span, E0164, \"{}\", msg)\n+                    .span_label(pat.span, &format!(\"not a tuple variant or struct\")).emit();\n                 on_error();\n             }\n         };"}, {"sha": "f743ef21875611434fb9de7de52911f2f8bf2d49", "filename": "src/librustc_typeck/coherence/mod.rs", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/1d2308f2ed2c8708f78c5253661ec957f29b503b/src%2Flibrustc_typeck%2Fcoherence%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1d2308f2ed2c8708f78c5253661ec957f29b503b/src%2Flibrustc_typeck%2Fcoherence%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcoherence%2Fmod.rs?ref=1d2308f2ed2c8708f78c5253661ec957f29b503b", "patch": "@@ -348,9 +348,11 @@ impl<'a, 'gcx, 'tcx> CoherenceChecker<'a, 'gcx, 'tcx> {\n                         .emit();\n                 }\n                 Err(CopyImplementationError::HasDestructor) => {\n-                    span_err!(tcx.sess, span, E0184,\n+                    struct_span_err!(tcx.sess, span, E0184,\n                               \"the trait `Copy` may not be implemented for this type; \\\n-                               the type has a destructor\");\n+                               the type has a destructor\")\n+                        .span_label(span, &format!(\"Copy not allowed on types with destructors\"))\n+                        .emit();\n                 }\n             }\n         });"}, {"sha": "1665a80bead770dc7293ff67486a1e22953b5b78", "filename": "src/test/compile-fail/E0164.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/1d2308f2ed2c8708f78c5253661ec957f29b503b/src%2Ftest%2Fcompile-fail%2FE0164.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1d2308f2ed2c8708f78c5253661ec957f29b503b/src%2Ftest%2Fcompile-fail%2FE0164.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2FE0164.rs?ref=1d2308f2ed2c8708f78c5253661ec957f29b503b", "patch": "@@ -13,6 +13,7 @@ enum Foo { B { i: u32 } }\n fn bar(foo: Foo) -> u32 {\n     match foo {\n         Foo::B(i) => i, //~ ERROR E0164\n+                        //~| NOTE not a tuple variant or struct\n     }\n }\n "}, {"sha": "142635fc6ee4543adc577f8e4aacd2d410991dcc", "filename": "src/test/compile-fail/E0165.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/1d2308f2ed2c8708f78c5253661ec957f29b503b/src%2Ftest%2Fcompile-fail%2FE0165.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1d2308f2ed2c8708f78c5253661ec957f29b503b/src%2Ftest%2Fcompile-fail%2FE0165.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2FE0165.rs?ref=1d2308f2ed2c8708f78c5253661ec957f29b503b", "patch": "@@ -13,6 +13,7 @@ struct Irrefutable(i32);\n fn main() {\n     let irr = Irrefutable(0);\n     while let Irrefutable(x) = irr { //~ ERROR E0165\n+                                     //~| irrefutable pattern\n         // ...\n     }\n }"}, {"sha": "9ec2eeba5cc5f5a0ff49c0383d0dc1de0bd9466e", "filename": "src/test/compile-fail/E0184.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1d2308f2ed2c8708f78c5253661ec957f29b503b/src%2Ftest%2Fcompile-fail%2FE0184.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1d2308f2ed2c8708f78c5253661ec957f29b503b/src%2Ftest%2Fcompile-fail%2FE0184.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2FE0184.rs?ref=1d2308f2ed2c8708f78c5253661ec957f29b503b", "patch": "@@ -9,6 +9,8 @@\n // except according to those terms.\n \n #[derive(Copy)] //~ ERROR E0184\n+                //~| NOTE Copy not allowed on types with destructors\n+                //~| NOTE in this expansion of #[derive(Copy)]\n struct Foo;\n \n impl Drop for Foo {"}]}