{"sha": "5e33c5f0ff92ca30b4d20803b6f919153336180d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjVlMzNjNWYwZmY5MmNhMzBiNGQyMDgwM2I2ZjkxOTE1MzMzNjE4MGQ=", "commit": {"author": {"name": "Nick Cameron", "email": "ncameron@mozilla.com", "date": "2017-01-25T04:00:19Z"}, "committer": {"name": "Nick Cameron", "email": "ncameron@mozilla.com", "date": "2017-01-25T04:00:19Z"}, "message": "save-analysis: walk paths\n\nCatches generic types in paths", "tree": {"sha": "777318bf225a967d46be69dd209cb827d2319c94", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/777318bf225a967d46be69dd209cb827d2319c94"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5e33c5f0ff92ca30b4d20803b6f919153336180d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5e33c5f0ff92ca30b4d20803b6f919153336180d", "html_url": "https://github.com/rust-lang/rust/commit/5e33c5f0ff92ca30b4d20803b6f919153336180d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5e33c5f0ff92ca30b4d20803b6f919153336180d/comments", "author": {"login": "nrc", "id": 762626, "node_id": "MDQ6VXNlcjc2MjYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/762626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nrc", "html_url": "https://github.com/nrc", "followers_url": "https://api.github.com/users/nrc/followers", "following_url": "https://api.github.com/users/nrc/following{/other_user}", "gists_url": "https://api.github.com/users/nrc/gists{/gist_id}", "starred_url": "https://api.github.com/users/nrc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nrc/subscriptions", "organizations_url": "https://api.github.com/users/nrc/orgs", "repos_url": "https://api.github.com/users/nrc/repos", "events_url": "https://api.github.com/users/nrc/events{/privacy}", "received_events_url": "https://api.github.com/users/nrc/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nrc", "id": 762626, "node_id": "MDQ6VXNlcjc2MjYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/762626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nrc", "html_url": "https://github.com/nrc", "followers_url": "https://api.github.com/users/nrc/followers", "following_url": "https://api.github.com/users/nrc/following{/other_user}", "gists_url": "https://api.github.com/users/nrc/gists{/gist_id}", "starred_url": "https://api.github.com/users/nrc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nrc/subscriptions", "organizations_url": "https://api.github.com/users/nrc/orgs", "repos_url": "https://api.github.com/users/nrc/repos", "events_url": "https://api.github.com/users/nrc/events{/privacy}", "received_events_url": "https://api.github.com/users/nrc/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "659859c537b5d867da5543bbe8a09f1323daa52f", "url": "https://api.github.com/repos/rust-lang/rust/commits/659859c537b5d867da5543bbe8a09f1323daa52f", "html_url": "https://github.com/rust-lang/rust/commit/659859c537b5d867da5543bbe8a09f1323daa52f"}], "stats": {"total": 1, "additions": 1, "deletions": 0}, "files": [{"sha": "e5c41d08e1f67a5fd848b73b5faf675a04e5f45b", "filename": "src/librustc_save_analysis/dump_visitor.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/5e33c5f0ff92ca30b4d20803b6f919153336180d/src%2Flibrustc_save_analysis%2Fdump_visitor.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5e33c5f0ff92ca30b4d20803b6f919153336180d/src%2Flibrustc_save_analysis%2Fdump_visitor.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_save_analysis%2Fdump_visitor.rs?ref=5e33c5f0ff92ca30b4d20803b6f919153336180d", "patch": "@@ -1359,6 +1359,7 @@ impl<'l, 'tcx: 'l, 'll, D: Dump +'ll> Visitor<'l> for DumpVisitor<'l, 'tcx, 'll,\n                 }\n \n                 self.write_sub_paths_truncated(path);\n+                visit::walk_path(self, path);\n             }\n             ast::TyKind::Array(ref element, ref length) => {\n                 self.visit_ty(element);"}]}