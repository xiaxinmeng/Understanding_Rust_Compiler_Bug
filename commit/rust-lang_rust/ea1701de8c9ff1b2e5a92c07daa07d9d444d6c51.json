{"sha": "ea1701de8c9ff1b2e5a92c07daa07d9d444d6c51", "node_id": "MDY6Q29tbWl0NzI0NzEyOmVhMTcwMWRlOGM5ZmYxYjJlNWE5MmMwN2RhYTA3ZDlkNDQ0ZDZjNTE=", "commit": {"author": {"name": "Tim Chevalier", "email": "chevalier@alum.wellesley.edu", "date": "2011-05-18T22:38:11Z"}, "committer": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2011-05-19T18:40:16Z"}, "message": "Add a set_all function in bitv that's the inverse of clear", "tree": {"sha": "92c5a5ec6417de1d94fe3e91d44f3330f16fff5b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/92c5a5ec6417de1d94fe3e91d44f3330f16fff5b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ea1701de8c9ff1b2e5a92c07daa07d9d444d6c51", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ea1701de8c9ff1b2e5a92c07daa07d9d444d6c51", "html_url": "https://github.com/rust-lang/rust/commit/ea1701de8c9ff1b2e5a92c07daa07d9d444d6c51", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ea1701de8c9ff1b2e5a92c07daa07d9d444d6c51/comments", "author": {"login": "catamorphism", "id": 427212, "node_id": "MDQ6VXNlcjQyNzIxMg==", "avatar_url": "https://avatars.githubusercontent.com/u/427212?v=4", "gravatar_id": "", "url": "https://api.github.com/users/catamorphism", "html_url": "https://github.com/catamorphism", "followers_url": "https://api.github.com/users/catamorphism/followers", "following_url": "https://api.github.com/users/catamorphism/following{/other_user}", "gists_url": "https://api.github.com/users/catamorphism/gists{/gist_id}", "starred_url": "https://api.github.com/users/catamorphism/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/catamorphism/subscriptions", "organizations_url": "https://api.github.com/users/catamorphism/orgs", "repos_url": "https://api.github.com/users/catamorphism/repos", "events_url": "https://api.github.com/users/catamorphism/events{/privacy}", "received_events_url": "https://api.github.com/users/catamorphism/received_events", "type": "User", "site_admin": false}, "committer": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8cbdaf4f93ecc775727d334890014ca929ad2b36", "url": "https://api.github.com/repos/rust-lang/rust/commits/8cbdaf4f93ecc775727d334890014ca929ad2b36", "html_url": "https://github.com/rust-lang/rust/commit/8cbdaf4f93ecc775727d334890014ca929ad2b36"}], "stats": {"total": 7, "additions": 6, "deletions": 1}, "files": [{"sha": "5ea8e456684c7a3a2408300b9129540f3803c1ee", "filename": "src/lib/bitv.rs", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/ea1701de8c9ff1b2e5a92c07daa07d9d444d6c51/src%2Flib%2Fbitv.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ea1701de8c9ff1b2e5a92c07daa07d9d444d6c51/src%2Flib%2Fbitv.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flib%2Fbitv.rs?ref=ea1701de8c9ff1b2e5a92c07daa07d9d444d6c51", "patch": "@@ -5,7 +5,6 @@\n \n // FIXME: Almost all the functions in this module should be state fns, but the\n //        effect system isn't currently working correctly.\n-\n state type t = rec(vec[mutable uint] storage, uint nbits);\n \n // FIXME: this should be a constant once they work\n@@ -114,6 +113,12 @@ fn clear(&t v) {\n     }\n }\n \n+fn set_all(&t v) {\n+    for each (uint i in _uint::range(0u, v.nbits)) {\n+        set(v, i, true);\n+    }\n+}\n+\n fn invert(&t v) {\n     for each (uint i in uint::range(0u, vec::len(v.storage))) {\n         v.storage.(i) = ~v.storage.(i);"}]}