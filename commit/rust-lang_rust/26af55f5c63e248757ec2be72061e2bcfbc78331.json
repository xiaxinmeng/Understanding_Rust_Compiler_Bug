{"sha": "26af55f5c63e248757ec2be72061e2bcfbc78331", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI2YWY1NWY1YzYzZTI0ODc1N2VjMmJlNzIwNjFlMmJjZmJjNzgzMzE=", "commit": {"author": {"name": "Mara Bos", "email": "m-ou.se@m-ou.se", "date": "2020-12-07T20:23:50Z"}, "committer": {"name": "Mara Bos", "email": "m-ou.se@m-ou.se", "date": "2021-02-04T10:30:42Z"}, "message": "Improve documentation of Iterator::{fold, reduce}.", "tree": {"sha": "5854fefb539e9d75b3a5347402ca1fcf3f15eaa8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5854fefb539e9d75b3a5347402ca1fcf3f15eaa8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/26af55f5c63e248757ec2be72061e2bcfbc78331", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/26af55f5c63e248757ec2be72061e2bcfbc78331", "html_url": "https://github.com/rust-lang/rust/commit/26af55f5c63e248757ec2be72061e2bcfbc78331", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/26af55f5c63e248757ec2be72061e2bcfbc78331/comments", "author": {"login": "m-ou-se", "id": 783247, "node_id": "MDQ6VXNlcjc4MzI0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/783247?v=4", "gravatar_id": "", "url": "https://api.github.com/users/m-ou-se", "html_url": "https://github.com/m-ou-se", "followers_url": "https://api.github.com/users/m-ou-se/followers", "following_url": "https://api.github.com/users/m-ou-se/following{/other_user}", "gists_url": "https://api.github.com/users/m-ou-se/gists{/gist_id}", "starred_url": "https://api.github.com/users/m-ou-se/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/m-ou-se/subscriptions", "organizations_url": "https://api.github.com/users/m-ou-se/orgs", "repos_url": "https://api.github.com/users/m-ou-se/repos", "events_url": "https://api.github.com/users/m-ou-se/events{/privacy}", "received_events_url": "https://api.github.com/users/m-ou-se/received_events", "type": "User", "site_admin": false}, "committer": {"login": "m-ou-se", "id": 783247, "node_id": "MDQ6VXNlcjc4MzI0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/783247?v=4", "gravatar_id": "", "url": "https://api.github.com/users/m-ou-se", "html_url": "https://github.com/m-ou-se", "followers_url": "https://api.github.com/users/m-ou-se/followers", "following_url": "https://api.github.com/users/m-ou-se/following{/other_user}", "gists_url": "https://api.github.com/users/m-ou-se/gists{/gist_id}", "starred_url": "https://api.github.com/users/m-ou-se/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/m-ou-se/subscriptions", "organizations_url": "https://api.github.com/users/m-ou-se/orgs", "repos_url": "https://api.github.com/users/m-ou-se/repos", "events_url": "https://api.github.com/users/m-ou-se/events{/privacy}", "received_events_url": "https://api.github.com/users/m-ou-se/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5c056ed2f5d118cfd5d936b10a9c34d8813a6c09", "url": "https://api.github.com/repos/rust-lang/rust/commits/5c056ed2f5d118cfd5d936b10a9c34d8813a6c09", "html_url": "https://github.com/rust-lang/rust/commit/5c056ed2f5d118cfd5d936b10a9c34d8813a6c09"}], "stats": {"total": 21, "additions": 16, "deletions": 5}, "files": [{"sha": "648895e12f1dd43ddda5435838a90a42071fc81b", "filename": "library/core/src/iter/traits/iterator.rs", "status": "modified", "additions": 16, "deletions": 5, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/26af55f5c63e248757ec2be72061e2bcfbc78331/library%2Fcore%2Fsrc%2Fiter%2Ftraits%2Fiterator.rs", "raw_url": "https://github.com/rust-lang/rust/raw/26af55f5c63e248757ec2be72061e2bcfbc78331/library%2Fcore%2Fsrc%2Fiter%2Ftraits%2Fiterator.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fiter%2Ftraits%2Fiterator.rs?ref=26af55f5c63e248757ec2be72061e2bcfbc78331", "patch": "@@ -2028,7 +2028,8 @@ pub trait Iterator {\n         self.try_fold((), call(f))\n     }\n \n-    /// An iterator method that applies a function, producing a single, final value.\n+    /// Folds every element into an accumulator by applying an operation,\n+    /// returning the final result.\n     ///\n     /// `fold()` takes two arguments: an initial value, and a closure with two\n     /// arguments: an 'accumulator', and an element. The closure returns the value that\n@@ -2049,6 +2050,9 @@ pub trait Iterator {\n     /// may not terminate for infinite iterators, even on traits for which a\n     /// result is determinable in finite time.\n     ///\n+    /// Note: [`reduce()`] can be used to use the first element as the initial\n+    /// value, if the accumulator type and item type is the same.\n+    ///\n     /// # Note to Implementors\n     ///\n     /// Several of the other (forward) methods have default implementations in\n@@ -2104,6 +2108,8 @@ pub trait Iterator {\n     /// // they're the same\n     /// assert_eq!(result, result2);\n     /// ```\n+    ///\n+    /// [`reduce()`]: Iterator::reduce\n     #[doc(alias = \"reduce\")]\n     #[doc(alias = \"inject\")]\n     #[inline]\n@@ -2120,10 +2126,15 @@ pub trait Iterator {\n         accum\n     }\n \n-    /// The same as [`fold()`], but uses the first element in the\n-    /// iterator as the initial value, folding every subsequent element into it.\n-    /// If the iterator is empty, return [`None`]; otherwise, return the result\n-    /// of the fold.\n+    /// Reduces the elements to a single one, by repeatedly applying a reducing\n+    /// operation.\n+    ///\n+    /// If the iterator is empty, returns [`None`]; otherwise, returns the\n+    /// result of the reduction.\n+    ///\n+    /// For iterators with at least one element, this is the same as [`fold()`]\n+    /// with the first element of the iterator as the initial value, folding\n+    /// every subsequent element into it.\n     ///\n     /// [`fold()`]: Iterator::fold\n     ///"}]}