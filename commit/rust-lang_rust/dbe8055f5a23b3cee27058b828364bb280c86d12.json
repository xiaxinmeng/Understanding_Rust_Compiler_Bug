{"sha": "dbe8055f5a23b3cee27058b828364bb280c86d12", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRiZTgwNTVmNWEyM2IzY2VlMjcwNThiODI4MzY0YmIyODBjODZkMTI=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2017-11-06T18:04:13Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2017-11-06T18:04:13Z"}, "message": "Auto merge of #45322 - infinity0:master, r=alexcrichton\n\nWhen cross-compiling, also build target-arch tarballs for libstd. (Closes: #42320)\n\nHalf of the logic is actually in there already in install.rs:install_std but it fails with an error like:\n\nsh: 0: Can't open /<<BUILDDIR>>/rustc-1.21.0+dfsg1/build/tmp/dist/rust-std-1.21.0-powerpc64le-unknown-linux-gnu/install.sh\n\nbecause the target-arch dist tarball wasn't built as well. This commit fixes that so the overall install works.\n\nThere is one minor bug in the existing code which this commit doesn't fix - the install.log from multiple runs of the installer gets clobbered, which seems like it might interfere with the uninstall process (I didn't look very deeply into this, because it doesn't affect what I need to do.) The actual installed files under DESTDIR seem fine though - either they are installed under an arch-specific path, or the multiple runs will clobber the same path with the same arch-independent file.", "tree": {"sha": "d79d01d504133cf458e8c43d025d6f49c77f5f8c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d79d01d504133cf458e8c43d025d6f49c77f5f8c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/dbe8055f5a23b3cee27058b828364bb280c86d12", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/dbe8055f5a23b3cee27058b828364bb280c86d12", "html_url": "https://github.com/rust-lang/rust/commit/dbe8055f5a23b3cee27058b828364bb280c86d12", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/dbe8055f5a23b3cee27058b828364bb280c86d12/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "58557fafae060c500394d5df13cd0cf68170903e", "url": "https://api.github.com/repos/rust-lang/rust/commits/58557fafae060c500394d5df13cd0cf68170903e", "html_url": "https://github.com/rust-lang/rust/commit/58557fafae060c500394d5df13cd0cf68170903e"}, {"sha": "32cf6e64c1c0437521fa13faff6359e435e490ef", "url": "https://api.github.com/repos/rust-lang/rust/commits/32cf6e64c1c0437521fa13faff6359e435e490ef", "html_url": "https://github.com/rust-lang/rust/commit/32cf6e64c1c0437521fa13faff6359e435e490ef"}], "stats": {"total": 18, "additions": 9, "deletions": 9}, "files": [{"sha": "5ca9cb5e521f3d276665f9391d40f48f8a667d34", "filename": "src/bootstrap/install.rs", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/dbe8055f5a23b3cee27058b828364bb280c86d12/src%2Fbootstrap%2Finstall.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dbe8055f5a23b3cee27058b828364bb280c86d12/src%2Fbootstrap%2Finstall.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Finstall.rs?ref=dbe8055f5a23b3cee27058b828364bb280c86d12", "patch": "@@ -27,10 +27,8 @@ pub fn install_docs(builder: &Builder, stage: u32, host: Interned<String>) {\n     install_sh(builder, \"docs\", \"rust-docs\", stage, Some(host));\n }\n \n-pub fn install_std(builder: &Builder, stage: u32) {\n-    for target in &builder.build.targets {\n-        install_sh(builder, \"std\", \"rust-std\", stage, Some(*target));\n-    }\n+pub fn install_std(builder: &Builder, stage: u32, target: Interned<String>) {\n+    install_sh(builder, \"std\", \"rust-std\", stage, Some(target));\n }\n \n pub fn install_cargo(builder: &Builder, stage: u32, host: Interned<String>) {\n@@ -175,11 +173,13 @@ install!((self, builder, _config),\n         install_docs(builder, self.stage, self.target);\n     };\n     Std, \"src/libstd\", true, only_hosts: true, {\n-        builder.ensure(dist::Std {\n-            compiler: builder.compiler(self.stage, self.host),\n-            target: self.target\n-        });\n-        install_std(builder, self.stage);\n+        for target in &builder.build.targets {\n+            builder.ensure(dist::Std {\n+                compiler: builder.compiler(self.stage, self.host),\n+                target: *target\n+            });\n+            install_std(builder, self.stage, *target);\n+        }\n     };\n     Cargo, \"cargo\", _config.extended, only_hosts: true, {\n         builder.ensure(dist::Cargo { stage: self.stage, target: self.target });"}]}