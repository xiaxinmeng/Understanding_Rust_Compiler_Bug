{"sha": "117fa1de982da53977692c4636d58730c8a75b10", "node_id": "MDY6Q29tbWl0NzI0NzEyOjExN2ZhMWRlOTgyZGE1Mzk3NzY5MmM0NjM2ZDU4NzMwYzhhNzViMTA=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-07-28T19:19:59Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-07-28T19:19:59Z"}, "message": "Rollup merge of #63053 - kornelski:clockdrift, r=shepmaster\n\nSystemTime docs: recommend Instant for elapsed time\n\nIntroduction to `SystemTime` mentions problems with non-monotonic clocks, but individual methods don't.\n\nFor benefit of users who jump directly to method's documentation, also recommend `Instant` in `elapsed` and `duration_since`.\n\n`SystemTime::elapsed()` docs overpromised the elapsed time. It's not elapsed time, but a difference between two clocks.", "tree": {"sha": "5ea0c56491604c6988663164bfd067e6550615cc", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5ea0c56491604c6988663164bfd067e6550615cc"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/117fa1de982da53977692c4636d58730c8a75b10", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJdPfVfCRBK7hj4Ov3rIwAAdHIIAHkgY1aMyP6ajAM5SMhLvS1x\ngm8LsyL+OLCU/YmwYG4xGUr5seDc0uzk8z0PROfkEnDVQ+F34vMAWxAG2n8I3EAW\ns4JdEy+gyjVJm0dCxC7siWca5xeQ0um9qDLiXbDajASi9iWx3Q0p/iFbb8TQrsM4\nzyRUo5n+J63m1CdyN9uovytG525FeS4stkV2IVtky4hSefnFgeOtkGMGPNrl5TtI\n4i3cTGBwqjpRrZvuqrd7kjQzpfw0/71WGp5DMGXItA3mdQazjibdhdoBBMi4yIOh\nVAzLIZb+WOKrPDw7iBbHh+H3bVGkoMlsKcxI0PY+lPar2ag8irQE/N7J08y7afs=\n=ZJtz\n-----END PGP SIGNATURE-----\n", "payload": "tree 5ea0c56491604c6988663164bfd067e6550615cc\nparent a3cae5740cca893204c4d6d9fe43506f0eec8441\nparent 55c07b39ae89408c08de4781b2051cc4c7cc7b20\nauthor Mazdak Farrokhzad <twingoow@gmail.com> 1564341599 +0200\ncommitter GitHub <noreply@github.com> 1564341599 +0200\n\nRollup merge of #63053 - kornelski:clockdrift, r=shepmaster\n\nSystemTime docs: recommend Instant for elapsed time\n\nIntroduction to `SystemTime` mentions problems with non-monotonic clocks, but individual methods don't.\n\nFor benefit of users who jump directly to method's documentation, also recommend `Instant` in `elapsed` and `duration_since`.\n\n`SystemTime::elapsed()` docs overpromised the elapsed time. It's not elapsed time, but a difference between two clocks.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/117fa1de982da53977692c4636d58730c8a75b10", "html_url": "https://github.com/rust-lang/rust/commit/117fa1de982da53977692c4636d58730c8a75b10", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/117fa1de982da53977692c4636d58730c8a75b10/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a3cae5740cca893204c4d6d9fe43506f0eec8441", "url": "https://api.github.com/repos/rust-lang/rust/commits/a3cae5740cca893204c4d6d9fe43506f0eec8441", "html_url": "https://github.com/rust-lang/rust/commit/a3cae5740cca893204c4d6d9fe43506f0eec8441"}, {"sha": "55c07b39ae89408c08de4781b2051cc4c7cc7b20", "url": "https://api.github.com/repos/rust-lang/rust/commits/55c07b39ae89408c08de4781b2051cc4c7cc7b20", "html_url": "https://github.com/rust-lang/rust/commit/55c07b39ae89408c08de4781b2051cc4c7cc7b20"}], "stats": {"total": 10, "additions": 8, "deletions": 2}, "files": [{"sha": "98371b9ba3d7e5b52624e368a8d032b44bae20bb", "filename": "src/libstd/time.rs", "status": "modified", "additions": 8, "deletions": 2, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/117fa1de982da53977692c4636d58730c8a75b10/src%2Flibstd%2Ftime.rs", "raw_url": "https://github.com/rust-lang/rust/raw/117fa1de982da53977692c4636d58730c8a75b10/src%2Flibstd%2Ftime.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Ftime.rs?ref=117fa1de982da53977692c4636d58730c8a75b10", "patch": "@@ -396,6 +396,7 @@ impl SystemTime {\n     /// This function may fail because measurements taken earlier are not\n     /// guaranteed to always be before later measurements (due to anomalies such\n     /// as the system clock being adjusted either forwards or backwards).\n+    /// [`Instant`] can be used to measure elapsed time without this risk of failure.\n     ///\n     /// If successful, [`Ok`]`(`[`Duration`]`)` is returned where the duration represents\n     /// the amount of time elapsed from the specified measurement to this one.\n@@ -406,6 +407,7 @@ impl SystemTime {\n     /// [`Ok`]: ../../std/result/enum.Result.html#variant.Ok\n     /// [`Duration`]: ../../std/time/struct.Duration.html\n     /// [`Err`]: ../../std/result/enum.Result.html#variant.Err\n+    /// [`Instant`]: ../../std/time/struct.Instant.html\n     ///\n     /// # Examples\n     ///\n@@ -414,7 +416,7 @@ impl SystemTime {\n     ///\n     /// let sys_time = SystemTime::now();\n     /// let difference = sys_time.duration_since(sys_time)\n-    ///                          .expect(\"SystemTime::duration_since failed\");\n+    ///                          .expect(\"Clock may have gone backwards\");\n     /// println!(\"{:?}\", difference);\n     /// ```\n     #[stable(feature = \"time2\", since = \"1.8.0\")]\n@@ -423,20 +425,24 @@ impl SystemTime {\n         self.0.sub_time(&earlier.0).map_err(SystemTimeError)\n     }\n \n-    /// Returns the amount of time elapsed since this system time was created.\n+    /// Returns the difference between the clock time when this\n+    /// system time was created, and the current clock time.\n     ///\n     /// This function may fail as the underlying system clock is susceptible to\n     /// drift and updates (e.g., the system clock could go backwards), so this\n     /// function may not always succeed. If successful, [`Ok`]`(`[`Duration`]`)` is\n     /// returned where the duration represents the amount of time elapsed from\n     /// this time measurement to the current time.\n     ///\n+    /// To measure elapsed time reliably, use [`Instant`] instead.\n+    ///\n     /// Returns an [`Err`] if `self` is later than the current system time, and\n     /// the error contains how far from the current system time `self` is.\n     ///\n     /// [`Ok`]: ../../std/result/enum.Result.html#variant.Ok\n     /// [`Duration`]: ../../std/time/struct.Duration.html\n     /// [`Err`]: ../../std/result/enum.Result.html#variant.Err\n+    /// [`Instant`]: ../../std/time/struct.Instant.html\n     ///\n     /// # Examples\n     ///"}]}