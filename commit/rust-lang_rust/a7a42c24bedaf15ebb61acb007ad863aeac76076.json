{"sha": "a7a42c24bedaf15ebb61acb007ad863aeac76076", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE3YTQyYzI0YmVkYWYxNWViYjYxYWNiMDA3YWQ4NjNhZWFjNzYwNzY=", "commit": {"author": {"name": "Michael Sullivan", "email": "sully@msully.net", "date": "2011-05-27T18:59:19Z"}, "committer": {"name": "Michael Sullivan", "email": "sully@msully.net", "date": "2011-05-27T19:01:20Z"}, "message": "Change the syntax for RECV from \"var <- port\" to \"port |> var\".", "tree": {"sha": "cb0fc85d058228799f2bb8221caccbd1f06abf24", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/cb0fc85d058228799f2bb8221caccbd1f06abf24"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a7a42c24bedaf15ebb61acb007ad863aeac76076", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a7a42c24bedaf15ebb61acb007ad863aeac76076", "html_url": "https://github.com/rust-lang/rust/commit/a7a42c24bedaf15ebb61acb007ad863aeac76076", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a7a42c24bedaf15ebb61acb007ad863aeac76076/comments", "author": {"login": "msullivan", "id": 340349, "node_id": "MDQ6VXNlcjM0MDM0OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/340349?v=4", "gravatar_id": "", "url": "https://api.github.com/users/msullivan", "html_url": "https://github.com/msullivan", "followers_url": "https://api.github.com/users/msullivan/followers", "following_url": "https://api.github.com/users/msullivan/following{/other_user}", "gists_url": "https://api.github.com/users/msullivan/gists{/gist_id}", "starred_url": "https://api.github.com/users/msullivan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/msullivan/subscriptions", "organizations_url": "https://api.github.com/users/msullivan/orgs", "repos_url": "https://api.github.com/users/msullivan/repos", "events_url": "https://api.github.com/users/msullivan/events{/privacy}", "received_events_url": "https://api.github.com/users/msullivan/received_events", "type": "User", "site_admin": false}, "committer": {"login": "msullivan", "id": 340349, "node_id": "MDQ6VXNlcjM0MDM0OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/340349?v=4", "gravatar_id": "", "url": "https://api.github.com/users/msullivan", "html_url": "https://github.com/msullivan", "followers_url": "https://api.github.com/users/msullivan/followers", "following_url": "https://api.github.com/users/msullivan/following{/other_user}", "gists_url": "https://api.github.com/users/msullivan/gists{/gist_id}", "starred_url": "https://api.github.com/users/msullivan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/msullivan/subscriptions", "organizations_url": "https://api.github.com/users/msullivan/orgs", "repos_url": "https://api.github.com/users/msullivan/repos", "events_url": "https://api.github.com/users/msullivan/events{/privacy}", "received_events_url": "https://api.github.com/users/msullivan/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2119e3b5b97da6d81f0f061814b0e1e6f274cdf7", "url": "https://api.github.com/repos/rust-lang/rust/commits/2119e3b5b97da6d81f0f061814b0e1e6f274cdf7", "html_url": "https://github.com/rust-lang/rust/commit/2119e3b5b97da6d81f0f061814b0e1e6f274cdf7"}], "stats": {"total": 160, "additions": 80, "deletions": 80}, "files": [{"sha": "fc1717240d265e42bcb0427a65b7fe83e39d54f3", "filename": "src/comp/front/parser.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/a7a42c24bedaf15ebb61acb007ad863aeac76076/src%2Fcomp%2Ffront%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a7a42c24bedaf15ebb61acb007ad863aeac76076/src%2Fcomp%2Ffront%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Ffront%2Fparser.rs?ref=a7a42c24bedaf15ebb61acb007ad863aeac76076", "patch": "@@ -1256,11 +1256,11 @@ fn parse_assign_expr(&parser p) -> @ast::expr {\n             ret @spanned(lo, rhs.span.hi,\n                          ast::expr_send(lhs, rhs, p.get_ann()));\n         }\n-        case (token::LARROW) {\n+        case (token::RECV) {\n             p.bump();\n             auto rhs = parse_expr(p);\n             ret @spanned(lo, rhs.span.hi,\n-                         ast::expr_recv(lhs, rhs, p.get_ann()));\n+                         ast::expr_recv(rhs, lhs, p.get_ann()));\n         }\n         case (_) { /* fall through */ }\n     }"}, {"sha": "302172303577ff3c864f29777eb3bbd89a677036", "filename": "src/comp/pretty/pprust.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/a7a42c24bedaf15ebb61acb007ad863aeac76076/src%2Fcomp%2Fpretty%2Fpprust.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a7a42c24bedaf15ebb61acb007ad863aeac76076/src%2Fcomp%2Fpretty%2Fpprust.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fpretty%2Fpprust.rs?ref=a7a42c24bedaf15ebb61acb007ad863aeac76076", "patch": "@@ -617,10 +617,10 @@ fn print_expr(ps s, &@ast::expr expr) {\n             print_expr(s, rhs);\n         }\n         case (ast::expr_recv(?lhs, ?rhs, _)) {\n-            print_expr(s, lhs);\n-            space(s.s);\n-            wrd1(s, \"<-\");\n             print_expr(s, rhs);\n+            space(s.s);\n+            wrd1(s, \"|>\");\n+            print_expr(s, lhs);\n         }\n         case (ast::expr_field(?expr,?id,_)) {\n             print_expr(s, expr);"}, {"sha": "1532eed64e288b216a69204aef8944e5f6d81081", "filename": "src/test/compile-fail/bad-recv.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a7a42c24bedaf15ebb61acb007ad863aeac76076/src%2Ftest%2Fcompile-fail%2Fbad-recv.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a7a42c24bedaf15ebb61acb007ad863aeac76076/src%2Ftest%2Fcompile-fail%2Fbad-recv.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fbad-recv.rs?ref=a7a42c24bedaf15ebb61acb007ad863aeac76076", "patch": "@@ -1,5 +1,5 @@\n // error-pattern: mismatched types\n \n fn main() {\n-  10 <- 10;\n+  10 |> 10;\n }\n\\ No newline at end of file"}, {"sha": "7903001d1f066aa6780c031e557a09e5d3c0b4f1", "filename": "src/test/run-fail/linked-failure.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a7a42c24bedaf15ebb61acb007ad863aeac76076/src%2Ftest%2Frun-fail%2Flinked-failure.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a7a42c24bedaf15ebb61acb007ad863aeac76076/src%2Ftest%2Frun-fail%2Flinked-failure.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-fail%2Flinked-failure.rs?ref=a7a42c24bedaf15ebb61acb007ad863aeac76076", "patch": "@@ -13,5 +13,5 @@ fn main() {\n   let port[int] p = port();\n   spawn child();\n   let int x;\n-  x <- p;\n+  p |> x;\n }"}, {"sha": "c9e2c1019bbc50877bec83100bcac9d2fcae1b65", "filename": "src/test/run-fail/task-comm-14.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a7a42c24bedaf15ebb61acb007ad863aeac76076/src%2Ftest%2Frun-fail%2Ftask-comm-14.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a7a42c24bedaf15ebb61acb007ad863aeac76076/src%2Ftest%2Frun-fail%2Ftask-comm-14.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-fail%2Ftask-comm-14.rs?ref=a7a42c24bedaf15ebb61acb007ad863aeac76076", "patch": "@@ -19,7 +19,7 @@ io fn main() {\n     let int value = 0;\n     while (i > 0) {\n         log i;\n-        value <- po;\n+        po |> value;\n         i = i - 1;\n     }\n   "}, {"sha": "87eaca143616a2bbcd4d40d84a3fa6483eb2e1ea", "filename": "src/test/run-fail/trivial-message2.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/a7a42c24bedaf15ebb61acb007ad863aeac76076/src%2Ftest%2Frun-fail%2Ftrivial-message2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a7a42c24bedaf15ebb61acb007ad863aeac76076/src%2Ftest%2Frun-fail%2Ftrivial-message2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-fail%2Ftrivial-message2.rs?ref=a7a42c24bedaf15ebb61acb007ad863aeac76076", "patch": "@@ -2,14 +2,14 @@\n // xfail-stage1\n // xfail-stage2\n /*\n-  This program should hang on the r <- po line.\n+  This program should hang on the po |> r line.\n  */\n \n fn main() {\n     let port[int] po = port();\n     let chan[int] ch = chan(po);\n \n-    auto r; r <- po;\n+    auto r; po |> r;\n \n     ch <| 42;\n "}, {"sha": "7ce692a67f72e3784079e021552ad81820c4eacd", "filename": "src/test/run-pass/acyclic-unwind.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a7a42c24bedaf15ebb61acb007ad863aeac76076/src%2Ftest%2Frun-pass%2Facyclic-unwind.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a7a42c24bedaf15ebb61acb007ad863aeac76076/src%2Ftest%2Frun-pass%2Facyclic-unwind.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Facyclic-unwind.rs?ref=a7a42c24bedaf15ebb61acb007ad863aeac76076", "patch": "@@ -32,7 +32,7 @@ fn main() {\n   let int i;\n \n   // synchronize on event from child.\n-  i <- p;\n+  p |> i;\n \n   log \"parent exiting, killing child\";\n }"}, {"sha": "2b72f2a8567e286fd5a94faf62dfe78eadea96c0", "filename": "src/test/run-pass/basic-1.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/a7a42c24bedaf15ebb61acb007ad863aeac76076/src%2Ftest%2Frun-pass%2Fbasic-1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a7a42c24bedaf15ebb61acb007ad863aeac76076/src%2Ftest%2Frun-pass%2Fbasic-1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fbasic-1.rs?ref=a7a42c24bedaf15ebb61acb007ad863aeac76076", "patch": "@@ -12,8 +12,8 @@ fn main() {\n     spawn a(chan(p));\n     spawn b(chan(p));\n     let int n = 0;\n-    n <- p;\n-    n <- p;\n+    p |> n;\n+    p |> n;\n //    log \"Finished.\";\n }\n "}, {"sha": "1bbbb6d425f9346644385956b237542df58392a7", "filename": "src/test/run-pass/basic-2.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/a7a42c24bedaf15ebb61acb007ad863aeac76076/src%2Ftest%2Frun-pass%2Fbasic-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a7a42c24bedaf15ebb61acb007ad863aeac76076/src%2Ftest%2Frun-pass%2Fbasic-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fbasic-2.rs?ref=a7a42c24bedaf15ebb61acb007ad863aeac76076", "patch": "@@ -14,8 +14,8 @@ fn main() {\n     spawn a(chan(p));\n     spawn b(chan(p));\n     let int n = 0;\n-    n <- p;\n-    n <- p;\n+    p |> n;\n+    p |> n;\n     log \"Finished.\";\n }\n "}, {"sha": "4c542b532bbffabe11dee70272b3f0fa3d18bc5a", "filename": "src/test/run-pass/basic.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/a7a42c24bedaf15ebb61acb007ad863aeac76076/src%2Ftest%2Frun-pass%2Fbasic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a7a42c24bedaf15ebb61acb007ad863aeac76076/src%2Ftest%2Frun-pass%2Fbasic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fbasic.rs?ref=a7a42c24bedaf15ebb61acb007ad863aeac76076", "patch": "@@ -34,8 +34,8 @@ fn main() {\n     let int x = 10;\n     x = g(n,s);\n     log x;\n-    n <- p;\n-    n <- p;\n+    p |> n;\n+    p |> n;\n     // FIXME: use signal-channel for this.\n     log \"children finished, root finishing\";\n }"}, {"sha": "819fd987351d4adc0fe6a5916f5db00c65a53f11", "filename": "src/test/run-pass/comm.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a7a42c24bedaf15ebb61acb007ad863aeac76076/src%2Ftest%2Frun-pass%2Fcomm.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a7a42c24bedaf15ebb61acb007ad863aeac76076/src%2Ftest%2Frun-pass%2Fcomm.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fcomm.rs?ref=a7a42c24bedaf15ebb61acb007ad863aeac76076", "patch": "@@ -7,7 +7,7 @@ fn main() {\n   let port[int] p = port();\n   spawn child(chan(p));\n   let int y;\n-  y <- p;\n+  p |> y;\n   log \"received\";\n   log y;\n   assert (y == 10);"}, {"sha": "79d040cdb278f0889e39313139b37d6afc7a87ce", "filename": "src/test/run-pass/decl-with-recv.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/a7a42c24bedaf15ebb61acb007ad863aeac76076/src%2Ftest%2Frun-pass%2Fdecl-with-recv.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a7a42c24bedaf15ebb61acb007ad863aeac76076/src%2Ftest%2Frun-pass%2Fdecl-with-recv.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fdecl-with-recv.rs?ref=a7a42c24bedaf15ebb61acb007ad863aeac76076", "patch": "@@ -5,10 +5,10 @@ fn main() {\n   let chan[int] ch = chan(po);\n \n   ch <| 10;\n-  let int i; i <- po;\n+  let int i; po |> i;\n   assert (i == 10);\n \n   ch <| 11;\n-  auto j; j <- po;\n+  auto j; po |> j;\n   assert (j == 11);\n }"}, {"sha": "2362f60d7e28106ef6e9f3b7d53a81db1d19b7bb", "filename": "src/test/run-pass/destructor-ordering.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/a7a42c24bedaf15ebb61acb007ad863aeac76076/src%2Ftest%2Frun-pass%2Fdestructor-ordering.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a7a42c24bedaf15ebb61acb007ad863aeac76076/src%2Ftest%2Frun-pass%2Fdestructor-ordering.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fdestructor-ordering.rs?ref=a7a42c24bedaf15ebb61acb007ad863aeac76076", "patch": "@@ -25,7 +25,7 @@ io fn check_order(port[order_info] expected_p) {\n   chan(expected_p) <| rec(order=-1, msg=\"\");\n   let mutable int actual = 0;\n   // FIXME #121: Workaround for while(true) bug.\n-  auto expected; expected <- expected_p;\n+  auto expected; expected_p |> expected;\n   auto done = -1;  // FIXME: Workaround for typechecking bug.\n   while(expected.order != done) {\n     if (expected.order != actual) {\n@@ -36,7 +36,7 @@ io fn check_order(port[order_info] expected_p) {\n       fail;\n     }\n     actual += 1;\n-    expected <- expected_p;\n+    expected_p |> expected;\n   }\n }\n "}, {"sha": "60486694c046de57c4250b772f7f9a67ebe4a763", "filename": "src/test/run-pass/lazychan.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/a7a42c24bedaf15ebb61acb007ad863aeac76076/src%2Ftest%2Frun-pass%2Flazychan.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a7a42c24bedaf15ebb61acb007ad863aeac76076/src%2Ftest%2Frun-pass%2Flazychan.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Flazychan.rs?ref=a7a42c24bedaf15ebb61acb007ad863aeac76076", "patch": "@@ -9,13 +9,13 @@ fn main() {\n   let int y;\n \n   spawn child(c);\n-  y <- p;\n+  p |> y;\n   log \"received 1\";\n   log y;\n   assert (y == 10);\n \n   spawn child(c);\n-  y <- p;\n+  p |> y;\n   log \"received 2\";\n   log y;\n   assert (y == 10);"}, {"sha": "65149aaa38f701d5ab592c4d6fb2473b78e9d762", "filename": "src/test/run-pass/many.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/a7a42c24bedaf15ebb61acb007ad863aeac76076/src%2Ftest%2Frun-pass%2Fmany.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a7a42c24bedaf15ebb61acb007ad863aeac76076/src%2Ftest%2Frun-pass%2Fmany.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fmany.rs?ref=a7a42c24bedaf15ebb61acb007ad863aeac76076", "patch": "@@ -9,15 +9,15 @@ fn sub(chan[int] parent, int id) {\n   } else {\n     let port[int] p = port();\n     auto child = spawn sub(chan(p), id-1);\n-    let int y; y <- p;\n+    let int y; p |> y;\n     parent <| y + 1;\n   }\n }\n \n fn main() {\n   let port[int] p = port();\n   auto child = spawn sub(chan(p), 500);\n-  let int y <- p;\n+  let int p |> y;\n   log \"transmission complete\";\n   log y;\n   assert (y == 500);"}, {"sha": "e294e1f987298499432ca922ecfbad1c62867a9b", "filename": "src/test/run-pass/obj-dtor.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a7a42c24bedaf15ebb61acb007ad863aeac76076/src%2Ftest%2Frun-pass%2Fobj-dtor.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a7a42c24bedaf15ebb61acb007ad863aeac76076/src%2Ftest%2Frun-pass%2Fobj-dtor.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fobj-dtor.rs?ref=a7a42c24bedaf15ebb61acb007ad863aeac76076", "patch": "@@ -29,7 +29,7 @@ fn main() {\n   auto w = spawn do_work(chan(p));\n   let int i;\n   log \"parent waiting for shutdown\";\n-  i <- p;\n+  p |> i;\n   log \"received int\";\n   assert (i == 10);\n   log \"int is OK, child-dtor ran as expected\";"}, {"sha": "7c7e9f2bca177d10f531127e3f374094b8a564ea", "filename": "src/test/run-pass/preempt.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a7a42c24bedaf15ebb61acb007ad863aeac76076/src%2Ftest%2Frun-pass%2Fpreempt.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a7a42c24bedaf15ebb61acb007ad863aeac76076/src%2Ftest%2Frun-pass%2Fpreempt.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fpreempt.rs?ref=a7a42c24bedaf15ebb61acb007ad863aeac76076", "patch": "@@ -19,7 +19,7 @@ fn main() {\n   let task s = spawn starve_main(chan(alive));\n   let int i;\n   log \"main waiting for alive signal\";\n-  i <- alive;\n+  alive |> i;\n   log \"main got alive signal\";\n   while (i < 50) {\n     log \"main iterated\";"}, {"sha": "ad556441c0819f859369acb5e7d1f0ff51ebf555", "filename": "src/test/run-pass/rt-circular-buffer.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/a7a42c24bedaf15ebb61acb007ad863aeac76076/src%2Ftest%2Frun-pass%2Frt-circular-buffer.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a7a42c24bedaf15ebb61acb007ad863aeac76076/src%2Ftest%2Frun-pass%2Frt-circular-buffer.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Frt-circular-buffer.rs?ref=a7a42c24bedaf15ebb61acb007ad863aeac76076", "patch": "@@ -44,7 +44,7 @@ fn test_shrink1() {\n     auto mychan = chan(myport);\n \n     mychan <| 0i8;\n-    auto x; x <- myport;\n+    auto x; myport |> x;\n }\n \n fn test_shrink2() {\n@@ -58,7 +58,7 @@ fn test_shrink2() {\n     }\n \n     for each (uint i in uint::range(0u, 100u)) {\n-        auto x; x <- myport;\n+        auto x; myport |> x;\n     }\n }\n \n@@ -73,7 +73,7 @@ fn test_rotate() {\n                        val3=i as u32);\n         mychan <| val;\n \n-        auto x; x <- myport;\n+        auto x; myport |> x;\n         assert (x.val1 == i as u32);\n         assert (x.val2 == i as u32);\n         assert (x.val3 == i as u32);\n@@ -95,7 +95,7 @@ fn test_rotate_grow() {\n         }\n \n         for each (uint i in uint::range(0u, 10u)) {\n-            auto x; x <- myport;\n+            auto x; myport |> x;\n             assert (x.val1 == i as u32);\n             assert (x.val2 == i as u32);\n             assert (x.val3 == i as u32);"}, {"sha": "2adc449165efe530c209cf7e58c7cf14ccb70339", "filename": "src/test/run-pass/task-comm-0.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/a7a42c24bedaf15ebb61acb007ad863aeac76076/src%2Ftest%2Frun-pass%2Ftask-comm-0.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a7a42c24bedaf15ebb61acb007ad863aeac76076/src%2Ftest%2Frun-pass%2Ftask-comm-0.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Ftask-comm-0.rs?ref=a7a42c24bedaf15ebb61acb007ad863aeac76076", "patch": "@@ -15,8 +15,8 @@ fn test05() {\n     let port[int] po = port();\n     let chan[int] ch = chan(po);\n     spawn test05_start(chan(po));\n-    let int value; value <- po;\n-    value <- po;\n-    value <- po;\n+    let int value; po |> value;\n+    po |> value;\n+    po |> value;\n     assert (value == 30);\n }"}, {"sha": "0482a1ff96d022bf824a37b1c2e3309a8db70951", "filename": "src/test/run-pass/task-comm-10.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/a7a42c24bedaf15ebb61acb007ad863aeac76076/src%2Ftest%2Frun-pass%2Ftask-comm-10.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a7a42c24bedaf15ebb61acb007ad863aeac76076/src%2Ftest%2Frun-pass%2Ftask-comm-10.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Ftask-comm-10.rs?ref=a7a42c24bedaf15ebb61acb007ad863aeac76076", "patch": "@@ -4,14 +4,14 @@\n fn start(chan[chan[str]] c) {\n     let port[str] p = port();\n     c <| chan(p);\n-    auto a; a <- p;\n-    // auto b; b <- p; // Never read the second string.\n+    auto a; p |> a;\n+    // auto b; p |> b; // Never read the second string.\n }\n \n fn main() {\n     let port[chan[str]] p = port();\n     auto child = spawn \"start\" start(chan(p));\n-    auto c; c <- p;\n+    auto c; p |> c;\n     c <| \"A\";\n     c <| \"B\";\n     yield;"}, {"sha": "49c6382e5b386138957bbab7e6e88ac463cebe6b", "filename": "src/test/run-pass/task-comm-11.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a7a42c24bedaf15ebb61acb007ad863aeac76076/src%2Ftest%2Frun-pass%2Ftask-comm-11.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a7a42c24bedaf15ebb61acb007ad863aeac76076/src%2Ftest%2Frun-pass%2Ftask-comm-11.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Ftask-comm-11.rs?ref=a7a42c24bedaf15ebb61acb007ad863aeac76076", "patch": "@@ -9,5 +9,5 @@ fn start(chan[chan[str]] c) {\n fn main() {\n     let port[chan[str]] p = port();\n     auto child = spawn \"child\" start(chan(p));\n-    auto c; c <- p;\n+    auto c; p |> c;\n }"}, {"sha": "5532cfdd5804f6627de737621427e0d2e916fec7", "filename": "src/test/run-pass/task-comm-15.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a7a42c24bedaf15ebb61acb007ad863aeac76076/src%2Ftest%2Frun-pass%2Ftask-comm-15.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a7a42c24bedaf15ebb61acb007ad863aeac76076/src%2Ftest%2Frun-pass%2Ftask-comm-15.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Ftask-comm-15.rs?ref=a7a42c24bedaf15ebb61acb007ad863aeac76076", "patch": "@@ -17,5 +17,5 @@ fn main() {\n     // the child's point of view the receiver may die. We should\n     // drop messages on the floor in this case, and not crash!\n     auto child = spawn thread \"child\" start(chan(p), 10);\n-    auto c; c <- p;\n+    auto c; p |> c;\n }"}, {"sha": "dac966343aa218d724bae02f858a49ba4e5a920f", "filename": "src/test/run-pass/task-comm-16.rs", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/a7a42c24bedaf15ebb61acb007ad863aeac76076/src%2Ftest%2Frun-pass%2Ftask-comm-16.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a7a42c24bedaf15ebb61acb007ad863aeac76076/src%2Ftest%2Frun-pass%2Ftask-comm-16.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Ftask-comm-16.rs?ref=a7a42c24bedaf15ebb61acb007ad863aeac76076", "patch": "@@ -12,7 +12,7 @@ fn test_rec() {\n   ch <| r0;\n \n   let r r1;\n-  r1 <- po;\n+  po |> r1;\n \n   assert (r1.val0 == 0);\n   assert (r1.val1 == 1u8);\n@@ -27,7 +27,7 @@ fn test_vec() {\n   ch <| v0;\n \n   let vec[int] v1;\n-  v1 <- po;\n+  po |> v1;\n \n   assert (v1.(0) == 0);\n   assert (v1.(1) == 1);\n@@ -42,7 +42,7 @@ fn test_str() {\n   ch <| s0;\n \n   let str s1;\n-  s1 <- po;\n+  po |> s1;\n \n   assert (s1.(0) as u8 == 't' as u8);\n   assert (s1.(1) as u8 == 'e' as u8);\n@@ -60,7 +60,7 @@ fn test_tup() {\n   ch <| t0;\n \n   let t t1;\n-  t1 <- po;\n+  po |> t1;\n \n   assert (t0._0 == 0);\n   assert (t0._1 == 1u8);\n@@ -83,11 +83,11 @@ fn test_tag() {\n \n   let t t1;\n \n-  t1 <- po;\n+  po |> t1;\n   assert (t1 == tag1);\n-  t1 <- po;\n+  po |> t1;\n   assert (t1 == tag2(10));\n-  t1 <- po;\n+  po |> t1;\n   assert (t1 == tag3(10, 11u8, 'A'));\n }\n \n@@ -101,13 +101,13 @@ fn test_chan() {\n   ch <| ch0;\n \n   let chan[int] ch1;\n-  ch1 <- po;\n+  po |> ch1;\n \n   // Does the transmitted channel still work?\n   ch1 <| 10;\n \n   let int i;\n-  i <- po0;\n+  po0 |> i;\n \n   assert (i == 10);\n }"}, {"sha": "97293102fa8d6c1550ceb0e2ba90334d2bf686c3", "filename": "src/test/run-pass/task-comm-3.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a7a42c24bedaf15ebb61acb007ad863aeac76076/src%2Ftest%2Frun-pass%2Ftask-comm-3.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a7a42c24bedaf15ebb61acb007ad863aeac76076/src%2Ftest%2Frun-pass%2Ftask-comm-3.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Ftask-comm-3.rs?ref=a7a42c24bedaf15ebb61acb007ad863aeac76076", "patch": "@@ -47,7 +47,7 @@ fn test00(bool is_multithreaded) {\n     for (task t in tasks) {\n         i = 0;\n         while (i < number_of_messages) {\n-            let int value; value <- po;\n+            let int value; po |> value;\n             sum += value;\n             i = i + 1;\n         }"}, {"sha": "2b2d4c02769efaa1a9cc4994b41a679f29c7d0b1", "filename": "src/test/run-pass/task-comm-4.rs", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/a7a42c24bedaf15ebb61acb007ad863aeac76076/src%2Ftest%2Frun-pass%2Ftask-comm-4.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a7a42c24bedaf15ebb61acb007ad863aeac76076/src%2Ftest%2Frun-pass%2Ftask-comm-4.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Ftask-comm-4.rs?ref=a7a42c24bedaf15ebb61acb007ad863aeac76076", "patch": "@@ -13,20 +13,20 @@ fn test00() {\n     c <| 3;\n     c <| 4;\n \n-    r <- p; sum += r; log (r);\n-    r <- p; sum += r; log (r);\n-    r <- p; sum += r; log (r);\n-    r <- p; sum += r; log (r);\n+    p |> r; sum += r; log (r);\n+    p |> r; sum += r; log (r);\n+    p |> r; sum += r; log (r);\n+    p |> r; sum += r; log (r);\n     \n     c <| 5;\n     c <| 6;\n     c <| 7;\n     c <| 8;\n \n-    r <- p; sum += r; log (r);\n-    r <- p; sum += r; log (r);\n-    r <- p; sum += r; log (r);\n-    r <- p; sum += r; log (r);\n+    p |> r; sum += r; log (r);\n+    p |> r; sum += r; log (r);\n+    p |> r; sum += r; log (r);\n+    p |> r; sum += r; log (r);\n     \n     assert (sum == 1 + 2 + 3 + 4 + 5 + 6 + 7 + 8);\n }\n\\ No newline at end of file"}, {"sha": "4bad2f7dad44b3a38ad2dbd41ab2a3eaae0bdb29", "filename": "src/test/run-pass/task-comm-5.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a7a42c24bedaf15ebb61acb007ad863aeac76076/src%2Ftest%2Frun-pass%2Ftask-comm-5.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a7a42c24bedaf15ebb61acb007ad863aeac76076/src%2Ftest%2Frun-pass%2Ftask-comm-5.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Ftask-comm-5.rs?ref=a7a42c24bedaf15ebb61acb007ad863aeac76076", "patch": "@@ -17,7 +17,7 @@ fn test00() {\n \n     i = 0;\n     while (i < number_of_messages) {\n-        r <- p; sum += r;\n+        p |> r; sum += r;\n         i += 1;\n     }\n     "}, {"sha": "c2ffd4226d866ef234e2cce7215f77e6b6ed54b7", "filename": "src/test/run-pass/task-comm-6.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/a7a42c24bedaf15ebb61acb007ad863aeac76076/src%2Ftest%2Frun-pass%2Ftask-comm-6.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a7a42c24bedaf15ebb61acb007ad863aeac76076/src%2Ftest%2Frun-pass%2Ftask-comm-6.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Ftask-comm-6.rs?ref=a7a42c24bedaf15ebb61acb007ad863aeac76076", "patch": "@@ -25,10 +25,10 @@ fn test00() {\n \n     i = 0;\n     while (i < number_of_messages) {\n-        r <- p; sum += r;\n-        r <- p; sum += r;\n-        r <- p; sum += r;\n-        r <- p; sum += r;\n+        p |> r; sum += r;\n+        p |> r; sum += r;\n+        p |> r; sum += r;\n+        p |> r; sum += r;\n         i += 1;\n     }\n "}, {"sha": "5602b74219698b12904172f06262730b552f2600", "filename": "src/test/run-pass/task-comm-7.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/a7a42c24bedaf15ebb61acb007ad863aeac76076/src%2Ftest%2Frun-pass%2Ftask-comm-7.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a7a42c24bedaf15ebb61acb007ad863aeac76076/src%2Ftest%2Frun-pass%2Ftask-comm-7.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Ftask-comm-7.rs?ref=a7a42c24bedaf15ebb61acb007ad863aeac76076", "patch": "@@ -30,10 +30,10 @@ fn test00() {\n     \n     let int i = 0;\n     while (i < number_of_messages) {\n-        r <- p; sum += r;\n-        r <- p; sum += r;\n-        r <- p; sum += r;\n-        r <- p; sum += r;\n+        p |> r; sum += r;\n+        p |> r; sum += r;\n+        p |> r; sum += r;\n+        p |> r; sum += r;\n         i += 1;\n     }\n             "}, {"sha": "c731456cbfed10ce0f8af458da8403d59d9c010e", "filename": "src/test/run-pass/task-comm-8.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/a7a42c24bedaf15ebb61acb007ad863aeac76076/src%2Ftest%2Frun-pass%2Ftask-comm-8.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a7a42c24bedaf15ebb61acb007ad863aeac76076/src%2Ftest%2Frun-pass%2Ftask-comm-8.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Ftask-comm-8.rs?ref=a7a42c24bedaf15ebb61acb007ad863aeac76076", "patch": "@@ -30,10 +30,10 @@ fn test00() {\n     \n     let int i = 0;\n     while (i < number_of_messages) {\n-        r <- p; sum += r;\n-        r <- p; sum += r;\n-        r <- p; sum += r;\n-        r <- p; sum += r;\n+        p |> r; sum += r;\n+        p |> r; sum += r;\n+        p |> r; sum += r;\n+        p |> r; sum += r;\n         i += 1;\n     }\n             "}, {"sha": "abe5ea8109889ddee5975c998eb77e49fa089f12", "filename": "src/test/run-pass/task-comm-9.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a7a42c24bedaf15ebb61acb007ad863aeac76076/src%2Ftest%2Frun-pass%2Ftask-comm-9.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a7a42c24bedaf15ebb61acb007ad863aeac76076/src%2Ftest%2Frun-pass%2Ftask-comm-9.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Ftask-comm-9.rs?ref=a7a42c24bedaf15ebb61acb007ad863aeac76076", "patch": "@@ -24,7 +24,7 @@ fn test00() {\n     \n     let int i = 0;\n     while (i < number_of_messages) {\n-        r <- p; sum += r; log (r);\n+        p |> r; sum += r; log (r);\n         i += 1;\n     }\n             "}, {"sha": "75b56300826ffd36013a3ce1b547d9086bbfd222", "filename": "src/test/run-pass/task-comm-chan-nil.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a7a42c24bedaf15ebb61acb007ad863aeac76076/src%2Ftest%2Frun-pass%2Ftask-comm-chan-nil.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a7a42c24bedaf15ebb61acb007ad863aeac76076/src%2Ftest%2Frun-pass%2Ftask-comm-chan-nil.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Ftask-comm-chan-nil.rs?ref=a7a42c24bedaf15ebb61acb007ad863aeac76076", "patch": "@@ -11,7 +11,7 @@ fn main() {\n   ch <| ();\n \n   let () n;\n-  n <- po;\n+  po |> n;\n \n   assert (n == ());\n }"}, {"sha": "3a3d7d5942d8e8f1886901acc37accad836dca30", "filename": "src/test/run-pass/task-comm.rs", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/a7a42c24bedaf15ebb61acb007ad863aeac76076/src%2Ftest%2Frun-pass%2Ftask-comm.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a7a42c24bedaf15ebb61acb007ad863aeac76076/src%2Ftest%2Frun-pass%2Ftask-comm.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Ftask-comm.rs?ref=a7a42c24bedaf15ebb61acb007ad863aeac76076", "patch": "@@ -48,7 +48,7 @@ fn test00(bool is_multithreaded) {\n     for (task t in tasks) {\n         i = 0;\n         while (i < number_of_messages) {\n-            let int value; value <- po;\n+            let int value; po |> value;\n             sum += value;\n             i = i + 1;\n         }\n@@ -66,7 +66,7 @@ fn test00(bool is_multithreaded) {\n fn test01() {\n     let port[int] p = port();\n     log \"Reading from a port that is never written to.\";\n-    let int value; value <- p;\n+    let int value; p |> value;\n     log value;\n }\n \n@@ -76,7 +76,7 @@ fn test02() {\n     log \"Writing to a local task channel.\";\n     c <| 42;\n     log \"Reading from a local task port.\";\n-    let int value; value <- p;\n+    let int value; p |> value;\n     log value;\n }\n \n@@ -126,9 +126,9 @@ fn test05() {\n     let port[int] po = port();\n     let chan[int] ch = chan(po);\n     spawn thread test05_start(ch);\n-    let int value; value <- po;\n-    value <- po;\n-    value <- po;\n+    let int value; po |> value;\n+    po |> value;\n+    po |> value;\n     log value;\n }\n "}, {"sha": "c2d6775982413a3d5755939d1045b05bbd3e3ca2", "filename": "src/test/run-pass/trivial-message.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a7a42c24bedaf15ebb61acb007ad863aeac76076/src%2Ftest%2Frun-pass%2Ftrivial-message.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a7a42c24bedaf15ebb61acb007ad863aeac76076/src%2Ftest%2Frun-pass%2Ftrivial-message.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Ftrivial-message.rs?ref=a7a42c24bedaf15ebb61acb007ad863aeac76076", "patch": "@@ -9,7 +9,7 @@ fn main() {\n \n     ch <| 42;\n \n-    auto r; r <- po;\n+    auto r; po |> r;\n \n     log_err r;\n }"}]}