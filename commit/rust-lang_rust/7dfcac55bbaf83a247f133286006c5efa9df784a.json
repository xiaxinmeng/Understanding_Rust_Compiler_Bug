{"sha": "7dfcac55bbaf83a247f133286006c5efa9df784a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjdkZmNhYzU1YmJhZjgzYTI0N2YxMzMyODYwMDZjNWVmYTlkZjc4NGE=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2017-01-17T08:01:04Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2017-01-17T08:01:04Z"}, "message": "Auto merge of #39050 - alexcrichton:travis-nightly, r=brson\n\ntravis: Pass --release-channel=nightly on deploy\n\nThis commit passes the `--release-channel=nightly` flag to all images which have\nthe `DEPLOY` flag set. This means that we'll name artifacts and the compiler\nappropriately.\n\nThis reworks a bit how arguments are passed, but for now doesn't change what's\nalready being passed. Eventually we'll want to avoid enabling debug assertions\nand llvm assertions for *all* releases, but I figure we can tackle that a little\nbit more down the road.", "tree": {"sha": "5e051404564be3e607700384e0aef4cefe956d90", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5e051404564be3e607700384e0aef4cefe956d90"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7dfcac55bbaf83a247f133286006c5efa9df784a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7dfcac55bbaf83a247f133286006c5efa9df784a", "html_url": "https://github.com/rust-lang/rust/commit/7dfcac55bbaf83a247f133286006c5efa9df784a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7dfcac55bbaf83a247f133286006c5efa9df784a/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "31dee37a15961f51e25dfea66b1364e051be1a65", "url": "https://api.github.com/repos/rust-lang/rust/commits/31dee37a15961f51e25dfea66b1364e051be1a65", "html_url": "https://github.com/rust-lang/rust/commit/31dee37a15961f51e25dfea66b1364e051be1a65"}, {"sha": "06185802356b49a71dfa6fc396fe6c7982bd5076", "url": "https://api.github.com/repos/rust-lang/rust/commits/06185802356b49a71dfa6fc396fe6c7982bd5076", "html_url": "https://github.com/rust-lang/rust/commit/06185802356b49a71dfa6fc396fe6c7982bd5076"}], "stats": {"total": 46, "additions": 35, "deletions": 11}, "files": [{"sha": "208fb7e6836372a814ea9796450000b59284977a", "filename": "configure", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7dfcac55bbaf83a247f133286006c5efa9df784a/configure", "raw_url": "https://github.com/rust-lang/rust/raw/7dfcac55bbaf83a247f133286006c5efa9df784a/configure", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/configure?ref=7dfcac55bbaf83a247f133286006c5efa9df784a", "patch": "@@ -745,7 +745,7 @@ fi\n case \"$CFG_RELEASE_CHANNEL\" in\n     nightly )\n \tmsg \"overriding settings for $CFG_RELEASE_CHANNEL\"\n-\tCFG_ENABLE_LLVM_ASSERTIONS=1\n+        enable_if_not_disabled llvm-assertions\n         # FIXME(stage0) re-enable this on the next stage0 now that #35566 is\n         # fixed\n         case \"$CFG_BUILD\" in"}, {"sha": "80f40d1ba4773a678b9f2d8bfced668c6a41428b", "filename": "src/ci/docker/run.sh", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/7dfcac55bbaf83a247f133286006c5efa9df784a/src%2Fci%2Fdocker%2Frun.sh", "raw_url": "https://github.com/rust-lang/rust/raw/7dfcac55bbaf83a247f133286006c5efa9df784a/src%2Fci%2Fdocker%2Frun.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Frun.sh?ref=7dfcac55bbaf83a247f133286006c5efa9df784a", "patch": "@@ -48,6 +48,7 @@ exec docker \\\n   --env SRC=/checkout \\\n   $args \\\n   --env CARGO_HOME=/cargo \\\n+  --env DEPLOY=$DEPLOY \\\n   --env LOCAL_USER_ID=`id -u` \\\n   --volume \"$HOME/.cargo:/cargo\" \\\n   rust-ci \\"}, {"sha": "205228a7bccc87519d4dfe8f4a3df43e2bf7fffb", "filename": "src/ci/run.sh", "status": "modified", "additions": 33, "deletions": 10, "changes": 43, "blob_url": "https://github.com/rust-lang/rust/blob/7dfcac55bbaf83a247f133286006c5efa9df784a/src%2Fci%2Frun.sh", "raw_url": "https://github.com/rust-lang/rust/raw/7dfcac55bbaf83a247f133286006c5efa9df784a/src%2Fci%2Frun.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Frun.sh?ref=7dfcac55bbaf83a247f133286006c5efa9df784a", "patch": "@@ -18,24 +18,47 @@ if [ \"$LOCAL_USER_ID\" != \"\" ]; then\n   exec su --preserve-environment -c \"env PATH=$PATH \\\"$0\\\"\" user\n fi\n \n+RUST_CONFIGURE_ARGS=\"$RUST_CONFIGURE_ARGS --enable-sccache\"\n+RUST_CONFIGURE_ARGS=\"$RUST_CONFIGURE_ARGS --enable-quiet-tests\"\n+RUST_CONFIGURE_ARGS=\"$RUST_CONFIGURE_ARGS --disable-manage-submodules\"\n+\n+# FIXME: we shouldn't forcibly enable debug assertions and llvm assertions when\n+#        `DEPLOY` is set because then we'll be shipping slower binaries. We\n+#        should only set these for auto branches, but we need to make sure that\n+#        if we disable this all the relevant platforms are still tested\n+#        somewhere with debug and llvm assertions.\n+RUST_CONFIGURE_ARGS=\"$RUST_CONFIGURE_ARGS --enable-debug-assertions\"\n+\n+# In general we always want to run tests with LLVM assertions enabled, but not\n+# all platforms currently support that, so we have an option to disable.\n if [ \"$NO_LLVM_ASSERTIONS\" = \"\" ]; then\n-  ENABLE_LLVM_ASSERTIONS=--enable-llvm-assertions\n+  RUST_CONFIGURE_ARGS=\"$RUST_CONFIGURE_ARGS --enable-llvm-assertions\"\n+fi\n+\n+# If we're deploying artifacts then we set the release channel, otherwise if\n+# we're not deploying then we want to be sure to enable all assertions becauase\n+# we'll be running tests\n+#\n+# FIXME: need a scheme for changing this `nightly` value to `beta` and `stable`\n+#        either automatically or manually.\n+if [ \"$DEPLOY\" != \"\" ]; then\n+  RUST_CONFIGURE_ARGS=\"$RUST_CONFIGURE_ARGS --release-channel=nightly\"\n+\n+  if [ \"$NO_LLVM_ASSERTIONS\" = \"1\" ]; then\n+    RUST_CONFIGURE_ARGS=\"$RUST_CONFIGURE_ARGS --disable-llvm-assertions\"\n+  fi\n fi\n \n+# We want to enable usage of the `src/vendor` dir as much as possible, but not\n+# all test suites have all their deps in there (just the main bootstrap) so we\n+# have the ability to disable this flag\n if [ \"$NO_VENDOR\" = \"\" ]; then\n-  ENABLE_VENDOR=--enable-vendor\n+  RUST_CONFIGURE_ARGS=\"$RUST_CONFIGURE_ARGS --enable-vendor\"\n fi\n \n set -ex\n \n-$SRC/configure \\\n-  --disable-manage-submodules \\\n-  --enable-debug-assertions \\\n-  --enable-quiet-tests \\\n-  --enable-sccache \\\n-  $ENABLE_VENDOR \\\n-  $ENABLE_LLVM_ASSERTIONS \\\n-  $RUST_CONFIGURE_ARGS\n+$SRC/configure $RUST_CONFIGURE_ARGS\n \n if [ \"$TRAVIS_OS_NAME\" = \"osx\" ]; then\n     ncpus=$(sysctl -n hw.ncpu)"}]}