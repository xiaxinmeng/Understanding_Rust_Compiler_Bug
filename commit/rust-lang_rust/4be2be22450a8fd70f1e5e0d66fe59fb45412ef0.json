{"sha": "4be2be22450a8fd70f1e5e0d66fe59fb45412ef0", "node_id": "C_kwDOAAsO6NoAKDRiZTJiZTIyNDUwYThmZDcwZjFlNWUwZDY2ZmU1OWZiNDU0MTJlZjA", "commit": {"author": {"name": "bjorn3", "email": "17426603+bjorn3@users.noreply.github.com", "date": "2023-03-04T11:48:34Z"}, "committer": {"name": "bjorn3", "email": "17426603+bjorn3@users.noreply.github.com", "date": "2023-03-04T11:48:34Z"}, "message": "Rustfmt", "tree": {"sha": "13360030c97685ca70eb0205c69ede7adf383b57", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/13360030c97685ca70eb0205c69ede7adf383b57"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4be2be22450a8fd70f1e5e0d66fe59fb45412ef0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4be2be22450a8fd70f1e5e0d66fe59fb45412ef0", "html_url": "https://github.com/rust-lang/rust/commit/4be2be22450a8fd70f1e5e0d66fe59fb45412ef0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4be2be22450a8fd70f1e5e0d66fe59fb45412ef0/comments", "author": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7bf863653b6c06cfd987f8b5014795aed58da0ec", "url": "https://api.github.com/repos/rust-lang/rust/commits/7bf863653b6c06cfd987f8b5014795aed58da0ec", "html_url": "https://github.com/rust-lang/rust/commit/7bf863653b6c06cfd987f8b5014795aed58da0ec"}], "stats": {"total": 5, "additions": 4, "deletions": 1}, "files": [{"sha": "85656b8b5f3d81a201d3b432f6cd402838e74388", "filename": "src/intrinsics/mod.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/4be2be22450a8fd70f1e5e0d66fe59fb45412ef0/src%2Fintrinsics%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4be2be22450a8fd70f1e5e0d66fe59fb45412ef0/src%2Fintrinsics%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fintrinsics%2Fmod.rs?ref=4be2be22450a8fd70f1e5e0d66fe59fb45412ef0", "patch": "@@ -652,7 +652,10 @@ fn codegen_regular_intrinsic_call<'tcx>(\n                                 // Use this error even for the other intrinsics as it is more precise.\n                                 format!(\"attempted to instantiate uninhabited type `{}`\", ty)\n                             } else if intrinsic == sym::assert_zero_valid {\n-                                format!(\"attempted to zero-initialize type `{}`, which is invalid\", ty)\n+                                format!(\n+                                    \"attempted to zero-initialize type `{}`, which is invalid\",\n+                                    ty\n+                                )\n                             } else {\n                                 format!(\n                                     \"attempted to leave type `{}` uninitialized, which is invalid\","}]}