{"sha": "9141b7be704dad33c42c846720c675c4851e526c", "node_id": "MDY6Q29tbWl0NzI0NzEyOjkxNDFiN2JlNzA0ZGFkMzNjNDJjODQ2NzIwYzY3NWM0ODUxZTUyNmM=", "commit": {"author": {"name": "topecongiro", "email": "seuchida@gmail.com", "date": "2017-03-01T04:04:13Z"}, "committer": {"name": "topecongiro", "email": "seuchida@gmail.com", "date": "2017-03-01T04:12:07Z"}, "message": "Add compile fail test for abi_ptx", "tree": {"sha": "527efac04ecefbc01c1c4cfd3a0e9f04231b45d7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/527efac04ecefbc01c1c4cfd3a0e9f04231b45d7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9141b7be704dad33c42c846720c675c4851e526c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9141b7be704dad33c42c846720c675c4851e526c", "html_url": "https://github.com/rust-lang/rust/commit/9141b7be704dad33c42c846720c675c4851e526c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9141b7be704dad33c42c846720c675c4851e526c/comments", "author": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "committer": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2f52386f1072755d1b9973014e8e1d4b383e8eef", "url": "https://api.github.com/repos/rust-lang/rust/commits/2f52386f1072755d1b9973014e8e1d4b383e8eef", "html_url": "https://github.com/rust-lang/rust/commit/2f52386f1072755d1b9973014e8e1d4b383e8eef"}], "stats": {"total": 10, "additions": 9, "deletions": 1}, "files": [{"sha": "41efb92d450e8c987ccbb38caf94f92e0bd9911f", "filename": "src/test/compile-fail/feature-gate-abi.rs", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/9141b7be704dad33c42c846720c675c4851e526c/src%2Ftest%2Fcompile-fail%2Ffeature-gate-abi.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9141b7be704dad33c42c846720c675c4851e526c/src%2Ftest%2Fcompile-fail%2Ffeature-gate-abi.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Ffeature-gate-abi.rs?ref=9141b7be704dad33c42c846720c675c4851e526c", "patch": "@@ -11,13 +11,15 @@\n // gate-test-intrinsics\n // gate-test-platform_intrinsics\n // gate-test-abi_vectorcall\n+// gate-test-abi_ptx\n \n // Functions\n extern \"rust-intrinsic\" fn f1() {} //~ ERROR intrinsics are subject to change\n extern \"platform-intrinsic\" fn f2() {} //~ ERROR platform intrinsics are experimental\n extern \"vectorcall\" fn f3() {} //~ ERROR vectorcall is experimental and subject to change\n extern \"rust-call\" fn f4() {} //~ ERROR rust-call ABI is subject to change\n extern \"msp430-interrupt\" fn f5() {} //~ ERROR msp430-interrupt ABI is experimental\n+extern \"ptx-kernel\" fn f6() {} //~ ERROR PTX ABIs are experimental and subject to change\n \n // Methods in trait definition\n trait Tr {\n@@ -26,12 +28,14 @@ trait Tr {\n     extern \"vectorcall\" fn m3(); //~ ERROR vectorcall is experimental and subject to change\n     extern \"rust-call\" fn m4(); //~ ERROR rust-call ABI is subject to change\n     extern \"msp430-interrupt\" fn m5(); //~ ERROR msp430-interrupt ABI is experimental\n+    extern \"ptx-kernel\" fn m6(); //~ ERROR PTX ABIs are experimental and subject to change\n \n     extern \"rust-intrinsic\" fn dm1() {} //~ ERROR intrinsics are subject to change\n     extern \"platform-intrinsic\" fn dm2() {} //~ ERROR platform intrinsics are experimental\n     extern \"vectorcall\" fn dm3() {} //~ ERROR vectorcall is experimental and subject to change\n     extern \"rust-call\" fn dm4() {} //~ ERROR rust-call ABI is subject to change\n     extern \"msp430-interrupt\" fn dm5() {} //~ ERROR msp430-interrupt ABI is experimental\n+    extern \"ptx-kernel\" fn dm6() {} //~ ERROR PTX ABIs are experimental and subject to change\n }\n \n struct S;\n@@ -43,6 +47,7 @@ impl Tr for S {\n     extern \"vectorcall\" fn m3() {} //~ ERROR vectorcall is experimental and subject to change\n     extern \"rust-call\" fn m4() {} //~ ERROR rust-call ABI is subject to change\n     extern \"msp430-interrupt\" fn m5() {} //~ ERROR msp430-interrupt ABI is experimental\n+    extern \"ptx-kernel\" fn m6() {} //~ ERROR PTX ABIs are experimental and subject to change\n }\n \n // Methods in inherent impl\n@@ -52,6 +57,7 @@ impl S {\n     extern \"vectorcall\" fn im3() {} //~ ERROR vectorcall is experimental and subject to change\n     extern \"rust-call\" fn im4() {} //~ ERROR rust-call ABI is subject to change\n     extern \"msp430-interrupt\" fn im5() {} //~ ERROR msp430-interrupt ABI is experimental\n+    extern \"ptx-kernel\" fn im6() {} //~ ERROR PTX ABIs are experimental and subject to change\n }\n \n // Function pointer types\n@@ -60,12 +66,14 @@ type A2 = extern \"platform-intrinsic\" fn(); //~ ERROR platform intrinsics are ex\n type A3 = extern \"vectorcall\" fn(); //~ ERROR vectorcall is experimental and subject to change\n type A4 = extern \"rust-call\" fn(); //~ ERROR rust-call ABI is subject to change\n type A5 = extern \"msp430-interrupt\" fn(); //~ ERROR msp430-interrupt ABI is experimental\n+type A6 = extern \"ptx-kernel\" fn (); //~ ERROR PTX ABIs are experimental and subject to change\n \n // Foreign modules\n extern \"rust-intrinsic\" {} //~ ERROR intrinsics are subject to change\n extern \"platform-intrinsic\" {} //~ ERROR platform intrinsics are experimental\n extern \"vectorcall\" {} //~ ERROR vectorcall is experimental and subject to change\n extern \"rust-call\" {} //~ ERROR rust-call ABI is subject to change\n extern \"msp430-interrupt\" {} //~ ERROR msp430-interrupt ABI is experimental\n+extern \"ptx-kernel\" {} //~ ERROR PTX ABIs are experimental and subject to change\n \n fn main() {}"}, {"sha": "3e951c85589f8ddc2f62fb482427c11ac36c6d6e", "filename": "src/tools/tidy/src/features.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9141b7be704dad33c42c846720c675c4851e526c/src%2Ftools%2Ftidy%2Fsrc%2Ffeatures.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9141b7be704dad33c42c846720c675c4851e526c/src%2Ftools%2Ftidy%2Fsrc%2Ffeatures.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Ftidy%2Fsrc%2Ffeatures.rs?ref=9141b7be704dad33c42c846720c675c4851e526c", "patch": "@@ -167,7 +167,7 @@ pub fn check(path: &Path, bad: &mut bool) {\n \n     // FIXME get this whitelist empty.\n     let whitelist = vec![\n-        \"abi_ptx\", \"simd\",\n+        \"simd\",\n         \"stmt_expr_attributes\",\n         \"cfg_target_thread_local\", \"unwind_attributes\",\n     ];"}]}