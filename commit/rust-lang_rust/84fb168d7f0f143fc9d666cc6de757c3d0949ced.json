{"sha": "84fb168d7f0f143fc9d666cc6de757c3d0949ced", "node_id": "C_kwDOAAsO6NoAKDg0ZmIxNjhkN2YwZjE0M2ZjOWQ2NjZjYzZkZTc1N2MzZDA5NDljZWQ", "commit": {"author": {"name": "Mark Rousskov", "email": "mark.simulacrum@gmail.com", "date": "2022-09-17T22:13:59Z"}, "committer": {"name": "Mark Rousskov", "email": "mark.simulacrum@gmail.com", "date": "2022-09-20T22:23:22Z"}, "message": "Avoid panicking on missing fallback\n\nThis just prints a message but continues on if a fallback is missing,\nwhich can happen when we're building a partial set of builders and\nproducing a dev-static build from it (e.g., when no Apple builder runs\nat all).\n\nProbably the more extensive fix is to allow the build-manifest invoker\nto specify the expected set of targets & hosts, but that's a far more\nextensive change. The main risk from this is that we accidentally start\nfalling back to linux docs across all platforms without noticing. I'm\nnot sure that we can do much about that though at this time.", "tree": {"sha": "4993ae6a700b1d091a0f24ded9f0add2aeb8aeaf", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4993ae6a700b1d091a0f24ded9f0add2aeb8aeaf"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/84fb168d7f0f143fc9d666cc6de757c3d0949ced", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/84fb168d7f0f143fc9d666cc6de757c3d0949ced", "html_url": "https://github.com/rust-lang/rust/commit/84fb168d7f0f143fc9d666cc6de757c3d0949ced", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/84fb168d7f0f143fc9d666cc6de757c3d0949ced/comments", "author": {"login": "Mark-Simulacrum", "id": 5047365, "node_id": "MDQ6VXNlcjUwNDczNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/5047365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mark-Simulacrum", "html_url": "https://github.com/Mark-Simulacrum", "followers_url": "https://api.github.com/users/Mark-Simulacrum/followers", "following_url": "https://api.github.com/users/Mark-Simulacrum/following{/other_user}", "gists_url": "https://api.github.com/users/Mark-Simulacrum/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mark-Simulacrum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mark-Simulacrum/subscriptions", "organizations_url": "https://api.github.com/users/Mark-Simulacrum/orgs", "repos_url": "https://api.github.com/users/Mark-Simulacrum/repos", "events_url": "https://api.github.com/users/Mark-Simulacrum/events{/privacy}", "received_events_url": "https://api.github.com/users/Mark-Simulacrum/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Mark-Simulacrum", "id": 5047365, "node_id": "MDQ6VXNlcjUwNDczNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/5047365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mark-Simulacrum", "html_url": "https://github.com/Mark-Simulacrum", "followers_url": "https://api.github.com/users/Mark-Simulacrum/followers", "following_url": "https://api.github.com/users/Mark-Simulacrum/following{/other_user}", "gists_url": "https://api.github.com/users/Mark-Simulacrum/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mark-Simulacrum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mark-Simulacrum/subscriptions", "organizations_url": "https://api.github.com/users/Mark-Simulacrum/orgs", "repos_url": "https://api.github.com/users/Mark-Simulacrum/repos", "events_url": "https://api.github.com/users/Mark-Simulacrum/events{/privacy}", "received_events_url": "https://api.github.com/users/Mark-Simulacrum/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a29f341a8ac4e9325a5e37027b4215f50a76d06f", "url": "https://api.github.com/repos/rust-lang/rust/commits/a29f341a8ac4e9325a5e37027b4215f50a76d06f", "html_url": "https://github.com/rust-lang/rust/commit/a29f341a8ac4e9325a5e37027b4215f50a76d06f"}], "stats": {"total": 14, "additions": 12, "deletions": 2}, "files": [{"sha": "bf07cd75cab565730c0b85cfbf67f7beaed031dd", "filename": "src/tools/build-manifest/src/main.rs", "status": "modified", "additions": 12, "deletions": 2, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/84fb168d7f0f143fc9d666cc6de757c3d0949ced/src%2Ftools%2Fbuild-manifest%2Fsrc%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/84fb168d7f0f143fc9d666cc6de757c3d0949ced/src%2Ftools%2Fbuild-manifest%2Fsrc%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fbuild-manifest%2Fsrc%2Fmain.rs?ref=84fb168d7f0f143fc9d666cc6de757c3d0949ced", "patch": "@@ -543,8 +543,18 @@ impl Builder {\n             for (substr, fallback_target) in fallback {\n                 if target_name.contains(substr) {\n                     let t = Target::from_compressed_tar(self, &tarball_name!(fallback_target));\n-                    // Fallbacks must always be available.\n-                    assert!(t.available);\n+                    // Fallbacks should typically be available on 'production' builds\n+                    // but may not be available for try builds, which only build one target by\n+                    // default. Ideally we'd gate this being a hard error on whether we're in a\n+                    // production build or not, but it's not information that's readily available\n+                    // here.\n+                    if !t.available {\n+                        eprintln!(\n+                            \"{:?} not available for fallback\",\n+                            tarball_name!(fallback_target)\n+                        );\n+                        continue;\n+                    }\n                     return t;\n                 }\n             }"}]}