{"sha": "2c85db8eb6bac4a9106e7373840c0b3d209188a6", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJjODVkYjhlYjZiYWM0YTkxMDZlNzM3Mzg0MGMwYjNkMjA5MTg4YTY=", "commit": {"author": {"name": "Jonas Schievink", "email": "jonasschievink@gmail.com", "date": "2020-11-26T15:56:22Z"}, "committer": {"name": "Jonas Schievink", "email": "jonasschievink@gmail.com", "date": "2020-11-26T15:56:22Z"}, "message": "Implement `Display` for macro expansion errors", "tree": {"sha": "6424b095680383a82ad8d4d9f4b239bcdbc9cdcd", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6424b095680383a82ad8d4d9f4b239bcdbc9cdcd"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2c85db8eb6bac4a9106e7373840c0b3d209188a6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2c85db8eb6bac4a9106e7373840c0b3d209188a6", "html_url": "https://github.com/rust-lang/rust/commit/2c85db8eb6bac4a9106e7373840c0b3d209188a6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2c85db8eb6bac4a9106e7373840c0b3d209188a6/comments", "author": {"login": "jonas-schievink", "id": 1786438, "node_id": "MDQ6VXNlcjE3ODY0Mzg=", "avatar_url": "https://avatars.githubusercontent.com/u/1786438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonas-schievink", "html_url": "https://github.com/jonas-schievink", "followers_url": "https://api.github.com/users/jonas-schievink/followers", "following_url": "https://api.github.com/users/jonas-schievink/following{/other_user}", "gists_url": "https://api.github.com/users/jonas-schievink/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonas-schievink/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonas-schievink/subscriptions", "organizations_url": "https://api.github.com/users/jonas-schievink/orgs", "repos_url": "https://api.github.com/users/jonas-schievink/repos", "events_url": "https://api.github.com/users/jonas-schievink/events{/privacy}", "received_events_url": "https://api.github.com/users/jonas-schievink/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jonas-schievink", "id": 1786438, "node_id": "MDQ6VXNlcjE3ODY0Mzg=", "avatar_url": "https://avatars.githubusercontent.com/u/1786438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonas-schievink", "html_url": "https://github.com/jonas-schievink", "followers_url": "https://api.github.com/users/jonas-schievink/followers", "following_url": "https://api.github.com/users/jonas-schievink/following{/other_user}", "gists_url": "https://api.github.com/users/jonas-schievink/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonas-schievink/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonas-schievink/subscriptions", "organizations_url": "https://api.github.com/users/jonas-schievink/orgs", "repos_url": "https://api.github.com/users/jonas-schievink/repos", "events_url": "https://api.github.com/users/jonas-schievink/events{/privacy}", "received_events_url": "https://api.github.com/users/jonas-schievink/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "db061fb274ddc9a8820c5f0c90b077c88961d1be", "url": "https://api.github.com/repos/rust-lang/rust/commits/db061fb274ddc9a8820c5f0c90b077c88961d1be", "html_url": "https://github.com/rust-lang/rust/commit/db061fb274ddc9a8820c5f0c90b077c88961d1be"}], "stats": {"total": 27, "additions": 27, "deletions": 0}, "files": [{"sha": "844e5a117e3da27eb7d9fc01cfb069b472aa41e9", "filename": "crates/mbe/src/lib.rs", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/2c85db8eb6bac4a9106e7373840c0b3d209188a6/crates%2Fmbe%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2c85db8eb6bac4a9106e7373840c0b3d209188a6/crates%2Fmbe%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fmbe%2Fsrc%2Flib.rs?ref=2c85db8eb6bac4a9106e7373840c0b3d209188a6", "patch": "@@ -12,6 +12,8 @@ mod subtree_source;\n #[cfg(test)]\n mod tests;\n \n+use std::fmt;\n+\n pub use tt::{Delimiter, Punct};\n \n use crate::{\n@@ -42,6 +44,20 @@ impl From<tt::ExpansionError> for ExpandError {\n     }\n }\n \n+impl fmt::Display for ExpandError {\n+    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {\n+        match self {\n+            ExpandError::NoMatchingRule => f.write_str(\"no rule matches input tokens\"),\n+            ExpandError::UnexpectedToken => f.write_str(\"unexpected token in input\"),\n+            ExpandError::BindingError(e) => f.write_str(e),\n+            ExpandError::ConversionError => f.write_str(\"could not convert tokens\"),\n+            ExpandError::InvalidRepeat => f.write_str(\"invalid repeat expression\"),\n+            ExpandError::ProcMacroError(e) => write!(f, \"{}\", e),\n+            ExpandError::Other(e) => f.write_str(e),\n+        }\n+    }\n+}\n+\n pub use crate::syntax_bridge::{\n     ast_to_token_tree, parse_to_token_tree, syntax_node_to_token_tree, token_tree_to_syntax_node,\n     TokenMap,"}, {"sha": "7c796f5645dc6531fb201852c0f3d60c68a891eb", "filename": "crates/tt/src/lib.rs", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/2c85db8eb6bac4a9106e7373840c0b3d209188a6/crates%2Ftt%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2c85db8eb6bac4a9106e7373840c0b3d209188a6/crates%2Ftt%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Ftt%2Fsrc%2Flib.rs?ref=2c85db8eb6bac4a9106e7373840c0b3d209188a6", "patch": "@@ -240,6 +240,17 @@ pub enum ExpansionError {\n     ExpansionError(String),\n }\n \n+impl fmt::Display for ExpansionError {\n+    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {\n+        match self {\n+            ExpansionError::IOError(e) => write!(f, \"I/O error: {}\", e),\n+            ExpansionError::JsonError(e) => write!(f, \"JSON decoding error: {}\", e),\n+            ExpansionError::Unknown(e) => write!(f, \"{}\", e),\n+            ExpansionError::ExpansionError(e) => write!(f, \"proc macro returned error: {}\", e),\n+        }\n+    }\n+}\n+\n pub trait TokenExpander: Debug + Send + Sync + RefUnwindSafe {\n     fn expand(&self, subtree: &Subtree, attrs: Option<&Subtree>)\n         -> Result<Subtree, ExpansionError>;"}]}