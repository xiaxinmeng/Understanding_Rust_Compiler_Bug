{"sha": "e92bdb9828ff19afc92c292b289be1790f2ee116", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU5MmJkYjk4MjhmZjE5YWZjOTJjMjkyYjI4OWJlMTc5MGYyZWUxMTY=", "commit": {"author": {"name": "varkor", "email": "github@varkor.com", "date": "2018-01-29T14:38:50Z"}, "committer": {"name": "varkor", "email": "github@varkor.com", "date": "2018-01-29T14:38:50Z"}, "message": "Specify output filenames for compatibility with Windows", "tree": {"sha": "6ca071148d2b4640318b8601a4604b8872da8ba4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6ca071148d2b4640318b8601a4604b8872da8ba4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e92bdb9828ff19afc92c292b289be1790f2ee116", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e92bdb9828ff19afc92c292b289be1790f2ee116", "html_url": "https://github.com/rust-lang/rust/commit/e92bdb9828ff19afc92c292b289be1790f2ee116", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e92bdb9828ff19afc92c292b289be1790f2ee116/comments", "author": {"login": "varkor", "id": 3943692, "node_id": "MDQ6VXNlcjM5NDM2OTI=", "avatar_url": "https://avatars.githubusercontent.com/u/3943692?v=4", "gravatar_id": "", "url": "https://api.github.com/users/varkor", "html_url": "https://github.com/varkor", "followers_url": "https://api.github.com/users/varkor/followers", "following_url": "https://api.github.com/users/varkor/following{/other_user}", "gists_url": "https://api.github.com/users/varkor/gists{/gist_id}", "starred_url": "https://api.github.com/users/varkor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/varkor/subscriptions", "organizations_url": "https://api.github.com/users/varkor/orgs", "repos_url": "https://api.github.com/users/varkor/repos", "events_url": "https://api.github.com/users/varkor/events{/privacy}", "received_events_url": "https://api.github.com/users/varkor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "varkor", "id": 3943692, "node_id": "MDQ6VXNlcjM5NDM2OTI=", "avatar_url": "https://avatars.githubusercontent.com/u/3943692?v=4", "gravatar_id": "", "url": "https://api.github.com/users/varkor", "html_url": "https://github.com/varkor", "followers_url": "https://api.github.com/users/varkor/followers", "following_url": "https://api.github.com/users/varkor/following{/other_user}", "gists_url": "https://api.github.com/users/varkor/gists{/gist_id}", "starred_url": "https://api.github.com/users/varkor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/varkor/subscriptions", "organizations_url": "https://api.github.com/users/varkor/orgs", "repos_url": "https://api.github.com/users/varkor/repos", "events_url": "https://api.github.com/users/varkor/events{/privacy}", "received_events_url": "https://api.github.com/users/varkor/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9a2f02df6655f65e5a7892e853cc2112e28b89e8", "url": "https://api.github.com/repos/rust-lang/rust/commits/9a2f02df6655f65e5a7892e853cc2112e28b89e8", "html_url": "https://github.com/rust-lang/rust/commit/9a2f02df6655f65e5a7892e853cc2112e28b89e8"}], "stats": {"total": 37, "additions": 27, "deletions": 10}, "files": [{"sha": "50c19b5a99a540d2a6e3bff54aafa512b4461713", "filename": "src/librustc_driver/driver.rs", "status": "modified", "additions": 9, "deletions": 6, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/e92bdb9828ff19afc92c292b289be1790f2ee116/src%2Flibrustc_driver%2Fdriver.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e92bdb9828ff19afc92c292b289be1790f2ee116/src%2Flibrustc_driver%2Fdriver.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_driver%2Fdriver.rs?ref=e92bdb9828ff19afc92c292b289be1790f2ee116", "patch": "@@ -142,7 +142,7 @@ pub fn compile_input(trans: Box<TransCrate>,\n             )?\n         };\n \n-        let output_paths = generated_output_paths(sess, &outputs, &crate_name);\n+        let output_paths = generated_output_paths(sess, &outputs, output.is_some(), &crate_name);\n \n         // Ensure the source file isn't accidentally overwritten during compilation.\n         if let Some(ref input_path) = *input_path {\n@@ -1111,16 +1111,19 @@ fn escape_dep_filename(filename: &FileName) -> String {\n // Returns all the paths that correspond to generated files.\n fn generated_output_paths(sess: &Session,\n                           outputs: &OutputFilenames,\n+                          exact_name: bool,\n                           crate_name: &str) -> Vec<PathBuf> {\n     let mut out_filenames = Vec::new();\n     for output_type in sess.opts.output_types.keys() {\n         let file = outputs.path(*output_type);\n         match *output_type {\n-            OutputType::Exe => {\n-                for output in sess.crate_types.borrow().iter() {\n+            // If the filename has been overridden using `-o`, it will not be modified\n+            // by appending `.rlib`, `.exe`, etc., so we can skip this transformation.\n+            OutputType::Exe if !exact_name => {\n+                for crate_type in sess.crate_types.borrow().iter() {\n                     let p = ::rustc_trans_utils::link::filename_for_input(\n                         sess,\n-                        *output,\n+                        *crate_type,\n                         crate_name,\n                         outputs\n                     );\n@@ -1376,10 +1379,10 @@ pub fn build_output_filenames(input: &Input,\n                 Some(out_file.clone())\n             };\n             if *odir != None {\n-                sess.warn(\"ignoring --out-dir flag due to -o flag.\");\n+                sess.warn(\"ignoring --out-dir flag due to -o flag\");\n             }\n             if !sess.opts.cg.extra_filename.is_empty() {\n-                sess.warn(\"ignoring -C extra-filename flag due to -o flag.\");\n+                sess.warn(\"ignoring -C extra-filename flag due to -o flag\");\n             }\n \n             let cur_dir = Path::new(\"\");"}, {"sha": "74e5dcfcf36c2656838a9909e29fb0b3392d4680", "filename": "src/test/run-make/output-filename-conflicts-with-directory/Makefile", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e92bdb9828ff19afc92c292b289be1790f2ee116/src%2Ftest%2Frun-make%2Foutput-filename-conflicts-with-directory%2FMakefile", "raw_url": "https://github.com/rust-lang/rust/raw/e92bdb9828ff19afc92c292b289be1790f2ee116/src%2Ftest%2Frun-make%2Foutput-filename-conflicts-with-directory%2FMakefile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Foutput-filename-conflicts-with-directory%2FMakefile?ref=e92bdb9828ff19afc92c292b289be1790f2ee116", "patch": "@@ -3,5 +3,5 @@\n all:\n \tcp foo.rs $(TMPDIR)/foo.rs\n \tmkdir $(TMPDIR)/foo\n-\t$(RUSTC) $(TMPDIR)/foo.rs 2>&1 \\\n+\t$(RUSTC) $(TMPDIR)/foo.rs -o $(TMPDIR)/foo 2>&1 \\\n \t\t| $(CGREP) -e \"the generated executable for the input file \\\".*foo\\.rs\\\" conflicts with the existing directory \\\".*foo\\\"\""}, {"sha": "3f07b46791d22753d7a5492210b1d50c99c07cc7", "filename": "src/test/run-make/output-filename-conflicts-with-directory/foo.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e92bdb9828ff19afc92c292b289be1790f2ee116/src%2Ftest%2Frun-make%2Foutput-filename-conflicts-with-directory%2Ffoo.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e92bdb9828ff19afc92c292b289be1790f2ee116/src%2Ftest%2Frun-make%2Foutput-filename-conflicts-with-directory%2Ffoo.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Foutput-filename-conflicts-with-directory%2Ffoo.rs?ref=e92bdb9828ff19afc92c292b289be1790f2ee116", "patch": "@@ -1,4 +1,4 @@\n-// Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n+// Copyright 2018 The Rust Project Developers. See the COPYRIGHT\n // file at the top-level directory of this distribution and at\n // http://rust-lang.org/COPYRIGHT.\n //"}, {"sha": "6377038b7be745228d3c2173a3ae6ccf263637a1", "filename": "src/test/run-make/output-filename-overwrites-input/Makefile", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/e92bdb9828ff19afc92c292b289be1790f2ee116/src%2Ftest%2Frun-make%2Foutput-filename-overwrites-input%2FMakefile", "raw_url": "https://github.com/rust-lang/rust/raw/e92bdb9828ff19afc92c292b289be1790f2ee116/src%2Ftest%2Frun-make%2Foutput-filename-overwrites-input%2FMakefile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Foutput-filename-overwrites-input%2FMakefile?ref=e92bdb9828ff19afc92c292b289be1790f2ee116", "patch": "@@ -2,8 +2,11 @@\n \n all:\n \tcp foo.rs $(TMPDIR)/foo\n-\t$(RUSTC) $(TMPDIR)/foo 2>&1 \\\n+\t$(RUSTC) $(TMPDIR)/foo -o $(TMPDIR)/foo 2>&1 \\\n \t\t| $(CGREP) -e \"the input file \\\".*foo\\\" would be overwritten by the generated executable\"\n+\tcp bar.rs $(TMPDIR)/bar.rlib\n+\t$(RUSTC) $(TMPDIR)/bar.rlib -o $(TMPDIR)/bar.rlib 2>&1 \\\n+\t\t| $(CGREP) -e \"the input file \\\".*bar.rlib\\\" would be overwritten by the generated executable\"\n \t$(RUSTC) foo.rs 2>&1 && $(RUSTC) -Z ls $(TMPDIR)/foo 2>&1\n \tcp foo.rs $(TMPDIR)/foo.rs\n \t$(RUSTC) $(TMPDIR)/foo.rs -o $(TMPDIR)/foo.rs 2>&1 \\"}, {"sha": "8e4e35fdee66ee01ff9945df698104c2c403d902", "filename": "src/test/run-make/output-filename-overwrites-input/bar.rs", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/e92bdb9828ff19afc92c292b289be1790f2ee116/src%2Ftest%2Frun-make%2Foutput-filename-overwrites-input%2Fbar.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e92bdb9828ff19afc92c292b289be1790f2ee116/src%2Ftest%2Frun-make%2Foutput-filename-overwrites-input%2Fbar.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Foutput-filename-overwrites-input%2Fbar.rs?ref=e92bdb9828ff19afc92c292b289be1790f2ee116", "patch": "@@ -0,0 +1,11 @@\n+// Copyright 2018 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#![crate_type = \"lib\"]"}, {"sha": "3f07b46791d22753d7a5492210b1d50c99c07cc7", "filename": "src/test/run-make/output-filename-overwrites-input/foo.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e92bdb9828ff19afc92c292b289be1790f2ee116/src%2Ftest%2Frun-make%2Foutput-filename-overwrites-input%2Ffoo.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e92bdb9828ff19afc92c292b289be1790f2ee116/src%2Ftest%2Frun-make%2Foutput-filename-overwrites-input%2Ffoo.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Foutput-filename-overwrites-input%2Ffoo.rs?ref=e92bdb9828ff19afc92c292b289be1790f2ee116", "patch": "@@ -1,4 +1,4 @@\n-// Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n+// Copyright 2018 The Rust Project Developers. See the COPYRIGHT\n // file at the top-level directory of this distribution and at\n // http://rust-lang.org/COPYRIGHT.\n //"}]}