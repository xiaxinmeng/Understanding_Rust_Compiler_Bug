{"sha": "cdcbdfdf0ad46f534f45997fdd42409492ac000c", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNkY2JkZmRmMGFkNDZmNTM0ZjQ1OTk3ZmRkNDI0MDk0OTJhYzAwMGM=", "commit": {"author": {"name": "Nick Cameron", "email": "ncameron@mozilla.com", "date": "2018-09-12T01:44:22Z"}, "committer": {"name": "Nick Cameron", "email": "ncameron@mozilla.com", "date": "2018-10-25T20:48:44Z"}, "message": "Fix tests and rustdoc", "tree": {"sha": "eef7dd2c42a45e22eda8f9ad93dbbaf0b99839b1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/eef7dd2c42a45e22eda8f9ad93dbbaf0b99839b1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/cdcbdfdf0ad46f534f45997fdd42409492ac000c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/cdcbdfdf0ad46f534f45997fdd42409492ac000c", "html_url": "https://github.com/rust-lang/rust/commit/cdcbdfdf0ad46f534f45997fdd42409492ac000c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/cdcbdfdf0ad46f534f45997fdd42409492ac000c/comments", "author": {"login": "nrc", "id": 762626, "node_id": "MDQ6VXNlcjc2MjYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/762626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nrc", "html_url": "https://github.com/nrc", "followers_url": "https://api.github.com/users/nrc/followers", "following_url": "https://api.github.com/users/nrc/following{/other_user}", "gists_url": "https://api.github.com/users/nrc/gists{/gist_id}", "starred_url": "https://api.github.com/users/nrc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nrc/subscriptions", "organizations_url": "https://api.github.com/users/nrc/orgs", "repos_url": "https://api.github.com/users/nrc/repos", "events_url": "https://api.github.com/users/nrc/events{/privacy}", "received_events_url": "https://api.github.com/users/nrc/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nrc", "id": 762626, "node_id": "MDQ6VXNlcjc2MjYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/762626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nrc", "html_url": "https://github.com/nrc", "followers_url": "https://api.github.com/users/nrc/followers", "following_url": "https://api.github.com/users/nrc/following{/other_user}", "gists_url": "https://api.github.com/users/nrc/gists{/gist_id}", "starred_url": "https://api.github.com/users/nrc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nrc/subscriptions", "organizations_url": "https://api.github.com/users/nrc/orgs", "repos_url": "https://api.github.com/users/nrc/repos", "events_url": "https://api.github.com/users/nrc/events{/privacy}", "received_events_url": "https://api.github.com/users/nrc/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c4803863919212812c626f796f9b393ab98c7e37", "url": "https://api.github.com/repos/rust-lang/rust/commits/c4803863919212812c626f796f9b393ab98c7e37", "html_url": "https://github.com/rust-lang/rust/commit/c4803863919212812c626f796f9b393ab98c7e37"}], "stats": {"total": 52, "additions": 28, "deletions": 24}, "files": [{"sha": "9b2720717c9b391aaa0e33eda84b84a11db520d3", "filename": "src/librustdoc/clean/mod.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/cdcbdfdf0ad46f534f45997fdd42409492ac000c/src%2Flibrustdoc%2Fclean%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cdcbdfdf0ad46f534f45997fdd42409492ac000c/src%2Flibrustdoc%2Fclean%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fclean%2Fmod.rs?ref=cdcbdfdf0ad46f534f45997fdd42409492ac000c", "patch": "@@ -4012,6 +4012,8 @@ where F: Fn(DefId) -> Def {\n         def: def_ctor(def_id),\n         segments: hir::HirVec::from_vec(apb.names.iter().map(|s| hir::PathSegment {\n             ident: ast::Ident::from_str(&s),\n+            id: None,\n+            def: None,\n             args: None,\n             infer_types: false,\n         }).collect())"}, {"sha": "d6b0127e44d019e02faf3de39f5b359b9808b9c6", "filename": "src/librustdoc/core.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/cdcbdfdf0ad46f534f45997fdd42409492ac000c/src%2Flibrustdoc%2Fcore.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cdcbdfdf0ad46f534f45997fdd42409492ac000c/src%2Flibrustdoc%2Fcore.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fcore.rs?ref=cdcbdfdf0ad46f534f45997fdd42409492ac000c", "patch": "@@ -186,6 +186,8 @@ impl<'a, 'tcx, 'rcx, 'cstore> DocContext<'a, 'tcx, 'rcx, 'cstore> {\n \n         segments.push(hir::PathSegment::new(\n             real_name.unwrap_or(last.ident),\n+            None,\n+            None,\n             self.generics_to_path_params(generics.clone()),\n             false,\n         ));"}, {"sha": "98cd67459e068260753afb0772cd87c655ec8d02", "filename": "src/test/mir-opt/end_region_5.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/cdcbdfdf0ad46f534f45997fdd42409492ac000c/src%2Ftest%2Fmir-opt%2Fend_region_5.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cdcbdfdf0ad46f534f45997fdd42409492ac000c/src%2Ftest%2Fmir-opt%2Fend_region_5.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fend_region_5.rs?ref=cdcbdfdf0ad46f534f45997fdd42409492ac000c", "patch": "@@ -33,7 +33,7 @@ fn foo<F>(f: F) where F: FnOnce() -> i32 {\n //     let _1: D;\n //     ...\n //     let mut _2: ();\n-//     let mut _3: [closure@NodeId(18) d:&'14s D];\n+//     let mut _3: [closure@NodeId(28) d:&'14s D];\n //     let mut _4: &'14s D;\n //     bb0: {\n //         StorageLive(_1);\n@@ -42,7 +42,7 @@ fn foo<F>(f: F) where F: FnOnce() -> i32 {\n //         StorageLive(_3);\n //         StorageLive(_4);\n //         _4 = &'14s _1;\n-//         _3 = [closure@NodeId(18)] { d: move _4 };\n+//         _3 = [closure@NodeId(28)] { d: move _4 };\n //         StorageDead(_4);\n //         _2 = const foo(move _3) -> [return: bb2, unwind: bb3];\n //     }\n@@ -67,7 +67,7 @@ fn foo<F>(f: F) where F: FnOnce() -> i32 {\n // END rustc.main.SimplifyCfg-qualify-consts.after.mir\n \n // START rustc.main-{{closure}}.SimplifyCfg-qualify-consts.after.mir\n-// fn main::{{closure}}(_1: [closure@NodeId(18) d:&'14s D]) -> i32 {\n+// fn main::{{closure}}(_1: [closure@NodeId(28) d:&'14s D]) -> i32 {\n //    let mut _0: i32;\n //\n //    bb0: {"}, {"sha": "48f3a83506d7cbce7fde9af375ba5403f48469fc", "filename": "src/test/mir-opt/end_region_6.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/cdcbdfdf0ad46f534f45997fdd42409492ac000c/src%2Ftest%2Fmir-opt%2Fend_region_6.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cdcbdfdf0ad46f534f45997fdd42409492ac000c/src%2Ftest%2Fmir-opt%2Fend_region_6.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fend_region_6.rs?ref=cdcbdfdf0ad46f534f45997fdd42409492ac000c", "patch": "@@ -33,7 +33,7 @@ fn foo<F>(f: F) where F: FnOnce() -> i32 {\n //     let _1: D;\n //     ...\n //     let mut _2: ();\n-//     let mut _3: [closure@NodeId(22) d:&'19s D];\n+//     let mut _3: [closure@NodeId(33) d:&'19s D];\n //     let mut _4: &'19s D;\n //     bb0: {\n //         StorageLive(_1);\n@@ -42,7 +42,7 @@ fn foo<F>(f: F) where F: FnOnce() -> i32 {\n //         StorageLive(_3);\n //         StorageLive(_4);\n //         _4 = &'19s _1;\n-//         _3 = [closure@NodeId(22)] { d: move _4 };\n+//         _3 = [closure@NodeId(33)] { d: move _4 };\n //         StorageDead(_4);\n //         _2 = const foo(move _3) -> [return: bb2, unwind: bb3];\n //     }\n@@ -66,7 +66,7 @@ fn foo<F>(f: F) where F: FnOnce() -> i32 {\n // END rustc.main.SimplifyCfg-qualify-consts.after.mir\n \n // START rustc.main-{{closure}}.SimplifyCfg-qualify-consts.after.mir\n-// fn main::{{closure}}(_1: [closure@NodeId(22) d:&'19s D]) -> i32 {\n+// fn main::{{closure}}(_1: [closure@NodeId(33) d:&'19s D]) -> i32 {\n //     let mut _0: i32;\n //     ...\n //     let _2: &'16_0rs D;"}, {"sha": "062d89a7c7e2fa01c78a07a90acc376536d70e75", "filename": "src/test/mir-opt/end_region_7.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/cdcbdfdf0ad46f534f45997fdd42409492ac000c/src%2Ftest%2Fmir-opt%2Fend_region_7.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cdcbdfdf0ad46f534f45997fdd42409492ac000c/src%2Ftest%2Fmir-opt%2Fend_region_7.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fend_region_7.rs?ref=cdcbdfdf0ad46f534f45997fdd42409492ac000c", "patch": "@@ -33,13 +33,13 @@ fn foo<F>(f: F) where F: FnOnce() -> i32 {\n //     let _1: D;\n //     ...\n //     let mut _2: ();\n-//     let mut _3: [closure@NodeId(22) d:D];\n+//     let mut _3: [closure@NodeId(33) d:D];\n //     bb0: {\n //         StorageLive(_1);\n //         _1 = D::{{constructor}}(const 0i32,);\n //         FakeRead(ForLet, _1);\n //         StorageLive(_3);\n-//         _3 = [closure@NodeId(22)] { d: move _1 };\n+//         _3 = [closure@NodeId(33)] { d: move _1 };\n //         _2 = const foo(move _3) -> [return: bb2, unwind: bb4];\n //     }\n //     bb1: {\n@@ -67,7 +67,7 @@ fn foo<F>(f: F) where F: FnOnce() -> i32 {\n // END rustc.main.SimplifyCfg-qualify-consts.after.mir\n \n // START rustc.main-{{closure}}.SimplifyCfg-qualify-consts.after.mir\n-// fn main::{{closure}}(_1: [closure@NodeId(22) d:D]) -> i32 {\n+// fn main::{{closure}}(_1: [closure@NodeId(33) d:D]) -> i32 {\n //     let mut _0: i32;\n //     ...\n //     let _2: &'16_0rs D;"}, {"sha": "207901720577af937b7e458e7670e73df1dbaadf", "filename": "src/test/mir-opt/end_region_8.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/cdcbdfdf0ad46f534f45997fdd42409492ac000c/src%2Ftest%2Fmir-opt%2Fend_region_8.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cdcbdfdf0ad46f534f45997fdd42409492ac000c/src%2Ftest%2Fmir-opt%2Fend_region_8.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fend_region_8.rs?ref=cdcbdfdf0ad46f534f45997fdd42409492ac000c", "patch": "@@ -36,7 +36,7 @@ fn foo<F>(f: F) where F: FnOnce() -> i32 {\n //    let _1: D;\n //    ...\n //    let mut _3: ();\n-//    let mut _4: [closure@NodeId(22) r:&'19s D];\n+//    let mut _4: [closure@NodeId(33) r:&'19s D];\n //    bb0: {\n //        StorageLive(_1);\n //        _1 = D::{{constructor}}(const 0i32,);\n@@ -45,7 +45,7 @@ fn foo<F>(f: F) where F: FnOnce() -> i32 {\n //        _2 = &'21_1rs _1;\n //        FakeRead(ForLet, _2);\n //        StorageLive(_4);\n-//        _4 = [closure@NodeId(22)] { r: _2 };\n+//        _4 = [closure@NodeId(33)] { r: _2 };\n //        _3 = const foo(move _4) -> [return: bb2, unwind: bb3];\n //    }\n //    bb1: {\n@@ -72,7 +72,7 @@ fn foo<F>(f: F) where F: FnOnce() -> i32 {\n // END rustc.main.SimplifyCfg-qualify-consts.after.mir\n \n // START rustc.main-{{closure}}.SimplifyCfg-qualify-consts.after.mir\n-// fn main::{{closure}}(_1: [closure@NodeId(22) r:&'19s D]) -> i32 {\n+// fn main::{{closure}}(_1: [closure@NodeId(33) r:&'19s D]) -> i32 {\n //     let mut _0: i32;\n //\n //     bb0: {"}, {"sha": "ba1712f4ca39884985f47da40fcbc758fbefc180", "filename": "src/test/mir-opt/inline-closure-borrows-arg.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/cdcbdfdf0ad46f534f45997fdd42409492ac000c/src%2Ftest%2Fmir-opt%2Finline-closure-borrows-arg.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cdcbdfdf0ad46f534f45997fdd42409492ac000c/src%2Ftest%2Fmir-opt%2Finline-closure-borrows-arg.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Finline-closure-borrows-arg.rs?ref=cdcbdfdf0ad46f534f45997fdd42409492ac000c", "patch": "@@ -30,7 +30,7 @@ fn foo<T: Copy>(_t: T, q: &i32) -> i32 {\n // ...\n // bb0: {\n //     ...\n-//     _3 = [closure@NodeId(39)];\n+//     _3 = [closure@NodeId(53)];\n //     ...\n //     _4 = &_3;\n //     ..."}, {"sha": "9cb0a4dc2bfacf7c4df8d5cce916d6d75b169486", "filename": "src/test/mir-opt/inline-closure.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/cdcbdfdf0ad46f534f45997fdd42409492ac000c/src%2Ftest%2Fmir-opt%2Finline-closure.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cdcbdfdf0ad46f534f45997fdd42409492ac000c/src%2Ftest%2Fmir-opt%2Finline-closure.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Finline-closure.rs?ref=cdcbdfdf0ad46f534f45997fdd42409492ac000c", "patch": "@@ -26,7 +26,7 @@ fn foo<T: Copy>(_t: T, q: i32) -> i32 {\n // ...\n // bb0: {\n //     ...\n-//     _3 = [closure@NodeId(28)];\n+//     _3 = [closure@NodeId(39)];\n //     ...\n //     _4 = &_3;\n //     ..."}, {"sha": "66538c57f654545bf9c0efb4a6fb29b287c177c3", "filename": "src/test/mir-opt/validate_1.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/cdcbdfdf0ad46f534f45997fdd42409492ac000c/src%2Ftest%2Fmir-opt%2Fvalidate_1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cdcbdfdf0ad46f534f45997fdd42409492ac000c/src%2Ftest%2Fmir-opt%2Fvalidate_1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fvalidate_1.rs?ref=cdcbdfdf0ad46f534f45997fdd42409492ac000c", "patch": "@@ -59,10 +59,10 @@ fn main() {\n // }\n // END rustc.main.EraseRegions.after.mir\n // START rustc.main-{{closure}}.EraseRegions.after.mir\n-// fn main::{{closure}}(_1: &ReErased [closure@NodeId(50)], _2: &ReErased mut i32) -> i32 {\n+// fn main::{{closure}}(_1: &ReErased [closure@NodeId(65)], _2: &ReErased mut i32) -> i32 {\n //     ...\n //     bb0: {\n-//         Validate(Acquire, [_1: &ReFree(DefId(0/1:11 ~ validate_1[317d]::main[0]::{{closure}}[0]), BrEnv) [closure@NodeId(50)], _2: &ReFree(DefId(0/1:11 ~ validate_1[317d]::main[0]::{{closure}}[0]), BrAnon(0)) mut i32]);\n+//         Validate(Acquire, [_1: &ReFree(DefId(0/1:11 ~ validate_1[317d]::main[0]::{{closure}}[0]), BrEnv) [closure@NodeId(65)], _2: &ReFree(DefId(0/1:11 ~ validate_1[317d]::main[0]::{{closure}}[0]), BrAnon(0)) mut i32]);\n //         StorageLive(_3);\n //         Validate(Suspend(ReScope(Remainder { block: ItemLocalId(25), first_statement_index: 0 })), [(*_2): i32]);\n //         _3 = &ReErased (*_2);"}, {"sha": "542ac8a42411f1d852565b6be9f87f31f00e7646", "filename": "src/test/mir-opt/validate_4.rs", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/cdcbdfdf0ad46f534f45997fdd42409492ac000c/src%2Ftest%2Fmir-opt%2Fvalidate_4.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cdcbdfdf0ad46f534f45997fdd42409492ac000c/src%2Ftest%2Fmir-opt%2Fvalidate_4.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fvalidate_4.rs?ref=cdcbdfdf0ad46f534f45997fdd42409492ac000c", "patch": "@@ -48,11 +48,11 @@ fn main() {\n // }\n // END rustc.write_42.EraseRegions.after.mir\n // START rustc.write_42-{{closure}}.EraseRegions.after.mir\n-// fn write_42::{{closure}}(_1: &ReErased [closure@NodeId(22)], _2: *mut i32) -> () {\n+// fn write_42::{{closure}}(_1: &ReErased [closure@NodeId(32)], _2: *mut i32) -> () {\n //     ...\n //     bb0: {\n-//         Validate(Acquire, [_1: &ReFree(DefId(0/1:9 ~ validate_4[317d]::write_42[0]::{{closure}}[0]), BrEnv) [closure@NodeId(22)], _2: *mut i32]);\n-//         Validate(Release, [_1: &ReFree(DefId(0/1:9 ~ validate_4[317d]::write_42[0]::{{closure}}[0]), BrEnv) [closure@NodeId(22)], _2: *mut i32]);\n+//         Validate(Acquire, [_1: &ReFree(DefId(0/1:9 ~ validate_4[317d]::write_42[0]::{{closure}}[0]), BrEnv) [closure@NodeId(32)], _2: *mut i32]);\n+//         Validate(Release, [_1: &ReFree(DefId(0/1:9 ~ validate_4[317d]::write_42[0]::{{closure}}[0]), BrEnv) [closure@NodeId(32)], _2: *mut i32]);\n //         (*_2) = const 23i32;\n //         _0 = ();\n //         return;\n@@ -76,11 +76,11 @@ fn main() {\n // }\n // END rustc.test.EraseRegions.after.mir\n // START rustc.main-{{closure}}.EraseRegions.after.mir\n-// fn main::{{closure}}(_1: &ReErased [closure@NodeId(60)], _2: &ReErased mut i32) -> bool {\n+// fn main::{{closure}}(_1: &ReErased [closure@NodeId(80)], _2: &ReErased mut i32) -> bool {\n //     ...\n //     bb0: {\n-//         Validate(Acquire, [_1: &ReFree(DefId(0/1:10 ~ validate_4[317d]::main[0]::{{closure}}[0]), BrEnv) [closure@NodeId(60)], _2: &ReFree(DefId(0/1:10 ~ validate_4[317d]::main[0]::{{closure}}[0]), BrAnon(0)) mut i32]);\n-//         Validate(Release, [_1: &ReFree(DefId(0/1:10 ~ validate_4[317d]::main[0]::{{closure}}[0]), BrEnv) [closure@NodeId(60)], _2: &ReFree(DefId(0/1:10 ~ validate_4[317d]::main[0]::{{closure}}[0]), BrAnon(0)) mut i32]);\n+//         Validate(Acquire, [_1: &ReFree(DefId(0/1:10 ~ validate_4[317d]::main[0]::{{closure}}[0]), BrEnv) [closure@NodeId(80)], _2: &ReFree(DefId(0/1:10 ~ validate_4[317d]::main[0]::{{closure}}[0]), BrAnon(0)) mut i32]);\n+//         Validate(Release, [_1: &ReFree(DefId(0/1:10 ~ validate_4[317d]::main[0]::{{closure}}[0]), BrEnv) [closure@NodeId(80)], _2: &ReFree(DefId(0/1:10 ~ validate_4[317d]::main[0]::{{closure}}[0]), BrAnon(0)) mut i32]);\n //         StorageLive(_3);\n //         ...\n //         _0 = const write_42(move _3) -> bb1;"}, {"sha": "8016a3d4cce4cb4e0b73d97ab31440ca6ab5865c", "filename": "src/test/mir-opt/validate_5.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/cdcbdfdf0ad46f534f45997fdd42409492ac000c/src%2Ftest%2Fmir-opt%2Fvalidate_5.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cdcbdfdf0ad46f534f45997fdd42409492ac000c/src%2Ftest%2Fmir-opt%2Fvalidate_5.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fvalidate_5.rs?ref=cdcbdfdf0ad46f534f45997fdd42409492ac000c", "patch": "@@ -46,10 +46,10 @@ fn main() {\n // }\n // END rustc.test.EraseRegions.after.mir\n // START rustc.main-{{closure}}.EraseRegions.after.mir\n-// fn main::{{closure}}(_1: &ReErased [closure@NodeId(46)], _2: &ReErased mut i32) -> bool {\n+// fn main::{{closure}}(_1: &ReErased [closure@NodeId(62)], _2: &ReErased mut i32) -> bool {\n //     ...\n //     bb0: {\n-//         Validate(Acquire, [_1: &ReFree(DefId(0/1:9 ~ validate_5[317d]::main[0]::{{closure}}[0]), BrEnv) [closure@NodeId(46)], _2: &ReFree(DefId(0/1:9 ~ validate_5[317d]::main[0]::{{closure}}[0]), BrAnon(0)) mut i32]);\n+//         Validate(Acquire, [_1: &ReFree(DefId(0/1:9 ~ validate_5[317d]::main[0]::{{closure}}[0]), BrEnv) [closure@NodeId(62)], _2: &ReFree(DefId(0/1:9 ~ validate_5[317d]::main[0]::{{closure}}[0]), BrAnon(0)) mut i32]);\n //         StorageLive(_3);\n //         StorageLive(_4);\n //         StorageLive(_5);"}]}