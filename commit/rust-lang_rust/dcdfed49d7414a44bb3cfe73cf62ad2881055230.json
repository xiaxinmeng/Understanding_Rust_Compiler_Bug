{"sha": "dcdfed49d7414a44bb3cfe73cf62ad2881055230", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRjZGZlZDQ5ZDc0MTRhNDRiYjNjZmU3M2NmNjJhZDI4ODEwNTUyMzA=", "commit": {"author": {"name": "Josh Stone", "email": "cuviper@gmail.com", "date": "2016-02-15T00:15:39Z"}, "committer": {"name": "Josh Stone", "email": "cuviper@gmail.com", "date": "2016-02-15T03:11:39Z"}, "message": "std: use LFS lseek64 on Linux", "tree": {"sha": "701739b6347d57515787caa8e26463e889688e40", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/701739b6347d57515787caa8e26463e889688e40"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/dcdfed49d7414a44bb3cfe73cf62ad2881055230", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/dcdfed49d7414a44bb3cfe73cf62ad2881055230", "html_url": "https://github.com/rust-lang/rust/commit/dcdfed49d7414a44bb3cfe73cf62ad2881055230", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/dcdfed49d7414a44bb3cfe73cf62ad2881055230/comments", "author": {"login": "cuviper", "id": 36186, "node_id": "MDQ6VXNlcjM2MTg2", "avatar_url": "https://avatars.githubusercontent.com/u/36186?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cuviper", "html_url": "https://github.com/cuviper", "followers_url": "https://api.github.com/users/cuviper/followers", "following_url": "https://api.github.com/users/cuviper/following{/other_user}", "gists_url": "https://api.github.com/users/cuviper/gists{/gist_id}", "starred_url": "https://api.github.com/users/cuviper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cuviper/subscriptions", "organizations_url": "https://api.github.com/users/cuviper/orgs", "repos_url": "https://api.github.com/users/cuviper/repos", "events_url": "https://api.github.com/users/cuviper/events{/privacy}", "received_events_url": "https://api.github.com/users/cuviper/received_events", "type": "User", "site_admin": false}, "committer": {"login": "cuviper", "id": 36186, "node_id": "MDQ6VXNlcjM2MTg2", "avatar_url": "https://avatars.githubusercontent.com/u/36186?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cuviper", "html_url": "https://github.com/cuviper", "followers_url": "https://api.github.com/users/cuviper/followers", "following_url": "https://api.github.com/users/cuviper/following{/other_user}", "gists_url": "https://api.github.com/users/cuviper/gists{/gist_id}", "starred_url": "https://api.github.com/users/cuviper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cuviper/subscriptions", "organizations_url": "https://api.github.com/users/cuviper/orgs", "repos_url": "https://api.github.com/users/cuviper/repos", "events_url": "https://api.github.com/users/cuviper/events{/privacy}", "received_events_url": "https://api.github.com/users/cuviper/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1ea38f8928a017ce544faf9d025853211dbce49c", "url": "https://api.github.com/repos/rust-lang/rust/commits/1ea38f8928a017ce544faf9d025853211dbce49c", "html_url": "https://github.com/rust-lang/rust/commit/1ea38f8928a017ce544faf9d025853211dbce49c"}], "stats": {"total": 14, "additions": 7, "deletions": 7}, "files": [{"sha": "ab8b700e193e2061b361e5ac5336240421785c2e", "filename": "src/libstd/sys/unix/fs.rs", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/dcdfed49d7414a44bb3cfe73cf62ad2881055230/src%2Flibstd%2Fsys%2Funix%2Ffs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dcdfed49d7414a44bb3cfe73cf62ad2881055230/src%2Flibstd%2Fsys%2Funix%2Ffs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Funix%2Ffs.rs?ref=dcdfed49d7414a44bb3cfe73cf62ad2881055230", "patch": "@@ -15,7 +15,7 @@ use os::unix::prelude::*;\n use ffi::{CString, CStr, OsString, OsStr};\n use fmt;\n use io::{self, Error, ErrorKind, SeekFrom};\n-use libc::{self, dirent, c_int, off_t, mode_t};\n+use libc::{self, dirent, c_int, mode_t};\n use mem;\n use path::{Path, PathBuf};\n use ptr;\n@@ -26,10 +26,10 @@ use sys::{cvt, cvt_r};\n use sys_common::{AsInner, FromInner};\n \n #[cfg(target_os = \"linux\")]\n-use libc::{stat64, fstat64, lstat64, off64_t, ftruncate64};\n+use libc::{stat64, fstat64, lstat64, off64_t, ftruncate64, lseek64};\n #[cfg(not(target_os = \"linux\"))]\n use libc::{stat as stat64, fstat as fstat64, lstat as lstat64, off_t as off64_t,\n-           ftruncate as ftruncate64};\n+           ftruncate as ftruncate64, lseek as lseek64};\n \n pub struct File(FileDesc);\n \n@@ -461,11 +461,11 @@ impl File {\n \n     pub fn seek(&self, pos: SeekFrom) -> io::Result<u64> {\n         let (whence, pos) = match pos {\n-            SeekFrom::Start(off) => (libc::SEEK_SET, off as off_t),\n-            SeekFrom::End(off) => (libc::SEEK_END, off as off_t),\n-            SeekFrom::Current(off) => (libc::SEEK_CUR, off as off_t),\n+            SeekFrom::Start(off) => (libc::SEEK_SET, off as off64_t),\n+            SeekFrom::End(off) => (libc::SEEK_END, off as off64_t),\n+            SeekFrom::Current(off) => (libc::SEEK_CUR, off as off64_t),\n         };\n-        let n = try!(cvt(unsafe { libc::lseek(self.0.raw(), pos, whence) }));\n+        let n = try!(cvt(unsafe { lseek64(self.0.raw(), pos, whence) }));\n         Ok(n as u64)\n     }\n "}]}