{"sha": "920ca61871b681a278e8a3519952a4769c071034", "node_id": "MDY6Q29tbWl0NzI0NzEyOjkyMGNhNjE4NzFiNjgxYTI3OGU4YTM1MTk5NTJhNDc2OWMwNzEwMzQ=", "commit": {"author": {"name": "Luqman Aden", "email": "laden@csclub.uwaterloo.ca", "date": "2013-12-06T03:13:46Z"}, "committer": {"name": "Luqman Aden", "email": "laden@csclub.uwaterloo.ca", "date": "2013-12-06T20:47:14Z"}, "message": "librustc: Pass the correct type when adding cleanups.", "tree": {"sha": "333b00d0307336cfc57714e959390db02611f64d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/333b00d0307336cfc57714e959390db02611f64d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/920ca61871b681a278e8a3519952a4769c071034", "comment_count": 5, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/920ca61871b681a278e8a3519952a4769c071034", "html_url": "https://github.com/rust-lang/rust/commit/920ca61871b681a278e8a3519952a4769c071034", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/920ca61871b681a278e8a3519952a4769c071034/comments", "author": {"login": "luqmana", "id": 287063, "node_id": "MDQ6VXNlcjI4NzA2Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/287063?v=4", "gravatar_id": "", "url": "https://api.github.com/users/luqmana", "html_url": "https://github.com/luqmana", "followers_url": "https://api.github.com/users/luqmana/followers", "following_url": "https://api.github.com/users/luqmana/following{/other_user}", "gists_url": "https://api.github.com/users/luqmana/gists{/gist_id}", "starred_url": "https://api.github.com/users/luqmana/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/luqmana/subscriptions", "organizations_url": "https://api.github.com/users/luqmana/orgs", "repos_url": "https://api.github.com/users/luqmana/repos", "events_url": "https://api.github.com/users/luqmana/events{/privacy}", "received_events_url": "https://api.github.com/users/luqmana/received_events", "type": "User", "site_admin": false}, "committer": {"login": "luqmana", "id": 287063, "node_id": "MDQ6VXNlcjI4NzA2Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/287063?v=4", "gravatar_id": "", "url": "https://api.github.com/users/luqmana", "html_url": "https://github.com/luqmana", "followers_url": "https://api.github.com/users/luqmana/followers", "following_url": "https://api.github.com/users/luqmana/following{/other_user}", "gists_url": "https://api.github.com/users/luqmana/gists{/gist_id}", "starred_url": "https://api.github.com/users/luqmana/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/luqmana/subscriptions", "organizations_url": "https://api.github.com/users/luqmana/orgs", "repos_url": "https://api.github.com/users/luqmana/repos", "events_url": "https://api.github.com/users/luqmana/events{/privacy}", "received_events_url": "https://api.github.com/users/luqmana/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "aa4455e4c76598fcf6de84de14f050a700a2a14e", "url": "https://api.github.com/repos/rust-lang/rust/commits/aa4455e4c76598fcf6de84de14f050a700a2a14e", "html_url": "https://github.com/rust-lang/rust/commit/aa4455e4c76598fcf6de84de14f050a700a2a14e"}], "stats": {"total": 58, "additions": 55, "deletions": 3}, "files": [{"sha": "212b65f7bc63487ca00964f80dfe8d403e7e4277", "filename": "src/librustc/middle/trans/expr.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/920ca61871b681a278e8a3519952a4769c071034/src%2Flibrustc%2Fmiddle%2Ftrans%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/920ca61871b681a278e8a3519952a4769c071034/src%2Flibrustc%2Fmiddle%2Ftrans%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftrans%2Fexpr.rs?ref=920ca61871b681a278e8a3519952a4769c071034", "patch": "@@ -1293,7 +1293,7 @@ fn trans_adt(bcx: @mut Block, repr: &adt::Repr, discr: ty::Disr,\n     adt::trans_start_init(bcx, repr, addr, discr);\n     for &(i, e) in fields.iter() {\n         let dest = adt::trans_field_ptr(bcx, repr, addr, discr, i);\n-        let e_ty = expr_ty(bcx, e);\n+        let e_ty = expr_ty_adjusted(bcx, e);\n         bcx = trans_into(bcx, e, SaveIn(dest));\n         add_clean_temp_mem(bcx, dest, e_ty);\n         temp_cleanups.push(dest);"}, {"sha": "b7c518109963bf2ee2112a9cec1eec77e4c96702", "filename": "src/librustc/middle/trans/glue.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/920ca61871b681a278e8a3519952a4769c071034/src%2Flibrustc%2Fmiddle%2Ftrans%2Fglue.rs", "raw_url": "https://github.com/rust-lang/rust/raw/920ca61871b681a278e8a3519952a4769c071034/src%2Flibrustc%2Fmiddle%2Ftrans%2Fglue.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftrans%2Fglue.rs?ref=920ca61871b681a278e8a3519952a4769c071034", "patch": "@@ -274,8 +274,7 @@ pub fn call_tydesc_glue_full(bcx: @mut Block,\n     let ccx = bcx.ccx();\n     // NB: Don't short-circuit even if this block is unreachable because\n     // GC-based cleanup needs to the see that the roots are live.\n-    let no_lpads =\n-        ccx.sess.opts.debugging_opts & session::no_landing_pads != 0;\n+    let no_lpads = ccx.sess.opts.debugging_opts & session::no_landing_pads != 0;\n     if bcx.unreachable && !no_lpads { return; }\n \n     let static_glue_fn = match static_ti {"}, {"sha": "4b79760956cc88cb51b22e575d0bd2c4ce86bc27", "filename": "src/test/run-pass/issue-9382.rs", "status": "added", "additions": 53, "deletions": 0, "changes": 53, "blob_url": "https://github.com/rust-lang/rust/blob/920ca61871b681a278e8a3519952a4769c071034/src%2Ftest%2Frun-pass%2Fissue-9382.rs", "raw_url": "https://github.com/rust-lang/rust/raw/920ca61871b681a278e8a3519952a4769c071034/src%2Ftest%2Frun-pass%2Fissue-9382.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-9382.rs?ref=920ca61871b681a278e8a3519952a4769c071034", "patch": "@@ -0,0 +1,53 @@\n+ // Copyright 2013 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#[allow(unnecessary_allocation)];\n+\n+// Tests for a previous bug that occured due to an interaction\n+// between struct field initialization and the auto-coercion\n+// from a vector to a slice. The drop glue was being invoked on\n+// the temporary slice with a wrong type, triggering an LLVM assert.\n+\n+struct Thing1<'self> {\n+    baz: &'self [~int],\n+    bar: ~u64,\n+}\n+\n+struct Thing2<'self> {\n+    baz: &'self [~int],\n+    bar: u64,\n+}\n+\n+pub fn main() {\n+    let _t1_fixed = Thing1 {\n+        baz: [],\n+        bar: ~32,\n+    };\n+    let _t1_uniq = Thing1 {\n+        baz: ~[],\n+        bar: ~32,\n+    };\n+    let _t1_at = Thing1 {\n+        baz: @[],\n+        bar: ~32,\n+    };\n+    let _t2_fixed = Thing2 {\n+        baz: [],\n+        bar: 32,\n+    };\n+    let _t2_uniq = Thing2 {\n+        baz: ~[],\n+        bar: 32,\n+    };\n+    let _t2_at = Thing2 {\n+        baz: @[],\n+        bar: 32,\n+    };\n+}"}]}