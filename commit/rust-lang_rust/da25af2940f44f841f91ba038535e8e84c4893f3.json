{"sha": "da25af2940f44f841f91ba038535e8e84c4893f3", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRhMjVhZjI5NDBmNDRmODQxZjkxYmEwMzg1MzVlOGU4NGM0ODkzZjM=", "commit": {"author": {"name": "Noah Lev", "email": "camelidcamel@gmail.com", "date": "2021-08-17T20:55:31Z"}, "committer": {"name": "Noah Lev", "email": "camelidcamel@gmail.com", "date": "2021-08-17T21:27:48Z"}, "message": "Make spans for tuple patterns in E0023 more precise\n\nAs suggested in #86307.", "tree": {"sha": "0cb344dbe53d428696c63b6f2a496ed72a2cf306", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0cb344dbe53d428696c63b6f2a496ed72a2cf306"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/da25af2940f44f841f91ba038535e8e84c4893f3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/da25af2940f44f841f91ba038535e8e84c4893f3", "html_url": "https://github.com/rust-lang/rust/commit/da25af2940f44f841f91ba038535e8e84c4893f3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/da25af2940f44f841f91ba038535e8e84c4893f3/comments", "author": {"login": "camelid", "id": 37223377, "node_id": "MDQ6VXNlcjM3MjIzMzc3", "avatar_url": "https://avatars.githubusercontent.com/u/37223377?v=4", "gravatar_id": "", "url": "https://api.github.com/users/camelid", "html_url": "https://github.com/camelid", "followers_url": "https://api.github.com/users/camelid/followers", "following_url": "https://api.github.com/users/camelid/following{/other_user}", "gists_url": "https://api.github.com/users/camelid/gists{/gist_id}", "starred_url": "https://api.github.com/users/camelid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/camelid/subscriptions", "organizations_url": "https://api.github.com/users/camelid/orgs", "repos_url": "https://api.github.com/users/camelid/repos", "events_url": "https://api.github.com/users/camelid/events{/privacy}", "received_events_url": "https://api.github.com/users/camelid/received_events", "type": "User", "site_admin": false}, "committer": {"login": "camelid", "id": 37223377, "node_id": "MDQ6VXNlcjM3MjIzMzc3", "avatar_url": "https://avatars.githubusercontent.com/u/37223377?v=4", "gravatar_id": "", "url": "https://api.github.com/users/camelid", "html_url": "https://github.com/camelid", "followers_url": "https://api.github.com/users/camelid/followers", "following_url": "https://api.github.com/users/camelid/following{/other_user}", "gists_url": "https://api.github.com/users/camelid/gists{/gist_id}", "starred_url": "https://api.github.com/users/camelid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/camelid/subscriptions", "organizations_url": "https://api.github.com/users/camelid/orgs", "repos_url": "https://api.github.com/users/camelid/repos", "events_url": "https://api.github.com/users/camelid/events{/privacy}", "received_events_url": "https://api.github.com/users/camelid/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d83da1d05dc75ff3452c068299f40e5d99589d71", "url": "https://api.github.com/repos/rust-lang/rust/commits/d83da1d05dc75ff3452c068299f40e5d99589d71", "html_url": "https://github.com/rust-lang/rust/commit/d83da1d05dc75ff3452c068299f40e5d99589d71"}], "stats": {"total": 144, "additions": 96, "deletions": 48}, "files": [{"sha": "2ef79c7686c5118cfa16177028ecfc13881f5d34", "filename": "compiler/rustc_typeck/src/check/pat.rs", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/da25af2940f44f841f91ba038535e8e84c4893f3/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fpat.rs", "raw_url": "https://github.com/rust-lang/rust/raw/da25af2940f44f841f91ba038535e8e84c4893f3/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fpat.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fpat.rs?ref=da25af2940f44f841f91ba038535e8e84c4893f3", "patch": "@@ -990,10 +990,11 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n     ) {\n         let subpats_ending = pluralize!(subpats.len());\n         let fields_ending = pluralize!(fields.len());\n+        let fields_span = pat_span.trim_start(qpath.span()).unwrap_or(pat_span);\n         let res_span = self.tcx.def_span(res.def_id());\n         let mut err = struct_span_err!(\n             self.tcx.sess,\n-            pat_span,\n+            fields_span,\n             E0023,\n             \"this pattern has {} field{}, but the corresponding {} has {} field{}\",\n             subpats.len(),\n@@ -1003,9 +1004,10 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n             fields_ending,\n         );\n         err.span_label(\n-            pat_span,\n+            fields_span,\n             format!(\"expected {} field{}, found {}\", fields.len(), fields_ending, subpats.len(),),\n         )\n+        .span_label(qpath.span(), format!(\"this {}\", res.descr()))\n         .span_label(res_span, format!(\"{} defined here\", res.descr()));\n \n         // Identify the case `Some(x, y)` where the expected type is e.g. `Option<(T, U)>`."}, {"sha": "ec7d76f4fe52302b3b1d38a3430e03798e2eacd0", "filename": "src/test/ui/destructuring-assignment/tuple_struct_destructure_fail.stderr", "status": "modified", "additions": 16, "deletions": 8, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/da25af2940f44f841f91ba038535e8e84c4893f3/src%2Ftest%2Fui%2Fdestructuring-assignment%2Ftuple_struct_destructure_fail.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/da25af2940f44f841f91ba038535e8e84c4893f3/src%2Ftest%2Fui%2Fdestructuring-assignment%2Ftuple_struct_destructure_fail.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fdestructuring-assignment%2Ftuple_struct_destructure_fail.stderr?ref=da25af2940f44f841f91ba038535e8e84c4893f3", "patch": "@@ -15,22 +15,26 @@ LL |     Enum::SingleVariant(a, .., b, ..) = Enum::SingleVariant(0, 1);\n    |                            previously used here\n \n error[E0023]: this pattern has 3 fields, but the corresponding tuple struct has 2 fields\n-  --> $DIR/tuple_struct_destructure_fail.rs:30:5\n+  --> $DIR/tuple_struct_destructure_fail.rs:30:16\n    |\n LL | struct TupleStruct<S, T>(S, T);\n    | ------------------------------- tuple struct defined here\n ...\n LL |     TupleStruct(a, a, b) = TupleStruct(1, 2);\n-   |     ^^^^^^^^^^^^^^^^^^^^ expected 2 fields, found 3\n+   |     -----------^^^^^^^^^ expected 2 fields, found 3\n+   |     |\n+   |     this tuple struct\n \n error[E0023]: this pattern has 1 field, but the corresponding tuple struct has 2 fields\n-  --> $DIR/tuple_struct_destructure_fail.rs:32:5\n+  --> $DIR/tuple_struct_destructure_fail.rs:32:16\n    |\n LL | struct TupleStruct<S, T>(S, T);\n    | ------------------------------- tuple struct defined here\n ...\n LL |     TupleStruct(_) = TupleStruct(1, 2);\n-   |     ^^^^^^^^^^^^^^ expected 2 fields, found 1\n+   |     -----------^^^ expected 2 fields, found 1\n+   |     |\n+   |     this tuple struct\n    |\n help: use `_` to explicitly ignore each field\n    |\n@@ -42,22 +46,26 @@ LL |     TupleStruct(..) = TupleStruct(1, 2);\n    |                 ~~\n \n error[E0023]: this pattern has 3 fields, but the corresponding tuple variant has 2 fields\n-  --> $DIR/tuple_struct_destructure_fail.rs:34:5\n+  --> $DIR/tuple_struct_destructure_fail.rs:34:24\n    |\n LL |     SingleVariant(S, T)\n    |     ------------------- tuple variant defined here\n ...\n LL |     Enum::SingleVariant(a, a, b) = Enum::SingleVariant(1, 2);\n-   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected 2 fields, found 3\n+   |     -------------------^^^^^^^^^ expected 2 fields, found 3\n+   |     |\n+   |     this tuple variant\n \n error[E0023]: this pattern has 1 field, but the corresponding tuple variant has 2 fields\n-  --> $DIR/tuple_struct_destructure_fail.rs:36:5\n+  --> $DIR/tuple_struct_destructure_fail.rs:36:24\n    |\n LL |     SingleVariant(S, T)\n    |     ------------------- tuple variant defined here\n ...\n LL |     Enum::SingleVariant(_) = Enum::SingleVariant(1, 2);\n-   |     ^^^^^^^^^^^^^^^^^^^^^^ expected 2 fields, found 1\n+   |     -------------------^^^ expected 2 fields, found 1\n+   |     |\n+   |     this tuple variant\n    |\n help: use `_` to explicitly ignore each field\n    |"}, {"sha": "ecc075b6fb4b5ac943c06c221aa64709696a7f02", "filename": "src/test/ui/error-codes/E0023.stderr", "status": "modified", "additions": 20, "deletions": 10, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/da25af2940f44f841f91ba038535e8e84c4893f3/src%2Ftest%2Fui%2Ferror-codes%2FE0023.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/da25af2940f44f841f91ba038535e8e84c4893f3/src%2Ftest%2Fui%2Ferror-codes%2FE0023.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ferror-codes%2FE0023.stderr?ref=da25af2940f44f841f91ba038535e8e84c4893f3", "patch": "@@ -1,57 +1,67 @@\n error[E0023]: this pattern has 1 field, but the corresponding tuple variant has 2 fields\n-  --> $DIR/E0023.rs:11:9\n+  --> $DIR/E0023.rs:11:21\n    |\n LL |     Apple(String, String),\n    |     --------------------- tuple variant defined here\n ...\n LL |         Fruit::Apple(a) => {},\n-   |         ^^^^^^^^^^^^^^^ expected 2 fields, found 1\n+   |         ------------^^^ expected 2 fields, found 1\n+   |         |\n+   |         this tuple variant\n    |\n help: use `_` to explicitly ignore each field\n    |\n LL |         Fruit::Apple(a, _) => {},\n    |                       +++\n \n error[E0023]: this pattern has 3 fields, but the corresponding tuple variant has 2 fields\n-  --> $DIR/E0023.rs:12:9\n+  --> $DIR/E0023.rs:12:21\n    |\n LL |     Apple(String, String),\n    |     --------------------- tuple variant defined here\n ...\n LL |         Fruit::Apple(a, b, c) => {},\n-   |         ^^^^^^^^^^^^^^^^^^^^^ expected 2 fields, found 3\n+   |         ------------^^^^^^^^^ expected 2 fields, found 3\n+   |         |\n+   |         this tuple variant\n \n error[E0023]: this pattern has 2 fields, but the corresponding tuple variant has 1 field\n-  --> $DIR/E0023.rs:13:9\n+  --> $DIR/E0023.rs:13:20\n    |\n LL |     Pear(u32),\n    |     --------- tuple variant defined here\n ...\n LL |         Fruit::Pear(1, 2) => {},\n-   |         ^^^^^^^^^^^^^^^^^ expected 1 field, found 2\n+   |         -----------^^^^^^ expected 1 field, found 2\n+   |         |\n+   |         this tuple variant\n \n error[E0023]: this pattern has 2 fields, but the corresponding tuple variant has 1 field\n-  --> $DIR/E0023.rs:14:9\n+  --> $DIR/E0023.rs:14:22\n    |\n LL |     Orange((String, String)),\n    |     ------------------------ tuple variant defined here\n ...\n LL |         Fruit::Orange(a, b) => {},\n-   |         ^^^^^^^^^^^^^^^^^^^ expected 1 field, found 2\n+   |         -------------^^^^^^ expected 1 field, found 2\n+   |         |\n+   |         this tuple variant\n    |\n help: missing parentheses\n    |\n LL |         Fruit::Orange((a, b)) => {},\n    |                       +    +\n \n error[E0023]: this pattern has 0 fields, but the corresponding tuple variant has 1 field\n-  --> $DIR/E0023.rs:15:9\n+  --> $DIR/E0023.rs:15:22\n    |\n LL |     Banana(()),\n    |     ---------- tuple variant defined here\n ...\n LL |         Fruit::Banana() => {},\n-   |         ^^^^^^^^^^^^^^^ expected 1 field, found 0\n+   |         -------------^^ expected 1 field, found 0\n+   |         |\n+   |         this tuple variant\n    |\n help: missing parentheses\n    |"}, {"sha": "4c38d2c31ed6827be66723a86cb4e45dbf168c12", "filename": "src/test/ui/issues/issue-72574-2.stderr", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/da25af2940f44f841f91ba038535e8e84c4893f3/src%2Ftest%2Fui%2Fissues%2Fissue-72574-2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/da25af2940f44f841f91ba038535e8e84c4893f3/src%2Ftest%2Fui%2Fissues%2Fissue-72574-2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-72574-2.stderr?ref=da25af2940f44f841f91ba038535e8e84c4893f3", "patch": "@@ -19,13 +19,15 @@ LL |         Binder(_a, _x @ ..) => {}\n    = note: only allowed in tuple, tuple struct, and slice patterns\n \n error[E0023]: this pattern has 2 fields, but the corresponding tuple struct has 3 fields\n-  --> $DIR/issue-72574-2.rs:6:9\n+  --> $DIR/issue-72574-2.rs:6:15\n    |\n LL | struct Binder(i32, i32, i32);\n    | ----------------------------- tuple struct defined here\n ...\n LL |         Binder(_a, _x @ ..) => {}\n-   |         ^^^^^^^^^^^^^^^^^^^ expected 3 fields, found 2\n+   |         ------^^^^^^^^^^^^^ expected 3 fields, found 2\n+   |         |\n+   |         this tuple struct\n    |\n help: use `_` to explicitly ignore each field\n    |"}, {"sha": "776cdfc7083bbd89fc586ac6eca0778ab21cde44", "filename": "src/test/ui/match/match-pattern-field-mismatch.stderr", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/da25af2940f44f841f91ba038535e8e84c4893f3/src%2Ftest%2Fui%2Fmatch%2Fmatch-pattern-field-mismatch.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/da25af2940f44f841f91ba038535e8e84c4893f3/src%2Ftest%2Fui%2Fmatch%2Fmatch-pattern-field-mismatch.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmatch%2Fmatch-pattern-field-mismatch.stderr?ref=da25af2940f44f841f91ba038535e8e84c4893f3", "patch": "@@ -1,11 +1,13 @@\n error[E0023]: this pattern has 2 fields, but the corresponding tuple variant has 3 fields\n-  --> $DIR/match-pattern-field-mismatch.rs:10:11\n+  --> $DIR/match-pattern-field-mismatch.rs:10:21\n    |\n LL |         Rgb(usize, usize, usize),\n    |         ------------------------ tuple variant defined here\n ...\n LL |           Color::Rgb(_, _) => { }\n-   |           ^^^^^^^^^^^^^^^^ expected 3 fields, found 2\n+   |           ----------^^^^^^ expected 3 fields, found 2\n+   |           |\n+   |           this tuple variant\n    |\n help: use `_` to explicitly ignore each field\n    |"}, {"sha": "ea5f970d1d6591fe1e769cc1a1e55fea7c8d7661", "filename": "src/test/ui/pattern/issue-67037-pat-tup-scrut-ty-diff-less-fields.stderr", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/da25af2940f44f841f91ba038535e8e84c4893f3/src%2Ftest%2Fui%2Fpattern%2Fissue-67037-pat-tup-scrut-ty-diff-less-fields.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/da25af2940f44f841f91ba038535e8e84c4893f3/src%2Ftest%2Fui%2Fpattern%2Fissue-67037-pat-tup-scrut-ty-diff-less-fields.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fpattern%2Fissue-67037-pat-tup-scrut-ty-diff-less-fields.stderr?ref=da25af2940f44f841f91ba038535e8e84c4893f3", "patch": "@@ -10,13 +10,15 @@ LL |     let P() = U {};\n               found struct `P<_>`\n \n error[E0023]: this pattern has 0 fields, but the corresponding tuple struct has 1 field\n-  --> $DIR/issue-67037-pat-tup-scrut-ty-diff-less-fields.rs:19:9\n+  --> $DIR/issue-67037-pat-tup-scrut-ty-diff-less-fields.rs:19:10\n    |\n LL | struct P<T>(T); // 1 type parameter wanted\n    | --------------- tuple struct defined here\n ...\n LL |     let P() = U {};\n-   |         ^^^ expected 1 field, found 0\n+   |         -^^ expected 1 field, found 0\n+   |         |\n+   |         this tuple struct\n    |\n help: use `_` to explicitly ignore each field\n    |"}, {"sha": "87c3842d28f4e5adf67a0625c84dcb90ac4fb1a4", "filename": "src/test/ui/pattern/issue-74539.stderr", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/da25af2940f44f841f91ba038535e8e84c4893f3/src%2Ftest%2Fui%2Fpattern%2Fissue-74539.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/da25af2940f44f841f91ba038535e8e84c4893f3/src%2Ftest%2Fui%2Fpattern%2Fissue-74539.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fpattern%2Fissue-74539.stderr?ref=da25af2940f44f841f91ba038535e8e84c4893f3", "patch": "@@ -19,13 +19,15 @@ LL |         E::A(x @ ..) => {\n    = note: only allowed in tuple, tuple struct, and slice patterns\n \n error[E0023]: this pattern has 1 field, but the corresponding tuple variant has 2 fields\n-  --> $DIR/issue-74539.rs:8:9\n+  --> $DIR/issue-74539.rs:8:13\n    |\n LL |     A(u8, u8),\n    |     --------- tuple variant defined here\n ...\n LL |         E::A(x @ ..) => {\n-   |         ^^^^^^^^^^^^ expected 2 fields, found 1\n+   |         ----^^^^^^^^ expected 2 fields, found 1\n+   |         |\n+   |         this tuple variant\n    |\n help: use `_` to explicitly ignore each field\n    |"}, {"sha": "e0386d9cd4ffc973e09c2c2962032a1f2711e22c", "filename": "src/test/ui/pattern/pat-tuple-overfield.stderr", "status": "modified", "additions": 8, "deletions": 4, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/da25af2940f44f841f91ba038535e8e84c4893f3/src%2Ftest%2Fui%2Fpattern%2Fpat-tuple-overfield.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/da25af2940f44f841f91ba038535e8e84c4893f3/src%2Ftest%2Fui%2Fpattern%2Fpat-tuple-overfield.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fpattern%2Fpat-tuple-overfield.stderr?ref=da25af2940f44f841f91ba038535e8e84c4893f3", "patch": "@@ -22,22 +22,26 @@ LL |         (1, 2, .., 3, 4) => {}\n               found tuple `(_, _, _, _)`\n \n error[E0023]: this pattern has 4 fields, but the corresponding tuple struct has 3 fields\n-  --> $DIR/pat-tuple-overfield.rs:10:9\n+  --> $DIR/pat-tuple-overfield.rs:10:10\n    |\n LL | struct S(u8, u8, u8);\n    | --------------------- tuple struct defined here\n ...\n LL |         S(1, 2, 3, 4) => {}\n-   |         ^^^^^^^^^^^^^ expected 3 fields, found 4\n+   |         -^^^^^^^^^^^^ expected 3 fields, found 4\n+   |         |\n+   |         this tuple struct\n \n error[E0023]: this pattern has 4 fields, but the corresponding tuple struct has 3 fields\n-  --> $DIR/pat-tuple-overfield.rs:12:9\n+  --> $DIR/pat-tuple-overfield.rs:12:10\n    |\n LL | struct S(u8, u8, u8);\n    | --------------------- tuple struct defined here\n ...\n LL |         S(1, 2, .., 3, 4) => {}\n-   |         ^^^^^^^^^^^^^^^^^ expected 3 fields, found 4\n+   |         -^^^^^^^^^^^^^^^^ expected 3 fields, found 4\n+   |         |\n+   |         this tuple struct\n \n error: aborting due to 4 previous errors\n "}, {"sha": "4cc20a4ac0ef7cfbc282aaeb2fe182ddf39430fa", "filename": "src/test/ui/pattern/pat-tuple-underfield.stderr", "status": "modified", "additions": 28, "deletions": 14, "changes": 42, "blob_url": "https://github.com/rust-lang/rust/blob/da25af2940f44f841f91ba038535e8e84c4893f3/src%2Ftest%2Fui%2Fpattern%2Fpat-tuple-underfield.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/da25af2940f44f841f91ba038535e8e84c4893f3/src%2Ftest%2Fui%2Fpattern%2Fpat-tuple-underfield.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fpattern%2Fpat-tuple-underfield.stderr?ref=da25af2940f44f841f91ba038535e8e84c4893f3", "patch": "@@ -8,27 +8,31 @@ LL |         E::S => {}\n    |         ^^^^ help: use the tuple variant pattern syntax instead: `E::S(_, _)`\n \n error[E0023]: this pattern has 1 field, but the corresponding tuple struct has 2 fields\n-  --> $DIR/pat-tuple-underfield.rs:9:9\n+  --> $DIR/pat-tuple-underfield.rs:9:10\n    |\n LL | struct S(i32, f32);\n    | ------------------- tuple struct defined here\n ...\n LL |         S(x) => {}\n-   |         ^^^^ expected 2 fields, found 1\n+   |         -^^^ expected 2 fields, found 1\n+   |         |\n+   |         this tuple struct\n    |\n help: use `_` to explicitly ignore each field\n    |\n LL |         S(x, _) => {}\n    |            +++\n \n error[E0023]: this pattern has 1 field, but the corresponding tuple struct has 2 fields\n-  --> $DIR/pat-tuple-underfield.rs:14:9\n+  --> $DIR/pat-tuple-underfield.rs:14:10\n    |\n LL | struct S(i32, f32);\n    | ------------------- tuple struct defined here\n ...\n LL |         S(_) => {}\n-   |         ^^^^ expected 2 fields, found 1\n+   |         -^^^ expected 2 fields, found 1\n+   |         |\n+   |         this tuple struct\n    |\n help: use `_` to explicitly ignore each field\n    |\n@@ -40,13 +44,15 @@ LL |         S(..) => {}\n    |           ~~\n \n error[E0023]: this pattern has 0 fields, but the corresponding tuple struct has 2 fields\n-  --> $DIR/pat-tuple-underfield.rs:20:9\n+  --> $DIR/pat-tuple-underfield.rs:20:10\n    |\n LL | struct S(i32, f32);\n    | ------------------- tuple struct defined here\n ...\n LL |         S() => {}\n-   |         ^^^ expected 2 fields, found 0\n+   |         -^^ expected 2 fields, found 0\n+   |         |\n+   |         this tuple struct\n    |\n help: use `_` to explicitly ignore each field\n    |\n@@ -58,27 +64,31 @@ LL |         S(..) => {}\n    |           ++\n \n error[E0023]: this pattern has 1 field, but the corresponding tuple variant has 2 fields\n-  --> $DIR/pat-tuple-underfield.rs:27:9\n+  --> $DIR/pat-tuple-underfield.rs:27:13\n    |\n LL |     S(i32, f32),\n    |     ----------- tuple variant defined here\n ...\n LL |         E::S(x) => {}\n-   |         ^^^^^^^ expected 2 fields, found 1\n+   |         ----^^^ expected 2 fields, found 1\n+   |         |\n+   |         this tuple variant\n    |\n help: use `_` to explicitly ignore each field\n    |\n LL |         E::S(x, _) => {}\n    |               +++\n \n error[E0023]: this pattern has 1 field, but the corresponding tuple variant has 2 fields\n-  --> $DIR/pat-tuple-underfield.rs:32:9\n+  --> $DIR/pat-tuple-underfield.rs:32:13\n    |\n LL |     S(i32, f32),\n    |     ----------- tuple variant defined here\n ...\n LL |         E::S(_) => {}\n-   |         ^^^^^^^ expected 2 fields, found 1\n+   |         ----^^^ expected 2 fields, found 1\n+   |         |\n+   |         this tuple variant\n    |\n help: use `_` to explicitly ignore each field\n    |\n@@ -90,13 +100,15 @@ LL |         E::S(..) => {}\n    |              ~~\n \n error[E0023]: this pattern has 0 fields, but the corresponding tuple variant has 2 fields\n-  --> $DIR/pat-tuple-underfield.rs:38:9\n+  --> $DIR/pat-tuple-underfield.rs:38:13\n    |\n LL |     S(i32, f32),\n    |     ----------- tuple variant defined here\n ...\n LL |         E::S() => {}\n-   |         ^^^^^^ expected 2 fields, found 0\n+   |         ----^^ expected 2 fields, found 0\n+   |         |\n+   |         this tuple variant\n    |\n help: use `_` to explicitly ignore each field\n    |\n@@ -108,13 +120,15 @@ LL |         E::S(..) => {}\n    |              ++\n \n error[E0023]: this pattern has 2 fields, but the corresponding tuple struct has 4 fields\n-  --> $DIR/pat-tuple-underfield.rs:50:9\n+  --> $DIR/pat-tuple-underfield.rs:50:15\n    |\n LL | struct Point4(i32, i32, i32, i32);\n    | ---------------------------------- tuple struct defined here\n ...\n LL |         Point4(   a   ,     _    ) => {}\n-   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^ expected 4 fields, found 2\n+   |         ------^^^^^^^^^^^^^^^^^^^^ expected 4 fields, found 2\n+   |         |\n+   |         this tuple struct\n    |\n help: use `_` to explicitly ignore each field\n    |"}, {"sha": "216c3ca47d3937a8033ada2fdff4304cb8544294", "filename": "src/test/ui/pattern/pattern-error-continue.stderr", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/da25af2940f44f841f91ba038535e8e84c4893f3/src%2Ftest%2Fui%2Fpattern%2Fpattern-error-continue.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/da25af2940f44f841f91ba038535e8e84c4893f3/src%2Ftest%2Fui%2Fpattern%2Fpattern-error-continue.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fpattern%2Fpattern-error-continue.stderr?ref=da25af2940f44f841f91ba038535e8e84c4893f3", "patch": "@@ -26,13 +26,15 @@ LL |         A::B(_) => (),\n    |            ~\n \n error[E0023]: this pattern has 3 fields, but the corresponding tuple variant has 2 fields\n-  --> $DIR/pattern-error-continue.rs:17:9\n+  --> $DIR/pattern-error-continue.rs:17:13\n    |\n LL |     B(isize, isize),\n    |     --------------- tuple variant defined here\n ...\n LL |         A::B(_, _, _) => (),\n-   |         ^^^^^^^^^^^^^ expected 2 fields, found 3\n+   |         ----^^^^^^^^^ expected 2 fields, found 3\n+   |         |\n+   |         this tuple variant\n \n error[E0308]: mismatched types\n   --> $DIR/pattern-error-continue.rs:22:9"}]}