{"sha": "90be409db0ef219bad25e38ec7b1902683389b07", "node_id": "C_kwDOAAsO6NoAKDkwYmU0MDlkYjBlZjIxOWJhZDI1ZTM4ZWM3YjE5MDI2ODMzODliMDc", "commit": {"author": {"name": "Antoni Boucher", "email": "bouanto@zoho.com", "date": "2021-09-28T13:33:06Z"}, "committer": {"name": "Antoni Boucher", "email": "bouanto@zoho.com", "date": "2021-09-28T13:33:06Z"}, "message": "Merge commit 'cd4810de42c57b64b74dae09c530a4c3a41f87b9' into libgccjit-codegen", "tree": {"sha": "6959d00f4d05b19af30d872bde588e7daa632034", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6959d00f4d05b19af30d872bde588e7daa632034"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/90be409db0ef219bad25e38ec7b1902683389b07", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/90be409db0ef219bad25e38ec7b1902683389b07", "html_url": "https://github.com/rust-lang/rust/commit/90be409db0ef219bad25e38ec7b1902683389b07", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/90be409db0ef219bad25e38ec7b1902683389b07/comments", "author": {"login": "antoyo", "id": 584972, "node_id": "MDQ6VXNlcjU4NDk3Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/584972?v=4", "gravatar_id": "", "url": "https://api.github.com/users/antoyo", "html_url": "https://github.com/antoyo", "followers_url": "https://api.github.com/users/antoyo/followers", "following_url": "https://api.github.com/users/antoyo/following{/other_user}", "gists_url": "https://api.github.com/users/antoyo/gists{/gist_id}", "starred_url": "https://api.github.com/users/antoyo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/antoyo/subscriptions", "organizations_url": "https://api.github.com/users/antoyo/orgs", "repos_url": "https://api.github.com/users/antoyo/repos", "events_url": "https://api.github.com/users/antoyo/events{/privacy}", "received_events_url": "https://api.github.com/users/antoyo/received_events", "type": "User", "site_admin": false}, "committer": {"login": "antoyo", "id": 584972, "node_id": "MDQ6VXNlcjU4NDk3Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/584972?v=4", "gravatar_id": "", "url": "https://api.github.com/users/antoyo", "html_url": "https://github.com/antoyo", "followers_url": "https://api.github.com/users/antoyo/followers", "following_url": "https://api.github.com/users/antoyo/following{/other_user}", "gists_url": "https://api.github.com/users/antoyo/gists{/gist_id}", "starred_url": "https://api.github.com/users/antoyo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/antoyo/subscriptions", "organizations_url": "https://api.github.com/users/antoyo/orgs", "repos_url": "https://api.github.com/users/antoyo/repos", "events_url": "https://api.github.com/users/antoyo/events{/privacy}", "received_events_url": "https://api.github.com/users/antoyo/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7f32dd546f23f122a6c5e87db50e404261b75722", "url": "https://api.github.com/repos/rust-lang/rust/commits/7f32dd546f23f122a6c5e87db50e404261b75722", "html_url": "https://github.com/rust-lang/rust/commit/7f32dd546f23f122a6c5e87db50e404261b75722"}, {"sha": "cd4810de42c57b64b74dae09c530a4c3a41f87b9", "url": "https://api.github.com/repos/rust-lang/rust/commits/cd4810de42c57b64b74dae09c530a4c3a41f87b9", "html_url": "https://github.com/rust-lang/rust/commit/cd4810de42c57b64b74dae09c530a4c3a41f87b9"}], "stats": {"total": 6, "additions": 3, "deletions": 3}, "files": [{"sha": "b79a50d1eee2eebf1beaa11503bd032b9b200142", "filename": "compiler/rustc_codegen_gcc/src/declare.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/90be409db0ef219bad25e38ec7b1902683389b07/compiler%2Frustc_codegen_gcc%2Fsrc%2Fdeclare.rs", "raw_url": "https://github.com/rust-lang/rust/raw/90be409db0ef219bad25e38ec7b1902683389b07/compiler%2Frustc_codegen_gcc%2Fsrc%2Fdeclare.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_gcc%2Fsrc%2Fdeclare.rs?ref=90be409db0ef219bad25e38ec7b1902683389b07", "patch": "@@ -40,12 +40,12 @@ impl<'gcc, 'tcx> CodegenCx<'gcc, 'tcx> {\n         global\n     }\n \n-    pub fn declare_func(&self, name: &str, return_type: Type<'gcc>, params: &[Type<'gcc>], variadic: bool) -> RValue<'gcc> {\n+    /*pub fn declare_func(&self, name: &str, return_type: Type<'gcc>, params: &[Type<'gcc>], variadic: bool) -> RValue<'gcc> {\n         self.linkage.set(FunctionType::Exported);\n         let func = declare_raw_fn(self, name, () /*llvm::CCallConv*/, return_type, params, variadic);\n         // FIXME(antoyo): this is a wrong cast. That requires changing the compiler API.\n         unsafe { std::mem::transmute(func) }\n-    }\n+    }*/\n \n     pub fn declare_global(&self, name: &str, ty: Type<'gcc>, is_tls: bool, link_section: Option<Symbol>) -> LValue<'gcc> {\n         let global = self.context.new_global(None, GlobalKind::Exported, ty, name);"}, {"sha": "375d422cb25c40608565b752f0b555caf54425a4", "filename": "compiler/rustc_codegen_gcc/src/intrinsic/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/90be409db0ef219bad25e38ec7b1902683389b07/compiler%2Frustc_codegen_gcc%2Fsrc%2Fintrinsic%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/90be409db0ef219bad25e38ec7b1902683389b07/compiler%2Frustc_codegen_gcc%2Fsrc%2Fintrinsic%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_gcc%2Fsrc%2Fintrinsic%2Fmod.rs?ref=90be409db0ef219bad25e38ec7b1902683389b07", "patch": "@@ -272,7 +272,7 @@ impl<'a, 'gcc, 'tcx> IntrinsicCallMethods<'tcx> for Builder<'a, 'gcc, 'tcx> {\n                     use rustc_target::abi::Abi::*;\n                     let tp_ty = substs.type_at(0);\n                     let layout = self.layout_of(tp_ty).layout;\n-                    let use_integer_compare = match layout.abi {\n+                    let _use_integer_compare = match layout.abi {\n                         Scalar(_) | ScalarPair(_, _) => true,\n                         Uninhabited | Vector { .. } => false,\n                         Aggregate { .. } => {"}]}