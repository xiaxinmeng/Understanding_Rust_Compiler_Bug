{"sha": "df802a2754a5d536bbec264136a08d166d3bb81a", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRmODAyYTI3NTRhNWQ1MzZiYmVjMjY0MTM2YTA4ZDE2NmQzYmI4MWE=", "commit": {"author": {"name": "Florian Zeitz", "email": "florob@babelmonkeys.de", "date": "2014-05-12T20:44:21Z"}, "committer": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2014-05-14T00:24:07Z"}, "message": "std: Rename str::Normalizations to str::Decompositions\n\nThe Normalizations iterator has been renamed to Decompositions.\nIt does not currently include all forms of Unicode normalization,\nbut only encompasses decompositions.\nIf implemented recomposition would likely be a separate iterator\nwhich works on the result of this one.\n\n[breaking-change]", "tree": {"sha": "18bc2c4a0fa00822ff6156570c432731a379b612", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/18bc2c4a0fa00822ff6156570c432731a379b612"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/df802a2754a5d536bbec264136a08d166d3bb81a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/df802a2754a5d536bbec264136a08d166d3bb81a", "html_url": "https://github.com/rust-lang/rust/commit/df802a2754a5d536bbec264136a08d166d3bb81a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/df802a2754a5d536bbec264136a08d166d3bb81a/comments", "author": {"login": "Florob", "id": 133684, "node_id": "MDQ6VXNlcjEzMzY4NA==", "avatar_url": "https://avatars.githubusercontent.com/u/133684?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Florob", "html_url": "https://github.com/Florob", "followers_url": "https://api.github.com/users/Florob/followers", "following_url": "https://api.github.com/users/Florob/following{/other_user}", "gists_url": "https://api.github.com/users/Florob/gists{/gist_id}", "starred_url": "https://api.github.com/users/Florob/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Florob/subscriptions", "organizations_url": "https://api.github.com/users/Florob/orgs", "repos_url": "https://api.github.com/users/Florob/repos", "events_url": "https://api.github.com/users/Florob/events{/privacy}", "received_events_url": "https://api.github.com/users/Florob/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8c54d5bf406fbfdbebd1a4553f430fca02b2c117", "url": "https://api.github.com/repos/rust-lang/rust/commits/8c54d5bf406fbfdbebd1a4553f430fca02b2c117", "html_url": "https://github.com/rust-lang/rust/commit/8c54d5bf406fbfdbebd1a4553f430fca02b2c117"}], "stats": {"total": 52, "additions": 26, "deletions": 26}, "files": [{"sha": "586890ebe4c9a118fc4a8e30b462955928ff48f6", "filename": "src/etc/unicode.py", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/df802a2754a5d536bbec264136a08d166d3bb81a/src%2Fetc%2Funicode.py", "raw_url": "https://github.com/rust-lang/rust/raw/df802a2754a5d536bbec264136a08d166d3bb81a/src%2Fetc%2Funicode.py", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fetc%2Funicode.py?ref=df802a2754a5d536bbec264136a08d166d3bb81a", "patch": "@@ -256,13 +256,13 @@ def format_table_content(f, content, indent):\n             line = \" \"*indent + chunk\n     f.write(line)\n \n-def emit_core_decomp_module(f, canon, compat):\n+def emit_core_norm_module(f, canon, compat):\n     canon_keys = canon.keys()\n     canon_keys.sort()\n \n     compat_keys = compat.keys()\n     compat_keys.sort()\n-    f.write(\"pub mod decompose {\\n\");\n+    f.write(\"pub mod normalization {\\n\");\n     f.write(\"    use option::Option;\\n\");\n     f.write(\"    use option::{Some, None};\\n\");\n     f.write(\"    use slice::ImmutableVector;\\n\");\n@@ -401,8 +401,8 @@ def emit_core_decomp_module(f, canon, compat):\n \n \"\"\")\n \n-def emit_std_decomp_module(f, combine):\n-    f.write(\"pub mod decompose {\\n\");\n+def emit_std_norm_module(f, combine):\n+    f.write(\"pub mod normalization {\\n\");\n     f.write(\"    use option::{Some, None};\\n\");\n     f.write(\"    use slice::ImmutableVector;\\n\");\n \n@@ -467,7 +467,7 @@ def gen_core_unicode():\n         emit_bsearch_range_table(rf);\n         emit_property_module(rf, \"general_category\", gencats)\n \n-        emit_core_decomp_module(rf, canon_decomp, compat_decomp)\n+        emit_core_norm_module(rf, canon_decomp, compat_decomp)\n \n         derived = load_properties(\"DerivedCoreProperties.txt\",\n                 [\"XID_Start\", \"XID_Continue\", \"Alphabetic\", \"Lowercase\", \"Uppercase\"])\n@@ -485,7 +485,7 @@ def gen_std_unicode():\n     with open(r, \"w\") as rf:\n         # Preamble\n         rf.write(preamble)\n-        emit_std_decomp_module(rf, combines)\n+        emit_std_norm_module(rf, combines)\n \n gen_core_unicode()\n gen_std_unicode()"}, {"sha": "934483dbed423d1337d4544fdde200820d7aa3fa", "filename": "src/libcore/char.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/df802a2754a5d536bbec264136a08d166d3bb81a/src%2Flibcore%2Fchar.rs", "raw_url": "https://github.com/rust-lang/rust/raw/df802a2754a5d536bbec264136a08d166d3bb81a/src%2Flibcore%2Fchar.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fchar.rs?ref=df802a2754a5d536bbec264136a08d166d3bb81a", "patch": "@@ -30,9 +30,9 @@ use iter::{Iterator, range_step};\n use unicode::{derived_property, property, general_category, conversions};\n \n /// Returns the canonical decomposition of a character.\n-pub use unicode::decompose::decompose_canonical;\n+pub use unicode::normalization::decompose_canonical;\n /// Returns the compatibility decomposition of a character.\n-pub use unicode::decompose::decompose_compatible;\n+pub use unicode::normalization::decompose_compatible;\n \n #[cfg(not(test))] use cmp::{Eq, Ord, TotalEq, TotalOrd, Ordering};\n #[cfg(not(test))] use default::Default;"}, {"sha": "242672de2967aaece1f7a90286d14ec2e02b313a", "filename": "src/libcore/unicode.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/df802a2754a5d536bbec264136a08d166d3bb81a/src%2Flibcore%2Funicode.rs", "raw_url": "https://github.com/rust-lang/rust/raw/df802a2754a5d536bbec264136a08d166d3bb81a/src%2Flibcore%2Funicode.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Funicode.rs?ref=df802a2754a5d536bbec264136a08d166d3bb81a", "patch": "@@ -104,7 +104,7 @@ pub mod general_category {\n \n }\n \n-pub mod decompose {\n+pub mod normalization {\n     use option::Option;\n     use option::{Some, None};\n     use slice::ImmutableVector;"}, {"sha": "fa4cf8e4427d0473b14e10fc5ebf1f1f8f35f101", "filename": "src/libstd/str.rs", "status": "modified", "additions": 16, "deletions": 16, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/df802a2754a5d536bbec264136a08d166d3bb81a/src%2Flibstd%2Fstr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/df802a2754a5d536bbec264136a08d166d3bb81a/src%2Flibstd%2Fstr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fstr.rs?ref=df802a2754a5d536bbec264136a08d166d3bb81a", "patch": "@@ -228,25 +228,25 @@ fn canonical_sort(comb: &mut [(char, u8)]) {\n }\n \n #[deriving(Clone)]\n-enum NormalizationForm {\n-    NFD,\n-    NFKD\n+enum DecompositionType {\n+    Canonical,\n+    Compatible\n }\n \n-/// External iterator for a string's normalization's characters.\n+/// External iterator for a string's decomposition's characters.\n /// Use with the `std::iter` module.\n #[deriving(Clone)]\n-pub struct Normalizations<'a> {\n-    kind: NormalizationForm,\n+pub struct Decompositions<'a> {\n+    kind: DecompositionType,\n     iter: Chars<'a>,\n     buffer: Vec<(char, u8)>,\n     sorted: bool\n }\n \n-impl<'a> Iterator<char> for Normalizations<'a> {\n+impl<'a> Iterator<char> for Decompositions<'a> {\n     #[inline]\n     fn next(&mut self) -> Option<char> {\n-        use unicode::decompose::canonical_combining_class;\n+        use unicode::normalization::canonical_combining_class;\n \n         match self.buffer.as_slice().head() {\n             Some(&(c, 0)) => {\n@@ -262,8 +262,8 @@ impl<'a> Iterator<char> for Normalizations<'a> {\n         }\n \n         let decomposer = match self.kind {\n-            NFD => char::decompose_canonical,\n-            NFKD => char::decompose_compatible\n+            Canonical => char::decompose_canonical,\n+            Compatible => char::decompose_compatible\n         };\n \n         if !self.sorted {\n@@ -887,24 +887,24 @@ pub trait StrAllocating: Str {\n     /// An Iterator over the string in Unicode Normalization Form D\n     /// (canonical decomposition).\n     #[inline]\n-    fn nfd_chars<'a>(&'a self) -> Normalizations<'a> {\n-        Normalizations {\n+    fn nfd_chars<'a>(&'a self) -> Decompositions<'a> {\n+        Decompositions {\n             iter: self.as_slice().chars(),\n             buffer: Vec::new(),\n             sorted: false,\n-            kind: NFD\n+            kind: Canonical\n         }\n     }\n \n     /// An Iterator over the string in Unicode Normalization Form KD\n     /// (compatibility decomposition).\n     #[inline]\n-    fn nfkd_chars<'a>(&'a self) -> Normalizations<'a> {\n-        Normalizations {\n+    fn nfkd_chars<'a>(&'a self) -> Decompositions<'a> {\n+        Decompositions {\n             iter: self.as_slice().chars(),\n             buffer: Vec::new(),\n             sorted: false,\n-            kind: NFKD\n+            kind: Compatible\n         }\n     }\n }"}, {"sha": "03c960e96ffe17ebdcd7836f18cf929e5a535282", "filename": "src/libstd/unicode.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/df802a2754a5d536bbec264136a08d166d3bb81a/src%2Flibstd%2Funicode.rs", "raw_url": "https://github.com/rust-lang/rust/raw/df802a2754a5d536bbec264136a08d166d3bb81a/src%2Flibstd%2Funicode.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Funicode.rs?ref=df802a2754a5d536bbec264136a08d166d3bb81a", "patch": "@@ -12,7 +12,7 @@\n \n #![allow(missing_doc, non_uppercase_statics)]\n \n-pub mod decompose {\n+pub mod normalization {\n     use option::{Some, None};\n     use slice::ImmutableVector;\n "}]}