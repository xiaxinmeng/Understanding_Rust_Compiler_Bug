{"sha": "4ce100beb22800c865d831aebe949f244e860917", "node_id": "MDY6Q29tbWl0NzI0NzEyOjRjZTEwMGJlYjIyODAwYzg2NWQ4MzFhZWJlOTQ5ZjI0NGU4NjA5MTc=", "commit": {"author": {"name": "Andy Russell", "email": "arussell123@gmail.com", "date": "2019-06-23T19:57:37Z"}, "committer": {"name": "Andy Russell", "email": "arussell123@gmail.com", "date": "2019-06-23T20:21:43Z"}, "message": "don't strip blank lines in lint documentation", "tree": {"sha": "8da3fd2f07ce1588e15822f66157839510200e80", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8da3fd2f07ce1588e15822f66157839510200e80"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4ce100beb22800c865d831aebe949f244e860917", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQFKBAABCAA0FiEELriChyEaiMu0yCg7viIhAz7bw3QFAl0P328WHGFydXNzZWxs\nMTIzQGdtYWlsLmNvbQAKCRC+IiEDPtvDdDfGB/4lKcsd1QBJ2k3gEnBTjl/+wEWu\njK6Zhynd519/NVL7InO98aJF+rPtZfV+EDxd6FmIhdt+19h/4oa8vY68Puyilqxb\nDzl9QaQgngEhtECYNBDbTsh/byl6NcY5xvkhjXuY4lRInpq2rJBFQ42tpas8qHx9\nIJKMbjdUWqmn4hg0sb0asdiIpYs6ilsZa7K8X+ui6TaiPjAs+I7Yh0bnlsnAOm6A\nHIpoHD8UirXx3C+4UmguKaxGmD1aMtPrQpo/V8hiZa1Ol8iSwaleObcebh8wWUEF\nUuMWV68LyU3OiuPxXfiwFADcOsqEwHVo6ztM8g4REDBLUehTidie+mYr/Nt8\n=gxaR\n-----END PGP SIGNATURE-----", "payload": "tree 8da3fd2f07ce1588e15822f66157839510200e80\nparent c5d1ecd4747d73e0c8a62b82b97cb6d5f83db45f\nauthor Andy Russell <arussell123@gmail.com> 1561319857 -0400\ncommitter Andy Russell <arussell123@gmail.com> 1561321303 -0400\n\ndon't strip blank lines in lint documentation\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4ce100beb22800c865d831aebe949f244e860917", "html_url": "https://github.com/rust-lang/rust/commit/4ce100beb22800c865d831aebe949f244e860917", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4ce100beb22800c865d831aebe949f244e860917/comments", "author": {"login": "euclio", "id": 1372438, "node_id": "MDQ6VXNlcjEzNzI0Mzg=", "avatar_url": "https://avatars.githubusercontent.com/u/1372438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/euclio", "html_url": "https://github.com/euclio", "followers_url": "https://api.github.com/users/euclio/followers", "following_url": "https://api.github.com/users/euclio/following{/other_user}", "gists_url": "https://api.github.com/users/euclio/gists{/gist_id}", "starred_url": "https://api.github.com/users/euclio/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/euclio/subscriptions", "organizations_url": "https://api.github.com/users/euclio/orgs", "repos_url": "https://api.github.com/users/euclio/repos", "events_url": "https://api.github.com/users/euclio/events{/privacy}", "received_events_url": "https://api.github.com/users/euclio/received_events", "type": "User", "site_admin": false}, "committer": {"login": "euclio", "id": 1372438, "node_id": "MDQ6VXNlcjEzNzI0Mzg=", "avatar_url": "https://avatars.githubusercontent.com/u/1372438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/euclio", "html_url": "https://github.com/euclio", "followers_url": "https://api.github.com/users/euclio/followers", "following_url": "https://api.github.com/users/euclio/following{/other_user}", "gists_url": "https://api.github.com/users/euclio/gists{/gist_id}", "starred_url": "https://api.github.com/users/euclio/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/euclio/subscriptions", "organizations_url": "https://api.github.com/users/euclio/orgs", "repos_url": "https://api.github.com/users/euclio/repos", "events_url": "https://api.github.com/users/euclio/events{/privacy}", "received_events_url": "https://api.github.com/users/euclio/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c5d1ecd4747d73e0c8a62b82b97cb6d5f83db45f", "url": "https://api.github.com/repos/rust-lang/rust/commits/c5d1ecd4747d73e0c8a62b82b97cb6d5f83db45f", "html_url": "https://github.com/rust-lang/rust/commit/c5d1ecd4747d73e0c8a62b82b97cb6d5f83db45f"}], "stats": {"total": 21, "additions": 9, "deletions": 12}, "files": [{"sha": "06b867df396103cacf65d2e376d008b8e643424b", "filename": "util/export.py", "status": "modified", "additions": 9, "deletions": 12, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/4ce100beb22800c865d831aebe949f244e860917/util%2Fexport.py", "raw_url": "https://github.com/rust-lang/rust/raw/4ce100beb22800c865d831aebe949f244e860917/util%2Fexport.py", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/util%2Fexport.py?ref=4ce100beb22800c865d831aebe949f244e860917", "patch": "@@ -2,6 +2,7 @@\n \n # Build the gh-pages\n \n+from collections import OrderedDict\n import re\n import sys\n import json\n@@ -21,33 +22,29 @@ def parse_lint_def(lint):\n     lint_dict['id'] = lint.name\n     lint_dict['group'] = lint.group\n     lint_dict['level'] = lint.level\n-    lint_dict['docs'] = {}\n+    lint_dict['docs'] = OrderedDict()\n \n     last_section = None\n \n     for line in lint.doc:\n-        if len(line.strip()) == 0 and not last_section.startswith(\"Example\"):\n-            continue\n-\n         match = re.match(lint_subheadline, line)\n         if match:\n             last_section = match.groups()[0]\n-        if match:\n             text = match.groups()[1]\n         else:\n             text = line\n \n         if not last_section:\n-            log.warn(\"Skipping comment line as it was not preceded by a heading\")\n+            log.warning(\"Skipping comment line as it was not preceded by a heading\")\n             log.debug(\"in lint `%s`, line `%s`\", lint.name, line)\n \n-        fragment = lint_dict['docs'].get(last_section, \"\")\n-        if text == \"\\n\":\n-            line = fragment + text\n-        else:\n-            line = (fragment + \"\\n\" + text).strip()\n+        if last_section not in lint_dict['docs']:\n+            lint_dict['docs'][last_section] = \"\"\n+\n+        lint_dict['docs'][last_section] += text + \"\\n\"\n \n-        lint_dict['docs'][last_section] = line\n+    for section in lint_dict['docs']:\n+        lint_dict['docs'][section] = lint_dict['docs'][section].strip()\n \n     return lint_dict\n "}]}