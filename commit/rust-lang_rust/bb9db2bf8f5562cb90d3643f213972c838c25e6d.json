{"sha": "bb9db2bf8f5562cb90d3643f213972c838c25e6d", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJiOWRiMmJmOGY1NTYyY2I5MGQzNjQzZjIxMzk3MmM4MzhjMjVlNmQ=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2020-09-07T09:30:11Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2020-09-07T09:30:11Z"}, "message": "Auto merge of #1538 - RalfJung:rustup, r=RalfJung\n\nrustup: work around rustc optimizations becoming too smart", "tree": {"sha": "c7bb4b3e76c4a734e521cb0c43797eecaa872d80", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c7bb4b3e76c4a734e521cb0c43797eecaa872d80"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/bb9db2bf8f5562cb90d3643f213972c838c25e6d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/bb9db2bf8f5562cb90d3643f213972c838c25e6d", "html_url": "https://github.com/rust-lang/rust/commit/bb9db2bf8f5562cb90d3643f213972c838c25e6d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/bb9db2bf8f5562cb90d3643f213972c838c25e6d/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5f1182d04a161915df7b1d001ac7cc77fc7a2047", "url": "https://api.github.com/repos/rust-lang/rust/commits/5f1182d04a161915df7b1d001ac7cc77fc7a2047", "html_url": "https://github.com/rust-lang/rust/commit/5f1182d04a161915df7b1d001ac7cc77fc7a2047"}, {"sha": "3ba1035d279e0acfc3aaf68e8bd055f2d1ffb205", "url": "https://api.github.com/repos/rust-lang/rust/commits/3ba1035d279e0acfc3aaf68e8bd055f2d1ffb205", "html_url": "https://github.com/rust-lang/rust/commit/3ba1035d279e0acfc3aaf68e8bd055f2d1ffb205"}], "stats": {"total": 25, "additions": 13, "deletions": 12}, "files": [{"sha": "915a4cf2fd3d157f56dde69ebdc45953e0dc5871", "filename": "ci.sh", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/bb9db2bf8f5562cb90d3643f213972c838c25e6d/ci.sh", "raw_url": "https://github.com/rust-lang/rust/raw/bb9db2bf8f5562cb90d3643f213972c838c25e6d/ci.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/ci.sh?ref=bb9db2bf8f5562cb90d3643f213972c838c25e6d", "patch": "@@ -25,8 +25,8 @@ function run_tests {\n   ./miri test --locked\n   if ! [ -n \"${MIRI_TEST_TARGET+exists}\" ]; then\n     # Only for host architecture: tests with MIR optimizations\n-    # FIXME:only testing level 1 because of <https://github.com/rust-lang/rust/issues/73223>.\n-    MIRI_TEST_FLAGS=\"-Z mir-opt-level=1\" ./miri test --locked\n+    # FIXME: only testing level 2 because of <https://github.com/rust-lang/rust/issues/76432>.\n+    MIRI_TEST_FLAGS=\"-Z mir-opt-level=2\" ./miri test --locked\n   fi\n   # \"miri test\" has built the sysroot for us, now this should pass without\n   # any interactive questions."}, {"sha": "d2cf18f80f1716be3abdf3d41a739f00336ffd42", "filename": "rust-version", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/bb9db2bf8f5562cb90d3643f213972c838c25e6d/rust-version", "raw_url": "https://github.com/rust-lang/rust/raw/bb9db2bf8f5562cb90d3643f213972c838c25e6d/rust-version", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/rust-version?ref=bb9db2bf8f5562cb90d3643f213972c838c25e6d", "patch": "@@ -1 +1 @@\n-d2454643e137bde519786ee9e650c455d7ad6f34\n+e114d6228b948ce056de0bcdec2603c8e89d3727"}, {"sha": "796d8220dc19647027faf10df85fab292ce40e92", "filename": "tests/compile-fail/invalid_bool.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/bb9db2bf8f5562cb90d3643f213972c838c25e6d/tests%2Fcompile-fail%2Finvalid_bool.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bb9db2bf8f5562cb90d3643f213972c838c25e6d/tests%2Fcompile-fail%2Finvalid_bool.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompile-fail%2Finvalid_bool.rs?ref=bb9db2bf8f5562cb90d3643f213972c838c25e6d", "patch": "@@ -1,8 +1,9 @@\n // Validation makes this fail in the wrong place\n // Make sure we find these even with many checks disabled.\n // compile-flags: -Zmiri-disable-alignment-check -Zmiri-disable-stacked-borrows -Zmiri-disable-validation\n+#![feature(test)]\n \n fn main() {\n     let b = unsafe { std::mem::transmute::<u8, bool>(2) };\n-    let _x = b == true; //~ ERROR interpreting an invalid 8-bit value as a bool: 0x02\n+    let _x = b == std::hint::black_box(true); //~ ERROR interpreting an invalid 8-bit value as a bool: 0x02\n }"}, {"sha": "a9db5ff7df39e66665a1c541a528575aa468584c", "filename": "tests/compile-fail/unaligned_pointers/unaligned_ptr_zst.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/bb9db2bf8f5562cb90d3643f213972c838c25e6d/tests%2Fcompile-fail%2Funaligned_pointers%2Funaligned_ptr_zst.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bb9db2bf8f5562cb90d3643f213972c838c25e6d/tests%2Fcompile-fail%2Funaligned_pointers%2Funaligned_ptr_zst.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompile-fail%2Funaligned_pointers%2Funaligned_ptr_zst.rs?ref=bb9db2bf8f5562cb90d3643f213972c838c25e6d", "patch": "@@ -2,8 +2,8 @@\n // compile-flags: -Zmiri-disable-validation\n \n fn main() {\n-    for _ in 0..10 { // Try many times as this might work by chance.\n-        let x = 2u8;\n+    for i in 0..10 { // Try many times as this might work by chance.\n+        let x = i as u8;\n         let x = &x as *const _ as *const [u32; 0];\n         // This must fail because alignment is violated. Test specifically for loading ZST.\n         let _x = unsafe { *x }; //~ERROR alignment 4 is required"}, {"sha": "327ea17731a8d6dfbdf3601a41e378103aadeab9", "filename": "tests/run-pass/float.rs", "status": "modified", "additions": 4, "deletions": 5, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/bb9db2bf8f5562cb90d3643f213972c838c25e6d/tests%2Frun-pass%2Ffloat.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bb9db2bf8f5562cb90d3643f213972c838c25e6d/tests%2Frun-pass%2Ffloat.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frun-pass%2Ffloat.rs?ref=bb9db2bf8f5562cb90d3643f213972c838c25e6d", "patch": "@@ -1,5 +1,8 @@\n-#![feature(stmt_expr_attributes)]\n+// compile-flags: -Zmir-opt-level=0\n+// FIXME: Using opt-level 2 here makes the test take forever (https://github.com/rust-lang/rust/issues/76433).\n+#![feature(stmt_expr_attributes, test)]\n use std::fmt::Debug;\n+use std::hint::black_box;\n \n // Helper function to avoid promotion so that this tests \"run-time\" casts, not CTFE.\n // Doesn't make a big difference when running this in Miri, but it means we can compare this\n@@ -339,10 +342,6 @@ fn ops() {\n /// Tests taken from rustc test suite.\n ///\n \n-// Poor-man's black-box\n-#[inline(never)]\n-fn black_box<T>(x: T) -> T { x }\n-\n macro_rules! test {\n     ($val:expr, $src_ty:ident -> $dest_ty:ident, $expected:expr) => (\n         // black_box disables constant evaluation to test run-time conversions:"}, {"sha": "bbc667c5ddebb74229dceb8dd0eb9462e045f3a7", "filename": "tests/run-pass/u128.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/bb9db2bf8f5562cb90d3643f213972c838c25e6d/tests%2Frun-pass%2Fu128.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bb9db2bf8f5562cb90d3643f213972c838c25e6d/tests%2Frun-pass%2Fu128.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frun-pass%2Fu128.rs?ref=bb9db2bf8f5562cb90d3643f213972c838c25e6d", "patch": "@@ -1,4 +1,5 @@\n-fn b<T>(t: T) -> T { t }\n+#![feature(test)]\n+use std::hint::black_box as b;\n \n fn main() {\n     let x: u128 = 0xFFFF_FFFF_FFFF_FFFF__FFFF_FFFF_FFFF_FFFF;"}]}