{"sha": "f7a1006a07b396ed239c08d3576597dad103e064", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY3YTEwMDZhMDdiMzk2ZWQyMzljMDhkMzU3NjU5N2RhZDEwM2UwNjQ=", "commit": {"author": {"name": "Tim Chevalier", "email": "chevalier@alum.wellesley.edu", "date": "2011-07-12T20:42:05Z"}, "committer": {"name": "Tim Chevalier", "email": "chevalier@alum.wellesley.edu", "date": "2011-07-12T20:42:05Z"}, "message": "Make resolve check for type-variable name-shadowing\n\nCapturing a type argument in the enclosing scope should be an error --\nthis commit implements that check in resolve, avoiding a potential\nassertion failure in trans.\n\nCloses #648.", "tree": {"sha": "73f59d632accd4c54d41072946ab067b7c8e996e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/73f59d632accd4c54d41072946ab067b7c8e996e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f7a1006a07b396ed239c08d3576597dad103e064", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f7a1006a07b396ed239c08d3576597dad103e064", "html_url": "https://github.com/rust-lang/rust/commit/f7a1006a07b396ed239c08d3576597dad103e064", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f7a1006a07b396ed239c08d3576597dad103e064/comments", "author": {"login": "catamorphism", "id": 427212, "node_id": "MDQ6VXNlcjQyNzIxMg==", "avatar_url": "https://avatars.githubusercontent.com/u/427212?v=4", "gravatar_id": "", "url": "https://api.github.com/users/catamorphism", "html_url": "https://github.com/catamorphism", "followers_url": "https://api.github.com/users/catamorphism/followers", "following_url": "https://api.github.com/users/catamorphism/following{/other_user}", "gists_url": "https://api.github.com/users/catamorphism/gists{/gist_id}", "starred_url": "https://api.github.com/users/catamorphism/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/catamorphism/subscriptions", "organizations_url": "https://api.github.com/users/catamorphism/orgs", "repos_url": "https://api.github.com/users/catamorphism/repos", "events_url": "https://api.github.com/users/catamorphism/events{/privacy}", "received_events_url": "https://api.github.com/users/catamorphism/received_events", "type": "User", "site_admin": false}, "committer": {"login": "catamorphism", "id": 427212, "node_id": "MDQ6VXNlcjQyNzIxMg==", "avatar_url": "https://avatars.githubusercontent.com/u/427212?v=4", "gravatar_id": "", "url": "https://api.github.com/users/catamorphism", "html_url": "https://github.com/catamorphism", "followers_url": "https://api.github.com/users/catamorphism/followers", "following_url": "https://api.github.com/users/catamorphism/following{/other_user}", "gists_url": "https://api.github.com/users/catamorphism/gists{/gist_id}", "starred_url": "https://api.github.com/users/catamorphism/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/catamorphism/subscriptions", "organizations_url": "https://api.github.com/users/catamorphism/orgs", "repos_url": "https://api.github.com/users/catamorphism/repos", "events_url": "https://api.github.com/users/catamorphism/events{/privacy}", "received_events_url": "https://api.github.com/users/catamorphism/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0d9c08af2a821c50d412f0b3a93bf2c08cd9bf0e", "url": "https://api.github.com/repos/rust-lang/rust/commits/0d9c08af2a821c50d412f0b3a93bf2c08cd9bf0e", "html_url": "https://github.com/rust-lang/rust/commit/0d9c08af2a821c50d412f0b3a93bf2c08cd9bf0e"}], "stats": {"total": 36, "additions": 26, "deletions": 10}, "files": [{"sha": "080d9270f6adaf0877110e8d8d59c9a56c657526", "filename": "src/comp/middle/resolve.rs", "status": "modified", "additions": 18, "deletions": 5, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/f7a1006a07b396ed239c08d3576597dad103e064/src%2Fcomp%2Fmiddle%2Fresolve.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f7a1006a07b396ed239c08d3576597dad103e064/src%2Fcomp%2Fmiddle%2Fresolve.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Fresolve.rs?ref=f7a1006a07b396ed239c08d3576597dad103e064", "patch": "@@ -596,6 +596,10 @@ fn def_is_obj_field(&def d) -> bool {\n     ret alt (d) { case (ast::def_obj_field(_)) { true } case (_) { false } };\n }\n \n+fn def_is_ty_arg(&def d) -> bool {\n+    ret alt(d) { case (ast::def_ty_arg(_)) { true } case (_) { false } };\n+}\n+\n fn lookup_in_scope(&env e, scopes sc, &span sp, &ident name, namespace ns) ->\n    option::t[def] {\n     fn in_scope(&env e, &span sp, &ident name, &scope s, namespace ns) ->\n@@ -666,15 +670,24 @@ fn lookup_in_scope(&env e, scopes sc, &span sp, &ident name, namespace ns) ->\n                 if (!option::is_none(fnd)) {\n                     auto df = option::get(fnd);\n                     if (left_fn && def_is_local(df) ||\n-                            left_fn_level2 && def_is_obj_field(df)) {\n-                        e.sess.span_fatal(sp,\n-                                        \"attempted dynamic \\\n-                                         environment-capture\");\n+                        left_fn_level2 && def_is_obj_field(df)\n+                        || (scope_is_fn(hd) && left_fn\n+                            && def_is_ty_arg(df))) {\n+                        auto msg = alt (ns) {\n+                            case (ns_type) {\n+                                \"Attempt to use a type \\\n+                                argument out of scope\"\n+                            }\n+                            case (_) { \"attempted dynamic \\\n+                                       environment-capture\" }\n+                        };\n+                        e.sess.span_fatal(sp, msg);\n                     }\n                     ret fnd;\n                 }\n                 if (left_fn) { left_fn_level2 = true; }\n-                if (ns == ns_value && !left_fn) { left_fn = scope_is_fn(hd); }\n+                if ((ns == ns_value || ns == ns_type) && !left_fn) {\n+                    left_fn = scope_is_fn(hd); }\n                 sc = *tl;\n             }\n         }"}, {"sha": "bbb246ea1dc479937526c14fc1995b474c9cb07e", "filename": "src/test/compile-fail/nested-ty-params.rs", "status": "modified", "additions": 2, "deletions": 5, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/f7a1006a07b396ed239c08d3576597dad103e064/src%2Ftest%2Fcompile-fail%2Fnested-ty-params.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f7a1006a07b396ed239c08d3576597dad103e064/src%2Ftest%2Fcompile-fail%2Fnested-ty-params.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fnested-ty-params.rs?ref=f7a1006a07b396ed239c08d3576597dad103e064", "patch": "@@ -1,8 +1,5 @@\n-// error-pattern:Unbound type parameter in callee\n-/* I'm actually not sure whether this should compile.\n-   But having a nice error message seems better than\n-   a bounds check failure (which is what was happening\n-   before.) */\n+// xfail-stage0\n+// error-pattern:Attempt to use a type argument out of scope\n fn hd[U](&vec[U] v) -> U {\n   fn hd1(&vec[U] w) -> U {\n     ret w.(0);"}, {"sha": "46f365537dfb17bc470ebb70c736fab426e415ee", "filename": "src/test/compile-fail/type-arg-out-of-scope.rs", "status": "added", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/f7a1006a07b396ed239c08d3576597dad103e064/src%2Ftest%2Fcompile-fail%2Ftype-arg-out-of-scope.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f7a1006a07b396ed239c08d3576597dad103e064/src%2Ftest%2Fcompile-fail%2Ftype-arg-out-of-scope.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Ftype-arg-out-of-scope.rs?ref=f7a1006a07b396ed239c08d3576597dad103e064", "patch": "@@ -0,0 +1,6 @@\n+// xfail-stage0\n+// error-pattern:Attempt to use a type argument out of scope\n+fn foo[T] (&T x) {\n+    fn bar(fn (&T) -> T f) { };\n+}\n+fn main() { foo(1); }"}]}