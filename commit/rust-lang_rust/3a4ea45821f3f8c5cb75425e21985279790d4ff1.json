{"sha": "3a4ea45821f3f8c5cb75425e21985279790d4ff1", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNhNGVhNDU4MjFmM2Y4YzVjYjc1NDI1ZTIxOTg1Mjc5NzkwZDRmZjE=", "commit": {"author": {"name": "HMPerson1", "email": "hmperson1@gmail.com", "date": "2018-01-30T19:52:45Z"}, "committer": {"name": "HMPerson1", "email": "hmperson1@gmail.com", "date": "2018-02-02T06:53:48Z"}, "message": "Fix `get_enclosing_block`", "tree": {"sha": "dc2e1a5ecd1efdde6b9b1eea649a4c30502d1cf5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/dc2e1a5ecd1efdde6b9b1eea649a4c30502d1cf5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3a4ea45821f3f8c5cb75425e21985279790d4ff1", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQFIBAABCAAyFiEE30PRORiHa0gkBHJnH7R33dJ4Ic4FAlp0Cw8UHGhtcGVyc29u\nMUBnbWFpbC5jb20ACgkQH7R33dJ4Ic6R1gf+IHYZ3m6Ob0lCpUzVweVMr/u9AeND\naYqHFkVZsKOYomCPjtcynKrzMMDVEgkmNpFaF440q1j3+RWlOVIDdL5x5olMtqT4\nxTwsSK/Q3d+b5ncF1lNymiS932a32/3YHhYrVYLBfZR2pT5CF9T2RpDpZbHgKnOr\nsIIzD4sxzXZJP924aVR7GM9PhWwaJ5Zi6Kjq9sBMExHIti0VKN40DATyP6tMYqe8\n1N6Ll94cdkt3xVn2n/7PC/gTsIULRH3rFO43gW3M6fK+lzWfyphIqTnLfYGUVmw6\nvcYFN1+GM89AaPMhWBoHv+PAvJJ/G9dltluOrAMrv25cQ2q7FbRkAUKhMg==\n=YP1N\n-----END PGP SIGNATURE-----", "payload": "tree dc2e1a5ecd1efdde6b9b1eea649a4c30502d1cf5\nparent d5bac828379abd4c03df26bdbe5bd2f06ea36dc4\nauthor HMPerson1 <hmperson1@gmail.com> 1517341965 -0500\ncommitter HMPerson1 <hmperson1@gmail.com> 1517554428 -0500\n\nFix `get_enclosing_block`\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3a4ea45821f3f8c5cb75425e21985279790d4ff1", "html_url": "https://github.com/rust-lang/rust/commit/3a4ea45821f3f8c5cb75425e21985279790d4ff1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3a4ea45821f3f8c5cb75425e21985279790d4ff1/comments", "author": {"login": "HMPerson1", "id": 2219904, "node_id": "MDQ6VXNlcjIyMTk5MDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/2219904?v=4", "gravatar_id": "", "url": "https://api.github.com/users/HMPerson1", "html_url": "https://github.com/HMPerson1", "followers_url": "https://api.github.com/users/HMPerson1/followers", "following_url": "https://api.github.com/users/HMPerson1/following{/other_user}", "gists_url": "https://api.github.com/users/HMPerson1/gists{/gist_id}", "starred_url": "https://api.github.com/users/HMPerson1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/HMPerson1/subscriptions", "organizations_url": "https://api.github.com/users/HMPerson1/orgs", "repos_url": "https://api.github.com/users/HMPerson1/repos", "events_url": "https://api.github.com/users/HMPerson1/events{/privacy}", "received_events_url": "https://api.github.com/users/HMPerson1/received_events", "type": "User", "site_admin": false}, "committer": {"login": "HMPerson1", "id": 2219904, "node_id": "MDQ6VXNlcjIyMTk5MDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/2219904?v=4", "gravatar_id": "", "url": "https://api.github.com/users/HMPerson1", "html_url": "https://github.com/HMPerson1", "followers_url": "https://api.github.com/users/HMPerson1/followers", "following_url": "https://api.github.com/users/HMPerson1/following{/other_user}", "gists_url": "https://api.github.com/users/HMPerson1/gists{/gist_id}", "starred_url": "https://api.github.com/users/HMPerson1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/HMPerson1/subscriptions", "organizations_url": "https://api.github.com/users/HMPerson1/orgs", "repos_url": "https://api.github.com/users/HMPerson1/repos", "events_url": "https://api.github.com/users/HMPerson1/events{/privacy}", "received_events_url": "https://api.github.com/users/HMPerson1/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d5bac828379abd4c03df26bdbe5bd2f06ea36dc4", "url": "https://api.github.com/repos/rust-lang/rust/commits/d5bac828379abd4c03df26bdbe5bd2f06ea36dc4", "html_url": "https://github.com/rust-lang/rust/commit/d5bac828379abd4c03df26bdbe5bd2f06ea36dc4"}], "stats": {"total": 41, "additions": 41, "deletions": 0}, "files": [{"sha": "53ea5ab4a790e68cbca4437a9c59313ef210f7c4", "filename": "clippy_lints/src/utils/mod.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/3a4ea45821f3f8c5cb75425e21985279790d4ff1/clippy_lints%2Fsrc%2Futils%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3a4ea45821f3f8c5cb75425e21985279790d4ff1/clippy_lints%2Fsrc%2Futils%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Futils%2Fmod.rs?ref=3a4ea45821f3f8c5cb75425e21985279790d4ff1", "patch": "@@ -518,6 +518,9 @@ pub fn get_enclosing_block<'a, 'tcx: 'a>(cx: &LateContext<'a, 'tcx>, node: NodeI\n             Node::NodeItem(&Item {\n                 node: ItemFn(_, _, _, _, _, eid),\n                 ..\n+            }) | Node::NodeImplItem(&ImplItem {\n+                node: ImplItemKind::Method(_, eid),\n+                ..\n             }) => match cx.tcx.hir.body(eid).value.node {\n                 ExprBlock(ref block) => Some(block),\n                 _ => None,"}, {"sha": "d4cefb0f1e3ec3640d9675e114fe2e9b9426d400", "filename": "tests/ui/issue_2356.rs", "status": "added", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/3a4ea45821f3f8c5cb75425e21985279790d4ff1/tests%2Fui%2Fissue_2356.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3a4ea45821f3f8c5cb75425e21985279790d4ff1/tests%2Fui%2Fissue_2356.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fissue_2356.rs?ref=3a4ea45821f3f8c5cb75425e21985279790d4ff1", "patch": "@@ -0,0 +1,24 @@\n+#![deny(while_let_on_iterator)]\n+\n+use std::iter::Iterator;\n+\n+struct Foo;\n+\n+impl Foo {\n+    fn foo1<I: Iterator<Item = usize>>(mut it: I) {\n+        while let Some(_) = it.next() {\n+            println!(\"{:?}\", it.size_hint());\n+        }\n+    }\n+\n+    fn foo2<I: Iterator<Item = usize>>(mut it: I) {\n+        while let Some(e) = it.next() {\n+            println!(\"{:?}\", e);\n+        }\n+    }\n+}\n+\n+fn main() {\n+    Foo::foo1(vec![].into_iter());\n+    Foo::foo2(vec![].into_iter());\n+}"}, {"sha": "4b82a0a7565b44a333bd0113e03482e7dafea6cd", "filename": "tests/ui/issue_2356.stderr", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/3a4ea45821f3f8c5cb75425e21985279790d4ff1/tests%2Fui%2Fissue_2356.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/3a4ea45821f3f8c5cb75425e21985279790d4ff1/tests%2Fui%2Fissue_2356.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fissue_2356.stderr?ref=3a4ea45821f3f8c5cb75425e21985279790d4ff1", "patch": "@@ -0,0 +1,14 @@\n+error: this loop could be written as a `for` loop\n+  --> $DIR/issue_2356.rs:15:29\n+   |\n+15 |         while let Some(e) = it.next() {\n+   |                             ^^^^^^^^^ help: try: `for e in it { .. }`\n+   |\n+note: lint level defined here\n+  --> $DIR/issue_2356.rs:1:9\n+   |\n+1  | #![deny(while_let_on_iterator)]\n+   |         ^^^^^^^^^^^^^^^^^^^^^\n+\n+error: aborting due to previous error\n+"}]}