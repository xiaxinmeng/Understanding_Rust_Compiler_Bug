{"sha": "6b7ba50e175e8e81fa0d7e56e1b360a830a7fdfd", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZiN2JhNTBlMTc1ZThlODFmYTBkN2U1NmUxYjM2MGE4MzBhN2ZkZmQ=", "commit": {"author": {"name": "Michael Bebenita", "email": "mbebenita@mozilla.com", "date": "2010-09-08T01:09:52Z"}, "committer": {"name": "Michael Bebenita", "email": "mbebenita@mozilla.com", "date": "2010-09-08T01:41:08Z"}, "message": "Added \"new\" inline operators to memory regions.", "tree": {"sha": "5cd01801e22c20ea7b13b8d3455c00fe65a29f3f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5cd01801e22c20ea7b13b8d3455c00fe65a29f3f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6b7ba50e175e8e81fa0d7e56e1b360a830a7fdfd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6b7ba50e175e8e81fa0d7e56e1b360a830a7fdfd", "html_url": "https://github.com/rust-lang/rust/commit/6b7ba50e175e8e81fa0d7e56e1b360a830a7fdfd", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6b7ba50e175e8e81fa0d7e56e1b360a830a7fdfd/comments", "author": {"login": "mbebenita", "id": 311082, "node_id": "MDQ6VXNlcjMxMTA4Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/311082?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mbebenita", "html_url": "https://github.com/mbebenita", "followers_url": "https://api.github.com/users/mbebenita/followers", "following_url": "https://api.github.com/users/mbebenita/following{/other_user}", "gists_url": "https://api.github.com/users/mbebenita/gists{/gist_id}", "starred_url": "https://api.github.com/users/mbebenita/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mbebenita/subscriptions", "organizations_url": "https://api.github.com/users/mbebenita/orgs", "repos_url": "https://api.github.com/users/mbebenita/repos", "events_url": "https://api.github.com/users/mbebenita/events{/privacy}", "received_events_url": "https://api.github.com/users/mbebenita/received_events", "type": "User", "site_admin": false}, "committer": {"login": "mbebenita", "id": 311082, "node_id": "MDQ6VXNlcjMxMTA4Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/311082?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mbebenita", "html_url": "https://github.com/mbebenita", "followers_url": "https://api.github.com/users/mbebenita/followers", "following_url": "https://api.github.com/users/mbebenita/following{/other_user}", "gists_url": "https://api.github.com/users/mbebenita/gists{/gist_id}", "starred_url": "https://api.github.com/users/mbebenita/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mbebenita/subscriptions", "organizations_url": "https://api.github.com/users/mbebenita/orgs", "repos_url": "https://api.github.com/users/mbebenita/repos", "events_url": "https://api.github.com/users/mbebenita/events{/privacy}", "received_events_url": "https://api.github.com/users/mbebenita/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "066c14009b83ba7dd51c27dba7a16b7971b0ce63", "url": "https://api.github.com/repos/rust-lang/rust/commits/066c14009b83ba7dd51c27dba7a16b7971b0ce63", "html_url": "https://github.com/rust-lang/rust/commit/066c14009b83ba7dd51c27dba7a16b7971b0ce63"}], "stats": {"total": 8, "additions": 8, "deletions": 0}, "files": [{"sha": "affdd8f99749d2220b82ae6f9e6cde5ebf06a898", "filename": "src/rt/memory_region.h", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/6b7ba50e175e8e81fa0d7e56e1b360a830a7fdfd/src%2Frt%2Fmemory_region.h", "raw_url": "https://github.com/rust-lang/rust/raw/6b7ba50e175e8e81fa0d7e56e1b360a830a7fdfd/src%2Frt%2Fmemory_region.h", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Fmemory_region.h?ref=6b7ba50e175e8e81fa0d7e56e1b360a830a7fdfd", "patch": "@@ -34,4 +34,12 @@ class memory_region {\n     virtual ~memory_region();\n };\n \n+inline void *operator new(size_t size, memory_region &region) {\n+    return region.malloc(size);\n+}\n+\n+inline void *operator new(size_t size, memory_region *region) {\n+    return region->malloc(size);\n+}\n+\n #endif /* MEMORY_REGION_H */"}]}