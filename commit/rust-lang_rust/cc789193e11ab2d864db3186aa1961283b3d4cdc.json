{"sha": "cc789193e11ab2d864db3186aa1961283b3d4cdc", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNjNzg5MTkzZTExYWIyZDg2NGRiMzE4NmFhMTk2MTI4M2IzZDRjZGM=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2015-03-16T14:29:13Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2015-03-16T14:29:13Z"}, "message": "Auto merge of #23395 - bluss:tuple-macro, r=alexcrichton\n\nRemove the unused parts of the tuple macro in libcore (for `val0` and similar removed methods). Also adjust the module docs accordingly.", "tree": {"sha": "51151d9635bb208a8b074931485d322c1507f88b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/51151d9635bb208a8b074931485d322c1507f88b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/cc789193e11ab2d864db3186aa1961283b3d4cdc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/cc789193e11ab2d864db3186aa1961283b3d4cdc", "html_url": "https://github.com/rust-lang/rust/commit/cc789193e11ab2d864db3186aa1961283b3d4cdc", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/cc789193e11ab2d864db3186aa1961283b3d4cdc/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "80a0d8223d527d8adf2a4a2a4d3856af98df69f7", "url": "https://api.github.com/repos/rust-lang/rust/commits/80a0d8223d527d8adf2a4a2a4d3856af98df69f7", "html_url": "https://github.com/rust-lang/rust/commit/80a0d8223d527d8adf2a4a2a4d3856af98df69f7"}, {"sha": "880b8c551f1912785be24499e83ba582029d6f17", "url": "https://api.github.com/repos/rust-lang/rust/commits/880b8c551f1912785be24499e83ba582029d6f17", "html_url": "https://github.com/rust-lang/rust/commit/880b8c551f1912785be24499e83ba582029d6f17"}], "stats": {"total": 174, "additions": 84, "deletions": 90}, "files": [{"sha": "ba6a7c4a5fefa0e476a16064f18959107fb7312a", "filename": "src/libcore/tuple.rs", "status": "modified", "additions": 84, "deletions": 90, "changes": 174, "blob_url": "https://github.com/rust-lang/rust/blob/cc789193e11ab2d864db3186aa1961283b3d4cdc/src%2Flibcore%2Ftuple.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cc789193e11ab2d864db3186aa1961283b3d4cdc/src%2Flibcore%2Ftuple.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Ftuple.rs?ref=cc789193e11ab2d864db3186aa1961283b3d4cdc", "patch": "@@ -10,18 +10,12 @@\n \n //! Operations on tuples\n //!\n-//! To access a single element of a tuple one can use the following\n-//! methods:\n+//! To access a single element of a tuple one can use the `.0`\n+//! field access syntax.\n //!\n-//! * `valN` - returns a value of _N_-th element\n-//! * `refN` - returns a reference to _N_-th element\n-//! * `mutN` - returns a mutable reference to _N_-th element\n-//!\n-//! Indexing starts from zero, so `val0` returns first value, `val1`\n-//! returns second value, and so on. In general, a tuple with _S_\n-//! elements provides aforementioned methods suffixed with numbers\n-//! from `0` to `S-1`. Traits which contain these methods are\n-//! implemented for tuples with up to 12 elements.\n+//! Indexing starts from zero, so `.0` returns first value, `.1`\n+//! returns second value, and so on. In general, a tuple with *N*\n+//! elements has field accessors from 0 to *N* - 1.\n //!\n //! If every type inside a tuple implements one of the following\n //! traits, then a tuple itself also implements it.\n@@ -52,7 +46,7 @@ macro_rules! e {\n macro_rules! tuple_impls {\n     ($(\n         $Tuple:ident {\n-            $(($valN:ident, $refN:ident, $mutN:ident, $idx:tt) -> $T:ident)+\n+            $(($idx:tt) -> $T:ident)+\n         }\n     )+) => {\n         $(\n@@ -156,105 +150,105 @@ macro_rules! lexical_cmp {\n \n tuple_impls! {\n     Tuple1 {\n-        (val0, ref0, mut0, 0) -> A\n+        (0) -> A\n     }\n     Tuple2 {\n-        (val0, ref0, mut0, 0) -> A\n-        (val1, ref1, mut1, 1) -> B\n+        (0) -> A\n+        (1) -> B\n     }\n     Tuple3 {\n-        (val0, ref0, mut0, 0) -> A\n-        (val1, ref1, mut1, 1) -> B\n-        (val2, ref2, mut2, 2) -> C\n+        (0) -> A\n+        (1) -> B\n+        (2) -> C\n     }\n     Tuple4 {\n-        (val0, ref0, mut0, 0) -> A\n-        (val1, ref1, mut1, 1) -> B\n-        (val2, ref2, mut2, 2) -> C\n-        (val3, ref3, mut3, 3) -> D\n+        (0) -> A\n+        (1) -> B\n+        (2) -> C\n+        (3) -> D\n     }\n     Tuple5 {\n-        (val0, ref0, mut0, 0) -> A\n-        (val1, ref1, mut1, 1) -> B\n-        (val2, ref2, mut2, 2) -> C\n-        (val3, ref3, mut3, 3) -> D\n-        (val4, ref4, mut4, 4) -> E\n+        (0) -> A\n+        (1) -> B\n+        (2) -> C\n+        (3) -> D\n+        (4) -> E\n     }\n     Tuple6 {\n-        (val0, ref0, mut0, 0) -> A\n-        (val1, ref1, mut1, 1) -> B\n-        (val2, ref2, mut2, 2) -> C\n-        (val3, ref3, mut3, 3) -> D\n-        (val4, ref4, mut4, 4) -> E\n-        (val5, ref5, mut5, 5) -> F\n+        (0) -> A\n+        (1) -> B\n+        (2) -> C\n+        (3) -> D\n+        (4) -> E\n+        (5) -> F\n     }\n     Tuple7 {\n-        (val0, ref0, mut0, 0) -> A\n-        (val1, ref1, mut1, 1) -> B\n-        (val2, ref2, mut2, 2) -> C\n-        (val3, ref3, mut3, 3) -> D\n-        (val4, ref4, mut4, 4) -> E\n-        (val5, ref5, mut5, 5) -> F\n-        (val6, ref6, mut6, 6) -> G\n+        (0) -> A\n+        (1) -> B\n+        (2) -> C\n+        (3) -> D\n+        (4) -> E\n+        (5) -> F\n+        (6) -> G\n     }\n     Tuple8 {\n-        (val0, ref0, mut0, 0) -> A\n-        (val1, ref1, mut1, 1) -> B\n-        (val2, ref2, mut2, 2) -> C\n-        (val3, ref3, mut3, 3) -> D\n-        (val4, ref4, mut4, 4) -> E\n-        (val5, ref5, mut5, 5) -> F\n-        (val6, ref6, mut6, 6) -> G\n-        (val7, ref7, mut7, 7) -> H\n+        (0) -> A\n+        (1) -> B\n+        (2) -> C\n+        (3) -> D\n+        (4) -> E\n+        (5) -> F\n+        (6) -> G\n+        (7) -> H\n     }\n     Tuple9 {\n-        (val0, ref0, mut0, 0) -> A\n-        (val1, ref1, mut1, 1) -> B\n-        (val2, ref2, mut2, 2) -> C\n-        (val3, ref3, mut3, 3) -> D\n-        (val4, ref4, mut4, 4) -> E\n-        (val5, ref5, mut5, 5) -> F\n-        (val6, ref6, mut6, 6) -> G\n-        (val7, ref7, mut7, 7) -> H\n-        (val8, ref8, mut8, 8) -> I\n+        (0) -> A\n+        (1) -> B\n+        (2) -> C\n+        (3) -> D\n+        (4) -> E\n+        (5) -> F\n+        (6) -> G\n+        (7) -> H\n+        (8) -> I\n     }\n     Tuple10 {\n-        (val0, ref0, mut0, 0) -> A\n-        (val1, ref1, mut1, 1) -> B\n-        (val2, ref2, mut2, 2) -> C\n-        (val3, ref3, mut3, 3) -> D\n-        (val4, ref4, mut4, 4) -> E\n-        (val5, ref5, mut5, 5) -> F\n-        (val6, ref6, mut6, 6) -> G\n-        (val7, ref7, mut7, 7) -> H\n-        (val8, ref8, mut8, 8) -> I\n-        (val9, ref9, mut9, 9) -> J\n+        (0) -> A\n+        (1) -> B\n+        (2) -> C\n+        (3) -> D\n+        (4) -> E\n+        (5) -> F\n+        (6) -> G\n+        (7) -> H\n+        (8) -> I\n+        (9) -> J\n     }\n     Tuple11 {\n-        (val0, ref0, mut0, 0) -> A\n-        (val1, ref1, mut1, 1) -> B\n-        (val2, ref2, mut2, 2) -> C\n-        (val3, ref3, mut3, 3) -> D\n-        (val4, ref4, mut4, 4) -> E\n-        (val5, ref5, mut5, 5) -> F\n-        (val6, ref6, mut6, 6) -> G\n-        (val7, ref7, mut7, 7) -> H\n-        (val8, ref8, mut8, 8) -> I\n-        (val9, ref9, mut9, 9) -> J\n-        (val10, ref10, mut10, 10) -> K\n+        (0) -> A\n+        (1) -> B\n+        (2) -> C\n+        (3) -> D\n+        (4) -> E\n+        (5) -> F\n+        (6) -> G\n+        (7) -> H\n+        (8) -> I\n+        (9) -> J\n+        (10) -> K\n     }\n     Tuple12 {\n-        (val0, ref0, mut0, 0) -> A\n-        (val1, ref1, mut1, 1) -> B\n-        (val2, ref2, mut2, 2) -> C\n-        (val3, ref3, mut3, 3) -> D\n-        (val4, ref4, mut4, 4) -> E\n-        (val5, ref5, mut5, 5) -> F\n-        (val6, ref6, mut6, 6) -> G\n-        (val7, ref7, mut7, 7) -> H\n-        (val8, ref8, mut8, 8) -> I\n-        (val9, ref9, mut9, 9) -> J\n-        (val10, ref10, mut10, 10) -> K\n-        (val11, ref11, mut11, 11) -> L\n+        (0) -> A\n+        (1) -> B\n+        (2) -> C\n+        (3) -> D\n+        (4) -> E\n+        (5) -> F\n+        (6) -> G\n+        (7) -> H\n+        (8) -> I\n+        (9) -> J\n+        (10) -> K\n+        (11) -> L\n     }\n }"}]}