{"sha": "b795a07320e13bcbedb6435bcfddb3ecd0ed2bde", "node_id": "MDY6Q29tbWl0NzI0NzEyOmI3OTVhMDczMjBlMTNiY2JlZGI2NDM1YmNmZGRiM2VjZDBlZDJiZGU=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-05-31T08:14:36Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-05-31T08:14:36Z"}, "message": "Doc more features", "tree": {"sha": "d8cda2dc671833f42493e12f9eb56b782883f7b7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d8cda2dc671833f42493e12f9eb56b782883f7b7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b795a07320e13bcbedb6435bcfddb3ecd0ed2bde", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b795a07320e13bcbedb6435bcfddb3ecd0ed2bde", "html_url": "https://github.com/rust-lang/rust/commit/b795a07320e13bcbedb6435bcfddb3ecd0ed2bde", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b795a07320e13bcbedb6435bcfddb3ecd0ed2bde/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8915183d7da07a4b295e5e93a889dea4c15024a0", "url": "https://api.github.com/repos/rust-lang/rust/commits/8915183d7da07a4b295e5e93a889dea4c15024a0", "html_url": "https://github.com/rust-lang/rust/commit/8915183d7da07a4b295e5e93a889dea4c15024a0"}], "stats": {"total": 101, "additions": 47, "deletions": 54}, "files": [{"sha": "54a47aac0684e0df4a89bd90464722df98cdbc4d", "filename": "crates/ra_ide/src/expand_macro.rs", "status": "modified", "additions": 9, "deletions": 2, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/b795a07320e13bcbedb6435bcfddb3ecd0ed2bde/crates%2Fra_ide%2Fsrc%2Fexpand_macro.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b795a07320e13bcbedb6435bcfddb3ecd0ed2bde/crates%2Fra_ide%2Fsrc%2Fexpand_macro.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fexpand_macro.rs?ref=b795a07320e13bcbedb6435bcfddb3ecd0ed2bde", "patch": "@@ -1,5 +1,3 @@\n-//! This modules implements \"expand macro\" functionality in the IDE\n-\n use hir::Semantics;\n use ra_ide_db::RootDatabase;\n use ra_syntax::{\n@@ -14,6 +12,15 @@ pub struct ExpandedMacro {\n     pub expansion: String,\n }\n \n+// Feature: Expand Macro Recursively\n+//\n+// Shows the full macro expansion of the macro at current cursor.\n+//\n+// |===\n+// | Editor  | Action Name\n+//\n+// | VS Code | **Rust Analyzer: Expand macro recursively**\n+// |===\n pub(crate) fn expand_macro(db: &RootDatabase, position: FilePosition) -> Option<ExpandedMacro> {\n     let sema = Semantics::new(db);\n     let file = sema.parse(position.file_id);"}, {"sha": "93e9aee1d01e47ca8db25bef13bef269f91ce4f1", "filename": "crates/ra_ide/src/ssr.rs", "status": "modified", "additions": 22, "deletions": 2, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/b795a07320e13bcbedb6435bcfddb3ecd0ed2bde/crates%2Fra_ide%2Fsrc%2Fssr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b795a07320e13bcbedb6435bcfddb3ecd0ed2bde/crates%2Fra_ide%2Fsrc%2Fssr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fssr.rs?ref=b795a07320e13bcbedb6435bcfddb3ecd0ed2bde", "patch": "@@ -1,5 +1,3 @@\n-//!  structural search replace\n-\n use std::{collections::HashMap, iter::once, str::FromStr};\n \n use ra_db::{SourceDatabase, SourceDatabaseExt};\n@@ -25,6 +23,28 @@ impl std::fmt::Display for SsrError {\n \n impl std::error::Error for SsrError {}\n \n+// Feature: Structural Seach and Replace\n+//\n+// Search and replace with named wildcards that will match any expression.\n+// The syntax for a structural search replace command is `<search_pattern> ==>> <replace_pattern>`.\n+// A `$<name>:expr` placeholder in the search pattern will match any expression and `$<name>` will reference it in the replacement.\n+// Available via the command `rust-analyzer.ssr`.\n+//\n+// ```rust\n+// // Using structural search replace command [foo($a:expr, $b:expr) ==>> ($a).foo($b)]\n+//\n+// // BEFORE\n+// String::from(foo(y + 5, z))\n+//\n+// // AFTER\n+// String::from((y + 5).foo(z))\n+// ```\n+//\n+// |===\n+// | Editor  | Action Name\n+//\n+// | VS Code | **Rust Analyzer: Structural Search Replace**\n+// |===\n pub fn parse_search_replace(\n     query: &str,\n     parse_only: bool,"}, {"sha": "5b7992920071d5f3e335555e98d37cdfdbc3cc5b", "filename": "crates/ra_ide/src/status.rs", "status": "modified", "additions": 9, "deletions": 2, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/b795a07320e13bcbedb6435bcfddb3ecd0ed2bde/crates%2Fra_ide%2Fsrc%2Fstatus.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b795a07320e13bcbedb6435bcfddb3ecd0ed2bde/crates%2Fra_ide%2Fsrc%2Fstatus.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fstatus.rs?ref=b795a07320e13bcbedb6435bcfddb3ecd0ed2bde", "patch": "@@ -1,5 +1,3 @@\n-//! FIXME: write short doc here\n-\n use std::{fmt, iter::FromIterator, sync::Arc};\n \n use hir::MacroFile;\n@@ -26,6 +24,15 @@ fn macro_syntax_tree_stats(db: &RootDatabase) -> SyntaxTreeStats {\n     db.query(hir::db::ParseMacroQuery).entries::<SyntaxTreeStats>()\n }\n \n+// Feature: Status\n+//\n+// Shows internal statistic about memory usage of rust-analyzer.\n+//\n+// |===\n+// | Editor  | Action Name\n+//\n+// | VS Code | **Rust Analyzer: Status**\n+// |===\n pub(crate) fn status(db: &RootDatabase) -> String {\n     let files_stats = db.query(FileTextQuery).entries::<FilesStats>();\n     let syntax_tree_stats = syntax_tree_stats(db);"}, {"sha": "ff8cb2d6ef67f950c940a7ed2bed20e3667af834", "filename": "docs/user/features.md", "status": "modified", "additions": 0, "deletions": 48, "changes": 48, "blob_url": "https://github.com/rust-lang/rust/blob/b795a07320e13bcbedb6435bcfddb3ecd0ed2bde/docs%2Fuser%2Ffeatures.md", "raw_url": "https://github.com/rust-lang/rust/raw/b795a07320e13bcbedb6435bcfddb3ecd0ed2bde/docs%2Fuser%2Ffeatures.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/docs%2Fuser%2Ffeatures.md?ref=b795a07320e13bcbedb6435bcfddb3ecd0ed2bde", "patch": "@@ -5,60 +5,12 @@ you can use <kbd>Ctrl+Shift+P</kbd> to search for the corresponding action.\n ### Commands <kbd>ctrl+shift+p</kbd>\n \n \n-\n-\n-#### Expand Macro Recursively\n-\n-Shows the full macro expansion of the macro at current cursor.\n-\n-#### Status\n-\n-Shows internal statistic about memory usage of rust-analyzer.\n-\n-#### Show RA Version\n-\n-Show current rust-analyzer version.\n-\n #### Toggle inlay hints\n \n Toggle inlay hints view for the current workspace.\n It is recommended to assign a shortcut for this command to quickly turn off\n inlay hints when they prevent you from reading/writing the code.\n \n-#### Run Garbage Collection\n-\n-Manually triggers GC.\n-\n-#### Start Cargo Watch\n-\n-Start `cargo watch` for live error highlighting. Will prompt to install if it's not already installed.\n-\n-#### Stop Cargo Watch\n-\n-Stop `cargo watch`.\n-\n-#### Structural Seach and Replace\n-\n-Search and replace with named wildcards that will match any expression.\n-The syntax for a structural search replace command is `<search_pattern> ==>> <replace_pattern>`. A `$<name>:expr` placeholder in the search pattern will match any expression and `$<name>` will reference it in the replacement. Available via the command `rust-analyzer.ssr`.\n-\n-```rust\n-// Using structural search replace command [foo($a:expr, $b:expr) ==>> ($a).foo($b)]\n-\n-// BEFORE\n-String::from(foo(y + 5, z))\n-\n-// AFTER\n-String::from((y + 5).foo(z))\n-```\n-\n-### Assists (Code Actions)\n-\n-Assists, or code actions, are small local refactorings, available in a particular context.\n-They are usually triggered by a shortcut or by clicking a light bulb icon in the editor.\n-\n-See [assists.md](./assists.md) for the list of available assists.\n-\n ### Magic Completions\n \n In addition to usual reference completion, rust-analyzer provides some \u2728magic\u2728"}, {"sha": "8cfa41144e711d491302f8c8ddd166ddd5072fde", "filename": "docs/user/readme.adoc", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/b795a07320e13bcbedb6435bcfddb3ecd0ed2bde/docs%2Fuser%2Freadme.adoc", "raw_url": "https://github.com/rust-lang/rust/raw/b795a07320e13bcbedb6435bcfddb3ecd0ed2bde/docs%2Fuser%2Freadme.adoc", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/docs%2Fuser%2Freadme.adoc?ref=b795a07320e13bcbedb6435bcfddb3ecd0ed2bde", "patch": "@@ -272,3 +272,10 @@ Gnome Builder currently has support for RLS, and there's no way to configure the\n == Features\n \n include::./generated_features.adoc[]\n+\n+== Assists (Code Actions)\n+\n+Assists, or code actions, are small local refactorings, available in a particular context.\n+They are usually triggered by a shortcut or by clicking a light bulb icon in the editor.\n+\n+See [assists.md](./assists.md) for the list of available assists."}]}