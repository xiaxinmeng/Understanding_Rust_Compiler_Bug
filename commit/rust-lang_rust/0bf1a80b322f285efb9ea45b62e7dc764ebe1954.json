{"sha": "0bf1a80b322f285efb9ea45b62e7dc764ebe1954", "node_id": "MDY6Q29tbWl0NzI0NzEyOjBiZjFhODBiMzIyZjI4NWVmYjllYTQ1YjYyZTdkYzc2NGViZTE5NTQ=", "commit": {"author": {"name": "Dylan MacKenzie", "email": "ecstaticmorse@gmail.com", "date": "2019-09-28T14:20:06Z"}, "committer": {"name": "Dylan MacKenzie", "email": "ecstaticmorse@gmail.com", "date": "2019-09-28T14:20:12Z"}, "message": "Rename `sty` to `kind`\n\nPicks up changes made in #64513", "tree": {"sha": "9cc2c67335655954e412f30ead431ba8b0f32432", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9cc2c67335655954e412f30ead431ba8b0f32432"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0bf1a80b322f285efb9ea45b62e7dc764ebe1954", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0bf1a80b322f285efb9ea45b62e7dc764ebe1954", "html_url": "https://github.com/rust-lang/rust/commit/0bf1a80b322f285efb9ea45b62e7dc764ebe1954", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0bf1a80b322f285efb9ea45b62e7dc764ebe1954/comments", "author": {"login": "ecstatic-morse", "id": 29463364, "node_id": "MDQ6VXNlcjI5NDYzMzY0", "avatar_url": "https://avatars.githubusercontent.com/u/29463364?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ecstatic-morse", "html_url": "https://github.com/ecstatic-morse", "followers_url": "https://api.github.com/users/ecstatic-morse/followers", "following_url": "https://api.github.com/users/ecstatic-morse/following{/other_user}", "gists_url": "https://api.github.com/users/ecstatic-morse/gists{/gist_id}", "starred_url": "https://api.github.com/users/ecstatic-morse/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ecstatic-morse/subscriptions", "organizations_url": "https://api.github.com/users/ecstatic-morse/orgs", "repos_url": "https://api.github.com/users/ecstatic-morse/repos", "events_url": "https://api.github.com/users/ecstatic-morse/events{/privacy}", "received_events_url": "https://api.github.com/users/ecstatic-morse/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ecstatic-morse", "id": 29463364, "node_id": "MDQ6VXNlcjI5NDYzMzY0", "avatar_url": "https://avatars.githubusercontent.com/u/29463364?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ecstatic-morse", "html_url": "https://github.com/ecstatic-morse", "followers_url": "https://api.github.com/users/ecstatic-morse/followers", "following_url": "https://api.github.com/users/ecstatic-morse/following{/other_user}", "gists_url": "https://api.github.com/users/ecstatic-morse/gists{/gist_id}", "starred_url": "https://api.github.com/users/ecstatic-morse/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ecstatic-morse/subscriptions", "organizations_url": "https://api.github.com/users/ecstatic-morse/orgs", "repos_url": "https://api.github.com/users/ecstatic-morse/repos", "events_url": "https://api.github.com/users/ecstatic-morse/events{/privacy}", "received_events_url": "https://api.github.com/users/ecstatic-morse/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ff4158abf2a66a6a3f246fef8178e179201fcae0", "url": "https://api.github.com/repos/rust-lang/rust/commits/ff4158abf2a66a6a3f246fef8178e179201fcae0", "html_url": "https://github.com/rust-lang/rust/commit/ff4158abf2a66a6a3f246fef8178e179201fcae0"}], "stats": {"total": 12, "additions": 6, "deletions": 6}, "files": [{"sha": "d9d0ce18555730be2d096e188a87112bfbc33f78", "filename": "src/librustc_mir/transform/check_consts/qualifs.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/0bf1a80b322f285efb9ea45b62e7dc764ebe1954/src%2Flibrustc_mir%2Ftransform%2Fcheck_consts%2Fqualifs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0bf1a80b322f285efb9ea45b62e7dc764ebe1954/src%2Flibrustc_mir%2Ftransform%2Fcheck_consts%2Fqualifs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Ftransform%2Fcheck_consts%2Fqualifs.rs?ref=0bf1a80b322f285efb9ea45b62e7dc764ebe1954", "patch": "@@ -164,7 +164,7 @@ pub trait Qualif {\n                 if let box [proj_base @ .., elem] = &place.projection {\n                     if ProjectionElem::Deref == *elem {\n                         let base_ty = Place::ty_from(&place.base, proj_base, cx.body, cx.tcx).ty;\n-                        if let ty::Ref(..) = base_ty.sty {\n+                        if let ty::Ref(..) = base_ty.kind {\n                             return Self::in_place(cx, per_local, PlaceRef {\n                                 base: &place.base,\n                                 projection: proj_base,\n@@ -223,7 +223,7 @@ impl Qualif for HasMutInterior {\n                 if let BorrowKind::Mut { .. } = kind {\n                     // In theory, any zero-sized value could be borrowed\n                     // mutably without consequences.\n-                    match ty.sty {\n+                    match ty.kind {\n                         // Inside a `static mut`, &mut [...] is also allowed.\n                         ty::Array(..) | ty::Slice(_) if cx.mode == Mode::StaticMut => {},\n "}, {"sha": "7e876dd1d9980da097a839e8e9343a15bf405c00", "filename": "src/librustc_mir/transform/check_consts/validation.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/0bf1a80b322f285efb9ea45b62e7dc764ebe1954/src%2Flibrustc_mir%2Ftransform%2Fcheck_consts%2Fvalidation.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0bf1a80b322f285efb9ea45b62e7dc764ebe1954/src%2Flibrustc_mir%2Ftransform%2Fcheck_consts%2Fvalidation.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Ftransform%2Fcheck_consts%2Fvalidation.rs?ref=0bf1a80b322f285efb9ea45b62e7dc764ebe1954", "patch": "@@ -247,7 +247,7 @@ impl Visitor<'tcx> for Validator<'_, 'mir, 'tcx> {\n             if let box [proj_base @ .., elem] = &place.projection {\n                 if *elem == ProjectionElem::Deref {\n                     let base_ty = Place::ty_from(&place.base, proj_base, self.body, self.tcx).ty;\n-                    if let ty::Ref(..) = base_ty.sty {\n+                    if let ty::Ref(..) = base_ty.kind {\n                         reborrow_place = Some(proj_base);\n                     }\n                 }\n@@ -302,7 +302,7 @@ impl Visitor<'tcx> for Validator<'_, 'mir, 'tcx> {\n             }\n \n             Rvalue::BinaryOp(op, ref lhs, _) => {\n-                if let ty::RawPtr(_) | ty::FnPtr(..) = lhs.ty(self.body, self.tcx).sty {\n+                if let ty::RawPtr(_) | ty::FnPtr(..) = lhs.ty(self.body, self.tcx).kind {\n                     assert!(op == BinOp::Eq || op == BinOp::Ne ||\n                             op == BinOp::Le || op == BinOp::Lt ||\n                             op == BinOp::Ge || op == BinOp::Gt ||\n@@ -431,7 +431,7 @@ impl Visitor<'tcx> for Validator<'_, 'mir, 'tcx> {\n                 }\n \n                 let base_ty = Place::ty_from(place_base, proj_base, self.body, self.tcx).ty;\n-                if let ty::RawPtr(_) = base_ty.sty {\n+                if let ty::RawPtr(_) = base_ty.kind {\n                     self.check_op(ops::RawPtrDeref);\n                 }\n             }\n@@ -508,7 +508,7 @@ impl Visitor<'tcx> for Validator<'_, 'mir, 'tcx> {\n             TerminatorKind::Call { func, .. } => {\n                 let fn_ty = func.ty(self.body, self.tcx);\n \n-                let def_id = match fn_ty.sty {\n+                let def_id = match fn_ty.kind {\n                     ty::FnDef(def_id, _) => def_id,\n \n                     ty::FnPtr(_) => {"}]}