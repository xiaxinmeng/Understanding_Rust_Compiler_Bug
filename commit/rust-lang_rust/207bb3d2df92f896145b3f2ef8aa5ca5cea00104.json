{"sha": "207bb3d2df92f896145b3f2ef8aa5ca5cea00104", "node_id": "MDY6Q29tbWl0NzI0NzEyOjIwN2JiM2QyZGY5MmY4OTYxNDViM2YyZWY4YWE1Y2E1Y2VhMDAxMDQ=", "commit": {"author": {"name": "Kevin Cantu", "email": "me@kevincantu.org", "date": "2012-02-12T01:04:08Z"}, "committer": {"name": "Kevin Cantu", "email": "me@kevincantu.org", "date": "2012-02-12T01:04:08Z"}, "message": "(core::str) removed [r]index_byte", "tree": {"sha": "69d6f1313d100f8a2eae7c0eb0b6c2ca1ad69e12", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/69d6f1313d100f8a2eae7c0eb0b6c2ca1ad69e12"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/207bb3d2df92f896145b3f2ef8aa5ca5cea00104", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/207bb3d2df92f896145b3f2ef8aa5ca5cea00104", "html_url": "https://github.com/rust-lang/rust/commit/207bb3d2df92f896145b3f2ef8aa5ca5cea00104", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/207bb3d2df92f896145b3f2ef8aa5ca5cea00104/comments", "author": {"login": "killerswan", "id": 195060, "node_id": "MDQ6VXNlcjE5NTA2MA==", "avatar_url": "https://avatars.githubusercontent.com/u/195060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/killerswan", "html_url": "https://github.com/killerswan", "followers_url": "https://api.github.com/users/killerswan/followers", "following_url": "https://api.github.com/users/killerswan/following{/other_user}", "gists_url": "https://api.github.com/users/killerswan/gists{/gist_id}", "starred_url": "https://api.github.com/users/killerswan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/killerswan/subscriptions", "organizations_url": "https://api.github.com/users/killerswan/orgs", "repos_url": "https://api.github.com/users/killerswan/repos", "events_url": "https://api.github.com/users/killerswan/events{/privacy}", "received_events_url": "https://api.github.com/users/killerswan/received_events", "type": "User", "site_admin": false}, "committer": {"login": "killerswan", "id": 195060, "node_id": "MDQ6VXNlcjE5NTA2MA==", "avatar_url": "https://avatars.githubusercontent.com/u/195060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/killerswan", "html_url": "https://github.com/killerswan", "followers_url": "https://api.github.com/users/killerswan/followers", "following_url": "https://api.github.com/users/killerswan/following{/other_user}", "gists_url": "https://api.github.com/users/killerswan/gists{/gist_id}", "starred_url": "https://api.github.com/users/killerswan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/killerswan/subscriptions", "organizations_url": "https://api.github.com/users/killerswan/orgs", "repos_url": "https://api.github.com/users/killerswan/repos", "events_url": "https://api.github.com/users/killerswan/events{/privacy}", "received_events_url": "https://api.github.com/users/killerswan/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e0af23b664a1307fe376f2638bb7a69f04e2ac1c", "url": "https://api.github.com/repos/rust-lang/rust/commits/e0af23b664a1307fe376f2638bb7a69f04e2ac1c", "html_url": "https://github.com/rust-lang/rust/commit/e0af23b664a1307fe376f2638bb7a69f04e2ac1c"}], "stats": {"total": 44, "additions": 0, "deletions": 44}, "files": [{"sha": "ca7bb819443b6fb5d05c8681a68c9ae37d3f7b27", "filename": "src/libcore/str.rs", "status": "modified", "additions": 0, "deletions": 44, "changes": 44, "blob_url": "https://github.com/rust-lang/rust/blob/207bb3d2df92f896145b3f2ef8aa5ca5cea00104/src%2Flibcore%2Fstr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/207bb3d2df92f896145b3f2ef8aa5ca5cea00104/src%2Flibcore%2Fstr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fstr.rs?ref=207bb3d2df92f896145b3f2ef8aa5ca5cea00104", "patch": "@@ -72,8 +72,6 @@ export\n    // Searching\n    index,\n    rindex,\n-   index_byte,\n-   rindex_byte,\n    find,\n    contains,\n    starts_with,\n@@ -913,34 +911,6 @@ fn rindex(ss: str, cc: char) -> option<uint> {\n     ret option::none;\n }\n \n-/*\n-Function: index\n-\n-Returns the index of the first matching byte. Returns -1 if\n-no match is found.\n-\n-FIXME: UTF-8\n-*/\n-fn index_byte(s: str, c: u8) -> int {\n-    let i: int = 0;\n-    for k: u8 in s { if k == c { ret i; } i += 1; }\n-    ret -1;\n-}\n-\n-/*\n-Function: rindex\n-\n-Returns the index of the last matching byte. Returns -1\n-if no match is found.\n-\n-FIXME: UTF-8\n-*/\n-fn rindex_byte(s: str, c: u8) -> int {\n-    let n: int = byte_len(s) as int;\n-    while n >= 0 { if s[n] == c { ret n; } n -= 1; }\n-    ret n;\n-}\n-\n /*\n Function: find\n \n@@ -1521,20 +1491,6 @@ mod tests {\n         assert (rindex(\"hello\", 'z') == option::none);\n     }\n \n-    #[test]\n-    fn test_index_byte() {\n-        assert ( index_byte(\"hello\", 'e' as u8) == 1);\n-        assert ( index_byte(\"hello\", 'o' as u8) == 4);\n-        assert ( index_byte(\"hello\", 'z' as u8) == -1);\n-    }\n-\n-    #[test]\n-    fn test_rindex_byte() {\n-        assert (rindex_byte(\"hello\", 'l' as u8) == 3);\n-        assert (rindex_byte(\"hello\", 'h' as u8) == 0);\n-        assert (rindex_byte(\"hello\", 'z' as u8) == -1);\n-    }\n-\n     #[test]\n     fn test_pop_char() {\n         let data = \"\u0e1b\u0e23\u0e30\u0e40\u0e17\u0e28\u0e44\u0e17\u0e22\u4e2d\u534e\";"}]}