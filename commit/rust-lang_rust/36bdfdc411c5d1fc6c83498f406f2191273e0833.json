{"sha": "36bdfdc411c5d1fc6c83498f406f2191273e0833", "node_id": "MDY6Q29tbWl0NzI0NzEyOjM2YmRmZGM0MTFjNWQxZmM2YzgzNDk4ZjQwNmYyMTkxMjczZTA4MzM=", "commit": {"author": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2021-06-01T08:15:28Z"}, "committer": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2021-06-08T17:24:17Z"}, "message": "Don't return a BoxedResolver on errors", "tree": {"sha": "fa53d4ba567d7b40cbf6317cf5853f74fdf70e0a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fa53d4ba567d7b40cbf6317cf5853f74fdf70e0a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/36bdfdc411c5d1fc6c83498f406f2191273e0833", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/36bdfdc411c5d1fc6c83498f406f2191273e0833", "html_url": "https://github.com/rust-lang/rust/commit/36bdfdc411c5d1fc6c83498f406f2191273e0833", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/36bdfdc411c5d1fc6c83498f406f2191273e0833/comments", "author": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9d9ccec3fc416965dabd1851369a10315754a922", "url": "https://api.github.com/repos/rust-lang/rust/commits/9d9ccec3fc416965dabd1851369a10315754a922", "html_url": "https://github.com/rust-lang/rust/commit/9d9ccec3fc416965dabd1851369a10315754a922"}], "stats": {"total": 9, "additions": 4, "deletions": 5}, "files": [{"sha": "afd553f06ca55430027f42ca82fcfbf6bedbfa34", "filename": "compiler/rustc_interface/src/passes.rs", "status": "modified", "additions": 4, "deletions": 5, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/36bdfdc411c5d1fc6c83498f406f2191273e0833/compiler%2Frustc_interface%2Fsrc%2Fpasses.rs", "raw_url": "https://github.com/rust-lang/rust/raw/36bdfdc411c5d1fc6c83498f406f2191273e0833/compiler%2Frustc_interface%2Fsrc%2Fpasses.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_interface%2Fsrc%2Fpasses.rs?ref=36bdfdc411c5d1fc6c83498f406f2191273e0833", "patch": "@@ -128,7 +128,7 @@ pub struct BoxedResolver {\n }\n \n impl BoxedResolver {\n-    fn new<T>(generator: T) -> (Result<ast::Crate>, Self)\n+    fn new<T>(generator: T) -> Result<(ast::Crate, Self)>\n     where\n         T: ::std::ops::Generator<\n                 Action,\n@@ -144,7 +144,7 @@ impl BoxedResolver {\n             _ => panic!(),\n         };\n \n-        (init, BoxedResolver { generator })\n+        init.map(|init| (init, BoxedResolver { generator }))\n     }\n \n     pub fn access<F: for<'a> FnOnce(&mut Resolver<'a>) -> R, R>(&mut self, f: F) -> R {\n@@ -206,7 +206,7 @@ pub fn configure_and_expand(\n     // its contents but the results of name resolution on those contents. Hopefully we'll push\n     // this back at some point.\n     let crate_name = crate_name.to_string();\n-    let (result, resolver) = BoxedResolver::new(static move |mut action| {\n+    BoxedResolver::new(static move |mut action| {\n         let _ = action;\n         let sess = &*sess;\n         let resolver_arenas = Resolver::arenas();\n@@ -248,8 +248,7 @@ pub fn configure_and_expand(\n         }\n \n         resolver.into_outputs()\n-    });\n-    result.map(|k| (k, resolver))\n+    })\n }\n \n pub fn register_plugins<'a>("}]}