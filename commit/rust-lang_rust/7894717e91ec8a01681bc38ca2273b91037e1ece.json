{"sha": "7894717e91ec8a01681bc38ca2273b91037e1ece", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc4OTQ3MTdlOTFlYzhhMDE2ODFiYzM4Y2EyMjczYjkxMDM3ZTFlY2U=", "commit": {"author": {"name": "Niv Kaminer", "email": "nivkner@zoho.com", "date": "2018-12-19T17:03:05Z"}, "committer": {"name": "Niv Kaminer", "email": "nivkner@zoho.com", "date": "2018-12-19T19:23:05Z"}, "message": "FIXME(9639) remove fixme and accept non-utf8 paths in librustdoc", "tree": {"sha": "b4427d6bcbbd82c314c317513ffbecdef0c2c350", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b4427d6bcbbd82c314c317513ffbecdef0c2c350"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7894717e91ec8a01681bc38ca2273b91037e1ece", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7894717e91ec8a01681bc38ca2273b91037e1ece", "html_url": "https://github.com/rust-lang/rust/commit/7894717e91ec8a01681bc38ca2273b91037e1ece", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7894717e91ec8a01681bc38ca2273b91037e1ece/comments", "author": {"login": "nivkner", "id": 22821514, "node_id": "MDQ6VXNlcjIyODIxNTE0", "avatar_url": "https://avatars.githubusercontent.com/u/22821514?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nivkner", "html_url": "https://github.com/nivkner", "followers_url": "https://api.github.com/users/nivkner/followers", "following_url": "https://api.github.com/users/nivkner/following{/other_user}", "gists_url": "https://api.github.com/users/nivkner/gists{/gist_id}", "starred_url": "https://api.github.com/users/nivkner/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nivkner/subscriptions", "organizations_url": "https://api.github.com/users/nivkner/orgs", "repos_url": "https://api.github.com/users/nivkner/repos", "events_url": "https://api.github.com/users/nivkner/events{/privacy}", "received_events_url": "https://api.github.com/users/nivkner/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nivkner", "id": 22821514, "node_id": "MDQ6VXNlcjIyODIxNTE0", "avatar_url": "https://avatars.githubusercontent.com/u/22821514?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nivkner", "html_url": "https://github.com/nivkner", "followers_url": "https://api.github.com/users/nivkner/followers", "following_url": "https://api.github.com/users/nivkner/following{/other_user}", "gists_url": "https://api.github.com/users/nivkner/gists{/gist_id}", "starred_url": "https://api.github.com/users/nivkner/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nivkner/subscriptions", "organizations_url": "https://api.github.com/users/nivkner/orgs", "repos_url": "https://api.github.com/users/nivkner/repos", "events_url": "https://api.github.com/users/nivkner/events{/privacy}", "received_events_url": "https://api.github.com/users/nivkner/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0e72c80afe9024ea7824579cd12c428264bb4783", "url": "https://api.github.com/repos/rust-lang/rust/commits/0e72c80afe9024ea7824579cd12c428264bb4783", "html_url": "https://github.com/rust-lang/rust/commit/0e72c80afe9024ea7824579cd12c428264bb4783"}], "stats": {"total": 12, "additions": 5, "deletions": 7}, "files": [{"sha": "6da1471c6a687047c705f7c62d2f68f59e92c1f6", "filename": "src/librustdoc/html/render.rs", "status": "modified", "additions": 5, "deletions": 7, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/7894717e91ec8a01681bc38ca2273b91037e1ece/src%2Flibrustdoc%2Fhtml%2Frender.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7894717e91ec8a01681bc38ca2273b91037e1ece/src%2Flibrustdoc%2Fhtml%2Frender.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Frender.rs?ref=7894717e91ec8a01681bc38ca2273b91037e1ece", "patch": "@@ -1232,10 +1232,8 @@ fn write_minify_replacer<W: Write>(dst: &mut W,\n /// static HTML tree. Each component in the cleaned path will be passed as an\n /// argument to `f`. The very last component of the path (ie the file name) will\n /// be passed to `f` if `keep_filename` is true, and ignored otherwise.\n-// FIXME (#9639): The closure should deal with &[u8] instead of &str\n-// FIXME (#9639): This is too conservative, rejecting non-UTF-8 paths\n fn clean_srcpath<F>(src_root: &Path, p: &Path, keep_filename: bool, mut f: F) where\n-    F: FnMut(&str),\n+    F: FnMut(&OsStr),\n {\n     // make it relative, if possible\n     let p = p.strip_prefix(src_root).unwrap_or(p);\n@@ -1248,8 +1246,8 @@ fn clean_srcpath<F>(src_root: &Path, p: &Path, keep_filename: bool, mut f: F) wh\n         }\n \n         match c {\n-            Component::ParentDir => f(\"up\"),\n-            Component::Normal(c) => f(c.to_str().unwrap()),\n+            Component::ParentDir => f(\"up\".as_ref()),\n+            Component::Normal(c) => f(c),\n             _ => continue,\n         }\n     }\n@@ -1348,7 +1346,7 @@ impl<'a> SourceCollector<'a> {\n             cur.push(component);\n             fs::create_dir_all(&cur).unwrap();\n             root_path.push_str(\"../\");\n-            href.push_str(component);\n+            href.push_str(&component.to_string_lossy());\n             href.push('/');\n         });\n         let mut fname = p.file_name()\n@@ -2227,7 +2225,7 @@ impl<'a> Item<'a> {\n             };\n \n             clean_srcpath(&src_root, file, false, |component| {\n-                path.push_str(component);\n+                path.push_str(&component.to_string_lossy());\n                 path.push('/');\n             });\n             let mut fname = file.file_name().expect(\"source has no filename\")"}]}