{"sha": "1b51e1ad2071a5cd31013a75df653b64dc6ca9c5", "node_id": "C_kwDOAAsO6NoAKDFiNTFlMWFkMjA3MWE1Y2QzMTAxM2E3NWRmNjUzYjY0ZGM2Y2E5YzU", "commit": {"author": {"name": "Oli Scherer", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2022-05-10T11:14:07Z"}, "committer": {"name": "Oli Scherer", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2022-05-10T11:14:07Z"}, "message": "Don't allocate misc obligation parents of derived obligations", "tree": {"sha": "3ce0493b3b26cfa359e9bf1cf0c8a6eedf97bfa4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3ce0493b3b26cfa359e9bf1cf0c8a6eedf97bfa4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1b51e1ad2071a5cd31013a75df653b64dc6ca9c5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1b51e1ad2071a5cd31013a75df653b64dc6ca9c5", "html_url": "https://github.com/rust-lang/rust/commit/1b51e1ad2071a5cd31013a75df653b64dc6ca9c5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1b51e1ad2071a5cd31013a75df653b64dc6ca9c5/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9ba6ddb929563e221f0b4cd32949218148b9a1c1", "url": "https://api.github.com/repos/rust-lang/rust/commits/9ba6ddb929563e221f0b4cd32949218148b9a1c1", "html_url": "https://github.com/rust-lang/rust/commit/9ba6ddb929563e221f0b4cd32949218148b9a1c1"}], "stats": {"total": 13, "additions": 7, "deletions": 6}, "files": [{"sha": "04e3daf304536a4eefeb799c7f4f56293d84317e", "filename": "compiler/rustc_middle/src/traits/mod.rs", "status": "modified", "additions": 7, "deletions": 6, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/1b51e1ad2071a5cd31013a75df653b64dc6ca9c5/compiler%2Frustc_middle%2Fsrc%2Ftraits%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1b51e1ad2071a5cd31013a75df653b64dc6ca9c5/compiler%2Frustc_middle%2Fsrc%2Ftraits%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Ftraits%2Fmod.rs?ref=1b51e1ad2071a5cd31013a75df653b64dc6ca9c5", "patch": "@@ -191,9 +191,10 @@ impl<'tcx> ObligationCause<'tcx> {\n         // NOTE(flaper87): As of now, it keeps track of the whole error\n         // chain. Ideally, we should have a way to configure this either\n         // by using -Z verbose or just a CLI argument.\n-        self.map_code(|parent_code| {\n-            variant(DerivedObligationCause { parent_trait_pred, parent_code }).into()\n-        });\n+        self.code = Some(\n+            variant(DerivedObligationCause { parent_trait_pred, parent_code: self.code.take() })\n+                .into(),\n+        );\n         self\n     }\n }\n@@ -443,7 +444,7 @@ impl<'tcx> ObligationCauseCode<'tcx> {\n             BuiltinDerivedObligation(derived)\n             | DerivedObligation(derived)\n             | ImplDerivedObligation(box ImplDerivedObligationCause { derived, .. }) => {\n-                Some((&derived.parent_code, Some(derived.parent_trait_pred)))\n+                Some((derived.parent_code(), Some(derived.parent_trait_pred)))\n             }\n             _ => None,\n         }\n@@ -497,14 +498,14 @@ pub struct DerivedObligationCause<'tcx> {\n     pub parent_trait_pred: ty::PolyTraitPredicate<'tcx>,\n \n     /// The parent trait had this cause.\n-    parent_code: Lrc<ObligationCauseCode<'tcx>>,\n+    parent_code: Option<Lrc<ObligationCauseCode<'tcx>>>,\n }\n \n impl<'tcx> DerivedObligationCause<'tcx> {\n     /// Get a reference to the derived obligation cause's parent code.\n     #[must_use]\n     pub fn parent_code(&self) -> &ObligationCauseCode<'tcx> {\n-        self.parent_code.as_ref()\n+        self.parent_code.as_deref().unwrap_or(&MISC_OBLIGATION_CAUSE_CODE)\n     }\n }\n "}]}