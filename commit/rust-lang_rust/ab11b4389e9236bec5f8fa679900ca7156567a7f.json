{"sha": "ab11b4389e9236bec5f8fa679900ca7156567a7f", "node_id": "C_kwDOAAsO6NoAKGFiMTFiNDM4OWU5MjM2YmVjNWY4ZmE2Nzk5MDBjYTcxNTY1NjdhN2Y", "commit": {"author": {"name": "IQuant", "email": "quant3234@gmail.com", "date": "2023-03-03T20:33:39Z"}, "committer": {"name": "IQuant", "email": "quant3234@gmail.com", "date": "2023-04-04T15:34:50Z"}, "message": "FailureCode::Error0038 is unreachable, so can be removed", "tree": {"sha": "65f42f5441f9da0e65733f7c381112b859543a20", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/65f42f5441f9da0e65733f7c381112b859543a20"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ab11b4389e9236bec5f8fa679900ca7156567a7f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ab11b4389e9236bec5f8fa679900ca7156567a7f", "html_url": "https://github.com/rust-lang/rust/commit/ab11b4389e9236bec5f8fa679900ca7156567a7f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ab11b4389e9236bec5f8fa679900ca7156567a7f/comments", "author": {"login": "IntQuant", "id": 25219447, "node_id": "MDQ6VXNlcjI1MjE5NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/25219447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/IntQuant", "html_url": "https://github.com/IntQuant", "followers_url": "https://api.github.com/users/IntQuant/followers", "following_url": "https://api.github.com/users/IntQuant/following{/other_user}", "gists_url": "https://api.github.com/users/IntQuant/gists{/gist_id}", "starred_url": "https://api.github.com/users/IntQuant/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/IntQuant/subscriptions", "organizations_url": "https://api.github.com/users/IntQuant/orgs", "repos_url": "https://api.github.com/users/IntQuant/repos", "events_url": "https://api.github.com/users/IntQuant/events{/privacy}", "received_events_url": "https://api.github.com/users/IntQuant/received_events", "type": "User", "site_admin": false}, "committer": {"login": "IntQuant", "id": 25219447, "node_id": "MDQ6VXNlcjI1MjE5NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/25219447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/IntQuant", "html_url": "https://github.com/IntQuant", "followers_url": "https://api.github.com/users/IntQuant/followers", "following_url": "https://api.github.com/users/IntQuant/following{/other_user}", "gists_url": "https://api.github.com/users/IntQuant/gists{/gist_id}", "starred_url": "https://api.github.com/users/IntQuant/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/IntQuant/subscriptions", "organizations_url": "https://api.github.com/users/IntQuant/orgs", "repos_url": "https://api.github.com/users/IntQuant/repos", "events_url": "https://api.github.com/users/IntQuant/events{/privacy}", "received_events_url": "https://api.github.com/users/IntQuant/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b610ce72cec5e450410c50418117a608c5d2ef6a", "url": "https://api.github.com/repos/rust-lang/rust/commits/b610ce72cec5e450410c50418117a608c5d2ef6a", "html_url": "https://github.com/rust-lang/rust/commit/b610ce72cec5e450410c50418117a608c5d2ef6a"}], "stats": {"total": 6, "additions": 0, "deletions": 6}, "files": [{"sha": "de9aa45c315b6d7d1e6a429218a37495e0f6f0ef", "filename": "compiler/rustc_infer/src/infer/error_reporting/mod.rs", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/ab11b4389e9236bec5f8fa679900ca7156567a7f/compiler%2Frustc_infer%2Fsrc%2Finfer%2Ferror_reporting%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ab11b4389e9236bec5f8fa679900ca7156567a7f/compiler%2Frustc_infer%2Fsrc%2Finfer%2Ferror_reporting%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_infer%2Fsrc%2Finfer%2Ferror_reporting%2Fmod.rs?ref=ab11b4389e9236bec5f8fa679900ca7156567a7f", "patch": "@@ -54,7 +54,6 @@ use crate::errors::TupleTrailingCommaSuggestion;\n use crate::infer;\n use crate::infer::error_reporting::nice_region_error::find_anon_type::find_anon_type;\n use crate::infer::ExpectedFound;\n-use crate::traits::error_reporting::report_object_safety_error;\n use crate::traits::{\n     IfExpressionCause, MatchExpressionArmCause, ObligationCause, ObligationCauseCode,\n     PredicateObligation,\n@@ -1912,10 +1911,6 @@ impl<'tcx> TypeErrCtxt<'_, 'tcx> {\n         let span = trace.cause.span();\n         let failure_code = trace.cause.as_failure_code(terr);\n         let mut diag = match failure_code {\n-            FailureCode::Error0038(did) => {\n-                let violations = self.tcx.object_safety_violations(did);\n-                report_object_safety_error(self.tcx, span, did, violations)\n-            }\n             FailureCode::Error0317(failure_str) => {\n                 struct_span_err!(self.tcx.sess, span, E0317, \"{}\", failure_str)\n             }\n@@ -2825,7 +2820,6 @@ impl<'tcx> InferCtxt<'tcx> {\n }\n \n pub enum FailureCode {\n-    Error0038(DefId),\n     Error0317(&'static str),\n     Error0580(&'static str),\n     Error0308(&'static str),"}]}