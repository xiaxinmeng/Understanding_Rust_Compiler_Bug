{"sha": "b6ab4f2485c5e4bc6c18868c4e4c522404f77b20", "node_id": "MDY6Q29tbWl0NzI0NzEyOmI2YWI0ZjI0ODVjNWU0YmM2YzE4ODY4YzRlNGM1MjI0MDRmNzdiMjA=", "commit": {"author": {"name": "Le\u0301o Testard", "email": "leo.testard@gmail.com", "date": "2013-11-25T18:35:03Z"}, "committer": {"name": "Le\u0301o Testard", "email": "leo.testard@gmail.com", "date": "2013-11-25T18:45:51Z"}, "message": "Add an implementation of Encodable and Decodable for Rc. This will be needed to use Rc in place of @ in libsyntax.", "tree": {"sha": "d76d6c025f9649c86f1b010a5bcef29472ffb21d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d76d6c025f9649c86f1b010a5bcef29472ffb21d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b6ab4f2485c5e4bc6c18868c4e4c522404f77b20", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b6ab4f2485c5e4bc6c18868c4e4c522404f77b20", "html_url": "https://github.com/rust-lang/rust/commit/b6ab4f2485c5e4bc6c18868c4e4c522404f77b20", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b6ab4f2485c5e4bc6c18868c4e4c522404f77b20/comments", "author": {"login": "LeoTestard", "id": 907750, "node_id": "MDQ6VXNlcjkwNzc1MA==", "avatar_url": "https://avatars.githubusercontent.com/u/907750?v=4", "gravatar_id": "", "url": "https://api.github.com/users/LeoTestard", "html_url": "https://github.com/LeoTestard", "followers_url": "https://api.github.com/users/LeoTestard/followers", "following_url": "https://api.github.com/users/LeoTestard/following{/other_user}", "gists_url": "https://api.github.com/users/LeoTestard/gists{/gist_id}", "starred_url": "https://api.github.com/users/LeoTestard/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/LeoTestard/subscriptions", "organizations_url": "https://api.github.com/users/LeoTestard/orgs", "repos_url": "https://api.github.com/users/LeoTestard/repos", "events_url": "https://api.github.com/users/LeoTestard/events{/privacy}", "received_events_url": "https://api.github.com/users/LeoTestard/received_events", "type": "User", "site_admin": false}, "committer": {"login": "LeoTestard", "id": 907750, "node_id": "MDQ6VXNlcjkwNzc1MA==", "avatar_url": "https://avatars.githubusercontent.com/u/907750?v=4", "gravatar_id": "", "url": "https://api.github.com/users/LeoTestard", "html_url": "https://github.com/LeoTestard", "followers_url": "https://api.github.com/users/LeoTestard/followers", "following_url": "https://api.github.com/users/LeoTestard/following{/other_user}", "gists_url": "https://api.github.com/users/LeoTestard/gists{/gist_id}", "starred_url": "https://api.github.com/users/LeoTestard/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/LeoTestard/subscriptions", "organizations_url": "https://api.github.com/users/LeoTestard/orgs", "repos_url": "https://api.github.com/users/LeoTestard/repos", "events_url": "https://api.github.com/users/LeoTestard/events{/privacy}", "received_events_url": "https://api.github.com/users/LeoTestard/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "01b53817033ba3a3ec01685d30e4a8e7ce14ba0c", "url": "https://api.github.com/repos/rust-lang/rust/commits/01b53817033ba3a3ec01685d30e4a8e7ce14ba0c", "html_url": "https://github.com/rust-lang/rust/commit/01b53817033ba3a3ec01685d30e4a8e7ce14ba0c"}], "stats": {"total": 15, "additions": 15, "deletions": 0}, "files": [{"sha": "9b0e00a41e50851e39c64265ae61d00e4ecf0319", "filename": "src/libextra/serialize.rs", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/b6ab4f2485c5e4bc6c18868c4e4c522404f77b20/src%2Flibextra%2Fserialize.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b6ab4f2485c5e4bc6c18868c4e4c522404f77b20/src%2Flibextra%2Fserialize.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibextra%2Fserialize.rs?ref=b6ab4f2485c5e4bc6c18868c4e4c522404f77b20", "patch": "@@ -20,6 +20,7 @@ Core encoding and decoding interfaces.\n \n use std::at_vec;\n use std::hashmap::{HashMap, HashSet};\n+use std::rc::Rc;\n use std::trie::{TrieMap, TrieSet};\n use std::vec;\n use ringbuf::RingBuf;\n@@ -405,6 +406,20 @@ impl<S:Encoder,T:Encodable<S>> Encodable<S> for @T {\n     }\n }\n \n+impl<S:Encoder,T:Encodable<S> + Freeze> Encodable<S> for Rc<T> {\n+    #[inline]\n+    fn encode(&self, s: &mut S) {\n+        self.borrow().encode(s)\n+    }\n+}\n+\n+impl<D:Decoder,T:Decodable<D> + Freeze> Decodable<D> for Rc<T> {\n+    #[inline]\n+    fn decode(d: &mut D) -> Rc<T> {\n+        Rc::new(Decodable::decode(d))\n+    }\n+}\n+\n impl<D:Decoder,T:Decodable<D> + 'static> Decodable<D> for @T {\n     fn decode(d: &mut D) -> @T {\n         @Decodable::decode(d)"}]}