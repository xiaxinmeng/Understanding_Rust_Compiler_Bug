{"sha": "2e54a76737fbf78754070b8007d4b654f2729e14", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJlNTRhNzY3MzdmYmY3ODc1NDA3MGI4MDA3ZDRiNjU0ZjI3MjllMTQ=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2011-11-03T21:13:22Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2011-11-05T20:23:11Z"}, "message": "Cleanup configure script", "tree": {"sha": "33ea21524a6f590c157c768e2583ae297235b2e1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/33ea21524a6f590c157c768e2583ae297235b2e1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2e54a76737fbf78754070b8007d4b654f2729e14", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2e54a76737fbf78754070b8007d4b654f2729e14", "html_url": "https://github.com/rust-lang/rust/commit/2e54a76737fbf78754070b8007d4b654f2729e14", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2e54a76737fbf78754070b8007d4b654f2729e14/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8e14d188deb310a20ba7aa66a01f1a1eab10235e", "url": "https://api.github.com/repos/rust-lang/rust/commits/8e14d188deb310a20ba7aa66a01f1a1eab10235e", "html_url": "https://github.com/rust-lang/rust/commit/8e14d188deb310a20ba7aa66a01f1a1eab10235e"}], "stats": {"total": 81, "additions": 46, "deletions": 35}, "files": [{"sha": "ec530440e34d2fb818560773abf4fb47adcef04f", "filename": "configure", "status": "modified", "additions": 46, "deletions": 35, "changes": 81, "blob_url": "https://github.com/rust-lang/rust/blob/2e54a76737fbf78754070b8007d4b654f2729e14/configure", "raw_url": "https://github.com/rust-lang/rust/raw/2e54a76737fbf78754070b8007d4b654f2729e14/configure", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/configure?ref=2e54a76737fbf78754070b8007d4b654f2729e14", "patch": "@@ -145,6 +145,7 @@ opt() {\n      fi\n }\n \n+\n msg \"looking for configure programs\"\n need_cmd mkdir\n need_cmd printf\n@@ -158,6 +159,7 @@ need_cmd date\n need_cmd tr\n need_cmd sed\n \n+\n msg \"inspecting environment\"\n \n CFG_OSTYPE=$(uname -s)\n@@ -261,14 +263,9 @@ then\n     exit 0\n fi\n \n-step_msg \"writing out basic parameters\"\n-putvar CFG_SRC_DIR\n-putvar CFG_BUILD_DIR\n-putvar CFG_OSTYPE\n-putvar CFG_CPUTYPE\n-putvar CFG_CONFIGURE_ARGS\n \n step_msg \"looking for build programs\"\n+\n probe_need CFG_PERL         perl\n probe_need CFG_PYTHON       python\n probe_need CFG_CURL         curl\n@@ -290,21 +287,6 @@ then\n     err \"either clang or gcc is required\"\n fi\n \n-if head -n 1 ${CFG_SRC_DIR}src/snapshots.txt | grep -q '^T'\n-then\n-    CFG_IN_TRANSITION=1\n-    putvar CFG_IN_TRANSITION\n-fi\n-\n-# Valgrind is only reliable on Linux. On Windows it doesn't work at all, and\n-# on the Mac the dynamic linker causes Valgrind to emit a huge stream of\n-# errors.\n-if [ $CFG_OSTYPE != unknown-linux-gnu ] && [ $CFG_OSTYPE != apple-darwin ]\n-then\n-    CFG_BAD_VALGRIND=1\n-    putvar CFG_BAD_VALGRIND\n-fi\n-\n if [ ! -z \"$CFG_LLVM_ROOT\" -a -e \"$CFG_LLVM_ROOT/bin/llvm-config\" ]\n then\n     step_msg \"using custom LLVM at $CFG_LLVM_ROOT\"\n@@ -314,7 +296,7 @@ then\n \n     case $LLVM_VERSION in\n \t(3.0svn | 3.0 | 3.1svn)\n-\t    step_msg \"found ok version of LLVM: $LLVM_VERSION\"\n+\t    msg \"found ok version of LLVM: $LLVM_VERSION\"\n \t    ;;\n \t(*)\n \t    err \"bad LLVM version: $LLVM_VERSION, need >=3.0svn\"\n@@ -339,8 +321,7 @@ then\n         CFG_C_COMPILER=\"clang\"\n         ;;\n         (*)\n-        msg \"bad CLANG version: $CFG_CLANG_VERSION, need >=3.0svn; disabling\"\n-        CFG_C_COMPILER=\"gcc\"\n+        err \"bad CLANG version: $CFG_CLANG_VERSION, need >=3.0svn\"\n         ;;\n     esac\n else\n@@ -357,13 +338,6 @@ then\n     CFG_TARGET_TRIPLES=\"${CFG_HOST_TRIPLE}\"\n fi\n \n-putvar CFG_HOST_TRIPLE\n-putvar CFG_TARGET_TRIPLES\n-\n-putvar CFG_C_COMPILER\n-putvar CFG_PREFIX\n-\n-putvar CFG_LLVM_ROOT\n \n step_msg \"making directories\"\n \n@@ -446,12 +420,9 @@ fi\n \n cd ${CFG_BUILD_DIR}\n \n-msg\n-\n \n # Configure llvm. Here we go...\n CFG_LLVM_SRC_DIR=${CFG_SRC_DIR}src/llvm\n-putvar CFG_LLVM_SRC_DIR\n \n for t in $CFG_TARGET_TRIPLES\n do\n@@ -500,12 +471,14 @@ do\n \texport CXXFLAGS\n \texport LDFLAGS\n \n+\t# FIXME: This ends up filling the screen with a bunch of LLVM configuration,\n+\t# depriving the user of seeing our configuration info\n \tcd $LLVM_BUILD_DIR\n         # FIXME: This won't work if CFG_SRC_DIR is absolute\n \t${CFG_BUILD_DIR}/${CFG_LLVM_SRC_DIR}/configure $LLVM_FLAGS\n \tcd $CFG_BUILD_DIR\n     else\n-\tLLVM_BUILD_DIR=bogus\n+\tLLVM_BUILD_DIR=\n         # The user is using their own LLVM\n \tLLVM_INST_DIR=$CFG_LLVM_ROOT\n     fi\n@@ -520,6 +493,43 @@ do\n     CFG_LLVM_INST_DIR=$(echo CFG_LLVM_INST_DIR_${t} | tr - _)\n     eval ${CFG_LLVM_BUILD_DIR}=\"'$LLVM_BUILD_DIR'\"\n     eval ${CFG_LLVM_INST_DIR}=\"'$LLVM_INST_DIR'\"\n+done\n+\n+\n+step_msg \"writing configuration\"\n+\n+putvar CFG_SRC_DIR\n+putvar CFG_BUILD_DIR\n+putvar CFG_OSTYPE\n+putvar CFG_CPUTYPE\n+putvar CFG_CONFIGURE_ARGS\n+putvar CFG_HOST_TRIPLE\n+putvar CFG_TARGET_TRIPLES\n+putvar CFG_C_COMPILER\n+putvar CFG_PREFIX\n+\n+if head -n 1 ${CFG_SRC_DIR}src/snapshots.txt | grep -q '^T'\n+then\n+    CFG_IN_TRANSITION=1\n+    putvar CFG_IN_TRANSITION\n+fi\n+\n+# Valgrind is only reliable on Linux. On Windows it doesn't work at all, and\n+# on the Mac the dynamic linker causes Valgrind to emit a huge stream of\n+# errors.\n+if [ $CFG_OSTYPE != unknown-linux-gnu ] && [ $CFG_OSTYPE != apple-darwin ]\n+then\n+    CFG_BAD_VALGRIND=1\n+    putvar CFG_BAD_VALGRIND\n+fi\n+\n+putvar CFG_LLVM_ROOT\n+putvar CFG_LLVM_SRC_DIR\n+\n+for t in $CFG_TARGET_TRIPLES\n+do\n+    CFG_LLVM_BUILD_DIR=$(echo CFG_LLVM_BUILD_DIR_${t} | tr - _)\n+    CFG_LLVM_INST_DIR=$(echo CFG_LLVM_INST_DIR_${t} | tr - _)\n     putvar $CFG_LLVM_BUILD_DIR\n     putvar $CFG_LLVM_INST_DIR\n done\n@@ -530,6 +540,7 @@ perl -i.bak -p -e 's@ ([a-zA-Z]):[/\\\\]@ /\\1/@go;' \\\n                -e 's@\\\\@/@go;' config.mk\n rm -f config.mk.bak\n \n+msg\n copy ${CFG_SRC_DIR}Makefile.in ./Makefile\n \n step_msg \"complete\""}]}