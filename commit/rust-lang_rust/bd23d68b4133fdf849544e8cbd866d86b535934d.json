{"sha": "bd23d68b4133fdf849544e8cbd866d86b535934d", "node_id": "C_kwDOAAsO6NoAKGJkMjNkNjhiNDEzM2ZkZjg0OTU0NGU4Y2JkODY2ZDg2YjUzNTkzNGQ", "commit": {"author": {"name": "Nicholas Nethercote", "email": "n.nethercote@gmail.com", "date": "2022-07-27T02:50:22Z"}, "committer": {"name": "Nicholas Nethercote", "email": "n.nethercote@gmail.com", "date": "2022-07-31T22:11:15Z"}, "message": "Remove `StringReader::end_src_index`.\n\nIt not needed, always being set to the end of the text.", "tree": {"sha": "23260055cd4e0e27914c31cde849f807e553842c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/23260055cd4e0e27914c31cde849f807e553842c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/bd23d68b4133fdf849544e8cbd866d86b535934d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/bd23d68b4133fdf849544e8cbd866d86b535934d", "html_url": "https://github.com/rust-lang/rust/commit/bd23d68b4133fdf849544e8cbd866d86b535934d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/bd23d68b4133fdf849544e8cbd866d86b535934d/comments", "author": {"login": "nnethercote", "id": 1940286, "node_id": "MDQ6VXNlcjE5NDAyODY=", "avatar_url": "https://avatars.githubusercontent.com/u/1940286?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nnethercote", "html_url": "https://github.com/nnethercote", "followers_url": "https://api.github.com/users/nnethercote/followers", "following_url": "https://api.github.com/users/nnethercote/following{/other_user}", "gists_url": "https://api.github.com/users/nnethercote/gists{/gist_id}", "starred_url": "https://api.github.com/users/nnethercote/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nnethercote/subscriptions", "organizations_url": "https://api.github.com/users/nnethercote/orgs", "repos_url": "https://api.github.com/users/nnethercote/repos", "events_url": "https://api.github.com/users/nnethercote/events{/privacy}", "received_events_url": "https://api.github.com/users/nnethercote/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nnethercote", "id": 1940286, "node_id": "MDQ6VXNlcjE5NDAyODY=", "avatar_url": "https://avatars.githubusercontent.com/u/1940286?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nnethercote", "html_url": "https://github.com/nnethercote", "followers_url": "https://api.github.com/users/nnethercote/followers", "following_url": "https://api.github.com/users/nnethercote/following{/other_user}", "gists_url": "https://api.github.com/users/nnethercote/gists{/gist_id}", "starred_url": "https://api.github.com/users/nnethercote/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nnethercote/subscriptions", "organizations_url": "https://api.github.com/users/nnethercote/orgs", "repos_url": "https://api.github.com/users/nnethercote/repos", "events_url": "https://api.github.com/users/nnethercote/events{/privacy}", "received_events_url": "https://api.github.com/users/nnethercote/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "55185992d6f4ef3c01aaab545488863d21232d8d", "url": "https://api.github.com/repos/rust-lang/rust/commits/55185992d6f4ef3c01aaab545488863d21232d8d", "html_url": "https://github.com/rust-lang/rust/commit/55185992d6f4ef3c01aaab545488863d21232d8d"}], "stats": {"total": 7, "additions": 2, "deletions": 5}, "files": [{"sha": "5868036c737b7451cffd4d1b39c7e5a5120cf278", "filename": "compiler/rustc_parse/src/lexer/mod.rs", "status": "modified", "additions": 2, "deletions": 5, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/bd23d68b4133fdf849544e8cbd866d86b535934d/compiler%2Frustc_parse%2Fsrc%2Flexer%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bd23d68b4133fdf849544e8cbd866d86b535934d/compiler%2Frustc_parse%2Fsrc%2Flexer%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_parse%2Fsrc%2Flexer%2Fmod.rs?ref=bd23d68b4133fdf849544e8cbd866d86b535934d", "patch": "@@ -37,8 +37,7 @@ pub(crate) fn parse_token_trees<'a>(\n     start_pos: BytePos,\n     override_span: Option<Span>,\n ) -> (PResult<'a, TokenStream>, Vec<UnmatchedBrace>) {\n-    StringReader { sess, start_pos, pos: start_pos, end_src_index: src.len(), src, override_span }\n-        .into_token_trees()\n+    StringReader { sess, start_pos, pos: start_pos, src, override_span }.into_token_trees()\n }\n \n struct StringReader<'a> {\n@@ -47,8 +46,6 @@ struct StringReader<'a> {\n     start_pos: BytePos,\n     /// The absolute offset within the source_map of the current character.\n     pos: BytePos,\n-    /// Stop reading src at this index.\n-    end_src_index: usize,\n     /// Source text to tokenize.\n     src: &'a str,\n     override_span: Option<Span>,\n@@ -74,7 +71,7 @@ impl<'a> StringReader<'a> {\n         // Skip trivial (whitespace & comments) tokens\n         loop {\n             let start_src_index = self.src_index(self.pos);\n-            let text: &str = &self.src[start_src_index..self.end_src_index];\n+            let text: &str = &self.src[start_src_index..];\n \n             if text.is_empty() {\n                 let span = self.mk_sp(self.pos, self.pos);"}]}