{"sha": "d129d049c6ef259630c862eb0ecd322452814d1b", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQxMjlkMDQ5YzZlZjI1OTYzMGM4NjJlYjBlY2QzMjI0NTI4MTRkMWI=", "commit": {"author": {"name": "Dylan Maccora", "email": "maccora17@gmail.com", "date": "2018-10-07T00:24:09Z"}, "committer": {"name": "Dylan Maccora", "email": "maccora17@gmail.com", "date": "2018-10-07T00:24:09Z"}, "message": "Adding more detail to filter_map lint documentation.", "tree": {"sha": "7041ac47e35bc951431275483f0d56d9accd43bb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7041ac47e35bc951431275483f0d56d9accd43bb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d129d049c6ef259630c862eb0ecd322452814d1b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d129d049c6ef259630c862eb0ecd322452814d1b", "html_url": "https://github.com/rust-lang/rust/commit/d129d049c6ef259630c862eb0ecd322452814d1b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d129d049c6ef259630c862eb0ecd322452814d1b/comments", "author": {"login": "maccoda", "id": 15388206, "node_id": "MDQ6VXNlcjE1Mzg4MjA2", "avatar_url": "https://avatars.githubusercontent.com/u/15388206?v=4", "gravatar_id": "", "url": "https://api.github.com/users/maccoda", "html_url": "https://github.com/maccoda", "followers_url": "https://api.github.com/users/maccoda/followers", "following_url": "https://api.github.com/users/maccoda/following{/other_user}", "gists_url": "https://api.github.com/users/maccoda/gists{/gist_id}", "starred_url": "https://api.github.com/users/maccoda/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/maccoda/subscriptions", "organizations_url": "https://api.github.com/users/maccoda/orgs", "repos_url": "https://api.github.com/users/maccoda/repos", "events_url": "https://api.github.com/users/maccoda/events{/privacy}", "received_events_url": "https://api.github.com/users/maccoda/received_events", "type": "User", "site_admin": false}, "committer": {"login": "maccoda", "id": 15388206, "node_id": "MDQ6VXNlcjE1Mzg4MjA2", "avatar_url": "https://avatars.githubusercontent.com/u/15388206?v=4", "gravatar_id": "", "url": "https://api.github.com/users/maccoda", "html_url": "https://github.com/maccoda", "followers_url": "https://api.github.com/users/maccoda/followers", "following_url": "https://api.github.com/users/maccoda/following{/other_user}", "gists_url": "https://api.github.com/users/maccoda/gists{/gist_id}", "starred_url": "https://api.github.com/users/maccoda/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/maccoda/subscriptions", "organizations_url": "https://api.github.com/users/maccoda/orgs", "repos_url": "https://api.github.com/users/maccoda/repos", "events_url": "https://api.github.com/users/maccoda/events{/privacy}", "received_events_url": "https://api.github.com/users/maccoda/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1e0729d48a2c062042f9587bca8e9078bb8ef619", "url": "https://api.github.com/repos/rust-lang/rust/commits/1e0729d48a2c062042f9587bca8e9078bb8ef619", "html_url": "https://github.com/rust-lang/rust/commit/1e0729d48a2c062042f9587bca8e9078bb8ef619"}], "stats": {"total": 15, "additions": 13, "deletions": 2}, "files": [{"sha": "d49a05f5186a3acb71bd0a50103ba1545d510262", "filename": "clippy_lints/src/methods/mod.rs", "status": "modified", "additions": 13, "deletions": 2, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/d129d049c6ef259630c862eb0ecd322452814d1b/clippy_lints%2Fsrc%2Fmethods%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d129d049c6ef259630c862eb0ecd322452814d1b/clippy_lints%2Fsrc%2Fmethods%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmethods%2Fmod.rs?ref=d129d049c6ef259630c862eb0ecd322452814d1b", "patch": "@@ -706,19 +706,30 @@ declare_clippy_lint! {\n \n \n /// **What it does:** Checks for `filter_map` calls which could be replaced by `filter` or `map`.\n+/// More specifically it checks if the closure provided is only performing one of the\n+/// filter or map operations and suggests the appropriate option.\n ///\n-/// **Why is this bad?** Complexity\n+/// **Why is this bad?** Complexity. The intent is also clearer if only a single\n+/// operation is being performed.\n ///\n /// **Known problems:** None\n ///\n /// **Example:**\n /// ```rust\n /// let _ = (0..3).filter_map(|x| if x > 2 { Some(x) } else { None });\n /// ```\n-/// This could be written as:\n+/// As there is no transformation of the argument this could be written as:\n /// ```rust\n /// let _ = (0..3).filter(|&x| x > 2);\n /// ```\n+///\n+/// ```rust\n+/// let _ = (0..4).filter_map(i32::checked_abs);\n+/// ```\n+/// As there is no conditional check on the argument this could be written as:\n+/// ```rust\n+/// let _ = (0..4).map(i32::checked_abs);\n+/// ```\n declare_clippy_lint! {\n     pub UNNECESSARY_FILTER_MAP,\n     complexity,"}]}