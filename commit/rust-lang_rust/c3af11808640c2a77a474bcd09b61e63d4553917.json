{"sha": "c3af11808640c2a77a474bcd09b61e63d4553917", "node_id": "MDY6Q29tbWl0NzI0NzEyOmMzYWYxMTgwODY0MGMyYTc3YTQ3NGJjZDA5YjYxZTYzZDQ1NTM5MTc=", "commit": {"author": {"name": "Eric Huss", "email": "eric@huss.org", "date": "2018-04-12T00:17:14Z"}, "committer": {"name": "Eric Huss", "email": "eric@huss.org", "date": "2018-04-20T19:43:35Z"}, "message": "Add doc for output_base_name_stage.", "tree": {"sha": "7ca0867a977f1f704f2f4eaab5a65f35e4a1d213", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7ca0867a977f1f704f2f4eaab5a65f35e4a1d213"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c3af11808640c2a77a474bcd09b61e63d4553917", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c3af11808640c2a77a474bcd09b61e63d4553917", "html_url": "https://github.com/rust-lang/rust/commit/c3af11808640c2a77a474bcd09b61e63d4553917", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c3af11808640c2a77a474bcd09b61e63d4553917/comments", "author": {"login": "ehuss", "id": 43198, "node_id": "MDQ6VXNlcjQzMTk4", "avatar_url": "https://avatars.githubusercontent.com/u/43198?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ehuss", "html_url": "https://github.com/ehuss", "followers_url": "https://api.github.com/users/ehuss/followers", "following_url": "https://api.github.com/users/ehuss/following{/other_user}", "gists_url": "https://api.github.com/users/ehuss/gists{/gist_id}", "starred_url": "https://api.github.com/users/ehuss/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ehuss/subscriptions", "organizations_url": "https://api.github.com/users/ehuss/orgs", "repos_url": "https://api.github.com/users/ehuss/repos", "events_url": "https://api.github.com/users/ehuss/events{/privacy}", "received_events_url": "https://api.github.com/users/ehuss/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ehuss", "id": 43198, "node_id": "MDQ6VXNlcjQzMTk4", "avatar_url": "https://avatars.githubusercontent.com/u/43198?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ehuss", "html_url": "https://github.com/ehuss", "followers_url": "https://api.github.com/users/ehuss/followers", "following_url": "https://api.github.com/users/ehuss/following{/other_user}", "gists_url": "https://api.github.com/users/ehuss/gists{/gist_id}", "starred_url": "https://api.github.com/users/ehuss/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ehuss/subscriptions", "organizations_url": "https://api.github.com/users/ehuss/orgs", "repos_url": "https://api.github.com/users/ehuss/repos", "events_url": "https://api.github.com/users/ehuss/events{/privacy}", "received_events_url": "https://api.github.com/users/ehuss/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bf816a2fe08c6d40ea356306ef4c750d3667dc3d", "url": "https://api.github.com/repos/rust-lang/rust/commits/bf816a2fe08c6d40ea356306ef4c750d3667dc3d", "html_url": "https://github.com/rust-lang/rust/commit/bf816a2fe08c6d40ea356306ef4c750d3667dc3d"}], "stats": {"total": 2, "additions": 2, "deletions": 0}, "files": [{"sha": "aabf2e6f8f0e675c2e918e7491c1cd59546c75d0", "filename": "src/tools/compiletest/src/runtest.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c3af11808640c2a77a474bcd09b61e63d4553917/src%2Ftools%2Fcompiletest%2Fsrc%2Fruntest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c3af11808640c2a77a474bcd09b61e63d4553917/src%2Ftools%2Fcompiletest%2Fsrc%2Fruntest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fcompiletest%2Fsrc%2Fruntest.rs?ref=c3af11808640c2a77a474bcd09b61e63d4553917", "patch": "@@ -1878,6 +1878,8 @@ impl<'test> TestCx<'test> {\n         dir.join(&self.output_testname(&self.testpaths.file))\n     }\n \n+    /// Same as `output_base_name`, but includes the stage ID as an extension,\n+    /// such as: `.../compile-fail/foo/bar.stage1-<triple>`\n     fn output_base_name_stage(&self) -> PathBuf {\n         self.output_base_name().with_extension(&self.config.stage_id)\n     }"}]}