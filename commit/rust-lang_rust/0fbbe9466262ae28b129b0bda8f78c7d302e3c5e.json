{"sha": "0fbbe9466262ae28b129b0bda8f78c7d302e3c5e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjBmYmJlOTQ2NjI2MmFlMjhiMTI5YjBiZGE4Zjc4YzdkMzAyZTNjNWU=", "commit": {"author": {"name": "Dylan DPC", "email": "dylan.dpc@gmail.com", "date": "2020-12-04T02:30:36Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-12-04T02:30:36Z"}, "message": "Rollup merge of #79646 - petrochenkov:inclean, r=davidtwco\n\nrustc_metadata: Remove some dead code\n\nFollow up to https://github.com/rust-lang/rust/pull/74967", "tree": {"sha": "e846fb61ce3b0112a6f4e7da231b2cf244567d81", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e846fb61ce3b0112a6f4e7da231b2cf244567d81"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0fbbe9466262ae28b129b0bda8f78c7d302e3c5e", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJfyZ9MCRBK7hj4Ov3rIwAAdHIIAIUFV4VsI+FPtX42sFGvzaAf\neMaozJuOl7JySHMNdfiOaAGXFKR/IK5G6LJjWtUaAql+6zQAB92msJDLJyvZXIDL\nueMVxExHKjTwuXJtPaJ2TfBf7/9K3irF3XUNr+5EX8D68KAAym8plxzoN0WQc+Vk\n0xnJIGAKp3dAYgzxHYSbiLbXimdqJnlJi26kpOySBzIaj4rrTq8DOWc1yZi8pdRb\nmg8LauQANSqoqeuHxWZc6LrqmEfT6zfffH55n0BxTY3WD4faAL+YE/oJQ4vXeu5k\nkJvbTvPKVE2vJD0hhJLdb3wuUc1Ebcp5jsz6ZzPGutgC2fI1V8dsesdFpYeveTA=\n=hIwK\n-----END PGP SIGNATURE-----\n", "payload": "tree e846fb61ce3b0112a6f4e7da231b2cf244567d81\nparent 5495bb97a046435b9715b917dd5f8020e7673931\nparent 908bf5a310b7265a3e7c1d1fa021e3b10aa67293\nauthor Dylan DPC <dylan.dpc@gmail.com> 1607049036 +0100\ncommitter GitHub <noreply@github.com> 1607049036 +0100\n\nRollup merge of #79646 - petrochenkov:inclean, r=davidtwco\n\nrustc_metadata: Remove some dead code\n\nFollow up to https://github.com/rust-lang/rust/pull/74967\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0fbbe9466262ae28b129b0bda8f78c7d302e3c5e", "html_url": "https://github.com/rust-lang/rust/commit/0fbbe9466262ae28b129b0bda8f78c7d302e3c5e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0fbbe9466262ae28b129b0bda8f78c7d302e3c5e/comments", "author": {"login": "Dylan-DPC", "id": 99973273, "node_id": "U_kgDOBfV4mQ", "avatar_url": "https://avatars.githubusercontent.com/u/99973273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dylan-DPC", "html_url": "https://github.com/Dylan-DPC", "followers_url": "https://api.github.com/users/Dylan-DPC/followers", "following_url": "https://api.github.com/users/Dylan-DPC/following{/other_user}", "gists_url": "https://api.github.com/users/Dylan-DPC/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dylan-DPC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dylan-DPC/subscriptions", "organizations_url": "https://api.github.com/users/Dylan-DPC/orgs", "repos_url": "https://api.github.com/users/Dylan-DPC/repos", "events_url": "https://api.github.com/users/Dylan-DPC/events{/privacy}", "received_events_url": "https://api.github.com/users/Dylan-DPC/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5495bb97a046435b9715b917dd5f8020e7673931", "url": "https://api.github.com/repos/rust-lang/rust/commits/5495bb97a046435b9715b917dd5f8020e7673931", "html_url": "https://github.com/rust-lang/rust/commit/5495bb97a046435b9715b917dd5f8020e7673931"}, {"sha": "908bf5a310b7265a3e7c1d1fa021e3b10aa67293", "url": "https://api.github.com/repos/rust-lang/rust/commits/908bf5a310b7265a3e7c1d1fa021e3b10aa67293", "html_url": "https://github.com/rust-lang/rust/commit/908bf5a310b7265a3e7c1d1fa021e3b10aa67293"}], "stats": {"total": 32, "additions": 4, "deletions": 28}, "files": [{"sha": "c571ed7b61262824d907fbb65bf731e84d00f3dc", "filename": "compiler/rustc_metadata/src/rmeta/decoder.rs", "status": "modified", "additions": 0, "deletions": 17, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/0fbbe9466262ae28b129b0bda8f78c7d302e3c5e/compiler%2Frustc_metadata%2Fsrc%2Frmeta%2Fdecoder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0fbbe9466262ae28b129b0bda8f78c7d302e3c5e/compiler%2Frustc_metadata%2Fsrc%2Frmeta%2Fdecoder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_metadata%2Fsrc%2Frmeta%2Fdecoder.rs?ref=0fbbe9466262ae28b129b0bda8f78c7d302e3c5e", "patch": "@@ -1592,23 +1592,6 @@ impl<'a, 'tcx> CrateMetadataRef<'a> {\n         self.def_path_hash_unlocked(index, &mut def_path_hashes)\n     }\n \n-    fn all_def_path_hashes_and_def_ids(&self) -> Vec<(DefPathHash, DefId)> {\n-        let mut def_path_hashes = self.def_path_hash_cache.lock();\n-        let mut def_index_to_data = |index| {\n-            (self.def_path_hash_unlocked(index, &mut def_path_hashes), self.local_def_id(index))\n-        };\n-        if let Some(data) = &self.root.proc_macro_data {\n-            std::iter::once(CRATE_DEF_INDEX)\n-                .chain(data.macros.decode(self))\n-                .map(def_index_to_data)\n-                .collect()\n-        } else {\n-            (0..self.num_def_ids())\n-                .map(|index| def_index_to_data(DefIndex::from_usize(index)))\n-                .collect()\n-        }\n-    }\n-\n     /// Get the `DepNodeIndex` corresponding this crate. The result of this\n     /// method is cached in the `dep_node_index` field.\n     fn get_crate_dep_node_index(&self, tcx: TyCtxt<'tcx>) -> DepNodeIndex {"}, {"sha": "b7f22885217908e9d44388b39d1eab8e19ba04b3", "filename": "compiler/rustc_metadata/src/rmeta/decoder/cstore_impl.rs", "status": "modified", "additions": 4, "deletions": 8, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/0fbbe9466262ae28b129b0bda8f78c7d302e3c5e/compiler%2Frustc_metadata%2Fsrc%2Frmeta%2Fdecoder%2Fcstore_impl.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0fbbe9466262ae28b129b0bda8f78c7d302e3c5e/compiler%2Frustc_metadata%2Fsrc%2Frmeta%2Fdecoder%2Fcstore_impl.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_metadata%2Fsrc%2Frmeta%2Fdecoder%2Fcstore_impl.rs?ref=0fbbe9466262ae28b129b0bda8f78c7d302e3c5e", "patch": "@@ -456,6 +456,10 @@ impl CStore {\n     pub fn module_expansion_untracked(&self, def_id: DefId, sess: &Session) -> ExpnId {\n         self.get_crate_data(def_id.krate).module_expansion(def_id.index, sess)\n     }\n+\n+    pub fn num_def_ids(&self, cnum: CrateNum) -> usize {\n+        self.get_crate_data(cnum).num_def_ids()\n+    }\n }\n \n impl CrateStore for CStore {\n@@ -498,14 +502,6 @@ impl CrateStore for CStore {\n         self.get_crate_data(def.krate).def_path_hash(def.index)\n     }\n \n-    fn all_def_path_hashes_and_def_ids(&self, cnum: CrateNum) -> Vec<(DefPathHash, DefId)> {\n-        self.get_crate_data(cnum).all_def_path_hashes_and_def_ids()\n-    }\n-\n-    fn num_def_ids(&self, cnum: CrateNum) -> usize {\n-        self.get_crate_data(cnum).num_def_ids()\n-    }\n-\n     // See `CrateMetadataRef::def_path_hash_to_def_id` for more details\n     fn def_path_hash_to_def_id(\n         &self,"}, {"sha": "6d2c43874bc0fe59e2b0faa7c4b8c905be43caa8", "filename": "compiler/rustc_middle/src/middle/cstore.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0fbbe9466262ae28b129b0bda8f78c7d302e3c5e/compiler%2Frustc_middle%2Fsrc%2Fmiddle%2Fcstore.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0fbbe9466262ae28b129b0bda8f78c7d302e3c5e/compiler%2Frustc_middle%2Fsrc%2Fmiddle%2Fcstore.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fmiddle%2Fcstore.rs?ref=0fbbe9466262ae28b129b0bda8f78c7d302e3c5e", "patch": "@@ -189,8 +189,6 @@ pub trait CrateStore {\n     fn def_kind(&self, def: DefId) -> DefKind;\n     fn def_path(&self, def: DefId) -> DefPath;\n     fn def_path_hash(&self, def: DefId) -> DefPathHash;\n-    fn all_def_path_hashes_and_def_ids(&self, cnum: CrateNum) -> Vec<(DefPathHash, DefId)>;\n-    fn num_def_ids(&self, cnum: CrateNum) -> usize;\n     fn def_path_hash_to_def_id(\n         &self,\n         cnum: CrateNum,"}, {"sha": "9c693c290e7f4a694b62ce41e6c4bbbfad252bbd", "filename": "src/librustdoc/core.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/0fbbe9466262ae28b129b0bda8f78c7d302e3c5e/src%2Flibrustdoc%2Fcore.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0fbbe9466262ae28b129b0bda8f78c7d302e3c5e/src%2Flibrustdoc%2Fcore.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fcore.rs?ref=0fbbe9466262ae28b129b0bda8f78c7d302e3c5e", "patch": "@@ -13,7 +13,6 @@ use rustc_hir::{\n };\n use rustc_interface::interface;\n use rustc_middle::hir::map::Map;\n-use rustc_middle::middle::cstore::CrateStore;\n use rustc_middle::middle::privacy::AccessLevels;\n use rustc_middle::ty::{ParamEnv, Ty, TyCtxt};\n use rustc_resolve as resolve;"}]}