{"sha": "8adbf7f2c1845cd8a23e1209eef7a0df34137f5a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjhhZGJmN2YyYzE4NDVjZDhhMjNlMTIwOWVlZjdhMGRmMzQxMzdmNWE=", "commit": {"author": {"name": "Jerry Hardee", "email": "hardeejj9@gmail.com", "date": "2019-07-15T17:46:58Z"}, "committer": {"name": "Jerry Hardee", "email": "hardeejj9@gmail.com", "date": "2019-07-15T17:46:58Z"}, "message": "Fix float_cmp false positive when comparing signum\n\nf1.signum() == f2.signum()\nf1.signum() != f2.signum()\nshould not trigger a warning.", "tree": {"sha": "7f1893ab3d361545d9c10ff4e6d2e4d8e2125ca0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7f1893ab3d361545d9c10ff4e6d2e4d8e2125ca0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8adbf7f2c1845cd8a23e1209eef7a0df34137f5a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8adbf7f2c1845cd8a23e1209eef7a0df34137f5a", "html_url": "https://github.com/rust-lang/rust/commit/8adbf7f2c1845cd8a23e1209eef7a0df34137f5a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8adbf7f2c1845cd8a23e1209eef7a0df34137f5a/comments", "author": {"login": "jayhardee9", "id": 6964208, "node_id": "MDQ6VXNlcjY5NjQyMDg=", "avatar_url": "https://avatars.githubusercontent.com/u/6964208?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jayhardee9", "html_url": "https://github.com/jayhardee9", "followers_url": "https://api.github.com/users/jayhardee9/followers", "following_url": "https://api.github.com/users/jayhardee9/following{/other_user}", "gists_url": "https://api.github.com/users/jayhardee9/gists{/gist_id}", "starred_url": "https://api.github.com/users/jayhardee9/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jayhardee9/subscriptions", "organizations_url": "https://api.github.com/users/jayhardee9/orgs", "repos_url": "https://api.github.com/users/jayhardee9/repos", "events_url": "https://api.github.com/users/jayhardee9/events{/privacy}", "received_events_url": "https://api.github.com/users/jayhardee9/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jayhardee9", "id": 6964208, "node_id": "MDQ6VXNlcjY5NjQyMDg=", "avatar_url": "https://avatars.githubusercontent.com/u/6964208?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jayhardee9", "html_url": "https://github.com/jayhardee9", "followers_url": "https://api.github.com/users/jayhardee9/followers", "following_url": "https://api.github.com/users/jayhardee9/following{/other_user}", "gists_url": "https://api.github.com/users/jayhardee9/gists{/gist_id}", "starred_url": "https://api.github.com/users/jayhardee9/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jayhardee9/subscriptions", "organizations_url": "https://api.github.com/users/jayhardee9/orgs", "repos_url": "https://api.github.com/users/jayhardee9/repos", "events_url": "https://api.github.com/users/jayhardee9/events{/privacy}", "received_events_url": "https://api.github.com/users/jayhardee9/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a73bb33399fcf5684450a2088fc961cf9aa0285b", "url": "https://api.github.com/repos/rust-lang/rust/commits/a73bb33399fcf5684450a2088fc961cf9aa0285b", "html_url": "https://github.com/rust-lang/rust/commit/a73bb33399fcf5684450a2088fc961cf9aa0285b"}], "stats": {"total": 46, "additions": 46, "deletions": 0}, "files": [{"sha": "04c0983db68830358b0990fb8ff8299b50bae276", "filename": "clippy_lints/src/misc.rs", "status": "modified", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/8adbf7f2c1845cd8a23e1209eef7a0df34137f5a/clippy_lints%2Fsrc%2Fmisc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8adbf7f2c1845cd8a23e1209eef7a0df34137f5a/clippy_lints%2Fsrc%2Fmisc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmisc.rs?ref=8adbf7f2c1845cd8a23e1209eef7a0df34137f5a", "patch": "@@ -364,6 +364,12 @@ impl<'a, 'tcx> LateLintPass<'a, 'tcx> for MiscLints {\n                     if is_allowed(cx, left) || is_allowed(cx, right) {\n                         return;\n                     }\n+\n+                    // Allow comparing the results of signum()\n+                    if is_signum(cx, left) && is_signum(cx, right) {\n+                        return;\n+                    }\n+\n                     if let Some(name) = get_item_name(cx, expr) {\n                         let name = name.as_str();\n                         if name == \"eq\"\n@@ -493,6 +499,27 @@ fn is_allowed<'a, 'tcx>(cx: &LateContext<'a, 'tcx>, expr: &'tcx Expr) -> bool {\n     }\n }\n \n+// Return true if `expr` is the result of `signum()` invoked on a float value.\n+fn is_signum(cx: &LateContext<'_, '_>, expr: &Expr) -> bool {\n+    // The negation of a signum is still a signum\n+    if let ExprKind::Unary(UnNeg, ref child_expr) = expr.node {\n+        return is_signum(cx, &child_expr);\n+    }\n+\n+    if_chain! {\n+        if let ExprKind::MethodCall(ref method_name, _, ref expressions) = expr.node;\n+        if sym!(signum) == method_name.ident.name;\n+        // Check that the receiver of the signum() is a float (expressions[0] is the receiver of\n+        // the method call)\n+        if is_float(cx, &expressions[0]);\n+        then {\n+            true\n+        } else {\n+            false\n+        }\n+    }\n+}\n+\n fn is_float(cx: &LateContext<'_, '_>, expr: &Expr) -> bool {\n     matches!(walk_ptrs_ty(cx.tables.expr_ty(expr)).sty, ty::Float(_))\n }"}, {"sha": "1ec8af3e3871974ad068fb5b502642d0f5bd6274", "filename": "tests/ui/float_cmp.rs", "status": "modified", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/8adbf7f2c1845cd8a23e1209eef7a0df34137f5a/tests%2Fui%2Ffloat_cmp.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8adbf7f2c1845cd8a23e1209eef7a0df34137f5a/tests%2Fui%2Ffloat_cmp.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ffloat_cmp.rs?ref=8adbf7f2c1845cd8a23e1209eef7a0df34137f5a", "patch": "@@ -77,4 +77,23 @@ fn main() {\n     let b: *const f32 = xs.as_ptr();\n \n     assert_eq!(a, b); // no errors\n+\n+    // no errors - comparing signums is ok\n+    let x32 = 3.21f32;\n+    1.23f32.signum() == x32.signum();\n+    1.23f32.signum() == -(x32.signum());\n+    1.23f32.signum() == 3.21f32.signum();\n+\n+    1.23f32.signum() != x32.signum();\n+    1.23f32.signum() != -(x32.signum());\n+    1.23f32.signum() != 3.21f32.signum();\n+\n+    let x64 = 3.21f64;\n+    1.23f64.signum() == x64.signum();\n+    1.23f64.signum() == -(x64.signum());\n+    1.23f64.signum() == 3.21f64.signum();\n+\n+    1.23f64.signum() != x64.signum();\n+    1.23f64.signum() != -(x64.signum());\n+    1.23f64.signum() != 3.21f64.signum();\n }"}]}