{"sha": "064ff633f6055ed35022222c89af01d3f9943e3c", "node_id": "MDY6Q29tbWl0NzI0NzEyOjA2NGZmNjMzZjYwNTVlZDM1MDIyMjIyYzg5YWYwMWQzZjk5NDNlM2M=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2021-05-23T12:40:14Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-05-23T12:40:14Z"}, "message": "Merge #8940\n\n8940: Give \u2018unsafe\u2019 semantic token modifier to unsafe traits r=Veykril a=arzg\n\nHi! This is my first pull request that touches rust-analyzer itself beyond a search-and-replace, so please tell me if I should change anything or do anything differently. :)\n\nCo-authored-by: Aramis Razzaghipour <aramisnoah@gmail.com>", "tree": {"sha": "395729f98518d6f4ac5996d3cbfd4b65d04a85f1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/395729f98518d6f4ac5996d3cbfd4b65d04a85f1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/064ff633f6055ed35022222c89af01d3f9943e3c", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJgqk0uCRBK7hj4Ov3rIwAAFtoIAHUDFAYwLWuxechc9PtOJgYw\n1NiRbp7NwqFrPaJqK59Ge13PczToC+bFAXiSByanVSqk7IVkKkoDmZBo4xBFUmNN\nps92l8NknSbpcf6WovTcr30YuvU5TWg4mpyCjAg2EVmJL5ePa6W8WyctVaAshw9B\nvL5S3Ajj57dHPYSE8M9bi7d4OMiLkJ9kCFrSpHw2QKM2+vhqLQbw3FfiVg/gTAlA\n5yIsmpGVaW0n7O+FzznnPp4eDdJGhHIad1WkPXHeMT/4wDQajIgv25itNnzvnzSj\nvSlAZzoPXSFKTg2PviYdKWlDC2L4qJ1VsaXtMjz37kYSUex/cIA+5u45o7JmjHo=\n=soZ3\n-----END PGP SIGNATURE-----\n", "payload": "tree 395729f98518d6f4ac5996d3cbfd4b65d04a85f1\nparent 57eedd906688d6cfa332bd40bca5234043e7293e\nparent 4d4dbcfead82eb6af1f4ef781b197a6926788b15\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1621773614 +0000\ncommitter GitHub <noreply@github.com> 1621773614 +0000\n\nMerge #8940\n\n8940: Give \u2018unsafe\u2019 semantic token modifier to unsafe traits r=Veykril a=arzg\n\nHi! This is my first pull request that touches rust-analyzer itself beyond a search-and-replace, so please tell me if I should change anything or do anything differently. :)\n\nCo-authored-by: Aramis Razzaghipour <aramisnoah@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/064ff633f6055ed35022222c89af01d3f9943e3c", "html_url": "https://github.com/rust-lang/rust/commit/064ff633f6055ed35022222c89af01d3f9943e3c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/064ff633f6055ed35022222c89af01d3f9943e3c/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "57eedd906688d6cfa332bd40bca5234043e7293e", "url": "https://api.github.com/repos/rust-lang/rust/commits/57eedd906688d6cfa332bd40bca5234043e7293e", "html_url": "https://github.com/rust-lang/rust/commit/57eedd906688d6cfa332bd40bca5234043e7293e"}, {"sha": "4d4dbcfead82eb6af1f4ef781b197a6926788b15", "url": "https://api.github.com/repos/rust-lang/rust/commits/4d4dbcfead82eb6af1f4ef781b197a6926788b15", "html_url": "https://github.com/rust-lang/rust/commit/4d4dbcfead82eb6af1f4ef781b197a6926788b15"}], "stats": {"total": 23, "additions": 20, "deletions": 3}, "files": [{"sha": "a7c42ca1e5fe78a8cd600cc18fa74454f24cb756", "filename": "crates/hir/src/lib.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/064ff633f6055ed35022222c89af01d3f9943e3c/crates%2Fhir%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/064ff633f6055ed35022222c89af01d3f9943e3c/crates%2Fhir%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir%2Fsrc%2Flib.rs?ref=064ff633f6055ed35022222c89af01d3f9943e3c", "patch": "@@ -1085,6 +1085,10 @@ impl Trait {\n     pub fn is_auto(self, db: &dyn HirDatabase) -> bool {\n         db.trait_data(self.id).is_auto\n     }\n+\n+    pub fn is_unsafe(&self, db: &dyn HirDatabase) -> bool {\n+        db.trait_data(self.id).is_unsafe\n+    }\n }\n \n impl HasVisibility for Trait {"}, {"sha": "058e37ff06dac9340d6df8e3f7d319a3f3922ebe", "filename": "crates/ide/src/syntax_highlighting/highlight.rs", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/064ff633f6055ed35022222c89af01d3f9943e3c/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Fhighlight.rs", "raw_url": "https://github.com/rust-lang/rust/raw/064ff633f6055ed35022222c89af01d3f9943e3c/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Fhighlight.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Fhighlight.rs?ref=064ff633f6055ed35022222c89af01d3f9943e3c", "patch": "@@ -338,7 +338,14 @@ fn highlight_def(db: &RootDatabase, def: Definition) -> Highlight {\n \n                 return h;\n             }\n-            hir::ModuleDef::Trait(_) => HlTag::Symbol(SymbolKind::Trait),\n+            hir::ModuleDef::Trait(trait_) => {\n+                let mut h = Highlight::new(HlTag::Symbol(SymbolKind::Trait));\n+\n+                if trait_.is_unsafe(db) {\n+                    h |= HlMod::Unsafe;\n+                }\n+                return h;\n+            }\n             hir::ModuleDef::TypeAlias(type_) => {\n                 let mut h = Highlight::new(HlTag::Symbol(SymbolKind::TypeAlias));\n                 if let Some(item) = type_.as_assoc_item(db) {"}, {"sha": "27473a2f96df80e37c59d5020f3b4dc4e18ec2b9", "filename": "crates/ide/src/syntax_highlighting/tags.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/064ff633f6055ed35022222c89af01d3f9943e3c/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Ftags.rs", "raw_url": "https://github.com/rust-lang/rust/raw/064ff633f6055ed35022222c89af01d3f9943e3c/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Ftags.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Ftags.rs?ref=064ff633f6055ed35022222c89af01d3f9943e3c", "patch": "@@ -68,7 +68,7 @@ pub enum HlMod {\n     /// Used with keywords like `async` and `await`.\n     Async,\n     // Keep this last!\n-    /// Used for unsafe functions, mutable statics, union accesses and unsafe operations.\n+    /// Used for unsafe functions, unsafe traits, mutable statics, union accesses and unsafe operations.\n     Unsafe,\n }\n "}, {"sha": "878431b56a081dce08deb2b8519e03ae57c5b132", "filename": "crates/ide/src/syntax_highlighting/test_data/highlighting.html", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/064ff633f6055ed35022222c89af01d3f9943e3c/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Ftest_data%2Fhighlighting.html", "raw_url": "https://github.com/rust-lang/rust/raw/064ff633f6055ed35022222c89af01d3f9943e3c/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Ftest_data%2Fhighlighting.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Ftest_data%2Fhighlighting.html?ref=064ff633f6055ed35022222c89af01d3f9943e3c", "patch": "@@ -245,4 +245,7 @@\n     <span class=\"keyword\">let</span> <span class=\"variable declaration\">f1</span> <span class=\"operator\">=</span> <span class=\"function async\">learn_and_sing</span><span class=\"parenthesis\">(</span><span class=\"parenthesis\">)</span><span class=\"semicolon\">;</span>\n     <span class=\"keyword\">let</span> <span class=\"variable declaration\">f2</span> <span class=\"operator\">=</span> <span class=\"unresolved_reference\">dance</span><span class=\"parenthesis\">(</span><span class=\"parenthesis\">)</span><span class=\"semicolon\">;</span>\n     futures::<span class=\"macro\">join!</span><span class=\"parenthesis\">(</span>f1<span class=\"comma\">,</span> f2<span class=\"parenthesis\">)</span><span class=\"semicolon\">;</span>\n-<span class=\"brace\">}</span></code></pre>\n\\ No newline at end of file\n+<span class=\"brace\">}</span>\n+\n+<span class=\"keyword unsafe\">unsafe</span> <span class=\"keyword\">trait</span> <span class=\"trait declaration unsafe\">Dangerous</span> <span class=\"brace\">{</span><span class=\"brace\">}</span>\n+<span class=\"keyword\">impl</span> <span class=\"trait unsafe\">Dangerous</span> <span class=\"keyword\">for</span> <span class=\"parenthesis\">(</span><span class=\"parenthesis\">)</span> <span class=\"brace\">{</span><span class=\"brace\">}</span></code></pre>\n\\ No newline at end of file"}, {"sha": "9ce26e930eb7becf3ea7a716030ea216335690a7", "filename": "crates/ide/src/syntax_highlighting/tests.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/064ff633f6055ed35022222c89af01d3f9943e3c/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/064ff633f6055ed35022222c89af01d3f9943e3c/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Ftests.rs?ref=064ff633f6055ed35022222c89af01d3f9943e3c", "patch": "@@ -219,6 +219,9 @@ async fn async_main() {\n     let f2 = dance();\n     futures::join!(f1, f2);\n }\n+\n+unsafe trait Dangerous {}\n+impl Dangerous for () {}\n \"#\n         .trim(),\n         expect_file![\"./test_data/highlighting.html\"],"}]}