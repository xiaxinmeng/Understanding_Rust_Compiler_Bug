{"sha": "e64b49d8ff530e313927a9385e947188a08adddf", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU2NGI0OWQ4ZmY1MzBlMzEzOTI3YTkzODVlOTQ3MTg4YTA4YWRkZGY=", "commit": {"author": {"name": "Jan Niklas Hasse", "email": "jhasse@gmail.com", "date": "2014-01-12T18:10:43Z"}, "committer": {"name": "Jan Niklas Hasse", "email": "jhasse@gmail.com", "date": "2014-01-12T18:16:25Z"}, "message": "Don't overwrite the options.output value from build_session_options", "tree": {"sha": "e7d0475674a0f37ec896b24f360b0b5fa85e6ee0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e7d0475674a0f37ec896b24f360b0b5fa85e6ee0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e64b49d8ff530e313927a9385e947188a08adddf", "comment_count": 5, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e64b49d8ff530e313927a9385e947188a08adddf", "html_url": "https://github.com/rust-lang/rust/commit/e64b49d8ff530e313927a9385e947188a08adddf", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e64b49d8ff530e313927a9385e947188a08adddf/comments", "author": {"login": "jhasse", "id": 80071, "node_id": "MDQ6VXNlcjgwMDcx", "avatar_url": "https://avatars.githubusercontent.com/u/80071?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jhasse", "html_url": "https://github.com/jhasse", "followers_url": "https://api.github.com/users/jhasse/followers", "following_url": "https://api.github.com/users/jhasse/following{/other_user}", "gists_url": "https://api.github.com/users/jhasse/gists{/gist_id}", "starred_url": "https://api.github.com/users/jhasse/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jhasse/subscriptions", "organizations_url": "https://api.github.com/users/jhasse/orgs", "repos_url": "https://api.github.com/users/jhasse/repos", "events_url": "https://api.github.com/users/jhasse/events{/privacy}", "received_events_url": "https://api.github.com/users/jhasse/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jhasse", "id": 80071, "node_id": "MDQ6VXNlcjgwMDcx", "avatar_url": "https://avatars.githubusercontent.com/u/80071?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jhasse", "html_url": "https://github.com/jhasse", "followers_url": "https://api.github.com/users/jhasse/followers", "following_url": "https://api.github.com/users/jhasse/following{/other_user}", "gists_url": "https://api.github.com/users/jhasse/gists{/gist_id}", "starred_url": "https://api.github.com/users/jhasse/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jhasse/subscriptions", "organizations_url": "https://api.github.com/users/jhasse/orgs", "repos_url": "https://api.github.com/users/jhasse/repos", "events_url": "https://api.github.com/users/jhasse/events{/privacy}", "received_events_url": "https://api.github.com/users/jhasse/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1fda761e9cc5b5bf9d5f0897f1556958a7746bf5", "url": "https://api.github.com/repos/rust-lang/rust/commits/1fda761e9cc5b5bf9d5f0897f1556958a7746bf5", "html_url": "https://github.com/rust-lang/rust/commit/1fda761e9cc5b5bf9d5f0897f1556958a7746bf5"}], "stats": {"total": 5, "additions": 0, "deletions": 5}, "files": [{"sha": "99f1d9d67bc7b77c6e64ec8bc0bf5c4af980eb96", "filename": "src/librustpkg/util.rs", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/e64b49d8ff530e313927a9385e947188a08adddf/src%2Flibrustpkg%2Futil.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e64b49d8ff530e313927a9385e947188a08adddf/src%2Flibrustpkg%2Futil.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustpkg%2Futil.rs?ref=e64b49d8ff530e313927a9385e947188a08adddf", "patch": "@@ -185,10 +185,6 @@ pub fn compile_input(context: &BuildContext,\n     let csysroot = context.sysroot();\n     debug!(\"compile_input's sysroot = {}\", csysroot.display());\n \n-    let crate_type = match what {\n-        Lib => session::OutputDylib,\n-        Test | Bench | Main => session::OutputExecutable,\n-    };\n     let matches = getopts(debug_flags()\n                           + match what {\n                               Lib => ~[~\"--lib\"],\n@@ -230,7 +226,6 @@ pub fn compile_input(context: &BuildContext,\n     debug!(\"Output type = {:?}\", output_type);\n \n     let options = @session::options {\n-        outputs: ~[crate_type],\n         optimize: opt,\n         test: what == Test || what == Bench,\n         maybe_sysroot: Some(sysroot_to_use),"}]}