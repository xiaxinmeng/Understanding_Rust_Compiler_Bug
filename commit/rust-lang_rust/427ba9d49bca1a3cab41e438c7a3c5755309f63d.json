{"sha": "427ba9d49bca1a3cab41e438c7a3c5755309f63d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQyN2JhOWQ0OWJjYTFhM2NhYjQxZTQzOGM3YTNjNTc1NTMwOWY2M2Q=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2021-04-15T17:28:10Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-04-15T17:28:10Z"}, "message": "Merge #8534\n\n8534: Remove unneeded annotations from find_path tests r=jonas-schievink a=jonas-schievink\n\nAddresses https://github.com/rust-analyzer/rust-analyzer/pull/8532#discussion_r614247375\r\n\r\nbors r+\n\nCo-authored-by: Jonas Schievink <jonasschievink@gmail.com>", "tree": {"sha": "fb1fb2e12139242220e537e6ce5b2c50b521b67a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fb1fb2e12139242220e537e6ce5b2c50b521b67a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/427ba9d49bca1a3cab41e438c7a3c5755309f63d", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJgeHeqCRBK7hj4Ov3rIwAAdHIIAGjXN1OiWAPpGt1pxpQRpoeS\n9kkwbNS0QpJl5Mh1LZ9/nY2VLSYYocNIeQqyoVL/oDlbiXlzQ251DRKsxakGpVkM\nx+BXaV2iBaKulhKqxZn2a4g4ck4rVw+hWpBtTF2PSn7RRbdMyatWGNv5GG4+uxI+\nxnisgFAYaNS7pncfm4rwiw6TcDnoSc7tNmxaFUZcCxNRqye6PJff/GQoYKcgCJ5j\nk1t4h2N9jSPRwciE2L6qD8RROqcES5Sak0vAC2+UBERR7T++tWjwi5WL2+NX5hSW\n/RJGE2Yw1nCcHhmFr5kWdAw5qVO2fdc7LWPj2+mezgAJ2HtAcvbFj5tJ+rPYOU4=\n=UsN4\n-----END PGP SIGNATURE-----\n", "payload": "tree fb1fb2e12139242220e537e6ce5b2c50b521b67a\nparent 3af303600afdc4282dde3a1c8b6c0810662a3e63\nparent d073c3e56d55e59f2958f288778287367d5c57fd\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1618507690 +0000\ncommitter GitHub <noreply@github.com> 1618507690 +0000\n\nMerge #8534\n\n8534: Remove unneeded annotations from find_path tests r=jonas-schievink a=jonas-schievink\n\nAddresses https://github.com/rust-analyzer/rust-analyzer/pull/8532#discussion_r614247375\r\n\r\nbors r+\n\nCo-authored-by: Jonas Schievink <jonasschievink@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/427ba9d49bca1a3cab41e438c7a3c5755309f63d", "html_url": "https://github.com/rust-lang/rust/commit/427ba9d49bca1a3cab41e438c7a3c5755309f63d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/427ba9d49bca1a3cab41e438c7a3c5755309f63d/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3af303600afdc4282dde3a1c8b6c0810662a3e63", "url": "https://api.github.com/repos/rust-lang/rust/commits/3af303600afdc4282dde3a1c8b6c0810662a3e63", "html_url": "https://github.com/rust-lang/rust/commit/3af303600afdc4282dde3a1c8b6c0810662a3e63"}, {"sha": "d073c3e56d55e59f2958f288778287367d5c57fd", "url": "https://api.github.com/repos/rust-lang/rust/commits/d073c3e56d55e59f2958f288778287367d5c57fd", "html_url": "https://github.com/rust-lang/rust/commit/d073c3e56d55e59f2958f288778287367d5c57fd"}], "stats": {"total": 6, "additions": 0, "deletions": 6}, "files": [{"sha": "41da3bc2d42539e0cb44ac577bdad06799e6c5cf", "filename": "crates/hir_def/src/find_path.rs", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/427ba9d49bca1a3cab41e438c7a3c5755309f63d/crates%2Fhir_def%2Fsrc%2Ffind_path.rs", "raw_url": "https://github.com/rust-lang/rust/raw/427ba9d49bca1a3cab41e438c7a3c5755309f63d/crates%2Fhir_def%2Fsrc%2Ffind_path.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_def%2Fsrc%2Ffind_path.rs?ref=427ba9d49bca1a3cab41e438c7a3c5755309f63d", "patch": "@@ -427,7 +427,6 @@ mod tests {\n     fn same_module() {\n         check_found_path(\n             r#\"\n-//- /main.rs\n struct S;\n $0\n         \"#,\n@@ -442,7 +441,6 @@ $0\n     fn enum_variant() {\n         check_found_path(\n             r#\"\n-//- /main.rs\n enum E { A }\n $0\n         \"#,\n@@ -457,7 +455,6 @@ $0\n     fn sub_module() {\n         check_found_path(\n             r#\"\n-//- /main.rs\n mod foo {\n     pub struct S;\n }\n@@ -619,7 +616,6 @@ pub mod ast {\n     fn same_crate_reexport() {\n         check_found_path(\n             r#\"\n-//- /main.rs\n mod bar {\n     mod foo { pub(super) struct S; }\n     pub(crate) use foo::*;\n@@ -637,7 +633,6 @@ $0\n     fn same_crate_reexport_rename() {\n         check_found_path(\n             r#\"\n-//- /main.rs\n mod bar {\n     mod foo { pub(super) struct S; }\n     pub(crate) use foo::S as U;\n@@ -874,7 +869,6 @@ pub struct Arc;\n     #[test]\n     fn builtins_are_in_scope() {\n         let code = r#\"\n-//- /main.rs\n $0\n \n pub mod primitive {"}]}