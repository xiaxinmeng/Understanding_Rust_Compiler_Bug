{"sha": "a09ca681def98dcde966f5fe1f6c0af3bd8956ba", "node_id": "MDY6Q29tbWl0NzI0NzEyOmEwOWNhNjgxZGVmOThkY2RlOTY2ZjVmZTFmNmMwYWYzYmQ4OTU2YmE=", "commit": {"author": {"name": "rChaser53", "email": "tayoshizawa29@gmail.com", "date": "2019-08-28T11:50:02Z"}, "committer": {"name": "Seiichi Uchida", "email": "seuchida@gmail.com", "date": "2019-08-28T11:50:02Z"}, "message": "fix the bug  removing attrs (#3760)", "tree": {"sha": "a42f811d1048e63358637a7eedf10ee3406255ef", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a42f811d1048e63358637a7eedf10ee3406255ef"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a09ca681def98dcde966f5fe1f6c0af3bd8956ba", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a09ca681def98dcde966f5fe1f6c0af3bd8956ba", "html_url": "https://github.com/rust-lang/rust/commit/a09ca681def98dcde966f5fe1f6c0af3bd8956ba", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a09ca681def98dcde966f5fe1f6c0af3bd8956ba/comments", "author": {"login": "rchaser53", "id": 9676954, "node_id": "MDQ6VXNlcjk2NzY5NTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/9676954?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rchaser53", "html_url": "https://github.com/rchaser53", "followers_url": "https://api.github.com/users/rchaser53/followers", "following_url": "https://api.github.com/users/rchaser53/following{/other_user}", "gists_url": "https://api.github.com/users/rchaser53/gists{/gist_id}", "starred_url": "https://api.github.com/users/rchaser53/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rchaser53/subscriptions", "organizations_url": "https://api.github.com/users/rchaser53/orgs", "repos_url": "https://api.github.com/users/rchaser53/repos", "events_url": "https://api.github.com/users/rchaser53/events{/privacy}", "received_events_url": "https://api.github.com/users/rchaser53/received_events", "type": "User", "site_admin": false}, "committer": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ef00f74ce335e9f050c21a28126602454e78083e", "url": "https://api.github.com/repos/rust-lang/rust/commits/ef00f74ce335e9f050c21a28126602454e78083e", "html_url": "https://github.com/rust-lang/rust/commit/ef00f74ce335e9f050c21a28126602454e78083e"}], "stats": {"total": 84, "additions": 71, "deletions": 13}, "files": [{"sha": "a0493be0f1cb0905ceda28bf7221bd4bdfdbdf10", "filename": "src/patterns.rs", "status": "modified", "additions": 44, "deletions": 13, "changes": 57, "blob_url": "https://github.com/rust-lang/rust/blob/a09ca681def98dcde966f5fe1f6c0af3bd8956ba/src%2Fpatterns.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a09ca681def98dcde966f5fe1f6c0af3bd8956ba/src%2Fpatterns.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fpatterns.rs?ref=a09ca681def98dcde966f5fe1f6c0af3bd8956ba", "patch": "@@ -2,7 +2,7 @@ use syntax::ast::{self, BindingMode, FieldPat, Pat, PatKind, RangeEnd, RangeSynt\n use syntax::ptr;\n use syntax::source_map::{self, BytePos, Span};\n \n-use crate::comment::FindUncommented;\n+use crate::comment::{combine_strs_with_missing_comments, FindUncommented};\n use crate::config::lists::*;\n use crate::expr::{can_be_overflowed_expr, rewrite_unary_prefix, wrap_struct_field};\n use crate::lists::{\n@@ -179,7 +179,13 @@ fn rewrite_struct_pat(\n         fields.iter(),\n         terminator,\n         \",\",\n-        |f| f.span.lo(),\n+        |f| {\n+            if f.node.attrs.is_empty() {\n+                f.span.lo()\n+            } else {\n+                f.node.attrs.first().unwrap().span.lo()\n+            }\n+        },\n         |f| f.span.hi(),\n         |f| f.node.rewrite(context, v_shape),\n         context.snippet_provider.span_after(span, \"{\"),\n@@ -225,25 +231,50 @@ fn rewrite_struct_pat(\n \n impl Rewrite for FieldPat {\n     fn rewrite(&self, context: &RewriteContext<'_>, shape: Shape) -> Option<String> {\n-        let pat = self.pat.rewrite(context, shape);\n+        let hi_pos = if let Some(last) = self.attrs.last() {\n+            last.span.hi()\n+        } else {\n+            self.pat.span.lo()\n+        };\n+\n+        let attrs_str = if self.attrs.is_empty() {\n+            String::from(\"\")\n+        } else {\n+            self.attrs.rewrite(context, shape)?\n+        };\n+\n+        let pat_str = self.pat.rewrite(context, shape)?;\n         if self.is_shorthand {\n-            pat\n+            combine_strs_with_missing_comments(\n+                context,\n+                &attrs_str,\n+                &pat_str,\n+                mk_sp(hi_pos, self.pat.span.lo()),\n+                shape,\n+                false,\n+            )\n         } else {\n-            let pat_str = pat?;\n+            let nested_shape = shape.block_indent(context.config.tab_spaces());\n             let id_str = rewrite_ident(context, self.ident);\n             let one_line_width = id_str.len() + 2 + pat_str.len();\n-            if one_line_width <= shape.width {\n-                Some(format!(\"{}: {}\", id_str, pat_str))\n+            let pat_and_id_str = if one_line_width <= shape.width {\n+                format!(\"{}: {}\", id_str, pat_str)\n             } else {\n-                let nested_shape = shape.block_indent(context.config.tab_spaces());\n-                let pat_str = self.pat.rewrite(context, nested_shape)?;\n-                Some(format!(\n+                format!(\n                     \"{}:\\n{}{}\",\n                     id_str,\n                     nested_shape.indent.to_string(context.config),\n-                    pat_str,\n-                ))\n-            }\n+                    self.pat.rewrite(context, nested_shape)?\n+                )\n+            };\n+            combine_strs_with_missing_comments(\n+                context,\n+                &attrs_str,\n+                &pat_and_id_str,\n+                mk_sp(hi_pos, self.pat.span.lo()),\n+                nested_shape,\n+                false,\n+            )\n         }\n     }\n }"}, {"sha": "b53f5391a344573759f0263db5e33f14a47ce7dd", "filename": "tests/target/issue-3759.rs", "status": "added", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/a09ca681def98dcde966f5fe1f6c0af3bd8956ba/tests%2Ftarget%2Fissue-3759.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a09ca681def98dcde966f5fe1f6c0af3bd8956ba/tests%2Ftarget%2Fissue-3759.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fissue-3759.rs?ref=a09ca681def98dcde966f5fe1f6c0af3bd8956ba", "patch": "@@ -0,0 +1,27 @@\n+fn main() {\n+    let Test {\n+        #[cfg(feature = \"test\")]\n+        x,\n+    } = Test {\n+        #[cfg(feature = \"test\")]\n+        x: 1,\n+    };\n+\n+    let Test {\n+        #[cfg(feature = \"test\")]\n+        // comment\n+        x,\n+    } = Test {\n+        #[cfg(feature = \"test\")]\n+        x: 1,\n+    };\n+\n+    let Test {\n+        // comment\n+        #[cfg(feature = \"test\")]\n+        x,\n+    } = Test {\n+        #[cfg(feature = \"test\")]\n+        x: 1,\n+    };\n+}"}]}