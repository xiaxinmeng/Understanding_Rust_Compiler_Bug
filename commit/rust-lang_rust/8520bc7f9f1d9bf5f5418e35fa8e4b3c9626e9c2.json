{"sha": "8520bc7f9f1d9bf5f5418e35fa8e4b3c9626e9c2", "node_id": "C_kwDOAAsO6NoAKDg1MjBiYzdmOWYxZDliZjVmNTQxOGUzNWZhOGU0YjNjOTYyNmU5YzI", "commit": {"author": {"name": "antoyo", "email": "antoyo@users.noreply.github.com", "date": "2022-11-25T02:29:42Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-11-25T02:29:42Z"}, "message": "Merge pull request #174 from rust-lang/ci/ubuntu-libgccjit-12\n\nDownload libgccjit-12-dev package in the CI", "tree": {"sha": "cdf897a4cf7d1a0d3ca4427b4e7e02073c6772e6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/cdf897a4cf7d1a0d3ca4427b4e7e02073c6772e6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8520bc7f9f1d9bf5f5418e35fa8e4b3c9626e9c2", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJjgCiWCRBK7hj4Ov3rIwAAD5AIAIrg1ubLnYDuIeYriXxhz5In\ndAcll4PL3+lIFQrW4Czj2ZAzaWaAqEwTuwSvQgTMvB4D82pXUlKUYAF90kCGXzw2\nuNnPBqxhg9N+Sm7ZVyqnAYhtdn1IIi+Vj5lXr5yulOJ61TaP4Iw3bC/SoQE1XcVz\nuq7NKBiyrsyhbjJp/HM+8KNmke2nZ9s+eE5lFe88PEtBalMJY1kn5tkPWz5d9gWR\nBnWB0jDzodmyjalBxQu8MmpmRKWmZFU/OqUcYoWrHuUYHmrRcdF9CdnphuDSpDYl\n7CKxnH7aWiUubdH8nJlRu7D+Ivz6ubj28bl39nfR8L0DtQCsACFUdttHx6gut24=\n=fwd4\n-----END PGP SIGNATURE-----\n", "payload": "tree cdf897a4cf7d1a0d3ca4427b4e7e02073c6772e6\nparent 57b50df17e32ff3b147aa3d4239c35e1068935f1\nparent bbc0c2650842455eaca855b7082494c54eb0c411\nauthor antoyo <antoyo@users.noreply.github.com> 1669343382 -0500\ncommitter GitHub <noreply@github.com> 1669343382 -0500\n\nMerge pull request #174 from rust-lang/ci/ubuntu-libgccjit-12\n\nDownload libgccjit-12-dev package in the CI"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8520bc7f9f1d9bf5f5418e35fa8e4b3c9626e9c2", "html_url": "https://github.com/rust-lang/rust/commit/8520bc7f9f1d9bf5f5418e35fa8e4b3c9626e9c2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8520bc7f9f1d9bf5f5418e35fa8e4b3c9626e9c2/comments", "author": {"login": "antoyo", "id": 584972, "node_id": "MDQ6VXNlcjU4NDk3Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/584972?v=4", "gravatar_id": "", "url": "https://api.github.com/users/antoyo", "html_url": "https://github.com/antoyo", "followers_url": "https://api.github.com/users/antoyo/followers", "following_url": "https://api.github.com/users/antoyo/following{/other_user}", "gists_url": "https://api.github.com/users/antoyo/gists{/gist_id}", "starred_url": "https://api.github.com/users/antoyo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/antoyo/subscriptions", "organizations_url": "https://api.github.com/users/antoyo/orgs", "repos_url": "https://api.github.com/users/antoyo/repos", "events_url": "https://api.github.com/users/antoyo/events{/privacy}", "received_events_url": "https://api.github.com/users/antoyo/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "57b50df17e32ff3b147aa3d4239c35e1068935f1", "url": "https://api.github.com/repos/rust-lang/rust/commits/57b50df17e32ff3b147aa3d4239c35e1068935f1", "html_url": "https://github.com/rust-lang/rust/commit/57b50df17e32ff3b147aa3d4239c35e1068935f1"}, {"sha": "bbc0c2650842455eaca855b7082494c54eb0c411", "url": "https://api.github.com/repos/rust-lang/rust/commits/bbc0c2650842455eaca855b7082494c54eb0c411", "html_url": "https://github.com/rust-lang/rust/commit/bbc0c2650842455eaca855b7082494c54eb0c411"}], "stats": {"total": 16, "additions": 13, "deletions": 3}, "files": [{"sha": "2fd27654dc414bc87a967624d90be3bc75d76fbe", "filename": ".github/workflows/ci.yml", "status": "modified", "additions": 13, "deletions": 3, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/8520bc7f9f1d9bf5f5418e35fa8e4b3c9626e9c2/.github%2Fworkflows%2Fci.yml", "raw_url": "https://github.com/rust-lang/rust/raw/8520bc7f9f1d9bf5f5418e35fa8e4b3c9626e9c2/.github%2Fworkflows%2Fci.yml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/.github%2Fworkflows%2Fci.yml?ref=8520bc7f9f1d9bf5f5418e35fa8e4b3c9626e9c2", "patch": "@@ -13,7 +13,7 @@ env:\n \n jobs:\n   build:\n-    runs-on: ubuntu-20.04\n+    runs-on: ubuntu-22.04\n \n     strategy:\n       fail-fast: false\n@@ -45,10 +45,15 @@ jobs:\n         path: llvm\n \n     - name: Install packages\n-      # `llvm-10-tools` is needed to install the `FileCheck` binary which is used for asm tests.\n-      run: sudo apt-get install ninja-build ripgrep llvm-10-tools\n+      # `llvm-14-tools` is needed to install the `FileCheck` binary which is used for asm tests.\n+      run: sudo apt-get install ninja-build ripgrep llvm-14-tools\n+\n+    - name: Install libgccjit12\n+      if: matrix.libgccjit_version.gcc == 'libgccjit12.so'\n+      run: sudo apt-get install libgccjit-12-dev\n \n     - name: Download artifact\n+      if: matrix.libgccjit_version.gcc != 'libgccjit12.so'\n       uses: dawidd6/action-download-artifact@v2\n       with:\n           workflow: main.yml\n@@ -60,6 +65,11 @@ jobs:\n           search_artifacts: true # Because, instead, the action only check the last job ran and that won't work since we want multiple artifacts.\n \n     - name: Setup path to libgccjit\n+      if: matrix.libgccjit_version.gcc == 'libgccjit12.so'\n+      run: echo /usr/lib/gcc/x86_64-linux-gnu/12 > gcc_path\n+\n+    - name: Setup path to libgccjit\n+      if: matrix.libgccjit_version.gcc != 'libgccjit12.so'\n       run: |\n           echo $(readlink -f gcc-build) > gcc_path\n           # NOTE: the filename is still libgccjit.so even when the artifact name is different."}]}