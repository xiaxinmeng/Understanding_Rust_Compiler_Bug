{"sha": "c89638ae555934113d3ff73c8648ead09410b592", "node_id": "MDY6Q29tbWl0NzI0NzEyOmM4OTYzOGFlNTU1OTM0MTEzZDNmZjczYzg2NDhlYWQwOTQxMGI1OTI=", "commit": {"author": {"name": "Caleb Cartwright", "email": "caleb.cartwright@outlook.com", "date": "2020-10-20T01:26:36Z"}, "committer": {"name": "Caleb Cartwright", "email": "calebcartwright@users.noreply.github.com", "date": "2020-10-24T16:13:00Z"}, "message": "deps: update macro parsing", "tree": {"sha": "3e3eafa35613a2017d8e44290cc43e47ae83363e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3e3eafa35613a2017d8e44290cc43e47ae83363e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c89638ae555934113d3ff73c8648ead09410b592", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c89638ae555934113d3ff73c8648ead09410b592", "html_url": "https://github.com/rust-lang/rust/commit/c89638ae555934113d3ff73c8648ead09410b592", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c89638ae555934113d3ff73c8648ead09410b592/comments", "author": {"login": "calebcartwright", "id": 13042488, "node_id": "MDQ6VXNlcjEzMDQyNDg4", "avatar_url": "https://avatars.githubusercontent.com/u/13042488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/calebcartwright", "html_url": "https://github.com/calebcartwright", "followers_url": "https://api.github.com/users/calebcartwright/followers", "following_url": "https://api.github.com/users/calebcartwright/following{/other_user}", "gists_url": "https://api.github.com/users/calebcartwright/gists{/gist_id}", "starred_url": "https://api.github.com/users/calebcartwright/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/calebcartwright/subscriptions", "organizations_url": "https://api.github.com/users/calebcartwright/orgs", "repos_url": "https://api.github.com/users/calebcartwright/repos", "events_url": "https://api.github.com/users/calebcartwright/events{/privacy}", "received_events_url": "https://api.github.com/users/calebcartwright/received_events", "type": "User", "site_admin": false}, "committer": {"login": "calebcartwright", "id": 13042488, "node_id": "MDQ6VXNlcjEzMDQyNDg4", "avatar_url": "https://avatars.githubusercontent.com/u/13042488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/calebcartwright", "html_url": "https://github.com/calebcartwright", "followers_url": "https://api.github.com/users/calebcartwright/followers", "following_url": "https://api.github.com/users/calebcartwright/following{/other_user}", "gists_url": "https://api.github.com/users/calebcartwright/gists{/gist_id}", "starred_url": "https://api.github.com/users/calebcartwright/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/calebcartwright/subscriptions", "organizations_url": "https://api.github.com/users/calebcartwright/orgs", "repos_url": "https://api.github.com/users/calebcartwright/repos", "events_url": "https://api.github.com/users/calebcartwright/events{/privacy}", "received_events_url": "https://api.github.com/users/calebcartwright/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d95a2875f7cc9aa5ee2ae754389841e366480112", "url": "https://api.github.com/repos/rust-lang/rust/commits/d95a2875f7cc9aa5ee2ae754389841e366480112", "html_url": "https://github.com/rust-lang/rust/commit/d95a2875f7cc9aa5ee2ae754389841e366480112"}], "stats": {"total": 17, "additions": 13, "deletions": 4}, "files": [{"sha": "62cc5f9dcc50b22c4a9d419bc9c299b15ac53184", "filename": "src/macros.rs", "status": "modified", "additions": 13, "deletions": 4, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/c89638ae555934113d3ff73c8648ead09410b592/src%2Fmacros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c89638ae555934113d3ff73c8648ead09410b592/src%2Fmacros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fmacros.rs?ref=c89638ae555934113d3ff73c8648ead09410b592", "patch": "@@ -16,7 +16,8 @@ use rustc_ast::token::{BinOpToken, DelimToken, Token, TokenKind};\n use rustc_ast::tokenstream::{Cursor, TokenStream, TokenTree};\n use rustc_ast::{ast, ptr};\n use rustc_ast_pretty::pprust;\n-use rustc_parse::{new_parser_from_tts, parser::Parser};\n+use rustc_parse::parser::Parser;\n+use rustc_parse::{stream_to_parser, MACRO_ARGUMENTS};\n use rustc_span::{\n     symbol::{self, kw},\n     BytePos, Span, Symbol, DUMMY_SP,\n@@ -89,6 +90,14 @@ impl Rewrite for MacroArg {\n     }\n }\n \n+fn build_parser<'a>(context: &RewriteContext<'a>, cursor: Cursor) -> Parser<'a> {\n+    stream_to_parser(\n+        context.parse_sess.inner(),\n+        cursor.collect(),\n+        MACRO_ARGUMENTS,\n+    )\n+}\n+\n fn parse_macro_arg<'a, 'b: 'a>(parser: &'a mut Parser<'b>) -> Option<MacroArg> {\n     macro_rules! parse_macro_arg {\n         ($macro_arg:ident, $parser:expr, $f:expr) => {\n@@ -290,7 +299,7 @@ fn rewrite_macro_inner(\n         }\n     }\n \n-    let mut parser = new_parser_from_tts(context.parse_sess.inner(), ts.trees().collect());\n+    let mut parser = build_parser(context, ts.trees());\n     let mut arg_vec = Vec::new();\n     let mut vec_with_semi = false;\n     let mut trailing_comma = false;\n@@ -1196,7 +1205,7 @@ pub(crate) fn convert_try_mac(\n     let path = &pprust::path_to_string(&mac.path);\n     if path == \"try\" || path == \"r#try\" {\n         let ts = mac.args.inner_tokens();\n-        let mut parser = new_parser_from_tts(context.parse_sess.inner(), ts.trees().collect());\n+        let mut parser = build_parser(context, ts.trees());\n \n         Some(ast::Expr {\n             id: ast::NodeId::root(), // dummy value\n@@ -1429,7 +1438,7 @@ fn format_lazy_static(\n     ts: &TokenStream,\n ) -> Option<String> {\n     let mut result = String::with_capacity(1024);\n-    let mut parser = new_parser_from_tts(context.parse_sess.inner(), ts.trees().collect());\n+    let mut parser = build_parser(context, ts.trees());\n     let nested_shape = shape\n         .block_indent(context.config.tab_spaces())\n         .with_max_width(context.config);"}]}