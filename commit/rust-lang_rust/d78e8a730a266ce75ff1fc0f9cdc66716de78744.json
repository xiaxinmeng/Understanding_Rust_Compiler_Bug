{"sha": "d78e8a730a266ce75ff1fc0f9cdc66716de78744", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQ3OGU4YTczMGEyNjZjZTc1ZmYxZmMwZjljZGM2NjcxNmRlNzg3NDQ=", "commit": {"author": {"name": "David Wood", "email": "david@davidtw.co", "date": "2017-12-09T11:45:15Z"}, "committer": {"name": "David Wood", "email": "david@davidtw.co", "date": "2017-12-11T20:14:06Z"}, "message": "Fix error message confuses locals and temporaries", "tree": {"sha": "b4c4a33c9148d80f455e8a26d8f2d41cf68460d0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b4c4a33c9148d80f455e8a26d8f2d41cf68460d0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d78e8a730a266ce75ff1fc0f9cdc66716de78744", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIcBAABCgAGBQJaLucPAAoJEAF2C0+fU/FUzMoQAIUZh5nV1kvBo8Xrd9I/qC34\nqUS1mYscrtJkYdj69BmzoEiwEXeChcoRwowozqt2kqbCNvdCvyS7dWt+vMcI7sbd\nXXZ0cF76gQYaMOkCf9+fT37vokib3BO6QQmQYEYcTjxpLW8uApypNRybjyh0aozO\nZ6wHjbt0MdGEd35fy67oScfO8iPh7RusX3k19tHXHQSzv7+dOUL2m2fzf7cxax9H\nNdeet7iq+aVtqKvqn0inbZrkneNtdabzj7q1FiIGEVRLI0KpespKwLsglSLYFn2u\n7a6OYDu1H3/CCctw0hOtNe/L9/4iLUbcQpT19rqMi3YLDXbIZAoNW4UqHdVw7qYt\n+HlOdxfIOG46D+/IHCekKKfxvQ9/6BJ3HcjCPeJtPzyQ3oRZ+7PVDEi7lKhrKKIi\nEJmYZ28+pycvHBcF4OQaAQUmtzaTYOM/15J0E7cGy8TsVBC3M5QwFFRRYndtwIYQ\nclDSDDt+zGGFUcvLeEUudXtYFB7KoY6LbsVES5C2b+m+LtNTsxKUGLT/4LDvVfvR\n6UzJ8yfHy28XyDie7a711yfPBIbrMltDQT+3ugLjwKtU11Ri+XR1tCy3gr0AhRUS\n1SxWXc2DGFlKnbh9mkb3hw5k060NZO9unP4F8T5u+DfluKuzh83VRL/1hla+5/a+\npmt0SuLpMHCoguIH85Qm\n=iUC6\n-----END PGP SIGNATURE-----", "payload": "tree b4c4a33c9148d80f455e8a26d8f2d41cf68460d0\nparent 4651d1e3cf784d19c0c9e5f79b5f0b83a31a7ce9\nauthor David Wood <david@davidtw.co> 1512819915 +0000\ncommitter David Wood <david@davidtw.co> 1513023246 +0000\n\nFix error message confuses locals and temporaries\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d78e8a730a266ce75ff1fc0f9cdc66716de78744", "html_url": "https://github.com/rust-lang/rust/commit/d78e8a730a266ce75ff1fc0f9cdc66716de78744", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d78e8a730a266ce75ff1fc0f9cdc66716de78744/comments", "author": {"login": "davidtwco", "id": 1295100, "node_id": "MDQ6VXNlcjEyOTUxMDA=", "avatar_url": "https://avatars.githubusercontent.com/u/1295100?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidtwco", "html_url": "https://github.com/davidtwco", "followers_url": "https://api.github.com/users/davidtwco/followers", "following_url": "https://api.github.com/users/davidtwco/following{/other_user}", "gists_url": "https://api.github.com/users/davidtwco/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidtwco/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidtwco/subscriptions", "organizations_url": "https://api.github.com/users/davidtwco/orgs", "repos_url": "https://api.github.com/users/davidtwco/repos", "events_url": "https://api.github.com/users/davidtwco/events{/privacy}", "received_events_url": "https://api.github.com/users/davidtwco/received_events", "type": "User", "site_admin": false}, "committer": {"login": "davidtwco", "id": 1295100, "node_id": "MDQ6VXNlcjEyOTUxMDA=", "avatar_url": "https://avatars.githubusercontent.com/u/1295100?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidtwco", "html_url": "https://github.com/davidtwco", "followers_url": "https://api.github.com/users/davidtwco/followers", "following_url": "https://api.github.com/users/davidtwco/following{/other_user}", "gists_url": "https://api.github.com/users/davidtwco/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidtwco/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidtwco/subscriptions", "organizations_url": "https://api.github.com/users/davidtwco/orgs", "repos_url": "https://api.github.com/users/davidtwco/repos", "events_url": "https://api.github.com/users/davidtwco/events{/privacy}", "received_events_url": "https://api.github.com/users/davidtwco/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4651d1e3cf784d19c0c9e5f79b5f0b83a31a7ce9", "url": "https://api.github.com/repos/rust-lang/rust/commits/4651d1e3cf784d19c0c9e5f79b5f0b83a31a7ce9", "html_url": "https://github.com/rust-lang/rust/commit/4651d1e3cf784d19c0c9e5f79b5f0b83a31a7ce9"}], "stats": {"total": 32, "additions": 22, "deletions": 10}, "files": [{"sha": "12f7f8cd8f8bb796767e54600b14b2f83887aeac", "filename": "src/librustc_mir/borrow_check/error_reporting.rs", "status": "modified", "additions": 22, "deletions": 9, "changes": 31, "blob_url": "https://github.com/rust-lang/rust/blob/d78e8a730a266ce75ff1fc0f9cdc66716de78744/src%2Flibrustc_mir%2Fborrow_check%2Ferror_reporting.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d78e8a730a266ce75ff1fc0f9cdc66716de78744/src%2Flibrustc_mir%2Fborrow_check%2Ferror_reporting.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check%2Ferror_reporting.rs?ref=d78e8a730a266ce75ff1fc0f9cdc66716de78744", "patch": "@@ -347,22 +347,35 @@ impl<'cx, 'gcx, 'tcx> MirBorrowckCtxt<'cx, 'gcx, 'tcx> {\n                 unreachable!(\"root_place is an unreachable???\")\n         };\n \n+        let borrow_span = self.mir.source_info(borrow.location).span;\n         let proper_span = match *root_place {\n             Place::Local(local) => self.mir.local_decls[local].source_info.span,\n             _ => drop_span,\n         };\n \n-        let mut err = self.tcx\n-            .path_does_not_live_long_enough(drop_span, \"borrowed value\", Origin::Mir);\n-        err.span_label(proper_span, \"temporary value created here\");\n-        err.span_label(drop_span, \"temporary value dropped here while still borrowed\");\n-        err.note(\"consider using a `let` binding to increase its lifetime\");\n+        match &self.describe_place(&borrow.place) {\n+            Some(description) => {\n+                let mut err = self.tcx.path_does_not_live_long_enough(\n+                    borrow_span, &format!(\"`{}`\", description), Origin::Mir);\n+                err.span_label(borrow_span, \"does not live long enough\");\n+                err.span_label(drop_span, \"borrowed value only lives until here\");\n+                err.note(\"borrowed value must be valid for the static lifetime...\");\n+                err.emit();\n+            },\n+            None => {\n+                let mut err = self.tcx\n+                    .path_does_not_live_long_enough(drop_span, \"borrowed value\", Origin::Mir);\n+                err.span_label(proper_span, \"temporary value created here\");\n+                err.span_label(drop_span, \"temporary value dropped here while still borrowed\");\n+                err.note(\"consider using a `let` binding to increase its lifetime\");\n+\n+                if let Some(end) = end_span {\n+                    err.span_label(end, \"temporary value needs to live until here\");\n+                }\n \n-        if let Some(end) = end_span {\n-            err.span_label(end, \"temporary value needs to live until here\");\n+                err.emit();\n+            },\n         }\n-\n-        err.emit();\n     }\n \n     pub(super) fn report_illegal_mutation_of_borrowed("}, {"sha": "128052e58949dda1ae2758126a53160d01f01089", "filename": "src/librustc_mir/borrow_check/mod.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d78e8a730a266ce75ff1fc0f9cdc66716de78744/src%2Flibrustc_mir%2Fborrow_check%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d78e8a730a266ce75ff1fc0f9cdc66716de78744/src%2Flibrustc_mir%2Fborrow_check%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check%2Fmod.rs?ref=d78e8a730a266ce75ff1fc0f9cdc66716de78744", "patch": "@@ -1800,7 +1800,6 @@ impl<'cx, 'gcx, 'tcx> MirBorrowckCtxt<'cx, 'gcx, 'tcx> {\n     }\n }\n \n-\n impl<'cx, 'gcx, 'tcx> MirBorrowckCtxt<'cx, 'gcx, 'tcx> {\n     // FIXME (#16118): function intended to allow the borrow checker\n     // to be less precise in its handling of Box while still allowing"}]}