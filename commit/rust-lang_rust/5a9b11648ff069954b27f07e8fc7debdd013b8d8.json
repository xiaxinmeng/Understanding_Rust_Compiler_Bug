{"sha": "5a9b11648ff069954b27f07e8fc7debdd013b8d8", "node_id": "C_kwDOAAsO6NoAKDVhOWIxMTY0OGZmMDY5OTU0YjI3ZjA3ZThmYzdkZWJkZDAxM2I4ZDg", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2022-08-21T14:54:07Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-08-21T14:54:07Z"}, "message": "Rollup merge of #100822 - WaffleLapkin:no_offset_question_mark, r=scottmcm\n\nReplace most uses of `pointer::offset` with `add` and `sub`\n\nAs PR title says, it replaces `pointer::offset` in compiler and standard library with `pointer::add` and `pointer::sub`. This generally makes code cleaner, easier to grasp and removes (or, well, hides) integer casts.\n\nThis is generally trivially correct, `.offset(-constant)` is just `.sub(constant)`, `.offset(usized as isize)` is just `.add(usized)`, etc. However in some cases we need to be careful with signs of things.\n\nr? ````@scottmcm````\n\n_split off from #100746_", "tree": {"sha": "f11b604569225f497c41bbf60500e7c987a2a587", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f11b604569225f497c41bbf60500e7c987a2a587"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5a9b11648ff069954b27f07e8fc7debdd013b8d8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5a9b11648ff069954b27f07e8fc7debdd013b8d8", "html_url": "https://github.com/rust-lang/rust/commit/5a9b11648ff069954b27f07e8fc7debdd013b8d8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5a9b11648ff069954b27f07e8fc7debdd013b8d8/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ee65a1018f54669b17c97bad979edfea1accafbf", "url": "https://api.github.com/repos/rust-lang/rust/commits/ee65a1018f54669b17c97bad979edfea1accafbf", "html_url": "https://github.com/rust-lang/rust/commit/ee65a1018f54669b17c97bad979edfea1accafbf"}, {"sha": "bd1ab724064f2bcc59ddc6157d6cae9ca344939b", "url": "https://api.github.com/repos/rust-lang/rust/commits/bd1ab724064f2bcc59ddc6157d6cae9ca344939b", "html_url": "https://github.com/rust-lang/rust/commit/bd1ab724064f2bcc59ddc6157d6cae9ca344939b"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "50261c193973932d85be96140e1359129e8e6641", "filename": "example/alloc_system.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5a9b11648ff069954b27f07e8fc7debdd013b8d8/example%2Falloc_system.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5a9b11648ff069954b27f07e8fc7debdd013b8d8/example%2Falloc_system.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/example%2Falloc_system.rs?ref=5a9b11648ff069954b27f07e8fc7debdd013b8d8", "patch": "@@ -94,7 +94,7 @@ mod platform {\n     struct Header(*mut u8);\n     const HEAP_ZERO_MEMORY: DWORD = 0x00000008;\n     unsafe fn get_header<'a>(ptr: *mut u8) -> &'a mut Header {\n-        &mut *(ptr as *mut Header).offset(-1)\n+        &mut *(ptr as *mut Header).sub(1)\n     }\n     unsafe fn align_ptr(ptr: *mut u8, align: usize) -> *mut u8 {\n         let aligned = ptr.add(align - (ptr as usize & (align - 1)));"}]}