{"sha": "418fbc8662d4a70e5081cc422b4bc8ded4b923d8", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQxOGZiYzg2NjJkNGE3MGU1MDgxY2M0MjJiNGJjOGRlZDRiOTIzZDg=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-10-24T06:52:32Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-10-24T06:56:30Z"}, "message": "don't die if a sync task panics", "tree": {"sha": "e14e06b23baba917d8ea8a2d9de56affb52120aa", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e14e06b23baba917d8ea8a2d9de56affb52120aa"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/418fbc8662d4a70e5081cc422b4bc8ded4b923d8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/418fbc8662d4a70e5081cc422b4bc8ded4b923d8", "html_url": "https://github.com/rust-lang/rust/commit/418fbc8662d4a70e5081cc422b4bc8ded4b923d8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/418fbc8662d4a70e5081cc422b4bc8ded4b923d8/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "31d84bce3c2ae8bf2a8b3dfaf831bd78f99e0d67", "url": "https://api.github.com/repos/rust-lang/rust/commits/31d84bce3c2ae8bf2a8b3dfaf831bd78f99e0d67", "html_url": "https://github.com/rust-lang/rust/commit/31d84bce3c2ae8bf2a8b3dfaf831bd78f99e0d67"}], "stats": {"total": 16, "additions": 10, "deletions": 6}, "files": [{"sha": "1a87706fee3f981df601cdd141e8a7c349ea8102", "filename": "crates/ra_lsp_server/src/main_loop.rs", "status": "modified", "additions": 10, "deletions": 6, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/418fbc8662d4a70e5081cc422b4bc8ded4b923d8/crates%2Fra_lsp_server%2Fsrc%2Fmain_loop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/418fbc8662d4a70e5081cc422b4bc8ded4b923d8/crates%2Fra_lsp_server%2Fsrc%2Fmain_loop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_lsp_server%2Fsrc%2Fmain_loop.rs?ref=418fbc8662d4a70e5081cc422b4bc8ded4b923d8", "patch": "@@ -4,7 +4,7 @@ mod handlers;\n mod subscriptions;\n pub(crate) mod pending_requests;\n \n-use std::{error::Error, fmt, path::PathBuf, sync::Arc, time::Instant};\n+use std::{error::Error, fmt, panic, path::PathBuf, sync::Arc, time::Instant};\n \n use crossbeam_channel::{select, unbounded, RecvError, Sender};\n use lsp_server::{Connection, ErrorCode, Message, Notification, Request, RequestId, Response};\n@@ -565,7 +565,7 @@ impl<'a> PoolDispatcher<'a> {\n     ) -> Result<&mut Self>\n     where\n         R: req::Request + 'static,\n-        R::Params: DeserializeOwned + Send + 'static,\n+        R::Params: DeserializeOwned + panic::UnwindSafe + 'static,\n         R::Result: Serialize + 'static,\n     {\n         let (id, params) = match self.parse::<R>() {\n@@ -574,8 +574,12 @@ impl<'a> PoolDispatcher<'a> {\n                 return Ok(self);\n             }\n         };\n-        let result = f(self.world, params);\n-        let task = result_to_task::<R>(id, result);\n+        let world = panic::AssertUnwindSafe(&mut *self.world);\n+        let task = panic::catch_unwind(move || {\n+            let result = f(world.0, params);\n+            result_to_task::<R>(id, result)\n+        })\n+        .map_err(|_| format!(\"sync task {:?} panicked\", R::METHOD))?;\n         on_task(task, self.msg_sender, self.pending_requests, self.world);\n         Ok(self)\n     }\n@@ -610,7 +614,7 @@ impl<'a> PoolDispatcher<'a> {\n     fn parse<R>(&mut self) -> Option<(RequestId, R::Params)>\n     where\n         R: req::Request + 'static,\n-        R::Params: DeserializeOwned + Send + 'static,\n+        R::Params: DeserializeOwned + 'static,\n     {\n         let req = self.req.take()?;\n         let (id, params) = match req.extract::<R::Params>(R::METHOD) {\n@@ -647,7 +651,7 @@ impl<'a> PoolDispatcher<'a> {\n fn result_to_task<R>(id: RequestId, result: Result<R::Result>) -> Task\n where\n     R: req::Request + 'static,\n-    R::Params: DeserializeOwned + Send + 'static,\n+    R::Params: DeserializeOwned + 'static,\n     R::Result: Serialize + 'static,\n {\n     let response = match result {"}]}