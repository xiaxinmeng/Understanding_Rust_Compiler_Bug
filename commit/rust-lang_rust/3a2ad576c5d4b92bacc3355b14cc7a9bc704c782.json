{"sha": "3a2ad576c5d4b92bacc3355b14cc7a9bc704c782", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNhMmFkNTc2YzVkNGI5MmJhY2MzMzU1YjE0Y2M3YTliYzcwNGM3ODI=", "commit": {"author": {"name": "Vadim Petrochenkov", "email": "vadim.petrochenkov@gmail.com", "date": "2017-12-10T21:12:25Z"}, "committer": {"name": "Vadim Petrochenkov", "email": "vadim.petrochenkov@gmail.com", "date": "2017-12-14T20:23:07Z"}, "message": "Remove NOTE/HELP annotations from error index tests", "tree": {"sha": "dac6a4a0c79b719c35c03c4f2cfdf60b504d42ef", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/dac6a4a0c79b719c35c03c4f2cfdf60b504d42ef"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3a2ad576c5d4b92bacc3355b14cc7a9bc704c782", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3a2ad576c5d4b92bacc3355b14cc7a9bc704c782", "html_url": "https://github.com/rust-lang/rust/commit/3a2ad576c5d4b92bacc3355b14cc7a9bc704c782", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3a2ad576c5d4b92bacc3355b14cc7a9bc704c782/comments", "author": {"login": "petrochenkov", "id": 5751617, "node_id": "MDQ6VXNlcjU3NTE2MTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5751617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrochenkov", "html_url": "https://github.com/petrochenkov", "followers_url": "https://api.github.com/users/petrochenkov/followers", "following_url": "https://api.github.com/users/petrochenkov/following{/other_user}", "gists_url": "https://api.github.com/users/petrochenkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrochenkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrochenkov/subscriptions", "organizations_url": "https://api.github.com/users/petrochenkov/orgs", "repos_url": "https://api.github.com/users/petrochenkov/repos", "events_url": "https://api.github.com/users/petrochenkov/events{/privacy}", "received_events_url": "https://api.github.com/users/petrochenkov/received_events", "type": "User", "site_admin": false}, "committer": {"login": "petrochenkov", "id": 5751617, "node_id": "MDQ6VXNlcjU3NTE2MTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5751617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrochenkov", "html_url": "https://github.com/petrochenkov", "followers_url": "https://api.github.com/users/petrochenkov/followers", "following_url": "https://api.github.com/users/petrochenkov/following{/other_user}", "gists_url": "https://api.github.com/users/petrochenkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrochenkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrochenkov/subscriptions", "organizations_url": "https://api.github.com/users/petrochenkov/orgs", "repos_url": "https://api.github.com/users/petrochenkov/repos", "events_url": "https://api.github.com/users/petrochenkov/events{/privacy}", "received_events_url": "https://api.github.com/users/petrochenkov/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2974104276265858d74733d7ebcca1d3347fd34e", "url": "https://api.github.com/repos/rust-lang/rust/commits/2974104276265858d74733d7ebcca1d3347fd34e", "html_url": "https://github.com/rust-lang/rust/commit/2974104276265858d74733d7ebcca1d3347fd34e"}], "stats": {"total": 238, "additions": 22, "deletions": 216}, "files": [{"sha": "0405bba81b585d81a7a2d0ac63c3827210b46964", "filename": "src/test/compile-fail/E0005.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/3a2ad576c5d4b92bacc3355b14cc7a9bc704c782/src%2Ftest%2Fcompile-fail%2FE0005.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3a2ad576c5d4b92bacc3355b14cc7a9bc704c782/src%2Ftest%2Fcompile-fail%2FE0005.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2FE0005.rs?ref=3a2ad576c5d4b92bacc3355b14cc7a9bc704c782", "patch": "@@ -11,5 +11,4 @@\n fn main() {\n     let x = Some(1);\n     let Some(y) = x; //~ ERROR E0005\n-    //~| NOTE pattern `None` not covered\n }"}, {"sha": "d5acbdebbe9b9276564c49088b2b1e82eadac96b", "filename": "src/test/compile-fail/E0007.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3a2ad576c5d4b92bacc3355b14cc7a9bc704c782/src%2Ftest%2Fcompile-fail%2FE0007.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3a2ad576c5d4b92bacc3355b14cc7a9bc704c782/src%2Ftest%2Fcompile-fail%2FE0007.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2FE0007.rs?ref=3a2ad576c5d4b92bacc3355b14cc7a9bc704c782", "patch": "@@ -13,9 +13,7 @@ fn main() {\n     match x {\n         op_string @ Some(s) => {},\n         //~^ ERROR E0007\n-        //~| NOTE binds an already bound by-move value by moving it\n         //~| ERROR E0303\n-        //~| NOTE not allowed after `@`\n         None => {},\n     }\n }"}, {"sha": "ba5720e6f0abdd998c5b8e341d7ac1c8c7dcd133", "filename": "src/test/compile-fail/E0008.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/3a2ad576c5d4b92bacc3355b14cc7a9bc704c782/src%2Ftest%2Fcompile-fail%2FE0008.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3a2ad576c5d4b92bacc3355b14cc7a9bc704c782/src%2Ftest%2Fcompile-fail%2FE0008.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2FE0008.rs?ref=3a2ad576c5d4b92bacc3355b14cc7a9bc704c782", "patch": "@@ -12,7 +12,6 @@ fn main() {\n     match Some(\"hi\".to_string()) {\n         Some(s) if s.len() == 0 => {},\n         //~^ ERROR E0008\n-        //~| NOTE moves value into pattern guard\n         _ => {},\n     }\n }"}, {"sha": "02e2e80e7eab151d5ef7c04bb6b07ce7d2c348ad", "filename": "src/test/compile-fail/E0009.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3a2ad576c5d4b92bacc3355b14cc7a9bc704c782/src%2Ftest%2Fcompile-fail%2FE0009.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3a2ad576c5d4b92bacc3355b14cc7a9bc704c782/src%2Ftest%2Fcompile-fail%2FE0009.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2FE0009.rs?ref=3a2ad576c5d4b92bacc3355b14cc7a9bc704c782", "patch": "@@ -14,8 +14,6 @@ fn main() {\n     match x {\n         Some((y, ref z)) => {},\n         //~^ ERROR E0009\n-        //~| NOTE by-move pattern here\n-        //~| NOTE both by-ref and by-move used\n         None => panic!()\n     }\n }"}, {"sha": "66a9319a7df4345c03a622818760910fb8adc696", "filename": "src/test/compile-fail/E0010.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/3a2ad576c5d4b92bacc3355b14cc7a9bc704c782/src%2Ftest%2Fcompile-fail%2FE0010.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3a2ad576c5d4b92bacc3355b14cc7a9bc704c782/src%2Ftest%2Fcompile-fail%2FE0010.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2FE0010.rs?ref=3a2ad576c5d4b92bacc3355b14cc7a9bc704c782", "patch": "@@ -12,6 +12,5 @@\n #![allow(warnings)]\n \n const CON : Box<i32> = box 0; //~ ERROR E0010\n-                              //~| NOTE allocation not allowed in\n \n fn main() {}"}, {"sha": "c98c35a1442add7ec66fd110eeef3d6da2fbf593", "filename": "src/test/compile-fail/E0017.rs", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/3a2ad576c5d4b92bacc3355b14cc7a9bc704c782/src%2Ftest%2Fcompile-fail%2FE0017.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3a2ad576c5d4b92bacc3355b14cc7a9bc704c782/src%2Ftest%2Fcompile-fail%2FE0017.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2FE0017.rs?ref=3a2ad576c5d4b92bacc3355b14cc7a9bc704c782", "patch": "@@ -12,10 +12,7 @@ static X: i32 = 1;\n const C: i32 = 2;\n \n const CR: &'static mut i32 = &mut C; //~ ERROR E0017\n-                                     //~| NOTE constants require immutable values\n static STATIC_REF: &'static mut i32 = &mut X; //~ ERROR E0017\n-                                              //~| NOTE statics require immutable values\n                                               //~| ERROR cannot borrow\n static CONST_REF: &'static mut i32 = &mut C; //~ ERROR E0017\n-                                             //~| NOTE statics require immutable values\n fn main() {}"}, {"sha": "24032c59844dcf491881384a510ad52b193e6ee7", "filename": "src/test/compile-fail/E0023.rs", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/3a2ad576c5d4b92bacc3355b14cc7a9bc704c782/src%2Ftest%2Fcompile-fail%2FE0023.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3a2ad576c5d4b92bacc3355b14cc7a9bc704c782/src%2Ftest%2Fcompile-fail%2FE0023.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2FE0023.rs?ref=3a2ad576c5d4b92bacc3355b14cc7a9bc704c782", "patch": "@@ -18,10 +18,7 @@ fn main() {\n     let x = Fruit::Apple(String::new(), String::new());\n     match x {\n         Fruit::Apple(a) => {}, //~ ERROR E0023\n-                               //~| NOTE expected 2 fields, found 1\n         Fruit::Apple(a, b, c) => {}, //~ ERROR E0023\n-                                     //~| NOTE expected 2 fields, found 3\n         Fruit::Pear(1, 2) => {}, //~ ERROR E0023\n-                                 //~| NOTE expected 1 field, found 2\n     }\n }"}, {"sha": "81d0ea8a5e21d1f5e16c68a49c2ee2daf68d5a17", "filename": "src/test/compile-fail/E0025.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3a2ad576c5d4b92bacc3355b14cc7a9bc704c782/src%2Ftest%2Fcompile-fail%2FE0025.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3a2ad576c5d4b92bacc3355b14cc7a9bc704c782/src%2Ftest%2Fcompile-fail%2FE0025.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2FE0025.rs?ref=3a2ad576c5d4b92bacc3355b14cc7a9bc704c782", "patch": "@@ -17,6 +17,4 @@ fn main() {\n     let x = Foo { a:1, b:2 };\n     let Foo { a: x, a: y, b: 0 } = x;\n     //~^ ERROR field `a` bound multiple times in the pattern\n-    //~| NOTE multiple uses of `a` in pattern\n-    //~| NOTE first use of `a`\n }"}, {"sha": "f8ad7b5a30e1c0f88ff23aa46a30309e0f2bef2b", "filename": "src/test/compile-fail/E0026.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/3a2ad576c5d4b92bacc3355b14cc7a9bc704c782/src%2Ftest%2Fcompile-fail%2FE0026.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3a2ad576c5d4b92bacc3355b14cc7a9bc704c782/src%2Ftest%2Fcompile-fail%2FE0026.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2FE0026.rs?ref=3a2ad576c5d4b92bacc3355b14cc7a9bc704c782", "patch": "@@ -18,6 +18,5 @@ fn main() {\n     match thing {\n         Thing { x, y, z } => {}\n         //~^ ERROR struct `Thing` does not have a field named `z` [E0026]\n-        //~| NOTE struct `Thing` does not have field `z`\n     }\n }"}, {"sha": "b63b0ab5dfdef5fe45356e93d9ccf1efaf821f48", "filename": "src/test/compile-fail/E0027.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/3a2ad576c5d4b92bacc3355b14cc7a9bc704c782/src%2Ftest%2Fcompile-fail%2FE0027.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3a2ad576c5d4b92bacc3355b14cc7a9bc704c782/src%2Ftest%2Fcompile-fail%2FE0027.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2FE0027.rs?ref=3a2ad576c5d4b92bacc3355b14cc7a9bc704c782", "patch": "@@ -19,6 +19,5 @@ fn main() {\n     match d {\n         Dog { age: x } => {}\n         //~^ ERROR pattern does not mention field `name`\n-        //~| NOTE missing field `name`\n     }\n }"}, {"sha": "80d215bd327c9f04757dc241e565795ea9893008", "filename": "src/test/compile-fail/E0029.rs", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/3a2ad576c5d4b92bacc3355b14cc7a9bc704c782/src%2Ftest%2Fcompile-fail%2FE0029.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3a2ad576c5d4b92bacc3355b14cc7a9bc704c782/src%2Ftest%2Fcompile-fail%2FE0029.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2FE0029.rs?ref=3a2ad576c5d4b92bacc3355b14cc7a9bc704c782", "patch": "@@ -14,9 +14,6 @@ fn main() {\n     match s {\n         \"hello\" ... \"world\" => {}\n         //~^ ERROR only char and numeric types are allowed in range patterns\n-        //~| NOTE ranges require char or numeric types\n-        //~| NOTE start type: &'static str\n-        //~| NOTE end type: &'static str\n         //~| ERROR non-reference pattern used to match a reference\n         _ => {}\n     }"}, {"sha": "ef3bded4beffbfb8dd9badf22ca7691c997b6e8c", "filename": "src/test/compile-fail/E0030.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/3a2ad576c5d4b92bacc3355b14cc7a9bc704c782/src%2Ftest%2Fcompile-fail%2FE0030.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3a2ad576c5d4b92bacc3355b14cc7a9bc704c782/src%2Ftest%2Fcompile-fail%2FE0030.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2FE0030.rs?ref=3a2ad576c5d4b92bacc3355b14cc7a9bc704c782", "patch": "@@ -13,6 +13,5 @@ fn main() {\n     match 5u32 {\n         1000 ... 5 => {}\n         //~^ ERROR lower range bound must be less than or equal to upper\n-        //~| NOTE lower bound larger than upper bound\n     }\n }"}, {"sha": "3cdbb55f6deafb1e8c60198f8d86edb0caf709a4", "filename": "src/test/compile-fail/E0033.rs", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/3a2ad576c5d4b92bacc3355b14cc7a9bc704c782/src%2Ftest%2Fcompile-fail%2FE0033.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3a2ad576c5d4b92bacc3355b14cc7a9bc704c782/src%2Ftest%2Fcompile-fail%2FE0033.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2FE0033.rs?ref=3a2ad576c5d4b92bacc3355b14cc7a9bc704c782", "patch": "@@ -15,12 +15,9 @@ trait SomeTrait {\n fn main() {\n     let trait_obj: &SomeTrait = SomeTrait;\n     //~^ ERROR expected value, found trait `SomeTrait`\n-    //~| NOTE not a value\n     //~| ERROR E0038\n     //~| method `foo` has no receiver\n-    //~| NOTE the trait `SomeTrait` cannot be made into an object\n \n     let &invalid = trait_obj;\n     //~^ ERROR E0033\n-    //~| NOTE type `&SomeTrait` cannot be dereferenced\n }"}, {"sha": "6eebd4d4d53606fc2279c2395f591e9676f20d66", "filename": "src/test/compile-fail/E0034.rs", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/3a2ad576c5d4b92bacc3355b14cc7a9bc704c782/src%2Ftest%2Fcompile-fail%2FE0034.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3a2ad576c5d4b92bacc3355b14cc7a9bc704c782/src%2Ftest%2Fcompile-fail%2FE0034.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2FE0034.rs?ref=3a2ad576c5d4b92bacc3355b14cc7a9bc704c782", "patch": "@@ -20,15 +20,12 @@ trait Trait2 {\n \n impl Trait1 for Test {\n     fn foo() {}\n-    //~^ NOTE candidate #1 is defined in an impl of the trait `Trait1` for the type `Test`\n }\n \n impl Trait2 for Test {\n     fn foo() {}\n-    //~^ NOTE candidate #2 is defined in an impl of the trait `Trait2` for the type `Test`\n }\n \n fn main() {\n     Test::foo() //~ ERROR multiple applicable items in scope\n-    //~| NOTE multiple `foo` found\n }"}, {"sha": "8087928c051bb1055b3c0490b9aefabead0f1ffa", "filename": "src/test/compile-fail/E0038.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3a2ad576c5d4b92bacc3355b14cc7a9bc704c782/src%2Ftest%2Fcompile-fail%2FE0038.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3a2ad576c5d4b92bacc3355b14cc7a9bc704c782/src%2Ftest%2Fcompile-fail%2FE0038.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2FE0038.rs?ref=3a2ad576c5d4b92bacc3355b14cc7a9bc704c782", "patch": "@@ -14,8 +14,6 @@ trait Trait {\n \n fn call_foo(x: Box<Trait>) {\n     //~^ ERROR E0038\n-    //~| NOTE the trait `Trait` cannot be made into an object\n-    //~| NOTE method `foo` references the `Self` type in its arguments or return type\n     let y = x.foo();\n }\n "}, {"sha": "8385d68c540dd372cac0a2c253e2b149c6bb2f0f", "filename": "src/test/compile-fail/E0040.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/3a2ad576c5d4b92bacc3355b14cc7a9bc704c782/src%2Ftest%2Fcompile-fail%2FE0040.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3a2ad576c5d4b92bacc3355b14cc7a9bc704c782/src%2Ftest%2Fcompile-fail%2FE0040.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2FE0040.rs?ref=3a2ad576c5d4b92bacc3355b14cc7a9bc704c782", "patch": "@@ -22,5 +22,4 @@ fn main() {\n     let mut x = Foo { x: -7 };\n     x.drop();\n     //~^ ERROR E0040\n-    //~| NOTE explicit destructor calls not allowed\n }"}, {"sha": "57c639dd143a2c1137378606962858615275e4c5", "filename": "src/test/compile-fail/E0045.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/3a2ad576c5d4b92bacc3355b14cc7a9bc704c782/src%2Ftest%2Fcompile-fail%2FE0045.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3a2ad576c5d4b92bacc3355b14cc7a9bc704c782/src%2Ftest%2Fcompile-fail%2FE0045.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2FE0045.rs?ref=3a2ad576c5d4b92bacc3355b14cc7a9bc704c782", "patch": "@@ -9,7 +9,6 @@\n // except according to those terms.\n \n extern \"Rust\" { fn foo(x: u8, ...); }   //~ ERROR E0045\n-                                        //~| NOTE variadics require C or cdecl calling convention\n \n fn main() {\n }"}, {"sha": "5867e11e9acc606e890b16c7964c74fa2865ff7e", "filename": "src/test/compile-fail/E0049.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/3a2ad576c5d4b92bacc3355b14cc7a9bc704c782/src%2Ftest%2Fcompile-fail%2FE0049.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3a2ad576c5d4b92bacc3355b14cc7a9bc704c782/src%2Ftest%2Fcompile-fail%2FE0049.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2FE0049.rs?ref=3a2ad576c5d4b92bacc3355b14cc7a9bc704c782", "patch": "@@ -9,14 +9,13 @@\n // except according to those terms.\n \n trait Foo {\n-    fn foo<T: Default>(x: T) -> Self; //~ NOTE expected 1 type parameter\n+    fn foo<T: Default>(x: T) -> Self;\n }\n \n struct Bar;\n \n impl Foo for Bar {\n     fn foo(x: bool) -> Self { Bar } //~ ERROR E0049\n-                                    //~| NOTE found 0 type parameters\n }\n \n fn main() {"}, {"sha": "2ccc380c540d264cbe7c14e268ac6a1862eaed35", "filename": "src/test/compile-fail/E0050.rs", "status": "modified", "additions": 3, "deletions": 6, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/3a2ad576c5d4b92bacc3355b14cc7a9bc704c782/src%2Ftest%2Fcompile-fail%2FE0050.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3a2ad576c5d4b92bacc3355b14cc7a9bc704c782/src%2Ftest%2Fcompile-fail%2FE0050.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2FE0050.rs?ref=3a2ad576c5d4b92bacc3355b14cc7a9bc704c782", "patch": "@@ -9,20 +9,17 @@\n // except according to those terms.\n \n trait Foo {\n-    fn foo(&self, x: u8) -> bool; //~ NOTE trait requires 2 parameters\n-    fn bar(&self, x: u8, y: u8, z: u8); //~ NOTE trait requires 4 parameters\n-    fn less(&self); //~ NOTE trait requires 1 parameter\n+    fn foo(&self, x: u8) -> bool;\n+    fn bar(&self, x: u8, y: u8, z: u8);\n+    fn less(&self);\n }\n \n struct Bar;\n \n impl Foo for Bar {\n     fn foo(&self) -> bool { true } //~ ERROR E0050\n-                                   //~| NOTE expected 2 parameters, found 1\n     fn bar(&self) { } //~ ERROR E0050\n-                      //~| NOTE expected 4 parameters, found 1\n     fn less(&self, x: u8, y: u8, z: u8) { } //~ ERROR E0050\n-                                            //~| NOTE expected 1 parameter, found 4\n }\n \n fn main() {"}, {"sha": "6e186b81cad8db791595c6012f324ab8cc6439f4", "filename": "src/test/compile-fail/E0055.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/3a2ad576c5d4b92bacc3355b14cc7a9bc704c782/src%2Ftest%2Fcompile-fail%2FE0055.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3a2ad576c5d4b92bacc3355b14cc7a9bc704c782/src%2Ftest%2Fcompile-fail%2FE0055.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2FE0055.rs?ref=3a2ad576c5d4b92bacc3355b14cc7a9bc704c782", "patch": "@@ -20,5 +20,4 @@ fn main() {\n     let ref_foo = &&Foo;\n     ref_foo.foo();\n     //~^ ERROR E0055\n-    //~| NOTE deref recursion limit reached\n }"}, {"sha": "f4505209b66894c6623af12be11d08016561b46f", "filename": "src/test/compile-fail/E0060.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/3a2ad576c5d4b92bacc3355b14cc7a9bc704c782/src%2Ftest%2Fcompile-fail%2FE0060.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3a2ad576c5d4b92bacc3355b14cc7a9bc704c782/src%2Ftest%2Fcompile-fail%2FE0060.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2FE0060.rs?ref=3a2ad576c5d4b92bacc3355b14cc7a9bc704c782", "patch": "@@ -10,7 +10,6 @@\n \n extern \"C\" {\n     fn printf(_: *const u8, ...) -> u32;\n-    //~^ NOTE defined here\n }\n \n fn main() {"}, {"sha": "221e18cf89dd56a3d49325a6f285c355b93d77f5", "filename": "src/test/compile-fail/E0061.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3a2ad576c5d4b92bacc3355b14cc7a9bc704c782/src%2Ftest%2Fcompile-fail%2FE0061.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3a2ad576c5d4b92bacc3355b14cc7a9bc704c782/src%2Ftest%2Fcompile-fail%2FE0061.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2FE0061.rs?ref=3a2ad576c5d4b92bacc3355b14cc7a9bc704c782", "patch": "@@ -9,10 +9,8 @@\n // except according to those terms.\n \n fn f(a: u16, b: &str) {}\n-//~^ NOTE defined here\n \n fn f2(a: u16) {}\n-//~^ NOTE defined here\n \n fn main() {\n     f(0);"}, {"sha": "684c9464ff824a86da0a3413c8f0d985b77b500f", "filename": "src/test/compile-fail/E0062.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/3a2ad576c5d4b92bacc3355b14cc7a9bc704c782/src%2Ftest%2Fcompile-fail%2FE0062.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3a2ad576c5d4b92bacc3355b14cc7a9bc704c782/src%2Ftest%2Fcompile-fail%2FE0062.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2FE0062.rs?ref=3a2ad576c5d4b92bacc3355b14cc7a9bc704c782", "patch": "@@ -14,9 +14,8 @@ struct Foo {\n \n fn main() {\n     let x = Foo {\n-        x: 0, //~ NOTE first use of `x`\n+        x: 0,\n         x: 0,\n         //~^ ERROR E0062\n-        //~| NOTE used more than once\n     };\n }"}, {"sha": "0208aff066b4d3ad4a36cd55dcd542b538d76bc4", "filename": "src/test/compile-fail/E0063.rs", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/3a2ad576c5d4b92bacc3355b14cc7a9bc704c782/src%2Ftest%2Fcompile-fail%2FE0063.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3a2ad576c5d4b92bacc3355b14cc7a9bc704c782/src%2Ftest%2Fcompile-fail%2FE0063.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2FE0063.rs?ref=3a2ad576c5d4b92bacc3355b14cc7a9bc704c782", "patch": "@@ -41,14 +41,10 @@ struct TruncatedPluralFoo {\n fn main() {\n     let w = SingleFoo { };\n     //~^ ERROR missing field `x` in initializer of `SingleFoo`\n-    //~| NOTE missing `x`\n     let x = PluralFoo {x: 1};\n     //~^ ERROR missing fields `y`, `z` in initializer of `PluralFoo`\n-    //~| NOTE missing `y`, `z`\n     let y = TruncatedFoo{x:1};\n     //~^ missing fields `a`, `b`, `y` and 1 other field in initializer of `TruncatedFoo`\n-    //~| NOTE `a`, `b`, `y` and 1 other field\n     let z = TruncatedPluralFoo{x:1};\n     //~^ ERROR missing fields `a`, `b`, `c` and 2 other fields in initializer of `TruncatedPluralFoo`\n-    //~| NOTE missing `a`, `b`, `c` and 2 other fields\n }"}, {"sha": "a3fc30ee1c71ab8813637c84e880cf154117934f", "filename": "src/test/compile-fail/E0067.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3a2ad576c5d4b92bacc3355b14cc7a9bc704c782/src%2Ftest%2Fcompile-fail%2FE0067.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3a2ad576c5d4b92bacc3355b14cc7a9bc704c782/src%2Ftest%2Fcompile-fail%2FE0067.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2FE0067.rs?ref=3a2ad576c5d4b92bacc3355b14cc7a9bc704c782", "patch": "@@ -13,6 +13,4 @@ use std::collections::LinkedList;\n fn main() {\n     LinkedList::new() += 1; //~ ERROR E0368\n                             //~^ ERROR E0067\n-                            //~^^ NOTE invalid expression for left-hand side\n-                            //~| NOTE cannot use `+=` on type `std::collections::LinkedList<_>`\n }"}, {"sha": "a6a7898ed4e8950ee64f8200370c30bd675dca61", "filename": "src/test/compile-fail/E0069.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/3a2ad576c5d4b92bacc3355b14cc7a9bc704c782/src%2Ftest%2Fcompile-fail%2FE0069.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3a2ad576c5d4b92bacc3355b14cc7a9bc704c782/src%2Ftest%2Fcompile-fail%2FE0069.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2FE0069.rs?ref=3a2ad576c5d4b92bacc3355b14cc7a9bc704c782", "patch": "@@ -11,7 +11,6 @@\n fn foo() -> u8 {\n     return;\n     //~^ ERROR `return;` in a function whose return type is not `()`\n-    //~| NOTE return type is not ()\n }\n \n fn main() {"}, {"sha": "d71dc7966fa91b501f4b3048c125df81576264af", "filename": "src/test/compile-fail/E0071.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/3a2ad576c5d4b92bacc3355b14cc7a9bc704c782/src%2Ftest%2Fcompile-fail%2FE0071.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3a2ad576c5d4b92bacc3355b14cc7a9bc704c782/src%2Ftest%2Fcompile-fail%2FE0071.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2FE0071.rs?ref=3a2ad576c5d4b92bacc3355b14cc7a9bc704c782", "patch": "@@ -14,5 +14,4 @@ type FooAlias = Foo;\n fn main() {\n     let u = FooAlias { value: 0 };\n     //~^ ERROR expected struct, variant or union type, found enum `Foo` [E0071]\n-    //~| NOTE not a struct\n }"}, {"sha": "b159cf107cefb0cc5b99bd623099ea7126ea1131", "filename": "src/test/compile-fail/E0076.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/3a2ad576c5d4b92bacc3355b14cc7a9bc704c782/src%2Ftest%2Fcompile-fail%2FE0076.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3a2ad576c5d4b92bacc3355b14cc7a9bc704c782/src%2Ftest%2Fcompile-fail%2FE0076.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2FE0076.rs?ref=3a2ad576c5d4b92bacc3355b14cc7a9bc704c782", "patch": "@@ -13,7 +13,6 @@\n #[repr(simd)]\n struct Bad(u16, u32, u32);\n //~^ ERROR E0076\n-//~| NOTE SIMD elements must have the same type\n \n fn main() {\n }"}, {"sha": "3b571667336ac9956baf27ed188d00a2e0355d63", "filename": "src/test/compile-fail/E0081.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/3a2ad576c5d4b92bacc3355b14cc7a9bc704c782/src%2Ftest%2Fcompile-fail%2FE0081.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3a2ad576c5d4b92bacc3355b14cc7a9bc704c782/src%2Ftest%2Fcompile-fail%2FE0081.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2FE0081.rs?ref=3a2ad576c5d4b92bacc3355b14cc7a9bc704c782", "patch": "@@ -9,10 +9,9 @@\n // except according to those terms.\n \n enum Enum {\n-    P = 3, //~ NOTE first use of `3isize`\n+    P = 3,\n     X = 3,\n     //~^ ERROR discriminant value `3isize` already exists\n-    //~| NOTE enum already has `3isize`\n     Y = 5\n }\n "}, {"sha": "2be206c9702bf4b40151da6d568905d1fb638b0e", "filename": "src/test/compile-fail/E0084.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3a2ad576c5d4b92bacc3355b14cc7a9bc704c782/src%2Ftest%2Fcompile-fail%2FE0084.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3a2ad576c5d4b92bacc3355b14cc7a9bc704c782/src%2Ftest%2Fcompile-fail%2FE0084.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2FE0084.rs?ref=3a2ad576c5d4b92bacc3355b14cc7a9bc704c782", "patch": "@@ -9,7 +9,7 @@\n // except according to those terms.\n \n #[repr(i32)] //~ ERROR: E0084\n-enum Foo {} //~ NOTE: zero-variant enum\n+enum Foo {}\n \n fn main() {\n }"}, {"sha": "6dc08860614d7af836f1984c0dad5564d8a9f67b", "filename": "src/test/compile-fail/E0087.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3a2ad576c5d4b92bacc3355b14cc7a9bc704c782/src%2Ftest%2Fcompile-fail%2FE0087.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3a2ad576c5d4b92bacc3355b14cc7a9bc704c782/src%2Ftest%2Fcompile-fail%2FE0087.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2FE0087.rs?ref=3a2ad576c5d4b92bacc3355b14cc7a9bc704c782", "patch": "@@ -13,8 +13,6 @@ fn bar<T>() {}\n \n fn main() {\n     foo::<f64>(); //~ ERROR expected at most 0 type parameters, found 1 type parameter [E0087]\n-                  //~^ NOTE expected 0 type parameters\n \n     bar::<f64, u64>(); //~ ERROR expected at most 1 type parameter, found 2 type parameters [E0087]\n-                       //~^ NOTE expected 1 type parameter\n }"}, {"sha": "21df9abd0932e2e3cda269020d3eef3d54415d30", "filename": "src/test/compile-fail/E0089.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/3a2ad576c5d4b92bacc3355b14cc7a9bc704c782/src%2Ftest%2Fcompile-fail%2FE0089.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3a2ad576c5d4b92bacc3355b14cc7a9bc704c782/src%2Ftest%2Fcompile-fail%2FE0089.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2FE0089.rs?ref=3a2ad576c5d4b92bacc3355b14cc7a9bc704c782", "patch": "@@ -12,5 +12,4 @@ fn foo<T, U>() {}\n \n fn main() {\n     foo::<f64>(); //~ ERROR expected 2 type parameters, found 1 type parameter [E0089]\n-                  //~| NOTE expected 2 type parameters\n }"}, {"sha": "13b2131cc8be0d2aedb7df4a33841fe5aa26516e", "filename": "src/test/compile-fail/E0090.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/3a2ad576c5d4b92bacc3355b14cc7a9bc704c782/src%2Ftest%2Fcompile-fail%2FE0090.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3a2ad576c5d4b92bacc3355b14cc7a9bc704c782/src%2Ftest%2Fcompile-fail%2FE0090.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2FE0090.rs?ref=3a2ad576c5d4b92bacc3355b14cc7a9bc704c782", "patch": "@@ -12,5 +12,4 @@ fn foo<'a: 'b, 'b: 'a>() {}\n \n fn main() {\n     foo::<'static>(); //~ ERROR expected 2 lifetime parameters, found 1 lifetime parameter [E0090]\n-                      //~^ NOTE expected 2 lifetime parameters\n }"}, {"sha": "da988dbf819ac8c681a28d3bd4341c112c8e7d34", "filename": "src/test/compile-fail/E0091.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3a2ad576c5d4b92bacc3355b14cc7a9bc704c782/src%2Ftest%2Fcompile-fail%2FE0091.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3a2ad576c5d4b92bacc3355b14cc7a9bc704c782/src%2Ftest%2Fcompile-fail%2FE0091.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2FE0091.rs?ref=3a2ad576c5d4b92bacc3355b14cc7a9bc704c782", "patch": "@@ -9,9 +9,7 @@\n // except according to those terms.\n \n type Foo<T> = u32; //~ ERROR E0091\n-                   //~| NOTE unused type parameter\n type Foo2<A, B> = Box<A>; //~ ERROR E0091\n-                          //~| NOTE unused type parameter\n \n fn main() {\n }"}, {"sha": "b08164ac06d4235c0e95907f583406db6118efe9", "filename": "src/test/compile-fail/E0092.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3a2ad576c5d4b92bacc3355b14cc7a9bc704c782/src%2Ftest%2Fcompile-fail%2FE0092.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3a2ad576c5d4b92bacc3355b14cc7a9bc704c782/src%2Ftest%2Fcompile-fail%2FE0092.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2FE0092.rs?ref=3a2ad576c5d4b92bacc3355b14cc7a9bc704c782", "patch": "@@ -11,7 +11,7 @@\n #![feature(intrinsics)]\n extern \"rust-intrinsic\" {\n     fn atomic_foo(); //~ ERROR E0092\n-}                    //~| NOTE unrecognized atomic operation\n+}\n \n fn main() {\n }"}, {"sha": "d84f9f649113c1c2d282f40e02c1f1a0a29a8541", "filename": "src/test/compile-fail/E0093.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/3a2ad576c5d4b92bacc3355b14cc7a9bc704c782/src%2Ftest%2Fcompile-fail%2FE0093.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3a2ad576c5d4b92bacc3355b14cc7a9bc704c782/src%2Ftest%2Fcompile-fail%2FE0093.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2FE0093.rs?ref=3a2ad576c5d4b92bacc3355b14cc7a9bc704c782", "patch": "@@ -12,7 +12,6 @@\n extern \"rust-intrinsic\" {\n     fn foo();\n     //~^ ERROR E0093\n-    //~| NOTE unrecognized intrinsic\n }\n \n fn main() {"}, {"sha": "3a31874b244229c272515034a16247a2da7efcdf", "filename": "src/test/compile-fail/E0094.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/3a2ad576c5d4b92bacc3355b14cc7a9bc704c782/src%2Ftest%2Fcompile-fail%2FE0094.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3a2ad576c5d4b92bacc3355b14cc7a9bc704c782/src%2Ftest%2Fcompile-fail%2FE0094.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2FE0094.rs?ref=3a2ad576c5d4b92bacc3355b14cc7a9bc704c782", "patch": "@@ -11,7 +11,6 @@\n #![feature(intrinsics)]\n extern \"rust-intrinsic\" {\n     fn size_of<T, U>() -> usize; //~ ERROR E0094\n-                                 //~| NOTE expected 1 type parameter\n }\n \n fn main() {"}, {"sha": "0674930a11cca8e5d2ae1c830c82d99d6efdabcc", "filename": "src/test/compile-fail/E0106.rs", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/3a2ad576c5d4b92bacc3355b14cc7a9bc704c782/src%2Ftest%2Fcompile-fail%2FE0106.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3a2ad576c5d4b92bacc3355b14cc7a9bc704c782/src%2Ftest%2Fcompile-fail%2FE0106.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2FE0106.rs?ref=3a2ad576c5d4b92bacc3355b14cc7a9bc704c782", "patch": "@@ -11,17 +11,14 @@\n struct Foo {\n     x: &bool,\n     //~^ ERROR E0106\n-    //~| NOTE expected lifetime parameter\n }\n enum Bar {\n     A(u8),\n     B(&bool),\n    //~^ ERROR E0106\n-   //~| NOTE expected lifetime parameter\n }\n type MyStr = &str;\n         //~^ ERROR E0106\n-        //~| NOTE expected lifetime parameter\n \n struct Baz<'a>(&'a str);\n struct Buzz<'a, 'b>(&'a str, &'b str);"}, {"sha": "9fc478422504bbe750c2f3b230f022bdb56c61cc", "filename": "src/test/compile-fail/E0109.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/3a2ad576c5d4b92bacc3355b14cc7a9bc704c782/src%2Ftest%2Fcompile-fail%2FE0109.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3a2ad576c5d4b92bacc3355b14cc7a9bc704c782/src%2Ftest%2Fcompile-fail%2FE0109.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2FE0109.rs?ref=3a2ad576c5d4b92bacc3355b14cc7a9bc704c782", "patch": "@@ -9,7 +9,6 @@\n // except according to those terms.\n \n type X = u32<i32>; //~ ERROR E0109\n-                   //~| NOTE type parameter not allowed\n \n fn main() {\n }"}, {"sha": "fd169f4acc5eb0250ad5fae39283d51883764ee0", "filename": "src/test/compile-fail/E0110.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/3a2ad576c5d4b92bacc3355b14cc7a9bc704c782/src%2Ftest%2Fcompile-fail%2FE0110.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3a2ad576c5d4b92bacc3355b14cc7a9bc704c782/src%2Ftest%2Fcompile-fail%2FE0110.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2FE0110.rs?ref=3a2ad576c5d4b92bacc3355b14cc7a9bc704c782", "patch": "@@ -9,7 +9,6 @@\n // except according to those terms.\n \n type X = u32<'static>; //~ ERROR E0110\n-                       //~| NOTE lifetime parameter not allowed on this type\n \n fn main() {\n }"}, {"sha": "cd7d8dc3efb986e9118da5707b93dc47caa08aba", "filename": "src/test/compile-fail/E0116.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3a2ad576c5d4b92bacc3355b14cc7a9bc704c782/src%2Ftest%2Fcompile-fail%2FE0116.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3a2ad576c5d4b92bacc3355b14cc7a9bc704c782/src%2Ftest%2Fcompile-fail%2FE0116.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2FE0116.rs?ref=3a2ad576c5d4b92bacc3355b14cc7a9bc704c782", "patch": "@@ -10,8 +10,6 @@\n \n impl Vec<u8> {}\n //~^ ERROR E0116\n-//~| NOTE impl for type defined outside of crate.\n-//~| NOTE define and implement a trait or new type instead\n \n fn main() {\n }"}, {"sha": "982f875c7b0a85108e75d4b315f392124780a083", "filename": "src/test/compile-fail/E0117.rs", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/3a2ad576c5d4b92bacc3355b14cc7a9bc704c782/src%2Ftest%2Fcompile-fail%2FE0117.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3a2ad576c5d4b92bacc3355b14cc7a9bc704c782/src%2Ftest%2Fcompile-fail%2FE0117.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2FE0117.rs?ref=3a2ad576c5d4b92bacc3355b14cc7a9bc704c782", "patch": "@@ -9,9 +9,6 @@\n // except according to those terms.\n \n impl Drop for u32 {} //~ ERROR E0117\n-//~^ NOTE impl doesn't use types inside crate\n-//~| NOTE the impl does not reference any types defined in this crate\n-//~| NOTE define and implement a trait or new type instead\n //~| ERROR the Drop trait may only be implemented on structures\n //~| implementing Drop requires a struct\n "}, {"sha": "d37ff34b861f41d272970920bf135f222773d5ff", "filename": "src/test/compile-fail/E0118.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3a2ad576c5d4b92bacc3355b14cc7a9bc704c782/src%2Ftest%2Fcompile-fail%2FE0118.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3a2ad576c5d4b92bacc3355b14cc7a9bc704c782/src%2Ftest%2Fcompile-fail%2FE0118.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2FE0118.rs?ref=3a2ad576c5d4b92bacc3355b14cc7a9bc704c782", "patch": "@@ -9,8 +9,6 @@\n // except according to those terms.\n \n impl (u8, u8) { //~ ERROR E0118\n-//~^ NOTE impl requires a base type\n-//~| NOTE either implement a trait on it or create a newtype to wrap it instead\n     fn get_state(&self) -> String {\n         String::new()\n     }"}, {"sha": "9528631b3047b6bd749b3aad2db3a7f1ea5cd4a0", "filename": "src/test/compile-fail/E0119.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/3a2ad576c5d4b92bacc3355b14cc7a9bc704c782/src%2Ftest%2Fcompile-fail%2FE0119.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3a2ad576c5d4b92bacc3355b14cc7a9bc704c782/src%2Ftest%2Fcompile-fail%2FE0119.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2FE0119.rs?ref=3a2ad576c5d4b92bacc3355b14cc7a9bc704c782", "patch": "@@ -12,7 +12,7 @@ trait MyTrait {\n     fn get(&self) -> usize;\n }\n \n-impl<T> MyTrait for T { //~ NOTE first implementation here\n+impl<T> MyTrait for T {\n     fn get(&self) -> usize { 0 }\n }\n \n@@ -21,7 +21,6 @@ struct Foo {\n }\n \n impl MyTrait for Foo { //~ ERROR E0119\n-                       //~| NOTE conflicting implementation for `Foo`\n     fn get(&self) -> usize { self.value }\n }\n "}, {"sha": "8d09b877f002b7ee4a72d5d7592251ccec60492b", "filename": "src/test/compile-fail/E0120.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/3a2ad576c5d4b92bacc3355b14cc7a9bc704c782/src%2Ftest%2Fcompile-fail%2FE0120.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3a2ad576c5d4b92bacc3355b14cc7a9bc704c782/src%2Ftest%2Fcompile-fail%2FE0120.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2FE0120.rs?ref=3a2ad576c5d4b92bacc3355b14cc7a9bc704c782", "patch": "@@ -12,7 +12,6 @@ trait MyTrait { fn foo() {} }\n \n impl Drop for MyTrait {\n               //~^ ERROR E0120\n-              //~| NOTE implementing Drop requires a struct\n     fn drop(&mut self) {}\n }\n "}, {"sha": "3ef20c6dd4084ce66e49b00fe71e88817a904ead", "filename": "src/test/compile-fail/E0124.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/3a2ad576c5d4b92bacc3355b14cc7a9bc704c782/src%2Ftest%2Fcompile-fail%2FE0124.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3a2ad576c5d4b92bacc3355b14cc7a9bc704c782/src%2Ftest%2Fcompile-fail%2FE0124.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2FE0124.rs?ref=3a2ad576c5d4b92bacc3355b14cc7a9bc704c782", "patch": "@@ -9,10 +9,9 @@\n // except according to those terms.\n \n struct Foo {\n-    field1: i32, //~ NOTE `field1` first declared here\n+    field1: i32,\n     field1: i32,\n     //~^ ERROR field `field1` is already declared [E0124]\n-    //~| NOTE field already declared\n }\n \n fn main() {"}, {"sha": "37071012825ec9b67f9984e7f202300f80eee315", "filename": "src/test/compile-fail/E0128.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/3a2ad576c5d4b92bacc3355b14cc7a9bc704c782/src%2Ftest%2Fcompile-fail%2FE0128.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3a2ad576c5d4b92bacc3355b14cc7a9bc704c782/src%2Ftest%2Fcompile-fail%2FE0128.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2FE0128.rs?ref=3a2ad576c5d4b92bacc3355b14cc7a9bc704c782", "patch": "@@ -9,7 +9,6 @@\n // except according to those terms.\n \n struct Foo<T=U, U=()> { //~ ERROR E0128\n-                        //~| NOTE defaulted type parameters cannot be forward declared\n     field1: T,\n     field2: U,\n }"}, {"sha": "d11b59cdf334d336439497c47174669f0e3577a0", "filename": "src/test/compile-fail/E0130.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/3a2ad576c5d4b92bacc3355b14cc7a9bc704c782/src%2Ftest%2Fcompile-fail%2FE0130.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3a2ad576c5d4b92bacc3355b14cc7a9bc704c782/src%2Ftest%2Fcompile-fail%2FE0130.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2FE0130.rs?ref=3a2ad576c5d4b92bacc3355b14cc7a9bc704c782", "patch": "@@ -11,7 +11,6 @@\n extern {\n     fn foo((a, b): (u32, u32));\n     //~^ ERROR E0130\n-    //~| NOTE pattern not allowed in foreign function\n }\n \n fn main() {"}, {"sha": "c7e31edd301d454e9be032b518fef3946b2e3365", "filename": "src/test/compile-fail/E0131.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/3a2ad576c5d4b92bacc3355b14cc7a9bc704c782/src%2Ftest%2Fcompile-fail%2FE0131.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3a2ad576c5d4b92bacc3355b14cc7a9bc704c782/src%2Ftest%2Fcompile-fail%2FE0131.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2FE0131.rs?ref=3a2ad576c5d4b92bacc3355b14cc7a9bc704c782", "patch": "@@ -10,5 +10,4 @@\n \n fn main<T>() {\n     //~^ ERROR E0131\n-    //~| NOTE main cannot have type parameters\n }"}, {"sha": "25ccb344aba34805c55161cbb90c273cce12c298", "filename": "src/test/compile-fail/E0132.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/3a2ad576c5d4b92bacc3355b14cc7a9bc704c782/src%2Ftest%2Fcompile-fail%2FE0132.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3a2ad576c5d4b92bacc3355b14cc7a9bc704c782/src%2Ftest%2Fcompile-fail%2FE0132.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2FE0132.rs?ref=3a2ad576c5d4b92bacc3355b14cc7a9bc704c782", "patch": "@@ -12,7 +12,6 @@\n \n #[start]\n fn f< T >() {} //~ ERROR E0132\n-             //~| NOTE start function cannot have type parameters\n \n fn main() {\n }"}, {"sha": "2e54f65e7bff49400970f5febb7486c262b89bc6", "filename": "src/test/compile-fail/E0133.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/3a2ad576c5d4b92bacc3355b14cc7a9bc704c782/src%2Ftest%2Fcompile-fail%2FE0133.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3a2ad576c5d4b92bacc3355b14cc7a9bc704c782/src%2Ftest%2Fcompile-fail%2FE0133.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2FE0133.rs?ref=3a2ad576c5d4b92bacc3355b14cc7a9bc704c782", "patch": "@@ -13,5 +13,4 @@ unsafe fn f() { return; }\n fn main() {\n     f();\n     //~^ ERROR E0133\n-    //~| NOTE call to unsafe function\n }"}, {"sha": "067ebcc727cea79d074d3039fa9a7d6158eac53c", "filename": "src/test/compile-fail/E0137.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/3a2ad576c5d4b92bacc3355b14cc7a9bc704c782/src%2Ftest%2Fcompile-fail%2FE0137.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3a2ad576c5d4b92bacc3355b14cc7a9bc704c782/src%2Ftest%2Fcompile-fail%2FE0137.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2FE0137.rs?ref=3a2ad576c5d4b92bacc3355b14cc7a9bc704c782", "patch": "@@ -11,9 +11,8 @@\n #![feature(main)]\n \n #[main]\n-fn foo() {} //~ NOTE first #[main] function\n+fn foo() {}\n \n #[main]\n fn f() {}\n //~^ ERROR E0137\n-//~| NOTE additional #[main] function"}, {"sha": "856616c857085501bd341bf109575d65a9eee582", "filename": "src/test/compile-fail/E0138.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3a2ad576c5d4b92bacc3355b14cc7a9bc704c782/src%2Ftest%2Fcompile-fail%2FE0138.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3a2ad576c5d4b92bacc3355b14cc7a9bc704c782/src%2Ftest%2Fcompile-fail%2FE0138.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2FE0138.rs?ref=3a2ad576c5d4b92bacc3355b14cc7a9bc704c782", "patch": "@@ -12,9 +12,7 @@\n \n #[start]\n fn foo(argc: isize, argv: *const *const u8) -> isize { 0 }\n-//~^ NOTE previous `start` function here\n \n #[start]\n fn f(argc: isize, argv: *const *const u8) -> isize { 0 }\n //~^ ERROR E0138\n-//~| NOTE multiple `start` functions"}, {"sha": "e13b0af6f7977436c43684f1ee62b89eb1582cea", "filename": "src/test/compile-fail/E0162.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/3a2ad576c5d4b92bacc3355b14cc7a9bc704c782/src%2Ftest%2Fcompile-fail%2FE0162.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3a2ad576c5d4b92bacc3355b14cc7a9bc704c782/src%2Ftest%2Fcompile-fail%2FE0162.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2FE0162.rs?ref=3a2ad576c5d4b92bacc3355b14cc7a9bc704c782", "patch": "@@ -13,7 +13,6 @@ struct Irrefutable(i32);\n fn main() {\n     let irr = Irrefutable(0);\n     if let Irrefutable(x) = irr { //~ ERROR E0162\n-        //~| NOTE irrefutable pattern\n         println!(\"{}\", x);\n     }\n }"}, {"sha": "a7f10ddb5a7f83cefc2f8e70aabfa361228bbcf7", "filename": "src/test/compile-fail/E0164.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/3a2ad576c5d4b92bacc3355b14cc7a9bc704c782/src%2Ftest%2Fcompile-fail%2FE0164.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3a2ad576c5d4b92bacc3355b14cc7a9bc704c782/src%2Ftest%2Fcompile-fail%2FE0164.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2FE0164.rs?ref=3a2ad576c5d4b92bacc3355b14cc7a9bc704c782", "patch": "@@ -18,7 +18,6 @@ impl Foo {\n fn bar(foo: Foo) -> u32 {\n     match foo {\n         Foo::B(i) => i, //~ ERROR E0164\n-                        //~| NOTE not a tuple variant or struct\n     }\n }\n "}, {"sha": "5d72d00ffe8765bb7ade9cda1f14eb4afa4ccd2d", "filename": "src/test/compile-fail/E0184.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3a2ad576c5d4b92bacc3355b14cc7a9bc704c782/src%2Ftest%2Fcompile-fail%2FE0184.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3a2ad576c5d4b92bacc3355b14cc7a9bc704c782/src%2Ftest%2Fcompile-fail%2FE0184.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2FE0184.rs?ref=3a2ad576c5d4b92bacc3355b14cc7a9bc704c782", "patch": "@@ -9,8 +9,6 @@\n // except according to those terms.\n \n #[derive(Copy)] //~ ERROR E0184\n-                //~| NOTE Copy not allowed on types with destructors\n-                //~| NOTE in this expansion of #[derive(Copy)]\n struct Foo;\n \n impl Drop for Foo {"}, {"sha": "489ebb033f84e8133c98961750ff7530ba4878dc", "filename": "src/test/compile-fail/E0191.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/3a2ad576c5d4b92bacc3355b14cc7a9bc704c782/src%2Ftest%2Fcompile-fail%2FE0191.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3a2ad576c5d4b92bacc3355b14cc7a9bc704c782/src%2Ftest%2Fcompile-fail%2FE0191.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2FE0191.rs?ref=3a2ad576c5d4b92bacc3355b14cc7a9bc704c782", "patch": "@@ -13,7 +13,6 @@ trait Trait {\n }\n \n type Foo = Trait; //~ ERROR E0191\n-                  //~| NOTE missing associated type `Bar` value\n \n fn main() {\n }"}, {"sha": "17e0751859d9ffd0425186212c3090ce805f76ee", "filename": "src/test/compile-fail/E0194.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/3a2ad576c5d4b92bacc3355b14cc7a9bc704c782/src%2Ftest%2Fcompile-fail%2FE0194.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3a2ad576c5d4b92bacc3355b14cc7a9bc704c782/src%2Ftest%2Fcompile-fail%2FE0194.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2FE0194.rs?ref=3a2ad576c5d4b92bacc3355b14cc7a9bc704c782", "patch": "@@ -8,11 +8,10 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-trait Foo<T> { //~ NOTE first `T` declared here\n+trait Foo<T> {\n     fn do_something(&self) -> T;\n     fn do_something_else<T: Clone>(&self, bar: T);\n     //~^ ERROR E0194\n-    //~| NOTE shadows another type parameter\n }\n \n fn main() {"}, {"sha": "da0370b301b5b51d4054053c5d18fe8525785895", "filename": "src/test/compile-fail/E0206.rs", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/3a2ad576c5d4b92bacc3355b14cc7a9bc704c782/src%2Ftest%2Fcompile-fail%2FE0206.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3a2ad576c5d4b92bacc3355b14cc7a9bc704c782/src%2Ftest%2Fcompile-fail%2FE0206.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2FE0206.rs?ref=3a2ad576c5d4b92bacc3355b14cc7a9bc704c782", "patch": "@@ -12,18 +12,13 @@ type Foo = i32;\n \n impl Copy for Foo { }\n //~^ ERROR the trait `Copy` may not be implemented for this type\n-//~| NOTE type is not a structure or enumeration\n //~| ERROR only traits defined in the current crate can be implemented for arbitrary types\n-//~| NOTE impl doesn't use types inside crate\n-//~| NOTE the impl does not reference any types defined in this crate\n-//~| NOTE define and implement a trait or new type instead\n \n #[derive(Copy, Clone)]\n struct Bar;\n \n impl Copy for &'static Bar { }\n //~^ ERROR the trait `Copy` may not be implemented for this type\n-//~| NOTE type is not a structure or enumeration\n \n fn main() {\n }"}, {"sha": "bd87dbaf786a518407bc28a07c8e5c8528e5ef8f", "filename": "src/test/compile-fail/E0207.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/3a2ad576c5d4b92bacc3355b14cc7a9bc704c782/src%2Ftest%2Fcompile-fail%2FE0207.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3a2ad576c5d4b92bacc3355b14cc7a9bc704c782/src%2Ftest%2Fcompile-fail%2FE0207.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2FE0207.rs?ref=3a2ad576c5d4b92bacc3355b14cc7a9bc704c782", "patch": "@@ -11,7 +11,6 @@\n struct Foo;\n \n impl<T: Default> Foo { //~ ERROR E0207\n-                       //~| NOTE unconstrained type parameter\n     fn get(&self) -> T {\n         <T as Default>::default()\n     }"}, {"sha": "2b090391c743b02dcd22b13fae3bb4f41daf4ee8", "filename": "src/test/compile-fail/E0214.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/3a2ad576c5d4b92bacc3355b14cc7a9bc704c782/src%2Ftest%2Fcompile-fail%2FE0214.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3a2ad576c5d4b92bacc3355b14cc7a9bc704c782/src%2Ftest%2Fcompile-fail%2FE0214.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2FE0214.rs?ref=3a2ad576c5d4b92bacc3355b14cc7a9bc704c782", "patch": "@@ -11,5 +11,4 @@\n fn main() {\n     let v: Vec(&str) = vec![\"foo\"];\n     //~^ ERROR E0214\n-    //~| NOTE only traits may use parentheses\n }"}, {"sha": "2866ffcd637921301f86c128bdabe3996441b8cb", "filename": "src/test/compile-fail/E0220.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3a2ad576c5d4b92bacc3355b14cc7a9bc704c782/src%2Ftest%2Fcompile-fail%2FE0220.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3a2ad576c5d4b92bacc3355b14cc7a9bc704c782/src%2Ftest%2Fcompile-fail%2FE0220.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2FE0220.rs?ref=3a2ad576c5d4b92bacc3355b14cc7a9bc704c782", "patch": "@@ -13,8 +13,6 @@ trait Trait {\n }\n \n type Foo = Trait<F=i32>; //~ ERROR E0220\n-                         //~| NOTE associated type `F` not found\n                          //~| ERROR E0191\n-                         //~| NOTE missing associated type `Bar` value\n fn main() {\n }"}, {"sha": "99092465b0ae75e3dc9331bc020bd94dc81dfe98", "filename": "src/test/compile-fail/E0221.rs", "status": "modified", "additions": 3, "deletions": 6, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/3a2ad576c5d4b92bacc3355b14cc7a9bc704c782/src%2Ftest%2Fcompile-fail%2FE0221.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3a2ad576c5d4b92bacc3355b14cc7a9bc704c782/src%2Ftest%2Fcompile-fail%2FE0221.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2FE0221.rs?ref=3a2ad576c5d4b92bacc3355b14cc7a9bc704c782", "patch": "@@ -12,27 +12,24 @@ trait T1 {}\n trait T2 {}\n \n trait Foo {\n-    type A: T1; //~ NOTE: ambiguous `A` from `Foo`\n+    type A: T1;\n }\n \n trait Bar : Foo {\n-    type A: T2; //~ NOTE: ambiguous `A` from `Bar`\n+    type A: T2;\n     fn do_something() {\n         let _: Self::A;\n         //~^ ERROR E0221\n-        //~| NOTE ambiguous associated type `A`\n     }\n }\n \n trait T3 {}\n \n trait My : std::str::FromStr {\n-    type Err: T3; //~ NOTE: ambiguous `Err` from `My`\n+    type Err: T3;\n     fn test() {\n         let _: Self::Err;\n         //~^ ERROR E0221\n-        //~| NOTE ambiguous associated type `Err`\n-        //~| NOTE associated type `Self` could derive from `std::str::FromStr`\n     }\n }\n "}, {"sha": "0683197b2b67084702f9f3ea15404e85c177105d", "filename": "src/test/compile-fail/E0223.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3a2ad576c5d4b92bacc3355b14cc7a9bc704c782/src%2Ftest%2Fcompile-fail%2FE0223.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3a2ad576c5d4b92bacc3355b14cc7a9bc704c782/src%2Ftest%2Fcompile-fail%2FE0223.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2FE0223.rs?ref=3a2ad576c5d4b92bacc3355b14cc7a9bc704c782", "patch": "@@ -13,6 +13,4 @@ trait MyTrait { type X; }\n fn main() {\n     let foo: MyTrait::X;\n     //~^ ERROR ambiguous associated type\n-    //~| NOTE ambiguous associated type\n-    //~| NOTE specify the type using the syntax `<Type as MyTrait>::X`\n }"}, {"sha": "6c77443c5ede9bfdd928e08aeebbc26824576c09", "filename": "src/test/compile-fail/E0225.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/3a2ad576c5d4b92bacc3355b14cc7a9bc704c782/src%2Ftest%2Fcompile-fail%2FE0225.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3a2ad576c5d4b92bacc3355b14cc7a9bc704c782/src%2Ftest%2Fcompile-fail%2FE0225.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2FE0225.rs?ref=3a2ad576c5d4b92bacc3355b14cc7a9bc704c782", "patch": "@@ -11,5 +11,4 @@\n fn main() {\n     let _: Box<std::io::Read + std::io::Write>;\n     //~^ ERROR only auto traits can be used as additional traits in a trait object [E0225]\n-    //~| NOTE non-auto additional trait\n }"}, {"sha": "b70fb092a54103af875f9665c98c258783f8ed76", "filename": "src/test/compile-fail/E0229.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/3a2ad576c5d4b92bacc3355b14cc7a9bc704c782/src%2Ftest%2Fcompile-fail%2FE0229.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3a2ad576c5d4b92bacc3355b14cc7a9bc704c782/src%2Ftest%2Fcompile-fail%2FE0229.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2FE0229.rs?ref=3a2ad576c5d4b92bacc3355b14cc7a9bc704c782", "patch": "@@ -22,7 +22,6 @@ impl Foo for isize {\n \n fn baz<I>(x: &<I as Foo<A=Bar>>::A) {}\n //~^ ERROR associated type bindings are not allowed here [E0229]\n-//~| NOTE associated type not allowed here\n \n fn main() {\n }"}, {"sha": "04657c65c8e450280f94d612b5f782b88a19634d", "filename": "src/test/compile-fail/E0232.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3a2ad576c5d4b92bacc3355b14cc7a9bc704c782/src%2Ftest%2Fcompile-fail%2FE0232.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3a2ad576c5d4b92bacc3355b14cc7a9bc704c782/src%2Ftest%2Fcompile-fail%2FE0232.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2FE0232.rs?ref=3a2ad576c5d4b92bacc3355b14cc7a9bc704c782", "patch": "@@ -12,8 +12,6 @@\n \n #[rustc_on_unimplemented]\n //~^ ERROR E0232\n-//~| NOTE value required here\n-//~| NOTE eg `#[rustc_on_unimplemented = \"foo\"]`\n trait Bar {}\n \n fn main() {"}, {"sha": "615ce0b5d4265028f1f0212c1f17fcd530d2c5a5", "filename": "src/test/compile-fail/E0243.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/3a2ad576c5d4b92bacc3355b14cc7a9bc704c782/src%2Ftest%2Fcompile-fail%2FE0243.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3a2ad576c5d4b92bacc3355b14cc7a9bc704c782/src%2Ftest%2Fcompile-fail%2FE0243.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2FE0243.rs?ref=3a2ad576c5d4b92bacc3355b14cc7a9bc704c782", "patch": "@@ -11,7 +11,6 @@\n struct Foo<T> { x: T }\n struct Bar { x: Foo }\n                 //~^ ERROR wrong number of type arguments: expected 1, found 0 [E0243]\n-                //~| NOTE expected 1 type argument\n \n fn main() {\n }"}, {"sha": "9a78b3139d0643c2a798f90f57da23e368bb0d3b", "filename": "src/test/compile-fail/E0244.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/3a2ad576c5d4b92bacc3355b14cc7a9bc704c782/src%2Ftest%2Fcompile-fail%2FE0244.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3a2ad576c5d4b92bacc3355b14cc7a9bc704c782/src%2Ftest%2Fcompile-fail%2FE0244.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2FE0244.rs?ref=3a2ad576c5d4b92bacc3355b14cc7a9bc704c782", "patch": "@@ -11,7 +11,6 @@\n struct Foo { x: bool }\n struct Bar<S, T> { x: Foo<S, T> }\n                       //~^ ERROR wrong number of type arguments: expected 0, found 2 [E0244]\n-                      //~| NOTE expected no type arguments\n \n \n fn main() {"}, {"sha": "186d9019aaeba73b5c1672b56909b7a4079e5458", "filename": "src/test/compile-fail/E0253.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/3a2ad576c5d4b92bacc3355b14cc7a9bc704c782/src%2Ftest%2Fcompile-fail%2FE0253.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3a2ad576c5d4b92bacc3355b14cc7a9bc704c782/src%2Ftest%2Fcompile-fail%2FE0253.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2FE0253.rs?ref=3a2ad576c5d4b92bacc3355b14cc7a9bc704c782", "patch": "@@ -16,6 +16,5 @@ mod foo {\n \n use foo::MyTrait::do_something;\n     //~^ ERROR E0253\n-    //~|NOTE cannot be imported directly\n \n fn main() {}"}, {"sha": "46c74fe3735a36f0b1d6e79c0571a7c8e7e7a7c5", "filename": "src/test/compile-fail/E0254.rs", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/3a2ad576c5d4b92bacc3355b14cc7a9bc704c782/src%2Ftest%2Fcompile-fail%2FE0254.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3a2ad576c5d4b92bacc3355b14cc7a9bc704c782/src%2Ftest%2Fcompile-fail%2FE0254.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2FE0254.rs?ref=3a2ad576c5d4b92bacc3355b14cc7a9bc704c782", "patch": "@@ -12,7 +12,6 @@\n #![allow(unused_extern_crates)]\n \n extern crate alloc;\n-//~^ NOTE previous import of the extern crate `alloc` here\n \n mod foo {\n     pub trait alloc {\n@@ -22,7 +21,5 @@ mod foo {\n \n use foo::alloc;\n //~^ ERROR E0254\n-//~| NOTE `alloc` reimported here\n-//~| NOTE `alloc` must be defined only once in the type namespace of this module\n \n fn main() {}"}, {"sha": "5a47541c708bec187ee40a29793867aec21166f8", "filename": "src/test/compile-fail/E0259.rs", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/3a2ad576c5d4b92bacc3355b14cc7a9bc704c782/src%2Ftest%2Fcompile-fail%2FE0259.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3a2ad576c5d4b92bacc3355b14cc7a9bc704c782/src%2Ftest%2Fcompile-fail%2FE0259.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2FE0259.rs?ref=3a2ad576c5d4b92bacc3355b14cc7a9bc704c782", "patch": "@@ -12,12 +12,8 @@\n #![allow(unused_extern_crates)]\n \n extern crate alloc;\n-//~^ NOTE previous import of the extern crate `alloc` here\n \n extern crate libc as alloc;\n //~^ ERROR E0259\n-//~| NOTE `alloc` reimported here\n-//~| NOTE `alloc` must be defined only once in the type namespace of this module\n-//~| NOTE You can use `as` to change the binding name of the import\n \n fn main() {}"}, {"sha": "1b01bb12203d3949a5a85d6be3951bfbf8cd97fc", "filename": "src/test/compile-fail/E0260.rs", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/3a2ad576c5d4b92bacc3355b14cc7a9bc704c782/src%2Ftest%2Fcompile-fail%2FE0260.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3a2ad576c5d4b92bacc3355b14cc7a9bc704c782/src%2Ftest%2Fcompile-fail%2FE0260.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2FE0260.rs?ref=3a2ad576c5d4b92bacc3355b14cc7a9bc704c782", "patch": "@@ -12,12 +12,9 @@\n #![allow(unused_extern_crates)]\n \n extern crate alloc;\n-//~^ NOTE previous import of the extern crate `alloc` here\n \n mod alloc {\n //~^ ERROR the name `alloc` is defined multiple times [E0260]\n-//~| NOTE `alloc` redefined here\n-//~| NOTE `alloc` must be defined only once in the type namespace of this module\n     pub trait MyTrait {\n         fn do_something();\n     }"}, {"sha": "722f1c25e07d17365674d2fff578e2f9b5dcdd2e", "filename": "src/test/compile-fail/E0263.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3a2ad576c5d4b92bacc3355b14cc7a9bc704c782/src%2Ftest%2Fcompile-fail%2FE0263.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3a2ad576c5d4b92bacc3355b14cc7a9bc704c782/src%2Ftest%2Fcompile-fail%2FE0263.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2FE0263.rs?ref=3a2ad576c5d4b92bacc3355b14cc7a9bc704c782", "patch": "@@ -10,8 +10,6 @@\n \n fn foo<'a, 'b, 'a>(x: &'a str, y: &'b str) {\n     //~^ ERROR E0263\n-    //~| NOTE declared twice\n-    //~| NOTE previous declaration here\n }\n \n fn main() {}"}, {"sha": "6287256e866c9e948cc79d1291188979c932f372", "filename": "src/test/compile-fail/E0267.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/3a2ad576c5d4b92bacc3355b14cc7a9bc704c782/src%2Ftest%2Fcompile-fail%2FE0267.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3a2ad576c5d4b92bacc3355b14cc7a9bc704c782/src%2Ftest%2Fcompile-fail%2FE0267.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2FE0267.rs?ref=3a2ad576c5d4b92bacc3355b14cc7a9bc704c782", "patch": "@@ -10,5 +10,4 @@\n \n fn main() {\n     let w = || { break; }; //~ ERROR E0267\n-            //~| NOTE cannot break inside of a closure\n }"}, {"sha": "41e88e2f492a9c77a8441ddcaaa368dc07c1faff", "filename": "src/test/compile-fail/E0268.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/3a2ad576c5d4b92bacc3355b14cc7a9bc704c782/src%2Ftest%2Fcompile-fail%2FE0268.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3a2ad576c5d4b92bacc3355b14cc7a9bc704c782/src%2Ftest%2Fcompile-fail%2FE0268.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2FE0268.rs?ref=3a2ad576c5d4b92bacc3355b14cc7a9bc704c782", "patch": "@@ -10,5 +10,4 @@\n \n fn main() {\n     break; //~ ERROR E0268\n-    //~| NOTE cannot break outside of a loop\n }"}, {"sha": "4d1c50002a39c1f6e6b53dbdcd10d1a03fb00329", "filename": "src/test/compile-fail/E0277-2.rs", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/3a2ad576c5d4b92bacc3355b14cc7a9bc704c782/src%2Ftest%2Fcompile-fail%2FE0277-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3a2ad576c5d4b92bacc3355b14cc7a9bc704c782/src%2Ftest%2Fcompile-fail%2FE0277-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2FE0277-2.rs?ref=3a2ad576c5d4b92bacc3355b14cc7a9bc704c782", "patch": "@@ -25,9 +25,4 @@ fn is_send<T: Send>() { }\n fn main() {\n     is_send::<Foo>();\n     //~^ ERROR the trait bound `*const u8: std::marker::Send` is not satisfied in `Foo`\n-    //~| NOTE: `*const u8` cannot be sent between threads safely\n-    //~| NOTE: required because it appears within the type `Baz`\n-    //~| NOTE: required because it appears within the type `Bar`\n-    //~| NOTE: required because it appears within the type `Foo`\n-    //~| NOTE: required by `is_send`\n }"}, {"sha": "784f7465d439b293308922be286bd6ddaa8a7bf2", "filename": "src/test/compile-fail/E0277.rs", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/3a2ad576c5d4b92bacc3355b14cc7a9bc704c782/src%2Ftest%2Fcompile-fail%2FE0277.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3a2ad576c5d4b92bacc3355b14cc7a9bc704c782/src%2Ftest%2Fcompile-fail%2FE0277.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2FE0277.rs?ref=3a2ad576c5d4b92bacc3355b14cc7a9bc704c782", "patch": "@@ -20,13 +20,8 @@ fn some_func<T: Foo>(foo: T) {\n \n fn f(p: Path) { }\n //~^ ERROR the trait bound `[u8]: std::marker::Sized` is not satisfied in `std::path::Path`\n-//~| NOTE `[u8]` does not have a constant size known at compile-time\n-//~| NOTE required because it appears within the type `std::path::Path`\n-//~| NOTE all local variables must have a statically known size\n \n fn main() {\n     some_func(5i32);\n     //~^ ERROR the trait bound `i32: Foo` is not satisfied\n-    //~| NOTE the trait `Foo` is not implemented for `i32`\n-    //~| NOTE required by `some_func`\n }"}, {"sha": "afe4444c7afdfa4c265623269b4edb48a923c985", "filename": "src/test/compile-fail/E0297.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/3a2ad576c5d4b92bacc3355b14cc7a9bc704c782/src%2Ftest%2Fcompile-fail%2FE0297.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3a2ad576c5d4b92bacc3355b14cc7a9bc704c782/src%2Ftest%2Fcompile-fail%2FE0297.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2FE0297.rs?ref=3a2ad576c5d4b92bacc3355b14cc7a9bc704c782", "patch": "@@ -13,5 +13,4 @@ fn main() {\n \n     for Some(x) in xs {}\n     //~^ ERROR E0005\n-    //~| NOTE pattern `None` not covered\n }"}, {"sha": "06e98289b0d57ab20c9b9aa481b16713fd00479d", "filename": "src/test/compile-fail/E0301.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/3a2ad576c5d4b92bacc3355b14cc7a9bc704c782/src%2Ftest%2Fcompile-fail%2FE0301.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3a2ad576c5d4b92bacc3355b14cc7a9bc704c782/src%2Ftest%2Fcompile-fail%2FE0301.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2FE0301.rs?ref=3a2ad576c5d4b92bacc3355b14cc7a9bc704c782", "patch": "@@ -12,7 +12,6 @@ fn main() {\n     match Some(()) {\n         None => { },\n         option if option.take().is_none() => {}, //~ ERROR E0301\n-        //~| NOTE borrowed mutably in pattern guard\n         Some(_) => { }\n     }\n }"}, {"sha": "6a5ad40b10907222bad96a92c9b4096b46d019d4", "filename": "src/test/compile-fail/E0302.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/3a2ad576c5d4b92bacc3355b14cc7a9bc704c782/src%2Ftest%2Fcompile-fail%2FE0302.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3a2ad576c5d4b92bacc3355b14cc7a9bc704c782/src%2Ftest%2Fcompile-fail%2FE0302.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2FE0302.rs?ref=3a2ad576c5d4b92bacc3355b14cc7a9bc704c782", "patch": "@@ -12,7 +12,6 @@ fn main() {\n     match Some(()) {\n         None => { },\n         option if { option = None; false } => { }, //~ ERROR E0302\n-        //~| NOTE assignment in pattern guard\n         Some(_) => { }\n     }\n }"}, {"sha": "6027414fdbd4b197ca7fea0d9fc3b4736284814e", "filename": "src/test/compile-fail/E0303.rs", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/3a2ad576c5d4b92bacc3355b14cc7a9bc704c782/src%2Ftest%2Fcompile-fail%2FE0303.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3a2ad576c5d4b92bacc3355b14cc7a9bc704c782/src%2Ftest%2Fcompile-fail%2FE0303.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2FE0303.rs?ref=3a2ad576c5d4b92bacc3355b14cc7a9bc704c782", "patch": "@@ -12,10 +12,7 @@ fn main() {\n     match Some(\"hi\".to_string()) {\n         ref op_string_ref @ Some(s) => {},\n         //~^ ERROR pattern bindings are not allowed after an `@` [E0303]\n-        //~| NOTE not allowed after `@`\n         //~| ERROR E0009\n-        //~| NOTE by-move pattern here\n-        //~| NOTE both by-ref and by-move used\n         None => {},\n     }\n }"}, {"sha": "a1efcde42b05bdc9054a75624c2ecf2cf06827f4", "filename": "src/test/compile-fail/E0365.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3a2ad576c5d4b92bacc3355b14cc7a9bc704c782/src%2Ftest%2Fcompile-fail%2FE0365.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3a2ad576c5d4b92bacc3355b14cc7a9bc704c782/src%2Ftest%2Fcompile-fail%2FE0365.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2FE0365.rs?ref=3a2ad576c5d4b92bacc3355b14cc7a9bc704c782", "patch": "@@ -14,7 +14,5 @@ mod foo {\n \n pub use foo as foo2;\n //~^ ERROR `foo` is private, and cannot be reexported [E0365]\n-//~| NOTE reexport of private `foo`\n-//~| NOTE consider declaring type or module `foo` with `pub`\n \n fn main() {}"}, {"sha": "094ed35cc2d6dfd078a1b81bf08f7bfc05a45f2b", "filename": "src/test/compile-fail/E0375.rs", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/3a2ad576c5d4b92bacc3355b14cc7a9bc704c782/src%2Ftest%2Fcompile-fail%2FE0375.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3a2ad576c5d4b92bacc3355b14cc7a9bc704c782/src%2Ftest%2Fcompile-fail%2FE0375.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2FE0375.rs?ref=3a2ad576c5d4b92bacc3355b14cc7a9bc704c782", "patch": "@@ -21,8 +21,5 @@ struct Foo<T: ?Sized, U: ?Sized> {\n \n impl<T, U> CoerceUnsized<Foo<U, T>> for Foo<T, U> {}\n //~^ ERROR E0375\n-//~| NOTE requires multiple coercions\n-//~| NOTE `CoerceUnsized` may only be implemented for a coercion between structures with one field being coerced\n-//~| NOTE currently, 2 fields need coercions: b (T to U), c (U to T)\n \n fn main() {}"}, {"sha": "445831bf8d7f7d4ba885c791d534d8cab90f6191", "filename": "src/test/compile-fail/E0389.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/3a2ad576c5d4b92bacc3355b14cc7a9bc704c782/src%2Ftest%2Fcompile-fail%2FE0389.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3a2ad576c5d4b92bacc3355b14cc7a9bc704c782/src%2Ftest%2Fcompile-fail%2FE0389.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2FE0389.rs?ref=3a2ad576c5d4b92bacc3355b14cc7a9bc704c782", "patch": "@@ -16,6 +16,5 @@ fn main() {\n     let mut fancy = FancyNum{ num: 5 };\n     let fancy_ref = &(&mut fancy);\n     fancy_ref.num = 6; //~ ERROR E0389\n-                       //~^ NOTE assignment into an immutable reference\n     println!(\"{}\", fancy_ref.num);\n }"}, {"sha": "4c3efcf4e8d75637c03b00e46dfdc6c9a562d577", "filename": "src/test/compile-fail/E0392.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/3a2ad576c5d4b92bacc3355b14cc7a9bc704c782/src%2Ftest%2Fcompile-fail%2FE0392.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3a2ad576c5d4b92bacc3355b14cc7a9bc704c782/src%2Ftest%2Fcompile-fail%2FE0392.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2FE0392.rs?ref=3a2ad576c5d4b92bacc3355b14cc7a9bc704c782", "patch": "@@ -9,7 +9,6 @@\n // except according to those terms.\n \n enum Foo<T> { Bar } //~ ERROR E0392\n-                    //~| NOTE unused type parameter\n \n fn main() {\n }"}, {"sha": "9165bc2837b517968d34c3921a97c16aed798569", "filename": "src/test/compile-fail/E0393.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3a2ad576c5d4b92bacc3355b14cc7a9bc704c782/src%2Ftest%2Fcompile-fail%2FE0393.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3a2ad576c5d4b92bacc3355b14cc7a9bc704c782/src%2Ftest%2Fcompile-fail%2FE0393.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2FE0393.rs?ref=3a2ad576c5d4b92bacc3355b14cc7a9bc704c782", "patch": "@@ -12,8 +12,6 @@ trait A<T=Self> {}\n \n fn together_we_will_rule_the_galaxy(son: &A) {}\n //~^ ERROR E0393\n-//~| NOTE missing reference to `T`\n-//~| NOTE because of the default `Self` reference, type parameters must be specified on object types\n \n fn main() {\n }"}, {"sha": "dae8e14c5ef181e5a70fdf0a0aa080310c5aadfb", "filename": "src/test/compile-fail/E0394.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3a2ad576c5d4b92bacc3355b14cc7a9bc704c782/src%2Ftest%2Fcompile-fail%2FE0394.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3a2ad576c5d4b92bacc3355b14cc7a9bc704c782/src%2Ftest%2Fcompile-fail%2FE0394.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2FE0394.rs?ref=3a2ad576c5d4b92bacc3355b14cc7a9bc704c782", "patch": "@@ -13,8 +13,6 @@\n static A: u32 = 0;\n static B: u32 = A;\n //~^ ERROR E0394\n-//~| NOTE referring to another static by value\n-//~| NOTE use the address-of operator or a constant instead\n \n fn main() {\n }"}, {"sha": "00008ea6b6f376a08a4460e2a8e1b2d10befb2e7", "filename": "src/test/compile-fail/E0395.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/3a2ad576c5d4b92bacc3355b14cc7a9bc704c782/src%2Ftest%2Fcompile-fail%2FE0395.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3a2ad576c5d4b92bacc3355b14cc7a9bc704c782/src%2Ftest%2Fcompile-fail%2FE0395.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2FE0395.rs?ref=3a2ad576c5d4b92bacc3355b14cc7a9bc704c782", "patch": "@@ -12,6 +12,5 @@ static FOO: i32 = 42;\n static BAR: i32 = 42;\n \n static BAZ: bool = { (&FOO as *const i32) == (&BAR as *const i32) }; //~ ERROR E0395\n-                   //~| NOTE comparing raw pointers in static\n fn main() {\n }"}, {"sha": "7f34acdfb90075f32480553b877b6573c223ab06", "filename": "src/test/compile-fail/E0396.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/3a2ad576c5d4b92bacc3355b14cc7a9bc704c782/src%2Ftest%2Fcompile-fail%2FE0396.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3a2ad576c5d4b92bacc3355b14cc7a9bc704c782/src%2Ftest%2Fcompile-fail%2FE0396.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2FE0396.rs?ref=3a2ad576c5d4b92bacc3355b14cc7a9bc704c782", "patch": "@@ -11,7 +11,6 @@\n const REG_ADDR: *const u8 = 0x5f3759df as *const u8;\n \n const VALUE: u8 = unsafe { *REG_ADDR }; //~ ERROR E0396\n-                  //~| NOTE dereference of raw pointer in constant\n \n fn main() {\n }"}, {"sha": "6a68013dc6ffe3c675751599d2b55c8625370d06", "filename": "src/test/compile-fail/E0403.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3a2ad576c5d4b92bacc3355b14cc7a9bc704c782/src%2Ftest%2Fcompile-fail%2FE0403.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3a2ad576c5d4b92bacc3355b14cc7a9bc704c782/src%2Ftest%2Fcompile-fail%2FE0403.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2FE0403.rs?ref=3a2ad576c5d4b92bacc3355b14cc7a9bc704c782", "patch": "@@ -9,8 +9,6 @@\n // except according to those terms.\n \n fn foo<T, T>(s: T, u: T) {} //~ ERROR E0403\n-                            //~| NOTE already used\n-                            //~| NOTE first use of `T`\n \n fn main() {\n }"}, {"sha": "41d8b4513ce53ce2c8cf4e85d3bd2153639548e7", "filename": "src/test/compile-fail/E0407.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/3a2ad576c5d4b92bacc3355b14cc7a9bc704c782/src%2Ftest%2Fcompile-fail%2FE0407.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3a2ad576c5d4b92bacc3355b14cc7a9bc704c782/src%2Ftest%2Fcompile-fail%2FE0407.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2FE0407.rs?ref=3a2ad576c5d4b92bacc3355b14cc7a9bc704c782", "patch": "@@ -18,7 +18,6 @@ impl Foo for Bar {\n     fn a() {}\n     fn b() {}\n     //~^ ERROR E0407\n-    //~| NOTE not a member of trait `Foo`\n }\n \n fn main() {"}, {"sha": "8ddeb20afdc1e1497b372edcc4683ccd18942c49", "filename": "src/test/compile-fail/E0408.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/3a2ad576c5d4b92bacc3355b14cc7a9bc704c782/src%2Ftest%2Fcompile-fail%2FE0408.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3a2ad576c5d4b92bacc3355b14cc7a9bc704c782/src%2Ftest%2Fcompile-fail%2FE0408.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2FE0408.rs?ref=3a2ad576c5d4b92bacc3355b14cc7a9bc704c782", "patch": "@@ -13,7 +13,6 @@ fn main() {\n \n     match x {\n         Some(y) | None => {} //~  ERROR variable `y` is not bound in all patterns\n-        _ => ()              //~| NOTE pattern doesn't bind `y`\n-                             //~| NOTE variable not in all patterns\n+        _ => ()\n     }\n }"}, {"sha": "d6261d3a74e1554a8ce6ecdea01f1bad2734c148", "filename": "src/test/compile-fail/E0426.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/3a2ad576c5d4b92bacc3355b14cc7a9bc704c782/src%2Ftest%2Fcompile-fail%2FE0426.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3a2ad576c5d4b92bacc3355b14cc7a9bc704c782/src%2Ftest%2Fcompile-fail%2FE0426.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2FE0426.rs?ref=3a2ad576c5d4b92bacc3355b14cc7a9bc704c782", "patch": "@@ -12,6 +12,5 @@ fn main () {\n     loop {\n         break 'a;\n         //~^ ERROR E0426\n-        //~| NOTE undeclared label `'a`\n     }\n }"}, {"sha": "3c709f3a399227fecda203ec702ca83b242d55ab", "filename": "src/test/compile-fail/E0428.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3a2ad576c5d4b92bacc3355b14cc7a9bc704c782/src%2Ftest%2Fcompile-fail%2FE0428.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3a2ad576c5d4b92bacc3355b14cc7a9bc704c782/src%2Ftest%2Fcompile-fail%2FE0428.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2FE0428.rs?ref=3a2ad576c5d4b92bacc3355b14cc7a9bc704c782", "patch": "@@ -10,8 +10,6 @@\n \n struct Bar; //~ previous definition of the type `Bar` here\n struct Bar; //~ ERROR E0428\n-            //~| NOTE `Bar` redefined here\n-            //~| NOTE `Bar` must be defined only once in the type namespace of this module\n \n fn main () {\n }"}, {"sha": "5246fda6aaf6fb20f7ab5d1eed02af6d54a8568a", "filename": "src/test/compile-fail/E0435.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/3a2ad576c5d4b92bacc3355b14cc7a9bc704c782/src%2Ftest%2Fcompile-fail%2FE0435.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3a2ad576c5d4b92bacc3355b14cc7a9bc704c782/src%2Ftest%2Fcompile-fail%2FE0435.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2FE0435.rs?ref=3a2ad576c5d4b92bacc3355b14cc7a9bc704c782", "patch": "@@ -11,5 +11,4 @@\n fn main () {\n     let foo = 42u32;\n     let _: [u8; foo]; //~ ERROR E0435\n-    //~| NOTE non-constant value\n }"}, {"sha": "7440a82773e7af4675c6cd91096b8dc38054e1e3", "filename": "src/test/compile-fail/E0437.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/3a2ad576c5d4b92bacc3355b14cc7a9bc704c782/src%2Ftest%2Fcompile-fail%2FE0437.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3a2ad576c5d4b92bacc3355b14cc7a9bc704c782/src%2Ftest%2Fcompile-fail%2FE0437.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2FE0437.rs?ref=3a2ad576c5d4b92bacc3355b14cc7a9bc704c782", "patch": "@@ -12,7 +12,6 @@ trait Foo {}\n \n impl Foo for i32 {\n     type Bar = bool; //~ ERROR E0437\n-    //~| NOTE not a member of trait `Foo`\n }\n \n fn main () {"}, {"sha": "61d25134993f03049be0054dab1d161fb23908a7", "filename": "src/test/compile-fail/E0438.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/3a2ad576c5d4b92bacc3355b14cc7a9bc704c782/src%2Ftest%2Fcompile-fail%2FE0438.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3a2ad576c5d4b92bacc3355b14cc7a9bc704c782/src%2Ftest%2Fcompile-fail%2FE0438.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2FE0438.rs?ref=3a2ad576c5d4b92bacc3355b14cc7a9bc704c782", "patch": "@@ -13,7 +13,6 @@ trait Bar {}\n \n impl Bar for i32 {\n     const BAR: bool = true; //~ ERROR E0438\n-        //~| NOTE not a member of trait `Bar`\n }\n \n fn main () {"}, {"sha": "a1447e7ebcddca230ab2cc8b962bddfafa4cc3b2", "filename": "src/test/compile-fail/E0445.rs", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/3a2ad576c5d4b92bacc3355b14cc7a9bc704c782/src%2Ftest%2Fcompile-fail%2FE0445.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3a2ad576c5d4b92bacc3355b14cc7a9bc704c782/src%2Ftest%2Fcompile-fail%2FE0445.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2FE0445.rs?ref=3a2ad576c5d4b92bacc3355b14cc7a9bc704c782", "patch": "@@ -14,12 +14,9 @@ trait Foo {\n \n pub trait Bar : Foo {}\n //~^ ERROR private trait `Foo` in public interface [E0445]\n-//~| NOTE private trait can't be public\n pub struct Bar2<T: Foo>(pub T);\n //~^ ERROR private trait `Foo` in public interface [E0445]\n-//~| NOTE private trait can't be public\n pub fn foo<T: Foo> (t: T) {}\n //~^ ERROR private trait `Foo` in public interface [E0445]\n-//~| NOTE private trait can't be public\n \n fn main() {}"}, {"sha": "c576661828471abf71e304c1cae2e8c69de94260", "filename": "src/test/compile-fail/E0446.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/3a2ad576c5d4b92bacc3355b14cc7a9bc704c782/src%2Ftest%2Fcompile-fail%2FE0446.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3a2ad576c5d4b92bacc3355b14cc7a9bc704c782/src%2Ftest%2Fcompile-fail%2FE0446.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2FE0446.rs?ref=3a2ad576c5d4b92bacc3355b14cc7a9bc704c782", "patch": "@@ -12,7 +12,6 @@ mod Foo {\n     struct Bar(u32);\n \n     pub fn bar() -> Bar { //~ ERROR E0446\n-                          //~| NOTE can't leak private type\n         Bar(0)\n     }\n }"}, {"sha": "ac365db33e5cdadc546c7f4e7cbe4b377b75a652", "filename": "src/test/compile-fail/E0449.rs", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/3a2ad576c5d4b92bacc3355b14cc7a9bc704c782/src%2Ftest%2Fcompile-fail%2FE0449.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3a2ad576c5d4b92bacc3355b14cc7a9bc704c782/src%2Ftest%2Fcompile-fail%2FE0449.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2FE0449.rs?ref=3a2ad576c5d4b92bacc3355b14cc7a9bc704c782", "patch": "@@ -15,13 +15,9 @@ trait Foo {\n }\n \n pub impl Bar {} //~ ERROR E0449\n-                //~| NOTE `pub` not needed here\n-                //~| NOTE place qualifiers on individual impl items instead\n \n pub impl Foo for Bar { //~ ERROR E0449\n-                       //~| NOTE `pub` not needed here\n     pub fn foo() {} //~ ERROR E0449\n-                    //~| NOTE `pub` not needed here\n }\n \n fn main() {"}, {"sha": "af4e7d628bb25e331e2493e5c8ae16586977bdf5", "filename": "src/test/compile-fail/E0451.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3a2ad576c5d4b92bacc3355b14cc7a9bc704c782/src%2Ftest%2Fcompile-fail%2FE0451.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3a2ad576c5d4b92bacc3355b14cc7a9bc704c782/src%2Ftest%2Fcompile-fail%2FE0451.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2FE0451.rs?ref=3a2ad576c5d4b92bacc3355b14cc7a9bc704c782", "patch": "@@ -22,10 +22,8 @@ mod Bar {\n \n fn pat_match(foo: Bar::Foo) {\n     let Bar::Foo{a:a, b:b} = foo; //~ ERROR E0451\n-                                  //~^ NOTE field `b` is private\n }\n \n fn main() {\n     let f = Bar::Foo{ a: 0, b: 0 }; //~ ERROR E0451\n-                                    //~^ NOTE field `b` is private\n }"}, {"sha": "8e51b84bab8e600895b761c68a873277986a52bf", "filename": "src/test/compile-fail/E0453.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3a2ad576c5d4b92bacc3355b14cc7a9bc704c782/src%2Ftest%2Fcompile-fail%2FE0453.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3a2ad576c5d4b92bacc3355b14cc7a9bc704c782/src%2Ftest%2Fcompile-fail%2FE0453.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2FE0453.rs?ref=3a2ad576c5d4b92bacc3355b14cc7a9bc704c782", "patch": "@@ -9,10 +9,8 @@\n // except according to those terms.\n \n #![forbid(non_snake_case)]\n-//~^ NOTE `forbid` level set here\n \n #[allow(non_snake_case)]\n //~^ ERROR allow(non_snake_case) overruled by outer forbid(non_snake_case)\n-//~| NOTE overruled by previous forbid\n fn main() {\n }"}, {"sha": "afd0f5f5e461ef59d31fc22978ec3cd04310753d", "filename": "src/test/compile-fail/E0454.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/3a2ad576c5d4b92bacc3355b14cc7a9bc704c782/src%2Ftest%2Fcompile-fail%2FE0454.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3a2ad576c5d4b92bacc3355b14cc7a9bc704c782/src%2Ftest%2Fcompile-fail%2FE0454.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2FE0454.rs?ref=3a2ad576c5d4b92bacc3355b14cc7a9bc704c782", "patch": "@@ -10,7 +10,6 @@\n \n #[link(name = \"\")] extern {}\n //~^ ERROR E0454\n-//~| NOTE empty name given\n \n fn main() {\n }"}, {"sha": "fea27ef8115866cf925cd483753b352b7bf3f00b", "filename": "src/test/compile-fail/E0458.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3a2ad576c5d4b92bacc3355b14cc7a9bc704c782/src%2Ftest%2Fcompile-fail%2FE0458.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3a2ad576c5d4b92bacc3355b14cc7a9bc704c782/src%2Ftest%2Fcompile-fail%2FE0458.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2FE0458.rs?ref=3a2ad576c5d4b92bacc3355b14cc7a9bc704c782", "patch": "@@ -9,9 +9,7 @@\n // except according to those terms.\n \n #[link(kind = \"wonderful_unicorn\")] extern {} //~ ERROR E0458\n-                                              //~| NOTE unknown kind\n                                               //~| ERROR E0459\n-                                              //~| NOTE missing `name` argument\n \n fn main() {\n }"}, {"sha": "dc7ac714f22395feddc48a4e5f71dc1ef7553871", "filename": "src/test/compile-fail/E0459.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/3a2ad576c5d4b92bacc3355b14cc7a9bc704c782/src%2Ftest%2Fcompile-fail%2FE0459.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3a2ad576c5d4b92bacc3355b14cc7a9bc704c782/src%2Ftest%2Fcompile-fail%2FE0459.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2FE0459.rs?ref=3a2ad576c5d4b92bacc3355b14cc7a9bc704c782", "patch": "@@ -9,7 +9,6 @@\n // except according to those terms.\n \n #[link(kind = \"dylib\")] extern {} //~ ERROR E0459\n-                                  //~| NOTE missing `name` argument\n \n fn main() {\n }"}, {"sha": "aae83975b22f8a81cf119a322bcccc1bb6222d04", "filename": "src/test/compile-fail/E0463.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/3a2ad576c5d4b92bacc3355b14cc7a9bc704c782/src%2Ftest%2Fcompile-fail%2FE0463.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3a2ad576c5d4b92bacc3355b14cc7a9bc704c782/src%2Ftest%2Fcompile-fail%2FE0463.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2FE0463.rs?ref=3a2ad576c5d4b92bacc3355b14cc7a9bc704c782", "patch": "@@ -11,7 +11,6 @@\n #![feature(plugin)]\n #![plugin(cookie_monster)]\n //~^ ERROR E0463\n-//~| NOTE can't find crate\n extern crate cake_is_a_lie;\n \n fn main() {"}, {"sha": "4ca3cd9c13da60a26586e54da1fe11ada301b509", "filename": "src/test/compile-fail/E0496.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3a2ad576c5d4b92bacc3355b14cc7a9bc704c782/src%2Ftest%2Fcompile-fail%2FE0496.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3a2ad576c5d4b92bacc3355b14cc7a9bc704c782/src%2Ftest%2Fcompile-fail%2FE0496.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2FE0496.rs?ref=3a2ad576c5d4b92bacc3355b14cc7a9bc704c782", "patch": "@@ -13,9 +13,7 @@ struct Foo<'a> {\n }\n \n impl<'a> Foo<'a> {\n-   //~^  NOTE first declared here\n     fn f<'a>(x: &'a i32) { //~ ERROR E0496\n-       //~^ NOTE lifetime 'a already in scope\n     }\n }\n "}, {"sha": "561223ccdf11e8755cf58417f4102f78ae759ebe", "filename": "src/test/compile-fail/E0517.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/3a2ad576c5d4b92bacc3355b14cc7a9bc704c782/src%2Ftest%2Fcompile-fail%2FE0517.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3a2ad576c5d4b92bacc3355b14cc7a9bc704c782/src%2Ftest%2Fcompile-fail%2FE0517.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2FE0517.rs?ref=3a2ad576c5d4b92bacc3355b14cc7a9bc704c782", "patch": "@@ -9,16 +9,16 @@\n // except according to those terms.\n \n #[repr(C)] //~ ERROR: E0517\n-type Foo = u8; //~ NOTE: not a struct, enum or union\n+type Foo = u8;\n \n #[repr(packed)] //~ ERROR: E0517\n-enum Foo2 {Bar, Baz} //~ NOTE: not a struct\n+enum Foo2 {Bar, Baz}\n \n #[repr(u8)] //~ ERROR: E0517\n-struct Foo3 {bar: bool, baz: bool} //~ NOTE: not an enum\n+struct Foo3 {bar: bool, baz: bool}\n \n #[repr(C)] //~ ERROR: E0517\n-impl Foo3 { //~ NOTE: not a struct, enum or union\n+impl Foo3 {\n }\n \n fn main() {"}, {"sha": "6d5b6e48e0dabc834af58bac0f50aff8f4781e5c", "filename": "src/test/compile-fail/E0518.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/3a2ad576c5d4b92bacc3355b14cc7a9bc704c782/src%2Ftest%2Fcompile-fail%2FE0518.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3a2ad576c5d4b92bacc3355b14cc7a9bc704c782/src%2Ftest%2Fcompile-fail%2FE0518.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2FE0518.rs?ref=3a2ad576c5d4b92bacc3355b14cc7a9bc704c782", "patch": "@@ -9,10 +9,10 @@\n // except according to those terms.\n \n #[inline(always)] //~ ERROR: E0518\n-struct Foo;       //~ NOTE: not a function\n+struct Foo;\n \n #[inline(never)] //~ ERROR: E0518\n-impl Foo {       //~ NOTE: not a function\n+impl Foo {\n }\n \n fn main() {"}, {"sha": "eae5b11a8190492c18bf083b829f595b6d82a05a", "filename": "src/test/compile-fail/E0520.rs", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/3a2ad576c5d4b92bacc3355b14cc7a9bc704c782/src%2Ftest%2Fcompile-fail%2FE0520.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3a2ad576c5d4b92bacc3355b14cc7a9bc704c782/src%2Ftest%2Fcompile-fail%2FE0520.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2FE0520.rs?ref=3a2ad576c5d4b92bacc3355b14cc7a9bc704c782", "patch": "@@ -19,15 +19,12 @@ impl<T> SpaceLlama for T {\n }\n \n impl<T: Clone> SpaceLlama for T {\n-//~^ NOTE parent `impl` is here\n     fn fly(&self) {}\n }\n \n impl SpaceLlama for i32 {\n     default fn fly(&self) {}\n     //~^ ERROR E0520\n-    //~| NOTE cannot specialize default item `fly`\n-    //~| NOTE `fly` in the parent `impl` must be marked `default`\n }\n \n fn main() {"}, {"sha": "67d222e867e638dc2c3dfb975aea834a6c321bb1", "filename": "src/test/compile-fail/E0527.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/3a2ad576c5d4b92bacc3355b14cc7a9bc704c782/src%2Ftest%2Fcompile-fail%2FE0527.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3a2ad576c5d4b92bacc3355b14cc7a9bc704c782/src%2Ftest%2Fcompile-fail%2FE0527.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2FE0527.rs?ref=3a2ad576c5d4b92bacc3355b14cc7a9bc704c782", "patch": "@@ -15,7 +15,6 @@ fn main() {\n     match r {\n         &[a, b] => {\n             //~^ ERROR E0527\n-            //~| NOTE expected 4 elements\n             println!(\"a={}, b={}\", a, b);\n         }\n     }"}, {"sha": "e2aa2c067cbcd1528d12bbdeb5a535e882820d9f", "filename": "src/test/compile-fail/E0528.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/3a2ad576c5d4b92bacc3355b14cc7a9bc704c782/src%2Ftest%2Fcompile-fail%2FE0528.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3a2ad576c5d4b92bacc3355b14cc7a9bc704c782/src%2Ftest%2Fcompile-fail%2FE0528.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2FE0528.rs?ref=3a2ad576c5d4b92bacc3355b14cc7a9bc704c782", "patch": "@@ -15,7 +15,6 @@ fn main() {\n     match r {\n         &[a, b, c, rest..] => {\n         //~^ ERROR E0528\n-        //~| NOTE pattern cannot match array of 2 elements\n         }\n     }\n }"}, {"sha": "5262ad7b716f5e25be27bb6842a9981dba335ec9", "filename": "src/test/compile-fail/E0529.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/3a2ad576c5d4b92bacc3355b14cc7a9bc704c782/src%2Ftest%2Fcompile-fail%2FE0529.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3a2ad576c5d4b92bacc3355b14cc7a9bc704c782/src%2Ftest%2Fcompile-fail%2FE0529.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2FE0529.rs?ref=3a2ad576c5d4b92bacc3355b14cc7a9bc704c782", "patch": "@@ -15,7 +15,6 @@ fn main() {\n     match r {\n         [a, b] => {\n         //~^ ERROR E0529\n-        //~| NOTE pattern cannot match with input type `f32`\n         }\n     }\n }"}, {"sha": "64a6ee4cf5872b658cfe88a4a4d8ef666b0c4cfb", "filename": "src/test/compile-fail/E0558.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/3a2ad576c5d4b92bacc3355b14cc7a9bc704c782/src%2Ftest%2Fcompile-fail%2FE0558.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3a2ad576c5d4b92bacc3355b14cc7a9bc704c782/src%2Ftest%2Fcompile-fail%2FE0558.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2FE0558.rs?ref=3a2ad576c5d4b92bacc3355b14cc7a9bc704c782", "patch": "@@ -10,7 +10,6 @@\n \n #[export_name]\n //~^ ERROR E0558\n-//~| NOTE did you mean #[export_name=\"*\"]?\n \n pub fn something() {}\n "}, {"sha": "da0f692cc2839c04e57a11fd93b3aedd54e10442", "filename": "src/test/compile-fail/E0559.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3a2ad576c5d4b92bacc3355b14cc7a9bc704c782/src%2Ftest%2Fcompile-fail%2FE0559.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3a2ad576c5d4b92bacc3355b14cc7a9bc704c782/src%2Ftest%2Fcompile-fail%2FE0559.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2FE0559.rs?ref=3a2ad576c5d4b92bacc3355b14cc7a9bc704c782", "patch": "@@ -15,6 +15,4 @@ enum Field {\n fn main() {\n     let s = Field::Fool { joke: 0 };\n     //~^ ERROR E0559\n-    //~| NOTE `Field::Fool` does not have this field\n-    //~| NOTE available fields are: `x`\n }"}, {"sha": "bbb7f08d62e35ded215a12113c8b4522185525de", "filename": "src/test/compile-fail/E0560.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3a2ad576c5d4b92bacc3355b14cc7a9bc704c782/src%2Ftest%2Fcompile-fail%2FE0560.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3a2ad576c5d4b92bacc3355b14cc7a9bc704c782/src%2Ftest%2Fcompile-fail%2FE0560.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2FE0560.rs?ref=3a2ad576c5d4b92bacc3355b14cc7a9bc704c782", "patch": "@@ -15,6 +15,4 @@ struct Simba {\n fn main() {\n     let s = Simba { mother: 1, father: 0 };\n     //~^ ERROR E0560\n-    //~| NOTE `Simba` does not have this field\n-    //~| NOTE available fields are: `mother`\n }"}, {"sha": "4b5b8beb36865dedcf38b33b40756c7f3464d530", "filename": "src/test/compile-fail/E0605.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3a2ad576c5d4b92bacc3355b14cc7a9bc704c782/src%2Ftest%2Fcompile-fail%2FE0605.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3a2ad576c5d4b92bacc3355b14cc7a9bc704c782/src%2Ftest%2Fcompile-fail%2FE0605.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2FE0605.rs?ref=3a2ad576c5d4b92bacc3355b14cc7a9bc704c782", "patch": "@@ -11,9 +11,7 @@\n fn main() {\n     let x = 0u8;\n     x as Vec<u8>; //~ ERROR E0605\n-                  //~| NOTE an `as` expression can only be used to convert between primitive types\n \n     let v = 0 as *const u8;\n     v as &u8; //~ ERROR E0605\n-              //~| NOTE an `as` expression can only be used to convert between primitive types\n }"}, {"sha": "f28ac200dea5a29fe6be2ec6fafb8e8028fb4729", "filename": "src/test/compile-fail/E0618.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/3a2ad576c5d4b92bacc3355b14cc7a9bc704c782/src%2Ftest%2Fcompile-fail%2FE0618.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3a2ad576c5d4b92bacc3355b14cc7a9bc704c782/src%2Ftest%2Fcompile-fail%2FE0618.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2FE0618.rs?ref=3a2ad576c5d4b92bacc3355b14cc7a9bc704c782", "patch": "@@ -14,7 +14,6 @@ enum X {\n \n fn main() {\n     X::Entry(); //~ ERROR expected function, found `X::Entry` [E0618]\n-                //~| HELP did you mean to write `X::Entry`?\n     let x = 0i32;\n     x(); //~ ERROR expected function, found `i32` [E0618]\n }"}]}