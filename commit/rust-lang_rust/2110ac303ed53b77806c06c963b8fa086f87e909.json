{"sha": "2110ac303ed53b77806c06c963b8fa086f87e909", "node_id": "MDY6Q29tbWl0NzI0NzEyOjIxMTBhYzMwM2VkNTNiNzc4MDZjMDZjOTYzYjhmYTA4NmY4N2U5MDk=", "commit": {"author": {"name": "Will Crichton", "email": "wcrichto@cs.stanford.edu", "date": "2021-08-25T22:10:33Z"}, "committer": {"name": "Will Crichton", "email": "wcrichto@cs.stanford.edu", "date": "2021-08-25T22:10:33Z"}, "message": "Add optimized sparse-hybrid / dense-hybrid intersect", "tree": {"sha": "1ab2a54f1d6e1ab1f7feb851720790565f7c938d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1ab2a54f1d6e1ab1f7feb851720790565f7c938d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2110ac303ed53b77806c06c963b8fa086f87e909", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2110ac303ed53b77806c06c963b8fa086f87e909", "html_url": "https://github.com/rust-lang/rust/commit/2110ac303ed53b77806c06c963b8fa086f87e909", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2110ac303ed53b77806c06c963b8fa086f87e909/comments", "author": {"login": "willcrichton", "id": 663326, "node_id": "MDQ6VXNlcjY2MzMyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/663326?v=4", "gravatar_id": "", "url": "https://api.github.com/users/willcrichton", "html_url": "https://github.com/willcrichton", "followers_url": "https://api.github.com/users/willcrichton/followers", "following_url": "https://api.github.com/users/willcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/willcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/willcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/willcrichton/subscriptions", "organizations_url": "https://api.github.com/users/willcrichton/orgs", "repos_url": "https://api.github.com/users/willcrichton/repos", "events_url": "https://api.github.com/users/willcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/willcrichton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "willcrichton", "id": 663326, "node_id": "MDQ6VXNlcjY2MzMyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/663326?v=4", "gravatar_id": "", "url": "https://api.github.com/users/willcrichton", "html_url": "https://github.com/willcrichton", "followers_url": "https://api.github.com/users/willcrichton/followers", "following_url": "https://api.github.com/users/willcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/willcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/willcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/willcrichton/subscriptions", "organizations_url": "https://api.github.com/users/willcrichton/orgs", "repos_url": "https://api.github.com/users/willcrichton/repos", "events_url": "https://api.github.com/users/willcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/willcrichton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "415d5e860f2ef823564a8f0e704d4f35e5d07db8", "url": "https://api.github.com/repos/rust-lang/rust/commits/415d5e860f2ef823564a8f0e704d4f35e5d07db8", "html_url": "https://github.com/rust-lang/rust/commit/415d5e860f2ef823564a8f0e704d4f35e5d07db8"}], "stats": {"total": 27, "additions": 21, "deletions": 6}, "files": [{"sha": "8793d56792a7ed199850b6a37aaa7533be4085ec", "filename": "compiler/rustc_index/src/bit_set.rs", "status": "modified", "additions": 21, "deletions": 6, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/2110ac303ed53b77806c06c963b8fa086f87e909/compiler%2Frustc_index%2Fsrc%2Fbit_set.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2110ac303ed53b77806c06c963b8fa086f87e909/compiler%2Frustc_index%2Fsrc%2Fbit_set.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_index%2Fsrc%2Fbit_set.rs?ref=2110ac303ed53b77806c06c963b8fa086f87e909", "patch": "@@ -267,6 +267,16 @@ fn sparse_intersect<T: Idx>(\n     set.elems.len() != size\n }\n \n+fn dense_sparse_intersect<T: Idx>(\n+    dense: &BitSet<T>,\n+    sparse: &SparseBitSet<T>,\n+) -> (SparseBitSet<T>, bool) {\n+    let n = dense.count();\n+    let mut sparse_copy = sparse.clone();\n+    sparse_intersect(&mut sparse_copy, |el| !dense.contains(*el));\n+    (sparse_copy, dense.count() != n)\n+}\n+\n impl<T: Idx> BitRelations<HybridBitSet<T>> for BitSet<T> {\n     fn union(&mut self, other: &HybridBitSet<T>) -> bool {\n         assert_eq!(self.domain_size, other.domain_size());\n@@ -292,11 +302,9 @@ impl<T: Idx> BitRelations<HybridBitSet<T>> for BitSet<T> {\n         assert_eq!(self.domain_size, other.domain_size());\n         match other {\n             HybridBitSet::Sparse(sparse) => {\n-                let n = self.count();\n-                let mut sparse_copy = sparse.clone();\n-                sparse_intersect(&mut sparse_copy, |el| !self.contains(*el));\n-                *self = sparse_copy.to_dense();\n-                self.count() != n\n+                let (updated, changed) = dense_sparse_intersect(self, sparse);\n+                *self = updated.to_dense();\n+                changed\n             }\n             HybridBitSet::Dense(dense) => self.intersect(dense),\n         }\n@@ -364,7 +372,14 @@ impl<T: Idx> BitRelations<HybridBitSet<T>> for HybridBitSet<T> {\n             HybridBitSet::Sparse(self_sparse) => {\n                 sparse_intersect(self_sparse, |elem| other.contains(*elem))\n             }\n-            HybridBitSet::Dense(self_dense) => self_dense.intersect(other),\n+            HybridBitSet::Dense(self_dense) => match other {\n+                HybridBitSet::Sparse(other_sparse) => {\n+                    let (updated, changed) = dense_sparse_intersect(self_dense, other_sparse);\n+                    *self = HybridBitSet::Sparse(updated);\n+                    changed\n+                }\n+                HybridBitSet::Dense(other_dense) => self_dense.intersect(other_dense),\n+            },\n         }\n     }\n }"}]}