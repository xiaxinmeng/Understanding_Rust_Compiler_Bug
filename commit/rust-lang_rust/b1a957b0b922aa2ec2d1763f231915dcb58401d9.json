{"sha": "b1a957b0b922aa2ec2d1763f231915dcb58401d9", "node_id": "C_kwDOAAsO6NoAKGIxYTk1N2IwYjkyMmFhMmVjMmQxNzYzZjIzMTkxNWRjYjU4NDAxZDk", "commit": {"author": {"name": "Michael Goulet", "email": "michael@errs.io", "date": "2023-03-18T19:40:00Z"}, "committer": {"name": "Michael Goulet", "email": "michael@errs.io", "date": "2023-03-21T15:38:52Z"}, "message": "query_keys_local is conditional on separate_provide_if_extern", "tree": {"sha": "80650ac411507322e3756cb1b58e3fe599facd9e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/80650ac411507322e3756cb1b58e3fe599facd9e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b1a957b0b922aa2ec2d1763f231915dcb58401d9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b1a957b0b922aa2ec2d1763f231915dcb58401d9", "html_url": "https://github.com/rust-lang/rust/commit/b1a957b0b922aa2ec2d1763f231915dcb58401d9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b1a957b0b922aa2ec2d1763f231915dcb58401d9/comments", "author": {"login": "compiler-errors", "id": 3674314, "node_id": "MDQ6VXNlcjM2NzQzMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3674314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/compiler-errors", "html_url": "https://github.com/compiler-errors", "followers_url": "https://api.github.com/users/compiler-errors/followers", "following_url": "https://api.github.com/users/compiler-errors/following{/other_user}", "gists_url": "https://api.github.com/users/compiler-errors/gists{/gist_id}", "starred_url": "https://api.github.com/users/compiler-errors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/compiler-errors/subscriptions", "organizations_url": "https://api.github.com/users/compiler-errors/orgs", "repos_url": "https://api.github.com/users/compiler-errors/repos", "events_url": "https://api.github.com/users/compiler-errors/events{/privacy}", "received_events_url": "https://api.github.com/users/compiler-errors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "compiler-errors", "id": 3674314, "node_id": "MDQ6VXNlcjM2NzQzMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3674314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/compiler-errors", "html_url": "https://github.com/compiler-errors", "followers_url": "https://api.github.com/users/compiler-errors/followers", "following_url": "https://api.github.com/users/compiler-errors/following{/other_user}", "gists_url": "https://api.github.com/users/compiler-errors/gists{/gist_id}", "starred_url": "https://api.github.com/users/compiler-errors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/compiler-errors/subscriptions", "organizations_url": "https://api.github.com/users/compiler-errors/orgs", "repos_url": "https://api.github.com/users/compiler-errors/repos", "events_url": "https://api.github.com/users/compiler-errors/events{/privacy}", "received_events_url": "https://api.github.com/users/compiler-errors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d213114cb5ad5bb525e88ec2d2f8e934f8a8f8b8", "url": "https://api.github.com/repos/rust-lang/rust/commits/d213114cb5ad5bb525e88ec2d2f8e934f8a8f8b8", "html_url": "https://github.com/rust-lang/rust/commit/d213114cb5ad5bb525e88ec2d2f8e934f8a8f8b8"}], "stats": {"total": 29, "additions": 14, "deletions": 15}, "files": [{"sha": "30246fe4dbebc8a6404a4b17e3da6caf94e0f698", "filename": "compiler/rustc_middle/src/ty/query.rs", "status": "modified", "additions": 14, "deletions": 15, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/b1a957b0b922aa2ec2d1763f231915dcb58401d9/compiler%2Frustc_middle%2Fsrc%2Fty%2Fquery.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b1a957b0b922aa2ec2d1763f231915dcb58401d9/compiler%2Frustc_middle%2Fsrc%2Fty%2Fquery.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fty%2Fquery.rs?ref=b1a957b0b922aa2ec2d1763f231915dcb58401d9", "patch": "@@ -151,21 +151,17 @@ macro_rules! query_if_arena {\n     };\n }\n \n-macro_rules! separate_provide_local_decl {\n-    ([][$name:ident]) => {\n-        for<'tcx> fn(\n-            TyCtxt<'tcx>,\n-            query_keys::$name<'tcx>,\n-        ) -> query_provided::$name<'tcx>\n+/// If `separate_provide_if_extern`, then the key can be projected to its\n+/// local key via `<$K as AsLocalKey>::LocalKey`.\n+macro_rules! local_key_if_separate_extern {\n+    ([] $($K:tt)*) => {\n+        $($K)*\n     };\n-    ([(separate_provide_extern) $($rest:tt)*][$name:ident]) => {\n-        for<'tcx> fn(\n-            TyCtxt<'tcx>,\n-            query_keys_local::$name<'tcx>,\n-        ) -> query_provided::$name<'tcx>\n+    ([(separate_provide_extern) $($rest:tt)*] $($K:tt)*) => {\n+        <$($K)* as AsLocalKey>::LocalKey\n     };\n-    ([$other:tt $($modifiers:tt)*][$($args:tt)*]) => {\n-        separate_provide_local_decl!([$($modifiers)*][$($args)*])\n+    ([$other:tt $($modifiers:tt)*] $($K:tt)*) => {\n+        local_key_if_separate_extern!([$($modifiers)*] $($K)*)\n     };\n }\n \n@@ -233,7 +229,7 @@ macro_rules! define_callbacks {\n         pub mod query_keys_local {\n             use super::*;\n \n-            $(pub type $name<'tcx> = <$($K)* as AsLocalKey>::LocalKey;)*\n+            $(pub type $name<'tcx> = local_key_if_separate_extern!([$($modifiers)*] $($K)*);)*\n         }\n         #[allow(nonstandard_style, unused_lifetimes)]\n         pub mod query_values {\n@@ -407,7 +403,10 @@ macro_rules! define_callbacks {\n         }\n \n         pub struct Providers {\n-            $(pub $name: separate_provide_local_decl!([$($modifiers)*][$name]),)*\n+            $(pub $name: for<'tcx> fn(\n+                TyCtxt<'tcx>,\n+                query_keys_local::$name<'tcx>,\n+            ) -> query_provided::$name<'tcx>,)*\n         }\n \n         pub struct ExternProviders {"}]}