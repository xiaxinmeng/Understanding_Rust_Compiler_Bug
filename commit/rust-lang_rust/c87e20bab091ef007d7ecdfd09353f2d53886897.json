{"sha": "c87e20bab091ef007d7ecdfd09353f2d53886897", "node_id": "C_kwDOAAsO6NoAKGM4N2UyMGJhYjA5MWVmMDA3ZDdlY2RmZDA5MzUzZjJkNTM4ODY4OTc", "commit": {"author": {"name": "Nikita Popov", "email": "npopov@redhat.com", "date": "2022-07-27T11:07:48Z"}, "committer": {"name": "Nikita Popov", "email": "npopov@redhat.com", "date": "2022-07-27T14:19:07Z"}, "message": "Also wait on other threads if a WorkerFatalError occurs\n\nThis means that codegen_aborted may be set when new codegen\nrequests arrive, so drop some related assertions. The new work\nwill simply be ignored.", "tree": {"sha": "1806fefd37e5dfb70615d3ff5e5e6c73ab2d16bc", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1806fefd37e5dfb70615d3ff5e5e6c73ab2d16bc"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c87e20bab091ef007d7ecdfd09353f2d53886897", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c87e20bab091ef007d7ecdfd09353f2d53886897", "html_url": "https://github.com/rust-lang/rust/commit/c87e20bab091ef007d7ecdfd09353f2d53886897", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c87e20bab091ef007d7ecdfd09353f2d53886897/comments", "author": {"login": "nikic", "id": 216080, "node_id": "MDQ6VXNlcjIxNjA4MA==", "avatar_url": "https://avatars.githubusercontent.com/u/216080?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikic", "html_url": "https://github.com/nikic", "followers_url": "https://api.github.com/users/nikic/followers", "following_url": "https://api.github.com/users/nikic/following{/other_user}", "gists_url": "https://api.github.com/users/nikic/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikic/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikic/subscriptions", "organizations_url": "https://api.github.com/users/nikic/orgs", "repos_url": "https://api.github.com/users/nikic/repos", "events_url": "https://api.github.com/users/nikic/events{/privacy}", "received_events_url": "https://api.github.com/users/nikic/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nikic", "id": 216080, "node_id": "MDQ6VXNlcjIxNjA4MA==", "avatar_url": "https://avatars.githubusercontent.com/u/216080?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikic", "html_url": "https://github.com/nikic", "followers_url": "https://api.github.com/users/nikic/followers", "following_url": "https://api.github.com/users/nikic/following{/other_user}", "gists_url": "https://api.github.com/users/nikic/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikic/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikic/subscriptions", "organizations_url": "https://api.github.com/users/nikic/orgs", "repos_url": "https://api.github.com/users/nikic/repos", "events_url": "https://api.github.com/users/nikic/events{/privacy}", "received_events_url": "https://api.github.com/users/nikic/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b00d0fa0c9b8b8b2465f827dfc081e8c9a07d882", "url": "https://api.github.com/repos/rust-lang/rust/commits/b00d0fa0c9b8b8b2465f827dfc081e8c9a07d882", "html_url": "https://github.com/rust-lang/rust/commit/b00d0fa0c9b8b8b2465f827dfc081e8c9a07d882"}], "stats": {"total": 10, "additions": 5, "deletions": 5}, "files": [{"sha": "1b5ad87107af6ded64e8d7f9bc05e4e102f534ed", "filename": "compiler/rustc_codegen_ssa/src/back/write.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/c87e20bab091ef007d7ecdfd09353f2d53886897/compiler%2Frustc_codegen_ssa%2Fsrc%2Fback%2Fwrite.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c87e20bab091ef007d7ecdfd09353f2d53886897/compiler%2Frustc_codegen_ssa%2Fsrc%2Fback%2Fwrite.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_ssa%2Fsrc%2Fback%2Fwrite.rs?ref=c87e20bab091ef007d7ecdfd09353f2d53886897", "patch": "@@ -1475,14 +1475,12 @@ fn start_executing_work<B: ExtraBackendMethods>(\n                     if !cgcx.opts.unstable_opts.no_parallel_llvm {\n                         helper.request_token();\n                     }\n-                    assert!(!codegen_aborted);\n                     assert_eq!(main_thread_worker_state, MainThreadWorkerState::Codegenning);\n                     main_thread_worker_state = MainThreadWorkerState::Idle;\n                 }\n \n                 Message::CodegenComplete => {\n                     codegen_done = true;\n-                    assert!(!codegen_aborted);\n                     assert_eq!(main_thread_worker_state, MainThreadWorkerState::Codegenning);\n                     main_thread_worker_state = MainThreadWorkerState::Idle;\n                 }\n@@ -1494,7 +1492,6 @@ fn start_executing_work<B: ExtraBackendMethods>(\n                 // then conditions above will ensure no more work is spawned but\n                 // we'll keep executing this loop until `running` hits 0.\n                 Message::CodegenAborted => {\n-                    assert!(!codegen_aborted);\n                     codegen_done = true;\n                     codegen_aborted = true;\n                 }\n@@ -1536,8 +1533,11 @@ fn start_executing_work<B: ExtraBackendMethods>(\n                 Message::Done { result: Err(None), worker_id: _ } => {\n                     bug!(\"worker thread panicked\");\n                 }\n-                Message::Done { result: Err(Some(WorkerFatalError)), worker_id: _ } => {\n-                    return Err(());\n+                Message::Done { result: Err(Some(WorkerFatalError)), worker_id } => {\n+                    // Similar to CodegenAborted, wait for remaining work to finish.\n+                    free_worker(worker_id);\n+                    codegen_done = true;\n+                    codegen_aborted = true;\n                 }\n                 Message::CodegenItem => bug!(\"the coordinator should not receive codegen requests\"),\n             }"}]}