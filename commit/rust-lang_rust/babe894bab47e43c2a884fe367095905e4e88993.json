{"sha": "babe894bab47e43c2a884fe367095905e4e88993", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJhYmU4OTRiYWI0N2U0M2MyYTg4NGZlMzY3MDk1OTA1ZTRlODg5OTM=", "commit": {"author": {"name": "Augie Fackler", "email": "augie@google.com", "date": "2021-03-19T20:46:40Z"}, "committer": {"name": "Augie Fackler", "email": "augie@google.com", "date": "2021-03-19T20:46:40Z"}, "message": "fix: I meant LLVM version 13, not 12", "tree": {"sha": "f9fd4d3ba946ba816cf0076aa580aabc292a3470", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f9fd4d3ba946ba816cf0076aa580aabc292a3470"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/babe894bab47e43c2a884fe367095905e4e88993", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/babe894bab47e43c2a884fe367095905e4e88993", "html_url": "https://github.com/rust-lang/rust/commit/babe894bab47e43c2a884fe367095905e4e88993", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/babe894bab47e43c2a884fe367095905e4e88993/comments", "author": {"login": "durin42", "id": 20269, "node_id": "MDQ6VXNlcjIwMjY5", "avatar_url": "https://avatars.githubusercontent.com/u/20269?v=4", "gravatar_id": "", "url": "https://api.github.com/users/durin42", "html_url": "https://github.com/durin42", "followers_url": "https://api.github.com/users/durin42/followers", "following_url": "https://api.github.com/users/durin42/following{/other_user}", "gists_url": "https://api.github.com/users/durin42/gists{/gist_id}", "starred_url": "https://api.github.com/users/durin42/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/durin42/subscriptions", "organizations_url": "https://api.github.com/users/durin42/orgs", "repos_url": "https://api.github.com/users/durin42/repos", "events_url": "https://api.github.com/users/durin42/events{/privacy}", "received_events_url": "https://api.github.com/users/durin42/received_events", "type": "User", "site_admin": false}, "committer": {"login": "durin42", "id": 20269, "node_id": "MDQ6VXNlcjIwMjY5", "avatar_url": "https://avatars.githubusercontent.com/u/20269?v=4", "gravatar_id": "", "url": "https://api.github.com/users/durin42", "html_url": "https://github.com/durin42", "followers_url": "https://api.github.com/users/durin42/followers", "following_url": "https://api.github.com/users/durin42/following{/other_user}", "gists_url": "https://api.github.com/users/durin42/gists{/gist_id}", "starred_url": "https://api.github.com/users/durin42/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/durin42/subscriptions", "organizations_url": "https://api.github.com/users/durin42/orgs", "repos_url": "https://api.github.com/users/durin42/repos", "events_url": "https://api.github.com/users/durin42/events{/privacy}", "received_events_url": "https://api.github.com/users/durin42/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "dcdb9ad3d27aca6185af64f2e0318ed47860c6c0", "url": "https://api.github.com/repos/rust-lang/rust/commits/dcdb9ad3d27aca6185af64f2e0318ed47860c6c0", "html_url": "https://github.com/rust-lang/rust/commit/dcdb9ad3d27aca6185af64f2e0318ed47860c6c0"}], "stats": {"total": 6, "additions": 3, "deletions": 3}, "files": [{"sha": "35cca04b20f758c737c11ecb1024703b365f7f27", "filename": "compiler/rustc_llvm/llvm-wrapper/CoverageMappingWrapper.cpp", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/babe894bab47e43c2a884fe367095905e4e88993/compiler%2Frustc_llvm%2Fllvm-wrapper%2FCoverageMappingWrapper.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/babe894bab47e43c2a884fe367095905e4e88993/compiler%2Frustc_llvm%2Fllvm-wrapper%2FCoverageMappingWrapper.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_llvm%2Fllvm-wrapper%2FCoverageMappingWrapper.cpp?ref=babe894bab47e43c2a884fe367095905e4e88993", "patch": "@@ -23,7 +23,7 @@ extern \"C\" void LLVMRustCoverageWriteFilenamesSectionToBuffer(\n     const char* const Filenames[],\n     size_t FilenamesLen,\n     RustStringRef BufferOut) {\n-#if LLVM_VERSION_GE(12,0)\n+#if LLVM_VERSION_GE(13,0)\n   SmallVector<std::string,32> FilenameRefs;\n   for (size_t i = 0; i < FilenamesLen; i++) {\n     FilenameRefs.push_back(std::string(Filenames[i]));"}, {"sha": "f1a898b324cb4625ad7491b5050a968979f19c54", "filename": "compiler/rustc_llvm/llvm-wrapper/PassWrapper.cpp", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/babe894bab47e43c2a884fe367095905e4e88993/compiler%2Frustc_llvm%2Fllvm-wrapper%2FPassWrapper.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/babe894bab47e43c2a884fe367095905e4e88993/compiler%2Frustc_llvm%2Fllvm-wrapper%2FPassWrapper.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_llvm%2Fllvm-wrapper%2FPassWrapper.cpp?ref=babe894bab47e43c2a884fe367095905e4e88993", "patch": "@@ -1437,7 +1437,7 @@ LLVMRustCreateThinLTOData(LLVMRustThinLTOModule *modules,\n     Ret->ResolvedODR[ModuleIdentifier][GUID] = NewLinkage;\n   };\n \n-#if LLVM_VERSION_GE(12,0)\n+#if LLVM_VERSION_GE(13,0)\n   lto::Config conf;\n   thinLTOResolvePrevailingInIndex(conf, Ret->Index, isPrevailing, recordNewLinkage,\n                                   Ret->GUIDPreservedSymbols);"}, {"sha": "d33bce51f021758b29efba17219e3f1f4bd41f29", "filename": "compiler/rustc_llvm/llvm-wrapper/RustWrapper.cpp", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/babe894bab47e43c2a884fe367095905e4e88993/compiler%2Frustc_llvm%2Fllvm-wrapper%2FRustWrapper.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/babe894bab47e43c2a884fe367095905e4e88993/compiler%2Frustc_llvm%2Fllvm-wrapper%2FRustWrapper.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_llvm%2Fllvm-wrapper%2FRustWrapper.cpp?ref=babe894bab47e43c2a884fe367095905e4e88993", "patch": "@@ -382,7 +382,7 @@ LLVMRustBuildAtomicCmpXchg(LLVMBuilderRef B, LLVMValueRef Target,\n                            LLVMValueRef Old, LLVMValueRef Source,\n                            LLVMAtomicOrdering Order,\n                            LLVMAtomicOrdering FailureOrder, LLVMBool Weak) {\n-#if LLVM_VERSION_GE(12,0)\n+#if LLVM_VERSION_GE(13,0)\n   AtomicCmpXchgInst *ACXI = unwrap(B)->CreateAtomicCmpXchg(\n       unwrap(Target), unwrap(Old), unwrap(Source), llvm::MaybeAlign(), fromRust(Order),\n       fromRust(FailureOrder));"}]}