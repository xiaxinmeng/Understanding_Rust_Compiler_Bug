{"sha": "623886f44c9c741a318b34b06f12e0a50997532b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjYyMzg4NmY0NGM5Yzc0MWEzMThiMzRiMDZmMTJlMGE1MDk5NzUzMmI=", "commit": {"author": {"name": "steveklabnik", "email": "steve@steveklabnik.com", "date": "2017-11-01T19:21:55Z"}, "committer": {"name": "steveklabnik", "email": "steve@steveklabnik.com", "date": "2017-11-14T11:51:59Z"}, "message": "Start shipping the Cargo book\n\nFixes #44910\nFixes #39588\n\nSee both of those bugs for more details.", "tree": {"sha": "e2b3c639a2d826636f915b19d8587aeb8bf67790", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e2b3c639a2d826636f915b19d8587aeb8bf67790"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/623886f44c9c741a318b34b06f12e0a50997532b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/623886f44c9c741a318b34b06f12e0a50997532b", "html_url": "https://github.com/rust-lang/rust/commit/623886f44c9c741a318b34b06f12e0a50997532b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/623886f44c9c741a318b34b06f12e0a50997532b/comments", "author": {"login": "steveklabnik", "id": 27786, "node_id": "MDQ6VXNlcjI3Nzg2", "avatar_url": "https://avatars.githubusercontent.com/u/27786?v=4", "gravatar_id": "", "url": "https://api.github.com/users/steveklabnik", "html_url": "https://github.com/steveklabnik", "followers_url": "https://api.github.com/users/steveklabnik/followers", "following_url": "https://api.github.com/users/steveklabnik/following{/other_user}", "gists_url": "https://api.github.com/users/steveklabnik/gists{/gist_id}", "starred_url": "https://api.github.com/users/steveklabnik/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/steveklabnik/subscriptions", "organizations_url": "https://api.github.com/users/steveklabnik/orgs", "repos_url": "https://api.github.com/users/steveklabnik/repos", "events_url": "https://api.github.com/users/steveklabnik/events{/privacy}", "received_events_url": "https://api.github.com/users/steveklabnik/received_events", "type": "User", "site_admin": false}, "committer": {"login": "steveklabnik", "id": 27786, "node_id": "MDQ6VXNlcjI3Nzg2", "avatar_url": "https://avatars.githubusercontent.com/u/27786?v=4", "gravatar_id": "", "url": "https://api.github.com/users/steveklabnik", "html_url": "https://github.com/steveklabnik", "followers_url": "https://api.github.com/users/steveklabnik/followers", "following_url": "https://api.github.com/users/steveklabnik/following{/other_user}", "gists_url": "https://api.github.com/users/steveklabnik/gists{/gist_id}", "starred_url": "https://api.github.com/users/steveklabnik/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/steveklabnik/subscriptions", "organizations_url": "https://api.github.com/users/steveklabnik/orgs", "repos_url": "https://api.github.com/users/steveklabnik/repos", "events_url": "https://api.github.com/users/steveklabnik/events{/privacy}", "received_events_url": "https://api.github.com/users/steveklabnik/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "24840dab0bef0047beb428e1c15e9a851f732dcc", "url": "https://api.github.com/repos/rust-lang/rust/commits/24840dab0bef0047beb428e1c15e9a851f732dcc", "html_url": "https://github.com/rust-lang/rust/commit/24840dab0bef0047beb428e1c15e9a851f732dcc"}], "stats": {"total": 88, "additions": 43, "deletions": 45}, "files": [{"sha": "cb9698f168b235c1b0e9cceb6b239998ac104b10", "filename": "src/bootstrap/doc.rs", "status": "modified", "additions": 43, "deletions": 45, "changes": 88, "blob_url": "https://github.com/rust-lang/rust/blob/623886f44c9c741a318b34b06f12e0a50997532b/src%2Fbootstrap%2Fdoc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/623886f44c9c741a318b34b06f12e0a50997532b/src%2Fbootstrap%2Fdoc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fdoc.rs?ref=623886f44c9c741a318b34b06f12e0a50997532b", "patch": "@@ -132,6 +132,49 @@ impl Step for UnstableBook {\n     }\n }\n \n+#[derive(Debug, Copy, Clone, Hash, PartialEq, Eq)]\n+pub struct CargoBook {\n+    target: Interned<String>,\n+    name: Interned<String>,\n+    src: Interned<PathBuf>,\n+}\n+\n+impl Step for CargoBook {\n+    type Output = ();\n+    const DEFAULT: bool = true;\n+\n+    fn should_run(run: ShouldRun) -> ShouldRun {\n+        let builder = run.builder;\n+        run.path(\"src/tools/cargo/src/doc/book\").default_condition(builder.build.config.docs)\n+    }\n+\n+    fn make_run(run: RunConfig) {\n+        run.builder.ensure(CargoBook {\n+            target: run.target,\n+            name: INTERNER.intern_str(\"cargo\"),\n+            src: INTERNER.intern_path(PathBuf::from(\"src/tools/cargo/src/doc/book\")),\n+        });\n+    }\n+\n+    fn run(self, builder: &Builder) {\n+        let build = builder.build;\n+        let target = self.target;\n+        let name = self.name;\n+        let src = self.src;\n+        let out = build.doc_out(target);\n+        t!(fs::create_dir_all(&out));\n+\n+        let out = out.join(name);\n+        println!(\"Cargo Book ({}) - {}\", target, name);\n+        let _ = fs::remove_dir_all(&out);\n+        build.run(builder.tool_cmd(Tool::Rustbook)\n+                       .arg(\"build\")\n+                       .arg(&src)\n+                       .arg(\"-d\")\n+                       .arg(out));\n+    }\n+}\n+\n #[derive(Debug, Copy, Clone, Hash, PartialEq, Eq)]\n struct RustbookSrc {\n     target: Interned<String>,\n@@ -240,51 +283,6 @@ impl Step for TheBook {\n     }\n }\n \n-#[derive(Debug, Copy, Clone, Hash, PartialEq, Eq)]\n-pub struct CargoBook {\n-    target: Interned<String>,\n-}\n-\n-impl Step for CargoBook {\n-    type Output = ();\n-    const DEFAULT: bool = true;\n-\n-    fn should_run(run: ShouldRun) -> ShouldRun {\n-        let builder = run.builder;\n-        run.path(\"src/doc/cargo\").default_condition(builder.build.config.docs)\n-    }\n-\n-    fn make_run(run: RunConfig) {\n-        run.builder.ensure(CargoBook {\n-            target: run.target,\n-        });\n-    }\n-\n-    /// Create a placeholder for the cargo documentation so that doc.rust-lang.org/cargo will\n-    /// redirect to doc.crates.io. We want to publish doc.rust-lang.org/cargo in the paper\n-    /// version of the book, but we don't want to rush the process of switching cargo's docs\n-    /// over to mdbook and deploying them. When the cargo book is ready, this implementation\n-    /// should build the mdbook instead of this redirect page.\n-    fn run(self, builder: &Builder) {\n-        let build = builder.build;\n-        let out = build.doc_out(self.target);\n-\n-        let cargo_dir = out.join(\"cargo\");\n-        t!(fs::create_dir_all(&cargo_dir));\n-\n-        let index = cargo_dir.join(\"index.html\");\n-        let redirect_html = r#\"\n-            <html>\n-                <head>\n-                    <meta http-equiv=\"refresh\" content=\"0; URL='http://doc.crates.io'\" />\n-                </head>\n-            </html>\"#;\n-\n-        println!(\"Creating cargo book redirect page\");\n-        t!(t!(File::create(&index)).write_all(redirect_html.as_bytes()));\n-    }\n-}\n-\n fn invoke_rustdoc(builder: &Builder, compiler: Compiler, target: Interned<String>, markdown: &str) {\n     let build = builder.build;\n     let out = build.doc_out(target);"}]}