{"sha": "a55912c48e4ac08c0ac39a2d562b44699fa20d4d", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE1NTkxMmM0OGU0YWMwOGMwYWMzOWEyZDU2MmI0NDY5OWZhMjBkNGQ=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-04-29T14:57:24Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-04-29T14:57:24Z"}, "message": "Auto merge of #7141 - camsteffen:conf-file, r=flip1995\n\nRemove leftover plugin conf_file code\n\nchangelog: none\n\nRemoves dead code that used to support the following syntax:\n\n```rust\n#![plugin(clippy(conf_file=\"path/to/clippy's/configuration\"))]\n```\n\nRLS (and others?) will need to remove the `&[]` from `clippy_lints::read_conf(&[], sess)`.\n\nr? `@flip1995`", "tree": {"sha": "ddf606ed3082ecdb926d24eaaeba044fa5ac61f9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ddf606ed3082ecdb926d24eaaeba044fa5ac61f9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a55912c48e4ac08c0ac39a2d562b44699fa20d4d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a55912c48e4ac08c0ac39a2d562b44699fa20d4d", "html_url": "https://github.com/rust-lang/rust/commit/a55912c48e4ac08c0ac39a2d562b44699fa20d4d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a55912c48e4ac08c0ac39a2d562b44699fa20d4d/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ce37099bd3cc05568c09fa7c1f06c80efd64c905", "url": "https://api.github.com/repos/rust-lang/rust/commits/ce37099bd3cc05568c09fa7c1f06c80efd64c905", "html_url": "https://github.com/rust-lang/rust/commit/ce37099bd3cc05568c09fa7c1f06c80efd64c905"}, {"sha": "32351d6b9f7caa2fd197a23a190fb32392ab9dfd", "url": "https://api.github.com/repos/rust-lang/rust/commits/32351d6b9f7caa2fd197a23a190fb32392ab9dfd", "html_url": "https://github.com/rust-lang/rust/commit/32351d6b9f7caa2fd197a23a190fb32392ab9dfd"}], "stats": {"total": 100, "additions": 31, "deletions": 69}, "files": [{"sha": "57843afaddbc66b5c141a5b2e89cee2c7bfeeeee", "filename": "clippy_lints/src/lib.rs", "status": "modified", "additions": 30, "deletions": 45, "changes": 75, "blob_url": "https://github.com/rust-lang/rust/blob/a55912c48e4ac08c0ac39a2d562b44699fa20d4d/clippy_lints%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a55912c48e4ac08c0ac39a2d562b44699fa20d4d/clippy_lints%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Flib.rs?ref=a55912c48e4ac08c0ac39a2d562b44699fa20d4d", "patch": "@@ -399,56 +399,41 @@ pub fn register_pre_expansion_lints(store: &mut rustc_lint::LintStore) {\n }\n \n #[doc(hidden)]\n-pub fn read_conf(args: &[rustc_ast::NestedMetaItem], sess: &Session) -> Conf {\n+pub fn read_conf(sess: &Session) -> Conf {\n     use std::path::Path;\n-    match utils::conf::file_from_args(args) {\n-        Ok(file_name) => {\n-            // if the user specified a file, it must exist, otherwise default to `clippy.toml` but\n-            // do not require the file to exist\n-            let file_name = match file_name {\n-                Some(file_name) => file_name,\n-                None => match utils::conf::lookup_conf_file() {\n-                    Ok(Some(path)) => path,\n-                    Ok(None) => return Conf::default(),\n-                    Err(error) => {\n-                        sess.struct_err(&format!(\"error finding Clippy's configuration file: {}\", error))\n-                            .emit();\n-                        return Conf::default();\n-                    },\n-                },\n-            };\n-\n-            let file_name = if file_name.is_relative() {\n-                sess.local_crate_source_file\n-                    .as_deref()\n-                    .and_then(Path::parent)\n-                    .unwrap_or_else(|| Path::new(\"\"))\n-                    .join(file_name)\n-            } else {\n-                file_name\n-            };\n+    let file_name = match utils::conf::lookup_conf_file() {\n+        Ok(Some(path)) => path,\n+        Ok(None) => return Conf::default(),\n+        Err(error) => {\n+            sess.struct_err(&format!(\"error finding Clippy's configuration file: {}\", error))\n+                .emit();\n+            return Conf::default();\n+        },\n+    };\n \n-            let (conf, errors) = utils::conf::read(&file_name);\n+    let file_name = if file_name.is_relative() {\n+        sess.local_crate_source_file\n+            .as_deref()\n+            .and_then(Path::parent)\n+            .unwrap_or_else(|| Path::new(\"\"))\n+            .join(file_name)\n+    } else {\n+        file_name\n+    };\n \n-            // all conf errors are non-fatal, we just use the default conf in case of error\n-            for error in errors {\n-                sess.struct_err(&format!(\n-                    \"error reading Clippy's configuration file `{}`: {}\",\n-                    file_name.display(),\n-                    error\n-                ))\n-                .emit();\n-            }\n+    let (conf, errors) = utils::conf::read(&file_name);\n \n-            conf\n-        },\n-        Err((err, span)) => {\n-            sess.struct_span_err(span, err)\n-                .span_note(span, \"Clippy will use default configuration\")\n-                .emit();\n-            Conf::default()\n-        },\n+    // all conf errors are non-fatal, we just use the default conf in case of error\n+    for error in errors {\n+        sess.struct_err(&format!(\n+            \"error reading Clippy's configuration file `{}`: {}\",\n+            file_name.display(),\n+            error\n+        ))\n+        .emit();\n     }\n+\n+    conf\n }\n \n /// Register all lints and lint groups with the rustc plugin registry"}, {"sha": "e221be635381095b121d086c025bc1ddd9d608e1", "filename": "clippy_lints/src/utils/conf.rs", "status": "modified", "additions": 0, "deletions": 23, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/a55912c48e4ac08c0ac39a2d562b44699fa20d4d/clippy_lints%2Fsrc%2Futils%2Fconf.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a55912c48e4ac08c0ac39a2d562b44699fa20d4d/clippy_lints%2Fsrc%2Futils%2Fconf.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Futils%2Fconf.rs?ref=a55912c48e4ac08c0ac39a2d562b44699fa20d4d", "patch": "@@ -2,34 +2,11 @@\n \n #![deny(clippy::missing_docs_in_private_items)]\n \n-use rustc_ast::ast::{LitKind, MetaItemKind, NestedMetaItem};\n-use rustc_span::source_map;\n-use source_map::Span;\n use std::lazy::SyncLazy;\n use std::path::{Path, PathBuf};\n use std::sync::Mutex;\n use std::{env, fmt, fs, io};\n \n-/// Gets the configuration file from arguments.\n-pub fn file_from_args(args: &[NestedMetaItem]) -> Result<Option<PathBuf>, (&'static str, Span)> {\n-    for arg in args.iter().filter_map(NestedMetaItem::meta_item) {\n-        if arg.has_name(sym!(conf_file)) {\n-            return match arg.kind {\n-                MetaItemKind::Word | MetaItemKind::List(_) => Err((\"`conf_file` must be a named value\", arg.span)),\n-                MetaItemKind::NameValue(ref value) => {\n-                    if let LitKind::Str(ref file, _) = value.kind {\n-                        Ok(Some(file.to_string().into()))\n-                    } else {\n-                        Err((\"`conf_file` value must be a string\", value.span))\n-                    }\n-                },\n-            };\n-        }\n-    }\n-\n-    Ok(None)\n-}\n-\n /// Error from reading a configuration file.\n #[derive(Debug)]\n pub enum Error {"}, {"sha": "221474e55d48568db5adc0f7eaab80c24bc0d07b", "filename": "src/driver.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a55912c48e4ac08c0ac39a2d562b44699fa20d4d/src%2Fdriver.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a55912c48e4ac08c0ac39a2d562b44699fa20d4d/src%2Fdriver.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdriver.rs?ref=a55912c48e4ac08c0ac39a2d562b44699fa20d4d", "patch": "@@ -106,7 +106,7 @@ impl rustc_driver::Callbacks for ClippyCallbacks {\n                 (previous)(sess, lint_store);\n             }\n \n-            let conf = clippy_lints::read_conf(&[], sess);\n+            let conf = clippy_lints::read_conf(sess);\n             clippy_lints::register_plugins(lint_store, sess, &conf);\n             clippy_lints::register_pre_expansion_lints(lint_store);\n             clippy_lints::register_renamed(lint_store);"}]}