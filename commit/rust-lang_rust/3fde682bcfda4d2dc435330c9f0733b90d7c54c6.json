{"sha": "3fde682bcfda4d2dc435330c9f0733b90d7c54c6", "node_id": "C_kwDOAAsO6NoAKDNmZGU2ODJiY2ZkYTRkMmRjNDM1MzMwYzlmMDczM2I5MGQ3YzU0YzY", "commit": {"author": {"name": "longfangsong", "email": "longfangsong@icloud.com", "date": "2021-10-06T02:14:12Z"}, "committer": {"name": "longfangsong", "email": "longfangsong@icloud.com", "date": "2021-10-06T02:14:12Z"}, "message": "cleanup", "tree": {"sha": "2f77164e6fbcfc84a984e19173ebabcde16c97f0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2f77164e6fbcfc84a984e19173ebabcde16c97f0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3fde682bcfda4d2dc435330c9f0733b90d7c54c6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3fde682bcfda4d2dc435330c9f0733b90d7c54c6", "html_url": "https://github.com/rust-lang/rust/commit/3fde682bcfda4d2dc435330c9f0733b90d7c54c6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3fde682bcfda4d2dc435330c9f0733b90d7c54c6/comments", "author": {"login": "longfangsong", "id": 13777628, "node_id": "MDQ6VXNlcjEzNzc3NjI4", "avatar_url": "https://avatars.githubusercontent.com/u/13777628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/longfangsong", "html_url": "https://github.com/longfangsong", "followers_url": "https://api.github.com/users/longfangsong/followers", "following_url": "https://api.github.com/users/longfangsong/following{/other_user}", "gists_url": "https://api.github.com/users/longfangsong/gists{/gist_id}", "starred_url": "https://api.github.com/users/longfangsong/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/longfangsong/subscriptions", "organizations_url": "https://api.github.com/users/longfangsong/orgs", "repos_url": "https://api.github.com/users/longfangsong/repos", "events_url": "https://api.github.com/users/longfangsong/events{/privacy}", "received_events_url": "https://api.github.com/users/longfangsong/received_events", "type": "User", "site_admin": false}, "committer": {"login": "longfangsong", "id": 13777628, "node_id": "MDQ6VXNlcjEzNzc3NjI4", "avatar_url": "https://avatars.githubusercontent.com/u/13777628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/longfangsong", "html_url": "https://github.com/longfangsong", "followers_url": "https://api.github.com/users/longfangsong/followers", "following_url": "https://api.github.com/users/longfangsong/following{/other_user}", "gists_url": "https://api.github.com/users/longfangsong/gists{/gist_id}", "starred_url": "https://api.github.com/users/longfangsong/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/longfangsong/subscriptions", "organizations_url": "https://api.github.com/users/longfangsong/orgs", "repos_url": "https://api.github.com/users/longfangsong/repos", "events_url": "https://api.github.com/users/longfangsong/events{/privacy}", "received_events_url": "https://api.github.com/users/longfangsong/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7228dbadcaf0d97b0da421127e703d921b2bce53", "url": "https://api.github.com/repos/rust-lang/rust/commits/7228dbadcaf0d97b0da421127e703d921b2bce53", "html_url": "https://github.com/rust-lang/rust/commit/7228dbadcaf0d97b0da421127e703d921b2bce53"}], "stats": {"total": 13, "additions": 2, "deletions": 11}, "files": [{"sha": "52ae60e2edf643b52dd975562dddba1fa2773c8c", "filename": "crates/ide_assists/src/handlers/generate_constant.rs", "status": "modified", "additions": 2, "deletions": 11, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/3fde682bcfda4d2dc435330c9f0733b90d7c54c6/crates%2Fide_assists%2Fsrc%2Fhandlers%2Fgenerate_constant.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3fde682bcfda4d2dc435330c9f0733b90d7c54c6/crates%2Fide_assists%2Fsrc%2Fhandlers%2Fgenerate_constant.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_assists%2Fsrc%2Fhandlers%2Fgenerate_constant.rs?ref=3fde682bcfda4d2dc435330c9f0733b90d7c54c6", "patch": "@@ -39,9 +39,6 @@ pub(crate) fn generate_constant(acc: &mut Assists, ctx: &AssistContext) -> Optio\n     let module = scope.module()?;\n     let type_name = ty.original().display_source_code(ctx.db(), module.into()).ok()?;\n     let indent = IndentLevel::from_node(statement.syntax());\n-    if !arg_list.syntax().text_range().contains_range(constant_token.syntax().text_range()) {\n-        return None;\n-    }\n     if constant_token.to_string().chars().any(|it| !(it.is_uppercase() || it == '_')) {\n         cov_mark::hit!(not_constant_name);\n         return None;\n@@ -51,20 +48,14 @@ pub(crate) fn generate_constant(acc: &mut Assists, ctx: &AssistContext) -> Optio\n         return None;\n     }\n     let target = statement.syntax().parent()?.text_range();\n-    let statement_syntax = statement.syntax().clone_for_update();\n     acc.add(\n         AssistId(\"generate_constant\", AssistKind::QuickFix),\n         \"Generate constant\",\n         target,\n         |builder| {\n             builder.insert(\n-                statement.syntax().text_range.start(),\n-                format!(\n-                    \"const {}: {} = $0;\\n{}\",\n-                    constant_token,\n-                    type_name,\n-                    indent\n-                ),\n+                statement.syntax().text_range().start(),\n+                format!(\"const {}: {} = $0;\\n{}\", constant_token, type_name, indent),\n             );\n         },\n     )"}]}