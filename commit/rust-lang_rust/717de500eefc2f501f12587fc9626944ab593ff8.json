{"sha": "717de500eefc2f501f12587fc9626944ab593ff8", "node_id": "MDY6Q29tbWl0NzI0NzEyOjcxN2RlNTAwZWVmYzJmNTAxZjEyNTg3ZmM5NjI2OTQ0YWI1OTNmZjg=", "commit": {"author": {"name": "Erick Tryzelaar", "email": "erick.tryzelaar@gmail.com", "date": "2014-07-04T23:36:49Z"}, "committer": {"name": "Erick Tryzelaar", "email": "erick.tryzelaar@gmail.com", "date": "2014-07-04T23:36:49Z"}, "message": "serialize: escaping json strings should write in batches.\n\nThis significantly speeds up encoding json strings.", "tree": {"sha": "da70f8af72fa4f220dad1d104c498c615e56ad26", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/da70f8af72fa4f220dad1d104c498c615e56ad26"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/717de500eefc2f501f12587fc9626944ab593ff8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/717de500eefc2f501f12587fc9626944ab593ff8", "html_url": "https://github.com/rust-lang/rust/commit/717de500eefc2f501f12587fc9626944ab593ff8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/717de500eefc2f501f12587fc9626944ab593ff8/comments", "author": {"login": "erickt", "id": 84711, "node_id": "MDQ6VXNlcjg0NzEx", "avatar_url": "https://avatars.githubusercontent.com/u/84711?v=4", "gravatar_id": "", "url": "https://api.github.com/users/erickt", "html_url": "https://github.com/erickt", "followers_url": "https://api.github.com/users/erickt/followers", "following_url": "https://api.github.com/users/erickt/following{/other_user}", "gists_url": "https://api.github.com/users/erickt/gists{/gist_id}", "starred_url": "https://api.github.com/users/erickt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/erickt/subscriptions", "organizations_url": "https://api.github.com/users/erickt/orgs", "repos_url": "https://api.github.com/users/erickt/repos", "events_url": "https://api.github.com/users/erickt/events{/privacy}", "received_events_url": "https://api.github.com/users/erickt/received_events", "type": "User", "site_admin": false}, "committer": {"login": "erickt", "id": 84711, "node_id": "MDQ6VXNlcjg0NzEx", "avatar_url": "https://avatars.githubusercontent.com/u/84711?v=4", "gravatar_id": "", "url": "https://api.github.com/users/erickt", "html_url": "https://github.com/erickt", "followers_url": "https://api.github.com/users/erickt/followers", "following_url": "https://api.github.com/users/erickt/following{/other_user}", "gists_url": "https://api.github.com/users/erickt/gists{/gist_id}", "starred_url": "https://api.github.com/users/erickt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/erickt/subscriptions", "organizations_url": "https://api.github.com/users/erickt/orgs", "repos_url": "https://api.github.com/users/erickt/repos", "events_url": "https://api.github.com/users/erickt/events{/privacy}", "received_events_url": "https://api.github.com/users/erickt/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "83f9f07ec4a339a31650abf7023a584cf7c5ce54", "url": "https://api.github.com/repos/rust-lang/rust/commits/83f9f07ec4a339a31650abf7023a584cf7c5ce54", "html_url": "https://github.com/rust-lang/rust/commit/83f9f07ec4a339a31650abf7023a584cf7c5ce54"}], "stats": {"total": 46, "additions": 31, "deletions": 15}, "files": [{"sha": "bb044f65348884f41685f87aad23ae512f86beeb", "filename": "src/libserialize/json.rs", "status": "modified", "additions": 31, "deletions": 15, "changes": 46, "blob_url": "https://github.com/rust-lang/rust/blob/717de500eefc2f501f12587fc9626944ab593ff8/src%2Flibserialize%2Fjson.rs", "raw_url": "https://github.com/rust-lang/rust/raw/717de500eefc2f501f12587fc9626944ab593ff8/src%2Flibserialize%2Fjson.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibserialize%2Fjson.rs?ref=717de500eefc2f501f12587fc9626944ab593ff8", "patch": "@@ -256,21 +256,37 @@ fn io_error_to_error(io: io::IoError) -> ParserError {\n pub type EncodeResult = io::IoResult<()>;\n pub type DecodeResult<T> = Result<T, DecoderError>;\n \n-fn escape_bytes(writer: &mut io::Writer, s: &[u8]) -> Result<(), io::IoError> {\n-    try!(writer.write_str(\"\\\"\"));\n-    for byte in s.iter() {\n-        match *byte {\n-            b'\"' => try!(writer.write_str(\"\\\\\\\"\")),\n-            b'\\\\' => try!(writer.write_str(\"\\\\\\\\\")),\n-            b'\\x08' => try!(writer.write_str(\"\\\\b\")),\n-            b'\\x0c' => try!(writer.write_str(\"\\\\f\")),\n-            b'\\n' => try!(writer.write_str(\"\\\\n\")),\n-            b'\\r' => try!(writer.write_str(\"\\\\r\")),\n-            b'\\t' => try!(writer.write_str(\"\\\\t\")),\n-            _ => try!(writer.write_u8(*byte)),\n-        }\n-    }\n-    writer.write_str(\"\\\"\")\n+pub fn escape_bytes(wr: &mut io::Writer, bytes: &[u8]) -> Result<(), io::IoError> {\n+    try!(wr.write_str(\"\\\"\"));\n+\n+    let mut start = 0;\n+\n+    for (i, byte) in bytes.iter().enumerate() {\n+        let escaped = match *byte {\n+            b'\"' => \"\\\\\\\"\",\n+            b'\\\\' => \"\\\\\\\\\",\n+            b'\\x08' => \"\\\\b\",\n+            b'\\x0c' => \"\\\\f\",\n+            b'\\n' => \"\\\\n\",\n+            b'\\r' => \"\\\\r\",\n+            b'\\t' => \"\\\\t\",\n+            _ => { continue; }\n+        };\n+\n+        if start < i {\n+            try!(wr.write(bytes.slice(start, i)));\n+        }\n+\n+        try!(wr.write_str(escaped));\n+\n+        start = i + 1;\n+    }\n+\n+    if start != bytes.len() {\n+        try!(wr.write(bytes.slice_from(start)));\n+    }\n+\n+    wr.write_str(\"\\\"\")\n }\n \n fn escape_str(writer: &mut io::Writer, v: &str) -> Result<(), io::IoError> {"}]}