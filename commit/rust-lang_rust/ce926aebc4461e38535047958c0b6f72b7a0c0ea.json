{"sha": "ce926aebc4461e38535047958c0b6f72b7a0c0ea", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNlOTI2YWViYzQ0NjFlMzg1MzUwNDc5NThjMGI2ZjcyYjdhMGMwZWE=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2021-06-17T16:22:32Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-06-17T16:22:32Z"}, "message": "Merge #9315\n\n9315: Nest all the or-patterns! r=Veykril a=Veykril\n\n`cargo +nightly clippy --fix -Z unstable-options --allow-dirty -- -A clippy::all -D clippy::unnested_or_patterns`\n\nCo-authored-by: Lukas Wirth <lukastw97@gmail.com>", "tree": {"sha": "4b844e0681b459836bac22c34bee43e4dfa3dc5f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4b844e0681b459836bac22c34bee43e4dfa3dc5f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ce926aebc4461e38535047958c0b6f72b7a0c0ea", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJgy3bICRBK7hj4Ov3rIwAAbTYIAHZvMOl3uD0HfEIE1/bCv3Mf\nPr+oHuyrw1a8T/M6Op0Oa1qWsDJAVvgJUwZ5138Zxxi1zjaG/obDMVUZu3xS1eSN\niDpE8I2nV942Ivm8Mo2WQgKSZ5qT9S53v4EbEhd6YES+dqEuEnOVi+s4zPGyYYFC\nWCIcqmY57z2xI/Wab6nncYawzRb3qB3YQKHqBiDNmF8nndO1wbH8CCOX9k1hAJSj\nvf6wMF1w4T9M8Gbbetg4uYRGAW7yvxyQwfqR8inMCdS32I1eYmQEJY8wPtj8dw0P\nVf2hqsL4Xp7jp4tyGY+32BeODzZt0aZ/NsZBVeqqZyUA2YkbaPPZBfx5DltCHug=\n=x+1V\n-----END PGP SIGNATURE-----\n", "payload": "tree 4b844e0681b459836bac22c34bee43e4dfa3dc5f\nparent 3ae0c5911ab50ee209179ee4329b0551abe6fc48\nparent 02d25ab60d2701ce71fe2dfaca36627ad902e229\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1623946952 +0000\ncommitter GitHub <noreply@github.com> 1623946952 +0000\n\nMerge #9315\n\n9315: Nest all the or-patterns! r=Veykril a=Veykril\n\n`cargo +nightly clippy --fix -Z unstable-options --allow-dirty -- -A clippy::all -D clippy::unnested_or_patterns`\n\nCo-authored-by: Lukas Wirth <lukastw97@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ce926aebc4461e38535047958c0b6f72b7a0c0ea", "html_url": "https://github.com/rust-lang/rust/commit/ce926aebc4461e38535047958c0b6f72b7a0c0ea", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ce926aebc4461e38535047958c0b6f72b7a0c0ea/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3ae0c5911ab50ee209179ee4329b0551abe6fc48", "url": "https://api.github.com/repos/rust-lang/rust/commits/3ae0c5911ab50ee209179ee4329b0551abe6fc48", "html_url": "https://github.com/rust-lang/rust/commit/3ae0c5911ab50ee209179ee4329b0551abe6fc48"}, {"sha": "02d25ab60d2701ce71fe2dfaca36627ad902e229", "url": "https://api.github.com/repos/rust-lang/rust/commits/02d25ab60d2701ce71fe2dfaca36627ad902e229", "html_url": "https://github.com/rust-lang/rust/commit/02d25ab60d2701ce71fe2dfaca36627ad902e229"}], "stats": {"total": 690, "additions": 335, "deletions": 355}, "files": [{"sha": "43162797e3c8b780ea36b140e6e966bb86936ee2", "filename": "crates/hir/src/semantics.rs", "status": "modified", "additions": 9, "deletions": 8, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/ce926aebc4461e38535047958c0b6f72b7a0c0ea/crates%2Fhir%2Fsrc%2Fsemantics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ce926aebc4461e38535047958c0b6f72b7a0c0ea/crates%2Fhir%2Fsrc%2Fsemantics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir%2Fsrc%2Fsemantics.rs?ref=ce926aebc4461e38535047958c0b6f72b7a0c0ea", "patch": "@@ -51,12 +51,14 @@ impl PathResolution {\n             PathResolution::Def(ModuleDef::BuiltinType(builtin)) => {\n                 Some(TypeNs::BuiltinType((*builtin).into()))\n             }\n-            PathResolution::Def(ModuleDef::Const(_))\n-            | PathResolution::Def(ModuleDef::Variant(_))\n-            | PathResolution::Def(ModuleDef::Function(_))\n-            | PathResolution::Def(ModuleDef::Module(_))\n-            | PathResolution::Def(ModuleDef::Static(_))\n-            | PathResolution::Def(ModuleDef::Trait(_)) => None,\n+            PathResolution::Def(\n+                ModuleDef::Const(_)\n+                | ModuleDef::Variant(_)\n+                | ModuleDef::Function(_)\n+                | ModuleDef::Module(_)\n+                | ModuleDef::Static(_)\n+                | ModuleDef::Trait(_),\n+            ) => None,\n             PathResolution::Def(ModuleDef::TypeAlias(alias)) => {\n                 Some(TypeNs::TypeAliasId((*alias).into()))\n             }\n@@ -65,8 +67,7 @@ impl PathResolution {\n             }\n             PathResolution::TypeParam(param) => Some(TypeNs::GenericParam((*param).into())),\n             PathResolution::SelfType(impl_def) => Some(TypeNs::SelfType((*impl_def).into())),\n-            PathResolution::AssocItem(AssocItem::Const(_))\n-            | PathResolution::AssocItem(AssocItem::Function(_)) => None,\n+            PathResolution::AssocItem(AssocItem::Const(_) | AssocItem::Function(_)) => None,\n             PathResolution::AssocItem(AssocItem::TypeAlias(alias)) => {\n                 Some(TypeNs::TypeAliasId((*alias).into()))\n             }"}, {"sha": "e63bc8232b97f38f13691fe8f7cc6198077dcc42", "filename": "crates/hir_def/src/item_tree/pretty.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ce926aebc4461e38535047958c0b6f72b7a0c0ea/crates%2Fhir_def%2Fsrc%2Fitem_tree%2Fpretty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ce926aebc4461e38535047958c0b6f72b7a0c0ea/crates%2Fhir_def%2Fsrc%2Fitem_tree%2Fpretty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_def%2Fsrc%2Fitem_tree%2Fpretty.rs?ref=ce926aebc4461e38535047958c0b6f72b7a0c0ea", "patch": "@@ -63,7 +63,7 @@ impl<'a> Printer<'a> {\n     fn blank(&mut self) {\n         let mut iter = self.buf.chars().rev().fuse();\n         match (iter.next(), iter.next()) {\n-            (Some('\\n'), Some('\\n')) | (Some('\\n'), None) | (None, None) => {}\n+            (Some('\\n'), Some('\\n') | None) | (None, None) => {}\n             (Some('\\n'), Some(_)) => {\n                 self.buf.push('\\n');\n             }\n@@ -77,7 +77,7 @@ impl<'a> Printer<'a> {\n \n     fn whitespace(&mut self) {\n         match self.buf.chars().next_back() {\n-            None | Some('\\n') | Some(' ') => {}\n+            None | Some('\\n' | ' ') => {}\n             _ => self.buf.push(' '),\n         }\n     }"}, {"sha": "927a7b6e85f0d905b545419a2cdcffdd35179551", "filename": "crates/hir_def/src/nameres/collector.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ce926aebc4461e38535047958c0b6f72b7a0c0ea/crates%2Fhir_def%2Fsrc%2Fnameres%2Fcollector.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ce926aebc4461e38535047958c0b6f72b7a0c0ea/crates%2Fhir_def%2Fsrc%2Fnameres%2Fcollector.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_def%2Fsrc%2Fnameres%2Fcollector.rs?ref=ce926aebc4461e38535047958c0b6f72b7a0c0ea", "patch": "@@ -1260,7 +1260,7 @@ impl DefCollector<'_> {\n         for directive in &self.unresolved_imports {\n             if let ImportSource::Import { id: import, use_tree } = &directive.import.source {\n                 match (directive.import.path.segments().first(), &directive.import.path.kind) {\n-                    (Some(krate), PathKind::Plain) | (Some(krate), PathKind::Abs) => {\n+                    (Some(krate), PathKind::Plain | PathKind::Abs) => {\n                         if diagnosed_extern_crates.contains(krate) {\n                             continue;\n                         }"}, {"sha": "47e56259f4f18af85bff96b1bcb9d38ada029d0b", "filename": "crates/hir_def/src/resolver.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/ce926aebc4461e38535047958c0b6f72b7a0c0ea/crates%2Fhir_def%2Fsrc%2Fresolver.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ce926aebc4461e38535047958c0b6f72b7a0c0ea/crates%2Fhir_def%2Fsrc%2Fresolver.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_def%2Fsrc%2Fresolver.rs?ref=ce926aebc4461e38535047958c0b6f72b7a0c0ea", "patch": "@@ -605,8 +605,7 @@ fn to_value_ns(per_ns: PerNs) -> Option<ValueNs> {\n         ModuleDefId::ConstId(it) => ValueNs::ConstId(it),\n         ModuleDefId::StaticId(it) => ValueNs::StaticId(it),\n \n-        ModuleDefId::AdtId(AdtId::EnumId(_))\n-        | ModuleDefId::AdtId(AdtId::UnionId(_))\n+        ModuleDefId::AdtId(AdtId::EnumId(_) | AdtId::UnionId(_))\n         | ModuleDefId::TraitId(_)\n         | ModuleDefId::TypeAliasId(_)\n         | ModuleDefId::BuiltinType(_)"}, {"sha": "aeb1e7726b6eb7cdf5a1a3f5025e768dae9d3a3e", "filename": "crates/hir_def/src/visibility.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/ce926aebc4461e38535047958c0b6f72b7a0c0ea/crates%2Fhir_def%2Fsrc%2Fvisibility.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ce926aebc4461e38535047958c0b6f72b7a0c0ea/crates%2Fhir_def%2Fsrc%2Fvisibility.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_def%2Fsrc%2Fvisibility.rs?ref=ce926aebc4461e38535047958c0b6f72b7a0c0ea", "patch": "@@ -172,9 +172,8 @@ impl Visibility {\n     /// visible in unrelated modules).\n     pub(crate) fn max(self, other: Visibility, def_map: &DefMap) -> Option<Visibility> {\n         match (self, other) {\n-            (Visibility::Module(_), Visibility::Public)\n-            | (Visibility::Public, Visibility::Module(_))\n-            | (Visibility::Public, Visibility::Public) => Some(Visibility::Public),\n+            (Visibility::Module(_) | Visibility::Public, Visibility::Public)\n+            | (Visibility::Public, Visibility::Module(_)) => Some(Visibility::Public),\n             (Visibility::Module(mod_a), Visibility::Module(mod_b)) => {\n                 if mod_a.krate != mod_b.krate {\n                     return None;"}, {"sha": "8485224115578fedffa423b66bab2f0ac657cdb0", "filename": "crates/hir_expand/src/hygiene.rs", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/ce926aebc4461e38535047958c0b6f72b7a0c0ea/crates%2Fhir_expand%2Fsrc%2Fhygiene.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ce926aebc4461e38535047958c0b6f72b7a0c0ea/crates%2Fhir_expand%2Fsrc%2Fhygiene.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_expand%2Fsrc%2Fhygiene.rs?ref=ce926aebc4461e38535047958c0b6f72b7a0c0ea", "patch": "@@ -146,10 +146,11 @@ impl HygieneInfo {\n                 (&self.macro_arg.1, InFile::new(loc.kind.file_id(), arg_start))\n             }\n             mbe::Origin::Def => match (&*self.macro_def, self.def_start) {\n-                (TokenExpander::MacroDef { def_site_token_map, .. }, Some(tt))\n-                | (TokenExpander::MacroRules { def_site_token_map, .. }, Some(tt)) => {\n-                    (def_site_token_map, tt)\n-                }\n+                (\n+                    TokenExpander::MacroDef { def_site_token_map, .. }\n+                    | TokenExpander::MacroRules { def_site_token_map, .. },\n+                    Some(tt),\n+                ) => (def_site_token_map, tt),\n                 _ => panic!(\"`Origin::Def` used with non-`macro_rules!` macro\"),\n             },\n         };"}, {"sha": "c31426d7cc7e3b1e30ff8b6ff1922c3714e871a8", "filename": "crates/hir_expand/src/lib.rs", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/ce926aebc4461e38535047958c0b6f72b7a0c0ea/crates%2Fhir_expand%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ce926aebc4461e38535047958c0b6f72b7a0c0ea/crates%2Fhir_expand%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_expand%2Fsrc%2Flib.rs?ref=ce926aebc4461e38535047958c0b6f72b7a0c0ea", "patch": "@@ -368,10 +368,11 @@ impl ExpansionInfo {\n         let (token_map, tt) = match origin {\n             mbe::Origin::Call => (&self.macro_arg.1, self.arg.clone()),\n             mbe::Origin::Def => match (&*self.macro_def, self.def.as_ref()) {\n-                (db::TokenExpander::MacroRules { def_site_token_map, .. }, Some(tt))\n-                | (db::TokenExpander::MacroDef { def_site_token_map, .. }, Some(tt)) => {\n-                    (def_site_token_map, tt.as_ref().map(|tt| tt.syntax().clone()))\n-                }\n+                (\n+                    db::TokenExpander::MacroRules { def_site_token_map, .. }\n+                    | db::TokenExpander::MacroDef { def_site_token_map, .. },\n+                    Some(tt),\n+                ) => (def_site_token_map, tt.as_ref().map(|tt| tt.syntax().clone())),\n                 _ => panic!(\"`Origin::Def` used with non-`macro_rules!` macro\"),\n             },\n         };"}, {"sha": "ab1afce081f3c7059c3cb318d2c83767e76d29c3", "filename": "crates/hir_ty/src/consteval.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/ce926aebc4461e38535047958c0b6f72b7a0c0ea/crates%2Fhir_ty%2Fsrc%2Fconsteval.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ce926aebc4461e38535047958c0b6f72b7a0c0ea/crates%2Fhir_ty%2Fsrc%2Fconsteval.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_ty%2Fsrc%2Fconsteval.rs?ref=ce926aebc4461e38535047958c0b6f72b7a0c0ea", "patch": "@@ -38,8 +38,7 @@ impl ConstExt for Const {\n // FIXME: support more than just evaluating literals\n pub fn eval_usize(expr: &Expr) -> Option<u64> {\n     match expr {\n-        Expr::Literal(Literal::Uint(v, None))\n-        | Expr::Literal(Literal::Uint(v, Some(BuiltinUint::Usize))) => (*v).try_into().ok(),\n+        Expr::Literal(Literal::Uint(v, None | Some(BuiltinUint::Usize))) => (*v).try_into().ok(),\n         _ => None,\n     }\n }"}, {"sha": "e3d640a7969e75ef481c4806a50948bd13fcc8c5", "filename": "crates/hir_ty/src/diagnostics/match_check/deconstruct_pat.rs", "status": "modified", "additions": 3, "deletions": 6, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/ce926aebc4461e38535047958c0b6f72b7a0c0ea/crates%2Fhir_ty%2Fsrc%2Fdiagnostics%2Fmatch_check%2Fdeconstruct_pat.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ce926aebc4461e38535047958c0b6f72b7a0c0ea/crates%2Fhir_ty%2Fsrc%2Fdiagnostics%2Fmatch_check%2Fdeconstruct_pat.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_ty%2Fsrc%2Fdiagnostics%2Fmatch_check%2Fdeconstruct_pat.rs?ref=ce926aebc4461e38535047958c0b6f72b7a0c0ea", "patch": "@@ -84,10 +84,7 @@ impl IntRange {\n     #[inline]\n     fn is_integral(ty: &Ty) -> bool {\n         match ty.kind(&Interner) {\n-            TyKind::Scalar(Scalar::Char)\n-            | TyKind::Scalar(Scalar::Int(_))\n-            | TyKind::Scalar(Scalar::Uint(_))\n-            | TyKind::Scalar(Scalar::Bool) => true,\n+            TyKind::Scalar(Scalar::Char | Scalar::Int(_) | Scalar::Uint(_) | Scalar::Bool) => true,\n             _ => false,\n         }\n     }\n@@ -381,7 +378,7 @@ impl Constructor {\n             // Wildcards cover anything\n             (_, Wildcard) => true,\n             // The missing ctors are not covered by anything in the matrix except wildcards.\n-            (Missing, _) | (Wildcard, _) => false,\n+            (Missing | Wildcard, _) => false,\n \n             (Single, Single) => true,\n             (Variant(self_id), Variant(other_id)) => self_id == other_id,\n@@ -523,7 +520,7 @@ impl SplitWildcard {\n                 }\n             }\n             TyKind::Scalar(Scalar::Char) => unhandled(),\n-            TyKind::Scalar(Scalar::Int(..)) | TyKind::Scalar(Scalar::Uint(..)) => unhandled(),\n+            TyKind::Scalar(Scalar::Int(..) | Scalar::Uint(..)) => unhandled(),\n             TyKind::Never if !cx.feature_exhaustive_patterns() && !pcx.is_top_level => {\n                 smallvec![NonExhaustive]\n             }"}, {"sha": "7be91445199caea2d3e4200d7790bc5d22189a73", "filename": "crates/hir_ty/src/infer/coerce.rs", "status": "modified", "additions": 2, "deletions": 6, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/ce926aebc4461e38535047958c0b6f72b7a0c0ea/crates%2Fhir_ty%2Fsrc%2Finfer%2Fcoerce.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ce926aebc4461e38535047958c0b6f72b7a0c0ea/crates%2Fhir_ty%2Fsrc%2Finfer%2Fcoerce.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_ty%2Fsrc%2Finfer%2Fcoerce.rs?ref=ce926aebc4461e38535047958c0b6f72b7a0c0ea", "patch": "@@ -47,10 +47,7 @@ impl<'a> InferenceContext<'a> {\n         // pointers to have a chance at getting a match. See\n         // https://github.com/rust-lang/rust/blob/7b805396bf46dce972692a6846ce2ad8481c5f85/src/librustc_typeck/check/coercion.rs#L877-L916\n         let sig = match (ty1.kind(&Interner), ty2.kind(&Interner)) {\n-            (TyKind::FnDef(..), TyKind::FnDef(..))\n-            | (TyKind::Closure(..), TyKind::FnDef(..))\n-            | (TyKind::FnDef(..), TyKind::Closure(..))\n-            | (TyKind::Closure(..), TyKind::Closure(..)) => {\n+            (TyKind::FnDef(..) | TyKind::Closure(..), TyKind::FnDef(..) | TyKind::Closure(..)) => {\n                 // FIXME: we're ignoring safety here. To be more correct, if we have one FnDef and one Closure,\n                 // we should be coercing the closure to a fn pointer of the safety of the FnDef\n                 cov_mark::hit!(coerce_fn_reification);\n@@ -448,8 +445,7 @@ fn safe_to_unsafe_fn_ty(fn_ty: FnPointer) -> FnPointer {\n \n fn coerce_mutabilities(from: Mutability, to: Mutability) -> Result<(), TypeError> {\n     match (from, to) {\n-        (Mutability::Mut, Mutability::Mut)\n-        | (Mutability::Mut, Mutability::Not)\n+        (Mutability::Mut, Mutability::Mut | Mutability::Not)\n         | (Mutability::Not, Mutability::Not) => Ok(()),\n         (Mutability::Not, Mutability::Mut) => Err(TypeError),\n     }"}, {"sha": "4e4f6e5a46a9bf8772a70bc41a2db4d9f2b5fc19", "filename": "crates/hir_ty/src/infer/expr.rs", "status": "modified", "additions": 7, "deletions": 9, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/ce926aebc4461e38535047958c0b6f72b7a0c0ea/crates%2Fhir_ty%2Fsrc%2Finfer%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ce926aebc4461e38535047958c0b6f72b7a0c0ea/crates%2Fhir_ty%2Fsrc%2Finfer%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_ty%2Fsrc%2Finfer%2Fexpr.rs?ref=ce926aebc4461e38535047958c0b6f72b7a0c0ea", "patch": "@@ -593,11 +593,11 @@ impl<'a> InferenceContext<'a> {\n                     UnaryOp::Neg => {\n                         match inner_ty.kind(&Interner) {\n                             // Fast path for builtins\n-                            TyKind::Scalar(Scalar::Int(_))\n-                            | TyKind::Scalar(Scalar::Uint(_))\n-                            | TyKind::Scalar(Scalar::Float(_))\n-                            | TyKind::InferenceVar(_, TyVariableKind::Integer)\n-                            | TyKind::InferenceVar(_, TyVariableKind::Float) => inner_ty,\n+                            TyKind::Scalar(Scalar::Int(_) | Scalar::Uint(_) | Scalar::Float(_))\n+                            | TyKind::InferenceVar(\n+                                _,\n+                                TyVariableKind::Integer | TyVariableKind::Float,\n+                            ) => inner_ty,\n                             // Otherwise we resolve via the std::ops::Neg trait\n                             _ => self\n                                 .resolve_associated_type(inner_ty, self.resolve_ops_neg_output()),\n@@ -606,9 +606,7 @@ impl<'a> InferenceContext<'a> {\n                     UnaryOp::Not => {\n                         match inner_ty.kind(&Interner) {\n                             // Fast path for builtins\n-                            TyKind::Scalar(Scalar::Bool)\n-                            | TyKind::Scalar(Scalar::Int(_))\n-                            | TyKind::Scalar(Scalar::Uint(_))\n+                            TyKind::Scalar(Scalar::Bool | Scalar::Int(_) | Scalar::Uint(_))\n                             | TyKind::InferenceVar(_, TyVariableKind::Integer) => inner_ty,\n                             // Otherwise we resolve via the std::ops::Not trait\n                             _ => self\n@@ -735,7 +733,7 @@ impl<'a> InferenceContext<'a> {\n             Expr::Array(array) => {\n                 let elem_ty =\n                     match expected.to_option(&mut self.table).as_ref().map(|t| t.kind(&Interner)) {\n-                        Some(TyKind::Array(st, _)) | Some(TyKind::Slice(st)) => st.clone(),\n+                        Some(TyKind::Array(st, _) | TyKind::Slice(st)) => st.clone(),\n                         _ => self.table.new_type_var(),\n                     };\n "}, {"sha": "58cb23e9dca29b095b0ed701344ea7fd125dc61b", "filename": "crates/hir_ty/src/infer/pat.rs", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/ce926aebc4461e38535047958c0b6f72b7a0c0ea/crates%2Fhir_ty%2Fsrc%2Finfer%2Fpat.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ce926aebc4461e38535047958c0b6f72b7a0c0ea/crates%2Fhir_ty%2Fsrc%2Finfer%2Fpat.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_ty%2Fsrc%2Finfer%2Fpat.rs?ref=ce926aebc4461e38535047958c0b6f72b7a0c0ea", "patch": "@@ -297,10 +297,11 @@ fn is_non_ref_pat(body: &hir_def::body::Body, pat: PatId) -> bool {\n             Expr::Literal(Literal::String(..)) => false,\n             _ => true,\n         },\n-        Pat::Bind { mode: BindingAnnotation::Mutable, subpat: Some(subpat), .. }\n-        | Pat::Bind { mode: BindingAnnotation::Unannotated, subpat: Some(subpat), .. } => {\n-            is_non_ref_pat(body, *subpat)\n-        }\n+        Pat::Bind {\n+            mode: BindingAnnotation::Mutable | BindingAnnotation::Unannotated,\n+            subpat: Some(subpat),\n+            ..\n+        } => is_non_ref_pat(body, *subpat),\n         Pat::Wild | Pat::Bind { .. } | Pat::Ref { .. } | Pat::Box { .. } | Pat::Missing => false,\n     }\n }"}, {"sha": "5ef6342d57bd2bf02d3e7fe6736d6b6b65d9b48d", "filename": "crates/hir_ty/src/op.rs", "status": "modified", "additions": 15, "deletions": 23, "changes": 38, "blob_url": "https://github.com/rust-lang/rust/blob/ce926aebc4461e38535047958c0b6f72b7a0c0ea/crates%2Fhir_ty%2Fsrc%2Fop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ce926aebc4461e38535047958c0b6f72b7a0c0ea/crates%2Fhir_ty%2Fsrc%2Fop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_ty%2Fsrc%2Fop.rs?ref=ce926aebc4461e38535047958c0b6f72b7a0c0ea", "patch": "@@ -8,17 +8,15 @@ pub(super) fn binary_op_return_ty(op: BinaryOp, lhs_ty: Ty, rhs_ty: Ty) -> Ty {\n     match op {\n         BinaryOp::LogicOp(_) | BinaryOp::CmpOp(_) => TyKind::Scalar(Scalar::Bool).intern(&Interner),\n         BinaryOp::Assignment { .. } => TyBuilder::unit(),\n-        BinaryOp::ArithOp(ArithOp::Shl) | BinaryOp::ArithOp(ArithOp::Shr) => {\n+        BinaryOp::ArithOp(ArithOp::Shl | ArithOp::Shr) => {\n             // all integer combinations are valid here\n             if matches!(\n                 lhs_ty.kind(&Interner),\n-                TyKind::Scalar(Scalar::Int(_))\n-                    | TyKind::Scalar(Scalar::Uint(_))\n+                TyKind::Scalar(Scalar::Int(_) | Scalar::Uint(_))\n                     | TyKind::InferenceVar(_, TyVariableKind::Integer)\n             ) && matches!(\n                 rhs_ty.kind(&Interner),\n-                TyKind::Scalar(Scalar::Int(_))\n-                    | TyKind::Scalar(Scalar::Uint(_))\n+                TyKind::Scalar(Scalar::Int(_) | Scalar::Uint(_))\n                     | TyKind::InferenceVar(_, TyVariableKind::Integer)\n             ) {\n                 lhs_ty\n@@ -32,15 +30,15 @@ pub(super) fn binary_op_return_ty(op: BinaryOp, lhs_ty: Ty, rhs_ty: Ty) -> Ty {\n             | (TyKind::Scalar(Scalar::Uint(_)), TyKind::Scalar(Scalar::Uint(_)))\n             | (TyKind::Scalar(Scalar::Float(_)), TyKind::Scalar(Scalar::Float(_))) => rhs_ty,\n             // ({int}, int) | ({int}, uint)\n-            (TyKind::InferenceVar(_, TyVariableKind::Integer), TyKind::Scalar(Scalar::Int(_)))\n-            | (TyKind::InferenceVar(_, TyVariableKind::Integer), TyKind::Scalar(Scalar::Uint(_))) => {\n-                rhs_ty\n-            }\n+            (\n+                TyKind::InferenceVar(_, TyVariableKind::Integer),\n+                TyKind::Scalar(Scalar::Int(_) | Scalar::Uint(_)),\n+            ) => rhs_ty,\n             // (int, {int}) | (uint, {int})\n-            (TyKind::Scalar(Scalar::Int(_)), TyKind::InferenceVar(_, TyVariableKind::Integer))\n-            | (TyKind::Scalar(Scalar::Uint(_)), TyKind::InferenceVar(_, TyVariableKind::Integer)) => {\n-                lhs_ty\n-            }\n+            (\n+                TyKind::Scalar(Scalar::Int(_) | Scalar::Uint(_)),\n+                TyKind::InferenceVar(_, TyVariableKind::Integer),\n+            ) => lhs_ty,\n             // ({float} | float)\n             (TyKind::InferenceVar(_, TyVariableKind::Float), TyKind::Scalar(Scalar::Float(_))) => {\n                 rhs_ty\n@@ -69,21 +67,15 @@ pub(super) fn binary_op_rhs_expectation(op: BinaryOp, lhs_ty: Ty) -> Ty {\n         BinaryOp::Assignment { op: None } => lhs_ty,\n         BinaryOp::CmpOp(CmpOp::Eq { .. }) => match lhs_ty.kind(&Interner) {\n             TyKind::Scalar(_) | TyKind::Str => lhs_ty,\n-            TyKind::InferenceVar(_, TyVariableKind::Integer)\n-            | TyKind::InferenceVar(_, TyVariableKind::Float) => lhs_ty,\n+            TyKind::InferenceVar(_, TyVariableKind::Integer | TyVariableKind::Float) => lhs_ty,\n             _ => TyKind::Error.intern(&Interner),\n         },\n-        BinaryOp::ArithOp(ArithOp::Shl) | BinaryOp::ArithOp(ArithOp::Shr) => {\n-            TyKind::Error.intern(&Interner)\n-        }\n+        BinaryOp::ArithOp(ArithOp::Shl | ArithOp::Shr) => TyKind::Error.intern(&Interner),\n         BinaryOp::CmpOp(CmpOp::Ord { .. })\n         | BinaryOp::Assignment { op: Some(_) }\n         | BinaryOp::ArithOp(_) => match lhs_ty.kind(&Interner) {\n-            TyKind::Scalar(Scalar::Int(_))\n-            | TyKind::Scalar(Scalar::Uint(_))\n-            | TyKind::Scalar(Scalar::Float(_)) => lhs_ty,\n-            TyKind::InferenceVar(_, TyVariableKind::Integer)\n-            | TyKind::InferenceVar(_, TyVariableKind::Float) => lhs_ty,\n+            TyKind::Scalar(Scalar::Int(_) | Scalar::Uint(_) | Scalar::Float(_)) => lhs_ty,\n+            TyKind::InferenceVar(_, TyVariableKind::Integer | TyVariableKind::Float) => lhs_ty,\n             _ => TyKind::Error.intern(&Interner),\n         },\n     }"}, {"sha": "ffa8bd1826a1acf5f83050fecf91710f399797d5", "filename": "crates/ide/src/join_lines.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ce926aebc4461e38535047958c0b6f72b7a0c0ea/crates%2Fide%2Fsrc%2Fjoin_lines.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ce926aebc4461e38535047958c0b6f72b7a0c0ea/crates%2Fide%2Fsrc%2Fjoin_lines.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fjoin_lines.rs?ref=ce926aebc4461e38535047958c0b6f72b7a0c0ea", "patch": "@@ -197,7 +197,7 @@ fn join_single_use_tree(edit: &mut TextEditBuilder, token: &SyntaxToken) -> Opti\n }\n \n fn is_trailing_comma(left: SyntaxKind, right: SyntaxKind) -> bool {\n-    matches!((left, right), (T![,], T![')']) | (T![,], T![']']))\n+    matches!((left, right), (T![,], T![')'] | T![']']))\n }\n \n fn compute_ws(left: SyntaxKind, right: SyntaxKind) -> &'static str {"}, {"sha": "5808562a77156fc936e6fe6b0b4d03ccfa6d1468", "filename": "crates/ide/src/references.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/ce926aebc4461e38535047958c0b6f72b7a0c0ea/crates%2Fide%2Fsrc%2Freferences.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ce926aebc4461e38535047958c0b6f72b7a0c0ea/crates%2Fide%2Fsrc%2Freferences.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Freferences.rs?ref=ce926aebc4461e38535047958c0b6f72b7a0c0ea", "patch": "@@ -79,8 +79,7 @@ pub(crate) fn find_all_refs(\n                 });\n                 usages.references.retain(|_, it| !it.is_empty());\n             }\n-            Definition::ModuleDef(hir::ModuleDef::Adt(_))\n-            | Definition::ModuleDef(hir::ModuleDef::Variant(_)) => {\n+            Definition::ModuleDef(hir::ModuleDef::Adt(_) | hir::ModuleDef::Variant(_)) => {\n                 refs.for_each(|it| {\n                     it.retain(|reference| {\n                         reference.name.as_name_ref().map_or(false, is_lit_name_ref)"}, {"sha": "d44a1b45f62b2997016a5a3f72ed31c6fafdedd4", "filename": "crates/ide/src/syntax_highlighting.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ce926aebc4461e38535047958c0b6f72b7a0c0ea/crates%2Fide%2Fsrc%2Fsyntax_highlighting.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ce926aebc4461e38535047958c0b6f72b7a0c0ea/crates%2Fide%2Fsrc%2Fsyntax_highlighting.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fsyntax_highlighting.rs?ref=ce926aebc4461e38535047958c0b6f72b7a0c0ea", "patch": "@@ -294,7 +294,7 @@ fn traverse(\n                 Some(parent) => {\n                     // We only care Name and Name_ref\n                     match (token.kind(), parent.kind()) {\n-                        (IDENT, NAME) | (IDENT, NAME_REF) => parent.into(),\n+                        (IDENT, NAME | NAME_REF) => parent.into(),\n                         _ => token.into(),\n                     }\n                 }\n@@ -310,7 +310,7 @@ fn traverse(\n                 Some(parent) => {\n                     // We only care Name and Name_ref\n                     match (token.kind(), parent.kind()) {\n-                        (IDENT, NAME) | (IDENT, NAME_REF) => parent.into(),\n+                        (IDENT, NAME | NAME_REF) => parent.into(),\n                         _ => token.into(),\n                     }\n                 }"}, {"sha": "7085a0c484930f507f238f1006606c36b162c20a", "filename": "crates/ide_assists/src/handlers/extract_function.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ce926aebc4461e38535047958c0b6f72b7a0c0ea/crates%2Fide_assists%2Fsrc%2Fhandlers%2Fextract_function.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ce926aebc4461e38535047958c0b6f72b7a0c0ea/crates%2Fide_assists%2Fsrc%2Fhandlers%2Fextract_function.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_assists%2Fsrc%2Fhandlers%2Fextract_function.rs?ref=ce926aebc4461e38535047958c0b6f72b7a0c0ea", "patch": "@@ -1384,7 +1384,7 @@ fn fix_param_usages(ctx: &AssistContext, params: &[Param], syntax: &SyntaxNode)\n     for (param, usages) in usages_for_param {\n         for usage in usages {\n             match usage.syntax().ancestors().skip(1).find_map(ast::Expr::cast) {\n-                Some(ast::Expr::MethodCallExpr(_)) | Some(ast::Expr::FieldExpr(_)) => {\n+                Some(ast::Expr::MethodCallExpr(_) | ast::Expr::FieldExpr(_)) => {\n                     // do nothing\n                 }\n                 Some(ast::Expr::RefExpr(node))"}, {"sha": "945d286503320ef416b346e0982eba7b14952438", "filename": "crates/ide_assists/src/handlers/inline_local_variable.rs", "status": "modified", "additions": 29, "deletions": 26, "changes": 55, "blob_url": "https://github.com/rust-lang/rust/blob/ce926aebc4461e38535047958c0b6f72b7a0c0ea/crates%2Fide_assists%2Fsrc%2Fhandlers%2Finline_local_variable.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ce926aebc4461e38535047958c0b6f72b7a0c0ea/crates%2Fide_assists%2Fsrc%2Fhandlers%2Finline_local_variable.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_assists%2Fsrc%2Fhandlers%2Finline_local_variable.rs?ref=ce926aebc4461e38535047958c0b6f72b7a0c0ea", "patch": "@@ -65,32 +65,35 @@ pub(crate) fn inline_local_variable(acc: &mut Assists, ctx: &AssistContext) -> O\n                         Some(u) => u,\n                         None => return Some(false),\n                     };\n-\n-                    Some(!matches!(\n-                        (&initializer_expr, usage_parent),\n-                        (ast::Expr::CallExpr(_), _)\n-                            | (ast::Expr::IndexExpr(_), _)\n-                            | (ast::Expr::MethodCallExpr(_), _)\n-                            | (ast::Expr::FieldExpr(_), _)\n-                            | (ast::Expr::TryExpr(_), _)\n-                            | (ast::Expr::RefExpr(_), _)\n-                            | (ast::Expr::Literal(_), _)\n-                            | (ast::Expr::TupleExpr(_), _)\n-                            | (ast::Expr::ArrayExpr(_), _)\n-                            | (ast::Expr::ParenExpr(_), _)\n-                            | (ast::Expr::PathExpr(_), _)\n-                            | (ast::Expr::BlockExpr(_), _)\n-                            | (ast::Expr::EffectExpr(_), _)\n-                            | (_, ast::Expr::CallExpr(_))\n-                            | (_, ast::Expr::TupleExpr(_))\n-                            | (_, ast::Expr::ArrayExpr(_))\n-                            | (_, ast::Expr::ParenExpr(_))\n-                            | (_, ast::Expr::ForExpr(_))\n-                            | (_, ast::Expr::WhileExpr(_))\n-                            | (_, ast::Expr::BreakExpr(_))\n-                            | (_, ast::Expr::ReturnExpr(_))\n-                            | (_, ast::Expr::MatchExpr(_))\n-                    ))\n+                    Some(\n+                        !(matches!(\n+                            initializer_expr,\n+                            ast::Expr::CallExpr(_)\n+                                | ast::Expr::IndexExpr(_)\n+                                | ast::Expr::MethodCallExpr(_)\n+                                | ast::Expr::FieldExpr(_)\n+                                | ast::Expr::TryExpr(_)\n+                                | ast::Expr::RefExpr(_)\n+                                | ast::Expr::Literal(_)\n+                                | ast::Expr::TupleExpr(_)\n+                                | ast::Expr::ArrayExpr(_)\n+                                | ast::Expr::ParenExpr(_)\n+                                | ast::Expr::PathExpr(_)\n+                                | ast::Expr::BlockExpr(_)\n+                                | ast::Expr::EffectExpr(_),\n+                        ) || matches!(\n+                            usage_parent,\n+                            ast::Expr::CallExpr(_)\n+                                | ast::Expr::TupleExpr(_)\n+                                | ast::Expr::ArrayExpr(_)\n+                                | ast::Expr::ParenExpr(_)\n+                                | ast::Expr::ForExpr(_)\n+                                | ast::Expr::WhileExpr(_)\n+                                | ast::Expr::BreakExpr(_)\n+                                | ast::Expr::ReturnExpr(_)\n+                                | ast::Expr::MatchExpr(_)\n+                        )),\n+                    )\n                 })\n                 .collect::<Option<_>>()\n                 .map(|b| (file_id, b))"}, {"sha": "29bd4a563f799470c97c5bab530b1eda5a0bef4b", "filename": "crates/ide_assists/src/tests.rs", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/ce926aebc4461e38535047958c0b6f72b7a0c0ea/crates%2Fide_assists%2Fsrc%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ce926aebc4461e38535047958c0b6f72b7a0c0ea/crates%2Fide_assists%2Fsrc%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_assists%2Fsrc%2Ftests.rs?ref=ce926aebc4461e38535047958c0b6f72b7a0c0ea", "patch": "@@ -179,9 +179,10 @@ fn check(handler: Handler, before: &str, expected: ExpectedResult, assist_label:\n             \"unresolved assist should not contain source changes\"\n         ),\n         (Some(_), ExpectedResult::NotApplicable) => panic!(\"assist should not be applicable!\"),\n-        (None, ExpectedResult::After(_))\n-        | (None, ExpectedResult::Target(_))\n-        | (None, ExpectedResult::Unresolved) => {\n+        (\n+            None,\n+            ExpectedResult::After(_) | ExpectedResult::Target(_) | ExpectedResult::Unresolved,\n+        ) => {\n             panic!(\"code action is not applicable\")\n         }\n         (None, ExpectedResult::NotApplicable) => (),"}, {"sha": "f5dbd203bbd616c4d2324ad19620de0748aa134a", "filename": "crates/ide_completion/src/completions/qualified_path.rs", "status": "modified", "additions": 12, "deletions": 6, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/ce926aebc4461e38535047958c0b6f72b7a0c0ea/crates%2Fide_completion%2Fsrc%2Fcompletions%2Fqualified_path.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ce926aebc4461e38535047958c0b6f72b7a0c0ea/crates%2Fide_completion%2Fsrc%2Fcompletions%2Fqualified_path.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_completion%2Fsrc%2Fcompletions%2Fqualified_path.rs?ref=ce926aebc4461e38535047958c0b6f72b7a0c0ea", "patch": "@@ -65,9 +65,11 @@ pub(crate) fn complete_qualified_path(acc: &mut Completions, ctx: &CompletionCon\n                     // Don't suggest attribute macros and derives.\n                     hir::ScopeDef::MacroDef(mac) => mac.is_fn_like(),\n                     // no values in type places\n-                    hir::ScopeDef::ModuleDef(hir::ModuleDef::Function(_))\n-                    | hir::ScopeDef::ModuleDef(hir::ModuleDef::Variant(_))\n-                    | hir::ScopeDef::ModuleDef(hir::ModuleDef::Static(_))\n+                    hir::ScopeDef::ModuleDef(\n+                        hir::ModuleDef::Function(_)\n+                        | hir::ModuleDef::Variant(_)\n+                        | hir::ModuleDef::Static(_),\n+                    )\n                     | hir::ScopeDef::Local(_) => !ctx.expects_type(),\n                     // unless its a constant in a generic arg list position\n                     hir::ScopeDef::ModuleDef(hir::ModuleDef::Const(_)) => {\n@@ -81,9 +83,13 @@ pub(crate) fn complete_qualified_path(acc: &mut Completions, ctx: &CompletionCon\n                 }\n             }\n         }\n-        hir::PathResolution::Def(def @ hir::ModuleDef::Adt(_))\n-        | hir::PathResolution::Def(def @ hir::ModuleDef::TypeAlias(_))\n-        | hir::PathResolution::Def(def @ hir::ModuleDef::BuiltinType(_)) => {\n+        hir::PathResolution::Def(\n+            def\n+            @\n+            (hir::ModuleDef::Adt(_)\n+            | hir::ModuleDef::TypeAlias(_)\n+            | hir::ModuleDef::BuiltinType(_)),\n+        ) => {\n             if let hir::ModuleDef::Adt(hir::Adt::Enum(e)) = def {\n                 add_enum_variants(acc, ctx, e);\n             }"}, {"sha": "81c4fb305cd4e7fe2a7aceefc13c04f71a46812f", "filename": "crates/ide_completion/src/completions/unqualified_path.rs", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/ce926aebc4461e38535047958c0b6f72b7a0c0ea/crates%2Fide_completion%2Fsrc%2Fcompletions%2Funqualified_path.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ce926aebc4461e38535047958c0b6f72b7a0c0ea/crates%2Fide_completion%2Fsrc%2Fcompletions%2Funqualified_path.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_completion%2Fsrc%2Fcompletions%2Funqualified_path.rs?ref=ce926aebc4461e38535047958c0b6f72b7a0c0ea", "patch": "@@ -74,9 +74,11 @@ pub(crate) fn complete_unqualified_path(acc: &mut Completions, ctx: &CompletionC\n             // Don't suggest attribute macros and derives.\n             ScopeDef::MacroDef(mac) => mac.is_fn_like(),\n             // no values in type places\n-            ScopeDef::ModuleDef(hir::ModuleDef::Function(_))\n-            | ScopeDef::ModuleDef(hir::ModuleDef::Variant(_))\n-            | ScopeDef::ModuleDef(hir::ModuleDef::Static(_))\n+            ScopeDef::ModuleDef(\n+                hir::ModuleDef::Function(_)\n+                | hir::ModuleDef::Variant(_)\n+                | hir::ModuleDef::Static(_),\n+            )\n             | ScopeDef::Local(_) => !ctx.expects_type(),\n             // unless its a constant in a generic arg list position\n             ScopeDef::ModuleDef(hir::ModuleDef::Const(_))"}, {"sha": "98fb3604285c75cb15851fc45598fa6269d1819a", "filename": "crates/ide_completion/src/context.rs", "status": "modified", "additions": 16, "deletions": 15, "changes": 31, "blob_url": "https://github.com/rust-lang/rust/blob/ce926aebc4461e38535047958c0b6f72b7a0c0ea/crates%2Fide_completion%2Fsrc%2Fcontext.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ce926aebc4461e38535047958c0b6f72b7a0c0ea/crates%2Fide_completion%2Fsrc%2Fcontext.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_completion%2Fsrc%2Fcontext.rs?ref=ce926aebc4461e38535047958c0b6f72b7a0c0ea", "patch": "@@ -242,24 +242,23 @@ impl<'a> CompletionContext<'a> {\n     }\n \n     pub(crate) fn expects_assoc_item(&self) -> bool {\n-        matches!(\n-            self.completion_location,\n-            Some(ImmediateLocation::Trait) | Some(ImmediateLocation::Impl)\n-        )\n+        matches!(self.completion_location, Some(ImmediateLocation::Trait | ImmediateLocation::Impl))\n     }\n \n     pub(crate) fn has_dot_receiver(&self) -> bool {\n         matches!(\n             &self.completion_location,\n-            Some(ImmediateLocation::FieldAccess { receiver, .. }) | Some(ImmediateLocation::MethodCall { receiver,.. })\n+            Some(ImmediateLocation::FieldAccess { receiver, .. } | ImmediateLocation::MethodCall { receiver,.. })\n                 if receiver.is_some()\n         )\n     }\n \n     pub(crate) fn dot_receiver(&self) -> Option<&ast::Expr> {\n         match &self.completion_location {\n-            Some(ImmediateLocation::MethodCall { receiver, .. })\n-            | Some(ImmediateLocation::FieldAccess { receiver, .. }) => receiver.as_ref(),\n+            Some(\n+                ImmediateLocation::MethodCall { receiver, .. }\n+                | ImmediateLocation::FieldAccess { receiver, .. },\n+            ) => receiver.as_ref(),\n             _ => None,\n         }\n     }\n@@ -283,7 +282,7 @@ impl<'a> CompletionContext<'a> {\n     pub(crate) fn expects_ident_pat_or_ref_expr(&self) -> bool {\n         matches!(\n             self.completion_location,\n-            Some(ImmediateLocation::IdentPat) | Some(ImmediateLocation::RefExpr)\n+            Some(ImmediateLocation::IdentPat | ImmediateLocation::RefExpr)\n         )\n     }\n \n@@ -294,14 +293,14 @@ impl<'a> CompletionContext<'a> {\n     pub(crate) fn in_use_tree(&self) -> bool {\n         matches!(\n             self.completion_location,\n-            Some(ImmediateLocation::Use) | Some(ImmediateLocation::UseTree)\n+            Some(ImmediateLocation::Use | ImmediateLocation::UseTree)\n         )\n     }\n \n     pub(crate) fn has_impl_or_trait_prev_sibling(&self) -> bool {\n         matches!(\n             self.prev_sibling,\n-            Some(ImmediatePrevSibling::ImplDefType) | Some(ImmediatePrevSibling::TraitDefName)\n+            Some(ImmediatePrevSibling::ImplDefType | ImmediatePrevSibling::TraitDefName)\n         )\n     }\n \n@@ -322,14 +321,16 @@ impl<'a> CompletionContext<'a> {\n             || self.previous_token_is(T![unsafe])\n             || matches!(\n                 self.prev_sibling,\n-                Some(ImmediatePrevSibling::Attribute) | Some(ImmediatePrevSibling::Visibility)\n+                Some(ImmediatePrevSibling::Attribute | ImmediatePrevSibling::Visibility)\n             )\n             || matches!(\n                 self.completion_location,\n-                Some(ImmediateLocation::Attribute(_))\n-                    | Some(ImmediateLocation::ModDeclaration(_))\n-                    | Some(ImmediateLocation::RecordPat(_))\n-                    | Some(ImmediateLocation::RecordExpr(_))\n+                Some(\n+                    ImmediateLocation::Attribute(_)\n+                        | ImmediateLocation::ModDeclaration(_)\n+                        | ImmediateLocation::RecordPat(_)\n+                        | ImmediateLocation::RecordExpr(_)\n+                )\n             )\n     }\n "}, {"sha": "33d3a5ee188942bf2184646e53d8a379ebe120b0", "filename": "crates/ide_completion/src/render/builder_ext.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ce926aebc4461e38535047958c0b6f72b7a0c0ea/crates%2Fide_completion%2Fsrc%2Frender%2Fbuilder_ext.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ce926aebc4461e38535047958c0b6f72b7a0c0ea/crates%2Fide_completion%2Fsrc%2Frender%2Fbuilder_ext.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_completion%2Fsrc%2Frender%2Fbuilder_ext.rs?ref=ce926aebc4461e38535047958c0b6f72b7a0c0ea", "patch": "@@ -32,7 +32,7 @@ impl Builder {\n             cov_mark::hit!(no_parens_in_use_item);\n             return false;\n         }\n-        if matches!(ctx.path_call_kind(), Some(CallKind::Expr) | Some(CallKind::Pat))\n+        if matches!(ctx.path_call_kind(), Some(CallKind::Expr | CallKind::Pat))\n             | matches!(\n                 ctx.completion_location,\n                 Some(ImmediateLocation::MethodCall { has_parens: true, .. })"}, {"sha": "b4f2fe9a4a795e90f4e59ae00e8a5ef3c123d56d", "filename": "crates/mbe/src/expander/matcher.rs", "status": "modified", "additions": 3, "deletions": 19, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/ce926aebc4461e38535047958c0b6f72b7a0c0ea/crates%2Fmbe%2Fsrc%2Fexpander%2Fmatcher.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ce926aebc4461e38535047958c0b6f72b7a0c0ea/crates%2Fmbe%2Fsrc%2Fexpander%2Fmatcher.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fmbe%2Fsrc%2Fexpander%2Fmatcher.rs?ref=ce926aebc4461e38535047958c0b6f72b7a0c0ea", "patch": "@@ -804,33 +804,17 @@ impl<'a> TtIter<'a> {\n         };\n \n         match (punct.char, second, third) {\n-            ('.', '.', Some('.'))\n-            | ('.', '.', Some('='))\n-            | ('<', '<', Some('='))\n-            | ('>', '>', Some('=')) => {\n+            ('.', '.', Some('.' | '=')) | ('<', '<', Some('=')) | ('>', '>', Some('=')) => {\n                 let tt2 = self.next().unwrap().clone();\n                 let tt3 = self.next().unwrap().clone();\n                 Ok(tt::Subtree { delimiter: None, token_trees: vec![tt, tt2, tt3] }.into())\n             }\n-            ('-', '=', _)\n-            | ('-', '>', _)\n+            ('-' | '!' | '*' | '/' | '&' | '%' | '^' | '+' | '<' | '=' | '>' | '|', '=', _)\n+            | ('-' | '=' | '>', '>', _)\n             | (':', ':', _)\n-            | ('!', '=', _)\n             | ('.', '.', _)\n-            | ('*', '=', _)\n-            | ('/', '=', _)\n             | ('&', '&', _)\n-            | ('&', '=', _)\n-            | ('%', '=', _)\n-            | ('^', '=', _)\n-            | ('+', '=', _)\n             | ('<', '<', _)\n-            | ('<', '=', _)\n-            | ('=', '=', _)\n-            | ('=', '>', _)\n-            | ('>', '=', _)\n-            | ('>', '>', _)\n-            | ('|', '=', _)\n             | ('|', '|', _) => {\n                 let tt2 = self.next().unwrap().clone();\n                 Ok(tt::Subtree { delimiter: None, token_trees: vec![tt, tt2] }.into())"}, {"sha": "a7f936a703e33f871da26f79c3da6dd038f750de", "filename": "crates/rust-analyzer/src/diagnostics/test_data/handles_macro_location.txt", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ce926aebc4461e38535047958c0b6f72b7a0c0ea/crates%2Frust-analyzer%2Fsrc%2Fdiagnostics%2Ftest_data%2Fhandles_macro_location.txt", "raw_url": "https://github.com/rust-lang/rust/raw/ce926aebc4461e38535047958c0b6f72b7a0c0ea/crates%2Frust-analyzer%2Fsrc%2Fdiagnostics%2Ftest_data%2Fhandles_macro_location.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fdiagnostics%2Ftest_data%2Fhandles_macro_location.txt?ref=ce926aebc4461e38535047958c0b6f72b7a0c0ea", "patch": "@@ -54,7 +54,7 @@\n             source: Some(\n                 \"rustc\",\n             ),\n-            message: \"can\\'t compare `{integer}` with `&str`\\nthe trait `std::cmp::PartialEq<&str>` is not implemented for `{integer}`\",\n+            message: \"can't compare `{integer}` with `&str`\\nthe trait `std::cmp::PartialEq<&str>` is not implemented for `{integer}`\",\n             related_information: None,\n             tags: None,\n             data: None,"}, {"sha": "afc562a0e2bee18f012f5f390075af1b1cc710d6", "filename": "crates/rust-analyzer/src/diagnostics/test_data/rustc_incompatible_type_for_trait.txt", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ce926aebc4461e38535047958c0b6f72b7a0c0ea/crates%2Frust-analyzer%2Fsrc%2Fdiagnostics%2Ftest_data%2Frustc_incompatible_type_for_trait.txt", "raw_url": "https://github.com/rust-lang/rust/raw/ce926aebc4461e38535047958c0b6f72b7a0c0ea/crates%2Frust-analyzer%2Fsrc%2Fdiagnostics%2Ftest_data%2Frustc_incompatible_type_for_trait.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fdiagnostics%2Ftest_data%2Frustc_incompatible_type_for_trait.txt?ref=ce926aebc4461e38535047958c0b6f72b7a0c0ea", "patch": "@@ -54,7 +54,7 @@\n             source: Some(\n                 \"rustc\",\n             ),\n-            message: \"method `next` has an incompatible type for trait\\nexpected type `fn(&mut ty::list_iter::ListIterator<\\'list, M>) -> std::option::Option<&ty::Ref<M>>`\\n   found type `fn(&ty::list_iter::ListIterator<\\'list, M>) -> std::option::Option<&\\'list ty::Ref<M>>`\",\n+            message: \"method `next` has an incompatible type for trait\\nexpected type `fn(&mut ty::list_iter::ListIterator<'list, M>) -> std::option::Option<&ty::Ref<M>>`\\n   found type `fn(&ty::list_iter::ListIterator<'list, M>) -> std::option::Option<&'list ty::Ref<M>>`\",\n             related_information: None,\n             tags: None,\n             data: None,"}, {"sha": "135f49552be99679df79d071e12b4df181c0d042", "filename": "crates/syntax/test_data/lexer/err/0001_unclosed_char_at_eof.txt", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ce926aebc4461e38535047958c0b6f72b7a0c0ea/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0001_unclosed_char_at_eof.txt", "raw_url": "https://github.com/rust-lang/rust/raw/ce926aebc4461e38535047958c0b6f72b7a0c0ea/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0001_unclosed_char_at_eof.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0001_unclosed_char_at_eof.txt?ref=ce926aebc4461e38535047958c0b6f72b7a0c0ea", "patch": "@@ -1,2 +1,2 @@\n-CHAR 1 \"\\'\"\n-> error0..1 token(\"\\'\") msg(Missing trailing `'` symbol to terminate the character literal)\n+CHAR 1 \"'\"\n+> error0..1 token(\"'\") msg(Missing trailing `'` symbol to terminate the character literal)"}, {"sha": "cc3933d9566e552d8db610da9848c54144d25624", "filename": "crates/syntax/test_data/lexer/err/0002_unclosed_char_with_ferris.txt", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ce926aebc4461e38535047958c0b6f72b7a0c0ea/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0002_unclosed_char_with_ferris.txt", "raw_url": "https://github.com/rust-lang/rust/raw/ce926aebc4461e38535047958c0b6f72b7a0c0ea/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0002_unclosed_char_with_ferris.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0002_unclosed_char_with_ferris.txt?ref=ce926aebc4461e38535047958c0b6f72b7a0c0ea", "patch": "@@ -1,2 +1,2 @@\n-CHAR 5 \"\\'\ud83e\udd80\"\n-> error0..5 token(\"\\'\ud83e\udd80\") msg(Missing trailing `'` symbol to terminate the character literal)\n+CHAR 5 \"'\ud83e\udd80\"\n+> error0..5 token(\"'\ud83e\udd80\") msg(Missing trailing `'` symbol to terminate the character literal)"}, {"sha": "21d990e6f10f07ba2abc64515c143fd42fbbf42a", "filename": "crates/syntax/test_data/lexer/err/0003_unclosed_char_with_ascii_escape.txt", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ce926aebc4461e38535047958c0b6f72b7a0c0ea/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0003_unclosed_char_with_ascii_escape.txt", "raw_url": "https://github.com/rust-lang/rust/raw/ce926aebc4461e38535047958c0b6f72b7a0c0ea/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0003_unclosed_char_with_ascii_escape.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0003_unclosed_char_with_ascii_escape.txt?ref=ce926aebc4461e38535047958c0b6f72b7a0c0ea", "patch": "@@ -1,2 +1,2 @@\n-CHAR 5 \"\\'\\\\x7f\"\n-> error0..5 token(\"\\'\\\\x7f\") msg(Missing trailing `'` symbol to terminate the character literal)\n+CHAR 5 \"'\\\\x7f\"\n+> error0..5 token(\"'\\\\x7f\") msg(Missing trailing `'` symbol to terminate the character literal)"}, {"sha": "055dba64cc679747dd24a335269ffe50cd28e9ed", "filename": "crates/syntax/test_data/lexer/err/0004_unclosed_char_with_unicode_escape.txt", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ce926aebc4461e38535047958c0b6f72b7a0c0ea/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0004_unclosed_char_with_unicode_escape.txt", "raw_url": "https://github.com/rust-lang/rust/raw/ce926aebc4461e38535047958c0b6f72b7a0c0ea/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0004_unclosed_char_with_unicode_escape.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0004_unclosed_char_with_unicode_escape.txt?ref=ce926aebc4461e38535047958c0b6f72b7a0c0ea", "patch": "@@ -1,2 +1,2 @@\n-CHAR 9 \"\\'\\\\u{20AA}\"\n-> error0..9 token(\"\\'\\\\u{20AA}\") msg(Missing trailing `'` symbol to terminate the character literal)\n+CHAR 9 \"'\\\\u{20AA}\"\n+> error0..9 token(\"'\\\\u{20AA}\") msg(Missing trailing `'` symbol to terminate the character literal)"}, {"sha": "9ee5e93fa431e2213c8860ecae62eb212ffaef50", "filename": "crates/syntax/test_data/lexer/err/0005_unclosed_char_with_space.txt", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ce926aebc4461e38535047958c0b6f72b7a0c0ea/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0005_unclosed_char_with_space.txt", "raw_url": "https://github.com/rust-lang/rust/raw/ce926aebc4461e38535047958c0b6f72b7a0c0ea/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0005_unclosed_char_with_space.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0005_unclosed_char_with_space.txt?ref=ce926aebc4461e38535047958c0b6f72b7a0c0ea", "patch": "@@ -1,2 +1,2 @@\n-CHAR 2 \"\\' \"\n-> error0..2 token(\"\\' \") msg(Missing trailing `'` symbol to terminate the character literal)\n+CHAR 2 \"' \"\n+> error0..2 token(\"' \") msg(Missing trailing `'` symbol to terminate the character literal)"}, {"sha": "dc3a596f63639b5aa9c38e81f7cc992e13369a68", "filename": "crates/syntax/test_data/lexer/err/0006_unclosed_char_with_slash.txt", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ce926aebc4461e38535047958c0b6f72b7a0c0ea/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0006_unclosed_char_with_slash.txt", "raw_url": "https://github.com/rust-lang/rust/raw/ce926aebc4461e38535047958c0b6f72b7a0c0ea/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0006_unclosed_char_with_slash.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0006_unclosed_char_with_slash.txt?ref=ce926aebc4461e38535047958c0b6f72b7a0c0ea", "patch": "@@ -1,2 +1,2 @@\n-CHAR 2 \"\\'\\\\\"\n-> error0..2 token(\"\\'\\\\\") msg(Missing trailing `'` symbol to terminate the character literal)\n+CHAR 2 \"'\\\\\"\n+> error0..2 token(\"'\\\\\") msg(Missing trailing `'` symbol to terminate the character literal)"}, {"sha": "e46edea98625799bcf18fd58f42eb5bb82ab4ed7", "filename": "crates/syntax/test_data/lexer/err/0007_unclosed_char_with_slash_n.txt", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ce926aebc4461e38535047958c0b6f72b7a0c0ea/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0007_unclosed_char_with_slash_n.txt", "raw_url": "https://github.com/rust-lang/rust/raw/ce926aebc4461e38535047958c0b6f72b7a0c0ea/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0007_unclosed_char_with_slash_n.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0007_unclosed_char_with_slash_n.txt?ref=ce926aebc4461e38535047958c0b6f72b7a0c0ea", "patch": "@@ -1,2 +1,2 @@\n-CHAR 3 \"\\'\\\\n\"\n-> error0..3 token(\"\\'\\\\n\") msg(Missing trailing `'` symbol to terminate the character literal)\n+CHAR 3 \"'\\\\n\"\n+> error0..3 token(\"'\\\\n\") msg(Missing trailing `'` symbol to terminate the character literal)"}, {"sha": "8ad1e913af4736dad3aaaae05ee577bf9c8ba3c0", "filename": "crates/syntax/test_data/lexer/err/0008_unclosed_char_with_slash_single_quote.txt", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ce926aebc4461e38535047958c0b6f72b7a0c0ea/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0008_unclosed_char_with_slash_single_quote.txt", "raw_url": "https://github.com/rust-lang/rust/raw/ce926aebc4461e38535047958c0b6f72b7a0c0ea/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0008_unclosed_char_with_slash_single_quote.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0008_unclosed_char_with_slash_single_quote.txt?ref=ce926aebc4461e38535047958c0b6f72b7a0c0ea", "patch": "@@ -1,2 +1,2 @@\n-CHAR 3 \"\\'\\\\\\'\"\n-> error0..3 token(\"\\'\\\\\\'\") msg(Missing trailing `'` symbol to terminate the character literal)\n+CHAR 3 \"'\\\\'\"\n+> error0..3 token(\"'\\\\'\") msg(Missing trailing `'` symbol to terminate the character literal)"}, {"sha": "9d30c746699bf1a0eb3e891d0b4ad60ffe59f54d", "filename": "crates/syntax/test_data/lexer/err/0009_unclosed_byte_at_eof.txt", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ce926aebc4461e38535047958c0b6f72b7a0c0ea/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0009_unclosed_byte_at_eof.txt", "raw_url": "https://github.com/rust-lang/rust/raw/ce926aebc4461e38535047958c0b6f72b7a0c0ea/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0009_unclosed_byte_at_eof.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0009_unclosed_byte_at_eof.txt?ref=ce926aebc4461e38535047958c0b6f72b7a0c0ea", "patch": "@@ -1,2 +1,2 @@\n-BYTE 2 \"b\\'\"\n-> error0..2 token(\"b\\'\") msg(Missing trailing `'` symbol to terminate the byte literal)\n+BYTE 2 \"b'\"\n+> error0..2 token(\"b'\") msg(Missing trailing `'` symbol to terminate the byte literal)"}, {"sha": "9dbf4203e2f73c2babbe77c62e9d6af0ea88b97f", "filename": "crates/syntax/test_data/lexer/err/0010_unclosed_byte_with_ferris.txt", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ce926aebc4461e38535047958c0b6f72b7a0c0ea/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0010_unclosed_byte_with_ferris.txt", "raw_url": "https://github.com/rust-lang/rust/raw/ce926aebc4461e38535047958c0b6f72b7a0c0ea/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0010_unclosed_byte_with_ferris.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0010_unclosed_byte_with_ferris.txt?ref=ce926aebc4461e38535047958c0b6f72b7a0c0ea", "patch": "@@ -1,2 +1,2 @@\n-BYTE 6 \"b\\'\ud83e\udd80\"\n-> error0..6 token(\"b\\'\ud83e\udd80\") msg(Missing trailing `'` symbol to terminate the byte literal)\n+BYTE 6 \"b'\ud83e\udd80\"\n+> error0..6 token(\"b'\ud83e\udd80\") msg(Missing trailing `'` symbol to terminate the byte literal)"}, {"sha": "d5d9c2ef709eb18ba3aeea309655d52a94ec9a20", "filename": "crates/syntax/test_data/lexer/err/0011_unclosed_byte_with_ascii_escape.txt", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ce926aebc4461e38535047958c0b6f72b7a0c0ea/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0011_unclosed_byte_with_ascii_escape.txt", "raw_url": "https://github.com/rust-lang/rust/raw/ce926aebc4461e38535047958c0b6f72b7a0c0ea/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0011_unclosed_byte_with_ascii_escape.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0011_unclosed_byte_with_ascii_escape.txt?ref=ce926aebc4461e38535047958c0b6f72b7a0c0ea", "patch": "@@ -1,2 +1,2 @@\n-BYTE 6 \"b\\'\\\\x7f\"\n-> error0..6 token(\"b\\'\\\\x7f\") msg(Missing trailing `'` symbol to terminate the byte literal)\n+BYTE 6 \"b'\\\\x7f\"\n+> error0..6 token(\"b'\\\\x7f\") msg(Missing trailing `'` symbol to terminate the byte literal)"}, {"sha": "a99b9666a9641beda3a6834bc346150fb91138ec", "filename": "crates/syntax/test_data/lexer/err/0012_unclosed_byte_with_unicode_escape.txt", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ce926aebc4461e38535047958c0b6f72b7a0c0ea/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0012_unclosed_byte_with_unicode_escape.txt", "raw_url": "https://github.com/rust-lang/rust/raw/ce926aebc4461e38535047958c0b6f72b7a0c0ea/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0012_unclosed_byte_with_unicode_escape.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0012_unclosed_byte_with_unicode_escape.txt?ref=ce926aebc4461e38535047958c0b6f72b7a0c0ea", "patch": "@@ -1,2 +1,2 @@\n-BYTE 10 \"b\\'\\\\u{20AA}\"\n-> error0..10 token(\"b\\'\\\\u{20AA}\") msg(Missing trailing `'` symbol to terminate the byte literal)\n+BYTE 10 \"b'\\\\u{20AA}\"\n+> error0..10 token(\"b'\\\\u{20AA}\") msg(Missing trailing `'` symbol to terminate the byte literal)"}, {"sha": "8a344f7129631f2ba25ec430daed26fd103e898c", "filename": "crates/syntax/test_data/lexer/err/0013_unclosed_byte_with_space.txt", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ce926aebc4461e38535047958c0b6f72b7a0c0ea/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0013_unclosed_byte_with_space.txt", "raw_url": "https://github.com/rust-lang/rust/raw/ce926aebc4461e38535047958c0b6f72b7a0c0ea/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0013_unclosed_byte_with_space.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0013_unclosed_byte_with_space.txt?ref=ce926aebc4461e38535047958c0b6f72b7a0c0ea", "patch": "@@ -1,2 +1,2 @@\n-BYTE 3 \"b\\' \"\n-> error0..3 token(\"b\\' \") msg(Missing trailing `'` symbol to terminate the byte literal)\n+BYTE 3 \"b' \"\n+> error0..3 token(\"b' \") msg(Missing trailing `'` symbol to terminate the byte literal)"}, {"sha": "b78a43c027b85e634436d52ec9054a7402b6ec54", "filename": "crates/syntax/test_data/lexer/err/0014_unclosed_byte_with_slash.txt", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ce926aebc4461e38535047958c0b6f72b7a0c0ea/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0014_unclosed_byte_with_slash.txt", "raw_url": "https://github.com/rust-lang/rust/raw/ce926aebc4461e38535047958c0b6f72b7a0c0ea/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0014_unclosed_byte_with_slash.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0014_unclosed_byte_with_slash.txt?ref=ce926aebc4461e38535047958c0b6f72b7a0c0ea", "patch": "@@ -1,2 +1,2 @@\n-BYTE 3 \"b\\'\\\\\"\n-> error0..3 token(\"b\\'\\\\\") msg(Missing trailing `'` symbol to terminate the byte literal)\n+BYTE 3 \"b'\\\\\"\n+> error0..3 token(\"b'\\\\\") msg(Missing trailing `'` symbol to terminate the byte literal)"}, {"sha": "5147363ba4ed90e538b06629a4836fed8333a6a7", "filename": "crates/syntax/test_data/lexer/err/0015_unclosed_byte_with_slash_n.txt", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ce926aebc4461e38535047958c0b6f72b7a0c0ea/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0015_unclosed_byte_with_slash_n.txt", "raw_url": "https://github.com/rust-lang/rust/raw/ce926aebc4461e38535047958c0b6f72b7a0c0ea/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0015_unclosed_byte_with_slash_n.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0015_unclosed_byte_with_slash_n.txt?ref=ce926aebc4461e38535047958c0b6f72b7a0c0ea", "patch": "@@ -1,2 +1,2 @@\n-BYTE 4 \"b\\'\\\\n\"\n-> error0..4 token(\"b\\'\\\\n\") msg(Missing trailing `'` symbol to terminate the byte literal)\n+BYTE 4 \"b'\\\\n\"\n+> error0..4 token(\"b'\\\\n\") msg(Missing trailing `'` symbol to terminate the byte literal)"}, {"sha": "261c0894f06ca8e13d59caab5185b8952652db4d", "filename": "crates/syntax/test_data/lexer/err/0016_unclosed_byte_with_slash_single_quote.txt", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ce926aebc4461e38535047958c0b6f72b7a0c0ea/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0016_unclosed_byte_with_slash_single_quote.txt", "raw_url": "https://github.com/rust-lang/rust/raw/ce926aebc4461e38535047958c0b6f72b7a0c0ea/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0016_unclosed_byte_with_slash_single_quote.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0016_unclosed_byte_with_slash_single_quote.txt?ref=ce926aebc4461e38535047958c0b6f72b7a0c0ea", "patch": "@@ -1,2 +1,2 @@\n-BYTE 4 \"b\\'\\\\\\'\"\n-> error0..4 token(\"b\\'\\\\\\'\") msg(Missing trailing `'` symbol to terminate the byte literal)\n+BYTE 4 \"b'\\\\'\"\n+> error0..4 token(\"b'\\\\'\") msg(Missing trailing `'` symbol to terminate the byte literal)"}, {"sha": "b746404d226800be3cfbc18e3867350805c00218", "filename": "crates/syntax/test_data/lexer/err/0057_lifetime_starts_with_a_number.txt", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/ce926aebc4461e38535047958c0b6f72b7a0c0ea/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0057_lifetime_starts_with_a_number.txt", "raw_url": "https://github.com/rust-lang/rust/raw/ce926aebc4461e38535047958c0b6f72b7a0c0ea/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0057_lifetime_starts_with_a_number.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Ftest_data%2Flexer%2Ferr%2F0057_lifetime_starts_with_a_number.txt?ref=ce926aebc4461e38535047958c0b6f72b7a0c0ea", "patch": "@@ -1,6 +1,6 @@\n-LIFETIME_IDENT 2 \"\\'1\"\n+LIFETIME_IDENT 2 \"'1\"\n WHITESPACE 1 \"\\n\"\n-LIFETIME_IDENT 10 \"\\'1lifetime\"\n+LIFETIME_IDENT 10 \"'1lifetime\"\n WHITESPACE 1 \"\\n\"\n-> error0..2 token(\"\\'1\") msg(Lifetime name cannot start with a number)\n-> error3..13 token(\"\\'1lifetime\") msg(Lifetime name cannot start with a number)\n+> error0..2 token(\"'1\") msg(Lifetime name cannot start with a number)\n+> error3..13 token(\"'1lifetime\") msg(Lifetime name cannot start with a number)"}, {"sha": "756477dc919e021a00e3265e7c9e18a11b8e5fd7", "filename": "crates/syntax/test_data/lexer/ok/0006_chars.txt", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/ce926aebc4461e38535047958c0b6f72b7a0c0ea/crates%2Fsyntax%2Ftest_data%2Flexer%2Fok%2F0006_chars.txt", "raw_url": "https://github.com/rust-lang/rust/raw/ce926aebc4461e38535047958c0b6f72b7a0c0ea/crates%2Fsyntax%2Ftest_data%2Flexer%2Fok%2F0006_chars.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Ftest_data%2Flexer%2Fok%2F0006_chars.txt?ref=ce926aebc4461e38535047958c0b6f72b7a0c0ea", "patch": "@@ -1,16 +1,16 @@\n-CHAR 3 \"\\'x\\'\"\n+CHAR 3 \"'x'\"\n WHITESPACE 1 \" \"\n-CHAR 3 \"\\' \\'\"\n+CHAR 3 \"' '\"\n WHITESPACE 1 \" \"\n-CHAR 3 \"\\'0\\'\"\n+CHAR 3 \"'0'\"\n WHITESPACE 1 \" \"\n-CHAR 7 \"\\'hello\\'\"\n+CHAR 7 \"'hello'\"\n WHITESPACE 1 \" \"\n-CHAR 6 \"\\'\\\\x7f\\'\"\n+CHAR 6 \"'\\\\x7f'\"\n WHITESPACE 1 \" \"\n-CHAR 4 \"\\'\\\\n\\'\"\n+CHAR 4 \"'\\\\n'\"\n WHITESPACE 1 \" \"\n-CHAR 4 \"\\'\\\\\\\\\\'\"\n+CHAR 4 \"'\\\\\\\\'\"\n WHITESPACE 1 \" \"\n-CHAR 4 \"\\'\\\\\\'\\'\"\n+CHAR 4 \"'\\\\''\"\n WHITESPACE 1 \"\\n\""}, {"sha": "32ed9ed506b6b435d45d5e212f1c15ab95c5133a", "filename": "crates/syntax/test_data/lexer/ok/0007_lifetimes.txt", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/ce926aebc4461e38535047958c0b6f72b7a0c0ea/crates%2Fsyntax%2Ftest_data%2Flexer%2Fok%2F0007_lifetimes.txt", "raw_url": "https://github.com/rust-lang/rust/raw/ce926aebc4461e38535047958c0b6f72b7a0c0ea/crates%2Fsyntax%2Ftest_data%2Flexer%2Fok%2F0007_lifetimes.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Ftest_data%2Flexer%2Fok%2F0007_lifetimes.txt?ref=ce926aebc4461e38535047958c0b6f72b7a0c0ea", "patch": "@@ -1,8 +1,8 @@\n-LIFETIME_IDENT 2 \"\\'a\"\n+LIFETIME_IDENT 2 \"'a\"\n WHITESPACE 1 \" \"\n-LIFETIME_IDENT 4 \"\\'foo\"\n+LIFETIME_IDENT 4 \"'foo\"\n WHITESPACE 1 \" \"\n-LIFETIME_IDENT 12 \"\\'foo_bar_baz\"\n+LIFETIME_IDENT 12 \"'foo_bar_baz\"\n WHITESPACE 1 \" \"\n-LIFETIME_IDENT 2 \"\\'_\"\n+LIFETIME_IDENT 2 \"'_\"\n WHITESPACE 1 \"\\n\""}, {"sha": "06d6bdd1f9fdb4075ecf0ac9fdd1f7136dad33fd", "filename": "crates/syntax/test_data/lexer/ok/0008_byte_strings.txt", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/ce926aebc4461e38535047958c0b6f72b7a0c0ea/crates%2Fsyntax%2Ftest_data%2Flexer%2Fok%2F0008_byte_strings.txt", "raw_url": "https://github.com/rust-lang/rust/raw/ce926aebc4461e38535047958c0b6f72b7a0c0ea/crates%2Fsyntax%2Ftest_data%2Flexer%2Fok%2F0008_byte_strings.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Ftest_data%2Flexer%2Fok%2F0008_byte_strings.txt?ref=ce926aebc4461e38535047958c0b6f72b7a0c0ea", "patch": "@@ -1,22 +1,22 @@\n-BYTE 3 \"b\\'\\'\"\n+BYTE 3 \"b''\"\n WHITESPACE 1 \" \"\n-BYTE 4 \"b\\'x\\'\"\n+BYTE 4 \"b'x'\"\n WHITESPACE 1 \" \"\n BYTE_STRING 6 \"b\\\"foo\\\"\"\n WHITESPACE 1 \" \"\n BYTE_STRING 4 \"br\\\"\\\"\"\n WHITESPACE 1 \"\\n\"\n-BYTE 6 \"b\\'\\'suf\"\n+BYTE 6 \"b''suf\"\n WHITESPACE 1 \" \"\n BYTE_STRING 5 \"b\\\"\\\"ix\"\n WHITESPACE 1 \" \"\n BYTE_STRING 6 \"br\\\"\\\"br\"\n WHITESPACE 1 \"\\n\"\n-BYTE 5 \"b\\'\\\\n\\'\"\n+BYTE 5 \"b'\\\\n'\"\n WHITESPACE 1 \" \"\n-BYTE 5 \"b\\'\\\\\\\\\\'\"\n+BYTE 5 \"b'\\\\\\\\'\"\n WHITESPACE 1 \" \"\n-BYTE 5 \"b\\'\\\\\\'\\'\"\n+BYTE 5 \"b'\\\\''\"\n WHITESPACE 1 \" \"\n-BYTE 8 \"b\\'hello\\'\"\n+BYTE 8 \"b'hello'\"\n WHITESPACE 1 \"\\n\""}, {"sha": "be4a62940bdec082d91c097e5722dc800c3be601", "filename": "crates/syntax/test_data/parser/err/0024_many_type_parens.rast", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/ce926aebc4461e38535047958c0b6f72b7a0c0ea/crates%2Fsyntax%2Ftest_data%2Fparser%2Ferr%2F0024_many_type_parens.rast", "raw_url": "https://github.com/rust-lang/rust/raw/ce926aebc4461e38535047958c0b6f72b7a0c0ea/crates%2Fsyntax%2Ftest_data%2Fparser%2Ferr%2F0024_many_type_parens.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Ftest_data%2Fparser%2Ferr%2F0024_many_type_parens.rast?ref=ce926aebc4461e38535047958c0b6f72b7a0c0ea", "patch": "@@ -43,7 +43,7 @@ SOURCE_FILE@0..240\n                 L_ANGLE@32..33 \"<\"\n                 LIFETIME_PARAM@33..35\n                   LIFETIME@33..35\n-                    LIFETIME_IDENT@33..35 \"\\'a\"\n+                    LIFETIME_IDENT@33..35 \"'a\"\n                 R_ANGLE@35..36 \">\"\n               WHITESPACE@36..37 \" \"\n               PATH_TYPE@37..46\n@@ -55,7 +55,7 @@ SOURCE_FILE@0..240\n                       L_ANGLE@42..43 \"<\"\n                       LIFETIME_ARG@43..45\n                         LIFETIME@43..45\n-                          LIFETIME_IDENT@43..45 \"\\'a\"\n+                          LIFETIME_IDENT@43..45 \"'a\"\n                       R_ANGLE@45..46 \">\"\n             R_PAREN@46..47 \")\"\n       R_ANGLE@47..48 \">\"\n@@ -128,7 +128,7 @@ SOURCE_FILE@0..240\n                   L_ANGLE@106..107 \"<\"\n                   LIFETIME_PARAM@107..109\n                     LIFETIME@107..109\n-                      LIFETIME_IDENT@107..109 \"\\'a\"\n+                      LIFETIME_IDENT@107..109 \"'a\"\n                   R_ANGLE@109..110 \">\"\n                 WHITESPACE@110..111 \" \"\n                 PATH_TYPE@111..120\n@@ -140,7 +140,7 @@ SOURCE_FILE@0..240\n                         L_ANGLE@116..117 \"<\"\n                         LIFETIME_ARG@117..119\n                           LIFETIME@117..119\n-                            LIFETIME_IDENT@117..119 \"\\'a\"\n+                            LIFETIME_IDENT@117..119 \"'a\"\n                         R_ANGLE@119..120 \">\"\n               R_PAREN@120..121 \")\"\n       EXPR_STMT@121..123\n@@ -191,7 +191,7 @@ SOURCE_FILE@0..240\n                 PATH_SEGMENT@154..158\n                   L_ANGLE@154..155 \"<\"\n                   ERROR@155..157\n-                    LIFETIME_IDENT@155..157 \"\\'a\"\n+                    LIFETIME_IDENT@155..157 \"'a\"\n                   R_ANGLE@157..158 \">\"\n             WHITESPACE@158..159 \" \"\n             BIN_EXPR@159..180\n@@ -205,7 +205,7 @@ SOURCE_FILE@0..240\n                             IDENT@159..164 \"Trait\"\n                     L_ANGLE@164..165 \"<\"\n                     ERROR@165..167\n-                      LIFETIME_IDENT@165..167 \"\\'a\"\n+                      LIFETIME_IDENT@165..167 \"'a\"\n                   R_ANGLE@167..168 \">\"\n                   ERROR@168..169\n                     R_PAREN@168..169 \")\"\n@@ -250,7 +250,7 @@ SOURCE_FILE@0..240\n                               L_ANGLE@200..201 \"<\"\n                               LIFETIME_PARAM@201..203\n                                 LIFETIME@201..203\n-                                  LIFETIME_IDENT@201..203 \"\\'a\"\n+                                  LIFETIME_IDENT@201..203 \"'a\"\n                               R_ANGLE@203..204 \">\"\n                             WHITESPACE@204..205 \" \"\n                             PATH_TYPE@205..214\n@@ -262,7 +262,7 @@ SOURCE_FILE@0..240\n                                     L_ANGLE@210..211 \"<\"\n                                     LIFETIME_ARG@211..213\n                                       LIFETIME@211..213\n-                                        LIFETIME_IDENT@211..213 \"\\'a\"\n+                                        LIFETIME_IDENT@211..213 \"'a\"\n                                     R_ANGLE@213..214 \">\"\n                           R_PAREN@214..215 \")\"\n             WHITESPACE@215..216 \" \""}, {"sha": "b021783fc745cc0fabb94d01d0e79c60435bdf95", "filename": "crates/syntax/test_data/parser/err/0027_incomplere_where_for.rast", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ce926aebc4461e38535047958c0b6f72b7a0c0ea/crates%2Fsyntax%2Ftest_data%2Fparser%2Ferr%2F0027_incomplere_where_for.rast", "raw_url": "https://github.com/rust-lang/rust/raw/ce926aebc4461e38535047958c0b6f72b7a0c0ea/crates%2Fsyntax%2Ftest_data%2Fparser%2Ferr%2F0027_incomplere_where_for.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Ftest_data%2Fparser%2Ferr%2F0027_incomplere_where_for.rast?ref=ce926aebc4461e38535047958c0b6f72b7a0c0ea", "patch": "@@ -17,7 +17,7 @@ SOURCE_FILE@0..30\n           L_ANGLE@22..23 \"<\"\n           LIFETIME_PARAM@23..25\n             LIFETIME@23..25\n-              LIFETIME_IDENT@23..25 \"\\'a\"\n+              LIFETIME_IDENT@23..25 \"'a\"\n           R_ANGLE@25..26 \">\"\n     WHITESPACE@26..27 \"\\n\"\n     BLOCK_EXPR@27..29"}, {"sha": "e24f01e29209be17cbccf8998f23dfac144cb3fe", "filename": "crates/syntax/test_data/parser/err/0043_weird_blocks.rast", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ce926aebc4461e38535047958c0b6f72b7a0c0ea/crates%2Fsyntax%2Ftest_data%2Fparser%2Ferr%2F0043_weird_blocks.rast", "raw_url": "https://github.com/rust-lang/rust/raw/ce926aebc4461e38535047958c0b6f72b7a0c0ea/crates%2Fsyntax%2Ftest_data%2Fparser%2Ferr%2F0043_weird_blocks.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Ftest_data%2Fparser%2Ferr%2F0043_weird_blocks.rast?ref=ce926aebc4461e38535047958c0b6f72b7a0c0ea", "patch": "@@ -55,7 +55,7 @@ SOURCE_FILE@0..83\n           ERROR@68..75\n             LABEL@68..75\n               LIFETIME@68..74\n-                LIFETIME_IDENT@68..74 \"\\'label\"\n+                LIFETIME_IDENT@68..74 \"'label\"\n               COLON@74..75 \":\"\n         WHITESPACE@75..76 \" \"\n         LITERAL@76..78"}, {"sha": "a2460a7eca39fa486ce37155b15f5157dff48c52", "filename": "crates/syntax/test_data/parser/err/0044_unexpected_for_type.rast", "status": "modified", "additions": 15, "deletions": 15, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/ce926aebc4461e38535047958c0b6f72b7a0c0ea/crates%2Fsyntax%2Ftest_data%2Fparser%2Ferr%2F0044_unexpected_for_type.rast", "raw_url": "https://github.com/rust-lang/rust/raw/ce926aebc4461e38535047958c0b6f72b7a0c0ea/crates%2Fsyntax%2Ftest_data%2Fparser%2Ferr%2F0044_unexpected_for_type.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Ftest_data%2Fparser%2Ferr%2F0044_unexpected_for_type.rast?ref=ce926aebc4461e38535047958c0b6f72b7a0c0ea", "patch": "@@ -13,13 +13,13 @@ SOURCE_FILE@0..239\n         L_ANGLE@17..18 \"<\"\n         LIFETIME_PARAM@18..20\n           LIFETIME@18..20\n-            LIFETIME_IDENT@18..20 \"\\'a\"\n+            LIFETIME_IDENT@18..20 \"'a\"\n         R_ANGLE@20..21 \">\"\n       WHITESPACE@21..22 \" \"\n       REF_TYPE@22..29\n         AMP@22..23 \"&\"\n         LIFETIME@23..25\n-          LIFETIME_IDENT@23..25 \"\\'a\"\n+          LIFETIME_IDENT@23..25 \"'a\"\n         WHITESPACE@25..26 \" \"\n         PATH_TYPE@26..29\n           PATH@26..29\n@@ -42,15 +42,15 @@ SOURCE_FILE@0..239\n         L_ANGLE@48..49 \"<\"\n         LIFETIME_PARAM@49..51\n           LIFETIME@49..51\n-            LIFETIME_IDENT@49..51 \"\\'a\"\n+            LIFETIME_IDENT@49..51 \"'a\"\n         R_ANGLE@51..52 \">\"\n       WHITESPACE@52..53 \" \"\n       TUPLE_TYPE@53..63\n         L_PAREN@53..54 \"(\"\n         REF_TYPE@54..61\n           AMP@54..55 \"&\"\n           LIFETIME@55..57\n-            LIFETIME_IDENT@55..57 \"\\'a\"\n+            LIFETIME_IDENT@55..57 \"'a\"\n           WHITESPACE@57..58 \" \"\n           PATH_TYPE@58..61\n             PATH@58..61\n@@ -75,7 +75,7 @@ SOURCE_FILE@0..239\n         L_ANGLE@84..85 \"<\"\n         LIFETIME_PARAM@85..87\n           LIFETIME@85..87\n-            LIFETIME_IDENT@85..87 \"\\'a\"\n+            LIFETIME_IDENT@85..87 \"'a\"\n         R_ANGLE@87..88 \">\"\n       WHITESPACE@88..89 \" \"\n       SLICE_TYPE@89..94\n@@ -102,7 +102,7 @@ SOURCE_FILE@0..239\n         L_ANGLE@115..116 \"<\"\n         LIFETIME_PARAM@116..118\n           LIFETIME@116..118\n-            LIFETIME_IDENT@116..118 \"\\'a\"\n+            LIFETIME_IDENT@116..118 \"'a\"\n         R_ANGLE@118..119 \">\"\n       WHITESPACE@119..120 \" \"\n       FOR_TYPE@120..148\n@@ -111,7 +111,7 @@ SOURCE_FILE@0..239\n           L_ANGLE@123..124 \"<\"\n           LIFETIME_PARAM@124..126\n             LIFETIME@124..126\n-              LIFETIME_IDENT@124..126 \"\\'b\"\n+              LIFETIME_IDENT@124..126 \"'b\"\n           R_ANGLE@126..127 \">\"\n         WHITESPACE@127..128 \" \"\n         FN_PTR_TYPE@128..148\n@@ -122,7 +122,7 @@ SOURCE_FILE@0..239\n               REF_TYPE@131..138\n                 AMP@131..132 \"&\"\n                 LIFETIME@132..134\n-                  LIFETIME_IDENT@132..134 \"\\'a\"\n+                  LIFETIME_IDENT@132..134 \"'a\"\n                 WHITESPACE@134..135 \" \"\n                 PATH_TYPE@135..138\n                   PATH@135..138\n@@ -135,7 +135,7 @@ SOURCE_FILE@0..239\n               REF_TYPE@140..147\n                 AMP@140..141 \"&\"\n                 LIFETIME@141..143\n-                  LIFETIME_IDENT@141..143 \"\\'b\"\n+                  LIFETIME_IDENT@141..143 \"'b\"\n                 WHITESPACE@143..144 \" \"\n                 PATH_TYPE@144..147\n                   PATH@144..147\n@@ -169,7 +169,7 @@ SOURCE_FILE@0..239\n           L_ANGLE@183..184 \"<\"\n           LIFETIME_PARAM@184..186\n             LIFETIME@184..186\n-              LIFETIME_IDENT@184..186 \"\\'a\"\n+              LIFETIME_IDENT@184..186 \"'a\"\n           R_ANGLE@186..187 \">\"\n         WHITESPACE@187..188 \" \"\n         FOR_TYPE@188..227\n@@ -178,7 +178,7 @@ SOURCE_FILE@0..239\n             L_ANGLE@191..192 \"<\"\n             LIFETIME_PARAM@192..194\n               LIFETIME@192..194\n-                LIFETIME_IDENT@192..194 \"\\'b\"\n+                LIFETIME_IDENT@192..194 \"'b\"\n             R_ANGLE@194..195 \">\"\n           WHITESPACE@195..196 \" \"\n           FOR_TYPE@196..227\n@@ -187,7 +187,7 @@ SOURCE_FILE@0..239\n               L_ANGLE@199..200 \"<\"\n               LIFETIME_PARAM@200..202\n                 LIFETIME@200..202\n-                  LIFETIME_IDENT@200..202 \"\\'c\"\n+                  LIFETIME_IDENT@200..202 \"'c\"\n               R_ANGLE@202..203 \">\"\n             WHITESPACE@203..204 \" \"\n             FN_PTR_TYPE@204..227\n@@ -198,7 +198,7 @@ SOURCE_FILE@0..239\n                   REF_TYPE@207..212\n                     AMP@207..208 \"&\"\n                     LIFETIME@208..210\n-                      LIFETIME_IDENT@208..210 \"\\'a\"\n+                      LIFETIME_IDENT@208..210 \"'a\"\n                     WHITESPACE@210..211 \" \"\n                     PATH_TYPE@211..212\n                       PATH@211..212\n@@ -211,7 +211,7 @@ SOURCE_FILE@0..239\n                   REF_TYPE@214..219\n                     AMP@214..215 \"&\"\n                     LIFETIME@215..217\n-                      LIFETIME_IDENT@215..217 \"\\'b\"\n+                      LIFETIME_IDENT@215..217 \"'b\"\n                     WHITESPACE@217..218 \" \"\n                     PATH_TYPE@218..219\n                       PATH@218..219\n@@ -224,7 +224,7 @@ SOURCE_FILE@0..239\n                   REF_TYPE@221..226\n                     AMP@221..222 \"&\"\n                     LIFETIME@222..224\n-                      LIFETIME_IDENT@222..224 \"\\'c\"\n+                      LIFETIME_IDENT@222..224 \"'c\"\n                     WHITESPACE@224..225 \" \"\n                     PATH_TYPE@225..226\n                       PATH@225..226"}, {"sha": "6eaa32b9695fbe7898635ecdfeaf6eb694ed00e9", "filename": "crates/syntax/test_data/parser/err/0046_ambiguous_trait_object.rast", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/ce926aebc4461e38535047958c0b6f72b7a0c0ea/crates%2Fsyntax%2Ftest_data%2Fparser%2Ferr%2F0046_ambiguous_trait_object.rast", "raw_url": "https://github.com/rust-lang/rust/raw/ce926aebc4461e38535047958c0b6f72b7a0c0ea/crates%2Fsyntax%2Ftest_data%2Fparser%2Ferr%2F0046_ambiguous_trait_object.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Ftest_data%2Fparser%2Ferr%2F0046_ambiguous_trait_object.rast?ref=ce926aebc4461e38535047958c0b6f72b7a0c0ea", "patch": "@@ -8,15 +8,15 @@ SOURCE_FILE@0..187\n       L_ANGLE@8..9 \"<\"\n       LIFETIME_PARAM@9..11\n         LIFETIME@9..11\n-          LIFETIME_IDENT@9..11 \"\\'a\"\n+          LIFETIME_IDENT@9..11 \"'a\"\n       R_ANGLE@11..12 \">\"\n     WHITESPACE@12..13 \" \"\n     EQ@13..14 \"=\"\n     WHITESPACE@14..15 \" \"\n     REF_TYPE@15..34\n       AMP@15..16 \"&\"\n       LIFETIME@16..18\n-        LIFETIME_IDENT@16..18 \"\\'a\"\n+        LIFETIME_IDENT@16..18 \"'a\"\n       WHITESPACE@18..19 \" \"\n       DYN_TRAIT_TYPE@19..34\n         DYN_KW@19..22 \"dyn\"\n@@ -104,7 +104,7 @@ SOURCE_FILE@0..187\n             WHITESPACE@100..101 \" \"\n             TYPE_BOUND@101..108\n               LIFETIME@101..108\n-                LIFETIME_IDENT@101..108 \"\\'static\"\n+                LIFETIME_IDENT@101..108 \"'static\"\n     SEMICOLON@108..109 \";\"\n   WHITESPACE@109..110 \"\\n\"\n   FN@110..186"}, {"sha": "97bb5059d7abec6ff30a86419c3e325600c58f29", "filename": "crates/syntax/test_data/parser/inline/err/0002_misplaced_label_err.rast", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ce926aebc4461e38535047958c0b6f72b7a0c0ea/crates%2Fsyntax%2Ftest_data%2Fparser%2Finline%2Ferr%2F0002_misplaced_label_err.rast", "raw_url": "https://github.com/rust-lang/rust/raw/ce926aebc4461e38535047958c0b6f72b7a0c0ea/crates%2Fsyntax%2Ftest_data%2Fparser%2Finline%2Ferr%2F0002_misplaced_label_err.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Ftest_data%2Fparser%2Finline%2Ferr%2F0002_misplaced_label_err.rast?ref=ce926aebc4461e38535047958c0b6f72b7a0c0ea", "patch": "@@ -15,7 +15,7 @@ SOURCE_FILE@0..30\n         ERROR@16..22\n           LABEL@16..22\n             LIFETIME@16..21\n-              LIFETIME_IDENT@16..21 \"\\'loop\"\n+              LIFETIME_IDENT@16..21 \"'loop\"\n             COLON@21..22 \":\"\n       WHITESPACE@22..23 \" \"\n       IMPL@23..27"}, {"sha": "12f5040f90d434e6e0164a1a2863041a9c643bee", "filename": "crates/syntax/test_data/parser/inline/ok/0003_where_pred_for.rast", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ce926aebc4461e38535047958c0b6f72b7a0c0ea/crates%2Fsyntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0003_where_pred_for.rast", "raw_url": "https://github.com/rust-lang/rust/raw/ce926aebc4461e38535047958c0b6f72b7a0c0ea/crates%2Fsyntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0003_where_pred_for.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0003_where_pred_for.rast?ref=ce926aebc4461e38535047958c0b6f72b7a0c0ea", "patch": "@@ -23,7 +23,7 @@ SOURCE_FILE@0..54\n           L_ANGLE@30..31 \"<\"\n           LIFETIME_PARAM@31..33\n             LIFETIME@31..33\n-              LIFETIME_IDENT@31..33 \"\\'a\"\n+              LIFETIME_IDENT@31..33 \"'a\"\n           R_ANGLE@33..34 \">\"\n         WHITESPACE@34..35 \" \"\n         PATH_TYPE@35..36\n@@ -46,7 +46,7 @@ SOURCE_FILE@0..54\n                       REF_TYPE@41..48\n                         AMP@41..42 \"&\"\n                         LIFETIME@42..44\n-                          LIFETIME_IDENT@42..44 \"\\'a\"\n+                          LIFETIME_IDENT@42..44 \"'a\"\n                         WHITESPACE@44..45 \" \"\n                         PATH_TYPE@45..48\n                           PATH@45..48"}, {"sha": "d4c8b9d67aa8765f638fe0dfb588899ff1696284", "filename": "crates/syntax/test_data/parser/inline/ok/0006_self_param.rast", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ce926aebc4461e38535047958c0b6f72b7a0c0ea/crates%2Fsyntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0006_self_param.rast", "raw_url": "https://github.com/rust-lang/rust/raw/ce926aebc4461e38535047958c0b6f72b7a0c0ea/crates%2Fsyntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0006_self_param.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0006_self_param.rast?ref=ce926aebc4461e38535047958c0b6f72b7a0c0ea", "patch": "@@ -55,7 +55,7 @@ SOURCE_FILE@0..128\n           SELF_PARAM@56..64\n             AMP@56..57 \"&\"\n             LIFETIME@57..59\n-              LIFETIME_IDENT@57..59 \"\\'a\"\n+              LIFETIME_IDENT@57..59 \"'a\"\n             WHITESPACE@59..60 \" \"\n             NAME@60..64\n               SELF_KW@60..64 \"self\"\n@@ -76,7 +76,7 @@ SOURCE_FILE@0..128\n           SELF_PARAM@79..91\n             AMP@79..80 \"&\"\n             LIFETIME@80..82\n-              LIFETIME_IDENT@80..82 \"\\'a\"\n+              LIFETIME_IDENT@80..82 \"'a\"\n             WHITESPACE@82..83 \" \"\n             MUT_KW@83..86 \"mut\"\n             WHITESPACE@86..87 \" \""}, {"sha": "121c3966ac90840f2bc1c8b7a544cd2576692f36", "filename": "crates/syntax/test_data/parser/inline/ok/0007_type_param_bounds.rast", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ce926aebc4461e38535047958c0b6f72b7a0c0ea/crates%2Fsyntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0007_type_param_bounds.rast", "raw_url": "https://github.com/rust-lang/rust/raw/ce926aebc4461e38535047958c0b6f72b7a0c0ea/crates%2Fsyntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0007_type_param_bounds.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0007_type_param_bounds.rast?ref=ce926aebc4461e38535047958c0b6f72b7a0c0ea", "patch": "@@ -14,7 +14,7 @@ SOURCE_FILE@0..35\n         TYPE_BOUND_LIST@12..32\n           TYPE_BOUND@12..14\n             LIFETIME@12..14\n-              LIFETIME_IDENT@12..14 \"\\'a\"\n+              LIFETIME_IDENT@12..14 \"'a\"\n           WHITESPACE@14..15 \" \"\n           PLUS@15..16 \"+\"\n           WHITESPACE@16..17 \" \""}, {"sha": "b67ea2682c5dd04e201ac9040682ba166b4e3acf", "filename": "crates/syntax/test_data/parser/inline/ok/0015_continue_expr.rast", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ce926aebc4461e38535047958c0b6f72b7a0c0ea/crates%2Fsyntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0015_continue_expr.rast", "raw_url": "https://github.com/rust-lang/rust/raw/ce926aebc4461e38535047958c0b6f72b7a0c0ea/crates%2Fsyntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0015_continue_expr.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0015_continue_expr.rast?ref=ce926aebc4461e38535047958c0b6f72b7a0c0ea", "patch": "@@ -27,7 +27,7 @@ SOURCE_FILE@0..69\n               CONTINUE_KW@48..56 \"continue\"\n               WHITESPACE@56..57 \" \"\n               LIFETIME@57..59\n-                LIFETIME_IDENT@57..59 \"\\'l\"\n+                LIFETIME_IDENT@57..59 \"'l\"\n             SEMICOLON@59..60 \";\"\n           WHITESPACE@60..65 \"\\n    \"\n           R_CURLY@65..66 \"}\""}, {"sha": "b44f46f0538c53e73a606f589868d0af2dbf9e45", "filename": "crates/syntax/test_data/parser/inline/ok/0028_impl_trait_type.rast", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ce926aebc4461e38535047958c0b6f72b7a0c0ea/crates%2Fsyntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0028_impl_trait_type.rast", "raw_url": "https://github.com/rust-lang/rust/raw/ce926aebc4461e38535047958c0b6f72b7a0c0ea/crates%2Fsyntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0028_impl_trait_type.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0028_impl_trait_type.rast?ref=ce926aebc4461e38535047958c0b6f72b7a0c0ea", "patch": "@@ -32,14 +32,14 @@ SOURCE_FILE@0..43\n                             L_ANGLE@31..32 \"<\"\n                             LIFETIME_ARG@32..34\n                               LIFETIME@32..34\n-                                LIFETIME_IDENT@32..34 \"\\'a\"\n+                                LIFETIME_IDENT@32..34 \"'a\"\n                             R_ANGLE@34..35 \">\"\n                   R_ANGLE@35..36 \">\"\n         WHITESPACE@36..37 \" \"\n         PLUS@37..38 \"+\"\n         WHITESPACE@38..39 \" \"\n         TYPE_BOUND@39..41\n           LIFETIME@39..41\n-            LIFETIME_IDENT@39..41 \"\\'a\"\n+            LIFETIME_IDENT@39..41 \"'a\"\n     SEMICOLON@41..42 \";\"\n   WHITESPACE@42..43 \"\\n\""}, {"sha": "7cb288bf072e2459c9da1daefc7be25630c18c55", "filename": "crates/syntax/test_data/parser/inline/ok/0033_reference_type;.rast", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ce926aebc4461e38535047958c0b6f72b7a0c0ea/crates%2Fsyntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0033_reference_type%3B.rast", "raw_url": "https://github.com/rust-lang/rust/raw/ce926aebc4461e38535047958c0b6f72b7a0c0ea/crates%2Fsyntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0033_reference_type%3B.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0033_reference_type%3B.rast?ref=ce926aebc4461e38535047958c0b6f72b7a0c0ea", "patch": "@@ -25,7 +25,7 @@ SOURCE_FILE@0..54\n     REF_TYPE@23..34\n       AMP@23..24 \"&\"\n       LIFETIME@24..31\n-        LIFETIME_IDENT@24..31 \"\\'static\"\n+        LIFETIME_IDENT@24..31 \"'static\"\n       WHITESPACE@31..32 \" \"\n       TUPLE_TYPE@32..34\n         L_PAREN@32..33 \"(\""}, {"sha": "783b25338f2150b13f40fb12072f0584b1033756", "filename": "crates/syntax/test_data/parser/inline/ok/0034_break_expr.rast", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ce926aebc4461e38535047958c0b6f72b7a0c0ea/crates%2Fsyntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0034_break_expr.rast", "raw_url": "https://github.com/rust-lang/rust/raw/ce926aebc4461e38535047958c0b6f72b7a0c0ea/crates%2Fsyntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0034_break_expr.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0034_break_expr.rast?ref=ce926aebc4461e38535047958c0b6f72b7a0c0ea", "patch": "@@ -27,7 +27,7 @@ SOURCE_FILE@0..102\n               BREAK_KW@45..50 \"break\"\n               WHITESPACE@50..51 \" \"\n               LIFETIME@51..53\n-                LIFETIME_IDENT@51..53 \"\\'l\"\n+                LIFETIME_IDENT@51..53 \"'l\"\n             SEMICOLON@53..54 \";\"\n           WHITESPACE@54..63 \"\\n        \"\n           EXPR_STMT@63..72\n@@ -43,7 +43,7 @@ SOURCE_FILE@0..102\n               BREAK_KW@81..86 \"break\"\n               WHITESPACE@86..87 \" \"\n               LIFETIME@87..89\n-                LIFETIME_IDENT@87..89 \"\\'l\"\n+                LIFETIME_IDENT@87..89 \"'l\"\n               WHITESPACE@89..90 \" \"\n               LITERAL@90..92\n                 INT_NUMBER@90..92 \"92\""}, {"sha": "11efa23a421b83c602e47214bdc3d80f5fdebce6", "filename": "crates/syntax/test_data/parser/inline/ok/0039_type_arg.rast", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ce926aebc4461e38535047958c0b6f72b7a0c0ea/crates%2Fsyntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0039_type_arg.rast", "raw_url": "https://github.com/rust-lang/rust/raw/ce926aebc4461e38535047958c0b6f72b7a0c0ea/crates%2Fsyntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0039_type_arg.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0039_type_arg.rast?ref=ce926aebc4461e38535047958c0b6f72b7a0c0ea", "patch": "@@ -16,7 +16,7 @@ SOURCE_FILE@0..59\n             L_ANGLE@10..11 \"<\"\n             LIFETIME_ARG@11..18\n               LIFETIME@11..18\n-                LIFETIME_IDENT@11..18 \"\\'static\"\n+                LIFETIME_IDENT@11..18 \"'static\"\n             COMMA@18..19 \",\"\n             WHITESPACE@19..20 \" \"\n             TYPE_ARG@20..23"}, {"sha": "abc258b336429c7b81b840138b7f06eadc52fe9a", "filename": "crates/syntax/test_data/parser/inline/ok/0045_param_list_opt_patterns.rast", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ce926aebc4461e38535047958c0b6f72b7a0c0ea/crates%2Fsyntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0045_param_list_opt_patterns.rast", "raw_url": "https://github.com/rust-lang/rust/raw/ce926aebc4461e38535047958c0b6f72b7a0c0ea/crates%2Fsyntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0045_param_list_opt_patterns.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0045_param_list_opt_patterns.rast?ref=ce926aebc4461e38535047958c0b6f72b7a0c0ea", "patch": "@@ -34,7 +34,7 @@ SOURCE_FILE@0..35\n                                 L_ANGLE@24..25 \"<\"\n                                 LIFETIME_ARG@25..27\n                                   LIFETIME@25..27\n-                                    LIFETIME_IDENT@25..27 \"\\'a\"\n+                                    LIFETIME_IDENT@25..27 \"'a\"\n                                 R_ANGLE@27..28 \">\"\n                     R_PAREN@28..29 \")\"\n       R_ANGLE@29..30 \">\""}, {"sha": "e1b88c5db5d7357d62845faf0855dece647c1e85", "filename": "crates/syntax/test_data/parser/inline/ok/0048_path_type_with_bounds.rast", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ce926aebc4461e38535047958c0b6f72b7a0c0ea/crates%2Fsyntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0048_path_type_with_bounds.rast", "raw_url": "https://github.com/rust-lang/rust/raw/ce926aebc4461e38535047958c0b6f72b7a0c0ea/crates%2Fsyntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0048_path_type_with_bounds.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0048_path_type_with_bounds.rast?ref=ce926aebc4461e38535047958c0b6f72b7a0c0ea", "patch": "@@ -32,7 +32,7 @@ SOURCE_FILE@0..58\n                     WHITESPACE@19..20 \" \"\n                     TYPE_BOUND@20..22\n                       LIFETIME@20..22\n-                        LIFETIME_IDENT@20..22 \"\\'f\"\n+                        LIFETIME_IDENT@20..22 \"'f\"\n               R_ANGLE@22..23 \">\"\n     WHITESPACE@23..24 \" \"\n     BLOCK_EXPR@24..26\n@@ -74,7 +74,7 @@ SOURCE_FILE@0..58\n                     WHITESPACE@50..51 \" \"\n                     TYPE_BOUND@51..53\n                       LIFETIME@51..53\n-                        LIFETIME_IDENT@51..53 \"\\'f\"\n+                        LIFETIME_IDENT@51..53 \"'f\"\n               R_ANGLE@53..54 \">\"\n     WHITESPACE@54..55 \" \"\n     BLOCK_EXPR@55..57"}, {"sha": "acf18fc2b26f643ec73dc3062ef83ab60163ed14", "filename": "crates/syntax/test_data/parser/inline/ok/0055_literal_pattern.rast", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ce926aebc4461e38535047958c0b6f72b7a0c0ea/crates%2Fsyntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0055_literal_pattern.rast", "raw_url": "https://github.com/rust-lang/rust/raw/ce926aebc4461e38535047958c0b6f72b7a0c0ea/crates%2Fsyntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0055_literal_pattern.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0055_literal_pattern.rast?ref=ce926aebc4461e38535047958c0b6f72b7a0c0ea", "patch": "@@ -49,7 +49,7 @@ SOURCE_FILE@0..113\n           MATCH_ARM@71..80\n             LITERAL_PAT@71..74\n               LITERAL@71..74\n-                CHAR@71..74 \"\\'c\\'\"\n+                CHAR@71..74 \"'c'\"\n             WHITESPACE@74..75 \" \"\n             FAT_ARROW@75..77 \"=>\"\n             WHITESPACE@77..78 \" \""}, {"sha": "d42a7e29571f73791b9a6254cdf70baa81e81756", "filename": "crates/syntax/test_data/parser/inline/ok/0056_where_clause.rast", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/ce926aebc4461e38535047958c0b6f72b7a0c0ea/crates%2Fsyntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0056_where_clause.rast", "raw_url": "https://github.com/rust-lang/rust/raw/ce926aebc4461e38535047958c0b6f72b7a0c0ea/crates%2Fsyntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0056_where_clause.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0056_where_clause.rast?ref=ce926aebc4461e38535047958c0b6f72b7a0c0ea", "patch": "@@ -13,19 +13,19 @@ SOURCE_FILE@0..116\n       WHITESPACE@14..18 \"\\n   \"\n       WHERE_PRED@18..29\n         LIFETIME@18..20\n-          LIFETIME_IDENT@18..20 \"\\'a\"\n+          LIFETIME_IDENT@18..20 \"'a\"\n         COLON@20..21 \":\"\n         WHITESPACE@21..22 \" \"\n         TYPE_BOUND_LIST@22..29\n           TYPE_BOUND@22..24\n             LIFETIME@22..24\n-              LIFETIME_IDENT@22..24 \"\\'b\"\n+              LIFETIME_IDENT@22..24 \"'b\"\n           WHITESPACE@24..25 \" \"\n           PLUS@25..26 \"+\"\n           WHITESPACE@26..27 \" \"\n           TYPE_BOUND@27..29\n             LIFETIME@27..29\n-              LIFETIME_IDENT@27..29 \"\\'c\"\n+              LIFETIME_IDENT@27..29 \"'c\"\n       COMMA@29..30 \",\"\n       WHITESPACE@30..34 \"\\n   \"\n       WHERE_PRED@34..59\n@@ -57,7 +57,7 @@ SOURCE_FILE@0..116\n           WHITESPACE@51..52 \" \"\n           TYPE_BOUND@52..59\n             LIFETIME@52..59\n-              LIFETIME_IDENT@52..59 \"\\'static\"\n+              LIFETIME_IDENT@52..59 \"'static\"\n       COMMA@59..60 \",\"\n       WHITESPACE@60..64 \"\\n   \"\n       WHERE_PRED@64..82\n@@ -76,7 +76,7 @@ SOURCE_FILE@0..116\n         TYPE_BOUND_LIST@80..82\n           TYPE_BOUND@80..82\n             LIFETIME@80..82\n-              LIFETIME_IDENT@80..82 \"\\'a\"\n+              LIFETIME_IDENT@80..82 \"'a\"\n       COMMA@82..83 \",\"\n       WHITESPACE@83..87 \"\\n   \"\n       WHERE_PRED@87..112\n@@ -108,7 +108,7 @@ SOURCE_FILE@0..116\n         TYPE_BOUND_LIST@110..112\n           TYPE_BOUND@110..112\n             LIFETIME@110..112\n-              LIFETIME_IDENT@110..112 \"\\'a\"\n+              LIFETIME_IDENT@110..112 \"'a\"\n     WHITESPACE@112..113 \"\\n\"\n     BLOCK_EXPR@113..115\n       L_CURLY@113..114 \"{\""}, {"sha": "8f76177d1d3e164b94091c57a9ed3f154c8b25a3", "filename": "crates/syntax/test_data/parser/inline/ok/0065_dyn_trait_type.rast", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ce926aebc4461e38535047958c0b6f72b7a0c0ea/crates%2Fsyntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0065_dyn_trait_type.rast", "raw_url": "https://github.com/rust-lang/rust/raw/ce926aebc4461e38535047958c0b6f72b7a0c0ea/crates%2Fsyntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0065_dyn_trait_type.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0065_dyn_trait_type.rast?ref=ce926aebc4461e38535047958c0b6f72b7a0c0ea", "patch": "@@ -32,14 +32,14 @@ SOURCE_FILE@0..42\n                             L_ANGLE@30..31 \"<\"\n                             LIFETIME_ARG@31..33\n                               LIFETIME@31..33\n-                                LIFETIME_IDENT@31..33 \"\\'a\"\n+                                LIFETIME_IDENT@31..33 \"'a\"\n                             R_ANGLE@33..34 \">\"\n                   R_ANGLE@34..35 \">\"\n         WHITESPACE@35..36 \" \"\n         PLUS@36..37 \"+\"\n         WHITESPACE@37..38 \" \"\n         TYPE_BOUND@38..40\n           LIFETIME@38..40\n-            LIFETIME_IDENT@38..40 \"\\'a\"\n+            LIFETIME_IDENT@38..40 \"'a\"\n     SEMICOLON@40..41 \";\"\n   WHITESPACE@41..42 \"\\n\""}, {"sha": "7958e32e509c3a4c2ea189e8ae3a32538a9d2a10", "filename": "crates/syntax/test_data/parser/inline/ok/0081_for_type.rast", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/ce926aebc4461e38535047958c0b6f72b7a0c0ea/crates%2Fsyntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0081_for_type.rast", "raw_url": "https://github.com/rust-lang/rust/raw/ce926aebc4461e38535047958c0b6f72b7a0c0ea/crates%2Fsyntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0081_for_type.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0081_for_type.rast?ref=ce926aebc4461e38535047958c0b6f72b7a0c0ea", "patch": "@@ -13,7 +13,7 @@ SOURCE_FILE@0..121\n         L_ANGLE@12..13 \"<\"\n         LIFETIME_PARAM@13..15\n           LIFETIME@13..15\n-            LIFETIME_IDENT@13..15 \"\\'a\"\n+            LIFETIME_IDENT@13..15 \"'a\"\n         R_ANGLE@15..16 \">\"\n       WHITESPACE@16..17 \" \"\n       FN_PTR_TYPE@17..27\n@@ -44,7 +44,7 @@ SOURCE_FILE@0..121\n         L_ANGLE@41..42 \"<\"\n         LIFETIME_PARAM@42..44\n           LIFETIME@42..44\n-            LIFETIME_IDENT@42..44 \"\\'a\"\n+            LIFETIME_IDENT@42..44 \"'a\"\n         R_ANGLE@44..45 \">\"\n       WHITESPACE@45..46 \" \"\n       FN_PTR_TYPE@46..80\n@@ -62,7 +62,7 @@ SOURCE_FILE@0..121\n             REF_TYPE@67..73\n               AMP@67..68 \"&\"\n               LIFETIME@68..70\n-                LIFETIME_IDENT@68..70 \"\\'a\"\n+                LIFETIME_IDENT@68..70 \"'a\"\n               WHITESPACE@70..71 \" \"\n               TUPLE_TYPE@71..73\n                 L_PAREN@71..72 \"(\"\n@@ -91,7 +91,7 @@ SOURCE_FILE@0..121\n         L_ANGLE@96..97 \"<\"\n         LIFETIME_PARAM@97..99\n           LIFETIME@97..99\n-            LIFETIME_IDENT@97..99 \"\\'a\"\n+            LIFETIME_IDENT@97..99 \"'a\"\n         R_ANGLE@99..100 \">\"\n       WHITESPACE@100..101 \" \"\n       PATH_TYPE@101..119\n@@ -105,7 +105,7 @@ SOURCE_FILE@0..121\n                 REF_TYPE@111..118\n                   AMP@111..112 \"&\"\n                   LIFETIME@112..114\n-                    LIFETIME_IDENT@112..114 \"\\'a\"\n+                    LIFETIME_IDENT@112..114 \"'a\"\n                   WHITESPACE@114..115 \" \"\n                   PATH_TYPE@115..118\n                     PATH@115..118"}, {"sha": "f784e96e0039568f1db426afc5a1f3176535b00b", "filename": "crates/syntax/test_data/parser/inline/ok/0085_expr_literals.rast", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ce926aebc4461e38535047958c0b6f72b7a0c0ea/crates%2Fsyntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0085_expr_literals.rast", "raw_url": "https://github.com/rust-lang/rust/raw/ce926aebc4461e38535047958c0b6f72b7a0c0ea/crates%2Fsyntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0085_expr_literals.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0085_expr_literals.rast?ref=ce926aebc4461e38535047958c0b6f72b7a0c0ea", "patch": "@@ -68,7 +68,7 @@ SOURCE_FILE@0..189\n         EQ@90..91 \"=\"\n         WHITESPACE@91..92 \" \"\n         LITERAL@92..96\n-          BYTE@92..96 \"b\\'a\\'\"\n+          BYTE@92..96 \"b'a'\"\n         SEMICOLON@96..97 \";\"\n       WHITESPACE@97..102 \"\\n    \"\n       LET_STMT@102..114\n@@ -80,7 +80,7 @@ SOURCE_FILE@0..189\n         EQ@108..109 \"=\"\n         WHITESPACE@109..110 \" \"\n         LITERAL@110..113\n-          CHAR@110..113 \"\\'b\\'\"\n+          CHAR@110..113 \"'b'\"\n         SEMICOLON@113..114 \";\"\n       WHITESPACE@114..119 \"\\n    \"\n       LET_STMT@119..131"}, {"sha": "8540b852002e526db58b6723887629c37781eb31", "filename": "crates/syntax/test_data/parser/inline/ok/0109_label.rast", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/ce926aebc4461e38535047958c0b6f72b7a0c0ea/crates%2Fsyntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0109_label.rast", "raw_url": "https://github.com/rust-lang/rust/raw/ce926aebc4461e38535047958c0b6f72b7a0c0ea/crates%2Fsyntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0109_label.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0109_label.rast?ref=ce926aebc4461e38535047958c0b6f72b7a0c0ea", "patch": "@@ -15,7 +15,7 @@ SOURCE_FILE@0..74\n         LOOP_EXPR@15..26\n           LABEL@15..18\n             LIFETIME@15..17\n-              LIFETIME_IDENT@15..17 \"\\'a\"\n+              LIFETIME_IDENT@15..17 \"'a\"\n             COLON@17..18 \":\"\n           WHITESPACE@18..19 \" \"\n           LOOP_KW@19..23 \"loop\"\n@@ -28,7 +28,7 @@ SOURCE_FILE@0..74\n         WHILE_EXPR@31..48\n           LABEL@31..34\n             LIFETIME@31..33\n-              LIFETIME_IDENT@31..33 \"\\'b\"\n+              LIFETIME_IDENT@31..33 \"'b\"\n             COLON@33..34 \":\"\n           WHITESPACE@34..35 \" \"\n           WHILE_KW@35..40 \"while\"\n@@ -44,7 +44,7 @@ SOURCE_FILE@0..74\n       FOR_EXPR@53..71\n         LABEL@53..56\n           LIFETIME@53..55\n-            LIFETIME_IDENT@53..55 \"\\'c\"\n+            LIFETIME_IDENT@53..55 \"'c\"\n           COLON@55..56 \":\"\n         WHITESPACE@56..57 \" \"\n         FOR_KW@57..60 \"for\""}, {"sha": "5682bd28c579adbf49fd0c5619847c95638ea833", "filename": "crates/syntax/test_data/parser/inline/ok/0122_generic_lifetime_type_attribute.rast", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ce926aebc4461e38535047958c0b6f72b7a0c0ea/crates%2Fsyntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0122_generic_lifetime_type_attribute.rast", "raw_url": "https://github.com/rust-lang/rust/raw/ce926aebc4461e38535047958c0b6f72b7a0c0ea/crates%2Fsyntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0122_generic_lifetime_type_attribute.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0122_generic_lifetime_type_attribute.rast?ref=ce926aebc4461e38535047958c0b6f72b7a0c0ea", "patch": "@@ -22,7 +22,7 @@ SOURCE_FILE@0..64\n           R_BRACK@25..26 \"]\"\n         WHITESPACE@26..27 \" \"\n         LIFETIME@27..29\n-          LIFETIME_IDENT@27..29 \"\\'a\"\n+          LIFETIME_IDENT@27..29 \"'a\"\n       COMMA@29..30 \",\"\n       WHITESPACE@30..31 \" \"\n       TYPE_PARAM@31..48\n@@ -53,7 +53,7 @@ SOURCE_FILE@0..64\n         REF_TYPE@53..58\n           AMP@53..54 \"&\"\n           LIFETIME@54..56\n-            LIFETIME_IDENT@54..56 \"\\'a\"\n+            LIFETIME_IDENT@54..56 \"'a\"\n           WHITESPACE@56..57 \" \"\n           PATH_TYPE@57..58\n             PATH@57..58"}, {"sha": "860684b29ae143eb73e048a663650fc0c31b197d", "filename": "crates/syntax/test_data/parser/inline/ok/0154_no_dyn_trait_leading_for.rast", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ce926aebc4461e38535047958c0b6f72b7a0c0ea/crates%2Fsyntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0154_no_dyn_trait_leading_for.rast", "raw_url": "https://github.com/rust-lang/rust/raw/ce926aebc4461e38535047958c0b6f72b7a0c0ea/crates%2Fsyntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0154_no_dyn_trait_leading_for.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0154_no_dyn_trait_leading_for.rast?ref=ce926aebc4461e38535047958c0b6f72b7a0c0ea", "patch": "@@ -16,7 +16,7 @@ SOURCE_FILE@0..34\n               L_ANGLE@12..13 \"<\"\n               LIFETIME_PARAM@13..15\n                 LIFETIME@13..15\n-                  LIFETIME_IDENT@13..15 \"\\'a\"\n+                  LIFETIME_IDENT@13..15 \"'a\"\n               R_ANGLE@15..16 \">\"\n             WHITESPACE@16..17 \" \"\n             PATH_TYPE@17..25\n@@ -28,7 +28,7 @@ SOURCE_FILE@0..34\n                     L_ANGLE@21..22 \"<\"\n                     LIFETIME_ARG@22..24\n                       LIFETIME@22..24\n-                        LIFETIME_IDENT@22..24 \"\\'a\"\n+                        LIFETIME_IDENT@22..24 \"'a\"\n                     R_ANGLE@24..25 \">\"\n         WHITESPACE@25..26 \" \"\n         PLUS@26..27 \"+\""}, {"sha": "47e8859ed07fbb97f6b9191031cf0f9f4953da2a", "filename": "crates/syntax/test_data/parser/inline/ok/0161_labeled_block.rast", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ce926aebc4461e38535047958c0b6f72b7a0c0ea/crates%2Fsyntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0161_labeled_block.rast", "raw_url": "https://github.com/rust-lang/rust/raw/ce926aebc4461e38535047958c0b6f72b7a0c0ea/crates%2Fsyntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0161_labeled_block.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0161_labeled_block.rast?ref=ce926aebc4461e38535047958c0b6f72b7a0c0ea", "patch": "@@ -15,7 +15,7 @@ SOURCE_FILE@0..23\n         EFFECT_EXPR@9..19\n           LABEL@9..16\n             LIFETIME@9..15\n-              LIFETIME_IDENT@9..15 \"\\'label\"\n+              LIFETIME_IDENT@9..15 \"'label\"\n             COLON@15..16 \":\"\n           WHITESPACE@16..17 \" \"\n           BLOCK_EXPR@17..19"}, {"sha": "f845d5cffa8aaa6fbae33a386a3e67df9fe1a2ad", "filename": "crates/syntax/test_data/parser/ok/0018_struct_type_params.rast", "status": "modified", "additions": 17, "deletions": 17, "changes": 34, "blob_url": "https://github.com/rust-lang/rust/blob/ce926aebc4461e38535047958c0b6f72b7a0c0ea/crates%2Fsyntax%2Ftest_data%2Fparser%2Fok%2F0018_struct_type_params.rast", "raw_url": "https://github.com/rust-lang/rust/raw/ce926aebc4461e38535047958c0b6f72b7a0c0ea/crates%2Fsyntax%2Ftest_data%2Fparser%2Fok%2F0018_struct_type_params.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Ftest_data%2Fparser%2Fok%2F0018_struct_type_params.rast?ref=ce926aebc4461e38535047958c0b6f72b7a0c0ea", "patch": "@@ -81,7 +81,7 @@ SOURCE_FILE@0..290\n       L_ANGLE@80..81 \"<\"\n       LIFETIME_PARAM@81..83\n         LIFETIME@81..83\n-          LIFETIME_IDENT@81..83 \"\\'a\"\n+          LIFETIME_IDENT@81..83 \"'a\"\n       R_ANGLE@83..84 \">\"\n     SEMICOLON@84..85 \";\"\n   WHITESPACE@85..86 \"\\n\"\n@@ -94,7 +94,7 @@ SOURCE_FILE@0..290\n       L_ANGLE@95..96 \"<\"\n       LIFETIME_PARAM@96..99\n         LIFETIME@96..98\n-          LIFETIME_IDENT@96..98 \"\\'a\"\n+          LIFETIME_IDENT@96..98 \"'a\"\n         COLON@98..99 \":\"\n       R_ANGLE@99..100 \">\"\n     SEMICOLON@100..101 \";\"\n@@ -108,11 +108,11 @@ SOURCE_FILE@0..290\n       L_ANGLE@111..112 \"<\"\n       LIFETIME_PARAM@112..118\n         LIFETIME@112..114\n-          LIFETIME_IDENT@112..114 \"\\'a\"\n+          LIFETIME_IDENT@112..114 \"'a\"\n         COLON@114..115 \":\"\n         WHITESPACE@115..116 \" \"\n         LIFETIME@116..118\n-          LIFETIME_IDENT@116..118 \"\\'b\"\n+          LIFETIME_IDENT@116..118 \"'b\"\n       R_ANGLE@118..119 \">\"\n     SEMICOLON@119..120 \";\"\n   WHITESPACE@120..121 \"\\n\"\n@@ -125,11 +125,11 @@ SOURCE_FILE@0..290\n       L_ANGLE@130..131 \"<\"\n       LIFETIME_PARAM@131..139\n         LIFETIME@131..133\n-          LIFETIME_IDENT@131..133 \"\\'a\"\n+          LIFETIME_IDENT@131..133 \"'a\"\n         COLON@133..134 \":\"\n         WHITESPACE@134..135 \" \"\n         LIFETIME@135..137\n-          LIFETIME_IDENT@135..137 \"\\'b\"\n+          LIFETIME_IDENT@135..137 \"'b\"\n         WHITESPACE@137..138 \" \"\n         PLUS@138..139 \"+\"\n       WHITESPACE@139..140 \" \"\n@@ -145,16 +145,16 @@ SOURCE_FILE@0..290\n       L_ANGLE@152..153 \"<\"\n       LIFETIME_PARAM@153..164\n         LIFETIME@153..155\n-          LIFETIME_IDENT@153..155 \"\\'a\"\n+          LIFETIME_IDENT@153..155 \"'a\"\n         COLON@155..156 \":\"\n         WHITESPACE@156..157 \" \"\n         LIFETIME@157..159\n-          LIFETIME_IDENT@157..159 \"\\'b\"\n+          LIFETIME_IDENT@157..159 \"'b\"\n         WHITESPACE@159..160 \" \"\n         PLUS@160..161 \"+\"\n         WHITESPACE@161..162 \" \"\n         LIFETIME@162..164\n-          LIFETIME_IDENT@162..164 \"\\'c\"\n+          LIFETIME_IDENT@162..164 \"'c\"\n       R_ANGLE@164..165 \">\"\n     SEMICOLON@165..166 \";\"\n   WHITESPACE@166..167 \"\\n\"\n@@ -167,7 +167,7 @@ SOURCE_FILE@0..290\n       L_ANGLE@177..178 \"<\"\n       LIFETIME_PARAM@178..180\n         LIFETIME@178..180\n-          LIFETIME_IDENT@178..180 \"\\'a\"\n+          LIFETIME_IDENT@178..180 \"'a\"\n       COMMA@180..181 \",\"\n       R_ANGLE@181..182 \">\"\n     SEMICOLON@182..183 \";\"\n@@ -181,12 +181,12 @@ SOURCE_FILE@0..290\n       L_ANGLE@194..195 \"<\"\n       LIFETIME_PARAM@195..197\n         LIFETIME@195..197\n-          LIFETIME_IDENT@195..197 \"\\'a\"\n+          LIFETIME_IDENT@195..197 \"'a\"\n       COMMA@197..198 \",\"\n       WHITESPACE@198..199 \" \"\n       LIFETIME_PARAM@199..201\n         LIFETIME@199..201\n-          LIFETIME_IDENT@199..201 \"\\'b\"\n+          LIFETIME_IDENT@199..201 \"'b\"\n       R_ANGLE@201..202 \">\"\n     SEMICOLON@202..203 \";\"\n   WHITESPACE@203..204 \"\\n\"\n@@ -199,21 +199,21 @@ SOURCE_FILE@0..290\n       L_ANGLE@214..215 \"<\"\n       LIFETIME_PARAM@215..222\n         LIFETIME@215..217\n-          LIFETIME_IDENT@215..217 \"\\'a\"\n+          LIFETIME_IDENT@215..217 \"'a\"\n         COLON@217..218 \":\"\n         WHITESPACE@218..219 \" \"\n         LIFETIME@219..221\n-          LIFETIME_IDENT@219..221 \"\\'b\"\n+          LIFETIME_IDENT@219..221 \"'b\"\n         PLUS@221..222 \"+\"\n       COMMA@222..223 \",\"\n       WHITESPACE@223..224 \" \"\n       LIFETIME_PARAM@224..230\n         LIFETIME@224..226\n-          LIFETIME_IDENT@224..226 \"\\'b\"\n+          LIFETIME_IDENT@224..226 \"'b\"\n         COLON@226..227 \":\"\n         WHITESPACE@227..228 \" \"\n         LIFETIME@228..230\n-          LIFETIME_IDENT@228..230 \"\\'c\"\n+          LIFETIME_IDENT@228..230 \"'c\"\n       COMMA@230..231 \",\"\n       R_ANGLE@231..232 \">\"\n     SEMICOLON@232..233 \";\"\n@@ -258,7 +258,7 @@ SOURCE_FILE@0..290\n       L_ANGLE@278..279 \"<\"\n       LIFETIME_PARAM@279..281\n         LIFETIME@279..281\n-          LIFETIME_IDENT@279..281 \"\\'a\"\n+          LIFETIME_IDENT@279..281 \"'a\"\n       COMMA@281..282 \",\"\n       WHITESPACE@282..283 \" \"\n       TYPE_PARAM@283..284"}, {"sha": "9d4b001aed97bed05ad211cd1111d10018162e61", "filename": "crates/syntax/test_data/parser/ok/0020_type_param_bounds.rast", "status": "modified", "additions": 14, "deletions": 14, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/ce926aebc4461e38535047958c0b6f72b7a0c0ea/crates%2Fsyntax%2Ftest_data%2Fparser%2Fok%2F0020_type_param_bounds.rast", "raw_url": "https://github.com/rust-lang/rust/raw/ce926aebc4461e38535047958c0b6f72b7a0c0ea/crates%2Fsyntax%2Ftest_data%2Fparser%2Fok%2F0020_type_param_bounds.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Ftest_data%2Fparser%2Fok%2F0020_type_param_bounds.rast?ref=ce926aebc4461e38535047958c0b6f72b7a0c0ea", "patch": "@@ -42,7 +42,7 @@ SOURCE_FILE@0..250\n         TYPE_BOUND_LIST@39..41\n           TYPE_BOUND@39..41\n             LIFETIME@39..41\n-              LIFETIME_IDENT@39..41 \"\\'a\"\n+              LIFETIME_IDENT@39..41 \"'a\"\n       R_ANGLE@41..42 \">\"\n     SEMICOLON@42..43 \";\"\n   WHITESPACE@43..44 \"\\n\"\n@@ -61,7 +61,7 @@ SOURCE_FILE@0..250\n         TYPE_BOUND_LIST@56..60\n           TYPE_BOUND@56..58\n             LIFETIME@56..58\n-              LIFETIME_IDENT@56..58 \"\\'a\"\n+              LIFETIME_IDENT@56..58 \"'a\"\n           WHITESPACE@58..59 \" \"\n           PLUS@59..60 \"+\"\n       WHITESPACE@60..61 \" \"\n@@ -83,13 +83,13 @@ SOURCE_FILE@0..250\n         TYPE_BOUND_LIST@76..83\n           TYPE_BOUND@76..78\n             LIFETIME@76..78\n-              LIFETIME_IDENT@76..78 \"\\'a\"\n+              LIFETIME_IDENT@76..78 \"'a\"\n           WHITESPACE@78..79 \" \"\n           PLUS@79..80 \"+\"\n           WHITESPACE@80..81 \" \"\n           TYPE_BOUND@81..83\n             LIFETIME@81..83\n-              LIFETIME_IDENT@81..83 \"\\'d\"\n+              LIFETIME_IDENT@81..83 \"'d\"\n       WHITESPACE@83..84 \" \"\n       R_ANGLE@84..85 \">\"\n     SEMICOLON@85..86 \";\"\n@@ -109,13 +109,13 @@ SOURCE_FILE@0..250\n         TYPE_BOUND_LIST@99..114\n           TYPE_BOUND@99..101\n             LIFETIME@99..101\n-              LIFETIME_IDENT@99..101 \"\\'a\"\n+              LIFETIME_IDENT@99..101 \"'a\"\n           WHITESPACE@101..102 \" \"\n           PLUS@102..103 \"+\"\n           WHITESPACE@103..104 \" \"\n           TYPE_BOUND@104..106\n             LIFETIME@104..106\n-              LIFETIME_IDENT@104..106 \"\\'d\"\n+              LIFETIME_IDENT@104..106 \"'d\"\n           WHITESPACE@106..107 \" \"\n           PLUS@107..108 \"+\"\n           WHITESPACE@108..109 \" \"\n@@ -198,7 +198,7 @@ SOURCE_FILE@0..250\n           WHITESPACE@175..176 \" \"\n           TYPE_BOUND@176..178\n             LIFETIME@176..178\n-              LIFETIME_IDENT@176..178 \"\\'a\"\n+              LIFETIME_IDENT@176..178 \"'a\"\n       R_ANGLE@178..179 \">\"\n     SEMICOLON@179..180 \";\"\n   WHITESPACE@180..181 \"\\n\"\n@@ -234,25 +234,25 @@ SOURCE_FILE@0..250\n       L_ANGLE@208..209 \"<\"\n       LIFETIME_PARAM@209..215\n         LIFETIME@209..211\n-          LIFETIME_IDENT@209..211 \"\\'a\"\n+          LIFETIME_IDENT@209..211 \"'a\"\n         COLON@211..212 \":\"\n         WHITESPACE@212..213 \" \"\n         LIFETIME@213..215\n-          LIFETIME_IDENT@213..215 \"\\'d\"\n+          LIFETIME_IDENT@213..215 \"'d\"\n       COMMA@215..216 \",\"\n       WHITESPACE@216..217 \" \"\n       LIFETIME_PARAM@217..228\n         LIFETIME@217..219\n-          LIFETIME_IDENT@217..219 \"\\'d\"\n+          LIFETIME_IDENT@217..219 \"'d\"\n         COLON@219..220 \":\"\n         WHITESPACE@220..221 \" \"\n         LIFETIME@221..223\n-          LIFETIME_IDENT@221..223 \"\\'a\"\n+          LIFETIME_IDENT@221..223 \"'a\"\n         WHITESPACE@223..224 \" \"\n         PLUS@224..225 \"+\"\n         WHITESPACE@225..226 \" \"\n         LIFETIME@226..228\n-          LIFETIME_IDENT@226..228 \"\\'b\"\n+          LIFETIME_IDENT@226..228 \"'b\"\n       COMMA@228..229 \",\"\n       WHITESPACE@229..230 \" \"\n       TYPE_PARAM@230..248\n@@ -263,13 +263,13 @@ SOURCE_FILE@0..250\n         TYPE_BOUND_LIST@233..248\n           TYPE_BOUND@233..235\n             LIFETIME@233..235\n-              LIFETIME_IDENT@233..235 \"\\'a\"\n+              LIFETIME_IDENT@233..235 \"'a\"\n           WHITESPACE@235..236 \" \"\n           PLUS@236..237 \"+\"\n           WHITESPACE@237..238 \" \"\n           TYPE_BOUND@238..240\n             LIFETIME@238..240\n-              LIFETIME_IDENT@238..240 \"\\'d\"\n+              LIFETIME_IDENT@238..240 \"'d\"\n           WHITESPACE@240..241 \" \"\n           PLUS@241..242 \"+\"\n           WHITESPACE@242..243 \" \""}, {"sha": "115861585f3c007c5506a0906f609cac8d5590f4", "filename": "crates/syntax/test_data/parser/ok/0030_string_suffixes.rast", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ce926aebc4461e38535047958c0b6f72b7a0c0ea/crates%2Fsyntax%2Ftest_data%2Fparser%2Fok%2F0030_string_suffixes.rast", "raw_url": "https://github.com/rust-lang/rust/raw/ce926aebc4461e38535047958c0b6f72b7a0c0ea/crates%2Fsyntax%2Ftest_data%2Fparser%2Fok%2F0030_string_suffixes.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Ftest_data%2Fparser%2Fok%2F0030_string_suffixes.rast?ref=ce926aebc4461e38535047958c0b6f72b7a0c0ea", "patch": "@@ -20,7 +20,7 @@ SOURCE_FILE@0..112\n         EQ@22..23 \"=\"\n         WHITESPACE@23..24 \" \"\n         LITERAL@24..30\n-          CHAR@24..30 \"\\'c\\'u32\"\n+          CHAR@24..30 \"'c'u32\"\n         SEMICOLON@30..31 \";\"\n       WHITESPACE@31..36 \"\\n    \"\n       LET_STMT@36..60\n@@ -44,7 +44,7 @@ SOURCE_FILE@0..112\n         EQ@71..72 \"=\"\n         WHITESPACE@72..73 \" \"\n         LITERAL@73..82\n-          BYTE@73..82 \"b\\'b\\'_suff\"\n+          BYTE@73..82 \"b'b'_suff\"\n         SEMICOLON@82..83 \";\"\n       WHITESPACE@83..88 \"\\n    \"\n       LET_STMT@88..109"}, {"sha": "b527cc3acf2e85fef993771d010d6a51831f6bf6", "filename": "crates/syntax/test_data/parser/ok/0032_where_for.rast", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ce926aebc4461e38535047958c0b6f72b7a0c0ea/crates%2Fsyntax%2Ftest_data%2Fparser%2Fok%2F0032_where_for.rast", "raw_url": "https://github.com/rust-lang/rust/raw/ce926aebc4461e38535047958c0b6f72b7a0c0ea/crates%2Fsyntax%2Ftest_data%2Fparser%2Fok%2F0032_where_for.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Ftest_data%2Fparser%2Fok%2F0032_where_for.rast?ref=ce926aebc4461e38535047958c0b6f72b7a0c0ea", "patch": "@@ -42,7 +42,7 @@ SOURCE_FILE@0..116\n                 L_ANGLE@59..60 \"<\"\n                 LIFETIME_PARAM@60..63\n                   LIFETIME@60..63\n-                    LIFETIME_IDENT@60..63 \"\\'de\"\n+                    LIFETIME_IDENT@60..63 \"'de\"\n                 R_ANGLE@63..64 \">\"\n               WHITESPACE@64..65 \" \"\n               PATH_TYPE@65..81\n@@ -54,7 +54,7 @@ SOURCE_FILE@0..116\n                       L_ANGLE@76..77 \"<\"\n                       LIFETIME_ARG@77..80\n                         LIFETIME@77..80\n-                          LIFETIME_IDENT@77..80 \"\\'de\"\n+                          LIFETIME_IDENT@77..80 \"'de\"\n                       R_ANGLE@80..81 \">\"\n           WHITESPACE@81..82 \" \"\n           PLUS@82..83 \"+\""}, {"sha": "4b0f0997eba945245c194c0c41c215cc5999d78e", "filename": "crates/syntax/test_data/parser/ok/0033_label_break.rast", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/ce926aebc4461e38535047958c0b6f72b7a0c0ea/crates%2Fsyntax%2Ftest_data%2Fparser%2Fok%2F0033_label_break.rast", "raw_url": "https://github.com/rust-lang/rust/raw/ce926aebc4461e38535047958c0b6f72b7a0c0ea/crates%2Fsyntax%2Ftest_data%2Fparser%2Fok%2F0033_label_break.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Ftest_data%2Fparser%2Fok%2F0033_label_break.rast?ref=ce926aebc4461e38535047958c0b6f72b7a0c0ea", "patch": "@@ -17,7 +17,7 @@ SOURCE_FILE@0..506\n         EFFECT_EXPR@50..66\n           LABEL@50..63\n             LIFETIME@50..62\n-              LIFETIME_IDENT@50..62 \"\\'empty_block\"\n+              LIFETIME_IDENT@50..62 \"'empty_block\"\n             COLON@62..63 \":\"\n           WHITESPACE@63..64 \" \"\n           BLOCK_EXPR@64..66\n@@ -28,7 +28,7 @@ SOURCE_FILE@0..506\n         EFFECT_EXPR@72..295\n           LABEL@72..79\n             LIFETIME@72..78\n-              LIFETIME_IDENT@72..78 \"\\'block\"\n+              LIFETIME_IDENT@72..78 \"'block\"\n             COLON@78..79 \":\"\n           WHITESPACE@79..80 \" \"\n           BLOCK_EXPR@80..295\n@@ -69,7 +69,7 @@ SOURCE_FILE@0..506\n                       BREAK_KW@147..152 \"break\"\n                       WHITESPACE@152..153 \" \"\n                       LIFETIME@153..159\n-                        LIFETIME_IDENT@153..159 \"\\'block\"\n+                        LIFETIME_IDENT@153..159 \"'block\"\n                     SEMICOLON@159..160 \";\"\n                   WHITESPACE@160..169 \"\\n        \"\n                   R_CURLY@169..170 \"}\"\n@@ -109,7 +109,7 @@ SOURCE_FILE@0..506\n                       BREAK_KW@241..246 \"break\"\n                       WHITESPACE@246..247 \" \"\n                       LIFETIME@247..253\n-                        LIFETIME_IDENT@247..253 \"\\'block\"\n+                        LIFETIME_IDENT@247..253 \"'block\"\n                     SEMICOLON@253..254 \";\"\n                   WHITESPACE@254..263 \"\\n        \"\n                   R_CURLY@263..264 \"}\"\n@@ -140,7 +140,7 @@ SOURCE_FILE@0..506\n         EFFECT_EXPR@314..502\n           LABEL@314..321\n             LIFETIME@314..320\n-              LIFETIME_IDENT@314..320 \"\\'block\"\n+              LIFETIME_IDENT@314..320 \"'block\"\n             COLON@320..321 \":\"\n           WHITESPACE@321..322 \" \"\n           BLOCK_EXPR@322..502\n@@ -171,7 +171,7 @@ SOURCE_FILE@0..506\n                       BREAK_KW@378..383 \"break\"\n                       WHITESPACE@383..384 \" \"\n                       LIFETIME@384..390\n-                        LIFETIME_IDENT@384..390 \"\\'block\"\n+                        LIFETIME_IDENT@384..390 \"'block\"\n                       WHITESPACE@390..391 \" \"\n                       LITERAL@391..392\n                         INT_NUMBER@391..392 \"1\"\n@@ -204,7 +204,7 @@ SOURCE_FILE@0..506\n                       BREAK_KW@461..466 \"break\"\n                       WHITESPACE@466..467 \" \"\n                       LIFETIME@467..473\n-                        LIFETIME_IDENT@467..473 \"\\'block\"\n+                        LIFETIME_IDENT@467..473 \"'block\"\n                       WHITESPACE@473..474 \" \"\n                       LITERAL@474..475\n                         INT_NUMBER@474..475 \"2\""}, {"sha": "2fa46ad2dd28671c785ffb43e82cdebc2332f14d", "filename": "crates/syntax/test_data/parser/ok/0035_weird_exprs.rast", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/ce926aebc4461e38535047958c0b6f72b7a0c0ea/crates%2Fsyntax%2Ftest_data%2Fparser%2Fok%2F0035_weird_exprs.rast", "raw_url": "https://github.com/rust-lang/rust/raw/ce926aebc4461e38535047958c0b6f72b7a0c0ea/crates%2Fsyntax%2Ftest_data%2Fparser%2Fok%2F0035_weird_exprs.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Ftest_data%2Fparser%2Fok%2F0035_weird_exprs.rast?ref=ce926aebc4461e38535047958c0b6f72b7a0c0ea", "patch": "@@ -1378,22 +1378,22 @@ SOURCE_FILE@0..3813\n                         WHITESPACE@2376..2377 \" \"\n                         IDENT@2377..2379 \"u8\"\n                         L_ANGLE@2379..2380 \"<\"\n-                        LIFETIME_IDENT@2380..2383 \"\\'u8\"\n+                        LIFETIME_IDENT@2380..2383 \"'u8\"\n                         COLON@2383..2384 \":\"\n                         WHITESPACE@2384..2385 \" \"\n-                        LIFETIME_IDENT@2385..2388 \"\\'u8\"\n+                        LIFETIME_IDENT@2385..2388 \"'u8\"\n                         WHITESPACE@2388..2389 \" \"\n                         PLUS@2389..2390 \"+\"\n                         WHITESPACE@2390..2391 \" \"\n-                        LIFETIME_IDENT@2391..2394 \"\\'u8\"\n+                        LIFETIME_IDENT@2391..2394 \"'u8\"\n                         R_ANGLE@2394..2395 \">\"\n                         TOKEN_TREE@2395..2408\n                           L_PAREN@2395..2396 \"(\"\n                           IDENT@2396..2398 \"u8\"\n                           COLON@2398..2399 \":\"\n                           WHITESPACE@2399..2400 \" \"\n                           AMP@2400..2401 \"&\"\n-                          LIFETIME_IDENT@2401..2404 \"\\'u8\"\n+                          LIFETIME_IDENT@2401..2404 \"'u8\"\n                           WHITESPACE@2404..2405 \" \"\n                           IDENT@2405..2407 \"u8\"\n                           R_PAREN@2407..2408 \")\"\n@@ -1402,7 +1402,7 @@ SOURCE_FILE@0..3813\n                         R_ANGLE@2410..2411 \">\"\n                         WHITESPACE@2411..2412 \" \"\n                         AMP@2412..2413 \"&\"\n-                        LIFETIME_IDENT@2413..2416 \"\\'u8\"\n+                        LIFETIME_IDENT@2413..2416 \"'u8\"\n                         WHITESPACE@2416..2417 \" \"\n                         IDENT@2417..2419 \"u8\"\n                         WHITESPACE@2419..2420 \" \"\n@@ -1574,7 +1574,7 @@ SOURCE_FILE@0..3813\n           L_ANGLE@2862..2863 \"<\"\n           LIFETIME_PARAM@2863..2869\n             LIFETIME@2863..2869\n-              LIFETIME_IDENT@2863..2869 \"\\'union\"\n+              LIFETIME_IDENT@2863..2869 \"'union\"\n           R_ANGLE@2869..2870 \">\"\n         WHITESPACE@2870..2871 \" \"\n         RECORD_FIELD_LIST@2871..2904\n@@ -1588,7 +1588,7 @@ SOURCE_FILE@0..3813\n             REF_TYPE@2880..2901\n               AMP@2880..2881 \"&\"\n               LIFETIME@2881..2887\n-                LIFETIME_IDENT@2881..2887 \"\\'union\"\n+                LIFETIME_IDENT@2881..2887 \"'union\"\n               WHITESPACE@2887..2888 \" \"\n               PATH_TYPE@2888..2901\n                 PATH@2888..2901\n@@ -1599,7 +1599,7 @@ SOURCE_FILE@0..3813\n                       L_ANGLE@2893..2894 \"<\"\n                       LIFETIME_ARG@2894..2900\n                         LIFETIME@2894..2900\n-                          LIFETIME_IDENT@2894..2900 \"\\'union\"\n+                          LIFETIME_IDENT@2894..2900 \"'union\"\n                       R_ANGLE@2900..2901 \">\"\n           COMMA@2901..2902 \",\"\n           WHITESPACE@2902..2903 \" \"\n@@ -1681,7 +1681,7 @@ SOURCE_FILE@0..3813\n                           STRING@2975..2979 \"\\\"\\\\\\\\\\\"\"\n                     COMMA@2979..2980 \",\"\n                     LITERAL@2980..2986\n-                      CHAR@2980..2986 \"\\'\ud83e\udd14\\'\"\n+                      CHAR@2980..2986 \"'\ud83e\udd14'\"\n                     R_PAREN@2986..2987 \")\"\n                   COMMENT@2987..2991 \"/**/\"\n                   COMMA@2991..2992 \",\""}, {"sha": "a7f0f7bc666d1af365d12d1ea0111940f2d3eae4", "filename": "crates/syntax/test_data/parser/ok/0051_parameter_attrs.rast", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/ce926aebc4461e38535047958c0b6f72b7a0c0ea/crates%2Fsyntax%2Ftest_data%2Fparser%2Fok%2F0051_parameter_attrs.rast", "raw_url": "https://github.com/rust-lang/rust/raw/ce926aebc4461e38535047958c0b6f72b7a0c0ea/crates%2Fsyntax%2Ftest_data%2Fparser%2Fok%2F0051_parameter_attrs.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Ftest_data%2Fparser%2Fok%2F0051_parameter_attrs.rast?ref=ce926aebc4461e38535047958c0b6f72b7a0c0ea", "patch": "@@ -181,7 +181,7 @@ SOURCE_FILE@0..519\n                                 L_ANGLE@162..163 \"<\"\n                                 LIFETIME_ARG@163..165\n                                   LIFETIME@163..165\n-                                    LIFETIME_IDENT@163..165 \"\\'a\"\n+                                    LIFETIME_IDENT@163..165 \"'a\"\n                                 R_ANGLE@165..166 \">\"\n                     R_PAREN@166..167 \")\"\n       R_ANGLE@167..168 \">\"\n@@ -359,7 +359,7 @@ SOURCE_FILE@0..519\n           L_ANGLE@345..346 \"<\"\n           LIFETIME_PARAM@346..348\n             LIFETIME@346..348\n-              LIFETIME_IDENT@346..348 \"\\'a\"\n+              LIFETIME_IDENT@346..348 \"'a\"\n           R_ANGLE@348..349 \">\"\n         PARAM_LIST@349..368\n           L_PAREN@349..350 \"(\"\n@@ -394,7 +394,7 @@ SOURCE_FILE@0..519\n           L_ANGLE@382..383 \"<\"\n           LIFETIME_PARAM@383..385\n             LIFETIME@383..385\n-              LIFETIME_IDENT@383..385 \"\\'a\"\n+              LIFETIME_IDENT@383..385 \"'a\"\n           R_ANGLE@385..386 \">\"\n         PARAM_LIST@386..404\n           L_PAREN@386..387 \"(\"\n@@ -411,7 +411,7 @@ SOURCE_FILE@0..519\n             WHITESPACE@394..395 \" \"\n             AMP@395..396 \"&\"\n             LIFETIME@396..398\n-              LIFETIME_IDENT@396..398 \"\\'a\"\n+              LIFETIME_IDENT@396..398 \"'a\"\n             WHITESPACE@398..399 \" \"\n             NAME@399..403\n               SELF_KW@399..403 \"self\"\n@@ -430,7 +430,7 @@ SOURCE_FILE@0..519\n           L_ANGLE@418..419 \"<\"\n           LIFETIME_PARAM@419..421\n             LIFETIME@419..421\n-              LIFETIME_IDENT@419..421 \"\\'a\"\n+              LIFETIME_IDENT@419..421 \"'a\"\n           R_ANGLE@421..422 \">\"\n         PARAM_LIST@422..444\n           L_PAREN@422..423 \"(\"\n@@ -447,7 +447,7 @@ SOURCE_FILE@0..519\n             WHITESPACE@430..431 \" \"\n             AMP@431..432 \"&\"\n             LIFETIME@432..434\n-              LIFETIME_IDENT@432..434 \"\\'a\"\n+              LIFETIME_IDENT@432..434 \"'a\"\n             WHITESPACE@434..435 \" \"\n             MUT_KW@435..438 \"mut\"\n             WHITESPACE@438..439 \" \""}, {"sha": "79e2b28678cabe3c96a3f92ede6cd13d0638442c", "filename": "crates/syntax/test_data/parser/ok/0067_where_for_pred.rast", "status": "modified", "additions": 15, "deletions": 15, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/ce926aebc4461e38535047958c0b6f72b7a0c0ea/crates%2Fsyntax%2Ftest_data%2Fparser%2Fok%2F0067_where_for_pred.rast", "raw_url": "https://github.com/rust-lang/rust/raw/ce926aebc4461e38535047958c0b6f72b7a0c0ea/crates%2Fsyntax%2Ftest_data%2Fparser%2Fok%2F0067_where_for_pred.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Ftest_data%2Fparser%2Fok%2F0067_where_for_pred.rast?ref=ce926aebc4461e38535047958c0b6f72b7a0c0ea", "patch": "@@ -23,7 +23,7 @@ SOURCE_FILE@0..374\n           L_ANGLE@31..32 \"<\"\n           LIFETIME_PARAM@32..34\n             LIFETIME@32..34\n-              LIFETIME_IDENT@32..34 \"\\'a\"\n+              LIFETIME_IDENT@32..34 \"'a\"\n           R_ANGLE@34..35 \">\"\n         WHITESPACE@35..36 \" \"\n         PATH_TYPE@36..37\n@@ -46,7 +46,7 @@ SOURCE_FILE@0..374\n                       REF_TYPE@42..49\n                         AMP@42..43 \"&\"\n                         LIFETIME@43..45\n-                          LIFETIME_IDENT@43..45 \"\\'a\"\n+                          LIFETIME_IDENT@43..45 \"'a\"\n                         WHITESPACE@45..46 \" \"\n                         PATH_TYPE@46..49\n                           PATH@46..49\n@@ -85,13 +85,13 @@ SOURCE_FILE@0..374\n           L_ANGLE@85..86 \"<\"\n           LIFETIME_PARAM@86..88\n             LIFETIME@86..88\n-              LIFETIME_IDENT@86..88 \"\\'a\"\n+              LIFETIME_IDENT@86..88 \"'a\"\n           R_ANGLE@88..89 \">\"\n         WHITESPACE@89..90 \" \"\n         REF_TYPE@90..95\n           AMP@90..91 \"&\"\n           LIFETIME@91..93\n-            LIFETIME_IDENT@91..93 \"\\'a\"\n+            LIFETIME_IDENT@91..93 \"'a\"\n           WHITESPACE@93..94 \" \"\n           PATH_TYPE@94..95\n             PATH@94..95\n@@ -138,15 +138,15 @@ SOURCE_FILE@0..374\n           L_ANGLE@140..141 \"<\"\n           LIFETIME_PARAM@141..143\n             LIFETIME@141..143\n-              LIFETIME_IDENT@141..143 \"\\'a\"\n+              LIFETIME_IDENT@141..143 \"'a\"\n           R_ANGLE@143..144 \">\"\n         WHITESPACE@144..145 \" \"\n         PAREN_TYPE@145..152\n           L_PAREN@145..146 \"(\"\n           REF_TYPE@146..151\n             AMP@146..147 \"&\"\n             LIFETIME@147..149\n-              LIFETIME_IDENT@147..149 \"\\'a\"\n+              LIFETIME_IDENT@147..149 \"'a\"\n             WHITESPACE@149..150 \" \"\n             PATH_TYPE@150..151\n               PATH@150..151\n@@ -169,7 +169,7 @@ SOURCE_FILE@0..374\n                       REF_TYPE@157..164\n                         AMP@157..158 \"&\"\n                         LIFETIME@158..160\n-                          LIFETIME_IDENT@158..160 \"\\'a\"\n+                          LIFETIME_IDENT@158..160 \"'a\"\n                         WHITESPACE@160..161 \" \"\n                         PATH_TYPE@161..164\n                           PATH@161..164\n@@ -208,15 +208,15 @@ SOURCE_FILE@0..374\n           L_ANGLE@202..203 \"<\"\n           LIFETIME_PARAM@203..205\n             LIFETIME@203..205\n-              LIFETIME_IDENT@203..205 \"\\'a\"\n+              LIFETIME_IDENT@203..205 \"'a\"\n           R_ANGLE@205..206 \">\"\n         WHITESPACE@206..207 \" \"\n         SLICE_TYPE@207..214\n           L_BRACK@207..208 \"[\"\n           REF_TYPE@208..213\n             AMP@208..209 \"&\"\n             LIFETIME@209..211\n-              LIFETIME_IDENT@209..211 \"\\'a\"\n+              LIFETIME_IDENT@209..211 \"'a\"\n             WHITESPACE@211..212 \" \"\n             PATH_TYPE@212..213\n               PATH@212..213\n@@ -277,7 +277,7 @@ SOURCE_FILE@0..374\n           L_ANGLE@261..262 \"<\"\n           LIFETIME_PARAM@262..264\n             LIFETIME@262..264\n-              LIFETIME_IDENT@262..264 \"\\'a\"\n+              LIFETIME_IDENT@262..264 \"'a\"\n           R_ANGLE@264..265 \">\"\n         WHITESPACE@265..266 \" \"\n         PATH_TYPE@266..285\n@@ -288,7 +288,7 @@ SOURCE_FILE@0..374\n                 REF_TYPE@267..272\n                   AMP@267..268 \"&\"\n                   LIFETIME@268..270\n-                    LIFETIME_IDENT@268..270 \"\\'a\"\n+                    LIFETIME_IDENT@268..270 \"'a\"\n                   WHITESPACE@270..271 \" \"\n                   PATH_TYPE@271..272\n                     PATH@271..272\n@@ -348,7 +348,7 @@ SOURCE_FILE@0..374\n           L_ANGLE@333..334 \"<\"\n           LIFETIME_PARAM@334..336\n             LIFETIME@334..336\n-              LIFETIME_IDENT@334..336 \"\\'a\"\n+              LIFETIME_IDENT@334..336 \"'a\"\n           R_ANGLE@336..337 \">\"\n         WHITESPACE@337..338 \" \"\n         FOR_TYPE@338..362\n@@ -357,7 +357,7 @@ SOURCE_FILE@0..374\n             L_ANGLE@341..342 \"<\"\n             LIFETIME_PARAM@342..344\n               LIFETIME@342..344\n-                LIFETIME_IDENT@342..344 \"\\'b\"\n+                LIFETIME_IDENT@342..344 \"'b\"\n             R_ANGLE@344..345 \">\"\n           WHITESPACE@345..346 \" \"\n           FN_PTR_TYPE@346..362\n@@ -368,7 +368,7 @@ SOURCE_FILE@0..374\n                 REF_TYPE@349..354\n                   AMP@349..350 \"&\"\n                   LIFETIME@350..352\n-                    LIFETIME_IDENT@350..352 \"\\'a\"\n+                    LIFETIME_IDENT@350..352 \"'a\"\n                   WHITESPACE@352..353 \" \"\n                   PATH_TYPE@353..354\n                     PATH@353..354\n@@ -381,7 +381,7 @@ SOURCE_FILE@0..374\n                 REF_TYPE@356..361\n                   AMP@356..357 \"&\"\n                   LIFETIME@357..359\n-                    LIFETIME_IDENT@357..359 \"\\'b\"\n+                    LIFETIME_IDENT@357..359 \"'b\"\n                   WHITESPACE@359..360 \" \"\n                   PATH_TYPE@360..361\n                     PATH@360..361"}, {"sha": "026c776e296c7424a7fae60b851b008d759dab9f", "filename": "crates/syntax/test_data/parser/ok/0069_multi_trait_object.rast", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/ce926aebc4461e38535047958c0b6f72b7a0c0ea/crates%2Fsyntax%2Ftest_data%2Fparser%2Fok%2F0069_multi_trait_object.rast", "raw_url": "https://github.com/rust-lang/rust/raw/ce926aebc4461e38535047958c0b6f72b7a0c0ea/crates%2Fsyntax%2Ftest_data%2Fparser%2Fok%2F0069_multi_trait_object.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Ftest_data%2Fparser%2Fok%2F0069_multi_trait_object.rast?ref=ce926aebc4461e38535047958c0b6f72b7a0c0ea", "patch": "@@ -8,15 +8,15 @@ SOURCE_FILE@0..195\n       L_ANGLE@8..9 \"<\"\n       LIFETIME_PARAM@9..11\n         LIFETIME@9..11\n-          LIFETIME_IDENT@9..11 \"\\'a\"\n+          LIFETIME_IDENT@9..11 \"'a\"\n       R_ANGLE@11..12 \">\"\n     WHITESPACE@12..13 \" \"\n     EQ@13..14 \"=\"\n     WHITESPACE@14..15 \" \"\n     REF_TYPE@15..36\n       AMP@15..16 \"&\"\n       LIFETIME@16..18\n-        LIFETIME_IDENT@16..18 \"\\'a\"\n+        LIFETIME_IDENT@16..18 \"'a\"\n       WHITESPACE@18..19 \" \"\n       PAREN_TYPE@19..36\n         L_PAREN@19..20 \"(\"\n@@ -112,7 +112,7 @@ SOURCE_FILE@0..195\n               WHITESPACE@105..106 \" \"\n               TYPE_BOUND@106..113\n                 LIFETIME@106..113\n-                  LIFETIME_IDENT@106..113 \"\\'static\"\n+                  LIFETIME_IDENT@106..113 \"'static\"\n           R_PAREN@113..114 \")\"\n     SEMICOLON@114..115 \";\"\n   WHITESPACE@115..116 \"\\n\""}, {"sha": "ef2d7657a9f9e3252332b2dd8f5754f48f74426b", "filename": "crates/vfs/src/vfs_path.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ce926aebc4461e38535047958c0b6f72b7a0c0ea/crates%2Fvfs%2Fsrc%2Fvfs_path.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ce926aebc4461e38535047958c0b6f72b7a0c0ea/crates%2Fvfs%2Fsrc%2Fvfs_path.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fvfs%2Fsrc%2Fvfs_path.rs?ref=ce926aebc4461e38535047958c0b6f72b7a0c0ea", "patch": "@@ -389,7 +389,7 @@ impl VirtualPath {\n \n             match (file_stem, extension) {\n                 (None, None) => None,\n-                (None, Some(_)) | (Some(\"\"), Some(_)) => Some((file_name, None)),\n+                (None | Some(\"\"), Some(_)) => Some((file_name, None)),\n                 (Some(file_stem), extension) => Some((file_stem, extension)),\n             }\n         }"}, {"sha": "64ab12b42a9ac59f9a6367b04b4e078c5705243a", "filename": "xtask/src/install.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ce926aebc4461e38535047958c0b6f72b7a0c0ea/xtask%2Fsrc%2Finstall.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ce926aebc4461e38535047958c0b6f72b7a0c0ea/xtask%2Fsrc%2Finstall.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/xtask%2Fsrc%2Finstall.rs?ref=ce926aebc4461e38535047958c0b6f72b7a0c0ea", "patch": "@@ -8,7 +8,7 @@ use xshell::{cmd, pushd};\n use crate::flags;\n \n // Latest stable, feel free to send a PR if this lags behind.\n-const REQUIRED_RUST_VERSION: u32 = 52;\n+const REQUIRED_RUST_VERSION: u32 = 53;\n \n impl flags::Install {\n     pub(crate) fn run(self) -> Result<()> {"}]}