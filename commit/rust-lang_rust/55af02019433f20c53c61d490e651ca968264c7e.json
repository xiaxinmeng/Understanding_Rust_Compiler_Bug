{"sha": "55af02019433f20c53c61d490e651ca968264c7e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjU1YWYwMjAxOTQzM2YyMGM1M2M2MWQ0OTBlNjUxY2E5NjgyNjRjN2U=", "commit": {"author": {"name": "Irina Popa", "email": "irinagpopa@gmail.com", "date": "2018-07-12T15:00:49Z"}, "committer": {"name": "Irina Popa", "email": "irinagpopa@gmail.com", "date": "2018-07-30T17:10:30Z"}, "message": "rustc_codegen_llvm: use safe references for Pass.", "tree": {"sha": "4df14db88bec28b31514edcb825b65dabf40b0f7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4df14db88bec28b31514edcb825b65dabf40b0f7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/55af02019433f20c53c61d490e651ca968264c7e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/55af02019433f20c53c61d490e651ca968264c7e", "html_url": "https://github.com/rust-lang/rust/commit/55af02019433f20c53c61d490e651ca968264c7e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/55af02019433f20c53c61d490e651ca968264c7e/comments", "author": {"login": "irinagpopa", "id": 32459019, "node_id": "MDQ6VXNlcjMyNDU5MDE5", "avatar_url": "https://avatars.githubusercontent.com/u/32459019?v=4", "gravatar_id": "", "url": "https://api.github.com/users/irinagpopa", "html_url": "https://github.com/irinagpopa", "followers_url": "https://api.github.com/users/irinagpopa/followers", "following_url": "https://api.github.com/users/irinagpopa/following{/other_user}", "gists_url": "https://api.github.com/users/irinagpopa/gists{/gist_id}", "starred_url": "https://api.github.com/users/irinagpopa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/irinagpopa/subscriptions", "organizations_url": "https://api.github.com/users/irinagpopa/orgs", "repos_url": "https://api.github.com/users/irinagpopa/repos", "events_url": "https://api.github.com/users/irinagpopa/events{/privacy}", "received_events_url": "https://api.github.com/users/irinagpopa/received_events", "type": "User", "site_admin": false}, "committer": {"login": "irinagpopa", "id": 32459019, "node_id": "MDQ6VXNlcjMyNDU5MDE5", "avatar_url": "https://avatars.githubusercontent.com/u/32459019?v=4", "gravatar_id": "", "url": "https://api.github.com/users/irinagpopa", "html_url": "https://github.com/irinagpopa", "followers_url": "https://api.github.com/users/irinagpopa/followers", "following_url": "https://api.github.com/users/irinagpopa/following{/other_user}", "gists_url": "https://api.github.com/users/irinagpopa/gists{/gist_id}", "starred_url": "https://api.github.com/users/irinagpopa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/irinagpopa/subscriptions", "organizations_url": "https://api.github.com/users/irinagpopa/orgs", "repos_url": "https://api.github.com/users/irinagpopa/repos", "events_url": "https://api.github.com/users/irinagpopa/events{/privacy}", "received_events_url": "https://api.github.com/users/irinagpopa/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e9546601a1eb614a50eea2caf41b6fd6905c4d15", "url": "https://api.github.com/repos/rust-lang/rust/commits/e9546601a1eb614a50eea2caf41b6fd6905c4d15", "html_url": "https://github.com/rust-lang/rust/commit/e9546601a1eb614a50eea2caf41b6fd6905c4d15"}], "stats": {"total": 21, "additions": 9, "deletions": 12}, "files": [{"sha": "c30a436449da4bfc428e520ed4ef95f7b3d7d54a", "filename": "src/librustc_codegen_llvm/back/lto.rs", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/55af02019433f20c53c61d490e651ca968264c7e/src%2Flibrustc_codegen_llvm%2Fback%2Flto.rs", "raw_url": "https://github.com/rust-lang/rust/raw/55af02019433f20c53c61d490e651ca968264c7e/src%2Flibrustc_codegen_llvm%2Fback%2Flto.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_llvm%2Fback%2Flto.rs?ref=55af02019433f20c53c61d490e651ca968264c7e", "patch": "@@ -468,8 +468,7 @@ fn run_pass_manager(cgcx: &CodegenContext,\n \n         if config.verify_llvm_ir {\n             let pass = llvm::LLVMRustFindAndCreatePass(\"verify\\0\".as_ptr() as *const _);\n-            assert!(!pass.is_null());\n-            llvm::LLVMRustAddPass(pm, pass);\n+            llvm::LLVMRustAddPass(pm, pass.unwrap());\n         }\n \n         // When optimizing for LTO we don't actually pass in `-O0`, but we force\n@@ -503,8 +502,7 @@ fn run_pass_manager(cgcx: &CodegenContext,\n \n         if config.verify_llvm_ir {\n             let pass = llvm::LLVMRustFindAndCreatePass(\"verify\\0\".as_ptr() as *const _);\n-            assert!(!pass.is_null());\n-            llvm::LLVMRustAddPass(pm, pass);\n+            llvm::LLVMRustAddPass(pm, pass.unwrap());\n         }\n \n         time_ext(cgcx.time_passes, None, \"LTO passes\", ||"}, {"sha": "9f99adc34a8c11fb63913eeabb92a7e9c2881b69", "filename": "src/librustc_codegen_llvm/back/write.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/55af02019433f20c53c61d490e651ca968264c7e/src%2Flibrustc_codegen_llvm%2Fback%2Fwrite.rs", "raw_url": "https://github.com/rust-lang/rust/raw/55af02019433f20c53c61d490e651ca968264c7e/src%2Flibrustc_codegen_llvm%2Fback%2Fwrite.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_llvm%2Fback%2Fwrite.rs?ref=55af02019433f20c53c61d490e651ca968264c7e", "patch": "@@ -522,10 +522,10 @@ unsafe fn optimize(cgcx: &CodegenContext,\n         // manager.\n         let addpass = |pass_name: &str| {\n             let pass_name = CString::new(pass_name).unwrap();\n-            let pass = llvm::LLVMRustFindAndCreatePass(pass_name.as_ptr());\n-            if pass.is_null() {\n-                return false;\n-            }\n+            let pass = match llvm::LLVMRustFindAndCreatePass(pass_name.as_ptr()) {\n+                Some(pass) => pass,\n+                None => return false,\n+            };\n             let pass_manager = match llvm::LLVMRustPassKind(pass) {\n                 llvm::PassKind::Function => fpm,\n                 llvm::PassKind::Module => mpm,"}, {"sha": "ebbb8549b126c210716beaacb24c82dd9e28338d", "filename": "src/librustc_codegen_llvm/llvm/ffi.rs", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/55af02019433f20c53c61d490e651ca968264c7e/src%2Flibrustc_codegen_llvm%2Fllvm%2Fffi.rs", "raw_url": "https://github.com/rust-lang/rust/raw/55af02019433f20c53c61d490e651ca968264c7e/src%2Flibrustc_codegen_llvm%2Fllvm%2Fffi.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_llvm%2Fllvm%2Fffi.rs?ref=55af02019433f20c53c61d490e651ca968264c7e", "patch": "@@ -397,7 +397,6 @@ extern { pub type ObjectFile; }\n extern { pub type SectionIterator; }\n pub type SectionIteratorRef = *mut SectionIterator;\n extern { pub type Pass; }\n-pub type PassRef = *mut Pass;\n extern { pub type TargetMachine; }\n pub type TargetMachineRef = *const TargetMachine;\n extern { pub type Archive; }\n@@ -1414,9 +1413,9 @@ extern \"C\" {\n     pub fn LLVMIsAConstantInt(value_ref: &Value) -> Option<&Value>;\n     pub fn LLVMIsAConstantFP(value_ref: &Value) -> Option<&Value>;\n \n-    pub fn LLVMRustPassKind(Pass: PassRef) -> PassKind;\n-    pub fn LLVMRustFindAndCreatePass(Pass: *const c_char) -> PassRef;\n-    pub fn LLVMRustAddPass(PM: PassManagerRef, Pass: PassRef);\n+    pub fn LLVMRustPassKind(Pass: &Pass) -> PassKind;\n+    pub fn LLVMRustFindAndCreatePass(Pass: *const c_char) -> Option<&'static mut Pass>;\n+    pub fn LLVMRustAddPass(PM: PassManagerRef, Pass: &'static mut Pass);\n \n     pub fn LLVMRustHasFeature(T: TargetMachineRef, s: *const c_char) -> bool;\n "}]}