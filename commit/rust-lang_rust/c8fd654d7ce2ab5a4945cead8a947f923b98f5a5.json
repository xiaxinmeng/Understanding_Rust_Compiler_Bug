{"sha": "c8fd654d7ce2ab5a4945cead8a947f923b98f5a5", "node_id": "C_kwDOAAsO6NoAKGM4ZmQ2NTRkN2NlMmFiNWE0OTQ1Y2VhZDhhOTQ3ZjkyM2I5OGY1YTU", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2022-12-14T09:31:06Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-12-14T09:31:06Z"}, "message": "Rollup merge of #105502 - chenyukang:yukang/fix-105366-impl, r=estebank\n\nSuggest impl in the scenario of typo with fn\n\nFixes #105366", "tree": {"sha": "bc61d05f88a02a97fd297f69a88afe01deb23644", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bc61d05f88a02a97fd297f69a88afe01deb23644"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c8fd654d7ce2ab5a4945cead8a947f923b98f5a5", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJjmZfaCRBK7hj4Ov3rIwAAAL4IABTCauyw3RXyL8XEYxlhTKm4\nGkXzS22q5Ly/rRCRGjOq/N8tyfORkoSQZ8jQXvt7DLG+lAr4M/BGbjDnquR1iixH\ngtxZrgaozpFDVKlPV3rrAOxE2q0QQu2GPYJS+Dhc26ij2M26mxyHkHR0QHOXzNjV\nKCkipNsL5pAtoYoc6jCxx1pehHOgv4aq4WEILbAfsuyB6PNrOzPrQgvFClDxixg+\nl7wQFvYx6i8i7nwapmscAqVoX2aY44bSqLj1D5gPUXCtCTEwYnaPQdcj+w0khVO3\n0dccFXXtjGdxQk0i+Fu4VMp/ovKOrovFyxSHKdItr3L6HVY3Xtyw/8CcuAfGxBs=\n=DBr7\n-----END PGP SIGNATURE-----\n", "payload": "tree bc61d05f88a02a97fd297f69a88afe01deb23644\nparent 49b99078b0ea08e37ed006e10f3e0705c63c4560\nparent b70a869d8f49e87d8432de6af6d209243a7053a4\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1671010266 +0100\ncommitter GitHub <noreply@github.com> 1671010266 +0100\n\nRollup merge of #105502 - chenyukang:yukang/fix-105366-impl, r=estebank\n\nSuggest impl in the scenario of typo with fn\n\nFixes #105366\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c8fd654d7ce2ab5a4945cead8a947f923b98f5a5", "html_url": "https://github.com/rust-lang/rust/commit/c8fd654d7ce2ab5a4945cead8a947f923b98f5a5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c8fd654d7ce2ab5a4945cead8a947f923b98f5a5/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "49b99078b0ea08e37ed006e10f3e0705c63c4560", "url": "https://api.github.com/repos/rust-lang/rust/commits/49b99078b0ea08e37ed006e10f3e0705c63c4560", "html_url": "https://github.com/rust-lang/rust/commit/49b99078b0ea08e37ed006e10f3e0705c63c4560"}, {"sha": "b70a869d8f49e87d8432de6af6d209243a7053a4", "url": "https://api.github.com/repos/rust-lang/rust/commits/b70a869d8f49e87d8432de6af6d209243a7053a4", "html_url": "https://github.com/rust-lang/rust/commit/b70a869d8f49e87d8432de6af6d209243a7053a4"}], "stats": {"total": 68, "additions": 66, "deletions": 2}, "files": [{"sha": "b53550e5fd556c02e58acd21fbae26252bb2b69a", "filename": "compiler/rustc_error_messages/locales/en-US/parse.ftl", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/c8fd654d7ce2ab5a4945cead8a947f923b98f5a5/compiler%2Frustc_error_messages%2Flocales%2Fen-US%2Fparse.ftl", "raw_url": "https://github.com/rust-lang/rust/raw/c8fd654d7ce2ab5a4945cead8a947f923b98f5a5/compiler%2Frustc_error_messages%2Flocales%2Fen-US%2Fparse.ftl", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_error_messages%2Flocales%2Fen-US%2Fparse.ftl?ref=c8fd654d7ce2ab5a4945cead8a947f923b98f5a5", "patch": "@@ -362,3 +362,6 @@ parse_fn_ptr_with_generics = function pointer types may not have generic paramet\n \n parse_invalid_identifier_with_leading_number = expected identifier, found number literal\n     .label = identifiers cannot start with a number\n+\n+parse_maybe_fn_typo_with_impl = you might have meant to write `impl` instead of `fn`\n+    .suggestion = replace `fn` with `impl` here"}, {"sha": "18a0bee9c2e5ee83ba98e4543fdc54b2befb3d8d", "filename": "compiler/rustc_parse/src/errors.rs", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/c8fd654d7ce2ab5a4945cead8a947f923b98f5a5/compiler%2Frustc_parse%2Fsrc%2Ferrors.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c8fd654d7ce2ab5a4945cead8a947f923b98f5a5/compiler%2Frustc_parse%2Fsrc%2Ferrors.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_parse%2Fsrc%2Ferrors.rs?ref=c8fd654d7ce2ab5a4945cead8a947f923b98f5a5", "patch": "@@ -1221,3 +1221,11 @@ pub(crate) struct UnexpectedIfWithIf(\n     #[suggestion(applicability = \"machine-applicable\", code = \" \", style = \"verbose\")]\n     pub Span,\n );\n+\n+#[derive(Diagnostic)]\n+#[diag(parse_maybe_fn_typo_with_impl)]\n+pub(crate) struct FnTypoWithImpl {\n+    #[primary_span]\n+    #[suggestion(applicability = \"maybe-incorrect\", code = \"impl\", style = \"verbose\")]\n+    pub fn_span: Span,\n+}"}, {"sha": "7c2d01509de417b100c281abf1a6863106d05ee0", "filename": "compiler/rustc_parse/src/parser/item.rs", "status": "modified", "additions": 18, "deletions": 2, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/c8fd654d7ce2ab5a4945cead8a947f923b98f5a5/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fitem.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c8fd654d7ce2ab5a4945cead8a947f923b98f5a5/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fitem.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fitem.rs?ref=c8fd654d7ce2ab5a4945cead8a947f923b98f5a5", "patch": "@@ -3,6 +3,7 @@ use crate::errors::{DocCommentDoesNotDocumentAnything, UseEmptyBlockNotSemi};\n use super::diagnostics::{dummy_arg, ConsumeClosingDelim};\n use super::ty::{AllowPlus, RecoverQPath, RecoverReturnSign};\n use super::{AttrWrapper, FollowedByType, ForceCollect, Parser, PathStyle, TrailingToken};\n+use crate::errors::FnTypoWithImpl;\n use rustc_ast::ast::*;\n use rustc_ast::ptr::P;\n use rustc_ast::token::{self, Delimiter, TokenKind};\n@@ -2131,11 +2132,26 @@ impl<'a> Parser<'a> {\n         vis: &Visibility,\n         case: Case,\n     ) -> PResult<'a, (Ident, FnSig, Generics, Option<P<Block>>)> {\n+        let fn_span = self.token.span;\n         let header = self.parse_fn_front_matter(vis, case)?; // `const ... fn`\n         let ident = self.parse_ident()?; // `foo`\n         let mut generics = self.parse_generics()?; // `<'a, T, ...>`\n-        let decl =\n-            self.parse_fn_decl(fn_parse_mode.req_name, AllowPlus::Yes, RecoverReturnSign::Yes)?; // `(p: u8, ...)`\n+        let decl = match self.parse_fn_decl(\n+            fn_parse_mode.req_name,\n+            AllowPlus::Yes,\n+            RecoverReturnSign::Yes,\n+        ) {\n+            Ok(decl) => decl,\n+            Err(old_err) => {\n+                // If we see `for Ty ...` then user probably meant `impl` item.\n+                if self.token.is_keyword(kw::For) {\n+                    old_err.cancel();\n+                    return Err(self.sess.create_err(FnTypoWithImpl { fn_span }));\n+                } else {\n+                    return Err(old_err);\n+                }\n+            }\n+        };\n         generics.where_clause = self.parse_where_clause()?; // `where T: Ord`\n \n         let mut sig_hi = self.prev_token.span;"}, {"sha": "ad26643c327945ab2bca04fcae23d0651edf19b4", "filename": "src/test/ui/parser/issue-105366.fixed", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/c8fd654d7ce2ab5a4945cead8a947f923b98f5a5/src%2Ftest%2Fui%2Fparser%2Fissue-105366.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/c8fd654d7ce2ab5a4945cead8a947f923b98f5a5/src%2Ftest%2Fui%2Fparser%2Fissue-105366.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fissue-105366.fixed?ref=c8fd654d7ce2ab5a4945cead8a947f923b98f5a5", "patch": "@@ -0,0 +1,12 @@\n+// run-rustfix\n+\n+struct Foo;\n+\n+impl From<i32> for Foo {\n+    //~^ ERROR you might have meant to write `impl` instead of `fn`\n+    fn from(_a: i32) -> Self {\n+        Foo\n+    }\n+}\n+\n+fn main() {}"}, {"sha": "311b6a60f1a27b23ced853fc38178b582bf6bd48", "filename": "src/test/ui/parser/issue-105366.rs", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/c8fd654d7ce2ab5a4945cead8a947f923b98f5a5/src%2Ftest%2Fui%2Fparser%2Fissue-105366.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c8fd654d7ce2ab5a4945cead8a947f923b98f5a5/src%2Ftest%2Fui%2Fparser%2Fissue-105366.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fissue-105366.rs?ref=c8fd654d7ce2ab5a4945cead8a947f923b98f5a5", "patch": "@@ -0,0 +1,12 @@\n+// run-rustfix\n+\n+struct Foo;\n+\n+fn From<i32> for Foo {\n+    //~^ ERROR you might have meant to write `impl` instead of `fn`\n+    fn from(_a: i32) -> Self {\n+        Foo\n+    }\n+}\n+\n+fn main() {}"}, {"sha": "0a7408e2c173f0fc00f111e4323136d97bb4c257", "filename": "src/test/ui/parser/issue-105366.stderr", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/c8fd654d7ce2ab5a4945cead8a947f923b98f5a5/src%2Ftest%2Fui%2Fparser%2Fissue-105366.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/c8fd654d7ce2ab5a4945cead8a947f923b98f5a5/src%2Ftest%2Fui%2Fparser%2Fissue-105366.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fissue-105366.stderr?ref=c8fd654d7ce2ab5a4945cead8a947f923b98f5a5", "patch": "@@ -0,0 +1,13 @@\n+error: you might have meant to write `impl` instead of `fn`\n+  --> $DIR/issue-105366.rs:5:1\n+   |\n+LL | fn From<i32> for Foo {\n+   | ^^\n+   |\n+help: replace `fn` with `impl` here\n+   |\n+LL | impl From<i32> for Foo {\n+   | ~~~~\n+\n+error: aborting due to previous error\n+"}]}