{"sha": "55e48420dbd9adbf695061ec7a92266284621d2d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjU1ZTQ4NDIwZGJkOWFkYmY2OTUwNjFlYzdhOTIyNjYyODQ2MjFkMmQ=", "commit": {"author": {"name": "Scott Olson", "email": "scott@solson.me", "date": "2015-09-28T02:26:12Z"}, "committer": {"name": "Scott Olson", "email": "scott@solson.me", "date": "2015-09-29T01:21:18Z"}, "message": "Minor code cleanup.", "tree": {"sha": "f7b9617d706f2dd5fb46303d8e62322b62c38ed8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f7b9617d706f2dd5fb46303d8e62322b62c38ed8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/55e48420dbd9adbf695061ec7a92266284621d2d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/55e48420dbd9adbf695061ec7a92266284621d2d", "html_url": "https://github.com/rust-lang/rust/commit/55e48420dbd9adbf695061ec7a92266284621d2d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/55e48420dbd9adbf695061ec7a92266284621d2d/comments", "author": {"login": "solson", "id": 26806, "node_id": "MDQ6VXNlcjI2ODA2", "avatar_url": "https://avatars.githubusercontent.com/u/26806?v=4", "gravatar_id": "", "url": "https://api.github.com/users/solson", "html_url": "https://github.com/solson", "followers_url": "https://api.github.com/users/solson/followers", "following_url": "https://api.github.com/users/solson/following{/other_user}", "gists_url": "https://api.github.com/users/solson/gists{/gist_id}", "starred_url": "https://api.github.com/users/solson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/solson/subscriptions", "organizations_url": "https://api.github.com/users/solson/orgs", "repos_url": "https://api.github.com/users/solson/repos", "events_url": "https://api.github.com/users/solson/events{/privacy}", "received_events_url": "https://api.github.com/users/solson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "solson", "id": 26806, "node_id": "MDQ6VXNlcjI2ODA2", "avatar_url": "https://avatars.githubusercontent.com/u/26806?v=4", "gravatar_id": "", "url": "https://api.github.com/users/solson", "html_url": "https://github.com/solson", "followers_url": "https://api.github.com/users/solson/followers", "following_url": "https://api.github.com/users/solson/following{/other_user}", "gists_url": "https://api.github.com/users/solson/gists{/gist_id}", "starred_url": "https://api.github.com/users/solson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/solson/subscriptions", "organizations_url": "https://api.github.com/users/solson/orgs", "repos_url": "https://api.github.com/users/solson/repos", "events_url": "https://api.github.com/users/solson/events{/privacy}", "received_events_url": "https://api.github.com/users/solson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a305b0624b164fd0b0b5558b837288429247cdaf", "url": "https://api.github.com/repos/rust-lang/rust/commits/a305b0624b164fd0b0b5558b837288429247cdaf", "html_url": "https://github.com/rust-lang/rust/commit/a305b0624b164fd0b0b5558b837288429247cdaf"}], "stats": {"total": 10, "additions": 5, "deletions": 5}, "files": [{"sha": "89df77d074fdc0f1d39a41242c848309a7c3da3c", "filename": "src/libcollectionstest/string.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/55e48420dbd9adbf695061ec7a92266284621d2d/src%2Flibcollectionstest%2Fstring.rs", "raw_url": "https://github.com/rust-lang/rust/raw/55e48420dbd9adbf695061ec7a92266284621d2d/src%2Flibcollectionstest%2Fstring.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcollectionstest%2Fstring.rs?ref=55e48420dbd9adbf695061ec7a92266284621d2d", "patch": "@@ -264,7 +264,7 @@ fn test_str_add() {\n \n #[test]\n fn remove() {\n-    let mut s = \"\u0e28\u0e44\u0e17\u0e22\u4e2d\u534eVi\u1ec7t Nam; foobar\".to_string();;\n+    let mut s = \"\u0e28\u0e44\u0e17\u0e22\u4e2d\u534eVi\u1ec7t Nam; foobar\".to_string();\n     assert_eq!(s.remove(0), '\u0e28');\n     assert_eq!(s.len(), 33);\n     assert_eq!(s, \"\u0e44\u0e17\u0e22\u4e2d\u534eVi\u1ec7t Nam; foobar\");"}, {"sha": "77092d0802fb37ee54e1abbde8b5f60598e840b2", "filename": "src/librustc/metadata/loader.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/55e48420dbd9adbf695061ec7a92266284621d2d/src%2Flibrustc%2Fmetadata%2Floader.rs", "raw_url": "https://github.com/rust-lang/rust/raw/55e48420dbd9adbf695061ec7a92266284621d2d/src%2Flibrustc%2Fmetadata%2Floader.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmetadata%2Floader.rs?ref=55e48420dbd9adbf695061ec7a92266284621d2d", "patch": "@@ -726,7 +726,7 @@ fn get_metadata_section(target: &Target, filename: &Path)\n         ret = Some(get_metadata_section_imp(target, filename));\n     });\n     info!(\"reading {:?} => {:?}\", filename.file_name().unwrap(), dur);\n-    return ret.unwrap();;\n+    ret.unwrap()\n }\n \n fn get_metadata_section_imp(target: &Target, filename: &Path)"}, {"sha": "a54818b2b5369b4cac579f84af0d97baff382c85", "filename": "src/librustc/middle/traits/error_reporting.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/55e48420dbd9adbf695061ec7a92266284621d2d/src%2Flibrustc%2Fmiddle%2Ftraits%2Ferror_reporting.rs", "raw_url": "https://github.com/rust-lang/rust/raw/55e48420dbd9adbf695061ec7a92266284621d2d/src%2Flibrustc%2Fmiddle%2Ftraits%2Ferror_reporting.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftraits%2Ferror_reporting.rs?ref=55e48420dbd9adbf695061ec7a92266284621d2d", "patch": "@@ -216,7 +216,7 @@ pub fn report_selection_error<'a, 'tcx>(infcx: &InferCtxt<'a, 'tcx>,\n                     is_warning, infcx.tcx.sess, obligation.cause.span, E0276,\n                     \"the requirement `{}` appears on the impl \\\n                      method but not on the corresponding trait method\",\n-                    obligation.predicate);;\n+                    obligation.predicate);\n             } else {\n                 match obligation.predicate {\n                     ty::Predicate::Trait(ref trait_predicate) => {\n@@ -455,7 +455,7 @@ pub fn maybe_report_ambiguity<'a, 'tcx>(infcx: &InferCtxt<'a, 'tcx>,\n             if !infcx.tcx.sess.has_errors() {\n                 span_err!(infcx.tcx.sess, obligation.cause.span, E0284,\n                         \"type annotations required: cannot resolve `{}`\",\n-                        predicate);;\n+                        predicate);\n                 note_obligation_cause(infcx, obligation);\n             }\n         }"}, {"sha": "93cb0cb0af23aa501b6d0a2c96ad797d5b121dc9", "filename": "src/test/run-pass/borrowck-rvalues-mutable.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/55e48420dbd9adbf695061ec7a92266284621d2d/src%2Ftest%2Frun-pass%2Fborrowck-rvalues-mutable.rs", "raw_url": "https://github.com/rust-lang/rust/raw/55e48420dbd9adbf695061ec7a92266284621d2d/src%2Ftest%2Frun-pass%2Fborrowck-rvalues-mutable.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fborrowck-rvalues-mutable.rs?ref=55e48420dbd9adbf695061ec7a92266284621d2d", "patch": "@@ -39,5 +39,5 @@ pub fn main() {\n     assert_eq!(v, 22);\n \n     let v = Counter::new(22).inc().inc().get();\n-    assert_eq!(v, 24);;\n+    assert_eq!(v, 24);\n }"}]}