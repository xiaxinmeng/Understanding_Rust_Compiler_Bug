{"sha": "915a04e2a401919d8b0e152331c839df471577b7", "node_id": "MDY6Q29tbWl0NzI0NzEyOjkxNWEwNGUyYTQwMTkxOWQ4YjBlMTUyMzMxYzgzOWRmNDcxNTc3Yjc=", "commit": {"author": {"name": "Simonas Kazlauskas", "email": "git@kazlauskas.me", "date": "2020-12-31T16:02:52Z"}, "committer": {"name": "Simonas Kazlauskas", "email": "git@kazlauskas.me", "date": "2021-01-29T22:49:10Z"}, "message": "Consider Scalar to be a bool only if its unsigned\n\nThis seems right, given that conceptually bools are unsigned, but the\nimplications of this change may have more action at distance that I'm\nnot sure how to exhaustively consider.\n\nFor instance there are a number of cases where code attaches range\nmetadata if `scalar.is_bool()` holds. Supposedly it would no longer be\nattached to the `repr(i8)` enums? Though I'm not sure why booleans are\nbeing special-cased here in the first place...\n\nFixes #80556", "tree": {"sha": "caadb43d4c23a8c1bc44cba18f3e3aa41b5fd79d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/caadb43d4c23a8c1bc44cba18f3e3aa41b5fd79d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/915a04e2a401919d8b0e152331c839df471577b7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/915a04e2a401919d8b0e152331c839df471577b7", "html_url": "https://github.com/rust-lang/rust/commit/915a04e2a401919d8b0e152331c839df471577b7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/915a04e2a401919d8b0e152331c839df471577b7/comments", "author": {"login": "nagisa", "id": 679122, "node_id": "MDQ6VXNlcjY3OTEyMg==", "avatar_url": "https://avatars.githubusercontent.com/u/679122?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nagisa", "html_url": "https://github.com/nagisa", "followers_url": "https://api.github.com/users/nagisa/followers", "following_url": "https://api.github.com/users/nagisa/following{/other_user}", "gists_url": "https://api.github.com/users/nagisa/gists{/gist_id}", "starred_url": "https://api.github.com/users/nagisa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nagisa/subscriptions", "organizations_url": "https://api.github.com/users/nagisa/orgs", "repos_url": "https://api.github.com/users/nagisa/repos", "events_url": "https://api.github.com/users/nagisa/events{/privacy}", "received_events_url": "https://api.github.com/users/nagisa/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nagisa", "id": 679122, "node_id": "MDQ6VXNlcjY3OTEyMg==", "avatar_url": "https://avatars.githubusercontent.com/u/679122?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nagisa", "html_url": "https://github.com/nagisa", "followers_url": "https://api.github.com/users/nagisa/followers", "following_url": "https://api.github.com/users/nagisa/following{/other_user}", "gists_url": "https://api.github.com/users/nagisa/gists{/gist_id}", "starred_url": "https://api.github.com/users/nagisa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nagisa/subscriptions", "organizations_url": "https://api.github.com/users/nagisa/orgs", "repos_url": "https://api.github.com/users/nagisa/repos", "events_url": "https://api.github.com/users/nagisa/events{/privacy}", "received_events_url": "https://api.github.com/users/nagisa/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b122908617436af187252572ed5db96850551380", "url": "https://api.github.com/repos/rust-lang/rust/commits/b122908617436af187252572ed5db96850551380", "html_url": "https://github.com/rust-lang/rust/commit/b122908617436af187252572ed5db96850551380"}], "stats": {"total": 22, "additions": 20, "deletions": 2}, "files": [{"sha": "ce8e56b194980ee1f238558d70d314903fb89d7c", "filename": "compiler/rustc_target/src/abi/call/mod.rs", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/915a04e2a401919d8b0e152331c839df471577b7/compiler%2Frustc_target%2Fsrc%2Fabi%2Fcall%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/915a04e2a401919d8b0e152331c839df471577b7/compiler%2Frustc_target%2Fsrc%2Fabi%2Fcall%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_target%2Fsrc%2Fabi%2Fcall%2Fmod.rs?ref=915a04e2a401919d8b0e152331c839df471577b7", "patch": "@@ -103,7 +103,12 @@ impl ArgAttributes {\n     }\n \n     pub fn ext(&mut self, ext: ArgExtension) -> &mut Self {\n-        assert!(self.arg_ext == ArgExtension::None || self.arg_ext == ext);\n+        assert!(\n+            self.arg_ext == ArgExtension::None || self.arg_ext == ext,\n+            \"cannot set {:?} when {:?} is already set\",\n+            ext,\n+            self.arg_ext\n+        );\n         self.arg_ext = ext;\n         self\n     }"}, {"sha": "b14b1ef00db9148d7b3134556d7c74b8e3e2aa3f", "filename": "compiler/rustc_target/src/abi/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/915a04e2a401919d8b0e152331c839df471577b7/compiler%2Frustc_target%2Fsrc%2Fabi%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/915a04e2a401919d8b0e152331c839df471577b7/compiler%2Frustc_target%2Fsrc%2Fabi%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_target%2Fsrc%2Fabi%2Fmod.rs?ref=915a04e2a401919d8b0e152331c839df471577b7", "patch": "@@ -682,7 +682,7 @@ pub struct Scalar {\n \n impl Scalar {\n     pub fn is_bool(&self) -> bool {\n-        if let Int(I8, _) = self.value { self.valid_range == (0..=1) } else { false }\n+        matches!(self.value, Int(I8, false)) && self.valid_range == (0..=1)\n     }\n \n     /// Returns the valid range as a `x..y` range."}, {"sha": "f93ccd794117dffc46ad5bcdcdc3bc12d2975f04", "filename": "src/test/codegen/abi-repr-ext.rs", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/915a04e2a401919d8b0e152331c839df471577b7/src%2Ftest%2Fcodegen%2Fabi-repr-ext.rs", "raw_url": "https://github.com/rust-lang/rust/raw/915a04e2a401919d8b0e152331c839df471577b7/src%2Ftest%2Fcodegen%2Fabi-repr-ext.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcodegen%2Fabi-repr-ext.rs?ref=915a04e2a401919d8b0e152331c839df471577b7", "patch": "@@ -0,0 +1,13 @@\n+#![crate_type=\"lib\"]\n+\n+#[repr(i8)]\n+pub enum Type {\n+    Type1 = 0,\n+    Type2 = 1\n+}\n+\n+// CHECK: define signext i8 @test()\n+#[no_mangle]\n+pub extern \"C\" fn test() -> Type {\n+    Type::Type1\n+}"}]}