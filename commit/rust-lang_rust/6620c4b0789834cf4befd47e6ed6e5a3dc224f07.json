{"sha": "6620c4b0789834cf4befd47e6ed6e5a3dc224f07", "node_id": "MDY6Q29tbWl0NzI0NzEyOjY2MjBjNGIwNzg5ODM0Y2Y0YmVmZDQ3ZTZlZDZlNWEzZGMyMjRmMDc=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2017-05-25T01:31:05Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2017-05-29T04:55:54Z"}, "message": "rust-src: include everything needed to compile libstd with jemalloc", "tree": {"sha": "5fe9887b67a0ab486586f95401a1bf8d4a064688", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5fe9887b67a0ab486586f95401a1bf8d4a064688"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6620c4b0789834cf4befd47e6ed6e5a3dc224f07", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6620c4b0789834cf4befd47e6ed6e5a3dc224f07", "html_url": "https://github.com/rust-lang/rust/commit/6620c4b0789834cf4befd47e6ed6e5a3dc224f07", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6620c4b0789834cf4befd47e6ed6e5a3dc224f07/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "920c4799bead614c21b12ba396afe19cb70730f3", "url": "https://api.github.com/repos/rust-lang/rust/commits/920c4799bead614c21b12ba396afe19cb70730f3", "html_url": "https://github.com/rust-lang/rust/commit/920c4799bead614c21b12ba396afe19cb70730f3"}], "stats": {"total": 27, "additions": 21, "deletions": 6}, "files": [{"sha": "a2be2cad8fbadb636d91d64d7b753bfc2323ec1f", "filename": "src/bootstrap/dist.rs", "status": "modified", "additions": 21, "deletions": 6, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/6620c4b0789834cf4befd47e6ed6e5a3dc224f07/src%2Fbootstrap%2Fdist.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6620c4b0789834cf4befd47e6ed6e5a3dc224f07/src%2Fbootstrap%2Fdist.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fdist.rs?ref=6620c4b0789834cf4befd47e6ed6e5a3dc224f07", "patch": "@@ -489,8 +489,8 @@ pub fn analysis(build: &Build, compiler: &Compiler, target: &str) {\n     t!(fs::remove_dir_all(&image));\n }\n \n-fn copy_src_dirs(build: &Build, src_dirs: &[&str], dst_dir: &Path) {\n-    let filter_fn = move |path: &Path| {\n+fn copy_src_dirs(build: &Build, src_dirs: &[&str], exclude_dirs: &[&str], dst_dir: &Path) {\n+    fn filter_fn(exclude_dirs: &[&str], dir: &str, path: &Path) -> bool {\n         let spath = match path.to_str() {\n             Some(path) => path,\n             None => return false,\n@@ -506,6 +506,11 @@ fn copy_src_dirs(build: &Build, src_dirs: &[&str], dst_dir: &Path) {\n             }\n         }\n \n+        let full_path = Path::new(dir).join(path);\n+        if exclude_dirs.iter().any(|excl| full_path == Path::new(excl)) {\n+            return false;\n+        }\n+\n         let excludes = [\n             \"CVS\", \"RCS\", \"SCCS\", \".git\", \".gitignore\", \".gitmodules\",\n             \".gitattributes\", \".cvsignore\", \".svn\", \".arch-ids\", \"{arch}\",\n@@ -515,13 +520,13 @@ fn copy_src_dirs(build: &Build, src_dirs: &[&str], dst_dir: &Path) {\n         !path.iter()\n              .map(|s| s.to_str().unwrap())\n              .any(|s| excludes.contains(&s))\n-    };\n+    }\n \n     // Copy the directories using our filter\n     for item in src_dirs {\n         let dst = &dst_dir.join(item);\n         t!(fs::create_dir_all(dst));\n-        cp_filtered(&build.src.join(item), dst, &filter_fn);\n+        cp_filtered(&build.src.join(item), dst, &|path| filter_fn(exclude_dirs, item, path));\n     }\n }\n \n@@ -544,6 +549,7 @@ pub fn rust_src(build: &Build) {\n         \"src/liballoc\",\n         \"src/liballoc_jemalloc\",\n         \"src/liballoc_system\",\n+        \"src/libbacktrace\",\n         \"src/libcollections\",\n         \"src/libcompiler_builtins\",\n         \"src/libcore\",\n@@ -559,9 +565,18 @@ pub fn rust_src(build: &Build) {\n         \"src/libstd_unicode\",\n         \"src/libunwind\",\n         \"src/rustc/libc_shim\",\n+        \"src/libtest\",\n+        \"src/libterm\",\n+        \"src/libgetopts\",\n+        \"src/compiler-rt\",\n+        \"src/jemalloc\",\n+    ];\n+    let std_src_dirs_exclude = [\n+        \"src/compiler-rt/test\",\n+        \"src/jemalloc/test/unit\",\n     ];\n \n-    copy_src_dirs(build, &std_src_dirs[..], &dst_src);\n+    copy_src_dirs(build, &std_src_dirs[..], &std_src_dirs_exclude[..], &dst_src);\n \n     // Create source tarball in rust-installer format\n     let mut cmd = rust_installer(build);\n@@ -608,7 +623,7 @@ pub fn plain_source_tarball(build: &Build) {\n         \"src\",\n     ];\n \n-    copy_src_dirs(build, &src_dirs[..], &plain_dst_src);\n+    copy_src_dirs(build, &src_dirs[..], &[], &plain_dst_src);\n \n     // Copy the files normally\n     for item in &src_files {"}]}