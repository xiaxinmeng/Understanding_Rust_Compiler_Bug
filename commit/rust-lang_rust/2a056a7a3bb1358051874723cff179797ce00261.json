{"sha": "2a056a7a3bb1358051874723cff179797ce00261", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJhMDU2YTdhM2JiMTM1ODA1MTg3NDcyM2NmZjE3OTc5N2NlMDAyNjE=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2020-03-14T08:28:43Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2020-03-14T08:28:43Z"}, "message": "Auto merge of #1226 - RalfJung:rustup, r=RalfJung\n\nrustup, fix for intrinsic rename and transmute error change\n\n@bors r+", "tree": {"sha": "912653f40ee3162dcd4b239107840d607a5bbf6c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/912653f40ee3162dcd4b239107840d607a5bbf6c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2a056a7a3bb1358051874723cff179797ce00261", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2a056a7a3bb1358051874723cff179797ce00261", "html_url": "https://github.com/rust-lang/rust/commit/2a056a7a3bb1358051874723cff179797ce00261", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2a056a7a3bb1358051874723cff179797ce00261/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "97c257530bd1f7c54f4e805f701942b8ed335175", "url": "https://api.github.com/repos/rust-lang/rust/commits/97c257530bd1f7c54f4e805f701942b8ed335175", "html_url": "https://github.com/rust-lang/rust/commit/97c257530bd1f7c54f4e805f701942b8ed335175"}, {"sha": "497fbcbf44b52d28169bf74b00ef346920cd5d26", "url": "https://api.github.com/repos/rust-lang/rust/commits/497fbcbf44b52d28169bf74b00ef346920cd5d26", "html_url": "https://github.com/rust-lang/rust/commit/497fbcbf44b52d28169bf74b00ef346920cd5d26"}], "stats": {"total": 14, "additions": 7, "deletions": 7}, "files": [{"sha": "4635ed380aa49705d81939b05e357b31b5de88d9", "filename": "rust-version", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/2a056a7a3bb1358051874723cff179797ce00261/rust-version", "raw_url": "https://github.com/rust-lang/rust/raw/2a056a7a3bb1358051874723cff179797ce00261/rust-version", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/rust-version?ref=2a056a7a3bb1358051874723cff179797ce00261", "patch": "@@ -1 +1 @@\n-54b7d21f59a363e53eb1c31d76b40af2ff99321c\n+1572c433eed495d0ade41511ae106b180e02851d"}, {"sha": "622e237ebb0a8963ef5ed764f25b14142570e4f8", "filename": "src/shims/intrinsics.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/2a056a7a3bb1358051874723cff179797ce00261/src%2Fshims%2Fintrinsics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2a056a7a3bb1358051874723cff179797ce00261/src%2Fshims%2Fintrinsics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fshims%2Fintrinsics.rs?ref=2a056a7a3bb1358051874723cff179797ce00261", "patch": "@@ -438,20 +438,20 @@ pub trait EvalContextExt<'mir, 'tcx: 'mir>: crate::MiriEvalContextExt<'mir, 'tcx\n                 this.write_scalar(result_ptr, dest)?;\n             }\n \n-            \"panic_if_uninhabited\" |\n-            \"panic_if_zero_invalid\" |\n-            \"panic_if_any_invalid\" => {\n+            \"assert_inhabited\" |\n+            \"assert_zero_valid\" |\n+            \"assert_uninit_valid\" => {\n                 let ty = substs.type_at(0);\n                 let layout = this.layout_of(ty)?;\n                 if layout.abi.is_uninhabited() {\n                     // Return here because we paniced instead of returning normally from the intrinsic.\n                     return this.start_panic(&format!(\"attempted to instantiate uninhabited type `{}`\", ty), unwind);\n                 }\n-                if intrinsic_name == \"panic_if_zero_invalid\" && !layout.might_permit_raw_init(this, /*zero:*/ true).unwrap() {\n+                if intrinsic_name == \"assert_zero_valid\" && !layout.might_permit_raw_init(this, /*zero:*/ true).unwrap() {\n                     // Return here because we paniced instead of returning normally from the intrinsic.\n                     return this.start_panic(&format!(\"attempted to zero-initialize type `{}`, which is invalid\", ty), unwind);\n                 }\n-                if intrinsic_name == \"panic_if_any_invalid\" && !layout.might_permit_raw_init(this, /*zero:*/ false).unwrap() {\n+                if intrinsic_name == \"assert_uninit_valid\" && !layout.might_permit_raw_init(this, /*zero:*/ false).unwrap() {\n                     // Return here because we paniced instead of returning normally from the intrinsic.\n                     return this.start_panic(&format!(\"attempted to leave type `{}` uninitialized, which is invalid\", ty), unwind);\n                 }"}, {"sha": "8a7d7bfcc682a742957c4b024a72e652278b131a", "filename": "tests/compile-fail/never_transmute_humans.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/2a056a7a3bb1358051874723cff179797ce00261/tests%2Fcompile-fail%2Fnever_transmute_humans.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2a056a7a3bb1358051874723cff179797ce00261/tests%2Fcompile-fail%2Fnever_transmute_humans.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompile-fail%2Fnever_transmute_humans.rs?ref=2a056a7a3bb1358051874723cff179797ce00261", "patch": "@@ -7,6 +7,6 @@ struct Human;\n \n fn main() {\n     let _x: ! = unsafe {\n-        std::mem::transmute::<Human, !>(Human) //~ ERROR entering unreachable code\n+        std::mem::transmute::<Human, !>(Human) //~ ERROR transmuting to uninhabited\n     };\n }"}]}