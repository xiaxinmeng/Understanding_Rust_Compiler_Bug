{"sha": "75caee076d41eca5163a4094e44ce6d48f6b4f1b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc1Y2FlZTA3NmQ0MWVjYTUxNjNhNDA5NGU0NGNlNmQ0OGY2YjRmMWI=", "commit": {"author": {"name": "Lzu Tao", "email": "taolzu@gmail.com", "date": "2020-07-11T09:06:59Z"}, "committer": {"name": "Lzu Tao", "email": "taolzu@gmail.com", "date": "2020-07-19T09:29:11Z"}, "message": "Extract closure to function", "tree": {"sha": "6ed4fef6a3c32c8dc71ba65cd4bb7833682684ed", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6ed4fef6a3c32c8dc71ba65cd4bb7833682684ed"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/75caee076d41eca5163a4094e44ce6d48f6b4f1b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/75caee076d41eca5163a4094e44ce6d48f6b4f1b", "html_url": "https://github.com/rust-lang/rust/commit/75caee076d41eca5163a4094e44ce6d48f6b4f1b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/75caee076d41eca5163a4094e44ce6d48f6b4f1b/comments", "author": {"login": "tesuji", "id": 15225902, "node_id": "MDQ6VXNlcjE1MjI1OTAy", "avatar_url": "https://avatars.githubusercontent.com/u/15225902?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tesuji", "html_url": "https://github.com/tesuji", "followers_url": "https://api.github.com/users/tesuji/followers", "following_url": "https://api.github.com/users/tesuji/following{/other_user}", "gists_url": "https://api.github.com/users/tesuji/gists{/gist_id}", "starred_url": "https://api.github.com/users/tesuji/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tesuji/subscriptions", "organizations_url": "https://api.github.com/users/tesuji/orgs", "repos_url": "https://api.github.com/users/tesuji/repos", "events_url": "https://api.github.com/users/tesuji/events{/privacy}", "received_events_url": "https://api.github.com/users/tesuji/received_events", "type": "User", "site_admin": false}, "committer": {"login": "tesuji", "id": 15225902, "node_id": "MDQ6VXNlcjE1MjI1OTAy", "avatar_url": "https://avatars.githubusercontent.com/u/15225902?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tesuji", "html_url": "https://github.com/tesuji", "followers_url": "https://api.github.com/users/tesuji/followers", "following_url": "https://api.github.com/users/tesuji/following{/other_user}", "gists_url": "https://api.github.com/users/tesuji/gists{/gist_id}", "starred_url": "https://api.github.com/users/tesuji/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tesuji/subscriptions", "organizations_url": "https://api.github.com/users/tesuji/orgs", "repos_url": "https://api.github.com/users/tesuji/repos", "events_url": "https://api.github.com/users/tesuji/events{/privacy}", "received_events_url": "https://api.github.com/users/tesuji/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "79d5cbbf867a888000b8bbd47194bc57b343b72a", "url": "https://api.github.com/repos/rust-lang/rust/commits/79d5cbbf867a888000b8bbd47194bc57b343b72a", "html_url": "https://github.com/rust-lang/rust/commit/79d5cbbf867a888000b8bbd47194bc57b343b72a"}], "stats": {"total": 12, "additions": 8, "deletions": 4}, "files": [{"sha": "049bf44d6fd961142bcad34523e590d2100647c8", "filename": "src/tools/compiletest/src/main.rs", "status": "modified", "additions": 8, "deletions": 4, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/75caee076d41eca5163a4094e44ce6d48f6b4f1b/src%2Ftools%2Fcompiletest%2Fsrc%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/75caee076d41eca5163a4094e44ce6d48f6b4f1b/src%2Ftools%2Fcompiletest%2Fsrc%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fcompiletest%2Fsrc%2Fmain.rs?ref=75caee076d41eca5163a4094e44ce6d48f6b4f1b", "patch": "@@ -848,11 +848,11 @@ fn extract_gdb_version(full_version_line: &str) -> Option<u32> {\n     let patch = splits.next();\n \n     let major: u32 = major.parse().unwrap();\n-    let (minor, patch): (u32, u32) = match minor.find(|c: char| !c.is_digit(10)) {\n+    let (minor, patch): (u32, u32) = match minor.find(not_a_digit) {\n         None => {\n             let minor = minor.parse().unwrap();\n             let patch: u32 = match patch {\n-                Some(patch) => match patch.find(|c: char| !c.is_digit(10)) {\n+                Some(patch) => match patch.find(not_a_digit) {\n                     None => patch.parse().unwrap(),\n                     Some(idx) if idx > 3 => 0,\n                     Some(idx) => patch[..idx].parse().unwrap(),\n@@ -898,15 +898,19 @@ fn extract_lldb_version(full_version_line: &str) -> Option<(u32, bool)> {\n     if let Some(apple_ver) =\n         full_version_line.strip_prefix(\"LLDB-\").or_else(|| full_version_line.strip_prefix(\"lldb-\"))\n     {\n-        if let Some(idx) = apple_ver.find(|c: char| !c.is_digit(10)) {\n+        if let Some(idx) = apple_ver.find(not_a_digit) {\n             let version: u32 = apple_ver[..idx].parse().unwrap();\n             return Some((version, full_version_line.contains(\"rust-enabled\")));\n         }\n     } else if let Some(lldb_ver) = full_version_line.strip_prefix(\"lldb version \") {\n-        if let Some(idx) = lldb_ver.find(|c: char| !c.is_digit(10)) {\n+        if let Some(idx) = lldb_ver.find(not_a_digit) {\n             let version: u32 = lldb_ver[..idx].parse().unwrap();\n             return Some((version * 100, full_version_line.contains(\"rust-enabled\")));\n         }\n     }\n     None\n }\n+\n+fn not_a_digit(c: char) -> bool {\n+    !c.is_digit(10)\n+}"}]}