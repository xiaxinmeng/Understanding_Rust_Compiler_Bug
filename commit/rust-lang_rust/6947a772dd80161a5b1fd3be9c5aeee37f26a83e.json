{"sha": "6947a772dd80161a5b1fd3be9c5aeee37f26a83e", "node_id": "C_kwDOAAsO6NoAKDY5NDdhNzcyZGQ4MDE2MWE1YjFmZDNiZTljNWFlZWUzN2YyNmE4M2U", "commit": {"author": {"name": "Caio", "email": "c410.f3r@gmail.com", "date": "2022-03-28T13:16:32Z"}, "committer": {"name": "Caio", "email": "c410.f3r@gmail.com", "date": "2022-03-28T13:16:32Z"}, "message": "Remove duplicated and unused test files", "tree": {"sha": "7236b5fec7ebeb45819cd453774507e4faa3664c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7236b5fec7ebeb45819cd453774507e4faa3664c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6947a772dd80161a5b1fd3be9c5aeee37f26a83e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6947a772dd80161a5b1fd3be9c5aeee37f26a83e", "html_url": "https://github.com/rust-lang/rust/commit/6947a772dd80161a5b1fd3be9c5aeee37f26a83e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6947a772dd80161a5b1fd3be9c5aeee37f26a83e/comments", "author": {"login": "c410-f3r", "id": 17877264, "node_id": "MDQ6VXNlcjE3ODc3MjY0", "avatar_url": "https://avatars.githubusercontent.com/u/17877264?v=4", "gravatar_id": "", "url": "https://api.github.com/users/c410-f3r", "html_url": "https://github.com/c410-f3r", "followers_url": "https://api.github.com/users/c410-f3r/followers", "following_url": "https://api.github.com/users/c410-f3r/following{/other_user}", "gists_url": "https://api.github.com/users/c410-f3r/gists{/gist_id}", "starred_url": "https://api.github.com/users/c410-f3r/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/c410-f3r/subscriptions", "organizations_url": "https://api.github.com/users/c410-f3r/orgs", "repos_url": "https://api.github.com/users/c410-f3r/repos", "events_url": "https://api.github.com/users/c410-f3r/events{/privacy}", "received_events_url": "https://api.github.com/users/c410-f3r/received_events", "type": "User", "site_admin": false}, "committer": {"login": "c410-f3r", "id": 17877264, "node_id": "MDQ6VXNlcjE3ODc3MjY0", "avatar_url": "https://avatars.githubusercontent.com/u/17877264?v=4", "gravatar_id": "", "url": "https://api.github.com/users/c410-f3r", "html_url": "https://github.com/c410-f3r", "followers_url": "https://api.github.com/users/c410-f3r/followers", "following_url": "https://api.github.com/users/c410-f3r/following{/other_user}", "gists_url": "https://api.github.com/users/c410-f3r/gists{/gist_id}", "starred_url": "https://api.github.com/users/c410-f3r/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/c410-f3r/subscriptions", "organizations_url": "https://api.github.com/users/c410-f3r/orgs", "repos_url": "https://api.github.com/users/c410-f3r/repos", "events_url": "https://api.github.com/users/c410-f3r/events{/privacy}", "received_events_url": "https://api.github.com/users/c410-f3r/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b3e46a9763d86a1681ddaaf0e60ce537302b9c92", "url": "https://api.github.com/repos/rust-lang/rust/commits/b3e46a9763d86a1681ddaaf0e60ce537302b9c92", "html_url": "https://github.com/rust-lang/rust/commit/b3e46a9763d86a1681ddaaf0e60ce537302b9c92"}], "stats": {"total": 201, "additions": 0, "deletions": 201}, "files": [{"sha": "3fb40f6bfa96004068358d5a4e8815078a488bf9", "filename": "src/test/ui/auxiliary/empty-struct.rs", "status": "removed", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/b3e46a9763d86a1681ddaaf0e60ce537302b9c92/src%2Ftest%2Fui%2Fauxiliary%2Fempty-struct.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b3e46a9763d86a1681ddaaf0e60ce537302b9c92/src%2Ftest%2Fui%2Fauxiliary%2Fempty-struct.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fauxiliary%2Fempty-struct.rs?ref=b3e46a9763d86a1681ddaaf0e60ce537302b9c92", "patch": "@@ -1,9 +0,0 @@\n-pub struct XEmpty1 {}\n-pub struct XEmpty2;\n-pub struct XEmpty6();\n-\n-pub enum XE {\n-    XEmpty3 {},\n-    XEmpty4,\n-    XEmpty5(),\n-}"}, {"sha": "c995038e5a8a7271296466148f4186afe1483692", "filename": "src/test/ui/auxiliary/stability-cfg2.rs", "status": "removed", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/b3e46a9763d86a1681ddaaf0e60ce537302b9c92/src%2Ftest%2Fui%2Fauxiliary%2Fstability-cfg2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b3e46a9763d86a1681ddaaf0e60ce537302b9c92/src%2Ftest%2Fui%2Fauxiliary%2Fstability-cfg2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fauxiliary%2Fstability-cfg2.rs?ref=b3e46a9763d86a1681ddaaf0e60ce537302b9c92", "patch": "@@ -1,5 +0,0 @@\n-// compile-flags:--cfg foo\n-\n-#![cfg_attr(foo, unstable(feature = \"unstable_test_feature\", issue = \"none\"))]\n-#![cfg_attr(not(foo), stable(feature = \"test_feature\", since = \"1.0.0\"))]\n-#![feature(staged_api)]"}, {"sha": "7a698cf76ae517b01dc5234aca067045017dbca0", "filename": "src/test/ui/auxiliary/weak-lang-items.rs", "status": "removed", "additions": 0, "deletions": 22, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/b3e46a9763d86a1681ddaaf0e60ce537302b9c92/src%2Ftest%2Fui%2Fauxiliary%2Fweak-lang-items.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b3e46a9763d86a1681ddaaf0e60ce537302b9c92/src%2Ftest%2Fui%2Fauxiliary%2Fweak-lang-items.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fauxiliary%2Fweak-lang-items.rs?ref=b3e46a9763d86a1681ddaaf0e60ce537302b9c92", "patch": "@@ -1,22 +0,0 @@\n-// no-prefer-dynamic\n-\n-// This aux-file will require the eh_personality function to be codegen'd, but\n-// it hasn't been defined just yet. Make sure we don't explode.\n-\n-#![no_std]\n-#![crate_type = \"rlib\"]\n-\n-struct A;\n-\n-impl core::ops::Drop for A {\n-    fn drop(&mut self) {}\n-}\n-\n-pub fn foo() {\n-    let _a = A;\n-    panic!(\"wut\");\n-}\n-\n-mod std {\n-    pub use core::{option, fmt};\n-}"}, {"sha": "dceec7e3ec151e0e7f5839c022b93f65049e9bfe", "filename": "src/test/ui/cross-crate/auxiliary/anon_trait_static_method_lib.rs", "status": "removed", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/b3e46a9763d86a1681ddaaf0e60ce537302b9c92/src%2Ftest%2Fui%2Fcross-crate%2Fauxiliary%2Fanon_trait_static_method_lib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b3e46a9763d86a1681ddaaf0e60ce537302b9c92/src%2Ftest%2Fui%2Fcross-crate%2Fauxiliary%2Fanon_trait_static_method_lib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcross-crate%2Fauxiliary%2Fanon_trait_static_method_lib.rs?ref=b3e46a9763d86a1681ddaaf0e60ce537302b9c92", "patch": "@@ -1,9 +0,0 @@\n-pub struct Foo {\n-    pub x: isize\n-}\n-\n-impl Foo {\n-    pub fn new() -> Foo {\n-        Foo { x: 3 }\n-    }\n-}"}, {"sha": "9d1e0742e3c9e6f7bdf25d98236d6371682934e3", "filename": "src/test/ui/cross-crate/auxiliary/newtype_struct_xc.rs", "status": "removed", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/b3e46a9763d86a1681ddaaf0e60ce537302b9c92/src%2Ftest%2Fui%2Fcross-crate%2Fauxiliary%2Fnewtype_struct_xc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b3e46a9763d86a1681ddaaf0e60ce537302b9c92/src%2Ftest%2Fui%2Fcross-crate%2Fauxiliary%2Fnewtype_struct_xc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcross-crate%2Fauxiliary%2Fnewtype_struct_xc.rs?ref=b3e46a9763d86a1681ddaaf0e60ce537302b9c92", "patch": "@@ -1,3 +0,0 @@\n-#![crate_type=\"lib\"]\n-\n-pub struct Au(pub isize);"}, {"sha": "69ed498e7e1cdccd659113b368c94bd239648d81", "filename": "src/test/ui/cross-crate/auxiliary/xcrate_unit_struct.rs", "status": "removed", "additions": 0, "deletions": 28, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/b3e46a9763d86a1681ddaaf0e60ce537302b9c92/src%2Ftest%2Fui%2Fcross-crate%2Fauxiliary%2Fxcrate_unit_struct.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b3e46a9763d86a1681ddaaf0e60ce537302b9c92/src%2Ftest%2Fui%2Fcross-crate%2Fauxiliary%2Fxcrate_unit_struct.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcross-crate%2Fauxiliary%2Fxcrate_unit_struct.rs?ref=b3e46a9763d86a1681ddaaf0e60ce537302b9c92", "patch": "@@ -1,28 +0,0 @@\n-#![crate_type = \"lib\"]\n-\n-// used by the rpass test\n-\n-#[derive(Copy, Clone)]\n-pub struct Struct;\n-\n-#[derive(Copy, Clone)]\n-pub enum Unit {\n-    UnitVariant,\n-    Argument(Struct)\n-}\n-\n-#[derive(Copy, Clone)]\n-pub struct TupleStruct(pub usize, pub &'static str);\n-\n-// used by the cfail test\n-\n-#[derive(Copy, Clone)]\n-pub struct StructWithFields {\n-    foo: isize,\n-}\n-\n-#[derive(Copy, Clone)]\n-pub enum EnumWithVariants {\n-    EnumVariant,\n-    EnumVariantArg(isize)\n-}"}, {"sha": "fd678a717d0493241c4a459f673264b32fc2d94a", "filename": "src/test/ui/empty/issue-37026.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/6947a772dd80161a5b1fd3be9c5aeee37f26a83e/src%2Ftest%2Fui%2Fempty%2Fissue-37026.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6947a772dd80161a5b1fd3be9c5aeee37f26a83e/src%2Ftest%2Fui%2Fempty%2Fissue-37026.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fempty%2Fissue-37026.rs?ref=6947a772dd80161a5b1fd3be9c5aeee37f26a83e", "previous_filename": "src/test/ui/issues/issue-37026.rs"}, {"sha": "48a4a5bcad2b57365524fa37a430db1b3d14c445", "filename": "src/test/ui/empty/issue-37026.stderr", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/6947a772dd80161a5b1fd3be9c5aeee37f26a83e/src%2Ftest%2Fui%2Fempty%2Fissue-37026.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6947a772dd80161a5b1fd3be9c5aeee37f26a83e/src%2Ftest%2Fui%2Fempty%2Fissue-37026.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fempty%2Fissue-37026.stderr?ref=6947a772dd80161a5b1fd3be9c5aeee37f26a83e", "previous_filename": "src/test/ui/issues/issue-37026.stderr"}, {"sha": "c80e61b451116b7e45cd140bb377aec86fc9470e", "filename": "src/test/ui/empty/no-link.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/6947a772dd80161a5b1fd3be9c5aeee37f26a83e/src%2Ftest%2Fui%2Fempty%2Fno-link.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6947a772dd80161a5b1fd3be9c5aeee37f26a83e/src%2Ftest%2Fui%2Fempty%2Fno-link.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fempty%2Fno-link.rs?ref=6947a772dd80161a5b1fd3be9c5aeee37f26a83e", "previous_filename": "src/test/ui/no-link.rs"}, {"sha": "3fb40f6bfa96004068358d5a4e8815078a488bf9", "filename": "src/test/ui/issues/auxiliary/empty-struct.rs", "status": "removed", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/b3e46a9763d86a1681ddaaf0e60ce537302b9c92/src%2Ftest%2Fui%2Fissues%2Fauxiliary%2Fempty-struct.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b3e46a9763d86a1681ddaaf0e60ce537302b9c92/src%2Ftest%2Fui%2Fissues%2Fauxiliary%2Fempty-struct.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fauxiliary%2Fempty-struct.rs?ref=b3e46a9763d86a1681ddaaf0e60ce537302b9c92", "patch": "@@ -1,9 +0,0 @@\n-pub struct XEmpty1 {}\n-pub struct XEmpty2;\n-pub struct XEmpty6();\n-\n-pub enum XE {\n-    XEmpty3 {},\n-    XEmpty4,\n-    XEmpty5(),\n-}"}, {"sha": "d634b8bf80079ce8f885c5ffea40b9455f52847e", "filename": "src/test/ui/issues/issue-51244.rs", "status": "removed", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/b3e46a9763d86a1681ddaaf0e60ce537302b9c92/src%2Ftest%2Fui%2Fissues%2Fissue-51244.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b3e46a9763d86a1681ddaaf0e60ce537302b9c92/src%2Ftest%2Fui%2Fissues%2Fissue-51244.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-51244.rs?ref=b3e46a9763d86a1681ddaaf0e60ce537302b9c92", "patch": "@@ -1,4 +0,0 @@\n-fn main() {\n-    let ref my_ref @ _ = 0;\n-    *my_ref = 0; //~ ERROR cannot assign to `*my_ref`, which is behind a `&` reference [E0594]\n-}"}, {"sha": "19f0223a357a53e1fee7727c77516654b4e3a158", "filename": "src/test/ui/issues/issue-51244.stderr", "status": "removed", "additions": 0, "deletions": 11, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/b3e46a9763d86a1681ddaaf0e60ce537302b9c92/src%2Ftest%2Fui%2Fissues%2Fissue-51244.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b3e46a9763d86a1681ddaaf0e60ce537302b9c92/src%2Ftest%2Fui%2Fissues%2Fissue-51244.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-51244.stderr?ref=b3e46a9763d86a1681ddaaf0e60ce537302b9c92", "patch": "@@ -1,11 +0,0 @@\n-error[E0594]: cannot assign to `*my_ref`, which is behind a `&` reference\n-  --> $DIR/issue-51244.rs:3:5\n-   |\n-LL |     let ref my_ref @ _ = 0;\n-   |         -------------- help: consider changing this to be a mutable reference: `ref mut my_ref @ _`\n-LL |     *my_ref = 0;\n-   |     ^^^^^^^^^^^ `my_ref` is a `&` reference, so the data it refers to cannot be written\n-\n-error: aborting due to previous error\n-\n-For more information about this error, try `rustc --explain E0594`."}, {"sha": "a429d8fabc72b0741db06316400ce1d92b2502f2", "filename": "src/test/ui/panic-handler/weak-lang-item-2.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/6947a772dd80161a5b1fd3be9c5aeee37f26a83e/src%2Ftest%2Fui%2Fpanic-handler%2Fweak-lang-item-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6947a772dd80161a5b1fd3be9c5aeee37f26a83e/src%2Ftest%2Fui%2Fpanic-handler%2Fweak-lang-item-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fpanic-handler%2Fweak-lang-item-2.rs?ref=6947a772dd80161a5b1fd3be9c5aeee37f26a83e", "previous_filename": "src/test/ui/weak-lang-item.rs"}, {"sha": "8b491ee4e303fc6f85172b35ac33cb45f80d0642", "filename": "src/test/ui/regions/regions-enum-not-wf.rs", "status": "removed", "additions": 0, "deletions": 39, "changes": 39, "blob_url": "https://github.com/rust-lang/rust/blob/b3e46a9763d86a1681ddaaf0e60ce537302b9c92/src%2Ftest%2Fui%2Fregions%2Fregions-enum-not-wf.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b3e46a9763d86a1681ddaaf0e60ce537302b9c92/src%2Ftest%2Fui%2Fregions%2Fregions-enum-not-wf.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fregions%2Fregions-enum-not-wf.rs?ref=b3e46a9763d86a1681ddaaf0e60ce537302b9c92", "patch": "@@ -1,39 +0,0 @@\n-// Various examples of structs whose fields are not well-formed.\n-\n-#![allow(dead_code)]\n-\n-trait Dummy<'a> {\n-    type Out;\n-}\n-impl<'a, T> Dummy<'a> for T\n-where\n-    T: 'a,\n-{\n-    type Out = ();\n-}\n-type RequireOutlives<'a, T> = <T as Dummy<'a>>::Out;\n-\n-enum Ref1<'a, T> {\n-    Ref1Variant1(RequireOutlives<'a, T>), //~ ERROR the parameter type `T` may not live long enough\n-}\n-\n-enum Ref2<'a, T> {\n-    Ref2Variant1,\n-    Ref2Variant2(isize, RequireOutlives<'a, T>), //~ ERROR the parameter type `T` may not live long enough\n-}\n-\n-enum RefOk<'a, T: 'a> {\n-    RefOkVariant1(&'a T),\n-}\n-\n-// This is now well formed. RFC 2093\n-enum RefIndirect<'a, T> {\n-    RefIndirectVariant1(isize, RefOk<'a, T>),\n-}\n-\n-enum RefDouble<'a, 'b, T> {\n-    RefDoubleVariant1(&'a RequireOutlives<'b, T>),\n-    //~^ the parameter type `T` may not live long enough [E0309]\n-}\n-\n-fn main() {}"}, {"sha": "553a3e71c169a093b8635f2b1b83625298551517", "filename": "src/test/ui/regions/regions-enum-not-wf.stderr", "status": "removed", "additions": 0, "deletions": 28, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/b3e46a9763d86a1681ddaaf0e60ce537302b9c92/src%2Ftest%2Fui%2Fregions%2Fregions-enum-not-wf.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b3e46a9763d86a1681ddaaf0e60ce537302b9c92/src%2Ftest%2Fui%2Fregions%2Fregions-enum-not-wf.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fregions%2Fregions-enum-not-wf.stderr?ref=b3e46a9763d86a1681ddaaf0e60ce537302b9c92", "patch": "@@ -1,28 +0,0 @@\n-error[E0309]: the parameter type `T` may not live long enough\n-  --> $DIR/regions-enum-not-wf.rs:17:18\n-   |\n-LL | enum Ref1<'a, T> {\n-   |               - help: consider adding an explicit lifetime bound...: `T: 'a`\n-LL |     Ref1Variant1(RequireOutlives<'a, T>),\n-   |                  ^^^^^^^^^^^^^^^^^^^^^^ ...so that the type `T` will meet its required lifetime bounds\n-\n-error[E0309]: the parameter type `T` may not live long enough\n-  --> $DIR/regions-enum-not-wf.rs:22:25\n-   |\n-LL | enum Ref2<'a, T> {\n-   |               - help: consider adding an explicit lifetime bound...: `T: 'a`\n-LL |     Ref2Variant1,\n-LL |     Ref2Variant2(isize, RequireOutlives<'a, T>),\n-   |                         ^^^^^^^^^^^^^^^^^^^^^^ ...so that the type `T` will meet its required lifetime bounds\n-\n-error[E0309]: the parameter type `T` may not live long enough\n-  --> $DIR/regions-enum-not-wf.rs:35:23\n-   |\n-LL | enum RefDouble<'a, 'b, T> {\n-   |                        - help: consider adding an explicit lifetime bound...: `T: 'b`\n-LL |     RefDoubleVariant1(&'a RequireOutlives<'b, T>),\n-   |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^ ...so that the type `T` will meet its required lifetime bounds\n-\n-error: aborting due to 3 previous errors\n-\n-For more information about this error, try `rustc --explain E0309`."}, {"sha": "83f941f65b9884ffaec7fe2af4e545bda0ae23f9", "filename": "src/test/ui/span/E0057.rs", "status": "removed", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/b3e46a9763d86a1681ddaaf0e60ce537302b9c92/src%2Ftest%2Fui%2Fspan%2FE0057.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b3e46a9763d86a1681ddaaf0e60ce537302b9c92/src%2Ftest%2Fui%2Fspan%2FE0057.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fspan%2FE0057.rs?ref=b3e46a9763d86a1681ddaaf0e60ce537302b9c92", "patch": "@@ -1,6 +0,0 @@\n-fn main() {\n-    let f = |x| x * 3;\n-    let a = f(); //~ ERROR E0057\n-    let b = f(4);\n-    let c = f(2, 3); //~ ERROR E0057\n-}"}, {"sha": "31579e282896402d067d47b61d507c0921f252ae", "filename": "src/test/ui/span/E0057.stderr", "status": "removed", "additions": 0, "deletions": 19, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/b3e46a9763d86a1681ddaaf0e60ce537302b9c92/src%2Ftest%2Fui%2Fspan%2FE0057.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b3e46a9763d86a1681ddaaf0e60ce537302b9c92/src%2Ftest%2Fui%2Fspan%2FE0057.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fspan%2FE0057.stderr?ref=b3e46a9763d86a1681ddaaf0e60ce537302b9c92", "patch": "@@ -1,19 +0,0 @@\n-error[E0057]: this function takes 1 argument but 0 arguments were supplied\n-  --> $DIR/E0057.rs:3:13\n-   |\n-LL |     let a = f();\n-   |             ^-- supplied 0 arguments\n-   |             |\n-   |             expected 1 argument\n-\n-error[E0057]: this function takes 1 argument but 2 arguments were supplied\n-  --> $DIR/E0057.rs:5:13\n-   |\n-LL |     let c = f(2, 3);\n-   |             ^ -  - supplied 2 arguments\n-   |             |\n-   |             expected 1 argument\n-\n-error: aborting due to 2 previous errors\n-\n-For more information about this error, try `rustc --explain E0057`."}, {"sha": "eabffc16170cac1eb8a402199484b9e399963ecd", "filename": "src/test/ui/structs-enums/cross-crate-newtype-struct-pat.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/6947a772dd80161a5b1fd3be9c5aeee37f26a83e/src%2Ftest%2Fui%2Fstructs-enums%2Fcross-crate-newtype-struct-pat.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6947a772dd80161a5b1fd3be9c5aeee37f26a83e/src%2Ftest%2Fui%2Fstructs-enums%2Fcross-crate-newtype-struct-pat.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fstructs-enums%2Fcross-crate-newtype-struct-pat.rs?ref=6947a772dd80161a5b1fd3be9c5aeee37f26a83e", "previous_filename": "src/test/ui/cross-crate/cross-crate-newtype-struct-pat.rs"}, {"sha": "8267a82fe2aea980b0ba24eb87ab451ab1a21429", "filename": "src/test/ui/structs/suggest-private-fields.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/6947a772dd80161a5b1fd3be9c5aeee37f26a83e/src%2Ftest%2Fui%2Fstructs%2Fsuggest-private-fields.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6947a772dd80161a5b1fd3be9c5aeee37f26a83e/src%2Ftest%2Fui%2Fstructs%2Fsuggest-private-fields.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fstructs%2Fsuggest-private-fields.rs?ref=6947a772dd80161a5b1fd3be9c5aeee37f26a83e", "previous_filename": "src/test/ui/suggestions/suggest-private-fields.rs"}, {"sha": "d628bd16208339b37a1bc357c87bf93f40a01d83", "filename": "src/test/ui/structs/suggest-private-fields.stderr", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/6947a772dd80161a5b1fd3be9c5aeee37f26a83e/src%2Ftest%2Fui%2Fstructs%2Fsuggest-private-fields.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6947a772dd80161a5b1fd3be9c5aeee37f26a83e/src%2Ftest%2Fui%2Fstructs%2Fsuggest-private-fields.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fstructs%2Fsuggest-private-fields.stderr?ref=6947a772dd80161a5b1fd3be9c5aeee37f26a83e", "previous_filename": "src/test/ui/suggestions/suggest-private-fields.stderr"}, {"sha": "9765af1a7f652ac5e2bce5d4bcad7fb7b06b56c7", "filename": "src/test/ui/suggestions/auxiliary/struct_field_privacy.rs", "status": "removed", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/b3e46a9763d86a1681ddaaf0e60ce537302b9c92/src%2Ftest%2Fui%2Fsuggestions%2Fauxiliary%2Fstruct_field_privacy.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b3e46a9763d86a1681ddaaf0e60ce537302b9c92/src%2Ftest%2Fui%2Fsuggestions%2Fauxiliary%2Fstruct_field_privacy.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Fauxiliary%2Fstruct_field_privacy.rs?ref=b3e46a9763d86a1681ddaaf0e60ce537302b9c92", "patch": "@@ -1,9 +0,0 @@\n-pub struct A {\n-    a: isize,\n-    pub b: isize,\n-}\n-\n-pub struct B {\n-    pub a: isize,\n-    b: isize,\n-}"}, {"sha": "7aa3eb0d6c44af68eddbeeceb2b659c5fcc200b4", "filename": "src/test/ui/xcrate/xcrate-unit-struct-2.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/6947a772dd80161a5b1fd3be9c5aeee37f26a83e/src%2Ftest%2Fui%2Fxcrate%2Fxcrate-unit-struct-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6947a772dd80161a5b1fd3be9c5aeee37f26a83e/src%2Ftest%2Fui%2Fxcrate%2Fxcrate-unit-struct-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fxcrate%2Fxcrate-unit-struct-2.rs?ref=6947a772dd80161a5b1fd3be9c5aeee37f26a83e", "previous_filename": "src/test/ui/cross-crate/xcrate-unit-struct.rs"}]}