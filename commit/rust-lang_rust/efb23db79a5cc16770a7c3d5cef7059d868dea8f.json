{"sha": "efb23db79a5cc16770a7c3d5cef7059d868dea8f", "node_id": "MDY6Q29tbWl0NzI0NzEyOmVmYjIzZGI3OWE1Y2MxNjc3MGE3YzNkNWNlZjcwNTlkODY4ZGVhOGY=", "commit": {"author": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2016-02-09T23:13:33Z"}, "committer": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2016-02-10T17:28:49Z"}, "message": "std: Use macros from libc instead of locally\n\nHelps cut down on #[cfg]!", "tree": {"sha": "bd3281d7d1082d6b39defcfc24c875e7624cb09b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bd3281d7d1082d6b39defcfc24c875e7624cb09b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/efb23db79a5cc16770a7c3d5cef7059d868dea8f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/efb23db79a5cc16770a7c3d5cef7059d868dea8f", "html_url": "https://github.com/rust-lang/rust/commit/efb23db79a5cc16770a7c3d5cef7059d868dea8f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/efb23db79a5cc16770a7c3d5cef7059d868dea8f/comments", "author": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b37477c03e7683cc67273ddc5506496a7b03971c", "url": "https://api.github.com/repos/rust-lang/rust/commits/b37477c03e7683cc67273ddc5506496a7b03971c", "html_url": "https://github.com/rust-lang/rust/commit/b37477c03e7683cc67273ddc5506496a7b03971c"}], "stats": {"total": 27, "additions": 3, "deletions": 24}, "files": [{"sha": "9e12b2f116cc397ed612bfd689f2cfebd74148d7", "filename": "src/libstd/sys/unix/process.rs", "status": "modified", "additions": 3, "deletions": 24, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/efb23db79a5cc16770a7c3d5cef7059d868dea8f/src%2Flibstd%2Fsys%2Funix%2Fprocess.rs", "raw_url": "https://github.com/rust-lang/rust/raw/efb23db79a5cc16770a7c3d5cef7059d868dea8f/src%2Flibstd%2Fsys%2Funix%2Fprocess.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Funix%2Fprocess.rs?ref=efb23db79a5cc16770a7c3d5cef7059d868dea8f", "patch": "@@ -519,30 +519,9 @@ impl fmt::Debug for Command {\n #[derive(PartialEq, Eq, Clone, Copy, Debug)]\n pub struct ExitStatus(c_int);\n \n-#[cfg(any(target_os = \"linux\", target_os = \"android\",\n-          target_os = \"nacl\"))]\n-mod status_imp {\n-    pub fn WIFEXITED(status: i32) -> bool { (status & 0xff) == 0 }\n-    pub fn WEXITSTATUS(status: i32) -> i32 { (status >> 8) & 0xff }\n-    pub fn WTERMSIG(status: i32) -> i32 { status & 0x7f }\n-}\n-\n-#[cfg(any(target_os = \"macos\",\n-          target_os = \"ios\",\n-          target_os = \"freebsd\",\n-          target_os = \"dragonfly\",\n-          target_os = \"bitrig\",\n-          target_os = \"netbsd\",\n-          target_os = \"openbsd\"))]\n-mod status_imp {\n-    pub fn WIFEXITED(status: i32) -> bool { (status & 0x7f) == 0 }\n-    pub fn WEXITSTATUS(status: i32) -> i32 { status >> 8 }\n-    pub fn WTERMSIG(status: i32) -> i32 { status & 0o177 }\n-}\n-\n impl ExitStatus {\n     fn exited(&self) -> bool {\n-        status_imp::WIFEXITED(self.0)\n+        unsafe { libc::WIFEXITED(self.0) }\n     }\n \n     pub fn success(&self) -> bool {\n@@ -551,15 +530,15 @@ impl ExitStatus {\n \n     pub fn code(&self) -> Option<i32> {\n         if self.exited() {\n-            Some(status_imp::WEXITSTATUS(self.0))\n+            Some(unsafe { libc::WEXITSTATUS(self.0) })\n         } else {\n             None\n         }\n     }\n \n     pub fn signal(&self) -> Option<i32> {\n         if !self.exited() {\n-            Some(status_imp::WTERMSIG(self.0))\n+            Some(unsafe { libc::WTERMSIG(self.0) })\n         } else {\n             None\n         }"}]}