{"sha": "6054a30370209472f2af45d2a84a9a9796b3c64a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjYwNTRhMzAzNzAyMDk0NzJmMmFmNDVkMmE4NGE5YTk3OTZiM2M2NGE=", "commit": {"author": {"name": "Vadim Petrochenkov", "email": "vadim.petrochenkov@gmail.com", "date": "2020-02-29T17:16:26Z"}, "committer": {"name": "Vadim Petrochenkov", "email": "vadim.petrochenkov@gmail.com", "date": "2020-02-29T17:47:10Z"}, "message": "Make it build again", "tree": {"sha": "d787f1b56fda6d4c9d347861335c3bccc76ca115", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d787f1b56fda6d4c9d347861335c3bccc76ca115"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6054a30370209472f2af45d2a84a9a9796b3c64a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6054a30370209472f2af45d2a84a9a9796b3c64a", "html_url": "https://github.com/rust-lang/rust/commit/6054a30370209472f2af45d2a84a9a9796b3c64a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6054a30370209472f2af45d2a84a9a9796b3c64a/comments", "author": {"login": "petrochenkov", "id": 5751617, "node_id": "MDQ6VXNlcjU3NTE2MTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5751617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrochenkov", "html_url": "https://github.com/petrochenkov", "followers_url": "https://api.github.com/users/petrochenkov/followers", "following_url": "https://api.github.com/users/petrochenkov/following{/other_user}", "gists_url": "https://api.github.com/users/petrochenkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrochenkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrochenkov/subscriptions", "organizations_url": "https://api.github.com/users/petrochenkov/orgs", "repos_url": "https://api.github.com/users/petrochenkov/repos", "events_url": "https://api.github.com/users/petrochenkov/events{/privacy}", "received_events_url": "https://api.github.com/users/petrochenkov/received_events", "type": "User", "site_admin": false}, "committer": {"login": "petrochenkov", "id": 5751617, "node_id": "MDQ6VXNlcjU3NTE2MTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5751617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrochenkov", "html_url": "https://github.com/petrochenkov", "followers_url": "https://api.github.com/users/petrochenkov/followers", "following_url": "https://api.github.com/users/petrochenkov/following{/other_user}", "gists_url": "https://api.github.com/users/petrochenkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrochenkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrochenkov/subscriptions", "organizations_url": "https://api.github.com/users/petrochenkov/orgs", "repos_url": "https://api.github.com/users/petrochenkov/repos", "events_url": "https://api.github.com/users/petrochenkov/events{/privacy}", "received_events_url": "https://api.github.com/users/petrochenkov/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e94d3b70cb495df83230cff9ef5bb00f235883e4", "url": "https://api.github.com/repos/rust-lang/rust/commits/e94d3b70cb495df83230cff9ef5bb00f235883e4", "html_url": "https://github.com/rust-lang/rust/commit/e94d3b70cb495df83230cff9ef5bb00f235883e4"}], "stats": {"total": 202, "additions": 101, "deletions": 101}, "files": [{"sha": "f639095fae75984792f72b3540d1e127eabe740c", "filename": "Cargo.lock", "status": "modified", "additions": 43, "deletions": 43, "changes": 86, "blob_url": "https://github.com/rust-lang/rust/blob/6054a30370209472f2af45d2a84a9a9796b3c64a/Cargo.lock", "raw_url": "https://github.com/rust-lang/rust/raw/6054a30370209472f2af45d2a84a9a9796b3c64a/Cargo.lock", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Cargo.lock?ref=6054a30370209472f2af45d2a84a9a9796b3c64a", "patch": "@@ -3119,6 +3119,7 @@ dependencies = [\n  \"rustc-rayon\",\n  \"rustc-rayon-core\",\n  \"rustc_apfloat\",\n+ \"rustc_ast\",\n  \"rustc_attr\",\n  \"rustc_data_structures\",\n  \"rustc_errors\",\n@@ -3132,7 +3133,6 @@ dependencies = [\n  \"scoped-tls\",\n  \"serialize\",\n  \"smallvec 1.0.0\",\n- \"syntax\",\n ]\n \n [[package]]\n@@ -3469,12 +3469,28 @@ dependencies = [\n  \"smallvec 1.0.0\",\n ]\n \n+[[package]]\n+name = \"rustc_ast\"\n+version = \"0.0.0\"\n+dependencies = [\n+ \"log\",\n+ \"rustc_data_structures\",\n+ \"rustc_index\",\n+ \"rustc_lexer\",\n+ \"rustc_macros\",\n+ \"rustc_span\",\n+ \"scoped-tls\",\n+ \"serialize\",\n+ \"smallvec 1.0.0\",\n+]\n+\n [[package]]\n name = \"rustc_ast_lowering\"\n version = \"0.0.0\"\n dependencies = [\n  \"log\",\n  \"rustc\",\n+ \"rustc_ast\",\n  \"rustc_ast_pretty\",\n  \"rustc_data_structures\",\n  \"rustc_errors\",\n@@ -3484,14 +3500,14 @@ dependencies = [\n  \"rustc_span\",\n  \"rustc_target\",\n  \"smallvec 1.0.0\",\n- \"syntax\",\n ]\n \n [[package]]\n name = \"rustc_ast_passes\"\n version = \"0.0.0\"\n dependencies = [\n  \"log\",\n+ \"rustc_ast\",\n  \"rustc_ast_pretty\",\n  \"rustc_attr\",\n  \"rustc_data_structures\",\n@@ -3500,23 +3516,23 @@ dependencies = [\n  \"rustc_parse\",\n  \"rustc_session\",\n  \"rustc_span\",\n- \"syntax\",\n ]\n \n [[package]]\n name = \"rustc_ast_pretty\"\n version = \"0.0.0\"\n dependencies = [\n  \"log\",\n+ \"rustc_ast\",\n  \"rustc_data_structures\",\n  \"rustc_span\",\n- \"syntax\",\n ]\n \n [[package]]\n name = \"rustc_attr\"\n version = \"0.0.0\"\n dependencies = [\n+ \"rustc_ast\",\n  \"rustc_ast_pretty\",\n  \"rustc_data_structures\",\n  \"rustc_errors\",\n@@ -3526,7 +3542,6 @@ dependencies = [\n  \"rustc_span\",\n  \"serialize\",\n  \"smallvec 1.0.0\",\n- \"syntax\",\n ]\n \n [[package]]\n@@ -3535,6 +3550,7 @@ version = \"0.0.0\"\n dependencies = [\n  \"fmt_macros\",\n  \"log\",\n+ \"rustc_ast\",\n  \"rustc_ast_pretty\",\n  \"rustc_attr\",\n  \"rustc_data_structures\",\n@@ -3546,7 +3562,6 @@ dependencies = [\n  \"rustc_span\",\n  \"rustc_target\",\n  \"smallvec 1.0.0\",\n- \"syntax\",\n ]\n \n [[package]]\n@@ -3560,6 +3575,7 @@ dependencies = [\n  \"measureme\",\n  \"rustc\",\n  \"rustc-demangle\",\n+ \"rustc_ast\",\n  \"rustc_attr\",\n  \"rustc_codegen_ssa\",\n  \"rustc_codegen_utils\",\n@@ -3576,7 +3592,6 @@ dependencies = [\n  \"rustc_target\",\n  \"serialize\",\n  \"smallvec 1.0.0\",\n- \"syntax\",\n ]\n \n [[package]]\n@@ -3592,6 +3607,7 @@ dependencies = [\n  \"num_cpus\",\n  \"rustc\",\n  \"rustc_apfloat\",\n+ \"rustc_ast\",\n  \"rustc_attr\",\n  \"rustc_codegen_utils\",\n  \"rustc_data_structures\",\n@@ -3604,7 +3620,6 @@ dependencies = [\n  \"rustc_span\",\n  \"rustc_target\",\n  \"serialize\",\n- \"syntax\",\n  \"tempfile\",\n ]\n \n@@ -3616,12 +3631,12 @@ dependencies = [\n  \"punycode\",\n  \"rustc\",\n  \"rustc-demangle\",\n+ \"rustc_ast\",\n  \"rustc_data_structures\",\n  \"rustc_hir\",\n  \"rustc_metadata\",\n  \"rustc_span\",\n  \"rustc_target\",\n- \"syntax\",\n ]\n \n [[package]]\n@@ -3657,6 +3672,7 @@ dependencies = [\n  \"lazy_static 1.4.0\",\n  \"log\",\n  \"rustc\",\n+ \"rustc_ast\",\n  \"rustc_ast_pretty\",\n  \"rustc_codegen_ssa\",\n  \"rustc_codegen_utils\",\n@@ -3675,7 +3691,6 @@ dependencies = [\n  \"rustc_span\",\n  \"rustc_target\",\n  \"serialize\",\n- \"syntax\",\n  \"winapi 0.3.8\",\n ]\n \n@@ -3704,6 +3719,7 @@ name = \"rustc_expand\"\n version = \"0.0.0\"\n dependencies = [\n  \"log\",\n+ \"rustc_ast\",\n  \"rustc_ast_passes\",\n  \"rustc_ast_pretty\",\n  \"rustc_attr\",\n@@ -3716,7 +3732,6 @@ dependencies = [\n  \"rustc_span\",\n  \"serialize\",\n  \"smallvec 1.0.0\",\n- \"syntax\",\n ]\n \n [[package]]\n@@ -3737,6 +3752,7 @@ name = \"rustc_hir\"\n version = \"0.0.0\"\n dependencies = [\n  \"lazy_static 1.4.0\",\n+ \"rustc_ast\",\n  \"rustc_ast_pretty\",\n  \"rustc_data_structures\",\n  \"rustc_errors\",\n@@ -3746,7 +3762,6 @@ dependencies = [\n  \"rustc_target\",\n  \"serialize\",\n  \"smallvec 1.0.0\",\n- \"syntax\",\n ]\n \n [[package]]\n@@ -3757,13 +3772,13 @@ dependencies = [\n  \"log\",\n  \"rand 0.7.3\",\n  \"rustc\",\n+ \"rustc_ast\",\n  \"rustc_data_structures\",\n  \"rustc_fs_util\",\n  \"rustc_hir\",\n  \"rustc_session\",\n  \"rustc_span\",\n  \"serialize\",\n- \"syntax\",\n ]\n \n [[package]]\n@@ -3782,6 +3797,7 @@ dependencies = [\n  \"graphviz\",\n  \"log\",\n  \"rustc\",\n+ \"rustc_ast\",\n  \"rustc_attr\",\n  \"rustc_data_structures\",\n  \"rustc_error_codes\",\n@@ -3793,7 +3809,6 @@ dependencies = [\n  \"rustc_span\",\n  \"rustc_target\",\n  \"smallvec 1.0.0\",\n- \"syntax\",\n ]\n \n [[package]]\n@@ -3804,6 +3819,7 @@ dependencies = [\n  \"once_cell\",\n  \"rustc\",\n  \"rustc-rayon\",\n+ \"rustc_ast\",\n  \"rustc_ast_lowering\",\n  \"rustc_ast_passes\",\n  \"rustc_attr\",\n@@ -3834,7 +3850,6 @@ dependencies = [\n  \"rustc_typeck\",\n  \"serialize\",\n  \"smallvec 1.0.0\",\n- \"syntax\",\n  \"tempfile\",\n  \"winapi 0.3.8\",\n ]\n@@ -3852,6 +3867,7 @@ version = \"0.0.0\"\n dependencies = [\n  \"log\",\n  \"rustc\",\n+ \"rustc_ast\",\n  \"rustc_ast_pretty\",\n  \"rustc_attr\",\n  \"rustc_data_structures\",\n@@ -3863,7 +3879,6 @@ dependencies = [\n  \"rustc_session\",\n  \"rustc_span\",\n  \"rustc_target\",\n- \"syntax\",\n  \"unicode-security\",\n ]\n \n@@ -3894,6 +3909,7 @@ dependencies = [\n  \"log\",\n  \"memmap\",\n  \"rustc\",\n+ \"rustc_ast\",\n  \"rustc_ast_pretty\",\n  \"rustc_attr\",\n  \"rustc_data_structures\",\n@@ -3907,7 +3923,6 @@ dependencies = [\n  \"serialize\",\n  \"smallvec 1.0.0\",\n  \"stable_deref_trait\",\n- \"syntax\",\n  \"winapi 0.3.8\",\n ]\n \n@@ -3923,6 +3938,7 @@ dependencies = [\n  \"polonius-engine\",\n  \"rustc\",\n  \"rustc_apfloat\",\n+ \"rustc_ast\",\n  \"rustc_ast_pretty\",\n  \"rustc_attr\",\n  \"rustc_data_structures\",\n@@ -3936,7 +3952,6 @@ dependencies = [\n  \"rustc_target\",\n  \"serialize\",\n  \"smallvec 1.0.0\",\n- \"syntax\",\n ]\n \n [[package]]\n@@ -3947,6 +3962,7 @@ dependencies = [\n  \"log\",\n  \"rustc\",\n  \"rustc_apfloat\",\n+ \"rustc_ast\",\n  \"rustc_attr\",\n  \"rustc_data_structures\",\n  \"rustc_errors\",\n@@ -3959,7 +3975,6 @@ dependencies = [\n  \"rustc_target\",\n  \"serialize\",\n  \"smallvec 1.0.0\",\n- \"syntax\",\n ]\n \n [[package]]\n@@ -3968,6 +3983,7 @@ version = \"0.0.0\"\n dependencies = [\n  \"bitflags\",\n  \"log\",\n+ \"rustc_ast\",\n  \"rustc_ast_pretty\",\n  \"rustc_attr\",\n  \"rustc_data_structures\",\n@@ -3977,7 +3993,6 @@ dependencies = [\n  \"rustc_session\",\n  \"rustc_span\",\n  \"smallvec 1.0.0\",\n- \"syntax\",\n  \"unicode-normalization\",\n ]\n \n@@ -3987,6 +4002,7 @@ version = \"0.0.0\"\n dependencies = [\n  \"log\",\n  \"rustc\",\n+ \"rustc_ast\",\n  \"rustc_attr\",\n  \"rustc_data_structures\",\n  \"rustc_errors\",\n@@ -3997,20 +4013,19 @@ dependencies = [\n  \"rustc_session\",\n  \"rustc_span\",\n  \"rustc_target\",\n- \"syntax\",\n ]\n \n [[package]]\n name = \"rustc_plugin_impl\"\n version = \"0.0.0\"\n dependencies = [\n  \"rustc\",\n+ \"rustc_ast\",\n  \"rustc_errors\",\n  \"rustc_hir\",\n  \"rustc_lint\",\n  \"rustc_metadata\",\n  \"rustc_span\",\n- \"syntax\",\n ]\n \n [[package]]\n@@ -4019,13 +4034,13 @@ version = \"0.0.0\"\n dependencies = [\n  \"log\",\n  \"rustc\",\n+ \"rustc_ast\",\n  \"rustc_attr\",\n  \"rustc_data_structures\",\n  \"rustc_errors\",\n  \"rustc_hir\",\n  \"rustc_span\",\n  \"rustc_typeck\",\n- \"syntax\",\n ]\n \n [[package]]\n@@ -4036,6 +4051,7 @@ dependencies = [\n  \"bitflags\",\n  \"log\",\n  \"rustc\",\n+ \"rustc_ast\",\n  \"rustc_ast_lowering\",\n  \"rustc_ast_pretty\",\n  \"rustc_attr\",\n@@ -4049,7 +4065,6 @@ dependencies = [\n  \"rustc_session\",\n  \"rustc_span\",\n  \"smallvec 1.0.0\",\n- \"syntax\",\n ]\n \n [[package]]\n@@ -4060,14 +4075,14 @@ dependencies = [\n  \"rls-data\",\n  \"rls-span\",\n  \"rustc\",\n+ \"rustc_ast\",\n  \"rustc_ast_pretty\",\n  \"rustc_codegen_utils\",\n  \"rustc_data_structures\",\n  \"rustc_hir\",\n  \"rustc_parse\",\n  \"rustc_span\",\n  \"serde_json\",\n- \"syntax\",\n ]\n \n [[package]]\n@@ -4076,6 +4091,7 @@ version = \"0.0.0\"\n dependencies = [\n  \"log\",\n  \"num_cpus\",\n+ \"rustc_ast\",\n  \"rustc_data_structures\",\n  \"rustc_errors\",\n  \"rustc_feature\",\n@@ -4084,7 +4100,6 @@ dependencies = [\n  \"rustc_span\",\n  \"rustc_target\",\n  \"serialize\",\n- \"syntax\",\n ]\n \n [[package]]\n@@ -4132,14 +4147,14 @@ dependencies = [\n  \"chalk-engine\",\n  \"log\",\n  \"rustc\",\n+ \"rustc_ast\",\n  \"rustc_data_structures\",\n  \"rustc_hir\",\n  \"rustc_infer\",\n  \"rustc_macros\",\n  \"rustc_span\",\n  \"rustc_target\",\n  \"smallvec 1.0.0\",\n- \"syntax\",\n ]\n \n [[package]]\n@@ -4162,6 +4177,7 @@ dependencies = [\n  \"arena\",\n  \"log\",\n  \"rustc\",\n+ \"rustc_ast\",\n  \"rustc_attr\",\n  \"rustc_data_structures\",\n  \"rustc_errors\",\n@@ -4171,7 +4187,6 @@ dependencies = [\n  \"rustc_span\",\n  \"rustc_target\",\n  \"smallvec 1.0.0\",\n- \"syntax\",\n ]\n \n [[package]]\n@@ -4683,21 +4698,6 @@ dependencies = [\n  \"unicode-xid 0.2.0\",\n ]\n \n-[[package]]\n-name = \"syntax\"\n-version = \"0.0.0\"\n-dependencies = [\n- \"log\",\n- \"rustc_data_structures\",\n- \"rustc_index\",\n- \"rustc_lexer\",\n- \"rustc_macros\",\n- \"rustc_span\",\n- \"scoped-tls\",\n- \"serialize\",\n- \"smallvec 1.0.0\",\n-]\n-\n [[package]]\n name = \"tar\"\n version = \"0.4.26\""}, {"sha": "b828d56b98e4bcf14ea03212ca5ec5efbf19e619", "filename": "src/bootstrap/dist.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6054a30370209472f2af45d2a84a9a9796b3c64a/src%2Fbootstrap%2Fdist.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6054a30370209472f2af45d2a84a9a9796b3c64a/src%2Fbootstrap%2Fdist.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fdist.rs?ref=6054a30370209472f2af45d2a84a9a9796b3c64a", "patch": "@@ -996,7 +996,7 @@ impl Step for Src {\n             \"src/tools/rustc-std-workspace-alloc\",\n             \"src/tools/rustc-std-workspace-std\",\n             \"src/librustc\",\n-            \"src/libsyntax\",\n+            \"src/librustc_ast\",\n         ];\n \n         copy_src_dirs(builder, &std_src_dirs[..], &[], &dst_src);"}, {"sha": "b626923bcb59cfd8ae48872f0bd7cc758a9b8e8a", "filename": "src/doc/rustc-ux-guidelines.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6054a30370209472f2af45d2a84a9a9796b3c64a/src%2Fdoc%2Frustc-ux-guidelines.md", "raw_url": "https://github.com/rust-lang/rust/raw/6054a30370209472f2af45d2a84a9a9796b3c64a/src%2Fdoc%2Frustc-ux-guidelines.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Frustc-ux-guidelines.md?ref=6054a30370209472f2af45d2a84a9a9796b3c64a", "patch": "@@ -62,7 +62,7 @@ for details on how to format and write long error codes.\n * All of them are accessible [online](http://doc.rust-lang.org/error-index.html),\n   which are auto-generated from rustc source code in different places:\n   [librustc](https://github.com/rust-lang/rust/blob/master/src/librustc/error_codes.rs),\n-  [libsyntax](https://github.com/rust-lang/rust/blob/master/src/libsyntax/error_codes.rs),\n+  [librustc_ast](https://github.com/rust-lang/rust/blob/master/src/librustc_ast/error_codes.rs),\n   [librustc_borrowck](https://github.com/rust-lang/rust/blob/master/src/librustc_borrowck/error_codes.rs),\n   [librustc_metadata](https://github.com/rust-lang/rust/blob/master/src/librustc_metadata/error_codes.rs),\n   [librustc_mir](https://github.com/rust-lang/rust/blob/master/src/librustc_mir/error_codes.rs),"}, {"sha": "f6e3d701148e663a99ff6680375ba2c7b7967d68", "filename": "src/doc/unstable-book/src/language-features/plugin.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6054a30370209472f2af45d2a84a9a9796b3c64a/src%2Fdoc%2Funstable-book%2Fsrc%2Flanguage-features%2Fplugin.md", "raw_url": "https://github.com/rust-lang/rust/raw/6054a30370209472f2af45d2a84a9a9796b3c64a/src%2Fdoc%2Funstable-book%2Fsrc%2Flanguage-features%2Fplugin.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Funstable-book%2Fsrc%2Flanguage-features%2Fplugin.md?ref=6054a30370209472f2af45d2a84a9a9796b3c64a", "patch": "@@ -23,7 +23,7 @@ mechanics of defining and loading a plugin.\n \n In the vast majority of cases, a plugin should *only* be used through\n `#![plugin]` and not through an `extern crate` item.  Linking a plugin would\n-pull in all of libsyntax and librustc as dependencies of your crate.  This is\n+pull in all of librustc_ast and librustc as dependencies of your crate.  This is\n generally unwanted unless you are building another plugin.\n \n The usual practice is to put compiler plugins in their own crate, separate from"}, {"sha": "e625015128b32e2a5e747efd9f564e3166334a19", "filename": "src/librustc/Cargo.toml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6054a30370209472f2af45d2a84a9a9796b3c64a/src%2Flibrustc%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/6054a30370209472f2af45d2a84a9a9796b3c64a/src%2Flibrustc%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2FCargo.toml?ref=6054a30370209472f2af45d2a84a9a9796b3c64a", "patch": "@@ -28,7 +28,7 @@ rustc_data_structures = { path = \"../librustc_data_structures\" }\n rustc_errors = { path = \"../librustc_errors\" }\n rustc_index = { path = \"../librustc_index\" }\n rustc_serialize = { path = \"../libserialize\", package = \"serialize\" }\n-syntax = { path = \"../libsyntax\" }\n+syntax = { path = \"../librustc_ast\", package = \"rustc_ast\" }\n rustc_span = { path = \"../librustc_span\" }\n backtrace = \"0.3.40\"\n parking_lot = \"0.9\""}, {"sha": "a601ec7608e93ffa64d973c340ab69b5c5aa6e2d", "filename": "src/librustc/ich/impls_syntax.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6054a30370209472f2af45d2a84a9a9796b3c64a/src%2Flibrustc%2Fich%2Fimpls_syntax.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6054a30370209472f2af45d2a84a9a9796b3c64a/src%2Flibrustc%2Fich%2Fimpls_syntax.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fich%2Fimpls_syntax.rs?ref=6054a30370209472f2af45d2a84a9a9796b3c64a", "patch": "@@ -1,5 +1,5 @@\n //! This module contains `HashStable` implementations for various data types\n-//! from libsyntax in no particular order.\n+//! from librustc_ast in no particular order.\n \n use crate::ich::StableHashingContext;\n "}, {"sha": "cd229728f4b79b344aaa61d281fa9427865c78f0", "filename": "src/librustc/ty/context.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6054a30370209472f2af45d2a84a9a9796b3c64a/src%2Flibrustc%2Fty%2Fcontext.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6054a30370209472f2af45d2a84a9a9796b3c64a/src%2Flibrustc%2Fty%2Fcontext.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Fcontext.rs?ref=6054a30370209472f2af45d2a84a9a9796b3c64a", "patch": "@@ -1720,7 +1720,7 @@ pub mod tls {\n         set_tlv(context as *const _ as usize, || f(&context))\n     }\n \n-    /// Enters `GlobalCtxt` by setting up libsyntax callbacks and\n+    /// Enters `GlobalCtxt` by setting up librustc_ast callbacks and\n     /// creating a initial `TyCtxt` and `ImplicitCtxt`.\n     /// This happens once per rustc session and `TyCtxt`s only exists\n     /// inside the `f` function."}, {"sha": "60ea44bfa9d9123289590bcf7c0d7da107d6ea26", "filename": "src/librustc/ty/sty.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6054a30370209472f2af45d2a84a9a9796b3c64a/src%2Flibrustc%2Fty%2Fsty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6054a30370209472f2af45d2a84a9a9796b3c64a/src%2Flibrustc%2Fty%2Fsty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Fsty.rs?ref=6054a30370209472f2af45d2a84a9a9796b3c64a", "patch": "@@ -118,7 +118,7 @@ impl BoundRegion {\n }\n \n /// N.B., if you change this, you'll probably want to change the corresponding\n-/// AST structure in `libsyntax/ast.rs` as well.\n+/// AST structure in `librustc_ast/ast.rs` as well.\n #[derive(\n     Clone,\n     PartialEq,"}, {"sha": "867bcf79232649a126150abfb29fac348520fd95", "filename": "src/librustc_ast/Cargo.toml", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/6054a30370209472f2af45d2a84a9a9796b3c64a/src%2Flibrustc_ast%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/6054a30370209472f2af45d2a84a9a9796b3c64a/src%2Flibrustc_ast%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_ast%2FCargo.toml?ref=6054a30370209472f2af45d2a84a9a9796b3c64a", "patch": "@@ -1,11 +1,11 @@\n [package]\n authors = [\"The Rust Project Developers\"]\n-name = \"syntax\"\n+name = \"rustc_ast\"\n version = \"0.0.0\"\n edition = \"2018\"\n \n [lib]\n-name = \"syntax\"\n+name = \"rustc_ast\"\n path = \"lib.rs\"\n doctest = false\n "}, {"sha": "33b75b8136f19d7a26ea747fd546de02349ccdc1", "filename": "src/librustc_ast_lowering/Cargo.toml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6054a30370209472f2af45d2a84a9a9796b3c64a/src%2Flibrustc_ast_lowering%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/6054a30370209472f2af45d2a84a9a9796b3c64a/src%2Flibrustc_ast_lowering%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_ast_lowering%2FCargo.toml?ref=6054a30370209472f2af45d2a84a9a9796b3c64a", "patch": "@@ -20,5 +20,5 @@ rustc_index = { path = \"../librustc_index\" }\n rustc_span = { path = \"../librustc_span\" }\n rustc_errors = { path = \"../librustc_errors\" }\n rustc_session = { path = \"../librustc_session\" }\n-syntax = { path = \"../libsyntax\" }\n+syntax = { path = \"../librustc_ast\", package = \"rustc_ast\" }\n smallvec = { version = \"1.0\", features = [\"union\", \"may_dangle\"] }"}, {"sha": "fe020ddba8e284ee523aa0c7413e2a9dec0ff22b", "filename": "src/librustc_ast_passes/Cargo.toml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6054a30370209472f2af45d2a84a9a9796b3c64a/src%2Flibrustc_ast_passes%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/6054a30370209472f2af45d2a84a9a9796b3c64a/src%2Flibrustc_ast_passes%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_ast_passes%2FCargo.toml?ref=6054a30370209472f2af45d2a84a9a9796b3c64a", "patch": "@@ -18,4 +18,4 @@ rustc_feature = { path = \"../librustc_feature\" }\n rustc_parse = { path = \"../librustc_parse\" }\n rustc_session = { path = \"../librustc_session\" }\n rustc_span = { path = \"../librustc_span\" }\n-syntax = { path = \"../libsyntax\" }\n+syntax = { path = \"../librustc_ast\", package = \"rustc_ast\" }"}, {"sha": "41b8fad588dabf9cc858472da59c67f03822b43e", "filename": "src/librustc_ast_pretty/Cargo.toml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6054a30370209472f2af45d2a84a9a9796b3c64a/src%2Flibrustc_ast_pretty%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/6054a30370209472f2af45d2a84a9a9796b3c64a/src%2Flibrustc_ast_pretty%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_ast_pretty%2FCargo.toml?ref=6054a30370209472f2af45d2a84a9a9796b3c64a", "patch": "@@ -13,4 +13,4 @@ doctest = false\n log = \"0.4\"\n rustc_span = { path = \"../librustc_span\" }\n rustc_data_structures = { path = \"../librustc_data_structures\" }\n-syntax = { path = \"../libsyntax\" }\n+syntax = { path = \"../librustc_ast\", package = \"rustc_ast\" }"}, {"sha": "66fcad2b1f186ff7493978a3623587968ae884c3", "filename": "src/librustc_attr/Cargo.toml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6054a30370209472f2af45d2a84a9a9796b3c64a/src%2Flibrustc_attr%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/6054a30370209472f2af45d2a84a9a9796b3c64a/src%2Flibrustc_attr%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_attr%2FCargo.toml?ref=6054a30370209472f2af45d2a84a9a9796b3c64a", "patch": "@@ -19,4 +19,4 @@ rustc_feature = { path = \"../librustc_feature\" }\n rustc_macros = { path = \"../librustc_macros\" }\n smallvec = { version = \"1.0\", features = [\"union\", \"may_dangle\"] }\n rustc_session = { path = \"../librustc_session\" }\n-syntax = { path = \"../libsyntax\" }\n+syntax = { path = \"../librustc_ast\", package = \"rustc_ast\" }"}, {"sha": "501564221ae867fdf5b631cd20b51c4208a9bf64", "filename": "src/librustc_builtin_macros/Cargo.toml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6054a30370209472f2af45d2a84a9a9796b3c64a/src%2Flibrustc_builtin_macros%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/6054a30370209472f2af45d2a84a9a9796b3c64a/src%2Flibrustc_builtin_macros%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_builtin_macros%2FCargo.toml?ref=6054a30370209472f2af45d2a84a9a9796b3c64a", "patch": "@@ -21,6 +21,6 @@ rustc_parse = { path = \"../librustc_parse\" }\n rustc_target = { path = \"../librustc_target\" }\n rustc_session = { path = \"../librustc_session\" }\n smallvec = { version = \"1.0\", features = [\"union\", \"may_dangle\"] }\n-syntax = { path = \"../libsyntax\" }\n+syntax = { path = \"../librustc_ast\", package = \"rustc_ast\" }\n rustc_expand = { path = \"../librustc_expand\" }\n rustc_span = { path = \"../librustc_span\" }"}, {"sha": "09a25a0a2fb296df71e3831005f2fe4125e64a06", "filename": "src/librustc_codegen_llvm/Cargo.toml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6054a30370209472f2af45d2a84a9a9796b3c64a/src%2Flibrustc_codegen_llvm%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/6054a30370209472f2af45d2a84a9a9796b3c64a/src%2Flibrustc_codegen_llvm%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_llvm%2FCargo.toml?ref=6054a30370209472f2af45d2a84a9a9796b3c64a", "patch": "@@ -33,5 +33,5 @@ rustc_session = { path = \"../librustc_session\" }\n rustc_serialize = { path = \"../libserialize\", package = \"serialize\" }\n rustc_target = { path = \"../librustc_target\" }\n smallvec = { version = \"1.0\", features = [\"union\", \"may_dangle\"] }\n-syntax = { path = \"../libsyntax\" }\n+syntax = { path = \"../librustc_ast\", package = \"rustc_ast\" }\n rustc_span = { path = \"../librustc_span\" }"}, {"sha": "f70e4d8739718e5a05ac5c8d0e37bf9522d4f599", "filename": "src/librustc_codegen_ssa/Cargo.toml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6054a30370209472f2af45d2a84a9a9796b3c64a/src%2Flibrustc_codegen_ssa%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/6054a30370209472f2af45d2a84a9a9796b3c64a/src%2Flibrustc_codegen_ssa%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_ssa%2FCargo.toml?ref=6054a30370209472f2af45d2a84a9a9796b3c64a", "patch": "@@ -20,7 +20,7 @@ jobserver = \"0.1.11\"\n tempfile = \"3.1\"\n \n rustc_serialize = { path = \"../libserialize\", package = \"serialize\" }\n-syntax = { path = \"../libsyntax\" }\n+syntax = { path = \"../librustc_ast\", package = \"rustc_ast\" }\n rustc_span = { path = \"../librustc_span\" }\n rustc = { path = \"../librustc\" }\n rustc_apfloat = { path = \"../librustc_apfloat\" }"}, {"sha": "45aabd5f4526ae4c21b4a6579a5fb7883fb50634", "filename": "src/librustc_codegen_utils/Cargo.toml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6054a30370209472f2af45d2a84a9a9796b3c64a/src%2Flibrustc_codegen_utils%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/6054a30370209472f2af45d2a84a9a9796b3c64a/src%2Flibrustc_codegen_utils%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_utils%2FCargo.toml?ref=6054a30370209472f2af45d2a84a9a9796b3c64a", "patch": "@@ -14,7 +14,7 @@ log = \"0.4\"\n punycode = \"0.4.0\"\n rustc-demangle = \"0.1.16\"\n \n-syntax = { path = \"../libsyntax\" }\n+syntax = { path = \"../librustc_ast\", package = \"rustc_ast\" }\n rustc_span = { path = \"../librustc_span\" }\n rustc = { path = \"../librustc\" }\n rustc_hir = { path = \"../librustc_hir\" }"}, {"sha": "2e3b321a5247691d1c9a5702f3fd088208b2cee3", "filename": "src/librustc_driver/Cargo.toml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6054a30370209472f2af45d2a84a9a9796b3c64a/src%2Flibrustc_driver%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/6054a30370209472f2af45d2a84a9a9796b3c64a/src%2Flibrustc_driver%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_driver%2FCargo.toml?ref=6054a30370209472f2af45d2a84a9a9796b3c64a", "patch": "@@ -31,7 +31,7 @@ rustc_codegen_utils = { path = \"../librustc_codegen_utils\" }\n rustc_error_codes = { path = \"../librustc_error_codes\" }\n rustc_interface = { path = \"../librustc_interface\" }\n rustc_serialize = { path = \"../libserialize\", package = \"serialize\" }\n-syntax = { path = \"../libsyntax\" }\n+syntax = { path = \"../librustc_ast\", package = \"rustc_ast\" }\n rustc_span = { path = \"../librustc_span\" }\n \n [target.'cfg(windows)'.dependencies]"}, {"sha": "4da90ba229d7ecb55c49f07e6cd8666876c3f404", "filename": "src/librustc_expand/Cargo.toml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6054a30370209472f2af45d2a84a9a9796b3c64a/src%2Flibrustc_expand%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/6054a30370209472f2af45d2a84a9a9796b3c64a/src%2Flibrustc_expand%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_expand%2FCargo.toml?ref=6054a30370209472f2af45d2a84a9a9796b3c64a", "patch": "@@ -24,4 +24,4 @@ rustc_lexer = { path = \"../librustc_lexer\" }\n rustc_parse = { path = \"../librustc_parse\" }\n rustc_session = { path = \"../librustc_session\" }\n smallvec = { version = \"1.0\", features = [\"union\", \"may_dangle\"] }\n-syntax = { path = \"../libsyntax\" }\n+syntax = { path = \"../librustc_ast\", package = \"rustc_ast\" }"}, {"sha": "e4c1beb50160b6a0b19404417630ab921720661c", "filename": "src/librustc_hir/Cargo.toml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6054a30370209472f2af45d2a84a9a9796b3c64a/src%2Flibrustc_hir%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/6054a30370209472f2af45d2a84a9a9796b3c64a/src%2Flibrustc_hir%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_hir%2FCargo.toml?ref=6054a30370209472f2af45d2a84a9a9796b3c64a", "patch": "@@ -18,6 +18,6 @@ rustc_index = { path = \"../librustc_index\" }\n rustc_span = { path = \"../librustc_span\" }\n rustc_errors = { path = \"../librustc_errors\" }\n rustc_serialize = { path = \"../libserialize\", package = \"serialize\" }\n-syntax = { path = \"../libsyntax\" }\n+syntax = { path = \"../librustc_ast\", package = \"rustc_ast\" }\n lazy_static = \"1\"\n smallvec = { version = \"1.0\", features = [\"union\", \"may_dangle\"] }"}, {"sha": "71b2f0ee868310bc7a6ec2e7a29b00dc42c6ca79", "filename": "src/librustc_incremental/Cargo.toml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6054a30370209472f2af45d2a84a9a9796b3c64a/src%2Flibrustc_incremental%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/6054a30370209472f2af45d2a84a9a9796b3c64a/src%2Flibrustc_incremental%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_incremental%2FCargo.toml?ref=6054a30370209472f2af45d2a84a9a9796b3c64a", "patch": "@@ -17,7 +17,7 @@ rustc = { path = \"../librustc\" }\n rustc_data_structures = { path = \"../librustc_data_structures\" }\n rustc_hir = { path = \"../librustc_hir\" }\n rustc_serialize = { path = \"../libserialize\", package = \"serialize\" }\n-syntax = { path = \"../libsyntax\" }\n+syntax = { path = \"../librustc_ast\", package = \"rustc_ast\" }\n rustc_span = { path = \"../librustc_span\" }\n rustc_fs_util = { path = \"../librustc_fs_util\" }\n rustc_session = { path = \"../librustc_session\" }"}, {"sha": "a234a0024e8c1caca1d791cc0d8437cf68c21488", "filename": "src/librustc_infer/Cargo.toml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6054a30370209472f2af45d2a84a9a9796b3c64a/src%2Flibrustc_infer%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/6054a30370209472f2af45d2a84a9a9796b3c64a/src%2Flibrustc_infer%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_infer%2FCargo.toml?ref=6054a30370209472f2af45d2a84a9a9796b3c64a", "patch": "@@ -25,4 +25,4 @@ rustc_session = { path = \"../librustc_session\" }\n rustc_span = { path = \"../librustc_span\" }\n rustc_target = { path = \"../librustc_target\" }\n smallvec = { version = \"1.0\", features = [\"union\", \"may_dangle\"] }\n-syntax = { path = \"../libsyntax\" }\n+syntax = { path = \"../librustc_ast\", package = \"rustc_ast\" }"}, {"sha": "cc5d9da52cb24ac127f7d96e79640cb0c07b16a0", "filename": "src/librustc_interface/Cargo.toml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6054a30370209472f2af45d2a84a9a9796b3c64a/src%2Flibrustc_interface%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/6054a30370209472f2af45d2a84a9a9796b3c64a/src%2Flibrustc_interface%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_interface%2FCargo.toml?ref=6054a30370209472f2af45d2a84a9a9796b3c64a", "patch": "@@ -13,7 +13,7 @@ doctest = false\n log = \"0.4\"\n rayon = { version = \"0.3.0\", package = \"rustc-rayon\" }\n smallvec = { version = \"1.0\", features = [\"union\", \"may_dangle\"] }\n-syntax = { path = \"../libsyntax\" }\n+syntax = { path = \"../librustc_ast\", package = \"rustc_ast\" }\n rustc_attr = { path = \"../librustc_attr\" }\n rustc_builtin_macros = { path = \"../librustc_builtin_macros\" }\n rustc_expand = { path = \"../librustc_expand\" }"}, {"sha": "0345b82d3bbc6e16601ee2ca029f6c09f3007842", "filename": "src/librustc_interface/callbacks.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/6054a30370209472f2af45d2a84a9a9796b3c64a/src%2Flibrustc_interface%2Fcallbacks.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6054a30370209472f2af45d2a84a9a9796b3c64a/src%2Flibrustc_interface%2Fcallbacks.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_interface%2Fcallbacks.rs?ref=6054a30370209472f2af45d2a84a9a9796b3c64a", "patch": "@@ -13,7 +13,7 @@ use rustc::ty::tls;\n use rustc_errors::{Diagnostic, TRACK_DIAGNOSTICS};\n use std::fmt;\n \n-/// This is a callback from libsyntax as it cannot access the implicit state\n+/// This is a callback from librustc_ast as it cannot access the implicit state\n /// in librustc otherwise.\n fn span_debug(span: rustc_span::Span, f: &mut fmt::Formatter<'_>) -> fmt::Result {\n     tls::with_opt(|tcx| {\n@@ -25,7 +25,7 @@ fn span_debug(span: rustc_span::Span, f: &mut fmt::Formatter<'_>) -> fmt::Result\n     })\n }\n \n-/// This is a callback from libsyntax as it cannot access the implicit state\n+/// This is a callback from librustc_ast as it cannot access the implicit state\n /// in librustc otherwise. It is used to when diagnostic messages are\n /// emitted and stores them in the current query, if there is one.\n fn track_diagnostic(diagnostic: &Diagnostic) {"}, {"sha": "c52a3aefababeab05127dea65415ea4c73f41872", "filename": "src/librustc_interface/util.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6054a30370209472f2af45d2a84a9a9796b3c64a/src%2Flibrustc_interface%2Futil.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6054a30370209472f2af45d2a84a9a9796b3c64a/src%2Flibrustc_interface%2Futil.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_interface%2Futil.rs?ref=6054a30370209472f2af45d2a84a9a9796b3c64a", "patch": "@@ -189,7 +189,7 @@ pub fn spawn_thread_pool<F: FnOnce() -> R + Send, R: Send>(\n                 // The main handler runs for each Rayon worker thread and sets up\n                 // the thread local rustc uses. syntax_globals and rustc_span_globals are\n                 // captured and set on the new threads. ty::tls::with_thread_locals sets up\n-                // thread local callbacks from libsyntax\n+                // thread local callbacks from librustc_ast\n                 let main_handler = move |thread: ThreadBuilder| {\n                     syntax::GLOBALS.set(syntax_globals, || {\n                         rustc_span::GLOBALS.set(rustc_span_globals, || {"}, {"sha": "d3b46557b69030dc52173a60832bd94de278b1d7", "filename": "src/librustc_lint/Cargo.toml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6054a30370209472f2af45d2a84a9a9796b3c64a/src%2Flibrustc_lint%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/6054a30370209472f2af45d2a84a9a9796b3c64a/src%2Flibrustc_lint%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_lint%2FCargo.toml?ref=6054a30370209472f2af45d2a84a9a9796b3c64a", "patch": "@@ -17,7 +17,7 @@ rustc_attr = { path = \"../librustc_attr\" }\n rustc_errors = { path = \"../librustc_errors\" }\n rustc_hir = { path = \"../librustc_hir\" }\n rustc_target = { path = \"../librustc_target\" }\n-syntax = { path = \"../libsyntax\" }\n+syntax = { path = \"../librustc_ast\", package = \"rustc_ast\" }\n rustc_span = { path = \"../librustc_span\" }\n rustc_data_structures = { path = \"../librustc_data_structures\" }\n rustc_feature = { path = \"../librustc_feature\" }"}, {"sha": "4d8ead34ea9cbbeaf53d4f54d37e2c77639b120d", "filename": "src/librustc_lint/early.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6054a30370209472f2af45d2a84a9a9796b3c64a/src%2Flibrustc_lint%2Fearly.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6054a30370209472f2af45d2a84a9a9796b3c64a/src%2Flibrustc_lint%2Fearly.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_lint%2Fearly.rs?ref=6054a30370209472f2af45d2a84a9a9796b3c64a", "patch": "@@ -251,7 +251,7 @@ impl<'a, T: EarlyLintPass> ast_visit::Visitor<'a> for EarlyContextAndPass<'a, T>\n \n     fn visit_mac(&mut self, mac: &'a ast::Mac) {\n         // FIXME(#54110): So, this setup isn't really right. I think\n-        // that (a) the libsyntax visitor ought to be doing this as\n+        // that (a) the librustc_ast visitor ought to be doing this as\n         // part of `walk_mac`, and (b) we should be calling\n         // `visit_path`, *but* that would require a `NodeId`, and I\n         // want to get #53686 fixed quickly. -nmatsakis"}, {"sha": "b44822efc16457ca40f8130c235e5bde9221c252", "filename": "src/librustc_metadata/Cargo.toml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6054a30370209472f2af45d2a84a9a9796b3c64a/src%2Flibrustc_metadata%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/6054a30370209472f2af45d2a84a9a9796b3c64a/src%2Flibrustc_metadata%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_metadata%2FCargo.toml?ref=6054a30370209472f2af45d2a84a9a9796b3c64a", "patch": "@@ -24,7 +24,7 @@ rustc_target = { path = \"../librustc_target\" }\n rustc_index = { path = \"../librustc_index\" }\n rustc_serialize = { path = \"../libserialize\", package = \"serialize\" }\n stable_deref_trait = \"1.0.0\"\n-syntax = { path = \"../libsyntax\" }\n+syntax = { path = \"../librustc_ast\", package = \"rustc_ast\" }\n rustc_expand = { path = \"../librustc_expand\" }\n rustc_parse = { path = \"../librustc_parse\" }\n rustc_span = { path = \"../librustc_span\" }"}, {"sha": "72e07c6c2b8554676c1628a01efe4f9513701de0", "filename": "src/librustc_metadata/rmeta/decoder.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6054a30370209472f2af45d2a84a9a9796b3c64a/src%2Flibrustc_metadata%2Frmeta%2Fdecoder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6054a30370209472f2af45d2a84a9a9796b3c64a/src%2Flibrustc_metadata%2Frmeta%2Fdecoder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_metadata%2Frmeta%2Fdecoder.rs?ref=6054a30370209472f2af45d2a84a9a9796b3c64a", "patch": "@@ -1616,7 +1616,7 @@ impl<'a, 'tcx> CrateMetadata {\n }\n \n // Cannot be implemented on 'ProcMacro', as libproc_macro\n-// does not depend on libsyntax\n+// does not depend on librustc_ast\n fn macro_kind(raw: &ProcMacro) -> MacroKind {\n     match raw {\n         ProcMacro::CustomDerive { .. } => MacroKind::Derive,"}, {"sha": "9c94a5a5949dae13f7a6782ed5b73eb2152fb8ac", "filename": "src/librustc_mir/Cargo.toml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6054a30370209472f2af45d2a84a9a9796b3c64a/src%2Flibrustc_mir%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/6054a30370209472f2af45d2a84a9a9796b3c64a/src%2Flibrustc_mir%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2FCargo.toml?ref=6054a30370209472f2af45d2a84a9a9796b3c64a", "patch": "@@ -28,7 +28,7 @@ rustc_lexer = { path = \"../librustc_lexer\" }\n rustc_macros = { path = \"../librustc_macros\" }\n rustc_serialize = { path = \"../libserialize\", package = \"serialize\" }\n rustc_target = { path = \"../librustc_target\" }\n-syntax = { path = \"../libsyntax\" }\n+syntax = { path = \"../librustc_ast\", package = \"rustc_ast\" }\n rustc_span = { path = \"../librustc_span\" }\n rustc_apfloat = { path = \"../librustc_apfloat\" }\n smallvec = { version = \"1.0\", features = [\"union\", \"may_dangle\"] }"}, {"sha": "f32633ab4fdb8787861c0d499a75414ae3016110", "filename": "src/librustc_mir_build/Cargo.toml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6054a30370209472f2af45d2a84a9a9796b3c64a/src%2Flibrustc_mir_build%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/6054a30370209472f2af45d2a84a9a9796b3c64a/src%2Flibrustc_mir_build%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir_build%2FCargo.toml?ref=6054a30370209472f2af45d2a84a9a9796b3c64a", "patch": "@@ -25,5 +25,5 @@ rustc_serialize = { path = \"../libserialize\", package = \"serialize\" }\n rustc_session = { path = \"../librustc_session\" }\n rustc_span = { path = \"../librustc_span\" }\n rustc_target = { path = \"../librustc_target\" }\n-syntax = { path = \"../libsyntax\" }\n+syntax = { path = \"../librustc_ast\", package = \"rustc_ast\" }\n smallvec = { version = \"1.0\", features = [\"union\", \"may_dangle\"] }"}, {"sha": "d15066437a7b5c6426ad8c4ea7e0b9dc013e4c8d", "filename": "src/librustc_parse/Cargo.toml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6054a30370209472f2af45d2a84a9a9796b3c64a/src%2Flibrustc_parse%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/6054a30370209472f2af45d2a84a9a9796b3c64a/src%2Flibrustc_parse%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_parse%2FCargo.toml?ref=6054a30370209472f2af45d2a84a9a9796b3c64a", "patch": "@@ -21,5 +21,5 @@ rustc_errors = { path = \"../librustc_errors\" }\n smallvec = { version = \"1.0\", features = [\"union\", \"may_dangle\"] }\n rustc_session = { path = \"../librustc_session\" }\n rustc_span = { path = \"../librustc_span\" }\n-syntax = { path = \"../libsyntax\" }\n+syntax = { path = \"../librustc_ast\", package = \"rustc_ast\" }\n unicode-normalization = \"0.1.11\""}, {"sha": "2cd8b0b90c184d6d6f2db1d930b622376c4d641c", "filename": "src/librustc_parse/lexer/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6054a30370209472f2af45d2a84a9a9796b3c64a/src%2Flibrustc_parse%2Flexer%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6054a30370209472f2af45d2a84a9a9796b3c64a/src%2Flibrustc_parse%2Flexer%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_parse%2Flexer%2Fmod.rs?ref=6054a30370209472f2af45d2a84a9a9796b3c64a", "patch": "@@ -172,7 +172,7 @@ impl<'a> StringReader<'a> {\n     }\n \n     /// Turns simple `rustc_lexer::TokenKind` enum into a rich\n-    /// `libsyntax::TokenKind`. This turns strings into interned\n+    /// `librustc_ast::TokenKind`. This turns strings into interned\n     /// symbols and runs additional validation.\n     fn cook_lexer_token(&self, token: rustc_lexer::TokenKind, start: BytePos) -> TokenKind {\n         match token {"}, {"sha": "077c171acca25104e0bb2ca668947b63eee49327", "filename": "src/librustc_parse/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6054a30370209472f2af45d2a84a9a9796b3c64a/src%2Flibrustc_parse%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6054a30370209472f2af45d2a84a9a9796b3c64a/src%2Flibrustc_parse%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_parse%2Flib.rs?ref=6054a30370209472f2af45d2a84a9a9796b3c64a", "patch": "@@ -269,7 +269,7 @@ pub fn stream_to_parser<'a>(\n /// # Note\n ///\n /// The main usage of this function is outside of rustc, for those who uses\n-/// libsyntax as a library. Please do not remove this function while refactoring\n+/// librustc_ast as a library. Please do not remove this function while refactoring\n /// just because it is not used in rustc codebase!\n pub fn stream_to_parser_with_base_dir<'a>(\n     sess: &'a ParseSess,"}, {"sha": "62dee847e4c713bdef32c8107bbc6a5a764a839a", "filename": "src/librustc_passes/Cargo.toml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6054a30370209472f2af45d2a84a9a9796b3c64a/src%2Flibrustc_passes%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/6054a30370209472f2af45d2a84a9a9796b3c64a/src%2Flibrustc_passes%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_passes%2FCargo.toml?ref=6054a30370209472f2af45d2a84a9a9796b3c64a", "patch": "@@ -20,5 +20,5 @@ rustc_index = { path = \"../librustc_index\" }\n rustc_infer = { path = \"../librustc_infer\" }\n rustc_session = { path = \"../librustc_session\" }\n rustc_target = { path = \"../librustc_target\" }\n-syntax = { path = \"../libsyntax\" }\n+syntax = { path = \"../librustc_ast\", package = \"rustc_ast\" }\n rustc_span = { path = \"../librustc_span\" }"}, {"sha": "28fa64b6cb7a6a7efdc78d8e643531a31df86093", "filename": "src/librustc_passes/entry.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6054a30370209472f2af45d2a84a9a9796b3c64a/src%2Flibrustc_passes%2Fentry.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6054a30370209472f2af45d2a84a9a9796b3c64a/src%2Flibrustc_passes%2Fentry.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_passes%2Fentry.rs?ref=6054a30370209472f2af45d2a84a9a9796b3c64a", "patch": "@@ -77,7 +77,7 @@ fn entry_fn(tcx: TyCtxt<'_>, cnum: CrateNum) -> Option<(DefId, EntryFnType)> {\n     configure_main(tcx, &ctxt)\n }\n \n-// Beware, this is duplicated in `libsyntax/entry.rs`, so make sure to keep\n+// Beware, this is duplicated in `librustc_ast/entry.rs`, so make sure to keep\n // them in sync.\n fn entry_point_type(item: &Item<'_>, at_root: bool) -> EntryPointType {\n     match item.kind {"}, {"sha": "b1c09ee195373b96eafdd743dbbfb09e759d5193", "filename": "src/librustc_plugin_impl/Cargo.toml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6054a30370209472f2af45d2a84a9a9796b3c64a/src%2Flibrustc_plugin_impl%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/6054a30370209472f2af45d2a84a9a9796b3c64a/src%2Flibrustc_plugin_impl%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_plugin_impl%2FCargo.toml?ref=6054a30370209472f2af45d2a84a9a9796b3c64a", "patch": "@@ -16,5 +16,5 @@ rustc_errors = { path = \"../librustc_errors\" }\n rustc_hir = { path = \"../librustc_hir\" }\n rustc_lint = { path = \"../librustc_lint\" }\n rustc_metadata = { path = \"../librustc_metadata\" }\n-syntax = { path = \"../libsyntax\" }\n+syntax = { path = \"../librustc_ast\", package = \"rustc_ast\" }\n rustc_span = { path = \"../librustc_span\" }"}, {"sha": "c55ae44a2419bc3d268677ffc192d016ae54e3c9", "filename": "src/librustc_privacy/Cargo.toml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6054a30370209472f2af45d2a84a9a9796b3c64a/src%2Flibrustc_privacy%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/6054a30370209472f2af45d2a84a9a9796b3c64a/src%2Flibrustc_privacy%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_privacy%2FCargo.toml?ref=6054a30370209472f2af45d2a84a9a9796b3c64a", "patch": "@@ -14,7 +14,7 @@ rustc_attr = { path = \"../librustc_attr\" }\n rustc_errors = { path = \"../librustc_errors\" }\n rustc_hir = { path = \"../librustc_hir\" }\n rustc_typeck = { path = \"../librustc_typeck\" }\n-syntax = { path = \"../libsyntax\" }\n+syntax = { path = \"../librustc_ast\", package = \"rustc_ast\" }\n rustc_span = { path = \"../librustc_span\" }\n rustc_data_structures = { path = \"../librustc_data_structures\" }\n log = \"0.4\""}, {"sha": "145a998fef134745a64770af0117faf066fc7754", "filename": "src/librustc_resolve/Cargo.toml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6054a30370209472f2af45d2a84a9a9796b3c64a/src%2Flibrustc_resolve%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/6054a30370209472f2af45d2a84a9a9796b3c64a/src%2Flibrustc_resolve%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2FCargo.toml?ref=6054a30370209472f2af45d2a84a9a9796b3c64a", "patch": "@@ -13,7 +13,7 @@ doctest = false\n [dependencies]\n bitflags = \"1.2.1\"\n log = \"0.4\"\n-syntax = { path = \"../libsyntax\" }\n+syntax = { path = \"../librustc_ast\", package = \"rustc_ast\" }\n arena = { path = \"../libarena\" }\n rustc = { path = \"../librustc\" }\n rustc_ast_lowering = { path = \"../librustc_ast_lowering\" }"}, {"sha": "bd433a71825a383a6fa721470ff6397c0466db8b", "filename": "src/librustc_save_analysis/Cargo.toml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6054a30370209472f2af45d2a84a9a9796b3c64a/src%2Flibrustc_save_analysis%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/6054a30370209472f2af45d2a84a9a9796b3c64a/src%2Flibrustc_save_analysis%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_save_analysis%2FCargo.toml?ref=6054a30370209472f2af45d2a84a9a9796b3c64a", "patch": "@@ -17,7 +17,7 @@ rustc_codegen_utils = { path = \"../librustc_codegen_utils\" }\n rustc_hir = { path = \"../librustc_hir\" }\n rustc_parse = { path = \"../librustc_parse\" }\n serde_json = \"1\"\n-syntax = { path = \"../libsyntax\" }\n+syntax = { path = \"../librustc_ast\", package = \"rustc_ast\" }\n rustc_span = { path = \"../librustc_span\" }\n rls-data = \"0.19\"\n rls-span = \"0.5\""}, {"sha": "30d1fd419846c7eb120c4f7a256e2476b6eadffa", "filename": "src/librustc_session/Cargo.toml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6054a30370209472f2af45d2a84a9a9796b3c64a/src%2Flibrustc_session%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/6054a30370209472f2af45d2a84a9a9796b3c64a/src%2Flibrustc_session%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_session%2FCargo.toml?ref=6054a30370209472f2af45d2a84a9a9796b3c64a", "patch": "@@ -19,4 +19,4 @@ rustc_span = { path = \"../librustc_span\" }\n rustc_index = { path = \"../librustc_index\" }\n rustc_fs_util = { path = \"../librustc_fs_util\" }\n num_cpus = \"1.0\"\n-syntax = { path = \"../libsyntax\" }\n+syntax = { path = \"../librustc_ast\", package = \"rustc_ast\" }"}, {"sha": "502ea64aab9b5360bb31cddbb39075e8ae283190", "filename": "src/librustc_span/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6054a30370209472f2af45d2a84a9a9796b3c64a/src%2Flibrustc_span%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6054a30370209472f2af45d2a84a9a9796b3c64a/src%2Flibrustc_span%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_span%2Flib.rs?ref=6054a30370209472f2af45d2a84a9a9796b3c64a", "patch": "@@ -89,7 +89,7 @@ pub enum FileName {\n     QuoteExpansion(u64),\n     /// Command line.\n     Anon(u64),\n-    /// Hack in `src/libsyntax/parse.rs`.\n+    /// Hack in `src/librustc_ast/parse.rs`.\n     // FIXME(jseyfried)\n     MacroExpansion(u64),\n     ProcMacroSourceCode(u64),"}, {"sha": "a633d55bd8f91ce7bdad17f1865a44f868f78073", "filename": "src/librustc_traits/Cargo.toml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6054a30370209472f2af45d2a84a9a9796b3c64a/src%2Flibrustc_traits%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/6054a30370209472f2af45d2a84a9a9796b3c64a/src%2Flibrustc_traits%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_traits%2FCargo.toml?ref=6054a30370209472f2af45d2a84a9a9796b3c64a", "patch": "@@ -15,7 +15,7 @@ rustc_data_structures = { path = \"../librustc_data_structures\" }\n rustc_hir = { path = \"../librustc_hir\" }\n rustc_macros = { path = \"../librustc_macros\" }\n rustc_target = { path = \"../librustc_target\" }\n-syntax = { path = \"../libsyntax\" }\n+syntax = { path = \"../librustc_ast\", package = \"rustc_ast\" }\n rustc_span = { path = \"../librustc_span\" }\n chalk-engine = { version = \"0.9.0\", default-features=false }\n smallvec = { version = \"1.0\", features = [\"union\", \"may_dangle\"] }"}, {"sha": "67ef91ab367930a3d0d1c56dd6d2b94465fda10d", "filename": "src/librustc_typeck/Cargo.toml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6054a30370209472f2af45d2a84a9a9796b3c64a/src%2Flibrustc_typeck%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/6054a30370209472f2af45d2a84a9a9796b3c64a/src%2Flibrustc_typeck%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2FCargo.toml?ref=6054a30370209472f2af45d2a84a9a9796b3c64a", "patch": "@@ -20,7 +20,7 @@ rustc_errors = { path = \"../librustc_errors\" }\n rustc_hir = { path = \"../librustc_hir\" }\n rustc_target = { path = \"../librustc_target\" }\n smallvec = { version = \"1.0\", features = [\"union\", \"may_dangle\"] }\n-syntax = { path = \"../libsyntax\" }\n+syntax = { path = \"../librustc_ast\", package = \"rustc_ast\" }\n rustc_span = { path = \"../librustc_span\" }\n rustc_index = { path = \"../librustc_index\" }\n rustc_infer = { path = \"../librustc_infer\" }"}, {"sha": "99e3d731d0d6fc46d2b2801bc59fbcd58fc75aad", "filename": "src/librustdoc/clean/utils.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6054a30370209472f2af45d2a84a9a9796b3c64a/src%2Flibrustdoc%2Fclean%2Futils.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6054a30370209472f2af45d2a84a9a9796b3c64a/src%2Flibrustdoc%2Fclean%2Futils.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fclean%2Futils.rs?ref=6054a30370209472f2af45d2a84a9a9796b3c64a", "patch": "@@ -38,7 +38,7 @@ pub fn krate(mut cx: &mut DocContext<'_>) -> Crate {\n     }\n     externs.sort_by(|&(a, _), &(b, _)| a.cmp(&b));\n \n-    // Clean the crate, translating the entire libsyntax AST to one that is\n+    // Clean the crate, translating the entire librustc_ast AST to one that is\n     // understood by rustdoc.\n     let mut module = module.clean(cx);\n     let mut masked_crates = FxHashSet::default();"}, {"sha": "9ab94e47c835010c0ad8e4fdd55ff3895b8bc901", "filename": "src/librustdoc/html/highlight.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6054a30370209472f2af45d2a84a9a9796b3c64a/src%2Flibrustdoc%2Fhtml%2Fhighlight.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6054a30370209472f2af45d2a84a9a9796b3c64a/src%2Flibrustdoc%2Fhtml%2Fhighlight.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fhighlight.rs?ref=6054a30370209472f2af45d2a84a9a9796b3c64a", "patch": "@@ -1,6 +1,6 @@\n //! Basic syntax highlighting functionality.\n //!\n-//! This module uses libsyntax's lexer to provide token-based highlighting for\n+//! This module uses librustc_ast's lexer to provide token-based highlighting for\n //! the HTML documentation generated by rustdoc.\n //!\n //! Use the `render_with_highlighting` to highlight some rust code."}, {"sha": "8af77fdf75eee9ff57650135e24c3ef058428f93", "filename": "src/librustdoc/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6054a30370209472f2af45d2a84a9a9796b3c64a/src%2Flibrustdoc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6054a30370209472f2af45d2a84a9a9796b3c64a/src%2Flibrustdoc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Flib.rs?ref=6054a30370209472f2af45d2a84a9a9796b3c64a", "patch": "@@ -17,6 +17,7 @@\n extern crate env_logger;\n extern crate getopts;\n extern crate rustc;\n+extern crate rustc_ast as syntax;\n extern crate rustc_ast_pretty;\n extern crate rustc_attr;\n extern crate rustc_data_structures;\n@@ -38,7 +39,6 @@ extern crate rustc_session;\n extern crate rustc_span as rustc_span;\n extern crate rustc_target;\n extern crate rustc_typeck;\n-extern crate syntax;\n extern crate test as testing;\n #[macro_use]\n extern crate log;"}, {"sha": "f8e318efae46afb95bd8b370d440b1ee610b965a", "filename": "src/librustdoc/test.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/6054a30370209472f2af45d2a84a9a9796b3c64a/src%2Flibrustdoc%2Ftest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6054a30370209472f2af45d2a84a9a9796b3c64a/src%2Flibrustdoc%2Ftest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Ftest.rs?ref=6054a30370209472f2af45d2a84a9a9796b3c64a", "patch": "@@ -387,7 +387,7 @@ pub fn make_test(\n     prog.push_str(&crate_attrs);\n     prog.push_str(&crates);\n \n-    // Uses libsyntax to parse the doctest and find if there's a main fn and the extern\n+    // Uses librustc_ast to parse the doctest and find if there's a main fn and the extern\n     // crate already is included.\n     let result = rustc_driver::catch_fatal_errors(|| {\n         with_globals(edition, || {\n@@ -401,7 +401,7 @@ pub fn make_test(\n             let source = crates + everything_else;\n \n             // Any errors in parsing should also appear when the doctest is compiled for real, so just\n-            // send all the errors that libsyntax emits directly into a `Sink` instead of stderr.\n+            // send all the errors that librustc_ast emits directly into a `Sink` instead of stderr.\n             let sm = Lrc::new(SourceMap::new(FilePathMapping::empty()));\n             let emitter =\n                 EmitterWriter::new(box io::sink(), None, false, false, false, None, false);"}, {"sha": "a800bd17c503be5791ed5aeba72eea821de8977b", "filename": "src/libtest/cli.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6054a30370209472f2af45d2a84a9a9796b3c64a/src%2Flibtest%2Fcli.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6054a30370209472f2af45d2a84a9a9796b3c64a/src%2Flibtest%2Fcli.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibtest%2Fcli.rs?ref=6054a30370209472f2af45d2a84a9a9796b3c64a", "patch": "@@ -273,7 +273,7 @@ fn parse_opts_impl(matches: getopts::Matches) -> OptRes {\n     Ok(test_opts)\n }\n \n-// FIXME: Copied from libsyntax until linkage errors are resolved. Issue #47566\n+// FIXME: Copied from librustc_ast until linkage errors are resolved. Issue #47566\n fn is_nightly() -> bool {\n     // Whether this is a feature-staged build, i.e., on the beta or stable channel\n     let disable_unstable_features = option_env!(\"CFG_DISABLE_UNSTABLE_FEATURES\").is_some();"}, {"sha": "b42e41cbfe6f00735d9ba73347912828030ea86c", "filename": "src/libtest/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6054a30370209472f2af45d2a84a9a9796b3c64a/src%2Flibtest%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6054a30370209472f2af45d2a84a9a9796b3c64a/src%2Flibtest%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibtest%2Flib.rs?ref=6054a30370209472f2af45d2a84a9a9796b3c64a", "patch": "@@ -13,7 +13,7 @@\n // running tests while providing a base that other test frameworks may\n // build off of.\n \n-// N.B., this is also specified in this crate's Cargo.toml, but libsyntax contains logic specific to\n+// N.B., this is also specified in this crate's Cargo.toml, but librustc_ast contains logic specific to\n // this crate, which relies on this attribute (rather than the value of `--crate-name` passed by\n // cargo) to detect this crate.\n "}, {"sha": "5691d173569a7651e7893be036455ec6296f0dcc", "filename": "src/test/rustdoc/comment-in-doctest.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6054a30370209472f2af45d2a84a9a9796b3c64a/src%2Ftest%2Frustdoc%2Fcomment-in-doctest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6054a30370209472f2af45d2a84a9a9796b3c64a/src%2Ftest%2Frustdoc%2Fcomment-in-doctest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fcomment-in-doctest.rs?ref=6054a30370209472f2af45d2a84a9a9796b3c64a", "patch": "@@ -1,7 +1,7 @@\n // compile-flags:--test\n \n // comments, both doc comments and regular ones, used to trick rustdoc's doctest parser into\n-// thinking that everything after it was part of the regular program. combined with the libsyntax\n+// thinking that everything after it was part of the regular program. combined with the librustc_ast\n // parser loop failing to detect the manual main function, it would wrap everything in `fn main`,\n // which would cause the doctest to fail as the \"extern crate\" declaration was no longer valid.\n // oddly enough, it would pass in 2018 if a crate was in the extern prelude. see"}, {"sha": "4a0e7135c7cb64186de891296943a7fc8060503e", "filename": "src/test/ui-fulldeps/mod_dir_path_canonicalized.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6054a30370209472f2af45d2a84a9a9796b3c64a/src%2Ftest%2Fui-fulldeps%2Fmod_dir_path_canonicalized.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6054a30370209472f2af45d2a84a9a9796b3c64a/src%2Ftest%2Fui-fulldeps%2Fmod_dir_path_canonicalized.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui-fulldeps%2Fmod_dir_path_canonicalized.rs?ref=6054a30370209472f2af45d2a84a9a9796b3c64a", "patch": "@@ -1,5 +1,5 @@\n // run-pass\n-// Testing that a libsyntax can parse modules with canonicalized base path\n+// Testing that a librustc_ast can parse modules with canonicalized base path\n // ignore-cross-compile\n \n #![feature(rustc_private)]"}, {"sha": "4d26e08d81e9b72f9e984829c7813ecd428682ff", "filename": "src/test/ui-fulldeps/plugin-as-extern-crate.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6054a30370209472f2af45d2a84a9a9796b3c64a/src%2Ftest%2Fui-fulldeps%2Fplugin-as-extern-crate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6054a30370209472f2af45d2a84a9a9796b3c64a/src%2Ftest%2Fui-fulldeps%2Fplugin-as-extern-crate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui-fulldeps%2Fplugin-as-extern-crate.rs?ref=6054a30370209472f2af45d2a84a9a9796b3c64a", "patch": "@@ -3,7 +3,7 @@\n // ignore-cross-compile\n //\n // empty_plugin will not compile on a cross-compiled target because\n-// libsyntax is not compiled for it.\n+// librustc_ast is not compiled for it.\n \n extern crate empty_plugin; // OK, plugin crates are still crates\n "}, {"sha": "486683d12d604152a593d96579ed1ea06c1bcd01", "filename": "src/test/ui/issues/issue-22777.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6054a30370209472f2af45d2a84a9a9796b3c64a/src%2Ftest%2Fui%2Fissues%2Fissue-22777.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6054a30370209472f2af45d2a84a9a9796b3c64a/src%2Ftest%2Fui%2Fissues%2Fissue-22777.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-22777.rs?ref=6054a30370209472f2af45d2a84a9a9796b3c64a", "patch": "@@ -1,5 +1,5 @@\n // check-pass\n-// This test is reduced from libsyntax.  It is just checking that we\n+// This test is reduced from librustc_ast.  It is just checking that we\n // can successfully deal with a \"deep\" structure, which the drop-check\n // was hitting a recursion limit on at one point.\n "}, {"sha": "b8a3ad4548f4bc6439b0c396c642b135334124da", "filename": "src/test/ui/regions/regions-trait-object-1.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6054a30370209472f2af45d2a84a9a9796b3c64a/src%2Ftest%2Fui%2Fregions%2Fregions-trait-object-1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6054a30370209472f2af45d2a84a9a9796b3c64a/src%2Ftest%2Fui%2Fregions%2Fregions-trait-object-1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fregions%2Fregions-trait-object-1.rs?ref=6054a30370209472f2af45d2a84a9a9796b3c64a", "patch": "@@ -1,6 +1,6 @@\n // run-pass\n // This is a regression test for something that only came up while\n-// attempting to bootstrap libsyntax; it is adapted from\n+// attempting to bootstrap librustc_ast; it is adapted from\n // `syntax::ext::tt::generic_extension`.\n \n "}, {"sha": "f11394bd95f1f8cd5280887473751fae11fe6195", "filename": "src/tools/tidy/src/pal.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6054a30370209472f2af45d2a84a9a9796b3c64a/src%2Ftools%2Ftidy%2Fsrc%2Fpal.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6054a30370209472f2af45d2a84a9a9796b3c64a/src%2Ftools%2Ftidy%2Fsrc%2Fpal.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Ftidy%2Fsrc%2Fpal.rs?ref=6054a30370209472f2af45d2a84a9a9796b3c64a", "patch": "@@ -76,7 +76,7 @@ const EXCEPTION_PATHS: &[&str] = &[\n     \"src/tools\",\n     \"src/librustc\",\n     \"src/librustdoc\",\n-    \"src/libsyntax\",\n+    \"src/librustc_ast\",\n     \"src/bootstrap\",\n ];\n "}]}