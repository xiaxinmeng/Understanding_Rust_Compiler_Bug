{"sha": "1f0e1a043959461afd061be7ff92362492b2c85d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjFmMGUxYTA0Mzk1OTQ2MWFmZDA2MWJlN2ZmOTIzNjI0OTJiMmM4NWQ=", "commit": {"author": {"name": "Robin Kruppe", "email": "robin.kruppe@gmail.com", "date": "2018-02-14T23:06:14Z"}, "committer": {"name": "Robin Kruppe", "email": "robin.kruppe@gmail.com", "date": "2018-02-15T16:47:53Z"}, "message": "Convert compile-fail/lint-ctypes.rs to ui test", "tree": {"sha": "0c29ec7c34971063550adc542c70b437198023a7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0c29ec7c34971063550adc542c70b437198023a7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1f0e1a043959461afd061be7ff92362492b2c85d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1f0e1a043959461afd061be7ff92362492b2c85d", "html_url": "https://github.com/rust-lang/rust/commit/1f0e1a043959461afd061be7ff92362492b2c85d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1f0e1a043959461afd061be7ff92362492b2c85d/comments", "author": null, "committer": null, "parents": [{"sha": "1670a532dd769763f1d6ad9e5d624ec31361a098", "url": "https://api.github.com/repos/rust-lang/rust/commits/1670a532dd769763f1d6ad9e5d624ec31361a098", "html_url": "https://github.com/rust-lang/rust/commit/1670a532dd769763f1d6ad9e5d624ec31361a098"}], "stats": {"total": 128, "additions": 128, "deletions": 0}, "files": [{"sha": "c22239dee0a80868c82144338eb9d6dd817ba3ee", "filename": "src/test/ui/lint-ctypes.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/1f0e1a043959461afd061be7ff92362492b2c85d/src%2Ftest%2Fui%2Flint-ctypes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f0e1a043959461afd061be7ff92362492b2c85d/src%2Ftest%2Fui%2Flint-ctypes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint-ctypes.rs?ref=1f0e1a043959461afd061be7ff92362492b2c85d", "previous_filename": "src/test/compile-fail/lint-ctypes.rs"}, {"sha": "21aadde8ac87cebef3cb366876b390fb7f548fb5", "filename": "src/test/ui/lint-ctypes.stderr", "status": "added", "additions": 128, "deletions": 0, "changes": 128, "blob_url": "https://github.com/rust-lang/rust/blob/1f0e1a043959461afd061be7ff92362492b2c85d/src%2Ftest%2Fui%2Flint-ctypes.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1f0e1a043959461afd061be7ff92362492b2c85d/src%2Ftest%2Fui%2Flint-ctypes.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint-ctypes.stderr?ref=1f0e1a043959461afd061be7ff92362492b2c85d", "patch": "@@ -0,0 +1,128 @@\n+error: found struct without foreign-function-safe representation annotation in foreign module, consider adding a #[repr(C)] attribute to the type\n+  --> $DIR/lint-ctypes.rs:54:28\n+   |\n+54 |     pub fn ptr_type1(size: *const Foo); //~ ERROR: found struct without\n+   |                            ^^^^^^^^^^\n+   |\n+note: lint level defined here\n+  --> $DIR/lint-ctypes.rs:11:9\n+   |\n+11 | #![deny(improper_ctypes)]\n+   |         ^^^^^^^^^^^^^^^\n+\n+error: found struct without foreign-function-safe representation annotation in foreign module, consider adding a #[repr(C)] attribute to the type\n+  --> $DIR/lint-ctypes.rs:55:28\n+   |\n+55 |     pub fn ptr_type2(size: *const Foo); //~ ERROR: found struct without\n+   |                            ^^^^^^^^^^\n+\n+error: found Rust slice type in foreign module, consider using a raw pointer instead\n+  --> $DIR/lint-ctypes.rs:56:26\n+   |\n+56 |     pub fn slice_type(p: &[u32]); //~ ERROR: found Rust slice type\n+   |                          ^^^^^^\n+\n+error: found Rust type `str` in foreign module; consider using a `*const libc::c_char`\n+  --> $DIR/lint-ctypes.rs:57:24\n+   |\n+57 |     pub fn str_type(p: &str); //~ ERROR: found Rust type\n+   |                        ^^^^\n+\n+error: found struct without foreign-function-safe representation annotation in foreign module, consider adding a #[repr(C)] attribute to the type\n+  --> $DIR/lint-ctypes.rs:58:24\n+   |\n+58 |     pub fn box_type(p: Box<u32>); //~ ERROR found struct without\n+   |                        ^^^^^^^^\n+\n+error: found Rust type `char` in foreign module, while `u32` or `libc::wchar_t` should be used\n+  --> $DIR/lint-ctypes.rs:59:25\n+   |\n+59 |     pub fn char_type(p: char); //~ ERROR found Rust type\n+   |                         ^^^^\n+\n+error: found Rust type `i128` in foreign module, but 128-bit integers don't currently have a known stable ABI\n+  --> $DIR/lint-ctypes.rs:60:25\n+   |\n+60 |     pub fn i128_type(p: i128); //~ ERROR found Rust type\n+   |                         ^^^^\n+\n+error: found Rust type `u128` in foreign module, but 128-bit integers don't currently have a known stable ABI\n+  --> $DIR/lint-ctypes.rs:61:25\n+   |\n+61 |     pub fn u128_type(p: u128); //~ ERROR found Rust type\n+   |                         ^^^^\n+\n+error: found Rust trait type in foreign module, consider using a raw pointer instead\n+  --> $DIR/lint-ctypes.rs:62:26\n+   |\n+62 |     pub fn trait_type(p: &Clone); //~ ERROR found Rust trait type\n+   |                          ^^^^^^\n+\n+error: found Rust tuple type in foreign module; consider using a struct instead\n+  --> $DIR/lint-ctypes.rs:63:26\n+   |\n+63 |     pub fn tuple_type(p: (i32, i32)); //~ ERROR found Rust tuple type\n+   |                          ^^^^^^^^^^\n+\n+error: found Rust tuple type in foreign module; consider using a struct instead\n+  --> $DIR/lint-ctypes.rs:64:27\n+   |\n+64 |     pub fn tuple_type2(p: I32Pair); //~ ERROR found Rust tuple type\n+   |                           ^^^^^^^\n+\n+error: found zero-size struct in foreign module, consider adding a member to this struct\n+  --> $DIR/lint-ctypes.rs:65:25\n+   |\n+65 |     pub fn zero_size(p: ZeroSize); //~ ERROR found zero-size struct\n+   |                         ^^^^^^^^\n+\n+error: found zero-sized type composed only of phantom-data in a foreign-function.\n+  --> $DIR/lint-ctypes.rs:66:33\n+   |\n+66 |     pub fn zero_size_phantom(p: ZeroSizeWithPhantomData); //~ ERROR found zero-sized type\n+   |                                 ^^^^^^^^^^^^^^^^^^^^^^^\n+\n+error: found zero-sized type composed only of phantom-data in a foreign-function.\n+  --> $DIR/lint-ctypes.rs:68:12\n+   |\n+68 |         -> ::std::marker::PhantomData<bool>; //~ ERROR: found zero-sized type\n+   |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+\n+error: found function pointer with Rust calling convention in foreign module; consider using an `extern` function pointer\n+  --> $DIR/lint-ctypes.rs:69:23\n+   |\n+69 |     pub fn fn_type(p: RustFn); //~ ERROR found function pointer with Rust\n+   |                       ^^^^^^\n+\n+error: found function pointer with Rust calling convention in foreign module; consider using an `extern` function pointer\n+  --> $DIR/lint-ctypes.rs:70:24\n+   |\n+70 |     pub fn fn_type2(p: fn()); //~ ERROR found function pointer with Rust\n+   |                        ^^^^\n+\n+error: found struct without foreign-function-safe representation annotation in foreign module, consider adding a #[repr(C)] attribute to the type\n+  --> $DIR/lint-ctypes.rs:71:28\n+   |\n+71 |     pub fn fn_contained(p: RustBadRet); //~ ERROR: found struct without\n+   |                            ^^^^^^^^^^\n+\n+error: found non-foreign-function-safe member in struct marked #[repr(C)]: found Rust type `i128` in foreign module, but 128-bit integers don't currently have a known stable ABI\n+  --> $DIR/lint-ctypes.rs:72:32\n+   |\n+72 |     pub fn transparent_i128(p: TransparentI128); //~ ERROR: found Rust type `i128`\n+   |                                ^^^^^^^^^^^^^^^\n+\n+error: found non-foreign-function-safe member in struct marked #[repr(C)]: found Rust type `str` in foreign module; consider using a `*const libc::c_char`\n+  --> $DIR/lint-ctypes.rs:73:31\n+   |\n+73 |     pub fn transparent_str(p: TransparentStr); //~ ERROR: found Rust type `str`\n+   |                               ^^^^^^^^^^^^^^\n+\n+error: found non-foreign-function-safe member in struct marked #[repr(C)]: found struct without foreign-function-safe representation annotation in foreign module, consider adding a #[repr(C)] attribute to the type\n+  --> $DIR/lint-ctypes.rs:74:30\n+   |\n+74 |     pub fn transparent_fn(p: TransparentBadFn); //~ ERROR: found struct without\n+   |                              ^^^^^^^^^^^^^^^^\n+\n+error: aborting due to 20 previous errors\n+"}]}