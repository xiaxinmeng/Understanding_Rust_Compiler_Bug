{"sha": "b6f3dbb65d0be4ecf94bb87f859db1f66b79f74d", "node_id": "MDY6Q29tbWl0NzI0NzEyOmI2ZjNkYmI2NWQwYmU0ZWNmOTRiYjg3Zjg1OWRiMWY2NmI3OWY3NGQ=", "commit": {"author": {"name": "Mara Bos", "email": "m-ou.se@m-ou.se", "date": "2021-05-05T14:40:06Z"}, "committer": {"name": "Mara Bos", "email": "m-ou.se@m-ou.se", "date": "2021-05-05T14:40:06Z"}, "message": "Bump map_into_keys_values stable version to 1.54.0.", "tree": {"sha": "5eee4238a24e385ad2d48ed386c4fa53633826b9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5eee4238a24e385ad2d48ed386c4fa53633826b9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b6f3dbb65d0be4ecf94bb87f859db1f66b79f74d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b6f3dbb65d0be4ecf94bb87f859db1f66b79f74d", "html_url": "https://github.com/rust-lang/rust/commit/b6f3dbb65d0be4ecf94bb87f859db1f66b79f74d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b6f3dbb65d0be4ecf94bb87f859db1f66b79f74d/comments", "author": {"login": "m-ou-se", "id": 783247, "node_id": "MDQ6VXNlcjc4MzI0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/783247?v=4", "gravatar_id": "", "url": "https://api.github.com/users/m-ou-se", "html_url": "https://github.com/m-ou-se", "followers_url": "https://api.github.com/users/m-ou-se/followers", "following_url": "https://api.github.com/users/m-ou-se/following{/other_user}", "gists_url": "https://api.github.com/users/m-ou-se/gists{/gist_id}", "starred_url": "https://api.github.com/users/m-ou-se/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/m-ou-se/subscriptions", "organizations_url": "https://api.github.com/users/m-ou-se/orgs", "repos_url": "https://api.github.com/users/m-ou-se/repos", "events_url": "https://api.github.com/users/m-ou-se/events{/privacy}", "received_events_url": "https://api.github.com/users/m-ou-se/received_events", "type": "User", "site_admin": false}, "committer": {"login": "m-ou-se", "id": 783247, "node_id": "MDQ6VXNlcjc4MzI0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/783247?v=4", "gravatar_id": "", "url": "https://api.github.com/users/m-ou-se", "html_url": "https://github.com/m-ou-se", "followers_url": "https://api.github.com/users/m-ou-se/followers", "following_url": "https://api.github.com/users/m-ou-se/following{/other_user}", "gists_url": "https://api.github.com/users/m-ou-se/gists{/gist_id}", "starred_url": "https://api.github.com/users/m-ou-se/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/m-ou-se/subscriptions", "organizations_url": "https://api.github.com/users/m-ou-se/orgs", "repos_url": "https://api.github.com/users/m-ou-se/repos", "events_url": "https://api.github.com/users/m-ou-se/events{/privacy}", "received_events_url": "https://api.github.com/users/m-ou-se/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "33cc3f5116e2f1813a54d5038151e0898a670af2", "url": "https://api.github.com/repos/rust-lang/rust/commits/33cc3f5116e2f1813a54d5038151e0898a670af2", "html_url": "https://github.com/rust-lang/rust/commit/33cc3f5116e2f1813a54d5038151e0898a670af2"}], "stats": {"total": 52, "additions": 26, "deletions": 26}, "files": [{"sha": "0a46387c34e9c09fae28bd7628f8825605b93cbf", "filename": "library/alloc/src/collections/btree/map.rs", "status": "modified", "additions": 14, "deletions": 14, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/b6f3dbb65d0be4ecf94bb87f859db1f66b79f74d/library%2Falloc%2Fsrc%2Fcollections%2Fbtree%2Fmap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b6f3dbb65d0be4ecf94bb87f859db1f66b79f74d/library%2Falloc%2Fsrc%2Fcollections%2Fbtree%2Fmap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Falloc%2Fsrc%2Fcollections%2Fbtree%2Fmap.rs?ref=b6f3dbb65d0be4ecf94bb87f859db1f66b79f74d", "patch": "@@ -398,12 +398,12 @@ impl<K, V: fmt::Debug> fmt::Debug for ValuesMut<'_, K, V> {\n /// See its documentation for more.\n ///\n /// [`into_keys`]: BTreeMap::into_keys\n-#[stable(feature = \"map_into_keys_values\", since = \"1.53.0\")]\n+#[stable(feature = \"map_into_keys_values\", since = \"1.54.0\")]\n pub struct IntoKeys<K, V> {\n     inner: IntoIter<K, V>,\n }\n \n-#[stable(feature = \"map_into_keys_values\", since = \"1.53.0\")]\n+#[stable(feature = \"map_into_keys_values\", since = \"1.54.0\")]\n impl<K: fmt::Debug, V> fmt::Debug for IntoKeys<K, V> {\n     fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {\n         f.debug_list().entries(self.inner.iter().map(|(key, _)| key)).finish()\n@@ -416,12 +416,12 @@ impl<K: fmt::Debug, V> fmt::Debug for IntoKeys<K, V> {\n /// See its documentation for more.\n ///\n /// [`into_values`]: BTreeMap::into_values\n-#[stable(feature = \"map_into_keys_values\", since = \"1.53.0\")]\n+#[stable(feature = \"map_into_keys_values\", since = \"1.54.0\")]\n pub struct IntoValues<K, V> {\n     inner: IntoIter<K, V>,\n }\n \n-#[stable(feature = \"map_into_keys_values\", since = \"1.53.0\")]\n+#[stable(feature = \"map_into_keys_values\", since = \"1.54.0\")]\n impl<K, V: fmt::Debug> fmt::Debug for IntoValues<K, V> {\n     fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {\n         f.debug_list().entries(self.inner.iter().map(|(_, val)| val)).finish()\n@@ -1252,7 +1252,7 @@ impl<K, V> BTreeMap<K, V> {\n     /// assert_eq!(keys, [1, 2]);\n     /// ```\n     #[inline]\n-    #[stable(feature = \"map_into_keys_values\", since = \"1.53.0\")]\n+    #[stable(feature = \"map_into_keys_values\", since = \"1.54.0\")]\n     pub fn into_keys(self) -> IntoKeys<K, V> {\n         IntoKeys { inner: self.into_iter() }\n     }\n@@ -1274,7 +1274,7 @@ impl<K, V> BTreeMap<K, V> {\n     /// assert_eq!(values, [\"hello\", \"goodbye\"]);\n     /// ```\n     #[inline]\n-    #[stable(feature = \"map_into_keys_values\", since = \"1.53.0\")]\n+    #[stable(feature = \"map_into_keys_values\", since = \"1.54.0\")]\n     pub fn into_values(self) -> IntoValues<K, V> {\n         IntoValues { inner: self.into_iter() }\n     }\n@@ -1774,7 +1774,7 @@ impl<'a, K, V> Range<'a, K, V> {\n     }\n }\n \n-#[stable(feature = \"map_into_keys_values\", since = \"1.53.0\")]\n+#[stable(feature = \"map_into_keys_values\", since = \"1.54.0\")]\n impl<K, V> Iterator for IntoKeys<K, V> {\n     type Item = K;\n \n@@ -1799,24 +1799,24 @@ impl<K, V> Iterator for IntoKeys<K, V> {\n     }\n }\n \n-#[stable(feature = \"map_into_keys_values\", since = \"1.53.0\")]\n+#[stable(feature = \"map_into_keys_values\", since = \"1.54.0\")]\n impl<K, V> DoubleEndedIterator for IntoKeys<K, V> {\n     fn next_back(&mut self) -> Option<K> {\n         self.inner.next_back().map(|(k, _)| k)\n     }\n }\n \n-#[stable(feature = \"map_into_keys_values\", since = \"1.53.0\")]\n+#[stable(feature = \"map_into_keys_values\", since = \"1.54.0\")]\n impl<K, V> ExactSizeIterator for IntoKeys<K, V> {\n     fn len(&self) -> usize {\n         self.inner.len()\n     }\n }\n \n-#[stable(feature = \"map_into_keys_values\", since = \"1.53.0\")]\n+#[stable(feature = \"map_into_keys_values\", since = \"1.54.0\")]\n impl<K, V> FusedIterator for IntoKeys<K, V> {}\n \n-#[stable(feature = \"map_into_keys_values\", since = \"1.53.0\")]\n+#[stable(feature = \"map_into_keys_values\", since = \"1.54.0\")]\n impl<K, V> Iterator for IntoValues<K, V> {\n     type Item = V;\n \n@@ -1833,21 +1833,21 @@ impl<K, V> Iterator for IntoValues<K, V> {\n     }\n }\n \n-#[stable(feature = \"map_into_keys_values\", since = \"1.53.0\")]\n+#[stable(feature = \"map_into_keys_values\", since = \"1.54.0\")]\n impl<K, V> DoubleEndedIterator for IntoValues<K, V> {\n     fn next_back(&mut self) -> Option<V> {\n         self.inner.next_back().map(|(_, v)| v)\n     }\n }\n \n-#[stable(feature = \"map_into_keys_values\", since = \"1.53.0\")]\n+#[stable(feature = \"map_into_keys_values\", since = \"1.54.0\")]\n impl<K, V> ExactSizeIterator for IntoValues<K, V> {\n     fn len(&self) -> usize {\n         self.inner.len()\n     }\n }\n \n-#[stable(feature = \"map_into_keys_values\", since = \"1.53.0\")]\n+#[stable(feature = \"map_into_keys_values\", since = \"1.54.0\")]\n impl<K, V> FusedIterator for IntoValues<K, V> {}\n \n #[stable(feature = \"btree_range\", since = \"1.17.0\")]"}, {"sha": "84c7e2e9ea2432ef66322173cdf95e3ee819c779", "filename": "library/std/src/collections/hash/map.rs", "status": "modified", "additions": 12, "deletions": 12, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/b6f3dbb65d0be4ecf94bb87f859db1f66b79f74d/library%2Fstd%2Fsrc%2Fcollections%2Fhash%2Fmap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b6f3dbb65d0be4ecf94bb87f859db1f66b79f74d/library%2Fstd%2Fsrc%2Fcollections%2Fhash%2Fmap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fcollections%2Fhash%2Fmap.rs?ref=b6f3dbb65d0be4ecf94bb87f859db1f66b79f74d", "patch": "@@ -972,7 +972,7 @@ where\n     /// let vec: Vec<&str> = map.into_keys().collect();\n     /// ```\n     #[inline]\n-    #[stable(feature = \"map_into_keys_values\", since = \"1.53.0\")]\n+    #[stable(feature = \"map_into_keys_values\", since = \"1.54.0\")]\n     pub fn into_keys(self) -> IntoKeys<K, V> {\n         IntoKeys { inner: self.into_iter() }\n     }\n@@ -994,7 +994,7 @@ where\n     /// let vec: Vec<i32> = map.into_values().collect();\n     /// ```\n     #[inline]\n-    #[stable(feature = \"map_into_keys_values\", since = \"1.53.0\")]\n+    #[stable(feature = \"map_into_keys_values\", since = \"1.54.0\")]\n     pub fn into_values(self) -> IntoValues<K, V> {\n         IntoValues { inner: self.into_iter() }\n     }\n@@ -1409,7 +1409,7 @@ pub struct ValuesMut<'a, K: 'a, V: 'a> {\n /// map.insert(\"a\", 1);\n /// let iter_keys = map.into_keys();\n /// ```\n-#[stable(feature = \"map_into_keys_values\", since = \"1.53.0\")]\n+#[stable(feature = \"map_into_keys_values\", since = \"1.54.0\")]\n pub struct IntoKeys<K, V> {\n     inner: IntoIter<K, V>,\n }\n@@ -1430,7 +1430,7 @@ pub struct IntoKeys<K, V> {\n /// map.insert(\"a\", 1);\n /// let iter_keys = map.into_values();\n /// ```\n-#[stable(feature = \"map_into_keys_values\", since = \"1.53.0\")]\n+#[stable(feature = \"map_into_keys_values\", since = \"1.54.0\")]\n pub struct IntoValues<K, V> {\n     inner: IntoIter<K, V>,\n }\n@@ -2131,7 +2131,7 @@ impl<K, V: fmt::Debug> fmt::Debug for ValuesMut<'_, K, V> {\n     }\n }\n \n-#[stable(feature = \"map_into_keys_values\", since = \"1.53.0\")]\n+#[stable(feature = \"map_into_keys_values\", since = \"1.54.0\")]\n impl<K, V> Iterator for IntoKeys<K, V> {\n     type Item = K;\n \n@@ -2144,24 +2144,24 @@ impl<K, V> Iterator for IntoKeys<K, V> {\n         self.inner.size_hint()\n     }\n }\n-#[stable(feature = \"map_into_keys_values\", since = \"1.53.0\")]\n+#[stable(feature = \"map_into_keys_values\", since = \"1.54.0\")]\n impl<K, V> ExactSizeIterator for IntoKeys<K, V> {\n     #[inline]\n     fn len(&self) -> usize {\n         self.inner.len()\n     }\n }\n-#[stable(feature = \"map_into_keys_values\", since = \"1.53.0\")]\n+#[stable(feature = \"map_into_keys_values\", since = \"1.54.0\")]\n impl<K, V> FusedIterator for IntoKeys<K, V> {}\n \n-#[stable(feature = \"map_into_keys_values\", since = \"1.53.0\")]\n+#[stable(feature = \"map_into_keys_values\", since = \"1.54.0\")]\n impl<K: Debug, V> fmt::Debug for IntoKeys<K, V> {\n     fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {\n         f.debug_list().entries(self.inner.iter().map(|(k, _)| k)).finish()\n     }\n }\n \n-#[stable(feature = \"map_into_keys_values\", since = \"1.53.0\")]\n+#[stable(feature = \"map_into_keys_values\", since = \"1.54.0\")]\n impl<K, V> Iterator for IntoValues<K, V> {\n     type Item = V;\n \n@@ -2174,17 +2174,17 @@ impl<K, V> Iterator for IntoValues<K, V> {\n         self.inner.size_hint()\n     }\n }\n-#[stable(feature = \"map_into_keys_values\", since = \"1.53.0\")]\n+#[stable(feature = \"map_into_keys_values\", since = \"1.54.0\")]\n impl<K, V> ExactSizeIterator for IntoValues<K, V> {\n     #[inline]\n     fn len(&self) -> usize {\n         self.inner.len()\n     }\n }\n-#[stable(feature = \"map_into_keys_values\", since = \"1.53.0\")]\n+#[stable(feature = \"map_into_keys_values\", since = \"1.54.0\")]\n impl<K, V> FusedIterator for IntoValues<K, V> {}\n \n-#[stable(feature = \"map_into_keys_values\", since = \"1.53.0\")]\n+#[stable(feature = \"map_into_keys_values\", since = \"1.54.0\")]\n impl<K, V: Debug> fmt::Debug for IntoValues<K, V> {\n     fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {\n         f.debug_list().entries(self.inner.iter().map(|(_, v)| v)).finish()"}]}