{"sha": "7c34f2da577a0b3b8effdbcc0705499bc2a6861f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjdjMzRmMmRhNTc3YTBiM2I4ZWZmZGJjYzA3MDU0OTliYzJhNjg2MWY=", "commit": {"author": {"name": "Alexander Regueiro", "email": "alexreg@me.com", "date": "2018-09-18T03:26:39Z"}, "committer": {"name": "Oliver Scherer", "email": "github35764891676564198441@oli-obk.de", "date": "2018-10-25T14:47:35Z"}, "message": "Addressed minor issues brought up in review.", "tree": {"sha": "c94f3c2d55d6ac78bf93d523a8e04c922a471b5f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c94f3c2d55d6ac78bf93d523a8e04c922a471b5f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7c34f2da577a0b3b8effdbcc0705499bc2a6861f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7c34f2da577a0b3b8effdbcc0705499bc2a6861f", "html_url": "https://github.com/rust-lang/rust/commit/7c34f2da577a0b3b8effdbcc0705499bc2a6861f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7c34f2da577a0b3b8effdbcc0705499bc2a6861f/comments", "author": {"login": "alexreg", "id": 67036, "node_id": "MDQ6VXNlcjY3MDM2", "avatar_url": "https://avatars.githubusercontent.com/u/67036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexreg", "html_url": "https://github.com/alexreg", "followers_url": "https://api.github.com/users/alexreg/followers", "following_url": "https://api.github.com/users/alexreg/following{/other_user}", "gists_url": "https://api.github.com/users/alexreg/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexreg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexreg/subscriptions", "organizations_url": "https://api.github.com/users/alexreg/orgs", "repos_url": "https://api.github.com/users/alexreg/repos", "events_url": "https://api.github.com/users/alexreg/events{/privacy}", "received_events_url": "https://api.github.com/users/alexreg/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bf8471aeda0a00c37a4798942ef9d5ae551eef20", "url": "https://api.github.com/repos/rust-lang/rust/commits/bf8471aeda0a00c37a4798942ef9d5ae551eef20", "html_url": "https://github.com/rust-lang/rust/commit/bf8471aeda0a00c37a4798942ef9d5ae551eef20"}], "stats": {"total": 30, "additions": 15, "deletions": 15}, "files": [{"sha": "c501ef8ecebadf2199ca097c32380c2b197dbe3c", "filename": "src/librustc_mir/const_eval.rs", "status": "modified", "additions": 9, "deletions": 6, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/7c34f2da577a0b3b8effdbcc0705499bc2a6861f/src%2Flibrustc_mir%2Fconst_eval.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7c34f2da577a0b3b8effdbcc0705499bc2a6861f/src%2Flibrustc_mir%2Fconst_eval.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fconst_eval.rs?ref=7c34f2da577a0b3b8effdbcc0705499bc2a6861f", "patch": "@@ -597,12 +597,14 @@ pub fn const_eval_raw_provider<'a, 'tcx>(\n     tcx: TyCtxt<'a, 'tcx, 'tcx>,\n     key: ty::ParamEnvAnd<'tcx, GlobalId<'tcx>>,\n ) -> ::rustc::mir::interpret::ConstEvalResult<'tcx> {\n-    // so we do a small trick here. We check whether we can evaluate the constant in the more\n-    // restrictive `Reveal::UserFacing`, which most likely already was computed. In a large\n-    // percentage of constants that will already have succeeded. Only associated constants of\n-    // generic functions will fail due to not enough monomorphization information being available\n-\n-    // in case we fail in the `UserFacing` variant, we just do the real computation.\n+    // Because the constant is computed twice (once per value of `Reveal`), we are at risk of\n+    // reporting the same error twice here. To resolve this, we check whether we can evaluate the\n+    // constant in the more restrictive `Reveal::UserFacing`, which most likely already was\n+    // computed. For a large percentage of constants that will already have succeeded. Only\n+    // associated constants of generic functions will fail due to not enough monomorphization\n+    // information being available.\n+\n+    // In case we fail in the `UserFacing` variant, we just do the real computation.\n     if key.param_env.reveal == Reveal::All {\n         let mut key = key.clone();\n         key.param_env.reveal = Reveal::UserFacing;\n@@ -614,6 +616,7 @@ pub fn const_eval_raw_provider<'a, 'tcx>(\n         }\n     }\n     trace!(\"const eval: {:?}\", key);\n+\n     let cid = key.value;\n     let def_id = cid.instance.def.def_id();\n "}, {"sha": "64a20d498768e131b8f4a60885e461a9b78a4b24", "filename": "src/test/rustdoc/const-evalutation-ice.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7c34f2da577a0b3b8effdbcc0705499bc2a6861f/src%2Ftest%2Frustdoc%2Fconst-evalutation-ice.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7c34f2da577a0b3b8effdbcc0705499bc2a6861f/src%2Ftest%2Frustdoc%2Fconst-evalutation-ice.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fconst-evalutation-ice.rs?ref=7c34f2da577a0b3b8effdbcc0705499bc2a6861f", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// Just check if we don't get an ICE for the _S type.\n+// Just check we don't get an ICE for the S type.\n \n use std::cell::Cell;\n use std::mem;"}, {"sha": "dca8f3c4745838b84046faf9aa01c7b7abdc91d4", "filename": "src/test/ui/consts/const-eval/promoted_const_fn_fail_deny_const_err.rs", "status": "modified", "additions": 4, "deletions": 6, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/7c34f2da577a0b3b8effdbcc0705499bc2a6861f/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fpromoted_const_fn_fail_deny_const_err.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7c34f2da577a0b3b8effdbcc0705499bc2a6861f/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fpromoted_const_fn_fail_deny_const_err.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fpromoted_const_fn_fail_deny_const_err.rs?ref=7c34f2da577a0b3b8effdbcc0705499bc2a6861f", "patch": "@@ -19,17 +19,15 @@ union Bar {\n \n const fn bar() -> u8 {\n     unsafe {\n-        // this will error as long as this test\n-        // is run on a system whose pointers need more\n-        // than 8 bits\n+        // This will error as long as this test is run on a system whose\n+        // pointers need more than 8 bits.\n         Bar { a: &42 }.b as u8\n     }\n }\n \n fn main() {\n-    // FIXME(oli-obk): this should panic at runtime\n-    // this will actually compile, but then\n-    // abort at runtime (not panic, hard abort).\n+    // This will compile, but then hard-abort at runtime.\n+    // FIXME(oli-obk): this should instead panic (not hard-abort) at runtime.\n     let x: &'static u8 = &(bar() + 1);\n     let y = *x;\n     unreachable!();"}, {"sha": "8e21f909954764316e8c114a4381e1d0a462f63a", "filename": "src/test/ui/consts/const-eval/promoted_const_fn_fail_deny_const_err.stderr", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/7c34f2da577a0b3b8effdbcc0705499bc2a6861f/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fpromoted_const_fn_fail_deny_const_err.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/7c34f2da577a0b3b8effdbcc0705499bc2a6861f/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fpromoted_const_fn_fail_deny_const_err.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fpromoted_const_fn_fail_deny_const_err.stderr?ref=7c34f2da577a0b3b8effdbcc0705499bc2a6861f", "patch": "@@ -1,5 +1,5 @@\n error: reaching this expression at runtime will panic or abort\n-  --> $DIR/promoted_const_fn_fail_deny_const_err.rs:33:26\n+  --> $DIR/promoted_const_fn_fail_deny_const_err.rs:31:26\n    |\n LL |         Bar { a: &42 }.b as u8\n    |         ---------------------- a raw memory access tried to access part of a pointer value as raw bytes\n@@ -16,4 +16,3 @@ LL | #![deny(const_err)]\n    |         ^^^^^^^^^\n \n error: aborting due to previous error\n-"}]}