{"sha": "e2344e78f36f399b94893f4947c943101b29958b", "node_id": "C_kwDOAAsO6NoAKGUyMzQ0ZTc4ZjM2ZjM5OWI5NDg5M2Y0OTQ3Yzk0MzEwMWIyOTk1OGI", "commit": {"author": {"name": "Lukas Wirth", "email": "lukastw97@gmail.com", "date": "2022-04-27T17:08:50Z"}, "committer": {"name": "Lukas Wirth", "email": "lukastw97@gmail.com", "date": "2022-04-27T17:08:50Z"}, "message": "fix: Use pattern recovery set when parsing ident patterns", "tree": {"sha": "c3e4a3eec0fd6fc8fa015e1f885d3489d8b34f1a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c3e4a3eec0fd6fc8fa015e1f885d3489d8b34f1a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e2344e78f36f399b94893f4947c943101b29958b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e2344e78f36f399b94893f4947c943101b29958b", "html_url": "https://github.com/rust-lang/rust/commit/e2344e78f36f399b94893f4947c943101b29958b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e2344e78f36f399b94893f4947c943101b29958b/comments", "author": {"login": "Veykril", "id": 3757771, "node_id": "MDQ6VXNlcjM3NTc3NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/3757771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veykril", "html_url": "https://github.com/Veykril", "followers_url": "https://api.github.com/users/Veykril/followers", "following_url": "https://api.github.com/users/Veykril/following{/other_user}", "gists_url": "https://api.github.com/users/Veykril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veykril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veykril/subscriptions", "organizations_url": "https://api.github.com/users/Veykril/orgs", "repos_url": "https://api.github.com/users/Veykril/repos", "events_url": "https://api.github.com/users/Veykril/events{/privacy}", "received_events_url": "https://api.github.com/users/Veykril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Veykril", "id": 3757771, "node_id": "MDQ6VXNlcjM3NTc3NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/3757771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veykril", "html_url": "https://github.com/Veykril", "followers_url": "https://api.github.com/users/Veykril/followers", "following_url": "https://api.github.com/users/Veykril/following{/other_user}", "gists_url": "https://api.github.com/users/Veykril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veykril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veykril/subscriptions", "organizations_url": "https://api.github.com/users/Veykril/orgs", "repos_url": "https://api.github.com/users/Veykril/repos", "events_url": "https://api.github.com/users/Veykril/events{/privacy}", "received_events_url": "https://api.github.com/users/Veykril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1b120216de987f2e7700b7707ef6b5d5b5545d94", "url": "https://api.github.com/repos/rust-lang/rust/commits/1b120216de987f2e7700b7707ef6b5d5b5545d94", "html_url": "https://github.com/rust-lang/rust/commit/1b120216de987f2e7700b7707ef6b5d5b5545d94"}], "stats": {"total": 15, "additions": 6, "deletions": 9}, "files": [{"sha": "1f622b32e5b1b762a2fd54a239a49382e0167ed8", "filename": "crates/parser/src/grammar/patterns.rs", "status": "modified", "additions": 6, "deletions": 9, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/e2344e78f36f399b94893f4947c943101b29958b/crates%2Fparser%2Fsrc%2Fgrammar%2Fpatterns.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e2344e78f36f399b94893f4947c943101b29958b/crates%2Fparser%2Fsrc%2Fgrammar%2Fpatterns.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Fsrc%2Fgrammar%2Fpatterns.rs?ref=e2344e78f36f399b94893f4947c943101b29958b", "patch": "@@ -223,20 +223,16 @@ fn record_pat_field(p: &mut Parser) {\n             p.bump(T![:]);\n             pattern(p);\n         }\n-        T![.] => {\n-            if p.at(T![..]) {\n-                p.bump(T![..]);\n-            } else {\n-                ident_pat(p, false);\n-            }\n-        }\n         T![box] => {\n             // FIXME: not all box patterns should be allowed\n             box_pat(p);\n         }\n-        _ => {\n+        T![ref] | T![mut] | IDENT => {\n             ident_pat(p, false);\n         }\n+        _ => {\n+            p.err_and_bump(\"expected identifier\");\n+        }\n     }\n }\n \n@@ -405,10 +401,11 @@ fn pat_list(p: &mut Parser, ket: SyntaxKind) {\n //     let ref mut f @ g @ _ = ();\n // }\n fn ident_pat(p: &mut Parser, with_at: bool) -> CompletedMarker {\n+    assert!(matches!(p.current(), T![ref] | T![mut] | IDENT));\n     let m = p.start();\n     p.eat(T![ref]);\n     p.eat(T![mut]);\n-    name(p);\n+    name_r(p, PAT_RECOVERY_SET);\n     if with_at && p.eat(T![@]) {\n         pattern_single(p);\n     }"}]}