{"sha": "a0594ebb8baa0544ed0f818c494be20b3c9957a5", "node_id": "MDY6Q29tbWl0NzI0NzEyOmEwNTk0ZWJiOGJhYTA1NDRlZDBmODE4YzQ5NGJlMjBiM2M5OTU3YTU=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2014-05-13T04:02:27Z"}, "committer": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2014-05-15T20:50:50Z"}, "message": "core: Remove the unit module", "tree": {"sha": "a31c91c34c61afd0657356e4a4951990b066a8f9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a31c91c34c61afd0657356e4a4951990b066a8f9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a0594ebb8baa0544ed0f818c494be20b3c9957a5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a0594ebb8baa0544ed0f818c494be20b3c9957a5", "html_url": "https://github.com/rust-lang/rust/commit/a0594ebb8baa0544ed0f818c494be20b3c9957a5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a0594ebb8baa0544ed0f818c494be20b3c9957a5/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "50331595fca761eba8b034a6e73143b01b330c04", "url": "https://api.github.com/repos/rust-lang/rust/commits/50331595fca761eba8b034a6e73143b01b330c04", "html_url": "https://github.com/rust-lang/rust/commit/50331595fca761eba8b034a6e73143b01b330c04"}], "stats": {"total": 69, "additions": 22, "deletions": 47}, "files": [{"sha": "bf02f053336bb9822b6189d4e565e6630a9a94f5", "filename": "src/libcore/cmp.rs", "status": "modified", "additions": 17, "deletions": 1, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/a0594ebb8baa0544ed0f818c494be20b3c9957a5/src%2Flibcore%2Fcmp.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a0594ebb8baa0544ed0f818c494be20b3c9957a5/src%2Flibcore%2Fcmp.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fcmp.rs?ref=a0594ebb8baa0544ed0f818c494be20b3c9957a5", "patch": "@@ -192,7 +192,23 @@ pub fn max<T: TotalOrd>(v1: T, v2: T) -> T {\n // Implementation of Eq/TotalEq for some primitive types\n #[cfg(not(test))]\n mod impls {\n-    use cmp::{Ord, TotalOrd, Eq, TotalEq, Ordering};\n+    use cmp::{Ord, TotalOrd, Eq, TotalEq, Ordering, Equal};\n+\n+    impl Eq for () {\n+        #[inline]\n+        fn eq(&self, _other: &()) -> bool { true }\n+        #[inline]\n+        fn ne(&self, _other: &()) -> bool { false }\n+    }\n+    impl TotalEq for () {}\n+    impl Ord for () {\n+        #[inline]\n+        fn lt(&self, _other: &()) -> bool { false }\n+    }\n+    impl TotalOrd for () {\n+        #[inline]\n+        fn cmp(&self, _other: &()) -> Ordering { Equal }\n+    }\n \n     // & pointers\n     impl<'a, T: Eq> Eq for &'a T {"}, {"sha": "50ddfcc52f7beed7c9c78ac3cc9f8a0a43416f23", "filename": "src/libcore/default.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/a0594ebb8baa0544ed0f818c494be20b3c9957a5/src%2Flibcore%2Fdefault.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a0594ebb8baa0544ed0f818c494be20b3c9957a5/src%2Flibcore%2Fdefault.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fdefault.rs?ref=a0594ebb8baa0544ed0f818c494be20b3c9957a5", "patch": "@@ -16,6 +16,11 @@ pub trait Default {\n     fn default() -> Self;\n }\n \n+impl Default for () {\n+    #[inline]\n+    fn default() -> () { () }\n+}\n+\n impl<T: Default + 'static> Default for @T {\n     fn default() -> @T { @Default::default() }\n }"}, {"sha": "22719dc9f2d71daaf44e185b4a38f661b0c217bb", "filename": "src/libcore/lib.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/a0594ebb8baa0544ed0f818c494be20b3c9957a5/src%2Flibcore%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a0594ebb8baa0544ed0f818c494be20b3c9957a5/src%2Flibcore%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Flib.rs?ref=a0594ebb8baa0544ed0f818c494be20b3c9957a5", "patch": "@@ -103,7 +103,6 @@ pub mod container;\n /* Core types and methods on primitives */\n \n mod unicode;\n-mod unit;\n pub mod any;\n pub mod atomics;\n pub mod bool;"}, {"sha": "f55cb2d22360df3b4589af4a43efa7dc72143e53", "filename": "src/libcore/unit.rs", "status": "removed", "additions": 0, "deletions": 45, "changes": 45, "blob_url": "https://github.com/rust-lang/rust/blob/50331595fca761eba8b034a6e73143b01b330c04/src%2Flibcore%2Funit.rs", "raw_url": "https://github.com/rust-lang/rust/raw/50331595fca761eba8b034a6e73143b01b330c04/src%2Flibcore%2Funit.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Funit.rs?ref=50331595fca761eba8b034a6e73143b01b330c04", "patch": "@@ -1,45 +0,0 @@\n-// Copyright 2012-2013 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n-//! Functions for the unit type.\n-\n-#[cfg(not(test))]\n-use default::Default;\n-#[cfg(not(test))]\n-use cmp::{Eq, Equal, Ord, Ordering, TotalEq, TotalOrd};\n-\n-#[cfg(not(test))]\n-impl Eq for () {\n-    #[inline]\n-    fn eq(&self, _other: &()) -> bool { true }\n-    #[inline]\n-    fn ne(&self, _other: &()) -> bool { false }\n-}\n-\n-#[cfg(not(test))]\n-impl Ord for () {\n-    #[inline]\n-    fn lt(&self, _other: &()) -> bool { false }\n-}\n-\n-#[cfg(not(test))]\n-impl TotalOrd for () {\n-    #[inline]\n-    fn cmp(&self, _other: &()) -> Ordering { Equal }\n-}\n-\n-#[cfg(not(test))]\n-impl TotalEq for () {}\n-\n-#[cfg(not(test))]\n-impl Default for () {\n-    #[inline]\n-    fn default() -> () { () }\n-}"}]}