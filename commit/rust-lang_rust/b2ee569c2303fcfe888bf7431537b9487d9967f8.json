{"sha": "b2ee569c2303fcfe888bf7431537b9487d9967f8", "node_id": "MDY6Q29tbWl0NzI0NzEyOmIyZWU1NjljMjMwM2ZjZmU4ODhiZjc0MzE1MzdiOTQ4N2Q5OTY3Zjg=", "commit": {"author": {"name": "Brian Anderson", "email": "andersrb@gmail.com", "date": "2011-03-18T03:33:00Z"}, "committer": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2011-03-22T15:04:39Z"}, "message": "Implement trans_send and a broken trans_recv", "tree": {"sha": "d2ff0c422d137e3b3c98ef1ca95b2468b0e15f06", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d2ff0c422d137e3b3c98ef1ca95b2468b0e15f06"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b2ee569c2303fcfe888bf7431537b9487d9967f8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b2ee569c2303fcfe888bf7431537b9487d9967f8", "html_url": "https://github.com/rust-lang/rust/commit/b2ee569c2303fcfe888bf7431537b9487d9967f8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b2ee569c2303fcfe888bf7431537b9487d9967f8/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "261d1e4c6178fec150915c9b97b2d4dd94b1ad95", "url": "https://api.github.com/repos/rust-lang/rust/commits/261d1e4c6178fec150915c9b97b2d4dd94b1ad95", "html_url": "https://github.com/rust-lang/rust/commit/261d1e4c6178fec150915c9b97b2d4dd94b1ad95"}], "stats": {"total": 46, "additions": 42, "deletions": 4}, "files": [{"sha": "fbab4987d09070088a40b4a43ae7955840061efa", "filename": "src/comp/middle/trans.rs", "status": "modified", "additions": 42, "deletions": 4, "changes": 46, "blob_url": "https://github.com/rust-lang/rust/blob/b2ee569c2303fcfe888bf7431537b9487d9967f8/src%2Fcomp%2Fmiddle%2Ftrans.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b2ee569c2303fcfe888bf7431537b9487d9967f8/src%2Fcomp%2Fmiddle%2Ftrans.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Ftrans.rs?ref=b2ee569c2303fcfe888bf7431537b9487d9967f8", "patch": "@@ -4754,8 +4754,6 @@ fn trans_chan(@block_ctxt cx, @ast.expr e, ast.ann ann) -> result {\n     auto prt = trans_expr(bcx, e);\n     bcx = prt.bcx;\n \n-    auto prt_ty = ty.expr_ty(e);\n-    auto prt_llty = type_of(bcx.fcx.ccx, prt_ty);\n     auto prt_val = vp2i(bcx, prt.val);\n     auto sub = trans_upcall(bcx, \"upcall_new_chan\", vec(prt_val));\n     bcx = sub.bcx;\n@@ -4773,12 +4771,52 @@ fn trans_chan(@block_ctxt cx, @ast.expr e, ast.ann ann) -> result {\n \n fn trans_send(@block_ctxt cx, @ast.expr lhs, @ast.expr rhs,\n               ast.ann ann) -> result {\n-    fail;\n+\n+    auto bcx = cx;\n+    auto chn = trans_expr(bcx, lhs);\n+    bcx = chn.bcx;\n+    auto data = trans_expr(bcx, rhs);\n+    bcx = data.bcx;\n+\n+    auto chan_ty = node_ann_type(cx.fcx.ccx, ann);\n+    auto unit_ty;\n+    alt (chan_ty.struct) {\n+        case (ty.ty_chan(?t)) {\n+            unit_ty = t;\n+        }\n+        case (_) {\n+            bcx.fcx.ccx.sess.bug(\"non-chan type in trans_send\");\n+            fail;\n+        }\n+    }\n+\n+    auto llunit_ty = type_of(bcx.fcx.ccx, unit_ty);\n+    auto data_alloca = bcx.build.Alloca(llunit_ty);\n+    bcx.build.Store(data.val, data_alloca);\n+\n+    auto chn_val = vp2i(bcx, chn.val);\n+    auto data_val = vp2i(bcx, data_alloca);\n+\n+    auto sub = trans_upcall(bcx, \"upcall_send\", vec(chn_val, data_val));\n+    bcx = sub.bcx;\n+\n+    ret res(bcx, chn_val);\n }\n \n fn trans_recv(@block_ctxt cx, @ast.expr lhs, @ast.expr rhs,\n               ast.ann ann) -> result {\n-    fail;\n+\n+    auto bcx = cx;\n+    auto data = trans_expr(bcx, lhs);\n+    bcx = data.bcx;\n+    auto prt = trans_expr(bcx, rhs);\n+    bcx = prt.bcx;\n+    auto data_val = vp2i(bcx, data.val);\n+    auto prt_val = vp2i(bcx, prt.val);\n+    auto sub = trans_upcall(bcx, \"upcall_recv\", vec(data_val, prt_val));\n+    bcx = sub.bcx;\n+\n+    ret res(bcx, data_val);\n }\n \n fn init_local(@block_ctxt cx, @ast.local local) -> result {"}]}