{"sha": "f1b64017d044018c649492b75708429749408ed0", "node_id": "MDY6Q29tbWl0NzI0NzEyOmYxYjY0MDE3ZDA0NDAxOGM2NDk0OTJiNzU3MDg0Mjk3NDk0MDhlZDA=", "commit": {"author": {"name": "Simonas Kazlauskas", "email": "git@kazlauskas.me", "date": "2014-12-30T15:44:31Z"}, "committer": {"name": "Simonas Kazlauskas", "email": "git@kazlauskas.me", "date": "2014-12-31T13:58:36Z"}, "message": "Feature gate FFI imports of LLVM intrinsics\n\nFixes #20313", "tree": {"sha": "13ca23fb2941bcd125df2669abfcc1d9a4e0dcae", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/13ca23fb2941bcd125df2669abfcc1d9a4e0dcae"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f1b64017d044018c649492b75708429749408ed0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f1b64017d044018c649492b75708429749408ed0", "html_url": "https://github.com/rust-lang/rust/commit/f1b64017d044018c649492b75708429749408ed0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f1b64017d044018c649492b75708429749408ed0/comments", "author": {"login": "nagisa", "id": 679122, "node_id": "MDQ6VXNlcjY3OTEyMg==", "avatar_url": "https://avatars.githubusercontent.com/u/679122?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nagisa", "html_url": "https://github.com/nagisa", "followers_url": "https://api.github.com/users/nagisa/followers", "following_url": "https://api.github.com/users/nagisa/following{/other_user}", "gists_url": "https://api.github.com/users/nagisa/gists{/gist_id}", "starred_url": "https://api.github.com/users/nagisa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nagisa/subscriptions", "organizations_url": "https://api.github.com/users/nagisa/orgs", "repos_url": "https://api.github.com/users/nagisa/repos", "events_url": "https://api.github.com/users/nagisa/events{/privacy}", "received_events_url": "https://api.github.com/users/nagisa/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nagisa", "id": 679122, "node_id": "MDQ6VXNlcjY3OTEyMg==", "avatar_url": "https://avatars.githubusercontent.com/u/679122?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nagisa", "html_url": "https://github.com/nagisa", "followers_url": "https://api.github.com/users/nagisa/followers", "following_url": "https://api.github.com/users/nagisa/following{/other_user}", "gists_url": "https://api.github.com/users/nagisa/gists{/gist_id}", "starred_url": "https://api.github.com/users/nagisa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nagisa/subscriptions", "organizations_url": "https://api.github.com/users/nagisa/orgs", "repos_url": "https://api.github.com/users/nagisa/repos", "events_url": "https://api.github.com/users/nagisa/events{/privacy}", "received_events_url": "https://api.github.com/users/nagisa/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d2368c3c11ddab9d812c4ddec2e44579326ad347", "url": "https://api.github.com/repos/rust-lang/rust/commits/d2368c3c11ddab9d812c4ddec2e44579326ad347", "html_url": "https://github.com/rust-lang/rust/commit/d2368c3c11ddab9d812c4ddec2e44579326ad347"}], "stats": {"total": 53, "additions": 51, "deletions": 2}, "files": [{"sha": "57a452b1a7b0c0ac68970876d67ba2bd885cb19a", "filename": "src/doc/reference.md", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/f1b64017d044018c649492b75708429749408ed0/src%2Fdoc%2Freference.md", "raw_url": "https://github.com/rust-lang/rust/raw/f1b64017d044018c649492b75708429749408ed0/src%2Fdoc%2Freference.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Freference.md?ref=f1b64017d044018c649492b75708429749408ed0", "patch": "@@ -2561,6 +2561,9 @@ The currently implemented features of the reference compiler are:\n                 if the system linker is not used then specifying custom flags\n                 doesn't have much meaning.\n \n+* `link_llvm_intrinsics` \u2013 Allows linking to LLVM intrinsics via\n+                           `#[link_name=\"llvm.*\"]`.\n+\n * `linkage` - Allows use of the `linkage` attribute, which is not portable.\n \n * `log_syntax` - Allows use of the `log_syntax` macro attribute, which is a\n@@ -4149,11 +4152,11 @@ Unwinding the stack of a thread is done by the thread itself, on its own control\n stack. If a value with a destructor is freed during unwinding, the code for the\n destructor is run, also on the thread's control stack. Running the destructor\n code causes a temporary transition to a *running* state, and allows the\n-destructor code to cause any subsequent state transitions. The original thread \n+destructor code to cause any subsequent state transitions. The original thread\n of unwinding and panicking thereby may suspend temporarily, and may involve\n (recursive) unwinding of the stack of a failed destructor. Nonetheless, the\n outermost unwinding activity will continue until the stack is unwound and the\n-thread transitions to the *dead* state. There is no way to \"recover\" from thread \n+thread transitions to the *dead* state. There is no way to \"recover\" from thread\n panics. Once a thread has temporarily suspended its unwinding in the *panicking*\n state, a panic occurring from within this destructor results in *hard* panic.\n A hard panic currently results in the process aborting."}, {"sha": "8b4074abedcd337fa03076fddd2d8cdd44deedcb", "filename": "src/libsyntax/feature_gate.rs", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/f1b64017d044018c649492b75708429749408ed0/src%2Flibsyntax%2Ffeature_gate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f1b64017d044018c649492b75708429749408ed0/src%2Flibsyntax%2Ffeature_gate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Ffeature_gate.rs?ref=f1b64017d044018c649492b75708429749408ed0", "patch": "@@ -56,6 +56,7 @@ static KNOWN_FEATURES: &'static [(&'static str, Status)] = &[\n     (\"simd\", Active),\n     (\"default_type_params\", Active),\n     (\"quote\", Active),\n+    (\"link_llvm_intrinsics\", Active),\n     (\"linkage\", Active),\n     (\"struct_inherit\", Removed),\n \n@@ -292,6 +293,16 @@ impl<'a, 'v> Visitor<'v> for Context<'a> {\n                               \"the `linkage` attribute is experimental \\\n                                and not portable across platforms\")\n         }\n+\n+        let links_to_llvm = match attr::first_attr_value_str_by_name(i.attrs[], \"link_name\") {\n+            Some(val) => val.get().starts_with(\"llvm.\"),\n+            _ => false\n+        };\n+        if links_to_llvm {\n+            self.gate_feature(\"link_llvm_intrinsics\", i.span,\n+                              \"linking to LLVM intrinsics is experimental\");\n+        }\n+\n         visit::walk_foreign_item(self, i)\n     }\n "}, {"sha": "dfb23c050368937aef083806596d86cc1288f74f", "filename": "src/test/compile-fail/issue-20313.rs", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/f1b64017d044018c649492b75708429749408ed0/src%2Ftest%2Fcompile-fail%2Fissue-20313.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f1b64017d044018c649492b75708429749408ed0/src%2Ftest%2Fcompile-fail%2Fissue-20313.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-20313.rs?ref=f1b64017d044018c649492b75708429749408ed0", "patch": "@@ -0,0 +1,17 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+extern {\n+    #[link_name = \"llvm.sqrt.f32\"]\n+    fn sqrt(x: f32) -> f32; //~ ERROR linking to LLVM intrinsics is experimental\n+}\n+\n+fn main(){\n+}"}, {"sha": "47791ceecb67d3144850b758c6001cb9970e2335", "filename": "src/test/run-pass/issue-20313.rs", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/f1b64017d044018c649492b75708429749408ed0/src%2Ftest%2Frun-pass%2Fissue-20313.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f1b64017d044018c649492b75708429749408ed0/src%2Ftest%2Frun-pass%2Fissue-20313.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-20313.rs?ref=f1b64017d044018c649492b75708429749408ed0", "patch": "@@ -0,0 +1,18 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+#![feature(link_llvm_intrinsics)]\n+\n+extern {\n+    #[link_name = \"llvm.sqrt.f32\"]\n+    fn sqrt(x: f32) -> f32;\n+}\n+\n+fn main(){\n+}"}]}