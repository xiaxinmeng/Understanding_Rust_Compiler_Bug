{"sha": "38542cca29a0ed6f62b18d543386852e5a544adc", "node_id": "MDY6Q29tbWl0NzI0NzEyOjM4NTQyY2NhMjlhMGVkNmY2MmIxOGQ1NDMzODY4NTJlNWE1NDRhZGM=", "commit": {"author": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2015-02-13T15:10:24Z"}, "committer": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2015-02-16T06:19:09Z"}, "message": "Feature gate custom attributes (fixes #22203)", "tree": {"sha": "b017c580ed4e69537d2cfc8289dbbe31bfa386ae", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b017c580ed4e69537d2cfc8289dbbe31bfa386ae"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/38542cca29a0ed6f62b18d543386852e5a544adc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/38542cca29a0ed6f62b18d543386852e5a544adc", "html_url": "https://github.com/rust-lang/rust/commit/38542cca29a0ed6f62b18d543386852e5a544adc", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/38542cca29a0ed6f62b18d543386852e5a544adc/comments", "author": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "531a06e593fdf4151c2b3f5673f24c7a0739e3f5", "url": "https://api.github.com/repos/rust-lang/rust/commits/531a06e593fdf4151c2b3f5673f24c7a0739e3f5", "html_url": "https://github.com/rust-lang/rust/commit/531a06e593fdf4151c2b3f5673f24c7a0739e3f5"}], "stats": {"total": 54, "additions": 54, "deletions": 0}, "files": [{"sha": "5af9ca307dea26b9afe4afb2c9e03e5e59c29068", "filename": "src/libsyntax/feature_gate.rs", "status": "modified", "additions": 54, "deletions": 0, "changes": 54, "blob_url": "https://github.com/rust-lang/rust/blob/38542cca29a0ed6f62b18d543386852e5a544adc/src%2Flibsyntax%2Ffeature_gate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/38542cca29a0ed6f62b18d543386852e5a544adc/src%2Flibsyntax%2Ffeature_gate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Ffeature_gate.rs?ref=38542cca29a0ed6f62b18d543386852e5a544adc", "patch": "@@ -134,6 +134,9 @@ static KNOWN_FEATURES: &'static [(&'static str, &'static str, Status)] = &[\n     // Allows using the unsafe_no_drop_flag attribute (unlikely to\n     // switch to Accepted; see RFC 320)\n     (\"unsafe_no_drop_flag\", \"1.0.0\", Active),\n+\n+    // Allows the use of custom attributes; RFC 572\n+    (\"custom_attribute\", \"1.0.0\", Active)\n ];\n // (changing above list without updating src/doc/reference.md makes @cmr sad)\n \n@@ -155,6 +158,43 @@ enum Status {\n \n // Attributes that have a special meaning to rustc or rustdoc\n pub static KNOWN_ATTRIBUTES: &'static [(&'static str, AttributeType)] = &[\n+    // Normal attributes\n+\n+    (\"warn\", Normal),\n+    (\"allow\", Normal),\n+    (\"forbid\", Normal),\n+    (\"deny\", Normal),\n+\n+    (\"macro_reexport\", Normal),\n+    (\"macro_use\", Normal),\n+    (\"plugin\", Normal),\n+    (\"macro_export\", Normal),\n+    (\"plugin_registrar\", Normal),\n+\n+    (\"cfg\", Normal),\n+    (\"main\", Normal),\n+    (\"lang\", Normal),\n+    (\"start\", Normal),\n+    (\"test\", Normal),\n+    (\"bench\", Normal),\n+    (\"simd\", Normal),\n+    (\"repr\", Normal),\n+    (\"path\", Normal),\n+    (\"staged_api\", Normal),\n+    (\"abi\", Normal),\n+    (\"rustc_move_fragments\", Normal),\n+    (\"rustc_variance\", Normal),\n+    (\"unsafe_destructor\", Normal),\n+    (\"automatically_derived\", Normal),\n+    (\"no_mangle\", Normal),\n+    (\"no_link\", Normal),\n+    (\"derive\", Normal),\n+    (\"should_fail\", Normal),\n+    (\"ignore\", Normal),\n+    (\"no_implicit_prelude\", Normal),\n+    (\"reexport_test_harness_main\", Normal),\n+    (\"link_args\", Normal),\n+    (\"macro_escape\", Normal),\n \n     // FIXME: #14408 whitelist docs since rustdoc looks at them\n     (\"doc\", Whitelisted),\n@@ -199,11 +239,13 @@ pub static KNOWN_ATTRIBUTES: &'static [(&'static str, AttributeType)] = &[\n     // Crate level attributes\n     (\"crate_name\", CrateLevel),\n     (\"crate_type\", CrateLevel),\n+    (\"crate_id\", CrateLevel),\n     (\"feature\", CrateLevel),\n     (\"no_start\", CrateLevel),\n     (\"no_main\", CrateLevel),\n     (\"no_std\", CrateLevel),\n     (\"no_builtins\", CrateLevel),\n+    (\"recursion_limit\", CrateLevel),\n ];\n \n #[derive(PartialEq, Copy)]\n@@ -557,6 +599,18 @@ impl<'a, 'v> Visitor<'v> for PostExpansionVisitor<'a> {\n                               \"unsafe_no_drop_flag has unstable semantics \\\n                                and may be removed in the future\");\n         }\n+\n+        // Custom attribute check\n+        let name = attr.name();\n+\n+        if KNOWN_ATTRIBUTES.iter().all(|&(n, _)| n != name) {\n+            self.gate_feature(\"custom_attribute\", attr.span,\n+                       format!(\"The attribute `{}` is currently \\\n+                                unknown to the the compiler and \\\n+                                may have meaning \\\n+                                added to it in the future\",\n+                                attr.name()).as_slice());\n+        }\n     }\n \n     fn visit_pat(&mut self, pattern: &ast::Pat) {"}]}