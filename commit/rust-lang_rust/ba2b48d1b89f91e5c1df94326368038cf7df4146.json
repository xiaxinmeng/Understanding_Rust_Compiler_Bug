{"sha": "ba2b48d1b89f91e5c1df94326368038cf7df4146", "node_id": "C_kwDOAAsO6NoAKGJhMmI0OGQxYjg5ZjkxZTVjMWRmOTQzMjYzNjgwMzhjZjdkZjQxNDY", "commit": {"author": {"name": "hecatia-elegua", "email": "108802164+hecatia-elegua@users.noreply.github.com", "date": "2023-03-29T12:58:33Z"}, "committer": {"name": "hecatia-elegua", "email": "108802164+hecatia-elegua@users.noreply.github.com", "date": "2023-03-29T12:58:33Z"}, "message": "Fix3", "tree": {"sha": "1f34c3c81a20ea0b13e8d18260b83b972794caf6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1f34c3c81a20ea0b13e8d18260b83b972794caf6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ba2b48d1b89f91e5c1df94326368038cf7df4146", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ba2b48d1b89f91e5c1df94326368038cf7df4146", "html_url": "https://github.com/rust-lang/rust/commit/ba2b48d1b89f91e5c1df94326368038cf7df4146", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ba2b48d1b89f91e5c1df94326368038cf7df4146/comments", "author": {"login": "hecatia-elegua", "id": 108802164, "node_id": "U_kgDOBnwwdA", "avatar_url": "https://avatars.githubusercontent.com/u/108802164?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hecatia-elegua", "html_url": "https://github.com/hecatia-elegua", "followers_url": "https://api.github.com/users/hecatia-elegua/followers", "following_url": "https://api.github.com/users/hecatia-elegua/following{/other_user}", "gists_url": "https://api.github.com/users/hecatia-elegua/gists{/gist_id}", "starred_url": "https://api.github.com/users/hecatia-elegua/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hecatia-elegua/subscriptions", "organizations_url": "https://api.github.com/users/hecatia-elegua/orgs", "repos_url": "https://api.github.com/users/hecatia-elegua/repos", "events_url": "https://api.github.com/users/hecatia-elegua/events{/privacy}", "received_events_url": "https://api.github.com/users/hecatia-elegua/received_events", "type": "User", "site_admin": false}, "committer": {"login": "hecatia-elegua", "id": 108802164, "node_id": "U_kgDOBnwwdA", "avatar_url": "https://avatars.githubusercontent.com/u/108802164?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hecatia-elegua", "html_url": "https://github.com/hecatia-elegua", "followers_url": "https://api.github.com/users/hecatia-elegua/followers", "following_url": "https://api.github.com/users/hecatia-elegua/following{/other_user}", "gists_url": "https://api.github.com/users/hecatia-elegua/gists{/gist_id}", "starred_url": "https://api.github.com/users/hecatia-elegua/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hecatia-elegua/subscriptions", "organizations_url": "https://api.github.com/users/hecatia-elegua/orgs", "repos_url": "https://api.github.com/users/hecatia-elegua/repos", "events_url": "https://api.github.com/users/hecatia-elegua/events{/privacy}", "received_events_url": "https://api.github.com/users/hecatia-elegua/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "53afac72d2ae052d6117fb0ba8b29458b4cafa74", "url": "https://api.github.com/repos/rust-lang/rust/commits/53afac72d2ae052d6117fb0ba8b29458b4cafa74", "html_url": "https://github.com/rust-lang/rust/commit/53afac72d2ae052d6117fb0ba8b29458b4cafa74"}], "stats": {"total": 11, "additions": 4, "deletions": 7}, "files": [{"sha": "d44f84e56912e5444f2acd5491db4561d0d36c90", "filename": "crates/hir-def/src/attr.rs", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/ba2b48d1b89f91e5c1df94326368038cf7df4146/crates%2Fhir-def%2Fsrc%2Fattr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ba2b48d1b89f91e5c1df94326368038cf7df4146/crates%2Fhir-def%2Fsrc%2Fattr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir-def%2Fsrc%2Fattr.rs?ref=ba2b48d1b89f91e5c1df94326368038cf7df4146", "patch": "@@ -243,10 +243,7 @@ impl Attrs {\n     }\n \n     pub fn doc_aliases(&self) -> Vec<SmolStr> {\n-        self.doc_exprs()\n-            .into_iter()\n-            .flat_map(|doc_expr| doc_expr.aliases())\n-            .collect()\n+        self.doc_exprs().into_iter().flat_map(|doc_expr| doc_expr.aliases()).collect()\n     }\n \n     pub fn is_proc_macro(&self) -> bool {"}, {"sha": "072e8c52637eebfa7fae254e1a4ce1a2c4f2fda4", "filename": "crates/ide-completion/src/context.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/ba2b48d1b89f91e5c1df94326368038cf7df4146/crates%2Fide-completion%2Fsrc%2Fcontext.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ba2b48d1b89f91e5c1df94326368038cf7df4146/crates%2Fide-completion%2Fsrc%2Fcontext.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide-completion%2Fsrc%2Fcontext.rs?ref=ba2b48d1b89f91e5c1df94326368038cf7df4146", "patch": "@@ -17,7 +17,7 @@ use ide_db::{\n };\n use syntax::{\n     ast::{self, AttrKind, NameOrNameRef},\n-    AstNode,\n+    AstNode, SmolStr,\n     SyntaxKind::{self, *},\n     SyntaxToken, TextRange, TextSize, T,\n };\n@@ -493,7 +493,7 @@ impl<'a> CompletionContext<'a> {\n \n     /// A version of [`SemanticsScope::process_all_names`] that filters out `#[doc(hidden)]` items and\n     /// passes all doc-aliases along, to funnel it into [`Completions::add_path_resolution`].\n-    pub(crate) fn process_all_names(&self, f: &mut dyn FnMut(Name, ScopeDef, Vec<syntax::SmolStr>)) {\n+    pub(crate) fn process_all_names(&self, f: &mut dyn FnMut(Name, ScopeDef, Vec<SmolStr>)) {\n         let _p = profile::span(\"CompletionContext::process_all_names\");\n         self.scope.process_all_names(&mut |name, def| {\n             if self.is_scope_def_hidden(def) {\n@@ -547,7 +547,7 @@ impl<'a> CompletionContext<'a> {\n         self.krate != defining_crate && attrs.has_doc_hidden()\n     }\n \n-    fn doc_aliases(&self, scope_def: ScopeDef) -> Vec<syntax::SmolStr> {\n+    fn doc_aliases(&self, scope_def: ScopeDef) -> Vec<SmolStr> {\n         if let Some(attrs) = scope_def.attrs(self.db) {\n             attrs.doc_aliases()\n         } else {"}]}