{"sha": "e4e97caba03c00b7d37ec350990a94a819f3fdfc", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU0ZTk3Y2FiYTAzYzAwYjdkMzdlYzM1MDk5MGE5NGE4MTlmM2ZkZmM=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-05-23T06:37:12Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-05-23T06:37:12Z"}, "message": "Rollup merge of #61014 - jsgf:emit-artifact-type, r=alexcrichton\n\nMake -Zemit-artifact-notifications also emit the artifact type\n\nThis is easier for tooling to handle than trying to reverse-engineer the type from the filename extension. The field name and value is intended to reflect the `--emit` command-line option.\n\nRelated issues https://github.com/rust-lang/rust/issues/60988 https://github.com/rust-lang/rust/issues/58465\ncc @alexcrichton", "tree": {"sha": "918e2846fd4865dc87817437f2721e7900650fbb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/918e2846fd4865dc87817437f2721e7900650fbb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e4e97caba03c00b7d37ec350990a94a819f3fdfc", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJc5j+ZCRBK7hj4Ov3rIwAAdHIIAHAeS2GqzmT2xrO3pKKcuZuf\n5bcOr9EU/hQy0lb7Bp8woFNXK4wAY5KGhy4y8kK6xQg4CMJCAQhV31d7RUT2jGZY\nuhoXQYezx5CpGhaYTKwFe/GH6SAlND9WGKVhpak2TDGX/jHhLo2KGH4LpU7KlCLq\ny7qIZpsFT/CHwWKLA7WgHEj6DxThRLH5oreQEWpQdufSP5bv7kNZPL09Ed+ELqun\nJ20pyF4ghlECUUyKsnyMOb9KayEGyET3h8czOCZxokOnqI6Ivl+kuQ6yV/kvvJ/U\nuaiUJqni155XY5tJpatDgmeN+KeAQDl/imCKSEUfK47AUgtSosnQseOGukZhimo=\n=7uCn\n-----END PGP SIGNATURE-----\n", "payload": "tree 918e2846fd4865dc87817437f2721e7900650fbb\nparent 30d550dcfcf6efb3d54c70598832a159d9637bac\nparent 6c3862594210cc0a5e60fbad32d3aab7a4fb512c\nauthor Mazdak Farrokhzad <twingoow@gmail.com> 1558593432 +0200\ncommitter GitHub <noreply@github.com> 1558593432 +0200\n\nRollup merge of #61014 - jsgf:emit-artifact-type, r=alexcrichton\n\nMake -Zemit-artifact-notifications also emit the artifact type\n\nThis is easier for tooling to handle than trying to reverse-engineer the type from the filename extension. The field name and value is intended to reflect the `--emit` command-line option.\n\nRelated issues https://github.com/rust-lang/rust/issues/60988 https://github.com/rust-lang/rust/issues/58465\ncc @alexcrichton\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e4e97caba03c00b7d37ec350990a94a819f3fdfc", "html_url": "https://github.com/rust-lang/rust/commit/e4e97caba03c00b7d37ec350990a94a819f3fdfc", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e4e97caba03c00b7d37ec350990a94a819f3fdfc/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "30d550dcfcf6efb3d54c70598832a159d9637bac", "url": "https://api.github.com/repos/rust-lang/rust/commits/30d550dcfcf6efb3d54c70598832a159d9637bac", "html_url": "https://github.com/rust-lang/rust/commit/30d550dcfcf6efb3d54c70598832a159d9637bac"}, {"sha": "6c3862594210cc0a5e60fbad32d3aab7a4fb512c", "url": "https://api.github.com/repos/rust-lang/rust/commits/6c3862594210cc0a5e60fbad32d3aab7a4fb512c", "html_url": "https://github.com/rust-lang/rust/commit/6c3862594210cc0a5e60fbad32d3aab7a4fb512c"}], "stats": {"total": 21, "additions": 12, "deletions": 9}, "files": [{"sha": "c1ec2071789eb58d66ee39682dbe543202cc08e3", "filename": "src/librustc_codegen_ssa/back/link.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e4e97caba03c00b7d37ec350990a94a819f3fdfc/src%2Flibrustc_codegen_ssa%2Fback%2Flink.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e4e97caba03c00b7d37ec350990a94a819f3fdfc/src%2Flibrustc_codegen_ssa%2Fback%2Flink.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_ssa%2Fback%2Flink.rs?ref=e4e97caba03c00b7d37ec350990a94a819f3fdfc", "patch": "@@ -96,7 +96,7 @@ pub fn link_binary<'a, B: ArchiveBuilder<'a>>(sess: &'a Session,\n                 }\n             }\n             if sess.opts.debugging_opts.emit_artifact_notifications {\n-                sess.parse_sess.span_diagnostic.emit_artifact_notification(&out_filename);\n+                sess.parse_sess.span_diagnostic.emit_artifact_notification(&out_filename, \"link\");\n             }\n         }\n "}, {"sha": "b56162deaf1cc68b093f489527f52a39f7892c67", "filename": "src/librustc_errors/emitter.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e4e97caba03c00b7d37ec350990a94a819f3fdfc/src%2Flibrustc_errors%2Femitter.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e4e97caba03c00b7d37ec350990a94a819f3fdfc/src%2Flibrustc_errors%2Femitter.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_errors%2Femitter.rs?ref=e4e97caba03c00b7d37ec350990a94a819f3fdfc", "patch": "@@ -56,7 +56,7 @@ pub trait Emitter {\n     /// Emit a notification that an artifact has been output.\n     /// This is currently only supported for the JSON format,\n     /// other formats can, and will, simply ignore it.\n-    fn emit_artifact_notification(&mut self, _path: &Path) {}\n+    fn emit_artifact_notification(&mut self, _path: &Path, _artifact_type: &str) {}\n \n     /// Checks if should show explanations about \"rustc --explain\"\n     fn should_show_explain(&self) -> bool {"}, {"sha": "2dcf7be2aa8b1f9dadf8bfae1f6b121be7dbb235", "filename": "src/librustc_errors/lib.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e4e97caba03c00b7d37ec350990a94a819f3fdfc/src%2Flibrustc_errors%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e4e97caba03c00b7d37ec350990a94a819f3fdfc/src%2Flibrustc_errors%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_errors%2Flib.rs?ref=e4e97caba03c00b7d37ec350990a94a819f3fdfc", "patch": "@@ -769,8 +769,8 @@ impl Handler {\n         }\n     }\n \n-    pub fn emit_artifact_notification(&self, path: &Path) {\n-        self.emitter.borrow_mut().emit_artifact_notification(path);\n+    pub fn emit_artifact_notification(&self, path: &Path, artifact_type: &str) {\n+        self.emitter.borrow_mut().emit_artifact_notification(path, artifact_type);\n     }\n }\n "}, {"sha": "4a96864dc9d661aed721057dc89c191b213b2abd", "filename": "src/librustc_interface/passes.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/e4e97caba03c00b7d37ec350990a94a819f3fdfc/src%2Flibrustc_interface%2Fpasses.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e4e97caba03c00b7d37ec350990a94a819f3fdfc/src%2Flibrustc_interface%2Fpasses.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_interface%2Fpasses.rs?ref=e4e97caba03c00b7d37ec350990a94a819f3fdfc", "patch": "@@ -1050,7 +1050,8 @@ fn encode_and_write_metadata<'tcx>(\n             tcx.sess.fatal(&format!(\"failed to write {}: {}\", out_filename.display(), e));\n         }\n         if tcx.sess.opts.debugging_opts.emit_artifact_notifications {\n-            tcx.sess.parse_sess.span_diagnostic.emit_artifact_notification(&out_filename);\n+            tcx.sess.parse_sess.span_diagnostic\n+                .emit_artifact_notification(&out_filename, \"metadata\");\n         }\n     }\n "}, {"sha": "767ab74355e66213ff8c27fbec2ba22be41f7302", "filename": "src/libsyntax/json.rs", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/e4e97caba03c00b7d37ec350990a94a819f3fdfc/src%2Flibsyntax%2Fjson.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e4e97caba03c00b7d37ec350990a94a819f3fdfc/src%2Flibsyntax%2Fjson.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fjson.rs?ref=e4e97caba03c00b7d37ec350990a94a819f3fdfc", "patch": "@@ -92,8 +92,8 @@ impl Emitter for JsonEmitter {\n         }\n     }\n \n-    fn emit_artifact_notification(&mut self, path: &Path) {\n-        let data = ArtifactNotification { artifact: path };\n+    fn emit_artifact_notification(&mut self, path: &Path, artifact_type: &str) {\n+        let data = ArtifactNotification { artifact: path, emit: artifact_type };\n         let result = if self.pretty {\n             writeln!(&mut self.dst, \"{}\", as_pretty_json(&data))\n         } else {\n@@ -185,6 +185,8 @@ struct DiagnosticCode {\n struct ArtifactNotification<'a> {\n     /// The path of the artifact.\n     artifact: &'a Path,\n+    /// What kind of artifact we're emitting.\n+    emit: &'a str,\n }\n \n impl Diagnostic {"}, {"sha": "5547631a4b0229e9b2b5310ebc16e316c9106140", "filename": "src/test/ui/emit-artifact-notifications.nll.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e4e97caba03c00b7d37ec350990a94a819f3fdfc/src%2Ftest%2Fui%2Femit-artifact-notifications.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e4e97caba03c00b7d37ec350990a94a819f3fdfc/src%2Ftest%2Fui%2Femit-artifact-notifications.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Femit-artifact-notifications.nll.stderr?ref=e4e97caba03c00b7d37ec350990a94a819f3fdfc", "patch": "@@ -1 +1 @@\n-{\"artifact\":\"$TEST_BUILD_DIR/emit-artifact-notifications.nll/libemit_artifact_notifications.rmeta\"}\n+{\"artifact\":\"$TEST_BUILD_DIR/emit-artifact-notifications.nll/libemit_artifact_notifications.rmeta\",\"emit\":\"metadata\"}"}, {"sha": "260d41b8f15cc090902f2a39d22af5c1525ed2c9", "filename": "src/test/ui/emit-artifact-notifications.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e4e97caba03c00b7d37ec350990a94a819f3fdfc/src%2Ftest%2Fui%2Femit-artifact-notifications.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e4e97caba03c00b7d37ec350990a94a819f3fdfc/src%2Ftest%2Fui%2Femit-artifact-notifications.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Femit-artifact-notifications.stderr?ref=e4e97caba03c00b7d37ec350990a94a819f3fdfc", "patch": "@@ -1 +1 @@\n-{\"artifact\":\"$TEST_BUILD_DIR/emit-artifact-notifications/libemit_artifact_notifications.rmeta\"}\n+{\"artifact\":\"$TEST_BUILD_DIR/emit-artifact-notifications/libemit_artifact_notifications.rmeta\",\"emit\":\"metadata\"}"}]}