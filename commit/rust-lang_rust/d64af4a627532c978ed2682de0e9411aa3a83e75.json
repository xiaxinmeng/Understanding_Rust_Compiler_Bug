{"sha": "d64af4a627532c978ed2682de0e9411aa3a83e75", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQ2NGFmNGE2Mjc1MzJjOTc4ZWQyNjgyZGUwZTk0MTFhYTNhODNlNzU=", "commit": {"author": {"name": "Oliver Schneider", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2017-04-25T11:35:04Z"}, "committer": {"name": "Oliver Schneider", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2017-04-25T11:35:04Z"}, "message": "Rebase and address comments", "tree": {"sha": "1d993ed02df1c1e5e333696dc7d01c93126e1775", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1d993ed02df1c1e5e333696dc7d01c93126e1775"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d64af4a627532c978ed2682de0e9411aa3a83e75", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d64af4a627532c978ed2682de0e9411aa3a83e75", "html_url": "https://github.com/rust-lang/rust/commit/d64af4a627532c978ed2682de0e9411aa3a83e75", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d64af4a627532c978ed2682de0e9411aa3a83e75/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e0655a0319881191be5625d80e56012f55038053", "url": "https://api.github.com/repos/rust-lang/rust/commits/e0655a0319881191be5625d80e56012f55038053", "html_url": "https://github.com/rust-lang/rust/commit/e0655a0319881191be5625d80e56012f55038053"}], "stats": {"total": 33, "additions": 16, "deletions": 17}, "files": [{"sha": "1a38018e1b378d0a68d586040bde249b2fac08e1", "filename": "src/librustc_errors/emitter.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d64af4a627532c978ed2682de0e9411aa3a83e75/src%2Flibrustc_errors%2Femitter.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d64af4a627532c978ed2682de0e9411aa3a83e75/src%2Flibrustc_errors%2Femitter.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_errors%2Femitter.rs?ref=d64af4a627532c978ed2682de0e9411aa3a83e75", "patch": "@@ -43,7 +43,7 @@ impl Emitter for EmitterWriter {\n                sugg.msg.split_whitespace().count() < 10 &&\n                // don't display multiline suggestions as labels\n                sugg.substitutes[0].find('\\n').is_none() {\n-                let msg = format!(\"{} `{}`\", sugg.msg, sugg.substitutes[0]);\n+                let msg = format!(\"help: {} `{}`\", sugg.msg, sugg.substitutes[0]);\n                 primary_span.push_span_label(sugg.msp.primary_spans()[0], msg);\n             } else {\n                 children.push(SubDiagnostic {"}, {"sha": "d75ecbea6a89912374e9069ddcc554133d6dbc41", "filename": "src/librustc_typeck/check/op.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/d64af4a627532c978ed2682de0e9411aa3a83e75/src%2Flibrustc_typeck%2Fcheck%2Fop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d64af4a627532c978ed2682de0e9411aa3a83e75/src%2Flibrustc_typeck%2Fcheck%2Fop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fop.rs?ref=d64af4a627532c978ed2682de0e9411aa3a83e75", "patch": "@@ -245,7 +245,7 @@ impl<'a, 'gcx, 'tcx> FnCtxt<'a, 'gcx, 'tcx> {\n                         if let Some(missing_trait) = missing_trait {\n                             if missing_trait == \"std::ops::Add\" &&\n                                 self.check_str_addition(expr, lhs_expr, lhs_ty,\n-                                                         rhs_expr, rhs_ty_var, &mut err) {\n+                                                        rhs_ty, &mut err) {\n                                 // This has nothing here because it means we did string\n                                 // concatenation (e.g. \"Hello \" + \"World!\"). This means\n                                 // we don't want the note in the else clause to be emitted\n@@ -269,7 +269,6 @@ impl<'a, 'gcx, 'tcx> FnCtxt<'a, 'gcx, 'tcx> {\n                           expr: &'gcx hir::Expr,\n                           lhs_expr: &'gcx hir::Expr,\n                           lhs_ty: Ty<'tcx>,\n-                          rhs_expr: &'gcx hir::Expr,\n                           rhs_ty: Ty<'tcx>,\n                           mut err: &mut errors::DiagnosticBuilder) -> bool {\n         // If this function returns true it means a note was printed, so we don't need"}, {"sha": "15e7131cfd3be41a75621b24e212971643909267", "filename": "src/test/ui/did_you_mean/E0178.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/d64af4a627532c978ed2682de0e9411aa3a83e75/src%2Ftest%2Fui%2Fdid_you_mean%2FE0178.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d64af4a627532c978ed2682de0e9411aa3a83e75/src%2Ftest%2Fui%2Fdid_you_mean%2FE0178.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fdid_you_mean%2FE0178.stderr?ref=d64af4a627532c978ed2682de0e9411aa3a83e75", "patch": "@@ -2,19 +2,19 @@ error[E0178]: expected a path on the left-hand side of `+`, not `&'a Foo`\n   --> $DIR/E0178.rs:14:8\n    |\n 14 |     w: &'a Foo + Copy,\n-   |        ^^^^^^^^^^^^^^ try adding parentheses: `&'a (Foo + Copy)`\n+   |        ^^^^^^^^^^^^^^ help: try adding parentheses: `&'a (Foo + Copy)`\n \n error[E0178]: expected a path on the left-hand side of `+`, not `&'a Foo`\n   --> $DIR/E0178.rs:15:8\n    |\n 15 |     x: &'a Foo + 'a,\n-   |        ^^^^^^^^^^^^ try adding parentheses: `&'a (Foo + 'a)`\n+   |        ^^^^^^^^^^^^ help: try adding parentheses: `&'a (Foo + 'a)`\n \n error[E0178]: expected a path on the left-hand side of `+`, not `&'a mut Foo`\n   --> $DIR/E0178.rs:16:8\n    |\n 16 |     y: &'a mut Foo + 'a,\n-   |        ^^^^^^^^^^^^^^^^ try adding parentheses: `&'a mut (Foo + 'a)`\n+   |        ^^^^^^^^^^^^^^^^ help: try adding parentheses: `&'a mut (Foo + 'a)`\n \n error[E0178]: expected a path on the left-hand side of `+`, not `fn() -> Foo`\n   --> $DIR/E0178.rs:17:8"}, {"sha": "c4858b63c2d930e4a3af534edf1961a4e17386f8", "filename": "src/test/ui/did_you_mean/trait-object-reference-without-parens-suggestion.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/d64af4a627532c978ed2682de0e9411aa3a83e75/src%2Ftest%2Fui%2Fdid_you_mean%2Ftrait-object-reference-without-parens-suggestion.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d64af4a627532c978ed2682de0e9411aa3a83e75/src%2Ftest%2Fui%2Fdid_you_mean%2Ftrait-object-reference-without-parens-suggestion.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fdid_you_mean%2Ftrait-object-reference-without-parens-suggestion.stderr?ref=d64af4a627532c978ed2682de0e9411aa3a83e75", "patch": "@@ -2,13 +2,13 @@ error[E0178]: expected a path on the left-hand side of `+`, not `&Copy`\n   --> $DIR/trait-object-reference-without-parens-suggestion.rs:12:12\n    |\n 12 |     let _: &Copy + 'static;\n-   |            ^^^^^^^^^^^^^^^ try adding parentheses: `&(Copy + 'static)`\n+   |            ^^^^^^^^^^^^^^^ help: try adding parentheses: `&(Copy + 'static)`\n \n error[E0178]: expected a path on the left-hand side of `+`, not `&'static Copy`\n   --> $DIR/trait-object-reference-without-parens-suggestion.rs:13:12\n    |\n 13 |     let _: &'static Copy + 'static;\n-   |            ^^^^^^^^^^^^^^^^^^^^^^^ try adding parentheses: `&'static (Copy + 'static)`\n+   |            ^^^^^^^^^^^^^^^^^^^^^^^ help: try adding parentheses: `&'static (Copy + 'static)`\n \n error[E0038]: the trait `std::marker::Copy` cannot be made into an object\n   --> $DIR/trait-object-reference-without-parens-suggestion.rs:12:12"}, {"sha": "ae283f1fb636a151fb913cc8134a623ffff96f9b", "filename": "src/test/ui/pub/pub-restricted.stderr", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/d64af4a627532c978ed2682de0e9411aa3a83e75/src%2Ftest%2Fui%2Fpub%2Fpub-restricted.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d64af4a627532c978ed2682de0e9411aa3a83e75/src%2Ftest%2Fui%2Fpub%2Fpub-restricted.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fpub%2Fpub-restricted.stderr?ref=d64af4a627532c978ed2682de0e9411aa3a83e75", "patch": "@@ -2,7 +2,7 @@ error: incorrect visibility restriction\n   --> $DIR/pub-restricted.rs:15:6\n    |\n 15 | pub (a) fn afn() {}\n-   |      ^ make this visible only to module `a` with `in`: `in a`\n+   |      ^ help: make this visible only to module `a` with `in`: `in a`\n    |\n    = help: some possible visibility restrictions are:\n            `pub(crate)`: visible only on the current crate\n@@ -13,7 +13,7 @@ error: incorrect visibility restriction\n   --> $DIR/pub-restricted.rs:16:6\n    |\n 16 | pub (b) fn bfn() {}\n-   |      ^ make this visible only to module `b` with `in`: `in b`\n+   |      ^ help: make this visible only to module `b` with `in`: `in b`\n    |\n    = help: some possible visibility restrictions are:\n            `pub(crate)`: visible only on the current crate\n@@ -24,7 +24,7 @@ error: incorrect visibility restriction\n   --> $DIR/pub-restricted.rs:32:14\n    |\n 32 |         pub (a) invalid: usize,\n-   |              ^ make this visible only to module `a` with `in`: `in a`\n+   |              ^ help: make this visible only to module `a` with `in`: `in a`\n    |\n    = help: some possible visibility restrictions are:\n            `pub(crate)`: visible only on the current crate\n@@ -35,7 +35,7 @@ error: incorrect visibility restriction\n   --> $DIR/pub-restricted.rs:41:6\n    |\n 41 | pub (xyz) fn xyz() {}\n-   |      ^^^ make this visible only to module `xyz` with `in`: `in xyz`\n+   |      ^^^ help: make this visible only to module `xyz` with `in`: `in xyz`\n    |\n    = help: some possible visibility restrictions are:\n            `pub(crate)`: visible only on the current crate"}, {"sha": "91e629c44b073572a8a9a8934fcb1b396e31cad4", "filename": "src/test/ui/span/suggestion-non-ascii.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d64af4a627532c978ed2682de0e9411aa3a83e75/src%2Ftest%2Fui%2Fspan%2Fsuggestion-non-ascii.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d64af4a627532c978ed2682de0e9411aa3a83e75/src%2Ftest%2Fui%2Fspan%2Fsuggestion-non-ascii.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fspan%2Fsuggestion-non-ascii.stderr?ref=d64af4a627532c978ed2682de0e9411aa3a83e75", "patch": "@@ -2,7 +2,7 @@ error: cannot index a value of type `({integer},)`\n   --> $DIR/suggestion-non-ascii.rs:14:21\n    |\n 14 |     println!(\"\u2603{}\", tup[0]);\n-   |                     ^^^^^^ to access tuple elements, use `tup.0`\n+   |                     ^^^^^^ help: to access tuple elements, use `tup.0`\n \n error: aborting due to previous error\n "}, {"sha": "8a121b145366250abbcd1d39a05c42ca1d4e63d5", "filename": "src/test/ui/suggestions/tuple-float-index.stderr", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/d64af4a627532c978ed2682de0e9411aa3a83e75/src%2Ftest%2Fui%2Fsuggestions%2Ftuple-float-index.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d64af4a627532c978ed2682de0e9411aa3a83e75/src%2Ftest%2Fui%2Fsuggestions%2Ftuple-float-index.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Ftuple-float-index.stderr?ref=d64af4a627532c978ed2682de0e9411aa3a83e75", "patch": "@@ -2,10 +2,10 @@ error: unexpected token: `1.1`\n   --> $DIR/tuple-float-index.rs:14:17\n    |\n 14 |     (1, (2, 3)).1.1;\n-   |                 ^^^ unexpected token\n-   |\n-help: try parenthesizing the first index\n-   |     ((1, (2, 3)).1).1;\n+   |     ------------^^^\n+   |     |           |\n+   |     |           unexpected token\n+   |     help: try parenthesizing the first index `((1, (2, 3)).1).1`\n \n error: aborting due to previous error\n "}]}