{"sha": "798016c2df3a15da739e8c6d0968ba0f7b54e303", "node_id": "C_kwDOAAsO6NoAKDc5ODAxNmMyZGYzYTE1ZGE3MzllOGM2ZDA5NjhiYTBmN2I1NGUzMDM", "commit": {"author": {"name": "Maybe Waffle", "email": "waffle.lapkin@gmail.com", "date": "2022-07-29T17:59:08Z"}, "committer": {"name": "Maybe Waffle", "email": "waffle.lapkin@gmail.com", "date": "2022-07-29T19:28:31Z"}, "message": "add a silly test for keywords in trait bounds recovery", "tree": {"sha": "798dbb51ab147f7ef52e2900a4168f54391529ac", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/798dbb51ab147f7ef52e2900a4168f54391529ac"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/798016c2df3a15da739e8c6d0968ba0f7b54e303", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/798016c2df3a15da739e8c6d0968ba0f7b54e303", "html_url": "https://github.com/rust-lang/rust/commit/798016c2df3a15da739e8c6d0968ba0f7b54e303", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/798016c2df3a15da739e8c6d0968ba0f7b54e303/comments", "author": {"login": "WaffleLapkin", "id": 38225716, "node_id": "MDQ6VXNlcjM4MjI1NzE2", "avatar_url": "https://avatars.githubusercontent.com/u/38225716?v=4", "gravatar_id": "", "url": "https://api.github.com/users/WaffleLapkin", "html_url": "https://github.com/WaffleLapkin", "followers_url": "https://api.github.com/users/WaffleLapkin/followers", "following_url": "https://api.github.com/users/WaffleLapkin/following{/other_user}", "gists_url": "https://api.github.com/users/WaffleLapkin/gists{/gist_id}", "starred_url": "https://api.github.com/users/WaffleLapkin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/WaffleLapkin/subscriptions", "organizations_url": "https://api.github.com/users/WaffleLapkin/orgs", "repos_url": "https://api.github.com/users/WaffleLapkin/repos", "events_url": "https://api.github.com/users/WaffleLapkin/events{/privacy}", "received_events_url": "https://api.github.com/users/WaffleLapkin/received_events", "type": "User", "site_admin": false}, "committer": {"login": "WaffleLapkin", "id": 38225716, "node_id": "MDQ6VXNlcjM4MjI1NzE2", "avatar_url": "https://avatars.githubusercontent.com/u/38225716?v=4", "gravatar_id": "", "url": "https://api.github.com/users/WaffleLapkin", "html_url": "https://github.com/WaffleLapkin", "followers_url": "https://api.github.com/users/WaffleLapkin/followers", "following_url": "https://api.github.com/users/WaffleLapkin/following{/other_user}", "gists_url": "https://api.github.com/users/WaffleLapkin/gists{/gist_id}", "starred_url": "https://api.github.com/users/WaffleLapkin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/WaffleLapkin/subscriptions", "organizations_url": "https://api.github.com/users/WaffleLapkin/orgs", "repos_url": "https://api.github.com/users/WaffleLapkin/repos", "events_url": "https://api.github.com/users/WaffleLapkin/events{/privacy}", "received_events_url": "https://api.github.com/users/WaffleLapkin/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c6558c0bc71024b8aca1db317c15cdf701d917d8", "url": "https://api.github.com/repos/rust-lang/rust/commits/c6558c0bc71024b8aca1db317c15cdf701d917d8", "html_url": "https://github.com/rust-lang/rust/commit/c6558c0bc71024b8aca1db317c15cdf701d917d8"}], "stats": {"total": 218, "additions": 218, "deletions": 0}, "files": [{"sha": "fa037e5937dcaccfed179d0277b30eb85efe5c21", "filename": "src/test/ui/parser/kw-in-trait-bounds.rs", "status": "added", "additions": 47, "deletions": 0, "changes": 47, "blob_url": "https://github.com/rust-lang/rust/blob/798016c2df3a15da739e8c6d0968ba0f7b54e303/src%2Ftest%2Fui%2Fparser%2Fkw-in-trait-bounds.rs", "raw_url": "https://github.com/rust-lang/rust/raw/798016c2df3a15da739e8c6d0968ba0f7b54e303/src%2Ftest%2Fui%2Fparser%2Fkw-in-trait-bounds.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fkw-in-trait-bounds.rs?ref=798016c2df3a15da739e8c6d0968ba0f7b54e303", "patch": "@@ -0,0 +1,47 @@\n+// edition:2018\n+\n+fn _f<F: fn(), G>(_: impl fn(), _: &dyn fn())\n+//~^ ERROR expected identifier, found keyword `fn`\n+//~| ERROR expected identifier, found keyword `fn`\n+//~| ERROR expected identifier, found keyword `fn`\n+//~| ERROR cannot find trait `r#fn` in this scope\n+//~| ERROR cannot find trait `r#fn` in this scope\n+//~| ERROR cannot find trait `r#fn` in this scope\n+//~| HELP  a trait with a similar name exists\n+//~| HELP  a trait with a similar name exists\n+//~| HELP  a trait with a similar name exists\n+//~| HELP  escape `fn` to use it as an identifier\n+//~| HELP  escape `fn` to use it as an identifier\n+//~| HELP  escape `fn` to use it as an identifier\n+where\n+G: fn(),\n+    //~^ ERROR expected identifier, found keyword `fn`\n+    //~| ERROR cannot find trait `r#fn` in this scope\n+    //~| HELP  a trait with a similar name exists\n+    //~| HELP  escape `fn` to use it as an identifier\n+{}\n+\n+fn _g<A: struct, B>(_: impl struct, _: &dyn struct)\n+//~^ ERROR expected identifier, found keyword `struct`\n+//~| ERROR expected identifier, found keyword `struct`\n+//~| ERROR expected identifier, found keyword `struct`\n+//~| ERROR cannot find trait `r#struct` in this scope\n+//~| ERROR cannot find trait `r#struct` in this scope\n+//~| ERROR cannot find trait `r#struct` in this scope\n+//~| HELP  a trait with a similar name exists\n+//~| HELP  a trait with a similar name exists\n+//~| HELP  a trait with a similar name exists\n+//~| HELP  escape `struct` to use it as an identifier\n+//~| HELP  escape `struct` to use it as an identifier\n+//~| HELP  escape `struct` to use it as an identifier\n+where\n+    B: struct,\n+    //~^ ERROR expected identifier, found keyword `struct`\n+    //~| ERROR cannot find trait `r#struct` in this scope\n+    //~| HELP  a trait with a similar name exists\n+    //~| HELP  escape `struct` to use it as an identifier\n+{}\n+\n+trait Struct {}\n+\n+fn main() {}"}, {"sha": "28196c7ce2de838d1b9d557bb547179014be2994", "filename": "src/test/ui/parser/kw-in-trait-bounds.stderr", "status": "added", "additions": 171, "deletions": 0, "changes": 171, "blob_url": "https://github.com/rust-lang/rust/blob/798016c2df3a15da739e8c6d0968ba0f7b54e303/src%2Ftest%2Fui%2Fparser%2Fkw-in-trait-bounds.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/798016c2df3a15da739e8c6d0968ba0f7b54e303/src%2Ftest%2Fui%2Fparser%2Fkw-in-trait-bounds.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fkw-in-trait-bounds.stderr?ref=798016c2df3a15da739e8c6d0968ba0f7b54e303", "patch": "@@ -0,0 +1,171 @@\n+error: expected identifier, found keyword `fn`\n+  --> $DIR/kw-in-trait-bounds.rs:3:10\n+   |\n+LL | fn _f<F: fn(), G>(_: impl fn(), _: &dyn fn())\n+   |          ^^ expected identifier, found keyword\n+   |\n+help: escape `fn` to use it as an identifier\n+   |\n+LL | fn _f<F: r#fn(), G>(_: impl fn(), _: &dyn fn())\n+   |          ++\n+\n+error: expected identifier, found keyword `fn`\n+  --> $DIR/kw-in-trait-bounds.rs:3:27\n+   |\n+LL | fn _f<F: fn(), G>(_: impl fn(), _: &dyn fn())\n+   |                           ^^ expected identifier, found keyword\n+   |\n+help: escape `fn` to use it as an identifier\n+   |\n+LL | fn _f<F: fn(), G>(_: impl r#fn(), _: &dyn fn())\n+   |                           ++\n+\n+error: expected identifier, found keyword `fn`\n+  --> $DIR/kw-in-trait-bounds.rs:3:41\n+   |\n+LL | fn _f<F: fn(), G>(_: impl fn(), _: &dyn fn())\n+   |                                         ^^ expected identifier, found keyword\n+   |\n+help: escape `fn` to use it as an identifier\n+   |\n+LL | fn _f<F: fn(), G>(_: impl fn(), _: &dyn r#fn())\n+   |                                         ++\n+\n+error: expected identifier, found keyword `fn`\n+  --> $DIR/kw-in-trait-bounds.rs:17:4\n+   |\n+LL | G: fn(),\n+   |    ^^ expected identifier, found keyword\n+   |\n+help: escape `fn` to use it as an identifier\n+   |\n+LL | G: r#fn(),\n+   |    ++\n+\n+error: expected identifier, found keyword `struct`\n+  --> $DIR/kw-in-trait-bounds.rs:24:10\n+   |\n+LL | fn _g<A: struct, B>(_: impl struct, _: &dyn struct)\n+   |          ^^^^^^ expected identifier, found keyword\n+   |\n+help: escape `struct` to use it as an identifier\n+   |\n+LL | fn _g<A: r#struct, B>(_: impl struct, _: &dyn struct)\n+   |          ++\n+\n+error: expected identifier, found keyword `struct`\n+  --> $DIR/kw-in-trait-bounds.rs:24:29\n+   |\n+LL | fn _g<A: struct, B>(_: impl struct, _: &dyn struct)\n+   |                             ^^^^^^ expected identifier, found keyword\n+   |\n+help: escape `struct` to use it as an identifier\n+   |\n+LL | fn _g<A: struct, B>(_: impl r#struct, _: &dyn struct)\n+   |                             ++\n+\n+error: expected identifier, found keyword `struct`\n+  --> $DIR/kw-in-trait-bounds.rs:24:45\n+   |\n+LL | fn _g<A: struct, B>(_: impl struct, _: &dyn struct)\n+   |                                             ^^^^^^ expected identifier, found keyword\n+   |\n+help: escape `struct` to use it as an identifier\n+   |\n+LL | fn _g<A: struct, B>(_: impl struct, _: &dyn r#struct)\n+   |                                             ++\n+\n+error: expected identifier, found keyword `struct`\n+  --> $DIR/kw-in-trait-bounds.rs:38:8\n+   |\n+LL |     B: struct,\n+   |        ^^^^^^ expected identifier, found keyword\n+   |\n+help: escape `struct` to use it as an identifier\n+   |\n+LL |     B: r#struct,\n+   |        ++\n+\n+error[E0405]: cannot find trait `r#fn` in this scope\n+  --> $DIR/kw-in-trait-bounds.rs:3:10\n+   |\n+LL | fn _f<F: fn(), G>(_: impl fn(), _: &dyn fn())\n+   |          ^^ help: a trait with a similar name exists (notice the capitalization): `Fn`\n+   |\n+  ::: $SRC_DIR/core/src/ops/function.rs:LL:COL\n+   |\n+LL | pub trait Fn<Args>: FnMut<Args> {\n+   | ------------------------------- similarly named trait `Fn` defined here\n+\n+error[E0405]: cannot find trait `r#fn` in this scope\n+  --> $DIR/kw-in-trait-bounds.rs:17:4\n+   |\n+LL | G: fn(),\n+   |    ^^ help: a trait with a similar name exists (notice the capitalization): `Fn`\n+   |\n+  ::: $SRC_DIR/core/src/ops/function.rs:LL:COL\n+   |\n+LL | pub trait Fn<Args>: FnMut<Args> {\n+   | ------------------------------- similarly named trait `Fn` defined here\n+\n+error[E0405]: cannot find trait `r#fn` in this scope\n+  --> $DIR/kw-in-trait-bounds.rs:3:27\n+   |\n+LL | fn _f<F: fn(), G>(_: impl fn(), _: &dyn fn())\n+   |                           ^^ help: a trait with a similar name exists (notice the capitalization): `Fn`\n+   |\n+  ::: $SRC_DIR/core/src/ops/function.rs:LL:COL\n+   |\n+LL | pub trait Fn<Args>: FnMut<Args> {\n+   | ------------------------------- similarly named trait `Fn` defined here\n+\n+error[E0405]: cannot find trait `r#fn` in this scope\n+  --> $DIR/kw-in-trait-bounds.rs:3:41\n+   |\n+LL | fn _f<F: fn(), G>(_: impl fn(), _: &dyn fn())\n+   |                                         ^^ help: a trait with a similar name exists (notice the capitalization): `Fn`\n+   |\n+  ::: $SRC_DIR/core/src/ops/function.rs:LL:COL\n+   |\n+LL | pub trait Fn<Args>: FnMut<Args> {\n+   | ------------------------------- similarly named trait `Fn` defined here\n+\n+error[E0405]: cannot find trait `r#struct` in this scope\n+  --> $DIR/kw-in-trait-bounds.rs:24:10\n+   |\n+LL | fn _g<A: struct, B>(_: impl struct, _: &dyn struct)\n+   |          ^^^^^^ help: a trait with a similar name exists (notice the capitalization): `Struct`\n+...\n+LL | trait Struct {}\n+   | ------------ similarly named trait `Struct` defined here\n+\n+error[E0405]: cannot find trait `r#struct` in this scope\n+  --> $DIR/kw-in-trait-bounds.rs:38:8\n+   |\n+LL |     B: struct,\n+   |        ^^^^^^ help: a trait with a similar name exists (notice the capitalization): `Struct`\n+...\n+LL | trait Struct {}\n+   | ------------ similarly named trait `Struct` defined here\n+\n+error[E0405]: cannot find trait `r#struct` in this scope\n+  --> $DIR/kw-in-trait-bounds.rs:24:29\n+   |\n+LL | fn _g<A: struct, B>(_: impl struct, _: &dyn struct)\n+   |                             ^^^^^^ help: a trait with a similar name exists (notice the capitalization): `Struct`\n+...\n+LL | trait Struct {}\n+   | ------------ similarly named trait `Struct` defined here\n+\n+error[E0405]: cannot find trait `r#struct` in this scope\n+  --> $DIR/kw-in-trait-bounds.rs:24:45\n+   |\n+LL | fn _g<A: struct, B>(_: impl struct, _: &dyn struct)\n+   |                                             ^^^^^^ help: a trait with a similar name exists (notice the capitalization): `Struct`\n+...\n+LL | trait Struct {}\n+   | ------------ similarly named trait `Struct` defined here\n+\n+error: aborting due to 16 previous errors\n+\n+For more information about this error, try `rustc --explain E0405`."}]}