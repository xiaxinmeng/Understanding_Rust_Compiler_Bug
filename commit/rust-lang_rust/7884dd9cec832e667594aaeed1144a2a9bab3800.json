{"sha": "7884dd9cec832e667594aaeed1144a2a9bab3800", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc4ODRkZDljZWM4MzJlNjY3NTk0YWFlZWQxMTQ0YTJhOWJhYjM4MDA=", "commit": {"author": {"name": "Jakub Bukaj", "email": "jakub@jakub.cc", "date": "2014-11-19T21:39:29Z"}, "committer": {"name": "Jakub Bukaj", "email": "jakub@jakub.cc", "date": "2014-11-19T21:39:29Z"}, "message": "rollup merge of #19087: jakub-/issue-19086\n\nFixes #19086.\n\nWhilst the code that this PR renders invalid was never meant to be valid, this is still a...\n\n[breaking-change]", "tree": {"sha": "0f6622043da1b1b6b1d039e17b4e2c101c0e6df8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0f6622043da1b1b6b1d039e17b4e2c101c0e6df8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7884dd9cec832e667594aaeed1144a2a9bab3800", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7884dd9cec832e667594aaeed1144a2a9bab3800", "html_url": "https://github.com/rust-lang/rust/commit/7884dd9cec832e667594aaeed1144a2a9bab3800", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7884dd9cec832e667594aaeed1144a2a9bab3800/comments", "author": null, "committer": null, "parents": [{"sha": "9b5ec0e4aaa1b5f13e5caf52c7ebec28bddc2cb5", "url": "https://api.github.com/repos/rust-lang/rust/commits/9b5ec0e4aaa1b5f13e5caf52c7ebec28bddc2cb5", "html_url": "https://github.com/rust-lang/rust/commit/9b5ec0e4aaa1b5f13e5caf52c7ebec28bddc2cb5"}, {"sha": "1b5cbd0036bfd4623a6e38897978819f737eb298", "url": "https://api.github.com/repos/rust-lang/rust/commits/1b5cbd0036bfd4623a6e38897978819f737eb298", "html_url": "https://github.com/rust-lang/rust/commit/1b5cbd0036bfd4623a6e38897978819f737eb298"}], "stats": {"total": 26, "additions": 24, "deletions": 2}, "files": [{"sha": "cdfd607d067103adb173d2a4af601ddfa9488a69", "filename": "src/librustc/middle/typeck/check/_match.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/7884dd9cec832e667594aaeed1144a2a9bab3800/src%2Flibrustc%2Fmiddle%2Ftypeck%2Fcheck%2F_match.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7884dd9cec832e667594aaeed1144a2a9bab3800/src%2Flibrustc%2Fmiddle%2Ftypeck%2Fcheck%2F_match.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftypeck%2Fcheck%2F_match.rs?ref=7884dd9cec832e667594aaeed1144a2a9bab3800", "patch": "@@ -379,7 +379,8 @@ pub fn check_pat_enum<'a, 'tcx>(pcx: &pat_ctxt<'a, 'tcx>, pat: &ast::Pat,\n \n     let real_path_ty = fcx.node_ty(pat.id);\n     let (arg_tys, kind_name) = match real_path_ty.sty {\n-        ty::ty_enum(enum_def_id, ref expected_substs) => {\n+        ty::ty_enum(enum_def_id, ref expected_substs)\n+            if def == def::DefVariant(enum_def_id, def.def_id(), false) => {\n             let variant = ty::enum_variant_with_id(tcx, enum_def_id, def.def_id());\n             (variant.args.iter().map(|t| t.subst(tcx, expected_substs)).collect::<Vec<_>>(),\n                 \"variant\")\n@@ -392,7 +393,7 @@ pub fn check_pat_enum<'a, 'tcx>(pcx: &pat_ctxt<'a, 'tcx>, pat: &ast::Pat,\n         _ => {\n             let name = pprust::path_to_string(path);\n             span_err!(tcx.sess, pat.span, E0164,\n-                \"`{}` does not name a variant or a tuple struct\", name);\n+                \"`{}` does not name a non-struct variant or a tuple struct\", name);\n             fcx.write_error(pat.id);\n \n             if let Some(ref subpats) = *subpats {"}, {"sha": "9fd1f228984bb5ad97baecde56e11a5d198c1eaa", "filename": "src/test/compile-fail/issue-19086.rs", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/7884dd9cec832e667594aaeed1144a2a9bab3800/src%2Ftest%2Fcompile-fail%2Fissue-19086.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7884dd9cec832e667594aaeed1144a2a9bab3800/src%2Ftest%2Fcompile-fail%2Fissue-19086.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-19086.rs?ref=7884dd9cec832e667594aaeed1144a2a9bab3800", "patch": "@@ -0,0 +1,21 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+fn main() {\n+    enum Foo {\n+        FooB { x: i32, y: i32 }\n+    }\n+\n+    let f = FooB { x: 3, y: 4 };\n+    match f {\n+        FooB(a, b) => println!(\"{} {}\", a, b),\n+//~^ ERROR `FooB` does not name a non-struct variant or a tuple struct\n+    }\n+}"}]}