{"sha": "e9fdee8818f5c089013b9c8604e183b1cbd816ad", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU5ZmRlZTg4MThmNWMwODkwMTNiOWM4NjA0ZTE4M2IxY2JkODE2YWQ=", "commit": {"author": {"name": "Matt Brubeck", "email": "mbrubeck@limpet.net", "date": "2018-01-17T16:37:03Z"}, "committer": {"name": "Matt Brubeck", "email": "mbrubeck@limpet.net", "date": "2018-01-17T16:37:03Z"}, "message": "Use File::metadata instead of fs::metadata to choose buffer size\n\nThis replaces a `stat` syscall with `fstat` or similar, which can be\nfaster.  Fixes #47519.", "tree": {"sha": "1557cc7555761a5cad5110a0cea26d4f315d2b69", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1557cc7555761a5cad5110a0cea26d4f315d2b69"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e9fdee8818f5c089013b9c8604e183b1cbd816ad", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e9fdee8818f5c089013b9c8604e183b1cbd816ad", "html_url": "https://github.com/rust-lang/rust/commit/e9fdee8818f5c089013b9c8604e183b1cbd816ad", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e9fdee8818f5c089013b9c8604e183b1cbd816ad/comments", "author": {"login": "mbrubeck", "id": 5920, "node_id": "MDQ6VXNlcjU5MjA=", "avatar_url": "https://avatars.githubusercontent.com/u/5920?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mbrubeck", "html_url": "https://github.com/mbrubeck", "followers_url": "https://api.github.com/users/mbrubeck/followers", "following_url": "https://api.github.com/users/mbrubeck/following{/other_user}", "gists_url": "https://api.github.com/users/mbrubeck/gists{/gist_id}", "starred_url": "https://api.github.com/users/mbrubeck/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mbrubeck/subscriptions", "organizations_url": "https://api.github.com/users/mbrubeck/orgs", "repos_url": "https://api.github.com/users/mbrubeck/repos", "events_url": "https://api.github.com/users/mbrubeck/events{/privacy}", "received_events_url": "https://api.github.com/users/mbrubeck/received_events", "type": "User", "site_admin": false}, "committer": {"login": "mbrubeck", "id": 5920, "node_id": "MDQ6VXNlcjU5MjA=", "avatar_url": "https://avatars.githubusercontent.com/u/5920?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mbrubeck", "html_url": "https://github.com/mbrubeck", "followers_url": "https://api.github.com/users/mbrubeck/followers", "following_url": "https://api.github.com/users/mbrubeck/following{/other_user}", "gists_url": "https://api.github.com/users/mbrubeck/gists{/gist_id}", "starred_url": "https://api.github.com/users/mbrubeck/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mbrubeck/subscriptions", "organizations_url": "https://api.github.com/users/mbrubeck/orgs", "repos_url": "https://api.github.com/users/mbrubeck/repos", "events_url": "https://api.github.com/users/mbrubeck/events{/privacy}", "received_events_url": "https://api.github.com/users/mbrubeck/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "44912bf77bf1fd2137e5b7d1d31b2e59e2819136", "url": "https://api.github.com/repos/rust-lang/rust/commits/44912bf77bf1fd2137e5b7d1d31b2e59e2819136", "html_url": "https://github.com/rust-lang/rust/commit/44912bf77bf1fd2137e5b7d1d31b2e59e2819136"}], "stats": {"total": 16, "additions": 9, "deletions": 7}, "files": [{"sha": "1325ca464c4daa6456972a8b38e7fe06affc1fb0", "filename": "src/libstd/fs.rs", "status": "modified", "additions": 9, "deletions": 7, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/e9fdee8818f5c089013b9c8604e183b1cbd816ad/src%2Flibstd%2Ffs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e9fdee8818f5c089013b9c8604e183b1cbd816ad/src%2Flibstd%2Ffs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Ffs.rs?ref=e9fdee8818f5c089013b9c8604e183b1cbd816ad", "patch": "@@ -211,12 +211,12 @@ pub struct DirBuilder {\n     recursive: bool,\n }\n \n-/// How large a buffer to pre-allocate before reading the entire file at `path`.\n-fn initial_buffer_size<P: AsRef<Path>>(path: P) -> usize {\n+/// How large a buffer to pre-allocate before reading the entire file.\n+fn initial_buffer_size(file: &File) -> usize {\n     // Allocate one extra byte so the buffer doesn't need to grow before the\n     // final `read` call at the end of the file.  Don't worry about `usize`\n     // overflow because reading will fail regardless in that case.\n-    metadata(path).map(|m| m.len() as usize + 1).unwrap_or(0)\n+    file.metadata().map(|m| m.len() as usize + 1).unwrap_or(0)\n }\n \n /// Read the entire contents of a file into a bytes vector.\n@@ -254,8 +254,9 @@ fn initial_buffer_size<P: AsRef<Path>>(path: P) -> usize {\n /// ```\n #[unstable(feature = \"fs_read_write\", issue = \"46588\")]\n pub fn read<P: AsRef<Path>>(path: P) -> io::Result<Vec<u8>> {\n-    let mut bytes = Vec::with_capacity(initial_buffer_size(&path));\n-    File::open(path)?.read_to_end(&mut bytes)?;\n+    let mut file = File::open(path)?;\n+    let mut bytes = Vec::with_capacity(initial_buffer_size(&file));\n+    file.read_to_end(&mut bytes)?;\n     Ok(bytes)\n }\n \n@@ -295,8 +296,9 @@ pub fn read<P: AsRef<Path>>(path: P) -> io::Result<Vec<u8>> {\n /// ```\n #[unstable(feature = \"fs_read_write\", issue = \"46588\")]\n pub fn read_string<P: AsRef<Path>>(path: P) -> io::Result<String> {\n-    let mut string = String::with_capacity(initial_buffer_size(&path));\n-    File::open(path)?.read_to_string(&mut string)?;\n+    let mut file = File::open(path)?;\n+    let mut string = String::with_capacity(initial_buffer_size(&file));\n+    file.read_to_string(&mut string)?;\n     Ok(string)\n }\n "}]}