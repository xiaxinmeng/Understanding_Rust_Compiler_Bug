{"sha": "f5e37100d9c115ab327bafd42d0c4dad539d318f", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY1ZTM3MTAwZDljMTE1YWIzMjdiYWZkNDJkMGM0ZGFkNTM5ZDMxOGY=", "commit": {"author": {"name": "Ben Kimock", "email": "kimockb@gmail.com", "date": "2021-03-21T21:47:57Z"}, "committer": {"name": "Ben Kimock", "email": "kimockb@gmail.com", "date": "2021-03-21T22:11:42Z"}, "message": "Mark RawVec::reserve as inline and outline the resizing logic", "tree": {"sha": "02f358eb62e9373c0f47f62ed567ca63e8e496d2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/02f358eb62e9373c0f47f62ed567ca63e8e496d2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f5e37100d9c115ab327bafd42d0c4dad539d318f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f5e37100d9c115ab327bafd42d0c4dad539d318f", "html_url": "https://github.com/rust-lang/rust/commit/f5e37100d9c115ab327bafd42d0c4dad539d318f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f5e37100d9c115ab327bafd42d0c4dad539d318f/comments", "author": {"login": "saethlin", "id": 12105168, "node_id": "MDQ6VXNlcjEyMTA1MTY4", "avatar_url": "https://avatars.githubusercontent.com/u/12105168?v=4", "gravatar_id": "", "url": "https://api.github.com/users/saethlin", "html_url": "https://github.com/saethlin", "followers_url": "https://api.github.com/users/saethlin/followers", "following_url": "https://api.github.com/users/saethlin/following{/other_user}", "gists_url": "https://api.github.com/users/saethlin/gists{/gist_id}", "starred_url": "https://api.github.com/users/saethlin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/saethlin/subscriptions", "organizations_url": "https://api.github.com/users/saethlin/orgs", "repos_url": "https://api.github.com/users/saethlin/repos", "events_url": "https://api.github.com/users/saethlin/events{/privacy}", "received_events_url": "https://api.github.com/users/saethlin/received_events", "type": "User", "site_admin": false}, "committer": {"login": "saethlin", "id": 12105168, "node_id": "MDQ6VXNlcjEyMTA1MTY4", "avatar_url": "https://avatars.githubusercontent.com/u/12105168?v=4", "gravatar_id": "", "url": "https://api.github.com/users/saethlin", "html_url": "https://github.com/saethlin", "followers_url": "https://api.github.com/users/saethlin/followers", "following_url": "https://api.github.com/users/saethlin/following{/other_user}", "gists_url": "https://api.github.com/users/saethlin/gists{/gist_id}", "starred_url": "https://api.github.com/users/saethlin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/saethlin/subscriptions", "organizations_url": "https://api.github.com/users/saethlin/orgs", "repos_url": "https://api.github.com/users/saethlin/repos", "events_url": "https://api.github.com/users/saethlin/events{/privacy}", "received_events_url": "https://api.github.com/users/saethlin/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f82664191d0e8764b7435b9d72eb0e366b8b1464", "url": "https://api.github.com/repos/rust-lang/rust/commits/f82664191d0e8764b7435b9d72eb0e366b8b1464", "html_url": "https://github.com/rust-lang/rust/commit/f82664191d0e8764b7435b9d72eb0e366b8b1464"}], "stats": {"total": 14, "additions": 13, "deletions": 1}, "files": [{"sha": "ff7bff7584af98dc0ad09f52fa4a7b2cde509834", "filename": "library/alloc/src/raw_vec.rs", "status": "modified", "additions": 13, "deletions": 1, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/f5e37100d9c115ab327bafd42d0c4dad539d318f/library%2Falloc%2Fsrc%2Fraw_vec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f5e37100d9c115ab327bafd42d0c4dad539d318f/library%2Falloc%2Fsrc%2Fraw_vec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Falloc%2Fsrc%2Fraw_vec.rs?ref=f5e37100d9c115ab327bafd42d0c4dad539d318f", "patch": "@@ -315,8 +315,20 @@ impl<T, A: Allocator> RawVec<T, A> {\n     /// #   vector.push_all(&[1, 3, 5, 7, 9]);\n     /// # }\n     /// ```\n+    #[inline]\n     pub fn reserve(&mut self, len: usize, additional: usize) {\n-        handle_reserve(self.try_reserve(len, additional));\n+        // Callers expect this function to be very cheap when there is already sufficient capacity.\n+        // Therefore, we move all the resizing and error-handling logic from grow_amortized and\n+        // handle_reserve behind a call, while making sure that the this function is likely to be\n+        // inlined as just a comparison and a call if the comparison fails.\n+        #[inline(never)]\n+        fn do_reserve_and_handle<T, A: Allocator>(slf: &mut RawVec<T,A>, len: usize, additional: usize) {\n+            handle_reserve(slf.grow_amortized(len, additional));\n+        }\n+\n+        if self.needs_to_grow(len, additional) {\n+            do_reserve_and_handle(self, len, additional);\n+        }\n     }\n \n     /// The same as `reserve`, but returns on errors instead of panicking or aborting."}]}