{"sha": "57f182cd1087ccfb855d9393e691cd5c4ff690a9", "node_id": "MDY6Q29tbWl0NzI0NzEyOjU3ZjE4MmNkMTA4N2NjZmI4NTVkOTM5M2U2OTFjZDVjNGZmNjkwYTk=", "commit": {"author": {"name": "topecongiro", "email": "seuchida@gmail.com", "date": "2018-02-19T03:50:39Z"}, "committer": {"name": "topecongiro", "email": "seuchida@gmail.com", "date": "2018-02-19T03:55:12Z"}, "message": "Clean up", "tree": {"sha": "d5c276062e92be0fd96c618535c2ec4e5ccbddec", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d5c276062e92be0fd96c618535c2ec4e5ccbddec"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/57f182cd1087ccfb855d9393e691cd5c4ff690a9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/57f182cd1087ccfb855d9393e691cd5c4ff690a9", "html_url": "https://github.com/rust-lang/rust/commit/57f182cd1087ccfb855d9393e691cd5c4ff690a9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/57f182cd1087ccfb855d9393e691cd5c4ff690a9/comments", "author": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "committer": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "125e7124e7194bab639d525ec4ac2fa43633fb38", "url": "https://api.github.com/repos/rust-lang/rust/commits/125e7124e7194bab639d525ec4ac2fa43633fb38", "html_url": "https://github.com/rust-lang/rust/commit/125e7124e7194bab639d525ec4ac2fa43633fb38"}], "stats": {"total": 13, "additions": 5, "deletions": 8}, "files": [{"sha": "75ad30b6f2a9202a2fa2a2e8b08ab050d99a99b5", "filename": "rustfmt-core/src/issues.rs", "status": "modified", "additions": 1, "deletions": 5, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/57f182cd1087ccfb855d9393e691cd5c4ff690a9/rustfmt-core%2Fsrc%2Fissues.rs", "raw_url": "https://github.com/rust-lang/rust/raw/57f182cd1087ccfb855d9393e691cd5c4ff690a9/rustfmt-core%2Fsrc%2Fissues.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/rustfmt-core%2Fsrc%2Fissues.rs?ref=57f182cd1087ccfb855d9393e691cd5c4ff690a9", "patch": "@@ -93,17 +93,13 @@ impl BadIssueSeeker {\n         }\n     }\n \n-    fn is_disabled(&self) -> bool {\n+    pub fn is_disabled(&self) -> bool {\n         !is_enabled(self.report_todo) && !is_enabled(self.report_fixme)\n     }\n \n     // Check whether or not the current char is conclusive evidence for an\n     // unnumbered TO-DO or FIX-ME.\n     pub fn inspect(&mut self, c: char) -> Option<Issue> {\n-        if self.is_disabled() {\n-            return None;\n-        }\n-\n         match self.state {\n             Seeking::Issue {\n                 todo_idx,"}, {"sha": "b095d06abb816aa7cfdccc19023024b404bb693d", "filename": "rustfmt-core/src/lib.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/57f182cd1087ccfb855d9393e691cd5c4ff690a9/rustfmt-core%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/57f182cd1087ccfb855d9393e691cd5c4ff690a9/rustfmt-core%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/rustfmt-core%2Fsrc%2Flib.rs?ref=57f182cd1087ccfb855d9393e691cd5c4ff690a9", "patch": "@@ -352,7 +352,7 @@ where\n             visitor.format_separate_mod(module, &*filemap);\n         };\n \n-        assert_eq!(\n+        debug_assert_eq!(\n             visitor.line_number,\n             ::utils::count_newlines(&format!(\"{}\", visitor.buffer))\n         );\n@@ -420,13 +420,14 @@ fn format_lines(\n     let mut line_buffer = String::with_capacity(config.max_width() * 2);\n     let mut is_string = false; // true if the current line contains a string literal.\n     let mut format_line = config.file_lines().contains_line(name, cur_line);\n+    let allow_issue_seek = !issue_seeker.is_disabled();\n \n     for (kind, (b, c)) in CharClasses::new(text.chars().enumerate()) {\n         if c == '\\r' {\n             continue;\n         }\n \n-        if format_line {\n+        if allow_issue_seek && format_line {\n             // Add warnings for bad todos/ fixmes\n             if let Some(issue) = issue_seeker.inspect(c) {\n                 errors.push(FormattingError {"}, {"sha": "22d6a096efa4b2a3d49ec389d1c7d6f2ee30dc5b", "filename": "rustfmt-core/src/shape.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/57f182cd1087ccfb855d9393e691cd5c4ff690a9/rustfmt-core%2Fsrc%2Fshape.rs", "raw_url": "https://github.com/rust-lang/rust/raw/57f182cd1087ccfb855d9393e691cd5c4ff690a9/rustfmt-core%2Fsrc%2Fshape.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/rustfmt-core%2Fsrc%2Fshape.rs?ref=57f182cd1087ccfb855d9393e691cd5c4ff690a9", "patch": "@@ -81,7 +81,7 @@ impl Indent {\n         self.to_string_inner(config, 0)\n     }\n \n-    pub fn to_string_inner(&self, config: &Config, offset: usize) -> Cow<'static, str> {\n+    fn to_string_inner(&self, config: &Config, offset: usize) -> Cow<'static, str> {\n         let (num_tabs, num_spaces) = if config.hard_tabs() {\n             (self.block_indent / config.tab_spaces(), self.alignment)\n         } else {"}]}