{"sha": "ed54162e86cd00b7a4ced8957aac7f56897f6fb5", "node_id": "MDY6Q29tbWl0NzI0NzEyOmVkNTQxNjJlODZjZDAwYjdhNGNlZDg5NTdhYWM3ZjU2ODk3ZjZmYjU=", "commit": {"author": {"name": "Jakub Wieczorek", "email": "jakub@jakub.cc", "date": "2014-07-06T22:50:53Z"}, "committer": {"name": "Jakub Wieczorek", "email": "jakub@jakub.cc", "date": "2014-07-13T09:47:40Z"}, "message": "Add an iterate function to core::iter\n\nImplementation by Kevin Ballard.\n\nThe function returns an Unfold iterator producing an infinite stream\nof results of repeated applications of the function, starting from\nthe provided seed value.", "tree": {"sha": "675f830b5b9cd3b28ff9f976dab70c06b30735a4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/675f830b5b9cd3b28ff9f976dab70c06b30735a4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ed54162e86cd00b7a4ced8957aac7f56897f6fb5", "comment_count": 5, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ed54162e86cd00b7a4ced8957aac7f56897f6fb5", "html_url": "https://github.com/rust-lang/rust/commit/ed54162e86cd00b7a4ced8957aac7f56897f6fb5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ed54162e86cd00b7a4ced8957aac7f56897f6fb5/comments", "author": null, "committer": null, "parents": [{"sha": "88231a9b70574990363262e6be8451df8782e4ca", "url": "https://api.github.com/repos/rust-lang/rust/commits/88231a9b70574990363262e6be8451df8782e4ca", "html_url": "https://github.com/rust-lang/rust/commit/88231a9b70574990363262e6be8451df8782e4ca"}], "stats": {"total": 38, "additions": 34, "deletions": 4}, "files": [{"sha": "855bccb07a7418305a90f1e19d83187a1e13af6b", "filename": "src/libcore/iter.rs", "status": "modified", "additions": 25, "deletions": 4, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/ed54162e86cd00b7a4ced8957aac7f56897f6fb5/src%2Flibcore%2Fiter.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ed54162e86cd00b7a4ced8957aac7f56897f6fb5/src%2Flibcore%2Fiter.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fiter.rs?ref=ed54162e86cd00b7a4ced8957aac7f56897f6fb5", "patch": "@@ -64,14 +64,14 @@ the rest of the rust manuals.\n \n */\n \n+use clone::Clone;\n use cmp;\n+use cmp::{PartialEq, PartialOrd, Ord};\n+use mem;\n use num::{Zero, One, CheckedAdd, CheckedSub, Saturating, ToPrimitive, Int};\n-use option::{Option, Some, None};\n use ops::{Add, Mul, Sub};\n-use cmp::{PartialEq, PartialOrd, Ord};\n-use clone::Clone;\n+use option::{Option, Some, None};\n use uint;\n-use mem;\n \n /// Conversion from an `Iterator`\n pub trait FromIterator<A> {\n@@ -2192,6 +2192,27 @@ impl<A: Clone> RandomAccessIterator<A> for Repeat<A> {\n     fn idx(&mut self, _: uint) -> Option<A> { Some(self.element.clone()) }\n }\n \n+type IterateState<'a, T> = (|T|: 'a -> T, Option<T>, bool);\n+\n+/// An iterator that repeatedly applies a given function, starting\n+/// from a given seed value.\n+pub type Iterate<'a, T> = Unfold<'a, T, IterateState<'a, T>>;\n+\n+/// Creates a new iterator that produces an infinite sequence of\n+/// repeated applications of the given function `f`.\n+#[allow(visible_private_types)]\n+pub fn iterate<'a, T: Clone>(f: |T|: 'a -> T, seed: T) -> Iterate<'a, T> {\n+    Unfold::new((f, Some(seed), true), |st| {\n+        let &(ref mut f, ref mut val, ref mut first) = st;\n+        if *first {\n+            *first = false;\n+        } else {\n+            val.mutate(|x| (*f)(x));\n+        }\n+        val.clone()\n+    })\n+}\n+\n /// Functions for lexicographical ordering of sequences.\n ///\n /// Lexicographical ordering through `<`, `<=`, `>=`, `>` requires"}, {"sha": "64c336093996d6b44c079a7344d9ebb6b75c6b43", "filename": "src/libcoretest/iter.rs", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/ed54162e86cd00b7a4ced8957aac7f56897f6fb5/src%2Flibcoretest%2Fiter.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ed54162e86cd00b7a4ced8957aac7f56897f6fb5/src%2Flibcoretest%2Fiter.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcoretest%2Fiter.rs?ref=ed54162e86cd00b7a4ced8957aac7f56897f6fb5", "patch": "@@ -833,3 +833,12 @@ fn test_min_max_result() {\n     let r = MinMax(1i,2);\n     assert_eq!(r.into_option(), Some((1,2)));\n }\n+\n+#[test]\n+fn test_iterate() {\n+    let mut it = iterate(|x| x * 2, 1u);\n+    assert_eq!(it.next(), Some(1u));\n+    assert_eq!(it.next(), Some(2u));\n+    assert_eq!(it.next(), Some(4u));\n+    assert_eq!(it.next(), Some(8u));\n+}"}]}