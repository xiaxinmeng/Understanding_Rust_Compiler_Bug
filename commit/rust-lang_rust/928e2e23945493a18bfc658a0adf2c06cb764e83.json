{"sha": "928e2e23945493a18bfc658a0adf2c06cb764e83", "node_id": "MDY6Q29tbWl0NzI0NzEyOjkyOGUyZTIzOTQ1NDkzYTE4YmZjNjU4YTBhZGYyYzA2Y2I3NjRlODM=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2015-03-25T07:47:30Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2015-03-25T07:47:30Z"}, "message": "Auto merge of #23670 - cmr:vec-push-slowpath, r=pcwalton\n\nMakes Vec::push considerably smaller: 25 instructions, rather than 42, on\nx86_64.", "tree": {"sha": "83a3522899dc71b360f2da0d886a8578f89c328c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/83a3522899dc71b360f2da0d886a8578f89c328c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/928e2e23945493a18bfc658a0adf2c06cb764e83", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/928e2e23945493a18bfc658a0adf2c06cb764e83", "html_url": "https://github.com/rust-lang/rust/commit/928e2e23945493a18bfc658a0adf2c06cb764e83", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/928e2e23945493a18bfc658a0adf2c06cb764e83/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "593db005d4dbce2ff72009c1ba03477b031b2c0f", "url": "https://api.github.com/repos/rust-lang/rust/commits/593db005d4dbce2ff72009c1ba03477b031b2c0f", "html_url": "https://github.com/rust-lang/rust/commit/593db005d4dbce2ff72009c1ba03477b031b2c0f"}, {"sha": "0e838f749fd0d532f0cde45ce35a5a9ff8f89533", "url": "https://api.github.com/repos/rust-lang/rust/commits/0e838f749fd0d532f0cde45ce35a5a9ff8f89533", "html_url": "https://github.com/rust-lang/rust/commit/0e838f749fd0d532f0cde45ce35a5a9ff8f89533"}], "stats": {"total": 25, "additions": 16, "deletions": 9}, "files": [{"sha": "e71077c96c774a4acbfb7bdf5174138ae39dd08e", "filename": "src/libcollections/vec.rs", "status": "modified", "additions": 16, "deletions": 9, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/928e2e23945493a18bfc658a0adf2c06cb764e83/src%2Flibcollections%2Fvec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/928e2e23945493a18bfc658a0adf2c06cb764e83/src%2Flibcollections%2Fvec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcollections%2Fvec.rs?ref=928e2e23945493a18bfc658a0adf2c06cb764e83", "patch": "@@ -646,23 +646,30 @@ impl<T> Vec<T> {\n     #[inline]\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n     pub fn push(&mut self, value: T) {\n+        #[cold]\n+        #[inline(never)]\n+        fn resize<T>(vec: &mut Vec<T>) {\n+            let old_size = vec.cap * mem::size_of::<T>();\n+            let size = max(old_size, 2 * mem::size_of::<T>()) * 2;\n+            if old_size > size { panic!(\"capacity overflow\") }\n+            unsafe {\n+                let ptr = alloc_or_realloc(*vec.ptr, old_size, size);\n+                if ptr.is_null() { ::alloc::oom() }\n+                vec.ptr = Unique::new(ptr);\n+            }\n+            vec.cap = max(vec.cap, 2) * 2;\n+        }\n+\n         if mem::size_of::<T>() == 0 {\n             // zero-size types consume no memory, so we can't rely on the\n             // address space running out\n             self.len = self.len.checked_add(1).expect(\"length overflow\");\n             unsafe { mem::forget(value); }\n             return\n         }\n+\n         if self.len == self.cap {\n-            let old_size = self.cap * mem::size_of::<T>();\n-            let size = max(old_size, 2 * mem::size_of::<T>()) * 2;\n-            if old_size > size { panic!(\"capacity overflow\") }\n-            unsafe {\n-                let ptr = alloc_or_realloc(*self.ptr, old_size, size);\n-                if ptr.is_null() { ::alloc::oom() }\n-                self.ptr = Unique::new(ptr);\n-            }\n-            self.cap = max(self.cap, 2) * 2;\n+            resize(self);\n         }\n \n         unsafe {"}]}