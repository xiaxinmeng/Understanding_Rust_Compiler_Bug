{"sha": "5902522c04e78b85d0b958679718b001dd00781b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjU5MDI1MjJjMDRlNzhiODVkMGI5NTg2Nzk3MThiMDAxZGQwMDc4MWI=", "commit": {"author": {"name": "Josh Stone", "email": "jistone@redhat.com", "date": "2019-07-12T00:58:22Z"}, "committer": {"name": "Josh Stone", "email": "jistone@redhat.com", "date": "2019-08-12T22:03:44Z"}, "message": "Reduce genericity in SkipWhile", "tree": {"sha": "21a4fe5e281205780c0aeda7c764eec81445c9ac", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/21a4fe5e281205780c0aeda7c764eec81445c9ac"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5902522c04e78b85d0b958679718b001dd00781b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5902522c04e78b85d0b958679718b001dd00781b", "html_url": "https://github.com/rust-lang/rust/commit/5902522c04e78b85d0b958679718b001dd00781b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5902522c04e78b85d0b958679718b001dd00781b/comments", "author": {"login": "cuviper", "id": 36186, "node_id": "MDQ6VXNlcjM2MTg2", "avatar_url": "https://avatars.githubusercontent.com/u/36186?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cuviper", "html_url": "https://github.com/cuviper", "followers_url": "https://api.github.com/users/cuviper/followers", "following_url": "https://api.github.com/users/cuviper/following{/other_user}", "gists_url": "https://api.github.com/users/cuviper/gists{/gist_id}", "starred_url": "https://api.github.com/users/cuviper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cuviper/subscriptions", "organizations_url": "https://api.github.com/users/cuviper/orgs", "repos_url": "https://api.github.com/users/cuviper/repos", "events_url": "https://api.github.com/users/cuviper/events{/privacy}", "received_events_url": "https://api.github.com/users/cuviper/received_events", "type": "User", "site_admin": false}, "committer": {"login": "cuviper", "id": 36186, "node_id": "MDQ6VXNlcjM2MTg2", "avatar_url": "https://avatars.githubusercontent.com/u/36186?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cuviper", "html_url": "https://github.com/cuviper", "followers_url": "https://api.github.com/users/cuviper/followers", "following_url": "https://api.github.com/users/cuviper/following{/other_user}", "gists_url": "https://api.github.com/users/cuviper/gists{/gist_id}", "starred_url": "https://api.github.com/users/cuviper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cuviper/subscriptions", "organizations_url": "https://api.github.com/users/cuviper/orgs", "repos_url": "https://api.github.com/users/cuviper/repos", "events_url": "https://api.github.com/users/cuviper/events{/privacy}", "received_events_url": "https://api.github.com/users/cuviper/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ff60eca7a127dc8a63bbbf66ba3c7d2d8afea681", "url": "https://api.github.com/repos/rust-lang/rust/commits/ff60eca7a127dc8a63bbbf66ba3c7d2d8afea681", "html_url": "https://github.com/rust-lang/rust/commit/ff60eca7a127dc8a63bbbf66ba3c7d2d8afea681"}], "stats": {"total": 23, "additions": 15, "deletions": 8}, "files": [{"sha": "0e9ce41fa3565d6f624fc3be2c23a6a537461ed4", "filename": "src/libcore/iter/adapters/mod.rs", "status": "modified", "additions": 15, "deletions": 8, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/5902522c04e78b85d0b958679718b001dd00781b/src%2Flibcore%2Fiter%2Fadapters%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5902522c04e78b85d0b958679718b001dd00781b/src%2Flibcore%2Fiter%2Fadapters%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fiter%2Fadapters%2Fmod.rs?ref=5902522c04e78b85d0b958679718b001dd00781b", "patch": "@@ -1397,16 +1397,23 @@ impl<I: Iterator, P> Iterator for SkipWhile<I, P>\n \n     #[inline]\n     fn next(&mut self) -> Option<I::Item> {\n+        fn check<'a, T>(\n+            flag: &'a mut bool,\n+            pred: &'a mut impl FnMut(&T) -> bool,\n+        ) -> impl FnMut(&T) -> bool + 'a {\n+            move |x| {\n+                if *flag || !pred(x) {\n+                    *flag = true;\n+                    true\n+                } else {\n+                    false\n+                }\n+            }\n+        }\n+\n         let flag = &mut self.flag;\n         let pred = &mut self.predicate;\n-        self.iter.find(move |x| {\n-            if *flag || !pred(x) {\n-                *flag = true;\n-                true\n-            } else {\n-                false\n-            }\n-        })\n+        self.iter.find(check(flag, pred))\n     }\n \n     #[inline]"}]}