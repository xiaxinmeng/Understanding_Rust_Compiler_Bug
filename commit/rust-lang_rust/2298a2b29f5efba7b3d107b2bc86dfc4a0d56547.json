{"sha": "2298a2b29f5efba7b3d107b2bc86dfc4a0d56547", "node_id": "MDY6Q29tbWl0NzI0NzEyOjIyOThhMmIyOWY1ZWZiYTdiM2QxMDdiMmJjODZkZmM0YTBkNTY1NDc=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2011-08-03T23:25:38Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2011-08-03T23:25:38Z"}, "message": "Whitespace cleanup", "tree": {"sha": "33b806584f18245c2b6a0e7db1d5ffa79a8d46f0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/33b806584f18245c2b6a0e7db1d5ffa79a8d46f0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2298a2b29f5efba7b3d107b2bc86dfc4a0d56547", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2298a2b29f5efba7b3d107b2bc86dfc4a0d56547", "html_url": "https://github.com/rust-lang/rust/commit/2298a2b29f5efba7b3d107b2bc86dfc4a0d56547", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2298a2b29f5efba7b3d107b2bc86dfc4a0d56547/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "89f2c43cf3288cab664fc5a3ff55fa76e1c3ac21", "url": "https://api.github.com/repos/rust-lang/rust/commits/89f2c43cf3288cab664fc5a3ff55fa76e1c3ac21", "html_url": "https://github.com/rust-lang/rust/commit/89f2c43cf3288cab664fc5a3ff55fa76e1c3ac21"}], "stats": {"total": 12, "additions": 6, "deletions": 6}, "files": [{"sha": "86fd9963b9dcd8b4adf641858f7da6207df348ae", "filename": "src/rt/rust_run_program.cpp", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/2298a2b29f5efba7b3d107b2bc86dfc4a0d56547/src%2Frt%2Frust_run_program.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/2298a2b29f5efba7b3d107b2bc86dfc4a0d56547/src%2Frt%2Frust_run_program.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frust_run_program.cpp?ref=2298a2b29f5efba7b3d107b2bc86dfc4a0d56547", "patch": "@@ -43,7 +43,7 @@ rust_run_program(void* task, const char* argv[],\n     PROCESS_INFORMATION pi;\n     BOOL created = CreateProcess(NULL, cmd, NULL, NULL, TRUE,\n                                  0, NULL, NULL, &si, &pi);\n-                                 \n+\n     CloseHandle(si.hStdInput);\n     CloseHandle(si.hStdOutput);\n     CloseHandle(si.hStdError);"}, {"sha": "6a7056b3544a89fe7fa9671580c0c8b5b81b64f0", "filename": "src/test/compiletest/runtest.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/2298a2b29f5efba7b3d107b2bc86dfc4a0d56547/src%2Ftest%2Fcompiletest%2Fruntest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2298a2b29f5efba7b3d107b2bc86dfc4a0d56547/src%2Ftest%2Fcompiletest%2Fruntest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompiletest%2Fruntest.rs?ref=2298a2b29f5efba7b3d107b2bc86dfc4a0d56547", "patch": "@@ -113,7 +113,7 @@ fn run_pretty_test(cx: &cx, props: &test_props, testfile: &str) {\n       }\n     };\n     let actual = srcs.(ivec::len(srcs) - 1u);\n-    \n+\n     if option::is_some(props.pp_exact) {\n         // Now we have to care about line endings\n         let cr = \"\\r\";"}, {"sha": "1be8cdf9b37928d6a598ca54243ebaa9c1a29977", "filename": "src/test/stdtest/run.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/2298a2b29f5efba7b3d107b2bc86dfc4a0d56547/src%2Ftest%2Fstdtest%2Frun.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2298a2b29f5efba7b3d107b2bc86dfc4a0d56547/src%2Ftest%2Fstdtest%2Frun.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fstdtest%2Frun.rs?ref=2298a2b29f5efba7b3d107b2bc86dfc4a0d56547", "patch": "@@ -31,19 +31,19 @@ fn test_pipes() {\n        pipe_in.in, pipe_out.out, pipe_err.out);\n     os::libc::close(pipe_in.in);\n     os::libc::close(pipe_out.out);\n-    os::libc::close(pipe_err.out);    \n-    \n+    os::libc::close(pipe_err.out);\n+\n     if pid == -1 { fail; }\n     let expected = \"test\";\n     writeclose(pipe_in.out, expected);\n     let actual = readclose(pipe_out.in);\n     readclose(pipe_err.in);\n     os::waitpid(pid);\n-    \n+\n     log expected;\n     log actual;\n     assert expected == actual;\n-    \n+\n     fn writeclose(fd: int, s: &str) {\n         let writer = io::new_writer(\n             io::fd_buf_writer(fd, option::none));"}]}