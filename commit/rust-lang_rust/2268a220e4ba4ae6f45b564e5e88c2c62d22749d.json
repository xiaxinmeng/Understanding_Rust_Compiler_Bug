{"sha": "2268a220e4ba4ae6f45b564e5e88c2c62d22749d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjIyNjhhMjIwZTRiYTRhZTZmNDViNTY0ZTVlODhjMmM2MmQyMjc0OWQ=", "commit": {"author": {"name": "Lauren\u021biu Nicola", "email": "lnicola@dend.ro", "date": "2021-05-27T13:52:15Z"}, "committer": {"name": "Lauren\u021biu Nicola", "email": "lnicola@dend.ro", "date": "2021-05-27T13:52:30Z"}, "message": "Don't store supertraits in ItemTree", "tree": {"sha": "0e77f330f8fee0353893f5ca4d49e8b9bb6f7f63", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0e77f330f8fee0353893f5ca4d49e8b9bb6f7f63"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2268a220e4ba4ae6f45b564e5e88c2c62d22749d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2268a220e4ba4ae6f45b564e5e88c2c62d22749d", "html_url": "https://github.com/rust-lang/rust/commit/2268a220e4ba4ae6f45b564e5e88c2c62d22749d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2268a220e4ba4ae6f45b564e5e88c2c62d22749d/comments", "author": {"login": "lnicola", "id": 308347, "node_id": "MDQ6VXNlcjMwODM0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/308347?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lnicola", "html_url": "https://github.com/lnicola", "followers_url": "https://api.github.com/users/lnicola/followers", "following_url": "https://api.github.com/users/lnicola/following{/other_user}", "gists_url": "https://api.github.com/users/lnicola/gists{/gist_id}", "starred_url": "https://api.github.com/users/lnicola/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lnicola/subscriptions", "organizations_url": "https://api.github.com/users/lnicola/orgs", "repos_url": "https://api.github.com/users/lnicola/repos", "events_url": "https://api.github.com/users/lnicola/events{/privacy}", "received_events_url": "https://api.github.com/users/lnicola/received_events", "type": "User", "site_admin": false}, "committer": {"login": "lnicola", "id": 308347, "node_id": "MDQ6VXNlcjMwODM0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/308347?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lnicola", "html_url": "https://github.com/lnicola", "followers_url": "https://api.github.com/users/lnicola/followers", "following_url": "https://api.github.com/users/lnicola/following{/other_user}", "gists_url": "https://api.github.com/users/lnicola/gists{/gist_id}", "starred_url": "https://api.github.com/users/lnicola/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lnicola/subscriptions", "organizations_url": "https://api.github.com/users/lnicola/orgs", "repos_url": "https://api.github.com/users/lnicola/repos", "events_url": "https://api.github.com/users/lnicola/events{/privacy}", "received_events_url": "https://api.github.com/users/lnicola/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d0a4ba294ccf0c925a5ff1115c19a60c6a24b734", "url": "https://api.github.com/repos/rust-lang/rust/commits/d0a4ba294ccf0c925a5ff1115c19a60c6a24b734", "html_url": "https://github.com/rust-lang/rust/commit/d0a4ba294ccf0c925a5ff1115c19a60c6a24b734"}], "stats": {"total": 20, "additions": 3, "deletions": 17}, "files": [{"sha": "72f0d9b5f798fcaee3139f90c34e97a10348839d", "filename": "crates/hir/src/display.rs", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/2268a220e4ba4ae6f45b564e5e88c2c62d22749d/crates%2Fhir%2Fsrc%2Fdisplay.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2268a220e4ba4ae6f45b564e5e88c2c62d22749d/crates%2Fhir%2Fsrc%2Fdisplay.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir%2Fsrc%2Fdisplay.rs?ref=2268a220e4ba4ae6f45b564e5e88c2c62d22749d", "patch": "@@ -427,10 +427,6 @@ impl HirDisplay for Trait {\n         write!(f, \"trait {}\", data.name)?;\n         let def_id = GenericDefId::TraitId(self.id);\n         write_generic_params(def_id, f)?;\n-        if !data.bounds.is_empty() {\n-            write!(f, \": \")?;\n-            f.write_joined(&*data.bounds, \" + \")?;\n-        }\n         write_where_clause(def_id, f)?;\n         Ok(())\n     }"}, {"sha": "a04f73352bc7c4001ede4f96bed7384b6145e947", "filename": "crates/hir_def/src/data.rs", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/2268a220e4ba4ae6f45b564e5e88c2c62d22749d/crates%2Fhir_def%2Fsrc%2Fdata.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2268a220e4ba4ae6f45b564e5e88c2c62d22749d/crates%2Fhir_def%2Fsrc%2Fdata.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_def%2Fsrc%2Fdata.rs?ref=2268a220e4ba4ae6f45b564e5e88c2c62d22749d", "patch": "@@ -141,7 +141,6 @@ pub struct TraitData {\n     pub is_auto: bool,\n     pub is_unsafe: bool,\n     pub visibility: RawVisibility,\n-    pub bounds: Box<[Interned<TypeBound>]>,\n }\n \n impl TraitData {\n@@ -155,7 +154,6 @@ impl TraitData {\n         let module_id = tr_loc.container;\n         let container = AssocContainerId::TraitId(tr);\n         let visibility = item_tree[tr_def.visibility].clone();\n-        let bounds = tr_def.bounds.clone();\n         let mut expander = Expander::new(db, tr_loc.id.file_id(), module_id);\n \n         let items = collect_items(\n@@ -168,7 +166,7 @@ impl TraitData {\n             100,\n         );\n \n-        Arc::new(TraitData { name, items, is_auto, is_unsafe, visibility, bounds })\n+        Arc::new(TraitData { name, items, is_auto, is_unsafe, visibility })\n     }\n \n     pub fn associated_types(&self) -> impl Iterator<Item = TypeAliasId> + '_ {"}, {"sha": "c4d20c416b4e310a8fcf7b73bc4df3565d5b07dc", "filename": "crates/hir_def/src/item_tree.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/2268a220e4ba4ae6f45b564e5e88c2c62d22749d/crates%2Fhir_def%2Fsrc%2Fitem_tree.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2268a220e4ba4ae6f45b564e5e88c2c62d22749d/crates%2Fhir_def%2Fsrc%2Fitem_tree.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_def%2Fsrc%2Fitem_tree.rs?ref=2268a220e4ba4ae6f45b564e5e88c2c62d22749d", "patch": "@@ -661,7 +661,6 @@ pub struct Trait {\n     pub generic_params: Interned<GenericParams>,\n     pub is_auto: bool,\n     pub is_unsafe: bool,\n-    pub bounds: Box<[Interned<TypeBound>]>,\n     pub items: Box<[AssocItem]>,\n     pub ast_id: FileAstId<ast::Trait>,\n }"}, {"sha": "b83adec46af1d04619fcf5cd26541926d7df01a6", "filename": "crates/hir_def/src/item_tree/lower.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/2268a220e4ba4ae6f45b564e5e88c2c62d22749d/crates%2Fhir_def%2Fsrc%2Fitem_tree%2Flower.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2268a220e4ba4ae6f45b564e5e88c2c62d22749d/crates%2Fhir_def%2Fsrc%2Fitem_tree%2Flower.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_def%2Fsrc%2Fitem_tree%2Flower.rs?ref=2268a220e4ba4ae6f45b564e5e88c2c62d22749d", "patch": "@@ -474,7 +474,6 @@ impl<'a> Ctx<'a> {\n             self.lower_generic_params_and_inner_items(GenericsOwner::Trait(trait_def), trait_def);\n         let is_auto = trait_def.auto_token().is_some();\n         let is_unsafe = trait_def.unsafe_token().is_some();\n-        let bounds = self.lower_type_bounds(trait_def);\n         let items = trait_def.assoc_item_list().map(|list| {\n             let db = self.db;\n             self.with_inherited_visibility(visibility, |this| {\n@@ -497,7 +496,6 @@ impl<'a> Ctx<'a> {\n             generic_params,\n             is_auto,\n             is_unsafe,\n-            bounds: bounds.into(),\n             items: items.unwrap_or_default(),\n             ast_id,\n         };"}, {"sha": "d1ee697cb5de81a60bba3e97f37d0c9546113574", "filename": "crates/hir_def/src/item_tree/pretty.rs", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/2268a220e4ba4ae6f45b564e5e88c2c62d22749d/crates%2Fhir_def%2Fsrc%2Fitem_tree%2Fpretty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2268a220e4ba4ae6f45b564e5e88c2c62d22749d/crates%2Fhir_def%2Fsrc%2Fitem_tree%2Fpretty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_def%2Fsrc%2Fitem_tree%2Fpretty.rs?ref=2268a220e4ba4ae6f45b564e5e88c2c62d22749d", "patch": "@@ -345,7 +345,6 @@ impl<'a> Printer<'a> {\n                     visibility,\n                     is_auto,\n                     is_unsafe,\n-                    bounds,\n                     items,\n                     generic_params,\n                     ast_id: _,\n@@ -359,10 +358,6 @@ impl<'a> Printer<'a> {\n                 }\n                 w!(self, \"trait {}\", name);\n                 self.print_generic_params(generic_params);\n-                if !bounds.is_empty() {\n-                    w!(self, \": \");\n-                    self.print_type_bounds(bounds);\n-                }\n                 self.print_where_clause_and_opening_brace(generic_params);\n                 self.indented(|this| {\n                     for item in &**items {"}, {"sha": "b362add5c9244aa5bdd1edfce7a3300c8aa15d41", "filename": "crates/hir_def/src/item_tree/tests.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/2268a220e4ba4ae6f45b564e5e88c2c62d22749d/crates%2Fhir_def%2Fsrc%2Fitem_tree%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2268a220e4ba4ae6f45b564e5e88c2c62d22749d/crates%2Fhir_def%2Fsrc%2Fitem_tree%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_def%2Fsrc%2Fitem_tree%2Ftests.rs?ref=2268a220e4ba4ae6f45b564e5e88c2c62d22749d", "patch": "@@ -180,7 +180,7 @@ trait Tr: SuperTrait + 'lifetime {\n                 _: (),\n             ) -> ();\n \n-            pub(self) trait Tr<Self>: SuperTrait + 'lifetime\n+            pub(self) trait Tr<Self>\n             where\n                 Self: SuperTrait,\n                 Self: 'lifetime\n@@ -350,7 +350,7 @@ trait Tr<'a, T: 'a>: Super {}\n             pub(self) union Union<'a, T, const U: u8> {\n             }\n \n-            pub(self) trait Tr<'a, Self, T>: Super\n+            pub(self) trait Tr<'a, Self, T>\n             where\n                 Self: Super,\n                 T: 'a"}]}