{"sha": "87a9ae224d946b44f325f42263bf8190584ba21d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjg3YTlhZTIyNGQ5NDZiNDRmMzI1ZjQyMjYzYmY4MTkwNTg0YmEyMWQ=", "commit": {"author": {"name": "Oliver Schneider", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2016-12-07T12:22:21Z"}, "committer": {"name": "Oliver Schneider", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2016-12-07T12:22:21Z"}, "message": "add a -Z flag to guarantee that MIR is generated for all functions", "tree": {"sha": "c1e94ad8b17d35e26ee78d318a54aa3e3d11ac16", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c1e94ad8b17d35e26ee78d318a54aa3e3d11ac16"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/87a9ae224d946b44f325f42263bf8190584ba21d", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQIcBAABAgAGBQJYR/79AAoJEFbW7qD8Z6xG9V8P/jjWVCvlFXEA+YFgpFyNpVph\nVy72vkkuTxXOErMPyUEPvEOhZfnZQjFQ6rE8odOxcN6/OXIgZdrtyTA1vh4tRNB0\n2Nt0pO5buU4I4PzdU9TUKZruuFfUge25UwqiamzDYlRO1tGgcfxAsn1E3jLSSA6I\nsRHUN9xPNEDED4DF7BsmtMAoGxR4QLU7IgrdxncutzA+UOT/+Ad6DVmgK9jK+OO8\nlujKa9Rs4u3z3vlXmOvajTabyHmwS2yLDckEr/rnWTam4gYOPP8ZhjaMNoqRwzSR\nxXvocT2pumK4KXEYXS4mh4vz5B0qIV+ziQ0iKj9qLYSvKyOaqrpErAekLjENeF/u\nvwlVuzUygliOX9kOHwr3UcLfTPwSwfXg11c7VOnn9ktk1TfwRtQ0jYVx5CxcckAc\nTgaIB83ATSfdD5n8zbeDhne/U//kmnIQMCurzMipGnsyYjAvxXdGaAa/0WCrO8UW\nBUrRO8OwwQsXb0/9lWR+4sCM48mhg0UqoCXPbA8dHho6qtSoaRM0GFao1aN37q4a\nH6LVE2Y0ErWZDxS/WyMxfTD9W79sbh3g4iXD47RM5uUO7Ku8bpngtH+XONRk0jL2\nBbj8ATL1sZgdn07uwu/WFHWEo1seUqXGd4rZ/RezYedbD4u/7YZfIp9QARfLAdY9\nGEQvQnCnX2hMemJ7Fm6d\n=0VSe\n-----END PGP SIGNATURE-----", "payload": "tree c1e94ad8b17d35e26ee78d318a54aa3e3d11ac16\nparent 02ea82ddb8315249067afb2f800d62b4ca1f7678\nauthor Oliver Schneider <git-spam-no-reply9815368754983@oli-obk.de> 1481113341 +0100\ncommitter Oliver Schneider <git-spam-no-reply9815368754983@oli-obk.de> 1481113341 +0100\n\nadd a -Z flag to guarantee that MIR is generated for all functions"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/87a9ae224d946b44f325f42263bf8190584ba21d", "html_url": "https://github.com/rust-lang/rust/commit/87a9ae224d946b44f325f42263bf8190584ba21d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/87a9ae224d946b44f325f42263bf8190584ba21d/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "02ea82ddb8315249067afb2f800d62b4ca1f7678", "url": "https://api.github.com/repos/rust-lang/rust/commits/02ea82ddb8315249067afb2f800d62b4ca1f7678", "html_url": "https://github.com/rust-lang/rust/commit/02ea82ddb8315249067afb2f800d62b4ca1f7678"}], "stats": {"total": 8, "additions": 6, "deletions": 2}, "files": [{"sha": "17b572e7f9e432270e0046903927bcc48fcce3b2", "filename": "src/librustc/session/config.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/87a9ae224d946b44f325f42263bf8190584ba21d/src%2Flibrustc%2Fsession%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/87a9ae224d946b44f325f42263bf8190584ba21d/src%2Flibrustc%2Fsession%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fsession%2Fconfig.rs?ref=87a9ae224d946b44f325f42263bf8190584ba21d", "patch": "@@ -928,6 +928,8 @@ options! {DebuggingOptions, DebuggingSetter, basic_debugging_options,\n           \"print some statistics about AST and HIR\"),\n     mir_stats: bool = (false, parse_bool, [UNTRACKED],\n           \"print some statistics about MIR\"),\n+    always_encode_mir: bool = (false, parse_bool, [TRACKED],\n+          \"encode MIR of all functions into the crate metadata\"),\n }\n \n pub fn default_lib_output() -> CrateType {"}, {"sha": "d9bcdb36026e5a34c3b2c02f2eb66794db8c9917", "filename": "src/librustc_metadata/encoder.rs", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/87a9ae224d946b44f325f42263bf8190584ba21d/src%2Flibrustc_metadata%2Fencoder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/87a9ae224d946b44f325f42263bf8190584ba21d/src%2Flibrustc_metadata%2Fencoder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_metadata%2Fencoder.rs?ref=87a9ae224d946b44f325f42263bf8190584ba21d", "patch": "@@ -577,7 +577,8 @@ impl<'a, 'tcx> EncodeContext<'a, 'tcx> {\n             let types = generics.parent_types as usize + generics.types.len();\n             let needs_inline = types > 0 || attr::requests_inline(&ast_item.attrs);\n             let is_const_fn = sig.constness == hir::Constness::Const;\n-            (is_const_fn, needs_inline || is_const_fn)\n+            let always_encode_mir = self.tcx.sess.opts.debugging_opts.always_encode_mir;\n+            (is_const_fn, needs_inline || is_const_fn || always_encode_mir)\n         } else {\n             (false, false)\n         };\n@@ -842,7 +843,8 @@ impl<'a, 'tcx> EncodeContext<'a, 'tcx> {\n                 hir::ItemFn(_, _, constness, _, ref generics, _) => {\n                     let tps_len = generics.ty_params.len();\n                     let needs_inline = tps_len > 0 || attr::requests_inline(&item.attrs);\n-                    if needs_inline || constness == hir::Constness::Const {\n+                    let always_encode_mir = self.tcx.sess.opts.debugging_opts.always_encode_mir;\n+                    if needs_inline || constness == hir::Constness::Const || always_encode_mir {\n                         self.encode_mir(def_id)\n                     } else {\n                         None"}]}