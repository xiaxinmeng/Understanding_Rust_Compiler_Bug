{"sha": "00dd9e9cc57d1925df8362d02c6504b01d8105e3", "node_id": "MDY6Q29tbWl0NzI0NzEyOjAwZGQ5ZTljYzU3ZDE5MjVkZjgzNjJkMDJjNjUwNGIwMWQ4MTA1ZTM=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2013-08-21T04:41:50Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2013-08-21T04:41:50Z"}, "message": "auto merge of #8573 : mrordinaire/rust/struct-new-as-field-name, r=alexcrichton\n\nfix for #8088, along with a test.", "tree": {"sha": "2a25f32074b8924afdb37c079b9e813822dde79b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2a25f32074b8924afdb37c079b9e813822dde79b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/00dd9e9cc57d1925df8362d02c6504b01d8105e3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/00dd9e9cc57d1925df8362d02c6504b01d8105e3", "html_url": "https://github.com/rust-lang/rust/commit/00dd9e9cc57d1925df8362d02c6504b01d8105e3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/00dd9e9cc57d1925df8362d02c6504b01d8105e3/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d56b9b102b307b473487402b0e494975206237b6", "url": "https://api.github.com/repos/rust-lang/rust/commits/d56b9b102b307b473487402b0e494975206237b6", "html_url": "https://github.com/rust-lang/rust/commit/d56b9b102b307b473487402b0e494975206237b6"}, {"sha": "4457d2b379c40415ac95d7cb7d98508bb919ff36", "url": "https://api.github.com/repos/rust-lang/rust/commits/4457d2b379c40415ac95d7cb7d98508bb919ff36", "html_url": "https://github.com/rust-lang/rust/commit/4457d2b379c40415ac95d7cb7d98508bb919ff36"}], "stats": {"total": 33, "additions": 8, "deletions": 25}, "files": [{"sha": "989a796cbc9127f800b01d8f9ff4cb1d1e18dcdb", "filename": "src/libsyntax/parse/obsolete.rs", "status": "modified", "additions": 0, "deletions": 19, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/00dd9e9cc57d1925df8362d02c6504b01d8105e3/src%2Flibsyntax%2Fparse%2Fobsolete.rs", "raw_url": "https://github.com/rust-lang/rust/raw/00dd9e9cc57d1925df8362d02c6504b01d8105e3/src%2Flibsyntax%2Fparse%2Fobsolete.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fobsolete.rs?ref=00dd9e9cc57d1925df8362d02c6504b01d8105e3", "patch": "@@ -32,7 +32,6 @@ use std::to_bytes;\n pub enum ObsoleteSyntax {\n     ObsoleteLet,\n     ObsoleteFieldTerminator,\n-    ObsoleteStructCtor,\n     ObsoleteWith,\n     ObsoleteClassTraits,\n     ObsoletePrivSection,\n@@ -89,7 +88,6 @@ pub trait ParserObsoleteMethods {\n     fn token_is_obsolete_ident(&self, ident: &str, token: &Token) -> bool;\n     fn is_obsolete_ident(&self, ident: &str) -> bool;\n     fn eat_obsolete_ident(&self, ident: &str) -> bool;\n-    fn try_parse_obsolete_struct_ctor(&self) -> bool;\n     fn try_parse_obsolete_with(&self) -> bool;\n     fn try_parse_obsolete_priv_section(&self, attrs: &[Attribute]) -> bool;\n }\n@@ -106,12 +104,6 @@ impl ParserObsoleteMethods for Parser {\n                 \"field declaration terminated with semicolon\",\n                 \"fields are now separated by commas\"\n             ),\n-            ObsoleteStructCtor => (\n-                \"struct constructor\",\n-                \"structs are now constructed with `MyStruct { foo: val }` \\\n-                 syntax. Structs with private fields cannot be created \\\n-                 outside of their defining module\"\n-            ),\n             ObsoleteWith => (\n                 \"with\",\n                 \"record update is done with `..`, e.g. \\\n@@ -311,17 +303,6 @@ impl ParserObsoleteMethods for Parser {\n         }\n     }\n \n-    fn try_parse_obsolete_struct_ctor(&self) -> bool {\n-        if self.eat_obsolete_ident(\"new\") {\n-            self.obsolete(*self.last_span, ObsoleteStructCtor);\n-            self.parse_fn_decl();\n-            self.parse_block();\n-            true\n-        } else {\n-            false\n-        }\n-    }\n-\n     fn try_parse_obsolete_with(&self) -> bool {\n         if *self.token == token::COMMA\n             && self.look_ahead(1,"}, {"sha": "2b977153b033ff7a4ea101eeb003a12fa43a299a", "filename": "src/libsyntax/parse/parser.rs", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/00dd9e9cc57d1925df8362d02c6504b01d8105e3/src%2Flibsyntax%2Fparse%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/00dd9e9cc57d1925df8362d02c6504b01d8105e3/src%2Flibsyntax%2Fparse%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fparser.rs?ref=00dd9e9cc57d1925df8362d02c6504b01d8105e3", "patch": "@@ -3929,10 +3929,6 @@ impl Parser {\n            return ~[self.parse_single_struct_field(public, attrs)];\n         }\n \n-        if self.try_parse_obsolete_struct_ctor() {\n-            return ~[];\n-        }\n-\n         return ~[self.parse_single_struct_field(inherited, attrs)];\n     }\n "}, {"sha": "49af0972341d14385934f41e95b04da5fba23e86", "filename": "src/test/compile-fail/obsolete-syntax.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/00dd9e9cc57d1925df8362d02c6504b01d8105e3/src%2Ftest%2Fcompile-fail%2Fobsolete-syntax.rs", "raw_url": "https://github.com/rust-lang/rust/raw/00dd9e9cc57d1925df8362d02c6504b01d8105e3/src%2Ftest%2Fcompile-fail%2Fobsolete-syntax.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fobsolete-syntax.rs?ref=00dd9e9cc57d1925df8362d02c6504b01d8105e3", "patch": "@@ -13,8 +13,6 @@ struct s {\n     //~^ ERROR obsolete syntax: `let` in field declaration\n     bar: ();\n     //~^ ERROR obsolete syntax: field declaration terminated with semicolon\n-    new() { }\n-    //~^ ERROR obsolete syntax: struct constructor\n }\n \n struct q : r {"}, {"sha": "fb93c560e0de437abaa0db43170913e5d6f97141", "filename": "src/test/run-pass/struct-new-as-field-name.rs", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/00dd9e9cc57d1925df8362d02c6504b01d8105e3/src%2Ftest%2Frun-pass%2Fstruct-new-as-field-name.rs", "raw_url": "https://github.com/rust-lang/rust/raw/00dd9e9cc57d1925df8362d02c6504b01d8105e3/src%2Ftest%2Frun-pass%2Fstruct-new-as-field-name.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fstruct-new-as-field-name.rs?ref=00dd9e9cc57d1925df8362d02c6504b01d8105e3", "patch": "@@ -0,0 +1,8 @@\n+struct Foo {\n+    new: int,\n+}\n+\n+pub fn main() {\n+    let foo = Foo{ new: 3 };\n+    assert_eq!(foo.new, 3);\n+}"}]}