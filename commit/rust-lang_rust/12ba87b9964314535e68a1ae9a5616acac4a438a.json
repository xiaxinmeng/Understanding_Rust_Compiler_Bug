{"sha": "12ba87b9964314535e68a1ae9a5616acac4a438a", "node_id": "C_kwDOAAsO6NoAKDEyYmE4N2I5OTY0MzE0NTM1ZTY4YTFhZTlhNTYxNmFjYWM0YTQzOGE", "commit": {"author": {"name": "Michael Goulet", "email": "michael@errs.io", "date": "2022-05-30T22:57:28Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-05-30T22:57:28Z"}, "message": "Rollup merge of #97395 - RalfJung:call-abi, r=oli-obk\n\nMiri call ABI check: ensure type size+align stay the same\n\nWe should almost certainly not accept calls where caller and callee disagree on the size or alignment of the type.\n\nThe checks we do *almost* imply that, except that `ScalarPair` types can have `repr(align)` and thus differ in size/align even when they are pairs of the same primitive type.\n\nr? ``@oli-obk``", "tree": {"sha": "1464137c2ab872c112baa858113668f0f41a5d28", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1464137c2ab872c112baa858113668f0f41a5d28"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/12ba87b9964314535e68a1ae9a5616acac4a438a", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJilUvZCRBK7hj4Ov3rIwAAO/YIADHCaEwVfbSiVaB1TVzRhzSf\nUKmVRzr5palCog+m8xGrckqNszGqWvbr37XZtjLkCLSOqVo4ZfqzgH6hWahPZbQe\nLoS6ZXmgPLS91vndCdnlZ1GRK1RBx/UuRL1DrQjJqSPWexxPpDQdg+O3vZoezhRj\niEIeWS8xTKXiAoBcSWDSwJGDBZStyQImXmcsXVokgKrGSGBk0zBXUIFWH0z43BWP\nhXRzVgNdQY8sM3rrxnR90Rf5QIoFc4dR+kAfVF2t6s7BmHCAhXOxbUY2LuqLDvxv\nJDtNkVUjKX5PX6RPUR7KKfuNcrclK1DR/xOoLK3xNenREJTXeMQ/h6wzefYCWos=\n=16B8\n-----END PGP SIGNATURE-----\n", "payload": "tree 1464137c2ab872c112baa858113668f0f41a5d28\nparent 22da719762c1d101c20f59620f1445f5eaf75bba\nparent d7a2d9ae0e7e4b3c5811bdfd4809cfc772062140\nauthor Michael Goulet <michael@errs.io> 1653951448 -0700\ncommitter GitHub <noreply@github.com> 1653951448 -0700\n\nRollup merge of #97395 - RalfJung:call-abi, r=oli-obk\n\nMiri call ABI check: ensure type size+align stay the same\n\nWe should almost certainly not accept calls where caller and callee disagree on the size or alignment of the type.\n\nThe checks we do *almost* imply that, except that `ScalarPair` types can have `repr(align)` and thus differ in size/align even when they are pairs of the same primitive type.\n\nr? ``@oli-obk``\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/12ba87b9964314535e68a1ae9a5616acac4a438a", "html_url": "https://github.com/rust-lang/rust/commit/12ba87b9964314535e68a1ae9a5616acac4a438a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/12ba87b9964314535e68a1ae9a5616acac4a438a/comments", "author": {"login": "compiler-errors", "id": 3674314, "node_id": "MDQ6VXNlcjM2NzQzMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3674314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/compiler-errors", "html_url": "https://github.com/compiler-errors", "followers_url": "https://api.github.com/users/compiler-errors/followers", "following_url": "https://api.github.com/users/compiler-errors/following{/other_user}", "gists_url": "https://api.github.com/users/compiler-errors/gists{/gist_id}", "starred_url": "https://api.github.com/users/compiler-errors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/compiler-errors/subscriptions", "organizations_url": "https://api.github.com/users/compiler-errors/orgs", "repos_url": "https://api.github.com/users/compiler-errors/repos", "events_url": "https://api.github.com/users/compiler-errors/events{/privacy}", "received_events_url": "https://api.github.com/users/compiler-errors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "22da719762c1d101c20f59620f1445f5eaf75bba", "url": "https://api.github.com/repos/rust-lang/rust/commits/22da719762c1d101c20f59620f1445f5eaf75bba", "html_url": "https://github.com/rust-lang/rust/commit/22da719762c1d101c20f59620f1445f5eaf75bba"}, {"sha": "d7a2d9ae0e7e4b3c5811bdfd4809cfc772062140", "url": "https://api.github.com/repos/rust-lang/rust/commits/d7a2d9ae0e7e4b3c5811bdfd4809cfc772062140", "html_url": "https://github.com/rust-lang/rust/commit/d7a2d9ae0e7e4b3c5811bdfd4809cfc772062140"}], "stats": {"total": 9, "additions": 8, "deletions": 1}, "files": [{"sha": "10da2f803afe789b4004adedf1f427dcd6fa490d", "filename": "compiler/rustc_const_eval/src/interpret/terminator.rs", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/12ba87b9964314535e68a1ae9a5616acac4a438a/compiler%2Frustc_const_eval%2Fsrc%2Finterpret%2Fterminator.rs", "raw_url": "https://github.com/rust-lang/rust/raw/12ba87b9964314535e68a1ae9a5616acac4a438a/compiler%2Frustc_const_eval%2Fsrc%2Finterpret%2Fterminator.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_const_eval%2Fsrc%2Finterpret%2Fterminator.rs?ref=12ba87b9964314535e68a1ae9a5616acac4a438a", "patch": "@@ -185,7 +185,14 @@ impl<'mir, 'tcx: 'mir, M: Machine<'mir, 'tcx>> InterpCx<'mir, 'tcx, M> {\n                 // No question\n                 return true;\n             }\n-            // Compare layout\n+            if caller_abi.layout.size != callee_abi.layout.size\n+                || caller_abi.layout.align.abi != callee_abi.layout.align.abi\n+            {\n+                // This cannot go well...\n+                // FIXME: What about unsized types?\n+                return false;\n+            }\n+            // The rest *should* be okay, but we are extra conservative.\n             match (caller_abi.layout.abi, callee_abi.layout.abi) {\n                 // Different valid ranges are okay (once we enforce validity,\n                 // that will take care to make it UB to leave the range, just"}]}