{"sha": "82e5fe1d72f82ed9b20a55e96e496faf4875e444", "node_id": "MDY6Q29tbWl0NzI0NzEyOjgyZTVmZTFkNzJmODJlZDliMjBhNTVlOTZlNDk2ZmFmNDg3NWU0NDQ=", "commit": {"author": {"name": "Jacob Parker", "email": "j3parker@csclub.uwaterloo.ca", "date": "2012-03-25T20:29:18Z"}, "committer": {"name": "Jacob Parker", "email": "j3parker@csclub.uwaterloo.ca", "date": "2012-03-25T20:29:18Z"}, "message": "str::to_chars -> str::chars", "tree": {"sha": "0b5e1cb3be94e1e8411fa84f6a5cda43743e9cf2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0b5e1cb3be94e1e8411fa84f6a5cda43743e9cf2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/82e5fe1d72f82ed9b20a55e96e496faf4875e444", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/82e5fe1d72f82ed9b20a55e96e496faf4875e444", "html_url": "https://github.com/rust-lang/rust/commit/82e5fe1d72f82ed9b20a55e96e496faf4875e444", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/82e5fe1d72f82ed9b20a55e96e496faf4875e444/comments", "author": {"login": "j3parker", "id": 597907, "node_id": "MDQ6VXNlcjU5NzkwNw==", "avatar_url": "https://avatars.githubusercontent.com/u/597907?v=4", "gravatar_id": "", "url": "https://api.github.com/users/j3parker", "html_url": "https://github.com/j3parker", "followers_url": "https://api.github.com/users/j3parker/followers", "following_url": "https://api.github.com/users/j3parker/following{/other_user}", "gists_url": "https://api.github.com/users/j3parker/gists{/gist_id}", "starred_url": "https://api.github.com/users/j3parker/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/j3parker/subscriptions", "organizations_url": "https://api.github.com/users/j3parker/orgs", "repos_url": "https://api.github.com/users/j3parker/repos", "events_url": "https://api.github.com/users/j3parker/events{/privacy}", "received_events_url": "https://api.github.com/users/j3parker/received_events", "type": "User", "site_admin": false}, "committer": {"login": "j3parker", "id": 597907, "node_id": "MDQ6VXNlcjU5NzkwNw==", "avatar_url": "https://avatars.githubusercontent.com/u/597907?v=4", "gravatar_id": "", "url": "https://api.github.com/users/j3parker", "html_url": "https://github.com/j3parker", "followers_url": "https://api.github.com/users/j3parker/followers", "following_url": "https://api.github.com/users/j3parker/following{/other_user}", "gists_url": "https://api.github.com/users/j3parker/gists{/gist_id}", "starred_url": "https://api.github.com/users/j3parker/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/j3parker/subscriptions", "organizations_url": "https://api.github.com/users/j3parker/orgs", "repos_url": "https://api.github.com/users/j3parker/repos", "events_url": "https://api.github.com/users/j3parker/events{/privacy}", "received_events_url": "https://api.github.com/users/j3parker/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f5c91d10dde732c56ed08244e3326c9f1a2ebc30", "url": "https://api.github.com/repos/rust-lang/rust/commits/f5c91d10dde732c56ed08244e3326c9f1a2ebc30", "html_url": "https://github.com/rust-lang/rust/commit/f5c91d10dde732c56ed08244e3326c9f1a2ebc30"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "e264458af7322f44dfc36a5677874ff32fade94d", "filename": "doc/tutorial.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/82e5fe1d72f82ed9b20a55e96e496faf4875e444/doc%2Ftutorial.md", "raw_url": "https://github.com/rust-lang/rust/raw/82e5fe1d72f82ed9b20a55e96e496faf4875e444/doc%2Ftutorial.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/doc%2Ftutorial.md?ref=82e5fe1d72f82ed9b20a55e96e496faf4875e444", "patch": "@@ -1308,7 +1308,7 @@ iterate over all characters, which `str::chars` helps with), and\n for those that do, many don't need actual characters, and can operate\n on bytes. For algorithms that do really need to index by character,\n there's the option to convert your string to a character vector (using\n-`str::to_chars`).\n+`str::chars`).\n \n Like vectors, strings are always unique. You can wrap them in a shared\n box to share them. Unlike vectors, there is no mutable variant of"}]}