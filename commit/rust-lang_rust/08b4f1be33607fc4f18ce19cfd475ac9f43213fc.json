{"sha": "08b4f1be33607fc4f18ce19cfd475ac9f43213fc", "node_id": "C_kwDOAAsO6NoAKDA4YjRmMWJlMzM2MDdmYzRmMThjZTE5Y2ZkNDc1YWM5ZjQzMjEzZmM", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-05-11T13:47:38Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-05-11T13:47:38Z"}, "message": "Auto merge of #96942 - Dylan-DPC:rollup-p8bcly2, r=Dylan-DPC\n\nRollup of 4 pull requests\n\nSuccessful merges:\n\n - #91518 (Add readable rustdoc display for RISC-V target)\n - #95281 (Fix inaccurate function name in `rustc_const_eval` docs)\n - #96898 (logging: add env var to control verbose scope entry/exit logging)\n - #96936 (:arrow_up: rust-analyzer)\n\nFailed merges:\n\nr? `@ghost`\n`@rustbot` modify labels: rollup", "tree": {"sha": "7b063605700341d78ea936146f2cf47c3081e950", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7b063605700341d78ea936146f2cf47c3081e950"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/08b4f1be33607fc4f18ce19cfd475ac9f43213fc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/08b4f1be33607fc4f18ce19cfd475ac9f43213fc", "html_url": "https://github.com/rust-lang/rust/commit/08b4f1be33607fc4f18ce19cfd475ac9f43213fc", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/08b4f1be33607fc4f18ce19cfd475ac9f43213fc/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a85de162a513d1d11d263783a3f7092fff824b48", "url": "https://api.github.com/repos/rust-lang/rust/commits/a85de162a513d1d11d263783a3f7092fff824b48", "html_url": "https://github.com/rust-lang/rust/commit/a85de162a513d1d11d263783a3f7092fff824b48"}, {"sha": "cf1d52f9cceda0e0adc79088d4de186f63e6c81a", "url": "https://api.github.com/repos/rust-lang/rust/commits/cf1d52f9cceda0e0adc79088d4de186f63e6c81a", "html_url": "https://github.com/rust-lang/rust/commit/cf1d52f9cceda0e0adc79088d4de186f63e6c81a"}], "stats": {"total": 23, "additions": 19, "deletions": 4}, "files": [{"sha": "8926676e815f929477a3d3919c96add83b4adc0a", "filename": "compiler/rustc_const_eval/src/interpret/operand.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/08b4f1be33607fc4f18ce19cfd475ac9f43213fc/compiler%2Frustc_const_eval%2Fsrc%2Finterpret%2Foperand.rs", "raw_url": "https://github.com/rust-lang/rust/raw/08b4f1be33607fc4f18ce19cfd475ac9f43213fc/compiler%2Frustc_const_eval%2Fsrc%2Finterpret%2Foperand.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_const_eval%2Fsrc%2Finterpret%2Foperand.rs?ref=08b4f1be33607fc4f18ce19cfd475ac9f43213fc", "patch": "@@ -520,8 +520,8 @@ impl<'mir, 'tcx: 'mir, M: Machine<'mir, 'tcx>> InterpCx<'mir, 'tcx, M> {\n         Ok(OpTy { op, layout: place.layout })\n     }\n \n-    // Evaluate a place with the goal of reading from it.  This lets us sometimes\n-    // avoid allocations.\n+    /// Evaluate a place with the goal of reading from it.  This lets us sometimes\n+    /// avoid allocations.\n     pub fn eval_place_to_op(\n         &self,\n         place: mir::Place<'tcx>,"}, {"sha": "e23c6f2a9541993dc556863f3ee9d3e75838a57a", "filename": "compiler/rustc_const_eval/src/interpret/place.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/08b4f1be33607fc4f18ce19cfd475ac9f43213fc/compiler%2Frustc_const_eval%2Fsrc%2Finterpret%2Fplace.rs", "raw_url": "https://github.com/rust-lang/rust/raw/08b4f1be33607fc4f18ce19cfd475ac9f43213fc/compiler%2Frustc_const_eval%2Fsrc%2Finterpret%2Fplace.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_const_eval%2Fsrc%2Finterpret%2Fplace.rs?ref=08b4f1be33607fc4f18ce19cfd475ac9f43213fc", "patch": "@@ -625,7 +625,7 @@ where\n     }\n \n     /// Computes a place. You should only use this if you intend to write into this\n-    /// place; for reading, a more efficient alternative is `eval_place_for_read`.\n+    /// place; for reading, a more efficient alternative is `eval_place_to_op`.\n     #[instrument(skip(self), level = \"debug\")]\n     pub fn eval_place(\n         &mut self,"}, {"sha": "c152815eeca68e408d9f470021f73992f6b56bc0", "filename": "compiler/rustc_log/src/lib.rs", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/08b4f1be33607fc4f18ce19cfd475ac9f43213fc/compiler%2Frustc_log%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/08b4f1be33607fc4f18ce19cfd475ac9f43213fc/compiler%2Frustc_log%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_log%2Fsrc%2Flib.rs?ref=08b4f1be33607fc4f18ce19cfd475ac9f43213fc", "patch": "@@ -67,11 +67,24 @@ pub fn init_env_logger(env: &str) -> Result<(), Error> {\n         Err(VarError::NotUnicode(_value)) => return Err(Error::NonUnicodeColorValue),\n     };\n \n+    let verbose_entry_exit = match env::var_os(String::from(env) + \"_ENTRY_EXIT\") {\n+        None => false,\n+        Some(v) => {\n+            if &v == \"0\" {\n+                false\n+            } else {\n+                true\n+            }\n+        }\n+    };\n+\n     let layer = tracing_tree::HierarchicalLayer::default()\n         .with_writer(io::stderr)\n         .with_indent_lines(true)\n         .with_ansi(color_logs)\n         .with_targets(true)\n+        .with_verbose_exit(verbose_entry_exit)\n+        .with_verbose_entry(verbose_entry_exit)\n         .with_indent_amount(2);\n     #[cfg(parallel_compiler)]\n     let layer = layer.with_thread_ids(true).with_thread_names(true);"}, {"sha": "9e9c4dfb506e57a39f84984ec201e3320838c5c3", "filename": "src/librustdoc/clean/cfg.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/08b4f1be33607fc4f18ce19cfd475ac9f43213fc/src%2Flibrustdoc%2Fclean%2Fcfg.rs", "raw_url": "https://github.com/rust-lang/rust/raw/08b4f1be33607fc4f18ce19cfd475ac9f43213fc/src%2Flibrustdoc%2Fclean%2Fcfg.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fclean%2Fcfg.rs?ref=08b4f1be33607fc4f18ce19cfd475ac9f43213fc", "patch": "@@ -517,6 +517,8 @@ impl<'a> fmt::Display for Display<'a> {\n                         \"msp430\" => \"MSP430\",\n                         \"powerpc\" => \"PowerPC\",\n                         \"powerpc64\" => \"PowerPC-64\",\n+                        \"riscv32\" => \"RISC-V RV32\",\n+                        \"riscv64\" => \"RISC-V RV64\",\n                         \"s390x\" => \"s390x\",\n                         \"sparc64\" => \"SPARC64\",\n                         \"wasm32\" | \"wasm64\" => \"WebAssembly\","}, {"sha": "5d5bbec9b60010dd7389a084c56693baf6bda780", "filename": "src/tools/rust-analyzer", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": null, "raw_url": null, "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Frust-analyzer?ref=08b4f1be33607fc4f18ce19cfd475ac9f43213fc", "patch": "@@ -1 +1 @@\n-Subproject commit 5dce1ff0212e467271c9e895478670c74d847ee9\n+Subproject commit 5d5bbec9b60010dd7389a084c56693baf6bda780"}]}