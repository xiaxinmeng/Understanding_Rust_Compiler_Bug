{"sha": "1949c6599d7d088eca6893f1c118b05e5c5d1679", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE5NDljNjU5OWQ3ZDA4OGVjYTY4OTNmMWMxMThiMDVlNWM1ZDE2Nzk=", "commit": {"author": {"name": "Corey Farwell", "email": "coreyf@rwell.org", "date": "2017-08-15T13:42:11Z"}, "committer": {"name": "Corey Farwell", "email": "coreyf@rwell.org", "date": "2017-08-15T13:42:11Z"}, "message": "Add comments clarifying behavior of unix `set_readonly` behavior.", "tree": {"sha": "63ddeb61a14824e2d163db3e9df457a36d1fdaa6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/63ddeb61a14824e2d163db3e9df457a36d1fdaa6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1949c6599d7d088eca6893f1c118b05e5c5d1679", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1949c6599d7d088eca6893f1c118b05e5c5d1679", "html_url": "https://github.com/rust-lang/rust/commit/1949c6599d7d088eca6893f1c118b05e5c5d1679", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1949c6599d7d088eca6893f1c118b05e5c5d1679/comments", "author": {"login": "frewsxcv", "id": 416575, "node_id": "MDQ6VXNlcjQxNjU3NQ==", "avatar_url": "https://avatars.githubusercontent.com/u/416575?v=4", "gravatar_id": "", "url": "https://api.github.com/users/frewsxcv", "html_url": "https://github.com/frewsxcv", "followers_url": "https://api.github.com/users/frewsxcv/followers", "following_url": "https://api.github.com/users/frewsxcv/following{/other_user}", "gists_url": "https://api.github.com/users/frewsxcv/gists{/gist_id}", "starred_url": "https://api.github.com/users/frewsxcv/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/frewsxcv/subscriptions", "organizations_url": "https://api.github.com/users/frewsxcv/orgs", "repos_url": "https://api.github.com/users/frewsxcv/repos", "events_url": "https://api.github.com/users/frewsxcv/events{/privacy}", "received_events_url": "https://api.github.com/users/frewsxcv/received_events", "type": "User", "site_admin": false}, "committer": {"login": "frewsxcv", "id": 416575, "node_id": "MDQ6VXNlcjQxNjU3NQ==", "avatar_url": "https://avatars.githubusercontent.com/u/416575?v=4", "gravatar_id": "", "url": "https://api.github.com/users/frewsxcv", "html_url": "https://github.com/frewsxcv", "followers_url": "https://api.github.com/users/frewsxcv/followers", "following_url": "https://api.github.com/users/frewsxcv/following{/other_user}", "gists_url": "https://api.github.com/users/frewsxcv/gists{/gist_id}", "starred_url": "https://api.github.com/users/frewsxcv/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/frewsxcv/subscriptions", "organizations_url": "https://api.github.com/users/frewsxcv/orgs", "repos_url": "https://api.github.com/users/frewsxcv/repos", "events_url": "https://api.github.com/users/frewsxcv/events{/privacy}", "received_events_url": "https://api.github.com/users/frewsxcv/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c774c9591959edc9aa098e5ff7fc4be2e4a12c09", "url": "https://api.github.com/repos/rust-lang/rust/commits/c774c9591959edc9aa098e5ff7fc4be2e4a12c09", "html_url": "https://github.com/rust-lang/rust/commit/c774c9591959edc9aa098e5ff7fc4be2e4a12c09"}], "stats": {"total": 8, "additions": 7, "deletions": 1}, "files": [{"sha": "cb0f687e0721c2793261d99197bc1406524d22de", "filename": "src/libstd/sys/unix/fs.rs", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/1949c6599d7d088eca6893f1c118b05e5c5d1679/src%2Flibstd%2Fsys%2Funix%2Ffs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1949c6599d7d088eca6893f1c118b05e5c5d1679/src%2Flibstd%2Fsys%2Funix%2Ffs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Funix%2Ffs.rs?ref=1949c6599d7d088eca6893f1c118b05e5c5d1679", "patch": "@@ -170,11 +170,17 @@ impl AsInner<stat64> for FileAttr {\n }\n \n impl FilePermissions {\n-    pub fn readonly(&self) -> bool { self.mode & 0o222 == 0 }\n+    pub fn readonly(&self) -> bool {\n+        // check if any class (owner, group, others) has write permission\n+        self.mode & 0o222 == 0\n+    }\n+\n     pub fn set_readonly(&mut self, readonly: bool) {\n         if readonly {\n+            // remove write permission for all classes; equivalent to `chmod a-w <file>`\n             self.mode &= !0o222;\n         } else {\n+            // add write permission for all classes; equivalent to `chmod a+w <file>`\n             self.mode |= 0o222;\n         }\n     }"}]}