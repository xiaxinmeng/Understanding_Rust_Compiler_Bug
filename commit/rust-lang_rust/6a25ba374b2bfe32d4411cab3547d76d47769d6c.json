{"sha": "6a25ba374b2bfe32d4411cab3547d76d47769d6c", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZhMjViYTM3NGIyYmZlMzJkNDQxMWNhYjM1NDdkNzZkNDc3NjlkNmM=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2013-11-20T04:31:21Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2013-11-20T04:31:21Z"}, "message": "auto merge of #10575 : sfackler/rust/non-copyable, r=huonw\n\nThe issue that required it has been fixed.", "tree": {"sha": "9d6c30fb6b82fb423364e27c964d59f651e06a54", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9d6c30fb6b82fb423364e27c964d59f651e06a54"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6a25ba374b2bfe32d4411cab3547d76d47769d6c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6a25ba374b2bfe32d4411cab3547d76d47769d6c", "html_url": "https://github.com/rust-lang/rust/commit/6a25ba374b2bfe32d4411cab3547d76d47769d6c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6a25ba374b2bfe32d4411cab3547d76d47769d6c/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c159acb05d95d832de3cebb5e1e91ee34e550c9d", "url": "https://api.github.com/repos/rust-lang/rust/commits/c159acb05d95d832de3cebb5e1e91ee34e550c9d", "html_url": "https://github.com/rust-lang/rust/commit/c159acb05d95d832de3cebb5e1e91ee34e550c9d"}, {"sha": "3e637d505e39a839ed96630fb7ea5d61a9e8e627", "url": "https://api.github.com/repos/rust-lang/rust/commits/3e637d505e39a839ed96630fb7ea5d61a9e8e627", "html_url": "https://github.com/rust-lang/rust/commit/3e637d505e39a839ed96630fb7ea5d61a9e8e627"}], "stats": {"total": 16, "additions": 5, "deletions": 11}, "files": [{"sha": "a8fcbd521d026fb36be11122acbd520e284ce0ac", "filename": "src/libextra/sync.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/6a25ba374b2bfe32d4411cab3547d76d47769d6c/src%2Flibextra%2Fsync.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6a25ba374b2bfe32d4411cab3547d76d47769d6c/src%2Flibextra%2Fsync.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibextra%2Fsync.rs?ref=6a25ba374b2bfe32d4411cab3547d76d47769d6c", "patch": "@@ -326,7 +326,7 @@ impl Sem<~[WaitQueue]> {\n     // and rwlock_write_mode.\n     pub fn access_cond<U>(&self, blk: |c: &Condvar| -> U) -> U {\n         do self.access {\n-            blk(&Condvar { sem: self, order: Nothing, token: NonCopyable::new() })\n+            blk(&Condvar { sem: self, order: Nothing, token: NonCopyable })\n         }\n     }\n }\n@@ -569,7 +569,7 @@ impl RWLock {\n                 do task::rekillable {\n                     let opt_lock = Just(&self.order_lock);\n                     blk(&Condvar { sem: cond.sem, order: opt_lock,\n-                                   token: NonCopyable::new() })\n+                                   token: NonCopyable })\n                 }\n             }\n         }\n@@ -605,7 +605,7 @@ impl RWLock {\n             (&self.order_lock).release();\n             do (|| {\n                 do task::rekillable {\n-                    blk(RWLockWriteMode { lock: self, token: NonCopyable::new() })\n+                    blk(RWLockWriteMode { lock: self, token: NonCopyable })\n                 }\n             }).finally {\n                 let writer_or_last_reader;\n@@ -662,7 +662,7 @@ impl RWLock {\n                 }\n             }\n         }\n-        RWLockReadMode { lock: token.lock, token: NonCopyable::new() }\n+        RWLockReadMode { lock: token.lock, token: NonCopyable }\n     }\n }\n \n@@ -682,7 +682,7 @@ impl<'self> RWLockWriteMode<'self> {\n         // access lock. See comment in RWLock::write_cond for why.\n         blk(&Condvar { sem:        &self.lock.access_lock,\n                        order: Just(&self.lock.order_lock),\n-                       token: NonCopyable::new() })\n+                       token: NonCopyable })\n     }\n }\n "}, {"sha": "8e939caf756902a1a511f948e113463e9eeff5b9", "filename": "src/libstd/util.rs", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/6a25ba374b2bfe32d4411cab3547d76d47769d6c/src%2Flibstd%2Futil.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6a25ba374b2bfe32d4411cab3547d76d47769d6c/src%2Flibstd%2Futil.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Futil.rs?ref=6a25ba374b2bfe32d4411cab3547d76d47769d6c", "patch": "@@ -62,12 +62,6 @@ pub fn replace<T>(dest: &mut T, mut src: T) -> T {\n #[unsafe_no_drop_flag]\n pub struct NonCopyable;\n \n-impl NonCopyable {\n-    // FIXME(#8233) should not be necessary\n-    /// Create a new noncopyable token.\n-    pub fn new() -> NonCopyable { NonCopyable }\n-}\n-\n impl Drop for NonCopyable {\n     fn drop(&mut self) { }\n }"}]}