{"sha": "e89ce461d39686a899cd88e53dc13dcec9445c3f", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU4OWNlNDYxZDM5Njg2YTg5OWNkODhlNTNkYzEzZGNlYzk0NDVjM2Y=", "commit": {"author": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2020-09-23T02:25:27Z"}, "committer": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2020-10-09T21:44:24Z"}, "message": "Suggest removing bounds even when potential typo", "tree": {"sha": "1b1e2d6c999db64d9002d4d1f3d0db20ba8e0f40", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1b1e2d6c999db64d9002d4d1f3d0db20ba8e0f40"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e89ce461d39686a899cd88e53dc13dcec9445c3f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e89ce461d39686a899cd88e53dc13dcec9445c3f", "html_url": "https://github.com/rust-lang/rust/commit/e89ce461d39686a899cd88e53dc13dcec9445c3f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e89ce461d39686a899cd88e53dc13dcec9445c3f/comments", "author": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "committer": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5217007a2087d8364df8db91d503703c6b0be256", "url": "https://api.github.com/repos/rust-lang/rust/commits/5217007a2087d8364df8db91d503703c6b0be256", "html_url": "https://github.com/rust-lang/rust/commit/5217007a2087d8364df8db91d503703c6b0be256"}], "stats": {"total": 54, "additions": 38, "deletions": 16}, "files": [{"sha": "7bd54447c7dcec685c7b2af009da1b195eb0a82b", "filename": "compiler/rustc_resolve/src/late/diagnostics.rs", "status": "modified", "additions": 21, "deletions": 15, "changes": 36, "blob_url": "https://github.com/rust-lang/rust/blob/e89ce461d39686a899cd88e53dc13dcec9445c3f/compiler%2Frustc_resolve%2Fsrc%2Flate%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e89ce461d39686a899cd88e53dc13dcec9445c3f/compiler%2Frustc_resolve%2Fsrc%2Flate%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_resolve%2Fsrc%2Flate%2Fdiagnostics.rs?ref=e89ce461d39686a899cd88e53dc13dcec9445c3f", "patch": "@@ -439,14 +439,11 @@ impl<'a: 'ast, 'ast> LateResolutionVisitor<'a, '_, 'ast> {\n             }\n         }\n \n-        if !self.type_ascription_suggestion(&mut err, base_span)\n-            && !self.r.add_typo_suggestion(&mut err, typo_sugg, ident_span)\n-        {\n-            // Fallback label.\n-            err.span_label(base_span, fallback_label);\n-\n+        if !self.type_ascription_suggestion(&mut err, base_span) {\n+            let mut fallback = false;\n             if let PathSource::Trait(AliasPossibility::Maybe) = source {\n                 if let Some(bounds @ [_, .., _]) = self.diagnostic_metadata.current_trait_object {\n+                    fallback = true;\n                     let spans: Vec<Span> = bounds\n                         .iter()\n                         .map(|bound| bound.span())\n@@ -500,16 +497,25 @@ impl<'a: 'ast, 'ast> LateResolutionVisitor<'a, '_, 'ast> {\n                     }\n                 }\n             }\n-            match self.diagnostic_metadata.current_let_binding {\n-                Some((pat_sp, Some(ty_sp), None)) if ty_sp.contains(base_span) && could_be_expr => {\n-                    err.span_suggestion_short(\n-                        pat_sp.between(ty_sp),\n-                        \"use `=` if you meant to assign\",\n-                        \" = \".to_string(),\n-                        Applicability::MaybeIncorrect,\n-                    );\n+            if !self.r.add_typo_suggestion(&mut err, typo_sugg, ident_span) {\n+                fallback = true;\n+                match self.diagnostic_metadata.current_let_binding {\n+                    Some((pat_sp, Some(ty_sp), None))\n+                        if ty_sp.contains(base_span) && could_be_expr =>\n+                    {\n+                        err.span_suggestion_short(\n+                            pat_sp.between(ty_sp),\n+                            \"use `=` if you meant to assign\",\n+                            \" = \".to_string(),\n+                            Applicability::MaybeIncorrect,\n+                        );\n+                    }\n+                    _ => {}\n                 }\n-                _ => {}\n+            }\n+            if fallback {\n+                // Fallback label.\n+                err.span_label(base_span, fallback_label);\n             }\n         }\n         (err, candidates)"}, {"sha": "0f97e3bdf1872c16166649cb96e6678647b5b6d4", "filename": "src/test/ui/traits/trait-bounds-not-on-struct.stderr", "status": "modified", "additions": 17, "deletions": 1, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/e89ce461d39686a899cd88e53dc13dcec9445c3f/src%2Ftest%2Fui%2Ftraits%2Ftrait-bounds-not-on-struct.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e89ce461d39686a899cd88e53dc13dcec9445c3f/src%2Ftest%2Fui%2Ftraits%2Ftrait-bounds-not-on-struct.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftraits%2Ftrait-bounds-not-on-struct.stderr?ref=e89ce461d39686a899cd88e53dc13dcec9445c3f", "patch": "@@ -144,7 +144,23 @@ error[E0404]: expected trait, found struct `Traitor`\n LL | trait Trait {}\n    | ----------- similarly named trait `Trait` defined here\n LL | fn g() -> Traitor + 'static {\n-   |           ^^^^^^^ help: a trait with a similar name exists: `Trait`\n+   |           ^^^^^^^ not a trait\n+   |\n+help: `+` is used to constrain a \"trait object\" type with lifetimes or auto-traits; structs and enums can't be bound in that way\n+  --> $DIR/trait-bounds-not-on-struct.rs:35:21\n+   |\n+LL | fn g() -> Traitor + 'static {\n+   |           -------   ^^^^^^^ ...because of this bound\n+   |           |\n+   |           expected this type to be a trait...\n+help: if you meant to use a type and not a trait here, remove the bounds\n+   |\n+LL | fn g() -> Traitor {\n+   |                 --\n+help: a trait with a similar name exists\n+   |\n+LL | fn g() -> Trait + 'static {\n+   |           ^^^^^\n \n error: aborting due to 11 previous errors\n "}]}