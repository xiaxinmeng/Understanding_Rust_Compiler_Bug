{"sha": "2edc4b8e9fef9d7d664e3baff924d29290475770", "node_id": "C_kwDOAAsO6NoAKDJlZGM0YjhlOWZlZjlkN2Q2NjRlM2JhZmY5MjRkMjkyOTA0NzU3NzA", "commit": {"author": {"name": "Dylan DPC", "email": "99973273+Dylan-DPC@users.noreply.github.com", "date": "2022-04-02T20:38:19Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-04-02T20:38:19Z"}, "message": "Rollup merge of #95587 - m-ou-se:std-remove-associated-type-bounds, r=Dylan-DPC\n\nRemove need for associated_type_bounds in std.", "tree": {"sha": "e0c1869eff14c09b6a0f4ead2a265b2f99f74ce8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e0c1869eff14c09b6a0f4ead2a265b2f99f74ce8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2edc4b8e9fef9d7d664e3baff924d29290475770", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJiSLQ8CRBK7hj4Ov3rIwAAwOQIAEqzkBbPxXXXssrgPsBFuvuE\nDYFgb19nAeOC5wV3hEy9l6o7DJ2CvRsGUKqZaPet/XqYWDEzr7r3jdGJH1LSaYTS\nrVaqGtR5sOO16x/TBx781XMh2brt8aTa7y8PAlXZvn0lvOShCFB4OoUUvztqa46W\nICcT9sPZN2TDFoQNlqHg0hOMpxUBigMKpgL5wcFZ2zJ43L1eTIBMsPGh/GLNETfw\nA7zt/tkEDkpOpH2gqlMCe8g9XYy0Nr7AoSJw82VqTQLYpbMFc8aEsNsqMPkstvKG\nKqZe8jJovM7+iCXkIbGwQeXikwwDYlsHoc+0MgqF26bsottIAdIVTrsaMXbGAuM=\n=5oK2\n-----END PGP SIGNATURE-----\n", "payload": "tree e0c1869eff14c09b6a0f4ead2a265b2f99f74ce8\nparent b6a34f35e5d10e69640bce74f613af4aeb2f9ede\nparent aec51fbf40373955f0ee87c4fecee34e83de33f6\nauthor Dylan DPC <99973273+Dylan-DPC@users.noreply.github.com> 1648931899 +0200\ncommitter GitHub <noreply@github.com> 1648931899 +0200\n\nRollup merge of #95587 - m-ou-se:std-remove-associated-type-bounds, r=Dylan-DPC\n\nRemove need for associated_type_bounds in std.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2edc4b8e9fef9d7d664e3baff924d29290475770", "html_url": "https://github.com/rust-lang/rust/commit/2edc4b8e9fef9d7d664e3baff924d29290475770", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2edc4b8e9fef9d7d664e3baff924d29290475770/comments", "author": {"login": "Dylan-DPC", "id": 99973273, "node_id": "U_kgDOBfV4mQ", "avatar_url": "https://avatars.githubusercontent.com/u/99973273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dylan-DPC", "html_url": "https://github.com/Dylan-DPC", "followers_url": "https://api.github.com/users/Dylan-DPC/followers", "following_url": "https://api.github.com/users/Dylan-DPC/following{/other_user}", "gists_url": "https://api.github.com/users/Dylan-DPC/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dylan-DPC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dylan-DPC/subscriptions", "organizations_url": "https://api.github.com/users/Dylan-DPC/orgs", "repos_url": "https://api.github.com/users/Dylan-DPC/repos", "events_url": "https://api.github.com/users/Dylan-DPC/events{/privacy}", "received_events_url": "https://api.github.com/users/Dylan-DPC/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b6a34f35e5d10e69640bce74f613af4aeb2f9ede", "url": "https://api.github.com/repos/rust-lang/rust/commits/b6a34f35e5d10e69640bce74f613af4aeb2f9ede", "html_url": "https://github.com/rust-lang/rust/commit/b6a34f35e5d10e69640bce74f613af4aeb2f9ede"}, {"sha": "aec51fbf40373955f0ee87c4fecee34e83de33f6", "url": "https://api.github.com/repos/rust-lang/rust/commits/aec51fbf40373955f0ee87c4fecee34e83de33f6", "html_url": "https://github.com/rust-lang/rust/commit/aec51fbf40373955f0ee87c4fecee34e83de33f6"}], "stats": {"total": 7, "additions": 4, "deletions": 3}, "files": [{"sha": "e1c1800438354ba2e905b22d0af6ad41156ede7d", "filename": "library/std/src/lib.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/2edc4b8e9fef9d7d664e3baff924d29290475770/library%2Fstd%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2edc4b8e9fef9d7d664e3baff924d29290475770/library%2Fstd%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Flib.rs?ref=2edc4b8e9fef9d7d664e3baff924d29290475770", "patch": "@@ -224,7 +224,6 @@\n #![feature(allocator_internals)]\n #![feature(allow_internal_unsafe)]\n #![feature(allow_internal_unstable)]\n-#![feature(associated_type_bounds)]\n #![feature(box_syntax)]\n #![feature(c_unwind)]\n #![feature(cfg_target_thread_local)]"}, {"sha": "3792a3820a534b07648eebc8ab2893fa574303e8", "filename": "library/std/src/sys/sgx/abi/usercalls/alloc.rs", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/2edc4b8e9fef9d7d664e3baff924d29290475770/library%2Fstd%2Fsrc%2Fsys%2Fsgx%2Fabi%2Fusercalls%2Falloc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2edc4b8e9fef9d7d664e3baff924d29290475770/library%2Fstd%2Fsrc%2Fsys%2Fsgx%2Fabi%2Fusercalls%2Falloc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsys%2Fsgx%2Fabi%2Fusercalls%2Falloc.rs?ref=2edc4b8e9fef9d7d664e3baff924d29290475770", "patch": "@@ -571,7 +571,8 @@ impl<T: CoerceUnsized<U>, U> CoerceUnsized<UserRef<U>> for UserRef<T> {}\n impl<T, I> Index<I> for UserRef<[T]>\n where\n     [T]: UserSafe,\n-    I: SliceIndex<[T], Output: UserSafe>,\n+    I: SliceIndex<[T]>,\n+    I::Output: UserSafe,\n {\n     type Output = UserRef<I::Output>;\n \n@@ -591,7 +592,8 @@ where\n impl<T, I> IndexMut<I> for UserRef<[T]>\n where\n     [T]: UserSafe,\n-    I: SliceIndex<[T], Output: UserSafe>,\n+    I: SliceIndex<[T]>,\n+    I::Output: UserSafe,\n {\n     #[inline]\n     fn index_mut(&mut self, index: I) -> &mut UserRef<I::Output> {"}]}