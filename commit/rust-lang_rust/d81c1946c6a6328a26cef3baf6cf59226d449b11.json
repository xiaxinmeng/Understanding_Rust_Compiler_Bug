{"sha": "d81c1946c6a6328a26cef3baf6cf59226d449b11", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQ4MWMxOTQ2YzZhNjMyOGEyNmNlZjNiYWY2Y2Y1OTIyNmQ0NDliMTE=", "commit": {"author": {"name": "Vadim Petrochenkov", "email": "vadim.petrochenkov@gmail.com", "date": "2020-12-31T14:59:09Z"}, "committer": {"name": "Vadim Petrochenkov", "email": "vadim.petrochenkov@gmail.com", "date": "2021-01-09T15:43:01Z"}, "message": "resolve/expand: Improve attribute expansion on macro definitions and calls", "tree": {"sha": "0f1577ad8b5cd5eb531c247d5a17a8b82aeee507", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0f1577ad8b5cd5eb531c247d5a17a8b82aeee507"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d81c1946c6a6328a26cef3baf6cf59226d449b11", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d81c1946c6a6328a26cef3baf6cf59226d449b11", "html_url": "https://github.com/rust-lang/rust/commit/d81c1946c6a6328a26cef3baf6cf59226d449b11", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d81c1946c6a6328a26cef3baf6cf59226d449b11/comments", "author": {"login": "petrochenkov", "id": 5751617, "node_id": "MDQ6VXNlcjU3NTE2MTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5751617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrochenkov", "html_url": "https://github.com/petrochenkov", "followers_url": "https://api.github.com/users/petrochenkov/followers", "following_url": "https://api.github.com/users/petrochenkov/following{/other_user}", "gists_url": "https://api.github.com/users/petrochenkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrochenkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrochenkov/subscriptions", "organizations_url": "https://api.github.com/users/petrochenkov/orgs", "repos_url": "https://api.github.com/users/petrochenkov/repos", "events_url": "https://api.github.com/users/petrochenkov/events{/privacy}", "received_events_url": "https://api.github.com/users/petrochenkov/received_events", "type": "User", "site_admin": false}, "committer": {"login": "petrochenkov", "id": 5751617, "node_id": "MDQ6VXNlcjU3NTE2MTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5751617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrochenkov", "html_url": "https://github.com/petrochenkov", "followers_url": "https://api.github.com/users/petrochenkov/followers", "following_url": "https://api.github.com/users/petrochenkov/following{/other_user}", "gists_url": "https://api.github.com/users/petrochenkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrochenkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrochenkov/subscriptions", "organizations_url": "https://api.github.com/users/petrochenkov/orgs", "repos_url": "https://api.github.com/users/petrochenkov/repos", "events_url": "https://api.github.com/users/petrochenkov/events{/privacy}", "received_events_url": "https://api.github.com/users/petrochenkov/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "46c35c76fedb90b547201d111e6423bb1de78cd6", "url": "https://api.github.com/repos/rust-lang/rust/commits/46c35c76fedb90b547201d111e6423bb1de78cd6", "html_url": "https://github.com/rust-lang/rust/commit/46c35c76fedb90b547201d111e6423bb1de78cd6"}], "stats": {"total": 103, "additions": 63, "deletions": 40}, "files": [{"sha": "16913dbb1abf832af3e66216e0df23280ac5782e", "filename": "compiler/rustc_expand/src/expand.rs", "status": "modified", "additions": 2, "deletions": 7, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/d81c1946c6a6328a26cef3baf6cf59226d449b11/compiler%2Frustc_expand%2Fsrc%2Fexpand.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d81c1946c6a6328a26cef3baf6cf59226d449b11/compiler%2Frustc_expand%2Fsrc%2Fexpand.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_expand%2Fsrc%2Fexpand.rs?ref=d81c1946c6a6328a26cef3baf6cf59226d449b11", "patch": "@@ -1543,13 +1543,8 @@ impl<'a, 'b> MutVisitor for InvocationCollector<'a, 'b> {\n     }\n \n     fn visit_item_kind(&mut self, item: &mut ast::ItemKind) {\n-        match item {\n-            ast::ItemKind::MacroDef(..) => {}\n-            _ => {\n-                self.cfg.configure_item_kind(item);\n-                noop_visit_item_kind(item, self);\n-            }\n-        }\n+        self.cfg.configure_item_kind(item);\n+        noop_visit_item_kind(item, self);\n     }\n \n     fn flat_map_generic_param("}, {"sha": "d040539cd7ea1553839bcdc625d0260788f90d36", "filename": "compiler/rustc_expand/src/placeholders.rs", "status": "modified", "additions": 2, "deletions": 5, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/d81c1946c6a6328a26cef3baf6cf59226d449b11/compiler%2Frustc_expand%2Fsrc%2Fplaceholders.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d81c1946c6a6328a26cef3baf6cf59226d449b11/compiler%2Frustc_expand%2Fsrc%2Fplaceholders.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_expand%2Fsrc%2Fplaceholders.rs?ref=d81c1946c6a6328a26cef3baf6cf59226d449b11", "patch": "@@ -258,12 +258,9 @@ impl<'a, 'b> MutVisitor for PlaceholderExpander<'a, 'b> {\n \n     fn flat_map_item(&mut self, item: P<ast::Item>) -> SmallVec<[P<ast::Item>; 1]> {\n         match item.kind {\n-            ast::ItemKind::MacCall(_) => return self.remove(item.id).make_items(),\n-            ast::ItemKind::MacroDef(_) => return smallvec![item],\n-            _ => {}\n+            ast::ItemKind::MacCall(_) => self.remove(item.id).make_items(),\n+            _ => noop_flat_map_item(item, self),\n         }\n-\n-        noop_flat_map_item(item, self)\n     }\n \n     fn flat_map_trait_item(&mut self, item: P<ast::AssocItem>) -> SmallVec<[P<ast::AssocItem>; 1]> {"}, {"sha": "e96fc185b7e0328ddea9cec000758e1f4906d234", "filename": "compiler/rustc_resolve/src/build_reduced_graph.rs", "status": "modified", "additions": 20, "deletions": 15, "changes": 35, "blob_url": "https://github.com/rust-lang/rust/blob/d81c1946c6a6328a26cef3baf6cf59226d449b11/compiler%2Frustc_resolve%2Fsrc%2Fbuild_reduced_graph.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d81c1946c6a6328a26cef3baf6cf59226d449b11/compiler%2Frustc_resolve%2Fsrc%2Fbuild_reduced_graph.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_resolve%2Fsrc%2Fbuild_reduced_graph.rs?ref=d81c1946c6a6328a26cef3baf6cf59226d449b11", "patch": "@@ -1298,26 +1298,31 @@ impl<'a, 'b> Visitor<'b> for BuildReducedGraphVisitor<'a, 'b> {\n     method!(visit_ty: ast::Ty, ast::TyKind::MacCall, walk_ty);\n \n     fn visit_item(&mut self, item: &'b Item) {\n-        let macro_use = match item.kind {\n+        let orig_module_scope = self.parent_scope.module;\n+        self.parent_scope.macro_rules = match item.kind {\n             ItemKind::MacroDef(..) => {\n-                self.parent_scope.macro_rules = self.define_macro(item);\n-                return;\n+                let macro_rules_scope = self.define_macro(item);\n+                visit::walk_item(self, item);\n+                macro_rules_scope\n             }\n             ItemKind::MacCall(..) => {\n-                self.parent_scope.macro_rules = self.visit_invoc_in_module(item.id);\n-                return;\n+                let macro_rules_scope = self.visit_invoc_in_module(item.id);\n+                visit::walk_item(self, item);\n+                macro_rules_scope\n+            }\n+            _ => {\n+                let orig_macro_rules_scope = self.parent_scope.macro_rules;\n+                self.build_reduced_graph_for_item(item);\n+                visit::walk_item(self, item);\n+                match item.kind {\n+                    ItemKind::Mod(..) if self.contains_macro_use(&item.attrs) => {\n+                        self.parent_scope.macro_rules\n+                    }\n+                    _ => orig_macro_rules_scope,\n+                }\n             }\n-            ItemKind::Mod(..) => self.contains_macro_use(&item.attrs),\n-            _ => false,\n         };\n-        let orig_current_module = self.parent_scope.module;\n-        let orig_current_macro_rules_scope = self.parent_scope.macro_rules;\n-        self.build_reduced_graph_for_item(item);\n-        visit::walk_item(self, item);\n-        self.parent_scope.module = orig_current_module;\n-        if !macro_use {\n-            self.parent_scope.macro_rules = orig_current_macro_rules_scope;\n-        }\n+        self.parent_scope.module = orig_module_scope;\n     }\n \n     fn visit_stmt(&mut self, stmt: &'b ast::Stmt) {"}, {"sha": "727d6ab53d86927391b9d057bb5889f5a92e3300", "filename": "compiler/rustc_resolve/src/def_collector.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/d81c1946c6a6328a26cef3baf6cf59226d449b11/compiler%2Frustc_resolve%2Fsrc%2Fdef_collector.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d81c1946c6a6328a26cef3baf6cf59226d449b11/compiler%2Frustc_resolve%2Fsrc%2Fdef_collector.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_resolve%2Fsrc%2Fdef_collector.rs?ref=d81c1946c6a6328a26cef3baf6cf59226d449b11", "patch": "@@ -91,7 +91,10 @@ impl<'a, 'b> visit::Visitor<'a> for DefCollector<'a, 'b> {\n                 DefPathData::ValueNs(i.ident.name)\n             }\n             ItemKind::MacroDef(..) => DefPathData::MacroNs(i.ident.name),\n-            ItemKind::MacCall(..) => return self.visit_macro_invoc(i.id),\n+            ItemKind::MacCall(..) => {\n+                visit::walk_item(self, i);\n+                return self.visit_macro_invoc(i.id);\n+            }\n             ItemKind::GlobalAsm(..) => DefPathData::Misc,\n             ItemKind::Use(..) => {\n                 return visit::walk_item(self, i);"}, {"sha": "1247ff2b2307559dded6536f4f04715ad0fd3f0b", "filename": "src/test/ui/attributes/key-value-expansion-on-mac.rs", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/d81c1946c6a6328a26cef3baf6cf59226d449b11/src%2Ftest%2Fui%2Fattributes%2Fkey-value-expansion-on-mac.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d81c1946c6a6328a26cef3baf6cf59226d449b11/src%2Ftest%2Fui%2Fattributes%2Fkey-value-expansion-on-mac.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fattributes%2Fkey-value-expansion-on-mac.rs?ref=d81c1946c6a6328a26cef3baf6cf59226d449b11", "patch": "@@ -0,0 +1,15 @@\n+#![feature(extended_key_value_attributes)]\n+#![feature(rustc_attrs)]\n+\n+#[rustc_dummy = stringify!(a)] // OK\n+macro_rules! bar {\n+    () => {};\n+}\n+\n+// FIXME?: `bar` here expands before `stringify` has a chance to expand.\n+// `#[rustc_dummy = ...]` is validated and dropped during expansion of `bar`,\n+// the \"unexpected token\" errors comes from the validation.\n+#[rustc_dummy = stringify!(b)] //~ ERROR unexpected token: `stringify!(b)`\n+bar!();\n+\n+fn main() {}"}, {"sha": "b74f3518a7e97be529db32a54ed0c9e5bfca91fc", "filename": "src/test/ui/attributes/key-value-expansion-on-mac.stderr", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/d81c1946c6a6328a26cef3baf6cf59226d449b11/src%2Ftest%2Fui%2Fattributes%2Fkey-value-expansion-on-mac.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d81c1946c6a6328a26cef3baf6cf59226d449b11/src%2Ftest%2Fui%2Fattributes%2Fkey-value-expansion-on-mac.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fattributes%2Fkey-value-expansion-on-mac.stderr?ref=d81c1946c6a6328a26cef3baf6cf59226d449b11", "patch": "@@ -0,0 +1,8 @@\n+error: unexpected token: `stringify!(b)`\n+  --> $DIR/key-value-expansion-on-mac.rs:12:17\n+   |\n+LL | #[rustc_dummy = stringify!(b)]\n+   |                 ^^^^^^^^^^^^^\n+\n+error: aborting due to previous error\n+"}, {"sha": "128795f50f9650f4c8c3df344cc4f85f164be451", "filename": "src/test/ui/feature-gates/issue-43106-gating-of-builtin-attrs.stderr", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/d81c1946c6a6328a26cef3baf6cf59226d449b11/src%2Ftest%2Fui%2Ffeature-gates%2Fissue-43106-gating-of-builtin-attrs.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d81c1946c6a6328a26cef3baf6cf59226d449b11/src%2Ftest%2Fui%2Ffeature-gates%2Fissue-43106-gating-of-builtin-attrs.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Fissue-43106-gating-of-builtin-attrs.stderr?ref=d81c1946c6a6328a26cef3baf6cf59226d449b11", "patch": "@@ -172,12 +172,6 @@ warning: unknown lint: `x5100`\n LL |     #[deny(x5100)] impl S { }\n    |            ^^^^^\n \n-warning: `#[macro_escape]` is a deprecated synonym for `#[macro_use]`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:438:1\n-   |\n-LL | #[macro_escape]\n-   | ^^^^^^^^^^^^^^^\n-\n warning: `#[macro_escape]` is a deprecated synonym for `#[macro_use]`\n   --> $DIR/issue-43106-gating-of-builtin-attrs.rs:441:17\n    |\n@@ -186,6 +180,12 @@ LL |     mod inner { #![macro_escape] }\n    |\n    = help: try an outer attribute: `#[macro_use]`\n \n+warning: `#[macro_escape]` is a deprecated synonym for `#[macro_use]`\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:438:1\n+   |\n+LL | #[macro_escape]\n+   | ^^^^^^^^^^^^^^^\n+\n warning: use of deprecated attribute `plugin_registrar`: compiler plugins are deprecated. See https://github.com/rust-lang/rust/pull/64675\n   --> $DIR/issue-43106-gating-of-builtin-attrs.rs:228:17\n    |"}, {"sha": "7f6d608038f91d878283bc4c09b0ae3b2b2610bc", "filename": "src/test/ui/feature-gates/issue-43106-gating-of-macro_use.stderr", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/d81c1946c6a6328a26cef3baf6cf59226d449b11/src%2Ftest%2Fui%2Ffeature-gates%2Fissue-43106-gating-of-macro_use.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d81c1946c6a6328a26cef3baf6cf59226d449b11/src%2Ftest%2Fui%2Ffeature-gates%2Fissue-43106-gating-of-macro_use.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Fissue-43106-gating-of-macro_use.stderr?ref=d81c1946c6a6328a26cef3baf6cf59226d449b11", "patch": "@@ -1,8 +1,8 @@\n error: arguments to `macro_use` are not allowed here\n-  --> $DIR/issue-43106-gating-of-macro_use.rs:6:1\n+  --> $DIR/issue-43106-gating-of-macro_use.rs:12:17\n    |\n-LL | #![macro_use(my_macro)]\n-   | ^^^^^^^^^^^^^^^^^^^^^^^\n+LL |     mod inner { #![macro_use(my_macro)] }\n+   |                 ^^^^^^^^^^^^^^^^^^^^^^^\n \n error: arguments to `macro_use` are not allowed here\n   --> $DIR/issue-43106-gating-of-macro_use.rs:9:1\n@@ -11,10 +11,10 @@ LL | #[macro_use(my_macro)]\n    | ^^^^^^^^^^^^^^^^^^^^^^\n \n error: arguments to `macro_use` are not allowed here\n-  --> $DIR/issue-43106-gating-of-macro_use.rs:12:17\n+  --> $DIR/issue-43106-gating-of-macro_use.rs:6:1\n    |\n-LL |     mod inner { #![macro_use(my_macro)] }\n-   |                 ^^^^^^^^^^^^^^^^^^^^^^^\n+LL | #![macro_use(my_macro)]\n+   | ^^^^^^^^^^^^^^^^^^^^^^^\n \n error: malformed `macro_use` attribute input\n   --> $DIR/issue-43106-gating-of-macro_use.rs:15:5"}]}