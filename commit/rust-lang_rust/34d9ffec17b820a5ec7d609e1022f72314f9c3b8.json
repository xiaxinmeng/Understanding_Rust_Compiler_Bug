{"sha": "34d9ffec17b820a5ec7d609e1022f72314f9c3b8", "node_id": "MDY6Q29tbWl0NzI0NzEyOjM0ZDlmZmVjMTdiODIwYTVlYzdkNjA5ZTEwMjJmNzIzMTRmOWMzYjg=", "commit": {"author": {"name": "kennytm", "email": "kennytm@gmail.com", "date": "2018-03-12T16:54:33Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2018-03-12T16:54:33Z"}, "message": "Rollup merge of #48934 - Phlosioneer:42453-debug-hygene, r=petrochenkov\n\nFix hygene issue when deriving Debug\n\nThe code for several of the core traits doesn't use hygenic macros.\nThis isn't a problem, except for the Debug trait, which is the only\none that uses a variable, named \"builder\".\n\nVariables can't share names with unit structs, so attempting to\n[derive(Debug)] on any type while a unit struct with the name\n\"builder\" was in scope would result in an error.\n\nThis commit just changes the name of the variable to\n\"__debug_trait_builder\", because I couldn't figure out how to get a\nlist of all unit structs in-scope from within the derive expansion\nfunction. If someone wants to have a unit struct with\nthe exact name \"__debug_trait_builder\", they'll just have to do it\nwithout a [derive(Debug)].\n\nI also checked the implementations of the other built-in derives to\nensure they didn't declare any variables.", "tree": {"sha": "35251914cef13e04fcd342d1c2725bb08367ca17", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/35251914cef13e04fcd342d1c2725bb08367ca17"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/34d9ffec17b820a5ec7d609e1022f72314f9c3b8", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJaprDJCRBK7hj4Ov3rIwAAdHIIAEq+o0VE2Jt7GTj0ZOQGuPjX\nRTCjrkIvTn4Ob5HhLp4hNZy5B9V/5Cz+VH87oExApamXplRtt+X1HKUOyAYhD91/\nxnsDXIggH7lQiBkqMzvebb31iS+6uP0A/1nIjz+WlBI4MS1gCqSJ71GzqTg0+Ux7\n6q2zGGVZFGuc/Iqr4KhOZuIYUBa9R/Y+cccbLTtdFhCGp/Tgn+vjnMONxvvzuyHY\nfVDrdKkA549Ye9dF9wEosrDBaPni3yL29k1gV4UXAc5g7Z857tgfTExtHR3TSMWx\n9+3SbG4xI901DI7ef3z6YGI0WNEr7XRaSzmdNCjKMPo5chxIS1qIQG1pTlFV0Ds=\n=b3AV\n-----END PGP SIGNATURE-----\n", "payload": "tree 35251914cef13e04fcd342d1c2725bb08367ca17\nparent 14574db7931285af2d3316dff8e726ca8eccf862\nparent c033c6e47c1a84e2902c75a1b5ec161362f34f18\nauthor kennytm <kennytm@gmail.com> 1520873673 +0800\ncommitter GitHub <noreply@github.com> 1520873673 +0800\n\nRollup merge of #48934 - Phlosioneer:42453-debug-hygene, r=petrochenkov\n\nFix hygene issue when deriving Debug\n\nThe code for several of the core traits doesn't use hygenic macros.\nThis isn't a problem, except for the Debug trait, which is the only\none that uses a variable, named \"builder\".\n\nVariables can't share names with unit structs, so attempting to\n[derive(Debug)] on any type while a unit struct with the name\n\"builder\" was in scope would result in an error.\n\nThis commit just changes the name of the variable to\n\"__debug_trait_builder\", because I couldn't figure out how to get a\nlist of all unit structs in-scope from within the derive expansion\nfunction. If someone wants to have a unit struct with\nthe exact name \"__debug_trait_builder\", they'll just have to do it\nwithout a [derive(Debug)].\n\nI also checked the implementations of the other built-in derives to\nensure they didn't declare any variables.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/34d9ffec17b820a5ec7d609e1022f72314f9c3b8", "html_url": "https://github.com/rust-lang/rust/commit/34d9ffec17b820a5ec7d609e1022f72314f9c3b8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/34d9ffec17b820a5ec7d609e1022f72314f9c3b8/comments", "author": {"login": "kennytm", "id": 103023, "node_id": "MDQ6VXNlcjEwMzAyMw==", "avatar_url": "https://avatars.githubusercontent.com/u/103023?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kennytm", "html_url": "https://github.com/kennytm", "followers_url": "https://api.github.com/users/kennytm/followers", "following_url": "https://api.github.com/users/kennytm/following{/other_user}", "gists_url": "https://api.github.com/users/kennytm/gists{/gist_id}", "starred_url": "https://api.github.com/users/kennytm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kennytm/subscriptions", "organizations_url": "https://api.github.com/users/kennytm/orgs", "repos_url": "https://api.github.com/users/kennytm/repos", "events_url": "https://api.github.com/users/kennytm/events{/privacy}", "received_events_url": "https://api.github.com/users/kennytm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "14574db7931285af2d3316dff8e726ca8eccf862", "url": "https://api.github.com/repos/rust-lang/rust/commits/14574db7931285af2d3316dff8e726ca8eccf862", "html_url": "https://github.com/rust-lang/rust/commit/14574db7931285af2d3316dff8e726ca8eccf862"}, {"sha": "c033c6e47c1a84e2902c75a1b5ec161362f34f18", "url": "https://api.github.com/repos/rust-lang/rust/commits/c033c6e47c1a84e2902c75a1b5ec161362f34f18", "html_url": "https://github.com/rust-lang/rust/commit/c033c6e47c1a84e2902c75a1b5ec161362f34f18"}], "stats": {"total": 19, "additions": 18, "deletions": 1}, "files": [{"sha": "7b23de582a79aa74415c3234a23183128697654f", "filename": "src/libsyntax_ext/deriving/debug.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/34d9ffec17b820a5ec7d609e1022f72314f9c3b8/src%2Flibsyntax_ext%2Fderiving%2Fdebug.rs", "raw_url": "https://github.com/rust-lang/rust/raw/34d9ffec17b820a5ec7d609e1022f72314f9c3b8/src%2Flibsyntax_ext%2Fderiving%2Fdebug.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax_ext%2Fderiving%2Fdebug.rs?ref=34d9ffec17b820a5ec7d609e1022f72314f9c3b8", "patch": "@@ -70,7 +70,7 @@ fn show_substructure(cx: &mut ExtCtxt, span: Span, substr: &Substructure) -> P<E\n     // We want to make sure we have the ctxt set so that we can use unstable methods\n     let span = span.with_ctxt(cx.backtrace());\n     let name = cx.expr_lit(span, ast::LitKind::Str(ident.name, ast::StrStyle::Cooked));\n-    let builder = Ident::from_str(\"builder\");\n+    let builder = Ident::from_str(\"__debug_trait_builder\");\n     let builder_expr = cx.expr_ident(span, builder.clone());\n \n     let fmt = substr.nonself_args[0].clone();"}, {"sha": "dfe3a21961e3b6d62f7217ad9abd4b8d61b4b834", "filename": "src/test/run-pass/issue-42453.rs", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/34d9ffec17b820a5ec7d609e1022f72314f9c3b8/src%2Ftest%2Frun-pass%2Fissue-42453.rs", "raw_url": "https://github.com/rust-lang/rust/raw/34d9ffec17b820a5ec7d609e1022f72314f9c3b8/src%2Ftest%2Frun-pass%2Fissue-42453.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-42453.rs?ref=34d9ffec17b820a5ec7d609e1022f72314f9c3b8", "patch": "@@ -0,0 +1,17 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#[derive(Debug)]\n+struct builder;\n+\n+fn main() {\n+\n+}\n+"}]}