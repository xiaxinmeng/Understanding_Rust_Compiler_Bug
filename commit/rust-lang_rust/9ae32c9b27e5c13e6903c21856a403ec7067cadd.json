{"sha": "9ae32c9b27e5c13e6903c21856a403ec7067cadd", "node_id": "MDY6Q29tbWl0NzI0NzEyOjlhZTMyYzliMjdlNWMxM2U2OTAzYzIxODU2YTQwM2VjNzA2N2NhZGQ=", "commit": {"author": {"name": "Mark Rousskov", "email": "mark.simulacrum@gmail.com", "date": "2020-01-01T19:09:50Z"}, "committer": {"name": "Mark Rousskov", "email": "mark.simulacrum@gmail.com", "date": "2020-01-20T16:57:27Z"}, "message": "Drop args from Formatter\n\nThese are no longer used by Formatter methods.", "tree": {"sha": "4ee360c3f4a356d56f86227dcc47cde9d2f1b6cd", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4ee360c3f4a356d56f86227dcc47cde9d2f1b6cd"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9ae32c9b27e5c13e6903c21856a403ec7067cadd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9ae32c9b27e5c13e6903c21856a403ec7067cadd", "html_url": "https://github.com/rust-lang/rust/commit/9ae32c9b27e5c13e6903c21856a403ec7067cadd", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9ae32c9b27e5c13e6903c21856a403ec7067cadd/comments", "author": {"login": "Mark-Simulacrum", "id": 5047365, "node_id": "MDQ6VXNlcjUwNDczNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/5047365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mark-Simulacrum", "html_url": "https://github.com/Mark-Simulacrum", "followers_url": "https://api.github.com/users/Mark-Simulacrum/followers", "following_url": "https://api.github.com/users/Mark-Simulacrum/following{/other_user}", "gists_url": "https://api.github.com/users/Mark-Simulacrum/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mark-Simulacrum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mark-Simulacrum/subscriptions", "organizations_url": "https://api.github.com/users/Mark-Simulacrum/orgs", "repos_url": "https://api.github.com/users/Mark-Simulacrum/repos", "events_url": "https://api.github.com/users/Mark-Simulacrum/events{/privacy}", "received_events_url": "https://api.github.com/users/Mark-Simulacrum/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Mark-Simulacrum", "id": 5047365, "node_id": "MDQ6VXNlcjUwNDczNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/5047365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mark-Simulacrum", "html_url": "https://github.com/Mark-Simulacrum", "followers_url": "https://api.github.com/users/Mark-Simulacrum/followers", "following_url": "https://api.github.com/users/Mark-Simulacrum/following{/other_user}", "gists_url": "https://api.github.com/users/Mark-Simulacrum/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mark-Simulacrum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mark-Simulacrum/subscriptions", "organizations_url": "https://api.github.com/users/Mark-Simulacrum/orgs", "repos_url": "https://api.github.com/users/Mark-Simulacrum/repos", "events_url": "https://api.github.com/users/Mark-Simulacrum/events{/privacy}", "received_events_url": "https://api.github.com/users/Mark-Simulacrum/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4919b96f81d9df0a7c0fe83ad5d66cef18ddfcfb", "url": "https://api.github.com/repos/rust-lang/rust/commits/4919b96f81d9df0a7c0fe83ad5d66cef18ddfcfb", "html_url": "https://github.com/rust-lang/rust/commit/4919b96f81d9df0a7c0fe83ad5d66cef18ddfcfb"}], "stats": {"total": 19, "additions": 6, "deletions": 13}, "files": [{"sha": "900ef63f1dfcc3a3b2b263b463779307c26f3c3f", "filename": "src/libcore/fmt/mod.rs", "status": "modified", "additions": 6, "deletions": 13, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/9ae32c9b27e5c13e6903c21856a403ec7067cadd/src%2Flibcore%2Ffmt%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9ae32c9b27e5c13e6903c21856a403ec7067cadd/src%2Flibcore%2Ffmt%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Ffmt%2Fmod.rs?ref=9ae32c9b27e5c13e6903c21856a403ec7067cadd", "patch": "@@ -233,7 +233,6 @@ pub struct Formatter<'a> {\n     precision: Option<usize>,\n \n     buf: &'a mut (dyn Write + 'a),\n-    args: &'a [ArgumentV1<'a>],\n }\n \n // NB. Argument is essentially an optimized partially applied formatting function,\n@@ -1041,7 +1040,6 @@ pub fn write(output: &mut dyn Write, args: Arguments<'_>) -> Result {\n         buf: output,\n         align: rt::v1::Alignment::Unknown,\n         fill: ' ',\n-        args: args.args,\n     };\n \n     let mut idx = 0;\n@@ -1060,7 +1058,7 @@ pub fn write(output: &mut dyn Write, args: Arguments<'_>) -> Result {\n             // a string piece.\n             for (arg, piece) in fmt.iter().zip(args.pieces.iter()) {\n                 formatter.buf.write_str(*piece)?;\n-                run(&mut formatter, arg)?;\n+                run(&mut formatter, arg, &args.args)?;\n                 idx += 1;\n             }\n         }\n@@ -1074,25 +1072,24 @@ pub fn write(output: &mut dyn Write, args: Arguments<'_>) -> Result {\n     Ok(())\n }\n \n-fn run(fmt: &mut Formatter<'_>, arg: &rt::v1::Argument) -> Result {\n-    // Fill in the format parameters into the formatter\n+fn run(fmt: &mut Formatter<'_>, arg: &rt::v1::Argument, args: &[ArgumentV1<'_>]) -> Result {\n     fmt.fill = arg.format.fill;\n     fmt.align = arg.format.align;\n     fmt.flags = arg.format.flags;\n-    fmt.width = getcount(&fmt.args, &arg.format.width);\n-    fmt.precision = getcount(&fmt.args, &arg.format.precision);\n+    fmt.width = getcount(args, &arg.format.width);\n+    fmt.precision = getcount(args, &arg.format.precision);\n \n     // Extract the correct argument\n     let value = {\n         #[cfg(bootstrap)]\n         {\n             match arg.position {\n-                rt::v1::Position::At(i) => fmt.args[i],\n+                rt::v1::Position::At(i) => args[i],\n             }\n         }\n         #[cfg(not(bootstrap))]\n         {\n-            fmt.args[arg.position]\n+            args[arg.position]\n         }\n     };\n \n@@ -1145,10 +1142,6 @@ impl<'a> Formatter<'a> {\n             align: self.align,\n             width: self.width,\n             precision: self.precision,\n-\n-            // These only exist in the struct for the `run` method,\n-            // which won\u2019t be used together with this method.\n-            args: self.args,\n         }\n     }\n "}]}