{"sha": "bd1dfcebe3ae34c4c7fb2ac0660707090a0cbe3a", "node_id": "C_kwDOAAsO6NoAKGJkMWRmY2ViZTNhZTM0YzRjN2ZiMmFjMDY2MDcwNzA5MGEwY2JlM2E", "commit": {"author": {"name": "Maybe Waffle", "email": "waffle.lapkin@gmail.com", "date": "2023-04-17T13:37:03Z"}, "committer": {"name": "Maybe Waffle", "email": "waffle.lapkin@gmail.com", "date": "2023-04-18T12:55:54Z"}, "message": "Don't allocate it `IndexVec::remove`", "tree": {"sha": "ec21f66b3904abc1be98e174ea13bdefede517ea", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ec21f66b3904abc1be98e174ea13bdefede517ea"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/bd1dfcebe3ae34c4c7fb2ac0660707090a0cbe3a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/bd1dfcebe3ae34c4c7fb2ac0660707090a0cbe3a", "html_url": "https://github.com/rust-lang/rust/commit/bd1dfcebe3ae34c4c7fb2ac0660707090a0cbe3a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/bd1dfcebe3ae34c4c7fb2ac0660707090a0cbe3a/comments", "author": {"login": "WaffleLapkin", "id": 38225716, "node_id": "MDQ6VXNlcjM4MjI1NzE2", "avatar_url": "https://avatars.githubusercontent.com/u/38225716?v=4", "gravatar_id": "", "url": "https://api.github.com/users/WaffleLapkin", "html_url": "https://github.com/WaffleLapkin", "followers_url": "https://api.github.com/users/WaffleLapkin/followers", "following_url": "https://api.github.com/users/WaffleLapkin/following{/other_user}", "gists_url": "https://api.github.com/users/WaffleLapkin/gists{/gist_id}", "starred_url": "https://api.github.com/users/WaffleLapkin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/WaffleLapkin/subscriptions", "organizations_url": "https://api.github.com/users/WaffleLapkin/orgs", "repos_url": "https://api.github.com/users/WaffleLapkin/repos", "events_url": "https://api.github.com/users/WaffleLapkin/events{/privacy}", "received_events_url": "https://api.github.com/users/WaffleLapkin/received_events", "type": "User", "site_admin": false}, "committer": {"login": "WaffleLapkin", "id": 38225716, "node_id": "MDQ6VXNlcjM4MjI1NzE2", "avatar_url": "https://avatars.githubusercontent.com/u/38225716?v=4", "gravatar_id": "", "url": "https://api.github.com/users/WaffleLapkin", "html_url": "https://github.com/WaffleLapkin", "followers_url": "https://api.github.com/users/WaffleLapkin/followers", "following_url": "https://api.github.com/users/WaffleLapkin/following{/other_user}", "gists_url": "https://api.github.com/users/WaffleLapkin/gists{/gist_id}", "starred_url": "https://api.github.com/users/WaffleLapkin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/WaffleLapkin/subscriptions", "organizations_url": "https://api.github.com/users/WaffleLapkin/orgs", "repos_url": "https://api.github.com/users/WaffleLapkin/repos", "events_url": "https://api.github.com/users/WaffleLapkin/events{/privacy}", "received_events_url": "https://api.github.com/users/WaffleLapkin/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e1cd99f6ff2bc2aecec530801b8a71d898bff309", "url": "https://api.github.com/repos/rust-lang/rust/commits/e1cd99f6ff2bc2aecec530801b8a71d898bff309", "html_url": "https://github.com/rust-lang/rust/commit/e1cd99f6ff2bc2aecec530801b8a71d898bff309"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "18e779f786e145436fbcba36a4c9e2c4627283df", "filename": "compiler/rustc_index/src/vec.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/bd1dfcebe3ae34c4c7fb2ac0660707090a0cbe3a/compiler%2Frustc_index%2Fsrc%2Fvec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bd1dfcebe3ae34c4c7fb2ac0660707090a0cbe3a/compiler%2Frustc_index%2Fsrc%2Fvec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_index%2Fsrc%2Fvec.rs?ref=bd1dfcebe3ae34c4c7fb2ac0660707090a0cbe3a", "patch": "@@ -460,7 +460,7 @@ impl<I: Idx, T> IndexVec<I, Option<T>> {\n \n     #[inline]\n     pub fn remove(&mut self, index: I) -> Option<T> {\n-        self.ensure_contains_elem(index, || None).take()\n+        self.get_mut(index)?.take()\n     }\n }\n "}]}