{"sha": "f6e6d2a035d9e86e7053847aa60a99940f41064c", "node_id": "C_kwDOAAsO6NoAKGY2ZTZkMmEwMzVkOWU4NmU3MDUzODQ3YWE2MGE5OTk0MGY0MTA2NGM", "commit": {"author": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2023-01-12T19:53:01Z"}, "committer": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2023-01-13T18:20:23Z"}, "message": "Elaborate unmet obligations in E0599 for more context", "tree": {"sha": "5ca36a48e95188cd1928db74f367b646aa96d99d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5ca36a48e95188cd1928db74f367b646aa96d99d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f6e6d2a035d9e86e7053847aa60a99940f41064c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f6e6d2a035d9e86e7053847aa60a99940f41064c", "html_url": "https://github.com/rust-lang/rust/commit/f6e6d2a035d9e86e7053847aa60a99940f41064c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f6e6d2a035d9e86e7053847aa60a99940f41064c/comments", "author": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "committer": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0b90256ada21c6a81b4c18f2c7a23151ab5fc232", "url": "https://api.github.com/repos/rust-lang/rust/commits/0b90256ada21c6a81b4c18f2c7a23151ab5fc232", "html_url": "https://github.com/rust-lang/rust/commit/0b90256ada21c6a81b4c18f2c7a23151ab5fc232"}], "stats": {"total": 65, "additions": 53, "deletions": 12}, "files": [{"sha": "15f6e11717768cfd11ec078f0d620cc451c20897", "filename": "compiler/rustc_hir_typeck/src/method/probe.rs", "status": "modified", "additions": 23, "deletions": 5, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/f6e6d2a035d9e86e7053847aa60a99940f41064c/compiler%2Frustc_hir_typeck%2Fsrc%2Fmethod%2Fprobe.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f6e6d2a035d9e86e7053847aa60a99940f41064c/compiler%2Frustc_hir_typeck%2Fsrc%2Fmethod%2Fprobe.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_hir_typeck%2Fsrc%2Fmethod%2Fprobe.rs?ref=f6e6d2a035d9e86e7053847aa60a99940f41064c", "patch": "@@ -1587,11 +1587,29 @@ impl<'a, 'tcx> ProbeContext<'a, 'tcx> {\n                         let o = self.resolve_vars_if_possible(o);\n                         if !self.predicate_may_hold(&o) {\n                             result = ProbeResult::NoMatch;\n-                            possibly_unsatisfied_predicates.push((\n-                                o.predicate,\n-                                None,\n-                                Some(o.cause),\n-                            ));\n+                            let parent_o = o.clone();\n+                            let implied_obligations =\n+                                traits::elaborate_obligations(self.tcx, vec![o]);\n+                            for o in implied_obligations {\n+                                let parent = if o == parent_o {\n+                                    None\n+                                } else {\n+                                    if o.predicate.to_opt_poly_trait_pred().map(|p| p.def_id())\n+                                        == self.tcx.lang_items().sized_trait()\n+                                    {\n+                                        // We don't care to talk about implicit `Sized` bounds.\n+                                        continue;\n+                                    }\n+                                    Some(parent_o.predicate)\n+                                };\n+                                if !self.predicate_may_hold(&o) {\n+                                    possibly_unsatisfied_predicates.push((\n+                                        o.predicate,\n+                                        parent,\n+                                        Some(o.cause),\n+                                    ));\n+                                }\n+                            }\n                         }\n                     }\n                 }"}, {"sha": "381d860a9c36dfcb560c0b15655c127536538727", "filename": "tests/ui/derives/issue-91550.stderr", "status": "modified", "additions": 25, "deletions": 4, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/f6e6d2a035d9e86e7053847aa60a99940f41064c/tests%2Fui%2Fderives%2Fissue-91550.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f6e6d2a035d9e86e7053847aa60a99940f41064c/tests%2Fui%2Fderives%2Fissue-91550.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fderives%2Fissue-91550.stderr?ref=f6e6d2a035d9e86e7053847aa60a99940f41064c", "patch": "@@ -6,12 +6,15 @@ LL | struct Value(u32);\n    | |\n    | doesn't satisfy `Value: Eq`\n    | doesn't satisfy `Value: Hash`\n+   | doesn't satisfy `Value: PartialEq`\n ...\n LL |     hs.insert(Value(0));\n    |        ^^^^^^\n    |\n    = note: the following trait bounds were not satisfied:\n            `Value: Eq`\n+           `Value: PartialEq`\n+           which is required by `Value: Eq`\n            `Value: Hash`\n help: consider annotating `Value` with `#[derive(Eq, Hash, PartialEq)]`\n    |\n@@ -22,15 +25,20 @@ error[E0599]: the method `use_eq` exists for struct `Object<NoDerives>`, but its\n   --> $DIR/issue-91550.rs:26:9\n    |\n LL | pub struct NoDerives;\n-   | -------------------- doesn't satisfy `NoDerives: Eq`\n+   | --------------------\n+   | |\n+   | doesn't satisfy `NoDerives: Eq`\n+   | doesn't satisfy `NoDerives: PartialEq`\n LL |\n LL | struct Object<T>(T);\n    | ---------------- method `use_eq` not found for this struct\n ...\n LL |     foo.use_eq();\n    |         ^^^^^^ method cannot be called on `Object<NoDerives>` due to unsatisfied trait bounds\n    |\n-note: trait bound `NoDerives: Eq` was not satisfied\n+note: the following trait bounds were not satisfied:\n+      `NoDerives: Eq`\n+      `NoDerives: PartialEq`\n   --> $DIR/issue-91550.rs:15:9\n    |\n LL | impl<T: Eq> Object<T> {\n@@ -46,15 +54,24 @@ error[E0599]: the method `use_ord` exists for struct `Object<NoDerives>`, but it\n   --> $DIR/issue-91550.rs:27:9\n    |\n LL | pub struct NoDerives;\n-   | -------------------- doesn't satisfy `NoDerives: Ord`\n+   | --------------------\n+   | |\n+   | doesn't satisfy `NoDerives: Eq`\n+   | doesn't satisfy `NoDerives: Ord`\n+   | doesn't satisfy `NoDerives: PartialEq`\n+   | doesn't satisfy `NoDerives: PartialOrd`\n LL |\n LL | struct Object<T>(T);\n    | ---------------- method `use_ord` not found for this struct\n ...\n LL |     foo.use_ord();\n    |         ^^^^^^^ method cannot be called on `Object<NoDerives>` due to unsatisfied trait bounds\n    |\n-note: trait bound `NoDerives: Ord` was not satisfied\n+note: the following trait bounds were not satisfied:\n+      `NoDerives: Eq`\n+      `NoDerives: Ord`\n+      `NoDerives: PartialEq`\n+      `NoDerives: PartialOrd`\n   --> $DIR/issue-91550.rs:18:9\n    |\n LL | impl<T: Ord> Object<T> {\n@@ -72,7 +89,9 @@ error[E0599]: the method `use_ord_and_partial_ord` exists for struct `Object<NoD\n LL | pub struct NoDerives;\n    | --------------------\n    | |\n+   | doesn't satisfy `NoDerives: Eq`\n    | doesn't satisfy `NoDerives: Ord`\n+   | doesn't satisfy `NoDerives: PartialEq`\n    | doesn't satisfy `NoDerives: PartialOrd`\n LL |\n LL | struct Object<T>(T);\n@@ -82,7 +101,9 @@ LL |     foo.use_ord_and_partial_ord();\n    |         ^^^^^^^^^^^^^^^^^^^^^^^ method cannot be called on `Object<NoDerives>` due to unsatisfied trait bounds\n    |\n note: the following trait bounds were not satisfied:\n+      `NoDerives: Eq`\n       `NoDerives: Ord`\n+      `NoDerives: PartialEq`\n       `NoDerives: PartialOrd`\n   --> $DIR/issue-91550.rs:21:9\n    |"}, {"sha": "c76b6bc9c1851c770abe03b3c1f77e9875dc1555", "filename": "tests/ui/missing-trait-bounds/issue-35677.fixed", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f6e6d2a035d9e86e7053847aa60a99940f41064c/tests%2Fui%2Fmissing-trait-bounds%2Fissue-35677.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/f6e6d2a035d9e86e7053847aa60a99940f41064c/tests%2Fui%2Fmissing-trait-bounds%2Fissue-35677.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmissing-trait-bounds%2Fissue-35677.fixed?ref=f6e6d2a035d9e86e7053847aa60a99940f41064c", "patch": "@@ -3,7 +3,7 @@\n use std::collections::HashSet;\n use std::hash::Hash;\n \n-fn is_subset<T>(this: &HashSet<T>, other: &HashSet<T>) -> bool where T: Eq, T: Hash {\n+fn is_subset<T>(this: &HashSet<T>, other: &HashSet<T>) -> bool where T: Eq, T: Hash, T: PartialEq {\n     this.is_subset(other)\n     //~^ ERROR the method\n }"}, {"sha": "067b10b873abfb7aaca25504846c1d9fe07911f2", "filename": "tests/ui/missing-trait-bounds/issue-35677.stderr", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/f6e6d2a035d9e86e7053847aa60a99940f41064c/tests%2Fui%2Fmissing-trait-bounds%2Fissue-35677.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f6e6d2a035d9e86e7053847aa60a99940f41064c/tests%2Fui%2Fmissing-trait-bounds%2Fissue-35677.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmissing-trait-bounds%2Fissue-35677.stderr?ref=f6e6d2a035d9e86e7053847aa60a99940f41064c", "patch": "@@ -6,11 +6,13 @@ LL |     this.is_subset(other)\n    |\n    = note: the following trait bounds were not satisfied:\n            `T: Eq`\n+           `T: PartialEq`\n+           which is required by `T: Eq`\n            `T: Hash`\n help: consider restricting the type parameters to satisfy the trait bounds\n    |\n-LL | fn is_subset<T>(this: &HashSet<T>, other: &HashSet<T>) -> bool where T: Eq, T: Hash {\n-   |                                                                ++++++++++++++++++++\n+LL | fn is_subset<T>(this: &HashSet<T>, other: &HashSet<T>) -> bool where T: Eq, T: Hash, T: PartialEq {\n+   |                                                                ++++++++++++++++++++++++++++++++++\n \n error: aborting due to previous error\n "}]}