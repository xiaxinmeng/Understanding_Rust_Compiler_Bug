{"sha": "db43080693dbef6f9adfca0ef818a6fe7016c94a", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRiNDMwODA2OTNkYmVmNmY5YWRmY2EwZWY4MThhNmZlNzAxNmM5NGE=", "commit": {"author": {"name": "bors[bot]", "email": "bors[bot]@users.noreply.github.com", "date": "2019-02-11T22:05:39Z"}, "committer": {"name": "bors[bot]", "email": "bors[bot]@users.noreply.github.com", "date": "2019-02-11T22:05:39Z"}, "message": "Merge #794\n\n794: fix regression in self-referential completion r=flodiebold a=matklad\n\nr? @flodiebold \n\nCo-authored-by: Aleksey Kladov <aleksey.kladov@gmail.com>", "tree": {"sha": "6be1668b8cf61d4d67054581a10424be0aaeaa0e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6be1668b8cf61d4d67054581a10424be0aaeaa0e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/db43080693dbef6f9adfca0ef818a6fe7016c94a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/db43080693dbef6f9adfca0ef818a6fe7016c94a", "html_url": "https://github.com/rust-lang/rust/commit/db43080693dbef6f9adfca0ef818a6fe7016c94a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/db43080693dbef6f9adfca0ef818a6fe7016c94a/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "parents": [{"sha": "db6d214411505de6534fce183e9bea8109bc5283", "url": "https://api.github.com/repos/rust-lang/rust/commits/db6d214411505de6534fce183e9bea8109bc5283", "html_url": "https://github.com/rust-lang/rust/commit/db6d214411505de6534fce183e9bea8109bc5283"}, {"sha": "8ef80086a0ee81b4dedab6d37a9a2e7fe5bce38a", "url": "https://api.github.com/repos/rust-lang/rust/commits/8ef80086a0ee81b4dedab6d37a9a2e7fe5bce38a", "html_url": "https://github.com/rust-lang/rust/commit/8ef80086a0ee81b4dedab6d37a9a2e7fe5bce38a"}], "stats": {"total": 47, "additions": 32, "deletions": 15}, "files": [{"sha": "91ca7525e7384c9ae2f57a34ba7b5c9989cd59b6", "filename": "crates/ra_ide_api/src/completion/complete_path.rs", "status": "modified", "additions": 23, "deletions": 13, "changes": 36, "blob_url": "https://github.com/rust-lang/rust/blob/db43080693dbef6f9adfca0ef818a6fe7016c94a/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fcomplete_path.rs", "raw_url": "https://github.com/rust-lang/rust/raw/db43080693dbef6f9adfca0ef818a6fe7016c94a/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fcomplete_path.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fcomplete_path.rs?ref=db43080693dbef6f9adfca0ef818a6fe7016c94a", "patch": "@@ -1,10 +1,9 @@\n use join_to_string::join;\n-\n use hir::{Docs, Resolution};\n+use ra_syntax::AstNode;\n+use test_utils::tested_by;\n \n-use crate::{\n-    completion::{CompletionItem, CompletionItemKind, Completions, CompletionKind, CompletionContext},\n-};\n+use crate::completion::{CompletionItem, CompletionItemKind, Completions, CompletionKind, CompletionContext};\n \n pub(super) fn complete_path(acc: &mut Completions, ctx: &CompletionContext) {\n     let path = match &ctx.path_prefix {\n@@ -19,6 +18,17 @@ pub(super) fn complete_path(acc: &mut Completions, ctx: &CompletionContext) {\n         hir::ModuleDef::Module(module) => {\n             let module_scope = module.scope(ctx.db);\n             for (name, res) in module_scope.entries() {\n+                if Some(module) == ctx.module {\n+                    if let Some(import) = res.import {\n+                        let path = module.import_source(ctx.db, import);\n+                        if path.syntax().range().contains_inclusive(ctx.offset) {\n+                            // for `use self::foo<|>`, don't suggest `foo` as a completion\n+                            tested_by!(dont_complete_current_use);\n+                            continue;\n+                        }\n+                    }\n+                }\n+\n                 CompletionItem::new(\n                     CompletionKind::Reference,\n                     ctx.source_range(),\n@@ -54,22 +64,22 @@ pub(super) fn complete_path(acc: &mut Completions, ctx: &CompletionContext) {\n \n #[cfg(test)]\n mod tests {\n-    use crate::completion::CompletionKind;\n-    use crate::completion::completion_item::check_completion;\n+    use crate::completion::{\n+        CompletionKind,\n+        completion_item::{check_completion, do_completion},\n+};\n+\n+    use test_utils::covers;\n \n     fn check_reference_completion(code: &str, expected_completions: &str) {\n         check_completion(code, expected_completions, CompletionKind::Reference);\n     }\n \n     #[test]\n-    #[ignore] // should not complete foo, which currently doesn't work\n     fn dont_complete_current_use() {\n-        check_reference_completion(\n-            \"dont_complete_current_use\",\n-            r\"\n-            use self::foo<|>;\n-            \",\n-        );\n+        covers!(dont_complete_current_use);\n+        let completions = do_completion(r\"use self::foo<|>;\", CompletionKind::Reference);\n+        assert!(completions.is_empty());\n     }\n \n     #[test]"}, {"sha": "22ff08a23040c1562f4666e08ef0202f71f06a75", "filename": "crates/ra_ide_api/src/completion/completion_item.rs", "status": "modified", "additions": 8, "deletions": 2, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/db43080693dbef6f9adfca0ef818a6fe7016c94a/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fcompletion_item.rs", "raw_url": "https://github.com/rust-lang/rust/raw/db43080693dbef6f9adfca0ef818a6fe7016c94a/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fcompletion_item.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fcompletion_item.rs?ref=db43080693dbef6f9adfca0ef818a6fe7016c94a", "patch": "@@ -306,10 +306,9 @@ fn function_item_label(ctx: &CompletionContext, function: hir::Function) -> Opti\n }\n \n #[cfg(test)]\n-pub(crate) fn check_completion(test_name: &str, code: &str, kind: CompletionKind) {\n+pub(crate) fn do_completion(code: &str, kind: CompletionKind) -> Vec<CompletionItem> {\n     use crate::mock_analysis::{single_file_with_position, analysis_and_position};\n     use crate::completion::completions;\n-    use insta::assert_debug_snapshot_matches;\n     let (analysis, position) = if code.contains(\"//-\") {\n         analysis_and_position(code)\n     } else {\n@@ -320,6 +319,13 @@ pub(crate) fn check_completion(test_name: &str, code: &str, kind: CompletionKind\n     let mut kind_completions: Vec<CompletionItem> =\n         completion_items.into_iter().filter(|c| c.completion_kind == kind).collect();\n     kind_completions.sort_by_key(|c| c.label.clone());\n+    kind_completions\n+}\n+\n+#[cfg(test)]\n+pub(crate) fn check_completion(test_name: &str, code: &str, kind: CompletionKind) {\n+    use insta::assert_debug_snapshot_matches;\n+    let kind_completions = do_completion(code, kind);\n     assert_debug_snapshot_matches!(test_name, kind_completions);\n }\n "}, {"sha": "44d8fdf829700a00279b890c3ac2e87065dcbd93", "filename": "crates/ra_ide_api/src/marks.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/db43080693dbef6f9adfca0ef818a6fe7016c94a/crates%2Fra_ide_api%2Fsrc%2Fmarks.rs", "raw_url": "https://github.com/rust-lang/rust/raw/db43080693dbef6f9adfca0ef818a6fe7016c94a/crates%2Fra_ide_api%2Fsrc%2Fmarks.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Fmarks.rs?ref=db43080693dbef6f9adfca0ef818a6fe7016c94a", "patch": "@@ -3,4 +3,5 @@ test_utils::marks!(\n     goto_definition_works_for_methods\n     goto_definition_works_for_fields\n     call_info_bad_offset\n+    dont_complete_current_use\n );"}]}