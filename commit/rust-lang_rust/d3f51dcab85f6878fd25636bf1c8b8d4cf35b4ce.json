{"sha": "d3f51dcab85f6878fd25636bf1c8b8d4cf35b4ce", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQzZjUxZGNhYjg1ZjY4NzhmZDI1NjM2YmYxYzhiOGQ0Y2YzNWI0Y2U=", "commit": {"author": {"name": "Nick Cameron", "email": "ncameron@mozilla.com", "date": "2014-10-13T01:50:10Z"}, "committer": {"name": "Nick Cameron", "email": "ncameron@mozilla.com", "date": "2014-10-15T04:38:31Z"}, "message": "Allow passing self as an argument to methods\n\nPart of UFCS (#16293)", "tree": {"sha": "94c0ef833a4f2cb8b258ac2d982a4c83f30c98c9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/94c0ef833a4f2cb8b258ac2d982a4c83f30c98c9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d3f51dcab85f6878fd25636bf1c8b8d4cf35b4ce", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d3f51dcab85f6878fd25636bf1c8b8d4cf35b4ce", "html_url": "https://github.com/rust-lang/rust/commit/d3f51dcab85f6878fd25636bf1c8b8d4cf35b4ce", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d3f51dcab85f6878fd25636bf1c8b8d4cf35b4ce/comments", "author": {"login": "nrc", "id": 762626, "node_id": "MDQ6VXNlcjc2MjYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/762626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nrc", "html_url": "https://github.com/nrc", "followers_url": "https://api.github.com/users/nrc/followers", "following_url": "https://api.github.com/users/nrc/following{/other_user}", "gists_url": "https://api.github.com/users/nrc/gists{/gist_id}", "starred_url": "https://api.github.com/users/nrc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nrc/subscriptions", "organizations_url": "https://api.github.com/users/nrc/orgs", "repos_url": "https://api.github.com/users/nrc/repos", "events_url": "https://api.github.com/users/nrc/events{/privacy}", "received_events_url": "https://api.github.com/users/nrc/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nrc", "id": 762626, "node_id": "MDQ6VXNlcjc2MjYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/762626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nrc", "html_url": "https://github.com/nrc", "followers_url": "https://api.github.com/users/nrc/followers", "following_url": "https://api.github.com/users/nrc/following{/other_user}", "gists_url": "https://api.github.com/users/nrc/gists{/gist_id}", "starred_url": "https://api.github.com/users/nrc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nrc/subscriptions", "organizations_url": "https://api.github.com/users/nrc/orgs", "repos_url": "https://api.github.com/users/nrc/repos", "events_url": "https://api.github.com/users/nrc/events{/privacy}", "received_events_url": "https://api.github.com/users/nrc/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "af991574890820b178faef9764c51da72cde236d", "url": "https://api.github.com/repos/rust-lang/rust/commits/af991574890820b178faef9764c51da72cde236d", "html_url": "https://github.com/rust-lang/rust/commit/af991574890820b178faef9764c51da72cde236d"}], "stats": {"total": 26, "additions": 4, "deletions": 22}, "files": [{"sha": "4ec3fe0279e049d6f1368642d9e730ae4d2b1e30", "filename": "src/librustc/middle/resolve.rs", "status": "modified", "additions": 0, "deletions": 16, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/d3f51dcab85f6878fd25636bf1c8b8d4cf35b4ce/src%2Flibrustc%2Fmiddle%2Fresolve.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d3f51dcab85f6878fd25636bf1c8b8d4cf35b4ce/src%2Flibrustc%2Fmiddle%2Fresolve.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fresolve.rs?ref=d3f51dcab85f6878fd25636bf1c8b8d4cf35b4ce", "patch": "@@ -5751,22 +5751,6 @@ impl<'a> Resolver<'a> {\n                         // Write the result into the def map.\n                         debug!(\"(resolving expr) resolved `{}`\",\n                                self.path_idents_to_string(path));\n-\n-                        // First-class methods are not supported yet; error\n-                        // out here.\n-                        match def {\n-                            (DefMethod(..), _) => {\n-                                self.resolve_error(expr.span,\n-                                                      \"first-class methods \\\n-                                                       are not supported\");\n-                                self.session.span_note(expr.span,\n-                                                       \"call the method \\\n-                                                        using the `.` \\\n-                                                        syntax\");\n-                            }\n-                            _ => {}\n-                        }\n-\n                         self.record_def(expr.id, def);\n                     }\n                     None => {"}, {"sha": "a0a67cc774f49996f865762767350b867484bf5e", "filename": "src/librustc/middle/trans/callee.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/d3f51dcab85f6878fd25636bf1c8b8d4cf35b4ce/src%2Flibrustc%2Fmiddle%2Ftrans%2Fcallee.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d3f51dcab85f6878fd25636bf1c8b8d4cf35b4ce/src%2Flibrustc%2Fmiddle%2Ftrans%2Fcallee.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftrans%2Fcallee.rs?ref=d3f51dcab85f6878fd25636bf1c8b8d4cf35b4ce", "patch": "@@ -165,7 +165,7 @@ fn trans<'blk, 'tcx>(bcx: Block<'blk, 'tcx>, expr: &ast::Expr)\n                 let def_id = inline::maybe_instantiate_inline(bcx.ccx(), did);\n                 Callee { bcx: bcx, data: Intrinsic(def_id.node, substs) }\n             }\n-            def::DefFn(did, _, _) |\n+            def::DefFn(did, _, _) | def::DefMethod(did, _) |\n             def::DefStaticMethod(did, def::FromImpl(_), _) => {\n                 fn_callee(bcx, trans_fn_ref(bcx, did, ExprId(ref_expr.id)))\n             }\n@@ -205,7 +205,7 @@ fn trans<'blk, 'tcx>(bcx: Block<'blk, 'tcx>, expr: &ast::Expr)\n             def::DefTy(..) | def::DefPrimTy(..) | def::DefAssociatedTy(..) |\n             def::DefUse(..) | def::DefTyParamBinder(..) |\n             def::DefRegion(..) | def::DefLabel(..) | def::DefTyParam(..) |\n-            def::DefSelfTy(..) | def::DefMethod(..) => {\n+            def::DefSelfTy(..) => {\n                 bcx.tcx().sess.span_bug(\n                     ref_expr.span,\n                     format!(\"cannot translate def {:?} \\"}, {"sha": "fbc5fb8936afa902856c3333c493737cdbf982fa", "filename": "src/librustc/middle/typeck/check/mod.rs", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/d3f51dcab85f6878fd25636bf1c8b8d4cf35b4ce/src%2Flibrustc%2Fmiddle%2Ftypeck%2Fcheck%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d3f51dcab85f6878fd25636bf1c8b8d4cf35b4ce/src%2Flibrustc%2Fmiddle%2Ftypeck%2Fcheck%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftypeck%2Fcheck%2Fmod.rs?ref=d3f51dcab85f6878fd25636bf1c8b8d4cf35b4ce", "patch": "@@ -5029,7 +5029,8 @@ pub fn polytype_for_def(fcx: &FnCtxt,\n       }\n       def::DefFn(id, _, _) | def::DefStaticMethod(id, _, _) |\n       def::DefStatic(id, _) | def::DefVariant(_, id, _) |\n-      def::DefStruct(id) | def::DefConst(id) => {\n+      def::DefStruct(id) | def::DefConst(id) |\n+      def::DefMethod(id, _) => {\n         return ty::lookup_item_type(fcx.ccx.tcx, id);\n       }\n       def::DefTrait(_) |\n@@ -5057,9 +5058,6 @@ pub fn polytype_for_def(fcx: &FnCtxt,\n       def::DefSelfTy(..) => {\n         fcx.ccx.tcx.sess.span_bug(sp, \"expected value, found self ty\");\n       }\n-      def::DefMethod(..) => {\n-        fcx.ccx.tcx.sess.span_bug(sp, \"expected value, found method\");\n-      }\n     }\n }\n "}]}