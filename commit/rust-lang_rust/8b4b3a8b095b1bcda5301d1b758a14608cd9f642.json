{"sha": "8b4b3a8b095b1bcda5301d1b758a14608cd9f642", "node_id": "MDY6Q29tbWl0NzI0NzEyOjhiNGIzYThiMDk1YjFiY2RhNTMwMWQxYjc1OGExNDYwOGNkOWY2NDI=", "commit": {"author": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2016-05-19T15:51:07Z"}, "committer": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2016-05-19T15:51:07Z"}, "message": "Rollup merge of #33712 - jseyfried:fix_expanded_expr_span_bug, r=nrc\n\nFix bug in macro expression spans\n\nFix a bug in macro expression spans.\nr? @nrc", "tree": {"sha": "21f12b7273671394da916955d3acba34a8bb7347", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/21f12b7273671394da916955d3acba34a8bb7347"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8b4b3a8b095b1bcda5301d1b758a14608cd9f642", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8b4b3a8b095b1bcda5301d1b758a14608cd9f642", "html_url": "https://github.com/rust-lang/rust/commit/8b4b3a8b095b1bcda5301d1b758a14608cd9f642", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8b4b3a8b095b1bcda5301d1b758a14608cd9f642/comments", "author": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "14661aeb0a3f78acc0f406f93a329e870af5f0b0", "url": "https://api.github.com/repos/rust-lang/rust/commits/14661aeb0a3f78acc0f406f93a329e870af5f0b0", "html_url": "https://github.com/rust-lang/rust/commit/14661aeb0a3f78acc0f406f93a329e870af5f0b0"}, {"sha": "f630419351122a3af49ca1ea65f88c69b6a8a004", "url": "https://api.github.com/repos/rust-lang/rust/commits/f630419351122a3af49ca1ea65f88c69b6a8a004", "html_url": "https://github.com/rust-lang/rust/commit/f630419351122a3af49ca1ea65f88c69b6a8a004"}], "stats": {"total": 52, "additions": 24, "deletions": 28}, "files": [{"sha": "f243706eecb8036334960f80ea07e6a46aa0c6bd", "filename": "src/libsyntax/ext/expand.rs", "status": "modified", "additions": 1, "deletions": 7, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/8b4b3a8b095b1bcda5301d1b758a14608cd9f642/src%2Flibsyntax%2Fext%2Fexpand.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8b4b3a8b095b1bcda5301d1b758a14608cd9f642/src%2Flibsyntax%2Fext%2Fexpand.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Fexpand.rs?ref=8b4b3a8b095b1bcda5301d1b758a14608cd9f642", "patch": "@@ -70,15 +70,9 @@ pub fn expand_expr(e: P<ast::Expr>, fld: &mut MacroExpander) -> P<ast::Expr> {\n \n             // Keep going, outside-in.\n             let fully_expanded = fld.fold_expr(expanded_expr);\n-            let span = fld.new_span(span);\n             fld.cx.bt_pop();\n \n-            fully_expanded.map(|e| ast::Expr {\n-                id: ast::DUMMY_NODE_ID,\n-                node: e.node,\n-                span: span,\n-                attrs: e.attrs,\n-            })\n+            fully_expanded\n         }\n \n         ast::ExprKind::InPlace(placer, value_expr) => {"}, {"sha": "7b811f581c1a707826c5ac042422c0a532c0b48e", "filename": "src/test/compile-fail/borrowck/borrowck-borrowed-uniq-rvalue-2.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/8b4b3a8b095b1bcda5301d1b758a14608cd9f642/src%2Ftest%2Fcompile-fail%2Fborrowck%2Fborrowck-borrowed-uniq-rvalue-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8b4b3a8b095b1bcda5301d1b758a14608cd9f642/src%2Ftest%2Fcompile-fail%2Fborrowck%2Fborrowck-borrowed-uniq-rvalue-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fborrowck%2Fborrowck-borrowed-uniq-rvalue-2.rs?ref=8b4b3a8b095b1bcda5301d1b758a14608cd9f642", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+// error-pattern: borrowed value does not live long enough\n+\n struct defer<'a> {\n     x: &'a [&'a str],\n }\n@@ -28,6 +30,5 @@ fn defer<'r>(x: &'r [&'r str]) -> defer<'r> {\n \n fn main() {\n     let x = defer(&vec!(\"Goodbye\", \"world!\"));\n-    //~^ ERROR borrowed value does not live long enough\n     x.x[0];\n }"}, {"sha": "2bd7da91d2c5832012544e85d3bb70824f07bf1f", "filename": "src/test/compile-fail/issue-15167.rs", "status": "modified", "additions": 8, "deletions": 4, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/8b4b3a8b095b1bcda5301d1b758a14608cd9f642/src%2Ftest%2Fcompile-fail%2Fissue-15167.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8b4b3a8b095b1bcda5301d1b758a14608cd9f642/src%2Ftest%2Fcompile-fail%2Fissue-15167.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-15167.rs?ref=8b4b3a8b095b1bcda5301d1b758a14608cd9f642", "patch": "@@ -11,22 +11,26 @@\n // macro f should not be able to inject a reference to 'n'.\n \n macro_rules! f { () => (n) }\n+//~^ ERROR unresolved name `n`\n+//~| ERROR unresolved name `n`\n+//~| ERROR unresolved name `n`\n+//~| ERROR unresolved name `n`\n \n fn main() -> (){\n     for n in 0..1 {\n-        println!(\"{}\", f!()); //~ ERROR unresolved name `n`\n+        println!(\"{}\", f!());\n     }\n \n     if let Some(n) = None {\n-        println!(\"{}\", f!()); //~ ERROR unresolved name `n`\n+        println!(\"{}\", f!());\n     }\n \n     if false {\n     } else if let Some(n) = None {\n-        println!(\"{}\", f!()); //~ ERROR unresolved name `n`\n+        println!(\"{}\", f!());\n     }\n \n     while let Some(n) = None {\n-        println!(\"{}\", f!()); //~ ERROR unresolved name `n`\n+        println!(\"{}\", f!());\n     }\n }"}, {"sha": "ebec204184d738527306fba1343b334560db18d1", "filename": "src/test/compile-fail/macro-backtrace-invalid-internals.rs", "status": "modified", "additions": 4, "deletions": 6, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/8b4b3a8b095b1bcda5301d1b758a14608cd9f642/src%2Ftest%2Fcompile-fail%2Fmacro-backtrace-invalid-internals.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8b4b3a8b095b1bcda5301d1b758a14608cd9f642/src%2Ftest%2Fcompile-fail%2Fmacro-backtrace-invalid-internals.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fmacro-backtrace-invalid-internals.rs?ref=8b4b3a8b095b1bcda5301d1b758a14608cd9f642", "patch": "@@ -36,13 +36,13 @@ macro_rules! fake_method_expr {\n \n macro_rules! fake_field_expr {\n      () => {\n-          1.fake\n+          1.fake //~ ERROR no field with that name\n      }\n }\n \n macro_rules! fake_anon_field_expr {\n      () => {\n-          (1).0\n+          (1).0 //~ ERROR type was not a tuple\n      }\n }\n \n@@ -52,8 +52,6 @@ fn main() {\n     fake_anon_field_stmt!(); //~ NOTE in this expansion of\n \n     let _ = fake_method_expr!(); //~ NOTE in this expansion of\n-    let _ = fake_field_expr!(); //~ ERROR no field with that name\n-                                //~^ NOTE in this expansion of\n-    let _ = fake_anon_field_expr!(); //~ ERROR type was not a tuple\n-                                     //~^ NOTE in this expansion of\n+    let _ = fake_field_expr!(); //~ NOTE in this expansion of\n+    let _ = fake_anon_field_expr!(); //~ NOTE in this expansion of\n }"}, {"sha": "c2a270ea9f5c0d8f31aaab482ee8f1d976ce21d1", "filename": "src/test/compile-fail/macro-backtrace-nested.rs", "status": "modified", "additions": 5, "deletions": 6, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/8b4b3a8b095b1bcda5301d1b758a14608cd9f642/src%2Ftest%2Fcompile-fail%2Fmacro-backtrace-nested.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8b4b3a8b095b1bcda5301d1b758a14608cd9f642/src%2Ftest%2Fcompile-fail%2Fmacro-backtrace-nested.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fmacro-backtrace-nested.rs?ref=8b4b3a8b095b1bcda5301d1b758a14608cd9f642", "patch": "@@ -12,20 +12,19 @@\n // we replace the span of the expanded expression with that of the call site.\n \n macro_rules! nested_expr {\n-    () => (fake)\n+    () => (fake) //~ ERROR unresolved name\n+                 //~^ ERROR unresolved name\n }\n \n macro_rules! call_nested_expr {\n-    () => (nested_expr!())\n+    () => (nested_expr!()) //~ NOTE in this expansion of nested_expr!\n }\n \n macro_rules! call_nested_expr_sum {\n-    () => { 1 + nested_expr!(); } //~ ERROR unresolved name\n-                                  //~^ NOTE in this expansion of nested_expr!\n+    () => { 1 + nested_expr!(); } //~ NOTE in this expansion of nested_expr!\n }\n \n fn main() {\n-    1 + call_nested_expr!(); //~ ERROR unresolved name\n-                             //~^ NOTE in this expansion of call_nested_expr!\n+    1 + call_nested_expr!(); //~ NOTE in this expansion of call_nested_expr!\n     call_nested_expr_sum!(); //~ NOTE in this expansion of\n }"}, {"sha": "c2277c3e6d8cdaba024839c618c0d1a59d2cf4ac", "filename": "src/test/compile-fail/macro-backtrace-println.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/8b4b3a8b095b1bcda5301d1b758a14608cd9f642/src%2Ftest%2Fcompile-fail%2Fmacro-backtrace-println.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8b4b3a8b095b1bcda5301d1b758a14608cd9f642/src%2Ftest%2Fcompile-fail%2Fmacro-backtrace-println.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fmacro-backtrace-println.rs?ref=8b4b3a8b095b1bcda5301d1b758a14608cd9f642", "patch": "@@ -21,11 +21,11 @@ macro_rules! myprint {\n }\n \n macro_rules! myprintln {\n-    ($fmt:expr) => (myprint!(concat!($fmt, \"\\n\"))); //~ ERROR invalid reference to argument `0`\n-                                                    //~^ NOTE in this expansion of myprint!\n-                                                    //~^^ NOTE in this expansion of concat!\n+    ($fmt:expr) => (myprint!(concat!($fmt, \"\\n\"))); //~ NOTE in this expansion of myprint!\n+                                                    //~^ NOTE in this expansion of concat!\n }\n \n fn main() {\n-    myprintln!(\"{}\"); //~ NOTE in this expansion of\n+    myprintln!(\"{}\"); //~ ERROR invalid reference to argument `0`\n+                      //~^ NOTE in this expansion of\n }"}]}