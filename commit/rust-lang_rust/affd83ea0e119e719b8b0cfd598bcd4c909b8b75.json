{"sha": "affd83ea0e119e719b8b0cfd598bcd4c909b8b75", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFmZmQ4M2VhMGUxMTllNzE5YjhiMGNmZDU5OGJjZDRjOTA5YjhiNzU=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-02-18T01:48:37Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-02-18T01:48:37Z"}, "message": "rustdoc: Find the path to all item types", "tree": {"sha": "c39b356b0affee003cc76820e9150b79de9549eb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c39b356b0affee003cc76820e9150b79de9549eb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/affd83ea0e119e719b8b0cfd598bcd4c909b8b75", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/affd83ea0e119e719b8b0cfd598bcd4c909b8b75", "html_url": "https://github.com/rust-lang/rust/commit/affd83ea0e119e719b8b0cfd598bcd4c909b8b75", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/affd83ea0e119e719b8b0cfd598bcd4c909b8b75/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f8f28e29be16131afe71bd3854d645b87664495b", "url": "https://api.github.com/repos/rust-lang/rust/commits/f8f28e29be16131afe71bd3854d645b87664495b", "html_url": "https://github.com/rust-lang/rust/commit/f8f28e29be16131afe71bd3854d645b87664495b"}], "stats": {"total": 31, "additions": 21, "deletions": 10}, "files": [{"sha": "d4730e9faba60ce8918aac0769c29825f42079b4", "filename": "src/rustdoc/path_pass.rs", "status": "modified", "additions": 21, "deletions": 10, "changes": 31, "blob_url": "https://github.com/rust-lang/rust/blob/affd83ea0e119e719b8b0cfd598bcd4c909b8b75/src%2Frustdoc%2Fpath_pass.rs", "raw_url": "https://github.com/rust-lang/rust/raw/affd83ea0e119e719b8b0cfd598bcd4c909b8b75/src%2Frustdoc%2Fpath_pass.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustdoc%2Fpath_pass.rs?ref=affd83ea0e119e719b8b0cfd598bcd4c909b8b75", "patch": "@@ -15,28 +15,29 @@ fn run(srv: astsrv::srv, doc: doc::cratedoc) -> doc::cratedoc {\n         mutable path: []\n     };\n     let fold = fold::fold({\n-        fold_mod: fn~(\n-            f: fold::fold<ctxt>,\n-            d: doc::moddoc\n-        ) -> doc::moddoc {\n-            fold_mod(f, d)\n-        }\n+        fold_item: fold_item,\n+        fold_mod: fold_mod\n         with *fold::default_seq_fold(ctxt)\n     });\n     fold.fold_crate(fold, doc)\n }\n \n+fn fold_item(fold: fold::fold<ctxt>, doc: doc::itemdoc) -> doc::itemdoc {\n+    {\n+        path: fold.ctxt.path\n+        with doc\n+    }\n+}\n+\n fn fold_mod(fold: fold::fold<ctxt>, doc: doc::moddoc) -> doc::moddoc {\n     let is_topmod = doc.id() == rustc::syntax::ast::crate_node_id;\n \n     if !is_topmod { vec::push(fold.ctxt.path, doc.name()); }\n     let doc = fold::default_seq_fold_mod(fold, doc);\n     if !is_topmod { vec::pop(fold.ctxt.path); }\n+\n     {\n-        item: {\n-            path: fold.ctxt.path\n-            with doc.item\n-        }\n+        item: fold.fold_item(fold, doc.item)\n         with doc\n     }\n }\n@@ -47,6 +48,16 @@ fn should_record_mod_paths() {\n     let srv = astsrv::mk_srv_from_str(source);\n     let doc = extract::from_srv(srv, \"\");\n     let doc = run(srv, doc);\n+    log(error, doc.topmod.mods()[0].mods()[0].mods()[0].path());\n     assert doc.topmod.mods()[0].mods()[0].mods()[0].path() == [\"a\", \"b\"];\n     assert doc.topmod.mods()[0].mods()[1].mods()[0].path() == [\"a\", \"d\"];\n+}\n+\n+#[test]\n+fn should_record_fn_paths() {\n+    let source = \"mod a { fn b() { } }\";\n+    let srv = astsrv::mk_srv_from_str(source);\n+    let doc = extract::from_srv(srv, \"\");\n+    let doc = run(srv, doc);\n+    assert doc.topmod.mods()[0].fns()[0].path() == [\"a\"];\n }\n\\ No newline at end of file"}]}