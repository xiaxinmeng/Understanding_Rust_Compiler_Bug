{"sha": "8a35d3a08eeb37de0a2c115dec5aa31e642b2b1c", "node_id": "MDY6Q29tbWl0NzI0NzEyOjhhMzVkM2EwOGVlYjM3ZGUwYTJjMTE1ZGVjNWFhMzFlNjQyYjJiMWM=", "commit": {"author": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2020-12-22T23:13:34Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-12-22T23:13:34Z"}, "message": "Rollup merge of #80204 - pierwill:pierwill-rustcmiddle-ondisk, r=varkor\n\ndocs: Edit rustc_middle::ty::query::on_disk_cache\n\nExpand abbreviations for \"incremental compliation\".\n\nAlso added the word \"to\" to the description of CacheEncoder.", "tree": {"sha": "498f6fc697526cae0a128158b27b248c434234bd", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/498f6fc697526cae0a128158b27b248c434234bd"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8a35d3a08eeb37de0a2c115dec5aa31e642b2b1c", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJf4n2fCRBK7hj4Ov3rIwAAdHIIAGb9ffBIlDNR+3LxHGmviOcs\ndpHZhBEeH+l+QjSFa+PqhGMfyhpftyaHqWyAE4aLGX6UPuzdr3Xv/+SbJYqy6GNR\nICM2ksXzeuWqWYQswTcnU+mbw33LTAAaS6/kjJw8qsklBFbBo+nL4tzDMuWP1e9x\nkaQ5axshA2VwD3WcggulxPiXxm2K2MGSQ4KBFCQ3f3xch60I7IZ1s737nIw582rN\nvWpL0A7XNkMBIu0Oqe98T9Nc5g3W9yjWPD8KHg56aqyJ3sCET7R+UMeNheN27Ua7\nIa4uXrfc1oVpcxxNEpRcClS13rzOLBKjuSliNyJnOl2i+oWylD0gZJYsoCVwKVM=\n=AgEk\n-----END PGP SIGNATURE-----\n", "payload": "tree 498f6fc697526cae0a128158b27b248c434234bd\nparent f84ec97485f34bc8e0f6e194f7b48ce463c9098a\nparent 4fffa742d70c81f7414d02f55808d22eeeb77bb2\nauthor Guillaume Gomez <guillaume1.gomez@gmail.com> 1608678814 +0100\ncommitter GitHub <noreply@github.com> 1608678814 +0100\n\nRollup merge of #80204 - pierwill:pierwill-rustcmiddle-ondisk, r=varkor\n\ndocs: Edit rustc_middle::ty::query::on_disk_cache\n\nExpand abbreviations for \"incremental compliation\".\n\nAlso added the word \"to\" to the description of CacheEncoder.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8a35d3a08eeb37de0a2c115dec5aa31e642b2b1c", "html_url": "https://github.com/rust-lang/rust/commit/8a35d3a08eeb37de0a2c115dec5aa31e642b2b1c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8a35d3a08eeb37de0a2c115dec5aa31e642b2b1c/comments", "author": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f84ec97485f34bc8e0f6e194f7b48ce463c9098a", "url": "https://api.github.com/repos/rust-lang/rust/commits/f84ec97485f34bc8e0f6e194f7b48ce463c9098a", "html_url": "https://github.com/rust-lang/rust/commit/f84ec97485f34bc8e0f6e194f7b48ce463c9098a"}, {"sha": "4fffa742d70c81f7414d02f55808d22eeeb77bb2", "url": "https://api.github.com/repos/rust-lang/rust/commits/4fffa742d70c81f7414d02f55808d22eeeb77bb2", "html_url": "https://github.com/rust-lang/rust/commit/4fffa742d70c81f7414d02f55808d22eeeb77bb2"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "8a1165bbd647a296bf8fc19ff2fdb387976e959c", "filename": "compiler/rustc_middle/src/ty/query/on_disk_cache.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/8a35d3a08eeb37de0a2c115dec5aa31e642b2b1c/compiler%2Frustc_middle%2Fsrc%2Fty%2Fquery%2Fon_disk_cache.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8a35d3a08eeb37de0a2c115dec5aa31e642b2b1c/compiler%2Frustc_middle%2Fsrc%2Fty%2Fquery%2Fon_disk_cache.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fty%2Fquery%2Fon_disk_cache.rs?ref=8a35d3a08eeb37de0a2c115dec5aa31e642b2b1c", "patch": "@@ -666,7 +666,7 @@ impl<'sess> OnDiskCache<'sess> {\n \n //- DECODING -------------------------------------------------------------------\n \n-/// A decoder that can read from the incr. comp. cache. It is similar to the one\n+/// A decoder that can read from the incremental compilation cache. It is similar to the one\n /// we use for crate metadata decoding in that it can rebase spans and eventually\n /// will also handle things that contain `Ty` instances.\n crate struct CacheDecoder<'a, 'tcx> {\n@@ -954,7 +954,7 @@ impl<'a, 'tcx> Decodable<CacheDecoder<'a, 'tcx>> for &'tcx [Span] {\n \n //- ENCODING -------------------------------------------------------------------\n \n-/// An encoder that can write the incr. comp. cache.\n+/// An encoder that can write to the incremental compilation cache.\n struct CacheEncoder<'a, 'tcx, E: OpaqueEncoder> {\n     tcx: TyCtxt<'tcx>,\n     encoder: &'a mut E,"}]}