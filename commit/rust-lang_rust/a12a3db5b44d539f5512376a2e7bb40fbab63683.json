{"sha": "a12a3db5b44d539f5512376a2e7bb40fbab63683", "node_id": "MDY6Q29tbWl0NzI0NzEyOmExMmEzZGI1YjQ0ZDUzOWY1NTEyMzc2YTJlN2JiNDBmYmFiNjM2ODM=", "commit": {"author": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2013-04-23T04:54:29Z"}, "committer": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2013-04-29T21:30:55Z"}, "message": "librustc: Make `&fn` by-copy by default and remove the mode from `frame_address`.", "tree": {"sha": "02ceafdad102d0050eb4d5661bbfa1f2bf0fdf10", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/02ceafdad102d0050eb4d5661bbfa1f2bf0fdf10"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a12a3db5b44d539f5512376a2e7bb40fbab63683", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a12a3db5b44d539f5512376a2e7bb40fbab63683", "html_url": "https://github.com/rust-lang/rust/commit/a12a3db5b44d539f5512376a2e7bb40fbab63683", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a12a3db5b44d539f5512376a2e7bb40fbab63683/comments", "author": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "17723d18de8262058c77def1cd284d4bf072c13b", "url": "https://api.github.com/repos/rust-lang/rust/commits/17723d18de8262058c77def1cd284d4bf072c13b", "html_url": "https://github.com/rust-lang/rust/commit/17723d18de8262058c77def1cd284d4bf072c13b"}], "stats": {"total": 13, "additions": 4, "deletions": 9}, "files": [{"sha": "ebf36e4e09ab4efbb730160eb04bb08d65fc90a9", "filename": "src/libcore/stackwalk.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/a12a3db5b44d539f5512376a2e7bb40fbab63683/src%2Flibcore%2Fstackwalk.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a12a3db5b44d539f5512376a2e7bb40fbab63683/src%2Flibcore%2Fstackwalk.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fstackwalk.rs?ref=a12a3db5b44d539f5512376a2e7bb40fbab63683", "patch": "@@ -93,7 +93,10 @@ pub mod rustrt {\n pub mod rusti {\n     #[abi = \"rust-intrinsic\"]\n     pub extern \"rust-intrinsic\" {\n+        #[cfg(stage0)]\n         pub fn frame_address(f: &once fn(x: *u8));\n+        #[cfg(not(stage0))]\n+        pub fn frame_address(+f: &once fn(x: *u8));\n     }\n }\n "}, {"sha": "053b03bf6d7fa554a9fd8d41dc793937e3bbada2", "filename": "src/librustc/middle/ty.rs", "status": "modified", "additions": 0, "deletions": 8, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/a12a3db5b44d539f5512376a2e7bb40fbab63683/src%2Flibrustc%2Fmiddle%2Fty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a12a3db5b44d539f5512376a2e7bb40fbab63683/src%2Flibrustc%2Fmiddle%2Fty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fty.rs?ref=a12a3db5b44d539f5512376a2e7bb40fbab63683", "patch": "@@ -1259,14 +1259,6 @@ pub fn mach_sty(cfg: @session::config, t: t) -> sty {\n }\n \n pub fn default_arg_mode_for_ty(tcx: ctxt, ty: ty::t) -> ast::rmode {\n-    // FIXME(#2202) --- We retain by-ref for &fn things to workaround a\n-    // memory leak that otherwise results when @fn is upcast to &fn.\n-    match ty::get(ty).sty {\n-        ty::ty_closure(ClosureTy {sigil: ast::BorrowedSigil, _}) => {\n-            return ast::by_ref;\n-        }\n-        _ => {}\n-    }\n     return if tcx.legacy_modes {\n         if type_is_borrowed(ty) {\n             // the old mode default was ++ for things like &ptr, but to be"}, {"sha": "c6ab5affd108386c1489b443146e8b20546426a0", "filename": "src/librustc/middle/typeck/check/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a12a3db5b44d539f5512376a2e7bb40fbab63683/src%2Flibrustc%2Fmiddle%2Ftypeck%2Fcheck%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a12a3db5b44d539f5512376a2e7bb40fbab63683/src%2Flibrustc%2Fmiddle%2Ftypeck%2Fcheck%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftypeck%2Fcheck%2Fmod.rs?ref=a12a3db5b44d539f5512376a2e7bb40fbab63683", "patch": "@@ -3496,7 +3496,7 @@ pub fn check_intrinsic_type(ccx: @mut CrateCtxt, it: @ast::foreign_item) {\n                 output: ty::mk_nil()\n             }\n         });\n-        (0u, ~[arg(ast::by_ref, fty)], ty::mk_nil())\n+        (0u, ~[arg(ast::by_copy, fty)], ty::mk_nil())\n       }\n       ~\"morestack_addr\" => {\n         (0u, ~[], ty::mk_nil_ptr(ccx.tcx))"}]}