{"sha": "9be635306cdf06dde62e2c1ebaadcdc33f44f45c", "node_id": "MDY6Q29tbWl0NzI0NzEyOjliZTYzNTMwNmNkZjA2ZGRlNjJlMmMxZWJhYWRjZGMzM2Y0NGY0NWM=", "commit": {"author": {"name": "csmoe", "email": "csmoe@msn.com", "date": "2020-05-22T04:14:53Z"}, "committer": {"name": "csmoe", "email": "csmoe@msn.com", "date": "2020-06-04T01:37:32Z"}, "message": "resolve error code e0760", "tree": {"sha": "55038b4e6a93879678a95202c62ec26e73065d65", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/55038b4e6a93879678a95202c62ec26e73065d65"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9be635306cdf06dde62e2c1ebaadcdc33f44f45c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9be635306cdf06dde62e2c1ebaadcdc33f44f45c", "html_url": "https://github.com/rust-lang/rust/commit/9be635306cdf06dde62e2c1ebaadcdc33f44f45c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9be635306cdf06dde62e2c1ebaadcdc33f44f45c/comments", "author": {"login": "csmoe", "id": 35686186, "node_id": "MDQ6VXNlcjM1Njg2MTg2", "avatar_url": "https://avatars.githubusercontent.com/u/35686186?v=4", "gravatar_id": "", "url": "https://api.github.com/users/csmoe", "html_url": "https://github.com/csmoe", "followers_url": "https://api.github.com/users/csmoe/followers", "following_url": "https://api.github.com/users/csmoe/following{/other_user}", "gists_url": "https://api.github.com/users/csmoe/gists{/gist_id}", "starred_url": "https://api.github.com/users/csmoe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/csmoe/subscriptions", "organizations_url": "https://api.github.com/users/csmoe/orgs", "repos_url": "https://api.github.com/users/csmoe/repos", "events_url": "https://api.github.com/users/csmoe/events{/privacy}", "received_events_url": "https://api.github.com/users/csmoe/received_events", "type": "User", "site_admin": false}, "committer": {"login": "csmoe", "id": 35686186, "node_id": "MDQ6VXNlcjM1Njg2MTg2", "avatar_url": "https://avatars.githubusercontent.com/u/35686186?v=4", "gravatar_id": "", "url": "https://api.github.com/users/csmoe", "html_url": "https://github.com/csmoe", "followers_url": "https://api.github.com/users/csmoe/followers", "following_url": "https://api.github.com/users/csmoe/following{/other_user}", "gists_url": "https://api.github.com/users/csmoe/gists{/gist_id}", "starred_url": "https://api.github.com/users/csmoe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/csmoe/subscriptions", "organizations_url": "https://api.github.com/users/csmoe/orgs", "repos_url": "https://api.github.com/users/csmoe/repos", "events_url": "https://api.github.com/users/csmoe/events{/privacy}", "received_events_url": "https://api.github.com/users/csmoe/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2f311b07c8d95b1192e585e983535de89bcbdfaa", "url": "https://api.github.com/repos/rust-lang/rust/commits/2f311b07c8d95b1192e585e983535de89bcbdfaa", "html_url": "https://github.com/rust-lang/rust/commit/2f311b07c8d95b1192e585e983535de89bcbdfaa"}], "stats": {"total": 14, "additions": 7, "deletions": 7}, "files": [{"sha": "97f0c16b4cfb2949411a900af3544c989e3357b3", "filename": "src/librustc_error_codes/error_codes.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9be635306cdf06dde62e2c1ebaadcdc33f44f45c/src%2Flibrustc_error_codes%2Ferror_codes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9be635306cdf06dde62e2c1ebaadcdc33f44f45c/src%2Flibrustc_error_codes%2Ferror_codes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_error_codes%2Ferror_codes.rs?ref=9be635306cdf06dde62e2c1ebaadcdc33f44f45c", "patch": "@@ -437,7 +437,7 @@ E0751: include_str!(\"./error_codes/E0751.md\"),\n E0752: include_str!(\"./error_codes/E0752.md\"),\n E0753: include_str!(\"./error_codes/E0753.md\"),\n E0754: include_str!(\"./error_codes/E0754.md\"),\n-E0755: include_str!(\"./error_codes/E0755.md\"),\n+E0760: include_str!(\"./error_codes/E0760.md\"),\n ;\n //  E0006, // merged with E0005\n //  E0008, // cannot bind by-move into a pattern guard"}, {"sha": "e1dcfefebcd762187aba9a1d49a0b44154696787", "filename": "src/librustc_error_codes/error_codes/E0760.md", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9be635306cdf06dde62e2c1ebaadcdc33f44f45c/src%2Flibrustc_error_codes%2Ferror_codes%2FE0760.md", "raw_url": "https://github.com/rust-lang/rust/raw/9be635306cdf06dde62e2c1ebaadcdc33f44f45c/src%2Flibrustc_error_codes%2Ferror_codes%2FE0760.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_error_codes%2Ferror_codes%2FE0760.md?ref=9be635306cdf06dde62e2c1ebaadcdc33f44f45c", "patch": "@@ -3,7 +3,7 @@ or `Self` that references lifetimes from a parent scope.\n \n Erroneous code example:\n \n-```compile_fail,E0755,edition2018\n+```compile_fail,E0760,edition2018\n struct S<'a>(&'a i32);\n \n impl<'a> S<'a> {", "previous_filename": "src/librustc_error_codes/error_codes/E0755.md"}, {"sha": "4646e703496bb80b73b54a4ff2fba95c9884a446", "filename": "src/librustc_typeck/check/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9be635306cdf06dde62e2c1ebaadcdc33f44f45c/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9be635306cdf06dde62e2c1ebaadcdc33f44f45c/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs?ref=9be635306cdf06dde62e2c1ebaadcdc33f44f45c", "patch": "@@ -1690,7 +1690,7 @@ fn check_opaque_for_inheriting_lifetimes(tcx: TyCtxt<'tcx>, def_id: LocalDefId,\n             let mut err = struct_span_err!(\n                 tcx.sess,\n                 span,\n-                E0755,\n+                E0760,\n                 \"`{}` return type cannot contain a projection or `Self` that references lifetimes from \\\n              a parent scope\",\n                 if is_async { \"async fn\" } else { \"impl Trait\" },"}, {"sha": "4eeef871c5bfc6ea8fa2811ed7a6353496402880", "filename": "src/test/ui/async-await/issue-61949-self-return-type.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/9be635306cdf06dde62e2c1ebaadcdc33f44f45c/src%2Ftest%2Fui%2Fasync-await%2Fissue-61949-self-return-type.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/9be635306cdf06dde62e2c1ebaadcdc33f44f45c/src%2Ftest%2Fui%2Fasync-await%2Fissue-61949-self-return-type.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fasync-await%2Fissue-61949-self-return-type.stderr?ref=9be635306cdf06dde62e2c1ebaadcdc33f44f45c", "patch": "@@ -1,9 +1,9 @@\n-error[E0755]: `async fn` return type cannot contain a projection or `Self` that references lifetimes from a parent scope\n+error[E0760]: `async fn` return type cannot contain a projection or `Self` that references lifetimes from a parent scope\n   --> $DIR/issue-61949-self-return-type.rs:11:40\n    |\n LL |     pub async fn new(_bar: &'a i32) -> Self {\n    |                                        ^^^^ help: consider spelling out the type instead: `Foo<'a>`\n \n error: aborting due to previous error\n \n-For more information about this error, try `rustc --explain E0755`.\n+For more information about this error, try `rustc --explain E0760`."}, {"sha": "03aba10cc79b4a28468fb2fede535ac2102a3953", "filename": "src/test/ui/impl-trait/bound-normalization-fail.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/9be635306cdf06dde62e2c1ebaadcdc33f44f45c/src%2Ftest%2Fui%2Fimpl-trait%2Fbound-normalization-fail.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/9be635306cdf06dde62e2c1ebaadcdc33f44f45c/src%2Ftest%2Fui%2Fimpl-trait%2Fbound-normalization-fail.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fimpl-trait%2Fbound-normalization-fail.stderr?ref=9be635306cdf06dde62e2c1ebaadcdc33f44f45c", "patch": "@@ -21,7 +21,7 @@ help: consider constraining the associated type `<T as impl_trait::Trait>::Assoc\n LL |     fn foo_fail<T: Trait<Assoc = ()>>() -> impl FooLike<Output=T::Assoc> {\n    |                         ^^^^^^^^^^^^\n \n-error[E0755]: `impl Trait` return type cannot contain a projection or `Self` that references lifetimes from a parent scope\n+error[E0760]: `impl Trait` return type cannot contain a projection or `Self` that references lifetimes from a parent scope\n   --> $DIR/bound-normalization-fail.rs:43:41\n    |\n LL |     fn foo2_fail<'a, T: Trait<'a>>() -> impl FooLike<Output=T::Assoc> {\n@@ -43,5 +43,5 @@ LL |     fn foo2_fail<'a, T: Trait<'a, Assoc = ()>>() -> impl FooLike<Output=T::\n \n error: aborting due to 3 previous errors; 1 warning emitted\n \n-Some errors have detailed explanations: E0271, E0755.\n+Some errors have detailed explanations: E0271, E0760.\n For more information about an error, try `rustc --explain E0271`."}]}