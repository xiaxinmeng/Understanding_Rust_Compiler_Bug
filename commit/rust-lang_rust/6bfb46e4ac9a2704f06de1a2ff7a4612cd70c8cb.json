{"sha": "6bfb46e4ac9a2704f06de1a2ff7a4612cd70c8cb", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZiZmI0NmU0YWM5YTI3MDRmMDZkZTFhMmZmN2E0NjEyY2Q3MGM4Y2I=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2018-11-26T12:14:13Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2018-11-26T12:14:13Z"}, "message": "Auto merge of #55835 - alexcrichton:llvm-upgrade, r=nikomatsakis\n\nUpgrade LLVM to trunk, still version 8\n\nThis commit upgrades the LLVM/LLD/compiler-rt submodules used to the current trunk versions in upstream. Some activity has happened on the wasm SIMD side of things as well as LLD which we'd like to pick up!", "tree": {"sha": "b41fb59406c53b5d9a249b41541946285a3f7ef1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b41fb59406c53b5d9a249b41541946285a3f7ef1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6bfb46e4ac9a2704f06de1a2ff7a4612cd70c8cb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6bfb46e4ac9a2704f06de1a2ff7a4612cd70c8cb", "html_url": "https://github.com/rust-lang/rust/commit/6bfb46e4ac9a2704f06de1a2ff7a4612cd70c8cb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6bfb46e4ac9a2704f06de1a2ff7a4612cd70c8cb/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b51632e3f0856ea444f5e59819538e85947673fc", "url": "https://api.github.com/repos/rust-lang/rust/commits/b51632e3f0856ea444f5e59819538e85947673fc", "html_url": "https://github.com/rust-lang/rust/commit/b51632e3f0856ea444f5e59819538e85947673fc"}, {"sha": "7215963e56321c5e92b9c2f7c4ad788362451b37", "url": "https://api.github.com/repos/rust-lang/rust/commits/7215963e56321c5e92b9c2f7c4ad788362451b37", "html_url": "https://github.com/rust-lang/rust/commit/7215963e56321c5e92b9c2f7c4ad788362451b37"}], "stats": {"total": 37, "additions": 30, "deletions": 7}, "files": [{"sha": "fa66220f442c56fa46ce57592bd71b9b42b393f4", "filename": ".travis.yml", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/6bfb46e4ac9a2704f06de1a2ff7a4612cd70c8cb/.travis.yml", "raw_url": "https://github.com/rust-lang/rust/raw/6bfb46e4ac9a2704f06de1a2ff7a4612cd70c8cb/.travis.yml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/.travis.yml?ref=6bfb46e4ac9a2704f06de1a2ff7a4612cd70c8cb", "patch": "@@ -30,7 +30,7 @@ matrix:\n \n     - env: >\n         RUST_CHECK_TARGET=dist\n-        RUST_CONFIGURE_ARGS=\"--enable-extended --enable-profiler --enable-lldb --set rust.jemalloc\"\n+        RUST_CONFIGURE_ARGS=\"--enable-extended --enable-profiler --set rust.jemalloc\"\n         SRC=.\n         DEPLOY_ALT=1\n         RUSTC_RETRY_LINKER_ON_SEGFAULT=1\n@@ -87,7 +87,7 @@ matrix:\n     # OSX 10.7 and `xcode7` is the latest Xcode able to compile LLVM for 10.7.\n     - env: >\n         RUST_CHECK_TARGET=dist\n-        RUST_CONFIGURE_ARGS=\"--build=i686-apple-darwin --enable-full-tools --enable-profiler --enable-lldb --set rust.jemalloc\"\n+        RUST_CONFIGURE_ARGS=\"--build=i686-apple-darwin --enable-full-tools --enable-profiler --set rust.jemalloc\"\n         SRC=.\n         DEPLOY=1\n         RUSTC_RETRY_LINKER_ON_SEGFAULT=1\n@@ -102,7 +102,7 @@ matrix:\n \n     - env: >\n         RUST_CHECK_TARGET=dist\n-        RUST_CONFIGURE_ARGS=\"--target=aarch64-apple-ios,armv7-apple-ios,armv7s-apple-ios,i386-apple-ios,x86_64-apple-ios --enable-full-tools --enable-sanitizers --enable-profiler --enable-lldb --set rust.jemalloc\"\n+        RUST_CONFIGURE_ARGS=\"--target=aarch64-apple-ios,armv7-apple-ios,armv7s-apple-ios,i386-apple-ios,x86_64-apple-ios --enable-full-tools --enable-sanitizers --enable-profiler --set rust.jemalloc\"\n         SRC=.\n         DEPLOY=1\n         RUSTC_RETRY_LINKER_ON_SEGFAULT=1"}, {"sha": "fe74674f6e4be76d47b66f67d529ebf4186f4eb1", "filename": "src/libcompiler_builtins", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": null, "raw_url": null, "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcompiler_builtins?ref=6bfb46e4ac9a2704f06de1a2ff7a4612cd70c8cb", "patch": "@@ -1 +1 @@\n-Subproject commit 939cbca6e9d829265d6cf006d3532142a4061cd3\n+Subproject commit fe74674f6e4be76d47b66f67d529ebf4186f4eb1"}, {"sha": "f3cc344254feaae74ccbb4a261ddcf247f4f24ce", "filename": "src/librustc_codegen_ssa/back/linker.rs", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/6bfb46e4ac9a2704f06de1a2ff7a4612cd70c8cb/src%2Flibrustc_codegen_ssa%2Fback%2Flinker.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6bfb46e4ac9a2704f06de1a2ff7a4612cd70c8cb/src%2Flibrustc_codegen_ssa%2Fback%2Flinker.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_ssa%2Fback%2Flinker.rs?ref=6bfb46e4ac9a2704f06de1a2ff7a4612cd70c8cb", "patch": "@@ -1037,6 +1037,17 @@ impl<'a> Linker for WasmLd<'a> {\n         // indicative of bugs, let's prevent them.\n         self.cmd.arg(\"--fatal-warnings\");\n \n+        // The symbol visibility story is a bit in flux right now with LLD.\n+        // It's... not entirely clear to me what's going on, but this looks to\n+        // make everything work when `export_symbols` isn't otherwise called for\n+        // things like executables.\n+        self.cmd.arg(\"--export-dynamic\");\n+\n+        // LLD only implements C++-like demangling, which doesn't match our own\n+        // mangling scheme. Tell LLD to not demangle anything and leave it up to\n+        // us to demangle these symbols later.\n+        self.cmd.arg(\"--no-demangle\");\n+\n         ::std::mem::replace(&mut self.cmd, Command::new(\"\"))\n     }\n "}, {"sha": "21a0c9ebc285d794a298e97717abad8d6135fa87", "filename": "src/llvm", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": null, "raw_url": null, "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fllvm?ref=6bfb46e4ac9a2704f06de1a2ff7a4612cd70c8cb", "patch": "@@ -1 +1 @@\n-Subproject commit 7051ead40a5f825878b59bf08d4e768be9e99a4a\n+Subproject commit 21a0c9ebc285d794a298e97717abad8d6135fa87"}, {"sha": "06de0d6509babcf98bc18cb984ef8adcb4056a71", "filename": "src/rustllvm/PassWrapper.cpp", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/6bfb46e4ac9a2704f06de1a2ff7a4612cd70c8cb/src%2Frustllvm%2FPassWrapper.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/6bfb46e4ac9a2704f06de1a2ff7a4612cd70c8cb/src%2Frustllvm%2FPassWrapper.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustllvm%2FPassWrapper.cpp?ref=6bfb46e4ac9a2704f06de1a2ff7a4612cd70c8cb", "patch": "@@ -922,7 +922,11 @@ LLVMRustCreateThinLTOData(LLVMRustThinLTOModule *modules,\n                               GlobalValue::LinkageTypes NewLinkage) {\n     ResolvedODR[ModuleIdentifier][GUID] = NewLinkage;\n   };\n+#if LLVM_VERSION_GE(8, 0)\n+  thinLTOResolvePrevailingInIndex(Ret->Index, isPrevailing, recordNewLinkage);\n+#else\n   thinLTOResolveWeakForLinkerInIndex(Ret->Index, isPrevailing, recordNewLinkage);\n+#endif\n \n   // Here we calculate an `ExportedGUIDs` set for use in the `isExported`\n   // callback below. This callback below will dictate the linkage for all\n@@ -977,7 +981,11 @@ extern \"C\" bool\n LLVMRustPrepareThinLTOResolveWeak(const LLVMRustThinLTOData *Data, LLVMModuleRef M) {\n   Module &Mod = *unwrap(M);\n   const auto &DefinedGlobals = Data->ModuleToDefinedGVSummaries.lookup(Mod.getModuleIdentifier());\n+#if LLVM_VERSION_GE(8, 0)\n+  thinLTOResolvePrevailingInModule(Mod, DefinedGlobals);\n+#else\n   thinLTOResolveWeakForLinkerModule(Mod, DefinedGlobals);\n+#endif\n   return true;\n }\n "}, {"sha": "b6e07942f8667662cd0e894812141700e41cdc53", "filename": "src/rustllvm/RustWrapper.cpp", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/6bfb46e4ac9a2704f06de1a2ff7a4612cd70c8cb/src%2Frustllvm%2FRustWrapper.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/6bfb46e4ac9a2704f06de1a2ff7a4612cd70c8cb/src%2Frustllvm%2FRustWrapper.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustllvm%2FRustWrapper.cpp?ref=6bfb46e4ac9a2704f06de1a2ff7a4612cd70c8cb", "patch": "@@ -708,7 +708,11 @@ extern \"C\" LLVMMetadataRef LLVMRustDIBuilderCreateStaticVariable(\n   llvm::DIGlobalVariableExpression *VarExpr = Builder->createGlobalVariableExpression(\n       unwrapDI<DIDescriptor>(Context), Name, LinkageName,\n       unwrapDI<DIFile>(File), LineNo, unwrapDI<DIType>(Ty), IsLocalToUnit,\n-      InitExpr, unwrapDIPtr<MDNode>(Decl), AlignInBits);\n+      InitExpr, unwrapDIPtr<MDNode>(Decl),\n+#if LLVM_VERSION_GE(8, 0)\n+      /* templateParams */ nullptr,\n+#endif\n+      AlignInBits);\n \n   InitVal->setMetadata(\"dbg\", VarExpr);\n "}, {"sha": "1928c5eeb613a4c6d232fc47ae91914bbfd92a79", "filename": "src/tools/lld", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": null, "raw_url": null, "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Flld?ref=6bfb46e4ac9a2704f06de1a2ff7a4612cd70c8cb", "patch": "@@ -1 +1 @@\n-Subproject commit 2a9b88b8b419d094fb2185c0ca31c28d31bdca00\n+Subproject commit 1928c5eeb613a4c6d232fc47ae91914bbfd92a79"}]}