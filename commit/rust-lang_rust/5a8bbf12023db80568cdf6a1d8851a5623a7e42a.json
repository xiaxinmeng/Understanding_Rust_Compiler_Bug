{"sha": "5a8bbf12023db80568cdf6a1d8851a5623a7e42a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjVhOGJiZjEyMDIzZGI4MDU2OGNkZjZhMWQ4ODUxYTU2MjNhN2U0MmE=", "commit": {"author": {"name": "Jeffrey Seyfried", "email": "jeffrey.seyfried@gmail.com", "date": "2016-04-13T00:13:44Z"}, "committer": {"name": "Jeffrey Seyfried", "email": "jeffrey.seyfried@gmail.com", "date": "2016-04-13T00:24:21Z"}, "message": "Fixes #32922, a macro hygiene bug", "tree": {"sha": "465f56a4fdf37e5803d6e0096f75cafa8c5f79ac", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/465f56a4fdf37e5803d6e0096f75cafa8c5f79ac"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5a8bbf12023db80568cdf6a1d8851a5623a7e42a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5a8bbf12023db80568cdf6a1d8851a5623a7e42a", "html_url": "https://github.com/rust-lang/rust/commit/5a8bbf12023db80568cdf6a1d8851a5623a7e42a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5a8bbf12023db80568cdf6a1d8851a5623a7e42a/comments", "author": {"login": "jseyfried", "id": 8652869, "node_id": "MDQ6VXNlcjg2NTI4Njk=", "avatar_url": "https://avatars.githubusercontent.com/u/8652869?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jseyfried", "html_url": "https://github.com/jseyfried", "followers_url": "https://api.github.com/users/jseyfried/followers", "following_url": "https://api.github.com/users/jseyfried/following{/other_user}", "gists_url": "https://api.github.com/users/jseyfried/gists{/gist_id}", "starred_url": "https://api.github.com/users/jseyfried/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jseyfried/subscriptions", "organizations_url": "https://api.github.com/users/jseyfried/orgs", "repos_url": "https://api.github.com/users/jseyfried/repos", "events_url": "https://api.github.com/users/jseyfried/events{/privacy}", "received_events_url": "https://api.github.com/users/jseyfried/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jseyfried", "id": 8652869, "node_id": "MDQ6VXNlcjg2NTI4Njk=", "avatar_url": "https://avatars.githubusercontent.com/u/8652869?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jseyfried", "html_url": "https://github.com/jseyfried", "followers_url": "https://api.github.com/users/jseyfried/followers", "following_url": "https://api.github.com/users/jseyfried/following{/other_user}", "gists_url": "https://api.github.com/users/jseyfried/gists{/gist_id}", "starred_url": "https://api.github.com/users/jseyfried/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jseyfried/subscriptions", "organizations_url": "https://api.github.com/users/jseyfried/orgs", "repos_url": "https://api.github.com/users/jseyfried/repos", "events_url": "https://api.github.com/users/jseyfried/events{/privacy}", "received_events_url": "https://api.github.com/users/jseyfried/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "23a7d30fc22ec27839433e1b457dcea7200d7e30", "url": "https://api.github.com/repos/rust-lang/rust/commits/23a7d30fc22ec27839433e1b457dcea7200d7e30", "html_url": "https://github.com/rust-lang/rust/commit/23a7d30fc22ec27839433e1b457dcea7200d7e30"}], "stats": {"total": 17, "additions": 9, "deletions": 8}, "files": [{"sha": "cd7b0fcfb004450cb04df6642fdddea5eebdf22e", "filename": "src/libsyntax/ext/expand.rs", "status": "modified", "additions": 9, "deletions": 8, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/5a8bbf12023db80568cdf6a1d8851a5623a7e42a/src%2Flibsyntax%2Fext%2Fexpand.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5a8bbf12023db80568cdf6a1d8851a5623a7e42a/src%2Flibsyntax%2Fext%2Fexpand.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Fexpand.rs?ref=5a8bbf12023db80568cdf6a1d8851a5623a7e42a", "patch": "@@ -504,6 +504,13 @@ pub fn expand_item_mac(it: P<ast::Item>,\n \n /// Expand a stmt\n fn expand_stmt(stmt: Stmt, fld: &mut MacroExpander) -> SmallVector<Stmt> {\n+    // perform all pending renames\n+    let stmt = {\n+        let pending_renames = &mut fld.cx.syntax_env.info().pending_renames;\n+        let mut rename_fld = IdentRenamer{renames:pending_renames};\n+        rename_fld.fold_stmt(stmt).expect_one(\"rename_fold didn't return one value\")\n+    };\n+\n     let (mac, style, attrs) = match stmt.node {\n         StmtKind::Mac(mac, style, attrs) => (mac, style, attrs),\n         _ => return expand_non_macro_stmt(stmt, fld)\n@@ -717,14 +724,8 @@ pub fn expand_block(blk: P<Block>, fld: &mut MacroExpander) -> P<Block> {\n pub fn expand_block_elts(b: P<Block>, fld: &mut MacroExpander) -> P<Block> {\n     b.map(|Block {id, stmts, expr, rules, span}| {\n         let new_stmts = stmts.into_iter().flat_map(|x| {\n-            // perform all pending renames\n-            let renamed_stmt = {\n-                let pending_renames = &mut fld.cx.syntax_env.info().pending_renames;\n-                let mut rename_fld = IdentRenamer{renames:pending_renames};\n-                rename_fld.fold_stmt(x).expect_one(\"rename_fold didn't return one value\")\n-            };\n-            // expand macros in the statement\n-            fld.fold_stmt(renamed_stmt).into_iter()\n+            // perform pending renames and expand macros in the statement\n+            fld.fold_stmt(x).into_iter()\n         }).collect();\n         let new_expr = expr.map(|x| {\n             let expr = {"}]}