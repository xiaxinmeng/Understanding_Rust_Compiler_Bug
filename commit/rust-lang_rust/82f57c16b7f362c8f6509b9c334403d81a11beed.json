{"sha": "82f57c16b7f362c8f6509b9c334403d81a11beed", "node_id": "C_kwDOAAsO6NoAKDgyZjU3YzE2YjdmMzYyYzhmNjUwOWI5YzMzNDQwM2Q4MWExMWJlZWQ", "commit": {"author": {"name": "Kyle Matsuda", "email": "kyle.yoshio.matsuda@gmail.com", "date": "2023-04-14T15:59:03Z"}, "committer": {"name": "Kyle Matsuda", "email": "kyle.yoshio.matsuda@gmail.com", "date": "2023-05-07T04:32:39Z"}, "message": "use EarlyBinder in tcx.(try_)subst_mir_and_normalize_erasing_regions", "tree": {"sha": "883af19027f91b9a39b50361b483bed537ee99ca", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/883af19027f91b9a39b50361b483bed537ee99ca"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/82f57c16b7f362c8f6509b9c334403d81a11beed", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/82f57c16b7f362c8f6509b9c334403d81a11beed", "html_url": "https://github.com/rust-lang/rust/commit/82f57c16b7f362c8f6509b9c334403d81a11beed", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/82f57c16b7f362c8f6509b9c334403d81a11beed/comments", "author": {"login": "kylematsuda", "id": 17287790, "node_id": "MDQ6VXNlcjE3Mjg3Nzkw", "avatar_url": "https://avatars.githubusercontent.com/u/17287790?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kylematsuda", "html_url": "https://github.com/kylematsuda", "followers_url": "https://api.github.com/users/kylematsuda/followers", "following_url": "https://api.github.com/users/kylematsuda/following{/other_user}", "gists_url": "https://api.github.com/users/kylematsuda/gists{/gist_id}", "starred_url": "https://api.github.com/users/kylematsuda/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kylematsuda/subscriptions", "organizations_url": "https://api.github.com/users/kylematsuda/orgs", "repos_url": "https://api.github.com/users/kylematsuda/repos", "events_url": "https://api.github.com/users/kylematsuda/events{/privacy}", "received_events_url": "https://api.github.com/users/kylematsuda/received_events", "type": "User", "site_admin": false}, "committer": {"login": "kylematsuda", "id": 17287790, "node_id": "MDQ6VXNlcjE3Mjg3Nzkw", "avatar_url": "https://avatars.githubusercontent.com/u/17287790?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kylematsuda", "html_url": "https://github.com/kylematsuda", "followers_url": "https://api.github.com/users/kylematsuda/followers", "following_url": "https://api.github.com/users/kylematsuda/following{/other_user}", "gists_url": "https://api.github.com/users/kylematsuda/gists{/gist_id}", "starred_url": "https://api.github.com/users/kylematsuda/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kylematsuda/subscriptions", "organizations_url": "https://api.github.com/users/kylematsuda/orgs", "repos_url": "https://api.github.com/users/kylematsuda/repos", "events_url": "https://api.github.com/users/kylematsuda/events{/privacy}", "received_events_url": "https://api.github.com/users/kylematsuda/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e5d10cdbc36d80dcfa1c25ce6bd64b213674fe74", "url": "https://api.github.com/repos/rust-lang/rust/commits/e5d10cdbc36d80dcfa1c25ce6bd64b213674fe74", "html_url": "https://github.com/rust-lang/rust/commit/e5d10cdbc36d80dcfa1c25ce6bd64b213674fe74"}], "stats": {"total": 32, "additions": 20, "deletions": 12}, "files": [{"sha": "ccb3a0c4f27e4ef183f66396be5ad5c049add808", "filename": "compiler/rustc_codegen_cranelift/src/common.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/82f57c16b7f362c8f6509b9c334403d81a11beed/compiler%2Frustc_codegen_cranelift%2Fsrc%2Fcommon.rs", "raw_url": "https://github.com/rust-lang/rust/raw/82f57c16b7f362c8f6509b9c334403d81a11beed/compiler%2Frustc_codegen_cranelift%2Fsrc%2Fcommon.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_cranelift%2Fsrc%2Fcommon.rs?ref=82f57c16b7f362c8f6509b9c334403d81a11beed", "patch": "@@ -361,7 +361,7 @@ impl<'tcx> FunctionCx<'_, '_, 'tcx> {\n         self.instance.subst_mir_and_normalize_erasing_regions(\n             self.tcx,\n             ty::ParamEnv::reveal_all(),\n-            value,\n+            ty::EarlyBinder(value),\n         )\n     }\n "}, {"sha": "1204c99e533e277880039c5c40fbfb407e68ee69", "filename": "compiler/rustc_codegen_ssa/src/mir/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/82f57c16b7f362c8f6509b9c334403d81a11beed/compiler%2Frustc_codegen_ssa%2Fsrc%2Fmir%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/82f57c16b7f362c8f6509b9c334403d81a11beed/compiler%2Frustc_codegen_ssa%2Fsrc%2Fmir%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_ssa%2Fsrc%2Fmir%2Fmod.rs?ref=82f57c16b7f362c8f6509b9c334403d81a11beed", "patch": "@@ -111,7 +111,7 @@ impl<'a, 'tcx, Bx: BuilderMethods<'a, 'tcx>> FunctionCx<'a, 'tcx, Bx> {\n         self.instance.subst_mir_and_normalize_erasing_regions(\n             self.cx.tcx(),\n             ty::ParamEnv::reveal_all(),\n-            value,\n+            ty::EarlyBinder(value),\n         )\n     }\n }"}, {"sha": "b2197a0aabbfe0d8dc4275e6fab1228195d59a65", "filename": "compiler/rustc_const_eval/src/interpret/eval_context.rs", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/82f57c16b7f362c8f6509b9c334403d81a11beed/compiler%2Frustc_const_eval%2Fsrc%2Finterpret%2Feval_context.rs", "raw_url": "https://github.com/rust-lang/rust/raw/82f57c16b7f362c8f6509b9c334403d81a11beed/compiler%2Frustc_const_eval%2Fsrc%2Finterpret%2Feval_context.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_const_eval%2Fsrc%2Finterpret%2Feval_context.rs?ref=82f57c16b7f362c8f6509b9c334403d81a11beed", "patch": "@@ -495,7 +495,11 @@ impl<'mir, 'tcx: 'mir, M: Machine<'mir, 'tcx>> InterpCx<'mir, 'tcx, M> {\n     ) -> Result<T, InterpError<'tcx>> {\n         frame\n             .instance\n-            .try_subst_mir_and_normalize_erasing_regions(*self.tcx, self.param_env, value)\n+            .try_subst_mir_and_normalize_erasing_regions(\n+                *self.tcx,\n+                self.param_env,\n+                ty::EarlyBinder(value),\n+            )\n             .map_err(|_| err_inval!(TooGeneric))\n     }\n "}, {"sha": "808f46bb2bb7d2a41724183f8f34d905814a490c", "filename": "compiler/rustc_middle/src/ty/instance.rs", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/82f57c16b7f362c8f6509b9c334403d81a11beed/compiler%2Frustc_middle%2Fsrc%2Fty%2Finstance.rs", "raw_url": "https://github.com/rust-lang/rust/raw/82f57c16b7f362c8f6509b9c334403d81a11beed/compiler%2Frustc_middle%2Fsrc%2Fty%2Finstance.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fty%2Finstance.rs?ref=82f57c16b7f362c8f6509b9c334403d81a11beed", "patch": "@@ -594,15 +594,15 @@ impl<'tcx> Instance<'tcx> {\n         &self,\n         tcx: TyCtxt<'tcx>,\n         param_env: ty::ParamEnv<'tcx>,\n-        v: T,\n+        v: EarlyBinder<T>,\n     ) -> T\n     where\n         T: TypeFoldable<TyCtxt<'tcx>> + Clone,\n     {\n         if let Some(substs) = self.substs_for_mir_body() {\n-            tcx.subst_and_normalize_erasing_regions(substs, param_env, ty::EarlyBinder(v))\n+            tcx.subst_and_normalize_erasing_regions(substs, param_env, v)\n         } else {\n-            tcx.normalize_erasing_regions(param_env, v)\n+            tcx.normalize_erasing_regions(param_env, v.subst_identity())\n         }\n     }\n \n@@ -611,15 +611,15 @@ impl<'tcx> Instance<'tcx> {\n         &self,\n         tcx: TyCtxt<'tcx>,\n         param_env: ty::ParamEnv<'tcx>,\n-        v: T,\n+        v: EarlyBinder<T>,\n     ) -> Result<T, NormalizationError<'tcx>>\n     where\n         T: TypeFoldable<TyCtxt<'tcx>> + Clone,\n     {\n         if let Some(substs) = self.substs_for_mir_body() {\n-            tcx.try_subst_and_normalize_erasing_regions(substs, param_env, ty::EarlyBinder(v))\n+            tcx.try_subst_and_normalize_erasing_regions(substs, param_env, v)\n         } else {\n-            tcx.try_normalize_erasing_regions(param_env, v)\n+            tcx.try_normalize_erasing_regions(param_env, v.subst_identity())\n         }\n     }\n "}, {"sha": "95978946c4d9f2b90fb550f357d5e972f935166a", "filename": "compiler/rustc_mir_transform/src/inline.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/82f57c16b7f362c8f6509b9c334403d81a11beed/compiler%2Frustc_mir_transform%2Fsrc%2Finline.rs", "raw_url": "https://github.com/rust-lang/rust/raw/82f57c16b7f362c8f6509b9c334403d81a11beed/compiler%2Frustc_mir_transform%2Fsrc%2Finline.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir_transform%2Fsrc%2Finline.rs?ref=82f57c16b7f362c8f6509b9c334403d81a11beed", "patch": "@@ -180,7 +180,7 @@ impl<'tcx> Inliner<'tcx> {\n         let Ok(callee_body) = callsite.callee.try_subst_mir_and_normalize_erasing_regions(\n             self.tcx,\n             self.param_env,\n-            callee_body.clone(),\n+            ty::EarlyBinder(callee_body.clone()),\n         ) else {\n             return Err(\"failed to normalize callee body\");\n         };"}, {"sha": "1ccf06f6153fc369031864834d55c577dccd2f51", "filename": "compiler/rustc_mir_transform/src/inline/cycle.rs", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/82f57c16b7f362c8f6509b9c334403d81a11beed/compiler%2Frustc_mir_transform%2Fsrc%2Finline%2Fcycle.rs", "raw_url": "https://github.com/rust-lang/rust/raw/82f57c16b7f362c8f6509b9c334403d81a11beed/compiler%2Frustc_mir_transform%2Fsrc%2Finline%2Fcycle.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir_transform%2Fsrc%2Finline%2Fcycle.rs?ref=82f57c16b7f362c8f6509b9c334403d81a11beed", "patch": "@@ -44,7 +44,11 @@ pub(crate) fn mir_callgraph_reachable<'tcx>(\n     ) -> bool {\n         trace!(%caller);\n         for &(callee, substs) in tcx.mir_inliner_callees(caller.def) {\n-            let Ok(substs) = caller.try_subst_mir_and_normalize_erasing_regions(tcx, param_env, substs) else {\n+            let Ok(substs) = caller.try_subst_mir_and_normalize_erasing_regions(\n+                tcx,\n+                param_env,\n+                ty::EarlyBinder(substs),\n+            ) else {\n                 trace!(?caller, ?param_env, ?substs, \"cannot normalize, skipping\");\n                 continue;\n             };"}, {"sha": "55c937b305a49d11e33b2dbbd044941ff2853623", "filename": "compiler/rustc_monomorphize/src/collector.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/82f57c16b7f362c8f6509b9c334403d81a11beed/compiler%2Frustc_monomorphize%2Fsrc%2Fcollector.rs", "raw_url": "https://github.com/rust-lang/rust/raw/82f57c16b7f362c8f6509b9c334403d81a11beed/compiler%2Frustc_monomorphize%2Fsrc%2Fcollector.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_monomorphize%2Fsrc%2Fcollector.rs?ref=82f57c16b7f362c8f6509b9c334403d81a11beed", "patch": "@@ -677,7 +677,7 @@ impl<'a, 'tcx> MirNeighborCollector<'a, 'tcx> {\n         self.instance.subst_mir_and_normalize_erasing_regions(\n             self.tcx,\n             ty::ParamEnv::reveal_all(),\n-            value,\n+            ty::EarlyBinder(value),\n         )\n     }\n }"}]}