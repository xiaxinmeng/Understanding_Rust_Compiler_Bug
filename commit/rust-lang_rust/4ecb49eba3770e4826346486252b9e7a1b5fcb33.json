{"sha": "4ecb49eba3770e4826346486252b9e7a1b5fcb33", "node_id": "C_kwDOAAsO6NoAKDRlY2I0OWViYTM3NzBlNDgyNjM0NjQ4NjI1MmI5ZTdhMWI1ZmNiMzM", "commit": {"author": {"name": "Matthew Jasper", "email": "mjjasper1@gmail.com", "date": "2021-10-21T21:06:40Z"}, "committer": {"name": "Matthew Jasper", "email": "mjjasper1@gmail.com", "date": "2021-10-21T21:07:03Z"}, "message": "Handle cross-crate module `ExpnId`s consistently\n\n- Always use the ExpnId serialized to `tables`\n- Use the Id for traits and enums from other crates in resolution.", "tree": {"sha": "87a382bfc6660251f7bc7c7525581371a8cb7173", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/87a382bfc6660251f7bc7c7525581371a8cb7173"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4ecb49eba3770e4826346486252b9e7a1b5fcb33", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4ecb49eba3770e4826346486252b9e7a1b5fcb33", "html_url": "https://github.com/rust-lang/rust/commit/4ecb49eba3770e4826346486252b9e7a1b5fcb33", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4ecb49eba3770e4826346486252b9e7a1b5fcb33/comments", "author": {"login": "matthewjasper", "id": 20113453, "node_id": "MDQ6VXNlcjIwMTEzNDUz", "avatar_url": "https://avatars.githubusercontent.com/u/20113453?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthewjasper", "html_url": "https://github.com/matthewjasper", "followers_url": "https://api.github.com/users/matthewjasper/followers", "following_url": "https://api.github.com/users/matthewjasper/following{/other_user}", "gists_url": "https://api.github.com/users/matthewjasper/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthewjasper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthewjasper/subscriptions", "organizations_url": "https://api.github.com/users/matthewjasper/orgs", "repos_url": "https://api.github.com/users/matthewjasper/repos", "events_url": "https://api.github.com/users/matthewjasper/events{/privacy}", "received_events_url": "https://api.github.com/users/matthewjasper/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matthewjasper", "id": 20113453, "node_id": "MDQ6VXNlcjIwMTEzNDUz", "avatar_url": "https://avatars.githubusercontent.com/u/20113453?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthewjasper", "html_url": "https://github.com/matthewjasper", "followers_url": "https://api.github.com/users/matthewjasper/followers", "following_url": "https://api.github.com/users/matthewjasper/following{/other_user}", "gists_url": "https://api.github.com/users/matthewjasper/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthewjasper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthewjasper/subscriptions", "organizations_url": "https://api.github.com/users/matthewjasper/orgs", "repos_url": "https://api.github.com/users/matthewjasper/repos", "events_url": "https://api.github.com/users/matthewjasper/events{/privacy}", "received_events_url": "https://api.github.com/users/matthewjasper/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "547a6ffee0cf4da9929a9e3d49546dc87d607735", "url": "https://api.github.com/repos/rust-lang/rust/commits/547a6ffee0cf4da9929a9e3d49546dc87d607735", "html_url": "https://github.com/rust-lang/rust/commit/547a6ffee0cf4da9929a9e3d49546dc87d607735"}], "stats": {"total": 25, "additions": 13, "deletions": 12}, "files": [{"sha": "1e2b4aaef805f41f0939a542d33014a99d2ae533", "filename": "compiler/rustc_metadata/src/rmeta/decoder.rs", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/4ecb49eba3770e4826346486252b9e7a1b5fcb33/compiler%2Frustc_metadata%2Fsrc%2Frmeta%2Fdecoder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4ecb49eba3770e4826346486252b9e7a1b5fcb33/compiler%2Frustc_metadata%2Fsrc%2Frmeta%2Fdecoder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_metadata%2Fsrc%2Frmeta%2Fdecoder.rs?ref=4ecb49eba3770e4826346486252b9e7a1b5fcb33", "patch": "@@ -1219,10 +1219,11 @@ impl<'a, 'tcx> CrateMetadataRef<'a> {\n     }\n \n     fn module_expansion(&self, id: DefIndex, sess: &Session) -> ExpnId {\n-        if let EntryKind::Mod(m) = self.kind(id) {\n-            m.decode((self, sess)).expansion\n-        } else {\n-            panic!(\"Expected module, found {:?}\", self.local_def_id(id))\n+        match self.kind(id) {\n+            EntryKind::Mod(_) | EntryKind::Enum(_) | EntryKind::Trait(_) => {\n+                self.get_expn_that_defined(id, sess)\n+            }\n+            _ => panic!(\"Expected module, found {:?}\", self.local_def_id(id)),\n         }\n     }\n "}, {"sha": "08d9db381cf069b8b23241e174bf976385a80c32", "filename": "compiler/rustc_metadata/src/rmeta/encoder.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/4ecb49eba3770e4826346486252b9e7a1b5fcb33/compiler%2Frustc_metadata%2Fsrc%2Frmeta%2Fencoder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4ecb49eba3770e4826346486252b9e7a1b5fcb33/compiler%2Frustc_metadata%2Fsrc%2Frmeta%2Fencoder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_metadata%2Fsrc%2Frmeta%2Fencoder.rs?ref=4ecb49eba3770e4826346486252b9e7a1b5fcb33", "patch": "@@ -1086,11 +1086,13 @@ impl EncodeContext<'a, 'tcx> {\n             Lazy::empty()\n         };\n \n-        let data = ModData { reexports, expansion: tcx.expn_that_defined(local_def_id) };\n+        let data = ModData { reexports };\n \n         record!(self.tables.kind[def_id] <- EntryKind::Mod(self.lazy(data)));\n         if self.is_proc_macro {\n             record!(self.tables.children[def_id] <- &[]);\n+            // Encode this here because we don't do it in encode_def_ids.\n+            record!(self.tables.expn_that_defined[def_id] <- tcx.expn_that_defined(local_def_id));\n         } else {\n             record!(self.tables.children[def_id] <- md.item_ids.iter().map(|item_id| {\n                 item_id.def_id.local_def_index"}, {"sha": "40c497044ded11b0ff48c7d2de99bfb44d108a03", "filename": "compiler/rustc_metadata/src/rmeta/mod.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/4ecb49eba3770e4826346486252b9e7a1b5fcb33/compiler%2Frustc_metadata%2Fsrc%2Frmeta%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4ecb49eba3770e4826346486252b9e7a1b5fcb33/compiler%2Frustc_metadata%2Fsrc%2Frmeta%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_metadata%2Fsrc%2Frmeta%2Fmod.rs?ref=4ecb49eba3770e4826346486252b9e7a1b5fcb33", "patch": "@@ -367,7 +367,6 @@ struct RenderedConst(String);\n #[derive(MetadataEncodable, MetadataDecodable)]\n struct ModData {\n     reexports: Lazy<[Export]>,\n-    expansion: ExpnId,\n }\n \n #[derive(MetadataEncodable, MetadataDecodable)]"}, {"sha": "c215de5560ad44ad79378a55d9937c00bb4d7148", "filename": "compiler/rustc_resolve/src/build_reduced_graph.rs", "status": "modified", "additions": 1, "deletions": 6, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/4ecb49eba3770e4826346486252b9e7a1b5fcb33/compiler%2Frustc_resolve%2Fsrc%2Fbuild_reduced_graph.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4ecb49eba3770e4826346486252b9e7a1b5fcb33/compiler%2Frustc_resolve%2Fsrc%2Fbuild_reduced_graph.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_resolve%2Fsrc%2Fbuild_reduced_graph.rs?ref=4ecb49eba3770e4826346486252b9e7a1b5fcb33", "patch": "@@ -145,12 +145,7 @@ impl<'a> Resolver<'a> {\n                     } else {\n                         def_key.disambiguated_data.data.get_opt_name().expect(\"module without name\")\n                     };\n-                    let expn_id = if def_kind == DefKind::Mod {\n-                        self.cstore().module_expansion_untracked(def_id, &self.session)\n-                    } else {\n-                        // FIXME: Parent expansions for enums and traits are not kept in metadata.\n-                        ExpnId::root()\n-                    };\n+                    let expn_id = self.cstore().module_expansion_untracked(def_id, &self.session);\n \n                     Some(self.new_module(\n                         parent,"}, {"sha": "5d04fe1e3de5f5cd08f9ead0fb563fdfd8d05eca", "filename": "src/test/ui/proc-macro/meta-macro-hygiene.stdout", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4ecb49eba3770e4826346486252b9e7a1b5fcb33/src%2Ftest%2Fui%2Fproc-macro%2Fmeta-macro-hygiene.stdout", "raw_url": "https://github.com/rust-lang/rust/raw/4ecb49eba3770e4826346486252b9e7a1b5fcb33/src%2Ftest%2Fui%2Fproc-macro%2Fmeta-macro-hygiene.stdout", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fproc-macro%2Fmeta-macro-hygiene.stdout?ref=4ecb49eba3770e4826346486252b9e7a1b5fcb33", "patch": "@@ -49,6 +49,8 @@ crate0::{{expn1}}: parent: crate0::{{expn0}}, call_site_ctxt: #0, def_site_ctxt:\n crate0::{{expn2}}: parent: crate0::{{expn0}}, call_site_ctxt: #0, def_site_ctxt: #0, kind: Macro(Bang, \"produce_it\")\n crate0::{{expn3}}: parent: crate0::{{expn2}}, call_site_ctxt: #4, def_site_ctxt: #0, kind: Macro(Bang, \"meta_macro::print_def_site\")\n crate0::{{expn4}}: parent: crate0::{{expn3}}, call_site_ctxt: #5, def_site_ctxt: #0, kind: Macro(Bang, \"$crate::dummy\")\n+crate1::{{expnNNN}}: parent: crate0::{{expn0}}, call_site_ctxt: #0, def_site_ctxt: #0, kind: Macro(Attr, \"derive\")\n+crate1::{{expnNNN}}: parent: crate0::{{expn0}}, call_site_ctxt: #0, def_site_ctxt: #0, kind: Macro(Attr, \"derive\")\n crate1::{{expnNNN}}: parent: crate0::{{expn0}}, call_site_ctxt: #0, def_site_ctxt: #0, kind: Macro(Bang, \"include\")\n crate2::{{expn1}}: parent: crate0::{{expn0}}, call_site_ctxt: #0, def_site_ctxt: #0, kind: AstPass(StdImports)\n "}, {"sha": "709b2a2169e08d8f9033ba28e706f17f06756acc", "filename": "src/test/ui/proc-macro/nonterminal-token-hygiene.stdout", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4ecb49eba3770e4826346486252b9e7a1b5fcb33/src%2Ftest%2Fui%2Fproc-macro%2Fnonterminal-token-hygiene.stdout", "raw_url": "https://github.com/rust-lang/rust/raw/4ecb49eba3770e4826346486252b9e7a1b5fcb33/src%2Ftest%2Fui%2Fproc-macro%2Fnonterminal-token-hygiene.stdout", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fproc-macro%2Fnonterminal-token-hygiene.stdout?ref=4ecb49eba3770e4826346486252b9e7a1b5fcb33", "patch": "@@ -73,6 +73,8 @@ crate0::{{expn1}}: parent: crate0::{{expn0}}, call_site_ctxt: #0, def_site_ctxt:\n crate0::{{expn2}}: parent: crate0::{{expn0}}, call_site_ctxt: #0, def_site_ctxt: #0, kind: Macro(Bang, \"outer\")\n crate0::{{expn3}}: parent: crate0::{{expn2}}, call_site_ctxt: #4, def_site_ctxt: #4, kind: Macro(Bang, \"inner\")\n crate0::{{expn4}}: parent: crate0::{{expn3}}, call_site_ctxt: #6, def_site_ctxt: #0, kind: Macro(Bang, \"print_bang\")\n+crate1::{{expnNNN}}: parent: crate0::{{expn0}}, call_site_ctxt: #0, def_site_ctxt: #0, kind: Macro(Attr, \"derive\")\n+crate1::{{expnNNN}}: parent: crate0::{{expn0}}, call_site_ctxt: #0, def_site_ctxt: #0, kind: Macro(Attr, \"derive\")\n crate1::{{expnNNN}}: parent: crate0::{{expn0}}, call_site_ctxt: #0, def_site_ctxt: #0, kind: Macro(Bang, \"include\")\n crate2::{{expn1}}: parent: crate0::{{expn0}}, call_site_ctxt: #0, def_site_ctxt: #0, kind: AstPass(StdImports)\n "}]}