{"sha": "ae929427582a83ba06a03093a76dea31b37a88b7", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFlOTI5NDI3NTgyYTgzYmEwNmEwMzA5M2E3NmRlYTMxYjM3YTg4Yjc=", "commit": {"author": {"name": "Brian Koropoff", "email": "bkoropoff@gmail.com", "date": "2014-11-02T01:49:48Z"}, "committer": {"name": "Brian Koropoff", "email": "bkoropoff@gmail.com", "date": "2014-11-02T01:49:48Z"}, "message": "Fix def ID mapping for method defs\n\nThis prevents def IDs with the wrong crate ID from showing up\nwhen using UFCS.  Closes #18501", "tree": {"sha": "e375ba92e3033821e038b6e202e254f48869ffae", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e375ba92e3033821e038b6e202e254f48869ffae"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ae929427582a83ba06a03093a76dea31b37a88b7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ae929427582a83ba06a03093a76dea31b37a88b7", "html_url": "https://github.com/rust-lang/rust/commit/ae929427582a83ba06a03093a76dea31b37a88b7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ae929427582a83ba06a03093a76dea31b37a88b7/comments", "author": {"login": "bkoropoff", "id": 2101303, "node_id": "MDQ6VXNlcjIxMDEzMDM=", "avatar_url": "https://avatars.githubusercontent.com/u/2101303?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bkoropoff", "html_url": "https://github.com/bkoropoff", "followers_url": "https://api.github.com/users/bkoropoff/followers", "following_url": "https://api.github.com/users/bkoropoff/following{/other_user}", "gists_url": "https://api.github.com/users/bkoropoff/gists{/gist_id}", "starred_url": "https://api.github.com/users/bkoropoff/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bkoropoff/subscriptions", "organizations_url": "https://api.github.com/users/bkoropoff/orgs", "repos_url": "https://api.github.com/users/bkoropoff/repos", "events_url": "https://api.github.com/users/bkoropoff/events{/privacy}", "received_events_url": "https://api.github.com/users/bkoropoff/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bkoropoff", "id": 2101303, "node_id": "MDQ6VXNlcjIxMDEzMDM=", "avatar_url": "https://avatars.githubusercontent.com/u/2101303?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bkoropoff", "html_url": "https://github.com/bkoropoff", "followers_url": "https://api.github.com/users/bkoropoff/followers", "following_url": "https://api.github.com/users/bkoropoff/following{/other_user}", "gists_url": "https://api.github.com/users/bkoropoff/gists{/gist_id}", "starred_url": "https://api.github.com/users/bkoropoff/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bkoropoff/subscriptions", "organizations_url": "https://api.github.com/users/bkoropoff/orgs", "repos_url": "https://api.github.com/users/bkoropoff/repos", "events_url": "https://api.github.com/users/bkoropoff/events{/privacy}", "received_events_url": "https://api.github.com/users/bkoropoff/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "39f90aead4ad52de1d2c50418da4d66320233d8e", "url": "https://api.github.com/repos/rust-lang/rust/commits/39f90aead4ad52de1d2c50418da4d66320233d8e", "html_url": "https://github.com/rust-lang/rust/commit/39f90aead4ad52de1d2c50418da4d66320233d8e"}], "stats": {"total": 25, "additions": 14, "deletions": 11}, "files": [{"sha": "988f7d46f5f95c10a9253ebbef10061fbc559611", "filename": "src/librustc/middle/astencode.rs", "status": "modified", "additions": 5, "deletions": 11, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/ae929427582a83ba06a03093a76dea31b37a88b7/src%2Flibrustc%2Fmiddle%2Fastencode.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ae929427582a83ba06a03093a76dea31b37a88b7/src%2Flibrustc%2Fmiddle%2Fastencode.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fastencode.rs?ref=ae929427582a83ba06a03093a76dea31b37a88b7", "patch": "@@ -441,19 +441,13 @@ impl tr for def::Def {\n     fn tr(&self, dcx: &DecodeContext) -> def::Def {\n         match *self {\n           def::DefFn(did, is_ctor) => def::DefFn(did.tr(dcx), is_ctor),\n-          def::DefStaticMethod(did, wrapped_did2) => {\n-            def::DefStaticMethod(did.tr(dcx),\n-                                   match wrapped_did2 {\n-                                    def::FromTrait(did2) => {\n-                                        def::FromTrait(did2.tr(dcx))\n-                                    }\n-                                    def::FromImpl(did2) => {\n-                                        def::FromImpl(did2.tr(dcx))\n-                                    }\n-                                   })\n+          def::DefStaticMethod(did, p) => {\n+            def::DefStaticMethod(did.tr(dcx), p.map(|did2| did2.tr(dcx)))\n           }\n           def::DefMethod(did0, did1, p) => {\n-            def::DefMethod(did0.tr(dcx), did1.map(|did1| did1.tr(dcx)), p)\n+            def::DefMethod(did0.tr(dcx),\n+                           did1.map(|did1| did1.tr(dcx)),\n+                           p.map(|did2| did2.tr(dcx)))\n           }\n           def::DefSelfTy(nid) => { def::DefSelfTy(dcx.tr_id(nid)) }\n           def::DefMod(did) => { def::DefMod(did.tr(dcx)) }"}, {"sha": "160bb2238e7dbd64850c0e8fd6621d88843d55c3", "filename": "src/librustc/middle/def.rs", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/ae929427582a83ba06a03093a76dea31b37a88b7/src%2Flibrustc%2Fmiddle%2Fdef.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ae929427582a83ba06a03093a76dea31b37a88b7/src%2Flibrustc%2Fmiddle%2Fdef.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fdef.rs?ref=ae929427582a83ba06a03093a76dea31b37a88b7", "patch": "@@ -55,6 +55,15 @@ pub enum MethodProvenance {\n     FromImpl(ast::DefId),\n }\n \n+impl MethodProvenance {\n+    pub fn map(self, f: |ast::DefId| -> ast::DefId) -> MethodProvenance {\n+        match self {\n+            FromTrait(did) => FromTrait(f(did)),\n+            FromImpl(did) => FromImpl(f(did))\n+        }\n+    }\n+}\n+\n impl Def {\n     pub fn def_id(&self) -> ast::DefId {\n         match *self {"}]}