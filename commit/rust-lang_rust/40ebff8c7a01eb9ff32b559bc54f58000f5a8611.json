{"sha": "40ebff8c7a01eb9ff32b559bc54f58000f5a8611", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQwZWJmZjhjN2EwMWViOWZmMzJiNTU5YmM1NGY1ODAwMGY1YTg2MTE=", "commit": {"author": {"name": "Oliver Schneider", "email": "oli-obk@users.noreply.github.com", "date": "2018-03-05T08:35:11Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2018-03-05T08:35:11Z"}, "message": "Merge pull request #2493 from bootandy/fix_cow\n\nLint passing Cow by reference", "tree": {"sha": "4da590a2d33cb49dffe4d2ea0f8ff59f3995da1c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4da590a2d33cb49dffe4d2ea0f8ff59f3995da1c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/40ebff8c7a01eb9ff32b559bc54f58000f5a8611", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJanQE/CRBK7hj4Ov3rIwAAdHIIAKLIk/IkpNaP0EXroLIW2XnO\ntU/ua/uwHjqX8pFI0by5i/j/sVXf9s8Tc8fzioLVGpy8dSKdRB/WqvS/6jIFQNXX\n8kFBnukMpwWlq/EAfhZjPsv1DzW2ryx0a7vvQ80hxJGrU9re4HF2JOzdZs6MTTHR\nroAxydjLdVfjvKE8XxenxOZTcl5DptIWdO0w8t8ULfcr0ZDwbsSgNyDcjVvLCbYG\nqd8GGlPBCVww5Ar2/L9BW6mqfF+y4Cf4aSwWcRWAwr9HHK819qO/dwBcHnbq1JcJ\nXD/FItI1yMi4NF/JwWsYpHI3ebm11hFYqx8pAwmCOYOqO04O0eQ4twhgUT/oJlw=\n=qTl1\n-----END PGP SIGNATURE-----\n", "payload": "tree 4da590a2d33cb49dffe4d2ea0f8ff59f3995da1c\nparent 598acba7d5561b2096dfa72a39247983852b9bea\nparent 6662aa41f94c784e6aa3d525bae80a318eac40b9\nauthor Oliver Schneider <oli-obk@users.noreply.github.com> 1520238911 +0100\ncommitter GitHub <noreply@github.com> 1520238911 +0100\n\nMerge pull request #2493 from bootandy/fix_cow\n\nLint passing Cow by reference"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/40ebff8c7a01eb9ff32b559bc54f58000f5a8611", "html_url": "https://github.com/rust-lang/rust/commit/40ebff8c7a01eb9ff32b559bc54f58000f5a8611", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/40ebff8c7a01eb9ff32b559bc54f58000f5a8611/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "598acba7d5561b2096dfa72a39247983852b9bea", "url": "https://api.github.com/repos/rust-lang/rust/commits/598acba7d5561b2096dfa72a39247983852b9bea", "html_url": "https://github.com/rust-lang/rust/commit/598acba7d5561b2096dfa72a39247983852b9bea"}, {"sha": "6662aa41f94c784e6aa3d525bae80a318eac40b9", "url": "https://api.github.com/repos/rust-lang/rust/commits/6662aa41f94c784e6aa3d525bae80a318eac40b9", "html_url": "https://github.com/rust-lang/rust/commit/6662aa41f94c784e6aa3d525bae80a318eac40b9"}], "stats": {"total": 49, "additions": 47, "deletions": 2}, "files": [{"sha": "139b5883fb0d01469a8efc7c353e3b35c4548c39", "filename": "clippy_lints/src/ptr.rs", "status": "modified", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/40ebff8c7a01eb9ff32b559bc54f58000f5a8611/clippy_lints%2Fsrc%2Fptr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/40ebff8c7a01eb9ff32b559bc54f58000f5a8611/clippy_lints%2Fsrc%2Fptr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fptr.rs?ref=40ebff8c7a01eb9ff32b559bc54f58000f5a8611", "patch": "@@ -3,6 +3,7 @@\n use std::borrow::Cow;\n use rustc::hir::*;\n use rustc::hir::map::NodeItem;\n+use rustc::hir::QPath;\n use rustc::lint::*;\n use rustc::ty;\n use syntax::ast::NodeId;\n@@ -213,6 +214,33 @@ fn check_fn(cx: &LateContext, decl: &FnDecl, fn_id: NodeId, opt_body_id: Option<\n                         },\n                     );\n                 }\n+            } else if match_type(cx, ty, &paths::COW) {\n+                if_chain! {\n+                    if let TyRptr(_, MutTy { ref ty, ..} ) = arg.node;\n+                    if let TyPath(ref path) = ty.node;\n+                    if let QPath::Resolved(None, ref pp) = *path;\n+                    if let [ref bx] = *pp.segments;\n+                    if let Some(ref params) = bx.parameters;\n+                    if !params.parenthesized;\n+                    if let [ref inner] = *params.types;\n+                    then {\n+                        let replacement = snippet_opt(cx, inner.span);\n+                        match replacement {\n+                            Some(r) => {\n+                                span_lint_and_then(\n+                                    cx,\n+                                    PTR_ARG,\n+                                    arg.span,\n+                                    \"using a reference to `Cow` is not recommended.\",\n+                                    |db| {\n+                                        db.span_suggestion(arg.span, \"change this to\", \"&\".to_owned() + &r);\n+                                    },\n+                                );\n+                            },\n+                            None => (),\n+                        }\n+                    }\n+                }\n             }\n         }\n     }"}, {"sha": "088d33b875f968b4bd3b0510910d56d0b4f00977", "filename": "tests/ui/needless_borrow.rs", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/40ebff8c7a01eb9ff32b559bc54f58000f5a8611/tests%2Fui%2Fneedless_borrow.rs", "raw_url": "https://github.com/rust-lang/rust/raw/40ebff8c7a01eb9ff32b559bc54f58000f5a8611/tests%2Fui%2Fneedless_borrow.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fneedless_borrow.rs?ref=40ebff8c7a01eb9ff32b559bc54f58000f5a8611", "patch": "@@ -1,4 +1,4 @@\n-\n+use std::borrow::Cow;\n \n \n fn x(y: &i32) -> i32 {\n@@ -51,3 +51,12 @@ fn issue_1432() {\n \n     let _ = v.iter().filter(|&a| a.is_empty());\n }\n+\n+#[allow(dead_code)]\n+fn test_cow_with_ref(c: &Cow<[i32]>) {\n+}\n+\n+#[allow(dead_code)]\n+fn test_cow(c: Cow<[i32]>) {\n+    let _c = c;\n+}"}, {"sha": "e319efa939cc16724b0cfa1a936f72c6ff932c7c", "filename": "tests/ui/needless_borrow.stderr", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/40ebff8c7a01eb9ff32b559bc54f58000f5a8611/tests%2Fui%2Fneedless_borrow.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/40ebff8c7a01eb9ff32b559bc54f58000f5a8611/tests%2Fui%2Fneedless_borrow.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fneedless_borrow.stderr?ref=40ebff8c7a01eb9ff32b559bc54f58000f5a8611", "patch": "@@ -38,5 +38,13 @@ error: this pattern creates a reference to a reference\n 50 |     let _ = v.iter().filter(|&ref a| a.is_empty());\n    |                               ^^^^^ help: change this to: `a`\n \n-error: aborting due to 6 previous errors\n+error: using a reference to `Cow` is not recommended.\n+  --> $DIR/needless_borrow.rs:56:25\n+   |\n+56 | fn test_cow_with_ref(c: &Cow<[i32]>) {\n+   |                         ^^^^^^^^^^^ help: change this to: `&[i32]`\n+   |\n+   = note: `-D ptr-arg` implied by `-D warnings`\n+\n+error: aborting due to 7 previous errors\n "}]}