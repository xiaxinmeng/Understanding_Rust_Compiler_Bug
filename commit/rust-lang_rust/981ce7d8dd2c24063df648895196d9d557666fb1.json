{"sha": "981ce7d8dd2c24063df648895196d9d557666fb1", "node_id": "MDY6Q29tbWl0NzI0NzEyOjk4MWNlN2Q4ZGQyYzI0MDYzZGY2NDg4OTUxOTZkOWQ1NTc2NjZmYjE=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2017-09-03T18:57:21Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2017-09-03T18:57:21Z"}, "message": "Auto merge of #44261 - alexcrichton:u128-ffi-unsafe, r=eddyb\n\nrustc: Flag {i,u}128 as unsafe for FFI\n\nThese don't appear to have a stable ABI as noted in #41799 and the work in\ncompiler-builtins definitely seems to be confirming it!", "tree": {"sha": "1788491045d689dba31fe968e31d116875429549", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1788491045d689dba31fe968e31d116875429549"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/981ce7d8dd2c24063df648895196d9d557666fb1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/981ce7d8dd2c24063df648895196d9d557666fb1", "html_url": "https://github.com/rust-lang/rust/commit/981ce7d8dd2c24063df648895196d9d557666fb1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/981ce7d8dd2c24063df648895196d9d557666fb1/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c8642daf93f725685309fc12f9d0908fec54b63a", "url": "https://api.github.com/repos/rust-lang/rust/commits/c8642daf93f725685309fc12f9d0908fec54b63a", "html_url": "https://github.com/rust-lang/rust/commit/c8642daf93f725685309fc12f9d0908fec54b63a"}, {"sha": "549dd105273a5141003b6054c6f496f62e059cfb", "url": "https://api.github.com/repos/rust-lang/rust/commits/549dd105273a5141003b6054c6f496f62e059cfb", "html_url": "https://github.com/rust-lang/rust/commit/549dd105273a5141003b6054c6f496f62e059cfb"}], "stats": {"total": 16, "additions": 15, "deletions": 1}, "files": [{"sha": "ccd3194b5e388f8e83440818552b446765530021", "filename": "src/librustc_lint/types.rs", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/981ce7d8dd2c24063df648895196d9d557666fb1/src%2Flibrustc_lint%2Ftypes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/981ce7d8dd2c24063df648895196d9d557666fb1/src%2Flibrustc_lint%2Ftypes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_lint%2Ftypes.rs?ref=981ce7d8dd2c24063df648895196d9d557666fb1", "patch": "@@ -543,6 +543,18 @@ impl<'a, 'tcx> ImproperCTypesVisitor<'a, 'tcx> {\n                            `u32` or `libc::wchar_t` should be used\")\n             }\n \n+            ty::TyInt(ast::IntTy::I128) => {\n+                FfiUnsafe(\"found Rust type `i128` in foreign module, but \\\n+                           128-bit integers don't currently have a known \\\n+                           stable ABI\")\n+            }\n+\n+            ty::TyUint(ast::UintTy::U128) => {\n+                FfiUnsafe(\"found Rust type `u128` in foreign module, but \\\n+                           128-bit integers don't currently have a known \\\n+                           stable ABI\")\n+            }\n+\n             // Primitive types with a stable representation.\n             ty::TyBool | ty::TyInt(..) | ty::TyUint(..) | ty::TyFloat(..) | ty::TyNever => FfiSafe,\n "}, {"sha": "1d9b179c05d8533591ecd6427d0c290930191500", "filename": "src/test/compile-fail/lint-ctypes.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/981ce7d8dd2c24063df648895196d9d557666fb1/src%2Ftest%2Fcompile-fail%2Flint-ctypes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/981ce7d8dd2c24063df648895196d9d557666fb1/src%2Ftest%2Fcompile-fail%2Flint-ctypes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Flint-ctypes.rs?ref=981ce7d8dd2c24063df648895196d9d557666fb1", "patch": "@@ -9,7 +9,7 @@\n // except according to those terms.\n \n #![deny(improper_ctypes)]\n-#![feature(libc)]\n+#![feature(libc, i128_type)]\n \n extern crate libc;\n \n@@ -39,6 +39,8 @@ extern {\n     pub fn str_type(p: &str); //~ ERROR: found Rust type\n     pub fn box_type(p: Box<u32>); //~ ERROR found struct without\n     pub fn char_type(p: char); //~ ERROR found Rust type\n+    pub fn i128_type(p: i128); //~ ERROR found Rust type\n+    pub fn u128_type(p: u128); //~ ERROR found Rust type\n     pub fn trait_type(p: &Clone); //~ ERROR found Rust trait type\n     pub fn tuple_type(p: (i32, i32)); //~ ERROR found Rust tuple type\n     pub fn tuple_type2(p: I32Pair); //~ ERROR found Rust tuple type"}]}