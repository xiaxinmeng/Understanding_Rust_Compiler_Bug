{"sha": "e8db15f662af7fe646a75fbbb3c507037dc55753", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU4ZGIxNWY2NjJhZjdmZTY0NmE3NWZiYmIzYzUwNzAzN2RjNTU3NTM=", "commit": {"author": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2019-04-21T13:25:39Z"}, "committer": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2019-04-24T17:00:21Z"}, "message": "Fix filename length for ar files", "tree": {"sha": "9c2283185051c0aa0223332c8e008128bd29c6e6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9c2283185051c0aa0223332c8e008128bd29c6e6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e8db15f662af7fe646a75fbbb3c507037dc55753", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e8db15f662af7fe646a75fbbb3c507037dc55753", "html_url": "https://github.com/rust-lang/rust/commit/e8db15f662af7fe646a75fbbb3c507037dc55753", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e8db15f662af7fe646a75fbbb3c507037dc55753/comments", "author": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "103f2faa1a698d3119d218088dff4ac660b41744", "url": "https://api.github.com/repos/rust-lang/rust/commits/103f2faa1a698d3119d218088dff4ac660b41744", "html_url": "https://github.com/rust-lang/rust/commit/103f2faa1a698d3119d218088dff4ac660b41744"}], "stats": {"total": 26, "additions": 21, "deletions": 5}, "files": [{"sha": "44ca68c2127d1549727afc7c837ccc1d5e52c5d9", "filename": "src/archive.rs", "status": "modified", "additions": 18, "deletions": 2, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/e8db15f662af7fe646a75fbbb3c507037dc55753/src%2Farchive.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e8db15f662af7fe646a75fbbb3c507037dc55753/src%2Farchive.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Farchive.rs?ref=e8db15f662af7fe646a75fbbb3c507037dc55753", "patch": "@@ -36,7 +36,7 @@ impl<'a> ArchiveBuilder<'a> for ArArchiveBuilder<'a> {\n             dst: output.to_path_buf(),\n             src: input.map(|p| p.to_path_buf()),\n             lib_search_paths: archive_search_paths(sess),\n-            is_like_osx: sess.target.target.options.is_like_osx,\n+            is_like_osx: true, //sess.target.target.options.is_like_osx,\n         };\n \n         let (src_archives, entries) = if let Some(src) = &config.src {\n@@ -146,8 +146,24 @@ impl<'a> ArchiveBuilder<'a> for ArArchiveBuilder<'a> {\n                 ArchiveEntry::FromArchive { archive_index, entry_index } => {\n                     let entry = self.src_archives[archive_index].jump_to_entry(entry_index).unwrap();\n                     let orig_header = entry.header();\n+\n+                    let orig_filename = orig_header.identifier().to_vec();\n+\n+                    use std::collections::hash_map::DefaultHasher;\n+                    use std::hash::{Hash, Hasher};\n+                    let mut hasher = DefaultHasher::new();\n+                    orig_filename.hash(&mut hasher);\n+                    let mut filename = hasher.finish().to_le_bytes()[0..6].to_vec();\n+                    filename.extend(&orig_filename[orig_filename.len() - 9..]);\n+\n+                    assert!(\n+                        filename.len() <= 16,\n+                        \"Filenames bigger than 16 bytes are not yet supported. Filename was: \\\"{}\\\"\",\n+                        String::from_utf8(filename).unwrap_or_else(|e| e.to_string()),\n+                    );\n+\n                     let mut header =\n-                        ar::Header::new(orig_header.identifier().to_vec(), orig_header.size());\n+                        ar::Header::new(filename, orig_header.size());\n                     header.set_mtime(orig_header.mtime());\n                     header.set_uid(orig_header.uid());\n                     header.set_gid(orig_header.gid());"}, {"sha": "f1bceb648e6df6e54f5c0e0450e1e5bd8b96fdcb", "filename": "src/lib.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/e8db15f662af7fe646a75fbbb3c507037dc55753/src%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e8db15f662af7fe646a75fbbb3c507037dc55753/src%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flib.rs?ref=e8db15f662af7fe646a75fbbb3c507037dc55753", "patch": "@@ -325,14 +325,14 @@ impl CodegenBackend for CraneliftCodegenBackend {\n             return Box::new(CodegenResults {\n                 crate_name: tcx.crate_name(LOCAL_CRATE),\n                 modules: vec![emit_module(\n-                    \"dummy_name\",\n+                    \"u\",\n                     ModuleKind::Regular,\n                     faerie_module,\n                     debug,\n                 )],\n                 allocator_module: if created_alloc_shim {\n                     Some(emit_module(\n-                        \"allocator_shim\",\n+                        \"a\",\n                         ModuleKind::Allocator,\n                         allocator_module,\n                         None,\n@@ -341,7 +341,7 @@ impl CodegenBackend for CraneliftCodegenBackend {\n                     None\n                 },\n                 metadata_module: CompiledModule {\n-                    name: \"dummy_metadata\".to_string(),\n+                    name: \"m\".to_string(),\n                     kind: ModuleKind::Metadata,\n                     object: None,\n                     bytecode: None,"}]}