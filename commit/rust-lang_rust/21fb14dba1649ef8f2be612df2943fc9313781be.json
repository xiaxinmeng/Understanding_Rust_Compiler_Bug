{"sha": "21fb14dba1649ef8f2be612df2943fc9313781be", "node_id": "MDY6Q29tbWl0NzI0NzEyOjIxZmIxNGRiYTE2NDllZjhmMmJlNjEyZGYyOTQzZmM5MzEzNzgxYmU=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2019-05-24T11:09:29Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2019-05-24T11:09:29Z"}, "message": "avoid printing the tag twice", "tree": {"sha": "557b655ed2cd9ed254a3e9d6b28e04d6a6f0794c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/557b655ed2cd9ed254a3e9d6b28e04d6a6f0794c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/21fb14dba1649ef8f2be612df2943fc9313781be", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/21fb14dba1649ef8f2be612df2943fc9313781be", "html_url": "https://github.com/rust-lang/rust/commit/21fb14dba1649ef8f2be612df2943fc9313781be", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/21fb14dba1649ef8f2be612df2943fc9313781be/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5569fffe7d71ed52ce284d0ffc6691d0141874f2", "url": "https://api.github.com/repos/rust-lang/rust/commits/5569fffe7d71ed52ce284d0ffc6691d0141874f2", "html_url": "https://github.com/rust-lang/rust/commit/5569fffe7d71ed52ce284d0ffc6691d0141874f2"}], "stats": {"total": 8, "additions": 4, "deletions": 4}, "files": [{"sha": "f997e6316435ab8becacdd3c963a0b0fe005dc3d", "filename": "src/stacked_borrows.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/21fb14dba1649ef8f2be612df2943fc9313781be/src%2Fstacked_borrows.rs", "raw_url": "https://github.com/rust-lang/rust/raw/21fb14dba1649ef8f2be612df2943fc9313781be/src%2Fstacked_borrows.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fstacked_borrows.rs?ref=21fb14dba1649ef8f2be612df2943fc9313781be", "patch": "@@ -497,7 +497,7 @@ impl AllocationExtra<Tag> for Stacks {\n         ptr: Pointer<Tag>,\n         size: Size,\n     ) -> EvalResult<'tcx> {\n-        trace!(\"read access with tag {:?}: {:?}, size {}\", ptr.tag, ptr, size.bytes());\n+        trace!(\"read access with tag {:?}: {:?}, size {}\", ptr.tag, ptr.erase_tag(), size.bytes());\n         alloc.extra.for_each(ptr, size, |stack, global| {\n             stack.access(AccessKind::Read, ptr.tag, global)?;\n             Ok(())\n@@ -510,7 +510,7 @@ impl AllocationExtra<Tag> for Stacks {\n         ptr: Pointer<Tag>,\n         size: Size,\n     ) -> EvalResult<'tcx> {\n-        trace!(\"write access with tag {:?}: {:?}, size {}\", ptr.tag, ptr, size.bytes());\n+        trace!(\"write access with tag {:?}: {:?}, size {}\", ptr.tag, ptr.erase_tag(), size.bytes());\n         alloc.extra.for_each(ptr, size, |stack, global| {\n             stack.access(AccessKind::Write, ptr.tag, global)?;\n             Ok(())\n@@ -523,7 +523,7 @@ impl AllocationExtra<Tag> for Stacks {\n         ptr: Pointer<Tag>,\n         size: Size,\n     ) -> EvalResult<'tcx> {\n-        trace!(\"deallocation with tag {:?}: {:?}, size {}\", ptr.tag, ptr, size.bytes());\n+        trace!(\"deallocation with tag {:?}: {:?}, size {}\", ptr.tag, ptr.erase_tag(), size.bytes());\n         alloc.extra.for_each(ptr, size, |stack, global| {\n             stack.dealloc(ptr.tag, global)\n         })\n@@ -546,7 +546,7 @@ trait EvalContextPrivExt<'a, 'mir, 'tcx: 'a+'mir>: crate::MiriEvalContextExt<'a,\n         let protector = if protect { Some(this.frame().extra) } else { None };\n         let ptr = place.ptr.to_ptr()?;\n         trace!(\"reborrow: {} reference {:?} derived from {:?} (pointee {}): {:?}, size {}\",\n-            kind, new_tag, ptr.tag, place.layout.ty, ptr, size.bytes());\n+            kind, new_tag, ptr.tag, place.layout.ty, ptr.erase_tag(), size.bytes());\n \n         // Get the allocation. It might not be mutable, so we cannot use `get_mut`.\n         let alloc = this.memory().get(ptr.alloc_id)?;"}]}