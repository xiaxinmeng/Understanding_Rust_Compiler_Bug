{"sha": "53881f91b0036e65090bc874bf69b7ad6ab3ecde", "node_id": "C_kwDOAAsO6NoAKDUzODgxZjkxYjAwMzZlNjUwOTBiYzg3NGJmNjliN2FkNmFiM2VjZGU", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2023-06-06T20:00:21Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2023-06-06T20:00:21Z"}, "message": "Rollup merge of #112356 - Nilstrieb:get-region-var-origins, r=compiler-errors\n\nFix comment for `get_region_var_origins`\n\n#109753 changed the logic but not the comment.\n\nr? `@compiler-errors`", "tree": {"sha": "2ee725ca1d07db188ff37926503d8b9d6ecdd6c0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2ee725ca1d07db188ff37926503d8b9d6ecdd6c0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/53881f91b0036e65090bc874bf69b7ad6ab3ecde", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJkf5BVCRBK7hj4Ov3rIwAAGjsIAKjt9gGwWaakPgzjlXtmXtdU\nSuhw2Uw2HN/7uPaaILjWN6ogumeFhcOtLhSuspheUeULfJDmGSW3VIlke7pkMReW\n8Ox/Dd89bUBSwmEa9tDqy0EZpUt866WIAuMf8Oybzjbe3nNXdO3NX3Hdg9QgPPdo\na8ZUZHYD8h/4DjxKozKNVwsKdU1lEXahIbWwPdDnKnffFAxtsi0w60PtIWNhMqvy\nDBKwiczHTpC+JEXN8Lt7yB6FSBm9ndPxK7xcoW+cWyWUQLaTwzoUoWsIJzOyRO4k\nt1yQ8gjQsZB9iB31jTOcWhPvxekSo2u474o5eL6vetq8FPSAA32mgaInWB8uKCo=\n=w9SG\n-----END PGP SIGNATURE-----\n", "payload": "tree 2ee725ca1d07db188ff37926503d8b9d6ecdd6c0\nparent fd6efcf9602d6a82068b6eb1600971795a0f3f93\nparent 0e01088f077c572bbca791fbed54c1bbe80afdb0\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1686081621 +0200\ncommitter GitHub <noreply@github.com> 1686081621 +0200\n\nRollup merge of #112356 - Nilstrieb:get-region-var-origins, r=compiler-errors\n\nFix comment for `get_region_var_origins`\n\n#109753 changed the logic but not the comment.\n\nr? `@compiler-errors`\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/53881f91b0036e65090bc874bf69b7ad6ab3ecde", "html_url": "https://github.com/rust-lang/rust/commit/53881f91b0036e65090bc874bf69b7ad6ab3ecde", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/53881f91b0036e65090bc874bf69b7ad6ab3ecde/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fd6efcf9602d6a82068b6eb1600971795a0f3f93", "url": "https://api.github.com/repos/rust-lang/rust/commits/fd6efcf9602d6a82068b6eb1600971795a0f3f93", "html_url": "https://github.com/rust-lang/rust/commit/fd6efcf9602d6a82068b6eb1600971795a0f3f93"}, {"sha": "0e01088f077c572bbca791fbed54c1bbe80afdb0", "url": "https://api.github.com/repos/rust-lang/rust/commits/0e01088f077c572bbca791fbed54c1bbe80afdb0", "html_url": "https://github.com/rust-lang/rust/commit/0e01088f077c572bbca791fbed54c1bbe80afdb0"}], "stats": {"total": 10, "additions": 5, "deletions": 5}, "files": [{"sha": "f36102fe2ea8cb2bd4a521b1ada5e967b5918bc7", "filename": "compiler/rustc_infer/src/infer/mod.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/53881f91b0036e65090bc874bf69b7ad6ab3ecde/compiler%2Frustc_infer%2Fsrc%2Finfer%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/53881f91b0036e65090bc874bf69b7ad6ab3ecde/compiler%2Frustc_infer%2Fsrc%2Finfer%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_infer%2Fsrc%2Finfer%2Fmod.rs?ref=53881f91b0036e65090bc874bf69b7ad6ab3ecde", "patch": "@@ -1195,15 +1195,15 @@ impl<'tcx> InferCtxt<'tcx> {\n             .var_origin(vid)\n     }\n \n-    /// Takes ownership of the list of variable regions. This implies\n-    /// that all the region constraints have already been taken, and\n-    /// hence that `resolve_regions_and_report_errors` can never be\n-    /// called. This is used only during NLL processing to \"hand off\" ownership\n-    /// of the set of region variables into the NLL region context.\n+    /// Clone the list of variable regions. This is used only during NLL processing\n+    /// to put the set of region variables into the NLL region context.\n     pub fn get_region_var_origins(&self) -> VarInfos {\n         let mut inner = self.inner.borrow_mut();\n         let (var_infos, data) = inner\n             .region_constraint_storage\n+            // We clone instead of taking because borrowck still wants to use\n+            // the inference context after calling this for diagnostics\n+            // and the new trait solver.\n             .clone()\n             .expect(\"regions already resolved\")\n             .with_log(&mut inner.undo_log)"}]}