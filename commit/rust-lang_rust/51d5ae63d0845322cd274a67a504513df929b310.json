{"sha": "51d5ae63d0845322cd274a67a504513df929b310", "node_id": "C_kwDOAAsO6NoAKDUxZDVhZTYzZDA4NDUzMjJjZDI3NGE2N2E1MDQ1MTNkZjkyOWIzMTA", "commit": {"author": {"name": "Pietro Albini", "email": "pietro.albini@ferrous-systems.com", "date": "2022-11-17T10:05:27Z"}, "committer": {"name": "Pietro Albini", "email": "pietro.albini@ferrous-systems.com", "date": "2022-11-17T10:25:00Z"}, "message": "merge together similar copyright statements", "tree": {"sha": "337e9a59ecedba60a9fa7f8c7ccd2aab128c7243", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/337e9a59ecedba60a9fa7f8c7ccd2aab128c7243"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/51d5ae63d0845322cd274a67a504513df929b310", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEMycKYjxLY0eb13b7zXazX3c0dp4FAmN2C/wACgkQzXazX3c0\ndp49/A//bcp/mjOCzSakOma82IEFh+UxUW9D6s9W+VE4cuTeVvRFyLJMoxdA3uO/\nSOcPagUzZd2RLZ2X9kALPC63yw8YKX0KjkKcWAMkpXmtnXUf9/JdUOr0glTrVX7d\naQhsMirjvkFMj/6o7hhJOhREDSNj7VohZreglHiDrlDislfG97znzV8JPTwT7RgV\nAi6fYtsklmZF+uo+X8exQGaPeKzn9zExXrC5SW3fm4BopTOkJ3lTRVtJv3w+ZalY\nfq/lfPU+RC6S6DNNoUkr7dRc0H29km+HFfZ5g08vf8yugsMObmhj6l4wdczOdK/J\nTMMFOPLx61U2fimACl/rUKhu6AzRMRDhdpYLnFExKKeoNIAFe0ryw4lvXy95anaN\ny6df5VdsyP2kCOPZ8/jaYWXjL1xU70EHDy800mX8ADCNYoGpFVpZVciQz28ylI+9\njjPNpGN3nEAKPMGiphx3YlLm6axvU9/9YuI4TWs3ifBpEaB3Tnamdc36vKOOWqgR\nwJEd3/pH37tt/xYn0v5IFhVemsvNb3bGjopm+3Cfmq+RSjHiSoRck0fO7zGm9j+5\nzxuzV97Q4G4kurwFmS9VOeP6r4iYCipC9rxH3HeJQsnwV//qV+6z7mc9SFInNLa7\nudJXmMXyfIqnM6SwvkI/2ocVIb3L2i/9fDLV7irN/K76hgGbGts=\n=MdVP\n-----END PGP SIGNATURE-----", "payload": "tree 337e9a59ecedba60a9fa7f8c7ccd2aab128c7243\nparent 4af7de13d26aabe9bc459771bd5641c140407954\nauthor Pietro Albini <pietro.albini@ferrous-systems.com> 1668679527 +0100\ncommitter Pietro Albini <pietro.albini@ferrous-systems.com> 1668680700 +0100\n\nmerge together similar copyright statements\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/51d5ae63d0845322cd274a67a504513df929b310", "html_url": "https://github.com/rust-lang/rust/commit/51d5ae63d0845322cd274a67a504513df929b310", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/51d5ae63d0845322cd274a67a504513df929b310/comments", "author": {"login": "pietroalbini", "id": 2299951, "node_id": "MDQ6VXNlcjIyOTk5NTE=", "avatar_url": "https://avatars.githubusercontent.com/u/2299951?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pietroalbini", "html_url": "https://github.com/pietroalbini", "followers_url": "https://api.github.com/users/pietroalbini/followers", "following_url": "https://api.github.com/users/pietroalbini/following{/other_user}", "gists_url": "https://api.github.com/users/pietroalbini/gists{/gist_id}", "starred_url": "https://api.github.com/users/pietroalbini/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pietroalbini/subscriptions", "organizations_url": "https://api.github.com/users/pietroalbini/orgs", "repos_url": "https://api.github.com/users/pietroalbini/repos", "events_url": "https://api.github.com/users/pietroalbini/events{/privacy}", "received_events_url": "https://api.github.com/users/pietroalbini/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pietroalbini", "id": 2299951, "node_id": "MDQ6VXNlcjIyOTk5NTE=", "avatar_url": "https://avatars.githubusercontent.com/u/2299951?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pietroalbini", "html_url": "https://github.com/pietroalbini", "followers_url": "https://api.github.com/users/pietroalbini/followers", "following_url": "https://api.github.com/users/pietroalbini/following{/other_user}", "gists_url": "https://api.github.com/users/pietroalbini/gists{/gist_id}", "starred_url": "https://api.github.com/users/pietroalbini/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pietroalbini/subscriptions", "organizations_url": "https://api.github.com/users/pietroalbini/orgs", "repos_url": "https://api.github.com/users/pietroalbini/repos", "events_url": "https://api.github.com/users/pietroalbini/events{/privacy}", "received_events_url": "https://api.github.com/users/pietroalbini/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4af7de13d26aabe9bc459771bd5641c140407954", "url": "https://api.github.com/repos/rust-lang/rust/commits/4af7de13d26aabe9bc459771bd5641c140407954", "html_url": "https://github.com/rust-lang/rust/commit/4af7de13d26aabe9bc459771bd5641c140407954"}], "stats": {"total": 30, "additions": 29, "deletions": 1}, "files": [{"sha": "1c95b1bc8e96cdedb3b3a56b4b823ca85dcfc294", "filename": "src/tools/collect-license-metadata/src/licenses.rs", "status": "modified", "additions": 29, "deletions": 1, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/51d5ae63d0845322cd274a67a504513df929b310/src%2Ftools%2Fcollect-license-metadata%2Fsrc%2Flicenses.rs", "raw_url": "https://github.com/rust-lang/rust/raw/51d5ae63d0845322cd274a67a504513df929b310/src%2Ftools%2Fcollect-license-metadata%2Fsrc%2Flicenses.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fcollect-license-metadata%2Fsrc%2Flicenses.rs?ref=51d5ae63d0845322cd274a67a504513df929b310", "patch": "@@ -1,5 +1,7 @@\n use std::collections::HashMap;\n \n+const COPYRIGHT_PREFIXES: &[&str] = &[\"SPDX-FileCopyrightText:\", \"Copyright\", \"(c)\", \"(C)\", \"\u00a9\"];\n+\n pub(crate) struct LicensesInterner {\n     by_id: Vec<License>,\n     by_struct: HashMap<License, usize>,\n@@ -10,7 +12,8 @@ impl LicensesInterner {\n         LicensesInterner { by_id: Vec::new(), by_struct: HashMap::new() }\n     }\n \n-    pub(crate) fn intern(&mut self, license: License) -> LicenseId {\n+    pub(crate) fn intern(&mut self, mut license: License) -> LicenseId {\n+        license.simplify();\n         if let Some(id) = self.by_struct.get(&license) {\n             LicenseId(*id)\n         } else {\n@@ -35,3 +38,28 @@ pub(crate) struct License {\n     pub(crate) spdx: String,\n     pub(crate) copyright: Vec<String>,\n }\n+\n+impl License {\n+    fn simplify(&mut self) {\n+        self.remove_copyright_prefixes();\n+        self.copyright.sort();\n+        self.copyright.dedup();\n+    }\n+\n+    fn remove_copyright_prefixes(&mut self) {\n+        for copyright in &mut self.copyright {\n+            let mut stripped = copyright.trim();\n+            let mut previous_stripped;\n+            loop {\n+                previous_stripped = stripped;\n+                for pattern in COPYRIGHT_PREFIXES {\n+                    stripped = stripped.trim_start_matches(pattern).trim_start();\n+                }\n+                if stripped == previous_stripped {\n+                    break;\n+                }\n+            }\n+            *copyright = stripped.into();\n+        }\n+    }\n+}"}]}