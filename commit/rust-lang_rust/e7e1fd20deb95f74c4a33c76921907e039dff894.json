{"sha": "e7e1fd20deb95f74c4a33c76921907e039dff894", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU3ZTFmZDIwZGViOTVmNzRjNGEzM2M3NjkyMTkwN2UwMzlkZmY4OTQ=", "commit": {"author": {"name": "Ariel Ben-Yehuda", "email": "ariel.byd@gmail.com", "date": "2015-05-19T19:54:44Z"}, "committer": {"name": "Ariel Ben-Yehuda", "email": "ariel.byd@gmail.com", "date": "2015-05-19T19:54:44Z"}, "message": "Fix rebase conflicts", "tree": {"sha": "9080e049ab27e09e2232428c0d7dc422d6b93988", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9080e049ab27e09e2232428c0d7dc422d6b93988"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e7e1fd20deb95f74c4a33c76921907e039dff894", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e7e1fd20deb95f74c4a33c76921907e039dff894", "html_url": "https://github.com/rust-lang/rust/commit/e7e1fd20deb95f74c4a33c76921907e039dff894", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e7e1fd20deb95f74c4a33c76921907e039dff894/comments", "author": {"login": "arielb1", "id": 1830974, "node_id": "MDQ6VXNlcjE4MzA5NzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1830974?v=4", "gravatar_id": "", "url": "https://api.github.com/users/arielb1", "html_url": "https://github.com/arielb1", "followers_url": "https://api.github.com/users/arielb1/followers", "following_url": "https://api.github.com/users/arielb1/following{/other_user}", "gists_url": "https://api.github.com/users/arielb1/gists{/gist_id}", "starred_url": "https://api.github.com/users/arielb1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/arielb1/subscriptions", "organizations_url": "https://api.github.com/users/arielb1/orgs", "repos_url": "https://api.github.com/users/arielb1/repos", "events_url": "https://api.github.com/users/arielb1/events{/privacy}", "received_events_url": "https://api.github.com/users/arielb1/received_events", "type": "User", "site_admin": false}, "committer": {"login": "arielb1", "id": 1830974, "node_id": "MDQ6VXNlcjE4MzA5NzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1830974?v=4", "gravatar_id": "", "url": "https://api.github.com/users/arielb1", "html_url": "https://github.com/arielb1", "followers_url": "https://api.github.com/users/arielb1/followers", "following_url": "https://api.github.com/users/arielb1/following{/other_user}", "gists_url": "https://api.github.com/users/arielb1/gists{/gist_id}", "starred_url": "https://api.github.com/users/arielb1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/arielb1/subscriptions", "organizations_url": "https://api.github.com/users/arielb1/orgs", "repos_url": "https://api.github.com/users/arielb1/repos", "events_url": "https://api.github.com/users/arielb1/events{/privacy}", "received_events_url": "https://api.github.com/users/arielb1/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3afd760bb3fc8c90adfd9451e1cd8b161301f218", "url": "https://api.github.com/repos/rust-lang/rust/commits/3afd760bb3fc8c90adfd9451e1cd8b161301f218", "html_url": "https://github.com/rust-lang/rust/commit/3afd760bb3fc8c90adfd9451e1cd8b161301f218"}], "stats": {"total": 15, "additions": 10, "deletions": 5}, "files": [{"sha": "97e85b114b06079dd07d0eeb6b751538673233be", "filename": "src/liballoc/arc.rs", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/e7e1fd20deb95f74c4a33c76921907e039dff894/src%2Fliballoc%2Farc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e7e1fd20deb95f74c4a33c76921907e039dff894/src%2Fliballoc%2Farc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Farc.rs?ref=e7e1fd20deb95f74c4a33c76921907e039dff894", "patch": "@@ -394,7 +394,9 @@ impl<T: ?Sized> Drop for Arc<T> {\n         // it's run more than once)\n         let ptr = *self._ptr;\n         // if ptr.is_null() { return }\n-        if ptr as usize == 0 || ptr as usize == mem::POST_DROP_USIZE { return }\n+        if ptr as *mut u8 as usize == 0 || ptr as *mut u8 as usize == mem::POST_DROP_USIZE {\n+            return\n+        }\n \n         // Because `fetch_sub` is already atomic, we do not need to synchronize\n         // with other threads unless we are going to delete the object. This\n@@ -524,7 +526,9 @@ impl<T: ?Sized> Drop for Weak<T> {\n         let ptr = *self._ptr;\n \n         // see comments above for why this check is here\n-        if ptr as usize == 0 || ptr as usize == mem::POST_DROP_USIZE { return }\n+        if ptr as *mut u8 as usize == 0 || ptr as *mut u8 as usize == mem::POST_DROP_USIZE {\n+            return\n+        }\n \n         // If we find out that we were the last weak pointer, then its time to\n         // deallocate the data entirely. See the discussion in Arc::drop() about"}, {"sha": "3716ee395bfd4ffae49db92b71123849f41f90cb", "filename": "src/librustc_lint/builtin.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e7e1fd20deb95f74c4a33c76921907e039dff894/src%2Flibrustc_lint%2Fbuiltin.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e7e1fd20deb95f74c4a33c76921907e039dff894/src%2Flibrustc_lint%2Fbuiltin.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_lint%2Fbuiltin.rs?ref=e7e1fd20deb95f74c4a33c76921907e039dff894", "patch": "@@ -206,7 +206,7 @@ impl LintPass for TypeLimits {\n                                 let (min, max) = int_ty_range(int_type);\n                                 let negative = self.negated_expr_id == e.id;\n \n-                                if (negative && v > (min.abs() as u64)) ||\n+                                if (negative && v > min.wrapping_neg() as u64) ||\n                                    (!negative && v > (max.abs() as u64)) {\n                                     cx.span_lint(OVERFLOWING_LITERALS, e.span,\n                                                  &*format!(\"literal out of range for {:?}\", t));"}, {"sha": "33eb3814087f52e21a95e215142e45e5ca0d2db8", "filename": "src/librustc_trans/trans/expr.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/e7e1fd20deb95f74c4a33c76921907e039dff894/src%2Flibrustc_trans%2Ftrans%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e7e1fd20deb95f74c4a33c76921907e039dff894/src%2Flibrustc_trans%2Ftrans%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Ftrans%2Fexpr.rs?ref=e7e1fd20deb95f74c4a33c76921907e039dff894", "patch": "@@ -2048,8 +2048,9 @@ fn trans_imm_cast<'blk, 'tcx>(bcx: Block<'blk, 'tcx>,\n         } else { llsrc };\n     }\n \n-    let _icx = push_ctxt(\"trans_cast\"); let mut bcx = bcx; let ccx =\n-    bcx.ccx();\n+    let _icx = push_ctxt(\"trans_cast\");\n+    let mut bcx = bcx;\n+    let ccx = bcx.ccx();\n \n     let t_in = expr_ty_adjusted(bcx, expr);\n     let t_out = node_id_type(bcx, id);"}]}