{"sha": "896a59d8dbf0387815d1022b4851686b9376ebe7", "node_id": "C_kwDOAAsO6NoAKDg5NmE1OWQ4ZGJmMDM4NzgxNWQxMDIyYjQ4NTE2ODZiOTM3NmViZTc", "commit": {"author": {"name": "Yuki Okushi", "email": "jtitor@2k36.org", "date": "2022-05-24T22:08:42Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-05-24T22:08:42Z"}, "message": "Rollup merge of #97266 - est31:unknown_lints_cfg_attr, r=lcnr\n\nMake weird name lints trigger behind cfg_attr\n\nThe weird name lints (`unknown_lints`, `renamed_and_removed_lints`), the lints that lint the linting, were previously not firing for lint level declarations behind `cfg_attr`, as they were only running before expansion.\n\nNow, this will give a `unknown_lints` warning:\n\n```Rust\n#[cfg_attr(all(), allow(this_lint_does_not_exist))]\nfn foo() {}\n```\n\nLint level declarations behind a `cfg_attr` whose condition is not applying are still ignored. So this still won't give a warning:\n\n```Rust\n#[cfg_attr(any(), allow(this_lint_does_not_exist))]\nfn foo() {}\n```\n\nFurthermore, this PR also makes the weird name lints respect level delcarations for *them* that were hidden by `cfg_attr`, making them consistent to other lints. So this will now not issue a warning:\n\n```Rust\n#[cfg_attr(all(), allow(unknown_lints))]\nmod foo {\n    #[allow(does_not_exist)]\n    fn foo() {\n    }\n}\n```\n\nFixes #97094", "tree": {"sha": "3f06a0d6cca104f6423f88a0526dd69112e6504a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3f06a0d6cca104f6423f88a0526dd69112e6504a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/896a59d8dbf0387815d1022b4851686b9376ebe7", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJijVdqCRBK7hj4Ov3rIwAAxhIIAHBNgfNXF/z1Vn78U9F0rObz\nKiLJXcKTs+ITWGP7O2VsBvj0h4wDIDRipPfTl++mnTEERSAGZSNhTgfWwwSxwCfj\njfHSW8g42uobhlAvEyWADX0FxOnCsRvWiGAJJMsob22fDaC486WyWdWxtEvmmYhc\nn0GaX1dGCdUQ0ZP/8KzcQ4/JYuz2/16OID38pt4TcUo1UJkRgJ486vl2O0cYvAu8\n9fMUFxk7JnGek1v/uH1DWz+3Zyj//RaK/mpMcHfIsLSM6YsuA1pzUrbgBq7IJx72\nugxw/Kbsop99fPx4oZlfy9o8lOqyA42y1TMZmGEFtfIWyrWd7XQ6wzn4nfitlc8=\n=JDJ0\n-----END PGP SIGNATURE-----\n", "payload": "tree 3f06a0d6cca104f6423f88a0526dd69112e6504a\nparent 33f45b167e12f6c84f6f8e9dee90676f97c192e3\nparent 2a8b60f915c9fdc61e18be3392ea4330d9617da4\nauthor Yuki Okushi <jtitor@2k36.org> 1653430122 +0900\ncommitter GitHub <noreply@github.com> 1653430122 +0900\n\nRollup merge of #97266 - est31:unknown_lints_cfg_attr, r=lcnr\n\nMake weird name lints trigger behind cfg_attr\n\nThe weird name lints (`unknown_lints`, `renamed_and_removed_lints`), the lints that lint the linting, were previously not firing for lint level declarations behind `cfg_attr`, as they were only running before expansion.\n\nNow, this will give a `unknown_lints` warning:\n\n```Rust\n#[cfg_attr(all(), allow(this_lint_does_not_exist))]\nfn foo() {}\n```\n\nLint level declarations behind a `cfg_attr` whose condition is not applying are still ignored. So this still won't give a warning:\n\n```Rust\n#[cfg_attr(any(), allow(this_lint_does_not_exist))]\nfn foo() {}\n```\n\nFurthermore, this PR also makes the weird name lints respect level delcarations for *them* that were hidden by `cfg_attr`, making them consistent to other lints. So this will now not issue a warning:\n\n```Rust\n#[cfg_attr(all(), allow(unknown_lints))]\nmod foo {\n    #[allow(does_not_exist)]\n    fn foo() {\n    }\n}\n```\n\nFixes #97094\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/896a59d8dbf0387815d1022b4851686b9376ebe7", "html_url": "https://github.com/rust-lang/rust/commit/896a59d8dbf0387815d1022b4851686b9376ebe7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/896a59d8dbf0387815d1022b4851686b9376ebe7/comments", "author": {"login": "JohnTitor", "id": 25030997, "node_id": "MDQ6VXNlcjI1MDMwOTk3", "avatar_url": "https://avatars.githubusercontent.com/u/25030997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JohnTitor", "html_url": "https://github.com/JohnTitor", "followers_url": "https://api.github.com/users/JohnTitor/followers", "following_url": "https://api.github.com/users/JohnTitor/following{/other_user}", "gists_url": "https://api.github.com/users/JohnTitor/gists{/gist_id}", "starred_url": "https://api.github.com/users/JohnTitor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JohnTitor/subscriptions", "organizations_url": "https://api.github.com/users/JohnTitor/orgs", "repos_url": "https://api.github.com/users/JohnTitor/repos", "events_url": "https://api.github.com/users/JohnTitor/events{/privacy}", "received_events_url": "https://api.github.com/users/JohnTitor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "33f45b167e12f6c84f6f8e9dee90676f97c192e3", "url": "https://api.github.com/repos/rust-lang/rust/commits/33f45b167e12f6c84f6f8e9dee90676f97c192e3", "html_url": "https://github.com/rust-lang/rust/commit/33f45b167e12f6c84f6f8e9dee90676f97c192e3"}, {"sha": "2a8b60f915c9fdc61e18be3392ea4330d9617da4", "url": "https://api.github.com/repos/rust-lang/rust/commits/2a8b60f915c9fdc61e18be3392ea4330d9617da4", "html_url": "https://github.com/rust-lang/rust/commit/2a8b60f915c9fdc61e18be3392ea4330d9617da4"}], "stats": {"total": 261, "additions": 213, "deletions": 48}, "files": [{"sha": "2ab948958d04796d309d41bbca50b3866da6b19f", "filename": "compiler/rustc_lint/src/early.rs", "status": "modified", "additions": 17, "deletions": 17, "changes": 34, "blob_url": "https://github.com/rust-lang/rust/blob/896a59d8dbf0387815d1022b4851686b9376ebe7/compiler%2Frustc_lint%2Fsrc%2Fearly.rs", "raw_url": "https://github.com/rust-lang/rust/raw/896a59d8dbf0387815d1022b4851686b9376ebe7/compiler%2Frustc_lint%2Fsrc%2Fearly.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_lint%2Fsrc%2Fearly.rs?ref=896a59d8dbf0387815d1022b4851686b9376ebe7", "patch": "@@ -424,10 +424,25 @@ pub fn check_ast_node<'a>(\n     let mut passes: Vec<_> = passes.iter().map(|p| (p)()).collect();\n     let mut buffered = lint_buffer.unwrap_or_default();\n \n-    if !sess.opts.debugging_opts.no_interleave_lints {\n+    if sess.opts.debugging_opts.no_interleave_lints {\n+        for (i, pass) in passes.iter_mut().enumerate() {\n+            buffered =\n+                sess.prof.extra_verbose_generic_activity(\"run_lint\", pass.name()).run(|| {\n+                    early_lint_node(\n+                        sess,\n+                        !pre_expansion && i == 0,\n+                        lint_store,\n+                        registered_tools,\n+                        buffered,\n+                        EarlyLintPassObjects { lints: slice::from_mut(pass) },\n+                        check_node,\n+                    )\n+                });\n+        }\n+    } else {\n         buffered = early_lint_node(\n             sess,\n-            pre_expansion,\n+            !pre_expansion,\n             lint_store,\n             registered_tools,\n             buffered,\n@@ -446,21 +461,6 @@ pub fn check_ast_node<'a>(\n                 check_node,\n             );\n         }\n-    } else {\n-        for (i, pass) in passes.iter_mut().enumerate() {\n-            buffered =\n-                sess.prof.extra_verbose_generic_activity(\"run_lint\", pass.name()).run(|| {\n-                    early_lint_node(\n-                        sess,\n-                        pre_expansion && i == 0,\n-                        lint_store,\n-                        registered_tools,\n-                        buffered,\n-                        EarlyLintPassObjects { lints: slice::from_mut(pass) },\n-                        check_node,\n-                    )\n-                });\n-        }\n     }\n \n     // All of the buffered lints should have been emitted at this point."}, {"sha": "a067534b1893883c5715768d077a97df268f2afb", "filename": "compiler/rustc_lint_defs/src/builtin.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/896a59d8dbf0387815d1022b4851686b9376ebe7/compiler%2Frustc_lint_defs%2Fsrc%2Fbuiltin.rs", "raw_url": "https://github.com/rust-lang/rust/raw/896a59d8dbf0387815d1022b4851686b9376ebe7/compiler%2Frustc_lint_defs%2Fsrc%2Fbuiltin.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_lint_defs%2Fsrc%2Fbuiltin.rs?ref=896a59d8dbf0387815d1022b4851686b9376ebe7", "patch": "@@ -474,7 +474,7 @@ declare_lint! {\n }\n \n declare_lint! {\n-    /// The `unknown_lints` lint detects unrecognized lint attribute.\n+    /// The `unknown_lints` lint detects unrecognized lint attributes.\n     ///\n     /// ### Example\n     ///"}, {"sha": "af9b8dedc73afaa6c82005016443327ad1d44621", "filename": "src/test/ui-fulldeps/lint-tool-test.stderr", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/896a59d8dbf0387815d1022b4851686b9376ebe7/src%2Ftest%2Fui-fulldeps%2Flint-tool-test.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/896a59d8dbf0387815d1022b4851686b9376ebe7/src%2Ftest%2Fui-fulldeps%2Flint-tool-test.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui-fulldeps%2Flint-tool-test.stderr?ref=896a59d8dbf0387815d1022b4851686b9376ebe7", "patch": "@@ -18,14 +18,6 @@ warning: lint name `test_group` is deprecated and may not have an effect in the\n LL | #[allow(test_group)]\n    |         ^^^^^^^^^^ help: change it to: `clippy::test_group`\n \n-warning: unknown lint: `this_lint_does_not_exist`\n-  --> $DIR/lint-tool-test.rs:36:8\n-   |\n-LL | #[deny(this_lint_does_not_exist)]\n-   |        ^^^^^^^^^^^^^^^^^^^^^^^^\n-   |\n-   = note: `#[warn(unknown_lints)]` on by default\n-\n warning: lint name `test_lint` is deprecated and may not have an effect in the future.\n   --> $DIR/lint-tool-test.rs:9:23\n    |\n@@ -44,6 +36,14 @@ warning: lint name `test_group` is deprecated and may not have an effect in the\n LL | #[allow(test_group)]\n    |         ^^^^^^^^^^ help: change it to: `clippy::test_group`\n \n+warning: unknown lint: `this_lint_does_not_exist`\n+  --> $DIR/lint-tool-test.rs:36:8\n+   |\n+LL | #[deny(this_lint_does_not_exist)]\n+   |        ^^^^^^^^^^^^^^^^^^^^^^^^\n+   |\n+   = note: `#[warn(unknown_lints)]` on by default\n+\n warning: use of deprecated attribute `plugin`: compiler plugins are deprecated. See https://github.com/rust-lang/rust/pull/64675\n   --> $DIR/lint-tool-test.rs:6:1\n    |"}, {"sha": "06e1bd84c8ba25c3767b809782d0aeda602a2637", "filename": "src/test/ui/feature-gates/issue-43106-gating-of-builtin-attrs.stderr", "status": "modified", "additions": 14, "deletions": 14, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/896a59d8dbf0387815d1022b4851686b9376ebe7/src%2Ftest%2Fui%2Ffeature-gates%2Fissue-43106-gating-of-builtin-attrs.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/896a59d8dbf0387815d1022b4851686b9376ebe7/src%2Ftest%2Fui%2Ffeature-gates%2Fissue-43106-gating-of-builtin-attrs.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Fissue-43106-gating-of-builtin-attrs.stderr?ref=896a59d8dbf0387815d1022b4851686b9376ebe7", "patch": "@@ -1,3 +1,17 @@\n+warning: `#[macro_escape]` is a deprecated synonym for `#[macro_use]`\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:401:17\n+   |\n+LL |     mod inner { #![macro_escape] }\n+   |                 ^^^^^^^^^^^^^^^^\n+   |\n+   = help: try an outer attribute: `#[macro_use]`\n+\n+warning: `#[macro_escape]` is a deprecated synonym for `#[macro_use]`\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:398:1\n+   |\n+LL | #[macro_escape]\n+   | ^^^^^^^^^^^^^^^\n+\n warning: unknown lint: `x5400`\n   --> $DIR/issue-43106-gating-of-builtin-attrs.rs:46:9\n    |\n@@ -172,20 +186,6 @@ warning: unknown lint: `x5100`\n LL |     #[deny(x5100)] impl S { }\n    |            ^^^^^\n \n-warning: `#[macro_escape]` is a deprecated synonym for `#[macro_use]`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:401:17\n-   |\n-LL |     mod inner { #![macro_escape] }\n-   |                 ^^^^^^^^^^^^^^^^\n-   |\n-   = help: try an outer attribute: `#[macro_use]`\n-\n-warning: `#[macro_escape]` is a deprecated synonym for `#[macro_use]`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:398:1\n-   |\n-LL | #[macro_escape]\n-   | ^^^^^^^^^^^^^^^\n-\n warning: use of deprecated attribute `crate_id`: no longer used.\n   --> $DIR/issue-43106-gating-of-builtin-attrs.rs:85:1\n    |"}, {"sha": "a2581658920b9e2195281c84d0955b89ac40ceff", "filename": "src/test/ui/lint/issue-97094.interleaved.stderr", "status": "added", "additions": 53, "deletions": 0, "changes": 53, "blob_url": "https://github.com/rust-lang/rust/blob/896a59d8dbf0387815d1022b4851686b9376ebe7/src%2Ftest%2Fui%2Flint%2Fissue-97094.interleaved.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/896a59d8dbf0387815d1022b4851686b9376ebe7/src%2Ftest%2Fui%2Flint%2Fissue-97094.interleaved.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Fissue-97094.interleaved.stderr?ref=896a59d8dbf0387815d1022b4851686b9376ebe7", "patch": "@@ -0,0 +1,53 @@\n+error: unknown lint: `nonex_lint_top_level`\n+  --> $DIR/issue-97094.rs:14:26\n+   |\n+LL | #![cfg_attr(all(), allow(nonex_lint_top_level))]\n+   |                          ^^^^^^^^^^^^^^^^^^^^\n+   |\n+note: the lint level is defined here\n+  --> $DIR/issue-97094.rs:10:9\n+   |\n+LL | #![deny(warnings)]\n+   |         ^^^^^^^^\n+   = note: `#[deny(unknown_lints)]` implied by `#[deny(warnings)]`\n+\n+error: lint `bare_trait_object` has been renamed to `bare_trait_objects`\n+  --> $DIR/issue-97094.rs:16:26\n+   |\n+LL | #![cfg_attr(all(), allow(bare_trait_object))]\n+   |                          ^^^^^^^^^^^^^^^^^ help: use the new name: `bare_trait_objects`\n+   |\n+   = note: `#[deny(renamed_and_removed_lints)]` implied by `#[deny(warnings)]`\n+\n+error: unknown lint: `nonex_lint_mod`\n+  --> $DIR/issue-97094.rs:19:25\n+   |\n+LL | #[cfg_attr(all(), allow(nonex_lint_mod))]\n+   |                         ^^^^^^^^^^^^^^\n+\n+error: unknown lint: `nonex_lint_mod_inner`\n+  --> $DIR/issue-97094.rs:22:30\n+   |\n+LL |     #![cfg_attr(all(), allow(nonex_lint_mod_inner))]\n+   |                              ^^^^^^^^^^^^^^^^^^^^\n+\n+error: unknown lint: `nonex_lint_fn`\n+  --> $DIR/issue-97094.rs:26:25\n+   |\n+LL | #[cfg_attr(all(), allow(nonex_lint_fn))]\n+   |                         ^^^^^^^^^^^^^\n+\n+error: unknown lint: `nonex_lint_in_macro`\n+  --> $DIR/issue-97094.rs:37:29\n+   |\n+LL |     #[cfg_attr(all(), allow(nonex_lint_in_macro))]\n+   |                             ^^^^^^^^^^^^^^^^^^^\n+\n+error: unknown lint: `nonex_lint_fn`\n+  --> $DIR/issue-97094.rs:56:13\n+   |\n+LL |     #[allow(nonex_lint_fn)]\n+   |             ^^^^^^^^^^^^^\n+\n+error: aborting due to 7 previous errors\n+"}, {"sha": "a2581658920b9e2195281c84d0955b89ac40ceff", "filename": "src/test/ui/lint/issue-97094.nointerleaved.stderr", "status": "added", "additions": 53, "deletions": 0, "changes": 53, "blob_url": "https://github.com/rust-lang/rust/blob/896a59d8dbf0387815d1022b4851686b9376ebe7/src%2Ftest%2Fui%2Flint%2Fissue-97094.nointerleaved.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/896a59d8dbf0387815d1022b4851686b9376ebe7/src%2Ftest%2Fui%2Flint%2Fissue-97094.nointerleaved.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Fissue-97094.nointerleaved.stderr?ref=896a59d8dbf0387815d1022b4851686b9376ebe7", "patch": "@@ -0,0 +1,53 @@\n+error: unknown lint: `nonex_lint_top_level`\n+  --> $DIR/issue-97094.rs:14:26\n+   |\n+LL | #![cfg_attr(all(), allow(nonex_lint_top_level))]\n+   |                          ^^^^^^^^^^^^^^^^^^^^\n+   |\n+note: the lint level is defined here\n+  --> $DIR/issue-97094.rs:10:9\n+   |\n+LL | #![deny(warnings)]\n+   |         ^^^^^^^^\n+   = note: `#[deny(unknown_lints)]` implied by `#[deny(warnings)]`\n+\n+error: lint `bare_trait_object` has been renamed to `bare_trait_objects`\n+  --> $DIR/issue-97094.rs:16:26\n+   |\n+LL | #![cfg_attr(all(), allow(bare_trait_object))]\n+   |                          ^^^^^^^^^^^^^^^^^ help: use the new name: `bare_trait_objects`\n+   |\n+   = note: `#[deny(renamed_and_removed_lints)]` implied by `#[deny(warnings)]`\n+\n+error: unknown lint: `nonex_lint_mod`\n+  --> $DIR/issue-97094.rs:19:25\n+   |\n+LL | #[cfg_attr(all(), allow(nonex_lint_mod))]\n+   |                         ^^^^^^^^^^^^^^\n+\n+error: unknown lint: `nonex_lint_mod_inner`\n+  --> $DIR/issue-97094.rs:22:30\n+   |\n+LL |     #![cfg_attr(all(), allow(nonex_lint_mod_inner))]\n+   |                              ^^^^^^^^^^^^^^^^^^^^\n+\n+error: unknown lint: `nonex_lint_fn`\n+  --> $DIR/issue-97094.rs:26:25\n+   |\n+LL | #[cfg_attr(all(), allow(nonex_lint_fn))]\n+   |                         ^^^^^^^^^^^^^\n+\n+error: unknown lint: `nonex_lint_in_macro`\n+  --> $DIR/issue-97094.rs:37:29\n+   |\n+LL |     #[cfg_attr(all(), allow(nonex_lint_in_macro))]\n+   |                             ^^^^^^^^^^^^^^^^^^^\n+\n+error: unknown lint: `nonex_lint_fn`\n+  --> $DIR/issue-97094.rs:56:13\n+   |\n+LL |     #[allow(nonex_lint_fn)]\n+   |             ^^^^^^^^^^^^^\n+\n+error: aborting due to 7 previous errors\n+"}, {"sha": "aeaead1bd11bd5577b126633c2f0e601112e71da", "filename": "src/test/ui/lint/issue-97094.rs", "status": "added", "additions": 59, "deletions": 0, "changes": 59, "blob_url": "https://github.com/rust-lang/rust/blob/896a59d8dbf0387815d1022b4851686b9376ebe7/src%2Ftest%2Fui%2Flint%2Fissue-97094.rs", "raw_url": "https://github.com/rust-lang/rust/raw/896a59d8dbf0387815d1022b4851686b9376ebe7/src%2Ftest%2Fui%2Flint%2Fissue-97094.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Fissue-97094.rs?ref=896a59d8dbf0387815d1022b4851686b9376ebe7", "patch": "@@ -0,0 +1,59 @@\n+// revisions: interleaved nointerleaved\n+// [nointerleaved]compile-flags: -Z no-interleave-lints\n+\n+// This test has two revisions because the logic change\n+// needed to make this test pass had to be adjusted\n+// for no-interleave-lints. Should the debug option\n+// be removed one day, please don't remove this\n+// test entirely, just remove the revision from it.\n+\n+#![deny(warnings)]\n+\n+// Ensure that unknown lints inside cfg-attr's are linted for\n+\n+#![cfg_attr(all(), allow(nonex_lint_top_level))]\n+//~^ ERROR unknown lint\n+#![cfg_attr(all(), allow(bare_trait_object))]\n+//~^ ERROR has been renamed\n+\n+#[cfg_attr(all(), allow(nonex_lint_mod))]\n+//~^ ERROR unknown lint\n+mod baz {\n+    #![cfg_attr(all(), allow(nonex_lint_mod_inner))]\n+    //~^ ERROR unknown lint\n+}\n+\n+#[cfg_attr(all(), allow(nonex_lint_fn))]\n+//~^ ERROR unknown lint\n+pub fn main() {}\n+\n+macro_rules! bar {\n+    ($($t:tt)*) => {\n+        $($t)*\n+    };\n+}\n+\n+bar!(\n+    #[cfg_attr(all(), allow(nonex_lint_in_macro))]\n+    //~^ ERROR unknown lint\n+    pub fn _bar() {}\n+);\n+\n+// No warning for non-applying cfg\n+#[cfg_attr(any(), allow(nonex_lint_fn))]\n+pub fn _foo() {}\n+\n+// Allowing unknown lints works if inside cfg_attr\n+#[cfg_attr(all(), allow(unknown_lints))]\n+mod bar_allowed {\n+    #[allow(nonex_lint_fn)]\n+    fn _foo() {}\n+}\n+\n+// ... but not if the cfg_attr doesn't evaluate\n+#[cfg_attr(any(), allow(unknown_lints))]\n+mod bar_not_allowed {\n+    #[allow(nonex_lint_fn)]\n+    //~^ ERROR unknown lint\n+    fn _foo() {}\n+}"}, {"sha": "5521af17c84128e11ec70c02df890d25937a53f4", "filename": "src/test/ui/lint/reasons-erroneous.stderr", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/896a59d8dbf0387815d1022b4851686b9376ebe7/src%2Ftest%2Fui%2Flint%2Freasons-erroneous.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/896a59d8dbf0387815d1022b4851686b9376ebe7/src%2Ftest%2Fui%2Flint%2Freasons-erroneous.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Freasons-erroneous.stderr?ref=896a59d8dbf0387815d1022b4851686b9376ebe7", "patch": "@@ -58,14 +58,6 @@ error[E0452]: malformed lint attribute input\n LL | #![warn(keyword_idents, reason = \"root in rubble\", macro_use_extern_crate)]\n    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^ reason in lint attribute must come last\n \n-warning: unknown lint: `reason`\n-  --> $DIR/reasons-erroneous.rs:50:39\n-   |\n-LL | #![warn(missing_copy_implementations, reason)]\n-   |                                       ^^^^^^\n-   |\n-   = note: `#[warn(unknown_lints)]` on by default\n-\n error[E0452]: malformed lint attribute input\n   --> $DIR/reasons-erroneous.rs:3:58\n    |\n@@ -126,6 +118,14 @@ error[E0452]: malformed lint attribute input\n LL | #![warn(keyword_idents, reason = \"root in rubble\", macro_use_extern_crate)]\n    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^ reason in lint attribute must come last\n \n+warning: unknown lint: `reason`\n+  --> $DIR/reasons-erroneous.rs:50:39\n+   |\n+LL | #![warn(missing_copy_implementations, reason)]\n+   |                                       ^^^^^^\n+   |\n+   = note: `#[warn(unknown_lints)]` on by default\n+\n error: aborting due to 20 previous errors; 1 warning emitted\n \n For more information about this error, try `rustc --explain E0452`."}]}