{"sha": "459aea8f520ef74f81863f17c4fc68bd7ef607fb", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ1OWFlYThmNTIwZWY3NGY4MTg2M2YxN2M0ZmM2OGJkN2VmNjA3ZmI=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2019-10-25T18:26:01Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2019-10-25T18:26:01Z"}, "message": "test align_to example", "tree": {"sha": "6d70358b1771149aa54d919fe1ff80f5e8c94e48", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6d70358b1771149aa54d919fe1ff80f5e8c94e48"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/459aea8f520ef74f81863f17c4fc68bd7ef607fb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/459aea8f520ef74f81863f17c4fc68bd7ef607fb", "html_url": "https://github.com/rust-lang/rust/commit/459aea8f520ef74f81863f17c4fc68bd7ef607fb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/459aea8f520ef74f81863f17c4fc68bd7ef607fb/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ffb147657d6e2e8ca61eeb1a35e1fb72c459dc6a", "url": "https://api.github.com/repos/rust-lang/rust/commits/ffb147657d6e2e8ca61eeb1a35e1fb72c459dc6a", "html_url": "https://github.com/rust-lang/rust/commit/ffb147657d6e2e8ca61eeb1a35e1fb72c459dc6a"}], "stats": {"total": 23, "additions": 23, "deletions": 0}, "files": [{"sha": "1202fd00be157a8b6176f766533ce7e3a8b71ac7", "filename": "tests/run-pass/align_offset.rs", "status": "modified", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/459aea8f520ef74f81863f17c4fc68bd7ef607fb/tests%2Frun-pass%2Falign_offset.rs", "raw_url": "https://github.com/rust-lang/rust/raw/459aea8f520ef74f81863f17c4fc68bd7ef607fb/tests%2Frun-pass%2Falign_offset.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frun-pass%2Falign_offset.rs?ref=459aea8f520ef74f81863f17c4fc68bd7ef607fb", "patch": "@@ -71,8 +71,31 @@ fn test_from_utf8() {\n     println!(\"{:?}\", std::str::from_utf8(content).unwrap());\n }\n \n+fn test_u64_array() {\n+    #[derive(Default)]\n+    #[repr(align(8))]\n+    struct AlignToU64<T>(T);\n+\n+    const BYTE_LEN: usize = std::mem::size_of::<[u64; 4]>();\n+    type Data = AlignToU64<[u8; BYTE_LEN]>;\n+\n+    fn example(data: &Data) {\n+        let (head, u64_arrays, tail) = unsafe { data.0.align_to::<[u64; 4]>() };\n+\n+        assert!(head.is_empty(), \"buffer was not aligned for 64-bit numbers\");\n+        assert_eq!(u64_arrays.len(), 1, \"buffer was not long enough\");\n+        assert!(tail.is_empty(), \"buffer was too long\");\n+\n+        let u64_array = &u64_arrays[0];\n+        let _val = u64_array[0]; // make sure we can actually load this\n+    }\n+\n+    example(&Data::default());\n+}\n+\n fn main() {\n     test_align_offset();\n     test_align_to();\n     test_from_utf8();\n+    test_u64_array();\n }"}]}