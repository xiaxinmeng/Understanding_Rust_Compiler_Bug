{"sha": "e823db06985d6782ff3803d3a4dea67a3c18426c", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU4MjNkYjA2OTg1ZDY3ODJmZjM4MDNkM2E0ZGVhNjdhM2MxODQyNmM=", "commit": {"author": {"name": "DJMcNab", "email": "36049421+DJMcNab@users.noreply.github.com", "date": "2018-12-09T10:29:13Z"}, "committer": {"name": "DJMcNab", "email": "36049421+DJMcNab@users.noreply.github.com", "date": "2018-12-09T10:29:13Z"}, "message": "Implement and test format hook", "tree": {"sha": "b8377d95bdb62db3553d7bf3107c8c56052861a9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b8377d95bdb62db3553d7bf3107c8c56052861a9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e823db06985d6782ff3803d3a4dea67a3c18426c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e823db06985d6782ff3803d3a4dea67a3c18426c", "html_url": "https://github.com/rust-lang/rust/commit/e823db06985d6782ff3803d3a4dea67a3c18426c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e823db06985d6782ff3803d3a4dea67a3c18426c/comments", "author": {"login": "DJMcNab", "id": 36049421, "node_id": "MDQ6VXNlcjM2MDQ5NDIx", "avatar_url": "https://avatars.githubusercontent.com/u/36049421?v=4", "gravatar_id": "", "url": "https://api.github.com/users/DJMcNab", "html_url": "https://github.com/DJMcNab", "followers_url": "https://api.github.com/users/DJMcNab/followers", "following_url": "https://api.github.com/users/DJMcNab/following{/other_user}", "gists_url": "https://api.github.com/users/DJMcNab/gists{/gist_id}", "starred_url": "https://api.github.com/users/DJMcNab/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/DJMcNab/subscriptions", "organizations_url": "https://api.github.com/users/DJMcNab/orgs", "repos_url": "https://api.github.com/users/DJMcNab/repos", "events_url": "https://api.github.com/users/DJMcNab/events{/privacy}", "received_events_url": "https://api.github.com/users/DJMcNab/received_events", "type": "User", "site_admin": false}, "committer": {"login": "DJMcNab", "id": 36049421, "node_id": "MDQ6VXNlcjM2MDQ5NDIx", "avatar_url": "https://avatars.githubusercontent.com/u/36049421?v=4", "gravatar_id": "", "url": "https://api.github.com/users/DJMcNab", "html_url": "https://github.com/DJMcNab", "followers_url": "https://api.github.com/users/DJMcNab/followers", "following_url": "https://api.github.com/users/DJMcNab/following{/other_user}", "gists_url": "https://api.github.com/users/DJMcNab/gists{/gist_id}", "starred_url": "https://api.github.com/users/DJMcNab/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/DJMcNab/subscriptions", "organizations_url": "https://api.github.com/users/DJMcNab/orgs", "repos_url": "https://api.github.com/users/DJMcNab/repos", "events_url": "https://api.github.com/users/DJMcNab/events{/privacy}", "received_events_url": "https://api.github.com/users/DJMcNab/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "904438e993b4cc3c1d9269a44436c1b112de16c0", "url": "https://api.github.com/repos/rust-lang/rust/commits/904438e993b4cc3c1d9269a44436c1b112de16c0", "html_url": "https://github.com/rust-lang/rust/commit/904438e993b4cc3c1d9269a44436c1b112de16c0"}], "stats": {"total": 49, "additions": 41, "deletions": 8}, "files": [{"sha": "79f1dc38963edf66b0b55c2dbb616c6d2dc04f50", "filename": ".cargo/config", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/e823db06985d6782ff3803d3a4dea67a3c18426c/.cargo%2Fconfig", "raw_url": "https://github.com/rust-lang/rust/raw/e823db06985d6782ff3803d3a4dea67a3c18426c/.cargo%2Fconfig", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/.cargo%2Fconfig?ref=e823db06985d6782ff3803d3a4dea67a3c18426c", "patch": "@@ -4,6 +4,7 @@ gen-syntax =    \"run --package tools -- gen-syntax\"\n gen-tests =    \"run --package tools -- gen-tests\"\n install-code = \"run --package tools -- install-code\"\n format =    \"run --package tools -- format\"\n+format-hook =    \"run --package tools -- format-hook\"\n \n render-test = \"run --package ra_cli -- render-test\"\n parse =       \"run --package ra_cli -- parse\""}, {"sha": "01acdda7c3c19fcf48b0202082dcc0dee96d06bd", "filename": "crates/ra_editor/src/typing.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e823db06985d6782ff3803d3a4dea67a3c18426c/crates%2Fra_editor%2Fsrc%2Ftyping.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e823db06985d6782ff3803d3a4dea67a3c18426c/crates%2Fra_editor%2Fsrc%2Ftyping.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_editor%2Fsrc%2Ftyping.rs?ref=e823db06985d6782ff3803d3a4dea67a3c18426c", "patch": "@@ -20,7 +20,7 @@ pub fn join_lines(file: &SourceFileNode, range: TextRange) -> LocalEdit {\n                 return LocalEdit {\n                     edit: EditBuilder::new().finish(),\n                     cursor_position: None,\n-                }\n+                };\n             }\n             Some(pos) => pos,\n         };"}, {"sha": "d6c448f3b113ba345054c61137b1f0ecf6ff105d", "filename": "crates/tools/src/lib.rs", "status": "modified", "additions": 28, "deletions": 1, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/e823db06985d6782ff3803d3a4dea67a3c18426c/crates%2Ftools%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e823db06985d6782ff3803d3a4dea67a3c18426c/crates%2Ftools%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Ftools%2Fsrc%2Flib.rs?ref=e823db06985d6782ff3803d3a4dea67a3c18426c", "patch": "@@ -1,7 +1,11 @@\n use std::{\n     path::{Path, PathBuf},\n     process::{Command, Stdio},\n+    fs::OpenOptions,\n+    io::{Write, Error, ErrorKind}\n };\n+#[cfg(unix)]\n+use std::os::unix::fs::OpenOptionsExt;\n \n use failure::bail;\n use itertools::Itertools;\n@@ -39,7 +43,7 @@ pub fn collect_tests(s: &str) -> Vec<(usize, Test)> {\n         let (start_line, name) = loop {\n             match block.next() {\n                 Some((idx, line)) if line.starts_with(\"test \") => {\n-                    break (idx, line[\"test \".len()..].to_string())\n+                    break (idx, line[\"test \".len()..].to_string());\n                 }\n                 Some(_) => (),\n                 None => continue 'outer,\n@@ -116,3 +120,26 @@ fn install_rustfmt() -> Result<()> {\n         \".\",\n     )\n }\n+\n+pub fn install_format_hook() -> Result<()> {\n+    let path = Path::new(\"./.git/hooks/pre-commit\");\n+    if !path.exists() {\n+        let mut open_options = OpenOptions::new();\n+        #[cfg(unix)]\n+        {\n+            // Set as executable\n+            open_options.mode(0o770);\n+        }\n+        let mut file = open_options.write(true).create(true).open(path)?;\n+        write!(\n+            file,\n+            r#\"#!/bin/sh\n+\n+cargo format\n+git update-index --add .\"#\n+        )?;\n+    } else {\n+        return Err(Error::new(ErrorKind::AlreadyExists, \"Git hook already created\").into());\n+    }\n+    Ok(())\n+}"}, {"sha": "9e90ac5c21b12745ee9aee88dab579ec64c47b82", "filename": "crates/tools/src/main.rs", "status": "modified", "additions": 11, "deletions": 6, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/e823db06985d6782ff3803d3a4dea67a3c18426c/crates%2Ftools%2Fsrc%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e823db06985d6782ff3803d3a4dea67a3c18426c/crates%2Ftools%2Fsrc%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Ftools%2Fsrc%2Fmain.rs?ref=e823db06985d6782ff3803d3a4dea67a3c18426c", "patch": "@@ -7,7 +7,7 @@ use std::{\n use clap::{App, Arg, SubCommand};\n use failure::bail;\n \n-use tools::{collect_tests, generate, run, run_rustfmt, Mode, Overwrite, Result, Test, Verify};\n+use tools::{collect_tests, generate, install_format_hook, run, run_rustfmt, Mode, Overwrite, Result, Test, Verify};\n \n const GRAMMAR_DIR: &str = \"./crates/ra_syntax/src/grammar\";\n const INLINE_TESTS_DIR: &str = \"./crates/ra_syntax/tests/data/parser/inline\";\n@@ -25,17 +25,22 @@ fn main() -> Result<()> {\n         .subcommand(SubCommand::with_name(\"gen-tests\"))\n         .subcommand(SubCommand::with_name(\"install-code\"))\n         .subcommand(SubCommand::with_name(\"format\"))\n+        .subcommand(SubCommand::with_name(\"format-hook\"))\n         .get_matches();\n     let mode = if matches.is_present(\"verify\") {\n         Verify\n     } else {\n         Overwrite\n     };\n-    match matches.subcommand() {\n-        (\"install-code\", _) => install_code_extension()?,\n-        (\"gen-tests\", _) => gen_tests(mode)?,\n-        (\"gen-syntax\", _) => generate(Overwrite)?,\n-        (\"format\", _) => run_rustfmt(Overwrite)?,\n+    match matches\n+        .subcommand_name()\n+        .expect(\"Subcommand must be specified\")\n+    {\n+        \"install-code\" => install_code_extension()?,\n+        \"gen-tests\" => gen_tests(mode)?,\n+        \"gen-syntax\" => generate(Overwrite)?,\n+        \"format\" => run_rustfmt(mode)?,\n+        \"format-hook\" => install_format_hook()?,\n         _ => unreachable!(),\n     }\n     Ok(())"}]}