{"sha": "9f9afe57692298066cd3d030c544b3b0e0f72e37", "node_id": "MDY6Q29tbWl0NzI0NzEyOjlmOWFmZTU3NjkyMjk4MDY2Y2QzZDAzMGM1NDRiM2IwZTBmNzJlMzc=", "commit": {"author": {"name": "Vadim Chugunov", "email": "vadimcn@gmail.com", "date": "2015-11-08T01:44:44Z"}, "committer": {"name": "Vadim Chugunov", "email": "vadimcn@gmail.com", "date": "2015-11-08T01:56:55Z"}, "message": "Make sure rsbegin.o and rsend.o get packaged with target lib artifacts.\nAlso, unified libc startup objects finding logic with that of the `-musl` target, since conceptually they were doing the same thing.", "tree": {"sha": "60bc52a490c99fc5de0b9aad519ea65df978e0bd", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/60bc52a490c99fc5de0b9aad519ea65df978e0bd"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9f9afe57692298066cd3d030c544b3b0e0f72e37", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9f9afe57692298066cd3d030c544b3b0e0f72e37", "html_url": "https://github.com/rust-lang/rust/commit/9f9afe57692298066cd3d030c544b3b0e0f72e37", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9f9afe57692298066cd3d030c544b3b0e0f72e37/comments", "author": {"login": "vadimcn", "id": 3203809, "node_id": "MDQ6VXNlcjMyMDM4MDk=", "avatar_url": "https://avatars.githubusercontent.com/u/3203809?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vadimcn", "html_url": "https://github.com/vadimcn", "followers_url": "https://api.github.com/users/vadimcn/followers", "following_url": "https://api.github.com/users/vadimcn/following{/other_user}", "gists_url": "https://api.github.com/users/vadimcn/gists{/gist_id}", "starred_url": "https://api.github.com/users/vadimcn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vadimcn/subscriptions", "organizations_url": "https://api.github.com/users/vadimcn/orgs", "repos_url": "https://api.github.com/users/vadimcn/repos", "events_url": "https://api.github.com/users/vadimcn/events{/privacy}", "received_events_url": "https://api.github.com/users/vadimcn/received_events", "type": "User", "site_admin": false}, "committer": {"login": "vadimcn", "id": 3203809, "node_id": "MDQ6VXNlcjMyMDM4MDk=", "avatar_url": "https://avatars.githubusercontent.com/u/3203809?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vadimcn", "html_url": "https://github.com/vadimcn", "followers_url": "https://api.github.com/users/vadimcn/followers", "following_url": "https://api.github.com/users/vadimcn/following{/other_user}", "gists_url": "https://api.github.com/users/vadimcn/gists{/gist_id}", "starred_url": "https://api.github.com/users/vadimcn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vadimcn/subscriptions", "organizations_url": "https://api.github.com/users/vadimcn/orgs", "repos_url": "https://api.github.com/users/vadimcn/repos", "events_url": "https://api.github.com/users/vadimcn/events{/privacy}", "received_events_url": "https://api.github.com/users/vadimcn/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bb9b5f5edeb91fa7fc9bd7c220d69985e0175ba2", "url": "https://api.github.com/repos/rust-lang/rust/commits/bb9b5f5edeb91fa7fc9bd7c220d69985e0175ba2", "html_url": "https://github.com/rust-lang/rust/commit/bb9b5f5edeb91fa7fc9bd7c220d69985e0175ba2"}], "stats": {"total": 69, "additions": 17, "deletions": 52}, "files": [{"sha": "67453d8ca790ed5fb5aa4d4d30e5902efd40243a", "filename": "mk/cfg/i686-pc-windows-gnu.mk", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/9f9afe57692298066cd3d030c544b3b0e0f72e37/mk%2Fcfg%2Fi686-pc-windows-gnu.mk", "raw_url": "https://github.com/rust-lang/rust/raw/9f9afe57692298066cd3d030c544b3b0e0f72e37/mk%2Fcfg%2Fi686-pc-windows-gnu.mk", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/mk%2Fcfg%2Fi686-pc-windows-gnu.mk?ref=9f9afe57692298066cd3d030c544b3b0e0f72e37", "patch": "@@ -22,4 +22,5 @@ CFG_LDPATH_i686-pc-windows-gnu :=\n CFG_RUN_i686-pc-windows-gnu=$(2)\n CFG_RUN_TARG_i686-pc-windows-gnu=$(call CFG_RUN_i686-pc-windows-gnu,,$(2))\n CFG_GNU_TRIPLE_i686-pc-windows-gnu := i686-w64-mingw32\n-CFG_LIBC_STARTUP_OBJECTS_i686-pc-windows-gnu := crt2.o dllcrt2.o\n+CFG_THIRD_PARTY_OBJECTS_i686-pc-windows-gnu := crt2.o dllcrt2.o\n+CFG_INSTALLED_OBJECTS_i686-pc-windows-gnu := crt2.o dllcrt2.o rsbegin.o rsend.o"}, {"sha": "fc5001c3b027ca1d9fed67c75177116851d7ba51", "filename": "mk/cfg/x86_64-pc-windows-gnu.mk", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/9f9afe57692298066cd3d030c544b3b0e0f72e37/mk%2Fcfg%2Fx86_64-pc-windows-gnu.mk", "raw_url": "https://github.com/rust-lang/rust/raw/9f9afe57692298066cd3d030c544b3b0e0f72e37/mk%2Fcfg%2Fx86_64-pc-windows-gnu.mk", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/mk%2Fcfg%2Fx86_64-pc-windows-gnu.mk?ref=9f9afe57692298066cd3d030c544b3b0e0f72e37", "patch": "@@ -22,4 +22,5 @@ CFG_LDPATH_x86_64-pc-windows-gnu :=\n CFG_RUN_x86_64-pc-windows-gnu=$(2)\n CFG_RUN_TARG_x86_64-pc-windows-gnu=$(call CFG_RUN_x86_64-pc-windows-gnu,,$(2))\n CFG_GNU_TRIPLE_x86_64-pc-windows-gnu := x86_64-w64-mingw32\n-CFG_LIBC_STARTUP_OBJECTS_x86_64-pc-windows-gnu := crt2.o dllcrt2.o\n\\ No newline at end of file\n+CFG_THIRD_PARTY_OBJECTS_x86_64-pc-windows-gnu := crt2.o dllcrt2.o\n+CFG_INSTALLED_OBJECTS_x86_64-pc-windows-gnu := crt2.o dllcrt2.o rsbegin.o rsend.o"}, {"sha": "9d6dd5c73d7b7eddb9c38223f3ea6710c8ee8273", "filename": "mk/cfg/x86_64-unknown-linux-musl.mk", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/9f9afe57692298066cd3d030c544b3b0e0f72e37/mk%2Fcfg%2Fx86_64-unknown-linux-musl.mk", "raw_url": "https://github.com/rust-lang/rust/raw/9f9afe57692298066cd3d030c544b3b0e0f72e37/mk%2Fcfg%2Fx86_64-unknown-linux-musl.mk", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/mk%2Fcfg%2Fx86_64-unknown-linux-musl.mk?ref=9f9afe57692298066cd3d030c544b3b0e0f72e37", "patch": "@@ -21,8 +21,8 @@ CFG_LDPATH_x86_64-unknown-linux-musl :=\n CFG_RUN_x86_64-unknown-linux-musl=$(2)\n CFG_RUN_TARG_x86_64-unknown-linux-musl=$(call CFG_RUN_x86_64-unknown-linux-musl,,$(2))\n CFG_GNU_TRIPLE_x86_64-unknown-linux-musl := x86_64-unknown-linux-musl\n+CFG_THIRD_PARTY_OBJECTS_x86_64-unknown-linux-musl := crt1.o crti.o crtn.o\n+CFG_INSTALLED_OBJECTS_x86_64-unknown-linux-musl := crt1.o crti.o crtn.o\n \n NATIVE_DEPS_libc_T_x86_64-unknown-linux-musl += libc.a\n-NATIVE_DEPS_std_T_x86_64-unknown-linux-musl += libunwind.a \\\n-\tcrt1.o crti.o crtn.o\n-INSTALLED_OBJECTS_x86_64-unknown-linux-musl += crt1.o crti.o crtn.o\n+NATIVE_DEPS_std_T_x86_64-unknown-linux-musl += libunwind.a crt1.o crti.o crtn.o"}, {"sha": "c0b6093fa4c0793af8ceebdd363ac3e63864e00c", "filename": "mk/main.mk", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9f9afe57692298066cd3d030c544b3b0e0f72e37/mk%2Fmain.mk", "raw_url": "https://github.com/rust-lang/rust/raw/9f9afe57692298066cd3d030c544b3b0e0f72e37/mk%2Fmain.mk", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/mk%2Fmain.mk?ref=9f9afe57692298066cd3d030c544b3b0e0f72e37", "patch": "@@ -415,7 +415,7 @@ endif\n # Prerequisites for using the stageN compiler to build target artifacts\n TSREQ$(1)_T_$(2)_H_$(3) = \\\n \t$$(HSREQ$(1)_H_$(3)) \\\n-\t$$(foreach obj,$$(INSTALLED_OBJECTS_$(2)),\\\n+\t$$(foreach obj,$$(REQUIRED_OBJECTS_$(2)),\\\n \t\t$$(TLIB$(1)_T_$(2)_H_$(3))/$$(obj))\n \n # Prerequisites for a working stageN compiler and libraries, for a specific"}, {"sha": "b8058882f9d94382c29a6eb17f566701aa0052de", "filename": "mk/platform.mk", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/9f9afe57692298066cd3d030c544b3b0e0f72e37/mk%2Fplatform.mk", "raw_url": "https://github.com/rust-lang/rust/raw/9f9afe57692298066cd3d030c544b3b0e0f72e37/mk%2Fplatform.mk", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/mk%2Fplatform.mk?ref=9f9afe57692298066cd3d030c544b3b0e0f72e37", "patch": "@@ -113,7 +113,10 @@ CFG_RLIB_GLOB=lib$(1)-*.rlib\n include $(wildcard $(CFG_SRC_DIR)mk/cfg/*.mk)\n \n define ADD_INSTALLED_OBJECTS\n+  INSTALLED_OBJECTS_$(1) += $$(CFG_INSTALLED_OBJECTS_$(1))\n+  REQUIRED_OBJECTS_$(1) += $$(CFG_THIRD_PARTY_OBJECTS_$(1))\n   INSTALLED_OBJECTS_$(1) += $$(call CFG_STATIC_LIB_NAME_$(1),compiler-rt)\n+  REQUIRED_OBJECTS_$(1) += $$(call CFG_STATIC_LIB_NAME_$(1),compiler-rt)\n endef\n \n $(foreach target,$(CFG_TARGET), \\"}, {"sha": "8433b588e6ba464982c8f78a81ea2f9ff586153b", "filename": "mk/rt.mk", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/9f9afe57692298066cd3d030c544b3b0e0f72e37/mk%2Frt.mk", "raw_url": "https://github.com/rust-lang/rust/raw/9f9afe57692298066cd3d030c544b3b0e0f72e37/mk%2Frt.mk", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/mk%2Frt.mk?ref=9f9afe57692298066cd3d030c544b3b0e0f72e37", "patch": "@@ -352,6 +352,10 @@ endif # endif for darwin\n ifeq ($$(findstring musl,$(1)),musl)\n $$(RT_OUTPUT_DIR_$(1))/%: $$(CFG_MUSL_ROOT)/lib/%\n \tcp $$^ $$@\n+else\n+# Ask gcc where it is\n+$$(RT_OUTPUT_DIR_$(1))/%:\n+\tcp $$(shell $$(CC_$(1)) -print-file-name=$$(@F)) $$@\n endif\n \n endef"}, {"sha": "da52b2f4d5e5b60a9e1126fb62ca19d56ca44909", "filename": "mk/target.mk", "status": "modified", "additions": 2, "deletions": 42, "changes": 44, "blob_url": "https://github.com/rust-lang/rust/blob/9f9afe57692298066cd3d030c544b3b0e0f72e37/mk%2Ftarget.mk", "raw_url": "https://github.com/rust-lang/rust/raw/9f9afe57692298066cd3d030c544b3b0e0f72e37/mk%2Ftarget.mk", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/mk%2Ftarget.mk?ref=9f9afe57692298066cd3d030c544b3b0e0f72e37", "patch": "@@ -132,26 +132,6 @@ $$(TBIN$(1)_T_$(2)_H_$(3))/$(4)$$(X_$(2)): \\\n \n endef\n \n-# Macro for building runtime startup objects\n-# Of those we have two kinds:\n-# - Rust runtime-specific: these are Rust's equivalents of GCC's crti.o/crtn.o,\n-# - LibC-specific: these we don't build ourselves, but copy them from the system lib directory.\n-#\n-# $(1) - stage\n-# $(2) - target triple\n-# $(3) - host triple\n-define TARGET_RT_STARTUP\n-\n-# Expand build rules for rsbegin.o and rsend.o\n-$$(foreach obj,rsbegin rsend, \\\n-\t$$(eval $$(call TARGET_RUSTRT_STARTUP_OBJ,$(1),$(2),$(3),$$(obj))) )\n-\n-# Expand build rules for libc startup objects\n-$$(foreach obj,$$(CFG_LIBC_STARTUP_OBJECTS_$(2)), \\\n-\t$$(eval $$(call TARGET_LIBC_STARTUP_OBJ,$(1),$(2),$(3),$$(obj))) )\n-\n-endef\n-\n # Macro for building runtime startup/shutdown object files;\n # these are Rust's equivalent of crti.o, crtn.o\n #\n@@ -178,27 +158,6 @@ $$(foreach crate, $$(TARGET_CRATES), \\\n \n endef\n \n-# Macro for copying libc startup objects into the target's lib directory.\n-#\n-# $(1) - stage\n-# $(2) - target triple\n-# $(3) - host triple\n-# $(4) - object name\n-define TARGET_LIBC_STARTUP_OBJ\n-\n-# Ask gcc where the startup object is located\n-$$(TLIB$(1)_T_$(2)_H_$(3))/$(4) : $$(shell $$(CC_$(2)) -print-file-name=$(4))\n-\t@$$(call E, cp: $$@)\n-\t@cp $$^ $$@\n-\n-# Make sure this is done before libcore has finished building\n-# (libcore itself does not depend on these objects, but other crates do,\n-#  so might as well do it here)\n-$$(TLIB$(1)_T_$(2)_H_$(3))/stamp.core : $$(TLIB$(1)_T_$(2)_H_$(3))/$(4)\n-\n-endef\n-\n-\n # Every recipe in RUST_TARGET_STAGE_N outputs to $$(TLIB$(1)_T_$(2)_H_$(3),\n # a directory that can be cleaned out during the middle of a run of\n # the get-snapshot.py script.  Therefore, every recipe needs to have\n@@ -245,4 +204,5 @@ $(foreach host,$(CFG_HOST), \\\n $(foreach host,$(CFG_HOST), \\\n  $(foreach target,$(CFG_TARGET), \\\n   $(foreach stage,$(STAGES), \\\n-   \t$(eval $(call TARGET_RT_STARTUP,$(stage),$(target),$(host))))))\n+  \t$(foreach obj,rsbegin rsend, \\\n+   \t  $(eval $(call TARGET_RUSTRT_STARTUP_OBJ,$(stage),$(target),$(host),$(obj)))))))"}, {"sha": "eda5f85408574afcdff4771940a9c53fe81db52a", "filename": "src/etc/make-win-dist.py", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/9f9afe57692298066cd3d030c544b3b0e0f72e37/src%2Fetc%2Fmake-win-dist.py", "raw_url": "https://github.com/rust-lang/rust/raw/9f9afe57692298066cd3d030c544b3b0e0f72e37/src%2Fetc%2Fmake-win-dist.py", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fetc%2Fmake-win-dist.py?ref=9f9afe57692298066cd3d030c544b3b0e0f72e37", "patch": "@@ -58,10 +58,6 @@ def make_win_dist(rust_root, plat_root, target_triple):\n         rustc_dlls.append(\"libgcc_s_seh-1.dll\")\n \n     target_libs = [ # MinGW libs\n-                    \"crtbegin.o\",\n-                    \"crtend.o\",\n-                    \"crt2.o\",\n-                    \"dllcrt2.o\",\n                     \"libgcc.a\",\n                     \"libgcc_eh.a\",\n                     \"libgcc_s.a\","}]}