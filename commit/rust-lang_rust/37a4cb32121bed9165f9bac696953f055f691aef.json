{"sha": "37a4cb32121bed9165f9bac696953f055f691aef", "node_id": "MDY6Q29tbWl0NzI0NzEyOjM3YTRjYjMyMTIxYmVkOTE2NWY5YmFjNjk2OTUzZjA1NWY2OTFhZWY=", "commit": {"author": {"name": "Alex Burka", "email": "aburka@seas.upenn.edu", "date": "2016-01-13T06:27:40Z"}, "committer": {"name": "Alex Burka", "email": "aburka@seas.upenn.edu", "date": "2016-02-27T07:01:41Z"}, "message": "feature-gate inclusive range syntax", "tree": {"sha": "1a742e020c5a9570bf5a4e3a12233a1d0bbeec52", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1a742e020c5a9570bf5a4e3a12233a1d0bbeec52"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/37a4cb32121bed9165f9bac696953f055f691aef", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/37a4cb32121bed9165f9bac696953f055f691aef", "html_url": "https://github.com/rust-lang/rust/commit/37a4cb32121bed9165f9bac696953f055f691aef", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/37a4cb32121bed9165f9bac696953f055f691aef/comments", "author": {"login": "durka", "id": 47007, "node_id": "MDQ6VXNlcjQ3MDA3", "avatar_url": "https://avatars.githubusercontent.com/u/47007?v=4", "gravatar_id": "", "url": "https://api.github.com/users/durka", "html_url": "https://github.com/durka", "followers_url": "https://api.github.com/users/durka/followers", "following_url": "https://api.github.com/users/durka/following{/other_user}", "gists_url": "https://api.github.com/users/durka/gists{/gist_id}", "starred_url": "https://api.github.com/users/durka/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/durka/subscriptions", "organizations_url": "https://api.github.com/users/durka/orgs", "repos_url": "https://api.github.com/users/durka/repos", "events_url": "https://api.github.com/users/durka/events{/privacy}", "received_events_url": "https://api.github.com/users/durka/received_events", "type": "User", "site_admin": false}, "committer": {"login": "durka", "id": 47007, "node_id": "MDQ6VXNlcjQ3MDA3", "avatar_url": "https://avatars.githubusercontent.com/u/47007?v=4", "gravatar_id": "", "url": "https://api.github.com/users/durka", "html_url": "https://github.com/durka", "followers_url": "https://api.github.com/users/durka/followers", "following_url": "https://api.github.com/users/durka/following{/other_user}", "gists_url": "https://api.github.com/users/durka/gists{/gist_id}", "starred_url": "https://api.github.com/users/durka/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/durka/subscriptions", "organizations_url": "https://api.github.com/users/durka/orgs", "repos_url": "https://api.github.com/users/durka/repos", "events_url": "https://api.github.com/users/durka/events{/privacy}", "received_events_url": "https://api.github.com/users/durka/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bd3197c748e7bfa652fb636fbb78fa7a42d826ca", "url": "https://api.github.com/repos/rust-lang/rust/commits/bd3197c748e7bfa652fb636fbb78fa7a42d826ca", "html_url": "https://github.com/rust-lang/rust/commit/bd3197c748e7bfa652fb636fbb78fa7a42d826ca"}], "stats": {"total": 13, "additions": 12, "deletions": 1}, "files": [{"sha": "9be52fb153d0e59987a8ec538b17cfd4083128ef", "filename": "src/libsyntax/feature_gate.rs", "status": "modified", "additions": 12, "deletions": 1, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/37a4cb32121bed9165f9bac696953f055f691aef/src%2Flibsyntax%2Ffeature_gate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/37a4cb32121bed9165f9bac696953f055f691aef/src%2Flibsyntax%2Ffeature_gate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Ffeature_gate.rs?ref=37a4cb32121bed9165f9bac696953f055f691aef", "patch": "@@ -241,7 +241,10 @@ const KNOWN_FEATURES: &'static [(&'static str, &'static str, Option<u32>, Status\n     (\"cfg_target_thread_local\", \"1.7.0\", Some(29594), Active),\n \n     // rustc internal\n-    (\"abi_vectorcall\", \"1.7.0\", None, Active)\n+    (\"abi_vectorcall\", \"1.7.0\", None, Active),\n+\n+    // a...b and ...b\n+    (\"inclusive_range_syntax\", \"1.7.0\", Some(28237), Active),\n ];\n // (changing above list without updating src/doc/reference.md makes @cmr sad)\n \n@@ -549,6 +552,7 @@ pub struct Features {\n     pub allow_placement_in: bool,\n     pub allow_box: bool,\n     pub allow_pushpop_unsafe: bool,\n+    pub allow_inclusive_range: bool,\n     pub simd_ffi: bool,\n     pub unmarked_api: bool,\n     /// spans of #![feature] attrs for stable language features. for error reporting\n@@ -585,6 +589,7 @@ impl Features {\n             allow_placement_in: false,\n             allow_box: false,\n             allow_pushpop_unsafe: false,\n+            allow_inclusive_range: false,\n             simd_ffi: false,\n             unmarked_api: false,\n             declared_stable_lang_features: Vec::new(),\n@@ -998,6 +1003,11 @@ impl<'a, 'v> Visitor<'v> for PostExpansionVisitor<'a> {\n                 self.gate_feature(\"type_ascription\", e.span,\n                                   \"type ascription is experimental\");\n             }\n+            ast::ExprRange(_, _, ast::RangeLimits::Closed) => {\n+                self.gate_feature(\"inclusive_range_syntax\",\n+                                  e.span,\n+                                  \"inclusive range syntax is experimental\");\n+            }\n             _ => {}\n         }\n         visit::walk_expr(self, e);\n@@ -1184,6 +1194,7 @@ fn check_crate_inner<F>(cm: &CodeMap, span_handler: &Handler,\n         allow_placement_in: cx.has_feature(\"placement_in_syntax\"),\n         allow_box: cx.has_feature(\"box_syntax\"),\n         allow_pushpop_unsafe: cx.has_feature(\"pushpop_unsafe\"),\n+        allow_inclusive_range: cx.has_feature(\"inclusive_range_syntax\"),\n         simd_ffi: cx.has_feature(\"simd_ffi\"),\n         unmarked_api: cx.has_feature(\"unmarked_api\"),\n         declared_stable_lang_features: accepted_features,"}]}