{"sha": "55c11e3db49558fe231867a436f7adb997e43b7b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjU1YzExZTNkYjQ5NTU4ZmUyMzE4NjdhNDM2ZjdhZGI5OTdlNDNiN2I=", "commit": {"author": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2018-07-10T13:29:01Z"}, "committer": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2018-07-13T12:39:44Z"}, "message": "Misc rustdoc changes", "tree": {"sha": "7669f25d18d2420d2d372142a6aa597f02ebb915", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7669f25d18d2420d2d372142a6aa597f02ebb915"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/55c11e3db49558fe231867a436f7adb997e43b7b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/55c11e3db49558fe231867a436f7adb997e43b7b", "html_url": "https://github.com/rust-lang/rust/commit/55c11e3db49558fe231867a436f7adb997e43b7b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/55c11e3db49558fe231867a436f7adb997e43b7b/comments", "author": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c0955a34bcb17f0b31d7b86522a520ebe7fa93ac", "url": "https://api.github.com/repos/rust-lang/rust/commits/c0955a34bcb17f0b31d7b86522a520ebe7fa93ac", "html_url": "https://github.com/rust-lang/rust/commit/c0955a34bcb17f0b31d7b86522a520ebe7fa93ac"}], "stats": {"total": 20, "additions": 4, "deletions": 16}, "files": [{"sha": "ea1189e4a6d6a81c7c589a1879bffbb4794e11e4", "filename": "src/librustdoc/clean/mod.rs", "status": "modified", "additions": 0, "deletions": 8, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/55c11e3db49558fe231867a436f7adb997e43b7b/src%2Flibrustdoc%2Fclean%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/55c11e3db49558fe231867a436f7adb997e43b7b/src%2Flibrustdoc%2Fclean%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fclean%2Fmod.rs?ref=55c11e3db49558fe231867a436f7adb997e43b7b", "patch": "@@ -4318,14 +4318,6 @@ where\n \n // Start of code copied from rust-clippy\n \n-pub fn get_trait_def_id(tcx: &TyCtxt, path: &[&str], use_local: bool) -> Option<DefId> {\n-    if use_local {\n-        path_to_def_local(tcx, path)\n-    } else {\n-        path_to_def(tcx, path)\n-    }\n-}\n-\n pub fn path_to_def_local(tcx: &TyCtxt, path: &[&str]) -> Option<DefId> {\n     let krate = tcx.hir.krate();\n     let mut items = krate.module.item_ids.clone();"}, {"sha": "2f372e690c3b5c54895200aced8e212e6d52bdb2", "filename": "src/librustdoc/core.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/55c11e3db49558fe231867a436f7adb997e43b7b/src%2Flibrustdoc%2Fcore.rs", "raw_url": "https://github.com/rust-lang/rust/raw/55c11e3db49558fe231867a436f7adb997e43b7b/src%2Flibrustdoc%2Fcore.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fcore.rs?ref=55c11e3db49558fe231867a436f7adb997e43b7b", "patch": "@@ -360,9 +360,9 @@ pub fn run_core(search_paths: SearchPaths,\n             };\n \n             let send_trait = if crate_name == Some(\"core\".to_string()) {\n-                clean::get_trait_def_id(&tcx, &[\"marker\", \"Send\"], true)\n+                clean::path_to_def_local(&tcx, &[\"marker\", \"Send\"])\n             } else {\n-                clean::get_trait_def_id(&tcx, &[\"core\", \"marker\", \"Send\"], false)\n+                clean::path_to_def(&tcx, &[\"core\", \"marker\", \"Send\"])\n             };\n \n             let ctxt = DocContext {\n@@ -387,7 +387,7 @@ pub fn run_core(search_paths: SearchPaths,\n             debug!(\"crate: {:?}\", tcx.hir.krate());\n \n             let krate = {\n-                let mut v = RustdocVisitor::new(&*cstore, &ctxt);\n+                let mut v = RustdocVisitor::new(&ctxt);\n                 v.visit(tcx.hir.krate());\n                 v.clean(&ctxt)\n             };"}, {"sha": "6e376d13cc567f2363917018357d3cc9aaafe781", "filename": "src/librustdoc/visit_ast.rs", "status": "modified", "additions": 1, "deletions": 5, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/55c11e3db49558fe231867a436f7adb997e43b7b/src%2Flibrustdoc%2Fvisit_ast.rs", "raw_url": "https://github.com/rust-lang/rust/raw/55c11e3db49558fe231867a436f7adb997e43b7b/src%2Flibrustdoc%2Fvisit_ast.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fvisit_ast.rs?ref=55c11e3db49558fe231867a436f7adb997e43b7b", "patch": "@@ -21,7 +21,6 @@ use syntax_pos::{self, Span};\n use rustc::hir::map as hir_map;\n use rustc::hir::def::Def;\n use rustc::hir::def_id::{DefId, LOCAL_CRATE};\n-use rustc::middle::cstore::CrateStore;\n use rustc::middle::privacy::AccessLevel;\n use rustc::util::nodemap::{FxHashSet, FxHashMap};\n \n@@ -40,7 +39,6 @@ use doctree::*;\n // framework from syntax?\n \n pub struct RustdocVisitor<'a, 'tcx: 'a, 'rcx: 'a> {\n-    pub cstore: &'a CrateStore,\n     pub module: Module,\n     pub attrs: hir::HirVec<ast::Attribute>,\n     pub cx: &'a core::DocContext<'a, 'tcx, 'rcx>,\n@@ -52,8 +50,7 @@ pub struct RustdocVisitor<'a, 'tcx: 'a, 'rcx: 'a> {\n }\n \n impl<'a, 'tcx, 'rcx> RustdocVisitor<'a, 'tcx, 'rcx> {\n-    pub fn new(cstore: &'a CrateStore,\n-               cx: &'a core::DocContext<'a, 'tcx, 'rcx>) -> RustdocVisitor<'a, 'tcx, 'rcx> {\n+    pub fn new(cx: &'a core::DocContext<'a, 'tcx, 'rcx>) -> RustdocVisitor<'a, 'tcx, 'rcx> {\n         // If the root is re-exported, terminate all recursion.\n         let mut stack = FxHashSet();\n         stack.insert(ast::CRATE_NODE_ID);\n@@ -65,7 +62,6 @@ impl<'a, 'tcx, 'rcx> RustdocVisitor<'a, 'tcx, 'rcx> {\n             inlining: false,\n             inside_public_path: true,\n             exact_paths: Some(FxHashMap()),\n-            cstore,\n         }\n     }\n "}]}