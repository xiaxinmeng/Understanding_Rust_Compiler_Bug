{"sha": "12207f6c66f6fa5a19790c9c8bf1b398a7dc263d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjEyMjA3ZjZjNjZmNmZhNWExOTc5MGM5YzhiZjFiMzk4YTdkYzI2M2Q=", "commit": {"author": {"name": "Felix S. Klock II", "email": "pnkfelix@pnkfx.org", "date": "2020-04-14T14:52:19Z"}, "committer": {"name": "Felix S. Klock II", "email": "pnkfelix@pnkfx.org", "date": "2020-04-14T14:52:19Z"}, "message": "Tests.\n\nNamely, a regression test for issue #69798 (export added), and the inverse of\nthat test (export removd).", "tree": {"sha": "b0870646b46eccfe02fad247e5001b62417e7c33", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b0870646b46eccfe02fad247e5001b62417e7c33"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/12207f6c66f6fa5a19790c9c8bf1b398a7dc263d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/12207f6c66f6fa5a19790c9c8bf1b398a7dc263d", "html_url": "https://github.com/rust-lang/rust/commit/12207f6c66f6fa5a19790c9c8bf1b398a7dc263d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/12207f6c66f6fa5a19790c9c8bf1b398a7dc263d/comments", "author": {"login": "pnkfelix", "id": 173127, "node_id": "MDQ6VXNlcjE3MzEyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/173127?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pnkfelix", "html_url": "https://github.com/pnkfelix", "followers_url": "https://api.github.com/users/pnkfelix/followers", "following_url": "https://api.github.com/users/pnkfelix/following{/other_user}", "gists_url": "https://api.github.com/users/pnkfelix/gists{/gist_id}", "starred_url": "https://api.github.com/users/pnkfelix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pnkfelix/subscriptions", "organizations_url": "https://api.github.com/users/pnkfelix/orgs", "repos_url": "https://api.github.com/users/pnkfelix/repos", "events_url": "https://api.github.com/users/pnkfelix/events{/privacy}", "received_events_url": "https://api.github.com/users/pnkfelix/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pnkfelix", "id": 173127, "node_id": "MDQ6VXNlcjE3MzEyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/173127?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pnkfelix", "html_url": "https://github.com/pnkfelix", "followers_url": "https://api.github.com/users/pnkfelix/followers", "following_url": "https://api.github.com/users/pnkfelix/following{/other_user}", "gists_url": "https://api.github.com/users/pnkfelix/gists{/gist_id}", "starred_url": "https://api.github.com/users/pnkfelix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pnkfelix/subscriptions", "organizations_url": "https://api.github.com/users/pnkfelix/orgs", "repos_url": "https://api.github.com/users/pnkfelix/repos", "events_url": "https://api.github.com/users/pnkfelix/events{/privacy}", "received_events_url": "https://api.github.com/users/pnkfelix/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e542f4fa59a2d1ae33bebcd1e11149f7644db5da", "url": "https://api.github.com/repos/rust-lang/rust/commits/e542f4fa59a2d1ae33bebcd1e11149f7644db5da", "html_url": "https://github.com/rust-lang/rust/commit/e542f4fa59a2d1ae33bebcd1e11149f7644db5da"}], "stats": {"total": 52, "additions": 52, "deletions": 0}, "files": [{"sha": "4d48a5f0ac528e2d138504350b4a2463abed0447", "filename": "src/test/incremental/thinlto/cgu_invalidated_when_export_added.rs", "status": "added", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/12207f6c66f6fa5a19790c9c8bf1b398a7dc263d/src%2Ftest%2Fincremental%2Fthinlto%2Fcgu_invalidated_when_export_added.rs", "raw_url": "https://github.com/rust-lang/rust/raw/12207f6c66f6fa5a19790c9c8bf1b398a7dc263d/src%2Ftest%2Fincremental%2Fthinlto%2Fcgu_invalidated_when_export_added.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fincremental%2Fthinlto%2Fcgu_invalidated_when_export_added.rs?ref=12207f6c66f6fa5a19790c9c8bf1b398a7dc263d", "patch": "@@ -0,0 +1,26 @@\n+// revisions: cfail1 cfail2\n+// build-pass\n+\n+// rust-lang/rust#69798:\n+//\n+// This is analgous to cgu_invalidated_when_import_added, but it covers a\n+// problem uncovered where a change to the *export* set caused a link failure\n+// when reusing post-LTO optimized object code.\n+\n+pub struct Foo {}\n+impl Drop for Foo {\n+    fn drop(&mut self) {\n+        println!(\"Dropping Foo\");\n+    }\n+}\n+#[no_mangle]\n+pub extern \"C\" fn run() {\n+    thread_local! { pub static FOO : Foo = Foo { } ; }\n+\n+    #[cfg(cfail2)]\n+    {\n+        FOO.with(|_f| ())\n+    }\n+}\n+\n+pub fn main() { run() }"}, {"sha": "e85b4856f3a96ef98297eec55e1f042c73e50b2e", "filename": "src/test/incremental/thinlto/cgu_invalidated_when_export_removed.rs", "status": "added", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/12207f6c66f6fa5a19790c9c8bf1b398a7dc263d/src%2Ftest%2Fincremental%2Fthinlto%2Fcgu_invalidated_when_export_removed.rs", "raw_url": "https://github.com/rust-lang/rust/raw/12207f6c66f6fa5a19790c9c8bf1b398a7dc263d/src%2Ftest%2Fincremental%2Fthinlto%2Fcgu_invalidated_when_export_removed.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fincremental%2Fthinlto%2Fcgu_invalidated_when_export_removed.rs?ref=12207f6c66f6fa5a19790c9c8bf1b398a7dc263d", "patch": "@@ -0,0 +1,26 @@\n+// revisions: cfail1 cfail2\n+// build-pass\n+\n+// rust-lang/rust#69798:\n+//\n+// This is analgous to cgu_invalidated_when_export_added, but it covers the\n+// other direction. This is analogous to cgu_invalidated_when_import_added: we\n+// include it, because it may uncover bugs in variant implementation strategies.\n+\n+pub struct Foo {}\n+impl Drop for Foo {\n+    fn drop(&mut self) {\n+        println!(\"Dropping Foo\");\n+    }\n+}\n+#[no_mangle]\n+pub extern \"C\" fn run() {\n+    thread_local! { pub static FOO : Foo = Foo { } ; }\n+\n+    #[cfg(cfail1)]\n+    {\n+        FOO.with(|_f| ())\n+    }\n+}\n+\n+pub fn main() { run() }"}]}