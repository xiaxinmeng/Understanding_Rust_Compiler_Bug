{"sha": "9c98d0f99b44e1c57bdd60881518140e2593a5a4", "node_id": "MDY6Q29tbWl0NzI0NzEyOjljOThkMGY5OWI0NGUxYzU3YmRkNjA4ODE1MTgxNDBlMjU5M2E1YTQ=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-09-09T02:58:11Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-09-09T03:04:21Z"}, "message": "Fix some old syntax", "tree": {"sha": "57656cd0d0ac94634cc3e3633007f6439842db46", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/57656cd0d0ac94634cc3e3633007f6439842db46"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9c98d0f99b44e1c57bdd60881518140e2593a5a4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9c98d0f99b44e1c57bdd60881518140e2593a5a4", "html_url": "https://github.com/rust-lang/rust/commit/9c98d0f99b44e1c57bdd60881518140e2593a5a4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9c98d0f99b44e1c57bdd60881518140e2593a5a4/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "25dc59dc59ee8026d978aa72e57649b529c548fb", "url": "https://api.github.com/repos/rust-lang/rust/commits/25dc59dc59ee8026d978aa72e57649b529c548fb", "html_url": "https://github.com/rust-lang/rust/commit/25dc59dc59ee8026d978aa72e57649b529c548fb"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "bf29efaaa64ffa38e27ac3e76b48e8d56e9f0b2a", "filename": "src/rustc/middle/astencode.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/9c98d0f99b44e1c57bdd60881518140e2593a5a4/src%2Frustc%2Fmiddle%2Fastencode.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9c98d0f99b44e1c57bdd60881518140e2593a5a4/src%2Frustc%2Fmiddle%2Fastencode.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustc%2Fmiddle%2Fastencode.rs?ref=9c98d0f99b44e1c57bdd60881518140e2593a5a4", "patch": "@@ -984,14 +984,14 @@ fn test_more() {\n fn test_simplification() {\n     let ext_cx = mk_ctxt();\n     let item_in = ast::ii_item(#ast[item] {\n-        fn new_int_alist<B: copy>() -> alist<int, B> {\n+        fn new_int_alist<B: Copy>() -> alist<int, B> {\n             fn eq_int(&&a: int, &&b: int) -> bool { a == b }\n             return {eq_fn: eq_int, mut data: ~[]};\n         }\n     });\n     let item_out = simplify_ast(item_in);\n     let item_exp = ast::ii_item(#ast[item] {\n-        fn new_int_alist<B: copy>() -> alist<int, B> {\n+        fn new_int_alist<B: Copy>() -> alist<int, B> {\n             return {eq_fn: eq_int, mut data: ~[]};\n         }\n     });"}]}