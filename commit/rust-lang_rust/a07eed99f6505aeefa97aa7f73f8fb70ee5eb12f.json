{"sha": "a07eed99f6505aeefa97aa7f73f8fb70ee5eb12f", "node_id": "C_kwDOAAsO6NoAKGEwN2VlZDk5ZjY1MDVhZWVmYTk3YWE3ZjczZjhmYjcwZWU1ZWIxMmY", "commit": {"author": {"name": "Yuki Okushi", "email": "jtitor@2k36.org", "date": "2022-02-09T05:12:24Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-02-09T05:12:24Z"}, "message": "Rollup merge of #93751 - eholk:issue-93648-drop-tracking-projection, r=tmiasko\n\nDrop tracking: track borrows of projections\n\nPrevious efforts to ignore partially consumed values meant we were also not considering borrows of a projection. This led to cases where we'd miss borrowed types which MIR expected to be there, leading to ICEs.\n\nThis PR also includes the `-Zdrop-tracking` flag from #93313. If that PR lands first, I'll rebase to drop the commit from this one.\n\nFixes #93648", "tree": {"sha": "3ac549d8d59d0e72f2380abb2063ad4e23d95792", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3ac549d8d59d0e72f2380abb2063ad4e23d95792"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a07eed99f6505aeefa97aa7f73f8fb70ee5eb12f", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJiA004CRBK7hj4Ov3rIwAAcEoIAE/REdRn2GFSEuBQOfoiqa8s\n/YPCehMYA4zyA/FXNUKXonahM4tUDj9wo+evDCbMNfuNcuggfbojP0yXAnpgEDYG\nQYPiQuDu7Niapj2a6iEH8jBDM1qEBeIUkASFUL8PF5ANL6h7mhizag3m7aNGiBBP\nP68WuV139+WbP/Qf9kP0LuEDQG9wge1M4SozsdiSnzNhRB3ZjWk7ugz+N83LS7k8\nRYWvF/H4Ox8sGz3WlB+1hdK366DwTpjh/NvqelGDV0wxDAEaUq/rC2tkBpQynzRS\nO32C7xXZoBgiXUEN10FFjMsQH9TNlaGaP8Sa4sWoP+gk5Li6mEGS7x+EdQzCWS4=\n=6pF6\n-----END PGP SIGNATURE-----\n", "payload": "tree 3ac549d8d59d0e72f2380abb2063ad4e23d95792\nparent 68fa9b198aaef41b173f5dbf4b2822765ce5007c\nparent 97b24f3236a59c920b8978604739fcd274c678de\nauthor Yuki Okushi <jtitor@2k36.org> 1644383544 +0900\ncommitter GitHub <noreply@github.com> 1644383544 +0900\n\nRollup merge of #93751 - eholk:issue-93648-drop-tracking-projection, r=tmiasko\n\nDrop tracking: track borrows of projections\n\nPrevious efforts to ignore partially consumed values meant we were also not considering borrows of a projection. This led to cases where we'd miss borrowed types which MIR expected to be there, leading to ICEs.\n\nThis PR also includes the `-Zdrop-tracking` flag from #93313. If that PR lands first, I'll rebase to drop the commit from this one.\n\nFixes #93648\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a07eed99f6505aeefa97aa7f73f8fb70ee5eb12f", "html_url": "https://github.com/rust-lang/rust/commit/a07eed99f6505aeefa97aa7f73f8fb70ee5eb12f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a07eed99f6505aeefa97aa7f73f8fb70ee5eb12f/comments", "author": {"login": "JohnTitor", "id": 25030997, "node_id": "MDQ6VXNlcjI1MDMwOTk3", "avatar_url": "https://avatars.githubusercontent.com/u/25030997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JohnTitor", "html_url": "https://github.com/JohnTitor", "followers_url": "https://api.github.com/users/JohnTitor/followers", "following_url": "https://api.github.com/users/JohnTitor/following{/other_user}", "gists_url": "https://api.github.com/users/JohnTitor/gists{/gist_id}", "starred_url": "https://api.github.com/users/JohnTitor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JohnTitor/subscriptions", "organizations_url": "https://api.github.com/users/JohnTitor/orgs", "repos_url": "https://api.github.com/users/JohnTitor/repos", "events_url": "https://api.github.com/users/JohnTitor/events{/privacy}", "received_events_url": "https://api.github.com/users/JohnTitor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "68fa9b198aaef41b173f5dbf4b2822765ce5007c", "url": "https://api.github.com/repos/rust-lang/rust/commits/68fa9b198aaef41b173f5dbf4b2822765ce5007c", "html_url": "https://github.com/rust-lang/rust/commit/68fa9b198aaef41b173f5dbf4b2822765ce5007c"}, {"sha": "97b24f3236a59c920b8978604739fcd274c678de", "url": "https://api.github.com/repos/rust-lang/rust/commits/97b24f3236a59c920b8978604739fcd274c678de", "html_url": "https://github.com/rust-lang/rust/commit/97b24f3236a59c920b8978604739fcd274c678de"}], "stats": {"total": 52, "additions": 33, "deletions": 19}, "files": [{"sha": "e5e467030826fc786d44107aa229b390b4237d45", "filename": "compiler/rustc_interface/src/tests.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/a07eed99f6505aeefa97aa7f73f8fb70ee5eb12f/compiler%2Frustc_interface%2Fsrc%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a07eed99f6505aeefa97aa7f73f8fb70ee5eb12f/compiler%2Frustc_interface%2Fsrc%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_interface%2Fsrc%2Ftests.rs?ref=a07eed99f6505aeefa97aa7f73f8fb70ee5eb12f", "patch": "@@ -730,6 +730,7 @@ fn test_debugging_options_tracking_hash() {\n     tracked!(debug_info_for_profiling, true);\n     tracked!(debug_macros, true);\n     tracked!(dep_info_omit_d_target, true);\n+    tracked!(drop_tracking, true);\n     tracked!(dual_proc_macros, true);\n     tracked!(fewer_names, Some(true));\n     tracked!(force_unstable_if_unmarked, true);"}, {"sha": "c490872a0b424ed790a2e16df376b514b537c187", "filename": "compiler/rustc_session/src/options.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a07eed99f6505aeefa97aa7f73f8fb70ee5eb12f/compiler%2Frustc_session%2Fsrc%2Foptions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a07eed99f6505aeefa97aa7f73f8fb70ee5eb12f/compiler%2Frustc_session%2Fsrc%2Foptions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_session%2Fsrc%2Foptions.rs?ref=a07eed99f6505aeefa97aa7f73f8fb70ee5eb12f", "patch": "@@ -1173,6 +1173,8 @@ options! {\n     dont_buffer_diagnostics: bool = (false, parse_bool, [UNTRACKED],\n         \"emit diagnostics rather than buffering (breaks NLL error downgrading, sorting) \\\n         (default: no)\"),\n+    drop_tracking: bool = (false, parse_bool, [TRACKED],\n+        \"enables drop tracking in generators (default: no)\"),\n     dual_proc_macros: bool = (false, parse_bool, [TRACKED],\n         \"load proc macros for both target and host, but only link to the target (default: no)\"),\n     dump_dep_graph: bool = (false, parse_bool, [UNTRACKED],"}, {"sha": "90da74e89d84b58f3e7b3352865985675bb2a4e1", "filename": "compiler/rustc_typeck/src/check/generator_interior.rs", "status": "modified", "additions": 1, "deletions": 6, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/a07eed99f6505aeefa97aa7f73f8fb70ee5eb12f/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fgenerator_interior.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a07eed99f6505aeefa97aa7f73f8fb70ee5eb12f/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fgenerator_interior.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fgenerator_interior.rs?ref=a07eed99f6505aeefa97aa7f73f8fb70ee5eb12f", "patch": "@@ -22,11 +22,6 @@ use tracing::debug;\n \n mod drop_ranges;\n \n-// FIXME(eholk): This flag is here to give a quick way to disable drop tracking in case we find\n-// unexpected breakages while it's still new. It should be removed before too long. For example,\n-// see #93161.\n-const ENABLE_DROP_TRACKING: bool = false;\n-\n struct InteriorVisitor<'a, 'tcx> {\n     fcx: &'a FnCtxt<'a, 'tcx>,\n     types: FxIndexSet<ty::GeneratorInteriorTypeCause<'tcx>>,\n@@ -82,7 +77,7 @@ impl<'a, 'tcx> InteriorVisitor<'a, 'tcx> {\n                                 yield_data.expr_and_pat_count, self.expr_count, source_span\n                             );\n \n-                            if ENABLE_DROP_TRACKING\n+                            if self.fcx.sess().opts.debugging_opts.drop_tracking\n                                 && self\n                                     .drop_ranges\n                                     .is_dropped_at(hir_id, yield_data.expr_and_pat_count)"}, {"sha": "c4e7d6a199e83d0659d428435156e449968a898a", "filename": "compiler/rustc_typeck/src/check/generator_interior/drop_ranges.rs", "status": "modified", "additions": 14, "deletions": 10, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/a07eed99f6505aeefa97aa7f73f8fb70ee5eb12f/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fgenerator_interior%2Fdrop_ranges.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a07eed99f6505aeefa97aa7f73f8fb70ee5eb12f/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fgenerator_interior%2Fdrop_ranges.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fgenerator_interior%2Fdrop_ranges.rs?ref=a07eed99f6505aeefa97aa7f73f8fb70ee5eb12f", "patch": "@@ -37,7 +37,7 @@ pub fn compute_drop_ranges<'a, 'tcx>(\n     def_id: DefId,\n     body: &'tcx Body<'tcx>,\n ) -> DropRanges {\n-    if super::ENABLE_DROP_TRACKING {\n+    if fcx.sess().opts.debugging_opts.drop_tracking {\n         let consumed_borrowed_places = find_consumed_and_borrowed(fcx, def_id, body);\n \n         let num_exprs = fcx.tcx.region_scope_tree(def_id).body_expr_count(body.id()).unwrap_or(0);\n@@ -116,6 +116,18 @@ impl TrackedValue {\n             TrackedValue::Variable(hir_id) | TrackedValue::Temporary(hir_id) => *hir_id,\n         }\n     }\n+\n+    fn from_place_with_projections_allowed(place_with_id: &PlaceWithHirId<'_>) -> Self {\n+        match place_with_id.place.base {\n+            PlaceBase::Rvalue | PlaceBase::StaticItem => {\n+                TrackedValue::Temporary(place_with_id.hir_id)\n+            }\n+            PlaceBase::Local(hir_id)\n+            | PlaceBase::Upvar(ty::UpvarId { var_path: ty::UpvarPath { hir_id }, .. }) => {\n+                TrackedValue::Variable(hir_id)\n+            }\n+        }\n+    }\n }\n \n /// Represents a reason why we might not be able to convert a HirId or Place\n@@ -142,15 +154,7 @@ impl TryFrom<&PlaceWithHirId<'_>> for TrackedValue {\n             return Err(TrackedValueConversionError::PlaceProjectionsNotSupported);\n         }\n \n-        match place_with_id.place.base {\n-            PlaceBase::Rvalue | PlaceBase::StaticItem => {\n-                Ok(TrackedValue::Temporary(place_with_id.hir_id))\n-            }\n-            PlaceBase::Local(hir_id)\n-            | PlaceBase::Upvar(ty::UpvarId { var_path: ty::UpvarPath { hir_id }, .. }) => {\n-                Ok(TrackedValue::Variable(hir_id))\n-            }\n-        }\n+        Ok(TrackedValue::from_place_with_projections_allowed(place_with_id))\n     }\n }\n "}, {"sha": "9a308586afff3a723ef738794aac89547a8f2e52", "filename": "compiler/rustc_typeck/src/check/generator_interior/drop_ranges/record_consumed_borrow.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/a07eed99f6505aeefa97aa7f73f8fb70ee5eb12f/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fgenerator_interior%2Fdrop_ranges%2Frecord_consumed_borrow.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a07eed99f6505aeefa97aa7f73f8fb70ee5eb12f/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fgenerator_interior%2Fdrop_ranges%2Frecord_consumed_borrow.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fgenerator_interior%2Fdrop_ranges%2Frecord_consumed_borrow.rs?ref=a07eed99f6505aeefa97aa7f73f8fb70ee5eb12f", "patch": "@@ -96,9 +96,9 @@ impl<'tcx> expr_use_visitor::Delegate<'tcx> for ExprUseDelegate<'tcx> {\n         _diag_expr_id: HirId,\n         _bk: rustc_middle::ty::BorrowKind,\n     ) {\n-        place_with_id\n-            .try_into()\n-            .map_or(false, |tracked_value| self.places.borrowed.insert(tracked_value));\n+        self.places\n+            .borrowed\n+            .insert(TrackedValue::from_place_with_projections_allowed(place_with_id));\n     }\n \n     fn mutate("}, {"sha": "4ce3ac1e8746030d3ff3caea1e25aa27d8d41267", "filename": "src/test/ui/async-await/issue-93648.rs", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/a07eed99f6505aeefa97aa7f73f8fb70ee5eb12f/src%2Ftest%2Fui%2Fasync-await%2Fissue-93648.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a07eed99f6505aeefa97aa7f73f8fb70ee5eb12f/src%2Ftest%2Fui%2Fasync-await%2Fissue-93648.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fasync-await%2Fissue-93648.rs?ref=a07eed99f6505aeefa97aa7f73f8fb70ee5eb12f", "patch": "@@ -0,0 +1,12 @@\n+// edition:2021\n+// build-pass\n+// compile-flags: -Zdrop-tracking\n+\n+fn main() {\n+    let _ = async {\n+        let mut s = (String::new(),);\n+        s.0.push_str(\"abc\");\n+        std::mem::drop(s);\n+        async {}.await;\n+    };\n+}"}]}