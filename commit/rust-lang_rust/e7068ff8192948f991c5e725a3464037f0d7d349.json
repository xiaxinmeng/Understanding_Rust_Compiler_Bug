{"sha": "e7068ff8192948f991c5e725a3464037f0d7d349", "node_id": "C_kwDOAAsO6NoAKGU3MDY4ZmY4MTkyOTQ4Zjk5MWM1ZTcyNWEzNDY0MDM3ZjBkN2QzNDk", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2023-05-26T22:23:58Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2023-05-26T22:23:58Z"}, "message": "Rollup merge of #111954 - asquared31415:unknown_ptr_type_error, r=compiler-errors\n\nimprove error message for calling a method on a raw pointer with an unknown pointee\n\nThe old error message had very confusing wording.\nAlso added some more test cases besides the single edition test.\n\nr? `@compiler-errors`", "tree": {"sha": "7a941eb7590e6ce0ef7ce8e8c5b3ba06cd9ccd31", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7a941eb7590e6ce0ef7ce8e8c5b3ba06cd9ccd31"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e7068ff8192948f991c5e725a3464037f0d7d349", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJkcTF+CRBK7hj4Ov3rIwAALsUIABlqn46APivadRKQAEbzkRgu\nuodhIqAd+C3LPgeWY+0R3msZ6BjIZaBSVcmZgRhqRk+6nPMbZZr9jX+2rBq31WBR\nnN4Rx1VYMpTFNKSEk0nIVLC8OK3z12nfrv4t5jA4ieHSgM34isIE+FbzjYAy1w38\nKMsKRcKtrrUp7PI98j6WnUcz8IjWurCKvuKD7OX8W0yiAgbGQgqJiFDhdTezGAjv\nfGF4NoW4os25WcB/2ExVVuKdaXzUAq1wJE503bG7cNVjRq71+aPnOoCwVxBXViiS\nYBQYkYuMC0UiX3cW9d2DPXiFce+/bRjZxosjctTbbDGgDZM8U7/s3gB/SyGm+qk=\n=rY7B\n-----END PGP SIGNATURE-----\n", "payload": "tree 7a941eb7590e6ce0ef7ce8e8c5b3ba06cd9ccd31\nparent 1e766bfd2abba7c2f6bc2f5a10c5d152a8c65164\nparent b19466abc26d3815f88b84073c4b31a426015ce0\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1685139838 +0200\ncommitter GitHub <noreply@github.com> 1685139838 +0200\n\nRollup merge of #111954 - asquared31415:unknown_ptr_type_error, r=compiler-errors\n\nimprove error message for calling a method on a raw pointer with an unknown pointee\n\nThe old error message had very confusing wording.\nAlso added some more test cases besides the single edition test.\n\nr? `@compiler-errors`\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e7068ff8192948f991c5e725a3464037f0d7d349", "html_url": "https://github.com/rust-lang/rust/commit/e7068ff8192948f991c5e725a3464037f0d7d349", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e7068ff8192948f991c5e725a3464037f0d7d349/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1e766bfd2abba7c2f6bc2f5a10c5d152a8c65164", "url": "https://api.github.com/repos/rust-lang/rust/commits/1e766bfd2abba7c2f6bc2f5a10c5d152a8c65164", "html_url": "https://github.com/rust-lang/rust/commit/1e766bfd2abba7c2f6bc2f5a10c5d152a8c65164"}, {"sha": "b19466abc26d3815f88b84073c4b31a426015ce0", "url": "https://api.github.com/repos/rust-lang/rust/commits/b19466abc26d3815f88b84073c4b31a426015ce0", "html_url": "https://github.com/rust-lang/rust/commit/b19466abc26d3815f88b84073c4b31a426015ce0"}], "stats": {"total": 71, "additions": 63, "deletions": 8}, "files": [{"sha": "3768b53698d647e9cf5472b1cd3d001c14de4b31", "filename": "compiler/rustc_hir_typeck/messages.ftl", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e7068ff8192948f991c5e725a3464037f0d7d349/compiler%2Frustc_hir_typeck%2Fmessages.ftl", "raw_url": "https://github.com/rust-lang/rust/raw/e7068ff8192948f991c5e725a3464037f0d7d349/compiler%2Frustc_hir_typeck%2Fmessages.ftl", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_hir_typeck%2Fmessages.ftl?ref=e7068ff8192948f991c5e725a3464037f0d7d349", "patch": "@@ -59,8 +59,8 @@ hir_typeck_lang_start_incorrect_param = parameter {$param_num} of the `start` la\n hir_typeck_lang_start_incorrect_ret_ty = the return type of the `start` lang item is incorrect\n     .suggestion = change the type from `{$found_ty}` to `{$expected_ty}`\n \n-hir_typeck_method_call_on_unknown_type =\n-    the type of this value must be known to call a method on a raw pointer on it\n+hir_typeck_method_call_on_unknown_raw_pointee =\n+    cannot call a method on a raw pointer with an unknown pointee type\n \n hir_typeck_missing_parentheses_in_range = can't call method `{$method_name}` on type `{$ty_str}`\n "}, {"sha": "0ceb5074a04f4b608a774d30899c0e48d48c801d", "filename": "compiler/rustc_hir_typeck/src/errors.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e7068ff8192948f991c5e725a3464037f0d7d349/compiler%2Frustc_hir_typeck%2Fsrc%2Ferrors.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e7068ff8192948f991c5e725a3464037f0d7d349/compiler%2Frustc_hir_typeck%2Fsrc%2Ferrors.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_hir_typeck%2Fsrc%2Ferrors.rs?ref=e7068ff8192948f991c5e725a3464037f0d7d349", "patch": "@@ -49,8 +49,8 @@ pub struct StructExprNonExhaustive {\n }\n \n #[derive(Diagnostic)]\n-#[diag(hir_typeck_method_call_on_unknown_type, code = \"E0699\")]\n-pub struct MethodCallOnUnknownType {\n+#[diag(hir_typeck_method_call_on_unknown_raw_pointee, code = \"E0699\")]\n+pub struct MethodCallOnUnknownRawPointee {\n     #[primary_span]\n     pub span: Span,\n }"}, {"sha": "9f3d35a77dc759faf6783bc2938c85b9417d7748", "filename": "compiler/rustc_hir_typeck/src/method/probe.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e7068ff8192948f991c5e725a3464037f0d7d349/compiler%2Frustc_hir_typeck%2Fsrc%2Fmethod%2Fprobe.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e7068ff8192948f991c5e725a3464037f0d7d349/compiler%2Frustc_hir_typeck%2Fsrc%2Fmethod%2Fprobe.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_hir_typeck%2Fsrc%2Fmethod%2Fprobe.rs?ref=e7068ff8192948f991c5e725a3464037f0d7d349", "patch": "@@ -3,7 +3,7 @@ use super::CandidateSource;\n use super::MethodError;\n use super::NoMatchData;\n \n-use crate::errors::MethodCallOnUnknownType;\n+use crate::errors::MethodCallOnUnknownRawPointee;\n use crate::FnCtxt;\n use rustc_data_structures::fx::FxHashSet;\n use rustc_errors::Applicability;\n@@ -438,7 +438,7 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n                 // so we do a future-compat lint here for the 2015 edition\n                 // (see https://github.com/rust-lang/rust/issues/46906)\n                 if self.tcx.sess.rust_2018() {\n-                    self.tcx.sess.emit_err(MethodCallOnUnknownType { span });\n+                    self.tcx.sess.emit_err(MethodCallOnUnknownRawPointee { span });\n                 } else {\n                     self.tcx.struct_span_lint_hir(\n                         lint::builtin::TYVAR_BEHIND_RAW_POINTER,"}, {"sha": "0bae65a9ae53d8819e924e29942fdbe58b560820", "filename": "tests/ui/editions/edition-raw-pointer-method-2018.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e7068ff8192948f991c5e725a3464037f0d7d349/tests%2Fui%2Feditions%2Fedition-raw-pointer-method-2018.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e7068ff8192948f991c5e725a3464037f0d7d349/tests%2Fui%2Feditions%2Fedition-raw-pointer-method-2018.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Feditions%2Fedition-raw-pointer-method-2018.rs?ref=e7068ff8192948f991c5e725a3464037f0d7d349", "patch": "@@ -7,5 +7,5 @@ fn main() {\n     let x = 0;\n     let y = &x as *const _;\n     let _ = y.is_null();\n-    //~^ error: the type of this value must be known to call a method on a raw pointer on it [E0699]\n+    //~^ error: cannot call a method on a raw pointer with an unknown pointee type [E0699]\n }"}, {"sha": "b9afa0133cac3e2b67cc1be59745a81718a28ad5", "filename": "tests/ui/editions/edition-raw-pointer-method-2018.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e7068ff8192948f991c5e725a3464037f0d7d349/tests%2Fui%2Feditions%2Fedition-raw-pointer-method-2018.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e7068ff8192948f991c5e725a3464037f0d7d349/tests%2Fui%2Feditions%2Fedition-raw-pointer-method-2018.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Feditions%2Fedition-raw-pointer-method-2018.stderr?ref=e7068ff8192948f991c5e725a3464037f0d7d349", "patch": "@@ -1,4 +1,4 @@\n-error[E0699]: the type of this value must be known to call a method on a raw pointer on it\n+error[E0699]: cannot call a method on a raw pointer with an unknown pointee type\n   --> $DIR/edition-raw-pointer-method-2018.rs:9:15\n    |\n LL |     let _ = y.is_null();"}, {"sha": "fe4275f5367a9224cf0125b1ab884fffea214ad5", "filename": "tests/ui/methods/call_method_unknown_pointee.rs", "status": "added", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/e7068ff8192948f991c5e725a3464037f0d7d349/tests%2Fui%2Fmethods%2Fcall_method_unknown_pointee.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e7068ff8192948f991c5e725a3464037f0d7d349/tests%2Fui%2Fmethods%2Fcall_method_unknown_pointee.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmethods%2Fcall_method_unknown_pointee.rs?ref=e7068ff8192948f991c5e725a3464037f0d7d349", "patch": "@@ -0,0 +1,28 @@\n+// edition: 2018\n+\n+// tests that the pointee type of a raw pointer must be known to call methods on it\n+// see also: `tests/ui/editions/edition-raw-pointer-method-2018.rs`\n+\n+fn main() {\n+    let val = 1_u32;\n+    let ptr = &val as *const u32;\n+    unsafe {\n+        let _a: i32 = (ptr as *const _).read();\n+        //~^ ERROR cannot call a method on a raw pointer with an unknown pointee type [E0699]\n+        let b = ptr as *const _;\n+        let _b: u8 = b.read();\n+        //~^ ERROR cannot call a method on a raw pointer with an unknown pointee type [E0699]\n+        let _c = (ptr as *const u8).read(); // we know the type here\n+    }\n+\n+    let mut val = 2_u32;\n+    let ptr = &mut val as *mut u32;\n+    unsafe {\n+        let _a: i32 = (ptr as *mut _).read();\n+        //~^ ERROR cannot call a method on a raw pointer with an unknown pointee type [E0699]\n+        let b = ptr as *mut _;\n+        b.write(10);\n+        //~^ ERROR cannot call a method on a raw pointer with an unknown pointee type [E0699]\n+        (ptr as *mut i32).write(1000); // we know the type here\n+    }\n+}"}, {"sha": "84ecf046e7ac21ec828612e24d1ede5357465b51", "filename": "tests/ui/methods/call_method_unknown_pointee.stderr", "status": "added", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/e7068ff8192948f991c5e725a3464037f0d7d349/tests%2Fui%2Fmethods%2Fcall_method_unknown_pointee.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e7068ff8192948f991c5e725a3464037f0d7d349/tests%2Fui%2Fmethods%2Fcall_method_unknown_pointee.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmethods%2Fcall_method_unknown_pointee.stderr?ref=e7068ff8192948f991c5e725a3464037f0d7d349", "patch": "@@ -0,0 +1,27 @@\n+error[E0699]: cannot call a method on a raw pointer with an unknown pointee type\n+  --> $DIR/call_method_unknown_pointee.rs:10:41\n+   |\n+LL |         let _a: i32 = (ptr as *const _).read();\n+   |                                         ^^^^\n+\n+error[E0699]: cannot call a method on a raw pointer with an unknown pointee type\n+  --> $DIR/call_method_unknown_pointee.rs:13:24\n+   |\n+LL |         let _b: u8 = b.read();\n+   |                        ^^^^\n+\n+error[E0699]: cannot call a method on a raw pointer with an unknown pointee type\n+  --> $DIR/call_method_unknown_pointee.rs:21:39\n+   |\n+LL |         let _a: i32 = (ptr as *mut _).read();\n+   |                                       ^^^^\n+\n+error[E0699]: cannot call a method on a raw pointer with an unknown pointee type\n+  --> $DIR/call_method_unknown_pointee.rs:24:11\n+   |\n+LL |         b.write(10);\n+   |           ^^^^^\n+\n+error: aborting due to 4 previous errors\n+\n+For more information about this error, try `rustc --explain E0699`."}]}