{"sha": "dfdadad228e0885d43ced8117978c77d6973f05e", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRmZGFkYWQyMjhlMDg4NWQ0M2NlZDgxMTc5NzhjNzdkNjk3M2YwNWU=", "commit": {"author": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2021-02-16T08:45:27Z"}, "committer": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2021-02-16T08:45:27Z"}, "message": "Ignore Atomic*::fetch_{min,max} tests on ARM", "tree": {"sha": "8988b5b8c9383ce839c18766f527dfe11f6b2de7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8988b5b8c9383ce839c18766f527dfe11f6b2de7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/dfdadad228e0885d43ced8117978c77d6973f05e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/dfdadad228e0885d43ced8117978c77d6973f05e", "html_url": "https://github.com/rust-lang/rust/commit/dfdadad228e0885d43ced8117978c77d6973f05e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/dfdadad228e0885d43ced8117978c77d6973f05e/comments", "author": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d1a541e34290364681550e82fe606d21c7235345", "url": "https://api.github.com/repos/rust-lang/rust/commits/d1a541e34290364681550e82fe606d21c7235345", "html_url": "https://github.com/rust-lang/rust/commit/d1a541e34290364681550e82fe606d21c7235345"}], "stats": {"total": 4, "additions": 4, "deletions": 0}, "files": [{"sha": "901b752502dd80b41ff7d565cf0593fc094228db", "filename": "library/core/tests/atomic.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/dfdadad228e0885d43ced8117978c77d6973f05e/library%2Fcore%2Ftests%2Fatomic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dfdadad228e0885d43ced8117978c77d6973f05e/library%2Fcore%2Ftests%2Fatomic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Ftests%2Fatomic.rs?ref=dfdadad228e0885d43ced8117978c77d6973f05e", "patch": "@@ -60,6 +60,7 @@ fn uint_xor() {\n }\n \n #[test]\n+#[cfg(not(target_arch = \"arm\"))] // Missing intrinsic in compiler-builtins\n fn uint_min() {\n     let x = AtomicUsize::new(0xf731);\n     assert_eq!(x.fetch_min(0x137f, SeqCst), 0xf731);\n@@ -69,6 +70,7 @@ fn uint_min() {\n }\n \n #[test]\n+#[cfg(not(target_arch = \"arm\"))] // Missing intrinsic in compiler-builtins\n fn uint_max() {\n     let x = AtomicUsize::new(0x137f);\n     assert_eq!(x.fetch_max(0xf731, SeqCst), 0x137f);\n@@ -106,6 +108,7 @@ fn int_xor() {\n }\n \n #[test]\n+#[cfg(not(target_arch = \"arm\"))] // Missing intrinsic in compiler-builtins\n fn int_min() {\n     let x = AtomicIsize::new(0xf731);\n     assert_eq!(x.fetch_min(0x137f, SeqCst), 0xf731);\n@@ -115,6 +118,7 @@ fn int_min() {\n }\n \n #[test]\n+#[cfg(not(target_arch = \"arm\"))] // Missing intrinsic in compiler-builtins\n fn int_max() {\n     let x = AtomicIsize::new(0x137f);\n     assert_eq!(x.fetch_max(0xf731, SeqCst), 0x137f);"}]}