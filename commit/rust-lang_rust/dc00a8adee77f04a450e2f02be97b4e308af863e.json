{"sha": "dc00a8adee77f04a450e2f02be97b4e308af863e", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRjMDBhOGFkZWU3N2YwNGE0NTBlMmYwMmJlOTdiNGUzMDhhZjg2M2U=", "commit": {"author": {"name": "Vadim Petrochenkov", "email": "vadim.petrochenkov@gmail.com", "date": "2019-02-27T06:36:49Z"}, "committer": {"name": "Vadim Petrochenkov", "email": "vadim.petrochenkov@gmail.com", "date": "2019-02-27T06:37:06Z"}, "message": "Validate `#[unwind]` syntax regardless of platform-specific panic strategy", "tree": {"sha": "33eb0233ca3caefb06868531c7d4523bbc27027e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/33eb0233ca3caefb06868531c7d4523bbc27027e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/dc00a8adee77f04a450e2f02be97b4e308af863e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/dc00a8adee77f04a450e2f02be97b4e308af863e", "html_url": "https://github.com/rust-lang/rust/commit/dc00a8adee77f04a450e2f02be97b4e308af863e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/dc00a8adee77f04a450e2f02be97b4e308af863e/comments", "author": {"login": "petrochenkov", "id": 5751617, "node_id": "MDQ6VXNlcjU3NTE2MTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5751617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrochenkov", "html_url": "https://github.com/petrochenkov", "followers_url": "https://api.github.com/users/petrochenkov/followers", "following_url": "https://api.github.com/users/petrochenkov/following{/other_user}", "gists_url": "https://api.github.com/users/petrochenkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrochenkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrochenkov/subscriptions", "organizations_url": "https://api.github.com/users/petrochenkov/orgs", "repos_url": "https://api.github.com/users/petrochenkov/repos", "events_url": "https://api.github.com/users/petrochenkov/events{/privacy}", "received_events_url": "https://api.github.com/users/petrochenkov/received_events", "type": "User", "site_admin": false}, "committer": {"login": "petrochenkov", "id": 5751617, "node_id": "MDQ6VXNlcjU3NTE2MTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5751617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrochenkov", "html_url": "https://github.com/petrochenkov", "followers_url": "https://api.github.com/users/petrochenkov/followers", "following_url": "https://api.github.com/users/petrochenkov/following{/other_user}", "gists_url": "https://api.github.com/users/petrochenkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrochenkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrochenkov/subscriptions", "organizations_url": "https://api.github.com/users/petrochenkov/orgs", "repos_url": "https://api.github.com/users/petrochenkov/repos", "events_url": "https://api.github.com/users/petrochenkov/events{/privacy}", "received_events_url": "https://api.github.com/users/petrochenkov/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b11502fbc0cfc251c1b96743562761c9a451d84a", "url": "https://api.github.com/repos/rust-lang/rust/commits/b11502fbc0cfc251c1b96743562761c9a451d84a", "html_url": "https://github.com/rust-lang/rust/commit/b11502fbc0cfc251c1b96743562761c9a451d84a"}], "stats": {"total": 7, "additions": 5, "deletions": 2}, "files": [{"sha": "39c84b95f8f5d54340f2c533230d6c32f3eece43", "filename": "src/librustc_mir/build/mod.rs", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/dc00a8adee77f04a450e2f02be97b4e308af863e/src%2Flibrustc_mir%2Fbuild%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dc00a8adee77f04a450e2f02be97b4e308af863e/src%2Flibrustc_mir%2Fbuild%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fbuild%2Fmod.rs?ref=dc00a8adee77f04a450e2f02be97b4e308af863e", "patch": "@@ -581,6 +581,10 @@ fn should_abort_on_panic<'a, 'gcx, 'tcx>(tcx: TyCtxt<'a, 'gcx, 'tcx>,\n     // Not callable from C, so we can safely unwind through these\n     if abi == Abi::Rust || abi == Abi::RustCall { return false; }\n \n+    // Validate `#[unwind]` syntax regardless of platform-specific panic strategy\n+    let attrs = &tcx.get_attrs(fn_def_id);\n+    let unwind_attr = attr::find_unwind_attr(Some(tcx.sess.diagnostic()), attrs);\n+\n     // We never unwind, so it's not relevant to stop an unwind\n     if tcx.sess.panic_strategy() != PanicStrategy::Unwind { return false; }\n \n@@ -589,8 +593,7 @@ fn should_abort_on_panic<'a, 'gcx, 'tcx>(tcx: TyCtxt<'a, 'gcx, 'tcx>,\n \n     // This is a special case: some functions have a C abi but are meant to\n     // unwind anyway. Don't stop them.\n-    let attrs = &tcx.get_attrs(fn_def_id);\n-    match attr::find_unwind_attr(Some(tcx.sess.diagnostic()), attrs) {\n+    match unwind_attr {\n         None => true,\n         Some(UnwindAttr::Allowed) => false,\n         Some(UnwindAttr::Aborts) => true,"}]}