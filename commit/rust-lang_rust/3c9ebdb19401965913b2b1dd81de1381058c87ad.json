{"sha": "3c9ebdb19401965913b2b1dd81de1381058c87ad", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNjOWViZGIxOTQwMTk2NTkxM2IyYjFkZDgxZGUxMzgxMDU4Yzg3YWQ=", "commit": {"author": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2020-03-24T12:09:44Z"}, "committer": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2020-03-24T12:09:44Z"}, "message": "Rustup to rustc 1.44.0-nightly (1edd389cc 2020-03-23)", "tree": {"sha": "bd1eeb0768ad007d1affe9a0bafcea52aa0a57e5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bd1eeb0768ad007d1affe9a0bafcea52aa0a57e5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3c9ebdb19401965913b2b1dd81de1381058c87ad", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3c9ebdb19401965913b2b1dd81de1381058c87ad", "html_url": "https://github.com/rust-lang/rust/commit/3c9ebdb19401965913b2b1dd81de1381058c87ad", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3c9ebdb19401965913b2b1dd81de1381058c87ad/comments", "author": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "228574db3602aa2abf69ef96a4809bb812071ea7", "url": "https://api.github.com/repos/rust-lang/rust/commits/228574db3602aa2abf69ef96a4809bb812071ea7", "html_url": "https://github.com/rust-lang/rust/commit/228574db3602aa2abf69ef96a4809bb812071ea7"}], "stats": {"total": 37, "additions": 18, "deletions": 19}, "files": [{"sha": "5311d84e72ac9254463d4e648d9be1d96b171e56", "filename": "example/mini_core.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/3c9ebdb19401965913b2b1dd81de1381058c87ad/example%2Fmini_core.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3c9ebdb19401965913b2b1dd81de1381058c87ad/example%2Fmini_core.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/example%2Fmini_core.rs?ref=3c9ebdb19401965913b2b1dd81de1381058c87ad", "patch": "@@ -472,9 +472,9 @@ pub mod intrinsics {\n     extern \"rust-intrinsic\" {\n         pub fn abort() -> !;\n         pub fn size_of<T>() -> usize;\n-        pub fn size_of_val<T: ?::Sized>(val: &T) -> usize;\n+        pub fn size_of_val<T: ?::Sized>(val: *const T) -> usize;\n         pub fn min_align_of<T>() -> usize;\n-        pub fn min_align_of_val<T: ?::Sized>(val: &T) -> usize;\n+        pub fn min_align_of_val<T: ?::Sized>(val: *const T) -> usize;\n         pub fn copy<T>(src: *const T, dst: *mut T, count: usize);\n         pub fn transmute<T, U>(e: T) -> U;\n         pub fn ctlz_nonzero<T>(x: T) -> T;"}, {"sha": "295c041848b61528be6376dca7bf1fcdaae1c127", "filename": "rust-toolchain", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3c9ebdb19401965913b2b1dd81de1381058c87ad/rust-toolchain", "raw_url": "https://github.com/rust-lang/rust/raw/3c9ebdb19401965913b2b1dd81de1381058c87ad/rust-toolchain", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/rust-toolchain?ref=3c9ebdb19401965913b2b1dd81de1381058c87ad", "patch": "@@ -1 +1 @@\n-nightly-2020-03-18\n+nightly-2020-03-24"}, {"sha": "01ce5bb78be0f4ebc32253a55ae17a8527e75fbf", "filename": "rustup.sh", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/3c9ebdb19401965913b2b1dd81de1381058c87ad/rustup.sh", "raw_url": "https://github.com/rust-lang/rust/raw/3c9ebdb19401965913b2b1dd81de1381058c87ad/rustup.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/rustup.sh?ref=3c9ebdb19401965913b2b1dd81de1381058c87ad", "patch": "@@ -19,6 +19,7 @@ case $1 in\n         ./prepare.sh\n         ;;\n     \"commit\")\n+        git add rust-toolchain\n         git commit -m \"Rustup to $(rustc -V)\"\n         ;;\n     *)"}, {"sha": "5d6a0772ce8fc01de47ef5230e67e18b81741aff", "filename": "src/abi/mod.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/3c9ebdb19401965913b2b1dd81de1381058c87ad/src%2Fabi%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3c9ebdb19401965913b2b1dd81de1381058c87ad/src%2Fabi%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fabi%2Fmod.rs?ref=3c9ebdb19401965913b2b1dd81de1381058c87ad", "patch": "@@ -32,7 +32,7 @@ pub fn fn_sig_for_fn_abi<'tcx>(tcx: TyCtxt<'tcx>, instance: Instance<'tcx>) -> t\n             sig\n         }\n         ty::Closure(def_id, substs) => {\n-            let sig = substs.as_closure().sig(def_id, tcx);\n+            let sig = substs.as_closure().sig();\n \n             let env_ty = tcx.closure_env_ty(def_id, substs).unwrap();\n             sig.map_bound(|sig| tcx.mk_fn_sig(\n@@ -43,8 +43,8 @@ pub fn fn_sig_for_fn_abi<'tcx>(tcx: TyCtxt<'tcx>, instance: Instance<'tcx>) -> t\n                 sig.abi\n             ))\n         }\n-        ty::Generator(def_id, substs, _) => {\n-            let sig = substs.as_generator().poly_sig(def_id, tcx);\n+        ty::Generator(_def_id, substs, _) => {\n+            let sig = substs.as_generator().poly_sig();\n \n             let env_region = ty::ReLateBound(ty::INNERMOST, ty::BrEnv);\n             let env_ty = tcx.mk_mut_ref(tcx.mk_region(env_region), ty);"}, {"sha": "5c57e16125c68a7120d898cecc42d9afdcf0d5f4", "filename": "src/backend.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3c9ebdb19401965913b2b1dd81de1381058c87ad/src%2Fbackend.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3c9ebdb19401965913b2b1dd81de1381058c87ad/src%2Fbackend.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbackend.rs?ref=3c9ebdb19401965913b2b1dd81de1381058c87ad", "patch": "@@ -1,7 +1,7 @@\n use std::collections::HashMap;\n use std::convert::TryFrom;\n \n-use rustc::session::Session;\n+use rustc_session::Session;\n \n use cranelift_module::{FuncId, Module};\n "}, {"sha": "71876816f39fdaa11491aeb84addb8ba7f3baead", "filename": "src/driver/aot.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3c9ebdb19401965913b2b1dd81de1381058c87ad/src%2Fdriver%2Faot.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3c9ebdb19401965913b2b1dd81de1381058c87ad/src%2Fdriver%2Faot.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdriver%2Faot.rs?ref=3c9ebdb19401965913b2b1dd81de1381058c87ad", "patch": "@@ -1,7 +1,7 @@\n use rustc::dep_graph::{WorkProduct, WorkProductFileKind, WorkProductId};\n use rustc::middle::cstore::EncodedMetadata;\n use rustc::mir::mono::CodegenUnit;\n-use rustc::session::config::{DebugInfo, OutputType};\n+use rustc_session::config::{DebugInfo, OutputType};\n use rustc_session::cgu_reuse_tracker::CguReuse;\n use rustc_codegen_ssa::back::linker::LinkerInfo;\n use rustc_codegen_ssa::CrateInfo;"}, {"sha": "061f78c8a929d34862c4e3bbc9fca54a4ea3494c", "filename": "src/lib.rs", "status": "modified", "additions": 6, "deletions": 8, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/3c9ebdb19401965913b2b1dd81de1381058c87ad/src%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3c9ebdb19401965913b2b1dd81de1381058c87ad/src%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flib.rs?ref=3c9ebdb19401965913b2b1dd81de1381058c87ad", "patch": "@@ -6,7 +6,6 @@ extern crate libc;\n extern crate tempfile;\n extern crate rustc;\n extern crate rustc_codegen_ssa;\n-extern crate rustc_codegen_utils;\n extern crate rustc_data_structures;\n extern crate rustc_driver;\n extern crate rustc_fs_util;\n@@ -16,17 +15,18 @@ extern crate rustc_index;\n extern crate rustc_mir;\n extern crate rustc_session;\n extern crate rustc_span;\n+extern crate rustc_symbol_mangling;\n extern crate rustc_target;\n extern crate rustc_ast;\n \n use std::any::Any;\n \n use rustc::dep_graph::{DepGraph, WorkProduct, WorkProductId};\n use rustc::middle::cstore::{EncodedMetadata, MetadataLoader};\n-use rustc::session::config::OutputFilenames;\n+use rustc_session::config::OutputFilenames;\n use rustc::ty::query::Providers;\n use rustc::util::common::ErrorReported;\n-use rustc_codegen_utils::codegen_backend::CodegenBackend;\n+use rustc_codegen_ssa::traits::CodegenBackend;\n \n use cranelift_codegen::settings;\n \n@@ -72,7 +72,7 @@ mod prelude {\n     pub use rustc::bug;\n     pub use rustc_hir::def_id::{CrateNum, DefId, LOCAL_CRATE};\n     pub use rustc::mir::{self, interpret::AllocId, mono::MonoItem, *};\n-    pub use rustc::session::{\n+    pub use rustc_session::{\n         config::{CrateType, Lto},\n         Session,\n     };\n@@ -203,12 +203,10 @@ impl CodegenBackend for CraneliftCodegenBackend {\n         metadata: EncodedMetadata,\n         need_metadata_module: bool,\n     ) -> Box<dyn Any> {\n-        rustc_codegen_utils::check_for_rustc_errors_attr(tcx);\n-\n         let res = driver::codegen_crate(tcx, metadata, need_metadata_module);\n \n         rustc_incremental::assert_module_sources::assert_module_sources(tcx);\n-        rustc_codegen_utils::symbol_names_test::report_symbol_names(tcx);\n+        rustc_symbol_mangling::test::report_symbol_names(tcx);\n \n         res\n     }\n@@ -296,7 +294,7 @@ fn build_isa(sess: &Session, enable_pic: bool) -> Box<dyn isa::TargetIsa + 'stat\n \n     // FIXME(CraneStation/cranelift#732) fix LICM in presence of jump tables\n     /*\n-    use rustc::session::config::OptLevel;\n+    use rustc_session::config::OptLevel;\n     match sess.opts.optimize {\n         OptLevel::No => {\n             flags_builder.set(\"opt_level\", \"fastest\").unwrap();"}, {"sha": "145dd704badc2f42ace1b2fe2ca1ff37185b3233", "filename": "src/main_shim.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3c9ebdb19401965913b2b1dd81de1381058c87ad/src%2Fmain_shim.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3c9ebdb19401965913b2b1dd81de1381058c87ad/src%2Fmain_shim.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fmain_shim.rs?ref=3c9ebdb19401965913b2b1dd81de1381058c87ad", "patch": "@@ -4,7 +4,7 @@ use crate::prelude::*;\n /// users main function.\n pub fn maybe_create_entry_wrapper(tcx: TyCtxt<'_>, module: &mut Module<impl Backend + 'static>) {\n     use rustc::middle::lang_items::StartFnLangItem;\n-    use rustc::session::config::EntryFnType;\n+    use rustc_session::config::EntryFnType;\n \n     let (main_def_id, use_start_lang_item) = match tcx.entry_fn(LOCAL_CRATE) {\n         Some((def_id, entry_ty)) => ("}, {"sha": "cedbff914bfd5dec11cc05bdb8c031875df91f58", "filename": "src/metadata.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3c9ebdb19401965913b2b1dd81de1381058c87ad/src%2Fmetadata.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3c9ebdb19401965913b2b1dd81de1381058c87ad/src%2Fmetadata.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fmetadata.rs?ref=3c9ebdb19401965913b2b1dd81de1381058c87ad", "patch": "@@ -3,7 +3,7 @@ use std::fs::File;\n use std::path::Path;\n \n use rustc::middle::cstore::{EncodedMetadata, MetadataLoader};\n-use rustc::session::config;\n+use rustc_session::config;\n use rustc::ty::TyCtxt;\n use rustc_codegen_ssa::METADATA_FILENAME;\n use rustc_data_structures::owning_ref::{self, OwningRef};"}, {"sha": "cbc88fc6b5180115a8f8fce4585cbe4cfe3287e9", "filename": "src/target_features_whitelist.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3c9ebdb19401965913b2b1dd81de1381058c87ad/src%2Ftarget_features_whitelist.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3c9ebdb19401965913b2b1dd81de1381058c87ad/src%2Ftarget_features_whitelist.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftarget_features_whitelist.rs?ref=3c9ebdb19401965913b2b1dd81de1381058c87ad", "patch": "@@ -1,6 +1,6 @@\n use rustc_span::symbol::{sym, Symbol};\n \n-use rustc::session::Session;\n+use rustc_session::Session;\n \n // Copied from https://github.com/rust-lang/rust/blob/f69b07144a151f46aaee1b6230ba4160e9394562/src/librustc_codegen_llvm/llvm_util.rs#L93-L264\n "}]}