{"sha": "1e5cea09d5b3177ec79d8c4ddbbad0b739108601", "node_id": "MDY6Q29tbWl0NzI0NzEyOjFlNWNlYTA5ZDViMzE3N2VjNzlkOGM0ZGRiYmFkMGI3MzkxMDg2MDE=", "commit": {"author": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2019-09-22T14:47:45Z"}, "committer": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2019-09-22T14:47:45Z"}, "message": "Add profile code around metadata object generation\n\ncc #719", "tree": {"sha": "87a3387fd16aecce85d9b6c6844c5b54ca18a4d5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/87a3387fd16aecce85d9b6c6844c5b54ca18a4d5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1e5cea09d5b3177ec79d8c4ddbbad0b739108601", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1e5cea09d5b3177ec79d8c4ddbbad0b739108601", "html_url": "https://github.com/rust-lang/rust/commit/1e5cea09d5b3177ec79d8c4ddbbad0b739108601", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1e5cea09d5b3177ec79d8c4ddbbad0b739108601/comments", "author": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a1bf96f630edb28b6ff8dee34216af23a1011c41", "url": "https://api.github.com/repos/rust-lang/rust/commits/a1bf96f630edb28b6ff8dee34216af23a1011c41", "html_url": "https://github.com/rust-lang/rust/commit/a1bf96f630edb28b6ff8dee34216af23a1011c41"}], "stats": {"total": 46, "additions": 26, "deletions": 20}, "files": [{"sha": "2d00860ba206c550bd37097139ab9de5654c3bca", "filename": "src/driver.rs", "status": "modified", "additions": 26, "deletions": 20, "changes": 46, "blob_url": "https://github.com/rust-lang/rust/blob/1e5cea09d5b3177ec79d8c4ddbbad0b739108601/src%2Fdriver.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1e5cea09d5b3177ec79d8c4ddbbad0b739108601/src%2Fdriver.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdriver.rs?ref=1e5cea09d5b3177ec79d8c4ddbbad0b739108601", "patch": "@@ -215,26 +215,32 @@ fn run_aot(\n     rustc_incremental::finalize_session_directory(tcx.sess, tcx.crate_hash(LOCAL_CRATE));\n \n     let metadata_module = if need_metadata_module {\n-        use rustc::mir::mono::CodegenUnitNameBuilder;\n-\n-        let cgu_name_builder = &mut CodegenUnitNameBuilder::new(tcx);\n-        let metadata_cgu_name = cgu_name_builder\n-            .build_cgu_name(LOCAL_CRATE, &[\"crate\"], Some(\"metadata\"))\n-            .as_str()\n-            .to_string();\n-\n-        let mut metadata_artifact = faerie::Artifact::new(\n-            crate::build_isa(tcx.sess, true).triple().clone(),\n-            metadata_cgu_name.clone(),\n-        );\n-        crate::metadata::write_metadata(tcx, &mut metadata_artifact);\n-\n-        let tmp_file = tcx\n-            .output_filenames(LOCAL_CRATE)\n-            .temp_path(OutputType::Metadata, Some(&metadata_cgu_name));\n-\n-        let obj = metadata_artifact.emit().unwrap();\n-        std::fs::write(&tmp_file, obj).unwrap();\n+        tcx.sess.profiler(|p| p.start_activity(\"codegen crate metadata\"));\n+        let (metadata_cgu_name, tmp_file) = rustc::util::common::time(tcx.sess, \"write compressed metadata\", || {\n+            use rustc::mir::mono::CodegenUnitNameBuilder;\n+\n+            let cgu_name_builder = &mut CodegenUnitNameBuilder::new(tcx);\n+            let metadata_cgu_name = cgu_name_builder\n+                .build_cgu_name(LOCAL_CRATE, &[\"crate\"], Some(\"metadata\"))\n+                .as_str()\n+                .to_string();\n+\n+            let mut metadata_artifact = faerie::Artifact::new(\n+                crate::build_isa(tcx.sess, true).triple().clone(),\n+                metadata_cgu_name.clone(),\n+            );\n+            crate::metadata::write_metadata(tcx, &mut metadata_artifact);\n+\n+            let tmp_file = tcx\n+                .output_filenames(LOCAL_CRATE)\n+                .temp_path(OutputType::Metadata, Some(&metadata_cgu_name));\n+\n+            let obj = metadata_artifact.emit().unwrap();\n+            std::fs::write(&tmp_file, obj).unwrap();\n+\n+            (metadata_cgu_name, tmp_file)\n+        });\n+        tcx.sess.profiler(|p| p.end_activity(\"codegen crate metadata\"));\n \n         Some(CompiledModule {\n             name: metadata_cgu_name,"}]}