{"sha": "e2e754810c78a25c902b76c74ba8f04d0dcdc6f1", "node_id": "MDY6Q29tbWl0NzI0NzEyOmUyZTc1NDgxMGM3OGEyNWM5MDJiNzZjNzRiYThmMDRkMGRjZGM2ZjE=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2014-04-14T14:11:53Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2014-04-14T14:11:53Z"}, "message": "auto merge of #13477 : Manishearth/rust/newattr, r=brson\n\nSee #13476", "tree": {"sha": "a1995e5d93897e4fcc0a5d8c141e891d7766e58d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a1995e5d93897e4fcc0a5d8c141e891d7766e58d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e2e754810c78a25c902b76c74ba8f04d0dcdc6f1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e2e754810c78a25c902b76c74ba8f04d0dcdc6f1", "html_url": "https://github.com/rust-lang/rust/commit/e2e754810c78a25c902b76c74ba8f04d0dcdc6f1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e2e754810c78a25c902b76c74ba8f04d0dcdc6f1/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5dd94d86c64eb13382b3230c9a22c1e59d1e361a", "url": "https://api.github.com/repos/rust-lang/rust/commits/5dd94d86c64eb13382b3230c9a22c1e59d1e361a", "html_url": "https://github.com/rust-lang/rust/commit/5dd94d86c64eb13382b3230c9a22c1e59d1e361a"}, {"sha": "d0aed0995b6ca50ff0955ccda2e9d98076e9f961", "url": "https://api.github.com/repos/rust-lang/rust/commits/d0aed0995b6ca50ff0955ccda2e9d98076e9f961", "html_url": "https://github.com/rust-lang/rust/commit/d0aed0995b6ca50ff0955ccda2e9d98076e9f961"}], "stats": {"total": 56, "additions": 28, "deletions": 28}, "files": [{"sha": "303a32289b0ea47a7c4c3d5be928024b0ee21f1c", "filename": "src/doc/guide-macros.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e2e754810c78a25c902b76c74ba8f04d0dcdc6f1/src%2Fdoc%2Fguide-macros.md", "raw_url": "https://github.com/rust-lang/rust/raw/e2e754810c78a25c902b76c74ba8f04d0dcdc6f1/src%2Fdoc%2Fguide-macros.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Fguide-macros.md?ref=e2e754810c78a25c902b76c74ba8f04d0dcdc6f1", "patch": "@@ -407,7 +407,7 @@ As an example, `loop` and `for-loop` labels (discussed in the lifetimes guide)\n will not clash. The following code will print \"Hello!\" only once:\n \n ~~~\n-#[feature(macro_rules)];\n+#![feature(macro_rules)]\n \n macro_rules! loop_x (\n     ($e: expr) => ("}, {"sha": "5c6c562b72d37a5d36456a60145e8fa023110c77", "filename": "src/doc/guide-pointers.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e2e754810c78a25c902b76c74ba8f04d0dcdc6f1/src%2Fdoc%2Fguide-pointers.md", "raw_url": "https://github.com/rust-lang/rust/raw/e2e754810c78a25c902b76c74ba8f04d0dcdc6f1/src%2Fdoc%2Fguide-pointers.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Fguide-pointers.md?ref=e2e754810c78a25c902b76c74ba8f04d0dcdc6f1", "patch": "@@ -250,7 +250,7 @@ struct.\n # Managed Pointers\n \n > **Note**: the `@` form of managed pointers is deprecated and behind a\n-> feature gate (it requires a `#[feature(managed_pointers)];` attribute on\n+> feature gate (it requires a `#![feature(managed_pointers)]` attribute on\n > the crate root; remember the semicolon!). There are replacements, currently \n > there is `std::rc::Rc` and `std::gc::Gc` for shared ownership via reference\n > counting and garbage collection respectively."}, {"sha": "0be831c5132842320ad8f86ca8669ab7d0da0bcd", "filename": "src/doc/guide-testing.md", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e2e754810c78a25c902b76c74ba8f04d0dcdc6f1/src%2Fdoc%2Fguide-testing.md", "raw_url": "https://github.com/rust-lang/rust/raw/e2e754810c78a25c902b76c74ba8f04d0dcdc6f1/src%2Fdoc%2Fguide-testing.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Fguide-testing.md?ref=e2e754810c78a25c902b76c74ba8f04d0dcdc6f1", "patch": "@@ -185,7 +185,7 @@ amount.\n For example:\n \n ~~~\n-# #[allow(unused_imports)];\n+# #![allow(unused_imports)]\n extern crate test;\n \n use std::slice;\n@@ -247,7 +247,7 @@ recognize that some calculation has no external effects and remove\n it entirely.\n \n ~~~\n-# #[allow(unused_imports)];\n+# #![allow(unused_imports)]\n extern crate test;\n use test::Bencher;\n "}, {"sha": "96507939db060c5fbc595ac5e554dcfbdd80890b", "filename": "src/doc/guide-unsafe.md", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/e2e754810c78a25c902b76c74ba8f04d0dcdc6f1/src%2Fdoc%2Fguide-unsafe.md", "raw_url": "https://github.com/rust-lang/rust/raw/e2e754810c78a25c902b76c74ba8f04d0dcdc6f1/src%2Fdoc%2Fguide-unsafe.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Fguide-unsafe.md?ref=e2e754810c78a25c902b76c74ba8f04d0dcdc6f1", "patch": "@@ -424,14 +424,14 @@ Current valid options are:\n # Avoiding the standard library\n \n By default, `std` is linked to every Rust crate. In some contexts,\n-this is undesirable, and can be avoided with the `#[no_std];`\n+this is undesirable, and can be avoided with the `#![no_std]`\n attribute attached to the crate.\n \n ```ignore\n # // FIXME #12903: linking failures due to no_std\n // the minimal library\n-#[crate_type=\"lib\"];\n-#[no_std];\n+#![crate_type=\"lib\"]\n+#![no_std]\n \n # // fn main() {} tricked you, rustdoc!\n ```\n@@ -446,7 +446,7 @@ in the same format as a C:\n \n ```ignore\n # // FIXME #12903: linking failures due to no_std\n-#[no_std];\n+#![no_std]\n \n extern \"rust-intrinsic\" { fn abort() -> !; }\n #[no_mangle] pub extern fn rust_stack_exhausted() {\n@@ -462,14 +462,14 @@ fn start(_argc: int, _argv: **u8) -> int {\n ```\n \n To override the compiler-inserted `main` shim, one has to disable it\n-with `#[no_main];` and then create the appropriate symbol with the\n+with `#![no_main]` and then create the appropriate symbol with the\n correct ABI and the correct name, which requires overriding the\n compiler's name mangling too:\n \n ```ignore\n # // FIXME #12903: linking failures due to no_std\n-#[no_std];\n-#[no_main];\n+#![no_std]\n+#![no_main]\n \n extern \"rust-intrinsic\" { fn abort() -> !; }\n #[no_mangle] pub extern fn rust_stack_exhausted() {\n@@ -543,7 +543,7 @@ sugar for dynamic allocations via `malloc` and `free`:\n \n ```ignore\n # // FIXME #12903: linking failures due to no_std\n-#[no_std];\n+#![no_std]\n \n #[allow(ctypes)] // `uint` == `size_t` on Rust's platforms\n extern {"}, {"sha": "758d9863b0a35acf54880c072612f3c2152fb0e4", "filename": "src/doc/po/ja/rust.md.po", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e2e754810c78a25c902b76c74ba8f04d0dcdc6f1/src%2Fdoc%2Fpo%2Fja%2Frust.md.po", "raw_url": "https://github.com/rust-lang/rust/raw/e2e754810c78a25c902b76c74ba8f04d0dcdc6f1/src%2Fdoc%2Fpo%2Fja%2Frust.md.po", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Fpo%2Fja%2Frust.md.po?ref=e2e754810c78a25c902b76c74ba8f04d0dcdc6f1", "patch": "@@ -252,7 +252,7 @@ msgstr \"# \u30e2\u30b8\u30e5\u30fc\u30eb\u3068\u30af\u30ec\u30fc\u30c8\"\n #: src/doc/rust.md:627\n #, fuzzy\n #| msgid \"// Turn on a warning #[warn(non_camel_case_types)]\"\n-msgid \"// Turn on a warning #[ warn(non_camel_case_types) ]; ~~~~\"\n+msgid \"// Turn on a warning #![ warn(non_camel_case_types) ] ~~~~\"\n msgstr \"\"\n \"// \u8b66\u544a\u3092\u6709\u52b9\u306b\u3059\u308b\\n\"\n \"#[warn(non_camel_case_types)]\""}, {"sha": "ebd08e8ae63a15862d2b05fe23d47ff862aa086e", "filename": "src/doc/po/ja/tutorial.md.po", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/e2e754810c78a25c902b76c74ba8f04d0dcdc6f1/src%2Fdoc%2Fpo%2Fja%2Ftutorial.md.po", "raw_url": "https://github.com/rust-lang/rust/raw/e2e754810c78a25c902b76c74ba8f04d0dcdc6f1/src%2Fdoc%2Fpo%2Fja%2Ftutorial.md.po", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Fpo%2Fja%2Ftutorial.md.po?ref=e2e754810c78a25c902b76c74ba8f04d0dcdc6f1", "patch": "@@ -4851,13 +4851,13 @@ msgstr \"\"\n #. type: Plain text\n #: src/doc/tutorial.md:3134\n #, fuzzy\n-#| msgid \"// Make a library (\\\"bin\\\" is the default)  #[crate_type = \\\"lib\\\"];\"\n+#| msgid \"// Make a library (\\\"bin\\\" is the default)  #![crate_type = \\\"lib\\\"]\"\n msgid \"\"\n \"// This crate is a library (\\\"bin\\\" is the default)  #[crate_id = \"\n-\"\\\"farm#2.5\\\"]; #[crate_type = \\\"lib\\\"];\"\n+\"\\\"farm#2.5\\\"]; #![crate_type = \\\"lib\\\"]\"\n msgstr \"\"\n \"// \u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u4f5c\u6210\u3059\u308b (\\\"bin\\\" \u304c\u30c7\u30d5\u30a9\u30eb\u30c8\u5024)\\n\"\n-\"#[crate_type = \\\"lib\\\"];\"\n+\"#![crate_type = \\\"lib\\\"]\"\n \n #. type: Plain text\n #: src/doc/tutorial.md:3139\n@@ -4888,15 +4888,15 @@ msgstr \"\"\n #: src/doc/tutorial.md:3153\n #, fuzzy\n #| msgid \"\"\n-#| \"~~~~ // world.rs #[link(name = \\\"world\\\", vers = \\\"1.0\\\")]; pub fn \"\n+#| \"~~~~ // world.rs #![link(name = \\\"world\\\", vers = \\\"1.0\\\")] pub fn \"\n #| \"explore() -> &str { \\\"world\\\" } ~~~~\"\n msgid \"\"\n-\"~~~~ // `world.rs` #[crate_id = \\\"world#0.42\\\"]; # extern crate extra; pub fn \"\n+\"~~~~ // `world.rs` #![crate_id = \\\"world#0.42\\\"] # extern crate extra; pub fn \"\n \"explore() -> &'static str { \\\"world\\\" } # fn main() {} ~~~~\"\n msgstr \"\"\n \"~~~~\\n\"\n \"// world.rs\\n\"\n-\"#[link(name = \\\"world\\\", vers = \\\"1.0\\\")];\\n\"\n+\"#![link(name = \\\"world\\\", vers = \\\"1.0\\\")]\\n\"\n \"pub fn explore() -> &str { \\\"world\\\" }\\n\"\n \"~~~~\"\n "}, {"sha": "2170e16f932c8f67a7fc2e7e3bb411f7481803a3", "filename": "src/doc/rustdoc.md", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e2e754810c78a25c902b76c74ba8f04d0dcdc6f1/src%2Fdoc%2Frustdoc.md", "raw_url": "https://github.com/rust-lang/rust/raw/e2e754810c78a25c902b76c74ba8f04d0dcdc6f1/src%2Fdoc%2Frustdoc.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Frustdoc.md?ref=e2e754810c78a25c902b76c74ba8f04d0dcdc6f1", "patch": "@@ -13,8 +13,8 @@ comments\":\n ~~~\n // the \"link\" crate attribute is currently required for rustdoc, but normally\n // isn't needed.\n-#[crate_id = \"universe\"];\n-#[crate_type=\"lib\"];\n+#![crate_id = \"universe\"]\n+#![crate_type=\"lib\"]\n \n //! Tools for dealing with universes (this is a doc comment, and is shown on\n //! the crate index page. The ! makes it apply to the parent of the comment,"}, {"sha": "b52e1abc1a314a5a3e56d021c353dec735884ec7", "filename": "src/doc/tutorial.md", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/e2e754810c78a25c902b76c74ba8f04d0dcdc6f1/src%2Fdoc%2Ftutorial.md", "raw_url": "https://github.com/rust-lang/rust/raw/e2e754810c78a25c902b76c74ba8f04d0dcdc6f1/src%2Fdoc%2Ftutorial.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Ftutorial.md?ref=e2e754810c78a25c902b76c74ba8f04d0dcdc6f1", "patch": "@@ -3096,8 +3096,8 @@ Therefore, if you plan to compile your crate as a library, you should annotate i\n ~~~~\n // `lib.rs`\n \n-# #[crate_type = \"lib\"];\n-#[crate_id = \"farm#2.5\"];\n+# #![crate_type = \"lib\"]\n+#![crate_id = \"farm#2.5\"]\n \n // ...\n # fn farm() {}\n@@ -3121,8 +3121,8 @@ or setting the crate type (library or executable) explicitly:\n // ...\n \n // This crate is a library (\"bin\" is the default)\n-#[crate_id = \"farm#2.5\"];\n-#[crate_type = \"lib\"];\n+#![crate_id = \"farm#2.5\"]\n+#![crate_type = \"lib\"]\n \n // Turn on a warning\n #[warn(non_camel_case_types)]\n@@ -3137,7 +3137,7 @@ We define two crates, and use one of them as a library in the other.\n \n ~~~~\n // `world.rs`\n-#[crate_id = \"world#0.42\"];\n+#![crate_id = \"world#0.42\"]\n \n # mod secret_module_to_make_this_test_run {\n pub fn explore() -> &'static str { \"world\" }\n@@ -3211,12 +3211,12 @@ Both auto-insertions can be disabled with an attribute if necessary:\n \n ~~~\n // In the crate root:\n-#[no_std];\n+#![no_std]\n ~~~\n \n ~~~\n // In any module:\n-#[no_implicit_prelude];\n+#![no_implicit_prelude]\n ~~~\n \n See the [API documentation][stddoc] for details."}]}