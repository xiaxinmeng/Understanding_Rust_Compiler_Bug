{"sha": "22b7eb38024afc38dbcfaa18796371b7d6b5b1d0", "node_id": "MDY6Q29tbWl0NzI0NzEyOjIyYjdlYjM4MDI0YWZjMzhkYmNmYWExODc5NjM3MWI3ZDZiNWIxZDA=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2013-06-28T21:36:33Z"}, "committer": {"name": "Daniel Micay", "email": "danielmicay@gmail.com", "date": "2013-06-29T04:56:36Z"}, "message": "Rename #[mutable] to #[no_freeze]", "tree": {"sha": "9e7ea87772d5c812addbdb854ccc703ded0bc733", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9e7ea87772d5c812addbdb854ccc703ded0bc733"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/22b7eb38024afc38dbcfaa18796371b7d6b5b1d0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/22b7eb38024afc38dbcfaa18796371b7d6b5b1d0", "html_url": "https://github.com/rust-lang/rust/commit/22b7eb38024afc38dbcfaa18796371b7d6b5b1d0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/22b7eb38024afc38dbcfaa18796371b7d6b5b1d0/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "thestinger", "id": 1505226, "node_id": "MDQ6VXNlcjE1MDUyMjY=", "avatar_url": "https://avatars.githubusercontent.com/u/1505226?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thestinger", "html_url": "https://github.com/thestinger", "followers_url": "https://api.github.com/users/thestinger/followers", "following_url": "https://api.github.com/users/thestinger/following{/other_user}", "gists_url": "https://api.github.com/users/thestinger/gists{/gist_id}", "starred_url": "https://api.github.com/users/thestinger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thestinger/subscriptions", "organizations_url": "https://api.github.com/users/thestinger/orgs", "repos_url": "https://api.github.com/users/thestinger/repos", "events_url": "https://api.github.com/users/thestinger/events{/privacy}", "received_events_url": "https://api.github.com/users/thestinger/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4af7ebcd8f72356880abccc411a1632e8f07e1c1", "url": "https://api.github.com/repos/rust-lang/rust/commits/4af7ebcd8f72356880abccc411a1632e8f07e1c1", "html_url": "https://github.com/rust-lang/rust/commit/4af7ebcd8f72356880abccc411a1632e8f07e1c1"}], "stats": {"total": 18, "additions": 11, "deletions": 7}, "files": [{"sha": "30067c92300cc6dead5b836bb976bd08438014c0", "filename": "src/libextra/arc.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/22b7eb38024afc38dbcfaa18796371b7d6b5b1d0/src%2Flibextra%2Farc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/22b7eb38024afc38dbcfaa18796371b7d6b5b1d0/src%2Flibextra%2Farc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibextra%2Farc.rs?ref=22b7eb38024afc38dbcfaa18796371b7d6b5b1d0", "patch": "@@ -276,7 +276,8 @@ struct RWARCInner<T> { lock: RWlock, failed: bool, data: T }\n  *\n  * Unlike mutex_arcs, rw_arcs are safe, because they cannot be nested.\n  */\n-#[mutable]\n+#[mutable] // XXX remove after snap\n+#[no_freeze]\n struct RWARC<T> {\n     x: UnsafeAtomicRcBox<RWARCInner<T>>,\n }"}, {"sha": "2c6e7a30448cec148bc6806deb0922f4876f7503", "filename": "src/libextra/arena.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/22b7eb38024afc38dbcfaa18796371b7d6b5b1d0/src%2Flibextra%2Farena.rs", "raw_url": "https://github.com/rust-lang/rust/raw/22b7eb38024afc38dbcfaa18796371b7d6b5b1d0/src%2Flibextra%2Farena.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibextra%2Farena.rs?ref=22b7eb38024afc38dbcfaa18796371b7d6b5b1d0", "patch": "@@ -65,7 +65,8 @@ struct Chunk {\n     is_pod: bool,\n }\n \n-#[mutable]\n+#[mutable] // XXX remove after snap\n+#[no_freeze]\n pub struct Arena {\n     // The head is separated out from the list as a unbenchmarked\n     // microoptimization, to avoid needing to case on the list to"}, {"sha": "613c0b1ae417fd431a8bea1364a57c06b9a7dc81", "filename": "src/libextra/rc.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/22b7eb38024afc38dbcfaa18796371b7d6b5b1d0/src%2Flibextra%2Frc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/22b7eb38024afc38dbcfaa18796371b7d6b5b1d0/src%2Flibextra%2Frc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibextra%2Frc.rs?ref=22b7eb38024afc38dbcfaa18796371b7d6b5b1d0", "patch": "@@ -169,7 +169,8 @@ struct RcMutBox<T> {\n /// Mutable reference counted pointer type\n #[non_owned]\n #[no_send]\n-#[mutable]\n+#[mutable] // XXX remove after snap\n+#[no_freeze]\n #[unsafe_no_drop_flag]\n pub struct RcMut<T> {\n     priv ptr: *mut RcMutBox<T>,"}, {"sha": "f1172fb1da65fc9063d06a21fdf757d29532829e", "filename": "src/librustc/middle/ty.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/22b7eb38024afc38dbcfaa18796371b7d6b5b1d0/src%2Flibrustc%2Fmiddle%2Fty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/22b7eb38024afc38dbcfaa18796371b7d6b5b1d0/src%2Flibrustc%2Fmiddle%2Fty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fty.rs?ref=22b7eb38024afc38dbcfaa18796371b7d6b5b1d0", "patch": "@@ -2204,7 +2204,7 @@ pub fn type_contents(cx: ctxt, ty: t) -> TypeContents {\n     }\n \n     fn apply_tc_attr(cx: ctxt, did: def_id, mut tc: TypeContents) -> TypeContents {\n-        if has_attr(cx, did, \"mutable\") {\n+        if has_attr(cx, did, \"no_freeze\") {\n             tc = tc + TC_MUTABLE;\n         }\n         if has_attr(cx, did, \"no_send\") {"}, {"sha": "53ea11f2b0592dfe6b5406ab1390ed2b7e7da42d", "filename": "src/libstd/cell.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/22b7eb38024afc38dbcfaa18796371b7d6b5b1d0/src%2Flibstd%2Fcell.rs", "raw_url": "https://github.com/rust-lang/rust/raw/22b7eb38024afc38dbcfaa18796371b7d6b5b1d0/src%2Flibstd%2Fcell.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fcell.rs?ref=22b7eb38024afc38dbcfaa18796371b7d6b5b1d0", "patch": "@@ -22,7 +22,8 @@ A dynamic, mutable location.\n Similar to a mutable option type, but friendlier.\n */\n \n-#[mutable]\n+#[mutable] // XXX remove after snap\n+#[no_freeze]\n #[deriving(Clone, DeepClone, Eq)]\n #[allow(missing_doc)]\n pub struct Cell<T> {"}, {"sha": "35842a53a315bab89d0abf7003e9d540e0ab973f", "filename": "src/test/compile-fail/mutable-enum.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/22b7eb38024afc38dbcfaa18796371b7d6b5b1d0/src%2Ftest%2Fcompile-fail%2Fmutable-enum.rs", "raw_url": "https://github.com/rust-lang/rust/raw/22b7eb38024afc38dbcfaa18796371b7d6b5b1d0/src%2Ftest%2Fcompile-fail%2Fmutable-enum.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fmutable-enum.rs?ref=22b7eb38024afc38dbcfaa18796371b7d6b5b1d0", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#[mutable]\n+#[no_freeze]\n enum Foo { A }\n \n fn bar<T: Freeze>(_: T) {}"}, {"sha": "6f29fcfd96d205738b5384a699f1de719ad6602d", "filename": "src/test/compile-fail/mutable-struct.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/22b7eb38024afc38dbcfaa18796371b7d6b5b1d0/src%2Ftest%2Fcompile-fail%2Fmutable-struct.rs", "raw_url": "https://github.com/rust-lang/rust/raw/22b7eb38024afc38dbcfaa18796371b7d6b5b1d0/src%2Ftest%2Fcompile-fail%2Fmutable-struct.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fmutable-struct.rs?ref=22b7eb38024afc38dbcfaa18796371b7d6b5b1d0", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#[mutable]\n+#[no_freeze]\n struct Foo { a: int }\n \n fn bar<T: Freeze>(_: T) {}"}]}