{"sha": "d622235b303409016d8b764b4ae7f2098223ce4d", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQ2MjIyMzViMzAzNDA5MDE2ZDhiNzY0YjRhZTdmMjA5ODIyM2NlNGQ=", "commit": {"author": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2015-02-18T22:14:27Z"}, "committer": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2015-02-18T22:14:27Z"}, "message": "Add deprecated versions of the old markers and integrate them back into the variance analysis.", "tree": {"sha": "49b9f121edc4cd6b53cf507aa685b83318d2fb9b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/49b9f121edc4cd6b53cf507aa685b83318d2fb9b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d622235b303409016d8b764b4ae7f2098223ce4d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d622235b303409016d8b764b4ae7f2098223ce4d", "html_url": "https://github.com/rust-lang/rust/commit/d622235b303409016d8b764b4ae7f2098223ce4d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d622235b303409016d8b764b4ae7f2098223ce4d/comments", "author": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a2393e665d484b088773dea58e9f4fa92e8871a7", "url": "https://api.github.com/repos/rust-lang/rust/commits/a2393e665d484b088773dea58e9f4fa92e8871a7", "html_url": "https://github.com/rust-lang/rust/commit/a2393e665d484b088773dea58e9f4fa92e8871a7"}], "stats": {"total": 92, "additions": 91, "deletions": 1}, "files": [{"sha": "c97b1713abc57289a6e063ba50ecded4930b505b", "filename": "src/libcore/marker.rs", "status": "modified", "additions": 37, "deletions": 0, "changes": 37, "blob_url": "https://github.com/rust-lang/rust/blob/d622235b303409016d8b764b4ae7f2098223ce4d/src%2Flibcore%2Fmarker.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d622235b303409016d8b764b4ae7f2098223ce4d/src%2Flibcore%2Fmarker.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fmarker.rs?ref=d622235b303409016d8b764b4ae7f2098223ce4d", "patch": "@@ -383,3 +383,40 @@ mod impls {\n     unsafe impl<'a, T: Sync + ?Sized> Send for &'a T {}\n     unsafe impl<'a, T: Send + ?Sized> Send for &'a mut T {}\n }\n+\n+/// Old-style marker trait. Deprecated.\n+#[unstable(feature = \"core\", reason = \"deprecated\")]\n+#[deprecated(since = \"1.0.0\", reason = \"Replace with `PhantomData<&'a ()>`\")]\n+#[lang=\"contravariant_lifetime\"]\n+pub struct ContravariantLifetime<'a>;\n+\n+/// Old-style marker trait. Deprecated.\n+#[unstable(feature = \"core\", reason = \"deprecated\")]\n+#[deprecated(since = \"1.0.0\", reason = \"Replace with `PhantomData<fn(&'a ())>`\")]\n+#[lang=\"covariant_lifetime\"]\n+pub struct CovariantLifetime<'a>;\n+\n+/// Old-style marker trait. Deprecated.\n+#[unstable(feature = \"core\", reason = \"deprecated\")]\n+#[deprecated(since = \"1.0.0\", reason = \"Replace with `PhantomData<Cell<&'a ()>>`\")]\n+#[lang=\"invariant_lifetime\"]\n+pub struct InvariantLifetime<'a>;\n+\n+/// Old-style marker trait. Deprecated.\n+#[unstable(feature = \"core\", reason = \"deprecated\")]\n+#[deprecated(since = \"1.0.0\", reason = \"Replace with `PhantomData<fn(T)>`\")]\n+#[lang=\"contravariant_type\"]\n+pub struct ContravariantType<T>;\n+\n+/// Old-style marker trait. Deprecated.\n+#[unstable(feature = \"core\", reason = \"deprecated\")]\n+#[deprecated(since = \"1.0.0\", reason = \"Replace with `PhantomData<T>`\")]\n+#[lang=\"covariant_type\"]\n+#[cfg(not(stage0))]\n+pub struct CovariantType<T>;\n+\n+/// Old-style marker trait. Deprecated.\n+#[unstable(feature = \"core\", reason = \"deprecated\")]\n+#[deprecated(since = \"1.0.0\", reason = \"Replace with `PhantomData<Cell<T>>`\")]\n+#[lang=\"invariant_type\"]\n+pub struct InvariantType<T>;"}, {"sha": "68c80def7ff4009b9c986cf0c156502acc601e54", "filename": "src/librustc/middle/lang_items.rs", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/d622235b303409016d8b764b4ae7f2098223ce4d/src%2Flibrustc%2Fmiddle%2Flang_items.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d622235b303409016d8b764b4ae7f2098223ce4d/src%2Flibrustc%2Fmiddle%2Flang_items.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Flang_items.rs?ref=d622235b303409016d8b764b4ae7f2098223ce4d", "patch": "@@ -315,6 +315,14 @@ lets_do_this! {\n     PhantomFnItem,                   \"phantom_fn\",              phantom_fn;\n     PhantomDataItem,                 \"phantom_data\",            phantom_data;\n \n+    // Deprecated:\n+    CovariantTypeItem,               \"covariant_type\",          covariant_type;\n+    ContravariantTypeItem,           \"contravariant_type\",      contravariant_type;\n+    InvariantTypeItem,               \"invariant_type\",          invariant_type;\n+    CovariantLifetimeItem,           \"covariant_lifetime\",      covariant_lifetime;\n+    ContravariantLifetimeItem,       \"contravariant_lifetime\",  contravariant_lifetime;\n+    InvariantLifetimeItem,           \"invariant_lifetime\",      invariant_lifetime;\n+\n     NoCopyItem,                      \"no_copy_bound\",           no_copy_bound;\n     ManagedItem,                     \"managed_bound\",           managed_bound;\n "}, {"sha": "d2a400880d5b6957140530e68d314975d7a7f604", "filename": "src/librustc_typeck/variance.rs", "status": "modified", "additions": 11, "deletions": 1, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/d622235b303409016d8b764b4ae7f2098223ce4d/src%2Flibrustc_typeck%2Fvariance.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d622235b303409016d8b764b4ae7f2098223ce4d/src%2Flibrustc_typeck%2Fvariance.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fvariance.rs?ref=d622235b303409016d8b764b4ae7f2098223ce4d", "patch": "@@ -335,7 +335,17 @@ fn lang_items(tcx: &ty::ctxt) -> Vec<(ast::NodeId,Vec<ty::Variance>)> {\n     let all = vec![\n         (tcx.lang_items.phantom_fn(), vec![ty::Contravariant, ty::Covariant]),\n         (tcx.lang_items.phantom_data(), vec![ty::Covariant]),\n-        (tcx.lang_items.unsafe_cell_type(), vec![ty::Invariant])];\n+        (tcx.lang_items.unsafe_cell_type(), vec![ty::Invariant]),\n+\n+        // Deprecated:\n+        (tcx.lang_items.covariant_type(), vec![ty::Covariant]),\n+        (tcx.lang_items.contravariant_type(), vec![ty::Contravariant]),\n+        (tcx.lang_items.invariant_type(), vec![ty::Invariant]),\n+        (tcx.lang_items.covariant_lifetime(), vec![ty::Covariant]),\n+        (tcx.lang_items.contravariant_lifetime(), vec![ty::Contravariant]),\n+        (tcx.lang_items.invariant_lifetime(), vec![ty::Invariant]),\n+\n+        ];\n \n     all.into_iter()\n        .filter(|&(ref d,_)| d.is_some())"}, {"sha": "8f9d24cb132c2e4f2a475a4a540338ac5079b2ad", "filename": "src/test/compile-fail/variance-deprecated-markers.rs", "status": "added", "additions": 35, "deletions": 0, "changes": 35, "blob_url": "https://github.com/rust-lang/rust/blob/d622235b303409016d8b764b4ae7f2098223ce4d/src%2Ftest%2Fcompile-fail%2Fvariance-deprecated-markers.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d622235b303409016d8b764b4ae7f2098223ce4d/src%2Ftest%2Fcompile-fail%2Fvariance-deprecated-markers.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fvariance-deprecated-markers.rs?ref=d622235b303409016d8b764b4ae7f2098223ce4d", "patch": "@@ -0,0 +1,35 @@\n+// Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// Test that the deprecated markers still have their old effect.\n+\n+#![feature(rustc_attrs)]\n+\n+use std::marker;\n+\n+#[rustc_variance]\n+struct A<T>(marker::CovariantType<T>); //~ ERROR types=[[+];[];[]]\n+\n+#[rustc_variance]\n+struct B<T>(marker::ContravariantType<T>); //~ ERROR types=[[-];[];[]]\n+\n+#[rustc_variance]\n+struct C<T>(marker::InvariantType<T>); //~ ERROR types=[[o];[];[]]\n+\n+#[rustc_variance]\n+struct D<'a>(marker::CovariantLifetime<'a>); //~ ERROR regions=[[+];[];[]]\n+\n+#[rustc_variance]\n+struct E<'a>(marker::ContravariantLifetime<'a>); //~ ERROR regions=[[-];[];[]]\n+\n+#[rustc_variance]\n+struct F<'a>(marker::InvariantLifetime<'a>); //~ ERROR regions=[[o];[];[]]\n+\n+fn main() { }"}]}