{"sha": "53a66acbd3b5f2aff302092bf7b3f05549da7427", "node_id": "MDY6Q29tbWl0NzI0NzEyOjUzYTY2YWNiZDNiNWYyYWZmMzAyMDkyYmY3YjNmMDU1NDlkYTc0Mjc=", "commit": {"author": {"name": "Yuki Okushi", "email": "jtitor@2k36.org", "date": "2021-08-12T06:32:54Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-08-12T06:32:54Z"}, "message": "Rollup merge of #87671 - jesyspa:issue-87319-multiple-newlines, r=estebank\n\nWarn when an escaped newline skips multiple lines\n\nResolves #87319", "tree": {"sha": "aa16d6c99c7111b64ba3038bfc6fe98338b90789", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/aa16d6c99c7111b64ba3038bfc6fe98338b90789"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/53a66acbd3b5f2aff302092bf7b3f05549da7427", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJhFMCWCRBK7hj4Ov3rIwAA5FsIADm71ZjAC24uf/znAFLjEyPt\n6V2udE9L1unUx92TgSUj18iISfJ8zEiZLFOlAuZG5ROeHDhPtK+IhP/jIX9XLNr5\nkFvbnkkMapz5D7HvHI2++PB1bh3CxbzTQSt6vALzp4Wvhpgyhq65yVTRQ93wDKHv\nBiCPxbwwwdQu1AqyepES3TrNoJh2TV3hHMUc5EzTPapvodc6E8UCA1DUgoXD//pu\nI9TkPiKIrYQurRDDoXHU7ejp8NdBDSFbnX2+B5ny6FK4+bcnb4c1j0x27jT1H9QU\nYPQbd0CArDoKMuQWIPcwZwmOgNg740VxPrgL8IMskbC8vWsMK79KK71dIuw4qn0=\n=+xOO\n-----END PGP SIGNATURE-----\n", "payload": "tree aa16d6c99c7111b64ba3038bfc6fe98338b90789\nparent 688094b868f4ebe344c06ea2ba5b445ebef6ae67\nparent 07aacf53c5105435358e7993b5f8cc96ef454c52\nauthor Yuki Okushi <jtitor@2k36.org> 1628749974 +0900\ncommitter GitHub <noreply@github.com> 1628749974 +0900\n\nRollup merge of #87671 - jesyspa:issue-87319-multiple-newlines, r=estebank\n\nWarn when an escaped newline skips multiple lines\n\nResolves #87319\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/53a66acbd3b5f2aff302092bf7b3f05549da7427", "html_url": "https://github.com/rust-lang/rust/commit/53a66acbd3b5f2aff302092bf7b3f05549da7427", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/53a66acbd3b5f2aff302092bf7b3f05549da7427/comments", "author": {"login": "JohnTitor", "id": 25030997, "node_id": "MDQ6VXNlcjI1MDMwOTk3", "avatar_url": "https://avatars.githubusercontent.com/u/25030997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JohnTitor", "html_url": "https://github.com/JohnTitor", "followers_url": "https://api.github.com/users/JohnTitor/followers", "following_url": "https://api.github.com/users/JohnTitor/following{/other_user}", "gists_url": "https://api.github.com/users/JohnTitor/gists{/gist_id}", "starred_url": "https://api.github.com/users/JohnTitor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JohnTitor/subscriptions", "organizations_url": "https://api.github.com/users/JohnTitor/orgs", "repos_url": "https://api.github.com/users/JohnTitor/repos", "events_url": "https://api.github.com/users/JohnTitor/events{/privacy}", "received_events_url": "https://api.github.com/users/JohnTitor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "688094b868f4ebe344c06ea2ba5b445ebef6ae67", "url": "https://api.github.com/repos/rust-lang/rust/commits/688094b868f4ebe344c06ea2ba5b445ebef6ae67", "html_url": "https://github.com/rust-lang/rust/commit/688094b868f4ebe344c06ea2ba5b445ebef6ae67"}, {"sha": "07aacf53c5105435358e7993b5f8cc96ef454c52", "url": "https://api.github.com/repos/rust-lang/rust/commits/07aacf53c5105435358e7993b5f8cc96ef454c52", "html_url": "https://github.com/rust-lang/rust/commit/07aacf53c5105435358e7993b5f8cc96ef454c52"}], "stats": {"total": 67, "additions": 59, "deletions": 8}, "files": [{"sha": "b970c9e4911fafb36ff0612c0e30fb417d46437f", "filename": "compiler/rustc_lexer/src/unescape.rs", "status": "modified", "additions": 13, "deletions": 4, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/53a66acbd3b5f2aff302092bf7b3f05549da7427/compiler%2Frustc_lexer%2Fsrc%2Funescape.rs", "raw_url": "https://github.com/rust-lang/rust/raw/53a66acbd3b5f2aff302092bf7b3f05549da7427/compiler%2Frustc_lexer%2Fsrc%2Funescape.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_lexer%2Fsrc%2Funescape.rs?ref=53a66acbd3b5f2aff302092bf7b3f05549da7427", "patch": "@@ -60,13 +60,17 @@ pub enum EscapeError {\n     /// After a line ending with '\\', the next line contains whitespace\n     /// characters that are not skipped.\n     UnskippedWhitespaceWarning,\n+\n+    /// After a line ending with '\\', multiple lines are skipped.\n+    MultipleSkippedLinesWarning,\n }\n \n impl EscapeError {\n     /// Returns true for actual errors, as opposed to warnings.\n     pub fn is_fatal(&self) -> bool {\n         match self {\n             EscapeError::UnskippedWhitespaceWarning => false,\n+            EscapeError::MultipleSkippedLinesWarning => false,\n             _ => true,\n         }\n     }\n@@ -315,12 +319,17 @@ where\n     where\n         F: FnMut(Range<usize>, Result<char, EscapeError>),\n     {\n-        let str = chars.as_str();\n-        let first_non_space = str\n+        let tail = chars.as_str();\n+        let first_non_space = tail\n             .bytes()\n             .position(|b| b != b' ' && b != b'\\t' && b != b'\\n' && b != b'\\r')\n-            .unwrap_or(str.len());\n-        let tail = &str[first_non_space..];\n+            .unwrap_or(tail.len());\n+        if tail[1..first_non_space].contains('\\n') {\n+            // The +1 accounts for the escaping slash.\n+            let end = start + first_non_space + 1;\n+            callback(start..end, Err(EscapeError::MultipleSkippedLinesWarning));\n+        }\n+        let tail = &tail[first_non_space..];\n         if let Some(c) = tail.chars().nth(0) {\n             // For error reporting, we would like the span to contain the character that was not\n             // skipped.  The +1 is necessary to account for the leading \\ that started the escape."}, {"sha": "fa61554afde6c5d16c87b462e0ca802b15a7e0a7", "filename": "compiler/rustc_lexer/src/unescape/tests.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/53a66acbd3b5f2aff302092bf7b3f05549da7427/compiler%2Frustc_lexer%2Fsrc%2Funescape%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/53a66acbd3b5f2aff302092bf7b3f05549da7427/compiler%2Frustc_lexer%2Fsrc%2Funescape%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_lexer%2Fsrc%2Funescape%2Ftests.rs?ref=53a66acbd3b5f2aff302092bf7b3f05549da7427", "patch": "@@ -106,6 +106,10 @@ fn test_unescape_str_warn() {\n         assert_eq!(unescaped, expected);\n     }\n \n+    // Check we can handle escaped newlines at the end of a file.\n+    check(\"\\\\\\n\", &[]);\n+    check(\"\\\\\\n \", &[]);\n+\n     check(\n         \"\\\\\\n \\u{a0} x\",\n         &[\n@@ -115,6 +119,7 @@ fn test_unescape_str_warn() {\n             (6..7, Ok('x')),\n         ],\n     );\n+    check(\"\\\\\\n  \\n  x\", &[(0..7, Err(EscapeError::MultipleSkippedLinesWarning)), (7..8, Ok('x'))]);\n }\n \n #[test]"}, {"sha": "aa6b424ce2b57ec167c85c7086471cc3165d62ec", "filename": "compiler/rustc_parse/src/lexer/unescape_error_reporting.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/53a66acbd3b5f2aff302092bf7b3f05549da7427/compiler%2Frustc_parse%2Fsrc%2Flexer%2Funescape_error_reporting.rs", "raw_url": "https://github.com/rust-lang/rust/raw/53a66acbd3b5f2aff302092bf7b3f05549da7427/compiler%2Frustc_parse%2Fsrc%2Flexer%2Funescape_error_reporting.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_parse%2Fsrc%2Flexer%2Funescape_error_reporting.rs?ref=53a66acbd3b5f2aff302092bf7b3f05549da7427", "patch": "@@ -280,6 +280,11 @@ pub(crate) fn emit_unescape_error(\n                 format!(\"non-ASCII whitespace symbol '{}' is not skipped\", c.escape_unicode());\n             handler.struct_span_warn(span, &msg).span_label(char_span, &msg).emit();\n         }\n+        EscapeError::MultipleSkippedLinesWarning => {\n+            let msg = \"multiple lines skipped by escaped newline\";\n+            let bottom_msg = \"skipping everything up to and including this point\";\n+            handler.struct_span_warn(span, msg).span_label(span, bottom_msg).emit();\n+        }\n     }\n }\n "}, {"sha": "1f7f0d8f6be6ae72c93d62814c3296dc4c807350", "filename": "src/test/ui/fmt/format-string-error-2.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/53a66acbd3b5f2aff302092bf7b3f05549da7427/src%2Ftest%2Fui%2Ffmt%2Fformat-string-error-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/53a66acbd3b5f2aff302092bf7b3f05549da7427/src%2Ftest%2Fui%2Ffmt%2Fformat-string-error-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffmt%2Fformat-string-error-2.rs?ref=53a66acbd3b5f2aff302092bf7b3f05549da7427", "patch": "@@ -5,7 +5,7 @@ fn main() {\n     a\");\n     //~^ ERROR invalid format string\n     format!(\"{ \\\n-\n+               \\\n     b\");\n     //~^ ERROR invalid format string\n     format!(r#\"{ \\\n@@ -38,12 +38,12 @@ fn main() {\n     { \\\n     \t\\\n     b \\\n-\n+      \\\n     \");\n     //~^^^ ERROR invalid format string\n     format!(r#\"\n raw  { \\\n-\n+       \\\n     c\"#);\n     //~^^^ ERROR invalid format string\n     format!(r#\""}, {"sha": "76cdfbb93bf24cad988434f806f096698cd8a0c6", "filename": "src/test/ui/fmt/format-string-error-2.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/53a66acbd3b5f2aff302092bf7b3f05549da7427/src%2Ftest%2Fui%2Ffmt%2Fformat-string-error-2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/53a66acbd3b5f2aff302092bf7b3f05549da7427/src%2Ftest%2Fui%2Ffmt%2Fformat-string-error-2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffmt%2Fformat-string-error-2.stderr?ref=53a66acbd3b5f2aff302092bf7b3f05549da7427", "patch": "@@ -19,7 +19,7 @@ error: invalid format string: expected `'}'`, found `'b'`\n    |\n LL |     format!(\"{ \\\n    |              - because of this opening brace\n-LL | \n+LL |                \\\n LL |     b\");\n    |     ^ expected `}` in format string\n    |"}, {"sha": "0264632fd24a15c8b2c3dfce961336da8e7491f7", "filename": "src/test/ui/str/str-escape.rs", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/53a66acbd3b5f2aff302092bf7b3f05549da7427/src%2Ftest%2Fui%2Fstr%2Fstr-escape.rs", "raw_url": "https://github.com/rust-lang/rust/raw/53a66acbd3b5f2aff302092bf7b3f05549da7427/src%2Ftest%2Fui%2Fstr%2Fstr-escape.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fstr%2Fstr-escape.rs?ref=53a66acbd3b5f2aff302092bf7b3f05549da7427", "patch": "@@ -0,0 +1,11 @@\n+// check-pass\n+fn main() {\n+    let s = \"\\\n+\n+             \";\n+    //~^^^ WARNING multiple lines skipped by escaped newline\n+    let s = \"foo\\\n+  \u00a0          bar\n+             \";\n+    //~^^^ WARNING non-ASCII whitespace symbol '\\u{a0}' is not skipped\n+}"}, {"sha": "b2501f1a2145f3069a61d49a2e71a20e369d0fe0", "filename": "src/test/ui/str/str-escape.stderr", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/53a66acbd3b5f2aff302092bf7b3f05549da7427/src%2Ftest%2Fui%2Fstr%2Fstr-escape.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/53a66acbd3b5f2aff302092bf7b3f05549da7427/src%2Ftest%2Fui%2Fstr%2Fstr-escape.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fstr%2Fstr-escape.stderr?ref=53a66acbd3b5f2aff302092bf7b3f05549da7427", "patch": "@@ -0,0 +1,21 @@\n+warning: multiple lines skipped by escaped newline\n+  --> $DIR/str-escape.rs:3:14\n+   |\n+LL |       let s = \"\\\n+   |  ______________^\n+LL | |\n+LL | |              \";\n+   | |_____________^ skipping everything up to and including this point\n+\n+warning: non-ASCII whitespace symbol '\\u{a0}' is not skipped\n+  --> $DIR/str-escape.rs:7:17\n+   |\n+LL |       let s = \"foo\\\n+   |  _________________^\n+LL | |   \u00a0          bar\n+   | |   ^ non-ASCII whitespace symbol '\\u{a0}' is not skipped\n+   | |___|\n+   | \n+\n+warning: 2 warnings emitted\n+"}]}