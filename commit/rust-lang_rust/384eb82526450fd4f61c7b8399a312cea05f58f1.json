{"sha": "384eb82526450fd4f61c7b8399a312cea05f58f1", "node_id": "MDY6Q29tbWl0NzI0NzEyOjM4NGViODI1MjY0NTBmZDRmNjFjN2I4Mzk5YTMxMmNlYTA1ZjU4ZjE=", "commit": {"author": {"name": "Oliver Schneider", "email": "git-no-reply-9879165716479413131@oli-obk.de", "date": "2017-02-04T12:18:51Z"}, "committer": {"name": "Oliver Schneider", "email": "git-no-reply-9879165716479413131@oli-obk.de", "date": "2017-02-04T12:18:51Z"}, "message": "don't record elided lifetimes on trait objects", "tree": {"sha": "5425fed19d5a6ecec485f386933945f89993189e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5425fed19d5a6ecec485f386933945f89993189e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/384eb82526450fd4f61c7b8399a312cea05f58f1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/384eb82526450fd4f61c7b8399a312cea05f58f1", "html_url": "https://github.com/rust-lang/rust/commit/384eb82526450fd4f61c7b8399a312cea05f58f1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/384eb82526450fd4f61c7b8399a312cea05f58f1/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d68f0797bf341e9d0ecdb5beb5d666848204abf1", "url": "https://api.github.com/repos/rust-lang/rust/commits/d68f0797bf341e9d0ecdb5beb5d666848204abf1", "html_url": "https://github.com/rust-lang/rust/commit/d68f0797bf341e9d0ecdb5beb5d666848204abf1"}], "stats": {"total": 10, "additions": 9, "deletions": 1}, "files": [{"sha": "2051c883670506d3df9a1b78939f81a7de7aaf5e", "filename": "clippy_lints/src/lifetimes.rs", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/384eb82526450fd4f61c7b8399a312cea05f58f1/clippy_lints%2Fsrc%2Flifetimes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/384eb82526450fd4f61c7b8399a312cea05f58f1/clippy_lints%2Fsrc%2Flifetimes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Flifetimes.rs?ref=384eb82526450fd4f61c7b8399a312cea05f58f1", "patch": "@@ -231,7 +231,6 @@ impl<'v, 't> RefVisitor<'v, 't> {\n             if &*lt.name.as_str() == \"'static\" {\n                 self.lts.push(RefLt::Static);\n             } else if lt.is_elided() {\n-                // TODO: investigate\n                 self.lts.push(RefLt::Unnamed);\n             } else {\n                 self.lts.push(RefLt::Named(lt.name));\n@@ -291,6 +290,15 @@ impl<'a, 'tcx> Visitor<'tcx> for RefVisitor<'a, 'tcx> {\n                     }\n                 }\n             },\n+            TyTraitObject(ref bounds, ref lt) => {\n+                if !lt.is_elided() {\n+                    self.record(&Some(*lt));\n+                }\n+                for bound in bounds {\n+                    self.visit_poly_trait_ref(bound, TraitBoundModifier::None);\n+                }\n+                return;\n+            },\n             _ => (),\n         }\n         walk_ty(self, ty);"}]}