{"sha": "ea8fa05edf94a174763d94bd661b3726b1365ae0", "node_id": "MDY6Q29tbWl0NzI0NzEyOmVhOGZhMDVlZGY5NGExNzQ3NjNkOTRiZDY2MWIzNzI2YjEzNjVhZTA=", "commit": {"author": {"name": "Nick Cameron", "email": "nrc@ncameron.org", "date": "2016-11-07T20:58:10Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2016-11-07T20:58:10Z"}, "message": "Merge pull request #1212 from marcusklaas/test123\n\nCondense suffix strings of simple wildcards in patterns", "tree": {"sha": "9f9d615edb451fb1c4f440f13f7989e33c555dae", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9f9d615edb451fb1c4f440f13f7989e33c555dae"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ea8fa05edf94a174763d94bd661b3726b1365ae0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ea8fa05edf94a174763d94bd661b3726b1365ae0", "html_url": "https://github.com/rust-lang/rust/commit/ea8fa05edf94a174763d94bd661b3726b1365ae0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ea8fa05edf94a174763d94bd661b3726b1365ae0/comments", "author": {"login": "nrc", "id": 762626, "node_id": "MDQ6VXNlcjc2MjYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/762626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nrc", "html_url": "https://github.com/nrc", "followers_url": "https://api.github.com/users/nrc/followers", "following_url": "https://api.github.com/users/nrc/following{/other_user}", "gists_url": "https://api.github.com/users/nrc/gists{/gist_id}", "starred_url": "https://api.github.com/users/nrc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nrc/subscriptions", "organizations_url": "https://api.github.com/users/nrc/orgs", "repos_url": "https://api.github.com/users/nrc/repos", "events_url": "https://api.github.com/users/nrc/events{/privacy}", "received_events_url": "https://api.github.com/users/nrc/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "664f646979e671efe13feeba6648139b51ea09ca", "url": "https://api.github.com/repos/rust-lang/rust/commits/664f646979e671efe13feeba6648139b51ea09ca", "html_url": "https://github.com/rust-lang/rust/commit/664f646979e671efe13feeba6648139b51ea09ca"}, {"sha": "5fc9fa377043fccde46b939ee5561e510a2bb931", "url": "https://api.github.com/repos/rust-lang/rust/commits/5fc9fa377043fccde46b939ee5561e510a2bb931", "html_url": "https://github.com/rust-lang/rust/commit/5fc9fa377043fccde46b939ee5561e510a2bb931"}], "stats": {"total": 77, "additions": 67, "deletions": 10}, "files": [{"sha": "8fe9552c7f869e67f259bea3cb792d15904619f3", "filename": "src/config.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ea8fa05edf94a174763d94bd661b3726b1365ae0/src%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ea8fa05edf94a174763d94bd661b3726b1365ae0/src%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fconfig.rs?ref=ea8fa05edf94a174763d94bd661b3726b1365ae0", "patch": "@@ -422,4 +422,6 @@ create_config! {\n     use_try_shorthand: bool, false, \"Replace uses of the try! macro by the ? shorthand\";\n     write_mode: WriteMode, WriteMode::Replace,\n         \"What Write Mode to use when none is supplied: Replace, Overwrite, Display, Diff, Coverage\";\n+    condense_wildcard_suffices: bool, false, \"Replace strings of _ wildcards by a single .. in\n+        tuple patterns\"\n }"}, {"sha": "c9a29681728639976ae36bcb4877955489ffca90", "filename": "src/patterns.rs", "status": "modified", "additions": 39, "deletions": 10, "changes": 49, "blob_url": "https://github.com/rust-lang/rust/blob/ea8fa05edf94a174763d94bd661b3726b1365ae0/src%2Fpatterns.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ea8fa05edf94a174763d94bd661b3726b1365ae0/src%2Fpatterns.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fpatterns.rs?ref=ea8fa05edf94a174763d94bd661b3726b1365ae0", "patch": "@@ -12,7 +12,7 @@ use Indent;\n use codemap::SpanUtils;\n use rewrite::{Rewrite, RewriteContext};\n use utils::{wrap_str, format_mutability};\n-use lists::{format_item_list, itemize_list};\n+use lists::{format_item_list, itemize_list, ListItem};\n use expr::{rewrite_unary_prefix, rewrite_pair};\n use types::rewrite_path;\n use super::Spanned;\n@@ -226,16 +226,28 @@ fn rewrite_tuple_pat(pats: &[ptr::P<ast::Pat>],\n         let width = try_opt!(width.checked_sub(path_len + if add_comma { 3 } else { 2 }));\n         // 1 = \"(\".len()\n         let offset = offset + path_len + 1;\n-        let items = itemize_list(context.codemap,\n-                                 pat_vec.iter(),\n-                                 if add_comma { \",)\" } else { \")\" },\n-                                 |item| item.span().lo,\n-                                 |item| item.span().hi,\n-                                 |item| item.rewrite(context, width, offset),\n-                                 context.codemap.span_after(span, \"(\"),\n-                                 span.hi - BytePos(1));\n+        let mut items: Vec<_> = itemize_list(context.codemap,\n+                                             pat_vec.iter(),\n+                                             if add_comma { \",)\" } else { \")\" },\n+                                             |item| item.span().lo,\n+                                             |item| item.span().hi,\n+                                             |item| item.rewrite(context, width, offset),\n+                                             context.codemap.span_after(span, \"(\"),\n+                                             span.hi - BytePos(1))\n+            .collect();\n \n-        let list = try_opt!(format_item_list(items, width, offset, context.config));\n+        // Condense wildcard string suffix into a single ..\n+        let wildcard_suffix_len = count_wildcard_suffix_len(&items);\n+\n+        let list = if context.config.condense_wildcard_suffices && wildcard_suffix_len >= 2 {\n+            let new_item_count = 1 + pats.len() - wildcard_suffix_len;\n+            items[new_item_count - 1].item = Some(\"..\".to_owned());\n+\n+            let da_iter = items.into_iter().take(new_item_count);\n+            try_opt!(format_item_list(da_iter, width, offset, context.config))\n+        } else {\n+            try_opt!(format_item_list(items.into_iter(), width, offset, context.config))\n+        };\n \n         match path_str {\n             Some(path_str) => {\n@@ -256,3 +268,20 @@ fn rewrite_tuple_pat(pats: &[ptr::P<ast::Pat>],\n         }\n     }\n }\n+\n+fn count_wildcard_suffix_len(items: &[ListItem]) -> usize {\n+    let mut suffix_len = 0;\n+\n+    for item in items.iter().rev().take_while(|i| match i.item {\n+        Some(ref internal_string) if internal_string == \"_\" => true,\n+        _ => false,\n+    }) {\n+        suffix_len += 1;\n+\n+        if item.pre_comment.is_some() || item.post_comment.is_some() {\n+            break;\n+        }\n+    }\n+\n+    suffix_len\n+}"}, {"sha": "bac712528dc522fc2714a3caa54744e40ad3de34", "filename": "tests/source/pattern-condense-wildcards.rs", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/ea8fa05edf94a174763d94bd661b3726b1365ae0/tests%2Fsource%2Fpattern-condense-wildcards.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ea8fa05edf94a174763d94bd661b3726b1365ae0/tests%2Fsource%2Fpattern-condense-wildcards.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fsource%2Fpattern-condense-wildcards.rs?ref=ea8fa05edf94a174763d94bd661b3726b1365ae0", "patch": "@@ -0,0 +1,11 @@\n+// rustfmt-condense_wildcard_suffices: true\n+\n+fn main() {\n+    match x {\n+        Butt (_,_) => \"hah\",\n+        Tup (_) =>  \"nah\",\n+        Quad (_,_, x,_) =>   \" also no rewrite\",\n+        Quad (x, _, _, _) => \"condense me pls\",\n+        Weird (x, _, _, /* dont condense before */ _, _, _) => \"pls work\",\n+    }\n+}"}, {"sha": "96519cf3d4466c4d60d332251bcebaf9629366eb", "filename": "tests/target/pattern-condense-wildcards.rs", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/ea8fa05edf94a174763d94bd661b3726b1365ae0/tests%2Ftarget%2Fpattern-condense-wildcards.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ea8fa05edf94a174763d94bd661b3726b1365ae0/tests%2Ftarget%2Fpattern-condense-wildcards.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fpattern-condense-wildcards.rs?ref=ea8fa05edf94a174763d94bd661b3726b1365ae0", "patch": "@@ -0,0 +1,15 @@\n+// rustfmt-condense_wildcard_suffices: true\n+\n+fn main() {\n+    match x {\n+        Butt(..) => \"hah\",\n+        Tup(_) => \"nah\",\n+        Quad(_, _, x, _) => \" also no rewrite\",\n+        Quad(x, ..) => \"condense me pls\",\n+        Weird(x,\n+              _,\n+              _,\n+              // dont condense before\n+              ..) => \"pls work\",\n+    }\n+}"}]}