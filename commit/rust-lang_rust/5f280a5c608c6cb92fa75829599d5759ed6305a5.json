{"sha": "5f280a5c608c6cb92fa75829599d5759ed6305a5", "node_id": "MDY6Q29tbWl0NzI0NzEyOjVmMjgwYTVjNjA4YzZjYjkyZmE3NTgyOTU5OWQ1NzU5ZWQ2MzA1YTU=", "commit": {"author": {"name": "Jeffrey Seyfried", "email": "jeffrey.seyfried@gmail.com", "date": "2016-11-03T03:33:21Z"}, "committer": {"name": "Jeffrey Seyfried", "email": "jeffrey.seyfried@gmail.com", "date": "2016-11-03T23:48:24Z"}, "message": "Clean up `parser.parse_token_tree()`.", "tree": {"sha": "1a2f089c842ad6dd3e36ef80b93c6b68e9d7d983", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1a2f089c842ad6dd3e36ef80b93c6b68e9d7d983"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5f280a5c608c6cb92fa75829599d5759ed6305a5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5f280a5c608c6cb92fa75829599d5759ed6305a5", "html_url": "https://github.com/rust-lang/rust/commit/5f280a5c608c6cb92fa75829599d5759ed6305a5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5f280a5c608c6cb92fa75829599d5759ed6305a5/comments", "author": {"login": "jseyfried", "id": 8652869, "node_id": "MDQ6VXNlcjg2NTI4Njk=", "avatar_url": "https://avatars.githubusercontent.com/u/8652869?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jseyfried", "html_url": "https://github.com/jseyfried", "followers_url": "https://api.github.com/users/jseyfried/followers", "following_url": "https://api.github.com/users/jseyfried/following{/other_user}", "gists_url": "https://api.github.com/users/jseyfried/gists{/gist_id}", "starred_url": "https://api.github.com/users/jseyfried/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jseyfried/subscriptions", "organizations_url": "https://api.github.com/users/jseyfried/orgs", "repos_url": "https://api.github.com/users/jseyfried/repos", "events_url": "https://api.github.com/users/jseyfried/events{/privacy}", "received_events_url": "https://api.github.com/users/jseyfried/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jseyfried", "id": 8652869, "node_id": "MDQ6VXNlcjg2NTI4Njk=", "avatar_url": "https://avatars.githubusercontent.com/u/8652869?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jseyfried", "html_url": "https://github.com/jseyfried", "followers_url": "https://api.github.com/users/jseyfried/followers", "following_url": "https://api.github.com/users/jseyfried/following{/other_user}", "gists_url": "https://api.github.com/users/jseyfried/gists{/gist_id}", "starred_url": "https://api.github.com/users/jseyfried/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jseyfried/subscriptions", "organizations_url": "https://api.github.com/users/jseyfried/orgs", "repos_url": "https://api.github.com/users/jseyfried/repos", "events_url": "https://api.github.com/users/jseyfried/events{/privacy}", "received_events_url": "https://api.github.com/users/jseyfried/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ac919fcd9d4a958baf99b2f2ed5c3d38a2ebf9d0", "url": "https://api.github.com/repos/rust-lang/rust/commits/ac919fcd9d4a958baf99b2f2ed5c3d38a2ebf9d0", "html_url": "https://github.com/rust-lang/rust/commit/ac919fcd9d4a958baf99b2f2ed5c3d38a2ebf9d0"}], "stats": {"total": 35, "additions": 13, "deletions": 22}, "files": [{"sha": "eb68f5a309b9c07369638d0dd86f852c38795bf0", "filename": "src/libsyntax/parse/parser.rs", "status": "modified", "additions": 13, "deletions": 22, "changes": 35, "blob_url": "https://github.com/rust-lang/rust/blob/5f280a5c608c6cb92fa75829599d5759ed6305a5/src%2Flibsyntax%2Fparse%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5f280a5c608c6cb92fa75829599d5759ed6305a5/src%2Flibsyntax%2Fparse%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fparser.rs?ref=5f280a5c608c6cb92fa75829599d5759ed6305a5", "patch": "@@ -2833,29 +2833,20 @@ impl<'a> Parser<'a> {\n                     close_span: close_span,\n                 })))\n             },\n+            token::CloseDelim(_) => {\n+                // An unexpected closing delimiter (i.e., there is no\n+                // matching opening delimiter).\n+                let token_str = self.this_token_to_string();\n+                let err = self.diagnostic().struct_span_err(self.span,\n+                    &format!(\"unexpected close delimiter: `{}`\", token_str));\n+                Err(err)\n+            },\n+            /* we ought to allow different depths of unquotation */\n+            token::Dollar | token::SubstNt(..) if self.quote_depth > 0 => {\n+                self.parse_unquoted()\n+            }\n             _ => {\n-                // invariants: the current token is not a left-delimiter,\n-                // not an EOF, and not the desired right-delimiter (if\n-                // it were, parse_seq_to_before_end would have prevented\n-                // reaching this point).\n-                maybe_whole!(deref self, NtTT);\n-                match self.token {\n-                    token::CloseDelim(_) => {\n-                        // An unexpected closing delimiter (i.e., there is no\n-                        // matching opening delimiter).\n-                        let token_str = self.this_token_to_string();\n-                        let err = self.diagnostic().struct_span_err(self.span,\n-                            &format!(\"unexpected close delimiter: `{}`\", token_str));\n-                        Err(err)\n-                    },\n-                    /* we ought to allow different depths of unquotation */\n-                    token::Dollar | token::SubstNt(..) if self.quote_depth > 0 => {\n-                        self.parse_unquoted()\n-                    }\n-                    _ => {\n-                        Ok(TokenTree::Token(self.span, self.bump_and_get()))\n-                    }\n-                }\n+                Ok(TokenTree::Token(self.span, self.bump_and_get()))\n             }\n         }\n     }"}]}