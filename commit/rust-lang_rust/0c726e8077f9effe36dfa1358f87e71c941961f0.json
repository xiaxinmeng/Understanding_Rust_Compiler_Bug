{"sha": "0c726e8077f9effe36dfa1358f87e71c941961f0", "node_id": "MDY6Q29tbWl0NzI0NzEyOjBjNzI2ZTgwNzdmOWVmZmUzNmRmYTEzNThmODdlNzFjOTQxOTYxZjA=", "commit": {"author": {"name": "mcarton", "email": "cartonmartin+git@gmail.com", "date": "2016-01-30T12:39:16Z"}, "committer": {"name": "mcarton", "email": "cartonmartin+git@gmail.com", "date": "2016-02-02T21:34:20Z"}, "message": "Restore some of rustfmt madness", "tree": {"sha": "025ee51414dd49134344cc630392f8aa0ca7c5f9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/025ee51414dd49134344cc630392f8aa0ca7c5f9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0c726e8077f9effe36dfa1358f87e71c941961f0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0c726e8077f9effe36dfa1358f87e71c941961f0", "html_url": "https://github.com/rust-lang/rust/commit/0c726e8077f9effe36dfa1358f87e71c941961f0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0c726e8077f9effe36dfa1358f87e71c941961f0/comments", "author": {"login": "mcarton", "id": 3751788, "node_id": "MDQ6VXNlcjM3NTE3ODg=", "avatar_url": "https://avatars.githubusercontent.com/u/3751788?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mcarton", "html_url": "https://github.com/mcarton", "followers_url": "https://api.github.com/users/mcarton/followers", "following_url": "https://api.github.com/users/mcarton/following{/other_user}", "gists_url": "https://api.github.com/users/mcarton/gists{/gist_id}", "starred_url": "https://api.github.com/users/mcarton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mcarton/subscriptions", "organizations_url": "https://api.github.com/users/mcarton/orgs", "repos_url": "https://api.github.com/users/mcarton/repos", "events_url": "https://api.github.com/users/mcarton/events{/privacy}", "received_events_url": "https://api.github.com/users/mcarton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "mcarton", "id": 3751788, "node_id": "MDQ6VXNlcjM3NTE3ODg=", "avatar_url": "https://avatars.githubusercontent.com/u/3751788?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mcarton", "html_url": "https://github.com/mcarton", "followers_url": "https://api.github.com/users/mcarton/followers", "following_url": "https://api.github.com/users/mcarton/following{/other_user}", "gists_url": "https://api.github.com/users/mcarton/gists{/gist_id}", "starred_url": "https://api.github.com/users/mcarton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mcarton/subscriptions", "organizations_url": "https://api.github.com/users/mcarton/orgs", "repos_url": "https://api.github.com/users/mcarton/repos", "events_url": "https://api.github.com/users/mcarton/events{/privacy}", "received_events_url": "https://api.github.com/users/mcarton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "527af79993e4c179c05cad49d9887d64391aa27b", "url": "https://api.github.com/repos/rust-lang/rust/commits/527af79993e4c179c05cad49d9887d64391aa27b", "html_url": "https://github.com/rust-lang/rust/commit/527af79993e4c179c05cad49d9887d64391aa27b"}], "stats": {"total": 198, "additions": 42, "deletions": 156}, "files": [{"sha": "dfa9a90d9cf181e7e34e4683245833f74544c7e3", "filename": "src/methods.rs", "status": "modified", "additions": 42, "deletions": 156, "changes": 198, "blob_url": "https://github.com/rust-lang/rust/blob/0c726e8077f9effe36dfa1358f87e71c941961f0/src%2Fmethods.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0c726e8077f9effe36dfa1358f87e71c941961f0/src%2Fmethods.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fmethods.rs?ref=0c726e8077f9effe36dfa1358f87e71c941961f0", "patch": "@@ -728,162 +728,48 @@ fn has_debug_impl<'a, 'b>(ty: ty::Ty<'a>, cx: &LateContext<'b, 'a>) -> bool {\n     debug_impl_exists\n }\n \n-const CONVENTIONS: [(&'static str, &'static [SelfKind]); 5] = [(\"into_\", &[SelfKind::Value]),\n-                                                               (\"to_\", &[SelfKind::Ref]),\n-                                                               (\"as_\", &[SelfKind::Ref, SelfKind::RefMut]),\n-                                                               (\"is_\", &[SelfKind::Ref, SelfKind::No]),\n-                                                               (\"from_\", &[SelfKind::No])];\n-\n-const TRAIT_METHODS: [(&'static str, usize, SelfKind, OutType, &'static str); 30] = [(\"add\",\n-                                                                                      2,\n-                                                                                      SelfKind::Value,\n-                                                                                      OutType::Any,\n-                                                                                      \"std::ops::Add\"),\n-                                                                                     (\"sub\",\n-                                                                                      2,\n-                                                                                      SelfKind::Value,\n-                                                                                      OutType::Any,\n-                                                                                      \"std::ops::Sub\"),\n-                                                                                     (\"mul\",\n-                                                                                      2,\n-                                                                                      SelfKind::Value,\n-                                                                                      OutType::Any,\n-                                                                                      \"std::ops::Mul\"),\n-                                                                                     (\"div\",\n-                                                                                      2,\n-                                                                                      SelfKind::Value,\n-                                                                                      OutType::Any,\n-                                                                                      \"std::ops::Div\"),\n-                                                                                     (\"rem\",\n-                                                                                      2,\n-                                                                                      SelfKind::Value,\n-                                                                                      OutType::Any,\n-                                                                                      \"std::ops::Rem\"),\n-                                                                                     (\"shl\",\n-                                                                                      2,\n-                                                                                      SelfKind::Value,\n-                                                                                      OutType::Any,\n-                                                                                      \"std::ops::Shl\"),\n-                                                                                     (\"shr\",\n-                                                                                      2,\n-                                                                                      SelfKind::Value,\n-                                                                                      OutType::Any,\n-                                                                                      \"std::ops::Shr\"),\n-                                                                                     (\"bitand\",\n-                                                                                      2,\n-                                                                                      SelfKind::Value,\n-                                                                                      OutType::Any,\n-                                                                                      \"std::ops::BitAnd\"),\n-                                                                                     (\"bitor\",\n-                                                                                      2,\n-                                                                                      SelfKind::Value,\n-                                                                                      OutType::Any,\n-                                                                                      \"std::ops::BitOr\"),\n-                                                                                     (\"bitxor\",\n-                                                                                      2,\n-                                                                                      SelfKind::Value,\n-                                                                                      OutType::Any,\n-                                                                                      \"std::ops::BitXor\"),\n-                                                                                     (\"neg\",\n-                                                                                      1,\n-                                                                                      SelfKind::Value,\n-                                                                                      OutType::Any,\n-                                                                                      \"std::ops::Neg\"),\n-                                                                                     (\"not\",\n-                                                                                      1,\n-                                                                                      SelfKind::Value,\n-                                                                                      OutType::Any,\n-                                                                                      \"std::ops::Not\"),\n-                                                                                     (\"drop\",\n-                                                                                      1,\n-                                                                                      SelfKind::RefMut,\n-                                                                                      OutType::Unit,\n-                                                                                      \"std::ops::Drop\"),\n-                                                                                     (\"index\",\n-                                                                                      2,\n-                                                                                      SelfKind::Ref,\n-                                                                                      OutType::Ref,\n-                                                                                      \"std::ops::Index\"),\n-                                                                                     (\"index_mut\",\n-                                                                                      2,\n-                                                                                      SelfKind::RefMut,\n-                                                                                      OutType::Ref,\n-                                                                                      \"std::ops::IndexMut\"),\n-                                                                                     (\"deref\",\n-                                                                                      1,\n-                                                                                      SelfKind::Ref,\n-                                                                                      OutType::Ref,\n-                                                                                      \"std::ops::Deref\"),\n-                                                                                     (\"deref_mut\",\n-                                                                                      1,\n-                                                                                      SelfKind::RefMut,\n-                                                                                      OutType::Ref,\n-                                                                                      \"std::ops::DerefMut\"),\n-                                                                                     (\"clone\",\n-                                                                                      1,\n-                                                                                      SelfKind::Ref,\n-                                                                                      OutType::Any,\n-                                                                                      \"std::clone::Clone\"),\n-                                                                                     (\"borrow\",\n-                                                                                      1,\n-                                                                                      SelfKind::Ref,\n-                                                                                      OutType::Ref,\n-                                                                                      \"std::borrow::Borrow\"),\n-                                                                                     (\"borrow_mut\",\n-                                                                                      1,\n-                                                                                      SelfKind::RefMut,\n-                                                                                      OutType::Ref,\n-                                                                                      \"std::borrow::BorrowMut\"),\n-                                                                                     (\"as_ref\",\n-                                                                                      1,\n-                                                                                      SelfKind::Ref,\n-                                                                                      OutType::Ref,\n-                                                                                      \"std::convert::AsRef\"),\n-                                                                                     (\"as_mut\",\n-                                                                                      1,\n-                                                                                      SelfKind::RefMut,\n-                                                                                      OutType::Ref,\n-                                                                                      \"std::convert::AsMut\"),\n-                                                                                     (\"eq\",\n-                                                                                      2,\n-                                                                                      SelfKind::Ref,\n-                                                                                      OutType::Bool,\n-                                                                                      \"std::cmp::PartialEq\"),\n-                                                                                     (\"cmp\",\n-                                                                                      2,\n-                                                                                      SelfKind::Ref,\n-                                                                                      OutType::Any,\n-                                                                                      \"std::cmp::Ord\"),\n-                                                                                     (\"default\",\n-                                                                                      0,\n-                                                                                      SelfKind::No,\n-                                                                                      OutType::Any,\n-                                                                                      \"std::default::Default\"),\n-                                                                                     (\"hash\",\n-                                                                                      2,\n-                                                                                      SelfKind::Ref,\n-                                                                                      OutType::Unit,\n-                                                                                      \"std::hash::Hash\"),\n-                                                                                     (\"next\",\n-                                                                                      1,\n-                                                                                      SelfKind::RefMut,\n-                                                                                      OutType::Any,\n-                                                                                      \"std::iter::Iterator\"),\n-                                                                                     (\"into_iter\",\n-                                                                                      1,\n-                                                                                      SelfKind::Value,\n-                                                                                      OutType::Any,\n-                                                                                      \"std::iter::IntoIterator\"),\n-                                                                                     (\"from_iter\",\n-                                                                                      1,\n-                                                                                      SelfKind::No,\n-                                                                                      OutType::Any,\n-                                                                                      \"std::iter::FromIterator\"),\n-                                                                                     (\"from_str\",\n-                                                                                      1,\n-                                                                                      SelfKind::No,\n-                                                                                      OutType::Any,\n-                                                                                      \"std::str::FromStr\")];\n+#[rustfmt_skip]\n+const CONVENTIONS: [(&'static str, &'static [SelfKind]); 5] = [\n+    (\"into_\", &[SelfKind::Value]),\n+    (\"to_\", &[SelfKind::Ref]),\n+    (\"as_\", &[SelfKind::Ref, SelfKind::RefMut]),\n+    (\"is_\", &[SelfKind::Ref, SelfKind::No]),\n+    (\"from_\", &[SelfKind::No]),\n+];\n+\n+#[rustfmt_skip]\n+const TRAIT_METHODS: [(&'static str, usize, SelfKind, OutType, &'static str); 30] = [\n+    (\"add\", 2, SelfKind::Value, OutType::Any, \"std::ops::Add\"),\n+    (\"sub\", 2, SelfKind::Value, OutType::Any, \"std::ops::Sub\"),\n+    (\"mul\", 2, SelfKind::Value, OutType::Any, \"std::ops::Mul\"),\n+    (\"div\", 2, SelfKind::Value, OutType::Any, \"std::ops::Div\"),\n+    (\"rem\", 2, SelfKind::Value, OutType::Any, \"std::ops::Rem\"),\n+    (\"shl\", 2, SelfKind::Value, OutType::Any, \"std::ops::Shl\"),\n+    (\"shr\", 2, SelfKind::Value, OutType::Any, \"std::ops::Shr\"),\n+    (\"bitand\", 2, SelfKind::Value, OutType::Any, \"std::ops::BitAnd\"),\n+    (\"bitor\", 2, SelfKind::Value, OutType::Any, \"std::ops::BitOr\"),\n+    (\"bitxor\", 2, SelfKind::Value, OutType::Any, \"std::ops::BitXor\"),\n+    (\"neg\", 1, SelfKind::Value, OutType::Any, \"std::ops::Neg\"),\n+    (\"not\", 1, SelfKind::Value, OutType::Any, \"std::ops::Not\"),\n+    (\"drop\", 1, SelfKind::RefMut, OutType::Unit, \"std::ops::Drop\"),\n+    (\"index\", 2, SelfKind::Ref, OutType::Ref, \"std::ops::Index\"),\n+    (\"index_mut\", 2, SelfKind::RefMut, OutType::Ref, \"std::ops::IndexMut\"),\n+    (\"deref\", 1, SelfKind::Ref, OutType::Ref, \"std::ops::Deref\"),\n+    (\"deref_mut\", 1, SelfKind::RefMut, OutType::Ref, \"std::ops::DerefMut\"),\n+    (\"clone\", 1, SelfKind::Ref, OutType::Any, \"std::clone::Clone\"),\n+    (\"borrow\", 1, SelfKind::Ref, OutType::Ref, \"std::borrow::Borrow\"),\n+    (\"borrow_mut\", 1, SelfKind::RefMut, OutType::Ref, \"std::borrow::BorrowMut\"),\n+    (\"as_ref\", 1, SelfKind::Ref, OutType::Ref, \"std::convert::AsRef\"),\n+    (\"as_mut\", 1, SelfKind::RefMut, OutType::Ref, \"std::convert::AsMut\"),\n+    (\"eq\", 2, SelfKind::Ref, OutType::Bool, \"std::cmp::PartialEq\"),\n+    (\"cmp\", 2, SelfKind::Ref, OutType::Any, \"std::cmp::Ord\"),\n+    (\"default\", 0, SelfKind::No, OutType::Any, \"std::default::Default\"),\n+    (\"hash\", 2, SelfKind::Ref, OutType::Unit, \"std::hash::Hash\"),\n+    (\"next\", 1, SelfKind::RefMut, OutType::Any, \"std::iter::Iterator\"),\n+    (\"into_iter\", 1, SelfKind::Value, OutType::Any, \"std::iter::IntoIterator\"),\n+    (\"from_iter\", 1, SelfKind::No, OutType::Any, \"std::iter::FromIterator\"),\n+    (\"from_str\", 1, SelfKind::No, OutType::Any, \"std::str::FromStr\"),\n+];\n \n #[derive(Clone, Copy)]\n enum SelfKind {"}]}