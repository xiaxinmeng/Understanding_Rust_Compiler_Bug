{"sha": "0b612399366e28b5314b5fd289f46c636d596a7b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjBiNjEyMzk5MzY2ZTI4YjUzMTRiNWZkMjg5ZjQ2YzYzNmQ1OTZhN2I=", "commit": {"author": {"name": "Tim Diekmann", "email": "tim.diekmann@3dvision.de", "date": "2020-04-02T12:20:35Z"}, "committer": {"name": "Tim Diekmann", "email": "tim.diekmann@3dvision.de", "date": "2020-04-02T12:20:35Z"}, "message": "Improve docs in `AllocRef`", "tree": {"sha": "a547ec4be8c478019397bcbc88ff1b310b5214b9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a547ec4be8c478019397bcbc88ff1b310b5214b9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0b612399366e28b5314b5fd289f46c636d596a7b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0b612399366e28b5314b5fd289f46c636d596a7b", "html_url": "https://github.com/rust-lang/rust/commit/0b612399366e28b5314b5fd289f46c636d596a7b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0b612399366e28b5314b5fd289f46c636d596a7b/comments", "author": {"login": "TimDiekmann", "id": 21277928, "node_id": "MDQ6VXNlcjIxMjc3OTI4", "avatar_url": "https://avatars.githubusercontent.com/u/21277928?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TimDiekmann", "html_url": "https://github.com/TimDiekmann", "followers_url": "https://api.github.com/users/TimDiekmann/followers", "following_url": "https://api.github.com/users/TimDiekmann/following{/other_user}", "gists_url": "https://api.github.com/users/TimDiekmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/TimDiekmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TimDiekmann/subscriptions", "organizations_url": "https://api.github.com/users/TimDiekmann/orgs", "repos_url": "https://api.github.com/users/TimDiekmann/repos", "events_url": "https://api.github.com/users/TimDiekmann/events{/privacy}", "received_events_url": "https://api.github.com/users/TimDiekmann/received_events", "type": "User", "site_admin": false}, "committer": {"login": "TimDiekmann", "id": 21277928, "node_id": "MDQ6VXNlcjIxMjc3OTI4", "avatar_url": "https://avatars.githubusercontent.com/u/21277928?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TimDiekmann", "html_url": "https://github.com/TimDiekmann", "followers_url": "https://api.github.com/users/TimDiekmann/followers", "following_url": "https://api.github.com/users/TimDiekmann/following{/other_user}", "gists_url": "https://api.github.com/users/TimDiekmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/TimDiekmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TimDiekmann/subscriptions", "organizations_url": "https://api.github.com/users/TimDiekmann/orgs", "repos_url": "https://api.github.com/users/TimDiekmann/repos", "events_url": "https://api.github.com/users/TimDiekmann/events{/privacy}", "received_events_url": "https://api.github.com/users/TimDiekmann/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "127a11a344eb59b5aea1464e98257c262dcba967", "url": "https://api.github.com/repos/rust-lang/rust/commits/127a11a344eb59b5aea1464e98257c262dcba967", "html_url": "https://github.com/rust-lang/rust/commit/127a11a344eb59b5aea1464e98257c262dcba967"}], "stats": {"total": 12, "additions": 7, "deletions": 5}, "files": [{"sha": "77ac93c7b7905c293472964c9aac808a01a7be0f", "filename": "src/libcore/alloc/mod.rs", "status": "modified", "additions": 7, "deletions": 5, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/0b612399366e28b5314b5fd289f46c636d596a7b/src%2Flibcore%2Falloc%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0b612399366e28b5314b5fd289f46c636d596a7b/src%2Flibcore%2Falloc%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Falloc%2Fmod.rs?ref=0b612399366e28b5314b5fd289f46c636d596a7b", "patch": "@@ -33,9 +33,7 @@ impl fmt::Display for AllocErr {\n #[derive(Debug, Copy, Clone, PartialEq, Eq)]\n #[unstable(feature = \"allocator_api\", issue = \"32838\")]\n pub enum AllocInit {\n-    /// The contents of the new memory are undefined.\n-    ///\n-    /// Reading uninitialized memory is Undefined Behavior; it must be initialized before use.\n+    /// The contents of the new memory are uninitialized.\n     Uninitialized,\n     /// The new memory is guaranteed to be zeroed.\n     Zeroed,\n@@ -196,7 +194,11 @@ pub unsafe trait AllocRef {\n     ///\n     /// # Safety\n     ///\n-    /// `memory` must be a memory block returned by this allocator.\n+    /// * `ptr` must be [*currently allocated*] via this allocator, and\n+    /// * `layout` must [*fit*] the `ptr`.\n+    ///\n+    /// [*currently allocated*]: #currently-allocated-memory\n+    /// [*fit*]: #memory-fitting\n     unsafe fn dealloc(&mut self, ptr: NonNull<u8>, layout: Layout);\n \n     /// Attempts to extend the memory block.\n@@ -237,7 +239,7 @@ pub unsafe trait AllocRef {\n     // * `new_size must be strictly greater than `memory.size` or both are zero\n     /// * `new_size` must be greater than or equal to `layout.size()`\n     /// * `new_size`, when rounded up to the nearest multiple of `layout.align()`, must not overflow\n-    ///   (i.e., the rounded value must be less than `usize::MAX`).\n+    ///   (i.e., the rounded value must be less than or equal to `usize::MAX`).\n     ///\n     /// [*currently allocated*]: #currently-allocated-memory\n     /// [*fit*]: #memory-fitting"}]}