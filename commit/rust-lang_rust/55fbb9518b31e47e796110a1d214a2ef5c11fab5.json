{"sha": "55fbb9518b31e47e796110a1d214a2ef5c11fab5", "node_id": "MDY6Q29tbWl0NzI0NzEyOjU1ZmJiOTUxOGIzMWU0N2U3OTYxMTBhMWQyMTRhMmVmNWMxMWZhYjU=", "commit": {"author": {"name": "Daniel Micay", "email": "danielmicay@gmail.com", "date": "2013-03-22T20:21:57Z"}, "committer": {"name": "Daniel Micay", "email": "danielmicay@gmail.com", "date": "2013-03-22T22:04:35Z"}, "message": "trie: inline the other TrieSet wrapper methods", "tree": {"sha": "915696d70444319cad4b8bc3800b50fadacaf4c7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/915696d70444319cad4b8bc3800b50fadacaf4c7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/55fbb9518b31e47e796110a1d214a2ef5c11fab5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/55fbb9518b31e47e796110a1d214a2ef5c11fab5", "html_url": "https://github.com/rust-lang/rust/commit/55fbb9518b31e47e796110a1d214a2ef5c11fab5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/55fbb9518b31e47e796110a1d214a2ef5c11fab5/comments", "author": {"login": "thestinger", "id": 1505226, "node_id": "MDQ6VXNlcjE1MDUyMjY=", "avatar_url": "https://avatars.githubusercontent.com/u/1505226?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thestinger", "html_url": "https://github.com/thestinger", "followers_url": "https://api.github.com/users/thestinger/followers", "following_url": "https://api.github.com/users/thestinger/following{/other_user}", "gists_url": "https://api.github.com/users/thestinger/gists{/gist_id}", "starred_url": "https://api.github.com/users/thestinger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thestinger/subscriptions", "organizations_url": "https://api.github.com/users/thestinger/orgs", "repos_url": "https://api.github.com/users/thestinger/repos", "events_url": "https://api.github.com/users/thestinger/events{/privacy}", "received_events_url": "https://api.github.com/users/thestinger/received_events", "type": "User", "site_admin": false}, "committer": {"login": "thestinger", "id": 1505226, "node_id": "MDQ6VXNlcjE1MDUyMjY=", "avatar_url": "https://avatars.githubusercontent.com/u/1505226?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thestinger", "html_url": "https://github.com/thestinger", "followers_url": "https://api.github.com/users/thestinger/followers", "following_url": "https://api.github.com/users/thestinger/following{/other_user}", "gists_url": "https://api.github.com/users/thestinger/gists{/gist_id}", "starred_url": "https://api.github.com/users/thestinger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thestinger/subscriptions", "organizations_url": "https://api.github.com/users/thestinger/orgs", "repos_url": "https://api.github.com/users/thestinger/repos", "events_url": "https://api.github.com/users/thestinger/events{/privacy}", "received_events_url": "https://api.github.com/users/thestinger/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "04e367b353002e247a0b4ebcf2aba59ce01fad73", "url": "https://api.github.com/repos/rust-lang/rust/commits/04e367b353002e247a0b4ebcf2aba59ce01fad73", "html_url": "https://github.com/rust-lang/rust/commit/04e367b353002e247a0b4ebcf2aba59ce01fad73"}], "stats": {"total": 3, "additions": 3, "deletions": 0}, "files": [{"sha": "598bbbf76c6d9d762ebc3a20ba5f4042c14e3fac", "filename": "src/libcore/trie.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/55fbb9518b31e47e796110a1d214a2ef5c11fab5/src%2Flibcore%2Ftrie.rs", "raw_url": "https://github.com/rust-lang/rust/raw/55fbb9518b31e47e796110a1d214a2ef5c11fab5/src%2Flibcore%2Ftrie.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Ftrie.rs?ref=55fbb9518b31e47e796110a1d214a2ef5c11fab5", "patch": "@@ -161,12 +161,15 @@ pub struct TrieSet {\n \n impl BaseIter<uint> for TrieSet {\n     /// Visit all values in order\n+    #[inline(always)]\n     fn each(&self, f: &fn(&uint) -> bool) { self.map.each_key(f) }\n+    #[inline(always)]\n     fn size_hint(&self) -> Option<uint> { Some(self.len()) }\n }\n \n impl ReverseIter<uint> for TrieSet {\n     /// Visit all values in reverse order\n+    #[inline(always)]\n     fn each_reverse(&self, f: &fn(&uint) -> bool) {\n         self.map.each_key_reverse(f)\n     }"}]}