{"sha": "0b6537a9ea50b294ae0b371ac4b6757303bb19f8", "node_id": "MDY6Q29tbWl0NzI0NzEyOjBiNjUzN2E5ZWE1MGIyOTRhZTBiMzcxYWM0YjY3NTczMDNiYjE5Zjg=", "commit": {"author": {"name": "Camelid", "email": "camelidcamel@gmail.com", "date": "2020-11-22T22:25:50Z"}, "committer": {"name": "Camelid", "email": "camelidcamel@gmail.com", "date": "2020-11-22T22:25:50Z"}, "message": "Accept '!' in intra-doc links\n\nThis will allow linking to things like `Result<T, !>`.", "tree": {"sha": "9cf1bd489d485299e6db736603b06f189887d4a3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9cf1bd489d485299e6db736603b06f189887d4a3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0b6537a9ea50b294ae0b371ac4b6757303bb19f8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0b6537a9ea50b294ae0b371ac4b6757303bb19f8", "html_url": "https://github.com/rust-lang/rust/commit/0b6537a9ea50b294ae0b371ac4b6757303bb19f8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0b6537a9ea50b294ae0b371ac4b6757303bb19f8/comments", "author": {"login": "camelid", "id": 37223377, "node_id": "MDQ6VXNlcjM3MjIzMzc3", "avatar_url": "https://avatars.githubusercontent.com/u/37223377?v=4", "gravatar_id": "", "url": "https://api.github.com/users/camelid", "html_url": "https://github.com/camelid", "followers_url": "https://api.github.com/users/camelid/followers", "following_url": "https://api.github.com/users/camelid/following{/other_user}", "gists_url": "https://api.github.com/users/camelid/gists{/gist_id}", "starred_url": "https://api.github.com/users/camelid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/camelid/subscriptions", "organizations_url": "https://api.github.com/users/camelid/orgs", "repos_url": "https://api.github.com/users/camelid/repos", "events_url": "https://api.github.com/users/camelid/events{/privacy}", "received_events_url": "https://api.github.com/users/camelid/received_events", "type": "User", "site_admin": false}, "committer": {"login": "camelid", "id": 37223377, "node_id": "MDQ6VXNlcjM3MjIzMzc3", "avatar_url": "https://avatars.githubusercontent.com/u/37223377?v=4", "gravatar_id": "", "url": "https://api.github.com/users/camelid", "html_url": "https://github.com/camelid", "followers_url": "https://api.github.com/users/camelid/followers", "following_url": "https://api.github.com/users/camelid/following{/other_user}", "gists_url": "https://api.github.com/users/camelid/gists{/gist_id}", "starred_url": "https://api.github.com/users/camelid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/camelid/subscriptions", "organizations_url": "https://api.github.com/users/camelid/orgs", "repos_url": "https://api.github.com/users/camelid/repos", "events_url": "https://api.github.com/users/camelid/events{/privacy}", "received_events_url": "https://api.github.com/users/camelid/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "52e3cf13aa9716f6648b1cad286ccd8d37aa315f", "url": "https://api.github.com/repos/rust-lang/rust/commits/52e3cf13aa9716f6648b1cad286ccd8d37aa315f", "html_url": "https://github.com/rust-lang/rust/commit/52e3cf13aa9716f6648b1cad286ccd8d37aa315f"}], "stats": {"total": 5, "additions": 4, "deletions": 1}, "files": [{"sha": "e1b82e58b85b3050a97b2ed6df2264fd5f152fd1", "filename": "src/librustdoc/passes/collect_intra_doc_links.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0b6537a9ea50b294ae0b371ac4b6757303bb19f8/src%2Flibrustdoc%2Fpasses%2Fcollect_intra_doc_links.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0b6537a9ea50b294ae0b371ac4b6757303bb19f8/src%2Flibrustdoc%2Fpasses%2Fcollect_intra_doc_links.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fpasses%2Fcollect_intra_doc_links.rs?ref=0b6537a9ea50b294ae0b371ac4b6757303bb19f8", "patch": "@@ -1022,7 +1022,7 @@ impl LinkCollector<'_, '_> {\n             (link.trim(), None)\n         };\n \n-        if path_str.contains(|ch: char| !(ch.is_alphanumeric() || \":_<>, \".contains(ch))) {\n+        if path_str.contains(|ch: char| !(ch.is_alphanumeric() || \":_<>, !\".contains(ch))) {\n             return None;\n         }\n "}, {"sha": "1de6410f10c430c2c4520d639349230a7f22112d", "filename": "src/test/rustdoc/intra-doc-link-generic-params.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/0b6537a9ea50b294ae0b371ac4b6757303bb19f8/src%2Ftest%2Frustdoc%2Fintra-doc-link-generic-params.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0b6537a9ea50b294ae0b371ac4b6757303bb19f8/src%2Ftest%2Frustdoc%2Fintra-doc-link-generic-params.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fintra-doc-link-generic-params.rs?ref=0b6537a9ea50b294ae0b371ac4b6757303bb19f8", "patch": "@@ -15,8 +15,11 @@\n // @has foo/index.html '//a[@href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\"]' 'with the generic, Option<T>'\n \n //! We should also try linking to [`Result<T, E>`]; it has *two* generics!\n+//! And [`Result<T, !>`] and [`Result<!, E>`].\n //!\n // @has foo/index.html '//a[@href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\"]' 'Result<T, E>'\n+// @has foo/index.html '//a[@href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\"]' 'Result<T, !>'\n+// @has foo/index.html '//a[@href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\"]' 'Result<!, E>'\n \n //! Now let's test a trickier case: [`Vec::<T>::new`], or you could write it\n //! [with parentheses as `Vec::<T>::new()`][Vec::<T>::new()]."}]}