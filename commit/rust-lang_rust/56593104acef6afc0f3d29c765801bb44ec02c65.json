{"sha": "56593104acef6afc0f3d29c765801bb44ec02c65", "node_id": "C_kwDOAAsO6NoAKDU2NTkzMTA0YWNlZjZhZmMwZjNkMjljNzY1ODAxYmI0NGVjMDJjNjU", "commit": {"author": {"name": "Mara Bos", "email": "m-ou.se@m-ou.se", "date": "2023-01-11T23:45:29Z"}, "committer": {"name": "Mara Bos", "email": "m-ou.se@m-ou.se", "date": "2023-01-11T23:45:29Z"}, "message": "Update comment explaining format_args!() expansion.", "tree": {"sha": "5ee244e57a7419b39de2b182fe6e71f748e6f192", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5ee244e57a7419b39de2b182fe6e71f748e6f192"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/56593104acef6afc0f3d29c765801bb44ec02c65", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/56593104acef6afc0f3d29c765801bb44ec02c65", "html_url": "https://github.com/rust-lang/rust/commit/56593104acef6afc0f3d29c765801bb44ec02c65", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/56593104acef6afc0f3d29c765801bb44ec02c65/comments", "author": {"login": "m-ou-se", "id": 783247, "node_id": "MDQ6VXNlcjc4MzI0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/783247?v=4", "gravatar_id": "", "url": "https://api.github.com/users/m-ou-se", "html_url": "https://github.com/m-ou-se", "followers_url": "https://api.github.com/users/m-ou-se/followers", "following_url": "https://api.github.com/users/m-ou-se/following{/other_user}", "gists_url": "https://api.github.com/users/m-ou-se/gists{/gist_id}", "starred_url": "https://api.github.com/users/m-ou-se/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/m-ou-se/subscriptions", "organizations_url": "https://api.github.com/users/m-ou-se/orgs", "repos_url": "https://api.github.com/users/m-ou-se/repos", "events_url": "https://api.github.com/users/m-ou-se/events{/privacy}", "received_events_url": "https://api.github.com/users/m-ou-se/received_events", "type": "User", "site_admin": false}, "committer": {"login": "m-ou-se", "id": 783247, "node_id": "MDQ6VXNlcjc4MzI0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/783247?v=4", "gravatar_id": "", "url": "https://api.github.com/users/m-ou-se", "html_url": "https://github.com/m-ou-se", "followers_url": "https://api.github.com/users/m-ou-se/followers", "following_url": "https://api.github.com/users/m-ou-se/following{/other_user}", "gists_url": "https://api.github.com/users/m-ou-se/gists{/gist_id}", "starred_url": "https://api.github.com/users/m-ou-se/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/m-ou-se/subscriptions", "organizations_url": "https://api.github.com/users/m-ou-se/orgs", "repos_url": "https://api.github.com/users/m-ou-se/repos", "events_url": "https://api.github.com/users/m-ou-se/events{/privacy}", "received_events_url": "https://api.github.com/users/m-ou-se/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bcf388f4ac3261d1cc0490415a81d5e4939c7915", "url": "https://api.github.com/repos/rust-lang/rust/commits/bcf388f4ac3261d1cc0490415a81d5e4939c7915", "html_url": "https://github.com/rust-lang/rust/commit/bcf388f4ac3261d1cc0490415a81d5e4939c7915"}], "stats": {"total": 8, "additions": 4, "deletions": 4}, "files": [{"sha": "a246aefc806a24eda591b4743a131af960724f36", "filename": "compiler/rustc_builtin_macros/src/format.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/56593104acef6afc0f3d29c765801bb44ec02c65/compiler%2Frustc_builtin_macros%2Fsrc%2Fformat.rs", "raw_url": "https://github.com/rust-lang/rust/raw/56593104acef6afc0f3d29c765801bb44ec02c65/compiler%2Frustc_builtin_macros%2Fsrc%2Fformat.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_builtin_macros%2Fsrc%2Fformat.rs?ref=56593104acef6afc0f3d29c765801bb44ec02c65", "patch": "@@ -20,11 +20,11 @@ use rustc_lint_defs::{BufferedEarlyLint, BuiltinLintDiagnostics, LintId};\n //  1. First, `parse_args` will parse the `(literal, arg, arg, name=arg, name=arg)` syntax,\n //     but doesn't parse the template (the literal) itself.\n //  2. Second, `make_format_args` will parse the template, the format options, resolve argument references,\n-//     produce diagnostics, and turn the whole thing into a `FormatArgs` structure.\n-//  3. Finally, `expand_parsed_format_args` will turn that `FormatArgs` structure\n-//     into the expression that the macro expands to.\n+//     produce diagnostics, and turn the whole thing into a `FormatArgs` AST node.\n+//  3. Much later, in AST lowering (rustc_ast_lowering), that `FormatArgs` structure will be turned\n+//     into the expression of type `core::fmt::Arguments`.\n \n-// See format/ast.rs for the FormatArgs structure and glossary.\n+// See rustc_ast/src/format.rs for the FormatArgs structure and glossary.\n \n // Only used in parse_args and report_invalid_references,\n // to indicate how a referred argument was used."}]}