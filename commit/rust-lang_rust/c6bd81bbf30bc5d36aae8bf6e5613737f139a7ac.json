{"sha": "c6bd81bbf30bc5d36aae8bf6e5613737f139a7ac", "node_id": "C_kwDOAAsO6NoAKGM2YmQ4MWJiZjMwYmM1ZDM2YWFlOGJmNmU1NjEzNzM3ZjEzOWE3YWM", "commit": {"author": {"name": "David Tolnay", "email": "dtolnay@gmail.com", "date": "2022-04-29T22:43:36Z"}, "committer": {"name": "David Tolnay", "email": "dtolnay@gmail.com", "date": "2022-04-29T22:47:19Z"}, "message": "Resolve clippy::needless_lifetimes\n\n    error: explicit lifetimes given in parameter types where they could be elided (or replaced with `'_` if needed by type declaration)\n      --> src/range_map.rs:66:5\n       |\n    66 |     pub fn iter<'a>(&'a self, offset: Size, len: Size) -> impl Iterator<Item = (Size, &'a T)> + 'a {\n       |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n       |\n       = note: `-D clippy::needless-lifetimes` implied by `-D clippy::all`\n       = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n\n    error: explicit lifetimes given in parameter types where they could be elided (or replaced with `'_` if needed by type declaration)\n      --> src/range_map.rs:86:5\n       |\n    86 |     pub fn iter_mut_all<'a>(&'a mut self) -> impl Iterator<Item = &'a mut T> + 'a {\n       |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n       |\n       = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n\n    error: explicit lifetimes given in parameter types where they could be elided (or replaced with `'_` if needed by type declaration)\n       --> src/range_map.rs:122:5\n        |\n    122 | /     pub fn iter_mut<'a>(\n    123 | |         &'a mut self,\n    124 | |         offset: Size,\n    125 | |         len: Size,\n    126 | |     ) -> impl Iterator<Item = (Size, &'a mut T)> + 'a\n        | |_____________________________________________________^\n        |\n        = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n\n    error: explicit lifetimes given in parameter types where they could be elided (or replaced with `'_` if needed by type declaration)\n        --> src/shims/intrinsics.rs:1391:1\n         |\n    1391 | fn simd_element_to_bool<'tcx>(elem: ImmTy<'tcx, Tag>) -> InterpResult<'tcx, bool> {\n         | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n         |\n         = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes", "tree": {"sha": "d3b3ba6a953e7f11ae6dec7a09768aa31754e95a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d3b3ba6a953e7f11ae6dec7a09768aa31754e95a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c6bd81bbf30bc5d36aae8bf6e5613737f139a7ac", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEERijF2Cz/ZdaBZKeK+boUO5X/bYIFAmJsavcACgkQ+boUO5X/\nbYIlnQ//U1BhwoYKccpMRsKNXKEmnafZlajLO3xolux59makwWxXsJInDub53q2A\nV6/CszfHuF/EYaC5N98K4yrO9rTWlax/hwoxgG3Nrkz2caJwXH63+5cCXZyMN6Ye\nTTiQS5k9Dvf8ZsALvXVVKnbNokZgBX6QTX4IEDQ5/4QbovoZKCRtAH/iE961+wIh\nYHEp8dOvigRCFpFwQWWyBHc3yIfH6y7/PsPm3P1u0/BN8kD4PWEDNDQc5iDFwAsG\nVt4xgkElqSEzj4XK+eqGLC/dLYH7rm6zj3n4S9Y3FsPai/DPTCwjEniD3MMIwe35\ngM0VB/GJ250KWXLWmt95MuMBnhxYeYACyxHKPwQJb4bNSf28TNk1tMJeOOL1+6bX\nCPd1noLtd3HtmIOsh5qfFtFQ6r6AOxM7ebss4Tj5J/uJqRHWxqmVzTCcNk7cN3L9\n6DflUXtc7N4IkoV6HtbUq18I+FsQr0Lv8LgJWnuZ30icG2/Wwa+nH0mtdgKuyYUb\nnWUYsxUHq7ayjBWvToc+4WU+EFzykSPYCGZnGz6aGucT36iUeeJWhSY3dSGmj/te\niqI+HOBYBi6MXnRj/MzqlY3AAd7xf7bLMoilVryRnooBqf74gqQA7WQRO4qYMhH0\n5dhNd1tALNrxsTPC1uSL0AD8EtZnLDA1AfkqeeghYuPtEoo2cRA=\n=azdJ\n-----END PGP SIGNATURE-----", "payload": "tree d3b3ba6a953e7f11ae6dec7a09768aa31754e95a\nparent 2ca7f3b45df176295d276ce50f7f32845c7f614d\nauthor David Tolnay <dtolnay@gmail.com> 1651272216 -0700\ncommitter David Tolnay <dtolnay@gmail.com> 1651272439 -0700\n\nResolve clippy::needless_lifetimes\n\n    error: explicit lifetimes given in parameter types where they could be elided (or replaced with `'_` if needed by type declaration)\n      --> src/range_map.rs:66:5\n       |\n    66 |     pub fn iter<'a>(&'a self, offset: Size, len: Size) -> impl Iterator<Item = (Size, &'a T)> + 'a {\n       |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n       |\n       = note: `-D clippy::needless-lifetimes` implied by `-D clippy::all`\n       = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n\n    error: explicit lifetimes given in parameter types where they could be elided (or replaced with `'_` if needed by type declaration)\n      --> src/range_map.rs:86:5\n       |\n    86 |     pub fn iter_mut_all<'a>(&'a mut self) -> impl Iterator<Item = &'a mut T> + 'a {\n       |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n       |\n       = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n\n    error: explicit lifetimes given in parameter types where they could be elided (or replaced with `'_` if needed by type declaration)\n       --> src/range_map.rs:122:5\n        |\n    122 | /     pub fn iter_mut<'a>(\n    123 | |         &'a mut self,\n    124 | |         offset: Size,\n    125 | |         len: Size,\n    126 | |     ) -> impl Iterator<Item = (Size, &'a mut T)> + 'a\n        | |_____________________________________________________^\n        |\n        = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n\n    error: explicit lifetimes given in parameter types where they could be elided (or replaced with `'_` if needed by type declaration)\n        --> src/shims/intrinsics.rs:1391:1\n         |\n    1391 | fn simd_element_to_bool<'tcx>(elem: ImmTy<'tcx, Tag>) -> InterpResult<'tcx, bool> {\n         | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n         |\n         = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c6bd81bbf30bc5d36aae8bf6e5613737f139a7ac", "html_url": "https://github.com/rust-lang/rust/commit/c6bd81bbf30bc5d36aae8bf6e5613737f139a7ac", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c6bd81bbf30bc5d36aae8bf6e5613737f139a7ac/comments", "author": {"login": "dtolnay", "id": 1940490, "node_id": "MDQ6VXNlcjE5NDA0OTA=", "avatar_url": "https://avatars.githubusercontent.com/u/1940490?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dtolnay", "html_url": "https://github.com/dtolnay", "followers_url": "https://api.github.com/users/dtolnay/followers", "following_url": "https://api.github.com/users/dtolnay/following{/other_user}", "gists_url": "https://api.github.com/users/dtolnay/gists{/gist_id}", "starred_url": "https://api.github.com/users/dtolnay/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dtolnay/subscriptions", "organizations_url": "https://api.github.com/users/dtolnay/orgs", "repos_url": "https://api.github.com/users/dtolnay/repos", "events_url": "https://api.github.com/users/dtolnay/events{/privacy}", "received_events_url": "https://api.github.com/users/dtolnay/received_events", "type": "User", "site_admin": false}, "committer": {"login": "dtolnay", "id": 1940490, "node_id": "MDQ6VXNlcjE5NDA0OTA=", "avatar_url": "https://avatars.githubusercontent.com/u/1940490?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dtolnay", "html_url": "https://github.com/dtolnay", "followers_url": "https://api.github.com/users/dtolnay/followers", "following_url": "https://api.github.com/users/dtolnay/following{/other_user}", "gists_url": "https://api.github.com/users/dtolnay/gists{/gist_id}", "starred_url": "https://api.github.com/users/dtolnay/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dtolnay/subscriptions", "organizations_url": "https://api.github.com/users/dtolnay/orgs", "repos_url": "https://api.github.com/users/dtolnay/repos", "events_url": "https://api.github.com/users/dtolnay/events{/privacy}", "received_events_url": "https://api.github.com/users/dtolnay/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2ca7f3b45df176295d276ce50f7f32845c7f614d", "url": "https://api.github.com/repos/rust-lang/rust/commits/2ca7f3b45df176295d276ce50f7f32845c7f614d", "html_url": "https://github.com/rust-lang/rust/commit/2ca7f3b45df176295d276ce50f7f32845c7f614d"}], "stats": {"total": 10, "additions": 3, "deletions": 7}, "files": [{"sha": "f0507ffabad0c3546b5b1eec3f3cdfb5472958bc", "filename": "src/range_map.rs", "status": "modified", "additions": 3, "deletions": 7, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/c6bd81bbf30bc5d36aae8bf6e5613737f139a7ac/src%2Frange_map.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c6bd81bbf30bc5d36aae8bf6e5613737f139a7ac/src%2Frange_map.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frange_map.rs?ref=c6bd81bbf30bc5d36aae8bf6e5613737f139a7ac", "patch": "@@ -63,7 +63,7 @@ impl<T> RangeMap<T> {\n     /// through interior mutability.\n     ///\n     /// The iterator also provides the offset of the given element.\n-    pub fn iter<'a>(&'a self, offset: Size, len: Size) -> impl Iterator<Item = (Size, &'a T)> + 'a {\n+    pub fn iter(&self, offset: Size, len: Size) -> impl Iterator<Item = (Size, &T)> {\n         let offset = offset.bytes();\n         let len = len.bytes();\n         // Compute a slice starting with the elements we care about.\n@@ -83,7 +83,7 @@ impl<T> RangeMap<T> {\n             .map(|elem| (Size::from_bytes(elem.range.start), &elem.data))\n     }\n \n-    pub fn iter_mut_all<'a>(&'a mut self) -> impl Iterator<Item = &'a mut T> + 'a {\n+    pub fn iter_mut_all(&mut self) -> impl Iterator<Item = &mut T> {\n         self.v.iter_mut().map(|elem| &mut elem.data)\n     }\n \n@@ -119,11 +119,7 @@ impl<T> RangeMap<T> {\n     /// Moreover, this will opportunistically merge neighbouring equal blocks.\n     ///\n     /// The iterator also provides the offset of the given element.\n-    pub fn iter_mut<'a>(\n-        &'a mut self,\n-        offset: Size,\n-        len: Size,\n-    ) -> impl Iterator<Item = (Size, &'a mut T)> + 'a\n+    pub fn iter_mut(&mut self, offset: Size, len: Size) -> impl Iterator<Item = (Size, &mut T)>\n     where\n         T: Clone + PartialEq,\n     {"}]}