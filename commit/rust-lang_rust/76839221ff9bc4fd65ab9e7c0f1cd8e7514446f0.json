{"sha": "76839221ff9bc4fd65ab9e7c0f1cd8e7514446f0", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc2ODM5MjIxZmY5YmM0ZmQ2NWFiOWU3YzBmMWNkOGU3NTE0NDQ2ZjA=", "commit": {"author": {"name": "Dirk Gadsden", "email": "dirk@esherido.com", "date": "2016-01-31T20:33:37Z"}, "committer": {"name": "Dirk Gadsden", "email": "dirk@esherido.com", "date": "2016-02-01T04:50:34Z"}, "message": "Minor corrections in docs for `std::process::Child`", "tree": {"sha": "d470886c2e4e113f5477b3bed6cbf2e153977784", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d470886c2e4e113f5477b3bed6cbf2e153977784"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/76839221ff9bc4fd65ab9e7c0f1cd8e7514446f0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/76839221ff9bc4fd65ab9e7c0f1cd8e7514446f0", "html_url": "https://github.com/rust-lang/rust/commit/76839221ff9bc4fd65ab9e7c0f1cd8e7514446f0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/76839221ff9bc4fd65ab9e7c0f1cd8e7514446f0/comments", "author": {"login": "dirk", "id": 7081, "node_id": "MDQ6VXNlcjcwODE=", "avatar_url": "https://avatars.githubusercontent.com/u/7081?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dirk", "html_url": "https://github.com/dirk", "followers_url": "https://api.github.com/users/dirk/followers", "following_url": "https://api.github.com/users/dirk/following{/other_user}", "gists_url": "https://api.github.com/users/dirk/gists{/gist_id}", "starred_url": "https://api.github.com/users/dirk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dirk/subscriptions", "organizations_url": "https://api.github.com/users/dirk/orgs", "repos_url": "https://api.github.com/users/dirk/repos", "events_url": "https://api.github.com/users/dirk/events{/privacy}", "received_events_url": "https://api.github.com/users/dirk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "dirk", "id": 7081, "node_id": "MDQ6VXNlcjcwODE=", "avatar_url": "https://avatars.githubusercontent.com/u/7081?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dirk", "html_url": "https://github.com/dirk", "followers_url": "https://api.github.com/users/dirk/followers", "following_url": "https://api.github.com/users/dirk/following{/other_user}", "gists_url": "https://api.github.com/users/dirk/gists{/gist_id}", "starred_url": "https://api.github.com/users/dirk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dirk/subscriptions", "organizations_url": "https://api.github.com/users/dirk/orgs", "repos_url": "https://api.github.com/users/dirk/repos", "events_url": "https://api.github.com/users/dirk/events{/privacy}", "received_events_url": "https://api.github.com/users/dirk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cee1695e0839d0672113e7445cec0722559585ee", "url": "https://api.github.com/repos/rust-lang/rust/commits/cee1695e0839d0672113e7445cec0722559585ee", "html_url": "https://github.com/rust-lang/rust/commit/cee1695e0839d0672113e7445cec0722559585ee"}], "stats": {"total": 10, "additions": 6, "deletions": 4}, "files": [{"sha": "5e0a54392d23de914b5a9cfcd0b354abec251f08", "filename": "src/libstd/process.rs", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/76839221ff9bc4fd65ab9e7c0f1cd8e7514446f0/src%2Flibstd%2Fprocess.rs", "raw_url": "https://github.com/rust-lang/rust/raw/76839221ff9bc4fd65ab9e7c0f1cd8e7514446f0/src%2Flibstd%2Fprocess.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fprocess.rs?ref=76839221ff9bc4fd65ab9e7c0f1cd8e7514446f0", "patch": "@@ -48,13 +48,15 @@ use thread::{self, JoinHandle};\n /// assert!(ecode.success());\n /// ```\n ///\n-/// # Safety\n+/// # Note\n ///\n /// Take note that there is no implementation of\n /// [`Drop`](../../core/ops/trait.Drop.html) for child processes, so if you\n-/// not ensure the `Child` has exited (through `kill`, `wait`, or\n-/// `wait_with_output`) then it will continue to run even after the `Child`\n-/// handle to it has gone out of scope.\n+/// do not ensure the `Child` has exited then it will continue to run, even\n+/// after the `Child` handle to the child process has gone out of scope.\n+///\n+/// Calling `wait` (or other functions that wrap around it) will make the\n+/// parent process wait until the child has actually exited before continuing.\n #[stable(feature = \"process\", since = \"1.0.0\")]\n pub struct Child {\n     handle: imp::Process,"}]}