{"sha": "f358b4c0c05b20bd438f5fe3082a53dbe5b90e88", "node_id": "MDY6Q29tbWl0NzI0NzEyOmYzNThiNGMwYzA1YjIwYmQ0MzhmNWZlMzA4MmE1M2RiZTViOTBlODg=", "commit": {"author": {"name": "Kirill Bulatov", "email": "mail4score@gmail.com", "date": "2019-08-05T08:07:27Z"}, "committer": {"name": "Kirill Bulatov", "email": "mail4score@gmail.com", "date": "2019-08-05T08:14:18Z"}, "message": "Use WeakMap to avoid memory leaks", "tree": {"sha": "4d49e0da1d1b0f9d0dc99d15afb1a59b9eebf589", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4d49e0da1d1b0f9d0dc99d15afb1a59b9eebf589"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f358b4c0c05b20bd438f5fe3082a53dbe5b90e88", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f358b4c0c05b20bd438f5fe3082a53dbe5b90e88", "html_url": "https://github.com/rust-lang/rust/commit/f358b4c0c05b20bd438f5fe3082a53dbe5b90e88", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f358b4c0c05b20bd438f5fe3082a53dbe5b90e88/comments", "author": {"login": "SomeoneToIgnore", "id": 2690773, "node_id": "MDQ6VXNlcjI2OTA3NzM=", "avatar_url": "https://avatars.githubusercontent.com/u/2690773?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SomeoneToIgnore", "html_url": "https://github.com/SomeoneToIgnore", "followers_url": "https://api.github.com/users/SomeoneToIgnore/followers", "following_url": "https://api.github.com/users/SomeoneToIgnore/following{/other_user}", "gists_url": "https://api.github.com/users/SomeoneToIgnore/gists{/gist_id}", "starred_url": "https://api.github.com/users/SomeoneToIgnore/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SomeoneToIgnore/subscriptions", "organizations_url": "https://api.github.com/users/SomeoneToIgnore/orgs", "repos_url": "https://api.github.com/users/SomeoneToIgnore/repos", "events_url": "https://api.github.com/users/SomeoneToIgnore/events{/privacy}", "received_events_url": "https://api.github.com/users/SomeoneToIgnore/received_events", "type": "User", "site_admin": false}, "committer": {"login": "SomeoneToIgnore", "id": 2690773, "node_id": "MDQ6VXNlcjI2OTA3NzM=", "avatar_url": "https://avatars.githubusercontent.com/u/2690773?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SomeoneToIgnore", "html_url": "https://github.com/SomeoneToIgnore", "followers_url": "https://api.github.com/users/SomeoneToIgnore/followers", "following_url": "https://api.github.com/users/SomeoneToIgnore/following{/other_user}", "gists_url": "https://api.github.com/users/SomeoneToIgnore/gists{/gist_id}", "starred_url": "https://api.github.com/users/SomeoneToIgnore/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SomeoneToIgnore/subscriptions", "organizations_url": "https://api.github.com/users/SomeoneToIgnore/orgs", "repos_url": "https://api.github.com/users/SomeoneToIgnore/repos", "events_url": "https://api.github.com/users/SomeoneToIgnore/events{/privacy}", "received_events_url": "https://api.github.com/users/SomeoneToIgnore/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3fb6462d54c498bfd8835dea29ead19d95099625", "url": "https://api.github.com/repos/rust-lang/rust/commits/3fb6462d54c498bfd8835dea29ead19d95099625", "html_url": "https://github.com/rust-lang/rust/commit/3fb6462d54c498bfd8835dea29ead19d95099625"}], "stats": {"total": 22, "additions": 12, "deletions": 10}, "files": [{"sha": "aad28d564a101553cb5d9e8fe3075f804ddb2306", "filename": "editors/code/src/commands/inlay_hints.ts", "status": "modified", "additions": 12, "deletions": 10, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/f358b4c0c05b20bd438f5fe3082a53dbe5b90e88/editors%2Fcode%2Fsrc%2Fcommands%2Finlay_hints.ts", "raw_url": "https://github.com/rust-lang/rust/raw/f358b4c0c05b20bd438f5fe3082a53dbe5b90e88/editors%2Fcode%2Fsrc%2Fcommands%2Finlay_hints.ts", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fsrc%2Fcommands%2Finlay_hints.ts?ref=f358b4c0c05b20bd438f5fe3082a53dbe5b90e88", "patch": "@@ -21,7 +21,10 @@ const typeHintDecorationType = vscode.window.createTextEditorDecorationType({\n \n export class HintsUpdater {\n     private displayHints = true;\n-    private drawnDecorations = new Map<string, vscode.DecorationOptions[]>();\n+    private drawnDecorations = new WeakMap<\n+        vscode.Uri,\n+        vscode.DecorationOptions[]\n+    >();\n \n     public async loadHints(editor?: vscode.TextEditor): Promise<void> {\n         if (this.displayHints) {\n@@ -48,7 +51,7 @@ export class HintsUpdater {\n     public async toggleHintsDisplay(displayHints: boolean): Promise<void> {\n         if (this.displayHints !== displayHints) {\n             this.displayHints = displayHints;\n-            this.drawnDecorations.clear();\n+            this.drawnDecorations = new WeakMap();\n \n             if (displayHints) {\n                 return this.updateHints();\n@@ -77,21 +80,18 @@ export class HintsUpdater {\n             return;\n         }\n \n-        return await this.updateDecorationsFromServer(\n-            document.uri.toString(),\n-            editor\n-        );\n+        return await this.updateDecorationsFromServer(document.uri, editor);\n     }\n \n     private isRustDocument(document: vscode.TextDocument): boolean {\n         return document && document.languageId === 'rust';\n     }\n \n     private async updateDecorationsFromServer(\n-        documentUri: string,\n+        documentUri: vscode.Uri,\n         editor: TextEditor\n     ): Promise<void> {\n-        const newHints = await this.queryHints(documentUri);\n+        const newHints = await this.queryHints(documentUri.toString());\n         if (newHints != null) {\n             const newDecorations = newHints.map(hint => ({\n                 range: hint.range,\n@@ -127,9 +127,11 @@ export class HintsUpdater {\n             );\n     }\n \n-    private getEditorDocumentUri(editor?: vscode.TextEditor): string | null {\n+    private getEditorDocumentUri(\n+        editor?: vscode.TextEditor\n+    ): vscode.Uri | null {\n         if (editor && this.isRustDocument(editor.document)) {\n-            return editor.document.uri.toString();\n+            return editor.document.uri;\n         }\n         return null;\n     }"}]}