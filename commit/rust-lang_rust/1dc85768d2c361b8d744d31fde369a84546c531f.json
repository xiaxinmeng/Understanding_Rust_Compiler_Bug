{"sha": "1dc85768d2c361b8d744d31fde369a84546c531f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjFkYzg1NzY4ZDJjMzYxYjhkNzQ0ZDMxZmRlMzY5YTg0NTQ2YzUzMWY=", "commit": {"author": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2018-01-26T14:51:58Z"}, "committer": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2018-01-26T14:51:58Z"}, "message": "Merge branch 'rustdoc_masked' of https://github.com/ollie27/rust into rollup", "tree": {"sha": "ebe150af3253a0a88566079bfae060c41ede0416", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ebe150af3253a0a88566079bfae060c41ede0416"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1dc85768d2c361b8d744d31fde369a84546c531f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1dc85768d2c361b8d744d31fde369a84546c531f", "html_url": "https://github.com/rust-lang/rust/commit/1dc85768d2c361b8d744d31fde369a84546c531f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1dc85768d2c361b8d744d31fde369a84546c531f/comments", "author": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a9101095e8dfe3558f822f7f16e8fb5fe8d8a63e", "url": "https://api.github.com/repos/rust-lang/rust/commits/a9101095e8dfe3558f822f7f16e8fb5fe8d8a63e", "html_url": "https://github.com/rust-lang/rust/commit/a9101095e8dfe3558f822f7f16e8fb5fe8d8a63e"}, {"sha": "77bc826f90b479813f22bbae907c87a43693299b", "url": "https://api.github.com/repos/rust-lang/rust/commits/77bc826f90b479813f22bbae907c87a43693299b", "html_url": "https://github.com/rust-lang/rust/commit/77bc826f90b479813f22bbae907c87a43693299b"}], "stats": {"total": 114, "additions": 87, "deletions": 27}, "files": [{"sha": "1fb8f106cac030f5379305c40668d0edcb2cefec", "filename": "src/librustdoc/html/render.rs", "status": "modified", "additions": 27, "deletions": 25, "changes": 52, "blob_url": "https://github.com/rust-lang/rust/blob/1dc85768d2c361b8d744d31fde369a84546c531f/src%2Flibrustdoc%2Fhtml%2Frender.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1dc85768d2c361b8d744d31fde369a84546c531f/src%2Flibrustdoc%2Fhtml%2Frender.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Frender.rs?ref=1dc85768d2c361b8d744d31fde369a84546c531f", "patch": "@@ -1243,6 +1243,16 @@ impl DocFolder for Cache {\n             _ => self.stripped_mod,\n         };\n \n+        // If the impl is from a masked crate or references something from a\n+        // masked crate then remove it completely.\n+        if let clean::ImplItem(ref i) = item.inner {\n+            if self.masked_crates.contains(&item.def_id.krate) ||\n+               i.trait_.def_id().map_or(false, |d| self.masked_crates.contains(&d.krate)) ||\n+               i.for_.def_id().map_or(false, |d| self.masked_crates.contains(&d.krate)) {\n+                return None;\n+            }\n+        }\n+\n         // Register any generics to their corresponding string. This is used\n         // when pretty-printing types.\n         if let Some(generics) = item.inner.generics() {\n@@ -1257,14 +1267,10 @@ impl DocFolder for Cache {\n \n         // Collect all the implementors of traits.\n         if let clean::ImplItem(ref i) = item.inner {\n-            if !self.masked_crates.contains(&item.def_id.krate) {\n-                if let Some(did) = i.trait_.def_id() {\n-                    if i.for_.def_id().map_or(true, |d| !self.masked_crates.contains(&d.krate)) {\n-                        self.implementors.entry(did).or_insert(vec![]).push(Impl {\n-                            impl_item: item.clone(),\n-                        });\n-                    }\n-                }\n+            if let Some(did) = i.trait_.def_id() {\n+                self.implementors.entry(did).or_insert(vec![]).push(Impl {\n+                    impl_item: item.clone(),\n+                });\n             }\n         }\n \n@@ -1427,24 +1433,20 @@ impl DocFolder for Cache {\n                 // Note: matching twice to restrict the lifetime of the `i` borrow.\n                 let mut dids = FxHashSet();\n                 if let clean::Item { inner: clean::ImplItem(ref i), .. } = item {\n-                    let masked_trait = i.trait_.def_id().map_or(false,\n-                        |d| self.masked_crates.contains(&d.krate));\n-                    if !masked_trait {\n-                        match i.for_ {\n-                            clean::ResolvedPath { did, .. } |\n-                            clean::BorrowedRef {\n-                                type_: box clean::ResolvedPath { did, .. }, ..\n-                            } => {\n-                                dids.insert(did);\n-                            }\n-                            ref t => {\n-                                let did = t.primitive_type().and_then(|t| {\n-                                    self.primitive_locations.get(&t).cloned()\n-                                });\n+                    match i.for_ {\n+                        clean::ResolvedPath { did, .. } |\n+                        clean::BorrowedRef {\n+                            type_: box clean::ResolvedPath { did, .. }, ..\n+                        } => {\n+                            dids.insert(did);\n+                        }\n+                        ref t => {\n+                            let did = t.primitive_type().and_then(|t| {\n+                                self.primitive_locations.get(&t).cloned()\n+                            });\n \n-                                if let Some(did) = did {\n-                                    dids.insert(did);\n-                                }\n+                            if let Some(did) = did {\n+                                dids.insert(did);\n                             }\n                         }\n                     }"}, {"sha": "34b98a758df9dd5d237a8b16aadc32f692bfb73f", "filename": "src/test/rustdoc-js/from_u.js", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1dc85768d2c361b8d744d31fde369a84546c531f/src%2Ftest%2Frustdoc-js%2Ffrom_u.js", "raw_url": "https://github.com/rust-lang/rust/raw/1dc85768d2c361b8d744d31fde369a84546c531f/src%2Ftest%2Frustdoc-js%2Ffrom_u.js", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-js%2Ffrom_u.js?ref=1dc85768d2c361b8d744d31fde369a84546c531f", "patch": "@@ -15,7 +15,5 @@ const EXPECTED = {\n         { 'path': 'std::char', 'name': 'from_u32' },\n         { 'path': 'std::str', 'name': 'from_utf8' },\n         { 'path': 'std::string::String', 'name': 'from_utf8' },\n-        { 'path': 'std::i32', 'name': 'from_unsigned' },\n-        { 'path': 'std::i128', 'name': 'from_unsigned' },\n     ],\n };"}, {"sha": "e0d53a72220f9629883571da0dbc312dcfdd6b48", "filename": "src/test/rustdoc/auxiliary/masked.rs", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/1dc85768d2c361b8d744d31fde369a84546c531f/src%2Ftest%2Frustdoc%2Fauxiliary%2Fmasked.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1dc85768d2c361b8d744d31fde369a84546c531f/src%2Ftest%2Frustdoc%2Fauxiliary%2Fmasked.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fauxiliary%2Fmasked.rs?ref=1dc85768d2c361b8d744d31fde369a84546c531f", "patch": "@@ -0,0 +1,20 @@\n+// Copyright 2018 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#[derive(Clone)]\n+pub struct MaskedStruct;\n+\n+pub trait MaskedTrait {\n+    fn masked_method();\n+}\n+\n+impl MaskedTrait for String {\n+    fn masked_method() {}\n+}"}, {"sha": "1f398da84e57ed1e7eb86e34e0b554e7599aa118", "filename": "src/test/rustdoc/masked.rs", "status": "added", "additions": 40, "deletions": 0, "changes": 40, "blob_url": "https://github.com/rust-lang/rust/blob/1dc85768d2c361b8d744d31fde369a84546c531f/src%2Ftest%2Frustdoc%2Fmasked.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1dc85768d2c361b8d744d31fde369a84546c531f/src%2Ftest%2Frustdoc%2Fmasked.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fmasked.rs?ref=1dc85768d2c361b8d744d31fde369a84546c531f", "patch": "@@ -0,0 +1,40 @@\n+// Copyright 2018 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// aux-build:masked.rs\n+\n+#![feature(doc_masked)]\n+\n+#![crate_name = \"foo\"]\n+\n+#[doc(masked)]\n+extern crate masked;\n+\n+// @!has 'search-index.js' 'masked_method'\n+\n+// @!has 'foo/struct.String.html' 'MaskedTrait'\n+// @!has 'foo/struct.String.html' 'masked_method'\n+pub use std::string::String;\n+\n+// @!has 'foo/trait.Clone.html' 'MaskedStruct'\n+pub use std::clone::Clone;\n+\n+// @!has 'foo/struct.MyStruct.html' 'MaskedTrait'\n+// @!has 'foo/struct.MyStruct.html' 'masked_method'\n+pub struct MyStruct;\n+\n+impl masked::MaskedTrait for MyStruct {\n+    fn masked_method() {}\n+}\n+\n+// @!has 'foo/trait.MyTrait.html' 'MaskedStruct'\n+pub trait MyTrait {}\n+\n+impl MyTrait for masked::MaskedStruct {}"}]}