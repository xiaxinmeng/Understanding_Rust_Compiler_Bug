{"sha": "b0f77ba26ad2b52be0586e92e18a0256d2396b3f", "node_id": "MDY6Q29tbWl0NzI0NzEyOmIwZjc3YmEyNmFkMmI1MmJlMDU4NmU5MmUxOGEwMjU2ZDIzOTZiM2Y=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2015-08-31T09:15:55Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2015-08-31T09:15:55Z"}, "message": "Auto merge of #28101 - ijks:24214-str-bytes, r=alexcrichton\n\nSpecifically, `count`, `last`, and `nth` are implemented to use the\r\nmethods of the underlying slice iterator.\r\n\r\nPartially closes #24214.", "tree": {"sha": "19814d560940e7680ea331205029278b8c7df1f4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/19814d560940e7680ea331205029278b8c7df1f4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b0f77ba26ad2b52be0586e92e18a0256d2396b3f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b0f77ba26ad2b52be0586e92e18a0256d2396b3f", "html_url": "https://github.com/rust-lang/rust/commit/b0f77ba26ad2b52be0586e92e18a0256d2396b3f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b0f77ba26ad2b52be0586e92e18a0256d2396b3f/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "05cc464d90f0189b776859c56c87db2e99cdbd87", "url": "https://api.github.com/repos/rust-lang/rust/commits/05cc464d90f0189b776859c56c87db2e99cdbd87", "html_url": "https://github.com/rust-lang/rust/commit/05cc464d90f0189b776859c56c87db2e99cdbd87"}, {"sha": "dacf2725ec6230e4b99486fd8f87cc9ab5ad995c", "url": "https://api.github.com/repos/rust-lang/rust/commits/dacf2725ec6230e4b99486fd8f87cc9ab5ad995c", "html_url": "https://github.com/rust-lang/rust/commit/dacf2725ec6230e4b99486fd8f87cc9ab5ad995c"}], "stats": {"total": 46, "additions": 46, "deletions": 0}, "files": [{"sha": "8c468e91567c44cb3277d16f7cd399d3c42e70cb", "filename": "src/libcollectionstest/str.rs", "status": "modified", "additions": 31, "deletions": 0, "changes": 31, "blob_url": "https://github.com/rust-lang/rust/blob/b0f77ba26ad2b52be0586e92e18a0256d2396b3f/src%2Flibcollectionstest%2Fstr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b0f77ba26ad2b52be0586e92e18a0256d2396b3f/src%2Flibcollectionstest%2Fstr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcollectionstest%2Fstr.rs?ref=b0f77ba26ad2b52be0586e92e18a0256d2396b3f", "patch": "@@ -833,6 +833,37 @@ fn test_bytes_revator() {\n     }\n }\n \n+#[test]\n+fn test_bytesator_nth() {\n+    let s = \"\u0e28\u0e44\u0e17\u0e22\u4e2d\u534eVi\u1ec7t Nam\";\n+    let v = [\n+        224, 184, 168, 224, 185, 132, 224, 184, 151, 224, 184, 162, 228,\n+        184, 173, 229, 141, 142, 86, 105, 225, 187, 135, 116, 32, 78, 97,\n+        109\n+    ];\n+\n+    let mut b = s.bytes();\n+    assert_eq!(b.nth(2).unwrap(), v[2]);\n+    assert_eq!(b.nth(10).unwrap(), v[10]);\n+    assert_eq!(b.nth(200), None);\n+}\n+\n+#[test]\n+fn test_bytesator_count() {\n+    let s = \"\u0e28\u0e44\u0e17\u0e22\u4e2d\u534eVi\u1ec7t Nam\";\n+\n+    let b = s.bytes();\n+    assert_eq!(b.count(), 28)\n+}\n+\n+#[test]\n+fn test_bytesator_last() {\n+    let s = \"\u0e28\u0e44\u0e17\u0e22\u4e2d\u534eVi\u1ec7t Nam\";\n+\n+    let b = s.bytes();\n+    assert_eq!(b.last().unwrap(), 109)\n+}\n+\n #[test]\n fn test_char_indicesator() {\n     let s = \"\u0e28\u0e44\u0e17\u0e22\u4e2d\u534eVi\u1ec7t Nam\";"}, {"sha": "7d32f61b3dd717b537939fd477e59864aa812b64", "filename": "src/libcore/str/mod.rs", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/b0f77ba26ad2b52be0586e92e18a0256d2396b3f/src%2Flibcore%2Fstr%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b0f77ba26ad2b52be0586e92e18a0256d2396b3f/src%2Flibcore%2Fstr%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fstr%2Fmod.rs?ref=b0f77ba26ad2b52be0586e92e18a0256d2396b3f", "patch": "@@ -411,6 +411,21 @@ impl<'a> Iterator for Bytes<'a> {\n     fn size_hint(&self) -> (usize, Option<usize>) {\n         self.0.size_hint()\n     }\n+\n+    #[inline]\n+    fn count(self) -> usize {\n+        self.0.count()\n+    }\n+\n+    #[inline]\n+    fn last(self) -> Option<Self::Item> {\n+        self.0.last()\n+    }\n+\n+    #[inline]\n+    fn nth(&mut self, n: usize) -> Option<Self::Item> {\n+        self.0.nth(n)\n+    }\n }\n \n #[stable(feature = \"rust1\", since = \"1.0.0\")]"}]}