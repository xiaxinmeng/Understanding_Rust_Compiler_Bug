{"sha": "6cfe98f1962c442504a0b56f260620f1bccd7601", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZjZmU5OGYxOTYyYzQ0MjUwNGEwYjU2ZjI2MDYyMGYxYmNjZDc2MDE=", "commit": {"author": {"name": "Theodore Luo Wang", "email": "wangtheo662@gmail.com", "date": "2021-09-01T03:07:58Z"}, "committer": {"name": "Theodore Luo Wang", "email": "wangtheo662@gmail.com", "date": "2021-09-01T03:07:58Z"}, "message": "Improve error checking on unary plus", "tree": {"sha": "1a29a7bedd67df30c563cafe273e75280edf562f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1a29a7bedd67df30c563cafe273e75280edf562f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6cfe98f1962c442504a0b56f260620f1bccd7601", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6cfe98f1962c442504a0b56f260620f1bccd7601", "html_url": "https://github.com/rust-lang/rust/commit/6cfe98f1962c442504a0b56f260620f1bccd7601", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6cfe98f1962c442504a0b56f260620f1bccd7601/comments", "author": {"login": "theo-lw", "id": 28904678, "node_id": "MDQ6VXNlcjI4OTA0Njc4", "avatar_url": "https://avatars.githubusercontent.com/u/28904678?v=4", "gravatar_id": "", "url": "https://api.github.com/users/theo-lw", "html_url": "https://github.com/theo-lw", "followers_url": "https://api.github.com/users/theo-lw/followers", "following_url": "https://api.github.com/users/theo-lw/following{/other_user}", "gists_url": "https://api.github.com/users/theo-lw/gists{/gist_id}", "starred_url": "https://api.github.com/users/theo-lw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/theo-lw/subscriptions", "organizations_url": "https://api.github.com/users/theo-lw/orgs", "repos_url": "https://api.github.com/users/theo-lw/repos", "events_url": "https://api.github.com/users/theo-lw/events{/privacy}", "received_events_url": "https://api.github.com/users/theo-lw/received_events", "type": "User", "site_admin": false}, "committer": {"login": "theo-lw", "id": 28904678, "node_id": "MDQ6VXNlcjI4OTA0Njc4", "avatar_url": "https://avatars.githubusercontent.com/u/28904678?v=4", "gravatar_id": "", "url": "https://api.github.com/users/theo-lw", "html_url": "https://github.com/theo-lw", "followers_url": "https://api.github.com/users/theo-lw/followers", "following_url": "https://api.github.com/users/theo-lw/following{/other_user}", "gists_url": "https://api.github.com/users/theo-lw/gists{/gist_id}", "starred_url": "https://api.github.com/users/theo-lw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/theo-lw/subscriptions", "organizations_url": "https://api.github.com/users/theo-lw/orgs", "repos_url": "https://api.github.com/users/theo-lw/repos", "events_url": "https://api.github.com/users/theo-lw/events{/privacy}", "received_events_url": "https://api.github.com/users/theo-lw/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5eacec9ec7e112a0de1011519a57c45586d58414", "url": "https://api.github.com/repos/rust-lang/rust/commits/5eacec9ec7e112a0de1011519a57c45586d58414", "html_url": "https://github.com/rust-lang/rust/commit/5eacec9ec7e112a0de1011519a57c45586d58414"}], "stats": {"total": 121, "additions": 121, "deletions": 0}, "files": [{"sha": "88dae48a9013d5f5b86a1f8cedadd07231a6fe7b", "filename": "compiler/rustc_parse/src/parser/expr.rs", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/6cfe98f1962c442504a0b56f260620f1bccd7601/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6cfe98f1962c442504a0b56f260620f1bccd7601/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fexpr.rs?ref=6cfe98f1962c442504a0b56f260620f1bccd7601", "patch": "@@ -23,6 +23,8 @@ use rustc_span::symbol::{kw, sym, Ident, Symbol};\n use rustc_span::{BytePos, Pos};\n use std::mem;\n \n+use tracing::debug;\n+\n /// Possibly accepts an `token::Interpolated` expression (a pre-parsed expression\n /// dropped into the token stream, which happens while parsing the result of\n /// macro expansion). Placement of these is not as complex as I feared it would\n@@ -355,6 +357,7 @@ impl<'a> Parser<'a> {\n     /// but the next token implies this should be parsed as an expression.\n     /// For example: `if let Some(x) = x { x } else { 0 } / 2`.\n     fn error_found_expr_would_be_stmt(&self, lhs: &Expr) {\n+        debug!(\"error_found_expr_would_be_stmt(lhs: {:?})\", lhs);\n         let mut err = self.struct_span_err(\n             self.token.span,\n             &format!(\"expected expression, found `{}`\", pprust::token_to_string(&self.token),),\n@@ -516,6 +519,15 @@ impl<'a> Parser<'a> {\n             token::BinOp(token::And) | token::AndAnd => {\n                 make_it!(this, attrs, |this, _| this.parse_borrow_expr(lo))\n             }\n+            token::BinOp(token::Plus) => {\n+                this.struct_span_err(lo, \"leading `+` is not supported\")\n+                    .span_label(lo, \"unexpected `+`\")\n+                    .span_suggestion_short(lo, \"remove the `+`\", \"\".to_string(), Applicability::MachineApplicable)\n+                    .emit();\n+                this.bump();\n+\n+                this.parse_prefix_expr(None)\n+            } // `+expr`\n             token::Ident(..) if this.token.is_keyword(kw::Box) => {\n                 make_it!(this, attrs, |this, _| this.parse_box_expr(lo))\n             }"}, {"sha": "4bd248663b884b78e958443586bc613ec12cc0ef", "filename": "src/test/ui/did_you_mean/issue-88276-unary-plus.fixed", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/6cfe98f1962c442504a0b56f260620f1bccd7601/src%2Ftest%2Fui%2Fdid_you_mean%2Fissue-88276-unary-plus.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/6cfe98f1962c442504a0b56f260620f1bccd7601/src%2Ftest%2Fui%2Fdid_you_mean%2Fissue-88276-unary-plus.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fdid_you_mean%2Fissue-88276-unary-plus.fixed?ref=6cfe98f1962c442504a0b56f260620f1bccd7601", "patch": "@@ -0,0 +1,13 @@\n+// run-rustfix\n+#[allow(unused_parens)]\n+fn main() {\n+    let _ = 1; //~ ERROR leading `+` is not supported\n+    let _ = -(1+2)*3; //~ ERROR leading `+` is not supported\n+    let _ = -(1+2)*3; //~ ERROR leading `+` is not supported\n+                        //~| ERROR leading `+` is not supported\n+    let _ = --(1+2)*3; //~ ERROR leading `+` is not supported\n+                         //~| ERROR leading `+` is not supported\n+    let _ = (&\"hello\"); //~ ERROR leading `+` is not supported\n+    let _ = [3, 4+6]; //~ ERROR leading `+` is not supported\n+                        //~| ERROR leading `+` is not supported\n+}"}, {"sha": "e2cce677b47559cbd5389a2ea4a97eaf59669627", "filename": "src/test/ui/did_you_mean/issue-88276-unary-plus.rs", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/6cfe98f1962c442504a0b56f260620f1bccd7601/src%2Ftest%2Fui%2Fdid_you_mean%2Fissue-88276-unary-plus.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6cfe98f1962c442504a0b56f260620f1bccd7601/src%2Ftest%2Fui%2Fdid_you_mean%2Fissue-88276-unary-plus.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fdid_you_mean%2Fissue-88276-unary-plus.rs?ref=6cfe98f1962c442504a0b56f260620f1bccd7601", "patch": "@@ -0,0 +1,13 @@\n+// run-rustfix\n+#[allow(unused_parens)]\n+fn main() {\n+    let _ = +1; //~ ERROR leading `+` is not supported\n+    let _ = -+(1+2)*3; //~ ERROR leading `+` is not supported\n+    let _ = +-+(1+2)*3; //~ ERROR leading `+` is not supported\n+                        //~| ERROR leading `+` is not supported\n+    let _ = -+-+(1+2)*3; //~ ERROR leading `+` is not supported\n+                         //~| ERROR leading `+` is not supported\n+    let _ = (+&\"hello\"); //~ ERROR leading `+` is not supported\n+    let _ = +[+3, 4+6]; //~ ERROR leading `+` is not supported\n+                        //~| ERROR leading `+` is not supported\n+}"}, {"sha": "9c1227d7c351a09232b818e850da07e85258e637", "filename": "src/test/ui/did_you_mean/issue-88276-unary-plus.stderr", "status": "added", "additions": 83, "deletions": 0, "changes": 83, "blob_url": "https://github.com/rust-lang/rust/blob/6cfe98f1962c442504a0b56f260620f1bccd7601/src%2Ftest%2Fui%2Fdid_you_mean%2Fissue-88276-unary-plus.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6cfe98f1962c442504a0b56f260620f1bccd7601/src%2Ftest%2Fui%2Fdid_you_mean%2Fissue-88276-unary-plus.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fdid_you_mean%2Fissue-88276-unary-plus.stderr?ref=6cfe98f1962c442504a0b56f260620f1bccd7601", "patch": "@@ -0,0 +1,83 @@\n+error: leading `+` is not supported\n+  --> $DIR/issue-88276-unary-plus.rs:4:13\n+   |\n+LL |     let _ = +1;\n+   |             ^\n+   |             |\n+   |             unexpected `+`\n+   |             help: remove the `+`\n+\n+error: leading `+` is not supported\n+  --> $DIR/issue-88276-unary-plus.rs:5:14\n+   |\n+LL |     let _ = -+(1+2)*3;\n+   |              ^\n+   |              |\n+   |              unexpected `+`\n+   |              help: remove the `+`\n+\n+error: leading `+` is not supported\n+  --> $DIR/issue-88276-unary-plus.rs:6:13\n+   |\n+LL |     let _ = +-+(1+2)*3;\n+   |             ^\n+   |             |\n+   |             unexpected `+`\n+   |             help: remove the `+`\n+\n+error: leading `+` is not supported\n+  --> $DIR/issue-88276-unary-plus.rs:6:15\n+   |\n+LL |     let _ = +-+(1+2)*3;\n+   |               ^\n+   |               |\n+   |               unexpected `+`\n+   |               help: remove the `+`\n+\n+error: leading `+` is not supported\n+  --> $DIR/issue-88276-unary-plus.rs:8:14\n+   |\n+LL |     let _ = -+-+(1+2)*3;\n+   |              ^\n+   |              |\n+   |              unexpected `+`\n+   |              help: remove the `+`\n+\n+error: leading `+` is not supported\n+  --> $DIR/issue-88276-unary-plus.rs:8:16\n+   |\n+LL |     let _ = -+-+(1+2)*3;\n+   |                ^\n+   |                |\n+   |                unexpected `+`\n+   |                help: remove the `+`\n+\n+error: leading `+` is not supported\n+  --> $DIR/issue-88276-unary-plus.rs:10:14\n+   |\n+LL |     let _ = (+&\"hello\");\n+   |              ^\n+   |              |\n+   |              unexpected `+`\n+   |              help: remove the `+`\n+\n+error: leading `+` is not supported\n+  --> $DIR/issue-88276-unary-plus.rs:11:13\n+   |\n+LL |     let _ = +[+3, 4+6];\n+   |             ^\n+   |             |\n+   |             unexpected `+`\n+   |             help: remove the `+`\n+\n+error: leading `+` is not supported\n+  --> $DIR/issue-88276-unary-plus.rs:11:15\n+   |\n+LL |     let _ = +[+3, 4+6];\n+   |               ^\n+   |               |\n+   |               unexpected `+`\n+   |               help: remove the `+`\n+\n+error: aborting due to 9 previous errors\n+"}]}