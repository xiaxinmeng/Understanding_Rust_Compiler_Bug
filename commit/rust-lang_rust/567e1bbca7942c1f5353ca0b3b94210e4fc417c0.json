{"sha": "567e1bbca7942c1f5353ca0b3b94210e4fc417c0", "node_id": "C_kwDOAAsO6NoAKDU2N2UxYmJjYTc5NDJjMWY1MzUzY2EwYjNiOTQyMTBlNGZjNDE3YzA", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-09-07T13:49:58Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-09-07T13:49:58Z"}, "message": "Auto merge of #101432 - nnethercote:shrink-PredicateS, r=lcnr\n\nShrink `PredicateS`\n\nr? `@ghost`", "tree": {"sha": "b34ee2c8c2731c39bff3c9e46f389c277c941cb6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b34ee2c8c2731c39bff3c9e46f389c277c941cb6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/567e1bbca7942c1f5353ca0b3b94210e4fc417c0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/567e1bbca7942c1f5353ca0b3b94210e4fc417c0", "html_url": "https://github.com/rust-lang/rust/commit/567e1bbca7942c1f5353ca0b3b94210e4fc417c0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/567e1bbca7942c1f5353ca0b3b94210e4fc417c0/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9cbbd4a80e2bb633c6cfc53a3e9cb08b1910ce5f", "url": "https://api.github.com/repos/rust-lang/rust/commits/9cbbd4a80e2bb633c6cfc53a3e9cb08b1910ce5f", "html_url": "https://github.com/rust-lang/rust/commit/9cbbd4a80e2bb633c6cfc53a3e9cb08b1910ce5f"}, {"sha": "2d4349c22d855f4735f89d5fcfc397ecb11f5b9c", "url": "https://api.github.com/repos/rust-lang/rust/commits/2d4349c22d855f4735f89d5fcfc397ecb11f5b9c", "html_url": "https://github.com/rust-lang/rust/commit/2d4349c22d855f4735f89d5fcfc397ecb11f5b9c"}], "stats": {"total": 10, "additions": 5, "deletions": 5}, "files": [{"sha": "d1ab7fb67962ea83c19d93360024b334b704cbaf", "filename": "clippy_lints/src/dereference.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/567e1bbca7942c1f5353ca0b3b94210e4fc417c0/clippy_lints%2Fsrc%2Fdereference.rs", "raw_url": "https://github.com/rust-lang/rust/raw/567e1bbca7942c1f5353ca0b3b94210e4fc417c0/clippy_lints%2Fsrc%2Fdereference.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fdereference.rs?ref=567e1bbca7942c1f5353ca0b3b94210e4fc417c0", "patch": "@@ -1175,7 +1175,7 @@ fn replace_types<'tcx>(\n         if replaced.insert(param_ty.index) {\n             for projection_predicate in projection_predicates {\n                 if projection_predicate.projection_ty.self_ty() == param_ty.to_ty(cx.tcx)\n-                    && let ty::Term::Ty(term_ty) = projection_predicate.term\n+                    && let Some(term_ty) = projection_predicate.term.ty()\n                     && let ty::Param(term_param_ty) = term_ty.kind()\n                 {\n                     let item_def_id = projection_predicate.projection_ty.item_def_id;"}, {"sha": "48a9d6e7c329e806ec571ebde331b7e0dbc63c0d", "filename": "clippy_lints/src/methods/mod.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/567e1bbca7942c1f5353ca0b3b94210e4fc417c0/clippy_lints%2Fsrc%2Fmethods%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/567e1bbca7942c1f5353ca0b3b94210e4fc417c0/clippy_lints%2Fsrc%2Fmethods%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmethods%2Fmod.rs?ref=567e1bbca7942c1f5353ca0b3b94210e4fc417c0", "patch": "@@ -3304,9 +3304,9 @@ impl<'tcx> LateLintPass<'tcx> for Methods {\n                 // one of the associated types must be Self\n                 for &(predicate, _span) in cx.tcx.explicit_item_bounds(def_id) {\n                     if let ty::PredicateKind::Projection(projection_predicate) = predicate.kind().skip_binder() {\n-                        let assoc_ty = match projection_predicate.term {\n-                            ty::Term::Ty(ty) => ty,\n-                            ty::Term::Const(_c) => continue,\n+                        let assoc_ty = match projection_predicate.term.unpack() {\n+                            ty::TermKind::Ty(ty) => ty,\n+                            ty::TermKind::Const(_c) => continue,\n                         };\n                         // walk the associated type and check for Self\n                         if let Some(self_adt) = self_ty.ty_adt_def() {"}, {"sha": "85da97a39f9a1539435c7f4d202b2dd5eb06fda9", "filename": "clippy_lints/src/methods/unnecessary_to_owned.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/567e1bbca7942c1f5353ca0b3b94210e4fc417c0/clippy_lints%2Fsrc%2Fmethods%2Funnecessary_to_owned.rs", "raw_url": "https://github.com/rust-lang/rust/raw/567e1bbca7942c1f5353ca0b3b94210e4fc417c0/clippy_lints%2Fsrc%2Fmethods%2Funnecessary_to_owned.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmethods%2Funnecessary_to_owned.rs?ref=567e1bbca7942c1f5353ca0b3b94210e4fc417c0", "patch": "@@ -274,7 +274,7 @@ fn check_other_call_arg<'tcx>(\n                         .subst_and_normalize_erasing_regions(call_substs, cx.param_env, projection_predicate.term);\n                 implements_trait(cx, receiver_ty, deref_trait_id, &[])\n                     && get_associated_type(cx, receiver_ty, deref_trait_id, \"Target\")\n-                        .map_or(false, |ty| ty::Term::Ty(ty) == normalized_ty)\n+                        .map_or(false, |ty| ty::TermKind::Ty(ty) == normalized_ty.unpack())\n             } else {\n                 false\n             }"}]}