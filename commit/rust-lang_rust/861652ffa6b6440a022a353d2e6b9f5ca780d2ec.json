{"sha": "861652ffa6b6440a022a353d2e6b9f5ca780d2ec", "node_id": "MDY6Q29tbWl0NzI0NzEyOjg2MTY1MmZmYTZiNjQ0MGEwMjJhMzUzZDJlNmI5ZjVjYTc4MGQyZWM=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2020-04-30T17:11:18Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-04-30T17:11:18Z"}, "message": "Merge #4225\n\n4225: Special-case try macro_rules r=matklad a=edwin0cheng\n\nSimilar to #4221, but for `macro_rules! try {}`\n\nCo-authored-by: Edwin Cheng <edwin0cheng@gmail.com>", "tree": {"sha": "7fabe31609082ce2f4c4ccdc9cae43caf5e3b654", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7fabe31609082ce2f4c4ccdc9cae43caf5e3b654"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/861652ffa6b6440a022a353d2e6b9f5ca780d2ec", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJeqwa2CRBK7hj4Ov3rIwAAdHIIAGqlev5brS1DuLq+pG1wHiMr\n3IXVmDRURLCIXK0OFROUpZLNva7oCIDGkwpfpAMMjf6XZaPWENEo84ra/agn9vkf\ngwAFcEIjHoNUKVqlWo4r+3dGtkfEHpEYF0iagm1Q2Qj1V368GhYxzWGV1mg+SgrG\nTs1eY5LTbyR3tiA90si2hamIldu1gUdynO2VEsMqwzbNMHUPUnH5LPh0uY00Ht4p\nWga/UZ7xAMZJHxswjNauC6lqEAPSngD0h8QUz1ee+hb/1MMRFn3b44U7AEoRHkcV\nUQLC1+xdhPkFFGN7FEXXZprfQJFBr2o+uqJOdAYrZhvyKGsSE/WvzS7BsWIwT7U=\n=MczL\n-----END PGP SIGNATURE-----\n", "payload": "tree 7fabe31609082ce2f4c4ccdc9cae43caf5e3b654\nparent 972afffded3957c3891116a9a81ac9b049e28ad4\nparent 45c4f620b1c5b8e462875b6e372db0e849bd6170\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1588266678 +0000\ncommitter GitHub <noreply@github.com> 1588266678 +0000\n\nMerge #4225\n\n4225: Special-case try macro_rules r=matklad a=edwin0cheng\n\nSimilar to #4221, but for `macro_rules! try {}`\n\nCo-authored-by: Edwin Cheng <edwin0cheng@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/861652ffa6b6440a022a353d2e6b9f5ca780d2ec", "html_url": "https://github.com/rust-lang/rust/commit/861652ffa6b6440a022a353d2e6b9f5ca780d2ec", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/861652ffa6b6440a022a353d2e6b9f5ca780d2ec/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "972afffded3957c3891116a9a81ac9b049e28ad4", "url": "https://api.github.com/repos/rust-lang/rust/commits/972afffded3957c3891116a9a81ac9b049e28ad4", "html_url": "https://github.com/rust-lang/rust/commit/972afffded3957c3891116a9a81ac9b049e28ad4"}, {"sha": "45c4f620b1c5b8e462875b6e372db0e849bd6170", "url": "https://api.github.com/repos/rust-lang/rust/commits/45c4f620b1c5b8e462875b6e372db0e849bd6170", "html_url": "https://github.com/rust-lang/rust/commit/45c4f620b1c5b8e462875b6e372db0e849bd6170"}], "stats": {"total": 39, "additions": 39, "deletions": 0}, "files": [{"sha": "1503a87300fa321a1a5dbd2313700f0ed6aa4285", "filename": "crates/ra_parser/src/grammar/items.rs", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/861652ffa6b6440a022a353d2e6b9f5ca780d2ec/crates%2Fra_parser%2Fsrc%2Fgrammar%2Fitems.rs", "raw_url": "https://github.com/rust-lang/rust/raw/861652ffa6b6440a022a353d2e6b9f5ca780d2ec/crates%2Fra_parser%2Fsrc%2Fgrammar%2Fitems.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_parser%2Fsrc%2Fgrammar%2Fitems.rs?ref=861652ffa6b6440a022a353d2e6b9f5ca780d2ec", "patch": "@@ -415,6 +415,17 @@ pub(super) fn macro_call_after_excl(p: &mut Parser) -> BlockLike {\n     if p.at(IDENT) {\n         name(p);\n     }\n+    // Special-case `macro_rules! try`.\n+    // This is a hack until we do proper edition support\n+\n+    // test try_macro_rules\n+    // macro_rules! try { () => {} }\n+    if p.at(T![try]) {\n+        let m = p.start();\n+        p.bump_remap(IDENT);\n+        m.complete(p, NAME);\n+    }\n+\n     match p.current() {\n         T!['{'] => {\n             token_tree(p);"}, {"sha": "05b89d1c36902200122eee7907802cd7129f4bde", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0160_try_macro_rules.rast", "status": "added", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/861652ffa6b6440a022a353d2e6b9f5ca780d2ec/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0160_try_macro_rules.rast", "raw_url": "https://github.com/rust-lang/rust/raw/861652ffa6b6440a022a353d2e6b9f5ca780d2ec/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0160_try_macro_rules.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0160_try_macro_rules.rast?ref=861652ffa6b6440a022a353d2e6b9f5ca780d2ec", "patch": "@@ -0,0 +1,27 @@\n+SOURCE_FILE@0..30\n+  MACRO_CALL@0..29\n+    PATH@0..11\n+      PATH_SEGMENT@0..11\n+        NAME_REF@0..11\n+          IDENT@0..11 \"macro_rules\"\n+    BANG@11..12 \"!\"\n+    WHITESPACE@12..13 \" \"\n+    NAME@13..16\n+      IDENT@13..16 \"try\"\n+    WHITESPACE@16..17 \" \"\n+    TOKEN_TREE@17..29\n+      L_CURLY@17..18 \"{\"\n+      WHITESPACE@18..19 \" \"\n+      TOKEN_TREE@19..21\n+        L_PAREN@19..20 \"(\"\n+        R_PAREN@20..21 \")\"\n+      WHITESPACE@21..22 \" \"\n+      EQ@22..23 \"=\"\n+      R_ANGLE@23..24 \">\"\n+      WHITESPACE@24..25 \" \"\n+      TOKEN_TREE@25..27\n+        L_CURLY@25..26 \"{\"\n+        R_CURLY@26..27 \"}\"\n+      WHITESPACE@27..28 \" \"\n+      R_CURLY@28..29 \"}\"\n+  WHITESPACE@29..30 \"\\n\""}, {"sha": "2e2ab6e60b641d8abfaaf08e79bc6b114491778a", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0160_try_macro_rules.rs", "status": "added", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/861652ffa6b6440a022a353d2e6b9f5ca780d2ec/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0160_try_macro_rules.rs", "raw_url": "https://github.com/rust-lang/rust/raw/861652ffa6b6440a022a353d2e6b9f5ca780d2ec/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0160_try_macro_rules.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0160_try_macro_rules.rs?ref=861652ffa6b6440a022a353d2e6b9f5ca780d2ec", "patch": "@@ -0,0 +1 @@\n+macro_rules! try { () => {} }"}]}