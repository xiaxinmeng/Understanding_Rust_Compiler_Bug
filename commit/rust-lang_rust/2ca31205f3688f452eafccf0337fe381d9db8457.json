{"sha": "2ca31205f3688f452eafccf0337fe381d9db8457", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJjYTMxMjA1ZjM2ODhmNDUyZWFmY2NmMDMzN2ZlMzgxZDlkYjg0NTc=", "commit": {"author": {"name": "Kaiyin Zhong", "email": "kindlychung@gmail.com", "date": "2016-05-04T19:50:51Z"}, "committer": {"name": "Kaiyin Zhong", "email": "kindlychung@gmail.com", "date": "2016-05-04T19:50:51Z"}, "message": "errors in the doc", "tree": {"sha": "4449b5ce23c7f4957fd2ebff556892939ead86bd", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4449b5ce23c7f4957fd2ebff556892939ead86bd"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2ca31205f3688f452eafccf0337fe381d9db8457", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2ca31205f3688f452eafccf0337fe381d9db8457", "html_url": "https://github.com/rust-lang/rust/commit/2ca31205f3688f452eafccf0337fe381d9db8457", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2ca31205f3688f452eafccf0337fe381d9db8457/comments", "author": {"login": "kindlychung", "id": 995761, "node_id": "MDQ6VXNlcjk5NTc2MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/995761?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kindlychung", "html_url": "https://github.com/kindlychung", "followers_url": "https://api.github.com/users/kindlychung/followers", "following_url": "https://api.github.com/users/kindlychung/following{/other_user}", "gists_url": "https://api.github.com/users/kindlychung/gists{/gist_id}", "starred_url": "https://api.github.com/users/kindlychung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kindlychung/subscriptions", "organizations_url": "https://api.github.com/users/kindlychung/orgs", "repos_url": "https://api.github.com/users/kindlychung/repos", "events_url": "https://api.github.com/users/kindlychung/events{/privacy}", "received_events_url": "https://api.github.com/users/kindlychung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "kindlychung", "id": 995761, "node_id": "MDQ6VXNlcjk5NTc2MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/995761?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kindlychung", "html_url": "https://github.com/kindlychung", "followers_url": "https://api.github.com/users/kindlychung/followers", "following_url": "https://api.github.com/users/kindlychung/following{/other_user}", "gists_url": "https://api.github.com/users/kindlychung/gists{/gist_id}", "starred_url": "https://api.github.com/users/kindlychung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kindlychung/subscriptions", "organizations_url": "https://api.github.com/users/kindlychung/orgs", "repos_url": "https://api.github.com/users/kindlychung/repos", "events_url": "https://api.github.com/users/kindlychung/events{/privacy}", "received_events_url": "https://api.github.com/users/kindlychung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3157691f963a86776cb7e6a7842f566032890aba", "url": "https://api.github.com/repos/rust-lang/rust/commits/3157691f963a86776cb7e6a7842f566032890aba", "html_url": "https://github.com/rust-lang/rust/commit/3157691f963a86776cb7e6a7842f566032890aba"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "c13512a399ad886ba0db09b5572224963508a114", "filename": "src/libcore/iter/iterator.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/2ca31205f3688f452eafccf0337fe381d9db8457/src%2Flibcore%2Fiter%2Fiterator.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2ca31205f3688f452eafccf0337fe381d9db8457/src%2Flibcore%2Fiter%2Fiterator.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fiter%2Fiterator.rs?ref=2ca31205f3688f452eafccf0337fe381d9db8457", "patch": "@@ -214,7 +214,7 @@ pub trait Iterator {\n     /// Like most indexing operations, the count starts from zero, so `nth(0)`\n     /// returns the first value, `nth(1)` the second, and so on.\n     ///\n-    /// `nth()` will return `None` if `n` is larger than the length of the\n+    /// `nth()` will return `None` if `n` >= the length of the\n     /// iterator.\n     ///\n     /// # Examples\n@@ -237,7 +237,7 @@ pub trait Iterator {\n     /// assert_eq!(iter.nth(1), None);\n     /// ```\n     ///\n-    /// Returning `None` if there are less than `n` elements:\n+    /// Returning `None` if there are less than `n + 1` elements:\n     ///\n     /// ```\n     /// let a = [1, 2, 3];"}]}