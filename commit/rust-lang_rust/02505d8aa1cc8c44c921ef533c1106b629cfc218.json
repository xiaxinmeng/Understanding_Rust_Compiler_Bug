{"sha": "02505d8aa1cc8c44c921ef533c1106b629cfc218", "node_id": "MDY6Q29tbWl0NzI0NzEyOjAyNTA1ZDhhYTFjYzhjNDRjOTIxZWY1MzNjMTEwNmI2MjljZmMyMTg=", "commit": {"author": {"name": "Marijn Haverbeke", "email": "marijnh@gmail.com", "date": "2012-01-05T08:18:19Z"}, "committer": {"name": "Marijn Haverbeke", "email": "marijnh@gmail.com", "date": "2012-01-05T08:18:19Z"}, "message": "Express some list primitives in a way that doesn't copy\n\nIt was somewhat embarassing that list::len copied its elements.", "tree": {"sha": "f721d8cae8fb1027aaf0a0d723bb1d3f2a5781c3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f721d8cae8fb1027aaf0a0d723bb1d3f2a5781c3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/02505d8aa1cc8c44c921ef533c1106b629cfc218", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/02505d8aa1cc8c44c921ef533c1106b629cfc218", "html_url": "https://github.com/rust-lang/rust/commit/02505d8aa1cc8c44c921ef533c1106b629cfc218", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/02505d8aa1cc8c44c921ef533c1106b629cfc218/comments", "author": {"login": "marijnh", "id": 144427, "node_id": "MDQ6VXNlcjE0NDQyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/144427?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marijnh", "html_url": "https://github.com/marijnh", "followers_url": "https://api.github.com/users/marijnh/followers", "following_url": "https://api.github.com/users/marijnh/following{/other_user}", "gists_url": "https://api.github.com/users/marijnh/gists{/gist_id}", "starred_url": "https://api.github.com/users/marijnh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marijnh/subscriptions", "organizations_url": "https://api.github.com/users/marijnh/orgs", "repos_url": "https://api.github.com/users/marijnh/repos", "events_url": "https://api.github.com/users/marijnh/events{/privacy}", "received_events_url": "https://api.github.com/users/marijnh/received_events", "type": "User", "site_admin": false}, "committer": {"login": "marijnh", "id": 144427, "node_id": "MDQ6VXNlcjE0NDQyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/144427?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marijnh", "html_url": "https://github.com/marijnh", "followers_url": "https://api.github.com/users/marijnh/followers", "following_url": "https://api.github.com/users/marijnh/following{/other_user}", "gists_url": "https://api.github.com/users/marijnh/gists{/gist_id}", "starred_url": "https://api.github.com/users/marijnh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marijnh/subscriptions", "organizations_url": "https://api.github.com/users/marijnh/orgs", "repos_url": "https://api.github.com/users/marijnh/repos", "events_url": "https://api.github.com/users/marijnh/events{/privacy}", "received_events_url": "https://api.github.com/users/marijnh/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0e98e64bc2eb1ed87dfcb030a92c9e112c5df7a2", "url": "https://api.github.com/repos/rust-lang/rust/commits/0e98e64bc2eb1ed87dfcb030a92c9e112c5df7a2", "html_url": "https://github.com/rust-lang/rust/commit/0e98e64bc2eb1ed87dfcb030a92c9e112c5df7a2"}], "stats": {"total": 42, "additions": 22, "deletions": 20}, "files": [{"sha": "aabc349938517bebea7df0a1cbf6976af0604e5b", "filename": "src/libstd/list.rs", "status": "modified", "additions": 22, "deletions": 20, "changes": 42, "blob_url": "https://github.com/rust-lang/rust/blob/02505d8aa1cc8c44c921ef533c1106b629cfc218/src%2Flibstd%2Flist.rs", "raw_url": "https://github.com/rust-lang/rust/raw/02505d8aa1cc8c44c921ef533c1106b629cfc218/src%2Flibstd%2Flist.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Flist.rs?ref=02505d8aa1cc8c44c921ef533c1106b629cfc218", "patch": "@@ -46,16 +46,10 @@ ls - The list to fold\n z - The initial value\n f - The function to apply\n */\n-fn foldl<copy T, copy U>(ls: list<U>, z: T, f: block(T, U) -> T) -> T {\n+fn foldl<copy T, U>(ls: list<U>, z: T, f: block(T, U) -> T) -> T {\n     let accum: T = z;\n-    let ls = ls;\n-    while true {\n-        alt ls {\n-          cons(hd, tl) { accum = f(accum, hd); ls = *tl; }\n-          nil. { break; }\n-        }\n-    }\n-    ret accum;\n+    iter(ls) {|elt| accum = f(accum, elt);}\n+    accum\n }\n \n /*\n@@ -123,9 +117,10 @@ Function: len\n \n Returns the length of a list\n */\n-fn len<copy T>(ls: list<T>) -> uint {\n-    fn count<T>(&&u: uint, _t: T) -> uint { ret u + 1u; }\n-    ret foldl(ls, 0u, bind count(_, _));\n+fn len<T>(ls: list<T>) -> uint {\n+    let count = 0u;\n+    iter(ls) {|_e| count += 1u;}\n+    count\n }\n \n /*\n@@ -169,15 +164,22 @@ Function: iter\n \n Iterate over a list\n */\n-fn iter<copy T>(l: list<T>, f: block(T)) {\n-    let cur = l;\n-    while cur != nil {\n-        alt cur {\n-          cons(hd, tl) {\n-            f(hd);\n-            cur = *tl;\n-          }\n+fn iter<T>(l: list<T>, f: block(T)) {\n+    alt l {\n+      cons(hd, tl) {\n+        f(hd);\n+        let cur = tl;\n+        while true {\n+            alt *cur {\n+              cons(hd, tl) {\n+                f(hd);\n+                cur = tl;\n+              }\n+              nil. { break; }\n+            }\n         }\n+      }\n+      nil. {}\n     }\n }\n "}]}