{"sha": "a447c21afaa00cc047e70fe4205c33c2dc4aa2cb", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE0NDdjMjFhZmFhMDBjYzA0N2U3MGZlNDIwNWMzM2MyZGM0YWEyY2I=", "commit": {"author": {"name": "Jonas Schievink", "email": "jonasschievink@gmail.com", "date": "2020-09-12T23:58:17Z"}, "committer": {"name": "Jonas Schievink", "email": "jonasschievink@gmail.com", "date": "2020-09-13T00:10:39Z"}, "message": "Don't query unstable data when `staged_api` is off", "tree": {"sha": "ad76e3a19cb04fc1c2d4c90cf9bf04c529088e09", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ad76e3a19cb04fc1c2d4c90cf9bf04c529088e09"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a447c21afaa00cc047e70fe4205c33c2dc4aa2cb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a447c21afaa00cc047e70fe4205c33c2dc4aa2cb", "html_url": "https://github.com/rust-lang/rust/commit/a447c21afaa00cc047e70fe4205c33c2dc4aa2cb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a447c21afaa00cc047e70fe4205c33c2dc4aa2cb/comments", "author": {"login": "jonas-schievink", "id": 1786438, "node_id": "MDQ6VXNlcjE3ODY0Mzg=", "avatar_url": "https://avatars.githubusercontent.com/u/1786438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonas-schievink", "html_url": "https://github.com/jonas-schievink", "followers_url": "https://api.github.com/users/jonas-schievink/followers", "following_url": "https://api.github.com/users/jonas-schievink/following{/other_user}", "gists_url": "https://api.github.com/users/jonas-schievink/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonas-schievink/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonas-schievink/subscriptions", "organizations_url": "https://api.github.com/users/jonas-schievink/orgs", "repos_url": "https://api.github.com/users/jonas-schievink/repos", "events_url": "https://api.github.com/users/jonas-schievink/events{/privacy}", "received_events_url": "https://api.github.com/users/jonas-schievink/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jonas-schievink", "id": 1786438, "node_id": "MDQ6VXNlcjE3ODY0Mzg=", "avatar_url": "https://avatars.githubusercontent.com/u/1786438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonas-schievink", "html_url": "https://github.com/jonas-schievink", "followers_url": "https://api.github.com/users/jonas-schievink/followers", "following_url": "https://api.github.com/users/jonas-schievink/following{/other_user}", "gists_url": "https://api.github.com/users/jonas-schievink/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonas-schievink/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonas-schievink/subscriptions", "organizations_url": "https://api.github.com/users/jonas-schievink/orgs", "repos_url": "https://api.github.com/users/jonas-schievink/repos", "events_url": "https://api.github.com/users/jonas-schievink/events{/privacy}", "received_events_url": "https://api.github.com/users/jonas-schievink/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "989190874fe2a0e9877ce4f02a6c60641e3d42a3", "url": "https://api.github.com/repos/rust-lang/rust/commits/989190874fe2a0e9877ce4f02a6c60641e3d42a3", "html_url": "https://github.com/rust-lang/rust/commit/989190874fe2a0e9877ce4f02a6c60641e3d42a3"}], "stats": {"total": 22, "additions": 18, "deletions": 4}, "files": [{"sha": "9eab4ec10b4188b4b2749b000532d0126fd2fcc7", "filename": "Cargo.lock", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/a447c21afaa00cc047e70fe4205c33c2dc4aa2cb/Cargo.lock", "raw_url": "https://github.com/rust-lang/rust/raw/a447c21afaa00cc047e70fe4205c33c2dc4aa2cb/Cargo.lock", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Cargo.lock?ref=a447c21afaa00cc047e70fe4205c33c2dc4aa2cb", "patch": "@@ -3703,6 +3703,7 @@ dependencies = [\n  \"rustc_data_structures\",\n  \"rustc_errors\",\n  \"rustc_expand\",\n+ \"rustc_feature\",\n  \"rustc_hir\",\n  \"rustc_hir_pretty\",\n  \"rustc_index\","}, {"sha": "f1975e78801ef9ba54d6b03a784fccef39405e4b", "filename": "compiler/rustc_metadata/Cargo.toml", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/a447c21afaa00cc047e70fe4205c33c2dc4aa2cb/compiler%2Frustc_metadata%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/a447c21afaa00cc047e70fe4205c33c2dc4aa2cb/compiler%2Frustc_metadata%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_metadata%2FCargo.toml?ref=a447c21afaa00cc047e70fe4205c33c2dc4aa2cb", "patch": "@@ -17,6 +17,7 @@ rustc_middle = { path = \"../rustc_middle\" }\n rustc_attr = { path = \"../rustc_attr\" }\n rustc_data_structures = { path = \"../rustc_data_structures\" }\n rustc_errors = { path = \"../rustc_errors\" }\n+rustc_feature = { path = \"../rustc_feature\" }\n rustc_hir = { path = \"../rustc_hir\" }\n rustc_hir_pretty = { path = \"../rustc_hir_pretty\" }\n rustc_target = { path = \"../rustc_target\" }"}, {"sha": "8287666d435f8fe04127f5a45eb1d0b3c8a6202d", "filename": "compiler/rustc_metadata/src/rmeta/encoder.rs", "status": "modified", "additions": 16, "deletions": 4, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/a447c21afaa00cc047e70fe4205c33c2dc4aa2cb/compiler%2Frustc_metadata%2Fsrc%2Frmeta%2Fencoder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a447c21afaa00cc047e70fe4205c33c2dc4aa2cb/compiler%2Frustc_metadata%2Fsrc%2Frmeta%2Fencoder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_metadata%2Fsrc%2Frmeta%2Fencoder.rs?ref=a447c21afaa00cc047e70fe4205c33c2dc4aa2cb", "patch": "@@ -40,6 +40,7 @@ use tracing::{debug, trace};\n pub(super) struct EncodeContext<'a, 'tcx> {\n     opaque: opaque::Encoder,\n     tcx: TyCtxt<'tcx>,\n+    feat: &'tcx rustc_feature::Features,\n \n     tables: TableBuilders<'tcx>,\n \n@@ -1132,15 +1133,25 @@ impl EncodeContext<'a, 'tcx> {\n \n     fn encode_stability(&mut self, def_id: DefId) {\n         debug!(\"EncodeContext::encode_stability({:?})\", def_id);\n-        if let Some(stab) = self.tcx.lookup_stability(def_id) {\n-            record!(self.tables.stability[def_id] <- stab)\n+\n+        // The query lookup can take a measurable amount of time in crates with many items. Check if\n+        // the stability attributes are even enabled before using their queries.\n+        if self.feat.staged_api || self.tcx.sess.opts.debugging_opts.force_unstable_if_unmarked {\n+            if let Some(stab) = self.tcx.lookup_stability(def_id) {\n+                record!(self.tables.stability[def_id] <- stab)\n+            }\n         }\n     }\n \n     fn encode_const_stability(&mut self, def_id: DefId) {\n         debug!(\"EncodeContext::encode_const_stability({:?})\", def_id);\n-        if let Some(stab) = self.tcx.lookup_const_stability(def_id) {\n-            record!(self.tables.const_stability[def_id] <- stab)\n+\n+        // The query lookup can take a measurable amount of time in crates with many items. Check if\n+        // the stability attributes are even enabled before using their queries.\n+        if self.feat.staged_api || self.tcx.sess.opts.debugging_opts.force_unstable_if_unmarked {\n+            if let Some(stab) = self.tcx.lookup_const_stability(def_id) {\n+                record!(self.tables.const_stability[def_id] <- stab)\n+            }\n         }\n     }\n \n@@ -1979,6 +1990,7 @@ fn encode_metadata_impl(tcx: TyCtxt<'_>) -> EncodedMetadata {\n     let mut ecx = EncodeContext {\n         opaque: encoder,\n         tcx,\n+        feat: tcx.features(),\n         tables: Default::default(),\n         lazy_state: LazyState::NoNode,\n         type_shorthands: Default::default(),"}]}