{"sha": "5665efd60e20a22f3a401c37070d774aea89b959", "node_id": "MDY6Q29tbWl0NzI0NzEyOjU2NjVlZmQ2MGUyMGEyMmYzYTQwMWMzNzA3MGQ3NzRhZWE4OWI5NTk=", "commit": {"author": {"name": "Steve Klabnik", "email": "steve@steveklabnik.com", "date": "2015-07-22T16:56:52Z"}, "committer": {"name": "Steve Klabnik", "email": "steve@steveklabnik.com", "date": "2015-07-22T16:56:52Z"}, "message": "Rollup merge of #27201 - Ticki:master, r=steveklabnik\n\nJust some small changes.", "tree": {"sha": "067592333ca3e85dae0f2862e6878446b6adb823", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/067592333ca3e85dae0f2862e6878446b6adb823"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5665efd60e20a22f3a401c37070d774aea89b959", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5665efd60e20a22f3a401c37070d774aea89b959", "html_url": "https://github.com/rust-lang/rust/commit/5665efd60e20a22f3a401c37070d774aea89b959", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5665efd60e20a22f3a401c37070d774aea89b959/comments", "author": {"login": "steveklabnik", "id": 27786, "node_id": "MDQ6VXNlcjI3Nzg2", "avatar_url": "https://avatars.githubusercontent.com/u/27786?v=4", "gravatar_id": "", "url": "https://api.github.com/users/steveklabnik", "html_url": "https://github.com/steveklabnik", "followers_url": "https://api.github.com/users/steveklabnik/followers", "following_url": "https://api.github.com/users/steveklabnik/following{/other_user}", "gists_url": "https://api.github.com/users/steveklabnik/gists{/gist_id}", "starred_url": "https://api.github.com/users/steveklabnik/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/steveklabnik/subscriptions", "organizations_url": "https://api.github.com/users/steveklabnik/orgs", "repos_url": "https://api.github.com/users/steveklabnik/repos", "events_url": "https://api.github.com/users/steveklabnik/events{/privacy}", "received_events_url": "https://api.github.com/users/steveklabnik/received_events", "type": "User", "site_admin": false}, "committer": {"login": "steveklabnik", "id": 27786, "node_id": "MDQ6VXNlcjI3Nzg2", "avatar_url": "https://avatars.githubusercontent.com/u/27786?v=4", "gravatar_id": "", "url": "https://api.github.com/users/steveklabnik", "html_url": "https://github.com/steveklabnik", "followers_url": "https://api.github.com/users/steveklabnik/followers", "following_url": "https://api.github.com/users/steveklabnik/following{/other_user}", "gists_url": "https://api.github.com/users/steveklabnik/gists{/gist_id}", "starred_url": "https://api.github.com/users/steveklabnik/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/steveklabnik/subscriptions", "organizations_url": "https://api.github.com/users/steveklabnik/orgs", "repos_url": "https://api.github.com/users/steveklabnik/repos", "events_url": "https://api.github.com/users/steveklabnik/events{/privacy}", "received_events_url": "https://api.github.com/users/steveklabnik/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7cacf830092c2bcbed48248a8047ff7bdd165fcc", "url": "https://api.github.com/repos/rust-lang/rust/commits/7cacf830092c2bcbed48248a8047ff7bdd165fcc", "html_url": "https://github.com/rust-lang/rust/commit/7cacf830092c2bcbed48248a8047ff7bdd165fcc"}, {"sha": "cf1e078bf65899f466ebe07d29732979a845a718", "url": "https://api.github.com/repos/rust-lang/rust/commits/cf1e078bf65899f466ebe07d29732979a845a718", "html_url": "https://github.com/rust-lang/rust/commit/cf1e078bf65899f466ebe07d29732979a845a718"}], "stats": {"total": 18, "additions": 11, "deletions": 7}, "files": [{"sha": "753a5a32e8a1bfff0249e479e05ffd7292f0b998", "filename": "src/doc/trpl/ffi.md", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/5665efd60e20a22f3a401c37070d774aea89b959/src%2Fdoc%2Ftrpl%2Fffi.md", "raw_url": "https://github.com/rust-lang/rust/raw/5665efd60e20a22f3a401c37070d774aea89b959/src%2Fdoc%2Ftrpl%2Fffi.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Ftrpl%2Fffi.md?ref=5665efd60e20a22f3a401c37070d774aea89b959", "patch": "@@ -340,7 +340,7 @@ libraries:\n Note that frameworks are only available on OSX targets.\n \n The different `kind` values are meant to differentiate how the native library\n-participates in linkage. From a linkage perspective, the rust compiler creates\n+participates in linkage. From a linkage perspective, the Rust compiler creates\n two flavors of artifacts: partial (rlib/staticlib) and final (dylib/binary).\n Native dynamic library and framework dependencies are propagated to the final\n artifact boundary, while static library dependencies are not propagated at\n@@ -350,9 +350,9 @@ artifact.\n A few examples of how this model can be used are:\n \n * A native build dependency. Sometimes some C/C++ glue is needed when writing\n-  some rust code, but distribution of the C/C++ code in a library format is just\n+  some Rust code, but distribution of the C/C++ code in a library format is just\n   a burden. In this case, the code will be archived into `libfoo.a` and then the\n-  rust crate would declare a dependency via `#[link(name = \"foo\", kind =\n+  Rust crate would declare a dependency via `#[link(name = \"foo\", kind =\n   \"static\")]`.\n \n   Regardless of the flavor of output for the crate, the native static library\n@@ -361,7 +361,7 @@ A few examples of how this model can be used are:\n \n * A normal dynamic dependency. Common system libraries (like `readline`) are\n   available on a large number of systems, and often a static copy of these\n-  libraries cannot be found. When this dependency is included in a rust crate,\n+  libraries cannot be found. When this dependency is included in a Rust crate,\n   partial targets (like rlibs) will not link to the library, but when the rlib\n   is included in a final target (like a binary), the native library will be\n   linked in."}, {"sha": "1b223365bd63ac72a15c072fc79da5a5ec3967d9", "filename": "src/doc/trpl/unsafe.md", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/5665efd60e20a22f3a401c37070d774aea89b959/src%2Fdoc%2Ftrpl%2Funsafe.md", "raw_url": "https://github.com/rust-lang/rust/raw/5665efd60e20a22f3a401c37070d774aea89b959/src%2Fdoc%2Ftrpl%2Funsafe.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Ftrpl%2Funsafe.md?ref=5665efd60e20a22f3a401c37070d774aea89b959", "patch": "@@ -100,10 +100,14 @@ that you normally can not do. Just three. Here they are:\n \n That\u2019s it. It\u2019s important that `unsafe` does not, for example, \u2018turn off the\n borrow checker\u2019. Adding `unsafe` to some random Rust code doesn\u2019t change its\n-semantics, it won\u2019t just start accepting anything.\n+semantics, it won\u2019t just start accepting anything. But it will let you write\n+things that _do_ break some of the rules.\n \n-But it will let you write things that _do_ break some of the rules. Let\u2019s go\n-over these three abilities in order.\n+You will also encounter the `unsafe` keyword when writing bindings to foreign\n+(non-Rust) interfaces. You're encouraged to write a safe, native Rust interface\n+around the methods provided by the library.\n+\n+Let\u2019s go over the basic three abilities listed, in order.\n \n ## Access or update a `static mut`\n "}]}