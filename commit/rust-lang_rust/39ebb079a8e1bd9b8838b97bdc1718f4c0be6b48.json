{"sha": "39ebb079a8e1bd9b8838b97bdc1718f4c0be6b48", "node_id": "MDY6Q29tbWl0NzI0NzEyOjM5ZWJiMDc5YThlMWJkOWI4ODM4Yjk3YmRjMTcxOGY0YzBiZTZiNDg=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-02-28T10:35:54Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-02-28T10:35:54Z"}, "message": "Auto merge of #1726 - hyd-dev:stub-d, r=RalfJung\n\ncargo-miri: create stub .d files\n\nThanks `@RalfJung` for the discovery: https://github.com/rust-lang/miri/issues/1724#issuecomment-787115693 :heart:\nFixes #1724.", "tree": {"sha": "59eb757b18712ebfb63798221a3d27cc183a2171", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/59eb757b18712ebfb63798221a3d27cc183a2171"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/39ebb079a8e1bd9b8838b97bdc1718f4c0be6b48", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/39ebb079a8e1bd9b8838b97bdc1718f4c0be6b48", "html_url": "https://github.com/rust-lang/rust/commit/39ebb079a8e1bd9b8838b97bdc1718f4c0be6b48", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/39ebb079a8e1bd9b8838b97bdc1718f4c0be6b48/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4ecb5a99e09f9d90e33bc6ce667c592c173175a3", "url": "https://api.github.com/repos/rust-lang/rust/commits/4ecb5a99e09f9d90e33bc6ce667c592c173175a3", "html_url": "https://github.com/rust-lang/rust/commit/4ecb5a99e09f9d90e33bc6ce667c592c173175a3"}, {"sha": "6d5ce21c92de3bb2bfb9976cf278e7ae11f69d6b", "url": "https://api.github.com/repos/rust-lang/rust/commits/6d5ce21c92de3bb2bfb9976cf278e7ae11f69d6b", "html_url": "https://github.com/rust-lang/rust/commit/6d5ce21c92de3bb2bfb9976cf278e7ae11f69d6b"}], "stats": {"total": 26, "additions": 19, "deletions": 7}, "files": [{"sha": "2cd0c0c972f550ffb7915aa6abbcd1439accecd9", "filename": "cargo-miri/bin.rs", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/39ebb079a8e1bd9b8838b97bdc1718f4c0be6b48/cargo-miri%2Fbin.rs", "raw_url": "https://github.com/rust-lang/rust/raw/39ebb079a8e1bd9b8838b97bdc1718f4c0be6b48/cargo-miri%2Fbin.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/cargo-miri%2Fbin.rs?ref=39ebb079a8e1bd9b8838b97bdc1718f4c0be6b48", "patch": "@@ -609,6 +609,15 @@ fn phase_cargo_rustc(mut args: env::Args) {\n     let print = get_arg_flag_value(\"--print\").is_some(); // whether this is cargo passing `--print` to get some infos\n \n     let store_json = |info: CrateRunInfo| {\n+        // Create a stub .d file to stop Cargo from \"rebuilding\" the crate:\n+        // https://github.com/rust-lang/miri/issues/1724#issuecomment-787115693\n+        // As we store a JSON file instead of building the crate here, an empty file is fine.\n+        let dep_info_name = out_filename(\"\", \".d\");\n+        if verbose {\n+            eprintln!(\"[cargo-miri rustc] writing stub dep-info to `{}`\", dep_info_name.display());\n+        }\n+        File::create(dep_info_name).expect(\"failed to create fake .d file\");\n+\n         let filename = out_filename(\"\", \"\");\n         if verbose {\n             eprintln!(\"[cargo-miri rustc] writing run info to `{}`\", filename.display());"}, {"sha": "81f589705dc332e7a17dd5969f8a095ad26806c4", "filename": "test-cargo-miri/run-test.py", "status": "modified", "additions": 10, "deletions": 7, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/39ebb079a8e1bd9b8838b97bdc1718f4c0be6b48/test-cargo-miri%2Frun-test.py", "raw_url": "https://github.com/rust-lang/rust/raw/39ebb079a8e1bd9b8838b97bdc1718f4c0be6b48/test-cargo-miri%2Frun-test.py", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/test-cargo-miri%2Frun-test.py?ref=39ebb079a8e1bd9b8838b97bdc1718f4c0be6b48", "patch": "@@ -50,12 +50,15 @@ def test(name, cmd, stdout_ref, stderr_ref, stdin=b'', env={}):\n     print(\"--- END stderr ---\")\n     fail(\"exit code was {}\".format(p.returncode))\n \n-def test_no_rebuild(name, cmd):\n+def test_no_rebuild(name, cmd, env={}):\n     print(\"Testing {}...\".format(name))\n+    p_env = os.environ.copy()\n+    p_env.update(env)\n     p = subprocess.Popen(\n         cmd,\n         stdout=subprocess.PIPE,\n         stderr=subprocess.PIPE,\n+        env=p_env,\n     )\n     (stdout, stderr) = p.communicate()\n     stdout = stdout.decode(\"UTF-8\")\n@@ -79,6 +82,12 @@ def test_cargo_miri_run():\n             'MIRITESTVAR': \"wrongval\", # make sure the build.rs value takes precedence\n         },\n     )\n+    # Special test: run it again *without* `-q` to make sure nothing is being rebuilt (Miri issue #1722)\n+    test_no_rebuild(\"`cargo miri run` (no rebuild)\",\n+        cargo_miri(\"run\", quiet=False) + [\"--\", \"\"],\n+        env={'MIRITESTVAR': \"wrongval\"}, # changing the env var causes a rebuild (re-runs build.rs),\n+                                         # so keep it set\n+    )\n     test(\"`cargo miri run` (with arguments and target)\",\n         cargo_miri(\"run\") + [\"--bin\", \"cargo-miri-test\", \"--\", \"hello world\", '\"hello world\"'],\n         \"run.args.stdout.ref\", \"run.args.stderr.ref\",\n@@ -88,12 +97,6 @@ def test_cargo_miri_run():\n         \"run.subcrate.stdout.ref\", \"run.subcrate.stderr.ref\",\n         env={'MIRIFLAGS': \"-Zmiri-disable-isolation\"},\n     )\n-    # Special test: run it again *without* `-q` to make sure nothing is being rebuilt (Miri issue #1722)\n-    # FIXME: move this test up to right after the first `test`\n-    # (currently that fails, only the 3rd and later runs are really clean... see Miri issue #1722)\n-    test_no_rebuild(\"`cargo miri run` (no rebuild)\",\n-        cargo_miri(\"run\", quiet=False) + [\"--\", \"\"],\n-    )\n \n def test_cargo_miri_test():\n     # rustdoc is not run on foreign targets"}]}