{"sha": "417378554c076d2c3b42156fc046fd390587af41", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQxNzM3ODU1NGMwNzZkMmMzYjQyMTU2ZmMwNDZmZDM5MDU4N2FmNDE=", "commit": {"author": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2013-12-21T04:04:17Z"}, "committer": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2013-12-26T23:54:29Z"}, "message": "librustc: De-`@mut` `lints` in the session", "tree": {"sha": "6769eccb0e14ecf0d40c37d096d3e53b8ac41e3d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6769eccb0e14ecf0d40c37d096d3e53b8ac41e3d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/417378554c076d2c3b42156fc046fd390587af41", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/417378554c076d2c3b42156fc046fd390587af41", "html_url": "https://github.com/rust-lang/rust/commit/417378554c076d2c3b42156fc046fd390587af41", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/417378554c076d2c3b42156fc046fd390587af41/comments", "author": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "43aee50798d78a2e33410fcac462ded792c4c7b7", "url": "https://api.github.com/repos/rust-lang/rust/commits/43aee50798d78a2e33410fcac462ded792c4c7b7", "html_url": "https://github.com/rust-lang/rust/commit/43aee50798d78a2e33410fcac462ded792c4c7b7"}], "stats": {"total": 18, "additions": 12, "deletions": 6}, "files": [{"sha": "4fa475e99b5688df7302e3da096a521ab79758c2", "filename": "src/librustc/driver/driver.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/417378554c076d2c3b42156fc046fd390587af41/src%2Flibrustc%2Fdriver%2Fdriver.rs", "raw_url": "https://github.com/rust-lang/rust/raw/417378554c076d2c3b42156fc046fd390587af41/src%2Flibrustc%2Fdriver%2Fdriver.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fdriver%2Fdriver.rs?ref=417378554c076d2c3b42156fc046fd390587af41", "patch": "@@ -26,6 +26,7 @@ use middle;\n use util::common::time;\n use util::ppaux;\n \n+use std::cell::RefCell;\n use std::hashmap::{HashMap,HashSet};\n use std::io;\n use std::io::fs;\n@@ -872,7 +873,7 @@ pub fn build_session_(sopts: @session::options,\n         filesearch: filesearch,\n         building_library: @mut false,\n         working_dir: os::getcwd(),\n-        lints: @mut HashMap::new(),\n+        lints: RefCell::new(HashMap::new()),\n         node_id: @mut 1,\n         outputs: @mut ~[],\n     }"}, {"sha": "69e0d2e3bf0e7b83afefafb8ee617a8274cb9c7e", "filename": "src/librustc/driver/session.rs", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/417378554c076d2c3b42156fc046fd390587af41/src%2Flibrustc%2Fdriver%2Fsession.rs", "raw_url": "https://github.com/rust-lang/rust/raw/417378554c076d2c3b42156fc046fd390587af41/src%2Flibrustc%2Fdriver%2Fsession.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fdriver%2Fsession.rs?ref=417378554c076d2c3b42156fc046fd390587af41", "patch": "@@ -28,6 +28,7 @@ use syntax::abi;\n use syntax::parse::token;\n use syntax;\n \n+use std::cell::RefCell;\n use std::hashmap::{HashMap,HashSet};\n \n pub struct config {\n@@ -211,7 +212,8 @@ pub struct Session_ {\n     filesearch: @filesearch::FileSearch,\n     building_library: @mut bool,\n     working_dir: Path,\n-    lints: @mut HashMap<ast::NodeId, ~[(lint::lint, codemap::Span, ~str)]>,\n+    lints: RefCell<HashMap<ast::NodeId,\n+                           ~[(lint::lint, codemap::Span, ~str)]>>,\n     node_id: @mut ast::NodeId,\n     outputs: @mut ~[OutputStyle],\n }\n@@ -269,11 +271,12 @@ impl Session_ {\n                     id: ast::NodeId,\n                     sp: Span,\n                     msg: ~str) {\n-        match self.lints.find_mut(&id) {\n+        let mut lints = self.lints.borrow_mut();\n+        match lints.get().find_mut(&id) {\n             Some(arr) => { arr.push((lint, sp, msg)); return; }\n             None => {}\n         }\n-        self.lints.insert(id, ~[(lint, sp, msg)]);\n+        lints.get().insert(id, ~[(lint, sp, msg)]);\n     }\n     pub fn next_node_id(&self) -> ast::NodeId {\n         self.reserve_node_ids(1)"}, {"sha": "a5eec483367e3be67faf05e3ad21593e8e12119c", "filename": "src/librustc/middle/lint.rs", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/417378554c076d2c3b42156fc046fd390587af41/src%2Flibrustc%2Fmiddle%2Flint.rs", "raw_url": "https://github.com/rust-lang/rust/raw/417378554c076d2c3b42156fc046fd390587af41/src%2Flibrustc%2Fmiddle%2Flint.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Flint.rs?ref=417378554c076d2c3b42156fc046fd390587af41", "patch": "@@ -1425,7 +1425,8 @@ impl<'a> Visitor<()> for Context<'a> {\n \n impl<'a> IdVisitingOperation for Context<'a> {\n     fn visit_id(&self, id: ast::NodeId) {\n-        match self.tcx.sess.lints.pop(&id) {\n+        let mut lints = self.tcx.sess.lints.borrow_mut();\n+        match lints.get().pop(&id) {\n             None => {}\n             Some(l) => {\n                 for (lint, span, msg) in l.move_iter() {\n@@ -1477,7 +1478,8 @@ pub fn check_crate(tcx: ty::ctxt,\n \n     // If we missed any lints added to the session, then there's a bug somewhere\n     // in the iteration code.\n-    for (id, v) in tcx.sess.lints.iter() {\n+    let lints = tcx.sess.lints.borrow();\n+    for (id, v) in lints.get().iter() {\n         for &(lint, span, ref msg) in v.iter() {\n             tcx.sess.span_bug(span, format!(\"unprocessed lint {:?} at {}: {}\",\n                                             lint,"}]}