{"sha": "02d70f36042a6c7142bacda8156b2bf8459166cb", "node_id": "MDY6Q29tbWl0NzI0NzEyOjAyZDcwZjM2MDQyYTZjNzE0MmJhY2RhODE1NmIyYmY4NDU5MTY2Y2I=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-07-26T11:52:55Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-07-26T11:52:55Z"}, "message": "Auto merge of #7477 - F3real:needless_continue, r=flip1995\n\nEnhance needless continue to detect loop {continue;}\n\nFixes #7417\n\nchangelog: Report [`needless_continue`] in `loop { continue; }` case", "tree": {"sha": "1e4868d341af0148be2af2f7f74f5334ca09e181", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1e4868d341af0148be2af2f7f74f5334ca09e181"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/02d70f36042a6c7142bacda8156b2bf8459166cb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/02d70f36042a6c7142bacda8156b2bf8459166cb", "html_url": "https://github.com/rust-lang/rust/commit/02d70f36042a6c7142bacda8156b2bf8459166cb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/02d70f36042a6c7142bacda8156b2bf8459166cb/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6d9036bc5fdcbf4aef0acfa8f1bffca29b7a5343", "url": "https://api.github.com/repos/rust-lang/rust/commits/6d9036bc5fdcbf4aef0acfa8f1bffca29b7a5343", "html_url": "https://github.com/rust-lang/rust/commit/6d9036bc5fdcbf4aef0acfa8f1bffca29b7a5343"}, {"sha": "045dbb52d5bc3d97d30234c69a9c556f7d779732", "url": "https://api.github.com/repos/rust-lang/rust/commits/045dbb52d5bc3d97d30234c69a9c556f7d779732", "html_url": "https://github.com/rust-lang/rust/commit/045dbb52d5bc3d97d30234c69a9c556f7d779732"}], "stats": {"total": 86, "additions": 83, "deletions": 3}, "files": [{"sha": "1d19413e0d0137955217577988dfb609d80ed45b", "filename": "clippy_lints/src/needless_continue.rs", "status": "modified", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/02d70f36042a6c7142bacda8156b2bf8459166cb/clippy_lints%2Fsrc%2Fneedless_continue.rs", "raw_url": "https://github.com/rust-lang/rust/raw/02d70f36042a6c7142bacda8156b2bf8459166cb/clippy_lints%2Fsrc%2Fneedless_continue.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fneedless_continue.rs?ref=02d70f36042a6c7142bacda8156b2bf8459166cb", "patch": "@@ -273,6 +273,8 @@ struct LintData<'a> {\n     block_stmts: &'a [ast::Stmt],\n }\n \n+const MSG_REDUNDANT_CONTINUE_EXPRESSION: &str = \"this `continue` expression is redundant\";\n+\n const MSG_REDUNDANT_ELSE_BLOCK: &str = \"this `else` block is redundant\";\n \n const MSG_ELSE_BLOCK_NOT_NEEDED: &str = \"there is no need for an explicit `else` block for this `if` \\\n@@ -283,6 +285,8 @@ const DROP_ELSE_BLOCK_AND_MERGE_MSG: &str = \"consider dropping the `else` clause\n \n const DROP_ELSE_BLOCK_MSG: &str = \"consider dropping the `else` clause\";\n \n+const DROP_CONTINUE_EXPRESSION_MSG: &str = \"consider dropping the `continue` expression\";\n+\n fn emit_warning<'a>(cx: &EarlyContext<'_>, data: &'a LintData<'_>, header: &str, typ: LintType) {\n     // snip    is the whole *help* message that appears after the warning.\n     // message is the warning message.\n@@ -364,6 +368,22 @@ fn suggestion_snippet_for_continue_inside_else<'a>(cx: &EarlyContext<'_>, data:\n }\n \n fn check_and_warn<'a>(cx: &EarlyContext<'_>, expr: &'a ast::Expr) {\n+    if_chain! {\n+        if let ast::ExprKind::Loop(loop_block, ..) = &expr.kind;\n+        if let Some(last_stmt) = loop_block.stmts.last();\n+        if let ast::StmtKind::Expr(inner_expr) | ast::StmtKind::Semi(inner_expr) = &last_stmt.kind;\n+        if let ast::ExprKind::Continue(_) = inner_expr.kind;\n+        then {\n+            span_lint_and_help(\n+                cx,\n+                NEEDLESS_CONTINUE,\n+                last_stmt.span,\n+                MSG_REDUNDANT_CONTINUE_EXPRESSION,\n+                None,\n+                DROP_CONTINUE_EXPRESSION_MSG,\n+            );\n+        }\n+    }\n     with_loop_block(expr, |loop_block, label| {\n         for (i, stmt) in loop_block.stmts.iter().enumerate() {\n             with_if_expr(stmt, |if_expr, cond, then_block, else_expr| {"}, {"sha": "83ee27f4887a1822d7aa6ae1eb1deca3fc29edba", "filename": "tests/ui/needless_continue.rs", "status": "modified", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/02d70f36042a6c7142bacda8156b2bf8459166cb/tests%2Fui%2Fneedless_continue.rs", "raw_url": "https://github.com/rust-lang/rust/raw/02d70f36042a6c7142bacda8156b2bf8459166cb/tests%2Fui%2Fneedless_continue.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fneedless_continue.rs?ref=02d70f36042a6c7142bacda8156b2bf8459166cb", "patch": "@@ -51,6 +51,34 @@ fn main() {\n     }\n }\n \n+fn simple_loop() {\n+    loop {\n+        continue; // should lint here\n+    }\n+}\n+\n+fn simple_loop2() {\n+    loop {\n+        println!(\"bleh\");\n+        continue; // should lint here\n+    }\n+}\n+\n+#[rustfmt::skip]\n+fn simple_loop3() {\n+    loop {\n+        continue // should lint here\n+    }\n+}\n+\n+#[rustfmt::skip]\n+fn simple_loop4() {\n+    loop {\n+        println!(\"bleh\");\n+        continue // should lint here\n+    }\n+}\n+\n mod issue_2329 {\n     fn condition() -> bool {\n         unimplemented!()"}, {"sha": "22b86f25e8f0e44ced23329d1cc378cc31d27e89", "filename": "tests/ui/needless_continue.stderr", "status": "modified", "additions": 35, "deletions": 3, "changes": 38, "blob_url": "https://github.com/rust-lang/rust/blob/02d70f36042a6c7142bacda8156b2bf8459166cb/tests%2Fui%2Fneedless_continue.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/02d70f36042a6c7142bacda8156b2bf8459166cb/tests%2Fui%2Fneedless_continue.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fneedless_continue.stderr?ref=02d70f36042a6c7142bacda8156b2bf8459166cb", "patch": "@@ -54,8 +54,40 @@ LL | |         }\n                        println!(\"Jabber\");\n                    }\n \n+error: this `continue` expression is redundant\n+  --> $DIR/needless_continue.rs:56:9\n+   |\n+LL |         continue; // should lint here\n+   |         ^^^^^^^^^\n+   |\n+   = help: consider dropping the `continue` expression\n+\n+error: this `continue` expression is redundant\n+  --> $DIR/needless_continue.rs:63:9\n+   |\n+LL |         continue; // should lint here\n+   |         ^^^^^^^^^\n+   |\n+   = help: consider dropping the `continue` expression\n+\n+error: this `continue` expression is redundant\n+  --> $DIR/needless_continue.rs:70:9\n+   |\n+LL |         continue // should lint here\n+   |         ^^^^^^^^\n+   |\n+   = help: consider dropping the `continue` expression\n+\n+error: this `continue` expression is redundant\n+  --> $DIR/needless_continue.rs:78:9\n+   |\n+LL |         continue // should lint here\n+   |         ^^^^^^^^\n+   |\n+   = help: consider dropping the `continue` expression\n+\n error: this `else` block is redundant\n-  --> $DIR/needless_continue.rs:100:24\n+  --> $DIR/needless_continue.rs:128:24\n    |\n LL |                   } else {\n    |  ________________________^\n@@ -78,7 +110,7 @@ LL | |                 }\n                            }\n \n error: there is no need for an explicit `else` block for this `if` expression\n-  --> $DIR/needless_continue.rs:106:17\n+  --> $DIR/needless_continue.rs:134:17\n    |\n LL | /                 if condition() {\n LL | |                     continue; // should lint here\n@@ -95,5 +127,5 @@ LL | |                 }\n                                println!(\"bar-5\");\n                            }\n \n-error: aborting due to 4 previous errors\n+error: aborting due to 8 previous errors\n "}]}