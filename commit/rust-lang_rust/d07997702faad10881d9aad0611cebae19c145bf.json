{"sha": "d07997702faad10881d9aad0611cebae19c145bf", "node_id": "C_kwDOAAsO6NoAKGQwNzk5NzcwMmZhYWQxMDg4MWQ5YWFkMDYxMWNlYmFlMTljMTQ1YmY", "commit": {"author": {"name": "Noah Lev", "email": "camelidcamel@gmail.com", "date": "2021-11-07T17:20:35Z"}, "committer": {"name": "Noah Lev", "email": "camelidcamel@gmail.com", "date": "2021-11-07T17:20:35Z"}, "message": "Remove unused Clean impl for `Rc<T>`", "tree": {"sha": "19bf836ac5b5042e67dfde24f3ece073cb803a64", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/19bf836ac5b5042e67dfde24f3ece073cb803a64"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d07997702faad10881d9aad0611cebae19c145bf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d07997702faad10881d9aad0611cebae19c145bf", "html_url": "https://github.com/rust-lang/rust/commit/d07997702faad10881d9aad0611cebae19c145bf", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d07997702faad10881d9aad0611cebae19c145bf/comments", "author": {"login": "camelid", "id": 37223377, "node_id": "MDQ6VXNlcjM3MjIzMzc3", "avatar_url": "https://avatars.githubusercontent.com/u/37223377?v=4", "gravatar_id": "", "url": "https://api.github.com/users/camelid", "html_url": "https://github.com/camelid", "followers_url": "https://api.github.com/users/camelid/followers", "following_url": "https://api.github.com/users/camelid/following{/other_user}", "gists_url": "https://api.github.com/users/camelid/gists{/gist_id}", "starred_url": "https://api.github.com/users/camelid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/camelid/subscriptions", "organizations_url": "https://api.github.com/users/camelid/orgs", "repos_url": "https://api.github.com/users/camelid/repos", "events_url": "https://api.github.com/users/camelid/events{/privacy}", "received_events_url": "https://api.github.com/users/camelid/received_events", "type": "User", "site_admin": false}, "committer": {"login": "camelid", "id": 37223377, "node_id": "MDQ6VXNlcjM3MjIzMzc3", "avatar_url": "https://avatars.githubusercontent.com/u/37223377?v=4", "gravatar_id": "", "url": "https://api.github.com/users/camelid", "html_url": "https://github.com/camelid", "followers_url": "https://api.github.com/users/camelid/followers", "following_url": "https://api.github.com/users/camelid/following{/other_user}", "gists_url": "https://api.github.com/users/camelid/gists{/gist_id}", "starred_url": "https://api.github.com/users/camelid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/camelid/subscriptions", "organizations_url": "https://api.github.com/users/camelid/orgs", "repos_url": "https://api.github.com/users/camelid/repos", "events_url": "https://api.github.com/users/camelid/events{/privacy}", "received_events_url": "https://api.github.com/users/camelid/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "72b0a572448a0bea78bb560a2ec890463cb4532b", "url": "https://api.github.com/repos/rust-lang/rust/commits/72b0a572448a0bea78bb560a2ec890463cb4532b", "html_url": "https://github.com/rust-lang/rust/commit/72b0a572448a0bea78bb560a2ec890463cb4532b"}], "stats": {"total": 7, "additions": 0, "deletions": 7}, "files": [{"sha": "135960b1c941450a753b67eac65e7a6b5e28069d", "filename": "src/librustdoc/clean/mod.rs", "status": "modified", "additions": 0, "deletions": 7, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/d07997702faad10881d9aad0611cebae19c145bf/src%2Flibrustdoc%2Fclean%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d07997702faad10881d9aad0611cebae19c145bf/src%2Flibrustdoc%2Fclean%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fclean%2Fmod.rs?ref=d07997702faad10881d9aad0611cebae19c145bf", "patch": "@@ -33,7 +33,6 @@ use std::assert_matches::assert_matches;\n use std::collections::hash_map::Entry;\n use std::default::Default;\n use std::hash::Hash;\n-use std::rc::Rc;\n use std::{mem, vec};\n \n use crate::core::{self, DocContext, ImplTraitParam};\n@@ -61,12 +60,6 @@ impl<T: Clean<U>, U> Clean<U> for &T {\n     }\n }\n \n-impl<T: Clean<U>, U> Clean<U> for Rc<T> {\n-    fn clean(&self, cx: &mut DocContext<'_>) -> U {\n-        (**self).clean(cx)\n-    }\n-}\n-\n impl Clean<Item> for doctree::Module<'_> {\n     fn clean(&self, cx: &mut DocContext<'_>) -> Item {\n         let mut items: Vec<Item> = vec![];"}]}