{"sha": "192ccfb4efc0a38378f4564b26e6033dec432bdb", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE5MmNjZmI0ZWZjMGEzODM3OGY0NTY0YjI2ZTYwMzNkZWM0MzJiZGI=", "commit": {"author": {"name": "Eduardo Broto", "email": "ebroto@tutanota.com", "date": "2020-10-17T17:55:03Z"}, "committer": {"name": "Eduardo Broto", "email": "ebroto@tutanota.com", "date": "2020-11-27T16:41:50Z"}, "message": "Update README.md", "tree": {"sha": "8d6be2d9a7f1de033ea85c559754515ed67c850e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8d6be2d9a7f1de033ea85c559754515ed67c850e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/192ccfb4efc0a38378f4564b26e6033dec432bdb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/192ccfb4efc0a38378f4564b26e6033dec432bdb", "html_url": "https://github.com/rust-lang/rust/commit/192ccfb4efc0a38378f4564b26e6033dec432bdb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/192ccfb4efc0a38378f4564b26e6033dec432bdb/comments", "author": {"login": "ebroto", "id": 816908, "node_id": "MDQ6VXNlcjgxNjkwOA==", "avatar_url": "https://avatars.githubusercontent.com/u/816908?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ebroto", "html_url": "https://github.com/ebroto", "followers_url": "https://api.github.com/users/ebroto/followers", "following_url": "https://api.github.com/users/ebroto/following{/other_user}", "gists_url": "https://api.github.com/users/ebroto/gists{/gist_id}", "starred_url": "https://api.github.com/users/ebroto/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ebroto/subscriptions", "organizations_url": "https://api.github.com/users/ebroto/orgs", "repos_url": "https://api.github.com/users/ebroto/repos", "events_url": "https://api.github.com/users/ebroto/events{/privacy}", "received_events_url": "https://api.github.com/users/ebroto/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ebroto", "id": 816908, "node_id": "MDQ6VXNlcjgxNjkwOA==", "avatar_url": "https://avatars.githubusercontent.com/u/816908?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ebroto", "html_url": "https://github.com/ebroto", "followers_url": "https://api.github.com/users/ebroto/followers", "following_url": "https://api.github.com/users/ebroto/following{/other_user}", "gists_url": "https://api.github.com/users/ebroto/gists{/gist_id}", "starred_url": "https://api.github.com/users/ebroto/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ebroto/subscriptions", "organizations_url": "https://api.github.com/users/ebroto/orgs", "repos_url": "https://api.github.com/users/ebroto/repos", "events_url": "https://api.github.com/users/ebroto/events{/privacy}", "received_events_url": "https://api.github.com/users/ebroto/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0387981f2b5e41c982ec4a1b102f0c54997361ff", "url": "https://api.github.com/repos/rust-lang/rust/commits/0387981f2b5e41c982ec4a1b102f0c54997361ff", "html_url": "https://github.com/rust-lang/rust/commit/0387981f2b5e41c982ec4a1b102f0c54997361ff"}], "stats": {"total": 16, "additions": 16, "deletions": 0}, "files": [{"sha": "aaa55e11c7db1b1ee9086584b3b9c581aabad966", "filename": "README.md", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/192ccfb4efc0a38378f4564b26e6033dec432bdb/README.md", "raw_url": "https://github.com/rust-lang/rust/raw/192ccfb4efc0a38378f4564b26e6033dec432bdb/README.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/README.md?ref=192ccfb4efc0a38378f4564b26e6033dec432bdb", "patch": "@@ -82,6 +82,22 @@ Note that this is still experimental and only supported on the nightly channel:\n cargo clippy --fix -Z unstable-options\n ```\n \n+#### Workspaces\n+\n+All the usual workspace options should work with Clippy. For example the following command\n+will run Clippy on the `example` crate:\n+\n+```terminal\n+cargo clippy -p example\n+```\n+\n+As with `cargo check`, this includes dependencies that are members of the workspace, like path dependencies.\n+If you want to run Clippy **only** on the given crate, use the `--no-deps` option like this:\n+\n+```terminal\n+cargo clippy -p example -- --no-deps \n+```\n+\n ### Running Clippy from the command line without installing it\n \n To have cargo compile your crate with Clippy without Clippy installation"}]}