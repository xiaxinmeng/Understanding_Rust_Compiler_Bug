{"sha": "f13d57f8d3ae09e688539d3bb1ec74c6a3a802dc", "node_id": "MDY6Q29tbWl0NzI0NzEyOmYxM2Q1N2Y4ZDNhZTA5ZTY4ODUzOWQzYmIxZWM3NGM2YTNhODAyZGM=", "commit": {"author": {"name": "Huon Wilson", "email": "dbau.pp+github@gmail.com", "date": "2013-12-19T14:17:04Z"}, "committer": {"name": "Huon Wilson", "email": "dbau.pp+github@gmail.com", "date": "2013-12-19T14:26:03Z"}, "message": "extra: silence warnings during testing.", "tree": {"sha": "aa9de7ee48dc0bf0dd3686935dc1d87ce8c9b9f8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/aa9de7ee48dc0bf0dd3686935dc1d87ce8c9b9f8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f13d57f8d3ae09e688539d3bb1ec74c6a3a802dc", "comment_count": 13, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f13d57f8d3ae09e688539d3bb1ec74c6a3a802dc", "html_url": "https://github.com/rust-lang/rust/commit/f13d57f8d3ae09e688539d3bb1ec74c6a3a802dc", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f13d57f8d3ae09e688539d3bb1ec74c6a3a802dc/comments", "author": {"login": "huonw", "id": 1203825, "node_id": "MDQ6VXNlcjEyMDM4MjU=", "avatar_url": "https://avatars.githubusercontent.com/u/1203825?v=4", "gravatar_id": "", "url": "https://api.github.com/users/huonw", "html_url": "https://github.com/huonw", "followers_url": "https://api.github.com/users/huonw/followers", "following_url": "https://api.github.com/users/huonw/following{/other_user}", "gists_url": "https://api.github.com/users/huonw/gists{/gist_id}", "starred_url": "https://api.github.com/users/huonw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/huonw/subscriptions", "organizations_url": "https://api.github.com/users/huonw/orgs", "repos_url": "https://api.github.com/users/huonw/repos", "events_url": "https://api.github.com/users/huonw/events{/privacy}", "received_events_url": "https://api.github.com/users/huonw/received_events", "type": "User", "site_admin": false}, "committer": {"login": "huonw", "id": 1203825, "node_id": "MDQ6VXNlcjEyMDM4MjU=", "avatar_url": "https://avatars.githubusercontent.com/u/1203825?v=4", "gravatar_id": "", "url": "https://api.github.com/users/huonw", "html_url": "https://github.com/huonw", "followers_url": "https://api.github.com/users/huonw/followers", "following_url": "https://api.github.com/users/huonw/following{/other_user}", "gists_url": "https://api.github.com/users/huonw/gists{/gist_id}", "starred_url": "https://api.github.com/users/huonw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/huonw/subscriptions", "organizations_url": "https://api.github.com/users/huonw/orgs", "repos_url": "https://api.github.com/users/huonw/repos", "events_url": "https://api.github.com/users/huonw/events{/privacy}", "received_events_url": "https://api.github.com/users/huonw/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c00104f36a1dd6aad318d410ffa41b9ec531880a", "url": "https://api.github.com/repos/rust-lang/rust/commits/c00104f36a1dd6aad318d410ffa41b9ec531880a", "html_url": "https://github.com/rust-lang/rust/commit/c00104f36a1dd6aad318d410ffa41b9ec531880a"}], "stats": {"total": 17, "additions": 6, "deletions": 11}, "files": [{"sha": "c3b17fe996405310b4274ea077bca0ce268fcbd5", "filename": "src/libextra/comm.rs", "status": "modified", "additions": 6, "deletions": 11, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/f13d57f8d3ae09e688539d3bb1ec74c6a3a802dc/src%2Flibextra%2Fcomm.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f13d57f8d3ae09e688539d3bb1ec74c6a3a802dc/src%2Flibextra%2Fcomm.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibextra%2Fcomm.rs?ref=f13d57f8d3ae09e688539d3bb1ec74c6a3a802dc", "patch": "@@ -101,7 +101,7 @@ mod test {\n \n     #[test]\n     pub fn DuplexStream1() {\n-        let (mut left, mut right) = DuplexStream::new();\n+        let (left, right) = DuplexStream::new();\n \n         left.send(~\"abc\");\n         right.send(123);\n@@ -112,10 +112,9 @@ mod test {\n \n     #[test]\n     pub fn basic_rendezvous_test() {\n-        let (mut port, chan) = rendezvous();\n+        let (port, chan) = rendezvous();\n \n         do spawn {\n-            let mut chan = chan;\n             chan.send(\"abc\");\n         }\n \n@@ -126,9 +125,8 @@ mod test {\n     fn recv_a_lot() {\n         // Rendezvous streams should be able to handle any number of messages being sent\n         do run_in_uv_task {\n-            let (mut port, chan) = rendezvous();\n+            let (port, chan) = rendezvous();\n             do spawn {\n-                let mut chan = chan;\n                 1000000.times(|| { chan.send(()) })\n             }\n             1000000.times(|| { port.recv() })\n@@ -137,9 +135,8 @@ mod test {\n \n     #[test]\n     fn send_and_fail_and_try_recv() {\n-        let (mut port, chan) = rendezvous();\n+        let (port, chan) = rendezvous();\n         do spawn {\n-            let mut chan = chan;\n             chan.duplex_stream.send(()); // Can't access this field outside this module\n             fail!()\n         }\n@@ -148,9 +145,8 @@ mod test {\n \n     #[test]\n     fn try_send_and_recv_then_fail_before_ack() {\n-        let (port, mut chan) = rendezvous();\n+        let (port, chan) = rendezvous();\n         do spawn {\n-            let mut port = port;\n             port.duplex_stream.recv();\n             fail!()\n         }\n@@ -160,9 +156,8 @@ mod test {\n     #[test]\n     #[should_fail]\n     fn send_and_recv_then_fail_before_ack() {\n-        let (port, mut chan) = rendezvous();\n+        let (port, chan) = rendezvous();\n         do spawn {\n-            let mut port = port;\n             port.duplex_stream.recv();\n             fail!()\n         }"}]}