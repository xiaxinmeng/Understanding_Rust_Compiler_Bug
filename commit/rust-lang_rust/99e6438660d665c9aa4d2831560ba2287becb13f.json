{"sha": "99e6438660d665c9aa4d2831560ba2287becb13f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjk5ZTY0Mzg2NjBkNjY1YzlhYTRkMjgzMTU2MGJhMjI4N2JlY2IxM2Y=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-04-02T07:34:34Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-04-02T07:35:34Z"}, "message": "allow empty doc comments", "tree": {"sha": "1fc9d6dd5c916bba2735358c20b9a0de10977357", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1fc9d6dd5c916bba2735358c20b9a0de10977357"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/99e6438660d665c9aa4d2831560ba2287becb13f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/99e6438660d665c9aa4d2831560ba2287becb13f", "html_url": "https://github.com/rust-lang/rust/commit/99e6438660d665c9aa4d2831560ba2287becb13f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/99e6438660d665c9aa4d2831560ba2287becb13f/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ae282d8da63a82077361bc142b2b9a272a2eac64", "url": "https://api.github.com/repos/rust-lang/rust/commits/ae282d8da63a82077361bc142b2b9a272a2eac64", "html_url": "https://github.com/rust-lang/rust/commit/ae282d8da63a82077361bc142b2b9a272a2eac64"}], "stats": {"total": 10, "additions": 6, "deletions": 4}, "files": [{"sha": "43d1509fab3a0250e246c6ae71836a925ed9209a", "filename": "crates/ra_syntax/src/ast/traits.rs", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/99e6438660d665c9aa4d2831560ba2287becb13f/crates%2Fra_syntax%2Fsrc%2Fast%2Ftraits.rs", "raw_url": "https://github.com/rust-lang/rust/raw/99e6438660d665c9aa4d2831560ba2287becb13f/crates%2Fra_syntax%2Fsrc%2Fast%2Ftraits.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Fsrc%2Fast%2Ftraits.rs?ref=99e6438660d665c9aa4d2831560ba2287becb13f", "patch": "@@ -107,11 +107,13 @@ pub trait DocCommentsOwner: AstNode {\n     /// Returns the textual content of a doc comment block as a single string.\n     /// That is, strips leading `///` (+ optional 1 character of whitespace)\n     /// and joins lines.\n-    fn doc_comment_text(&self) -> Option<std::string::String> {\n+    fn doc_comment_text(&self) -> Option<String> {\n+        let mut has_comments = false;\n         let docs = self\n             .doc_comments()\n             .filter(|comment| comment.is_doc_comment())\n             .map(|comment| {\n+                has_comments = true;\n                 let prefix_len = comment.prefix().len();\n \n                 let line = comment.text().as_str();\n@@ -128,10 +130,10 @@ pub trait DocCommentsOwner: AstNode {\n             })\n             .join(\"\\n\");\n \n-        if docs.is_empty() {\n-            None\n-        } else {\n+        if has_comments {\n             Some(docs)\n+        } else {\n+            None\n         }\n     }\n }"}]}