{"sha": "6171c35d6e084e1fe2cb21326008bb001c1b4002", "node_id": "MDY6Q29tbWl0NzI0NzEyOjYxNzFjMzVkNmUwODRlMWZlMmNiMjEzMjYwMDhiYjAwMWMxYjQwMDI=", "commit": {"author": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2015-02-15T16:45:10Z"}, "committer": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2015-02-15T16:45:10Z"}, "message": "Change arbirary types from `usize` to `u32`.", "tree": {"sha": "3438c732a9b474be3f34e569196ae9130fda12c9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3438c732a9b474be3f34e569196ae9130fda12c9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6171c35d6e084e1fe2cb21326008bb001c1b4002", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6171c35d6e084e1fe2cb21326008bb001c1b4002", "html_url": "https://github.com/rust-lang/rust/commit/6171c35d6e084e1fe2cb21326008bb001c1b4002", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6171c35d6e084e1fe2cb21326008bb001c1b4002/comments", "author": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8eb38590c98327481a4b26bb445815fdb84ca5c2", "url": "https://api.github.com/repos/rust-lang/rust/commits/8eb38590c98327481a4b26bb445815fdb84ca5c2", "html_url": "https://github.com/rust-lang/rust/commit/8eb38590c98327481a4b26bb445815fdb84ca5c2"}], "stats": {"total": 26, "additions": 13, "deletions": 13}, "files": [{"sha": "bc7f8fc3ee186b843dfe8e82bfe3122e7a538903", "filename": "src/libcore/option.rs", "status": "modified", "additions": 13, "deletions": 13, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/6171c35d6e084e1fe2cb21326008bb001c1b4002/src%2Flibcore%2Foption.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6171c35d6e084e1fe2cb21326008bb001c1b4002/src%2Flibcore%2Foption.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Foption.rs?ref=6171c35d6e084e1fe2cb21326008bb001c1b4002", "patch": "@@ -108,7 +108,7 @@\n //! Initialize a result to `None` before a loop:\n //!\n //! ```\n-//! enum Kingdom { Plant(usize, &'static str), Animal(usize, &'static str) }\n+//! enum Kingdom { Plant(u32, &'static str), Animal(u32, &'static str) }\n //!\n //! // A list of data to search through.\n //! let all_the_big_things = [\n@@ -188,10 +188,10 @@ impl<T> Option<T> {\n     /// # Example\n     ///\n     /// ```\n-    /// let x: Option<usize> = Some(2);\n+    /// let x: Option<u32> = Some(2);\n     /// assert_eq!(x.is_some(), true);\n     ///\n-    /// let x: Option<usize> = None;\n+    /// let x: Option<u32> = None;\n     /// assert_eq!(x.is_some(), false);\n     /// ```\n     #[inline]\n@@ -208,10 +208,10 @@ impl<T> Option<T> {\n     /// # Example\n     ///\n     /// ```\n-    /// let x: Option<usize> = Some(2);\n+    /// let x: Option<u32> = Some(2);\n     /// assert_eq!(x.is_none(), false);\n     ///\n-    /// let x: Option<usize> = None;\n+    /// let x: Option<u32> = None;\n     /// assert_eq!(x.is_none(), true);\n     /// ```\n     #[inline]\n@@ -518,7 +518,7 @@ impl<T> Option<T> {\n     /// let x = Some(4);\n     /// assert_eq!(x.iter().next(), Some(&4));\n     ///\n-    /// let x: Option<usize> = None;\n+    /// let x: Option<u32> = None;\n     /// assert_eq!(x.iter().next(), None);\n     /// ```\n     #[inline]\n@@ -539,7 +539,7 @@ impl<T> Option<T> {\n     /// }\n     /// assert_eq!(x, Some(42));\n     ///\n-    /// let mut x: Option<usize> = None;\n+    /// let mut x: Option<u32> = None;\n     /// assert_eq!(x.iter_mut().next(), None);\n     /// ```\n     #[inline]\n@@ -581,15 +581,15 @@ impl<T> Option<T> {\n     /// let y: Option<&str> = None;\n     /// assert_eq!(x.and(y), None);\n     ///\n-    /// let x: Option<usize> = None;\n+    /// let x: Option<u32> = None;\n     /// let y = Some(\"foo\");\n     /// assert_eq!(x.and(y), None);\n     ///\n     /// let x = Some(2);\n     /// let y = Some(\"foo\");\n     /// assert_eq!(x.and(y), Some(\"foo\"));\n     ///\n-    /// let x: Option<usize> = None;\n+    /// let x: Option<u32> = None;\n     /// let y: Option<&str> = None;\n     /// assert_eq!(x.and(y), None);\n     /// ```\n@@ -608,8 +608,8 @@ impl<T> Option<T> {\n     /// # Example\n     ///\n     /// ```\n-    /// fn sq(x: usize) -> Option<usize> { Some(x * x) }\n-    /// fn nope(_: usize) -> Option<usize> { None }\n+    /// fn sq(x: u32) -> Option<u32> { Some(x * x) }\n+    /// fn nope(_: u32) -> Option<u32> { None }\n     ///\n     /// assert_eq!(Some(2).and_then(sq).and_then(sq), Some(16));\n     /// assert_eq!(Some(2).and_then(sq).and_then(nope), None);\n@@ -642,7 +642,7 @@ impl<T> Option<T> {\n     /// let y = Some(100);\n     /// assert_eq!(x.or(y), Some(2));\n     ///\n-    /// let x: Option<usize> = None;\n+    /// let x: Option<u32> = None;\n     /// let y = None;\n     /// assert_eq!(x.or(y), None);\n     /// ```\n@@ -690,7 +690,7 @@ impl<T> Option<T> {\n     /// x.take();\n     /// assert_eq!(x, None);\n     ///\n-    /// let mut x: Option<usize> = None;\n+    /// let mut x: Option<u32> = None;\n     /// x.take();\n     /// assert_eq!(x, None);\n     /// ```"}]}