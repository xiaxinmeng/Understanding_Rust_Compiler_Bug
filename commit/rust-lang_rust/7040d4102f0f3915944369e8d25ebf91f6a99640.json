{"sha": "7040d4102f0f3915944369e8d25ebf91f6a99640", "node_id": "C_kwDOAAsO6NoAKDcwNDBkNDEwMmYwZjM5MTU5NDQzNjllOGQyNWViZjkxZjZhOTk2NDA", "commit": {"author": {"name": "Pietro Albini", "email": "pietro.albini@ferrous-systems.com", "date": "2023-05-26T13:21:21Z"}, "committer": {"name": "Pietro Albini", "email": "pietro.albini@ferrous-systems.com", "date": "2023-05-26T13:21:21Z"}, "message": "rename metadata_version to format_version\n\nThe new name is more accurate.", "tree": {"sha": "4d76ec012e6a60e3871b4a4f943693f9ba9f6b0f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4d76ec012e6a60e3871b4a4f943693f9ba9f6b0f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7040d4102f0f3915944369e8d25ebf91f6a99640", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEMycKYjxLY0eb13b7zXazX3c0dp4FAmRwsl0ACgkQzXazX3c0\ndp4RCBAAkiQFQoQQLqQry1SQx6lMZCCkKh3qDCxEGw38xjLFa/UIOUDCogaVI9nr\nJxntNg9BGcyc3cW1LD/5bm69YVtajHVsrFuBr9bi1t0dqcDF5suRJcFRi+/br2gd\n2OkAFdB65FAqQJrwQxD48Zf5YDOR144zRdz7ieIQMbmlnJOx1jOQRxys6QLihmo/\nyVNxKYH6c7CAard28Y/xM8WwrEcirEY6R3e3xGXuNGJKNLkanVybcj9uFV9N7HH0\n6d1IqD4xW0nQN0xW95hRhFEwG9BZv2CRCExIzES6+t+IGivNR0yU0vaBFUU8dMAv\ncVkZz6JMOOia0EjVNNdG+GMIN0NuCuF4VeS4aOkB2bbm+4rTmPc7bkQWxy1hmFGV\n/lZ5gN5FwHtXSABpmtB7fo8liQFFMwx6fidYxMmshUUqCmcpV6u9qh6fa2C39D7i\nGxV6AWQRkLbwfqM0Z8qGLWFBjZDl6UOEsoxfvd1HSvbGM/CzN3FR3r3gFfFLoVSE\nZZ64wixYgD8YbESMLEv+DARMq0+DBYCGgzTR/rVgpqb7zPcf9/cMvQcIDz3j6PBh\neqTB1zAMuzB1SnWWztyezZRO8s05GBAsByo6BdyEJfOWNWAxb5YX4+i+AkINuuE1\naJjNS7sVeij81Gnz44zpVavzSu7Jp5LDQg8f3dmoXLreWb7CCaw=\n=gCgh\n-----END PGP SIGNATURE-----", "payload": "tree 4d76ec012e6a60e3871b4a4f943693f9ba9f6b0f\nparent cb68c051511fe0583ecf3f39147b8537a26c1e1f\nauthor Pietro Albini <pietro.albini@ferrous-systems.com> 1685107281 +0200\ncommitter Pietro Albini <pietro.albini@ferrous-systems.com> 1685107281 +0200\n\nrename metadata_version to format_version\n\nThe new name is more accurate.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7040d4102f0f3915944369e8d25ebf91f6a99640", "html_url": "https://github.com/rust-lang/rust/commit/7040d4102f0f3915944369e8d25ebf91f6a99640", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7040d4102f0f3915944369e8d25ebf91f6a99640/comments", "author": {"login": "pietroalbini", "id": 2299951, "node_id": "MDQ6VXNlcjIyOTk5NTE=", "avatar_url": "https://avatars.githubusercontent.com/u/2299951?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pietroalbini", "html_url": "https://github.com/pietroalbini", "followers_url": "https://api.github.com/users/pietroalbini/followers", "following_url": "https://api.github.com/users/pietroalbini/following{/other_user}", "gists_url": "https://api.github.com/users/pietroalbini/gists{/gist_id}", "starred_url": "https://api.github.com/users/pietroalbini/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pietroalbini/subscriptions", "organizations_url": "https://api.github.com/users/pietroalbini/orgs", "repos_url": "https://api.github.com/users/pietroalbini/repos", "events_url": "https://api.github.com/users/pietroalbini/events{/privacy}", "received_events_url": "https://api.github.com/users/pietroalbini/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pietroalbini", "id": 2299951, "node_id": "MDQ6VXNlcjIyOTk5NTE=", "avatar_url": "https://avatars.githubusercontent.com/u/2299951?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pietroalbini", "html_url": "https://github.com/pietroalbini", "followers_url": "https://api.github.com/users/pietroalbini/followers", "following_url": "https://api.github.com/users/pietroalbini/following{/other_user}", "gists_url": "https://api.github.com/users/pietroalbini/gists{/gist_id}", "starred_url": "https://api.github.com/users/pietroalbini/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pietroalbini/subscriptions", "organizations_url": "https://api.github.com/users/pietroalbini/orgs", "repos_url": "https://api.github.com/users/pietroalbini/repos", "events_url": "https://api.github.com/users/pietroalbini/events{/privacy}", "received_events_url": "https://api.github.com/users/pietroalbini/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cb68c051511fe0583ecf3f39147b8537a26c1e1f", "url": "https://api.github.com/repos/rust-lang/rust/commits/cb68c051511fe0583ecf3f39147b8537a26c1e1f", "html_url": "https://github.com/rust-lang/rust/commit/cb68c051511fe0583ecf3f39147b8537a26c1e1f"}], "stats": {"total": 19, "additions": 9, "deletions": 10}, "files": [{"sha": "405a88d756878cfeef48045fc074c2bbf9e6cfca", "filename": "src/bootstrap/metrics.rs", "status": "modified", "additions": 9, "deletions": 10, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/7040d4102f0f3915944369e8d25ebf91f6a99640/src%2Fbootstrap%2Fmetrics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7040d4102f0f3915944369e8d25ebf91f6a99640/src%2Fbootstrap%2Fmetrics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fmetrics.rs?ref=7040d4102f0f3915944369e8d25ebf91f6a99640", "patch": "@@ -19,7 +19,7 @@ use sysinfo::{CpuExt, System, SystemExt};\n // Versions:\n // 0: initial version\n // 1: replaced JsonNode::Test with JsonNode::TestSuite\n-const CURRENT_METADATA_VERSION: usize = 1;\n+const CURRENT_FORMAT_VERSION: usize = 1;\n \n pub(crate) struct BuildMetrics {\n     state: RefCell<MetricsState>,\n@@ -151,15 +151,15 @@ impl BuildMetrics {\n         // previous invocations are still present in the resulting file.\n         let mut invocations = match std::fs::read(&dest) {\n             Ok(contents) => {\n-                // We first parse just the metadata_version field to have the check succeed even if\n+                // We first parse just the format_version field to have the check succeed even if\n                 // the rest of the contents are not valid anymore.\n-                let version: OnlyMetadataVersion = t!(serde_json::from_slice(&contents));\n-                if version.metadata_version == CURRENT_METADATA_VERSION {\n+                let version: OnlyFormatVersion = t!(serde_json::from_slice(&contents));\n+                if version.format_version == CURRENT_FORMAT_VERSION {\n                     t!(serde_json::from_slice::<JsonRoot>(&contents)).invocations\n                 } else {\n                     println!(\n                         \"warning: overriding existing build/metrics.json, as it's not \\\n-                         compatible with build metrics format version {CURRENT_METADATA_VERSION}.\"\n+                         compatible with build metrics format version {CURRENT_FORMAT_VERSION}.\"\n                     );\n                     Vec::new()\n                 }\n@@ -181,8 +181,7 @@ impl BuildMetrics {\n             children: steps.into_iter().map(|step| self.prepare_json_step(step)).collect(),\n         });\n \n-        let json =\n-            JsonRoot { metadata_version: CURRENT_METADATA_VERSION, system_stats, invocations };\n+        let json = JsonRoot { format_version: CURRENT_FORMAT_VERSION, system_stats, invocations };\n \n         t!(std::fs::create_dir_all(dest.parent().unwrap()));\n         let mut file = BufWriter::new(t!(File::create(&dest)));\n@@ -234,7 +233,7 @@ struct StepMetrics {\n #[serde(rename_all = \"snake_case\")]\n struct JsonRoot {\n     #[serde(default)] // For version 0 the field was not present.\n-    metadata_version: usize,\n+    format_version: usize,\n     system_stats: JsonInvocationSystemStats,\n     invocations: Vec<JsonInvocation>,\n }\n@@ -322,7 +321,7 @@ struct JsonStepSystemStats {\n }\n \n #[derive(Deserialize)]\n-struct OnlyMetadataVersion {\n+struct OnlyFormatVersion {\n     #[serde(default)] // For version 0 the field was not present.\n-    metadata_version: usize,\n+    format_version: usize,\n }"}]}