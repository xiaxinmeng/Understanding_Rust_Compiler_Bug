{"sha": "625ca772b59da2355589d634f402725c495ab5ab", "node_id": "MDY6Q29tbWl0NzI0NzEyOjYyNWNhNzcyYjU5ZGEyMzU1NTg5ZDYzNGY0MDI3MjVjNDk1YWI1YWI=", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2018-12-11T00:31:04Z"}, "committer": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2018-12-11T00:31:04Z"}, "message": "tests: fix more cases where rustfmt would have hurt the tests", "tree": {"sha": "071175902a349aeab83378d3458ad20c28018e55", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/071175902a349aeab83378d3458ad20c28018e55"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/625ca772b59da2355589d634f402725c495ab5ab", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/625ca772b59da2355589d634f402725c495ab5ab", "html_url": "https://github.com/rust-lang/rust/commit/625ca772b59da2355589d634f402725c495ab5ab", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/625ca772b59da2355589d634f402725c495ab5ab/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f1d5194e3d9c07279811fc4f6a704b5185c8c9f4", "url": "https://api.github.com/repos/rust-lang/rust/commits/f1d5194e3d9c07279811fc4f6a704b5185c8c9f4", "html_url": "https://github.com/rust-lang/rust/commit/f1d5194e3d9c07279811fc4f6a704b5185c8c9f4"}], "stats": {"total": 697, "additions": 262, "deletions": 435}, "files": [{"sha": "3bea98acf2fb2ab78b5bd2ddc986d1de4e0d3dd1", "filename": "tests/ui/formatting.rs", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/625ca772b59da2355589d634f402725c495ab5ab/tests%2Fui%2Fformatting.rs", "raw_url": "https://github.com/rust-lang/rust/raw/625ca772b59da2355589d634f402725c495ab5ab/tests%2Fui%2Fformatting.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fformatting.rs?ref=625ca772b59da2355589d634f402725c495ab5ab", "patch": "@@ -7,10 +7,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-\n-\n-\n-\n #![warn(clippy::all)]\n #![allow(unused_variables)]\n #![allow(unused_assignments)]"}, {"sha": "7399a0d45491740d796f9a318a642e1993a6b7bc", "filename": "tests/ui/formatting.stderr", "status": "modified", "additions": 23, "deletions": 23, "changes": 46, "blob_url": "https://github.com/rust-lang/rust/blob/625ca772b59da2355589d634f402725c495ab5ab/tests%2Fui%2Fformatting.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/625ca772b59da2355589d634f402725c495ab5ab/tests%2Fui%2Fformatting.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fformatting.stderr?ref=625ca772b59da2355589d634f402725c495ab5ab", "patch": "@@ -1,87 +1,87 @@\n error: this looks like an `else if` but the `else` is missing\n-  --> $DIR/formatting.rs:25:6\n+  --> $DIR/formatting.rs:21:6\n    |\n-25 |     } if foo() {\n+21 |     } if foo() {\n    |      ^\n    |\n    = note: `-D clippy::suspicious-else-formatting` implied by `-D warnings`\n    = note: to remove this lint, add the missing `else` or add a new line before the second `if`\n \n error: this looks like an `else if` but the `else` is missing\n-  --> $DIR/formatting.rs:32:10\n+  --> $DIR/formatting.rs:28:10\n    |\n-32 |         } if foo() {\n+28 |         } if foo() {\n    |          ^\n    |\n    = note: to remove this lint, add the missing `else` or add a new line before the second `if`\n \n error: this looks like an `else if` but the `else` is missing\n-  --> $DIR/formatting.rs:40:10\n+  --> $DIR/formatting.rs:36:10\n    |\n-40 |         } if foo() {\n+36 |         } if foo() {\n    |          ^\n    |\n    = note: to remove this lint, add the missing `else` or add a new line before the second `if`\n \n error: this is an `else if` but the formatting might hide it\n-  --> $DIR/formatting.rs:49:6\n+  --> $DIR/formatting.rs:45:6\n    |\n-49 |       } else\n+45 |       } else\n    |  ______^\n-50 | |     if foo() { // the span of the above error should continue here\n+46 | |     if foo() { // the span of the above error should continue here\n    | |____^\n    |\n    = note: to remove this lint, remove the `else` or remove the new line between `else` and `if`\n \n error: this is an `else if` but the formatting might hide it\n-  --> $DIR/formatting.rs:54:6\n+  --> $DIR/formatting.rs:50:6\n    |\n-54 |       }\n+50 |       }\n    |  ______^\n-55 | |     else\n-56 | |     if foo() { // the span of the above error should continue here\n+51 | |     else\n+52 | |     if foo() { // the span of the above error should continue here\n    | |____^\n    |\n    = note: to remove this lint, remove the `else` or remove the new line between `else` and `if`\n \n error: this looks like you are trying to use `.. -= ..`, but you really are doing `.. = (- ..)`\n-  --> $DIR/formatting.rs:81:6\n+  --> $DIR/formatting.rs:77:6\n    |\n-81 |     a =- 35;\n+77 |     a =- 35;\n    |      ^^^^\n    |\n    = note: `-D clippy::suspicious-assignment-formatting` implied by `-D warnings`\n    = note: to remove this lint, use either `-=` or `= -`\n \n error: this looks like you are trying to use `.. *= ..`, but you really are doing `.. = (* ..)`\n-  --> $DIR/formatting.rs:82:6\n+  --> $DIR/formatting.rs:78:6\n    |\n-82 |     a =* &191;\n+78 |     a =* &191;\n    |      ^^^^\n    |\n    = note: to remove this lint, use either `*=` or `= *`\n \n error: this looks like you are trying to use `.. != ..`, but you really are doing `.. = (! ..)`\n-  --> $DIR/formatting.rs:85:6\n+  --> $DIR/formatting.rs:81:6\n    |\n-85 |     b =! false;\n+81 |     b =! false;\n    |      ^^^^\n    |\n    = note: to remove this lint, use either `!=` or `= !`\n \n error: possibly missing a comma here\n-  --> $DIR/formatting.rs:94:19\n+  --> $DIR/formatting.rs:90:19\n    |\n-94 |         -1, -2, -3 // <= no comma here\n+90 |         -1, -2, -3 // <= no comma here\n    |                   ^\n    |\n    = note: `-D clippy::possible-missing-comma` implied by `-D warnings`\n    = note: to remove this lint, add a comma or write the expr in a single line\n \n error: possibly missing a comma here\n-  --> $DIR/formatting.rs:98:19\n+  --> $DIR/formatting.rs:94:19\n    |\n-98 |         -1, -2, -3 // <= no comma here\n+94 |         -1, -2, -3 // <= no comma here\n    |                   ^\n    |\n    = note: to remove this lint, add a comma or write the expr in a single line"}, {"sha": "db473f9b41e320e9e97a249d35ee73b938dffcde", "filename": "tests/ui/option_map_unit_fn.rs", "status": "modified", "additions": 25, "deletions": 50, "changes": 75, "blob_url": "https://github.com/rust-lang/rust/blob/625ca772b59da2355589d634f402725c495ab5ab/tests%2Fui%2Foption_map_unit_fn.rs", "raw_url": "https://github.com/rust-lang/rust/raw/625ca772b59da2355589d634f402725c495ab5ab/tests%2Fui%2Foption_map_unit_fn.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Foption_map_unit_fn.rs?ref=625ca772b59da2355589d634f402725c495ab5ab", "patch": "@@ -31,12 +31,12 @@ impl HasOption {\n         value + 1\n     }\n }\n-\n+#[rustfmt::skip]\n fn option_map_unit_fn() {\n     let x = HasOption { field: Some(10) };\n \n     x.field.map(plus_one);\n-    let _: Option<()> = x.field.map(do_nothing);\n+    let _ : Option<()> = x.field.map(do_nothing);\n \n     x.field.map(do_nothing);\n \n@@ -45,82 +45,57 @@ fn option_map_unit_fn() {\n     x.field.map(diverge);\n \n     let captured = 10;\n-    if let Some(value) = x.field {\n-        do_nothing(value + captured)\n-    };\n-    let _: Option<()> = x.field.map(|value| do_nothing(value + captured));\n+    if let Some(value) = x.field { do_nothing(value + captured) };\n+    let _ : Option<()> = x.field.map(|value| do_nothing(value + captured));\n \n     x.field.map(|value| x.do_option_nothing(value + captured));\n \n-    x.field.map(|value| {\n-        x.do_option_plus_one(value + captured);\n-    });\n+    x.field.map(|value| { x.do_option_plus_one(value + captured); });\n \n-    x.field.map(|value| do_nothing(value + captured));\n \n     x.field.map(|value| do_nothing(value + captured));\n \n-    x.field.map(|value| {\n-        do_nothing(value + captured);\n-    });\n+    x.field.map(|value| { do_nothing(value + captured) });\n \n-    x.field.map(|value| {\n-        do_nothing(value + captured);\n-    });\n+    x.field.map(|value| { do_nothing(value + captured); });\n+\n+    x.field.map(|value| { { do_nothing(value + captured); } });\n \n-    x.field.map(|value| diverge(value + captured));\n \n     x.field.map(|value| diverge(value + captured));\n \n-    x.field.map(|value| {\n-        diverge(value + captured);\n-    });\n+    x.field.map(|value| { diverge(value + captured) });\n+\n+    x.field.map(|value| { diverge(value + captured); });\n+\n+    x.field.map(|value| { { diverge(value + captured); } });\n \n-    x.field.map(|value| {\n-        diverge(value + captured);\n-    });\n \n     x.field.map(|value| plus_one(value + captured));\n-    x.field.map(|value| plus_one(value + captured));\n-    x.field.map(|value| {\n-        let y = plus_one(value + captured);\n-    });\n+    x.field.map(|value| { plus_one(value + captured) });\n+    x.field.map(|value| { let y = plus_one(value + captured); });\n \n-    x.field.map(|value| {\n-        plus_one(value + captured);\n-    });\n+    x.field.map(|value| { plus_one(value + captured); });\n \n-    x.field.map(|value| {\n-        plus_one(value + captured);\n-    });\n+    x.field.map(|value| { { plus_one(value + captured); } });\n \n-    x.field.map(|ref value| do_nothing(value + captured));\n \n-    x.field.map(|value| {\n-        do_nothing(value);\n-        do_nothing(value)\n-    });\n+    x.field.map(|ref value| { do_nothing(value + captured) });\n \n-    x.field.map(|value| {\n-        if value > 0 {\n-            do_nothing(value);\n-            do_nothing(value)\n-        }\n-    });\n+\n+    x.field.map(|value| { do_nothing(value); do_nothing(value) });\n+\n+    x.field.map(|value| if value > 0 { do_nothing(value); do_nothing(value) });\n \n     // Suggestion for the let block should be `{ ... }` as it's too difficult to build a\n     // proper suggestion for these cases\n     x.field.map(|value| {\n         do_nothing(value);\n         do_nothing(value)\n     });\n-    x.field.map(|value| {\n-        do_nothing(value);\n-        do_nothing(value);\n-    });\n+    x.field.map(|value| { do_nothing(value); do_nothing(value); });\n \n-    // The following should suggest `if let Some(_X) ...` as it's difficult to generate a proper let\n-    // variable name for them\n+    // The following should suggest `if let Some(_X) ...` as it's difficult to generate a proper let variable name for them\n     Some(42).map(diverge);\n     \"12\".parse::<i32>().ok().map(diverge);\n     Some(plus_one(1)).map(do_nothing);"}, {"sha": "5df5ae7d91812617128647be1dabf44f520ae490", "filename": "tests/ui/option_map_unit_fn.stderr", "status": "modified", "additions": 97, "deletions": 157, "changes": 254, "blob_url": "https://github.com/rust-lang/rust/blob/625ca772b59da2355589d634f402725c495ab5ab/tests%2Fui%2Foption_map_unit_fn.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/625ca772b59da2355589d634f402725c495ab5ab/tests%2Fui%2Foption_map_unit_fn.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Foption_map_unit_fn.stderr?ref=625ca772b59da2355589d634f402725c495ab5ab", "patch": "@@ -25,243 +25,183 @@ error: called `map(f)` on an Option value where `f` is a unit function\n    |     help: try this: `if let Some(x_field) = x.field { diverge(...) }`\n \n error: called `map(f)` on an Option value where `f` is a unit closure\n-  --> $DIR/option_map_unit_fn.rs:53:5\n+  --> $DIR/option_map_unit_fn.rs:51:5\n    |\n-53 |     x.field.map(|value| x.do_option_nothing(value + captured));\n+51 |     x.field.map(|value| x.do_option_nothing(value + captured));\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^-\n    |     |\n    |     help: try this: `if let Some(value) = x.field { x.do_option_nothing(value + captured) }`\n \n error: called `map(f)` on an Option value where `f` is a unit closure\n-  --> $DIR/option_map_unit_fn.rs:55:5\n+  --> $DIR/option_map_unit_fn.rs:53:5\n    |\n-55 |        x.field.map(|value| {\n-   |   _____^\n-   |  |_____|\n-   | ||\n-56 | ||         x.do_option_plus_one(value + captured);\n-57 | ||     });\n-   | ||______^- help: try this: `if let Some(value) = x.field { x.do_option_plus_one(value + captured); }`\n-   | |_______|\n-   | \n+53 |     x.field.map(|value| { x.do_option_plus_one(value + captured); });\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^-\n+   |     |\n+   |     help: try this: `if let Some(value) = x.field { x.do_option_plus_one(value + captured); }`\n \n error: called `map(f)` on an Option value where `f` is a unit closure\n-  --> $DIR/option_map_unit_fn.rs:59:5\n+  --> $DIR/option_map_unit_fn.rs:56:5\n    |\n-59 |     x.field.map(|value| do_nothing(value + captured));\n+56 |     x.field.map(|value| do_nothing(value + captured));\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^-\n    |     |\n    |     help: try this: `if let Some(value) = x.field { do_nothing(value + captured) }`\n \n error: called `map(f)` on an Option value where `f` is a unit closure\n-  --> $DIR/option_map_unit_fn.rs:61:5\n+  --> $DIR/option_map_unit_fn.rs:58:5\n    |\n-61 |     x.field.map(|value| do_nothing(value + captured));\n-   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^-\n+58 |     x.field.map(|value| { do_nothing(value + captured) });\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^-\n    |     |\n    |     help: try this: `if let Some(value) = x.field { do_nothing(value + captured) }`\n \n error: called `map(f)` on an Option value where `f` is a unit closure\n-  --> $DIR/option_map_unit_fn.rs:63:5\n+  --> $DIR/option_map_unit_fn.rs:60:5\n    |\n-63 |        x.field.map(|value| {\n-   |   _____^\n-   |  |_____|\n-   | ||\n-64 | ||         do_nothing(value + captured);\n-65 | ||     });\n-   | ||______^- help: try this: `if let Some(value) = x.field { do_nothing(value + captured); }`\n-   | |_______|\n-   | \n+60 |     x.field.map(|value| { do_nothing(value + captured); });\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^-\n+   |     |\n+   |     help: try this: `if let Some(value) = x.field { do_nothing(value + captured); }`\n \n error: called `map(f)` on an Option value where `f` is a unit closure\n-  --> $DIR/option_map_unit_fn.rs:67:5\n+  --> $DIR/option_map_unit_fn.rs:62:5\n    |\n-67 |        x.field.map(|value| {\n-   |   _____^\n-   |  |_____|\n-   | ||\n-68 | ||         do_nothing(value + captured);\n-69 | ||     });\n-   | ||______^- help: try this: `if let Some(value) = x.field { do_nothing(value + captured); }`\n-   | |_______|\n-   | \n+62 |     x.field.map(|value| { { do_nothing(value + captured); } });\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^-\n+   |     |\n+   |     help: try this: `if let Some(value) = x.field { do_nothing(value + captured); }`\n \n error: called `map(f)` on an Option value where `f` is a unit closure\n-  --> $DIR/option_map_unit_fn.rs:71:5\n+  --> $DIR/option_map_unit_fn.rs:65:5\n    |\n-71 |     x.field.map(|value| diverge(value + captured));\n+65 |     x.field.map(|value| diverge(value + captured));\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^-\n    |     |\n    |     help: try this: `if let Some(value) = x.field { diverge(value + captured) }`\n \n error: called `map(f)` on an Option value where `f` is a unit closure\n-  --> $DIR/option_map_unit_fn.rs:73:5\n+  --> $DIR/option_map_unit_fn.rs:67:5\n    |\n-73 |     x.field.map(|value| diverge(value + captured));\n-   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^-\n+67 |     x.field.map(|value| { diverge(value + captured) });\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^-\n    |     |\n    |     help: try this: `if let Some(value) = x.field { diverge(value + captured) }`\n \n error: called `map(f)` on an Option value where `f` is a unit closure\n-  --> $DIR/option_map_unit_fn.rs:75:5\n+  --> $DIR/option_map_unit_fn.rs:69:5\n    |\n-75 |        x.field.map(|value| {\n-   |   _____^\n-   |  |_____|\n-   | ||\n-76 | ||         diverge(value + captured);\n-77 | ||     });\n-   | ||______^- help: try this: `if let Some(value) = x.field { diverge(value + captured); }`\n-   | |_______|\n-   | \n+69 |     x.field.map(|value| { diverge(value + captured); });\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^-\n+   |     |\n+   |     help: try this: `if let Some(value) = x.field { diverge(value + captured); }`\n \n error: called `map(f)` on an Option value where `f` is a unit closure\n-  --> $DIR/option_map_unit_fn.rs:79:5\n+  --> $DIR/option_map_unit_fn.rs:71:5\n    |\n-79 |        x.field.map(|value| {\n-   |   _____^\n-   |  |_____|\n-   | ||\n-80 | ||         diverge(value + captured);\n-81 | ||     });\n-   | ||______^- help: try this: `if let Some(value) = x.field { diverge(value + captured); }`\n-   | |_______|\n-   | \n+71 |     x.field.map(|value| { { diverge(value + captured); } });\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^-\n+   |     |\n+   |     help: try this: `if let Some(value) = x.field { diverge(value + captured); }`\n \n error: called `map(f)` on an Option value where `f` is a unit closure\n-  --> $DIR/option_map_unit_fn.rs:85:5\n+  --> $DIR/option_map_unit_fn.rs:76:5\n    |\n-85 |        x.field.map(|value| {\n-   |   _____^\n-   |  |_____|\n-   | ||\n-86 | ||         let y = plus_one(value + captured);\n-87 | ||     });\n-   | ||______^- help: try this: `if let Some(value) = x.field { let y = plus_one(value + captured); }`\n-   | |_______|\n-   | \n+76 |     x.field.map(|value| { let y = plus_one(value + captured); });\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^-\n+   |     |\n+   |     help: try this: `if let Some(value) = x.field { let y = plus_one(value + captured); }`\n \n error: called `map(f)` on an Option value where `f` is a unit closure\n-  --> $DIR/option_map_unit_fn.rs:89:5\n+  --> $DIR/option_map_unit_fn.rs:78:5\n    |\n-89 |        x.field.map(|value| {\n-   |   _____^\n-   |  |_____|\n-   | ||\n-90 | ||         plus_one(value + captured);\n-91 | ||     });\n-   | ||______^- help: try this: `if let Some(value) = x.field { plus_one(value + captured); }`\n-   | |_______|\n-   | \n+78 |     x.field.map(|value| { plus_one(value + captured); });\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^-\n+   |     |\n+   |     help: try this: `if let Some(value) = x.field { plus_one(value + captured); }`\n \n error: called `map(f)` on an Option value where `f` is a unit closure\n-  --> $DIR/option_map_unit_fn.rs:93:5\n+  --> $DIR/option_map_unit_fn.rs:80:5\n    |\n-93 |        x.field.map(|value| {\n-   |   _____^\n-   |  |_____|\n-   | ||\n-94 | ||         plus_one(value + captured);\n-95 | ||     });\n-   | ||______^- help: try this: `if let Some(value) = x.field { plus_one(value + captured); }`\n-   | |_______|\n-   | \n+80 |     x.field.map(|value| { { plus_one(value + captured); } });\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^-\n+   |     |\n+   |     help: try this: `if let Some(value) = x.field { plus_one(value + captured); }`\n \n error: called `map(f)` on an Option value where `f` is a unit closure\n-  --> $DIR/option_map_unit_fn.rs:97:5\n+  --> $DIR/option_map_unit_fn.rs:83:5\n    |\n-97 |     x.field.map(|ref value| do_nothing(value + captured));\n-   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^-\n+83 |     x.field.map(|ref value| { do_nothing(value + captured) });\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^-\n    |     |\n    |     help: try this: `if let Some(ref value) = x.field { do_nothing(value + captured) }`\n \n error: called `map(f)` on an Option value where `f` is a unit closure\n-   --> $DIR/option_map_unit_fn.rs:99:5\n-    |\n-99  |        x.field.map(|value| {\n-    |   _____^\n-    |  |_____|\n-    | ||\n-100 | ||         do_nothing(value);\n-101 | ||         do_nothing(value)\n-102 | ||     });\n-    | ||______^- help: try this: `if let Some(value) = x.field { ... }`\n-    | |_______|\n-    | \n+  --> $DIR/option_map_unit_fn.rs:86:5\n+   |\n+86 |     x.field.map(|value| { do_nothing(value); do_nothing(value) });\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^-\n+   |     |\n+   |     help: try this: `if let Some(value) = x.field { ... }`\n \n error: called `map(f)` on an Option value where `f` is a unit closure\n-   --> $DIR/option_map_unit_fn.rs:104:5\n-    |\n-104 |        x.field.map(|value| {\n-    |   _____^\n-    |  |_____|\n-    | ||\n-105 | ||         if value > 0 {\n-106 | ||             do_nothing(value);\n-107 | ||             do_nothing(value)\n-108 | ||         }\n-109 | ||     });\n-    | ||______^- help: try this: `if let Some(value) = x.field { ... }`\n-    | |_______|\n-    | \n+  --> $DIR/option_map_unit_fn.rs:88:5\n+   |\n+88 |     x.field.map(|value| if value > 0 { do_nothing(value); do_nothing(value) });\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^-\n+   |     |\n+   |     help: try this: `if let Some(value) = x.field { ... }`\n \n error: called `map(f)` on an Option value where `f` is a unit closure\n-   --> $DIR/option_map_unit_fn.rs:113:5\n-    |\n-113 |        x.field.map(|value| {\n-    |   _____^\n-    |  |_____|\n-    | ||\n-114 | ||         do_nothing(value);\n-115 | ||         do_nothing(value)\n-116 | ||     });\n-    | ||______^- help: try this: `if let Some(value) = x.field { ... }`\n-    | |_______|\n-    | \n+  --> $DIR/option_map_unit_fn.rs:92:5\n+   |\n+92 |        x.field.map(|value| {\n+   |   _____^\n+   |  |_____|\n+   | ||\n+93 | ||         do_nothing(value);\n+94 | ||         do_nothing(value)\n+95 | ||     });\n+   | ||______^- help: try this: `if let Some(value) = x.field { ... }`\n+   | |_______|\n+   | \n \n error: called `map(f)` on an Option value where `f` is a unit closure\n-   --> $DIR/option_map_unit_fn.rs:117:5\n-    |\n-117 |        x.field.map(|value| {\n-    |   _____^\n-    |  |_____|\n-    | ||\n-118 | ||         do_nothing(value);\n-119 | ||         do_nothing(value);\n-120 | ||     });\n-    | ||______^- help: try this: `if let Some(value) = x.field { ... }`\n-    | |_______|\n-    | \n+  --> $DIR/option_map_unit_fn.rs:96:5\n+   |\n+96 |     x.field.map(|value| { do_nothing(value); do_nothing(value); });\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^-\n+   |     |\n+   |     help: try this: `if let Some(value) = x.field { ... }`\n \n error: called `map(f)` on an Option value where `f` is a unit function\n-   --> $DIR/option_map_unit_fn.rs:124:5\n-    |\n-124 |     Some(42).map(diverge);\n-    |     ^^^^^^^^^^^^^^^^^^^^^-\n-    |     |\n-    |     help: try this: `if let Some(_) = Some(42) { diverge(...) }`\n+  --> $DIR/option_map_unit_fn.rs:99:5\n+   |\n+99 |     Some(42).map(diverge);\n+   |     ^^^^^^^^^^^^^^^^^^^^^-\n+   |     |\n+   |     help: try this: `if let Some(_) = Some(42) { diverge(...) }`\n \n error: called `map(f)` on an Option value where `f` is a unit function\n-   --> $DIR/option_map_unit_fn.rs:125:5\n+   --> $DIR/option_map_unit_fn.rs:100:5\n     |\n-125 |     \"12\".parse::<i32>().ok().map(diverge);\n+100 |     \"12\".parse::<i32>().ok().map(diverge);\n     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^-\n     |     |\n     |     help: try this: `if let Some(_) = \"12\".parse::<i32>().ok() { diverge(...) }`\n \n error: called `map(f)` on an Option value where `f` is a unit function\n-   --> $DIR/option_map_unit_fn.rs:126:5\n+   --> $DIR/option_map_unit_fn.rs:101:5\n     |\n-126 |     Some(plus_one(1)).map(do_nothing);\n+101 |     Some(plus_one(1)).map(do_nothing);\n     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^-\n     |     |\n     |     help: try this: `if let Some(_) = Some(plus_one(1)) { do_nothing(...) }`\n \n error: called `map(f)` on an Option value where `f` is a unit function\n-   --> $DIR/option_map_unit_fn.rs:130:5\n+   --> $DIR/option_map_unit_fn.rs:105:5\n     |\n-130 |     y.map(do_nothing);\n+105 |     y.map(do_nothing);\n     |     ^^^^^^^^^^^^^^^^^-\n     |     |\n     |     help: try this: `if let Some(_y) = y { do_nothing(...) }`"}, {"sha": "3d731c9b3502ce8c4f7c8f63664a31df6a524b8c", "filename": "tests/ui/result_map_unit_fn.rs", "status": "modified", "additions": 23, "deletions": 47, "changes": 70, "blob_url": "https://github.com/rust-lang/rust/blob/625ca772b59da2355589d634f402725c495ab5ab/tests%2Fui%2Fresult_map_unit_fn.rs", "raw_url": "https://github.com/rust-lang/rust/raw/625ca772b59da2355589d634f402725c495ab5ab/tests%2Fui%2Fresult_map_unit_fn.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fresult_map_unit_fn.rs?ref=625ca772b59da2355589d634f402725c495ab5ab", "patch": "@@ -33,6 +33,7 @@ impl HasResult {\n     }\n }\n \n+#[rustfmt::skip]\n fn result_map_unit_fn() {\n     let x = HasResult { field: Ok(10) };\n \n@@ -46,82 +47,57 @@ fn result_map_unit_fn() {\n     x.field.map(diverge);\n \n     let captured = 10;\n-    if let Ok(value) = x.field {\n-        do_nothing(value + captured)\n-    };\n+    if let Ok(value) = x.field { do_nothing(value + captured) };\n     let _: Result<(), usize> = x.field.map(|value| do_nothing(value + captured));\n \n     x.field.map(|value| x.do_result_nothing(value + captured));\n \n-    x.field.map(|value| {\n-        x.do_result_plus_one(value + captured);\n-    });\n+    x.field.map(|value| { x.do_result_plus_one(value + captured); });\n \n-    x.field.map(|value| do_nothing(value + captured));\n \n     x.field.map(|value| do_nothing(value + captured));\n \n-    x.field.map(|value| {\n-        do_nothing(value + captured);\n-    });\n+    x.field.map(|value| { do_nothing(value + captured) });\n \n-    x.field.map(|value| {\n-        do_nothing(value + captured);\n-    });\n+    x.field.map(|value| { do_nothing(value + captured); });\n+\n+    x.field.map(|value| { { do_nothing(value + captured); } });\n \n-    x.field.map(|value| diverge(value + captured));\n \n     x.field.map(|value| diverge(value + captured));\n \n-    x.field.map(|value| {\n-        diverge(value + captured);\n-    });\n+    x.field.map(|value| { diverge(value + captured) });\n+\n+    x.field.map(|value| { diverge(value + captured); });\n+\n+    x.field.map(|value| { { diverge(value + captured); } });\n \n-    x.field.map(|value| {\n-        diverge(value + captured);\n-    });\n \n     x.field.map(|value| plus_one(value + captured));\n-    x.field.map(|value| plus_one(value + captured));\n-    x.field.map(|value| {\n-        let y = plus_one(value + captured);\n-    });\n+    x.field.map(|value| { plus_one(value + captured) });\n+    x.field.map(|value| { let y = plus_one(value + captured); });\n \n-    x.field.map(|value| {\n-        plus_one(value + captured);\n-    });\n+    x.field.map(|value| { plus_one(value + captured); });\n \n-    x.field.map(|value| {\n-        plus_one(value + captured);\n-    });\n+    x.field.map(|value| { { plus_one(value + captured); } });\n \n-    x.field.map(|ref value| do_nothing(value + captured));\n \n-    x.field.map(|value| {\n-        do_nothing(value);\n-        do_nothing(value)\n-    });\n+    x.field.map(|ref value| { do_nothing(value + captured) });\n \n-    x.field.map(|value| {\n-        if value > 0 {\n-            do_nothing(value);\n-            do_nothing(value)\n-        }\n-    });\n+\n+    x.field.map(|value| { do_nothing(value); do_nothing(value) });\n+\n+    x.field.map(|value| if value > 0 { do_nothing(value); do_nothing(value) });\n \n     // Suggestion for the let block should be `{ ... }` as it's too difficult to build a\n     // proper suggestion for these cases\n     x.field.map(|value| {\n         do_nothing(value);\n         do_nothing(value)\n     });\n-    x.field.map(|value| {\n-        do_nothing(value);\n-        do_nothing(value);\n-    });\n+    x.field.map(|value| { do_nothing(value); do_nothing(value); });\n \n-    // The following should suggest `if let Ok(_X) ...` as it's difficult to generate a proper let\n-    // variable name for them\n+    // The following should suggest `if let Ok(_X) ...` as it's difficult to generate a proper let variable name for them\n     let res: Result<!, usize> = Ok(42).map(diverge);\n     \"12\".parse::<i32>().map(diverge);\n "}, {"sha": "3f5231dcc061571613a965f9b107a8d059b483aa", "filename": "tests/ui/result_map_unit_fn.stderr", "status": "modified", "additions": 94, "deletions": 154, "changes": 248, "blob_url": "https://github.com/rust-lang/rust/blob/625ca772b59da2355589d634f402725c495ab5ab/tests%2Fui%2Fresult_map_unit_fn.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/625ca772b59da2355589d634f402725c495ab5ab/tests%2Fui%2Fresult_map_unit_fn.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fresult_map_unit_fn.stderr?ref=625ca772b59da2355589d634f402725c495ab5ab", "patch": "@@ -1,159 +1,156 @@\n error: called `map(f)` on an Result value where `f` is a unit function\n-  --> $DIR/result_map_unit_fn.rs:42:5\n+  --> $DIR/result_map_unit_fn.rs:43:5\n    |\n-42 |     x.field.map(do_nothing);\n+43 |     x.field.map(do_nothing);\n    |     ^^^^^^^^^^^^^^^^^^^^^^^-\n    |     |\n    |     help: try this: `if let Ok(x_field) = x.field { do_nothing(...) }`\n    |\n    = note: `-D clippy::result-map-unit-fn` implied by `-D warnings`\n \n error: called `map(f)` on an Result value where `f` is a unit function\n-  --> $DIR/result_map_unit_fn.rs:44:5\n+  --> $DIR/result_map_unit_fn.rs:45:5\n    |\n-44 |     x.field.map(do_nothing);\n+45 |     x.field.map(do_nothing);\n    |     ^^^^^^^^^^^^^^^^^^^^^^^-\n    |     |\n    |     help: try this: `if let Ok(x_field) = x.field { do_nothing(...) }`\n \n error: called `map(f)` on an Result value where `f` is a unit function\n-  --> $DIR/result_map_unit_fn.rs:46:5\n+  --> $DIR/result_map_unit_fn.rs:47:5\n    |\n-46 |     x.field.map(diverge);\n+47 |     x.field.map(diverge);\n    |     ^^^^^^^^^^^^^^^^^^^^-\n    |     |\n    |     help: try this: `if let Ok(x_field) = x.field { diverge(...) }`\n \n error: called `map(f)` on an Result value where `f` is a unit closure\n-  --> $DIR/result_map_unit_fn.rs:54:5\n+  --> $DIR/result_map_unit_fn.rs:53:5\n    |\n-54 |     x.field.map(|value| x.do_result_nothing(value + captured));\n+53 |     x.field.map(|value| x.do_result_nothing(value + captured));\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^-\n    |     |\n    |     help: try this: `if let Ok(value) = x.field { x.do_result_nothing(value + captured) }`\n \n error: called `map(f)` on an Result value where `f` is a unit closure\n-  --> $DIR/result_map_unit_fn.rs:56:5\n+  --> $DIR/result_map_unit_fn.rs:55:5\n    |\n-56 |        x.field.map(|value| {\n-   |   _____^\n-   |  |_____|\n-   | ||\n-57 | ||         x.do_result_plus_one(value + captured);\n-58 | ||     });\n-   | ||______^- help: try this: `if let Ok(value) = x.field { x.do_result_plus_one(value + captured); }`\n-   | |_______|\n-   | \n+55 |     x.field.map(|value| { x.do_result_plus_one(value + captured); });\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^-\n+   |     |\n+   |     help: try this: `if let Ok(value) = x.field { x.do_result_plus_one(value + captured); }`\n \n error: called `map(f)` on an Result value where `f` is a unit closure\n-  --> $DIR/result_map_unit_fn.rs:60:5\n+  --> $DIR/result_map_unit_fn.rs:58:5\n    |\n-60 |     x.field.map(|value| do_nothing(value + captured));\n+58 |     x.field.map(|value| do_nothing(value + captured));\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^-\n    |     |\n    |     help: try this: `if let Ok(value) = x.field { do_nothing(value + captured) }`\n \n error: called `map(f)` on an Result value where `f` is a unit closure\n-  --> $DIR/result_map_unit_fn.rs:62:5\n+  --> $DIR/result_map_unit_fn.rs:60:5\n    |\n-62 |     x.field.map(|value| do_nothing(value + captured));\n-   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^-\n+60 |     x.field.map(|value| { do_nothing(value + captured) });\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^-\n    |     |\n    |     help: try this: `if let Ok(value) = x.field { do_nothing(value + captured) }`\n \n error: called `map(f)` on an Result value where `f` is a unit closure\n-  --> $DIR/result_map_unit_fn.rs:64:5\n+  --> $DIR/result_map_unit_fn.rs:62:5\n    |\n-64 |        x.field.map(|value| {\n-   |   _____^\n-   |  |_____|\n-   | ||\n-65 | ||         do_nothing(value + captured);\n-66 | ||     });\n-   | ||______^- help: try this: `if let Ok(value) = x.field { do_nothing(value + captured); }`\n-   | |_______|\n-   | \n+62 |     x.field.map(|value| { do_nothing(value + captured); });\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^-\n+   |     |\n+   |     help: try this: `if let Ok(value) = x.field { do_nothing(value + captured); }`\n \n error: called `map(f)` on an Result value where `f` is a unit closure\n-  --> $DIR/result_map_unit_fn.rs:68:5\n+  --> $DIR/result_map_unit_fn.rs:64:5\n    |\n-68 |        x.field.map(|value| {\n-   |   _____^\n-   |  |_____|\n-   | ||\n-69 | ||         do_nothing(value + captured);\n-70 | ||     });\n-   | ||______^- help: try this: `if let Ok(value) = x.field { do_nothing(value + captured); }`\n-   | |_______|\n-   | \n+64 |     x.field.map(|value| { { do_nothing(value + captured); } });\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^-\n+   |     |\n+   |     help: try this: `if let Ok(value) = x.field { do_nothing(value + captured); }`\n \n error: called `map(f)` on an Result value where `f` is a unit closure\n-  --> $DIR/result_map_unit_fn.rs:72:5\n+  --> $DIR/result_map_unit_fn.rs:67:5\n    |\n-72 |     x.field.map(|value| diverge(value + captured));\n+67 |     x.field.map(|value| diverge(value + captured));\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^-\n    |     |\n    |     help: try this: `if let Ok(value) = x.field { diverge(value + captured) }`\n \n error: called `map(f)` on an Result value where `f` is a unit closure\n-  --> $DIR/result_map_unit_fn.rs:74:5\n+  --> $DIR/result_map_unit_fn.rs:69:5\n    |\n-74 |     x.field.map(|value| diverge(value + captured));\n-   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^-\n+69 |     x.field.map(|value| { diverge(value + captured) });\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^-\n    |     |\n    |     help: try this: `if let Ok(value) = x.field { diverge(value + captured) }`\n \n error: called `map(f)` on an Result value where `f` is a unit closure\n-  --> $DIR/result_map_unit_fn.rs:76:5\n+  --> $DIR/result_map_unit_fn.rs:71:5\n    |\n-76 |        x.field.map(|value| {\n-   |   _____^\n-   |  |_____|\n-   | ||\n-77 | ||         diverge(value + captured);\n-78 | ||     });\n-   | ||______^- help: try this: `if let Ok(value) = x.field { diverge(value + captured); }`\n-   | |_______|\n-   | \n+71 |     x.field.map(|value| { diverge(value + captured); });\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^-\n+   |     |\n+   |     help: try this: `if let Ok(value) = x.field { diverge(value + captured); }`\n+\n+error: called `map(f)` on an Result value where `f` is a unit closure\n+  --> $DIR/result_map_unit_fn.rs:73:5\n+   |\n+73 |     x.field.map(|value| { { diverge(value + captured); } });\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^-\n+   |     |\n+   |     help: try this: `if let Ok(value) = x.field { diverge(value + captured); }`\n+\n+error: called `map(f)` on an Result value where `f` is a unit closure\n+  --> $DIR/result_map_unit_fn.rs:78:5\n+   |\n+78 |     x.field.map(|value| { let y = plus_one(value + captured); });\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^-\n+   |     |\n+   |     help: try this: `if let Ok(value) = x.field { let y = plus_one(value + captured); }`\n \n error: called `map(f)` on an Result value where `f` is a unit closure\n   --> $DIR/result_map_unit_fn.rs:80:5\n    |\n-80 |        x.field.map(|value| {\n-   |   _____^\n-   |  |_____|\n-   | ||\n-81 | ||         diverge(value + captured);\n-82 | ||     });\n-   | ||______^- help: try this: `if let Ok(value) = x.field { diverge(value + captured); }`\n-   | |_______|\n-   | \n+80 |     x.field.map(|value| { plus_one(value + captured); });\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^-\n+   |     |\n+   |     help: try this: `if let Ok(value) = x.field { plus_one(value + captured); }`\n \n error: called `map(f)` on an Result value where `f` is a unit closure\n-  --> $DIR/result_map_unit_fn.rs:86:5\n+  --> $DIR/result_map_unit_fn.rs:82:5\n    |\n-86 |        x.field.map(|value| {\n-   |   _____^\n-   |  |_____|\n-   | ||\n-87 | ||         let y = plus_one(value + captured);\n-88 | ||     });\n-   | ||______^- help: try this: `if let Ok(value) = x.field { let y = plus_one(value + captured); }`\n-   | |_______|\n-   | \n+82 |     x.field.map(|value| { { plus_one(value + captured); } });\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^-\n+   |     |\n+   |     help: try this: `if let Ok(value) = x.field { plus_one(value + captured); }`\n+\n+error: called `map(f)` on an Result value where `f` is a unit closure\n+  --> $DIR/result_map_unit_fn.rs:85:5\n+   |\n+85 |     x.field.map(|ref value| { do_nothing(value + captured) });\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^-\n+   |     |\n+   |     help: try this: `if let Ok(ref value) = x.field { do_nothing(value + captured) }`\n+\n+error: called `map(f)` on an Result value where `f` is a unit closure\n+  --> $DIR/result_map_unit_fn.rs:88:5\n+   |\n+88 |     x.field.map(|value| { do_nothing(value); do_nothing(value) });\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^-\n+   |     |\n+   |     help: try this: `if let Ok(value) = x.field { ... }`\n \n error: called `map(f)` on an Result value where `f` is a unit closure\n   --> $DIR/result_map_unit_fn.rs:90:5\n    |\n-90 |        x.field.map(|value| {\n-   |   _____^\n-   |  |_____|\n-   | ||\n-91 | ||         plus_one(value + captured);\n-92 | ||     });\n-   | ||______^- help: try this: `if let Ok(value) = x.field { plus_one(value + captured); }`\n-   | |_______|\n-   | \n+90 |     x.field.map(|value| if value > 0 { do_nothing(value); do_nothing(value) });\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^-\n+   |     |\n+   |     help: try this: `if let Ok(value) = x.field { ... }`\n \n error: called `map(f)` on an Result value where `f` is a unit closure\n   --> $DIR/result_map_unit_fn.rs:94:5\n@@ -162,90 +159,33 @@ error: called `map(f)` on an Result value where `f` is a unit closure\n    |   _____^\n    |  |_____|\n    | ||\n-95 | ||         plus_one(value + captured);\n-96 | ||     });\n-   | ||______^- help: try this: `if let Ok(value) = x.field { plus_one(value + captured); }`\n+95 | ||         do_nothing(value);\n+96 | ||         do_nothing(value)\n+97 | ||     });\n+   | ||______^- help: try this: `if let Ok(value) = x.field { ... }`\n    | |_______|\n    | \n \n error: called `map(f)` on an Result value where `f` is a unit closure\n   --> $DIR/result_map_unit_fn.rs:98:5\n    |\n-98 |     x.field.map(|ref value| do_nothing(value + captured));\n-   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^-\n+98 |     x.field.map(|value| { do_nothing(value); do_nothing(value); });\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^-\n    |     |\n-   |     help: try this: `if let Ok(ref value) = x.field { do_nothing(value + captured) }`\n-\n-error: called `map(f)` on an Result value where `f` is a unit closure\n-   --> $DIR/result_map_unit_fn.rs:100:5\n-    |\n-100 |        x.field.map(|value| {\n-    |   _____^\n-    |  |_____|\n-    | ||\n-101 | ||         do_nothing(value);\n-102 | ||         do_nothing(value)\n-103 | ||     });\n-    | ||______^- help: try this: `if let Ok(value) = x.field { ... }`\n-    | |_______|\n-    | \n-\n-error: called `map(f)` on an Result value where `f` is a unit closure\n-   --> $DIR/result_map_unit_fn.rs:105:5\n-    |\n-105 |        x.field.map(|value| {\n-    |   _____^\n-    |  |_____|\n-    | ||\n-106 | ||         if value > 0 {\n-107 | ||             do_nothing(value);\n-108 | ||             do_nothing(value)\n-109 | ||         }\n-110 | ||     });\n-    | ||______^- help: try this: `if let Ok(value) = x.field { ... }`\n-    | |_______|\n-    | \n-\n-error: called `map(f)` on an Result value where `f` is a unit closure\n-   --> $DIR/result_map_unit_fn.rs:114:5\n-    |\n-114 |        x.field.map(|value| {\n-    |   _____^\n-    |  |_____|\n-    | ||\n-115 | ||         do_nothing(value);\n-116 | ||         do_nothing(value)\n-117 | ||     });\n-    | ||______^- help: try this: `if let Ok(value) = x.field { ... }`\n-    | |_______|\n-    | \n-\n-error: called `map(f)` on an Result value where `f` is a unit closure\n-   --> $DIR/result_map_unit_fn.rs:118:5\n-    |\n-118 |        x.field.map(|value| {\n-    |   _____^\n-    |  |_____|\n-    | ||\n-119 | ||         do_nothing(value);\n-120 | ||         do_nothing(value);\n-121 | ||     });\n-    | ||______^- help: try this: `if let Ok(value) = x.field { ... }`\n-    | |_______|\n-    | \n+   |     help: try this: `if let Ok(value) = x.field { ... }`\n \n error: called `map(f)` on an Result value where `f` is a unit function\n-   --> $DIR/result_map_unit_fn.rs:126:5\n+   --> $DIR/result_map_unit_fn.rs:102:5\n     |\n-126 |     \"12\".parse::<i32>().map(diverge);\n+102 |     \"12\".parse::<i32>().map(diverge);\n     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^-\n     |     |\n     |     help: try this: `if let Ok(_) = \"12\".parse::<i32>() { diverge(...) }`\n \n error: called `map(f)` on an Result value where `f` is a unit function\n-   --> $DIR/result_map_unit_fn.rs:132:5\n+   --> $DIR/result_map_unit_fn.rs:108:5\n     |\n-132 |     y.map(do_nothing);\n+108 |     y.map(do_nothing);\n     |     ^^^^^^^^^^^^^^^^^-\n     |     |\n     |     help: try this: `if let Ok(_y) = y { do_nothing(...) }`"}]}