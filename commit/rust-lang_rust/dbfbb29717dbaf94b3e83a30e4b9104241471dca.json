{"sha": "dbfbb29717dbaf94b3e83a30e4b9104241471dca", "node_id": "C_kwDOAAsO6NoAKGRiZmJiMjk3MTdkYmFmOTRiM2U4M2EzMGU0YjkxMDQyNDE0NzFkY2E", "commit": {"author": {"name": "bjorn3", "email": "17426603+bjorn3@users.noreply.github.com", "date": "2023-01-13T11:41:40Z"}, "committer": {"name": "bjorn3", "email": "17426603+bjorn3@users.noreply.github.com", "date": "2023-01-13T11:41:40Z"}, "message": "Move LLVM simple-raytracer build to ./y.rs bench\n\ncc #1290", "tree": {"sha": "f6c91e588b258c83ce538dd91253f9995496d64f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f6c91e588b258c83ce538dd91253f9995496d64f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/dbfbb29717dbaf94b3e83a30e4b9104241471dca", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/dbfbb29717dbaf94b3e83a30e4b9104241471dca", "html_url": "https://github.com/rust-lang/rust/commit/dbfbb29717dbaf94b3e83a30e4b9104241471dca", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/dbfbb29717dbaf94b3e83a30e4b9104241471dca/comments", "author": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "868638393eb79bf53ba00be6000930f9ecf8751e", "url": "https://api.github.com/repos/rust-lang/rust/commits/868638393eb79bf53ba00be6000930f9ecf8751e", "html_url": "https://github.com/rust-lang/rust/commit/868638393eb79bf53ba00be6000930f9ecf8751e"}], "stats": {"total": 38, "additions": 21, "deletions": 17}, "files": [{"sha": "e0956cb44bad325c4248f9485d2a77f09268f1a2", "filename": "build_system/bench.rs", "status": "modified", "additions": 19, "deletions": 1, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/dbfbb29717dbaf94b3e83a30e4b9104241471dca/build_system%2Fbench.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dbfbb29717dbaf94b3e83a30e4b9104241471dca/build_system%2Fbench.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/build_system%2Fbench.rs?ref=dbfbb29717dbaf94b3e83a30e4b9104241471dca", "patch": "@@ -5,7 +5,7 @@ use std::path::Path;\n use super::path::{Dirs, RelPath};\n use super::prepare::GitRepo;\n use super::rustc_info::{get_file_name, get_wrapper_file_name};\n-use super::utils::{hyperfine_command, is_ci, spawn_and_wait, CargoProject};\n+use super::utils::{hyperfine_command, is_ci, spawn_and_wait, CargoProject, Compiler};\n \n pub(crate) static SIMPLE_RAYTRACER_REPO: GitRepo = GitRepo::github(\n     \"ebobby\",\n@@ -14,6 +14,10 @@ pub(crate) static SIMPLE_RAYTRACER_REPO: GitRepo = GitRepo::github(\n     \"<none>\",\n );\n \n+// Use a separate target dir for the initial LLVM build to reduce unnecessary recompiles\n+pub(crate) static SIMPLE_RAYTRACER_LLVM: CargoProject =\n+    CargoProject::new(&SIMPLE_RAYTRACER_REPO.source_dir(), \"simple_raytracer_llvm\");\n+\n pub(crate) static SIMPLE_RAYTRACER: CargoProject =\n     CargoProject::new(&SIMPLE_RAYTRACER_REPO.source_dir(), \"simple_raytracer\");\n \n@@ -28,6 +32,20 @@ fn benchmark_simple_raytracer(dirs: &Dirs) {\n         std::process::exit(1);\n     }\n \n+    eprintln!(\"[LLVM BUILD] simple-raytracer\");\n+    let host_compiler = Compiler::host();\n+    let build_cmd = SIMPLE_RAYTRACER_LLVM.build(&host_compiler, dirs);\n+    spawn_and_wait(build_cmd);\n+    fs::copy(\n+        SIMPLE_RAYTRACER_LLVM\n+            .target_dir(dirs)\n+            .join(&host_compiler.triple)\n+            .join(\"debug\")\n+            .join(get_file_name(\"main\", \"bin\")),\n+        RelPath::BUILD.to_path(dirs).join(get_file_name(\"raytracer_cg_llvm\", \"bin\")),\n+    )\n+    .unwrap();\n+\n     let run_runs = env::var(\"RUN_RUNS\")\n         .unwrap_or(if is_ci() { \"2\" } else { \"10\" }.to_string())\n         .parse()"}, {"sha": "4c92987ba5bf1431e02635cf2d391d72004b740d", "filename": "build_system/prepare.rs", "status": "modified", "additions": 2, "deletions": 16, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/dbfbb29717dbaf94b3e83a30e4b9104241471dca/build_system%2Fprepare.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dbfbb29717dbaf94b3e83a30e4b9104241471dca/build_system%2Fprepare.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/build_system%2Fprepare.rs?ref=dbfbb29717dbaf94b3e83a30e4b9104241471dca", "patch": "@@ -7,8 +7,8 @@ use crate::build_system::rustc_info::get_default_sysroot;\n \n use super::build_sysroot::{BUILD_SYSROOT, ORIG_BUILD_SYSROOT, SYSROOT_RUSTC_VERSION, SYSROOT_SRC};\n use super::path::{Dirs, RelPath};\n-use super::rustc_info::{get_file_name, get_rustc_version};\n-use super::utils::{copy_dir_recursively, retry_spawn_and_wait, spawn_and_wait, Compiler};\n+use super::rustc_info::get_rustc_version;\n+use super::utils::{copy_dir_recursively, retry_spawn_and_wait, spawn_and_wait};\n \n pub(crate) fn prepare(dirs: &Dirs) {\n     if RelPath::DOWNLOAD.to_path(dirs).exists() {\n@@ -23,20 +23,6 @@ pub(crate) fn prepare(dirs: &Dirs) {\n     super::tests::REGEX_REPO.fetch(dirs);\n     super::tests::PORTABLE_SIMD_REPO.fetch(dirs);\n     super::bench::SIMPLE_RAYTRACER_REPO.fetch(dirs);\n-\n-    eprintln!(\"[LLVM BUILD] simple-raytracer\");\n-    let host_compiler = Compiler::host();\n-    let build_cmd = super::bench::SIMPLE_RAYTRACER.build(&host_compiler, dirs);\n-    spawn_and_wait(build_cmd);\n-    fs::copy(\n-        super::bench::SIMPLE_RAYTRACER\n-            .target_dir(dirs)\n-            .join(&host_compiler.triple)\n-            .join(\"debug\")\n-            .join(get_file_name(\"main\", \"bin\")),\n-        RelPath::BUILD.to_path(dirs).join(get_file_name(\"raytracer_cg_llvm\", \"bin\")),\n-    )\n-    .unwrap();\n }\n \n fn prepare_sysroot(dirs: &Dirs) {"}]}