{"sha": "8f385fc2e01c14cea8323e3dba86518bed306a9a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjhmMzg1ZmMyZTAxYzE0Y2VhODMyM2UzZGJhODY1MThiZWQzMDZhOWE=", "commit": {"author": {"name": "Corey Richardson", "email": "corey@octayn.net", "date": "2014-04-01T14:28:31Z"}, "committer": {"name": "Corey Richardson", "email": "corey@octayn.net", "date": "2014-04-02T15:17:22Z"}, "message": "middle: trans: callee: remove dead code", "tree": {"sha": "065331298d17176365df556d1bccdabc4b7e8fbd", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/065331298d17176365df556d1bccdabc4b7e8fbd"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8f385fc2e01c14cea8323e3dba86518bed306a9a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8f385fc2e01c14cea8323e3dba86518bed306a9a", "html_url": "https://github.com/rust-lang/rust/commit/8f385fc2e01c14cea8323e3dba86518bed306a9a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8f385fc2e01c14cea8323e3dba86518bed306a9a/comments", "author": {"login": "emberian", "id": 704250, "node_id": "MDQ6VXNlcjcwNDI1MA==", "avatar_url": "https://avatars.githubusercontent.com/u/704250?v=4", "gravatar_id": "", "url": "https://api.github.com/users/emberian", "html_url": "https://github.com/emberian", "followers_url": "https://api.github.com/users/emberian/followers", "following_url": "https://api.github.com/users/emberian/following{/other_user}", "gists_url": "https://api.github.com/users/emberian/gists{/gist_id}", "starred_url": "https://api.github.com/users/emberian/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/emberian/subscriptions", "organizations_url": "https://api.github.com/users/emberian/orgs", "repos_url": "https://api.github.com/users/emberian/repos", "events_url": "https://api.github.com/users/emberian/events{/privacy}", "received_events_url": "https://api.github.com/users/emberian/received_events", "type": "User", "site_admin": false}, "committer": {"login": "emberian", "id": 704250, "node_id": "MDQ6VXNlcjcwNDI1MA==", "avatar_url": "https://avatars.githubusercontent.com/u/704250?v=4", "gravatar_id": "", "url": "https://api.github.com/users/emberian", "html_url": "https://github.com/emberian", "followers_url": "https://api.github.com/users/emberian/followers", "following_url": "https://api.github.com/users/emberian/following{/other_user}", "gists_url": "https://api.github.com/users/emberian/gists{/gist_id}", "starred_url": "https://api.github.com/users/emberian/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/emberian/subscriptions", "organizations_url": "https://api.github.com/users/emberian/orgs", "repos_url": "https://api.github.com/users/emberian/repos", "events_url": "https://api.github.com/users/emberian/events{/privacy}", "received_events_url": "https://api.github.com/users/emberian/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a2290ccbc567fade350ea9a10d83f03527dea647", "url": "https://api.github.com/repos/rust-lang/rust/commits/a2290ccbc567fade350ea9a10d83f03527dea647", "html_url": "https://github.com/rust-lang/rust/commit/a2290ccbc567fade350ea9a10d83f03527dea647"}], "stats": {"total": 42, "additions": 0, "deletions": 42}, "files": [{"sha": "dae4b2b471b309ba6c8323b8a930a6e28276d004", "filename": "src/librustc/middle/trans/callee.rs", "status": "modified", "additions": 0, "deletions": 42, "changes": 42, "blob_url": "https://github.com/rust-lang/rust/blob/8f385fc2e01c14cea8323e3dba86518bed306a9a/src%2Flibrustc%2Fmiddle%2Ftrans%2Fcallee.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8f385fc2e01c14cea8323e3dba86518bed306a9a/src%2Flibrustc%2Fmiddle%2Ftrans%2Fcallee.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftrans%2Fcallee.rs?ref=8f385fc2e01c14cea8323e3dba86518bed306a9a", "patch": "@@ -512,48 +512,6 @@ pub fn trans_lang_call<'a>(\n                              dest)\n }\n \n-pub fn trans_lang_call_with_type_params<'a>(\n-                                        bcx: &'a Block<'a>,\n-                                        did: ast::DefId,\n-                                        args: &[ValueRef],\n-                                        type_params: &[ty::t],\n-                                        dest: expr::Dest)\n-                                        -> &'a Block<'a> {\n-    let fty;\n-    if did.krate == ast::LOCAL_CRATE {\n-        fty = ty::node_id_to_type(bcx.tcx(), did.node);\n-    } else {\n-        fty = csearch::get_type(bcx.tcx(), did).ty;\n-    }\n-\n-    return callee::trans_call_inner(\n-        bcx,\n-        None,\n-        fty,\n-        |bcx, _| {\n-            let callee =\n-                trans_fn_ref_with_vtables_to_callee(bcx, did, 0,\n-                                                    type_params,\n-                                                    None);\n-\n-            let new_llval;\n-            match callee.data {\n-                Fn(llfn) => {\n-                    let substituted = ty::subst_tps(callee.bcx.tcx(),\n-                                                    type_params,\n-                                                    None,\n-                                                    fty);\n-                    let llfnty = type_of::type_of(callee.bcx.ccx(),\n-                                                      substituted);\n-                    new_llval = PointerCast(callee.bcx, llfn, llfnty);\n-                }\n-                _ => fail!()\n-            }\n-            Callee { bcx: callee.bcx, data: Fn(new_llval) }\n-        },\n-        ArgVals(args), Some(dest)).bcx;\n-}\n-\n pub fn trans_call_inner<'a>(\n                         bcx: &'a Block<'a>,\n                         call_info: Option<NodeInfo>,"}]}