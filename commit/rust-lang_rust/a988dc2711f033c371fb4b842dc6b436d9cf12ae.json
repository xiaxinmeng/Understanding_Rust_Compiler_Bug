{"sha": "a988dc2711f033c371fb4b842dc6b436d9cf12ae", "node_id": "C_kwDOAAsO6NoAKGE5ODhkYzI3MTFmMDMzYzM3MWZiNGI4NDJkYzZiNDM2ZDljZjEyYWU", "commit": {"author": {"name": "Pietro Albini", "email": "pietro.albini@ferrous-systems.com", "date": "2023-06-13T13:06:39Z"}, "committer": {"name": "Pietro Albini", "email": "pietro.albini@ferrous-systems.com", "date": "2023-06-13T13:53:26Z"}, "message": "remove patch from cranelift backend to ignore unwinding tests", "tree": {"sha": "d51136d3214f1aa641e023eb59fc7ba2588e84d6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d51136d3214f1aa641e023eb59fc7ba2588e84d6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a988dc2711f033c371fb4b842dc6b436d9cf12ae", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEMycKYjxLY0eb13b7zXazX3c0dp4FAmSIdNYACgkQzXazX3c0\ndp5hWA/9E5AzreGnUX0cP+9+2AXo15jWeDdTQAxgRWLmbN4rTxOerRyQQqeTU+cc\nRva+RC/KyUDK740DCOekVWvWuPScrVZhxbnUfeWIAPPKcYPhiyLYLvUeBy2haESD\nzOzvKOUmZGBgR3mDQf+8OXQtxseCk1D8A2N7RG9mmYuylJSioJ1DLvP5cmdLGKvk\nwPV/8Ze1QfiJyvzKT8RTJmOqkZMhNMd+VV80i+4iGb9YfNDGSJSVT4RejhR3JZds\n2pFRVhMSj5Nh6jMD5gm0bmupxUNIZ9olD6NfEtJVmCXnS5Qg4pX97EfR5Poi7j0j\n4LmR799G6KEnCLWT/uXChhOHJka4wADTyOwMREa+7EyP7enUY7hTKTxBGqw3KAvf\niQ+VF5BhNM1v9JV6g9SpbXsQTykYFrGjFw0y0aRJtEMsbD7hF3jtVVNuBzEtagdy\nedMhwEoM3m3+83W0mbSmoDRia/QrMjrv1G8JFuPMVptff6y/nUhKyG5nFORG4QSy\nzZ6pbtVDLhb88H0FgtDsClAQUaIcuZOQ8+kgDhjuqXnwk4Sc1/qL/ywN77M8G+7f\n0WUBhpTQe+8XDw/NscvBhgqNGv8WIHgXzRlNW7sXdrOKm3skAqtWiGTbzaUe9inr\nU/T/0iUufsg0p9NsxEzjELq0ADhl1hBddU4K9RKOCZ/grqyT9pg=\n=5Zp0\n-----END PGP SIGNATURE-----", "payload": "tree d51136d3214f1aa641e023eb59fc7ba2588e84d6\nparent 44556eed363ea17a755a137c68e0af9ab6f522b1\nauthor Pietro Albini <pietro.albini@ferrous-systems.com> 1686661599 +0200\ncommitter Pietro Albini <pietro.albini@ferrous-systems.com> 1686664406 +0200\n\nremove patch from cranelift backend to ignore unwinding tests\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a988dc2711f033c371fb4b842dc6b436d9cf12ae", "html_url": "https://github.com/rust-lang/rust/commit/a988dc2711f033c371fb4b842dc6b436d9cf12ae", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a988dc2711f033c371fb4b842dc6b436d9cf12ae/comments", "author": {"login": "pietroalbini", "id": 2299951, "node_id": "MDQ6VXNlcjIyOTk5NTE=", "avatar_url": "https://avatars.githubusercontent.com/u/2299951?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pietroalbini", "html_url": "https://github.com/pietroalbini", "followers_url": "https://api.github.com/users/pietroalbini/followers", "following_url": "https://api.github.com/users/pietroalbini/following{/other_user}", "gists_url": "https://api.github.com/users/pietroalbini/gists{/gist_id}", "starred_url": "https://api.github.com/users/pietroalbini/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pietroalbini/subscriptions", "organizations_url": "https://api.github.com/users/pietroalbini/orgs", "repos_url": "https://api.github.com/users/pietroalbini/repos", "events_url": "https://api.github.com/users/pietroalbini/events{/privacy}", "received_events_url": "https://api.github.com/users/pietroalbini/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pietroalbini", "id": 2299951, "node_id": "MDQ6VXNlcjIyOTk5NTE=", "avatar_url": "https://avatars.githubusercontent.com/u/2299951?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pietroalbini", "html_url": "https://github.com/pietroalbini", "followers_url": "https://api.github.com/users/pietroalbini/followers", "following_url": "https://api.github.com/users/pietroalbini/following{/other_user}", "gists_url": "https://api.github.com/users/pietroalbini/gists{/gist_id}", "starred_url": "https://api.github.com/users/pietroalbini/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pietroalbini/subscriptions", "organizations_url": "https://api.github.com/users/pietroalbini/orgs", "repos_url": "https://api.github.com/users/pietroalbini/repos", "events_url": "https://api.github.com/users/pietroalbini/events{/privacy}", "received_events_url": "https://api.github.com/users/pietroalbini/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "44556eed363ea17a755a137c68e0af9ab6f522b1", "url": "https://api.github.com/repos/rust-lang/rust/commits/44556eed363ea17a755a137c68e0af9ab6f522b1", "html_url": "https://github.com/rust-lang/rust/commit/44556eed363ea17a755a137c68e0af9ab6f522b1"}], "stats": {"total": 36, "additions": 0, "deletions": 36}, "files": [{"sha": "385f5a8a2e039774927f732aa05be14efb325a94", "filename": "compiler/rustc_codegen_cranelift/patches/0023-coretests-Ignore-failing-tests.patch", "status": "modified", "additions": 0, "deletions": 36, "changes": 36, "blob_url": "https://github.com/rust-lang/rust/blob/a988dc2711f033c371fb4b842dc6b436d9cf12ae/compiler%2Frustc_codegen_cranelift%2Fpatches%2F0023-coretests-Ignore-failing-tests.patch", "raw_url": "https://github.com/rust-lang/rust/raw/a988dc2711f033c371fb4b842dc6b436d9cf12ae/compiler%2Frustc_codegen_cranelift%2Fpatches%2F0023-coretests-Ignore-failing-tests.patch", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_cranelift%2Fpatches%2F0023-coretests-Ignore-failing-tests.patch?ref=a988dc2711f033c371fb4b842dc6b436d9cf12ae", "patch": "@@ -10,42 +10,6 @@ Subject: [PATCH] [core] Ignore failing tests\n  library/core/tests/time.rs       |  1 +\n  4 files changed, 18 insertions(+), 2 deletions(-)\n \n-diff --git a/array.rs b/array.rs\n-index 4bc44e9..8e3c7a4 100644\n---- a/array.rs\n-+++ b/array.rs\n-@@ -242,6 +242,7 @@ fn iterator_drops() {\n-     assert_eq!(i.get(), 5);\n- }\n- \n-+/*\n- // This test does not work on targets without panic=unwind support.\n- // To work around this problem, test is marked is should_panic, so it will\n- // be automagically skipped on unsuitable targets, such as\n-@@ -283,6 +284,7 @@ fn array_default_impl_avoids_leaks_on_panic() {\n-     assert_eq!(COUNTER.load(Relaxed), 0);\n-     panic!(\"test succeeded\")\n- }\n-+*/\n- \n- #[test]\n- fn empty_array_is_always_default() {\n-@@ -304,6 +304,7 @@ fn array_map() {\n-     assert_eq!(b, [1, 2, 3]);\n- }\n- \n-+/*\n- // See note on above test for why `should_panic` is used.\n- #[test]\n- #[should_panic(expected = \"test succeeded\")]\n-@@ -332,6 +333,7 @@ fn array_map_drop_safety() {\n-     assert_eq!(DROPPED.load(Ordering::SeqCst), num_to_create);\n-     panic!(\"test succeeded\")\n- }\n-+*/\n- \n- #[test]\n- fn cell_allows_array_cycle() {\n diff --git a/atomic.rs b/atomic.rs\n index 13b12db..96fe4b9 100644\n --- a/atomic.rs"}]}