{"sha": "17585cc47ec7c4ffc9d14f33473c4238b6680e88", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE3NTg1Y2M0N2VjN2M0ZmZjOWQxNGYzMzQ3M2M0MjM4YjY2ODBlODg=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-01-16T00:25:31Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-01-16T00:25:31Z"}, "message": "rustc: Extract comman parts of view parsing", "tree": {"sha": "09bc645e6ab84035dcb1ba2d36d8928bc87cc5e1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/09bc645e6ab84035dcb1ba2d36d8928bc87cc5e1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/17585cc47ec7c4ffc9d14f33473c4238b6680e88", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/17585cc47ec7c4ffc9d14f33473c4238b6680e88", "html_url": "https://github.com/rust-lang/rust/commit/17585cc47ec7c4ffc9d14f33473c4238b6680e88", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/17585cc47ec7c4ffc9d14f33473c4238b6680e88/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "16462a77b0014356f75e5da60c787604371dd903", "url": "https://api.github.com/repos/rust-lang/rust/commits/16462a77b0014356f75e5da60c787604371dd903", "html_url": "https://github.com/rust-lang/rust/commit/16462a77b0014356f75e5da60c787604371dd903"}], "stats": {"total": 20, "additions": 13, "deletions": 7}, "files": [{"sha": "b52b02a332384fec3e9784eb6fdb4f5d662c953d", "filename": "src/comp/syntax/parse/parser.rs", "status": "modified", "additions": 13, "deletions": 7, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/17585cc47ec7c4ffc9d14f33473c4238b6680e88/src%2Fcomp%2Fsyntax%2Fparse%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/17585cc47ec7c4ffc9d14f33473c4238b6680e88/src%2Fcomp%2Fsyntax%2Fparse%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fsyntax%2Fparse%2Fparser.rs?ref=17585cc47ec7c4ffc9d14f33473c4238b6680e88", "patch": "@@ -1630,8 +1630,8 @@ fn parse_block_no_value(p: parser) -> ast::blk {\n // necessary, and this should take a qualifier.\n // some blocks start with \"#{\"...\n fn parse_block_tail(p: parser, lo: uint, s: ast::blk_check_mode) -> ast::blk {\n-    let view_items = [], stmts = [], expr = none;\n-    while is_word(p, \"import\") { view_items += [parse_view_item(p)]; }\n+    let stmts = [], expr = none;\n+    let view_items = parse_view_import_only(p);\n     while p.token != token::RBRACE {\n         alt p.token {\n           token::SEMI. {\n@@ -2378,15 +2378,21 @@ fn is_view_item(p: parser) -> bool {\n }\n \n fn parse_view(p: parser) -> [@ast::view_item] {\n-    let items: [@ast::view_item] = [];\n-    while is_view_item(p) { items += [parse_view_item(p)]; }\n+    parse_view_while(p, is_view_item)\n+}\n+\n+fn parse_view_import_only(p: parser) -> [@ast::view_item] {\n+    parse_view_while(p, bind is_word(_, \"import\"))\n+}\n+\n+fn parse_view_while(p: parser, f: fn@(parser) -> bool) -> [@ast::view_item] {\n+    let items = [];\n+    while f(p) { items += [parse_view_item(p)]; }\n     ret items;\n }\n \n fn parse_native_view(p: parser) -> [@ast::view_item] {\n-    let items: [@ast::view_item] = [];\n-    while is_view_item(p) { items += [parse_view_item(p)]; }\n-    ret items;\n+    parse_view_while(p, is_view_item)\n }\n \n fn parse_crate_from_source_file(input: str, cfg: ast::crate_cfg,"}]}