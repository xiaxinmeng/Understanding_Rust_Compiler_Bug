{"sha": "9098f05b2605f15fa7b205f4e09f4d2bc8970a2c", "node_id": "C_kwDOAAsO6NoAKDkwOThmMDViMjYwNWYxNWZhN2IyMDVmNGUwOWY0ZDJiYzg5NzBhMmM", "commit": {"author": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2022-05-20T12:03:04Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-05-20T12:03:04Z"}, "message": "Rollup merge of #97188 - carbotaniuman:remove-null-assert, r=RalfJung\n\nRemove unneeded null pointer asserts in ptr2int casts\n\nThis removes an assert that a pointer with address 0 has no provenance. This change is needed to support permissive provenance work in Miri, and seems justified by `ptr.with_addr(0)` working and a discussion on Zulip regarding LLVM semantics.\n\nr? `@RalfJung`", "tree": {"sha": "35aa50f034b7a0af92101e4719a1a790beef8902", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/35aa50f034b7a0af92101e4719a1a790beef8902"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9098f05b2605f15fa7b205f4e09f4d2bc8970a2c", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJih4N4CRBK7hj4Ov3rIwAA0QMIAHF4NpFbWOU7LTuIT1sLvOQ0\nDT8PA3rBcf9dNyHMKZfM+XLqNicvBIIhmsqofqvASbEW2SWt3+8uKGrhgJ/36kpj\nF7Ifkui8ybwumuIdMdvPn+SASyJwdQ52zKItkexWN4ZSqNow4TsMS5TekpQT0V44\nsw705DMHwekywp6xfFulOQ+soWtaB/LpYT+ce2K8VBs9wADcEibPXbq0tNZkxo0v\nJELF5UYluuC6mZvhV0/Btt//AEUgU47bRDslxgoLsudO2G6a6lV3k0joya/F6lj+\newSXeBJD0TU16kV7KGFnXhyoEzeQH9mOqmspWvV3mkqwmvKH+r4toHdds5UeD1M=\n=f5UB\n-----END PGP SIGNATURE-----\n", "payload": "tree 35aa50f034b7a0af92101e4719a1a790beef8902\nparent 706aa59efa9d419ada5e54249edd422bd02fe03a\nparent e24673502fbf4ae00b42362eed2cf915ba352325\nauthor Guillaume Gomez <guillaume1.gomez@gmail.com> 1653048184 +0200\ncommitter GitHub <noreply@github.com> 1653048184 +0200\n\nRollup merge of #97188 - carbotaniuman:remove-null-assert, r=RalfJung\n\nRemove unneeded null pointer asserts in ptr2int casts\n\nThis removes an assert that a pointer with address 0 has no provenance. This change is needed to support permissive provenance work in Miri, and seems justified by `ptr.with_addr(0)` working and a discussion on Zulip regarding LLVM semantics.\n\nr? `@RalfJung`\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9098f05b2605f15fa7b205f4e09f4d2bc8970a2c", "html_url": "https://github.com/rust-lang/rust/commit/9098f05b2605f15fa7b205f4e09f4d2bc8970a2c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9098f05b2605f15fa7b205f4e09f4d2bc8970a2c/comments", "author": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "706aa59efa9d419ada5e54249edd422bd02fe03a", "url": "https://api.github.com/repos/rust-lang/rust/commits/706aa59efa9d419ada5e54249edd422bd02fe03a", "html_url": "https://github.com/rust-lang/rust/commit/706aa59efa9d419ada5e54249edd422bd02fe03a"}, {"sha": "e24673502fbf4ae00b42362eed2cf915ba352325", "url": "https://api.github.com/repos/rust-lang/rust/commits/e24673502fbf4ae00b42362eed2cf915ba352325", "html_url": "https://github.com/rust-lang/rust/commit/e24673502fbf4ae00b42362eed2cf915ba352325"}], "stats": {"total": 9, "additions": 1, "deletions": 8}, "files": [{"sha": "7cd2ba34b04a7235795cba1901e374723d103e9f", "filename": "compiler/rustc_const_eval/src/interpret/cast.rs", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/9098f05b2605f15fa7b205f4e09f4d2bc8970a2c/compiler%2Frustc_const_eval%2Fsrc%2Finterpret%2Fcast.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9098f05b2605f15fa7b205f4e09f4d2bc8970a2c/compiler%2Frustc_const_eval%2Fsrc%2Finterpret%2Fcast.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_const_eval%2Fsrc%2Finterpret%2Fcast.rs?ref=9098f05b2605f15fa7b205f4e09f4d2bc8970a2c", "patch": "@@ -225,9 +225,6 @@ impl<'mir, 'tcx: 'mir, M: Machine<'mir, 'tcx>> InterpCx<'mir, 'tcx, M> {\n                 let addr = u64::try_from(size.truncate(v)).unwrap();\n \n                 let ptr = M::ptr_from_addr_cast(&self, addr);\n-                if addr == 0 {\n-                    assert!(ptr.provenance.is_none(), \"null pointer can never have an AllocId\");\n-                }\n                 Scalar::from_maybe_pointer(ptr, self)\n             }\n "}, {"sha": "721abff689a549a4f90100e7b329d71082c7bc56", "filename": "compiler/rustc_const_eval/src/interpret/memory.rs", "status": "modified", "additions": 1, "deletions": 5, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/9098f05b2605f15fa7b205f4e09f4d2bc8970a2c/compiler%2Frustc_const_eval%2Fsrc%2Finterpret%2Fmemory.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9098f05b2605f15fa7b205f4e09f4d2bc8970a2c/compiler%2Frustc_const_eval%2Fsrc%2Finterpret%2Fmemory.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_const_eval%2Fsrc%2Finterpret%2Fmemory.rs?ref=9098f05b2605f15fa7b205f4e09f4d2bc8970a2c", "patch": "@@ -1149,11 +1149,7 @@ impl<'mir, 'tcx: 'mir, M: Machine<'mir, 'tcx>> InterpCx<'mir, 'tcx, M> {\n                 Err(ptr) => ptr.into(),\n                 Ok(bits) => {\n                     let addr = u64::try_from(bits).unwrap();\n-                    let ptr = M::ptr_from_addr_transmute(&self, addr);\n-                    if addr == 0 {\n-                        assert!(ptr.provenance.is_none(), \"null pointer can never have an AllocId\");\n-                    }\n-                    ptr\n+                    M::ptr_from_addr_transmute(&self, addr)\n                 }\n             },\n         )"}]}