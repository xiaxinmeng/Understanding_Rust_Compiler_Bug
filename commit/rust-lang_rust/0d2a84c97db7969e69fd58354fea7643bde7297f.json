{"sha": "0d2a84c97db7969e69fd58354fea7643bde7297f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjBkMmE4NGM5N2RiNzk2OWU2OWZkNTgzNTRmZWE3NjQzYmRlNzI5N2Y=", "commit": {"author": {"name": "Simonas Kazlauskas", "email": "git@kazlauskas.me", "date": "2016-05-26T00:13:32Z"}, "committer": {"name": "Simonas Kazlauskas", "email": "git@kazlauskas.me", "date": "2016-05-26T00:25:23Z"}, "message": "Fix the fix/hack interaction with debuginfo", "tree": {"sha": "9aaba6e4c8faa78c14f2342f513ea66f0ae1f929", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9aaba6e4c8faa78c14f2342f513ea66f0ae1f929"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0d2a84c97db7969e69fd58354fea7643bde7297f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0d2a84c97db7969e69fd58354fea7643bde7297f", "html_url": "https://github.com/rust-lang/rust/commit/0d2a84c97db7969e69fd58354fea7643bde7297f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0d2a84c97db7969e69fd58354fea7643bde7297f/comments", "author": {"login": "nagisa", "id": 679122, "node_id": "MDQ6VXNlcjY3OTEyMg==", "avatar_url": "https://avatars.githubusercontent.com/u/679122?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nagisa", "html_url": "https://github.com/nagisa", "followers_url": "https://api.github.com/users/nagisa/followers", "following_url": "https://api.github.com/users/nagisa/following{/other_user}", "gists_url": "https://api.github.com/users/nagisa/gists{/gist_id}", "starred_url": "https://api.github.com/users/nagisa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nagisa/subscriptions", "organizations_url": "https://api.github.com/users/nagisa/orgs", "repos_url": "https://api.github.com/users/nagisa/repos", "events_url": "https://api.github.com/users/nagisa/events{/privacy}", "received_events_url": "https://api.github.com/users/nagisa/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nagisa", "id": 679122, "node_id": "MDQ6VXNlcjY3OTEyMg==", "avatar_url": "https://avatars.githubusercontent.com/u/679122?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nagisa", "html_url": "https://github.com/nagisa", "followers_url": "https://api.github.com/users/nagisa/followers", "following_url": "https://api.github.com/users/nagisa/following{/other_user}", "gists_url": "https://api.github.com/users/nagisa/gists{/gist_id}", "starred_url": "https://api.github.com/users/nagisa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nagisa/subscriptions", "organizations_url": "https://api.github.com/users/nagisa/orgs", "repos_url": "https://api.github.com/users/nagisa/repos", "events_url": "https://api.github.com/users/nagisa/events{/privacy}", "received_events_url": "https://api.github.com/users/nagisa/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b9d014b73adc34c9c19c0f6a5ae13998e46fbb6e", "url": "https://api.github.com/repos/rust-lang/rust/commits/b9d014b73adc34c9c19c0f6a5ae13998e46fbb6e", "html_url": "https://github.com/rust-lang/rust/commit/b9d014b73adc34c9c19c0f6a5ae13998e46fbb6e"}], "stats": {"total": 23, "additions": 13, "deletions": 10}, "files": [{"sha": "f190015d024988cbf72916d9de05d1f73eedc436", "filename": "src/librustc_trans/base.rs", "status": "modified", "additions": 13, "deletions": 10, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/0d2a84c97db7969e69fd58354fea7643bde7297f/src%2Flibrustc_trans%2Fbase.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0d2a84c97db7969e69fd58354fea7643bde7297f/src%2Flibrustc_trans%2Fbase.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Fbase.rs?ref=0d2a84c97db7969e69fd58354fea7643bde7297f", "patch": "@@ -1721,16 +1721,19 @@ impl<'blk, 'tcx> FunctionContext<'blk, 'tcx> {\n             };\n \n             let pat = &hir_arg.pat;\n-            bcx = if let Some(name) = simple_name(pat) {\n-                // Generate nicer LLVM for the common case of fn a pattern\n-                // like `x: T`\n-                set_value_name(arg_datum.val, &bcx.name(name));\n-                self.lllocals.borrow_mut().insert(pat.id, arg_datum);\n-                bcx\n-            } else {\n-                // General path. Copy out the values that are used in the\n-                // pattern.\n-                _match::bind_irrefutable_pat(bcx, pat, arg_datum.match_input(), arg_scope_id)\n+            bcx = match simple_name(pat) {\n+                // The check for alloca is necessary because above for the immediate argument case\n+                // we had to cast. At this point arg_datum is not an alloca anymore and thus\n+                // breaks debuginfo if we allow this optimisation.\n+                Some(name)\n+                if unsafe { llvm::LLVMIsAAllocaInst(arg_datum.val) != ::std::ptr::null_mut() } => {\n+                    // Generate nicer LLVM for the common case of fn a pattern\n+                    // like `x: T`\n+                    set_value_name(arg_datum.val, &bcx.name(name));\n+                    self.lllocals.borrow_mut().insert(pat.id, arg_datum);\n+                    bcx\n+                },\n+                _ => _match::bind_irrefutable_pat(bcx, pat, arg_datum.match_input(), arg_scope_id)\n             };\n             debuginfo::create_argument_metadata(bcx, hir_arg);\n         }"}]}