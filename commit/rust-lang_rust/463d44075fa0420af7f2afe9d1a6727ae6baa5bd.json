{"sha": "463d44075fa0420af7f2afe9d1a6727ae6baa5bd", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ2M2Q0NDA3NWZhMDQyMGFmN2YyYWZlOWQxYTY3MjdhZTZiYWE1YmQ=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2020-08-25T10:48:51Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-08-25T10:48:51Z"}, "message": "Merge #5869\n\n5869: Minor\n r=matklad a=matklad\n\nbors r+\n\ud83e\udd16\n\nCo-authored-by: Aleksey Kladov <aleksey.kladov@gmail.com>", "tree": {"sha": "c40e4d916b2efcd4c7debabbb183b05c08bb7fad", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c40e4d916b2efcd4c7debabbb183b05c08bb7fad"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/463d44075fa0420af7f2afe9d1a6727ae6baa5bd", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJfROyUCRBK7hj4Ov3rIwAAdHIIAFlGuXyv3sVRecwhrAsp5ph3\nSZGIcyidhwe5lY6Vuj/N18NYoo5OgFN8U6709fA0Fpn0kB3b6OrvSAZDytDB33ai\nmmFtqdVMgNLZ0YjUnScmh4ittR5V2WhMHn5DWmDdpdRmqfsvxrCbqvMkB9WholrY\nHrFS0LDTEfV8XjYduaax4dEEVosAq8/7lc1v4FpaJId8eFmD8ouNDslPjZHLqJzB\nnutZ84jSU5EGlIRBTvm7SBjIl8gF//ETB5zZNLVVdKS2YLWsq1td2iks0wJXe3FT\nlHL7dWR83klpQmFQCUsh/Q0uURAW3NhjrnFesQrS22IIn44D3S41Sqex269GoYk=\n=zOys\n-----END PGP SIGNATURE-----\n", "payload": "tree c40e4d916b2efcd4c7debabbb183b05c08bb7fad\nparent 4f91478e50dc5c2a87235e9be8bd91e3f62de4b4\nparent 663749beab2eeaaaf2b7d24fe2f721237d1d4dc0\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1598352531 +0000\ncommitter GitHub <noreply@github.com> 1598352531 +0000\n\nMerge #5869\n\n5869: Minor\n r=matklad a=matklad\n\nbors r+\n\ud83e\udd16\n\nCo-authored-by: Aleksey Kladov <aleksey.kladov@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/463d44075fa0420af7f2afe9d1a6727ae6baa5bd", "html_url": "https://github.com/rust-lang/rust/commit/463d44075fa0420af7f2afe9d1a6727ae6baa5bd", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/463d44075fa0420af7f2afe9d1a6727ae6baa5bd/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4f91478e50dc5c2a87235e9be8bd91e3f62de4b4", "url": "https://api.github.com/repos/rust-lang/rust/commits/4f91478e50dc5c2a87235e9be8bd91e3f62de4b4", "html_url": "https://github.com/rust-lang/rust/commit/4f91478e50dc5c2a87235e9be8bd91e3f62de4b4"}, {"sha": "663749beab2eeaaaf2b7d24fe2f721237d1d4dc0", "url": "https://api.github.com/repos/rust-lang/rust/commits/663749beab2eeaaaf2b7d24fe2f721237d1d4dc0", "html_url": "https://github.com/rust-lang/rust/commit/663749beab2eeaaaf2b7d24fe2f721237d1d4dc0"}], "stats": {"total": 15, "additions": 6, "deletions": 9}, "files": [{"sha": "a77758675a0c7f054c629de2ed443216243ab776", "filename": "crates/hir/src/doc_links.rs", "status": "modified", "additions": 6, "deletions": 9, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/463d44075fa0420af7f2afe9d1a6727ae6baa5bd/crates%2Fhir%2Fsrc%2Fdoc_links.rs", "raw_url": "https://github.com/rust-lang/rust/raw/463d44075fa0420af7f2afe9d1a6727ae6baa5bd/crates%2Fhir%2Fsrc%2Fdoc_links.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir%2Fsrc%2Fdoc_links.rs?ref=463d44075fa0420af7f2afe9d1a6727ae6baa5bd", "patch": "@@ -2,12 +2,12 @@\n \n use std::iter::once;\n \n+use hir_def::{db::DefDatabase, resolver::Resolver};\n use itertools::Itertools;\n+use syntax::ast::Path;\n use url::Url;\n \n use crate::{db::HirDatabase, Adt, AsName, Crate, Hygiene, ItemInNs, ModPath, ModuleDef};\n-use hir_def::{db::DefDatabase, resolver::Resolver};\n-use syntax::ast::Path;\n \n pub fn resolve_doc_link<T: Resolvable + Clone, D: DefDatabase + HirDatabase>(\n     db: &D,\n@@ -16,12 +16,9 @@ pub fn resolve_doc_link<T: Resolvable + Clone, D: DefDatabase + HirDatabase>(\n     link_target: &str,\n ) -> Option<(String, String)> {\n     try_resolve_intra(db, definition, link_text, &link_target).or_else(|| {\n-        if let Some(definition) = definition.clone().try_into_module_def() {\n-            try_resolve_path(db, &definition, &link_target)\n-                .map(|target| (target, link_text.to_string()))\n-        } else {\n-            None\n-        }\n+        let definition = definition.clone().try_into_module_def()?;\n+        try_resolve_path(db, &definition, &link_target)\n+            .map(|target| (target, link_text.to_string()))\n     })\n }\n \n@@ -57,7 +54,7 @@ fn try_resolve_intra<T: Resolvable, D: DefDatabase + HirDatabase>(\n         Some(ns @ Namespace::Types) => (resolved.types?.0, ns),\n         Some(ns @ Namespace::Values) => (resolved.values?.0, ns),\n         // FIXME:\n-        Some(Namespace::Macros) => None?,\n+        Some(Namespace::Macros) => return None,\n     };\n \n     // Get the filepath of the final symbol"}]}