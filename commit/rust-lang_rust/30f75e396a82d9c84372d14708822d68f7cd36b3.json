{"sha": "30f75e396a82d9c84372d14708822d68f7cd36b3", "node_id": "MDY6Q29tbWl0NzI0NzEyOjMwZjc1ZTM5NmE4MmQ5Yzg0MzcyZDE0NzA4ODIyZDY4ZjdjZDM2YjM=", "commit": {"author": {"name": "Andy Russell", "email": "arussell123@gmail.com", "date": "2016-11-13T20:56:23Z"}, "committer": {"name": "Andy Russell", "email": "arussell123@gmail.com", "date": "2016-11-14T00:00:56Z"}, "message": "do not use deprecated text for unstable docs", "tree": {"sha": "9d251b6cea7b3f9648a9e8762d84d4de14e3c85a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9d251b6cea7b3f9648a9e8762d84d4de14e3c85a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/30f75e396a82d9c84372d14708822d68f7cd36b3", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQEzBAABCAAdBQJYKP68FhxhcnVzc2VsbDEyM0BnbWFpbC5jb20ACgkQviIhAz7b\nw3SZKggAkWU+enG/Zx0EJvOxE7jGboMOyJUkSXtUJ6UkmSO7dwGDcRnueBye1YOq\ncwXf4Jcib5svNqD3204ZuTyK/PBReXDvrLZctbBceUycMCIZhPY73/uSQ8gSU3D3\nOVgs7m0qP9ylLM301HJZp7o10XQVhgI4gMffimLkt8FNNdMpxHma7l0VLsd/s/u2\nmHfoNhYiv2FoxcNOgsj17lvvqqgjRIi0OI234jylUQCaYaNBuznwyJyhV/GXO5XF\nk4au6cFqWKWTZlCtZSArDCU00bWThl9dYRMCnH7B/JRYbBSUKWqDd/0JSRalR3V1\n01NtRUOoOYzKFofoMtowopff/fh07w==\n=QxEG\n-----END PGP SIGNATURE-----", "payload": "tree 9d251b6cea7b3f9648a9e8762d84d4de14e3c85a\nparent ea02f87daab14fff71af751c8e3f66b689cac3cd\nauthor Andy Russell <arussell123@gmail.com> 1479070583 -0500\ncommitter Andy Russell <arussell123@gmail.com> 1479081656 -0500\n\ndo not use deprecated text for unstable docs\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/30f75e396a82d9c84372d14708822d68f7cd36b3", "html_url": "https://github.com/rust-lang/rust/commit/30f75e396a82d9c84372d14708822d68f7cd36b3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/30f75e396a82d9c84372d14708822d68f7cd36b3/comments", "author": {"login": "euclio", "id": 1372438, "node_id": "MDQ6VXNlcjEzNzI0Mzg=", "avatar_url": "https://avatars.githubusercontent.com/u/1372438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/euclio", "html_url": "https://github.com/euclio", "followers_url": "https://api.github.com/users/euclio/followers", "following_url": "https://api.github.com/users/euclio/following{/other_user}", "gists_url": "https://api.github.com/users/euclio/gists{/gist_id}", "starred_url": "https://api.github.com/users/euclio/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/euclio/subscriptions", "organizations_url": "https://api.github.com/users/euclio/orgs", "repos_url": "https://api.github.com/users/euclio/repos", "events_url": "https://api.github.com/users/euclio/events{/privacy}", "received_events_url": "https://api.github.com/users/euclio/received_events", "type": "User", "site_admin": false}, "committer": {"login": "euclio", "id": 1372438, "node_id": "MDQ6VXNlcjEzNzI0Mzg=", "avatar_url": "https://avatars.githubusercontent.com/u/1372438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/euclio", "html_url": "https://github.com/euclio", "followers_url": "https://api.github.com/users/euclio/followers", "following_url": "https://api.github.com/users/euclio/following{/other_user}", "gists_url": "https://api.github.com/users/euclio/gists{/gist_id}", "starred_url": "https://api.github.com/users/euclio/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/euclio/subscriptions", "organizations_url": "https://api.github.com/users/euclio/orgs", "repos_url": "https://api.github.com/users/euclio/repos", "events_url": "https://api.github.com/users/euclio/events{/privacy}", "received_events_url": "https://api.github.com/users/euclio/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ea02f87daab14fff71af751c8e3f66b689cac3cd", "url": "https://api.github.com/repos/rust-lang/rust/commits/ea02f87daab14fff71af751c8e3f66b689cac3cd", "html_url": "https://github.com/rust-lang/rust/commit/ea02f87daab14fff71af751c8e3f66b689cac3cd"}], "stats": {"total": 42, "additions": 28, "deletions": 14}, "files": [{"sha": "4d70c64634fb03c1d99517deeac1a2f53054eee4", "filename": "src/librustdoc/clean/mod.rs", "status": "modified", "additions": 9, "deletions": 7, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/30f75e396a82d9c84372d14708822d68f7cd36b3/src%2Flibrustdoc%2Fclean%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/30f75e396a82d9c84372d14708822d68f7cd36b3/src%2Flibrustdoc%2Fclean%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fclean%2Fmod.rs?ref=30f75e396a82d9c84372d14708822d68f7cd36b3", "patch": "@@ -2890,7 +2890,8 @@ pub struct Stability {\n     pub feature: String,\n     pub since: String,\n     pub deprecated_since: String,\n-    pub reason: String,\n+    pub deprecated_reason: String,\n+    pub unstable_reason: String,\n     pub issue: Option<u32>\n }\n \n@@ -2913,12 +2914,13 @@ impl Clean<Stability> for attr::Stability {\n                 Some(attr::RustcDeprecation {ref since, ..}) => since.to_string(),\n                 _=> \"\".to_string(),\n             },\n-            reason: {\n-                match (&self.rustc_depr, &self.level) {\n-                    (&Some(ref depr), _) => depr.reason.to_string(),\n-                    (&None, &attr::Unstable {reason: Some(ref reason), ..}) => reason.to_string(),\n-                    _ => \"\".to_string(),\n-                }\n+            deprecated_reason: match self.rustc_depr {\n+                Some(ref depr) => depr.reason.to_string(),\n+                _ => \"\".to_string(),\n+            },\n+            unstable_reason: match self.level {\n+                attr::Unstable { reason: Some(ref reason), .. } => reason.to_string(),\n+                _ => \"\".to_string(),\n             },\n             issue: match self.level {\n                 attr::Unstable {issue, ..} => Some(issue),"}, {"sha": "90f954aa86abe0abaa73e621bffcfcb61aada5b2", "filename": "src/librustdoc/html/render.rs", "status": "modified", "additions": 9, "deletions": 4, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/30f75e396a82d9c84372d14708822d68f7cd36b3/src%2Flibrustdoc%2Fhtml%2Frender.rs", "raw_url": "https://github.com/rust-lang/rust/raw/30f75e396a82d9c84372d14708822d68f7cd36b3/src%2Flibrustdoc%2Fhtml%2Frender.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Frender.rs?ref=30f75e396a82d9c84372d14708822d68f7cd36b3", "patch": "@@ -1878,8 +1878,8 @@ fn short_stability(item: &clean::Item, cx: &Context, show_reason: bool) -> Vec<S\n     let mut stability = vec![];\n \n     if let Some(stab) = item.stability.as_ref() {\n-        let reason = if show_reason && !stab.reason.is_empty() {\n-            format!(\": {}\", stab.reason)\n+        let deprecated_reason = if show_reason && !stab.deprecated_reason.is_empty() {\n+            format!(\": {}\", stab.deprecated_reason)\n         } else {\n             String::new()\n         };\n@@ -1889,7 +1889,7 @@ fn short_stability(item: &clean::Item, cx: &Context, show_reason: bool) -> Vec<S\n             } else {\n                 String::new()\n             };\n-            let text = format!(\"Deprecated{}{}\", since, Markdown(&reason));\n+            let text = format!(\"Deprecated{}{}\", since, Markdown(&deprecated_reason));\n             stability.push(format!(\"<em class='stab deprecated'>{}</em>\", text))\n         };\n \n@@ -1909,7 +1909,12 @@ fn short_stability(item: &clean::Item, cx: &Context, show_reason: bool) -> Vec<S\n             } else {\n                 String::new()\n             };\n-            let text = format!(\"Unstable{}{}\", unstable_extra, Markdown(&reason));\n+            let unstable_reason = if show_reason && !stab.unstable_reason.is_empty() {\n+                format!(\": {}\", stab.unstable_reason)\n+            } else {\n+                String::new()\n+            };\n+            let text = format!(\"Unstable{}{}\", unstable_extra, Markdown(&unstable_reason));\n             stability.push(format!(\"<em class='stab unstable'>{}</em>\", text))\n         };\n     } else if let Some(depr) = item.deprecation.as_ref() {"}, {"sha": "2977e340a3c0c10b2e9f50320fc8a80f1ebe6692", "filename": "src/libsyntax/attr.rs", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/30f75e396a82d9c84372d14708822d68f7cd36b3/src%2Flibsyntax%2Fattr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/30f75e396a82d9c84372d14708822d68f7cd36b3/src%2Flibsyntax%2Fattr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fattr.rs?ref=30f75e396a82d9c84372d14708822d68f7cd36b3", "patch": "@@ -789,9 +789,6 @@ fn find_stability_generic<'a, I>(diagnostic: &Handler,\n     // Merge the deprecation info into the stability info\n     if let Some(rustc_depr) = rustc_depr {\n         if let Some(ref mut stab) = stab {\n-            if let Unstable {reason: ref mut reason @ None, ..} = stab.level {\n-                *reason = Some(rustc_depr.reason.clone())\n-            }\n             stab.rustc_depr = Some(rustc_depr);\n         } else {\n             span_err!(diagnostic, item_sp, E0549,"}, {"sha": "dea73317e5e3d144ca90feb4381e539abec69929", "filename": "src/test/rustdoc/issue-32374.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/30f75e396a82d9c84372d14708822d68f7cd36b3/src%2Ftest%2Frustdoc%2Fissue-32374.rs", "raw_url": "https://github.com/rust-lang/rust/raw/30f75e396a82d9c84372d14708822d68f7cd36b3/src%2Ftest%2Frustdoc%2Fissue-32374.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fissue-32374.rs?ref=30f75e396a82d9c84372d14708822d68f7cd36b3", "patch": "@@ -20,6 +20,16 @@\n //      'Deprecated since 1.0.0: text'\n // @has - '<code>test</code>'\n // @has - '<a href=\"http://issue_url/32374\">#32374</a>'\n+// @matches issue_32374/struct.T.html '//*[@class=\"stab unstable\"]' \\\n+//      'Unstable \\(test #32374\\)$'\n #[rustc_deprecated(since = \"1.0.0\", reason = \"text\")]\n #[unstable(feature = \"test\", issue = \"32374\")]\n pub struct T;\n+\n+// @has issue_32374/struct.U.html '//*[@class=\"stab deprecated\"]' \\\n+//      'Deprecated since 1.0.0: deprecated'\n+// @has issue_32374/struct.U.html '//*[@class=\"stab unstable\"]' \\\n+//      'Unstable (test #32374): unstable'\n+#[rustc_deprecated(since = \"1.0.0\", reason = \"deprecated\")]\n+#[unstable(feature = \"test\", issue = \"32374\", reason = \"unstable\")]\n+pub struct U;"}]}