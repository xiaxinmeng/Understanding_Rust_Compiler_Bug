{"sha": "abca1dededc504eeff7fb31fb2f92e54c7ddae0e", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFiY2ExZGVkZWRjNTA0ZWVmZjdmYjMxZmIyZjkyZTU0YzdkZGFlMGU=", "commit": {"author": {"name": "C4K3", "email": "github25b@c4k3.net", "date": "2017-03-26T05:32:29Z"}, "committer": {"name": "Nick Cameron", "email": "nrc@ncameron.org", "date": "2017-03-26T05:32:29Z"}, "message": "Add indent_match_arms option (#1404)\n\nMakes it optional whether to indent arms in match expressions. Setting this\r\nto false may be desirable for people wishing to avoid double-indents, in\r\nthat if the match arm is a block, the block will cause an extra indentation\r\nlevel, and if it isn't a block but just a single line, it's still easy to\r\nsee the logic at a glance.\r\n\r\nThis style is preferred in certain other languages with switch statements,\r\ne.g. Linux style C and the most common Java style.", "tree": {"sha": "176cc589852c7f712d70ca6c2d049d562a761cbb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/176cc589852c7f712d70ca6c2d049d562a761cbb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/abca1dededc504eeff7fb31fb2f92e54c7ddae0e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/abca1dededc504eeff7fb31fb2f92e54c7ddae0e", "html_url": "https://github.com/rust-lang/rust/commit/abca1dededc504eeff7fb31fb2f92e54c7ddae0e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/abca1dededc504eeff7fb31fb2f92e54c7ddae0e/comments", "author": {"login": "C4K3", "id": 4582830, "node_id": "MDQ6VXNlcjQ1ODI4MzA=", "avatar_url": "https://avatars.githubusercontent.com/u/4582830?v=4", "gravatar_id": "", "url": "https://api.github.com/users/C4K3", "html_url": "https://github.com/C4K3", "followers_url": "https://api.github.com/users/C4K3/followers", "following_url": "https://api.github.com/users/C4K3/following{/other_user}", "gists_url": "https://api.github.com/users/C4K3/gists{/gist_id}", "starred_url": "https://api.github.com/users/C4K3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/C4K3/subscriptions", "organizations_url": "https://api.github.com/users/C4K3/orgs", "repos_url": "https://api.github.com/users/C4K3/repos", "events_url": "https://api.github.com/users/C4K3/events{/privacy}", "received_events_url": "https://api.github.com/users/C4K3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nrc", "id": 762626, "node_id": "MDQ6VXNlcjc2MjYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/762626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nrc", "html_url": "https://github.com/nrc", "followers_url": "https://api.github.com/users/nrc/followers", "following_url": "https://api.github.com/users/nrc/following{/other_user}", "gists_url": "https://api.github.com/users/nrc/gists{/gist_id}", "starred_url": "https://api.github.com/users/nrc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nrc/subscriptions", "organizations_url": "https://api.github.com/users/nrc/orgs", "repos_url": "https://api.github.com/users/nrc/repos", "events_url": "https://api.github.com/users/nrc/events{/privacy}", "received_events_url": "https://api.github.com/users/nrc/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0dd0cc1941d5ef8222e36d54b0efd38628d589ee", "url": "https://api.github.com/repos/rust-lang/rust/commits/0dd0cc1941d5ef8222e36d54b0efd38628d589ee", "html_url": "https://github.com/rust-lang/rust/commit/0dd0cc1941d5ef8222e36d54b0efd38628d589ee"}], "stats": {"total": 65, "additions": 64, "deletions": 1}, "files": [{"sha": "3793e1fd2909aa0c38efe300b092fa431f67f695", "filename": "src/config.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/abca1dededc504eeff7fb31fb2f92e54c7ddae0e/src%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/abca1dededc504eeff7fb31fb2f92e54c7ddae0e/src%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fconfig.rs?ref=abca1dededc504eeff7fb31fb2f92e54c7ddae0e", "patch": "@@ -388,6 +388,8 @@ create_config! {\n     wrap_match_arms: bool, true, \"Wrap multiline match arms in blocks\";\n     match_block_trailing_comma: bool, false,\n         \"Put a trailing comma after a block based match arm (non-block arms are not affected)\";\n+    indent_match_arms: bool, true, \"Indent match arms instead of keeping them at the same \\\n+                                    indentation level as the match keyword\";\n     closure_block_indent_threshold: isize, 7, \"How many lines a closure must have before it is \\\n                                                block indented. -1 means never use block indent.\";\n     space_before_type_annotation: bool, false,"}, {"sha": "6ab9e1c339351510e08173a803d4a0b2c4bf2527", "filename": "src/expr.rs", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/abca1dededc504eeff7fb31fb2f92e54c7ddae0e/src%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/abca1dededc504eeff7fb31fb2f92e54c7ddae0e/src%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fexpr.rs?ref=abca1dededc504eeff7fb31fb2f92e54c7ddae0e", "patch": "@@ -1137,7 +1137,12 @@ fn rewrite_match(context: &RewriteContext,\n     };\n     let mut result = format!(\"match {}{}{{\", cond_str, block_sep);\n \n-    let arm_shape = shape.block_indent(context.config.tab_spaces);\n+    let arm_shape = if context.config.indent_match_arms {\n+        shape.block_indent(context.config.tab_spaces)\n+    } else {\n+        shape.block_indent(0)\n+    };\n+\n     let arm_indent_str = arm_shape.indent.to_string(context.config);\n \n     let open_brace_pos = context.codemap.span_after(mk_sp(cond.span.hi, arm_start_pos(&arms[0])),"}, {"sha": "ecadbe705ffe4566a9e1c2a744e68a5434f16017", "filename": "tests/source/indent_match_arms.rs", "status": "added", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/abca1dededc504eeff7fb31fb2f92e54c7ddae0e/tests%2Fsource%2Findent_match_arms.rs", "raw_url": "https://github.com/rust-lang/rust/raw/abca1dededc504eeff7fb31fb2f92e54c7ddae0e/tests%2Fsource%2Findent_match_arms.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fsource%2Findent_match_arms.rs?ref=abca1dededc504eeff7fb31fb2f92e54c7ddae0e", "patch": "@@ -0,0 +1,27 @@\n+// rustfmt-indent_match_arms: false\n+\n+fn main() {\n+    match x {\n+        1 => \"one\",\n+        2 => \"two\",\n+        3 => \"three\",\n+        4 => \"four\",\n+        5 => \"five\",\n+        _ => \"something else\",\n+    }\n+\n+    match x {\n+        1 => \"one\",\n+        2 => \"two\",\n+        3 => \"three\",\n+        4 => \"four\",\n+        5 => match y {\n+            'a' => 'A',\n+            'b' => 'B',\n+            'c' => 'C',\n+            _ => \"Nope\",\n+        },\n+        _ => \"something else\",\n+    }\n+\n+}"}, {"sha": "60e7b67ceb4be8cf3ed899906ebeb7a5758863c7", "filename": "tests/target/indent_match_arms.rs", "status": "added", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/abca1dededc504eeff7fb31fb2f92e54c7ddae0e/tests%2Ftarget%2Findent_match_arms.rs", "raw_url": "https://github.com/rust-lang/rust/raw/abca1dededc504eeff7fb31fb2f92e54c7ddae0e/tests%2Ftarget%2Findent_match_arms.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Findent_match_arms.rs?ref=abca1dededc504eeff7fb31fb2f92e54c7ddae0e", "patch": "@@ -0,0 +1,29 @@\n+// rustfmt-indent_match_arms: false\n+\n+fn main() {\n+    match x {\n+    1 => \"one\",\n+    2 => \"two\",\n+    3 => \"three\",\n+    4 => \"four\",\n+    5 => \"five\",\n+    _ => \"something else\",\n+    }\n+\n+    match x {\n+    1 => \"one\",\n+    2 => \"two\",\n+    3 => \"three\",\n+    4 => \"four\",\n+    5 => {\n+        match y {\n+        'a' => 'A',\n+        'b' => 'B',\n+        'c' => 'C',\n+        _ => \"Nope\",\n+        }\n+    }\n+    _ => \"something else\",\n+    }\n+\n+}"}]}