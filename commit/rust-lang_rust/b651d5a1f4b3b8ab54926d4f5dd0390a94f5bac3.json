{"sha": "b651d5a1f4b3b8ab54926d4f5dd0390a94f5bac3", "node_id": "C_kwDOAAsO6NoAKGI2NTFkNWExZjRiM2I4YWI1NDkyNmQ0ZjVkZDAzOTBhOTRmNWJhYzM", "commit": {"author": {"name": "Michael Goulet", "email": "michael@errs.io", "date": "2022-01-18T04:38:38Z"}, "committer": {"name": "Michael Goulet", "email": "michael@errs.io", "date": "2022-01-18T05:13:43Z"}, "message": "Fix Inline MIR pass on a function with un-satisfiable bounds", "tree": {"sha": "1ba6ee0576696720278ff309eebcfbbb768bd8e2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1ba6ee0576696720278ff309eebcfbbb768bd8e2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b651d5a1f4b3b8ab54926d4f5dd0390a94f5bac3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b651d5a1f4b3b8ab54926d4f5dd0390a94f5bac3", "html_url": "https://github.com/rust-lang/rust/commit/b651d5a1f4b3b8ab54926d4f5dd0390a94f5bac3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b651d5a1f4b3b8ab54926d4f5dd0390a94f5bac3/comments", "author": {"login": "compiler-errors", "id": 3674314, "node_id": "MDQ6VXNlcjM2NzQzMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3674314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/compiler-errors", "html_url": "https://github.com/compiler-errors", "followers_url": "https://api.github.com/users/compiler-errors/followers", "following_url": "https://api.github.com/users/compiler-errors/following{/other_user}", "gists_url": "https://api.github.com/users/compiler-errors/gists{/gist_id}", "starred_url": "https://api.github.com/users/compiler-errors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/compiler-errors/subscriptions", "organizations_url": "https://api.github.com/users/compiler-errors/orgs", "repos_url": "https://api.github.com/users/compiler-errors/repos", "events_url": "https://api.github.com/users/compiler-errors/events{/privacy}", "received_events_url": "https://api.github.com/users/compiler-errors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "compiler-errors", "id": 3674314, "node_id": "MDQ6VXNlcjM2NzQzMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3674314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/compiler-errors", "html_url": "https://github.com/compiler-errors", "followers_url": "https://api.github.com/users/compiler-errors/followers", "following_url": "https://api.github.com/users/compiler-errors/following{/other_user}", "gists_url": "https://api.github.com/users/compiler-errors/gists{/gist_id}", "starred_url": "https://api.github.com/users/compiler-errors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/compiler-errors/subscriptions", "organizations_url": "https://api.github.com/users/compiler-errors/orgs", "repos_url": "https://api.github.com/users/compiler-errors/repos", "events_url": "https://api.github.com/users/compiler-errors/events{/privacy}", "received_events_url": "https://api.github.com/users/compiler-errors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ee5d8d37baaf5b5a81a98396952839c73ae41c68", "url": "https://api.github.com/repos/rust-lang/rust/commits/ee5d8d37baaf5b5a81a98396952839c73ae41c68", "html_url": "https://github.com/rust-lang/rust/commit/ee5d8d37baaf5b5a81a98396952839c73ae41c68"}], "stats": {"total": 37, "additions": 35, "deletions": 2}, "files": [{"sha": "6220daa0b6b0f2f9af7d2b0167d43b5eaa6b937b", "filename": "compiler/rustc_mir_transform/src/inline.rs", "status": "modified", "additions": 11, "deletions": 2, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/b651d5a1f4b3b8ab54926d4f5dd0390a94f5bac3/compiler%2Frustc_mir_transform%2Fsrc%2Finline.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b651d5a1f4b3b8ab54926d4f5dd0390a94f5bac3/compiler%2Frustc_mir_transform%2Fsrc%2Finline.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir_transform%2Fsrc%2Finline.rs?ref=b651d5a1f4b3b8ab54926d4f5dd0390a94f5bac3", "patch": "@@ -7,6 +7,7 @@ use rustc_index::vec::Idx;\n use rustc_middle::middle::codegen_fn_attrs::{CodegenFnAttrFlags, CodegenFnAttrs};\n use rustc_middle::mir::visit::*;\n use rustc_middle::mir::*;\n+use rustc_middle::traits::ObligationCause;\n use rustc_middle::ty::subst::Subst;\n use rustc_middle::ty::{self, ConstKind, Instance, InstanceDef, ParamEnv, Ty, TyCtxt};\n use rustc_span::{hygiene::ExpnKind, ExpnData, Span};\n@@ -75,10 +76,18 @@ fn inline<'tcx>(tcx: TyCtxt<'tcx>, body: &mut Body<'tcx>) -> bool {\n         return false;\n     }\n \n+    let param_env = tcx.param_env_reveal_all_normalized(def_id);\n+    let param_env = rustc_trait_selection::traits::normalize_param_env_or_error(\n+        tcx,\n+        def_id,\n+        param_env,\n+        ObligationCause::misc(body.span, hir_id),\n+    );\n+\n     let mut this = Inliner {\n         tcx,\n-        param_env: tcx.param_env_reveal_all_normalized(body.source.def_id()),\n-        codegen_fn_attrs: tcx.codegen_fn_attrs(body.source.def_id()),\n+        param_env,\n+        codegen_fn_attrs: tcx.codegen_fn_attrs(def_id),\n         hir_id,\n         history: Vec::new(),\n         changed: false,"}, {"sha": "a0c60898c156cff3e566f786c1ac96fab3dfd1ff", "filename": "compiler/rustc_trait_selection/src/traits/codegen.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b651d5a1f4b3b8ab54926d4f5dd0390a94f5bac3/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fcodegen.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b651d5a1f4b3b8ab54926d4f5dd0390a94f5bac3/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fcodegen.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fcodegen.rs?ref=b651d5a1f4b3b8ab54926d4f5dd0390a94f5bac3", "patch": "@@ -65,6 +65,8 @@ pub fn codegen_fulfill_obligation<'tcx>(\n             Err(Unimplemented) => {\n                 // This can trigger when we probe for the source of a `'static` lifetime requirement\n                 // on a trait object: `impl Foo for dyn Trait {}` has an implicit `'static` bound.\n+                // This can also trigger when we have a global bound that is not actually satisfied,\n+                // but was included during typeck due to the trivial_bounds feature.\n                 infcx.tcx.sess.delay_span_bug(\n                     rustc_span::DUMMY_SP,\n                     &format!("}, {"sha": "1b010566cbc6ed5ef9733fd794e541fd17558eab", "filename": "src/test/ui/trait-bounds/issue-93008.rs", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/b651d5a1f4b3b8ab54926d4f5dd0390a94f5bac3/src%2Ftest%2Fui%2Ftrait-bounds%2Fissue-93008.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b651d5a1f4b3b8ab54926d4f5dd0390a94f5bac3/src%2Ftest%2Fui%2Ftrait-bounds%2Fissue-93008.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftrait-bounds%2Fissue-93008.rs?ref=b651d5a1f4b3b8ab54926d4f5dd0390a94f5bac3", "patch": "@@ -0,0 +1,10 @@\n+// compile-flags: -Zmir-opt-level=4\n+\n+pub fn bar<T>(s: &'static mut ())\n+where\n+    &'static mut (): Clone, //~ ERROR the trait bound\n+{\n+    <&'static mut () as Clone>::clone(&s);\n+}\n+\n+fn main() {}"}, {"sha": "10f80f8de0c9b8267a8f8c6466cba7048bae10f7", "filename": "src/test/ui/trait-bounds/issue-93008.stderr", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/b651d5a1f4b3b8ab54926d4f5dd0390a94f5bac3/src%2Ftest%2Fui%2Ftrait-bounds%2Fissue-93008.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b651d5a1f4b3b8ab54926d4f5dd0390a94f5bac3/src%2Ftest%2Fui%2Ftrait-bounds%2Fissue-93008.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftrait-bounds%2Fissue-93008.stderr?ref=b651d5a1f4b3b8ab54926d4f5dd0390a94f5bac3", "patch": "@@ -0,0 +1,12 @@\n+error[E0277]: the trait bound `&'static mut (): Clone` is not satisfied\n+  --> $DIR/issue-93008.rs:5:5\n+   |\n+LL |     &'static mut (): Clone,\n+   |     ^^^^^^^^^^^^^^^^^^^^^^ the trait `Clone` is not implemented for `&'static mut ()`\n+   |\n+   = help: see issue #48214\n+   = help: add `#![feature(trivial_bounds)]` to the crate attributes to enable\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0277`."}]}