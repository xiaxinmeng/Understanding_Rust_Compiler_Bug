{"sha": "e82b65026dcadf0998e3abf9dabc677f63160de7", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU4MmI2NTAyNmRjYWRmMDk5OGUzYWJmOWRhYmM2NzdmNjMxNjBkZTc=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-06-20T20:07:13Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-06-20T20:07:13Z"}, "message": "Auto merge of #85538 - r00ster91:iterrepeat, r=Mark-Simulacrum\n\nReplace some `std::iter::repeat` with `str::repeat`\n\nI noticed that there were some instances where `std::iter::repeat` would be used to repeat a string or a char to take a specific count of it and then collect it into a `String` when `str::repeat` is actually much faster and better for that.\n\nSee also: https://github.com/rust-lang/rust-clippy/issues/7260.", "tree": {"sha": "0670c35787abd16bdadd0bac977a6a37d4050557", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0670c35787abd16bdadd0bac977a6a37d4050557"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e82b65026dcadf0998e3abf9dabc677f63160de7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e82b65026dcadf0998e3abf9dabc677f63160de7", "html_url": "https://github.com/rust-lang/rust/commit/e82b65026dcadf0998e3abf9dabc677f63160de7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e82b65026dcadf0998e3abf9dabc677f63160de7/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "dd941450fbf705129dff8ce021d4b5602563555a", "url": "https://api.github.com/repos/rust-lang/rust/commits/dd941450fbf705129dff8ce021d4b5602563555a", "html_url": "https://github.com/rust-lang/rust/commit/dd941450fbf705129dff8ce021d4b5602563555a"}, {"sha": "c08ea1724b0b21a0ef81ee2d6976b0a3cf2db043", "url": "https://api.github.com/repos/rust-lang/rust/commits/c08ea1724b0b21a0ef81ee2d6976b0a3cf2db043", "html_url": "https://github.com/rust-lang/rust/commit/c08ea1724b0b21a0ef81ee2d6976b0a3cf2db043"}], "stats": {"total": 6, "additions": 2, "deletions": 4}, "files": [{"sha": "8703949f4886aef2664cb53672bd9f35603135c5", "filename": "compiler/rustc_typeck/src/check/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e82b65026dcadf0998e3abf9dabc677f63160de7/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e82b65026dcadf0998e3abf9dabc677f63160de7/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fmod.rs?ref=e82b65026dcadf0998e3abf9dabc677f63160de7", "patch": "@@ -849,7 +849,7 @@ fn missing_items_err(\n     // Obtain the level of indentation ending in `sugg_sp`.\n     let indentation = tcx.sess.source_map().span_to_margin(sugg_sp).unwrap_or(0);\n     // Make the whitespace that will make the suggestion have the right indentation.\n-    let padding: String = std::iter::repeat(\" \").take(indentation).collect();\n+    let padding: String = \" \".repeat(indentation);\n \n     for trait_item in missing_items {\n         let snippet = suggestion_signature(&trait_item, tcx);"}, {"sha": "1b90727fbc0a66f1a706130a91a43476a9773c8d", "filename": "src/test/ui/issues/issue-20644.rs", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e82b65026dcadf0998e3abf9dabc677f63160de7/src%2Ftest%2Fui%2Fissues%2Fissue-20644.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e82b65026dcadf0998e3abf9dabc677f63160de7/src%2Ftest%2Fui%2Fissues%2Fissue-20644.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-20644.rs?ref=e82b65026dcadf0998e3abf9dabc677f63160de7", "patch": "@@ -19,9 +19,7 @@ use std::path::Path;\n \n pub fn parse_summary<R: Read>(_: R, _: &Path) {\n      let path_from_root = Path::new(\"\");\n-     Path::new(&iter::repeat(\"../\")\n-               .take(path_from_root.components().count() - 1)\n-               .collect::<String>());\n+     Path::new(&\"../\".repeat(path_from_root.components().count() - 1));\n  }\n \n fn foo() {"}]}