{"sha": "903c5a8f69714382ec9fc22745f902c3e219cb68", "node_id": "MDY6Q29tbWl0NzI0NzEyOjkwM2M1YThmNjk3MTQzODJlYzlmYzIyNzQ1ZjkwMmMzZTIxOWNiNjg=", "commit": {"author": {"name": "Aaron Turon", "email": "aturon@mozilla.com", "date": "2014-12-19T07:29:30Z"}, "committer": {"name": "Aaron Turon", "email": "aturon@mozilla.com", "date": "2014-12-19T07:35:53Z"}, "message": "Disable at_exit handlers\n\nThe [final step](https://github.com/rust-lang/rust/pull/19654) of\nruntime removal changes the threading/process model so that the process\nshuts down when the main thread exits. But several shared resources,\nlike the helper thread for timeouts, are shut down when the main thread\nexits (but before the process ends), and they are not prepared to be\nused after shut down, but other threads may try to access them during\nthe shutdown sequence of the main thread.\n\nAs an interim solution, the `at_exit` cleanup routine is simply skipped.\n\nUltimately, these resources should be made to safely handle asynchronous\nshutdown, usually by panicking if called from a detached thread when the\nmain thread is ending.\n\nSee issue for details https://github.com/rust-lang/rust/issues/20012\n\nThis is a [breaking-change] for anyone relying on `at_exit`.", "tree": {"sha": "df8c8b58d6d706b7c51836632bc4c628861ea752", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/df8c8b58d6d706b7c51836632bc4c628861ea752"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/903c5a8f69714382ec9fc22745f902c3e219cb68", "comment_count": 7, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/903c5a8f69714382ec9fc22745f902c3e219cb68", "html_url": "https://github.com/rust-lang/rust/commit/903c5a8f69714382ec9fc22745f902c3e219cb68", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/903c5a8f69714382ec9fc22745f902c3e219cb68/comments", "author": {"login": "aturon", "id": 709807, "node_id": "MDQ6VXNlcjcwOTgwNw==", "avatar_url": "https://avatars.githubusercontent.com/u/709807?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aturon", "html_url": "https://github.com/aturon", "followers_url": "https://api.github.com/users/aturon/followers", "following_url": "https://api.github.com/users/aturon/following{/other_user}", "gists_url": "https://api.github.com/users/aturon/gists{/gist_id}", "starred_url": "https://api.github.com/users/aturon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aturon/subscriptions", "organizations_url": "https://api.github.com/users/aturon/orgs", "repos_url": "https://api.github.com/users/aturon/repos", "events_url": "https://api.github.com/users/aturon/events{/privacy}", "received_events_url": "https://api.github.com/users/aturon/received_events", "type": "User", "site_admin": false}, "committer": {"login": "aturon", "id": 709807, "node_id": "MDQ6VXNlcjcwOTgwNw==", "avatar_url": "https://avatars.githubusercontent.com/u/709807?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aturon", "html_url": "https://github.com/aturon", "followers_url": "https://api.github.com/users/aturon/followers", "following_url": "https://api.github.com/users/aturon/following{/other_user}", "gists_url": "https://api.github.com/users/aturon/gists{/gist_id}", "starred_url": "https://api.github.com/users/aturon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aturon/subscriptions", "organizations_url": "https://api.github.com/users/aturon/orgs", "repos_url": "https://api.github.com/users/aturon/repos", "events_url": "https://api.github.com/users/aturon/events{/privacy}", "received_events_url": "https://api.github.com/users/aturon/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a9e7669cdc551588144a5b56db0b42dd35b71876", "url": "https://api.github.com/repos/rust-lang/rust/commits/a9e7669cdc551588144a5b56db0b42dd35b71876", "html_url": "https://github.com/rust-lang/rust/commit/a9e7669cdc551588144a5b56db0b42dd35b71876"}], "stats": {"total": 5, "additions": 4, "deletions": 1}, "files": [{"sha": "8d9c1268e7e33dc51f09ceea84aa520b046ce37b", "filename": "src/libstd/rt/mod.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/903c5a8f69714382ec9fc22745f902c3e219cb68/src%2Flibstd%2Frt%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/903c5a8f69714382ec9fc22745f902c3e219cb68/src%2Flibstd%2Frt%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Frt%2Fmod.rs?ref=903c5a8f69714382ec9fc22745f902c3e219cb68", "patch": "@@ -162,5 +162,8 @@ pub fn at_exit<F:FnOnce()+Send>(f: F) {\n pub unsafe fn cleanup() {\n     args::cleanup();\n     sys::stack_overflow::cleanup();\n-    at_exit_imp::cleanup();\n+    // FIXME: (#20012): the resources being cleaned up by at_exit\n+    // currently are not prepared for cleanup to happen asynchronously\n+    // with detached threads using the resources; for now, we leak.\n+    // at_exit_imp::cleanup();\n }"}]}