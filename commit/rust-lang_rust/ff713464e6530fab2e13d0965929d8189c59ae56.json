{"sha": "ff713464e6530fab2e13d0965929d8189c59ae56", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZmNzEzNDY0ZTY1MzBmYWIyZTEzZDA5NjU5MjlkODE4OWM1OWFlNTY=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2016-10-03T14:40:22Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2016-10-03T14:40:22Z"}, "message": "Auto merge of #36847 - alexcrichton:rustc-macro-doc, r=nrc\n\nrustdoc: Fix documenting rustc-macro crates\n\nThis commit adds a \"hack\" to the session to track whether we're a rustdoc\nsession or not. If we're rustdoc then we skip the expansion to add the\nrustc-macro infrastructure.\n\nCloses #36820", "tree": {"sha": "4f83be3022732bcd2663d5dd74274c7b8a73ea50", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4f83be3022732bcd2663d5dd74274c7b8a73ea50"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ff713464e6530fab2e13d0965929d8189c59ae56", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ff713464e6530fab2e13d0965929d8189c59ae56", "html_url": "https://github.com/rust-lang/rust/commit/ff713464e6530fab2e13d0965929d8189c59ae56", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ff713464e6530fab2e13d0965929d8189c59ae56/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "75df685d28947ea7d2422a24f14aa1254da1aeb4", "url": "https://api.github.com/repos/rust-lang/rust/commits/75df685d28947ea7d2422a24f14aa1254da1aeb4", "html_url": "https://github.com/rust-lang/rust/commit/75df685d28947ea7d2422a24f14aa1254da1aeb4"}, {"sha": "7724a04b0f69ac298b308e09402042410e8a928c", "url": "https://api.github.com/repos/rust-lang/rust/commits/7724a04b0f69ac298b308e09402042410e8a928c", "html_url": "https://github.com/rust-lang/rust/commit/7724a04b0f69ac298b308e09402042410e8a928c"}], "stats": {"total": 63, "additions": 50, "deletions": 13}, "files": [{"sha": "e3567107884365698d6072f04472fa1ab449e7cb", "filename": "src/bootstrap/step.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ff713464e6530fab2e13d0965929d8189c59ae56/src%2Fbootstrap%2Fstep.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ff713464e6530fab2e13d0965929d8189c59ae56/src%2Fbootstrap%2Fstep.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fstep.rs?ref=ff713464e6530fab2e13d0965929d8189c59ae56", "patch": "@@ -488,7 +488,6 @@ impl<'a> Step<'a> {\n             Source::CheckCodegenUnits { compiler } |\n             Source::CheckIncremental { compiler } |\n             Source::CheckUi { compiler } |\n-            Source::CheckRustdoc { compiler } |\n             Source::CheckPretty { compiler } |\n             Source::CheckCFail { compiler } |\n             Source::CheckRPassValgrind { compiler } |\n@@ -511,6 +510,7 @@ impl<'a> Step<'a> {\n                     self.debugger_scripts(compiler.stage),\n                 ]\n             }\n+            Source::CheckRustdoc { compiler } |\n             Source::CheckRPassFull { compiler } |\n             Source::CheckRFailFull { compiler } |\n             Source::CheckCFailFull { compiler } |"}, {"sha": "9987fbab38909e56c973ced60350d17f74751b31", "filename": "src/librustc/session/config.rs", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/ff713464e6530fab2e13d0965929d8189c59ae56/src%2Flibrustc%2Fsession%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ff713464e6530fab2e13d0965929d8189c59ae56/src%2Flibrustc%2Fsession%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fsession%2Fconfig.rs?ref=ff713464e6530fab2e13d0965929d8189c59ae56", "patch": "@@ -288,6 +288,11 @@ top_level_options!(\n         alt_std_name: Option<String> [TRACKED],\n         // Indicates how the compiler should treat unstable features\n         unstable_features: UnstableFeatures [TRACKED],\n+\n+        // Indicates whether this run of the compiler is actually rustdoc. This\n+        // is currently just a hack and will be removed eventually, so please\n+        // try to not rely on this too much.\n+        actually_rustdoc: bool [TRACKED],\n     }\n );\n \n@@ -440,6 +445,7 @@ pub fn basic_options() -> Options {\n         libs: Vec::new(),\n         unstable_features: UnstableFeatures::Disallow,\n         debug_assertions: true,\n+        actually_rustdoc: false,\n     }\n }\n \n@@ -1523,6 +1529,7 @@ pub fn build_session_options_and_crate_config(matches: &getopts::Matches)\n         libs: libs,\n         unstable_features: UnstableFeatures::from_environment(),\n         debug_assertions: debug_assertions,\n+        actually_rustdoc: false,\n     },\n     cfg)\n }"}, {"sha": "8059ef61eab83c2983f7abece43aa696c7b8d2d7", "filename": "src/librustc_driver/driver.rs", "status": "modified", "additions": 17, "deletions": 12, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/ff713464e6530fab2e13d0965929d8189c59ae56/src%2Flibrustc_driver%2Fdriver.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ff713464e6530fab2e13d0965929d8189c59ae56/src%2Flibrustc_driver%2Fdriver.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_driver%2Fdriver.rs?ref=ff713464e6530fab2e13d0965929d8189c59ae56", "patch": "@@ -703,18 +703,23 @@ pub fn phase_2_configure_and_expand<'a, F>(sess: &Session,\n                                          sess.diagnostic())\n     });\n \n-    krate = time(time_passes, \"maybe creating a macro crate\", || {\n-        let crate_types = sess.crate_types.borrow();\n-        let is_rustc_macro_crate = crate_types.contains(&config::CrateTypeRustcMacro);\n-        let num_crate_types = crate_types.len();\n-        syntax_ext::rustc_macro_registrar::modify(&sess.parse_sess,\n-                                                  &mut resolver,\n-                                                  krate,\n-                                                  is_rustc_macro_crate,\n-                                                  num_crate_types,\n-                                                  sess.diagnostic(),\n-                                                  &sess.features.borrow())\n-    });\n+    // If we're in rustdoc we're always compiling as an rlib, but that'll trip a\n+    // bunch of checks in the `modify` function below. For now just skip this\n+    // step entirely if we're rustdoc as it's not too useful anyway.\n+    if !sess.opts.actually_rustdoc {\n+        krate = time(time_passes, \"maybe creating a macro crate\", || {\n+            let crate_types = sess.crate_types.borrow();\n+            let num_crate_types = crate_types.len();\n+            let is_rustc_macro_crate = crate_types.contains(&config::CrateTypeRustcMacro);\n+            syntax_ext::rustc_macro_registrar::modify(&sess.parse_sess,\n+                                                      &mut resolver,\n+                                                      krate,\n+                                                      is_rustc_macro_crate,\n+                                                      num_crate_types,\n+                                                      sess.diagnostic(),\n+                                                      &sess.features.borrow())\n+        });\n+    }\n \n     if sess.opts.debugging_opts.input_stats {\n         println!(\"Post-expansion node count: {}\", count_nodes(&krate));"}, {"sha": "208819a4a0b0697d9f7326c4a0d02fe569edf4c8", "filename": "src/librustdoc/core.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/ff713464e6530fab2e13d0965929d8189c59ae56/src%2Flibrustdoc%2Fcore.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ff713464e6530fab2e13d0965929d8189c59ae56/src%2Flibrustdoc%2Fcore.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fcore.rs?ref=ff713464e6530fab2e13d0965929d8189c59ae56", "patch": "@@ -150,6 +150,7 @@ pub fn run_core(search_paths: SearchPaths,\n         target_triple: triple.unwrap_or(config::host_triple().to_string()),\n         // Ensure that rustdoc works even if rustc is feature-staged\n         unstable_features: UnstableFeatures::Allow,\n+        actually_rustdoc: true,\n         ..config::basic_options().clone()\n     };\n "}, {"sha": "c8bf5b2b9121231283229a7727f6c4c67870c85f", "filename": "src/test/rustdoc/rustc-macro-crate.rs", "status": "added", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/ff713464e6530fab2e13d0965929d8189c59ae56/src%2Ftest%2Frustdoc%2Frustc-macro-crate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ff713464e6530fab2e13d0965929d8189c59ae56/src%2Ftest%2Frustdoc%2Frustc-macro-crate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Frustc-macro-crate.rs?ref=ff713464e6530fab2e13d0965929d8189c59ae56", "patch": "@@ -0,0 +1,24 @@\n+// Copyright 2016 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// no-prefer-dynamic\n+\n+#![feature(rustc_macro)]\n+#![feature(rustc_macro_lib)]\n+#![crate_type = \"rustc-macro\"]\n+\n+extern crate rustc_macro;\n+\n+use rustc_macro::TokenStream;\n+\n+#[rustc_macro_derive(Foo)]\n+pub fn foo(input: TokenStream) -> TokenStream {\n+    input\n+}"}]}