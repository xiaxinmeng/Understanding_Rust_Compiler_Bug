{"sha": "af2b42de0a43c0bf656e290e73a431acd033e79d", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFmMmI0MmRlMGE0M2MwYmY2NTZlMjkwZTczYTQzMWFjZDAzM2U3OWQ=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2019-04-16T17:09:37Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2019-04-16T17:09:41Z"}, "message": "fix compile-fail test", "tree": {"sha": "219d4083867816e7bc8400ed2c34c0536c54fad3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/219d4083867816e7bc8400ed2c34c0536c54fad3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/af2b42de0a43c0bf656e290e73a431acd033e79d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/af2b42de0a43c0bf656e290e73a431acd033e79d", "html_url": "https://github.com/rust-lang/rust/commit/af2b42de0a43c0bf656e290e73a431acd033e79d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/af2b42de0a43c0bf656e290e73a431acd033e79d/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "378d9d41720fe2a8a2aec1b39551d11fac6d8ec6", "url": "https://api.github.com/repos/rust-lang/rust/commits/378d9d41720fe2a8a2aec1b39551d11fac6d8ec6", "html_url": "https://github.com/rust-lang/rust/commit/378d9d41720fe2a8a2aec1b39551d11fac6d8ec6"}], "stats": {"total": 4, "additions": 1, "deletions": 3}, "files": [{"sha": "396abaf4493b13c961e5c82c38c0db5758c98548", "filename": "tests/compile-fail/ptr_eq_integer.rs", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/af2b42de0a43c0bf656e290e73a431acd033e79d/tests%2Fcompile-fail%2Fptr_eq_integer.rs", "raw_url": "https://github.com/rust-lang/rust/raw/af2b42de0a43c0bf656e290e73a431acd033e79d/tests%2Fcompile-fail%2Fptr_eq_integer.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompile-fail%2Fptr_eq_integer.rs?ref=af2b42de0a43c0bf656e290e73a431acd033e79d", "patch": "@@ -1,8 +1,6 @@\n-use std::mem;\n-\n fn main() {\n     let b = Box::new(0);\n     let x = &*b as *const i32;\n     // We cannot compare this with a non-NULL integer. After all, these *could* be equal (with the right base address).\n-    assert!(x != mem::align_of::<i32>() as *const i32); //~ ERROR invalid arithmetic on pointers\n+    assert!(x != 64 as *const i32); //~ ERROR invalid arithmetic on pointers\n }"}]}