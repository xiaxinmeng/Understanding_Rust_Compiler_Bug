{"sha": "55d4813561e36aa96fcff7fc4bde6ccb675fe115", "node_id": "MDY6Q29tbWl0NzI0NzEyOjU1ZDQ4MTM1NjFlMzZhYTk2ZmNmZjdmYzRiZGU2Y2NiNjc1ZmUxMTU=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2021-08-26T09:33:12Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-08-26T09:33:12Z"}, "message": "Merge #10032\n\n10032: Fix missing unsafe block for the nightly change r=lnicola a=oxalica\n\nFix #10022\r\n\r\nTested via vscode extension.\n\nCo-authored-by: oxalica <oxalicc@pm.me>", "tree": {"sha": "ed070eb6124a2a9e639e623baec8a6bffed2e1e0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ed070eb6124a2a9e639e623baec8a6bffed2e1e0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/55d4813561e36aa96fcff7fc4bde6ccb675fe115", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJhJ1/YCRBK7hj4Ov3rIwAAy78IAGMsWReHeVyxauKkaY6vsgQU\nEO0UwQSqRGNwTbxSA2YtMhSBbl7iABauKHx/sSsg336IM/bbL0E4Cu3WSb6Hd1J+\nXErSVF6lQ/p6umR8sXJuROD68YOMFOxkTobtgnfV9c081Tk8doV1fNV7eC3hkH04\nTSGXRuHeoocJJnzRJzHQvgCUEJBvHwHEyXkWsR5A+2sHCGJofRVYXbYYn0W/ZJQD\nE0E57hY40/pDm3R1QCS6hK5AGURZ4FWWH4WenBec3c+0FCwq7GNpjOwjsdDbF9ze\nnFP/6S2o7DL3Pt3qf/SPK46wTrIYlzMws2X0G9lI2H6mpkB0O93mGSRC5/Pn3aw=\n=PYgs\n-----END PGP SIGNATURE-----\n", "payload": "tree ed070eb6124a2a9e639e623baec8a6bffed2e1e0\nparent 793389b61afe9336e40a4cf8f75286ec3ea74582\nparent 15eccf29e8eb4ee458c1c57474e2735a33cef55e\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1629970392 +0000\ncommitter GitHub <noreply@github.com> 1629970392 +0000\n\nMerge #10032\n\n10032: Fix missing unsafe block for the nightly change r=lnicola a=oxalica\n\nFix #10022\r\n\r\nTested via vscode extension.\n\nCo-authored-by: oxalica <oxalicc@pm.me>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/55d4813561e36aa96fcff7fc4bde6ccb675fe115", "html_url": "https://github.com/rust-lang/rust/commit/55d4813561e36aa96fcff7fc4bde6ccb675fe115", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/55d4813561e36aa96fcff7fc4bde6ccb675fe115/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "793389b61afe9336e40a4cf8f75286ec3ea74582", "url": "https://api.github.com/repos/rust-lang/rust/commits/793389b61afe9336e40a4cf8f75286ec3ea74582", "html_url": "https://github.com/rust-lang/rust/commit/793389b61afe9336e40a4cf8f75286ec3ea74582"}, {"sha": "15eccf29e8eb4ee458c1c57474e2735a33cef55e", "url": "https://api.github.com/repos/rust-lang/rust/commits/15eccf29e8eb4ee458c1c57474e2735a33cef55e", "html_url": "https://github.com/rust-lang/rust/commit/15eccf29e8eb4ee458c1c57474e2735a33cef55e"}], "stats": {"total": 12, "additions": 9, "deletions": 3}, "files": [{"sha": "f3bfd659875ff8d236c32d82bf1808607cecbdf4", "filename": "crates/hir_expand/src/builtin_macro.rs", "status": "modified", "additions": 9, "deletions": 3, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/55d4813561e36aa96fcff7fc4bde6ccb675fe115/crates%2Fhir_expand%2Fsrc%2Fbuiltin_macro.rs", "raw_url": "https://github.com/rust-lang/rust/raw/55d4813561e36aa96fcff7fc4bde6ccb675fe115/crates%2Fhir_expand%2Fsrc%2Fbuiltin_macro.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_expand%2Fsrc%2Fbuiltin_macro.rs?ref=55d4813561e36aa96fcff7fc4bde6ccb675fe115", "patch": "@@ -256,7 +256,13 @@ fn format_args_expand(\n         quote! { std::fmt::ArgumentV1::new(&(#arg), std::fmt::Display::fmt), }\n     }.token_trees);\n     let expanded = quote! {\n-        std::fmt::Arguments::new_v1(&[], &[##arg_tts])\n+        // It's unsafe since https://github.com/rust-lang/rust/pull/83302\n+        // Wrap an unsafe block to avoid false-positive `missing-unsafe` lint.\n+        // FIXME: Currently we don't have `unused_unsafe` lint so an extra unsafe block won't cause issues on early\n+        // stable rust-src.\n+        unsafe {\n+            std::fmt::Arguments::new_v1(&[], &[##arg_tts])\n+        }\n     };\n     ExpandResult::ok(expanded)\n }\n@@ -762,7 +768,7 @@ mod tests {\n             format_args!(\"{} {:?}\", arg1(a, b, c), arg2);\n             \"#,\n             expect![[\n-                r#\"std::fmt::Arguments::new_v1(&[], &[std::fmt::ArgumentV1::new(&(arg1(a,b,c)),std::fmt::Display::fmt),std::fmt::ArgumentV1::new(&(arg2),std::fmt::Display::fmt),])\"#\n+                r#\"unsafe{std::fmt::Arguments::new_v1(&[], &[std::fmt::ArgumentV1::new(&(arg1(a,b,c)),std::fmt::Display::fmt),std::fmt::ArgumentV1::new(&(arg2),std::fmt::Display::fmt),])}\"#\n             ]],\n         );\n     }\n@@ -779,7 +785,7 @@ mod tests {\n             format_args!(\"{} {:?}\", a::<A,B>(), b);\n             \"#,\n             expect![[\n-                r#\"std::fmt::Arguments::new_v1(&[], &[std::fmt::ArgumentV1::new(&(a::<A,B>()),std::fmt::Display::fmt),std::fmt::ArgumentV1::new(&(b),std::fmt::Display::fmt),])\"#\n+                r#\"unsafe{std::fmt::Arguments::new_v1(&[], &[std::fmt::ArgumentV1::new(&(a::<A,B>()),std::fmt::Display::fmt),std::fmt::ArgumentV1::new(&(b),std::fmt::Display::fmt),])}\"#\n             ]],\n         );\n     }"}]}