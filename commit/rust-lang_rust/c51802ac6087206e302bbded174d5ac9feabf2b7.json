{"sha": "c51802ac6087206e302bbded174d5ac9feabf2b7", "node_id": "MDY6Q29tbWl0NzI0NzEyOmM1MTgwMmFjNjA4NzIwNmUzMDJiYmRlZDE3NGQ1YWM5ZmVhYmYyYjc=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-07-03T17:17:05Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-07-03T17:17:05Z"}, "message": "simplify Option::get_or_insert", "tree": {"sha": "3470bb8cdfe812a6a3f43144a83e5cdd0bb7c255", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3470bb8cdfe812a6a3f43144a83e5cdd0bb7c255"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c51802ac6087206e302bbded174d5ac9feabf2b7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c51802ac6087206e302bbded174d5ac9feabf2b7", "html_url": "https://github.com/rust-lang/rust/commit/c51802ac6087206e302bbded174d5ac9feabf2b7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c51802ac6087206e302bbded174d5ac9feabf2b7/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8301de16dafc81a3b5d94aa0707ad83bdb56a599", "url": "https://api.github.com/repos/rust-lang/rust/commits/8301de16dafc81a3b5d94aa0707ad83bdb56a599", "html_url": "https://github.com/rust-lang/rust/commit/8301de16dafc81a3b5d94aa0707ad83bdb56a599"}], "stats": {"total": 10, "additions": 1, "deletions": 9}, "files": [{"sha": "41b6d53f76516a38729000c0d44ae7378dae008c", "filename": "src/libcore/option.rs", "status": "modified", "additions": 1, "deletions": 9, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/c51802ac6087206e302bbded174d5ac9feabf2b7/src%2Flibcore%2Foption.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c51802ac6087206e302bbded174d5ac9feabf2b7/src%2Flibcore%2Foption.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Foption.rs?ref=c51802ac6087206e302bbded174d5ac9feabf2b7", "patch": "@@ -777,15 +777,7 @@ impl<T> Option<T> {\n     #[inline]\n     #[stable(feature = \"option_entry\", since = \"1.20.0\")]\n     pub fn get_or_insert(&mut self, v: T) -> &mut T {\n-        match *self {\n-            None => *self = Some(v),\n-            _ => (),\n-        }\n-\n-        match *self {\n-            Some(ref mut v) => v,\n-            None => unsafe { hint::unreachable_unchecked() },\n-        }\n+        self.get_or_insert_with(|| v)\n     }\n \n     /// Inserts a value computed from `f` into the option if it is [`None`], then"}]}