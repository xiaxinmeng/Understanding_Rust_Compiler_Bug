{"sha": "c4dd0d3bb70367273db9eee9e5fa6cb323a69547", "node_id": "C_kwDOAAsO6NoAKGM0ZGQwZDNiYjcwMzY3MjczZGI5ZWVlOWU1ZmE2Y2IzMjNhNjk1NDc", "commit": {"author": {"name": "Dylan DPC", "email": "99973273+Dylan-DPC@users.noreply.github.com", "date": "2022-04-28T00:40:33Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-04-28T00:40:33Z"}, "message": "Rollup merge of #96397 - AronParker:issue-96368-fix, r=dtolnay\n\nMake EncodeWide implement FusedIterator\n\n[`EncodeUtf16`](https://doc.rust-lang.org/std/str/struct.EncodeUtf16.html) and [`EncodeWide`](https://doc.rust-lang.org/std/os/windows/ffi/struct.EncodeWide.html) currently serve similar purposes: They convert from UTF-8 to UTF-16 and WTF-8 to WTF-16, respectively. `EncodeUtf16` wraps a &str, whereas `EncodeWide` wraps an &OsStr.\n\nWhen Iteration has concluded, these iterators wrap an empty slice, which will forever yield `None` values. Hence, `EncodeUtf16` rightfully implements `FusedIterator`. However, `EncodeWide` in contrast does not, even though it serves an almost identical purpose.\n\nThis PR attempts to fix that issue. I consider this change minor and non-controversial, hence why I have not added a RFC/FCP. Please let me know if the stability attribute is wrong or contains a wrong version number. Thanks in advance.\n\nFixes https://github.com/rust-lang/rust/issues/96368", "tree": {"sha": "fd2369b872cc8b4d2f49e483596df56479a18497", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fd2369b872cc8b4d2f49e483596df56479a18497"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c4dd0d3bb70367273db9eee9e5fa6cb323a69547", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJiaeKBCRBK7hj4Ov3rIwAA62cIAFHnc7vmB9w4FGMRru8GU6aB\nIrlHal6hK6iNxIZk9tbhL9vu0X7ZJr9G/AWku6EujOOAdAlbA+NR5FuKEQLI7/14\nlsxN8DOY3fVOVmkztML/cyiOs3yN0f6XDUaicC59qzJSmuu5nxFaDjLlbmcbYDXH\nbIJWblFjPGp8HcdimALqBOofBceAtgsoi9zbSUI9K6EjK92+zgbYLjp6bElhYXh/\np73YI4ZsJ7mkky5zPybj9MBEjCnHCSY+a0lHOEQV6SOls9eXfI6IVV7BVL9sutbt\nrFthEBBhVH1v00uRlfRNUtiO6mCjbeHjemEVUoq3YWZJmZnuN4T6OBogTE+yGQk=\n=lXQt\n-----END PGP SIGNATURE-----\n", "payload": "tree fd2369b872cc8b4d2f49e483596df56479a18497\nparent 4a7483c9054a89949a74876ce2f5cb5f3eae235f\nparent fc6af819c4fc352a0b6487d82786c960e1d5deef\nauthor Dylan DPC <99973273+Dylan-DPC@users.noreply.github.com> 1651106433 +0200\ncommitter GitHub <noreply@github.com> 1651106433 +0200\n\nRollup merge of #96397 - AronParker:issue-96368-fix, r=dtolnay\n\nMake EncodeWide implement FusedIterator\n\n[`EncodeUtf16`](https://doc.rust-lang.org/std/str/struct.EncodeUtf16.html) and [`EncodeWide`](https://doc.rust-lang.org/std/os/windows/ffi/struct.EncodeWide.html) currently serve similar purposes: They convert from UTF-8 to UTF-16 and WTF-8 to WTF-16, respectively. `EncodeUtf16` wraps a &str, whereas `EncodeWide` wraps an &OsStr.\n\nWhen Iteration has concluded, these iterators wrap an empty slice, which will forever yield `None` values. Hence, `EncodeUtf16` rightfully implements `FusedIterator`. However, `EncodeWide` in contrast does not, even though it serves an almost identical purpose.\n\nThis PR attempts to fix that issue. I consider this change minor and non-controversial, hence why I have not added a RFC/FCP. Please let me know if the stability attribute is wrong or contains a wrong version number. Thanks in advance.\n\nFixes https://github.com/rust-lang/rust/issues/96368\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c4dd0d3bb70367273db9eee9e5fa6cb323a69547", "html_url": "https://github.com/rust-lang/rust/commit/c4dd0d3bb70367273db9eee9e5fa6cb323a69547", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c4dd0d3bb70367273db9eee9e5fa6cb323a69547/comments", "author": {"login": "Dylan-DPC", "id": 99973273, "node_id": "U_kgDOBfV4mQ", "avatar_url": "https://avatars.githubusercontent.com/u/99973273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dylan-DPC", "html_url": "https://github.com/Dylan-DPC", "followers_url": "https://api.github.com/users/Dylan-DPC/followers", "following_url": "https://api.github.com/users/Dylan-DPC/following{/other_user}", "gists_url": "https://api.github.com/users/Dylan-DPC/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dylan-DPC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dylan-DPC/subscriptions", "organizations_url": "https://api.github.com/users/Dylan-DPC/orgs", "repos_url": "https://api.github.com/users/Dylan-DPC/repos", "events_url": "https://api.github.com/users/Dylan-DPC/events{/privacy}", "received_events_url": "https://api.github.com/users/Dylan-DPC/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4a7483c9054a89949a74876ce2f5cb5f3eae235f", "url": "https://api.github.com/repos/rust-lang/rust/commits/4a7483c9054a89949a74876ce2f5cb5f3eae235f", "html_url": "https://github.com/rust-lang/rust/commit/4a7483c9054a89949a74876ce2f5cb5f3eae235f"}, {"sha": "fc6af819c4fc352a0b6487d82786c960e1d5deef", "url": "https://api.github.com/repos/rust-lang/rust/commits/fc6af819c4fc352a0b6487d82786c960e1d5deef", "html_url": "https://github.com/rust-lang/rust/commit/fc6af819c4fc352a0b6487d82786c960e1d5deef"}], "stats": {"total": 5, "additions": 4, "deletions": 1}, "files": [{"sha": "7d66973bed6f58736e13f2923ad571f6b26388cf", "filename": "library/std/src/sys_common/wtf8.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/c4dd0d3bb70367273db9eee9e5fa6cb323a69547/library%2Fstd%2Fsrc%2Fsys_common%2Fwtf8.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c4dd0d3bb70367273db9eee9e5fa6cb323a69547/library%2Fstd%2Fsrc%2Fsys_common%2Fwtf8.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsys_common%2Fwtf8.rs?ref=c4dd0d3bb70367273db9eee9e5fa6cb323a69547", "patch": "@@ -25,7 +25,7 @@ use crate::char;\n use crate::collections::TryReserveError;\n use crate::fmt;\n use crate::hash::{Hash, Hasher};\n-use crate::iter::FromIterator;\n+use crate::iter::{FromIterator, FusedIterator};\n use crate::mem;\n use crate::ops;\n use crate::rc::Rc;\n@@ -899,6 +899,9 @@ impl<'a> Iterator for EncodeWide<'a> {\n     }\n }\n \n+#[stable(feature = \"encode_wide_fused_iterator\", since = \"1.62.0\")]\n+impl FusedIterator for EncodeWide<'_> {}\n+\n impl Hash for CodePoint {\n     #[inline]\n     fn hash<H: Hasher>(&self, state: &mut H) {"}]}