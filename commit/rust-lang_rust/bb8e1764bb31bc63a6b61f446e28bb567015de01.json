{"sha": "bb8e1764bb31bc63a6b61f446e28bb567015de01", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJiOGUxNzY0YmIzMWJjNjNhNmI2MWY0NDZlMjhiYjU2NzAxNWRlMDE=", "commit": {"author": {"name": "marmeladema", "email": "xademax@gmail.com", "date": "2020-09-01T12:11:28Z"}, "committer": {"name": "marmeladema", "email": "xademax@gmail.com", "date": "2020-09-25T21:46:15Z"}, "message": "Simplify some match statements on `DefPathDataName'", "tree": {"sha": "c9ad2139a7766766b231bac74e8751f8e8609d23", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c9ad2139a7766766b231bac74e8751f8e8609d23"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/bb8e1764bb31bc63a6b61f446e28bb567015de01", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/bb8e1764bb31bc63a6b61f446e28bb567015de01", "html_url": "https://github.com/rust-lang/rust/commit/bb8e1764bb31bc63a6b61f446e28bb567015de01", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/bb8e1764bb31bc63a6b61f446e28bb567015de01/comments", "author": {"login": "marmeladema", "id": 1629419, "node_id": "MDQ6VXNlcjE2Mjk0MTk=", "avatar_url": "https://avatars.githubusercontent.com/u/1629419?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marmeladema", "html_url": "https://github.com/marmeladema", "followers_url": "https://api.github.com/users/marmeladema/followers", "following_url": "https://api.github.com/users/marmeladema/following{/other_user}", "gists_url": "https://api.github.com/users/marmeladema/gists{/gist_id}", "starred_url": "https://api.github.com/users/marmeladema/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marmeladema/subscriptions", "organizations_url": "https://api.github.com/users/marmeladema/orgs", "repos_url": "https://api.github.com/users/marmeladema/repos", "events_url": "https://api.github.com/users/marmeladema/events{/privacy}", "received_events_url": "https://api.github.com/users/marmeladema/received_events", "type": "User", "site_admin": false}, "committer": {"login": "marmeladema", "id": 1629419, "node_id": "MDQ6VXNlcjE2Mjk0MTk=", "avatar_url": "https://avatars.githubusercontent.com/u/1629419?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marmeladema", "html_url": "https://github.com/marmeladema", "followers_url": "https://api.github.com/users/marmeladema/followers", "following_url": "https://api.github.com/users/marmeladema/following{/other_user}", "gists_url": "https://api.github.com/users/marmeladema/gists{/gist_id}", "starred_url": "https://api.github.com/users/marmeladema/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marmeladema/subscriptions", "organizations_url": "https://api.github.com/users/marmeladema/orgs", "repos_url": "https://api.github.com/users/marmeladema/repos", "events_url": "https://api.github.com/users/marmeladema/events{/privacy}", "received_events_url": "https://api.github.com/users/marmeladema/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "75130b06bff9cf4af528cf19513f802a837bdd23", "url": "https://api.github.com/repos/rust-lang/rust/commits/75130b06bff9cf4af528cf19513f802a837bdd23", "html_url": "https://github.com/rust-lang/rust/commit/75130b06bff9cf4af528cf19513f802a837bdd23"}], "stats": {"total": 27, "additions": 5, "deletions": 22}, "files": [{"sha": "512fc87905e0904e9b8e180bf7fd309bcf9dfea9", "filename": "compiler/rustc_codegen_llvm/src/debuginfo/namespace.rs", "status": "modified", "additions": 2, "deletions": 7, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/bb8e1764bb31bc63a6b61f446e28bb567015de01/compiler%2Frustc_codegen_llvm%2Fsrc%2Fdebuginfo%2Fnamespace.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bb8e1764bb31bc63a6b61f446e28bb567015de01/compiler%2Frustc_codegen_llvm%2Fsrc%2Fdebuginfo%2Fnamespace.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_llvm%2Fsrc%2Fdebuginfo%2Fnamespace.rs?ref=bb8e1764bb31bc63a6b61f446e28bb567015de01", "patch": "@@ -7,7 +7,7 @@ use crate::common::CodegenCx;\n use crate::llvm;\n use crate::llvm::debuginfo::DIScope;\n use rustc_hir::def_id::DefId;\n-use rustc_hir::definitions::{DefPathData, DefPathDataName};\n+use rustc_hir::definitions::DefPathData;\n use rustc_span::symbol::Symbol;\n \n pub fn mangled_name_of_instance<'a, 'tcx>(\n@@ -30,12 +30,7 @@ pub fn item_namespace(cx: &CodegenCx<'ll, '_>, def_id: DefId) -> &'ll DIScope {\n \n     let namespace_name = match def_key.disambiguated_data.data {\n         DefPathData::CrateRoot => cx.tcx.crate_name(def_id.krate),\n-        data => match data.name() {\n-            DefPathDataName::Named(name) => name,\n-            DefPathDataName::Anon { namespace } => {\n-                Symbol::intern(&format!(\"{{{{{}}}}}\", namespace))\n-            }\n-        },\n+        data => Symbol::intern(&data.to_string()),\n     };\n     let namespace_name = namespace_name.as_str();\n "}, {"sha": "45ecb793387d0cb454a10db70b1be8bca5bbbc6f", "filename": "compiler/rustc_codegen_ssa/src/debuginfo/type_names.rs", "status": "modified", "additions": 1, "deletions": 8, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/bb8e1764bb31bc63a6b61f446e28bb567015de01/compiler%2Frustc_codegen_ssa%2Fsrc%2Fdebuginfo%2Ftype_names.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bb8e1764bb31bc63a6b61f446e28bb567015de01/compiler%2Frustc_codegen_ssa%2Fsrc%2Fdebuginfo%2Ftype_names.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_ssa%2Fsrc%2Fdebuginfo%2Ftype_names.rs?ref=bb8e1764bb31bc63a6b61f446e28bb567015de01", "patch": "@@ -3,7 +3,6 @@\n use rustc_data_structures::fx::FxHashSet;\n use rustc_hir as hir;\n use rustc_hir::def_id::DefId;\n-use rustc_hir::definitions::DefPathDataName;\n use rustc_middle::ty::{self, subst::SubstsRef, Ty, TyCtxt};\n \n use std::fmt::Write;\n@@ -231,13 +230,7 @@ pub fn push_debuginfo_type_name<'tcx>(\n         if qualified {\n             output.push_str(&tcx.crate_name(def_id.krate).as_str());\n             for path_element in tcx.def_path(def_id).data {\n-                output.push_str(\"::\");\n-                match path_element.data.name() {\n-                    DefPathDataName::Named(name) => output.push_str(&name.as_str()),\n-                    DefPathDataName::Anon { namespace } => {\n-                        write!(output, \"{{{{{}}}}}\", namespace).unwrap()\n-                    }\n-                }\n+                write!(output, \"::{}\", path_element.data).unwrap();\n             }\n         } else {\n             output.push_str(&tcx.item_name(def_id).as_str());"}, {"sha": "7a3035e5b463162f74cd17c6876ddcba8e16867a", "filename": "compiler/rustc_lint/src/context.rs", "status": "modified", "additions": 2, "deletions": 7, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/bb8e1764bb31bc63a6b61f446e28bb567015de01/compiler%2Frustc_lint%2Fsrc%2Fcontext.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bb8e1764bb31bc63a6b61f446e28bb567015de01/compiler%2Frustc_lint%2Fsrc%2Fcontext.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_lint%2Fsrc%2Fcontext.rs?ref=bb8e1764bb31bc63a6b61f446e28bb567015de01", "patch": "@@ -26,7 +26,7 @@ use rustc_errors::{struct_span_err, Applicability};\n use rustc_hir as hir;\n use rustc_hir::def::Res;\n use rustc_hir::def_id::{CrateNum, DefId};\n-use rustc_hir::definitions::{DefPathData, DefPathDataName, DisambiguatedDefPathData};\n+use rustc_hir::definitions::{DefPathData, DisambiguatedDefPathData};\n use rustc_middle::lint::LintDiagnosticBuilder;\n use rustc_middle::middle::privacy::AccessLevels;\n use rustc_middle::middle::stability;\n@@ -846,12 +846,7 @@ impl<'tcx> LateContext<'tcx> {\n                     return Ok(path);\n                 }\n \n-                path.push(match disambiguated_data.data.name() {\n-                    DefPathDataName::Named(name) => name,\n-                    DefPathDataName::Anon { namespace } => {\n-                        Symbol::intern(&format!(\"{{{{{}}}}}\", namespace))\n-                    }\n-                });\n+                path.push(Symbol::intern(&disambiguated_data.data.to_string()));\n                 Ok(path)\n             }\n "}]}