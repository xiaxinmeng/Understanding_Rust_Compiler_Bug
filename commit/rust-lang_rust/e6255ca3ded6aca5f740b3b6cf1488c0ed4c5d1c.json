{"sha": "e6255ca3ded6aca5f740b3b6cf1488c0ed4c5d1c", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU2MjU1Y2EzZGVkNmFjYTVmNzQwYjNiNmNmMTQ4OGMwZWQ0YzVkMWM=", "commit": {"author": {"name": "Seiichi Uchida", "email": "seiichi.uchida@dena.com", "date": "2018-07-25T09:27:25Z"}, "committer": {"name": "Seiichi Uchida", "email": "seiichi.uchida@dena.com", "date": "2018-07-25T09:27:25Z"}, "message": "Preserve parens in trait bounds", "tree": {"sha": "8d4008c9bc0cbe70af14fb5c80580b59b3251fa5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8d4008c9bc0cbe70af14fb5c80580b59b3251fa5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e6255ca3ded6aca5f740b3b6cf1488c0ed4c5d1c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e6255ca3ded6aca5f740b3b6cf1488c0ed4c5d1c", "html_url": "https://github.com/rust-lang/rust/commit/e6255ca3ded6aca5f740b3b6cf1488c0ed4c5d1c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e6255ca3ded6aca5f740b3b6cf1488c0ed4c5d1c/comments", "author": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "committer": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b7c443e9482f8de1d3e6e820ad9c8762ef568235", "url": "https://api.github.com/repos/rust-lang/rust/commits/b7c443e9482f8de1d3e6e820ad9c8762ef568235", "html_url": "https://github.com/rust-lang/rust/commit/b7c443e9482f8de1d3e6e820ad9c8762ef568235"}], "stats": {"total": 19, "additions": 18, "deletions": 1}, "files": [{"sha": "985465644ac6caff588e60d20db07b408cdd0538", "filename": "src/types.rs", "status": "modified", "additions": 18, "deletions": 1, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/e6255ca3ded6aca5f740b3b6cf1488c0ed4c5d1c/src%2Ftypes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e6255ca3ded6aca5f740b3b6cf1488c0ed4c5d1c/src%2Ftypes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftypes.rs?ref=e6255ca3ded6aca5f740b3b6cf1488c0ed4c5d1c", "patch": "@@ -521,7 +521,24 @@ impl Rewrite for ast::GenericBound {\n \n impl Rewrite for ast::GenericBounds {\n     fn rewrite(&self, context: &RewriteContext, shape: Shape) -> Option<String> {\n-        join_bounds(context, shape, self, true)\n+        if self.is_empty() {\n+            return Some(String::new());\n+        }\n+\n+        let span = mk_sp(self.get(0)?.span().lo(), self.last()?.span().hi());\n+        let has_paren = context.snippet(span).starts_with(\"(\");\n+        let bounds_shape = if has_paren {\n+            shape.offset_left(1)?.sub_width(1)?\n+        } else {\n+            shape\n+        };\n+        join_bounds(context, bounds_shape, self, true).map(|s| {\n+            if has_paren {\n+                format!(\"({})\", s)\n+            } else {\n+                s\n+            }\n+        })\n     }\n }\n "}]}