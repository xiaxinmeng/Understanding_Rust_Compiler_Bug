{"sha": "9258053b5cce6dc752d57df2e0af14a335dfe7a4", "node_id": "MDY6Q29tbWl0NzI0NzEyOjkyNTgwNTNiNWNjZTZkYzc1MmQ1N2RmMmUwYWYxNGEzMzVkZmU3YTQ=", "commit": {"author": {"name": "Ben Blum", "email": "bblum@andrew.cmu.edu", "date": "2012-07-27T01:16:35Z"}, "committer": {"name": "Ben Blum", "email": "bblum@andrew.cmu.edu", "date": "2012-07-27T01:20:02Z"}, "message": "Undo dlist's destructor-involving type structure in light of #3039", "tree": {"sha": "2c5190c64608d94fd103cb0abec605b9c59253ff", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2c5190c64608d94fd103cb0abec605b9c59253ff"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9258053b5cce6dc752d57df2e0af14a335dfe7a4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9258053b5cce6dc752d57df2e0af14a335dfe7a4", "html_url": "https://github.com/rust-lang/rust/commit/9258053b5cce6dc752d57df2e0af14a335dfe7a4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9258053b5cce6dc752d57df2e0af14a335dfe7a4/comments", "author": {"login": "bblum", "id": 1820515, "node_id": "MDQ6VXNlcjE4MjA1MTU=", "avatar_url": "https://avatars.githubusercontent.com/u/1820515?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bblum", "html_url": "https://github.com/bblum", "followers_url": "https://api.github.com/users/bblum/followers", "following_url": "https://api.github.com/users/bblum/following{/other_user}", "gists_url": "https://api.github.com/users/bblum/gists{/gist_id}", "starred_url": "https://api.github.com/users/bblum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bblum/subscriptions", "organizations_url": "https://api.github.com/users/bblum/orgs", "repos_url": "https://api.github.com/users/bblum/repos", "events_url": "https://api.github.com/users/bblum/events{/privacy}", "received_events_url": "https://api.github.com/users/bblum/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bblum", "id": 1820515, "node_id": "MDQ6VXNlcjE4MjA1MTU=", "avatar_url": "https://avatars.githubusercontent.com/u/1820515?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bblum", "html_url": "https://github.com/bblum", "followers_url": "https://api.github.com/users/bblum/followers", "following_url": "https://api.github.com/users/bblum/following{/other_user}", "gists_url": "https://api.github.com/users/bblum/gists{/gist_id}", "starred_url": "https://api.github.com/users/bblum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bblum/subscriptions", "organizations_url": "https://api.github.com/users/bblum/orgs", "repos_url": "https://api.github.com/users/bblum/repos", "events_url": "https://api.github.com/users/bblum/events{/privacy}", "received_events_url": "https://api.github.com/users/bblum/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "73ca5603bd1bf57e1734ff859299d7b10626a644", "url": "https://api.github.com/repos/rust-lang/rust/commits/73ca5603bd1bf57e1734ff859299d7b10626a644", "html_url": "https://github.com/rust-lang/rust/commit/73ca5603bd1bf57e1734ff859299d7b10626a644"}], "stats": {"total": 35, "additions": 9, "deletions": 26}, "files": [{"sha": "ae75c04da72d569662c68ccbf339619cf337baf5", "filename": "src/libcore/dlist.rs", "status": "modified", "additions": 9, "deletions": 26, "changes": 35, "blob_url": "https://github.com/rust-lang/rust/blob/9258053b5cce6dc752d57df2e0af14a335dfe7a4/src%2Flibcore%2Fdlist.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9258053b5cce6dc752d57df2e0af14a335dfe7a4/src%2Flibcore%2Fdlist.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fdlist.rs?ref=9258053b5cce6dc752d57df2e0af14a335dfe7a4", "patch": "@@ -18,28 +18,11 @@ enum dlist_node<T> = @{\n     mut next: dlist_link<T>\n };\n \n-class dlist_root<T> {\n-    let mut size: uint;\n-    let mut hd:   dlist_link<T>;\n-    let mut tl:   dlist_link<T>;\n-    new() {\n-        self.size = 0; self.hd = none; self.tl = none;\n-    }\n-    drop {\n-        /* FIXME (#3039) This doesn't work during task failure - the box\n-         * annihilator might have killed some of our nodes already. This will\n-         * be safe to uncomment when the box annihilator is safer. As is,\n-         * this makes test_dlist_cyclic_link below crash the runtime.\n-        // Empty the list. Not doing this explicitly would leave cyclic links\n-        // around, not to be freed until cycle collection at task exit.\n-        while self.hd.is_some() {\n-            self.unlink(self.hd.get());\n-        }\n-        */\n-    }\n-}\n-\n-type dlist<T> = @dlist_root<T>;\n+enum dlist<T> = @{\n+    mut size: uint,\n+    mut hd:   dlist_link<T>,\n+    mut tl:   dlist_link<T>,\n+};\n \n impl private_methods<T> for dlist_node<T> {\n     pure fn assert_links() {\n@@ -107,7 +90,7 @@ pure fn new_dlist_node<T>(+data: T) -> dlist_node<T> {\n \n /// Creates a new, empty dlist.\n pure fn new_dlist<T>() -> dlist<T> {\n-    @unchecked { dlist_root() }\n+    dlist(@{mut size: 0, mut hd: none, mut tl: none})\n }\n \n /// Creates a new dlist with a single element\n@@ -134,7 +117,7 @@ fn concat<T>(lists: dlist<dlist<T>>) -> dlist<T> {\n     result\n }\n \n-impl private_methods<T> for dlist_root<T> {\n+impl private_methods<T> for dlist<T> {\n     pure fn new_link(-data: T) -> dlist_link<T> {\n         some(dlist_node(@{data: data, mut linked: true,\n                           mut prev: none, mut next: none}))\n@@ -336,7 +319,7 @@ impl extensions<T> for dlist<T> {\n      * to the other list's head. O(1).\n      */\n     fn append(them: dlist<T>) {\n-        if box::ptr_eq(self, them) {\n+        if box::ptr_eq(*self, *them) {\n             fail ~\"Cannot append a dlist to itself!\"\n         }\n         if them.len() > 0 {\n@@ -353,7 +336,7 @@ impl extensions<T> for dlist<T> {\n      * list's tail to this list's head. O(1).\n      */\n     fn prepend(them: dlist<T>) {\n-        if box::ptr_eq(self, them) {\n+        if box::ptr_eq(*self, *them) {\n             fail ~\"Cannot prepend a dlist to itself!\"\n         }\n         if them.len() > 0 {"}]}