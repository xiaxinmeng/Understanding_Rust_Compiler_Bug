{"sha": "d81a7aba3cc634ae11c412f528591a1647a02de1", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQ4MWE3YWJhM2NjNjM0YWUxMWM0MTJmNTI4NTkxYTE2NDdhMDJkZTE=", "commit": {"author": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2012-10-10T23:34:02Z"}, "committer": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2012-10-11T00:18:12Z"}, "message": "Minor fixes to the runtime and scheduling part of manual.", "tree": {"sha": "8b2402495725ef30e94ba06f9b99c57a41ee0ba2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8b2402495725ef30e94ba06f9b99c57a41ee0ba2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d81a7aba3cc634ae11c412f528591a1647a02de1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d81a7aba3cc634ae11c412f528591a1647a02de1", "html_url": "https://github.com/rust-lang/rust/commit/d81a7aba3cc634ae11c412f528591a1647a02de1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d81a7aba3cc634ae11c412f528591a1647a02de1/comments", "author": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "committer": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "056fc13e108a1b610661e0a1c617bda164370807", "url": "https://api.github.com/repos/rust-lang/rust/commits/056fc13e108a1b610661e0a1c617bda164370807", "html_url": "https://github.com/rust-lang/rust/commit/056fc13e108a1b610661e0a1c617bda164370807"}], "stats": {"total": 10, "additions": 7, "deletions": 3}, "files": [{"sha": "15e942a740142b9edd21be7b8445b4f1fd0e5e60", "filename": "doc/rust.md", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/d81a7aba3cc634ae11c412f528591a1647a02de1/doc%2Frust.md", "raw_url": "https://github.com/rust-lang/rust/raw/d81a7aba3cc634ae11c412f528591a1647a02de1/doc%2Frust.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/doc%2Frust.md?ref=d81a7aba3cc634ae11c412f528591a1647a02de1", "patch": "@@ -2886,10 +2886,10 @@ non-executing state (blocked, dead) similarly deschedules the task.\n A call to `core::task::spawn`, passing a 0-argument function as its single\n argument, causes the runtime to construct a new task executing the passed\n function. The passed function is referred to as the _entry function_ for\n-the spawned task, and any captured environment is carries is moved from the\n+the spawned task, and any captured environment it carries is moved from the\n spawning task to the spawned task before the spawned task begins execution.\n \n-The result of a `spawn` call is a `core::task::task` value.\n+The result of a `spawn` call is a `core::task::Task` value.\n \n An example of a `spawn` call:\n \n@@ -2938,16 +2938,20 @@ An example of a *receive*:\n let s = comm::recv(po);\n ~~~~~~~~\n \n+Note: this communication system will be replaced by a higher-performance system called \"pipes\",\n+in future versions of Rust.\n+\n \n # Runtime services, linkage and debugging\n \n \n-The Rust _runtime_ is a relatively compact collection of C and Rust code\n+The Rust _runtime_ is a relatively compact collection of C++ and Rust code\n that provides fundamental services and datatypes to all Rust tasks at\n run-time. It is smaller and simpler than many modern language runtimes. It is\n tightly integrated into the language's execution model of memory, tasks,\n communication and logging.\n \n+Note: The runtime library will merge with the `core` library in future versions of Rust.\n \n ### Memory allocation\n "}]}