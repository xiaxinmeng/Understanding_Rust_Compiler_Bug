{"sha": "cd35b9e38d3520b59eb5ef219cec0f17f7d12f91", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNkMzViOWUzOGQzNTIwYjU5ZWI1ZWYyMTljZWMwZjE3ZjdkMTJmOTE=", "commit": {"author": {"name": "mcarton", "email": "cartonmartin+git@gmail.com", "date": "2016-02-15T21:26:20Z"}, "committer": {"name": "mcarton", "email": "cartonmartin+git@gmail.com", "date": "2016-02-15T21:29:07Z"}, "message": "Fix wrong reported lint for EXPL_IMPL_CLONE_ON_COPY", "tree": {"sha": "f59d2888f4667d6372a4356433c816a5c02ca91e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f59d2888f4667d6372a4356433c816a5c02ca91e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/cd35b9e38d3520b59eb5ef219cec0f17f7d12f91", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/cd35b9e38d3520b59eb5ef219cec0f17f7d12f91", "html_url": "https://github.com/rust-lang/rust/commit/cd35b9e38d3520b59eb5ef219cec0f17f7d12f91", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/cd35b9e38d3520b59eb5ef219cec0f17f7d12f91/comments", "author": {"login": "mcarton", "id": 3751788, "node_id": "MDQ6VXNlcjM3NTE3ODg=", "avatar_url": "https://avatars.githubusercontent.com/u/3751788?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mcarton", "html_url": "https://github.com/mcarton", "followers_url": "https://api.github.com/users/mcarton/followers", "following_url": "https://api.github.com/users/mcarton/following{/other_user}", "gists_url": "https://api.github.com/users/mcarton/gists{/gist_id}", "starred_url": "https://api.github.com/users/mcarton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mcarton/subscriptions", "organizations_url": "https://api.github.com/users/mcarton/orgs", "repos_url": "https://api.github.com/users/mcarton/repos", "events_url": "https://api.github.com/users/mcarton/events{/privacy}", "received_events_url": "https://api.github.com/users/mcarton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "mcarton", "id": 3751788, "node_id": "MDQ6VXNlcjM3NTE3ODg=", "avatar_url": "https://avatars.githubusercontent.com/u/3751788?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mcarton", "html_url": "https://github.com/mcarton", "followers_url": "https://api.github.com/users/mcarton/followers", "following_url": "https://api.github.com/users/mcarton/following{/other_user}", "gists_url": "https://api.github.com/users/mcarton/gists{/gist_id}", "starred_url": "https://api.github.com/users/mcarton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mcarton/subscriptions", "organizations_url": "https://api.github.com/users/mcarton/orgs", "repos_url": "https://api.github.com/users/mcarton/repos", "events_url": "https://api.github.com/users/mcarton/events{/privacy}", "received_events_url": "https://api.github.com/users/mcarton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2a0a35c6d058871fc30295966519146d86123a2e", "url": "https://api.github.com/repos/rust-lang/rust/commits/2a0a35c6d058871fc30295966519146d86123a2e", "html_url": "https://github.com/rust-lang/rust/commit/2a0a35c6d058871fc30295966519146d86123a2e"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "30ef2be9384a994be20d07c43342adacb953861a", "filename": "src/derive.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/cd35b9e38d3520b59eb5ef219cec0f17f7d12f91/src%2Fderive.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cd35b9e38d3520b59eb5ef219cec0f17f7d12f91/src%2Fderive.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fderive.rs?ref=cd35b9e38d3520b59eb5ef219cec0f17f7d12f91", "patch": "@@ -16,7 +16,7 @@ use utils::{match_path, span_lint_and_then};\n /// an explicitely defined `PartialEq`. In particular, the following must hold for any type:\n ///\n /// ```rust\n-/// k1 == k2 -> hash(k1) == hash(k2)\n+/// k1 == k2 \u21d2 hash(k1) == hash(k2)\n /// ```\n ///\n /// **Known problems:** None.\n@@ -161,7 +161,7 @@ fn check_copy_clone<'a, 'tcx>(cx: &LateContext<'a, 'tcx>,\n         }\n \n         span_lint_and_then(cx,\n-                           DERIVE_HASH_NOT_EQ,\n+                           EXPL_IMPL_CLONE_ON_COPY,\n                            item.span,\n                            \"you are implementing `Clone` explicitly on a `Copy` type\",\n                            |db| {"}]}