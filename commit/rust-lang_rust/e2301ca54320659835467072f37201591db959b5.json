{"sha": "e2301ca54320659835467072f37201591db959b5", "node_id": "C_kwDOAAsO6NoAKGUyMzAxY2E1NDMyMDY1OTgzNTQ2NzA3MmYzNzIwMTU5MWRiOTU5YjU", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-03-29T10:08:03Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-03-29T10:08:03Z"}, "message": "Auto merge of #95375 - MarcusCalhoun-Lopez:i686_apple_darwin, r=m-ou-se\n\nFix build on i686-apple-darwin systems\n\nReplace `target_arch = \"x86_64\"` with `not(target_arch = \"aarch64\")` so that i686-apple-darwin systems dynamically choose implementation.", "tree": {"sha": "f6586e46d67725f3a9b2b81239a2a3003744d303", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f6586e46d67725f3a9b2b81239a2a3003744d303"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e2301ca54320659835467072f37201591db959b5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e2301ca54320659835467072f37201591db959b5", "html_url": "https://github.com/rust-lang/rust/commit/e2301ca54320659835467072f37201591db959b5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e2301ca54320659835467072f37201591db959b5/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "abf0ec83833095196627f2f292f44976594304ce", "url": "https://api.github.com/repos/rust-lang/rust/commits/abf0ec83833095196627f2f292f44976594304ce", "html_url": "https://github.com/rust-lang/rust/commit/abf0ec83833095196627f2f292f44976594304ce"}, {"sha": "8c188443249ed3b6b0a034800af367b9b43cc190", "url": "https://api.github.com/repos/rust-lang/rust/commits/8c188443249ed3b6b0a034800af367b9b43cc190", "html_url": "https://github.com/rust-lang/rust/commit/8c188443249ed3b6b0a034800af367b9b43cc190"}], "stats": {"total": 13, "additions": 8, "deletions": 5}, "files": [{"sha": "7181451de575fcb8ff7df27ba5a66b18a08904be", "filename": "library/std/src/sys/unix/fs.rs", "status": "modified", "additions": 8, "deletions": 5, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/e2301ca54320659835467072f37201591db959b5/library%2Fstd%2Fsrc%2Fsys%2Funix%2Ffs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e2301ca54320659835467072f37201591db959b5/library%2Fstd%2Fsrc%2Fsys%2Funix%2Ffs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsys%2Funix%2Ffs.rs?ref=e2301ca54320659835467072f37201591db959b5", "patch": "@@ -1535,12 +1535,12 @@ mod remove_dir_impl {\n     use crate::sync::Arc;\n     use crate::sys::{cvt, cvt_r};\n \n-    #[cfg(not(all(target_os = \"macos\", target_arch = \"x86_64\"),))]\n+    #[cfg(not(all(target_os = \"macos\", not(target_arch = \"aarch64\")),))]\n     use libc::{fdopendir, openat, unlinkat};\n-    #[cfg(all(target_os = \"macos\", target_arch = \"x86_64\"))]\n+    #[cfg(all(target_os = \"macos\", not(target_arch = \"aarch64\")))]\n     use macos_weak::{fdopendir, openat, unlinkat};\n \n-    #[cfg(all(target_os = \"macos\", target_arch = \"x86_64\"))]\n+    #[cfg(all(target_os = \"macos\", not(target_arch = \"aarch64\")))]\n     mod macos_weak {\n         use crate::sys::weak::weak;\n         use libc::{c_char, c_int, DIR};\n@@ -1562,6 +1562,9 @@ mod remove_dir_impl {\n         }\n \n         pub unsafe fn fdopendir(fd: c_int) -> *mut DIR {\n+            #[cfg(all(target_os = \"macos\", target_arch = \"x86\"))]\n+            weak!(fn fdopendir(c_int) -> *mut DIR, \"fdopendir$INODE64$UNIX2003\");\n+            #[cfg(all(target_os = \"macos\", target_arch = \"x86_64\"))]\n             weak!(fn fdopendir(c_int) -> *mut DIR, \"fdopendir$INODE64\");\n             fdopendir.get().map(|fdopendir| fdopendir(fd)).unwrap_or_else(|| {\n                 crate::sys::unix::os::set_errno(libc::ENOSYS);\n@@ -1699,12 +1702,12 @@ mod remove_dir_impl {\n         }\n     }\n \n-    #[cfg(not(all(target_os = \"macos\", target_arch = \"x86_64\")))]\n+    #[cfg(not(all(target_os = \"macos\", not(target_arch = \"aarch64\"))))]\n     pub fn remove_dir_all(p: &Path) -> io::Result<()> {\n         remove_dir_all_modern(p)\n     }\n \n-    #[cfg(all(target_os = \"macos\", target_arch = \"x86_64\"))]\n+    #[cfg(all(target_os = \"macos\", not(target_arch = \"aarch64\")))]\n     pub fn remove_dir_all(p: &Path) -> io::Result<()> {\n         if macos_weak::has_openat() {\n             // openat() is available with macOS 10.10+, just like unlinkat() and fdopendir()"}]}