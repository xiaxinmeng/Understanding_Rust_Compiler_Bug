{"sha": "16edaa56bafca405f4bae43d3f18480af13dfc90", "node_id": "C_kwDOAAsO6NoAKDE2ZWRhYTU2YmFmY2E0MDVmNGJhZTQzZDNmMTg0ODBhZjEzZGZjOTA", "commit": {"author": {"name": "Nicholas Bishop", "email": "nbishop@nbishop.net", "date": "2022-11-05T18:26:54Z"}, "committer": {"name": "Nicholas Bishop", "email": "nbishop@nbishop.net", "date": "2022-11-06T22:04:42Z"}, "message": "Limit efiapi calling convention to supported arches\n\nSupported architectures in UEFI are described here:\nhttps://uefi.org/specs/UEFI/2.10/02_Overview.html#calling-conventions\n\nChanges to tests modeled on 8240e7aa101815e2009c7d03b33dd2566d843e73.\n\nhttps://github.com/rust-lang/rust/issues/65815", "tree": {"sha": "56014447de8ef380dac8330e01e0b500415d5c15", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/56014447de8ef380dac8330e01e0b500415d5c15"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/16edaa56bafca405f4bae43d3f18480af13dfc90", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/16edaa56bafca405f4bae43d3f18480af13dfc90", "html_url": "https://github.com/rust-lang/rust/commit/16edaa56bafca405f4bae43d3f18480af13dfc90", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/16edaa56bafca405f4bae43d3f18480af13dfc90/comments", "author": {"login": "nicholasbishop", "id": 1023208, "node_id": "MDQ6VXNlcjEwMjMyMDg=", "avatar_url": "https://avatars.githubusercontent.com/u/1023208?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nicholasbishop", "html_url": "https://github.com/nicholasbishop", "followers_url": "https://api.github.com/users/nicholasbishop/followers", "following_url": "https://api.github.com/users/nicholasbishop/following{/other_user}", "gists_url": "https://api.github.com/users/nicholasbishop/gists{/gist_id}", "starred_url": "https://api.github.com/users/nicholasbishop/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nicholasbishop/subscriptions", "organizations_url": "https://api.github.com/users/nicholasbishop/orgs", "repos_url": "https://api.github.com/users/nicholasbishop/repos", "events_url": "https://api.github.com/users/nicholasbishop/events{/privacy}", "received_events_url": "https://api.github.com/users/nicholasbishop/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nicholasbishop", "id": 1023208, "node_id": "MDQ6VXNlcjEwMjMyMDg=", "avatar_url": "https://avatars.githubusercontent.com/u/1023208?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nicholasbishop", "html_url": "https://github.com/nicholasbishop", "followers_url": "https://api.github.com/users/nicholasbishop/followers", "following_url": "https://api.github.com/users/nicholasbishop/following{/other_user}", "gists_url": "https://api.github.com/users/nicholasbishop/gists{/gist_id}", "starred_url": "https://api.github.com/users/nicholasbishop/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nicholasbishop/subscriptions", "organizations_url": "https://api.github.com/users/nicholasbishop/orgs", "repos_url": "https://api.github.com/users/nicholasbishop/repos", "events_url": "https://api.github.com/users/nicholasbishop/events{/privacy}", "received_events_url": "https://api.github.com/users/nicholasbishop/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7eef946fc0e0eff40e588eab77b09b287accbec3", "url": "https://api.github.com/repos/rust-lang/rust/commits/7eef946fc0e0eff40e588eab77b09b287accbec3", "html_url": "https://github.com/rust-lang/rust/commit/7eef946fc0e0eff40e588eab77b09b287accbec3"}], "stats": {"total": 230, "additions": 130, "deletions": 100}, "files": [{"sha": "0fe600bd0588d9d375acbe248d47bf8f12010b33", "filename": "compiler/rustc_target/src/spec/mod.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/16edaa56bafca405f4bae43d3f18480af13dfc90/compiler%2Frustc_target%2Fsrc%2Fspec%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/16edaa56bafca405f4bae43d3f18480af13dfc90/compiler%2Frustc_target%2Fsrc%2Fspec%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_target%2Fsrc%2Fspec%2Fmod.rs?ref=16edaa56bafca405f4bae43d3f18480af13dfc90", "patch": "@@ -1941,8 +1941,10 @@ impl Target {\n             | PlatformIntrinsic\n             | Unadjusted\n             | Cdecl { .. }\n-            | EfiApi\n             | RustCold => true,\n+            EfiApi => {\n+                [\"arm\", \"aarch64\", \"riscv32\", \"riscv64\", \"x86\", \"x86_64\"].contains(&&self.arch[..])\n+            }\n             X86Interrupt => [\"x86\", \"x86_64\"].contains(&&self.arch[..]),\n             Aapcs { .. } => \"arm\" == self.arch,\n             CCmseNonSecureCall => [\"arm\", \"aarch64\"].contains(&&self.arch[..]),"}, {"sha": "0c0d736acd0484a34b2ffac4893254fdb0cccf99", "filename": "src/test/ui/feature-gates/feature-gate-abi-efiapi.rs", "status": "added", "additions": 33, "deletions": 0, "changes": 33, "blob_url": "https://github.com/rust-lang/rust/blob/16edaa56bafca405f4bae43d3f18480af13dfc90/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-abi-efiapi.rs", "raw_url": "https://github.com/rust-lang/rust/raw/16edaa56bafca405f4bae43d3f18480af13dfc90/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-abi-efiapi.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-abi-efiapi.rs?ref=16edaa56bafca405f4bae43d3f18480af13dfc90", "patch": "@@ -0,0 +1,33 @@\n+// needs-llvm-components: x86\n+// compile-flags: --target=x86_64-unknown-linux-gnu --crate-type=rlib\n+#![no_core]\n+#![feature(no_core, lang_items)]\n+#[lang=\"sized\"]\n+trait Sized { }\n+\n+// Functions\n+extern \"efiapi\" fn f1() {} //~ ERROR efiapi ABI is experimental\n+\n+// Methods in trait defintion\n+trait Tr {\n+    extern \"efiapi\" fn f2(); //~ ERROR efiapi ABI is experimental\n+    extern \"efiapi\" fn f3() {} //~ ERROR efiapi ABI is experimental\n+}\n+\n+struct S;\n+\n+// Methods in trait impl\n+impl Tr for S {\n+    extern \"efiapi\" fn f2() {} //~ ERROR efiapi ABI is experimental\n+}\n+\n+// Methods in inherent impl\n+impl S {\n+    extern \"efiapi\" fn f4() {} //~ ERROR efiapi ABI is experimental\n+}\n+\n+// Function pointer types\n+type A = extern \"efiapi\" fn(); //~ ERROR efiapi ABI is experimental\n+\n+// Foreign modules\n+extern \"efiapi\" {} //~ ERROR efiapi ABI is experimental"}, {"sha": "5b01dcc6d85952aeaa6dcffcf6206921a1d7bac7", "filename": "src/test/ui/feature-gates/feature-gate-abi-efiapi.stderr", "status": "added", "additions": 66, "deletions": 0, "changes": 66, "blob_url": "https://github.com/rust-lang/rust/blob/16edaa56bafca405f4bae43d3f18480af13dfc90/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-abi-efiapi.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/16edaa56bafca405f4bae43d3f18480af13dfc90/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-abi-efiapi.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-abi-efiapi.stderr?ref=16edaa56bafca405f4bae43d3f18480af13dfc90", "patch": "@@ -0,0 +1,66 @@\n+error[E0658]: efiapi ABI is experimental and subject to change\n+  --> $DIR/feature-gate-abi-efiapi.rs:9:8\n+   |\n+LL | extern \"efiapi\" fn f1() {}\n+   |        ^^^^^^^^\n+   |\n+   = note: see issue #65815 <https://github.com/rust-lang/rust/issues/65815> for more information\n+   = help: add `#![feature(abi_efiapi)]` to the crate attributes to enable\n+\n+error[E0658]: efiapi ABI is experimental and subject to change\n+  --> $DIR/feature-gate-abi-efiapi.rs:13:12\n+   |\n+LL |     extern \"efiapi\" fn f2();\n+   |            ^^^^^^^^\n+   |\n+   = note: see issue #65815 <https://github.com/rust-lang/rust/issues/65815> for more information\n+   = help: add `#![feature(abi_efiapi)]` to the crate attributes to enable\n+\n+error[E0658]: efiapi ABI is experimental and subject to change\n+  --> $DIR/feature-gate-abi-efiapi.rs:14:12\n+   |\n+LL |     extern \"efiapi\" fn f3() {}\n+   |            ^^^^^^^^\n+   |\n+   = note: see issue #65815 <https://github.com/rust-lang/rust/issues/65815> for more information\n+   = help: add `#![feature(abi_efiapi)]` to the crate attributes to enable\n+\n+error[E0658]: efiapi ABI is experimental and subject to change\n+  --> $DIR/feature-gate-abi-efiapi.rs:21:12\n+   |\n+LL |     extern \"efiapi\" fn f2() {}\n+   |            ^^^^^^^^\n+   |\n+   = note: see issue #65815 <https://github.com/rust-lang/rust/issues/65815> for more information\n+   = help: add `#![feature(abi_efiapi)]` to the crate attributes to enable\n+\n+error[E0658]: efiapi ABI is experimental and subject to change\n+  --> $DIR/feature-gate-abi-efiapi.rs:26:12\n+   |\n+LL |     extern \"efiapi\" fn f4() {}\n+   |            ^^^^^^^^\n+   |\n+   = note: see issue #65815 <https://github.com/rust-lang/rust/issues/65815> for more information\n+   = help: add `#![feature(abi_efiapi)]` to the crate attributes to enable\n+\n+error[E0658]: efiapi ABI is experimental and subject to change\n+  --> $DIR/feature-gate-abi-efiapi.rs:30:17\n+   |\n+LL | type A = extern \"efiapi\" fn();\n+   |                 ^^^^^^^^\n+   |\n+   = note: see issue #65815 <https://github.com/rust-lang/rust/issues/65815> for more information\n+   = help: add `#![feature(abi_efiapi)]` to the crate attributes to enable\n+\n+error[E0658]: efiapi ABI is experimental and subject to change\n+  --> $DIR/feature-gate-abi-efiapi.rs:33:8\n+   |\n+LL | extern \"efiapi\" {}\n+   |        ^^^^^^^^\n+   |\n+   = note: see issue #65815 <https://github.com/rust-lang/rust/issues/65815> for more information\n+   = help: add `#![feature(abi_efiapi)]` to the crate attributes to enable\n+\n+error: aborting due to 7 previous errors\n+\n+For more information about this error, try `rustc --explain E0658`."}, {"sha": "712655f9775d6f4a41e30d3082d16d3641063d42", "filename": "src/test/ui/feature-gates/feature-gate-abi.rs", "status": "modified", "additions": 0, "deletions": 8, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/16edaa56bafca405f4bae43d3f18480af13dfc90/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-abi.rs", "raw_url": "https://github.com/rust-lang/rust/raw/16edaa56bafca405f4bae43d3f18480af13dfc90/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-abi.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-abi.rs?ref=16edaa56bafca405f4bae43d3f18480af13dfc90", "patch": "@@ -1,6 +1,5 @@\n // gate-test-intrinsics\n // gate-test-platform_intrinsics\n-// gate-test-abi_efiapi\n // compile-flags: --crate-type=rlib\n \n #![feature(no_core, lang_items)]\n@@ -18,7 +17,6 @@ extern \"rust-intrinsic\" fn f1() {} //~ ERROR intrinsics are subject to change\n extern \"platform-intrinsic\" fn f2() {} //~ ERROR platform intrinsics are experimental\n                                        //~^ ERROR intrinsic must be in\n extern \"rust-call\" fn f4(_: ()) {} //~ ERROR rust-call ABI is subject to change\n-extern \"efiapi\" fn f10() {} //~ ERROR efiapi ABI is experimental and subject to change\n \n // Methods in trait definition\n trait Tr {\n@@ -27,10 +25,8 @@ trait Tr {\n     extern \"platform-intrinsic\" fn m2(); //~ ERROR platform intrinsics are experimental\n                                          //~^ ERROR intrinsic must be in\n     extern \"rust-call\" fn m4(_: ()); //~ ERROR rust-call ABI is subject to change\n-    extern \"efiapi\" fn m10(); //~ ERROR efiapi ABI is experimental and subject to change\n \n     extern \"rust-call\" fn dm4(_: ()) {} //~ ERROR rust-call ABI is subject to change\n-    extern \"efiapi\" fn dm10() {} //~ ERROR efiapi ABI is experimental and subject to change\n }\n \n struct S;\n@@ -42,7 +38,6 @@ impl Tr for S {\n     extern \"platform-intrinsic\" fn m2() {} //~ ERROR platform intrinsics are experimental\n                                            //~^ ERROR intrinsic must be in\n     extern \"rust-call\" fn m4(_: ()) {} //~ ERROR rust-call ABI is subject to change\n-    extern \"efiapi\" fn m10() {} //~ ERROR efiapi ABI is experimental and subject to change\n }\n \n // Methods in inherent impl\n@@ -52,17 +47,14 @@ impl S {\n     extern \"platform-intrinsic\" fn im2() {} //~ ERROR platform intrinsics are experimental\n                                             //~^ ERROR intrinsic must be in\n     extern \"rust-call\" fn im4(_: ()) {} //~ ERROR rust-call ABI is subject to change\n-    extern \"efiapi\" fn im10() {} //~ ERROR efiapi ABI is experimental and subject to change\n }\n \n // Function pointer types\n type A1 = extern \"rust-intrinsic\" fn(); //~ ERROR intrinsics are subject to change\n type A2 = extern \"platform-intrinsic\" fn(); //~ ERROR platform intrinsics are experimental\n type A4 = extern \"rust-call\" fn(_: ()); //~ ERROR rust-call ABI is subject to change\n-type A10 = extern \"efiapi\" fn(); //~ ERROR efiapi ABI is experimental and subject to change\n \n // Foreign modules\n extern \"rust-intrinsic\" {} //~ ERROR intrinsics are subject to change\n extern \"platform-intrinsic\" {} //~ ERROR platform intrinsics are experimental\n extern \"rust-call\" {} //~ ERROR rust-call ABI is subject to change\n-extern \"efiapi\" {} //~ ERROR efiapi ABI is experimental and subject to change"}, {"sha": "e9791b9513f4d29e892164e55d2cfeed34e79981", "filename": "src/test/ui/feature-gates/feature-gate-abi.stderr", "status": "modified", "additions": 28, "deletions": 91, "changes": 119, "blob_url": "https://github.com/rust-lang/rust/blob/16edaa56bafca405f4bae43d3f18480af13dfc90/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-abi.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/16edaa56bafca405f4bae43d3f18480af13dfc90/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-abi.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-abi.stderr?ref=16edaa56bafca405f4bae43d3f18480af13dfc90", "patch": "@@ -1,13 +1,13 @@\n error[E0658]: intrinsics are subject to change\n-  --> $DIR/feature-gate-abi.rs:16:8\n+  --> $DIR/feature-gate-abi.rs:15:8\n    |\n LL | extern \"rust-intrinsic\" fn f1() {}\n    |        ^^^^^^^^^^^^^^^^\n    |\n    = help: add `#![feature(intrinsics)]` to the crate attributes to enable\n \n error[E0658]: platform intrinsics are experimental and possibly buggy\n-  --> $DIR/feature-gate-abi.rs:18:8\n+  --> $DIR/feature-gate-abi.rs:17:8\n    |\n LL | extern \"platform-intrinsic\" fn f2() {}\n    |        ^^^^^^^^^^^^^^^^^^^^\n@@ -16,33 +16,24 @@ LL | extern \"platform-intrinsic\" fn f2() {}\n    = help: add `#![feature(platform_intrinsics)]` to the crate attributes to enable\n \n error[E0658]: rust-call ABI is subject to change\n-  --> $DIR/feature-gate-abi.rs:20:8\n+  --> $DIR/feature-gate-abi.rs:19:8\n    |\n LL | extern \"rust-call\" fn f4(_: ()) {}\n    |        ^^^^^^^^^^^\n    |\n    = note: see issue #29625 <https://github.com/rust-lang/rust/issues/29625> for more information\n    = help: add `#![feature(unboxed_closures)]` to the crate attributes to enable\n \n-error[E0658]: efiapi ABI is experimental and subject to change\n-  --> $DIR/feature-gate-abi.rs:21:8\n-   |\n-LL | extern \"efiapi\" fn f10() {}\n-   |        ^^^^^^^^\n-   |\n-   = note: see issue #65815 <https://github.com/rust-lang/rust/issues/65815> for more information\n-   = help: add `#![feature(abi_efiapi)]` to the crate attributes to enable\n-\n error[E0658]: intrinsics are subject to change\n-  --> $DIR/feature-gate-abi.rs:25:12\n+  --> $DIR/feature-gate-abi.rs:23:12\n    |\n LL |     extern \"rust-intrinsic\" fn m1();\n    |            ^^^^^^^^^^^^^^^^\n    |\n    = help: add `#![feature(intrinsics)]` to the crate attributes to enable\n \n error[E0658]: platform intrinsics are experimental and possibly buggy\n-  --> $DIR/feature-gate-abi.rs:27:12\n+  --> $DIR/feature-gate-abi.rs:25:12\n    |\n LL |     extern \"platform-intrinsic\" fn m2();\n    |            ^^^^^^^^^^^^^^^^^^^^\n@@ -51,51 +42,33 @@ LL |     extern \"platform-intrinsic\" fn m2();\n    = help: add `#![feature(platform_intrinsics)]` to the crate attributes to enable\n \n error[E0658]: rust-call ABI is subject to change\n-  --> $DIR/feature-gate-abi.rs:29:12\n+  --> $DIR/feature-gate-abi.rs:27:12\n    |\n LL |     extern \"rust-call\" fn m4(_: ());\n    |            ^^^^^^^^^^^\n    |\n    = note: see issue #29625 <https://github.com/rust-lang/rust/issues/29625> for more information\n    = help: add `#![feature(unboxed_closures)]` to the crate attributes to enable\n \n-error[E0658]: efiapi ABI is experimental and subject to change\n-  --> $DIR/feature-gate-abi.rs:30:12\n-   |\n-LL |     extern \"efiapi\" fn m10();\n-   |            ^^^^^^^^\n-   |\n-   = note: see issue #65815 <https://github.com/rust-lang/rust/issues/65815> for more information\n-   = help: add `#![feature(abi_efiapi)]` to the crate attributes to enable\n-\n error[E0658]: rust-call ABI is subject to change\n-  --> $DIR/feature-gate-abi.rs:32:12\n+  --> $DIR/feature-gate-abi.rs:29:12\n    |\n LL |     extern \"rust-call\" fn dm4(_: ()) {}\n    |            ^^^^^^^^^^^\n    |\n    = note: see issue #29625 <https://github.com/rust-lang/rust/issues/29625> for more information\n    = help: add `#![feature(unboxed_closures)]` to the crate attributes to enable\n \n-error[E0658]: efiapi ABI is experimental and subject to change\n-  --> $DIR/feature-gate-abi.rs:33:12\n-   |\n-LL |     extern \"efiapi\" fn dm10() {}\n-   |            ^^^^^^^^\n-   |\n-   = note: see issue #65815 <https://github.com/rust-lang/rust/issues/65815> for more information\n-   = help: add `#![feature(abi_efiapi)]` to the crate attributes to enable\n-\n error[E0658]: intrinsics are subject to change\n-  --> $DIR/feature-gate-abi.rs:40:12\n+  --> $DIR/feature-gate-abi.rs:36:12\n    |\n LL |     extern \"rust-intrinsic\" fn m1() {}\n    |            ^^^^^^^^^^^^^^^^\n    |\n    = help: add `#![feature(intrinsics)]` to the crate attributes to enable\n \n error[E0658]: platform intrinsics are experimental and possibly buggy\n-  --> $DIR/feature-gate-abi.rs:42:12\n+  --> $DIR/feature-gate-abi.rs:38:12\n    |\n LL |     extern \"platform-intrinsic\" fn m2() {}\n    |            ^^^^^^^^^^^^^^^^^^^^\n@@ -104,33 +77,24 @@ LL |     extern \"platform-intrinsic\" fn m2() {}\n    = help: add `#![feature(platform_intrinsics)]` to the crate attributes to enable\n \n error[E0658]: rust-call ABI is subject to change\n-  --> $DIR/feature-gate-abi.rs:44:12\n+  --> $DIR/feature-gate-abi.rs:40:12\n    |\n LL |     extern \"rust-call\" fn m4(_: ()) {}\n    |            ^^^^^^^^^^^\n    |\n    = note: see issue #29625 <https://github.com/rust-lang/rust/issues/29625> for more information\n    = help: add `#![feature(unboxed_closures)]` to the crate attributes to enable\n \n-error[E0658]: efiapi ABI is experimental and subject to change\n-  --> $DIR/feature-gate-abi.rs:45:12\n-   |\n-LL |     extern \"efiapi\" fn m10() {}\n-   |            ^^^^^^^^\n-   |\n-   = note: see issue #65815 <https://github.com/rust-lang/rust/issues/65815> for more information\n-   = help: add `#![feature(abi_efiapi)]` to the crate attributes to enable\n-\n error[E0658]: intrinsics are subject to change\n-  --> $DIR/feature-gate-abi.rs:50:12\n+  --> $DIR/feature-gate-abi.rs:45:12\n    |\n LL |     extern \"rust-intrinsic\" fn im1() {}\n    |            ^^^^^^^^^^^^^^^^\n    |\n    = help: add `#![feature(intrinsics)]` to the crate attributes to enable\n \n error[E0658]: platform intrinsics are experimental and possibly buggy\n-  --> $DIR/feature-gate-abi.rs:52:12\n+  --> $DIR/feature-gate-abi.rs:47:12\n    |\n LL |     extern \"platform-intrinsic\" fn im2() {}\n    |            ^^^^^^^^^^^^^^^^^^^^\n@@ -139,33 +103,24 @@ LL |     extern \"platform-intrinsic\" fn im2() {}\n    = help: add `#![feature(platform_intrinsics)]` to the crate attributes to enable\n \n error[E0658]: rust-call ABI is subject to change\n-  --> $DIR/feature-gate-abi.rs:54:12\n+  --> $DIR/feature-gate-abi.rs:49:12\n    |\n LL |     extern \"rust-call\" fn im4(_: ()) {}\n    |            ^^^^^^^^^^^\n    |\n    = note: see issue #29625 <https://github.com/rust-lang/rust/issues/29625> for more information\n    = help: add `#![feature(unboxed_closures)]` to the crate attributes to enable\n \n-error[E0658]: efiapi ABI is experimental and subject to change\n-  --> $DIR/feature-gate-abi.rs:55:12\n-   |\n-LL |     extern \"efiapi\" fn im10() {}\n-   |            ^^^^^^^^\n-   |\n-   = note: see issue #65815 <https://github.com/rust-lang/rust/issues/65815> for more information\n-   = help: add `#![feature(abi_efiapi)]` to the crate attributes to enable\n-\n error[E0658]: intrinsics are subject to change\n-  --> $DIR/feature-gate-abi.rs:59:18\n+  --> $DIR/feature-gate-abi.rs:53:18\n    |\n LL | type A1 = extern \"rust-intrinsic\" fn();\n    |                  ^^^^^^^^^^^^^^^^\n    |\n    = help: add `#![feature(intrinsics)]` to the crate attributes to enable\n \n error[E0658]: platform intrinsics are experimental and possibly buggy\n-  --> $DIR/feature-gate-abi.rs:60:18\n+  --> $DIR/feature-gate-abi.rs:54:18\n    |\n LL | type A2 = extern \"platform-intrinsic\" fn();\n    |                  ^^^^^^^^^^^^^^^^^^^^\n@@ -174,33 +129,24 @@ LL | type A2 = extern \"platform-intrinsic\" fn();\n    = help: add `#![feature(platform_intrinsics)]` to the crate attributes to enable\n \n error[E0658]: rust-call ABI is subject to change\n-  --> $DIR/feature-gate-abi.rs:61:18\n+  --> $DIR/feature-gate-abi.rs:55:18\n    |\n LL | type A4 = extern \"rust-call\" fn(_: ());\n    |                  ^^^^^^^^^^^\n    |\n    = note: see issue #29625 <https://github.com/rust-lang/rust/issues/29625> for more information\n    = help: add `#![feature(unboxed_closures)]` to the crate attributes to enable\n \n-error[E0658]: efiapi ABI is experimental and subject to change\n-  --> $DIR/feature-gate-abi.rs:62:19\n-   |\n-LL | type A10 = extern \"efiapi\" fn();\n-   |                   ^^^^^^^^\n-   |\n-   = note: see issue #65815 <https://github.com/rust-lang/rust/issues/65815> for more information\n-   = help: add `#![feature(abi_efiapi)]` to the crate attributes to enable\n-\n error[E0658]: intrinsics are subject to change\n-  --> $DIR/feature-gate-abi.rs:65:8\n+  --> $DIR/feature-gate-abi.rs:58:8\n    |\n LL | extern \"rust-intrinsic\" {}\n    |        ^^^^^^^^^^^^^^^^\n    |\n    = help: add `#![feature(intrinsics)]` to the crate attributes to enable\n \n error[E0658]: platform intrinsics are experimental and possibly buggy\n-  --> $DIR/feature-gate-abi.rs:66:8\n+  --> $DIR/feature-gate-abi.rs:59:8\n    |\n LL | extern \"platform-intrinsic\" {}\n    |        ^^^^^^^^^^^^^^^^^^^^\n@@ -209,71 +155,62 @@ LL | extern \"platform-intrinsic\" {}\n    = help: add `#![feature(platform_intrinsics)]` to the crate attributes to enable\n \n error[E0658]: rust-call ABI is subject to change\n-  --> $DIR/feature-gate-abi.rs:67:8\n+  --> $DIR/feature-gate-abi.rs:60:8\n    |\n LL | extern \"rust-call\" {}\n    |        ^^^^^^^^^^^\n    |\n    = note: see issue #29625 <https://github.com/rust-lang/rust/issues/29625> for more information\n    = help: add `#![feature(unboxed_closures)]` to the crate attributes to enable\n \n-error[E0658]: efiapi ABI is experimental and subject to change\n-  --> $DIR/feature-gate-abi.rs:68:8\n-   |\n-LL | extern \"efiapi\" {}\n-   |        ^^^^^^^^\n-   |\n-   = note: see issue #65815 <https://github.com/rust-lang/rust/issues/65815> for more information\n-   = help: add `#![feature(abi_efiapi)]` to the crate attributes to enable\n-\n error: intrinsic must be in `extern \"rust-intrinsic\" { ... }` block\n-  --> $DIR/feature-gate-abi.rs:25:32\n+  --> $DIR/feature-gate-abi.rs:23:32\n    |\n LL |     extern \"rust-intrinsic\" fn m1();\n    |                                ^^\n \n error: intrinsic must be in `extern \"rust-intrinsic\" { ... }` block\n-  --> $DIR/feature-gate-abi.rs:27:36\n+  --> $DIR/feature-gate-abi.rs:25:36\n    |\n LL |     extern \"platform-intrinsic\" fn m2();\n    |                                    ^^\n \n error: intrinsic must be in `extern \"rust-intrinsic\" { ... }` block\n-  --> $DIR/feature-gate-abi.rs:16:33\n+  --> $DIR/feature-gate-abi.rs:15:33\n    |\n LL | extern \"rust-intrinsic\" fn f1() {}\n    |                                 ^^\n \n error: intrinsic must be in `extern \"rust-intrinsic\" { ... }` block\n-  --> $DIR/feature-gate-abi.rs:18:37\n+  --> $DIR/feature-gate-abi.rs:17:37\n    |\n LL | extern \"platform-intrinsic\" fn f2() {}\n    |                                     ^^\n \n error: intrinsic must be in `extern \"rust-intrinsic\" { ... }` block\n-  --> $DIR/feature-gate-abi.rs:40:37\n+  --> $DIR/feature-gate-abi.rs:36:37\n    |\n LL |     extern \"rust-intrinsic\" fn m1() {}\n    |                                     ^^\n \n error: intrinsic must be in `extern \"rust-intrinsic\" { ... }` block\n-  --> $DIR/feature-gate-abi.rs:42:41\n+  --> $DIR/feature-gate-abi.rs:38:41\n    |\n LL |     extern \"platform-intrinsic\" fn m2() {}\n    |                                         ^^\n \n error: intrinsic must be in `extern \"rust-intrinsic\" { ... }` block\n-  --> $DIR/feature-gate-abi.rs:50:38\n+  --> $DIR/feature-gate-abi.rs:45:38\n    |\n LL |     extern \"rust-intrinsic\" fn im1() {}\n    |                                      ^^\n \n error: intrinsic must be in `extern \"rust-intrinsic\" { ... }` block\n-  --> $DIR/feature-gate-abi.rs:52:42\n+  --> $DIR/feature-gate-abi.rs:47:42\n    |\n LL |     extern \"platform-intrinsic\" fn im2() {}\n    |                                          ^^\n \n-error: aborting due to 34 previous errors\n+error: aborting due to 27 previous errors\n \n For more information about this error, try `rustc --explain E0658`."}]}