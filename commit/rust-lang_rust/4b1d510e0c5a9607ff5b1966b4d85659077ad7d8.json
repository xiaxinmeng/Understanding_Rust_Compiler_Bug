{"sha": "4b1d510e0c5a9607ff5b1966b4d85659077ad7d8", "node_id": "C_kwDOAAsO6NoAKDRiMWQ1MTBlMGM1YTk2MDdmZjViMTk2NmI0ZDg1NjU5MDc3YWQ3ZDg", "commit": {"author": {"name": "Dylan DPC", "email": "99973273+Dylan-DPC@users.noreply.github.com", "date": "2022-06-14T08:35:29Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-06-14T08:35:29Z"}, "message": "Rollup merge of #97869 - ssomers:btree_comments, r=Dylan-DPC\n\nBTree: tweak internal comments", "tree": {"sha": "9dc06a35d3d1b758a4e906f47f53304315f9c4a6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9dc06a35d3d1b758a4e906f47f53304315f9c4a6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4b1d510e0c5a9607ff5b1966b4d85659077ad7d8", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJiqEhRCRBK7hj4Ov3rIwAAuqQIADwH/RniGxwDcEBmdI0/IjDz\n/gAAM8mnOotNWd6XHksbZImfUprDO9z11ZlIzsX0JEvBpdv+X4FebDQyUYXLcedn\nOw2jTpkwX3csm2KggcnMf43fmHll08+4vArgkZOhPvHaWfrWQXtFEZ5aikjXx7IL\nPOcrOjS6ccu+nxdXlktmIuvsZKHcOeo8f2Qnf2a492GHI4aVSbt9GUkaxcpvo8jK\n746jnmUHpuNcPKi+5DEhYz4vvIZrfC0vOJdSHiE1es+Zkf4HhfsM7i6pewuG6x5B\nFPrY0aFnobkHiXNeEEeBEz7ccR1lmv/ks8gx3w8i46fSmV5MhDI5B5AVy0Lu/L0=\n=Uj9+\n-----END PGP SIGNATURE-----\n", "payload": "tree 9dc06a35d3d1b758a4e906f47f53304315f9c4a6\nparent 4e02a9281dd8c74cf5c04df044659b5e03b17571\nparent 6f92f5ab66aa5e732e724ec24d825558f326e28f\nauthor Dylan DPC <99973273+Dylan-DPC@users.noreply.github.com> 1655195729 +0200\ncommitter GitHub <noreply@github.com> 1655195729 +0200\n\nRollup merge of #97869 - ssomers:btree_comments, r=Dylan-DPC\n\nBTree: tweak internal comments\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4b1d510e0c5a9607ff5b1966b4d85659077ad7d8", "html_url": "https://github.com/rust-lang/rust/commit/4b1d510e0c5a9607ff5b1966b4d85659077ad7d8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4b1d510e0c5a9607ff5b1966b4d85659077ad7d8/comments", "author": {"login": "Dylan-DPC", "id": 99973273, "node_id": "U_kgDOBfV4mQ", "avatar_url": "https://avatars.githubusercontent.com/u/99973273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dylan-DPC", "html_url": "https://github.com/Dylan-DPC", "followers_url": "https://api.github.com/users/Dylan-DPC/followers", "following_url": "https://api.github.com/users/Dylan-DPC/following{/other_user}", "gists_url": "https://api.github.com/users/Dylan-DPC/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dylan-DPC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dylan-DPC/subscriptions", "organizations_url": "https://api.github.com/users/Dylan-DPC/orgs", "repos_url": "https://api.github.com/users/Dylan-DPC/repos", "events_url": "https://api.github.com/users/Dylan-DPC/events{/privacy}", "received_events_url": "https://api.github.com/users/Dylan-DPC/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4e02a9281dd8c74cf5c04df044659b5e03b17571", "url": "https://api.github.com/repos/rust-lang/rust/commits/4e02a9281dd8c74cf5c04df044659b5e03b17571", "html_url": "https://github.com/rust-lang/rust/commit/4e02a9281dd8c74cf5c04df044659b5e03b17571"}, {"sha": "6f92f5ab66aa5e732e724ec24d825558f326e28f", "url": "https://api.github.com/repos/rust-lang/rust/commits/6f92f5ab66aa5e732e724ec24d825558f326e28f", "html_url": "https://github.com/rust-lang/rust/commit/6f92f5ab66aa5e732e724ec24d825558f326e28f"}], "stats": {"total": 13, "additions": 7, "deletions": 6}, "files": [{"sha": "fd73fde2acb2df6f1cc25a52a94d11bdd663c1ae", "filename": "library/alloc/src/collections/btree/fix.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/4b1d510e0c5a9607ff5b1966b4d85659077ad7d8/library%2Falloc%2Fsrc%2Fcollections%2Fbtree%2Ffix.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4b1d510e0c5a9607ff5b1966b4d85659077ad7d8/library%2Falloc%2Fsrc%2Fcollections%2Fbtree%2Ffix.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Falloc%2Fsrc%2Fcollections%2Fbtree%2Ffix.rs?ref=4b1d510e0c5a9607ff5b1966b4d85659077ad7d8", "patch": "@@ -91,8 +91,8 @@ impl<K, V> Root<K, V> {\n         }\n     }\n \n-    /// Stock up any underfull nodes on the right border of the tree.\n-    /// The other nodes, those that are not the root nor a rightmost edge,\n+    /// Stocks up any underfull nodes on the right border of the tree.\n+    /// The other nodes, those that are neither the root nor a rightmost edge,\n     /// must be prepared to have up to MIN_LEN elements stolen.\n     pub fn fix_right_border_of_plentiful(&mut self) {\n         let mut cur_node = self.borrow_mut();"}, {"sha": "e2749aac694c8227e8082a738a8327df12fbf8e4", "filename": "library/alloc/src/collections/btree/map/entry.rs", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/4b1d510e0c5a9607ff5b1966b4d85659077ad7d8/library%2Falloc%2Fsrc%2Fcollections%2Fbtree%2Fmap%2Fentry.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4b1d510e0c5a9607ff5b1966b4d85659077ad7d8/library%2Falloc%2Fsrc%2Fcollections%2Fbtree%2Fmap%2Fentry.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Falloc%2Fsrc%2Fcollections%2Fbtree%2Fmap%2Fentry.rs?ref=4b1d510e0c5a9607ff5b1966b4d85659077ad7d8", "patch": "@@ -315,7 +315,7 @@ impl<'a, K: Ord, V> VacantEntry<'a, K, V> {\n     pub fn insert(self, value: V) -> &'a mut V {\n         let out_ptr = match self.handle {\n             None => {\n-                // SAFETY: We have consumed self.handle and the reference returned.\n+                // SAFETY: There is no tree yet so no reference to it exists.\n                 let map = unsafe { self.dormant_map.awaken() };\n                 let mut root = NodeRef::new_leaf();\n                 let val_ptr = root.borrow_mut().push(self.key, value) as *mut V;\n@@ -325,16 +325,17 @@ impl<'a, K: Ord, V> VacantEntry<'a, K, V> {\n             }\n             Some(handle) => match handle.insert_recursing(self.key, value) {\n                 (None, val_ptr) => {\n-                    // SAFETY: We have consumed self.handle and the handle returned.\n+                    // SAFETY: We have consumed self.handle.\n                     let map = unsafe { self.dormant_map.awaken() };\n                     map.length += 1;\n                     val_ptr\n                 }\n                 (Some(ins), val_ptr) => {\n                     drop(ins.left);\n-                    // SAFETY: We have consumed self.handle and the reference returned.\n+                    // SAFETY: We have consumed self.handle and dropped the\n+                    // remaining reference to the tree, ins.left.\n                     let map = unsafe { self.dormant_map.awaken() };\n-                    let root = map.root.as_mut().unwrap();\n+                    let root = map.root.as_mut().unwrap(); // same as ins.left\n                     root.push_internal_level().push(ins.kv.0, ins.kv.1, ins.right);\n                     map.length += 1;\n                     val_ptr"}]}