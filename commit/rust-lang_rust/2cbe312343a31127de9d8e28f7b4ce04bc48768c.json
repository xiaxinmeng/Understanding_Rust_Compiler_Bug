{"sha": "2cbe312343a31127de9d8e28f7b4ce04bc48768c", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJjYmUzMTIzNDNhMzExMjdkZTlkOGUyOGY3YjRjZTA0YmM0ODc2OGM=", "commit": {"author": {"name": "Palmer Cox", "email": "p@lmercox.com", "date": "2013-07-27T19:12:49Z"}, "committer": {"name": "Palmer Cox", "email": "p@lmercox.com", "date": "2013-08-02T22:49:00Z"}, "message": "Crypto: Remove DigestUtil and convert to default methods on the Digest trait.", "tree": {"sha": "a1ed39d9409370c6fbfb5f1bef8a54f231608292", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a1ed39d9409370c6fbfb5f1bef8a54f231608292"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2cbe312343a31127de9d8e28f7b4ce04bc48768c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2cbe312343a31127de9d8e28f7b4ce04bc48768c", "html_url": "https://github.com/rust-lang/rust/commit/2cbe312343a31127de9d8e28f7b4ce04bc48768c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2cbe312343a31127de9d8e28f7b4ce04bc48768c/comments", "author": null, "committer": null, "parents": [{"sha": "ee3f75366cc1468a4ce8106976eeb9f42eb9965b", "url": "https://api.github.com/repos/rust-lang/rust/commits/ee3f75366cc1468a4ce8106976eeb9f42eb9965b", "html_url": "https://github.com/rust-lang/rust/commit/ee3f75366cc1468a4ce8106976eeb9f42eb9965b"}], "stats": {"total": 53, "additions": 23, "deletions": 30}, "files": [{"sha": "217573a4135b04be9fad37885c7df52db1081352", "filename": "src/libextra/crypto/digest.rs", "status": "modified", "additions": 20, "deletions": 26, "changes": 46, "blob_url": "https://github.com/rust-lang/rust/blob/2cbe312343a31127de9d8e28f7b4ce04bc48768c/src%2Flibextra%2Fcrypto%2Fdigest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2cbe312343a31127de9d8e28f7b4ce04bc48768c/src%2Flibextra%2Fcrypto%2Fdigest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibextra%2Fcrypto%2Fdigest.rs?ref=2cbe312343a31127de9d8e28f7b4ce04bc48768c", "patch": "@@ -8,10 +8,10 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-\n use std::uint;\n use std::vec;\n \n+\n /**\n  * The Digest trait specifies an interface common to digest functions, such as SHA-1 and the SHA-2\n  * family of digest functions.\n@@ -28,6 +28,10 @@ pub trait Digest {\n \n     /**\n      * Retrieve the digest result. This method may be called multiple times.\n+     *\n+     * # Arguments\n+     *\n+     * * out - the vector to hold the result. Must be large enough to contain output_bits().\n      */\n     fn result(&mut self, out: &mut [u8]);\n \n@@ -41,47 +45,37 @@ pub trait Digest {\n      * Get the output size in bits.\n      */\n     fn output_bits(&self) -> uint;\n-}\n-\n-fn to_hex(rr: &[u8]) -> ~str {\n-    let mut s = ~\"\";\n-    foreach b in rr.iter() {\n-        let hex = uint::to_str_radix(*b as uint, 16u);\n-        if hex.len() == 1 {\n-            s.push_char('0');\n-        }\n-        s.push_str(hex);\n-    }\n-    return s;\n-}\n \n-/// Contains utility methods for Digests.\n-/// FIXME: #7339: Convert to default methods when issues with them are resolved.\n-pub trait DigestUtil {\n     /**\n      * Convenience functon that feeds a string into a digest\n      *\n      * # Arguments\n      *\n      * * in The string to feed into the digest\n      */\n-    fn input_str(&mut self, input: &str);\n+    fn input_str(&mut self, input: &str) {\n+        self.input(input.as_bytes());\n+    }\n \n     /**\n      * Convenience functon that retrieves the result of a digest as a\n      * ~str in hexadecimal format.\n      */\n-    fn result_str(&mut self) -> ~str;\n-}\n-\n-impl<D: Digest> DigestUtil for D {\n-    fn input_str(&mut self, input: &str) {\n-        self.input(input.as_bytes());\n-    }\n-\n     fn result_str(&mut self) -> ~str {\n         let mut buf = vec::from_elem((self.output_bits()+7)/8, 0u8);\n         self.result(buf);\n         return to_hex(buf);\n     }\n }\n+\n+fn to_hex(rr: &[u8]) -> ~str {\n+    let mut s = ~\"\";\n+    foreach b in rr.iter() {\n+        let hex = uint::to_str_radix(*b as uint, 16u);\n+        if hex.len() == 1 {\n+            s.push_char('0');\n+        }\n+        s.push_str(hex);\n+    }\n+    return s;\n+}"}, {"sha": "cf9604a3c91b61f4227ca2e124d16264ff9d07d5", "filename": "src/libextra/crypto/sha1.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/2cbe312343a31127de9d8e28f7b4ce04bc48768c/src%2Flibextra%2Fcrypto%2Fsha1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2cbe312343a31127de9d8e28f7b4ce04bc48768c/src%2Flibextra%2Fcrypto%2Fsha1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibextra%2Fcrypto%2Fsha1.rs?ref=2cbe312343a31127de9d8e28f7b4ce04bc48768c", "patch": "@@ -241,7 +241,7 @@ impl Digest for Sha1 {\n #[cfg(test)]\n mod tests {\n \n-    use digest::{Digest, DigestUtil};\n+    use digest::Digest;\n     use sha1::Sha1;\n \n     #[deriving(Clone)]"}, {"sha": "46a135a79e7fe7a3edc9547eb6ff075d09b1f062", "filename": "src/libextra/crypto/sha2.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/2cbe312343a31127de9d8e28f7b4ce04bc48768c/src%2Flibextra%2Fcrypto%2Fsha2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2cbe312343a31127de9d8e28f7b4ce04bc48768c/src%2Flibextra%2Fcrypto%2Fsha2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibextra%2Fcrypto%2Fsha2.rs?ref=2cbe312343a31127de9d8e28f7b4ce04bc48768c", "patch": "@@ -756,7 +756,7 @@ static H224: [u32, ..8] = [\n \n #[cfg(test)]\n mod tests {\n-    use digest::{Digest, DigestUtil};\n+    use digest::Digest;\n     use sha2::{Sha512, Sha384, Sha512Trunc256, Sha512Trunc224, Sha256, Sha224};\n \n     struct Test {"}, {"sha": "d28407a984a019b8f4bb9183a8e93f38c59dd808", "filename": "src/libextra/workcache.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/2cbe312343a31127de9d8e28f7b4ce04bc48768c/src%2Flibextra%2Fworkcache.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2cbe312343a31127de9d8e28f7b4ce04bc48768c/src%2Flibextra%2Fworkcache.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibextra%2Fworkcache.rs?ref=2cbe312343a31127de9d8e28f7b4ce04bc48768c", "patch": "@@ -10,8 +10,7 @@\n \n #[allow(missing_doc)];\n \n-\n-use digest::DigestUtil;\n+use digest::Digest;\n use json;\n use sha1::Sha1;\n use serialize::{Encoder, Encodable, Decoder, Decodable};"}]}