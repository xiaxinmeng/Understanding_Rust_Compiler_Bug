{"sha": "cdad0c80ef93dc64dd9ab8ec2410ec08f60b4120", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNkYWQwYzgwZWY5M2RjNjRkZDlhYjhlYzI0MTBlYzA4ZjYwYjQxMjA=", "commit": {"author": {"name": "Camelid", "email": "camelidcamel@gmail.com", "date": "2020-12-27T19:05:40Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-12-27T19:05:40Z"}, "message": "Also show the displayed version of IntVar and FloatVar\n\nCo-authored-by: Joshua Nelson <joshua@yottadb.com>", "tree": {"sha": "35e77ffe7a7f926c61ed67d87c50be77504e68c6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/35e77ffe7a7f926c61ed67d87c50be77504e68c6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/cdad0c80ef93dc64dd9ab8ec2410ec08f60b4120", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJf6NsECRBK7hj4Ov3rIwAAdHIIAB1IaXwpVexj06BIuJzuIUKr\nwQ/atUnczwYA0Uh8aBGMwRaOFHrmY7KN6wlA2AnlNckHS/SuQu6EE5aHyVWidVt7\nCwPIxRAqen0QEzOnm32/EIlhPZ1mopp5d3dj1Vp7Gvr4Hv4JBYRN7MxdyL9qmzvC\n8lPG1a8Dlcv3xmaQElZVc2GWwgHCwEuex7SIe4rRxO2wpdMiS84vxYxnJwVvfj8L\nboQ0wSO9cKpqJk3VHLE/7fr5aQ6zvB3Oa9w47MxOskqFBWC0I7a6feMREWdgEga6\npmeXrMeX5npFoWWkKAS18YZBs/BvX9/QQKj7Mea3Ab6hw+zuKlj08L9SDRxz508=\n=jb3F\n-----END PGP SIGNATURE-----\n", "payload": "tree 35e77ffe7a7f926c61ed67d87c50be77504e68c6\nparent 6aea014fbfc1b9bdba22bc3dcd03ab64d9785b63\nauthor Camelid <camelidcamel@gmail.com> 1609095940 -0800\ncommitter GitHub <noreply@github.com> 1609095940 -0800\n\nAlso show the displayed version of IntVar and FloatVar\n\nCo-authored-by: Joshua Nelson <joshua@yottadb.com>"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/cdad0c80ef93dc64dd9ab8ec2410ec08f60b4120", "html_url": "https://github.com/rust-lang/rust/commit/cdad0c80ef93dc64dd9ab8ec2410ec08f60b4120", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/cdad0c80ef93dc64dd9ab8ec2410ec08f60b4120/comments", "author": {"login": "camelid", "id": 37223377, "node_id": "MDQ6VXNlcjM3MjIzMzc3", "avatar_url": "https://avatars.githubusercontent.com/u/37223377?v=4", "gravatar_id": "", "url": "https://api.github.com/users/camelid", "html_url": "https://github.com/camelid", "followers_url": "https://api.github.com/users/camelid/followers", "following_url": "https://api.github.com/users/camelid/following{/other_user}", "gists_url": "https://api.github.com/users/camelid/gists{/gist_id}", "starred_url": "https://api.github.com/users/camelid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/camelid/subscriptions", "organizations_url": "https://api.github.com/users/camelid/orgs", "repos_url": "https://api.github.com/users/camelid/repos", "events_url": "https://api.github.com/users/camelid/events{/privacy}", "received_events_url": "https://api.github.com/users/camelid/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6aea014fbfc1b9bdba22bc3dcd03ab64d9785b63", "url": "https://api.github.com/repos/rust-lang/rust/commits/6aea014fbfc1b9bdba22bc3dcd03ab64d9785b63", "html_url": "https://github.com/rust-lang/rust/commit/6aea014fbfc1b9bdba22bc3dcd03ab64d9785b63"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "744c7a541a53c58e2abcb802be2bc1012aea351f", "filename": "compiler/rustc_middle/src/ty/sty.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/cdad0c80ef93dc64dd9ab8ec2410ec08f60b4120/compiler%2Frustc_middle%2Fsrc%2Fty%2Fsty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cdad0c80ef93dc64dd9ab8ec2410ec08f60b4120/compiler%2Frustc_middle%2Fsrc%2Fty%2Fsty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fty%2Fsty.rs?ref=cdad0c80ef93dc64dd9ab8ec2410ec08f60b4120", "patch": "@@ -1472,14 +1472,14 @@ impl Atom for RegionVid {\n pub enum InferTy {\n     /// A type variable.\n     TyVar(TyVid),\n-    /// An integral type variable.\n+    /// An integral type variable (`{integer}`).\n     ///\n     /// These are created when the compiler sees an integer literal like\n     /// `1` that could be several different types (`u8`, `i32`, `u32`, etc.).\n     /// We don't know until it's used what type it's supposed to be, so\n     /// we create a fresh type variable.\n     IntVar(IntVid),\n-    /// A floating-point type variable.\n+    /// A floating-point type variable (`{float}`).\n     ///\n     /// These are created when the compiler sees an float literal like\n     /// `1.0` that could be either an `f32` or an `f64`."}]}