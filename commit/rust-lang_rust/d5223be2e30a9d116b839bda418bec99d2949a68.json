{"sha": "d5223be2e30a9d116b839bda418bec99d2949a68", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQ1MjIzYmUyZTMwYTlkMTE2YjgzOWJkYTQxOGJlYzk5ZDI5NDlhNjg=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-02-25T21:16:02Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-02-25T21:16:02Z"}, "message": "Auto merge of #6601 - mdm:fix-unit-args-false-positive, r=camsteffen\n\nFix false positive for unit_arg lint\n\nFixes #6447\n\nTo avoid false positives don't complain about unit args when they come from a path expression, e.g. a local variable.\n\n**Note:** This is my first contribution to Clippy, so I might have messed up somewhere. Any feedback is welcome and I'm happy to work out any kinks.\n\n---\n\nchangelog: Do not lint unit arguments when they come from a path expression.", "tree": {"sha": "c184e67b13c36ab2e3bdfa7da63ca8f78a439524", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c184e67b13c36ab2e3bdfa7da63ca8f78a439524"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d5223be2e30a9d116b839bda418bec99d2949a68", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d5223be2e30a9d116b839bda418bec99d2949a68", "html_url": "https://github.com/rust-lang/rust/commit/d5223be2e30a9d116b839bda418bec99d2949a68", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d5223be2e30a9d116b839bda418bec99d2949a68/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5c6cd87b94cb59efff08c0f0e44c376f92afa7e5", "url": "https://api.github.com/repos/rust-lang/rust/commits/5c6cd87b94cb59efff08c0f0e44c376f92afa7e5", "html_url": "https://github.com/rust-lang/rust/commit/5c6cd87b94cb59efff08c0f0e44c376f92afa7e5"}, {"sha": "cbe6eec3e67347af130769ad4a3bd2168997b411", "url": "https://api.github.com/repos/rust-lang/rust/commits/cbe6eec3e67347af130769ad4a3bd2168997b411", "html_url": "https://github.com/rust-lang/rust/commit/cbe6eec3e67347af130769ad4a3bd2168997b411"}], "stats": {"total": 59, "additions": 45, "deletions": 14}, "files": [{"sha": "af8d6865f93aae3c28ec59566e823d5ff37ff484", "filename": "clippy_lints/src/types.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/d5223be2e30a9d116b839bda418bec99d2949a68/clippy_lints%2Fsrc%2Ftypes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d5223be2e30a9d116b839bda418bec99d2949a68/clippy_lints%2Fsrc%2Ftypes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Ftypes.rs?ref=d5223be2e30a9d116b839bda418bec99d2949a68", "patch": "@@ -955,7 +955,10 @@ impl<'tcx> LateLintPass<'tcx> for UnitArg {\n                     .iter()\n                     .filter(|arg| {\n                         if is_unit(cx.typeck_results().expr_ty(arg)) && !is_unit_literal(arg) {\n-                            !matches!(&arg.kind, ExprKind::Match(.., MatchSource::TryDesugar))\n+                            !matches!(\n+                                &arg.kind,\n+                                ExprKind::Match(.., MatchSource::TryDesugar) | ExprKind::Path(..)\n+                            )\n                         } else {\n                             false\n                         }"}, {"sha": "938cc3c785978f6b929bc6bd1d1d3eac799c32e6", "filename": "tests/ui/unit_arg.rs", "status": "modified", "additions": 29, "deletions": 1, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/d5223be2e30a9d116b839bda418bec99d2949a68/tests%2Fui%2Funit_arg.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d5223be2e30a9d116b839bda418bec99d2949a68/tests%2Fui%2Funit_arg.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Funit_arg.rs?ref=d5223be2e30a9d116b839bda418bec99d2949a68", "patch": "@@ -27,6 +27,30 @@ impl Bar {\n     }\n }\n \n+fn baz<T: Debug>(t: T) {\n+    foo(t);\n+}\n+\n+trait Tr {\n+    type Args;\n+    fn do_it(args: Self::Args);\n+}\n+\n+struct A;\n+impl Tr for A {\n+    type Args = ();\n+    fn do_it(_: Self::Args) {}\n+}\n+\n+struct B;\n+impl Tr for B {\n+    type Args = <A as Tr>::Args;\n+\n+    fn do_it(args: Self::Args) {\n+        A::do_it(args)\n+    }\n+}\n+\n fn bad() {\n     foo({\n         1;\n@@ -59,7 +83,7 @@ fn bad() {\n     None.or(Some(foo(2)));\n     // in this case, the suggestion can be inlined, no need for a surrounding block\n     // foo(()); foo(()) instead of { foo(()); foo(()) }\n-    foo(foo(()))\n+    foo(foo(()));\n }\n \n fn ok() {\n@@ -71,6 +95,10 @@ fn ok() {\n     b.bar({ 1 });\n     b.bar(());\n     question_mark();\n+    let named_unit_arg = ();\n+    foo(named_unit_arg);\n+    baz(());\n+    B::do_it(());\n }\n \n fn question_mark() -> Result<(), ()> {"}, {"sha": "354fd51cd6b608954dd7e84888206744824cd4de", "filename": "tests/ui/unit_arg.stderr", "status": "modified", "additions": 12, "deletions": 12, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/d5223be2e30a9d116b839bda418bec99d2949a68/tests%2Fui%2Funit_arg.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d5223be2e30a9d116b839bda418bec99d2949a68/tests%2Fui%2Funit_arg.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Funit_arg.stderr?ref=d5223be2e30a9d116b839bda418bec99d2949a68", "patch": "@@ -1,5 +1,5 @@\n error: passing a unit value to a function\n-  --> $DIR/unit_arg.rs:31:5\n+  --> $DIR/unit_arg.rs:55:5\n    |\n LL | /     foo({\n LL | |         1;\n@@ -20,7 +20,7 @@ LL |     foo(());\n    |\n \n error: passing a unit value to a function\n-  --> $DIR/unit_arg.rs:34:5\n+  --> $DIR/unit_arg.rs:58:5\n    |\n LL |     foo(foo(1));\n    |     ^^^^^^^^^^^\n@@ -32,7 +32,7 @@ LL |     foo(());\n    |\n \n error: passing a unit value to a function\n-  --> $DIR/unit_arg.rs:35:5\n+  --> $DIR/unit_arg.rs:59:5\n    |\n LL | /     foo({\n LL | |         foo(1);\n@@ -54,7 +54,7 @@ LL |     foo(());\n    |\n \n error: passing a unit value to a function\n-  --> $DIR/unit_arg.rs:40:5\n+  --> $DIR/unit_arg.rs:64:5\n    |\n LL | /     b.bar({\n LL | |         1;\n@@ -74,7 +74,7 @@ LL |     b.bar(());\n    |\n \n error: passing unit values to a function\n-  --> $DIR/unit_arg.rs:43:5\n+  --> $DIR/unit_arg.rs:67:5\n    |\n LL |     taking_multiple_units(foo(0), foo(1));\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n@@ -87,7 +87,7 @@ LL |     taking_multiple_units((), ());\n    |\n \n error: passing unit values to a function\n-  --> $DIR/unit_arg.rs:44:5\n+  --> $DIR/unit_arg.rs:68:5\n    |\n LL | /     taking_multiple_units(foo(0), {\n LL | |         foo(1);\n@@ -110,7 +110,7 @@ LL |     taking_multiple_units((), ());\n    |\n \n error: passing unit values to a function\n-  --> $DIR/unit_arg.rs:48:5\n+  --> $DIR/unit_arg.rs:72:5\n    |\n LL | /     taking_multiple_units(\n LL | |         {\n@@ -140,7 +140,7 @@ LL |         foo(2);\n  ...\n \n error: passing a unit value to a function\n-  --> $DIR/unit_arg.rs:59:13\n+  --> $DIR/unit_arg.rs:83:13\n    |\n LL |     None.or(Some(foo(2)));\n    |             ^^^^^^^^^^^^\n@@ -154,19 +154,19 @@ LL |     });\n    |\n \n error: passing a unit value to a function\n-  --> $DIR/unit_arg.rs:62:5\n+  --> $DIR/unit_arg.rs:86:5\n    |\n-LL |     foo(foo(()))\n+LL |     foo(foo(()));\n    |     ^^^^^^^^^^^^\n    |\n help: move the expression in front of the call and replace it with the unit literal `()`\n    |\n LL |     foo(());\n-LL |     foo(())\n+LL |     foo(());\n    |\n \n error: passing a unit value to a function\n-  --> $DIR/unit_arg.rs:95:5\n+  --> $DIR/unit_arg.rs:123:5\n    |\n LL |     Some(foo(1))\n    |     ^^^^^^^^^^^^"}]}