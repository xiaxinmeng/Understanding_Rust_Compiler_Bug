{"sha": "d6beb1841152a80ec10a5039e2294cd074fc3231", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQ2YmViMTg0MTE1MmE4MGVjMTBhNTAzOWUyMjk0Y2QwNzRmYzMyMzE=", "commit": {"author": {"name": "boxdot", "email": "d@zerovolt.org", "date": "2021-04-12T16:34:16Z"}, "committer": {"name": "boxdot", "email": "d@zerovolt.org", "date": "2021-04-12T16:35:47Z"}, "message": "Remove paths::STD_PTR_NULL", "tree": {"sha": "29fe8e7dd3ec50a0f833f8790ff4bc7f02e6b632", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/29fe8e7dd3ec50a0f833f8790ff4bc7f02e6b632"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d6beb1841152a80ec10a5039e2294cd074fc3231", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEz6IvBRWjm4Kc4B7XY17zt4kwirQFAmB0dwMACgkQY17zt4kw\nirTOFQ//VKNKXBJuW/I3FQeiifa9pwSbpeqejzcdF8uzBo8J+x+5Pwsg+ZthW+Hz\nS4b8pGK4u5pT+iD4/alGWSnUGZHyJfGHSLNCaJG53t+LtjgdhOLNEYgJie3CeEVz\n4izhMFnNlosKKb6NYU74fHAeqD2YBpzzfrci4vKaZji6Ipj4+RFvnFG7PbrJ/pRd\nwSaoMUGZ20Omez0hoyNOejQffSv5gIB8n93iHqca+nPcUeMi/5Dt19IRFD/i9rO/\nVsGhJi55Z7FGRnUAMMbAoym/mDA0zhBzdbL/SBcqRgmZQX7fZi1ZcnJCs7VKu9Dn\n6mBmEOJTevIHGOFVHMIHrmw0QOT+eiAm9suwyLBipKHaVOLFtVWZ9+wmuBXs0xKV\n+QOkqviupaHGM9PwqV3oC1EtRniG1/2ndL0kwy73wFw0h4hfWhkTeigJAWgdHn9B\nT8x9rrWFmKF7wwaWp+vTxzHlsnzFkkJsmffvUEV2kVq5g7heNOPZVAM5MxypWUPb\nU15TUcVLVdZ2E10Fdxv42SkKYanng/KAvfn/Lg1lN/oGDNU0D4RAjhM4YyjiffSd\nLuzjzO+SXcVPaoAlfPRFGLcOIPXkTyKim2QCieAjnvFz+X+5R0FvFSO+uJtbbc3n\nG+LumZsgxBXKvsbYPW+7NgpsZCi2WsxLIex+/+QE9h7/lgE6JbA=\n=na5c\n-----END PGP SIGNATURE-----", "payload": "tree 29fe8e7dd3ec50a0f833f8790ff4bc7f02e6b632\nparent 411c0df1d09813e58e009db4cd0e0161b0de1d03\nauthor boxdot <d@zerovolt.org> 1618245256 +0200\ncommitter boxdot <d@zerovolt.org> 1618245347 +0200\n\nRemove paths::STD_PTR_NULL\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d6beb1841152a80ec10a5039e2294cd074fc3231", "html_url": "https://github.com/rust-lang/rust/commit/d6beb1841152a80ec10a5039e2294cd074fc3231", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d6beb1841152a80ec10a5039e2294cd074fc3231/comments", "author": {"login": "boxdot", "id": 3841359, "node_id": "MDQ6VXNlcjM4NDEzNTk=", "avatar_url": "https://avatars.githubusercontent.com/u/3841359?v=4", "gravatar_id": "", "url": "https://api.github.com/users/boxdot", "html_url": "https://github.com/boxdot", "followers_url": "https://api.github.com/users/boxdot/followers", "following_url": "https://api.github.com/users/boxdot/following{/other_user}", "gists_url": "https://api.github.com/users/boxdot/gists{/gist_id}", "starred_url": "https://api.github.com/users/boxdot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/boxdot/subscriptions", "organizations_url": "https://api.github.com/users/boxdot/orgs", "repos_url": "https://api.github.com/users/boxdot/repos", "events_url": "https://api.github.com/users/boxdot/events{/privacy}", "received_events_url": "https://api.github.com/users/boxdot/received_events", "type": "User", "site_admin": false}, "committer": {"login": "boxdot", "id": 3841359, "node_id": "MDQ6VXNlcjM4NDEzNTk=", "avatar_url": "https://avatars.githubusercontent.com/u/3841359?v=4", "gravatar_id": "", "url": "https://api.github.com/users/boxdot", "html_url": "https://github.com/boxdot", "followers_url": "https://api.github.com/users/boxdot/followers", "following_url": "https://api.github.com/users/boxdot/following{/other_user}", "gists_url": "https://api.github.com/users/boxdot/gists{/gist_id}", "starred_url": "https://api.github.com/users/boxdot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/boxdot/subscriptions", "organizations_url": "https://api.github.com/users/boxdot/orgs", "repos_url": "https://api.github.com/users/boxdot/repos", "events_url": "https://api.github.com/users/boxdot/events{/privacy}", "received_events_url": "https://api.github.com/users/boxdot/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "411c0df1d09813e58e009db4cd0e0161b0de1d03", "url": "https://api.github.com/repos/rust-lang/rust/commits/411c0df1d09813e58e009db4cd0e0161b0de1d03", "html_url": "https://github.com/rust-lang/rust/commit/411c0df1d09813e58e009db4cd0e0161b0de1d03"}], "stats": {"total": 16, "additions": 7, "deletions": 9}, "files": [{"sha": "755132da5917fb9debf04f7d1fb291114d9928bb", "filename": "clippy_lints/src/transmuting_null.rs", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/d6beb1841152a80ec10a5039e2294cd074fc3231/clippy_lints%2Fsrc%2Ftransmuting_null.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d6beb1841152a80ec10a5039e2294cd074fc3231/clippy_lints%2Fsrc%2Ftransmuting_null.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Ftransmuting_null.rs?ref=d6beb1841152a80ec10a5039e2294cd074fc3231", "patch": "@@ -1,6 +1,6 @@\n use crate::consts::{constant_context, Constant};\n use clippy_utils::diagnostics::span_lint;\n-use clippy_utils::{match_qpath, paths};\n+use clippy_utils::{match_def_path, paths};\n use if_chain::if_chain;\n use rustc_ast::LitKind;\n use rustc_hir::{Expr, ExprKind};\n@@ -38,10 +38,10 @@ impl<'tcx> LateLintPass<'tcx> for TransmutingNull {\n \n         if_chain! {\n             if let ExprKind::Call(func, args) = expr.kind;\n-            if let ExprKind::Path(ref path) = func.kind;\n-            if match_qpath(path, &paths::STD_MEM_TRANSMUTE);\n             if args.len() == 1;\n-\n+            if let ExprKind::Path(ref path) = func.kind;\n+            if let Some(func_def_id) = cx.qpath_res(path, func.hir_id).opt_def_id();\n+            if match_def_path(cx, func_def_id, &paths::TRANSMUTE);\n             then {\n \n                 // Catching transmute over constants that resolve to `null`.\n@@ -69,10 +69,10 @@ impl<'tcx> LateLintPass<'tcx> for TransmutingNull {\n                 // Catching:\n                 // `std::mem::transmute(std::ptr::null::<i32>())`\n                 if_chain! {\n-                    if let ExprKind::Call(func1, args1) = args[0].kind;\n+                    if let ExprKind::Call(func1, []) = args[0].kind;\n                     if let ExprKind::Path(ref path1) = func1.kind;\n-                    if match_qpath(path1, &paths::STD_PTR_NULL);\n-                    if args1.is_empty();\n+                    if let Some(func1_def_id) = cx.qpath_res(path1, func1.hir_id).opt_def_id();\n+                    if match_def_path(cx, func1_def_id, &paths::PTR_NULL);\n                     then {\n                         span_lint(cx, TRANSMUTING_NULL, expr.span, LINT_MSG)\n                     }"}, {"sha": "ed8915f59e1da291e45a0bdd042355ebe4852c47", "filename": "clippy_utils/src/paths.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d6beb1841152a80ec10a5039e2294cd074fc3231/clippy_utils%2Fsrc%2Fpaths.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d6beb1841152a80ec10a5039e2294cd074fc3231/clippy_utils%2Fsrc%2Fpaths.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_utils%2Fsrc%2Fpaths.rs?ref=d6beb1841152a80ec10a5039e2294cd074fc3231", "patch": "@@ -142,8 +142,6 @@ pub const STDERR: [&str; 4] = [\"std\", \"io\", \"stdio\", \"stderr\"];\n pub const STDOUT: [&str; 4] = [\"std\", \"io\", \"stdio\", \"stdout\"];\n pub const STD_CONVERT_IDENTITY: [&str; 3] = [\"std\", \"convert\", \"identity\"];\n pub const STD_FS_CREATE_DIR: [&str; 3] = [\"std\", \"fs\", \"create_dir\"];\n-pub const STD_MEM_TRANSMUTE: [&str; 3] = [\"std\", \"mem\", \"transmute\"];\n-pub const STD_PTR_NULL: [&str; 3] = [\"std\", \"ptr\", \"null\"];\n pub const STRING_AS_MUT_STR: [&str; 4] = [\"alloc\", \"string\", \"String\", \"as_mut_str\"];\n pub const STRING_AS_STR: [&str; 4] = [\"alloc\", \"string\", \"String\", \"as_str\"];\n pub const STR_ENDS_WITH: [&str; 4] = [\"core\", \"str\", \"<impl str>\", \"ends_with\"];"}]}