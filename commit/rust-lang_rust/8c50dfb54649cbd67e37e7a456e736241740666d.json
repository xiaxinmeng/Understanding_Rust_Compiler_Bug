{"sha": "8c50dfb54649cbd67e37e7a456e736241740666d", "node_id": "C_kwDOAAsO6NoAKDhjNTBkZmI1NDY0OWNiZDY3ZTM3ZTdhNDU2ZTczNjI0MTc0MDY2NmQ", "commit": {"author": {"name": "koka", "email": "koka.code@gmail.com", "date": "2022-11-27T13:01:21Z"}, "committer": {"name": "koka", "email": "koka.code@gmail.com", "date": "2022-11-27T13:01:21Z"}, "message": "Remove blank lines when needless_return returns no value\n\nfix https://github.com/rust-lang/rust-clippy/issues/9416", "tree": {"sha": "dc63d038f35a0e66a31e384442848f607498d08e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/dc63d038f35a0e66a31e384442848f607498d08e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8c50dfb54649cbd67e37e7a456e736241740666d", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niHUEABYIAB0WIQTeiB5r8ReBHCJcHiKlkXpAaXd0zQUCY4Nf+QAKCRClkXpAaXd0\nzQeEAQCGVpFKTAuIwYNWQYTMN3sXNqPbOHYSDYfdMBaQhGuergD9H66GIayJfy5w\nY0AtCGXbxwNbEjCepm5Uy92G9p/OdAQ=\n=vkWf\n-----END PGP SIGNATURE-----", "payload": "tree dc63d038f35a0e66a31e384442848f607498d08e\nparent 6d0b4e3a0933efd924981a2e86bc9f9cbef54158\nauthor koka <koka.code@gmail.com> 1669554081 +0900\ncommitter koka <koka.code@gmail.com> 1669554081 +0900\n\nRemove blank lines when needless_return returns no value\n\nfix https://github.com/rust-lang/rust-clippy/issues/9416\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8c50dfb54649cbd67e37e7a456e736241740666d", "html_url": "https://github.com/rust-lang/rust/commit/8c50dfb54649cbd67e37e7a456e736241740666d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8c50dfb54649cbd67e37e7a456e736241740666d/comments", "author": {"login": "koka831", "id": 14945055, "node_id": "MDQ6VXNlcjE0OTQ1MDU1", "avatar_url": "https://avatars.githubusercontent.com/u/14945055?v=4", "gravatar_id": "", "url": "https://api.github.com/users/koka831", "html_url": "https://github.com/koka831", "followers_url": "https://api.github.com/users/koka831/followers", "following_url": "https://api.github.com/users/koka831/following{/other_user}", "gists_url": "https://api.github.com/users/koka831/gists{/gist_id}", "starred_url": "https://api.github.com/users/koka831/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/koka831/subscriptions", "organizations_url": "https://api.github.com/users/koka831/orgs", "repos_url": "https://api.github.com/users/koka831/repos", "events_url": "https://api.github.com/users/koka831/events{/privacy}", "received_events_url": "https://api.github.com/users/koka831/received_events", "type": "User", "site_admin": false}, "committer": {"login": "koka831", "id": 14945055, "node_id": "MDQ6VXNlcjE0OTQ1MDU1", "avatar_url": "https://avatars.githubusercontent.com/u/14945055?v=4", "gravatar_id": "", "url": "https://api.github.com/users/koka831", "html_url": "https://github.com/koka831", "followers_url": "https://api.github.com/users/koka831/followers", "following_url": "https://api.github.com/users/koka831/following{/other_user}", "gists_url": "https://api.github.com/users/koka831/gists{/gist_id}", "starred_url": "https://api.github.com/users/koka831/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/koka831/subscriptions", "organizations_url": "https://api.github.com/users/koka831/orgs", "repos_url": "https://api.github.com/users/koka831/repos", "events_url": "https://api.github.com/users/koka831/events{/privacy}", "received_events_url": "https://api.github.com/users/koka831/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6d0b4e3a0933efd924981a2e86bc9f9cbef54158", "url": "https://api.github.com/repos/rust-lang/rust/commits/6d0b4e3a0933efd924981a2e86bc9f9cbef54158", "html_url": "https://github.com/rust-lang/rust/commit/6d0b4e3a0933efd924981a2e86bc9f9cbef54158"}], "stats": {"total": 147, "additions": 107, "deletions": 40}, "files": [{"sha": "933258f9c3ede3cdbcef2e9a47b9c8d02d3d0c93", "filename": "clippy_lints/src/returns.rs", "status": "modified", "additions": 23, "deletions": 7, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/8c50dfb54649cbd67e37e7a456e736241740666d/clippy_lints%2Fsrc%2Freturns.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8c50dfb54649cbd67e37e7a456e736241740666d/clippy_lints%2Fsrc%2Freturns.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Freturns.rs?ref=8c50dfb54649cbd67e37e7a456e736241740666d", "patch": "@@ -12,6 +12,7 @@ use rustc_middle::lint::in_external_macro;\n use rustc_middle::ty::subst::GenericArgKind;\n use rustc_session::{declare_lint_pass, declare_tool_lint};\n use rustc_span::source_map::Span;\n+use rustc_span::BytePos;\n \n declare_clippy_lint! {\n     /// ### What it does\n@@ -209,13 +210,14 @@ fn check_final_expr<'tcx>(\n             if cx.tcx.hir().attrs(expr.hir_id).is_empty() {\n                 let borrows = inner.map_or(false, |inner| last_statement_borrows(cx, inner));\n                 if !borrows {\n-                    emit_return_lint(\n-                        cx,\n-                        peeled_drop_expr.span,\n-                        semi_spans,\n-                        inner.as_ref().map(|i| i.span),\n-                        replacement,\n-                    );\n+                    // check if expr return nothing\n+                    let ret_span = if inner.is_none() && replacement == RetReplacement::Empty {\n+                        extend_span_to_previous_non_ws(cx, peeled_drop_expr.span)\n+                    } else {\n+                        peeled_drop_expr.span\n+                    };\n+\n+                    emit_return_lint(cx, ret_span, semi_spans, inner.as_ref().map(|i| i.span), replacement);\n                 }\n             }\n         },\n@@ -289,3 +291,17 @@ fn last_statement_borrows<'tcx>(cx: &LateContext<'tcx>, expr: &'tcx Expr<'tcx>)\n     })\n     .is_some()\n }\n+\n+// Go backwards while encountering whitespace and extend the given Span to that point.\n+#[expect(clippy::cast_possible_truncation)]\n+fn extend_span_to_previous_non_ws(cx: &LateContext<'_>, sp: Span) -> Span {\n+    if let Ok(prev_source) = cx.sess().source_map().span_to_prev_source(sp) {\n+        let ws = [' ', '\\t', '\\n'];\n+        if let Some(non_ws_pos) = prev_source.rfind(|c| !ws.contains(&c)) {\n+            let len = prev_source.len() - non_ws_pos - 1;\n+            return sp.with_lo(BytePos(sp.lo().0 - len as u32));\n+        }\n+    }\n+\n+    sp\n+}"}, {"sha": "4386aaec49e2437751803ac8f9ce216c17e79f07", "filename": "tests/ui/needless_return.fixed", "status": "modified", "additions": 11, "deletions": 8, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/8c50dfb54649cbd67e37e7a456e736241740666d/tests%2Fui%2Fneedless_return.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/8c50dfb54649cbd67e37e7a456e736241740666d/tests%2Fui%2Fneedless_return.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fneedless_return.fixed?ref=8c50dfb54649cbd67e37e7a456e736241740666d", "patch": "@@ -59,14 +59,11 @@ fn test_macro_call() -> i32 {\n }\n \n fn test_void_fun() {\n-    \n }\n \n fn test_void_if_fun(b: bool) {\n     if b {\n-        \n     } else {\n-        \n     }\n }\n \n@@ -82,7 +79,6 @@ fn test_nested_match(x: u32) {\n         0 => (),\n         1 => {\n             let _ = 42;\n-            \n         },\n         _ => (),\n     }\n@@ -126,7 +122,6 @@ mod issue6501 {\n \n     fn test_closure() {\n         let _ = || {\n-            \n         };\n         let _ = || {};\n     }\n@@ -179,14 +174,11 @@ async fn async_test_macro_call() -> i32 {\n }\n \n async fn async_test_void_fun() {\n-    \n }\n \n async fn async_test_void_if_fun(b: bool) {\n     if b {\n-        \n     } else {\n-        \n     }\n }\n \n@@ -269,4 +261,15 @@ fn issue9503(x: usize) -> isize {\n     }\n }\n \n+mod issue9416 {\n+    pub fn with_newline() {\n+        let _ = 42;\n+    }\n+\n+    #[rustfmt::skip]\n+    pub fn oneline() {\n+        let _ = 42;\n+    }\n+}\n+\n fn main() {}"}, {"sha": "666dc54b76b412b2267e083d3d130929cc07309e", "filename": "tests/ui/needless_return.rs", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/8c50dfb54649cbd67e37e7a456e736241740666d/tests%2Fui%2Fneedless_return.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8c50dfb54649cbd67e37e7a456e736241740666d/tests%2Fui%2Fneedless_return.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fneedless_return.rs?ref=8c50dfb54649cbd67e37e7a456e736241740666d", "patch": "@@ -269,4 +269,17 @@ fn issue9503(x: usize) -> isize {\n     };\n }\n \n+mod issue9416 {\n+    pub fn with_newline() {\n+        let _ = 42;\n+\n+        return;\n+    }\n+\n+    #[rustfmt::skip]\n+    pub fn oneline() {\n+        let _ = 42; return;\n+    }\n+}\n+\n fn main() {}"}, {"sha": "a8b5d86cd5581f46a415a3c06f6e2d88cfa0ae60", "filename": "tests/ui/needless_return.stderr", "status": "modified", "additions": 60, "deletions": 25, "changes": 85, "blob_url": "https://github.com/rust-lang/rust/blob/8c50dfb54649cbd67e37e7a456e736241740666d/tests%2Fui%2Fneedless_return.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/8c50dfb54649cbd67e37e7a456e736241740666d/tests%2Fui%2Fneedless_return.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fneedless_return.stderr?ref=8c50dfb54649cbd67e37e7a456e736241740666d", "patch": "@@ -72,26 +72,32 @@ LL |     return the_answer!();\n    = help: remove `return`\n \n error: unneeded `return` statement\n-  --> $DIR/needless_return.rs:62:5\n+  --> $DIR/needless_return.rs:61:21\n    |\n-LL |     return;\n-   |     ^^^^^^\n+LL |   fn test_void_fun() {\n+   |  _____________________^\n+LL | |     return;\n+   | |__________^\n    |\n    = help: remove `return`\n \n error: unneeded `return` statement\n-  --> $DIR/needless_return.rs:67:9\n+  --> $DIR/needless_return.rs:66:11\n    |\n-LL |         return;\n-   |         ^^^^^^\n+LL |       if b {\n+   |  ___________^\n+LL | |         return;\n+   | |______________^\n    |\n    = help: remove `return`\n \n error: unneeded `return` statement\n-  --> $DIR/needless_return.rs:69:9\n+  --> $DIR/needless_return.rs:68:13\n    |\n-LL |         return;\n-   |         ^^^^^^\n+LL |       } else {\n+   |  _____________^\n+LL | |         return;\n+   | |______________^\n    |\n    = help: remove `return`\n \n@@ -104,10 +110,12 @@ LL |         _ => return,\n    = help: replace `return` with a unit value\n \n error: unneeded `return` statement\n-  --> $DIR/needless_return.rs:85:13\n+  --> $DIR/needless_return.rs:84:24\n    |\n-LL |             return;\n-   |             ^^^^^^\n+LL |               let _ = 42;\n+   |  ________________________^\n+LL | |             return;\n+   | |__________________^\n    |\n    = help: remove `return`\n \n@@ -144,10 +152,12 @@ LL |         bar.unwrap_or_else(|_| return)\n    = help: replace `return` with an empty block\n \n error: unneeded `return` statement\n-  --> $DIR/needless_return.rs:129:13\n+  --> $DIR/needless_return.rs:128:21\n    |\n-LL |             return;\n-   |             ^^^^^^\n+LL |           let _ = || {\n+   |  _____________________^\n+LL | |             return;\n+   | |__________________^\n    |\n    = help: remove `return`\n \n@@ -240,26 +250,32 @@ LL |     return the_answer!();\n    = help: remove `return`\n \n error: unneeded `return` statement\n-  --> $DIR/needless_return.rs:182:5\n+  --> $DIR/needless_return.rs:181:33\n    |\n-LL |     return;\n-   |     ^^^^^^\n+LL |   async fn async_test_void_fun() {\n+   |  _________________________________^\n+LL | |     return;\n+   | |__________^\n    |\n    = help: remove `return`\n \n error: unneeded `return` statement\n-  --> $DIR/needless_return.rs:187:9\n+  --> $DIR/needless_return.rs:186:11\n    |\n-LL |         return;\n-   |         ^^^^^^\n+LL |       if b {\n+   |  ___________^\n+LL | |         return;\n+   | |______________^\n    |\n    = help: remove `return`\n \n error: unneeded `return` statement\n-  --> $DIR/needless_return.rs:189:9\n+  --> $DIR/needless_return.rs:188:13\n    |\n-LL |         return;\n-   |         ^^^^^^\n+LL |       } else {\n+   |  _____________^\n+LL | |         return;\n+   | |______________^\n    |\n    = help: remove `return`\n \n@@ -351,5 +367,24 @@ LL |             return !*(x as *const isize);\n    |\n    = help: remove `return`\n \n-error: aborting due to 44 previous errors\n+error: unneeded `return` statement\n+  --> $DIR/needless_return.rs:274:20\n+   |\n+LL |           let _ = 42;\n+   |  ____________________^\n+LL | |\n+LL | |         return;\n+   | |______________^\n+   |\n+   = help: remove `return`\n+\n+error: unneeded `return` statement\n+  --> $DIR/needless_return.rs:281:20\n+   |\n+LL |         let _ = 42; return;\n+   |                    ^^^^^^^\n+   |\n+   = help: remove `return`\n+\n+error: aborting due to 46 previous errors\n "}]}