{"sha": "472444bc64db894b414db5b6ead5e8ff4c1774b0", "node_id": "C_kwDOAAsO6NoAKDQ3MjQ0NGJjNjRkYjg5NGI0MTRkYjViNmVhZDVlOGZmNGMxNzc0YjA", "commit": {"author": {"name": "Oli Scherer", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2022-11-17T16:05:41Z"}, "committer": {"name": "Oli Scherer", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2022-11-21T20:38:55Z"}, "message": "Remove some unnecessary slicing", "tree": {"sha": "a5293034cbc6bec96284edbf93edc56619c165b2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a5293034cbc6bec96284edbf93edc56619c165b2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/472444bc64db894b414db5b6ead5e8ff4c1774b0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/472444bc64db894b414db5b6ead5e8ff4c1774b0", "html_url": "https://github.com/rust-lang/rust/commit/472444bc64db894b414db5b6ead5e8ff4c1774b0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/472444bc64db894b414db5b6ead5e8ff4c1774b0/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "48ea298abfbab541c34c95481a0466ab91b08e55", "url": "https://api.github.com/repos/rust-lang/rust/commits/48ea298abfbab541c34c95481a0466ab91b08e55", "html_url": "https://github.com/rust-lang/rust/commit/48ea298abfbab541c34c95481a0466ab91b08e55"}], "stats": {"total": 18, "additions": 9, "deletions": 9}, "files": [{"sha": "0ee190302ac91eded9bd61566f0d31071db64024", "filename": "compiler/rustc_middle/src/ty/context.rs", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/472444bc64db894b414db5b6ead5e8ff4c1774b0/compiler%2Frustc_middle%2Fsrc%2Fty%2Fcontext.rs", "raw_url": "https://github.com/rust-lang/rust/raw/472444bc64db894b414db5b6ead5e8ff4c1774b0/compiler%2Frustc_middle%2Fsrc%2Fty%2Fcontext.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fty%2Fcontext.rs?ref=472444bc64db894b414db5b6ead5e8ff4c1774b0", "patch": "@@ -2516,7 +2516,7 @@ impl<'tcx> TyCtxt<'tcx> {\n         self.mk_ty(Tuple(self.intern_type_list(&ts)))\n     }\n \n-    pub fn mk_tup<I: InternAs<[Ty<'tcx>], Ty<'tcx>>>(self, iter: I) -> I::Output {\n+    pub fn mk_tup<I: InternAs<Ty<'tcx>, Ty<'tcx>>>(self, iter: I) -> I::Output {\n         iter.intern_with(|ts| self.mk_ty(Tuple(self.intern_type_list(&ts))))\n     }\n \n@@ -2776,33 +2776,33 @@ impl<'tcx> TyCtxt<'tcx> {\n     }\n \n     pub fn mk_poly_existential_predicates<\n-        I: InternAs<[PolyExistentialPredicate<'tcx>], &'tcx List<PolyExistentialPredicate<'tcx>>>,\n+        I: InternAs<PolyExistentialPredicate<'tcx>, &'tcx List<PolyExistentialPredicate<'tcx>>>,\n     >(\n         self,\n         iter: I,\n     ) -> I::Output {\n         iter.intern_with(|xs| self.intern_poly_existential_predicates(xs))\n     }\n \n-    pub fn mk_predicates<I: InternAs<[Predicate<'tcx>], &'tcx List<Predicate<'tcx>>>>(\n+    pub fn mk_predicates<I: InternAs<Predicate<'tcx>, &'tcx List<Predicate<'tcx>>>>(\n         self,\n         iter: I,\n     ) -> I::Output {\n         iter.intern_with(|xs| self.intern_predicates(xs))\n     }\n \n-    pub fn mk_type_list<I: InternAs<[Ty<'tcx>], &'tcx List<Ty<'tcx>>>>(self, iter: I) -> I::Output {\n+    pub fn mk_type_list<I: InternAs<Ty<'tcx>, &'tcx List<Ty<'tcx>>>>(self, iter: I) -> I::Output {\n         iter.intern_with(|xs| self.intern_type_list(xs))\n     }\n \n-    pub fn mk_substs<I: InternAs<[GenericArg<'tcx>], &'tcx List<GenericArg<'tcx>>>>(\n+    pub fn mk_substs<I: InternAs<GenericArg<'tcx>, &'tcx List<GenericArg<'tcx>>>>(\n         self,\n         iter: I,\n     ) -> I::Output {\n         iter.intern_with(|xs| self.intern_substs(xs))\n     }\n \n-    pub fn mk_place_elems<I: InternAs<[PlaceElem<'tcx>], &'tcx List<PlaceElem<'tcx>>>>(\n+    pub fn mk_place_elems<I: InternAs<PlaceElem<'tcx>, &'tcx List<PlaceElem<'tcx>>>>(\n         self,\n         iter: I,\n     ) -> I::Output {\n@@ -2835,7 +2835,7 @@ impl<'tcx> TyCtxt<'tcx> {\n     }\n \n     pub fn mk_bound_variable_kinds<\n-        I: InternAs<[ty::BoundVariableKind], &'tcx List<ty::BoundVariableKind>>,\n+        I: InternAs<ty::BoundVariableKind, &'tcx List<ty::BoundVariableKind>>,\n     >(\n         self,\n         iter: I,"}, {"sha": "581993ba7d863eb2f22166a042764fae43e7d360", "filename": "compiler/rustc_type_ir/src/lib.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/472444bc64db894b414db5b6ead5e8ff4c1774b0/compiler%2Frustc_type_ir%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/472444bc64db894b414db5b6ead5e8ff4c1774b0/compiler%2Frustc_type_ir%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_type_ir%2Fsrc%2Flib.rs?ref=472444bc64db894b414db5b6ead5e8ff4c1774b0", "patch": "@@ -60,10 +60,10 @@ pub trait InternAs<T: ?Sized, R> {\n     type Output;\n     fn intern_with<F>(self, f: F) -> Self::Output\n     where\n-        F: FnOnce(&T) -> R;\n+        F: FnOnce(&[T]) -> R;\n }\n \n-impl<I, T, R, E> InternAs<[T], R> for I\n+impl<I, T, R, E> InternAs<T, R> for I\n where\n     E: InternIteratorElement<T, R>,\n     I: Iterator<Item = E>,"}]}