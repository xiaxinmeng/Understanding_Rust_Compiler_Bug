{"sha": "69faf81e0db5abe54b97708c5b8089934fca32f6", "node_id": "MDY6Q29tbWl0NzI0NzEyOjY5ZmFmODFlMGRiNWFiZTU0Yjk3NzA4YzViODA4OTkzNGZjYTMyZjY=", "commit": {"author": {"name": "Josh Mcguigan", "email": "joshmcg88@gmail.com", "date": "2020-03-01T03:48:55Z"}, "committer": {"name": "Josh Mcguigan", "email": "joshmcg88@gmail.com", "date": "2020-03-01T03:48:55Z"}, "message": "fix #2377 super::super::*", "tree": {"sha": "eb7912438471345d4c92108c04ae76d3c5f2728d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/eb7912438471345d4c92108c04ae76d3c5f2728d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/69faf81e0db5abe54b97708c5b8089934fca32f6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/69faf81e0db5abe54b97708c5b8089934fca32f6", "html_url": "https://github.com/rust-lang/rust/commit/69faf81e0db5abe54b97708c5b8089934fca32f6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/69faf81e0db5abe54b97708c5b8089934fca32f6/comments", "author": {"login": "JoshMcguigan", "id": 22216761, "node_id": "MDQ6VXNlcjIyMjE2NzYx", "avatar_url": "https://avatars.githubusercontent.com/u/22216761?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JoshMcguigan", "html_url": "https://github.com/JoshMcguigan", "followers_url": "https://api.github.com/users/JoshMcguigan/followers", "following_url": "https://api.github.com/users/JoshMcguigan/following{/other_user}", "gists_url": "https://api.github.com/users/JoshMcguigan/gists{/gist_id}", "starred_url": "https://api.github.com/users/JoshMcguigan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JoshMcguigan/subscriptions", "organizations_url": "https://api.github.com/users/JoshMcguigan/orgs", "repos_url": "https://api.github.com/users/JoshMcguigan/repos", "events_url": "https://api.github.com/users/JoshMcguigan/events{/privacy}", "received_events_url": "https://api.github.com/users/JoshMcguigan/received_events", "type": "User", "site_admin": false}, "committer": {"login": "JoshMcguigan", "id": 22216761, "node_id": "MDQ6VXNlcjIyMjE2NzYx", "avatar_url": "https://avatars.githubusercontent.com/u/22216761?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JoshMcguigan", "html_url": "https://github.com/JoshMcguigan", "followers_url": "https://api.github.com/users/JoshMcguigan/followers", "following_url": "https://api.github.com/users/JoshMcguigan/following{/other_user}", "gists_url": "https://api.github.com/users/JoshMcguigan/gists{/gist_id}", "starred_url": "https://api.github.com/users/JoshMcguigan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JoshMcguigan/subscriptions", "organizations_url": "https://api.github.com/users/JoshMcguigan/orgs", "repos_url": "https://api.github.com/users/JoshMcguigan/repos", "events_url": "https://api.github.com/users/JoshMcguigan/events{/privacy}", "received_events_url": "https://api.github.com/users/JoshMcguigan/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e91320632a9dfee937c3c2ba3ffafd3f5ffb22dc", "url": "https://api.github.com/repos/rust-lang/rust/commits/e91320632a9dfee937c3c2ba3ffafd3f5ffb22dc", "html_url": "https://github.com/rust-lang/rust/commit/e91320632a9dfee937c3c2ba3ffafd3f5ffb22dc"}], "stats": {"total": 47, "additions": 43, "deletions": 4}, "files": [{"sha": "dda5ed699c1bd49a79314f0484a5538d556f864d", "filename": "crates/ra_hir_def/src/nameres/tests.rs", "status": "modified", "additions": 36, "deletions": 0, "changes": 36, "blob_url": "https://github.com/rust-lang/rust/blob/69faf81e0db5abe54b97708c5b8089934fca32f6/crates%2Fra_hir_def%2Fsrc%2Fnameres%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/69faf81e0db5abe54b97708c5b8089934fca32f6/crates%2Fra_hir_def%2Fsrc%2Fnameres%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_def%2Fsrc%2Fnameres%2Ftests.rs?ref=69faf81e0db5abe54b97708c5b8089934fca32f6", "patch": "@@ -65,6 +65,42 @@ fn crate_def_map_smoke_test() {\n     \"###)\n }\n \n+#[test]\n+fn crate_def_map_super_super() {\n+    let map = def_map(\n+        \"\n+        //- /lib.rs\n+        mod a {\n+            const A: usize = 0;\n+\n+            mod b {\n+                const B: usize = 0;\n+\n+                mod c {\n+                    use super::super::*;\n+                }\n+            }\n+        }\n+        \",\n+    );\n+    assert_snapshot!(map, @r###\"\n+        \u22eecrate\n+        \u22eea: t\n+        \u22ee\n+        \u22eecrate::a\n+        \u22eeA: v\n+        \u22eeb: t\n+        \u22ee\n+        \u22eecrate::a::b\n+        \u22eeB: v\n+        \u22eec: t\n+        \u22ee\n+        \u22eecrate::a::b::c\n+        \u22eeA: v\n+        \u22eeb: t\n+    \"###)\n+}\n+\n #[test]\n fn bogus_paths() {\n     covers!(bogus_paths);"}, {"sha": "278d5196e7bc0dd70f61e57b322f11054a18414f", "filename": "crates/ra_hir_def/src/path/lower/lower_use.rs", "status": "modified", "additions": 7, "deletions": 4, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/69faf81e0db5abe54b97708c5b8089934fca32f6/crates%2Fra_hir_def%2Fsrc%2Fpath%2Flower%2Flower_use.rs", "raw_url": "https://github.com/rust-lang/rust/raw/69faf81e0db5abe54b97708c5b8089934fca32f6/crates%2Fra_hir_def%2Fsrc%2Fpath%2Flower%2Flower_use.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_def%2Fsrc%2Fpath%2Flower%2Flower_use.rs?ref=69faf81e0db5abe54b97708c5b8089934fca32f6", "patch": "@@ -103,10 +103,13 @@ fn convert_path(prefix: Option<ModPath>, path: ast::Path, hygiene: &Hygiene) ->\n             ModPath::from_segments(PathKind::Super(0), iter::empty())\n         }\n         ast::PathSegmentKind::SuperKw => {\n-            if prefix.is_some() {\n-                return None;\n-            }\n-            ModPath::from_segments(PathKind::Super(1), iter::empty())\n+            let nested_super_count = match prefix.map(|p| p.kind) {\n+                Some(PathKind::Super(n)) => n,\n+                Some(_) => return None,\n+                None => 0,\n+            };\n+\n+            ModPath::from_segments(PathKind::Super(nested_super_count + 1), iter::empty())\n         }\n         ast::PathSegmentKind::Type { .. } => {\n             // not allowed in imports"}]}