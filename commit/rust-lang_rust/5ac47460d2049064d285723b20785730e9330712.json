{"sha": "5ac47460d2049064d285723b20785730e9330712", "node_id": "C_kwDOAAsO6NoAKDVhYzQ3NDYwZDIwNDkwNjRkMjg1NzIzYjIwNzg1NzMwZTkzMzA3MTI", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-06-26T18:39:38Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-06-26T18:39:38Z"}, "message": "Auto merge of #2272 - RalfJung:progress, r=RalfJung\n\nadd -Zmiri-report-progress to regularly print a stacktrace of what we are executing\n\nFixes https://github.com/rust-lang/miri/issues/910\n\nThe stacktrace is printed every N basic blocks. I picked the default (1 million) to take a few seconds on my machine, but it can be adjusted by the user.", "tree": {"sha": "4fcd376ecd8c18da5ff4d35a7aa6f4a73314bca8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4fcd376ecd8c18da5ff4d35a7aa6f4a73314bca8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5ac47460d2049064d285723b20785730e9330712", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5ac47460d2049064d285723b20785730e9330712", "html_url": "https://github.com/rust-lang/rust/commit/5ac47460d2049064d285723b20785730e9330712", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5ac47460d2049064d285723b20785730e9330712/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ab88ba42999ab820b4d15c842517f09b9719fb8b", "url": "https://api.github.com/repos/rust-lang/rust/commits/ab88ba42999ab820b4d15c842517f09b9719fb8b", "html_url": "https://github.com/rust-lang/rust/commit/ab88ba42999ab820b4d15c842517f09b9719fb8b"}, {"sha": "34be937d5f67d789969b1b731967fa26cc490a9c", "url": "https://api.github.com/repos/rust-lang/rust/commits/34be937d5f67d789969b1b731967fa26cc490a9c", "html_url": "https://github.com/rust-lang/rust/commit/34be937d5f67d789969b1b731967fa26cc490a9c"}], "stats": {"total": 38, "additions": 37, "deletions": 1}, "files": [{"sha": "117794b77ee61dd91246bdc738f22dc8b1f783f7", "filename": "README.md", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/5ac47460d2049064d285723b20785730e9330712/README.md", "raw_url": "https://github.com/rust-lang/rust/raw/5ac47460d2049064d285723b20785730e9330712/README.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/README.md?ref=5ac47460d2049064d285723b20785730e9330712", "patch": "@@ -292,6 +292,10 @@ environment variable. We first document the most relevant and most commonly used\n * `-Zmiri-preemption-rate` configures the probability that at the end of a basic block, the active\n   thread will be preempted. The default is `0.01` (i.e., 1%). Setting this to `0` disables\n   preemption.\n+* `-Zmiri-report-progress` makes Miri print the current stacktrace every now and then, so you can\n+  tell what it is doing when a program just keeps running. You can customize how frequently the\n+  report is printed via `-Zmiri-report-progress=<blocks>`, which prints the report every N basic\n+  blocks.\n * `-Zmiri-seed=<hex>` configures the seed of the RNG that Miri uses to resolve non-determinism. This\n   RNG is used to pick base addresses for allocations, to determine preemption and failure of\n   `compare_exchange_weak`, and to control store buffering for weak memory emulation. When isolation"}, {"sha": "91148400c99b2d4ce36cea7c783014fd6674b4dd", "filename": "src/bin/miri.rs", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/5ac47460d2049064d285723b20785730e9330712/src%2Fbin%2Fmiri.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5ac47460d2049064d285723b20785730e9330712/src%2Fbin%2Fmiri.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbin%2Fmiri.rs?ref=5ac47460d2049064d285723b20785730e9330712", "patch": "@@ -468,6 +468,15 @@ fn main() {\n                     ),\n             };\n             miri_config.preemption_rate = rate;\n+        } else if arg == \"-Zmiri-report-progress\" {\n+            // This makes it take a few seconds between progress reports on my laptop.\n+            miri_config.report_progress = Some(1_000_000);\n+        } else if let Some(param) = arg.strip_prefix(\"-Zmiri-report-progress=\") {\n+            let interval = match param.parse::<u32>() {\n+                Ok(i) => i,\n+                Err(err) => panic!(\"-Zmiri-report-progress requires a `u32`: {}\", err),\n+            };\n+            miri_config.report_progress = Some(interval);\n         } else if let Some(param) = arg.strip_prefix(\"-Zmiri-measureme=\") {\n             miri_config.measureme_out = Some(param.to_string());\n         } else if let Some(param) = arg.strip_prefix(\"-Zmiri-backtrace=\") {"}, {"sha": "6986d9c57271ff361c92369d1e0b2f0b19b2a7f6", "filename": "src/diagnostics.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/5ac47460d2049064d285723b20785730e9330712/src%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5ac47460d2049064d285723b20785730e9330712/src%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdiagnostics.rs?ref=5ac47460d2049064d285723b20785730e9330712", "patch": "@@ -68,6 +68,7 @@ pub enum NonHaltingDiagnostic {\n     CreatedAlloc(AllocId),\n     FreedAlloc(AllocId),\n     RejectedIsolatedOp(String),\n+    ProgressReport,\n }\n \n /// Level of Miri specific diagnostics\n@@ -465,6 +466,8 @@ pub trait EvalContextExt<'mir, 'tcx: 'mir>: crate::MiriEvalContextExt<'mir, 'tcx\n                     FreedAlloc(AllocId(id)) => format!(\"freed allocation with id {id}\"),\n                     RejectedIsolatedOp(ref op) =>\n                         format!(\"{op} was made to return an error due to isolation\"),\n+                    ProgressReport =>\n+                        format!(\"progress report: current operation being executed is here\"),\n                 };\n \n                 let (title, diag_level) = match e {"}, {"sha": "7beb2ec9c4ad5d49792e36ebbfdb5b4c6fd4cf4f", "filename": "src/eval.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/5ac47460d2049064d285723b20785730e9330712/src%2Feval.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5ac47460d2049064d285723b20785730e9330712/src%2Feval.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Feval.rs?ref=5ac47460d2049064d285723b20785730e9330712", "patch": "@@ -124,6 +124,8 @@ pub struct MiriConfig {\n     pub mute_stdout_stderr: bool,\n     /// The probability of the active thread being preempted at the end of each basic block.\n     pub preemption_rate: f64,\n+    /// Report the current instruction being executed every N basic blocks.\n+    pub report_progress: Option<u32>,\n }\n \n impl Default for MiriConfig {\n@@ -154,6 +156,7 @@ impl Default for MiriConfig {\n             provenance_mode: ProvenanceMode::Legacy,\n             mute_stdout_stderr: false,\n             preemption_rate: 0.01, // 1%\n+            report_progress: None,\n         }\n     }\n }"}, {"sha": "3621744e8025cfc26b6c051900815b2321578868", "filename": "src/machine.rs", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/5ac47460d2049064d285723b20785730e9330712/src%2Fmachine.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5ac47460d2049064d285723b20785730e9330712/src%2Fmachine.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fmachine.rs?ref=5ac47460d2049064d285723b20785730e9330712", "patch": "@@ -333,6 +333,11 @@ pub struct Evaluator<'mir, 'tcx> {\n \n     /// The probability of the active thread being preempted at the end of each basic block.\n     pub(crate) preemption_rate: f64,\n+\n+    /// If `Some`, we will report the current stack every N basic blocks.\n+    pub(crate) report_progress: Option<u32>,\n+    /// The number of blocks that passed since the last progress report.\n+    pub(crate) since_progress_report: u32,\n }\n \n impl<'mir, 'tcx> Evaluator<'mir, 'tcx> {\n@@ -390,6 +395,8 @@ impl<'mir, 'tcx> Evaluator<'mir, 'tcx> {\n             mute_stdout_stderr: config.mute_stdout_stderr,\n             weak_memory: config.weak_memory_emulation,\n             preemption_rate: config.preemption_rate,\n+            report_progress: config.report_progress,\n+            since_progress_report: 0,\n         }\n     }\n \n@@ -862,6 +869,16 @@ impl<'mir, 'tcx> Machine<'mir, 'tcx> for Evaluator<'mir, 'tcx> {\n     }\n \n     fn before_terminator(ecx: &mut InterpCx<'mir, 'tcx, Self>) -> InterpResult<'tcx> {\n+        // Possibly report our progress.\n+        if let Some(report_progress) = ecx.machine.report_progress {\n+            if ecx.machine.since_progress_report >= report_progress {\n+                register_diagnostic(NonHaltingDiagnostic::ProgressReport);\n+                ecx.machine.since_progress_report = 0;\n+            }\n+            // Cannot overflow, since it is strictly less than `report_progress`.\n+            ecx.machine.since_progress_report += 1;\n+        }\n+        // These are our preemption points.\n         ecx.maybe_preempt_active_thread();\n         Ok(())\n     }"}, {"sha": "8b1e3af6231a0d4f9eb95f157d24af7ab0fcbb12", "filename": "test-cargo-miri/build.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5ac47460d2049064d285723b20785730e9330712/test-cargo-miri%2Fbuild.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5ac47460d2049064d285723b20785730e9330712/test-cargo-miri%2Fbuild.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/test-cargo-miri%2Fbuild.rs?ref=5ac47460d2049064d285723b20785730e9330712", "patch": "@@ -16,7 +16,7 @@ fn main() {\n     not_in_miri();\n     // Cargo calls `miri --print=cfg` to populate the `CARGO_CFG_*` env vars.\n     // Make sure that the \"miri\" flag is set.\n-    assert!(env::var_os(\"CARGO_CFG_MIRI\").is_some());\n+    assert!(env::var_os(\"CARGO_CFG_MIRI\").is_some(), \"cargo failed to tell us about `--cfg miri`\");\n     println!(\"cargo:rerun-if-changed=build.rs\");\n     println!(\"cargo:rerun-if-env-changed=MIRITESTVAR\");\n     println!(\"cargo:rustc-env=MIRITESTVAR=testval\");"}]}