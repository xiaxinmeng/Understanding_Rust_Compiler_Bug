{"sha": "5aa29c4c823cbe02a2d84080eefe3eb1aecf0a06", "node_id": "MDY6Q29tbWl0NzI0NzEyOjVhYTI5YzRjODIzY2JlMDJhMmQ4NDA4MGVlZmUzZWIxYWVjZjBhMDY=", "commit": {"author": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2018-03-21T13:34:46Z"}, "committer": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2018-03-21T13:43:07Z"}, "message": "Fix test error", "tree": {"sha": "27aeef9bc181773c7fc74951a7ea706ffb6d35e5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/27aeef9bc181773c7fc74951a7ea706ffb6d35e5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5aa29c4c823cbe02a2d84080eefe3eb1aecf0a06", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5aa29c4c823cbe02a2d84080eefe3eb1aecf0a06", "html_url": "https://github.com/rust-lang/rust/commit/5aa29c4c823cbe02a2d84080eefe3eb1aecf0a06", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5aa29c4c823cbe02a2d84080eefe3eb1aecf0a06/comments", "author": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "53c6d9b49764a05cc87a06888dfa3e24999ff4ce", "url": "https://api.github.com/repos/rust-lang/rust/commits/53c6d9b49764a05cc87a06888dfa3e24999ff4ce", "html_url": "https://github.com/rust-lang/rust/commit/53c6d9b49764a05cc87a06888dfa3e24999ff4ce"}], "stats": {"total": 8, "additions": 8, "deletions": 0}, "files": [{"sha": "47f6f61072e13acb232e5edc8c74249bf3fa56c0", "filename": "src/librustc_mir/interpret/const_eval.rs", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/5aa29c4c823cbe02a2d84080eefe3eb1aecf0a06/src%2Flibrustc_mir%2Finterpret%2Fconst_eval.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5aa29c4c823cbe02a2d84080eefe3eb1aecf0a06/src%2Flibrustc_mir%2Finterpret%2Fconst_eval.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Finterpret%2Fconst_eval.rs?ref=5aa29c4c823cbe02a2d84080eefe3eb1aecf0a06", "patch": "@@ -339,6 +339,14 @@ impl<'mir, 'tcx> super::Machine<'mir, 'tcx> for CompileTimeEvaluator {\n         ecx: &mut EvalContext<'a, 'mir, 'tcx, Self>,\n         cid: GlobalId<'tcx>,\n     ) -> EvalResult<'tcx, AllocId> {\n+        let alloc = ecx\n+                    .tcx\n+                    .interpret_interner\n+                    .get_cached(cid.instance.def_id());\n+        // Don't evaluate when already cached to prevent cycles\n+        if let Some(alloc) = alloc {\n+            return Ok(alloc)\n+        }\n         // ensure the static is computed\n         ecx.const_eval(cid)?;\n         Ok(ecx"}]}