{"sha": "98ae83daae67e9e7663b8345eced1de8c667271f", "node_id": "C_kwDOAAsO6NoAKDk4YWU4M2RhYWU2N2U5ZTc2NjNiODM0NWVjZWQxZGU4YzY2NzI3MWY", "commit": {"author": {"name": "Dan Gohman", "email": "dev@sunfishcode.online", "date": "2022-12-08T18:35:46Z"}, "committer": {"name": "Dan Gohman", "email": "dev@sunfishcode.online", "date": "2022-12-08T21:15:40Z"}, "message": "Mangle \"main\" as \"__main_void\" on wasm32-wasi\n\nOn wasm, the age-old C trick of having a main function which can either have\nno arguments or argc+argv doesn't work, because wasm requires caller and\ncallee signatures to match. WASI's current strategy is to have compilers\nmangle main's name to indicate which signature they're using. Rust uses the\nno-argument form, which should be mangled as `__main_void`.\n\nThis is needed on wasm32-wasi as of #105395.", "tree": {"sha": "a16a2d03ec22b42923c678823895692cb4cd4290", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a16a2d03ec22b42923c678823895692cb4cd4290"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/98ae83daae67e9e7663b8345eced1de8c667271f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/98ae83daae67e9e7663b8345eced1de8c667271f", "html_url": "https://github.com/rust-lang/rust/commit/98ae83daae67e9e7663b8345eced1de8c667271f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/98ae83daae67e9e7663b8345eced1de8c667271f/comments", "author": {"login": "sunfishcode", "id": 4503403, "node_id": "MDQ6VXNlcjQ1MDM0MDM=", "avatar_url": "https://avatars.githubusercontent.com/u/4503403?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sunfishcode", "html_url": "https://github.com/sunfishcode", "followers_url": "https://api.github.com/users/sunfishcode/followers", "following_url": "https://api.github.com/users/sunfishcode/following{/other_user}", "gists_url": "https://api.github.com/users/sunfishcode/gists{/gist_id}", "starred_url": "https://api.github.com/users/sunfishcode/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sunfishcode/subscriptions", "organizations_url": "https://api.github.com/users/sunfishcode/orgs", "repos_url": "https://api.github.com/users/sunfishcode/repos", "events_url": "https://api.github.com/users/sunfishcode/events{/privacy}", "received_events_url": "https://api.github.com/users/sunfishcode/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sunfishcode", "id": 4503403, "node_id": "MDQ6VXNlcjQ1MDM0MDM=", "avatar_url": "https://avatars.githubusercontent.com/u/4503403?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sunfishcode", "html_url": "https://github.com/sunfishcode", "followers_url": "https://api.github.com/users/sunfishcode/followers", "following_url": "https://api.github.com/users/sunfishcode/following{/other_user}", "gists_url": "https://api.github.com/users/sunfishcode/gists{/gist_id}", "starred_url": "https://api.github.com/users/sunfishcode/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sunfishcode/subscriptions", "organizations_url": "https://api.github.com/users/sunfishcode/orgs", "repos_url": "https://api.github.com/users/sunfishcode/repos", "events_url": "https://api.github.com/users/sunfishcode/events{/privacy}", "received_events_url": "https://api.github.com/users/sunfishcode/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7632db0e87d8adccc9a83a47795c9411b1455855", "url": "https://api.github.com/repos/rust-lang/rust/commits/7632db0e87d8adccc9a83a47795c9411b1455855", "html_url": "https://github.com/rust-lang/rust/commit/7632db0e87d8adccc9a83a47795c9411b1455855"}], "stats": {"total": 4, "additions": 4, "deletions": 0}, "files": [{"sha": "a0476d542e6424a1fb3ba2593dd88c3fcc406cf4", "filename": "compiler/rustc_target/src/spec/wasm32_wasi.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/98ae83daae67e9e7663b8345eced1de8c667271f/compiler%2Frustc_target%2Fsrc%2Fspec%2Fwasm32_wasi.rs", "raw_url": "https://github.com/rust-lang/rust/raw/98ae83daae67e9e7663b8345eced1de8c667271f/compiler%2Frustc_target%2Fsrc%2Fspec%2Fwasm32_wasi.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_target%2Fsrc%2Fspec%2Fwasm32_wasi.rs?ref=98ae83daae67e9e7663b8345eced1de8c667271f", "patch": "@@ -104,6 +104,10 @@ pub fn target() -> Target {\n     // `args::args()` makes the WASI API calls itself.\n     options.main_needs_argc_argv = false;\n \n+    // And, WASI mangles the name of \"main\" to distinguish between different\n+    // signatures.\n+    options.entry_name = \"__main_void\".into();\n+\n     Target {\n         llvm_target: \"wasm32-wasi\".into(),\n         pointer_width: 32,"}]}