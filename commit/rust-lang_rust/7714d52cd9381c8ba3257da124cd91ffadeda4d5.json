{"sha": "7714d52cd9381c8ba3257da124cd91ffadeda4d5", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc3MTRkNTJjZDkzODFjOGJhMzI1N2RhMTI0Y2Q5MWZmYWRlZGE0ZDU=", "commit": {"author": {"name": "Young-il Choi", "email": "duddlf.choi@samsung.com", "date": "2013-03-02T12:25:12Z"}, "committer": {"name": "Young-il Choi", "email": "duddlf.choi@samsung.com", "date": "2013-03-02T12:25:12Z"}, "message": "mk: cleanup - lib and executable suffix handling", "tree": {"sha": "a10c69afbc2694d9ceaf1989c4a0e17d947d88f8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a10c69afbc2694d9ceaf1989c4a0e17d947d88f8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7714d52cd9381c8ba3257da124cd91ffadeda4d5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7714d52cd9381c8ba3257da124cd91ffadeda4d5", "html_url": "https://github.com/rust-lang/rust/commit/7714d52cd9381c8ba3257da124cd91ffadeda4d5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7714d52cd9381c8ba3257da124cd91ffadeda4d5/comments", "author": {"login": "yichoi", "id": 3222276, "node_id": "MDQ6VXNlcjMyMjIyNzY=", "avatar_url": "https://avatars.githubusercontent.com/u/3222276?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yichoi", "html_url": "https://github.com/yichoi", "followers_url": "https://api.github.com/users/yichoi/followers", "following_url": "https://api.github.com/users/yichoi/following{/other_user}", "gists_url": "https://api.github.com/users/yichoi/gists{/gist_id}", "starred_url": "https://api.github.com/users/yichoi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yichoi/subscriptions", "organizations_url": "https://api.github.com/users/yichoi/orgs", "repos_url": "https://api.github.com/users/yichoi/repos", "events_url": "https://api.github.com/users/yichoi/events{/privacy}", "received_events_url": "https://api.github.com/users/yichoi/received_events", "type": "User", "site_admin": false}, "committer": {"login": "yichoi", "id": 3222276, "node_id": "MDQ6VXNlcjMyMjIyNzY=", "avatar_url": "https://avatars.githubusercontent.com/u/3222276?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yichoi", "html_url": "https://github.com/yichoi", "followers_url": "https://api.github.com/users/yichoi/followers", "following_url": "https://api.github.com/users/yichoi/following{/other_user}", "gists_url": "https://api.github.com/users/yichoi/gists{/gist_id}", "starred_url": "https://api.github.com/users/yichoi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yichoi/subscriptions", "organizations_url": "https://api.github.com/users/yichoi/orgs", "repos_url": "https://api.github.com/users/yichoi/repos", "events_url": "https://api.github.com/users/yichoi/events{/privacy}", "received_events_url": "https://api.github.com/users/yichoi/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "49c3f9f1666d31c2b45d132809820d44fb82d6bf", "url": "https://api.github.com/repos/rust-lang/rust/commits/49c3f9f1666d31c2b45d132809820d44fb82d6bf", "html_url": "https://github.com/rust-lang/rust/commit/49c3f9f1666d31c2b45d132809820d44fb82d6bf"}], "stats": {"total": 855, "additions": 450, "deletions": 405}, "files": [{"sha": "9d31ddbf54e8a30cb658b24030cb2f995de83561", "filename": "Makefile.in", "status": "modified", "additions": 82, "deletions": 70, "changes": 152, "blob_url": "https://github.com/rust-lang/rust/blob/7714d52cd9381c8ba3257da124cd91ffadeda4d5/Makefile.in", "raw_url": "https://github.com/rust-lang/rust/raw/7714d52cd9381c8ba3257da124cd91ffadeda4d5/Makefile.in", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Makefile.in?ref=7714d52cd9381c8ba3257da124cd91ffadeda4d5", "patch": "@@ -130,44 +130,6 @@ else\n   CFG_VALGRIND_COMPILE :=\n endif\n \n-define LIBREQ\n-\n-CFG_RUNTIME_$(1) :=$(call CFG_LIB_NAME_$(1),rustrt)\n-CFG_RUSTLLVM_$(1) :=$(call CFG_LIB_NAME_$(1),rustllvm)\n-CFG_CORELIB_$(1) :=$(call CFG_LIB_NAME_$(1),core)\n-CFG_STDLIB_$(1) :=$(call CFG_LIB_NAME_$(1),std)\n-CFG_LIBRUSTC_$(1) :=$(call CFG_LIB_NAME_$(1),rustc)\n-CFG_LIBSYNTAX_$(1) :=$(call CFG_LIB_NAME_$(1),syntax)\n-CFG_LIBFUZZER_$(1) :=$(call CFG_LIB_NAME_$(1),fuzzer)\n-CFG_LIBRUSTPKG_$(1) :=$(call CFG_LIB_NAME_$(1),rustpkg)\n-CFG_LIBRUSTDOC_$(1) :=$(call CFG_LIB_NAME_$(1),rustdoc)\n-CFG_LIBRUSTI_$(1) :=$(call CFG_LIB_NAME_$(1),rusti)\n-CFG_LIBRUST_$(1) :=$(call CFG_LIB_NAME_$(1),rust)\n-\n-STDLIB_GLOB_$(1) :=$(call CFG_LIB_GLOB_$(1),std)\n-CORELIB_GLOB_$(1) :=$(call CFG_LIB_GLOB_$(1),core)\n-LIBRUSTC_GLOB_$(1) :=$(call CFG_LIB_GLOB_$(1),rustc)\n-LIBSYNTAX_GLOB_$(1) :=$(call CFG_LIB_GLOB_$(1),syntax)\n-LIBFUZZER_GLOB_$(1) :=$(call CFG_LIB_GLOB_$(1),fuzzer)\n-LIBRUSTPKG_GLOB_$(1) :=$(call CFG_LIB_GLOB_$(1),rustpkg)\n-LIBRUSTDOC_GLOB_$(1) :=$(call CFG_LIB_GLOB_$(1),rustdoc)\n-LIBRUSTI_GLOB_$(1) :=$(call CFG_LIB_GLOB_$(1),rusti)\n-LIBRUST_GLOB_$(1) :=$(call CFG_LIB_GLOB_$(1),rust)\n-STDLIB_DSYM_GLOB_$(1) :=$(call CFG_LIB_DSYM_GLOB_$(1),std)\n-CORELIB_DSYM_GLOB_$(1) :=$(call CFG_LIB_DSYM_GLOB_$(1),core)\n-LIBRUSTC_DSYM_GLOB_$(1) :=$(call CFG_LIB_DSYM_GLOB_$(1),rustc)\n-LIBSYNTAX_DSYM_GLOB_$(1) :=$(call CFG_LIB_DSYM_GLOB_$(1),syntax)\n-LIBFUZZER_DSYM_GLOB_$(1) :=$(call CFG_LIB_DSYM_GLOB_$(1),fuzzer)\n-LIBRUSTPKG_DSYM_GLOB_$(1) :=$(call CFG_LIB_DSYM_GLOB_$(1),rustpkg)\n-LIBRUSTDOC_DSYM_GLOB_$(1) :=$(call CFG_LIB_DSYM_GLOB_$(1),rustdoc)\n-LIBRUSTI_DSYM_GLOB_$(1) :=$(call CFG_LIB_DSYM_GLOB_$(1),rusti)\n-LIBRUST_DSYM_GLOB_$(1) :=$(call CFG_LIB_DSYM_GLOB_$(1),rust)\n-\n-endef\n-\n-$(foreach target,$(CFG_TARGET_TRIPLES), \\\n-  $(eval $(call LIBREQ,$(target))))\n-\n # version-string calculation\n CFG_GIT_DIR := $(CFG_SRC_DIR).git\n CFG_RELEASE = 0.6\n@@ -197,16 +159,21 @@ endif\n # Target-and-rule \"utility variables\"\n ######################################################################\n \n-#ifdef VERBOSE\n+ifdef VERBOSE\n   Q :=\n   E =\n-#else\n-#  Q := @\n-#  E = echo $(1)\n-#endif\n+else\n+  Q := @\n+  E = echo $(1)\n+endif\n \n S := $(CFG_SRC_DIR)\n-X := $(CFG_EXE_SUFFIX)\n+\n+define DEF_X\n+X_$(1) := $(CFG_EXE_SUFFIX_$(1))\n+endef\n+$(foreach target,$(CFG_TARGET_TRIPLES),\\\n+  $(eval $(call DEF_X,$(target))))\n \n # Look in doc and src dirs.\n VPATH := $(S)doc $(S)src\n@@ -222,6 +189,49 @@ GENERATED :=\n %:: s.%\n %:: SCCS/s.%\n \n+\n+######################################################################\n+# Crates\n+######################################################################\n+\n+define DEF_LIBS\n+\n+CFG_RUNTIME_$(1) :=$(call CFG_LIB_NAME_$(1),rustrt)\n+CFG_RUSTLLVM_$(1) :=$(call CFG_LIB_NAME_$(1),rustllvm)\n+CFG_CORELIB_$(1) :=$(call CFG_LIB_NAME_$(1),core)\n+CFG_STDLIB_$(1) :=$(call CFG_LIB_NAME_$(1),std)\n+CFG_LIBRUSTC_$(1) :=$(call CFG_LIB_NAME_$(1),rustc)\n+CFG_LIBSYNTAX_$(1) :=$(call CFG_LIB_NAME_$(1),syntax)\n+CFG_LIBFUZZER_$(1) :=$(call CFG_LIB_NAME_$(1),fuzzer)\n+CFG_LIBRUSTPKG_$(1) :=$(call CFG_LIB_NAME_$(1),rustpkg)\n+CFG_LIBRUSTDOC_$(1) :=$(call CFG_LIB_NAME_$(1),rustdoc)\n+CFG_LIBRUSTI_$(1) :=$(call CFG_LIB_NAME_$(1),rusti)\n+CFG_LIBRUST_$(1) :=$(call CFG_LIB_NAME_$(1),rust)\n+\n+STDLIB_GLOB_$(1) :=$(call CFG_LIB_GLOB_$(1),std)\n+CORELIB_GLOB_$(1) :=$(call CFG_LIB_GLOB_$(1),core)\n+LIBRUSTC_GLOB_$(1) :=$(call CFG_LIB_GLOB_$(1),rustc)\n+LIBSYNTAX_GLOB_$(1) :=$(call CFG_LIB_GLOB_$(1),syntax)\n+LIBFUZZER_GLOB_$(1) :=$(call CFG_LIB_GLOB_$(1),fuzzer)\n+LIBRUSTPKG_GLOB_$(1) :=$(call CFG_LIB_GLOB_$(1),rustpkg)\n+LIBRUSTDOC_GLOB_$(1) :=$(call CFG_LIB_GLOB_$(1),rustdoc)\n+LIBRUSTI_GLOB_$(1) :=$(call CFG_LIB_GLOB_$(1),rusti)\n+LIBRUST_GLOB_$(1) :=$(call CFG_LIB_GLOB_$(1),rust)\n+STDLIB_DSYM_GLOB_$(1) :=$(call CFG_LIB_DSYM_GLOB_$(1),std)\n+CORELIB_DSYM_GLOB_$(1) :=$(call CFG_LIB_DSYM_GLOB_$(1),core)\n+LIBRUSTC_DSYM_GLOB_$(1) :=$(call CFG_LIB_DSYM_GLOB_$(1),rustc)\n+LIBSYNTAX_DSYM_GLOB_$(1) :=$(call CFG_LIB_DSYM_GLOB_$(1),syntax)\n+LIBFUZZER_DSYM_GLOB_$(1) :=$(call CFG_LIB_DSYM_GLOB_$(1),fuzzer)\n+LIBRUSTPKG_DSYM_GLOB_$(1) :=$(call CFG_LIB_DSYM_GLOB_$(1),rustpkg)\n+LIBRUSTDOC_DSYM_GLOB_$(1) :=$(call CFG_LIB_DSYM_GLOB_$(1),rustdoc)\n+LIBRUSTI_DSYM_GLOB_$(1) :=$(call CFG_LIB_DSYM_GLOB_$(1),rusti)\n+LIBRUST_DSYM_GLOB_$(1) :=$(call CFG_LIB_DSYM_GLOB_$(1),rust)\n+\n+endef\n+\n+$(foreach target,$(CFG_TARGET_TRIPLES),\\\n+  $(eval $(call DEF_LIBS,$(target))))\n+\n ######################################################################\n # Core library variables\n ######################################################################\n@@ -267,8 +277,8 @@ CFG_LLVM_BUILD_DIR_$(1):=$$(CFG_LLVM_BUILD_DIR_$(subst -,_,$(1)))\n CFG_LLVM_INST_DIR_$(1):=$$(CFG_LLVM_INST_DIR_$(subst -,_,$(1)))\n \n # Any rules that depend on LLVM should depend on LLVM_CONFIG\n-LLVM_CONFIG_$(1):=$$(CFG_LLVM_INST_DIR_$(1))/bin/llvm-config$$(X)\n-LLVM_MC_$(1):=$$(CFG_LLVM_INST_DIR_$(1))/bin/llvm-mc$$(X)\n+LLVM_CONFIG_$(1):=$$(CFG_LLVM_INST_DIR_$(1))/bin/llvm-config$$(X_$(1))\n+LLVM_MC_$(1):=$$(CFG_LLVM_INST_DIR_$(1))/bin/llvm-mc$$(X_$(1))\n LLVM_VERSION_$(1)=$$(shell \"$$(LLVM_CONFIG_$(1))\" --version)\n LLVM_BINDIR_$(1)=$$(shell \"$$(LLVM_CONFIG_$(1))\" --bindir)\n LLVM_INCDIR_$(1)=$$(shell \"$$(LLVM_CONFIG_$(1))\" --includedir)\n@@ -280,8 +290,8 @@ LLVM_LDFLAGS_$(1)=$$(shell \"$$(LLVM_CONFIG_$(1))\" --ldflags)\n LLVM_CXXFLAGS_$(1)=$$(subst -I, -iquote , $$(shell \"$$(LLVM_CONFIG_$(1))\" --cxxflags))\n LLVM_HOST_TRIPLE_$(1)=$$(shell \"$$(LLVM_CONFIG_$(1))\" --host-target)\n \n-LLVM_AS_$(1)=$$(CFG_LLVM_INST_DIR_$(1))/bin/llvm-as$$(X)\n-LLC_$(1)=$$(CFG_LLVM_INST_DIR_$(1))/bin/llc$$(X)\n+LLVM_AS_$(1)=$$(CFG_LLVM_INST_DIR_$(1))/bin/llvm-as$$(X_$(1))\n+LLC_$(1)=$$(CFG_LLVM_INST_DIR_$(1))/bin/llc$$(X_$(1))\n \n endef\n \n@@ -357,12 +367,12 @@ else\n   HLIBRUSTC_DEFAULT$(1)_H_$(3) = \\\n     $$(HLIB$(1)_H_$(3))/$(CFG_LIBRUSTC_$(3))\n   TLIBRUSTC_DEFAULT$(1)_T_$(2)_H_$(3) = \\\n-    $$(TLIB$(1)_T_$(2)_H_$(3))/$(CFG_LIBRUSTC_$(3))\n+    $$(TLIB$(1)_T_$(2)_H_$(3))/$(CFG_LIBRUSTC_$(2))\n endif\n \n # Preqrequisites for using the stageN compiler\n HSREQ$(1)_H_$(3) = \\\n-\t$$(HBIN$(1)_H_$(3))/rustc$$(X) \\\n+\t$$(HBIN$(1)_H_$(3))/rustc$$(X_$(3)) \\\n \t$$(HLIB$(1)_H_$(3))/$(CFG_RUNTIME_$(3)) \\\n \t$$(HLIB$(1)_H_$(3))/$(CFG_RUSTLLVM_$(3)) \\\n \t$$(HCORELIB_DEFAULT$(1)_H_$(3)) \\\n@@ -386,25 +396,25 @@ SREQ$(1)_T_$(2)_H_$(3) = \\\n # Prerequisites for a working stageN compiler and libraries, for a specific target\n CSREQ$(1)_T_$(2)_H_$(3) = \\\n \t$$(TSREQ$(1)_T_$(2)_H_$(3)) \\\n-\t$$(HBIN$(1)_H_$(3))/fuzzer$$(X) \\\n-\t$$(HBIN$(1)_H_$(3))/rustpkg$$(X) \\\n-\t$$(HBIN$(1)_H_$(3))/rustdoc$$(X) \\\n-\t$$(HBIN$(1)_H_$(3))/rusti$$(X) \\\n-\t$$(HBIN$(1)_H_$(3))/rust$$(X) \\\n+\t$$(HBIN$(1)_H_$(3))/fuzzer$$(X_$(3)) \\\n+\t$$(HBIN$(1)_H_$(3))/rustpkg$$(X_$(3)) \\\n+\t$$(HBIN$(1)_H_$(3))/rustdoc$$(X_$(3)) \\\n+\t$$(HBIN$(1)_H_$(3))/rusti$$(X_$(3)) \\\n+\t$$(HBIN$(1)_H_$(3))/rust$$(X_$(3)) \\\n \t$$(HLIB$(1)_H_$(3))/$(CFG_LIBFUZZER_$(3)) \\\n \t$$(HLIB$(1)_H_$(3))/$(CFG_LIBRUSTPKG_$(3)) \\\n \t$$(HLIB$(1)_H_$(3))/$(CFG_LIBRUSTDOC_$(3)) \\\n \t$$(HLIB$(1)_H_$(3))/$(CFG_LIBRUSTI_$(3)) \\\n \t$$(HLIB$(1)_H_$(3))/$(CFG_LIBRUST_$(3)) \\\n-\t$$(TLIB$(1)_T_$(2)_H_$(3))/$(CFG_CORELIB_$(3)) \\\n-\t$$(TLIB$(1)_T_$(2)_H_$(3))/$(CFG_STDLIB_$(3))  \\\n-\t$$(TLIB$(1)_T_$(2)_H_$(3))/$(CFG_LIBSYNTAX_$(3))  \\\n-\t$$(TLIB$(1)_T_$(2)_H_$(3))/$(CFG_LIBRUSTC_$(3)) \\\n-\t$$(TLIB$(1)_T_$(2)_H_$(3))/$(CFG_LIBFUZZER_$(3)) \\\n-\t$$(TLIB$(1)_T_$(2)_H_$(3))/$(CFG_LIBRUSTPKG_$(3)) \\\n-\t$$(TLIB$(1)_T_$(2)_H_$(3))/$(CFG_LIBRUSTDOC_$(3)) \\\n-\t$$(TLIB$(1)_T_$(2)_H_$(3))/$(CFG_LIBRUSTI_$(3)) \\\n-\t$$(TLIB$(1)_T_$(2)_H_$(3))/$(CFG_LIBRUST_$(3))\n+\t$$(TLIB$(1)_T_$(2)_H_$(3))/$(CFG_CORELIB_$(2)) \\\n+\t$$(TLIB$(1)_T_$(2)_H_$(3))/$(CFG_STDLIB_$(2))  \\\n+\t$$(TLIB$(1)_T_$(2)_H_$(3))/$(CFG_LIBSYNTAX_$(2))  \\\n+\t$$(TLIB$(1)_T_$(2)_H_$(3))/$(CFG_LIBRUSTC_$(2)) \\\n+\t$$(TLIB$(1)_T_$(2)_H_$(3))/$(CFG_LIBFUZZER_$(2)) \\\n+\t$$(TLIB$(1)_T_$(2)_H_$(3))/$(CFG_LIBRUSTPKG_$(2)) \\\n+\t$$(TLIB$(1)_T_$(2)_H_$(3))/$(CFG_LIBRUSTDOC_$(2)) \\\n+\t$$(TLIB$(1)_T_$(2)_H_$(3))/$(CFG_LIBRUSTI_$(2)) \\\n+\t$$(TLIB$(1)_T_$(2)_H_$(3))/$(CFG_LIBRUST_$(2))\n \n ifeq ($(1),0)\n # Don't run the the stage0 compiler under valgrind - that ship has sailed\n@@ -428,18 +438,20 @@ endif\n endif\n \n STAGE$(1)_T_$(2)_H_$(3) := \t\t\t\t\t\t\\\n-\t$$(Q)$$(call CFG_RUN_TARG,$(1),\t\t\t\t\\\n+\t$$(Q)$$(call CFG_RUN_TARG_$(3),$(1),\t\t\t\t\\\n \t\t$$(CFG_VALGRIND_COMPILE$(1)) \t\t\t\\\n-\t\t$$(HBIN$(1)_H_$(3))/rustc$$(X)\t\t\t\\\n+\t\t$$(HBIN$(1)_H_$(3))/rustc$$(X_$(3))\t\t\t\\\n \t\t--cfg $$(CFGFLAG$(1)_T_$(2)_H_$(3))\t\t\t\\\n-\t\t$$(CFG_RUSTC_FLAGS) $$(EXTRAFLAGS_STAGE$(1)) --target=$(2))\n+\t\t$$(CFG_RUSTC_FLAGS) $$(EXTRAFLAGS_STAGE$(1)) --target=$(2)) \\\n+                $$(RUSTC_FLAGS_$(2))\n \n PERF_STAGE$(1)_T_$(2)_H_$(3) := \t\t\t\t\\\n-\t$$(Q)$$(call CFG_RUN_TARG,$(1),\t\t\t\t\\\n+\t$$(Q)$$(call CFG_RUN_TARG_$(3),$(1),\t\t\t\t\\\n \t\t$$(CFG_PERF_TOOL) \t\t\t\t\t\t\\\n-\t\t$$(HBIN$(1)_H_$(3))/rustc$$(X)\t\t\t\\\n+\t\t$$(HBIN$(1)_H_$(3))/rustc$$(X_$(3))\t\t\t\\\n \t\t--cfg $$(CFGFLAG$(1)_T_$(2)_H_$(3))\t\t\t\\\n-\t\t$$(CFG_RUSTC_FLAGS) $$(EXTRAFLAGS_STAGE$(1)) --target=$(2))\n+\t\t$$(CFG_RUSTC_FLAGS) $$(EXTRAFLAGS_STAGE$(1)) --target=$(2)) \\\n+                $$(RUSTC_FLAGS_$(2))\n \n endef\n "}, {"sha": "a1c6e6864743418c156561504ac6a225e0770b56", "filename": "configure", "status": "modified", "additions": 39, "deletions": 21, "changes": 60, "blob_url": "https://github.com/rust-lang/rust/blob/7714d52cd9381c8ba3257da124cd91ffadeda4d5/configure", "raw_url": "https://github.com/rust-lang/rust/raw/7714d52cd9381c8ba3257da124cd91ffadeda4d5/configure", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/configure?ref=7714d52cd9381c8ba3257da124cd91ffadeda4d5", "patch": "@@ -349,7 +349,8 @@ valopt llvm-root \"\" \"set LLVM root\"\n valopt build-triple \"${DEFAULT_BUILD_TRIPLE}\" \"LLVM build triple\"\n valopt host-triples \"${CFG_BUILD_TRIPLE}\" \"LLVM host triples\"\n valopt target-triples \"${CFG_HOST_TRIPLES}\" \"LLVM target triples\"\n-valopt android-ndk-path \"\" \"Android NDK Standalone path\"\n+valopt android-cross-path \"/opt/ndk_standalone\" \"Android NDK standalone path\"\n+valopt mingw32-cross-path \"\" \"MinGW32 cross compiler path\"\n \n # Validate Options\n step_msg \"validating $CFG_SELF args\"\n@@ -530,29 +531,44 @@ else\n     CFG_C_COMPILER=\"gcc\"\n fi\n \n-if [ ! -z \"$CFG_ANDROID_NDK_PATH\" ]\n-then\n-    if [ ! -f $CFG_ANDROID_NDK_PATH/bin/arm-linux-androideabi-gcc ]\n-    then\n-        err \"NDK $CFG_ANDROID_NDK_PATH/bin/arm-linux-androideabi-gcc not found\"\n-    fi\n-    if [ ! -f $CFG_ANDROID_NDK_PATH/bin/arm-linux-androideabi-g++ ]\n-    then\n-        err \"NDK $CFG_ANDROID_NDK_PATH/bin/arm-linux-androideabi-g++ not found\"\n-    fi\n-    if [ ! -f $CFG_ANDROID_NDK_PATH/bin/arm-linux-androideabi-ar ]\n-    then\n-        err \"NDK $CFG_ANDROID_NDK_PATH/bin/arm-linux-androideabi-ar not found\"\n-    fi\n-\n-    CFG_CROSS_PREFIX_arm=$CFG_ANDROID_NDK_PATH\"/bin/arm-linux-androideabi-\"\n-fi\n-\n # a little post-processing of various config values\n \n CFG_PREFIX=${CFG_PREFIX%/}\n CFG_TARGET_TRIPLES=\"$(echo $CFG_TARGET_TRIPLES | tr ',' ' ')\"\n \n+# copy host-triples to target-triples so that hosts are a subset of targets\n+V_TEMP=\"\"\n+for i in $CFG_HOST_TRIPLES $CFG_TARGET_TRIPLES;\n+do\n+   echo \"$V_TEMP\" | grep -qF $i || V_TEMP=\"$V_TEMP${V_TEMP:+ }$i\"\n+done\n+CFG_TARGET_TRIPLES=$V_TEMP\n+\n+# check target-specific tool-chains\n+for i in $CFG_TARGET_TRIPLES\n+do\n+    case $i in\n+        arm-unknown-android)\n+\n+            if [ ! -f $CFG_ANDROID_CROSS_PATH/bin/arm-linux-androideabi-gcc ]\n+            then\n+                err \"NDK $CFG_ANDROID_CROSS_PATH/bin/arm-linux-androideabi-gcc not found\"\n+            fi\n+            if [ ! -f $CFG_ANDROID_CROSS_PATH/bin/arm-linux-androideabi-g++ ]\n+            then\n+                err \"NDK $CFG_ANDROID_CROSS_PATH/bin/arm-linux-androideabi-g++ not found\"\n+            fi\n+            if [ ! -f $CFG_ANDROID_CROSS_PATH/bin/arm-linux-androideabi-ar ]\n+            then\n+                err \"NDK $CFG_ANDROID_CROSS_PATH/bin/arm-linux-androideabi-ar not found\"\n+            fi\n+            ;;\n+\n+        *)\n+            ;;\n+    esac\n+done\n+\n if [ -z \"$CFG_ENABLE_CLANG\" -a -z \"$CFG_GCC\" ]\n then\n     err \"either clang or gcc is required\"\n@@ -595,14 +611,15 @@ do\n   make_dir rt/$t\n   for i in                                          \\\n     isaac linenoise sync test arch/i386 arch/x86_64 arch/arm   \\\n-    libuv libuv/src\n+    libuv libuv/src/ares libuv/src/eio libuv/src/ev\n   do\n     make_dir rt/$t/$i\n   done\n done\n \n # On windows we just store the libraries in the bin directory because\n # there's no rpath\n+# FIXME: Thise needs to parameterized over target triples. Do it in platform.mk\n CFG_LIBDIR=lib\n if [ \"$CFG_OSTYPE\" = \"pc-mingw32\" ]\n then\n@@ -841,7 +858,8 @@ putvar CFG_TARGET_TRIPLES\n putvar CFG_C_COMPILER\n putvar CFG_LIBDIR\n putvar CFG_DISABLE_MANAGE_SUBMODULES\n-putvar CFG_CROSS_PREFIX_arm\n+putvar CFG_ANDROID_CROSS_PATH\n+putvar CFG_MINGW32_CROSS_PATH\n \n if [ ! -z \"$CFG_ENABLE_PAX_FLAGS\" ]\n then"}, {"sha": "30897eea4579372bd8d2487a57c358c622b20262", "filename": "mk/clean.mk", "status": "modified", "additions": 18, "deletions": 12, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/7714d52cd9381c8ba3257da124cd91ffadeda4d5/mk%2Fclean.mk", "raw_url": "https://github.com/rust-lang/rust/raw/7714d52cd9381c8ba3257da124cd91ffadeda4d5/mk%2Fclean.mk", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/mk%2Fclean.mk?ref=7714d52cd9381c8ba3257da124cd91ffadeda4d5", "patch": "@@ -62,13 +62,13 @@ clean-misc:\n define CLEAN_HOST_STAGE_N\n \n clean$(1)_H_$(2):\n-\t$(Q)rm -f $$(HBIN$(1)_H_$(2))/rustc$(X)\n-\t$(Q)rm -f $$(HBIN$(1)_H_$(2))/fuzzer$(X)\n-\t$(Q)rm -f $$(HBIN$(1)_H_$(2))/rustpkg$(X)\n-\t$(Q)rm -f $$(HBIN$(1)_H_$(2))/serializer$(X)\n-\t$(Q)rm -f $$(HBIN$(1)_H_$(2))/rustdoc$(X)\n-\t$(Q)rm -f $$(HBIN$(1)_H_$(2))/rusti$(X)\n-\t$(Q)rm -f $$(HBIN$(1)_H_$(2))/rust$(X)\n+\t$(Q)rm -f $$(HBIN$(1)_H_$(2))/rustc$(X_$(2))\n+\t$(Q)rm -f $$(HBIN$(1)_H_$(2))/fuzzer$(X_$(2))\n+\t$(Q)rm -f $$(HBIN$(1)_H_$(2))/rustpkg$(X_$(2))\n+\t$(Q)rm -f $$(HBIN$(1)_H_$(2))/serializer$(X_$(2))\n+\t$(Q)rm -f $$(HBIN$(1)_H_$(2))/rustdoc$(X_$(2))\n+\t$(Q)rm -f $$(HBIN$(1)_H_$(2))/rusti$(X_$(2))\n+\t$(Q)rm -f $$(HBIN$(1)_H_$(2))/rust$(X_$(2))\n \t$(Q)rm -f $$(HLIB$(1)_H_$(2))/$(CFG_LIBFUZZER_$(2))\n \t$(Q)rm -f $$(HLIB$(1)_H_$(2))/$(CFG_LIBRUSTPKG_$(2))\n \t$(Q)rm -f $$(HLIB$(1)_H_$(2))/$(CFG_LIBRUSTDOC_$(2))\n@@ -100,11 +100,13 @@ $(foreach host, $(CFG_HOST_TRIPLES), \\\n define CLEAN_TARGET_STAGE_N\n \n clean$(1)_T_$(2)_H_$(3):\n-\t$(Q)rm -f $$(TBIN$(1)_T_$(2)_H_$(3))/rustc$(X)\n-\t$(Q)rm -f $$(TBIN$(1)_T_$(2)_H_$(3))/fuzzer$(X)\n-\t$(Q)rm -f $$(TBIN$(1)_T_$(2)_H_$(3))/rustpkg$(X)\n-\t$(Q)rm -f $$(TBIN$(1)_T_$(2)_H_$(3))/serializer$(X)\n-\t$(Q)rm -f $$(TBIN$(1)_T_$(2)_H_$(3))/rustdoc$(X)\n+\t$(Q)rm -f $$(TBIN$(1)_T_$(2)_H_$(3))/rustc$(X_$(2))\n+\t$(Q)rm -f $$(TBIN$(1)_T_$(2)_H_$(3))/fuzzer$(X_$(2))\n+\t$(Q)rm -f $$(TBIN$(1)_T_$(2)_H_$(3))/rustpkg$(X_$(2))\n+\t$(Q)rm -f $$(TBIN$(1)_T_$(2)_H_$(3))/serializer$(X_$(2))\n+\t$(Q)rm -f $$(TBIN$(1)_T_$(2)_H_$(3))/rustdoc$(X_$(2))\n+\t$(Q)rm -f $$(TBIN$(1)_T_$(2)_H_$(3))/rusti$(X_$(2))\n+\t$(Q)rm -f $$(TBIN$(1)_T_$(2)_H_$(3))/rust$(X_$(2))\n \t$(Q)rm -f $$(TLIB$(1)_T_$(2)_H_$(3))/$(CFG_LIBFUZZER_$(2))\n \t$(Q)rm -f $$(TLIB$(1)_T_$(2)_H_$(3))/$(CFG_LIBRUSTPKG_$(2))\n \t$(Q)rm -f $$(TLIB$(1)_T_$(2)_H_$(3))/$(CFG_LIBRUSTDOC_$(2))\n@@ -113,13 +115,17 @@ clean$(1)_T_$(2)_H_$(3):\n \t$(Q)rm -f $$(TLIB$(1)_T_$(2)_H_$(3))/$(CFG_STDLIB_$(2))\n \t$(Q)rm -f $$(TLIB$(1)_T_$(2)_H_$(3))/$(CFG_LIBRUSTC_$(2))\n \t$(Q)rm -f $$(TLIB$(1)_T_$(2)_H_$(3))/$(CFG_LIBSYNTAX_$(2))\n+\t$(Q)rm -f $$(TLIB$(1)_T_$(2)_H_$(3))/$(CFG_LIBRUSTI_$(2))\n+\t$(Q)rm -f $$(TLIB$(1)_T_$(2)_H_$(3))/$(CFG_LIBRUST_$(2))\n \t$(Q)rm -f $$(TLIB$(1)_T_$(2)_H_$(3))/$(CORELIB_GLOB_$(2))\n \t$(Q)rm -f $$(TLIB$(1)_T_$(2)_H_$(3))/$(STDLIB_GLOB_$(2))\n \t$(Q)rm -f $$(TLIB$(1)_T_$(2)_H_$(3))/$(LIBRUSTC_GLOB_$(2))\n \t$(Q)rm -f $$(TLIB$(1)_T_$(2)_H_$(3))/$(LIBSYNTAX_GLOB_$(2))\n \t$(Q)rm -f $$(TLIB$(1)_T_$(2)_H_$(3))/$(LIBFUZZER_GLOB_$(2))\n \t$(Q)rm -f $$(TLIB$(1)_T_$(2)_H_$(3))/$(LIBRUSTPKG_GLOB_$(2))\n \t$(Q)rm -f $$(TLIB$(1)_T_$(2)_H_$(3))/$(LIBRUSTDOC_GLOB_$(2))\n+\t$(Q)rm -f $$(TLIB$(1)_T_$(2)_H_$(3))/$(LIBRUSTI_GLOB_$(2))\n+\t$(Q)rm -f $$(TLIB$(1)_T_$(2)_H_$(3))/$(LIBRUST_GLOB_$(2))\n \t$(Q)rm -f $$(TLIB$(1)_T_$(2)_H_$(3))/$(CFG_RUSTLLVM_$(2))\n \t$(Q)rm -f $$(TLIB$(1)_T_$(2)_H_$(3))/libstd.rlib\n \t$(Q)rm -f $$(TLIB$(1)_T_$(2)_H_$(3))/libmorestack.a"}, {"sha": "10d7c9b0301d9197a5a47d2a97d6e6064d047968", "filename": "mk/docs.mk", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7714d52cd9381c8ba3257da124cd91ffadeda4d5/mk%2Fdocs.mk", "raw_url": "https://github.com/rust-lang/rust/raw/7714d52cd9381c8ba3257da124cd91ffadeda4d5/mk%2Fdocs.mk", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/mk%2Fdocs.mk?ref=7714d52cd9381c8ba3257da124cd91ffadeda4d5", "patch": "@@ -171,7 +171,7 @@ ifeq ($(CFG_PANDOC),)\n else\n \n # The rustdoc executable\n-RUSTDOC = $(HBIN2_H_$(CFG_BUILD_TRIPLE))/rustdoc$(X)\n+RUSTDOC = $(HBIN2_H_$(CFG_BUILD_TRIPLE))/rustdoc$(X_$(CFG_BUILD_TRIPLE))\n \n # The library documenting macro\n # $(1) - The output directory"}, {"sha": "13a8a5401172a94e65f83fbc57ff583c5a95a58b", "filename": "mk/host.mk", "status": "modified", "additions": 42, "deletions": 40, "changes": 82, "blob_url": "https://github.com/rust-lang/rust/blob/7714d52cd9381c8ba3257da124cd91ffadeda4d5/mk%2Fhost.mk", "raw_url": "https://github.com/rust-lang/rust/raw/7714d52cd9381c8ba3257da124cd91ffadeda4d5/mk%2Fhost.mk", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/mk%2Fhost.mk?ref=7714d52cd9381c8ba3257da124cd91ffadeda4d5", "patch": "@@ -21,49 +21,51 @@ define CP_HOST_STAGE_N\n \n # Host libraries and executables (stage$(2)/bin/rustc and its runtime needs)\n \n-$$(HBIN$(2)_H_$(4))/rustc$$(X): \\\n-\t$$(TBIN$(1)_T_$(4)_H_$(3))/rustc$$(X) \\\n-\t$$(HLIB$(2)_H_$(4))/$(CFG_RUNTIME_$(3)) \\\n-\t$$(HLIB$(2)_H_$(4))/$(CFG_RUSTLLVM_$(3)) \\\n-\t$$(HLIB$(2)_H_$(4))/$(CFG_LIBRUSTC_$(3)) \\\n+# Note: $(3) and $(4) are both the same!\n+\n+$$(HBIN$(2)_H_$(4))/rustc$$(X_$(4)): \\\n+\t$$(TBIN$(1)_T_$(4)_H_$(3))/rustc$$(X_$(4)) \\\n+\t$$(HLIB$(2)_H_$(4))/$(CFG_RUNTIME_$(4)) \\\n+\t$$(HLIB$(2)_H_$(4))/$(CFG_RUSTLLVM_$(4)) \\\n+\t$$(HLIB$(2)_H_$(4))/$(CFG_LIBRUSTC_$(4)) \\\n \t$$(HCORELIB_DEFAULT$(2)_H_$(4)) \\\n \t$$(HSTDLIB_DEFAULT$(2)_H_$(4))\n \t@$$(call E, cp: $$@)\n \t$$(Q)cp $$< $$@\n \n-$$(HLIB$(2)_H_$(4))/$(CFG_LIBRUSTC_$(3)): \\\n-\t$$(TLIB$(1)_T_$(4)_H_$(3))/$(CFG_LIBRUSTC_$(3)) \\\n-\t$$(HLIB$(2)_H_$(4))/$(CFG_LIBSYNTAX_$(3)) \\\n-\t$$(HLIB$(2)_H_$(4))/$(CFG_RUNTIME_$(3)) \\\n-\t$$(HLIB$(2)_H_$(4))/$(CFG_RUSTLLVM_$(3)) \\\n-\t$$(HCORELIB_DEFAULT$(2)_H_$(3)) \\\n-\t$$(HSTDLIB_DEFAULT$(2)_H_$(3))\n+$$(HLIB$(2)_H_$(4))/$(CFG_LIBRUSTC_$(4)): \\\n+\t$$(TLIB$(1)_T_$(4)_H_$(3))/$(CFG_LIBRUSTC_$(4)) \\\n+\t$$(HLIB$(2)_H_$(4))/$(CFG_LIBSYNTAX_$(4)) \\\n+\t$$(HLIB$(2)_H_$(4))/$(CFG_RUNTIME_$(4)) \\\n+\t$$(HLIB$(2)_H_$(4))/$(CFG_RUSTLLVM_$(4)) \\\n+\t$$(HCORELIB_DEFAULT$(2)_H_$(4)) \\\n+\t$$(HSTDLIB_DEFAULT$(2)_H_$(4))\n \t@$$(call E, cp: $$@)\n \t$$(Q)cp $$< $$@\n-\t$$(Q)cp -R $$(TLIB$(1)_T_$(4)_H_$(3))/$(LIBRUSTC_GLOB_$(3)) \\\n-\t\t$(wildcard $$(TLIB$(1)_T_$(4)_H_$(3))/$(LIBRUSTC_DSYM_GLOB_$(3))) \\\n+\t$$(Q)cp -R $$(TLIB$(1)_T_$(4)_H_$(3))/$(LIBRUSTC_GLOB_$(4)) \\\n+\t\t$(wildcard $$(TLIB$(1)_T_$(4)_H_$(3))/$(LIBRUSTC_DSYM_GLOB_$(4))) \\\n \t        $$(HLIB$(2)_H_$(4))\n \n-$$(HLIB$(2)_H_$(4))/$(CFG_LIBSYNTAX_$(3)): \\\n-\t$$(TLIB$(1)_T_$(4)_H_$(3))/$(CFG_LIBSYNTAX_$(3)) \\\n-\t$$(HLIB$(2)_H_$(4))/$(CFG_RUNTIME_$(3)) \\\n-\t$$(HLIB$(2)_H_$(4))/$(CFG_RUSTLLVM_$(3)) \\\n-\t$$(HCORELIB_DEFAULT$(2)_H_$(3)) \\\n-\t$$(HSTDLIB_DEFAULT$(2)_H_$(3))\n+$$(HLIB$(2)_H_$(4))/$(CFG_LIBSYNTAX_$(4)): \\\n+\t$$(TLIB$(1)_T_$(4)_H_$(3))/$(CFG_LIBSYNTAX_$(4)) \\\n+\t$$(HLIB$(2)_H_$(4))/$(CFG_RUNTIME_$(4)) \\\n+\t$$(HLIB$(2)_H_$(4))/$(CFG_RUSTLLVM_$(4)) \\\n+\t$$(HCORELIB_DEFAULT$(2)_H_$(4)) \\\n+\t$$(HSTDLIB_DEFAULT$(2)_H_$(4))\n \t@$$(call E, cp: $$@)\n \t$$(Q)cp $$< $$@\n-\t$$(Q)cp -R $$(TLIB$(1)_T_$(4)_H_$(3))/$(LIBSYNTAX_GLOB_$(3)) \\\n-\t\t$$(wildcard $$(TLIB$(1)_T_$(4)_H_$(3))/$(LIBSYNTAX_DSYM_GLOB_$(3))) \\\n+\t$$(Q)cp -R $$(TLIB$(1)_T_$(4)_H_$(3))/$(LIBSYNTAX_GLOB_$(4)) \\\n+\t\t$$(wildcard $$(TLIB$(1)_T_$(4)_H_$(3))/$(LIBSYNTAX_DSYM_GLOB_$(4))) \\\n \t        $$(HLIB$(2)_H_$(4))\n \n-$$(HLIB$(2)_H_$(4))/$(CFG_RUNTIME_$(3)): \\\n-\t$$(TLIB$(1)_T_$(4)_H_$(3))/$(CFG_RUNTIME_$(3))\n+$$(HLIB$(2)_H_$(4))/$(CFG_RUNTIME_$(4)): \\\n+\t$$(TLIB$(1)_T_$(4)_H_$(3))/$(CFG_RUNTIME_$(4))\n \t@$$(call E, cp: $$@)\n \t$$(Q)cp $$< $$@\n \n-$$(HLIB$(2)_H_$(4))/$(CFG_CORELIB_$(3)): \\\n-\t$$(TLIB$(1)_T_$(4)_H_$(3))/$(CFG_CORELIB_$(3)) \\\n-\t$$(HLIB$(2)_H_$(4))/$(CFG_RUNTIME_$(3))\n+$$(HLIB$(2)_H_$(4))/$(CFG_CORELIB_$(4)): \\\n+\t$$(TLIB$(1)_T_$(4)_H_$(3))/$(CFG_CORELIB_$(4)) \\\n+\t$$(HLIB$(2)_H_$(4))/$(CFG_RUNTIME_$(4))\n \t@$$(call E, cp: $$@)\n \t$$(Q)cp $$< $$@\n # Subtle: We do not let the shell expand $(CORELIB_DSYM_GLOB) directly rather\n@@ -73,43 +75,43 @@ $$(HLIB$(2)_H_$(4))/$(CFG_CORELIB_$(3)): \\\n # glob, and cp reports an error because libcore-*.dylib.dsym does not exist.\n # Make instead expands the glob to nothing, which gives us the correct behavior.\n # (Copy .dsym file if it exists, but do nothing otherwise)\n-\t$$(Q)cp -R $$(TLIB$(1)_T_$(4)_H_$(3))/$(CORELIB_GLOB_$(3)) \\\n-\t\t$$(wildcard $$(TLIB$(1)_T_$(4)_H_$(3))/$(CORELIB_DSYM_GLOB_$(3))) \\\n+\t$$(Q)cp -R $$(TLIB$(1)_T_$(4)_H_$(3))/$(CORELIB_GLOB_$(4)) \\\n+\t\t$$(wildcard $$(TLIB$(1)_T_$(4)_H_$(3))/$(CORELIB_DSYM_GLOB_$(4))) \\\n \t        $$(HLIB$(2)_H_$(4))\n \n-$$(HLIB$(2)_H_$(4))/$(CFG_STDLIB_$(3)): \\\n-\t$$(TLIB$(1)_T_$(4)_H_$(3))/$(CFG_STDLIB_$(3)) \\\n-\t$$(HLIB$(2)_H_$(4))/$(CFG_CORELIB_$(3)) \\\n-\t$$(HLIB$(2)_H_$(4))/$(CFG_RUNTIME_$(3))\n+$$(HLIB$(2)_H_$(4))/$(CFG_STDLIB_$(4)): \\\n+\t$$(TLIB$(1)_T_$(4)_H_$(3))/$(CFG_STDLIB_$(4)) \\\n+\t$$(HLIB$(2)_H_$(4))/$(CFG_CORELIB_$(4)) \\\n+\t$$(HLIB$(2)_H_$(4))/$(CFG_RUNTIME_$(4))\n \t@$$(call E, cp: $$@)\n \t$$(Q)cp $$< $$@\n-\t$$(Q)cp -R $$(TLIB$(1)_T_$(4)_H_$(3))/$(STDLIB_GLOB_$(3)) \\\n-\t\t$$(wildcard $$(TLIB$(1)_T_$(4)_H_$(3))/$(STDLIB_DSYM_GLOB_$(3))) \\\n+\t$$(Q)cp -R $$(TLIB$(1)_T_$(4)_H_$(3))/$(STDLIB_GLOB_$(4)) \\\n+\t\t$$(wildcard $$(TLIB$(1)_T_$(4)_H_$(3))/$(STDLIB_DSYM_GLOB_$(4))) \\\n \t        $$(HLIB$(2)_H_$(4))\n \n $$(HLIB$(2)_H_$(4))/libcore.rlib: \\\n \t$$(TLIB$(1)_T_$(4)_H_$(3))/libcore.rlib \\\n-\t$$(HLIB$(2)_H_$(4))/$$(CFG_RUNTIME)\n+\t$$(HLIB$(2)_H_$(4))/$$(CFG_RUNTIME_$(4))\n \t@$$(call E, cp: $$@)\n \t$$(Q)cp $$< $$@\n \n $$(HLIB$(2)_H_$(4))/libstd.rlib: \\\n \t$$(TLIB$(1)_T_$(4)_H_$(3))/libstd.rlib \\\n \t$$(HLIB$(2)_H_$(4))/libcore.rlib \\\n-\t$$(HLIB$(2)_H_$(4))/$$(CFG_RUNTIME)\n+\t$$(HLIB$(2)_H_$(4))/$$(CFG_RUNTIME_$(4))\n \t@$$(call E, cp: $$@)\n \t$$(Q)cp $$< $$@\n \n $$(HLIB$(2)_H_$(4))/librustc.rlib: \\\n \t$$(TLIB$(1)_T_$(4)_H_$(3))/librustc.rlib \\\n \t$$(HLIB$(2)_H_$(4))/libcore.rlib \\\n \t$$(HLIB$(2)_H_$(4))/libstd.rlib \\\n-\t$$(HLIB$(2)_H_$(4))/$$(CFG_RUNTIME)\n+\t$$(HLIB$(2)_H_$(4))/$$(CFG_RUNTIME_$(4))\n \t@$$(call E, cp: $$@)\n \t$$(Q)cp $$< $$@\n \n-$$(HLIB$(2)_H_$(4))/$(CFG_RUSTLLVM_$(3)): \\\n-\t$$(TLIB$(1)_T_$(4)_H_$(3))/$(CFG_RUSTLLVM_$(3))\n+$$(HLIB$(2)_H_$(4))/$(CFG_RUSTLLVM_$(4)): \\\n+\t$$(TLIB$(1)_T_$(4)_H_$(3))/$(CFG_RUSTLLVM_$(4))\n \t@$$(call E, cp: $$@)\n \t$$(Q)cp $$< $$@\n "}, {"sha": "24f311cd7d131baa65ac3307a883c1b5cf8bfae2", "filename": "mk/install.mk", "status": "modified", "additions": 11, "deletions": 11, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/7714d52cd9381c8ba3257da124cd91ffadeda4d5/mk%2Finstall.mk", "raw_url": "https://github.com/rust-lang/rust/raw/7714d52cd9381c8ba3257da124cd91ffadeda4d5/mk%2Finstall.mk", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/mk%2Finstall.mk?ref=7714d52cd9381c8ba3257da124cd91ffadeda4d5", "patch": "@@ -88,14 +88,14 @@ install-host: $(CSREQ$(ISTAGE)_T_$(CFG_BUILD_TRIPLE)_H_$(CFG_BUILD_TRIPLE))\n \t$(Q)mkdir -p $(PREFIX_BIN)\n \t$(Q)mkdir -p $(PREFIX_LIB)\n \t$(Q)mkdir -p $(PREFIX_ROOT)/share/man/man1\n-\t$(Q)$(call INSTALL,$(HB2),$(PHB),rustc$(X))\n-\t$(Q)$(call INSTALL,$(HB2),$(PHB),rustpkg$(X))\n-\t$(Q)$(call INSTALL,$(HB2),$(PHB),rustdoc$(X))\n-\t$(Q)$(call INSTALL,$(HB2),$(PHB),rusti$(X))\n-\t$(Q)$(call INSTALL,$(HB2),$(PHB),rust$(X))\n+\t$(Q)$(call INSTALL,$(HB2),$(PHB),rustc$(X_$(CFG_BUILD_TRIPLE)))\n+\t$(Q)$(call INSTALL,$(HB2),$(PHB),rustpkg$(X_$(CFG_BUILD_TRIPLE)))\n+\t$(Q)$(call INSTALL,$(HB2),$(PHB),rustdoc$(X_$(CFG_BUILD_TRIPLE)))\n+\t$(Q)$(call INSTALL,$(HB2),$(PHB),rusti$(X_$(CFG_BUILD_TRIPLE)))\n+\t$(Q)$(call INSTALL,$(HB2),$(PHB),rust$(X_$(CFG_BUILD_TRIPLE)))\n \t$(Q)$(call INSTALL,$(HL),$(PHL),$(CFG_LIBRUSTC_$(CFG_BUILD_TRIPLE)))\n \t$(Q)$(call INSTALL,$(HL),$(PHL),$(CFG_LIBRUSTPKG_$(CFG_BUILD_TRIPLE)))\n-\t$(Q)$(call INSTALL,$(HL),$(PHL),$(CFG_LIBRUSTDOC_$(CFG_BUILD_TRIPLE))\n+\t$(Q)$(call INSTALL,$(HL),$(PHL),$(CFG_LIBRUSTDOC_$(CFG_BUILD_TRIPLE)))\n \t$(Q)$(call INSTALL,$(HL),$(PHL),$(CFG_LIBRUSTI_$(CFG_BUILD_TRIPLE)))\n \t$(Q)$(call INSTALL,$(HL),$(PHL),$(CFG_LIBRUST_$(CFG_BUILD_TRIPLE)))\n \t$(Q)$(call INSTALL_LIB,$(HL),$(PHL),$(CORELIB_GLOB_$(CFG_BUILD_TRIPLE)))\n@@ -116,11 +116,11 @@ HOST_LIB_FROM_HL_GLOB = \\\n   $(patsubst $(HL)/%,$(PHL)/%,$(wildcard $(HL)/$(1)))\n \n uninstall:\n-\t$(Q)rm -f $(PHB)/rustc$(X)\n-\t$(Q)rm -f $(PHB)/rustpkg$(X)\n-\t$(Q)rm -f $(PHB)/rusti$(X)\n-\t$(Q)rm -f $(PHB)/rust$(X)\n-\t$(Q)rm -f $(PHB)/rustdoc$(X)\n+\t$(Q)rm -f $(PHB)/rustc$(X_$(CFG_BUILD_TRIPLE))\n+\t$(Q)rm -f $(PHB)/rustpkg$(X_$(CFG_BUILD_TRIPLE))\n+\t$(Q)rm -f $(PHB)/rusti$(X_$(CFG_BUILD_TRIPLE))\n+\t$(Q)rm -f $(PHB)/rust$(X_$(CFG_BUILD_TRIPLE))\n+\t$(Q)rm -f $(PHB)/rustdoc$(X_$(CFG_BUILD_TRIPLE))\n \t$(Q)rm -f $(PHL)/$(CFG_RUSTLLVM_$(CFG_BUILD_TRIPLE))\n \t$(Q)rm -f $(PHL)/$(CFG_LIBRUSTPKG_$(CFG_BUILD_TRIPLE))\n \t$(Q)rm -f $(PHL)/$(CFG_LIBRUSTC_$(CFG_BUILD_TRIPLE))"}, {"sha": "327f2ca31e00f8fcd7bb7c37efd2f61c9122ac18", "filename": "mk/perf.mk", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/7714d52cd9381c8ba3257da124cd91ffadeda4d5/mk%2Fperf.mk", "raw_url": "https://github.com/rust-lang/rust/raw/7714d52cd9381c8ba3257da124cd91ffadeda4d5/mk%2Fperf.mk", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/mk%2Fperf.mk?ref=7714d52cd9381c8ba3257da124cd91ffadeda4d5", "patch": "@@ -10,16 +10,16 @@\n \n \n ifdef CFG_PERF_TOOL\n-rustc-perf$(X): $(CFG_BUILD_TRIPLE)/stage2/bin/rustc$(X)\n+rustc-perf$(X): $(CFG_BUILD_TRIPLE)/stage2/bin/rustc$(X_$(CFG_BUILD_TRIPLE))\n \t@$(call E, perf compile: $@)\n \t$(PERF_STAGE2_T_$(CFG_BUILD_TRIPLE)_H_$(CFG_BUILD_TRIPLE)) \\\n \t\t -o $@ $(COMPILER_CRATE) >rustc-perf.err 2>&1\n \t$(Q)rm -f $(LIBRUSTC_GLOB)\n else\n-rustc-perf$(X): $(CFG_BUILD_TRIPLE)/stage2/bin/rustc$(X)\n+rustc-perf$(X): $(CFG_BUILD_TRIPLE)/stage2/bin/rustc$(X_$(CFG_BUILD_TRIPLE))\n \t$(Q)touch $@\n endif\n \n-perf: check-stage2-perf rustc-perf$(X)\n+perf: check-stage2-perf rustc-perf$(X_$(CFG_BUILD_TRIPLE))\n \t$(Q)find $(CFG_BUILD_TRIPLE)/test/perf -name \\*.err | xargs cat\n \t$(Q)cat rustc-perf.err"}, {"sha": "2b5e4a0c5aebc1f07cd12c7a470fe51c8db0d5ed", "filename": "mk/platform.mk", "status": "modified", "additions": 78, "deletions": 97, "changes": 175, "blob_url": "https://github.com/rust-lang/rust/blob/7714d52cd9381c8ba3257da124cd91ffadeda4d5/mk%2Fplatform.mk", "raw_url": "https://github.com/rust-lang/rust/raw/7714d52cd9381c8ba3257da124cd91ffadeda4d5/mk%2Fplatform.mk", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/mk%2Fplatform.mk?ref=7714d52cd9381c8ba3257da124cd91ffadeda4d5", "patch": "@@ -48,7 +48,16 @@ CFG_GCCISH_PRE_LIB_FLAGS_x86_64-unknown-linux-gnu := -Wl,-whole-archive\n CFG_GCCISH_POST_LIB_FLAGS_x86_64-unknown-linux-gnu := -Wl,-no-whole-archive -Wl,-znoexecstack\n CFG_DEF_SUFFIX_x86_64-unknown-linux-gnu := .linux.def\n CFG_INSTALL_NAME_x86_64-unknown-linux-gnu =\n-CFG_GCCISH_CROSS_x86_64-unknown-linux-gnu =\n+CFG_LIBUV_LINK_FLAGS_x86_64-unknown-linux-gnu =\n+CFG_LLVM_BUILD_ENV_x86_64-unknown-linux-gnu=\"CXXFLAGS=-fno-omit-frame-pointer\"\n+CFG_GCCISH_CROSS_PREFIX_x86_64-unknown-linux-gnu =\n+CFG_EXE_SUFFIX_x86_64-unknown-linux-gnu =\n+CFG_WINDOWSY_x86_64-unknown-linux-gnu :=\n+CFG_LINUXY_x86_64-unknown-linux-gnu := 1\n+CFG_PATH_MUNGE_x86_64-unknown-linux-gnu := true\n+CFG_LDPATH_x86_64-unknown-linux-gnu :=\n+CFG_RUN_x86_64-unknown-linux-gnu=$(2)\n+CFG_RUN_TARG_x86_64-unknown-linux-gnu=$(call CFG_RUN_x86_64-unknown-linux-gnu,,$(2))\n \n # x86_64-apple-darwin configuration\n CFG_LIB_NAME_x86_64-apple-darwin=lib$(1).dylib\n@@ -62,6 +71,14 @@ CFG_GCCISH_PRE_LIB_FLAGS_x86_64-apple-darwin :=\n CFG_GCCISH_POST_LIB_FLAGS_x86_64-apple-darwin :=\n CFG_DEF_SUFFIX_x86_64-apple-darwin := .darwin.def\n CFG_INSTALL_NAME_x86_64-apple-darwin = -Wl,-install_name,@rpath/$(1)\n+CFG_LIBUV_LINK_FLAGS_x86_64-apple-darwin =\n+CFG_EXE_SUFFIX_x86_64-apple-darwin :=\n+CFG_WINDOWSY_x86_64-apple-darwin :=\n+CFG_LINUXY_x86_64-apple-darwin := 1\n+CFG_PATH_MUNGE_x86_64-apple-darwin := true\n+CFG_LDPATH_x86_64-apple-darwin :=\n+CFG_RUN_x86_64-apple-darwin=$(2)\n+CFG_RUN_TARG_x86_64-apple-darwin=$(call CFG_RUN_x86_64-apple-darwin,,$(2))\n \n # arm-unknown-android configuration\n CFG_LIB_NAME_arm-unknown-android=lib$(1).so\n@@ -75,7 +92,15 @@ CFG_GCCISH_PRE_LIB_FLAGS_arm-unknown-android := -Wl,-whole-archive\n CFG_GCCISH_POST_LIB_FLAGS_arm-unknown-android := -Wl,-no-whole-archive -Wl,-znoexecstack\n CFG_DEF_SUFFIX_arm-unknown-android := .android.def\n CFG_INSTALL_NAME_arm-unknown-android =\n-CFG_GCCISH_CROSS_arm-unknown-android = $(CFG_CROSS_PREFIX_arm)\n+CFG_LIBUV_LINK_FLAGS_arm-unknown-android =\n+CFG_GCCISH_CROSS_PREFIX_arm-unknown-android = $(CFG_ANDROID_CROSS_PATH)/bin/arm-linux-androideabi-\n+CFG_EXE_SUFFIX_arm-unknown-android :=\n+CFG_WINDOWSY_arm-unknown-android :=\n+CFG_LINUXY_arm-unknown-android := 1\n+CFG_PATH_MUNGE_arm-unknown-android := true\n+CFG_LDPATH_arm-unknown-android :=\n+CFG_RUN_arm-unknown-android=\n+CFG_RUN_TARG_arm-unknown-android=\n \n # i686-pc-mingw32 configuration\n CFG_LIB_NAME_i686-pc-mingw32=$(1).dll\n@@ -87,41 +112,65 @@ CFG_GCCISH_LINK_FLAGS_i686-pc-mingw32 := -shared -fPIC -g\n CFG_GCCISH_DEF_FLAG_i686-pc-mingw32 :=\n CFG_GCCISH_PRE_LIB_FLAGS_i686-pc-mingw32 := \n CFG_GCCISH_POST_LIB_FLAGS_i686-pc-mingw32 := \n-CFG_DEF_SUFFIX_i686-pc-mingw32 := .def\n+CFG_DEF_SUFFIX_i686-pc-mingw32 := .mingw32.def\n CFG_INSTALL_NAME_i686-pc-mingw32 =\n-CFG_GCCISH_CROSS_i686-pc-mingw32 =\n+CFG_LIBUV_LINK_FLAGS_i686-pc-mingw32 := -lWs2_32 -lpsapi -liphlpapi\n+CFG_GCCISH_CROSS_PREFIX_i686-pc-mingw32 =\n+CFG_EXE_SUFFIX_i686-pc-mingw32 := .exe\n+CFG_WINDOWSY_i686-pc-mingw32 := 1\n+CFG_LINUXY_i686-pc-mingw32 :=\n+CFG_PATH_MUNGE_i686-pc-mingw32 :=\n+CFG_LDPATH_i686-pc-mingw32 :=$(CFG_LDPATH_i686-pc-mingw32):$(PATH)\n+CFG_RUN_i686-pc-mingw32=PATH=\"$(CFG_LDPATH_i686-pc-mingw32):$(1)\" $(2)\n+CFG_RUN_TARG_i686-pc-mingw32=$(call CFG_RUN_i686-pc-mingw32,$(HLIB$(1)_H_$(CFG_BUILD_TRIPLE)),$(2))\n+\n+# i586-mingw32msvc configuration\n+CFG_LIB_NAME_i586-mingw32msvc=$(1).dll\n+CFG_LIB_GLOB_i586-mingw32msvc=$(1)-*.dll\n+CFG_LIB_DSYM_GLOB_i586-mingw32msvc=$(1)-*.dylib.dSYM\n+CFG_GCCISH_CFLAGS_i586-mingw32msvc := -Wall -Werror -g -march=586 -m32\n+CFG_GCCISH_CXXFLAGS_i586-mingw32msvc := -fno-rtti\n+CFG_GCCISH_LINK_FLAGS_i586-mingw32msvc := -shared -g -m32\n+CFG_GCCISH_DEF_FLAG_i586-mingw32msvc :=\n+CFG_GCCISH_PRE_LIB_FLAGS_i586-mingw32msvc :=\n+CFG_GCCISH_POST_LIB_FLAGS_i586-mingw32msvc :=\n+CFG_DEF_SUFFIX_i586-mingw32msvc := .mingw32.def\n+CFG_INSTALL_NAME_i586-mingw32msvc =\n+CFG_LIBUV_LINK_FLAGS_i586-mingw32msvc := -lWs2_32 -lpsapi -liphlpapi\n+CFG_GCCISH_CROSS_PREFIX_i586-mingw32msvc = $(CFG_MIGW32_CROSS_PATH)/bin/i586-mingw32msvc-\n+CFG_EXE_SUFFIX_i586-mingw32msvc := .exe\n+CFG_WINDOWSY_i586-mingw32msvc := 1\n+CFG_LINUXY_i586-mingw32msvc :=\n+CFG_PATH_MUNGE_i586-mingw32msvc := $(strip perl -i.bak -p   \\\n+                             -e 's@\\\\(\\S)@/\\1@go;'       \\\n+                             -e 's@^/([a-zA-Z])/@\\1:/@o;')\n+CFG_LDPATH_i586-mingw32msvc :=\n+CFG_RUN_i586-mingw32msvc=\n+CFG_RUN_TARG_i586-mingw32msvc=\n \n # Hack: not sure how to test if a file exists in make other than this\n OS_SUPP = $(patsubst %,--suppressions=%,\\\n       $(wildcard $(CFG_SRC_DIR)src/etc/$(CFG_OSTYPE).supp*))\n \n-ifneq ($(findstring mingw,$(CFG_OSTYPE)),)\n-  CFG_WINDOWSY := 1\n-endif\n-ifneq ($(findstring linux,$(CFG_OSTYPE)),)\n-  CFG_UNIXY := 1\n-endif\n-ifneq ($(findstring darwin,$(CFG_OSTYPE)),)\n-  CFG_UNIXY := 1\n-endif\n-\n ifdef CFG_DISABLE_OPTIMIZE_CXX\n   $(info cfg: disabling C++ optimization (CFG_DISABLE_OPTIMIZE_CXX))\n   CFG_GCCISH_CFLAGS += -O0\n else\n   CFG_GCCISH_CFLAGS += -O2\n endif\n \n-CFG_TESTLIB=$(CFG_BUILD_DIR)/$(2)/$(strip \\\n- $(if $(findstring stage0,$(1)), \\\n-       stage0/$(CFG_LIBDIR), \\\n-      $(if $(findstring stage1,$(1)), \\\n-           stage1/$(CFG_LIBDIR), \\\n-          $(if $(findstring stage2,$(1)), \\\n-               stage2/$(CFG_LIBDIR), \\\n-               $(if $(findstring stage3,$(1)), \\\n-                    stage3/$(CFG_LIBDIR), \\\n-               )))))/rustc/$(CFG_HOST_TRIPLE)/$(CFG_LIBDIR)\n+ifdef CFG_VALGRIND\n+  CFG_VALGRIND += --error-exitcode=100 \\\n+                  --quiet \\\n+                  --suppressions=$(CFG_SRC_DIR)src/etc/x86.supp \\\n+                  $(OS_SUPP)\n+  ifdef CFG_ENABLE_HELGRIND\n+    CFG_VALGRIND += --tool=helgrind\n+  else\n+    CFG_VALGRIND += --tool=memcheck \\\n+                    --leak-check=full\n+  endif\n+endif\n \n ifneq ($(findstring linux,$(CFG_OSTYPE)),)\n   # -znoexecstack is here because librt is for some reason being created\n@@ -140,74 +189,6 @@ ifneq ($(findstring linux,$(CFG_OSTYPE)),)\n       CFG_PERF_TOOL := /usr/bin/time --verbose\n     endif\n   endif\n-  # Linux requires LLVM to be built like this to get backtraces into Rust code\n-  CFG_LLVM_BUILD_ENV=\"CXXFLAGS=-fno-omit-frame-pointer\"\n-endif\n-\n-ifdef CFG_UNIXY\n-  CFG_INFO := $(info cfg: unix-y environment)\n-\n-  CFG_PATH_MUNGE := true\n-  CFG_EXE_SUFFIX :=\n-  CFG_LDPATH :=\n-  CFG_RUN=$(2)\n-  CFG_RUN_TARG=$(call CFG_RUN,,$(2))\n-  CFG_RUN_TEST=$(call CFG_RUN,,$(CFG_VALGRIND) $(1))\n-  CFG_LIBUV_LINK_FLAGS=\n-\n-  ifdef CFG_ENABLE_MINGW_CROSS\n-    CFG_WINDOWSY := 1\n-    CFG_INFO := $(info cfg: mingw-cross)\n-    CFG_GCCISH_CROSS := i586-mingw32msvc-\n-    ifdef CFG_VALGRIND\n-      CFG_VALGRIND += wine\n-    endif\n-\n-    CFG_GCCISH_CFLAGS := -march=i586\n-    CFG_GCCISH_PRE_LIB_FLAGS :=\n-    CFG_GCCISH_POST_LIB_FLAGS :=\n-    CFG_GCCISH_DEF_FLAG :=\n-    CFG_GCCISH_LINK_FLAGS := -shared\n-\n-    ifeq ($(CFG_CPUTYPE), x86_64)\n-      CFG_GCCISH_CFLAGS += -m32\n-      CFG_GCCISH_LINK_FLAGS += -m32\n-    endif\n-  endif\n-  ifdef CFG_VALGRIND\n-    CFG_VALGRIND += --error-exitcode=100 \\\n-                    --quiet \\\n-                    --suppressions=$(CFG_SRC_DIR)src/etc/x86.supp \\\n-                    $(OS_SUPP)\n-    ifdef CFG_ENABLE_HELGRIND\n-      CFG_VALGRIND += --tool=helgrind\n-    else\n-      CFG_VALGRIND += --tool=memcheck \\\n-                      --leak-check=full\n-    endif\n-  endif\n-endif\n-\n-ifdef CFG_WINDOWSY\n-  CFG_INFO := $(info cfg: windows-y environment)\n-\n-  CFG_EXE_SUFFIX := .exe\n-ifdef MSYSTEM\n-  CFG_LDPATH :=$(CFG_LDPATH):$$PATH\n-  CFG_RUN=PATH=\"$(CFG_LDPATH):$(1)\" $(2)\n-else\n-  CFG_LDPATH :=\n-  CFG_RUN=$(2)\n-endif\n-  CFG_RUN_TARG=$(call CFG_RUN,$(HLIB$(1)_H_$(CFG_HOST_TRIPLE)),$(2))\n-  CFG_RUN_TEST=$(call CFG_RUN,$(call CFG_TESTLIB,$(1),$(3)),$(1))\n-  CFG_LIBUV_LINK_FLAGS=-lWs2_32 -lpsapi -liphlpapi\n-\n-  ifndef CFG_ENABLE_MINGW_CROSS\n-    CFG_PATH_MUNGE := $(strip perl -i.bak -p             \\\n-                             -e 's@\\\\(\\S)@/\\1@go;'       \\\n-                             -e 's@^/([a-zA-Z])/@\\1:/@o;')\n-  endif\n endif\n \n CFG_INFO := $(info cfg: using $(CFG_C_COMPILER))\n@@ -279,24 +260,24 @@ define CFG_MAKE_CC\n \n   else\n   \n-  CFG_COMPILE_C_$(1) = $(CFG_GCCISH_CROSS_$(1))$$(CC)  \\\n+  CFG_COMPILE_C_$(1) = $(CFG_GCCISH_CROSS_PREFIX_$(1))$$(CC)  \\\n         $$(CFG_GCCISH_CFLAGS)      \\\n         $$(CFG_GCCISH_CFLAGS_$(1)) \\\n         $$(CFG_DEPEND_FLAGS)       \\\n         -c -o $$(1) $$(2)\n-  CFG_LINK_C_$(1) = $(CFG_GCCISH_CROSS_$(1))$$(CC) \\\n+  CFG_LINK_C_$(1) = $(CFG_GCCISH_CROSS_PREFIX_$(1))$$(CC) \\\n         $$(CFG_GCCISH_LINK_FLAGS) -o $$(1)          \\\n         $$(CFG_GCCISH_LINK_FLAGS_$(1)))             \\\n         $$(CFG_GCCISH_DEF_FLAG_$(1))$$(3) $$(2)     \\\n         $$(call CFG_INSTALL_NAME_$(1),$$(4))\n-  CFG_COMPILE_CXX_$(1) = $(CFG_GCCISH_CROSS_$(1))$$(CXX) \\\n+  CFG_COMPILE_CXX_$(1) = $(CFG_GCCISH_CROSS_PREFIX_$(1))$$(CXX) \\\n         $$(CFG_GCCISH_CFLAGS)      \\\n         $$(CFG_GCCISH_CXXFLAGS)    \\\n         $$(CFG_GCCISH_CFLAGS_$(1)) \\\n         $$(CFG_GCCISH_CXXFLAGS_$(1))    \\\n         $$(CFG_DEPEND_FLAGS)       \\\n         -c -o $$(1) $$(2)\n-  CFG_LINK_CXX_$(1) = $(CFG_GCCISH_CROSS_$(1))$$(CXX) \\\n+  CFG_LINK_CXX_$(1) = $(CFG_GCCISH_CROSS_PREFIX_$(1))$$(CXX) \\\n         $$(CFG_GCCISH_LINK_FLAGS) -o $$(1)             \\\n         $$(CFG_GCCISH_LINK_FLAGS_$(1))                 \\\n         $$(CFG_GCCISH_DEF_FLAG_$(1))$$(3) $$(2)        \\\n@@ -322,7 +303,7 @@ define CFG_MAKE_ASSEMBLER\n                     -o=$$(1)\n   else\n \n-  CFG_ASSEMBLE_$(1)=$(CFG_GCCISH_CROSS_$(1))$$(CPP) $$(CFG_DEPEND_FLAGS) $$(2) -c -o $$(1) \n+  CFG_ASSEMBLE_$(1)=$(CFG_GCCISH_CROSS_PREFIX_$(1))$$(CPP) $$(CFG_DEPEND_FLAGS) $$(2) -c -o $$(1) \n \n   endif\n "}, {"sha": "c7f316bcfc72d0a8eff55cab08b405af7ceeb5bf", "filename": "mk/pp.mk", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7714d52cd9381c8ba3257da124cd91ffadeda4d5/mk%2Fpp.mk", "raw_url": "https://github.com/rust-lang/rust/raw/7714d52cd9381c8ba3257da124cd91ffadeda4d5/mk%2Fpp.mk", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/mk%2Fpp.mk?ref=7714d52cd9381c8ba3257da124cd91ffadeda4d5", "patch": "@@ -29,7 +29,7 @@ endif\n reformat: $(SREQ1$(CFG_BUILD_TRIPLE))\n \t@$(call E, reformat [stage1]: $@)\n \tfor i in $(PP_INPUTS_FILTERED);  \\\n-    do $(call CFG_RUN_TARG,1,$(CFG_BUILD_TRIPLE)/stage1/rustc$(X)) \\\n+    do $(call CFG_RUN_TARG_$(CFG_BUILD_TRIPLE),1,$(CFG_BUILD_TRIPLE)/stage1/rustc$(X_$(CFG_BUILD_TRIPLE))) \\\n        --pretty normal $$i >$$i.tmp; \\\n     if [ $$? -ne 0 ]; \\\n         then echo failed to print $$i; rm $$i.tmp; \\"}, {"sha": "9af3e0b07bc1ec7b81b686d95895c130108b3bda", "filename": "mk/rt.mk", "status": "modified", "additions": 21, "deletions": 21, "changes": 42, "blob_url": "https://github.com/rust-lang/rust/blob/7714d52cd9381c8ba3257da124cd91ffadeda4d5/mk%2Frt.mk", "raw_url": "https://github.com/rust-lang/rust/raw/7714d52cd9381c8ba3257da124cd91ffadeda4d5/mk%2Frt.mk", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/mk%2Frt.mk?ref=7714d52cd9381c8ba3257da124cd91ffadeda4d5", "patch": "@@ -83,16 +83,20 @@ RUNTIME_S_$(1) := rt/arch/$$(HOST_$(1))/_context.S \\\n                   rt/arch/$$(HOST_$(1))/ccall.S \\\n                   rt/arch/$$(HOST_$(1))/record_sp.S\n \n-\n-ifeq ($$(HOST_$(1)), arm)\n+ifeq ($$(CFG_WINDOWSY_$(1)), 1)\n+  LIBUV_OSTYPE_$(1) := win\n   LIBUV_LIB_$(1) := rt/$(1)/libuv/libuv.a\n-else ifeq ($$(CFG_WINDOWSY), 1)\n+else ifeq ($(CFG_OSTYPE_$(1)), apple-darwin)\n+  LIBUV_OSTYPE_$(1) := mac\n   LIBUV_LIB_$(1) := rt/$(1)/libuv/libuv.a\n-else ifeq ($(CFG_OSTYPE), apple-darwin)\n+else ifeq ($(CFG_OSTYPE_$(1)), unknown-freebsd)\n+  LIBUV_OSTYPE_$(1) := unix/freebsd\n   LIBUV_LIB_$(1) := rt/$(1)/libuv/libuv.a\n-else ifeq ($(CFG_OSTYPE), unknown-freebsd)\n+else ifeq ($(CFG_OSTYPE_$(1)), unknown-android)\n+  LIBUV_OSTYPE_$(1) := unix/android\n   LIBUV_LIB_$(1) := rt/$(1)/libuv/libuv.a\n else\n+  LIBUV_OSTYPE_$(1) := unix/linux\n   LIBUV_LIB_$(1) := rt/$(1)/libuv/libuv.a\n endif\n \n@@ -136,7 +140,7 @@ rt/$(1)/$(CFG_RUNTIME_$(1)): $$(RUNTIME_OBJS_$(1)) $$(MKFILE_DEPS) \\\n \t@$$(call E, link: $$@)\n \t$$(Q)$$(call CFG_LINK_CXX_$(1),$$@, $$(RUNTIME_OBJS_$(1)) \\\n \t  $$(CFG_GCCISH_POST_LIB_FLAGS_$(1)) $$(RUNTIME_LIBS_$(1)) \\\n-\t  $$(CFG_LIBUV_LINK_FLAGS),$$(RUNTIME_DEF_$(1)),$$(CFG_RUNTIME_$(1)))\n+\t  $$(CFG_LIBUV_LINK_FLAGS_$(1)),$$(RUNTIME_DEF_$(1)),$$(CFG_RUNTIME_$(1)))\n \n # FIXME: For some reason libuv's makefiles can't figure out the\n # correct definition of CC on the mingw I'm using, so we are\n@@ -153,33 +157,31 @@ LIBUV_DEPS := $$(wildcard \\\n               $$(S)src/libuv/*/*/*/*)\n endif\n \n-ifdef CFG_WINDOWSY\n+ifdef CFG_WINDOWSY_$(1)\n $$(LIBUV_LIB_$(1)): $$(LIBUV_DEPS)\n \t$$(Q)$$(MAKE) -C $$(S)src/libuv/ \\\n \t\tbuilddir_name=\"$$(CFG_BUILD_DIR)/rt/$(1)/libuv\" \\\n \t\tOS=mingw \\\n \t\tV=$$(VERBOSE)\n-else\n-ifeq ($$(HOST_$(1)), arm)\n+else ifeq ($(CFG_OSTYPE_$(1)), unknown-android)\n $$(LIBUV_LIB_$(1)): $$(LIBUV_DEPS)\n \t$$(Q)$$(MAKE) -C $$(S)src/libuv/ \\\n \t\tCFLAGS=\"$$(LIBUV_FLAGS_$$(HOST_$(1))) $$(SNAP_DEFINES)\" \\\n \t\tLDFLAGS=\"$$(LIBUV_FLAGS_$$(HOST_$(1)))\" \\\n-\t\tCC=\"$$(CFG_GCCISH_CROSS_$(1))$$(CC)\" \\\n-\t\tCXX=\"$$(CFG_GCCISH_CROSS_$(1))$$(CXX)\" \\\n-\t\tAR=\"$$(CFG_CROSS_PREFIX_arm)$$(AR)\" \\\n+\t\tCC=\"$$(CFG_GCCISH_CROSS_PREFIX_$(1))$$(CC)\" \\\n+\t\tCXX=\"$$(CFG_GCCISH_CROSS_PREFIX_$(1))$$(CXX)\" \\\n+\t\tAR=\"$$(CFG_GCCISH_CROSS_PREFIX_$(1))$$(AR)\" \\\n \t\tBUILDTYPE=Release \\\n \t\tbuilddir_name=\"$$(CFG_BUILD_DIR)/rt/$(1)/libuv\" \\\n \t\thost=android OS=linux \\\n-        V=$$(VERBOSE)\n+\t\tV=$$(VERBOSE)\n else\n $$(LIBUV_LIB_$(1)): $$(LIBUV_DEPS)\n \t$$(Q)$$(MAKE) -C $$(S)src/libuv/ \\\n \t\tCFLAGS=\"$$(LIBUV_FLAGS_$$(HOST_$(1))) $$(SNAP_DEFINES)\" \\\n \t\tbuilddir_name=\"$$(CFG_BUILD_DIR)/rt/$(1)/libuv\" \\\n \t\tV=$$(VERBOSE)\n endif\n-endif\n \n \n # These could go in rt.mk or rustllvm.mk, they're needed for both.\n@@ -197,23 +199,21 @@ endif\n \t$$(Q)sed 's/.$$$$/&;/' $$< >> $$@\n \t$$(Q)echo \"};\" >> $$@\n \n+%.darwin.def:\t%.def.in $$(MKFILE_DEPS)\n+\t@$$(call E, def: $$@)\n+\t$$(Q)sed 's/^./_&/' $$< > $$@\n+\n %.android.def:  %.def.in $$(MKFILE_DEPS)\n \t@$$(call E, def: $$@)\n \t$$(Q)echo \"{\" > $$@\n \t$$(Q)sed 's/.$$$$/&;/' $$< >> $$@\n \t$$(Q)echo \"};\" >> $$@\n \n-%.darwin.def:\t%.def.in $$(MKFILE_DEPS)\n-\t@$$(call E, def: $$@)\n-\t$$(Q)sed 's/^./_&/' $$< > $$@\n-\n-ifdef CFG_WINDOWSY\n-%.def:\t%.def.in $$(MKFILE_DEPS)\n+%.mingw32.def:\t%.def.in $$(MKFILE_DEPS)\n \t@$$(call E, def: $$@)\n \t$$(Q)echo LIBRARY $$* > $$@\n \t$$(Q)echo EXPORTS >> $$@\n \t$$(Q)sed 's/^./    &/' $$< >> $$@\n-endif\n \n endef\n "}, {"sha": "f1ce4445c61fb6c16fd0c469806c232b727036e7", "filename": "mk/rustllvm.mk", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7714d52cd9381c8ba3257da124cd91ffadeda4d5/mk%2Frustllvm.mk", "raw_url": "https://github.com/rust-lang/rust/raw/7714d52cd9381c8ba3257da124cd91ffadeda4d5/mk%2Frustllvm.mk", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/mk%2Frustllvm.mk?ref=7714d52cd9381c8ba3257da124cd91ffadeda4d5", "patch": "@@ -17,7 +17,7 @@ define DEF_RUSTLLVM_TARGETS\n # FIXME: Lately, on windows, llvm-config --includedir is not enough\n # to find the llvm includes (probably because we're not actually installing\n # llvm, but using it straight out of the build directory)\n-ifdef CFG_WINDOWSY\n+ifdef CFG_WINDOWSY_$(1)\n LLVM_EXTRA_INCDIRS_$(1)= -iquote $(S)src/llvm/include \\\n                          -iquote llvm/$(1)/include\n endif"}, {"sha": "7b5cbef1d72c3a6a7b3adce5503b92320015cebf", "filename": "mk/stage0.mk", "status": "modified", "additions": 21, "deletions": 21, "changes": 42, "blob_url": "https://github.com/rust-lang/rust/blob/7714d52cd9381c8ba3257da124cd91ffadeda4d5/mk%2Fstage0.mk", "raw_url": "https://github.com/rust-lang/rust/raw/7714d52cd9381c8ba3257da124cd91ffadeda4d5/mk%2Fstage0.mk", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/mk%2Fstage0.mk?ref=7714d52cd9381c8ba3257da124cd91ffadeda4d5", "patch": "@@ -2,7 +2,7 @@\n \n \n \n-$(HBIN0_H_$(CFG_BUILD_TRIPLE))/rustc$(X):\t\t\\\n+$(HBIN0_H_$(CFG_BUILD_TRIPLE))/rustc$(X_$(CFG_BUILD_TRIPLE)):\t\t\\\n \t\t$(S)src/snapshots.txt\t\t\t\t\t\\\n \t\t$(S)src/etc/get-snapshot.py $(MKFILE_DEPS)\n \t@$(call E, fetch: $@)\n@@ -22,23 +22,23 @@ endif\n # Host libs will be extracted by the above rule\n \n $(HLIB0_H_$(CFG_BUILD_TRIPLE))/$(CFG_RUNTIME_$(CFG_BUILD_TRIPLE)): \\\n-\t\t$(HBIN0_H_$(CFG_BUILD_TRIPLE))/rustc$(X)\n+\t\t$(HBIN0_H_$(CFG_BUILD_TRIPLE))/rustc$(X_$(CFG_BUILD_TRIPLE))\n \t$(Q)touch $@\n \n $(HLIB0_H_$(CFG_BUILD_TRIPLE))/$(CFG_CORELIB_$(CFG_BUILD_TRIPLE)): \\\n-\t\t$(HBIN0_H_$(CFG_BUILD_TRIPLE))/rustc$(X)\n+\t\t$(HBIN0_H_$(CFG_BUILD_TRIPLE))/rustc$(X_$(CFG_BUILD_TRIPLE))\n \t$(Q)touch $@\n \n $(HLIB0_H_$(CFG_BUILD_TRIPLE))/$(CFG_STDLIB_$(CFG_BUILD_TRIPLE)): \\\n-\t\t$(HBIN0_H_$(CFG_BUILD_TRIPLE))/rustc$(X)\n+\t\t$(HBIN0_H_$(CFG_BUILD_TRIPLE))/rustc$(X_$(CFG_BUILD_TRIPLE))\n \t$(Q)touch $@\n \n $(HLIB0_H_$(CFG_BUILD_TRIPLE))/$(CFG_LIBRUSTC_$(CFG_BUILD_TRIPLE)): \\\n-\t\t$(HBIN0_H_$(CFG_BUILD_TRIPLE))/rustc$(X)\n+\t\t$(HBIN0_H_$(CFG_BUILD_TRIPLE))/rustc$(X_$(CFG_BUILD_TRIPLE))\n \t$(Q)touch $@\n \n $(HLIB0_H_$(CFG_BUILD_TRIPLE))/$(CFG_RUSTLLVM_$(CFG_BUILD_TRIPLE)): \\\n-\t\t$(HBIN0_H_$(CFG_BUILD_TRIPLE))/rustc$(X)\n+\t\t$(HBIN0_H_$(CFG_BUILD_TRIPLE))/rustc$(X_$(CFG_BUILD_TRIPLE))\n \t$(Q)touch $@\n \n # For other targets, let the host build the target:\n@@ -48,33 +48,33 @@ define BOOTSTRAP_STAGE0\n   # $(2) stage to bootstrap from\n   # $(3) target to bootstrap from\n \n-$$(HBIN0_H_$(1))/rustc$$(X):\t\t\t\t\t\t\t\t\\\n-\t\t$$(TBIN$(2)_T_$(1)_H_$(3))/rustc$$(X)\n+$$(HBIN0_H_$(1))/rustc$$(X_$(1)):\t\t\t\t\t\t\t\t\\\n+\t\t$$(TBIN$(2)_T_$(1)_H_$(3))/rustc$$(X_$(1))\n \t@$$(call E, cp: $$@)\n \t$$(Q)cp $$< $$@\n \n-$$(HLIB0_H_$(1))/$(CFG_RUNTIME_$(4)): \\\n-\t\t$$(TLIB$(2)_T_$(1)_H_$(3))/$(CFG_RUNTIME_$(4))\n+$$(HLIB0_H_$(1))/$(CFG_RUNTIME_$(1)): \\\n+\t\t$$(TLIB$(2)_T_$(1)_H_$(3))/$(CFG_RUNTIME_$(1))\n \t@$$(call E, cp: $$@)\n \t$$(Q)cp $$< $$@\n \n-$$(HLIB0_H_$(1))/$(CFG_CORELIB_$(4)): \\\n-\t\t$$(TLIB$(2)_T_$(1)_H_$(3))/$(CFG_CORELIB_$(4))\n+$$(HLIB0_H_$(1))/$(CFG_CORELIB_$(1)): \\\n+\t\t$$(TLIB$(2)_T_$(1)_H_$(3))/$(CFG_CORELIB_$(1))\n \t@$$(call E, cp: $$@)\n-\t$$(Q)cp $$(TLIB$(2)_T_$(1)_H_$(3))/$(CORELIB_GLOB_$(4)) $$@\n+\t$$(Q)cp $$(TLIB$(2)_T_$(1)_H_$(3))/$(CORELIB_GLOB_$(1)) $$@\n \n-$$(HLIB0_H_$(1))/$(CFG_STDLIB_$(4)): \\\n-\t\t$$(TLIB$(2)_T_$(1)_H_$(3))/$(CFG_STDLIB_$(4))\n+$$(HLIB0_H_$(1))/$(CFG_STDLIB_$(1)): \\\n+\t\t$$(TLIB$(2)_T_$(1)_H_$(3))/$(CFG_STDLIB_$(1))\n \t@$$(call E, cp: $$@)\n-\t$$(Q)cp $$(TLIB$(2)_T_$(1)_H_$(3))/$(STDLIB_GLOB_$(4)) $$@\n+\t$$(Q)cp $$(TLIB$(2)_T_$(1)_H_$(3))/$(STDLIB_GLOB_$(1)) $$@\n \n-$$(HLIB0_H_$(1))/$(CFG_LIBRUSTC_$(4)): \\\n-\t\t$$(TLIB$(2)_T_$(1)_H_$(3))/$(CFG_LIBRUSTC_$(4))\n+$$(HLIB0_H_$(1))/$(CFG_LIBRUSTC_$(1)): \\\n+\t\t$$(TLIB$(2)_T_$(1)_H_$(3))/$(CFG_LIBRUSTC_$(1))\n \t@$$(call E, cp: $$@)\n-\t$$(Q)cp $$(TLIB$(2)_T_$(1)_H_$(3))/$(LIBRUSTC_GLOB_$(4)) $$@\n+\t$$(Q)cp $$(TLIB$(2)_T_$(1)_H_$(3))/$(LIBRUSTC_GLOB_$(1)) $$@\n \n-$$(HLIB0_H_$(1))/$(CFG_RUSTLLVM_$(4)): \\\n-\t\t$$(TLIB$(2)_T_$(1)_H_$(3))/$(CFG_RUSTLLVM_$(4))\n+$$(HLIB0_H_$(1))/$(CFG_RUSTLLVM_$(1)): \\\n+\t\t$$(TLIB$(2)_T_$(1)_H_$(3))/$(CFG_RUSTLLVM_$(1))\n \t@$$(call E, cp: $$@)\n \t$$(Q)cp $$< $$@\n "}, {"sha": "fba1a6e0ee59109672fc58b5a2043664380533c8", "filename": "mk/target.mk", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7714d52cd9381c8ba3257da124cd91ffadeda4d5/mk%2Ftarget.mk", "raw_url": "https://github.com/rust-lang/rust/raw/7714d52cd9381c8ba3257da124cd91ffadeda4d5/mk%2Ftarget.mk", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/mk%2Ftarget.mk?ref=7714d52cd9381c8ba3257da124cd91ffadeda4d5", "patch": "@@ -63,7 +63,7 @@ $$(TLIB$(1)_T_$(2)_H_$(3))/$(CFG_LIBRUSTC_$(3)):\t\t\\\n \t@$$(call E, compile_and_link: $$@)\n \t$$(STAGE$(1)_T_$(2)_H_$(3)) -o $$@ $$< && touch $$@\n \n-$$(TBIN$(1)_T_$(2)_H_$(3))/rustc$$(X):\t\t\t\\\n+$$(TBIN$(1)_T_$(2)_H_$(3))/rustc$$(X_$(3)):\t\t\t\\\n \t\t$$(DRIVER_CRATE) \t\t\t\t\t\t\t\\\n \t\t$$(TLIB$(1)_T_$(2)_H_$(3))/$(CFG_LIBRUSTC_$(3))\n \t@$$(call E, compile_and_link: $$@)"}, {"sha": "c1852f52724fa2bdd03f13f9940678aff71510ca", "filename": "mk/tests.mk", "status": "modified", "additions": 56, "deletions": 30, "changes": 86, "blob_url": "https://github.com/rust-lang/rust/blob/7714d52cd9381c8ba3257da124cd91ffadeda4d5/mk%2Ftests.mk", "raw_url": "https://github.com/rust-lang/rust/raw/7714d52cd9381c8ba3257da124cd91ffadeda4d5/mk%2Ftests.mk", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/mk%2Ftests.mk?ref=7714d52cd9381c8ba3257da124cd91ffadeda4d5", "patch": "@@ -50,13 +50,6 @@ ifdef VERBOSE\n   CTEST_TESTARGS += --verbose\n endif\n \n-# Run the compiletest runner itself under valgrind\n-ifdef CTEST_VALGRIND\n-  CFG_RUN_CTEST=$(call CFG_RUN_TEST,$(2),$(3))\n-else\n-  CFG_RUN_CTEST=$(call CFG_RUN,$(TLIB$(1)_T_$(3)_H_$(3)),$(2))\n-endif\n-\n # If we're running perf then set this environment variable\n # to put the benchmarks into 'hard mode'\n ifeq ($(MAKECMDGOALS),perf)\n@@ -67,6 +60,39 @@ endif\n TEST_LOG_FILE=tmp/check-stage$(1)-T-$(2)-H-$(3)-$(4).log\n TEST_OK_FILE=tmp/check-stage$(1)-T-$(2)-H-$(3)-$(4).ok\n \n+define DEF_TARGET_COMMANDS\n+\n+ifdef CFG_UNIXY_$(1)\n+  CFG_RUN_TEST_$(1)=$$(call CFG_RUN_$(1),,$$(CFG_VALGRIND) $$(1))\n+endif\n+\n+ifdef CFG_WINDOWSY_$(1)\n+  CFG_TESTLIB_$(1)=$$(CFG_BUILD_DIR)/$$(2)/$$(strip \\\n+   $$(if $$(findstring stage0,$$(1)), \\\n+       stage0/$$(CFG_LIBDIR), \\\n+      $$(if $$(findstring stage1,$$(1)), \\\n+           stage1/$$(CFG_LIBDIR), \\\n+          $$(if $$(findstring stage2,$$(1)), \\\n+               stage2/$$(CFG_LIBDIR), \\\n+               $$(if $$(findstring stage3,$$(1)), \\\n+                    stage3/$$(CFG_LIBDIR), \\\n+               )))))/rustc/$$(CFG_BUILD_TRIPLE)/$$(CFG_LIBDIR)\n+  CFG_RUN_TEST_$(1)=$$(call CFG_RUN_$(1),$$(call CFG_TESTLIB_$(1),$$(1),$$(3)),$$(1))\n+endif\n+\n+# Run the compiletest runner itself under valgrind\n+ifdef CTEST_VALGRIND\n+CFG_RUN_CTEST_$(1)=$$(call CFG_RUN_TEST_$$(CFG_BUILD_TRIPLE),$$(2),$$(3))\n+else\n+CFG_RUN_CTEST_$(1)=$$(call CFG_RUN_$$(CFG_BUILD_TRIPLE),$$(TLIB$$(1)_T_$$(3)_H_$$(3)),$$(2))\n+endif\n+\n+endef\n+\n+$(foreach target,$(CFG_TARGET_TRIPLES), \\\n+  $(eval $(call DEF_TARGET_COMMANDS,$(target))))\n+\n+\n ######################################################################\n # Main test targets\n ######################################################################\n@@ -218,50 +244,50 @@ $(foreach host,$(CFG_HOST_TRIPLES), \\\n \n define TEST_RUNNER\n \n-$(3)/test/coretest.stage$(1)-$(2)$$(X):\t\t\t\\\n+$(3)/test/coretest.stage$(1)-$(2)$$(X_$(2)):\t\t\t\\\n \t\t$$(CORELIB_CRATE) $$(CORELIB_INPUTS)\t\\\n \t\t$$(TLIB$(1)_T_$(2)_H_$(3))/$$(CFG_STDLIB_$(2))\n \t@$$(call E, compile_and_link: $$@)\n \t$$(STAGE$(1)_T_$(2)_H_$(3)) -o $$@ $$< --test\n \n-$(3)/test/stdtest.stage$(1)-$(2)$$(X):\t\t\t\\\n+$(3)/test/stdtest.stage$(1)-$(2)$$(X_$(2)):\t\t\t\\\n \t\t$$(STDLIB_CRATE) $$(STDLIB_INPUTS)\t\\\n \t\t$$(TLIB$(1)_T_$(2)_H_$(3))/$$(CFG_STDLIB_$(2))\n \t@$$(call E, compile_and_link: $$@)\n \t$$(STAGE$(1)_T_$(2)_H_$(3)) -o $$@ $$< --test\n \n-$(3)/test/syntaxtest.stage$(1)-$(2)$$(X):\t\t\t\\\n+$(3)/test/syntaxtest.stage$(1)-$(2)$$(X_$(2)):\t\t\t\\\n \t\t$$(LIBSYNTAX_CRATE) $$(LIBSYNTAX_INPUTS)\t\\\n \t\t$$(TLIB$(1)_T_$(2)_H_$(3))/$$(CFG_STDLIB_$(2))\n \t@$$(call E, compile_and_link: $$@)\n \t$$(STAGE$(1)_T_$(2)_H_$(3)) -o $$@ $$< --test\n \n-$(3)/test/rustctest.stage$(1)-$(2)$$(X):\t\t\t\t\t\\\n+$(3)/test/rustctest.stage$(1)-$(2)$$(X_$(2)):\t\t\t\t\t\\\n \t\t$$(COMPILER_CRATE) $$(COMPILER_INPUTS) \\\n \t\t$$(TLIB$(1)_T_$(2)_H_$(3))/$$(CFG_RUSTLLVM_$(2)) \\\n                 $$(TLIB$(1)_T_$(2)_H_$(3))/$$(CFG_LIBSYNTAX_$(2))\n \t@$$(call E, compile_and_link: $$@)\n \t$$(STAGE$(1)_T_$(2)_H_$(3)) -o $$@ $$< --test\n \n-$(3)/test/rustpkgtest.stage$(1)-$(2)$$(X):\t\t\t\t\t\\\n+$(3)/test/rustpkgtest.stage$(1)-$(2)$$(X_$(2)):\t\t\t\t\t\\\n \t\t$$(RUSTPKG_LIB) $$(RUSTPKG_INPUTS)\t\t\\\n \t\t$$(TLIB$(1)_T_$(2)_H_$(3))/$$(CFG_LIBRUSTC_$(2))\n \t@$$(call E, compile_and_link: $$@)\n \t$$(STAGE$(1)_T_$(2)_H_$(3)) -o $$@ $$< --test\n \n-$(3)/test/rustitest.stage$(1)-$(2)$$(X):\t\t\t\t\t\\\n+$(3)/test/rustitest.stage$(1)-$(2)$$(X_$(2)):\t\t\t\t\t\\\n \t\t$$(RUSTI_LIB) $$(RUSTI_INPUTS)\t\t\\\n \t\t$$(TLIB$(1)_T_$(2)_H_$(3))/$$(CFG_LIBRUSTC_$(2))\n \t@$$(call E, compile_and_link: $$@)\n \t$$(STAGE$(1)_T_$(2)_H_$(3)) -o $$@ $$< --test\n \n-$(3)/test/rusttest.stage$(1)-$(2)$$(X):\t\t\t\t\t\\\n+$(3)/test/rusttest.stage$(1)-$(2)$$(X_$(2)):\t\t\t\t\t\\\n \t\t$$(RUST_LIB) $$(RUST_INPUTS)\t\t\\\n \t\t$$(TLIB$(1)_T_$(2)_H_$(3))/$$(CFG_LIBRUSTC_$(2))\n \t@$$(call E, compile_and_link: $$@)\n \t$$(STAGE$(1)_T_$(2)_H_$(3)) -o $$@ $$< --test\n \n-$(3)/test/rustdoctest.stage$(1)-$(2)$$(X):\t\t\t\t\t\\\n+$(3)/test/rustdoctest.stage$(1)-$(2)$$(X_$(2)):\t\t\t\t\t\\\n \t\t$$(RUSTDOC_LIB) $$(RUSTDOC_INPUTS)\t\t\\\n \t\t$$(TLIB$(1)_T_$(2)_H_$(3))/$$(CFG_LIBRUSTC_$(2))\n \t@$$(call E, compile_and_link: $$@)\n@@ -278,9 +304,9 @@ define DEF_TEST_CRATE_RULES\n check-stage$(1)-T-$(2)-H-$(3)-$(4)-exec: $$(call TEST_OK_FILE,$(1),$(2),$(3),$(4))\n \n $$(call TEST_OK_FILE,$(1),$(2),$(3),$(4)): \\\n-\t\t$(3)/test/$(4)test.stage$(1)-$(2)$$(X)\n+\t\t$(3)/test/$(4)test.stage$(1)-$(2)$$(X_$(2))\n \t@$$(call E, run: $$<)\n-\t$$(Q)$$(call CFG_RUN_TEST,$$<,$(2),$(3)) $$(TESTARGS)\t\\\n+\t$$(Q)$$(call CFG_RUN_TEST_$(2),$$<,$(2),$(3)) $$(TESTARGS)\t\\\n \t--logfile $$(call TEST_LOG_FILE,$(1),$(2),$(3),$(4)) \\\n \t&& touch $$@\n endef\n@@ -371,15 +397,15 @@ define DEF_CTEST_VARS\n \n # Prerequisites for compiletest tests\n TEST_SREQ$(1)_T_$(2)_H_$(3) = \\\n-\t$$(HBIN$(1)_H_$(3))/compiletest$$(X) \\\n+\t$$(HBIN$(1)_H_$(3))/compiletest$$(X_$(3)) \\\n \t$$(SREQ$(1)_T_$(2)_H_$(3))\n \n # Rules for the cfail/rfail/rpass/bench/perf test runner\n \n CTEST_COMMON_ARGS$(1)-T-$(2)-H-$(3) :=\t\t\t\t\t\t\\\n \t\t--compile-lib-path $$(HLIB$(1)_H_$(3))\t\t\t\t\\\n         --run-lib-path $$(TLIB$(1)_T_$(2)_H_$(3))\t\t\t\\\n-        --rustc-path $$(HBIN$(1)_H_$(3))/rustc$$(X)\t\t\t\\\n+        --rustc-path $$(HBIN$(1)_H_$(3))/rustc$$(X_$(3))\t\t\t\\\n         --aux-base $$(S)src/test/auxiliary/                 \\\n         --stage-id stage$(1)-$(2)\t\t\t\t\t\t\t\\\n        --rustcflags \"$$(CFG_RUSTC_FLAGS) --target=$(2)\"\t\\\n@@ -417,7 +443,7 @@ $$(call TEST_OK_FILE,$(1),$(2),$(3),$(4)): \\\n \t\t$$(TEST_SREQ$(1)_T_$(2)_H_$(3)) \\\n                 $$(CTEST_DEPS_$(4)_$(1)-T-$(2)-H-$(3))\n \t@$$(call E, run $(4): $$<)\n-\t$$(Q)$$(call CFG_RUN_CTEST,$(1),$$<,$(3)) \\\n+\t$$(Q)$$(call CFG_RUN_CTEST_$(2),$(1),$$<,$(3)) \\\n \t\t$$(CTEST_ARGS$(1)-T-$(2)-H-$(3)-$(4)) \\\n \t\t--logfile $$(call TEST_LOG_FILE,$(1),$(2),$(3),$(4)) \\\n                 && touch $$@\n@@ -469,7 +495,7 @@ $$(call TEST_OK_FILE,$(1),$(2),$(3),$(4)): \\\n \t        $$(TEST_SREQ$(1)_T_$(2)_H_$(3))\t\t\\\n \t        $$(PRETTY_DEPS_$(4))\n \t@$$(call E, run pretty-rpass: $$<)\n-\t$$(Q)$$(call CFG_RUN_CTEST,$(1),$$<,$(3)) \\\n+\t$$(Q)$$(call CFG_RUN_CTEST_$(2),$(1),$$<,$(3)) \\\n \t\t$$(PRETTY_ARGS$(1)-T-$(2)-H-$(3)-$(4)) \\\n \t\t--logfile $$(call TEST_LOG_FILE,$(1),$(2),$(3),$(4)) \\\n                 && touch $$@\n@@ -496,7 +522,7 @@ $$(call TEST_OK_FILE,$(1),$(2),$(3),doc-$(4)): \\\n \t        $$(TEST_SREQ$(1)_T_$(2)_H_$(3))\t\t\\\n                 doc-$(4)-extract$(3)\n \t@$$(call E, run doc-$(4): $$<)\n-\t$$(Q)$$(call CFG_RUN_CTEST,$(1),$$<,$(3)) \\\n+\t$$(Q)$$(call CFG_RUN_CTEST_$(2),$(1),$$<,$(3)) \\\n                 $$(DOC_TEST_ARGS$(1)-T-$(2)-H-$(3)-doc-$(4)) \\\n \t\t--logfile $$(call TEST_LOG_FILE,$(1),$(2),$(3),doc-$(4)) \\\n                 && touch $$@\n@@ -575,7 +601,7 @@ $(foreach stage,$(STAGES), \\\n \n define DEF_CHECK_FOR_STAGE\n check-stage$(1): check-stage$(1)-H-$$(CFG_BUILD_TRIPLE)\n-check-stage$(1)-H-all: $$(foreach target,$$(CFG_HOST_TRIPLES), \\\n+check-stage$(1)-H-all: $$(foreach target,$$(CFG_TARGET_TRIPLES), \\\n                            check-stage$(1)-H-$$(target))\n endef\n \n@@ -584,7 +610,7 @@ $(foreach stage,$(STAGES), \\\n \n define DEF_CHECK_FOR_STAGE_AND_GROUP\n check-stage$(1)-$(2): check-stage$(1)-H-$$(CFG_BUILD_TRIPLE)-$(2)\n-check-stage$(1)-H-all-$(2): $$(foreach target,$$(CFG_HOST_TRIPLES), \\\n+check-stage$(1)-H-all-$(2): $$(foreach target,$$(CFG_TARGET_TRIPLES), \\\n                                check-stage$(1)-H-$$(target)-$(2))\n endef\n \n@@ -594,7 +620,7 @@ $(foreach stage,$(STAGES), \\\n \n \n define DEF_CHECK_FOR_STAGE_AND_HOSTS\n-check-stage$(1)-H-$(2): $$(foreach target,$$(CFG_HOST_TRIPLES), \\\n+check-stage$(1)-H-$(2): $$(foreach target,$$(CFG_TARGET_TRIPLES), \\\n                            check-stage$(1)-T-$$(target)-H-$(2))\n endef\n \n@@ -603,7 +629,7 @@ $(foreach stage,$(STAGES), \\\n   $(eval $(call DEF_CHECK_FOR_STAGE_AND_HOSTS,$(stage),$(host)))))\n \n define DEF_CHECK_FOR_STAGE_AND_HOSTS_AND_GROUP\n-check-stage$(1)-H-$(2)-$(3): $$(foreach target,$$(CFG_HOST_TRIPLES), \\\n+check-stage$(1)-H-$(2)-$(3): $$(foreach target,$$(CFG_TARGET_TRIPLES), \\\n                                 check-stage$(1)-T-$$(target)-H-$(2)-$(3))\n endef\n \n@@ -617,7 +643,7 @@ $(foreach stage,$(STAGES), \\\n ######################################################################\n \n FT := run_pass_stage2\n-FT_LIB := $(call CFG_LIB_NAME,$(FT))\n+FT_LIB := $(call CFG_LIB_NAME_$(CFG_BUILD_TRIPLE),$(FT))\n FT_DRIVER := $(FT)_driver\n \n GENERATED += tmp/$(FT).rc tmp/$(FT_DRIVER).rs\n@@ -639,17 +665,17 @@ $$(TLIB2_T_$(2)_H_$(3))/$$(FT_LIB): \\\n \t@$$(call E, compile_and_link: $$@)\n \t$$(STAGE2_T_$(2)_H_$(3)) --lib -o $$@ $$<\n \n-$(3)/test/$$(FT_DRIVER)-$(2)$$(X): \\\n+$(3)/test/$$(FT_DRIVER)-$(2)$$(X_$(2)): \\\n \t\ttmp/$$(FT_DRIVER).rs \\\n \t\t$$(TLIB2_T_$(2)_H_$(3))/$$(FT_LIB) \\\n \t\t$$(SREQ2_T_$(2)_H_$(3))\n \t@$$(call E, compile_and_link: $$@ $$<)\n \t$$(STAGE2_T_$(2)_H_$(3)) -o $$@ $$<\n \n $(3)/test/$$(FT_DRIVER)-$(2).out: \\\n-\t\t$(3)/test/$$(FT_DRIVER)-$(2)$$(X) \\\n+\t\t$(3)/test/$$(FT_DRIVER)-$(2)$$(X_$(2)) \\\n \t\t$$(SREQ2_T_$(2)_H_$(3))\n-\t$$(Q)$$(call CFG_RUN_TEST,$$<,$(2),$(3)) \\\n+\t$$(Q)$$(call CFG_RUN_TEST_$(2),$$<,$(2),$(3)) \\\n \t--logfile tmp/$$(FT_DRIVER)-$(2).log\n \n check-fast-T-$(2)-H-$(3):     \t\t\t\\"}, {"sha": "f2bc23633aeb51a26152695ba1f704c9d1c319b1", "filename": "mk/tools.mk", "status": "modified", "additions": 75, "deletions": 75, "changes": 150, "blob_url": "https://github.com/rust-lang/rust/blob/7714d52cd9381c8ba3257da124cd91ffadeda4d5/mk%2Ftools.mk", "raw_url": "https://github.com/rust-lang/rust/raw/7714d52cd9381c8ba3257da124cd91ffadeda4d5/mk%2Ftools.mk", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/mk%2Ftools.mk?ref=7714d52cd9381c8ba3257da124cd91ffadeda4d5", "patch": "@@ -38,86 +38,86 @@ RUST_INPUTS := $(wildcard $(S)src/librust/*.rs)\n # have tools that need to built for other targets.\n define TOOLS_STAGE_N_TARGET\n \n-$$(TLIB$(1)_T_$(4)_H_$(3))/$(CFG_LIBFUZZER_$(3)):          \\\n+$$(TLIB$(1)_T_$(4)_H_$(3))/$(CFG_LIBFUZZER_$(4)):          \\\n \t\t$$(FUZZER_LIB) $$(FUZZER_INPUTS)\t\t\t\\\n \t\t$$(TSREQ$(1)_T_$(4)_H_$(3))\t\t\t\t\t\\\n-\t\t$$(TLIB$(1)_T_$(4)_H_$(3))/$(CFG_CORELIB_$(3))\t\\\n-\t\t$$(TLIB$(1)_T_$(4)_H_$(3))/$(CFG_STDLIB_$(3))\t\\\n-\t\t$$(TLIB$(1)_T_$(4)_H_$(3))/$(CFG_LIBRUSTC_$(3))\n+\t\t$$(TLIB$(1)_T_$(4)_H_$(3))/$(CFG_CORELIB_$(4))\t\\\n+\t\t$$(TLIB$(1)_T_$(4)_H_$(3))/$(CFG_STDLIB_$(4))\t\\\n+\t\t$$(TLIB$(1)_T_$(4)_H_$(3))/$(CFG_LIBRUSTC_$(4))\n \t@$$(call E, compile_and_link: $$@)\n \t$$(STAGE$(1)_T_$(4)_H_$(3)) -o $$@ $$< && touch $$@\n \n-$$(TBIN$(1)_T_$(4)_H_$(3))/fuzzer$$(X):\t\t\t\t\\\n+$$(TBIN$(1)_T_$(4)_H_$(3))/fuzzer$$(X_$(4)):\t\t\t\t\\\n \t\t$$(DRIVER_CRATE)\t\t\t\t\t\t\t\t\\\n-\t\t$$(TLIB$(1)_T_$(4)_H_$(3))/$(CFG_LIBFUZZER_$(3))\n+\t\t$$(TLIB$(1)_T_$(4)_H_$(3))/$(CFG_LIBFUZZER_$(4))\n \t@$$(call E, compile_and_link: $$@)\n \t$$(STAGE$(1)_T_$(4)_H_$(3)) --cfg fuzzer -o $$@ $$<\n \n-$$(TBIN$(1)_T_$(4)_H_$(3))/compiletest$$(X):\t\t\t\\\n+$$(TBIN$(1)_T_$(4)_H_$(3))/compiletest$$(X_$(4)):\t\t\t\\\n \t\t$$(COMPILETEST_CRATE) $$(COMPILETEST_INPUTS)\t\\\n \t\t$$(TSREQ$(1)_T_$(4)_H_$(3))\t\t\t\t\t\t\\\n-\t\t$$(TLIB$(1)_T_$(4)_H_$(3))/$(CFG_CORELIB_$(3))      \\\n-\t\t$$(TLIB$(1)_T_$(4)_H_$(3))/$(CFG_STDLIB_$(3))\n+\t\t$$(TLIB$(1)_T_$(4)_H_$(3))/$(CFG_CORELIB_$(4))      \\\n+\t\t$$(TLIB$(1)_T_$(4)_H_$(3))/$(CFG_STDLIB_$(4))\n \t@$$(call E, compile_and_link: $$@)\n \t$$(STAGE$(1)_T_$(4)_H_$(3)) -o $$@ $$<\n \n-$$(TLIB$(1)_T_$(4)_H_$(3))/$(CFG_LIBRUSTPKG_$(3)):\t\t\\\n+$$(TLIB$(1)_T_$(4)_H_$(3))/$(CFG_LIBRUSTPKG_$(4)):\t\t\\\n \t\t$$(RUSTPKG_LIB) $$(RUSTPKG_INPUTS)\t\t    \\\n \t\t$$(TSREQ$(1)_T_$(4)_H_$(3))\t\t\t\t\t\\\n-\t\t$$(TLIB$(1)_T_$(4)_H_$(3))/$(CFG_CORELIB_$(3))\t\\\n-\t\t$$(TLIB$(1)_T_$(4)_H_$(3))/$(CFG_STDLIB_$(3))\t\\\n-\t\t$$(TLIB$(1)_T_$(4)_H_$(3))/$(CFG_LIBRUSTC_$(3))\n+\t\t$$(TLIB$(1)_T_$(4)_H_$(3))/$(CFG_CORELIB_$(4))\t\\\n+\t\t$$(TLIB$(1)_T_$(4)_H_$(3))/$(CFG_STDLIB_$(4))\t\\\n+\t\t$$(TLIB$(1)_T_$(4)_H_$(3))/$(CFG_LIBRUSTC_$(4))\n \t@$$(call E, compile_and_link: $$@)\n \t$$(STAGE$(1)_T_$(4)_H_$(3)) -o $$@ $$< && touch $$@\n \n-$$(TBIN$(1)_T_$(4)_H_$(3))/rustpkg$$(X):\t\t\t\t\\\n+$$(TBIN$(1)_T_$(4)_H_$(3))/rustpkg$$(X_$(4)):\t\t\t\t\\\n \t\t$$(DRIVER_CRATE) \t\t\t\t\t\t\t\\\n-\t\t$$(TLIB$(1)_T_$(4)_H_$(3))/$(CFG_LIBRUSTPKG_$(3))\n+\t\t$$(TLIB$(1)_T_$(4)_H_$(3))/$(CFG_LIBRUSTPKG_$(4))\n \t@$$(call E, compile_and_link: $$@)\n \t$$(STAGE$(1)_T_$(4)_H_$(3)) --cfg rustpkg -o $$@ $$<\n \n-$$(TLIB$(1)_T_$(4)_H_$(3))/$(CFG_LIBRUSTDOC_$(3)):\t\t\\\n+$$(TLIB$(1)_T_$(4)_H_$(3))/$(CFG_LIBRUSTDOC_$(4)):\t\t\\\n \t\t$$(RUSTDOC_LIB) $$(RUSTDOC_INPUTS)\t\t\t\\\n \t\t$$(TSREQ$(1)_T_$(4)_H_$(3))\t\t\t\t\t\\\n-\t\t$$(TLIB$(1)_T_$(4)_H_$(3))/$(CFG_CORELIB_$(3))\t\\\n-\t\t$$(TLIB$(1)_T_$(4)_H_$(3))/$(CFG_STDLIB_$(3))\t\\\n-\t\t$$(TLIB$(1)_T_$(4)_H_$(3))/$(CFG_LIBRUSTC_$(3))\n+\t\t$$(TLIB$(1)_T_$(4)_H_$(3))/$(CFG_CORELIB_$(4))\t\\\n+\t\t$$(TLIB$(1)_T_$(4)_H_$(3))/$(CFG_STDLIB_$(4))\t\\\n+\t\t$$(TLIB$(1)_T_$(4)_H_$(3))/$(CFG_LIBRUSTC_$(4))\n \t@$$(call E, compile_and_link: $$@)\n \t$$(STAGE$(1)_T_$(4)_H_$(3)) -o $$@ $$< && touch $$@\n \n-$$(TBIN$(1)_T_$(4)_H_$(3))/rustdoc$$(X):\t\t\t\\\n+$$(TBIN$(1)_T_$(4)_H_$(3))/rustdoc$$(X_$(4)):\t\t\t\\\n \t\t$$(DRIVER_CRATE) \t\t\t\t\t\t\t\\\n-\t\t$$(TLIB$(1)_T_$(4)_H_$(3))/$(CFG_LIBRUSTDOC_$(3))\n+\t\t$$(TLIB$(1)_T_$(4)_H_$(3))/$(CFG_LIBRUSTDOC_$(4))\n \t@$$(call E, compile_and_link: $$@)\n \t$$(STAGE$(1)_T_$(4)_H_$(3)) --cfg rustdoc -o $$@ $$<\n \n-$$(TLIB$(1)_T_$(4)_H_$(3))/$(CFG_LIBRUSTI_$(3)):\t\t\\\n+$$(TLIB$(1)_T_$(4)_H_$(3))/$(CFG_LIBRUSTI_$(4)):\t\t\\\n \t\t$$(RUSTI_LIB) $$(RUSTI_INPUTS)\t\t\t\\\n \t\t$$(TSREQ$(1)_T_$(4)_H_$(3))\t\t\t\t\t\\\n-\t\t$$(TLIB$(1)_T_$(4)_H_$(3))/$(CFG_CORELIB_$(3))\t\\\n-\t\t$$(TLIB$(1)_T_$(4)_H_$(3))/$(CFG_STDLIB_$(3))\t\\\n-\t\t$$(TLIB$(1)_T_$(4)_H_$(3))/$(CFG_LIBRUSTC_$(3))\n+\t\t$$(TLIB$(1)_T_$(4)_H_$(3))/$(CFG_CORELIB_$(4))\t\\\n+\t\t$$(TLIB$(1)_T_$(4)_H_$(3))/$(CFG_STDLIB_$(4))\t\\\n+\t\t$$(TLIB$(1)_T_$(4)_H_$(3))/$(CFG_LIBRUSTC_$(4))\n \t@$$(call E, compile_and_link: $$@)\n \t$$(STAGE$(1)_T_$(4)_H_$(3)) -o $$@ $$< && touch $$@\n \n-$$(TBIN$(1)_T_$(4)_H_$(3))/rusti$$(X):\t\t\t\\\n+$$(TBIN$(1)_T_$(4)_H_$(3))/rusti$$(X_$(4)):\t\t\t\\\n \t\t$$(DRIVER_CRATE) \t\t\t\t\t\t\t\\\n-\t\t$$(TLIB$(1)_T_$(4)_H_$(3))/$(CFG_LIBRUSTI_$(3))\n+\t\t$$(TLIB$(1)_T_$(4)_H_$(4))/$(CFG_LIBRUSTI_$(4))\n \t@$$(call E, compile_and_link: $$@)\n \t$$(STAGE$(1)_T_$(4)_H_$(3)) --cfg rusti -o $$@ $$<\n \n-$$(TLIB$(1)_T_$(4)_H_$(3))/$(CFG_LIBRUST_$(3)):\t\t\\\n+$$(TLIB$(1)_T_$(4)_H_$(3))/$(CFG_LIBRUST_$(4)):\t\t\\\n \t\t$$(RUST_LIB) $$(RUST_INPUTS)\t\t\t\\\n \t\t$$(TSREQ$(1)_T_$(4)_H_$(3))\t\t\t\t\t\\\n-\t\t$$(TLIB$(1)_T_$(4)_H_$(3))/$(CFG_CORELIB_$(3))\t\\\n-\t\t$$(TLIB$(1)_T_$(4)_H_$(3))/$(CFG_STDLIB_$(3))\t\\\n-\t\t$$(TLIB$(1)_T_$(4)_H_$(3))/$(CFG_LIBRUSTC_$(3))\n+\t\t$$(TLIB$(1)_T_$(4)_H_$(3))/$(CFG_CORELIB_$(4))\t\\\n+\t\t$$(TLIB$(1)_T_$(4)_H_$(3))/$(CFG_STDLIB_$(4))\t\\\n+\t\t$$(TLIB$(1)_T_$(4)_H_$(3))/$(CFG_LIBRUSTC_$(4))\n \t@$$(call E, compile_and_link: $$@)\n \t$$(STAGE$(1)_T_$(4)_H_$(3)) -o $$@ $$< && touch $$@\n \n-$$(TBIN$(1)_T_$(4)_H_$(3))/rust$$(X):\t\t\t\\\n+$$(TBIN$(1)_T_$(4)_H_$(3))/rust$$(X_$(4)):\t\t\t\\\n \t\t$$(DRIVER_CRATE) \t\t\t\t\t\t\t\\\n-\t\t$$(TLIB$(1)_T_$(4)_H_$(3))/$(CFG_LIBRUST_$(3))\n+\t\t$$(TLIB$(1)_T_$(4)_H_$(3))/$(CFG_LIBRUST_$(4))\n \t@$$(call E, compile_and_link: $$@)\n \t$$(STAGE$(1)_T_$(4)_H_$(3)) --cfg rust -o $$@ $$<\n \n@@ -129,94 +129,94 @@ define TOOLS_STAGE_N_HOST\n # Promote the stageN target to stageN+1 host\n # FIXME: Shouldn't need to depend on host/librustc.so once\n # rpath is working\n-$$(HLIB$(2)_H_$(4))/$(CFG_LIBFUZZER_$(3)):\t\t\t\t\t\\\n-\t\t$$(TLIB$(1)_T_$(4)_H_$(3))/$(CFG_LIBFUZZER_$(3))\t\\\n-\t\t$$(HLIB$(2)_H_$(4))/$(CFG_LIBRUSTC_$(3))\t\t\t\\\n+$$(HLIB$(2)_H_$(4))/$(CFG_LIBFUZZER_$(4)):\t\t\t\t\t\\\n+\t\t$$(TLIB$(1)_T_$(4)_H_$(3))/$(CFG_LIBFUZZER_$(4))\t\\\n+\t\t$$(HLIB$(2)_H_$(4))/$(CFG_LIBRUSTC_$(4))\t\t\t\\\n \t\t$$(HSREQ$(2)_H_$(4))\n \t@$$(call E, cp: $$@)\n \t$$(Q)cp $$< $$@\n-\t$$(Q)cp -R $$(TLIB$(1)_T_$(4)_H_$(3))/$(LIBFUZZER_GLOB_$(3)) \\\n-\t\t$$(wildcard $$(TLIB$(1)_T_$(4)_H_$(3))/$(LIBFUZZER_DSYM_GLOB_$(3))) \\\n+\t$$(Q)cp -R $$(TLIB$(1)_T_$(4)_H_$(3))/$(LIBFUZZER_GLOB_$(4)) \\\n+\t\t$$(wildcard $$(TLIB$(1)_T_$(4)_H_$(3))/$(LIBFUZZER_DSYM_GLOB_$(4))) \\\n \t        $$(HLIB$(2)_H_$(4))\n \n-$$(HBIN$(2)_H_$(4))/fuzzer$$(X):\t\t\t\t\\\n-\t\t$$(TBIN$(1)_T_$(4)_H_$(3))/fuzzer$$(X)\t\\\n-\t\t$$(HLIB$(2)_H_$(4))/$(CFG_LIBFUZZER_$(3))\t\\\n+$$(HBIN$(2)_H_$(4))/fuzzer$$(X_$(4)):\t\t\t\t\\\n+\t\t$$(TBIN$(1)_T_$(4)_H_$(3))/fuzzer$$(X_$(4))\t\\\n+\t\t$$(HLIB$(2)_H_$(4))/$(CFG_LIBFUZZER_$(4))\t\\\n \t\t$$(HSREQ$(2)_H_$(4))\n \t@$$(call E, cp: $$@)\n \t$$(Q)cp $$< $$@\n \n-$$(HBIN$(2)_H_$(4))/compiletest$$(X):\t\t\t\t\\\n-\t\t$$(TBIN$(1)_T_$(4)_H_$(3))/compiletest$$(X)\t\\\n+$$(HBIN$(2)_H_$(4))/compiletest$$(X_$(4)):\t\t\t\t\\\n+\t\t$$(TBIN$(1)_T_$(4)_H_$(3))/compiletest$$(X_$(4))\t\\\n \t\t$$(HSREQ$(2)_H_$(4))\n \t@$$(call E, cp: $$@)\n \t$$(Q)cp $$< $$@\n \n \n-$$(HLIB$(2)_H_$(4))/$(CFG_LIBRUSTPKG_$(3)):\t\t\t\t\\\n-\t\t$$(TLIB$(1)_T_$(4)_H_$(3))/$(CFG_LIBRUSTPKG_$(3))\t\\\n-\t\t$$(HLIB$(2)_H_$(4))/$(CFG_LIBRUSTC_$(3))\t\t\\\n+$$(HLIB$(2)_H_$(4))/$(CFG_LIBRUSTPKG_$(4)):\t\t\t\t\\\n+\t\t$$(TLIB$(1)_T_$(4)_H_$(3))/$(CFG_LIBRUSTPKG_$(4))\t\\\n+\t\t$$(HLIB$(2)_H_$(4))/$(CFG_LIBRUSTC_$(4))\t\t\\\n \t\t$$(HSREQ$(2)_H_$(4))\n \t@$$(call E, cp: $$@)\n \t$$(Q)cp $$< $$@\n-\t$$(Q)cp -R $$(TLIB$(1)_T_$(4)_H_$(3))/$(LIBRUSTPKG_GLOB_$(3)) \\\n-\t\t$$(wildcard $$(TLIB$(1)_T_$(4)_H_$(3))/$(LIBRUSTPKG_DSYM_GLOB_$(3))) \\\n+\t$$(Q)cp -R $$(TLIB$(1)_T_$(4)_H_$(3))/$(LIBRUSTPKG_GLOB_$(4)) \\\n+\t\t$$(wildcard $$(TLIB$(1)_T_$(4)_H_$(3))/$(LIBRUSTPKG_DSYM_GLOB_$(4))) \\\n \t        $$(HLIB$(2)_H_$(4))\n \n-$$(HBIN$(2)_H_$(4))/rustpkg$$(X):\t\t\t\t\\\n-\t\t$$(TBIN$(1)_T_$(4)_H_$(3))/rustpkg$$(X)\t\\\n-\t\t$$(HLIB$(2)_H_$(4))/$(CFG_LIBRUSTPKG_$(3))\t\\\n+$$(HBIN$(2)_H_$(4))/rustpkg$$(X_$(4)):\t\t\t\t\\\n+\t\t$$(TBIN$(1)_T_$(4)_H_$(3))/rustpkg$$(X_$(4))\t\\\n+\t\t$$(HLIB$(2)_H_$(4))/$(CFG_LIBRUSTPKG_$(4))\t\\\n \t\t$$(HSREQ$(2)_H_$(4))\n \t@$$(call E, cp: $$@)\n \t$$(Q)cp $$< $$@\n \n-$$(HLIB$(2)_H_$(4))/$(CFG_LIBRUSTDOC_$(3)):\t\t\t\t\t\\\n-\t\t$$(TLIB$(1)_T_$(4)_H_$(3))/$(CFG_LIBRUSTDOC_$(3))\t\\\n-\t\t$$(HLIB$(2)_H_$(4))/$(CFG_LIBRUSTC_$(3))\t\t\t\\\n+$$(HLIB$(2)_H_$(4))/$(CFG_LIBRUSTDOC_$(4)):\t\t\t\t\t\\\n+\t\t$$(TLIB$(1)_T_$(4)_H_$(3))/$(CFG_LIBRUSTDOC_$(4))\t\\\n+\t\t$$(HLIB$(2)_H_$(4))/$(CFG_LIBRUSTC_$(4))\t\t\t\\\n \t\t$$(HSREQ$(2)_H_$(4))\n \t@$$(call E, cp: $$@)\n \t$$(Q)cp $$< $$@\n-\t$$(Q)cp -R $$(TLIB$(1)_T_$(4)_H_$(3))/$(LIBRUSTDOC_GLOB_$(3)) \\\n-\t\t$$(wildcard $$(TLIB$(1)_T_$(4)_H_$(3))/$(LIBRUSTDOC_DSYM_GLOB_$(3))) \\\n+\t$$(Q)cp -R $$(TLIB$(1)_T_$(4)_H_$(3))/$(LIBRUSTDOC_GLOB_$(4)) \\\n+\t\t$$(wildcard $$(TLIB$(1)_T_$(4)_H_$(3))/$(LIBRUSTDOC_DSYM_GLOB_$(4))) \\\n \t        $$(HLIB$(2)_H_$(4))\n \n-$$(HBIN$(2)_H_$(4))/rustdoc$$(X):\t\t\t\t\\\n-\t\t$$(TBIN$(1)_T_$(4)_H_$(3))/rustdoc$$(X)\t\\\n-\t\t$$(HLIB$(2)_H_$(4))/$(CFG_LIBRUSTDOC_$(3))\t\\\n+$$(HBIN$(2)_H_$(4))/rustdoc$$(X_$(4)):\t\t\t\t\\\n+\t\t$$(TBIN$(1)_T_$(4)_H_$(3))/rustdoc$$(X_$(4))\t\\\n+\t\t$$(HLIB$(2)_H_$(4))/$(CFG_LIBRUSTDOC_$(4))\t\\\n \t\t$$(HSREQ$(2)_H_$(4))\n \t@$$(call E, cp: $$@)\n \t$$(Q)cp $$< $$@\n \n-$$(HLIB$(2)_H_$(4))/$(CFG_LIBRUSTI_$(3)):\t\t\t\t\t\\\n-\t\t$$(TLIB$(1)_T_$(4)_H_$(3))/$(CFG_LIBRUSTI_$(3))\t\\\n-\t\t$$(HLIB$(2)_H_$(4))/$(CFG_LIBRUSTC_$(3))\t\t\t\\\n+$$(HLIB$(2)_H_$(4))/$(CFG_LIBRUSTI_$(4)):\t\t\t\t\t\\\n+\t\t$$(TLIB$(1)_T_$(4)_H_$(3))/$(CFG_LIBRUSTI_$(4))\t\\\n+\t\t$$(HLIB$(2)_H_$(4))/$(CFG_LIBRUSTC_$(4))\t\t\t\\\n \t\t$$(HSREQ$(2)_H_$(4))\n \t@$$(call E, cp: $$@)\n \t$$(Q)cp $$< $$@\n-\t$$(Q)cp -R $$(TLIB$(1)_T_$(4)_H_$(3))/$(LIBRUSTI_GLOB_$(3)) \\\n-\t\t$$(wildcard $$(TLIB$(1)_T_$(4)_H_$(3))/$(LIBRUSTI_DSYM_GLOB_$(3))) \\\n+\t$$(Q)cp -R $$(TLIB$(1)_T_$(4)_H_$(3))/$(LIBRUSTI_GLOB_$(4)) \\\n+\t\t$$(wildcard $$(TLIB$(1)_T_$(4)_H_$(3))/$(LIBRUSTI_DSYM_GLOB_$(4))) \\\n \t        $$(HLIB$(2)_H_$(4))\n \n-$$(HBIN$(2)_H_$(4))/rusti$$(X):\t\t\t\t\\\n-\t\t$$(TBIN$(1)_T_$(4)_H_$(3))/rusti$$(X)\t\\\n-\t\t$$(HLIB$(2)_H_$(4))/$(CFG_LIBRUSTI_$(3))\t\\\n+$$(HBIN$(2)_H_$(4))/rusti$$(X_$(4)):\t\t\t\t\\\n+\t\t$$(TBIN$(1)_T_$(4)_H_$(3))/rusti$$(X_$(4))\t\\\n+\t\t$$(HLIB$(2)_H_$(4))/$(CFG_LIBRUSTI_$(4))\t\\\n \t\t$$(HSREQ$(2)_H_$(4))\n \t@$$(call E, cp: $$@)\n \t$$(Q)cp $$< $$@\n \n-$$(HLIB$(2)_H_$(4))/$(CFG_LIBRUST_$(3)):\t\t\t\t\t\\\n-\t\t$$(TLIB$(1)_T_$(4)_H_$(3))/$(CFG_LIBRUST_$(3))\t\\\n-\t\t$$(HLIB$(2)_H_$(4))/$(CFG_LIBRUSTC_$(3))\t\t\t\\\n+$$(HLIB$(2)_H_$(4))/$(CFG_LIBRUST_$(4)):\t\t\t\t\t\\\n+\t\t$$(TLIB$(1)_T_$(4)_H_$(3))/$(CFG_LIBRUST_$(4))\t\\\n+\t\t$$(HLIB$(2)_H_$(4))/$(CFG_LIBRUSTC_$(4))\t\t\t\\\n \t\t$$(HSREQ$(2)_H_$(4))\n \t@$$(call E, cp: $$@)\n \t$$(Q)cp $$< $$@\n-\t$$(Q)cp -R $$(TLIB$(1)_T_$(4)_H_$(3))/$(LIBRUST_GLOB_$(3)) \\\n-\t\t$$(wildcard $$(TLIB$(1)_T_$(4)_H_$(3))/$(LIBRUST_DSYM_GLOB)_$(3)) \\\n+\t$$(Q)cp -R $$(TLIB$(1)_T_$(4)_H_$(3))/$(LIBRUST_GLOB_$(4)) \\\n+\t\t$$(wildcard $$(TLIB$(1)_T_$(4)_H_$(3))/$(LIBRUST_DSYM_GLOB)_$(4)) \\\n \t        $$(HLIB$(2)_H_$(4))\n \n-$$(HBIN$(2)_H_$(4))/rust$$(X):\t\t\t\t\\\n-\t\t$$(TBIN$(1)_T_$(4)_H_$(3))/rust$$(X)\t\\\n-\t\t$$(HLIB$(2)_H_$(4))/$(CFG_LIBRUST_$(3))\t\\\n+$$(HBIN$(2)_H_$(4))/rust$$(X_$(4)):\t\t\t\t\\\n+\t\t$$(TBIN$(1)_T_$(4)_H_$(3))/rust$$(X_$(4))\t\\\n+\t\t$$(HLIB$(2)_H_$(4))/$(CFG_LIBRUST_$(4))\t\\\n \t\t$$(HSREQ$(2)_H_$(4))\n \t@$$(call E, cp: $$@)\n \t$$(Q)cp $$< $$@"}]}