{"sha": "d98c04aac17d62ccddf26af501ee9e4d300ab6c5", "node_id": "C_kwDOAAsO6NoAKGQ5OGMwNGFhYzE3ZDYyY2NkZGYyNmFmNTAxZWU5ZTRkMzAwYWI2YzU", "commit": {"author": {"name": "Nikita Podoliako", "email": "n.podoliako@zubr.io", "date": "2022-05-25T15:47:11Z"}, "committer": {"name": "Nikita Podoliako", "email": "n.podoliako@zubr.io", "date": "2022-05-28T12:07:22Z"}, "message": "fix(ide-db): correct single-file module rename", "tree": {"sha": "56ec193c752f75b63b3e84a625b990c367125cb1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/56ec193c752f75b63b3e84a625b990c367125cb1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d98c04aac17d62ccddf26af501ee9e4d300ab6c5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d98c04aac17d62ccddf26af501ee9e4d300ab6c5", "html_url": "https://github.com/rust-lang/rust/commit/d98c04aac17d62ccddf26af501ee9e4d300ab6c5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d98c04aac17d62ccddf26af501ee9e4d300ab6c5/comments", "author": {"login": "00nktk", "id": 22844465, "node_id": "MDQ6VXNlcjIyODQ0NDY1", "avatar_url": "https://avatars.githubusercontent.com/u/22844465?v=4", "gravatar_id": "", "url": "https://api.github.com/users/00nktk", "html_url": "https://github.com/00nktk", "followers_url": "https://api.github.com/users/00nktk/followers", "following_url": "https://api.github.com/users/00nktk/following{/other_user}", "gists_url": "https://api.github.com/users/00nktk/gists{/gist_id}", "starred_url": "https://api.github.com/users/00nktk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/00nktk/subscriptions", "organizations_url": "https://api.github.com/users/00nktk/orgs", "repos_url": "https://api.github.com/users/00nktk/repos", "events_url": "https://api.github.com/users/00nktk/events{/privacy}", "received_events_url": "https://api.github.com/users/00nktk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "00nktk", "id": 22844465, "node_id": "MDQ6VXNlcjIyODQ0NDY1", "avatar_url": "https://avatars.githubusercontent.com/u/22844465?v=4", "gravatar_id": "", "url": "https://api.github.com/users/00nktk", "html_url": "https://github.com/00nktk", "followers_url": "https://api.github.com/users/00nktk/followers", "following_url": "https://api.github.com/users/00nktk/following{/other_user}", "gists_url": "https://api.github.com/users/00nktk/gists{/gist_id}", "starred_url": "https://api.github.com/users/00nktk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/00nktk/subscriptions", "organizations_url": "https://api.github.com/users/00nktk/orgs", "repos_url": "https://api.github.com/users/00nktk/repos", "events_url": "https://api.github.com/users/00nktk/events{/privacy}", "received_events_url": "https://api.github.com/users/00nktk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3fe137a5b5d83883377787d37272513c5d61485c", "url": "https://api.github.com/repos/rust-lang/rust/commits/3fe137a5b5d83883377787d37272513c5d61485c", "html_url": "https://github.com/rust-lang/rust/commit/3fe137a5b5d83883377787d37272513c5d61485c"}], "stats": {"total": 50, "additions": 42, "deletions": 8}, "files": [{"sha": "f8b01db3e3288df02b49ddd4fc0f09f63ea22a7e", "filename": "crates/hir/src/has_source.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/d98c04aac17d62ccddf26af501ee9e4d300ab6c5/crates%2Fhir%2Fsrc%2Fhas_source.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d98c04aac17d62ccddf26af501ee9e4d300ab6c5/crates%2Fhir%2Fsrc%2Fhas_source.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir%2Fsrc%2Fhas_source.rs?ref=d98c04aac17d62ccddf26af501ee9e4d300ab6c5", "patch": "@@ -39,6 +39,11 @@ impl Module {\n         }\n     }\n \n+    pub fn is_inline(self, db: &dyn HirDatabase) -> bool {\n+        let def_map = self.id.def_map(db.upcast());\n+        def_map[self.id.local_id].origin.is_inline()\n+    }\n+\n     /// Returns a node which declares this module, either a `mod foo;` or a `mod foo {}`.\n     /// `None` for the crate root.\n     pub fn declaration_source(self, db: &dyn HirDatabase) -> Option<InFile<ast::Module>> {"}, {"sha": "8f83496e938be89c8f5be603da6e09a6f691ee3f", "filename": "crates/ide-db/src/rename.rs", "status": "modified", "additions": 24, "deletions": 6, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/d98c04aac17d62ccddf26af501ee9e4d300ab6c5/crates%2Fide-db%2Fsrc%2Frename.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d98c04aac17d62ccddf26af501ee9e4d300ab6c5/crates%2Fide-db%2Fsrc%2Frename.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide-db%2Fsrc%2Frename.rs?ref=d98c04aac17d62ccddf26af501ee9e4d300ab6c5", "patch": "@@ -180,15 +180,33 @@ fn rename_mod(\n     let InFile { file_id, value: def_source } = module.definition_source(sema.db);\n     if let ModuleSource::SourceFile(..) = def_source {\n         let anchor = file_id.original_file(sema.db);\n-        // not mod.rs and doesn't has children, rename file only\n-        if !module.is_mod_rs(sema.db) && module.children(sema.db).next().is_none() {\n+\n+        let is_mod_rs = module.is_mod_rs(sema.db);\n+        let has_detached_child = module.children(sema.db).any(|child| !child.is_inline(sema.db));\n+\n+        // Module exists in a named file\n+        if !is_mod_rs {\n             let path = format!(\"{}.rs\", new_name);\n             let dst = AnchoredPathBuf { anchor, path };\n             source_change.push_file_system_edit(FileSystemEdit::MoveFile { src: anchor, dst })\n-        } else if let Some(mod_name) = module.name(sema.db) {\n-            // is mod.rs or has children, rename dir\n-            let src = AnchoredPathBuf { anchor, path: mod_name.to_string() };\n-            let dst = AnchoredPathBuf { anchor, path: new_name.to_string() };\n+        }\n+\n+        // Rename the dir if:\n+        //  - Module source is in mod.rs\n+        //  - Module has submodules defined in separate files\n+        let dir_paths = match (is_mod_rs, has_detached_child, module.name(sema.db)) {\n+            // Go up one level since the anchor is inside the dir we're trying to rename\n+            (true, _, Some(mod_name)) => {\n+                Some((format!(\"../{}\", mod_name), format!(\"../{}\", new_name)))\n+            }\n+            // The anchor is on the same level as target dir\n+            (false, true, Some(mod_name)) => Some((mod_name.to_string(), new_name.to_string())),\n+            _ => None,\n+        };\n+\n+        if let Some((src, dst)) = dir_paths {\n+            let src = AnchoredPathBuf { anchor, path: src };\n+            let dst = AnchoredPathBuf { anchor, path: dst };\n             source_change.push_file_system_edit(FileSystemEdit::MoveDir {\n                 src,\n                 src_id: anchor,"}, {"sha": "0f8033611a197e2a6d21872221520197719b61ef", "filename": "crates/ide/src/rename.rs", "status": "modified", "additions": 13, "deletions": 2, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/d98c04aac17d62ccddf26af501ee9e4d300ab6c5/crates%2Fide%2Fsrc%2Frename.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d98c04aac17d62ccddf26af501ee9e4d300ab6c5/crates%2Fide%2Fsrc%2Frename.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Frename.rs?ref=d98c04aac17d62ccddf26af501ee9e4d300ab6c5", "patch": "@@ -973,7 +973,7 @@ mod fo$0o;\n                                 anchor: FileId(\n                                     1,\n                                 ),\n-                                path: \"foo\",\n+                                path: \"../foo\",\n                             },\n                             src_id: FileId(\n                                 1,\n@@ -982,7 +982,7 @@ mod fo$0o;\n                                 anchor: FileId(\n                                     1,\n                                 ),\n-                                path: \"foo2\",\n+                                path: \"../foo2\",\n                             },\n                         },\n                     ],\n@@ -1158,6 +1158,17 @@ mod quux;\n                         },\n                     },\n                     file_system_edits: [\n+                        MoveFile {\n+                            src: FileId(\n+                                1,\n+                            ),\n+                            dst: AnchoredPathBuf {\n+                                anchor: FileId(\n+                                    1,\n+                                ),\n+                                path: \"foo2.rs\",\n+                            },\n+                        },\n                         MoveDir {\n                             src: AnchoredPathBuf {\n                                 anchor: FileId("}]}