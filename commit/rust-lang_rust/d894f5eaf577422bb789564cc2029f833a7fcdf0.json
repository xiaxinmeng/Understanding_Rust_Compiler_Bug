{"sha": "d894f5eaf577422bb789564cc2029f833a7fcdf0", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQ4OTRmNWVhZjU3NzQyMmJiNzg5NTY0Y2MyMDI5ZjgzM2E3ZmNkZjA=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2020-03-25T05:45:36Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-03-25T05:45:36Z"}, "message": "Rollup merge of #70373 - Centril:canon-imports, r=Mark-Simulacrum\n\nnormalize some imports & prefer direct ones\n\nr? @Mark-Simulacrum", "tree": {"sha": "91454467d7709094167f345ce6179566c2e7fdae", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/91454467d7709094167f345ce6179566c2e7fdae"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d894f5eaf577422bb789564cc2029f833a7fcdf0", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJeevAACRBK7hj4Ov3rIwAAdHIIAD12MtfR//5EfiRgyE4E0tZj\n/TP8A9rPHfwDfinDU/2zSNuZ6HIHEl6UpbkArBA2bAVlTNTTkKOYXBaQJOgV1kWJ\ncT0t0Nm6kjt9hVwbn/diKMLQnlFVHIIzeokqULZ7QXbdNqSbfnzQhDLiKjeWi3us\nNbsM2asPMTQ6RR+HF1tnDpEUOSVB4HNT3qbkoJEC+wK8eo8E4TyPZ7ZxzB+rVsS3\nDWhSqakGCj9tx2mYZYWOjR6TUhj/adIplvTr8ngSuTBT2pxl8EL8Ea7AaAyG8QaA\nUDY4TaAyS4McCIuol1A0xVbi0KW/phgQwn4OONx4Bhyk5XTgJbXTD2m2rFur/0Q=\n=J41Y\n-----END PGP SIGNATURE-----\n", "payload": "tree 91454467d7709094167f345ce6179566c2e7fdae\nparent cb17049b36c367070a35913861426249521596cd\nparent 917289907d16e670a38c2f7eaffb46b500127694\nauthor Mazdak Farrokhzad <twingoow@gmail.com> 1585115136 +0100\ncommitter GitHub <noreply@github.com> 1585115136 +0100\n\nRollup merge of #70373 - Centril:canon-imports, r=Mark-Simulacrum\n\nnormalize some imports & prefer direct ones\n\nr? @Mark-Simulacrum\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d894f5eaf577422bb789564cc2029f833a7fcdf0", "html_url": "https://github.com/rust-lang/rust/commit/d894f5eaf577422bb789564cc2029f833a7fcdf0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d894f5eaf577422bb789564cc2029f833a7fcdf0/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cb17049b36c367070a35913861426249521596cd", "url": "https://api.github.com/repos/rust-lang/rust/commits/cb17049b36c367070a35913861426249521596cd", "html_url": "https://github.com/rust-lang/rust/commit/cb17049b36c367070a35913861426249521596cd"}, {"sha": "917289907d16e670a38c2f7eaffb46b500127694", "url": "https://api.github.com/repos/rust-lang/rust/commits/917289907d16e670a38c2f7eaffb46b500127694", "html_url": "https://github.com/rust-lang/rust/commit/917289907d16e670a38c2f7eaffb46b500127694"}], "stats": {"total": 95, "additions": 45, "deletions": 50}, "files": [{"sha": "aab8aa19ae57c5b6da3713aec85ca048553fcc4e", "filename": "src/librustc/dep_graph/dep_node.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/d894f5eaf577422bb789564cc2029f833a7fcdf0/src%2Flibrustc%2Fdep_graph%2Fdep_node.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d894f5eaf577422bb789564cc2029f833a7fcdf0/src%2Flibrustc%2Fdep_graph%2Fdep_node.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fdep_graph%2Fdep_node.rs?ref=d894f5eaf577422bb789564cc2029f833a7fcdf0", "patch": "@@ -49,8 +49,6 @@\n //! user of the `DepNode` API of having to know how to compute the expected\n //! fingerprint for a given set of node parameters.\n \n-use crate::hir::map::DefPathHash;\n-use crate::ich::Fingerprint;\n use crate::mir;\n use crate::mir::interpret::{GlobalId, LitToConstInput};\n use crate::traits;\n@@ -62,7 +60,9 @@ use crate::traits::query::{\n use crate::ty::subst::SubstsRef;\n use crate::ty::{self, ParamEnvAnd, Ty, TyCtxt};\n \n+use rustc_data_structures::fingerprint::Fingerprint;\n use rustc_hir::def_id::{CrateNum, DefId, LocalDefId, CRATE_DEF_INDEX};\n+use rustc_hir::definitions::DefPathHash;\n use rustc_hir::HirId;\n use rustc_span::symbol::Symbol;\n use std::hash::Hash;"}, {"sha": "725238f1d1a857bbbd1d839445d74e2728df438f", "filename": "src/librustc/hir/map/collector.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d894f5eaf577422bb789564cc2029f833a7fcdf0/src%2Flibrustc%2Fhir%2Fmap%2Fcollector.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d894f5eaf577422bb789564cc2029f833a7fcdf0/src%2Flibrustc%2Fhir%2Fmap%2Fcollector.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fhir%2Fmap%2Fcollector.rs?ref=d894f5eaf577422bb789564cc2029f833a7fcdf0", "patch": "@@ -1,5 +1,4 @@\n use crate::arena::Arena;\n-use crate::hir::map::definitions::{self, DefPathHash};\n use crate::hir::map::{Entry, HirOwnerData, Map};\n use crate::hir::{Owner, OwnerNodes, ParentedNode};\n use crate::ich::StableHashingContext;\n@@ -11,6 +10,7 @@ use rustc_data_structures::svh::Svh;\n use rustc_hir as hir;\n use rustc_hir::def_id::CRATE_DEF_INDEX;\n use rustc_hir::def_id::{LocalDefId, LOCAL_CRATE};\n+use rustc_hir::definitions::{self, DefPathHash};\n use rustc_hir::intravisit::{self, NestedVisitorMap, Visitor};\n use rustc_hir::*;\n use rustc_index::vec::{Idx, IndexVec};"}, {"sha": "6290f5bb9b4189d09b3004e6fac41747a4502737", "filename": "src/librustc/hir/map/mod.rs", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/d894f5eaf577422bb789564cc2029f833a7fcdf0/src%2Flibrustc%2Fhir%2Fmap%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d894f5eaf577422bb789564cc2029f833a7fcdf0/src%2Flibrustc%2Fhir%2Fmap%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fhir%2Fmap%2Fmod.rs?ref=d894f5eaf577422bb789564cc2029f833a7fcdf0", "patch": "@@ -7,9 +7,7 @@ use rustc_ast::ast::{self, Name, NodeId};\n use rustc_data_structures::svh::Svh;\n use rustc_hir::def::{DefKind, Res};\n use rustc_hir::def_id::{CrateNum, DefId, LocalDefId, LOCAL_CRATE};\n-pub use rustc_hir::definitions;\n-pub use rustc_hir::definitions::{DefKey, DefPath, DefPathData, DefPathHash};\n-pub use rustc_hir::definitions::{Definitions, DisambiguatedDefPathData};\n+use rustc_hir::definitions::{DefKey, DefPath, Definitions};\n use rustc_hir::intravisit;\n use rustc_hir::itemlikevisit::ItemLikeVisitor;\n use rustc_hir::print::Nested;"}, {"sha": "a9466e8252de7217db9fc43e62aba4fff6fc8956", "filename": "src/librustc/ich/hcx.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/d894f5eaf577422bb789564cc2029f833a7fcdf0/src%2Flibrustc%2Fich%2Fhcx.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d894f5eaf577422bb789564cc2029f833a7fcdf0/src%2Flibrustc%2Fich%2Fhcx.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fich%2Fhcx.rs?ref=d894f5eaf577422bb789564cc2029f833a7fcdf0", "patch": "@@ -1,5 +1,4 @@\n-use crate::hir::map::definitions::{DefPathHash, Definitions};\n-use crate::ich::{self, CachingSourceMapView};\n+use crate::ich;\n use crate::middle::cstore::CrateStore;\n use crate::ty::{fast_reject, TyCtxt};\n \n@@ -9,10 +8,11 @@ use rustc_data_structures::stable_hasher::{HashStable, StableHasher};\n use rustc_data_structures::sync::Lrc;\n use rustc_hir as hir;\n use rustc_hir::def_id::{DefId, LocalDefId};\n+use rustc_hir::definitions::{DefPathHash, Definitions};\n use rustc_session::Session;\n use rustc_span::source_map::SourceMap;\n use rustc_span::symbol::Symbol;\n-use rustc_span::{BytePos, SourceFile};\n+use rustc_span::{BytePos, CachingSourceMapView, SourceFile};\n \n use smallvec::SmallVec;\n use std::cmp::Ord;"}, {"sha": "f668cc99754f4e2265c20841b490fbcb75cafd91", "filename": "src/librustc/ich/impls_hir.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/d894f5eaf577422bb789564cc2029f833a7fcdf0/src%2Flibrustc%2Fich%2Fimpls_hir.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d894f5eaf577422bb789564cc2029f833a7fcdf0/src%2Flibrustc%2Fich%2Fimpls_hir.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fich%2Fimpls_hir.rs?ref=d894f5eaf577422bb789564cc2029f833a7fcdf0", "patch": "@@ -1,12 +1,13 @@\n //! This module contains `HashStable` implementations for various HIR data\n //! types in no particular order.\n \n-use crate::hir::map::DefPathHash;\n-use crate::ich::{Fingerprint, NodeIdHashingMode, StableHashingContext};\n+use crate::ich::{NodeIdHashingMode, StableHashingContext};\n use rustc_attr as attr;\n+use rustc_data_structures::fingerprint::Fingerprint;\n use rustc_data_structures::stable_hasher::{HashStable, StableHasher, ToStableHashKey};\n use rustc_hir as hir;\n use rustc_hir::def_id::{CrateNum, DefId, LocalDefId, CRATE_DEF_INDEX};\n+use rustc_hir::definitions::DefPathHash;\n use smallvec::SmallVec;\n use std::mem;\n "}, {"sha": "41cc8cbaebb6ec3abe311be2853ace61b7b7bbec", "filename": "src/librustc/ich/impls_ty.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/d894f5eaf577422bb789564cc2029f833a7fcdf0/src%2Flibrustc%2Fich%2Fimpls_ty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d894f5eaf577422bb789564cc2029f833a7fcdf0/src%2Flibrustc%2Fich%2Fimpls_ty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fich%2Fimpls_ty.rs?ref=d894f5eaf577422bb789564cc2029f833a7fcdf0", "patch": "@@ -1,10 +1,11 @@\n //! This module contains `HashStable` implementations for various data types\n //! from rustc::ty in no particular order.\n \n-use crate::ich::{Fingerprint, NodeIdHashingMode, StableHashingContext};\n+use crate::ich::{NodeIdHashingMode, StableHashingContext};\n use crate::middle::region;\n use crate::mir;\n use crate::ty;\n+use rustc_data_structures::fingerprint::Fingerprint;\n use rustc_data_structures::fx::FxHashMap;\n use rustc_data_structures::stable_hasher::{HashStable, StableHasher, ToStableHashKey};\n use std::cell::RefCell;"}, {"sha": "516e3ed979c7ca48271a6ed41b19f6016fb95db4", "filename": "src/librustc/ich/mod.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d894f5eaf577422bb789564cc2029f833a7fcdf0/src%2Flibrustc%2Fich%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d894f5eaf577422bb789564cc2029f833a7fcdf0/src%2Flibrustc%2Fich%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fich%2Fmod.rs?ref=d894f5eaf577422bb789564cc2029f833a7fcdf0", "patch": "@@ -3,7 +3,6 @@\n pub use self::hcx::{\n     hash_stable_trait_impls, NodeIdHashingMode, StableHashingContext, StableHashingContextProvider,\n };\n-crate use rustc_data_structures::fingerprint::Fingerprint;\n use rustc_span::symbol::{sym, Symbol};\n pub use rustc_span::CachingSourceMapView;\n "}, {"sha": "012390e8f74b8712477d9e4972966306b16cc4af", "filename": "src/librustc/middle/cstore.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d894f5eaf577422bb789564cc2029f833a7fcdf0/src%2Flibrustc%2Fmiddle%2Fcstore.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d894f5eaf577422bb789564cc2029f833a7fcdf0/src%2Flibrustc%2Fmiddle%2Fcstore.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fcstore.rs?ref=d894f5eaf577422bb789564cc2029f833a7fcdf0", "patch": "@@ -4,14 +4,14 @@\n \n pub use self::NativeLibraryKind::*;\n \n-use crate::hir::map::definitions::{DefKey, DefPath, DefPathHash, DefPathTable};\n use crate::ty::TyCtxt;\n \n use rustc_ast::ast;\n use rustc_ast::expand::allocator::AllocatorKind;\n use rustc_data_structures::svh::Svh;\n use rustc_data_structures::sync::{self, MetadataRef};\n use rustc_hir::def_id::{CrateNum, DefId, LOCAL_CRATE};\n+use rustc_hir::definitions::{DefKey, DefPath, DefPathHash, DefPathTable};\n use rustc_macros::HashStable;\n use rustc_session::search_paths::PathKind;\n pub use rustc_session::utils::NativeLibraryKind;"}, {"sha": "c46ab89d0049c8b84a6f073b2b0c47c75acc0349", "filename": "src/librustc/mir/interpret/error.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d894f5eaf577422bb789564cc2029f833a7fcdf0/src%2Flibrustc%2Fmir%2Finterpret%2Ferror.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d894f5eaf577422bb789564cc2029f833a7fcdf0/src%2Flibrustc%2Fmir%2Finterpret%2Ferror.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmir%2Finterpret%2Ferror.rs?ref=d894f5eaf577422bb789564cc2029f833a7fcdf0", "patch": "@@ -1,6 +1,5 @@\n use super::{AllocId, CheckInAllocMsg, Pointer, RawConst, ScalarMaybeUndef};\n \n-use crate::hir::map::definitions::DefPathData;\n use crate::mir::interpret::ConstValue;\n use crate::ty::layout::{Align, LayoutError, Size};\n use crate::ty::query::TyCtxtAt;\n@@ -11,6 +10,7 @@ use backtrace::Backtrace;\n use rustc_data_structures::sync::Lock;\n use rustc_errors::{struct_span_err, DiagnosticBuilder};\n use rustc_hir as hir;\n+use rustc_hir::definitions::DefPathData;\n use rustc_macros::HashStable;\n use rustc_session::CtfeBacktrace;\n use rustc_span::{def_id::DefId, Pos, Span};"}, {"sha": "0b64cb479d5598ba10d090432e741f0866d85c1a", "filename": "src/librustc/mir/mono.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/d894f5eaf577422bb789564cc2029f833a7fcdf0/src%2Flibrustc%2Fmir%2Fmono.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d894f5eaf577422bb789564cc2029f833a7fcdf0/src%2Flibrustc%2Fmir%2Fmono.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmir%2Fmono.rs?ref=d894f5eaf577422bb789564cc2029f833a7fcdf0", "patch": "@@ -1,9 +1,10 @@\n use crate::dep_graph::{DepConstructor, DepNode, WorkProduct, WorkProductId};\n-use crate::ich::{Fingerprint, NodeIdHashingMode, StableHashingContext};\n+use crate::ich::{NodeIdHashingMode, StableHashingContext};\n use crate::ty::print::obsolete::DefPathBasedNames;\n use crate::ty::{subst::InternalSubsts, Instance, InstanceDef, SymbolName, TyCtxt};\n use rustc_attr::InlineAttr;\n use rustc_data_structures::base_n;\n+use rustc_data_structures::fingerprint::Fingerprint;\n use rustc_data_structures::fx::FxHashMap;\n use rustc_data_structures::stable_hasher::{HashStable, StableHasher};\n use rustc_hir::def_id::{CrateNum, DefId, LOCAL_CRATE};"}, {"sha": "ef1532bbf2500cf10713c076bccc0986d1111fc5", "filename": "src/librustc/ty/context.rs", "status": "modified", "additions": 4, "deletions": 6, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/d894f5eaf577422bb789564cc2029f833a7fcdf0/src%2Flibrustc%2Fty%2Fcontext.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d894f5eaf577422bb789564cc2029f833a7fcdf0/src%2Flibrustc%2Fty%2Fcontext.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Fcontext.rs?ref=d894f5eaf577422bb789564cc2029f833a7fcdf0", "patch": "@@ -4,9 +4,6 @@ use crate::arena::Arena;\n use crate::dep_graph::DepGraph;\n use crate::dep_graph::{self, DepConstructor};\n use crate::hir::exports::Export;\n-use crate::hir::map as hir_map;\n-use crate::hir::map::definitions::Definitions;\n-use crate::hir::map::{DefPathData, DefPathHash};\n use crate::ich::{NodeIdHashingMode, StableHashingContext};\n use crate::infer::canonical::{Canonical, CanonicalVarInfo, CanonicalVarInfos};\n use crate::lint::{struct_lint_level, LintSource};\n@@ -56,6 +53,7 @@ use rustc_data_structures::sync::{self, Lock, Lrc, WorkerLocal};\n use rustc_hir as hir;\n use rustc_hir::def::{DefKind, Res};\n use rustc_hir::def_id::{CrateNum, DefId, DefIdMap, DefIdSet, LocalDefId, LOCAL_CRATE};\n+use rustc_hir::definitions::{DefPathData, DefPathHash, Definitions};\n use rustc_hir::{HirId, Node, TraitCandidate};\n use rustc_hir::{ItemKind, ItemLocalId, ItemLocalMap, ItemLocalSet};\n use rustc_index::vec::{Idx, IndexVec};\n@@ -1236,7 +1234,7 @@ impl<'tcx> TyCtxt<'tcx> {\n         self.features_query(LOCAL_CRATE)\n     }\n \n-    pub fn def_key(self, id: DefId) -> hir_map::DefKey {\n+    pub fn def_key(self, id: DefId) -> rustc_hir::definitions::DefKey {\n         if let Some(id) = id.as_local() { self.hir().def_key(id) } else { self.cstore.def_key(id) }\n     }\n \n@@ -1245,7 +1243,7 @@ impl<'tcx> TyCtxt<'tcx> {\n     ///\n     /// Note that if `id` is not local to this crate, the result will\n     ///  be a non-local `DefPath`.\n-    pub fn def_path(self, id: DefId) -> hir_map::DefPath {\n+    pub fn def_path(self, id: DefId) -> rustc_hir::definitions::DefPath {\n         if let Some(id) = id.as_local() {\n             self.hir().def_path(id)\n         } else {\n@@ -1260,7 +1258,7 @@ impl<'tcx> TyCtxt<'tcx> {\n     }\n \n     #[inline]\n-    pub fn def_path_hash(self, def_id: DefId) -> hir_map::DefPathHash {\n+    pub fn def_path_hash(self, def_id: DefId) -> rustc_hir::definitions::DefPathHash {\n         if let Some(def_id) = def_id.as_local() {\n             self.definitions.def_path_hash(def_id)\n         } else {"}, {"sha": "fcfee0fea85aff4007e82c65acb9e40924a90ac4", "filename": "src/librustc/ty/instance.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d894f5eaf577422bb789564cc2029f833a7fcdf0/src%2Flibrustc%2Fty%2Finstance.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d894f5eaf577422bb789564cc2029f833a7fcdf0/src%2Flibrustc%2Fty%2Finstance.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Finstance.rs?ref=d894f5eaf577422bb789564cc2029f833a7fcdf0", "patch": "@@ -166,7 +166,7 @@ impl<'tcx> InstanceDef<'tcx> {\n     /// Note that this is only a hint. See the documentation for\n     /// `generates_cgu_internal_copy` for more information.\n     pub fn requires_inline(&self, tcx: TyCtxt<'tcx>) -> bool {\n-        use crate::hir::map::DefPathData;\n+        use rustc_hir::definitions::DefPathData;\n         let def_id = match *self {\n             ty::InstanceDef::Item(def_id) => def_id,\n             ty::InstanceDef::DropGlue(_, Some(_)) => return false,"}, {"sha": "43982439d47c89cdeec728cedd2d75934baee9b6", "filename": "src/librustc/ty/mod.rs", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/d894f5eaf577422bb789564cc2029f833a7fcdf0/src%2Flibrustc%2Fty%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d894f5eaf577422bb789564cc2029f833a7fcdf0/src%2Flibrustc%2Fty%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Fmod.rs?ref=d894f5eaf577422bb789564cc2029f833a7fcdf0", "patch": "@@ -8,8 +8,6 @@ pub use self::Variance::*;\n \n use crate::arena::Arena;\n use crate::hir::exports::ExportMap;\n-use crate::hir::map as hir_map;\n-use crate::ich::Fingerprint;\n use crate::ich::StableHashingContext;\n use crate::infer::canonical::Canonical;\n use crate::middle::cstore::CrateStoreDyn;\n@@ -28,6 +26,7 @@ use rustc_ast::ast::{self, Ident, Name};\n use rustc_ast::node_id::{NodeId, NodeMap, NodeSet};\n use rustc_attr as attr;\n use rustc_data_structures::captures::Captures;\n+use rustc_data_structures::fingerprint::Fingerprint;\n use rustc_data_structures::fx::FxHashMap;\n use rustc_data_structures::fx::FxIndexMap;\n use rustc_data_structures::sorted_map::SortedIndexMultiMap;\n@@ -124,7 +123,7 @@ mod sty;\n // Data types\n \n pub struct ResolverOutputs {\n-    pub definitions: hir_map::Definitions,\n+    pub definitions: rustc_hir::definitions::Definitions,\n     pub cstore: Box<CrateStoreDyn>,\n     pub extern_crate_map: NodeMap<CrateNum>,\n     pub trait_map: TraitMap<NodeId>,\n@@ -2986,7 +2985,7 @@ impl<'tcx> TyCtxt<'tcx> {\n             let def_key = self.def_key(id);\n             match def_key.disambiguated_data.data {\n                 // The name of a constructor is that of its parent.\n-                hir_map::DefPathData::Ctor => {\n+                rustc_hir::definitions::DefPathData::Ctor => {\n                     self.item_name(DefId { krate: id.krate, index: def_key.parent.unwrap() })\n                 }\n                 _ => def_key.disambiguated_data.data.get_opt_name().unwrap_or_else(|| {"}, {"sha": "a932f334dde68abba1d8d5902a7f2662b00003b5", "filename": "src/librustc/ty/print/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d894f5eaf577422bb789564cc2029f833a7fcdf0/src%2Flibrustc%2Fty%2Fprint%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d894f5eaf577422bb789564cc2029f833a7fcdf0/src%2Flibrustc%2Fty%2Fprint%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Fprint%2Fmod.rs?ref=d894f5eaf577422bb789564cc2029f833a7fcdf0", "patch": "@@ -1,9 +1,9 @@\n-use crate::hir::map::{DefPathData, DisambiguatedDefPathData};\n use crate::ty::subst::{GenericArg, Subst};\n use crate::ty::{self, DefIdTree, Ty, TyCtxt};\n \n use rustc_data_structures::fx::FxHashSet;\n use rustc_hir::def_id::{CrateNum, DefId};\n+use rustc_hir::definitions::{DefPathData, DisambiguatedDefPathData};\n \n // `pretty` is a separate module only for organization.\n mod pretty;"}, {"sha": "8d5d6247f5c05334b8998a2900087e053feeeae9", "filename": "src/librustc/ty/print/pretty.rs", "status": "modified", "additions": 4, "deletions": 5, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/d894f5eaf577422bb789564cc2029f833a7fcdf0/src%2Flibrustc%2Fty%2Fprint%2Fpretty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d894f5eaf577422bb789564cc2029f833a7fcdf0/src%2Flibrustc%2Fty%2Fprint%2Fpretty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Fprint%2Fpretty.rs?ref=d894f5eaf577422bb789564cc2029f833a7fcdf0", "patch": "@@ -1,18 +1,17 @@\n-use crate::hir::map::{DefPathData, DisambiguatedDefPathData};\n use crate::middle::cstore::{ExternCrate, ExternCrateSource};\n use crate::middle::region;\n use crate::mir::interpret::{sign_extend, truncate, AllocId, ConstValue, Pointer, Scalar};\n use crate::ty::layout::{Integer, IntegerExt, Size};\n use crate::ty::subst::{GenericArg, GenericArgKind, Subst};\n use crate::ty::{self, DefIdTree, ParamConst, Ty, TyCtxt, TypeFoldable};\n-use rustc_hir as hir;\n-use rustc_hir::def::{DefKind, Namespace};\n-use rustc_hir::def_id::{CrateNum, DefId, CRATE_DEF_INDEX, LOCAL_CRATE};\n-\n use rustc_apfloat::ieee::{Double, Single};\n use rustc_apfloat::Float;\n use rustc_ast::ast;\n use rustc_attr::{SignedInt, UnsignedInt};\n+use rustc_hir as hir;\n+use rustc_hir::def::{DefKind, Namespace};\n+use rustc_hir::def_id::{CrateNum, DefId, CRATE_DEF_INDEX, LOCAL_CRATE};\n+use rustc_hir::definitions::{DefPathData, DisambiguatedDefPathData};\n use rustc_span::symbol::{kw, Symbol};\n use rustc_target::spec::abi::Abi;\n "}, {"sha": "155f792bd9d0ad92dde106a3e9f4a152f19ecd30", "filename": "src/librustc/ty/query/on_disk_cache.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/d894f5eaf577422bb789564cc2029f833a7fcdf0/src%2Flibrustc%2Fty%2Fquery%2Fon_disk_cache.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d894f5eaf577422bb789564cc2029f833a7fcdf0/src%2Flibrustc%2Fty%2Fquery%2Fon_disk_cache.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Fquery%2Fon_disk_cache.rs?ref=d894f5eaf577422bb789564cc2029f833a7fcdf0", "patch": "@@ -1,17 +1,17 @@\n use crate::dep_graph::{DepNodeIndex, SerializedDepNodeIndex};\n-use crate::hir::map::definitions::DefPathHash;\n-use crate::ich::{CachingSourceMapView, Fingerprint};\n use crate::mir::interpret::{AllocDecodingSession, AllocDecodingState};\n use crate::mir::{self, interpret};\n use crate::ty::codec::{self as ty_codec, TyDecoder, TyEncoder};\n use crate::ty::context::TyCtxt;\n use crate::ty::{self, Ty};\n use rustc_ast::ast::Ident;\n+use rustc_data_structures::fingerprint::Fingerprint;\n use rustc_data_structures::fx::FxHashMap;\n use rustc_data_structures::sync::{HashMapExt, Lock, Lrc, Once};\n use rustc_data_structures::thin_vec::ThinVec;\n use rustc_errors::Diagnostic;\n use rustc_hir::def_id::{CrateNum, DefId, DefIndex, LocalDefId, LOCAL_CRATE};\n+use rustc_hir::definitions::DefPathHash;\n use rustc_index::vec::{Idx, IndexVec};\n use rustc_serialize::{\n     opaque, Decodable, Decoder, Encodable, Encoder, SpecializedDecoder, SpecializedEncoder,\n@@ -20,6 +20,7 @@ use rustc_serialize::{\n use rustc_session::{CrateDisambiguator, Session};\n use rustc_span::hygiene::{ExpnId, SyntaxContext};\n use rustc_span::source_map::{SourceMap, StableSourceFileId};\n+use rustc_span::CachingSourceMapView;\n use rustc_span::{BytePos, SourceFile, Span, DUMMY_SP};\n use std::mem;\n "}, {"sha": "3aac03bd49a13342f0bc1849bdfae70a6e3e72e2", "filename": "src/librustc/ty/query/plumbing.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d894f5eaf577422bb789564cc2029f833a7fcdf0/src%2Flibrustc%2Fty%2Fquery%2Fplumbing.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d894f5eaf577422bb789564cc2029f833a7fcdf0/src%2Flibrustc%2Fty%2Fquery%2Fplumbing.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Fquery%2Fplumbing.rs?ref=d894f5eaf577422bb789564cc2029f833a7fcdf0", "patch": "@@ -667,7 +667,7 @@ impl<'tcx> TyCtxt<'tcx> {\n         dep_node: &DepNode,\n         dep_node_index: DepNodeIndex,\n     ) {\n-        use crate::ich::Fingerprint;\n+        use rustc_data_structures::fingerprint::Fingerprint;\n \n         assert!(\n             Some(self.dep_graph.fingerprint_of(dep_node_index))"}, {"sha": "0081794051f377ce3d2d8aeba9c119525ff307af", "filename": "src/librustc/ty/query/profiling_support.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d894f5eaf577422bb789564cc2029f833a7fcdf0/src%2Flibrustc%2Fty%2Fquery%2Fprofiling_support.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d894f5eaf577422bb789564cc2029f833a7fcdf0/src%2Flibrustc%2Fty%2Fquery%2Fprofiling_support.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Fquery%2Fprofiling_support.rs?ref=d894f5eaf577422bb789564cc2029f833a7fcdf0", "patch": "@@ -1,11 +1,11 @@\n-use crate::hir::map::definitions::DefPathData;\n use crate::ty::context::TyCtxt;\n use crate::ty::query::caches::QueryCache;\n use crate::ty::query::plumbing::QueryState;\n use measureme::{StringComponent, StringId};\n use rustc_data_structures::fx::FxHashMap;\n use rustc_data_structures::profiling::SelfProfiler;\n use rustc_hir::def_id::{CrateNum, DefId, DefIndex, CRATE_DEF_INDEX, LOCAL_CRATE};\n+use rustc_hir::definitions::DefPathData;\n use std::fmt::Debug;\n use std::io::Write;\n "}, {"sha": "ed9054fcffd91bc404a90b131f037578fa123eb7", "filename": "src/librustc/ty/trait_def.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d894f5eaf577422bb789564cc2029f833a7fcdf0/src%2Flibrustc%2Fty%2Ftrait_def.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d894f5eaf577422bb789564cc2029f833a7fcdf0/src%2Flibrustc%2Fty%2Ftrait_def.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Ftrait_def.rs?ref=d894f5eaf577422bb789564cc2029f833a7fcdf0", "patch": "@@ -1,11 +1,11 @@\n-use crate::hir::map::DefPathHash;\n use crate::ich::{self, StableHashingContext};\n use crate::traits::specialization_graph;\n use crate::ty::fast_reject;\n use crate::ty::fold::TypeFoldable;\n use crate::ty::{Ty, TyCtxt};\n use rustc_hir as hir;\n use rustc_hir::def_id::{CrateNum, DefId};\n+use rustc_hir::definitions::DefPathHash;\n use rustc_hir::HirId;\n \n use rustc_data_structures::fx::FxHashMap;"}, {"sha": "dab367a6639ed84d92d8dc4bf9ee6b1c136303a3", "filename": "src/librustc/ty/util.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d894f5eaf577422bb789564cc2029f833a7fcdf0/src%2Flibrustc%2Fty%2Futil.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d894f5eaf577422bb789564cc2029f833a7fcdf0/src%2Flibrustc%2Fty%2Futil.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Futil.rs?ref=d894f5eaf577422bb789564cc2029f833a7fcdf0", "patch": "@@ -1,6 +1,5 @@\n //! Miscellaneous type-system utilities that are too small to deserve their own modules.\n \n-use crate::hir::map::DefPathData;\n use crate::ich::NodeIdHashingMode;\n use crate::mir::interpret::{sign_extend, truncate};\n use crate::ty::layout::{Integer, IntegerExt, Size};\n@@ -17,6 +16,7 @@ use rustc_data_structures::stable_hasher::{HashStable, StableHasher};\n use rustc_hir as hir;\n use rustc_hir::def::DefKind;\n use rustc_hir::def_id::DefId;\n+use rustc_hir::definitions::DefPathData;\n use rustc_macros::HashStable;\n use rustc_span::Span;\n use rustc_target::abi::TargetDataLayout;"}, {"sha": "4e507a569dcd12ab812273699fe3f03c5f4eda12", "filename": "src/librustc_codegen_llvm/debuginfo/namespace.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d894f5eaf577422bb789564cc2029f833a7fcdf0/src%2Flibrustc_codegen_llvm%2Fdebuginfo%2Fnamespace.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d894f5eaf577422bb789564cc2029f833a7fcdf0/src%2Flibrustc_codegen_llvm%2Fdebuginfo%2Fnamespace.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_llvm%2Fdebuginfo%2Fnamespace.rs?ref=d894f5eaf577422bb789564cc2029f833a7fcdf0", "patch": "@@ -6,8 +6,8 @@ use rustc::ty::{self, Instance};\n use crate::common::CodegenCx;\n use crate::llvm;\n use crate::llvm::debuginfo::DIScope;\n-use rustc::hir::map::DefPathData;\n use rustc_hir::def_id::DefId;\n+use rustc_hir::definitions::DefPathData;\n \n pub fn mangled_name_of_instance<'a, 'tcx>(\n     cx: &CodegenCx<'a, 'tcx>,"}, {"sha": "9c22c38583c334d5e9e332d270a1374bc3376eb0", "filename": "src/librustc_infer/infer/error_reporting/mod.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/d894f5eaf577422bb789564cc2029f833a7fcdf0/src%2Flibrustc_infer%2Finfer%2Ferror_reporting%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d894f5eaf577422bb789564cc2029f833a7fcdf0/src%2Flibrustc_infer%2Finfer%2Ferror_reporting%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_infer%2Finfer%2Ferror_reporting%2Fmod.rs?ref=d894f5eaf577422bb789564cc2029f833a7fcdf0", "patch": "@@ -55,7 +55,6 @@ use crate::traits::{\n     IfExpressionCause, MatchExpressionArmCause, ObligationCause, ObligationCauseCode,\n };\n \n-use rustc::hir::map;\n use rustc::middle::region;\n use rustc::ty::error::TypeError;\n use rustc::ty::{\n@@ -549,7 +548,7 @@ impl<'a, 'tcx> InferCtxt<'a, 'tcx> {\n         terr: &TypeError<'tcx>,\n     ) {\n         use hir::def_id::CrateNum;\n-        use map::DisambiguatedDefPathData;\n+        use rustc_hir::definitions::DisambiguatedDefPathData;\n         use ty::print::Printer;\n         use ty::subst::GenericArg;\n "}, {"sha": "7cf0b4c44a6aa57c7d07bf78f4aaae99884af950", "filename": "src/librustc_interface/passes.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d894f5eaf577422bb789564cc2029f833a7fcdf0/src%2Flibrustc_interface%2Fpasses.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d894f5eaf577422bb789564cc2029f833a7fcdf0/src%2Flibrustc_interface%2Fpasses.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_interface%2Fpasses.rs?ref=d894f5eaf577422bb789564cc2029f833a7fcdf0", "patch": "@@ -5,7 +5,6 @@ use crate::util;\n use log::{info, log_enabled, warn};\n use rustc::arena::Arena;\n use rustc::dep_graph::DepGraph;\n-use rustc::hir::map::Definitions;\n use rustc::middle;\n use rustc::middle::cstore::{CrateStore, MetadataLoader, MetadataLoaderDyn};\n use rustc::ty::steal::Steal;\n@@ -20,6 +19,7 @@ use rustc_data_structures::{box_region_allow_access, declare_box_region_type, pa\n use rustc_errors::PResult;\n use rustc_expand::base::ExtCtxt;\n use rustc_hir::def_id::{CrateNum, LOCAL_CRATE};\n+use rustc_hir::definitions::Definitions;\n use rustc_hir::Crate;\n use rustc_lint::LintStore;\n use rustc_mir as mir;"}, {"sha": "a807fa6b8d4661c0b8d4c921551359792ee61f86", "filename": "src/librustc_metadata/creader.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d894f5eaf577422bb789564cc2029f833a7fcdf0/src%2Flibrustc_metadata%2Fcreader.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d894f5eaf577422bb789564cc2029f833a7fcdf0/src%2Flibrustc_metadata%2Fcreader.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_metadata%2Fcreader.rs?ref=d894f5eaf577422bb789564cc2029f833a7fcdf0", "patch": "@@ -3,7 +3,6 @@\n use crate::locator::{CrateLocator, CratePaths};\n use crate::rmeta::{CrateDep, CrateMetadata, CrateNumMap, CrateRoot, MetadataBlob};\n \n-use rustc::hir::map::Definitions;\n use rustc::middle::cstore::DepKind;\n use rustc::middle::cstore::{CrateSource, ExternCrate, ExternCrateSource, MetadataLoaderDyn};\n use rustc::ty::TyCtxt;\n@@ -14,6 +13,7 @@ use rustc_data_structures::sync::Lrc;\n use rustc_errors::struct_span_err;\n use rustc_expand::base::SyntaxExtension;\n use rustc_hir::def_id::{CrateNum, LOCAL_CRATE};\n+use rustc_hir::definitions::Definitions;\n use rustc_index::vec::IndexVec;\n use rustc_session::config;\n use rustc_session::output::validate_crate_name;"}, {"sha": "57415c0a6070dddd66b65584a65fd7ab8b23f8d8", "filename": "src/librustc_metadata/rmeta/mod.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/d894f5eaf577422bb789564cc2029f833a7fcdf0/src%2Flibrustc_metadata%2Frmeta%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d894f5eaf577422bb789564cc2029f833a7fcdf0/src%2Flibrustc_metadata%2Frmeta%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_metadata%2Frmeta%2Fmod.rs?ref=d894f5eaf577422bb789564cc2029f833a7fcdf0", "patch": "@@ -2,7 +2,6 @@ use decoder::Metadata;\n use table::{Table, TableBuilder};\n \n use rustc::hir::exports::Export;\n-use rustc::hir::map;\n use rustc::middle::cstore::{DepKind, ForeignModule, LinkagePreference, NativeLibrary};\n use rustc::middle::exported_symbols::{ExportedSymbol, SymbolExportLevel};\n use rustc::middle::lang_items;\n@@ -194,7 +193,7 @@ crate struct CrateRoot<'tcx> {\n     native_libraries: Lazy<[NativeLibrary]>,\n     foreign_modules: Lazy<[ForeignModule]>,\n     source_map: Lazy<[rustc_span::SourceFile]>,\n-    def_path_table: Lazy<map::definitions::DefPathTable>,\n+    def_path_table: Lazy<rustc_hir::definitions::DefPathTable>,\n     impls: Lazy<[TraitImpls]>,\n     interpret_alloc_index: Lazy<[u32]>,\n "}, {"sha": "0d9582c7323cbe0a4c2286c2d1ba9d2c79c0e8c9", "filename": "src/librustc_mir/interpret/intrinsics/type_name.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d894f5eaf577422bb789564cc2029f833a7fcdf0/src%2Flibrustc_mir%2Finterpret%2Fintrinsics%2Ftype_name.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d894f5eaf577422bb789564cc2029f833a7fcdf0/src%2Flibrustc_mir%2Finterpret%2Fintrinsics%2Ftype_name.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Finterpret%2Fintrinsics%2Ftype_name.rs?ref=d894f5eaf577422bb789564cc2029f833a7fcdf0", "patch": "@@ -1,4 +1,3 @@\n-use rustc::hir::map::{DefPathData, DisambiguatedDefPathData};\n use rustc::mir::interpret::Allocation;\n use rustc::ty::{\n     self,\n@@ -7,6 +6,7 @@ use rustc::ty::{\n     Ty, TyCtxt,\n };\n use rustc_hir::def_id::CrateNum;\n+use rustc_hir::definitions::{DefPathData, DisambiguatedDefPathData};\n use std::fmt::Write;\n \n struct AbsolutePathPrinter<'tcx> {"}, {"sha": "ed304572a06218a1b10705f08627c52d6625d440", "filename": "src/librustc_resolve/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d894f5eaf577422bb789564cc2029f833a7fcdf0/src%2Flibrustc_resolve%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d894f5eaf577422bb789564cc2029f833a7fcdf0/src%2Flibrustc_resolve%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2Flib.rs?ref=d894f5eaf577422bb789564cc2029f833a7fcdf0", "patch": "@@ -17,7 +17,6 @@ pub use rustc_hir::def::{Namespace, PerNS};\n use Determinacy::*;\n \n use rustc::hir::exports::ExportMap;\n-use rustc::hir::map::{DefKey, Definitions};\n use rustc::middle::cstore::{CrateStore, MetadataLoaderDyn};\n use rustc::span_bug;\n use rustc::ty::query::Providers;\n@@ -38,6 +37,7 @@ use rustc_expand::base::SyntaxExtension;\n use rustc_hir::def::Namespace::*;\n use rustc_hir::def::{self, CtorOf, DefKind, NonMacroAttrKind, PartialRes};\n use rustc_hir::def_id::{CrateNum, DefId, DefIdMap, CRATE_DEF_INDEX};\n+use rustc_hir::definitions::{DefKey, Definitions};\n use rustc_hir::PrimTy::{self, Bool, Char, Float, Int, Str, Uint};\n use rustc_hir::{GlobMap, TraitMap};\n use rustc_metadata::creader::{CStore, CrateLoader};"}, {"sha": "a891d60b0687b7482c1533642888eaeafdbd35a7", "filename": "src/librustc_symbol_mangling/legacy.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d894f5eaf577422bb789564cc2029f833a7fcdf0/src%2Flibrustc_symbol_mangling%2Flegacy.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d894f5eaf577422bb789564cc2029f833a7fcdf0/src%2Flibrustc_symbol_mangling%2Flegacy.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_symbol_mangling%2Flegacy.rs?ref=d894f5eaf577422bb789564cc2029f833a7fcdf0", "patch": "@@ -1,4 +1,3 @@\n-use rustc::hir::map::{DefPathData, DisambiguatedDefPathData};\n use rustc::ich::NodeIdHashingMode;\n use rustc::mir::interpret::{ConstValue, Scalar};\n use rustc::ty::print::{PrettyPrinter, Print, Printer};\n@@ -7,6 +6,7 @@ use rustc::ty::{self, Instance, Ty, TyCtxt, TypeFoldable};\n use rustc::util::common::record_time;\n use rustc_data_structures::stable_hasher::{HashStable, StableHasher};\n use rustc_hir::def_id::CrateNum;\n+use rustc_hir::definitions::{DefPathData, DisambiguatedDefPathData};\n \n use log::debug;\n "}, {"sha": "fb2fde8513ac9f4c8c93018479b7c424c507d81e", "filename": "src/librustc_symbol_mangling/v0.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d894f5eaf577422bb789564cc2029f833a7fcdf0/src%2Flibrustc_symbol_mangling%2Fv0.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d894f5eaf577422bb789564cc2029f833a7fcdf0/src%2Flibrustc_symbol_mangling%2Fv0.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_symbol_mangling%2Fv0.rs?ref=d894f5eaf577422bb789564cc2029f833a7fcdf0", "patch": "@@ -1,4 +1,3 @@\n-use rustc::hir::map::{DefPathData, DisambiguatedDefPathData};\n use rustc::ty::print::{Print, Printer};\n use rustc::ty::subst::{GenericArg, GenericArgKind, Subst};\n use rustc::ty::{self, Instance, Ty, TyCtxt, TypeFoldable};\n@@ -7,6 +6,7 @@ use rustc_data_structures::base_n;\n use rustc_data_structures::fx::{FxHashMap, FxHashSet};\n use rustc_hir as hir;\n use rustc_hir::def_id::{CrateNum, DefId};\n+use rustc_hir::definitions::{DefPathData, DisambiguatedDefPathData};\n use rustc_target::spec::abi::Abi;\n \n use std::fmt::Write;"}]}