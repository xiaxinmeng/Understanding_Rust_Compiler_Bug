{"sha": "8dc1e42515adbf0946a235b464b2fd41619cec04", "node_id": "MDY6Q29tbWl0NzI0NzEyOjhkYzFlNDI1MTVhZGJmMDk0NmEyMzViNDY0YjJmZDQxNjE5Y2VjMDQ=", "commit": {"author": {"name": "Yashhwanth Ram", "email": "ryr397@gmail.com", "date": "2020-07-02T06:03:37Z"}, "committer": {"name": "Yashhwanth Ram", "email": "ryr397@gmail.com", "date": "2020-07-02T06:03:37Z"}, "message": "libstd/net/tcp.rs: #![deny(unsafe_op_in_unsafe_fn)]\nEnclose unsafe operations in unsafe blocks", "tree": {"sha": "06c4ad8baa3ad098256a1c76ed639af30a3c8346", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/06c4ad8baa3ad098256a1c76ed639af30a3c8346"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8dc1e42515adbf0946a235b464b2fd41619cec04", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8dc1e42515adbf0946a235b464b2fd41619cec04", "html_url": "https://github.com/rust-lang/rust/commit/8dc1e42515adbf0946a235b464b2fd41619cec04", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8dc1e42515adbf0946a235b464b2fd41619cec04/comments", "author": {"login": "ryr3", "id": 17092480, "node_id": "MDQ6VXNlcjE3MDkyNDgw", "avatar_url": "https://avatars.githubusercontent.com/u/17092480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ryr3", "html_url": "https://github.com/ryr3", "followers_url": "https://api.github.com/users/ryr3/followers", "following_url": "https://api.github.com/users/ryr3/following{/other_user}", "gists_url": "https://api.github.com/users/ryr3/gists{/gist_id}", "starred_url": "https://api.github.com/users/ryr3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ryr3/subscriptions", "organizations_url": "https://api.github.com/users/ryr3/orgs", "repos_url": "https://api.github.com/users/ryr3/repos", "events_url": "https://api.github.com/users/ryr3/events{/privacy}", "received_events_url": "https://api.github.com/users/ryr3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ryr3", "id": 17092480, "node_id": "MDQ6VXNlcjE3MDkyNDgw", "avatar_url": "https://avatars.githubusercontent.com/u/17092480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ryr3", "html_url": "https://github.com/ryr3", "followers_url": "https://api.github.com/users/ryr3/followers", "following_url": "https://api.github.com/users/ryr3/following{/other_user}", "gists_url": "https://api.github.com/users/ryr3/gists{/gist_id}", "starred_url": "https://api.github.com/users/ryr3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ryr3/subscriptions", "organizations_url": "https://api.github.com/users/ryr3/orgs", "repos_url": "https://api.github.com/users/ryr3/repos", "events_url": "https://api.github.com/users/ryr3/events{/privacy}", "received_events_url": "https://api.github.com/users/ryr3/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9491f18c5de3ff1c4bf9c3fdacf52d9859e26f7c", "url": "https://api.github.com/repos/rust-lang/rust/commits/9491f18c5de3ff1c4bf9c3fdacf52d9859e26f7c", "html_url": "https://github.com/rust-lang/rust/commit/9491f18c5de3ff1c4bf9c3fdacf52d9859e26f7c"}], "stats": {"total": 7, "additions": 5, "deletions": 2}, "files": [{"sha": "47b8532b7a6e6d1bdada556bbc32b8bc4f8f645b", "filename": "src/libstd/net/tcp.rs", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/8dc1e42515adbf0946a235b464b2fd41619cec04/src%2Flibstd%2Fnet%2Ftcp.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8dc1e42515adbf0946a235b464b2fd41619cec04/src%2Flibstd%2Fnet%2Ftcp.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fnet%2Ftcp.rs?ref=8dc1e42515adbf0946a235b464b2fd41619cec04", "patch": "@@ -1,3 +1,4 @@\n+#![deny(unsafe_op_in_unsafe_fn)]\n use crate::io::prelude::*;\n \n use crate::fmt;\n@@ -583,7 +584,8 @@ impl Read for TcpStream {\n \n     #[inline]\n     unsafe fn initializer(&self) -> Initializer {\n-        Initializer::nop()\n+        // SAFETY: Read is guaranteed to work on uninitialized memory\n+        unsafe { Initializer::nop() }\n     }\n }\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n@@ -622,7 +624,8 @@ impl Read for &TcpStream {\n \n     #[inline]\n     unsafe fn initializer(&self) -> Initializer {\n-        Initializer::nop()\n+        // SAFETY: Read is guaranteed to work on uninitialized memory\n+        unsafe { Initializer::nop() }\n     }\n }\n #[stable(feature = \"rust1\", since = \"1.0.0\")]"}]}