{"sha": "0d9a6edb50ede7496b61e8b6b2eea9944439481a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjBkOWE2ZWRiNTBlZGU3NDk2YjYxZThiNmIyZWVhOTk0NDQzOTQ4MWE=", "commit": {"author": {"name": "Yuki Okushi", "email": "huyuumi.dev@gmail.com", "date": "2021-03-14T04:07:31Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-03-14T04:07:31Z"}, "message": "Rollup merge of #82789 - csmoe:issue-82772, r=estebank\n\nGet with field index from pattern slice instead of directly indexing\n\nCloses #82772\nr? ``@estebank``\n\nhttps://github.com/rust-lang/rust/pull/82789#issuecomment-796921977\n> ``@estebank`` So the real cause is we only generate single pattern for Box here\nhttps://github.com/csmoe/rust/blob/615b03aeaa8ce9819de7828740ab3cd7def4fa76/compiler/rustc_mir_build/src/thir/pattern/deconstruct_pat.rs#L1130-L1132\nBut in the replacing function, it tries to index on the 1-length pattern slice with field 1, thus out of bounds.\nhttps://github.com/csmoe/rust/blob/615b03aeaa8ce9819de7828740ab3cd7def4fa76/compiler/rustc_mir_build/src/thir/pattern/deconstruct_pat.rs#L1346", "tree": {"sha": "7eb351c1551a289d9024c2c007417dcba8249ebb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7eb351c1551a289d9024c2c007417dcba8249ebb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0d9a6edb50ede7496b61e8b6b2eea9944439481a", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJgTYwDCRBK7hj4Ov3rIwAAdHIIAHrGXmoAl21vRpRuihervJCY\nE93XZcngMUXHmy3BcCbUZRsHhLpIOQUymof+8ZMYkgklj8uUeN9vhrUKekmFw6wj\nIPLNgBrZsttaPp5rIaCbpj1l+ryBdLhe4zWr7lEU132WU2ZmRVLezsSGonQ7UkQm\nHvW9SyE9Qihhlg8/sItr+GIST5D/m0O9vpw//+8aFHwDF40Jb8h08tdTu4BJJqqU\n2OD5CrL8viKJnRtjzs5umavDp5I+n6tDwl7y8uIbLIZy/pn2k15iMj9LnnzN3pRc\ncG4hh3Wk0ZKzwC8pYT+G75+7hf0p1e8NwUTg6+1g/loSqH/u/xEvwk2nLsKgiL4=\n=iCG/\n-----END PGP SIGNATURE-----\n", "payload": "tree 7eb351c1551a289d9024c2c007417dcba8249ebb\nparent f0ebc1041042b5246bd0f7539c52a52a84687770\nparent 77fb6a0f32408925f212d1fb877e900f9736840d\nauthor Yuki Okushi <huyuumi.dev@gmail.com> 1615694851 +0900\ncommitter GitHub <noreply@github.com> 1615694851 +0900\n\nRollup merge of #82789 - csmoe:issue-82772, r=estebank\n\nGet with field index from pattern slice instead of directly indexing\n\nCloses #82772\nr? ``@estebank``\n\nhttps://github.com/rust-lang/rust/pull/82789#issuecomment-796921977\n> ``@estebank`` So the real cause is we only generate single pattern for Box here\nhttps://github.com/csmoe/rust/blob/615b03aeaa8ce9819de7828740ab3cd7def4fa76/compiler/rustc_mir_build/src/thir/pattern/deconstruct_pat.rs#L1130-L1132\nBut in the replacing function, it tries to index on the 1-length pattern slice with field 1, thus out of bounds.\nhttps://github.com/csmoe/rust/blob/615b03aeaa8ce9819de7828740ab3cd7def4fa76/compiler/rustc_mir_build/src/thir/pattern/deconstruct_pat.rs#L1346\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0d9a6edb50ede7496b61e8b6b2eea9944439481a", "html_url": "https://github.com/rust-lang/rust/commit/0d9a6edb50ede7496b61e8b6b2eea9944439481a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0d9a6edb50ede7496b61e8b6b2eea9944439481a/comments", "author": {"login": "JohnTitor", "id": 25030997, "node_id": "MDQ6VXNlcjI1MDMwOTk3", "avatar_url": "https://avatars.githubusercontent.com/u/25030997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JohnTitor", "html_url": "https://github.com/JohnTitor", "followers_url": "https://api.github.com/users/JohnTitor/followers", "following_url": "https://api.github.com/users/JohnTitor/following{/other_user}", "gists_url": "https://api.github.com/users/JohnTitor/gists{/gist_id}", "starred_url": "https://api.github.com/users/JohnTitor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JohnTitor/subscriptions", "organizations_url": "https://api.github.com/users/JohnTitor/orgs", "repos_url": "https://api.github.com/users/JohnTitor/repos", "events_url": "https://api.github.com/users/JohnTitor/events{/privacy}", "received_events_url": "https://api.github.com/users/JohnTitor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f0ebc1041042b5246bd0f7539c52a52a84687770", "url": "https://api.github.com/repos/rust-lang/rust/commits/f0ebc1041042b5246bd0f7539c52a52a84687770", "html_url": "https://github.com/rust-lang/rust/commit/f0ebc1041042b5246bd0f7539c52a52a84687770"}, {"sha": "77fb6a0f32408925f212d1fb877e900f9736840d", "url": "https://api.github.com/repos/rust-lang/rust/commits/77fb6a0f32408925f212d1fb877e900f9736840d", "html_url": "https://github.com/rust-lang/rust/commit/77fb6a0f32408925f212d1fb877e900f9736840d"}], "stats": {"total": 50, "additions": 44, "deletions": 6}, "files": [{"sha": "8c740a7ec155a3406f6ba5be9634a31a8f0c6b3c", "filename": "compiler/rustc_mir_build/src/thir/pattern/deconstruct_pat.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/0d9a6edb50ede7496b61e8b6b2eea9944439481a/compiler%2Frustc_mir_build%2Fsrc%2Fthir%2Fpattern%2Fdeconstruct_pat.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0d9a6edb50ede7496b61e8b6b2eea9944439481a/compiler%2Frustc_mir_build%2Fsrc%2Fthir%2Fpattern%2Fdeconstruct_pat.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir_build%2Fsrc%2Fthir%2Fpattern%2Fdeconstruct_pat.rs?ref=0d9a6edb50ede7496b61e8b6b2eea9944439481a", "patch": "@@ -1343,7 +1343,9 @@ impl<'p, 'tcx> Fields<'p, 'tcx> {\n         match &mut fields {\n             Fields::Vec(pats) => {\n                 for (i, pat) in new_pats {\n-                    pats[i] = pat\n+                    if let Some(p) = pats.get_mut(i) {\n+                        *p = pat;\n+                    }\n                 }\n             }\n             Fields::Filtered { fields, .. } => {"}, {"sha": "763ab952738b7a27a122dad3691b45ee934dd4df", "filename": "src/test/ui/structs/struct-variant-privacy-xc.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/0d9a6edb50ede7496b61e8b6b2eea9944439481a/src%2Ftest%2Fui%2Fstructs%2Fstruct-variant-privacy-xc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0d9a6edb50ede7496b61e8b6b2eea9944439481a/src%2Ftest%2Fui%2Fstructs%2Fstruct-variant-privacy-xc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fstructs%2Fstruct-variant-privacy-xc.rs?ref=0d9a6edb50ede7496b61e8b6b2eea9944439481a", "patch": "@@ -1,7 +1,8 @@\n // aux-build:struct_variant_privacy.rs\n extern crate struct_variant_privacy;\n \n-fn f(b: struct_variant_privacy::Bar) { //~ ERROR enum `Bar` is private\n+fn f(b: struct_variant_privacy::Bar) {\n+    //~^ ERROR enum `Bar` is private\n     match b {\n         struct_variant_privacy::Bar::Baz { a: _a } => {} //~ ERROR enum `Bar` is private\n     }"}, {"sha": "1c1caaef8b79d17d8bc50506de192ede47d24ac1", "filename": "src/test/ui/structs/struct-variant-privacy-xc.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0d9a6edb50ede7496b61e8b6b2eea9944439481a/src%2Ftest%2Fui%2Fstructs%2Fstruct-variant-privacy-xc.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/0d9a6edb50ede7496b61e8b6b2eea9944439481a/src%2Ftest%2Fui%2Fstructs%2Fstruct-variant-privacy-xc.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fstructs%2Fstruct-variant-privacy-xc.stderr?ref=0d9a6edb50ede7496b61e8b6b2eea9944439481a", "patch": "@@ -11,7 +11,7 @@ LL | enum Bar {\n    | ^^^^^^^^\n \n error[E0603]: enum `Bar` is private\n-  --> $DIR/struct-variant-privacy-xc.rs:6:33\n+  --> $DIR/struct-variant-privacy-xc.rs:7:33\n    |\n LL |         struct_variant_privacy::Bar::Baz { a: _a } => {}\n    |                                 ^^^ private enum"}, {"sha": "fcdf9a22baf4b5cd9f92419bde0bfcacf8844050", "filename": "src/test/ui/structs/struct-variant-privacy.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/0d9a6edb50ede7496b61e8b6b2eea9944439481a/src%2Ftest%2Fui%2Fstructs%2Fstruct-variant-privacy.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0d9a6edb50ede7496b61e8b6b2eea9944439481a/src%2Ftest%2Fui%2Fstructs%2Fstruct-variant-privacy.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fstructs%2Fstruct-variant-privacy.rs?ref=0d9a6edb50ede7496b61e8b6b2eea9944439481a", "patch": "@@ -1,10 +1,11 @@\n mod foo {\n     enum Bar {\n-        Baz { a: isize }\n+        Baz { a: isize },\n     }\n }\n \n-fn f(b: foo::Bar) { //~ ERROR enum `Bar` is private\n+fn f(b: foo::Bar) {\n+    //~^ ERROR enum `Bar` is private\n     match b {\n         foo::Bar::Baz { a: _a } => {} //~ ERROR enum `Bar` is private\n     }"}, {"sha": "eafd26c716f116645776149ef8fe61f2e516853a", "filename": "src/test/ui/structs/struct-variant-privacy.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0d9a6edb50ede7496b61e8b6b2eea9944439481a/src%2Ftest%2Fui%2Fstructs%2Fstruct-variant-privacy.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/0d9a6edb50ede7496b61e8b6b2eea9944439481a/src%2Ftest%2Fui%2Fstructs%2Fstruct-variant-privacy.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fstructs%2Fstruct-variant-privacy.stderr?ref=0d9a6edb50ede7496b61e8b6b2eea9944439481a", "patch": "@@ -11,7 +11,7 @@ LL |     enum Bar {\n    |     ^^^^^^^^\n \n error[E0603]: enum `Bar` is private\n-  --> $DIR/struct-variant-privacy.rs:9:14\n+  --> $DIR/struct-variant-privacy.rs:10:14\n    |\n LL |         foo::Bar::Baz { a: _a } => {}\n    |              ^^^ private enum"}, {"sha": "326273bfe9229a1950c27e58140ba47ebbc39129", "filename": "src/test/ui/typeck/issue-82772.rs", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/0d9a6edb50ede7496b61e8b6b2eea9944439481a/src%2Ftest%2Fui%2Ftypeck%2Fissue-82772.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0d9a6edb50ede7496b61e8b6b2eea9944439481a/src%2Ftest%2Fui%2Ftypeck%2Fissue-82772.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftypeck%2Fissue-82772.rs?ref=0d9a6edb50ede7496b61e8b6b2eea9944439481a", "patch": "@@ -0,0 +1,13 @@\n+// edition:2018\n+\n+fn main() {\n+    use a::ModPrivateStruct;\n+    let Box { 0: _, .. }: Box<()>; //~ ERROR field `0` of\n+    let Box { 1: _, .. }: Box<()>; //~ ERROR field `1` of\n+    let ModPrivateStruct { 1: _, .. } = ModPrivateStruct::default(); //~ ERROR field `1` of\n+}\n+\n+mod a {\n+    #[derive(Default)]\n+    pub struct ModPrivateStruct(u8, u8);\n+}"}, {"sha": "321143cb9683d79e92b1f544f485c931673cdce7", "filename": "src/test/ui/typeck/issue-82772.stderr", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/0d9a6edb50ede7496b61e8b6b2eea9944439481a/src%2Ftest%2Fui%2Ftypeck%2Fissue-82772.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/0d9a6edb50ede7496b61e8b6b2eea9944439481a/src%2Ftest%2Fui%2Ftypeck%2Fissue-82772.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftypeck%2Fissue-82772.stderr?ref=0d9a6edb50ede7496b61e8b6b2eea9944439481a", "patch": "@@ -0,0 +1,21 @@\n+error[E0451]: field `0` of struct `Box` is private\n+  --> $DIR/issue-82772.rs:5:15\n+   |\n+LL |     let Box { 0: _, .. }: Box<()>;\n+   |               ^^^^ private field\n+\n+error[E0451]: field `1` of struct `Box` is private\n+  --> $DIR/issue-82772.rs:6:15\n+   |\n+LL |     let Box { 1: _, .. }: Box<()>;\n+   |               ^^^^ private field\n+\n+error[E0451]: field `1` of struct `ModPrivateStruct` is private\n+  --> $DIR/issue-82772.rs:7:28\n+   |\n+LL |     let ModPrivateStruct { 1: _, .. } = ModPrivateStruct::default();\n+   |                            ^^^^ private field\n+\n+error: aborting due to 3 previous errors\n+\n+For more information about this error, try `rustc --explain E0451`."}]}