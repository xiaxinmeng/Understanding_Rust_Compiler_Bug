{"sha": "bc51842d4f4e9772ac7caf8f04ff00725b291e53", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJjNTE4NDJkNGY0ZTk3NzJhYzdjYWY4ZjA0ZmYwMDcyNWIyOTFlNTM=", "commit": {"author": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2011-03-17T18:23:17Z"}, "committer": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2011-03-17T18:23:17Z"}, "message": "rustc: Don't go over inner functions' locals during the writeback phase of typechecking", "tree": {"sha": "e7ba5a2a9605afb88cd8dd1908c79bb5a76056ca", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e7ba5a2a9605afb88cd8dd1908c79bb5a76056ca"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/bc51842d4f4e9772ac7caf8f04ff00725b291e53", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/bc51842d4f4e9772ac7caf8f04ff00725b291e53", "html_url": "https://github.com/rust-lang/rust/commit/bc51842d4f4e9772ac7caf8f04ff00725b291e53", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/bc51842d4f4e9772ac7caf8f04ff00725b291e53/comments", "author": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "84321d1f59232f547aefff16667b8a68f2c8bb57", "url": "https://api.github.com/repos/rust-lang/rust/commits/84321d1f59232f547aefff16667b8a68f2c8bb57", "html_url": "https://github.com/rust-lang/rust/commit/84321d1f59232f547aefff16667b8a68f2c8bb57"}], "stats": {"total": 27, "additions": 22, "deletions": 5}, "files": [{"sha": "12226d708015f02be9339ba5e99bbc0b81f850d4", "filename": "src/comp/middle/typeck.rs", "status": "modified", "additions": 22, "deletions": 5, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/bc51842d4f4e9772ac7caf8f04ff00725b291e53/src%2Fcomp%2Fmiddle%2Ftypeck.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bc51842d4f4e9772ac7caf8f04ff00725b291e53/src%2Fcomp%2Fmiddle%2Ftypeck.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Ftypeck.rs?ref=bc51842d4f4e9772ac7caf8f04ff00725b291e53", "patch": "@@ -1437,8 +1437,10 @@ fn demand_block(&@fn_ctxt fcx, @ty.t expected, &ast.block bloc) -> ast.block {\n \n // Writeback: the phase that writes inferred types back into the AST.\n \n-fn writeback_local(&@fn_ctxt fcx, &span sp, @ast.local local)\n+fn writeback_local(&option.t[@fn_ctxt] env, &span sp, @ast.local local)\n         -> @ast.decl {\n+    auto fcx = option.get[@fn_ctxt](env);\n+\n     if (!fcx.locals.contains_key(local.id)) {\n         fcx.ccx.sess.span_err(sp, \"unable to determine type of local: \"\n                               + local.ident);\n@@ -1452,10 +1454,25 @@ fn writeback_local(&@fn_ctxt fcx, &span sp, @ast.local local)\n }\n \n fn writeback(&@fn_ctxt fcx, &ast.block block) -> ast.block {\n-    auto fld = fold.new_identity_fold[@fn_ctxt]();\n-    auto f = writeback_local;\n-    fld = @rec(fold_decl_local = f with *fld);\n-    ret fold.fold_block[@fn_ctxt](fcx, fld, block);\n+    fn update_env_for_item(&option.t[@fn_ctxt] env, @ast.item i)\n+            -> option.t[@fn_ctxt] {\n+        ret none[@fn_ctxt];\n+    }\n+    fn keep_going(&option.t[@fn_ctxt] env) -> bool {\n+        ret !option.is_none[@fn_ctxt](env);\n+    }\n+\n+    auto fld = fold.new_identity_fold[option.t[@fn_ctxt]]();\n+    auto wbl = writeback_local;\n+    auto uefi = update_env_for_item;\n+    auto kg = keep_going;\n+    fld = @rec(\n+        fold_decl_local = wbl,\n+        update_env_for_item = uefi,\n+        keep_going = kg\n+        with *fld\n+    );\n+    ret fold.fold_block[option.t[@fn_ctxt]](some[@fn_ctxt](fcx), fld, block);\n }\n \n // AST fragment checking"}]}