{"sha": "092cae12f9f5bb077f189a62ef03ef634a91edf4", "node_id": "MDY6Q29tbWl0NzI0NzEyOjA5MmNhZTEyZjlmNWJiMDc3ZjE4OWE2MmVmMDNlZjYzNGE5MWVkZjQ=", "commit": {"author": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2020-03-14T13:48:04Z"}, "committer": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2020-03-14T13:48:04Z"}, "message": "Dont single step into macros\n\nFixes #782", "tree": {"sha": "bc0ef40ee92ce5a94a28c22379a29b80771ab16b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bc0ef40ee92ce5a94a28c22379a29b80771ab16b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/092cae12f9f5bb077f189a62ef03ef634a91edf4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/092cae12f9f5bb077f189a62ef03ef634a91edf4", "html_url": "https://github.com/rust-lang/rust/commit/092cae12f9f5bb077f189a62ef03ef634a91edf4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/092cae12f9f5bb077f189a62ef03ef634a91edf4/comments", "author": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ce4c514001f33d26396669e000923c4d7991b809", "url": "https://api.github.com/repos/rust-lang/rust/commits/ce4c514001f33d26396669e000923c4d7991b809", "html_url": "https://github.com/rust-lang/rust/commit/ce4c514001f33d26396669e000923c4d7991b809"}], "stats": {"total": 15, "additions": 15, "deletions": 0}, "files": [{"sha": "7997ae33d0ecd93af9a89d6c69f8b02dd452f042", "filename": "src/debuginfo/line_info.rs", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/092cae12f9f5bb077f189a62ef03ef634a91edf4/src%2Fdebuginfo%2Fline_info.rs", "raw_url": "https://github.com/rust-lang/rust/raw/092cae12f9f5bb077f189a62ef03ef634a91edf4/src%2Fdebuginfo%2Fline_info.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdebuginfo%2Fline_info.rs?ref=092cae12f9f5bb077f189a62ef03ef634a91edf4", "patch": "@@ -122,8 +122,23 @@ impl<'a, 'tcx> FunctionDebugContext<'a, 'tcx> {\n         blocks.sort_by_key(|block| func.offsets[*block]); // Ensure inst offsets always increase\n \n         let line_strings = &mut self.debug_context.dwarf.line_strings;\n+        let function_span = self.mir.span;\n         let mut last_file = None;\n         let mut create_row_for_span = |line_program: &mut LineProgram, span: Span| {\n+            // Based on https://github.com/rust-lang/rust/blob/e369d87b015a84653343032833d65d0545fd3f26/src/librustc_codegen_ssa/mir/mod.rs#L116-L131\n+            // In order to have a good line stepping behavior in debugger, we overwrite debug\n+            // locations of macro expansions with that of the outermost expansion site\n+            // (unless the crate is being compiled with `-Z debug-macros`).\n+            let span = if !span.from_expansion() ||\n+                tcx.sess.opts.debugging_opts.debug_macros {\n+                span\n+            } else {\n+                // Walk up the macro expansion chain until we reach a non-expanded span.\n+                // We also stop at the function body level because no line stepping can occur\n+                // at the level above that.\n+                rustc_span::hygiene::walk_chain(span, function_span.ctxt())\n+            };\n+\n             let loc = tcx.sess.source_map().lookup_char_pos(span.lo());\n \n             // line_program_add_file is very slow."}]}