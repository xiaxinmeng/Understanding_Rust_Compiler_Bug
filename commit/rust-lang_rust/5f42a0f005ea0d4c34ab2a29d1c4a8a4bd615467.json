{"sha": "5f42a0f005ea0d4c34ab2a29d1c4a8a4bd615467", "node_id": "MDY6Q29tbWl0NzI0NzEyOjVmNDJhMGYwMDVlYTBkNGMzNGFiMmEyOWQxYzRhOGE0YmQ2MTU0Njc=", "commit": {"author": {"name": "Oliver Schneider", "email": "github35764891676564198441@oli-obk.de", "date": "2018-09-11T11:49:10Z"}, "committer": {"name": "Oliver Schneider", "email": "github35764891676564198441@oli-obk.de", "date": "2018-09-11T11:49:10Z"}, "message": "Change debug printing to print in the old concise style", "tree": {"sha": "e4fb2990bb5f27eac019f212ecff50b92744c372", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e4fb2990bb5f27eac019f212ecff50b92744c372"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5f42a0f005ea0d4c34ab2a29d1c4a8a4bd615467", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5f42a0f005ea0d4c34ab2a29d1c4a8a4bd615467", "html_url": "https://github.com/rust-lang/rust/commit/5f42a0f005ea0d4c34ab2a29d1c4a8a4bd615467", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5f42a0f005ea0d4c34ab2a29d1c4a8a4bd615467/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "68298a5087307792aec3141db4be8fc9f68b682a", "url": "https://api.github.com/repos/rust-lang/rust/commits/68298a5087307792aec3141db4be8fc9f68b682a", "html_url": "https://github.com/rust-lang/rust/commit/68298a5087307792aec3141db4be8fc9f68b682a"}], "stats": {"total": 38, "additions": 28, "deletions": 10}, "files": [{"sha": "2f99743cfbdca0346b1334d749a30cf319a23a27", "filename": "src/librustc/middle/region.rs", "status": "modified", "additions": 21, "deletions": 3, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/5f42a0f005ea0d4c34ab2a29d1c4a8a4bd615467/src%2Flibrustc%2Fmiddle%2Fregion.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5f42a0f005ea0d4c34ab2a29d1c4a8a4bd615467/src%2Flibrustc%2Fmiddle%2Fregion.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fregion.rs?ref=5f42a0f005ea0d4c34ab2a29d1c4a8a4bd615467", "patch": "@@ -21,6 +21,7 @@ use util::nodemap::{FxHashMap, FxHashSet};\n use ty;\n \n use std::mem;\n+use std::fmt;\n use rustc_data_structures::sync::Lrc;\n use syntax::source_map;\n use syntax::ast;\n@@ -50,7 +51,7 @@ use rustc_data_structures::stable_hasher::{HashStable, StableHasher,\n /// `DestructionScope`, but those that are `terminating_scopes` do;\n /// see discussion with `ScopeTree`.\n ///\n-/// `Remainder(BlockRemainder { block, statement_index })` represents\n+/// `Remainder { block, statement_index }` represents\n /// the scope of user code running immediately after the initializer\n /// expression for the indexed statement, until the end of the block.\n ///\n@@ -99,12 +100,29 @@ use rustc_data_structures::stable_hasher::{HashStable, StableHasher,\n /// placate the same deriving in `ty::FreeRegion`, but we may want to\n /// actually attach a more meaningful ordering to scopes than the one\n /// generated via deriving here.\n-#[derive(Clone, PartialEq, PartialOrd, Eq, Ord, Hash, Debug, Copy, RustcEncodable, RustcDecodable)]\n+#[derive(Clone, PartialEq, PartialOrd, Eq, Ord, Hash, Copy, RustcEncodable, RustcDecodable)]\n pub struct Scope {\n     pub(crate) id: hir::ItemLocalId,\n     pub(crate) data: ScopeData,\n }\n \n+impl fmt::Debug for Scope {\n+    fn fmt(&self, fmt: &mut fmt::Formatter) -> fmt::Result {\n+        match self.data {\n+            ScopeData::Node => write!(fmt, \"Node({:?})\", self.id),\n+            ScopeData::CallSite => write!(fmt, \"CallSite({:?})\", self.id),\n+            ScopeData::Arguments => write!(fmt, \"Arguments({:?})\", self.id),\n+            ScopeData::Destruction => write!(fmt, \"Destruction({:?})\", self.id),\n+            ScopeData::Remainder(fsi) => write!(\n+                fmt,\n+                \"Remainder {{ block: {:?}, first_statement_index: {}}}\",\n+                self.id,\n+                fsi.as_u32(),\n+            ),\n+        }\n+    }\n+}\n+\n #[derive(Clone, PartialEq, PartialOrd, Eq, Ord, Hash, Debug, Copy, RustcEncodable, RustcDecodable)]\n pub enum ScopeData {\n     Node,\n@@ -159,7 +177,7 @@ impl Scope {\n     #[inline]\n     pub fn data(self) -> ScopeData {\n         self.data\n-        }\n+    }\n \n     #[inline]\n     pub fn new(id: hir::ItemLocalId, data: ScopeData) -> Self {"}, {"sha": "882579c571086ab8e48566a942abece6c3dcbdc4", "filename": "src/test/mir-opt/validate_1.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/5f42a0f005ea0d4c34ab2a29d1c4a8a4bd615467/src%2Ftest%2Fmir-opt%2Fvalidate_1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5f42a0f005ea0d4c34ab2a29d1c4a8a4bd615467/src%2Ftest%2Fmir-opt%2Fvalidate_1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fvalidate_1.rs?ref=5f42a0f005ea0d4c34ab2a29d1c4a8a4bd615467", "patch": "@@ -64,11 +64,11 @@ fn main() {\n //     bb0: {\n //         Validate(Acquire, [_1: &ReFree(DefId(0/1:11 ~ validate_1[317d]::main[0]::{{closure}}[0]), BrEnv) [closure@NodeId(50)], _2: &ReFree(DefId(0/1:11 ~ validate_1[317d]::main[0]::{{closure}}[0]), BrAnon(0)) mut i32]);\n //         StorageLive(_3);\n-//         Validate(Suspend(ReScope(Remainder(BlockRemainder { block: ItemLocalId(25), first_statement_index: 0 }))), [(*_2): i32]);\n+//         Validate(Suspend(ReScope(Remainder { block: ItemLocalId(25), first_statement_index: 0 })), [(*_2): i32]);\n //         _3 = &ReErased (*_2);\n-//         Validate(Acquire, [(*_3): i32/ReScope(Remainder(BlockRemainder { block: ItemLocalId(25), first_statement_index: 0 })) (imm)]);\n+//         Validate(Acquire, [(*_3): i32/ReScope(Remainder { block: ItemLocalId(25), first_statement_index: 0 }) (imm)]);\n //         _0 = (*_3);\n-//         EndRegion(ReScope(Remainder(BlockRemainder { block: ItemLocalId(25), first_statement_index: 0 })));\n+//         EndRegion(ReScope(Remainder { block: ItemLocalId(25), first_statement_index: 0 }));\n //         StorageDead(_3);\n //         return;\n //     }"}, {"sha": "07f5b2aa84b7dda57e8dbb2958867272ac44981d", "filename": "src/test/mir-opt/validate_3.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/5f42a0f005ea0d4c34ab2a29d1c4a8a4bd615467/src%2Ftest%2Fmir-opt%2Fvalidate_3.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5f42a0f005ea0d4c34ab2a29d1c4a8a4bd615467/src%2Ftest%2Fmir-opt%2Fvalidate_3.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fvalidate_3.rs?ref=5f42a0f005ea0d4c34ab2a29d1c4a8a4bd615467", "patch": "@@ -48,12 +48,12 @@ fn main() {\n //         StorageLive(_1);\n //         _1 = Test { x: const 0i32 };\n //         StorageLive(_2);\n-//         Validate(Suspend(ReScope(Remainder(BlockRemainder { block: ItemLocalId(20), first_statement_index: 3 }))), [_1: Test]);\n+//         Validate(Suspend(ReScope(Remainder { block: ItemLocalId(20), first_statement_index: 3 })), [_1: Test]);\n //         _2 = &ReErased _1;\n-//         Validate(Acquire, [(*_2): Test/ReScope(Remainder(BlockRemainder { block: ItemLocalId(20), first_statement_index: 3 })) (imm)]);\n+//         Validate(Acquire, [(*_2): Test/ReScope(Remainder { block: ItemLocalId(20), first_statement_index: 3 }) (imm)]);\n //         StorageLive(_4);\n //         StorageLive(_5);\n-//         Validate(Suspend(ReScope(Node(ItemLocalId(18)))), [((*_2).0: i32): i32/ReScope(Remainder(BlockRemainder { block: ItemLocalId(20), first_statement_index: 3 })) (imm)]);\n+//         Validate(Suspend(ReScope(Node(ItemLocalId(18)))), [((*_2).0: i32): i32/ReScope(Remainder { block: ItemLocalId(20), first_statement_index: 3 }) (imm)]);\n //         _5 = &ReErased ((*_2).0: i32);\n //         Validate(Acquire, [(*_5): i32/ReScope(Node(ItemLocalId(18))) (imm)]);\n //         Validate(Suspend(ReScope(Node(ItemLocalId(18)))), [(*_5): i32/ReScope(Node(ItemLocalId(18))) (imm)]);\n@@ -68,7 +68,7 @@ fn main() {\n //         StorageDead(_4);\n //         StorageDead(_5);\n //         _0 = ();\n-//         EndRegion(ReScope(Remainder(BlockRemainder { block: ItemLocalId(20), first_statement_index: 3 })));\n+//         EndRegion(ReScope(Remainder { block: ItemLocalId(20), first_statement_index: 3 }));\n //         StorageDead(_2);\n //         StorageDead(_1);\n //         return;"}]}