{"sha": "4f9fd2a5d45a0ea0c49a3a78f8f1c8e091b9c604", "node_id": "MDY6Q29tbWl0NzI0NzEyOjRmOWZkMmE1ZDQ1YTBlYTBjNDlhM2E3OGY4ZjFjOGUwOTFiOWM2MDQ=", "commit": {"author": {"name": "Albin Hedman", "email": "albin9604@gmail.com", "date": "2020-12-02T20:07:40Z"}, "committer": {"name": "Albin Hedman", "email": "albin9604@gmail.com", "date": "2020-12-02T20:07:40Z"}, "message": "Undo fn -> const fn for all intrinsics but assert_inhabited", "tree": {"sha": "b24b56eb66ad56d4dd006a8dd6869d9ab1977b98", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b24b56eb66ad56d4dd006a8dd6869d9ab1977b98"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4f9fd2a5d45a0ea0c49a3a78f8f1c8e091b9c604", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4f9fd2a5d45a0ea0c49a3a78f8f1c8e091b9c604", "html_url": "https://github.com/rust-lang/rust/commit/4f9fd2a5d45a0ea0c49a3a78f8f1c8e091b9c604", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4f9fd2a5d45a0ea0c49a3a78f8f1c8e091b9c604/comments", "author": {"login": "usbalbin", "id": 10927717, "node_id": "MDQ6VXNlcjEwOTI3NzE3", "avatar_url": "https://avatars.githubusercontent.com/u/10927717?v=4", "gravatar_id": "", "url": "https://api.github.com/users/usbalbin", "html_url": "https://github.com/usbalbin", "followers_url": "https://api.github.com/users/usbalbin/followers", "following_url": "https://api.github.com/users/usbalbin/following{/other_user}", "gists_url": "https://api.github.com/users/usbalbin/gists{/gist_id}", "starred_url": "https://api.github.com/users/usbalbin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/usbalbin/subscriptions", "organizations_url": "https://api.github.com/users/usbalbin/orgs", "repos_url": "https://api.github.com/users/usbalbin/repos", "events_url": "https://api.github.com/users/usbalbin/events{/privacy}", "received_events_url": "https://api.github.com/users/usbalbin/received_events", "type": "User", "site_admin": false}, "committer": {"login": "usbalbin", "id": 10927717, "node_id": "MDQ6VXNlcjEwOTI3NzE3", "avatar_url": "https://avatars.githubusercontent.com/u/10927717?v=4", "gravatar_id": "", "url": "https://api.github.com/users/usbalbin", "html_url": "https://github.com/usbalbin", "followers_url": "https://api.github.com/users/usbalbin/followers", "following_url": "https://api.github.com/users/usbalbin/following{/other_user}", "gists_url": "https://api.github.com/users/usbalbin/gists{/gist_id}", "starred_url": "https://api.github.com/users/usbalbin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/usbalbin/subscriptions", "organizations_url": "https://api.github.com/users/usbalbin/orgs", "repos_url": "https://api.github.com/users/usbalbin/repos", "events_url": "https://api.github.com/users/usbalbin/events{/privacy}", "received_events_url": "https://api.github.com/users/usbalbin/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f311db100ba338d13a6f590288e027623a8e9434", "url": "https://api.github.com/repos/rust-lang/rust/commits/f311db100ba338d13a6f590288e027623a8e9434", "html_url": "https://github.com/rust-lang/rust/commit/f311db100ba338d13a6f590288e027623a8e9434"}], "stats": {"total": 20, "additions": 1, "deletions": 19}, "files": [{"sha": "90018673e1a8a9b3c180871e6f396c519937e128", "filename": "compiler/rustc_mir/src/interpret/intrinsics.rs", "status": "modified", "additions": 1, "deletions": 17, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/4f9fd2a5d45a0ea0c49a3a78f8f1c8e091b9c604/compiler%2Frustc_mir%2Fsrc%2Finterpret%2Fintrinsics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4f9fd2a5d45a0ea0c49a3a78f8f1c8e091b9c604/compiler%2Frustc_mir%2Fsrc%2Finterpret%2Fintrinsics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir%2Fsrc%2Finterpret%2Fintrinsics.rs?ref=4f9fd2a5d45a0ea0c49a3a78f8f1c8e091b9c604", "patch": "@@ -407,29 +407,13 @@ impl<'mir, 'tcx: 'mir, M: Machine<'mir, 'tcx>> InterpCx<'mir, 'tcx, M> {\n             sym::transmute => {\n                 self.copy_op_transmute(args[0], dest)?;\n             }\n-            sym::assert_inhabited | sym::assert_zero_valid | sym::assert_uninit_valid => {\n+            sym::assert_inhabited => {\n                 let ty = instance.substs.type_at(0);\n                 let layout = self.layout_of(ty)?;\n \n                 if layout.abi.is_uninhabited() {\n                     throw_ub_format!(\"attempted to instantiate uninhabited type `{}`\", ty);\n                 }\n-                if intrinsic_name == sym::assert_zero_valid\n-                    && !layout.might_permit_raw_init(self, /*zero:*/ true).unwrap()\n-                {\n-                    throw_ub_format!(\n-                        \"attempted to zero-initialize type `{}`, which is invalid\",\n-                        ty\n-                    );\n-                }\n-                if intrinsic_name == sym::assert_uninit_valid\n-                    && !layout.might_permit_raw_init(self, /*zero:*/ false).unwrap()\n-                {\n-                    throw_ub_format!(\n-                        \"attempted to leave type `{}` uninitialized, which is invalid\",\n-                        ty\n-                    );\n-                }\n             }\n             sym::simd_insert => {\n                 let index = u64::from(self.read_scalar(args[1])?.to_u32()?);"}, {"sha": "ac31476f227e36f2745c688220e2beaba82e8d09", "filename": "library/core/src/intrinsics.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4f9fd2a5d45a0ea0c49a3a78f8f1c8e091b9c604/library%2Fcore%2Fsrc%2Fintrinsics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4f9fd2a5d45a0ea0c49a3a78f8f1c8e091b9c604/library%2Fcore%2Fsrc%2Fintrinsics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fintrinsics.rs?ref=4f9fd2a5d45a0ea0c49a3a78f8f1c8e091b9c604", "patch": "@@ -822,14 +822,12 @@ extern \"rust-intrinsic\" {\n     /// zero-initialization: This will statically either panic, or do nothing.\n     ///\n     /// This intrinsic does not have a stable counterpart.\n-    #[rustc_const_unstable(feature = \"const_assert_type\", issue = \"none\")]\n     pub fn assert_zero_valid<T>();\n \n     /// A guard for unsafe functions that cannot ever be executed if `T` has invalid\n     /// bit patterns: This will statically either panic, or do nothing.\n     ///\n     /// This intrinsic does not have a stable counterpart.\n-    #[rustc_const_unstable(feature = \"const_assert_type\", issue = \"none\")]\n     pub fn assert_uninit_valid<T>();\n \n     /// Gets a reference to a static `Location` indicating where it was called."}]}