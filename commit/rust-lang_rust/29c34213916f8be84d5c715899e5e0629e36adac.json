{"sha": "29c34213916f8be84d5c715899e5e0629e36adac", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI5YzM0MjEzOTE2ZjhiZTg0ZDVjNzE1ODk5ZTVlMDYyOWUzNmFkYWM=", "commit": {"author": {"name": "Josh Stone", "email": "cuviper@gmail.com", "date": "2020-09-16T17:05:41Z"}, "committer": {"name": "Josh Stone", "email": "cuviper@gmail.com", "date": "2020-09-16T17:05:41Z"}, "message": "Don't return any TextEdit if formatting is unchanged\n\nI found that `textDocument/formatting` was always returning a full\n`TextEdit` replacement, even when there are no changes, which caused Vim\n(w/ vim-lsp) to always indicate a modified buffer after formatting. We\ncan easily compare whether there were changes and return `null` if not,\nso the client knows there's nothing to do.", "tree": {"sha": "f6e9e0cc4799d3172957ceea1daa5cd1ad754fa8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f6e9e0cc4799d3172957ceea1daa5cd1ad754fa8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/29c34213916f8be84d5c715899e5e0629e36adac", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/29c34213916f8be84d5c715899e5e0629e36adac", "html_url": "https://github.com/rust-lang/rust/commit/29c34213916f8be84d5c715899e5e0629e36adac", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/29c34213916f8be84d5c715899e5e0629e36adac/comments", "author": {"login": "cuviper", "id": 36186, "node_id": "MDQ6VXNlcjM2MTg2", "avatar_url": "https://avatars.githubusercontent.com/u/36186?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cuviper", "html_url": "https://github.com/cuviper", "followers_url": "https://api.github.com/users/cuviper/followers", "following_url": "https://api.github.com/users/cuviper/following{/other_user}", "gists_url": "https://api.github.com/users/cuviper/gists{/gist_id}", "starred_url": "https://api.github.com/users/cuviper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cuviper/subscriptions", "organizations_url": "https://api.github.com/users/cuviper/orgs", "repos_url": "https://api.github.com/users/cuviper/repos", "events_url": "https://api.github.com/users/cuviper/events{/privacy}", "received_events_url": "https://api.github.com/users/cuviper/received_events", "type": "User", "site_admin": false}, "committer": {"login": "cuviper", "id": 36186, "node_id": "MDQ6VXNlcjM2MTg2", "avatar_url": "https://avatars.githubusercontent.com/u/36186?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cuviper", "html_url": "https://github.com/cuviper", "followers_url": "https://api.github.com/users/cuviper/followers", "following_url": "https://api.github.com/users/cuviper/following{/other_user}", "gists_url": "https://api.github.com/users/cuviper/gists{/gist_id}", "starred_url": "https://api.github.com/users/cuviper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cuviper/subscriptions", "organizations_url": "https://api.github.com/users/cuviper/orgs", "repos_url": "https://api.github.com/users/cuviper/repos", "events_url": "https://api.github.com/users/cuviper/events{/privacy}", "received_events_url": "https://api.github.com/users/cuviper/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b14bf68ce62bc712ed9ca9f977dd7efbd6fe4fd7", "url": "https://api.github.com/repos/rust-lang/rust/commits/b14bf68ce62bc712ed9ca9f977dd7efbd6fe4fd7", "html_url": "https://github.com/rust-lang/rust/commit/b14bf68ce62bc712ed9ca9f977dd7efbd6fe4fd7"}], "stats": {"total": 49, "additions": 45, "deletions": 4}, "files": [{"sha": "c0943a54dc6c47ed108d251073495e88f0d36f9d", "filename": "crates/rust-analyzer/src/handlers.rs", "status": "modified", "additions": 9, "deletions": 4, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/29c34213916f8be84d5c715899e5e0629e36adac/crates%2Frust-analyzer%2Fsrc%2Fhandlers.rs", "raw_url": "https://github.com/rust-lang/rust/raw/29c34213916f8be84d5c715899e5e0629e36adac/crates%2Frust-analyzer%2Fsrc%2Fhandlers.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fhandlers.rs?ref=29c34213916f8be84d5c715899e5e0629e36adac", "patch": "@@ -748,10 +748,15 @@ pub(crate) fn handle_formatting(\n         }\n     }\n \n-    Ok(Some(vec![lsp_types::TextEdit {\n-        range: Range::new(Position::new(0, 0), end_position),\n-        new_text: captured_stdout,\n-    }]))\n+    if *file == captured_stdout {\n+        // The document is already formatted correctly -- no edits needed.\n+        Ok(None)\n+    } else {\n+        Ok(Some(vec![lsp_types::TextEdit {\n+            range: Range::new(Position::new(0, 0), end_position),\n+            new_text: captured_stdout,\n+        }]))\n+    }\n }\n \n fn handle_fixes("}, {"sha": "06726f9576e5185c6a2965be8e74464c67b02f36", "filename": "crates/rust-analyzer/tests/rust-analyzer/main.rs", "status": "modified", "additions": 36, "deletions": 0, "changes": 36, "blob_url": "https://github.com/rust-lang/rust/blob/29c34213916f8be84d5c715899e5e0629e36adac/crates%2Frust-analyzer%2Ftests%2Frust-analyzer%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/29c34213916f8be84d5c715899e5e0629e36adac/crates%2Frust-analyzer%2Ftests%2Frust-analyzer%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Ftests%2Frust-analyzer%2Fmain.rs?ref=29c34213916f8be84d5c715899e5e0629e36adac", "patch": "@@ -259,6 +259,42 @@ pub use std::collections::HashMap;\n     );\n }\n \n+#[test]\n+fn test_format_document_unchanged() {\n+    if skip_slow_tests() {\n+        return;\n+    }\n+\n+    let server = project(\n+        r#\"\n+//- /Cargo.toml\n+[package]\n+name = \"foo\"\n+version = \"0.0.0\"\n+\n+//- /src/lib.rs\n+fn main() {}\n+\"#,\n+    )\n+    .wait_until_workspace_is_loaded();\n+\n+    server.request::<Formatting>(\n+        DocumentFormattingParams {\n+            text_document: server.doc_id(\"src/lib.rs\"),\n+            options: FormattingOptions {\n+                tab_size: 4,\n+                insert_spaces: false,\n+                insert_final_newline: None,\n+                trim_final_newlines: None,\n+                trim_trailing_whitespace: None,\n+                properties: HashMap::new(),\n+            },\n+            work_done_progress_params: WorkDoneProgressParams::default(),\n+        },\n+        json!(null),\n+    );\n+}\n+\n #[test]\n fn test_missing_module_code_action() {\n     if skip_slow_tests() {"}]}