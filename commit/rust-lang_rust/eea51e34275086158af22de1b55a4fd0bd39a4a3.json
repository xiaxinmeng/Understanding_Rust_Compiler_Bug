{"sha": "eea51e34275086158af22de1b55a4fd0bd39a4a3", "node_id": "MDY6Q29tbWl0NzI0NzEyOmVlYTUxZTM0Mjc1MDg2MTU4YWYyMmRlMWI1NWE0ZmQwYmQzOWE0YTM=", "commit": {"author": {"name": "Oliver Scherer", "email": "github35764891676564198441@oli-obk.de", "date": "2019-12-15T16:50:37Z"}, "committer": {"name": "Oliver Scherer", "email": "github35764891676564198441@oli-obk.de", "date": "2019-12-26T11:11:11Z"}, "message": "Make some functions crate local", "tree": {"sha": "1eba0cd01e5d8e6228c820e8bf40a8f221562b76", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1eba0cd01e5d8e6228c820e8bf40a8f221562b76"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/eea51e34275086158af22de1b55a4fd0bd39a4a3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/eea51e34275086158af22de1b55a4fd0bd39a4a3", "html_url": "https://github.com/rust-lang/rust/commit/eea51e34275086158af22de1b55a4fd0bd39a4a3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/eea51e34275086158af22de1b55a4fd0bd39a4a3/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "eda3fa9eb5e0b2eb3cee55a6cc0a23a207b56059", "url": "https://api.github.com/repos/rust-lang/rust/commits/eda3fa9eb5e0b2eb3cee55a6cc0a23a207b56059", "html_url": "https://github.com/rust-lang/rust/commit/eda3fa9eb5e0b2eb3cee55a6cc0a23a207b56059"}], "stats": {"total": 6, "additions": 3, "deletions": 3}, "files": [{"sha": "e614ad8539e7b5a6bcd3445d01d910b8707c378c", "filename": "src/librustc_mir/const_eval.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/eea51e34275086158af22de1b55a4fd0bd39a4a3/src%2Flibrustc_mir%2Fconst_eval.rs", "raw_url": "https://github.com/rust-lang/rust/raw/eea51e34275086158af22de1b55a4fd0bd39a4a3/src%2Flibrustc_mir%2Fconst_eval.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fconst_eval.rs?ref=eea51e34275086158af22de1b55a4fd0bd39a4a3", "patch": "@@ -122,7 +122,7 @@ fn op_to_const<'tcx>(\n /// Extracts a field of a (variant of a) const.\n // this function uses `unwrap` copiously, because an already validated constant must have valid\n // fields and can thus never fail outside of compiler bugs\n-pub fn const_field<'tcx>(\n+pub(crate) fn const_field<'tcx>(\n     tcx: TyCtxt<'tcx>,\n     param_env: ty::ParamEnv<'tcx>,\n     variant: Option<VariantIdx>,\n@@ -145,7 +145,7 @@ pub fn const_field<'tcx>(\n     op_to_const(&ecx, field)\n }\n \n-pub fn const_caller_location<'tcx>(\n+pub(crate) fn const_caller_location<'tcx>(\n     tcx: TyCtxt<'tcx>,\n     (file, line, col): (Symbol, u32, u32),\n ) -> &'tcx ty::Const<'tcx> {\n@@ -165,7 +165,7 @@ pub fn const_caller_location<'tcx>(\n \n // this function uses `unwrap` copiously, because an already validated constant must have valid\n // fields and can thus never fail outside of compiler bugs\n-pub fn const_variant_index<'tcx>(\n+pub(crate) fn const_variant_index<'tcx>(\n     tcx: TyCtxt<'tcx>,\n     param_env: ty::ParamEnv<'tcx>,\n     val: &'tcx ty::Const<'tcx>,"}]}