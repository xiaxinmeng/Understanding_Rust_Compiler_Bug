{"sha": "6595d5571b4c498ca18ffc1fdca17b3815271df0", "node_id": "MDY6Q29tbWl0NzI0NzEyOjY1OTVkNTU3MWI0YzQ5OGNhMThmZmMxZmRjYTE3YjM4MTUyNzFkZjA=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-03-17T14:42:46Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-03-17T14:42:46Z"}, "message": "Auto merge of #6918 - camsteffen:utils-re-export, r=flip1995\n\nDon't re-export `clippy_utils::*`\n\nchangelog: none\n\nThis should wrap up the utils-related really big changes. I personally don't see any more sub-modules to be added to `clippy_utils`.", "tree": {"sha": "6a971d2d678ca2b82425ca79fd490ed396751e37", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6a971d2d678ca2b82425ca79fd490ed396751e37"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6595d5571b4c498ca18ffc1fdca17b3815271df0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6595d5571b4c498ca18ffc1fdca17b3815271df0", "html_url": "https://github.com/rust-lang/rust/commit/6595d5571b4c498ca18ffc1fdca17b3815271df0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6595d5571b4c498ca18ffc1fdca17b3815271df0/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8af28840d2b493897a54eb9a21e155c09e38f10f", "url": "https://api.github.com/repos/rust-lang/rust/commits/8af28840d2b493897a54eb9a21e155c09e38f10f", "html_url": "https://github.com/rust-lang/rust/commit/8af28840d2b493897a54eb9a21e155c09e38f10f"}, {"sha": "565400d1f990399726498b66e87d6866533d1b1d", "url": "https://api.github.com/repos/rust-lang/rust/commits/565400d1f990399726498b66e87d6866533d1b1d", "html_url": "https://github.com/rust-lang/rust/commit/565400d1f990399726498b66e87d6866533d1b1d"}], "stats": {"total": 743, "additions": 344, "deletions": 399}, "files": [{"sha": "16905781c56b6851b5ffcce9c89b1ccbdc381f0b", "filename": "clippy_lints/src/assertions_on_constants.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Fassertions_on_constants.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Fassertions_on_constants.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fassertions_on_constants.rs?ref=6595d5571b4c498ca18ffc1fdca17b3815271df0", "patch": "@@ -1,7 +1,7 @@\n use crate::consts::{constant, Constant};\n-use crate::utils::{is_direct_expn_of, is_expn_of, match_panic_call};\n use clippy_utils::diagnostics::span_lint_and_help;\n use clippy_utils::source::snippet_opt;\n+use clippy_utils::{is_direct_expn_of, is_expn_of, match_panic_call};\n use if_chain::if_chain;\n use rustc_hir::{Expr, ExprKind, UnOp};\n use rustc_lint::{LateContext, LateLintPass};"}, {"sha": "bc6eec0051a41d872c466b2a0a4f5becee8b5585", "filename": "clippy_lints/src/assign_ops.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Fassign_ops.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Fassign_ops.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fassign_ops.rs?ref=6595d5571b4c498ca18ffc1fdca17b3815271df0", "patch": "@@ -1,8 +1,8 @@\n-use crate::utils::{eq_expr_value, get_trait_def_id, trait_ref_of_method};\n-use crate::utils::{higher, sugg};\n use clippy_utils::diagnostics::span_lint_and_then;\n use clippy_utils::source::snippet_opt;\n use clippy_utils::ty::implements_trait;\n+use clippy_utils::{eq_expr_value, get_trait_def_id, trait_ref_of_method};\n+use clippy_utils::{higher, paths, sugg};\n use if_chain::if_chain;\n use rustc_errors::Applicability;\n use rustc_hir as hir;\n@@ -93,7 +93,7 @@ impl<'tcx> LateLintPass<'tcx> for AssignOps {\n                              $($trait_name:ident),+) => {\n                                 match $op {\n                                     $(hir::BinOpKind::$trait_name => {\n-                                        let [krate, module] = crate::utils::paths::OPS_MODULE;\n+                                        let [krate, module] = paths::OPS_MODULE;\n                                         let path: [&str; 3] = [krate, module, concat!(stringify!($trait_name), \"Assign\")];\n                                         let trait_id = if let Some(trait_id) = get_trait_def_id($cx, &path) {\n                                             trait_id"}, {"sha": "dfb1819932563c03575cae032477a045f03e01f9", "filename": "clippy_lints/src/atomic_ordering.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Fatomic_ordering.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Fatomic_ordering.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fatomic_ordering.rs?ref=6595d5571b4c498ca18ffc1fdca17b3815271df0", "patch": "@@ -1,5 +1,5 @@\n-use crate::utils::match_def_path;\n use clippy_utils::diagnostics::span_lint_and_help;\n+use clippy_utils::match_def_path;\n use if_chain::if_chain;\n use rustc_hir::def_id::DefId;\n use rustc_hir::{Expr, ExprKind};"}, {"sha": "f805f716e6bff82d05b89b2e1c529ee501fae011", "filename": "clippy_lints/src/attrs.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Fattrs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Fattrs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fattrs.rs?ref=6595d5571b4c498ca18ffc1fdca17b3815271df0", "patch": "@@ -1,7 +1,7 @@\n //! checks for attributes\n \n-use crate::utils::match_panic_def_id;\n use clippy_utils::diagnostics::{span_lint, span_lint_and_help, span_lint_and_sugg, span_lint_and_then};\n+use clippy_utils::match_panic_def_id;\n use clippy_utils::source::{first_line_of_span, is_present_in_source, snippet_opt, without_block_comments};\n use if_chain::if_chain;\n use rustc_ast::{AttrKind, AttrStyle, Attribute, Lit, LitKind, MetaItemKind, NestedMetaItem};"}, {"sha": "68eee0520b38357b4a39bfe85e9069ef768ddf9c", "filename": "clippy_lints/src/await_holding_invalid.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Fawait_holding_invalid.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Fawait_holding_invalid.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fawait_holding_invalid.rs?ref=6595d5571b4c498ca18ffc1fdca17b3815271df0", "patch": "@@ -1,5 +1,5 @@\n-use crate::utils::{match_def_path, paths};\n use clippy_utils::diagnostics::span_lint_and_note;\n+use clippy_utils::{match_def_path, paths};\n use rustc_hir::def_id::DefId;\n use rustc_hir::{AsyncGeneratorKind, Body, BodyId, GeneratorKind};\n use rustc_lint::{LateContext, LateLintPass};"}, {"sha": "f7daf3dab49481848e7d8e1fa3b0a2280bea109b", "filename": "clippy_lints/src/bit_mask.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Fbit_mask.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Fbit_mask.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fbit_mask.rs?ref=6595d5571b4c498ca18ffc1fdca17b3815271df0", "patch": "@@ -1,6 +1,6 @@\n use crate::consts::{constant, Constant};\n-use crate::utils::sugg::Sugg;\n use clippy_utils::diagnostics::{span_lint, span_lint_and_then};\n+use clippy_utils::sugg::Sugg;\n use if_chain::if_chain;\n use rustc_ast::ast::LitKind;\n use rustc_errors::Applicability;"}, {"sha": "badcf8d2a43cd8e7082ce27dd4ec4f39c852a70b", "filename": "clippy_lints/src/blocks_in_if_conditions.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Fblocks_in_if_conditions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Fblocks_in_if_conditions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fblocks_in_if_conditions.rs?ref=6595d5571b4c498ca18ffc1fdca17b3815271df0", "patch": "@@ -1,7 +1,7 @@\n-use crate::utils::{differing_macro_contexts, get_parent_expr};\n use clippy_utils::diagnostics::{span_lint, span_lint_and_sugg};\n use clippy_utils::source::snippet_block_with_applicability;\n use clippy_utils::ty::implements_trait;\n+use clippy_utils::{differing_macro_contexts, get_parent_expr};\n use if_chain::if_chain;\n use rustc_errors::Applicability;\n use rustc_hir::intravisit::{walk_expr, NestedVisitorMap, Visitor};"}, {"sha": "58d9aa9c005c2226966d0f148413a83f9b5ade15", "filename": "clippy_lints/src/booleans.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Fbooleans.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Fbooleans.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fbooleans.rs?ref=6595d5571b4c498ca18ffc1fdca17b3815271df0", "patch": "@@ -1,7 +1,7 @@\n-use crate::utils::{eq_expr_value, get_trait_def_id, in_macro, paths};\n use clippy_utils::diagnostics::{span_lint_and_sugg, span_lint_and_then};\n use clippy_utils::source::snippet_opt;\n use clippy_utils::ty::{implements_trait, is_type_diagnostic_item};\n+use clippy_utils::{eq_expr_value, get_trait_def_id, in_macro, paths};\n use if_chain::if_chain;\n use rustc_ast::ast::LitKind;\n use rustc_errors::Applicability;"}, {"sha": "846ac08e93a414deec23082898f1c9ddd74e984c", "filename": "clippy_lints/src/bytecount.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Fbytecount.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Fbytecount.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fbytecount.rs?ref=6595d5571b4c498ca18ffc1fdca17b3815271df0", "patch": "@@ -1,7 +1,7 @@\n-use crate::utils::{contains_name, get_pat_name, paths, single_segment_path};\n use clippy_utils::diagnostics::span_lint_and_sugg;\n use clippy_utils::source::snippet_with_applicability;\n use clippy_utils::ty::match_type;\n+use clippy_utils::{contains_name, get_pat_name, paths, single_segment_path};\n use if_chain::if_chain;\n use rustc_errors::Applicability;\n use rustc_hir::{BinOpKind, BorrowKind, Expr, ExprKind, UnOp};"}, {"sha": "fce5c559672371cc119b8ec1e6dea5a97c299b57", "filename": "clippy_lints/src/cargo_common_metadata.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Fcargo_common_metadata.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Fcargo_common_metadata.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fcargo_common_metadata.rs?ref=6595d5571b4c498ca18ffc1fdca17b3815271df0", "patch": "@@ -2,8 +2,8 @@\n \n use std::path::PathBuf;\n \n-use crate::utils::run_lints;\n use clippy_utils::diagnostics::span_lint;\n+use clippy_utils::run_lints;\n use rustc_hir::{hir_id::CRATE_HIR_ID, Crate};\n use rustc_lint::{LateContext, LateLintPass};\n use rustc_session::{declare_tool_lint, impl_lint_pass};"}, {"sha": "869deecfbd53a7ff882cb96d70f5dc2afa89ad00", "filename": "clippy_lints/src/casts/cast_lossless.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Fcasts%2Fcast_lossless.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Fcasts%2Fcast_lossless.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fcasts%2Fcast_lossless.rs?ref=6595d5571b4c498ca18ffc1fdca17b3815271df0", "patch": "@@ -1,13 +1,12 @@\n use clippy_utils::diagnostics::span_lint_and_sugg;\n+use clippy_utils::in_constant;\n use clippy_utils::source::snippet_opt;\n use clippy_utils::ty::is_isize_or_usize;\n use rustc_errors::Applicability;\n use rustc_hir::{Expr, ExprKind};\n use rustc_lint::LateContext;\n use rustc_middle::ty::{self, FloatTy, Ty};\n \n-use crate::utils::in_constant;\n-\n use super::{utils, CAST_LOSSLESS};\n \n pub(super) fn check(cx: &LateContext<'_>, expr: &Expr<'_>, cast_op: &Expr<'_>, cast_from: Ty<'_>, cast_to: Ty<'_>) {"}, {"sha": "833ad122e0d4e20c46ae07f32c94157a4120f218", "filename": "clippy_lints/src/casts/cast_possible_truncation.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Fcasts%2Fcast_possible_truncation.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Fcasts%2Fcast_possible_truncation.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fcasts%2Fcast_possible_truncation.rs?ref=6595d5571b4c498ca18ffc1fdca17b3815271df0", "patch": "@@ -1,10 +1,9 @@\n+use clippy_utils::diagnostics::span_lint;\n use clippy_utils::ty::is_isize_or_usize;\n use rustc_hir::Expr;\n use rustc_lint::LateContext;\n use rustc_middle::ty::{self, FloatTy, Ty};\n \n-use clippy_utils::diagnostics::span_lint;\n-\n use super::{utils, CAST_POSSIBLE_TRUNCATION};\n \n pub(super) fn check(cx: &LateContext<'_>, expr: &Expr<'_>, cast_from: Ty<'_>, cast_to: Ty<'_>) {"}, {"sha": "5208156ffd2f40b8bf5dbe7bacebb92e48d2e497", "filename": "clippy_lints/src/casts/cast_ptr_alignment.rs", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Fcasts%2Fcast_ptr_alignment.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Fcasts%2Fcast_ptr_alignment.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fcasts%2Fcast_ptr_alignment.rs?ref=6595d5571b4c498ca18ffc1fdca17b3815271df0", "patch": "@@ -1,14 +1,12 @@\n use clippy_utils::diagnostics::span_lint;\n+use clippy_utils::is_hir_ty_cfg_dependant;\n+use if_chain::if_chain;\n use rustc_hir::{Expr, ExprKind, GenericArg};\n use rustc_lint::LateContext;\n use rustc_middle::ty::{self, Ty};\n use rustc_span::symbol::sym;\n use rustc_target::abi::LayoutOf;\n \n-use if_chain::if_chain;\n-\n-use crate::utils::is_hir_ty_cfg_dependant;\n-\n use super::CAST_PTR_ALIGNMENT;\n \n pub(super) fn check(cx: &LateContext<'tcx>, expr: &'tcx Expr<'_>) {"}, {"sha": "bf722d0a3f49689dad1edb04c7604fe4b7bc9cd2", "filename": "clippy_lints/src/casts/cast_sign_loss.rs", "status": "modified", "additions": 4, "deletions": 6, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Fcasts%2Fcast_sign_loss.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Fcasts%2Fcast_sign_loss.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fcasts%2Fcast_sign_loss.rs?ref=6595d5571b4c498ca18ffc1fdca17b3815271df0", "patch": "@@ -1,13 +1,11 @@\n+use crate::consts::{constant, Constant};\n+use clippy_utils::diagnostics::span_lint;\n+use clippy_utils::{method_chain_args, sext};\n+use if_chain::if_chain;\n use rustc_hir::{Expr, ExprKind};\n use rustc_lint::LateContext;\n use rustc_middle::ty::{self, Ty};\n \n-use if_chain::if_chain;\n-\n-use crate::consts::{constant, Constant};\n-use crate::utils::{method_chain_args, sext};\n-use clippy_utils::diagnostics::span_lint;\n-\n use super::CAST_SIGN_LOSS;\n \n pub(super) fn check(cx: &LateContext<'_>, expr: &Expr<'_>, cast_op: &Expr<'_>, cast_from: Ty<'_>, cast_to: Ty<'_>) {"}, {"sha": "d9e172c01a70d9342efcf8d903cbbe79b69c9712", "filename": "clippy_lints/src/casts/mod.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Fcasts%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Fcasts%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fcasts%2Fmod.rs?ref=6595d5571b4c498ca18ffc1fdca17b3815271df0", "patch": "@@ -12,14 +12,13 @@ mod ptr_as_ptr;\n mod unnecessary_cast;\n mod utils;\n \n+use clippy_utils::is_hir_ty_cfg_dependant;\n use rustc_hir::{Expr, ExprKind};\n use rustc_lint::{LateContext, LateLintPass, LintContext};\n use rustc_middle::lint::in_external_macro;\n use rustc_semver::RustcVersion;\n use rustc_session::{declare_tool_lint, impl_lint_pass};\n \n-use crate::utils::is_hir_ty_cfg_dependant;\n-\n declare_clippy_lint! {\n     /// **What it does:** Checks for casts from any numerical to a float type where\n     /// the receiving type cannot store all values from the original type without"}, {"sha": "9113e5a0920a250b57c849c6e13b9fac06c45114", "filename": "clippy_lints/src/casts/ptr_as_ptr.rs", "status": "modified", "additions": 4, "deletions": 6, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Fcasts%2Fptr_as_ptr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Fcasts%2Fptr_as_ptr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fcasts%2Fptr_as_ptr.rs?ref=6595d5571b4c498ca18ffc1fdca17b3815271df0", "patch": "@@ -1,17 +1,15 @@\n use std::borrow::Cow;\n \n+use clippy_utils::diagnostics::span_lint_and_sugg;\n+use clippy_utils::meets_msrv;\n+use clippy_utils::sugg::Sugg;\n+use if_chain::if_chain;\n use rustc_errors::Applicability;\n use rustc_hir::{Expr, ExprKind, Mutability, TyKind};\n use rustc_lint::LateContext;\n use rustc_middle::ty::{self, TypeAndMut};\n use rustc_semver::RustcVersion;\n \n-use if_chain::if_chain;\n-\n-use crate::utils::meets_msrv;\n-use crate::utils::sugg::Sugg;\n-use clippy_utils::diagnostics::span_lint_and_sugg;\n-\n use super::PTR_AS_PTR;\n \n const PTR_AS_PTR_MSRV: RustcVersion = RustcVersion::new(1, 38, 0);"}, {"sha": "9ed359922fd4da4f4e80fa34dd9f99e72074e38a", "filename": "clippy_lints/src/casts/unnecessary_cast.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Fcasts%2Funnecessary_cast.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Fcasts%2Funnecessary_cast.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fcasts%2Funnecessary_cast.rs?ref=6595d5571b4c498ca18ffc1fdca17b3815271df0", "patch": "@@ -1,4 +1,5 @@\n use clippy_utils::diagnostics::span_lint_and_sugg;\n+use clippy_utils::numeric_literal::NumericLiteral;\n use clippy_utils::source::snippet_opt;\n use if_chain::if_chain;\n use rustc_ast::{LitFloatType, LitIntType, LitKind};\n@@ -8,8 +9,6 @@ use rustc_lint::{LateContext, LintContext};\n use rustc_middle::lint::in_external_macro;\n use rustc_middle::ty::{self, FloatTy, InferTy, Ty};\n \n-use crate::utils::numeric_literal::NumericLiteral;\n-\n use super::UNNECESSARY_CAST;\n \n pub(super) fn check("}, {"sha": "ed46cac493aad38c8ad686a4c254272c33844df3", "filename": "clippy_lints/src/checked_conversions.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Fchecked_conversions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Fchecked_conversions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fchecked_conversions.rs?ref=6595d5571b4c498ca18ffc1fdca17b3815271df0", "patch": "@@ -2,6 +2,7 @@\n \n use clippy_utils::diagnostics::span_lint_and_sugg;\n use clippy_utils::source::snippet_with_applicability;\n+use clippy_utils::{meets_msrv, SpanlessEq};\n use if_chain::if_chain;\n use rustc_ast::ast::LitKind;\n use rustc_errors::Applicability;\n@@ -11,8 +12,6 @@ use rustc_middle::lint::in_external_macro;\n use rustc_semver::RustcVersion;\n use rustc_session::{declare_tool_lint, impl_lint_pass};\n \n-use crate::utils::{meets_msrv, SpanlessEq};\n-\n const CHECKED_CONVERSIONS_MSRV: RustcVersion = RustcVersion::new(1, 34, 0);\n \n declare_clippy_lint! {"}, {"sha": "4cc542f723ccea49daa1956bede86960f54ebd42", "filename": "clippy_lints/src/cognitive_complexity.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Fcognitive_complexity.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Fcognitive_complexity.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fcognitive_complexity.rs?ref=6595d5571b4c498ca18ffc1fdca17b3815271df0", "patch": "@@ -3,6 +3,7 @@\n use clippy_utils::diagnostics::span_lint_and_help;\n use clippy_utils::source::snippet_opt;\n use clippy_utils::ty::is_type_diagnostic_item;\n+use clippy_utils::LimitStack;\n use rustc_ast::ast::Attribute;\n use rustc_hir::intravisit::{walk_expr, FnKind, NestedVisitorMap, Visitor};\n use rustc_hir::{Body, Expr, ExprKind, FnDecl, HirId};\n@@ -12,8 +13,6 @@ use rustc_session::{declare_tool_lint, impl_lint_pass};\n use rustc_span::source_map::Span;\n use rustc_span::{sym, BytePos};\n \n-use crate::utils::LimitStack;\n-\n declare_clippy_lint! {\n     /// **What it does:** Checks for methods with high cognitive complexity.\n     ///"}, {"sha": "dae5c86bd4437b28c9025b399214351b15a99d8e", "filename": "clippy_lints/src/collapsible_if.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Fcollapsible_if.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Fcollapsible_if.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fcollapsible_if.rs?ref=6595d5571b4c498ca18ffc1fdca17b3815271df0", "patch": "@@ -14,14 +14,13 @@\n \n use clippy_utils::diagnostics::{span_lint_and_sugg, span_lint_and_then};\n use clippy_utils::source::{snippet_block, snippet_block_with_applicability};\n+use clippy_utils::sugg::Sugg;\n use if_chain::if_chain;\n use rustc_ast::ast;\n use rustc_errors::Applicability;\n use rustc_lint::{EarlyContext, EarlyLintPass};\n use rustc_session::{declare_lint_pass, declare_tool_lint};\n \n-use crate::utils::sugg::Sugg;\n-\n declare_clippy_lint! {\n     /// **What it does:** Checks for nested `if` statements which can be collapsed\n     /// by `&&`-combining their conditions."}, {"sha": "e2b3686ddf0acfe3f22a47911eb6718a11232f86", "filename": "clippy_lints/src/collapsible_match.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Fcollapsible_match.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Fcollapsible_match.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fcollapsible_match.rs?ref=6595d5571b4c498ca18ffc1fdca17b3815271df0", "patch": "@@ -1,6 +1,6 @@\n-use crate::utils::visitors::LocalUsedVisitor;\n-use crate::utils::{path_to_local, SpanlessEq};\n use clippy_utils::diagnostics::span_lint_and_then;\n+use clippy_utils::visitors::LocalUsedVisitor;\n+use clippy_utils::{path_to_local, SpanlessEq};\n use if_chain::if_chain;\n use rustc_hir::def::{CtorKind, CtorOf, DefKind, Res};\n use rustc_hir::{Arm, Expr, ExprKind, Guard, HirId, Pat, PatKind, QPath, StmtKind, UnOp};"}, {"sha": "d601cb7c22473ca561c059be8d29e1fda99e8735", "filename": "clippy_lints/src/comparison_chain.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Fcomparison_chain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Fcomparison_chain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fcomparison_chain.rs?ref=6595d5571b4c498ca18ffc1fdca17b3815271df0", "patch": "@@ -1,6 +1,6 @@\n-use crate::utils::{get_trait_def_id, if_sequence, parent_node_is_if_expr, paths, SpanlessEq};\n use clippy_utils::diagnostics::span_lint_and_help;\n use clippy_utils::ty::implements_trait;\n+use clippy_utils::{get_trait_def_id, if_sequence, parent_node_is_if_expr, paths, SpanlessEq};\n use rustc_hir::{BinOpKind, Expr, ExprKind};\n use rustc_lint::{LateContext, LateLintPass};\n use rustc_session::{declare_lint_pass, declare_tool_lint};"}, {"sha": "46093a16571bb884a0ba827450ab9626d8233067", "filename": "clippy_lints/src/copies.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Fcopies.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Fcopies.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fcopies.rs?ref=6595d5571b4c498ca18ffc1fdca17b3815271df0", "patch": "@@ -1,6 +1,6 @@\n-use crate::utils::{eq_expr_value, in_macro, search_same, SpanlessEq, SpanlessHash};\n-use crate::utils::{get_parent_expr, if_sequence};\n use clippy_utils::diagnostics::span_lint_and_note;\n+use clippy_utils::{eq_expr_value, in_macro, search_same, SpanlessEq, SpanlessHash};\n+use clippy_utils::{get_parent_expr, if_sequence};\n use rustc_hir::{Block, Expr, ExprKind};\n use rustc_lint::{LateContext, LateLintPass};\n use rustc_session::{declare_lint_pass, declare_tool_lint};"}, {"sha": "ac890c90c97c38bdd22c01c6cedcf10ddf7641ce", "filename": "clippy_lints/src/create_dir.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Fcreate_dir.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Fcreate_dir.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fcreate_dir.rs?ref=6595d5571b4c498ca18ffc1fdca17b3815271df0", "patch": "@@ -1,6 +1,6 @@\n-use crate::utils::{match_def_path, paths};\n use clippy_utils::diagnostics::span_lint_and_sugg;\n use clippy_utils::source::snippet;\n+use clippy_utils::{match_def_path, paths};\n use if_chain::if_chain;\n use rustc_errors::Applicability;\n use rustc_hir::{Expr, ExprKind};"}, {"sha": "d046e894792258095e3cadb33b0ce32af81a3fb3", "filename": "clippy_lints/src/default.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Fdefault.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Fdefault.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fdefault.rs?ref=6595d5571b4c498ca18ffc1fdca17b3815271df0", "patch": "@@ -1,6 +1,6 @@\n-use crate::utils::{any_parent_is_automatically_derived, contains_name, match_def_path, paths};\n use clippy_utils::diagnostics::{span_lint_and_note, span_lint_and_sugg};\n use clippy_utils::source::snippet_with_macro_callsite;\n+use clippy_utils::{any_parent_is_automatically_derived, contains_name, match_def_path, paths};\n use if_chain::if_chain;\n use rustc_data_structures::fx::FxHashSet;\n use rustc_errors::Applicability;"}, {"sha": "1415f8e235a7e8936ef370fc3613d67a4c05e2a1", "filename": "clippy_lints/src/dereference.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Fdereference.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Fdereference.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fdereference.rs?ref=6595d5571b4c498ca18ffc1fdca17b3815271df0", "patch": "@@ -1,7 +1,7 @@\n-use crate::utils::{get_parent_node, in_macro, is_allowed};\n use clippy_utils::diagnostics::span_lint_and_sugg;\n use clippy_utils::source::snippet_with_context;\n use clippy_utils::ty::peel_mid_ty_refs;\n+use clippy_utils::{get_parent_node, in_macro, is_allowed};\n use rustc_ast::util::parser::PREC_PREFIX;\n use rustc_errors::Applicability;\n use rustc_hir::{BorrowKind, Expr, ExprKind, HirId, MatchSource, Mutability, Node, UnOp};"}, {"sha": "834136f910d9c98ac9886f33c2e800ec645b975d", "filename": "clippy_lints/src/derive.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Fderive.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Fderive.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fderive.rs?ref=6595d5571b4c498ca18ffc1fdca17b3815271df0", "patch": "@@ -1,7 +1,7 @@\n-use crate::utils::paths;\n-use crate::utils::{get_trait_def_id, is_allowed, is_automatically_derived, match_def_path};\n use clippy_utils::diagnostics::{span_lint_and_help, span_lint_and_note, span_lint_and_then};\n+use clippy_utils::paths;\n use clippy_utils::ty::is_copy;\n+use clippy_utils::{get_trait_def_id, is_allowed, is_automatically_derived, match_def_path};\n use if_chain::if_chain;\n use rustc_hir::def_id::DefId;\n use rustc_hir::intravisit::{walk_expr, walk_fn, walk_item, FnKind, NestedVisitorMap, Visitor};"}, {"sha": "ded0a0fff54b24573df89db5978904dbb71d2d1b", "filename": "clippy_lints/src/disallowed_method.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Fdisallowed_method.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Fdisallowed_method.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fdisallowed_method.rs?ref=6595d5571b4c498ca18ffc1fdca17b3815271df0", "patch": "@@ -1,5 +1,5 @@\n-use crate::utils::fn_def_id;\n use clippy_utils::diagnostics::span_lint;\n+use clippy_utils::fn_def_id;\n \n use rustc_data_structures::fx::FxHashSet;\n use rustc_hir::Expr;"}, {"sha": "5fa278b28979212bf125b8bde10d27809b889c7a", "filename": "clippy_lints/src/doc.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Fdoc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Fdoc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fdoc.rs?ref=6595d5571b4c498ca18ffc1fdca17b3815271df0", "patch": "@@ -1,6 +1,6 @@\n-use crate::utils::{is_entrypoint_fn, is_expn_of, match_panic_def_id, method_chain_args, return_ty};\n use clippy_utils::diagnostics::{span_lint, span_lint_and_note};\n use clippy_utils::ty::{implements_trait, is_type_diagnostic_item};\n+use clippy_utils::{is_entrypoint_fn, is_expn_of, match_panic_def_id, method_chain_args, return_ty};\n use if_chain::if_chain;\n use itertools::Itertools;\n use rustc_ast::ast::{Async, AttrKind, Attribute, FnKind, FnRetTy, ItemKind};"}, {"sha": "1d291565ec19d3136e6aaff8a747dd08a2cc679c", "filename": "clippy_lints/src/double_comparison.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Fdouble_comparison.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Fdouble_comparison.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fdouble_comparison.rs?ref=6595d5571b4c498ca18ffc1fdca17b3815271df0", "patch": "@@ -1,15 +1,14 @@\n //! Lint on unnecessary double comparisons. Some examples:\n \n use clippy_utils::diagnostics::span_lint_and_sugg;\n+use clippy_utils::eq_expr_value;\n use clippy_utils::source::snippet_with_applicability;\n use rustc_errors::Applicability;\n use rustc_hir::{BinOpKind, Expr, ExprKind};\n use rustc_lint::{LateContext, LateLintPass};\n use rustc_session::{declare_lint_pass, declare_tool_lint};\n use rustc_span::source_map::Span;\n \n-use crate::utils::eq_expr_value;\n-\n declare_clippy_lint! {\n     /// **What it does:** Checks for double comparisons that could be simplified to a single expression.\n     ///"}, {"sha": "7e7ec017bbbcbda0fb875a055c5e4c93055ec846", "filename": "clippy_lints/src/drop_forget_ref.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Fdrop_forget_ref.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Fdrop_forget_ref.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fdrop_forget_ref.rs?ref=6595d5571b4c498ca18ffc1fdca17b3815271df0", "patch": "@@ -1,6 +1,6 @@\n-use crate::utils::{match_def_path, paths};\n use clippy_utils::diagnostics::span_lint_and_note;\n use clippy_utils::ty::is_copy;\n+use clippy_utils::{match_def_path, paths};\n use if_chain::if_chain;\n use rustc_hir::{Expr, ExprKind};\n use rustc_lint::{LateContext, LateLintPass};"}, {"sha": "746c1f6df916f4c65791033df1f8fa79c9e82eef", "filename": "clippy_lints/src/duration_subsec.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Fduration_subsec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Fduration_subsec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fduration_subsec.rs?ref=6595d5571b4c498ca18ffc1fdca17b3815271df0", "patch": "@@ -8,8 +8,8 @@ use rustc_session::{declare_lint_pass, declare_tool_lint};\n use rustc_span::source_map::Spanned;\n \n use crate::consts::{constant, Constant};\n-use crate::utils::paths;\n use clippy_utils::diagnostics::span_lint_and_sugg;\n+use clippy_utils::paths;\n \n declare_clippy_lint! {\n     /// **What it does:** Checks for calculation of subsecond microseconds or milliseconds"}, {"sha": "25eb048448ca71b8c5a8ec4c95caa0a74c453207", "filename": "clippy_lints/src/entry.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Fentry.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Fentry.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fentry.rs?ref=6595d5571b4c498ca18ffc1fdca17b3815271df0", "patch": "@@ -1,8 +1,8 @@\n-use crate::utils::SpanlessEq;\n-use crate::utils::{get_item_name, paths};\n use clippy_utils::diagnostics::span_lint_and_then;\n use clippy_utils::source::{snippet, snippet_opt, snippet_with_applicability};\n use clippy_utils::ty::{is_type_diagnostic_item, match_type};\n+use clippy_utils::SpanlessEq;\n+use clippy_utils::{get_item_name, paths};\n use if_chain::if_chain;\n use rustc_errors::Applicability;\n use rustc_hir::intravisit::{walk_expr, NestedVisitorMap, Visitor};"}, {"sha": "0ecc0bc3eb60a3b2d5f1bfbf3d9fcbb17451618b", "filename": "clippy_lints/src/enum_variants.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Fenum_variants.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Fenum_variants.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fenum_variants.rs?ref=6595d5571b4c498ca18ffc1fdca17b3815271df0", "patch": "@@ -1,6 +1,6 @@\n //! lint on enum variants that are prefixed or suffixed by the same characters\n \n-use crate::utils::camel_case;\n+use clippy_utils::camel_case;\n use clippy_utils::diagnostics::{span_lint, span_lint_and_help};\n use clippy_utils::source::is_present_in_source;\n use rustc_ast::ast::{EnumDef, Item, ItemKind, VisibilityKind};"}, {"sha": "6d7046ac8b7b717037d230e9bfacf3825c6c94c6", "filename": "clippy_lints/src/eq_op.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Feq_op.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Feq_op.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Feq_op.rs?ref=6595d5571b4c498ca18ffc1fdca17b3815271df0", "patch": "@@ -1,7 +1,7 @@\n-use crate::utils::{ast_utils::is_useless_with_eq_exprs, eq_expr_value, higher, in_macro, is_expn_of};\n use clippy_utils::diagnostics::{multispan_sugg, span_lint, span_lint_and_then};\n use clippy_utils::source::snippet;\n use clippy_utils::ty::{implements_trait, is_copy};\n+use clippy_utils::{ast_utils::is_useless_with_eq_exprs, eq_expr_value, higher, in_macro, is_expn_of};\n use if_chain::if_chain;\n use rustc_errors::Applicability;\n use rustc_hir::{BinOpKind, BorrowKind, Expr, ExprKind, StmtKind};"}, {"sha": "99253555a95e36659b14d1caa114d587e20e17bb", "filename": "clippy_lints/src/eta_reduction.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Feta_reduction.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Feta_reduction.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Feta_reduction.rs?ref=6595d5571b4c498ca18ffc1fdca17b3815271df0", "patch": "@@ -3,6 +3,7 @@ use clippy_utils::higher;\n use clippy_utils::higher::VecArgs;\n use clippy_utils::source::snippet_opt;\n use clippy_utils::ty::{implements_trait, type_is_unsafe_function};\n+use clippy_utils::{is_adjusted, iter_input_pats};\n use if_chain::if_chain;\n use rustc_errors::Applicability;\n use rustc_hir::{def_id, Expr, ExprKind, Param, PatKind, QPath};\n@@ -11,8 +12,6 @@ use rustc_middle::lint::in_external_macro;\n use rustc_middle::ty::{self, Ty};\n use rustc_session::{declare_lint_pass, declare_tool_lint};\n \n-use crate::utils::{is_adjusted, iter_input_pats};\n-\n declare_clippy_lint! {\n     /// **What it does:** Checks for closures which just call another function where\n     /// the function can be called directly. `unsafe` functions or calls where types"}, {"sha": "5d5b67de8430c01bac3f3e4aa5fc7a1482134b87", "filename": "clippy_lints/src/eval_order_dependence.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Feval_order_dependence.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Feval_order_dependence.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Feval_order_dependence.rs?ref=6595d5571b4c498ca18ffc1fdca17b3815271df0", "patch": "@@ -1,5 +1,5 @@\n-use crate::utils::{get_parent_expr, path_to_local, path_to_local_id};\n use clippy_utils::diagnostics::{span_lint, span_lint_and_note};\n+use clippy_utils::{get_parent_expr, path_to_local, path_to_local_id};\n use rustc_hir::intravisit::{walk_expr, NestedVisitorMap, Visitor};\n use rustc_hir::{BinOpKind, Block, Expr, ExprKind, Guard, HirId, Local, Node, Stmt, StmtKind};\n use rustc_lint::{LateContext, LateLintPass};"}, {"sha": "6c9652fd87df476a827232151cf5e2b0b6c06e41", "filename": "clippy_lints/src/excessive_bools.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Fexcessive_bools.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Fexcessive_bools.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fexcessive_bools.rs?ref=6595d5571b4c498ca18ffc1fdca17b3815271df0", "patch": "@@ -1,5 +1,5 @@\n-use crate::utils::{attr_by_name, in_macro, match_path_ast};\n use clippy_utils::diagnostics::span_lint_and_help;\n+use clippy_utils::{attr_by_name, in_macro, match_path_ast};\n use rustc_ast::ast::{AssocItemKind, Extern, FnKind, FnSig, ImplKind, Item, ItemKind, TraitKind, Ty, TyKind};\n use rustc_lint::{EarlyContext, EarlyLintPass};\n use rustc_session::{declare_tool_lint, impl_lint_pass};"}, {"sha": "635b6d83eab72e8a31978a7ce43d612cfd772832", "filename": "clippy_lints/src/exit.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Fexit.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Fexit.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fexit.rs?ref=6595d5571b4c498ca18ffc1fdca17b3815271df0", "patch": "@@ -1,5 +1,5 @@\n-use crate::utils::{is_entrypoint_fn, match_def_path, paths};\n use clippy_utils::diagnostics::span_lint;\n+use clippy_utils::{is_entrypoint_fn, match_def_path, paths};\n use if_chain::if_chain;\n use rustc_hir::{Expr, ExprKind, Item, ItemKind, Node};\n use rustc_lint::{LateContext, LateLintPass};"}, {"sha": "4146b7baa1021364d11083635242a18f2704b719", "filename": "clippy_lints/src/explicit_write.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Fexplicit_write.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Fexplicit_write.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fexplicit_write.rs?ref=6595d5571b4c498ca18ffc1fdca17b3815271df0", "patch": "@@ -1,5 +1,5 @@\n-use crate::utils::{is_expn_of, match_function_call, paths};\n use clippy_utils::diagnostics::{span_lint, span_lint_and_sugg};\n+use clippy_utils::{is_expn_of, match_function_call, paths};\n use if_chain::if_chain;\n use rustc_ast::ast::LitKind;\n use rustc_errors::Applicability;"}, {"sha": "52a5a7acf0d0d6de09bf697446de09fea2edaeed", "filename": "clippy_lints/src/fallible_impl_from.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Ffallible_impl_from.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Ffallible_impl_from.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Ffallible_impl_from.rs?ref=6595d5571b4c498ca18ffc1fdca17b3815271df0", "patch": "@@ -1,6 +1,6 @@\n-use crate::utils::{is_expn_of, match_panic_def_id, method_chain_args};\n use clippy_utils::diagnostics::span_lint_and_then;\n use clippy_utils::ty::is_type_diagnostic_item;\n+use clippy_utils::{is_expn_of, match_panic_def_id, method_chain_args};\n use if_chain::if_chain;\n use rustc_hir as hir;\n use rustc_lint::{LateContext, LateLintPass};"}, {"sha": "0c59db360f9a24bfd6e2acca3b26440fbf691bef", "filename": "clippy_lints/src/float_equality_without_abs.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Ffloat_equality_without_abs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Ffloat_equality_without_abs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Ffloat_equality_without_abs.rs?ref=6595d5571b4c498ca18ffc1fdca17b3815271df0", "patch": "@@ -1,5 +1,5 @@\n-use crate::utils::{match_def_path, paths, sugg};\n use clippy_utils::diagnostics::span_lint_and_then;\n+use clippy_utils::{match_def_path, paths, sugg};\n use if_chain::if_chain;\n use rustc_ast::util::parser::AssocOp;\n use rustc_errors::Applicability;"}, {"sha": "1ca5c685a75c50419c8e85ad9e51773ea888eb0b", "filename": "clippy_lints/src/float_literal.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Ffloat_literal.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Ffloat_literal.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Ffloat_literal.rs?ref=6595d5571b4c498ca18ffc1fdca17b3815271df0", "patch": "@@ -1,5 +1,5 @@\n-use crate::utils::numeric_literal;\n use clippy_utils::diagnostics::span_lint_and_sugg;\n+use clippy_utils::numeric_literal;\n use if_chain::if_chain;\n use rustc_ast::ast::{self, LitFloatType, LitKind};\n use rustc_errors::Applicability;"}, {"sha": "0b5f0379ce64417442c70483edc5826f1cd0b1d1", "filename": "clippy_lints/src/floating_point_arithmetic.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Ffloating_point_arithmetic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Ffloating_point_arithmetic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Ffloating_point_arithmetic.rs?ref=6595d5571b4c498ca18ffc1fdca17b3815271df0", "patch": "@@ -2,8 +2,8 @@ use crate::consts::{\n     constant, constant_simple, Constant,\n     Constant::{Int, F32, F64},\n };\n-use crate::utils::{eq_expr_value, get_parent_expr, numeric_literal, sugg};\n use clippy_utils::diagnostics::span_lint_and_sugg;\n+use clippy_utils::{eq_expr_value, get_parent_expr, numeric_literal, sugg};\n use if_chain::if_chain;\n use rustc_errors::Applicability;\n use rustc_hir::{BinOpKind, Expr, ExprKind, PathSegment, UnOp};"}, {"sha": "a33f987b423ac27627469262cdc9f8b023993f84", "filename": "clippy_lints/src/format.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Fformat.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Fformat.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fformat.rs?ref=6595d5571b4c498ca18ffc1fdca17b3815271df0", "patch": "@@ -1,8 +1,8 @@\n-use crate::utils::paths;\n-use crate::utils::{is_expn_of, last_path_segment, match_def_path, match_function_call};\n use clippy_utils::diagnostics::span_lint_and_then;\n+use clippy_utils::paths;\n use clippy_utils::source::{snippet, snippet_opt};\n use clippy_utils::ty::is_type_diagnostic_item;\n+use clippy_utils::{is_expn_of, last_path_segment, match_def_path, match_function_call};\n use if_chain::if_chain;\n use rustc_ast::ast::LitKind;\n use rustc_errors::Applicability;"}, {"sha": "b10e83c0ea819e5c1c891d310d6a3b7cd3288a72", "filename": "clippy_lints/src/formatting.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Fformatting.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Fformatting.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fformatting.rs?ref=6595d5571b4c498ca18ffc1fdca17b3815271df0", "patch": "@@ -1,5 +1,5 @@\n-use crate::utils::differing_macro_contexts;\n use clippy_utils::diagnostics::{span_lint_and_help, span_lint_and_note};\n+use clippy_utils::differing_macro_contexts;\n use clippy_utils::source::snippet_opt;\n use if_chain::if_chain;\n use rustc_ast::ast::{BinOpKind, Block, Expr, ExprKind, StmtKind, UnOp};"}, {"sha": "e5ec245e5029bca40396ab43226625f7bc9eaea7", "filename": "clippy_lints/src/from_over_into.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Ffrom_over_into.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Ffrom_over_into.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Ffrom_over_into.rs?ref=6595d5571b4c498ca18ffc1fdca17b3815271df0", "patch": "@@ -1,6 +1,6 @@\n-use crate::utils::paths::INTO;\n-use crate::utils::{match_def_path, meets_msrv};\n use clippy_utils::diagnostics::span_lint_and_help;\n+use clippy_utils::paths::INTO;\n+use clippy_utils::{match_def_path, meets_msrv};\n use if_chain::if_chain;\n use rustc_hir as hir;\n use rustc_lint::{LateContext, LateLintPass, LintContext};"}, {"sha": "3da5bc95b6db15e1aa49f45c03b111331befdf28", "filename": "clippy_lints/src/from_str_radix_10.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Ffrom_str_radix_10.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Ffrom_str_radix_10.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Ffrom_str_radix_10.rs?ref=6595d5571b4c498ca18ffc1fdca17b3815271df0", "patch": "@@ -1,4 +1,5 @@\n use clippy_utils::diagnostics::span_lint_and_sugg;\n+use clippy_utils::sugg::Sugg;\n use clippy_utils::ty::is_type_diagnostic_item;\n use if_chain::if_chain;\n use rustc_errors::Applicability;\n@@ -8,8 +9,6 @@ use rustc_middle::ty::Ty;\n use rustc_session::{declare_lint_pass, declare_tool_lint};\n use rustc_span::symbol::sym;\n \n-use crate::utils::sugg::Sugg;\n-\n declare_clippy_lint! {\n     /// **What it does:**\n     /// Checks for function invocations of the form `primitive::from_str_radix(s, 10)`"}, {"sha": "730492fc7e3efafd787169327b883ec2d94608a7", "filename": "clippy_lints/src/functions.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Ffunctions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Ffunctions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Ffunctions.rs?ref=6595d5571b4c498ca18ffc1fdca17b3815271df0", "patch": "@@ -1,10 +1,10 @@\n-use crate::utils::{\n-    attr_by_name, attrs::is_proc_macro, is_trait_impl_item, iter_input_pats, match_def_path, must_use_attr,\n-    path_to_local, return_ty, trait_ref_of_method,\n-};\n use clippy_utils::diagnostics::{span_lint, span_lint_and_help, span_lint_and_then};\n use clippy_utils::source::{snippet, snippet_opt};\n use clippy_utils::ty::{is_must_use_ty, is_type_diagnostic_item, type_is_unsafe_function};\n+use clippy_utils::{\n+    attr_by_name, attrs::is_proc_macro, is_trait_impl_item, iter_input_pats, match_def_path, must_use_attr,\n+    path_to_local, return_ty, trait_ref_of_method,\n+};\n use if_chain::if_chain;\n use rustc_ast::ast::Attribute;\n use rustc_data_structures::fx::FxHashSet;"}, {"sha": "04730ace887c92868297202034a18da178571f8e", "filename": "clippy_lints/src/future_not_send.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Ffuture_not_send.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Ffuture_not_send.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Ffuture_not_send.rs?ref=6595d5571b4c498ca18ffc1fdca17b3815271df0", "patch": "@@ -1,5 +1,5 @@\n-use crate::utils;\n use clippy_utils::diagnostics::span_lint_and_then;\n+use clippy_utils::return_ty;\n use rustc_hir::intravisit::FnKind;\n use rustc_hir::{Body, FnDecl, HirId};\n use rustc_infer::infer::TyCtxtInferExt;\n@@ -62,7 +62,7 @@ impl<'tcx> LateLintPass<'tcx> for FutureNotSend {\n         if let FnKind::Closure = kind {\n             return;\n         }\n-        let ret_ty = utils::return_ty(cx, hir_id);\n+        let ret_ty = return_ty(cx, hir_id);\n         if let Opaque(id, subst) = *ret_ty.kind() {\n             let preds = cx.tcx.explicit_item_bounds(id);\n             let mut is_future = false;"}, {"sha": "cbcef567c53299d58f702f93a5ac9be9b7d4f499", "filename": "clippy_lints/src/get_last_with_len.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Fget_last_with_len.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Fget_last_with_len.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fget_last_with_len.rs?ref=6595d5571b4c498ca18ffc1fdca17b3815271df0", "patch": "@@ -1,9 +1,9 @@\n //! lint on using `x.get(x.len() - 1)` instead of `x.last()`\n \n-use crate::utils::SpanlessEq;\n use clippy_utils::diagnostics::span_lint_and_sugg;\n use clippy_utils::source::snippet_with_applicability;\n use clippy_utils::ty::is_type_diagnostic_item;\n+use clippy_utils::SpanlessEq;\n use if_chain::if_chain;\n use rustc_ast::ast::LitKind;\n use rustc_errors::Applicability;"}, {"sha": "8bed5e1bf640edfc03a47023a64b72bd274bbbec", "filename": "clippy_lints/src/identity_op.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Fidentity_op.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Fidentity_op.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fidentity_op.rs?ref=6595d5571b4c498ca18ffc1fdca17b3815271df0", "patch": "@@ -7,8 +7,8 @@ use rustc_session::{declare_lint_pass, declare_tool_lint};\n use rustc_span::source_map::Span;\n \n use crate::consts::{constant_simple, Constant};\n-use crate::utils::{clip, unsext};\n use clippy_utils::diagnostics::span_lint;\n+use clippy_utils::{clip, unsext};\n \n declare_clippy_lint! {\n     /// **What it does:** Checks for identity operations, e.g., `x + 0`."}, {"sha": "4aab43256bf0cadbc32f6857ef3d603cccd122b9", "filename": "clippy_lints/src/if_let_mutex.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Fif_let_mutex.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Fif_let_mutex.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fif_let_mutex.rs?ref=6595d5571b4c498ca18ffc1fdca17b3815271df0", "patch": "@@ -1,6 +1,6 @@\n-use crate::utils::SpanlessEq;\n use clippy_utils::diagnostics::span_lint_and_help;\n use clippy_utils::ty::is_type_diagnostic_item;\n+use clippy_utils::SpanlessEq;\n use if_chain::if_chain;\n use rustc_hir::intravisit::{self as visit, NestedVisitorMap, Visitor};\n use rustc_hir::{Expr, ExprKind, MatchSource};"}, {"sha": "6e9280c8c7e012b7c7d9556cdb5c2a5425691c9d", "filename": "clippy_lints/src/if_let_some_result.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Fif_let_some_result.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Fif_let_some_result.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fif_let_some_result.rs?ref=6595d5571b4c498ca18ffc1fdca17b3815271df0", "patch": "@@ -1,5 +1,5 @@\n-use crate::utils::method_chain_args;\n use clippy_utils::diagnostics::span_lint_and_sugg;\n+use clippy_utils::method_chain_args;\n use clippy_utils::source::snippet_with_applicability;\n use clippy_utils::ty::is_type_diagnostic_item;\n use if_chain::if_chain;"}, {"sha": "0b5bf060d4cdf77202f6c5cac72f6341202f8581", "filename": "clippy_lints/src/if_then_some_else_none.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Fif_then_some_else_none.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Fif_then_some_else_none.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fif_then_some_else_none.rs?ref=6595d5571b4c498ca18ffc1fdca17b3815271df0", "patch": "@@ -1,6 +1,6 @@\n-use crate::utils;\n use clippy_utils::diagnostics::span_lint_and_help;\n use clippy_utils::source::snippet_with_macro_callsite;\n+use clippy_utils::{match_qpath, meets_msrv, parent_node_is_if_expr};\n use if_chain::if_chain;\n use rustc_hir::{Expr, ExprKind};\n use rustc_lint::{LateContext, LateLintPass, LintContext};\n@@ -58,7 +58,7 @@ impl_lint_pass!(IfThenSomeElseNone => [IF_THEN_SOME_ELSE_NONE]);\n \n impl LateLintPass<'_> for IfThenSomeElseNone {\n     fn check_expr(&mut self, cx: &LateContext<'_>, expr: &'tcx Expr<'_>) {\n-        if !utils::meets_msrv(self.msrv.as_ref(), &IF_THEN_SOME_ELSE_NONE_MSRV) {\n+        if !meets_msrv(self.msrv.as_ref(), &IF_THEN_SOME_ELSE_NONE_MSRV) {\n             return;\n         }\n \n@@ -67,7 +67,7 @@ impl LateLintPass<'_> for IfThenSomeElseNone {\n         }\n \n         // We only care about the top-most `if` in the chain\n-        if utils::parent_node_is_if_expr(expr, cx) {\n+        if parent_node_is_if_expr(expr, cx) {\n             return;\n         }\n \n@@ -77,12 +77,12 @@ impl LateLintPass<'_> for IfThenSomeElseNone {\n             if let Some(ref then_expr) = then_block.expr;\n             if let ExprKind::Call(ref then_call, [then_arg]) = then_expr.kind;\n             if let ExprKind::Path(ref then_call_qpath) = then_call.kind;\n-            if utils::match_qpath(then_call_qpath, &utils::paths::OPTION_SOME);\n+            if match_qpath(then_call_qpath, &clippy_utils::paths::OPTION_SOME);\n             if let ExprKind::Block(ref els_block, _) = els.kind;\n             if els_block.stmts.is_empty();\n             if let Some(ref els_expr) = els_block.expr;\n             if let ExprKind::Path(ref els_call_qpath) = els_expr.kind;\n-            if utils::match_qpath(els_call_qpath, &utils::paths::OPTION_NONE);\n+            if match_qpath(els_call_qpath, &clippy_utils::paths::OPTION_NONE);\n             then {\n                 let cond_snip = snippet_with_macro_callsite(cx, cond.span, \"[condition]\");\n                 let cond_snip = if matches!(cond.kind, ExprKind::Unary(_, _) | ExprKind::Binary(_, _, _)) {"}, {"sha": "6863645a92dbeabbbc882296bdc08f6d5361f0ff", "filename": "clippy_lints/src/implicit_return.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Fimplicit_return.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Fimplicit_return.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fimplicit_return.rs?ref=6595d5571b4c498ca18ffc1fdca17b3815271df0", "patch": "@@ -1,5 +1,5 @@\n-use crate::utils::match_panic_def_id;\n use clippy_utils::diagnostics::span_lint_and_then;\n+use clippy_utils::match_panic_def_id;\n use clippy_utils::source::snippet_opt;\n use if_chain::if_chain;\n use rustc_errors::Applicability;"}, {"sha": "5207c628987263776989fe329171f7d9072c1d23", "filename": "clippy_lints/src/implicit_saturating_sub.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Fimplicit_saturating_sub.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Fimplicit_saturating_sub.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fimplicit_saturating_sub.rs?ref=6595d5571b4c498ca18ffc1fdca17b3815271df0", "patch": "@@ -1,5 +1,5 @@\n-use crate::utils::{in_macro, match_qpath, SpanlessEq};\n use clippy_utils::diagnostics::span_lint_and_sugg;\n+use clippy_utils::{in_macro, match_qpath, SpanlessEq};\n use if_chain::if_chain;\n use rustc_ast::ast::LitKind;\n use rustc_errors::Applicability;"}, {"sha": "94d39019608f76b8d3c4b97d43b72a2143adb6c6", "filename": "clippy_lints/src/indexing_slicing.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Findexing_slicing.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Findexing_slicing.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Findexing_slicing.rs?ref=6595d5571b4c498ca18ffc1fdca17b3815271df0", "patch": "@@ -1,8 +1,8 @@\n //! lint on indexing and slicing operations\n \n use crate::consts::{constant, Constant};\n-use crate::utils::higher;\n use clippy_utils::diagnostics::{span_lint, span_lint_and_help};\n+use clippy_utils::higher;\n use rustc_ast::ast::RangeLimits;\n use rustc_hir::{Expr, ExprKind};\n use rustc_lint::{LateContext, LateLintPass};"}, {"sha": "fb35bc1e78051c0bda11d30adbcec226c92c0b16", "filename": "clippy_lints/src/infinite_iter.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Finfinite_iter.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Finfinite_iter.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Finfinite_iter.rs?ref=6595d5571b4c498ca18ffc1fdca17b3815271df0", "patch": "@@ -1,11 +1,10 @@\n use clippy_utils::diagnostics::span_lint;\n use clippy_utils::ty::{implements_trait, match_type};\n+use clippy_utils::{get_trait_def_id, higher, match_qpath, paths};\n use rustc_hir::{BorrowKind, Expr, ExprKind};\n use rustc_lint::{LateContext, LateLintPass};\n use rustc_session::{declare_lint_pass, declare_tool_lint};\n \n-use crate::utils::{get_trait_def_id, higher, match_qpath, paths};\n-\n declare_clippy_lint! {\n     /// **What it does:** Checks for iteration that is guaranteed to be infinite.\n     ///"}, {"sha": "5b2e70e3ce94f3d9c72477d951fafca9bc40ca0c", "filename": "clippy_lints/src/inherent_impl.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Finherent_impl.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Finherent_impl.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Finherent_impl.rs?ref=6595d5571b4c498ca18ffc1fdca17b3815271df0", "patch": "@@ -1,7 +1,7 @@\n //! lint on inherent implementations\n \n-use crate::utils::in_macro;\n use clippy_utils::diagnostics::span_lint_and_then;\n+use clippy_utils::in_macro;\n use rustc_data_structures::fx::FxHashMap;\n use rustc_hir::{def_id, Crate, Impl, Item, ItemKind};\n use rustc_lint::{LateContext, LateLintPass};"}, {"sha": "b023e13e846c7d19b6a090386109b65879854656", "filename": "clippy_lints/src/inherent_to_string.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Finherent_to_string.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Finherent_to_string.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Finherent_to_string.rs?ref=6595d5571b4c498ca18ffc1fdca17b3815271df0", "patch": "@@ -1,13 +1,12 @@\n use clippy_utils::diagnostics::span_lint_and_help;\n use clippy_utils::ty::{implements_trait, is_type_diagnostic_item};\n+use clippy_utils::{get_trait_def_id, paths, return_ty, trait_ref_of_method};\n use if_chain::if_chain;\n use rustc_hir::{ImplItem, ImplItemKind};\n use rustc_lint::{LateContext, LateLintPass};\n use rustc_session::{declare_lint_pass, declare_tool_lint};\n use rustc_span::sym;\n \n-use crate::utils::{get_trait_def_id, paths, return_ty, trait_ref_of_method};\n-\n declare_clippy_lint! {\n     /// **What it does:** Checks for the definition of inherent methods with a signature of `to_string(&self) -> String`.\n     ///"}, {"sha": "20f00bd51ba868dcf440314e8b11045e5764519c", "filename": "clippy_lints/src/inline_fn_without_body.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Finline_fn_without_body.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Finline_fn_without_body.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Finline_fn_without_body.rs?ref=6595d5571b4c498ca18ffc1fdca17b3815271df0", "patch": "@@ -1,7 +1,7 @@\n //! checks for `#[inline]` on trait methods without bodies\n \n-use crate::utils::sugg::DiagnosticBuilderExt;\n use clippy_utils::diagnostics::span_lint_and_then;\n+use clippy_utils::sugg::DiagnosticBuilderExt;\n use rustc_ast::ast::Attribute;\n use rustc_errors::Applicability;\n use rustc_hir::{TraitFn, TraitItem, TraitItemKind};"}, {"sha": "717f2ea84f42af7037eb6fb2c851b71bdd6819ce", "filename": "clippy_lints/src/len_zero.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Flen_zero.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Flen_zero.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Flen_zero.rs?ref=6595d5571b4c498ca18ffc1fdca17b3815271df0", "patch": "@@ -1,6 +1,6 @@\n-use crate::utils::{get_item_name, get_parent_as_impl, is_allowed};\n use clippy_utils::diagnostics::{span_lint, span_lint_and_sugg, span_lint_and_then};\n use clippy_utils::source::snippet_with_applicability;\n+use clippy_utils::{get_item_name, get_parent_as_impl, is_allowed};\n use if_chain::if_chain;\n use rustc_ast::ast::LitKind;\n use rustc_data_structures::fx::FxHashSet;"}, {"sha": "2d7d9c9befbb2414f2701324320abdcc3049f91e", "filename": "clippy_lints/src/let_if_seq.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Flet_if_seq.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Flet_if_seq.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Flet_if_seq.rs?ref=6595d5571b4c498ca18ffc1fdca17b3815271df0", "patch": "@@ -1,6 +1,6 @@\n-use crate::utils::{path_to_local_id, visitors::LocalUsedVisitor};\n use clippy_utils::diagnostics::span_lint_and_then;\n use clippy_utils::source::snippet;\n+use clippy_utils::{path_to_local_id, visitors::LocalUsedVisitor};\n use if_chain::if_chain;\n use rustc_errors::Applicability;\n use rustc_hir as hir;"}, {"sha": "7e3a76ded2cfab0060d65da18d44822444a11f49", "filename": "clippy_lints/src/let_underscore.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Flet_underscore.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Flet_underscore.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Flet_underscore.rs?ref=6595d5571b4c498ca18ffc1fdca17b3815271df0", "patch": "@@ -1,14 +1,13 @@\n use clippy_utils::diagnostics::span_lint_and_help;\n use clippy_utils::ty::{is_must_use_ty, match_type};\n+use clippy_utils::{is_must_use_func_call, paths};\n use if_chain::if_chain;\n use rustc_hir::{Local, PatKind};\n use rustc_lint::{LateContext, LateLintPass};\n use rustc_middle::lint::in_external_macro;\n use rustc_middle::ty::subst::GenericArgKind;\n use rustc_session::{declare_lint_pass, declare_tool_lint};\n \n-use crate::utils::{is_must_use_func_call, paths};\n-\n declare_clippy_lint! {\n     /// **What it does:** Checks for `let _ = <expr>`\n     /// where expr is #[must_use]"}, {"sha": "9b2876ddc1182e4b73975013174ab1807e9dfeac", "filename": "clippy_lints/src/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Flib.rs?ref=6595d5571b4c498ca18ffc1fdca17b3815271df0", "patch": "@@ -42,7 +42,7 @@ extern crate rustc_target;\n extern crate rustc_trait_selection;\n extern crate rustc_typeck;\n \n-use crate::utils::parse_msrv;\n+use clippy_utils::parse_msrv;\n use rustc_data_structures::fx::FxHashSet;\n use rustc_lint::LintId;\n use rustc_session::Session;"}, {"sha": "a2f093e6ef78ba6ff299c999bf9ff576cad226d9", "filename": "clippy_lints/src/lifetimes.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Flifetimes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Flifetimes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Flifetimes.rs?ref=6595d5571b4c498ca18ffc1fdca17b3815271df0", "patch": "@@ -1,5 +1,5 @@\n-use crate::utils::{in_macro, trait_ref_of_method};\n use clippy_utils::diagnostics::span_lint;\n+use clippy_utils::{in_macro, trait_ref_of_method};\n use rustc_data_structures::fx::{FxHashMap, FxHashSet};\n use rustc_hir::intravisit::{\n     walk_fn_decl, walk_generic_param, walk_generics, walk_item, walk_param_bound, walk_poly_trait_ref, walk_ty,"}, {"sha": "7fd55151226b40c39d604e6216ea7640ed931022", "filename": "clippy_lints/src/literal_representation.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Fliteral_representation.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Fliteral_representation.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fliteral_representation.rs?ref=6595d5571b4c498ca18ffc1fdca17b3815271df0", "patch": "@@ -1,12 +1,12 @@\n //! Lints concerned with the grouping of digits with underscores in integral or\n //! floating-point literal expressions.\n \n-use crate::utils::{\n+use clippy_utils::diagnostics::span_lint_and_sugg;\n+use clippy_utils::source::snippet_opt;\n+use clippy_utils::{\n     in_macro,\n     numeric_literal::{NumericLiteral, Radix},\n };\n-use clippy_utils::diagnostics::span_lint_and_sugg;\n-use clippy_utils::source::snippet_opt;\n use if_chain::if_chain;\n use rustc_ast::ast::{Expr, ExprKind, Lit, LitKind};\n use rustc_errors::Applicability;"}, {"sha": "dda09fecdf90f5918fa396569c981f89f80359f7", "filename": "clippy_lints/src/loops/empty_loop.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Floops%2Fempty_loop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Floops%2Fempty_loop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Floops%2Fempty_loop.rs?ref=6595d5571b4c498ca18ffc1fdca17b3815271df0", "patch": "@@ -1,6 +1,6 @@\n use super::EMPTY_LOOP;\n-use crate::utils::{is_in_panic_handler, is_no_std_crate};\n use clippy_utils::diagnostics::span_lint_and_help;\n+use clippy_utils::{is_in_panic_handler, is_no_std_crate};\n \n use rustc_hir::{Block, Expr};\n use rustc_lint::LateContext;"}, {"sha": "f14dbb1d642196ab913da32e7b03dbc0458ecc85", "filename": "clippy_lints/src/loops/explicit_counter_loop.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Floops%2Fexplicit_counter_loop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Floops%2Fexplicit_counter_loop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Floops%2Fexplicit_counter_loop.rs?ref=6595d5571b4c498ca18ffc1fdca17b3815271df0", "patch": "@@ -1,9 +1,9 @@\n use super::{\n     get_span_of_entire_for_loop, make_iterator_snippet, IncrementVisitor, InitializeVisitor, EXPLICIT_COUNTER_LOOP,\n };\n-use crate::utils::{get_enclosing_block, is_integer_const};\n use clippy_utils::diagnostics::span_lint_and_sugg;\n use clippy_utils::source::snippet_with_applicability;\n+use clippy_utils::{get_enclosing_block, is_integer_const};\n use if_chain::if_chain;\n use rustc_errors::Applicability;\n use rustc_hir::intravisit::{walk_block, walk_expr};"}, {"sha": "92aa2beb66d455690c6aa05a44f2074849b7afbc", "filename": "clippy_lints/src/loops/explicit_iter_loop.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Floops%2Fexplicit_iter_loop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Floops%2Fexplicit_iter_loop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Floops%2Fexplicit_iter_loop.rs?ref=6595d5571b4c498ca18ffc1fdca17b3815271df0", "patch": "@@ -1,8 +1,8 @@\n use super::EXPLICIT_ITER_LOOP;\n-use crate::utils::{match_trait_method, paths};\n use clippy_utils::diagnostics::span_lint_and_sugg;\n use clippy_utils::source::snippet_with_applicability;\n use clippy_utils::ty::{is_type_diagnostic_item, match_type};\n+use clippy_utils::{match_trait_method, paths};\n use rustc_errors::Applicability;\n use rustc_hir::{Expr, Mutability};\n use rustc_lint::LateContext;"}, {"sha": "8f18f54119bd7a2d809a3087f8626cafd63b5791", "filename": "clippy_lints/src/loops/for_kv_map.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Floops%2Ffor_kv_map.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Floops%2Ffor_kv_map.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Floops%2Ffor_kv_map.rs?ref=6595d5571b4c498ca18ffc1fdca17b3815271df0", "patch": "@@ -1,9 +1,9 @@\n use super::FOR_KV_MAP;\n-use crate::utils::visitors::LocalUsedVisitor;\n-use crate::utils::{paths, sugg};\n use clippy_utils::diagnostics::{multispan_sugg, span_lint_and_then};\n use clippy_utils::source::snippet;\n use clippy_utils::ty::{is_type_diagnostic_item, match_type};\n+use clippy_utils::visitors::LocalUsedVisitor;\n+use clippy_utils::{paths, sugg};\n use rustc_hir::{BorrowKind, Expr, ExprKind, Mutability, Pat, PatKind};\n use rustc_lint::LateContext;\n use rustc_middle::ty;"}, {"sha": "9148fbfd497af3e1c4de607ff583296135995e35", "filename": "clippy_lints/src/loops/iter_next_loop.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Floops%2Fiter_next_loop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Floops%2Fiter_next_loop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Floops%2Fiter_next_loop.rs?ref=6595d5571b4c498ca18ffc1fdca17b3815271df0", "patch": "@@ -1,11 +1,10 @@\n use super::ITER_NEXT_LOOP;\n use clippy_utils::diagnostics::span_lint;\n+use clippy_utils::is_trait_method;\n use rustc_hir::Expr;\n use rustc_lint::LateContext;\n use rustc_span::sym;\n \n-use crate::utils::is_trait_method;\n-\n pub(super) fn check(cx: &LateContext<'_>, arg: &Expr<'_>, expr: &Expr<'_>) -> bool {\n     if is_trait_method(cx, arg, sym::Iterator) {\n         span_lint("}, {"sha": "be87f67d3007a63edceaba06e26cdec63eac4432", "filename": "clippy_lints/src/loops/manual_flatten.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Floops%2Fmanual_flatten.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Floops%2Fmanual_flatten.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Floops%2Fmanual_flatten.rs?ref=6595d5571b4c498ca18ffc1fdca17b3815271df0", "patch": "@@ -1,7 +1,7 @@\n use super::utils::make_iterator_snippet;\n use super::MANUAL_FLATTEN;\n-use crate::utils::{is_ok_ctor, is_some_ctor, path_to_local_id};\n use clippy_utils::diagnostics::span_lint_and_then;\n+use clippy_utils::{is_ok_ctor, is_some_ctor, path_to_local_id};\n use if_chain::if_chain;\n use rustc_errors::Applicability;\n use rustc_hir::{Expr, ExprKind, MatchSource, Pat, PatKind, QPath, StmtKind};"}, {"sha": "af6d56a89af3b9aea26cdd7dc215d6fe532c1215", "filename": "clippy_lints/src/loops/manual_memcpy.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Floops%2Fmanual_memcpy.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Floops%2Fmanual_memcpy.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Floops%2Fmanual_memcpy.rs?ref=6595d5571b4c498ca18ffc1fdca17b3815271df0", "patch": "@@ -1,9 +1,9 @@\n use super::{get_span_of_entire_for_loop, IncrementVisitor, InitializeVisitor, MANUAL_MEMCPY};\n-use crate::utils::sugg::Sugg;\n-use crate::utils::{get_enclosing_block, higher, path_to_local, sugg};\n use clippy_utils::diagnostics::span_lint_and_sugg;\n use clippy_utils::source::snippet;\n+use clippy_utils::sugg::Sugg;\n use clippy_utils::ty::is_type_diagnostic_item;\n+use clippy_utils::{get_enclosing_block, higher, path_to_local, sugg};\n use if_chain::if_chain;\n use rustc_ast::ast;\n use rustc_errors::Applicability;"}, {"sha": "202914919987c942b116b3a3fcc3e2e688f19f36", "filename": "clippy_lints/src/loops/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Floops%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Floops%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Floops%2Fmod.rs?ref=6595d5571b4c498ca18ffc1fdca17b3815271df0", "patch": "@@ -18,7 +18,7 @@ mod while_immutable_condition;\n mod while_let_loop;\n mod while_let_on_iterator;\n \n-use crate::utils::higher;\n+use clippy_utils::higher;\n use rustc_hir::{Expr, ExprKind, LoopSource, Pat};\n use rustc_lint::{LateContext, LateLintPass};\n use rustc_session::{declare_lint_pass, declare_tool_lint};"}, {"sha": "f4e4064ba1d56570f1db5755571b3aeb742ece27", "filename": "clippy_lints/src/loops/mut_range_bound.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Floops%2Fmut_range_bound.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Floops%2Fmut_range_bound.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Floops%2Fmut_range_bound.rs?ref=6595d5571b4c498ca18ffc1fdca17b3815271df0", "patch": "@@ -1,6 +1,6 @@\n use super::MUT_RANGE_BOUND;\n-use crate::utils::{higher, path_to_local};\n use clippy_utils::diagnostics::span_lint;\n+use clippy_utils::{higher, path_to_local};\n use if_chain::if_chain;\n use rustc_hir::{BindingAnnotation, Expr, HirId, Node, PatKind};\n use rustc_infer::infer::TyCtxtInferExt;"}, {"sha": "5594fc7b046e738e48fa7c032f1760fe90cbee2a", "filename": "clippy_lints/src/loops/needless_collect.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Floops%2Fneedless_collect.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Floops%2Fneedless_collect.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Floops%2Fneedless_collect.rs?ref=6595d5571b4c498ca18ffc1fdca17b3815271df0", "patch": "@@ -1,9 +1,9 @@\n use super::NEEDLESS_COLLECT;\n-use crate::utils::sugg::Sugg;\n-use crate::utils::{is_trait_method, path_to_local_id, paths};\n use clippy_utils::diagnostics::{span_lint_and_sugg, span_lint_and_then};\n use clippy_utils::source::snippet;\n+use clippy_utils::sugg::Sugg;\n use clippy_utils::ty::{is_type_diagnostic_item, match_type};\n+use clippy_utils::{is_trait_method, path_to_local_id, paths};\n use if_chain::if_chain;\n use rustc_errors::Applicability;\n use rustc_hir::intravisit::{walk_block, walk_expr, NestedVisitorMap, Visitor};"}, {"sha": "3c40d54cb42106f33d92757dc01d86609ba915a7", "filename": "clippy_lints/src/loops/needless_range_loop.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Floops%2Fneedless_range_loop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Floops%2Fneedless_range_loop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Floops%2Fneedless_range_loop.rs?ref=6595d5571b4c498ca18ffc1fdca17b3815271df0", "patch": "@@ -1,11 +1,11 @@\n use super::NEEDLESS_RANGE_LOOP;\n-use crate::utils::visitors::LocalUsedVisitor;\n-use crate::utils::{\n-    contains_name, higher, is_integer_const, match_trait_method, path_to_local_id, paths, sugg, SpanlessEq,\n-};\n use clippy_utils::diagnostics::{multispan_sugg, span_lint_and_then};\n use clippy_utils::source::snippet;\n use clippy_utils::ty::has_iter_method;\n+use clippy_utils::visitors::LocalUsedVisitor;\n+use clippy_utils::{\n+    contains_name, higher, is_integer_const, match_trait_method, path_to_local_id, paths, sugg, SpanlessEq,\n+};\n use if_chain::if_chain;\n use rustc_ast::ast;\n use rustc_data_structures::fx::{FxHashMap, FxHashSet};"}, {"sha": "8451c1c6130de48e5005a6a8b43d41b1e89d7b14", "filename": "clippy_lints/src/loops/single_element_loop.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Floops%2Fsingle_element_loop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Floops%2Fsingle_element_loop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Floops%2Fsingle_element_loop.rs?ref=6595d5571b4c498ca18ffc1fdca17b3815271df0", "patch": "@@ -1,6 +1,6 @@\n use super::{get_span_of_entire_for_loop, SINGLE_ELEMENT_LOOP};\n-use crate::utils::single_segment_path;\n use clippy_utils::diagnostics::span_lint_and_sugg;\n+use clippy_utils::single_segment_path;\n use clippy_utils::source::{indent_of, snippet};\n use if_chain::if_chain;\n use rustc_errors::Applicability;"}, {"sha": "bb409c4853286b45087bdb26b40ea77a3d3e4796", "filename": "clippy_lints/src/loops/utils.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Floops%2Futils.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Floops%2Futils.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Floops%2Futils.rs?ref=6595d5571b4c498ca18ffc1fdca17b3815271df0", "patch": "@@ -1,5 +1,5 @@\n-use crate::utils::{get_parent_expr, is_integer_const, path_to_local, path_to_local_id, sugg};\n use clippy_utils::ty::{has_iter_method, implements_trait};\n+use clippy_utils::{get_parent_expr, is_integer_const, path_to_local, path_to_local_id, sugg};\n use if_chain::if_chain;\n use rustc_data_structures::fx::FxHashMap;\n use rustc_errors::Applicability;"}, {"sha": "cad9ff8489a9c3e8544b40acec051a2696c99f1f", "filename": "clippy_lints/src/loops/while_immutable_condition.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Floops%2Fwhile_immutable_condition.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Floops%2Fwhile_immutable_condition.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Floops%2Fwhile_immutable_condition.rs?ref=6595d5571b4c498ca18ffc1fdca17b3815271df0", "patch": "@@ -1,7 +1,7 @@\n use super::WHILE_IMMUTABLE_CONDITION;\n use crate::consts::constant;\n-use crate::utils::usage::mutated_variables;\n use clippy_utils::diagnostics::span_lint_and_then;\n+use clippy_utils::usage::mutated_variables;\n use if_chain::if_chain;\n use rustc_data_structures::fx::{FxHashMap, FxHashSet};\n use rustc_hir::def::{DefKind, Res};"}, {"sha": "57fc6250a9ae8d762cdf1578537e08d78e7cd14c", "filename": "clippy_lints/src/loops/while_let_on_iterator.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Floops%2Fwhile_let_on_iterator.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Floops%2Fwhile_let_on_iterator.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Floops%2Fwhile_let_on_iterator.rs?ref=6595d5571b4c498ca18ffc1fdca17b3815271df0", "patch": "@@ -1,12 +1,12 @@\n use super::utils::{LoopNestVisitor, Nesting};\n use super::WHILE_LET_ON_ITERATOR;\n-use crate::utils::usage::mutated_variables;\n-use crate::utils::{\n-    get_enclosing_block, is_refutable, is_trait_method, last_path_segment, path_to_local, path_to_local_id,\n-};\n use clippy_utils::diagnostics::span_lint_and_sugg;\n use clippy_utils::source::snippet_with_applicability;\n use clippy_utils::ty::implements_trait;\n+use clippy_utils::usage::mutated_variables;\n+use clippy_utils::{\n+    get_enclosing_block, is_refutable, is_trait_method, last_path_segment, path_to_local, path_to_local_id,\n+};\n use if_chain::if_chain;\n use rustc_errors::Applicability;\n use rustc_hir::intravisit::{walk_block, walk_expr, NestedVisitorMap, Visitor};"}, {"sha": "d573c29783876ab845504aa767444082c4171442", "filename": "clippy_lints/src/macro_use.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Fmacro_use.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Fmacro_use.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmacro_use.rs?ref=6595d5571b4c498ca18ffc1fdca17b3815271df0", "patch": "@@ -1,5 +1,5 @@\n-use crate::utils::in_macro;\n use clippy_utils::diagnostics::span_lint_and_sugg;\n+use clippy_utils::in_macro;\n use clippy_utils::source::snippet;\n use hir::def::{DefKind, Res};\n use if_chain::if_chain;"}, {"sha": "07d8a440aea4c440e1047c10a4b3c3c069710d7d", "filename": "clippy_lints/src/main_recursion.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Fmain_recursion.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Fmain_recursion.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmain_recursion.rs?ref=6595d5571b4c498ca18ffc1fdca17b3815271df0", "patch": "@@ -1,12 +1,11 @@\n use clippy_utils::diagnostics::span_lint_and_help;\n use clippy_utils::source::snippet;\n+use clippy_utils::{is_entrypoint_fn, is_no_std_crate};\n use if_chain::if_chain;\n use rustc_hir::{Crate, Expr, ExprKind, QPath};\n use rustc_lint::{LateContext, LateLintPass};\n use rustc_session::{declare_tool_lint, impl_lint_pass};\n \n-use crate::utils::{is_entrypoint_fn, is_no_std_crate};\n-\n declare_clippy_lint! {\n     /// **What it does:** Checks for recursion using the entrypoint.\n     ///"}, {"sha": "5d88ff3b99f3191d0705d43804778e014d7814e5", "filename": "clippy_lints/src/manual_async_fn.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Fmanual_async_fn.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Fmanual_async_fn.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmanual_async_fn.rs?ref=6595d5571b4c498ca18ffc1fdca17b3815271df0", "patch": "@@ -1,6 +1,6 @@\n-use crate::utils::match_function_call;\n-use crate::utils::paths::FUTURE_FROM_GENERATOR;\n use clippy_utils::diagnostics::span_lint_and_then;\n+use clippy_utils::match_function_call;\n+use clippy_utils::paths::FUTURE_FROM_GENERATOR;\n use clippy_utils::source::{position_before_rarrow, snippet_block, snippet_opt};\n use if_chain::if_chain;\n use rustc_errors::Applicability;"}, {"sha": "cd9594737bf58766ba587c81319bbd7e26313a58", "filename": "clippy_lints/src/manual_map.rs", "status": "modified", "additions": 2, "deletions": 5, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Fmanual_map.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Fmanual_map.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmanual_map.rs?ref=6595d5571b4c498ca18ffc1fdca17b3815271df0", "patch": "@@ -1,11 +1,8 @@\n-use crate::{\n-    map_unit_fn::OPTION_MAP_UNIT_FN,\n-    matches::MATCH_AS_REF,\n-    utils::{is_allowed, match_def_path, match_var, paths, peel_hir_expr_refs},\n-};\n+use crate::{map_unit_fn::OPTION_MAP_UNIT_FN, matches::MATCH_AS_REF};\n use clippy_utils::diagnostics::span_lint_and_sugg;\n use clippy_utils::source::{snippet_with_applicability, snippet_with_context};\n use clippy_utils::ty::{can_partially_move_ty, is_type_diagnostic_item, peel_mid_ty_refs_is_mutable};\n+use clippy_utils::{is_allowed, match_def_path, match_var, paths, peel_hir_expr_refs};\n use rustc_ast::util::parser::PREC_POSTFIX;\n use rustc_errors::Applicability;\n use rustc_hir::{"}, {"sha": "a9a89ae5659a017eb861505eeff1890df8e16f84", "filename": "clippy_lints/src/manual_non_exhaustive.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Fmanual_non_exhaustive.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Fmanual_non_exhaustive.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmanual_non_exhaustive.rs?ref=6595d5571b4c498ca18ffc1fdca17b3815271df0", "patch": "@@ -1,5 +1,5 @@\n-use crate::utils::meets_msrv;\n use clippy_utils::diagnostics::span_lint_and_then;\n+use clippy_utils::meets_msrv;\n use clippy_utils::source::snippet_opt;\n use if_chain::if_chain;\n use rustc_ast::ast::{Attribute, Item, ItemKind, StructField, Variant, VariantData, VisibilityKind};"}, {"sha": "9bfae602c407d26f6bf78f761f86f3eeccbfbbf7", "filename": "clippy_lints/src/manual_ok_or.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Fmanual_ok_or.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Fmanual_ok_or.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmanual_ok_or.rs?ref=6595d5571b4c498ca18ffc1fdca17b3815271df0", "patch": "@@ -1,7 +1,7 @@\n-use crate::utils::{match_qpath, path_to_local_id, paths};\n use clippy_utils::diagnostics::span_lint_and_sugg;\n use clippy_utils::source::{indent_of, reindent_multiline, snippet_opt};\n use clippy_utils::ty::is_type_diagnostic_item;\n+use clippy_utils::{match_qpath, path_to_local_id, paths};\n use if_chain::if_chain;\n use rustc_errors::Applicability;\n use rustc_hir::{Expr, ExprKind, PatKind};"}, {"sha": "9da37efddac98563d288e0185be253d5ef657c9b", "filename": "clippy_lints/src/manual_strip.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Fmanual_strip.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Fmanual_strip.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmanual_strip.rs?ref=6595d5571b4c498ca18ffc1fdca17b3815271df0", "patch": "@@ -1,8 +1,8 @@\n use crate::consts::{constant, Constant};\n-use crate::utils::usage::mutated_variables;\n-use crate::utils::{eq_expr_value, higher, match_def_path, meets_msrv, paths};\n use clippy_utils::diagnostics::{multispan_sugg, span_lint_and_then};\n use clippy_utils::source::snippet;\n+use clippy_utils::usage::mutated_variables;\n+use clippy_utils::{eq_expr_value, higher, match_def_path, meets_msrv, paths};\n use if_chain::if_chain;\n use rustc_ast::ast::LitKind;\n use rustc_hir::def::Res;"}, {"sha": "f296d6a1a15f5f3af7f8b2ad688e14ec96fdee47", "filename": "clippy_lints/src/manual_unwrap_or.rs", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Fmanual_unwrap_or.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Fmanual_unwrap_or.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmanual_unwrap_or.rs?ref=6595d5571b4c498ca18ffc1fdca17b3815271df0", "patch": "@@ -1,9 +1,9 @@\n use crate::consts::constant_simple;\n-use crate::utils;\n-use crate::utils::{in_constant, path_to_local_id, sugg};\n use clippy_utils::diagnostics::span_lint_and_sugg;\n use clippy_utils::source::{indent_of, reindent_multiline, snippet_opt};\n use clippy_utils::ty::is_type_diagnostic_item;\n+use clippy_utils::usage::contains_return_break_continue_macro;\n+use clippy_utils::{in_constant, match_qpath, path_to_local_id, paths, sugg};\n use if_chain::if_chain;\n use rustc_errors::Applicability;\n use rustc_hir::{Arm, Expr, ExprKind, Pat, PatKind};\n@@ -75,19 +75,19 @@ fn lint_manual_unwrap_or<'tcx>(cx: &LateContext<'tcx>, expr: &'tcx Expr<'tcx>) {\n             if let Some((idx, or_arm)) = arms.iter().enumerate().find(|(_, arm)|\n                 match arm.pat.kind {\n                     PatKind::Path(ref some_qpath) =>\n-                        utils::match_qpath(some_qpath, &utils::paths::OPTION_NONE),\n+                        match_qpath(some_qpath, &paths::OPTION_NONE),\n                     PatKind::TupleStruct(ref err_qpath, &[Pat { kind: PatKind::Wild, .. }], _) =>\n-                        utils::match_qpath(err_qpath, &utils::paths::RESULT_ERR),\n+                        match_qpath(err_qpath, &paths::RESULT_ERR),\n                     _ => false,\n                 }\n             );\n             let unwrap_arm = &arms[1 - idx];\n             if let PatKind::TupleStruct(ref unwrap_qpath, &[unwrap_pat], _) = unwrap_arm.pat.kind;\n-            if utils::match_qpath(unwrap_qpath, &utils::paths::OPTION_SOME)\n-                || utils::match_qpath(unwrap_qpath, &utils::paths::RESULT_OK);\n+            if match_qpath(unwrap_qpath, &paths::OPTION_SOME)\n+                || match_qpath(unwrap_qpath, &paths::RESULT_OK);\n             if let PatKind::Binding(_, binding_hir_id, ..) = unwrap_pat.kind;\n             if path_to_local_id(unwrap_arm.body, binding_hir_id);\n-            if !utils::usage::contains_return_break_continue_macro(or_arm.body);\n+            if !contains_return_break_continue_macro(or_arm.body);\n             then {\n                 Some(or_arm)\n             } else {"}, {"sha": "cfcc705eabc9c640ddef320af0565eb6f6fd2859", "filename": "clippy_lints/src/map_clone.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Fmap_clone.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Fmap_clone.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmap_clone.rs?ref=6595d5571b4c498ca18ffc1fdca17b3815271df0", "patch": "@@ -1,6 +1,6 @@\n-use crate::utils::is_trait_method;\n-use crate::utils::remove_blocks;\n use clippy_utils::diagnostics::span_lint_and_sugg;\n+use clippy_utils::is_trait_method;\n+use clippy_utils::remove_blocks;\n use clippy_utils::source::snippet_with_applicability;\n use clippy_utils::ty::{is_copy, is_type_diagnostic_item};\n use if_chain::if_chain;"}, {"sha": "75191e1f9ee8d104670e67b2404472e87ba19e1e", "filename": "clippy_lints/src/map_identity.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Fmap_identity.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Fmap_identity.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmap_identity.rs?ref=6595d5571b4c498ca18ffc1fdca17b3815271df0", "patch": "@@ -1,6 +1,6 @@\n-use crate::utils::{is_adjusted, is_trait_method, match_path, match_var, paths, remove_blocks};\n use clippy_utils::diagnostics::span_lint_and_sugg;\n use clippy_utils::ty::is_type_diagnostic_item;\n+use clippy_utils::{is_adjusted, is_trait_method, match_path, match_var, paths, remove_blocks};\n use if_chain::if_chain;\n use rustc_errors::Applicability;\n use rustc_hir::{Body, Expr, ExprKind, Pat, PatKind, QPath, StmtKind};"}, {"sha": "d4764b5ccffd6bf82b5a9fd5d00f74855659f22b", "filename": "clippy_lints/src/map_unit_fn.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Fmap_unit_fn.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Fmap_unit_fn.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmap_unit_fn.rs?ref=6595d5571b4c498ca18ffc1fdca17b3815271df0", "patch": "@@ -1,7 +1,7 @@\n-use crate::utils::{iter_input_pats, method_chain_args};\n use clippy_utils::diagnostics::span_lint_and_then;\n use clippy_utils::source::snippet;\n use clippy_utils::ty::is_type_diagnostic_item;\n+use clippy_utils::{iter_input_pats, method_chain_args};\n use if_chain::if_chain;\n use rustc_errors::Applicability;\n use rustc_hir as hir;"}, {"sha": "e94c7094cac18e566d0142ef0d61d13813d2d99d", "filename": "clippy_lints/src/matches.rs", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Fmatches.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Fmatches.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmatches.rs?ref=6595d5571b4c498ca18ffc1fdca17b3815271df0", "patch": "@@ -1,16 +1,16 @@\n use crate::consts::{constant, miri_to_const, Constant};\n-use crate::utils::sugg::Sugg;\n-use crate::utils::visitors::LocalUsedVisitor;\n-use crate::utils::{\n-    get_parent_expr, in_macro, is_allowed, is_expn_of, is_refutable, is_wild, match_qpath, meets_msrv, path_to_local,\n-    path_to_local_id, peel_hir_pat_refs, peel_n_hir_expr_refs, remove_blocks, strip_pat_refs,\n-};\n-use crate::utils::{paths, search_same, SpanlessEq, SpanlessHash};\n use clippy_utils::diagnostics::{\n     multispan_sugg, span_lint_and_help, span_lint_and_note, span_lint_and_sugg, span_lint_and_then,\n };\n use clippy_utils::source::{expr_block, indent_of, snippet, snippet_block, snippet_opt, snippet_with_applicability};\n+use clippy_utils::sugg::Sugg;\n use clippy_utils::ty::{implements_trait, is_type_diagnostic_item, match_type, peel_mid_ty_refs};\n+use clippy_utils::visitors::LocalUsedVisitor;\n+use clippy_utils::{\n+    get_parent_expr, in_macro, is_allowed, is_expn_of, is_refutable, is_wild, match_qpath, meets_msrv, path_to_local,\n+    path_to_local_id, peel_hir_pat_refs, peel_n_hir_expr_refs, remove_blocks, strip_pat_refs,\n+};\n+use clippy_utils::{paths, search_same, SpanlessEq, SpanlessHash};\n use if_chain::if_chain;\n use rustc_ast::ast::LitKind;\n use rustc_data_structures::fx::{FxHashMap, FxHashSet};\n@@ -1616,9 +1616,9 @@ where\n \n mod redundant_pattern_match {\n     use super::REDUNDANT_PATTERN_MATCHING;\n-    use crate::utils::{is_trait_method, match_qpath, paths};\n     use clippy_utils::diagnostics::span_lint_and_then;\n     use clippy_utils::source::snippet;\n+    use clippy_utils::{is_trait_method, match_qpath, paths};\n     use if_chain::if_chain;\n     use rustc_ast::ast::LitKind;\n     use rustc_errors::Applicability;"}, {"sha": "7895ba9f1e07687154eb16e46d063964a12546ef", "filename": "clippy_lints/src/mem_discriminant.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Fmem_discriminant.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Fmem_discriminant.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmem_discriminant.rs?ref=6595d5571b4c498ca18ffc1fdca17b3815271df0", "patch": "@@ -1,7 +1,7 @@\n-use crate::utils::{match_def_path, paths};\n use clippy_utils::diagnostics::span_lint_and_then;\n use clippy_utils::source::snippet;\n use clippy_utils::ty::walk_ptrs_ty_depth;\n+use clippy_utils::{match_def_path, paths};\n use if_chain::if_chain;\n use rustc_errors::Applicability;\n use rustc_hir::{BorrowKind, Expr, ExprKind};"}, {"sha": "c13802e395391a209523c195f164ee01b37612aa", "filename": "clippy_lints/src/mem_forget.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Fmem_forget.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Fmem_forget.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmem_forget.rs?ref=6595d5571b4c498ca18ffc1fdca17b3815271df0", "patch": "@@ -1,5 +1,5 @@\n-use crate::utils::{match_def_path, paths};\n use clippy_utils::diagnostics::span_lint;\n+use clippy_utils::{match_def_path, paths};\n use rustc_hir::{Expr, ExprKind};\n use rustc_lint::{LateContext, LateLintPass};\n use rustc_session::{declare_lint_pass, declare_tool_lint};"}, {"sha": "426c108d89fb59c2d5240e3c931ab7ea9efe5051", "filename": "clippy_lints/src/mem_replace.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Fmem_replace.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Fmem_replace.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmem_replace.rs?ref=6595d5571b4c498ca18ffc1fdca17b3815271df0", "patch": "@@ -1,7 +1,7 @@\n-use crate::utils::{in_macro, match_def_path, match_qpath, meets_msrv, paths};\n use clippy_utils::diagnostics::{span_lint_and_help, span_lint_and_sugg, span_lint_and_then};\n use clippy_utils::is_diagnostic_assoc_item;\n use clippy_utils::source::{snippet, snippet_with_applicability};\n+use clippy_utils::{in_macro, match_def_path, match_qpath, meets_msrv, paths};\n use if_chain::if_chain;\n use rustc_errors::Applicability;\n use rustc_hir::def_id::DefId;"}, {"sha": "0ba8a98a01851398f2558656ddb5f31cfcaba5d4", "filename": "clippy_lints/src/methods/bind_instead_of_map.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Fmethods%2Fbind_instead_of_map.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Fmethods%2Fbind_instead_of_map.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmethods%2Fbind_instead_of_map.rs?ref=6595d5571b4c498ca18ffc1fdca17b3815271df0", "patch": "@@ -1,8 +1,8 @@\n use super::{contains_return, BIND_INSTEAD_OF_MAP};\n-use crate::utils::{in_macro, match_qpath, method_calls, paths, remove_blocks, visitors::find_all_ret_expressions};\n use clippy_utils::diagnostics::{multispan_sugg_with_applicability, span_lint_and_sugg, span_lint_and_then};\n use clippy_utils::source::{snippet, snippet_with_macro_callsite};\n use clippy_utils::ty::match_type;\n+use clippy_utils::{in_macro, match_qpath, method_calls, paths, remove_blocks, visitors::find_all_ret_expressions};\n use if_chain::if_chain;\n use rustc_errors::Applicability;\n use rustc_hir as hir;"}, {"sha": "949152cf789af3d1b45c853c4ce6920a13d7b554", "filename": "clippy_lints/src/methods/clone_on_copy.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Fmethods%2Fclone_on_copy.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Fmethods%2Fclone_on_copy.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmethods%2Fclone_on_copy.rs?ref=6595d5571b4c498ca18ffc1fdca17b3815271df0", "patch": "@@ -1,5 +1,5 @@\n-use crate::utils::sugg;\n use clippy_utils::diagnostics::span_lint_and_then;\n+use clippy_utils::sugg;\n use clippy_utils::ty::is_copy;\n use rustc_errors::Applicability;\n use rustc_hir as hir;"}, {"sha": "03c949d5c31a1e11ac5a2fd24e3709d3321f4cc5", "filename": "clippy_lints/src/methods/clone_on_ref_ptr.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Fmethods%2Fclone_on_ref_ptr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Fmethods%2Fclone_on_ref_ptr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmethods%2Fclone_on_ref_ptr.rs?ref=6595d5571b4c498ca18ffc1fdca17b3815271df0", "patch": "@@ -1,5 +1,5 @@\n-use crate::utils::paths;\n use clippy_utils::diagnostics::span_lint_and_sugg;\n+use clippy_utils::paths;\n use clippy_utils::source::snippet_with_macro_callsite;\n use clippy_utils::ty::{is_type_diagnostic_item, match_type};\n use rustc_errors::Applicability;"}, {"sha": "e7bffa66b3fcb1627618cb2aecb4d28268a13381", "filename": "clippy_lints/src/methods/expect_fun_call.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Fmethods%2Fexpect_fun_call.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Fmethods%2Fexpect_fun_call.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmethods%2Fexpect_fun_call.rs?ref=6595d5571b4c498ca18ffc1fdca17b3815271df0", "patch": "@@ -1,5 +1,5 @@\n-use crate::utils::is_expn_of;\n use clippy_utils::diagnostics::span_lint_and_sugg;\n+use clippy_utils::is_expn_of;\n use clippy_utils::source::{snippet, snippet_with_applicability};\n use clippy_utils::ty::is_type_diagnostic_item;\n use if_chain::if_chain;"}, {"sha": "39d2f15dbc8bab844c54d6cd469afca1abca4865", "filename": "clippy_lints/src/methods/filetype_is_file.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Fmethods%2Ffiletype_is_file.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Fmethods%2Ffiletype_is_file.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmethods%2Ffiletype_is_file.rs?ref=6595d5571b4c498ca18ffc1fdca17b3815271df0", "patch": "@@ -1,6 +1,6 @@\n-use crate::utils::{get_parent_expr, paths};\n use clippy_utils::diagnostics::span_lint_and_help;\n use clippy_utils::ty::match_type;\n+use clippy_utils::{get_parent_expr, paths};\n use if_chain::if_chain;\n use rustc_hir as hir;\n use rustc_lint::LateContext;"}, {"sha": "2f3a3c55ab59b22d0b73b019c0c07699d89cedd7", "filename": "clippy_lints/src/methods/filter_flat_map.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Fmethods%2Ffilter_flat_map.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Fmethods%2Ffilter_flat_map.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmethods%2Ffilter_flat_map.rs?ref=6595d5571b4c498ca18ffc1fdca17b3815271df0", "patch": "@@ -1,5 +1,5 @@\n-use crate::utils::is_trait_method;\n use clippy_utils::diagnostics::span_lint_and_help;\n+use clippy_utils::is_trait_method;\n use rustc_hir as hir;\n use rustc_lint::LateContext;\n use rustc_span::sym;"}, {"sha": "2cb476acb2b3c91649b7751f95bb1de3df8a7466", "filename": "clippy_lints/src/methods/filter_map.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Fmethods%2Ffilter_map.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Fmethods%2Ffilter_map.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmethods%2Ffilter_map.rs?ref=6595d5571b4c498ca18ffc1fdca17b3815271df0", "patch": "@@ -1,6 +1,6 @@\n-use crate::utils::{is_trait_method, path_to_local_id, SpanlessEq};\n use clippy_utils::diagnostics::span_lint_and_sugg;\n use clippy_utils::source::snippet;\n+use clippy_utils::{is_trait_method, path_to_local_id, SpanlessEq};\n use if_chain::if_chain;\n use rustc_errors::Applicability;\n use rustc_hir as hir;"}, {"sha": "b1a4dc98eb8d36625905b77d411913b8e4ac4b78", "filename": "clippy_lints/src/methods/filter_map_flat_map.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Fmethods%2Ffilter_map_flat_map.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Fmethods%2Ffilter_map_flat_map.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmethods%2Ffilter_map_flat_map.rs?ref=6595d5571b4c498ca18ffc1fdca17b3815271df0", "patch": "@@ -1,5 +1,5 @@\n-use crate::utils::is_trait_method;\n use clippy_utils::diagnostics::span_lint_and_help;\n+use clippy_utils::is_trait_method;\n use rustc_hir as hir;\n use rustc_lint::LateContext;\n use rustc_span::sym;"}, {"sha": "80598d88508483323fafe84fa26b161b79774ef0", "filename": "clippy_lints/src/methods/filter_map_identity.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Fmethods%2Ffilter_map_identity.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Fmethods%2Ffilter_map_identity.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmethods%2Ffilter_map_identity.rs?ref=6595d5571b4c498ca18ffc1fdca17b3815271df0", "patch": "@@ -1,5 +1,5 @@\n-use crate::utils::{is_trait_method, match_qpath, path_to_local_id, paths};\n use clippy_utils::diagnostics::span_lint_and_sugg;\n+use clippy_utils::{is_trait_method, match_qpath, path_to_local_id, paths};\n use if_chain::if_chain;\n use rustc_errors::Applicability;\n use rustc_hir as hir;"}, {"sha": "0b0a8b1dd3b9af0b0f2ecb875273c355bd8866de", "filename": "clippy_lints/src/methods/filter_map_map.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Fmethods%2Ffilter_map_map.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Fmethods%2Ffilter_map_map.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmethods%2Ffilter_map_map.rs?ref=6595d5571b4c498ca18ffc1fdca17b3815271df0", "patch": "@@ -1,5 +1,5 @@\n-use crate::utils::is_trait_method;\n use clippy_utils::diagnostics::span_lint_and_help;\n+use clippy_utils::is_trait_method;\n use rustc_hir as hir;\n use rustc_lint::LateContext;\n use rustc_span::sym;"}, {"sha": "ba57abd16c9269046362c76242abeb54f16a3f05", "filename": "clippy_lints/src/methods/filter_map_next.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Fmethods%2Ffilter_map_next.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Fmethods%2Ffilter_map_next.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmethods%2Ffilter_map_next.rs?ref=6595d5571b4c498ca18ffc1fdca17b3815271df0", "patch": "@@ -1,6 +1,6 @@\n-use crate::utils::{is_trait_method, meets_msrv};\n use clippy_utils::diagnostics::{span_lint, span_lint_and_sugg};\n use clippy_utils::source::snippet;\n+use clippy_utils::{is_trait_method, meets_msrv};\n use rustc_errors::Applicability;\n use rustc_hir as hir;\n use rustc_lint::LateContext;"}, {"sha": "6cd24334414b4c33be2ee4867fddfe03649c216a", "filename": "clippy_lints/src/methods/filter_next.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Fmethods%2Ffilter_next.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Fmethods%2Ffilter_next.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmethods%2Ffilter_next.rs?ref=6595d5571b4c498ca18ffc1fdca17b3815271df0", "patch": "@@ -1,5 +1,5 @@\n-use crate::utils::is_trait_method;\n use clippy_utils::diagnostics::{span_lint, span_lint_and_sugg};\n+use clippy_utils::is_trait_method;\n use clippy_utils::source::snippet;\n use rustc_errors::Applicability;\n use rustc_hir as hir;"}, {"sha": "034ea6c6562776dc6c5c071257ad2967783c7853", "filename": "clippy_lints/src/methods/flat_map_identity.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Fmethods%2Fflat_map_identity.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Fmethods%2Fflat_map_identity.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmethods%2Fflat_map_identity.rs?ref=6595d5571b4c498ca18ffc1fdca17b3815271df0", "patch": "@@ -1,5 +1,5 @@\n-use crate::utils::{is_trait_method, match_qpath, paths};\n use clippy_utils::diagnostics::span_lint_and_sugg;\n+use clippy_utils::{is_trait_method, match_qpath, paths};\n use if_chain::if_chain;\n use rustc_errors::Applicability;\n use rustc_hir as hir;"}, {"sha": "2095a60e44b2701536004f82e6ad2599d420f607", "filename": "clippy_lints/src/methods/from_iter_instead_of_collect.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Fmethods%2Ffrom_iter_instead_of_collect.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Fmethods%2Ffrom_iter_instead_of_collect.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmethods%2Ffrom_iter_instead_of_collect.rs?ref=6595d5571b4c498ca18ffc1fdca17b3815271df0", "patch": "@@ -1,6 +1,6 @@\n-use crate::utils::{get_trait_def_id, paths, sugg};\n use clippy_utils::diagnostics::span_lint_and_sugg;\n use clippy_utils::ty::implements_trait;\n+use clippy_utils::{get_trait_def_id, paths, sugg};\n use if_chain::if_chain;\n use rustc_errors::Applicability;\n use rustc_hir as hir;"}, {"sha": "b122a0a0b896947fdedffec4888276fb69a30c31", "filename": "clippy_lints/src/methods/get_unwrap.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Fmethods%2Fget_unwrap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Fmethods%2Fget_unwrap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmethods%2Fget_unwrap.rs?ref=6595d5571b4c498ca18ffc1fdca17b3815271df0", "patch": "@@ -1,8 +1,8 @@\n use crate::methods::derefs_to_slice;\n-use crate::utils::{get_parent_expr, paths};\n use clippy_utils::diagnostics::span_lint_and_sugg;\n use clippy_utils::source::snippet_with_applicability;\n use clippy_utils::ty::{is_type_diagnostic_item, match_type};\n+use clippy_utils::{get_parent_expr, paths};\n use if_chain::if_chain;\n use rustc_errors::Applicability;\n use rustc_hir as hir;"}, {"sha": "d10a540c24ea3278dd4d67c15e30a7f982218dbf", "filename": "clippy_lints/src/methods/inefficient_to_string.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Fmethods%2Finefficient_to_string.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Fmethods%2Finefficient_to_string.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmethods%2Finefficient_to_string.rs?ref=6595d5571b4c498ca18ffc1fdca17b3815271df0", "patch": "@@ -1,8 +1,8 @@\n use super::INEFFICIENT_TO_STRING;\n-use crate::utils::{match_def_path, paths};\n use clippy_utils::diagnostics::span_lint_and_then;\n use clippy_utils::source::snippet_with_applicability;\n use clippy_utils::ty::{is_type_diagnostic_item, walk_ptrs_ty_depth};\n+use clippy_utils::{match_def_path, paths};\n use if_chain::if_chain;\n use rustc_errors::Applicability;\n use rustc_hir as hir;"}, {"sha": "7fd3ef1a622a0b1a12453f9614096df53ee42b17", "filename": "clippy_lints/src/methods/inspect_for_each.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Fmethods%2Finspect_for_each.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Fmethods%2Finspect_for_each.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmethods%2Finspect_for_each.rs?ref=6595d5571b4c498ca18ffc1fdca17b3815271df0", "patch": "@@ -1,10 +1,9 @@\n use clippy_utils::diagnostics::span_lint_and_help;\n+use clippy_utils::is_trait_method;\n use rustc_hir as hir;\n use rustc_lint::LateContext;\n use rustc_span::{source_map::Span, sym};\n \n-use crate::utils::is_trait_method;\n-\n use super::INSPECT_FOR_EACH;\n \n /// lint use of `inspect().for_each()` for `Iterators`"}, {"sha": "cfe749cf361116e56eb8145a85c31f63d24e7303", "filename": "clippy_lints/src/methods/into_iter_on_ref.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Fmethods%2Finto_iter_on_ref.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Fmethods%2Finto_iter_on_ref.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmethods%2Finto_iter_on_ref.rs?ref=6595d5571b4c498ca18ffc1fdca17b3815271df0", "patch": "@@ -1,6 +1,6 @@\n-use crate::utils::{match_trait_method, paths};\n use clippy_utils::diagnostics::span_lint_and_sugg;\n use clippy_utils::ty::has_iter_method;\n+use clippy_utils::{match_trait_method, paths};\n use rustc_errors::Applicability;\n use rustc_hir as hir;\n use rustc_lint::LateContext;"}, {"sha": "fd3d53816a1275ea27441c1fe70735b8b6463df3", "filename": "clippy_lints/src/methods/iter_count.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Fmethods%2Fiter_count.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Fmethods%2Fiter_count.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmethods%2Fiter_count.rs?ref=6595d5571b4c498ca18ffc1fdca17b3815271df0", "patch": "@@ -1,6 +1,6 @@\n use crate::methods::derefs_to_slice;\n-use crate::utils::paths;\n use clippy_utils::diagnostics::span_lint_and_sugg;\n+use clippy_utils::paths;\n use clippy_utils::source::snippet_with_applicability;\n use clippy_utils::ty::{is_type_diagnostic_item, match_type};\n use rustc_errors::Applicability;"}, {"sha": "feebf8b82096d8d5edccddfc677b2b066d4be1b2", "filename": "clippy_lints/src/methods/iter_next_slice.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Fmethods%2Fiter_next_slice.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Fmethods%2Fiter_next_slice.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmethods%2Fiter_next_slice.rs?ref=6595d5571b4c498ca18ffc1fdca17b3815271df0", "patch": "@@ -1,8 +1,8 @@\n use crate::methods::derefs_to_slice;\n-use crate::utils::{get_parent_expr, higher};\n use clippy_utils::diagnostics::span_lint_and_sugg;\n use clippy_utils::source::snippet_with_applicability;\n use clippy_utils::ty::is_type_diagnostic_item;\n+use clippy_utils::{get_parent_expr, higher};\n use if_chain::if_chain;\n use rustc_ast::ast;\n use rustc_errors::Applicability;"}, {"sha": "a12f672739c7b6172eb164698b2cbb2f01987732", "filename": "clippy_lints/src/methods/iter_nth_zero.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Fmethods%2Fiter_nth_zero.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Fmethods%2Fiter_nth_zero.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmethods%2Fiter_nth_zero.rs?ref=6595d5571b4c498ca18ffc1fdca17b3815271df0", "patch": "@@ -1,6 +1,6 @@\n use crate::consts::{constant, Constant};\n-use crate::utils::is_trait_method;\n use clippy_utils::diagnostics::span_lint_and_sugg;\n+use clippy_utils::is_trait_method;\n use clippy_utils::source::snippet_with_applicability;\n use if_chain::if_chain;\n use rustc_errors::Applicability;"}, {"sha": "ea01860b456c577993dadf9c34e4f5c030aa5f23", "filename": "clippy_lints/src/methods/iter_skip_next.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Fmethods%2Fiter_skip_next.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Fmethods%2Fiter_skip_next.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmethods%2Fiter_skip_next.rs?ref=6595d5571b4c498ca18ffc1fdca17b3815271df0", "patch": "@@ -1,5 +1,5 @@\n-use crate::utils::is_trait_method;\n use clippy_utils::diagnostics::span_lint_and_sugg;\n+use clippy_utils::is_trait_method;\n use clippy_utils::source::snippet;\n use rustc_errors::Applicability;\n use rustc_hir as hir;"}, {"sha": "3baa580314f337d98d1e947ea7fba25bcd0989d1", "filename": "clippy_lints/src/methods/iterator_step_by_zero.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Fmethods%2Fiterator_step_by_zero.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Fmethods%2Fiterator_step_by_zero.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmethods%2Fiterator_step_by_zero.rs?ref=6595d5571b4c498ca18ffc1fdca17b3815271df0", "patch": "@@ -1,6 +1,6 @@\n use crate::consts::{constant, Constant};\n-use crate::utils::is_trait_method;\n use clippy_utils::diagnostics::span_lint;\n+use clippy_utils::is_trait_method;\n use rustc_hir as hir;\n use rustc_lint::LateContext;\n use rustc_span::sym;"}, {"sha": "f16699322d13d7ba104f2710706f9ce94bfabb91", "filename": "clippy_lints/src/methods/manual_saturating_arithmetic.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Fmethods%2Fmanual_saturating_arithmetic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Fmethods%2Fmanual_saturating_arithmetic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmethods%2Fmanual_saturating_arithmetic.rs?ref=6595d5571b4c498ca18ffc1fdca17b3815271df0", "patch": "@@ -1,5 +1,5 @@\n-use crate::utils::match_qpath;\n use clippy_utils::diagnostics::span_lint_and_sugg;\n+use clippy_utils::match_qpath;\n use clippy_utils::source::snippet_with_applicability;\n use if_chain::if_chain;\n use rustc_ast::ast;"}, {"sha": "e4402b2da21752eba48d5fb0aa5723c0fc674286", "filename": "clippy_lints/src/methods/map_collect_result_unit.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Fmethods%2Fmap_collect_result_unit.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Fmethods%2Fmap_collect_result_unit.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmethods%2Fmap_collect_result_unit.rs?ref=6595d5571b4c498ca18ffc1fdca17b3815271df0", "patch": "@@ -1,5 +1,5 @@\n-use crate::utils::is_trait_method;\n use clippy_utils::diagnostics::span_lint_and_sugg;\n+use clippy_utils::is_trait_method;\n use clippy_utils::source::snippet;\n use clippy_utils::ty::is_type_diagnostic_item;\n use if_chain::if_chain;"}, {"sha": "4bc52b036a8d41e797a851720d023c6827aba92c", "filename": "clippy_lints/src/methods/map_flatten.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Fmethods%2Fmap_flatten.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Fmethods%2Fmap_flatten.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmethods%2Fmap_flatten.rs?ref=6595d5571b4c498ca18ffc1fdca17b3815271df0", "patch": "@@ -1,5 +1,5 @@\n-use crate::utils::is_trait_method;\n use clippy_utils::diagnostics::span_lint_and_sugg;\n+use clippy_utils::is_trait_method;\n use clippy_utils::source::snippet;\n use clippy_utils::ty::is_type_diagnostic_item;\n use rustc_errors::Applicability;"}, {"sha": "deb4b4492b5d104461be56a42312a64f74bfba6e", "filename": "clippy_lints/src/methods/map_unwrap_or.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Fmethods%2Fmap_unwrap_or.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Fmethods%2Fmap_unwrap_or.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmethods%2Fmap_unwrap_or.rs?ref=6595d5571b4c498ca18ffc1fdca17b3815271df0", "patch": "@@ -1,8 +1,8 @@\n-use crate::utils::meets_msrv;\n-use crate::utils::usage::mutated_variables;\n use clippy_utils::diagnostics::{span_lint, span_lint_and_sugg};\n+use clippy_utils::meets_msrv;\n use clippy_utils::source::snippet;\n use clippy_utils::ty::is_type_diagnostic_item;\n+use clippy_utils::usage::mutated_variables;\n use rustc_errors::Applicability;\n use rustc_hir as hir;\n use rustc_lint::LateContext;"}, {"sha": "cbfb350ebb1332f5cf42be703d90832afc0e967c", "filename": "clippy_lints/src/methods/mod.rs", "status": "modified", "additions": 4, "deletions": 5, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Fmethods%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Fmethods%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmethods%2Fmod.rs?ref=6595d5571b4c498ca18ffc1fdca17b3815271df0", "patch": "@@ -55,6 +55,10 @@ use bind_instead_of_map::BindInsteadOfMap;\n use clippy_utils::diagnostics::{span_lint, span_lint_and_help, span_lint_and_sugg};\n use clippy_utils::source::snippet_with_applicability;\n use clippy_utils::ty::{contains_ty, implements_trait, is_copy, is_type_diagnostic_item};\n+use clippy_utils::{\n+    contains_return, get_trait_def_id, in_macro, iter_input_pats, match_def_path, match_qpath, method_calls,\n+    method_chain_args, paths, return_ty, single_segment_path, SpanlessEq,\n+};\n use if_chain::if_chain;\n use rustc_ast::ast;\n use rustc_errors::Applicability;\n@@ -68,11 +72,6 @@ use rustc_session::{declare_tool_lint, impl_lint_pass};\n use rustc_span::symbol::{sym, SymbolStr};\n use rustc_typeck::hir_ty_to_ty;\n \n-use crate::utils::{\n-    contains_return, get_trait_def_id, in_macro, iter_input_pats, match_def_path, match_qpath, method_calls,\n-    method_chain_args, paths, return_ty, single_segment_path, SpanlessEq,\n-};\n-\n declare_clippy_lint! {\n     /// **What it does:** Checks for `.unwrap()` calls on `Option`s and on `Result`s.\n     ///"}, {"sha": "d11ede080dc8d8aac522a6c5a3a4d568d324e2ca", "filename": "clippy_lints/src/methods/option_as_ref_deref.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Fmethods%2Foption_as_ref_deref.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Fmethods%2Foption_as_ref_deref.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmethods%2Foption_as_ref_deref.rs?ref=6595d5571b4c498ca18ffc1fdca17b3815271df0", "patch": "@@ -1,7 +1,7 @@\n-use crate::utils::{match_def_path, meets_msrv, path_to_local_id, paths, remove_blocks};\n use clippy_utils::diagnostics::span_lint_and_sugg;\n use clippy_utils::source::snippet;\n use clippy_utils::ty::is_type_diagnostic_item;\n+use clippy_utils::{match_def_path, meets_msrv, path_to_local_id, paths, remove_blocks};\n use if_chain::if_chain;\n use rustc_errors::Applicability;\n use rustc_hir as hir;"}, {"sha": "d93db2c22e4c98f5b2f6ff81a27e2f2baaa54c85", "filename": "clippy_lints/src/methods/option_map_or_none.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Fmethods%2Foption_map_or_none.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Fmethods%2Foption_map_or_none.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmethods%2Foption_map_or_none.rs?ref=6595d5571b4c498ca18ffc1fdca17b3815271df0", "patch": "@@ -1,7 +1,7 @@\n-use crate::utils::{match_qpath, paths};\n use clippy_utils::diagnostics::span_lint_and_sugg;\n use clippy_utils::source::snippet;\n use clippy_utils::ty::is_type_diagnostic_item;\n+use clippy_utils::{match_qpath, paths};\n use rustc_errors::Applicability;\n use rustc_hir as hir;\n use rustc_lint::LateContext;"}, {"sha": "e252abc177a2e6993fd45582ef4ce42f68d1061d", "filename": "clippy_lints/src/methods/option_map_unwrap_or.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Fmethods%2Foption_map_unwrap_or.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Fmethods%2Foption_map_unwrap_or.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmethods%2Foption_map_unwrap_or.rs?ref=6595d5571b4c498ca18ffc1fdca17b3815271df0", "patch": "@@ -1,5 +1,5 @@\n-use crate::utils::differing_macro_contexts;\n use clippy_utils::diagnostics::span_lint_and_then;\n+use clippy_utils::differing_macro_contexts;\n use clippy_utils::source::snippet_with_applicability;\n use clippy_utils::ty::is_copy;\n use clippy_utils::ty::is_type_diagnostic_item;"}, {"sha": "4880d13f39a6b539b317402c3313d3ee8d857d0e", "filename": "clippy_lints/src/methods/or_fun_call.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Fmethods%2For_fun_call.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Fmethods%2For_fun_call.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmethods%2For_fun_call.rs?ref=6595d5571b4c498ca18ffc1fdca17b3815271df0", "patch": "@@ -1,8 +1,8 @@\n-use crate::utils::eager_or_lazy::is_lazyness_candidate;\n-use crate::utils::{contains_return, get_trait_def_id, last_path_segment, paths};\n use clippy_utils::diagnostics::span_lint_and_sugg;\n+use clippy_utils::eager_or_lazy::is_lazyness_candidate;\n use clippy_utils::source::{snippet, snippet_with_applicability, snippet_with_macro_callsite};\n use clippy_utils::ty::{implements_trait, is_type_diagnostic_item, match_type};\n+use clippy_utils::{contains_return, get_trait_def_id, last_path_segment, paths};\n use if_chain::if_chain;\n use rustc_errors::Applicability;\n use rustc_hir as hir;"}, {"sha": "13546dc177987092c2bb538f6220e2358c5cb30e", "filename": "clippy_lints/src/methods/search_is_some.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Fmethods%2Fsearch_is_some.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Fmethods%2Fsearch_is_some.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmethods%2Fsearch_is_some.rs?ref=6595d5571b4c498ca18ffc1fdca17b3815271df0", "patch": "@@ -1,7 +1,7 @@\n-use crate::utils::{is_trait_method, strip_pat_refs};\n use clippy_utils::diagnostics::{span_lint_and_help, span_lint_and_sugg};\n use clippy_utils::source::{snippet, snippet_with_applicability};\n use clippy_utils::ty::is_type_diagnostic_item;\n+use clippy_utils::{is_trait_method, strip_pat_refs};\n use if_chain::if_chain;\n use rustc_errors::Applicability;\n use rustc_hir as hir;"}, {"sha": "3db83785b591e21c012cc355f9ffb21ea3cba161", "filename": "clippy_lints/src/methods/skip_while_next.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Fmethods%2Fskip_while_next.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Fmethods%2Fskip_while_next.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmethods%2Fskip_while_next.rs?ref=6595d5571b4c498ca18ffc1fdca17b3815271df0", "patch": "@@ -1,5 +1,5 @@\n-use crate::utils::is_trait_method;\n use clippy_utils::diagnostics::span_lint_and_help;\n+use clippy_utils::is_trait_method;\n use rustc_hir as hir;\n use rustc_lint::LateContext;\n use rustc_span::sym;"}, {"sha": "52b26a36fe3bf76a5f155ebb311b2237058a7784", "filename": "clippy_lints/src/methods/string_extend_chars.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Fmethods%2Fstring_extend_chars.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Fmethods%2Fstring_extend_chars.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmethods%2Fstring_extend_chars.rs?ref=6595d5571b4c498ca18ffc1fdca17b3815271df0", "patch": "@@ -1,5 +1,5 @@\n-use crate::utils::method_chain_args;\n use clippy_utils::diagnostics::span_lint_and_sugg;\n+use clippy_utils::method_chain_args;\n use clippy_utils::source::snippet_with_applicability;\n use clippy_utils::ty::is_type_diagnostic_item;\n use rustc_errors::Applicability;"}, {"sha": "7015bd54c35dd71fa823199e9697bf18908753a3", "filename": "clippy_lints/src/methods/suspicious_map.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Fmethods%2Fsuspicious_map.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Fmethods%2Fsuspicious_map.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmethods%2Fsuspicious_map.rs?ref=6595d5571b4c498ca18ffc1fdca17b3815271df0", "patch": "@@ -1,6 +1,6 @@\n-use crate::utils::usage::mutated_variables;\n-use crate::utils::{expr_or_init, is_trait_method};\n use clippy_utils::diagnostics::span_lint_and_help;\n+use clippy_utils::usage::mutated_variables;\n+use clippy_utils::{expr_or_init, is_trait_method};\n use if_chain::if_chain;\n use rustc_hir as hir;\n use rustc_lint::LateContext;"}, {"sha": "f2f6ef4be6cfd46d003f803fd91c9fbf0fd21f4f", "filename": "clippy_lints/src/methods/uninit_assumed_init.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Fmethods%2Funinit_assumed_init.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Fmethods%2Funinit_assumed_init.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmethods%2Funinit_assumed_init.rs?ref=6595d5571b4c498ca18ffc1fdca17b3815271df0", "patch": "@@ -1,5 +1,5 @@\n-use crate::utils::{match_def_path, match_qpath, paths};\n use clippy_utils::diagnostics::span_lint;\n+use clippy_utils::{match_def_path, match_qpath, paths};\n use if_chain::if_chain;\n use rustc_hir as hir;\n use rustc_lint::LateContext;"}, {"sha": "48d905ab8330a7fb9f8fb00df03b28b40b8e31b5", "filename": "clippy_lints/src/methods/unnecessary_filter_map.rs", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Fmethods%2Funnecessary_filter_map.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Fmethods%2Funnecessary_filter_map.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmethods%2Funnecessary_filter_map.rs?ref=6595d5571b4c498ca18ffc1fdca17b3815271df0", "patch": "@@ -1,14 +1,13 @@\n-use crate::utils::usage::mutated_variables;\n-use crate::utils::{is_trait_method, match_qpath, path_to_local_id, paths};\n use clippy_utils::diagnostics::span_lint;\n+use clippy_utils::usage::mutated_variables;\n+use clippy_utils::{is_trait_method, match_qpath, path_to_local_id, paths};\n+use if_chain::if_chain;\n use rustc_hir as hir;\n use rustc_hir::intravisit::{walk_expr, NestedVisitorMap, Visitor};\n use rustc_lint::LateContext;\n use rustc_middle::hir::map::Map;\n use rustc_span::sym;\n \n-use if_chain::if_chain;\n-\n use super::UNNECESSARY_FILTER_MAP;\n \n pub(super) fn check(cx: &LateContext<'_>, expr: &hir::Expr<'_>, args: &[hir::Expr<'_>]) {"}, {"sha": "1268fd4bda99c6292405f1123fcbd342273d7bf2", "filename": "clippy_lints/src/methods/unnecessary_fold.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Fmethods%2Funnecessary_fold.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Fmethods%2Funnecessary_fold.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmethods%2Funnecessary_fold.rs?ref=6595d5571b4c498ca18ffc1fdca17b3815271df0", "patch": "@@ -1,6 +1,6 @@\n-use crate::utils::{is_trait_method, path_to_local_id, remove_blocks, strip_pat_refs};\n use clippy_utils::diagnostics::span_lint_and_sugg;\n use clippy_utils::source::snippet_with_applicability;\n+use clippy_utils::{is_trait_method, path_to_local_id, remove_blocks, strip_pat_refs};\n use if_chain::if_chain;\n use rustc_ast::ast;\n use rustc_errors::Applicability;"}, {"sha": "a86185bf0a6c3205e7fead0757c6e456b13fbdee", "filename": "clippy_lints/src/methods/unnecessary_lazy_eval.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Fmethods%2Funnecessary_lazy_eval.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Fmethods%2Funnecessary_lazy_eval.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmethods%2Funnecessary_lazy_eval.rs?ref=6595d5571b4c498ca18ffc1fdca17b3815271df0", "patch": "@@ -1,7 +1,7 @@\n-use crate::utils::{eager_or_lazy, usage};\n use clippy_utils::diagnostics::span_lint_and_sugg;\n use clippy_utils::source::snippet;\n use clippy_utils::ty::is_type_diagnostic_item;\n+use clippy_utils::{eager_or_lazy, usage};\n use rustc_errors::Applicability;\n use rustc_hir as hir;\n use rustc_lint::LateContext;"}, {"sha": "b5505af0f7ee59181a33461113d48e6d766959c4", "filename": "clippy_lints/src/methods/useless_asref.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Fmethods%2Fuseless_asref.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Fmethods%2Fuseless_asref.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmethods%2Fuseless_asref.rs?ref=6595d5571b4c498ca18ffc1fdca17b3815271df0", "patch": "@@ -1,7 +1,7 @@\n-use crate::utils::{get_parent_expr, match_trait_method, paths};\n use clippy_utils::diagnostics::span_lint_and_sugg;\n use clippy_utils::source::snippet_with_applicability;\n use clippy_utils::ty::walk_ptrs_ty_depth;\n+use clippy_utils::{get_parent_expr, match_trait_method, paths};\n use if_chain::if_chain;\n use rustc_errors::Applicability;\n use rustc_hir as hir;"}, {"sha": "776f4c7b7413d90c62b6ddfb3937e914b51358cf", "filename": "clippy_lints/src/minmax.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Fminmax.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Fminmax.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fminmax.rs?ref=6595d5571b4c498ca18ffc1fdca17b3815271df0", "patch": "@@ -1,6 +1,6 @@\n use crate::consts::{constant_simple, Constant};\n-use crate::utils::{match_def_path, match_trait_method, paths};\n use clippy_utils::diagnostics::span_lint;\n+use clippy_utils::{match_def_path, match_trait_method, paths};\n use if_chain::if_chain;\n use rustc_hir::{Expr, ExprKind};\n use rustc_lint::{LateContext, LateLintPass};"}, {"sha": "026ea50936a4a1520a23a7f4e3ceccd87d66ddfb", "filename": "clippy_lints/src/misc.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Fmisc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Fmisc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmisc.rs?ref=6595d5571b4c498ca18ffc1fdca17b3815271df0", "patch": "@@ -18,8 +18,8 @@ use rustc_span::source_map::{ExpnKind, Span};\n use rustc_span::symbol::sym;\n \n use crate::consts::{constant, Constant};\n-use crate::utils::sugg::Sugg;\n-use crate::utils::{\n+use clippy_utils::sugg::Sugg;\n+use clippy_utils::{\n     get_item_name, get_parent_expr, higher, in_constant, is_diagnostic_assoc_item, is_integer_const, iter_input_pats,\n     last_path_segment, match_qpath, unsext, SpanlessEq,\n };"}, {"sha": "23554669d9774f030744697859e29a820fd005de", "filename": "clippy_lints/src/missing_const_for_fn.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Fmissing_const_for_fn.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Fmissing_const_for_fn.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmissing_const_for_fn.rs?ref=6595d5571b4c498ca18ffc1fdca17b3815271df0", "patch": "@@ -1,7 +1,7 @@\n-use crate::utils::qualify_min_const_fn::is_min_const_fn;\n-use crate::utils::{fn_has_unsatisfiable_preds, is_entrypoint_fn, meets_msrv, trait_ref_of_method};\n use clippy_utils::diagnostics::span_lint;\n+use clippy_utils::qualify_min_const_fn::is_min_const_fn;\n use clippy_utils::ty::has_drop;\n+use clippy_utils::{fn_has_unsatisfiable_preds, is_entrypoint_fn, meets_msrv, trait_ref_of_method};\n use rustc_hir as hir;\n use rustc_hir::intravisit::FnKind;\n use rustc_hir::{Body, Constness, FnDecl, GenericParamKind, HirId};"}, {"sha": "6a52de4f713644f965009ae3fd31bf77ad7232ee", "filename": "clippy_lints/src/modulo_arithmetic.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Fmodulo_arithmetic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Fmodulo_arithmetic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmodulo_arithmetic.rs?ref=6595d5571b4c498ca18ffc1fdca17b3815271df0", "patch": "@@ -1,6 +1,6 @@\n use crate::consts::{constant, Constant};\n-use crate::utils::sext;\n use clippy_utils::diagnostics::span_lint_and_then;\n+use clippy_utils::sext;\n use if_chain::if_chain;\n use rustc_hir::{BinOpKind, Expr, ExprKind};\n use rustc_lint::{LateContext, LateLintPass};"}, {"sha": "584daa5e11992a17921f4252592051ff8e598524", "filename": "clippy_lints/src/multiple_crate_versions.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Fmultiple_crate_versions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Fmultiple_crate_versions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmultiple_crate_versions.rs?ref=6595d5571b4c498ca18ffc1fdca17b3815271df0", "patch": "@@ -1,7 +1,7 @@\n //! lint on multiple versions of a crate being used\n \n-use crate::utils::run_lints;\n use clippy_utils::diagnostics::span_lint;\n+use clippy_utils::run_lints;\n use rustc_hir::def_id::LOCAL_CRATE;\n use rustc_hir::{Crate, CRATE_HIR_ID};\n use rustc_lint::{LateContext, LateLintPass};"}, {"sha": "41bd07bcf1ea2fd2523a790792d2183762b67da1", "filename": "clippy_lints/src/mut_key.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Fmut_key.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Fmut_key.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmut_key.rs?ref=6595d5571b4c498ca18ffc1fdca17b3815271df0", "patch": "@@ -1,5 +1,5 @@\n-use crate::utils::{match_def_path, paths, trait_ref_of_method};\n use clippy_utils::diagnostics::span_lint;\n+use clippy_utils::{match_def_path, paths, trait_ref_of_method};\n use rustc_hir as hir;\n use rustc_lint::{LateContext, LateLintPass};\n use rustc_middle::ty::TypeFoldable;"}, {"sha": "ef33e41a5fa9e6ca3c46413b1eabb5a81574537a", "filename": "clippy_lints/src/mut_mut.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Fmut_mut.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Fmut_mut.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmut_mut.rs?ref=6595d5571b4c498ca18ffc1fdca17b3815271df0", "patch": "@@ -1,5 +1,5 @@\n-use crate::utils::higher;\n use clippy_utils::diagnostics::span_lint;\n+use clippy_utils::higher;\n use rustc_hir as hir;\n use rustc_hir::intravisit;\n use rustc_lint::{LateContext, LateLintPass, LintContext};"}, {"sha": "533c5a22db0b6e6fef0e3ffcb1d91eac01e108c1", "filename": "clippy_lints/src/mutable_debug_assertion.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Fmutable_debug_assertion.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Fmutable_debug_assertion.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmutable_debug_assertion.rs?ref=6595d5571b4c498ca18ffc1fdca17b3815271df0", "patch": "@@ -1,5 +1,5 @@\n-use crate::utils::{higher, is_direct_expn_of};\n use clippy_utils::diagnostics::span_lint;\n+use clippy_utils::{higher, is_direct_expn_of};\n use rustc_hir::intravisit::{walk_expr, NestedVisitorMap, Visitor};\n use rustc_hir::{BorrowKind, Expr, ExprKind, MatchSource, Mutability};\n use rustc_lint::{LateContext, LateLintPass};"}, {"sha": "3e2b2782ed5ffc2c04e2dd21846fe49759ebc7ac", "filename": "clippy_lints/src/needless_arbitrary_self_type.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Fneedless_arbitrary_self_type.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Fneedless_arbitrary_self_type.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fneedless_arbitrary_self_type.rs?ref=6595d5571b4c498ca18ffc1fdca17b3815271df0", "patch": "@@ -1,5 +1,5 @@\n-use crate::utils::in_macro;\n use clippy_utils::diagnostics::span_lint_and_sugg;\n+use clippy_utils::in_macro;\n use if_chain::if_chain;\n use rustc_ast::ast::{BindingMode, Lifetime, Mutability, Param, PatKind, Path, TyKind};\n use rustc_errors::Applicability;"}, {"sha": "db7b3423ad9df3d20f7437c8cf299112b83fa369", "filename": "clippy_lints/src/needless_bool.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Fneedless_bool.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Fneedless_bool.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fneedless_bool.rs?ref=6595d5571b4c498ca18ffc1fdca17b3815271df0", "patch": "@@ -2,10 +2,10 @@\n //!\n //! This lint is **warn** by default\n \n-use crate::utils::sugg::Sugg;\n-use crate::utils::{is_expn_of, parent_node_is_if_expr};\n use clippy_utils::diagnostics::{span_lint, span_lint_and_sugg};\n use clippy_utils::source::snippet_with_applicability;\n+use clippy_utils::sugg::Sugg;\n+use clippy_utils::{is_expn_of, parent_node_is_if_expr};\n use rustc_ast::ast::LitKind;\n use rustc_errors::Applicability;\n use rustc_hir::{BinOpKind, Block, Expr, ExprKind, StmtKind, UnOp};"}, {"sha": "79d84da2dfc09c8af7686a9c592872729e7413e1", "filename": "clippy_lints/src/needless_borrow.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Fneedless_borrow.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Fneedless_borrow.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fneedless_borrow.rs?ref=6595d5571b4c498ca18ffc1fdca17b3815271df0", "patch": "@@ -2,8 +2,8 @@\n //!\n //! This lint is **warn** by default\n \n-use crate::utils::is_automatically_derived;\n use clippy_utils::diagnostics::span_lint_and_then;\n+use clippy_utils::is_automatically_derived;\n use clippy_utils::source::snippet_opt;\n use if_chain::if_chain;\n use rustc_errors::Applicability;"}, {"sha": "075bbf9a42646a7a441f504e20273f41997f2df7", "filename": "clippy_lints/src/needless_pass_by_value.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Fneedless_pass_by_value.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Fneedless_pass_by_value.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fneedless_pass_by_value.rs?ref=6595d5571b4c498ca18ffc1fdca17b3815271df0", "patch": "@@ -1,8 +1,8 @@\n-use crate::utils::ptr::get_spans;\n-use crate::utils::{get_trait_def_id, is_self, paths};\n use clippy_utils::diagnostics::{multispan_sugg, span_lint_and_then};\n+use clippy_utils::ptr::get_spans;\n use clippy_utils::source::{snippet, snippet_opt};\n use clippy_utils::ty::{implements_trait, is_copy, is_type_diagnostic_item};\n+use clippy_utils::{get_trait_def_id, is_self, paths};\n use if_chain::if_chain;\n use rustc_ast::ast::Attribute;\n use rustc_data_structures::fx::{FxHashMap, FxHashSet};"}, {"sha": "99e85e6683cb10b85fdd4fb0eae4c4e8e3e707e6", "filename": "clippy_lints/src/needless_question_mark.rs", "status": "modified", "additions": 5, "deletions": 6, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Fneedless_question_mark.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Fneedless_question_mark.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fneedless_question_mark.rs?ref=6595d5571b4c498ca18ffc1fdca17b3815271df0", "patch": "@@ -1,16 +1,15 @@\n use clippy_utils::diagnostics::span_lint_and_sugg;\n use clippy_utils::source::snippet;\n use clippy_utils::ty::is_type_diagnostic_item;\n+use clippy_utils::{is_ok_ctor, is_some_ctor, meets_msrv};\n+use if_chain::if_chain;\n use rustc_errors::Applicability;\n use rustc_hir::{Body, Expr, ExprKind, LangItem, MatchSource, QPath};\n use rustc_lint::{LateContext, LateLintPass, LintContext};\n use rustc_semver::RustcVersion;\n use rustc_session::{declare_tool_lint, impl_lint_pass};\n use rustc_span::sym;\n \n-use crate::utils;\n-use if_chain::if_chain;\n-\n declare_clippy_lint! {\n     /// **What it does:**\n     /// Suggests alternatives for useless applications of `?` in terminating expressions\n@@ -161,7 +160,7 @@ fn is_some_or_ok_call<'a>(\n         // Check outer expression matches CALL_IDENT(ARGUMENT) format\n         if let ExprKind::Call(path, args) = &expr.kind;\n         if let ExprKind::Path(QPath::Resolved(None, path)) = &path.kind;\n-        if utils::is_some_ctor(cx, path.res) || utils::is_ok_ctor(cx, path.res);\n+        if is_some_ctor(cx, path.res) || is_ok_ctor(cx, path.res);\n \n         // Extract inner expression from ARGUMENT\n         if let ExprKind::Match(inner_expr_with_q, _, MatchSource::TryDesugar) = &args[0].kind;\n@@ -182,7 +181,7 @@ fn is_some_or_ok_call<'a>(\n             let inner_is_some = is_type_diagnostic_item(cx, inner_ty, sym::option_type);\n \n             // Check for Option MSRV\n-            let meets_option_msrv = utils::meets_msrv(nqml.msrv.as_ref(), &NEEDLESS_QUESTION_MARK_OPTION_MSRV);\n+            let meets_option_msrv = meets_msrv(nqml.msrv.as_ref(), &NEEDLESS_QUESTION_MARK_OPTION_MSRV);\n             if outer_is_some && inner_is_some && meets_option_msrv {\n                 return Some(SomeOkCall::SomeCall(expr, inner_expr));\n             }\n@@ -196,7 +195,7 @@ fn is_some_or_ok_call<'a>(\n             let does_not_call_from = !has_implicit_error_from(cx, expr, inner_expr);\n \n             // Must meet Result MSRV\n-            let meets_result_msrv = utils::meets_msrv(nqml.msrv.as_ref(), &NEEDLESS_QUESTION_MARK_RESULT_MSRV);\n+            let meets_result_msrv = meets_msrv(nqml.msrv.as_ref(), &NEEDLESS_QUESTION_MARK_RESULT_MSRV);\n             if outer_is_result && inner_is_result && does_not_call_from && meets_result_msrv {\n                 return Some(SomeOkCall::OkCall(expr, inner_expr));\n             }"}, {"sha": "4b935c7b906aec25e49327152d053963c7398935", "filename": "clippy_lints/src/neg_cmp_op_on_partial_ord.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Fneg_cmp_op_on_partial_ord.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Fneg_cmp_op_on_partial_ord.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fneg_cmp_op_on_partial_ord.rs?ref=6595d5571b4c498ca18ffc1fdca17b3815271df0", "patch": "@@ -1,13 +1,12 @@\n use clippy_utils::diagnostics::span_lint;\n use clippy_utils::ty::implements_trait;\n+use clippy_utils::{self, get_trait_def_id, paths};\n use if_chain::if_chain;\n use rustc_hir::{BinOpKind, Expr, ExprKind, UnOp};\n use rustc_lint::{LateContext, LateLintPass, LintContext};\n use rustc_middle::lint::in_external_macro;\n use rustc_session::{declare_lint_pass, declare_tool_lint};\n \n-use crate::utils::{self, paths};\n-\n declare_clippy_lint! {\n     /// **What it does:**\n     /// Checks for the usage of negated comparison operators on types which only implement\n@@ -61,7 +60,7 @@ impl<'tcx> LateLintPass<'tcx> for NoNegCompOpForPartialOrd {\n                 let ty = cx.typeck_results().expr_ty(left);\n \n                 let implements_ord = {\n-                    if let Some(id) = utils::get_trait_def_id(cx, &paths::ORD) {\n+                    if let Some(id) = get_trait_def_id(cx, &paths::ORD) {\n                         implements_trait(cx, ty, id, &[])\n                     } else {\n                         return;"}, {"sha": "502e5e4bf37958a365aa2ca6f3a9a4986b0bfa60", "filename": "clippy_lints/src/new_without_default.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Fnew_without_default.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Fnew_without_default.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fnew_without_default.rs?ref=6595d5571b4c498ca18ffc1fdca17b3815271df0", "patch": "@@ -1,7 +1,7 @@\n-use crate::utils::paths;\n-use crate::utils::sugg::DiagnosticBuilderExt;\n-use crate::utils::{get_trait_def_id, return_ty};\n use clippy_utils::diagnostics::span_lint_hir_and_then;\n+use clippy_utils::paths;\n+use clippy_utils::sugg::DiagnosticBuilderExt;\n+use clippy_utils::{get_trait_def_id, return_ty};\n use if_chain::if_chain;\n use rustc_errors::Applicability;\n use rustc_hir as hir;"}, {"sha": "b86ae1426ef7514174917d18eca946d1f6f8199c", "filename": "clippy_lints/src/non_copy_const.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Fnon_copy_const.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Fnon_copy_const.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fnon_copy_const.rs?ref=6595d5571b4c498ca18ffc1fdca17b3815271df0", "patch": "@@ -5,6 +5,8 @@\n use std::ptr;\n \n use clippy_utils::diagnostics::span_lint_and_then;\n+use clippy_utils::in_constant;\n+use if_chain::if_chain;\n use rustc_hir::def::{DefKind, Res};\n use rustc_hir::def_id::DefId;\n use rustc_hir::{\n@@ -19,9 +21,6 @@ use rustc_session::{declare_lint_pass, declare_tool_lint};\n use rustc_span::{InnerSpan, Span, DUMMY_SP};\n use rustc_typeck::hir_ty_to_ty;\n \n-use crate::utils::in_constant;\n-use if_chain::if_chain;\n-\n // FIXME: this is a correctness problem but there's no suitable\n // warn-by-default category.\n declare_clippy_lint! {"}, {"sha": "c61dff4b8e04360cb9a2a1fcfb7d4b595ad36f16", "filename": "clippy_lints/src/open_options.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Fopen_options.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Fopen_options.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fopen_options.rs?ref=6595d5571b4c498ca18ffc1fdca17b3815271df0", "patch": "@@ -1,5 +1,5 @@\n-use crate::utils::paths;\n use clippy_utils::diagnostics::span_lint;\n+use clippy_utils::paths;\n use clippy_utils::ty::match_type;\n use rustc_ast::ast::LitKind;\n use rustc_hir::{Expr, ExprKind};"}, {"sha": "a0bc324e02692c3d9363966beb115513ccfcb84a", "filename": "clippy_lints/src/option_env_unwrap.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Foption_env_unwrap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Foption_env_unwrap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Foption_env_unwrap.rs?ref=6595d5571b4c498ca18ffc1fdca17b3815271df0", "patch": "@@ -1,5 +1,5 @@\n-use crate::utils::is_direct_expn_of;\n use clippy_utils::diagnostics::span_lint_and_help;\n+use clippy_utils::is_direct_expn_of;\n use if_chain::if_chain;\n use rustc_ast::ast::{Expr, ExprKind};\n use rustc_lint::{EarlyContext, EarlyLintPass};"}, {"sha": "a76a4a33f1f3b12a491ac1c82ae5b2f3f4f0608e", "filename": "clippy_lints/src/option_if_let_else.rs", "status": "modified", "additions": 9, "deletions": 10, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Foption_if_let_else.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Foption_if_let_else.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Foption_if_let_else.rs?ref=6595d5571b4c498ca18ffc1fdca17b3815271df0", "patch": "@@ -1,11 +1,10 @@\n-use crate::utils;\n-use crate::utils::eager_or_lazy;\n-use crate::utils::paths;\n-use crate::utils::sugg::Sugg;\n use clippy_utils::diagnostics::span_lint_and_sugg;\n+use clippy_utils::paths;\n+use clippy_utils::sugg::Sugg;\n use clippy_utils::ty::is_type_diagnostic_item;\n+use clippy_utils::usage::contains_return_break_continue_macro;\n+use clippy_utils::{eager_or_lazy, get_enclosing_block, in_macro, match_qpath};\n use if_chain::if_chain;\n-\n use rustc_errors::Applicability;\n use rustc_hir::{Arm, BindingAnnotation, Block, Expr, ExprKind, MatchSource, Mutability, PatKind, UnOp};\n use rustc_lint::{LateContext, LateLintPass};\n@@ -110,7 +109,7 @@ fn extract_body_from_arm<'a>(arm: &'a Arm<'a>) -> Option<&'a Expr<'a>> {\n /// If this is the else body of an if/else expression, then we need to wrap\n /// it in curly braces. Otherwise, we don't.\n fn should_wrap_in_braces(cx: &LateContext<'_>, expr: &Expr<'_>) -> bool {\n-    utils::get_enclosing_block(cx, expr.hir_id).map_or(false, |parent| {\n+    get_enclosing_block(cx, expr.hir_id).map_or(false, |parent| {\n         let mut should_wrap = false;\n \n         if let Some(Expr {\n@@ -160,15 +159,15 @@ fn detect_option_if_let_else<'tcx>(\n     expr: &'_ Expr<'tcx>,\n ) -> Option<OptionIfLetElseOccurence> {\n     if_chain! {\n-        if !utils::in_macro(expr.span); // Don't lint macros, because it behaves weirdly\n+        if !in_macro(expr.span); // Don't lint macros, because it behaves weirdly\n         if let ExprKind::Match(cond_expr, arms, MatchSource::IfLetDesugar{contains_else_clause: true}) = &expr.kind;\n         if arms.len() == 2;\n         if !is_result_ok(cx, cond_expr); // Don't lint on Result::ok because a different lint does it already\n         if let PatKind::TupleStruct(struct_qpath, &[inner_pat], _) = &arms[0].pat.kind;\n-        if utils::match_qpath(struct_qpath, &paths::OPTION_SOME);\n+        if match_qpath(struct_qpath, &paths::OPTION_SOME);\n         if let PatKind::Binding(bind_annotation, _, id, _) = &inner_pat.kind;\n-        if !utils::usage::contains_return_break_continue_macro(arms[0].body);\n-        if !utils::usage::contains_return_break_continue_macro(arms[1].body);\n+        if !contains_return_break_continue_macro(arms[0].body);\n+        if !contains_return_break_continue_macro(arms[1].body);\n         then {\n             let capture_mut = if bind_annotation == &BindingAnnotation::Mutable { \"mut \" } else { \"\" };\n             let some_body = extract_body_from_arm(&arms[0])?;"}, {"sha": "cf667c6e805341f46c18c61e5e4773c8bd562b5f", "filename": "clippy_lints/src/overflow_check_conditional.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Foverflow_check_conditional.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Foverflow_check_conditional.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Foverflow_check_conditional.rs?ref=6595d5571b4c498ca18ffc1fdca17b3815271df0", "patch": "@@ -1,5 +1,5 @@\n-use crate::utils::SpanlessEq;\n use clippy_utils::diagnostics::span_lint;\n+use clippy_utils::SpanlessEq;\n use if_chain::if_chain;\n use rustc_hir::{BinOpKind, Expr, ExprKind, QPath};\n use rustc_lint::{LateContext, LateLintPass};"}, {"sha": "d32b937b209c5324f4fbf1e4b518062387b04a75", "filename": "clippy_lints/src/panic_in_result_fn.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Fpanic_in_result_fn.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Fpanic_in_result_fn.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fpanic_in_result_fn.rs?ref=6595d5571b4c498ca18ffc1fdca17b3815271df0", "patch": "@@ -1,6 +1,6 @@\n-use crate::utils::{find_macro_calls, return_ty};\n use clippy_utils::diagnostics::span_lint_and_then;\n use clippy_utils::ty::is_type_diagnostic_item;\n+use clippy_utils::{find_macro_calls, return_ty};\n use rustc_hir as hir;\n use rustc_hir::intravisit::FnKind;\n use rustc_lint::{LateContext, LateLintPass};"}, {"sha": "d06e7f8fe1e0e58eef7f89cf37700c67da0d67bc", "filename": "clippy_lints/src/panic_unimplemented.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Fpanic_unimplemented.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Fpanic_unimplemented.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fpanic_unimplemented.rs?ref=6595d5571b4c498ca18ffc1fdca17b3815271df0", "patch": "@@ -1,5 +1,5 @@\n-use crate::utils::{is_expn_of, match_panic_call};\n use clippy_utils::diagnostics::span_lint;\n+use clippy_utils::{is_expn_of, match_panic_call};\n use if_chain::if_chain;\n use rustc_hir::Expr;\n use rustc_lint::{LateContext, LateLintPass};"}, {"sha": "1251ddd9a02733bd55e95c68c03496ed22d3f03b", "filename": "clippy_lints/src/partialeq_ne_impl.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Fpartialeq_ne_impl.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Fpartialeq_ne_impl.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fpartialeq_ne_impl.rs?ref=6595d5571b4c498ca18ffc1fdca17b3815271df0", "patch": "@@ -1,5 +1,5 @@\n-use crate::utils::is_automatically_derived;\n use clippy_utils::diagnostics::span_lint_hir;\n+use clippy_utils::is_automatically_derived;\n use if_chain::if_chain;\n use rustc_hir::{Impl, Item, ItemKind};\n use rustc_lint::{LateContext, LateLintPass};"}, {"sha": "9a5b1c3b9442a7e7f8658df06e98f5233dccd107", "filename": "clippy_lints/src/pass_by_ref_or_value.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Fpass_by_ref_or_value.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Fpass_by_ref_or_value.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fpass_by_ref_or_value.rs?ref=6595d5571b4c498ca18ffc1fdca17b3815271df0", "patch": "@@ -1,7 +1,7 @@\n use std::cmp;\n \n-use crate::utils::is_self_ty;\n use clippy_utils::diagnostics::span_lint_and_sugg;\n+use clippy_utils::is_self_ty;\n use clippy_utils::source::snippet;\n use clippy_utils::ty::is_copy;\n use if_chain::if_chain;"}, {"sha": "288e0e4586e3258d09ad27f84dd3c4eae12d644c", "filename": "clippy_lints/src/pattern_type_mismatch.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Fpattern_type_mismatch.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Fpattern_type_mismatch.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fpattern_type_mismatch.rs?ref=6595d5571b4c498ca18ffc1fdca17b3815271df0", "patch": "@@ -1,5 +1,5 @@\n-use crate::utils::last_path_segment;\n use clippy_utils::diagnostics::span_lint_and_help;\n+use clippy_utils::last_path_segment;\n use rustc_hir::{\n     intravisit, Body, Expr, ExprKind, FieldPat, FnDecl, HirId, LocalSource, MatchSource, Mutability, Pat, PatKind,\n     QPath, Stmt, StmtKind,"}, {"sha": "be686b1b0cd814f6c7fffd341a2a97fad8dc377c", "filename": "clippy_lints/src/ptr.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Fptr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Fptr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fptr.rs?ref=6595d5571b4c498ca18ffc1fdca17b3815271df0", "patch": "@@ -1,10 +1,10 @@\n //! Checks for usage of  `&Vec[_]` and `&String`.\n \n-use crate::utils::ptr::get_spans;\n-use crate::utils::{is_allowed, match_qpath, paths};\n use clippy_utils::diagnostics::{span_lint, span_lint_and_sugg, span_lint_and_then};\n+use clippy_utils::ptr::get_spans;\n use clippy_utils::source::snippet_opt;\n use clippy_utils::ty::{is_type_diagnostic_item, match_type, walk_ptrs_hir_ty};\n+use clippy_utils::{is_allowed, match_qpath, paths};\n use if_chain::if_chain;\n use rustc_errors::Applicability;\n use rustc_hir::{"}, {"sha": "5796c59c8b3fb6a53a1c6c3eddc5b78f19bf1404", "filename": "clippy_lints/src/ptr_eq.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Fptr_eq.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Fptr_eq.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fptr_eq.rs?ref=6595d5571b4c498ca18ffc1fdca17b3815271df0", "patch": "@@ -1,5 +1,5 @@\n-use crate::utils;\n use clippy_utils::diagnostics::span_lint_and_sugg;\n+use clippy_utils::in_macro;\n use clippy_utils::source::snippet_opt;\n use if_chain::if_chain;\n use rustc_errors::Applicability;\n@@ -42,7 +42,7 @@ static LINT_MSG: &str = \"use `std::ptr::eq` when comparing raw pointers\";\n \n impl LateLintPass<'_> for PtrEq {\n     fn check_expr(&mut self, cx: &LateContext<'tcx>, expr: &'tcx Expr<'_>) {\n-        if utils::in_macro(expr.span) {\n+        if in_macro(expr.span) {\n             return;\n         }\n "}, {"sha": "2054255a7c9dee1a2884c8c84894fdbe057e0d3d", "filename": "clippy_lints/src/question_mark.rs", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Fquestion_mark.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Fquestion_mark.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fquestion_mark.rs?ref=6595d5571b4c498ca18ffc1fdca17b3815271df0", "patch": "@@ -1,5 +1,8 @@\n+use clippy_utils::diagnostics::span_lint_and_sugg;\n use clippy_utils::source::snippet_with_applicability;\n+use clippy_utils::sugg::Sugg;\n use clippy_utils::ty::is_type_diagnostic_item;\n+use clippy_utils::{eq_expr_value, match_def_path, match_qpath, paths};\n use if_chain::if_chain;\n use rustc_errors::Applicability;\n use rustc_hir::def::{DefKind, Res};\n@@ -8,10 +11,6 @@ use rustc_lint::{LateContext, LateLintPass};\n use rustc_session::{declare_lint_pass, declare_tool_lint};\n use rustc_span::sym;\n \n-use crate::utils::sugg::Sugg;\n-use crate::utils::{eq_expr_value, match_def_path, match_qpath, paths};\n-use clippy_utils::diagnostics::span_lint_and_sugg;\n-\n declare_clippy_lint! {\n     /// **What it does:** Checks for expressions that could be replaced by the question mark operator.\n     ///"}, {"sha": "95b21489eb50e9f706c41ecd6de9ad432391bcae", "filename": "clippy_lints/src/ranges.rs", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Franges.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Franges.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Franges.rs?ref=6595d5571b4c498ca18ffc1fdca17b3815271df0", "patch": "@@ -1,6 +1,9 @@\n use crate::consts::{constant, Constant};\n use clippy_utils::diagnostics::{span_lint, span_lint_and_sugg, span_lint_and_then};\n use clippy_utils::source::{snippet, snippet_opt, snippet_with_applicability};\n+use clippy_utils::sugg::Sugg;\n+use clippy_utils::{get_parent_expr, in_constant, is_integer_const, meets_msrv, single_segment_path};\n+use clippy_utils::{higher, SpanlessEq};\n use if_chain::if_chain;\n use rustc_ast::ast::RangeLimits;\n use rustc_errors::Applicability;\n@@ -14,10 +17,6 @@ use rustc_span::sym;\n use rustc_span::symbol::Ident;\n use std::cmp::Ordering;\n \n-use crate::utils::sugg::Sugg;\n-use crate::utils::{get_parent_expr, in_constant, is_integer_const, meets_msrv, single_segment_path};\n-use crate::utils::{higher, SpanlessEq};\n-\n declare_clippy_lint! {\n     /// **What it does:** Checks for zipping a collection with the range of\n     /// `0.._.len()`."}, {"sha": "60da2bcb04a3dcf5206be582c146bcbb31f54375", "filename": "clippy_lints/src/redundant_clone.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Fredundant_clone.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Fredundant_clone.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fredundant_clone.rs?ref=6595d5571b4c498ca18ffc1fdca17b3815271df0", "patch": "@@ -1,7 +1,7 @@\n-use crate::utils::{fn_has_unsatisfiable_preds, match_def_path, paths};\n use clippy_utils::diagnostics::{span_lint_hir, span_lint_hir_and_then};\n use clippy_utils::source::snippet_opt;\n use clippy_utils::ty::{has_drop, is_copy, is_type_diagnostic_item, walk_ptrs_ty_depth};\n+use clippy_utils::{fn_has_unsatisfiable_preds, match_def_path, paths};\n use if_chain::if_chain;\n use rustc_data_structures::{fx::FxHashMap, transitive_relation::TransitiveRelation};\n use rustc_errors::Applicability;"}, {"sha": "f77be6fdf049458069bd4eefbc54cd23e426df05", "filename": "clippy_lints/src/redundant_field_names.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Fredundant_field_names.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Fredundant_field_names.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fredundant_field_names.rs?ref=6595d5571b4c498ca18ffc1fdca17b3815271df0", "patch": "@@ -1,5 +1,5 @@\n-use crate::utils::meets_msrv;\n use clippy_utils::diagnostics::span_lint_and_sugg;\n+use clippy_utils::meets_msrv;\n use rustc_ast::ast::{Expr, ExprKind};\n use rustc_errors::Applicability;\n use rustc_lint::{EarlyContext, EarlyLintPass};"}, {"sha": "32b57698ec54dc6481c0daa7468ec3b919860d25", "filename": "clippy_lints/src/redundant_static_lifetimes.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Fredundant_static_lifetimes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Fredundant_static_lifetimes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fredundant_static_lifetimes.rs?ref=6595d5571b4c498ca18ffc1fdca17b3815271df0", "patch": "@@ -1,5 +1,5 @@\n-use crate::utils::meets_msrv;\n use clippy_utils::diagnostics::span_lint_and_then;\n+use clippy_utils::meets_msrv;\n use clippy_utils::source::snippet;\n use rustc_ast::ast::{Item, ItemKind, Ty, TyKind};\n use rustc_errors::Applicability;"}, {"sha": "0922cfa494e6fabfddfe754417012c7994a0123f", "filename": "clippy_lints/src/ref_option_ref.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Fref_option_ref.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Fref_option_ref.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fref_option_ref.rs?ref=6595d5571b4c498ca18ffc1fdca17b3815271df0", "patch": "@@ -1,5 +1,5 @@\n-use crate::utils::last_path_segment;\n use clippy_utils::diagnostics::span_lint_and_sugg;\n+use clippy_utils::last_path_segment;\n use clippy_utils::source::snippet;\n use if_chain::if_chain;\n use rustc_errors::Applicability;"}, {"sha": "d6336389b0af12308a586f8ccc28e81707196895", "filename": "clippy_lints/src/reference.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Freference.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Freference.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Freference.rs?ref=6595d5571b4c498ca18ffc1fdca17b3815271df0", "patch": "@@ -1,7 +1,7 @@\n-use crate::utils::in_macro;\n-use crate::utils::sugg::Sugg;\n use clippy_utils::diagnostics::span_lint_and_sugg;\n+use clippy_utils::in_macro;\n use clippy_utils::source::{snippet_opt, snippet_with_applicability};\n+use clippy_utils::sugg::Sugg;\n use if_chain::if_chain;\n use rustc_ast::ast::{Expr, ExprKind, Mutability, UnOp};\n use rustc_errors::Applicability;"}, {"sha": "1cc332de894e16eb2527176ea5bf1a2f85d01dce", "filename": "clippy_lints/src/regex.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Fregex.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Fregex.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fregex.rs?ref=6595d5571b4c498ca18ffc1fdca17b3815271df0", "patch": "@@ -1,6 +1,6 @@\n use crate::consts::{constant, Constant};\n-use crate::utils::{match_def_path, paths};\n use clippy_utils::diagnostics::{span_lint, span_lint_and_help};\n+use clippy_utils::{match_def_path, paths};\n use if_chain::if_chain;\n use rustc_ast::ast::{LitKind, StrStyle};\n use rustc_data_structures::fx::FxHashSet;"}, {"sha": "63e5ec69e66d1ada4bb34bb3cb96e648f9670f34", "filename": "clippy_lints/src/repeat_once.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Frepeat_once.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Frepeat_once.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Frepeat_once.rs?ref=6595d5571b4c498ca18ffc1fdca17b3815271df0", "patch": "@@ -1,6 +1,6 @@\n use crate::consts::{constant_context, Constant};\n-use crate::utils::in_macro;\n use clippy_utils::diagnostics::span_lint_and_sugg;\n+use clippy_utils::in_macro;\n use clippy_utils::source::snippet;\n use clippy_utils::ty::is_type_diagnostic_item;\n use if_chain::if_chain;"}, {"sha": "8995ae431adadb1e357ee846ce721a7abd3e2681", "filename": "clippy_lints/src/returns.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Freturns.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Freturns.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Freturns.rs?ref=6595d5571b4c498ca18ffc1fdca17b3815271df0", "patch": "@@ -1,5 +1,6 @@\n use clippy_utils::diagnostics::{span_lint_and_sugg, span_lint_and_then};\n use clippy_utils::source::snippet_opt;\n+use clippy_utils::{fn_def_id, in_macro, match_qpath};\n use if_chain::if_chain;\n use rustc_ast::ast::Attribute;\n use rustc_errors::Applicability;\n@@ -13,8 +14,6 @@ use rustc_session::{declare_lint_pass, declare_tool_lint};\n use rustc_span::source_map::Span;\n use rustc_span::sym;\n \n-use crate::utils::{fn_def_id, in_macro, match_qpath};\n-\n declare_clippy_lint! {\n     /// **What it does:** Checks for `let`-bindings, which are subsequently\n     /// returned."}, {"sha": "e7925c4fbdeffdad43968210c2f93ce0b4097dd6", "filename": "clippy_lints/src/self_assignment.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Fself_assignment.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Fself_assignment.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fself_assignment.rs?ref=6595d5571b4c498ca18ffc1fdca17b3815271df0", "patch": "@@ -1,5 +1,5 @@\n-use crate::utils::eq_expr_value;\n use clippy_utils::diagnostics::span_lint;\n+use clippy_utils::eq_expr_value;\n use clippy_utils::source::snippet;\n use rustc_hir::{Expr, ExprKind};\n use rustc_lint::{LateContext, LateLintPass};"}, {"sha": "f61af15fbed0ebbf5edaaa357a7c23bf0dd711e5", "filename": "clippy_lints/src/semicolon_if_nothing_returned.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Fsemicolon_if_nothing_returned.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Fsemicolon_if_nothing_returned.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fsemicolon_if_nothing_returned.rs?ref=6595d5571b4c498ca18ffc1fdca17b3815271df0", "patch": "@@ -1,6 +1,6 @@\n-use crate::utils::{in_macro, sugg};\n use clippy_utils::diagnostics::span_lint_and_sugg;\n use clippy_utils::source::snippet_with_macro_callsite;\n+use clippy_utils::{in_macro, sugg};\n use if_chain::if_chain;\n use rustc_errors::Applicability;\n use rustc_hir::{Block, ExprKind};"}, {"sha": "169f7d26285cd902c8abb1835e093c3542739c92", "filename": "clippy_lints/src/serde_api.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Fserde_api.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Fserde_api.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fserde_api.rs?ref=6595d5571b4c498ca18ffc1fdca17b3815271df0", "patch": "@@ -1,5 +1,5 @@\n-use crate::utils::{get_trait_def_id, paths};\n use clippy_utils::diagnostics::span_lint;\n+use clippy_utils::{get_trait_def_id, paths};\n use rustc_hir::{Impl, Item, ItemKind};\n use rustc_lint::{LateContext, LateLintPass};\n use rustc_session::{declare_lint_pass, declare_tool_lint};"}, {"sha": "612d2fd84cb6fd70029f83556a2c007edcb849bd", "filename": "clippy_lints/src/shadow.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Fshadow.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Fshadow.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fshadow.rs?ref=6595d5571b4c498ca18ffc1fdca17b3815271df0", "patch": "@@ -1,6 +1,6 @@\n-use crate::utils::{contains_name, higher, iter_input_pats};\n use clippy_utils::diagnostics::span_lint_and_then;\n use clippy_utils::source::snippet;\n+use clippy_utils::{contains_name, higher, iter_input_pats};\n use rustc_hir::intravisit::FnKind;\n use rustc_hir::{\n     Block, Body, Expr, ExprKind, FnDecl, Guard, HirId, Local, MutTy, Pat, PatKind, Path, QPath, StmtKind, Ty, TyKind,"}, {"sha": "c9d72aabb6a3cb68d6d7dc14717e88fa103f6387", "filename": "clippy_lints/src/single_component_path_imports.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Fsingle_component_path_imports.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Fsingle_component_path_imports.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fsingle_component_path_imports.rs?ref=6595d5571b4c498ca18ffc1fdca17b3815271df0", "patch": "@@ -1,5 +1,5 @@\n-use crate::utils::in_macro;\n use clippy_utils::diagnostics::span_lint_and_sugg;\n+use clippy_utils::in_macro;\n use if_chain::if_chain;\n use rustc_ast::{Item, ItemKind, UseTreeKind};\n use rustc_errors::Applicability;"}, {"sha": "09e00866815568a8478b4097b55b0efde6683e2d", "filename": "clippy_lints/src/size_of_in_element_count.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Fsize_of_in_element_count.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Fsize_of_in_element_count.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fsize_of_in_element_count.rs?ref=6595d5571b4c498ca18ffc1fdca17b3815271df0", "patch": "@@ -1,8 +1,8 @@\n //! Lint on use of `size_of` or `size_of_val` of T in an expression\n //! expecting a count of T\n \n-use crate::utils::{match_def_path, paths};\n use clippy_utils::diagnostics::span_lint_and_help;\n+use clippy_utils::{match_def_path, paths};\n use if_chain::if_chain;\n use rustc_hir::BinOpKind;\n use rustc_hir::{Expr, ExprKind};"}, {"sha": "d55a83f16136adc7d3de61e07a69ea9372d7a17d", "filename": "clippy_lints/src/slow_vector_initialization.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Fslow_vector_initialization.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Fslow_vector_initialization.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fslow_vector_initialization.rs?ref=6595d5571b4c498ca18ffc1fdca17b3815271df0", "patch": "@@ -1,6 +1,6 @@\n-use crate::utils::sugg::Sugg;\n-use crate::utils::{get_enclosing_block, match_qpath, SpanlessEq};\n use clippy_utils::diagnostics::span_lint_and_then;\n+use clippy_utils::sugg::Sugg;\n+use clippy_utils::{get_enclosing_block, match_qpath, SpanlessEq};\n use if_chain::if_chain;\n use rustc_ast::ast::LitKind;\n use rustc_errors::Applicability;"}, {"sha": "65790375c737946cde63eabca848e69fc7587d70", "filename": "clippy_lints/src/stable_sort_primitive.rs", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Fstable_sort_primitive.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Fstable_sort_primitive.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fstable_sort_primitive.rs?ref=6595d5571b4c498ca18ffc1fdca17b3815271df0", "patch": "@@ -1,8 +1,6 @@\n-use crate::utils::{is_slice_of_primitives, sugg::Sugg};\n use clippy_utils::diagnostics::span_lint_and_then;\n-\n+use clippy_utils::{is_slice_of_primitives, sugg::Sugg};\n use if_chain::if_chain;\n-\n use rustc_errors::Applicability;\n use rustc_hir::{Expr, ExprKind};\n use rustc_lint::{LateContext, LateLintPass};"}, {"sha": "760f5e3b4328197a3c4e235915ccf4176750402f", "filename": "clippy_lints/src/strings.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Fstrings.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Fstrings.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fstrings.rs?ref=6595d5571b4c498ca18ffc1fdca17b3815271df0", "patch": "@@ -1,8 +1,8 @@\n-use crate::utils::SpanlessEq;\n-use crate::utils::{get_parent_expr, is_allowed, match_function_call, method_calls, paths};\n use clippy_utils::diagnostics::{span_lint, span_lint_and_help, span_lint_and_sugg};\n use clippy_utils::source::{snippet, snippet_with_applicability};\n use clippy_utils::ty::is_type_diagnostic_item;\n+use clippy_utils::SpanlessEq;\n+use clippy_utils::{get_parent_expr, is_allowed, match_function_call, method_calls, paths};\n use if_chain::if_chain;\n use rustc_errors::Applicability;\n use rustc_hir::{BinOpKind, BorrowKind, Expr, ExprKind, LangItem, QPath};"}, {"sha": "1e5d3c17e3b88a1174b21347a05aa42ef2cccc8b", "filename": "clippy_lints/src/suspicious_operation_groupings.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Fsuspicious_operation_groupings.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Fsuspicious_operation_groupings.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fsuspicious_operation_groupings.rs?ref=6595d5571b4c498ca18ffc1fdca17b3815271df0", "patch": "@@ -1,4 +1,4 @@\n-use crate::utils::ast_utils::{eq_id, is_useless_with_eq_exprs, IdentIter};\n+use clippy_utils::ast_utils::{eq_id, is_useless_with_eq_exprs, IdentIter};\n use clippy_utils::diagnostics::span_lint_and_sugg;\n use clippy_utils::source::snippet_with_applicability;\n use core::ops::{Add, AddAssign};"}, {"sha": "99e3d818b798b53ed3253fa1762f15c14f4ebdff", "filename": "clippy_lints/src/suspicious_trait_impl.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Fsuspicious_trait_impl.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Fsuspicious_trait_impl.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fsuspicious_trait_impl.rs?ref=6595d5571b4c498ca18ffc1fdca17b3815271df0", "patch": "@@ -1,5 +1,5 @@\n-use crate::utils::{get_trait_def_id, trait_ref_of_method};\n use clippy_utils::diagnostics::span_lint;\n+use clippy_utils::{get_trait_def_id, paths, trait_ref_of_method};\n use if_chain::if_chain;\n use rustc_hir as hir;\n use rustc_hir::intravisit::{walk_expr, NestedVisitorMap, Visitor};\n@@ -159,7 +159,7 @@ fn check_binop(\n     expected_ops: &[hir::BinOpKind],\n ) -> Option<&'static str> {\n     let mut trait_ids = vec![];\n-    let [krate, module] = crate::utils::paths::OPS_MODULE;\n+    let [krate, module] = paths::OPS_MODULE;\n \n     for &t in traits {\n         let path = [krate, module, t];"}, {"sha": "14519eaa962e33dd47adcec19b5a5ff9dade6079", "filename": "clippy_lints/src/swap.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Fswap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Fswap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fswap.rs?ref=6595d5571b4c498ca18ffc1fdca17b3815271df0", "patch": "@@ -1,8 +1,8 @@\n-use crate::utils::sugg::Sugg;\n-use crate::utils::{differing_macro_contexts, eq_expr_value};\n use clippy_utils::diagnostics::span_lint_and_then;\n use clippy_utils::source::snippet_with_applicability;\n+use clippy_utils::sugg::Sugg;\n use clippy_utils::ty::is_type_diagnostic_item;\n+use clippy_utils::{differing_macro_contexts, eq_expr_value};\n use if_chain::if_chain;\n use rustc_errors::Applicability;\n use rustc_hir::{Block, Expr, ExprKind, PatKind, QPath, StmtKind};"}, {"sha": "8ef25dc816c65a995d413faaf79de5f142f9861e", "filename": "clippy_lints/src/temporary_assignment.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Ftemporary_assignment.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Ftemporary_assignment.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Ftemporary_assignment.rs?ref=6595d5571b4c498ca18ffc1fdca17b3815271df0", "patch": "@@ -1,5 +1,5 @@\n-use crate::utils::is_adjusted;\n use clippy_utils::diagnostics::span_lint;\n+use clippy_utils::is_adjusted;\n use rustc_hir::{Expr, ExprKind};\n use rustc_lint::{LateContext, LateLintPass};\n use rustc_session::{declare_lint_pass, declare_tool_lint};"}, {"sha": "c66a596c784611e7afcb5bd605524c83a1090df1", "filename": "clippy_lints/src/to_digit_is_some.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Fto_digit_is_some.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Fto_digit_is_some.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fto_digit_is_some.rs?ref=6595d5571b4c498ca18ffc1fdca17b3815271df0", "patch": "@@ -1,5 +1,5 @@\n-use crate::utils::match_def_path;\n use clippy_utils::diagnostics::span_lint_and_sugg;\n+use clippy_utils::match_def_path;\n use clippy_utils::source::snippet_with_applicability;\n use if_chain::if_chain;\n use rustc_errors::Applicability;"}, {"sha": "42ec14c31b5b1aec4bf6586f2b256842b6454796", "filename": "clippy_lints/src/to_string_in_display.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Fto_string_in_display.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Fto_string_in_display.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fto_string_in_display.rs?ref=6595d5571b4c498ca18ffc1fdca17b3815271df0", "patch": "@@ -1,5 +1,5 @@\n-use crate::utils::{is_diagnostic_assoc_item, match_def_path, path_to_local_id, paths};\n use clippy_utils::diagnostics::span_lint;\n+use clippy_utils::{is_diagnostic_assoc_item, match_def_path, path_to_local_id, paths};\n use if_chain::if_chain;\n use rustc_hir::{Expr, ExprKind, HirId, Impl, ImplItem, ImplItemKind, Item, ItemKind};\n use rustc_lint::{LateContext, LateLintPass};"}, {"sha": "3ff27c3bcf49f0447f61762e1675620f3d6e8321", "filename": "clippy_lints/src/trait_bounds.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Ftrait_bounds.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Ftrait_bounds.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Ftrait_bounds.rs?ref=6595d5571b4c498ca18ffc1fdca17b3815271df0", "patch": "@@ -1,6 +1,6 @@\n-use crate::utils::{in_macro, SpanlessHash};\n use clippy_utils::diagnostics::span_lint_and_help;\n use clippy_utils::source::{snippet, snippet_with_applicability};\n+use clippy_utils::{in_macro, SpanlessHash};\n use if_chain::if_chain;\n use rustc_data_structures::fx::FxHashMap;\n use rustc_errors::Applicability;"}, {"sha": "47d58bd30db51b9934d71abb261c1a5d38957ed9", "filename": "clippy_lints/src/transmute/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Ftransmute%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Ftransmute%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Ftransmute%2Fmod.rs?ref=6595d5571b4c498ca18ffc1fdca17b3815271df0", "patch": "@@ -12,7 +12,7 @@ mod useless_transmute;\n mod utils;\n mod wrong_transmute;\n \n-use crate::utils::{in_constant, match_def_path, paths};\n+use clippy_utils::{in_constant, match_def_path, paths};\n use if_chain::if_chain;\n use rustc_hir::{Expr, ExprKind};\n use rustc_lint::{LateContext, LateLintPass};"}, {"sha": "72489f27cd32856d34695c980cfcb445971665f9", "filename": "clippy_lints/src/transmute/transmute_float_to_int.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Ftransmute%2Ftransmute_float_to_int.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Ftransmute%2Ftransmute_float_to_int.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Ftransmute%2Ftransmute_float_to_int.rs?ref=6595d5571b4c498ca18ffc1fdca17b3815271df0", "patch": "@@ -1,6 +1,6 @@\n use super::TRANSMUTE_FLOAT_TO_INT;\n-use crate::utils::sugg;\n use clippy_utils::diagnostics::span_lint_and_then;\n+use clippy_utils::sugg;\n use if_chain::if_chain;\n use rustc_ast as ast;\n use rustc_errors::Applicability;"}, {"sha": "cc0a5643e2a7d35295de3f9eff785371fdbc1ad7", "filename": "clippy_lints/src/transmute/transmute_int_to_bool.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Ftransmute%2Ftransmute_int_to_bool.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Ftransmute%2Ftransmute_int_to_bool.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Ftransmute%2Ftransmute_int_to_bool.rs?ref=6595d5571b4c498ca18ffc1fdca17b3815271df0", "patch": "@@ -1,6 +1,6 @@\n use super::TRANSMUTE_INT_TO_BOOL;\n-use crate::utils::sugg;\n use clippy_utils::diagnostics::span_lint_and_then;\n+use clippy_utils::sugg;\n use rustc_ast as ast;\n use rustc_errors::Applicability;\n use rustc_hir::Expr;"}, {"sha": "8f884e6a4a17b74203247569d2f9b3a925a60c7c", "filename": "clippy_lints/src/transmute/transmute_int_to_char.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Ftransmute%2Ftransmute_int_to_char.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Ftransmute%2Ftransmute_int_to_char.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Ftransmute%2Ftransmute_int_to_char.rs?ref=6595d5571b4c498ca18ffc1fdca17b3815271df0", "patch": "@@ -1,6 +1,6 @@\n use super::TRANSMUTE_INT_TO_CHAR;\n-use crate::utils::sugg;\n use clippy_utils::diagnostics::span_lint_and_then;\n+use clippy_utils::sugg;\n use rustc_ast as ast;\n use rustc_errors::Applicability;\n use rustc_hir::Expr;"}, {"sha": "2b6a4cff81eb5d60549b0dc4d97497e37f89e783", "filename": "clippy_lints/src/transmute/transmute_int_to_float.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Ftransmute%2Ftransmute_int_to_float.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Ftransmute%2Ftransmute_int_to_float.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Ftransmute%2Ftransmute_int_to_float.rs?ref=6595d5571b4c498ca18ffc1fdca17b3815271df0", "patch": "@@ -1,6 +1,6 @@\n use super::TRANSMUTE_INT_TO_FLOAT;\n-use crate::utils::sugg;\n use clippy_utils::diagnostics::span_lint_and_then;\n+use clippy_utils::sugg;\n use rustc_errors::Applicability;\n use rustc_hir::Expr;\n use rustc_lint::LateContext;"}, {"sha": "7b646bfc0c6d13e0bb544d4aef8fede6beb8f0cb", "filename": "clippy_lints/src/transmute/transmute_ptr_to_ptr.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Ftransmute%2Ftransmute_ptr_to_ptr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Ftransmute%2Ftransmute_ptr_to_ptr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Ftransmute%2Ftransmute_ptr_to_ptr.rs?ref=6595d5571b4c498ca18ffc1fdca17b3815271df0", "patch": "@@ -1,6 +1,6 @@\n use super::TRANSMUTE_PTR_TO_PTR;\n-use crate::utils::sugg;\n use clippy_utils::diagnostics::span_lint_and_then;\n+use clippy_utils::sugg;\n use rustc_errors::Applicability;\n use rustc_hir::Expr;\n use rustc_lint::LateContext;"}, {"sha": "f14eef936453114abb3b4814fafe2cfe09c95826", "filename": "clippy_lints/src/transmute/transmute_ptr_to_ref.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Ftransmute%2Ftransmute_ptr_to_ref.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Ftransmute%2Ftransmute_ptr_to_ref.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Ftransmute%2Ftransmute_ptr_to_ref.rs?ref=6595d5571b4c498ca18ffc1fdca17b3815271df0", "patch": "@@ -1,7 +1,7 @@\n use super::utils::get_type_snippet;\n use super::TRANSMUTE_PTR_TO_REF;\n-use crate::utils::sugg;\n use clippy_utils::diagnostics::span_lint_and_then;\n+use clippy_utils::sugg;\n use rustc_errors::Applicability;\n use rustc_hir::{Expr, Mutability, QPath};\n use rustc_lint::LateContext;"}, {"sha": "d105e37abf9c08281553f4298958db2e2f1bc9c6", "filename": "clippy_lints/src/transmute/transmute_ref_to_ref.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Ftransmute%2Ftransmute_ref_to_ref.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Ftransmute%2Ftransmute_ref_to_ref.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Ftransmute%2Ftransmute_ref_to_ref.rs?ref=6595d5571b4c498ca18ffc1fdca17b3815271df0", "patch": "@@ -1,7 +1,7 @@\n use super::{TRANSMUTE_BYTES_TO_STR, TRANSMUTE_PTR_TO_PTR};\n-use crate::utils::sugg;\n use clippy_utils::diagnostics::{span_lint_and_sugg, span_lint_and_then};\n use clippy_utils::source::snippet;\n+use clippy_utils::sugg;\n use if_chain::if_chain;\n use rustc_errors::Applicability;\n use rustc_hir::{Expr, Mutability};"}, {"sha": "e2c6d130f3c9cd40c537732af1e4b02e8305e0a7", "filename": "clippy_lints/src/transmute/transmutes_expressible_as_ptr_casts.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Ftransmute%2Ftransmutes_expressible_as_ptr_casts.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Ftransmute%2Ftransmutes_expressible_as_ptr_casts.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Ftransmute%2Ftransmutes_expressible_as_ptr_casts.rs?ref=6595d5571b4c498ca18ffc1fdca17b3815271df0", "patch": "@@ -1,7 +1,7 @@\n use super::utils::can_be_expressed_as_pointer_cast;\n use super::TRANSMUTES_EXPRESSIBLE_AS_PTR_CASTS;\n-use crate::utils::sugg;\n use clippy_utils::diagnostics::span_lint_and_then;\n+use clippy_utils::sugg;\n use rustc_errors::Applicability;\n use rustc_hir::Expr;\n use rustc_lint::LateContext;"}, {"sha": "de9277e016e3a7cbbf447af459d3547835d83a86", "filename": "clippy_lints/src/transmute/unsound_collection_transmute.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Ftransmute%2Funsound_collection_transmute.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Ftransmute%2Funsound_collection_transmute.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Ftransmute%2Funsound_collection_transmute.rs?ref=6595d5571b4c498ca18ffc1fdca17b3815271df0", "patch": "@@ -1,7 +1,7 @@\n use super::utils::is_layout_incompatible;\n use super::UNSOUND_COLLECTION_TRANSMUTE;\n-use crate::utils::{match_def_path, paths};\n use clippy_utils::diagnostics::span_lint;\n+use clippy_utils::{match_def_path, paths};\n use rustc_hir::Expr;\n use rustc_lint::LateContext;\n use rustc_middle::ty::{self, Ty};"}, {"sha": "445bcf60fa71a68e4481a945f4abda3a012d2cb3", "filename": "clippy_lints/src/transmute/useless_transmute.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Ftransmute%2Fuseless_transmute.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Ftransmute%2Fuseless_transmute.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Ftransmute%2Fuseless_transmute.rs?ref=6595d5571b4c498ca18ffc1fdca17b3815271df0", "patch": "@@ -1,6 +1,6 @@\n use super::USELESS_TRANSMUTE;\n-use crate::utils::sugg;\n use clippy_utils::diagnostics::{span_lint, span_lint_and_then};\n+use clippy_utils::sugg;\n use rustc_errors::Applicability;\n use rustc_hir::Expr;\n use rustc_lint::LateContext;"}, {"sha": "c6d0d63b0b5426f32f9c1cc3a3eeca1a50ca8885", "filename": "clippy_lints/src/transmute/utils.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Ftransmute%2Futils.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Ftransmute%2Futils.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Ftransmute%2Futils.rs?ref=6595d5571b4c498ca18ffc1fdca17b3815271df0", "patch": "@@ -1,4 +1,4 @@\n-use crate::utils::last_path_segment;\n+use clippy_utils::last_path_segment;\n use clippy_utils::source::snippet;\n use clippy_utils::ty::is_normalizable;\n use if_chain::if_chain;"}, {"sha": "d42cdde110e7789e95cc5eb48f63af9d2093c524", "filename": "clippy_lints/src/transmuting_null.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Ftransmuting_null.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Ftransmuting_null.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Ftransmuting_null.rs?ref=6595d5571b4c498ca18ffc1fdca17b3815271df0", "patch": "@@ -1,6 +1,6 @@\n use crate::consts::{constant_context, Constant};\n-use crate::utils::{match_qpath, paths};\n use clippy_utils::diagnostics::span_lint;\n+use clippy_utils::{match_qpath, paths};\n use if_chain::if_chain;\n use rustc_ast::LitKind;\n use rustc_hir::{Expr, ExprKind};"}, {"sha": "e61058c2749083b616ae5676375bef2e2f9aff25", "filename": "clippy_lints/src/try_err.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Ftry_err.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Ftry_err.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Ftry_err.rs?ref=6595d5571b4c498ca18ffc1fdca17b3815271df0", "patch": "@@ -1,7 +1,7 @@\n-use crate::utils::{differing_macro_contexts, in_macro, match_def_path, match_qpath, paths};\n use clippy_utils::diagnostics::span_lint_and_sugg;\n use clippy_utils::source::{snippet, snippet_with_macro_callsite};\n use clippy_utils::ty::is_type_diagnostic_item;\n+use clippy_utils::{differing_macro_contexts, in_macro, match_def_path, match_qpath, paths};\n use if_chain::if_chain;\n use rustc_errors::Applicability;\n use rustc_hir::{Expr, ExprKind, LangItem, MatchSource, QPath};"}, {"sha": "1721fcfdcf4c50496e39dc54c2a4843edecd789a", "filename": "clippy_lints/src/types/borrowed_box.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Ftypes%2Fborrowed_box.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Ftypes%2Fborrowed_box.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Ftypes%2Fborrowed_box.rs?ref=6595d5571b4c498ca18ffc1fdca17b3815271df0", "patch": "@@ -1,6 +1,6 @@\n-use crate::utils::{match_path, paths};\n use clippy_utils::diagnostics::span_lint_and_sugg;\n use clippy_utils::source::snippet;\n+use clippy_utils::{match_path, paths};\n use if_chain::if_chain;\n use rustc_errors::Applicability;\n use rustc_hir::{"}, {"sha": "d8b1953457ccc961f4803370e7195540ee168ca3", "filename": "clippy_lints/src/types/box_vec.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Ftypes%2Fbox_vec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Ftypes%2Fbox_vec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Ftypes%2Fbox_vec.rs?ref=6595d5571b4c498ca18ffc1fdca17b3815271df0", "patch": "@@ -1,10 +1,9 @@\n use clippy_utils::diagnostics::span_lint_and_help;\n+use clippy_utils::is_ty_param_diagnostic_item;\n use rustc_hir::{self as hir, def_id::DefId, QPath};\n use rustc_lint::LateContext;\n use rustc_span::symbol::sym;\n \n-use crate::utils::is_ty_param_diagnostic_item;\n-\n use super::BOX_VEC;\n \n pub(super) fn check(cx: &LateContext<'_>, hir_ty: &hir::Ty<'_>, qpath: &QPath<'_>, def_id: DefId) -> bool {"}, {"sha": "a9fbe7aa315c823dcdff245207507210cb501964", "filename": "clippy_lints/src/types/linked_list.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Ftypes%2Flinked_list.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Ftypes%2Flinked_list.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Ftypes%2Flinked_list.rs?ref=6595d5571b4c498ca18ffc1fdca17b3815271df0", "patch": "@@ -1,9 +1,8 @@\n use clippy_utils::diagnostics::span_lint_and_help;\n+use clippy_utils::{match_def_path, paths};\n use rustc_hir::{self as hir, def_id::DefId};\n use rustc_lint::LateContext;\n \n-use crate::utils::{match_def_path, paths};\n-\n use super::LINKEDLIST;\n \n pub(super) fn check(cx: &LateContext<'_>, hir_ty: &hir::Ty<'_>, def_id: DefId) -> bool {"}, {"sha": "c0cd48e94b222a35140eaa456bec03bf0c8e18a2", "filename": "clippy_lints/src/types/mod.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Ftypes%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Ftypes%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Ftypes%2Fmod.rs?ref=6595d5571b4c498ca18ffc1fdca17b3815271df0", "patch": "@@ -36,8 +36,8 @@ use rustc_target::spec::abi::Abi;\n use rustc_typeck::hir_ty_to_ty;\n \n use crate::consts::{constant, Constant};\n-use crate::utils::paths;\n-use crate::utils::{clip, comparisons, differing_macro_contexts, int_bits, match_path, sext, unsext};\n+use clippy_utils::paths;\n+use clippy_utils::{clip, comparisons, differing_macro_contexts, int_bits, match_path, sext, unsext};\n \n declare_clippy_lint! {\n     /// **What it does:** Checks for use of `Box<Vec<_>>` anywhere in the code.\n@@ -618,7 +618,7 @@ fn detect_absurd_comparison<'tcx>(\n ) -> Option<(ExtremeExpr<'tcx>, AbsurdComparisonResult)> {\n     use crate::types::AbsurdComparisonResult::{AlwaysFalse, AlwaysTrue, InequalityImpossible};\n     use crate::types::ExtremeType::{Maximum, Minimum};\n-    use crate::utils::comparisons::{normalize_comparison, Rel};\n+    use clippy_utils::comparisons::{normalize_comparison, Rel};\n \n     // absurd comparison only makes sense on primitive types\n     // primitive types don't implement comparison operators with each other\n@@ -860,7 +860,7 @@ fn upcast_comparison_bounds_err<'tcx>(\n     rhs: &'tcx Expr<'_>,\n     invert: bool,\n ) {\n-    use crate::utils::comparisons::Rel;\n+    use clippy_utils::comparisons::Rel;\n \n     if let Some((lb, ub)) = lhs_bounds {\n         if let Some(norm_rhs_val) = node_as_const_fullint(cx, rhs) {"}, {"sha": "b2692c48076b64288d01e8cc646f1c2e5b4fca9b", "filename": "clippy_lints/src/types/option_option.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Ftypes%2Foption_option.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Ftypes%2Foption_option.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Ftypes%2Foption_option.rs?ref=6595d5571b4c498ca18ffc1fdca17b3815271df0", "patch": "@@ -1,10 +1,9 @@\n use clippy_utils::diagnostics::span_lint;\n+use clippy_utils::is_ty_param_diagnostic_item;\n use rustc_hir::{self as hir, def_id::DefId, QPath};\n use rustc_lint::LateContext;\n use rustc_span::symbol::sym;\n \n-use crate::utils::is_ty_param_diagnostic_item;\n-\n use super::OPTION_OPTION;\n \n pub(super) fn check(cx: &LateContext<'_>, hir_ty: &hir::Ty<'_>, qpath: &QPath<'_>, def_id: DefId) -> bool {"}, {"sha": "ef629a35d107eb383b8af192ac92fa166be4cedf", "filename": "clippy_lints/src/types/rc_buffer.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Ftypes%2Frc_buffer.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Ftypes%2Frc_buffer.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Ftypes%2Frc_buffer.rs?ref=6595d5571b4c498ca18ffc1fdca17b3815271df0", "patch": "@@ -1,12 +1,11 @@\n use clippy_utils::diagnostics::span_lint_and_sugg;\n use clippy_utils::source::snippet_with_applicability;\n+use clippy_utils::{get_qpath_generic_tys, is_ty_param_diagnostic_item};\n use rustc_errors::Applicability;\n use rustc_hir::{self as hir, def_id::DefId, QPath, TyKind};\n use rustc_lint::LateContext;\n use rustc_span::symbol::sym;\n \n-use crate::utils::{get_qpath_generic_tys, is_ty_param_diagnostic_item};\n-\n use super::RC_BUFFER;\n \n pub(super) fn check(cx: &LateContext<'_>, hir_ty: &hir::Ty<'_>, qpath: &QPath<'_>, def_id: DefId) -> bool {"}, {"sha": "c0c1f340583c1b53cb126407fe8ccb96c53aa9da", "filename": "clippy_lints/src/types/redundant_allocation.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Ftypes%2Fredundant_allocation.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Ftypes%2Fredundant_allocation.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Ftypes%2Fredundant_allocation.rs?ref=6595d5571b4c498ca18ffc1fdca17b3815271df0", "patch": "@@ -1,12 +1,11 @@\n use clippy_utils::diagnostics::span_lint_and_sugg;\n use clippy_utils::source::snippet_with_applicability;\n+use clippy_utils::{get_qpath_generic_tys, is_ty_param_diagnostic_item, is_ty_param_lang_item};\n use rustc_errors::Applicability;\n use rustc_hir::{self as hir, def_id::DefId, LangItem, QPath, TyKind};\n use rustc_lint::LateContext;\n use rustc_span::symbol::sym;\n \n-use crate::utils::{get_qpath_generic_tys, is_ty_param_diagnostic_item, is_ty_param_lang_item};\n-\n use super::{utils, REDUNDANT_ALLOCATION};\n \n pub(super) fn check(cx: &LateContext<'_>, hir_ty: &hir::Ty<'_>, qpath: &QPath<'_>, def_id: DefId) -> bool {"}, {"sha": "45f891ed71831c6dd635b2313c3b4b59a2c35579", "filename": "clippy_lints/src/types/utils.rs", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Ftypes%2Futils.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Ftypes%2Futils.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Ftypes%2Futils.rs?ref=6595d5571b4c498ca18ffc1fdca17b3815271df0", "patch": "@@ -1,11 +1,9 @@\n+use clippy_utils::last_path_segment;\n+use if_chain::if_chain;\n use rustc_hir::{GenericArg, QPath, TyKind};\n use rustc_lint::LateContext;\n use rustc_span::source_map::Span;\n \n-use crate::utils::last_path_segment;\n-\n-use if_chain::if_chain;\n-\n pub(super) fn match_borrows_parameter(_cx: &LateContext<'_>, qpath: &QPath<'_>) -> Option<Span> {\n     let last = last_path_segment(qpath);\n     if_chain! {"}, {"sha": "d2c373db261d96ffff660b7fd8efb21723dd2d2b", "filename": "clippy_lints/src/types/vec_box.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Ftypes%2Fvec_box.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Ftypes%2Fvec_box.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Ftypes%2Fvec_box.rs?ref=6595d5571b4c498ca18ffc1fdca17b3815271df0", "patch": "@@ -1,4 +1,5 @@\n use clippy_utils::diagnostics::span_lint_and_sugg;\n+use clippy_utils::last_path_segment;\n use clippy_utils::source::snippet;\n use if_chain::if_chain;\n use rustc_errors::Applicability;\n@@ -9,8 +10,6 @@ use rustc_span::symbol::sym;\n use rustc_target::abi::LayoutOf;\n use rustc_typeck::hir_ty_to_ty;\n \n-use crate::utils::last_path_segment;\n-\n use super::VEC_BOX;\n \n pub(super) fn check("}, {"sha": "b6749069176b867ffc630119d1aa4bb7b99861b9", "filename": "clippy_lints/src/undropped_manually_drops.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Fundropped_manually_drops.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Fundropped_manually_drops.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fundropped_manually_drops.rs?ref=6595d5571b4c498ca18ffc1fdca17b3815271df0", "patch": "@@ -1,6 +1,6 @@\n-use crate::utils::{match_function_call, paths};\n use clippy_utils::diagnostics::span_lint_and_help;\n use clippy_utils::ty::is_type_lang_item;\n+use clippy_utils::{match_function_call, paths};\n use rustc_hir::{lang_items, Expr};\n use rustc_lint::{LateContext, LateLintPass};\n use rustc_session::{declare_lint_pass, declare_tool_lint};"}, {"sha": "d81e31f5a21d46000662efbe17faada7b1f47283", "filename": "clippy_lints/src/unicode.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Funicode.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Funicode.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Funicode.rs?ref=6595d5571b4c498ca18ffc1fdca17b3815271df0", "patch": "@@ -1,5 +1,5 @@\n-use crate::utils::is_allowed;\n use clippy_utils::diagnostics::span_lint_and_sugg;\n+use clippy_utils::is_allowed;\n use clippy_utils::source::snippet;\n use rustc_ast::ast::LitKind;\n use rustc_errors::Applicability;"}, {"sha": "bad3e488bb6d501571d3f6c47438c3cc38db966a", "filename": "clippy_lints/src/unit_return_expecting_ord.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Funit_return_expecting_ord.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Funit_return_expecting_ord.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Funit_return_expecting_ord.rs?ref=6595d5571b4c498ca18ffc1fdca17b3815271df0", "patch": "@@ -1,5 +1,5 @@\n-use crate::utils::{get_trait_def_id, paths};\n use clippy_utils::diagnostics::{span_lint, span_lint_and_help};\n+use clippy_utils::{get_trait_def_id, paths};\n use if_chain::if_chain;\n use rustc_hir::def_id::DefId;\n use rustc_hir::{Expr, ExprKind, StmtKind};"}, {"sha": "8698a718bbd808ff06126e84ed893d84ffa2fb4d", "filename": "clippy_lints/src/unit_types/let_unit_value.rs", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Funit_types%2Flet_unit_value.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Funit_types%2Flet_unit_value.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Funit_types%2Flet_unit_value.rs?ref=6595d5571b4c498ca18ffc1fdca17b3815271df0", "patch": "@@ -1,12 +1,11 @@\n+use clippy_utils::diagnostics::span_lint_and_then;\n+use clippy_utils::higher;\n+use clippy_utils::source::snippet_with_macro_callsite;\n use rustc_errors::Applicability;\n use rustc_hir::{Stmt, StmtKind};\n use rustc_lint::{LateContext, LintContext};\n use rustc_middle::lint::in_external_macro;\n \n-use crate::utils::diagnostics::span_lint_and_then;\n-use crate::utils::higher;\n-use crate::utils::source::snippet_with_macro_callsite;\n-\n use super::LET_UNIT_VALUE;\n \n pub(super) fn check(cx: &LateContext<'_>, stmt: &Stmt<'_>) {"}, {"sha": "925ab5770994960adc06f8052219353a2fc62929", "filename": "clippy_lints/src/unit_types/unit_arg.rs", "status": "modified", "additions": 3, "deletions": 5, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Funit_types%2Funit_arg.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Funit_types%2Funit_arg.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Funit_types%2Funit_arg.rs?ref=6595d5571b4c498ca18ffc1fdca17b3815271df0", "patch": "@@ -1,12 +1,10 @@\n+use clippy_utils::diagnostics::span_lint_and_then;\n+use clippy_utils::source::{indent_of, reindent_multiline, snippet_opt};\n+use if_chain::if_chain;\n use rustc_errors::Applicability;\n use rustc_hir::{self as hir, Block, Expr, ExprKind, MatchSource, Node, StmtKind};\n use rustc_lint::LateContext;\n \n-use if_chain::if_chain;\n-\n-use crate::utils::diagnostics::span_lint_and_then;\n-use crate::utils::source::{indent_of, reindent_multiline, snippet_opt};\n-\n use super::{utils, UNIT_ARG};\n \n pub(super) fn check(cx: &LateContext<'_>, expr: &Expr<'_>) {"}, {"sha": "b3077dec5d89701be91d4450927f53df8dc75b79", "filename": "clippy_lints/src/unit_types/unit_cmp.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Funit_types%2Funit_cmp.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Funit_types%2Funit_cmp.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Funit_types%2Funit_cmp.rs?ref=6595d5571b4c498ca18ffc1fdca17b3815271df0", "patch": "@@ -1,9 +1,8 @@\n+use clippy_utils::diagnostics::span_lint;\n use rustc_hir::{BinOpKind, Expr, ExprKind};\n use rustc_lint::LateContext;\n use rustc_span::hygiene::{ExpnKind, MacroKind};\n \n-use crate::utils::diagnostics::span_lint;\n-\n use super::UNIT_CMP;\n \n pub(super) fn check(cx: &LateContext<'_>, expr: &Expr<'_>) {"}, {"sha": "d5bc3de669846325cabecd1163b8ac5073c8d2b8", "filename": "clippy_lints/src/unnamed_address.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Funnamed_address.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Funnamed_address.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Funnamed_address.rs?ref=6595d5571b4c498ca18ffc1fdca17b3815271df0", "patch": "@@ -1,5 +1,5 @@\n-use crate::utils::{match_def_path, paths};\n use clippy_utils::diagnostics::{span_lint, span_lint_and_help};\n+use clippy_utils::{match_def_path, paths};\n use if_chain::if_chain;\n use rustc_hir::{BinOpKind, Expr, ExprKind};\n use rustc_lint::{LateContext, LateLintPass};"}, {"sha": "e23bab5eba03fc2f50f16f23e2a9935176875aaf", "filename": "clippy_lints/src/unnecessary_sort_by.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Funnecessary_sort_by.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Funnecessary_sort_by.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Funnecessary_sort_by.rs?ref=6595d5571b4c498ca18ffc1fdca17b3815271df0", "patch": "@@ -1,5 +1,5 @@\n-use crate::utils::sugg::Sugg;\n use clippy_utils::diagnostics::span_lint_and_sugg;\n+use clippy_utils::sugg::Sugg;\n use clippy_utils::ty::is_type_diagnostic_item;\n use if_chain::if_chain;\n use rustc_errors::Applicability;"}, {"sha": "9e227164695ca3f9d93b03c911753fe87e000080", "filename": "clippy_lints/src/unnecessary_wraps.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Funnecessary_wraps.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Funnecessary_wraps.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Funnecessary_wraps.rs?ref=6595d5571b4c498ca18ffc1fdca17b3815271df0", "patch": "@@ -1,6 +1,6 @@\n-use crate::utils::{contains_return, in_macro, match_qpath, paths, return_ty, visitors::find_all_ret_expressions};\n use clippy_utils::diagnostics::span_lint_and_then;\n use clippy_utils::source::snippet;\n+use clippy_utils::{contains_return, in_macro, match_qpath, paths, return_ty, visitors::find_all_ret_expressions};\n use if_chain::if_chain;\n use rustc_errors::Applicability;\n use rustc_hir::intravisit::FnKind;"}, {"sha": "512d505dfb52fb09faead38ca9d37aa1933b7458", "filename": "clippy_lints/src/unnested_or_patterns.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Funnested_or_patterns.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Funnested_or_patterns.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Funnested_or_patterns.rs?ref=6595d5571b4c498ca18ffc1fdca17b3815271df0", "patch": "@@ -1,8 +1,8 @@\n #![allow(clippy::wildcard_imports, clippy::enum_glob_use)]\n \n-use crate::utils::ast_utils::{eq_field_pat, eq_id, eq_pat, eq_path};\n-use crate::utils::over;\n+use clippy_utils::ast_utils::{eq_field_pat, eq_id, eq_pat, eq_path};\n use clippy_utils::diagnostics::span_lint_and_then;\n+use clippy_utils::over;\n use rustc_ast::mut_visit::*;\n use rustc_ast::ptr::P;\n use rustc_ast::{self as ast, Pat, PatKind, PatKind::*, DUMMY_NODE_ID};"}, {"sha": "9990052e114b1f1e08426c0a88a98c0abd1801f4", "filename": "clippy_lints/src/unused_io_amount.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Funused_io_amount.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Funused_io_amount.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Funused_io_amount.rs?ref=6595d5571b4c498ca18ffc1fdca17b3815271df0", "patch": "@@ -1,5 +1,5 @@\n-use crate::utils::{is_try, match_trait_method, paths};\n use clippy_utils::diagnostics::span_lint;\n+use clippy_utils::{is_try, match_trait_method, paths};\n use rustc_hir as hir;\n use rustc_lint::{LateContext, LateLintPass};\n use rustc_session::{declare_lint_pass, declare_tool_lint};"}, {"sha": "aef4ce7591596f1b01dc6c6d977c83b95d1f71c6", "filename": "clippy_lints/src/unused_self.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Funused_self.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Funused_self.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Funused_self.rs?ref=6595d5571b4c498ca18ffc1fdca17b3815271df0", "patch": "@@ -1,11 +1,10 @@\n use clippy_utils::diagnostics::span_lint_and_help;\n+use clippy_utils::visitors::LocalUsedVisitor;\n use if_chain::if_chain;\n use rustc_hir::{Impl, ImplItem, ImplItemKind, ItemKind};\n use rustc_lint::{LateContext, LateLintPass};\n use rustc_session::{declare_lint_pass, declare_tool_lint};\n \n-use crate::utils::visitors::LocalUsedVisitor;\n-\n declare_clippy_lint! {\n     /// **What it does:** Checks methods that contain a `self` argument but don't use it\n     ///"}, {"sha": "329ea49024bc018a0176b6f08d5a4407ca8e6122", "filename": "clippy_lints/src/unused_unit.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Funused_unit.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Funused_unit.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Funused_unit.rs?ref=6595d5571b4c498ca18ffc1fdca17b3815271df0", "patch": "@@ -1,3 +1,4 @@\n+use clippy_utils::diagnostics::span_lint_and_sugg;\n use clippy_utils::source::position_before_rarrow;\n use if_chain::if_chain;\n use rustc_ast::ast;\n@@ -8,8 +9,6 @@ use rustc_session::{declare_lint_pass, declare_tool_lint};\n use rustc_span::source_map::Span;\n use rustc_span::BytePos;\n \n-use clippy_utils::diagnostics::span_lint_and_sugg;\n-\n declare_clippy_lint! {\n     /// **What it does:** Checks for unit (`()`) expressions that can be removed.\n     ///"}, {"sha": "fb29acca18a98333cffa89589ace01a2d26d5fee", "filename": "clippy_lints/src/unwrap.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Funwrap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Funwrap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Funwrap.rs?ref=6595d5571b4c498ca18ffc1fdca17b3815271df0", "patch": "@@ -1,6 +1,6 @@\n-use crate::utils::{differing_macro_contexts, usage::is_potentially_mutated};\n use clippy_utils::diagnostics::span_lint_and_then;\n use clippy_utils::ty::is_type_diagnostic_item;\n+use clippy_utils::{differing_macro_contexts, usage::is_potentially_mutated};\n use if_chain::if_chain;\n use rustc_hir::intravisit::{walk_expr, walk_fn, FnKind, NestedVisitorMap, Visitor};\n use rustc_hir::{BinOpKind, Body, Expr, ExprKind, FnDecl, HirId, Path, QPath, UnOp};"}, {"sha": "0d745813beb782cce0cbf26c1ef3c2506a6317a7", "filename": "clippy_lints/src/unwrap_in_result.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Funwrap_in_result.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Funwrap_in_result.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Funwrap_in_result.rs?ref=6595d5571b4c498ca18ffc1fdca17b3815271df0", "patch": "@@ -1,6 +1,6 @@\n-use crate::utils::{method_chain_args, return_ty};\n use clippy_utils::diagnostics::span_lint_and_then;\n use clippy_utils::ty::is_type_diagnostic_item;\n+use clippy_utils::{method_chain_args, return_ty};\n use if_chain::if_chain;\n use rustc_hir as hir;\n use rustc_hir::intravisit::{self, NestedVisitorMap, Visitor};"}, {"sha": "116cb8b1e1c70e5232a2368f68d3c3fa9d22dd3c", "filename": "clippy_lints/src/use_self.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Fuse_self.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Fuse_self.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fuse_self.rs?ref=6595d5571b4c498ca18ffc1fdca17b3815271df0", "patch": "@@ -1,6 +1,6 @@\n-use crate::utils::{in_macro, meets_msrv};\n use clippy_utils::diagnostics::span_lint_and_sugg;\n use clippy_utils::source::snippet_opt;\n+use clippy_utils::{in_macro, meets_msrv};\n use if_chain::if_chain;\n use rustc_errors::Applicability;\n use rustc_hir as hir;"}, {"sha": "3e1b69e676b955e9389cfbe13eff30c952d52142", "filename": "clippy_lints/src/useless_conversion.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Fuseless_conversion.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Fuseless_conversion.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fuseless_conversion.rs?ref=6595d5571b4c498ca18ffc1fdca17b3815271df0", "patch": "@@ -1,8 +1,8 @@\n-use crate::utils::sugg::Sugg;\n-use crate::utils::{get_parent_expr, match_def_path, match_trait_method, paths};\n use clippy_utils::diagnostics::{span_lint_and_help, span_lint_and_sugg};\n use clippy_utils::source::{snippet, snippet_with_macro_callsite};\n+use clippy_utils::sugg::Sugg;\n use clippy_utils::ty::is_type_diagnostic_item;\n+use clippy_utils::{get_parent_expr, match_def_path, match_trait_method, paths};\n use if_chain::if_chain;\n use rustc_errors::Applicability;\n use rustc_hir::{Expr, ExprKind, HirId, MatchSource};"}, {"sha": "2de5b1a628e074e2b6559d2082c6462adead1f55", "filename": "clippy_lints/src/utils/author.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Futils%2Fauthor.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Futils%2Fauthor.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Futils%2Fauthor.rs?ref=6595d5571b4c498ca18ffc1fdca17b3815271df0", "patch": "@@ -1,7 +1,7 @@\n //! A group of attributes that can be attached to Rust code in order\n //! to generate a clippy lint detecting said code automatically.\n \n-use crate::utils::get_attr;\n+use clippy_utils::get_attr;\n use rustc_ast::ast::{LitFloatType, LitKind};\n use rustc_ast::walk_list;\n use rustc_data_structures::fx::FxHashMap;"}, {"sha": "191ff6e4f16b1924bcd21d9895528dc83c6cff30", "filename": "clippy_lints/src/utils/inspector.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Futils%2Finspector.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Futils%2Finspector.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Futils%2Finspector.rs?ref=6595d5571b4c498ca18ffc1fdca17b3815271df0", "patch": "@@ -1,6 +1,6 @@\n //! checks for attributes\n \n-use crate::utils::get_attr;\n+use clippy_utils::get_attr;\n use rustc_ast::ast::{Attribute, InlineAsmTemplatePiece};\n use rustc_hir as hir;\n use rustc_lint::{LateContext, LateLintPass, LintContext};"}, {"sha": "c496ff1fb24251039f39d3eca21c7b82204f881b", "filename": "clippy_lints/src/utils/internal_lints.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Futils%2Finternal_lints.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Futils%2Finternal_lints.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Futils%2Finternal_lints.rs?ref=6595d5571b4c498ca18ffc1fdca17b3815271df0", "patch": "@@ -1,9 +1,8 @@\n use crate::consts::{constant_simple, Constant};\n-use crate::utils::{is_expn_of, match_def_path, match_qpath, method_calls, path_to_res, paths, run_lints, SpanlessEq};\n-\n use clippy_utils::diagnostics::{span_lint, span_lint_and_help, span_lint_and_sugg};\n use clippy_utils::source::snippet;\n use clippy_utils::ty::match_type;\n+use clippy_utils::{is_expn_of, match_def_path, match_qpath, method_calls, path_to_res, paths, run_lints, SpanlessEq};\n use if_chain::if_chain;\n use rustc_ast::ast::{Crate as AstCrate, ItemKind, LitKind, ModKind, NodeId};\n use rustc_ast::visit::FnKind;"}, {"sha": "d8b31344e6d8bd68b91284c3a47dabfad3837b95", "filename": "clippy_lints/src/utils/mod.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Futils%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Futils%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Futils%2Fmod.rs?ref=6595d5571b4c498ca18ffc1fdca17b3815271df0", "patch": "@@ -3,5 +3,3 @@ pub mod conf;\n pub mod inspector;\n #[cfg(feature = \"internal-lints\")]\n pub mod internal_lints;\n-\n-pub use clippy_utils::*;"}, {"sha": "1af9583887fbdfc1e71b1715b347768a8b4a8bbb", "filename": "clippy_lints/src/vec.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Fvec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Fvec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fvec.rs?ref=6595d5571b4c498ca18ffc1fdca17b3815271df0", "patch": "@@ -1,7 +1,7 @@\n use crate::consts::{constant, Constant};\n use crate::rustc_target::abi::LayoutOf;\n-use crate::utils::higher;\n use clippy_utils::diagnostics::span_lint_and_sugg;\n+use clippy_utils::higher;\n use clippy_utils::source::snippet_with_applicability;\n use clippy_utils::ty::is_copy;\n use if_chain::if_chain;"}, {"sha": "8b696ed1c845d813aeed7468785e3b7c06697bb0", "filename": "clippy_lints/src/vec_init_then_push.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Fvec_init_then_push.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Fvec_init_then_push.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fvec_init_then_push.rs?ref=6595d5571b4c498ca18ffc1fdca17b3815271df0", "patch": "@@ -1,7 +1,7 @@\n-use crate::utils::{match_def_path, path_to_local, path_to_local_id, paths};\n use clippy_utils::diagnostics::span_lint_and_sugg;\n use clippy_utils::source::snippet;\n use clippy_utils::ty::is_type_diagnostic_item;\n+use clippy_utils::{match_def_path, path_to_local, path_to_local_id, paths};\n use if_chain::if_chain;\n use rustc_ast::ast::LitKind;\n use rustc_errors::Applicability;"}, {"sha": "e035d3c5cadec9c5ef94c24bc209407245d6dc92", "filename": "clippy_lints/src/vec_resize_to_zero.rs", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Fvec_resize_to_zero.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Fvec_resize_to_zero.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fvec_resize_to_zero.rs?ref=6595d5571b4c498ca18ffc1fdca17b3815271df0", "patch": "@@ -1,15 +1,14 @@\n use clippy_utils::diagnostics::span_lint_and_then;\n+use clippy_utils::{match_def_path, paths};\n use if_chain::if_chain;\n+use rustc_ast::LitKind;\n use rustc_errors::Applicability;\n+use rustc_hir as hir;\n use rustc_hir::{Expr, ExprKind};\n use rustc_lint::{LateContext, LateLintPass};\n use rustc_session::{declare_lint_pass, declare_tool_lint};\n use rustc_span::source_map::Spanned;\n \n-use crate::utils::{match_def_path, paths};\n-use rustc_ast::LitKind;\n-use rustc_hir as hir;\n-\n declare_clippy_lint! {\n     /// **What it does:** Finds occurrences of `Vec::resize(0, an_int)`\n     ///"}, {"sha": "ec209b309513e0921aae95c6760e626f20e66b03", "filename": "clippy_lints/src/verbose_file_reads.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Fverbose_file_reads.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Fverbose_file_reads.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fverbose_file_reads.rs?ref=6595d5571b4c498ca18ffc1fdca17b3815271df0", "patch": "@@ -1,5 +1,5 @@\n-use crate::utils::paths;\n use clippy_utils::diagnostics::span_lint_and_help;\n+use clippy_utils::paths;\n use clippy_utils::ty::match_type;\n use if_chain::if_chain;\n use rustc_hir::{Expr, ExprKind, QPath};"}, {"sha": "60c3489a449b6796714a416120985ec2e8a7f33d", "filename": "clippy_lints/src/wildcard_dependencies.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Fwildcard_dependencies.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Fwildcard_dependencies.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fwildcard_dependencies.rs?ref=6595d5571b4c498ca18ffc1fdca17b3815271df0", "patch": "@@ -1,5 +1,5 @@\n-use crate::utils::run_lints;\n use clippy_utils::diagnostics::span_lint;\n+use clippy_utils::run_lints;\n use rustc_hir::{hir_id::CRATE_HIR_ID, Crate};\n use rustc_lint::{LateContext, LateLintPass};\n use rustc_session::{declare_lint_pass, declare_tool_lint};"}, {"sha": "51c1117d20641f92c2161cc1f87b7b7a6a8934fb", "filename": "clippy_lints/src/wildcard_imports.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Fwildcard_imports.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Fwildcard_imports.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fwildcard_imports.rs?ref=6595d5571b4c498ca18ffc1fdca17b3815271df0", "patch": "@@ -1,5 +1,5 @@\n-use crate::utils::in_macro;\n use clippy_utils::diagnostics::span_lint_and_sugg;\n+use clippy_utils::in_macro;\n use clippy_utils::source::{snippet, snippet_with_applicability};\n use if_chain::if_chain;\n use rustc_errors::Applicability;"}, {"sha": "2abd033e2a07ed6c55e24b5f1250100c545fc36d", "filename": "clippy_lints/src/zero_sized_map_values.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Fzero_sized_map_values.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6595d5571b4c498ca18ffc1fdca17b3815271df0/clippy_lints%2Fsrc%2Fzero_sized_map_values.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fzero_sized_map_values.rs?ref=6595d5571b4c498ca18ffc1fdca17b3815271df0", "patch": "@@ -1,4 +1,5 @@\n use clippy_utils::diagnostics::span_lint_and_help;\n+use clippy_utils::paths;\n use clippy_utils::ty::{is_normalizable, is_type_diagnostic_item, match_type};\n use if_chain::if_chain;\n use rustc_hir::{self as hir, HirId, ItemKind, Node};\n@@ -9,8 +10,6 @@ use rustc_span::sym;\n use rustc_target::abi::LayoutOf as _;\n use rustc_typeck::hir_ty_to_ty;\n \n-use crate::utils::paths;\n-\n declare_clippy_lint! {\n     /// **What it does:** Checks for maps with zero-sized value types anywhere in the code.\n     ///"}]}