{"sha": "d34ebb46602145e45895392da94cc593793cd9c0", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQzNGViYjQ2NjAyMTQ1ZTQ1ODk1MzkyZGE5NGNjNTkzNzkzY2Q5YzA=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-04-13T22:23:30Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-04-13T22:23:30Z"}, "message": "Rollup merge of #59747 - gruberb:copy-book-toml-unstable-book, r=ehuss\n\nCopy book.toml unstable book generator\n\nSolves https://github.com/rust-lang/rust/issues/59554 and adds a book title to the unstable book.\n\nI assume that [copy_recursive](https://github.com/rust-lang/rust/blob/acd8dd6a50d505057a7d7ad8d0d7a4c2bd274200/src/tools/unstable-book-gen/src/main.rs#L105) will take files regardless of their type (`.md` or `.toml`).\n\nAlthough I had a hard time time testing it. A second pair of eyes is definitely needed.", "tree": {"sha": "2252866ec9dde86aadc3ba45e8da9786190ec47f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2252866ec9dde86aadc3ba45e8da9786190ec47f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d34ebb46602145e45895392da94cc593793cd9c0", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJcsmFjCRBK7hj4Ov3rIwAAdHIIADnVKHBSopI1eCi39W7bSPay\nX9Ws1iWPfo0UknhhZJutEyHEpakzYKGkY4txHfS4lbnqRCUyVkIITH5c+m/zDuHy\ncCaLYexEw0CHGSnxDtlHsMFiy0ytbn/K/gP0SOrqO9AzdqQQ8YDutWcTrwNkU6aW\nhrKjxnl3jkyhyISW709eIaLNG9/Um4shkdG2iOOv8C1dmHWW71oxRaVI9XX4BOOs\nEsa4TNNjHUfaflqzGGjTy/Vws3mrFPHYdwA4Or3patKDDq0lPkPn62sWtt0/aWuQ\n2b5ZpiwJuce6wWF2fi8X/eZIDKtUJLYhh8dvuECHb+CzupBbL2npmkgCJ+HvhZo=\n=IGiv\n-----END PGP SIGNATURE-----\n", "payload": "tree 2252866ec9dde86aadc3ba45e8da9786190ec47f\nparent 056c02ec2fcd9f50f7ea797e577792944a7c629e\nparent 34c1572a42e7e148dc9bf21126b26f49fcaf1a56\nauthor Mazdak Farrokhzad <twingoow@gmail.com> 1555194210 +0200\ncommitter GitHub <noreply@github.com> 1555194210 +0200\n\nRollup merge of #59747 - gruberb:copy-book-toml-unstable-book, r=ehuss\n\nCopy book.toml unstable book generator\n\nSolves https://github.com/rust-lang/rust/issues/59554 and adds a book title to the unstable book.\n\nI assume that [copy_recursive](https://github.com/rust-lang/rust/blob/acd8dd6a50d505057a7d7ad8d0d7a4c2bd274200/src/tools/unstable-book-gen/src/main.rs#L105) will take files regardless of their type (`.md` or `.toml`).\n\nAlthough I had a hard time time testing it. A second pair of eyes is definitely needed.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d34ebb46602145e45895392da94cc593793cd9c0", "html_url": "https://github.com/rust-lang/rust/commit/d34ebb46602145e45895392da94cc593793cd9c0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d34ebb46602145e45895392da94cc593793cd9c0/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "056c02ec2fcd9f50f7ea797e577792944a7c629e", "url": "https://api.github.com/repos/rust-lang/rust/commits/056c02ec2fcd9f50f7ea797e577792944a7c629e", "html_url": "https://github.com/rust-lang/rust/commit/056c02ec2fcd9f50f7ea797e577792944a7c629e"}, {"sha": "34c1572a42e7e148dc9bf21126b26f49fcaf1a56", "url": "https://api.github.com/repos/rust-lang/rust/commits/34c1572a42e7e148dc9bf21126b26f49fcaf1a56", "html_url": "https://github.com/rust-lang/rust/commit/34c1572a42e7e148dc9bf21126b26f49fcaf1a56"}], "stats": {"total": 23, "additions": 12, "deletions": 11}, "files": [{"sha": "5b2e19bd7aa78eeaf345ad29921cf276d6e16aba", "filename": "src/doc/unstable-book/book.toml", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d34ebb46602145e45895392da94cc593793cd9c0/src%2Fdoc%2Funstable-book%2Fbook.toml", "raw_url": "https://github.com/rust-lang/rust/raw/d34ebb46602145e45895392da94cc593793cd9c0/src%2Fdoc%2Funstable-book%2Fbook.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Funstable-book%2Fbook.toml?ref=d34ebb46602145e45895392da94cc593793cd9c0", "patch": "@@ -1,2 +1,3 @@\n [book]\n title = \"The Rust Unstable Book\"\n+author = \"The Rust Community\""}, {"sha": "f7e40ce4bae36e2aa84884116247fbce891bc772", "filename": "src/tools/tidy/src/unstable_book.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/d34ebb46602145e45895392da94cc593793cd9c0/src%2Ftools%2Ftidy%2Fsrc%2Funstable_book.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d34ebb46602145e45895392da94cc593793cd9c0/src%2Ftools%2Ftidy%2Fsrc%2Funstable_book.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Ftidy%2Fsrc%2Funstable_book.rs?ref=d34ebb46602145e45895392da94cc593793cd9c0", "patch": "@@ -3,13 +3,13 @@ use std::fs;\n use std::path;\n use crate::features::{collect_lang_features, collect_lib_features, Features, Status};\n \n-pub const PATH_STR: &str = \"doc/unstable-book/src\";\n+pub const PATH_STR: &str = \"doc/unstable-book\";\n \n-pub const COMPILER_FLAGS_DIR: &str = \"compiler-flags\";\n+pub const COMPILER_FLAGS_DIR: &str = \"src/compiler-flags\";\n \n-pub const LANG_FEATURES_DIR: &str = \"language-features\";\n+pub const LANG_FEATURES_DIR: &str = \"src/language-features\";\n \n-pub const LIB_FEATURES_DIR: &str = \"library-features\";\n+pub const LIB_FEATURES_DIR: &str = \"src/library-features\";\n \n /// Builds the path to the Unstable Book source directory from the Rust 'src' directory.\n pub fn unstable_book_path(base_src_path: &path::Path) -> path::PathBuf {"}, {"sha": "e92d174a4e1d45a362be130cc3a05a387b2b6882", "filename": "src/tools/unstable-book-gen/src/main.rs", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/d34ebb46602145e45895392da94cc593793cd9c0/src%2Ftools%2Funstable-book-gen%2Fsrc%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d34ebb46602145e45895392da94cc593793cd9c0/src%2Ftools%2Funstable-book-gen%2Fsrc%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Funstable-book-gen%2Fsrc%2Fmain.rs?ref=d34ebb46602145e45895392da94cc593793cd9c0", "patch": "@@ -52,7 +52,7 @@ fn set_to_summary_str(set: &BTreeSet<String>, dir: &str\n \n fn generate_summary(path: &Path, lang_features: &Features, lib_features: &Features) {\n     let compiler_flags = collect_unstable_book_section_file_names(\n-        &path.join(\"compiler-flags\"));\n+        &path.join(\"src/compiler-flags\"));\n \n     let compiler_flags_str = set_to_summary_str(&compiler_flags,\n                                                 \"compiler-flags\");\n@@ -61,11 +61,11 @@ fn generate_summary(path: &Path, lang_features: &Features, lib_features: &Featur\n     let unstable_lib_features = collect_unstable_feature_names(&lib_features);\n \n     let lang_features_str = set_to_summary_str(&unstable_lang_features,\n-                                               LANG_FEATURES_DIR);\n+                                               \"language-features\");\n     let lib_features_str = set_to_summary_str(&unstable_lib_features,\n-                                              LIB_FEATURES_DIR);\n+                                              \"library-features\");\n \n-    let mut file = t!(File::create(&path.join(\"SUMMARY.md\")));\n+    let mut file = t!(File::create(&path.join(\"src/SUMMARY.md\")));\n     t!(file.write_fmt(format_args!(include_str!(\"SUMMARY.md\"),\n                                    compiler_flags = compiler_flags_str,\n                                    language_features = lang_features_str,\n@@ -102,8 +102,8 @@ fn generate_unstable_book_files(src :&Path, out: &Path, features :&Features) {\n     }\n }\n \n-fn copy_recursive(path: &Path, to: &Path) {\n-    for entry in t!(fs::read_dir(path)) {\n+fn copy_recursive(from: &Path, to: &Path) {\n+    for entry in t!(fs::read_dir(from)) {\n         let e = t!(entry);\n         let t = t!(e.metadata());\n         let dest = &to.join(e.file_name());\n@@ -120,7 +120,7 @@ fn main() {\n     let src_path_str = env::args_os().skip(1).next().expect(\"source path required\");\n     let dest_path_str = env::args_os().skip(2).next().expect(\"destination path required\");\n     let src_path = Path::new(&src_path_str);\n-    let dest_path = Path::new(&dest_path_str).join(\"src\");\n+    let dest_path = Path::new(&dest_path_str);\n \n     let lang_features = collect_lang_features(src_path, &mut false);\n     let lib_features = collect_lib_features(src_path).into_iter().filter(|&(ref name, _)| {"}]}