{"sha": "d618b1f2ce25db8817d1649d7ec7720594789067", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQ2MThiMWYyY2UyNWRiODgxN2QxNjQ5ZDdlYzc3MjA1OTQ3ODkwNjc=", "commit": {"author": {"name": "Florian Diebold", "email": "flodiebold@gmail.com", "date": "2019-01-07T00:10:29Z"}, "committer": {"name": "Florian Diebold", "email": "flodiebold@gmail.com", "date": "2019-01-07T00:10:29Z"}, "message": "if let -> match", "tree": {"sha": "d3d006919d15d6a26ff1a8091cf1e5341842c1aa", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d3d006919d15d6a26ff1a8091cf1e5341842c1aa"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d618b1f2ce25db8817d1649d7ec7720594789067", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d618b1f2ce25db8817d1649d7ec7720594789067", "html_url": "https://github.com/rust-lang/rust/commit/d618b1f2ce25db8817d1649d7ec7720594789067", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d618b1f2ce25db8817d1649d7ec7720594789067/comments", "author": {"login": "flodiebold", "id": 906069, "node_id": "MDQ6VXNlcjkwNjA2OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/906069?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flodiebold", "html_url": "https://github.com/flodiebold", "followers_url": "https://api.github.com/users/flodiebold/followers", "following_url": "https://api.github.com/users/flodiebold/following{/other_user}", "gists_url": "https://api.github.com/users/flodiebold/gists{/gist_id}", "starred_url": "https://api.github.com/users/flodiebold/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flodiebold/subscriptions", "organizations_url": "https://api.github.com/users/flodiebold/orgs", "repos_url": "https://api.github.com/users/flodiebold/repos", "events_url": "https://api.github.com/users/flodiebold/events{/privacy}", "received_events_url": "https://api.github.com/users/flodiebold/received_events", "type": "User", "site_admin": false}, "committer": {"login": "flodiebold", "id": 906069, "node_id": "MDQ6VXNlcjkwNjA2OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/906069?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flodiebold", "html_url": "https://github.com/flodiebold", "followers_url": "https://api.github.com/users/flodiebold/followers", "following_url": "https://api.github.com/users/flodiebold/following{/other_user}", "gists_url": "https://api.github.com/users/flodiebold/gists{/gist_id}", "starred_url": "https://api.github.com/users/flodiebold/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flodiebold/subscriptions", "organizations_url": "https://api.github.com/users/flodiebold/orgs", "repos_url": "https://api.github.com/users/flodiebold/repos", "events_url": "https://api.github.com/users/flodiebold/events{/privacy}", "received_events_url": "https://api.github.com/users/flodiebold/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2dfb5e6ac03e9cc6973dffe9ad69e858510604ee", "url": "https://api.github.com/repos/rust-lang/rust/commits/2dfb5e6ac03e9cc6973dffe9ad69e858510604ee", "html_url": "https://github.com/rust-lang/rust/commit/2dfb5e6ac03e9cc6973dffe9ad69e858510604ee"}], "stats": {"total": 14, "additions": 6, "deletions": 8}, "files": [{"sha": "83aedaa005a5e58ad4d7ec8810898c1208faf1ea", "filename": "crates/ra_hir/src/ty/tests.rs", "status": "modified", "additions": 6, "deletions": 8, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/d618b1f2ce25db8817d1649d7ec7720594789067/crates%2Fra_hir%2Fsrc%2Fty%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d618b1f2ce25db8817d1649d7ec7720594789067/crates%2Fra_hir%2Fsrc%2Fty%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Fty%2Ftests.rs?ref=d618b1f2ce25db8817d1649d7ec7720594789067", "patch": "@@ -196,18 +196,16 @@ fn infer(content: &str) -> String {\n         let body_syntax_mapping = func.body_syntax_mapping(&db).unwrap();\n         let mut types = Vec::new();\n         for (pat, ty) in inference_result.type_of_pat.iter() {\n-            let syntax_ptr = if let Some(sp) = body_syntax_mapping.pat_syntax(pat) {\n-                sp\n-            } else {\n-                continue;\n+            let syntax_ptr = match body_syntax_mapping.pat_syntax(pat) {\n+                Some(sp) => sp,\n+                None => continue,\n             };\n             types.push((syntax_ptr, ty));\n         }\n         for (expr, ty) in inference_result.type_of_expr.iter() {\n-            let syntax_ptr = if let Some(sp) = body_syntax_mapping.expr_syntax(expr) {\n-                sp\n-            } else {\n-                continue;\n+            let syntax_ptr = match body_syntax_mapping.expr_syntax(expr) {\n+                Some(sp) => sp,\n+                None => continue,\n             };\n             types.push((syntax_ptr, ty));\n         }"}]}