{"sha": "5637ce4250247eef4c2ae1892cead69b6d6a172b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjU2MzdjZTQyNTAyNDdlZWY0YzJhZTE4OTJjZWFkNjliNmQ2YTE3MmI=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2021-05-09T14:17:28Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2021-05-09T14:46:41Z"}, "message": "fix: join lines doesn't add space before closing quote", "tree": {"sha": "50ee0b0c50879c9148c374311a5a9e3ea5d7ef87", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/50ee0b0c50879c9148c374311a5a9e3ea5d7ef87"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5637ce4250247eef4c2ae1892cead69b6d6a172b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5637ce4250247eef4c2ae1892cead69b6d6a172b", "html_url": "https://github.com/rust-lang/rust/commit/5637ce4250247eef4c2ae1892cead69b6d6a172b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5637ce4250247eef4c2ae1892cead69b6d6a172b/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3f01edebecd5a73fc2abab75a8b29b9d64fd9fa0", "url": "https://api.github.com/repos/rust-lang/rust/commits/3f01edebecd5a73fc2abab75a8b29b9d64fd9fa0", "html_url": "https://github.com/rust-lang/rust/commit/3f01edebecd5a73fc2abab75a8b29b9d64fd9fa0"}], "stats": {"total": 30, "additions": 30, "deletions": 0}, "files": [{"sha": "3e30e71ce91edb4f1978a55481d604c739822f9d", "filename": "crates/ide/src/join_lines.rs", "status": "modified", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/5637ce4250247eef4c2ae1892cead69b6d6a172b/crates%2Fide%2Fsrc%2Fjoin_lines.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5637ce4250247eef4c2ae1892cead69b6d6a172b/crates%2Fide%2Fsrc%2Fjoin_lines.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fjoin_lines.rs?ref=5637ce4250247eef4c2ae1892cead69b6d6a172b", "patch": "@@ -1,3 +1,5 @@\n+use std::convert::TryFrom;\n+\n use ide_assists::utils::extract_trivial_expression;\n use itertools::Itertools;\n use syntax::{\n@@ -85,6 +87,21 @@ fn remove_newline(edit: &mut TextEditBuilder, token: &SyntaxToken, offset: TextS\n             suff.bytes().take_while(|&b| b == b' ').count()\n         };\n \n+        let mut no_space = false;\n+        if let Some(string) = ast::String::cast(token.clone()) {\n+            if let Some(range) = string.open_quote_text_range() {\n+                cov_mark::hit!(join_string_literal_open_quote);\n+                no_space |= range.end() == offset;\n+            }\n+            if let Some(range) = string.close_quote_text_range() {\n+                cov_mark::hit!(join_string_literal_close_quote);\n+                no_space |= range.start()\n+                    == offset\n+                        + TextSize::of('\\n')\n+                        + TextSize::try_from(n_spaces_after_line_break).unwrap();\n+            }\n+        }\n+\n         let range = TextRange::at(offset, ((n_spaces_after_line_break + 1) as u32).into());\n         let replace_with = if no_space { \"\" } else { \" \" };\n         edit.replace(range, replace_with.to_string());\n@@ -833,6 +850,19 @@ fn main() {\n fn main() {\n     $0\"hello\";\n }\n+\"#,\n+            );\n+            check_join_lines(\n+                r#\"\n+fn main() {\n+    $0r\"hello\n+    \";\n+}\n+\"#,\n+                r#\"\n+fn main() {\n+    $0r\"hello\";\n+}\n \"#,\n             );\n         }"}]}