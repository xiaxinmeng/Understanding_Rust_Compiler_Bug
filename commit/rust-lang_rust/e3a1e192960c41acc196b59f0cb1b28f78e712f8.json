{"sha": "e3a1e192960c41acc196b59f0cb1b28f78e712f8", "node_id": "C_kwDOAAsO6NoAKGUzYTFlMTkyOTYwYzQxYWNjMTk2YjU5ZjBjYjFiMjhmNzhlNzEyZjg", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2022-02-18T22:23:05Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-02-18T22:23:05Z"}, "message": "Rollup merge of #93497 - willcrichton:rustdoc-scrape-test, r=GuillaumeGomez\n\nPass `--test` flag through rustdoc to rustc so `#[test]` functions can be scraped\n\nAs a part of stabilizing the scrape examples extension in Cargo, I uncovered a bug where examples cannot be scraped from tests. See this test: https://github.com/rust-lang/cargo/pull/10343/files#diff-27aa4f012ebfebaaee61498d91d2370de460628405d136b05e77efe61e044679R2496\n\nThe issue is that when rustdoc is run on a test file, because `--test` is not passed as a rustc option, then functions annotated with `#[test]` are ignored by the compiler. So this PR changes rustdoc so when `--test` is passed in conjunction with a `--scrape-example-<suffix>` flag, then the `test` field of `rustc_interface::Config` is true.\n\nr? `@camelid`", "tree": {"sha": "86a2d2d437d5a4939771c463b0275b0c7f552a82", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/86a2d2d437d5a4939771c463b0275b0c7f552a82"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e3a1e192960c41acc196b59f0cb1b28f78e712f8", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJiEBxJCRBK7hj4Ov3rIwAAuwYIAEpOFMbx7pQo07rbiqnpVWzQ\nFhW/L4YbjmACEWC6IazZzICYd6VqUVcH3TGDztpNFZy6F4ABzli9/1TLLIJ6wwV2\nuhVKlUsYhChmWyhKLH4eGnorziYSX/IaF/VL0oR5nAHlVz6d2/b2xE/bGRh1bubF\ntx4WXqMjf94ESHYJ73me0neECeN64g+2ywdQpQ6RFlyDhPEyMas6MTRMj0NQ8bUt\nUNDBAB9KfdzZevFyopHjhYG5gExJ+yIg3wAga4fOJBiqzzWW5GvHZW6QPYpdn3Q5\nvXMVxWaDpclppcHG+nNq9ci17v7AsGO7auwcEnyHwXI2Zjva4PAAjhhQbUw5ynA=\n=efP7\n-----END PGP SIGNATURE-----\n", "payload": "tree 86a2d2d437d5a4939771c463b0275b0c7f552a82\nparent 5c08c391211ca4d67e1908fccad45d73c6c76124\nparent fbbcb089c52e6dce88600be36a1cc97884294d4f\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1645222985 +0100\ncommitter GitHub <noreply@github.com> 1645222985 +0100\n\nRollup merge of #93497 - willcrichton:rustdoc-scrape-test, r=GuillaumeGomez\n\nPass `--test` flag through rustdoc to rustc so `#[test]` functions can be scraped\n\nAs a part of stabilizing the scrape examples extension in Cargo, I uncovered a bug where examples cannot be scraped from tests. See this test: https://github.com/rust-lang/cargo/pull/10343/files#diff-27aa4f012ebfebaaee61498d91d2370de460628405d136b05e77efe61e044679R2496\n\nThe issue is that when rustdoc is run on a test file, because `--test` is not passed as a rustc option, then functions annotated with `#[test]` are ignored by the compiler. So this PR changes rustdoc so when `--test` is passed in conjunction with a `--scrape-example-<suffix>` flag, then the `test` field of `rustc_interface::Config` is true.\n\nr? `@camelid`\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e3a1e192960c41acc196b59f0cb1b28f78e712f8", "html_url": "https://github.com/rust-lang/rust/commit/e3a1e192960c41acc196b59f0cb1b28f78e712f8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e3a1e192960c41acc196b59f0cb1b28f78e712f8/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5c08c391211ca4d67e1908fccad45d73c6c76124", "url": "https://api.github.com/repos/rust-lang/rust/commits/5c08c391211ca4d67e1908fccad45d73c6c76124", "html_url": "https://github.com/rust-lang/rust/commit/5c08c391211ca4d67e1908fccad45d73c6c76124"}, {"sha": "fbbcb089c52e6dce88600be36a1cc97884294d4f", "url": "https://api.github.com/repos/rust-lang/rust/commits/fbbcb089c52e6dce88600be36a1cc97884294d4f", "html_url": "https://github.com/rust-lang/rust/commit/fbbcb089c52e6dce88600be36a1cc97884294d4f"}], "stats": {"total": 42, "additions": 37, "deletions": 5}, "files": [{"sha": "c7fd5ed6fcb2ed28d2bd217e35a94928c8326d7d", "filename": "src/doc/rustdoc/src/unstable-features.md", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/e3a1e192960c41acc196b59f0cb1b28f78e712f8/src%2Fdoc%2Frustdoc%2Fsrc%2Funstable-features.md", "raw_url": "https://github.com/rust-lang/rust/raw/e3a1e192960c41acc196b59f0cb1b28f78e712f8/src%2Fdoc%2Frustdoc%2Fsrc%2Funstable-features.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Frustdoc%2Fsrc%2Funstable-features.md?ref=e3a1e192960c41acc196b59f0cb1b28f78e712f8", "patch": "@@ -509,3 +509,6 @@ reverse-dependency like `examples/ex.rs` is given to rustdoc with the target\n crate being documented (`foobar`) and a path to output the calls\n (`output.calls`). Then, the generated calls file can be passed via\n `--with-examples` to the subsequent documentation of `foobar`.\n+\n+To scrape examples from test code, e.g. functions marked `#[test]`, then\n+add the `--scrape-tests` flag."}, {"sha": "ca5e7758119746bb1995812ad9f705ab2c5d11d8", "filename": "src/librustdoc/core.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/e3a1e192960c41acc196b59f0cb1b28f78e712f8/src%2Flibrustdoc%2Fcore.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e3a1e192960c41acc196b59f0cb1b28f78e712f8/src%2Flibrustdoc%2Fcore.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fcore.rs?ref=e3a1e192960c41acc196b59f0cb1b28f78e712f8", "patch": "@@ -200,6 +200,7 @@ crate fn create_config(\n         lint_opts,\n         describe_lints,\n         lint_cap,\n+        scrape_examples_options,\n         ..\n     }: RustdocOptions,\n ) -> rustc_interface::Config {\n@@ -227,6 +228,7 @@ crate fn create_config(\n \n     let crate_types =\n         if proc_macro_crate { vec![CrateType::ProcMacro] } else { vec![CrateType::Rlib] };\n+    let test = scrape_examples_options.map(|opts| opts.scrape_tests).unwrap_or(false);\n     // plays with error output here!\n     let sessopts = config::Options {\n         maybe_sysroot,\n@@ -244,6 +246,7 @@ crate fn create_config(\n         edition,\n         describe_lints,\n         crate_name,\n+        test,\n         ..Options::default()\n     };\n "}, {"sha": "7eff725989cc9872542ecbe4ab7b077143ff8388", "filename": "src/librustdoc/lib.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/e3a1e192960c41acc196b59f0cb1b28f78e712f8/src%2Flibrustdoc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e3a1e192960c41acc196b59f0cb1b28f78e712f8/src%2Flibrustdoc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Flib.rs?ref=e3a1e192960c41acc196b59f0cb1b28f78e712f8", "patch": "@@ -596,6 +596,9 @@ fn opts() -> Vec<RustcOptGroup> {\n                 \"collect function call information for functions from the target crate\",\n             )\n         }),\n+        unstable(\"scrape-tests\", |o| {\n+            o.optflag(\"\", \"scrape-tests\", \"Include test code when scraping examples\")\n+        }),\n         unstable(\"with-examples\", |o| {\n             o.optmulti(\n                 \"\","}, {"sha": "7cf0ea9e84e4e188b82b0120160abab78d3e4777", "filename": "src/librustdoc/scrape_examples.rs", "status": "modified", "additions": 11, "deletions": 4, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/e3a1e192960c41acc196b59f0cb1b28f78e712f8/src%2Flibrustdoc%2Fscrape_examples.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e3a1e192960c41acc196b59f0cb1b28f78e712f8/src%2Flibrustdoc%2Fscrape_examples.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fscrape_examples.rs?ref=e3a1e192960c41acc196b59f0cb1b28f78e712f8", "patch": "@@ -34,6 +34,7 @@ use std::path::PathBuf;\n crate struct ScrapeExamplesOptions {\n     output_path: PathBuf,\n     target_crates: Vec<String>,\n+    crate scrape_tests: bool,\n }\n \n impl ScrapeExamplesOptions {\n@@ -43,16 +44,22 @@ impl ScrapeExamplesOptions {\n     ) -> Result<Option<Self>, i32> {\n         let output_path = matches.opt_str(\"scrape-examples-output-path\");\n         let target_crates = matches.opt_strs(\"scrape-examples-target-crate\");\n-        match (output_path, !target_crates.is_empty()) {\n-            (Some(output_path), true) => Ok(Some(ScrapeExamplesOptions {\n+        let scrape_tests = matches.opt_present(\"scrape-tests\");\n+        match (output_path, !target_crates.is_empty(), scrape_tests) {\n+            (Some(output_path), true, _) => Ok(Some(ScrapeExamplesOptions {\n                 output_path: PathBuf::from(output_path),\n                 target_crates,\n+                scrape_tests,\n             })),\n-            (Some(_), false) | (None, true) => {\n+            (Some(_), false, _) | (None, true, _) => {\n                 diag.err(\"must use --scrape-examples-output-path and --scrape-examples-target-crate together\");\n                 Err(1)\n             }\n-            (None, false) => Ok(None),\n+            (None, false, true) => {\n+                diag.err(\"must use --scrape-examples-output-path and --scrape-examples-target-crate with --scrape-tests\");\n+                Err(1)\n+            }\n+            (None, false, false) => Ok(None),\n         }\n     }\n }"}, {"sha": "d49b6c1f290cb1633ada9884640851b88530ed2c", "filename": "src/test/run-make/rustdoc-scrape-examples-multiple/scrape.mk", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/e3a1e192960c41acc196b59f0cb1b28f78e712f8/src%2Ftest%2Frun-make%2Frustdoc-scrape-examples-multiple%2Fscrape.mk", "raw_url": "https://github.com/rust-lang/rust/raw/e3a1e192960c41acc196b59f0cb1b28f78e712f8/src%2Ftest%2Frun-make%2Frustdoc-scrape-examples-multiple%2Fscrape.mk", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Frustdoc-scrape-examples-multiple%2Fscrape.mk?ref=e3a1e192960c41acc196b59f0cb1b28f78e712f8", "patch": "@@ -7,7 +7,8 @@ $(TMPDIR)/%.calls: $(TMPDIR)/libfoobar.rmeta\n \t  --extern foobar=$(TMPDIR)/libfoobar.rmeta \\\n \t\t-Z unstable-options \\\n \t\t--scrape-examples-output-path $@ \\\n-\t\t--scrape-examples-target-crate foobar\n+\t\t--scrape-examples-target-crate foobar \\\n+\t\t$(extra_flags)\n \n $(TMPDIR)/lib%.rmeta: src/lib.rs\n \t$(RUSTC) src/lib.rs --crate-name $* --crate-type lib --emit=metadata"}, {"sha": "9f80a8d96022f457c3b99069b168bfba5940c606", "filename": "src/test/run-make/rustdoc-scrape-examples-test/Makefile", "status": "added", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/e3a1e192960c41acc196b59f0cb1b28f78e712f8/src%2Ftest%2Frun-make%2Frustdoc-scrape-examples-test%2FMakefile", "raw_url": "https://github.com/rust-lang/rust/raw/e3a1e192960c41acc196b59f0cb1b28f78e712f8/src%2Ftest%2Frun-make%2Frustdoc-scrape-examples-test%2FMakefile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Frustdoc-scrape-examples-test%2FMakefile?ref=e3a1e192960c41acc196b59f0cb1b28f78e712f8", "patch": "@@ -0,0 +1,6 @@\n+extra_flags := --scrape-tests\n+deps := ex\n+\n+-include ../rustdoc-scrape-examples-multiple/scrape.mk\n+\n+all: scrape"}, {"sha": "d1a9a74e7825c55985e6d2a8d0c47831a2d1e789", "filename": "src/test/run-make/rustdoc-scrape-examples-test/examples/ex.rs", "status": "added", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/e3a1e192960c41acc196b59f0cb1b28f78e712f8/src%2Ftest%2Frun-make%2Frustdoc-scrape-examples-test%2Fexamples%2Fex.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e3a1e192960c41acc196b59f0cb1b28f78e712f8/src%2Ftest%2Frun-make%2Frustdoc-scrape-examples-test%2Fexamples%2Fex.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Frustdoc-scrape-examples-test%2Fexamples%2Fex.rs?ref=e3a1e192960c41acc196b59f0cb1b28f78e712f8", "patch": "@@ -0,0 +1,6 @@\n+fn main() {}\n+\n+#[test]\n+fn a_test() {\n+  foobar::ok();\n+}"}, {"sha": "22be1ad41010f93a6fb64e3756df9927618511eb", "filename": "src/test/run-make/rustdoc-scrape-examples-test/src/lib.rs", "status": "added", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/e3a1e192960c41acc196b59f0cb1b28f78e712f8/src%2Ftest%2Frun-make%2Frustdoc-scrape-examples-test%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e3a1e192960c41acc196b59f0cb1b28f78e712f8/src%2Ftest%2Frun-make%2Frustdoc-scrape-examples-test%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Frustdoc-scrape-examples-test%2Fsrc%2Flib.rs?ref=e3a1e192960c41acc196b59f0cb1b28f78e712f8", "patch": "@@ -0,0 +1,3 @@\n+// @has foobar/fn.ok.html '//*[@class=\"docblock scraped-example-list\"]' ''\n+\n+pub fn ok() {}"}]}