{"sha": "bc240ff606586bae4e1496ec3954c2f3a2b27c76", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJjMjQwZmY2MDY1ODZiYWU0ZTE0OTZlYzM5NTRjMmYzYTJiMjdjNzY=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2017-09-16T10:11:48Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2017-09-16T10:11:48Z"}, "message": "add an undef validation test", "tree": {"sha": "e5b6e774d8ce3e365c82b3b7751ee07b1481980a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e5b6e774d8ce3e365c82b3b7751ee07b1481980a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/bc240ff606586bae4e1496ec3954c2f3a2b27c76", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/bc240ff606586bae4e1496ec3954c2f3a2b27c76", "html_url": "https://github.com/rust-lang/rust/commit/bc240ff606586bae4e1496ec3954c2f3a2b27c76", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/bc240ff606586bae4e1496ec3954c2f3a2b27c76/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8509dbbafe1a08ea5cee367bb1599e0bb09a2a2d", "url": "https://api.github.com/repos/rust-lang/rust/commits/8509dbbafe1a08ea5cee367bb1599e0bb09a2a2d", "html_url": "https://github.com/rust-lang/rust/commit/8509dbbafe1a08ea5cee367bb1599e0bb09a2a2d"}], "stats": {"total": 14, "additions": 14, "deletions": 0}, "files": [{"sha": "b889b1ea5317b8b1e3cff83e8707593047ef0d49", "filename": "tests/compile-fail/validation_undef.rs", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/bc240ff606586bae4e1496ec3954c2f3a2b27c76/tests%2Fcompile-fail%2Fvalidation_undef.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bc240ff606586bae4e1496ec3954c2f3a2b27c76/tests%2Fcompile-fail%2Fvalidation_undef.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompile-fail%2Fvalidation_undef.rs?ref=bc240ff606586bae4e1496ec3954c2f3a2b27c76", "patch": "@@ -0,0 +1,14 @@\n+#![allow(unused_variables)]\n+// error-pattern: attempted to read undefined bytes\n+\n+mod safe {\n+    use std::mem;\n+\n+    pub(crate) fn make_float() -> f32 {\n+        unsafe { mem::uninitialized() }\n+    }\n+}\n+\n+fn main() {\n+    let _x = safe::make_float();\n+}"}]}