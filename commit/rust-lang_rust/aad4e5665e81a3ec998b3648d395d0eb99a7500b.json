{"sha": "aad4e5665e81a3ec998b3648d395d0eb99a7500b", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFhZDRlNTY2NWU4MWEzZWM5OThiMzY0OGQzOTVkMGViOTlhNzUwMGI=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2015-12-05T20:49:16Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2015-12-05T20:49:16Z"}, "message": "Auto merge of #30177 - retep998:handling-threads, r=alexcrichton\n\nAllows a `HANDLE` to be extracted from a `JoinHandle` on Windows.\nAllows a `pthread_t` to be extracted from a `JoinHandle` everywhere else.\n\nBecause https://github.com/rust-lang/rust/pull/29461 was closed.\n\nr? @alexcrichton", "tree": {"sha": "7c9286e32c368bcfb7eb295fd4b35e9eb7285c01", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7c9286e32c368bcfb7eb295fd4b35e9eb7285c01"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/aad4e5665e81a3ec998b3648d395d0eb99a7500b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/aad4e5665e81a3ec998b3648d395d0eb99a7500b", "html_url": "https://github.com/rust-lang/rust/commit/aad4e5665e81a3ec998b3648d395d0eb99a7500b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/aad4e5665e81a3ec998b3648d395d0eb99a7500b/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9f715e98925adbf205bccd8a044266c77197db50", "url": "https://api.github.com/repos/rust-lang/rust/commits/9f715e98925adbf205bccd8a044266c77197db50", "html_url": "https://github.com/rust-lang/rust/commit/9f715e98925adbf205bccd8a044266c77197db50"}, {"sha": "9749a193d629dd723562004879bca3e2d47e25a1", "url": "https://api.github.com/repos/rust-lang/rust/commits/9749a193d629dd723562004879bca3e2d47e25a1", "html_url": "https://github.com/rust-lang/rust/commit/9749a193d629dd723562004879bca3e2d47e25a1"}], "stats": {"total": 122, "additions": 122, "deletions": 0}, "files": [{"sha": "e58ba03ec67ae999802f277979d236df7c4bc86f", "filename": "src/libstd/os/android/raw.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/aad4e5665e81a3ec998b3648d395d0eb99a7500b/src%2Flibstd%2Fos%2Fandroid%2Fraw.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aad4e5665e81a3ec998b3648d395d0eb99a7500b/src%2Flibstd%2Fos%2Fandroid%2Fraw.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fos%2Fandroid%2Fraw.rs?ref=aad4e5665e81a3ec998b3648d395d0eb99a7500b", "patch": "@@ -12,6 +12,10 @@\n \n #![stable(feature = \"raw_ext\", since = \"1.1.0\")]\n \n+use os::raw::c_long;\n+\n+#[unstable(feature = \"pthread_t\", issue = \"29791\")] pub type pthread_t = c_long;\n+\n #[doc(inline)]\n #[stable(feature = \"raw_ext\", since = \"1.1.0\")]\n pub use self::arch::{dev_t, mode_t, blkcnt_t, blksize_t, ino_t, nlink_t, off_t, stat, time_t};"}, {"sha": "81de8810cba5db277f32adb578eac9aac4ed0378", "filename": "src/libstd/os/bitrig/raw.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/aad4e5665e81a3ec998b3648d395d0eb99a7500b/src%2Flibstd%2Fos%2Fbitrig%2Fraw.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aad4e5665e81a3ec998b3648d395d0eb99a7500b/src%2Flibstd%2Fos%2Fbitrig%2Fraw.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fos%2Fbitrig%2Fraw.rs?ref=aad4e5665e81a3ec998b3648d395d0eb99a7500b", "patch": "@@ -25,6 +25,8 @@ use os::unix::raw::{uid_t, gid_t};\n #[stable(feature = \"raw_ext\", since = \"1.1.0\")] pub type off_t = i64;\n #[stable(feature = \"raw_ext\", since = \"1.1.0\")] pub type time_t = i64;\n \n+#[unstable(feature = \"pthread_t\", issue = \"29791\")] pub type pthread_t = usize;\n+\n #[repr(C)]\n #[derive(Clone)]\n #[stable(feature = \"raw_ext\", since = \"1.1.0\")]"}, {"sha": "581aebebc034f8f9d6059b067a4dee448205cbc6", "filename": "src/libstd/os/dragonfly/raw.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/aad4e5665e81a3ec998b3648d395d0eb99a7500b/src%2Flibstd%2Fos%2Fdragonfly%2Fraw.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aad4e5665e81a3ec998b3648d395d0eb99a7500b/src%2Flibstd%2Fos%2Fdragonfly%2Fraw.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fos%2Fdragonfly%2Fraw.rs?ref=aad4e5665e81a3ec998b3648d395d0eb99a7500b", "patch": "@@ -25,6 +25,8 @@ use os::unix::raw::{uid_t, gid_t};\n #[stable(feature = \"raw_ext\", since = \"1.1.0\")] pub type off_t = i64;\n #[stable(feature = \"raw_ext\", since = \"1.1.0\")] pub type time_t = i64;\n \n+#[unstable(feature = \"pthread_t\", issue = \"29791\")] pub type pthread_t = usize;\n+\n #[repr(C)]\n #[derive(Clone)]\n #[stable(feature = \"raw_ext\", since = \"1.1.0\")]"}, {"sha": "a1e39721bcf63056fc501eed9c04469a8ecc3633", "filename": "src/libstd/os/freebsd/raw.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/aad4e5665e81a3ec998b3648d395d0eb99a7500b/src%2Flibstd%2Fos%2Ffreebsd%2Fraw.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aad4e5665e81a3ec998b3648d395d0eb99a7500b/src%2Flibstd%2Fos%2Ffreebsd%2Fraw.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fos%2Ffreebsd%2Fraw.rs?ref=aad4e5665e81a3ec998b3648d395d0eb99a7500b", "patch": "@@ -21,6 +21,8 @@\n #[stable(feature = \"raw_ext\", since = \"1.1.0\")] pub type blkcnt_t = i64;\n #[stable(feature = \"raw_ext\", since = \"1.1.0\")] pub type fflags_t = u32;\n \n+#[unstable(feature = \"pthread_t\", issue = \"29791\")] pub type pthread_t = usize;\n+\n #[doc(inline)]\n #[stable(feature = \"raw_ext\", since = \"1.1.0\")]\n pub use self::arch::{stat, time_t};"}, {"sha": "20fe833a98076930eb5e597f67155acf4050190b", "filename": "src/libstd/os/ios/raw.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/aad4e5665e81a3ec998b3648d395d0eb99a7500b/src%2Flibstd%2Fos%2Fios%2Fraw.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aad4e5665e81a3ec998b3648d395d0eb99a7500b/src%2Flibstd%2Fos%2Fios%2Fraw.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fos%2Fios%2Fraw.rs?ref=aad4e5665e81a3ec998b3648d395d0eb99a7500b", "patch": "@@ -24,6 +24,8 @@ use os::unix::raw::{uid_t, gid_t};\n #[stable(feature = \"raw_ext\", since = \"1.1.0\")] pub type off_t = i64;\n #[stable(feature = \"raw_ext\", since = \"1.1.0\")] pub type time_t = c_long;\n \n+#[unstable(feature = \"pthread_t\", issue = \"29791\")] pub type pthread_t = usize;\n+\n #[repr(C)]\n #[derive(Clone)]\n #[stable(feature = \"raw_ext\", since = \"1.1.0\")]"}, {"sha": "f44199f311bfa7298a5e86eb57c8e12365270360", "filename": "src/libstd/os/linux/raw.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/aad4e5665e81a3ec998b3648d395d0eb99a7500b/src%2Flibstd%2Fos%2Flinux%2Fraw.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aad4e5665e81a3ec998b3648d395d0eb99a7500b/src%2Flibstd%2Fos%2Flinux%2Fraw.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fos%2Flinux%2Fraw.rs?ref=aad4e5665e81a3ec998b3648d395d0eb99a7500b", "patch": "@@ -12,9 +12,13 @@\n \n #![stable(feature = \"raw_ext\", since = \"1.1.0\")]\n \n+use os::raw::c_ulong;\n+\n #[stable(feature = \"raw_ext\", since = \"1.1.0\")] pub type dev_t = u64;\n #[stable(feature = \"raw_ext\", since = \"1.1.0\")] pub type mode_t = u32;\n \n+#[unstable(feature = \"pthread_t\", issue = \"29791\")] pub type pthread_t = c_ulong;\n+\n #[doc(inline)]\n #[stable(feature = \"raw_ext\", since = \"1.1.0\")]\n pub use self::arch::{off_t, ino_t, nlink_t, blksize_t, blkcnt_t, stat, time_t};"}, {"sha": "1407132b9c96de52583005f46be7a4ab9bbf6f8f", "filename": "src/libstd/os/macos/raw.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/aad4e5665e81a3ec998b3648d395d0eb99a7500b/src%2Flibstd%2Fos%2Fmacos%2Fraw.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aad4e5665e81a3ec998b3648d395d0eb99a7500b/src%2Flibstd%2Fos%2Fmacos%2Fraw.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fos%2Fmacos%2Fraw.rs?ref=aad4e5665e81a3ec998b3648d395d0eb99a7500b", "patch": "@@ -24,6 +24,8 @@ use os::unix::raw::{uid_t, gid_t};\n #[stable(feature = \"raw_ext\", since = \"1.1.0\")] pub type off_t = i64;\n #[stable(feature = \"raw_ext\", since = \"1.1.0\")] pub type time_t = c_long;\n \n+#[unstable(feature = \"pthread_t\", issue = \"29791\")] pub type pthread_t = usize;\n+\n #[repr(C)]\n #[derive(Clone)]\n #[stable(feature = \"raw_ext\", since = \"1.1.0\")]"}, {"sha": "7258a14aaf4b357d258738a2ca435d7d505074e9", "filename": "src/libstd/os/nacl/raw.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/aad4e5665e81a3ec998b3648d395d0eb99a7500b/src%2Flibstd%2Fos%2Fnacl%2Fraw.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aad4e5665e81a3ec998b3648d395d0eb99a7500b/src%2Flibstd%2Fos%2Fnacl%2Fraw.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fos%2Fnacl%2Fraw.rs?ref=aad4e5665e81a3ec998b3648d395d0eb99a7500b", "patch": "@@ -24,6 +24,8 @@\n #[stable(feature = \"raw_ext\", since = \"1.1.0\")] pub type blksize_t = i32;\n #[stable(feature = \"raw_ext\", since = \"1.1.0\")] pub type blkcnt_t = i32;\n \n+#[unstable(feature = \"pthread_t\", issue = \"29791\")] pub type pthread_t = usize;\n+\n #[repr(C)]\n #[derive(Copy, Clone)]\n #[stable(feature = \"raw_ext\", since = \"1.1.0\")]"}, {"sha": "9ca58924955103c1e18f90771b3d7e14fd925d77", "filename": "src/libstd/os/netbsd/raw.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/aad4e5665e81a3ec998b3648d395d0eb99a7500b/src%2Flibstd%2Fos%2Fnetbsd%2Fraw.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aad4e5665e81a3ec998b3648d395d0eb99a7500b/src%2Flibstd%2Fos%2Fnetbsd%2Fraw.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fos%2Fnetbsd%2Fraw.rs?ref=aad4e5665e81a3ec998b3648d395d0eb99a7500b", "patch": "@@ -25,6 +25,8 @@ use os::unix::raw::{uid_t, gid_t};\n #[stable(feature = \"raw_ext\", since = \"1.1.0\")] pub type off_t = i64;\n #[stable(feature = \"raw_ext\", since = \"1.1.0\")] pub type time_t = i64;\n \n+#[unstable(feature = \"pthread_t\", issue = \"29791\")] pub type pthread_t = usize;\n+\n #[repr(C)]\n #[derive(Clone)]\n #[stable(feature = \"raw_ext\", since = \"1.1.0\")]"}, {"sha": "209546c4e4f5626f383907e88df398a64bad639e", "filename": "src/libstd/os/openbsd/raw.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/aad4e5665e81a3ec998b3648d395d0eb99a7500b/src%2Flibstd%2Fos%2Fopenbsd%2Fraw.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aad4e5665e81a3ec998b3648d395d0eb99a7500b/src%2Flibstd%2Fos%2Fopenbsd%2Fraw.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fos%2Fopenbsd%2Fraw.rs?ref=aad4e5665e81a3ec998b3648d395d0eb99a7500b", "patch": "@@ -25,6 +25,8 @@ use os::unix::raw::{uid_t, gid_t};\n #[stable(feature = \"raw_ext\", since = \"1.1.0\")] pub type off_t = i64;\n #[stable(feature = \"raw_ext\", since = \"1.1.0\")] pub type time_t = i64;\n \n+#[unstable(feature = \"pthread_t\", issue = \"29791\")] pub type pthread_t = usize;\n+\n #[repr(C)]\n #[derive(Clone)]\n #[stable(feature = \"raw_ext\", since = \"1.1.0\")]"}, {"sha": "276ef25a03a448bb7c38d0e05bbcc72160cb459d", "filename": "src/libstd/sys/unix/ext/mod.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/aad4e5665e81a3ec998b3648d395d0eb99a7500b/src%2Flibstd%2Fsys%2Funix%2Fext%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aad4e5665e81a3ec998b3648d395d0eb99a7500b/src%2Flibstd%2Fsys%2Funix%2Fext%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Funix%2Fext%2Fmod.rs?ref=aad4e5665e81a3ec998b3648d395d0eb99a7500b", "patch": "@@ -34,6 +34,7 @@ pub mod ffi;\n pub mod fs;\n pub mod process;\n pub mod raw;\n+pub mod thread;\n \n /// A prelude for conveniently writing platform-specific code.\n ///"}, {"sha": "d1cc6cba51dbc06dfc7e1e1518f65e5da2116276", "filename": "src/libstd/sys/unix/ext/raw.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/aad4e5665e81a3ec998b3648d395d0eb99a7500b/src%2Flibstd%2Fsys%2Funix%2Fext%2Fraw.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aad4e5665e81a3ec998b3648d395d0eb99a7500b/src%2Flibstd%2Fsys%2Funix%2Fext%2Fraw.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Funix%2Fext%2Fraw.rs?ref=aad4e5665e81a3ec998b3648d395d0eb99a7500b", "patch": "@@ -16,6 +16,9 @@\n #[stable(feature = \"raw_ext\", since = \"1.1.0\")] pub type gid_t = u32;\n #[stable(feature = \"raw_ext\", since = \"1.1.0\")] pub type pid_t = i32;\n \n+#[doc(inline)]\n+#[unstable(feature = \"pthread_t\", issue = \"29791\")]\n+pub use sys::platform::raw::pthread_t;\n #[doc(inline)]\n #[stable(feature = \"raw_ext\", since = \"1.1.0\")]\n pub use sys::platform::raw::{dev_t, ino_t, mode_t, nlink_t, off_t, blksize_t};"}, {"sha": "c1c1609632a9444343c7fed0669233a440c9a129", "filename": "src/libstd/sys/unix/ext/thread.rs", "status": "added", "additions": 43, "deletions": 0, "changes": 43, "blob_url": "https://github.com/rust-lang/rust/blob/aad4e5665e81a3ec998b3648d395d0eb99a7500b/src%2Flibstd%2Fsys%2Funix%2Fext%2Fthread.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aad4e5665e81a3ec998b3648d395d0eb99a7500b/src%2Flibstd%2Fsys%2Funix%2Fext%2Fthread.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Funix%2Fext%2Fthread.rs?ref=aad4e5665e81a3ec998b3648d395d0eb99a7500b", "patch": "@@ -0,0 +1,43 @@\n+// Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+//! Unix-specific extensions to primitives in the `std::process` module.\n+\n+#![unstable(feature = \"thread_extensions\", issue = \"29791\")]\n+\n+use os::unix::raw::{pthread_t};\n+use sys_common::{AsInner, IntoInner};\n+use thread::{JoinHandle};\n+\n+#[unstable(feature = \"thread_extensions\", issue = \"29791\")]\n+pub type RawPthread = pthread_t;\n+\n+/// Unix-specific extensions to `std::thread::JoinHandle`\n+#[unstable(feature = \"thread_extensions\", issue = \"29791\")]\n+pub trait JoinHandleExt {\n+    /// Extracts the raw pthread_t without taking ownership\n+    fn as_pthread_t(&self) -> RawPthread;\n+    /// Consumes the thread, returning the raw pthread_t\n+    ///\n+    /// This function **transfers ownership** of the underlying pthread_t to\n+    /// the caller. Callers are then the unique owners of the pthread_t and\n+    /// must either detech or join the pthread_t once it's no longer needed.\n+    fn into_pthread_t(self) -> RawPthread;\n+}\n+\n+#[unstable(feature = \"thread_extensions\", issue = \"29791\")]\n+impl<T> JoinHandleExt for JoinHandle<T> {\n+    fn as_pthread_t(&self) -> RawPthread {\n+        self.as_inner().id() as RawPthread\n+    }\n+    fn into_pthread_t(self) -> RawPthread {\n+        self.into_inner().into_id() as RawPthread\n+    }\n+}"}, {"sha": "4d715b579c6c5d9d5b14bbb8006ed0cd2a406e90", "filename": "src/libstd/sys/unix/thread.rs", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/aad4e5665e81a3ec998b3648d395d0eb99a7500b/src%2Flibstd%2Fsys%2Funix%2Fthread.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aad4e5665e81a3ec998b3648d395d0eb99a7500b/src%2Flibstd%2Fsys%2Funix%2Fthread.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Funix%2Fthread.rs?ref=aad4e5665e81a3ec998b3648d395d0eb99a7500b", "patch": "@@ -152,6 +152,14 @@ impl Thread {\n             debug_assert_eq!(ret, 0);\n         }\n     }\n+\n+    pub fn id(&self) -> libc::pthread_t { self.id }\n+\n+    pub fn into_id(self) -> libc::pthread_t {\n+        let id = self.id;\n+        mem::forget(self);\n+        id\n+    }\n }\n \n impl Drop for Thread {"}, {"sha": "c3578fdfdb16ba452c68051f3ddb1cb7e2ff14fa", "filename": "src/libstd/sys/windows/ext/mod.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/aad4e5665e81a3ec998b3648d395d0eb99a7500b/src%2Flibstd%2Fsys%2Fwindows%2Fext%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aad4e5665e81a3ec998b3648d395d0eb99a7500b/src%2Flibstd%2Fsys%2Fwindows%2Fext%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Fwindows%2Fext%2Fmod.rs?ref=aad4e5665e81a3ec998b3648d395d0eb99a7500b", "patch": "@@ -21,6 +21,7 @@ pub mod fs;\n pub mod io;\n pub mod raw;\n pub mod process;\n+pub mod thread;\n \n /// A prelude for conveniently writing platform-specific code.\n ///"}, {"sha": "3a07204b2bcf80f43cd514ec6b35f3b50ffabe11", "filename": "src/libstd/sys/windows/ext/thread.rs", "status": "added", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/aad4e5665e81a3ec998b3648d395d0eb99a7500b/src%2Flibstd%2Fsys%2Fwindows%2Fext%2Fthread.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aad4e5665e81a3ec998b3648d395d0eb99a7500b/src%2Flibstd%2Fsys%2Fwindows%2Fext%2Fthread.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Fwindows%2Fext%2Fthread.rs?ref=aad4e5665e81a3ec998b3648d395d0eb99a7500b", "patch": "@@ -0,0 +1,29 @@\n+// Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+//! Extensions to `std::thread` for Windows.\n+\n+#![unstable(feature = \"thread_extensions\", issue = \"29791\")]\n+\n+use os::windows::io::{RawHandle, AsRawHandle, IntoRawHandle};\n+use thread;\n+use sys_common::{AsInner, IntoInner};\n+\n+impl<T> AsRawHandle for thread::JoinHandle<T> {\n+    fn as_raw_handle(&self) -> RawHandle {\n+        self.as_inner().handle().raw() as *mut _\n+    }\n+}\n+\n+impl<T> IntoRawHandle for thread::JoinHandle<T>  {\n+    fn into_raw_handle(self) -> RawHandle {\n+        self.into_inner().into_handle().into_raw() as *mut _\n+    }\n+}"}, {"sha": "1ba8586756311b46664d09ca36e97da8dd2446e7", "filename": "src/libstd/sys/windows/thread.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/aad4e5665e81a3ec998b3648d395d0eb99a7500b/src%2Flibstd%2Fsys%2Fwindows%2Fthread.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aad4e5665e81a3ec998b3648d395d0eb99a7500b/src%2Flibstd%2Fsys%2Fwindows%2Fthread.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Fwindows%2Fthread.rs?ref=aad4e5665e81a3ec998b3648d395d0eb99a7500b", "patch": "@@ -77,6 +77,10 @@ impl Thread {\n             c::Sleep(super::dur2timeout(dur))\n         }\n     }\n+\n+    pub fn handle(&self) -> &Handle { &self.handle }\n+\n+    pub fn into_handle(self) -> Handle { self.handle }\n }\n \n pub mod guard {"}, {"sha": "aef47aa57263b5b818fb56bb4488fa72489e714b", "filename": "src/libstd/thread/mod.rs", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/aad4e5665e81a3ec998b3648d395d0eb99a7500b/src%2Flibstd%2Fthread%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aad4e5665e81a3ec998b3648d395d0eb99a7500b/src%2Flibstd%2Fthread%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fthread%2Fmod.rs?ref=aad4e5665e81a3ec998b3648d395d0eb99a7500b", "patch": "@@ -171,6 +171,7 @@ use sys::thread as imp;\n use sys_common::thread_info;\n use sys_common::unwind;\n use sys_common::util;\n+use sys_common::{AsInner, IntoInner};\n use time::Duration;\n \n ////////////////////////////////////////////////////////////////////////////////\n@@ -621,6 +622,14 @@ impl<T> JoinHandle<T> {\n     }\n }\n \n+impl<T> AsInner<imp::Thread> for JoinHandle<T> {\n+    fn as_inner(&self) -> &imp::Thread { self.0.native.as_ref().unwrap() }\n+}\n+\n+impl<T> IntoInner<imp::Thread> for JoinHandle<T> {\n+    fn into_inner(self) -> imp::Thread { self.0.native.unwrap() }\n+}\n+\n fn _assert_sync_and_send() {\n     fn _assert_both<T: Send + Sync>() {}\n     _assert_both::<JoinHandle<()>>();"}]}