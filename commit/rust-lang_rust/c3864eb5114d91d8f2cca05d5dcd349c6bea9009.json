{"sha": "c3864eb5114d91d8f2cca05d5dcd349c6bea9009", "node_id": "C_kwDOAAsO6NoAKGMzODY0ZWI1MTE0ZDkxZDhmMmNjYTA1ZDVkY2QzNDljNmJlYTkwMDk", "commit": {"author": {"name": "Lauren\u021biu Nicola", "email": "lnicola@dend.ro", "date": "2023-03-12T10:59:57Z"}, "committer": {"name": "Lauren\u021biu Nicola", "email": "lnicola@dend.ro", "date": "2023-03-12T11:04:24Z"}, "message": "Add and use rust-analyzer.cargo.extraArgs setting", "tree": {"sha": "c3a94c259752e5db5a1ffee4936a8809f53c83d9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c3a94c259752e5db5a1ffee4936a8809f53c83d9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c3864eb5114d91d8f2cca05d5dcd349c6bea9009", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c3864eb5114d91d8f2cca05d5dcd349c6bea9009", "html_url": "https://github.com/rust-lang/rust/commit/c3864eb5114d91d8f2cca05d5dcd349c6bea9009", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c3864eb5114d91d8f2cca05d5dcd349c6bea9009/comments", "author": {"login": "lnicola", "id": 308347, "node_id": "MDQ6VXNlcjMwODM0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/308347?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lnicola", "html_url": "https://github.com/lnicola", "followers_url": "https://api.github.com/users/lnicola/followers", "following_url": "https://api.github.com/users/lnicola/following{/other_user}", "gists_url": "https://api.github.com/users/lnicola/gists{/gist_id}", "starred_url": "https://api.github.com/users/lnicola/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lnicola/subscriptions", "organizations_url": "https://api.github.com/users/lnicola/orgs", "repos_url": "https://api.github.com/users/lnicola/repos", "events_url": "https://api.github.com/users/lnicola/events{/privacy}", "received_events_url": "https://api.github.com/users/lnicola/received_events", "type": "User", "site_admin": false}, "committer": {"login": "lnicola", "id": 308347, "node_id": "MDQ6VXNlcjMwODM0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/308347?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lnicola", "html_url": "https://github.com/lnicola", "followers_url": "https://api.github.com/users/lnicola/followers", "following_url": "https://api.github.com/users/lnicola/following{/other_user}", "gists_url": "https://api.github.com/users/lnicola/gists{/gist_id}", "starred_url": "https://api.github.com/users/lnicola/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lnicola/subscriptions", "organizations_url": "https://api.github.com/users/lnicola/orgs", "repos_url": "https://api.github.com/users/lnicola/repos", "events_url": "https://api.github.com/users/lnicola/events{/privacy}", "received_events_url": "https://api.github.com/users/lnicola/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cfc9d5cd3b7b07c50e3f938980b26ef70ef42553", "url": "https://api.github.com/repos/rust-lang/rust/commits/cfc9d5cd3b7b07c50e3f938980b26ef70ef42553", "html_url": "https://github.com/rust-lang/rust/commit/cfc9d5cd3b7b07c50e3f938980b26ef70ef42553"}], "stats": {"total": 29, "additions": 27, "deletions": 2}, "files": [{"sha": "75233dbb2abec4a709dba3eeda9c91fbe1bc1fa2", "filename": "crates/rust-analyzer/src/config.rs", "status": "modified", "additions": 14, "deletions": 2, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/c3864eb5114d91d8f2cca05d5dcd349c6bea9009/crates%2Frust-analyzer%2Fsrc%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c3864eb5114d91d8f2cca05d5dcd349c6bea9009/crates%2Frust-analyzer%2Fsrc%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fconfig.rs?ref=c3864eb5114d91d8f2cca05d5dcd349c6bea9009", "patch": "@@ -101,6 +101,8 @@ config_data! {\n         /// Use `RUSTC_WRAPPER=rust-analyzer` when running build scripts to\n         /// avoid checking unnecessary things.\n         cargo_buildScripts_useRustcWrapper: bool = \"true\",\n+        /// Extra arguments that are passed to every cargo invocation.\n+        cargo_extraArgs: Vec<String> = \"[]\",\n         /// Extra environment variables that will be set when running cargo, rustc\n         /// or other commands within the workspace. Useful for setting RUSTFLAGS.\n         cargo_extraEnv: FxHashMap<String, String> = \"{}\",\n@@ -1055,10 +1057,20 @@ impl Config {\n         }\n     }\n \n+    pub fn extra_args(&self) -> &Vec<String> {\n+        &self.data.cargo_extraArgs\n+    }\n+\n     pub fn extra_env(&self) -> &FxHashMap<String, String> {\n         &self.data.cargo_extraEnv\n     }\n \n+    pub fn check_extra_args(&self) -> Vec<String> {\n+        let mut extra_args = self.extra_args().clone();\n+        extra_args.extend_from_slice(&self.data.check_extraArgs);\n+        extra_args\n+    }\n+\n     pub fn check_extra_env(&self) -> FxHashMap<String, String> {\n         let mut extra_env = self.data.cargo_extraEnv.clone();\n         extra_env.extend(self.data.check_extraEnv.clone());\n@@ -1157,7 +1169,7 @@ impl Config {\n                 InvocationLocation::Workspace => project_model::InvocationLocation::Workspace,\n             },\n             run_build_script_command: self.data.cargo_buildScripts_overrideCommand.clone(),\n-            extra_args: self.data.check_extraArgs.clone(),\n+            extra_args: self.data.cargo_extraArgs.clone(),\n             extra_env: self.data.cargo_extraEnv.clone(),\n         }\n     }\n@@ -1228,7 +1240,7 @@ impl Config {\n                     CargoFeaturesDef::All => vec![],\n                     CargoFeaturesDef::Selected(it) => it,\n                 },\n-                extra_args: self.data.check_extraArgs.clone(),\n+                extra_args: self.check_extra_args(),\n                 extra_env: self.check_extra_env(),\n                 ansi_color_output: self.color_diagnostic_output(),\n             },"}, {"sha": "6937a7ed9a2dddd518c059ffe6e542665600b0eb", "filename": "docs/user/generated_config.adoc", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/c3864eb5114d91d8f2cca05d5dcd349c6bea9009/docs%2Fuser%2Fgenerated_config.adoc", "raw_url": "https://github.com/rust-lang/rust/raw/c3864eb5114d91d8f2cca05d5dcd349c6bea9009/docs%2Fuser%2Fgenerated_config.adoc", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/docs%2Fuser%2Fgenerated_config.adoc?ref=c3864eb5114d91d8f2cca05d5dcd349c6bea9009", "patch": "@@ -71,6 +71,11 @@ cargo check --quiet --workspace --message-format=json --all-targets\n Use `RUSTC_WRAPPER=rust-analyzer` when running build scripts to\n avoid checking unnecessary things.\n --\n+[[rust-analyzer.cargo.extraArgs]]rust-analyzer.cargo.extraArgs (default: `[]`)::\n++\n+--\n+Extra arguments that are passed to every cargo invocation.\n+--\n [[rust-analyzer.cargo.extraEnv]]rust-analyzer.cargo.extraEnv (default: `{}`)::\n +\n --"}, {"sha": "a3b1a3107d0c94b681cbf8d5b81b8765c986b8b1", "filename": "editors/code/package.json", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/c3864eb5114d91d8f2cca05d5dcd349c6bea9009/editors%2Fcode%2Fpackage.json", "raw_url": "https://github.com/rust-lang/rust/raw/c3864eb5114d91d8f2cca05d5dcd349c6bea9009/editors%2Fcode%2Fpackage.json", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fpackage.json?ref=c3864eb5114d91d8f2cca05d5dcd349c6bea9009", "patch": "@@ -511,6 +511,14 @@\n                     \"default\": true,\n                     \"type\": \"boolean\"\n                 },\n+                \"rust-analyzer.cargo.extraArgs\": {\n+                    \"markdownDescription\": \"Extra arguments that are passed to every cargo invocation.\",\n+                    \"default\": [],\n+                    \"type\": \"array\",\n+                    \"items\": {\n+                        \"type\": \"string\"\n+                    }\n+                },\n                 \"rust-analyzer.cargo.extraEnv\": {\n                     \"markdownDescription\": \"Extra environment variables that will be set when running cargo, rustc\\nor other commands within the workspace. Useful for setting RUSTFLAGS.\",\n                     \"default\": {},"}]}