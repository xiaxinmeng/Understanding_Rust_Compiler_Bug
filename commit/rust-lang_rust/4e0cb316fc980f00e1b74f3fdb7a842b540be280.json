{"sha": "4e0cb316fc980f00e1b74f3fdb7a842b540be280", "node_id": "MDY6Q29tbWl0NzI0NzEyOjRlMGNiMzE2ZmM5ODBmMDBlMWI3NGYzZmRiN2E4NDJiNTQwYmUyODA=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2013-12-09T13:51:29Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2013-12-09T13:51:29Z"}, "message": "auto merge of #10840 : cmr/rust/any_docs2, r=huonw", "tree": {"sha": "51362992c913303ab3c2ac8e4a88d86f3c061f74", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/51362992c913303ab3c2ac8e4a88d86f3c061f74"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4e0cb316fc980f00e1b74f3fdb7a842b540be280", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4e0cb316fc980f00e1b74f3fdb7a842b540be280", "html_url": "https://github.com/rust-lang/rust/commit/4e0cb316fc980f00e1b74f3fdb7a842b540be280", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4e0cb316fc980f00e1b74f3fdb7a842b540be280/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a417dbd1c71c168fe7db71efb98d22b5e22dcce1", "url": "https://api.github.com/repos/rust-lang/rust/commits/a417dbd1c71c168fe7db71efb98d22b5e22dcce1", "html_url": "https://github.com/rust-lang/rust/commit/a417dbd1c71c168fe7db71efb98d22b5e22dcce1"}, {"sha": "4051713625d7b75846619a3ba74d0ada8695c5a9", "url": "https://api.github.com/repos/rust-lang/rust/commits/4051713625d7b75846619a3ba74d0ada8695c5a9", "html_url": "https://github.com/rust-lang/rust/commit/4051713625d7b75846619a3ba74d0ada8695c5a9"}], "stats": {"total": 9, "additions": 8, "deletions": 1}, "files": [{"sha": "4133bb1835db6cd3012ba56960fb1d59167b250c", "filename": "src/libstd/any.rs", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/4e0cb316fc980f00e1b74f3fdb7a842b540be280/src%2Flibstd%2Fany.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4e0cb316fc980f00e1b74f3fdb7a842b540be280/src%2Flibstd%2Fany.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fany.rs?ref=4e0cb316fc980f00e1b74f3fdb7a842b540be280", "patch": "@@ -9,7 +9,14 @@\n // except according to those terms.\n \n //! This module implements the `Any` trait, which enables dynamic typing\n-//! of any type.\n+//! of any type, through runtime reflection.\n+//!\n+//! `Any` itself can be used to get a `TypeId`, and has more features when used as a trait object.\n+//! As `&Any` (a borrowed trait object), it has the `is` and `as_ref` methods, to test if the\n+//! contained value is of a given type, and to get a reference to the inner value as a type. As\n+//! `&mut Any`, there is also the `as_mut` method, for getting a mutable reference to the inner\n+//! value. `~Any` adds the `move` method, which will unwrap a `~T` from the object.  See the\n+//! extension traits (`*Ext`) for the full details.\n \n use cast::transmute;\n use option::{Option, Some, None};"}]}