{"sha": "d26a96d2bbf78dcb4b5b43bf95137731ad0db286", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQyNmE5NmQyYmJmNzhkY2I0YjViNDNiZjk1MTM3NzMxYWQwZGIyODY=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2011-11-10T00:04:07Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2011-11-10T00:47:44Z"}, "message": "Add \"cdecl\" as synonym for \"c-stack-cdecl\"", "tree": {"sha": "36e66273be4a5e4f8f05e6731ee4c961d8ad85fb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/36e66273be4a5e4f8f05e6731ee4c961d8ad85fb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d26a96d2bbf78dcb4b5b43bf95137731ad0db286", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d26a96d2bbf78dcb4b5b43bf95137731ad0db286", "html_url": "https://github.com/rust-lang/rust/commit/d26a96d2bbf78dcb4b5b43bf95137731ad0db286", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d26a96d2bbf78dcb4b5b43bf95137731ad0db286/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e96342820d0075099d5e3bdf5689c64ad6625a45", "url": "https://api.github.com/repos/rust-lang/rust/commits/e96342820d0075099d5e3bdf5689c64ad6625a45", "html_url": "https://github.com/rust-lang/rust/commit/e96342820d0075099d5e3bdf5689c64ad6625a45"}], "stats": {"total": 56, "additions": 29, "deletions": 27}, "files": [{"sha": "5ca1e46aaed013ea58cc2338427aace093accda7", "filename": "src/comp/syntax/parse/parser.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d26a96d2bbf78dcb4b5b43bf95137731ad0db286/src%2Fcomp%2Fsyntax%2Fparse%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d26a96d2bbf78dcb4b5b43bf95137731ad0db286/src%2Fcomp%2Fsyntax%2Fparse%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fsyntax%2Fparse%2Fparser.rs?ref=d26a96d2bbf78dcb4b5b43bf95137731ad0db286", "patch": "@@ -2010,6 +2010,8 @@ fn parse_item_native_mod(p: parser, attrs: [ast::attribute]) -> @ast::item {\n             abi = ast::native_abi_rust_intrinsic;\n         } else if str::eq(t, \"c-stack-cdecl\") {\n             abi = ast::native_abi_cdecl;\n+        } else if str::eq(t, \"cdecl\") {\n+            abi = ast::native_abi_cdecl;\n         } else if str::eq(t, \"c-stack-stdcall\") {\n             abi = ast::native_abi_stdcall;\n         } else if str::eq(t, \"stdcall\") {"}, {"sha": "4570b56cba989f5ac77c4e5957bf33fd62f6c19e", "filename": "src/comp/syntax/print/pprust.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d26a96d2bbf78dcb4b5b43bf95137731ad0db286/src%2Fcomp%2Fsyntax%2Fprint%2Fpprust.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d26a96d2bbf78dcb4b5b43bf95137731ad0db286/src%2Fcomp%2Fsyntax%2Fprint%2Fpprust.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fsyntax%2Fprint%2Fpprust.rs?ref=d26a96d2bbf78dcb4b5b43bf95137731ad0db286", "patch": "@@ -405,7 +405,7 @@ fn print_item(s: ps, &&item: @ast::item) {\n             word_nbsp(s, \"\\\"rust-intrinsic\\\"\");\n           }\n           ast::native_abi_cdecl. {\n-            word_nbsp(s, \"\\\"c-stack-cdecl\\\"\");\n+            word_nbsp(s, \"\\\"cdecl\\\"\");\n           }\n           ast::native_abi_stdcall. {\n             word_nbsp(s, \"\\\"stdcall\\\"\");"}, {"sha": "72f127976fff8c7a9eeac27a0677a119f823c257", "filename": "src/test/bench/shootout-nbody.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d26a96d2bbf78dcb4b5b43bf95137731ad0db286/src%2Ftest%2Fbench%2Fshootout-nbody.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d26a96d2bbf78dcb4b5b43bf95137731ad0db286/src%2Ftest%2Fbench%2Fshootout-nbody.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fbench%2Fshootout-nbody.rs?ref=d26a96d2bbf78dcb4b5b43bf95137731ad0db286", "patch": "@@ -1,7 +1,7 @@\n // based on:\n // http://shootout.alioth.debian.org/u32/benchmark.php?test=nbody&lang=java\n \n-native \"c-stack-cdecl\" mod llvm = \"\" {\n+native \"cdecl\" mod llvm = \"\" {\n     fn sqrt(n: float) -> float;\n }\n "}, {"sha": "6e9d7ac18fccc7a2c0b62959d35601589445d421", "filename": "src/test/compile-fail/native-unsafe-fn-called.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d26a96d2bbf78dcb4b5b43bf95137731ad0db286/src%2Ftest%2Fcompile-fail%2Fnative-unsafe-fn-called.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d26a96d2bbf78dcb4b5b43bf95137731ad0db286/src%2Ftest%2Fcompile-fail%2Fnative-unsafe-fn-called.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fnative-unsafe-fn-called.rs?ref=d26a96d2bbf78dcb4b5b43bf95137731ad0db286", "patch": "@@ -1,6 +1,6 @@\n // -*- rust -*-\n // error-pattern: safe function calls function marked unsafe\n-native \"c-stack-cdecl\" mod test {\n+native \"cdecl\" mod test {\n     unsafe fn free();\n }\n "}, {"sha": "2a2ce4b3246e0402ce2e275036115be102583f85", "filename": "src/test/compile-fail/native-unsafe-fn.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d26a96d2bbf78dcb4b5b43bf95137731ad0db286/src%2Ftest%2Fcompile-fail%2Fnative-unsafe-fn.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d26a96d2bbf78dcb4b5b43bf95137731ad0db286/src%2Ftest%2Fcompile-fail%2Fnative-unsafe-fn.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fnative-unsafe-fn.rs?ref=d26a96d2bbf78dcb4b5b43bf95137731ad0db286", "patch": "@@ -1,7 +1,7 @@\n // -*- rust -*-\n // error-pattern: unsafe functions can only be called\n \n-native \"c-stack-cdecl\" mod test {\n+native \"cdecl\" mod test {\n     unsafe fn free();\n }\n "}, {"sha": "ecd63a91eebe36d906b38d19a5ba9dc44cf1556d", "filename": "src/test/run-pass/bind-native.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d26a96d2bbf78dcb4b5b43bf95137731ad0db286/src%2Ftest%2Frun-pass%2Fbind-native.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d26a96d2bbf78dcb4b5b43bf95137731ad0db286/src%2Ftest%2Frun-pass%2Fbind-native.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fbind-native.rs?ref=d26a96d2bbf78dcb4b5b43bf95137731ad0db286", "patch": "@@ -2,7 +2,7 @@\n Can we bind native things?\n */\n \n-native \"c-stack-cdecl\" mod rustrt {\n+native \"cdecl\" mod rustrt {\n     fn pin_task();\n }\n "}, {"sha": "2d421947eef294b5787d718cc7f9aad88a7a6532", "filename": "src/test/run-pass/binops.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d26a96d2bbf78dcb4b5b43bf95137731ad0db286/src%2Ftest%2Frun-pass%2Fbinops.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d26a96d2bbf78dcb4b5b43bf95137731ad0db286/src%2Ftest%2Frun-pass%2Fbinops.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fbinops.rs?ref=d26a96d2bbf78dcb4b5b43bf95137731ad0db286", "patch": "@@ -117,7 +117,7 @@ fn test_fn() {\n     assert (h1 >= h2);\n }\n \n-native \"c-stack-cdecl\" mod native_mod = \"\" {\n+native \"cdecl\" mod native_mod = \"\" {\n     fn do_gc();\n     fn unsupervise();\n }"}, {"sha": "2a13e6d35638adc0b03c317ca66a155530493566", "filename": "src/test/run-pass/c-stack-as-value.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d26a96d2bbf78dcb4b5b43bf95137731ad0db286/src%2Ftest%2Frun-pass%2Fc-stack-as-value.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d26a96d2bbf78dcb4b5b43bf95137731ad0db286/src%2Ftest%2Frun-pass%2Fc-stack-as-value.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fc-stack-as-value.rs?ref=d26a96d2bbf78dcb4b5b43bf95137731ad0db286", "patch": "@@ -1,6 +1,6 @@\n // xfail-test\n \n-native \"c-stack-cdecl\" mod rustrt {\n+native \"cdecl\" mod rustrt {\n     fn unsupervise();\n }\n "}, {"sha": "278417050475fac67c93f9b1cc42ee99d8a979c5", "filename": "src/test/run-pass/c-stack-returning-int64.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d26a96d2bbf78dcb4b5b43bf95137731ad0db286/src%2Ftest%2Frun-pass%2Fc-stack-returning-int64.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d26a96d2bbf78dcb4b5b43bf95137731ad0db286/src%2Ftest%2Frun-pass%2Fc-stack-returning-int64.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fc-stack-returning-int64.rs?ref=d26a96d2bbf78dcb4b5b43bf95137731ad0db286", "patch": "@@ -1,7 +1,7 @@\n use std;\n import std::str;\n \n-native \"c-stack-cdecl\" mod libc = \"\" {\n+native \"cdecl\" mod libc = \"\" {\n     fn atol(x: str::sbuf) -> int;\n     fn atoll(x: str::sbuf) -> i64;\n }"}, {"sha": "10b9dcd98839dbb04af444576ffd132b228182a8", "filename": "src/test/run-pass/conditional-compile.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/d26a96d2bbf78dcb4b5b43bf95137731ad0db286/src%2Ftest%2Frun-pass%2Fconditional-compile.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d26a96d2bbf78dcb4b5b43bf95137731ad0db286/src%2Ftest%2Frun-pass%2Fconditional-compile.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fconditional-compile.rs?ref=d26a96d2bbf78dcb4b5b43bf95137731ad0db286", "patch": "@@ -4,13 +4,13 @@ const b: bool = false;\n const b: bool = true;\n \n #[cfg(bogus)]\n-native \"c-stack-cdecl\" mod rustrt {\n+native \"cdecl\" mod rustrt {\n     // This symbol doesn't exist and would be a link error if this\n     // module was translated\n     fn bogus();\n }\n \n-native \"c-stack-cdecl\" mod rustrt { }\n+native \"cdecl\" mod rustrt { }\n \n #[cfg(bogus)]\n type t = int;\n@@ -79,7 +79,7 @@ fn test_in_fn_ctxt() {\n }\n \n mod test_native_items {\n-    native \"c-stack-cdecl\" mod rustrt {\n+    native \"cdecl\" mod rustrt {\n         #[cfg(bogus)]\n         fn vec_from_buf_shared<T>(ptr: *T, count: uint) -> [T];\n         fn vec_from_buf_shared<T>(ptr: *T, count: uint) -> [T];"}, {"sha": "4167f89eaa1091c8b287122d69ebb9230cb8fea1", "filename": "src/test/run-pass/import-from-native.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d26a96d2bbf78dcb4b5b43bf95137731ad0db286/src%2Ftest%2Frun-pass%2Fimport-from-native.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d26a96d2bbf78dcb4b5b43bf95137731ad0db286/src%2Ftest%2Frun-pass%2Fimport-from-native.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fimport-from-native.rs?ref=d26a96d2bbf78dcb4b5b43bf95137731ad0db286", "patch": "@@ -3,7 +3,7 @@ mod spam {\n     fn eggs() { }\n }\n \n-native \"c-stack-cdecl\" mod rustrt {\n+native \"cdecl\" mod rustrt {\n     import spam::{ham, eggs};\n     export ham;\n     export eggs;"}, {"sha": "d9c1b653217b0b528198dd744d5b389435b2b42c", "filename": "src/test/run-pass/import-glob-1.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d26a96d2bbf78dcb4b5b43bf95137731ad0db286/src%2Ftest%2Frun-pass%2Fimport-glob-1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d26a96d2bbf78dcb4b5b43bf95137731ad0db286/src%2Ftest%2Frun-pass%2Fimport-glob-1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fimport-glob-1.rs?ref=d26a96d2bbf78dcb4b5b43bf95137731ad0db286", "patch": "@@ -20,7 +20,7 @@ mod a1 {\n //   |   |   |\n mod a2 {\n     //   |   |   |\n-    native \"c-stack-cdecl\" mod b1 = \"\" {\n+    native \"cdecl\" mod b1 = \"\" {\n         //   |   |   |\n         import a1::b2::*;\n         //   | <-/  -/"}, {"sha": "6851bcd0783139abcd202457f3d86395b085f5e7", "filename": "src/test/run-pass/invoke-external-native.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d26a96d2bbf78dcb4b5b43bf95137731ad0db286/src%2Ftest%2Frun-pass%2Finvoke-external-native.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d26a96d2bbf78dcb4b5b43bf95137731ad0db286/src%2Ftest%2Frun-pass%2Finvoke-external-native.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Finvoke-external-native.rs?ref=d26a96d2bbf78dcb4b5b43bf95137731ad0db286", "patch": "@@ -3,7 +3,7 @@\n import std::sys;\n \n // The purpose of this test is to check that we can\n-// successfully (and safely) invoke external, c-stack-cdecl\n+// successfully (and safely) invoke external, cdecl\n // functions from outside the crate.\n \n fn main() {"}, {"sha": "033504e2e0d85c1bca80d5014504d1bd2bb81ece", "filename": "src/test/run-pass/item-attributes.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/d26a96d2bbf78dcb4b5b43bf95137731ad0db286/src%2Ftest%2Frun-pass%2Fitem-attributes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d26a96d2bbf78dcb4b5b43bf95137731ad0db286/src%2Ftest%2Frun-pass%2Fitem-attributes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fitem-attributes.rs?ref=d26a96d2bbf78dcb4b5b43bf95137731ad0db286", "patch": "@@ -29,7 +29,7 @@ mod test_single_attr_outer {\n     mod mod1 { }\n \n     #[attr = \"val\"]\n-    native \"c-stack-cdecl\" mod rustrt { }\n+    native \"cdecl\" mod rustrt { }\n \n     #[attr = \"val\"]\n     type t = obj { };\n@@ -55,7 +55,7 @@ mod test_multi_attr_outer {\n \n     #[attr1 = \"val\"]\n     #[attr2 = \"val\"]\n-    native \"c-stack-cdecl\" mod rustrt { }\n+    native \"cdecl\" mod rustrt { }\n \n     #[attr1 = \"val\"]\n     #[attr2 = \"val\"]\n@@ -83,7 +83,7 @@ mod test_stmt_single_attr_outer {\n         }\n \n         #[attr = \"val\"]\n-        native \"c-stack-cdecl\" mod rustrt {\n+        native \"cdecl\" mod rustrt {\n         }\n         */\n \n@@ -116,7 +116,7 @@ mod test_stmt_multi_attr_outer {\n \n         #[attr1 = \"val\"]\n         #[attr2 = \"val\"]\n-        native \"c-stack-cdecl\" mod rustrt {\n+        native \"cdecl\" mod rustrt {\n         }\n         */\n \n@@ -182,7 +182,7 @@ mod test_other_forms {\n }\n \n mod test_native_items {\n-    native \"c-stack-cdecl\" mod rustrt {\n+    native \"cdecl\" mod rustrt {\n         #[attr];\n \n         #[attr]"}, {"sha": "fe65719092e18240677e8fd65a992f4d3eae94f0", "filename": "src/test/run-pass/native-mod.rc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d26a96d2bbf78dcb4b5b43bf95137731ad0db286/src%2Ftest%2Frun-pass%2Fnative-mod.rc", "raw_url": "https://github.com/rust-lang/rust/raw/d26a96d2bbf78dcb4b5b43bf95137731ad0db286/src%2Ftest%2Frun-pass%2Fnative-mod.rc", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fnative-mod.rc?ref=d26a96d2bbf78dcb4b5b43bf95137731ad0db286", "patch": "@@ -10,7 +10,7 @@ native mod libc = target_libc {\n   fn free(int p) -> ();\n }\n \n-native \"c-stack-cdecl\" mod rustrt {\n+native \"cdecl\" mod rustrt {\n   fn str_buf(str s) -> int;\n }\n "}, {"sha": "6ec8b4dba6a737a281a56804e755058e05aba6a1", "filename": "src/test/run-pass/native-opaque-type.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d26a96d2bbf78dcb4b5b43bf95137731ad0db286/src%2Ftest%2Frun-pass%2Fnative-opaque-type.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d26a96d2bbf78dcb4b5b43bf95137731ad0db286/src%2Ftest%2Frun-pass%2Fnative-opaque-type.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fnative-opaque-type.rs?ref=d26a96d2bbf78dcb4b5b43bf95137731ad0db286", "patch": "@@ -1,6 +1,6 @@\n \n \n-native \"c-stack-cdecl\" mod libc = \"\" {\n+native \"cdecl\" mod libc = \"\" {\n     type file_handle;\n }\n "}, {"sha": "18993397002b354a6cf0304ef34fd0f3979026e7", "filename": "src/test/run-pass/native.rc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d26a96d2bbf78dcb4b5b43bf95137731ad0db286/src%2Ftest%2Frun-pass%2Fnative.rc", "raw_url": "https://github.com/rust-lang/rust/raw/d26a96d2bbf78dcb4b5b43bf95137731ad0db286/src%2Ftest%2Frun-pass%2Fnative.rc", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fnative.rc?ref=d26a96d2bbf78dcb4b5b43bf95137731ad0db286", "patch": "@@ -1,7 +1,7 @@\n // xfail-test\n // -*- rust -*-\n \n-native \"c-stack-cdecl\" mod rustrt {\n+native \"cdecl\" mod rustrt {\n   fn str_buf(str s) -> int;\n }\n "}, {"sha": "03b0038c0d6a781844b80a041e36832f68300752", "filename": "src/test/run-pass/native2.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/d26a96d2bbf78dcb4b5b43bf95137731ad0db286/src%2Ftest%2Frun-pass%2Fnative2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d26a96d2bbf78dcb4b5b43bf95137731ad0db286/src%2Ftest%2Frun-pass%2Fnative2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fnative2.rs?ref=d26a96d2bbf78dcb4b5b43bf95137731ad0db286", "patch": "@@ -1,17 +1,17 @@\n \n \n-native \"c-stack-cdecl\" mod rustrt {\n+native \"cdecl\" mod rustrt {\n     fn unsupervise();\n }\n \n-native \"c-stack-cdecl\" mod bar = \"\" { }\n+native \"cdecl\" mod bar = \"\" { }\n \n-native \"c-stack-cdecl\" mod zed = \"\" { }\n+native \"cdecl\" mod zed = \"\" { }\n \n-native \"c-stack-cdecl\" mod libc = \"\" {\n+native \"cdecl\" mod libc = \"\" {\n     fn write(fd: int, buf: *u8, count: uint) -> int;\n }\n \n-native \"c-stack-cdecl\" mod baz = \"\" { }\n+native \"cdecl\" mod baz = \"\" { }\n \n fn main(args: [str]) { }"}]}