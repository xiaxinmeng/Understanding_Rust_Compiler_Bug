{"sha": "defa497a04049be54596bb3a4efd193588155cd7", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRlZmE0OTdhMDQwNDliZTU0NTk2YmIzYTRlZmQxOTM1ODgxNTVjZDc=", "commit": {"author": {"name": "Martin Carton", "email": "cartonmartin+github@gmail.com", "date": "2016-09-10T17:18:29Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2016-09-10T17:18:29Z"}, "message": "Merge pull request #1221 from Manishearth/rustup\n\nRustup *1.13.0-nightly (f1f40f850 2016-09-09)* and bump to 0.0.90", "tree": {"sha": "bde47ed4a5313b9f13b63667083a0958064cdc0b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bde47ed4a5313b9f13b63667083a0958064cdc0b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/defa497a04049be54596bb3a4efd193588155cd7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/defa497a04049be54596bb3a4efd193588155cd7", "html_url": "https://github.com/rust-lang/rust/commit/defa497a04049be54596bb3a4efd193588155cd7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/defa497a04049be54596bb3a4efd193588155cd7/comments", "author": {"login": "mcarton", "id": 3751788, "node_id": "MDQ6VXNlcjM3NTE3ODg=", "avatar_url": "https://avatars.githubusercontent.com/u/3751788?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mcarton", "html_url": "https://github.com/mcarton", "followers_url": "https://api.github.com/users/mcarton/followers", "following_url": "https://api.github.com/users/mcarton/following{/other_user}", "gists_url": "https://api.github.com/users/mcarton/gists{/gist_id}", "starred_url": "https://api.github.com/users/mcarton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mcarton/subscriptions", "organizations_url": "https://api.github.com/users/mcarton/orgs", "repos_url": "https://api.github.com/users/mcarton/repos", "events_url": "https://api.github.com/users/mcarton/events{/privacy}", "received_events_url": "https://api.github.com/users/mcarton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7e12546a600fb51369ac36b8d7e309c1d92fe8bb", "url": "https://api.github.com/repos/rust-lang/rust/commits/7e12546a600fb51369ac36b8d7e309c1d92fe8bb", "html_url": "https://github.com/rust-lang/rust/commit/7e12546a600fb51369ac36b8d7e309c1d92fe8bb"}, {"sha": "7279dc3edfcea642f80eb1536af4fb35d612249f", "url": "https://api.github.com/repos/rust-lang/rust/commits/7279dc3edfcea642f80eb1536af4fb35d612249f", "html_url": "https://github.com/rust-lang/rust/commit/7279dc3edfcea642f80eb1536af4fb35d612249f"}], "stats": {"total": 49, "additions": 24, "deletions": 25}, "files": [{"sha": "f6163d54ef60ab9c83f4523ad611c2e801677f21", "filename": "CHANGELOG.md", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/defa497a04049be54596bb3a4efd193588155cd7/CHANGELOG.md", "raw_url": "https://github.com/rust-lang/rust/raw/defa497a04049be54596bb3a4efd193588155cd7/CHANGELOG.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/CHANGELOG.md?ref=defa497a04049be54596bb3a4efd193588155cd7", "patch": "@@ -1,6 +1,9 @@\n # Change Log\n All notable changes to this project will be documented in this file.\n \n+## 0.0.90 \u2014 2016-09-09\n+* Rustup to *rustc 1.13.0-dev (f1f40f850 2016-09-09)*\n+\n ## 0.0.89 \u2014 2016-09-06\n * Rustup to *rustc 1.13.0-nightly (cbe4de78e 2016-09-05)*\n "}, {"sha": "80f821a1b41c6dce1abee8389c6aeda517c0eef5", "filename": "Cargo.toml", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/defa497a04049be54596bb3a4efd193588155cd7/Cargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/defa497a04049be54596bb3a4efd193588155cd7/Cargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Cargo.toml?ref=defa497a04049be54596bb3a4efd193588155cd7", "patch": "@@ -1,6 +1,6 @@\n [package]\n name = \"clippy\"\n-version = \"0.0.89\"\n+version = \"0.0.90\"\n authors = [\n \t\"Manish Goregaokar <manishsmail@gmail.com>\",\n \t\"Andre Bogus <bogusandre@gmail.com>\",\n@@ -25,7 +25,7 @@ test = false\n \n [dependencies]\n # begin automatic update\n-clippy_lints = { version = \"0.0.89\", path = \"clippy_lints\" }\n+clippy_lints = { version = \"0.0.90\", path = \"clippy_lints\" }\n # end automatic update\n \n [dev-dependencies]"}, {"sha": "a7e863c29688c96294cb12f9f822c48b1c14641c", "filename": "clippy_lints/Cargo.toml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/defa497a04049be54596bb3a4efd193588155cd7/clippy_lints%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/defa497a04049be54596bb3a4efd193588155cd7/clippy_lints%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2FCargo.toml?ref=defa497a04049be54596bb3a4efd193588155cd7", "patch": "@@ -1,7 +1,7 @@\n [package]\n name = \"clippy_lints\"\n # begin automatic update\n-version = \"0.0.89\"\n+version = \"0.0.90\"\n # end automatic update\n authors = [\n \t\"Manish Goregaokar <manishsmail@gmail.com>\","}, {"sha": "89e90bff625f311ee65f5d50eff095f25a717add", "filename": "clippy_lints/src/derive.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/defa497a04049be54596bb3a4efd193588155cd7/clippy_lints%2Fsrc%2Fderive.rs", "raw_url": "https://github.com/rust-lang/rust/raw/defa497a04049be54596bb3a4efd193588155cd7/clippy_lints%2Fsrc%2Fderive.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fderive.rs?ref=defa497a04049be54596bb3a4efd193588155cd7", "patch": "@@ -141,11 +141,10 @@ fn check_copy_clone<'a, 'tcx>(cx: &LateContext<'a, 'tcx>, item: &Item, trait_ref\n         }\n \n         match ty.sty {\n-            TypeVariants::TyUnion(..) => return,\n+            TypeVariants::TyAdt(def, _) if def.is_union() => return,\n \n             // Some types are not Clone by default but could be cloned \u201cby hand\u201d if necessary\n-            TypeVariants::TyEnum(def, substs) |\n-            TypeVariants::TyStruct(def, substs) => {\n+            TypeVariants::TyAdt(def, substs) => {\n                 for variant in &def.variants {\n                     for field in &variant.fields {\n                         match field.ty(cx.tcx, substs).sty {"}, {"sha": "1d81b6dba22f42f7ddf6d876417ab8adca719d86", "filename": "clippy_lints/src/len_zero.rs", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/defa497a04049be54596bb3a4efd193588155cd7/clippy_lints%2Fsrc%2Flen_zero.rs", "raw_url": "https://github.com/rust-lang/rust/raw/defa497a04049be54596bb3a4efd193588155cd7/clippy_lints%2Fsrc%2Flen_zero.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Flen_zero.rs?ref=defa497a04049be54596bb3a4efd193588155cd7", "patch": "@@ -214,9 +214,7 @@ fn has_is_empty(cx: &LateContext, expr: &Expr) -> bool {\n               .map_or(false, |ids| ids.iter().any(|i| is_is_empty(cx, i)))\n         }\n         ty::TyProjection(_) => ty.ty_to_def_id().map_or(false, |id| has_is_empty_impl(cx, &id)),\n-        ty::TyEnum(id, _) |\n-        ty::TyStruct(id, _) |\n-        ty::TyUnion(id, _) => has_is_empty_impl(cx, &id.did),\n+        ty::TyAdt(id, _) => has_is_empty_impl(cx, &id.did),\n         ty::TyArray(..) | ty::TyStr => true,\n         _ => false,\n     }"}, {"sha": "c1b933d0121e81dcbbc2411eeb4e16ee22acc93d", "filename": "clippy_lints/src/methods.rs", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/defa497a04049be54596bb3a4efd193588155cd7/clippy_lints%2Fsrc%2Fmethods.rs", "raw_url": "https://github.com/rust-lang/rust/raw/defa497a04049be54596bb3a4efd193588155cd7/clippy_lints%2Fsrc%2Fmethods.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmethods.rs?ref=defa497a04049be54596bb3a4efd193588155cd7", "patch": "@@ -796,7 +796,7 @@ fn derefs_to_slice(cx: &LateContext, expr: &hir::Expr, ty: ty::Ty) -> Option<sug\n     fn may_slice(cx: &LateContext, ty: ty::Ty) -> bool {\n         match ty.sty {\n             ty::TySlice(_) => true,\n-            ty::TyStruct(..) => match_type(cx, ty, &paths::VEC),\n+            ty::TyAdt(..) => match_type(cx, ty, &paths::VEC),\n             ty::TyArray(_, size) => size < 32,\n             ty::TyRef(_, ty::TypeAndMut { ty: inner, .. }) |\n             ty::TyBox(inner) => may_slice(cx, inner),\n@@ -1081,12 +1081,12 @@ fn lint_single_char_pattern(cx: &LateContext, expr: &hir::Expr, arg: &hir::Expr)\n \n /// Given a `Result<T, E>` type, return its error type (`E`).\n fn get_error_type<'a>(cx: &LateContext, ty: ty::Ty<'a>) -> Option<ty::Ty<'a>> {\n-    if !match_type(cx, ty, &paths::RESULT) {\n-        return None;\n-    }\n-\n-    if let ty::TyEnum(_, substs) = ty.sty {\n-        substs.types().nth(1)\n+    if let ty::TyAdt(_, substs) = ty.sty {\n+        if match_type(cx, ty, &paths::RESULT) {\n+            substs.types().nth(1)\n+        } else {\n+            None\n+        }\n     } else {\n         None\n     }"}, {"sha": "a2117656f9d7851b5f0499e2046d4df65afae535", "filename": "clippy_lints/src/mutex_atomic.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/defa497a04049be54596bb3a4efd193588155cd7/clippy_lints%2Fsrc%2Fmutex_atomic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/defa497a04049be54596bb3a4efd193588155cd7/clippy_lints%2Fsrc%2Fmutex_atomic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmutex_atomic.rs?ref=defa497a04049be54596bb3a4efd193588155cd7", "patch": "@@ -57,7 +57,7 @@ pub struct MutexAtomic;\n impl LateLintPass for MutexAtomic {\n     fn check_expr(&mut self, cx: &LateContext, expr: &Expr) {\n         let ty = cx.tcx.expr_ty(expr);\n-        if let ty::TyStruct(_, subst) = ty.sty {\n+        if let ty::TyAdt(_, subst) = ty.sty {\n             if match_type(cx, ty, &paths::MUTEX) {\n                 let mutex_param = &subst.type_at(0).sty;\n                 if let Some(atomic_name) = get_atomic_name(mutex_param) {"}, {"sha": "9f607f4350d2a2259df65d8461e6d202b716b76a", "filename": "clippy_lints/src/needless_update.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/defa497a04049be54596bb3a4efd193588155cd7/clippy_lints%2Fsrc%2Fneedless_update.rs", "raw_url": "https://github.com/rust-lang/rust/raw/defa497a04049be54596bb3a4efd193588155cd7/clippy_lints%2Fsrc%2Fneedless_update.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fneedless_update.rs?ref=defa497a04049be54596bb3a4efd193588155cd7", "patch": "@@ -1,5 +1,5 @@\n use rustc::lint::{LateContext, LateLintPass, LintArray, LintPass};\n-use rustc::ty::TyStruct;\n+use rustc::ty::TyAdt;\n use rustc::hir::{Expr, ExprStruct};\n use utils::span_lint;\n \n@@ -34,7 +34,7 @@ impl LateLintPass for Pass {\n     fn check_expr(&mut self, cx: &LateContext, expr: &Expr) {\n         if let ExprStruct(_, ref fields, Some(ref base)) = expr.node {\n             let ty = cx.tcx.expr_ty(expr);\n-            if let TyStruct(def, _) = ty.sty {\n+            if let TyAdt(def, _) = ty.sty {\n                 if fields.len() == def.struct_variant().fields.len() {\n                     span_lint(cx,\n                               NEEDLESS_UPDATE,"}, {"sha": "538d3abd5ea430fb204d299968862a33683bdff6", "filename": "clippy_lints/src/new_without_default.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/defa497a04049be54596bb3a4efd193588155cd7/clippy_lints%2Fsrc%2Fnew_without_default.rs", "raw_url": "https://github.com/rust-lang/rust/raw/defa497a04049be54596bb3a4efd193588155cd7/clippy_lints%2Fsrc%2Fnew_without_default.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fnew_without_default.rs?ref=defa497a04049be54596bb3a4efd193588155cd7", "patch": "@@ -146,7 +146,7 @@ impl LateLintPass for NewWithoutDefault {\n \n fn can_derive_default<'t, 'c>(ty: ty::Ty<'t>, cx: &LateContext<'c, 't>, default_trait_id: DefId) -> bool {\n     match ty.sty {\n-        ty::TyStruct(adt_def, substs) => {\n+        ty::TyAdt(adt_def, substs) if adt_def.is_struct() => {\n             for field in adt_def.all_fields() {\n                 let f_ty = field.ty(cx.tcx, substs);\n                 if !implements_trait(cx, f_ty, default_trait_id, Vec::new()) {"}, {"sha": "31f0c9c8e000d2ebd748f7f93488ae9c09e2f959", "filename": "clippy_lints/src/utils/mod.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/defa497a04049be54596bb3a4efd193588155cd7/clippy_lints%2Fsrc%2Futils%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/defa497a04049be54596bb3a4efd193588155cd7/clippy_lints%2Fsrc%2Futils%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Futils%2Fmod.rs?ref=defa497a04049be54596bb3a4efd193588155cd7", "patch": "@@ -152,11 +152,10 @@ pub fn match_def_path(cx: &LateContext, def_id: DefId, path: &[&str]) -> bool {\n     apb.names == path\n }\n \n-/// Check if type is struct or enum type with given def path.\n+/// Check if type is struct, enum or union type with given def path.\n pub fn match_type(cx: &LateContext, ty: ty::Ty, path: &[&str]) -> bool {\n     match ty.sty {\n-        ty::TyEnum(adt, _) |\n-        ty::TyStruct(adt, _) => match_def_path(cx, adt.did, path),\n+        ty::TyAdt(adt, _) => match_def_path(cx, adt.did, path),\n         _ => false,\n     }\n }"}, {"sha": "06d3d040ccdc57237befdbe13d3f7cce04d9c61f", "filename": "clippy_lints/src/vec.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/defa497a04049be54596bb3a4efd193588155cd7/clippy_lints%2Fsrc%2Fvec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/defa497a04049be54596bb3a4efd193588155cd7/clippy_lints%2Fsrc%2Fvec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fvec.rs?ref=defa497a04049be54596bb3a4efd193588155cd7", "patch": "@@ -88,7 +88,7 @@ fn check_vec_macro(cx: &LateContext, vec_args: &higher::VecArgs, span: Span) {\n \n /// Return the item type of the vector (ie. the `T` in `Vec<T>`).\n fn vec_type(ty: ty::Ty) -> ty::Ty {\n-    if let ty::TyStruct(_, substs) = ty.sty {\n+    if let ty::TyAdt(_, substs) = ty.sty {\n         substs.type_at(0)\n     } else {\n         panic!(\"The type of `vec!` is a not a struct?\");"}, {"sha": "8e185f24b1f992ce39f56439f4b8df17033cca4a", "filename": "tests/compile-fail/escape_analysis.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/defa497a04049be54596bb3a4efd193588155cd7/tests%2Fcompile-fail%2Fescape_analysis.rs", "raw_url": "https://github.com/rust-lang/rust/raw/defa497a04049be54596bb3a4efd193588155cd7/tests%2Fcompile-fail%2Fescape_analysis.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompile-fail%2Fescape_analysis.rs?ref=defa497a04049be54596bb3a4efd193588155cd7", "patch": "@@ -31,7 +31,7 @@ fn ok_box_trait(boxed_trait: &Box<Z>) {\n \n fn warn_call() {\n     let x = box A; //~ ERROR local variable\n-    x.foo(); \n+    x.foo();\n }\n \n fn warn_arg(x: Box<A>) { //~ ERROR local variable"}]}