{"sha": "773ad2edb3b84bf20378a577bc4cd808384de078", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc3M2FkMmVkYjNiODRiZjIwMzc4YTU3N2JjNGNkODA4Mzg0ZGUwNzg=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-07-21T10:34:15Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-07-21T10:34:15Z"}, "message": "simiplify", "tree": {"sha": "867145208375ea242078f6a3e3237d8fb76c5be9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/867145208375ea242078f6a3e3237d8fb76c5be9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/773ad2edb3b84bf20378a577bc4cd808384de078", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/773ad2edb3b84bf20378a577bc4cd808384de078", "html_url": "https://github.com/rust-lang/rust/commit/773ad2edb3b84bf20378a577bc4cd808384de078", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/773ad2edb3b84bf20378a577bc4cd808384de078/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d52ee59a712932bc381d8c690dc2f681598760fe", "url": "https://api.github.com/repos/rust-lang/rust/commits/d52ee59a712932bc381d8c690dc2f681598760fe", "html_url": "https://github.com/rust-lang/rust/commit/d52ee59a712932bc381d8c690dc2f681598760fe"}], "stats": {"total": 21, "additions": 10, "deletions": 11}, "files": [{"sha": "7f69b86e15ab0ee90d7fcfdce6e59ccaee7c070b", "filename": "crates/ra_syntax/src/lib.rs", "status": "modified", "additions": 7, "deletions": 8, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/773ad2edb3b84bf20378a577bc4cd808384de078/crates%2Fra_syntax%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/773ad2edb3b84bf20378a577bc4cd808384de078/crates%2Fra_syntax%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Fsrc%2Flib.rs?ref=773ad2edb3b84bf20378a577bc4cd808384de078", "patch": "@@ -143,18 +143,17 @@ impl Parse<SourceFile> {\n pub use crate::ast::SourceFile;\n \n impl SourceFile {\n-    fn new(green: GreenNode) -> SourceFile {\n-        let root = SyntaxNode::new_root(green);\n+    pub fn parse(text: &str) -> Parse<SourceFile> {\n+        let (green, mut errors) = parsing::parse_text(text);\n+        let root = SyntaxNode::new_root(green.clone());\n+\n         if cfg!(debug_assertions) {\n             validation::validate_block_structure(&root);\n         }\n-        assert_eq!(root.kind(), SyntaxKind::SOURCE_FILE);\n-        SourceFile::cast(root).unwrap()\n-    }\n \n-    pub fn parse(text: &str) -> Parse<SourceFile> {\n-        let (green, mut errors) = parsing::parse_text(text);\n-        errors.extend(validation::validate(&SourceFile::new(green.clone())));\n+        errors.extend(validation::validate(&root));\n+\n+        assert_eq!(root.kind(), SyntaxKind::SOURCE_FILE);\n         Parse { green, errors: Arc::new(errors), _ty: PhantomData }\n     }\n }"}, {"sha": "e03c02d1ba0539f8b2009eeb3460b2b6400ba5ef", "filename": "crates/ra_syntax/src/validation.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/773ad2edb3b84bf20378a577bc4cd808384de078/crates%2Fra_syntax%2Fsrc%2Fvalidation.rs", "raw_url": "https://github.com/rust-lang/rust/raw/773ad2edb3b84bf20378a577bc4cd808384de078/crates%2Fra_syntax%2Fsrc%2Fvalidation.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Fsrc%2Fvalidation.rs?ref=773ad2edb3b84bf20378a577bc4cd808384de078", "patch": "@@ -5,16 +5,16 @@ mod field_expr;\n \n use crate::{\n     algo::visit::{visitor_ctx, VisitorCtx},\n-    ast, AstNode, SourceFile, SyntaxError,\n+    ast, SyntaxError,\n     SyntaxKind::{BYTE, BYTE_STRING, CHAR, STRING},\n     SyntaxNode, TextUnit, T,\n };\n \n pub(crate) use unescape::EscapeError;\n \n-pub(crate) fn validate(file: &SourceFile) -> Vec<SyntaxError> {\n+pub(crate) fn validate(root: &SyntaxNode) -> Vec<SyntaxError> {\n     let mut errors = Vec::new();\n-    for node in file.syntax().descendants() {\n+    for node in root.descendants() {\n         let _ = visitor_ctx(&mut errors)\n             .visit::<ast::Literal, _>(validate_literal)\n             .visit::<ast::Block, _>(block::validate_block_node)"}]}