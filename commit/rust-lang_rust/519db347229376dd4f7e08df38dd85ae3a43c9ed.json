{"sha": "519db347229376dd4f7e08df38dd85ae3a43c9ed", "node_id": "MDY6Q29tbWl0NzI0NzEyOjUxOWRiMzQ3MjI5Mzc2ZGQ0ZjdlMDhkZjM4ZGQ4NWFlM2E0M2M5ZWQ=", "commit": {"author": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2013-12-19T02:15:27Z"}, "committer": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2013-12-26T21:01:24Z"}, "message": "librustc: De-`@mut` `CrateContext::tydescs`", "tree": {"sha": "09e290b1f3a6502eeeec942da08e2796feec2fea", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/09e290b1f3a6502eeeec942da08e2796feec2fea"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/519db347229376dd4f7e08df38dd85ae3a43c9ed", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/519db347229376dd4f7e08df38dd85ae3a43c9ed", "html_url": "https://github.com/rust-lang/rust/commit/519db347229376dd4f7e08df38dd85ae3a43c9ed", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/519db347229376dd4f7e08df38dd85ae3a43c9ed/comments", "author": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b5aa6eb69fce2a1cda2e12b770d5242ea14a3a3d", "url": "https://api.github.com/repos/rust-lang/rust/commits/b5aa6eb69fce2a1cda2e12b770d5242ea14a3a3d", "html_url": "https://github.com/rust-lang/rust/commit/b5aa6eb69fce2a1cda2e12b770d5242ea14a3a3d"}], "stats": {"total": 21, "additions": 12, "deletions": 9}, "files": [{"sha": "6462612ced717139f0cf40481765fe15f33759c2", "filename": "src/librustc/middle/trans/base.rs", "status": "modified", "additions": 8, "deletions": 5, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/519db347229376dd4f7e08df38dd85ae3a43c9ed/src%2Flibrustc%2Fmiddle%2Ftrans%2Fbase.rs", "raw_url": "https://github.com/rust-lang/rust/raw/519db347229376dd4f7e08df38dd85ae3a43c9ed/src%2Flibrustc%2Fmiddle%2Ftrans%2Fbase.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftrans%2Fbase.rs?ref=519db347229376dd4f7e08df38dd85ae3a43c9ed", "patch": "@@ -439,16 +439,19 @@ pub fn get_tydesc_simple(ccx: &mut CrateContext, t: ty::t) -> ValueRef {\n }\n \n pub fn get_tydesc(ccx: &mut CrateContext, t: ty::t) -> @mut tydesc_info {\n-    match ccx.tydescs.find(&t) {\n-        Some(&inf) => {\n-            return inf;\n+    {\n+        let tydescs = ccx.tydescs.borrow();\n+        match tydescs.get().find(&t) {\n+            Some(&inf) => return inf,\n+            _ => { }\n         }\n-        _ => { }\n     }\n \n     ccx.stats.n_static_tydescs += 1u;\n     let inf = glue::declare_tydesc(ccx, t);\n-    ccx.tydescs.insert(t, inf);\n+\n+    let mut tydescs = ccx.tydescs.borrow_mut();\n+    tydescs.get().insert(t, inf);\n     return inf;\n }\n "}, {"sha": "9d27ba9b297c0cec18b637907bd78da247d22b99", "filename": "src/librustc/middle/trans/context.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/519db347229376dd4f7e08df38dd85ae3a43c9ed/src%2Flibrustc%2Fmiddle%2Ftrans%2Fcontext.rs", "raw_url": "https://github.com/rust-lang/rust/raw/519db347229376dd4f7e08df38dd85ae3a43c9ed/src%2Flibrustc%2Fmiddle%2Ftrans%2Fcontext.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftrans%2Fcontext.rs?ref=519db347229376dd4f7e08df38dd85ae3a43c9ed", "patch": "@@ -52,7 +52,7 @@ pub struct CrateContext {\n      reachable: @mut HashSet<ast::NodeId>,\n      item_symbols: RefCell<HashMap<ast::NodeId, ~str>>,\n      link_meta: LinkMeta,\n-     tydescs: HashMap<ty::t, @mut tydesc_info>,\n+     tydescs: RefCell<HashMap<ty::t, @mut tydesc_info>>,\n      // Set when running emit_tydescs to enforce that no more tydescs are\n      // created.\n      finished_tydescs: bool,\n@@ -188,7 +188,7 @@ impl CrateContext {\n                   reachable: reachable,\n                   item_symbols: RefCell::new(HashMap::new()),\n                   link_meta: link_meta,\n-                  tydescs: HashMap::new(),\n+                  tydescs: RefCell::new(HashMap::new()),\n                   finished_tydescs: false,\n                   external: HashMap::new(),\n                   external_srcs: HashMap::new(),"}, {"sha": "32b4bb489a17ab7484efb8612ceb388258a721fb", "filename": "src/librustc/middle/trans/glue.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/519db347229376dd4f7e08df38dd85ae3a43c9ed/src%2Flibrustc%2Fmiddle%2Ftrans%2Fglue.rs", "raw_url": "https://github.com/rust-lang/rust/raw/519db347229376dd4f7e08df38dd85ae3a43c9ed/src%2Flibrustc%2Fmiddle%2Ftrans%2Fglue.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftrans%2Fglue.rs?ref=519db347229376dd4f7e08df38dd85ae3a43c9ed", "patch": "@@ -696,8 +696,8 @@ pub fn emit_tydescs(ccx: &mut CrateContext) {\n     // As of this point, allow no more tydescs to be created.\n     ccx.finished_tydescs = true;\n     let glue_fn_ty = Type::generic_glue_fn(ccx).ptr_to();\n-    let tyds = &mut ccx.tydescs;\n-    for (_, &val) in tyds.iter() {\n+    let mut tyds = ccx.tydescs.borrow_mut();\n+    for (_, &val) in tyds.get().iter() {\n         let ti = val;\n \n         // Each of the glue functions needs to be cast to a generic type"}]}