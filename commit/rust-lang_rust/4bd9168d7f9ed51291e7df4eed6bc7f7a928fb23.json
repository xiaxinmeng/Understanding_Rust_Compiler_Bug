{"sha": "4bd9168d7f9ed51291e7df4eed6bc7f7a928fb23", "node_id": "MDY6Q29tbWl0NzI0NzEyOjRiZDkxNjhkN2Y5ZWQ1MTI5MWU3ZGY0ZWVkNmJjN2Y3YTkyOGZiMjM=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-11-20T17:32:10Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-11-20T17:32:10Z"}, "message": "Rollup merge of #66514 - GuillaumeGomez:fix-search-filter-save, r=kinnison\n\nFix selected crate search filter\n\nFixes #62929.\n\nr? @kinnison", "tree": {"sha": "f2c45146a93236599116c7608f7976450a6babac", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f2c45146a93236599116c7608f7976450a6babac"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4bd9168d7f9ed51291e7df4eed6bc7f7a928fb23", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJd1XiaCRBK7hj4Ov3rIwAAdHIIAEAhnn9ndze6tuhJSriLHA7D\nwf1pz/OpmUBci8h1zwHqSJwM4vJ0ANKcsGHuBZ81QFaHoZssqFpssy4ZwYNtq9ox\nOUgLjombRaI4uYSFvaDWoLWy71LpuGV9cjTc4dhq7J60MI9rA/CLNq6r3qB3UlgK\n9yWnGc/YmrDJMG8hYyqirkIXLrtEAUBK5RjbOIbV7u+QcdjNHT3tlGNeyOG1vnDm\n7p29X3wKO3/d3z6q0UxsmzwzdesH0YL8mTzSpV8I08uxqI0EluOS39H8CtqVG0MO\nVZOTMR9tECN6/ME0L5NN7VDSsiMgOKN9JPT9au1u6c72fSELBzd5xkJrVPlEKCE=\n=PoFa\n-----END PGP SIGNATURE-----\n", "payload": "tree f2c45146a93236599116c7608f7976450a6babac\nparent 5a84f9b86ec3e2b5b6393faebeeaa96dc6c21192\nparent 00ef5c1b9877c309fc4814fa2f0c8022266feee6\nauthor Mazdak Farrokhzad <twingoow@gmail.com> 1574271130 +0100\ncommitter GitHub <noreply@github.com> 1574271130 +0100\n\nRollup merge of #66514 - GuillaumeGomez:fix-search-filter-save, r=kinnison\n\nFix selected crate search filter\n\nFixes #62929.\n\nr? @kinnison\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4bd9168d7f9ed51291e7df4eed6bc7f7a928fb23", "html_url": "https://github.com/rust-lang/rust/commit/4bd9168d7f9ed51291e7df4eed6bc7f7a928fb23", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4bd9168d7f9ed51291e7df4eed6bc7f7a928fb23/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5a84f9b86ec3e2b5b6393faebeeaa96dc6c21192", "url": "https://api.github.com/repos/rust-lang/rust/commits/5a84f9b86ec3e2b5b6393faebeeaa96dc6c21192", "html_url": "https://github.com/rust-lang/rust/commit/5a84f9b86ec3e2b5b6393faebeeaa96dc6c21192"}, {"sha": "00ef5c1b9877c309fc4814fa2f0c8022266feee6", "url": "https://api.github.com/repos/rust-lang/rust/commits/00ef5c1b9877c309fc4814fa2f0c8022266feee6", "html_url": "https://github.com/rust-lang/rust/commit/00ef5c1b9877c309fc4814fa2f0c8022266feee6"}], "stats": {"total": 29, "additions": 13, "deletions": 16}, "files": [{"sha": "bd2a6602e16bee657c9778ed87ae49f492e08c22", "filename": "src/librustdoc/html/render.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/4bd9168d7f9ed51291e7df4eed6bc7f7a928fb23/src%2Flibrustdoc%2Fhtml%2Frender.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4bd9168d7f9ed51291e7df4eed6bc7f7a928fb23/src%2Flibrustdoc%2Fhtml%2Frender.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Frender.rs?ref=4bd9168d7f9ed51291e7df4eed6bc7f7a928fb23", "patch": "@@ -882,7 +882,9 @@ themePicker.onblur = handleThemeButtonsBlur;\n         v.push_str(&minify_replacer(\n             &format!(\"{}\\n{}\", variables.join(\"\"), all_indexes.join(\"\\n\")),\n             options.enable_minification));\n-        v.push_str(\"initSearch(searchIndex);addSearchOptions(searchIndex);\");\n+        // \"addSearchOptions\" has to be called first so the crate filtering can be set before the\n+        // search might start (if it's set into the URL for example).\n+        v.push_str(\"addSearchOptions(searchIndex);initSearch(searchIndex);\");\n         cx.shared.fs.write(&dst, &v)?;\n     }\n     if options.enable_index_page {"}, {"sha": "cc0f470b3492030af9fd65fddd68aed520ded815", "filename": "src/librustdoc/html/static/main.js", "status": "modified", "additions": 10, "deletions": 15, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/4bd9168d7f9ed51291e7df4eed6bc7f7a928fb23/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fmain.js", "raw_url": "https://github.com/rust-lang/rust/raw/4bd9168d7f9ed51291e7df4eed6bc7f7a928fb23/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fmain.js", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fmain.js?ref=4bd9168d7f9ed51291e7df4eed6bc7f7a928fb23", "patch": "@@ -521,21 +521,6 @@ function getSearchElement() {\n         var OUTPUT_DATA = 1;\n         var params = getQueryStringParams();\n \n-        // Set the crate filter from saved storage, if the current page has the saved crate filter.\n-        //\n-        // If not, ignore the crate filter -- we want to support filtering for crates on sites like\n-        // doc.rust-lang.org where the crates may differ from page to page while on the same domain.\n-        var savedCrate = getCurrentValue(\"rustdoc-saved-filter-crate\");\n-        if (savedCrate !== null) {\n-            onEachLazy(document.getElementById(\"crate-search\").getElementsByTagName(\"option\"),\n-                       function(e) {\n-                if (e.value === savedCrate) {\n-                    document.getElementById(\"crate-search\").value = e.value;\n-                    return true;\n-                }\n-            });\n-        }\n-\n         // Populate search bar with query string search term when provided,\n         // but only if the input bar is empty. This avoid the obnoxious issue\n         // where you start trying to do a search, and the index loads, and\n@@ -2629,11 +2614,21 @@ function getSearchElement() {\n             }\n             return 0;\n         });\n+        var savedCrate = getCurrentValue(\"rustdoc-saved-filter-crate\");\n         for (var i = 0; i < crates_text.length; ++i) {\n             var option = document.createElement(\"option\");\n             option.value = crates_text[i];\n             option.innerText = crates_text[i];\n             elem.appendChild(option);\n+            // Set the crate filter from saved storage, if the current page has the saved crate\n+            // filter.\n+            //\n+            // If not, ignore the crate filter -- we want to support filtering for crates on sites\n+            // like doc.rust-lang.org where the crates may differ from page to page while on the\n+            // same domain.\n+            if (crates_text[i] === savedCrate) {\n+                elem.value = savedCrate;\n+            }\n         }\n \n         if (search_input) {"}]}