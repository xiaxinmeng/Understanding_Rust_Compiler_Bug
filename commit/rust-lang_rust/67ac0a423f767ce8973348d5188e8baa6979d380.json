{"sha": "67ac0a423f767ce8973348d5188e8baa6979d380", "node_id": "MDY6Q29tbWl0NzI0NzEyOjY3YWMwYTQyM2Y3NjdjZTg5NzMzNDhkNTE4OGU4YmFhNjk3OWQzODA=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2018-12-21T18:06:01Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2018-12-21T18:06:01Z"}, "message": "join lines collapses use_trees", "tree": {"sha": "61a81b86d3a08038641439cbba19b500619beb56", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/61a81b86d3a08038641439cbba19b500619beb56"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/67ac0a423f767ce8973348d5188e8baa6979d380", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/67ac0a423f767ce8973348d5188e8baa6979d380", "html_url": "https://github.com/rust-lang/rust/commit/67ac0a423f767ce8973348d5188e8baa6979d380", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/67ac0a423f767ce8973348d5188e8baa6979d380/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a106784115b5f55b9bbc4d9f72464bdc31cf5cda", "url": "https://api.github.com/repos/rust-lang/rust/commits/a106784115b5f55b9bbc4d9f72464bdc31cf5cda", "html_url": "https://github.com/rust-lang/rust/commit/a106784115b5f55b9bbc4d9f72464bdc31cf5cda"}], "stats": {"total": 58, "additions": 58, "deletions": 0}, "files": [{"sha": "5e412bcfa08f61c5c7a0731b80aff9112e26abe1", "filename": "crates/ra_editor/src/typing.rs", "status": "modified", "additions": 58, "deletions": 0, "changes": 58, "blob_url": "https://github.com/rust-lang/rust/blob/67ac0a423f767ce8973348d5188e8baa6979d380/crates%2Fra_editor%2Fsrc%2Ftyping.rs", "raw_url": "https://github.com/rust-lang/rust/raw/67ac0a423f767ce8973348d5188e8baa6979d380/crates%2Fra_editor%2Fsrc%2Ftyping.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_editor%2Fsrc%2Ftyping.rs?ref=67ac0a423f767ce8973348d5188e8baa6979d380", "patch": "@@ -164,6 +164,16 @@ fn remove_newline(\n     if join_single_expr_block(edit, node).is_some() {\n         return;\n     }\n+    // ditto for\n+    //\n+    // ```\n+    // use foo::{<|>\n+    //    bar\n+    // };\n+    // ```\n+    if join_single_use_tree(edit, node).is_some() {\n+        return;\n+    }\n \n     // The node is between two other nodes\n     let prev = node.prev_sibling().unwrap();\n@@ -228,6 +238,36 @@ fn single_expr(block: ast::Block) -> Option<ast::Expr> {\n     res\n }\n \n+fn join_single_use_tree(edit: &mut TextEditBuilder, node: SyntaxNodeRef) -> Option<()> {\n+    let use_tree_list = ast::UseTreeList::cast(node.parent()?)?;\n+    let tree = single_use_tree(use_tree_list)?;\n+    edit.replace(\n+        use_tree_list.syntax().range(),\n+        tree.syntax().text().to_string(),\n+    );\n+    Some(())\n+}\n+\n+fn single_use_tree(tree_list: ast::UseTreeList) -> Option<ast::UseTree> {\n+    let mut res = None;\n+    for child in tree_list.syntax().children() {\n+        if let Some(tree) = ast::UseTree::cast(child) {\n+            if tree.syntax().text().contains('\\n') {\n+                return None;\n+            }\n+            if mem::replace(&mut res, Some(tree)).is_some() {\n+                return None;\n+            }\n+        } else {\n+            match child.kind() {\n+                WHITESPACE | L_CURLY | R_CURLY | COMMA => (),\n+                _ => return None,\n+            }\n+        }\n+    }\n+    res\n+}\n+\n fn compute_ws(left: SyntaxNodeRef, right: SyntaxNodeRef) -> &'static str {\n     match left.kind() {\n         L_PAREN | L_BRACK => return \"\",\n@@ -305,6 +345,24 @@ fn foo() {\n         );\n     }\n \n+    #[test]\n+    fn test_join_lines_use_tree() {\n+        check_join_lines(\n+            r\"\n+use ra_syntax::{\n+    algo::<|>{\n+        find_leaf_at_offset,\n+    },\n+    ast,\n+};\",\n+            r\"\n+use ra_syntax::{\n+    algo::<|>find_leaf_at_offset,\n+    ast,\n+};\",\n+        );\n+    }\n+\n     #[test]\n     fn test_join_lines_normal_comments() {\n         check_join_lines("}]}