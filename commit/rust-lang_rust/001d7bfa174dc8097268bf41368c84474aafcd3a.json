{"sha": "001d7bfa174dc8097268bf41368c84474aafcd3a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjAwMWQ3YmZhMTc0ZGM4MDk3MjY4YmY0MTM2OGM4NDQ3NGFhZmNkM2E=", "commit": {"author": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2011-01-04T04:39:33Z"}, "committer": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2011-01-04T04:39:33Z"}, "message": "Add _str.starts_with and ends_with.", "tree": {"sha": "78723f9f97fcdecda130629620727a94e533c7c2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/78723f9f97fcdecda130629620727a94e533c7c2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/001d7bfa174dc8097268bf41368c84474aafcd3a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/001d7bfa174dc8097268bf41368c84474aafcd3a", "html_url": "https://github.com/rust-lang/rust/commit/001d7bfa174dc8097268bf41368c84474aafcd3a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/001d7bfa174dc8097268bf41368c84474aafcd3a/comments", "author": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "committer": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "546f1e98cb0da4a4f72b9f64afd0e38e6ea45c08", "url": "https://api.github.com/repos/rust-lang/rust/commits/546f1e98cb0da4a4f72b9f64afd0e38e6ea45c08", "html_url": "https://github.com/rust-lang/rust/commit/546f1e98cb0da4a4f72b9f64afd0e38e6ea45c08"}], "stats": {"total": 29, "additions": 29, "deletions": 0}, "files": [{"sha": "6b7ac018e575c177e90e946723457f3fdc58d7c4", "filename": "src/lib/_str.rs", "status": "modified", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/001d7bfa174dc8097268bf41368c84474aafcd3a/src%2Flib%2F_str.rs", "raw_url": "https://github.com/rust-lang/rust/raw/001d7bfa174dc8097268bf41368c84474aafcd3a/src%2Flib%2F_str.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flib%2F_str.rs?ref=001d7bfa174dc8097268bf41368c84474aafcd3a", "patch": "@@ -188,6 +188,35 @@ fn find(str haystack, str needle) -> int {\n     ret  -1;\n }\n \n+fn starts_with(str haystack, str needle) -> bool {\n+    let uint haystack_len = byte_len(haystack);\n+    let uint needle_len = byte_len(needle);\n+    if (needle_len == 0u) {\n+        ret true;\n+    }\n+    if (needle_len > haystack_len) {\n+        ret false;\n+    }\n+    ret eq(substr(haystack, 0u, needle_len), needle);\n+}\n+\n+\n+fn ends_with(str haystack, str needle) -> bool {\n+    let uint haystack_len = byte_len(haystack);\n+    let uint needle_len = byte_len(needle);\n+    if (needle_len == 0u) {\n+        ret true;\n+    }\n+    if (needle_len > haystack_len) {\n+        ret false;\n+    }\n+    ret eq(substr(haystack,\n+                  haystack_len - needle_len,\n+                  needle_len),\n+           needle);\n+}\n+\n+\n fn substr(str s, uint begin, uint len) -> str {\n     let str accum = \"\";\n     let uint i = begin;"}]}