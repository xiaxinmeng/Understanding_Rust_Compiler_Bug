{"sha": "751dcdf606d4ff3b27b1c820535304bfb022170c", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc1MWRjZGY2MDZkNGZmM2IyN2IxYzgyMDUzNTMwNGJmYjAyMjE3MGM=", "commit": {"author": {"name": "varkor", "email": "github@varkor.com", "date": "2019-02-05T15:48:45Z"}, "committer": {"name": "varkor", "email": "github@varkor.com", "date": "2019-02-07T14:02:16Z"}, "message": "Add Const kind to AST\n\nCo-Authored-By: Gabriel Smith <yodaldevoid@users.noreply.github.com>", "tree": {"sha": "1bf7bd3afbfcf1f51351cbb954f22e2d6bd5d411", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1bf7bd3afbfcf1f51351cbb954f22e2d6bd5d411"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/751dcdf606d4ff3b27b1c820535304bfb022170c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/751dcdf606d4ff3b27b1c820535304bfb022170c", "html_url": "https://github.com/rust-lang/rust/commit/751dcdf606d4ff3b27b1c820535304bfb022170c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/751dcdf606d4ff3b27b1c820535304bfb022170c/comments", "author": {"login": "varkor", "id": 3943692, "node_id": "MDQ6VXNlcjM5NDM2OTI=", "avatar_url": "https://avatars.githubusercontent.com/u/3943692?v=4", "gravatar_id": "", "url": "https://api.github.com/users/varkor", "html_url": "https://github.com/varkor", "followers_url": "https://api.github.com/users/varkor/followers", "following_url": "https://api.github.com/users/varkor/following{/other_user}", "gists_url": "https://api.github.com/users/varkor/gists{/gist_id}", "starred_url": "https://api.github.com/users/varkor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/varkor/subscriptions", "organizations_url": "https://api.github.com/users/varkor/orgs", "repos_url": "https://api.github.com/users/varkor/repos", "events_url": "https://api.github.com/users/varkor/events{/privacy}", "received_events_url": "https://api.github.com/users/varkor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "varkor", "id": 3943692, "node_id": "MDQ6VXNlcjM5NDM2OTI=", "avatar_url": "https://avatars.githubusercontent.com/u/3943692?v=4", "gravatar_id": "", "url": "https://api.github.com/users/varkor", "html_url": "https://github.com/varkor", "followers_url": "https://api.github.com/users/varkor/followers", "following_url": "https://api.github.com/users/varkor/following{/other_user}", "gists_url": "https://api.github.com/users/varkor/gists{/gist_id}", "starred_url": "https://api.github.com/users/varkor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/varkor/subscriptions", "organizations_url": "https://api.github.com/users/varkor/orgs", "repos_url": "https://api.github.com/users/varkor/repos", "events_url": "https://api.github.com/users/varkor/events{/privacy}", "received_events_url": "https://api.github.com/users/varkor/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ad433894abd4231fb2102416a520ae995ee09aed", "url": "https://api.github.com/repos/rust-lang/rust/commits/ad433894abd4231fb2102416a520ae995ee09aed", "html_url": "https://github.com/rust-lang/rust/commit/ad433894abd4231fb2102416a520ae995ee09aed"}], "stats": {"total": 16, "additions": 13, "deletions": 3}, "files": [{"sha": "57a3bf86b0e5185deef9b836710cd91eb505f63b", "filename": "src/libsyntax/ast.rs", "status": "modified", "additions": 13, "deletions": 3, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/751dcdf606d4ff3b27b1c820535304bfb022170c/src%2Flibsyntax%2Fast.rs", "raw_url": "https://github.com/rust-lang/rust/raw/751dcdf606d4ff3b27b1c820535304bfb022170c/src%2Flibsyntax%2Fast.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fast.rs?ref=751dcdf606d4ff3b27b1c820535304bfb022170c", "patch": "@@ -167,6 +167,17 @@ impl GenericArgs {\n pub enum GenericArg {\n     Lifetime(Lifetime),\n     Type(P<Ty>),\n+    Const(AnonConst),\n+}\n+\n+impl GenericArg {\n+    pub fn span(&self) -> Span {\n+        match self {\n+            GenericArg::Lifetime(lt) => lt.ident.span,\n+            GenericArg::Type(ty) => ty.span,\n+            GenericArg::Const(ct) => ct.value.span,\n+        }\n+    }\n }\n \n /// A path like `Foo<'a, T>`\n@@ -300,9 +311,8 @@ pub type GenericBounds = Vec<GenericBound>;\n pub enum GenericParamKind {\n     /// A lifetime definition (e.g., `'a: 'b + 'c + 'd`).\n     Lifetime,\n-    Type {\n-        default: Option<P<Ty>>,\n-    },\n+    Type { default: Option<P<Ty>> },\n+    Const { ty: P<Ty> },\n }\n \n #[derive(Clone, RustcEncodable, RustcDecodable, Debug)]"}]}