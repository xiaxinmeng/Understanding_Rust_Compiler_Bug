{"sha": "9b5766cd24554427c2f5fb283c1f09718804cfd0", "node_id": "C_kwDOAAsO6NoAKDliNTc2NmNkMjQ1NTQ0MjdjMmY1ZmIyODNjMWYwOTcxODgwNGNmZDA", "commit": {"author": {"name": "Scott McMurray", "email": "scottmcm@users.noreply.github.com", "date": "2022-04-25T02:59:23Z"}, "committer": {"name": "Scott McMurray", "email": "scottmcm@users.noreply.github.com", "date": "2022-05-01T01:09:57Z"}, "message": "Bless the UI tests", "tree": {"sha": "0aa628968e3e9415e4378777cc7f8ea2e2bdb33f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0aa628968e3e9415e4378777cc7f8ea2e2bdb33f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9b5766cd24554427c2f5fb283c1f09718804cfd0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9b5766cd24554427c2f5fb283c1f09718804cfd0", "html_url": "https://github.com/rust-lang/rust/commit/9b5766cd24554427c2f5fb283c1f09718804cfd0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9b5766cd24554427c2f5fb283c1f09718804cfd0/comments", "author": {"login": "scottmcm", "id": 18526288, "node_id": "MDQ6VXNlcjE4NTI2Mjg4", "avatar_url": "https://avatars.githubusercontent.com/u/18526288?v=4", "gravatar_id": "", "url": "https://api.github.com/users/scottmcm", "html_url": "https://github.com/scottmcm", "followers_url": "https://api.github.com/users/scottmcm/followers", "following_url": "https://api.github.com/users/scottmcm/following{/other_user}", "gists_url": "https://api.github.com/users/scottmcm/gists{/gist_id}", "starred_url": "https://api.github.com/users/scottmcm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/scottmcm/subscriptions", "organizations_url": "https://api.github.com/users/scottmcm/orgs", "repos_url": "https://api.github.com/users/scottmcm/repos", "events_url": "https://api.github.com/users/scottmcm/events{/privacy}", "received_events_url": "https://api.github.com/users/scottmcm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "scottmcm", "id": 18526288, "node_id": "MDQ6VXNlcjE4NTI2Mjg4", "avatar_url": "https://avatars.githubusercontent.com/u/18526288?v=4", "gravatar_id": "", "url": "https://api.github.com/users/scottmcm", "html_url": "https://github.com/scottmcm", "followers_url": "https://api.github.com/users/scottmcm/followers", "following_url": "https://api.github.com/users/scottmcm/following{/other_user}", "gists_url": "https://api.github.com/users/scottmcm/gists{/gist_id}", "starred_url": "https://api.github.com/users/scottmcm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/scottmcm/subscriptions", "organizations_url": "https://api.github.com/users/scottmcm/orgs", "repos_url": "https://api.github.com/users/scottmcm/repos", "events_url": "https://api.github.com/users/scottmcm/events{/privacy}", "received_events_url": "https://api.github.com/users/scottmcm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "944ba8c8a7b54d2bc02bc041747bc120304a831c", "url": "https://api.github.com/repos/rust-lang/rust/commits/944ba8c8a7b54d2bc02bc041747bc120304a831c", "html_url": "https://github.com/rust-lang/rust/commit/944ba8c8a7b54d2bc02bc041747bc120304a831c"}], "stats": {"total": 46, "additions": 28, "deletions": 18}, "files": [{"sha": "9b822714f828a71a446fb169782482e6a0deb58c", "filename": "src/test/ui/inference/question-mark-type-infer.stderr", "status": "modified", "additions": 4, "deletions": 10, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/9b5766cd24554427c2f5fb283c1f09718804cfd0/src%2Ftest%2Fui%2Finference%2Fquestion-mark-type-infer.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/9b5766cd24554427c2f5fb283c1f09718804cfd0/src%2Ftest%2Fui%2Finference%2Fquestion-mark-type-infer.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Finference%2Fquestion-mark-type-infer.stderr?ref=9b5766cd24554427c2f5fb283c1f09718804cfd0", "patch": "@@ -1,15 +1,9 @@\n-error[E0284]: type annotations needed\n-  --> $DIR/question-mark-type-infer.rs:10:21\n+error[E0282]: type annotations needed\n+  --> $DIR/question-mark-type-infer.rs:10:30\n    |\n LL |     l.iter().map(f).collect()?\n-   |                     ^^^^^^^ cannot infer type\n-   |\n-   = note: cannot satisfy `<_ as Try>::Residual == _`\n-help: consider specifying the type argument in the method call\n-   |\n-LL |     l.iter().map(f).collect::<B>()?\n-   |                            +++++\n+   |                              ^ cannot infer type\n \n error: aborting due to previous error\n \n-For more information about this error, try `rustc --explain E0284`.\n+For more information about this error, try `rustc --explain E0282`."}, {"sha": "112cb3359322383d564ee0659ab910ccaf6b3574", "filename": "src/test/ui/issues/issue-32709.stderr", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/9b5766cd24554427c2f5fb283c1f09718804cfd0/src%2Ftest%2Fui%2Fissues%2Fissue-32709.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/9b5766cd24554427c2f5fb283c1f09718804cfd0/src%2Ftest%2Fui%2Fissues%2Fissue-32709.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-32709.stderr?ref=9b5766cd24554427c2f5fb283c1f09718804cfd0", "patch": "@@ -7,7 +7,9 @@ LL |     Err(5)?;\n    |           ^ the trait `From<{integer}>` is not implemented for `()`\n    |\n    = note: the question mark operation (`?`) implicitly performs a conversion on the error value using the `From` trait\n-   = help: the trait `FromResidual<Result<Infallible, E>>` is implemented for `Result<T, F>`\n+   = help: the following other types implement trait `FromResidual<R>`:\n+             <Result<T, F> as FromResidual<Result<Infallible, E>>>\n+             <Result<T, F> as FromResidual<Yeet<E>>>\n    = note: required because of the requirements on the impl of `FromResidual<Result<Infallible, {integer}>>` for `Result<i32, ()>`\n \n error: aborting due to previous error"}, {"sha": "1dbf3ebdf827cea0f6d3d28958194a40fa600213", "filename": "src/test/ui/try-trait/bad-interconversion.stderr", "status": "modified", "additions": 12, "deletions": 4, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/9b5766cd24554427c2f5fb283c1f09718804cfd0/src%2Ftest%2Fui%2Ftry-trait%2Fbad-interconversion.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/9b5766cd24554427c2f5fb283c1f09718804cfd0/src%2Ftest%2Fui%2Ftry-trait%2Fbad-interconversion.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftry-trait%2Fbad-interconversion.stderr?ref=9b5766cd24554427c2f5fb283c1f09718804cfd0", "patch": "@@ -31,7 +31,9 @@ LL | | }\n    | |_- this function returns a `Result`\n    |\n    = help: the trait `FromResidual<Option<Infallible>>` is not implemented for `Result<u64, String>`\n-   = help: the trait `FromResidual<Result<Infallible, E>>` is implemented for `Result<T, F>`\n+   = help: the following other types implement trait `FromResidual<R>`:\n+             <Result<T, F> as FromResidual<Result<Infallible, E>>>\n+             <Result<T, F> as FromResidual<Yeet<E>>>\n \n error[E0277]: the `?` operator can only be used on `Result`s in a function that returns `Result`\n   --> $DIR/bad-interconversion.rs:17:31\n@@ -44,7 +46,9 @@ LL | | }\n    | |_- this function returns a `Result`\n    |\n    = help: the trait `FromResidual<ControlFlow<{integer}, Infallible>>` is not implemented for `Result<u64, String>`\n-   = help: the trait `FromResidual<Result<Infallible, E>>` is implemented for `Result<T, F>`\n+   = help: the following other types implement trait `FromResidual<R>`:\n+             <Result<T, F> as FromResidual<Result<Infallible, E>>>\n+             <Result<T, F> as FromResidual<Yeet<E>>>\n \n error[E0277]: the `?` operator can only be used on `Option`s, not `Result`s, in a function that returns `Option`\n   --> $DIR/bad-interconversion.rs:22:22\n@@ -57,7 +61,9 @@ LL | | }\n    | |_- this function returns an `Option`\n    |\n    = help: the trait `FromResidual<Result<Infallible, &str>>` is not implemented for `Option<u16>`\n-   = help: the trait `FromResidual` is implemented for `Option<T>`\n+   = help: the following other types implement trait `FromResidual<R>`:\n+             <Option<T> as FromResidual<Yeet<()>>>\n+             <Option<T> as FromResidual>\n \n error[E0277]: the `?` operator can only be used on `Option`s in a function that returns `Option`\n   --> $DIR/bad-interconversion.rs:27:33\n@@ -70,7 +76,9 @@ LL | | }\n    | |_- this function returns an `Option`\n    |\n    = help: the trait `FromResidual<ControlFlow<{integer}, Infallible>>` is not implemented for `Option<u64>`\n-   = help: the trait `FromResidual` is implemented for `Option<T>`\n+   = help: the following other types implement trait `FromResidual<R>`:\n+             <Option<T> as FromResidual<Yeet<()>>>\n+             <Option<T> as FromResidual>\n \n error[E0277]: the `?` operator can only be used on `ControlFlow`s in a function that returns `ControlFlow`\n   --> $DIR/bad-interconversion.rs:32:39"}, {"sha": "ae5c3ad628281c3968e19bcbf79b15b1a32f23f0", "filename": "src/test/ui/try-trait/option-to-result.stderr", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/9b5766cd24554427c2f5fb283c1f09718804cfd0/src%2Ftest%2Fui%2Ftry-trait%2Foption-to-result.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/9b5766cd24554427c2f5fb283c1f09718804cfd0/src%2Ftest%2Fui%2Ftry-trait%2Foption-to-result.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftry-trait%2Foption-to-result.stderr?ref=9b5766cd24554427c2f5fb283c1f09718804cfd0", "patch": "@@ -10,7 +10,9 @@ LL | | }\n    | |_- this function returns a `Result`\n    |\n    = help: the trait `FromResidual<Option<Infallible>>` is not implemented for `Result<(), ()>`\n-   = help: the trait `FromResidual<Result<Infallible, E>>` is implemented for `Result<T, F>`\n+   = help: the following other types implement trait `FromResidual<R>`:\n+             <Result<T, F> as FromResidual<Result<Infallible, E>>>\n+             <Result<T, F> as FromResidual<Yeet<E>>>\n \n error[E0277]: the `?` operator can only be used on `Option`s, not `Result`s, in a function that returns `Option`\n   --> $DIR/option-to-result.rs:11:6\n@@ -24,7 +26,9 @@ LL | | }\n    | |_- this function returns an `Option`\n    |\n    = help: the trait `FromResidual<Result<Infallible, i32>>` is not implemented for `Option<i32>`\n-   = help: the trait `FromResidual` is implemented for `Option<T>`\n+   = help: the following other types implement trait `FromResidual<R>`:\n+             <Option<T> as FromResidual<Yeet<()>>>\n+             <Option<T> as FromResidual>\n \n error: aborting due to 2 previous errors\n "}, {"sha": "ba85a7cada2329668ec3bebd3a3f3bb3a4fb05ba", "filename": "src/test/ui/try-trait/try-on-option.stderr", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/9b5766cd24554427c2f5fb283c1f09718804cfd0/src%2Ftest%2Fui%2Ftry-trait%2Ftry-on-option.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/9b5766cd24554427c2f5fb283c1f09718804cfd0/src%2Ftest%2Fui%2Ftry-trait%2Ftry-on-option.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftry-trait%2Ftry-on-option.stderr?ref=9b5766cd24554427c2f5fb283c1f09718804cfd0", "patch": "@@ -10,7 +10,9 @@ LL | | }\n    | |_- this function returns a `Result`\n    |\n    = help: the trait `FromResidual<Option<Infallible>>` is not implemented for `Result<u32, ()>`\n-   = help: the trait `FromResidual<Result<Infallible, E>>` is implemented for `Result<T, F>`\n+   = help: the following other types implement trait `FromResidual<R>`:\n+             <Result<T, F> as FromResidual<Result<Infallible, E>>>\n+             <Result<T, F> as FromResidual<Yeet<E>>>\n \n error[E0277]: the `?` operator can only be used in a function that returns `Result` or `Option` (or another type that implements `FromResidual`)\n   --> $DIR/try-on-option.rs:11:6"}]}