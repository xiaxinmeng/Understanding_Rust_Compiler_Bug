{"sha": "a11129701c873d96fe0816e4c8b55510efebe96e", "node_id": "MDY6Q29tbWl0NzI0NzEyOmExMTEyOTcwMWM4NzNkOTZmZTA4MTZlNGM4YjU1NTEwZWZlYmU5NmU=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2016-03-29T03:50:42Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2016-03-29T03:50:42Z"}, "message": "Auto merge of #32479 - eddyb:eof-not-even-twice, r=nikomatsakis\n\nPrevent bumping the parser past the EOF.\n\nMakes `Parser::bump` after EOF into an ICE, forcing callers to avoid repeated EOF bumps.\nThis ICE is intended to break infinite loops where EOF wasn't stopping the loop.\n\nFor example, the handling of EOF in `parse_trait_items`' recovery loop fixes #32446.\nBut even without this specific fix, the ICE is triggered, which helps diagnosis and UX.\n\nThis is a `[breaking-change]` for plugins authors who eagerly eat multiple EOFs.\nSee https://github.com/docopt/docopt.rs/pull/171 for such an example and the necessary fix.", "tree": {"sha": "c1461e5f0660b146394122ef80a5ada344646d85", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c1461e5f0660b146394122ef80a5ada344646d85"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a11129701c873d96fe0816e4c8b55510efebe96e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a11129701c873d96fe0816e4c8b55510efebe96e", "html_url": "https://github.com/rust-lang/rust/commit/a11129701c873d96fe0816e4c8b55510efebe96e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a11129701c873d96fe0816e4c8b55510efebe96e/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cad964a62655110753d73527df7ad808a235fc84", "url": "https://api.github.com/repos/rust-lang/rust/commits/cad964a62655110753d73527df7ad808a235fc84", "html_url": "https://github.com/rust-lang/rust/commit/cad964a62655110753d73527df7ad808a235fc84"}, {"sha": "221d0fbad0b201ef9264d3c9a30cd8c143ed51b2", "url": "https://api.github.com/repos/rust-lang/rust/commits/221d0fbad0b201ef9264d3c9a30cd8c143ed51b2", "html_url": "https://github.com/rust-lang/rust/commit/221d0fbad0b201ef9264d3c9a30cd8c143ed51b2"}], "stats": {"total": 63, "additions": 49, "deletions": 14}, "files": [{"sha": "5141af6f2d16d899637abee248688f819cdbcfe0", "filename": "src/libsyntax/parse/parser.rs", "status": "modified", "additions": 28, "deletions": 9, "changes": 37, "blob_url": "https://github.com/rust-lang/rust/blob/a11129701c873d96fe0816e4c8b55510efebe96e/src%2Flibsyntax%2Fparse%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a11129701c873d96fe0816e4c8b55510efebe96e/src%2Flibsyntax%2Fparse%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fparser.rs?ref=a11129701c873d96fe0816e4c8b55510efebe96e", "patch": "@@ -254,6 +254,7 @@ pub struct Parser<'a> {\n     /// the previous token or None (only stashed sometimes).\n     pub last_token: Option<Box<token::Token>>,\n     last_token_interpolated: bool,\n+    last_token_eof: bool,\n     pub buffer: [TokenAndSpan; 4],\n     pub buffer_start: isize,\n     pub buffer_end: isize,\n@@ -366,6 +367,7 @@ impl<'a> Parser<'a> {\n             last_span: span,\n             last_token: None,\n             last_token_interpolated: false,\n+            last_token_eof: false,\n             buffer: [\n                 placeholder.clone(),\n                 placeholder.clone(),\n@@ -955,7 +957,9 @@ impl<'a> Parser<'a> {\n     {\n         self.expect(bra)?;\n         let result = self.parse_seq_to_before_end(ket, sep, f);\n-        self.bump();\n+        if self.token == *ket {\n+            self.bump();\n+        }\n         Ok(result)\n     }\n \n@@ -998,6 +1002,15 @@ impl<'a> Parser<'a> {\n \n     /// Advance the parser by one token\n     pub fn bump(&mut self) {\n+        if self.last_token_eof {\n+            // Bumping after EOF is a bad sign, usually an infinite loop.\n+            self.bug(\"attempted to bump the parser past EOF (may be stuck in a loop)\");\n+        }\n+\n+        if self.token == token::Eof {\n+            self.last_token_eof = true;\n+        }\n+\n         self.last_span = self.span;\n         // Stash token for error recovery (sometimes; clone is not necessarily cheap).\n         self.last_token = if self.token.is_ident() ||\n@@ -1281,15 +1294,21 @@ impl<'a> Parser<'a> {\n                     Ok(cua) => cua,\n                     Err(e) => {\n                         loop {\n-                            p.bump();\n-                            if p.token == token::Semi {\n-                                p.bump();\n-                                break;\n-                            }\n+                            match p.token {\n+                                token::Eof => break,\n+\n+                                token::CloseDelim(token::Brace) |\n+                                token::Semi => {\n+                                    p.bump();\n+                                    break;\n+                                }\n+\n+                                token::OpenDelim(token::Brace) => {\n+                                    p.parse_token_tree()?;\n+                                    break;\n+                                }\n \n-                            if p.token == token::OpenDelim(token::DelimToken::Brace) {\n-                                p.parse_token_tree()?;\n-                                break;\n+                                _ => p.bump()\n                             }\n                         }\n "}, {"sha": "747252d59241ea21854763f38da3c5010f3c363c", "filename": "src/test/compile-fail/issue-10636-2.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/a11129701c873d96fe0816e4c8b55510efebe96e/src%2Ftest%2Fcompile-fail%2Fissue-10636-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a11129701c873d96fe0816e4c8b55510efebe96e/src%2Ftest%2Fcompile-fail%2Fissue-10636-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-10636-2.rs?ref=a11129701c873d96fe0816e4c8b55510efebe96e", "patch": "@@ -14,6 +14,5 @@\n pub fn trace_option(option: Option<isize>) {\n     option.map(|some| 42; //~ NOTE: unclosed delimiter\n                           //~^ ERROR: expected one of\n-                          //~^^ ERROR: mismatched types\n } //~ ERROR: incorrect close delimiter\n-//~^ ERROR: expected one of\n+//~^ ERROR: unexpected token"}, {"sha": "f42c8d09a9c09127961ab68263bf5a8a51c89ddf", "filename": "src/test/compile-fail/token-error-correct-3.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/a11129701c873d96fe0816e4c8b55510efebe96e/src%2Ftest%2Fcompile-fail%2Ftoken-error-correct-3.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a11129701c873d96fe0816e4c8b55510efebe96e/src%2Ftest%2Fcompile-fail%2Ftoken-error-correct-3.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Ftoken-error-correct-3.rs?ref=a11129701c873d96fe0816e4c8b55510efebe96e", "patch": "@@ -21,8 +21,9 @@ pub mod raw {\n         if !is_directory(path.as_ref()) { //~ ERROR: unresolved name `is_directory`\n             callback(path.as_ref();  //~ NOTE: unclosed delimiter\n                      //~^ ERROR: expected one of\n-            fs::create_dir_all(path.as_ref()).map(|()| true) //~ ERROR: expected one of\n+            fs::create_dir_all(path.as_ref()).map(|()| true) //~ ERROR: mismatched types\n         } else { //~ ERROR: incorrect close delimiter: `}`\n+            //~^ ERROR: expected one of\n             Ok(false);\n         }\n "}, {"sha": "90b9a4aae8b5b1409ede68b8d9bccdf066a48dfc", "filename": "src/test/parse-fail/issue-32446.rs", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/a11129701c873d96fe0816e4c8b55510efebe96e/src%2Ftest%2Fparse-fail%2Fissue-32446.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a11129701c873d96fe0816e4c8b55510efebe96e/src%2Ftest%2Fparse-fail%2Fissue-32446.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fparse-fail%2Fissue-32446.rs?ref=a11129701c873d96fe0816e4c8b55510efebe96e", "patch": "@@ -0,0 +1,16 @@\n+// Copyright 2016 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// compile-flags: -Z parse-only\n+\n+fn main() {}\n+\n+// This used to end up in an infite loop trying to bump past EOF.\n+trait T { ... } //~ ERROR"}, {"sha": "5ed8f6dee8cd86b598730b668ef4a1931ddab91c", "filename": "src/test/parse-fail/pat-lt-bracket-6.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a11129701c873d96fe0816e4c8b55510efebe96e/src%2Ftest%2Fparse-fail%2Fpat-lt-bracket-6.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a11129701c873d96fe0816e4c8b55510efebe96e/src%2Ftest%2Fparse-fail%2Fpat-lt-bracket-6.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fparse-fail%2Fpat-lt-bracket-6.rs?ref=a11129701c873d96fe0816e4c8b55510efebe96e", "patch": "@@ -10,5 +10,5 @@\n \n fn main() {\n     let Test(&desc[..]) = x; //~ error: expected one of `,` or `@`, found `[`\n-    //~^ ERROR expected one of `:`, `;`, or `=`, found `..`\n+    //~^ ERROR expected one of `:`, `;`, `=`, or `@`, found `[`\n }"}, {"sha": "00681e61497852663f046212b30f8656613fbc39", "filename": "src/test/parse-fail/pat-lt-bracket-7.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a11129701c873d96fe0816e4c8b55510efebe96e/src%2Ftest%2Fparse-fail%2Fpat-lt-bracket-7.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a11129701c873d96fe0816e4c8b55510efebe96e/src%2Ftest%2Fparse-fail%2Fpat-lt-bracket-7.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fparse-fail%2Fpat-lt-bracket-7.rs?ref=a11129701c873d96fe0816e4c8b55510efebe96e", "patch": "@@ -10,5 +10,5 @@\n \n fn main() {\n     for thing(x[]) in foo {} //~ error: expected one of `,` or `@`, found `[`\n-    //~^ ERROR: expected `in`, found `]`\n+    //~^ ERROR expected one of `@` or `in`, found `[`\n }"}]}