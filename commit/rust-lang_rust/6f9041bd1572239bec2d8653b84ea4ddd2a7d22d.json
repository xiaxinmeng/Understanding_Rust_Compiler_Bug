{"sha": "6f9041bd1572239bec2d8653b84ea4ddd2a7d22d", "node_id": "C_kwDOAAsO6NoAKDZmOTA0MWJkMTU3MjIzOWJlYzJkODY1M2I4NGVhNGRkZDJhN2QyMmQ", "commit": {"author": {"name": "lcnr", "email": "rust@lcnr.de", "date": "2023-05-23T17:34:17Z"}, "committer": {"name": "lcnr", "email": "rust@lcnr.de", "date": "2023-05-30T11:03:40Z"}, "message": "add the leak check to the new solver", "tree": {"sha": "7209f9775747ea653b3a60a8f4436229254088f8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7209f9775747ea653b3a60a8f4436229254088f8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6f9041bd1572239bec2d8653b84ea4ddd2a7d22d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6f9041bd1572239bec2d8653b84ea4ddd2a7d22d", "html_url": "https://github.com/rust-lang/rust/commit/6f9041bd1572239bec2d8653b84ea4ddd2a7d22d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6f9041bd1572239bec2d8653b84ea4ddd2a7d22d/comments", "author": {"login": "lcnr", "id": 29864074, "node_id": "MDQ6VXNlcjI5ODY0MDc0", "avatar_url": "https://avatars.githubusercontent.com/u/29864074?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lcnr", "html_url": "https://github.com/lcnr", "followers_url": "https://api.github.com/users/lcnr/followers", "following_url": "https://api.github.com/users/lcnr/following{/other_user}", "gists_url": "https://api.github.com/users/lcnr/gists{/gist_id}", "starred_url": "https://api.github.com/users/lcnr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lcnr/subscriptions", "organizations_url": "https://api.github.com/users/lcnr/orgs", "repos_url": "https://api.github.com/users/lcnr/repos", "events_url": "https://api.github.com/users/lcnr/events{/privacy}", "received_events_url": "https://api.github.com/users/lcnr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "lcnr", "id": 29864074, "node_id": "MDQ6VXNlcjI5ODY0MDc0", "avatar_url": "https://avatars.githubusercontent.com/u/29864074?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lcnr", "html_url": "https://github.com/lcnr", "followers_url": "https://api.github.com/users/lcnr/followers", "following_url": "https://api.github.com/users/lcnr/following{/other_user}", "gists_url": "https://api.github.com/users/lcnr/gists{/gist_id}", "starred_url": "https://api.github.com/users/lcnr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lcnr/subscriptions", "organizations_url": "https://api.github.com/users/lcnr/orgs", "repos_url": "https://api.github.com/users/lcnr/repos", "events_url": "https://api.github.com/users/lcnr/events{/privacy}", "received_events_url": "https://api.github.com/users/lcnr/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "04056b5c04e0574d5631f04baab99d6fcd778550", "url": "https://api.github.com/repos/rust-lang/rust/commits/04056b5c04e0574d5631f04baab99d6fcd778550", "html_url": "https://github.com/rust-lang/rust/commit/04056b5c04e0574d5631f04baab99d6fcd778550"}], "stats": {"total": 29, "additions": 29, "deletions": 0}, "files": [{"sha": "91a093f30bd55fe9b1e5df581c0ed0ea7f9db15f", "filename": "compiler/rustc_trait_selection/src/solve/eval_ctxt/canonical.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/6f9041bd1572239bec2d8653b84ea4ddd2a7d22d/compiler%2Frustc_trait_selection%2Fsrc%2Fsolve%2Feval_ctxt%2Fcanonical.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6f9041bd1572239bec2d8653b84ea4ddd2a7d22d/compiler%2Frustc_trait_selection%2Fsrc%2Fsolve%2Feval_ctxt%2Fcanonical.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_trait_selection%2Fsrc%2Fsolve%2Feval_ctxt%2Fcanonical.rs?ref=6f9041bd1572239bec2d8653b84ea4ddd2a7d22d", "patch": "@@ -137,6 +137,11 @@ impl<'tcx> EvalCtxt<'_, 'tcx> {\n \n     #[instrument(level = \"debug\", skip(self), ret)]\n     fn compute_external_query_constraints(&self) -> Result<ExternalConstraints<'tcx>, NoSolution> {\n+        self.infcx.leak_check(ty::UniverseIndex::ROOT, None).map_err(|e| {\n+            debug!(?e, \"failed the leak check\");\n+            NoSolution\n+        })?;\n+\n         // Cannot use `take_registered_region_obligations` as we may compute the response\n         // inside of a `probe` whenever we have multiple choices inside of the solver.\n         let region_obligations = self.infcx.inner.borrow().region_obligations().to_owned();"}, {"sha": "e8d6cff856c9e840a309d0da1553e1d097236b4e", "filename": "tests/ui/higher-ranked/leak-check-in-selection.rs", "status": "added", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/6f9041bd1572239bec2d8653b84ea4ddd2a7d22d/tests%2Fui%2Fhigher-ranked%2Fleak-check-in-selection.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6f9041bd1572239bec2d8653b84ea4ddd2a7d22d/tests%2Fui%2Fhigher-ranked%2Fleak-check-in-selection.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fhigher-ranked%2Fleak-check-in-selection.rs?ref=6f9041bd1572239bec2d8653b84ea4ddd2a7d22d", "patch": "@@ -0,0 +1,24 @@\n+// run-pass\n+// revisions: old next\n+//[next] compile-flags: -Ztrait-solver=next\n+#![allow(coherence_leak_check)]\n+\n+trait Trait: Sized {\n+    fn is_higher_ranked(self) -> bool;\n+}\n+\n+impl Trait for for<'a> fn(&'a ()) {\n+    fn is_higher_ranked(self) -> bool {\n+        true\n+    }\n+}\n+impl<'a> Trait for fn(&'a ()) {\n+    fn is_higher_ranked(self) -> bool {\n+        false\n+    }\n+}\n+\n+fn main() {\n+    let x: for<'a> fn(&'a ()) = |&()| ();\n+    assert!(x.is_higher_ranked());\n+}"}]}