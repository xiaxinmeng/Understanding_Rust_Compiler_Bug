{"sha": "4effdd2431020ce86d4c22765afa05d19c3215cc", "node_id": "MDY6Q29tbWl0NzI0NzEyOjRlZmZkZDI0MzEwMjBjZTg2ZDRjMjI3NjVhZmEwNWQxOWMzMjE1Y2M=", "commit": {"author": {"name": "scalexm", "email": "alexandre@scalexm.fr", "date": "2019-02-08T14:29:22Z"}, "committer": {"name": "scalexm", "email": "alexandre@scalexm.fr", "date": "2019-03-20T19:09:26Z"}, "message": "Fix a bug in chalk lowering\n\nSome where clauses were not subtituted for generic bound type vars.", "tree": {"sha": "ba41336322afc3f68c9cfb2e4a3e633c47747354", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ba41336322afc3f68c9cfb2e4a3e633c47747354"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4effdd2431020ce86d4c22765afa05d19c3215cc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4effdd2431020ce86d4c22765afa05d19c3215cc", "html_url": "https://github.com/rust-lang/rust/commit/4effdd2431020ce86d4c22765afa05d19c3215cc", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4effdd2431020ce86d4c22765afa05d19c3215cc/comments", "author": {"login": "scalexm", "id": 1173131, "node_id": "MDQ6VXNlcjExNzMxMzE=", "avatar_url": "https://avatars.githubusercontent.com/u/1173131?v=4", "gravatar_id": "", "url": "https://api.github.com/users/scalexm", "html_url": "https://github.com/scalexm", "followers_url": "https://api.github.com/users/scalexm/followers", "following_url": "https://api.github.com/users/scalexm/following{/other_user}", "gists_url": "https://api.github.com/users/scalexm/gists{/gist_id}", "starred_url": "https://api.github.com/users/scalexm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/scalexm/subscriptions", "organizations_url": "https://api.github.com/users/scalexm/orgs", "repos_url": "https://api.github.com/users/scalexm/repos", "events_url": "https://api.github.com/users/scalexm/events{/privacy}", "received_events_url": "https://api.github.com/users/scalexm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "scalexm", "id": 1173131, "node_id": "MDQ6VXNlcjExNzMxMzE=", "avatar_url": "https://avatars.githubusercontent.com/u/1173131?v=4", "gravatar_id": "", "url": "https://api.github.com/users/scalexm", "html_url": "https://github.com/scalexm", "followers_url": "https://api.github.com/users/scalexm/followers", "following_url": "https://api.github.com/users/scalexm/following{/other_user}", "gists_url": "https://api.github.com/users/scalexm/gists{/gist_id}", "starred_url": "https://api.github.com/users/scalexm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/scalexm/subscriptions", "organizations_url": "https://api.github.com/users/scalexm/orgs", "repos_url": "https://api.github.com/users/scalexm/repos", "events_url": "https://api.github.com/users/scalexm/events{/privacy}", "received_events_url": "https://api.github.com/users/scalexm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "183466550808dbce73709a2202d5f84fdfb8ddc1", "url": "https://api.github.com/repos/rust-lang/rust/commits/183466550808dbce73709a2202d5f84fdfb8ddc1", "html_url": "https://github.com/rust-lang/rust/commit/183466550808dbce73709a2202d5f84fdfb8ddc1"}], "stats": {"total": 9, "additions": 8, "deletions": 1}, "files": [{"sha": "0cbfa7c626f13fc31d20d562d5a1e87a5002a10a", "filename": "src/librustc_traits/lowering/mod.rs", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/4effdd2431020ce86d4c22765afa05d19c3215cc/src%2Flibrustc_traits%2Flowering%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4effdd2431020ce86d4c22765afa05d19c3215cc/src%2Flibrustc_traits%2Flowering%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_traits%2Flowering%2Fmod.rs?ref=4effdd2431020ce86d4c22765afa05d19c3215cc", "patch": "@@ -209,6 +209,10 @@ fn program_clauses_for_trait<'a, 'tcx>(\n     let implemented_from_env = Clause::ForAll(ty::Binder::bind(implemented_from_env));\n \n     let predicates = &tcx.predicates_defined_on(def_id).predicates;\n+\n+    // Warning: these where clauses are not substituted for bound vars yet,\n+    // so that we don't need to adjust binders in the `FromEnv` rules below\n+    // (see the FIXME).\n     let where_clauses = &predicates\n         .iter()\n         .map(|(wc, _)| wc.lower())\n@@ -258,6 +262,7 @@ fn program_clauses_for_trait<'a, 'tcx>(\n     // `WellFormed(WC)`\n     let wf_conditions = where_clauses\n         .into_iter()\n+        .map(|wc| wc.subst(tcx, bound_vars))\n         .map(|wc| wc.map_bound(|goal| goal.into_well_formed_goal()));\n \n     // `WellFormed(Self: Trait<P1..Pn>) :- Implemented(Self: Trait<P1..Pn>) && WellFormed(WC)`\n@@ -341,7 +346,9 @@ pub fn program_clauses_for_type_def<'a, 'tcx>(\n     // `Ty<...>`\n     let ty = tcx.type_of(def_id).subst(tcx, bound_vars);\n \n-    // `WC`\n+    // Warning: these where clauses are not substituted for bound vars yet,\n+    // so that we don't need to adjust binders in the `FromEnv` rules below\n+    // (see the FIXME).\n     let where_clauses = tcx.predicates_of(def_id).predicates\n         .iter()\n         .map(|(wc, _)| wc.lower())"}]}