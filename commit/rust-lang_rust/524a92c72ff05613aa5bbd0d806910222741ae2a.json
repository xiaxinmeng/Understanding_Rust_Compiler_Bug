{"sha": "524a92c72ff05613aa5bbd0d806910222741ae2a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjUyNGE5MmM3MmZmMDU2MTNhYTViYmQwZDgwNjkxMDIyMjc0MWFlMmE=", "commit": {"author": {"name": "Kevin Ballard", "email": "kevin@sb.org", "date": "2013-06-18T06:20:53Z"}, "committer": {"name": "Corey Richardson", "email": "corey@octayn.net", "date": "2013-06-26T22:11:18Z"}, "message": "Add method .set_memory in vec::bytes for &[u8]\n\nAdd new trait vec::bytes::MutableByteVector which currently defines one\nmethod .set_memory().", "tree": {"sha": "5aed11a41e21bcbeb2c57cd3eddc3152f16f7cfd", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5aed11a41e21bcbeb2c57cd3eddc3152f16f7cfd"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/524a92c72ff05613aa5bbd0d806910222741ae2a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/524a92c72ff05613aa5bbd0d806910222741ae2a", "html_url": "https://github.com/rust-lang/rust/commit/524a92c72ff05613aa5bbd0d806910222741ae2a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/524a92c72ff05613aa5bbd0d806910222741ae2a/comments", "author": {"login": "lilyball", "id": 714, "node_id": "MDQ6VXNlcjcxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/714?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lilyball", "html_url": "https://github.com/lilyball", "followers_url": "https://api.github.com/users/lilyball/followers", "following_url": "https://api.github.com/users/lilyball/following{/other_user}", "gists_url": "https://api.github.com/users/lilyball/gists{/gist_id}", "starred_url": "https://api.github.com/users/lilyball/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lilyball/subscriptions", "organizations_url": "https://api.github.com/users/lilyball/orgs", "repos_url": "https://api.github.com/users/lilyball/repos", "events_url": "https://api.github.com/users/lilyball/events{/privacy}", "received_events_url": "https://api.github.com/users/lilyball/received_events", "type": "User", "site_admin": false}, "committer": {"login": "emberian", "id": 704250, "node_id": "MDQ6VXNlcjcwNDI1MA==", "avatar_url": "https://avatars.githubusercontent.com/u/704250?v=4", "gravatar_id": "", "url": "https://api.github.com/users/emberian", "html_url": "https://github.com/emberian", "followers_url": "https://api.github.com/users/emberian/followers", "following_url": "https://api.github.com/users/emberian/following{/other_user}", "gists_url": "https://api.github.com/users/emberian/gists{/gist_id}", "starred_url": "https://api.github.com/users/emberian/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/emberian/subscriptions", "organizations_url": "https://api.github.com/users/emberian/orgs", "repos_url": "https://api.github.com/users/emberian/repos", "events_url": "https://api.github.com/users/emberian/events{/privacy}", "received_events_url": "https://api.github.com/users/emberian/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "35314c93fa07a21aea18548f59886285a303c696", "url": "https://api.github.com/repos/rust-lang/rust/commits/35314c93fa07a21aea18548f59886285a303c696", "html_url": "https://github.com/rust-lang/rust/commit/35314c93fa07a21aea18548f59886285a303c696"}], "stats": {"total": 26, "additions": 26, "deletions": 0}, "files": [{"sha": "3d5ec23c32903350d7ea58f2243aba5abc7d4660", "filename": "src/libstd/vec.rs", "status": "modified", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/524a92c72ff05613aa5bbd0d806910222741ae2a/src%2Flibstd%2Fvec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/524a92c72ff05613aa5bbd0d806910222741ae2a/src%2Flibstd%2Fvec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fvec.rs?ref=524a92c72ff05613aa5bbd0d806910222741ae2a", "patch": "@@ -2288,6 +2288,22 @@ pub mod bytes {\n     use uint;\n     use vec::raw;\n     use vec;\n+    use ptr;\n+\n+    /// A trait for operations on mutable operations on `[u8]`\n+    pub trait MutableByteVector {\n+        /// Sets all bytes of the receiver to the given value.\n+        pub fn set_memory(self, value: u8);\n+    }\n+\n+    impl<'self> MutableByteVector for &'self mut [u8] {\n+        #[inline]\n+        fn set_memory(self, value: u8) {\n+            do vec::as_mut_buf(self) |p, len| {\n+                unsafe { ptr::set_memory(p, value, len) };\n+            }\n+        }\n+    }\n \n     /// Bytewise string comparison\n     pub fn memcmp(a: &~[u8], b: &~[u8]) -> int {\n@@ -3941,4 +3957,14 @@ mod tests {\n         t!(@[int]);\n         t!(~[int]);\n     }\n+\n+    #[test]\n+    fn test_bytes_set_memory() {\n+        use vec::bytes::MutableByteVector;\n+        let mut values = [1u8,2,3,4,5];\n+        values.mut_slice(0,5).set_memory(0xAB);\n+        assert_eq!(values, [0xAB, 0xAB, 0xAB, 0xAB, 0xAB]);\n+        values.mut_slice(2,4).set_memory(0xFF);\n+        assert_eq!(values, [0xAB, 0xAB, 0xFF, 0xFF, 0xAB]);\n+    }\n }"}]}