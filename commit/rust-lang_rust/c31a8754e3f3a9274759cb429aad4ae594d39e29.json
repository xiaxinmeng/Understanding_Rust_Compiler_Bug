{"sha": "c31a8754e3f3a9274759cb429aad4ae594d39e29", "node_id": "MDY6Q29tbWl0NzI0NzEyOmMzMWE4NzU0ZTNmM2E5Mjc0NzU5Y2I0MjlhYWQ0YWU1OTRkMzllMjk=", "commit": {"author": {"name": "Mark Rousskov", "email": "mark.simulacrum@gmail.com", "date": "2019-11-14T22:24:44Z"}, "committer": {"name": "Mark Rousskov", "email": "mark.simulacrum@gmail.com", "date": "2019-11-15T13:45:49Z"}, "message": "Move JSON emitter to rustc_errors", "tree": {"sha": "4c50d1f64384325c9f7d7635602149dddb86d7aa", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4c50d1f64384325c9f7d7635602149dddb86d7aa"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c31a8754e3f3a9274759cb429aad4ae594d39e29", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c31a8754e3f3a9274759cb429aad4ae594d39e29", "html_url": "https://github.com/rust-lang/rust/commit/c31a8754e3f3a9274759cb429aad4ae594d39e29", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c31a8754e3f3a9274759cb429aad4ae594d39e29/comments", "author": {"login": "Mark-Simulacrum", "id": 5047365, "node_id": "MDQ6VXNlcjUwNDczNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/5047365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mark-Simulacrum", "html_url": "https://github.com/Mark-Simulacrum", "followers_url": "https://api.github.com/users/Mark-Simulacrum/followers", "following_url": "https://api.github.com/users/Mark-Simulacrum/following{/other_user}", "gists_url": "https://api.github.com/users/Mark-Simulacrum/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mark-Simulacrum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mark-Simulacrum/subscriptions", "organizations_url": "https://api.github.com/users/Mark-Simulacrum/orgs", "repos_url": "https://api.github.com/users/Mark-Simulacrum/repos", "events_url": "https://api.github.com/users/Mark-Simulacrum/events{/privacy}", "received_events_url": "https://api.github.com/users/Mark-Simulacrum/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Mark-Simulacrum", "id": 5047365, "node_id": "MDQ6VXNlcjUwNDczNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/5047365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mark-Simulacrum", "html_url": "https://github.com/Mark-Simulacrum", "followers_url": "https://api.github.com/users/Mark-Simulacrum/followers", "following_url": "https://api.github.com/users/Mark-Simulacrum/following{/other_user}", "gists_url": "https://api.github.com/users/Mark-Simulacrum/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mark-Simulacrum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mark-Simulacrum/subscriptions", "organizations_url": "https://api.github.com/users/Mark-Simulacrum/orgs", "repos_url": "https://api.github.com/users/Mark-Simulacrum/repos", "events_url": "https://api.github.com/users/Mark-Simulacrum/events{/privacy}", "received_events_url": "https://api.github.com/users/Mark-Simulacrum/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3f93ffc3334b77cc9025f68dfcea92098987abf3", "url": "https://api.github.com/repos/rust-lang/rust/commits/3f93ffc3334b77cc9025f68dfcea92098987abf3", "html_url": "https://github.com/rust-lang/rust/commit/3f93ffc3334b77cc9025f68dfcea92098987abf3"}], "stats": {"total": 39, "additions": 22, "deletions": 17}, "files": [{"sha": "4fbc8da9cbf026433f99e33b0172f8f9dab3e8bb", "filename": "src/librustc/session/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c31a8754e3f3a9274759cb429aad4ae594d39e29/src%2Flibrustc%2Fsession%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c31a8754e3f3a9274759cb429aad4ae594d39e29/src%2Flibrustc%2Fsession%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fsession%2Fmod.rs?ref=c31a8754e3f3a9274759cb429aad4ae594d39e29", "patch": "@@ -22,7 +22,7 @@ use errors::emitter::HumanReadableErrorType;\n use errors::annotate_snippet_emitter_writer::{AnnotateSnippetEmitterWriter};\n use syntax::edition::Edition;\n use syntax::feature_gate::{self, AttributeType};\n-use syntax::json::JsonEmitter;\n+use errors::json::JsonEmitter;\n use syntax::source_map;\n use syntax::sess::{ParseSess, ProcessCfgMod};\n use syntax::symbol::Symbol;"}, {"sha": "ebbd49bd84a73ad510ade87fb17c4ab30f014aa6", "filename": "src/librustc_errors/json.rs", "status": "renamed", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/c31a8754e3f3a9274759cb429aad4ae594d39e29/src%2Flibrustc_errors%2Fjson.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c31a8754e3f3a9274759cb429aad4ae594d39e29/src%2Flibrustc_errors%2Fjson.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_errors%2Fjson.rs?ref=c31a8754e3f3a9274759cb429aad4ae594d39e29", "patch": "@@ -9,15 +9,15 @@\n \n // FIXME: spec the JSON output properly.\n \n-use crate::source_map::{SourceMap, FilePathMapping};\n+use syntax_pos::source_map::{SourceMap, FilePathMapping};\n \n-use errors::registry::Registry;\n-use errors::{SubDiagnostic, CodeSuggestion};\n-use errors::{DiagnosticId, Applicability};\n-use errors::emitter::{Emitter, HumanReadableErrorType};\n+use crate::registry::Registry;\n+use crate::{SubDiagnostic, CodeSuggestion};\n+use crate::{DiagnosticId, Applicability};\n+use crate::emitter::{Emitter, HumanReadableErrorType};\n \n use syntax_pos::{MacroBacktrace, Span, SpanLabel, MultiSpan};\n-use rustc_data_structures::sync::{self, Lrc};\n+use rustc_data_structures::sync::Lrc;\n use std::io::{self, Write};\n use std::path::Path;\n use std::vec;\n@@ -92,7 +92,7 @@ impl JsonEmitter {\n }\n \n impl Emitter for JsonEmitter {\n-    fn emit_diagnostic(&mut self, diag: &errors::Diagnostic) {\n+    fn emit_diagnostic(&mut self, diag: &crate::Diagnostic) {\n         let data = Diagnostic::from_errors_diagnostic(diag, self);\n         let result = if self.pretty {\n             writeln!(&mut self.dst, \"{}\", as_pretty_json(&data))\n@@ -212,7 +212,7 @@ struct ArtifactNotification<'a> {\n }\n \n impl Diagnostic {\n-    fn from_errors_diagnostic(diag: &errors::Diagnostic,\n+    fn from_errors_diagnostic(diag: &crate::Diagnostic,\n                                je: &JsonEmitter)\n                                -> Diagnostic {\n         let sugg = diag.suggestions.iter().map(|sugg| {", "previous_filename": "src/libsyntax/json.rs"}, {"sha": "4ab5cd21b0b00e95507b6fae69a9549a2fcd6d9b", "filename": "src/librustc_errors/json/tests.rs", "status": "renamed", "additions": 10, "deletions": 4, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/c31a8754e3f3a9274759cb429aad4ae594d39e29/src%2Flibrustc_errors%2Fjson%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c31a8754e3f3a9274759cb429aad4ae594d39e29/src%2Flibrustc_errors%2Fjson%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_errors%2Fjson%2Ftests.rs?ref=c31a8754e3f3a9274759cb429aad4ae594d39e29", "patch": "@@ -1,11 +1,10 @@\n use super::*;\n \n use crate::json::JsonEmitter;\n-use crate::source_map::{FilePathMapping, SourceMap};\n-use crate::with_default_globals;\n+use syntax_pos::source_map::{FilePathMapping, SourceMap};\n \n-use errors::emitter::{ColorConfig, HumanReadableErrorType};\n-use errors::Handler;\n+use crate::emitter::{ColorConfig, HumanReadableErrorType};\n+use crate::Handler;\n use rustc_serialize::json::decode;\n use syntax_pos::{BytePos, Span};\n \n@@ -40,6 +39,13 @@ impl<T: Write> Write for Shared<T> {\n     }\n }\n \n+fn with_default_globals(f: impl FnOnce()) {\n+    let globals = syntax_pos::Globals::new(syntax_pos::edition::DEFAULT_EDITION);\n+    syntax_pos::GLOBALS.set(&globals, || {\n+        syntax_pos::GLOBALS.set(&globals, f)\n+    })\n+}\n+\n /// Test the span yields correct positions in JSON.\n fn test_positions(code: &str, span: (u32, u32), expected_output: SpanTestData) {\n     let expected_output = TestData { spans: vec![expected_output] };", "previous_filename": "src/libsyntax/json/tests.rs"}, {"sha": "17765ef9deefa25df550aebe9041fe0c312e400e", "filename": "src/librustc_errors/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c31a8754e3f3a9274759cb429aad4ae594d39e29/src%2Flibrustc_errors%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c31a8754e3f3a9274759cb429aad4ae594d39e29/src%2Flibrustc_errors%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_errors%2Flib.rs?ref=c31a8754e3f3a9274759cb429aad4ae594d39e29", "patch": "@@ -37,6 +37,7 @@ mod snippet;\n pub mod registry;\n mod styled_buffer;\n mod lock;\n+pub mod json;\n \n pub type PResult<'a, T> = Result<T, DiagnosticBuilder<'a>>;\n "}, {"sha": "507732a9107fb166476651f796975f16a0e0d7d5", "filename": "src/librustdoc/core.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c31a8754e3f3a9274759cb429aad4ae594d39e29/src%2Flibrustdoc%2Fcore.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c31a8754e3f3a9274759cb429aad4ae594d39e29/src%2Flibrustdoc%2Fcore.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fcore.rs?ref=c31a8754e3f3a9274759cb429aad4ae594d39e29", "patch": "@@ -18,7 +18,7 @@ use syntax::ast::CRATE_NODE_ID;\n use syntax::source_map;\n use syntax::attr;\n use syntax::feature_gate::UnstableFeatures;\n-use syntax::json::JsonEmitter;\n+use errors::json::JsonEmitter;\n use syntax::symbol::sym;\n use syntax_pos::DUMMY_SP;\n use errors;"}, {"sha": "e3eca75dfe7e70951b26fdb7a238759bfad360a3", "filename": "src/libsyntax/lib.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c31a8754e3f3a9274759cb429aad4ae594d39e29/src%2Flibsyntax%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c31a8754e3f3a9274759cb429aad4ae594d39e29/src%2Flibsyntax%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Flib.rs?ref=c31a8754e3f3a9274759cb429aad4ae594d39e29", "patch": "@@ -87,8 +87,6 @@ pub mod util {\n     pub mod map_in_place;\n }\n \n-pub mod json;\n-\n pub mod ast;\n pub mod attr;\n pub mod expand;"}, {"sha": "7930d1249e7dc7da088317734e90abe877215ae8", "filename": "src/tools/compiletest/src/json.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c31a8754e3f3a9274759cb429aad4ae594d39e29/src%2Ftools%2Fcompiletest%2Fsrc%2Fjson.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c31a8754e3f3a9274759cb429aad4ae594d39e29/src%2Ftools%2Fcompiletest%2Fsrc%2Fjson.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fcompiletest%2Fsrc%2Fjson.rs?ref=c31a8754e3f3a9274759cb429aad4ae594d39e29", "patch": "@@ -1,4 +1,4 @@\n-//! These structs are a subset of the ones found in `syntax::json`.\n+//! These structs are a subset of the ones found in `rustc_errors::json`.\n //! They are only used for deserialization of JSON output provided by libtest.\n \n use crate::errors::{Error, ErrorKind};"}]}