{"sha": "e195aa84b482e01b6eadf14211e4d880063a6794", "node_id": "MDY6Q29tbWl0NzI0NzEyOmUxOTVhYTg0YjQ4MmUwMWI2ZWFkZjE0MjExZTRkODgwMDYzYTY3OTQ=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2015-08-25T07:23:18Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2015-08-25T07:23:18Z"}, "message": "Auto merge of #27971 - tbu-:pr_cloexec, r=alexcrichton\n\nOn Linux the flag is just ignored if it is not supported:\r\nhttps://lwn.net/Articles/588444/\r\n\r\nStill needs the values of O_CLOEXEC on the BSDs.\r\n\r\nTouches #24237.", "tree": {"sha": "863286be09aa0563fa6202fc4eb84818c6762dd4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/863286be09aa0563fa6202fc4eb84818c6762dd4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e195aa84b482e01b6eadf14211e4d880063a6794", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e195aa84b482e01b6eadf14211e4d880063a6794", "html_url": "https://github.com/rust-lang/rust/commit/e195aa84b482e01b6eadf14211e4d880063a6794", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e195aa84b482e01b6eadf14211e4d880063a6794/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "656c3acdebb6334b82e3e11251dca6d43406e269", "url": "https://api.github.com/repos/rust-lang/rust/commits/656c3acdebb6334b82e3e11251dca6d43406e269", "html_url": "https://github.com/rust-lang/rust/commit/656c3acdebb6334b82e3e11251dca6d43406e269"}, {"sha": "6de7f609ddc6027b4148b7a458f9f766b44cd09f", "url": "https://api.github.com/repos/rust-lang/rust/commits/6de7f609ddc6027b4148b7a458f9f766b44cd09f", "html_url": "https://github.com/rust-lang/rust/commit/6de7f609ddc6027b4148b7a458f9f766b44cd09f"}], "stats": {"total": 26, "additions": 25, "deletions": 1}, "files": [{"sha": "5cd806dc9e3f3781e4db8597d4608e43412ff8c0", "filename": "src/liblibc/lib.rs", "status": "modified", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/e195aa84b482e01b6eadf14211e4d880063a6794/src%2Fliblibc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e195aa84b482e01b6eadf14211e4d880063a6794/src%2Fliblibc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliblibc%2Flib.rs?ref=e195aa84b482e01b6eadf14211e4d880063a6794", "patch": "@@ -102,6 +102,7 @@ pub use types::os::arch::extra::*;\n pub use consts::os::c95::*;\n pub use consts::os::posix88::*;\n pub use consts::os::posix01::*;\n+pub use consts::os::posix08::*;\n pub use consts::os::bsd44::*;\n pub use consts::os::extra::*;\n \n@@ -3611,6 +3612,8 @@ pub mod consts {\n             pub const RUSAGE_THREAD: c_int = 1;\n         }\n         pub mod posix08 {\n+            use types::os::arch::c95::c_int;\n+            pub const O_CLOEXEC: c_int = 0x80000;\n         }\n         #[cfg(any(target_arch = \"arm\",\n                   target_arch = \"aarch64\",\n@@ -4270,7 +4273,15 @@ pub mod consts {\n             pub const RUSAGE_CHILDREN: c_int = -1;\n             pub const RUSAGE_THREAD: c_int = 1;\n         }\n+        #[cfg(target_os = \"freebsd\")]\n         pub mod posix08 {\n+            use types::os::arch::c95::c_int;\n+            pub const O_CLOEXEC: c_int = 0x100000;\n+        }\n+        #[cfg(target_os = \"dragonfly\")]\n+        pub mod posix08 {\n+            use types::os::arch::c95::c_int;\n+            pub const O_CLOEXEC: c_int = 0x20000;\n         }\n         pub mod bsd44 {\n             use types::os::arch::c95::c_int;\n@@ -4713,7 +4724,15 @@ pub mod consts {\n             pub const RUSAGE_CHILDREN: c_int = -1;\n             pub const RUSAGE_THREAD: c_int = 1;\n         }\n+        #[cfg(any(target_os = \"bitrig\", target_os = \"openbsd\"))]\n         pub mod posix08 {\n+            use types::os::arch::c95::c_int;\n+            pub const O_CLOEXEC: c_int = 0x10000;\n+        }\n+        #[cfg(target_os = \"netbsd\")]\n+        pub mod posix08 {\n+            use types::os::arch::c95::c_int;\n+            pub const O_CLOEXEC: c_int = 0x400000;\n         }\n         pub mod bsd44 {\n             use types::os::arch::c95::c_int;\n@@ -5151,6 +5170,8 @@ pub mod consts {\n             pub const RUSAGE_THREAD: c_int = 1;\n         }\n         pub mod posix08 {\n+            use types::os::arch::c95::c_int;\n+            pub const O_CLOEXEC: c_int = 0x1000000;\n         }\n         pub mod bsd44 {\n             use types::os::arch::c95::c_int;"}, {"sha": "cbbdd223dc2b9530fa7473568efc9ea8e5c7f7b6", "filename": "src/libstd/sys/unix/fs.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/e195aa84b482e01b6eadf14211e4d880063a6794/src%2Flibstd%2Fsys%2Funix%2Ffs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e195aa84b482e01b6eadf14211e4d880063a6794/src%2Flibstd%2Fsys%2Funix%2Ffs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Funix%2Ffs.rs?ref=e195aa84b482e01b6eadf14211e4d880063a6794", "patch": "@@ -212,7 +212,7 @@ impl DirEntry {\n impl OpenOptions {\n     pub fn new() -> OpenOptions {\n         OpenOptions {\n-            flags: 0,\n+            flags: libc::O_CLOEXEC,\n             read: false,\n             write: false,\n             mode: 0o666,\n@@ -269,6 +269,9 @@ impl File {\n             libc::open(path.as_ptr(), flags, opts.mode)\n         }));\n         let fd = FileDesc::new(fd);\n+        // Even though we open with the O_CLOEXEC flag, still set CLOEXEC here,\n+        // in case the open flag is not supported (it's just ignored by the OS\n+        // in that case).\n         fd.set_cloexec();\n         Ok(File(fd))\n     }"}]}