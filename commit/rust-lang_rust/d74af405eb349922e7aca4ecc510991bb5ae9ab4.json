{"sha": "d74af405eb349922e7aca4ecc510991bb5ae9ab4", "node_id": "C_kwDOAAsO6NoAKGQ3NGFmNDA1ZWIzNDk5MjJlN2FjYTRlY2M1MTA5OTFiYjVhZTlhYjQ", "commit": {"author": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2022-08-06T21:09:15Z"}, "committer": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2022-08-06T21:09:15Z"}, "message": "Remove unused cache.", "tree": {"sha": "195ab7891f1b6fadf2c51e6d7fe6e1d5e7fbef0b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/195ab7891f1b6fadf2c51e6d7fe6e1d5e7fbef0b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d74af405eb349922e7aca4ecc510991bb5ae9ab4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d74af405eb349922e7aca4ecc510991bb5ae9ab4", "html_url": "https://github.com/rust-lang/rust/commit/d74af405eb349922e7aca4ecc510991bb5ae9ab4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d74af405eb349922e7aca4ecc510991bb5ae9ab4/comments", "author": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "committer": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a09e9c99a4c58ab6208aa44c4061df9aa2e40197", "url": "https://api.github.com/repos/rust-lang/rust/commits/a09e9c99a4c58ab6208aa44c4061df9aa2e40197", "html_url": "https://github.com/rust-lang/rust/commit/a09e9c99a4c58ab6208aa44c4061df9aa2e40197"}], "stats": {"total": 10, "additions": 0, "deletions": 10}, "files": [{"sha": "be5c7669b01bfa1ad9f8a570713057aa9d0bcad4", "filename": "compiler/rustc_metadata/src/rmeta/decoder.rs", "status": "modified", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/d74af405eb349922e7aca4ecc510991bb5ae9ab4/compiler%2Frustc_metadata%2Fsrc%2Frmeta%2Fdecoder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d74af405eb349922e7aca4ecc510991bb5ae9ab4/compiler%2Frustc_metadata%2Fsrc%2Frmeta%2Fdecoder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_metadata%2Fsrc%2Frmeta%2Fdecoder.rs?ref=d74af405eb349922e7aca4ecc510991bb5ae9ab4", "patch": "@@ -162,9 +162,6 @@ pub(super) struct DecodeContext<'a, 'tcx> {\n     sess: Option<&'tcx Session>,\n     tcx: Option<TyCtxt<'tcx>>,\n \n-    // Cache the last used source_file for translating spans as an optimization.\n-    last_source_file_index: usize,\n-\n     lazy_state: LazyState,\n \n     // Used for decoding interpret::AllocIds in a cached & thread-safe manner.\n@@ -193,7 +190,6 @@ pub(super) trait Metadata<'a, 'tcx>: Copy {\n             blob: self.blob(),\n             sess: self.sess().or(tcx.map(|tcx| tcx.sess)),\n             tcx,\n-            last_source_file_index: 0,\n             lazy_state: LazyState::NoNode,\n             alloc_decoding_session: self\n                 .cdata()\n@@ -582,12 +578,6 @@ impl<'a, 'tcx> Decodable<DecodeContext<'a, 'tcx>> for Span {\n                 cnum\n             );\n \n-            // Decoding 'foreign' spans should be rare enough that it's\n-            // not worth it to maintain a per-CrateNum cache for `last_source_file_index`.\n-            // We just set it to 0, to ensure that we don't try to access something out\n-            // of bounds for our initial 'guess'\n-            decoder.last_source_file_index = 0;\n-\n             let foreign_data = decoder.cdata().cstore.get_crate_data(cnum);\n             foreign_data.imported_source_file(metadata_index, sess)\n         };"}]}