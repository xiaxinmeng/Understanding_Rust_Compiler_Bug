{"sha": "16498953856a41e781da65709f1d111cef66af91", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE2NDk4OTUzODU2YTQxZTc4MWRhNjU3MDlmMWQxMTFjZWY2NmFmOTE=", "commit": {"author": {"name": "Jonas Schievink", "email": "jonasschievink@gmail.com", "date": "2020-05-25T21:22:47Z"}, "committer": {"name": "Jonas Schievink", "email": "jonasschievink@gmail.com", "date": "2020-09-18T19:23:00Z"}, "message": "simplify_try: clean up test", "tree": {"sha": "178e19a30cc2ac741755ac100a3f3fbbd91a6dc1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/178e19a30cc2ac741755ac100a3f3fbbd91a6dc1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/16498953856a41e781da65709f1d111cef66af91", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/16498953856a41e781da65709f1d111cef66af91", "html_url": "https://github.com/rust-lang/rust/commit/16498953856a41e781da65709f1d111cef66af91", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/16498953856a41e781da65709f1d111cef66af91/comments", "author": {"login": "jonas-schievink", "id": 1786438, "node_id": "MDQ6VXNlcjE3ODY0Mzg=", "avatar_url": "https://avatars.githubusercontent.com/u/1786438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonas-schievink", "html_url": "https://github.com/jonas-schievink", "followers_url": "https://api.github.com/users/jonas-schievink/followers", "following_url": "https://api.github.com/users/jonas-schievink/following{/other_user}", "gists_url": "https://api.github.com/users/jonas-schievink/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonas-schievink/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonas-schievink/subscriptions", "organizations_url": "https://api.github.com/users/jonas-schievink/orgs", "repos_url": "https://api.github.com/users/jonas-schievink/repos", "events_url": "https://api.github.com/users/jonas-schievink/events{/privacy}", "received_events_url": "https://api.github.com/users/jonas-schievink/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jonas-schievink", "id": 1786438, "node_id": "MDQ6VXNlcjE3ODY0Mzg=", "avatar_url": "https://avatars.githubusercontent.com/u/1786438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonas-schievink", "html_url": "https://github.com/jonas-schievink", "followers_url": "https://api.github.com/users/jonas-schievink/followers", "following_url": "https://api.github.com/users/jonas-schievink/following{/other_user}", "gists_url": "https://api.github.com/users/jonas-schievink/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonas-schievink/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonas-schievink/subscriptions", "organizations_url": "https://api.github.com/users/jonas-schievink/orgs", "repos_url": "https://api.github.com/users/jonas-schievink/repos", "events_url": "https://api.github.com/users/jonas-schievink/events{/privacy}", "received_events_url": "https://api.github.com/users/jonas-schievink/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "43ad8e4260bec289c522a2fd3597c275e9e3c39c", "url": "https://api.github.com/repos/rust-lang/rust/commits/43ad8e4260bec289c522a2fd3597c275e9e3c39c", "html_url": "https://github.com/rust-lang/rust/commit/43ad8e4260bec289c522a2fd3597c275e9e3c39c"}], "stats": {"total": 315, "additions": 157, "deletions": 158}, "files": [{"sha": "c3e503bf2c686bf784accdb4776e0d3047ca25ad", "filename": "src/test/mir-opt/rustc.try_identity.DestinationPropagation.diff", "status": "modified", "additions": 35, "deletions": 35, "changes": 70, "blob_url": "https://github.com/rust-lang/rust/blob/16498953856a41e781da65709f1d111cef66af91/src%2Ftest%2Fmir-opt%2Frustc.try_identity.DestinationPropagation.diff", "raw_url": "https://github.com/rust-lang/rust/raw/16498953856a41e781da65709f1d111cef66af91/src%2Ftest%2Fmir-opt%2Frustc.try_identity.DestinationPropagation.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Frustc.try_identity.DestinationPropagation.diff?ref=16498953856a41e781da65709f1d111cef66af91", "patch": "@@ -2,35 +2,35 @@\n + // MIR for `try_identity` after DestinationPropagation\n   \n   fn try_identity(_1: std::result::Result<u32, i32>) -> std::result::Result<u32, i32> {\n-      debug x => _1;                       // in scope 0 at $DIR/simplify_try.rs:5:17: 5:18\n-      let mut _0: std::result::Result<u32, i32>; // return place in scope 0 at $DIR/simplify_try.rs:5:41: 5:57\n-      let _2: u32;                         // in scope 0 at $DIR/simplify_try.rs:6:9: 6:10\n-      let mut _3: std::result::Result<u32, i32>; // in scope 0 at $DIR/simplify_try.rs:6:13: 6:15\n-      let mut _4: std::result::Result<u32, i32>; // in scope 0 at $DIR/simplify_try.rs:6:13: 6:14\n-      let mut _5: isize;                   // in scope 0 at $DIR/simplify_try.rs:6:14: 6:15\n-      let _6: i32;                         // in scope 0 at $DIR/simplify_try.rs:6:14: 6:15\n-      let mut _7: !;                       // in scope 0 at $DIR/simplify_try.rs:6:14: 6:15\n-      let mut _8: i32;                     // in scope 0 at $DIR/simplify_try.rs:6:14: 6:15\n-      let mut _9: i32;                     // in scope 0 at $DIR/simplify_try.rs:6:14: 6:15\n-      let _10: u32;                        // in scope 0 at $DIR/simplify_try.rs:6:13: 6:15\n-      let mut _11: u32;                    // in scope 0 at $DIR/simplify_try.rs:7:8: 7:9\n+      debug x => _1;                       // in scope 0 at $DIR/simplify_try.rs:6:17: 6:18\n+      let mut _0: std::result::Result<u32, i32>; // return place in scope 0 at $DIR/simplify_try.rs:6:41: 6:57\n+      let _2: u32;                         // in scope 0 at $DIR/simplify_try.rs:7:9: 7:10\n+      let mut _3: std::result::Result<u32, i32>; // in scope 0 at $DIR/simplify_try.rs:7:13: 7:15\n+      let mut _4: std::result::Result<u32, i32>; // in scope 0 at $DIR/simplify_try.rs:7:13: 7:14\n+      let mut _5: isize;                   // in scope 0 at $DIR/simplify_try.rs:7:14: 7:15\n+      let _6: i32;                         // in scope 0 at $DIR/simplify_try.rs:7:14: 7:15\n+      let mut _7: !;                       // in scope 0 at $DIR/simplify_try.rs:7:14: 7:15\n+      let mut _8: i32;                     // in scope 0 at $DIR/simplify_try.rs:7:14: 7:15\n+      let mut _9: i32;                     // in scope 0 at $DIR/simplify_try.rs:7:14: 7:15\n+      let _10: u32;                        // in scope 0 at $DIR/simplify_try.rs:7:13: 7:15\n+      let mut _11: u32;                    // in scope 0 at $DIR/simplify_try.rs:8:8: 8:9\n       scope 1 {\n-          debug y => _2;                   // in scope 1 at $DIR/simplify_try.rs:6:9: 6:10\n+          debug y => _2;                   // in scope 1 at $DIR/simplify_try.rs:7:9: 7:10\n       }\n       scope 2 {\n-          debug err => _6;                 // in scope 2 at $DIR/simplify_try.rs:6:14: 6:15\n+          debug err => _6;                 // in scope 2 at $DIR/simplify_try.rs:7:14: 7:15\n           scope 3 {\n               scope 7 {\n                   debug t => _9;           // in scope 7 at $SRC_DIR/libcore/convert/mod.rs:LL:COL\n               }\n               scope 8 {\n                   debug v => _8;           // in scope 8 at $SRC_DIR/libcore/result.rs:LL:COL\n-                  let mut _12: i32;        // in scope 8 at $DIR/simplify_try.rs:6:14: 6:15\n+                  let mut _12: i32;        // in scope 8 at $DIR/simplify_try.rs:7:14: 7:15\n               }\n           }\n       }\n       scope 4 {\n-          debug val => _10;                // in scope 4 at $DIR/simplify_try.rs:6:13: 6:15\n+          debug val => _10;                // in scope 4 at $DIR/simplify_try.rs:7:13: 7:15\n           scope 5 {\n           }\n       }\n@@ -40,33 +40,33 @@\n       }\n   \n       bb0: {\n-          StorageLive(_2);                 // scope 0 at $DIR/simplify_try.rs:6:9: 6:10\n--         StorageLive(_3);                 // scope 0 at $DIR/simplify_try.rs:6:13: 6:15\n--         StorageLive(_4);                 // scope 0 at $DIR/simplify_try.rs:6:13: 6:14\n--         _4 = _1;                         // scope 0 at $DIR/simplify_try.rs:6:13: 6:14\n+          StorageLive(_2);                 // scope 0 at $DIR/simplify_try.rs:7:9: 7:10\n+-         StorageLive(_3);                 // scope 0 at $DIR/simplify_try.rs:7:13: 7:15\n+-         StorageLive(_4);                 // scope 0 at $DIR/simplify_try.rs:7:13: 7:14\n+-         _4 = _1;                         // scope 0 at $DIR/simplify_try.rs:7:13: 7:14\n -         _3 = move _4;                    // scope 6 at $SRC_DIR/libcore/result.rs:LL:COL\n--         StorageDead(_4);                 // scope 0 at $DIR/simplify_try.rs:6:14: 6:15\n--         _5 = discriminant(_3);           // scope 0 at $DIR/simplify_try.rs:6:14: 6:15\n-+         nop;                             // scope 0 at $DIR/simplify_try.rs:6:13: 6:15\n-+         nop;                             // scope 0 at $DIR/simplify_try.rs:6:13: 6:14\n-+         _0 = _1;                         // scope 0 at $DIR/simplify_try.rs:6:13: 6:14\n+-         StorageDead(_4);                 // scope 0 at $DIR/simplify_try.rs:7:14: 7:15\n+-         _5 = discriminant(_3);           // scope 0 at $DIR/simplify_try.rs:7:14: 7:15\n++         nop;                             // scope 0 at $DIR/simplify_try.rs:7:13: 7:15\n++         nop;                             // scope 0 at $DIR/simplify_try.rs:7:13: 7:14\n++         _0 = _1;                         // scope 0 at $DIR/simplify_try.rs:7:13: 7:14\n +         nop;                             // scope 6 at $SRC_DIR/libcore/result.rs:LL:COL\n-+         nop;                             // scope 0 at $DIR/simplify_try.rs:6:14: 6:15\n-+         _5 = discriminant(_0);           // scope 0 at $DIR/simplify_try.rs:6:14: 6:15\n-          goto -> bb1;                     // scope 0 at $DIR/simplify_try.rs:6:14: 6:15\n++         nop;                             // scope 0 at $DIR/simplify_try.rs:7:14: 7:15\n++         _5 = discriminant(_0);           // scope 0 at $DIR/simplify_try.rs:7:14: 7:15\n+          goto -> bb1;                     // scope 0 at $DIR/simplify_try.rs:7:14: 7:15\n       }\n   \n       bb1: {\n--         _0 = move _3;                    // scope 1 at $DIR/simplify_try.rs:7:5: 7:10\n--         StorageDead(_3);                 // scope 0 at $DIR/simplify_try.rs:6:15: 6:16\n-+         nop;                             // scope 1 at $DIR/simplify_try.rs:7:5: 7:10\n-+         nop;                             // scope 0 at $DIR/simplify_try.rs:6:15: 6:16\n-          StorageDead(_2);                 // scope 0 at $DIR/simplify_try.rs:8:1: 8:2\n-          goto -> bb2;                     // scope 0 at $DIR/simplify_try.rs:8:2: 8:2\n+-         _0 = move _3;                    // scope 1 at $DIR/simplify_try.rs:8:5: 8:10\n+-         StorageDead(_3);                 // scope 0 at $DIR/simplify_try.rs:7:15: 7:16\n++         nop;                             // scope 1 at $DIR/simplify_try.rs:8:5: 8:10\n++         nop;                             // scope 0 at $DIR/simplify_try.rs:7:15: 7:16\n+          StorageDead(_2);                 // scope 0 at $DIR/simplify_try.rs:9:1: 9:2\n+          goto -> bb2;                     // scope 0 at $DIR/simplify_try.rs:9:2: 9:2\n       }\n   \n       bb2: {\n-          return;                          // scope 0 at $DIR/simplify_try.rs:8:2: 8:2\n+          return;                          // scope 0 at $DIR/simplify_try.rs:9:2: 9:2\n       }\n   }\n   "}, {"sha": "fca80bee89679df7dbdcbf074baf1796bfc21596", "filename": "src/test/mir-opt/simplify_try.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/16498953856a41e781da65709f1d111cef66af91/src%2Ftest%2Fmir-opt%2Fsimplify_try.rs", "raw_url": "https://github.com/rust-lang/rust/raw/16498953856a41e781da65709f1d111cef66af91/src%2Ftest%2Fmir-opt%2Fsimplify_try.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fsimplify_try.rs?ref=16498953856a41e781da65709f1d111cef66af91", "patch": "@@ -1,6 +1,7 @@\n // EMIT_MIR simplify_try.try_identity.SimplifyArmIdentity.diff\n // EMIT_MIR simplify_try.try_identity.SimplifyBranchSame.after.mir\n // EMIT_MIR simplify_try.try_identity.SimplifyLocals.after.mir\n+// EMIT_MIR simplify_try.try_identity.DestinationPropagation.diff\n \n fn try_identity(x: Result<u32, i32>) -> Result<u32, i32> {\n     let y = x?;\n@@ -10,5 +11,3 @@ fn try_identity(x: Result<u32, i32>) -> Result<u32, i32> {\n fn main() {\n     let _ = try_identity(Ok(0));\n }\n-\n-// EMIT_MIR simplify_try.try_identity.DestinationPropagation.diff"}, {"sha": "187a3cfbb896d545e2bbed1f86e29e6439bf4d7a", "filename": "src/test/mir-opt/simplify_try.try_identity.DestinationPropagation.diff", "status": "modified", "additions": 35, "deletions": 35, "changes": 70, "blob_url": "https://github.com/rust-lang/rust/blob/16498953856a41e781da65709f1d111cef66af91/src%2Ftest%2Fmir-opt%2Fsimplify_try.try_identity.DestinationPropagation.diff", "raw_url": "https://github.com/rust-lang/rust/raw/16498953856a41e781da65709f1d111cef66af91/src%2Ftest%2Fmir-opt%2Fsimplify_try.try_identity.DestinationPropagation.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fsimplify_try.try_identity.DestinationPropagation.diff?ref=16498953856a41e781da65709f1d111cef66af91", "patch": "@@ -2,35 +2,35 @@\n + // MIR for `try_identity` after DestinationPropagation\n   \n   fn try_identity(_1: std::result::Result<u32, i32>) -> std::result::Result<u32, i32> {\n-      debug x => _1;                       // in scope 0 at $DIR/simplify_try.rs:5:17: 5:18\n-      let mut _0: std::result::Result<u32, i32>; // return place in scope 0 at $DIR/simplify_try.rs:5:41: 5:57\n-      let _2: u32;                         // in scope 0 at $DIR/simplify_try.rs:6:9: 6:10\n-      let mut _3: std::result::Result<u32, i32>; // in scope 0 at $DIR/simplify_try.rs:6:13: 6:15\n-      let mut _4: std::result::Result<u32, i32>; // in scope 0 at $DIR/simplify_try.rs:6:13: 6:14\n-      let mut _5: isize;                   // in scope 0 at $DIR/simplify_try.rs:6:14: 6:15\n-      let _6: i32;                         // in scope 0 at $DIR/simplify_try.rs:6:14: 6:15\n-      let mut _7: !;                       // in scope 0 at $DIR/simplify_try.rs:6:14: 6:15\n-      let mut _8: i32;                     // in scope 0 at $DIR/simplify_try.rs:6:14: 6:15\n-      let mut _9: i32;                     // in scope 0 at $DIR/simplify_try.rs:6:14: 6:15\n-      let _10: u32;                        // in scope 0 at $DIR/simplify_try.rs:6:13: 6:15\n-      let mut _11: u32;                    // in scope 0 at $DIR/simplify_try.rs:7:8: 7:9\n+      debug x => _1;                       // in scope 0 at $DIR/simplify_try.rs:6:17: 6:18\n+      let mut _0: std::result::Result<u32, i32>; // return place in scope 0 at $DIR/simplify_try.rs:6:41: 6:57\n+      let _2: u32;                         // in scope 0 at $DIR/simplify_try.rs:7:9: 7:10\n+      let mut _3: std::result::Result<u32, i32>; // in scope 0 at $DIR/simplify_try.rs:7:13: 7:15\n+      let mut _4: std::result::Result<u32, i32>; // in scope 0 at $DIR/simplify_try.rs:7:13: 7:14\n+      let mut _5: isize;                   // in scope 0 at $DIR/simplify_try.rs:7:14: 7:15\n+      let _6: i32;                         // in scope 0 at $DIR/simplify_try.rs:7:14: 7:15\n+      let mut _7: !;                       // in scope 0 at $DIR/simplify_try.rs:7:14: 7:15\n+      let mut _8: i32;                     // in scope 0 at $DIR/simplify_try.rs:7:14: 7:15\n+      let mut _9: i32;                     // in scope 0 at $DIR/simplify_try.rs:7:14: 7:15\n+      let _10: u32;                        // in scope 0 at $DIR/simplify_try.rs:7:13: 7:15\n+      let mut _11: u32;                    // in scope 0 at $DIR/simplify_try.rs:8:8: 8:9\n       scope 1 {\n-          debug y => ((_0 as Ok).0: u32);  // in scope 1 at $DIR/simplify_try.rs:6:9: 6:10\n+          debug y => ((_0 as Ok).0: u32);  // in scope 1 at $DIR/simplify_try.rs:7:9: 7:10\n       }\n       scope 2 {\n-          debug err => ((_0 as Err).0: i32); // in scope 2 at $DIR/simplify_try.rs:6:14: 6:15\n+          debug err => ((_0 as Err).0: i32); // in scope 2 at $DIR/simplify_try.rs:7:14: 7:15\n           scope 3 {\n               scope 7 {\n                   debug t => ((_0 as Err).0: i32); // in scope 7 at $SRC_DIR/core/src/convert/mod.rs:LL:COL\n               }\n               scope 8 {\n                   debug v => ((_0 as Err).0: i32); // in scope 8 at $SRC_DIR/core/src/result.rs:LL:COL\n-                  let mut _12: i32;        // in scope 8 at $DIR/simplify_try.rs:6:14: 6:15\n+                  let mut _12: i32;        // in scope 8 at $DIR/simplify_try.rs:7:14: 7:15\n               }\n           }\n       }\n       scope 4 {\n-          debug val => ((_0 as Ok).0: u32); // in scope 4 at $DIR/simplify_try.rs:6:13: 6:15\n+          debug val => ((_0 as Ok).0: u32); // in scope 4 at $DIR/simplify_try.rs:7:13: 7:15\n           scope 5 {\n           }\n       }\n@@ -40,33 +40,33 @@\n       }\n   \n       bb0: {\n-          StorageLive(_2);                 // scope 0 at $DIR/simplify_try.rs:6:9: 6:10\n--         StorageLive(_3);                 // scope 0 at $DIR/simplify_try.rs:6:13: 6:15\n--         StorageLive(_4);                 // scope 0 at $DIR/simplify_try.rs:6:13: 6:14\n--         _4 = _1;                         // scope 0 at $DIR/simplify_try.rs:6:13: 6:14\n+          StorageLive(_2);                 // scope 0 at $DIR/simplify_try.rs:7:9: 7:10\n+-         StorageLive(_3);                 // scope 0 at $DIR/simplify_try.rs:7:13: 7:15\n+-         StorageLive(_4);                 // scope 0 at $DIR/simplify_try.rs:7:13: 7:14\n+-         _4 = _1;                         // scope 0 at $DIR/simplify_try.rs:7:13: 7:14\n -         _3 = move _4;                    // scope 6 at $SRC_DIR/core/src/result.rs:LL:COL\n--         StorageDead(_4);                 // scope 0 at $DIR/simplify_try.rs:6:14: 6:15\n--         _5 = discriminant(_3);           // scope 0 at $DIR/simplify_try.rs:6:14: 6:15\n-+         nop;                             // scope 0 at $DIR/simplify_try.rs:6:13: 6:15\n-+         nop;                             // scope 0 at $DIR/simplify_try.rs:6:13: 6:14\n-+         _0 = _1;                         // scope 0 at $DIR/simplify_try.rs:6:13: 6:14\n+-         StorageDead(_4);                 // scope 0 at $DIR/simplify_try.rs:7:14: 7:15\n+-         _5 = discriminant(_3);           // scope 0 at $DIR/simplify_try.rs:7:14: 7:15\n++         nop;                             // scope 0 at $DIR/simplify_try.rs:7:13: 7:15\n++         nop;                             // scope 0 at $DIR/simplify_try.rs:7:13: 7:14\n++         _0 = _1;                         // scope 0 at $DIR/simplify_try.rs:7:13: 7:14\n +         nop;                             // scope 6 at $SRC_DIR/core/src/result.rs:LL:COL\n-+         nop;                             // scope 0 at $DIR/simplify_try.rs:6:14: 6:15\n-+         _5 = discriminant(_0);           // scope 0 at $DIR/simplify_try.rs:6:14: 6:15\n-          goto -> bb1;                     // scope 0 at $DIR/simplify_try.rs:6:14: 6:15\n++         nop;                             // scope 0 at $DIR/simplify_try.rs:7:14: 7:15\n++         _5 = discriminant(_0);           // scope 0 at $DIR/simplify_try.rs:7:14: 7:15\n+          goto -> bb1;                     // scope 0 at $DIR/simplify_try.rs:7:14: 7:15\n       }\n   \n       bb1: {\n--         _0 = move _3;                    // scope 1 at $DIR/simplify_try.rs:7:5: 7:10\n--         StorageDead(_3);                 // scope 0 at $DIR/simplify_try.rs:6:15: 6:16\n-+         nop;                             // scope 1 at $DIR/simplify_try.rs:7:5: 7:10\n-+         nop;                             // scope 0 at $DIR/simplify_try.rs:6:15: 6:16\n-          StorageDead(_2);                 // scope 0 at $DIR/simplify_try.rs:8:1: 8:2\n-          goto -> bb2;                     // scope 0 at $DIR/simplify_try.rs:8:2: 8:2\n+-         _0 = move _3;                    // scope 1 at $DIR/simplify_try.rs:8:5: 8:10\n+-         StorageDead(_3);                 // scope 0 at $DIR/simplify_try.rs:7:15: 7:16\n++         nop;                             // scope 1 at $DIR/simplify_try.rs:8:5: 8:10\n++         nop;                             // scope 0 at $DIR/simplify_try.rs:7:15: 7:16\n+          StorageDead(_2);                 // scope 0 at $DIR/simplify_try.rs:9:1: 9:2\n+          goto -> bb2;                     // scope 0 at $DIR/simplify_try.rs:9:2: 9:2\n       }\n   \n       bb2: {\n-          return;                          // scope 0 at $DIR/simplify_try.rs:8:2: 8:2\n+          return;                          // scope 0 at $DIR/simplify_try.rs:9:2: 9:2\n       }\n   }\n   "}, {"sha": "0c687684c508ea25d83005607844dbc25820a519", "filename": "src/test/mir-opt/simplify_try.try_identity.SimplifyArmIdentity.diff", "status": "modified", "additions": 51, "deletions": 51, "changes": 102, "blob_url": "https://github.com/rust-lang/rust/blob/16498953856a41e781da65709f1d111cef66af91/src%2Ftest%2Fmir-opt%2Fsimplify_try.try_identity.SimplifyArmIdentity.diff", "raw_url": "https://github.com/rust-lang/rust/raw/16498953856a41e781da65709f1d111cef66af91/src%2Ftest%2Fmir-opt%2Fsimplify_try.try_identity.SimplifyArmIdentity.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fsimplify_try.try_identity.SimplifyArmIdentity.diff?ref=16498953856a41e781da65709f1d111cef66af91", "patch": "@@ -2,25 +2,25 @@\n + // MIR for `try_identity` after SimplifyArmIdentity\n   \n   fn try_identity(_1: std::result::Result<u32, i32>) -> std::result::Result<u32, i32> {\n-      debug x => _1;                       // in scope 0 at $DIR/simplify_try.rs:5:17: 5:18\n-      let mut _0: std::result::Result<u32, i32>; // return place in scope 0 at $DIR/simplify_try.rs:5:41: 5:57\n-      let _2: u32;                         // in scope 0 at $DIR/simplify_try.rs:6:9: 6:10\n-      let mut _3: std::result::Result<u32, i32>; // in scope 0 at $DIR/simplify_try.rs:6:13: 6:15\n-      let mut _4: std::result::Result<u32, i32>; // in scope 0 at $DIR/simplify_try.rs:6:13: 6:14\n-      let mut _5: isize;                   // in scope 0 at $DIR/simplify_try.rs:6:14: 6:15\n-      let _6: i32;                         // in scope 0 at $DIR/simplify_try.rs:6:14: 6:15\n-      let mut _7: !;                       // in scope 0 at $DIR/simplify_try.rs:6:14: 6:15\n-      let mut _8: i32;                     // in scope 0 at $DIR/simplify_try.rs:6:14: 6:15\n-      let mut _9: i32;                     // in scope 0 at $DIR/simplify_try.rs:6:14: 6:15\n-      let _10: u32;                        // in scope 0 at $DIR/simplify_try.rs:6:13: 6:15\n-      let mut _11: u32;                    // in scope 0 at $DIR/simplify_try.rs:7:8: 7:9\n+      debug x => _1;                       // in scope 0 at $DIR/simplify_try.rs:6:17: 6:18\n+      let mut _0: std::result::Result<u32, i32>; // return place in scope 0 at $DIR/simplify_try.rs:6:41: 6:57\n+      let _2: u32;                         // in scope 0 at $DIR/simplify_try.rs:7:9: 7:10\n+      let mut _3: std::result::Result<u32, i32>; // in scope 0 at $DIR/simplify_try.rs:7:13: 7:15\n+      let mut _4: std::result::Result<u32, i32>; // in scope 0 at $DIR/simplify_try.rs:7:13: 7:14\n+      let mut _5: isize;                   // in scope 0 at $DIR/simplify_try.rs:7:14: 7:15\n+      let _6: i32;                         // in scope 0 at $DIR/simplify_try.rs:7:14: 7:15\n+      let mut _7: !;                       // in scope 0 at $DIR/simplify_try.rs:7:14: 7:15\n+      let mut _8: i32;                     // in scope 0 at $DIR/simplify_try.rs:7:14: 7:15\n+      let mut _9: i32;                     // in scope 0 at $DIR/simplify_try.rs:7:14: 7:15\n+      let _10: u32;                        // in scope 0 at $DIR/simplify_try.rs:7:13: 7:15\n+      let mut _11: u32;                    // in scope 0 at $DIR/simplify_try.rs:8:8: 8:9\n       scope 1 {\n--         debug y => _2;                   // in scope 1 at $DIR/simplify_try.rs:6:9: 6:10\n-+         debug y => ((_0 as Ok).0: u32);  // in scope 1 at $DIR/simplify_try.rs:6:9: 6:10\n+-         debug y => _2;                   // in scope 1 at $DIR/simplify_try.rs:7:9: 7:10\n++         debug y => ((_0 as Ok).0: u32);  // in scope 1 at $DIR/simplify_try.rs:7:9: 7:10\n       }\n       scope 2 {\n--         debug err => _6;                 // in scope 2 at $DIR/simplify_try.rs:6:14: 6:15\n-+         debug err => ((_0 as Err).0: i32); // in scope 2 at $DIR/simplify_try.rs:6:14: 6:15\n+-         debug err => _6;                 // in scope 2 at $DIR/simplify_try.rs:7:14: 7:15\n++         debug err => ((_0 as Err).0: i32); // in scope 2 at $DIR/simplify_try.rs:7:14: 7:15\n           scope 3 {\n               scope 7 {\n -                 debug t => _9;           // in scope 7 at $SRC_DIR/core/src/convert/mod.rs:LL:COL\n@@ -29,13 +29,13 @@\n               scope 8 {\n -                 debug v => _8;           // in scope 8 at $SRC_DIR/core/src/result.rs:LL:COL\n +                 debug v => ((_0 as Err).0: i32); // in scope 8 at $SRC_DIR/core/src/result.rs:LL:COL\n-                  let mut _12: i32;        // in scope 8 at $DIR/simplify_try.rs:6:14: 6:15\n+                  let mut _12: i32;        // in scope 8 at $DIR/simplify_try.rs:7:14: 7:15\n               }\n           }\n       }\n       scope 4 {\n--         debug val => _10;                // in scope 4 at $DIR/simplify_try.rs:6:13: 6:15\n-+         debug val => ((_0 as Ok).0: u32); // in scope 4 at $DIR/simplify_try.rs:6:13: 6:15\n+-         debug val => _10;                // in scope 4 at $DIR/simplify_try.rs:7:13: 7:15\n++         debug val => ((_0 as Ok).0: u32); // in scope 4 at $DIR/simplify_try.rs:7:13: 7:15\n           scope 5 {\n           }\n       }\n@@ -44,55 +44,55 @@\n       }\n   \n       bb0: {\n-          StorageLive(_2);                 // scope 0 at $DIR/simplify_try.rs:6:9: 6:10\n-          StorageLive(_3);                 // scope 0 at $DIR/simplify_try.rs:6:13: 6:15\n-          StorageLive(_4);                 // scope 0 at $DIR/simplify_try.rs:6:13: 6:14\n-          _4 = _1;                         // scope 0 at $DIR/simplify_try.rs:6:13: 6:14\n+          StorageLive(_2);                 // scope 0 at $DIR/simplify_try.rs:7:9: 7:10\n+          StorageLive(_3);                 // scope 0 at $DIR/simplify_try.rs:7:13: 7:15\n+          StorageLive(_4);                 // scope 0 at $DIR/simplify_try.rs:7:13: 7:14\n+          _4 = _1;                         // scope 0 at $DIR/simplify_try.rs:7:13: 7:14\n           _3 = move _4;                    // scope 6 at $SRC_DIR/core/src/result.rs:LL:COL\n-          StorageDead(_4);                 // scope 0 at $DIR/simplify_try.rs:6:14: 6:15\n-          _5 = discriminant(_3);           // scope 0 at $DIR/simplify_try.rs:6:14: 6:15\n-          switchInt(move _5) -> [0_isize: bb1, otherwise: bb2]; // scope 0 at $DIR/simplify_try.rs:6:14: 6:15\n+          StorageDead(_4);                 // scope 0 at $DIR/simplify_try.rs:7:14: 7:15\n+          _5 = discriminant(_3);           // scope 0 at $DIR/simplify_try.rs:7:14: 7:15\n+          switchInt(move _5) -> [0_isize: bb1, otherwise: bb2]; // scope 0 at $DIR/simplify_try.rs:7:14: 7:15\n       }\n   \n       bb1: {\n--         StorageLive(_10);                // scope 0 at $DIR/simplify_try.rs:6:13: 6:15\n--         _10 = ((_3 as Ok).0: u32);       // scope 0 at $DIR/simplify_try.rs:6:13: 6:15\n--         _2 = _10;                        // scope 5 at $DIR/simplify_try.rs:6:13: 6:15\n--         StorageDead(_10);                // scope 0 at $DIR/simplify_try.rs:6:14: 6:15\n-+         _0 = move _3;                    // scope 1 at $DIR/simplify_try.rs:7:5: 7:10\n-          StorageDead(_3);                 // scope 0 at $DIR/simplify_try.rs:6:15: 6:16\n--         StorageLive(_11);                // scope 1 at $DIR/simplify_try.rs:7:8: 7:9\n--         _11 = _2;                        // scope 1 at $DIR/simplify_try.rs:7:8: 7:9\n--         ((_0 as Ok).0: u32) = move _11;  // scope 1 at $DIR/simplify_try.rs:7:5: 7:10\n--         discriminant(_0) = 0;            // scope 1 at $DIR/simplify_try.rs:7:5: 7:10\n--         StorageDead(_11);                // scope 1 at $DIR/simplify_try.rs:7:9: 7:10\n-          StorageDead(_2);                 // scope 0 at $DIR/simplify_try.rs:8:1: 8:2\n-          goto -> bb3;                     // scope 0 at $DIR/simplify_try.rs:8:2: 8:2\n+-         StorageLive(_10);                // scope 0 at $DIR/simplify_try.rs:7:13: 7:15\n+-         _10 = ((_3 as Ok).0: u32);       // scope 0 at $DIR/simplify_try.rs:7:13: 7:15\n+-         _2 = _10;                        // scope 5 at $DIR/simplify_try.rs:7:13: 7:15\n+-         StorageDead(_10);                // scope 0 at $DIR/simplify_try.rs:7:14: 7:15\n++         _0 = move _3;                    // scope 1 at $DIR/simplify_try.rs:8:5: 8:10\n+          StorageDead(_3);                 // scope 0 at $DIR/simplify_try.rs:7:15: 7:16\n+-         StorageLive(_11);                // scope 1 at $DIR/simplify_try.rs:8:8: 8:9\n+-         _11 = _2;                        // scope 1 at $DIR/simplify_try.rs:8:8: 8:9\n+-         ((_0 as Ok).0: u32) = move _11;  // scope 1 at $DIR/simplify_try.rs:8:5: 8:10\n+-         discriminant(_0) = 0;            // scope 1 at $DIR/simplify_try.rs:8:5: 8:10\n+-         StorageDead(_11);                // scope 1 at $DIR/simplify_try.rs:8:9: 8:10\n+          StorageDead(_2);                 // scope 0 at $DIR/simplify_try.rs:9:1: 9:2\n+          goto -> bb3;                     // scope 0 at $DIR/simplify_try.rs:9:2: 9:2\n       }\n   \n       bb2: {\n--         StorageLive(_6);                 // scope 0 at $DIR/simplify_try.rs:6:14: 6:15\n--         _6 = ((_3 as Err).0: i32);       // scope 0 at $DIR/simplify_try.rs:6:14: 6:15\n--         StorageLive(_8);                 // scope 3 at $DIR/simplify_try.rs:6:14: 6:15\n--         StorageLive(_9);                 // scope 3 at $DIR/simplify_try.rs:6:14: 6:15\n--         _9 = _6;                         // scope 3 at $DIR/simplify_try.rs:6:14: 6:15\n+-         StorageLive(_6);                 // scope 0 at $DIR/simplify_try.rs:7:14: 7:15\n+-         _6 = ((_3 as Err).0: i32);       // scope 0 at $DIR/simplify_try.rs:7:14: 7:15\n+-         StorageLive(_8);                 // scope 3 at $DIR/simplify_try.rs:7:14: 7:15\n+-         StorageLive(_9);                 // scope 3 at $DIR/simplify_try.rs:7:14: 7:15\n+-         _9 = _6;                         // scope 3 at $DIR/simplify_try.rs:7:14: 7:15\n -         _8 = move _9;                    // scope 7 at $SRC_DIR/core/src/convert/mod.rs:LL:COL\n--         StorageDead(_9);                 // scope 3 at $DIR/simplify_try.rs:6:14: 6:15\n+-         StorageDead(_9);                 // scope 3 at $DIR/simplify_try.rs:7:14: 7:15\n -         StorageLive(_12);                // scope 8 at $SRC_DIR/core/src/result.rs:LL:COL\n -         _12 = move _8;                   // scope 8 at $SRC_DIR/core/src/result.rs:LL:COL\n -         ((_0 as Err).0: i32) = move _12; // scope 8 at $SRC_DIR/core/src/result.rs:LL:COL\n -         discriminant(_0) = 1;            // scope 8 at $SRC_DIR/core/src/result.rs:LL:COL\n -         StorageDead(_12);                // scope 8 at $SRC_DIR/core/src/result.rs:LL:COL\n--         StorageDead(_8);                 // scope 3 at $DIR/simplify_try.rs:6:14: 6:15\n--         StorageDead(_6);                 // scope 0 at $DIR/simplify_try.rs:6:14: 6:15\n+-         StorageDead(_8);                 // scope 3 at $DIR/simplify_try.rs:7:14: 7:15\n+-         StorageDead(_6);                 // scope 0 at $DIR/simplify_try.rs:7:14: 7:15\n +         _0 = move _3;                    // scope 8 at $SRC_DIR/core/src/result.rs:LL:COL\n-          StorageDead(_3);                 // scope 0 at $DIR/simplify_try.rs:6:15: 6:16\n-          StorageDead(_2);                 // scope 0 at $DIR/simplify_try.rs:8:1: 8:2\n-          goto -> bb3;                     // scope 0 at $DIR/simplify_try.rs:6:14: 6:15\n+          StorageDead(_3);                 // scope 0 at $DIR/simplify_try.rs:7:15: 7:16\n+          StorageDead(_2);                 // scope 0 at $DIR/simplify_try.rs:9:1: 9:2\n+          goto -> bb3;                     // scope 0 at $DIR/simplify_try.rs:7:14: 7:15\n       }\n   \n       bb3: {\n-          return;                          // scope 0 at $DIR/simplify_try.rs:8:2: 8:2\n+          return;                          // scope 0 at $DIR/simplify_try.rs:9:2: 9:2\n       }\n   }\n   "}, {"sha": "9428d305c87319547ed2864aae42ac4279b0b73e", "filename": "src/test/mir-opt/simplify_try.try_identity.SimplifyBranchSame.after.mir", "status": "modified", "additions": 28, "deletions": 28, "changes": 56, "blob_url": "https://github.com/rust-lang/rust/blob/16498953856a41e781da65709f1d111cef66af91/src%2Ftest%2Fmir-opt%2Fsimplify_try.try_identity.SimplifyBranchSame.after.mir", "raw_url": "https://github.com/rust-lang/rust/raw/16498953856a41e781da65709f1d111cef66af91/src%2Ftest%2Fmir-opt%2Fsimplify_try.try_identity.SimplifyBranchSame.after.mir", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fsimplify_try.try_identity.SimplifyBranchSame.after.mir?ref=16498953856a41e781da65709f1d111cef66af91", "patch": "@@ -1,35 +1,35 @@\n // MIR for `try_identity` after SimplifyBranchSame\n \n fn try_identity(_1: std::result::Result<u32, i32>) -> std::result::Result<u32, i32> {\n-    debug x => _1;                       // in scope 0 at $DIR/simplify_try.rs:5:17: 5:18\n-    let mut _0: std::result::Result<u32, i32>; // return place in scope 0 at $DIR/simplify_try.rs:5:41: 5:57\n-    let _2: u32;                         // in scope 0 at $DIR/simplify_try.rs:6:9: 6:10\n-    let mut _3: std::result::Result<u32, i32>; // in scope 0 at $DIR/simplify_try.rs:6:13: 6:15\n-    let mut _4: std::result::Result<u32, i32>; // in scope 0 at $DIR/simplify_try.rs:6:13: 6:14\n-    let mut _5: isize;                   // in scope 0 at $DIR/simplify_try.rs:6:14: 6:15\n-    let _6: i32;                         // in scope 0 at $DIR/simplify_try.rs:6:14: 6:15\n-    let mut _7: !;                       // in scope 0 at $DIR/simplify_try.rs:6:14: 6:15\n-    let mut _8: i32;                     // in scope 0 at $DIR/simplify_try.rs:6:14: 6:15\n-    let mut _9: i32;                     // in scope 0 at $DIR/simplify_try.rs:6:14: 6:15\n-    let _10: u32;                        // in scope 0 at $DIR/simplify_try.rs:6:13: 6:15\n-    let mut _11: u32;                    // in scope 0 at $DIR/simplify_try.rs:7:8: 7:9\n+    debug x => _1;                       // in scope 0 at $DIR/simplify_try.rs:6:17: 6:18\n+    let mut _0: std::result::Result<u32, i32>; // return place in scope 0 at $DIR/simplify_try.rs:6:41: 6:57\n+    let _2: u32;                         // in scope 0 at $DIR/simplify_try.rs:7:9: 7:10\n+    let mut _3: std::result::Result<u32, i32>; // in scope 0 at $DIR/simplify_try.rs:7:13: 7:15\n+    let mut _4: std::result::Result<u32, i32>; // in scope 0 at $DIR/simplify_try.rs:7:13: 7:14\n+    let mut _5: isize;                   // in scope 0 at $DIR/simplify_try.rs:7:14: 7:15\n+    let _6: i32;                         // in scope 0 at $DIR/simplify_try.rs:7:14: 7:15\n+    let mut _7: !;                       // in scope 0 at $DIR/simplify_try.rs:7:14: 7:15\n+    let mut _8: i32;                     // in scope 0 at $DIR/simplify_try.rs:7:14: 7:15\n+    let mut _9: i32;                     // in scope 0 at $DIR/simplify_try.rs:7:14: 7:15\n+    let _10: u32;                        // in scope 0 at $DIR/simplify_try.rs:7:13: 7:15\n+    let mut _11: u32;                    // in scope 0 at $DIR/simplify_try.rs:8:8: 8:9\n     scope 1 {\n-        debug y => ((_0 as Ok).0: u32);  // in scope 1 at $DIR/simplify_try.rs:6:9: 6:10\n+        debug y => ((_0 as Ok).0: u32);  // in scope 1 at $DIR/simplify_try.rs:7:9: 7:10\n     }\n     scope 2 {\n-        debug err => ((_0 as Err).0: i32); // in scope 2 at $DIR/simplify_try.rs:6:14: 6:15\n+        debug err => ((_0 as Err).0: i32); // in scope 2 at $DIR/simplify_try.rs:7:14: 7:15\n         scope 3 {\n             scope 7 {\n                 debug t => ((_0 as Err).0: i32); // in scope 7 at $SRC_DIR/core/src/convert/mod.rs:LL:COL\n             }\n             scope 8 {\n                 debug v => ((_0 as Err).0: i32); // in scope 8 at $SRC_DIR/core/src/result.rs:LL:COL\n-                let mut _12: i32;        // in scope 8 at $DIR/simplify_try.rs:6:14: 6:15\n+                let mut _12: i32;        // in scope 8 at $DIR/simplify_try.rs:7:14: 7:15\n             }\n         }\n     }\n     scope 4 {\n-        debug val => ((_0 as Ok).0: u32); // in scope 4 at $DIR/simplify_try.rs:6:13: 6:15\n+        debug val => ((_0 as Ok).0: u32); // in scope 4 at $DIR/simplify_try.rs:7:13: 7:15\n         scope 5 {\n         }\n     }\n@@ -38,24 +38,24 @@ fn try_identity(_1: std::result::Result<u32, i32>) -> std::result::Result<u32, i\n     }\n \n     bb0: {\n-        StorageLive(_2);                 // scope 0 at $DIR/simplify_try.rs:6:9: 6:10\n-        StorageLive(_3);                 // scope 0 at $DIR/simplify_try.rs:6:13: 6:15\n-        StorageLive(_4);                 // scope 0 at $DIR/simplify_try.rs:6:13: 6:14\n-        _4 = _1;                         // scope 0 at $DIR/simplify_try.rs:6:13: 6:14\n+        StorageLive(_2);                 // scope 0 at $DIR/simplify_try.rs:7:9: 7:10\n+        StorageLive(_3);                 // scope 0 at $DIR/simplify_try.rs:7:13: 7:15\n+        StorageLive(_4);                 // scope 0 at $DIR/simplify_try.rs:7:13: 7:14\n+        _4 = _1;                         // scope 0 at $DIR/simplify_try.rs:7:13: 7:14\n         _3 = move _4;                    // scope 6 at $SRC_DIR/core/src/result.rs:LL:COL\n-        StorageDead(_4);                 // scope 0 at $DIR/simplify_try.rs:6:14: 6:15\n-        _5 = discriminant(_3);           // scope 0 at $DIR/simplify_try.rs:6:14: 6:15\n-        goto -> bb1;                     // scope 0 at $DIR/simplify_try.rs:6:14: 6:15\n+        StorageDead(_4);                 // scope 0 at $DIR/simplify_try.rs:7:14: 7:15\n+        _5 = discriminant(_3);           // scope 0 at $DIR/simplify_try.rs:7:14: 7:15\n+        goto -> bb1;                     // scope 0 at $DIR/simplify_try.rs:7:14: 7:15\n     }\n \n     bb1: {\n-        _0 = move _3;                    // scope 1 at $DIR/simplify_try.rs:7:5: 7:10\n-        StorageDead(_3);                 // scope 0 at $DIR/simplify_try.rs:6:15: 6:16\n-        StorageDead(_2);                 // scope 0 at $DIR/simplify_try.rs:8:1: 8:2\n-        goto -> bb2;                     // scope 0 at $DIR/simplify_try.rs:8:2: 8:2\n+        _0 = move _3;                    // scope 1 at $DIR/simplify_try.rs:8:5: 8:10\n+        StorageDead(_3);                 // scope 0 at $DIR/simplify_try.rs:7:15: 7:16\n+        StorageDead(_2);                 // scope 0 at $DIR/simplify_try.rs:9:1: 9:2\n+        goto -> bb2;                     // scope 0 at $DIR/simplify_try.rs:9:2: 9:2\n     }\n \n     bb2: {\n-        return;                          // scope 0 at $DIR/simplify_try.rs:8:2: 8:2\n+        return;                          // scope 0 at $DIR/simplify_try.rs:9:2: 9:2\n     }\n }"}, {"sha": "a25472f6a5e05c96224b9b5ac5b7bb9b9e446e37", "filename": "src/test/mir-opt/simplify_try.try_identity.SimplifyLocals.after.mir", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/16498953856a41e781da65709f1d111cef66af91/src%2Ftest%2Fmir-opt%2Fsimplify_try.try_identity.SimplifyLocals.after.mir", "raw_url": "https://github.com/rust-lang/rust/raw/16498953856a41e781da65709f1d111cef66af91/src%2Ftest%2Fmir-opt%2Fsimplify_try.try_identity.SimplifyLocals.after.mir", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fsimplify_try.try_identity.SimplifyLocals.after.mir?ref=16498953856a41e781da65709f1d111cef66af91", "patch": "@@ -1,13 +1,13 @@\n // MIR for `try_identity` after SimplifyLocals\n \n fn try_identity(_1: std::result::Result<u32, i32>) -> std::result::Result<u32, i32> {\n-    debug x => _1;                       // in scope 0 at $DIR/simplify_try.rs:5:17: 5:18\n-    let mut _0: std::result::Result<u32, i32>; // return place in scope 0 at $DIR/simplify_try.rs:5:41: 5:57\n+    debug x => _1;                       // in scope 0 at $DIR/simplify_try.rs:6:17: 6:18\n+    let mut _0: std::result::Result<u32, i32>; // return place in scope 0 at $DIR/simplify_try.rs:6:41: 6:57\n     scope 1 {\n-        debug y => ((_0 as Ok).0: u32);  // in scope 1 at $DIR/simplify_try.rs:6:9: 6:10\n+        debug y => ((_0 as Ok).0: u32);  // in scope 1 at $DIR/simplify_try.rs:7:9: 7:10\n     }\n     scope 2 {\n-        debug err => ((_0 as Err).0: i32); // in scope 2 at $DIR/simplify_try.rs:6:14: 6:15\n+        debug err => ((_0 as Err).0: i32); // in scope 2 at $DIR/simplify_try.rs:7:14: 7:15\n         scope 3 {\n             scope 7 {\n                 debug t => ((_0 as Err).0: i32); // in scope 7 at $SRC_DIR/core/src/convert/mod.rs:LL:COL\n@@ -18,7 +18,7 @@ fn try_identity(_1: std::result::Result<u32, i32>) -> std::result::Result<u32, i\n         }\n     }\n     scope 4 {\n-        debug val => ((_0 as Ok).0: u32); // in scope 4 at $DIR/simplify_try.rs:6:13: 6:15\n+        debug val => ((_0 as Ok).0: u32); // in scope 4 at $DIR/simplify_try.rs:7:13: 7:15\n         scope 5 {\n         }\n     }\n@@ -27,7 +27,7 @@ fn try_identity(_1: std::result::Result<u32, i32>) -> std::result::Result<u32, i\n     }\n \n     bb0: {\n-        _0 = _1;                         // scope 0 at $DIR/simplify_try.rs:6:13: 6:14\n-        return;                          // scope 0 at $DIR/simplify_try.rs:8:2: 8:2\n+        _0 = _1;                         // scope 0 at $DIR/simplify_try.rs:7:13: 7:14\n+        return;                          // scope 0 at $DIR/simplify_try.rs:9:2: 9:2\n     }\n }"}]}