{"sha": "ea52be482ab4945fda63cb65b6a198309a041e3c", "node_id": "MDY6Q29tbWl0NzI0NzEyOmVhNTJiZTQ4MmFiNDk0NWZkYTYzY2I2NWI2YTE5ODMwOWEwNDFlM2M=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2019-08-18T13:22:38Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2019-08-18T13:22:38Z"}, "message": "Auto merge of #63635 - oli-obk:default-slice-dangles, r=eddyb\n\nDo not generate allocations for zero sized allocations\n\nAlternative to https://github.com/rust-lang/rust/issues/62487\n\nr? @eddyb\n\nThere are other places where we could do this, too, but that would cause `static FOO: () = ();` to not have a unique address", "tree": {"sha": "7c1bd1c098b3d0bced875d58a3953717fa15e177", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7c1bd1c098b3d0bced875d58a3953717fa15e177"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ea52be482ab4945fda63cb65b6a198309a041e3c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ea52be482ab4945fda63cb65b6a198309a041e3c", "html_url": "https://github.com/rust-lang/rust/commit/ea52be482ab4945fda63cb65b6a198309a041e3c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ea52be482ab4945fda63cb65b6a198309a041e3c/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "71e2882973e63b9ddc837a61ac8631e6451d31a9", "url": "https://api.github.com/repos/rust-lang/rust/commits/71e2882973e63b9ddc837a61ac8631e6451d31a9", "html_url": "https://github.com/rust-lang/rust/commit/71e2882973e63b9ddc837a61ac8631e6451d31a9"}, {"sha": "1ea88a8689a461638fef31e01e62fffc63ac5b79", "url": "https://api.github.com/repos/rust-lang/rust/commits/1ea88a8689a461638fef31e01e62fffc63ac5b79", "html_url": "https://github.com/rust-lang/rust/commit/1ea88a8689a461638fef31e01e62fffc63ac5b79"}], "stats": {"total": 43, "additions": 34, "deletions": 9}, "files": [{"sha": "19f18088579b33172594c31e835da33a7443702b", "filename": "src/librustc_codegen_llvm/common.rs", "status": "modified", "additions": 15, "deletions": 9, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/ea52be482ab4945fda63cb65b6a198309a041e3c/src%2Flibrustc_codegen_llvm%2Fcommon.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ea52be482ab4945fda63cb65b6a198309a041e3c/src%2Flibrustc_codegen_llvm%2Fcommon.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_llvm%2Fcommon.rs?ref=ea52be482ab4945fda63cb65b6a198309a041e3c", "patch": "@@ -333,15 +333,21 @@ impl ConstMethods<'tcx> for CodegenCx<'ll, 'tcx> {\n         offset: Size,\n     ) -> PlaceRef<'tcx, &'ll Value> {\n         assert_eq!(alloc.align, layout.align.abi);\n-        let init = const_alloc_to_llvm(self, alloc);\n-        let base_addr = self.static_addr_of(init, alloc.align, None);\n-\n-        let llval = unsafe { llvm::LLVMConstInBoundsGEP(\n-            self.const_bitcast(base_addr, self.type_i8p()),\n-            &self.const_usize(offset.bytes()),\n-            1,\n-        )};\n-        let llval = self.const_bitcast(llval, self.type_ptr_to(layout.llvm_type(self)));\n+        let llty = self.type_ptr_to(layout.llvm_type(self));\n+        let llval = if layout.size == Size::ZERO {\n+            let llval = self.const_usize(alloc.align.bytes());\n+            unsafe { llvm::LLVMConstIntToPtr(llval, llty) }\n+        } else {\n+            let init = const_alloc_to_llvm(self, alloc);\n+            let base_addr = self.static_addr_of(init, alloc.align, None);\n+\n+            let llval = unsafe { llvm::LLVMConstInBoundsGEP(\n+                self.const_bitcast(base_addr, self.type_i8p()),\n+                &self.const_usize(offset.bytes()),\n+                1,\n+            )};\n+            self.const_bitcast(llval, llty)\n+        };\n         PlaceRef::new_sized(llval, layout, alloc.align)\n     }\n "}, {"sha": "5d779355400ccf6c0ee8040a568776999191c96a", "filename": "src/test/ui/consts/zst_no_llvm_alloc.rs", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/ea52be482ab4945fda63cb65b6a198309a041e3c/src%2Ftest%2Fui%2Fconsts%2Fzst_no_llvm_alloc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ea52be482ab4945fda63cb65b6a198309a041e3c/src%2Ftest%2Fui%2Fconsts%2Fzst_no_llvm_alloc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fzst_no_llvm_alloc.rs?ref=ea52be482ab4945fda63cb65b6a198309a041e3c", "patch": "@@ -0,0 +1,19 @@\n+// run-pass\n+\n+#[repr(align(4))]\n+struct Foo;\n+\n+static FOO: Foo = Foo;\n+\n+fn main() {\n+    let x: &'static () = &();\n+    assert_eq!(x as *const () as usize, 1);\n+    let x: &'static Foo = &Foo;\n+    assert_eq!(x as *const Foo as usize, 4);\n+\n+    // statics must have a unique address\n+    assert_ne!(&FOO as *const Foo as usize, 4);\n+\n+    assert_eq!(<Vec<i32>>::new().as_ptr(), <&[i32]>::default().as_ptr());\n+    assert_eq!(<Box<[i32]>>::default().as_ptr(), (&[]).as_ptr());\n+}"}]}