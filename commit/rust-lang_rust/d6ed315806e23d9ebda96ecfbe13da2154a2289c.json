{"sha": "d6ed315806e23d9ebda96ecfbe13da2154a2289c", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQ2ZWQzMTU4MDZlMjNkOWViZGE5NmVjZmJlMTNkYTIxNTRhMjI4OWM=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2021-05-26T23:06:59Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-05-26T23:06:59Z"}, "message": "Merge #9017\n\n9017: internal: Reduce the number of traits passed through chalk during applicable trait lookup r=SomeoneToIgnore a=SomeoneToIgnore\n\nInherent traits can be omitted before trait solving, presumably slightly helping https://github.com/rust-analyzer/rust-analyzer/issues/7542 and slightly simplifying the code.\n\nCo-authored-by: Kirill Bulatov <mail4score@gmail.com>", "tree": {"sha": "a07081b0d3cc71e62358cc5f2c4347efd4d294b3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a07081b0d3cc71e62358cc5f2c4347efd4d294b3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d6ed315806e23d9ebda96ecfbe13da2154a2289c", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJgrtSTCRBK7hj4Ov3rIwAAeHcIAJ7BSPj6ED8clk6sBZJnzyWG\nMxehty96S7ydvQC8+zEQMhhqpob9CJiU9iqoYE8FYsLrTEfxW+WzNsEw/cBeyTx3\nVuiNyDSPgxnh+BPucWjdvNBUEhbWjsLoq64MV6UAXv63cUEpy1AMCVvywk0gMSlV\n/4zfdt/16RLEjOOG9Xs0CIjAFKfgh3d5spp//txalW3367s/LmSJ7/y3H7MJtvkp\nt7OTToIWQTsKRGTOH6mcMDLM7bs70Lpj37jaQTkN3ZicdbRdMZwh0X0IM6SsNrA2\n/s39RDNv4Dsf8iQCVzpPnpvv5Bj/MfSY4VuqBxMja6pjb0H/AtCKJD+485cCGvI=\n=P5nB\n-----END PGP SIGNATURE-----\n", "payload": "tree a07081b0d3cc71e62358cc5f2c4347efd4d294b3\nparent 7624729d61ac6d810ed77ce6aaf5d3e5b82824fd\nparent 050c592b8ca4a4ad288a49267531a37e4598535a\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1622070419 +0000\ncommitter GitHub <noreply@github.com> 1622070419 +0000\n\nMerge #9017\n\n9017: internal: Reduce the number of traits passed through chalk during applicable trait lookup r=SomeoneToIgnore a=SomeoneToIgnore\n\nInherent traits can be omitted before trait solving, presumably slightly helping https://github.com/rust-analyzer/rust-analyzer/issues/7542 and slightly simplifying the code.\n\nCo-authored-by: Kirill Bulatov <mail4score@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d6ed315806e23d9ebda96ecfbe13da2154a2289c", "html_url": "https://github.com/rust-lang/rust/commit/d6ed315806e23d9ebda96ecfbe13da2154a2289c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d6ed315806e23d9ebda96ecfbe13da2154a2289c/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7624729d61ac6d810ed77ce6aaf5d3e5b82824fd", "url": "https://api.github.com/repos/rust-lang/rust/commits/7624729d61ac6d810ed77ce6aaf5d3e5b82824fd", "html_url": "https://github.com/rust-lang/rust/commit/7624729d61ac6d810ed77ce6aaf5d3e5b82824fd"}, {"sha": "050c592b8ca4a4ad288a49267531a37e4598535a", "url": "https://api.github.com/repos/rust-lang/rust/commits/050c592b8ca4a4ad288a49267531a37e4598535a", "html_url": "https://github.com/rust-lang/rust/commit/050c592b8ca4a4ad288a49267531a37e4598535a"}], "stats": {"total": 19, "additions": 8, "deletions": 11}, "files": [{"sha": "ae52dd8bb87bcc39d3b8edfcfe54a341eb22e53b", "filename": "crates/ide_db/src/helpers/import_assets.rs", "status": "modified", "additions": 8, "deletions": 11, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/d6ed315806e23d9ebda96ecfbe13da2154a2289c/crates%2Fide_db%2Fsrc%2Fhelpers%2Fimport_assets.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d6ed315806e23d9ebda96ecfbe13da2154a2289c/crates%2Fide_db%2Fsrc%2Fhelpers%2Fimport_assets.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_db%2Fsrc%2Fhelpers%2Fimport_assets.rs?ref=d6ed315806e23d9ebda96ecfbe13da2154a2289c", "patch": "@@ -420,6 +420,8 @@ fn trait_applicable_items(\n \n     let db = sema.db;\n \n+    let related_dyn_traits =\n+        trait_candidate.receiver_ty.applicable_inherent_traits(db).collect::<FxHashSet<_>>();\n     let mut required_assoc_items = FxHashSet::default();\n     let trait_candidates = items_locator::items_with_name(\n         sema,\n@@ -431,13 +433,15 @@ fn trait_applicable_items(\n     .filter_map(|input| item_as_assoc(db, input))\n     .filter_map(|assoc| {\n         let assoc_item_trait = assoc.containing_trait(db)?;\n-        required_assoc_items.insert(assoc);\n-        Some(assoc_item_trait.into())\n+        if related_dyn_traits.contains(&assoc_item_trait) {\n+            None\n+        } else {\n+            required_assoc_items.insert(assoc);\n+            Some(assoc_item_trait.into())\n+        }\n     })\n     .collect();\n \n-    let related_dyn_traits =\n-        trait_candidate.receiver_ty.applicable_inherent_traits(db).collect::<FxHashSet<_>>();\n     let mut located_imports = FxHashSet::default();\n \n     if trait_assoc_item {\n@@ -454,10 +458,6 @@ fn trait_applicable_items(\n                         }\n                     }\n                     let located_trait = assoc.containing_trait(db)?;\n-                    if related_dyn_traits.contains(&located_trait) {\n-                        return None;\n-                    }\n-\n                     let trait_item = ItemInNs::from(ModuleDef::from(located_trait));\n                     let original_item = assoc_to_item(assoc);\n                     located_imports.insert(LocatedImport::new(\n@@ -480,9 +480,6 @@ fn trait_applicable_items(\n                 let assoc = function.as_assoc_item(db)?;\n                 if required_assoc_items.contains(&assoc) {\n                     let located_trait = assoc.containing_trait(db)?;\n-                    if related_dyn_traits.contains(&located_trait) {\n-                        return None;\n-                    }\n                     let trait_item = ItemInNs::from(ModuleDef::from(located_trait));\n                     let original_item = assoc_to_item(assoc);\n                     located_imports.insert(LocatedImport::new("}]}