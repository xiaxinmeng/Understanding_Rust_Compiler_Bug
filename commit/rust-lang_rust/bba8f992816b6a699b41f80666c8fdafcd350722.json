{"sha": "bba8f992816b6a699b41f80666c8fdafcd350722", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJiYThmOTkyODE2YjZhNjk5YjQxZjgwNjY2YzhmZGFmY2QzNTA3MjI=", "commit": {"author": {"name": "Dylan DPC", "email": "dylan.dpc@gmail.com", "date": "2021-05-07T23:06:24Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-05-07T23:06:24Z"}, "message": "Rollup merge of #85034 - RalfJung:null-ptr, r=oli-obk\n\nfix null pointer error messages\n\nI got the `match` in https://github.com/rust-lang/rust/pull/84972 wrong, this fixes that.\nAlso avoid redundant \"inbounds test failed:\" prefix.\n\nShould fix https://github.com/rust-lang/rust/issues/85027\n\nr? `@oli-obk`", "tree": {"sha": "bac39f410d4048e05ba0d34b0ffdc35f2ece6c40", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bac39f410d4048e05ba0d34b0ffdc35f2ece6c40"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/bba8f992816b6a699b41f80666c8fdafcd350722", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJglcfwCRBK7hj4Ov3rIwAACAEIAFHp9NHmpipTPw3rCjXyU8nl\nWBrz49eXOE/J+Ylr9s7XtmAwy6373yIZs9UC5lKkqd471WwqI5WQl15TpwnP1gMq\nWbr+PoUFogg1vkspSGmH98qyJBysjgtDj8Yo7iLhXmi0a3wH5ZXw0dNUPL6CNa9g\n8pht507EnIE8QX4JoQ1Tzk/2K7VVyKlwfzZbOVFa15jj9XlJxw1YDo6G9i67e5oc\nyn664TR8PKBEDIxUcAJTkwqx3wnKtchOuchfhFo/Olb3f0IGoK1Kz9qr0l/GevAX\nsl4iwTk1fFOWttzrIvBDptCS+RcN+d7l2WHDleOlDCAedrnHljXRqzk9Yp7e2/k=\n=JmSb\n-----END PGP SIGNATURE-----\n", "payload": "tree bac39f410d4048e05ba0d34b0ffdc35f2ece6c40\nparent 44bee536fea1031ce97b9b89ca5a1b3ca5d348e0\nparent 6386656d45313e5787a1a6025ed02157dea280c9\nauthor Dylan DPC <dylan.dpc@gmail.com> 1620428784 +0200\ncommitter GitHub <noreply@github.com> 1620428784 +0200\n\nRollup merge of #85034 - RalfJung:null-ptr, r=oli-obk\n\nfix null pointer error messages\n\nI got the `match` in https://github.com/rust-lang/rust/pull/84972 wrong, this fixes that.\nAlso avoid redundant \"inbounds test failed:\" prefix.\n\nShould fix https://github.com/rust-lang/rust/issues/85027\n\nr? `@oli-obk`\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/bba8f992816b6a699b41f80666c8fdafcd350722", "html_url": "https://github.com/rust-lang/rust/commit/bba8f992816b6a699b41f80666c8fdafcd350722", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/bba8f992816b6a699b41f80666c8fdafcd350722/comments", "author": {"login": "Dylan-DPC", "id": 99973273, "node_id": "U_kgDOBfV4mQ", "avatar_url": "https://avatars.githubusercontent.com/u/99973273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dylan-DPC", "html_url": "https://github.com/Dylan-DPC", "followers_url": "https://api.github.com/users/Dylan-DPC/followers", "following_url": "https://api.github.com/users/Dylan-DPC/following{/other_user}", "gists_url": "https://api.github.com/users/Dylan-DPC/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dylan-DPC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dylan-DPC/subscriptions", "organizations_url": "https://api.github.com/users/Dylan-DPC/orgs", "repos_url": "https://api.github.com/users/Dylan-DPC/repos", "events_url": "https://api.github.com/users/Dylan-DPC/events{/privacy}", "received_events_url": "https://api.github.com/users/Dylan-DPC/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "44bee536fea1031ce97b9b89ca5a1b3ca5d348e0", "url": "https://api.github.com/repos/rust-lang/rust/commits/44bee536fea1031ce97b9b89ca5a1b3ca5d348e0", "html_url": "https://github.com/rust-lang/rust/commit/44bee536fea1031ce97b9b89ca5a1b3ca5d348e0"}, {"sha": "6386656d45313e5787a1a6025ed02157dea280c9", "url": "https://api.github.com/repos/rust-lang/rust/commits/6386656d45313e5787a1a6025ed02157dea280c9", "html_url": "https://github.com/rust-lang/rust/commit/6386656d45313e5787a1a6025ed02157dea280c9"}], "stats": {"total": 25, "additions": 14, "deletions": 11}, "files": [{"sha": "9c3bed6ec0ad8b8c618000eda597692e6526b5f6", "filename": "compiler/rustc_middle/src/mir/interpret/error.rs", "status": "modified", "additions": 11, "deletions": 8, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/bba8f992816b6a699b41f80666c8fdafcd350722/compiler%2Frustc_middle%2Fsrc%2Fmir%2Finterpret%2Ferror.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bba8f992816b6a699b41f80666c8fdafcd350722/compiler%2Frustc_middle%2Fsrc%2Fmir%2Finterpret%2Ferror.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fmir%2Finterpret%2Ferror.rs?ref=bba8f992816b6a699b41f80666c8fdafcd350722", "patch": "@@ -170,22 +170,25 @@ impl fmt::Display for InvalidProgramInfo<'_> {\n /// Details of why a pointer had to be in-bounds.\n #[derive(Debug, Copy, Clone, TyEncodable, TyDecodable, HashStable)]\n pub enum CheckInAllocMsg {\n+    /// We are access memory.\n     MemoryAccessTest,\n+    /// We are doing pointer arithmetic.\n     PointerArithmeticTest,\n+    /// None of the above -- generic/unspecific inbounds test.\n     InboundsTest,\n }\n \n impl fmt::Display for CheckInAllocMsg {\n     /// When this is printed as an error the context looks like this\n-    /// \"{test name} failed: pointer must be in-bounds at offset...\"\n+    /// \"{msg}pointer must be in-bounds at offset...\"\n     fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {\n         write!(\n             f,\n             \"{}\",\n             match *self {\n-                CheckInAllocMsg::MemoryAccessTest => \"memory access\",\n-                CheckInAllocMsg::PointerArithmeticTest => \"pointer arithmetic\",\n-                CheckInAllocMsg::InboundsTest => \"inbounds test\",\n+                CheckInAllocMsg::MemoryAccessTest => \"memory access failed: \",\n+                CheckInAllocMsg::PointerArithmeticTest => \"pointer arithmetic failed: \",\n+                CheckInAllocMsg::InboundsTest => \"\",\n             }\n         )\n     }\n@@ -299,18 +302,18 @@ impl fmt::Display for UndefinedBehaviorInfo<'_> {\n             }\n             PointerOutOfBounds { ptr, msg, allocation_size } => write!(\n                 f,\n-                \"{} failed: pointer must be in-bounds at offset {}, \\\n+                \"{}pointer must be in-bounds at offset {}, \\\n                            but is outside bounds of {} which has size {}\",\n                 msg,\n                 ptr.offset.bytes(),\n                 ptr.alloc_id,\n                 allocation_size.bytes()\n             ),\n-            DanglingIntPointer(_, CheckInAllocMsg::InboundsTest) => {\n-                write!(f, \"null pointer is not allowed for this operation\")\n+            DanglingIntPointer(0, CheckInAllocMsg::InboundsTest) => {\n+                write!(f, \"null pointer is not a valid pointer for this operation\")\n             }\n             DanglingIntPointer(i, msg) => {\n-                write!(f, \"{} failed: 0x{:x} is not a valid pointer\", msg, i)\n+                write!(f, \"{}0x{:x} is not a valid pointer\", msg, i)\n             }\n             AlignmentCheckFailed { required, has } => write!(\n                 f,"}, {"sha": "c69674a6721bc0fd61f04913849a30e1e70fc4ff", "filename": "src/test/ui/consts/const-eval/ub-wide-ptr.32bit.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/bba8f992816b6a699b41f80666c8fdafcd350722/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fub-wide-ptr.32bit.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/bba8f992816b6a699b41f80666c8fdafcd350722/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fub-wide-ptr.32bit.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fub-wide-ptr.32bit.stderr?ref=bba8f992816b6a699b41f80666c8fdafcd350722", "patch": "@@ -296,7 +296,7 @@ error[E0080]: could not evaluate static initializer\n   --> $DIR/ub-wide-ptr.rs:135:5\n    |\n LL |     mem::transmute::<_, &dyn Trait>((&92u8, 0usize))\n-   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ null pointer is not allowed for this operation\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ null pointer is not a valid pointer for this operation\n \n error[E0080]: could not evaluate static initializer\n   --> $DIR/ub-wide-ptr.rs:139:5"}, {"sha": "bb95343a786a40056bcf471a8358432bd19cb2b3", "filename": "src/test/ui/consts/const-eval/ub-wide-ptr.64bit.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/bba8f992816b6a699b41f80666c8fdafcd350722/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fub-wide-ptr.64bit.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/bba8f992816b6a699b41f80666c8fdafcd350722/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fub-wide-ptr.64bit.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fub-wide-ptr.64bit.stderr?ref=bba8f992816b6a699b41f80666c8fdafcd350722", "patch": "@@ -296,7 +296,7 @@ error[E0080]: could not evaluate static initializer\n   --> $DIR/ub-wide-ptr.rs:135:5\n    |\n LL |     mem::transmute::<_, &dyn Trait>((&92u8, 0usize))\n-   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ null pointer is not allowed for this operation\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ null pointer is not a valid pointer for this operation\n \n error[E0080]: could not evaluate static initializer\n   --> $DIR/ub-wide-ptr.rs:139:5"}, {"sha": "4254cda2a0084c4f81f8f53b943e2584e9483cfe", "filename": "src/test/ui/consts/offset_from_ub.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/bba8f992816b6a699b41f80666c8fdafcd350722/src%2Ftest%2Fui%2Fconsts%2Foffset_from_ub.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/bba8f992816b6a699b41f80666c8fdafcd350722/src%2Ftest%2Fui%2Fconsts%2Foffset_from_ub.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Foffset_from_ub.stderr?ref=bba8f992816b6a699b41f80666c8fdafcd350722", "patch": "@@ -74,7 +74,7 @@ error: any use of this value will cause an error\n LL |           unsafe { intrinsics::ptr_offset_from(self, origin) }\n    |                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |                    |\n-   |                    null pointer is not allowed for this operation\n+   |                    null pointer is not a valid pointer for this operation\n    |                    inside `ptr::const_ptr::<impl *const u8>::offset_from` at $SRC_DIR/core/src/ptr/const_ptr.rs:LL:COL\n    |                    inside `OFFSET_FROM_NULL` at $DIR/offset_from_ub.rs:36:14\n    | "}]}