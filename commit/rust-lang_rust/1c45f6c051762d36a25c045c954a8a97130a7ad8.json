{"sha": "1c45f6c051762d36a25c045c954a8a97130a7ad8", "node_id": "MDY6Q29tbWl0NzI0NzEyOjFjNDVmNmMwNTE3NjJkMzZhMjVjMDQ1Yzk1NGE4YTk3MTMwYTdhZDg=", "commit": {"author": {"name": "kennytm", "email": "kennytm@gmail.com", "date": "2018-03-27T08:47:50Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2018-03-27T08:47:50Z"}, "message": "Rollup merge of #49381 - withoutboats:str_unicode, r=SimonSapin\n\nAdd is_whitespace and is_alphanumeric to str.\n\nThe other methods from `UnicodeStr` are already stable inherent\nmethods on str, but these have not been included.\n\nr? @SimonSapin", "tree": {"sha": "0dfa163fb49c274a27650b98528c0bfe64c4c6be", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0dfa163fb49c274a27650b98528c0bfe64c4c6be"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1c45f6c051762d36a25c045c954a8a97130a7ad8", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJaugU2CRBK7hj4Ov3rIwAAdHIIAKRbLrs1LdrAuUkSb8JUcVQ1\nBLmyDoT84mhJ0hC41DO4UkaE1C70PaQSKAjglE/scSBxob2qnZ3tuRPzUymzIkE+\nIDhcO03tRq8AplRYoWKgaOBvVqH1EzS+CBf6hMhQ/tUi4p3uVnwuD2LmNuW/iMa5\n7Nz88t59Ktw1w9leZYbzLreVH1RszItBOFzJwGFLaY6L0QhQlpCBF2fqRE6PjnAZ\nf6A346tsqQBgLISSazs8fniG0WvTTPqWdZD9nWjFwhYSHo67uTBuypxvnvE5dzMy\nKEUS2g4VP5LJ7Z1f5RtXama17Bsh++LG+1MgIXZRPQwgQB0Atvz8DeSei7o66Zw=\n=cxpg\n-----END PGP SIGNATURE-----\n", "payload": "tree 0dfa163fb49c274a27650b98528c0bfe64c4c6be\nparent dbd6c56f325daf9b2ae141f507ead35d178b2380\nparent 5fc7e0a2ba84c44caebc5801f454663bafad2ca8\nauthor kennytm <kennytm@gmail.com> 1522140470 +0200\ncommitter GitHub <noreply@github.com> 1522140470 +0200\n\nRollup merge of #49381 - withoutboats:str_unicode, r=SimonSapin\n\nAdd is_whitespace and is_alphanumeric to str.\n\nThe other methods from `UnicodeStr` are already stable inherent\nmethods on str, but these have not been included.\n\nr? @SimonSapin\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1c45f6c051762d36a25c045c954a8a97130a7ad8", "html_url": "https://github.com/rust-lang/rust/commit/1c45f6c051762d36a25c045c954a8a97130a7ad8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1c45f6c051762d36a25c045c954a8a97130a7ad8/comments", "author": {"login": "kennytm", "id": 103023, "node_id": "MDQ6VXNlcjEwMzAyMw==", "avatar_url": "https://avatars.githubusercontent.com/u/103023?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kennytm", "html_url": "https://github.com/kennytm", "followers_url": "https://api.github.com/users/kennytm/followers", "following_url": "https://api.github.com/users/kennytm/following{/other_user}", "gists_url": "https://api.github.com/users/kennytm/gists{/gist_id}", "starred_url": "https://api.github.com/users/kennytm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kennytm/subscriptions", "organizations_url": "https://api.github.com/users/kennytm/orgs", "repos_url": "https://api.github.com/users/kennytm/repos", "events_url": "https://api.github.com/users/kennytm/events{/privacy}", "received_events_url": "https://api.github.com/users/kennytm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "dbd6c56f325daf9b2ae141f507ead35d178b2380", "url": "https://api.github.com/repos/rust-lang/rust/commits/dbd6c56f325daf9b2ae141f507ead35d178b2380", "html_url": "https://github.com/rust-lang/rust/commit/dbd6c56f325daf9b2ae141f507ead35d178b2380"}, {"sha": "5fc7e0a2ba84c44caebc5801f454663bafad2ca8", "url": "https://api.github.com/repos/rust-lang/rust/commits/5fc7e0a2ba84c44caebc5801f454663bafad2ca8", "html_url": "https://github.com/rust-lang/rust/commit/5fc7e0a2ba84c44caebc5801f454663bafad2ca8"}], "stats": {"total": 44, "additions": 42, "deletions": 2}, "files": [{"sha": "d5ef41df0d850d5804299a328f617f411f3abdd2", "filename": "src/liballoc/str.rs", "status": "modified", "additions": 42, "deletions": 0, "changes": 42, "blob_url": "https://github.com/rust-lang/rust/blob/1c45f6c051762d36a25c045c954a8a97130a7ad8/src%2Fliballoc%2Fstr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1c45f6c051762d36a25c045c954a8a97130a7ad8/src%2Fliballoc%2Fstr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Fstr.rs?ref=1c45f6c051762d36a25c045c954a8a97130a7ad8", "patch": "@@ -2122,6 +2122,48 @@ impl str {\n         unsafe { String::from_utf8_unchecked(buf) }\n     }\n \n+    /// Returns true if this `str` is entirely whitespace, and false otherwise.\n+    ///\n+    /// 'Whitespace' is defined according to the terms of the Unicode Derived Core\n+    /// Property `White_Space`.\n+    ///\n+    /// # Examples\n+    ///\n+    /// Basic usage:\n+    ///\n+    /// ```\n+    /// assert!(\"    \\t \".is_whitespace());\n+    ///\n+    /// // a non-breaking space\n+    /// assert!(\"\\u{A0}\".is_whitespace());\n+    ///\n+    /// assert!(!\"   \u8d8a\".is_whitespace());\n+    /// ```\n+    #[stable(feature = \"unicode_methods_on_intrinsics\", since = \"1.27.0\")]\n+    #[inline]\n+    pub fn is_whitespace(&self) -> bool {\n+        UnicodeStr::is_whitespace(self)\n+    }\n+\n+    /// Returns true if this `str` is entirely alphanumeric, and false otherwise.\n+    ///\n+    /// 'Alphanumeric'-ness is defined in terms of the Unicode General Categories\n+    /// 'Nd', 'Nl', 'No' and the Derived Core Property 'Alphabetic'.\n+    ///\n+    /// # Examples\n+    ///\n+    /// Basic usage:\n+    ///\n+    /// ```\n+    /// assert!(\"\u06637\u09ecK\u0648\u85cf\".is_alphanumeric());\n+    /// assert!(!\"\u00be\u2460\".is_alphanumeric());\n+    /// ```\n+    #[stable(feature = \"unicode_methods_on_intrinsics\", since = \"1.27.0\")]\n+    #[inline]\n+    pub fn is_alphanumeric(&self) -> bool {\n+        UnicodeStr::is_alphanumeric(self)\n+    }\n+\n     /// Checks if all characters in this string are within the ASCII range.\n     ///\n     /// # Examples"}, {"sha": "8ab9ca451871b930d2bf7496650d2e50736ebaf0", "filename": "src/librustdoc/test.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1c45f6c051762d36a25c045c954a8a97130a7ad8/src%2Flibrustdoc%2Ftest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1c45f6c051762d36a25c045c954a8a97130a7ad8/src%2Flibrustdoc%2Ftest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Ftest.rs?ref=1c45f6c051762d36a25c045c954a8a97130a7ad8", "patch": "@@ -406,8 +406,6 @@ pub fn make_test(s: &str,\n \n // FIXME(aburka): use a real parser to deal with multiline attributes\n fn partition_source(s: &str) -> (String, String) {\n-    use std_unicode::str::UnicodeStr;\n-\n     let mut after_header = false;\n     let mut before = String::new();\n     let mut after = String::new();"}]}