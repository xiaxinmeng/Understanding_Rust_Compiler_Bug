{"sha": "2b40268f8bed4ba1d916a216a4431bb2ec7b2d41", "node_id": "C_kwDOAAsO6NoAKDJiNDAyNjhmOGJlZDRiYTFkOTE2YTIxNmE0NDMxYmIyZWM3YjJkNDE", "commit": {"author": {"name": "Michael Goulet", "email": "michael@errs.io", "date": "2023-06-10T21:50:36Z"}, "committer": {"name": "Michael Goulet", "email": "michael@errs.io", "date": "2023-06-11T00:27:03Z"}, "message": "properly check associated consts for infer placeholders", "tree": {"sha": "cd89625ca3e98d2ae24760f2185d1f001bc794c8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/cd89625ca3e98d2ae24760f2185d1f001bc794c8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2b40268f8bed4ba1d916a216a4431bb2ec7b2d41", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2b40268f8bed4ba1d916a216a4431bb2ec7b2d41", "html_url": "https://github.com/rust-lang/rust/commit/2b40268f8bed4ba1d916a216a4431bb2ec7b2d41", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2b40268f8bed4ba1d916a216a4431bb2ec7b2d41/comments", "author": {"login": "compiler-errors", "id": 3674314, "node_id": "MDQ6VXNlcjM2NzQzMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3674314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/compiler-errors", "html_url": "https://github.com/compiler-errors", "followers_url": "https://api.github.com/users/compiler-errors/followers", "following_url": "https://api.github.com/users/compiler-errors/following{/other_user}", "gists_url": "https://api.github.com/users/compiler-errors/gists{/gist_id}", "starred_url": "https://api.github.com/users/compiler-errors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/compiler-errors/subscriptions", "organizations_url": "https://api.github.com/users/compiler-errors/orgs", "repos_url": "https://api.github.com/users/compiler-errors/repos", "events_url": "https://api.github.com/users/compiler-errors/events{/privacy}", "received_events_url": "https://api.github.com/users/compiler-errors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "compiler-errors", "id": 3674314, "node_id": "MDQ6VXNlcjM2NzQzMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3674314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/compiler-errors", "html_url": "https://github.com/compiler-errors", "followers_url": "https://api.github.com/users/compiler-errors/followers", "following_url": "https://api.github.com/users/compiler-errors/following{/other_user}", "gists_url": "https://api.github.com/users/compiler-errors/gists{/gist_id}", "starred_url": "https://api.github.com/users/compiler-errors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/compiler-errors/subscriptions", "organizations_url": "https://api.github.com/users/compiler-errors/orgs", "repos_url": "https://api.github.com/users/compiler-errors/repos", "events_url": "https://api.github.com/users/compiler-errors/events{/privacy}", "received_events_url": "https://api.github.com/users/compiler-errors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "397641f3bd4f4211d0a1e9ada8d477bf495735b2", "url": "https://api.github.com/repos/rust-lang/rust/commits/397641f3bd4f4211d0a1e9ada8d477bf495735b2", "html_url": "https://github.com/rust-lang/rust/commit/397641f3bd4f4211d0a1e9ada8d477bf495735b2"}], "stats": {"total": 111, "additions": 77, "deletions": 34}, "files": [{"sha": "8b5c1791fc13902ed3c96e948fdb2a5babac90fe", "filename": "compiler/rustc_hir_analysis/src/collect.rs", "status": "modified", "additions": 16, "deletions": 11, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/2b40268f8bed4ba1d916a216a4431bb2ec7b2d41/compiler%2Frustc_hir_analysis%2Fsrc%2Fcollect.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2b40268f8bed4ba1d916a216a4431bb2ec7b2d41/compiler%2Frustc_hir_analysis%2Fsrc%2Fcollect.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_hir_analysis%2Fsrc%2Fcollect.rs?ref=2b40268f8bed4ba1d916a216a4431bb2ec7b2d41", "patch": "@@ -666,17 +666,15 @@ fn convert_trait_item(tcx: TyCtxt<'_>, trait_item_id: hir::TraitItemId) {\n             tcx.ensure().fn_sig(def_id);\n         }\n \n-        hir::TraitItemKind::Const(.., Some(_)) => {\n+        hir::TraitItemKind::Const(ty, body_id) => {\n             tcx.ensure().type_of(def_id);\n-        }\n-\n-        hir::TraitItemKind::Const(hir_ty, _) => {\n-            tcx.ensure().type_of(def_id);\n-            // Account for `const C: _;`.\n-            let mut visitor = HirPlaceholderCollector::default();\n-            visitor.visit_trait_item(trait_item);\n-            if !tcx.sess.diagnostic().has_stashed_diagnostic(hir_ty.span, StashKey::ItemNoType) {\n-                placeholder_type_error(tcx, None, visitor.0, false, None, \"constant\");\n+            if !tcx.sess.diagnostic().has_stashed_diagnostic(ty.span, StashKey::ItemNoType)\n+                && !(is_suggestable_infer_ty(ty) && body_id.is_some())\n+            {\n+                // Account for `const C: _;`.\n+                let mut visitor = HirPlaceholderCollector::default();\n+                visitor.visit_trait_item(trait_item);\n+                placeholder_type_error(tcx, None, visitor.0, false, None, \"associated constant\");\n             }\n         }\n \n@@ -721,7 +719,14 @@ fn convert_impl_item(tcx: TyCtxt<'_>, impl_item_id: hir::ImplItemId) {\n \n             placeholder_type_error(tcx, None, visitor.0, false, None, \"associated type\");\n         }\n-        hir::ImplItemKind::Const(..) => {}\n+        hir::ImplItemKind::Const(ty, _) => {\n+            // Account for `const T: _ = ..;`\n+            if !is_suggestable_infer_ty(ty) {\n+                let mut visitor = HirPlaceholderCollector::default();\n+                visitor.visit_impl_item(impl_item);\n+                placeholder_type_error(tcx, None, visitor.0, false, None, \"associated constant\");\n+            }\n+        }\n     }\n }\n "}, {"sha": "318d0d0c22397ced4b55064ade489339fd060925", "filename": "compiler/rustc_hir_analysis/src/collect/type_of.rs", "status": "modified", "additions": 14, "deletions": 2, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/2b40268f8bed4ba1d916a216a4431bb2ec7b2d41/compiler%2Frustc_hir_analysis%2Fsrc%2Fcollect%2Ftype_of.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2b40268f8bed4ba1d916a216a4431bb2ec7b2d41/compiler%2Frustc_hir_analysis%2Fsrc%2Fcollect%2Ftype_of.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_hir_analysis%2Fsrc%2Fcollect%2Ftype_of.rs?ref=2b40268f8bed4ba1d916a216a4431bb2ec7b2d41", "patch": "@@ -341,7 +341,12 @@ pub(super) fn type_of(tcx: TyCtxt<'_>, def_id: LocalDefId) -> ty::EarlyBinder<Ty\n                 .and_then(|body_id| {\n                     is_suggestable_infer_ty(ty).then(|| {\n                         infer_placeholder_type(\n-                            tcx, def_id, body_id, ty.span, item.ident, \"constant\",\n+                            tcx,\n+                            def_id,\n+                            body_id,\n+                            ty.span,\n+                            item.ident,\n+                            \"associated constant\",\n                         )\n                     })\n                 })\n@@ -359,7 +364,14 @@ pub(super) fn type_of(tcx: TyCtxt<'_>, def_id: LocalDefId) -> ty::EarlyBinder<Ty\n             }\n             ImplItemKind::Const(ty, body_id) => {\n                 if is_suggestable_infer_ty(ty) {\n-                    infer_placeholder_type(tcx, def_id, body_id, ty.span, item.ident, \"constant\")\n+                    infer_placeholder_type(\n+                        tcx,\n+                        def_id,\n+                        body_id,\n+                        ty.span,\n+                        item.ident,\n+                        \"associated constant\",\n+                    )\n                 } else {\n                     icx.to_ty(ty)\n                 }"}, {"sha": "40896c32e1113a3e37c786d0706d5b286d2ef565", "filename": "tests/ui/associated-consts/infer-placeholder-in-non-suggestable-pos.rs", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/2b40268f8bed4ba1d916a216a4431bb2ec7b2d41/tests%2Fui%2Fassociated-consts%2Finfer-placeholder-in-non-suggestable-pos.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2b40268f8bed4ba1d916a216a4431bb2ec7b2d41/tests%2Fui%2Fassociated-consts%2Finfer-placeholder-in-non-suggestable-pos.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fassociated-consts%2Finfer-placeholder-in-non-suggestable-pos.rs?ref=2b40268f8bed4ba1d916a216a4431bb2ec7b2d41", "patch": "@@ -0,0 +1,10 @@\n+trait Trait {\n+    const ASSOC: i32;\n+}\n+\n+impl Trait for () {\n+    const ASSOC: &dyn Fn(_) = 1i32;\n+    //~^ ERROR the placeholder `_` is not allowed within types on item signatures for associated constants\n+}\n+\n+fn main() {}"}, {"sha": "993a08faba9902e6328fb1da8778d334161e7a2c", "filename": "tests/ui/associated-consts/infer-placeholder-in-non-suggestable-pos.stderr", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/2b40268f8bed4ba1d916a216a4431bb2ec7b2d41/tests%2Fui%2Fassociated-consts%2Finfer-placeholder-in-non-suggestable-pos.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/2b40268f8bed4ba1d916a216a4431bb2ec7b2d41/tests%2Fui%2Fassociated-consts%2Finfer-placeholder-in-non-suggestable-pos.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fassociated-consts%2Finfer-placeholder-in-non-suggestable-pos.stderr?ref=2b40268f8bed4ba1d916a216a4431bb2ec7b2d41", "patch": "@@ -0,0 +1,9 @@\n+error[E0121]: the placeholder `_` is not allowed within types on item signatures for associated constants\n+  --> $DIR/infer-placeholder-in-non-suggestable-pos.rs:6:26\n+   |\n+LL |     const ASSOC: &dyn Fn(_) = 1i32;\n+   |                          ^ not allowed in type signatures\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0121`."}, {"sha": "cd852a269435e90684a4ce4fb79e153c540be34c", "filename": "tests/ui/const-generics/generic_arg_infer/in-signature.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/2b40268f8bed4ba1d916a216a4431bb2ec7b2d41/tests%2Fui%2Fconst-generics%2Fgeneric_arg_infer%2Fin-signature.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2b40268f8bed4ba1d916a216a4431bb2ec7b2d41/tests%2Fui%2Fconst-generics%2Fgeneric_arg_infer%2Fin-signature.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fconst-generics%2Fgeneric_arg_infer%2Fin-signature.rs?ref=2b40268f8bed4ba1d916a216a4431bb2ec7b2d41", "patch": "@@ -33,15 +33,15 @@ static TY_STATIC_MIXED: Bar<_, _> = Bar::<i32, 3>(0);\n //~^ ERROR the placeholder `_` is not allowed within types on item signatures for static variables\n trait ArrAssocConst {\n     const ARR: [u8; _];\n-    //~^ ERROR the placeholder `_` is not allowed within types on item signatures for constants\n+    //~^ ERROR the placeholder `_` is not allowed within types on item signatures for associated constants\n }\n trait TyAssocConst {\n     const ARR: Bar<i32, _>;\n-    //~^ ERROR the placeholder `_` is not allowed within types on item signatures for constants\n+    //~^ ERROR the placeholder `_` is not allowed within types on item signatures for associated constants\n }\n trait TyAssocConstMixed {\n     const ARR: Bar<_, _>;\n-    //~^ ERROR the placeholder `_` is not allowed within types on item signatures for constants\n+    //~^ ERROR the placeholder `_` is not allowed within types on item signatures for associated constants\n }\n \n trait AssocTy {"}, {"sha": "b32018a6a2d22de4772d7a3ec44b093215c69fd1", "filename": "tests/ui/const-generics/generic_arg_infer/in-signature.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/2b40268f8bed4ba1d916a216a4431bb2ec7b2d41/tests%2Fui%2Fconst-generics%2Fgeneric_arg_infer%2Fin-signature.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/2b40268f8bed4ba1d916a216a4431bb2ec7b2d41/tests%2Fui%2Fconst-generics%2Fgeneric_arg_infer%2Fin-signature.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fconst-generics%2Fgeneric_arg_infer%2Fin-signature.stderr?ref=2b40268f8bed4ba1d916a216a4431bb2ec7b2d41", "patch": "@@ -74,19 +74,19 @@ LL | static TY_STATIC_MIXED: Bar<_, _> = Bar::<i32, 3>(0);\n    |                         not allowed in type signatures\n    |                         help: replace with the correct type: `Bar<i32, 3>`\n \n-error[E0121]: the placeholder `_` is not allowed within types on item signatures for constants\n+error[E0121]: the placeholder `_` is not allowed within types on item signatures for associated constants\n   --> $DIR/in-signature.rs:35:21\n    |\n LL |     const ARR: [u8; _];\n    |                     ^ not allowed in type signatures\n \n-error[E0121]: the placeholder `_` is not allowed within types on item signatures for constants\n+error[E0121]: the placeholder `_` is not allowed within types on item signatures for associated constants\n   --> $DIR/in-signature.rs:39:25\n    |\n LL |     const ARR: Bar<i32, _>;\n    |                         ^ not allowed in type signatures\n \n-error[E0121]: the placeholder `_` is not allowed within types on item signatures for constants\n+error[E0121]: the placeholder `_` is not allowed within types on item signatures for associated constants\n   --> $DIR/in-signature.rs:43:20\n    |\n LL |     const ARR: Bar<_, _>;"}, {"sha": "bbb95a5798af5eca6afd1f6f9260be70a3a6c428", "filename": "tests/ui/typeck/type-placeholder-fn-in-const.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/2b40268f8bed4ba1d916a216a4431bb2ec7b2d41/tests%2Fui%2Ftypeck%2Ftype-placeholder-fn-in-const.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2b40268f8bed4ba1d916a216a4431bb2ec7b2d41/tests%2Fui%2Ftypeck%2Ftype-placeholder-fn-in-const.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ftypeck%2Ftype-placeholder-fn-in-const.rs?ref=2b40268f8bed4ba1d916a216a4431bb2ec7b2d41", "patch": "@@ -3,12 +3,13 @@ struct MyStruct;\n trait Test {\n     const TEST: fn() -> _;\n     //~^ ERROR: the placeholder `_` is not allowed within types on item signatures for functions [E0121]\n-    //~| ERROR: the placeholder `_` is not allowed within types on item signatures for constants [E0121]\n+    //~| ERROR: the placeholder `_` is not allowed within types on item signatures for associated constants [E0121]\n }\n \n impl Test for MyStruct {\n     const TEST: fn() -> _ = 42;\n     //~^ ERROR: the placeholder `_` is not allowed within types on item signatures for functions [E0121]\n+    //~| ERROR: the placeholder `_` is not allowed within types on item signatures for associated constants [E0121]\n }\n \n fn main() {}"}, {"sha": "302359d2500c98c436002cff69c828313b0e142e", "filename": "tests/ui/typeck/type-placeholder-fn-in-const.stderr", "status": "modified", "additions": 8, "deletions": 2, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/2b40268f8bed4ba1d916a216a4431bb2ec7b2d41/tests%2Fui%2Ftypeck%2Ftype-placeholder-fn-in-const.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/2b40268f8bed4ba1d916a216a4431bb2ec7b2d41/tests%2Fui%2Ftypeck%2Ftype-placeholder-fn-in-const.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ftypeck%2Ftype-placeholder-fn-in-const.stderr?ref=2b40268f8bed4ba1d916a216a4431bb2ec7b2d41", "patch": "@@ -4,7 +4,7 @@ error[E0121]: the placeholder `_` is not allowed within types on item signatures\n LL |     const TEST: fn() -> _;\n    |                         ^ not allowed in type signatures\n \n-error[E0121]: the placeholder `_` is not allowed within types on item signatures for constants\n+error[E0121]: the placeholder `_` is not allowed within types on item signatures for associated constants\n   --> $DIR/type-placeholder-fn-in-const.rs:4:25\n    |\n LL |     const TEST: fn() -> _;\n@@ -16,6 +16,12 @@ error[E0121]: the placeholder `_` is not allowed within types on item signatures\n LL |     const TEST: fn() -> _ = 42;\n    |                         ^ not allowed in type signatures\n \n-error: aborting due to 3 previous errors\n+error[E0121]: the placeholder `_` is not allowed within types on item signatures for associated constants\n+  --> $DIR/type-placeholder-fn-in-const.rs:10:25\n+   |\n+LL |     const TEST: fn() -> _ = 42;\n+   |                         ^ not allowed in type signatures\n+\n+error: aborting due to 4 previous errors\n \n For more information about this error, try `rustc --explain E0121`."}, {"sha": "4eba14f5a93fb34bf092d849a17726dad7de804d", "filename": "tests/ui/typeck/typeck_type_placeholder_item.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/2b40268f8bed4ba1d916a216a4431bb2ec7b2d41/tests%2Fui%2Ftypeck%2Ftypeck_type_placeholder_item.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2b40268f8bed4ba1d916a216a4431bb2ec7b2d41/tests%2Fui%2Ftypeck%2Ftypeck_type_placeholder_item.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ftypeck%2Ftypeck_type_placeholder_item.rs?ref=2b40268f8bed4ba1d916a216a4431bb2ec7b2d41", "patch": "@@ -190,9 +190,9 @@ trait Qux {\n     type B = _;\n     //~^ ERROR the placeholder `_` is not allowed within types on item signatures for associated types\n     const C: _;\n-    //~^ ERROR the placeholder `_` is not allowed within types on item signatures for constants\n+    //~^ ERROR the placeholder `_` is not allowed within types on item signatures for associated constants\n     const D: _ = 42;\n-    //~^ ERROR the placeholder `_` is not allowed within types on item signatures for constants\n+    //~^ ERROR the placeholder `_` is not allowed within types on item signatures for associated constants\n     // type E: _; // FIXME: make the parser propagate the existence of `B`\n     type F: std::ops::Fn(_);\n     //~^ ERROR the placeholder `_` is not allowed within types on item signatures for associated types\n@@ -203,10 +203,10 @@ impl Qux for Struct {\n     type B = _;\n     //~^ ERROR the placeholder `_` is not allowed within types on item signatures for associated types\n     const C: _;\n-    //~^ ERROR the placeholder `_` is not allowed within types on item signatures for constants\n+    //~^ ERROR the placeholder `_` is not allowed within types on item signatures for associated constants\n     //~| ERROR associated constant in `impl` without body\n     const D: _ = 42;\n-    //~^ ERROR the placeholder `_` is not allowed within types on item signatures for constants\n+    //~^ ERROR the placeholder `_` is not allowed within types on item signatures for associated constants\n }\n \n fn map<T>(_: fn() -> Option<&'static T>) -> Option<T> {"}, {"sha": "0c5e7e3cecb193145c0503598775615d3ec25eed", "filename": "tests/ui/typeck/typeck_type_placeholder_item.stderr", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/2b40268f8bed4ba1d916a216a4431bb2ec7b2d41/tests%2Fui%2Ftypeck%2Ftypeck_type_placeholder_item.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/2b40268f8bed4ba1d916a216a4431bb2ec7b2d41/tests%2Fui%2Ftypeck%2Ftypeck_type_placeholder_item.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ftypeck%2Ftypeck_type_placeholder_item.stderr?ref=2b40268f8bed4ba1d916a216a4431bb2ec7b2d41", "patch": "@@ -525,13 +525,13 @@ error[E0121]: the placeholder `_` is not allowed within types on item signatures\n LL |     type B = _;\n    |              ^ not allowed in type signatures\n \n-error[E0121]: the placeholder `_` is not allowed within types on item signatures for constants\n+error[E0121]: the placeholder `_` is not allowed within types on item signatures for associated constants\n   --> $DIR/typeck_type_placeholder_item.rs:192:14\n    |\n LL |     const C: _;\n    |              ^ not allowed in type signatures\n \n-error[E0121]: the placeholder `_` is not allowed within types on item signatures for constants\n+error[E0121]: the placeholder `_` is not allowed within types on item signatures for associated constants\n   --> $DIR/typeck_type_placeholder_item.rs:194:14\n    |\n LL |     const D: _ = 42;\n@@ -642,13 +642,13 @@ error[E0121]: the placeholder `_` is not allowed within types on item signatures\n LL |     type B = _;\n    |              ^ not allowed in type signatures\n \n-error[E0121]: the placeholder `_` is not allowed within types on item signatures for constants\n+error[E0121]: the placeholder `_` is not allowed within types on item signatures for associated constants\n   --> $DIR/typeck_type_placeholder_item.rs:205:14\n    |\n LL |     const C: _;\n    |              ^ not allowed in type signatures\n \n-error[E0121]: the placeholder `_` is not allowed within types on item signatures for constants\n+error[E0121]: the placeholder `_` is not allowed within types on item signatures for associated constants\n   --> $DIR/typeck_type_placeholder_item.rs:208:14\n    |\n LL |     const D: _ = 42;"}, {"sha": "914f8a2b28b343f1d1428ea700a31ffcb401c7ba", "filename": "tests/ui/typeck/typeck_type_placeholder_item_help.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/2b40268f8bed4ba1d916a216a4431bb2ec7b2d41/tests%2Fui%2Ftypeck%2Ftypeck_type_placeholder_item_help.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2b40268f8bed4ba1d916a216a4431bb2ec7b2d41/tests%2Fui%2Ftypeck%2Ftypeck_type_placeholder_item_help.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ftypeck%2Ftypeck_type_placeholder_item_help.rs?ref=2b40268f8bed4ba1d916a216a4431bb2ec7b2d41", "patch": "@@ -16,14 +16,14 @@ const TEST4: fn() -> _ = 42;\n \n trait Test5 {\n     const TEST5: _ = 42;\n-    //~^ ERROR the placeholder `_` is not allowed within types on item signatures for constants\n+    //~^ ERROR the placeholder `_` is not allowed within types on item signatures for associated constants\n }\n \n struct Test6;\n \n impl Test6 {\n     const TEST6: _ = 13;\n-    //~^ ERROR the placeholder `_` is not allowed within types on item signatures for constants\n+    //~^ ERROR the placeholder `_` is not allowed within types on item signatures for associated constants\n }\n \n pub fn main() {"}, {"sha": "ed6f4088019f7acc10bfadd32dd039d026f5b8bc", "filename": "tests/ui/typeck/typeck_type_placeholder_item_help.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/2b40268f8bed4ba1d916a216a4431bb2ec7b2d41/tests%2Fui%2Ftypeck%2Ftypeck_type_placeholder_item_help.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/2b40268f8bed4ba1d916a216a4431bb2ec7b2d41/tests%2Fui%2Ftypeck%2Ftypeck_type_placeholder_item_help.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ftypeck%2Ftypeck_type_placeholder_item_help.stderr?ref=2b40268f8bed4ba1d916a216a4431bb2ec7b2d41", "patch": "@@ -37,7 +37,7 @@ error[E0121]: the placeholder `_` is not allowed within types on item signatures\n LL | const TEST4: fn() -> _ = 42;\n    |                      ^ not allowed in type signatures\n \n-error[E0121]: the placeholder `_` is not allowed within types on item signatures for constants\n+error[E0121]: the placeholder `_` is not allowed within types on item signatures for associated constants\n   --> $DIR/typeck_type_placeholder_item_help.rs:18:18\n    |\n LL |     const TEST5: _ = 42;\n@@ -46,7 +46,7 @@ LL |     const TEST5: _ = 42;\n    |                  not allowed in type signatures\n    |                  help: replace with the correct type: `i32`\n \n-error[E0121]: the placeholder `_` is not allowed within types on item signatures for constants\n+error[E0121]: the placeholder `_` is not allowed within types on item signatures for associated constants\n   --> $DIR/typeck_type_placeholder_item_help.rs:25:18\n    |\n LL |     const TEST6: _ = 13;"}]}