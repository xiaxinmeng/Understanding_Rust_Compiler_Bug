{"sha": "d382fcdb82dd07c739cb48cdd6a768e273b47256", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQzODJmY2RiODJkZDA3YzczOWNiNDhjZGQ2YTc2OGUyNzNiNDcyNTY=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2015-12-13T07:56:03Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2015-12-13T07:56:03Z"}, "message": "Auto merge of #30314 - fhahn:issue-30299-missing-fields, r=pnkfelix\n\nThis PR for #30299 adds the name of the type where the field is missing.\n\nThe span that's used for the error seems correct. What may be confusing is when the initializer with the missing field contains other intializers. These are then included in the span. For example, consider the following listing.\n\n    struct A {\n        a1: i32,\n        a2: B,\n    }\n\n    struct B {\n        b1: i32,\n        b2: i32\n    }\n\n    fn main() {\n        let x = A {\n            a2: B {\n                b1: 1,\n                b2: 1\n            },\n        };\n    }\n\nIt will display the following code snippet along with the message that field `a2` is missing:\n\n        let x = A {\n            a2: B {\n                b1: 1,\n                b2: 1\n            },\n        };\n\nBy adding the name of the type it's clearer where the field is missing.", "tree": {"sha": "39fe26468fbf8aeb80675d2b95fca6697e6bbe48", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/39fe26468fbf8aeb80675d2b95fca6697e6bbe48"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d382fcdb82dd07c739cb48cdd6a768e273b47256", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d382fcdb82dd07c739cb48cdd6a768e273b47256", "html_url": "https://github.com/rust-lang/rust/commit/d382fcdb82dd07c739cb48cdd6a768e273b47256", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d382fcdb82dd07c739cb48cdd6a768e273b47256/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c4c191afae23be19cc845f67de2a36a2862c4fa1", "url": "https://api.github.com/repos/rust-lang/rust/commits/c4c191afae23be19cc845f67de2a36a2862c4fa1", "html_url": "https://github.com/rust-lang/rust/commit/c4c191afae23be19cc845f67de2a36a2862c4fa1"}, {"sha": "15743919dcb60b9fa2c7ef6b698cc0ef1c972ed8", "url": "https://api.github.com/repos/rust-lang/rust/commits/15743919dcb60b9fa2c7ef6b698cc0ef1c972ed8", "html_url": "https://github.com/rust-lang/rust/commit/15743919dcb60b9fa2c7ef6b698cc0ef1c972ed8"}], "stats": {"total": 7, "additions": 4, "deletions": 3}, "files": [{"sha": "a985e3552816f40bb3d9013573fec4ff5da197ef", "filename": "src/librustc_typeck/check/mod.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/d382fcdb82dd07c739cb48cdd6a768e273b47256/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d382fcdb82dd07c739cb48cdd6a768e273b47256/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs?ref=d382fcdb82dd07c739cb48cdd6a768e273b47256", "patch": "@@ -3156,12 +3156,13 @@ fn check_expr_with_unifier<'a, 'tcx, F>(fcx: &FnCtxt<'a, 'tcx>,\n             !remaining_fields.is_empty()\n         {\n             span_err!(tcx.sess, span, E0063,\n-                      \"missing field{}: {}\",\n+                      \"missing field{} {} in initializer of `{}`\",\n                       if remaining_fields.len() == 1 {\"\"} else {\"s\"},\n                       remaining_fields.keys()\n                                       .map(|n| format!(\"`{}`\", n))\n                                       .collect::<Vec<_>>()\n-                                      .join(\", \"));\n+                                      .join(\", \"),\n+                      adt_ty);\n         }\n \n     }"}, {"sha": "d5ab13affafb1641df8bfa179252be37ae60ff40", "filename": "src/test/compile-fail/struct-fields-missing.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d382fcdb82dd07c739cb48cdd6a768e273b47256/src%2Ftest%2Fcompile-fail%2Fstruct-fields-missing.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d382fcdb82dd07c739cb48cdd6a768e273b47256/src%2Ftest%2Fcompile-fail%2Fstruct-fields-missing.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fstruct-fields-missing.rs?ref=d382fcdb82dd07c739cb48cdd6a768e273b47256", "patch": "@@ -15,7 +15,7 @@ struct BuildData {\n }\n \n fn main() {\n-    let foo = BuildData { //~ ERROR missing field: `bar`\n+    let foo = BuildData { //~ ERROR missing field `bar` in initializer of `BuildData`\n         foo: 0\n     };\n }"}]}