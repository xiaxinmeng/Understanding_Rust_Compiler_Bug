{"sha": "db8b86b2df5646b00278720187a460a0027b107f", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRiOGI4NmIyZGY1NjQ2YjAwMjc4NzIwMTg3YTQ2MGEwMDI3YjEwN2Y=", "commit": {"author": {"name": "D\u00e1niel Buga", "email": "bugadani@gmail.com", "date": "2020-11-21T08:06:45Z"}, "committer": {"name": "D\u00e1niel Buga", "email": "bugadani@gmail.com", "date": "2020-11-21T08:06:45Z"}, "message": "Fix typos", "tree": {"sha": "255a8c6350346b98865a1b2272f2a6b31b425a6d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/255a8c6350346b98865a1b2272f2a6b31b425a6d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/db8b86b2df5646b00278720187a460a0027b107f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/db8b86b2df5646b00278720187a460a0027b107f", "html_url": "https://github.com/rust-lang/rust/commit/db8b86b2df5646b00278720187a460a0027b107f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/db8b86b2df5646b00278720187a460a0027b107f/comments", "author": {"login": "bugadani", "id": 977627, "node_id": "MDQ6VXNlcjk3NzYyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/977627?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bugadani", "html_url": "https://github.com/bugadani", "followers_url": "https://api.github.com/users/bugadani/followers", "following_url": "https://api.github.com/users/bugadani/following{/other_user}", "gists_url": "https://api.github.com/users/bugadani/gists{/gist_id}", "starred_url": "https://api.github.com/users/bugadani/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bugadani/subscriptions", "organizations_url": "https://api.github.com/users/bugadani/orgs", "repos_url": "https://api.github.com/users/bugadani/repos", "events_url": "https://api.github.com/users/bugadani/events{/privacy}", "received_events_url": "https://api.github.com/users/bugadani/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bugadani", "id": 977627, "node_id": "MDQ6VXNlcjk3NzYyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/977627?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bugadani", "html_url": "https://github.com/bugadani", "followers_url": "https://api.github.com/users/bugadani/followers", "following_url": "https://api.github.com/users/bugadani/following{/other_user}", "gists_url": "https://api.github.com/users/bugadani/gists{/gist_id}", "starred_url": "https://api.github.com/users/bugadani/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bugadani/subscriptions", "organizations_url": "https://api.github.com/users/bugadani/orgs", "repos_url": "https://api.github.com/users/bugadani/repos", "events_url": "https://api.github.com/users/bugadani/events{/privacy}", "received_events_url": "https://api.github.com/users/bugadani/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8cfa7b4ec9d314a412f79c1748bd2dfa7575b2e3", "url": "https://api.github.com/repos/rust-lang/rust/commits/8cfa7b4ec9d314a412f79c1748bd2dfa7575b2e3", "html_url": "https://github.com/rust-lang/rust/commit/8cfa7b4ec9d314a412f79c1748bd2dfa7575b2e3"}], "stats": {"total": 6, "additions": 3, "deletions": 3}, "files": [{"sha": "5fed500390b68a911173673afeef76882389a9ef", "filename": "compiler/rustc_query_system/src/query/job.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/db8b86b2df5646b00278720187a460a0027b107f/compiler%2Frustc_query_system%2Fsrc%2Fquery%2Fjob.rs", "raw_url": "https://github.com/rust-lang/rust/raw/db8b86b2df5646b00278720187a460a0027b107f/compiler%2Frustc_query_system%2Fsrc%2Fquery%2Fjob.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_query_system%2Fsrc%2Fquery%2Fjob.rs?ref=db8b86b2df5646b00278720187a460a0027b107f", "patch": "@@ -33,11 +33,11 @@ pub struct QueryInfo<Q> {\n \n pub(crate) type QueryMap<D, Q> = FxHashMap<QueryJobId<D>, QueryJobInfo<D, Q>>;\n \n-/// A value uniquely identifiying an active query job within a shard in the query cache.\n+/// A value uniquely identifying an active query job within a shard in the query cache.\n #[derive(Copy, Clone, Eq, PartialEq, Hash)]\n pub struct QueryShardJobId(pub NonZeroU32);\n \n-/// A value uniquely identifiying an active query job.\n+/// A value uniquely identifying an active query job.\n #[derive(Copy, Clone, Eq, PartialEq, Hash)]\n pub struct QueryJobId<D> {\n     /// Which job within a shard is this\n@@ -536,7 +536,7 @@ fn remove_cycle<CTX: QueryContext>(\n         };\n \n         // We unwrap `waiter` here since there must always be one\n-        // edge which is resumeable / waited using a query latch\n+        // edge which is resumable / waited using a query latch\n         let (waitee_query, waiter_idx) = waiter.unwrap();\n \n         // Extract the waiter we want to resume"}]}