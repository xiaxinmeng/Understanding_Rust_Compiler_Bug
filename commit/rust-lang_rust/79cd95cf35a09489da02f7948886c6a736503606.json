{"sha": "79cd95cf35a09489da02f7948886c6a736503606", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc5Y2Q5NWNmMzVhMDk0ODlkYTAyZjc5NDg4ODZjNmE3MzY1MDM2MDY=", "commit": {"author": {"name": "Konrad Borowski", "email": "konrad@borowski.pw", "date": "2018-12-29T16:25:45Z"}, "committer": {"name": "Konrad Borowski", "email": "konrad@borowski.pw", "date": "2018-12-29T16:25:45Z"}, "message": "Use match ergonomics for artithmetic lint", "tree": {"sha": "1a7aac66a5c513974b9d02433c7b638b1c43d66a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1a7aac66a5c513974b9d02433c7b638b1c43d66a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/79cd95cf35a09489da02f7948886c6a736503606", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/79cd95cf35a09489da02f7948886c6a736503606", "html_url": "https://github.com/rust-lang/rust/commit/79cd95cf35a09489da02f7948886c6a736503606", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/79cd95cf35a09489da02f7948886c6a736503606/comments", "author": {"login": "xfix", "id": 1297598, "node_id": "MDQ6VXNlcjEyOTc1OTg=", "avatar_url": "https://avatars.githubusercontent.com/u/1297598?v=4", "gravatar_id": "", "url": "https://api.github.com/users/xfix", "html_url": "https://github.com/xfix", "followers_url": "https://api.github.com/users/xfix/followers", "following_url": "https://api.github.com/users/xfix/following{/other_user}", "gists_url": "https://api.github.com/users/xfix/gists{/gist_id}", "starred_url": "https://api.github.com/users/xfix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/xfix/subscriptions", "organizations_url": "https://api.github.com/users/xfix/orgs", "repos_url": "https://api.github.com/users/xfix/repos", "events_url": "https://api.github.com/users/xfix/events{/privacy}", "received_events_url": "https://api.github.com/users/xfix/received_events", "type": "User", "site_admin": false}, "committer": {"login": "xfix", "id": 1297598, "node_id": "MDQ6VXNlcjEyOTc1OTg=", "avatar_url": "https://avatars.githubusercontent.com/u/1297598?v=4", "gravatar_id": "", "url": "https://api.github.com/users/xfix", "html_url": "https://github.com/xfix", "followers_url": "https://api.github.com/users/xfix/followers", "following_url": "https://api.github.com/users/xfix/following{/other_user}", "gists_url": "https://api.github.com/users/xfix/gists{/gist_id}", "starred_url": "https://api.github.com/users/xfix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/xfix/subscriptions", "organizations_url": "https://api.github.com/users/xfix/orgs", "repos_url": "https://api.github.com/users/xfix/repos", "events_url": "https://api.github.com/users/xfix/events{/privacy}", "received_events_url": "https://api.github.com/users/xfix/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0ddb6284887facf7e0c0f6908c69e6ba52426dd0", "url": "https://api.github.com/repos/rust-lang/rust/commits/0ddb6284887facf7e0c0f6908c69e6ba52426dd0", "html_url": "https://github.com/rust-lang/rust/commit/0ddb6284887facf7e0c0f6908c69e6ba52426dd0"}], "stats": {"total": 6, "additions": 3, "deletions": 3}, "files": [{"sha": "a9b61d328e46138c43719ff27b9b03cf3e4796c9", "filename": "clippy_lints/src/arithmetic.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/79cd95cf35a09489da02f7948886c6a736503606/clippy_lints%2Fsrc%2Farithmetic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/79cd95cf35a09489da02f7948886c6a736503606/clippy_lints%2Fsrc%2Farithmetic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Farithmetic.rs?ref=79cd95cf35a09489da02f7948886c6a736503606", "patch": "@@ -73,8 +73,8 @@ impl<'a, 'tcx> LateLintPass<'a, 'tcx> for Arithmetic {\n                 return;\n             }\n         }\n-        match expr.node {\n-            hir::ExprKind::Binary(ref op, ref l, ref r) => {\n+        match &expr.node {\n+            hir::ExprKind::Binary(op, l, r) => {\n                 match op.node {\n                     hir::BinOpKind::And\n                     | hir::BinOpKind::Or\n@@ -100,7 +100,7 @@ impl<'a, 'tcx> LateLintPass<'a, 'tcx> for Arithmetic {\n                     self.expr_span = Some(expr.span);\n                 }\n             },\n-            hir::ExprKind::Unary(hir::UnOp::UnNeg, ref arg) => {\n+            hir::ExprKind::Unary(hir::UnOp::UnNeg, arg) => {\n                 let ty = cx.tables.expr_ty(arg);\n                 if ty.is_integral() {\n                     span_lint(cx, INTEGER_ARITHMETIC, expr.span, \"integer arithmetic detected\");"}]}