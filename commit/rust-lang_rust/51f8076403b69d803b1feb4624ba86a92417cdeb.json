{"sha": "51f8076403b69d803b1feb4624ba86a92417cdeb", "node_id": "MDY6Q29tbWl0NzI0NzEyOjUxZjgwNzY0MDNiNjlkODAzYjFmZWI0NjI0YmE4NmE5MjQxN2NkZWI=", "commit": {"author": {"name": "Joshua Nelson", "email": "jyn514@gmail.com", "date": "2020-09-30T00:24:14Z"}, "committer": {"name": "Joshua Nelson", "email": "jyn514@gmail.com", "date": "2020-10-26T22:58:52Z"}, "message": "Add --fix support to `x.py clippy`", "tree": {"sha": "83b312b56ea1aa850a08a93127956fd67706791b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/83b312b56ea1aa850a08a93127956fd67706791b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/51f8076403b69d803b1feb4624ba86a92417cdeb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/51f8076403b69d803b1feb4624ba86a92417cdeb", "html_url": "https://github.com/rust-lang/rust/commit/51f8076403b69d803b1feb4624ba86a92417cdeb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/51f8076403b69d803b1feb4624ba86a92417cdeb/comments", "author": {"login": "jyn514", "id": 23638587, "node_id": "MDQ6VXNlcjIzNjM4NTg3", "avatar_url": "https://avatars.githubusercontent.com/u/23638587?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jyn514", "html_url": "https://github.com/jyn514", "followers_url": "https://api.github.com/users/jyn514/followers", "following_url": "https://api.github.com/users/jyn514/following{/other_user}", "gists_url": "https://api.github.com/users/jyn514/gists{/gist_id}", "starred_url": "https://api.github.com/users/jyn514/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jyn514/subscriptions", "organizations_url": "https://api.github.com/users/jyn514/orgs", "repos_url": "https://api.github.com/users/jyn514/repos", "events_url": "https://api.github.com/users/jyn514/events{/privacy}", "received_events_url": "https://api.github.com/users/jyn514/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jyn514", "id": 23638587, "node_id": "MDQ6VXNlcjIzNjM4NTg3", "avatar_url": "https://avatars.githubusercontent.com/u/23638587?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jyn514", "html_url": "https://github.com/jyn514", "followers_url": "https://api.github.com/users/jyn514/followers", "following_url": "https://api.github.com/users/jyn514/following{/other_user}", "gists_url": "https://api.github.com/users/jyn514/gists{/gist_id}", "starred_url": "https://api.github.com/users/jyn514/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jyn514/subscriptions", "organizations_url": "https://api.github.com/users/jyn514/orgs", "repos_url": "https://api.github.com/users/jyn514/repos", "events_url": "https://api.github.com/users/jyn514/events{/privacy}", "received_events_url": "https://api.github.com/users/jyn514/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b3246e0cb10a6a32e8f652312985d36581f77c19", "url": "https://api.github.com/repos/rust-lang/rust/commits/b3246e0cb10a6a32e8f652312985d36581f77c19", "html_url": "https://github.com/rust-lang/rust/commit/b3246e0cb10a6a32e8f652312985d36581f77c19"}], "stats": {"total": 38, "additions": 24, "deletions": 14}, "files": [{"sha": "a2759b205d75f93c15010b4e8a049c5fc97d6d86", "filename": "src/bootstrap/builder.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/51f8076403b69d803b1feb4624ba86a92417cdeb/src%2Fbootstrap%2Fbuilder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/51f8076403b69d803b1feb4624ba86a92417cdeb/src%2Fbootstrap%2Fbuilder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fbuilder.rs?ref=51f8076403b69d803b1feb4624ba86a92417cdeb", "patch": "@@ -371,7 +371,7 @@ impl<'a> Builder<'a> {\n                 tool::CargoMiri,\n                 native::Lld\n             ),\n-            Kind::Check | Kind::Clippy | Kind::Fix | Kind::Format => describe!(\n+            Kind::Check | Kind::Clippy { .. } | Kind::Fix | Kind::Format => describe!(\n                 check::Std,\n                 check::Rustc,\n                 check::Rustdoc,\n@@ -540,7 +540,7 @@ impl<'a> Builder<'a> {\n         let (kind, paths) = match build.config.cmd {\n             Subcommand::Build { ref paths } => (Kind::Build, &paths[..]),\n             Subcommand::Check { ref paths, all_targets: _ } => (Kind::Check, &paths[..]),\n-            Subcommand::Clippy { ref paths } => (Kind::Clippy, &paths[..]),\n+            Subcommand::Clippy { ref paths, .. } => (Kind::Clippy, &paths[..]),\n             Subcommand::Fix { ref paths } => (Kind::Fix, &paths[..]),\n             Subcommand::Doc { ref paths, .. } => (Kind::Doc, &paths[..]),\n             Subcommand::Test { ref paths, .. } => (Kind::Test, &paths[..]),"}, {"sha": "c8363bbc7f771d53eb7cbb47d3e5c40b9b71ef88", "filename": "src/bootstrap/check.rs", "status": "modified", "additions": 17, "deletions": 11, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/51f8076403b69d803b1feb4624ba86a92417cdeb/src%2Fbootstrap%2Fcheck.rs", "raw_url": "https://github.com/rust-lang/rust/raw/51f8076403b69d803b1feb4624ba86a92417cdeb/src%2Fbootstrap%2Fcheck.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fcheck.rs?ref=51f8076403b69d803b1feb4624ba86a92417cdeb", "patch": "@@ -7,20 +7,26 @@ use crate::tool::{prepare_tool_cargo, SourceType};\n use crate::INTERNER;\n use crate::{\n     builder::{Builder, Kind, RunConfig, ShouldRun, Step},\n-    Subcommand,\n };\n-use crate::{Compiler, Mode};\n+use crate::{Compiler, Mode, Subcommand};\n use std::path::PathBuf;\n \n #[derive(Debug, Copy, Clone, PartialEq, Eq, Hash)]\n pub struct Std {\n     pub target: TargetSelection,\n }\n \n-fn args(kind: Kind) -> Vec<String> {\n-    match kind {\n-        Kind::Clippy => vec![\"--\".to_owned(), \"--cap-lints\".to_owned(), \"warn\".to_owned()],\n-        _ => Vec::new(),\n+/// Returns args for the subcommand itself (not for cargo)\n+fn args(builder: &Builder<'_>) -> Vec<String> {\n+    if let Subcommand::Clippy { fix, .. } = builder.config.cmd {\n+        let mut args = vec![\"--\".to_owned(), \"--cap-lints\".to_owned(), \"warn\".to_owned()];\n+        if fix {\n+            args.insert(0, \"--fix\".to_owned());\n+            args.insert(0, \"-Zunstable-options\".to_owned());\n+        }\n+        args\n+    } else {\n+        vec![]\n     }\n }\n \n@@ -62,7 +68,7 @@ impl Step for Std {\n         run_cargo(\n             builder,\n             cargo,\n-            args(builder.kind),\n+            args(builder),\n             &libstd_stamp(builder, compiler, target),\n             vec![],\n             true,\n@@ -104,7 +110,7 @@ impl Step for Std {\n             run_cargo(\n                 builder,\n                 cargo,\n-                args(builder.kind),\n+                args(builder),\n                 &libstd_test_stamp(builder, compiler, target),\n                 vec![],\n                 true,\n@@ -165,7 +171,7 @@ impl Step for Rustc {\n         run_cargo(\n             builder,\n             cargo,\n-            args(builder.kind),\n+            args(builder),\n             &librustc_stamp(builder, compiler, target),\n             vec![],\n             true,\n@@ -220,7 +226,7 @@ impl Step for CodegenBackend {\n         run_cargo(\n             builder,\n             cargo,\n-            args(builder.kind),\n+            args(builder),\n             &codegen_backend_stamp(builder, compiler, target, backend),\n             vec![],\n             true,\n@@ -278,7 +284,7 @@ macro_rules! tool_check_step {\n                 run_cargo(\n                     builder,\n                     cargo,\n-                    args(builder.kind),\n+                    args(builder),\n                     &stamp(builder, compiler, target),\n                     vec![],\n                     true,"}, {"sha": "dbfcf4df9b4bed92da883cd1b672c8825eb06550", "filename": "src/bootstrap/flags.rs", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/51f8076403b69d803b1feb4624ba86a92417cdeb/src%2Fbootstrap%2Fflags.rs", "raw_url": "https://github.com/rust-lang/rust/raw/51f8076403b69d803b1feb4624ba86a92417cdeb/src%2Fbootstrap%2Fflags.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fflags.rs?ref=51f8076403b69d803b1feb4624ba86a92417cdeb", "patch": "@@ -55,6 +55,7 @@ pub enum Subcommand {\n         paths: Vec<PathBuf>,\n     },\n     Clippy {\n+        fix: bool,\n         paths: Vec<PathBuf>,\n     },\n     Fix {\n@@ -273,6 +274,9 @@ To learn more about a subcommand, run `./x.py <subcommand> -h`\",\n             \"bench\" => {\n                 opts.optmulti(\"\", \"test-args\", \"extra arguments\", \"ARGS\");\n             }\n+            \"clippy\" => {\n+                opts.optflag(\"\", \"fix\", \"automatically apply lint suggestions\");\n+            }\n             \"doc\" => {\n                 opts.optflag(\"\", \"open\", \"open the docs in a browser\");\n             }\n@@ -513,7 +517,7 @@ Arguments:\n             \"check\" | \"c\" => {\n                 Subcommand::Check { paths, all_targets: matches.opt_present(\"all-targets\") }\n             }\n-            \"clippy\" => Subcommand::Clippy { paths },\n+            \"clippy\" => Subcommand::Clippy { paths, fix: matches.opt_present(\"fix\") },\n             \"fix\" => Subcommand::Fix { paths },\n             \"test\" | \"t\" => Subcommand::Test {\n                 paths,"}]}