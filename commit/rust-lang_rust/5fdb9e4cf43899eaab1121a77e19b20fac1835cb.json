{"sha": "5fdb9e4cf43899eaab1121a77e19b20fac1835cb", "node_id": "MDY6Q29tbWl0NzI0NzEyOjVmZGI5ZTRjZjQzODk5ZWFhYjExMjFhNzdlMTliMjBmYWMxODM1Y2I=", "commit": {"author": {"name": "Ellen", "email": "supbscripter@gmail.com", "date": "2021-09-20T08:30:23Z"}, "committer": {"name": "Ellen", "email": "supbscripter@gmail.com", "date": "2021-09-20T08:30:28Z"}, "message": "no ensure", "tree": {"sha": "5ab261d341ae64f90e96739254e3b75e88f30b96", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5ab261d341ae64f90e96739254e3b75e88f30b96"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5fdb9e4cf43899eaab1121a77e19b20fac1835cb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5fdb9e4cf43899eaab1121a77e19b20fac1835cb", "html_url": "https://github.com/rust-lang/rust/commit/5fdb9e4cf43899eaab1121a77e19b20fac1835cb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5fdb9e4cf43899eaab1121a77e19b20fac1835cb/comments", "author": {"login": "BoxyUwU", "id": 21149742, "node_id": "MDQ6VXNlcjIxMTQ5NzQy", "avatar_url": "https://avatars.githubusercontent.com/u/21149742?v=4", "gravatar_id": "", "url": "https://api.github.com/users/BoxyUwU", "html_url": "https://github.com/BoxyUwU", "followers_url": "https://api.github.com/users/BoxyUwU/followers", "following_url": "https://api.github.com/users/BoxyUwU/following{/other_user}", "gists_url": "https://api.github.com/users/BoxyUwU/gists{/gist_id}", "starred_url": "https://api.github.com/users/BoxyUwU/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/BoxyUwU/subscriptions", "organizations_url": "https://api.github.com/users/BoxyUwU/orgs", "repos_url": "https://api.github.com/users/BoxyUwU/repos", "events_url": "https://api.github.com/users/BoxyUwU/events{/privacy}", "received_events_url": "https://api.github.com/users/BoxyUwU/received_events", "type": "User", "site_admin": false}, "committer": {"login": "BoxyUwU", "id": 21149742, "node_id": "MDQ6VXNlcjIxMTQ5NzQy", "avatar_url": "https://avatars.githubusercontent.com/u/21149742?v=4", "gravatar_id": "", "url": "https://api.github.com/users/BoxyUwU", "html_url": "https://github.com/BoxyUwU", "followers_url": "https://api.github.com/users/BoxyUwU/followers", "following_url": "https://api.github.com/users/BoxyUwU/following{/other_user}", "gists_url": "https://api.github.com/users/BoxyUwU/gists{/gist_id}", "starred_url": "https://api.github.com/users/BoxyUwU/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/BoxyUwU/subscriptions", "organizations_url": "https://api.github.com/users/BoxyUwU/orgs", "repos_url": "https://api.github.com/users/BoxyUwU/repos", "events_url": "https://api.github.com/users/BoxyUwU/events{/privacy}", "received_events_url": "https://api.github.com/users/BoxyUwU/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "78a46efff06558674b51c10d8d81758285746ab5", "url": "https://api.github.com/repos/rust-lang/rust/commits/78a46efff06558674b51c10d8d81758285746ab5", "html_url": "https://github.com/rust-lang/rust/commit/78a46efff06558674b51c10d8d81758285746ab5"}], "stats": {"total": 9, "additions": 6, "deletions": 3}, "files": [{"sha": "4108ad50470b711f217ecdcfe9d07b24672e10cc", "filename": "compiler/rustc_mir_build/src/build/mod.rs", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/5fdb9e4cf43899eaab1121a77e19b20fac1835cb/compiler%2Frustc_mir_build%2Fsrc%2Fbuild%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5fdb9e4cf43899eaab1121a77e19b20fac1835cb/compiler%2Frustc_mir_build%2Fsrc%2Fbuild%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir_build%2Fsrc%2Fbuild%2Fmod.rs?ref=5fdb9e4cf43899eaab1121a77e19b20fac1835cb", "patch": "@@ -44,15 +44,18 @@ fn mir_build(tcx: TyCtxt<'_>, def: ty::WithOptConstParam<LocalDefId>) -> Body<'_\n     let body_owner_kind = tcx.hir().body_owner_kind(id);\n     let typeck_results = tcx.typeck_opt_const_arg(def);\n \n-    // Ensure unsafeck is ran before we steal the THIR.\n+    // Ensure unsafeck and abstract const building is ran before we steal the THIR.\n+    // We can't use `ensure()` for `thir_abstract_const` as it doesn't compute the query\n+    // if inputs are green. This can cause ICEs when calling `thir_abstract_const` after\n+    // THIR has been stolen if we haven't computed this query yet.\n     match def {\n         ty::WithOptConstParam { did, const_param_did: Some(const_param_did) } => {\n             tcx.ensure().thir_check_unsafety_for_const_arg((did, const_param_did));\n-            tcx.ensure().thir_abstract_const_of_const_arg((did, const_param_did));\n+            drop(tcx.thir_abstract_const_of_const_arg((did, const_param_did)));\n         }\n         ty::WithOptConstParam { did, const_param_did: None } => {\n             tcx.ensure().thir_check_unsafety(did);\n-            tcx.ensure().thir_abstract_const(did);\n+            drop(tcx.thir_abstract_const(did));\n         }\n     }\n "}]}