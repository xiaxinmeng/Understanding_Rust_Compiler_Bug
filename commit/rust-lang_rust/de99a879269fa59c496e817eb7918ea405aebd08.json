{"sha": "de99a879269fa59c496e817eb7918ea405aebd08", "node_id": "C_kwDOAAsO6NoAKGRlOTlhODc5MjY5ZmE1OWM0OTZlODE3ZWI3OTE4ZWE0MDVhZWJkMDg", "commit": {"author": {"name": "nils", "email": "48135649+Nilstrieb@users.noreply.github.com", "date": "2022-12-23T17:02:15Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-12-23T17:02:15Z"}, "message": "Rollup merge of #106055 - compiler-errors:too-many-calls, r=estebank\n\nCheck arg expressions properly on error in `confirm_builtin_call`\n\nMakes sure we don't regress diagnostic output when we have an expr error nested inside of a bad fn call: https://github.com/rust-lang/rust/pull/105973#issuecomment-1363152232\n\nFixes #106030\nFixes #105244", "tree": {"sha": "96025ba628bcac770e9f603ff90dc72256562bec", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/96025ba628bcac770e9f603ff90dc72256562bec"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/de99a879269fa59c496e817eb7918ea405aebd08", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJjpd8XCRBK7hj4Ov3rIwAAEAgIAGMrL54YgkYS6/4k7iHkHUzr\naFERJmknviRgiGYV0Gl1bn+AuKwg5y6TmPliAPKD/I2iwm094HEA+K1rMBbkEvad\nkkcp/LplbeaBleauFYiIb6n1MXmZPI5vxwQhXGzDwIPSQQ99t/mY+8s4BtbHXI3F\nNOFplaUvgwFQm46SFSmyMRHhHnUBFYIDCcW87kJxSo9qDfJPmNL8GLfIg2UBQQYi\nN/dYK3yfqXTAXIXP8tfNABoyL/Z5Awe6kVg5Z9a7QJCNxOOLqxg20WPGVIos7q8X\njjtj01DBUntsG4pRSZF3HEBa51EuCbxmR5WSXr7bXqNUvuvqhR0Dg5DRrehgSFE=\n=5wma\n-----END PGP SIGNATURE-----\n", "payload": "tree 96025ba628bcac770e9f603ff90dc72256562bec\nparent 9192874b29b2f5738f254d8080f42b2632c920e5\nparent 69abe4458e9c2f348933e8ecf939e9b38ff79625\nauthor nils <48135649+Nilstrieb@users.noreply.github.com> 1671814935 +0100\ncommitter GitHub <noreply@github.com> 1671814935 +0100\n\nRollup merge of #106055 - compiler-errors:too-many-calls, r=estebank\n\nCheck arg expressions properly on error in `confirm_builtin_call`\n\nMakes sure we don't regress diagnostic output when we have an expr error nested inside of a bad fn call: https://github.com/rust-lang/rust/pull/105973#issuecomment-1363152232\n\nFixes #106030\nFixes #105244\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/de99a879269fa59c496e817eb7918ea405aebd08", "html_url": "https://github.com/rust-lang/rust/commit/de99a879269fa59c496e817eb7918ea405aebd08", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/de99a879269fa59c496e817eb7918ea405aebd08/comments", "author": {"login": "Nilstrieb", "id": 48135649, "node_id": "MDQ6VXNlcjQ4MTM1NjQ5", "avatar_url": "https://avatars.githubusercontent.com/u/48135649?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Nilstrieb", "html_url": "https://github.com/Nilstrieb", "followers_url": "https://api.github.com/users/Nilstrieb/followers", "following_url": "https://api.github.com/users/Nilstrieb/following{/other_user}", "gists_url": "https://api.github.com/users/Nilstrieb/gists{/gist_id}", "starred_url": "https://api.github.com/users/Nilstrieb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Nilstrieb/subscriptions", "organizations_url": "https://api.github.com/users/Nilstrieb/orgs", "repos_url": "https://api.github.com/users/Nilstrieb/repos", "events_url": "https://api.github.com/users/Nilstrieb/events{/privacy}", "received_events_url": "https://api.github.com/users/Nilstrieb/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9192874b29b2f5738f254d8080f42b2632c920e5", "url": "https://api.github.com/repos/rust-lang/rust/commits/9192874b29b2f5738f254d8080f42b2632c920e5", "html_url": "https://github.com/rust-lang/rust/commit/9192874b29b2f5738f254d8080f42b2632c920e5"}, {"sha": "69abe4458e9c2f348933e8ecf939e9b38ff79625", "url": "https://api.github.com/repos/rust-lang/rust/commits/69abe4458e9c2f348933e8ecf939e9b38ff79625", "html_url": "https://github.com/rust-lang/rust/commit/69abe4458e9c2f348933e8ecf939e9b38ff79625"}], "stats": {"total": 102, "additions": 101, "deletions": 1}, "files": [{"sha": "af14ee08a9981bd187a89ee1bdb1365a053a7aaa", "filename": "compiler/rustc_hir_typeck/src/callee.rs", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/de99a879269fa59c496e817eb7918ea405aebd08/compiler%2Frustc_hir_typeck%2Fsrc%2Fcallee.rs", "raw_url": "https://github.com/rust-lang/rust/raw/de99a879269fa59c496e817eb7918ea405aebd08/compiler%2Frustc_hir_typeck%2Fsrc%2Fcallee.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_hir_typeck%2Fsrc%2Fcallee.rs?ref=de99a879269fa59c496e817eb7918ea405aebd08", "patch": "@@ -399,6 +399,10 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n             }\n             ty::FnPtr(sig) => (sig, None),\n             _ => {\n+                for arg in arg_exprs {\n+                    self.check_expr(arg);\n+                }\n+\n                 if let hir::ExprKind::Path(hir::QPath::Resolved(_, path)) = &callee_expr.kind\n                     && let [segment] = path.segments\n                     && let Some(mut diag) = self\n@@ -486,7 +490,8 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n         expected: Expectation<'tcx>,\n     ) -> Option<Ty<'tcx>> {\n         if let [callee_expr, rest @ ..] = arg_exprs {\n-            let callee_ty = self.check_expr(callee_expr);\n+            let callee_ty = self.typeck_results.borrow().expr_ty_adjusted_opt(callee_expr)?;\n+\n             // First, do a probe with `IsSuggestion(true)` to avoid emitting\n             // any strange errors. If it's successful, then we'll do a true\n             // method lookup."}, {"sha": "58ee3d6409a7e19ed0b1d7c5b83c64fa0b649cbc", "filename": "src/test/ui/suggestions/fn-to-method-deeply-nested.rs", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/de99a879269fa59c496e817eb7918ea405aebd08/src%2Ftest%2Fui%2Fsuggestions%2Ffn-to-method-deeply-nested.rs", "raw_url": "https://github.com/rust-lang/rust/raw/de99a879269fa59c496e817eb7918ea405aebd08/src%2Ftest%2Fui%2Fsuggestions%2Ffn-to-method-deeply-nested.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Ffn-to-method-deeply-nested.rs?ref=de99a879269fa59c496e817eb7918ea405aebd08", "patch": "@@ -0,0 +1,13 @@\n+fn main() -> Result<(), ()> {\n+    a(b(c(d(e(\n+        //~^ ERROR cannot find function `a` in this scope\n+        //~| ERROR cannot find function `b` in this scope\n+        //~| ERROR cannot find function `c` in this scope\n+        //~| ERROR cannot find function `d` in this scope\n+        //~| ERROR cannot find function `e` in this scope\n+        z????????????????????????????????????????????????????????????????????????????????????????\n+        ?????????????????????????????????????????????????????????????????????????????????????????\n+        ??????????????????????????????????????????????????????????????????\n+        //~^^^ ERROR cannot find value `z` in this scope\n+    )))))\n+}"}, {"sha": "ce813ea7abae8acc4349f60798855012ce7e0e90", "filename": "src/test/ui/suggestions/fn-to-method-deeply-nested.stderr", "status": "added", "additions": 39, "deletions": 0, "changes": 39, "blob_url": "https://github.com/rust-lang/rust/blob/de99a879269fa59c496e817eb7918ea405aebd08/src%2Ftest%2Fui%2Fsuggestions%2Ffn-to-method-deeply-nested.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/de99a879269fa59c496e817eb7918ea405aebd08/src%2Ftest%2Fui%2Fsuggestions%2Ffn-to-method-deeply-nested.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Ffn-to-method-deeply-nested.stderr?ref=de99a879269fa59c496e817eb7918ea405aebd08", "patch": "@@ -0,0 +1,39 @@\n+error[E0425]: cannot find value `z` in this scope\n+  --> $DIR/fn-to-method-deeply-nested.rs:8:9\n+   |\n+LL |         z????????????????????????????????????????????????????????????????????????????????????????\n+   |         ^ not found in this scope\n+\n+error[E0425]: cannot find function `e` in this scope\n+  --> $DIR/fn-to-method-deeply-nested.rs:2:13\n+   |\n+LL |     a(b(c(d(e(\n+   |             ^ not found in this scope\n+\n+error[E0425]: cannot find function `d` in this scope\n+  --> $DIR/fn-to-method-deeply-nested.rs:2:11\n+   |\n+LL |     a(b(c(d(e(\n+   |           ^ not found in this scope\n+\n+error[E0425]: cannot find function `c` in this scope\n+  --> $DIR/fn-to-method-deeply-nested.rs:2:9\n+   |\n+LL |     a(b(c(d(e(\n+   |         ^ not found in this scope\n+\n+error[E0425]: cannot find function `b` in this scope\n+  --> $DIR/fn-to-method-deeply-nested.rs:2:7\n+   |\n+LL |     a(b(c(d(e(\n+   |       ^ not found in this scope\n+\n+error[E0425]: cannot find function `a` in this scope\n+  --> $DIR/fn-to-method-deeply-nested.rs:2:5\n+   |\n+LL |     a(b(c(d(e(\n+   |     ^ not found in this scope\n+\n+error: aborting due to 6 previous errors\n+\n+For more information about this error, try `rustc --explain E0425`."}, {"sha": "af57dbe33177d61e6cf28f83610cdb75e2cbacc1", "filename": "src/test/ui/typeck/check-args-on-fn-err-2.rs", "status": "added", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/de99a879269fa59c496e817eb7918ea405aebd08/src%2Ftest%2Fui%2Ftypeck%2Fcheck-args-on-fn-err-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/de99a879269fa59c496e817eb7918ea405aebd08/src%2Ftest%2Fui%2Ftypeck%2Fcheck-args-on-fn-err-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftypeck%2Fcheck-args-on-fn-err-2.rs?ref=de99a879269fa59c496e817eb7918ea405aebd08", "patch": "@@ -0,0 +1,5 @@\n+fn main() {\n+    a((), 1i32 == 2u32);\n+    //~^ ERROR cannot find function `a` in this scope\n+    //~| ERROR mismatched types\n+}"}, {"sha": "301bb88dbacf6e2928348a69752a0dc31b3e7814", "filename": "src/test/ui/typeck/check-args-on-fn-err-2.stderr", "status": "added", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/de99a879269fa59c496e817eb7918ea405aebd08/src%2Ftest%2Fui%2Ftypeck%2Fcheck-args-on-fn-err-2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/de99a879269fa59c496e817eb7918ea405aebd08/src%2Ftest%2Fui%2Ftypeck%2Fcheck-args-on-fn-err-2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftypeck%2Fcheck-args-on-fn-err-2.stderr?ref=de99a879269fa59c496e817eb7918ea405aebd08", "patch": "@@ -0,0 +1,23 @@\n+error[E0308]: mismatched types\n+  --> $DIR/check-args-on-fn-err-2.rs:2:19\n+   |\n+LL |     a((), 1i32 == 2u32);\n+   |           ----    ^^^^ expected `i32`, found `u32`\n+   |           |\n+   |           expected because this is `i32`\n+   |\n+help: change the type of the numeric literal from `u32` to `i32`\n+   |\n+LL |     a((), 1i32 == 2i32);\n+   |                    ~~~\n+\n+error[E0425]: cannot find function `a` in this scope\n+  --> $DIR/check-args-on-fn-err-2.rs:2:5\n+   |\n+LL |     a((), 1i32 == 2u32);\n+   |     ^ not found in this scope\n+\n+error: aborting due to 2 previous errors\n+\n+Some errors have detailed explanations: E0308, E0425.\n+For more information about an error, try `rustc --explain E0308`."}, {"sha": "04b98ddd952956411bec7d857aeb08ccc7e3d9f7", "filename": "src/test/ui/typeck/check-args-on-fn-err.rs", "status": "added", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/de99a879269fa59c496e817eb7918ea405aebd08/src%2Ftest%2Fui%2Ftypeck%2Fcheck-args-on-fn-err.rs", "raw_url": "https://github.com/rust-lang/rust/raw/de99a879269fa59c496e817eb7918ea405aebd08/src%2Ftest%2Fui%2Ftypeck%2Fcheck-args-on-fn-err.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftypeck%2Fcheck-args-on-fn-err.rs?ref=de99a879269fa59c496e817eb7918ea405aebd08", "patch": "@@ -0,0 +1,6 @@\n+fn main() {\n+    unknown(1, |glyf| {\n+        //~^ ERROR: cannot find function `unknown` in this scope\n+        let actual = glyf;\n+    });\n+}"}, {"sha": "864d33e0e93bbc07aae97362bc60926863a75016", "filename": "src/test/ui/typeck/check-args-on-fn-err.stderr", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/de99a879269fa59c496e817eb7918ea405aebd08/src%2Ftest%2Fui%2Ftypeck%2Fcheck-args-on-fn-err.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/de99a879269fa59c496e817eb7918ea405aebd08/src%2Ftest%2Fui%2Ftypeck%2Fcheck-args-on-fn-err.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftypeck%2Fcheck-args-on-fn-err.stderr?ref=de99a879269fa59c496e817eb7918ea405aebd08", "patch": "@@ -0,0 +1,9 @@\n+error[E0425]: cannot find function `unknown` in this scope\n+  --> $DIR/check-args-on-fn-err.rs:2:5\n+   |\n+LL |     unknown(1, |glyf| {\n+   |     ^^^^^^^ not found in this scope\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0425`."}]}