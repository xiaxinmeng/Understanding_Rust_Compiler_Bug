{"sha": "4bffe8f00d39ad754758fb0eb38f9f9be54c9928", "node_id": "MDY6Q29tbWl0NzI0NzEyOjRiZmZlOGYwMGQzOWFkNzU0NzU4ZmIwZWIzOGY5ZjliZTU0Yzk5Mjg=", "commit": {"author": {"name": "Bastian Kauschke", "email": "bastian_kauschke@hotmail.de", "date": "2020-07-21T20:54:18Z"}, "committer": {"name": "Bastian Kauschke", "email": "bastian_kauschke@hotmail.de", "date": "2020-07-21T21:12:10Z"}, "message": "fetch -> lookup", "tree": {"sha": "1dbcc052d6b1599284f03b4442d53ae4fd6ad941", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1dbcc052d6b1599284f03b4442d53ae4fd6ad941"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4bffe8f00d39ad754758fb0eb38f9f9be54c9928", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4bffe8f00d39ad754758fb0eb38f9f9be54c9928", "html_url": "https://github.com/rust-lang/rust/commit/4bffe8f00d39ad754758fb0eb38f9f9be54c9928", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4bffe8f00d39ad754758fb0eb38f9f9be54c9928/comments", "author": {"login": "lcnr", "id": 29864074, "node_id": "MDQ6VXNlcjI5ODY0MDc0", "avatar_url": "https://avatars.githubusercontent.com/u/29864074?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lcnr", "html_url": "https://github.com/lcnr", "followers_url": "https://api.github.com/users/lcnr/followers", "following_url": "https://api.github.com/users/lcnr/following{/other_user}", "gists_url": "https://api.github.com/users/lcnr/gists{/gist_id}", "starred_url": "https://api.github.com/users/lcnr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lcnr/subscriptions", "organizations_url": "https://api.github.com/users/lcnr/orgs", "repos_url": "https://api.github.com/users/lcnr/repos", "events_url": "https://api.github.com/users/lcnr/events{/privacy}", "received_events_url": "https://api.github.com/users/lcnr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "lcnr", "id": 29864074, "node_id": "MDQ6VXNlcjI5ODY0MDc0", "avatar_url": "https://avatars.githubusercontent.com/u/29864074?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lcnr", "html_url": "https://github.com/lcnr", "followers_url": "https://api.github.com/users/lcnr/followers", "following_url": "https://api.github.com/users/lcnr/following{/other_user}", "gists_url": "https://api.github.com/users/lcnr/gists{/gist_id}", "starred_url": "https://api.github.com/users/lcnr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lcnr/subscriptions", "organizations_url": "https://api.github.com/users/lcnr/orgs", "repos_url": "https://api.github.com/users/lcnr/repos", "events_url": "https://api.github.com/users/lcnr/events{/privacy}", "received_events_url": "https://api.github.com/users/lcnr/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "38e9e62663de3ea931ed9d093e59182a31563c16", "url": "https://api.github.com/repos/rust-lang/rust/commits/38e9e62663de3ea931ed9d093e59182a31563c16", "html_url": "https://github.com/rust-lang/rust/commit/38e9e62663de3ea931ed9d093e59182a31563c16"}], "stats": {"total": 17, "additions": 10, "deletions": 7}, "files": [{"sha": "5316649d0e28af0010416e737db77c754fb9e4ea", "filename": "src/librustc_middle/ty/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4bffe8f00d39ad754758fb0eb38f9f9be54c9928/src%2Flibrustc_middle%2Fty%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4bffe8f00d39ad754758fb0eb38f9f9be54c9928/src%2Flibrustc_middle%2Fty%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_middle%2Fty%2Fmod.rs?ref=4bffe8f00d39ad754758fb0eb38f9f9be54c9928", "patch": "@@ -1627,7 +1627,7 @@ impl WithOptConstParam<LocalDefId> {\n     /// Returns `Some((did, param_did))` if `def_id` is a const argument,\n     /// `None` otherwise.\n     #[inline(always)]\n-    pub fn try_fetch(did: LocalDefId, tcx: TyCtxt<'_>) -> Option<(LocalDefId, DefId)> {\n+    pub fn try_lookup(did: LocalDefId, tcx: TyCtxt<'_>) -> Option<(LocalDefId, DefId)> {\n         tcx.opt_const_param_of(did).map(|param_did| (did, param_did))\n     }\n "}, {"sha": "76cc03fa60909ba58b605fa105b6928bac3a6ea0", "filename": "src/librustc_mir/borrow_check/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4bffe8f00d39ad754758fb0eb38f9f9be54c9928/src%2Flibrustc_mir%2Fborrow_check%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4bffe8f00d39ad754758fb0eb38f9f9be54c9928/src%2Flibrustc_mir%2Fborrow_check%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check%2Fmod.rs?ref=4bffe8f00d39ad754758fb0eb38f9f9be54c9928", "patch": "@@ -89,7 +89,7 @@ const DEREF_PROJECTION: &[PlaceElem<'_>; 1] = &[ProjectionElem::Deref];\n pub fn provide(providers: &mut Providers) {\n     *providers = Providers {\n         mir_borrowck: |tcx, did| {\n-            if let Some(def) = ty::WithOptConstParam::try_fetch(did, tcx) {\n+            if let Some(def) = ty::WithOptConstParam::try_lookup(did, tcx) {\n                 tcx.mir_borrowck_const_arg(def)\n             } else {\n                 mir_borrowck(tcx, ty::WithOptConstParam::unknown(did))"}, {"sha": "9c06e173bcd5713b2b946af7faa85dd4a341614b", "filename": "src/librustc_mir/transform/check_unsafety.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4bffe8f00d39ad754758fb0eb38f9f9be54c9928/src%2Flibrustc_mir%2Ftransform%2Fcheck_unsafety.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4bffe8f00d39ad754758fb0eb38f9f9be54c9928/src%2Flibrustc_mir%2Ftransform%2Fcheck_unsafety.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Ftransform%2Fcheck_unsafety.rs?ref=4bffe8f00d39ad754758fb0eb38f9f9be54c9928", "patch": "@@ -439,7 +439,7 @@ impl<'a, 'tcx> UnsafetyChecker<'a, 'tcx> {\n pub(crate) fn provide(providers: &mut Providers) {\n     *providers = Providers {\n         unsafety_check_result: |tcx, def_id| {\n-            if let Some(def) = ty::WithOptConstParam::try_fetch(def_id, tcx) {\n+            if let Some(def) = ty::WithOptConstParam::try_lookup(def_id, tcx) {\n                 tcx.unsafety_check_result_for_const_arg(def)\n             } else {\n                 unsafety_check_result(tcx, ty::WithOptConstParam::unknown(def_id))"}, {"sha": "283e4b289f286925979d94c6733fe9c7867cb058", "filename": "src/librustc_mir/transform/mod.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/4bffe8f00d39ad754758fb0eb38f9f9be54c9928/src%2Flibrustc_mir%2Ftransform%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4bffe8f00d39ad754758fb0eb38f9f9be54c9928/src%2Flibrustc_mir%2Ftransform%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Ftransform%2Fmod.rs?ref=4bffe8f00d39ad754758fb0eb38f9f9be54c9928", "patch": "@@ -50,7 +50,7 @@ pub(crate) fn provide(providers: &mut Providers) {\n         mir_const,\n         mir_const_qualif: |tcx, def_id| {\n             let def_id = def_id.expect_local();\n-            if let Some(def) = ty::WithOptConstParam::try_fetch(def_id, tcx) {\n+            if let Some(def) = ty::WithOptConstParam::try_lookup(def_id, tcx) {\n                 tcx.mir_const_qualif_const_arg(def)\n             } else {\n                 mir_const_qualif(tcx, ty::WithOptConstParam::unknown(def_id))\n@@ -66,7 +66,7 @@ pub(crate) fn provide(providers: &mut Providers) {\n         is_mir_available,\n         promoted_mir: |tcx, def_id| {\n             let def_id = def_id.expect_local();\n-            if let Some(def) = ty::WithOptConstParam::try_fetch(def_id, tcx) {\n+            if let Some(def) = ty::WithOptConstParam::try_lookup(def_id, tcx) {\n                 tcx.promoted_mir_of_const_arg(def)\n             } else {\n                 promoted_mir(tcx, ty::WithOptConstParam::unknown(def_id))\n@@ -485,7 +485,7 @@ fn run_optimization_passes<'tcx>(\n \n fn optimized_mir<'tcx>(tcx: TyCtxt<'tcx>, did: DefId) -> &'tcx Body<'tcx> {\n     let did = did.expect_local();\n-    if let Some(def) = ty::WithOptConstParam::try_fetch(did, tcx) {\n+    if let Some(def) = ty::WithOptConstParam::try_lookup(did, tcx) {\n         tcx.optimized_mir_of_const_arg(def)\n     } else {\n         tcx.arena.alloc(inner_optimized_mir(tcx, ty::WithOptConstParam::unknown(did)))"}, {"sha": "1e677f3d2aba82693e775972cefab82ce3a1dc38", "filename": "src/librustc_mir_build/build/mod.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/4bffe8f00d39ad754758fb0eb38f9f9be54c9928/src%2Flibrustc_mir_build%2Fbuild%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4bffe8f00d39ad754758fb0eb38f9f9be54c9928/src%2Flibrustc_mir_build%2Fbuild%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir_build%2Fbuild%2Fmod.rs?ref=4bffe8f00d39ad754758fb0eb38f9f9be54c9928", "patch": "@@ -21,7 +21,10 @@ use rustc_target::spec::PanicStrategy;\n \n use super::lints;\n \n-crate fn mir_built<'tcx>(tcx: TyCtxt<'tcx>, def: ty::WithOptConstParam<LocalDefId>) -> &'tcx ty::steal::Steal<Body<'tcx>> {\n+crate fn mir_built<'tcx>(\n+    tcx: TyCtxt<'tcx>,\n+    def: ty::WithOptConstParam<LocalDefId>,\n+) -> &'tcx ty::steal::Steal<Body<'tcx>> {\n     if let Some(def) = def.try_upgrade(tcx) {\n         return tcx.mir_built(def);\n     }"}]}