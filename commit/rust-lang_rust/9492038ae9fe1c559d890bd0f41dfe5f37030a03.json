{"sha": "9492038ae9fe1c559d890bd0f41dfe5f37030a03", "node_id": "MDY6Q29tbWl0NzI0NzEyOjk0OTIwMzhhZTlmZTFjNTU5ZDg5MGJkMGY0MWRmZTVmMzcwMzBhMDM=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2019-06-23T16:06:11Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2019-06-23T16:06:11Z"}, "message": "make code more symmetric", "tree": {"sha": "01438f76326a1a5473f1e14948975cfe2482578e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/01438f76326a1a5473f1e14948975cfe2482578e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9492038ae9fe1c559d890bd0f41dfe5f37030a03", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9492038ae9fe1c559d890bd0f41dfe5f37030a03", "html_url": "https://github.com/rust-lang/rust/commit/9492038ae9fe1c559d890bd0f41dfe5f37030a03", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9492038ae9fe1c559d890bd0f41dfe5f37030a03/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9c32ede0992b360398241a3c794df09fd1cc24e1", "url": "https://api.github.com/repos/rust-lang/rust/commits/9c32ede0992b360398241a3c794df09fd1cc24e1", "html_url": "https://github.com/rust-lang/rust/commit/9c32ede0992b360398241a3c794df09fd1cc24e1"}], "stats": {"total": 8, "additions": 5, "deletions": 3}, "files": [{"sha": "5d2f268d2663915efb2ce318e6a9b97ded635ea4", "filename": "src/librustc_mir/interpret/traits.rs", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/9492038ae9fe1c559d890bd0f41dfe5f37030a03/src%2Flibrustc_mir%2Finterpret%2Ftraits.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9492038ae9fe1c559d890bd0f41dfe5f37030a03/src%2Flibrustc_mir%2Finterpret%2Ftraits.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Finterpret%2Ftraits.rs?ref=9492038ae9fe1c559d890bd0f41dfe5f37030a03", "patch": "@@ -128,15 +128,17 @@ impl<'mir, 'tcx, M: Machine<'mir, 'tcx>> InterpretCx<'mir, 'tcx, M> {\n     ) -> InterpResult<'tcx, (Size, Align)> {\n         let pointer_size = self.pointer_size();\n         // We check for size = 3*ptr_size, that covers the drop fn (unused here),\n-        // the size, and the align.\n+        // the size, and the align (which we read below).\n         let vtable = self.memory.check_ptr_access(\n             vtable,\n             3*pointer_size,\n             self.tcx.data_layout.pointer_align.abi,\n         )?.expect(\"cannot be a ZST\");\n         let alloc = self.memory.get(vtable.alloc_id)?;\n-        let size = alloc.read_ptr_sized(self, vtable.offset(pointer_size, self)?)?\n-            .to_bits(pointer_size)? as u64;\n+        let size = alloc.read_ptr_sized(\n+            self,\n+            vtable.offset(pointer_size, self)?\n+        )?.to_bits(pointer_size)? as u64;\n         let align = alloc.read_ptr_sized(\n             self,\n             vtable.offset(pointer_size * 2, self)?,"}]}