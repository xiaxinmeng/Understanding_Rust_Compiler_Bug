{"sha": "965556d1626a1ca26db08b1d4193ae9cc026223a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjk2NTU1NmQxNjI2YTFjYTI2ZGIwOGIxZDQxOTNhZTljYzAyNjIyM2E=", "commit": {"author": {"name": "arcnmx", "email": "arcnmx@users.noreply.github.com", "date": "2015-12-31T18:56:21Z"}, "committer": {"name": "arcnmx", "email": "arcnmx@users.noreply.github.com", "date": "2015-12-31T19:15:27Z"}, "message": "impl From<&CStr> for CString", "tree": {"sha": "eaf3548863cdcb4dac6aee77518167e5848f728c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/eaf3548863cdcb4dac6aee77518167e5848f728c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/965556d1626a1ca26db08b1d4193ae9cc026223a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/965556d1626a1ca26db08b1d4193ae9cc026223a", "html_url": "https://github.com/rust-lang/rust/commit/965556d1626a1ca26db08b1d4193ae9cc026223a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/965556d1626a1ca26db08b1d4193ae9cc026223a/comments", "author": {"login": "arcnmx", "id": 13426784, "node_id": "MDQ6VXNlcjEzNDI2Nzg0", "avatar_url": "https://avatars.githubusercontent.com/u/13426784?v=4", "gravatar_id": "", "url": "https://api.github.com/users/arcnmx", "html_url": "https://github.com/arcnmx", "followers_url": "https://api.github.com/users/arcnmx/followers", "following_url": "https://api.github.com/users/arcnmx/following{/other_user}", "gists_url": "https://api.github.com/users/arcnmx/gists{/gist_id}", "starred_url": "https://api.github.com/users/arcnmx/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/arcnmx/subscriptions", "organizations_url": "https://api.github.com/users/arcnmx/orgs", "repos_url": "https://api.github.com/users/arcnmx/repos", "events_url": "https://api.github.com/users/arcnmx/events{/privacy}", "received_events_url": "https://api.github.com/users/arcnmx/received_events", "type": "User", "site_admin": false}, "committer": {"login": "arcnmx", "id": 13426784, "node_id": "MDQ6VXNlcjEzNDI2Nzg0", "avatar_url": "https://avatars.githubusercontent.com/u/13426784?v=4", "gravatar_id": "", "url": "https://api.github.com/users/arcnmx", "html_url": "https://github.com/arcnmx", "followers_url": "https://api.github.com/users/arcnmx/followers", "following_url": "https://api.github.com/users/arcnmx/following{/other_user}", "gists_url": "https://api.github.com/users/arcnmx/gists{/gist_id}", "starred_url": "https://api.github.com/users/arcnmx/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/arcnmx/subscriptions", "organizations_url": "https://api.github.com/users/arcnmx/orgs", "repos_url": "https://api.github.com/users/arcnmx/repos", "events_url": "https://api.github.com/users/arcnmx/events{/privacy}", "received_events_url": "https://api.github.com/users/arcnmx/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "43ab6c7d5a9a9951de487baf49b91fd4b85e584d", "url": "https://api.github.com/repos/rust-lang/rust/commits/43ab6c7d5a9a9951de487baf49b91fd4b85e584d", "html_url": "https://github.com/rust-lang/rust/commit/43ab6c7d5a9a9951de487baf49b91fd4b85e584d"}], "stats": {"total": 14, "additions": 7, "deletions": 7}, "files": [{"sha": "c8d43bfcef014de5de3207436fd5543d1bc19de1", "filename": "src/libstd/ffi/c_str.rs", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/965556d1626a1ca26db08b1d4193ae9cc026223a/src%2Flibstd%2Fffi%2Fc_str.rs", "raw_url": "https://github.com/rust-lang/rust/raw/965556d1626a1ca26db08b1d4193ae9cc026223a/src%2Flibstd%2Fffi%2Fc_str.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fffi%2Fc_str.rs?ref=965556d1626a1ca26db08b1d4193ae9cc026223a", "patch": "@@ -522,6 +522,13 @@ impl ToOwned for CStr {\n     }\n }\n \n+#[unstable(feature = \"cstring_asref\", reason = \"recently added\", issue = \"0\")]\n+impl<'a> From<&'a CStr> for CString {\n+    fn from(s: &'a CStr) -> CString {\n+        s.to_owned()\n+    }\n+}\n+\n #[unstable(feature = \"cstring_asref\", reason = \"recently added\", issue = \"0\")]\n impl ops::Index<ops::RangeFull> for CString {\n     type Output = CStr;\n@@ -532,13 +539,6 @@ impl ops::Index<ops::RangeFull> for CString {\n     }\n }\n \n-#[unstable(feature = \"cstring_asref\", reason = \"recently added\", issue = \"0\")]\n-impl<'a, T: ?Sized + AsRef<CStr>> From<&'a T> for CString {\n-    fn from(s: &'a T) -> CString {\n-        s.as_ref().to_owned()\n-    }\n-}\n-\n #[unstable(feature = \"cstring_asref\", reason = \"recently added\", issue = \"0\")]\n impl AsRef<CStr> for CStr {\n     fn as_ref(&self) -> &CStr {"}]}