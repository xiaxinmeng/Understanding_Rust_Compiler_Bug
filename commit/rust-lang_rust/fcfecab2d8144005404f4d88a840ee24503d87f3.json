{"sha": "fcfecab2d8144005404f4d88a840ee24503d87f3", "node_id": "C_kwDOAAsO6NoAKGZjZmVjYWIyZDgxNDQwMDU0MDRmNGQ4OGE4NDBlZTI0NTAzZDg3ZjM", "commit": {"author": {"name": "Dylan DPC", "email": "99973273+Dylan-DPC@users.noreply.github.com", "date": "2022-04-10T19:03:39Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-04-10T19:03:39Z"}, "message": "Rollup merge of #95868 - vacuus:markdown-code-blocks, r=GuillaumeGomez\n\nrustdoc: Reduce allocations in a `html::markdown` function", "tree": {"sha": "2ed06f4c5f3421e6951234a3ca7a053fbad38a42", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2ed06f4c5f3421e6951234a3ca7a053fbad38a42"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/fcfecab2d8144005404f4d88a840ee24503d87f3", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJiUyoLCRBK7hj4Ov3rIwAAm1kIAF435vuVnYaPM4/UZ4ap6hfz\n4Uo4USk4lM+f4KrR4wadXrjrPWo9li4XALvBRlsujyi3s7RikQqqQao8X6vQ9Lyv\nbVfy58UtGv67azi9HiTg0n8BJ2B1nK5saQXSYoShC9wHecCUMgFtzU9oGOZINjGG\nsJankmnbVpsPP7QZF4zIh0wFrb8Yys+GRbJQPnYEsNDczbN8Zt0ApjrAp5x3Vqum\nxzbv7LzoPWsF2LC0eV6UhLGwOIM85YTKbd6KMns6VL4pknmxl/QWcD+GrncZSKzN\nT/513dkdLrGOoU3AYcwBakIxDoPLYamEQ7zGSmqLtEfhdsrTh5Ctb7nD5/arQL4=\n=6FDv\n-----END PGP SIGNATURE-----\n", "payload": "tree 2ed06f4c5f3421e6951234a3ca7a053fbad38a42\nparent 78fc931355e9449eae5a1370d3f078f4e780446c\nparent 8e15b6cfdeeb36aae27518ce6446452392ebc021\nauthor Dylan DPC <99973273+Dylan-DPC@users.noreply.github.com> 1649617419 +0200\ncommitter GitHub <noreply@github.com> 1649617419 +0200\n\nRollup merge of #95868 - vacuus:markdown-code-blocks, r=GuillaumeGomez\n\nrustdoc: Reduce allocations in a `html::markdown` function\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/fcfecab2d8144005404f4d88a840ee24503d87f3", "html_url": "https://github.com/rust-lang/rust/commit/fcfecab2d8144005404f4d88a840ee24503d87f3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/fcfecab2d8144005404f4d88a840ee24503d87f3/comments", "author": {"login": "Dylan-DPC", "id": 99973273, "node_id": "U_kgDOBfV4mQ", "avatar_url": "https://avatars.githubusercontent.com/u/99973273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dylan-DPC", "html_url": "https://github.com/Dylan-DPC", "followers_url": "https://api.github.com/users/Dylan-DPC/followers", "following_url": "https://api.github.com/users/Dylan-DPC/following{/other_user}", "gists_url": "https://api.github.com/users/Dylan-DPC/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dylan-DPC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dylan-DPC/subscriptions", "organizations_url": "https://api.github.com/users/Dylan-DPC/orgs", "repos_url": "https://api.github.com/users/Dylan-DPC/repos", "events_url": "https://api.github.com/users/Dylan-DPC/events{/privacy}", "received_events_url": "https://api.github.com/users/Dylan-DPC/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "78fc931355e9449eae5a1370d3f078f4e780446c", "url": "https://api.github.com/repos/rust-lang/rust/commits/78fc931355e9449eae5a1370d3f078f4e780446c", "html_url": "https://github.com/rust-lang/rust/commit/78fc931355e9449eae5a1370d3f078f4e780446c"}, {"sha": "8e15b6cfdeeb36aae27518ce6446452392ebc021", "url": "https://api.github.com/repos/rust-lang/rust/commits/8e15b6cfdeeb36aae27518ce6446452392ebc021", "html_url": "https://github.com/rust-lang/rust/commit/8e15b6cfdeeb36aae27518ce6446452392ebc021"}], "stats": {"total": 12, "additions": 5, "deletions": 7}, "files": [{"sha": "943c521485b18e8b1e4a9b4d5aa0a8d4134bf867", "filename": "src/librustdoc/html/markdown.rs", "status": "modified", "additions": 5, "deletions": 7, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/fcfecab2d8144005404f4d88a840ee24503d87f3/src%2Flibrustdoc%2Fhtml%2Fmarkdown.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fcfecab2d8144005404f4d88a840ee24503d87f3/src%2Flibrustdoc%2Fhtml%2Fmarkdown.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fmarkdown.rs?ref=fcfecab2d8144005404f4d88a840ee24503d87f3", "patch": "@@ -251,7 +251,7 @@ impl<'a, I: Iterator<Item = Event<'a>>> Iterator for CodeBlocks<'_, 'a, I> {\n             }\n         }\n         let lines = origtext.lines().filter_map(|l| map_line(l).for_html());\n-        let text = lines.collect::<Vec<Cow<'_, str>>>().join(\"\\n\");\n+        let text = lines.intersperse(\"\\n\".into()).collect::<String>();\n \n         let parse_result = match kind {\n             CodeBlockKind::Fenced(ref lang) => {\n@@ -291,15 +291,13 @@ impl<'a, I: Iterator<Item = Event<'a>>> Iterator for CodeBlocks<'_, 'a, I> {\n             let test = origtext\n                 .lines()\n                 .map(|l| map_line(l).for_code())\n-                .collect::<Vec<Cow<'_, str>>>()\n-                .join(\"\\n\");\n+                .intersperse(\"\\n\".into())\n+                .collect::<String>();\n             let krate = krate.as_ref().map(|s| &**s);\n             let (test, _, _) =\n                 doctest::make_test(&test, krate, false, &Default::default(), edition, None);\n             let channel = if test.contains(\"#![feature(\") { \"&amp;version=nightly\" } else { \"\" };\n \n-            let edition_string = format!(\"&amp;edition={}\", edition);\n-\n             // These characters don't need to be escaped in a URI.\n             // FIXME: use a library function for percent encoding.\n             fn dont_escape(c: u8) -> bool {\n@@ -325,8 +323,8 @@ impl<'a, I: Iterator<Item = Event<'a>>> Iterator for CodeBlocks<'_, 'a, I> {\n                 }\n             }\n             Some(format!(\n-                r#\"<a class=\"test-arrow\" target=\"_blank\" href=\"{}?code={}{}{}\">Run</a>\"#,\n-                url, test_escaped, channel, edition_string\n+                r#\"<a class=\"test-arrow\" target=\"_blank\" href=\"{}?code={}{}&amp;edition={}\">Run</a>\"#,\n+                url, test_escaped, channel, edition,\n             ))\n         });\n "}]}