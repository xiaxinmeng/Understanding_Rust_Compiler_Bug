{"sha": "9dcb64f34638e8f72fa0ff54b39dfd071d0f8f86", "node_id": "MDY6Q29tbWl0NzI0NzEyOjlkY2I2NGYzNDYzOGU4ZjcyZmEwZmY1NGIzOWRmZDA3MWQwZjhmODY=", "commit": {"author": {"name": "Simon Sapin", "email": "simon.sapin@exyr.org", "date": "2018-06-01T00:19:36Z"}, "committer": {"name": "Simon Sapin", "email": "simon.sapin@exyr.org", "date": "2018-06-11T20:48:57Z"}, "message": "Alloc docs teaks", "tree": {"sha": "f9df4eeacc29bb36d71b21f97eeda3f3d4a5465e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f9df4eeacc29bb36d71b21f97eeda3f3d4a5465e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9dcb64f34638e8f72fa0ff54b39dfd071d0f8f86", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9dcb64f34638e8f72fa0ff54b39dfd071d0f8f86", "html_url": "https://github.com/rust-lang/rust/commit/9dcb64f34638e8f72fa0ff54b39dfd071d0f8f86", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9dcb64f34638e8f72fa0ff54b39dfd071d0f8f86/comments", "author": {"login": "SimonSapin", "id": 291359, "node_id": "MDQ6VXNlcjI5MTM1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/291359?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SimonSapin", "html_url": "https://github.com/SimonSapin", "followers_url": "https://api.github.com/users/SimonSapin/followers", "following_url": "https://api.github.com/users/SimonSapin/following{/other_user}", "gists_url": "https://api.github.com/users/SimonSapin/gists{/gist_id}", "starred_url": "https://api.github.com/users/SimonSapin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SimonSapin/subscriptions", "organizations_url": "https://api.github.com/users/SimonSapin/orgs", "repos_url": "https://api.github.com/users/SimonSapin/repos", "events_url": "https://api.github.com/users/SimonSapin/events{/privacy}", "received_events_url": "https://api.github.com/users/SimonSapin/received_events", "type": "User", "site_admin": false}, "committer": {"login": "SimonSapin", "id": 291359, "node_id": "MDQ6VXNlcjI5MTM1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/291359?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SimonSapin", "html_url": "https://github.com/SimonSapin", "followers_url": "https://api.github.com/users/SimonSapin/followers", "following_url": "https://api.github.com/users/SimonSapin/following{/other_user}", "gists_url": "https://api.github.com/users/SimonSapin/gists{/gist_id}", "starred_url": "https://api.github.com/users/SimonSapin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SimonSapin/subscriptions", "organizations_url": "https://api.github.com/users/SimonSapin/orgs", "repos_url": "https://api.github.com/users/SimonSapin/repos", "events_url": "https://api.github.com/users/SimonSapin/events{/privacy}", "received_events_url": "https://api.github.com/users/SimonSapin/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b2d526cc8ccae720713ee15c1c2878dc5c7e94f5", "url": "https://api.github.com/repos/rust-lang/rust/commits/b2d526cc8ccae720713ee15c1c2878dc5c7e94f5", "html_url": "https://github.com/rust-lang/rust/commit/b2d526cc8ccae720713ee15c1c2878dc5c7e94f5"}], "stats": {"total": 5, "additions": 0, "deletions": 5}, "files": [{"sha": "b0ac43e50f5e66e817933abb7f25e01284fabab3", "filename": "src/libcore/alloc.rs", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/9dcb64f34638e8f72fa0ff54b39dfd071d0f8f86/src%2Flibcore%2Falloc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9dcb64f34638e8f72fa0ff54b39dfd071d0f8f86/src%2Flibcore%2Falloc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Falloc.rs?ref=9dcb64f34638e8f72fa0ff54b39dfd071d0f8f86", "patch": "@@ -364,7 +364,6 @@ impl fmt::Display for AllocErr {\n /// The `CannotReallocInPlace` error is used when `grow_in_place` or\n /// `shrink_in_place` were unable to reuse the given memory block for\n /// a requested layout.\n-// FIXME: should this be in libcore or liballoc?\n #[unstable(feature = \"allocator_api\", issue = \"32838\")]\n #[derive(Clone, PartialEq, Eq, Debug)]\n pub struct CannotReallocInPlace;\n@@ -456,10 +455,6 @@ impl From<LayoutErr> for CollectionAllocErr {\n /// The `GlobalAlloc` trait is an `unsafe` trait for a number of reasons, and\n /// implementors must ensure that they adhere to these contracts:\n ///\n-/// * Pointers returned from allocation functions must point to valid memory and\n-///   retain their validity until at least the instance of `GlobalAlloc` is dropped\n-///   itself.\n-///\n /// * It's undefined behavior if global allocators unwind.  This restriction may\n ///   be lifted in the future, but currently a panic from any of these\n ///   functions may lead to memory unsafety."}]}