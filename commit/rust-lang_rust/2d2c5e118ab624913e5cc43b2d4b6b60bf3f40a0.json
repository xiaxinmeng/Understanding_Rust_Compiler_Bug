{"sha": "2d2c5e118ab624913e5cc43b2d4b6b60bf3f40a0", "node_id": "C_kwDOAAsO6NoAKDJkMmM1ZTExOGFiNjI0OTEzZTVjYzQzYjJkNGI2YjYwYmYzZjQwYTA", "commit": {"author": {"name": "ouz-a", "email": "oguz.agcayazi@gmail.com", "date": "2022-04-17T13:52:18Z"}, "committer": {"name": "ouz-a", "email": "oguz.agcayazi@gmail.com", "date": "2022-04-17T13:52:18Z"}, "message": "little changes", "tree": {"sha": "5201bf591944a3a7017261b28c0e4162561fe667", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5201bf591944a3a7017261b28c0e4162561fe667"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2d2c5e118ab624913e5cc43b2d4b6b60bf3f40a0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2d2c5e118ab624913e5cc43b2d4b6b60bf3f40a0", "html_url": "https://github.com/rust-lang/rust/commit/2d2c5e118ab624913e5cc43b2d4b6b60bf3f40a0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2d2c5e118ab624913e5cc43b2d4b6b60bf3f40a0/comments", "author": {"login": "ouz-a", "id": 90461915, "node_id": "MDQ6VXNlcjkwNDYxOTE1", "avatar_url": "https://avatars.githubusercontent.com/u/90461915?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ouz-a", "html_url": "https://github.com/ouz-a", "followers_url": "https://api.github.com/users/ouz-a/followers", "following_url": "https://api.github.com/users/ouz-a/following{/other_user}", "gists_url": "https://api.github.com/users/ouz-a/gists{/gist_id}", "starred_url": "https://api.github.com/users/ouz-a/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ouz-a/subscriptions", "organizations_url": "https://api.github.com/users/ouz-a/orgs", "repos_url": "https://api.github.com/users/ouz-a/repos", "events_url": "https://api.github.com/users/ouz-a/events{/privacy}", "received_events_url": "https://api.github.com/users/ouz-a/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ouz-a", "id": 90461915, "node_id": "MDQ6VXNlcjkwNDYxOTE1", "avatar_url": "https://avatars.githubusercontent.com/u/90461915?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ouz-a", "html_url": "https://github.com/ouz-a", "followers_url": "https://api.github.com/users/ouz-a/followers", "following_url": "https://api.github.com/users/ouz-a/following{/other_user}", "gists_url": "https://api.github.com/users/ouz-a/gists{/gist_id}", "starred_url": "https://api.github.com/users/ouz-a/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ouz-a/subscriptions", "organizations_url": "https://api.github.com/users/ouz-a/orgs", "repos_url": "https://api.github.com/users/ouz-a/repos", "events_url": "https://api.github.com/users/ouz-a/events{/privacy}", "received_events_url": "https://api.github.com/users/ouz-a/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8ba8b223afde4c14fe6c530d60e6589d163855ec", "url": "https://api.github.com/repos/rust-lang/rust/commits/8ba8b223afde4c14fe6c530d60e6589d163855ec", "html_url": "https://github.com/rust-lang/rust/commit/8ba8b223afde4c14fe6c530d60e6589d163855ec"}], "stats": {"total": 20, "additions": 9, "deletions": 11}, "files": [{"sha": "acede4e7969903334e45910df0245536a9133de7", "filename": "compiler/rustc_middle/src/mir/patch.rs", "status": "modified", "additions": 5, "deletions": 7, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/2d2c5e118ab624913e5cc43b2d4b6b60bf3f40a0/compiler%2Frustc_middle%2Fsrc%2Fmir%2Fpatch.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2d2c5e118ab624913e5cc43b2d4b6b60bf3f40a0/compiler%2Frustc_middle%2Fsrc%2Fmir%2Fpatch.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fmir%2Fpatch.rs?ref=2d2c5e118ab624913e5cc43b2d4b6b60bf3f40a0", "patch": "@@ -2,7 +2,6 @@ use rustc_index::vec::{Idx, IndexVec};\n use rustc_middle::mir::*;\n use rustc_middle::ty::Ty;\n use rustc_span::Span;\n-use std::collections::VecDeque;\n \n /// This struct represents a patch to MIR, which can add\n /// new statements and basic blocks and patch over block\n@@ -143,8 +142,7 @@ impl<'tcx> MirPatch<'tcx> {\n         let mut delta = 0;\n         let mut last_bb = START_BLOCK;\n         let mut terminator_targets = Vec::new();\n-        let mut inf_and_stmt: VecDeque<(SourceInfo, StatementKind<'_>)> = VecDeque::new();\n-\n+        let mut statements:Vec<Statement<'_>> = Vec::new();\n         for (mut loc, stmt) in new_statements {\n             if loc.block != last_bb {\n                 delta = 0;\n@@ -161,7 +159,7 @@ impl<'tcx> MirPatch<'tcx> {\n                 let successors = term.successors().clone();\n \n                 for i in successors {\n-                    inf_and_stmt.push_back((source_info, stmt.clone()));\n+                    statements.push(Statement{source_info,kind:stmt.clone()});\n                     terminator_targets.push(i.clone());\n                 }\n                 delta += 1;\n@@ -174,11 +172,11 @@ impl<'tcx> MirPatch<'tcx> {\n             delta += 1;\n         }\n \n-        for target in terminator_targets.iter() {\n-            let inf_and_stmt = inf_and_stmt.pop_front().unwrap();\n+        for target in terminator_targets.iter().rev() {\n+            let stmt = statements.pop().unwrap();\n             body[*target]\n                 .statements\n-                .insert(0, Statement { source_info: inf_and_stmt.0, kind: inf_and_stmt.1 });\n+                .insert(0, stmt);\n         }\n     }\n "}, {"sha": "7d81bb74cd60872d24cfa82090252d52816c6d56", "filename": "compiler/rustc_mir_transform/src/deref_separator.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/2d2c5e118ab624913e5cc43b2d4b6b60bf3f40a0/compiler%2Frustc_mir_transform%2Fsrc%2Fderef_separator.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2d2c5e118ab624913e5cc43b2d4b6b60bf3f40a0/compiler%2Frustc_mir_transform%2Fsrc%2Fderef_separator.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir_transform%2Fsrc%2Fderef_separator.rs?ref=2d2c5e118ab624913e5cc43b2d4b6b60bf3f40a0", "patch": "@@ -59,18 +59,18 @@ impl<'tcx> MutVisitor<'tcx> for DerefChecker<'tcx> {\n                 }\n \n                 // We are destroying last temp since it's no longer used.\n-                if prev_temp.is_some() {\n-                    self.patcher.add_statement(loc, StatementKind::StorageDead(prev_temp.unwrap()));\n+                if let Some(prev_temp) = prev_temp {\n+                    self.patcher.add_statement(loc, StatementKind::StorageDead(prev_temp));\n                 }\n \n                 prev_temp = Some(temp);\n             }\n         }\n \n         // Since we won't be able to reach final temp, we destroy it outside the loop.\n-        if prev_temp.is_some() {\n+        if let Some(prev_temp) = prev_temp {\n             let last_loc = Location { block: loc.block, statement_index: loc.statement_index + 1 };\n-            self.patcher.add_statement(last_loc, StatementKind::StorageDead(prev_temp.unwrap()));\n+            self.patcher.add_statement(last_loc, StatementKind::StorageDead(prev_temp));\n         }\n     }\n }"}]}