{"sha": "6c5d97a5da043c785b2fb38c0fd13c85ab265122", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZjNWQ5N2E1ZGEwNDNjNzg1YjJmYjM4YzBmZDEzYzg1YWIyNjUxMjI=", "commit": {"author": {"name": "Bj\u00f6rn Steinbrink", "email": "bsteinbr@gmail.com", "date": "2014-08-15T10:56:24Z"}, "committer": {"name": "Bj\u00f6rn Steinbrink", "email": "bsteinbr@gmail.com", "date": "2014-08-15T11:12:48Z"}, "message": "Generate slightly better unoptimized code for for-loops\n\nThe discriminant for Option values is either 0 or 1, so we can just\ntruncate the value to an i1, which ends up as a no-op for Options\ncontaining pointers.", "tree": {"sha": "18bcac29036020ea42969de95729c58637889bb5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/18bcac29036020ea42969de95729c58637889bb5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6c5d97a5da043c785b2fb38c0fd13c85ab265122", "comment_count": 5, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6c5d97a5da043c785b2fb38c0fd13c85ab265122", "html_url": "https://github.com/rust-lang/rust/commit/6c5d97a5da043c785b2fb38c0fd13c85ab265122", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6c5d97a5da043c785b2fb38c0fd13c85ab265122/comments", "author": {"login": "dotdash", "id": 230962, "node_id": "MDQ6VXNlcjIzMDk2Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/230962?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dotdash", "html_url": "https://github.com/dotdash", "followers_url": "https://api.github.com/users/dotdash/followers", "following_url": "https://api.github.com/users/dotdash/following{/other_user}", "gists_url": "https://api.github.com/users/dotdash/gists{/gist_id}", "starred_url": "https://api.github.com/users/dotdash/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dotdash/subscriptions", "organizations_url": "https://api.github.com/users/dotdash/orgs", "repos_url": "https://api.github.com/users/dotdash/repos", "events_url": "https://api.github.com/users/dotdash/events{/privacy}", "received_events_url": "https://api.github.com/users/dotdash/received_events", "type": "User", "site_admin": false}, "committer": {"login": "dotdash", "id": 230962, "node_id": "MDQ6VXNlcjIzMDk2Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/230962?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dotdash", "html_url": "https://github.com/dotdash", "followers_url": "https://api.github.com/users/dotdash/followers", "following_url": "https://api.github.com/users/dotdash/following{/other_user}", "gists_url": "https://api.github.com/users/dotdash/gists{/gist_id}", "starred_url": "https://api.github.com/users/dotdash/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dotdash/subscriptions", "organizations_url": "https://api.github.com/users/dotdash/orgs", "repos_url": "https://api.github.com/users/dotdash/repos", "events_url": "https://api.github.com/users/dotdash/events{/privacy}", "received_events_url": "https://api.github.com/users/dotdash/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "36db3866c0c630503fa91d3aab015ee880000afb", "url": "https://api.github.com/repos/rust-lang/rust/commits/36db3866c0c630503fa91d3aab015ee880000afb", "html_url": "https://github.com/rust-lang/rust/commit/36db3866c0c630503fa91d3aab015ee880000afb"}], "stats": {"total": 7, "additions": 3, "deletions": 4}, "files": [{"sha": "193303f4d1cd361e1f3b58ed04e7513fb19eb2ee", "filename": "src/librustc/middle/trans/controlflow.rs", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/6c5d97a5da043c785b2fb38c0fd13c85ab265122/src%2Flibrustc%2Fmiddle%2Ftrans%2Fcontrolflow.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6c5d97a5da043c785b2fb38c0fd13c85ab265122/src%2Flibrustc%2Fmiddle%2Ftrans%2Fcontrolflow.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftrans%2Fcontrolflow.rs?ref=6c5d97a5da043c785b2fb38c0fd13c85ab265122", "patch": "@@ -330,13 +330,12 @@ pub fn trans_for<'a>(\n     // Check the discriminant; if the `None` case, exit the loop.\n     let option_representation = adt::represent_type(loopback_bcx_out.ccx(),\n                                                     method_result_type);\n-    let i8_type = Type::i8(loopback_bcx_out.ccx());\n     let lldiscriminant = adt::trans_get_discr(loopback_bcx_out,\n                                               &*option_representation,\n                                               option_datum.val,\n-                                              Some(i8_type));\n-    let llzero = C_u8(loopback_bcx_out.ccx(), 0);\n-    let llcondition = ICmp(loopback_bcx_out, IntNE, lldiscriminant, llzero);\n+                                              None);\n+    let i1_type = Type::i1(loopback_bcx_out.ccx());\n+    let llcondition = Trunc(loopback_bcx_out, lldiscriminant, i1_type);\n     CondBr(loopback_bcx_out, llcondition, body_bcx_in.llbb, cleanup_llbb);\n \n     // Now we're in the body. Unpack the `Option` value into the programmer-"}]}