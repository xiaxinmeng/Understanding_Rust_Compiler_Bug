{"sha": "f704ef5ff763f090f3ab98a65c160c830f660302", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY3MDRlZjVmZjc2M2YwOTBmM2FiOThhNjVjMTYwYzgzMGY2NjAzMDI=", "commit": {"author": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2017-02-28T21:08:01Z"}, "committer": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2017-02-28T21:08:01Z"}, "message": "simplify check-item-types too", "tree": {"sha": "e05cd9c18f3eefb2df79167724a79c1955097b20", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e05cd9c18f3eefb2df79167724a79c1955097b20"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f704ef5ff763f090f3ab98a65c160c830f660302", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f704ef5ff763f090f3ab98a65c160c830f660302", "html_url": "https://github.com/rust-lang/rust/commit/f704ef5ff763f090f3ab98a65c160c830f660302", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f704ef5ff763f090f3ab98a65c160c830f660302/comments", "author": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "384f044d826f68827802ce6f255a09282e437a09", "url": "https://api.github.com/repos/rust-lang/rust/commits/384f044d826f68827802ce6f255a09282e437a09", "html_url": "https://github.com/rust-lang/rust/commit/384f044d826f68827802ce6f255a09282e437a09"}], "stats": {"total": 35, "additions": 5, "deletions": 30}, "files": [{"sha": "9fa9b1bc5528b5d2c5a65613aa19027d2d2e3e39", "filename": "src/librustc_typeck/check/mod.rs", "status": "modified", "additions": 5, "deletions": 30, "changes": 35, "blob_url": "https://github.com/rust-lang/rust/blob/f704ef5ff763f090f3ab98a65c160c830f660302/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f704ef5ff763f090f3ab98a65c160c830f660302/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs?ref=f704ef5ff763f090f3ab98a65c160c830f660302", "patch": "@@ -118,6 +118,7 @@ use syntax::util::lev_distance::find_best_match_for_name;\n use syntax_pos::{self, BytePos, Span, DUMMY_SP};\n \n use rustc::hir::intravisit::{self, Visitor, NestedVisitorMap};\n+use rustc::hir::itemlikevisit::ItemLikeVisitor;\n use rustc::hir::{self, PatKind};\n use rustc::middle::lang_items;\n use rustc_back::slice;\n@@ -515,37 +516,12 @@ impl<'a, 'gcx, 'tcx> Inherited<'a, 'gcx, 'tcx> {\n \n struct CheckItemTypesVisitor<'a, 'tcx: 'a> { tcx: TyCtxt<'a, 'tcx, 'tcx> }\n \n-impl<'a, 'tcx> Visitor<'tcx> for CheckItemTypesVisitor<'a, 'tcx> {\n-    fn nested_visit_map<'this>(&'this mut self) -> NestedVisitorMap<'this, 'tcx> {\n-        NestedVisitorMap::OnlyBodies(&self.tcx.hir)\n-    }\n-\n+impl<'a, 'tcx> ItemLikeVisitor<'tcx> for CheckItemTypesVisitor<'a, 'tcx> {\n     fn visit_item(&mut self, i: &'tcx hir::Item) {\n         check_item_type(self.tcx, i);\n-        intravisit::walk_item(self, i);\n-    }\n-\n-    fn visit_ty(&mut self, t: &'tcx hir::Ty) {\n-        match t.node {\n-            hir::TyArray(_, length) => {\n-                self.tcx.item_tables(self.tcx.hir.local_def_id(length.node_id));\n-            }\n-            _ => {}\n-        }\n-\n-        intravisit::walk_ty(self, t);\n-    }\n-\n-    fn visit_expr(&mut self, e: &'tcx hir::Expr) {\n-        match e.node {\n-            hir::ExprRepeat(_, count) => {\n-                self.tcx.item_tables(self.tcx.hir.local_def_id(count.node_id));\n-            }\n-            _ => {}\n-        }\n-\n-        intravisit::walk_expr(self, e);\n     }\n+    fn visit_trait_item(&mut self, _: &'tcx hir::TraitItem) { }\n+    fn visit_impl_item(&mut self, _: &'tcx hir::ImplItem) { }\n }\n \n pub fn check_wf_new<'a, 'tcx>(tcx: TyCtxt<'a, 'tcx, 'tcx>) -> CompileResult {\n@@ -557,9 +533,8 @@ pub fn check_wf_new<'a, 'tcx>(tcx: TyCtxt<'a, 'tcx, 'tcx>) -> CompileResult {\n \n pub fn check_item_types<'a, 'tcx>(tcx: TyCtxt<'a, 'tcx, 'tcx>) -> CompileResult {\n     tcx.sess.track_errors(|| {\n-        let mut visit = CheckItemTypesVisitor { tcx: tcx };\n         tcx.visit_all_item_likes_in_krate(DepNode::TypeckItemType,\n-                                              &mut visit.as_deep_visitor());\n+                                          &mut CheckItemTypesVisitor { tcx });\n     })\n }\n "}]}