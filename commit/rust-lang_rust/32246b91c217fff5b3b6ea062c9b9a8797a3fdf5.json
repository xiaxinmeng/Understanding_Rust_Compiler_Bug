{"sha": "32246b91c217fff5b3b6ea062c9b9a8797a3fdf5", "node_id": "MDY6Q29tbWl0NzI0NzEyOjMyMjQ2YjkxYzIxN2ZmZjViM2I2ZWEwNjJjOWI5YTg3OTdhM2ZkZjU=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2020-08-05T16:56:39Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-08-05T16:56:39Z"}, "message": "Merge #5664\n\n5664: Fix renamed self module. r=jonas-schievink a=Nashenas88\n\nFixes #5663 \r\n\r\nNow `inner_mod` below is properly marked as a `module`.\r\n```rust\r\nuse crate::inner::{self as inner_mod};\r\nmod inner {}\r\n```\n\nCo-authored-by: Paul Daniel Faria <Nashenas88@users.noreply.github.com>", "tree": {"sha": "8e4aa127fffdf2c2e3ccd3571c9fe28a1227f59b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8e4aa127fffdf2c2e3ccd3571c9fe28a1227f59b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/32246b91c217fff5b3b6ea062c9b9a8797a3fdf5", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJfKuTHCRBK7hj4Ov3rIwAAdHIIADKZsP+JztmCyKioZUKoQEy2\nSKJ1SJSdmWxNVOC4k3ZjOCnlpYEjTHDwqeaS3dcnPg2xgXJaN6JScmf5X2XweZwh\ndhBVZ5mZv2fBVVVLKpWiQgSi/XRD9LmpZATcq0oR/ru2TBTvq9mnyxdTilJURs6L\nscWf2bIQB14BeBbx8GDRS/1s+p9HCtGbiHT9Pj8Gg69vWF2Aeg1oihvg8YG6ljT5\naQTOn6FUBo1STcQ5qKf8xbDJtpBrrG17MGKbSwaXkrBv8jmqXEeiNWUR8dkheAfD\nvHNRJviJzTDyovsICCpNjEl/kzaRkacAHLjk+74AkjtAiU0yOs2QUXvsAPWYtAQ=\n=XyeW\n-----END PGP SIGNATURE-----\n", "payload": "tree 8e4aa127fffdf2c2e3ccd3571c9fe28a1227f59b\nparent dab810b1e623449cf3e9a422cf49d89cac17507f\nparent 4e2e3543c72b5963eb91b94b8180fecf268930e3\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1596646599 +0000\ncommitter GitHub <noreply@github.com> 1596646599 +0000\n\nMerge #5664\n\n5664: Fix renamed self module. r=jonas-schievink a=Nashenas88\n\nFixes #5663 \r\n\r\nNow `inner_mod` below is properly marked as a `module`.\r\n```rust\r\nuse crate::inner::{self as inner_mod};\r\nmod inner {}\r\n```\n\nCo-authored-by: Paul Daniel Faria <Nashenas88@users.noreply.github.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/32246b91c217fff5b3b6ea062c9b9a8797a3fdf5", "html_url": "https://github.com/rust-lang/rust/commit/32246b91c217fff5b3b6ea062c9b9a8797a3fdf5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/32246b91c217fff5b3b6ea062c9b9a8797a3fdf5/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "dab810b1e623449cf3e9a422cf49d89cac17507f", "url": "https://api.github.com/repos/rust-lang/rust/commits/dab810b1e623449cf3e9a422cf49d89cac17507f", "html_url": "https://github.com/rust-lang/rust/commit/dab810b1e623449cf3e9a422cf49d89cac17507f"}, {"sha": "4e2e3543c72b5963eb91b94b8180fecf268930e3", "url": "https://api.github.com/repos/rust-lang/rust/commits/4e2e3543c72b5963eb91b94b8180fecf268930e3", "html_url": "https://github.com/rust-lang/rust/commit/4e2e3543c72b5963eb91b94b8180fecf268930e3"}], "stats": {"total": 33, "additions": 29, "deletions": 4}, "files": [{"sha": "2deee404ccc408de0d1d6dca0fdc6bf291ff3dc3", "filename": "crates/ra_ide/src/syntax_highlighting/tests.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/32246b91c217fff5b3b6ea062c9b9a8797a3fdf5/crates%2Fra_ide%2Fsrc%2Fsyntax_highlighting%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/32246b91c217fff5b3b6ea062c9b9a8797a3fdf5/crates%2Fra_ide%2Fsrc%2Fsyntax_highlighting%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fsyntax_highlighting%2Ftests.rs?ref=32246b91c217fff5b3b6ea062c9b9a8797a3fdf5", "patch": "@@ -9,6 +9,9 @@ use crate::{mock_analysis::single_file, FileRange, TextRange};\n fn test_highlighting() {\n     check_highlighting(\n         r#\"\n+use inner::{self as inner_mod};\n+mod inner {}\n+\n #[derive(Clone, Debug)]\n struct Foo {\n     pub x: i32,"}, {"sha": "23c25ad8cee616bd5f5e2a46fb7d309dcc456c85", "filename": "crates/ra_ide/test_data/highlighting.html", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/32246b91c217fff5b3b6ea062c9b9a8797a3fdf5/crates%2Fra_ide%2Ftest_data%2Fhighlighting.html", "raw_url": "https://github.com/rust-lang/rust/raw/32246b91c217fff5b3b6ea062c9b9a8797a3fdf5/crates%2Fra_ide%2Ftest_data%2Fhighlighting.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Ftest_data%2Fhighlighting.html?ref=32246b91c217fff5b3b6ea062c9b9a8797a3fdf5", "patch": "@@ -35,7 +35,10 @@\n \n .unresolved_reference { color: #FC5555; text-decoration: wavy underline; }\n </style>\n-<pre><code><span class=\"attribute\">#</span><span class=\"attribute\">[</span><span class=\"function attribute\">derive</span><span class=\"punctuation\">(</span><span class=\"attribute\">Clone</span><span class=\"punctuation\">,</span><span class=\"attribute\"> Debug</span><span class=\"punctuation\">)</span><span class=\"attribute\">]</span>\n+<pre><code><span class=\"keyword\">use</span> <span class=\"module\">inner</span><span class=\"operator\">::</span><span class=\"punctuation\">{</span><span class=\"self_keyword\">self</span> <span class=\"keyword\">as</span> <span class=\"module declaration\">inner_mod</span><span class=\"punctuation\">}</span><span class=\"punctuation\">;</span>\n+<span class=\"keyword\">mod</span> <span class=\"module declaration\">inner</span> <span class=\"punctuation\">{</span><span class=\"punctuation\">}</span>\n+\n+<span class=\"attribute\">#</span><span class=\"attribute\">[</span><span class=\"function attribute\">derive</span><span class=\"punctuation\">(</span><span class=\"attribute\">Clone</span><span class=\"punctuation\">,</span><span class=\"attribute\"> Debug</span><span class=\"punctuation\">)</span><span class=\"attribute\">]</span>\n <span class=\"keyword\">struct</span> <span class=\"struct declaration\">Foo</span> <span class=\"punctuation\">{</span>\n     <span class=\"keyword\">pub</span> <span class=\"field declaration\">x</span><span class=\"punctuation\">:</span> <span class=\"builtin_type\">i32</span><span class=\"punctuation\">,</span>\n     <span class=\"keyword\">pub</span> <span class=\"field declaration\">y</span><span class=\"punctuation\">:</span> <span class=\"builtin_type\">i32</span><span class=\"punctuation\">,</span>"}, {"sha": "b51000b03fb9e16ae1ff103571c709463d88a4d7", "filename": "crates/ra_ide_db/src/defs.rs", "status": "modified", "additions": 22, "deletions": 3, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/32246b91c217fff5b3b6ea062c9b9a8797a3fdf5/crates%2Fra_ide_db%2Fsrc%2Fdefs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/32246b91c217fff5b3b6ea062c9b9a8797a3fdf5/crates%2Fra_ide_db%2Fsrc%2Fdefs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_db%2Fsrc%2Fdefs.rs?ref=32246b91c217fff5b3b6ea062c9b9a8797a3fdf5", "patch": "@@ -12,7 +12,7 @@ use hir::{\n use ra_prof::profile;\n use ra_syntax::{\n     ast::{self, AstNode},\n-    match_ast,\n+    match_ast, SyntaxNode,\n };\n \n use crate::RootDatabase;\n@@ -123,8 +123,27 @@ pub fn classify_name(sema: &Semantics<RootDatabase>, name: &ast::Name) -> Option\n                 let use_tree = it.syntax().parent().and_then(ast::UseTree::cast)?;\n                 let path = use_tree.path()?;\n                 let path_segment = path.segment()?;\n-                let name_ref = path_segment.name_ref()?;\n-                let name_ref_class = classify_name_ref(sema, &name_ref)?;\n+                let name_ref_class = path_segment\n+                    .name_ref()\n+                    // The rename might be from a `self` token, so fallback to the name higher\n+                    // in the use tree.\n+                    .or_else(||{\n+                        if path_segment.self_token().is_none() {\n+                            return None;\n+                        }\n+\n+                        let use_tree = use_tree\n+                            .syntax()\n+                            .parent()\n+                            .as_ref()\n+                            // Skip over UseTreeList\n+                            .and_then(SyntaxNode::parent)\n+                            .and_then(ast::UseTree::cast)?;\n+                        let path = use_tree.path()?;\n+                        let path_segment = path.segment()?;\n+                        path_segment.name_ref()\n+                    })\n+                    .and_then(|name_ref| classify_name_ref(sema, &name_ref))?;\n \n                 Some(NameClass::Definition(name_ref_class.definition()))\n             },"}]}