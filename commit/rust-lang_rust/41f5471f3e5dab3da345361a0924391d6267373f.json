{"sha": "41f5471f3e5dab3da345361a0924391d6267373f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQxZjU0NzFmM2U1ZGFiM2RhMzQ1MzYxYTA5MjQzOTFkNjI2NzM3M2Y=", "commit": {"author": {"name": "Toby Dimmick", "email": "tobydimmick@pm.me", "date": "2020-06-14T21:44:28Z"}, "committer": {"name": "Toby Dimmick", "email": "tobydimmick@pm.me", "date": "2020-06-14T21:44:51Z"}, "message": "fill_match_arms bind pattern implementation", "tree": {"sha": "b61c7af7c41949aa91d803408b97b09972e08001", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b61c7af7c41949aa91d803408b97b09972e08001"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/41f5471f3e5dab3da345361a0924391d6267373f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/41f5471f3e5dab3da345361a0924391d6267373f", "html_url": "https://github.com/rust-lang/rust/commit/41f5471f3e5dab3da345361a0924391d6267373f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/41f5471f3e5dab3da345361a0924391d6267373f/comments", "author": {"login": "tobz1000", "id": 1471978, "node_id": "MDQ6VXNlcjE0NzE5Nzg=", "avatar_url": "https://avatars.githubusercontent.com/u/1471978?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tobz1000", "html_url": "https://github.com/tobz1000", "followers_url": "https://api.github.com/users/tobz1000/followers", "following_url": "https://api.github.com/users/tobz1000/following{/other_user}", "gists_url": "https://api.github.com/users/tobz1000/gists{/gist_id}", "starred_url": "https://api.github.com/users/tobz1000/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tobz1000/subscriptions", "organizations_url": "https://api.github.com/users/tobz1000/orgs", "repos_url": "https://api.github.com/users/tobz1000/repos", "events_url": "https://api.github.com/users/tobz1000/events{/privacy}", "received_events_url": "https://api.github.com/users/tobz1000/received_events", "type": "User", "site_admin": false}, "committer": {"login": "tobz1000", "id": 1471978, "node_id": "MDQ6VXNlcjE0NzE5Nzg=", "avatar_url": "https://avatars.githubusercontent.com/u/1471978?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tobz1000", "html_url": "https://github.com/tobz1000", "followers_url": "https://api.github.com/users/tobz1000/followers", "following_url": "https://api.github.com/users/tobz1000/following{/other_user}", "gists_url": "https://api.github.com/users/tobz1000/gists{/gist_id}", "starred_url": "https://api.github.com/users/tobz1000/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tobz1000/subscriptions", "organizations_url": "https://api.github.com/users/tobz1000/orgs", "repos_url": "https://api.github.com/users/tobz1000/repos", "events_url": "https://api.github.com/users/tobz1000/events{/privacy}", "received_events_url": "https://api.github.com/users/tobz1000/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "34db4edb80ac614f5ca8d4e7bea4b6917368d6d6", "url": "https://api.github.com/repos/rust-lang/rust/commits/34db4edb80ac614f5ca8d4e7bea4b6917368d6d6", "html_url": "https://github.com/rust-lang/rust/commit/34db4edb80ac614f5ca8d4e7bea4b6917368d6d6"}], "stats": {"total": 16, "additions": 14, "deletions": 2}, "files": [{"sha": "569efb76876a7b379c5d23234885599e4787835f", "filename": "crates/ra_assists/src/handlers/fill_match_arms.rs", "status": "modified", "additions": 14, "deletions": 2, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/41f5471f3e5dab3da345361a0924391d6267373f/crates%2Fra_assists%2Fsrc%2Fhandlers%2Ffill_match_arms.rs", "raw_url": "https://github.com/rust-lang/rust/raw/41f5471f3e5dab3da345361a0924391d6267373f/crates%2Fra_assists%2Fsrc%2Fhandlers%2Ffill_match_arms.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_assists%2Fsrc%2Fhandlers%2Ffill_match_arms.rs?ref=41f5471f3e5dab3da345361a0924391d6267373f", "patch": "@@ -136,8 +136,20 @@ fn is_variant_missing(existing_arms: &mut Vec<MatchArm>, var: &Pat) -> bool {\n }\n \n fn does_pat_match_variant(pat: &Pat, var: &Pat) -> bool {\n-    let pat_head = pat.syntax().first_child().map(|node| node.text());\n-    let var_head = var.syntax().first_child().map(|node| node.text());\n+    let first_node_text = |pat: &Pat| pat.syntax().first_child().map(|node| node.text());\n+\n+    let pat_head = match pat {\n+        Pat::BindPat(bind_pat) => {\n+            if let Some(p) = bind_pat.pat() {\n+                first_node_text(&p)\n+            } else {\n+                return false;\n+            }\n+        }\n+        pat => first_node_text(pat),\n+    };\n+\n+    let var_head = first_node_text(var);\n \n     pat_head == var_head\n }"}]}