{"sha": "5d5fb97b6e8085cb920c1c10a9b298c3c7f2a53d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjVkNWZiOTdiNmU4MDg1Y2I5MjBjMWMxMGE5YjI5OGMzYzdmMmE1M2Q=", "commit": {"author": {"name": "Anthony Ramine", "email": "n.oxyde@gmail.com", "date": "2018-04-21T09:24:52Z"}, "committer": {"name": "Anthony Ramine", "email": "n.oxyde@gmail.com", "date": "2018-04-21T10:15:32Z"}, "message": "Remove hack around comparisons of i1 values (fixes #40980)\n\nThe regression test still passes without that 2 years old hack. The underlying\nLLVM bug has probably been fixed upstream since then.", "tree": {"sha": "72436cdd66e8c10ec309f609e190237b28dcc1ff", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/72436cdd66e8c10ec309f609e190237b28dcc1ff"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5d5fb97b6e8085cb920c1c10a9b298c3c7f2a53d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5d5fb97b6e8085cb920c1c10a9b298c3c7f2a53d", "html_url": "https://github.com/rust-lang/rust/commit/5d5fb97b6e8085cb920c1c10a9b298c3c7f2a53d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5d5fb97b6e8085cb920c1c10a9b298c3c7f2a53d/comments", "author": {"login": "nox", "id": 123095, "node_id": "MDQ6VXNlcjEyMzA5NQ==", "avatar_url": "https://avatars.githubusercontent.com/u/123095?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nox", "html_url": "https://github.com/nox", "followers_url": "https://api.github.com/users/nox/followers", "following_url": "https://api.github.com/users/nox/following{/other_user}", "gists_url": "https://api.github.com/users/nox/gists{/gist_id}", "starred_url": "https://api.github.com/users/nox/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nox/subscriptions", "organizations_url": "https://api.github.com/users/nox/orgs", "repos_url": "https://api.github.com/users/nox/repos", "events_url": "https://api.github.com/users/nox/events{/privacy}", "received_events_url": "https://api.github.com/users/nox/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nox", "id": 123095, "node_id": "MDQ6VXNlcjEyMzA5NQ==", "avatar_url": "https://avatars.githubusercontent.com/u/123095?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nox", "html_url": "https://github.com/nox", "followers_url": "https://api.github.com/users/nox/followers", "following_url": "https://api.github.com/users/nox/following{/other_user}", "gists_url": "https://api.github.com/users/nox/gists{/gist_id}", "starred_url": "https://api.github.com/users/nox/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nox/subscriptions", "organizations_url": "https://api.github.com/users/nox/orgs", "repos_url": "https://api.github.com/users/nox/repos", "events_url": "https://api.github.com/users/nox/events{/privacy}", "received_events_url": "https://api.github.com/users/nox/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "65d201f7d682ad921ac6e67ac07f922aa63a8ce4", "url": "https://api.github.com/repos/rust-lang/rust/commits/65d201f7d682ad921ac6e67ac07f922aa63a8ce4", "html_url": "https://github.com/rust-lang/rust/commit/65d201f7d682ad921ac6e67ac07f922aa63a8ce4"}], "stats": {"total": 10, "additions": 0, "deletions": 10}, "files": [{"sha": "8b512ebcb001258a8699ddfee0e444b6a7e9d721", "filename": "src/librustc_trans/mir/rvalue.rs", "status": "modified", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/5d5fb97b6e8085cb920c1c10a9b298c3c7f2a53d/src%2Flibrustc_trans%2Fmir%2Frvalue.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5d5fb97b6e8085cb920c1c10a9b298c3c7f2a53d/src%2Flibrustc_trans%2Fmir%2Frvalue.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Fmir%2Frvalue.rs?ref=5d5fb97b6e8085cb920c1c10a9b298c3c7f2a53d", "patch": "@@ -514,7 +514,6 @@ impl<'a, 'tcx> FunctionCx<'a, 'tcx> {\n         let is_float = input_ty.is_fp();\n         let is_signed = input_ty.is_signed();\n         let is_nil = input_ty.is_nil();\n-        let is_bool = input_ty.is_bool();\n         match op {\n             mir::BinOp::Add => if is_float {\n                 bx.fadd(lhs, rhs)\n@@ -564,15 +563,6 @@ impl<'a, 'tcx> FunctionCx<'a, 'tcx> {\n                     lhs, rhs\n                 )\n             } else {\n-                let (lhs, rhs) = if is_bool {\n-                    // FIXME(#36856) -- extend the bools into `i8` because\n-                    // LLVM's i1 comparisons are broken.\n-                    (bx.zext(lhs, Type::i8(bx.cx)),\n-                     bx.zext(rhs, Type::i8(bx.cx)))\n-                } else {\n-                    (lhs, rhs)\n-                };\n-\n                 bx.icmp(\n                     base::bin_op_to_icmp_predicate(op.to_hir_binop(), is_signed),\n                     lhs, rhs"}]}