{"sha": "be73cc8f8354c797fd6159b0d5d61fd56ecdc4a7", "node_id": "C_kwDOAAsO6NoAKGJlNzNjYzhmODM1NGM3OTdmZDYxNTliMGQ1ZDYxZmQ1NmVjZGM0YTc", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2021-10-10T11:28:04Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2021-10-10T11:28:04Z"}, "message": "move test", "tree": {"sha": "7f518c485c641463edc2b5ebe86bfb3a372d6cc9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7f518c485c641463edc2b5ebe86bfb3a372d6cc9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/be73cc8f8354c797fd6159b0d5d61fd56ecdc4a7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/be73cc8f8354c797fd6159b0d5d61fd56ecdc4a7", "html_url": "https://github.com/rust-lang/rust/commit/be73cc8f8354c797fd6159b0d5d61fd56ecdc4a7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/be73cc8f8354c797fd6159b0d5d61fd56ecdc4a7/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "af76db3c3663e517a3e8e2c05bee494453bf9877", "url": "https://api.github.com/repos/rust-lang/rust/commits/af76db3c3663e517a3e8e2c05bee494453bf9877", "html_url": "https://github.com/rust-lang/rust/commit/af76db3c3663e517a3e8e2c05bee494453bf9877"}], "stats": {"total": 136, "additions": 88, "deletions": 48}, "files": [{"sha": "5f650d458a43f2d732ac724cd46b21eb28a74439", "filename": "crates/hir_def/src/macro_expansion_tests/mbe/regression.rs", "status": "modified", "additions": 88, "deletions": 0, "changes": 88, "blob_url": "https://github.com/rust-lang/rust/blob/be73cc8f8354c797fd6159b0d5d61fd56ecdc4a7/crates%2Fhir_def%2Fsrc%2Fmacro_expansion_tests%2Fmbe%2Fregression.rs", "raw_url": "https://github.com/rust-lang/rust/raw/be73cc8f8354c797fd6159b0d5d61fd56ecdc4a7/crates%2Fhir_def%2Fsrc%2Fmacro_expansion_tests%2Fmbe%2Fregression.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_def%2Fsrc%2Fmacro_expansion_tests%2Fmbe%2Fregression.rs?ref=be73cc8f8354c797fd6159b0d5d61fd56ecdc4a7", "patch": "@@ -640,3 +640,91 @@ quick_error!(ENUMINITION[enum Wrapped#[derive(Debug)]]body[]queue[ = > One: UNIT\n \"##]],\n     )\n }\n+\n+#[test]\n+fn test_empty_repeat_vars_in_empty_repeat_vars() {\n+    check(\n+        r#\"\n+macro_rules! delegate_impl {\n+    ([$self_type:ident, $self_wrap:ty, $self_map:ident]\n+     pub trait $name:ident $(: $sup:ident)* $(+ $more_sup:ident)* {\n+\n+        $(\n+        @escape [type $assoc_name_ext:ident]\n+        )*\n+        $(\n+        @section type\n+        $(\n+            $(#[$_assoc_attr:meta])*\n+            type $assoc_name:ident $(: $assoc_bound:ty)*;\n+        )+\n+        )*\n+        $(\n+        @section self\n+        $(\n+            $(#[$_method_attr:meta])*\n+            fn $method_name:ident(self $(: $self_selftype:ty)* $(,$marg:ident : $marg_ty:ty)*) -> $mret:ty;\n+        )+\n+        )*\n+        $(\n+        @section nodelegate\n+        $($tail:tt)*\n+        )*\n+    }) => {\n+        impl<> $name for $self_wrap where $self_type: $name {\n+            $(\n+            $(\n+                fn $method_name(self $(: $self_selftype)* $(,$marg: $marg_ty)*) -> $mret {\n+                    $self_map!(self).$method_name($($marg),*)\n+                }\n+            )*\n+            )*\n+        }\n+    }\n+}\n+delegate_impl ! {\n+    [G, &'a mut G, deref] pub trait Data: GraphBase {@section type type NodeWeight;}\n+}\n+\"#,\n+        expect![[r##\"\n+macro_rules! delegate_impl {\n+    ([$self_type:ident, $self_wrap:ty, $self_map:ident]\n+     pub trait $name:ident $(: $sup:ident)* $(+ $more_sup:ident)* {\n+\n+        $(\n+        @escape [type $assoc_name_ext:ident]\n+        )*\n+        $(\n+        @section type\n+        $(\n+            $(#[$_assoc_attr:meta])*\n+            type $assoc_name:ident $(: $assoc_bound:ty)*;\n+        )+\n+        )*\n+        $(\n+        @section self\n+        $(\n+            $(#[$_method_attr:meta])*\n+            fn $method_name:ident(self $(: $self_selftype:ty)* $(,$marg:ident : $marg_ty:ty)*) -> $mret:ty;\n+        )+\n+        )*\n+        $(\n+        @section nodelegate\n+        $($tail:tt)*\n+        )*\n+    }) => {\n+        impl<> $name for $self_wrap where $self_type: $name {\n+            $(\n+            $(\n+                fn $method_name(self $(: $self_selftype)* $(,$marg: $marg_ty)*) -> $mret {\n+                    $self_map!(self).$method_name($($marg),*)\n+                }\n+            )*\n+            )*\n+        }\n+    }\n+}\n+impl <> Data for & 'amut G where G: Data {}\n+\"##]],\n+    );\n+}"}, {"sha": "6c2e91668ef1906048dd0932a987647a5ea3eb53", "filename": "crates/mbe/src/tests/expand.rs", "status": "modified", "additions": 0, "deletions": 48, "changes": 48, "blob_url": "https://github.com/rust-lang/rust/blob/be73cc8f8354c797fd6159b0d5d61fd56ecdc4a7/crates%2Fmbe%2Fsrc%2Ftests%2Fexpand.rs", "raw_url": "https://github.com/rust-lang/rust/raw/be73cc8f8354c797fd6159b0d5d61fd56ecdc4a7/crates%2Fmbe%2Fsrc%2Ftests%2Fexpand.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fmbe%2Fsrc%2Ftests%2Fexpand.rs?ref=be73cc8f8354c797fd6159b0d5d61fd56ecdc4a7", "patch": "@@ -98,54 +98,6 @@ fn test_attr_to_token_tree() {\n     );\n }\n \n-#[test]\n-fn test_empty_repeat_vars_in_empty_repeat_vars() {\n-    parse_macro(\n-        r#\"\n-macro_rules! delegate_impl {\n-    ([$self_type:ident, $self_wrap:ty, $self_map:ident]\n-     pub trait $name:ident $(: $sup:ident)* $(+ $more_sup:ident)* {\n-\n-        $(\n-        @escape [type $assoc_name_ext:ident]\n-        )*\n-        $(\n-        @section type\n-        $(\n-            $(#[$_assoc_attr:meta])*\n-            type $assoc_name:ident $(: $assoc_bound:ty)*;\n-        )+\n-        )*\n-        $(\n-        @section self\n-        $(\n-            $(#[$_method_attr:meta])*\n-            fn $method_name:ident(self $(: $self_selftype:ty)* $(,$marg:ident : $marg_ty:ty)*) -> $mret:ty;\n-        )+\n-        )*\n-        $(\n-        @section nodelegate\n-        $($tail:tt)*\n-        )*\n-    }) => {\n-        impl<> $name for $self_wrap where $self_type: $name {\n-            $(\n-            $(\n-                fn $method_name(self $(: $self_selftype)* $(,$marg: $marg_ty)*) -> $mret {\n-                    $self_map!(self).$method_name($($marg),*)\n-                }\n-            )*\n-            )*\n-        }\n-    }\n-}\n-\"#,\n-    ).assert_expand_items(\n-        r#\"delegate_impl ! {[G , & 'a mut G , deref] pub trait Data : GraphBase {@ section type type NodeWeight ;}}\"#,\n-        \"impl <> Data for & \\'a mut G where G : Data {}\",\n-    );\n-}\n-\n #[test]\n fn expr_interpolation() {\n     let expanded = parse_macro("}]}