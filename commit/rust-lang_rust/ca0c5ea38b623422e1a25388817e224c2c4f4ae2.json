{"sha": "ca0c5ea38b623422e1a25388817e224c2c4f4ae2", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNhMGM1ZWEzOGI2MjM0MjJlMWEyNTM4ODgxN2UyMjRjMmM0ZjRhZTI=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2018-01-12T17:32:37Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2018-01-12T17:32:37Z"}, "message": "Support tree rebalancing", "tree": {"sha": "f4b3c05e35020ff6dcd3cef7fbf890bbce03c9e5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f4b3c05e35020ff6dcd3cef7fbf890bbce03c9e5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ca0c5ea38b623422e1a25388817e224c2c4f4ae2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ca0c5ea38b623422e1a25388817e224c2c4f4ae2", "html_url": "https://github.com/rust-lang/rust/commit/ca0c5ea38b623422e1a25388817e224c2c4f4ae2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ca0c5ea38b623422e1a25388817e224c2c4f4ae2/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "15ae9026cf270d898cad16678032a5460e77404c", "url": "https://api.github.com/repos/rust-lang/rust/commits/15ae9026cf270d898cad16678032a5460e77404c", "html_url": "https://github.com/rust-lang/rust/commit/15ae9026cf270d898cad16678032a5460e77404c"}], "stats": {"total": 115, "additions": 86, "deletions": 29}, "files": [{"sha": "725f04d1e5ab61d10c4ffd33d3576502c43f44a6", "filename": "src/parser/event_parser/grammar/items.rs", "status": "modified", "additions": 9, "deletions": 2, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/ca0c5ea38b623422e1a25388817e224c2c4f4ae2/src%2Fparser%2Fevent_parser%2Fgrammar%2Fitems.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca0c5ea38b623422e1a25388817e224c2c4f4ae2/src%2Fparser%2Fevent_parser%2Fgrammar%2Fitems.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fparser%2Fevent_parser%2Fgrammar%2Fitems.rs?ref=ca0c5ea38b623422e1a25388817e224c2c4f4ae2", "patch": "@@ -32,6 +32,7 @@ fn mod_contents_item(p: &mut Parser) {\n }\n \n fn item(p: &mut Parser) -> bool {\n+    let attrs_start = p.mark();\n     attributes::outer_attributes(p);\n     visibility(p);\n     //    node_if(p, USE_KW, USE_ITEM, use_item)\n@@ -41,11 +42,17 @@ fn item(p: &mut Parser) -> bool {\n     // || unsafe trait, impl\n     // || node_if(p, FN_KW, FN_ITEM, fn_item)\n     // || node_if(p, TYPE_KW, TYPE_ITEM, type_item)\n-    node_if(p, [EXTERN_KW, CRATE_KW], EXTERN_CRATE_ITEM, extern_crate_item)\n+    let item_start = p.mark();\n+    let item_parsed = node_if(p, [EXTERN_KW, CRATE_KW], EXTERN_CRATE_ITEM, extern_crate_item)\n         || node_if(p, MOD_KW, MOD_ITEM, mod_item)\n         || node_if(p, USE_KW, USE_ITEM, use_item)\n         || node_if(p, STRUCT_KW, STRUCT_ITEM, struct_item)\n-        || node_if(p, FN_KW, FN_ITEM, fn_item)\n+        || node_if(p, FN_KW, FN_ITEM, fn_item);\n+\n+    if item_parsed && attrs_start != item_start {\n+        p.forward_parent(attrs_start, item_start);\n+    }\n+    item_parsed\n }\n \n fn struct_item(p: &mut Parser) {"}, {"sha": "c89a3ebe75d9d6dd2b53c79c99a0a44eac0f5de8", "filename": "src/parser/event_parser/mod.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/ca0c5ea38b623422e1a25388817e224c2c4f4ae2/src%2Fparser%2Fevent_parser%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca0c5ea38b623422e1a25388817e224c2c4f4ae2/src%2Fparser%2Fevent_parser%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fparser%2Fevent_parser%2Fmod.rs?ref=ca0c5ea38b623422e1a25388817e224c2c4f4ae2", "patch": "@@ -5,7 +5,10 @@ mod parser;\n \n #[derive(Debug)]\n pub(crate) enum Event {\n-    Start { kind: SyntaxKind },\n+    Start {\n+        kind: SyntaxKind,\n+        forward_parent: Option<u32>,\n+    },\n     Finish,\n     Token {\n         kind: SyntaxKind,"}, {"sha": "14c0efe2d5f4d619df6841743f473be6b971340f", "filename": "src/parser/event_parser/parser.rs", "status": "modified", "additions": 19, "deletions": 1, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/ca0c5ea38b623422e1a25388817e224c2c4f4ae2/src%2Fparser%2Fevent_parser%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca0c5ea38b623422e1a25388817e224c2c4f4ae2/src%2Fparser%2Fevent_parser%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fparser%2Fevent_parser%2Fparser.rs?ref=ca0c5ea38b623422e1a25388817e224c2c4f4ae2", "patch": "@@ -22,6 +22,9 @@ pub(crate) struct Parser<'t> {\n #[derive(Debug, Clone, Copy,PartialEq, Eq)]\n pub(crate) struct Pos(u32);\n \n+#[derive(Debug, Clone, Copy,PartialEq, Eq)]\n+pub(crate) struct Mark(u32);\n+\n impl<'t> Parser<'t> {\n     pub(crate) fn new(text: &'t str, raw_tokens: &'t [Token]) -> Parser<'t> {\n         let mut tokens = Vec::new();\n@@ -47,6 +50,21 @@ impl<'t> Parser<'t> {\n         }\n     }\n \n+    pub(crate) fn mark(&self) -> Mark {\n+        Mark(self.events.len() as u32)\n+    }\n+\n+    pub(crate) fn forward_parent(&mut self, child: Mark, parent: Mark) {\n+        assert!(child.0 < parent.0);\n+        let diff = parent.0 - child.0;\n+        match self.events[child.0 as usize] {\n+            Event::Start { ref mut forward_parent, .. } => {\n+                *forward_parent = Some(diff);\n+            }\n+            _ => unreachable!()\n+        }\n+    }\n+\n     pub(crate) fn pos(&self) -> Pos {\n         Pos(self.pos as u32)\n     }\n@@ -71,7 +89,7 @@ impl<'t> Parser<'t> {\n     }\n \n     pub(crate) fn start(&mut self, kind: SyntaxKind) {\n-        self.event(Event::Start { kind });\n+        self.event(Event::Start { kind, forward_parent: None });\n     }\n \n     pub(crate) fn finish(&mut self) {"}, {"sha": "c08d32d08c3fe9816c73768c4f67439a44fd8521", "filename": "src/parser/mod.rs", "status": "modified", "additions": 35, "deletions": 6, "changes": 41, "blob_url": "https://github.com/rust-lang/rust/blob/ca0c5ea38b623422e1a25388817e224c2c4f4ae2/src%2Fparser%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca0c5ea38b623422e1a25388817e224c2c4f4ae2/src%2Fparser%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fparser%2Fmod.rs?ref=ca0c5ea38b623422e1a25388817e224c2c4f4ae2", "patch": "@@ -18,10 +18,39 @@ fn from_events_to_file(\n ) -> File {\n     let mut builder = FileBuilder::new(text);\n     let mut idx = 0;\n-    for event in events {\n+\n+    let mut holes = Vec::new();\n+    let mut forward_parents = Vec::new();\n+\n+    for (i, event) in events.iter().enumerate() {\n+        if holes.last() == Some(&i) {\n+            holes.pop();\n+            continue\n+        }\n+\n         match event {\n-            Event::Start { kind } => builder.start_internal(kind),\n-            Event::Finish => {\n+            &Event::Start { kind, forward_parent } => {\n+                forward_parents.clear();\n+                let mut idx = i;\n+                loop {\n+                    let (kind, fwd) = match events[idx] {\n+                        Event::Start { kind, forward_parent } => (kind, forward_parent),\n+                        _ => unreachable!(),\n+                    };\n+                    forward_parents.push((idx, kind));\n+                    if let Some(fwd) = fwd {\n+                        idx += fwd as usize;\n+                    } else {\n+                        break;\n+                    }\n+                }\n+                for &(idx, kind) in forward_parents.iter().into_iter().rev() {\n+                    builder.start_internal(kind);\n+                    holes.push(idx);\n+                }\n+                holes.pop();\n+            }\n+            &Event::Finish => {\n                 while idx < tokens.len() {\n                     let token = tokens[idx];\n                     if is_insignificant(token.kind) {\n@@ -33,7 +62,7 @@ fn from_events_to_file(\n                 }\n                 builder.finish_internal()\n             },\n-            Event::Token { kind, mut n_raw_tokens } => loop {\n+            &Event::Token { kind, mut n_raw_tokens } => loop {\n                 let token = tokens[idx];\n                 if !is_insignificant(token.kind) {\n                     n_raw_tokens -= 1;\n@@ -44,8 +73,8 @@ fn from_events_to_file(\n                     break;\n                 }\n             },\n-            Event::Error { message } => builder.error().message(message).emit(),\n-\n+            &Event::Error { ref message } =>\n+                builder.error().message(message.clone()).emit(),\n         }\n     }\n     builder.finish()"}, {"sha": "0f69b1f6687a0ac854294aa2b3c3f94bde7bd6d1", "filename": "tests/data/parser/ok/0011_outer_attribute.txt", "status": "modified", "additions": 19, "deletions": 19, "changes": 38, "blob_url": "https://github.com/rust-lang/rust/blob/ca0c5ea38b623422e1a25388817e224c2c4f4ae2/tests%2Fdata%2Fparser%2Fok%2F0011_outer_attribute.txt", "raw_url": "https://github.com/rust-lang/rust/raw/ca0c5ea38b623422e1a25388817e224c2c4f4ae2/tests%2Fdata%2Fparser%2Fok%2F0011_outer_attribute.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fdata%2Fparser%2Fok%2F0011_outer_attribute.txt?ref=ca0c5ea38b623422e1a25388817e224c2c4f4ae2", "patch": "@@ -1,23 +1,23 @@\n FILE@[0; 35)\n-  ATTR@[0; 13)\n-    POUND@[0; 1)\n-    L_BRACK@[1; 2)\n-    META_ITEM@[2; 11)\n-      IDENT@[2; 5)\n-      L_PAREN@[5; 6)\n-      META_ITEM@[6; 10)\n-        IDENT@[6; 10)\n-      R_PAREN@[10; 11)\n-    R_BRACK@[11; 12)\n-    WHITESPACE@[12; 13)\n-  ATTR@[13; 23)\n-    POUND@[13; 14)\n-    L_BRACK@[14; 15)\n-    META_ITEM@[15; 21)\n-      IDENT@[15; 21)\n-    R_BRACK@[21; 22)\n-    WHITESPACE@[22; 23)\n-  FN_ITEM@[23; 35)\n+  FN_ITEM@[0; 35)\n+    ATTR@[0; 13)\n+      POUND@[0; 1)\n+      L_BRACK@[1; 2)\n+      META_ITEM@[2; 11)\n+        IDENT@[2; 5)\n+        L_PAREN@[5; 6)\n+        META_ITEM@[6; 10)\n+          IDENT@[6; 10)\n+        R_PAREN@[10; 11)\n+      R_BRACK@[11; 12)\n+      WHITESPACE@[12; 13)\n+    ATTR@[13; 23)\n+      POUND@[13; 14)\n+      L_BRACK@[14; 15)\n+      META_ITEM@[15; 21)\n+        IDENT@[15; 21)\n+      R_BRACK@[21; 22)\n+      WHITESPACE@[22; 23)\n     FN_KW@[23; 25)\n     WHITESPACE@[25; 26)\n     IDENT@[26; 29)"}]}