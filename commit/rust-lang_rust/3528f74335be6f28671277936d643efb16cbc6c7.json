{"sha": "3528f74335be6f28671277936d643efb16cbc6c7", "node_id": "MDY6Q29tbWl0NzI0NzEyOjM1MjhmNzQzMzViZTZmMjg2NzEyNzc5MzZkNjQzZWZiMTZjYmM2Yzc=", "commit": {"author": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2013-12-21T03:50:13Z"}, "committer": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2013-12-26T23:54:29Z"}, "message": "librustc: De-`@mut` `CStore::used_crate_sources`", "tree": {"sha": "77bd981e037087d718bfc0c7e76a42f09f81d962", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/77bd981e037087d718bfc0c7e76a42f09f81d962"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3528f74335be6f28671277936d643efb16cbc6c7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3528f74335be6f28671277936d643efb16cbc6c7", "html_url": "https://github.com/rust-lang/rust/commit/3528f74335be6f28671277936d643efb16cbc6c7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3528f74335be6f28671277936d643efb16cbc6c7/comments", "author": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "978b6bf5a1b4b74e9c89e6db753823f9a7cb7f57", "url": "https://api.github.com/repos/rust-lang/rust/commits/978b6bf5a1b4b74e9c89e6db753823f9a7cb7f57", "html_url": "https://github.com/rust-lang/rust/commit/978b6bf5a1b4b74e9c89e6db753823f9a7cb7f57"}], "stats": {"total": 17, "additions": 8, "deletions": 9}, "files": [{"sha": "adf25219acafe0922324cb0253717bc09923774e", "filename": "src/librustc/metadata/cstore.rs", "status": "modified", "additions": 8, "deletions": 9, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/3528f74335be6f28671277936d643efb16cbc6c7/src%2Flibrustc%2Fmetadata%2Fcstore.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3528f74335be6f28671277936d643efb16cbc6c7/src%2Flibrustc%2Fmetadata%2Fcstore.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmetadata%2Fcstore.rs?ref=3528f74335be6f28671277936d643efb16cbc6c7", "patch": "@@ -63,7 +63,7 @@ pub struct CrateSource {\n pub struct CStore {\n     priv metas: RefCell<HashMap<ast::CrateNum, @crate_metadata>>,\n     priv extern_mod_crate_map: RefCell<extern_mod_crate_map>,\n-    priv used_crate_sources: ~[CrateSource],\n+    priv used_crate_sources: RefCell<~[CrateSource]>,\n     priv used_libraries: ~[(~str, NativeLibaryKind)],\n     priv used_link_args: ~[~str],\n     intr: @ident_interner\n@@ -77,7 +77,7 @@ impl CStore {\n         CStore {\n             metas: RefCell::new(HashMap::new()),\n             extern_mod_crate_map: RefCell::new(HashMap::new()),\n-            used_crate_sources: ~[],\n+            used_crate_sources: RefCell::new(~[]),\n             used_libraries: ~[],\n             used_link_args: ~[],\n             intr: intr\n@@ -117,18 +117,17 @@ impl CStore {\n     }\n \n     pub fn add_used_crate_source(&mut self, src: CrateSource) {\n-        if !self.used_crate_sources.contains(&src) {\n-            self.used_crate_sources.push(src);\n+        let mut used_crate_sources = self.used_crate_sources.borrow_mut();\n+        if !used_crate_sources.get().contains(&src) {\n+            used_crate_sources.get().push(src);\n         }\n     }\n \n-    pub fn get_used_crate_sources<'a>(&'a self) -> &'a [CrateSource] {\n-        self.used_crate_sources.as_slice()\n-    }\n-\n     pub fn get_used_crates(&self, prefer: LinkagePreference)\n                            -> ~[(ast::CrateNum, Option<Path>)] {\n-        self.used_crate_sources.iter()\n+        let used_crate_sources = self.used_crate_sources.borrow();\n+        used_crate_sources.get()\n+            .iter()\n             .map(|src| (src.cnum, match prefer {\n                 RequireDynamic => src.dylib.clone(),\n                 RequireStatic => src.rlib.clone(),"}]}