{"sha": "fcce5fa6e7ba67db63674dc7369125875c7f39a2", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZjY2U1ZmE2ZTdiYTY3ZGI2MzY3NGRjNzM2OTEyNTg3NWM3ZjM5YTI=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-12-31T08:11:59Z"}, "committer": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2020-02-13T10:25:33Z"}, "message": "expand: simplify classify_*", "tree": {"sha": "48f9d57e006e223c9a062b294a5b35b44aaf4d38", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/48f9d57e006e223c9a062b294a5b35b44aaf4d38"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/fcce5fa6e7ba67db63674dc7369125875c7f39a2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/fcce5fa6e7ba67db63674dc7369125875c7f39a2", "html_url": "https://github.com/rust-lang/rust/commit/fcce5fa6e7ba67db63674dc7369125875c7f39a2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/fcce5fa6e7ba67db63674dc7369125875c7f39a2/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7518492315346ac3821ad9264e08721a571742c8", "url": "https://api.github.com/repos/rust-lang/rust/commits/7518492315346ac3821ad9264e08721a571742c8", "html_url": "https://github.com/rust-lang/rust/commit/7518492315346ac3821ad9264e08721a571742c8"}], "stats": {"total": 13, "additions": 5, "deletions": 8}, "files": [{"sha": "91195d379d71c2b422c7c24e8f30e623103a3b8b", "filename": "src/librustc_expand/expand.rs", "status": "modified", "additions": 5, "deletions": 8, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/fcce5fa6e7ba67db63674dc7369125875c7f39a2/src%2Flibrustc_expand%2Fexpand.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fcce5fa6e7ba67db63674dc7369125875c7f39a2/src%2Flibrustc_expand%2Fexpand.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_expand%2Fexpand.rs?ref=fcce5fa6e7ba67db63674dc7369125875c7f39a2", "patch": "@@ -1041,13 +1041,10 @@ impl<'a, 'b> InvocationCollector<'a, 'b> {\n     }\n \n     /// If `item` is an attr invocation, remove and return the macro attribute and derive traits.\n-    fn classify_item<T>(\n+    fn classify_item(\n         &mut self,\n-        item: &mut T,\n-    ) -> (Option<ast::Attribute>, Vec<Path>, /* after_derive */ bool)\n-    where\n-        T: HasAttrs,\n-    {\n+        item: &mut impl HasAttrs,\n+    ) -> (Option<ast::Attribute>, Vec<Path>, /* after_derive */ bool) {\n         let (mut attr, mut traits, mut after_derive) = (None, Vec::new(), false);\n \n         item.visit_attrs(|mut attrs| {\n@@ -1061,9 +1058,9 @@ impl<'a, 'b> InvocationCollector<'a, 'b> {\n     /// Alternative to `classify_item()` that ignores `#[derive]` so invocations fallthrough\n     /// to the unused-attributes lint (making it an error on statements and expressions\n     /// is a breaking change)\n-    fn classify_nonitem<T: HasAttrs>(\n+    fn classify_nonitem(\n         &mut self,\n-        nonitem: &mut T,\n+        nonitem: &mut impl HasAttrs,\n     ) -> (Option<ast::Attribute>, /* after_derive */ bool) {\n         let (mut attr, mut after_derive) = (None, false);\n "}]}