{"sha": "4c58535d09d1261d21569df0036b974811544256", "node_id": "MDY6Q29tbWl0NzI0NzEyOjRjNTg1MzVkMDlkMTI2MWQyMTU2OWRmMDAzNmI5NzQ4MTE1NDQyNTY=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2019-08-26T00:27:17Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2019-08-26T00:27:17Z"}, "message": "Auto merge of #62603 - cuviper:no-unwind-abort, r=joshtriplett\n\nPermit unwinding through FFI by default\n\nThis repeats #62505 for master (Rust 1.38+), as #58794 is not yet resolved. This is a stopgap until a stable alternative is available, like [RFC 2699](https://github.com/rust-lang/rfcs/pull/2699), as long as progress is being made to that end.\n\nr? @joshtriplett", "tree": {"sha": "f2c4c4711a9538b69084304850d0e34ed62f87dc", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f2c4c4711a9538b69084304850d0e34ed62f87dc"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4c58535d09d1261d21569df0036b974811544256", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4c58535d09d1261d21569df0036b974811544256", "html_url": "https://github.com/rust-lang/rust/commit/4c58535d09d1261d21569df0036b974811544256", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4c58535d09d1261d21569df0036b974811544256/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "521d78407471cb78e9bbf47160f6aa23047ac499", "url": "https://api.github.com/repos/rust-lang/rust/commits/521d78407471cb78e9bbf47160f6aa23047ac499", "html_url": "https://github.com/rust-lang/rust/commit/521d78407471cb78e9bbf47160f6aa23047ac499"}, {"sha": "367b793790d7f362fa41313143e1015607b21700", "url": "https://api.github.com/repos/rust-lang/rust/commits/367b793790d7f362fa41313143e1015607b21700", "html_url": "https://github.com/rust-lang/rust/commit/367b793790d7f362fa41313143e1015607b21700"}], "stats": {"total": 14, "additions": 11, "deletions": 3}, "files": [{"sha": "6a3bb8b8b86a2632744c00b6dd4b89547996b8f4", "filename": "src/librustc_mir/build/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4c58535d09d1261d21569df0036b974811544256/src%2Flibrustc_mir%2Fbuild%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4c58535d09d1261d21569df0036b974811544256/src%2Flibrustc_mir%2Fbuild%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fbuild%2Fmod.rs?ref=4c58535d09d1261d21569df0036b974811544256", "patch": "@@ -502,7 +502,7 @@ fn should_abort_on_panic(tcx: TyCtxt<'_>, fn_def_id: DefId, abi: Abi) -> bool {\n     // This is a special case: some functions have a C abi but are meant to\n     // unwind anyway. Don't stop them.\n     match unwind_attr {\n-        None => true,\n+        None => false, // FIXME(#58794)\n         Some(UnwindAttr::Allowed) => false,\n         Some(UnwindAttr::Aborts) => true,\n     }"}, {"sha": "bb90a9653f5734fd98e4d07dea326f6a4a979082", "filename": "src/test/codegen/c-variadic.rs", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/4c58535d09d1261d21569df0036b974811544256/src%2Ftest%2Fcodegen%2Fc-variadic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4c58535d09d1261d21569df0036b974811544256/src%2Ftest%2Fcodegen%2Fc-variadic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcodegen%2Fc-variadic.rs?ref=4c58535d09d1261d21569df0036b974811544256", "patch": "@@ -2,6 +2,7 @@\n \n #![crate_type = \"lib\"]\n #![feature(c_variadic)]\n+#![feature(unwind_attributes)]\n #![no_std]\n use core::ffi::VaList;\n \n@@ -10,6 +11,7 @@ extern \"C\" {\n     fn foreign_c_variadic_1(_: VaList, ...);\n }\n \n+#[unwind(aborts)] // FIXME(#58794)\n pub unsafe extern \"C\" fn use_foreign_c_variadic_0() {\n     // Ensure that we correctly call foreign C-variadic functions.\n     // CHECK: invoke void (i32, ...) @foreign_c_variadic_0(i32 0)\n@@ -24,20 +26,24 @@ pub unsafe extern \"C\" fn use_foreign_c_variadic_0() {\n \n // Ensure that we do not remove the `va_list` passed to the foreign function when\n // removing the \"spoofed\" `VaListImpl` that is used by Rust defined C-variadics.\n+#[unwind(aborts)] // FIXME(#58794)\n pub unsafe extern \"C\" fn use_foreign_c_variadic_1_0(ap: VaList) {\n     // CHECK: invoke void ({{.*}}*, ...) @foreign_c_variadic_1({{.*}} %ap)\n     foreign_c_variadic_1(ap);\n }\n \n+#[unwind(aborts)] // FIXME(#58794)\n pub unsafe extern \"C\" fn use_foreign_c_variadic_1_1(ap: VaList) {\n     // CHECK: invoke void ({{.*}}*, ...) @foreign_c_variadic_1({{.*}} %ap, i32 42)\n     foreign_c_variadic_1(ap, 42i32);\n }\n+#[unwind(aborts)] // FIXME(#58794)\n pub unsafe extern \"C\" fn use_foreign_c_variadic_1_2(ap: VaList) {\n     // CHECK: invoke void ({{.*}}*, ...) @foreign_c_variadic_1({{.*}} %ap, i32 2, i32 42)\n     foreign_c_variadic_1(ap, 2i32, 42i32);\n }\n \n+#[unwind(aborts)] // FIXME(#58794)\n pub unsafe extern \"C\" fn use_foreign_c_variadic_1_3(ap: VaList) {\n     // CHECK: invoke void ({{.*}}*, ...) @foreign_c_variadic_1({{.*}} %ap, i32 2, i32 42, i32 0)\n     foreign_c_variadic_1(ap, 2i32, 42i32, 0i32);"}, {"sha": "4515e36166eb8e7b9b02895be4061c824edbba3d", "filename": "src/test/incremental/hashes/function_interfaces.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4c58535d09d1261d21569df0036b974811544256/src%2Ftest%2Fincremental%2Fhashes%2Ffunction_interfaces.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4c58535d09d1261d21569df0036b974811544256/src%2Ftest%2Fincremental%2Fhashes%2Ffunction_interfaces.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fincremental%2Fhashes%2Ffunction_interfaces.rs?ref=4c58535d09d1261d21569df0036b974811544256", "patch": "@@ -94,7 +94,7 @@ pub unsafe fn make_unsafe() {}\n pub fn make_extern() {}\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(cfg = \"cfail2\", except = \"Hir, HirBody, mir_built, typeck_tables_of, fn_sig\")]\n+#[rustc_clean(cfg = \"cfail2\", except = \"Hir, HirBody, typeck_tables_of, fn_sig\")]\n #[rustc_clean(cfg = \"cfail3\")]\n pub extern \"C\" fn make_extern() {}\n "}, {"sha": "538fd2c29203bbbb692b6e9cc17abbce70ef755a", "filename": "src/test/incremental/hashes/inherent_impls.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4c58535d09d1261d21569df0036b974811544256/src%2Ftest%2Fincremental%2Fhashes%2Finherent_impls.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4c58535d09d1261d21569df0036b974811544256/src%2Ftest%2Fincremental%2Fhashes%2Finherent_impls.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fincremental%2Fhashes%2Finherent_impls.rs?ref=4c58535d09d1261d21569df0036b974811544256", "patch": "@@ -263,7 +263,7 @@ impl Foo {\n #[rustc_clean(cfg=\"cfail2\")]\n #[rustc_clean(cfg=\"cfail3\")]\n impl Foo {\n-    #[rustc_clean(cfg=\"cfail2\", except=\"Hir,HirBody,mir_built,fn_sig,typeck_tables_of\")]\n+    #[rustc_clean(cfg=\"cfail2\", except=\"Hir,HirBody,fn_sig,typeck_tables_of\")]\n     #[rustc_clean(cfg=\"cfail3\")]\n     pub extern fn make_method_extern(&self) { }\n }"}, {"sha": "2f08730ec6132e301c4f36c6448d398dc61daa77", "filename": "src/test/ui/abi/abort-on-c-abi.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4c58535d09d1261d21569df0036b974811544256/src%2Ftest%2Fui%2Fabi%2Fabort-on-c-abi.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4c58535d09d1261d21569df0036b974811544256/src%2Ftest%2Fui%2Fabi%2Fabort-on-c-abi.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fabi%2Fabort-on-c-abi.rs?ref=4c58535d09d1261d21569df0036b974811544256", "patch": "@@ -1,6 +1,7 @@\n // run-pass\n \n #![allow(unused_must_use)]\n+#![feature(unwind_attributes)]\n // Since we mark some ABIs as \"nounwind\" to LLVM, we must make sure that\n // we never unwind through them.\n \n@@ -13,6 +14,7 @@ use std::io::prelude::*;\n use std::io;\n use std::process::{Command, Stdio};\n \n+#[unwind(aborts)] // FIXME(#58794)\n extern \"C\" fn panic_in_ffi() {\n     panic!(\"Test\");\n }"}]}