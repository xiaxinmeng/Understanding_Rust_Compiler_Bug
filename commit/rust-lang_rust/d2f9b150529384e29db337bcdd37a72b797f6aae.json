{"sha": "d2f9b150529384e29db337bcdd37a72b797f6aae", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQyZjliMTUwNTI5Mzg0ZTI5ZGIzMzdiY2RkMzdhNzJiNzk3ZjZhYWU=", "commit": {"author": {"name": "Paul Stansifer", "email": "paul.stansifer@gmail.com", "date": "2011-08-10T22:38:41Z"}, "committer": {"name": "Paul Stansifer", "email": "paul.stansifer@gmail.com", "date": "2011-08-15T22:35:27Z"}, "message": "Rename a field (so that macros can mention it).", "tree": {"sha": "1690a21a2b01d3ce9643c21f23c95ca7d1cce9b7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1690a21a2b01d3ce9643c21f23c95ca7d1cce9b7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d2f9b150529384e29db337bcdd37a72b797f6aae", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d2f9b150529384e29db337bcdd37a72b797f6aae", "html_url": "https://github.com/rust-lang/rust/commit/d2f9b150529384e29db337bcdd37a72b797f6aae", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d2f9b150529384e29db337bcdd37a72b797f6aae/comments", "author": {"login": "paulstansifer", "id": 1431, "node_id": "MDQ6VXNlcjE0MzE=", "avatar_url": "https://avatars.githubusercontent.com/u/1431?v=4", "gravatar_id": "", "url": "https://api.github.com/users/paulstansifer", "html_url": "https://github.com/paulstansifer", "followers_url": "https://api.github.com/users/paulstansifer/followers", "following_url": "https://api.github.com/users/paulstansifer/following{/other_user}", "gists_url": "https://api.github.com/users/paulstansifer/gists{/gist_id}", "starred_url": "https://api.github.com/users/paulstansifer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/paulstansifer/subscriptions", "organizations_url": "https://api.github.com/users/paulstansifer/orgs", "repos_url": "https://api.github.com/users/paulstansifer/repos", "events_url": "https://api.github.com/users/paulstansifer/events{/privacy}", "received_events_url": "https://api.github.com/users/paulstansifer/received_events", "type": "User", "site_admin": false}, "committer": {"login": "paulstansifer", "id": 1431, "node_id": "MDQ6VXNlcjE0MzE=", "avatar_url": "https://avatars.githubusercontent.com/u/1431?v=4", "gravatar_id": "", "url": "https://api.github.com/users/paulstansifer", "html_url": "https://github.com/paulstansifer", "followers_url": "https://api.github.com/users/paulstansifer/followers", "following_url": "https://api.github.com/users/paulstansifer/following{/other_user}", "gists_url": "https://api.github.com/users/paulstansifer/gists{/gist_id}", "starred_url": "https://api.github.com/users/paulstansifer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/paulstansifer/subscriptions", "organizations_url": "https://api.github.com/users/paulstansifer/orgs", "repos_url": "https://api.github.com/users/paulstansifer/repos", "events_url": "https://api.github.com/users/paulstansifer/events{/privacy}", "received_events_url": "https://api.github.com/users/paulstansifer/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b8033260632de3963909c22e325e48253c42bb73", "url": "https://api.github.com/repos/rust-lang/rust/commits/b8033260632de3963909c22e325e48253c42bb73", "html_url": "https://github.com/rust-lang/rust/commit/b8033260632de3963909c22e325e48253c42bb73"}], "stats": {"total": 26, "additions": 13, "deletions": 13}, "files": [{"sha": "efe41eb25de46a05d7f1048f9a3c71ef1c48324e", "filename": "src/comp/middle/trans_alt.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d2f9b150529384e29db337bcdd37a72b797f6aae/src%2Fcomp%2Fmiddle%2Ftrans_alt.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d2f9b150529384e29db337bcdd37a72b797f6aae/src%2Fcomp%2Fmiddle%2Ftrans_alt.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Ftrans_alt.rs?ref=d2f9b150529384e29db337bcdd37a72b797f6aae", "patch": "@@ -504,7 +504,7 @@ fn trans_alt(cx: &@block_ctxt, expr: &@ast::expr, arms: &[ast::arm],\n     for a: ast::arm  in arms {\n         let body_cx = bodies.(i);\n         if make_phi_bindings(body_cx, exit_map, ast::pat_id_map(a.pats.(0))) {\n-            let block_res = trans::trans_block(body_cx, a.block, output);\n+            let block_res = trans::trans_block(body_cx, a.body, output);\n             arm_results += ~[block_res];\n         } else { // Unreachable\n             arm_results += ~[rslt(body_cx, C_nil())];"}, {"sha": "8af21dfe055880a9b63dbf929b05538010b7c104", "filename": "src/comp/middle/tstate/pre_post_conditions.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/d2f9b150529384e29db337bcdd37a72b797f6aae/src%2Fcomp%2Fmiddle%2Ftstate%2Fpre_post_conditions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d2f9b150529384e29db337bcdd37a72b797f6aae/src%2Fcomp%2Fmiddle%2Ftstate%2Fpre_post_conditions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Ftstate%2Fpre_post_conditions.rs?ref=d2f9b150529384e29db337bcdd37a72b797f6aae", "patch": "@@ -504,8 +504,8 @@ fn find_pre_post_expr(fcx: &fn_ctxt, e: @expr) {\n       expr_alt(ex, alts) {\n         find_pre_post_expr(fcx, ex);\n         fn do_an_alt(fcx: &fn_ctxt, an_alt: &arm) -> pre_and_post {\n-            find_pre_post_block(fcx, an_alt.block);\n-            ret block_pp(fcx.ccx, an_alt.block);\n+            find_pre_post_block(fcx, an_alt.body);\n+            ret block_pp(fcx.ccx, an_alt.body);\n         }\n         let alt_pps = ~[];\n         for a: arm  in alts { alt_pps += ~[do_an_alt(fcx, a)]; }"}, {"sha": "ff36b79100316c1c276f5b4e535e816266bea8fc", "filename": "src/comp/middle/tstate/states.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/d2f9b150529384e29db337bcdd37a72b797f6aae/src%2Fcomp%2Fmiddle%2Ftstate%2Fstates.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d2f9b150529384e29db337bcdd37a72b797f6aae/src%2Fcomp%2Fmiddle%2Ftstate%2Fstates.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Ftstate%2Fstates.rs?ref=d2f9b150529384e29db337bcdd37a72b797f6aae", "patch": "@@ -555,8 +555,8 @@ fn find_pre_post_state_expr(fcx: &fn_ctxt, pres: &prestate, e: @expr) ->\n             a_post = false_postcond(num_constrs);\n             for an_alt: arm  in alts {\n                 changed |=\n-                    find_pre_post_state_block(fcx, e_post, an_alt.block);\n-                intersect(a_post, block_poststate(fcx.ccx, an_alt.block));\n+                    find_pre_post_state_block(fcx, e_post, an_alt.body);\n+                intersect(a_post, block_poststate(fcx.ccx, an_alt.body));\n                 // We deliberately do *not* update changed here, because\n                 // we'd go into an infinite loop that way, and the change\n                 // gets made after the if expression."}, {"sha": "9a7d6fd1ef843caf6ffe02ea994cf4bda2b34590", "filename": "src/comp/middle/typeck.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/d2f9b150529384e29db337bcdd37a72b797f6aae/src%2Fcomp%2Fmiddle%2Ftypeck.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d2f9b150529384e29db337bcdd37a72b797f6aae/src%2Fcomp%2Fmiddle%2Ftypeck.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Ftypeck.rs?ref=d2f9b150529384e29db337bcdd37a72b797f6aae", "patch": "@@ -2033,9 +2033,9 @@ fn check_expr_with_unifier(fcx: &@fn_ctxt, expr: &@ast::expr,\n         let result_ty = next_ty_var(fcx);\n         let arm_non_bot = false;\n         for arm: ast::arm  in arms {\n-            if !check_block(fcx, arm.block) { arm_non_bot = true; }\n-            let bty = block_ty(tcx, arm.block);\n-            result_ty = demand::simple(fcx, arm.block.span, result_ty, bty);\n+            if !check_block(fcx, arm.body) { arm_non_bot = true; }\n+            let bty = block_ty(tcx, arm.body);\n+            result_ty = demand::simple(fcx, arm.body.span, result_ty, bty);\n         }\n         bot |= !arm_non_bot;\n         if !arm_non_bot { result_ty = ty::mk_bot(tcx); }"}, {"sha": "5e6b5f7756a5de69764afeb24297bccf892e7aaa", "filename": "src/comp/syntax/ast.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d2f9b150529384e29db337bcdd37a72b797f6aae/src%2Fcomp%2Fsyntax%2Fast.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d2f9b150529384e29db337bcdd37a72b797f6aae/src%2Fcomp%2Fsyntax%2Fast.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fsyntax%2Fast.rs?ref=d2f9b150529384e29db337bcdd37a72b797f6aae", "patch": "@@ -269,7 +269,7 @@ type decl = spanned[decl_];\n \n tag decl_ { decl_local([@local]); decl_item(@item); }\n \n-type arm = {pats: [@pat], block: blk};\n+type arm = {pats: [@pat], body: blk};\n \n type field_ = {mut: mutability, ident: ident, expr: @expr};\n "}, {"sha": "180a518105fd3166a9820c1376c8e1e92a9c672a", "filename": "src/comp/syntax/fold.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d2f9b150529384e29db337bcdd37a72b797f6aae/src%2Fcomp%2Fsyntax%2Ffold.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d2f9b150529384e29db337bcdd37a72b797f6aae/src%2Fcomp%2Fsyntax%2Ffold.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fsyntax%2Ffold.rs?ref=d2f9b150529384e29db337bcdd37a72b797f6aae", "patch": "@@ -268,7 +268,7 @@ fn noop_fold_stmt(s: &stmt_, fld: ast_fold) -> stmt_ {\n \n fn noop_fold_arm(a: &arm, fld: ast_fold) -> arm {\n     ret {pats: ivec::map(fld.fold_pat, a.pats),\n-         block: fld.fold_block(a.block)};\n+         body: fld.fold_block(a.body)};\n }\n \n fn noop_fold_pat(p: &pat_, fld: ast_fold) -> pat_ {"}, {"sha": "9fdb2a0d38e706f078c033f70b60e11b659443e1", "filename": "src/comp/syntax/parse/parser.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d2f9b150529384e29db337bcdd37a72b797f6aae/src%2Fcomp%2Fsyntax%2Fparse%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d2f9b150529384e29db337bcdd37a72b797f6aae/src%2Fcomp%2Fsyntax%2Fparse%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fsyntax%2Fparse%2Fparser.rs?ref=d2f9b150529384e29db337bcdd37a72b797f6aae", "patch": "@@ -1356,7 +1356,7 @@ fn parse_alt_expr(p: &parser) -> @ast::expr {\n     while p.peek() != token::RBRACE {\n         let pats = parse_pats(p);\n         let blk = parse_block(p);\n-        arms += ~[{pats: pats, block: blk}];\n+        arms += ~[{pats: pats, body: blk}];\n     }\n     let hi = p.get_hi_pos();\n     p.bump();"}, {"sha": "59781bdbfba1ffc7ca4066bba0c0d37c05ceb7f8", "filename": "src/comp/syntax/print/pprust.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d2f9b150529384e29db337bcdd37a72b797f6aae/src%2Fcomp%2Fsyntax%2Fprint%2Fpprust.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d2f9b150529384e29db337bcdd37a72b797f6aae/src%2Fcomp%2Fsyntax%2Fprint%2Fpprust.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fsyntax%2Fprint%2Fpprust.rs?ref=d2f9b150529384e29db337bcdd37a72b797f6aae", "patch": "@@ -863,7 +863,7 @@ fn print_expr(s: &ps, expr: &@ast::expr) {\n                 print_pat(s, p);\n             }\n             space(s.s);\n-            print_possibly_embedded_block(s, arm.block, false,\n+            print_possibly_embedded_block(s, arm.body, false,\n                                           alt_indent_unit);\n         }\n         bclose_(s, expr.span, alt_indent_unit);"}, {"sha": "e0a5bebd25618a3c73a1a0aafda209318b5a847f", "filename": "src/comp/syntax/visit.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d2f9b150529384e29db337bcdd37a72b797f6aae/src%2Fcomp%2Fsyntax%2Fvisit.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d2f9b150529384e29db337bcdd37a72b797f6aae/src%2Fcomp%2Fsyntax%2Fvisit.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fsyntax%2Fvisit.rs?ref=d2f9b150529384e29db337bcdd37a72b797f6aae", "patch": "@@ -347,7 +347,7 @@ fn visit_expr[E](ex: &@expr, e: &E, v: &vt[E]) {\n \n fn visit_arm[E](a: &arm, e: &E, v: &vt[E]) {\n     for p: @pat  in a.pats { v.visit_pat(p, e, v); }\n-    v.visit_block(a.block, e, v);\n+    v.visit_block(a.body, e, v);\n }\n \n // Simpler, non-context passing interface. Always walks the whole tree, simply"}]}