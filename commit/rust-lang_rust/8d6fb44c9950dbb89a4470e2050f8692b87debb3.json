{"sha": "8d6fb44c9950dbb89a4470e2050f8692b87debb3", "node_id": "MDY6Q29tbWl0NzI0NzEyOjhkNmZiNDRjOTk1MGRiYjg5YTQ0NzBlMjA1MGY4NjkyYjg3ZGViYjM=", "commit": {"author": {"name": "Corey Richardson", "email": "corey@octayn.net", "date": "2015-03-27T21:29:07Z"}, "committer": {"name": "Corey Richardson", "email": "corey@octayn.net", "date": "2015-03-27T21:29:07Z"}, "message": "rustdoc: show negative impls properly in the implementors page\n\nThis isn't really possible to test in an automatic way, since the only traits\nyou can negative impl are `Send` and `Sync`, and the implementors page for\nthose only exists in libstd.\n\nCloses #21310", "tree": {"sha": "dc40c600944fb926cc20633538ad9c49948fd9c8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/dc40c600944fb926cc20633538ad9c49948fd9c8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8d6fb44c9950dbb89a4470e2050f8692b87debb3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8d6fb44c9950dbb89a4470e2050f8692b87debb3", "html_url": "https://github.com/rust-lang/rust/commit/8d6fb44c9950dbb89a4470e2050f8692b87debb3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8d6fb44c9950dbb89a4470e2050f8692b87debb3/comments", "author": {"login": "emberian", "id": 704250, "node_id": "MDQ6VXNlcjcwNDI1MA==", "avatar_url": "https://avatars.githubusercontent.com/u/704250?v=4", "gravatar_id": "", "url": "https://api.github.com/users/emberian", "html_url": "https://github.com/emberian", "followers_url": "https://api.github.com/users/emberian/followers", "following_url": "https://api.github.com/users/emberian/following{/other_user}", "gists_url": "https://api.github.com/users/emberian/gists{/gist_id}", "starred_url": "https://api.github.com/users/emberian/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/emberian/subscriptions", "organizations_url": "https://api.github.com/users/emberian/orgs", "repos_url": "https://api.github.com/users/emberian/repos", "events_url": "https://api.github.com/users/emberian/events{/privacy}", "received_events_url": "https://api.github.com/users/emberian/received_events", "type": "User", "site_admin": false}, "committer": {"login": "emberian", "id": 704250, "node_id": "MDQ6VXNlcjcwNDI1MA==", "avatar_url": "https://avatars.githubusercontent.com/u/704250?v=4", "gravatar_id": "", "url": "https://api.github.com/users/emberian", "html_url": "https://github.com/emberian", "followers_url": "https://api.github.com/users/emberian/followers", "following_url": "https://api.github.com/users/emberian/following{/other_user}", "gists_url": "https://api.github.com/users/emberian/gists{/gist_id}", "starred_url": "https://api.github.com/users/emberian/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/emberian/subscriptions", "organizations_url": "https://api.github.com/users/emberian/orgs", "repos_url": "https://api.github.com/users/emberian/repos", "events_url": "https://api.github.com/users/emberian/events{/privacy}", "received_events_url": "https://api.github.com/users/emberian/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "199bdcfeff5cfafd1f8e8ff583d7209272469879", "url": "https://api.github.com/repos/rust-lang/rust/commits/199bdcfeff5cfafd1f8e8ff583d7209272469879", "html_url": "https://github.com/rust-lang/rust/commit/199bdcfeff5cfafd1f8e8ff583d7209272469879"}], "stats": {"total": 8, "additions": 6, "deletions": 2}, "files": [{"sha": "8747a2529545dad6786d64ce98ba6e3b110ee602", "filename": "src/librustdoc/html/render.rs", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/8d6fb44c9950dbb89a4470e2050f8692b87debb3/src%2Flibrustdoc%2Fhtml%2Frender.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8d6fb44c9950dbb89a4470e2050f8692b87debb3/src%2Flibrustdoc%2Fhtml%2Frender.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Frender.rs?ref=8d6fb44c9950dbb89a4470e2050f8692b87debb3", "patch": "@@ -125,6 +125,7 @@ pub struct Implementor {\n     pub trait_: clean::Type,\n     pub for_: clean::Type,\n     pub stability: Option<clean::Stability>,\n+    pub polarity: Option<clean::ImplPolarity>,\n }\n \n /// Metadata about implementations for a type.\n@@ -635,9 +636,11 @@ fn write_shared(cx: &Context,\n             // going on). If they're in different crates then the crate defining\n             // the trait will be interested in our implementation.\n             if imp.def_id.krate == did.krate { continue }\n-            try!(write!(&mut f, r#\"\"{}impl{} {} for {}\",\"#,\n+            try!(write!(&mut f, r#\"\"{}impl{} {}{} for {}\",\"#,\n                         ConciseStability(&imp.stability),\n-                        imp.generics, imp.trait_, imp.for_));\n+                        imp.generics,\n+                        if imp.polarity == Some(clean::ImplPolarity::Negative) { \"!\" } else { \"\" },\n+                        imp.trait_, imp.for_));\n         }\n         try!(writeln!(&mut f, r\"];\"));\n         try!(writeln!(&mut f, \"{}\", r\"\n@@ -884,6 +887,7 @@ impl DocFolder for Cache {\n                         trait_: i.trait_.as_ref().unwrap().clone(),\n                         for_: i.for_.clone(),\n                         stability: item.stability.clone(),\n+                        polarity: i.polarity.clone(),\n                     });\n                 }\n                 Some(..) | None => {}"}]}