{"sha": "f408d4bb8ca382bd981fedb7eb809893271f9859", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY0MDhkNGJiOGNhMzgyYmQ5ODFmZWRiN2ViODA5ODkzMjcxZjk4NTk=", "commit": {"author": {"name": "The8472", "email": "git@infinite-source.de", "date": "2021-08-05T07:32:41Z"}, "committer": {"name": "The8472", "email": "git@infinite-source.de", "date": "2021-08-05T07:32:41Z"}, "message": "use box->vec conversion API that doesn't reallocate", "tree": {"sha": "42269ef51ae8ffebf9e539aa5bdd8d569331b9a0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/42269ef51ae8ffebf9e539aa5bdd8d569331b9a0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f408d4bb8ca382bd981fedb7eb809893271f9859", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f408d4bb8ca382bd981fedb7eb809893271f9859", "html_url": "https://github.com/rust-lang/rust/commit/f408d4bb8ca382bd981fedb7eb809893271f9859", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f408d4bb8ca382bd981fedb7eb809893271f9859/comments", "author": {"login": "the8472", "id": 1065730, "node_id": "MDQ6VXNlcjEwNjU3MzA=", "avatar_url": "https://avatars.githubusercontent.com/u/1065730?v=4", "gravatar_id": "", "url": "https://api.github.com/users/the8472", "html_url": "https://github.com/the8472", "followers_url": "https://api.github.com/users/the8472/followers", "following_url": "https://api.github.com/users/the8472/following{/other_user}", "gists_url": "https://api.github.com/users/the8472/gists{/gist_id}", "starred_url": "https://api.github.com/users/the8472/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/the8472/subscriptions", "organizations_url": "https://api.github.com/users/the8472/orgs", "repos_url": "https://api.github.com/users/the8472/repos", "events_url": "https://api.github.com/users/the8472/events{/privacy}", "received_events_url": "https://api.github.com/users/the8472/received_events", "type": "User", "site_admin": false}, "committer": {"login": "the8472", "id": 1065730, "node_id": "MDQ6VXNlcjEwNjU3MzA=", "avatar_url": "https://avatars.githubusercontent.com/u/1065730?v=4", "gravatar_id": "", "url": "https://api.github.com/users/the8472", "html_url": "https://github.com/the8472", "followers_url": "https://api.github.com/users/the8472/followers", "following_url": "https://api.github.com/users/the8472/following{/other_user}", "gists_url": "https://api.github.com/users/the8472/gists{/gist_id}", "starred_url": "https://api.github.com/users/the8472/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/the8472/subscriptions", "organizations_url": "https://api.github.com/users/the8472/orgs", "repos_url": "https://api.github.com/users/the8472/repos", "events_url": "https://api.github.com/users/the8472/events{/privacy}", "received_events_url": "https://api.github.com/users/the8472/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "83b01b9f1ac0ee605271286ddb31b6f9701e1f89", "url": "https://api.github.com/repos/rust-lang/rust/commits/83b01b9f1ac0ee605271286ddb31b6f9701e1f89", "html_url": "https://github.com/rust-lang/rust/commit/83b01b9f1ac0ee605271286ddb31b6f9701e1f89"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "ada6e0977669475f93908f5d886156268729cad0", "filename": "compiler/rustc_middle/src/mir/interpret/allocation.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f408d4bb8ca382bd981fedb7eb809893271f9859/compiler%2Frustc_middle%2Fsrc%2Fmir%2Finterpret%2Fallocation.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f408d4bb8ca382bd981fedb7eb809893271f9859/compiler%2Frustc_middle%2Fsrc%2Fmir%2Finterpret%2Fallocation.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fmir%2Finterpret%2Fallocation.rs?ref=f408d4bb8ca382bd981fedb7eb809893271f9859", "patch": "@@ -147,7 +147,7 @@ impl<Tag> Allocation<Tag> {\n         })?;\n         // SAFETY: This turns a Box<[MaybeUninit<u8>]> into a Vec<u8>. This is safe since the box\n         // was zero-allocated which is a valid value for u8.\n-        let bytes = unsafe { bytes.assume_init().to_vec() };\n+        let bytes = unsafe { bytes.assume_init().into_vec() };\n         Ok(Allocation {\n             bytes,\n             relocations: Relocations::new(),"}]}