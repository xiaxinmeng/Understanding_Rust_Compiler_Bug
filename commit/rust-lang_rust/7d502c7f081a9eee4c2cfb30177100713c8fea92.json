{"sha": "7d502c7f081a9eee4c2cfb30177100713c8fea92", "node_id": "MDY6Q29tbWl0NzI0NzEyOjdkNTAyYzdmMDgxYTllZWU0YzJjZmIzMDE3NzEwMDcxM2M4ZmVhOTI=", "commit": {"author": {"name": "Milo", "email": "50248166+Milo123459@users.noreply.github.com", "date": "2021-06-18T18:22:03Z"}, "committer": {"name": "Milo", "email": "50248166+Milo123459@users.noreply.github.com", "date": "2021-06-18T18:22:03Z"}, "message": "Recreate PR.", "tree": {"sha": "9edf21127a75f0e3b04fafbe150ab878c45d6a31", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9edf21127a75f0e3b04fafbe150ab878c45d6a31"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7d502c7f081a9eee4c2cfb30177100713c8fea92", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7d502c7f081a9eee4c2cfb30177100713c8fea92", "html_url": "https://github.com/rust-lang/rust/commit/7d502c7f081a9eee4c2cfb30177100713c8fea92", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7d502c7f081a9eee4c2cfb30177100713c8fea92/comments", "author": {"login": "Milo123459", "id": 50248166, "node_id": "MDQ6VXNlcjUwMjQ4MTY2", "avatar_url": "https://avatars.githubusercontent.com/u/50248166?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Milo123459", "html_url": "https://github.com/Milo123459", "followers_url": "https://api.github.com/users/Milo123459/followers", "following_url": "https://api.github.com/users/Milo123459/following{/other_user}", "gists_url": "https://api.github.com/users/Milo123459/gists{/gist_id}", "starred_url": "https://api.github.com/users/Milo123459/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Milo123459/subscriptions", "organizations_url": "https://api.github.com/users/Milo123459/orgs", "repos_url": "https://api.github.com/users/Milo123459/repos", "events_url": "https://api.github.com/users/Milo123459/events{/privacy}", "received_events_url": "https://api.github.com/users/Milo123459/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Milo123459", "id": 50248166, "node_id": "MDQ6VXNlcjUwMjQ4MTY2", "avatar_url": "https://avatars.githubusercontent.com/u/50248166?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Milo123459", "html_url": "https://github.com/Milo123459", "followers_url": "https://api.github.com/users/Milo123459/followers", "following_url": "https://api.github.com/users/Milo123459/following{/other_user}", "gists_url": "https://api.github.com/users/Milo123459/gists{/gist_id}", "starred_url": "https://api.github.com/users/Milo123459/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Milo123459/subscriptions", "organizations_url": "https://api.github.com/users/Milo123459/orgs", "repos_url": "https://api.github.com/users/Milo123459/repos", "events_url": "https://api.github.com/users/Milo123459/events{/privacy}", "received_events_url": "https://api.github.com/users/Milo123459/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0657812bc2f95037b5e2efbe8fbfc80fb28492c1", "url": "https://api.github.com/repos/rust-lang/rust/commits/0657812bc2f95037b5e2efbe8fbfc80fb28492c1", "html_url": "https://github.com/rust-lang/rust/commit/0657812bc2f95037b5e2efbe8fbfc80fb28492c1"}], "stats": {"total": 34, "additions": 25, "deletions": 9}, "files": [{"sha": "8199e35c0819fd8c98ddb26f5c1bb782bc196e6d", "filename": ".gitignore", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/7d502c7f081a9eee4c2cfb30177100713c8fea92/.gitignore", "raw_url": "https://github.com/rust-lang/rust/raw/7d502c7f081a9eee4c2cfb30177100713c8fea92/.gitignore", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/.gitignore?ref=7d502c7f081a9eee4c2cfb30177100713c8fea92", "patch": "@@ -11,3 +11,4 @@ generated_assists.adoc\n generated_features.adoc\n generated_diagnostic.adoc\n .DS_Store\n+.glitterrc"}, {"sha": "4d9ce38a41ae0918a9cdb9d91bd56b6d34697e22", "filename": "crates/ide/src/status.rs", "status": "modified", "additions": 13, "deletions": 4, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/7d502c7f081a9eee4c2cfb30177100713c8fea92/crates%2Fide%2Fsrc%2Fstatus.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7d502c7f081a9eee4c2cfb30177100713c8fea92/crates%2Fide%2Fsrc%2Fstatus.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fstatus.rs?ref=7d502c7f081a9eee4c2cfb30177100713c8fea92", "patch": "@@ -34,15 +34,24 @@ fn macro_syntax_tree_stats(db: &RootDatabase) -> SyntaxTreeStats {\n // image::https://user-images.githubusercontent.com/48062697/113065584-05f34500-91b1-11eb-98cc-5c196f76be7f.gif[]\n pub(crate) fn status(db: &RootDatabase, file_id: Option<FileId>) -> String {\n     let mut buf = String::new();\n+    let count = profile::countme::get_all();\n     format_to!(buf, \"{}\\n\", FileTextQuery.in_db(db).entries::<FilesStats>());\n     format_to!(buf, \"{}\\n\", LibrarySymbolsQuery.in_db(db).entries::<LibrarySymbolsStats>());\n     format_to!(buf, \"{}\\n\", syntax_tree_stats(db));\n-    format_to!(buf, \"{} (macros)\\n\", macro_syntax_tree_stats(db));\n-    format_to!(buf, \"{} total\\n\", memory_usage());\n-    format_to!(buf, \"\\ncounts:\\n{}\", profile::countme::get_all());\n+    format_to!(buf, \"{} (Macros)\\n\", macro_syntax_tree_stats(db));\n+    format_to!(buf, \"{} Total\\n\", memory_usage());\n+    format_to!(\n+        buf,\n+        \"\\nCounts:\\n{}\",\n+        if count.to_string().contains(\"all counts are zero\") {\n+            String::from(\"All counts are zero\\n\")\n+        } else {\n+            count.to_string()\n+        }\n+    );\n \n     if let Some(file_id) = file_id {\n-        format_to!(buf, \"\\nfile info:\\n\");\n+        format_to!(buf, \"\\nFile info:\\n\");\n         let krate = crate::parent_module::crate_for(db, file_id).pop();\n         match krate {\n             Some(krate) => {"}, {"sha": "ed43195dec2e5f2bbaefdaf39046ddd948b27f03", "filename": "crates/rust-analyzer/src/handlers.rs", "status": "modified", "additions": 11, "deletions": 5, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/7d502c7f081a9eee4c2cfb30177100713c8fea92/crates%2Frust-analyzer%2Fsrc%2Fhandlers.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7d502c7f081a9eee4c2cfb30177100713c8fea92/crates%2Frust-analyzer%2Fsrc%2Fhandlers.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fhandlers.rs?ref=7d502c7f081a9eee4c2cfb30177100713c8fea92", "patch": "@@ -60,21 +60,27 @@ pub(crate) fn handle_analyzer_status(\n     }\n \n     if snap.workspaces.is_empty() {\n-        buf.push_str(\"no workspaces\\n\")\n+        buf.push_str(\"No workspaces\\n\")\n     } else {\n-        buf.push_str(\"workspaces:\\n\");\n+        buf.push_str(\"Workspaces:\\n\");\n         for w in snap.workspaces.iter() {\n-            format_to!(buf, \"{} packages loaded\\n\", w.n_packages());\n+            format_to!(\n+                buf,\n+                \"Loaded {} packages across {} workspace{}.\\n\",\n+                w.n_packages(),\n+                snap.workspaces.len(),\n+                if snap.workspaces.len() == 1 { \"\" } else { \"s\" }\n+            );\n         }\n     }\n-    buf.push_str(\"\\nanalysis:\\n\");\n+    buf.push_str(\"\\nAnalysis:\\n\");\n     buf.push_str(\n         &snap\n             .analysis\n             .status(file_id)\n             .unwrap_or_else(|_| \"Analysis retrieval was cancelled\".to_owned()),\n     );\n-    format_to!(buf, \"\\n\\nrequests:\\n\");\n+    format_to!(buf, \"\\n\\nRequests:\\n\");\n     let requests = snap.latest_requests.read();\n     for (is_last, r) in requests.iter() {\n         let mark = if is_last { \"*\" } else { \" \" };"}]}