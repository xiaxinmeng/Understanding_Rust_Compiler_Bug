{"sha": "d44990367d57e40a6ec157174a463818665ac6de", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQ0NDk5MDM2N2Q1N2U0MGE2ZWMxNTcxNzRhNDYzODE4NjY1YWM2ZGU=", "commit": {"author": {"name": "R\u00e9my Rakic", "email": "remy.rakic+github@gmail.com", "date": "2021-06-08T21:47:04Z"}, "committer": {"name": "R\u00e9my Rakic", "email": "remy.rakic+github@gmail.com", "date": "2021-06-09T21:04:52Z"}, "message": "detect incorrect vtable alignment during const eval instead of ICE-ing\n\nalso add tests for these 2 kinds of errors for size and alignment,\nas the existing size check wasn't apparently tested", "tree": {"sha": "0f1e8e54d9f7ba0c9df9b242f6c2f1b8449d3609", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0f1e8e54d9f7ba0c9df9b242f6c2f1b8449d3609"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d44990367d57e40a6ec157174a463818665ac6de", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d44990367d57e40a6ec157174a463818665ac6de", "html_url": "https://github.com/rust-lang/rust/commit/d44990367d57e40a6ec157174a463818665ac6de", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d44990367d57e40a6ec157174a463818665ac6de/comments", "author": {"login": "lqd", "id": 247183, "node_id": "MDQ6VXNlcjI0NzE4Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/247183?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lqd", "html_url": "https://github.com/lqd", "followers_url": "https://api.github.com/users/lqd/followers", "following_url": "https://api.github.com/users/lqd/following{/other_user}", "gists_url": "https://api.github.com/users/lqd/gists{/gist_id}", "starred_url": "https://api.github.com/users/lqd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lqd/subscriptions", "organizations_url": "https://api.github.com/users/lqd/orgs", "repos_url": "https://api.github.com/users/lqd/repos", "events_url": "https://api.github.com/users/lqd/events{/privacy}", "received_events_url": "https://api.github.com/users/lqd/received_events", "type": "User", "site_admin": false}, "committer": {"login": "lqd", "id": 247183, "node_id": "MDQ6VXNlcjI0NzE4Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/247183?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lqd", "html_url": "https://github.com/lqd", "followers_url": "https://api.github.com/users/lqd/followers", "following_url": "https://api.github.com/users/lqd/following{/other_user}", "gists_url": "https://api.github.com/users/lqd/gists{/gist_id}", "starred_url": "https://api.github.com/users/lqd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lqd/subscriptions", "organizations_url": "https://api.github.com/users/lqd/orgs", "repos_url": "https://api.github.com/users/lqd/repos", "events_url": "https://api.github.com/users/lqd/events{/privacy}", "received_events_url": "https://api.github.com/users/lqd/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "47d38752c65359e1f4558d7a06935982fb8b486f", "url": "https://api.github.com/repos/rust-lang/rust/commits/47d38752c65359e1f4558d7a06935982fb8b486f", "html_url": "https://github.com/rust-lang/rust/commit/47d38752c65359e1f4558d7a06935982fb8b486f"}], "stats": {"total": 52, "additions": 51, "deletions": 1}, "files": [{"sha": "d0c04b5b414ebf3feb235ad9fb90899b4e78d35b", "filename": "compiler/rustc_mir/src/interpret/traits.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/d44990367d57e40a6ec157174a463818665ac6de/compiler%2Frustc_mir%2Fsrc%2Finterpret%2Ftraits.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d44990367d57e40a6ec157174a463818665ac6de/compiler%2Frustc_mir%2Fsrc%2Finterpret%2Ftraits.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir%2Fsrc%2Finterpret%2Ftraits.rs?ref=d44990367d57e40a6ec157174a463818665ac6de", "patch": "@@ -158,13 +158,15 @@ impl<'mir, 'tcx: 'mir, M: Machine<'mir, 'tcx>> InterpCx<'mir, 'tcx, M> {\n         let size = u64::try_from(self.force_bits(size, pointer_size)?).unwrap();\n         let align = vtable.read_ptr_sized(pointer_size * 2)?.check_init()?;\n         let align = u64::try_from(self.force_bits(align, pointer_size)?).unwrap();\n+        let align = Align::from_bytes(align)\n+            .map_err(|e| err_ub_format!(\"invalid vtable: alignment {}\", e))?;\n \n         if size >= self.tcx.data_layout.obj_size_bound() {\n             throw_ub_format!(\n                 \"invalid vtable: \\\n                 size is bigger than largest supported object\"\n             );\n         }\n-        Ok((Size::from_bytes(size), Align::from_bytes(align).unwrap()))\n+        Ok((Size::from_bytes(size), align))\n     }\n }"}, {"sha": "0c0e3682de4d647530e991fb9a15c19e56a52f6f", "filename": "src/test/ui/consts/const-eval/ub-incorrect-vtable.rs", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/d44990367d57e40a6ec157174a463818665ac6de/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fub-incorrect-vtable.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d44990367d57e40a6ec157174a463818665ac6de/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fub-incorrect-vtable.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fub-incorrect-vtable.rs?ref=d44990367d57e40a6ec157174a463818665ac6de", "patch": "@@ -0,0 +1,21 @@\n+// This test contains code with incorrect vtables in a const context:\n+// - from issue 86132: a trait object with invalid alignment caused an ICE in const eval, and now\n+//   triggers an error\n+// - a similar test that triggers a previously-untested const UB error: emitted close to the above\n+//   error, it checks the correctness of the size\n+\n+trait Trait {}\n+\n+const INVALID_VTABLE_ALIGNMENT: &dyn Trait =\n+    unsafe { std::mem::transmute((&92u8, &[0usize, 1usize, 1000usize])) };\n+//~^ ERROR any use of this value will cause an error\n+//~| WARNING this was previously accepted by the compiler\n+//~| invalid vtable: alignment `1000` is not a power of 2\n+\n+const INVALID_VTABLE_SIZE: &dyn Trait =\n+    unsafe { std::mem::transmute((&92u8, &[1usize, usize::MAX, 1usize])) };\n+//~^ ERROR any use of this value will cause an error\n+//~| WARNING this was previously accepted by the compiler\n+//~| invalid vtable: size is bigger than largest supported object\n+\n+fn main() {}"}, {"sha": "c937d039d381e63e1c1bb0b81a927f6cfae445f9", "filename": "src/test/ui/consts/const-eval/ub-incorrect-vtable.stderr", "status": "added", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/d44990367d57e40a6ec157174a463818665ac6de/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fub-incorrect-vtable.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d44990367d57e40a6ec157174a463818665ac6de/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fub-incorrect-vtable.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fub-incorrect-vtable.stderr?ref=d44990367d57e40a6ec157174a463818665ac6de", "patch": "@@ -0,0 +1,27 @@\n+error: any use of this value will cause an error\n+  --> $DIR/ub-incorrect-vtable.rs:10:14\n+   |\n+LL | / const INVALID_VTABLE_ALIGNMENT: &dyn Trait =\n+LL | |     unsafe { std::mem::transmute((&92u8, &[0usize, 1usize, 1000usize])) };\n+   | |______________^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^__-\n+   |                |\n+   |                invalid vtable: alignment `1000` is not a power of 2\n+   |\n+   = note: `#[deny(const_err)]` on by default\n+   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n+   = note: for more information, see issue #71800 <https://github.com/rust-lang/rust/issues/71800>\n+\n+error: any use of this value will cause an error\n+  --> $DIR/ub-incorrect-vtable.rs:16:14\n+   |\n+LL | / const INVALID_VTABLE_SIZE: &dyn Trait =\n+LL | |     unsafe { std::mem::transmute((&92u8, &[1usize, usize::MAX, 1usize])) };\n+   | |______________^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^__-\n+   |                |\n+   |                invalid vtable: size is bigger than largest supported object\n+   |\n+   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n+   = note: for more information, see issue #71800 <https://github.com/rust-lang/rust/issues/71800>\n+\n+error: aborting due to 2 previous errors\n+"}]}