{"sha": "e628c6635917cb9a280b435cc1cd55bc511ed770", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU2MjhjNjYzNTkxN2NiOWEyODBiNDM1Y2MxY2Q1NWJjNTExZWQ3NzA=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2020-06-26T16:59:59Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-06-26T16:59:59Z"}, "message": "Merge #4945\n\n4945: do not suggest assist for return type to result in bad case  r=matklad a=bnjjj\n\nclose #4826\n\nCo-authored-by: Benjamin Coenen <5719034+bnjjj@users.noreply.github.com>", "tree": {"sha": "c7e2f68b2a5165aeadd3eaabf4d123d1151d8c43", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c7e2f68b2a5165aeadd3eaabf4d123d1151d8c43"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e628c6635917cb9a280b435cc1cd55bc511ed770", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJe9imQCRBK7hj4Ov3rIwAAdHIIAE6AHFog/XJxo0FGX1K45J+E\ncjCovrDQ8PaIO3DyEZXjbt6dU7gaRR1tMPywiPn/sVja5pBYz0XSElk5L3KerxfE\nR979FIVxQoS+la/o5SyC7ggSej8dnVVzdPoyYE5ay1DkDgy/m6cQoc9IgUlR9keq\nvix+qYabMT1vb20RiSerqHjVaPWJJFiqjgypoDayg94LOxPjUrNPle6mTKC8cOQj\nQ3otXBB9zA897TybOvChX2YjlanXu1S0Q3g8yGl/MTpGCKcRQURxitJMy1rJ8elZ\nLRJUrihvkZLFchEdJmWeJvOEA+JOKzxoKd/Nay6VDkjwJqxKY1HlgTQNIQ1udAU=\n=OSwk\n-----END PGP SIGNATURE-----\n", "payload": "tree c7e2f68b2a5165aeadd3eaabf4d123d1151d8c43\nparent e07826b1991bbb34da71c99d2f08d11ed8c84885\nparent 9342574097d797d62f003f495c5dd13fb148758c\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1593190799 +0000\ncommitter GitHub <noreply@github.com> 1593190799 +0000\n\nMerge #4945\n\n4945: do not suggest assist for return type to result in bad case  r=matklad a=bnjjj\n\nclose #4826\n\nCo-authored-by: Benjamin Coenen <5719034+bnjjj@users.noreply.github.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e628c6635917cb9a280b435cc1cd55bc511ed770", "html_url": "https://github.com/rust-lang/rust/commit/e628c6635917cb9a280b435cc1cd55bc511ed770", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e628c6635917cb9a280b435cc1cd55bc511ed770/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e07826b1991bbb34da71c99d2f08d11ed8c84885", "url": "https://api.github.com/repos/rust-lang/rust/commits/e07826b1991bbb34da71c99d2f08d11ed8c84885", "html_url": "https://github.com/rust-lang/rust/commit/e07826b1991bbb34da71c99d2f08d11ed8c84885"}, {"sha": "9342574097d797d62f003f495c5dd13fb148758c", "url": "https://api.github.com/repos/rust-lang/rust/commits/9342574097d797d62f003f495c5dd13fb148758c", "html_url": "https://github.com/rust-lang/rust/commit/9342574097d797d62f003f495c5dd13fb148758c"}], "stats": {"total": 33, "additions": 31, "deletions": 2}, "files": [{"sha": "855baf1870a1924e9d1edf8ab97a49469dd19265", "filename": "crates/ra_assists/src/handlers/change_return_type_to_result.rs", "status": "modified", "additions": 31, "deletions": 2, "changes": 33, "blob_url": "https://github.com/rust-lang/rust/blob/e628c6635917cb9a280b435cc1cd55bc511ed770/crates%2Fra_assists%2Fsrc%2Fhandlers%2Fchange_return_type_to_result.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e628c6635917cb9a280b435cc1cd55bc511ed770/crates%2Fra_assists%2Fsrc%2Fhandlers%2Fchange_return_type_to_result.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_assists%2Fsrc%2Fhandlers%2Fchange_return_type_to_result.rs?ref=e628c6635917cb9a280b435cc1cd55bc511ed770", "patch": "@@ -4,6 +4,7 @@ use ra_syntax::{\n };\n \n use crate::{AssistContext, AssistId, Assists};\n+use test_utils::mark;\n \n // Assist: change_return_type_to_result\n //\n@@ -22,8 +23,13 @@ pub(crate) fn change_return_type_to_result(acc: &mut Assists, ctx: &AssistContex\n     let fn_def = ret_type.syntax().parent().and_then(ast::FnDef::cast)?;\n \n     let type_ref = &ret_type.type_ref()?;\n-    if type_ref.syntax().text().to_string().starts_with(\"Result<\") {\n-        return None;\n+    let ret_type_str = type_ref.syntax().text().to_string();\n+    let first_part_ret_type = ret_type_str.splitn(2, '<').next();\n+    if let Some(ret_type_first_part) = first_part_ret_type {\n+        if ret_type_first_part.ends_with(\"Result\") {\n+            mark::hit!(change_return_type_to_result_simple_return_type_already_result);\n+            return None;\n+        }\n     }\n \n     let block_expr = &fn_def.body()?;\n@@ -296,6 +302,29 @@ mod tests {\n         );\n     }\n \n+    #[test]\n+    fn change_return_type_to_result_simple_return_type_already_result_std() {\n+        check_assist_not_applicable(\n+            change_return_type_to_result,\n+            r#\"fn foo() -> std::result::Result<i32<|>, String> {\n+                let test = \"test\";\n+                return 42i32;\n+            }\"#,\n+        );\n+    }\n+\n+    #[test]\n+    fn change_return_type_to_result_simple_return_type_already_result() {\n+        mark::check!(change_return_type_to_result_simple_return_type_already_result);\n+        check_assist_not_applicable(\n+            change_return_type_to_result,\n+            r#\"fn foo() -> Result<i32<|>, String> {\n+                let test = \"test\";\n+                return 42i32;\n+            }\"#,\n+        );\n+    }\n+\n     #[test]\n     fn change_return_type_to_result_simple_with_cursor() {\n         check_assist("}]}