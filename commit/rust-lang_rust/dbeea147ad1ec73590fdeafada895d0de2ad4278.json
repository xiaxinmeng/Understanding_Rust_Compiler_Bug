{"sha": "dbeea147ad1ec73590fdeafada895d0de2ad4278", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRiZWVhMTQ3YWQxZWM3MzU5MGZkZWFmYWRhODk1ZDBkZTJhZDQyNzg=", "commit": {"author": {"name": "Tobias Bucher", "email": "tobiasbucher5991@gmail.com", "date": "2014-04-05T18:38:35Z"}, "committer": {"name": "Tobias Bucher", "email": "tobiasbucher5991@gmail.com", "date": "2014-04-05T18:38:35Z"}, "message": "Fix an unnecessary use of `cast::transmute`\n\nWherever possible, more specialized variants of said functions should be used,\nsuch as in this case `cast::transmute_mmut_unsafe`.", "tree": {"sha": "50392c299f80924ad5bcdb8d16e17184a408bd1e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/50392c299f80924ad5bcdb8d16e17184a408bd1e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/dbeea147ad1ec73590fdeafada895d0de2ad4278", "comment_count": 5, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/dbeea147ad1ec73590fdeafada895d0de2ad4278", "html_url": "https://github.com/rust-lang/rust/commit/dbeea147ad1ec73590fdeafada895d0de2ad4278", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/dbeea147ad1ec73590fdeafada895d0de2ad4278/comments", "author": {"login": "tbu-", "id": 6666593, "node_id": "MDQ6VXNlcjY2NjY1OTM=", "avatar_url": "https://avatars.githubusercontent.com/u/6666593?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tbu-", "html_url": "https://github.com/tbu-", "followers_url": "https://api.github.com/users/tbu-/followers", "following_url": "https://api.github.com/users/tbu-/following{/other_user}", "gists_url": "https://api.github.com/users/tbu-/gists{/gist_id}", "starred_url": "https://api.github.com/users/tbu-/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tbu-/subscriptions", "organizations_url": "https://api.github.com/users/tbu-/orgs", "repos_url": "https://api.github.com/users/tbu-/repos", "events_url": "https://api.github.com/users/tbu-/events{/privacy}", "received_events_url": "https://api.github.com/users/tbu-/received_events", "type": "User", "site_admin": false}, "committer": {"login": "tbu-", "id": 6666593, "node_id": "MDQ6VXNlcjY2NjY1OTM=", "avatar_url": "https://avatars.githubusercontent.com/u/6666593?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tbu-", "html_url": "https://github.com/tbu-", "followers_url": "https://api.github.com/users/tbu-/followers", "following_url": "https://api.github.com/users/tbu-/following{/other_user}", "gists_url": "https://api.github.com/users/tbu-/gists{/gist_id}", "starred_url": "https://api.github.com/users/tbu-/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tbu-/subscriptions", "organizations_url": "https://api.github.com/users/tbu-/orgs", "repos_url": "https://api.github.com/users/tbu-/repos", "events_url": "https://api.github.com/users/tbu-/events{/privacy}", "received_events_url": "https://api.github.com/users/tbu-/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "94a055c7295bd5822219b86243c2af6fff9d21d3", "url": "https://api.github.com/repos/rust-lang/rust/commits/94a055c7295bd5822219b86243c2af6fff9d21d3", "html_url": "https://github.com/rust-lang/rust/commit/94a055c7295bd5822219b86243c2af6fff9d21d3"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "0c9f0b02fdf0a2a38152273816550965143bb84e", "filename": "src/libstd/ty.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/dbeea147ad1ec73590fdeafada895d0de2ad4278/src%2Flibstd%2Fty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dbeea147ad1ec73590fdeafada895d0de2ad4278/src%2Flibstd%2Fty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fty.rs?ref=dbeea147ad1ec73590fdeafada895d0de2ad4278", "patch": "@@ -63,7 +63,7 @@ impl<T> Unsafe<T> {\n \n     /// Gets a mutable pointer to the wrapped value\n     #[inline]\n-    pub unsafe fn get(&self) -> *mut T { cast::transmute(&self.value) }\n+    pub unsafe fn get(&self) -> *mut T { cast::transmute_mut_unsafe(&self.value) }\n \n     /// Unwraps the value\n     #[inline]"}]}