{"sha": "387dcff796406eb55624c61e9f14a3b5c27ad5ff", "node_id": "MDY6Q29tbWl0NzI0NzEyOjM4N2RjZmY3OTY0MDZlYjU1NjI0YzYxZTlmMTRhM2I1YzI3YWQ1ZmY=", "commit": {"author": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2019-08-04T16:44:06Z"}, "committer": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2019-08-04T17:42:46Z"}, "message": "review comments: clean up", "tree": {"sha": "8fdd29154d729ee47a6a662217ba33215e653bd5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8fdd29154d729ee47a6a662217ba33215e653bd5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/387dcff796406eb55624c61e9f14a3b5c27ad5ff", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/387dcff796406eb55624c61e9f14a3b5c27ad5ff", "html_url": "https://github.com/rust-lang/rust/commit/387dcff796406eb55624c61e9f14a3b5c27ad5ff", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/387dcff796406eb55624c61e9f14a3b5c27ad5ff/comments", "author": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "committer": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "23400677d7efb82c396d37e01afc9d10698b3d3e", "url": "https://api.github.com/repos/rust-lang/rust/commits/23400677d7efb82c396d37e01afc9d10698b3d3e", "html_url": "https://github.com/rust-lang/rust/commit/23400677d7efb82c396d37e01afc9d10698b3d3e"}], "stats": {"total": 23, "additions": 9, "deletions": 14}, "files": [{"sha": "ee8f1843c1a820d7efedaa1cf4a29ed96142f418", "filename": "src/librustc_codegen_llvm/context.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/387dcff796406eb55624c61e9f14a3b5c27ad5ff/src%2Flibrustc_codegen_llvm%2Fcontext.rs", "raw_url": "https://github.com/rust-lang/rust/raw/387dcff796406eb55624c61e9f14a3b5c27ad5ff/src%2Flibrustc_codegen_llvm%2Fcontext.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_llvm%2Fcontext.rs?ref=387dcff796406eb55624c61e9f14a3b5c27ad5ff", "patch": "@@ -30,7 +30,7 @@ use std::iter;\n use std::str;\n use std::sync::Arc;\n use syntax::symbol::LocalInternedString;\n-use syntax::source_map::Span;\n+use syntax::source_map::{DUMMY_SP, Span};\n use crate::abi::Abi;\n \n /// There is one `CodegenCx` per compilation unit. Each one has its own LLVM\n@@ -861,10 +861,10 @@ impl LayoutOf for CodegenCx<'ll, 'tcx> {\n     type TyLayout = TyLayout<'tcx>;\n \n     fn layout_of(&self, ty: Ty<'tcx>) -> Self::TyLayout {\n-        self.spanned_layout_of(ty, None)\n+        self.spanned_layout_of(ty, DUMMY_SP)\n     }\n \n-    fn spanned_layout_of(&self, ty: Ty<'tcx>, span: Option<Span>) -> Self::TyLayout {\n+    fn spanned_layout_of(&self, ty: Ty<'tcx>, span: Span) -> Self::TyLayout {\n         self.tcx.layout_of(ty::ParamEnv::reveal_all().and(ty))\n             .unwrap_or_else(|e| if let LayoutError::SizeOverflow(_) = e {\n                 match span {"}, {"sha": "5dc050cbb3672e75ee669cba33e612d0ea7b554c", "filename": "src/librustc_codegen_ssa/mir/analyze.rs", "status": "modified", "additions": 1, "deletions": 6, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/387dcff796406eb55624c61e9f14a3b5c27ad5ff/src%2Flibrustc_codegen_ssa%2Fmir%2Fanalyze.rs", "raw_url": "https://github.com/rust-lang/rust/raw/387dcff796406eb55624c61e9f14a3b5c27ad5ff/src%2Flibrustc_codegen_ssa%2Fmir%2Fanalyze.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_ssa%2Fmir%2Fanalyze.rs?ref=387dcff796406eb55624c61e9f14a3b5c27ad5ff", "patch": "@@ -182,18 +182,13 @@ impl<'mir, 'a, 'tcx, Bx: BuilderMethods<'a, 'tcx>> Visitor<'tcx>\n                     rvalue: &mir::Rvalue<'tcx>,\n                     location: Location) {\n         debug!(\"visit_assign(place={:?}, rvalue={:?})\", place, rvalue);\n-        let mut decl_span = None;\n-        if let mir::PlaceBase::Local(local) = &place.base {\n-            if let Some(decl) = self.fx.mir.local_decls.get(*local) {\n-                decl_span = Some(decl.source_info.span);\n-            }\n-        }\n \n         if let mir::Place {\n             base: mir::PlaceBase::Local(index),\n             projection: None,\n         } = *place {\n             self.assign(index, location);\n+            let decl_span = self.fx.mir.local_decls[index].source_info.span;\n             if !self.fx.rvalue_creates_operand(rvalue, decl_span) {\n                 self.not_ssa(index);\n             }"}, {"sha": "29a97894bdca9c97bc050055b23bb9ca0b1ea47f", "filename": "src/librustc_codegen_ssa/mir/rvalue.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/387dcff796406eb55624c61e9f14a3b5c27ad5ff/src%2Flibrustc_codegen_ssa%2Fmir%2Frvalue.rs", "raw_url": "https://github.com/rust-lang/rust/raw/387dcff796406eb55624c61e9f14a3b5c27ad5ff/src%2Flibrustc_codegen_ssa%2Fmir%2Frvalue.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_ssa%2Fmir%2Frvalue.rs?ref=387dcff796406eb55624c61e9f14a3b5c27ad5ff", "patch": "@@ -6,7 +6,7 @@ use rustc::middle::lang_items::ExchangeMallocFnLangItem;\n use rustc_apfloat::{ieee, Float, Status, Round};\n use std::{u128, i128};\n use syntax::symbol::sym;\n-use syntax::source_map::Span;\n+use syntax::source_map::{DUMMY_SP, Span};\n \n use crate::base;\n use crate::MemFlags;\n@@ -137,7 +137,7 @@ impl<'a, 'tcx, Bx: BuilderMethods<'a, 'tcx>> FunctionCx<'a, 'tcx, Bx> {\n             }\n \n             _ => {\n-                assert!(self.rvalue_creates_operand(rvalue, None));\n+                assert!(self.rvalue_creates_operand(rvalue, DUMMY_SP));\n                 let (mut bx, temp) = self.codegen_rvalue_operand(bx, rvalue);\n                 temp.val.store(&mut bx, dest);\n                 bx\n@@ -171,7 +171,7 @@ impl<'a, 'tcx, Bx: BuilderMethods<'a, 'tcx>> FunctionCx<'a, 'tcx, Bx> {\n         rvalue: &mir::Rvalue<'tcx>\n     ) -> (Bx, OperandRef<'tcx, Bx::Value>) {\n         assert!(\n-            self.rvalue_creates_operand(rvalue, None),\n+            self.rvalue_creates_operand(rvalue, DUMMY_SP),\n             \"cannot codegen {:?} to operand\",\n             rvalue,\n         );\n@@ -696,7 +696,7 @@ impl<'a, 'tcx, Bx: BuilderMethods<'a, 'tcx>> FunctionCx<'a, 'tcx, Bx> {\n }\n \n impl<'a, 'tcx, Bx: BuilderMethods<'a, 'tcx>> FunctionCx<'a, 'tcx, Bx> {\n-    pub fn rvalue_creates_operand(&self, rvalue: &mir::Rvalue<'tcx>, span: Option<Span>) -> bool {\n+    pub fn rvalue_creates_operand(&self, rvalue: &mir::Rvalue<'tcx>, span: Span) -> bool {\n         match *rvalue {\n             mir::Rvalue::Ref(..) |\n             mir::Rvalue::Len(..) |"}, {"sha": "dd7ae742a63c622ed11307520a8e2e94c9a1c489", "filename": "src/librustc_target/abi/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/387dcff796406eb55624c61e9f14a3b5c27ad5ff/src%2Flibrustc_target%2Fabi%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/387dcff796406eb55624c61e9f14a3b5c27ad5ff/src%2Flibrustc_target%2Fabi%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fabi%2Fmod.rs?ref=387dcff796406eb55624c61e9f14a3b5c27ad5ff", "patch": "@@ -1013,7 +1013,7 @@ pub trait LayoutOf {\n     type TyLayout;\n \n     fn layout_of(&self, ty: Self::Ty) -> Self::TyLayout;\n-    fn spanned_layout_of(&self, ty: Self::Ty, _span: Option<Span>) -> Self::TyLayout {\n+    fn spanned_layout_of(&self, ty: Self::Ty, _span: Span) -> Self::TyLayout {\n         self.layout_of(ty)\n     }\n }"}]}