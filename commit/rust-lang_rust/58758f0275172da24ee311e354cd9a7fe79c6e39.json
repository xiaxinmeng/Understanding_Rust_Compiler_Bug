{"sha": "58758f0275172da24ee311e354cd9a7fe79c6e39", "node_id": "MDY6Q29tbWl0NzI0NzEyOjU4NzU4ZjAyNzUxNzJkYTI0ZWUzMTFlMzU0Y2Q5YTdmZTc5YzZlMzk=", "commit": {"author": {"name": "Camelid", "email": "camelidcamel@gmail.com", "date": "2021-02-28T19:53:55Z"}, "committer": {"name": "Camelid", "email": "camelidcamel@gmail.com", "date": "2021-02-28T19:53:55Z"}, "message": "Allow variant attributes in `enum_from_u32!`", "tree": {"sha": "cf54a5648a094de9fca582d73c3dff309c4fda2e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/cf54a5648a094de9fca582d73c3dff309c4fda2e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/58758f0275172da24ee311e354cd9a7fe79c6e39", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/58758f0275172da24ee311e354cd9a7fe79c6e39", "html_url": "https://github.com/rust-lang/rust/commit/58758f0275172da24ee311e354cd9a7fe79c6e39", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/58758f0275172da24ee311e354cd9a7fe79c6e39/comments", "author": {"login": "camelid", "id": 37223377, "node_id": "MDQ6VXNlcjM3MjIzMzc3", "avatar_url": "https://avatars.githubusercontent.com/u/37223377?v=4", "gravatar_id": "", "url": "https://api.github.com/users/camelid", "html_url": "https://github.com/camelid", "followers_url": "https://api.github.com/users/camelid/followers", "following_url": "https://api.github.com/users/camelid/following{/other_user}", "gists_url": "https://api.github.com/users/camelid/gists{/gist_id}", "starred_url": "https://api.github.com/users/camelid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/camelid/subscriptions", "organizations_url": "https://api.github.com/users/camelid/orgs", "repos_url": "https://api.github.com/users/camelid/repos", "events_url": "https://api.github.com/users/camelid/events{/privacy}", "received_events_url": "https://api.github.com/users/camelid/received_events", "type": "User", "site_admin": false}, "committer": {"login": "camelid", "id": 37223377, "node_id": "MDQ6VXNlcjM3MjIzMzc3", "avatar_url": "https://avatars.githubusercontent.com/u/37223377?v=4", "gravatar_id": "", "url": "https://api.github.com/users/camelid", "html_url": "https://github.com/camelid", "followers_url": "https://api.github.com/users/camelid/followers", "following_url": "https://api.github.com/users/camelid/following{/other_user}", "gists_url": "https://api.github.com/users/camelid/gists{/gist_id}", "starred_url": "https://api.github.com/users/camelid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/camelid/subscriptions", "organizations_url": "https://api.github.com/users/camelid/orgs", "repos_url": "https://api.github.com/users/camelid/repos", "events_url": "https://api.github.com/users/camelid/events{/privacy}", "received_events_url": "https://api.github.com/users/camelid/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e5f1e8883af5efae2eaf12f7b25e3bfe5573ba47", "url": "https://api.github.com/repos/rust-lang/rust/commits/e5f1e8883af5efae2eaf12f7b25e3bfe5573ba47", "html_url": "https://github.com/rust-lang/rust/commit/e5f1e8883af5efae2eaf12f7b25e3bfe5573ba47"}], "stats": {"total": 8, "additions": 4, "deletions": 4}, "files": [{"sha": "48dfbba7504ef741578cb019f0a7a415aefdb22d", "filename": "compiler/rustc_data_structures/src/macros.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/58758f0275172da24ee311e354cd9a7fe79c6e39/compiler%2Frustc_data_structures%2Fsrc%2Fmacros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/58758f0275172da24ee311e354cd9a7fe79c6e39/compiler%2Frustc_data_structures%2Fsrc%2Fmacros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_data_structures%2Fsrc%2Fmacros.rs?ref=58758f0275172da24ee311e354cd9a7fe79c6e39", "patch": "@@ -9,11 +9,11 @@ macro_rules! static_assert_size {\n #[macro_export]\n macro_rules! enum_from_u32 {\n     ($(#[$attr:meta])* pub enum $name:ident {\n-        $($variant:ident = $e:expr,)*\n+        $($(#[$var_attr:meta])* $variant:ident = $e:expr,)*\n     }) => {\n         $(#[$attr])*\n         pub enum $name {\n-            $($variant = $e),*\n+            $($(#[$var_attr])* $variant = $e),*\n         }\n \n         impl $name {\n@@ -26,11 +26,11 @@ macro_rules! enum_from_u32 {\n         }\n     };\n     ($(#[$attr:meta])* pub enum $name:ident {\n-        $($variant:ident,)*\n+        $($(#[$var_attr:meta])* $variant:ident,)*\n     }) => {\n         $(#[$attr])*\n         pub enum $name {\n-            $($variant,)*\n+            $($(#[$var_attr])* $variant,)*\n         }\n \n         impl $name {"}]}