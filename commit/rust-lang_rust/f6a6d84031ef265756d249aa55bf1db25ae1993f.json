{"sha": "f6a6d84031ef265756d249aa55bf1db25ae1993f", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY2YTZkODQwMzFlZjI2NTc1NmQyNDlhYTU1YmYxZGIyNWFlMTk5M2Y=", "commit": {"author": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2018-01-30T13:20:20Z"}, "committer": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2018-01-30T17:42:18Z"}, "message": "Update associated constants error message", "tree": {"sha": "172f7cf4ea0b43685080a598ce652512b2c4b637", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/172f7cf4ea0b43685080a598ce652512b2c4b637"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f6a6d84031ef265756d249aa55bf1db25ae1993f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f6a6d84031ef265756d249aa55bf1db25ae1993f", "html_url": "https://github.com/rust-lang/rust/commit/f6a6d84031ef265756d249aa55bf1db25ae1993f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f6a6d84031ef265756d249aa55bf1db25ae1993f/comments", "author": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "committer": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1b193de98af5b8c6e2b50908ea64323b9095a1a4", "url": "https://api.github.com/repos/rust-lang/rust/commits/1b193de98af5b8c6e2b50908ea64323b9095a1a4", "html_url": "https://github.com/rust-lang/rust/commit/1b193de98af5b8c6e2b50908ea64323b9095a1a4"}], "stats": {"total": 29, "additions": 24, "deletions": 5}, "files": [{"sha": "ae53ed0e1140d1226e4ba29f8ba45041ad13c40e", "filename": "src/librustc_const_eval/check_match.rs", "status": "modified", "additions": 9, "deletions": 2, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/f6a6d84031ef265756d249aa55bf1db25ae1993f/src%2Flibrustc_const_eval%2Fcheck_match.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f6a6d84031ef265756d249aa55bf1db25ae1993f/src%2Flibrustc_const_eval%2Fcheck_match.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_const_eval%2Fcheck_match.rs?ref=f6a6d84031ef265756d249aa55bf1db25ae1993f", "patch": "@@ -127,20 +127,27 @@ impl<'a, 'tcx> Visitor<'tcx> for MatchVisitor<'a, 'tcx> {\n     }\n }\n \n+\n impl<'a, 'tcx> PatternContext<'a, 'tcx> {\n     fn report_inlining_errors(&self, pat_span: Span) {\n         for error in &self.errors {\n             match *error {\n                 PatternError::StaticInPattern(span) => {\n-                    span_err!(self.tcx.sess, span, E0158,\n-                              \"statics cannot be referenced in patterns\");\n+                    self.span_e0158(span, \"statics cannot be referenced in patterns\")\n+                }\n+                PatternError::AssociatedConstInPattern(span) => {\n+                    self.span_e0158(span, \"associated consts cannot be referenced in patterns\")\n                 }\n                 PatternError::ConstEval(ref err) => {\n                     err.report(self.tcx, pat_span, \"pattern\");\n                 }\n             }\n         }\n     }\n+\n+    fn span_e0158(&self, span: Span, text: &str) {\n+        span_err!(self.tcx.sess, span, E0158, \"{}\", text)\n+    }\n }\n \n impl<'a, 'tcx> MatchVisitor<'a, 'tcx> {"}, {"sha": "06fbf669f6e7bf3c6681548a5b52190461a801a9", "filename": "src/librustc_const_eval/pattern.rs", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/f6a6d84031ef265756d249aa55bf1db25ae1993f/src%2Flibrustc_const_eval%2Fpattern.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f6a6d84031ef265756d249aa55bf1db25ae1993f/src%2Flibrustc_const_eval%2Fpattern.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_const_eval%2Fpattern.rs?ref=f6a6d84031ef265756d249aa55bf1db25ae1993f", "patch": "@@ -27,6 +27,7 @@ use syntax_pos::Span;\n \n #[derive(Clone, Debug)]\n pub enum PatternError<'tcx> {\n+    AssociatedConstInPattern(Span),\n     StaticInPattern(Span),\n     ConstEval(ConstEvalErr<'tcx>),\n }\n@@ -632,6 +633,10 @@ impl<'a, 'tcx> PatternContext<'a, 'tcx> {\n                   -> Pattern<'tcx> {\n         let ty = self.tables.node_id_to_type(id);\n         let def = self.tables.qpath_def(qpath, id);\n+        let is_associated_const = match def {\n+            Def::AssociatedConst(_) => true,\n+            _ => false,\n+        };\n         let kind = match def {\n             Def::Const(def_id) | Def::AssociatedConst(def_id) => {\n                 let substs = self.tables.node_substs(id);\n@@ -653,7 +658,11 @@ impl<'a, 'tcx> PatternContext<'a, 'tcx> {\n                         return pat;\n                     }\n                     None => {\n-                        self.errors.push(PatternError::StaticInPattern(span));\n+                        self.errors.push(if is_associated_const {\n+                            PatternError::AssociatedConstInPattern(span)\n+                        } else {\n+                            PatternError::StaticInPattern(span)\n+                        });\n                         PatternKind::Wild\n                     }\n                 }"}, {"sha": "630a234fa66410e2cf886b0bc15244759c1a99e4", "filename": "src/test/compile-fail/associated-const-type-parameter-arms.rs", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/f6a6d84031ef265756d249aa55bf1db25ae1993f/src%2Ftest%2Fcompile-fail%2Fassociated-const-type-parameter-arms.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f6a6d84031ef265756d249aa55bf1db25ae1993f/src%2Ftest%2Fcompile-fail%2Fassociated-const-type-parameter-arms.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fassociated-const-type-parameter-arms.rs?ref=f6a6d84031ef265756d249aa55bf1db25ae1993f", "patch": "@@ -16,6 +16,7 @@ pub trait Foo {\n }\n \n struct Abc;\n+\n impl Foo for Abc {\n     const X: EFoo = EFoo::B;\n }\n@@ -27,8 +28,10 @@ impl Foo for Def {\n \n pub fn test<A: Foo, B: Foo>(arg: EFoo) {\n     match arg {\n-        A::X => println!(\"A::X\"), //~ error: statics cannot be referenced in patterns [E0158]\n-        B::X => println!(\"B::X\"), //~ error: statics cannot be referenced in patterns [E0158]\n+        A::X => println!(\"A::X\"),\n+        //~^ error: associated consts cannot be referenced in patterns [E0158]\n+        B::X => println!(\"B::X\"),\n+        //~^ error: associated consts cannot be referenced in patterns [E0158]\n         _ => (),\n     }\n }"}]}