{"sha": "e193f4697f11aed89329177d04c84bcd9ce1b424", "node_id": "C_kwDOAAsO6NoAKGUxOTNmNDY5N2YxMWFlZDg5MzI5MTc3ZDA0Yzg0YmNkOWNlMWI0MjQ", "commit": {"author": {"name": "Yuki Okushi", "email": "jtitor@2k36.org", "date": "2022-08-26T00:51:43Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-08-26T00:51:43Z"}, "message": "Rollup merge of #100076 - tspiteri:const_slice_split_at, r=oli-obk\n\nmake slice::{split_at,split_at_unchecked} const functions\n\nNow that `slice::from_raw_parts` is const in stable 1.64, it makes sense to have `split_at` const as well, otherwise unsafe code is required to achieve a const equivalent.", "tree": {"sha": "b9a0db39817ad9cee968558357a92e4114f5f16a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b9a0db39817ad9cee968558357a92e4114f5f16a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e193f4697f11aed89329177d04c84bcd9ce1b424", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJjCBkfCRBK7hj4Ov3rIwAACjwIACwd+9z6rLfEj22gmktgF40o\nyXRG9LPXkUqtRDQGLDlWBch4w+3lgbexFtWMh15cxv9PGxXRheAfHWrYw0sL18CA\nvNWbLl9uRRBbbj00HuLw59Z25uftJokiiHh4jmXeipj7bq85VbFJXaUlj3+QptfI\nSpcEM2VvsV0YuptTmnN7dGgw77Q5bczX3scwMdZIOngBOD3dL8qJu3Bjh8B5h8Pt\ntlnMyvFS76qTnqivjlgx44ThSoQyLXUdWBRIMlyx3Xxd/Sm6O3FVxo6YtiGT8+Ja\nXQzX1ErRoRCzmUPXTh3MePX3rsVx1X6uOYU4Y+89EJ8VJz/7C5nW1vJl27Su37c=\n=IZoS\n-----END PGP SIGNATURE-----\n", "payload": "tree b9a0db39817ad9cee968558357a92e4114f5f16a\nparent 55562c7ddc0af4799cccae0c7c42328e992a533c\nparent bc3d7199e1dcb650ef17c7a5370665641819545d\nauthor Yuki Okushi <jtitor@2k36.org> 1661475103 +0900\ncommitter GitHub <noreply@github.com> 1661475103 +0900\n\nRollup merge of #100076 - tspiteri:const_slice_split_at, r=oli-obk\n\nmake slice::{split_at,split_at_unchecked} const functions\n\nNow that `slice::from_raw_parts` is const in stable 1.64, it makes sense to have `split_at` const as well, otherwise unsafe code is required to achieve a const equivalent.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e193f4697f11aed89329177d04c84bcd9ce1b424", "html_url": "https://github.com/rust-lang/rust/commit/e193f4697f11aed89329177d04c84bcd9ce1b424", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e193f4697f11aed89329177d04c84bcd9ce1b424/comments", "author": {"login": "JohnTitor", "id": 25030997, "node_id": "MDQ6VXNlcjI1MDMwOTk3", "avatar_url": "https://avatars.githubusercontent.com/u/25030997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JohnTitor", "html_url": "https://github.com/JohnTitor", "followers_url": "https://api.github.com/users/JohnTitor/followers", "following_url": "https://api.github.com/users/JohnTitor/following{/other_user}", "gists_url": "https://api.github.com/users/JohnTitor/gists{/gist_id}", "starred_url": "https://api.github.com/users/JohnTitor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JohnTitor/subscriptions", "organizations_url": "https://api.github.com/users/JohnTitor/orgs", "repos_url": "https://api.github.com/users/JohnTitor/repos", "events_url": "https://api.github.com/users/JohnTitor/events{/privacy}", "received_events_url": "https://api.github.com/users/JohnTitor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "55562c7ddc0af4799cccae0c7c42328e992a533c", "url": "https://api.github.com/repos/rust-lang/rust/commits/55562c7ddc0af4799cccae0c7c42328e992a533c", "html_url": "https://github.com/rust-lang/rust/commit/55562c7ddc0af4799cccae0c7c42328e992a533c"}, {"sha": "bc3d7199e1dcb650ef17c7a5370665641819545d", "url": "https://api.github.com/repos/rust-lang/rust/commits/bc3d7199e1dcb650ef17c7a5370665641819545d", "html_url": "https://github.com/rust-lang/rust/commit/bc3d7199e1dcb650ef17c7a5370665641819545d"}], "stats": {"total": 18, "additions": 14, "deletions": 4}, "files": [{"sha": "afec497ee44d9f3203c062c61711e2e856f134d0", "filename": "library/core/src/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/e193f4697f11aed89329177d04c84bcd9ce1b424/library%2Fcore%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e193f4697f11aed89329177d04c84bcd9ce1b424/library%2Fcore%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Flib.rs?ref=e193f4697f11aed89329177d04c84bcd9ce1b424", "patch": "@@ -149,6 +149,7 @@\n #![feature(maybe_uninit_uninit_array)]\n #![feature(ptr_metadata)]\n #![feature(slice_ptr_get)]\n+#![feature(slice_split_at_unchecked)]\n #![feature(str_internals)]\n #![feature(utf16_extra)]\n #![feature(utf16_extra_const)]"}, {"sha": "38f05f471cde52a81d3057a32875282513ccce8f", "filename": "library/core/src/slice/mod.rs", "status": "modified", "additions": 13, "deletions": 4, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/e193f4697f11aed89329177d04c84bcd9ce1b424/library%2Fcore%2Fsrc%2Fslice%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e193f4697f11aed89329177d04c84bcd9ce1b424/library%2Fcore%2Fsrc%2Fslice%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fslice%2Fmod.rs?ref=e193f4697f11aed89329177d04c84bcd9ce1b424", "patch": "@@ -1541,13 +1541,14 @@ impl<T> [T] {\n     /// }\n     /// ```\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n+    #[rustc_const_unstable(feature = \"const_slice_split_at_not_mut\", issue = \"none\")]\n     #[inline]\n     #[track_caller]\n     #[must_use]\n-    pub fn split_at(&self, mid: usize) -> (&[T], &[T]) {\n+    pub const fn split_at(&self, mid: usize) -> (&[T], &[T]) {\n         assert!(mid <= self.len());\n         // SAFETY: `[ptr; mid]` and `[mid; len]` are inside `self`, which\n-        // fulfills the requirements of `from_raw_parts_mut`.\n+        // fulfills the requirements of `split_at_unchecked`.\n         unsafe { self.split_at_unchecked(mid) }\n     }\n \n@@ -1626,11 +1627,19 @@ impl<T> [T] {\n     /// }\n     /// ```\n     #[unstable(feature = \"slice_split_at_unchecked\", reason = \"new API\", issue = \"76014\")]\n+    #[rustc_const_unstable(feature = \"slice_split_at_unchecked\", issue = \"76014\")]\n     #[inline]\n     #[must_use]\n-    pub unsafe fn split_at_unchecked(&self, mid: usize) -> (&[T], &[T]) {\n+    pub const unsafe fn split_at_unchecked(&self, mid: usize) -> (&[T], &[T]) {\n+        // HACK: the const function `from_raw_parts` is used to make this\n+        // function const; previously the implementation used\n+        // `(self.get_unchecked(..mid), self.get_unchecked(mid..))`\n+\n+        let len = self.len();\n+        let ptr = self.as_ptr();\n+\n         // SAFETY: Caller has to check that `0 <= mid <= self.len()`\n-        unsafe { (self.get_unchecked(..mid), self.get_unchecked(mid..)) }\n+        unsafe { (from_raw_parts(ptr, mid), from_raw_parts(ptr.add(mid), len - mid)) }\n     }\n \n     /// Divides one mutable slice into two at an index, without doing bounds checking."}]}