{"sha": "0e5095d3cac11d4b569c6e1594bd07937556c812", "node_id": "MDY6Q29tbWl0NzI0NzEyOjBlNTA5NWQzY2FjMTFkNGI1NjljNmUxNTk0YmQwNzkzNzU1NmM4MTI=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2020-07-24T12:16:17Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-07-24T12:16:17Z"}, "message": "Merge #5519\n\n5519: Cache macro expansion in semantics r=matklad a=matklad\n\n #5497 accidentally made syntax highlighting quadratic, due to\n repeated tokentreeizing of macros.\n\n\n\nbors r+\n\ud83e\udd16\n\nCo-authored-by: Aleksey Kladov <aleksey.kladov@gmail.com>", "tree": {"sha": "0f7f092a20440cf912a70114ea352152dd5c6b5b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0f7f092a20440cf912a70114ea352152dd5c6b5b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0e5095d3cac11d4b569c6e1594bd07937556c812", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJfGtERCRBK7hj4Ov3rIwAAdHIIAGWWWr2O4qa9ZQhtSqx4OnrN\nSFpQxuQHXBTTw9P91RX64CCfQrI38WKsYSdSY5tkCRUsmWepQaZOvFt7qFhD7VjY\nO3YuBTPSUxPbo6eyvA/Eel6apI1X9DQ5ndpp8693HPyRUmr/YgITBdEJBO/9Qk6L\nL6jDy6g65HMjoobvvCx6vqxrSWrD+UI2/Xx02+ZhNtLQPqG+S1hSmywO90jsHL7g\n6A7gG38mnJevwnFZhwC4kx7a2aDl7q+Fwyb57zw2hb+G0w1zZqFyA4irWGylMdq4\nbnqkeqP+ithJIxLTnHJP6Zl0CD2SFq0+PFUVm8i/xMxoig9VJ9UOg61MTovPo30=\n=Guse\n-----END PGP SIGNATURE-----\n", "payload": "tree 0f7f092a20440cf912a70114ea352152dd5c6b5b\nparent 5febf27110460a1a554bd5c33aa35e2948f7688e\nparent a432f87d66bdfb8e9eef4f6d38d3d5efc2488c1f\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1595592977 +0000\ncommitter GitHub <noreply@github.com> 1595592977 +0000\n\nMerge #5519\n\n5519: Cache macro expansion in semantics r=matklad a=matklad\n\n #5497 accidentally made syntax highlighting quadratic, due to\n repeated tokentreeizing of macros.\n\n\n\nbors r+\n\ud83e\udd16\n\nCo-authored-by: Aleksey Kladov <aleksey.kladov@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0e5095d3cac11d4b569c6e1594bd07937556c812", "html_url": "https://github.com/rust-lang/rust/commit/0e5095d3cac11d4b569c6e1594bd07937556c812", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0e5095d3cac11d4b569c6e1594bd07937556c812/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5febf27110460a1a554bd5c33aa35e2948f7688e", "url": "https://api.github.com/repos/rust-lang/rust/commits/5febf27110460a1a554bd5c33aa35e2948f7688e", "html_url": "https://github.com/rust-lang/rust/commit/5febf27110460a1a554bd5c33aa35e2948f7688e"}, {"sha": "a432f87d66bdfb8e9eef4f6d38d3d5efc2488c1f", "url": "https://api.github.com/repos/rust-lang/rust/commits/a432f87d66bdfb8e9eef4f6d38d3d5efc2488c1f", "html_url": "https://github.com/rust-lang/rust/commit/a432f87d66bdfb8e9eef4f6d38d3d5efc2488c1f"}], "stats": {"total": 16, "additions": 14, "deletions": 2}, "files": [{"sha": "1436b1afee93ba89760036070e2d0d3e6d063009", "filename": "crates/ra_hir/src/semantics.rs", "status": "modified", "additions": 14, "deletions": 2, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/0e5095d3cac11d4b569c6e1594bd07937556c812/crates%2Fra_hir%2Fsrc%2Fsemantics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0e5095d3cac11d4b569c6e1594bd07937556c812/crates%2Fra_hir%2Fsrc%2Fsemantics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Fsemantics.rs?ref=0e5095d3cac11d4b569c6e1594bd07937556c812", "patch": "@@ -89,6 +89,7 @@ pub struct Semantics<'db, DB> {\n pub struct SemanticsImpl<'db> {\n     pub db: &'db dyn HirDatabase,\n     s2d_cache: RefCell<SourceToDefCache>,\n+    expansion_info_cache: RefCell<FxHashMap<HirFileId, Option<ExpansionInfo>>>,\n     cache: RefCell<FxHashMap<SyntaxNode, HirFileId>>,\n }\n \n@@ -275,7 +276,12 @@ impl<'db, DB: HirDatabase> Semantics<'db, DB> {\n \n impl<'db> SemanticsImpl<'db> {\n     fn new(db: &'db dyn HirDatabase) -> Self {\n-        Self { db, s2d_cache: Default::default(), cache: Default::default() }\n+        SemanticsImpl {\n+            db,\n+            s2d_cache: Default::default(),\n+            cache: Default::default(),\n+            expansion_info_cache: Default::default(),\n+        }\n     }\n \n     fn parse(&self, file_id: FileId) -> ast::SourceFile {\n@@ -328,7 +334,13 @@ impl<'db> SemanticsImpl<'db> {\n                 return None;\n             }\n             let file_id = sa.expand(self.db, token.with_value(&macro_call))?;\n-            let token = file_id.expansion_info(self.db.upcast())?.map_token_down(token.as_ref())?;\n+            let token = self\n+                .expansion_info_cache\n+                .borrow_mut()\n+                .entry(file_id)\n+                .or_insert_with(|| file_id.expansion_info(self.db.upcast()))\n+                .as_ref()?\n+                .map_token_down(token.as_ref())?;\n \n             self.cache(find_root(&token.value.parent()), token.file_id);\n "}]}