{"sha": "2cf686f2cdd6446a3cd47df0305ead40fabe85df", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJjZjY4NmYyY2RkNjQ0NmEzY2Q0N2RmMDMwNWVhZDQwZmFiZTg1ZGY=", "commit": {"author": {"name": "J\u00f6rg Thalheim", "email": "joerg@thalheim.io", "date": "2017-03-26T16:54:08Z"}, "committer": {"name": "J\u00f6rg Thalheim", "email": "joerg@thalheim.io", "date": "2017-03-26T17:14:03Z"}, "message": "Implement AsRawFd/IntoRawFd for RawFd\n\nThis is useful to build os abstraction like the nix crate does.\nIt allows to define functions, which accepts generic arguments\nof data structures convertible to RawFd, including RawFd itself.\nFor example:\n\n  fn write<FD: AsRawFd>(fd: FD, buf: &[u8]) -> Result<usize>\n\ninstead of:\n\n  fn write(fd: RawFd, buf: &[u8]) -> Result<usize>\n  write(foo.as_raw_fd(), buf);", "tree": {"sha": "fa62e1fd3d0c6319d3439eb98e40376f8e8e28c8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fa62e1fd3d0c6319d3439eb98e40376f8e8e28c8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2cf686f2cdd6446a3cd47df0305ead40fabe85df", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGTBAABCgB9FiEESroHOCrVfmuapOiNykEGuNfMefoFAljX9ttfFIAAAAAALgAo\naXNzdWVyLWZwckBub3RhdGlvbnMub3BlbnBncC5maWZ0aGhvcnNlbWFuLm5ldDRB\nQkEwNzM4MkFENTdFNkI5QUE0RTg4RENBNDEwNkI4RDdDQzc5RkEACgkQykEGuNfM\nefoBowf/VluIGtrVU131wI34FY9HCXvnwWz7cEC1ekt8DVkNcMvT9YKjtAse2aBm\nmpWlfT+BimqkKxOg/eejY/uSqZhEoz2vs4X37HUyTpuyP/dtANfa5yJgJl427T1F\nSyfZLOkPQDsaDtTH5ytBsPG+gQ4cIR0CDRWtByBavlpzo9iUfJsnxzJKHpGFnmEJ\njWZhYbmLyTdugHrE4hwyyUn34cfXHhGQeqjV9vSSol5JjWbhb5ADKR9hat8PgO/Z\nvqbcgQ+fUcG9DwNNIZujfnTbi3exrNb/8ncQBOvrKDtV0fWE6zhF6uEiIB1vGxZC\nV7yNcX0b+LNN+siEBQAMhPy1uZd9IQ==\n=L2tF\n-----END PGP SIGNATURE-----", "payload": "tree fa62e1fd3d0c6319d3439eb98e40376f8e8e28c8\nparent 7846dbe0c8de17f59cdfc3d2b914d58faad7eade\nauthor J\u00f6rg Thalheim <joerg@thalheim.io> 1490547248 +0200\ncommitter J\u00f6rg Thalheim <joerg@thalheim.io> 1490548443 +0200\n\nImplement AsRawFd/IntoRawFd for RawFd\n\nThis is useful to build os abstraction like the nix crate does.\nIt allows to define functions, which accepts generic arguments\nof data structures convertible to RawFd, including RawFd itself.\nFor example:\n\n  fn write<FD: AsRawFd>(fd: FD, buf: &[u8]) -> Result<usize>\n\ninstead of:\n\n  fn write(fd: RawFd, buf: &[u8]) -> Result<usize>\n  write(foo.as_raw_fd(), buf);\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2cf686f2cdd6446a3cd47df0305ead40fabe85df", "html_url": "https://github.com/rust-lang/rust/commit/2cf686f2cdd6446a3cd47df0305ead40fabe85df", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2cf686f2cdd6446a3cd47df0305ead40fabe85df/comments", "author": {"login": "Mic92", "id": 96200, "node_id": "MDQ6VXNlcjk2MjAw", "avatar_url": "https://avatars.githubusercontent.com/u/96200?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mic92", "html_url": "https://github.com/Mic92", "followers_url": "https://api.github.com/users/Mic92/followers", "following_url": "https://api.github.com/users/Mic92/following{/other_user}", "gists_url": "https://api.github.com/users/Mic92/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mic92/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mic92/subscriptions", "organizations_url": "https://api.github.com/users/Mic92/orgs", "repos_url": "https://api.github.com/users/Mic92/repos", "events_url": "https://api.github.com/users/Mic92/events{/privacy}", "received_events_url": "https://api.github.com/users/Mic92/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Mic92", "id": 96200, "node_id": "MDQ6VXNlcjk2MjAw", "avatar_url": "https://avatars.githubusercontent.com/u/96200?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mic92", "html_url": "https://github.com/Mic92", "followers_url": "https://api.github.com/users/Mic92/followers", "following_url": "https://api.github.com/users/Mic92/following{/other_user}", "gists_url": "https://api.github.com/users/Mic92/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mic92/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mic92/subscriptions", "organizations_url": "https://api.github.com/users/Mic92/orgs", "repos_url": "https://api.github.com/users/Mic92/repos", "events_url": "https://api.github.com/users/Mic92/events{/privacy}", "received_events_url": "https://api.github.com/users/Mic92/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7846dbe0c8de17f59cdfc3d2b914d58faad7eade", "url": "https://api.github.com/repos/rust-lang/rust/commits/7846dbe0c8de17f59cdfc3d2b914d58faad7eade", "html_url": "https://github.com/rust-lang/rust/commit/7846dbe0c8de17f59cdfc3d2b914d58faad7eade"}], "stats": {"total": 15, "additions": 15, "deletions": 0}, "files": [{"sha": "75aa72e3cff8c5cddc85c5cd47dcad13c0d44436", "filename": "src/libstd/sys/unix/ext/io.rs", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/2cf686f2cdd6446a3cd47df0305ead40fabe85df/src%2Flibstd%2Fsys%2Funix%2Fext%2Fio.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2cf686f2cdd6446a3cd47df0305ead40fabe85df/src%2Flibstd%2Fsys%2Funix%2Fext%2Fio.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Funix%2Fext%2Fio.rs?ref=2cf686f2cdd6446a3cd47df0305ead40fabe85df", "patch": "@@ -72,6 +72,13 @@ pub trait IntoRawFd {\n     fn into_raw_fd(self) -> RawFd;\n }\n \n+#[stable(feature = \"rust1\", since = \"1.0.0\")]\n+impl AsRawFd for RawFd {\n+    fn as_raw_fd(&self) -> RawFd {\n+        *self\n+    }\n+}\n+\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n impl AsRawFd for fs::File {\n     fn as_raw_fd(&self) -> RawFd {\n@@ -84,6 +91,14 @@ impl FromRawFd for fs::File {\n         fs::File::from_inner(sys::fs::File::from_inner(fd))\n     }\n }\n+\n+#[stable(feature = \"into_raw_os\", since = \"1.4.0\")]\n+impl IntoRawFd for RawFd {\n+    fn into_raw_fd(self) -> RawFd {\n+        self\n+    }\n+}\n+\n #[stable(feature = \"into_raw_os\", since = \"1.4.0\")]\n impl IntoRawFd for fs::File {\n     fn into_raw_fd(self) -> RawFd {"}]}