{"sha": "268b08b01bfd95d315c03a9e3a69f254176b2a35", "node_id": "C_kwDOAAsO6NoAKDI2OGIwOGIwMWJmZDk1ZDMxNWMwM2E5ZTNhNjlmMjU0MTc2YjJhMzU", "commit": {"author": {"name": "y21", "email": "30553356+y21@users.noreply.github.com", "date": "2023-06-03T15:17:56Z"}, "committer": {"name": "y21", "email": "30553356+y21@users.noreply.github.com", "date": "2023-06-03T15:17:56Z"}, "message": "do not use ty_adt_id from internal trait", "tree": {"sha": "929d01e305f02a0cbdbccf8ead4b8e80ac8a2202", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/929d01e305f02a0cbdbccf8ead4b8e80ac8a2202"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/268b08b01bfd95d315c03a9e3a69f254176b2a35", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/268b08b01bfd95d315c03a9e3a69f254176b2a35", "html_url": "https://github.com/rust-lang/rust/commit/268b08b01bfd95d315c03a9e3a69f254176b2a35", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/268b08b01bfd95d315c03a9e3a69f254176b2a35/comments", "author": {"login": "y21", "id": 30553356, "node_id": "MDQ6VXNlcjMwNTUzMzU2", "avatar_url": "https://avatars.githubusercontent.com/u/30553356?v=4", "gravatar_id": "", "url": "https://api.github.com/users/y21", "html_url": "https://github.com/y21", "followers_url": "https://api.github.com/users/y21/followers", "following_url": "https://api.github.com/users/y21/following{/other_user}", "gists_url": "https://api.github.com/users/y21/gists{/gist_id}", "starred_url": "https://api.github.com/users/y21/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/y21/subscriptions", "organizations_url": "https://api.github.com/users/y21/orgs", "repos_url": "https://api.github.com/users/y21/repos", "events_url": "https://api.github.com/users/y21/events{/privacy}", "received_events_url": "https://api.github.com/users/y21/received_events", "type": "User", "site_admin": false}, "committer": {"login": "y21", "id": 30553356, "node_id": "MDQ6VXNlcjMwNTUzMzU2", "avatar_url": "https://avatars.githubusercontent.com/u/30553356?v=4", "gravatar_id": "", "url": "https://api.github.com/users/y21", "html_url": "https://github.com/y21", "followers_url": "https://api.github.com/users/y21/followers", "following_url": "https://api.github.com/users/y21/following{/other_user}", "gists_url": "https://api.github.com/users/y21/gists{/gist_id}", "starred_url": "https://api.github.com/users/y21/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/y21/subscriptions", "organizations_url": "https://api.github.com/users/y21/orgs", "repos_url": "https://api.github.com/users/y21/repos", "events_url": "https://api.github.com/users/y21/events{/privacy}", "received_events_url": "https://api.github.com/users/y21/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6d2ba95d0099f1a656da44c7f868be0074e5b5e1", "url": "https://api.github.com/repos/rust-lang/rust/commits/6d2ba95d0099f1a656da44c7f868be0074e5b5e1", "html_url": "https://github.com/rust-lang/rust/commit/6d2ba95d0099f1a656da44c7f868be0074e5b5e1"}], "stats": {"total": 5, "additions": 2, "deletions": 3}, "files": [{"sha": "1044613c585c34d7ece9e560e5baacda98734377", "filename": "compiler/rustc_trait_selection/src/traits/error_reporting/suggestions.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/268b08b01bfd95d315c03a9e3a69f254176b2a35/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Ferror_reporting%2Fsuggestions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/268b08b01bfd95d315c03a9e3a69f254176b2a35/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Ferror_reporting%2Fsuggestions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Ferror_reporting%2Fsuggestions.rs?ref=268b08b01bfd95d315c03a9e3a69f254176b2a35", "patch": "@@ -27,7 +27,6 @@ use rustc_infer::infer::error_reporting::TypeErrCtxt;\n use rustc_infer::infer::type_variable::{TypeVariableOrigin, TypeVariableOriginKind};\n use rustc_infer::infer::{DefineOpaqueTypes, InferOk, LateBoundRegionConversionTime};\n use rustc_middle::hir::map;\n-use rustc_middle::query::Key;\n use rustc_middle::ty::error::TypeError::{self, Sorts};\n use rustc_middle::ty::{\n     self, suggest_arbitrary_trait_bound, suggest_constraining_type_param, AdtKind,\n@@ -3701,8 +3700,8 @@ impl<'tcx> TypeErrCtxtExt<'tcx> for TypeErrCtxt<'_, 'tcx> {\n         let Some(typeck_results) = self.typeck_results.as_ref() else { return };\n \n         // Make sure we're dealing with the `Option` type.\n-        let Some(ty_adt_did) = typeck_results.expr_ty_adjusted(expr).ty_adt_id() else { return };\n-        if !tcx.is_diagnostic_item(sym::Option, ty_adt_did) {\n+        let Some(option_ty_adt) = typeck_results.expr_ty_adjusted(expr).ty_adt_def() else { return };\n+        if !tcx.is_diagnostic_item(sym::Option, option_ty_adt.did()) {\n             return;\n         }\n "}]}