{"sha": "79757799185515835306e11bec35b3fd3887ee70", "node_id": "C_kwDOAAsO6NoAKDc5NzU3Nzk5MTg1NTE1ODM1MzA2ZTExYmVjMzViM2ZkMzg4N2VlNzA", "commit": {"author": {"name": "Nicholas Nethercote", "email": "n.nethercote@gmail.com", "date": "2023-04-11T04:24:59Z"}, "committer": {"name": "Nicholas Nethercote", "email": "n.nethercote@gmail.com", "date": "2023-04-11T04:56:42Z"}, "message": "Add `sym::anon`.", "tree": {"sha": "99c9d420a08048ac39b85762bb73cd8ee32e035f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/99c9d420a08048ac39b85762bb73cd8ee32e035f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/79757799185515835306e11bec35b3fd3887ee70", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/79757799185515835306e11bec35b3fd3887ee70", "html_url": "https://github.com/rust-lang/rust/commit/79757799185515835306e11bec35b3fd3887ee70", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/79757799185515835306e11bec35b3fd3887ee70/comments", "author": {"login": "nnethercote", "id": 1940286, "node_id": "MDQ6VXNlcjE5NDAyODY=", "avatar_url": "https://avatars.githubusercontent.com/u/1940286?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nnethercote", "html_url": "https://github.com/nnethercote", "followers_url": "https://api.github.com/users/nnethercote/followers", "following_url": "https://api.github.com/users/nnethercote/following{/other_user}", "gists_url": "https://api.github.com/users/nnethercote/gists{/gist_id}", "starred_url": "https://api.github.com/users/nnethercote/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nnethercote/subscriptions", "organizations_url": "https://api.github.com/users/nnethercote/orgs", "repos_url": "https://api.github.com/users/nnethercote/repos", "events_url": "https://api.github.com/users/nnethercote/events{/privacy}", "received_events_url": "https://api.github.com/users/nnethercote/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nnethercote", "id": 1940286, "node_id": "MDQ6VXNlcjE5NDAyODY=", "avatar_url": "https://avatars.githubusercontent.com/u/1940286?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nnethercote", "html_url": "https://github.com/nnethercote", "followers_url": "https://api.github.com/users/nnethercote/followers", "following_url": "https://api.github.com/users/nnethercote/following{/other_user}", "gists_url": "https://api.github.com/users/nnethercote/gists{/gist_id}", "starred_url": "https://api.github.com/users/nnethercote/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nnethercote/subscriptions", "organizations_url": "https://api.github.com/users/nnethercote/orgs", "repos_url": "https://api.github.com/users/nnethercote/repos", "events_url": "https://api.github.com/users/nnethercote/events{/privacy}", "received_events_url": "https://api.github.com/users/nnethercote/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bd7f301b20380c1e56e72d17310b89214fddb571", "url": "https://api.github.com/repos/rust-lang/rust/commits/bd7f301b20380c1e56e72d17310b89214fddb571", "html_url": "https://github.com/rust-lang/rust/commit/bd7f301b20380c1e56e72d17310b89214fddb571"}], "stats": {"total": 14, "additions": 6, "deletions": 8}, "files": [{"sha": "3790b2f34b3c73abe168e2869eca85c293ea0d26", "filename": "compiler/rustc_borrowck/src/type_check/mod.rs", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/79757799185515835306e11bec35b3fd3887ee70/compiler%2Frustc_borrowck%2Fsrc%2Ftype_check%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/79757799185515835306e11bec35b3fd3887ee70/compiler%2Frustc_borrowck%2Fsrc%2Ftype_check%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_borrowck%2Fsrc%2Ftype_check%2Fmod.rs?ref=79757799185515835306e11bec35b3fd3887ee70", "patch": "@@ -1339,14 +1339,11 @@ impl<'a, 'tcx> TypeChecker<'a, 'tcx> {\n                 };\n                 let (sig, map) = tcx.replace_late_bound_regions(sig, |br| {\n                     use crate::renumber::{BoundRegionInfo, RegionCtxt};\n-                    use rustc_span::Symbol;\n \n                     let region_ctxt_fn = || {\n                         let reg_info = match br.kind {\n                             ty::BoundRegionKind::BrAnon(Some(span)) => BoundRegionInfo::Span(span),\n-                            ty::BoundRegionKind::BrAnon(..) => {\n-                                BoundRegionInfo::Name(Symbol::intern(\"anon\"))\n-                            }\n+                            ty::BoundRegionKind::BrAnon(..) => BoundRegionInfo::Name(sym::anon),\n                             ty::BoundRegionKind::BrNamed(_, name) => BoundRegionInfo::Name(name),\n                             ty::BoundRegionKind::BrEnv => BoundRegionInfo::Name(sym::env),\n                         };"}, {"sha": "6b64e65518f5bf605637dc66b4bbc535e3406586", "filename": "compiler/rustc_borrowck/src/type_check/relate_tys.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/79757799185515835306e11bec35b3fd3887ee70/compiler%2Frustc_borrowck%2Fsrc%2Ftype_check%2Frelate_tys.rs", "raw_url": "https://github.com/rust-lang/rust/raw/79757799185515835306e11bec35b3fd3887ee70/compiler%2Frustc_borrowck%2Fsrc%2Ftype_check%2Frelate_tys.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_borrowck%2Fsrc%2Ftype_check%2Frelate_tys.rs?ref=79757799185515835306e11bec35b3fd3887ee70", "patch": "@@ -126,7 +126,7 @@ impl<'tcx> TypeRelatingDelegate<'tcx> for NllTypeRelatingDelegate<'_, '_, 'tcx>\n \n         let reg_info = match placeholder.bound.kind {\n             ty::BoundRegionKind::BrAnon(Some(span)) => BoundRegionInfo::Span(span),\n-            ty::BoundRegionKind::BrAnon(..) => BoundRegionInfo::Name(Symbol::intern(\"anon\")),\n+            ty::BoundRegionKind::BrAnon(..) => BoundRegionInfo::Name(sym::anon),\n             ty::BoundRegionKind::BrNamed(_, name) => BoundRegionInfo::Name(name),\n             ty::BoundRegionKind::BrEnv => BoundRegionInfo::Name(sym::env),\n         };"}, {"sha": "35dfc1f7d129a710383c9db23fed7d76b74f51ed", "filename": "compiler/rustc_borrowck/src/universal_regions.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/79757799185515835306e11bec35b3fd3887ee70/compiler%2Frustc_borrowck%2Fsrc%2Funiversal_regions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/79757799185515835306e11bec35b3fd3887ee70/compiler%2Frustc_borrowck%2Fsrc%2Funiversal_regions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_borrowck%2Fsrc%2Funiversal_regions.rs?ref=79757799185515835306e11bec35b3fd3887ee70", "patch": "@@ -24,7 +24,7 @@ use rustc_infer::infer::NllRegionVariableOrigin;\n use rustc_middle::ty::fold::TypeFoldable;\n use rustc_middle::ty::{self, InlineConstSubsts, InlineConstSubstsParts, RegionVid, Ty, TyCtxt};\n use rustc_middle::ty::{InternalSubsts, SubstsRef};\n-use rustc_span::symbol::kw;\n+use rustc_span::symbol::{kw, sym};\n use rustc_span::Symbol;\n use std::iter;\n \n@@ -783,7 +783,7 @@ impl<'cx, 'tcx> InferCtxtExt<'tcx> for BorrowckInferCtxt<'cx, 'tcx> {\n             let region_vid = {\n                 let name = match br.kind.get_name() {\n                     Some(name) => name,\n-                    _ => Symbol::intern(\"anon\"),\n+                    _ => sym::anon,\n                 };\n \n                 self.next_nll_region_var(origin, || RegionCtxt::Bound(BoundRegionInfo::Name(name)))"}, {"sha": "086ceebd24d6021f5bce78f80b93bc6f20dba97c", "filename": "compiler/rustc_middle/src/ty/sty.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/79757799185515835306e11bec35b3fd3887ee70/compiler%2Frustc_middle%2Fsrc%2Fty%2Fsty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/79757799185515835306e11bec35b3fd3887ee70/compiler%2Frustc_middle%2Fsrc%2Fty%2Fsty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fty%2Fsty.rs?ref=79757799185515835306e11bec35b3fd3887ee70", "patch": "@@ -1637,7 +1637,7 @@ impl<'tcx> Region<'tcx> {\n     pub fn get_name_or_anon(self) -> Symbol {\n         match self.get_name() {\n             Some(name) => name,\n-            None => Symbol::intern(\"anon\"),\n+            None => sym::anon,\n         }\n     }\n "}, {"sha": "84a4f10b8ab13b8875fb8d0edc3c0ce369ec2550", "filename": "compiler/rustc_span/src/symbol.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/79757799185515835306e11bec35b3fd3887ee70/compiler%2Frustc_span%2Fsrc%2Fsymbol.rs", "raw_url": "https://github.com/rust-lang/rust/raw/79757799185515835306e11bec35b3fd3887ee70/compiler%2Frustc_span%2Fsrc%2Fsymbol.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_span%2Fsrc%2Fsymbol.rs?ref=79757799185515835306e11bec35b3fd3887ee70", "patch": "@@ -357,6 +357,7 @@ symbols! {\n         always,\n         and,\n         and_then,\n+        anon,\n         anonymous_lifetime_in_impl_trait,\n         any,\n         append_const_msg,"}]}