{"sha": "4e86aeb7f9f9c16a3b7d43b7124ae6885bc9b71e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjRlODZhZWI3ZjlmOWMxNmEzYjdkNDNiNzEyNGFlNjg4NWJjOWI3MWU=", "commit": {"author": {"name": "miguel raz", "email": "miguelraz@gmail.com", "date": "2021-06-02T00:31:34Z"}, "committer": {"name": "miguel raz", "email": "miguelraz@gmail.com", "date": "2021-06-02T00:31:34Z"}, "message": "finish nbody", "tree": {"sha": "d0436727690928f2e834644f0219f37da25b2a18", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d0436727690928f2e834644f0219f37da25b2a18"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4e86aeb7f9f9c16a3b7d43b7124ae6885bc9b71e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4e86aeb7f9f9c16a3b7d43b7124ae6885bc9b71e", "html_url": "https://github.com/rust-lang/rust/commit/4e86aeb7f9f9c16a3b7d43b7124ae6885bc9b71e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4e86aeb7f9f9c16a3b7d43b7124ae6885bc9b71e/comments", "author": {"login": "miguelraz", "id": 13056181, "node_id": "MDQ6VXNlcjEzMDU2MTgx", "avatar_url": "https://avatars.githubusercontent.com/u/13056181?v=4", "gravatar_id": "", "url": "https://api.github.com/users/miguelraz", "html_url": "https://github.com/miguelraz", "followers_url": "https://api.github.com/users/miguelraz/followers", "following_url": "https://api.github.com/users/miguelraz/following{/other_user}", "gists_url": "https://api.github.com/users/miguelraz/gists{/gist_id}", "starred_url": "https://api.github.com/users/miguelraz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/miguelraz/subscriptions", "organizations_url": "https://api.github.com/users/miguelraz/orgs", "repos_url": "https://api.github.com/users/miguelraz/repos", "events_url": "https://api.github.com/users/miguelraz/events{/privacy}", "received_events_url": "https://api.github.com/users/miguelraz/received_events", "type": "User", "site_admin": false}, "committer": {"login": "miguelraz", "id": 13056181, "node_id": "MDQ6VXNlcjEzMDU2MTgx", "avatar_url": "https://avatars.githubusercontent.com/u/13056181?v=4", "gravatar_id": "", "url": "https://api.github.com/users/miguelraz", "html_url": "https://github.com/miguelraz", "followers_url": "https://api.github.com/users/miguelraz/followers", "following_url": "https://api.github.com/users/miguelraz/following{/other_user}", "gists_url": "https://api.github.com/users/miguelraz/gists{/gist_id}", "starred_url": "https://api.github.com/users/miguelraz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/miguelraz/subscriptions", "organizations_url": "https://api.github.com/users/miguelraz/orgs", "repos_url": "https://api.github.com/users/miguelraz/repos", "events_url": "https://api.github.com/users/miguelraz/events{/privacy}", "received_events_url": "https://api.github.com/users/miguelraz/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5557907098d0c9269d6d6643ead23d9877ee63ab", "url": "https://api.github.com/repos/rust-lang/rust/commits/5557907098d0c9269d6d6643ead23d9877ee63ab", "html_url": "https://github.com/rust-lang/rust/commit/5557907098d0c9269d6d6643ead23d9877ee63ab"}], "stats": {"total": 39, "additions": 18, "deletions": 21}, "files": [{"sha": "5873f311947e71b49f4811bd34fcb747462a3732", "filename": "crates/core_simd/examples/nbody.rs", "status": "modified", "additions": 18, "deletions": 21, "changes": 39, "blob_url": "https://github.com/rust-lang/rust/blob/4e86aeb7f9f9c16a3b7d43b7124ae6885bc9b71e/crates%2Fcore_simd%2Fexamples%2Fnbody.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4e86aeb7f9f9c16a3b7d43b7124ae6885bc9b71e/crates%2Fcore_simd%2Fexamples%2Fnbody.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fcore_simd%2Fexamples%2Fnbody.rs?ref=4e86aeb7f9f9c16a3b7d43b7124ae6885bc9b71e", "patch": "@@ -1,3 +1,6 @@\n+/// Benchmarks game nbody code\n+/// Taken from the  `packed_simd` crate\n+/// Run this benchmark with `cargo test --example body`\n use core_simd::*;\n \n use std::f64::consts::PI;\n@@ -126,11 +129,14 @@ pub fn advance(bodies: &mut [Body; N_BODIES], dt: f64) {\n     let mut mag = [0.0; N];\n     let mut i = 0;\n     while i < N {\n-        let d2s = f64x2::from_array([(r[i] * r[i]).horizontal_sum(), (r[i + 1] * r[i + 1]).horizontal_sum()]);\n+        let d2s = f64x2::from_array([\n+            (r[i] * r[i]).horizontal_sum(),\n+            (r[i + 1] * r[i + 1]).horizontal_sum(),\n+        ]);\n         let dmags = f64x2::splat(dt) / (d2s * d2s.sqrt());\n         // dmags.write_to_slice_unaligned(&mut mag[i..]);\n         mag[i] = dmags[0];\n-        mag[i+1] = dmags[1];\n+        mag[i + 1] = dmags[1];\n         i += 2;\n     }\n \n@@ -166,28 +172,19 @@ pub fn run(n: usize) -> (f64, f64) {\n     (energy_before, energy_after)\n }\n \n-const OUTPUT: [f64; 2] = [-0.169075164, -0.169087605];\n+fn approx_eq_f32(a: f32, b: f32) -> bool {\n+    (a - b).abs() < 0.00000001\n+}\n+\n #[cfg(test)]\n mod tests {\n     #[test]\n     fn test() {\n-        let mut out: Vec<u8> = Vec::new();\n-        run(&mut out, 1000, 0);\n-        for &(size, a_e, b_e) in crate::RESULTS {\n-            let (a, b) = super::run(size);\n-            assert_eq!(format!(\"{:.9}\", a), a_e);\n-            assert_eq!(format!(\"{:.9}\", b), b_e);\n-        }\n+        use super::*;\n+        const OUTPUT: [f64; 2] = [-0.169075164, -0.169087605];\n+        let (energy_before, energy_after) = super::run(1000);\n+        assert!(approx_eq_f32(energy_before as f32, OUTPUT[0] as f32));\n+        assert!(approx_eq_f32(energy_after as f32, OUTPUT[1] as f32));\n+        // }\n     }\n }\n-\n-\n-fn main() {\n-    //let n: usize = std::env::args()\n-    //.nth(1)\n-    //.expect(\"need one arg\")\n-    //.parse()\n-    //.expect(\"argument should be a usize\");\n-    //run(&mut std::io::stdout(), n, alg);\n-    println!(\"{:?}\", run(10));\n-}"}]}