{"sha": "c4375c9dfdd7f31de909f6e9384bac1bf37b44da", "node_id": "MDY6Q29tbWl0NzI0NzEyOmM0Mzc1YzlkZmRkN2YzMWRlOTA5ZjZlOTM4NGJhYzFiZjM3YjQ0ZGE=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2019-11-29T11:35:03Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2019-11-29T11:35:03Z"}, "message": "Auto merge of #66645 - RalfJung:dereferenceable, r=pnkfelix\n\nremove the 'dereferenceable' attribute from Box\n\nFixes https://github.com/rust-lang/rust/issues/66600\n\nr? @eddyb @rkruppe", "tree": {"sha": "48ff1fdfe6f3945cc4ae39abd2815042ad52bbc4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/48ff1fdfe6f3945cc4ae39abd2815042ad52bbc4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c4375c9dfdd7f31de909f6e9384bac1bf37b44da", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c4375c9dfdd7f31de909f6e9384bac1bf37b44da", "html_url": "https://github.com/rust-lang/rust/commit/c4375c9dfdd7f31de909f6e9384bac1bf37b44da", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c4375c9dfdd7f31de909f6e9384bac1bf37b44da/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fe969f4ec67a5bd317818cbc7a648c5795af15fa", "url": "https://api.github.com/repos/rust-lang/rust/commits/fe969f4ec67a5bd317818cbc7a648c5795af15fa", "html_url": "https://github.com/rust-lang/rust/commit/fe969f4ec67a5bd317818cbc7a648c5795af15fa"}, {"sha": "d0b983307b1d4469396389e54b9d9ab2b5f43c48", "url": "https://api.github.com/repos/rust-lang/rust/commits/d0b983307b1d4469396389e54b9d9ab2b5f43c48", "html_url": "https://github.com/rust-lang/rust/commit/d0b983307b1d4469396389e54b9d9ab2b5f43c48"}], "stats": {"total": 15, "additions": 13, "deletions": 2}, "files": [{"sha": "c67e6a0a13e635578d6213af168644cfddd46ec1", "filename": "src/librustc/ty/layout.rs", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/c4375c9dfdd7f31de909f6e9384bac1bf37b44da/src%2Flibrustc%2Fty%2Flayout.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c4375c9dfdd7f31de909f6e9384bac1bf37b44da/src%2Flibrustc%2Fty%2Flayout.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Flayout.rs?ref=c4375c9dfdd7f31de909f6e9384bac1bf37b44da", "patch": "@@ -2526,9 +2526,16 @@ where\n \n             if let Some(pointee) = layout.pointee_info_at(cx, offset) {\n                 if let Some(kind) = pointee.safe {\n-                    attrs.pointee_size = pointee.size;\n                     attrs.pointee_align = Some(pointee.align);\n \n+                    // `Box` (`UniqueBorrowed`) are not necessarily dereferencable\n+                    // for the entire duration of the function as they can be deallocated\n+                    // any time. Set their valid size to 0.\n+                    attrs.pointee_size = match kind {\n+                        PointerKind::UniqueOwned => Size::ZERO,\n+                        _ => pointee.size\n+                    };\n+\n                     // `Box` pointer parameters never alias because ownership is transferred\n                     // `&mut` pointer parameters never alias other parameters,\n                     // or mutable global data"}, {"sha": "3a3ad763790ba49baa3507d9459f88da0ac83984", "filename": "src/librustc_target/abi/call/mod.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c4375c9dfdd7f31de909f6e9384bac1bf37b44da/src%2Flibrustc_target%2Fabi%2Fcall%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c4375c9dfdd7f31de909f6e9384bac1bf37b44da/src%2Flibrustc_target%2Fabi%2Fcall%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fabi%2Fcall%2Fmod.rs?ref=c4375c9dfdd7f31de909f6e9384bac1bf37b44da", "patch": "@@ -69,6 +69,8 @@ mod attr_impl {\n #[derive(Copy, Clone, PartialEq, Eq, Debug)]\n pub struct ArgAttributes {\n     pub regular: ArgAttribute,\n+    /// The minimum size of the pointee, guaranteed to be valid for the duration of the whole call\n+    /// (corresponding to LLVM's dereferenceable and dereferenceable_or_null attributes).\n     pub pointee_size: Size,\n     pub pointee_align: Option<Align>\n }"}, {"sha": "5c9aa48c0a5d6ba2e0c5e8a1ab042d03857d5e93", "filename": "src/test/codegen/function-arguments.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/c4375c9dfdd7f31de909f6e9384bac1bf37b44da/src%2Ftest%2Fcodegen%2Ffunction-arguments.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c4375c9dfdd7f31de909f6e9384bac1bf37b44da/src%2Ftest%2Fcodegen%2Ffunction-arguments.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcodegen%2Ffunction-arguments.rs?ref=c4375c9dfdd7f31de909f6e9384bac1bf37b44da", "patch": "@@ -65,7 +65,9 @@ pub fn indirect_struct(_: S) {\n pub fn borrowed_struct(_: &S) {\n }\n \n-// CHECK: noalias align 4 dereferenceable(4) i32* @_box(i32* noalias align 4 dereferenceable(4) %x)\n+// `Box` can get deallocated during execution of the function, so it should\n+// not get `dereferenceable`.\n+// CHECK: noalias nonnull align 4 i32* @_box(i32* noalias nonnull align 4 %x)\n #[no_mangle]\n pub fn _box(x: Box<i32>) -> Box<i32> {\n   x"}]}