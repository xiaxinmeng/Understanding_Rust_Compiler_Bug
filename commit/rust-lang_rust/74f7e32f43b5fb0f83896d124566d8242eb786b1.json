{"sha": "74f7e32f43b5fb0f83896d124566d8242eb786b1", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc0ZjdlMzJmNDNiNWZiMGY4Mzg5NmQxMjQ1NjZkODI0MmViNzg2YjE=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2020-11-13T20:06:46Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2020-11-13T20:06:46Z"}, "message": "Auto merge of #78888 - richkadel:llvm-coverage-tests, r=tmandry\n\nFix and re-enable two coverage tests on MacOS\n\nNote, in the coverage-reports test, the comment about MacOS was wrong.\nThe setting is based on config.toml llvm `optimize` setting. There\ndoesn't appear to be any environment variable I can check, and I\ndon't think we should add one. Testing the binary itself is a more\nreliable way to check anyway.\n\nFor the coverage-spanview test, I removed the dependency on sed\naltogether, which is much less ugly than trying to work around the\nMacOS sed differences.\n\nI tested these changes on Linux, Windows, and Mac.\n\nr? `@tmandry`\nFYI `@wesleywiser`", "tree": {"sha": "eb2a27df937c5ad27d36be6a64c649ecc130cc50", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/eb2a27df937c5ad27d36be6a64c649ecc130cc50"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/74f7e32f43b5fb0f83896d124566d8242eb786b1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/74f7e32f43b5fb0f83896d124566d8242eb786b1", "html_url": "https://github.com/rust-lang/rust/commit/74f7e32f43b5fb0f83896d124566d8242eb786b1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/74f7e32f43b5fb0f83896d124566d8242eb786b1/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "89bce3e9080a995c59149cc36962048cd9f56f63", "url": "https://api.github.com/repos/rust-lang/rust/commits/89bce3e9080a995c59149cc36962048cd9f56f63", "html_url": "https://github.com/rust-lang/rust/commit/89bce3e9080a995c59149cc36962048cd9f56f63"}, {"sha": "fe56d267cae200d0722c3304e893c0d3f91d68e8", "url": "https://api.github.com/repos/rust-lang/rust/commits/fe56d267cae200d0722c3304e893c0d3f91d68e8", "html_url": "https://github.com/rust-lang/rust/commit/fe56d267cae200d0722c3304e893c0d3f91d68e8"}], "stats": {"total": 58, "additions": 23, "deletions": 35}, "files": [{"sha": "1e2aa056e400888d5f0730bc3a5bd50a62c8fb8d", "filename": "src/test/run-make-fulldeps/coverage-reports-base/Makefile", "status": "modified", "additions": 6, "deletions": 8, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/74f7e32f43b5fb0f83896d124566d8242eb786b1/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-base%2FMakefile", "raw_url": "https://github.com/rust-lang/rust/raw/74f7e32f43b5fb0f83896d124566d8242eb786b1/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-base%2FMakefile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-base%2FMakefile?ref=74f7e32f43b5fb0f83896d124566d8242eb786b1", "patch": "@@ -13,15 +13,13 @@\n BASEDIR=../coverage-reports-base\n SOURCEDIR=../coverage\n \n-ifeq ($(UNAME),Darwin)\n-# FIXME(richkadel): It appears that --debug is not available on MacOS even when not running\n-# under CI.\n-NO_LLVM_ASSERTIONS=1\n-endif\n-\n # The `llvm-cov show` flag `--debug`, used to generate the `counters` output files, is only enabled\n-# if LLVM assertions are enabled. Some CI builds disable debug assertions.\n-ifndef NO_LLVM_ASSERTIONS\n+# if LLVM assertions are enabled. Requires Rust config `llvm/optimize` and not\n+# `llvm/release_debuginfo`. Note that some CI builds disable debug assertions (by setting\n+# `NO_LLVM_ASSERTIONS=1`), so it is not OK to fail the test, but `bless`ed test results cannot be\n+# generated without debug assertions.\n+LLVM_COV_DEBUG := $(shell \"$(LLVM_BIN_DIR)\"/llvm-cov show --debug 2>&1 | grep -q \"Unknown command line argument '--debug'\"; echo $$?)\n+ifeq ($(LLVM_COV_DEBUG), 1)\n DEBUG_FLAG=--debug\n endif\n "}, {"sha": "03ef04776a03b2bc12161aec14ade6ea9da9fb5c", "filename": "src/test/run-make-fulldeps/coverage-spanview-base/Makefile", "status": "modified", "additions": 17, "deletions": 27, "changes": 44, "blob_url": "https://github.com/rust-lang/rust/blob/74f7e32f43b5fb0f83896d124566d8242eb786b1/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-base%2FMakefile", "raw_url": "https://github.com/rust-lang/rust/raw/74f7e32f43b5fb0f83896d124566d8242eb786b1/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-base%2FMakefile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-base%2FMakefile?ref=74f7e32f43b5fb0f83896d124566d8242eb786b1", "patch": "@@ -9,9 +9,20 @@\n BASEDIR=../coverage-spanview-base\n SOURCEDIR=../coverage\n \n-ifeq ($(UNAME),Darwin)\n-SED_HAS_ISSUES=1\n-endif\n+define SPANVIEW_HEADER\n+<!DOCTYPE html>\n+<!--\n+\n+Preview this file as rendered HTML from the github source at:\n+https://htmlpreview.github.io/?https://github.com/rust-lang/rust/blob/master/src/test/run-make-fulldeps/coverage-spanview-base/expected_mir_dump.%s/%s\n+\n+For revisions in Pull Requests (PR):\n+  * Replace \"rust-lang\" with the github PR author\n+  * Replace \"master\" with the PR branch name\n+\n+-->\n+endef\n+export SPANVIEW_HEADER\n \n all: $(patsubst $(SOURCEDIR)/%.rs,%,$(wildcard $(SOURCEDIR)/*.rs))\n \n@@ -33,31 +44,12 @@ endif\n \t\t\t-Zdump-mir-spanview \\\n \t\t\t-Zdump-mir-dir=\"$(TMPDIR)\"/mir_dump.$@\n \n-ifdef SED_HAS_ISSUES\n-\t# FIXME(richkadel): MacOS's default sed has some significant limitations. Until I've come up\n-\t# with a better workaround, I'm disabling this test for MacOS.\n-\t#\n-\t# For future reference, see if `gsed` is available as an alternative.\n-\twhich gsed || echo \"no gsed\"\n-else\n-\n \tfor path in \"$(TMPDIR)\"/mir_dump.$@/*; do \\\n-\t\techo $$path; \\\n \t\tfile=\"$$(basename \"$$path\")\"; \\\n-\t\techo $$file; \\\n \t\turlescaped=\"$$(\"$(PYTHON)\" $(BASEDIR)/escape_url.py $$file)\" || exit $$?; \\\n-\t\techo $$urlescaped; \\\n-\t\tsed -i -e '1a\\\n-<!--\\\n-\\\n-Preview this file as rendered HTML from the github source at:\\\n-https://htmlpreview.github.io/?https://github.com/rust-lang/rust/blob/master/src/test/run-make-fulldeps/coverage-spanview-base/expected_mir_dump.$@/'\"$$urlescaped\"'\\\n-\\\n-For revisions in Pull Requests (PR):\\\n-  * Replace \"rust-lang\" with the github PR author\\\n-  * Replace \"master\" with the PR branch name\\\n-\\\n--->' \"$$path\"; \\\n+\t\tprintf \"$$SPANVIEW_HEADER\\n\" \"$@\" \"$$urlescaped\" > \"$$path\".modified; \\\n+\t\ttail -n +2 \"$$path\" >> \"$$path\".modified; \\\n+\t\tmv \"$$path\".modified \"$$path\"; \\\n \tdone && true # for/done ends in non-zero status\n \n ifdef RUSTC_BLESS_TEST\n@@ -70,5 +62,3 @@ else\n \tcp \"$(TMPDIR)\"/mir_dump.$@/*InstrumentCoverage.0.html \"$(TMPDIR)\"/actual_mir_dump.$@/\n \t$(DIFF) -r expected_mir_dump.$@/ \"$(TMPDIR)\"/actual_mir_dump.$@/\n endif\n-\n-endif"}]}