{"sha": "f7c76ad6624118c96717298fb0a8e6f84b5a9265", "node_id": "C_kwDOAAsO6NoAKGY3Yzc2YWQ2NjI0MTE4Yzk2NzE3Mjk4ZmIwYThlNmY4NGI1YTkyNjU", "commit": {"author": {"name": "Michael Goulet", "email": "michael@errs.io", "date": "2022-12-11T19:46:58Z"}, "committer": {"name": "Michael Goulet", "email": "michael@errs.io", "date": "2022-12-11T19:48:24Z"}, "message": "bug! with a better error message for failing Instance::resolve", "tree": {"sha": "07919b89799c9c49370cb960fa51f4d7402bd6a3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/07919b89799c9c49370cb960fa51f4d7402bd6a3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f7c76ad6624118c96717298fb0a8e6f84b5a9265", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f7c76ad6624118c96717298fb0a8e6f84b5a9265", "html_url": "https://github.com/rust-lang/rust/commit/f7c76ad6624118c96717298fb0a8e6f84b5a9265", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f7c76ad6624118c96717298fb0a8e6f84b5a9265/comments", "author": {"login": "compiler-errors", "id": 3674314, "node_id": "MDQ6VXNlcjM2NzQzMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3674314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/compiler-errors", "html_url": "https://github.com/compiler-errors", "followers_url": "https://api.github.com/users/compiler-errors/followers", "following_url": "https://api.github.com/users/compiler-errors/following{/other_user}", "gists_url": "https://api.github.com/users/compiler-errors/gists{/gist_id}", "starred_url": "https://api.github.com/users/compiler-errors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/compiler-errors/subscriptions", "organizations_url": "https://api.github.com/users/compiler-errors/orgs", "repos_url": "https://api.github.com/users/compiler-errors/repos", "events_url": "https://api.github.com/users/compiler-errors/events{/privacy}", "received_events_url": "https://api.github.com/users/compiler-errors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "compiler-errors", "id": 3674314, "node_id": "MDQ6VXNlcjM2NzQzMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3674314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/compiler-errors", "html_url": "https://github.com/compiler-errors", "followers_url": "https://api.github.com/users/compiler-errors/followers", "following_url": "https://api.github.com/users/compiler-errors/following{/other_user}", "gists_url": "https://api.github.com/users/compiler-errors/gists{/gist_id}", "starred_url": "https://api.github.com/users/compiler-errors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/compiler-errors/subscriptions", "organizations_url": "https://api.github.com/users/compiler-errors/orgs", "repos_url": "https://api.github.com/users/compiler-errors/repos", "events_url": "https://api.github.com/users/compiler-errors/events{/privacy}", "received_events_url": "https://api.github.com/users/compiler-errors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "34336b8d94cee06628f0f4d9d932634135e32a38", "url": "https://api.github.com/repos/rust-lang/rust/commits/34336b8d94cee06628f0f4d9d932634135e32a38", "html_url": "https://github.com/rust-lang/rust/commit/34336b8d94cee06628f0f4d9d932634135e32a38"}], "stats": {"total": 7, "additions": 3, "deletions": 4}, "files": [{"sha": "98b5fb1cce28531eb856e758cde8061b8ae15426", "filename": "src/abi/mod.rs", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/f7c76ad6624118c96717298fb0a8e6f84b5a9265/src%2Fabi%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f7c76ad6624118c96717298fb0a8e6f84b5a9265/src%2Fabi%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fabi%2Fmod.rs?ref=f7c76ad6624118c96717298fb0a8e6f84b5a9265", "patch": "@@ -349,10 +349,9 @@ pub(crate) fn codegen_terminator_call<'tcx>(\n \n     // Handle special calls like intrinsics and empty drop glue.\n     let instance = if let ty::FnDef(def_id, substs) = *fn_ty.kind() {\n-        let instance = ty::Instance::resolve(fx.tcx, ty::ParamEnv::reveal_all(), def_id, substs)\n-            .unwrap()\n-            .unwrap()\n-            .polymorphize(fx.tcx);\n+        let instance =\n+            ty::Instance::expect_resolve(fx.tcx, ty::ParamEnv::reveal_all(), def_id, substs)\n+                .polymorphize(fx.tcx);\n \n         if fx.tcx.symbol_name(instance).name.starts_with(\"llvm.\") {\n             crate::intrinsics::codegen_llvm_intrinsic_call("}]}