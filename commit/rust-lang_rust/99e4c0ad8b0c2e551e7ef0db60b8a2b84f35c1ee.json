{"sha": "99e4c0ad8b0c2e551e7ef0db60b8a2b84f35c1ee", "node_id": "MDY6Q29tbWl0NzI0NzEyOjk5ZTRjMGFkOGIwYzJlNTUxZTdlZjBkYjYwYjhhMmI4NGYzNWMxZWU=", "commit": {"author": {"name": "Simonas Kazlauskas", "email": "git@kazlauskas.me", "date": "2017-03-22T16:39:41Z"}, "committer": {"name": "Simonas Kazlauskas", "email": "git@kazlauskas.me", "date": "2017-03-22T16:43:01Z"}, "message": "Tracking issue numbers", "tree": {"sha": "c648ae50c1b396898f2e9f75cdf7265ddbe5f6c8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c648ae50c1b396898f2e9f75cdf7265ddbe5f6c8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/99e4c0ad8b0c2e551e7ef0db60b8a2b84f35c1ee", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/99e4c0ad8b0c2e551e7ef0db60b8a2b84f35c1ee", "html_url": "https://github.com/rust-lang/rust/commit/99e4c0ad8b0c2e551e7ef0db60b8a2b84f35c1ee", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/99e4c0ad8b0c2e551e7ef0db60b8a2b84f35c1ee/comments", "author": {"login": "nagisa", "id": 679122, "node_id": "MDQ6VXNlcjY3OTEyMg==", "avatar_url": "https://avatars.githubusercontent.com/u/679122?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nagisa", "html_url": "https://github.com/nagisa", "followers_url": "https://api.github.com/users/nagisa/followers", "following_url": "https://api.github.com/users/nagisa/following{/other_user}", "gists_url": "https://api.github.com/users/nagisa/gists{/gist_id}", "starred_url": "https://api.github.com/users/nagisa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nagisa/subscriptions", "organizations_url": "https://api.github.com/users/nagisa/orgs", "repos_url": "https://api.github.com/users/nagisa/repos", "events_url": "https://api.github.com/users/nagisa/events{/privacy}", "received_events_url": "https://api.github.com/users/nagisa/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nagisa", "id": 679122, "node_id": "MDQ6VXNlcjY3OTEyMg==", "avatar_url": "https://avatars.githubusercontent.com/u/679122?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nagisa", "html_url": "https://github.com/nagisa", "followers_url": "https://api.github.com/users/nagisa/followers", "following_url": "https://api.github.com/users/nagisa/following{/other_user}", "gists_url": "https://api.github.com/users/nagisa/gists{/gist_id}", "starred_url": "https://api.github.com/users/nagisa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nagisa/subscriptions", "organizations_url": "https://api.github.com/users/nagisa/orgs", "repos_url": "https://api.github.com/users/nagisa/repos", "events_url": "https://api.github.com/users/nagisa/events{/privacy}", "received_events_url": "https://api.github.com/users/nagisa/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2f0dd63bbe83938b9eda5b6076543d420bae2f2b", "url": "https://api.github.com/repos/rust-lang/rust/commits/2f0dd63bbe83938b9eda5b6076543d420bae2f2b", "html_url": "https://github.com/rust-lang/rust/commit/2f0dd63bbe83938b9eda5b6076543d420bae2f2b"}], "stats": {"total": 28, "additions": 14, "deletions": 14}, "files": [{"sha": "4fe2b826c96f5b7d61a4084a825c0ad008ba62bd", "filename": "src/libcollections/str.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/99e4c0ad8b0c2e551e7ef0db60b8a2b84f35c1ee/src%2Flibcollections%2Fstr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/99e4c0ad8b0c2e551e7ef0db60b8a2b84f35c1ee/src%2Flibcollections%2Fstr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcollections%2Fstr.rs?ref=99e4c0ad8b0c2e551e7ef0db60b8a2b84f35c1ee", "patch": "@@ -306,7 +306,7 @@ impl str {\n     /// assert!(v.get(..8).is_none());\n     /// assert!(v.get(..42).is_none());\n     /// ```\n-    #[unstable(feature = \"str_checked_slicing\", issue = \"0\")]\n+    #[unstable(feature = \"str_checked_slicing\", issue = \"39932\")]\n     #[inline]\n     pub fn get<I: SliceIndex<str>>(&self, i: I) -> Option<&I::Output> {\n         core_str::StrExt::get(self, i)\n@@ -327,7 +327,7 @@ impl str {\n     /// assert!(v.get_mut(..8).is_none());\n     /// assert!(v.get_mut(..42).is_none());\n     /// ```\n-    #[unstable(feature = \"str_checked_slicing\", issue = \"0\")]\n+    #[unstable(feature = \"str_checked_slicing\", issue = \"39932\")]\n     #[inline]\n     pub fn get_mut<I: SliceIndex<str>>(&mut self, i: I) -> Option<&mut I::Output> {\n         core_str::StrExt::get_mut(self, i)\n@@ -360,7 +360,7 @@ impl str {\n     ///     assert_eq!(\"\ud83c\udf0f\", v.get_unchecked(7..11));\n     /// }\n     /// ```\n-    #[unstable(feature = \"str_checked_slicing\", issue = \"0\")]\n+    #[unstable(feature = \"str_checked_slicing\", issue = \"39932\")]\n     #[inline]\n     pub unsafe fn get_unchecked<I: SliceIndex<str>>(&self, i: I) -> &I::Output {\n         core_str::StrExt::get_unchecked(self, i)\n@@ -393,7 +393,7 @@ impl str {\n     ///     assert_eq!(\"\ud83c\udf0f\", v.get_unchecked_mut(7..11));\n     /// }\n     /// ```\n-    #[unstable(feature = \"str_checked_slicing\", issue = \"0\")]\n+    #[unstable(feature = \"str_checked_slicing\", issue = \"39932\")]\n     #[inline]\n     pub unsafe fn get_unchecked_mut<I: SliceIndex<str>>(&mut self, i: I) -> &mut I::Output {\n         core_str::StrExt::get_unchecked_mut(self, i)"}, {"sha": "b6c421ecd320169077b0523ed5299365846db1a4", "filename": "src/libcore/str/mod.rs", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/99e4c0ad8b0c2e551e7ef0db60b8a2b84f35c1ee/src%2Flibcore%2Fstr%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/99e4c0ad8b0c2e551e7ef0db60b8a2b84f35c1ee/src%2Flibcore%2Fstr%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fstr%2Fmod.rs?ref=99e4c0ad8b0c2e551e7ef0db60b8a2b84f35c1ee", "patch": "@@ -1683,7 +1683,7 @@ mod traits {\n         }\n     }\n \n-    #[unstable(feature = \"str_checked_slicing\", issue = \"0\")]\n+    #[unstable(feature = \"str_checked_slicing\", issue = \"39932\")]\n     impl SliceIndex<str> for ops::RangeFull {\n         type Output = str;\n         #[inline]\n@@ -1712,7 +1712,7 @@ mod traits {\n         }\n     }\n \n-    #[unstable(feature = \"str_checked_slicing\", issue = \"0\")]\n+    #[unstable(feature = \"str_checked_slicing\", issue = \"39932\")]\n     impl SliceIndex<str> for ops::Range<usize> {\n         type Output = str;\n         #[inline]\n@@ -1766,7 +1766,7 @@ mod traits {\n         }\n     }\n \n-    #[unstable(feature = \"str_checked_slicing\", issue = \"0\")]\n+    #[unstable(feature = \"str_checked_slicing\", issue = \"39932\")]\n     impl SliceIndex<str> for ops::RangeTo<usize> {\n         type Output = str;\n         #[inline]\n@@ -1810,7 +1810,7 @@ mod traits {\n         }\n     }\n \n-    #[unstable(feature = \"str_checked_slicing\", issue = \"0\")]\n+    #[unstable(feature = \"str_checked_slicing\", issue = \"39932\")]\n     impl SliceIndex<str> for ops::RangeFrom<usize> {\n         type Output = str;\n         #[inline]\n@@ -1856,7 +1856,7 @@ mod traits {\n         }\n     }\n \n-    #[unstable(feature = \"str_checked_slicing\", issue = \"0\")]\n+    #[unstable(feature = \"str_checked_slicing\", issue = \"39932\")]\n     impl SliceIndex<str> for ops::RangeInclusive<usize> {\n         type Output = str;\n         #[inline]\n@@ -1905,7 +1905,7 @@ mod traits {\n \n \n \n-    #[unstable(feature = \"str_checked_slicing\", issue = \"0\")]\n+    #[unstable(feature = \"str_checked_slicing\", issue = \"39932\")]\n     impl SliceIndex<str> for ops::RangeToInclusive<usize> {\n         type Output = str;\n         #[inline]\n@@ -2001,13 +2001,13 @@ pub trait StrExt {\n     #[rustc_deprecated(since = \"1.6.0\", reason = \"use lines() instead now\")]\n     #[allow(deprecated)]\n     fn lines_any(&self) -> LinesAny;\n-    #[unstable(feature = \"str_checked_slicing\", issue = \"0\")]\n+    #[unstable(feature = \"str_checked_slicing\", issue = \"39932\")]\n     fn get<I: SliceIndex<str>>(&self, i: I) -> Option<&I::Output>;\n-    #[unstable(feature = \"str_checked_slicing\", issue = \"0\")]\n+    #[unstable(feature = \"str_checked_slicing\", issue = \"39932\")]\n     fn get_mut<I: SliceIndex<str>>(&mut self, i: I) -> Option<&mut I::Output>;\n-    #[unstable(feature = \"str_checked_slicing\", issue = \"0\")]\n+    #[unstable(feature = \"str_checked_slicing\", issue = \"39932\")]\n     unsafe fn get_unchecked<I: SliceIndex<str>>(&self, i: I) -> &I::Output;\n-    #[unstable(feature = \"str_checked_slicing\", issue = \"0\")]\n+    #[unstable(feature = \"str_checked_slicing\", issue = \"39932\")]\n     unsafe fn get_unchecked_mut<I: SliceIndex<str>>(&mut self, i: I) -> &mut I::Output;\n     #[stable(feature = \"core\", since = \"1.6.0\")]\n     unsafe fn slice_unchecked(&self, begin: usize, end: usize) -> &str;"}]}