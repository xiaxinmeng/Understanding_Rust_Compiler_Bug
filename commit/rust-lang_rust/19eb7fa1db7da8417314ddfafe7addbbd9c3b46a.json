{"sha": "19eb7fa1db7da8417314ddfafe7addbbd9c3b46a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE5ZWI3ZmExZGI3ZGE4NDE3MzE0ZGRmYWZlN2FkZGJiZDljM2I0NmE=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2020-01-10T19:59:08Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-01-10T19:59:08Z"}, "message": "Merge #2787\n\n2787: Add missing expr cases for expand macro r=flodiebold a=edwin0cheng\n\nI will open another issues for tracking adding back the cases implemented in the PR. \n\nCo-authored-by: Edwin Cheng <edwin0cheng@gmail.com>", "tree": {"sha": "df758cb96a83238d7c7f515f38333d2385ba587b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/df758cb96a83238d7c7f515f38333d2385ba587b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/19eb7fa1db7da8417314ddfafe7addbbd9c3b46a", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJeGNeMCRBK7hj4Ov3rIwAAdHIIAJHp0l7+Gc7DTEz0U49VxM/p\nUl8rmlUctj3hhLrYRoKasW4756afwgY3UvXiMCEjglf7b864J5FICelDGwXoPmCc\noCrSkdltd0YN71stwpNyZrmQPl8F6IZ923B6uwGVtW6NW88piQ3cpgHJoiDnEZq7\nC4QnQZfQTuxgyYOGEHv9ChSVegRxytzhabDAbdEeU/WZhDMLD1FBPaA1hl23cnK1\nZiimEbFNteMtHGYpBiNRRq3FK6SQk4y3lkLxgfWkdCSxqg9uI6izKuGObA1Sl20Q\n9v4mIgaAvqvyqEvi+2xlgShStOYB/WfWf8j/7CMHY/4MtQbs0QgzvBW4CTrXtE4=\n=+sMx\n-----END PGP SIGNATURE-----\n", "payload": "tree df758cb96a83238d7c7f515f38333d2385ba587b\nparent 029c02982b4ab89dc785bc162456dbe25a22446c\nparent dca9195f75a1aa356dba63d39b72da790ec80c13\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1578686348 +0000\ncommitter GitHub <noreply@github.com> 1578686348 +0000\n\nMerge #2787\n\n2787: Add missing expr cases for expand macro r=flodiebold a=edwin0cheng\n\nI will open another issues for tracking adding back the cases implemented in the PR. \n\nCo-authored-by: Edwin Cheng <edwin0cheng@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/19eb7fa1db7da8417314ddfafe7addbbd9c3b46a", "html_url": "https://github.com/rust-lang/rust/commit/19eb7fa1db7da8417314ddfafe7addbbd9c3b46a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/19eb7fa1db7da8417314ddfafe7addbbd9c3b46a/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "029c02982b4ab89dc785bc162456dbe25a22446c", "url": "https://api.github.com/repos/rust-lang/rust/commits/029c02982b4ab89dc785bc162456dbe25a22446c", "html_url": "https://github.com/rust-lang/rust/commit/029c02982b4ab89dc785bc162456dbe25a22446c"}, {"sha": "dca9195f75a1aa356dba63d39b72da790ec80c13", "url": "https://api.github.com/repos/rust-lang/rust/commits/dca9195f75a1aa356dba63d39b72da790ec80c13", "html_url": "https://github.com/rust-lang/rust/commit/dca9195f75a1aa356dba63d39b72da790ec80c13"}], "stats": {"total": 24, "additions": 23, "deletions": 1}, "files": [{"sha": "5d12c15846079d6a12ced3aeb60eac47ba2539b5", "filename": "crates/ra_hir_expand/src/db.rs", "status": "modified", "additions": 23, "deletions": 1, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/19eb7fa1db7da8417314ddfafe7addbbd9c3b46a/crates%2Fra_hir_expand%2Fsrc%2Fdb.rs", "raw_url": "https://github.com/rust-lang/rust/raw/19eb7fa1db7da8417314ddfafe7addbbd9c3b46a/crates%2Fra_hir_expand%2Fsrc%2Fdb.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_expand%2Fsrc%2Fdb.rs?ref=19eb7fa1db7da8417314ddfafe7addbbd9c3b46a", "patch": "@@ -178,6 +178,7 @@ fn to_fragment_kind(db: &dyn AstDatabase, macro_call_id: MacroCallId) -> Fragmen\n \n     match parent.kind() {\n         MACRO_ITEMS | SOURCE_FILE => FragmentKind::Items,\n+        ITEM_LIST => FragmentKind::Items,\n         LET_STMT => {\n             // FIXME: Handle Pattern\n             FragmentKind::Expr\n@@ -188,7 +189,28 @@ fn to_fragment_kind(db: &dyn AstDatabase, macro_call_id: MacroCallId) -> Fragmen\n         TRY_EXPR => FragmentKind::Expr,\n         TUPLE_EXPR => FragmentKind::Expr,\n         PAREN_EXPR => FragmentKind::Expr,\n-        ITEM_LIST => FragmentKind::Items,\n+\n+        // FIXME: Add tests for following cases in hir_ty\n+        FOR_EXPR => FragmentKind::Expr,\n+        PATH_EXPR => FragmentKind::Expr,\n+        LAMBDA_EXPR => FragmentKind::Expr,\n+        CONDITION => FragmentKind::Expr,\n+        BREAK_EXPR => FragmentKind::Expr,\n+        RETURN_EXPR => FragmentKind::Expr,\n+        BLOCK_EXPR => FragmentKind::Expr,\n+        MATCH_EXPR => FragmentKind::Expr,\n+        MATCH_ARM => FragmentKind::Expr,\n+        MATCH_GUARD => FragmentKind::Expr,\n+        RECORD_FIELD => FragmentKind::Expr,\n+        CALL_EXPR => FragmentKind::Expr,\n+        INDEX_EXPR => FragmentKind::Expr,\n+        METHOD_CALL_EXPR => FragmentKind::Expr,\n+        AWAIT_EXPR => FragmentKind::Expr,\n+        CAST_EXPR => FragmentKind::Expr,\n+        REF_EXPR => FragmentKind::Expr,\n+        PREFIX_EXPR => FragmentKind::Expr,\n+        RANGE_EXPR => FragmentKind::Expr,\n+        BIN_EXPR => FragmentKind::Expr,\n         _ => {\n             // Unknown , Just guess it is `Items`\n             FragmentKind::Items"}]}