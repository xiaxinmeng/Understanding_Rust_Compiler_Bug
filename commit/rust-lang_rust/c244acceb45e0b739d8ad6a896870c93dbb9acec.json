{"sha": "c244acceb45e0b739d8ad6a896870c93dbb9acec", "node_id": "MDY6Q29tbWl0NzI0NzEyOmMyNDRhY2NlYjQ1ZTBiNzM5ZDhhZDZhODk2ODcwYzkzZGJiOWFjZWM=", "commit": {"author": {"name": "Steve Klabnik", "email": "steve@steveklabnik.com", "date": "2016-02-14T23:02:32Z"}, "committer": {"name": "Steve Klabnik", "email": "steve@steveklabnik.com", "date": "2016-02-14T23:02:32Z"}, "message": "Rollup merge of #31655 - ollie27:patch-4, r=steveklabnik\n\nr? @steveklabnik", "tree": {"sha": "4e0f73e1bd967d4d0e8e18d53002588c0f6a2a70", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4e0f73e1bd967d4d0e8e18d53002588c0f6a2a70"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c244acceb45e0b739d8ad6a896870c93dbb9acec", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c244acceb45e0b739d8ad6a896870c93dbb9acec", "html_url": "https://github.com/rust-lang/rust/commit/c244acceb45e0b739d8ad6a896870c93dbb9acec", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c244acceb45e0b739d8ad6a896870c93dbb9acec/comments", "author": {"login": "steveklabnik", "id": 27786, "node_id": "MDQ6VXNlcjI3Nzg2", "avatar_url": "https://avatars.githubusercontent.com/u/27786?v=4", "gravatar_id": "", "url": "https://api.github.com/users/steveklabnik", "html_url": "https://github.com/steveklabnik", "followers_url": "https://api.github.com/users/steveklabnik/followers", "following_url": "https://api.github.com/users/steveklabnik/following{/other_user}", "gists_url": "https://api.github.com/users/steveklabnik/gists{/gist_id}", "starred_url": "https://api.github.com/users/steveklabnik/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/steveklabnik/subscriptions", "organizations_url": "https://api.github.com/users/steveklabnik/orgs", "repos_url": "https://api.github.com/users/steveklabnik/repos", "events_url": "https://api.github.com/users/steveklabnik/events{/privacy}", "received_events_url": "https://api.github.com/users/steveklabnik/received_events", "type": "User", "site_admin": false}, "committer": {"login": "steveklabnik", "id": 27786, "node_id": "MDQ6VXNlcjI3Nzg2", "avatar_url": "https://avatars.githubusercontent.com/u/27786?v=4", "gravatar_id": "", "url": "https://api.github.com/users/steveklabnik", "html_url": "https://github.com/steveklabnik", "followers_url": "https://api.github.com/users/steveklabnik/followers", "following_url": "https://api.github.com/users/steveklabnik/following{/other_user}", "gists_url": "https://api.github.com/users/steveklabnik/gists{/gist_id}", "starred_url": "https://api.github.com/users/steveklabnik/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/steveklabnik/subscriptions", "organizations_url": "https://api.github.com/users/steveklabnik/orgs", "repos_url": "https://api.github.com/users/steveklabnik/repos", "events_url": "https://api.github.com/users/steveklabnik/events{/privacy}", "received_events_url": "https://api.github.com/users/steveklabnik/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6ba5d9cfd5a76deae0adc1e28260d9821a94a3a7", "url": "https://api.github.com/repos/rust-lang/rust/commits/6ba5d9cfd5a76deae0adc1e28260d9821a94a3a7", "html_url": "https://github.com/rust-lang/rust/commit/6ba5d9cfd5a76deae0adc1e28260d9821a94a3a7"}, {"sha": "9673ace3395c39d1605342b4cc5dcfe73f4468f2", "url": "https://api.github.com/repos/rust-lang/rust/commits/9673ace3395c39d1605342b4cc5dcfe73f4468f2", "html_url": "https://github.com/rust-lang/rust/commit/9673ace3395c39d1605342b4cc5dcfe73f4468f2"}], "stats": {"total": 10, "additions": 5, "deletions": 5}, "files": [{"sha": "ed370bb91648fc457a9359bdae4d4667a8701783", "filename": "src/libcore/num/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c244acceb45e0b739d8ad6a896870c93dbb9acec/src%2Flibcore%2Fnum%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c244acceb45e0b739d8ad6a896870c93dbb9acec/src%2Flibcore%2Fnum%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fnum%2Fmod.rs?ref=c244acceb45e0b739d8ad6a896870c93dbb9acec", "patch": "@@ -479,7 +479,7 @@ macro_rules! int_impl {\n             }\n         }\n \n-        /// Checked negation. Computes `!self`, returning `None` if `self ==\n+        /// Checked negation. Computes `-self`, returning `None` if `self ==\n         /// MIN`.\n         ///\n         /// # Examples"}, {"sha": "4d367cfd432f94a2f5333ec3bbbcdc94b33b493c", "filename": "src/libcore/str/mod.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/c244acceb45e0b739d8ad6a896870c93dbb9acec/src%2Flibcore%2Fstr%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c244acceb45e0b739d8ad6a896870c93dbb9acec/src%2Flibcore%2Fstr%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fstr%2Fmod.rs?ref=c244acceb45e0b739d8ad6a896870c93dbb9acec", "patch": "@@ -157,7 +157,7 @@ impl Utf8Error {\n     /// // std::str::from_utf8 returns a Utf8Error\n     /// let error = str::from_utf8(&sparkle_heart).unwrap_err();\n     ///\n-    /// // the first byte is invalid here\n+    /// // the second byte is invalid here\n     /// assert_eq!(1, error.valid_up_to());\n     /// ```\n     #[stable(feature = \"utf8_error\", since = \"1.5.0\")]\n@@ -174,10 +174,10 @@ impl Utf8Error {\n ///\n /// If you are sure that the byte slice is valid UTF-8, and you don't want to\n /// incur the overhead of the validity check, there is an unsafe version of\n-/// this function, [`from_utf8_unchecked()`][fromutf8], which has the same\n+/// this function, [`from_utf8_unchecked()`][fromutf8u], which has the same\n /// behavior but skips the check.\n ///\n-/// [fromutf8]: fn.from_utf8.html\n+/// [fromutf8u]: fn.from_utf8_unchecked.html\n ///\n /// If you need a `String` instead of a `&str`, consider\n /// [`String::from_utf8()`][string].\n@@ -275,7 +275,7 @@ unsafe fn from_raw_parts_mut<'a>(p: *mut u8, len: usize) -> &'a mut str {\n /// Converts a slice of bytes to a string slice without checking\n /// that the string contains valid UTF-8.\n ///\n-/// See the safe version, [`from_utf8()`][fromutf8], for more.\n+/// See the safe version, [`from_utf8()`][fromutf8], for more information.\n ///\n /// [fromutf8]: fn.from_utf8.html\n ///"}]}