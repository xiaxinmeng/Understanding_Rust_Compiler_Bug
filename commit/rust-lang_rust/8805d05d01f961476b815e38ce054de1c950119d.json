{"sha": "8805d05d01f961476b815e38ce054de1c950119d", "node_id": "C_kwDOAAsO6NoAKDg4MDVkMDVkMDFmOTYxNDc2YjgxNWUzOGNlMDU0ZGUxYzk1MDExOWQ", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-09-27T13:07:05Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-09-27T13:07:05Z"}, "message": "Auto merge of #13296 - Strum355:package-information-package-name, r=Veykril\n\nFix PackageInformation having the crate name instead of package name\n\nThe `PackageInformation` type from the LSIF PR used the _crate_ name instead of the _package_ name. This caused issues when looking up crates by this name on the Sourcegraph backend, where we sync crate contents, for crates such as actix-web and many of its components (actix-files, actix-http etc etc), see screenshot 1 for the observed symptom.\n\nThis PR hasnt been tested on other entry points besides cargo (such as project json).\n\nSee screenshot 2 for the change in behaviour via SCIP snapshot comparison.\n\n<details>\n<summary>Screenshot 1</summary>\n\n![crates.io giving 404](https://user-images.githubusercontent.com/18282288/192286637-8bf7c333-4441-4e60-8cce-de7eaa11ee9f.png)\n\n</details>\n\n<details>\n<summary>Screenshot 2</summary>\n\n![before and after from SCIP snapshot output](https://user-images.githubusercontent.com/18282288/192287733-d7e73ff0-abbc-4ae5-82d0-bf9dc45d755c.png)\n\n</details>\n\nFollow-up PR to my question over at the [rust-lang Zulip](https://rust-lang.zulipchat.com/#narrow/stream/185405-t-compiler.2Frust-analyzer/topic/canonical.20crate.20name.20confusion.20for.20monikers), excuse any incorrect usages of the term package vs crate.", "tree": {"sha": "e59a38a9a323821083ea4a01e306859dbfec2623", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e59a38a9a323821083ea4a01e306859dbfec2623"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8805d05d01f961476b815e38ce054de1c950119d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8805d05d01f961476b815e38ce054de1c950119d", "html_url": "https://github.com/rust-lang/rust/commit/8805d05d01f961476b815e38ce054de1c950119d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8805d05d01f961476b815e38ce054de1c950119d/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b01cdd89d581b2580396b846784d92c1cc128e05", "url": "https://api.github.com/repos/rust-lang/rust/commits/b01cdd89d581b2580396b846784d92c1cc128e05", "html_url": "https://github.com/rust-lang/rust/commit/b01cdd89d581b2580396b846784d92c1cc128e05"}, {"sha": "651c586035dfb4cf244aa9e9dacabfee9f579564", "url": "https://api.github.com/repos/rust-lang/rust/commits/651c586035dfb4cf244aa9e9dacabfee9f579564", "html_url": "https://github.com/rust-lang/rust/commit/651c586035dfb4cf244aa9e9dacabfee9f579564"}], "stats": {"total": 109, "additions": 85, "deletions": 24}, "files": [{"sha": "5b7828a26996eaaacd6df0f758834f2ed8c8673d", "filename": "crates/base-db/src/fixture.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/8805d05d01f961476b815e38ce054de1c950119d/crates%2Fbase-db%2Fsrc%2Ffixture.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8805d05d01f961476b815e38ce054de1c950119d/crates%2Fbase-db%2Fsrc%2Ffixture.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fbase-db%2Fsrc%2Ffixture.rs?ref=8805d05d01f961476b815e38ce054de1c950119d", "patch": "@@ -196,7 +196,7 @@ impl ChangeFixture {\n                 Env::default(),\n                 Ok(Vec::new()),\n                 false,\n-                CrateOrigin::CratesIo { repo: None },\n+                CrateOrigin::CratesIo { repo: None, name: None },\n             );\n         } else {\n             for (from, to, prelude) in crate_deps {\n@@ -270,7 +270,7 @@ impl ChangeFixture {\n                 Env::default(),\n                 Ok(proc_macro),\n                 true,\n-                CrateOrigin::CratesIo { repo: None },\n+                CrateOrigin::CratesIo { repo: None, name: None },\n             );\n \n             for krate in all_crates {\n@@ -398,7 +398,7 @@ fn parse_crate(crate_str: String) -> (String, CrateOrigin, Option<String>) {\n         let (version, origin) = match b.split_once(':') {\n             Some((\"CratesIo\", data)) => match data.split_once(',') {\n                 Some((version, url)) => {\n-                    (version, CrateOrigin::CratesIo { repo: Some(url.to_owned()) })\n+                    (version, CrateOrigin::CratesIo { repo: Some(url.to_owned()), name: None })\n                 }\n                 _ => panic!(\"Bad crates.io parameter: {}\", data),\n             },\n@@ -409,7 +409,7 @@ fn parse_crate(crate_str: String) -> (String, CrateOrigin, Option<String>) {\n         let crate_origin = match &*crate_str {\n             \"std\" => CrateOrigin::Lang(LangCrateOrigin::Std),\n             \"core\" => CrateOrigin::Lang(LangCrateOrigin::Core),\n-            _ => CrateOrigin::CratesIo { repo: None },\n+            _ => CrateOrigin::CratesIo { repo: None, name: None },\n         };\n         (crate_str, crate_origin, None)\n     }"}, {"sha": "e7f0c4ec29bf4e9bcfca1cd98df06c457ca033b9", "filename": "crates/base-db/src/input.rs", "status": "modified", "additions": 11, "deletions": 11, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/8805d05d01f961476b815e38ce054de1c950119d/crates%2Fbase-db%2Fsrc%2Finput.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8805d05d01f961476b815e38ce054de1c950119d/crates%2Fbase-db%2Fsrc%2Finput.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fbase-db%2Fsrc%2Finput.rs?ref=8805d05d01f961476b815e38ce054de1c950119d", "patch": "@@ -136,7 +136,7 @@ impl ops::Deref for CrateName {\n #[derive(Debug, Clone, PartialEq, Eq, Hash)]\n pub enum CrateOrigin {\n     /// Crates that are from crates.io official registry,\n-    CratesIo { repo: Option<String> },\n+    CratesIo { repo: Option<String>, name: Option<String> },\n     /// Crates that are provided by the language, like std, core, proc-macro, ...\n     Lang(LangCrateOrigin),\n }\n@@ -648,7 +648,7 @@ mod tests {\n             Env::default(),\n             Ok(Vec::new()),\n             false,\n-            CrateOrigin::CratesIo { repo: None },\n+            CrateOrigin::CratesIo { repo: None, name: None },\n         );\n         let crate2 = graph.add_crate_root(\n             FileId(2u32),\n@@ -660,7 +660,7 @@ mod tests {\n             Env::default(),\n             Ok(Vec::new()),\n             false,\n-            CrateOrigin::CratesIo { repo: None },\n+            CrateOrigin::CratesIo { repo: None, name: None },\n         );\n         let crate3 = graph.add_crate_root(\n             FileId(3u32),\n@@ -672,7 +672,7 @@ mod tests {\n             Env::default(),\n             Ok(Vec::new()),\n             false,\n-            CrateOrigin::CratesIo { repo: None },\n+            CrateOrigin::CratesIo { repo: None, name: None },\n         );\n         assert!(graph\n             .add_dep(crate1, Dependency::new(CrateName::new(\"crate2\").unwrap(), crate2))\n@@ -698,7 +698,7 @@ mod tests {\n             Env::default(),\n             Ok(Vec::new()),\n             false,\n-            CrateOrigin::CratesIo { repo: None },\n+            CrateOrigin::CratesIo { repo: None, name: None },\n         );\n         let crate2 = graph.add_crate_root(\n             FileId(2u32),\n@@ -710,7 +710,7 @@ mod tests {\n             Env::default(),\n             Ok(Vec::new()),\n             false,\n-            CrateOrigin::CratesIo { repo: None },\n+            CrateOrigin::CratesIo { repo: None, name: None },\n         );\n         assert!(graph\n             .add_dep(crate1, Dependency::new(CrateName::new(\"crate2\").unwrap(), crate2))\n@@ -733,7 +733,7 @@ mod tests {\n             Env::default(),\n             Ok(Vec::new()),\n             false,\n-            CrateOrigin::CratesIo { repo: None },\n+            CrateOrigin::CratesIo { repo: None, name: None },\n         );\n         let crate2 = graph.add_crate_root(\n             FileId(2u32),\n@@ -745,7 +745,7 @@ mod tests {\n             Env::default(),\n             Ok(Vec::new()),\n             false,\n-            CrateOrigin::CratesIo { repo: None },\n+            CrateOrigin::CratesIo { repo: None, name: None },\n         );\n         let crate3 = graph.add_crate_root(\n             FileId(3u32),\n@@ -757,7 +757,7 @@ mod tests {\n             Env::default(),\n             Ok(Vec::new()),\n             false,\n-            CrateOrigin::CratesIo { repo: None },\n+            CrateOrigin::CratesIo { repo: None, name: None },\n         );\n         assert!(graph\n             .add_dep(crate1, Dependency::new(CrateName::new(\"crate2\").unwrap(), crate2))\n@@ -780,7 +780,7 @@ mod tests {\n             Env::default(),\n             Ok(Vec::new()),\n             false,\n-            CrateOrigin::CratesIo { repo: None },\n+            CrateOrigin::CratesIo { repo: None, name: None },\n         );\n         let crate2 = graph.add_crate_root(\n             FileId(2u32),\n@@ -792,7 +792,7 @@ mod tests {\n             Env::default(),\n             Ok(Vec::new()),\n             false,\n-            CrateOrigin::CratesIo { repo: None },\n+            CrateOrigin::CratesIo { repo: None, name: None },\n         );\n         assert!(graph\n             .add_dep("}, {"sha": "7820b67142fe1449e43d5393a4637103a3bedb5f", "filename": "crates/ide/src/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8805d05d01f961476b815e38ce054de1c950119d/crates%2Fide%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8805d05d01f961476b815e38ce054de1c950119d/crates%2Fide%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Flib.rs?ref=8805d05d01f961476b815e38ce054de1c950119d", "patch": "@@ -236,7 +236,7 @@ impl Analysis {\n             Env::default(),\n             Ok(Vec::new()),\n             false,\n-            CrateOrigin::CratesIo { repo: None },\n+            CrateOrigin::CratesIo { repo: None, name: None },\n         );\n         change.change_file(file_id, Some(Arc::new(text)));\n         change.set_crate_graph(crate_graph);"}, {"sha": "852a8fd837616ab3c0a2fb4c1bdf75e99774fe8d", "filename": "crates/ide/src/moniker.rs", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/8805d05d01f961476b815e38ce054de1c950119d/crates%2Fide%2Fsrc%2Fmoniker.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8805d05d01f961476b815e38ce054de1c950119d/crates%2Fide%2Fsrc%2Fmoniker.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fmoniker.rs?ref=8805d05d01f961476b815e38ce054de1c950119d", "patch": "@@ -253,10 +253,14 @@ pub(crate) fn def_to_moniker(\n         },\n         kind: if krate == from_crate { MonikerKind::Export } else { MonikerKind::Import },\n         package_information: {\n-            let name = krate.display_name(db)?.to_string();\n-            let (repo, version) = match krate.origin(db) {\n-                CrateOrigin::CratesIo { repo } => (repo?, krate.version(db)?),\n+            let (name, repo, version) = match krate.origin(db) {\n+                CrateOrigin::CratesIo { repo, name } => (\n+                    name.unwrap_or(krate.display_name(db)?.canonical_name().to_string()),\n+                    repo?,\n+                    krate.version(db)?,\n+                ),\n                 CrateOrigin::Lang(lang) => (\n+                    krate.display_name(db)?.canonical_name().to_string(),\n                     \"https://github.com/rust-lang/rust/\".to_string(),\n                     match lang {\n                         LangCrateOrigin::Other => {"}, {"sha": "e2444e24974a75fcdf163dd0e4764f051f4731cf", "filename": "crates/project-model/src/tests.rs", "status": "modified", "additions": 48, "deletions": 0, "changes": 48, "blob_url": "https://github.com/rust-lang/rust/blob/8805d05d01f961476b815e38ce054de1c950119d/crates%2Fproject-model%2Fsrc%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8805d05d01f961476b815e38ce054de1c950119d/crates%2Fproject-model%2Fsrc%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fproject-model%2Fsrc%2Ftests.rs?ref=8805d05d01f961476b815e38ce054de1c950119d", "patch": "@@ -185,6 +185,9 @@ fn cargo_hello_world_project_model_with_wildcard_overrides() {\n                         ),\n                         origin: CratesIo {\n                             repo: None,\n+                            name: Some(\n+                                \"hello-world\",\n+                            ),\n                         },\n                         is_proc_macro: false,\n                     },\n@@ -260,6 +263,9 @@ fn cargo_hello_world_project_model_with_wildcard_overrides() {\n                         ),\n                         origin: CratesIo {\n                             repo: None,\n+                            name: Some(\n+                                \"hello-world\",\n+                            ),\n                         },\n                         is_proc_macro: false,\n                     },\n@@ -335,6 +341,9 @@ fn cargo_hello_world_project_model_with_wildcard_overrides() {\n                         ),\n                         origin: CratesIo {\n                             repo: None,\n+                            name: Some(\n+                                \"hello-world\",\n+                            ),\n                         },\n                         is_proc_macro: false,\n                     },\n@@ -410,6 +419,9 @@ fn cargo_hello_world_project_model_with_wildcard_overrides() {\n                         ),\n                         origin: CratesIo {\n                             repo: None,\n+                            name: Some(\n+                                \"hello-world\",\n+                            ),\n                         },\n                         is_proc_macro: false,\n                     },\n@@ -477,6 +489,9 @@ fn cargo_hello_world_project_model_with_wildcard_overrides() {\n                             repo: Some(\n                                 \"https://github.com/rust-lang/libc\",\n                             ),\n+                            name: Some(\n+                                \"libc\",\n+                            ),\n                         },\n                         is_proc_macro: false,\n                     },\n@@ -567,6 +582,9 @@ fn cargo_hello_world_project_model_with_selective_overrides() {\n                         ),\n                         origin: CratesIo {\n                             repo: None,\n+                            name: Some(\n+                                \"hello-world\",\n+                            ),\n                         },\n                         is_proc_macro: false,\n                     },\n@@ -644,6 +662,9 @@ fn cargo_hello_world_project_model_with_selective_overrides() {\n                         ),\n                         origin: CratesIo {\n                             repo: None,\n+                            name: Some(\n+                                \"hello-world\",\n+                            ),\n                         },\n                         is_proc_macro: false,\n                     },\n@@ -721,6 +742,9 @@ fn cargo_hello_world_project_model_with_selective_overrides() {\n                         ),\n                         origin: CratesIo {\n                             repo: None,\n+                            name: Some(\n+                                \"hello-world\",\n+                            ),\n                         },\n                         is_proc_macro: false,\n                     },\n@@ -798,6 +822,9 @@ fn cargo_hello_world_project_model_with_selective_overrides() {\n                         ),\n                         origin: CratesIo {\n                             repo: None,\n+                            name: Some(\n+                                \"hello-world\",\n+                            ),\n                         },\n                         is_proc_macro: false,\n                     },\n@@ -865,6 +892,9 @@ fn cargo_hello_world_project_model_with_selective_overrides() {\n                             repo: Some(\n                                 \"https://github.com/rust-lang/libc\",\n                             ),\n+                            name: Some(\n+                                \"libc\",\n+                            ),\n                         },\n                         is_proc_macro: false,\n                     },\n@@ -946,6 +976,9 @@ fn cargo_hello_world_project_model() {\n                         ),\n                         origin: CratesIo {\n                             repo: None,\n+                            name: Some(\n+                                \"hello-world\",\n+                            ),\n                         },\n                         is_proc_macro: false,\n                     },\n@@ -1023,6 +1056,9 @@ fn cargo_hello_world_project_model() {\n                         ),\n                         origin: CratesIo {\n                             repo: None,\n+                            name: Some(\n+                                \"hello-world\",\n+                            ),\n                         },\n                         is_proc_macro: false,\n                     },\n@@ -1100,6 +1136,9 @@ fn cargo_hello_world_project_model() {\n                         ),\n                         origin: CratesIo {\n                             repo: None,\n+                            name: Some(\n+                                \"hello-world\",\n+                            ),\n                         },\n                         is_proc_macro: false,\n                     },\n@@ -1177,6 +1216,9 @@ fn cargo_hello_world_project_model() {\n                         ),\n                         origin: CratesIo {\n                             repo: None,\n+                            name: Some(\n+                                \"hello-world\",\n+                            ),\n                         },\n                         is_proc_macro: false,\n                     },\n@@ -1244,6 +1286,9 @@ fn cargo_hello_world_project_model() {\n                             repo: Some(\n                                 \"https://github.com/rust-lang/libc\",\n                             ),\n+                            name: Some(\n+                                \"libc\",\n+                            ),\n                         },\n                         is_proc_macro: false,\n                     },\n@@ -1804,6 +1849,9 @@ fn rust_project_hello_world_project_model() {\n                         ),\n                         origin: CratesIo {\n                             repo: None,\n+                            name: Some(\n+                                \"hello_world\",\n+                            ),\n                         },\n                         is_proc_macro: false,\n                     },"}, {"sha": "d9d3cab45614f819bdec26a81063aa7dc4a107a3", "filename": "crates/project-model/src/workspace.rs", "status": "modified", "additions": 14, "deletions": 5, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/8805d05d01f961476b815e38ce054de1c950119d/crates%2Fproject-model%2Fsrc%2Fworkspace.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8805d05d01f961476b815e38ce054de1c950119d/crates%2Fproject-model%2Fsrc%2Fworkspace.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fproject-model%2Fsrc%2Fworkspace.rs?ref=8805d05d01f961476b815e38ce054de1c950119d", "patch": "@@ -518,9 +518,15 @@ fn project_json_to_crate_graph(\n                     proc_macro,\n                     krate.is_proc_macro,\n                     if krate.display_name.is_some() {\n-                        CrateOrigin::CratesIo { repo: krate.repository.clone() }\n+                        CrateOrigin::CratesIo {\n+                            repo: krate.repository.clone(),\n+                            name: krate\n+                                .display_name\n+                                .clone()\n+                                .map(|n| n.canonical_name().to_string()),\n+                        }\n                     } else {\n-                        CrateOrigin::CratesIo { repo: None }\n+                        CrateOrigin::CratesIo { repo: None, name: None }\n                     },\n                 ),\n             )\n@@ -740,14 +746,17 @@ fn detached_files_to_crate_graph(\n         let detached_file_crate = crate_graph.add_crate_root(\n             file_id,\n             Edition::CURRENT,\n-            display_name,\n+            display_name.clone(),\n             None,\n             cfg_options.clone(),\n             cfg_options.clone(),\n             Env::default(),\n             Ok(Vec::new()),\n             false,\n-            CrateOrigin::CratesIo { repo: None },\n+            CrateOrigin::CratesIo {\n+                repo: None,\n+                name: display_name.map(|n| n.canonical_name().to_string()),\n+            },\n         );\n \n         public_deps.add(detached_file_crate, &mut crate_graph);\n@@ -923,7 +932,7 @@ fn add_target_crate_root(\n         env,\n         proc_macro,\n         is_proc_macro,\n-        CrateOrigin::CratesIo { repo: pkg.repository.clone() },\n+        CrateOrigin::CratesIo { repo: pkg.repository.clone(), name: Some(pkg.name.clone()) },\n     )\n }\n "}]}