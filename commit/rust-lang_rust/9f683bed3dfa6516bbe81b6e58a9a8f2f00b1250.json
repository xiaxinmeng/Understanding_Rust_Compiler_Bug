{"sha": "9f683bed3dfa6516bbe81b6e58a9a8f2f00b1250", "node_id": "MDY6Q29tbWl0NzI0NzEyOjlmNjgzYmVkM2RmYTY1MTZiYmU4MWI2ZTU4YTlhOGYyZjAwYjEyNTA=", "commit": {"author": {"name": "Scott McMurray", "email": "scottmcm@users.noreply.github.com", "date": "2018-07-25T01:03:25Z"}, "committer": {"name": "Scott McMurray", "email": "scottmcm@users.noreply.github.com", "date": "2018-08-19T23:53:43Z"}, "message": "Rename `catch_expr` feature to `try_blocks`", "tree": {"sha": "9459b728322d70e90eae4c31406554fe1d59c5c9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9459b728322d70e90eae4c31406554fe1d59c5c9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9f683bed3dfa6516bbe81b6e58a9a8f2f00b1250", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9f683bed3dfa6516bbe81b6e58a9a8f2f00b1250", "html_url": "https://github.com/rust-lang/rust/commit/9f683bed3dfa6516bbe81b6e58a9a8f2f00b1250", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9f683bed3dfa6516bbe81b6e58a9a8f2f00b1250/comments", "author": {"login": "scottmcm", "id": 18526288, "node_id": "MDQ6VXNlcjE4NTI2Mjg4", "avatar_url": "https://avatars.githubusercontent.com/u/18526288?v=4", "gravatar_id": "", "url": "https://api.github.com/users/scottmcm", "html_url": "https://github.com/scottmcm", "followers_url": "https://api.github.com/users/scottmcm/followers", "following_url": "https://api.github.com/users/scottmcm/following{/other_user}", "gists_url": "https://api.github.com/users/scottmcm/gists{/gist_id}", "starred_url": "https://api.github.com/users/scottmcm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/scottmcm/subscriptions", "organizations_url": "https://api.github.com/users/scottmcm/orgs", "repos_url": "https://api.github.com/users/scottmcm/repos", "events_url": "https://api.github.com/users/scottmcm/events{/privacy}", "received_events_url": "https://api.github.com/users/scottmcm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "scottmcm", "id": 18526288, "node_id": "MDQ6VXNlcjE4NTI2Mjg4", "avatar_url": "https://avatars.githubusercontent.com/u/18526288?v=4", "gravatar_id": "", "url": "https://api.github.com/users/scottmcm", "html_url": "https://github.com/scottmcm", "followers_url": "https://api.github.com/users/scottmcm/followers", "following_url": "https://api.github.com/users/scottmcm/following{/other_user}", "gists_url": "https://api.github.com/users/scottmcm/gists{/gist_id}", "starred_url": "https://api.github.com/users/scottmcm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/scottmcm/subscriptions", "organizations_url": "https://api.github.com/users/scottmcm/orgs", "repos_url": "https://api.github.com/users/scottmcm/repos", "events_url": "https://api.github.com/users/scottmcm/events{/privacy}", "received_events_url": "https://api.github.com/users/scottmcm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "817efc2489806b8188c2f5693fb3b0dcf9c76eb1", "url": "https://api.github.com/repos/rust-lang/rust/commits/817efc2489806b8188c2f5693fb3b0dcf9c76eb1", "html_url": "https://github.com/rust-lang/rust/commit/817efc2489806b8188c2f5693fb3b0dcf9c76eb1"}], "stats": {"total": 33, "additions": 16, "deletions": 17}, "files": [{"sha": "866b37a39a7817e2fa1e99a464f18e9595df730e", "filename": "src/doc/unstable-book/src/language-features/try-blocks.md", "status": "renamed", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/9f683bed3dfa6516bbe81b6e58a9a8f2f00b1250/src%2Fdoc%2Funstable-book%2Fsrc%2Flanguage-features%2Ftry-blocks.md", "raw_url": "https://github.com/rust-lang/rust/raw/9f683bed3dfa6516bbe81b6e58a9a8f2f00b1250/src%2Fdoc%2Funstable-book%2Fsrc%2Flanguage-features%2Ftry-blocks.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Funstable-book%2Fsrc%2Flanguage-features%2Ftry-blocks.md?ref=9f683bed3dfa6516bbe81b6e58a9a8f2f00b1250", "patch": "@@ -1,18 +1,18 @@\n-# `catch_expr`\n+# `try_blocks`\n \n The tracking issue for this feature is: [#31436]\n \n [#31436]: https://github.com/rust-lang/rust/issues/31436\n \n ------------------------\n \n-The `catch_expr` feature adds support for `try` blocks. A `try`\n+The `try_blocks` feature adds support for `try` blocks. A `try`\n block creates a new scope one can use the `?` operator in.\n \n ```rust,ignore\n // This code needs the 2018 edition\n \n-#![feature(catch_expr)]\n+#![feature(try_blocks)]\n \n use std::num::ParseIntError;\n ", "previous_filename": "src/doc/unstable-book/src/language-features/catch-expr.md"}, {"sha": "7e937c5fc0525b674d880926eca419c91496f388", "filename": "src/librustc/lib.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/9f683bed3dfa6516bbe81b6e58a9a8f2f00b1250/src%2Flibrustc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9f683bed3dfa6516bbe81b6e58a9a8f2f00b1250/src%2Flibrustc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Flib.rs?ref=9f683bed3dfa6516bbe81b6e58a9a8f2f00b1250", "patch": "@@ -65,7 +65,6 @@\n #![feature(trace_macros)]\n #![feature(trusted_len)]\n #![feature(vec_remove_item)]\n-#![feature(catch_expr)]\n #![feature(step_trait)]\n #![feature(integer_atomics)]\n #![feature(test)]"}, {"sha": "c89efcf4ba0e822b430c9f6a2517bd5f39e35485", "filename": "src/libsyntax/feature_gate.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/9f683bed3dfa6516bbe81b6e58a9a8f2f00b1250/src%2Flibsyntax%2Ffeature_gate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9f683bed3dfa6516bbe81b6e58a9a8f2f00b1250/src%2Flibsyntax%2Ffeature_gate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Ffeature_gate.rs?ref=9f683bed3dfa6516bbe81b6e58a9a8f2f00b1250", "patch": "@@ -331,7 +331,7 @@ declare_features! (\n     (active, abi_x86_interrupt, \"1.17.0\", Some(40180), None),\n \n     // Allows the `try {...}` expression\n-    (active, catch_expr, \"1.17.0\", Some(31436), None),\n+    (active, try_blocks, \"1.29.0\", Some(31436), None),\n \n     // Used to preserve symbols (see llvm.used)\n     (active, used, \"1.18.0\", Some(40289), None),\n@@ -1735,7 +1735,7 @@ impl<'a> Visitor<'a> for PostExpansionVisitor<'a> {\n                                   \"yield syntax is experimental\");\n             }\n             ast::ExprKind::TryBlock(_) => {\n-                gate_feature_post!(&self, catch_expr, e.span, \"`try` expression is experimental\");\n+                gate_feature_post!(&self, try_blocks, e.span, \"`try` expression is experimental\");\n             }\n             ast::ExprKind::IfLet(ref pats, ..) | ast::ExprKind::WhileLet(ref pats, ..) => {\n                 if pats.len() > 1 {"}, {"sha": "61de6baecd7e465647cbc9a7804b0dbe0ea211c1", "filename": "src/test/compile-fail/try-block-bad-lifetime.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9f683bed3dfa6516bbe81b6e58a9a8f2f00b1250/src%2Ftest%2Fcompile-fail%2Ftry-block-bad-lifetime.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9f683bed3dfa6516bbe81b6e58a9a8f2f00b1250/src%2Ftest%2Fcompile-fail%2Ftry-block-bad-lifetime.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Ftry-block-bad-lifetime.rs?ref=9f683bed3dfa6516bbe81b6e58a9a8f2f00b1250", "patch": "@@ -10,7 +10,7 @@\n \n // compile-flags: --edition 2018\n \n-#![feature(catch_expr)]\n+#![feature(try_blocks)]\n \n // This test checks that borrows made and returned inside try blocks are properly constrained\n pub fn main() {"}, {"sha": "a984b63af4575b3602e9302fb6ff53f9e0ce6e11", "filename": "src/test/compile-fail/try-block-bad-type.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9f683bed3dfa6516bbe81b6e58a9a8f2f00b1250/src%2Ftest%2Fcompile-fail%2Ftry-block-bad-type.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9f683bed3dfa6516bbe81b6e58a9a8f2f00b1250/src%2Ftest%2Fcompile-fail%2Ftry-block-bad-type.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Ftry-block-bad-type.rs?ref=9f683bed3dfa6516bbe81b6e58a9a8f2f00b1250", "patch": "@@ -10,7 +10,7 @@\n \n // compile-flags: --edition 2018\n \n-#![feature(catch_expr)]\n+#![feature(try_blocks)]\n \n pub fn main() {\n     let res: Result<u32, i32> = try {"}, {"sha": "d10149126ee891f4ca9af8786293f7d8f95968ab", "filename": "src/test/compile-fail/try-block-in-match.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9f683bed3dfa6516bbe81b6e58a9a8f2f00b1250/src%2Ftest%2Fcompile-fail%2Ftry-block-in-match.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9f683bed3dfa6516bbe81b6e58a9a8f2f00b1250/src%2Ftest%2Fcompile-fail%2Ftry-block-in-match.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Ftry-block-in-match.rs?ref=9f683bed3dfa6516bbe81b6e58a9a8f2f00b1250", "patch": "@@ -10,7 +10,7 @@\n \n // compile-flags: --edition 2018\n \n-#![feature(catch_expr)]\n+#![feature(try_blocks)]\n \n fn main() {\n     match try { false } { _ => {} } //~ ERROR expected expression, found reserved keyword `try`"}, {"sha": "b531267a55bbafeafea1ba1d67b4d4b36cd9d573", "filename": "src/test/compile-fail/try-block-in-while.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9f683bed3dfa6516bbe81b6e58a9a8f2f00b1250/src%2Ftest%2Fcompile-fail%2Ftry-block-in-while.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9f683bed3dfa6516bbe81b6e58a9a8f2f00b1250/src%2Ftest%2Fcompile-fail%2Ftry-block-in-while.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Ftry-block-in-while.rs?ref=9f683bed3dfa6516bbe81b6e58a9a8f2f00b1250", "patch": "@@ -10,7 +10,7 @@\n \n // compile-flags: --edition 2018\n \n-#![feature(catch_expr)]\n+#![feature(try_blocks)]\n \n fn main() {\n     while try { false } {} //~ ERROR expected expression, found reserved keyword `try`"}, {"sha": "297540bb1e7d2fdf579e19f8560764c4254f2405", "filename": "src/test/compile-fail/try-block-maybe-bad-lifetime.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9f683bed3dfa6516bbe81b6e58a9a8f2f00b1250/src%2Ftest%2Fcompile-fail%2Ftry-block-maybe-bad-lifetime.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9f683bed3dfa6516bbe81b6e58a9a8f2f00b1250/src%2Ftest%2Fcompile-fail%2Ftry-block-maybe-bad-lifetime.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Ftry-block-maybe-bad-lifetime.rs?ref=9f683bed3dfa6516bbe81b6e58a9a8f2f00b1250", "patch": "@@ -10,7 +10,7 @@\n \n // compile-flags: --edition 2018\n \n-#![feature(catch_expr)]\n+#![feature(try_blocks)]\n \n // This test checks that borrows made and returned inside try blocks are properly constrained\n pub fn main() {"}, {"sha": "476fec2022093e05141ab1b0a98bce6fdd333ee8", "filename": "src/test/compile-fail/try-block-opt-init.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9f683bed3dfa6516bbe81b6e58a9a8f2f00b1250/src%2Ftest%2Fcompile-fail%2Ftry-block-opt-init.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9f683bed3dfa6516bbe81b6e58a9a8f2f00b1250/src%2Ftest%2Fcompile-fail%2Ftry-block-opt-init.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Ftry-block-opt-init.rs?ref=9f683bed3dfa6516bbe81b6e58a9a8f2f00b1250", "patch": "@@ -10,7 +10,7 @@\n \n // compile-flags: --edition 2018\n \n-#![feature(catch_expr)]\n+#![feature(try_blocks)]\n \n fn use_val<T: Sized>(_x: T) {}\n "}, {"sha": "cb79eda8b07399c3a7b48ea947a013cb787584c7", "filename": "src/test/run-pass/issue-45124.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9f683bed3dfa6516bbe81b6e58a9a8f2f00b1250/src%2Ftest%2Frun-pass%2Fissue-45124.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9f683bed3dfa6516bbe81b6e58a9a8f2f00b1250/src%2Ftest%2Frun-pass%2Fissue-45124.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-45124.rs?ref=9f683bed3dfa6516bbe81b6e58a9a8f2f00b1250", "patch": "@@ -10,7 +10,7 @@\n \n // compile-flags: --edition 2018\n \n-#![feature(catch_expr)]\n+#![feature(try_blocks)]\n \n fn main() {\n     let mut a = 0;"}, {"sha": "a7e7cc2062095de7669aaee90c8e5c9060e66844", "filename": "src/test/run-pass/try-block.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9f683bed3dfa6516bbe81b6e58a9a8f2f00b1250/src%2Ftest%2Frun-pass%2Ftry-block.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9f683bed3dfa6516bbe81b6e58a9a8f2f00b1250/src%2Ftest%2Frun-pass%2Ftry-block.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Ftry-block.rs?ref=9f683bed3dfa6516bbe81b6e58a9a8f2f00b1250", "patch": "@@ -10,7 +10,7 @@\n \n // compile-flags: --edition 2018\n \n-#![feature(catch_expr)]\n+#![feature(try_blocks)]\n \n struct catch {}\n "}, {"sha": "6536280c71f09ecd027106da48d7c4c2b4108c30", "filename": "src/test/ui/feature-gates/feature-gate-try_blocks.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/9f683bed3dfa6516bbe81b6e58a9a8f2f00b1250/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-try_blocks.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9f683bed3dfa6516bbe81b6e58a9a8f2f00b1250/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-try_blocks.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-try_blocks.rs?ref=9f683bed3dfa6516bbe81b6e58a9a8f2f00b1250", "previous_filename": "src/test/ui/feature-gates/feature-gate-catch_expr.rs"}, {"sha": "29ef2f87b9d0d5e917ddd395280f75b4a107ec90", "filename": "src/test/ui/feature-gates/feature-gate-try_blocks.stderr", "status": "renamed", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/9f683bed3dfa6516bbe81b6e58a9a8f2f00b1250/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-try_blocks.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/9f683bed3dfa6516bbe81b6e58a9a8f2f00b1250/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-try_blocks.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-try_blocks.stderr?ref=9f683bed3dfa6516bbe81b6e58a9a8f2f00b1250", "patch": "@@ -1,5 +1,5 @@\n error[E0658]: `try` expression is experimental (see issue #31436)\n-  --> $DIR/feature-gate-catch_expr.rs:14:33\n+  --> $DIR/feature-gate-try_blocks.rs:14:33\n    |\n LL |       let try_result: Option<_> = try { //~ ERROR `try` expression is experimental\n    |  _________________________________^\n@@ -8,7 +8,7 @@ LL | |         x\n LL | |     };\n    | |_____^\n    |\n-   = help: add #![feature(catch_expr)] to the crate attributes to enable\n+   = help: add #![feature(try_blocks)] to the crate attributes to enable\n \n error: aborting due to previous error\n ", "previous_filename": "src/test/ui/feature-gates/feature-gate-catch_expr.stderr"}, {"sha": "6a69cff48836fc8f2708c58fa824006b4a490490", "filename": "src/test/ui/try-block-type-error.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9f683bed3dfa6516bbe81b6e58a9a8f2f00b1250/src%2Ftest%2Fui%2Ftry-block-type-error.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9f683bed3dfa6516bbe81b6e58a9a8f2f00b1250/src%2Ftest%2Fui%2Ftry-block-type-error.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftry-block-type-error.rs?ref=9f683bed3dfa6516bbe81b6e58a9a8f2f00b1250", "patch": "@@ -10,7 +10,7 @@\n \n // compile-flags: --edition 2018\n \n-#![feature(catch_expr)]\n+#![feature(try_blocks)]\n \n fn foo() -> Option<()> { Some(()) }\n "}]}