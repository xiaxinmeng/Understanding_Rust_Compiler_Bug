{"sha": "f9dabd8b883bc6deed043ff01180f8c728fdb829", "node_id": "C_kwDOAAsO6NoAKGY5ZGFiZDhiODgzYmM2ZGVlZDA0M2ZmMDExODBmOGM3MjhmZGI4Mjk", "commit": {"author": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2023-05-24T20:26:24Z"}, "committer": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2023-05-25T16:43:14Z"}, "message": "Remove ExpnKind::Inlined.", "tree": {"sha": "8d0a64f3a19718f08dec81149cbb490d6c39932d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8d0a64f3a19718f08dec81149cbb490d6c39932d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f9dabd8b883bc6deed043ff01180f8c728fdb829", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f9dabd8b883bc6deed043ff01180f8c728fdb829", "html_url": "https://github.com/rust-lang/rust/commit/f9dabd8b883bc6deed043ff01180f8c728fdb829", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f9dabd8b883bc6deed043ff01180f8c728fdb829/comments", "author": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "committer": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a3b816be53b5d3eae48e7291836442f6dff9e318", "url": "https://api.github.com/repos/rust-lang/rust/commits/a3b816be53b5d3eae48e7291836442f6dff9e318", "html_url": "https://github.com/rust-lang/rust/commit/a3b816be53b5d3eae48e7291836442f6dff9e318"}], "stats": {"total": 6, "additions": 1, "deletions": 5}, "files": [{"sha": "5eaa988dd09298d0236ac93cf3a7a025dd3ad159", "filename": "src/common.rs", "status": "modified", "additions": 1, "deletions": 5, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/f9dabd8b883bc6deed043ff01180f8c728fdb829/src%2Fcommon.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f9dabd8b883bc6deed043ff01180f8c728fdb829/src%2Fcommon.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcommon.rs?ref=f9dabd8b883bc6deed043ff01180f8c728fdb829", "patch": "@@ -413,11 +413,7 @@ impl<'tcx> FunctionCx<'_, '_, 'tcx> {\n \n     // Note: must be kept in sync with get_caller_location from cg_ssa\n     pub(crate) fn get_caller_location(&mut self, mut source_info: mir::SourceInfo) -> CValue<'tcx> {\n-        let span_to_caller_location = |fx: &mut FunctionCx<'_, '_, 'tcx>, mut span: Span| {\n-            // Remove `Inlined` marks as they pollute `expansion_cause`.\n-            while span.is_inlined() {\n-                span.remove_mark();\n-            }\n+        let span_to_caller_location = |fx: &mut FunctionCx<'_, '_, 'tcx>, span: Span| {\n             let topmost = span.ctxt().outer_expn().expansion_cause().unwrap_or(span);\n             let caller = fx.tcx.sess.source_map().lookup_char_pos(topmost.lo());\n             let const_loc = fx.tcx.const_caller_location(("}]}