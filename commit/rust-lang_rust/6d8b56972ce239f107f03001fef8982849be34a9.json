{"sha": "6d8b56972ce239f107f03001fef8982849be34a9", "node_id": "C_kwDOAAsO6NoAKDZkOGI1Njk3MmNlMjM5ZjEwN2YwMzAwMWZlZjg5ODI4NDliZTM0YTk", "commit": {"author": {"name": "Yoshiki Matsuda", "email": "myskjp@gmail.com", "date": "2022-05-02T09:50:54Z"}, "committer": {"name": "Yoshiki Matsuda", "email": "myskjp@gmail.com", "date": "2022-05-02T09:50:54Z"}, "message": "remove the special case for nonexported macro_rules! macros", "tree": {"sha": "3e51e7dcbf2ae2afc65a686a8b7fe5fd9c5f88b8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3e51e7dcbf2ae2afc65a686a8b7fe5fd9c5f88b8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6d8b56972ce239f107f03001fef8982849be34a9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6d8b56972ce239f107f03001fef8982849be34a9", "html_url": "https://github.com/rust-lang/rust/commit/6d8b56972ce239f107f03001fef8982849be34a9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6d8b56972ce239f107f03001fef8982849be34a9/comments", "author": {"login": "m-ysk", "id": 47472854, "node_id": "MDQ6VXNlcjQ3NDcyODU0", "avatar_url": "https://avatars.githubusercontent.com/u/47472854?v=4", "gravatar_id": "", "url": "https://api.github.com/users/m-ysk", "html_url": "https://github.com/m-ysk", "followers_url": "https://api.github.com/users/m-ysk/followers", "following_url": "https://api.github.com/users/m-ysk/following{/other_user}", "gists_url": "https://api.github.com/users/m-ysk/gists{/gist_id}", "starred_url": "https://api.github.com/users/m-ysk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/m-ysk/subscriptions", "organizations_url": "https://api.github.com/users/m-ysk/orgs", "repos_url": "https://api.github.com/users/m-ysk/repos", "events_url": "https://api.github.com/users/m-ysk/events{/privacy}", "received_events_url": "https://api.github.com/users/m-ysk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "m-ysk", "id": 47472854, "node_id": "MDQ6VXNlcjQ3NDcyODU0", "avatar_url": "https://avatars.githubusercontent.com/u/47472854?v=4", "gravatar_id": "", "url": "https://api.github.com/users/m-ysk", "html_url": "https://github.com/m-ysk", "followers_url": "https://api.github.com/users/m-ysk/followers", "following_url": "https://api.github.com/users/m-ysk/following{/other_user}", "gists_url": "https://api.github.com/users/m-ysk/gists{/gist_id}", "starred_url": "https://api.github.com/users/m-ysk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/m-ysk/subscriptions", "organizations_url": "https://api.github.com/users/m-ysk/orgs", "repos_url": "https://api.github.com/users/m-ysk/repos", "events_url": "https://api.github.com/users/m-ysk/events{/privacy}", "received_events_url": "https://api.github.com/users/m-ysk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "905fd731543ee837bd9f4cf960b048610d037155", "url": "https://api.github.com/repos/rust-lang/rust/commits/905fd731543ee837bd9f4cf960b048610d037155", "html_url": "https://github.com/rust-lang/rust/commit/905fd731543ee837bd9f4cf960b048610d037155"}], "stats": {"total": 10, "additions": 0, "deletions": 10}, "files": [{"sha": "93ccf60a1de455278d4fe6db8c2fea8891611638", "filename": "src/librustdoc/doctest.rs", "status": "modified", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/6d8b56972ce239f107f03001fef8982849be34a9/src%2Flibrustdoc%2Fdoctest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6d8b56972ce239f107f03001fef8982849be34a9/src%2Flibrustdoc%2Fdoctest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fdoctest.rs?ref=6d8b56972ce239f107f03001fef8982849be34a9", "patch": "@@ -1225,16 +1225,6 @@ impl<'a, 'hir, 'tcx> intravisit::Visitor<'hir> for HirCollector<'a, 'hir, 'tcx>\n \n     fn visit_item(&mut self, item: &'hir hir::Item<'_>) {\n         let name = match &item.kind {\n-            hir::ItemKind::Macro(ref macro_def, _) => {\n-                // FIXME(#88038): Non exported macros have historically not been tested,\n-                // but we really ought to start testing them.\n-                let def_id = item.def_id.to_def_id();\n-                if macro_def.macro_rules && !self.tcx.has_attr(def_id, sym::macro_export) {\n-                    intravisit::walk_item(self, item);\n-                    return;\n-                }\n-                item.ident.to_string()\n-            }\n             hir::ItemKind::Impl(impl_) => {\n                 rustc_hir_pretty::id_to_string(&self.map, impl_.self_ty.hir_id)\n             }"}]}