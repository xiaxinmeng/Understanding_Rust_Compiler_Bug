{"sha": "7e7411e6209b10d99bc37c084c8ac45fbb706431", "node_id": "MDY6Q29tbWl0NzI0NzEyOjdlNzQxMWU2MjA5YjEwZDk5YmMzN2MwODRjOGFjNDVmYmI3MDY0MzE=", "commit": {"author": {"name": "Tim Chevalier", "email": "chevalier@alum.wellesley.edu", "date": "2012-09-27T18:14:59Z"}, "committer": {"name": "Tim Chevalier", "email": "chevalier@alum.wellesley.edu", "date": "2012-09-27T18:32:09Z"}, "message": "Demode rand", "tree": {"sha": "fc5b85d6581704ff0f20f4dfb064bf368099e73c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fc5b85d6581704ff0f20f4dfb064bf368099e73c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7e7411e6209b10d99bc37c084c8ac45fbb706431", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7e7411e6209b10d99bc37c084c8ac45fbb706431", "html_url": "https://github.com/rust-lang/rust/commit/7e7411e6209b10d99bc37c084c8ac45fbb706431", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7e7411e6209b10d99bc37c084c8ac45fbb706431/comments", "author": {"login": "catamorphism", "id": 427212, "node_id": "MDQ6VXNlcjQyNzIxMg==", "avatar_url": "https://avatars.githubusercontent.com/u/427212?v=4", "gravatar_id": "", "url": "https://api.github.com/users/catamorphism", "html_url": "https://github.com/catamorphism", "followers_url": "https://api.github.com/users/catamorphism/followers", "following_url": "https://api.github.com/users/catamorphism/following{/other_user}", "gists_url": "https://api.github.com/users/catamorphism/gists{/gist_id}", "starred_url": "https://api.github.com/users/catamorphism/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/catamorphism/subscriptions", "organizations_url": "https://api.github.com/users/catamorphism/orgs", "repos_url": "https://api.github.com/users/catamorphism/repos", "events_url": "https://api.github.com/users/catamorphism/events{/privacy}", "received_events_url": "https://api.github.com/users/catamorphism/received_events", "type": "User", "site_admin": false}, "committer": {"login": "catamorphism", "id": 427212, "node_id": "MDQ6VXNlcjQyNzIxMg==", "avatar_url": "https://avatars.githubusercontent.com/u/427212?v=4", "gravatar_id": "", "url": "https://api.github.com/users/catamorphism", "html_url": "https://github.com/catamorphism", "followers_url": "https://api.github.com/users/catamorphism/followers", "following_url": "https://api.github.com/users/catamorphism/following{/other_user}", "gists_url": "https://api.github.com/users/catamorphism/gists{/gist_id}", "starred_url": "https://api.github.com/users/catamorphism/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/catamorphism/subscriptions", "organizations_url": "https://api.github.com/users/catamorphism/orgs", "repos_url": "https://api.github.com/users/catamorphism/repos", "events_url": "https://api.github.com/users/catamorphism/events{/privacy}", "received_events_url": "https://api.github.com/users/catamorphism/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "52ad2750ea8c5f43bdb1bce009590df7fdc34461", "url": "https://api.github.com/repos/rust-lang/rust/commits/52ad2750ea8c5f43bdb1bce009590df7fdc34461", "html_url": "https://github.com/rust-lang/rust/commit/52ad2750ea8c5f43bdb1bce009590df7fdc34461"}], "stats": {"total": 24, "additions": 14, "deletions": 10}, "files": [{"sha": "c04c46d02e5c3cc6c861fc56a68c65d49d8ec803", "filename": "src/libcore/rand.rs", "status": "modified", "additions": 12, "deletions": 8, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/7e7411e6209b10d99bc37c084c8ac45fbb706431/src%2Flibcore%2Frand.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7e7411e6209b10d99bc37c084c8ac45fbb706431/src%2Flibcore%2Frand.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Frand.rs?ref=7e7411e6209b10d99bc37c084c8ac45fbb706431", "patch": "@@ -1,5 +1,9 @@\n //! Random number generation\n \n+// NB: transitional, de-mode-ing.\n+#[warn(deprecated_mode)];\n+#[forbid(deprecated_pattern)];\n+\n #[allow(non_camel_case_types)] // runtime type\n enum rctx {}\n \n@@ -120,7 +124,7 @@ impl Rng {\n     /**\n      * Return a char randomly chosen from chars, failing if chars is empty\n      */\n-    fn gen_char_from(chars: ~str) -> char {\n+    fn gen_char_from(chars: &str) -> char {\n         assert !chars.is_empty();\n         self.choose(str::chars(chars))\n     }\n@@ -272,8 +276,8 @@ pub fn Rng() -> Rng {\n  * all other generators constructed with the same seed. The seed may be any\n  * length.\n  */\n-pub fn seeded_rng(seed: ~[u8]) -> Rng {\n-    @RandRes(rustrt::rand_new_seeded(seed)) as Rng\n+pub fn seeded_rng(seed: &~[u8]) -> Rng {\n+    @RandRes(rustrt::rand_new_seeded(*seed)) as Rng\n }\n \n type XorShiftState = {\n@@ -310,24 +314,24 @@ pub mod tests {\n     #[test]\n     pub fn rng_seeded() {\n         let seed = rand::seed();\n-        let ra = rand::seeded_rng(seed);\n-        let rb = rand::seeded_rng(seed);\n+        let ra = rand::seeded_rng(&seed);\n+        let rb = rand::seeded_rng(&seed);\n         assert ra.gen_str(100u) == rb.gen_str(100u);\n     }\n \n     #[test]\n     pub fn rng_seeded_custom_seed() {\n         // much shorter than generated seeds which are 1024 bytes\n         let seed = ~[2u8, 32u8, 4u8, 32u8, 51u8];\n-        let ra = rand::seeded_rng(seed);\n-        let rb = rand::seeded_rng(seed);\n+        let ra = rand::seeded_rng(&seed);\n+        let rb = rand::seeded_rng(&seed);\n         assert ra.gen_str(100u) == rb.gen_str(100u);\n     }\n \n     #[test]\n     pub fn rng_seeded_custom_seed2() {\n         let seed = ~[2u8, 32u8, 4u8, 32u8, 51u8];\n-        let ra = rand::seeded_rng(seed);\n+        let ra = rand::seeded_rng(&seed);\n         // Regression test that isaac is actually using the above vector\n         let r = ra.next();\n         error!(\"%?\", r);"}, {"sha": "afd9b2ccc9ca0ea95c651e00f23adc35ee04e867", "filename": "src/test/bench/core-map.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/7e7411e6209b10d99bc37c084c8ac45fbb706431/src%2Ftest%2Fbench%2Fcore-map.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7e7411e6209b10d99bc37c084c8ac45fbb706431/src%2Ftest%2Fbench%2Fcore-map.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fbench%2Fcore-map.rs?ref=7e7411e6209b10d99bc37c084c8ac45fbb706431", "patch": "@@ -154,7 +154,7 @@ fn main(++args: ~[~str]) {\n     let seed = ~[1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n \n     {\n-        let rng = rand::seeded_rng(copy seed);\n+        let rng = rand::seeded_rng(&seed);\n         let mut results = empty_results();\n         int_benchmarks::<map::HashMap<uint, uint>>(\n             map::HashMap, rng, num_keys, &mut results);\n@@ -164,7 +164,7 @@ fn main(++args: ~[~str]) {\n     }\n \n     {\n-        let rng = rand::seeded_rng(copy seed);\n+        let rng = rand::seeded_rng(&seed);\n         let mut results = empty_results();\n         int_benchmarks::<@Mut<LinearMap<uint, uint>>>(\n             || @Mut(LinearMap()),"}]}