{"sha": "f4ff423d67e0650d5bd77b9e2128c01242ac8fee", "node_id": "C_kwDOAAsO6NoAKGY0ZmY0MjNkNjdlMDY1MGQ1YmQ3N2I5ZTIxMjhjMDEyNDJhYzhmZWU", "commit": {"author": {"name": "Lukas Markeffsky", "email": "@", "date": "2022-12-19T13:57:29Z"}, "committer": {"name": "Mark Rousskov", "email": "mark.simulacrum@gmail.com", "date": "2022-12-28T14:18:43Z"}, "message": "fix documenting private items of standard library", "tree": {"sha": "3477f388e88c46088b8a4c7b995ab5cc3097d636", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3477f388e88c46088b8a4c7b995ab5cc3097d636"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f4ff423d67e0650d5bd77b9e2128c01242ac8fee", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f4ff423d67e0650d5bd77b9e2128c01242ac8fee", "html_url": "https://github.com/rust-lang/rust/commit/f4ff423d67e0650d5bd77b9e2128c01242ac8fee", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f4ff423d67e0650d5bd77b9e2128c01242ac8fee/comments", "author": null, "committer": {"login": "Mark-Simulacrum", "id": 5047365, "node_id": "MDQ6VXNlcjUwNDczNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/5047365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mark-Simulacrum", "html_url": "https://github.com/Mark-Simulacrum", "followers_url": "https://api.github.com/users/Mark-Simulacrum/followers", "following_url": "https://api.github.com/users/Mark-Simulacrum/following{/other_user}", "gists_url": "https://api.github.com/users/Mark-Simulacrum/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mark-Simulacrum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mark-Simulacrum/subscriptions", "organizations_url": "https://api.github.com/users/Mark-Simulacrum/orgs", "repos_url": "https://api.github.com/users/Mark-Simulacrum/repos", "events_url": "https://api.github.com/users/Mark-Simulacrum/events{/privacy}", "received_events_url": "https://api.github.com/users/Mark-Simulacrum/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fdf6cc34b2564100c5d07b573ef246124ee45b47", "url": "https://api.github.com/repos/rust-lang/rust/commits/fdf6cc34b2564100c5d07b573ef246124ee45b47", "html_url": "https://github.com/rust-lang/rust/commit/fdf6cc34b2564100c5d07b573ef246124ee45b47"}], "stats": {"total": 29, "additions": 18, "deletions": 11}, "files": [{"sha": "6912466448fab444c6860425ba5970a41ef75a8b", "filename": "library/alloc/src/collections/btree/node.rs", "status": "modified", "additions": 17, "deletions": 11, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/f4ff423d67e0650d5bd77b9e2128c01242ac8fee/library%2Falloc%2Fsrc%2Fcollections%2Fbtree%2Fnode.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f4ff423d67e0650d5bd77b9e2128c01242ac8fee/library%2Falloc%2Fsrc%2Fcollections%2Fbtree%2Fnode.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Falloc%2Fsrc%2Fcollections%2Fbtree%2Fnode.rs?ref=f4ff423d67e0650d5bd77b9e2128c01242ac8fee", "patch": "@@ -318,7 +318,10 @@ impl<BorrowType: marker::BorrowType, K, V, Type> NodeRef<BorrowType, K, V, Type>\n     pub fn ascend(\n         self,\n     ) -> Result<Handle<NodeRef<BorrowType, K, V, marker::Internal>, marker::Edge>, Self> {\n-        let _ = BorrowType::TRAVERSAL_PERMIT;\n+        const {\n+            assert!(BorrowType::TRAVERSAL_PERMIT);\n+        }\n+\n         // We need to use raw pointers to nodes because, if BorrowType is marker::ValMut,\n         // there might be outstanding mutable references to values that we must not invalidate.\n         let leaf_ptr: *const _ = Self::as_leaf_ptr(&self);\n@@ -1003,7 +1006,10 @@ impl<BorrowType: marker::BorrowType, K, V>\n     /// `edge.descend().ascend().unwrap()` and `node.ascend().unwrap().descend()` should\n     /// both, upon success, do nothing.\n     pub fn descend(self) -> NodeRef<BorrowType, K, V, marker::LeafOrInternal> {\n-        let _ = BorrowType::TRAVERSAL_PERMIT;\n+        const {\n+            assert!(BorrowType::TRAVERSAL_PERMIT);\n+        }\n+\n         // We need to use raw pointers to nodes because, if BorrowType is\n         // marker::ValMut, there might be outstanding mutable references to\n         // values that we must not invalidate. There's no worry accessing the\n@@ -1666,17 +1672,17 @@ pub mod marker {\n     pub struct ValMut<'a>(PhantomData<&'a mut ()>);\n \n     pub trait BorrowType {\n-        // If node references of this borrow type allow traversing to other\n-        // nodes in the tree, this constant can be evaluated. Thus reading it\n-        // serves as a compile-time assertion.\n-        const TRAVERSAL_PERMIT: () = ();\n+        /// If node references of this borrow type allow traversing to other\n+        /// nodes in the tree, this constant is set to `true`. It can be used\n+        /// for a compile-time assertion.\n+        const TRAVERSAL_PERMIT: bool = true;\n     }\n     impl BorrowType for Owned {\n-        // Reject evaluation, because traversal isn't needed. Instead traversal\n-        // happens using the result of `borrow_mut`.\n-        // By disabling traversal, and only creating new references to roots,\n-        // we know that every reference of the `Owned` type is to a root node.\n-        const TRAVERSAL_PERMIT: () = panic!();\n+        /// Reject traversal, because it isn't needed. Instead traversal\n+        /// happens using the result of `borrow_mut`.\n+        /// By disabling traversal, and only creating new references to roots,\n+        /// we know that every reference of the `Owned` type is to a root node.\n+        const TRAVERSAL_PERMIT: bool = false;\n     }\n     impl BorrowType for Dying {}\n     impl<'a> BorrowType for Immut<'a> {}"}, {"sha": "09f459f84f738d100c48aa0c9e54f6a84d7af1e3", "filename": "library/alloc/src/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/f4ff423d67e0650d5bd77b9e2128c01242ac8fee/library%2Falloc%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f4ff423d67e0650d5bd77b9e2128c01242ac8fee/library%2Falloc%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Falloc%2Fsrc%2Flib.rs?ref=f4ff423d67e0650d5bd77b9e2128c01242ac8fee", "patch": "@@ -123,6 +123,7 @@\n #![feature(fmt_internals)]\n #![feature(fn_traits)]\n #![feature(hasher_prefixfree_extras)]\n+#![feature(inline_const)]\n #![feature(inplace_iteration)]\n #![feature(iter_advance_by)]\n #![feature(iter_next_chunk)]"}]}