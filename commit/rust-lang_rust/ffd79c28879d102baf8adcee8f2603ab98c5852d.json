{"sha": "ffd79c28879d102baf8adcee8f2603ab98c5852d", "node_id": "C_kwDOAAsO6NoAKGZmZDc5YzI4ODc5ZDEwMmJhZjhhZGNlZThmMjYwM2FiOThjNTg1MmQ", "commit": {"author": {"name": "iDawer", "email": "ilnur.iskhakov.oss@outlook.com", "date": "2022-09-02T12:01:51Z"}, "committer": {"name": "iDawer", "email": "ilnur.iskhakov.oss@outlook.com", "date": "2022-09-02T12:01:51Z"}, "message": "Add docs", "tree": {"sha": "6f338e53bba091ceb4022a6d193a3a389934f802", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6f338e53bba091ceb4022a6d193a3a389934f802"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ffd79c28879d102baf8adcee8f2603ab98c5852d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ffd79c28879d102baf8adcee8f2603ab98c5852d", "html_url": "https://github.com/rust-lang/rust/commit/ffd79c28879d102baf8adcee8f2603ab98c5852d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ffd79c28879d102baf8adcee8f2603ab98c5852d/comments", "author": {"login": "iDawer", "id": 7803845, "node_id": "MDQ6VXNlcjc4MDM4NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/7803845?v=4", "gravatar_id": "", "url": "https://api.github.com/users/iDawer", "html_url": "https://github.com/iDawer", "followers_url": "https://api.github.com/users/iDawer/followers", "following_url": "https://api.github.com/users/iDawer/following{/other_user}", "gists_url": "https://api.github.com/users/iDawer/gists{/gist_id}", "starred_url": "https://api.github.com/users/iDawer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/iDawer/subscriptions", "organizations_url": "https://api.github.com/users/iDawer/orgs", "repos_url": "https://api.github.com/users/iDawer/repos", "events_url": "https://api.github.com/users/iDawer/events{/privacy}", "received_events_url": "https://api.github.com/users/iDawer/received_events", "type": "User", "site_admin": false}, "committer": {"login": "iDawer", "id": 7803845, "node_id": "MDQ6VXNlcjc4MDM4NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/7803845?v=4", "gravatar_id": "", "url": "https://api.github.com/users/iDawer", "html_url": "https://github.com/iDawer", "followers_url": "https://api.github.com/users/iDawer/followers", "following_url": "https://api.github.com/users/iDawer/following{/other_user}", "gists_url": "https://api.github.com/users/iDawer/gists{/gist_id}", "starred_url": "https://api.github.com/users/iDawer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/iDawer/subscriptions", "organizations_url": "https://api.github.com/users/iDawer/orgs", "repos_url": "https://api.github.com/users/iDawer/repos", "events_url": "https://api.github.com/users/iDawer/events{/privacy}", "received_events_url": "https://api.github.com/users/iDawer/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8ae58b9fe45aac9534475e2042729327c4485d5f", "url": "https://api.github.com/repos/rust-lang/rust/commits/8ae58b9fe45aac9534475e2042729327c4485d5f", "html_url": "https://github.com/rust-lang/rust/commit/8ae58b9fe45aac9534475e2042729327c4485d5f"}], "stats": {"total": 3, "additions": 3, "deletions": 0}, "files": [{"sha": "0c547192ac0d0dd81b87ac0339d655f29eaeaa5a", "filename": "crates/hir-ty/src/inhabitedness.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/ffd79c28879d102baf8adcee8f2603ab98c5852d/crates%2Fhir-ty%2Fsrc%2Finhabitedness.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ffd79c28879d102baf8adcee8f2603ab98c5852d/crates%2Fhir-ty%2Fsrc%2Finhabitedness.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir-ty%2Fsrc%2Finhabitedness.rs?ref=ffd79c28879d102baf8adcee8f2603ab98c5852d", "patch": "@@ -1,3 +1,4 @@\n+//! Type inhabitedness logic.\n use std::ops::ControlFlow::{self, Break, Continue};\n \n use chalk_ir::{\n@@ -13,12 +14,14 @@ use crate::{\n     db::HirDatabase, Binders, ConcreteConst, Const, ConstValue, Interner, Substitution, Ty, TyKind,\n };\n \n+/// Checks whether a type is visibly uninhabited from a particular module.\n pub(crate) fn is_ty_uninhabited_from(ty: &Ty, target_mod: ModuleId, db: &dyn HirDatabase) -> bool {\n     let mut uninhabited_from = UninhabitedFrom { target_mod, db };\n     let inhabitedness = ty.visit_with(&mut uninhabited_from, DebruijnIndex::INNERMOST);\n     inhabitedness == BREAK_VISIBLY_UNINHABITED\n }\n \n+/// Checks whether a variant is visibly uninhabited from a particular module.\n pub(crate) fn is_enum_variant_uninhabited_from(\n     variant: EnumVariantId,\n     subst: &Substitution,"}]}