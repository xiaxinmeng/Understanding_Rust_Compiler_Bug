{"sha": "a985634fc08893d9e1255e287ad4bacc2cefa2ce", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE5ODU2MzRmYzA4ODkzZDllMTI1NWUyODdhZDRiYWNjMmNlZmEyY2U=", "commit": {"author": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2017-10-31T15:40:24Z"}, "committer": {"name": "Sean Griffin", "email": "sean@seantheprogrammer.com", "date": "2018-03-01T15:04:26Z"}, "message": "fix tidy error", "tree": {"sha": "2b5a6bbe7d6bc7c6e5890ac460d6961a37f4ccc4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2b5a6bbe7d6bc7c6e5890ac460d6961a37f4ccc4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a985634fc08893d9e1255e287ad4bacc2cefa2ce", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a985634fc08893d9e1255e287ad4bacc2cefa2ce", "html_url": "https://github.com/rust-lang/rust/commit/a985634fc08893d9e1255e287ad4bacc2cefa2ce", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a985634fc08893d9e1255e287ad4bacc2cefa2ce/comments", "author": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sgrif", "id": 1529387, "node_id": "MDQ6VXNlcjE1MjkzODc=", "avatar_url": "https://avatars.githubusercontent.com/u/1529387?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sgrif", "html_url": "https://github.com/sgrif", "followers_url": "https://api.github.com/users/sgrif/followers", "following_url": "https://api.github.com/users/sgrif/following{/other_user}", "gists_url": "https://api.github.com/users/sgrif/gists{/gist_id}", "starred_url": "https://api.github.com/users/sgrif/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sgrif/subscriptions", "organizations_url": "https://api.github.com/users/sgrif/orgs", "repos_url": "https://api.github.com/users/sgrif/repos", "events_url": "https://api.github.com/users/sgrif/events{/privacy}", "received_events_url": "https://api.github.com/users/sgrif/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "35e78b5cddc04c6bd13da2a1290d27cfb8ae8db8", "url": "https://api.github.com/repos/rust-lang/rust/commits/35e78b5cddc04c6bd13da2a1290d27cfb8ae8db8", "html_url": "https://github.com/rust-lang/rust/commit/35e78b5cddc04c6bd13da2a1290d27cfb8ae8db8"}], "stats": {"total": 5, "additions": 4, "deletions": 1}, "files": [{"sha": "402cb6a8fef43622f5284928c30234022b940cbd", "filename": "src/librustc/infer/mod.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/a985634fc08893d9e1255e287ad4bacc2cefa2ce/src%2Flibrustc%2Finfer%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a985634fc08893d9e1255e287ad4bacc2cefa2ce/src%2Flibrustc%2Finfer%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Finfer%2Fmod.rs?ref=a985634fc08893d9e1255e287ad4bacc2cefa2ce", "patch": "@@ -1029,7 +1029,10 @@ impl<'a, 'gcx, 'tcx> InferCtxt<'a, 'gcx, 'tcx> {\n         self.tcx.mk_var(self.next_ty_var_id(universe, false, origin))\n     }\n \n-    pub fn next_diverging_ty_var(&self, universe: ty::UniverseIndex, origin: TypeVariableOrigin) -> Ty<'tcx> {\n+    pub fn next_diverging_ty_var(&self,\n+                                 universe: ty::UniverseIndex,\n+                                 origin: TypeVariableOrigin)\n+                                 -> Ty<'tcx> {\n         self.tcx.mk_var(self.next_ty_var_id(universe, true, origin))\n     }\n "}]}