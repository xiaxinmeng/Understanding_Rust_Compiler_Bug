{"sha": "461a0f3da4acd6dfea31b9f12c1e14405b055438", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ2MWEwZjNkYTRhY2Q2ZGZlYTMxYjlmMTJjMWUxNDQwNWIwNTU0Mzg=", "commit": {"author": {"name": "Gus Wynn", "email": "guswynn@gmail.com", "date": "2021-09-11T19:24:40Z"}, "committer": {"name": "Gus Wynn", "email": "guswynn@gmail.com", "date": "2021-09-11T19:24:40Z"}, "message": "array comment + test for references", "tree": {"sha": "3395d06498b8036fa10856bffeef3b92a45c4234", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3395d06498b8036fa10856bffeef3b92a45c4234"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/461a0f3da4acd6dfea31b9f12c1e14405b055438", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/461a0f3da4acd6dfea31b9f12c1e14405b055438", "html_url": "https://github.com/rust-lang/rust/commit/461a0f3da4acd6dfea31b9f12c1e14405b055438", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/461a0f3da4acd6dfea31b9f12c1e14405b055438/comments", "author": {"login": "guswynn", "id": 5404303, "node_id": "MDQ6VXNlcjU0MDQzMDM=", "avatar_url": "https://avatars.githubusercontent.com/u/5404303?v=4", "gravatar_id": "", "url": "https://api.github.com/users/guswynn", "html_url": "https://github.com/guswynn", "followers_url": "https://api.github.com/users/guswynn/followers", "following_url": "https://api.github.com/users/guswynn/following{/other_user}", "gists_url": "https://api.github.com/users/guswynn/gists{/gist_id}", "starred_url": "https://api.github.com/users/guswynn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/guswynn/subscriptions", "organizations_url": "https://api.github.com/users/guswynn/orgs", "repos_url": "https://api.github.com/users/guswynn/repos", "events_url": "https://api.github.com/users/guswynn/events{/privacy}", "received_events_url": "https://api.github.com/users/guswynn/received_events", "type": "User", "site_admin": false}, "committer": {"login": "guswynn", "id": 5404303, "node_id": "MDQ6VXNlcjU0MDQzMDM=", "avatar_url": "https://avatars.githubusercontent.com/u/5404303?v=4", "gravatar_id": "", "url": "https://api.github.com/users/guswynn", "html_url": "https://github.com/guswynn", "followers_url": "https://api.github.com/users/guswynn/followers", "following_url": "https://api.github.com/users/guswynn/following{/other_user}", "gists_url": "https://api.github.com/users/guswynn/gists{/gist_id}", "starred_url": "https://api.github.com/users/guswynn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/guswynn/subscriptions", "organizations_url": "https://api.github.com/users/guswynn/orgs", "repos_url": "https://api.github.com/users/guswynn/repos", "events_url": "https://api.github.com/users/guswynn/events{/privacy}", "received_events_url": "https://api.github.com/users/guswynn/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "74ea16301e2e6fb96ac8414761cf227775e64dfd", "url": "https://api.github.com/repos/rust-lang/rust/commits/74ea16301e2e6fb96ac8414761cf227775e64dfd", "html_url": "https://github.com/rust-lang/rust/commit/74ea16301e2e6fb96ac8414761cf227775e64dfd"}], "stats": {"total": 105, "additions": 85, "deletions": 20}, "files": [{"sha": "1b63d6d9741481282fafb21e3d403d2e15c8e0d9", "filename": "compiler/rustc_typeck/src/check/generator_interior.rs", "status": "modified", "additions": 14, "deletions": 20, "changes": 34, "blob_url": "https://github.com/rust-lang/rust/blob/461a0f3da4acd6dfea31b9f12c1e14405b055438/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fgenerator_interior.rs", "raw_url": "https://github.com/rust-lang/rust/raw/461a0f3da4acd6dfea31b9f12c1e14405b055438/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fgenerator_interior.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fgenerator_interior.rs?ref=461a0f3da4acd6dfea31b9f12c1e14405b055438", "patch": "@@ -462,7 +462,6 @@ pub fn check_must_not_suspend_ty<'tcx>(\n     descr_post: &str,\n     plural_len: usize,\n ) -> bool {\n-    debug!(\"FOUND TYPE: {:?}\", ty);\n     if ty.is_unit()\n     // || fcx.tcx.is_ty_uninhabited_from(fcx.tcx.parent_module(hir_id).to_def_id(), ty, fcx.param_env)\n     // FIXME: should this check is_ty_uninhabited_from\n@@ -563,25 +562,20 @@ pub fn check_must_not_suspend_ty<'tcx>(\n             }\n             has_emitted\n         }\n-        ty::Array(ty, len) => match len.try_eval_usize(fcx.tcx, fcx.param_env) {\n-            // If the array is empty we don't lint, to avoid false positives\n-            Some(0) | None => false,\n-            // If the array is definitely non-empty, we can do `#[must_use]` checking.\n-            Some(n) => {\n-                let descr_pre = &format!(\"{}array{} of \", descr_pre, plural_suffix,);\n-                check_must_not_suspend_ty(\n-                    fcx,\n-                    ty,\n-                    hir_id,\n-                    expr,\n-                    source_span,\n-                    yield_span,\n-                    descr_pre,\n-                    descr_post,\n-                    n as usize + 1,\n-                )\n-            }\n-        },\n+        ty::Array(ty, len) => {\n+            let descr_pre = &format!(\"{}array{} of \", descr_pre, plural_suffix,);\n+            check_must_not_suspend_ty(\n+                fcx,\n+                ty,\n+                hir_id,\n+                expr,\n+                source_span,\n+                yield_span,\n+                descr_pre,\n+                descr_post,\n+                len.try_eval_usize(fcx.tcx, fcx.param_env).unwrap_or(0) as usize + 1,\n+            )\n+        }\n         _ => false,\n     }\n }"}, {"sha": "89fd73c187e901fc7f4645cb70c2648186f66230", "filename": "src/test/ui/lint/must_not_suspend/ref.rs", "status": "added", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/461a0f3da4acd6dfea31b9f12c1e14405b055438/src%2Ftest%2Fui%2Flint%2Fmust_not_suspend%2Fref.rs", "raw_url": "https://github.com/rust-lang/rust/raw/461a0f3da4acd6dfea31b9f12c1e14405b055438/src%2Ftest%2Fui%2Flint%2Fmust_not_suspend%2Fref.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Fmust_not_suspend%2Fref.rs?ref=461a0f3da4acd6dfea31b9f12c1e14405b055438", "patch": "@@ -0,0 +1,30 @@\n+// edition:2018\n+#![feature(must_not_suspend)]\n+#![deny(must_not_suspend)]\n+\n+#[must_not_suspend = \"You gotta use Umm's, ya know?\"]\n+struct Umm {\n+    i: i64\n+}\n+\n+struct Bar {\n+    u: Umm,\n+}\n+\n+async fn other() {}\n+\n+impl Bar {\n+    async fn uhoh(&mut self) {\n+        let guard = &mut self.u; //~ ERROR `Umm` held across\n+        //~^ ERROR `Umm` held across\n+\n+        other().await;\n+\n+        *guard = Umm {\n+            i: 2\n+        }\n+    }\n+}\n+\n+fn main() {\n+}"}, {"sha": "91c91a4b545f8291e6ec3c61e9244609c02425d0", "filename": "src/test/ui/lint/must_not_suspend/ref.stderr", "status": "added", "additions": 41, "deletions": 0, "changes": 41, "blob_url": "https://github.com/rust-lang/rust/blob/461a0f3da4acd6dfea31b9f12c1e14405b055438/src%2Ftest%2Fui%2Flint%2Fmust_not_suspend%2Fref.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/461a0f3da4acd6dfea31b9f12c1e14405b055438/src%2Ftest%2Fui%2Flint%2Fmust_not_suspend%2Fref.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Fmust_not_suspend%2Fref.stderr?ref=461a0f3da4acd6dfea31b9f12c1e14405b055438", "patch": "@@ -0,0 +1,41 @@\n+error: `Umm` held across a yield point, but should not be\n+  --> $DIR/ref.rs:18:26\n+   |\n+LL |         let guard = &mut self.u;\n+   |                          ^^^^^^\n+...\n+LL |         other().await;\n+   |         ------------- The value is held across this yield point\n+   |\n+note: the lint level is defined here\n+  --> $DIR/ref.rs:3:9\n+   |\n+LL | #![deny(must_not_suspend)]\n+   |         ^^^^^^^^^^^^^^^^\n+   = note: You gotta use Umm's, ya know?\n+help: `drop` this value before the yield point, or use a block (`{ ... }`) \"\n+                        to shrink its scope\n+  --> $DIR/ref.rs:18:26\n+   |\n+LL |         let guard = &mut self.u;\n+   |                          ^^^^^^\n+\n+error: `Umm` held across a yield point, but should not be\n+  --> $DIR/ref.rs:18:26\n+   |\n+LL |         let guard = &mut self.u;\n+   |                          ^^^^^^\n+...\n+LL |         other().await;\n+   |         ------------- The value is held across this yield point\n+   |\n+   = note: You gotta use Umm's, ya know?\n+help: `drop` this value before the yield point, or use a block (`{ ... }`) \"\n+                        to shrink its scope\n+  --> $DIR/ref.rs:18:26\n+   |\n+LL |         let guard = &mut self.u;\n+   |                          ^^^^^^\n+\n+error: aborting due to 2 previous errors\n+"}]}