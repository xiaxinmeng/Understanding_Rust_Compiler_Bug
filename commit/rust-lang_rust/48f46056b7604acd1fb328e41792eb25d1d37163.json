{"sha": "48f46056b7604acd1fb328e41792eb25d1d37163", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ4ZjQ2MDU2Yjc2MDRhY2QxZmIzMjhlNDE3OTJlYjI1ZDFkMzcxNjM=", "commit": {"author": {"name": "ljedrz", "email": "ljedrz@gmail.com", "date": "2018-09-21T11:06:44Z"}, "committer": {"name": "ljedrz", "email": "ljedrz@gmail.com", "date": "2018-09-21T11:06:44Z"}, "message": "Simplify slice's first(_mut) and last(_mut) with get", "tree": {"sha": "59a459bbf33477dc4152488190bcb625500126ba", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/59a459bbf33477dc4152488190bcb625500126ba"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/48f46056b7604acd1fb328e41792eb25d1d37163", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/48f46056b7604acd1fb328e41792eb25d1d37163", "html_url": "https://github.com/rust-lang/rust/commit/48f46056b7604acd1fb328e41792eb25d1d37163", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/48f46056b7604acd1fb328e41792eb25d1d37163/comments", "author": {"login": "ljedrz", "id": 3750347, "node_id": "MDQ6VXNlcjM3NTAzNDc=", "avatar_url": "https://avatars.githubusercontent.com/u/3750347?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ljedrz", "html_url": "https://github.com/ljedrz", "followers_url": "https://api.github.com/users/ljedrz/followers", "following_url": "https://api.github.com/users/ljedrz/following{/other_user}", "gists_url": "https://api.github.com/users/ljedrz/gists{/gist_id}", "starred_url": "https://api.github.com/users/ljedrz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ljedrz/subscriptions", "organizations_url": "https://api.github.com/users/ljedrz/orgs", "repos_url": "https://api.github.com/users/ljedrz/repos", "events_url": "https://api.github.com/users/ljedrz/events{/privacy}", "received_events_url": "https://api.github.com/users/ljedrz/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ljedrz", "id": 3750347, "node_id": "MDQ6VXNlcjM3NTAzNDc=", "avatar_url": "https://avatars.githubusercontent.com/u/3750347?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ljedrz", "html_url": "https://github.com/ljedrz", "followers_url": "https://api.github.com/users/ljedrz/followers", "following_url": "https://api.github.com/users/ljedrz/following{/other_user}", "gists_url": "https://api.github.com/users/ljedrz/gists{/gist_id}", "starred_url": "https://api.github.com/users/ljedrz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ljedrz/subscriptions", "organizations_url": "https://api.github.com/users/ljedrz/orgs", "repos_url": "https://api.github.com/users/ljedrz/repos", "events_url": "https://api.github.com/users/ljedrz/events{/privacy}", "received_events_url": "https://api.github.com/users/ljedrz/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ff6422d7a392acfc8af28994d65af2bbaecea4f6", "url": "https://api.github.com/repos/rust-lang/rust/commits/ff6422d7a392acfc8af28994d65af2bbaecea4f6", "html_url": "https://github.com/rust-lang/rust/commit/ff6422d7a392acfc8af28994d65af2bbaecea4f6"}], "stats": {"total": 12, "additions": 6, "deletions": 6}, "files": [{"sha": "59f7130320081a588c4a29e4a5252b2915a794f2", "filename": "src/libcore/slice/mod.rs", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/48f46056b7604acd1fb328e41792eb25d1d37163/src%2Flibcore%2Fslice%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/48f46056b7604acd1fb328e41792eb25d1d37163/src%2Flibcore%2Fslice%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fslice%2Fmod.rs?ref=48f46056b7604acd1fb328e41792eb25d1d37163", "patch": "@@ -119,7 +119,7 @@ impl<T> [T] {\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n     #[inline]\n     pub fn first(&self) -> Option<&T> {\n-        if self.is_empty() { None } else { Some(&self[0]) }\n+        self.get(0)\n     }\n \n     /// Returns a mutable pointer to the first element of the slice, or `None` if it is empty.\n@@ -137,7 +137,7 @@ impl<T> [T] {\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n     #[inline]\n     pub fn first_mut(&mut self) -> Option<&mut T> {\n-        if self.is_empty() { None } else { Some(&mut self[0]) }\n+        self.get_mut(0)\n     }\n \n     /// Returns the first and all the rest of the elements of the slice, or `None` if it is empty.\n@@ -239,7 +239,8 @@ impl<T> [T] {\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n     #[inline]\n     pub fn last(&self) -> Option<&T> {\n-        if self.is_empty() { None } else { Some(&self[self.len() - 1]) }\n+        let last_idx = self.len().checked_sub(1)?;\n+        self.get(last_idx)\n     }\n \n     /// Returns a mutable pointer to the last item in the slice.\n@@ -257,9 +258,8 @@ impl<T> [T] {\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n     #[inline]\n     pub fn last_mut(&mut self) -> Option<&mut T> {\n-        let len = self.len();\n-        if len == 0 { return None; }\n-        Some(&mut self[len - 1])\n+        let last_idx = self.len().checked_sub(1)?;\n+        self.get_mut(last_idx)\n     }\n \n     /// Returns a reference to an element or subslice depending on the type of"}]}