{"sha": "eec9e988e18ff33a60dc7a9056bf2d4a35fd2a20", "node_id": "MDY6Q29tbWl0NzI0NzEyOmVlYzllOTg4ZTE4ZmYzM2E2MGRjN2E5MDU2YmYyZDRhMzVmZDJhMjA=", "commit": {"author": {"name": "Steven Allen", "email": "steven@stebalien.com", "date": "2017-02-17T06:49:46Z"}, "committer": {"name": "Steven Allen", "email": "steven@stebalien.com", "date": "2017-02-17T06:49:46Z"}, "message": "Fixup String::split_off documentation\n\n1. Clarify that `String::split_off` returns one string and modifies self\n   in-place. The documentation implied that it returns two new strings.\n\n2. Make the documentation mirror `Vec::split_off`.", "tree": {"sha": "7b65eb7e93cf3b73187c12d06ef341460a211605", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7b65eb7e93cf3b73187c12d06ef341460a211605"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/eec9e988e18ff33a60dc7a9056bf2d4a35fd2a20", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/eec9e988e18ff33a60dc7a9056bf2d4a35fd2a20", "html_url": "https://github.com/rust-lang/rust/commit/eec9e988e18ff33a60dc7a9056bf2d4a35fd2a20", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/eec9e988e18ff33a60dc7a9056bf2d4a35fd2a20/comments", "author": {"login": "Stebalien", "id": 310393, "node_id": "MDQ6VXNlcjMxMDM5Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/310393?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Stebalien", "html_url": "https://github.com/Stebalien", "followers_url": "https://api.github.com/users/Stebalien/followers", "following_url": "https://api.github.com/users/Stebalien/following{/other_user}", "gists_url": "https://api.github.com/users/Stebalien/gists{/gist_id}", "starred_url": "https://api.github.com/users/Stebalien/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Stebalien/subscriptions", "organizations_url": "https://api.github.com/users/Stebalien/orgs", "repos_url": "https://api.github.com/users/Stebalien/repos", "events_url": "https://api.github.com/users/Stebalien/events{/privacy}", "received_events_url": "https://api.github.com/users/Stebalien/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Stebalien", "id": 310393, "node_id": "MDQ6VXNlcjMxMDM5Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/310393?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Stebalien", "html_url": "https://github.com/Stebalien", "followers_url": "https://api.github.com/users/Stebalien/followers", "following_url": "https://api.github.com/users/Stebalien/following{/other_user}", "gists_url": "https://api.github.com/users/Stebalien/gists{/gist_id}", "starred_url": "https://api.github.com/users/Stebalien/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Stebalien/subscriptions", "organizations_url": "https://api.github.com/users/Stebalien/orgs", "repos_url": "https://api.github.com/users/Stebalien/repos", "events_url": "https://api.github.com/users/Stebalien/events{/privacy}", "received_events_url": "https://api.github.com/users/Stebalien/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "668864d9edd4f28d48005b57e5b177228cb974c5", "url": "https://api.github.com/repos/rust-lang/rust/commits/668864d9edd4f28d48005b57e5b177228cb974c5", "html_url": "https://github.com/rust-lang/rust/commit/668864d9edd4f28d48005b57e5b177228cb974c5"}], "stats": {"total": 18, "additions": 9, "deletions": 9}, "files": [{"sha": "e92eb4ff7bdd4b565b4a81543e09b366d9230dae", "filename": "src/libcollections/string.rs", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/eec9e988e18ff33a60dc7a9056bf2d4a35fd2a20/src%2Flibcollections%2Fstring.rs", "raw_url": "https://github.com/rust-lang/rust/raw/eec9e988e18ff33a60dc7a9056bf2d4a35fd2a20/src%2Flibcollections%2Fstring.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcollections%2Fstring.rs?ref=eec9e988e18ff33a60dc7a9056bf2d4a35fd2a20", "patch": "@@ -1250,17 +1250,17 @@ impl String {\n         self.len() == 0\n     }\n \n-    /// Divide one string into two at an index.\n+    /// Splits the string into two at the given index.\n     ///\n-    /// The argument, `mid`, should be a byte offset from the start of the string. It must also\n-    /// be on the boundary of a UTF-8 code point.\n+    /// Returns a newly allocated `String`. `self` contains bytes `[0, at)`, and\n+    /// the returned `String` contains bytes `[at, len)`. `at` must be on the\n+    /// boundary of a UTF-8 code point.\n     ///\n-    /// The two strings returned go from the start of the string to `mid`, and from `mid` to the end\n-    /// of the string.\n+    /// Note that the capacity of `self` does not change.\n     ///\n     /// # Panics\n     ///\n-    /// Panics if `mid` is not on a `UTF-8` code point boundary, or if it is beyond the last\n+    /// Panics if `at` is not on a `UTF-8` code point boundary, or if it is beyond the last\n     /// code point of the string.\n     ///\n     /// # Examples\n@@ -1275,9 +1275,9 @@ impl String {\n     /// ```\n     #[inline]\n     #[stable(feature = \"string_split_off\", since = \"1.16.0\")]\n-    pub fn split_off(&mut self, mid: usize) -> String {\n-        assert!(self.is_char_boundary(mid));\n-        let other = self.vec.split_off(mid);\n+    pub fn split_off(&mut self, at: usize) -> String {\n+        assert!(self.is_char_boundary(at));\n+        let other = self.vec.split_off(at);\n         unsafe { String::from_utf8_unchecked(other) }\n     }\n "}]}