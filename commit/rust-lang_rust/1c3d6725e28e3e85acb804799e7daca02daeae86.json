{"sha": "1c3d6725e28e3e85acb804799e7daca02daeae86", "node_id": "C_kwDOAAsO6NoAKDFjM2Q2NzI1ZTI4ZTNlODVhY2I4MDQ3OTllN2RhY2EwMmRhZWFlODY", "commit": {"author": {"name": "Tianyi Song", "email": "42670338+tysg@users.noreply.github.com", "date": "2022-01-28T08:15:23Z"}, "committer": {"name": "Tianyi Song", "email": "42670338+tysg@users.noreply.github.com", "date": "2022-02-22T07:41:26Z"}, "message": "Drop generic args in path before insert use", "tree": {"sha": "5d0202c28c82f226f4efe46bcb511c07f8bc0674", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5d0202c28c82f226f4efe46bcb511c07f8bc0674"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1c3d6725e28e3e85acb804799e7daca02daeae86", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1c3d6725e28e3e85acb804799e7daca02daeae86", "html_url": "https://github.com/rust-lang/rust/commit/1c3d6725e28e3e85acb804799e7daca02daeae86", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1c3d6725e28e3e85acb804799e7daca02daeae86/comments", "author": {"login": "tysg", "id": 42670338, "node_id": "MDQ6VXNlcjQyNjcwMzM4", "avatar_url": "https://avatars.githubusercontent.com/u/42670338?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tysg", "html_url": "https://github.com/tysg", "followers_url": "https://api.github.com/users/tysg/followers", "following_url": "https://api.github.com/users/tysg/following{/other_user}", "gists_url": "https://api.github.com/users/tysg/gists{/gist_id}", "starred_url": "https://api.github.com/users/tysg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tysg/subscriptions", "organizations_url": "https://api.github.com/users/tysg/orgs", "repos_url": "https://api.github.com/users/tysg/repos", "events_url": "https://api.github.com/users/tysg/events{/privacy}", "received_events_url": "https://api.github.com/users/tysg/received_events", "type": "User", "site_admin": false}, "committer": {"login": "tysg", "id": 42670338, "node_id": "MDQ6VXNlcjQyNjcwMzM4", "avatar_url": "https://avatars.githubusercontent.com/u/42670338?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tysg", "html_url": "https://github.com/tysg", "followers_url": "https://api.github.com/users/tysg/followers", "following_url": "https://api.github.com/users/tysg/following{/other_user}", "gists_url": "https://api.github.com/users/tysg/gists{/gist_id}", "starred_url": "https://api.github.com/users/tysg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tysg/subscriptions", "organizations_url": "https://api.github.com/users/tysg/orgs", "repos_url": "https://api.github.com/users/tysg/repos", "events_url": "https://api.github.com/users/tysg/events{/privacy}", "received_events_url": "https://api.github.com/users/tysg/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c0ee2f23ff70349704dfe8448027a41b7788eb37", "url": "https://api.github.com/repos/rust-lang/rust/commits/c0ee2f23ff70349704dfe8448027a41b7788eb37", "html_url": "https://github.com/rust-lang/rust/commit/c0ee2f23ff70349704dfe8448027a41b7788eb37"}], "stats": {"total": 46, "additions": 44, "deletions": 2}, "files": [{"sha": "71c674a8dd745fdad9641239d8290f6941c9c90c", "filename": "crates/ide_assists/src/handlers/replace_qualified_name_with_use.rs", "status": "modified", "additions": 44, "deletions": 2, "changes": 46, "blob_url": "https://github.com/rust-lang/rust/blob/1c3d6725e28e3e85acb804799e7daca02daeae86/crates%2Fide_assists%2Fsrc%2Fhandlers%2Freplace_qualified_name_with_use.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1c3d6725e28e3e85acb804799e7daca02daeae86/crates%2Fide_assists%2Fsrc%2Fhandlers%2Freplace_qualified_name_with_use.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_assists%2Fsrc%2Fhandlers%2Freplace_qualified_name_with_use.rs?ref=1c3d6725e28e3e85acb804799e7daca02daeae86", "patch": "@@ -84,7 +84,8 @@ pub(crate) fn replace_qualified_name_with_use(\n                 ImportScope::Module(it) => ImportScope::Module(builder.make_mut(it)),\n                 ImportScope::Block(it) => ImportScope::Block(builder.make_mut(it)),\n             };\n-            shorten_paths(scope.as_syntax_node(), &path.clone_for_update());\n+            shorten_paths(scope.as_syntax_node(), &path);\n+            let path = drop_generic_args(&path);\n             // stick the found import in front of the to be replaced path\n             let path = match path_to_qualifier.and_then(|it| mod_path_to_ast(&it).qualifier()) {\n                 Some(qualifier) => make::path_concat(qualifier, path),\n@@ -95,7 +96,17 @@ pub(crate) fn replace_qualified_name_with_use(\n     )\n }\n \n-/// Adds replacements to `re` that shorten `path` in all descendants of `node`.\n+fn drop_generic_args(path: &ast::Path) -> ast::Path {\n+    let path = path.clone_for_update();\n+    if let Some(segment) = path.segment() {\n+        if let Some(generic_args) = segment.generic_arg_list() {\n+            ted::remove(generic_args.syntax());\n+        }\n+    }\n+    path\n+}\n+\n+/// Mutates `node` to shorten `path` in all descendants of `node`.\n fn shorten_paths(node: &SyntaxNode, path: &ast::Path) {\n     for child in node.children() {\n         match_ast! {\n@@ -389,6 +400,37 @@ mod std {\n fn main() {\n     drop(0);\n }\n+\",\n+        );\n+    }\n+\n+    #[test]\n+    fn replace_should_drop_generic_args_in_use() {\n+        check_assist(\n+            replace_qualified_name_with_use,\n+            r\"\n+mod std {\n+    pub mod mem {\n+        pub fn drop<T>(_: T) {}\n+    }\n+}\n+\n+fn main() {\n+    std::mem::drop::<usize>$0(0);\n+}\n+\",\n+            r\"\n+use std::mem::drop;\n+\n+mod std {\n+    pub mod mem {\n+        pub fn drop<T>(_: T) {}\n+    }\n+}\n+\n+fn main() {\n+    drop::<usize>(0);\n+}\n \",\n         );\n     }"}]}