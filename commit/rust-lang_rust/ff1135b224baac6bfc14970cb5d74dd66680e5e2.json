{"sha": "ff1135b224baac6bfc14970cb5d74dd66680e5e2", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZmMTEzNWIyMjRiYWFjNmJmYzE0OTcwY2I1ZDc0ZGQ2NjY4MGU1ZTI=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2017-08-04T17:36:10Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2017-08-04T17:36:10Z"}, "message": "Auto merge of #43577 - cuviper:link-llvm-dylib, r=sanxiyn\n\nLink LLVM tools dynamically\n\nSet `LLVM_LINK_LLVM_DYLIB=ON` -- \"If enabled, tools will be linked with\nthe libLLVM shared library.\"  Rust doesn't ship any of the LLVM tools,\nand only needs a few at all for some test cases, so statically linking\nthe tools is just a waste of space.  I've also had memory issues on\nslower machines with LLVM debuginfo enabled, when several tools start\nlinking in parallel consuming several GBs each.\n\nWith the default configuration, `build/x86_64-unknown-linux-gnu/llvm`\nwas 1.5GB before, now down to 731MB.  The difference is more drastic\nwith `--enable-llvm-release-debuginfo`, from 28GB to \"only\" 13GB.\n\nThis does not change the linking behavior of `rustc_llvm`.", "tree": {"sha": "e4740c4cd0e05cdd2086564742ed1223805b09fe", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e4740c4cd0e05cdd2086564742ed1223805b09fe"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ff1135b224baac6bfc14970cb5d74dd66680e5e2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ff1135b224baac6bfc14970cb5d74dd66680e5e2", "html_url": "https://github.com/rust-lang/rust/commit/ff1135b224baac6bfc14970cb5d74dd66680e5e2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ff1135b224baac6bfc14970cb5d74dd66680e5e2/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "dae8864dbe1b81e4cd3b2a6b046a95db337b3098", "url": "https://api.github.com/repos/rust-lang/rust/commits/dae8864dbe1b81e4cd3b2a6b046a95db337b3098", "html_url": "https://github.com/rust-lang/rust/commit/dae8864dbe1b81e4cd3b2a6b046a95db337b3098"}, {"sha": "6c46f4f11cdd56fcd12c86d121259c738b7a8376", "url": "https://api.github.com/repos/rust-lang/rust/commits/6c46f4f11cdd56fcd12c86d121259c738b7a8376", "html_url": "https://github.com/rust-lang/rust/commit/6c46f4f11cdd56fcd12c86d121259c738b7a8376"}], "stats": {"total": 9, "additions": 9, "deletions": 0}, "files": [{"sha": "ee0eca5d482432853ba2ee66e2ff3f6bef067173", "filename": "src/bootstrap/native.rs", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/ff1135b224baac6bfc14970cb5d74dd66680e5e2/src%2Fbootstrap%2Fnative.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ff1135b224baac6bfc14970cb5d74dd66680e5e2/src%2Fbootstrap%2Fnative.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fnative.rs?ref=ff1135b224baac6bfc14970cb5d74dd66680e5e2", "patch": "@@ -129,6 +129,15 @@ impl Step for Llvm {\n            .define(\"LLVM_TARGET_ARCH\", target.split('-').next().unwrap())\n            .define(\"LLVM_DEFAULT_TARGET_TRIPLE\", target);\n \n+\n+        // This setting makes the LLVM tools link to the dynamic LLVM library,\n+        // which saves both memory during parallel links and overall disk space\n+        // for the tools.  We don't distribute any of those tools, so this is\n+        // just a local concern.  However, it doesn't work well everywhere.\n+        if target.contains(\"linux-gnu\") || target.contains(\"apple-darwin\") {\n+           cfg.define(\"LLVM_LINK_LLVM_DYLIB\", \"ON\");\n+        }\n+\n         if target.contains(\"msvc\") {\n             cfg.define(\"LLVM_USE_CRT_DEBUG\", \"MT\");\n             cfg.define(\"LLVM_USE_CRT_RELEASE\", \"MT\");"}]}