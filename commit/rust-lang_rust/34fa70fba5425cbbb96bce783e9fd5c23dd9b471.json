{"sha": "34fa70fba5425cbbb96bce783e9fd5c23dd9b471", "node_id": "MDY6Q29tbWl0NzI0NzEyOjM0ZmE3MGZiYTU0MjVjYmJiOTZiY2U3ODNlOWZkNWMyM2RkOWI0NzE=", "commit": {"author": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2015-01-16T20:20:03Z"}, "committer": {"name": "Steve Klabnik", "email": "steve@steveklabnik.com", "date": "2015-01-17T15:51:07Z"}, "message": "std: Move the bitflags! macro to a gated crate\n\nIn accordance with [collections reform part 2][rfc] this macro has been moved to\nan external [bitflags crate][crate] which is [available though\ncrates.io][cratesio]. Inside the standard distribution the macro has been moved\nto a crate called `rustc_bitflags` for current users to continue using.\n\n[rfc]: https://github.com/rust-lang/rfcs/blob/master/text/0509-collections-reform-part-2.md\n[crate]: https://github.com/rust-lang/bitflags\n[cratesio]: http://crates.io/crates/bitflags\n\nThe major user of `bitflags!` in terms of a public-facing possibly-stable API\ntoday is the `FilePermissions` structure inside of `std::io`. This user,\nhowever, will likely no longer use `bitflags!` after I/O reform has landed. To\nprevent breaking APIs today, this structure remains as-is.\n\nCurrent users of the `bitflags!` macro should add this to their `Cargo.toml`:\n\n    bitflags = \"0.1\"\n\nand this to their crate root:\n\n    #[macro_use] extern crate bitflags;\n\nDue to the removal of a public macro, this is a:\n\n[breaking-change]", "tree": {"sha": "6ce5ed5ec0ec21efdfc061c6382dcd2403f6f6d0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6ce5ed5ec0ec21efdfc061c6382dcd2403f6f6d0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/34fa70fba5425cbbb96bce783e9fd5c23dd9b471", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/34fa70fba5425cbbb96bce783e9fd5c23dd9b471", "html_url": "https://github.com/rust-lang/rust/commit/34fa70fba5425cbbb96bce783e9fd5c23dd9b471", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/34fa70fba5425cbbb96bce783e9fd5c23dd9b471/comments", "author": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "steveklabnik", "id": 27786, "node_id": "MDQ6VXNlcjI3Nzg2", "avatar_url": "https://avatars.githubusercontent.com/u/27786?v=4", "gravatar_id": "", "url": "https://api.github.com/users/steveklabnik", "html_url": "https://github.com/steveklabnik", "followers_url": "https://api.github.com/users/steveklabnik/followers", "following_url": "https://api.github.com/users/steveklabnik/following{/other_user}", "gists_url": "https://api.github.com/users/steveklabnik/gists{/gist_id}", "starred_url": "https://api.github.com/users/steveklabnik/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/steveklabnik/subscriptions", "organizations_url": "https://api.github.com/users/steveklabnik/orgs", "repos_url": "https://api.github.com/users/steveklabnik/repos", "events_url": "https://api.github.com/users/steveklabnik/events{/privacy}", "received_events_url": "https://api.github.com/users/steveklabnik/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "02968389dcbc32c757ff5d8a3e7bf96c5d9d4225", "url": "https://api.github.com/repos/rust-lang/rust/commits/02968389dcbc32c757ff5d8a3e7bf96c5d9d4225", "html_url": "https://github.com/rust-lang/rust/commit/02968389dcbc32c757ff5d8a3e7bf96c5d9d4225"}], "stats": {"total": 32, "additions": 24, "deletions": 8}, "files": [{"sha": "5957405f0f9ec08c2b5ec476e6491031213af059", "filename": "mk/crates.mk", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/34fa70fba5425cbbb96bce783e9fd5c23dd9b471/mk%2Fcrates.mk", "raw_url": "https://github.com/rust-lang/rust/raw/34fa70fba5425cbbb96bce783e9fd5c23dd9b471/mk%2Fcrates.mk", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/mk%2Fcrates.mk?ref=34fa70fba5425cbbb96bce783e9fd5c23dd9b471", "patch": "@@ -52,7 +52,7 @@\n TARGET_CRATES := libc std flate arena term \\\n                  serialize getopts collections test rand \\\n                  log regex graphviz core rbml alloc \\\n-                 unicode\n+                 unicode rustc_bitflags\n RUSTC_CRATES := rustc rustc_typeck rustc_borrowck rustc_resolve rustc_driver \\\n                 rustc_trans rustc_back rustc_llvm rustc_privacy\n HOST_CRATES := syntax $(RUSTC_CRATES) rustdoc fmt_macros\n@@ -64,7 +64,8 @@ DEPS_libc := core\n DEPS_unicode := core\n DEPS_alloc := core libc native:jemalloc\n DEPS_std := core libc rand alloc collections unicode \\\n-\tnative:rust_builtin native:backtrace native:rustrt_native\n+\tnative:rust_builtin native:backtrace native:rustrt_native \\\n+\trustc_bitflags\n DEPS_graphviz := std\n DEPS_syntax := std term serialize log fmt_macros arena libc\n DEPS_rustc_driver := arena flate getopts graphviz libc rustc rustc_back rustc_borrowck \\\n@@ -83,6 +84,7 @@ DEPS_rustc_llvm := native:rustllvm libc std\n DEPS_rustc_back := std syntax rustc_llvm flate log libc\n DEPS_rustdoc := rustc rustc_driver native:hoedown serialize getopts \\\n                 test\n+DEPS_rustc_bitflags := core\n DEPS_flate := std native:miniz\n DEPS_arena := std\n DEPS_graphviz := std\n@@ -114,6 +116,7 @@ ONLY_RLIB_alloc := 1\n ONLY_RLIB_rand := 1\n ONLY_RLIB_collections := 1\n ONLY_RLIB_unicode := 1\n+ONLY_RLIB_rustc_bitflags := 1\n \n ################################################################################\n # You should not need to edit below this line"}, {"sha": "a283fdf36a96bdfd564443dcd94d839321d005ac", "filename": "src/librustc/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/34fa70fba5425cbbb96bce783e9fd5c23dd9b471/src%2Flibrustc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/34fa70fba5425cbbb96bce783e9fd5c23dd9b471/src%2Flibrustc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Flib.rs?ref=34fa70fba5425cbbb96bce783e9fd5c23dd9b471", "patch": "@@ -44,6 +44,7 @@ extern crate rbml;\n extern crate collections;\n #[macro_use] extern crate log;\n #[macro_use] extern crate syntax;\n+#[macro_use] #[no_link] extern crate rustc_bitflags;\n \n extern crate \"serialize\" as rustc_serialize; // used by deriving\n "}, {"sha": "c47a525552ded384bb9db0ae8276c152cbff1866", "filename": "src/librustc_bitflags/lib.rs", "status": "renamed", "additions": 12, "deletions": 2, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/34fa70fba5425cbbb96bce783e9fd5c23dd9b471/src%2Flibrustc_bitflags%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/34fa70fba5425cbbb96bce783e9fd5c23dd9b471/src%2Flibrustc_bitflags%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_bitflags%2Flib.rs?ref=34fa70fba5425cbbb96bce783e9fd5c23dd9b471", "patch": "@@ -8,10 +8,16 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#![crate_name = \"rustc_bitflags\"]\n #![unstable]\n+#![staged_api]\n+#![crate_type = \"rlib\"]\n+#![no_std]\n \n //! A typesafe bitmask flag generator.\n \n+#[cfg(test)] #[macro_use] extern crate std;\n+\n /// The `bitflags!` macro generates a `struct` that holds a set of C-style\n /// bitmask flags. It is useful for creating typesafe wrappers for C APIs.\n ///\n@@ -21,6 +27,8 @@\n /// # Example\n ///\n /// ```{.rust}\n+/// #[macro_use] extern crate rustc_bitflags;\n+///\n /// bitflags! {\n ///     flags Flags: u32 {\n ///         const FLAG_A       = 0b00000001,\n@@ -45,6 +53,8 @@\n /// The generated `struct`s can also be extended with type and trait implementations:\n ///\n /// ```{.rust}\n+/// #[macro_use] extern crate rustc_bitflags;\n+///\n /// use std::fmt;\n ///\n /// bitflags! {\n@@ -273,8 +283,8 @@ macro_rules! bitflags {\n #[cfg(test)]\n #[allow(non_upper_case_globals)]\n mod tests {\n-    use hash::{self, SipHasher};\n-    use option::Option::{Some, None};\n+    use std::hash::{self, SipHasher};\n+    use std::option::Option::{Some, None};\n \n     bitflags! {\n         #[doc = \"> The first principle is that you must not fool yourself \u2014 and\"]", "previous_filename": "src/libstd/bitflags.rs"}, {"sha": "59676fa3504a912c984ef678e7538051e0b040b3", "filename": "src/librustc_llvm/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/34fa70fba5425cbbb96bce783e9fd5c23dd9b471/src%2Flibrustc_llvm%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/34fa70fba5425cbbb96bce783e9fd5c23dd9b471/src%2Flibrustc_llvm%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_llvm%2Flib.rs?ref=34fa70fba5425cbbb96bce783e9fd5c23dd9b471", "patch": "@@ -28,6 +28,7 @@\n #![allow(unknown_features)] #![feature(int_uint)]\n \n extern crate libc;\n+#[macro_use] #[no_link] extern crate rustc_bitflags;\n \n pub use self::OtherAttribute::*;\n pub use self::SpecialAttribute::*;"}, {"sha": "22064a35058ecf4544c9e3915abae717d23dfebd", "filename": "src/librustc_resolve/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/34fa70fba5425cbbb96bce783e9fd5c23dd9b471/src%2Flibrustc_resolve%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/34fa70fba5425cbbb96bce783e9fd5c23dd9b471/src%2Flibrustc_resolve%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2Flib.rs?ref=34fa70fba5425cbbb96bce783e9fd5c23dd9b471", "patch": "@@ -23,6 +23,7 @@\n \n #[macro_use] extern crate log;\n #[macro_use] extern crate syntax;\n+#[macro_use] #[no_link] extern crate rustc_bitflags;\n \n extern crate rustc;\n "}, {"sha": "2553bbdf52310b039cb2bf043a9b2f6d885b6410", "filename": "src/libstd/lib.rs", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/34fa70fba5425cbbb96bce783e9fd5c23dd9b471/src%2Flibstd%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/34fa70fba5425cbbb96bce783e9fd5c23dd9b471/src%2Flibstd%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Flib.rs?ref=34fa70fba5425cbbb96bce783e9fd5c23dd9b471", "patch": "@@ -111,7 +111,7 @@\n #![feature(box_syntax)]\n #![feature(old_impl_check)]\n #![feature(optin_builtin_traits)]\n-#![allow(unknown_features)] #![feature(int_uint)]\n+#![feature(int_uint)]\n \n // Don't link to std. We are std.\n #![no_std]\n@@ -136,6 +136,8 @@ extern crate alloc;\n extern crate unicode;\n extern crate libc;\n \n+#[macro_use] #[no_link] extern crate rustc_bitflags;\n+\n // Make std testable by not duplicating lang items. See #2912\n #[cfg(test)] extern crate \"std\" as realstd;\n #[cfg(test)] pub use realstd::marker;\n@@ -181,9 +183,6 @@ pub use unicode::char;\n #[macro_use]\n mod macros;\n \n-#[macro_use]\n-pub mod bitflags;\n-\n mod rtdeps;\n \n /* The Prelude. */"}, {"sha": "096e96b003bb04b23453c2b923f9515390def13a", "filename": "src/libsyntax/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/34fa70fba5425cbbb96bce783e9fd5c23dd9b471/src%2Flibsyntax%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/34fa70fba5425cbbb96bce783e9fd5c23dd9b471/src%2Flibsyntax%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Flib.rs?ref=34fa70fba5425cbbb96bce783e9fd5c23dd9b471", "patch": "@@ -35,6 +35,7 @@ extern crate serialize;\n extern crate term;\n extern crate libc;\n #[macro_use] extern crate log;\n+#[macro_use] #[no_link] extern crate rustc_bitflags;\n \n extern crate \"serialize\" as rustc_serialize; // used by deriving\n "}]}