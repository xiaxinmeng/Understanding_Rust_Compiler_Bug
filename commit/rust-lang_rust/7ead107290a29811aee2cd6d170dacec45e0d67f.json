{"sha": "7ead107290a29811aee2cd6d170dacec45e0d67f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjdlYWQxMDcyOTBhMjk4MTFhZWUyY2Q2ZDE3MGRhY2VjNDVlMGQ2N2Y=", "commit": {"author": {"name": "Michael Bebenita", "email": "mbebenita@mozilla.com", "date": "2010-07-28T06:05:13Z"}, "committer": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2010-07-29T03:30:28Z"}, "message": "array_list improvements.", "tree": {"sha": "f5671282320870efbe5cf98bd7e8958b20155b31", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f5671282320870efbe5cf98bd7e8958b20155b31"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7ead107290a29811aee2cd6d170dacec45e0d67f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7ead107290a29811aee2cd6d170dacec45e0d67f", "html_url": "https://github.com/rust-lang/rust/commit/7ead107290a29811aee2cd6d170dacec45e0d67f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7ead107290a29811aee2cd6d170dacec45e0d67f/comments", "author": {"login": "mbebenita", "id": 311082, "node_id": "MDQ6VXNlcjMxMTA4Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/311082?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mbebenita", "html_url": "https://github.com/mbebenita", "followers_url": "https://api.github.com/users/mbebenita/followers", "following_url": "https://api.github.com/users/mbebenita/following{/other_user}", "gists_url": "https://api.github.com/users/mbebenita/gists{/gist_id}", "starred_url": "https://api.github.com/users/mbebenita/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mbebenita/subscriptions", "organizations_url": "https://api.github.com/users/mbebenita/orgs", "repos_url": "https://api.github.com/users/mbebenita/repos", "events_url": "https://api.github.com/users/mbebenita/events{/privacy}", "received_events_url": "https://api.github.com/users/mbebenita/received_events", "type": "User", "site_admin": false}, "committer": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "dfcf21ca821ee781074139222b3391dae40bf835", "url": "https://api.github.com/repos/rust-lang/rust/commits/dfcf21ca821ee781074139222b3391dae40bf835", "html_url": "https://github.com/rust-lang/rust/commit/dfcf21ca821ee781074139222b3391dae40bf835"}], "stats": {"total": 22, "additions": 21, "deletions": 1}, "files": [{"sha": "e6ce55ab792e706f4ef17520fc951c26758b0983", "filename": "src/rt/util/array_list.h", "status": "modified", "additions": 21, "deletions": 1, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/7ead107290a29811aee2cd6d170dacec45e0d67f/src%2Frt%2Futil%2Farray_list.h", "raw_url": "https://github.com/rust-lang/rust/raw/7ead107290a29811aee2cd6d170dacec45e0d67f/src%2Frt%2Futil%2Farray_list.h", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Futil%2Farray_list.h?ref=7ead107290a29811aee2cd6d170dacec45e0d67f", "patch": "@@ -14,20 +14,24 @@ template<typename T> class array_list {\n     ~array_list();\n     size_t size();\n     int32_t append(T value);\n+    int32_t push(T value);\n+    T pop();\n     T replace(T old_value, T new_value);\n     int32_t index_of(T value);\n+    bool is_empty();\n     T & operator[](size_t index);\n };\n \n template<typename T>\n array_list<T>::array_list() {\n+    _size = 0;\n     _capacity = INITIAL_CAPACITY;\n     _data = (T *) malloc(sizeof(T) * _capacity);\n }\n \n template<typename T>\n array_list<T>::~array_list() {\n-    delete _data;\n+    free(_data);\n }\n \n template<typename T> size_t\n@@ -37,6 +41,11 @@ array_list<T>::size() {\n \n template<typename T> int32_t\n array_list<T>::append(T value) {\n+    return push(value);\n+}\n+\n+template<typename T> int32_t\n+array_list<T>::push(T value) {\n     if (_size == _capacity) {\n         _capacity = _capacity * 2;\n         _data = (T *) realloc(_data, _capacity * sizeof(T));\n@@ -45,6 +54,12 @@ array_list<T>::append(T value) {\n     return _size - 1;\n }\n \n+template<typename T> T\n+array_list<T>::pop() {\n+    T value = _data[-- _size];\n+    return value;\n+}\n+\n /**\n  * Replaces the old_value in the list with the new_value.\n  * Returns the old_value if the replacement succeeded, or NULL otherwise.\n@@ -74,4 +89,9 @@ array_list<T>::operator[](size_t index) {\n     return _data[index];\n }\n \n+template<typename T> bool\n+array_list<T>::is_empty() {\n+    return _size == 0;\n+}\n+\n #endif /* ARRAY_LIST_H */"}]}