{"sha": "fa3f1865f61878cea3c0809473cfbad6fb32e11f", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZhM2YxODY1ZjYxODc4Y2VhM2MwODA5NDczY2ZiYWQ2ZmIzMmUxMWY=", "commit": {"author": {"name": "Yuki Okushi", "email": "huyuumi.dev@gmail.com", "date": "2021-03-13T00:44:42Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-03-13T00:44:42Z"}, "message": "Rollup merge of #82984 - camsteffen:lower-block, r=cjgillot\n\nSimplify ast block lowering", "tree": {"sha": "aae79e3b709d40fbc5c43faa177ec5948d3e876c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/aae79e3b709d40fbc5c43faa177ec5948d3e876c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/fa3f1865f61878cea3c0809473cfbad6fb32e11f", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJgTAr6CRBK7hj4Ov3rIwAAdHIIACV0TNYuYVYKnlLU6Uea9uHv\nAxDsCDggYMzs00XWPzN/h7/E23Au7OcHFVz+m4CV4jWrXpPjCh/ImKDlPNakhRSL\ne85TxRv0OTV1sK924NfiBWTCs15tCDWg475nEuQ9xRCYN63M76Ldjlg0irqkk64S\nbOjxEaDf3aCBYPpsWO7U6pp6qruE0M1xD2tf9VmTw8w87nZMRfsWuM9oah6yKiw+\nPrYeOvkyRwPPrJkLyTtlIwQawaeZ+J4nGrNpqocl/mGtCbVDfIQFcSQEDyab6dRf\ni48m8X8N18sdk1g82tHOow2Ab6iIbdVr/MgxUvV7/D2pvJh46urvXKHn63GJJ9g=\n=W2Z3\n-----END PGP SIGNATURE-----\n", "payload": "tree aae79e3b709d40fbc5c43faa177ec5948d3e876c\nparent b3e19a221e63dcffdef87e12eadf1f36a8b90295\nparent a8088220937764db329135b3e778de935a9abbb2\nauthor Yuki Okushi <huyuumi.dev@gmail.com> 1615596282 +0900\ncommitter GitHub <noreply@github.com> 1615596282 +0900\n\nRollup merge of #82984 - camsteffen:lower-block, r=cjgillot\n\nSimplify ast block lowering\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/fa3f1865f61878cea3c0809473cfbad6fb32e11f", "html_url": "https://github.com/rust-lang/rust/commit/fa3f1865f61878cea3c0809473cfbad6fb32e11f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/fa3f1865f61878cea3c0809473cfbad6fb32e11f/comments", "author": {"login": "JohnTitor", "id": 25030997, "node_id": "MDQ6VXNlcjI1MDMwOTk3", "avatar_url": "https://avatars.githubusercontent.com/u/25030997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JohnTitor", "html_url": "https://github.com/JohnTitor", "followers_url": "https://api.github.com/users/JohnTitor/followers", "following_url": "https://api.github.com/users/JohnTitor/following{/other_user}", "gists_url": "https://api.github.com/users/JohnTitor/gists{/gist_id}", "starred_url": "https://api.github.com/users/JohnTitor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JohnTitor/subscriptions", "organizations_url": "https://api.github.com/users/JohnTitor/orgs", "repos_url": "https://api.github.com/users/JohnTitor/repos", "events_url": "https://api.github.com/users/JohnTitor/events{/privacy}", "received_events_url": "https://api.github.com/users/JohnTitor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b3e19a221e63dcffdef87e12eadf1f36a8b90295", "url": "https://api.github.com/repos/rust-lang/rust/commits/b3e19a221e63dcffdef87e12eadf1f36a8b90295", "html_url": "https://github.com/rust-lang/rust/commit/b3e19a221e63dcffdef87e12eadf1f36a8b90295"}, {"sha": "a8088220937764db329135b3e778de935a9abbb2", "url": "https://api.github.com/repos/rust-lang/rust/commits/a8088220937764db329135b3e778de935a9abbb2", "html_url": "https://github.com/rust-lang/rust/commit/a8088220937764db329135b3e778de935a9abbb2"}], "stats": {"total": 26, "additions": 6, "deletions": 20}, "files": [{"sha": "3a97321ceb69195276e05ee0d843f97f4a7bb47f", "filename": "compiler/rustc_ast_lowering/src/lib.rs", "status": "modified", "additions": 6, "deletions": 20, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/fa3f1865f61878cea3c0809473cfbad6fb32e11f/compiler%2Frustc_ast_lowering%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fa3f1865f61878cea3c0809473cfbad6fb32e11f/compiler%2Frustc_ast_lowering%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_ast_lowering%2Fsrc%2Flib.rs?ref=fa3f1865f61878cea3c0809473cfbad6fb32e11f", "patch": "@@ -2409,26 +2409,12 @@ impl<'a, 'hir> LoweringContext<'a, 'hir> {\n     }\n \n     fn lower_block_noalloc(&mut self, b: &Block, targeted_by_break: bool) -> hir::Block<'hir> {\n-        let mut expr: Option<&'hir _> = None;\n-\n-        let stmts = self.arena.alloc_from_iter(\n-            b.stmts\n-                .iter()\n-                .enumerate()\n-                .filter_map(|(index, stmt)| {\n-                    if index == b.stmts.len() - 1 {\n-                        if let StmtKind::Expr(ref e) = stmt.kind {\n-                            expr = Some(self.lower_expr(e));\n-                            None\n-                        } else {\n-                            Some(self.lower_stmt(stmt))\n-                        }\n-                    } else {\n-                        Some(self.lower_stmt(stmt))\n-                    }\n-                })\n-                .flatten(),\n-        );\n+        let (stmts, expr) = match &*b.stmts {\n+            [stmts @ .., Stmt { kind: StmtKind::Expr(e), .. }] => (stmts, Some(&*e)),\n+            stmts => (stmts, None),\n+        };\n+        let stmts = self.arena.alloc_from_iter(stmts.iter().flat_map(|stmt| self.lower_stmt(stmt)));\n+        let expr = expr.map(|e| self.lower_expr(e));\n         let rules = self.lower_block_check_mode(&b.rules);\n         let hir_id = self.lower_node_id(b.id);\n "}]}