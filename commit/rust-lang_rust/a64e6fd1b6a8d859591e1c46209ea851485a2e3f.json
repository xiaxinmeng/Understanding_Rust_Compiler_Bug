{"sha": "a64e6fd1b6a8d859591e1c46209ea851485a2e3f", "node_id": "C_kwDOAAsO6NoAKGE2NGU2ZmQxYjZhOGQ4NTk1OTFlMWM0NjIwOWVhODUxNDg1YTJlM2Y", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-03-20T14:38:27Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-03-20T14:38:27Z"}, "message": "Auto merge of #2022 - RalfJung:remove_dir_all, r=RalfJung\n\ntest remove_dir_all\n\nBlocked on https://github.com/rust-lang/rust/pull/94749\n\nCc https://github.com/rust-lang/miri/issues/1966", "tree": {"sha": "5fb448fab5becf7cb106cc5dc8fed503df67bbd3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5fb448fab5becf7cb106cc5dc8fed503df67bbd3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a64e6fd1b6a8d859591e1c46209ea851485a2e3f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a64e6fd1b6a8d859591e1c46209ea851485a2e3f", "html_url": "https://github.com/rust-lang/rust/commit/a64e6fd1b6a8d859591e1c46209ea851485a2e3f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a64e6fd1b6a8d859591e1c46209ea851485a2e3f/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "57786678d43b658472f6dd1aaacd559f32169fdf", "url": "https://api.github.com/repos/rust-lang/rust/commits/57786678d43b658472f6dd1aaacd559f32169fdf", "html_url": "https://github.com/rust-lang/rust/commit/57786678d43b658472f6dd1aaacd559f32169fdf"}, {"sha": "1cda05e174b9860f6c683a55167ab577988c999e", "url": "https://api.github.com/repos/rust-lang/rust/commits/1cda05e174b9860f6c683a55167ab577988c999e", "html_url": "https://github.com/rust-lang/rust/commit/1cda05e174b9860f6c683a55167ab577988c999e"}], "stats": {"total": 9, "additions": 7, "deletions": 2}, "files": [{"sha": "249d5ad47eb81d5880a37de544e800ec2895a7b3", "filename": "rust-version", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a64e6fd1b6a8d859591e1c46209ea851485a2e3f/rust-version", "raw_url": "https://github.com/rust-lang/rust/raw/a64e6fd1b6a8d859591e1c46209ea851485a2e3f/rust-version", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/rust-version?ref=a64e6fd1b6a8d859591e1c46209ea851485a2e3f", "patch": "@@ -1 +1 @@\n-e95b10ba4ac4564ed25f7eef143e3182c33b3902\n+c7ce69faf2a7ea16c15d922985ca27ba70da30ee"}, {"sha": "d5996cc6a9ed16f12c343e25be2c824c2ab0140b", "filename": "src/shims/posix/macos/dlsym.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/a64e6fd1b6a8d859591e1c46209ea851485a2e3f/src%2Fshims%2Fposix%2Fmacos%2Fdlsym.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a64e6fd1b6a8d859591e1c46209ea851485a2e3f/src%2Fshims%2Fposix%2Fmacos%2Fdlsym.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fshims%2Fposix%2Fmacos%2Fdlsym.rs?ref=a64e6fd1b6a8d859591e1c46209ea851485a2e3f", "patch": "@@ -17,7 +17,6 @@ impl Dlsym {\n     pub fn from_str(name: &str) -> InterpResult<'static, Option<Dlsym>> {\n         Ok(match name {\n             \"getentropy\" => Some(Dlsym::getentropy),\n-            \"openat\" => None, // std has a fallback for this\n             _ => throw_unsup_format!(\"unsupported macOS dlsym: {}\", name),\n         })\n     }"}, {"sha": "67817e3e2c856c492489f9e2f19a96c0a12393ec", "filename": "tests/run-pass/fs.rs", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/a64e6fd1b6a8d859591e1c46209ea851485a2e3f/tests%2Frun-pass%2Ffs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a64e6fd1b6a8d859591e1c46209ea851485a2e3f/tests%2Frun-pass%2Ffs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frun-pass%2Ffs.rs?ref=a64e6fd1b6a8d859591e1c46209ea851485a2e3f", "patch": "@@ -395,6 +395,12 @@ fn test_directory() {\n     remove_dir(&dir_path).unwrap();\n     // Reading the metadata of a non-existent directory should fail with a \"not found\" error.\n     assert_eq!(ErrorKind::NotFound, check_metadata(&[], &dir_path).unwrap_err().kind());\n+\n+    // To test remove_dir_all, re-create the directory with a file and a directory in it.\n+    create_dir(&dir_path).unwrap();\n+    drop(File::create(&path_1).unwrap());\n+    create_dir(&path_2).unwrap();\n+    remove_dir_all(&dir_path).unwrap();\n }\n \n fn test_dup_stdout_stderr() {"}]}