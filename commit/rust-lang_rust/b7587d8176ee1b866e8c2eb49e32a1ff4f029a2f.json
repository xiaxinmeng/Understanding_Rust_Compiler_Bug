{"sha": "b7587d8176ee1b866e8c2eb49e32a1ff4f029a2f", "node_id": "MDY6Q29tbWl0NzI0NzEyOmI3NTg3ZDgxNzZlZTFiODY2ZThjMmViNDllMzJhMWZmNGYwMjlhMmY=", "commit": {"author": {"name": "Oliver S\u0336c\u0336h\u0336n\u0336e\u0336i\u0336d\u0336e\u0336r Scherer", "email": "github35764891676564198441@oli-obk.de", "date": "2018-09-04T08:09:38Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2018-09-04T08:09:38Z"}, "message": "Merge pull request #3125 from nrc/pub-conf\n\nMake `Default` do what `default` used to do", "tree": {"sha": "5cfbf7c0a040caf5141c7a8fb052225be98f8f3c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5cfbf7c0a040caf5141c7a8fb052225be98f8f3c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b7587d8176ee1b866e8c2eb49e32a1ff4f029a2f", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJbjj3CCRBK7hj4Ov3rIwAAdHIIACBw35qC9WzN8V6oFCz+JP/a\nOQf86RYLPIB5t/X82Rs4+CfmpXLO9h9tL1OerTXX1QjJIG+WqOz5Sptb77FaQ7x9\n4FENd2SkcMLCMb41CqBwc2wPUJbOa2uGrax7QALrKML1nPuijTCUF4bIUvvzqhg0\nWNUaT+Lq3ohu3aakFVCdHsZruo0ACBo+0THAu2dIQWiD57RP7Tvxz7p/wyypBoYL\nsg07oRjUR4eB/6fe9rEN6wLNLhvjFRDdc9O3nzSYgTcWWuWqDO6XzgwYVGYt1LWC\nY900Mibt8CtAm4EhoHaAH0BIKM8xEhztzaJagKH/S0ngrpnS4C2adGw0DVdRmCg=\n=Fk7E\n-----END PGP SIGNATURE-----\n", "payload": "tree 5cfbf7c0a040caf5141c7a8fb052225be98f8f3c\nparent f5804dd90675f0f7815fc823796980779b0d652b\nparent 4050a689891c012c31175430349bb20cf3a739bc\nauthor Oliver S\u0336c\u0336h\u0336n\u0336e\u0336i\u0336d\u0336e\u0336r Scherer <github35764891676564198441@oli-obk.de> 1536048578 +0200\ncommitter GitHub <noreply@github.com> 1536048578 +0200\n\nMerge pull request #3125 from nrc/pub-conf\n\nMake `Default` do what `default` used to do"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b7587d8176ee1b866e8c2eb49e32a1ff4f029a2f", "html_url": "https://github.com/rust-lang/rust/commit/b7587d8176ee1b866e8c2eb49e32a1ff4f029a2f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b7587d8176ee1b866e8c2eb49e32a1ff4f029a2f/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f5804dd90675f0f7815fc823796980779b0d652b", "url": "https://api.github.com/repos/rust-lang/rust/commits/f5804dd90675f0f7815fc823796980779b0d652b", "html_url": "https://github.com/rust-lang/rust/commit/f5804dd90675f0f7815fc823796980779b0d652b"}, {"sha": "4050a689891c012c31175430349bb20cf3a739bc", "url": "https://api.github.com/repos/rust-lang/rust/commits/4050a689891c012c31175430349bb20cf3a739bc", "html_url": "https://github.com/rust-lang/rust/commit/4050a689891c012c31175430349bb20cf3a739bc"}], "stats": {"total": 11, "additions": 9, "deletions": 2}, "files": [{"sha": "16e39ff13ea2635913bff974685ec6d703fa175b", "filename": "clippy_lints/src/utils/conf.rs", "status": "modified", "additions": 9, "deletions": 2, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/b7587d8176ee1b866e8c2eb49e32a1ff4f029a2f/clippy_lints%2Fsrc%2Futils%2Fconf.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b7587d8176ee1b866e8c2eb49e32a1ff4f029a2f/clippy_lints%2Fsrc%2Futils%2Fconf.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Futils%2Fconf.rs?ref=b7587d8176ee1b866e8c2eb49e32a1ff4f029a2f", "patch": "@@ -3,6 +3,7 @@\n #![deny(clippy::missing_docs_in_private_items)]\n \n use lazy_static::lazy_static;\n+use std::default::Default;\n use std::{env, fmt, fs, io, path};\n use std::io::Read;\n use syntax::{ast, source_map};\n@@ -65,7 +66,7 @@ macro_rules! define_Conf {\n         mod helpers {\n             use serde_derive::Deserialize;\n             /// Type used to store lint configuration.\n-            #[derive(Default, Deserialize)]\n+            #[derive(Deserialize)]\n             #[serde(rename_all=\"kebab-case\", deny_unknown_fields)]\n             pub struct Conf {\n                 $(#[$doc] #[serde(default=$rust_name_str)] #[serde(with=$rust_name_str)]\n@@ -146,6 +147,12 @@ define_Conf! {\n     (trivial_copy_size_limit, \"trivial_copy_size_limit\", None => Option<u64>),\n }\n \n+impl Default for Conf {\n+    fn default() -> Conf {\n+        toml::from_str(\"\").expect(\"we never error on empty config files\")\n+    }\n+}\n+\n /// Search for the configuration file.\n pub fn lookup_conf_file() -> io::Result<Option<path::PathBuf>> {\n     /// Possible filename to search for.\n@@ -180,7 +187,7 @@ pub fn lookup_conf_file() -> io::Result<Option<path::PathBuf>> {\n ///\n /// Used internally for convenience\n fn default(errors: Vec<Error>) -> (Conf, Vec<Error>) {\n-    (toml::from_str(\"\").expect(\"we never error on empty config files\"), errors)\n+    (Conf::default(), errors)\n }\n \n /// Read the `toml` configuration file."}]}