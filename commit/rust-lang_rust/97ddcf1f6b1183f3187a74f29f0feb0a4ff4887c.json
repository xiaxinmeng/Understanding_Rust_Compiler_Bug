{"sha": "97ddcf1f6b1183f3187a74f29f0feb0a4ff4887c", "node_id": "C_kwDOAAsO6NoAKDk3ZGRjZjFmNmIxMTgzZjMxODdhNzRmMjlmMGZlYjBhNGZmNDg4N2M", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2022-03-02T01:37:46Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2022-03-03T17:14:24Z"}, "message": "adjust for div/rem overflow being UB", "tree": {"sha": "69708918ecdc4aa0f58c7ffd9d21b25de5d9ab5d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/69708918ecdc4aa0f58c7ffd9d21b25de5d9ab5d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/97ddcf1f6b1183f3187a74f29f0feb0a4ff4887c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/97ddcf1f6b1183f3187a74f29f0feb0a4ff4887c", "html_url": "https://github.com/rust-lang/rust/commit/97ddcf1f6b1183f3187a74f29f0feb0a4ff4887c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/97ddcf1f6b1183f3187a74f29f0feb0a4ff4887c/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2b23786c48cc9e9b46a0e97eba8b3cf0fca48801", "url": "https://api.github.com/repos/rust-lang/rust/commits/2b23786c48cc9e9b46a0e97eba8b3cf0fca48801", "html_url": "https://github.com/rust-lang/rust/commit/2b23786c48cc9e9b46a0e97eba8b3cf0fca48801"}], "stats": {"total": 7, "additions": 5, "deletions": 2}, "files": [{"sha": "2831795de82ea364e3a70c405706ccacbf9e65be", "filename": "tests/compile-fail/intrinsics/exact_div4.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/97ddcf1f6b1183f3187a74f29f0feb0a4ff4887c/tests%2Fcompile-fail%2Fintrinsics%2Fexact_div4.rs", "raw_url": "https://github.com/rust-lang/rust/raw/97ddcf1f6b1183f3187a74f29f0feb0a4ff4887c/tests%2Fcompile-fail%2Fintrinsics%2Fexact_div4.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompile-fail%2Fintrinsics%2Fexact_div4.rs?ref=97ddcf1f6b1183f3187a74f29f0feb0a4ff4887c", "patch": "@@ -1,5 +1,5 @@\n #![feature(core_intrinsics)]\n fn main() {\n     // divison of MIN by -1\n-    unsafe { std::intrinsics::exact_div(i64::MIN, -1); } //~ ERROR result of dividing MIN by -1 cannot be represented\n+    unsafe { std::intrinsics::exact_div(i64::MIN, -1); } //~ ERROR overflow in signed remainder (dividing MIN by -1)\n }"}, {"sha": "08b654da3ed755bb4e3715a6544963abc0e98eb2", "filename": "tests/compile-fail/intrinsics/unchecked_div1.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/97ddcf1f6b1183f3187a74f29f0feb0a4ff4887c/tests%2Fcompile-fail%2Fintrinsics%2Funchecked_div1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/97ddcf1f6b1183f3187a74f29f0feb0a4ff4887c/tests%2Fcompile-fail%2Fintrinsics%2Funchecked_div1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompile-fail%2Fintrinsics%2Funchecked_div1.rs?ref=97ddcf1f6b1183f3187a74f29f0feb0a4ff4887c", "patch": "@@ -1,5 +1,5 @@\n #![feature(core_intrinsics)]\n fn main() {\n     // MIN/-1 cannot be represented\n-    unsafe { std::intrinsics::unchecked_div(i16::MIN, -1); } //~ ERROR overflow executing `unchecked_div`\n+    unsafe { std::intrinsics::unchecked_div(i16::MIN, -1); } //~ ERROR overflow in signed division (dividing MIN by -1)\n }"}, {"sha": "fde220d8f35e8d9c058ca96b0dab93aab791365a", "filename": "tests/run-pass/integer-ops.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/97ddcf1f6b1183f3187a74f29f0feb0a4ff4887c/tests%2Frun-pass%2Finteger-ops.rs", "raw_url": "https://github.com/rust-lang/rust/raw/97ddcf1f6b1183f3187a74f29f0feb0a4ff4887c/tests%2Frun-pass%2Finteger-ops.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frun-pass%2Finteger-ops.rs?ref=97ddcf1f6b1183f3187a74f29f0feb0a4ff4887c", "patch": "@@ -116,6 +116,9 @@ pub fn main() {\n     assert_eq!(100i8.wrapping_rem(10), 0);\n     assert_eq!((-128i8).wrapping_rem(-1), 0);\n \n+    assert_eq!(i32::MIN.wrapping_div(-1), i32::MIN);\n+    assert_eq!(i32::MIN.wrapping_rem(-1), 0);\n+\n     assert_eq!(100i8.wrapping_neg(), -100);\n     assert_eq!((-128i8).wrapping_neg(), -128);\n "}]}