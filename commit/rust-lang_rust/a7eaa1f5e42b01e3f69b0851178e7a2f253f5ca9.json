{"sha": "a7eaa1f5e42b01e3f69b0851178e7a2f253f5ca9", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE3ZWFhMWY1ZTQyYjAxZTNmNjliMDg1MTE3OGU3YTJmMjUzZjVjYTk=", "commit": {"author": {"name": "Tim Chevalier", "email": "chevalier@alum.wellesley.edu", "date": "2013-01-23T07:33:13Z"}, "committer": {"name": "Tim Chevalier", "email": "chevalier@alum.wellesley.edu", "date": "2013-01-23T07:34:34Z"}, "message": "syntax: Allow closure args to be mutable", "tree": {"sha": "150489175076654754ed6ea756c1a6849e396ff3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/150489175076654754ed6ea756c1a6849e396ff3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a7eaa1f5e42b01e3f69b0851178e7a2f253f5ca9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a7eaa1f5e42b01e3f69b0851178e7a2f253f5ca9", "html_url": "https://github.com/rust-lang/rust/commit/a7eaa1f5e42b01e3f69b0851178e7a2f253f5ca9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a7eaa1f5e42b01e3f69b0851178e7a2f253f5ca9/comments", "author": {"login": "catamorphism", "id": 427212, "node_id": "MDQ6VXNlcjQyNzIxMg==", "avatar_url": "https://avatars.githubusercontent.com/u/427212?v=4", "gravatar_id": "", "url": "https://api.github.com/users/catamorphism", "html_url": "https://github.com/catamorphism", "followers_url": "https://api.github.com/users/catamorphism/followers", "following_url": "https://api.github.com/users/catamorphism/following{/other_user}", "gists_url": "https://api.github.com/users/catamorphism/gists{/gist_id}", "starred_url": "https://api.github.com/users/catamorphism/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/catamorphism/subscriptions", "organizations_url": "https://api.github.com/users/catamorphism/orgs", "repos_url": "https://api.github.com/users/catamorphism/repos", "events_url": "https://api.github.com/users/catamorphism/events{/privacy}", "received_events_url": "https://api.github.com/users/catamorphism/received_events", "type": "User", "site_admin": false}, "committer": {"login": "catamorphism", "id": 427212, "node_id": "MDQ6VXNlcjQyNzIxMg==", "avatar_url": "https://avatars.githubusercontent.com/u/427212?v=4", "gravatar_id": "", "url": "https://api.github.com/users/catamorphism", "html_url": "https://github.com/catamorphism", "followers_url": "https://api.github.com/users/catamorphism/followers", "following_url": "https://api.github.com/users/catamorphism/following{/other_user}", "gists_url": "https://api.github.com/users/catamorphism/gists{/gist_id}", "starred_url": "https://api.github.com/users/catamorphism/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/catamorphism/subscriptions", "organizations_url": "https://api.github.com/users/catamorphism/orgs", "repos_url": "https://api.github.com/users/catamorphism/repos", "events_url": "https://api.github.com/users/catamorphism/events{/privacy}", "received_events_url": "https://api.github.com/users/catamorphism/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "800b8a759d7d22de9ff49a5bd680f36407123298", "url": "https://api.github.com/repos/rust-lang/rust/commits/800b8a759d7d22de9ff49a5bd680f36407123298", "html_url": "https://github.com/rust-lang/rust/commit/800b8a759d7d22de9ff49a5bd680f36407123298"}], "stats": {"total": 3, "additions": 2, "deletions": 1}, "files": [{"sha": "61105f6297dc13df3a04364c4ba4bd069117cc00", "filename": "src/libsyntax/parse/parser.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/a7eaa1f5e42b01e3f69b0851178e7a2f253f5ca9/src%2Flibsyntax%2Fparse%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a7eaa1f5e42b01e3f69b0851178e7a2f253f5ca9/src%2Flibsyntax%2Fparse%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fparser.rs?ref=a7eaa1f5e42b01e3f69b0851178e7a2f253f5ca9", "patch": "@@ -747,6 +747,7 @@ impl Parser {\n     fn parse_fn_block_arg() -> arg_or_capture_item {\n         do self.parse_capture_item_or |p| {\n             let m = p.parse_arg_mode();\n+            let is_mutbl = self.eat_keyword(~\"mut\");\n             let pat = p.parse_pat(false);\n             let t = if p.eat(token::COLON) {\n                 p.parse_ty(false)\n@@ -759,7 +760,7 @@ impl Parser {\n             };\n             either::Left(ast::arg {\n                 mode: m,\n-                is_mutbl: false,\n+                is_mutbl: is_mutbl,\n                 ty: t,\n                 pat: pat,\n                 id: p.get_id()"}]}