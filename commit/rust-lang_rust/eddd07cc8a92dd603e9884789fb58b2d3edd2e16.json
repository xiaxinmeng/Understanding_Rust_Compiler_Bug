{"sha": "eddd07cc8a92dd603e9884789fb58b2d3edd2e16", "node_id": "MDY6Q29tbWl0NzI0NzEyOmVkZGQwN2NjOGE5MmRkNjAzZTk4ODQ3ODlmYjU4YjJkM2VkZDJlMTY=", "commit": {"author": {"name": "Nicholas Nethercote", "email": "nnethercote@mozilla.com", "date": "2019-02-22T02:36:04Z"}, "committer": {"name": "Nicholas Nethercote", "email": "nnethercote@mozilla.com", "date": "2019-02-26T00:20:53Z"}, "message": "Make `visit_clobber` panic-safe.", "tree": {"sha": "6bd8f9b52302208a40b8b8317ff6c5e0cede451f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6bd8f9b52302208a40b8b8317ff6c5e0cede451f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/eddd07cc8a92dd603e9884789fb58b2d3edd2e16", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/eddd07cc8a92dd603e9884789fb58b2d3edd2e16", "html_url": "https://github.com/rust-lang/rust/commit/eddd07cc8a92dd603e9884789fb58b2d3edd2e16", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/eddd07cc8a92dd603e9884789fb58b2d3edd2e16/comments", "author": {"login": "nnethercote", "id": 1940286, "node_id": "MDQ6VXNlcjE5NDAyODY=", "avatar_url": "https://avatars.githubusercontent.com/u/1940286?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nnethercote", "html_url": "https://github.com/nnethercote", "followers_url": "https://api.github.com/users/nnethercote/followers", "following_url": "https://api.github.com/users/nnethercote/following{/other_user}", "gists_url": "https://api.github.com/users/nnethercote/gists{/gist_id}", "starred_url": "https://api.github.com/users/nnethercote/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nnethercote/subscriptions", "organizations_url": "https://api.github.com/users/nnethercote/orgs", "repos_url": "https://api.github.com/users/nnethercote/repos", "events_url": "https://api.github.com/users/nnethercote/events{/privacy}", "received_events_url": "https://api.github.com/users/nnethercote/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nnethercote", "id": 1940286, "node_id": "MDQ6VXNlcjE5NDAyODY=", "avatar_url": "https://avatars.githubusercontent.com/u/1940286?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nnethercote", "html_url": "https://github.com/nnethercote", "followers_url": "https://api.github.com/users/nnethercote/followers", "following_url": "https://api.github.com/users/nnethercote/following{/other_user}", "gists_url": "https://api.github.com/users/nnethercote/gists{/gist_id}", "starred_url": "https://api.github.com/users/nnethercote/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nnethercote/subscriptions", "organizations_url": "https://api.github.com/users/nnethercote/orgs", "repos_url": "https://api.github.com/users/nnethercote/repos", "events_url": "https://api.github.com/users/nnethercote/events{/privacy}", "received_events_url": "https://api.github.com/users/nnethercote/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f47ec2ad5b6887b3d400aee49e2294bd27733d18", "url": "https://api.github.com/repos/rust-lang/rust/commits/f47ec2ad5b6887b3d400aee49e2294bd27733d18", "html_url": "https://github.com/rust-lang/rust/commit/f47ec2ad5b6887b3d400aee49e2294bd27733d18"}], "stats": {"total": 12, "additions": 10, "deletions": 2}, "files": [{"sha": "b7d22b3d554f3c6f9b00a6c494d77400e4f83281", "filename": "src/libsyntax/mut_visit.rs", "status": "modified", "additions": 10, "deletions": 2, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/eddd07cc8a92dd603e9884789fb58b2d3edd2e16/src%2Flibsyntax%2Fmut_visit.rs", "raw_url": "https://github.com/rust-lang/rust/raw/eddd07cc8a92dd603e9884789fb58b2d3edd2e16/src%2Flibsyntax%2Fmut_visit.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fmut_visit.rs?ref=eddd07cc8a92dd603e9884789fb58b2d3edd2e16", "patch": "@@ -21,6 +21,7 @@ use syntax_pos::Span;\n \n use rustc_data_structures::sync::Lrc;\n use std::ops::DerefMut;\n+use std::{panic, process, ptr};\n \n pub trait ExpectOne<A: Array> {\n     fn expect_one(self, err: &'static str) -> A::Item;\n@@ -305,11 +306,18 @@ pub trait MutVisitor: Sized {\n \n /// Use a map-style function (`FnOnce(T) -> T`) to overwrite a `&mut T`. Useful\n /// when using a `flat_map_*` or `filter_map_*` method within a `visit_`\n-/// method.\n+/// method. Abort the program if the closure panics.\n //\n // No `noop_` prefix because there isn't a corresponding method in `MutVisitor`.\n pub fn visit_clobber<T, F>(t: &mut T, f: F) where F: FnOnce(T) -> T {\n-    unsafe { std::ptr::write(t, f(std::ptr::read(t))); }\n+    unsafe {\n+        // Safe because `t` is used in a read-only fashion by `read()` before\n+        // being overwritten by `write()`.\n+        let old_t = ptr::read(t);\n+        let new_t = panic::catch_unwind(panic::AssertUnwindSafe(|| f(old_t)))\n+            .unwrap_or_else(|_| process::abort());\n+        ptr::write(t, new_t);\n+    }\n }\n \n // No `noop_` prefix because there isn't a corresponding method in `MutVisitor`."}]}