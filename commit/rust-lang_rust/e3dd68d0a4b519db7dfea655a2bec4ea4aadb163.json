{"sha": "e3dd68d0a4b519db7dfea655a2bec4ea4aadb163", "node_id": "MDY6Q29tbWl0NzI0NzEyOmUzZGQ2OGQwYTRiNTE5ZGI3ZGZlYTY1NWEyYmVjNGVhNGFhZGIxNjM=", "commit": {"author": {"name": "Erick Tryzelaar", "email": "erick.tryzelaar@gmail.com", "date": "2015-04-17T02:54:05Z"}, "committer": {"name": "Erick Tryzelaar", "email": "erick.tryzelaar@gmail.com", "date": "2015-04-21T17:08:27Z"}, "message": "syntax: Remove use of TraitObject in pretty printer", "tree": {"sha": "cc50fd32eda391e8ac4ee91e9d58bf71b71ea811", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/cc50fd32eda391e8ac4ee91e9d58bf71b71ea811"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e3dd68d0a4b519db7dfea655a2bec4ea4aadb163", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e3dd68d0a4b519db7dfea655a2bec4ea4aadb163", "html_url": "https://github.com/rust-lang/rust/commit/e3dd68d0a4b519db7dfea655a2bec4ea4aadb163", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e3dd68d0a4b519db7dfea655a2bec4ea4aadb163/comments", "author": {"login": "erickt", "id": 84711, "node_id": "MDQ6VXNlcjg0NzEx", "avatar_url": "https://avatars.githubusercontent.com/u/84711?v=4", "gravatar_id": "", "url": "https://api.github.com/users/erickt", "html_url": "https://github.com/erickt", "followers_url": "https://api.github.com/users/erickt/followers", "following_url": "https://api.github.com/users/erickt/following{/other_user}", "gists_url": "https://api.github.com/users/erickt/gists{/gist_id}", "starred_url": "https://api.github.com/users/erickt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/erickt/subscriptions", "organizations_url": "https://api.github.com/users/erickt/orgs", "repos_url": "https://api.github.com/users/erickt/repos", "events_url": "https://api.github.com/users/erickt/events{/privacy}", "received_events_url": "https://api.github.com/users/erickt/received_events", "type": "User", "site_admin": false}, "committer": {"login": "erickt", "id": 84711, "node_id": "MDQ6VXNlcjg0NzEx", "avatar_url": "https://avatars.githubusercontent.com/u/84711?v=4", "gravatar_id": "", "url": "https://api.github.com/users/erickt", "html_url": "https://github.com/erickt", "followers_url": "https://api.github.com/users/erickt/followers", "following_url": "https://api.github.com/users/erickt/following{/other_user}", "gists_url": "https://api.github.com/users/erickt/gists{/gist_id}", "starred_url": "https://api.github.com/users/erickt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/erickt/subscriptions", "organizations_url": "https://api.github.com/users/erickt/orgs", "repos_url": "https://api.github.com/users/erickt/repos", "events_url": "https://api.github.com/users/erickt/events{/privacy}", "received_events_url": "https://api.github.com/users/erickt/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cfb9d286ea0169a69580c457e0994e02023c0c1a", "url": "https://api.github.com/repos/rust-lang/rust/commits/cfb9d286ea0169a69580c457e0994e02023c0c1a", "html_url": "https://github.com/rust-lang/rust/commit/cfb9d286ea0169a69580c457e0994e02023c0c1a"}], "stats": {"total": 21, "additions": 8, "deletions": 13}, "files": [{"sha": "3ccc8f2619f2d79f7460ff7b03b3f772277c84c1", "filename": "src/libsyntax/print/pprust.rs", "status": "modified", "additions": 8, "deletions": 13, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/e3dd68d0a4b519db7dfea655a2bec4ea4aadb163/src%2Flibsyntax%2Fprint%2Fpprust.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e3dd68d0a4b519db7dfea655a2bec4ea4aadb163/src%2Flibsyntax%2Fprint%2Fpprust.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fprint%2Fpprust.rs?ref=e3dd68d0a4b519db7dfea655a2bec4ea4aadb163", "patch": "@@ -28,7 +28,7 @@ use print::pp::Breaks::{Consistent, Inconsistent};\n use ptr::P;\n use std_inject;\n \n-use std::{ascii, mem};\n+use std::ascii;\n use std::io::{self, Write, Read};\n use std::iter;\n \n@@ -187,18 +187,13 @@ impl<'a> State<'a> {\n pub fn to_string<F>(f: F) -> String where\n     F: FnOnce(&mut State) -> io::Result<()>,\n {\n-    use std::raw::TraitObject;\n-    let mut s = rust_printer(Box::new(Vec::new()));\n-    f(&mut s).unwrap();\n-    eof(&mut s.s).unwrap();\n-    let wr = unsafe {\n-        // FIXME(pcwalton): A nasty function to extract the string from an `Write`\n-        // that we \"know\" to be a `Vec<u8>` that works around the lack of checked\n-        // downcasts.\n-        let obj: &TraitObject = mem::transmute(&s.s.out);\n-        mem::transmute::<*mut (), &Vec<u8>>(obj.data)\n-    };\n-    String::from_utf8(wr.clone()).unwrap()\n+    let mut wr = Vec::new();\n+    {\n+        let mut printer = rust_printer(Box::new(&mut wr));\n+        f(&mut printer).unwrap();\n+        eof(&mut printer.s).unwrap();\n+    }\n+    String::from_utf8(wr).unwrap()\n }\n \n pub fn binop_to_string(op: BinOpToken) -> &'static str {"}]}