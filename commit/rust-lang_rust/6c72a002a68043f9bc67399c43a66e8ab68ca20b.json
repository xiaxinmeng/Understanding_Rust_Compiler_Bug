{"sha": "6c72a002a68043f9bc67399c43a66e8ab68ca20b", "node_id": "C_kwDOAAsO6NoAKDZjNzJhMDAyYTY4MDQzZjliYzY3Mzk5YzQzYTY2ZThhYjY4Y2EyMGI", "commit": {"author": {"name": "Mara Bos", "email": "m-ou.se@m-ou.se", "date": "2023-03-27T12:43:25Z"}, "committer": {"name": "Mara Bos", "email": "m-ou.se@m-ou.se", "date": "2023-03-27T12:57:02Z"}, "message": "Add test for span of implicit format args captures.", "tree": {"sha": "475357e953e2658c3dfc67856cc3cc95e05d1696", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/475357e953e2658c3dfc67856cc3cc95e05d1696"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6c72a002a68043f9bc67399c43a66e8ab68ca20b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6c72a002a68043f9bc67399c43a66e8ab68ca20b", "html_url": "https://github.com/rust-lang/rust/commit/6c72a002a68043f9bc67399c43a66e8ab68ca20b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6c72a002a68043f9bc67399c43a66e8ab68ca20b/comments", "author": {"login": "m-ou-se", "id": 783247, "node_id": "MDQ6VXNlcjc4MzI0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/783247?v=4", "gravatar_id": "", "url": "https://api.github.com/users/m-ou-se", "html_url": "https://github.com/m-ou-se", "followers_url": "https://api.github.com/users/m-ou-se/followers", "following_url": "https://api.github.com/users/m-ou-se/following{/other_user}", "gists_url": "https://api.github.com/users/m-ou-se/gists{/gist_id}", "starred_url": "https://api.github.com/users/m-ou-se/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/m-ou-se/subscriptions", "organizations_url": "https://api.github.com/users/m-ou-se/orgs", "repos_url": "https://api.github.com/users/m-ou-se/repos", "events_url": "https://api.github.com/users/m-ou-se/events{/privacy}", "received_events_url": "https://api.github.com/users/m-ou-se/received_events", "type": "User", "site_admin": false}, "committer": {"login": "m-ou-se", "id": 783247, "node_id": "MDQ6VXNlcjc4MzI0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/783247?v=4", "gravatar_id": "", "url": "https://api.github.com/users/m-ou-se", "html_url": "https://github.com/m-ou-se", "followers_url": "https://api.github.com/users/m-ou-se/followers", "following_url": "https://api.github.com/users/m-ou-se/following{/other_user}", "gists_url": "https://api.github.com/users/m-ou-se/gists{/gist_id}", "starred_url": "https://api.github.com/users/m-ou-se/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/m-ou-se/subscriptions", "organizations_url": "https://api.github.com/users/m-ou-se/orgs", "repos_url": "https://api.github.com/users/m-ou-se/repos", "events_url": "https://api.github.com/users/m-ou-se/events{/privacy}", "received_events_url": "https://api.github.com/users/m-ou-se/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "769886cc35ce08b76839f4cf72b8af1161c432e1", "url": "https://api.github.com/repos/rust-lang/rust/commits/769886cc35ce08b76839f4cf72b8af1161c432e1", "html_url": "https://github.com/rust-lang/rust/commit/769886cc35ce08b76839f4cf72b8af1161c432e1"}], "stats": {"total": 73, "additions": 73, "deletions": 0}, "files": [{"sha": "c7acb08f84b6cdb7130e3d9f1369bca27b9451f9", "filename": "tests/ui/fmt/format-args-argument-span.rs", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/6c72a002a68043f9bc67399c43a66e8ab68ca20b/tests%2Fui%2Ffmt%2Fformat-args-argument-span.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6c72a002a68043f9bc67399c43a66e8ab68ca20b/tests%2Fui%2Ffmt%2Fformat-args-argument-span.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ffmt%2Fformat-args-argument-span.rs?ref=6c72a002a68043f9bc67399c43a66e8ab68ca20b", "patch": "@@ -0,0 +1,22 @@\n+// check-compile\n+\n+struct DisplayOnly;\n+\n+impl std::fmt::Display for DisplayOnly {\n+    fn fmt(&self, f: &mut std::fmt::Formatter<'_>) -> std::fmt::Result {\n+        unimplemented!()\n+    }\n+}\n+\n+fn main() {\n+    let x = Some(1);\n+    println!(\"{x:?} {x} {x:?}\");\n+    //~^ ERROR: `Option<{integer}>` doesn't implement `std::fmt::Display`\n+    println!(\"{x:?} {x} {x:?}\", x = Some(1));\n+    //~^ ERROR: `Option<{integer}>` doesn't implement `std::fmt::Display`\n+    let x = DisplayOnly;\n+    println!(\"{x} {x:?} {x}\");\n+    //~^ ERROR: `DisplayOnly` doesn't implement `Debug`\n+    println!(\"{x} {x:?} {x}\", x = DisplayOnly);\n+    //~^ ERROR: `DisplayOnly` doesn't implement `Debug`\n+}"}, {"sha": "b060b2cd33930dc9262bbd9e47327a1f023dc74b", "filename": "tests/ui/fmt/format-args-argument-span.stderr", "status": "added", "additions": 51, "deletions": 0, "changes": 51, "blob_url": "https://github.com/rust-lang/rust/blob/6c72a002a68043f9bc67399c43a66e8ab68ca20b/tests%2Fui%2Ffmt%2Fformat-args-argument-span.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6c72a002a68043f9bc67399c43a66e8ab68ca20b/tests%2Fui%2Ffmt%2Fformat-args-argument-span.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ffmt%2Fformat-args-argument-span.stderr?ref=6c72a002a68043f9bc67399c43a66e8ab68ca20b", "patch": "@@ -0,0 +1,51 @@\n+error[E0277]: `Option<{integer}>` doesn't implement `std::fmt::Display`\n+  --> $DIR/format-args-argument-span.rs:13:21\n+   |\n+LL |     println!(\"{x:?} {x} {x:?}\");\n+   |                     ^^^ `Option<{integer}>` cannot be formatted with the default formatter\n+   |\n+   = help: the trait `std::fmt::Display` is not implemented for `Option<{integer}>`\n+   = note: in format strings you may be able to use `{:?}` (or {:#?} for pretty-print) instead\n+   = note: this error originates in the macro `$crate::format_args_nl` which comes from the expansion of the macro `println` (in Nightly builds, run with -Z macro-backtrace for more info)\n+\n+error[E0277]: `Option<{integer}>` doesn't implement `std::fmt::Display`\n+  --> $DIR/format-args-argument-span.rs:15:37\n+   |\n+LL |     println!(\"{x:?} {x} {x:?}\", x = Some(1));\n+   |                                     ^^^^^^^ `Option<{integer}>` cannot be formatted with the default formatter\n+   |\n+   = help: the trait `std::fmt::Display` is not implemented for `Option<{integer}>`\n+   = note: in format strings you may be able to use `{:?}` (or {:#?} for pretty-print) instead\n+   = note: this error originates in the macro `$crate::format_args_nl` which comes from the expansion of the macro `println` (in Nightly builds, run with -Z macro-backtrace for more info)\n+\n+error[E0277]: `DisplayOnly` doesn't implement `Debug`\n+  --> $DIR/format-args-argument-span.rs:18:19\n+   |\n+LL |     println!(\"{x} {x:?} {x}\");\n+   |                   ^^^^^ `DisplayOnly` cannot be formatted using `{:?}`\n+   |\n+   = help: the trait `Debug` is not implemented for `DisplayOnly`\n+   = note: add `#[derive(Debug)]` to `DisplayOnly` or manually `impl Debug for DisplayOnly`\n+   = note: this error originates in the macro `$crate::format_args_nl` which comes from the expansion of the macro `println` (in Nightly builds, run with -Z macro-backtrace for more info)\n+help: consider annotating `DisplayOnly` with `#[derive(Debug)]`\n+   |\n+LL | #[derive(Debug)]\n+   |\n+\n+error[E0277]: `DisplayOnly` doesn't implement `Debug`\n+  --> $DIR/format-args-argument-span.rs:20:35\n+   |\n+LL |     println!(\"{x} {x:?} {x}\", x = DisplayOnly);\n+   |                                   ^^^^^^^^^^^ `DisplayOnly` cannot be formatted using `{:?}`\n+   |\n+   = help: the trait `Debug` is not implemented for `DisplayOnly`\n+   = note: add `#[derive(Debug)]` to `DisplayOnly` or manually `impl Debug for DisplayOnly`\n+   = note: this error originates in the macro `$crate::format_args_nl` which comes from the expansion of the macro `println` (in Nightly builds, run with -Z macro-backtrace for more info)\n+help: consider annotating `DisplayOnly` with `#[derive(Debug)]`\n+   |\n+LL | #[derive(Debug)]\n+   |\n+\n+error: aborting due to 4 previous errors\n+\n+For more information about this error, try `rustc --explain E0277`."}]}