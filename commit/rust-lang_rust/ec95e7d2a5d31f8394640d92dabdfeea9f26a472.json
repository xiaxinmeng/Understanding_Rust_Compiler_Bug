{"sha": "ec95e7d2a5d31f8394640d92dabdfeea9f26a472", "node_id": "C_kwDOAAsO6NoAKGVjOTVlN2QyYTVkMzFmODM5NDY0MGQ5MmRhYmRmZWVhOWYyNmE0NzI", "commit": {"author": {"name": "Dylan DPC", "email": "99973273+Dylan-DPC@users.noreply.github.com", "date": "2022-04-11T18:00:45Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-04-11T18:00:45Z"}, "message": "Rollup merge of #95901 - jyn514:remove-duplicate-aliases, r=Mark-Simulacrum\n\nRemove duplicate aliases for `check codegen_{cranelift,gcc}` and fix `build codegen_gcc`\n\n* Remove duplicate aliases\n    Bootstrap already allows selecting these in `PathSet::has`, which allows\n    any string that matches the end of a full path.\n\n    I found these by adding `assert!(path.exists())` in `StepDescription::paths`.\n    I think ideally we wouldn't have any aliases that aren't paths, but I've held\n    off on enforcing that here since it may be controversial, I'll open a separate PR.\n\n* Add `build compiler/rustc_codegen_gcc` as an alias for `CodegenBackend`\n\n    These paths (`_cranelift` and `_gcc`) are somewhat misleading, since they\n    actually tell bootstrap to build *all* codegen backends. But this seems like\n    a useful improvement in the meantime.\n\ncc ```@bjorn3``` ```@antoyo```", "tree": {"sha": "bfebb848df981b3cbf0cdbf424730b27a6d55372", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bfebb848df981b3cbf0cdbf424730b27a6d55372"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ec95e7d2a5d31f8394640d92dabdfeea9f26a472", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJiVGzNCRBK7hj4Ov3rIwAAxVcIACFRr6dNSqsuLKQPKV4ZoYGG\nAqxvcbUdZF6lfO3HYLhbRuZXgyLeJRCVpHGoMLBrCZwhnCoT7Tr6/99dUd0frPE5\nrybni366118ToB1NU4is6WZMeawfEn7ueBU56rNTvFl9MKIn/SFag8vTpS7nx+WT\nXWl9Q1K8LG/QyLOuAZN+IlRNPCobXUoN+1oukE1NzoaFHrGNSK/d+7spW2TzOG9S\nYbm7txcN1f59Wj7Dhkb+eHaujRgBPp1UGDBbCeqf4AyoZgkG2CNLehG2YXDHkT6a\nFj6vIhUtcNs/yNxpeL+2VZLQq1utZpRX19oXd2gaBWOAIsL9Nf5d4X+jfo6lcUc=\n=CKkY\n-----END PGP SIGNATURE-----\n", "payload": "tree bfebb848df981b3cbf0cdbf424730b27a6d55372\nparent ae6f75a0c35ae7067015828a6408ccba871ab763\nparent 4c1438332be229ee1d1e1dbc02181a03678e04f9\nauthor Dylan DPC <99973273+Dylan-DPC@users.noreply.github.com> 1649700045 +0200\ncommitter GitHub <noreply@github.com> 1649700045 +0200\n\nRollup merge of #95901 - jyn514:remove-duplicate-aliases, r=Mark-Simulacrum\n\nRemove duplicate aliases for `check codegen_{cranelift,gcc}` and fix `build codegen_gcc`\n\n* Remove duplicate aliases\n    Bootstrap already allows selecting these in `PathSet::has`, which allows\n    any string that matches the end of a full path.\n\n    I found these by adding `assert!(path.exists())` in `StepDescription::paths`.\n    I think ideally we wouldn't have any aliases that aren't paths, but I've held\n    off on enforcing that here since it may be controversial, I'll open a separate PR.\n\n* Add `build compiler/rustc_codegen_gcc` as an alias for `CodegenBackend`\n\n    These paths (`_cranelift` and `_gcc`) are somewhat misleading, since they\n    actually tell bootstrap to build *all* codegen backends. But this seems like\n    a useful improvement in the meantime.\n\ncc ```@bjorn3``` ```@antoyo```\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ec95e7d2a5d31f8394640d92dabdfeea9f26a472", "html_url": "https://github.com/rust-lang/rust/commit/ec95e7d2a5d31f8394640d92dabdfeea9f26a472", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ec95e7d2a5d31f8394640d92dabdfeea9f26a472/comments", "author": {"login": "Dylan-DPC", "id": 99973273, "node_id": "U_kgDOBfV4mQ", "avatar_url": "https://avatars.githubusercontent.com/u/99973273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dylan-DPC", "html_url": "https://github.com/Dylan-DPC", "followers_url": "https://api.github.com/users/Dylan-DPC/followers", "following_url": "https://api.github.com/users/Dylan-DPC/following{/other_user}", "gists_url": "https://api.github.com/users/Dylan-DPC/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dylan-DPC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dylan-DPC/subscriptions", "organizations_url": "https://api.github.com/users/Dylan-DPC/orgs", "repos_url": "https://api.github.com/users/Dylan-DPC/repos", "events_url": "https://api.github.com/users/Dylan-DPC/events{/privacy}", "received_events_url": "https://api.github.com/users/Dylan-DPC/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ae6f75a0c35ae7067015828a6408ccba871ab763", "url": "https://api.github.com/repos/rust-lang/rust/commits/ae6f75a0c35ae7067015828a6408ccba871ab763", "html_url": "https://github.com/rust-lang/rust/commit/ae6f75a0c35ae7067015828a6408ccba871ab763"}, {"sha": "4c1438332be229ee1d1e1dbc02181a03678e04f9", "url": "https://api.github.com/repos/rust-lang/rust/commits/4c1438332be229ee1d1e1dbc02181a03678e04f9", "html_url": "https://github.com/rust-lang/rust/commit/4c1438332be229ee1d1e1dbc02181a03678e04f9"}], "stats": {"total": 9, "additions": 2, "deletions": 7}, "files": [{"sha": "432a6c34ed58415c934989acf542546a3cc13c4a", "filename": "src/bootstrap/check.rs", "status": "modified", "additions": 1, "deletions": 6, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/ec95e7d2a5d31f8394640d92dabdfeea9f26a472/src%2Fbootstrap%2Fcheck.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ec95e7d2a5d31f8394640d92dabdfeea9f26a472/src%2Fbootstrap%2Fcheck.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fcheck.rs?ref=ec95e7d2a5d31f8394640d92dabdfeea9f26a472", "patch": "@@ -243,12 +243,7 @@ impl Step for CodegenBackend {\n     const DEFAULT: bool = true;\n \n     fn should_run(run: ShouldRun<'_>) -> ShouldRun<'_> {\n-        run.paths(&[\n-            \"compiler/rustc_codegen_cranelift\",\n-            \"rustc_codegen_cranelift\",\n-            \"compiler/rustc_codegen_gcc\",\n-            \"rustc_codegen_gcc\",\n-        ])\n+        run.paths(&[\"compiler/rustc_codegen_cranelift\", \"compiler/rustc_codegen_gcc\"])\n     }\n \n     fn make_run(run: RunConfig<'_>) {"}, {"sha": "45991381dc0fe1d9a70b64062d40b78624326bce", "filename": "src/bootstrap/compile.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ec95e7d2a5d31f8394640d92dabdfeea9f26a472/src%2Fbootstrap%2Fcompile.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ec95e7d2a5d31f8394640d92dabdfeea9f26a472/src%2Fbootstrap%2Fcompile.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fcompile.rs?ref=ec95e7d2a5d31f8394640d92dabdfeea9f26a472", "patch": "@@ -795,7 +795,7 @@ impl Step for CodegenBackend {\n     const DEFAULT: bool = true;\n \n     fn should_run(run: ShouldRun<'_>) -> ShouldRun<'_> {\n-        run.path(\"compiler/rustc_codegen_cranelift\")\n+        run.paths(&[\"compiler/rustc_codegen_cranelift\", \"compiler/rustc_codegen_gcc\"])\n     }\n \n     fn make_run(run: RunConfig<'_>) {"}]}