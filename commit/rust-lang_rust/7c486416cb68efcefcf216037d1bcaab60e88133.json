{"sha": "7c486416cb68efcefcf216037d1bcaab60e88133", "node_id": "MDY6Q29tbWl0NzI0NzEyOjdjNDg2NDE2Y2I2OGVmY2VmY2YyMTYwMzdkMWJjYWFiNjBlODgxMzM=", "commit": {"author": {"name": "Oliver Schneider", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2017-01-12T07:52:22Z"}, "committer": {"name": "Oliver Schneider", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2017-01-12T07:52:22Z"}, "message": "allow the use of tuple struct constructors as functions", "tree": {"sha": "1ef1e64a1fea3c8047a0acbbb73a11cffe1cee43", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1ef1e64a1fea3c8047a0acbbb73a11cffe1cee43"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7c486416cb68efcefcf216037d1bcaab60e88133", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQIcBAABAgAGBQJYdzW2AAoJEFbW7qD8Z6xGW1oP+gPPvKc3Rlvl3Kow+2IvfOhV\nroG8soqadnpZp1vcqMGTSFZARgXAH9nZMBW15LSmvHOVRzG0iXEq10+nsoi74DzP\nyM7ue99mam/+B0JVfWUVaRJ3h3d22zW+mjSUnsMr9p2h130H6h1dLOx5jhKulAOO\n/XZ3kTB3Fuetl71jUuDJUZ16NYMlB+qrqu7Snvf6A2xrWnIB26SAiHN3lKslEx6L\nLxzjptPEpQc2LMMa58RQako59UiBBDoPbvvT/CCcSavg0BdsTerQvLsONYl5bjQK\nZw+hJ1dyg06WsrRoHG47fT/0T2f7FtyrH28+Qjbg0nuD80RotoWMx3ivXriIT/dI\nxpCWLkw4YEJ6ZjpMIPYw2y5+nKfYftRXYGwUvihEpyW8ZCGxIQd/NnCh4M7Xaxfp\nth8xB++FNQRTW9RU7wUq/c0JzHJ6D82zEmfeHC+/1gVopFXOmH31DP1oEGGtAzbE\nFrvx1b22I2F0H9tjEBxtuo4JcPijnRp8p+jZwmmqkEgDTtt0kc6KHsyOCH3ON7OZ\nPfHiGdMBbSnLywUZU2NnRD1PP1EF78KTV7S993fJwFFDxiwu5hpa2uMKaB2O0iEC\nvtB/GscACHQF01+mS6dn6dFpLMdxDKxdQ8j13rWA+dZ0JAHkx+4DfIkoIXdHtAO0\n/ZkPVqGCfcVmvg0E9QCn\n=KOmD\n-----END PGP SIGNATURE-----", "payload": "tree 1ef1e64a1fea3c8047a0acbbb73a11cffe1cee43\nparent ccfcc12a580aa27fc8b99c6ec262e82d74629457\nauthor Oliver Schneider <git-spam-no-reply9815368754983@oli-obk.de> 1484207542 +0100\ncommitter Oliver Schneider <git-spam-no-reply9815368754983@oli-obk.de> 1484207542 +0100\n\nallow the use of tuple struct constructors as functions"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7c486416cb68efcefcf216037d1bcaab60e88133", "html_url": "https://github.com/rust-lang/rust/commit/7c486416cb68efcefcf216037d1bcaab60e88133", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7c486416cb68efcefcf216037d1bcaab60e88133/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ccfcc12a580aa27fc8b99c6ec262e82d74629457", "url": "https://api.github.com/repos/rust-lang/rust/commits/ccfcc12a580aa27fc8b99c6ec262e82d74629457", "html_url": "https://github.com/rust-lang/rust/commit/ccfcc12a580aa27fc8b99c6ec262e82d74629457"}], "stats": {"total": 33, "additions": 33, "deletions": 0}, "files": [{"sha": "1b5ff9da9d73f1d78b40d69bd64ee7da0deff948", "filename": "src/terminator/mod.rs", "status": "modified", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/7c486416cb68efcefcf216037d1bcaab60e88133/src%2Fterminator%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7c486416cb68efcefcf216037d1bcaab60e88133/src%2Fterminator%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fterminator%2Fmod.rs?ref=7c486416cb68efcefcf216037d1bcaab60e88133", "patch": "@@ -229,6 +229,34 @@ impl<'a, 'tcx> EvalContext<'a, 'tcx> {\n                         (def_id, substs, Vec::new())\n                     };\n \n+                // FIXME(eddyb) Detect ADT constructors more efficiently.\n+                if let Some(adt_def) = fn_ty.sig.skip_binder().output().ty_adt_def() {\n+                    if let Some(v) = adt_def.variants.iter().find(|v| resolved_def_id == v.did) {\n+                        // technically they can diverge, but only if one of their arguments diverges, so it doesn't matter\n+                        let (lvalue, target) = destination.expect(\"tuple struct constructors can't diverge\");\n+                        let dest_ty = self.tcx.item_type(adt_def.did);\n+                        let dest_layout = self.type_layout(dest_ty)?;\n+                        match *dest_layout {\n+                            Layout::Univariant { ref variant, .. } => {\n+                                assert_eq!(v.disr_val.to_u128_unchecked(), 0);\n+                                let offsets = variant.offsets.iter().map(|s| s.bytes());\n+\n+                                // FIXME: don't allocate for single or dual field structs\n+                                let dest = self.force_allocation(lvalue)?.to_ptr();\n+\n+                                for (offset, (value, value_ty)) in offsets.into_iter().zip(args) {\n+                                    let field_dest = dest.offset(offset);\n+                                    self.write_value_to_ptr(value, field_dest, value_ty)?;\n+                                }\n+                            },\n+                            // FIXME: enum variant constructors\n+                            _ => bug!(\"bad layout for tuple struct constructor: {:?}\", dest_layout),\n+                        }\n+                        self.goto_block(target);\n+                        return Ok(());\n+                    }\n+                }\n+\n                 let mir = self.load_mir(resolved_def_id)?;\n                 let (return_lvalue, return_to_block) = match destination {\n                     Some((lvalue, block)) => (lvalue, StackPopCleanup::Goto(block)),"}, {"sha": "05e8893de178747782e2de4fdd4c56e6974e2003", "filename": "tests/run-pass/tuple_like_struct_constructor.rs", "status": "added", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/7c486416cb68efcefcf216037d1bcaab60e88133/tests%2Frun-pass%2Ftuple_like_struct_constructor.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7c486416cb68efcefcf216037d1bcaab60e88133/tests%2Frun-pass%2Ftuple_like_struct_constructor.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frun-pass%2Ftuple_like_struct_constructor.rs?ref=7c486416cb68efcefcf216037d1bcaab60e88133", "patch": "@@ -0,0 +1,5 @@\n+fn main() {\n+    #[derive(PartialEq, Eq, Debug)]\n+    struct A(i32);\n+    assert_eq!(Some(42).map(A), Some(A(42)));\n+}"}]}