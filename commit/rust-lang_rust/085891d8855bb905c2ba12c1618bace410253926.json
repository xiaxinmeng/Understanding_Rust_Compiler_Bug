{"sha": "085891d8855bb905c2ba12c1618bace410253926", "node_id": "MDY6Q29tbWl0NzI0NzEyOjA4NTg5MWQ4ODU1YmI5MDVjMmJhMTJjMTYxOGJhY2U0MTAyNTM5MjY=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2020-07-23T08:27:20Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-07-23T08:27:20Z"}, "message": "Merge #5501\n\n5501: minor r=matklad a=matklad\n\n\n\nbors r+\n\ud83e\udd16\n\nCo-authored-by: Aleksey Kladov <aleksey.kladov@gmail.com>", "tree": {"sha": "a7a09d0a42f51903b3adf6cde77843a606350467", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a7a09d0a42f51903b3adf6cde77843a606350467"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/085891d8855bb905c2ba12c1618bace410253926", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJfGUnoCRBK7hj4Ov3rIwAAdHIIADbonwmtrzhIML4NGrQI4uxz\nNYG/TffMfnm6GbbnyZryE0j5clsjCfOTNHi99wj0Df3pOq2115QMSDtaSVq3yQzy\nBbG3ch8VUreEV73014NiCMLUOJoohI7l7nK+OXge30NTgnDP0jsZtSPclniSoJQM\nKLfCdBiakWH/JZN+RF/r+Mi7cL6fPv5g6mLDSkzO1Ffd9tDkzmzSgqNhNFscEwfL\ngte1a8M32OjBupyxbLz77b/cZBS07Twx3u1HKXWFhrDPvkfEWRZcZ0yTGf9fVow8\nxmx2NH8FYVXUMcmRIeyspUJbPiYzFzX6Wqa/P7mruTFD60zbCfUyPrhKBQKf3Vg=\n=qNSp\n-----END PGP SIGNATURE-----\n", "payload": "tree a7a09d0a42f51903b3adf6cde77843a606350467\nparent 56ff9ef0262f5bad7fa1d0ac3b76974d88671afd\nparent c2d8829d567a6ea19361b27a8711231e6af89844\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1595492840 +0000\ncommitter GitHub <noreply@github.com> 1595492840 +0000\n\nMerge #5501\n\n5501: minor r=matklad a=matklad\n\n\n\nbors r+\n\ud83e\udd16\n\nCo-authored-by: Aleksey Kladov <aleksey.kladov@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/085891d8855bb905c2ba12c1618bace410253926", "html_url": "https://github.com/rust-lang/rust/commit/085891d8855bb905c2ba12c1618bace410253926", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/085891d8855bb905c2ba12c1618bace410253926/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "56ff9ef0262f5bad7fa1d0ac3b76974d88671afd", "url": "https://api.github.com/repos/rust-lang/rust/commits/56ff9ef0262f5bad7fa1d0ac3b76974d88671afd", "html_url": "https://github.com/rust-lang/rust/commit/56ff9ef0262f5bad7fa1d0ac3b76974d88671afd"}, {"sha": "c2d8829d567a6ea19361b27a8711231e6af89844", "url": "https://api.github.com/repos/rust-lang/rust/commits/c2d8829d567a6ea19361b27a8711231e6af89844", "html_url": "https://github.com/rust-lang/rust/commit/c2d8829d567a6ea19361b27a8711231e6af89844"}], "stats": {"total": 32, "additions": 16, "deletions": 16}, "files": [{"sha": "ac95e428ebfc736dafa1bb94010847e756262903", "filename": "crates/rust-analyzer/src/main_loop.rs", "status": "modified", "additions": 16, "deletions": 16, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/085891d8855bb905c2ba12c1618bace410253926/crates%2Frust-analyzer%2Fsrc%2Fmain_loop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/085891d8855bb905c2ba12c1618bace410253926/crates%2Frust-analyzer%2Fsrc%2Fmain_loop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fmain_loop.rs?ref=085891d8855bb905c2ba12c1618bace410253926", "patch": "@@ -97,22 +97,6 @@ impl fmt::Debug for Event {\n }\n \n impl GlobalState {\n-    fn next_event(&self, inbox: &Receiver<lsp_server::Message>) -> Option<Event> {\n-        select! {\n-            recv(inbox) -> msg =>\n-                msg.ok().map(Event::Lsp),\n-\n-            recv(self.task_pool.receiver) -> task =>\n-                Some(Event::Task(task.unwrap())),\n-\n-            recv(self.loader.receiver) -> task =>\n-                Some(Event::Vfs(task.unwrap())),\n-\n-            recv(self.flycheck_receiver) -> task =>\n-                Some(Event::Flycheck(task.unwrap())),\n-        }\n-    }\n-\n     fn run(mut self, inbox: Receiver<lsp_server::Message>) -> Result<()> {\n         if self.config.linked_projects.is_empty() && self.config.notifications.cargo_toml_not_found\n         {\n@@ -169,6 +153,22 @@ impl GlobalState {\n         Err(\"client exited without proper shutdown sequence\")?\n     }\n \n+    fn next_event(&self, inbox: &Receiver<lsp_server::Message>) -> Option<Event> {\n+        select! {\n+            recv(inbox) -> msg =>\n+                msg.ok().map(Event::Lsp),\n+\n+            recv(self.task_pool.receiver) -> task =>\n+                Some(Event::Task(task.unwrap())),\n+\n+            recv(self.loader.receiver) -> task =>\n+                Some(Event::Vfs(task.unwrap())),\n+\n+            recv(self.flycheck_receiver) -> task =>\n+                Some(Event::Flycheck(task.unwrap())),\n+        }\n+    }\n+\n     fn handle_event(&mut self, event: Event) -> Result<()> {\n         let loop_start = Instant::now();\n         // NOTE: don't count blocking select! call as a loop-turn time"}]}