{"sha": "3941f78a1bfb3ecf077dd782e5d03ea7fafcad86", "node_id": "MDY6Q29tbWl0NzI0NzEyOjM5NDFmNzhhMWJmYjNlY2YwNzdkZDc4MmU1ZDAzZWE3ZmFmY2FkODY=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2013-05-27T14:08:04Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2013-05-27T14:08:04Z"}, "message": "auto merge of #6763 : steveklabnik/rust/core_to_std, r=thestinger\n\nWhen I submitted #6748 yesterday, I used the old name.\r\n\r\nr? @thestinger", "tree": {"sha": "e71dc7878c097a4ec2d9a3951c41c0da99271389", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e71dc7878c097a4ec2d9a3951c41c0da99271389"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3941f78a1bfb3ecf077dd782e5d03ea7fafcad86", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3941f78a1bfb3ecf077dd782e5d03ea7fafcad86", "html_url": "https://github.com/rust-lang/rust/commit/3941f78a1bfb3ecf077dd782e5d03ea7fafcad86", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3941f78a1bfb3ecf077dd782e5d03ea7fafcad86/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b7294e1f1bc390ffe940e01d98d01f4f26ce895c", "url": "https://api.github.com/repos/rust-lang/rust/commits/b7294e1f1bc390ffe940e01d98d01f4f26ce895c", "html_url": "https://github.com/rust-lang/rust/commit/b7294e1f1bc390ffe940e01d98d01f4f26ce895c"}, {"sha": "e2fcb92a6d5c92c6beddec92fa0514d2c5de0fab", "url": "https://api.github.com/repos/rust-lang/rust/commits/e2fcb92a6d5c92c6beddec92fa0514d2c5de0fab", "html_url": "https://github.com/rust-lang/rust/commit/e2fcb92a6d5c92c6beddec92fa0514d2c5de0fab"}], "stats": {"total": 40, "additions": 20, "deletions": 20}, "files": [{"sha": "f6f29534f94ed44e90efaa4408804a7b2ae123bb", "filename": "src/libstd/bool.rs", "status": "modified", "additions": 20, "deletions": 20, "changes": 40, "blob_url": "https://github.com/rust-lang/rust/blob/3941f78a1bfb3ecf077dd782e5d03ea7fafcad86/src%2Flibstd%2Fbool.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3941f78a1bfb3ecf077dd782e5d03ea7fafcad86/src%2Flibstd%2Fbool.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fbool.rs?ref=3941f78a1bfb3ecf077dd782e5d03ea7fafcad86", "patch": "@@ -44,10 +44,10 @@ use from_str::FromStr;\n *\n * # Examples\n * ~~~\n-* rusti> core::bool::not(true)\n+* rusti> std::bool::not(true)\n * false\n * ~~~\n-* rusti> core::bool::not(false)\n+* rusti> std::bool::not(false)\n * true\n * ~~~\n */\n@@ -58,10 +58,10 @@ pub fn not(v: bool) -> bool { !v }\n *\n * # Examples\n * ~~~\n-* rusti> core::bool::and(true, false)\n+* rusti> std::bool::and(true, false)\n * false\n * ~~~\n-* rusti> core::bool::and(true, true)\n+* rusti> std::bool::and(true, true)\n * true\n * ~~~\n */\n@@ -72,10 +72,10 @@ pub fn and(a: bool, b: bool) -> bool { a && b }\n *\n * # Examples\n * ~~~\n-* rusti> core::bool::or(true, false)\n+* rusti> std::bool::or(true, false)\n * true\n * ~~~\n-* rusti> core::bool::or(false, false)\n+* rusti> std::bool::or(false, false)\n * false\n * ~~~\n */\n@@ -88,10 +88,10 @@ pub fn or(a: bool, b: bool) -> bool { a || b }\n *\n * # Examples\n * ~~~\n-* rusti> core::bool::xor(true, false)\n+* rusti> std::bool::xor(true, false)\n * true\n * ~~~\n-* rusti> core::bool::xor(true, true)\n+* rusti> std::bool::xor(true, true)\n * false\n * ~~~\n */\n@@ -106,10 +106,10 @@ pub fn xor(a: bool, b: bool) -> bool { (a && !b) || (!a && b) }\n *\n * # Examples\n * ~~~\n-* rusti> core::bool::implies(true, true)\n+* rusti> std::bool::implies(true, true)\n * true\n * ~~~\n-* rusti> core::bool::implies(true, false)\n+* rusti> std::bool::implies(true, false)\n * false\n * ~~~\n */\n@@ -122,10 +122,10 @@ pub fn implies(a: bool, b: bool) -> bool { !a || b }\n *\n * # Examples\n * ~~~\n-* rusti> core::bool::eq(false, true)\n+* rusti> std::bool::eq(false, true)\n * false\n * ~~~\n-* rusti> core::bool::eq(false, false)\n+* rusti> std::bool::eq(false, false)\n * true\n * ~~~\n */\n@@ -138,10 +138,10 @@ pub fn eq(a: bool, b: bool) -> bool { a == b }\n *\n * # Examples\n * ~~~\n-* rusti> core::bool::ne(false, true)\n+* rusti> std::bool::ne(false, true)\n * true\n * ~~~\n-* rusti> core::bool::ne(false, false)\n+* rusti> std::bool::ne(false, false)\n * false\n * ~~~\n */\n@@ -152,10 +152,10 @@ pub fn ne(a: bool, b: bool) -> bool { a != b }\n *\n * # Examples\n * ~~~\n-* rusti> core::bool::is_true(true)\n+* rusti> std::bool::is_true(true)\n * true\n * ~~~\n-* rusti> core::bool::is_true(false)\n+* rusti> std::bool::is_true(false)\n * false\n * ~~~\n */\n@@ -166,10 +166,10 @@ pub fn is_true(v: bool) -> bool { v }\n *\n * # Examples\n * ~~~\n-* rusti> core::bool::is_false(false)\n+* rusti> std::bool::is_false(false)\n * true\n * ~~~\n-* rusti> core::bool::is_false(true)\n+* rusti> std::bool::is_false(true)\n * false\n * ~~~\n */\n@@ -223,8 +223,8 @@ pub fn to_str(v: bool) -> ~str { if v { ~\"true\" } else { ~\"false\" } }\n *\n * # Examples\n * ~~~\n-* do core::bool::all_values |x: bool| {\n-*     println(core::bool::to_str(x));\n+* do std::bool::all_values |x: bool| {\n+*     println(std::bool::to_str(x));\n * }\n * ~~~\n */"}]}