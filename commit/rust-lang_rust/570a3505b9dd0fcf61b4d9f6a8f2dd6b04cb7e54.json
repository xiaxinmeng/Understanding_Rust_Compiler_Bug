{"sha": "570a3505b9dd0fcf61b4d9f6a8f2dd6b04cb7e54", "node_id": "MDY6Q29tbWl0NzI0NzEyOjU3MGEzNTA1YjlkZDBmY2Y2MWI0ZDlmNmE4ZjJkZDZiMDRjYjdlNTQ=", "commit": {"author": {"name": "Seiichi Uchida", "email": "seuchida@gmail.com", "date": "2017-07-29T13:12:18Z"}, "committer": {"name": "Seiichi Uchida", "email": "seuchida@gmail.com", "date": "2017-07-29T13:13:23Z"}, "message": "Make definitive_tactic more generic with separator length", "tree": {"sha": "7b1cddc2d9629a4bd52c4a040b4d9a75726ef180", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7b1cddc2d9629a4bd52c4a040b4d9a75726ef180"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/570a3505b9dd0fcf61b4d9f6a8f2dd6b04cb7e54", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/570a3505b9dd0fcf61b4d9f6a8f2dd6b04cb7e54", "html_url": "https://github.com/rust-lang/rust/commit/570a3505b9dd0fcf61b4d9f6a8f2dd6b04cb7e54", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/570a3505b9dd0fcf61b4d9f6a8f2dd6b04cb7e54/comments", "author": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "committer": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "74f5a515ef025ed629cf3cf1c04ed783c9a371c6", "url": "https://api.github.com/repos/rust-lang/rust/commits/74f5a515ef025ed629cf3cf1c04ed783c9a371c6", "html_url": "https://github.com/rust-lang/rust/commit/74f5a515ef025ed629cf3cf1c04ed783c9a371c6"}], "stats": {"total": 39, "additions": 29, "deletions": 10}, "files": [{"sha": "5621bcbf1b9854046d875e82a6a02562ef3d19fc", "filename": "src/expr.rs", "status": "modified", "additions": 11, "deletions": 3, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/570a3505b9dd0fcf61b4d9f6a8f2dd6b04cb7e54/src%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/570a3505b9dd0fcf61b4d9f6a8f2dd6b04cb7e54/src%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fexpr.rs?ref=570a3505b9dd0fcf61b4d9f6a8f2dd6b04cb7e54", "patch": "@@ -485,7 +485,7 @@ where\n                 Some(width) => {\n                     let tactic =\n                         ListTactic::LimitedHorizontalVertical(context.config.array_width());\n-                    definitive_tactic(&items, tactic, width)\n+                    definitive_tactic(&items, tactic, 2, width)\n                 }\n                 None => DefinitiveListTactic::Vertical,\n             }\n@@ -494,6 +494,7 @@ where\n             definitive_tactic(\n                 &items,\n                 ListTactic::LimitedHorizontalVertical(context.config.array_width()),\n+                2,\n                 nested_shape.width,\n             )\n         } else {\n@@ -591,7 +592,12 @@ fn rewrite_closure_fn_decl(\n         .width\n         .checked_sub(ret_str.len() + 1)\n         .unwrap_or(0);\n-    let tactic = definitive_tactic(&item_vec, ListTactic::HorizontalVertical, horizontal_budget);\n+    let tactic = definitive_tactic(\n+        &item_vec,\n+        ListTactic::HorizontalVertical,\n+        2,\n+        horizontal_budget,\n+    );\n     let arg_shape = match tactic {\n         DefinitiveListTactic::Horizontal => try_opt!(arg_shape.sub_width(ret_str.len() + 1)),\n         _ => arg_shape,\n@@ -1668,7 +1674,7 @@ fn rewrite_match_pattern(\n     );\n \n     let items: Vec<_> = pat_strs.into_iter().map(ListItem::from_str).collect();\n-    let tactic = definitive_tactic(&items, ListTactic::HorizontalVertical, pat_shape.width);\n+    let tactic = definitive_tactic(&items, ListTactic::HorizontalVertical, 3, pat_shape.width);\n     let fmt = ListFormatting {\n         tactic: tactic,\n         separator: \" |\",\n@@ -2216,6 +2222,7 @@ where\n     let tactic = definitive_tactic(\n         &*item_vec,\n         ListTactic::LimitedHorizontalVertical(args_max_width),\n+        2,\n         one_line_width,\n     );\n \n@@ -2756,6 +2763,7 @@ where\n     let tactic = definitive_tactic(\n         &item_vec,\n         ListTactic::HorizontalVertical,\n+        2,\n         nested_shape.width,\n     );\n     let fmt = ListFormatting {"}, {"sha": "bc743649e844d96da20438ed4df3e76d7e4330d9", "filename": "src/imports.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/570a3505b9dd0fcf61b4d9f6a8f2dd6b04cb7e54/src%2Fimports.rs", "raw_url": "https://github.com/rust-lang/rust/raw/570a3505b9dd0fcf61b4d9f6a8f2dd6b04cb7e54/src%2Fimports.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fimports.rs?ref=570a3505b9dd0fcf61b4d9f6a8f2dd6b04cb7e54", "patch": "@@ -451,6 +451,7 @@ fn rewrite_use_list(\n     let tactic = definitive_tactic(\n         &items[first_index..],\n         context.config.imports_layout(),\n+        2,\n         remaining_width,\n     );\n "}, {"sha": "8b4fd4c725e10768fb1950770dfc71f8de774757", "filename": "src/items.rs", "status": "modified", "additions": 8, "deletions": 2, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/570a3505b9dd0fcf61b4d9f6a8f2dd6b04cb7e54/src%2Fitems.rs", "raw_url": "https://github.com/rust-lang/rust/raw/570a3505b9dd0fcf61b4d9f6a8f2dd6b04cb7e54/src%2Fitems.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fitems.rs?ref=570a3505b9dd0fcf61b4d9f6a8f2dd6b04cb7e54", "patch": "@@ -2241,6 +2241,7 @@ fn rewrite_args(\n     let tactic = definitive_tactic(\n         &arg_items,\n         context.config.fn_args_density().to_list_tactic(),\n+        2,\n         one_line_budget,\n     );\n     let budget = match tactic {\n@@ -2423,7 +2424,12 @@ where\n {\n     let item_vec = items.collect::<Vec<_>>();\n \n-    let tactic = definitive_tactic(&item_vec, ListTactic::HorizontalVertical, one_line_budget);\n+    let tactic = definitive_tactic(\n+        &item_vec,\n+        ListTactic::HorizontalVertical,\n+        2,\n+        one_line_budget,\n+    );\n     let fmt = ListFormatting {\n         tactic: tactic,\n         separator: \",\",\n@@ -2636,7 +2642,7 @@ fn rewrite_where_clause(\n     let item_vec = items.collect::<Vec<_>>();\n     // FIXME: we don't need to collect here if the where_layout isn't\n     // HorizontalVertical.\n-    let tactic = definitive_tactic(&item_vec, context.config.where_layout(), budget);\n+    let tactic = definitive_tactic(&item_vec, context.config.where_layout(), 2, budget);\n \n     let mut comma_tactic = context.config.trailing_comma();\n     // Kind of a hack because we don't usually have trailing commas in where clauses."}, {"sha": "56ac10691de103cb96d25b8fbd9a3576100c03ab", "filename": "src/lists.rs", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/570a3505b9dd0fcf61b4d9f6a8f2dd6b04cb7e54/src%2Flists.rs", "raw_url": "https://github.com/rust-lang/rust/raw/570a3505b9dd0fcf61b4d9f6a8f2dd6b04cb7e54/src%2Flists.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flists.rs?ref=570a3505b9dd0fcf61b4d9f6a8f2dd6b04cb7e54", "patch": "@@ -135,7 +135,12 @@ impl DefinitiveListTactic {\n     }\n }\n \n-pub fn definitive_tactic<I, T>(items: I, tactic: ListTactic, width: usize) -> DefinitiveListTactic\n+pub fn definitive_tactic<I, T>(\n+    items: I,\n+    tactic: ListTactic,\n+    sep_len: usize,\n+    width: usize,\n+) -> DefinitiveListTactic\n where\n     I: IntoIterator<Item = T> + Clone,\n     T: AsRef<ListItem>,\n@@ -155,7 +160,6 @@ where\n     };\n \n     let (sep_count, total_width) = calculate_width(items.clone());\n-    let sep_len = \", \".len(); // FIXME: make more generic?\n     let total_sep_len = sep_len * sep_count.checked_sub(1).unwrap_or(0);\n     let real_total = total_width + total_sep_len;\n \n@@ -640,7 +644,7 @@ pub fn struct_lit_tactic(\n             (IndentStyle::Visual, 1) => ListTactic::HorizontalVertical,\n             _ => context.config.struct_lit_multiline_style().to_list_tactic(),\n         };\n-        definitive_tactic(items, prelim_tactic, h_shape.width)\n+        definitive_tactic(items, prelim_tactic, 2, h_shape.width)\n     } else {\n         DefinitiveListTactic::Vertical\n     }"}, {"sha": "3144efe9db06ec3a9df1b27025e6c485dfe63280", "filename": "src/types.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/570a3505b9dd0fcf61b4d9f6a8f2dd6b04cb7e54/src%2Ftypes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/570a3505b9dd0fcf61b4d9f6a8f2dd6b04cb7e54/src%2Ftypes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftypes.rs?ref=570a3505b9dd0fcf61b4d9f6a8f2dd6b04cb7e54", "patch": "@@ -348,7 +348,7 @@ where\n \n     let item_vec: Vec<_> = items.collect();\n \n-    let tactic = definitive_tactic(&*item_vec, ListTactic::HorizontalVertical, budget);\n+    let tactic = definitive_tactic(&*item_vec, ListTactic::HorizontalVertical, 2, budget);\n \n     let fmt = ListFormatting {\n         tactic: tactic,"}, {"sha": "08ef6281baa5bb590d6a6ded64a027d0de289b16", "filename": "src/vertical.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/570a3505b9dd0fcf61b4d9f6a8f2dd6b04cb7e54/src%2Fvertical.rs", "raw_url": "https://github.com/rust-lang/rust/raw/570a3505b9dd0fcf61b4d9f6a8f2dd6b04cb7e54/src%2Fvertical.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fvertical.rs?ref=570a3505b9dd0fcf61b4d9f6a8f2dd6b04cb7e54", "patch": "@@ -221,7 +221,7 @@ fn rewrite_aligned_items_inner<T: AlignedItem>(\n         span.hi,\n     ).collect::<Vec<_>>();\n \n-    let tactic = definitive_tactic(&items, ListTactic::HorizontalVertical, one_line_width);\n+    let tactic = definitive_tactic(&items, ListTactic::HorizontalVertical, 2, one_line_width);\n \n     let fmt = ListFormatting {\n         tactic: tactic,"}]}