{"sha": "9e68d236a7eda2e0483e3e4b7ea6a6772f867c0b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjllNjhkMjM2YTdlZGEyZTA0ODNlM2U0YjdlYTZhNjc3MmY4NjdjMGI=", "commit": {"author": {"name": "Igor Strebezhev", "email": "xamgore@ya.ru", "date": "2015-04-10T17:32:38Z"}, "committer": {"name": "Igor Strebezhev", "email": "xamgore@ya.ru", "date": "2015-04-10T17:32:38Z"}, "message": "Fix mistake in documentation", "tree": {"sha": "2613338c1bc1cd59faf35c8b7314dbe53d58e89c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2613338c1bc1cd59faf35c8b7314dbe53d58e89c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9e68d236a7eda2e0483e3e4b7ea6a6772f867c0b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9e68d236a7eda2e0483e3e4b7ea6a6772f867c0b", "html_url": "https://github.com/rust-lang/rust/commit/9e68d236a7eda2e0483e3e4b7ea6a6772f867c0b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9e68d236a7eda2e0483e3e4b7ea6a6772f867c0b/comments", "author": {"login": "xamgore", "id": 4586392, "node_id": "MDQ6VXNlcjQ1ODYzOTI=", "avatar_url": "https://avatars.githubusercontent.com/u/4586392?v=4", "gravatar_id": "", "url": "https://api.github.com/users/xamgore", "html_url": "https://github.com/xamgore", "followers_url": "https://api.github.com/users/xamgore/followers", "following_url": "https://api.github.com/users/xamgore/following{/other_user}", "gists_url": "https://api.github.com/users/xamgore/gists{/gist_id}", "starred_url": "https://api.github.com/users/xamgore/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/xamgore/subscriptions", "organizations_url": "https://api.github.com/users/xamgore/orgs", "repos_url": "https://api.github.com/users/xamgore/repos", "events_url": "https://api.github.com/users/xamgore/events{/privacy}", "received_events_url": "https://api.github.com/users/xamgore/received_events", "type": "User", "site_admin": false}, "committer": {"login": "xamgore", "id": 4586392, "node_id": "MDQ6VXNlcjQ1ODYzOTI=", "avatar_url": "https://avatars.githubusercontent.com/u/4586392?v=4", "gravatar_id": "", "url": "https://api.github.com/users/xamgore", "html_url": "https://github.com/xamgore", "followers_url": "https://api.github.com/users/xamgore/followers", "following_url": "https://api.github.com/users/xamgore/following{/other_user}", "gists_url": "https://api.github.com/users/xamgore/gists{/gist_id}", "starred_url": "https://api.github.com/users/xamgore/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/xamgore/subscriptions", "organizations_url": "https://api.github.com/users/xamgore/orgs", "repos_url": "https://api.github.com/users/xamgore/repos", "events_url": "https://api.github.com/users/xamgore/events{/privacy}", "received_events_url": "https://api.github.com/users/xamgore/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9539627ac76ca37d617a329dbd79c50c59cf59ee", "url": "https://api.github.com/repos/rust-lang/rust/commits/9539627ac76ca37d617a329dbd79c50c59cf59ee", "html_url": "https://github.com/rust-lang/rust/commit/9539627ac76ca37d617a329dbd79c50c59cf59ee"}], "stats": {"total": 12, "additions": 6, "deletions": 6}, "files": [{"sha": "289679d846d48f07e715e591709d8517753785fe", "filename": "src/libcore/num/mod.rs", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/9e68d236a7eda2e0483e3e4b7ea6a6772f867c0b/src%2Flibcore%2Fnum%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9e68d236a7eda2e0483e3e4b7ea6a6772f867c0b/src%2Flibcore%2Fnum%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fnum%2Fmod.rs?ref=9e68d236a7eda2e0483e3e4b7ea6a6772f867c0b", "patch": "@@ -217,7 +217,7 @@ pub trait Int\n                reason = \"pending integer conventions\")]\n     fn trailing_zeros(self) -> u32;\n \n-    /// Shifts the bits to the left by a specified amount amount, `n`, wrapping\n+    /// Shifts the bits to the left by a specified amount, `n`, wrapping\n     /// the truncated bits to the end of the resulting integer.\n     ///\n     /// # Examples\n@@ -235,7 +235,7 @@ pub trait Int\n                reason = \"pending integer conventions\")]\n     fn rotate_left(self, n: u32) -> Self;\n \n-    /// Shifts the bits to the right by a specified amount amount, `n`, wrapping\n+    /// Shifts the bits to the right by a specified amount, `n`, wrapping\n     /// the truncated bits to the beginning of the resulting integer.\n     ///\n     /// # Examples\n@@ -937,7 +937,7 @@ macro_rules! int_impl {\n             (self as $UnsignedT).trailing_zeros()\n         }\n \n-        /// Shifts the bits to the left by a specified amount amount, `n`,\n+        /// Shifts the bits to the left by a specified amount, `n`,\n         /// wrapping the truncated bits to the end of the resulting integer.\n         ///\n         /// # Examples\n@@ -957,7 +957,7 @@ macro_rules! int_impl {\n             (self as $UnsignedT).rotate_left(n) as $T\n         }\n \n-        /// Shifts the bits to the right by a specified amount amount, `n`,\n+        /// Shifts the bits to the right by a specified amount, `n`,\n         /// wrapping the truncated bits to the beginning of the resulting\n         /// integer.\n         ///\n@@ -1457,7 +1457,7 @@ macro_rules! uint_impl {\n             unsafe { $cttz(self as $ActualT) as u32 }\n         }\n \n-        /// Shifts the bits to the left by a specified amount amount, `n`,\n+        /// Shifts the bits to the left by a specified amount, `n`,\n         /// wrapping the truncated bits to the end of the resulting integer.\n         ///\n         /// # Examples\n@@ -1479,7 +1479,7 @@ macro_rules! uint_impl {\n             (self << n) | (self >> (($BITS - n) % $BITS))\n         }\n \n-        /// Shifts the bits to the right by a specified amount amount, `n`,\n+        /// Shifts the bits to the right by a specified amount, `n`,\n         /// wrapping the truncated bits to the beginning of the resulting\n         /// integer.\n         ///"}]}