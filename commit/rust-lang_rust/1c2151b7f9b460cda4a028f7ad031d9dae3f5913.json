{"sha": "1c2151b7f9b460cda4a028f7ad031d9dae3f5913", "node_id": "MDY6Q29tbWl0NzI0NzEyOjFjMjE1MWI3ZjliNDYwY2RhNGEwMjhmN2FkMDMxZDlkYWUzZjU5MTM=", "commit": {"author": {"name": "Devon Hollowood", "email": "devonhollowood@gmail.com", "date": "2016-10-20T05:08:49Z"}, "committer": {"name": "Devon Hollowood", "email": "devonhollowood@gmail.com", "date": "2016-10-20T05:08:49Z"}, "message": "Add `unwrap_or_default` method to `Result`", "tree": {"sha": "1b5c19817c020bf7da1e19f019f16fcc1b97c88e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1b5c19817c020bf7da1e19f019f16fcc1b97c88e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1c2151b7f9b460cda4a028f7ad031d9dae3f5913", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1c2151b7f9b460cda4a028f7ad031d9dae3f5913", "html_url": "https://github.com/rust-lang/rust/commit/1c2151b7f9b460cda4a028f7ad031d9dae3f5913", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1c2151b7f9b460cda4a028f7ad031d9dae3f5913/comments", "author": {"login": "devonhollowood", "id": 7864326, "node_id": "MDQ6VXNlcjc4NjQzMjY=", "avatar_url": "https://avatars.githubusercontent.com/u/7864326?v=4", "gravatar_id": "", "url": "https://api.github.com/users/devonhollowood", "html_url": "https://github.com/devonhollowood", "followers_url": "https://api.github.com/users/devonhollowood/followers", "following_url": "https://api.github.com/users/devonhollowood/following{/other_user}", "gists_url": "https://api.github.com/users/devonhollowood/gists{/gist_id}", "starred_url": "https://api.github.com/users/devonhollowood/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/devonhollowood/subscriptions", "organizations_url": "https://api.github.com/users/devonhollowood/orgs", "repos_url": "https://api.github.com/users/devonhollowood/repos", "events_url": "https://api.github.com/users/devonhollowood/events{/privacy}", "received_events_url": "https://api.github.com/users/devonhollowood/received_events", "type": "User", "site_admin": false}, "committer": {"login": "devonhollowood", "id": 7864326, "node_id": "MDQ6VXNlcjc4NjQzMjY=", "avatar_url": "https://avatars.githubusercontent.com/u/7864326?v=4", "gravatar_id": "", "url": "https://api.github.com/users/devonhollowood", "html_url": "https://github.com/devonhollowood", "followers_url": "https://api.github.com/users/devonhollowood/followers", "following_url": "https://api.github.com/users/devonhollowood/following{/other_user}", "gists_url": "https://api.github.com/users/devonhollowood/gists{/gist_id}", "starred_url": "https://api.github.com/users/devonhollowood/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/devonhollowood/subscriptions", "organizations_url": "https://api.github.com/users/devonhollowood/orgs", "repos_url": "https://api.github.com/users/devonhollowood/repos", "events_url": "https://api.github.com/users/devonhollowood/events{/privacy}", "received_events_url": "https://api.github.com/users/devonhollowood/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d337f345ca8b3bb4aac988ace1c0676abc5310a0", "url": "https://api.github.com/repos/rust-lang/rust/commits/d337f345ca8b3bb4aac988ace1c0676abc5310a0", "html_url": "https://github.com/rust-lang/rust/commit/d337f345ca8b3bb4aac988ace1c0676abc5310a0"}], "stats": {"total": 39, "additions": 39, "deletions": 0}, "files": [{"sha": "8964b29b3a62f5f4593b691b81e360749f117ec4", "filename": "src/libcore/result.rs", "status": "modified", "additions": 33, "deletions": 0, "changes": 33, "blob_url": "https://github.com/rust-lang/rust/blob/1c2151b7f9b460cda4a028f7ad031d9dae3f5913/src%2Flibcore%2Fresult.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1c2151b7f9b460cda4a028f7ad031d9dae3f5913/src%2Flibcore%2Fresult.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fresult.rs?ref=1c2151b7f9b460cda4a028f7ad031d9dae3f5913", "patch": "@@ -792,6 +792,39 @@ impl<T: fmt::Debug, E> Result<T, E> {\n     }\n }\n \n+impl<T: Default, E> Result<T, E> {\n+    /// Returns the contained value or a default\n+    ///\n+    /// Consumes the `self` argument then, if `Ok`, returns the contained\n+    /// value, otherwise if `Err`, returns the default value for that\n+    /// type.\n+    ///\n+    /// # Examples\n+    ///\n+    /// Convert a string to an integer, turning poorly-formed strings\n+    /// into 0 (the default value for integers). `parse` converts\n+    /// a string to any other type that implements `FromStr`, returning an\n+    /// `Err` on error.\n+    ///\n+    /// ```\n+    /// let good_year_from_input = \"1909\";\n+    /// let bad_year_from_input = \"190blarg\";\n+    /// let good_year = good_year_from_input.parse().unwrap_or_default();\n+    /// let bad_year = bad_year_from_input.parse().unwrap_or_default();\n+    ///\n+    /// assert_eq!(1909, good_year);\n+    /// assert_eq!(0, bad_year);\n+    /// ```\n+    #[inline]\n+    #[stable(feature = \"rust1\", since = \"1.0.0\")]\n+    pub fn unwrap_or_default(self) -> T {\n+        match self {\n+            Ok(x) => x,\n+            Err(_) => Default::default(),\n+        }\n+    }\n+}\n+\n // This is a separate function to reduce the code size of the methods\n #[inline(never)]\n #[cold]"}, {"sha": "bc2cd8bbfc6512158415e957a23f408378b881c2", "filename": "src/libcoretest/result.rs", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/1c2151b7f9b460cda4a028f7ad031d9dae3f5913/src%2Flibcoretest%2Fresult.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1c2151b7f9b460cda4a028f7ad031d9dae3f5913/src%2Flibcoretest%2Fresult.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcoretest%2Fresult.rs?ref=1c2151b7f9b460cda4a028f7ad031d9dae3f5913", "patch": "@@ -183,3 +183,9 @@ pub fn test_iter_mut() {\n     }\n     assert_eq!(err, Err(\"error\"));\n }\n+\n+#[test]\n+pub fn test_unwrap_or_default() {\n+    assert_eq!(op1().unwrap_or_default(), 666);\n+    assert_eq!(op2().unwrap_or_default(), 0);\n+}"}]}