{"sha": "3212734bd744719dc197a19902d083c591670ab1", "node_id": "MDY6Q29tbWl0NzI0NzEyOjMyMTI3MzRiZDc0NDcxOWRjMTk3YTE5OTAyZDA4M2M1OTE2NzBhYjE=", "commit": {"author": {"name": "Ellen", "email": "supbscripter@gmail.com", "date": "2021-09-07T12:36:50Z"}, "committer": {"name": "Ellen", "email": "supbscripter@gmail.com", "date": "2021-09-09T00:32:03Z"}, "message": "resolve `from_hir_call` FIXME", "tree": {"sha": "8fccb4967c17966d603c7694cbcb36b16815c2e8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8fccb4967c17966d603c7694cbcb36b16815c2e8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3212734bd744719dc197a19902d083c591670ab1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3212734bd744719dc197a19902d083c591670ab1", "html_url": "https://github.com/rust-lang/rust/commit/3212734bd744719dc197a19902d083c591670ab1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3212734bd744719dc197a19902d083c591670ab1/comments", "author": {"login": "BoxyUwU", "id": 21149742, "node_id": "MDQ6VXNlcjIxMTQ5NzQy", "avatar_url": "https://avatars.githubusercontent.com/u/21149742?v=4", "gravatar_id": "", "url": "https://api.github.com/users/BoxyUwU", "html_url": "https://github.com/BoxyUwU", "followers_url": "https://api.github.com/users/BoxyUwU/followers", "following_url": "https://api.github.com/users/BoxyUwU/following{/other_user}", "gists_url": "https://api.github.com/users/BoxyUwU/gists{/gist_id}", "starred_url": "https://api.github.com/users/BoxyUwU/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/BoxyUwU/subscriptions", "organizations_url": "https://api.github.com/users/BoxyUwU/orgs", "repos_url": "https://api.github.com/users/BoxyUwU/repos", "events_url": "https://api.github.com/users/BoxyUwU/events{/privacy}", "received_events_url": "https://api.github.com/users/BoxyUwU/received_events", "type": "User", "site_admin": false}, "committer": {"login": "BoxyUwU", "id": 21149742, "node_id": "MDQ6VXNlcjIxMTQ5NzQy", "avatar_url": "https://avatars.githubusercontent.com/u/21149742?v=4", "gravatar_id": "", "url": "https://api.github.com/users/BoxyUwU", "html_url": "https://github.com/BoxyUwU", "followers_url": "https://api.github.com/users/BoxyUwU/followers", "following_url": "https://api.github.com/users/BoxyUwU/following{/other_user}", "gists_url": "https://api.github.com/users/BoxyUwU/gists{/gist_id}", "starred_url": "https://api.github.com/users/BoxyUwU/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/BoxyUwU/subscriptions", "organizations_url": "https://api.github.com/users/BoxyUwU/orgs", "repos_url": "https://api.github.com/users/BoxyUwU/repos", "events_url": "https://api.github.com/users/BoxyUwU/events{/privacy}", "received_events_url": "https://api.github.com/users/BoxyUwU/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8c7954dc425e8c6ee4aaaf14be5015ad8982d540", "url": "https://api.github.com/repos/rust-lang/rust/commits/8c7954dc425e8c6ee4aaaf14be5015ad8982d540", "html_url": "https://github.com/rust-lang/rust/commit/8c7954dc425e8c6ee4aaaf14be5015ad8982d540"}], "stats": {"total": 26, "additions": 24, "deletions": 2}, "files": [{"sha": "702b5a508b744f5fccd0c8b5f026a3741b7285bb", "filename": "compiler/rustc_trait_selection/src/traits/const_evaluatable.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/3212734bd744719dc197a19902d083c591670ab1/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fconst_evaluatable.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3212734bd744719dc197a19902d083c591670ab1/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fconst_evaluatable.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fconst_evaluatable.rs?ref=3212734bd744719dc197a19902d083c591670ab1", "patch": "@@ -337,7 +337,6 @@ impl<'a, 'tcx> AbstractConstBuilder<'a, 'tcx> {\n             // `<T as Trait>::ASSOC` as well as `12`\n             &ExprKind::Literal { literal, .. } => self.nodes.push(Node::Leaf(literal)),\n \n-            // FIXME(generic_const_exprs): Handle `from_hir_call` field\n             ExprKind::Call { fun, args,  .. } => {\n                 let fun = self.recurse_build(*fun)?;\n "}, {"sha": "916d60c0e0def2d5b54841668e15d14fa5799258", "filename": "src/test/ui/const-generics/generic_const_exprs/abstract-consts-as-cast-5.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3212734bd744719dc197a19902d083c591670ab1/src%2Ftest%2Fui%2Fconst-generics%2Fgeneric_const_exprs%2Fabstract-consts-as-cast-5.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3212734bd744719dc197a19902d083c591670ab1/src%2Ftest%2Fui%2Fconst-generics%2Fgeneric_const_exprs%2Fabstract-consts-as-cast-5.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fgeneric_const_exprs%2Fabstract-consts-as-cast-5.rs?ref=3212734bd744719dc197a19902d083c591670ab1", "patch": "@@ -8,4 +8,4 @@ fn foo<const N: u8>(a: [(); N as usize]) {\n \n fn bar<const N: usize>() {}\n \n-fn main() {}\n\\ No newline at end of file\n+fn main() {}"}, {"sha": "abbeb2c928ed4aff2f20944ad53728fa3f63da78", "filename": "src/test/ui/const-generics/generic_const_exprs/unify-op-with-fn-call.rs", "status": "added", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/3212734bd744719dc197a19902d083c591670ab1/src%2Ftest%2Fui%2Fconst-generics%2Fgeneric_const_exprs%2Funify-op-with-fn-call.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3212734bd744719dc197a19902d083c591670ab1/src%2Ftest%2Fui%2Fconst-generics%2Fgeneric_const_exprs%2Funify-op-with-fn-call.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fgeneric_const_exprs%2Funify-op-with-fn-call.rs?ref=3212734bd744719dc197a19902d083c591670ab1", "patch": "@@ -0,0 +1,23 @@\n+#![feature(generic_const_exprs, adt_const_params, const_trait_impl)]\n+#![allow(incomplete_features)]\n+\n+#[derive(PartialEq, Eq)]\n+struct Foo(u8);\n+\n+impl const std::ops::Add for Foo {\n+    type Output = Self;\n+\n+    fn add(self, rhs: Self) -> Self::Output {\n+        self\n+    }\n+}\n+\n+struct Evaluatable<const N: Foo>;\n+\n+fn foo<const N: Foo>(a: Evaluatable<{ N + N }>) {\n+    bar::<{ std::ops::Add::add(N, N) }>();\n+}\n+\n+fn bar<const N: Foo>() {}\n+\n+fn main() {}"}]}