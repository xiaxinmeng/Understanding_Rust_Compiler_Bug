{"sha": "4412df20ae5bbb1c52e6271f3667639c95a2b726", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ0MTJkZjIwYWU1YmJiMWM1MmU2MjcxZjM2Njc2MzljOTVhMmI3MjY=", "commit": {"author": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2013-06-21T17:36:50Z"}, "committer": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2013-07-10T18:42:53Z"}, "message": "Add an identifier to TypeParameterDefs and use it to pretty print type parameters", "tree": {"sha": "fa4a69a25eeacba5f6b1aeb089650ba0f3c84d1b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fa4a69a25eeacba5f6b1aeb089650ba0f3c84d1b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4412df20ae5bbb1c52e6271f3667639c95a2b726", "comment_count": 5, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4412df20ae5bbb1c52e6271f3667639c95a2b726", "html_url": "https://github.com/rust-lang/rust/commit/4412df20ae5bbb1c52e6271f3667639c95a2b726", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4412df20ae5bbb1c52e6271f3667639c95a2b726/comments", "author": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e388a80c234d628c4d1fab77dc3e3f2c04cbefc5", "url": "https://api.github.com/repos/rust-lang/rust/commits/e388a80c234d628c4d1fab77dc3e3f2c04cbefc5", "html_url": "https://github.com/rust-lang/rust/commit/e388a80c234d628c4d1fab77dc3e3f2c04cbefc5"}], "stats": {"total": 37, "additions": 26, "deletions": 11}, "files": [{"sha": "2da4ac818a75834ba60b0e3f6a0298e0ee6ff472", "filename": "src/librustc/metadata/tydecode.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/4412df20ae5bbb1c52e6271f3667639c95a2b726/src%2Flibrustc%2Fmetadata%2Ftydecode.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4412df20ae5bbb1c52e6271f3667639c95a2b726/src%2Flibrustc%2Fmetadata%2Ftydecode.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmetadata%2Ftydecode.rs?ref=4412df20ae5bbb1c52e6271f3667639c95a2b726", "patch": "@@ -543,7 +543,8 @@ pub fn parse_type_param_def_data(data: &[u8], start: uint,\n }\n \n fn parse_type_param_def(st: &mut PState, conv: conv_did) -> ty::TypeParameterDef {\n-    ty::TypeParameterDef {def_id: parse_def(st, NominalType, |x,y| conv(x,y)),\n+    ty::TypeParameterDef {ident: parse_ident(st, ':'),\n+                          def_id: parse_def(st, NominalType, |x,y| conv(x,y)),\n                           bounds: @parse_bounds(st, |x,y| conv(x,y))}\n }\n "}, {"sha": "2cf64f9cb8d85924d28b2c045b0b9e43595d1ea9", "filename": "src/librustc/metadata/tyencode.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4412df20ae5bbb1c52e6271f3667639c95a2b726/src%2Flibrustc%2Fmetadata%2Ftyencode.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4412df20ae5bbb1c52e6271f3667639c95a2b726/src%2Flibrustc%2Fmetadata%2Ftyencode.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmetadata%2Ftyencode.rs?ref=4412df20ae5bbb1c52e6271f3667639c95a2b726", "patch": "@@ -416,6 +416,8 @@ fn enc_bounds(w: @io::Writer, cx: @ctxt, bs: &ty::ParamBounds) {\n }\n \n pub fn enc_type_param_def(w: @io::Writer, cx: @ctxt, v: &ty::TypeParameterDef) {\n+    w.write_str(cx.tcx.sess.str_of(v.ident));\n+    w.write_char(':');\n     w.write_str((cx.ds)(v.def_id));\n     w.write_char('|');\n     enc_bounds(w, cx, v.bounds);"}, {"sha": "5a3bb9c55d53cd0c6a8c89967240c0270d7ff3f8", "filename": "src/librustc/middle/subst.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/4412df20ae5bbb1c52e6271f3667639c95a2b726/src%2Flibrustc%2Fmiddle%2Fsubst.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4412df20ae5bbb1c52e6271f3667639c95a2b726/src%2Flibrustc%2Fmiddle%2Fsubst.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fsubst.rs?ref=4412df20ae5bbb1c52e6271f3667639c95a2b726", "patch": "@@ -130,6 +130,7 @@ impl Subst for ty::ParamBounds {\n impl Subst for ty::TypeParameterDef {\n     fn subst(&self, tcx: ty::ctxt, substs: &ty::substs) -> ty::TypeParameterDef {\n         ty::TypeParameterDef {\n+            ident: self.ident,\n             def_id: self.def_id,\n             bounds: self.bounds.subst(tcx, substs)\n         }"}, {"sha": "e9b3fb0dc1ed1a35b38fcf0b10ab2e1d3a1fcbbd", "filename": "src/librustc/middle/ty.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/4412df20ae5bbb1c52e6271f3667639c95a2b726/src%2Flibrustc%2Fmiddle%2Fty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4412df20ae5bbb1c52e6271f3667639c95a2b726/src%2Flibrustc%2Fmiddle%2Fty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fty.rs?ref=4412df20ae5bbb1c52e6271f3667639c95a2b726", "patch": "@@ -794,6 +794,7 @@ impl ToStr for IntVarValue {\n }\n \n pub struct TypeParameterDef {\n+    ident: ast::ident,\n     def_id: ast::def_id,\n     bounds: @ParamBounds\n }"}, {"sha": "9583867b94bc0ec2e9e103ed9a6ab26798b3c5b1", "filename": "src/librustc/middle/typeck/collect.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/4412df20ae5bbb1c52e6271f3667639c95a2b726/src%2Flibrustc%2Fmiddle%2Ftypeck%2Fcollect.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4412df20ae5bbb1c52e6271f3667639c95a2b726/src%2Flibrustc%2Fmiddle%2Ftypeck%2Fcollect.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftypeck%2Fcollect.rs?ref=4412df20ae5bbb1c52e6271f3667639c95a2b726", "patch": "@@ -59,6 +59,7 @@ use syntax::print::pprust::{path_to_str, explicit_self_to_str};\n use syntax::visit;\n use syntax::opt_vec::OptVec;\n use syntax::opt_vec;\n+use syntax::parse::token::special_idents;\n \n pub fn collect_item_types(ccx: @mut CrateCtxt, crate: &ast::crate) {\n     fn collect_intrinsic_type(ccx: &CrateCtxt,\n@@ -318,6 +319,7 @@ pub fn ensure_trait_methods(ccx: &CrateCtxt,\n         let self_trait_def = get_trait_def(ccx, local_def(trait_id));\n         let self_trait_ref = self_trait_def.trait_ref.subst(tcx, &substs);\n         new_type_param_defs.push(ty::TypeParameterDef {\n+            ident: special_idents::self_,\n             def_id: dummy_defid,\n             bounds: @ty::ParamBounds {\n                 builtin_bounds: ty::EmptyBuiltinBounds(),\n@@ -1151,6 +1153,7 @@ pub fn ty_generics(ccx: &CrateCtxt,\n                     let bounds = @compute_bounds(ccx, rp, generics,\n                                                  param_ty, &param.bounds);\n                     let def = ty::TypeParameterDef {\n+                        ident: param.ident,\n                         def_id: local_def(param.id),\n                         bounds: bounds\n                     };"}, {"sha": "0aae41941cda2ec46b1aeb45e2d1abf8e5cb9db7", "filename": "src/librustc/util/ppaux.rs", "status": "modified", "additions": 11, "deletions": 10, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/4412df20ae5bbb1c52e6271f3667639c95a2b726/src%2Flibrustc%2Futil%2Fppaux.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4412df20ae5bbb1c52e6271f3667639c95a2b726/src%2Flibrustc%2Futil%2Fppaux.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Futil%2Fppaux.rs?ref=4412df20ae5bbb1c52e6271f3667639c95a2b726", "patch": "@@ -435,16 +435,17 @@ pub fn ty_to_str(cx: ctxt, typ: t) -> ~str {\n       ty_infer(infer_ty) => infer_ty.to_str(),\n       ty_err => ~\"[type error]\",\n       ty_param(param_ty {idx: id, def_id: did}) => {\n-          let mut parm = (('T' as uint) + id) as char;\n-          if (parm as uint) > ('Z' as uint) {\n-              parm = (parm as uint - 26) as char;\n-          }\n-\n-          if cx.sess.verbose() {\n-              fmt!(\"%c:%?\", parm, did)\n-          } else {\n-              fmt!(\"%c\", parm)\n-          }\n+          let param_def = cx.ty_param_defs.find(&did.node);\n+          let ident = match param_def {\n+              Some(def) => {\n+                  cx.sess.str_of(def.ident).to_owned()\n+              }\n+              None => {\n+                  // This should not happen...\n+                  fmt!(\"BUG[%?]\", id)\n+              }\n+          };\n+          if !cx.sess.verbose() { ident } else { fmt!(\"%s:%?\", ident, did) }\n       }\n       ty_self(*) => ~\"Self\",\n       ty_enum(did, ref substs) | ty_struct(did, ref substs) => {"}, {"sha": "6af3166a2ff4e24c2dec3c326f47a1a40046568d", "filename": "src/test/compile-fail/type-parameter-names.rs", "status": "added", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/4412df20ae5bbb1c52e6271f3667639c95a2b726/src%2Ftest%2Fcompile-fail%2Ftype-parameter-names.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4412df20ae5bbb1c52e6271f3667639c95a2b726/src%2Ftest%2Fcompile-fail%2Ftype-parameter-names.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Ftype-parameter-names.rs?ref=4412df20ae5bbb1c52e6271f3667639c95a2b726", "patch": "@@ -0,0 +1,6 @@\n+// Test that we print out the names of type parameters correctly in\n+// our error messages.\n+\n+fn foo<Foo, Bar>(x: Foo) -> Bar { x } //~ ERROR expected `Bar` but found `Foo`\n+\n+fn main() {}\n\\ No newline at end of file"}]}