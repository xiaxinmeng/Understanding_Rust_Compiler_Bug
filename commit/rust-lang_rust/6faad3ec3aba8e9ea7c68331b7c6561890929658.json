{"sha": "6faad3ec3aba8e9ea7c68331b7c6561890929658", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZmYWFkM2VjM2FiYThlOWVhN2M2ODMzMWI3YzY1NjE4OTA5Mjk2NTg=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2014-08-11T11:06:08Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2014-08-11T11:06:08Z"}, "message": "auto merge of #16416 : nick29581/rust/log, r=pnkfelix\n\nPreviously we would accept an empty log level without an equals sign, but not with one. This addresses that minor nit. E.g., `RUST_LOG=rustc::middle::trans=` will work the same as `RUST_LOG=rustc::middle::trans`.", "tree": {"sha": "4b5a4f08fcae1e7ce82d3623e40a307de532abd1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4b5a4f08fcae1e7ce82d3623e40a307de532abd1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6faad3ec3aba8e9ea7c68331b7c6561890929658", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6faad3ec3aba8e9ea7c68331b7c6561890929658", "html_url": "https://github.com/rust-lang/rust/commit/6faad3ec3aba8e9ea7c68331b7c6561890929658", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6faad3ec3aba8e9ea7c68331b7c6561890929658/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5e720f0e5453e7b113f313df7827f3ad0a6dbe46", "url": "https://api.github.com/repos/rust-lang/rust/commits/5e720f0e5453e7b113f313df7827f3ad0a6dbe46", "html_url": "https://github.com/rust-lang/rust/commit/5e720f0e5453e7b113f313df7827f3ad0a6dbe46"}, {"sha": "81241dce8036c6e84e5640c179f53bf8cfc038a6", "url": "https://api.github.com/repos/rust-lang/rust/commits/81241dce8036c6e84e5640c179f53bf8cfc038a6", "html_url": "https://github.com/rust-lang/rust/commit/81241dce8036c6e84e5640c179f53bf8cfc038a6"}], "stats": {"total": 13, "additions": 12, "deletions": 1}, "files": [{"sha": "d692c99e8c261cedb8eecdc12689f8f6e4d5b1e9", "filename": "src/liblog/directive.rs", "status": "modified", "additions": 12, "deletions": 1, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/6faad3ec3aba8e9ea7c68331b7c6561890929658/src%2Fliblog%2Fdirective.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6faad3ec3aba8e9ea7c68331b7c6561890929658/src%2Fliblog%2Fdirective.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliblog%2Fdirective.rs?ref=6faad3ec3aba8e9ea7c68331b7c6561890929658", "patch": "@@ -38,7 +38,7 @@ pub fn parse_logging_spec(spec: &str) -> Vec<LogDirective> {\n     for s in spec.split(',') {\n         if s.len() == 0 { continue }\n         let mut parts = s.split('=');\n-        let (log_level, name) = match (parts.next(), parts.next(), parts.next()) {\n+        let (log_level, name) = match (parts.next(), parts.next().map(|s| s.trim()), parts.next()) {\n             (Some(part0), None, None) => {\n                 // if the single argument is a log-level string or number,\n                 // treat that as a global fallback\n@@ -47,6 +47,7 @@ pub fn parse_logging_spec(spec: &str) -> Vec<LogDirective> {\n                     None => (::MAX_LOG_LEVEL, Some(part0)),\n                 }\n             }\n+            (Some(part0), Some(\"\"), None) => (::MAX_LOG_LEVEL, Some(part0)),\n             (Some(part0), Some(part1), None) => {\n                 match parse_log_level(part1) {\n                     Some(num) => (num, Some(part0)),\n@@ -120,6 +121,16 @@ mod tests {\n         assert_eq!(dirs[0].level, ::WARN);\n     }\n \n+    #[test]\n+    fn parse_logging_spec_empty_log_level() {\n+        // test parse_logging_spec with '' as log level\n+        let dirs = parse_logging_spec(\"crate1::mod1=wrong,crate2=\");\n+        let dirs = dirs.as_slice();\n+        assert_eq!(dirs.len(), 1);\n+        assert_eq!(dirs[0].name, Some(\"crate2\".to_string()));\n+        assert_eq!(dirs[0].level, ::MAX_LOG_LEVEL);\n+    }\n+\n     #[test]\n     fn parse_logging_spec_global() {\n         // test parse_logging_spec with no crate"}]}