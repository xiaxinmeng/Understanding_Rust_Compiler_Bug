{"sha": "0b15db0cc2f8529c518625e726241f6dbefb7efe", "node_id": "MDY6Q29tbWl0NzI0NzEyOjBiMTVkYjBjYzJmODUyOWM1MTg2MjVlNzI2MjQxZjZkYmVmYjdlZmU=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2017-07-18T23:43:37Z"}, "committer": {"name": "Oliver Schneider", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2017-07-25T08:30:12Z"}, "message": "make LockInfo non-Copy", "tree": {"sha": "f3136d92ff704b8586fbbfb1c13c2da88b873a57", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f3136d92ff704b8586fbbfb1c13c2da88b873a57"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0b15db0cc2f8529c518625e726241f6dbefb7efe", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEYFTdM4NKd7XQft77pp+NIls619kFAll3AZQACgkQpp+NIls6\n19ma6xAAsa7DwYjdHsDpmNcrBjt8J4RSCYBrgZT8LSAVdHRkwomnUlFjj6YMv85j\nCk2Do+1QCmRh2XR8h2zNO9Q//1ZFPzl1fNB0O8sYJPPie2VL2RekJ4xKDnDaBqRR\nGkqvYQ44vPnD9V9tY8rZNTGvlBOU+un/+E04I4/NsrAJiu7ysV3V2npxkqtRZ24m\n/N2jmPCjL8GOw1wsBW7ILLkmx2pjg1BwlzZ2/QFLm9495tfobfnpYRuoCr0zYgXs\nbBCZyiHFEEVsfMcdkFLBdbdKENgWSEyQ/abTl+aafbek8PZTP/pM85tgmEIVDTTI\nkhLCEHFKZOKdoq/gwKqgY93ESnvQZqSdFfLSqWyPj8FQZ8PFdVYKT/SLg3lkJ5mJ\ncwRdHpSY3VjgNrKLTmymXQ+64RuxYjI+oPriYaW03J/mWN8SUn/odq+EfTHPjMVR\nksZkZ/4SmYQrmkp+2BTQggfT3KSostQfq0oxHeS9VsioLK3yE57+YmCQEAglK8Xj\nAShbkU6B373OaTey+b0fuWtgJpwBKRhV7vY6Al6/ng2CzvhFIHhB2ec1K/LlYxDU\nR8R1VZ1H4vYPVuZJoYammwzhVouNdYDGUhiXC+mOMdMltVVOFOl3mfsdhgA4DPeo\n9QFMqwMHzG6UJxXapM03NPN9FbroE3wGzPMADm1xELA2teLcWno=\n=Wb3Y\n-----END PGP SIGNATURE-----", "payload": "tree f3136d92ff704b8586fbbfb1c13c2da88b873a57\nparent 59d49c5d6d8f68e39677aada438708158027d6f7\nauthor Ralf Jung <post@ralfj.de> 1500421417 -0700\ncommitter Oliver Schneider <git-spam-no-reply9815368754983@oli-obk.de> 1500971412 +0200\n\nmake LockInfo non-Copy\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0b15db0cc2f8529c518625e726241f6dbefb7efe", "html_url": "https://github.com/rust-lang/rust/commit/0b15db0cc2f8529c518625e726241f6dbefb7efe", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0b15db0cc2f8529c518625e726241f6dbefb7efe/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "59d49c5d6d8f68e39677aada438708158027d6f7", "url": "https://api.github.com/repos/rust-lang/rust/commits/59d49c5d6d8f68e39677aada438708158027d6f7", "html_url": "https://github.com/rust-lang/rust/commit/59d49c5d6d8f68e39677aada438708158027d6f7"}], "stats": {"total": 8, "additions": 4, "deletions": 4}, "files": [{"sha": "ca740ff2d2c30f8cfb0b7886dabf45f33e761faf", "filename": "src/librustc_mir/interpret/error.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/0b15db0cc2f8529c518625e726241f6dbefb7efe/src%2Flibrustc_mir%2Finterpret%2Ferror.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0b15db0cc2f8529c518625e726241f6dbefb7efe/src%2Flibrustc_mir%2Finterpret%2Ferror.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Finterpret%2Ferror.rs?ref=0b15db0cc2f8529c518625e726241f6dbefb7efe", "patch": "@@ -219,15 +219,15 @@ impl<'tcx> fmt::Display for EvalError<'tcx> {\n                        if access { \"memory access\" } else { \"pointer computed\" },\n                        ptr.offset, ptr.alloc_id, allocation_size)\n             },\n-            MemoryLockViolation { ptr, len, access, lock } => {\n+            MemoryLockViolation { ptr, len, access, ref lock } => {\n                 write!(f, \"{:?} access at {:?}, size {}, is in conflict with lock {:?}\",\n                        access, ptr, len, lock)\n             }\n             InvalidMemoryLockRelease { ptr, len } => {\n                 write!(f, \"tried to release memory write lock at {:?}, size {}, but the write lock is held by someone else\",\n                        ptr, len)\n             }\n-            DeallocatedLockedMemory { ptr, lock } => {\n+            DeallocatedLockedMemory { ptr, ref lock } => {\n                 write!(f, \"tried to deallocate memory at {:?} in conflict with lock {:?}\",\n                        ptr, lock)\n             }"}, {"sha": "88e5ebe556f4c35e1b047dd1638864c1ef87108f", "filename": "src/librustc_mir/interpret/memory.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/0b15db0cc2f8529c518625e726241f6dbefb7efe/src%2Flibrustc_mir%2Finterpret%2Fmemory.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0b15db0cc2f8529c518625e726241f6dbefb7efe/src%2Flibrustc_mir%2Finterpret%2Fmemory.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Finterpret%2Fmemory.rs?ref=0b15db0cc2f8529c518625e726241f6dbefb7efe", "patch": "@@ -96,7 +96,7 @@ enum LockStatus {\n }\n \n /// Information about a lock that is or will be held.\n-#[derive(Copy, Clone, Debug)]\n+#[derive(Clone, Debug)]\n pub struct LockInfo {\n     kind: AccessKind,\n     lifetime: DynamicLifetime,\n@@ -168,7 +168,7 @@ impl Allocation {\n         for lock in self.iter_locks(offset, len) {\n             // Check if the lock is active, and is in conflict with the access.\n             if lock.status == LockStatus::Held && !lock.access_permitted(frame, access) {\n-                return Err(*lock);\n+                return Err(lock.clone());\n             }\n         }\n         Ok(())"}]}