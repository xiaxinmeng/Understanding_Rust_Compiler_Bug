{"sha": "97cf91aa30c84b14c72d88f51f9f22a50a8e3b54", "node_id": "MDY6Q29tbWl0NzI0NzEyOjk3Y2Y5MWFhMzBjODRiMTRjNzJkODhmNTFmOWYyMmE1MGE4ZTNiNTQ=", "commit": {"author": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2014-12-10T01:25:09Z"}, "committer": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2014-12-13T01:25:21Z"}, "message": "Fix the opt-out-copy behavior so that values with dtor etc are considered affine", "tree": {"sha": "ac7b84be02e3f1d8124b33bdffbd20cbed10e3f1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ac7b84be02e3f1d8124b33bdffbd20cbed10e3f1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/97cf91aa30c84b14c72d88f51f9f22a50a8e3b54", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/97cf91aa30c84b14c72d88f51f9f22a50a8e3b54", "html_url": "https://github.com/rust-lang/rust/commit/97cf91aa30c84b14c72d88f51f9f22a50a8e3b54", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/97cf91aa30c84b14c72d88f51f9f22a50a8e3b54/comments", "author": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "07eebf69107b50082386fa8c74d31aebcba8e6f1", "url": "https://api.github.com/repos/rust-lang/rust/commits/07eebf69107b50082386fa8c74d31aebcba8e6f1", "html_url": "https://github.com/rust-lang/rust/commit/07eebf69107b50082386fa8c74d31aebcba8e6f1"}], "stats": {"total": 52, "additions": 51, "deletions": 1}, "files": [{"sha": "88c70f5557c14af47c3d9cd3c933958e3c512752", "filename": "src/librustc/middle/traits/select.rs", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/97cf91aa30c84b14c72d88f51f9f22a50a8e3b54/src%2Flibrustc%2Fmiddle%2Ftraits%2Fselect.rs", "raw_url": "https://github.com/rust-lang/rust/raw/97cf91aa30c84b14c72d88f51f9f22a50a8e3b54/src%2Flibrustc%2Fmiddle%2Ftraits%2Fselect.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftraits%2Fselect.rs?ref=97cf91aa30c84b14c72d88f51f9f22a50a8e3b54", "patch": "@@ -1289,6 +1289,15 @@ impl<'cx, 'tcx> SelectionContext<'cx, 'tcx> {\n                     // don't supply any form of builtin impl.\n                     if !this.tcx().sess.features.borrow().opt_out_copy {\n                         return Ok(ParameterBuiltin)\n+                    } else {\n+                        // Older, backwards compatibility behavior:\n+                        if\n+                            Some(def_id) == tcx.lang_items.no_copy_bound() ||\n+                            Some(def_id) == tcx.lang_items.managed_bound() ||\n+                            ty::has_dtor(tcx, def_id)\n+                        {\n+                            return Err(Unimplemented);\n+                        }\n                     }\n                 }\n "}, {"sha": "573c63eb6af05563265e39f13bc354237716b78e", "filename": "src/librustc_typeck/check/mod.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/97cf91aa30c84b14c72d88f51f9f22a50a8e3b54/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/97cf91aa30c84b14c72d88f51f9f22a50a8e3b54/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs?ref=97cf91aa30c84b14c72d88f51f9f22a50a8e3b54", "patch": "@@ -104,7 +104,6 @@ use {CrateCtxt, lookup_def_ccx, no_params, require_same_types};\n use TypeAndSubsts;\n use middle::lang_items::TypeIdLangItem;\n use lint;\n-use util::common::ErrorReported;\n use util::common::{block_query, indenter, loop_query};\n use util::ppaux::{mod, UserString, Repr};\n use util::nodemap::{DefIdMap, FnvHashMap, NodeMap};"}, {"sha": "80f8a154d58e47170027199a74428947128984bc", "filename": "src/test/compile-fail/opt-out-copy-bad.rs", "status": "added", "additions": 42, "deletions": 0, "changes": 42, "blob_url": "https://github.com/rust-lang/rust/blob/97cf91aa30c84b14c72d88f51f9f22a50a8e3b54/src%2Ftest%2Fcompile-fail%2Fopt-out-copy-bad.rs", "raw_url": "https://github.com/rust-lang/rust/raw/97cf91aa30c84b14c72d88f51f9f22a50a8e3b54/src%2Ftest%2Fcompile-fail%2Fopt-out-copy-bad.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fopt-out-copy-bad.rs?ref=97cf91aa30c84b14c72d88f51f9f22a50a8e3b54", "patch": "@@ -0,0 +1,42 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#![feature(opt_out_copy)]\n+\n+// Test that when using the `opt-out-copy` feature we still consider\n+// destructors to be non-movable\n+\n+struct CantCopyThis;\n+\n+impl Drop for CantCopyThis {\n+    fn drop(&mut self) { }\n+}\n+\n+struct IWantToCopyThis {\n+    but_i_cant: CantCopyThis,\n+}\n+\n+impl Copy for IWantToCopyThis {}\n+//~^ ERROR the trait `Copy` may not be implemented for this type\n+\n+enum CantCopyThisEither {\n+    A,\n+    B(::std::kinds::marker::NoCopy),\n+}\n+\n+enum IWantToCopyThisToo {\n+    ButICant(CantCopyThisEither),\n+}\n+\n+impl Copy for IWantToCopyThisToo {}\n+//~^ ERROR the trait `Copy` may not be implemented for this type\n+\n+fn main() {}\n+"}]}