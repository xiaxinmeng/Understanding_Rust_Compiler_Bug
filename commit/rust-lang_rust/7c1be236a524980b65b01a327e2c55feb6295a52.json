{"sha": "7c1be236a524980b65b01a327e2c55feb6295a52", "node_id": "MDY6Q29tbWl0NzI0NzEyOjdjMWJlMjM2YTUyNDk4MGI2NWIwMWEzMjdlMmM1NWZlYjYyOTVhNTI=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-04-02T00:22:24Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-04-02T00:27:18Z"}, "message": "rt: Introduce rust_sched_launcher_factory. Sorry, I need one", "tree": {"sha": "292e3380915c2f36ab174d3059b24257bb6e51e3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/292e3380915c2f36ab174d3059b24257bb6e51e3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7c1be236a524980b65b01a327e2c55feb6295a52", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7c1be236a524980b65b01a327e2c55feb6295a52", "html_url": "https://github.com/rust-lang/rust/commit/7c1be236a524980b65b01a327e2c55feb6295a52", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7c1be236a524980b65b01a327e2c55feb6295a52/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fb528dd7d613964e05dd682a6a98980a1ebdb4d6", "url": "https://api.github.com/repos/rust-lang/rust/commits/fb528dd7d613964e05dd682a6a98980a1ebdb4d6", "html_url": "https://github.com/rust-lang/rust/commit/fb528dd7d613964e05dd682a6a98980a1ebdb4d6"}], "stats": {"total": 41, "additions": 31, "deletions": 10}, "files": [{"sha": "e1b0651cf9dff7ce211086ace712c3af304e15a1", "filename": "src/rt/rust_sched_launcher.cpp", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/7c1be236a524980b65b01a327e2c55feb6295a52/src%2Frt%2Frust_sched_launcher.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/7c1be236a524980b65b01a327e2c55feb6295a52/src%2Frt%2Frust_sched_launcher.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frust_sched_launcher.cpp?ref=7c1be236a524980b65b01a327e2c55feb6295a52", "patch": "@@ -20,3 +20,10 @@ rust_manual_sched_launcher::rust_manual_sched_launcher(rust_scheduler *sched,\n                                                        rust_srv *srv, int id)\n     : rust_sched_launcher(sched, srv, id) {\n }\n+\n+rust_sched_launcher *\n+rust_thread_sched_launcher_factory::create(rust_scheduler *sched, int id) {\n+    rust_srv *srv = sched->srv->clone();\n+    return new(sched->kernel, \"rust_thread_sched_launcher\")\n+        rust_thread_sched_launcher(sched, srv, id);\n+}"}, {"sha": "7b5dc7194241a53ff36ddfda51f268c0754e8525", "filename": "src/rt/rust_sched_launcher.h", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/7c1be236a524980b65b01a327e2c55feb6295a52/src%2Frt%2Frust_sched_launcher.h", "raw_url": "https://github.com/rust-lang/rust/raw/7c1be236a524980b65b01a327e2c55feb6295a52/src%2Frt%2Frust_sched_launcher.h", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frust_sched_launcher.h?ref=7c1be236a524980b65b01a327e2c55feb6295a52", "patch": "@@ -42,4 +42,17 @@ class rust_manual_sched_launcher : public rust_sched_launcher {\n   void start_main_loop() { driver.start_main_loop(); }\n };\n \n+class rust_sched_launcher_factory {\n+public:\n+    virtual ~rust_sched_launcher_factory() { }\n+    virtual rust_sched_launcher *\n+    create(rust_scheduler *sched, int id) = 0;\n+};\n+\n+class rust_thread_sched_launcher_factory\n+    : public rust_sched_launcher_factory {\n+public:\n+    virtual rust_sched_launcher *create(rust_scheduler *sched, int id);\n+};\n+\n #endif // RUST_SCHED_LAUNCHER_H"}, {"sha": "82eac1b1c93b44fd0920d29de758315be896277d", "filename": "src/rt/rust_scheduler.cpp", "status": "modified", "additions": 7, "deletions": 8, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/7c1be236a524980b65b01a327e2c55feb6295a52/src%2Frt%2Frust_scheduler.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/7c1be236a524980b65b01a327e2c55feb6295a52/src%2Frt%2Frust_scheduler.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frust_scheduler.cpp?ref=7c1be236a524980b65b01a327e2c55feb6295a52", "patch": "@@ -17,19 +17,18 @@ rust_scheduler::rust_scheduler(rust_kernel *kernel,\n     num_threads(num_threads),\n     id(id)\n {\n-    create_task_threads();\n+    rust_thread_sched_launcher_factory launchfac;\n+    create_task_threads(&launchfac);\n }\n \n rust_scheduler::~rust_scheduler() {\n     destroy_task_threads();\n }\n \n rust_sched_launcher *\n-rust_scheduler::create_task_thread(int id) {\n-    rust_srv *srv = this->srv->clone();\n-    rust_sched_launcher *thread =\n-        new (kernel, \"rust_thread_sched_launcher\")\n-        rust_thread_sched_launcher(this, srv, id);\n+rust_scheduler::create_task_thread(rust_sched_launcher_factory *launchfac,\n+                                   int id) {\n+    rust_sched_launcher *thread = launchfac->create(this, id);\n     KLOG(kernel, kern, \"created task thread: \" PTR \", id: %d\",\n           thread, id);\n     return thread;\n@@ -44,11 +43,11 @@ rust_scheduler::destroy_task_thread(rust_sched_launcher *thread) {\n }\n \n void\n-rust_scheduler::create_task_threads() {\n+rust_scheduler::create_task_threads(rust_sched_launcher_factory *launchfac) {\n     KLOG(kernel, kern, \"Using %d scheduler threads.\", num_threads);\n \n     for(size_t i = 0; i < num_threads; ++i) {\n-        threads.push(create_task_thread(i));\n+        threads.push(create_task_thread(launchfac, i));\n     }\n }\n "}, {"sha": "132fa9e6089214bf92ddd00d25479eb46034a927", "filename": "src/rt/rust_scheduler.h", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/7c1be236a524980b65b01a327e2c55feb6295a52/src%2Frt%2Frust_scheduler.h", "raw_url": "https://github.com/rust-lang/rust/raw/7c1be236a524980b65b01a327e2c55feb6295a52/src%2Frt%2Frust_scheduler.h", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frust_scheduler.h?ref=7c1be236a524980b65b01a327e2c55feb6295a52", "patch": "@@ -4,6 +4,7 @@\n #include \"rust_internal.h\"\n \n class rust_sched_launcher;\n+class rust_sched_launcher_factory;\n \n class rust_scheduler : public kernel_owned<rust_scheduler> {\n     // FIXME: Make these private\n@@ -26,10 +27,11 @@ class rust_scheduler : public kernel_owned<rust_scheduler> {\n \n     rust_sched_id id;\n \n-    void create_task_threads();\n+    void create_task_threads(rust_sched_launcher_factory *launchfac);\n     void destroy_task_threads();\n \n-    rust_sched_launcher *create_task_thread(int id);\n+    rust_sched_launcher *\n+    create_task_thread(rust_sched_launcher_factory *launchfac, int id);\n     void destroy_task_thread(rust_sched_launcher *thread);\n \n     void exit();"}]}