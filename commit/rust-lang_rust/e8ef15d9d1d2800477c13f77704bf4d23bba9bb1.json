{"sha": "e8ef15d9d1d2800477c13f77704bf4d23bba9bb1", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU4ZWYxNWQ5ZDFkMjgwMDQ3N2MxM2Y3NzcwNGJmNGQyM2JiYTliYjE=", "commit": {"author": {"name": "Jonas Schievink", "email": "jonasschievink@gmail.com", "date": "2021-01-24T21:09:53Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-01-24T21:09:53Z"}, "message": "Rollup merge of #80855 - m-ou-se:assert-2021, r=petrochenkov\n\nExpand assert!(expr, args..) to include $crate for hygiene on 2021.\n\nThis makes `assert!(expr, args..)` properly hygienic in Rust 2021.\n\nThis is part of rust-lang/rfcs#3007, see #80162.\n\nBefore edition 2021, this was a breaking change, as `std::panic` and `core::panic` are different. In edition 2021 they will be identical, making it possible to apply proper hygiene here.", "tree": {"sha": "132f5462ba71eda9c428bfd42b40aac7f4b4afcf", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/132f5462ba71eda9c428bfd42b40aac7f4b4afcf"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e8ef15d9d1d2800477c13f77704bf4d23bba9bb1", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJgDeIhCRBK7hj4Ov3rIwAAdHIIAAHfdCut7Wxd3V8hmrIriQs0\neUeCOOqqmY3hkc68SiuHUaDBaFD3EVYev+58Wt0Mmm4x7/NVKd3NJcWyrZD4Nl+T\nafz2XYZRPcMPN7jLq/i9BxIAegdR8aKnW67+DPysHzOSY5M8Oq9I4j8N6H4AdvGa\nG4J0maTRjWW6lgSxK6myUk5PVt6+x2V2ae/fxsqqcGgQH5WfHr/sUSmTVas6WHyO\n3Tk/XwLHpxvqow/gDV+B+kkashedWEixDtpHNx5HVezGZjD3Vcmb47z0iwf55au1\nL0/+ZOTEdJVgKcrkSigSkDXNSz8MceI7uVBZTa2HcrjgxyM7OZH1FQKApjA3Eg8=\n=GtLY\n-----END PGP SIGNATURE-----\n", "payload": "tree 132f5462ba71eda9c428bfd42b40aac7f4b4afcf\nparent 3ed8a3769aef987d437b09e7285b5d0c46c97a94\nparent a730970dffe84711b8be66c38080acf1b1109982\nauthor Jonas Schievink <jonasschievink@gmail.com> 1611522593 +0100\ncommitter GitHub <noreply@github.com> 1611522593 +0100\n\nRollup merge of #80855 - m-ou-se:assert-2021, r=petrochenkov\n\nExpand assert!(expr, args..) to include $crate for hygiene on 2021.\n\nThis makes `assert!(expr, args..)` properly hygienic in Rust 2021.\n\nThis is part of rust-lang/rfcs#3007, see #80162.\n\nBefore edition 2021, this was a breaking change, as `std::panic` and `core::panic` are different. In edition 2021 they will be identical, making it possible to apply proper hygiene here.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e8ef15d9d1d2800477c13f77704bf4d23bba9bb1", "html_url": "https://github.com/rust-lang/rust/commit/e8ef15d9d1d2800477c13f77704bf4d23bba9bb1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e8ef15d9d1d2800477c13f77704bf4d23bba9bb1/comments", "author": {"login": "jonas-schievink", "id": 1786438, "node_id": "MDQ6VXNlcjE3ODY0Mzg=", "avatar_url": "https://avatars.githubusercontent.com/u/1786438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonas-schievink", "html_url": "https://github.com/jonas-schievink", "followers_url": "https://api.github.com/users/jonas-schievink/followers", "following_url": "https://api.github.com/users/jonas-schievink/following{/other_user}", "gists_url": "https://api.github.com/users/jonas-schievink/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonas-schievink/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonas-schievink/subscriptions", "organizations_url": "https://api.github.com/users/jonas-schievink/orgs", "repos_url": "https://api.github.com/users/jonas-schievink/repos", "events_url": "https://api.github.com/users/jonas-schievink/events{/privacy}", "received_events_url": "https://api.github.com/users/jonas-schievink/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3ed8a3769aef987d437b09e7285b5d0c46c97a94", "url": "https://api.github.com/repos/rust-lang/rust/commits/3ed8a3769aef987d437b09e7285b5d0c46c97a94", "html_url": "https://github.com/rust-lang/rust/commit/3ed8a3769aef987d437b09e7285b5d0c46c97a94"}, {"sha": "a730970dffe84711b8be66c38080acf1b1109982", "url": "https://api.github.com/repos/rust-lang/rust/commits/a730970dffe84711b8be66c38080acf1b1109982", "html_url": "https://github.com/rust-lang/rust/commit/a730970dffe84711b8be66c38080acf1b1109982"}], "stats": {"total": 35, "additions": 30, "deletions": 5}, "files": [{"sha": "f82269c4eee4fba573004d81eed7c67bf82b2ffc", "filename": "compiler/rustc_builtin_macros/src/assert.rs", "status": "modified", "additions": 21, "deletions": 5, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/e8ef15d9d1d2800477c13f77704bf4d23bba9bb1/compiler%2Frustc_builtin_macros%2Fsrc%2Fassert.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e8ef15d9d1d2800477c13f77704bf4d23bba9bb1/compiler%2Frustc_builtin_macros%2Fsrc%2Fassert.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_builtin_macros%2Fsrc%2Fassert.rs?ref=e8ef15d9d1d2800477c13f77704bf4d23bba9bb1", "patch": "@@ -12,27 +12,43 @@ use rustc_span::{Span, DUMMY_SP};\n \n pub fn expand_assert<'cx>(\n     cx: &'cx mut ExtCtxt<'_>,\n-    sp: Span,\n+    span: Span,\n     tts: TokenStream,\n ) -> Box<dyn MacResult + 'cx> {\n-    let Assert { cond_expr, custom_message } = match parse_assert(cx, sp, tts) {\n+    let Assert { cond_expr, custom_message } = match parse_assert(cx, span, tts) {\n         Ok(assert) => assert,\n         Err(mut err) => {\n             err.emit();\n-            return DummyResult::any(sp);\n+            return DummyResult::any(span);\n         }\n     };\n \n     // `core::panic` and `std::panic` are different macros, so we use call-site\n     // context to pick up whichever is currently in scope.\n-    let sp = cx.with_call_site_ctxt(sp);\n+    let sp = cx.with_call_site_ctxt(span);\n \n     let panic_call = if let Some(tokens) = custom_message {\n+        let path = if span.rust_2021() {\n+            // On edition 2021, we always call `$crate::panic!()`.\n+            Path {\n+                span: sp,\n+                segments: cx\n+                    .std_path(&[sym::panic])\n+                    .into_iter()\n+                    .map(|ident| PathSegment::from_ident(ident))\n+                    .collect(),\n+                tokens: None,\n+            }\n+        } else {\n+            // Before edition 2021, we call `panic!()` unqualified,\n+            // such that it calls either `std::panic!()` or `core::panic!()`.\n+            Path::from_ident(Ident::new(sym::panic, sp))\n+        };\n         // Pass the custom message to panic!().\n         cx.expr(\n             sp,\n             ExprKind::MacCall(MacCall {\n-                path: Path::from_ident(Ident::new(sym::panic, sp)),\n+                path,\n                 args: P(MacArgs::Delimited(\n                     DelimSpan::from_single(sp),\n                     MacDelimiter::Parenthesis,"}, {"sha": "0fe9ae56c6564b244f50937c0d67f3d6a46307fc", "filename": "src/test/ui/hygiene/no_implicit_prelude-2021.rs", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/e8ef15d9d1d2800477c13f77704bf4d23bba9bb1/src%2Ftest%2Fui%2Fhygiene%2Fno_implicit_prelude-2021.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e8ef15d9d1d2800477c13f77704bf4d23bba9bb1/src%2Ftest%2Fui%2Fhygiene%2Fno_implicit_prelude-2021.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fhygiene%2Fno_implicit_prelude-2021.rs?ref=e8ef15d9d1d2800477c13f77704bf4d23bba9bb1", "patch": "@@ -0,0 +1,9 @@\n+// check-pass\n+// edition:2021\n+\n+#![no_implicit_prelude]\n+\n+fn main() {\n+    assert!(true, \"hoi\");\n+    assert!(false, \"hoi {}\", 123);\n+}"}]}