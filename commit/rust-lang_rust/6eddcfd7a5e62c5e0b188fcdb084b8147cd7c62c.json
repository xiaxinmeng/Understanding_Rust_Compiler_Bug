{"sha": "6eddcfd7a5e62c5e0b188fcdb084b8147cd7c62c", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZlZGRjZmQ3YTVlNjJjNWUwYjE4OGZjZGIwODRiODE0N2NkN2M2MmM=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2020-08-24T10:50:04Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-08-24T10:50:04Z"}, "message": "Merge #5853\n\n5853: Avoid monomorphization\n r=matklad a=matklad\n\nbors r+\n\ud83e\udd16\n\nCo-authored-by: Aleksey Kladov <aleksey.kladov@gmail.com>", "tree": {"sha": "bf0d57ad3c6ba18bff21cfdc3a2eb97784a764d7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bf0d57ad3c6ba18bff21cfdc3a2eb97784a764d7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6eddcfd7a5e62c5e0b188fcdb084b8147cd7c62c", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJfQ5tcCRBK7hj4Ov3rIwAAdHIIAFlpB/z10S65eqO1chYo291r\n/7HnwzrlXP2a3TTQcs3Aj5aC0E57VJbCXLoTL3pmnrMgHE2JdvS3ZGlA/d6Qe64V\nxPaBy4xHRCc+JflyT09LllOUx9+jlIflRkiLFGGctoIHcEhZ/2SsLtLUc8Iefgp+\n9fa6biFCmQ0oguxV7zG5LmXQtMQjx7KmfEfRqxx455iaZFtOpYDdTOJ4tPpNVU7K\n2FPwjZvAobVUqQqTN+v1GRCjAcen2E510y5/rgOIhqNl5N1FB+xHvr28WT8K0B3w\n2S3rpcvbtU3a+HrGiuT83nnv8sSg2WAA5Hv4hknxwzxrZg2cMaNTEgu9tAc0ln0=\n=Zsoe\n-----END PGP SIGNATURE-----\n", "payload": "tree bf0d57ad3c6ba18bff21cfdc3a2eb97784a764d7\nparent e65d48d1fb3d4d91d9dc1148a7a836ff5c9a3c87\nparent fc3e591bdb28745ef29e90de2c1625e6d4e4a229\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1598266204 +0000\ncommitter GitHub <noreply@github.com> 1598266204 +0000\n\nMerge #5853\n\n5853: Avoid monomorphization\n r=matklad a=matklad\n\nbors r+\n\ud83e\udd16\n\nCo-authored-by: Aleksey Kladov <aleksey.kladov@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6eddcfd7a5e62c5e0b188fcdb084b8147cd7c62c", "html_url": "https://github.com/rust-lang/rust/commit/6eddcfd7a5e62c5e0b188fcdb084b8147cd7c62c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6eddcfd7a5e62c5e0b188fcdb084b8147cd7c62c/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e65d48d1fb3d4d91d9dc1148a7a836ff5c9a3c87", "url": "https://api.github.com/repos/rust-lang/rust/commits/e65d48d1fb3d4d91d9dc1148a7a836ff5c9a3c87", "html_url": "https://github.com/rust-lang/rust/commit/e65d48d1fb3d4d91d9dc1148a7a836ff5c9a3c87"}, {"sha": "fc3e591bdb28745ef29e90de2c1625e6d4e4a229", "url": "https://api.github.com/repos/rust-lang/rust/commits/fc3e591bdb28745ef29e90de2c1625e6d4e4a229", "html_url": "https://github.com/rust-lang/rust/commit/fc3e591bdb28745ef29e90de2c1625e6d4e4a229"}], "stats": {"total": 35, "additions": 35, "deletions": 0}, "files": [{"sha": "ae69cf1a7438183407f8e5adfe0d3f742df0f97e", "filename": "docs/dev/style.md", "status": "modified", "additions": 35, "deletions": 0, "changes": 35, "blob_url": "https://github.com/rust-lang/rust/blob/6eddcfd7a5e62c5e0b188fcdb084b8147cd7c62c/docs%2Fdev%2Fstyle.md", "raw_url": "https://github.com/rust-lang/rust/raw/6eddcfd7a5e62c5e0b188fcdb084b8147cd7c62c/docs%2Fdev%2Fstyle.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/docs%2Fdev%2Fstyle.md?ref=6eddcfd7a5e62c5e0b188fcdb084b8147cd7c62c", "patch": "@@ -231,6 +231,41 @@ if words.len() != 2 {\n }\n ```\n \n+# Avoid Monomorphization\n+\n+Rust uses monomorphization to compile generic code, meaning that for each instantiation of a generic functions with concrete types, the function is compiled afresh, *per crate*.\n+This allows for exceptionally good performance, but leads to increased compile times.\n+Runtime performance obeys 80%/20% rule -- only a small fraction of code is hot.\n+Compile time **does not** obey this rule -- all code has to be compiled.\n+For this reason, avoid making a lot of code type parametric, *especially* on the boundaries between crates.\n+\n+```rust\n+// Good\n+fn frbonicate(f: impl FnMut()) {\n+    frobnicate_impl(&mut f)\n+}\n+fn frobnicate_impl(f: &mut dyn FnMut()) {\n+    // lots of code\n+}\n+\n+// Not as good\n+fn frbonicate(f: impl FnMut()) {\n+    // lots of code\n+}\n+```\n+\n+Avoid `AsRef` polymorphism, it pays back only for widely used libraries:\n+\n+```rust\n+// Good\n+fn frbonicate(f: &Path) {\n+}\n+\n+// Not as good\n+fn frbonicate(f: impl AsRef<Path>) {\n+}\n+```\n+\n # Documentation\n \n For `.md` and `.adoc` files, prefer a sentence-per-line format, don't wrap lines."}]}