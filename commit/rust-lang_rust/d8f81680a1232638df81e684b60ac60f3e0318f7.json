{"sha": "d8f81680a1232638df81e684b60ac60f3e0318f7", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQ4ZjgxNjgwYTEyMzI2MzhkZjgxZTY4NGI2MGFjNjBmM2UwMzE4Zjc=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2020-03-09T20:25:45Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2020-03-11T18:44:23Z"}, "message": "avoid boolean inversion", "tree": {"sha": "d81c92cc35155932412b356bc2b0f4d39ef77673", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d81c92cc35155932412b356bc2b0f4d39ef77673"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d8f81680a1232638df81e684b60ac60f3e0318f7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d8f81680a1232638df81e684b60ac60f3e0318f7", "html_url": "https://github.com/rust-lang/rust/commit/d8f81680a1232638df81e684b60ac60f3e0318f7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d8f81680a1232638df81e684b60ac60f3e0318f7/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3e6144290535e17a2366a1b11cebc2222fa300cb", "url": "https://api.github.com/repos/rust-lang/rust/commits/3e6144290535e17a2366a1b11cebc2222fa300cb", "html_url": "https://github.com/rust-lang/rust/commit/3e6144290535e17a2366a1b11cebc2222fa300cb"}], "stats": {"total": 6, "additions": 3, "deletions": 3}, "files": [{"sha": "5b2cd89a122845f13cd512465cdb60f8806e4968", "filename": "src/librustc_mir/interpret/memory.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/d8f81680a1232638df81e684b60ac60f3e0318f7/src%2Flibrustc_mir%2Finterpret%2Fmemory.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d8f81680a1232638df81e684b60ac60f3e0318f7/src%2Flibrustc_mir%2Finterpret%2Fmemory.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Finterpret%2Fmemory.rs?ref=d8f81680a1232638df81e684b60ac60f3e0318f7", "patch": "@@ -414,9 +414,9 @@ impl<'mir, 'tcx, M: Machine<'mir, 'tcx>> Memory<'mir, 'tcx, M> {\n         let (size, _align) = self\n             .get_size_and_align(ptr.alloc_id, AllocCheck::MaybeDead)\n             .expect(\"alloc info with MaybeDead cannot fail\");\n-        // An inbounds pointer is never null!  And \"inbounds\" includes one-past-the-end.\n-        let inbounds = ptr.offset <= size;\n-        !inbounds\n+        // If the pointer is out-of-bounds, it may be null.\n+        // Note that one-past-the-end (offset == size) is still inbounds, and never null.\n+        ptr.offset > size\n     }\n }\n "}]}