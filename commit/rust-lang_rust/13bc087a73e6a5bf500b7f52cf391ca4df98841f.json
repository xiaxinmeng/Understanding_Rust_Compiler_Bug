{"sha": "13bc087a73e6a5bf500b7f52cf391ca4df98841f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjEzYmMwODdhNzNlNmE1YmY1MDBiN2Y1MmNmMzkxY2E0ZGY5ODg0MWY=", "commit": {"author": {"name": "Camelid", "email": "camelidcamel@gmail.com", "date": "2020-10-19T01:17:49Z"}, "committer": {"name": "Camelid", "email": "camelidcamel@gmail.com", "date": "2020-10-22T17:36:35Z"}, "message": "Clean up lib docs", "tree": {"sha": "597f915ca5b1c5c8f135a1410b9d7931177e236a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/597f915ca5b1c5c8f135a1410b9d7931177e236a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/13bc087a73e6a5bf500b7f52cf391ca4df98841f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/13bc087a73e6a5bf500b7f52cf391ca4df98841f", "html_url": "https://github.com/rust-lang/rust/commit/13bc087a73e6a5bf500b7f52cf391ca4df98841f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/13bc087a73e6a5bf500b7f52cf391ca4df98841f/comments", "author": {"login": "camelid", "id": 37223377, "node_id": "MDQ6VXNlcjM3MjIzMzc3", "avatar_url": "https://avatars.githubusercontent.com/u/37223377?v=4", "gravatar_id": "", "url": "https://api.github.com/users/camelid", "html_url": "https://github.com/camelid", "followers_url": "https://api.github.com/users/camelid/followers", "following_url": "https://api.github.com/users/camelid/following{/other_user}", "gists_url": "https://api.github.com/users/camelid/gists{/gist_id}", "starred_url": "https://api.github.com/users/camelid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/camelid/subscriptions", "organizations_url": "https://api.github.com/users/camelid/orgs", "repos_url": "https://api.github.com/users/camelid/repos", "events_url": "https://api.github.com/users/camelid/events{/privacy}", "received_events_url": "https://api.github.com/users/camelid/received_events", "type": "User", "site_admin": false}, "committer": {"login": "camelid", "id": 37223377, "node_id": "MDQ6VXNlcjM3MjIzMzc3", "avatar_url": "https://avatars.githubusercontent.com/u/37223377?v=4", "gravatar_id": "", "url": "https://api.github.com/users/camelid", "html_url": "https://github.com/camelid", "followers_url": "https://api.github.com/users/camelid/followers", "following_url": "https://api.github.com/users/camelid/following{/other_user}", "gists_url": "https://api.github.com/users/camelid/gists{/gist_id}", "starred_url": "https://api.github.com/users/camelid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/camelid/subscriptions", "organizations_url": "https://api.github.com/users/camelid/orgs", "repos_url": "https://api.github.com/users/camelid/repos", "events_url": "https://api.github.com/users/camelid/events{/privacy}", "received_events_url": "https://api.github.com/users/camelid/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a85e94927622665a9e9022de0d33a890a2e32d43", "url": "https://api.github.com/repos/rust-lang/rust/commits/a85e94927622665a9e9022de0d33a890a2e32d43", "html_url": "https://github.com/rust-lang/rust/commit/a85e94927622665a9e9022de0d33a890a2e32d43"}], "stats": {"total": 19, "additions": 10, "deletions": 9}, "files": [{"sha": "72ed036637d8b074d512b7ab728671c3489e6ba0", "filename": "library/alloc/src/string.rs", "status": "modified", "additions": 10, "deletions": 9, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/13bc087a73e6a5bf500b7f52cf391ca4df98841f/library%2Falloc%2Fsrc%2Fstring.rs", "raw_url": "https://github.com/rust-lang/rust/raw/13bc087a73e6a5bf500b7f52cf391ca4df98841f/library%2Falloc%2Fsrc%2Fstring.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Falloc%2Fsrc%2Fstring.rs?ref=13bc087a73e6a5bf500b7f52cf391ca4df98841f", "patch": "@@ -1,8 +1,8 @@\n-//! A UTF-8 encoded, growable string.\n+//! A UTF-8\u2013encoded, growable string.\n //!\n-//! This module contains the [`String`] type, a trait for converting\n-//! [`ToString`]s, and several error types that may result from working with\n-//! [`String`]s.\n+//! This module contains the [`String`] type, the [`ToString`] trait for\n+//! converting to strings, and several error types that may result from\n+//! working with [`String`]s.\n //!\n //! # Examples\n //!\n@@ -57,7 +57,7 @@ use crate::collections::TryReserveError;\n use crate::str::{self, from_boxed_utf8_unchecked, Chars, FromStr, Utf8Error};\n use crate::vec::Vec;\n \n-/// A UTF-8 encoded, growable string.\n+/// A UTF-8\u2013encoded, growable string.\n ///\n /// The `String` type is the most common string type that has ownership over the\n /// contents of the string. It has a close relationship with its borrowed\n@@ -565,7 +565,7 @@ impl String {\n         Cow::Owned(res)\n     }\n \n-    /// Decode a UTF-16 encoded vector `v` into a `String`, returning [`Err`]\n+    /// Decode a UTF-16\u2013encoded vector `v` into a `String`, returning [`Err`]\n     /// if `v` contains any invalid data.\n     ///\n     /// # Examples\n@@ -599,7 +599,7 @@ impl String {\n         Ok(ret)\n     }\n \n-    /// Decode a UTF-16 encoded slice `v` into a `String`, replacing\n+    /// Decode a UTF-16\u2013encoded slice `v` into a `String`, replacing\n     /// invalid data with [the replacement character (`U+FFFD`)][U+FFFD].\n     ///\n     /// Unlike [`from_utf8_lossy`] which returns a [`Cow<'a, str>`],\n@@ -2191,8 +2191,9 @@ pub trait ToString {\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n impl<T: fmt::Display + ?Sized> ToString for T {\n     // A common guideline is to not inline generic functions. However,\n-    // remove `#[inline]` from this method causes non-negligible regression.\n-    // See <https://github.com/rust-lang/rust/pull/74852> as last attempt try to remove it.\n+    // removing `#[inline]` from this method causes non-negligible regressions.\n+    // See <https://github.com/rust-lang/rust/pull/74852>, the last attempt\n+    // to try to remove it.\n     #[inline]\n     default fn to_string(&self) -> String {\n         use fmt::Write;"}]}