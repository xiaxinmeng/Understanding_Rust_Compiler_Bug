{"sha": "8cc4210278c93b9ccf0f825408d0d32bf68617bd", "node_id": "MDY6Q29tbWl0NzI0NzEyOjhjYzQyMTAyNzhjOTNiOWNjZjBmODI1NDA4ZDBkMzJiZjY4NjE3YmQ=", "commit": {"author": {"name": "Florian Diebold", "email": "flodiebold@gmail.com", "date": "2020-03-07T14:47:10Z"}, "committer": {"name": "Florian Diebold", "email": "flodiebold@gmail.com", "date": "2020-03-07T14:48:06Z"}, "message": "Add more tests", "tree": {"sha": "a1e2b69a751c441414837c9421c4455153ba4a42", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a1e2b69a751c441414837c9421c4455153ba4a42"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8cc4210278c93b9ccf0f825408d0d32bf68617bd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8cc4210278c93b9ccf0f825408d0d32bf68617bd", "html_url": "https://github.com/rust-lang/rust/commit/8cc4210278c93b9ccf0f825408d0d32bf68617bd", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8cc4210278c93b9ccf0f825408d0d32bf68617bd/comments", "author": {"login": "flodiebold", "id": 906069, "node_id": "MDQ6VXNlcjkwNjA2OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/906069?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flodiebold", "html_url": "https://github.com/flodiebold", "followers_url": "https://api.github.com/users/flodiebold/followers", "following_url": "https://api.github.com/users/flodiebold/following{/other_user}", "gists_url": "https://api.github.com/users/flodiebold/gists{/gist_id}", "starred_url": "https://api.github.com/users/flodiebold/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flodiebold/subscriptions", "organizations_url": "https://api.github.com/users/flodiebold/orgs", "repos_url": "https://api.github.com/users/flodiebold/repos", "events_url": "https://api.github.com/users/flodiebold/events{/privacy}", "received_events_url": "https://api.github.com/users/flodiebold/received_events", "type": "User", "site_admin": false}, "committer": {"login": "flodiebold", "id": 906069, "node_id": "MDQ6VXNlcjkwNjA2OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/906069?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flodiebold", "html_url": "https://github.com/flodiebold", "followers_url": "https://api.github.com/users/flodiebold/followers", "following_url": "https://api.github.com/users/flodiebold/following{/other_user}", "gists_url": "https://api.github.com/users/flodiebold/gists{/gist_id}", "starred_url": "https://api.github.com/users/flodiebold/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flodiebold/subscriptions", "organizations_url": "https://api.github.com/users/flodiebold/orgs", "repos_url": "https://api.github.com/users/flodiebold/repos", "events_url": "https://api.github.com/users/flodiebold/events{/privacy}", "received_events_url": "https://api.github.com/users/flodiebold/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "24e98121d81b75bafcd9c6005548776c00de8401", "url": "https://api.github.com/repos/rust-lang/rust/commits/24e98121d81b75bafcd9c6005548776c00de8401", "html_url": "https://github.com/rust-lang/rust/commit/24e98121d81b75bafcd9c6005548776c00de8401"}], "stats": {"total": 55, "additions": 54, "deletions": 1}, "files": [{"sha": "8c2a2898346526b90a9aed77d72007db2dd196d2", "filename": "crates/ra_ide/src/completion/complete_path.rs", "status": "modified", "additions": 33, "deletions": 0, "changes": 33, "blob_url": "https://github.com/rust-lang/rust/blob/8cc4210278c93b9ccf0f825408d0d32bf68617bd/crates%2Fra_ide%2Fsrc%2Fcompletion%2Fcomplete_path.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8cc4210278c93b9ccf0f825408d0d32bf68617bd/crates%2Fra_ide%2Fsrc%2Fcompletion%2Fcomplete_path.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fcompletion%2Fcomplete_path.rs?ref=8cc4210278c93b9ccf0f825408d0d32bf68617bd", "patch": "@@ -835,4 +835,37 @@ mod tests {\n         \"###\n         );\n     }\n+\n+    #[test]\n+    fn completes_in_simple_macro_call() {\n+        let completions = do_reference_completion(\n+            r#\"\n+                macro_rules! m { ($e:expr) => { $e } }\n+                fn main() { m!(self::f<|>); }\n+                fn foo() {}\n+            \"#,\n+        );\n+        assert_debug_snapshot!(completions, @r###\"\n+        [\n+            CompletionItem {\n+                label: \"foo()\",\n+                source_range: [93; 94),\n+                delete: [93; 94),\n+                insert: \"foo()$0\",\n+                kind: Function,\n+                lookup: \"foo\",\n+                detail: \"fn foo()\",\n+            },\n+            CompletionItem {\n+                label: \"main()\",\n+                source_range: [93; 94),\n+                delete: [93; 94),\n+                insert: \"main()$0\",\n+                kind: Function,\n+                lookup: \"main\",\n+                detail: \"fn main()\",\n+            },\n+        ]\n+        \"###);\n+    }\n }"}, {"sha": "fa8aecedad8c1194fac3fb3757dc7b189db41c4b", "filename": "crates/ra_ide/src/completion/complete_pattern.rs", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/8cc4210278c93b9ccf0f825408d0d32bf68617bd/crates%2Fra_ide%2Fsrc%2Fcompletion%2Fcomplete_pattern.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8cc4210278c93b9ccf0f825408d0d32bf68617bd/crates%2Fra_ide%2Fsrc%2Fcompletion%2Fcomplete_pattern.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fcompletion%2Fcomplete_pattern.rs?ref=8cc4210278c93b9ccf0f825408d0d32bf68617bd", "patch": "@@ -86,4 +86,22 @@ mod tests {\n         ]\n         \"###);\n     }\n+\n+    #[test]\n+    fn completes_in_simple_macro_call() {\n+        // FIXME: doesn't work yet because of missing error recovery in macro expansion\n+        let completions = complete(\n+            r\"\n+            macro_rules! m { ($e:expr) => { $e } }\n+            enum E { X }\n+\n+            fn foo() {\n+               m!(match E::X {\n+                   <|>\n+               })\n+            }\n+            \",\n+        );\n+        assert_debug_snapshot!(completions, @r###\"[]\"###);\n+    }\n }"}, {"sha": "49c53183a1cc35f506513676a0eebad53bbf18b0", "filename": "crates/ra_mbe/src/mbe_expander/matcher.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/8cc4210278c93b9ccf0f825408d0d32bf68617bd/crates%2Fra_mbe%2Fsrc%2Fmbe_expander%2Fmatcher.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8cc4210278c93b9ccf0f825408d0d32bf68617bd/crates%2Fra_mbe%2Fsrc%2Fmbe_expander%2Fmatcher.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_mbe%2Fsrc%2Fmbe_expander%2Fmatcher.rs?ref=8cc4210278c93b9ccf0f825408d0d32bf68617bd", "patch": "@@ -247,6 +247,7 @@ impl<'a> TtIter<'a> {\n         ra_parser::parse_fragment(&mut src, &mut sink, fragment_kind);\n \n         if !sink.cursor.is_root() || sink.error {\n+            // FIXME better recovery in this case would help completion inside macros immensely\n             return Err(());\n         }\n \n@@ -375,7 +376,8 @@ fn match_meta_var(kind: &str, input: &mut TtIter) -> Result<Option<Fragment>, Ex\n             return Ok(Some(Fragment::Tokens(tt)));\n         }\n     };\n-    let tt = input.expect_fragment(fragment).map_err(|()| err!())?;\n+    let tt =\n+        input.expect_fragment(fragment).map_err(|()| err!(\"fragment did not parse as {}\", kind))?;\n     let fragment = if kind == \"expr\" { Fragment::Ast(tt) } else { Fragment::Tokens(tt) };\n     Ok(Some(fragment))\n }"}]}