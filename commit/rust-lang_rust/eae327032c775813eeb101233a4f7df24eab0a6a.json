{"sha": "eae327032c775813eeb101233a4f7df24eab0a6a", "node_id": "MDY6Q29tbWl0NzI0NzEyOmVhZTMyNzAzMmM3NzU4MTNlZWIxMDEyMzNhNGY3ZGYyNGVhYjBhNmE=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2013-09-09T05:16:07Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2013-09-09T05:16:07Z"}, "message": "auto merge of #9066 : thestinger/rust/repr, r=alexcrichton", "tree": {"sha": "8787d5d57cdb6c13b4b3094ecf1b399705dc62e3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8787d5d57cdb6c13b4b3094ecf1b399705dc62e3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/eae327032c775813eeb101233a4f7df24eab0a6a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/eae327032c775813eeb101233a4f7df24eab0a6a", "html_url": "https://github.com/rust-lang/rust/commit/eae327032c775813eeb101233a4f7df24eab0a6a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/eae327032c775813eeb101233a4f7df24eab0a6a/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "dd5c7379e9b8f3fe6df95f3ff43ca955b6bba485", "url": "https://api.github.com/repos/rust-lang/rust/commits/dd5c7379e9b8f3fe6df95f3ff43ca955b6bba485", "html_url": "https://github.com/rust-lang/rust/commit/dd5c7379e9b8f3fe6df95f3ff43ca955b6bba485"}, {"sha": "db4720bdfaf5d20dad192760a045f239dc9f6141", "url": "https://api.github.com/repos/rust-lang/rust/commits/db4720bdfaf5d20dad192760a045f239dc9f6141", "html_url": "https://github.com/rust-lang/rust/commit/db4720bdfaf5d20dad192760a045f239dc9f6141"}], "stats": {"total": 7, "additions": 5, "deletions": 2}, "files": [{"sha": "d3a648f8d53b6b3e5a563b2d067e8bec401278ed", "filename": "src/libstd/repr.rs", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/eae327032c775813eeb101233a4f7df24eab0a6a/src%2Flibstd%2Frepr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/eae327032c775813eeb101233a4f7df24eab0a6a/src%2Flibstd%2Frepr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Frepr.rs?ref=eae327032c775813eeb101233a4f7df24eab0a6a", "patch": "@@ -189,8 +189,7 @@ impl<'self> ReprVisitor<'self> {\n         } else if mtbl == 1 {\n             // skip, this is ast::m_imm\n         } else {\n-            assert_eq!(mtbl, 2);\n-            self.writer.write(\"const \".as_bytes());\n+            fail!(\"invalid mutability value\");\n         }\n     }\n \n@@ -389,6 +388,7 @@ impl<'self> TyVisitor for ReprVisitor<'self> {\n     fn visit_evec_slice(&mut self, mtbl: uint, inner: *TyDesc) -> bool {\n         do self.get::<raw::Slice<()>> |this, s| {\n             this.writer.write(['&' as u8]);\n+            this.write_mut_qualifier(mtbl);\n             this.write_vec_range(mtbl, s.data, s.len, inner);\n         }\n     }\n@@ -696,6 +696,9 @@ fn test_repr() {\n     exact_test(&(10u64, ~\"hello\"),\n                \"(10u64, ~\\\"hello\\\")\");\n \n+    exact_test(&(&[1, 2]), \"&[1, 2]\");\n+    exact_test(&(&mut [1, 2]), \"&mut [1, 2]\");\n+\n     exact_test(&'\\'', \"'\\\\''\");\n     exact_test(&'\"', \"'\\\"'\");\n     exact_test(&(\"'\"), \"\\\"'\\\"\");"}]}