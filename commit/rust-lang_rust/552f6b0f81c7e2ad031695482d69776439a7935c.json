{"sha": "552f6b0f81c7e2ad031695482d69776439a7935c", "node_id": "C_kwDOAAsO6NoAKDU1MmY2YjBmODFjN2UyYWQwMzE2OTU0ODJkNjk3NzY0MzlhNzkzNWM", "commit": {"author": {"name": "Santiago Pastorino", "email": "spastorino@gmail.com", "date": "2022-08-02T18:27:52Z"}, "committer": {"name": "Santiago Pastorino", "email": "spastorino@gmail.com", "date": "2022-08-04T14:26:56Z"}, "message": "No need to check binders to ignore on new_named_lifetime_with_res's LifetimeRes::Fresh", "tree": {"sha": "8536f32ca7f9808a0ce5cef8bbfa9380a60aa253", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8536f32ca7f9808a0ce5cef8bbfa9380a60aa253"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/552f6b0f81c7e2ad031695482d69776439a7935c", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEF0ntrgrd9qf9uuThgTGiTgx5768FAmLr1zAACgkQgTGiTgx5\n76+IVRAAqmBQywtyTnUm1QLM6nYVvXBFG2gKQw/m7v/UC7YO8Xc0s2TjoC8zorPn\n27ZlJTu8v4wuAMksFhH6IpEQxvHVPWdkh+Q1HJJ6U8bF0YFEqgs46V+wQrT60QjW\ncnAibpE+G9Ga6ILeuAqWlHzOVvKZPkygLVzDWo47CdQHMkMWz+Q0NZe5e4mc6OmF\n/vxwJmRszJZhKflnBKoQFuww3eDEUmmxNh+S19ZcGf4N88JOm+m+7Sv+2UDnf4hb\nenBu1EmWK/qOaNwFo4C95DvIDcTjaCqQLEjCoHruO4USgp2nFriJURa0OZRFe9Xk\nkrTakIEpq2eqogk65rEdzUg3RBcpq47LJ4Z41TBEo5BBhF8OGxW7MUiR7/n6hWIC\nHfT6wK//7Sk4sSE6pgryEpOLjeCTWvhmjl/BfznBO8E15/QtamYkPFJgO4lkLEtt\nD8FdYOSh/AlXBsquKL9U0HN/CvikfHT4uIrHREoD6Yewxo7RoZYsr3ZGYZ3Jl76O\nRz1JvFq1kCrj56VumRsq+swwtjr1COBYzxTbL7b/zo9W4+p9vaiDhNH77wHNxhFm\nVO5U3mIhjOkh7uiUcQsSWC5PCyqQX8gjz9NUjLuqcSUPdprWsruKGNl6OktSl1CR\nKGbO4Oysi3/QrmnkMlbZpCFYZ1I9gKrQcE3o2H3k3+DxPffnOVc=\n=fsPI\n-----END PGP SIGNATURE-----", "payload": "tree 8536f32ca7f9808a0ce5cef8bbfa9380a60aa253\nparent 6041ed077556bf26bb429ba8bdff8708aff70d14\nauthor Santiago Pastorino <spastorino@gmail.com> 1659464872 -0300\ncommitter Santiago Pastorino <spastorino@gmail.com> 1659623216 -0300\n\nNo need to check binders to ignore on new_named_lifetime_with_res's LifetimeRes::Fresh\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/552f6b0f81c7e2ad031695482d69776439a7935c", "html_url": "https://github.com/rust-lang/rust/commit/552f6b0f81c7e2ad031695482d69776439a7935c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/552f6b0f81c7e2ad031695482d69776439a7935c/comments", "author": {"login": "spastorino", "id": 52642, "node_id": "MDQ6VXNlcjUyNjQy", "avatar_url": "https://avatars.githubusercontent.com/u/52642?v=4", "gravatar_id": "", "url": "https://api.github.com/users/spastorino", "html_url": "https://github.com/spastorino", "followers_url": "https://api.github.com/users/spastorino/followers", "following_url": "https://api.github.com/users/spastorino/following{/other_user}", "gists_url": "https://api.github.com/users/spastorino/gists{/gist_id}", "starred_url": "https://api.github.com/users/spastorino/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/spastorino/subscriptions", "organizations_url": "https://api.github.com/users/spastorino/orgs", "repos_url": "https://api.github.com/users/spastorino/repos", "events_url": "https://api.github.com/users/spastorino/events{/privacy}", "received_events_url": "https://api.github.com/users/spastorino/received_events", "type": "User", "site_admin": false}, "committer": {"login": "spastorino", "id": 52642, "node_id": "MDQ6VXNlcjUyNjQy", "avatar_url": "https://avatars.githubusercontent.com/u/52642?v=4", "gravatar_id": "", "url": "https://api.github.com/users/spastorino", "html_url": "https://github.com/spastorino", "followers_url": "https://api.github.com/users/spastorino/followers", "following_url": "https://api.github.com/users/spastorino/following{/other_user}", "gists_url": "https://api.github.com/users/spastorino/gists{/gist_id}", "starred_url": "https://api.github.com/users/spastorino/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/spastorino/subscriptions", "organizations_url": "https://api.github.com/users/spastorino/orgs", "repos_url": "https://api.github.com/users/spastorino/repos", "events_url": "https://api.github.com/users/spastorino/events{/privacy}", "received_events_url": "https://api.github.com/users/spastorino/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6041ed077556bf26bb429ba8bdff8708aff70d14", "url": "https://api.github.com/repos/rust-lang/rust/commits/6041ed077556bf26bb429ba8bdff8708aff70d14", "html_url": "https://github.com/rust-lang/rust/commit/6041ed077556bf26bb429ba8bdff8708aff70d14"}], "stats": {"total": 11, "additions": 3, "deletions": 8}, "files": [{"sha": "435930188142846f1ea279077ddfc4bdaff1711d", "filename": "compiler/rustc_ast_lowering/src/lib.rs", "status": "modified", "additions": 3, "deletions": 8, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/552f6b0f81c7e2ad031695482d69776439a7935c/compiler%2Frustc_ast_lowering%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/552f6b0f81c7e2ad031695482d69776439a7935c/compiler%2Frustc_ast_lowering%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_ast_lowering%2Fsrc%2Flib.rs?ref=552f6b0f81c7e2ad031695482d69776439a7935c", "patch": "@@ -1919,18 +1919,13 @@ impl<'a, 'hir> LoweringContext<'a, 'hir> {\n \n                 hir::LifetimeName::Param(param, p_name)\n             }\n-            LifetimeRes::Fresh { param, binder } => {\n+            LifetimeRes::Fresh { param, .. } => {\n                 debug_assert_eq!(ident.name, kw::UnderscoreLifetime);\n \n                 let mut param = self.local_def_id(param);\n                 if let Some(mut captured_lifetimes) = self.captured_lifetimes.take() {\n-                    if !captured_lifetimes.binders_to_ignore.contains(&binder) {\n-                        match captured_lifetimes.captures.entry(param) {\n-                            Entry::Occupied(o) => param = self.local_def_id(o.get().1),\n-                            Entry::Vacant(_) => {\n-                                panic!(\"Lifetime {:?} should have a def_id at this point\", id);\n-                            }\n-                        }\n+                    if let Entry::Occupied(o) = captured_lifetimes.captures.entry(param) {\n+                        param = self.local_def_id(o.get().1);\n                     }\n \n                     self.captured_lifetimes = Some(captured_lifetimes);"}]}