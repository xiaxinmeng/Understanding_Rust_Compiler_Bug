{"sha": "bcacfe1dbf80af7ea2e70b418e2f19c03ee09121", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJjYWNmZTFkYmY4MGFmN2VhMmU3MGI0MThlMmYxOWMwM2VlMDkxMjE=", "commit": {"author": {"name": "Tim Vermeulen", "email": "tvermeulen@me.com", "date": "2020-10-02T03:26:42Z"}, "committer": {"name": "Tim Vermeulen", "email": "tvermeulen@me.com", "date": "2020-10-05T20:55:48Z"}, "message": "Add tests", "tree": {"sha": "b6ac1b91d6bc4ee2b9eb8ff9dd415bfac9017ea6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b6ac1b91d6bc4ee2b9eb8ff9dd415bfac9017ea6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/bcacfe1dbf80af7ea2e70b418e2f19c03ee09121", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/bcacfe1dbf80af7ea2e70b418e2f19c03ee09121", "html_url": "https://github.com/rust-lang/rust/commit/bcacfe1dbf80af7ea2e70b418e2f19c03ee09121", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/bcacfe1dbf80af7ea2e70b418e2f19c03ee09121/comments", "author": {"login": "timvermeulen", "id": 2904179, "node_id": "MDQ6VXNlcjI5MDQxNzk=", "avatar_url": "https://avatars.githubusercontent.com/u/2904179?v=4", "gravatar_id": "", "url": "https://api.github.com/users/timvermeulen", "html_url": "https://github.com/timvermeulen", "followers_url": "https://api.github.com/users/timvermeulen/followers", "following_url": "https://api.github.com/users/timvermeulen/following{/other_user}", "gists_url": "https://api.github.com/users/timvermeulen/gists{/gist_id}", "starred_url": "https://api.github.com/users/timvermeulen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/timvermeulen/subscriptions", "organizations_url": "https://api.github.com/users/timvermeulen/orgs", "repos_url": "https://api.github.com/users/timvermeulen/repos", "events_url": "https://api.github.com/users/timvermeulen/events{/privacy}", "received_events_url": "https://api.github.com/users/timvermeulen/received_events", "type": "User", "site_admin": false}, "committer": {"login": "timvermeulen", "id": 2904179, "node_id": "MDQ6VXNlcjI5MDQxNzk=", "avatar_url": "https://avatars.githubusercontent.com/u/2904179?v=4", "gravatar_id": "", "url": "https://api.github.com/users/timvermeulen", "html_url": "https://github.com/timvermeulen", "followers_url": "https://api.github.com/users/timvermeulen/followers", "following_url": "https://api.github.com/users/timvermeulen/following{/other_user}", "gists_url": "https://api.github.com/users/timvermeulen/gists{/gist_id}", "starred_url": "https://api.github.com/users/timvermeulen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/timvermeulen/subscriptions", "organizations_url": "https://api.github.com/users/timvermeulen/orgs", "repos_url": "https://api.github.com/users/timvermeulen/repos", "events_url": "https://api.github.com/users/timvermeulen/events{/privacy}", "received_events_url": "https://api.github.com/users/timvermeulen/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c5d6a0dd96ad9825751ac6189fa632f521a16db2", "url": "https://api.github.com/repos/rust-lang/rust/commits/c5d6a0dd96ad9825751ac6189fa632f521a16db2", "html_url": "https://github.com/rust-lang/rust/commit/c5d6a0dd96ad9825751ac6189fa632f521a16db2"}], "stats": {"total": 66, "additions": 66, "deletions": 0}, "files": [{"sha": "23f583e14e80f48b88dc04b9ff9696a22e11d7de", "filename": "library/core/tests/iter.rs", "status": "modified", "additions": 66, "deletions": 0, "changes": 66, "blob_url": "https://github.com/rust-lang/rust/blob/bcacfe1dbf80af7ea2e70b418e2f19c03ee09121/library%2Fcore%2Ftests%2Fiter.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bcacfe1dbf80af7ea2e70b418e2f19c03ee09121/library%2Fcore%2Ftests%2Fiter.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Ftests%2Fiter.rs?ref=bcacfe1dbf80af7ea2e70b418e2f19c03ee09121", "patch": "@@ -142,6 +142,72 @@ fn test_iterator_chain() {\n     assert_eq!(i, expected.len());\n }\n \n+#[test]\n+fn test_iterator_chain_advance_by() {\n+    fn test_chain(xs: &[i32], ys: &[i32]) {\n+        let len = xs.len() + ys.len();\n+\n+        for i in 0..xs.len() {\n+            let mut iter = xs.iter().chain(ys);\n+            iter.advance_by(i).unwrap();\n+            assert_eq!(iter.next(), Some(&xs[i]));\n+            assert_eq!(iter.advance_by(100), Err(len - i - 1));\n+        }\n+\n+        for i in 0..ys.len() {\n+            let mut iter = xs.iter().chain(ys);\n+            iter.advance_by(xs.len() + i).unwrap();\n+            assert_eq!(iter.next(), Some(&ys[i]));\n+            assert_eq!(iter.advance_by(100), Err(ys.len() - i - 1));\n+        }\n+\n+        let mut iter = xs.iter().chain(ys);\n+        iter.advance_by(len).unwrap();\n+        assert_eq!(iter.next(), None);\n+\n+        let mut iter = xs.iter().chain(ys);\n+        assert_eq!(iter.advance_by(len + 1), Err(len));\n+    }\n+\n+    test_chain(&[], &[]);\n+    test_chain(&[], &[0, 1, 2, 3, 4, 5]);\n+    test_chain(&[0, 1, 2, 3, 4, 5], &[]);\n+    test_chain(&[0, 1, 2, 3, 4, 5], &[30, 40, 50, 60]);\n+}\n+\n+#[test]\n+fn test_iterator_chain_advance_back_by() {\n+    fn test_chain(xs: &[i32], ys: &[i32]) {\n+        let len = xs.len() + ys.len();\n+\n+        for i in 0..ys.len() {\n+            let mut iter = xs.iter().chain(ys);\n+            iter.advance_back_by(i).unwrap();\n+            assert_eq!(iter.next_back(), Some(&ys[ys.len() - i - 1]));\n+            assert_eq!(iter.advance_back_by(100), Err(len - i - 1));\n+        }\n+\n+        for i in 0..xs.len() {\n+            let mut iter = xs.iter().chain(ys);\n+            iter.advance_back_by(ys.len() + i).unwrap();\n+            assert_eq!(iter.next_back(), Some(&xs[xs.len() - i - 1]));\n+            assert_eq!(iter.advance_back_by(100), Err(xs.len() - i - 1));\n+        }\n+\n+        let mut iter = xs.iter().chain(ys);\n+        iter.advance_back_by(len).unwrap();\n+        assert_eq!(iter.next_back(), None);\n+\n+        let mut iter = xs.iter().chain(ys);\n+        assert_eq!(iter.advance_back_by(len + 1), Err(len));\n+    }\n+\n+    test_chain(&[], &[]);\n+    test_chain(&[], &[0, 1, 2, 3, 4, 5]);\n+    test_chain(&[0, 1, 2, 3, 4, 5], &[]);\n+    test_chain(&[0, 1, 2, 3, 4, 5], &[30, 40, 50, 60]);\n+}\n+\n #[test]\n fn test_iterator_chain_nth() {\n     let xs = [0, 1, 2, 3, 4, 5];"}]}