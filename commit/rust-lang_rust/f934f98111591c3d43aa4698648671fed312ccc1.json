{"sha": "f934f98111591c3d43aa4698648671fed312ccc1", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY5MzRmOTgxMTE1OTFjM2Q0M2FhNDY5ODY0ODY3MWZlZDMxMmNjYzE=", "commit": {"author": {"name": "Philipp Hansch", "email": "dev@phansch.net", "date": "2019-02-08T07:05:52Z"}, "committer": {"name": "Philipp Hansch", "email": "dev@phansch.net", "date": "2019-02-08T07:09:37Z"}, "message": "Add a uitest subcommand to simplify UI test invocation\n\nThis allows to run\n\n`TESTNAME=xxx cargo uitest`\n\ninstead of\n\n`TESTNAME=xxx cargo test --test-compile-test`", "tree": {"sha": "4e70abb3ff343f7dd5a86c6432eaac90c7b58886", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4e70abb3ff343f7dd5a86c6432eaac90c7b58886"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f934f98111591c3d43aa4698648671fed312ccc1", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEvUKv4zqIn2RHUgCKtvoGpuDiZlsFAlxdKzEACgkQtvoGpuDi\nZlsu1Q/+PDDfkf4nW4UQQ/v35hK9dS0S0wRFCSqKjyiVhO7PuSfv9lfQ39bf4v21\nq6uKpiKKgYQp2gR4VH/4TWLyJMbLc7zD1KLKh04l+x7coaGaVm15SkSfOS6az/8d\n+dJQ00TmDEWUX11lytA+XxXAt3BVsZwU5DRD5fuJ+qRGuhiA0Jput9gDBsy/ZeDZ\nlmJ4tdcr4R72zNVXg2Vw5Hi4xms5Cepw8s4dbuBSQnkjbicbF9rTw4p4OhcCSG/y\nTBfdEmsYXTO3W91Tkxe2y7aAqE5ou3V3lfparRzAhhenKk/gP+z5wZwF+F/DeGlI\np7wOnuMRfyGhg8xowtsLgyO2NEm+qZ4W143AOLej1tCyat3deQf/yLw7RHG8hI66\nYRLAsYn0yhINZ89ITcfQv0oJIMM/wGsmuOeT6hVATMh441VDdEg1xz7rPU5EuLEE\nJm/t02Bp5yytWldYhmoFif4oV3C+cnL+JSGlvXV1g41mNzJEW7Lcs6kT1u9xKEbl\nxg2lcey3wnPR8kwcIHIHNlbWeRKdAVrz4zIimtWJ9n/B+Sl/EUraJpciHjK7sFW2\nmxdXNOq/vy9XzgFwOUGtH1CVBIZwmwgQ8HzoxVdG3rAzZtFuR7w/c8UdTUYn3a2R\nRea25E0tTy5+zJLpL6Qwe0XXsFciTaecpu0feQDHPfxLmF6v67I=\n=aV6d\n-----END PGP SIGNATURE-----", "payload": "tree 4e70abb3ff343f7dd5a86c6432eaac90c7b58886\nparent e176324fc593644a3ce00aa2ec7c1887d571003e\nauthor Philipp Hansch <dev@phansch.net> 1549609552 +0100\ncommitter Philipp Hansch <dev@phansch.net> 1549609777 +0100\n\nAdd a uitest subcommand to simplify UI test invocation\n\nThis allows to run\n\n`TESTNAME=xxx cargo uitest`\n\ninstead of\n\n`TESTNAME=xxx cargo test --test-compile-test`\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f934f98111591c3d43aa4698648671fed312ccc1", "html_url": "https://github.com/rust-lang/rust/commit/f934f98111591c3d43aa4698648671fed312ccc1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f934f98111591c3d43aa4698648671fed312ccc1/comments", "author": {"login": "phansch", "id": 2042399, "node_id": "MDQ6VXNlcjIwNDIzOTk=", "avatar_url": "https://avatars.githubusercontent.com/u/2042399?v=4", "gravatar_id": "", "url": "https://api.github.com/users/phansch", "html_url": "https://github.com/phansch", "followers_url": "https://api.github.com/users/phansch/followers", "following_url": "https://api.github.com/users/phansch/following{/other_user}", "gists_url": "https://api.github.com/users/phansch/gists{/gist_id}", "starred_url": "https://api.github.com/users/phansch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/phansch/subscriptions", "organizations_url": "https://api.github.com/users/phansch/orgs", "repos_url": "https://api.github.com/users/phansch/repos", "events_url": "https://api.github.com/users/phansch/events{/privacy}", "received_events_url": "https://api.github.com/users/phansch/received_events", "type": "User", "site_admin": false}, "committer": {"login": "phansch", "id": 2042399, "node_id": "MDQ6VXNlcjIwNDIzOTk=", "avatar_url": "https://avatars.githubusercontent.com/u/2042399?v=4", "gravatar_id": "", "url": "https://api.github.com/users/phansch", "html_url": "https://github.com/phansch", "followers_url": "https://api.github.com/users/phansch/followers", "following_url": "https://api.github.com/users/phansch/following{/other_user}", "gists_url": "https://api.github.com/users/phansch/gists{/gist_id}", "starred_url": "https://api.github.com/users/phansch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/phansch/subscriptions", "organizations_url": "https://api.github.com/users/phansch/orgs", "repos_url": "https://api.github.com/users/phansch/repos", "events_url": "https://api.github.com/users/phansch/events{/privacy}", "received_events_url": "https://api.github.com/users/phansch/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e176324fc593644a3ce00aa2ec7c1887d571003e", "url": "https://api.github.com/repos/rust-lang/rust/commits/e176324fc593644a3ce00aa2ec7c1887d571003e", "html_url": "https://github.com/rust-lang/rust/commit/e176324fc593644a3ce00aa2ec7c1887d571003e"}], "stats": {"total": 8, "additions": 5, "deletions": 3}, "files": [{"sha": "7cb41d979a6afd0c7f2f156e29317de044598c2b", "filename": ".cargo/config", "status": "added", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f934f98111591c3d43aa4698648671fed312ccc1/.cargo%2Fconfig", "raw_url": "https://github.com/rust-lang/rust/raw/f934f98111591c3d43aa4698648671fed312ccc1/.cargo%2Fconfig", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/.cargo%2Fconfig?ref=f934f98111591c3d43aa4698648671fed312ccc1", "patch": "@@ -0,0 +1,2 @@\n+[alias]\n+uitest = \"test --test compile-test\""}, {"sha": "7ae8f3936a48ffaa72fe5dc7e7b21f22aca74940", "filename": "CONTRIBUTING.md", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/f934f98111591c3d43aa4698648671fed312ccc1/CONTRIBUTING.md", "raw_url": "https://github.com/rust-lang/rust/raw/f934f98111591c3d43aa4698648671fed312ccc1/CONTRIBUTING.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/CONTRIBUTING.md?ref=f934f98111591c3d43aa4698648671fed312ccc1", "patch": "@@ -101,7 +101,7 @@ fn main() {\n }\n ```\n \n-Now you run `TESTNAME=ui/my_lint cargo test --test compile-test` to produce\n+Now you run `TESTNAME=ui/my_lint cargo uitest` to produce\n a `.stdout` file with the generated code:\n \n ```rust\n@@ -151,7 +151,7 @@ Use `cargo test` to run the whole testsuite.\n If you don't want to wait for all tests to finish, you can also execute a single test file by using `TESTNAME` to specify the test to run:\n \n ```bash\n-TESTNAME=ui/empty_line_after_outer_attr cargo test --test compile-test\n+TESTNAME=ui/empty_line_after_outer_attr cargo uitest\n ```\n \n Clippy uses UI tests. UI tests check that the output of the compiler is exactly as expected."}, {"sha": "4e2d4de851881efd2f2438ebf8242ad2c450a8d2", "filename": "clippy_lints/src/utils/author.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f934f98111591c3d43aa4698648671fed312ccc1/clippy_lints%2Fsrc%2Futils%2Fauthor.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f934f98111591c3d43aa4698648671fed312ccc1/clippy_lints%2Fsrc%2Futils%2Fauthor.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Futils%2Fauthor.rs?ref=f934f98111591c3d43aa4698648671fed312ccc1", "patch": "@@ -25,7 +25,7 @@ use syntax::ast::{Attribute, LitKind, DUMMY_NODE_ID};\n /// }\n /// ```\n ///\n-/// Running `TESTNAME=ui/my_lint cargo test --test compile-test` will produce\n+/// Running `TESTNAME=ui/my_lint cargo uitest` will produce\n /// a `./tests/ui/new_lint.stdout` file with the generated code:\n ///\n /// ```rust"}]}