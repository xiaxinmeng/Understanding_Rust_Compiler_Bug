{"sha": "9fe3c08abcd4c1817525ef9fc49d0d9b0a052908", "node_id": "MDY6Q29tbWl0NzI0NzEyOjlmZTNjMDhhYmNkNGMxODE3NTI1ZWY5ZmM0OWQwZDliMGEwNTI5MDg=", "commit": {"author": {"name": "Marcus Klaas", "email": "mail@marcusklaas.nl", "date": "2015-11-20T20:50:25Z"}, "committer": {"name": "Marcus Klaas", "email": "mail@marcusklaas.nl", "date": "2015-11-20T20:50:25Z"}, "message": "Add option to disable (un)wrapping of match arms", "tree": {"sha": "1f6b770a035cb9218c14fd80d4fe40c38ab51254", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1f6b770a035cb9218c14fd80d4fe40c38ab51254"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9fe3c08abcd4c1817525ef9fc49d0d9b0a052908", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9fe3c08abcd4c1817525ef9fc49d0d9b0a052908", "html_url": "https://github.com/rust-lang/rust/commit/9fe3c08abcd4c1817525ef9fc49d0d9b0a052908", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9fe3c08abcd4c1817525ef9fc49d0d9b0a052908/comments", "author": {"login": "marcusklaas", "id": 1255413, "node_id": "MDQ6VXNlcjEyNTU0MTM=", "avatar_url": "https://avatars.githubusercontent.com/u/1255413?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marcusklaas", "html_url": "https://github.com/marcusklaas", "followers_url": "https://api.github.com/users/marcusklaas/followers", "following_url": "https://api.github.com/users/marcusklaas/following{/other_user}", "gists_url": "https://api.github.com/users/marcusklaas/gists{/gist_id}", "starred_url": "https://api.github.com/users/marcusklaas/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marcusklaas/subscriptions", "organizations_url": "https://api.github.com/users/marcusklaas/orgs", "repos_url": "https://api.github.com/users/marcusklaas/repos", "events_url": "https://api.github.com/users/marcusklaas/events{/privacy}", "received_events_url": "https://api.github.com/users/marcusklaas/received_events", "type": "User", "site_admin": false}, "committer": {"login": "marcusklaas", "id": 1255413, "node_id": "MDQ6VXNlcjEyNTU0MTM=", "avatar_url": "https://avatars.githubusercontent.com/u/1255413?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marcusklaas", "html_url": "https://github.com/marcusklaas", "followers_url": "https://api.github.com/users/marcusklaas/followers", "following_url": "https://api.github.com/users/marcusklaas/following{/other_user}", "gists_url": "https://api.github.com/users/marcusklaas/gists{/gist_id}", "starred_url": "https://api.github.com/users/marcusklaas/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marcusklaas/subscriptions", "organizations_url": "https://api.github.com/users/marcusklaas/orgs", "repos_url": "https://api.github.com/users/marcusklaas/repos", "events_url": "https://api.github.com/users/marcusklaas/events{/privacy}", "received_events_url": "https://api.github.com/users/marcusklaas/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7b0cceafeea2b722a941cc5456534cede9053334", "url": "https://api.github.com/repos/rust-lang/rust/commits/7b0cceafeea2b722a941cc5456534cede9053334", "html_url": "https://github.com/rust-lang/rust/commit/7b0cceafeea2b722a941cc5456534cede9053334"}], "stats": {"total": 51, "additions": 43, "deletions": 8}, "files": [{"sha": "c02d618437fa3620648a893630191b0babf2ccfe", "filename": "src/config.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/9fe3c08abcd4c1817525ef9fc49d0d9b0a052908/src%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9fe3c08abcd4c1817525ef9fc49d0d9b0a052908/src%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fconfig.rs?ref=9fe3c08abcd4c1817525ef9fc49d0d9b0a052908", "patch": "@@ -307,4 +307,5 @@ create_config! {\n     take_source_hints: bool, true, \"Retain some formatting characteristics from the source code\";\n     hard_tabs: bool, false, \"Use tab characters for indentation, spaces for alignment\";\n     wrap_comments: bool, false, \"Break comments to fit on the line\";\n+    wrap_match_arms: bool, true, \"Wrap multiline match arms in blocks\";\n }"}, {"sha": "29d6d32c0dd47af356b37729bda312504daea07d", "filename": "src/expr.rs", "status": "modified", "additions": 17, "deletions": 8, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/9fe3c08abcd4c1817525ef9fc49d0d9b0a052908/src%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9fe3c08abcd4c1817525ef9fc49d0d9b0a052908/src%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fexpr.rs?ref=9fe3c08abcd4c1817525ef9fc49d0d9b0a052908", "patch": "@@ -941,10 +941,11 @@ impl Rewrite for ast::Arm {\n         }\n \n         let body = match **body {\n-            ast::Expr { node: ast::ExprBlock(ref b), .. } if !is_unsafe_block(b) &&\n-                                                             is_simple_block(b,\n-                                                                             context.codemap) => {\n-                b.expr.as_ref().map(|e| &**e).unwrap()\n+            ast::Expr { node: ast::ExprBlock(ref block), .. } if !is_unsafe_block(block) &&\n+                                                                 is_simple_block(block,\n+                                                                                 context.codemap) &&\n+                                                                 context.config.wrap_match_arms => {\n+                block.expr.as_ref().map(|e| &**e).unwrap()\n             }\n             ref x => x,\n         };\n@@ -959,7 +960,8 @@ impl Rewrite for ast::Arm {\n             let rewrite = nop_block_collapse(body.rewrite(context, budget, offset), budget);\n \n             match rewrite {\n-                Some(ref body_str) if !body_str.contains('\\n') || comma.is_empty() => {\n+                Some(ref body_str) if !body_str.contains('\\n') || !context.config.wrap_match_arms ||\n+                                      comma.is_empty() => {\n                     return Some(format!(\"{}{} => {}{}\",\n                                         attr_str.trim_left(),\n                                         pats_str,\n@@ -970,7 +972,7 @@ impl Rewrite for ast::Arm {\n             }\n         }\n \n-        // FIXME: we're doing a second rewrite of the expr -- this may not be\n+        // FIXME: we're doing a second rewrite of the expr; This may not be\n         // necessary.\n         let body_budget = try_opt!(width.checked_sub(context.config.tab_spaces));\n         let indent = context.block_indent.block_indent(context.config);\n@@ -980,13 +982,20 @@ impl Rewrite for ast::Arm {\n                                                                       indent),\n                                                          body_budget));\n         let indent_str = offset.block_indent(context.config).to_string(context.config);\n+        let (body_prefix, body_suffix) = if context.config.wrap_match_arms {\n+            (\" {\", \"}\")\n+        } else {\n+            (\"\", \"\")\n+        };\n \n-        Some(format!(\"{}{} => {{\\n{}{}\\n{}}}\",\n+        Some(format!(\"{}{} =>{}\\n{}{}\\n{}{}\",\n                      attr_str.trim_left(),\n                      pats_str,\n+                     body_prefix,\n                      indent_str,\n                      next_line_body,\n-                     offset.to_string(context.config)))\n+                     offset.to_string(context.config),\n+                     body_suffix))\n     }\n }\n "}, {"sha": "83e0fbbd4509b9b8442bed66e901faa0f6218b6c", "filename": "tests/source/match-nowrap.rs", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/9fe3c08abcd4c1817525ef9fc49d0d9b0a052908/tests%2Fsource%2Fmatch-nowrap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9fe3c08abcd4c1817525ef9fc49d0d9b0a052908/tests%2Fsource%2Fmatch-nowrap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fsource%2Fmatch-nowrap.rs?ref=9fe3c08abcd4c1817525ef9fc49d0d9b0a052908", "patch": "@@ -0,0 +1,12 @@\n+// rustfmt-wrap_match_arms: false\n+// Match expressions, no unwrapping of block arms or wrapping of multiline\n+// expressions.\n+\n+fn foo() {\n+    match x {\n+        a => { foo() }\n+        b =>\n+            (aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa,\n+            bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb),\n+    }\n+}"}, {"sha": "db2a874c838bcb6c75ba00c9f0f30f703f40ccd0", "filename": "tests/target/match-nowrap.rs", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/9fe3c08abcd4c1817525ef9fc49d0d9b0a052908/tests%2Ftarget%2Fmatch-nowrap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9fe3c08abcd4c1817525ef9fc49d0d9b0a052908/tests%2Ftarget%2Fmatch-nowrap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fmatch-nowrap.rs?ref=9fe3c08abcd4c1817525ef9fc49d0d9b0a052908", "patch": "@@ -0,0 +1,13 @@\n+// rustfmt-wrap_match_arms: false\n+// Match expressions, no unwrapping of block arms or wrapping of multiline\n+// expressions.\n+\n+fn foo() {\n+    match x {\n+        a => {\n+            foo()\n+        }\n+        b => (aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa,\n+              bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb),\n+    }\n+}"}]}