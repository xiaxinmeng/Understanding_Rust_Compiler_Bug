{"sha": "3a21a5b324963e18f00106b611460a5a83a53ace", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNhMjFhNWIzMjQ5NjNlMThmMDAxMDZiNjExNDYwYTVhODNhNTNhY2U=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-08-29T02:21:07Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-08-29T02:21:07Z"}, "message": "Auto merge of #88088 - nbdd0121:const2, r=nagisa\n\nForbid inline const block referencing params from being used in patterns\n\nFix #82518", "tree": {"sha": "870ef444185b33c45480cbe7efd9ceef03292cfd", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/870ef444185b33c45480cbe7efd9ceef03292cfd"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3a21a5b324963e18f00106b611460a5a83a53ace", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3a21a5b324963e18f00106b611460a5a83a53ace", "html_url": "https://github.com/rust-lang/rust/commit/3a21a5b324963e18f00106b611460a5a83a53ace", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3a21a5b324963e18f00106b611460a5a83a53ace/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "677b517e66fe9df0b2ce72f5ec57d52cc0da506e", "url": "https://api.github.com/repos/rust-lang/rust/commits/677b517e66fe9df0b2ce72f5ec57d52cc0da506e", "html_url": "https://github.com/rust-lang/rust/commit/677b517e66fe9df0b2ce72f5ec57d52cc0da506e"}, {"sha": "dc52040efd3c61ac71b9d837a67ba220d08bc931", "url": "https://api.github.com/repos/rust-lang/rust/commits/dc52040efd3c61ac71b9d837a67ba220d08bc931", "html_url": "https://github.com/rust-lang/rust/commit/dc52040efd3c61ac71b9d837a67ba220d08bc931"}], "stats": {"total": 32, "additions": 31, "deletions": 1}, "files": [{"sha": "cb74ae4df2ef86ac4084583730a0d4343f20307e", "filename": "compiler/rustc_mir_build/src/thir/pattern/mod.rs", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/3a21a5b324963e18f00106b611460a5a83a53ace/compiler%2Frustc_mir_build%2Fsrc%2Fthir%2Fpattern%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3a21a5b324963e18f00106b611460a5a83a53ace/compiler%2Frustc_mir_build%2Fsrc%2Fthir%2Fpattern%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir_build%2Fsrc%2Fthir%2Fpattern%2Fmod.rs?ref=3a21a5b324963e18f00106b611460a5a83a53ace", "patch": "@@ -21,7 +21,7 @@ use rustc_middle::mir::UserTypeProjection;\n use rustc_middle::mir::{BorrowKind, Field, Mutability};\n use rustc_middle::thir::{Ascription, BindingMode, FieldPat, Pat, PatKind, PatRange, PatTyProj};\n use rustc_middle::ty::subst::{GenericArg, SubstsRef};\n-use rustc_middle::ty::{self, AdtDef, DefIdTree, Region, Ty, TyCtxt, UserType};\n+use rustc_middle::ty::{self, AdtDef, ConstKind, DefIdTree, Region, Ty, TyCtxt, UserType};\n use rustc_span::{Span, Symbol};\n \n use std::cmp::Ordering;\n@@ -545,6 +545,11 @@ impl<'a, 'tcx> PatCtxt<'a, 'tcx> {\n                 hir::ExprKind::ConstBlock(ref anon_const) => {\n                     let anon_const_def_id = self.tcx.hir().local_def_id(anon_const.hir_id);\n                     let value = ty::Const::from_anon_const(self.tcx, anon_const_def_id);\n+                    if matches!(value.val, ConstKind::Param(_)) {\n+                        let span = self.tcx.hir().span(anon_const.hir_id);\n+                        self.errors.push(PatternError::ConstParamInPattern(span));\n+                        return PatKind::Wild;\n+                    }\n                     return *self.const_to_pat(value, expr.hir_id, expr.span, false).kind;\n                 }\n                 hir::ExprKind::Lit(ref lit) => (lit, false),"}, {"sha": "61680d653d021b2846a62932fde9826f1b46c8a7", "filename": "src/test/ui/inline-const/const-match-pat-generic.rs", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/3a21a5b324963e18f00106b611460a5a83a53ace/src%2Ftest%2Fui%2Finline-const%2Fconst-match-pat-generic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3a21a5b324963e18f00106b611460a5a83a53ace/src%2Ftest%2Fui%2Finline-const%2Fconst-match-pat-generic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Finline-const%2Fconst-match-pat-generic.rs?ref=3a21a5b324963e18f00106b611460a5a83a53ace", "patch": "@@ -0,0 +1,16 @@\n+#![allow(incomplete_features)]\n+#![feature(inline_const)]\n+\n+// rust-lang/rust#82518: ICE with inline-const in match referencing const-generic parameter\n+\n+fn foo<const V: usize>() {\n+  match 0 {\n+    const { V } => {},\n+    //~^ ERROR const parameters cannot be referenced in patterns [E0158]\n+    _ => {},\n+  }\n+}\n+\n+fn main() {\n+    foo::<1>();\n+}"}, {"sha": "a3ed41a3f6af877a42ee3914af2a4e4d6cf900f4", "filename": "src/test/ui/inline-const/const-match-pat-generic.stderr", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/3a21a5b324963e18f00106b611460a5a83a53ace/src%2Ftest%2Fui%2Finline-const%2Fconst-match-pat-generic.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/3a21a5b324963e18f00106b611460a5a83a53ace/src%2Ftest%2Fui%2Finline-const%2Fconst-match-pat-generic.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Finline-const%2Fconst-match-pat-generic.stderr?ref=3a21a5b324963e18f00106b611460a5a83a53ace", "patch": "@@ -0,0 +1,9 @@\n+error[E0158]: const parameters cannot be referenced in patterns\n+  --> $DIR/const-match-pat-generic.rs:8:11\n+   |\n+LL |     const { V } => {},\n+   |           ^^^^^\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0158`."}]}