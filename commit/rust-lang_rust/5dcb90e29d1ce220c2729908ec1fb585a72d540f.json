{"sha": "5dcb90e29d1ce220c2729908ec1fb585a72d540f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjVkY2I5MGUyOWQxY2UyMjBjMjcyOTkwOGVjMWZiNTg1YTcyZDU0MGY=", "commit": {"author": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2018-10-07T11:27:51Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2018-10-07T11:27:51Z"}, "message": "Merge pull request #3279 from phansch/fix_fp_in_fn_to_numeric_cast_with_truncation\n\nFix FP in `fn_to_numeric_cast_with_truncation`", "tree": {"sha": "4e78064daa6253e3af482fc932a60a195e5158f3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4e78064daa6253e3af482fc932a60a195e5158f3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5dcb90e29d1ce220c2729908ec1fb585a72d540f", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJbue23CRBK7hj4Ov3rIwAAdHIIAINJ9Xp/TMd9v/zwLC95UlvH\n4B1WIwi83Vwp+MRuAVOcbyYMAbF9EypB7uOaFdIm6wzhfm0fOj+M+NGrMOM1L51Q\nVavHJGAqoNkMf4ZNdmHnkPsYEnEc2/pZRMdKltmB4SjwOO8+cOMr9qrwAG6Twkmi\ntf9uGDPwB9+zdfURiN6ZOtm8PZN5BV4VJSIBUwRf7q30FKByEnR0RFklf8IgONlj\nZWtXcToXxLwe/3isvq0Vb+T25NY+QK4zg96UFGsZItFn9eHwd/5mTM+0XqgofEf6\nWmF0/1JJLEzDRqR/dfsdZtHxzF1rAdaLnuTZcF/ZDRmZkgG7HVO5bJi0WJdQH+g=\n=xf/J\n-----END PGP SIGNATURE-----\n", "payload": "tree 4e78064daa6253e3af482fc932a60a195e5158f3\nparent 4511f4edf4f3d6c73506b03ccf2ff7d7894c6ff6\nparent d365742bc62f78b00275504229bdbe8b88e3db3e\nauthor Manish Goregaokar <manishsmail@gmail.com> 1538911671 -0700\ncommitter GitHub <noreply@github.com> 1538911671 -0700\n\nMerge pull request #3279 from phansch/fix_fp_in_fn_to_numeric_cast_with_truncation\n\nFix FP in `fn_to_numeric_cast_with_truncation`"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5dcb90e29d1ce220c2729908ec1fb585a72d540f", "html_url": "https://github.com/rust-lang/rust/commit/5dcb90e29d1ce220c2729908ec1fb585a72d540f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5dcb90e29d1ce220c2729908ec1fb585a72d540f/comments", "author": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4511f4edf4f3d6c73506b03ccf2ff7d7894c6ff6", "url": "https://api.github.com/repos/rust-lang/rust/commits/4511f4edf4f3d6c73506b03ccf2ff7d7894c6ff6", "html_url": "https://github.com/rust-lang/rust/commit/4511f4edf4f3d6c73506b03ccf2ff7d7894c6ff6"}, {"sha": "d365742bc62f78b00275504229bdbe8b88e3db3e", "url": "https://api.github.com/repos/rust-lang/rust/commits/d365742bc62f78b00275504229bdbe8b88e3db3e", "html_url": "https://github.com/rust-lang/rust/commit/d365742bc62f78b00275504229bdbe8b88e3db3e"}], "stats": {"total": 57, "additions": 33, "deletions": 24}, "files": [{"sha": "f43b1fe7abe08c9132af974bee613b4fb543fb89", "filename": "clippy_lints/src/types.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/5dcb90e29d1ce220c2729908ec1fb585a72d540f/clippy_lints%2Fsrc%2Ftypes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5dcb90e29d1ce220c2729908ec1fb585a72d540f/clippy_lints%2Fsrc%2Ftypes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Ftypes.rs?ref=5dcb90e29d1ce220c2729908ec1fb585a72d540f", "patch": "@@ -1088,6 +1088,11 @@ impl<'a, 'tcx> LateLintPass<'a, 'tcx> for CastPass {\n }\n \n fn lint_fn_to_numeric_cast(cx: &LateContext<'_, '_>, expr: &Expr, cast_expr: &Expr, cast_from: Ty<'_>, cast_to: Ty<'_>) {\n+    // We only want to check casts to `ty::Uint` or `ty::Int`\n+    match cast_to.sty {\n+        ty::Uint(_) | ty::Int(..) => { /* continue on */ },\n+        _ => return\n+    }\n     match cast_from.sty {\n         ty::FnDef(..) | ty::FnPtr(_) => {\n             let from_snippet = snippet(cx, cast_expr.span, \"x\");"}, {"sha": "9bd0ad7687fad5640d532fb021ed3446b2d0e409", "filename": "tests/ui/fn_to_numeric_cast.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/5dcb90e29d1ce220c2729908ec1fb585a72d540f/tests%2Fui%2Ffn_to_numeric_cast.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5dcb90e29d1ce220c2729908ec1fb585a72d540f/tests%2Fui%2Ffn_to_numeric_cast.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ffn_to_numeric_cast.rs?ref=5dcb90e29d1ce220c2729908ec1fb585a72d540f", "patch": "@@ -31,6 +31,10 @@ fn test_function_to_numeric_cast() {\n \n     // Casting to usize is OK and should not warn\n     let _ = foo as usize;\n+\n+    // Cast `f` (a `FnDef`) to `fn()` should not warn\n+    fn f() {}\n+    let _ = f as fn();\n }\n \n fn test_function_var_to_numeric_cast() {"}, {"sha": "27eeb9091544682e9fff9e1668710a0d96cabd79", "filename": "tests/ui/fn_to_numeric_cast.stderr", "status": "modified", "additions": 24, "deletions": 24, "changes": 48, "blob_url": "https://github.com/rust-lang/rust/blob/5dcb90e29d1ce220c2729908ec1fb585a72d540f/tests%2Fui%2Ffn_to_numeric_cast.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/5dcb90e29d1ce220c2729908ec1fb585a72d540f/tests%2Fui%2Ffn_to_numeric_cast.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ffn_to_numeric_cast.stderr?ref=5dcb90e29d1ce220c2729908ec1fb585a72d540f", "patch": "@@ -69,75 +69,75 @@ error: casting function pointer `foo` to `u128`\n    |             ^^^^^^^^^^^ help: try: `foo as usize`\n \n error: casting function pointer `abc` to `i8`, which truncates the value\n-  --> $DIR/fn_to_numeric_cast.rs:39:13\n+  --> $DIR/fn_to_numeric_cast.rs:43:13\n    |\n-39 |     let _ = abc as i8;\n+43 |     let _ = abc as i8;\n    |             ^^^^^^^^^ help: try: `abc as usize`\n \n error: casting function pointer `abc` to `i16`, which truncates the value\n-  --> $DIR/fn_to_numeric_cast.rs:40:13\n+  --> $DIR/fn_to_numeric_cast.rs:44:13\n    |\n-40 |     let _ = abc as i16;\n+44 |     let _ = abc as i16;\n    |             ^^^^^^^^^^ help: try: `abc as usize`\n \n error: casting function pointer `abc` to `i32`, which truncates the value\n-  --> $DIR/fn_to_numeric_cast.rs:41:13\n+  --> $DIR/fn_to_numeric_cast.rs:45:13\n    |\n-41 |     let _ = abc as i32;\n+45 |     let _ = abc as i32;\n    |             ^^^^^^^^^^ help: try: `abc as usize`\n \n error: casting function pointer `abc` to `i64`\n-  --> $DIR/fn_to_numeric_cast.rs:42:13\n+  --> $DIR/fn_to_numeric_cast.rs:46:13\n    |\n-42 |     let _ = abc as i64;\n+46 |     let _ = abc as i64;\n    |             ^^^^^^^^^^ help: try: `abc as usize`\n \n error: casting function pointer `abc` to `i128`\n-  --> $DIR/fn_to_numeric_cast.rs:43:13\n+  --> $DIR/fn_to_numeric_cast.rs:47:13\n    |\n-43 |     let _ = abc as i128;\n+47 |     let _ = abc as i128;\n    |             ^^^^^^^^^^^ help: try: `abc as usize`\n \n error: casting function pointer `abc` to `isize`\n-  --> $DIR/fn_to_numeric_cast.rs:44:13\n+  --> $DIR/fn_to_numeric_cast.rs:48:13\n    |\n-44 |     let _ = abc as isize;\n+48 |     let _ = abc as isize;\n    |             ^^^^^^^^^^^^ help: try: `abc as usize`\n \n error: casting function pointer `abc` to `u8`, which truncates the value\n-  --> $DIR/fn_to_numeric_cast.rs:46:13\n+  --> $DIR/fn_to_numeric_cast.rs:50:13\n    |\n-46 |     let _ = abc as u8;\n+50 |     let _ = abc as u8;\n    |             ^^^^^^^^^ help: try: `abc as usize`\n \n error: casting function pointer `abc` to `u16`, which truncates the value\n-  --> $DIR/fn_to_numeric_cast.rs:47:13\n+  --> $DIR/fn_to_numeric_cast.rs:51:13\n    |\n-47 |     let _ = abc as u16;\n+51 |     let _ = abc as u16;\n    |             ^^^^^^^^^^ help: try: `abc as usize`\n \n error: casting function pointer `abc` to `u32`, which truncates the value\n-  --> $DIR/fn_to_numeric_cast.rs:48:13\n+  --> $DIR/fn_to_numeric_cast.rs:52:13\n    |\n-48 |     let _ = abc as u32;\n+52 |     let _ = abc as u32;\n    |             ^^^^^^^^^^ help: try: `abc as usize`\n \n error: casting function pointer `abc` to `u64`\n-  --> $DIR/fn_to_numeric_cast.rs:49:13\n+  --> $DIR/fn_to_numeric_cast.rs:53:13\n    |\n-49 |     let _ = abc as u64;\n+53 |     let _ = abc as u64;\n    |             ^^^^^^^^^^ help: try: `abc as usize`\n \n error: casting function pointer `abc` to `u128`\n-  --> $DIR/fn_to_numeric_cast.rs:50:13\n+  --> $DIR/fn_to_numeric_cast.rs:54:13\n    |\n-50 |     let _ = abc as u128;\n+54 |     let _ = abc as u128;\n    |             ^^^^^^^^^^^ help: try: `abc as usize`\n \n error: casting function pointer `f` to `i32`, which truncates the value\n-  --> $DIR/fn_to_numeric_cast.rs:57:5\n+  --> $DIR/fn_to_numeric_cast.rs:61:5\n    |\n-57 |     f as i32\n+61 |     f as i32\n    |     ^^^^^^^^ help: try: `f as usize`\n \n error: aborting due to 23 previous errors"}]}