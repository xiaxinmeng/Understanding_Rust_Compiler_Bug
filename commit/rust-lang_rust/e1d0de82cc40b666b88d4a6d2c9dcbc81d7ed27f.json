{"sha": "e1d0de82cc40b666b88d4a6d2c9dcbc81d7ed27f", "node_id": "MDY6Q29tbWl0NzI0NzEyOmUxZDBkZTgyY2M0MGI2NjZiODhkNGE2ZDJjOWRjYmM4MWQ3ZWQyN2Y=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2016-09-06T00:55:45Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2016-09-06T00:55:45Z"}, "message": "Auto merge of #36274 - Manishearth:rollup, r=Manishearth\n\nRollup of 6 pull requests\n\n- Successful merges: #35845, #35983, #36065, #36102, #36242, #36245\n- Failed merges:", "tree": {"sha": "4c66194f1f9e81d885971ee0b0572309f9cacdde", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4c66194f1f9e81d885971ee0b0572309f9cacdde"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e1d0de82cc40b666b88d4a6d2c9dcbc81d7ed27f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e1d0de82cc40b666b88d4a6d2c9dcbc81d7ed27f", "html_url": "https://github.com/rust-lang/rust/commit/e1d0de82cc40b666b88d4a6d2c9dcbc81d7ed27f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e1d0de82cc40b666b88d4a6d2c9dcbc81d7ed27f/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cbe4de78e2daf84499988c79317c0862b8106115", "url": "https://api.github.com/repos/rust-lang/rust/commits/cbe4de78e2daf84499988c79317c0862b8106115", "html_url": "https://github.com/rust-lang/rust/commit/cbe4de78e2daf84499988c79317c0862b8106115"}, {"sha": "20ec61e04309bfd9450bcde9176c883478af46de", "url": "https://api.github.com/repos/rust-lang/rust/commits/20ec61e04309bfd9450bcde9176c883478af46de", "html_url": "https://github.com/rust-lang/rust/commit/20ec61e04309bfd9450bcde9176c883478af46de"}], "stats": {"total": 176, "additions": 100, "deletions": 76}, "files": [{"sha": "95706b5677a629599faf8d366f202bf7c2761b3f", "filename": "src/librustc/middle/resolve_lifetime.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/e1d0de82cc40b666b88d4a6d2c9dcbc81d7ed27f/src%2Flibrustc%2Fmiddle%2Fresolve_lifetime.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e1d0de82cc40b666b88d4a6d2c9dcbc81d7ed27f/src%2Flibrustc%2Fmiddle%2Fresolve_lifetime.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fresolve_lifetime.rs?ref=e1d0de82cc40b666b88d4a6d2c9dcbc81d7ed27f", "patch": "@@ -396,9 +396,9 @@ fn signal_shadowing_problem(sess: &Session, name: ast::Name, orig: Original, sha\n                                         {} name that is already in scope\",\n                                        shadower.kind.desc(), name, orig.kind.desc()))\n     };\n-    err.span_note(orig.span,\n-                  &format!(\"shadowed {} `{}` declared here\",\n-                           orig.kind.desc(), name));\n+    err.span_label(orig.span, &\"first declared here\");\n+    err.span_label(shadower.span,\n+                   &format!(\"lifetime {} already in scope\", name));\n     err.emit();\n }\n "}, {"sha": "df07bd4f32e463927cf582d1dab5c883a534f440", "filename": "src/librustc_typeck/check/mod.rs", "status": "modified", "additions": 11, "deletions": 9, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/e1d0de82cc40b666b88d4a6d2c9dcbc81d7ed27f/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e1d0de82cc40b666b88d4a6d2c9dcbc81d7ed27f/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs?ref=e1d0de82cc40b666b88d4a6d2c9dcbc81d7ed27f", "patch": "@@ -2437,16 +2437,18 @@ impl<'a, 'gcx, 'tcx> FnCtxt<'a, 'gcx, 'tcx> {\n                     if arg_count == 1 {\" was\"} else {\"s were\"}),\n                 error_code);\n \n-            err.span_label(sp, &format!(\"expected {}{} parameter{}\",\n-                                        if variadic {\"at least \"} else {\"\"},\n-                                        expected_count,\n-                                        if expected_count == 1 {\"\"} else {\"s\"}));\n-\n             let input_types = fn_inputs.iter().map(|i| format!(\"{:?}\", i)).collect::<Vec<String>>();\n-            if input_types.len() > 0 {\n-                err.note(&format!(\"the following parameter type{} expected: {}\",\n-                        if expected_count == 1 {\" was\"} else {\"s were\"},\n-                        input_types.join(\", \")));\n+            if input_types.len() > 1 {\n+                err.note(\"the following parameter types were expected:\");\n+                err.note(&input_types.join(\", \"));\n+            } else if input_types.len() > 0 {\n+                err.note(&format!(\"the following parameter type was expected: {}\",\n+                                  input_types[0]));\n+            } else {\n+                err.span_label(sp, &format!(\"expected {}{} parameter{}\",\n+                                            if variadic {\"at least \"} else {\"\"},\n+                                            expected_count,\n+                                            if expected_count == 1 {\"\"} else {\"s\"}));\n             }\n             err.emit();\n         }"}, {"sha": "dd2956f706c95f83ae6ec1177cc3bbddfc7cd2be", "filename": "src/libsyntax/feature_gate.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/e1d0de82cc40b666b88d4a6d2c9dcbc81d7ed27f/src%2Flibsyntax%2Ffeature_gate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e1d0de82cc40b666b88d4a6d2c9dcbc81d7ed27f/src%2Flibsyntax%2Ffeature_gate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Ffeature_gate.rs?ref=e1d0de82cc40b666b88d4a6d2c9dcbc81d7ed27f", "patch": "@@ -308,6 +308,7 @@ declare_features! (\n     (removed, struct_inherit, \"1.0.0\", None),\n     (removed, test_removed_feature, \"1.0.0\", None),\n     (removed, visible_private_types, \"1.0.0\", None),\n+    (removed, unsafe_no_drop_flag, \"1.0.0\", None),\n );\n \n declare_features! ("}, {"sha": "5182a2bf5a0a98a1b5f8f467b71509c94704aba0", "filename": "src/test/compile-fail/E0060.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/e1d0de82cc40b666b88d4a6d2c9dcbc81d7ed27f/src%2Ftest%2Fcompile-fail%2FE0060.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e1d0de82cc40b666b88d4a6d2c9dcbc81d7ed27f/src%2Ftest%2Fcompile-fail%2FE0060.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2FE0060.rs?ref=e1d0de82cc40b666b88d4a6d2c9dcbc81d7ed27f", "patch": "@@ -15,6 +15,5 @@ extern \"C\" {\n fn main() {\n     unsafe { printf(); }\n     //~^ ERROR E0060\n-    //~| NOTE expected at least 1 parameter\n-    //~| NOTE the following parameter type was expected\n+    //~| NOTE the following parameter type was expected: *const u8\n }"}, {"sha": "4c7c0dfd44c513e159004d2b869d73cd2611c607", "filename": "src/test/compile-fail/E0061.rs", "status": "modified", "additions": 8, "deletions": 2, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/e1d0de82cc40b666b88d4a6d2c9dcbc81d7ed27f/src%2Ftest%2Fcompile-fail%2FE0061.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e1d0de82cc40b666b88d4a6d2c9dcbc81d7ed27f/src%2Ftest%2Fcompile-fail%2FE0061.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2FE0061.rs?ref=e1d0de82cc40b666b88d4a6d2c9dcbc81d7ed27f", "patch": "@@ -10,9 +10,15 @@\n \n fn f(a: u16, b: &str) {}\n \n+fn f2(a: u16) {}\n+\n fn main() {\n     f(0);\n     //~^ ERROR E0061\n-    //~| NOTE expected 2 parameters\n-    //~| NOTE the following parameter types were expected\n+    //~| NOTE the following parameter types were expected:\n+    //~| NOTE u16, &str\n+\n+    f2();\n+    //~^ ERROR E0061\n+    //~| NOTE the following parameter type was expected: u16\n }"}, {"sha": "8aeeeebcb56768a03dbb53a4a4afa59173c1eaf3", "filename": "src/test/compile-fail/E0496.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e1d0de82cc40b666b88d4a6d2c9dcbc81d7ed27f/src%2Ftest%2Fcompile-fail%2FE0496.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e1d0de82cc40b666b88d4a6d2c9dcbc81d7ed27f/src%2Ftest%2Fcompile-fail%2FE0496.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2FE0496.rs?ref=e1d0de82cc40b666b88d4a6d2c9dcbc81d7ed27f", "patch": "@@ -13,7 +13,9 @@ struct Foo<'a> {\n }\n \n impl<'a> Foo<'a> {\n+   //~^  NOTE first declared here\n     fn f<'a>(x: &'a i32) { //~ ERROR E0496\n+       //~^ NOTE lifetime 'a already in scope\n     }\n }\n "}, {"sha": "8035d798e32de07cf4f4cee840adac9ed8fe9aaf", "filename": "src/test/compile-fail/issue-18819.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e1d0de82cc40b666b88d4a6d2c9dcbc81d7ed27f/src%2Ftest%2Fcompile-fail%2Fissue-18819.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e1d0de82cc40b666b88d4a6d2c9dcbc81d7ed27f/src%2Ftest%2Fcompile-fail%2Fissue-18819.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-18819.rs?ref=e1d0de82cc40b666b88d4a6d2c9dcbc81d7ed27f", "patch": "@@ -25,6 +25,6 @@ fn print_x(_: &Foo<Item=bool>, extra: &str) {\n fn main() {\n     print_x(X);\n     //~^ ERROR this function takes 2 parameters but 1 parameter was supplied\n-    //~| NOTE the following parameter types were expected: &Foo<Item=bool>, &str\n-    //~| NOTE expected 2 parameters\n+    //~| NOTE the following parameter types were expected:\n+    //~| NOTE &Foo<Item=bool>, &str\n }"}, {"sha": "b934cbe4b5d87414cb253909705a01c8ee77c2df", "filename": "src/test/compile-fail/issue-3044.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e1d0de82cc40b666b88d4a6d2c9dcbc81d7ed27f/src%2Ftest%2Fcompile-fail%2Fissue-3044.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e1d0de82cc40b666b88d4a6d2c9dcbc81d7ed27f/src%2Ftest%2Fcompile-fail%2Fissue-3044.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-3044.rs?ref=e1d0de82cc40b666b88d4a6d2c9dcbc81d7ed27f", "patch": "@@ -15,6 +15,6 @@ fn main() {\n     });\n     //~^^ ERROR this function takes 2 parameters but 1 parameter was supplied\n     //~| NOTE the following parameter types were expected\n-    //~| NOTE expected 2 parameters\n+    //~| NOTE _, _\n     // the first error is, um, non-ideal.\n }"}, {"sha": "08707a187dfd177ab9688d0527a7e38be9888279", "filename": "src/test/compile-fail/issue-4935.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/e1d0de82cc40b666b88d4a6d2c9dcbc81d7ed27f/src%2Ftest%2Fcompile-fail%2Fissue-4935.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e1d0de82cc40b666b88d4a6d2c9dcbc81d7ed27f/src%2Ftest%2Fcompile-fail%2Fissue-4935.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-4935.rs?ref=e1d0de82cc40b666b88d4a6d2c9dcbc81d7ed27f", "patch": "@@ -14,4 +14,3 @@ fn foo(a: usize) {}\n fn main() { foo(5, 6) }\n //~^ ERROR this function takes 1 parameter but 2 parameters were supplied\n //~| NOTE the following parameter type was expected\n-//~| NOTE expected 1 parameter"}, {"sha": "ca18ca3796a10923dd7e303ac6044fc426aaa2e7", "filename": "src/test/compile-fail/loops-reject-duplicate-labels-2.rs", "status": "modified", "additions": 17, "deletions": 16, "changes": 33, "blob_url": "https://github.com/rust-lang/rust/blob/e1d0de82cc40b666b88d4a6d2c9dcbc81d7ed27f/src%2Ftest%2Fcompile-fail%2Floops-reject-duplicate-labels-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e1d0de82cc40b666b88d4a6d2c9dcbc81d7ed27f/src%2Ftest%2Fcompile-fail%2Floops-reject-duplicate-labels-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Floops-reject-duplicate-labels-2.rs?ref=e1d0de82cc40b666b88d4a6d2c9dcbc81d7ed27f", "patch": "@@ -19,30 +19,31 @@\n // https://internals.rust-lang.org/t/psa-rejecting-duplicate-loop-labels/1833\n \n pub fn foo() {\n-    { 'fl: for _ in 0..10 { break; } }   //~ NOTE shadowed label `'fl` declared here\n+    { 'fl: for _ in 0..10 { break; } }   //~ NOTE first declared here\n     { 'fl: loop { break; } }             //~ WARN label name `'fl` shadows a label name that is already in scope\n-\n-    { 'lf: loop { break; } }             //~ NOTE shadowed label `'lf` declared here\n+    //~^ NOTE lifetime 'fl already in scope\n+    { 'lf: loop { break; } }             //~ NOTE first declared here\n     { 'lf: for _ in 0..10 { break; } }   //~ WARN label name `'lf` shadows a label name that is already in scope\n-\n-    { 'wl: while 2 > 1 { break; } }      //~ NOTE shadowed label `'wl` declared here\n+    //~^ NOTE lifetime 'lf already in scope\n+    { 'wl: while 2 > 1 { break; } }      //~ NOTE first declared here\n     { 'wl: loop { break; } }             //~ WARN label name `'wl` shadows a label name that is already in scope\n-\n-    { 'lw: loop { break; } }             //~ NOTE shadowed label `'lw` declared here\n+    //~^ NOTE lifetime 'wl already in scope\n+    { 'lw: loop { break; } }             //~ NOTE first declared here\n     { 'lw: while 2 > 1 { break; } }      //~ WARN label name `'lw` shadows a label name that is already in scope\n-\n-    { 'fw: for _ in 0..10 { break; } }   //~ NOTE shadowed label `'fw` declared here\n+    //~^ NOTE lifetime 'lw already in scope\n+    { 'fw: for _ in 0..10 { break; } }   //~ NOTE first declared here\n     { 'fw: while 2 > 1 { break; } }      //~ WARN label name `'fw` shadows a label name that is already in scope\n-\n-    { 'wf: while 2 > 1 { break; } }      //~ NOTE shadowed label `'wf` declared here\n+    //~^ NOTE lifetime 'fw already in scope\n+    { 'wf: while 2 > 1 { break; } }      //~ NOTE first declared here\n     { 'wf: for _ in 0..10 { break; } }   //~ WARN label name `'wf` shadows a label name that is already in scope\n-\n-    { 'tl: while let Some(_) = None::<i32> { break; } } //~ NOTE shadowed label `'tl` declared here\n+    //~^ NOTE lifetime 'wf already in scope\n+    { 'tl: while let Some(_) = None::<i32> { break; } } //~ NOTE first declared here\n     { 'tl: loop { break; } }             //~ WARN label name `'tl` shadows a label name that is already in scope\n-\n-    { 'lt: loop { break; } }             //~ NOTE shadowed label `'lt` declared here\n+    //~^ NOTE lifetime 'tl already in scope\n+    { 'lt: loop { break; } }             //~ NOTE first declared here\n     { 'lt: while let Some(_) = None::<i32> { break; } }\n-                                        //~^ WARN label name `'lt` shadows a label name that is already in scope\n+                                         //~^ WARN label name `'lt` shadows a label name that is already in scope\n+                                         //~| NOTE lifetime 'lt already in scope\n }\n \n #[rustc_error]"}, {"sha": "31f89493896d89cd986e527a64823debaf8b3f80", "filename": "src/test/compile-fail/loops-reject-duplicate-labels.rs", "status": "modified", "additions": 17, "deletions": 15, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/e1d0de82cc40b666b88d4a6d2c9dcbc81d7ed27f/src%2Ftest%2Fcompile-fail%2Floops-reject-duplicate-labels.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e1d0de82cc40b666b88d4a6d2c9dcbc81d7ed27f/src%2Ftest%2Fcompile-fail%2Floops-reject-duplicate-labels.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Floops-reject-duplicate-labels.rs?ref=e1d0de82cc40b666b88d4a6d2c9dcbc81d7ed27f", "patch": "@@ -16,30 +16,32 @@\n // This is testing the exact cases that are in the issue description.\n \n fn foo() {\n-    'fl: for _ in 0..10 { break; } //~ NOTE shadowed label `'fl` declared here\n+    'fl: for _ in 0..10 { break; } //~ NOTE first declared here\n     'fl: loop { break; }           //~ WARN label name `'fl` shadows a label name that is already in scope\n+                                   //~^ NOTE lifetime 'fl already in scope\n \n-    'lf: loop { break; }           //~ NOTE shadowed label `'lf` declared here\n+    'lf: loop { break; }           //~ NOTE first declared here\n     'lf: for _ in 0..10 { break; } //~ WARN label name `'lf` shadows a label name that is already in scope\n-\n-    'wl: while 2 > 1 { break; }    //~ NOTE shadowed label `'wl` declared here\n+                                   //~^ NOTE lifetime 'lf already in scope\n+    'wl: while 2 > 1 { break; }    //~ NOTE first declared here\n     'wl: loop { break; }           //~ WARN label name `'wl` shadows a label name that is already in scope\n-\n-    'lw: loop { break; }           //~ NOTE shadowed label `'lw` declared here\n+                                   //~^ NOTE lifetime 'wl already in scope\n+    'lw: loop { break; }           //~ NOTE first declared here\n     'lw: while 2 > 1 { break; }    //~ WARN label name `'lw` shadows a label name that is already in scope\n-\n-    'fw: for _ in 0..10 { break; } //~ NOTE shadowed label `'fw` declared here\n+                                   //~^ NOTE lifetime 'lw already in scope\n+    'fw: for _ in 0..10 { break; } //~ NOTE first declared here\n     'fw: while 2 > 1 { break; }    //~ WARN label name `'fw` shadows a label name that is already in scope\n-\n-    'wf: while 2 > 1 { break; }    //~ NOTE shadowed label `'wf` declared here\n+                                   //~^ NOTE lifetime 'fw already in scope\n+    'wf: while 2 > 1 { break; }    //~ NOTE first declared here\n     'wf: for _ in 0..10 { break; } //~ WARN label name `'wf` shadows a label name that is already in scope\n-\n-    'tl: while let Some(_) = None::<i32> { break; } //~ NOTE shadowed label `'tl` declared here\n+                                   //~^ NOTE lifetime 'wf already in scope\n+    'tl: while let Some(_) = None::<i32> { break; } //~ NOTE first declared here\n     'tl: loop { break; }           //~ WARN label name `'tl` shadows a label name that is already in scope\n-\n-    'lt: loop { break; }           //~ NOTE shadowed label `'lt` declared here\n+                                   //~^ NOTE lifetime 'tl already in scope\n+    'lt: loop { break; }           //~ NOTE first declared here\n     'lt: while let Some(_) = None::<i32> { break; }\n-                                  //~^ WARN label name `'lt` shadows a label name that is already in scope\n+                                   //~^ WARN label name `'lt` shadows a label name that is already in scope\n+                                   //~| NOTE lifetime 'lt already in scope\n }\n \n // Note however that it is okay for the same label to be reused in"}, {"sha": "9a735f9c97c96884327bf003bffec8e1566a73c3", "filename": "src/test/compile-fail/loops-reject-labels-shadowing-lifetimes.rs", "status": "modified", "additions": 24, "deletions": 12, "changes": 36, "blob_url": "https://github.com/rust-lang/rust/blob/e1d0de82cc40b666b88d4a6d2c9dcbc81d7ed27f/src%2Ftest%2Fcompile-fail%2Floops-reject-labels-shadowing-lifetimes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e1d0de82cc40b666b88d4a6d2c9dcbc81d7ed27f/src%2Ftest%2Fcompile-fail%2Floops-reject-labels-shadowing-lifetimes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Floops-reject-labels-shadowing-lifetimes.rs?ref=e1d0de82cc40b666b88d4a6d2c9dcbc81d7ed27f", "patch": "@@ -16,9 +16,10 @@\n #![allow(dead_code, unused_variables)]\n \n fn foo() {\n-    fn foo<'a>() { //~ NOTE shadowed lifetime `'a` declared here\n+    fn foo<'a>() { //~ NOTE first declared here\n         'a: loop { break 'a; }\n         //~^ WARN label name `'a` shadows a lifetime name that is already in scope\n+        //~| NOTE lifetime 'a already in scope\n     }\n \n     struct Struct<'b, 'c> { _f: &'b i8, _g: &'c i8 }\n@@ -40,76 +41,87 @@ fn foo() {\n         }\n     }\n \n-    impl<'bad, 'c> Struct<'bad, 'c> { //~ NOTE shadowed lifetime `'bad` declared here\n+    impl<'bad, 'c> Struct<'bad, 'c> { //~ NOTE first declared here\n         fn meth_bad(&self) {\n             'bad: loop { break 'bad; }\n             //~^ WARN label name `'bad` shadows a lifetime name that is already in scope\n+            //~| NOTE lifetime 'bad already in scope\n         }\n     }\n \n-    impl<'b, 'bad> Struct<'b, 'bad> { //~ NOTE shadowed lifetime `'bad` declared here\n+    impl<'b, 'bad> Struct<'b, 'bad> { //~ NOTE first declared here\n         fn meth_bad2(&self) {\n             'bad: loop { break 'bad; }\n             //~^ WARN label name `'bad` shadows a lifetime name that is already in scope\n+            //~| NOTE lifetime 'bad already in scope\n         }\n     }\n \n     impl<'b, 'c> Struct<'b, 'c> {\n-        fn meth_bad3<'bad>(x: &'bad i8) { //~ NOTE shadowed lifetime `'bad` declared here\n+        fn meth_bad3<'bad>(x: &'bad i8) { //~ NOTE first declared here\n             'bad: loop { break 'bad; }\n             //~^ WARN label name `'bad` shadows a lifetime name that is already in scope\n+            //~| NOTE lifetime 'bad already in scope\n         }\n \n         fn meth_bad4<'a,'bad>(x: &'a i8, y: &'bad i8) {\n-            //~^ NOTE shadowed lifetime `'bad` declared here\n+            //~^ NOTE first declared here\n             'bad: loop { break 'bad; }\n             //~^ WARN label name `'bad` shadows a lifetime name that is already in scope\n+            //~| NOTE lifetime 'bad already in scope\n         }\n     }\n \n-    impl <'bad, 'e> Enum<'bad, 'e> { //~ NOTE shadowed lifetime `'bad` declared here\n+    impl <'bad, 'e> Enum<'bad, 'e> { //~ NOTE first declared here\n         fn meth_bad(&self) {\n             'bad: loop { break 'bad; }\n             //~^ WARN label name `'bad` shadows a lifetime name that is already in scope\n+            //~| NOTE lifetime 'bad already in scope\n         }\n     }\n-    impl <'d, 'bad> Enum<'d, 'bad> { //~ NOTE shadowed lifetime `'bad` declared here\n+    impl <'d, 'bad> Enum<'d, 'bad> { //~ NOTE first declared here\n         fn meth_bad2(&self) {\n             'bad: loop { break 'bad; }\n             //~^ WARN label name `'bad` shadows a lifetime name that is already in scope\n+            //~| NOTE lifetime 'bad already in scope\n         }\n     }\n     impl <'d, 'e> Enum<'d, 'e> {\n-        fn meth_bad3<'bad>(x: &'bad i8) { //~ NOTE shadowed lifetime `'bad` declared here\n+        fn meth_bad3<'bad>(x: &'bad i8) { //~ NOTE first declared here\n             'bad: loop { break 'bad; }\n             //~^ WARN label name `'bad` shadows a lifetime name that is already in scope\n+            //~| NOTE lifetime 'bad already in scope\n         }\n \n-        fn meth_bad4<'a,'bad>(x: &'bad i8) { //~ NOTE shadowed lifetime `'bad` declared here\n+        fn meth_bad4<'a,'bad>(x: &'bad i8) { //~ NOTE first declared here\n             'bad: loop { break 'bad; }\n             //~^ WARN label name `'bad` shadows a lifetime name that is already in scope\n+            //~| NOTE lifetime 'bad already in scope\n         }\n     }\n \n-    trait HasDefaultMethod1<'bad> { //~ NOTE shadowed lifetime `'bad` declared here\n+    trait HasDefaultMethod1<'bad> { //~ NOTE first declared here\n         fn meth_okay() {\n             'c: loop { break 'c; }\n         }\n         fn meth_bad(&self) {\n             'bad: loop { break 'bad; }\n             //~^ WARN label name `'bad` shadows a lifetime name that is already in scope\n+            //~| NOTE lifetime 'bad already in scope\n         }\n     }\n-    trait HasDefaultMethod2<'a,'bad> { //~ NOTE shadowed lifetime `'bad` declared here\n+    trait HasDefaultMethod2<'a,'bad> { //~ NOTE first declared here\n         fn meth_bad(&self) {\n             'bad: loop { break 'bad; }\n             //~^ WARN label name `'bad` shadows a lifetime name that is already in scope\n+            //~| NOTE lifetime 'bad already in scope\n         }\n     }\n     trait HasDefaultMethod3<'a,'b> {\n-        fn meth_bad<'bad>(&self) { //~ NOTE shadowed lifetime `'bad` declared here\n+        fn meth_bad<'bad>(&self) { //~ NOTE first declared here\n             'bad: loop { break 'bad; }\n             //~^ WARN label name `'bad` shadows a lifetime name that is already in scope\n+            //~| NOTE lifetime 'bad already in scope\n         }\n     }\n }"}, {"sha": "0a90917d975e5544516efe1bc931acda96c556bb", "filename": "src/test/compile-fail/loops-reject-lifetime-shadowing-label.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/e1d0de82cc40b666b88d4a6d2c9dcbc81d7ed27f/src%2Ftest%2Fcompile-fail%2Floops-reject-lifetime-shadowing-label.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e1d0de82cc40b666b88d4a6d2c9dcbc81d7ed27f/src%2Ftest%2Fcompile-fail%2Floops-reject-lifetime-shadowing-label.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Floops-reject-lifetime-shadowing-label.rs?ref=e1d0de82cc40b666b88d4a6d2c9dcbc81d7ed27f", "patch": "@@ -27,9 +27,10 @@ fn foo() {\n \n     let z = 3_i8;\n \n-    'a: loop { //~ NOTE shadowed label `'a` declared here\n+    'a: loop { //~ NOTE first declared here\n         let b = Box::new(|x: &i8| *x) as Box<for <'a> Fn(&'a i8) -> i8>;\n         //~^ WARN lifetime name `'a` shadows a label name that is already in scope\n+        //~| NOTE lifetime 'a already in scope\n         assert_eq!((*b)(&z), z);\n         break 'a;\n     }"}, {"sha": "b7e0c5b81d91846c9a4776f6daf522cbefe404a4", "filename": "src/test/compile-fail/method-call-err-msg.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/e1d0de82cc40b666b88d4a6d2c9dcbc81d7ed27f/src%2Ftest%2Fcompile-fail%2Fmethod-call-err-msg.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e1d0de82cc40b666b88d4a6d2c9dcbc81d7ed27f/src%2Ftest%2Fcompile-fail%2Fmethod-call-err-msg.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fmethod-call-err-msg.rs?ref=e1d0de82cc40b666b88d4a6d2c9dcbc81d7ed27f", "patch": "@@ -23,10 +23,9 @@ fn main() {\n      //~^ NOTE expected 0 parameters\n      .one()     //~ ERROR this function takes 1 parameter but 0 parameters were supplied\n      //~^ NOTE the following parameter type was expected\n-     //~| NOTE expected 1 parameter\n      .two(0);   //~ ERROR this function takes 2 parameters but 1 parameter was supplied\n      //~^ NOTE the following parameter types were expected\n-     //~| NOTE expected 2 parameters\n+     //~| NOTE isize, isize\n \n     let y = Foo;\n     y.zero()"}, {"sha": "660d48da4dbc93aa8b71dd329cd027e037ce80f1", "filename": "src/test/compile-fail/not-enough-arguments.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e1d0de82cc40b666b88d4a6d2c9dcbc81d7ed27f/src%2Ftest%2Fcompile-fail%2Fnot-enough-arguments.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e1d0de82cc40b666b88d4a6d2c9dcbc81d7ed27f/src%2Ftest%2Fcompile-fail%2Fnot-enough-arguments.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fnot-enough-arguments.rs?ref=e1d0de82cc40b666b88d4a6d2c9dcbc81d7ed27f", "patch": "@@ -19,6 +19,6 @@ fn foo(a: isize, b: isize, c: isize, d:isize) {\n fn main() {\n   foo(1, 2, 3);\n   //~^ ERROR this function takes 4 parameters but 3\n-  //~| NOTE the following parameter types were expected\n-  //~| NOTE expected 4 parameters\n+  //~| NOTE the following parameter types were expected:\n+  //~| NOTE isize, isize, isize, isize\n }"}, {"sha": "0aa9af3c8dad4a94de9ebde49ba09de24e46674b", "filename": "src/test/compile-fail/overloaded-calls-bad.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e1d0de82cc40b666b88d4a6d2c9dcbc81d7ed27f/src%2Ftest%2Fcompile-fail%2Foverloaded-calls-bad.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e1d0de82cc40b666b88d4a6d2c9dcbc81d7ed27f/src%2Ftest%2Fcompile-fail%2Foverloaded-calls-bad.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Foverloaded-calls-bad.rs?ref=e1d0de82cc40b666b88d4a6d2c9dcbc81d7ed27f", "patch": "@@ -42,9 +42,7 @@ fn main() {\n     let ans = s();\n     //~^ ERROR this function takes 1 parameter but 0 parameters were supplied\n     //~| NOTE the following parameter type was expected\n-    //~| NOTE expected 1 parameter\n     let ans = s(\"burma\", \"shave\");\n     //~^ ERROR this function takes 1 parameter but 2 parameters were supplied\n     //~| NOTE the following parameter type was expected\n-    //~| NOTE expected 1 parameter\n }"}, {"sha": "31283623a3ce6af33d21ef226da64fb2724cff60", "filename": "src/test/compile-fail/shadowed-lifetime.rs", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/e1d0de82cc40b666b88d4a6d2c9dcbc81d7ed27f/src%2Ftest%2Fcompile-fail%2Fshadowed-lifetime.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e1d0de82cc40b666b88d4a6d2c9dcbc81d7ed27f/src%2Ftest%2Fcompile-fail%2Fshadowed-lifetime.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fshadowed-lifetime.rs?ref=e1d0de82cc40b666b88d4a6d2c9dcbc81d7ed27f", "patch": "@@ -13,16 +13,18 @@\n struct Foo<'a>(&'a isize);\n \n impl<'a> Foo<'a> {\n-    //~^ NOTE shadowed lifetime `'a` declared here\n+    //~^ NOTE  first declared here\n     fn shadow_in_method<'a>(&'a self) -> &'a isize {\n         //~^ ERROR lifetime name `'a` shadows a lifetime name that is already in scope\n+        //~| NOTE lifetime 'a already in scope\n         self.0\n     }\n \n     fn shadow_in_type<'b>(&'b self) -> &'b isize {\n-        //~^ NOTE shadowed lifetime `'b` declared here\n+        //~^ NOTE  first declared here\n         let x: for<'b> fn(&'b isize) = panic!();\n         //~^ ERROR lifetime name `'b` shadows a lifetime name that is already in scope\n+        //~| NOTE lifetime 'b already in scope\n         self.0\n     }\n "}, {"sha": "334b8bb08aea54f0b140e92056a93f51b875f873", "filename": "src/test/compile-fail/variadic-ffi-3.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/e1d0de82cc40b666b88d4a6d2c9dcbc81d7ed27f/src%2Ftest%2Fcompile-fail%2Fvariadic-ffi-3.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e1d0de82cc40b666b88d4a6d2c9dcbc81d7ed27f/src%2Ftest%2Fcompile-fail%2Fvariadic-ffi-3.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fvariadic-ffi-3.rs?ref=e1d0de82cc40b666b88d4a6d2c9dcbc81d7ed27f", "patch": "@@ -17,11 +17,11 @@ extern \"C\" fn bar(f: isize, x: u8) {}\n fn main() {\n     unsafe {\n         foo(); //~ ERROR: this function takes at least 2 parameters but 0 parameters were supplied\n-        //~^ NOTE the following parameter types were expected\n-        //~| NOTE expected at least 2 parameters\n+               //~^ NOTE the following parameter types were expected:\n+               //~| NOTE isize, u8\n         foo(1); //~ ERROR: this function takes at least 2 parameters but 1 parameter was supplied\n-        //~^ NOTE the following parameter types were expected\n-        //~| NOTE expected at least 2 parameters\n+        //~^ NOTE the following parameter types were expected:\n+        //~| NOTE isize, u8\n \n         let x: unsafe extern \"C\" fn(f: isize, x: u8) = foo;\n         //~^ ERROR: mismatched types"}]}