{"sha": "5ff08569541b94d3ba8d645fb7fc5c1c75c6cda1", "node_id": "MDY6Q29tbWl0NzI0NzEyOjVmZjA4NTY5NTQxYjk0ZDNiYThkNjQ1ZmI3ZmM1YzFjNzVjNmNkYTE=", "commit": {"author": {"name": "Mark Rousskov", "email": "mark.simulacrum@gmail.com", "date": "2019-07-27T00:15:31Z"}, "committer": {"name": "Mark Rousskov", "email": "mark.simulacrum@gmail.com", "date": "2019-07-27T23:27:51Z"}, "message": "Simplify SaveHandler trait\n\nThis extracts the core visiting logic", "tree": {"sha": "d668f671a7e90a9b6b746bc5ffa82c141fd8ecf6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d668f671a7e90a9b6b746bc5ffa82c141fd8ecf6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5ff08569541b94d3ba8d645fb7fc5c1c75c6cda1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5ff08569541b94d3ba8d645fb7fc5c1c75c6cda1", "html_url": "https://github.com/rust-lang/rust/commit/5ff08569541b94d3ba8d645fb7fc5c1c75c6cda1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5ff08569541b94d3ba8d645fb7fc5c1c75c6cda1/comments", "author": {"login": "Mark-Simulacrum", "id": 5047365, "node_id": "MDQ6VXNlcjUwNDczNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/5047365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mark-Simulacrum", "html_url": "https://github.com/Mark-Simulacrum", "followers_url": "https://api.github.com/users/Mark-Simulacrum/followers", "following_url": "https://api.github.com/users/Mark-Simulacrum/following{/other_user}", "gists_url": "https://api.github.com/users/Mark-Simulacrum/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mark-Simulacrum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mark-Simulacrum/subscriptions", "organizations_url": "https://api.github.com/users/Mark-Simulacrum/orgs", "repos_url": "https://api.github.com/users/Mark-Simulacrum/repos", "events_url": "https://api.github.com/users/Mark-Simulacrum/events{/privacy}", "received_events_url": "https://api.github.com/users/Mark-Simulacrum/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Mark-Simulacrum", "id": 5047365, "node_id": "MDQ6VXNlcjUwNDczNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/5047365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mark-Simulacrum", "html_url": "https://github.com/Mark-Simulacrum", "followers_url": "https://api.github.com/users/Mark-Simulacrum/followers", "following_url": "https://api.github.com/users/Mark-Simulacrum/following{/other_user}", "gists_url": "https://api.github.com/users/Mark-Simulacrum/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mark-Simulacrum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mark-Simulacrum/subscriptions", "organizations_url": "https://api.github.com/users/Mark-Simulacrum/orgs", "repos_url": "https://api.github.com/users/Mark-Simulacrum/repos", "events_url": "https://api.github.com/users/Mark-Simulacrum/events{/privacy}", "received_events_url": "https://api.github.com/users/Mark-Simulacrum/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5b822891be160d11b4e53770c1174e68d8b091ca", "url": "https://api.github.com/repos/rust-lang/rust/commits/5b822891be160d11b4e53770c1174e68d8b091ca", "html_url": "https://github.com/rust-lang/rust/commit/5b822891be160d11b4e53770c1174e68d8b091ca"}], "stats": {"total": 64, "additions": 26, "deletions": 38}, "files": [{"sha": "6fce7ca1f33fbcc8a77d075197b9211ff1c54f71", "filename": "src/librustc_save_analysis/dump_visitor.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/5ff08569541b94d3ba8d645fb7fc5c1c75c6cda1/src%2Flibrustc_save_analysis%2Fdump_visitor.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5ff08569541b94d3ba8d645fb7fc5c1c75c6cda1/src%2Flibrustc_save_analysis%2Fdump_visitor.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_save_analysis%2Fdump_visitor.rs?ref=5ff08569541b94d3ba8d645fb7fc5c1c75c6cda1", "patch": "@@ -76,7 +76,7 @@ macro_rules! access_from_vis {\n }\n \n pub struct DumpVisitor<'l, 'tcx> {\n-    save_ctxt: SaveContext<'l, 'tcx>,\n+    pub save_ctxt: SaveContext<'l, 'tcx>,\n     tcx: TyCtxt<'tcx>,\n     dumper: Dumper,\n \n@@ -106,8 +106,8 @@ impl<'l, 'tcx> DumpVisitor<'l, 'tcx> {\n         }\n     }\n \n-    pub fn into_analysis(self) -> rls_data::Analysis {\n-        self.dumper.into_analysis()\n+    pub fn analysis(&self) -> &rls_data::Analysis {\n+        self.dumper.analysis()\n     }\n \n     fn nest_tables<F>(&mut self, item_id: NodeId, f: F)"}, {"sha": "b80778c8fec7ec5f37c5e71f16add9508ca2dfed", "filename": "src/librustc_save_analysis/dumper.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/5ff08569541b94d3ba8d645fb7fc5c1c75c6cda1/src%2Flibrustc_save_analysis%2Fdumper.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5ff08569541b94d3ba8d645fb7fc5c1c75c6cda1/src%2Flibrustc_save_analysis%2Fdumper.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_save_analysis%2Fdumper.rs?ref=5ff08569541b94d3ba8d645fb7fc5c1c75c6cda1", "patch": "@@ -22,8 +22,8 @@ impl Dumper {\n         }\n     }\n \n-    pub fn into_analysis(self) -> Analysis {\n-        self.result\n+    pub fn analysis(&self) -> &Analysis {\n+        &self.result\n     }\n }\n "}, {"sha": "5e66b11bfe30dc6686064c9db2864c8d9a6b2c0e", "filename": "src/librustc_save_analysis/lib.rs", "status": "modified", "additions": 21, "deletions": 33, "changes": 54, "blob_url": "https://github.com/rust-lang/rust/blob/5ff08569541b94d3ba8d645fb7fc5c1c75c6cda1/src%2Flibrustc_save_analysis%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5ff08569541b94d3ba8d645fb7fc5c1c75c6cda1/src%2Flibrustc_save_analysis%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_save_analysis%2Flib.rs?ref=5ff08569541b94d3ba8d645fb7fc5c1c75c6cda1", "patch": "@@ -43,7 +43,7 @@ use dump_visitor::DumpVisitor;\n use span_utils::SpanUtils;\n \n use rls_data::{Def, DefKind, ExternalCrateData, GlobalCrateId, MacroRef, Ref, RefKind, Relation,\n-               RelationKind, SpanData, Impl, ImplKind};\n+               RelationKind, SpanData, Impl, ImplKind, Analysis};\n use rls_data::config::Config;\n \n use log::{debug, error, info};\n@@ -1000,12 +1000,10 @@ impl<'l> Visitor<'l> for PathCollector<'l> {\n \n /// Defines what to do with the results of saving the analysis.\n pub trait SaveHandler {\n-    fn save<'l, 'tcx>(\n+    fn save(\n         &mut self,\n-        save_ctxt: SaveContext<'l, 'tcx>,\n-        krate: &ast::Crate,\n-        cratename: &str,\n-        input: &'l Input,\n+        save_ctxt: &SaveContext<'_, '_>,\n+        analysis: &Analysis,\n     );\n }\n \n@@ -1065,23 +1063,15 @@ impl<'a> DumpHandler<'a> {\n     }\n }\n \n-impl<'a> SaveHandler for DumpHandler<'a> {\n-    fn save<'l, 'tcx>(\n+impl SaveHandler for DumpHandler<'_> {\n+    fn save(\n         &mut self,\n-        save_ctxt: SaveContext<'l, 'tcx>,\n-        krate: &ast::Crate,\n-        cratename: &str,\n-        input: &'l Input,\n+        save_ctxt: &SaveContext<'_, '_>,\n+        analysis: &Analysis,\n     ) {\n         let sess = &save_ctxt.tcx.sess;\n         let (output, file_name) = self.output_file(&save_ctxt);\n-        let mut visitor = DumpVisitor::new(save_ctxt);\n-\n-        visitor.dump_crate_info(cratename, krate);\n-        visitor.dump_compilation_options(input, cratename);\n-        visit::walk_crate(&mut visitor, krate);\n-\n-        if let Err(e) = serde_json::to_writer(output, &visitor.into_analysis()) {\n+        if let Err(e) = serde_json::to_writer(output, &analysis) {\n             error!(\"Can't serialize save-analysis: {:?}\", e);\n         }\n \n@@ -1097,21 +1087,13 @@ pub struct CallbackHandler<'b> {\n     pub callback: &'b mut dyn FnMut(&rls_data::Analysis),\n }\n \n-impl<'b> SaveHandler for CallbackHandler<'b> {\n-    fn save<'l, 'tcx>(\n+impl SaveHandler for CallbackHandler<'_> {\n+    fn save(\n         &mut self,\n-        save_ctxt: SaveContext<'l, 'tcx>,\n-        krate: &ast::Crate,\n-        cratename: &str,\n-        input: &'l Input,\n+        _: &SaveContext<'_, '_>,\n+        analysis: &Analysis,\n     ) {\n-        let mut visitor = DumpVisitor::new(save_ctxt);\n-\n-        visitor.dump_crate_info(cratename, krate);\n-        visitor.dump_compilation_options(input, cratename);\n-        visit::walk_crate(&mut visitor, krate);\n-\n-        (self.callback)(&visitor.into_analysis())\n+        (self.callback)(analysis)\n     }\n }\n \n@@ -1142,7 +1124,13 @@ pub fn process_crate<'l, 'tcx, H: SaveHandler>(\n             impl_counter: Cell::new(0),\n         };\n \n-        handler.save(save_ctxt, krate, cratename, input)\n+        let mut visitor = DumpVisitor::new(save_ctxt);\n+\n+        visitor.dump_crate_info(cratename, krate);\n+        visitor.dump_compilation_options(input, cratename);\n+        visit::walk_crate(&mut visitor, krate);\n+\n+        handler.save(&visitor.save_ctxt, &visitor.analysis())\n     })\n }\n "}]}