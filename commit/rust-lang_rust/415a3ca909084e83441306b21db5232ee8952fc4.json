{"sha": "415a3ca909084e83441306b21db5232ee8952fc4", "node_id": "C_kwDOAAsO6NoAKDQxNWEzY2E5MDkwODRlODM0NDEzMDZiMjFkYjUyMzJlZTg5NTJmYzQ", "commit": {"author": {"name": "Guillaume Gomez", "email": "guillaume.gomez@huawei.com", "date": "2023-03-24T15:10:31Z"}, "committer": {"name": "Guillaume Gomez", "email": "guillaume.gomez@huawei.com", "date": "2023-03-24T15:10:31Z"}, "message": "Put back `is_derive_trait_collision` check", "tree": {"sha": "bbcb5585f9b6fb746efc2b05bdfd9e63e7e79821", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bbcb5585f9b6fb746efc2b05bdfd9e63e7e79821"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/415a3ca909084e83441306b21db5232ee8952fc4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/415a3ca909084e83441306b21db5232ee8952fc4", "html_url": "https://github.com/rust-lang/rust/commit/415a3ca909084e83441306b21db5232ee8952fc4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/415a3ca909084e83441306b21db5232ee8952fc4/comments", "author": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "committer": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "537fdbd75b13d278645fa223b0e4bee1c0e5dc19", "url": "https://api.github.com/repos/rust-lang/rust/commits/537fdbd75b13d278645fa223b0e4bee1c0e5dc19", "html_url": "https://github.com/rust-lang/rust/commit/537fdbd75b13d278645fa223b0e4bee1c0e5dc19"}], "stats": {"total": 53, "additions": 51, "deletions": 2}, "files": [{"sha": "0da56e70ed582e40d1aeb11bfb95d310b0b87fb8", "filename": "src/librustdoc/passes/collect_intra_doc_links.rs", "status": "modified", "additions": 29, "deletions": 2, "changes": 31, "blob_url": "https://github.com/rust-lang/rust/blob/415a3ca909084e83441306b21db5232ee8952fc4/src%2Flibrustdoc%2Fpasses%2Fcollect_intra_doc_links.rs", "raw_url": "https://github.com/rust-lang/rust/raw/415a3ca909084e83441306b21db5232ee8952fc4/src%2Flibrustdoc%2Fpasses%2Fcollect_intra_doc_links.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fpasses%2Fcollect_intra_doc_links.rs?ref=415a3ca909084e83441306b21db5232ee8952fc4", "patch": "@@ -806,6 +806,20 @@ fn trait_impls_for<'a>(\n     iter.collect()\n }\n \n+/// Check for resolve collisions between a trait and its derive.\n+///\n+/// These are common and we should just resolve to the trait in that case.\n+fn is_derive_trait_collision<T>(ns: &PerNS<Result<Vec<(Res, T)>, ResolutionFailure<'_>>>) -> bool {\n+    if let (&Ok(ref type_ns), &Ok(ref macro_ns)) = (&ns.type_ns, &ns.macro_ns) {\n+        type_ns.iter().any(|(res, _)| matches!(res, Res::Def(DefKind::Trait, _)))\n+            && macro_ns\n+                .iter()\n+                .any(|(res, _)| matches!(res, Res::Def(DefKind::Macro(MacroKind::Derive), _)))\n+    } else {\n+        false\n+    }\n+}\n+\n impl<'a, 'tcx> DocVisitor for LinkCollector<'a, 'tcx> {\n     fn visit_item(&mut self, item: &Item) {\n         self.resolve_links(item);\n@@ -1313,9 +1327,22 @@ impl LinkCollector<'_, '_> {\n                         disambiguator,\n                         candidates.into_iter().filter_map(|res| res.err()).collect(),\n                     );\n+                } else if len == 1 {\n+                    candidates.into_iter().filter_map(|res| res.ok()).flatten().collect::<Vec<_>>()\n+                } else {\n+                    let has_derive_trait_collision = is_derive_trait_collision(&candidates);\n+                    if len == 2 && has_derive_trait_collision {\n+                        candidates.type_ns.unwrap()\n+                    } else {\n+                        // If we're reporting an ambiguity, don't mention the namespaces that failed\n+                        let mut candidates = candidates.map(|candidate| candidate.ok());\n+                        // If there a collision between a trait and a derive, we ignore the derive.\n+                        if has_derive_trait_collision {\n+                            candidates.macro_ns = None;\n+                        }\n+                        candidates.into_iter().filter_map(|res| res).flatten().collect::<Vec<_>>()\n+                    }\n                 }\n-\n-                candidates.into_iter().filter_map(|res| res.ok()).flatten().collect::<Vec<_>>()\n             }\n         }\n     }"}, {"sha": "464c5f0d5439c4ee60f51f309021aedf9165a2c7", "filename": "tests/rustdoc-ui/intra-doc/issue-108653-associated-items-10.rs", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/415a3ca909084e83441306b21db5232ee8952fc4/tests%2Frustdoc-ui%2Fintra-doc%2Fissue-108653-associated-items-10.rs", "raw_url": "https://github.com/rust-lang/rust/raw/415a3ca909084e83441306b21db5232ee8952fc4/tests%2Frustdoc-ui%2Fintra-doc%2Fissue-108653-associated-items-10.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc-ui%2Fintra-doc%2Fissue-108653-associated-items-10.rs?ref=415a3ca909084e83441306b21db5232ee8952fc4", "patch": "@@ -0,0 +1,22 @@\n+// This test ensures that this warning doesn't show up:\n+// warning: `PartialEq` is both a trait and a derive macro\n+//  --> tests/rustdoc-ui/intra-doc/issue-108653-associated-items-10.rs:1:7\n+//   |\n+// 1 | //! [`PartialEq`]\n+//   |       ^^^^^^^^^ ambiguous link\n+//   |\n+//   = note: `#[warn(rustdoc::broken_intra_doc_links)]` on by default\n+// help: to link to the trait, prefix with `trait@`\n+//   |\n+// 1 | //! [`trait@PartialEq`]\n+//   |       ++++++\n+// help: to link to the derive macro, prefix with `derive@`\n+//   |\n+// 1 | //! [`derive@PartialEq`]\n+//   |       +++++++\n+\n+// check-pass\n+\n+#![deny(rustdoc::broken_intra_doc_links)]\n+\n+//! [`PartialEq`]"}]}