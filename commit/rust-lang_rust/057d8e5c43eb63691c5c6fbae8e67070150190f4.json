{"sha": "057d8e5c43eb63691c5c6fbae8e67070150190f4", "node_id": "C_kwDOAAsO6NoAKDA1N2Q4ZTVjNDNlYjYzNjkxYzVjNmZiYWU4ZTY3MDcwMTUwMTkwZjQ", "commit": {"author": {"name": "AndyJado", "email": "101876416+AndyJado@users.noreply.github.com", "date": "2022-11-09T12:57:44Z"}, "committer": {"name": "AndyJado", "email": "101876416+AndyJado@users.noreply.github.com", "date": "2022-11-09T13:15:31Z"}, "message": "struct error E0505", "tree": {"sha": "aac244acf54c20396bc5ac702dd14a7e741fc310", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/aac244acf54c20396bc5ac702dd14a7e741fc310"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/057d8e5c43eb63691c5c6fbae8e67070150190f4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/057d8e5c43eb63691c5c6fbae8e67070150190f4", "html_url": "https://github.com/rust-lang/rust/commit/057d8e5c43eb63691c5c6fbae8e67070150190f4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/057d8e5c43eb63691c5c6fbae8e67070150190f4/comments", "author": {"login": "AndyJado", "id": 101876416, "node_id": "U_kgDOBhKCwA", "avatar_url": "https://avatars.githubusercontent.com/u/101876416?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AndyJado", "html_url": "https://github.com/AndyJado", "followers_url": "https://api.github.com/users/AndyJado/followers", "following_url": "https://api.github.com/users/AndyJado/following{/other_user}", "gists_url": "https://api.github.com/users/AndyJado/gists{/gist_id}", "starred_url": "https://api.github.com/users/AndyJado/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AndyJado/subscriptions", "organizations_url": "https://api.github.com/users/AndyJado/orgs", "repos_url": "https://api.github.com/users/AndyJado/repos", "events_url": "https://api.github.com/users/AndyJado/events{/privacy}", "received_events_url": "https://api.github.com/users/AndyJado/received_events", "type": "User", "site_admin": false}, "committer": {"login": "AndyJado", "id": 101876416, "node_id": "U_kgDOBhKCwA", "avatar_url": "https://avatars.githubusercontent.com/u/101876416?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AndyJado", "html_url": "https://github.com/AndyJado", "followers_url": "https://api.github.com/users/AndyJado/followers", "following_url": "https://api.github.com/users/AndyJado/following{/other_user}", "gists_url": "https://api.github.com/users/AndyJado/gists{/gist_id}", "starred_url": "https://api.github.com/users/AndyJado/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AndyJado/subscriptions", "organizations_url": "https://api.github.com/users/AndyJado/orgs", "repos_url": "https://api.github.com/users/AndyJado/repos", "events_url": "https://api.github.com/users/AndyJado/events{/privacy}", "received_events_url": "https://api.github.com/users/AndyJado/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "abf259cc541214d1a08c8e8f74c2ce44fc310f76", "url": "https://api.github.com/repos/rust-lang/rust/commits/abf259cc541214d1a08c8e8f74c2ce44fc310f76", "html_url": "https://github.com/rust-lang/rust/commit/abf259cc541214d1a08c8e8f74c2ce44fc310f76"}], "stats": {"total": 51, "additions": 45, "deletions": 6}, "files": [{"sha": "01be379120dc7483c088daa4005b744bb386dfb8", "filename": "compiler/rustc_borrowck/src/borrowck_errors.rs", "status": "modified", "additions": 11, "deletions": 2, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/057d8e5c43eb63691c5c6fbae8e67070150190f4/compiler%2Frustc_borrowck%2Fsrc%2Fborrowck_errors.rs", "raw_url": "https://github.com/rust-lang/rust/raw/057d8e5c43eb63691c5c6fbae8e67070150190f4/compiler%2Frustc_borrowck%2Fsrc%2Fborrowck_errors.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_borrowck%2Fsrc%2Fborrowck_errors.rs?ref=057d8e5c43eb63691c5c6fbae8e67070150190f4", "patch": "@@ -8,9 +8,18 @@ impl<'cx, 'tcx> crate::MirBorrowckCtxt<'cx, 'tcx> {\n     pub(crate) fn cannot_move_when_borrowed(\n         &self,\n         span: Span,\n-        desc: &str,\n+        borrow_span: Span,\n+        place: &str,\n+        borrow_place: &str,\n+        value_place: &str,\n     ) -> DiagnosticBuilder<'cx, ErrorGuaranteed> {\n-        struct_span_err!(self, span, E0505, \"cannot move out of {} because it is borrowed\", desc,)\n+        self.infcx.tcx.sess.create_err(crate::session_diagnostics::MoveBorrow {\n+            place,\n+            span,\n+            borrow_place,\n+            value_place,\n+            borrow_span,\n+        })\n     }\n \n     pub(crate) fn cannot_use_when_mutably_borrowed("}, {"sha": "0f76cd1cdc1242824488d02474db9103d3d3388f", "filename": "compiler/rustc_borrowck/src/diagnostics/conflict_errors.rs", "status": "modified", "additions": 7, "deletions": 4, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/057d8e5c43eb63691c5c6fbae8e67070150190f4/compiler%2Frustc_borrowck%2Fsrc%2Fdiagnostics%2Fconflict_errors.rs", "raw_url": "https://github.com/rust-lang/rust/raw/057d8e5c43eb63691c5c6fbae8e67070150190f4/compiler%2Frustc_borrowck%2Fsrc%2Fdiagnostics%2Fconflict_errors.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_borrowck%2Fsrc%2Fdiagnostics%2Fconflict_errors.rs?ref=057d8e5c43eb63691c5c6fbae8e67070150190f4", "patch": "@@ -667,10 +667,13 @@ impl<'cx, 'tcx> MirBorrowckCtxt<'cx, 'tcx> {\n         let move_spans = self.move_spans(place.as_ref(), location);\n         let span = move_spans.args_or_use();\n \n-        let mut err =\n-            self.cannot_move_when_borrowed(span, &self.describe_any_place(place.as_ref()));\n-        err.span_label(borrow_span, format!(\"borrow of {} occurs here\", borrow_msg));\n-        err.span_label(span, format!(\"move out of {} occurs here\", value_msg));\n+        let mut err = self.cannot_move_when_borrowed(\n+            span,\n+            borrow_span,\n+            &self.describe_any_place(place.as_ref()),\n+            &borrow_msg,\n+            &value_msg,\n+        );\n \n         borrow_spans.var_path_only_subdiag(&mut err, crate::InitializationRequiringAction::Borrow);\n "}, {"sha": "577332c0744b84dd8447af7ab3519a33ef18abe0", "filename": "compiler/rustc_borrowck/src/session_diagnostics.rs", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/057d8e5c43eb63691c5c6fbae8e67070150190f4/compiler%2Frustc_borrowck%2Fsrc%2Fsession_diagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/057d8e5c43eb63691c5c6fbae8e67070150190f4/compiler%2Frustc_borrowck%2Fsrc%2Fsession_diagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_borrowck%2Fsrc%2Fsession_diagnostics.rs?ref=057d8e5c43eb63691c5c6fbae8e67070150190f4", "patch": "@@ -227,3 +227,16 @@ pub(crate) enum CaptureVarCause {\n         var_span: Span,\n     },\n }\n+\n+#[derive(Diagnostic)]\n+#[diag(borrowck_cannot_move_when_borrowed, code = \"E0505\")]\n+pub(crate) struct MoveBorrow<'a> {\n+    pub place: &'a str,\n+    pub borrow_place: &'a str,\n+    pub value_place: &'a str,\n+    #[primary_span]\n+    #[label(move_label)]\n+    pub span: Span,\n+    #[label]\n+    pub borrow_span: Span,\n+}"}, {"sha": "de47ada826444e00644e0edfc357973969a21f20", "filename": "compiler/rustc_error_messages/locales/en-US/borrowck.ftl", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/057d8e5c43eb63691c5c6fbae8e67070150190f4/compiler%2Frustc_error_messages%2Flocales%2Fen-US%2Fborrowck.ftl", "raw_url": "https://github.com/rust-lang/rust/raw/057d8e5c43eb63691c5c6fbae8e67070150190f4/compiler%2Frustc_error_messages%2Flocales%2Fen-US%2Fborrowck.ftl", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_error_messages%2Flocales%2Fen-US%2Fborrowck.ftl?ref=057d8e5c43eb63691c5c6fbae8e67070150190f4", "patch": "@@ -109,3 +109,17 @@ borrowck_var_move_by_use_place_in_generator =\n \n borrowck_var_move_by_use_place_in_closure =\n     move occurs due to use of {$place} in closure\n+\n+borrowck_cannot_move_when_borrowed =\n+    cannot move out of {$place ->\n+        [value] value\n+        *[other] {$place}\n+    } because it is borrowed\n+    .label = borrow of {$borrow_place ->\n+        [value] value\n+        *[other] {$borrow_place}\n+    } occurs here\n+    .move_label = move out of {$value_place ->\n+        [value] value\n+        *[other] {$value_place}\n+    } occurs here"}]}