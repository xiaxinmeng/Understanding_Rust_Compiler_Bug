{"sha": "1d94cc2a2249b65f62e78e4998761193c3bfed23", "node_id": "MDY6Q29tbWl0NzI0NzEyOjFkOTRjYzJhMjI0OWI2NWY2MmU3OGU0OTk4NzYxMTkzYzNiZmVkMjM=", "commit": {"author": {"name": "mark", "email": "markm@cs.wisc.edu", "date": "2019-01-15T18:25:41Z"}, "committer": {"name": "Mark Mansi", "email": "markm@cs.wisc.edu", "date": "2019-02-07T18:15:31Z"}, "message": "fix existing tests", "tree": {"sha": "f19075ce89a203fd76ce2840808828b5fea823f6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f19075ce89a203fd76ce2840808828b5fea823f6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1d94cc2a2249b65f62e78e4998761193c3bfed23", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1d94cc2a2249b65f62e78e4998761193c3bfed23", "html_url": "https://github.com/rust-lang/rust/commit/1d94cc2a2249b65f62e78e4998761193c3bfed23", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1d94cc2a2249b65f62e78e4998761193c3bfed23/comments", "author": {"login": "mark-i-m", "id": 8827840, "node_id": "MDQ6VXNlcjg4Mjc4NDA=", "avatar_url": "https://avatars.githubusercontent.com/u/8827840?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mark-i-m", "html_url": "https://github.com/mark-i-m", "followers_url": "https://api.github.com/users/mark-i-m/followers", "following_url": "https://api.github.com/users/mark-i-m/following{/other_user}", "gists_url": "https://api.github.com/users/mark-i-m/gists{/gist_id}", "starred_url": "https://api.github.com/users/mark-i-m/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mark-i-m/subscriptions", "organizations_url": "https://api.github.com/users/mark-i-m/orgs", "repos_url": "https://api.github.com/users/mark-i-m/repos", "events_url": "https://api.github.com/users/mark-i-m/events{/privacy}", "received_events_url": "https://api.github.com/users/mark-i-m/received_events", "type": "User", "site_admin": false}, "committer": {"login": "mark-i-m", "id": 8827840, "node_id": "MDQ6VXNlcjg4Mjc4NDA=", "avatar_url": "https://avatars.githubusercontent.com/u/8827840?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mark-i-m", "html_url": "https://github.com/mark-i-m", "followers_url": "https://api.github.com/users/mark-i-m/followers", "following_url": "https://api.github.com/users/mark-i-m/following{/other_user}", "gists_url": "https://api.github.com/users/mark-i-m/gists{/gist_id}", "starred_url": "https://api.github.com/users/mark-i-m/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mark-i-m/subscriptions", "organizations_url": "https://api.github.com/users/mark-i-m/orgs", "repos_url": "https://api.github.com/users/mark-i-m/repos", "events_url": "https://api.github.com/users/mark-i-m/events{/privacy}", "received_events_url": "https://api.github.com/users/mark-i-m/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1b41c9a42e3d5231df8621ae4b900cddecc12a75", "url": "https://api.github.com/repos/rust-lang/rust/commits/1b41c9a42e3d5231df8621ae4b900cddecc12a75", "html_url": "https://github.com/rust-lang/rust/commit/1b41c9a42e3d5231df8621ae4b900cddecc12a75"}], "stats": {"total": 64, "additions": 32, "deletions": 32}, "files": [{"sha": "488339b025dcef7b147ef38fe434debd6bb81c7d", "filename": "src/test/run-pass/macros/macro-follow.rs", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/1d94cc2a2249b65f62e78e4998761193c3bfed23/src%2Ftest%2Frun-pass%2Fmacros%2Fmacro-follow.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1d94cc2a2249b65f62e78e4998761193c3bfed23/src%2Ftest%2Frun-pass%2Fmacros%2Fmacro-follow.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fmacros%2Fmacro-follow.rs?ref=1d94cc2a2249b65f62e78e4998761193c3bfed23", "patch": "@@ -73,7 +73,7 @@ macro_rules! follow_block {\n     ($b:block $t:ty) => {};\n     ($b:block $s:stmt) => {};\n     ($b:block $p:path) => {};\n-    ($b:block $b:block) => {};\n+    ($b:block $c:block) => {};\n     ($b:block $i:ident) => {};\n     ($b:block $t:tt) => {};\n     ($b:block $i:item) => {};\n@@ -99,9 +99,9 @@ macro_rules! follow_ident {\n     ($i:ident $s:stmt) => {};\n     ($i:ident $p:path) => {};\n     ($i:ident $b:block) => {};\n-    ($i:ident $i:ident) => {};\n+    ($i:ident $j:ident) => {};\n     ($i:ident $t:tt) => {};\n-    ($i:ident $i:item) => {};\n+    ($i:ident $j:item) => {};\n     ($i:ident $m:meta) => {};\n }\n // FOLLOW(tt) = any token\n@@ -120,12 +120,12 @@ macro_rules! follow_tt {\n     ($t:tt ident) => {};\n     ($t:tt $p:pat) => {};\n     ($t:tt $e:expr) => {};\n-    ($t:tt $t:ty) => {};\n+    ($t:tt $v:ty) => {};\n     ($t:tt $s:stmt) => {};\n     ($t:tt $p:path) => {};\n     ($t:tt $b:block) => {};\n     ($t:tt $i:ident) => {};\n-    ($t:tt $t:tt) => {};\n+    ($t:tt $v:tt) => {};\n     ($t:tt $i:item) => {};\n     ($t:tt $m:meta) => {};\n }\n@@ -149,9 +149,9 @@ macro_rules! follow_item {\n     ($i:item $s:stmt) => {};\n     ($i:item $p:path) => {};\n     ($i:item $b:block) => {};\n-    ($i:item $i:ident) => {};\n+    ($i:item $j:ident) => {};\n     ($i:item $t:tt) => {};\n-    ($i:item $i:item) => {};\n+    ($i:item $j:item) => {};\n     ($i:item $m:meta) => {};\n }\n // FOLLOW(meta) = any token\n@@ -177,7 +177,7 @@ macro_rules! follow_meta {\n     ($m:meta $i:ident) => {};\n     ($m:meta $t:tt) => {};\n     ($m:meta $i:item) => {};\n-    ($m:meta $m:meta) => {};\n+    ($m:meta $n:meta) => {};\n }\n \n fn main() {}"}, {"sha": "10b44e0017532498b97b18d159b6f83de5a6f58f", "filename": "src/test/ui/macros/macro-follow.rs", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/1d94cc2a2249b65f62e78e4998761193c3bfed23/src%2Ftest%2Fui%2Fmacros%2Fmacro-follow.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1d94cc2a2249b65f62e78e4998761193c3bfed23/src%2Ftest%2Fui%2Fmacros%2Fmacro-follow.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmacros%2Fmacro-follow.rs?ref=1d94cc2a2249b65f62e78e4998761193c3bfed23", "patch": "@@ -12,11 +12,11 @@ macro_rules! follow_pat {\n     ($p:pat >) => {};        //~ERROR `$p:pat` is followed by `>`\n     ($p:pat +) => {};        //~ERROR `$p:pat` is followed by `+`\n     ($p:pat ident) => {};    //~ERROR `$p:pat` is followed by `ident`\n-    ($p:pat $p:pat) => {};   //~ERROR `$p:pat` is followed by `$p:pat`\n+    ($p:pat $q:pat) => {};   //~ERROR `$p:pat` is followed by `$q:pat`\n     ($p:pat $e:expr) => {};  //~ERROR `$p:pat` is followed by `$e:expr`\n     ($p:pat $t:ty) => {};    //~ERROR `$p:pat` is followed by `$t:ty`\n     ($p:pat $s:stmt) => {};  //~ERROR `$p:pat` is followed by `$s:stmt`\n-    ($p:pat $p:path) => {};  //~ERROR `$p:pat` is followed by `$p:path`\n+    ($p:pat $q:path) => {};  //~ERROR `$p:pat` is followed by `$q:path`\n     ($p:pat $b:block) => {}; //~ERROR `$p:pat` is followed by `$b:block`\n     ($p:pat $i:ident) => {}; //~ERROR `$p:pat` is followed by `$i:ident`\n     ($p:pat $t:tt) => {};    //~ERROR `$p:pat` is followed by `$t:tt`\n@@ -37,7 +37,7 @@ macro_rules! follow_expr {\n     ($e:expr if) => {};       //~ERROR `$e:expr` is followed by `if`\n     ($e:expr in) => {};       //~ERROR `$e:expr` is followed by `in`\n     ($e:expr $p:pat) => {};   //~ERROR `$e:expr` is followed by `$p:pat`\n-    ($e:expr $e:expr) => {};  //~ERROR `$e:expr` is followed by `$e:expr`\n+    ($e:expr $f:expr) => {};  //~ERROR `$e:expr` is followed by `$f:expr`\n     ($e:expr $t:ty) => {};    //~ERROR `$e:expr` is followed by `$t:ty`\n     ($e:expr $s:stmt) => {};  //~ERROR `$e:expr` is followed by `$s:stmt`\n     ($e:expr $p:path) => {};  //~ERROR `$e:expr` is followed by `$p:path`\n@@ -57,12 +57,12 @@ macro_rules! follow_ty {\n     ($t:ty if) => {};       //~ERROR `$t:ty` is followed by `if`\n     ($t:ty $p:pat) => {};   //~ERROR `$t:ty` is followed by `$p:pat`\n     ($t:ty $e:expr) => {};  //~ERROR `$t:ty` is followed by `$e:expr`\n-    ($t:ty $t:ty) => {};    //~ERROR `$t:ty` is followed by `$t:ty`\n+    ($t:ty $r:ty) => {};    //~ERROR `$t:ty` is followed by `$r:ty`\n     ($t:ty $s:stmt) => {};  //~ERROR `$t:ty` is followed by `$s:stmt`\n     ($t:ty $p:path) => {};  //~ERROR `$t:ty` is followed by `$p:path`\n     ($t:ty $b:block) => {}; // ok (RFC 1494)\n     ($t:ty $i:ident) => {}; //~ERROR `$t:ty` is followed by `$i:ident`\n-    ($t:ty $t:tt) => {};    //~ERROR `$t:ty` is followed by `$t:tt`\n+    ($t:ty $r:tt) => {};    //~ERROR `$t:ty` is followed by `$r:tt`\n     ($t:ty $i:item) => {};  //~ERROR `$t:ty` is followed by `$i:item`\n     ($t:ty $m:meta) => {};  //~ERROR `$t:ty` is followed by `$m:meta`\n }\n@@ -82,7 +82,7 @@ macro_rules! follow_stmt {\n     ($s:stmt $p:pat) => {};   //~ERROR `$s:stmt` is followed by `$p:pat`\n     ($s:stmt $e:expr) => {};  //~ERROR `$s:stmt` is followed by `$e:expr`\n     ($s:stmt $t:ty) => {};    //~ERROR `$s:stmt` is followed by `$t:ty`\n-    ($s:stmt $s:stmt) => {};  //~ERROR `$s:stmt` is followed by `$s:stmt`\n+    ($s:stmt $t:stmt) => {};  //~ERROR `$s:stmt` is followed by `$t:stmt`\n     ($s:stmt $p:path) => {};  //~ERROR `$s:stmt` is followed by `$p:path`\n     ($s:stmt $b:block) => {}; //~ERROR `$s:stmt` is followed by `$b:block`\n     ($s:stmt $i:ident) => {}; //~ERROR `$s:stmt` is followed by `$i:ident`\n@@ -97,11 +97,11 @@ macro_rules! follow_path {\n     ($p:path +) => {};        //~ERROR `$p:path` is followed by `+`\n     ($p:path ident) => {};    //~ERROR `$p:path` is followed by `ident`\n     ($p:path if) => {};       //~ERROR `$p:path` is followed by `if`\n-    ($p:path $p:pat) => {};   //~ERROR `$p:path` is followed by `$p:pat`\n+    ($p:path $q:pat) => {};   //~ERROR `$p:path` is followed by `$q:pat`\n     ($p:path $e:expr) => {};  //~ERROR `$p:path` is followed by `$e:expr`\n     ($p:path $t:ty) => {};    //~ERROR `$p:path` is followed by `$t:ty`\n     ($p:path $s:stmt) => {};  //~ERROR `$p:path` is followed by `$s:stmt`\n-    ($p:path $p:path) => {};  //~ERROR `$p:path` is followed by `$p:path`\n+    ($p:path $q:path) => {};  //~ERROR `$p:path` is followed by `$q:path`\n     ($p:path $b:block) => {}; // ok (RFC 1494)\n     ($p:path $i:ident) => {}; //~ERROR `$p:path` is followed by `$i:ident`\n     ($p:path $t:tt) => {};    //~ERROR `$p:path` is followed by `$t:tt`"}, {"sha": "e3302eac4ac086666d7b3dc9d4f3181623067148", "filename": "src/test/ui/macros/macro-follow.stderr", "status": "modified", "additions": 16, "deletions": 16, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/1d94cc2a2249b65f62e78e4998761193c3bfed23/src%2Ftest%2Fui%2Fmacros%2Fmacro-follow.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1d94cc2a2249b65f62e78e4998761193c3bfed23/src%2Ftest%2Fui%2Fmacros%2Fmacro-follow.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmacros%2Fmacro-follow.stderr?ref=1d94cc2a2249b65f62e78e4998761193c3bfed23", "patch": "@@ -54,10 +54,10 @@ LL |     ($p:pat ident) => {};    //~ERROR `$p:pat` is followed by `ident`\n    |\n    = note: allowed there are: `=>`, `,`, `=`, `|`, `if` or `in`\n \n-error: `$p:pat` is followed by `$p:pat`, which is not allowed for `pat` fragments\n+error: `$p:pat` is followed by `$q:pat`, which is not allowed for `pat` fragments\n   --> $DIR/macro-follow.rs:15:13\n    |\n-LL |     ($p:pat $p:pat) => {};   //~ERROR `$p:pat` is followed by `$p:pat`\n+LL |     ($p:pat $q:pat) => {};   //~ERROR `$p:pat` is followed by `$q:pat`\n    |             ^^^^^^ not allowed after `pat` fragments\n    |\n    = note: allowed there are: `=>`, `,`, `=`, `|`, `if` or `in`\n@@ -86,10 +86,10 @@ LL |     ($p:pat $s:stmt) => {};  //~ERROR `$p:pat` is followed by `$s:stmt`\n    |\n    = note: allowed there are: `=>`, `,`, `=`, `|`, `if` or `in`\n \n-error: `$p:pat` is followed by `$p:path`, which is not allowed for `pat` fragments\n+error: `$p:pat` is followed by `$q:path`, which is not allowed for `pat` fragments\n   --> $DIR/macro-follow.rs:19:13\n    |\n-LL |     ($p:pat $p:path) => {};  //~ERROR `$p:pat` is followed by `$p:path`\n+LL |     ($p:pat $q:path) => {};  //~ERROR `$p:pat` is followed by `$q:path`\n    |             ^^^^^^^ not allowed after `pat` fragments\n    |\n    = note: allowed there are: `=>`, `,`, `=`, `|`, `if` or `in`\n@@ -230,10 +230,10 @@ LL |     ($e:expr $p:pat) => {};   //~ERROR `$e:expr` is followed by `$p:pat`\n    |\n    = note: allowed there are: `=>`, `,` or `;`\n \n-error: `$e:expr` is followed by `$e:expr`, which is not allowed for `expr` fragments\n+error: `$e:expr` is followed by `$f:expr`, which is not allowed for `expr` fragments\n   --> $DIR/macro-follow.rs:40:14\n    |\n-LL |     ($e:expr $e:expr) => {};  //~ERROR `$e:expr` is followed by `$e:expr`\n+LL |     ($e:expr $f:expr) => {};  //~ERROR `$e:expr` is followed by `$f:expr`\n    |              ^^^^^^^ not allowed after `expr` fragments\n    |\n    = note: allowed there are: `=>`, `,` or `;`\n@@ -350,10 +350,10 @@ LL |     ($t:ty $e:expr) => {};  //~ERROR `$t:ty` is followed by `$e:expr`\n    |\n    = note: allowed there are: `{`, `[`, `=>`, `,`, `>`, `=`, `:`, `;`, `|`, `as` or `where`\n \n-error: `$t:ty` is followed by `$t:ty`, which is not allowed for `ty` fragments\n+error: `$t:ty` is followed by `$r:ty`, which is not allowed for `ty` fragments\n   --> $DIR/macro-follow.rs:60:12\n    |\n-LL |     ($t:ty $t:ty) => {};    //~ERROR `$t:ty` is followed by `$t:ty`\n+LL |     ($t:ty $r:ty) => {};    //~ERROR `$t:ty` is followed by `$r:ty`\n    |            ^^^^^ not allowed after `ty` fragments\n    |\n    = note: allowed there are: `{`, `[`, `=>`, `,`, `>`, `=`, `:`, `;`, `|`, `as` or `where`\n@@ -382,10 +382,10 @@ LL |     ($t:ty $i:ident) => {}; //~ERROR `$t:ty` is followed by `$i:ident`\n    |\n    = note: allowed there are: `{`, `[`, `=>`, `,`, `>`, `=`, `:`, `;`, `|`, `as` or `where`\n \n-error: `$t:ty` is followed by `$t:tt`, which is not allowed for `ty` fragments\n+error: `$t:ty` is followed by `$r:tt`, which is not allowed for `ty` fragments\n   --> $DIR/macro-follow.rs:65:12\n    |\n-LL |     ($t:ty $t:tt) => {};    //~ERROR `$t:ty` is followed by `$t:tt`\n+LL |     ($t:ty $r:tt) => {};    //~ERROR `$t:ty` is followed by `$r:tt`\n    |            ^^^^^ not allowed after `ty` fragments\n    |\n    = note: allowed there are: `{`, `[`, `=>`, `,`, `>`, `=`, `:`, `;`, `|`, `as` or `where`\n@@ -518,10 +518,10 @@ LL |     ($s:stmt $t:ty) => {};    //~ERROR `$s:stmt` is followed by `$t:ty`\n    |\n    = note: allowed there are: `=>`, `,` or `;`\n \n-error: `$s:stmt` is followed by `$s:stmt`, which is not allowed for `stmt` fragments\n+error: `$s:stmt` is followed by `$t:stmt`, which is not allowed for `stmt` fragments\n   --> $DIR/macro-follow.rs:85:14\n    |\n-LL |     ($s:stmt $s:stmt) => {};  //~ERROR `$s:stmt` is followed by `$s:stmt`\n+LL |     ($s:stmt $t:stmt) => {};  //~ERROR `$s:stmt` is followed by `$t:stmt`\n    |              ^^^^^^^ not allowed after `stmt` fragments\n    |\n    = note: allowed there are: `=>`, `,` or `;`\n@@ -606,10 +606,10 @@ LL |     ($p:path if) => {};       //~ERROR `$p:path` is followed by `if`\n    |\n    = note: allowed there are: `{`, `[`, `=>`, `,`, `>`, `=`, `:`, `;`, `|`, `as` or `where`\n \n-error: `$p:path` is followed by `$p:pat`, which is not allowed for `path` fragments\n+error: `$p:path` is followed by `$q:pat`, which is not allowed for `path` fragments\n   --> $DIR/macro-follow.rs:100:14\n    |\n-LL |     ($p:path $p:pat) => {};   //~ERROR `$p:path` is followed by `$p:pat`\n+LL |     ($p:path $q:pat) => {};   //~ERROR `$p:path` is followed by `$q:pat`\n    |              ^^^^^^ not allowed after `path` fragments\n    |\n    = note: allowed there are: `{`, `[`, `=>`, `,`, `>`, `=`, `:`, `;`, `|`, `as` or `where`\n@@ -638,10 +638,10 @@ LL |     ($p:path $s:stmt) => {};  //~ERROR `$p:path` is followed by `$s:stmt`\n    |\n    = note: allowed there are: `{`, `[`, `=>`, `,`, `>`, `=`, `:`, `;`, `|`, `as` or `where`\n \n-error: `$p:path` is followed by `$p:path`, which is not allowed for `path` fragments\n+error: `$p:path` is followed by `$q:path`, which is not allowed for `path` fragments\n   --> $DIR/macro-follow.rs:104:14\n    |\n-LL |     ($p:path $p:path) => {};  //~ERROR `$p:path` is followed by `$p:path`\n+LL |     ($p:path $q:path) => {};  //~ERROR `$p:path` is followed by `$q:path`\n    |              ^^^^^^^ not allowed after `path` fragments\n    |\n    = note: allowed there are: `{`, `[`, `=>`, `,`, `>`, `=`, `:`, `;`, `|`, `as` or `where`"}]}