{"sha": "1af7524d20ef0dacff1e063268a10c6eda6345ea", "node_id": "MDY6Q29tbWl0NzI0NzEyOjFhZjc1MjRkMjBlZjBkYWNmZjFlMDYzMjY4YTEwYzZlZGE2MzQ1ZWE=", "commit": {"author": {"name": "Yuki Okushi", "email": "huyuumi.dev@gmail.com", "date": "2020-01-10T19:50:54Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-01-10T19:50:54Z"}, "message": "Rollup merge of #68059 - jethrogb:jb/target-llvm-args, r=alexcrichton\n\nAllow specifying LLVM args in target specifications", "tree": {"sha": "6d2a39ee2c8a32a361b6a6fdf507a038add0b6ee", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6d2a39ee2c8a32a361b6a6fdf507a038add0b6ee"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1af7524d20ef0dacff1e063268a10c6eda6345ea", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJeGNWeCRBK7hj4Ov3rIwAAdHIIAFPDNyV3TEI71kL5w5Lh17U/\n5nbyR/0NH/jx5uUUQgFpHG1m08utG7DqCth3RTh5mfNdtqMsLATe76t+2McdgxOZ\nitebv39hGuWhRQCSQynSzP8ljSFABideffAG1HwWdvmQ/FjMSdl0J5YL+vH0oPVO\nmbYVL8/u5o/s4WeyAx04CTFO+ALcIy5QEWAC+QIUto1vZMZdf4ToJBZsBw5xxjrx\nE9X7lhPbEzlIUWLhjFby411emD0SLpktVhOHcTX8xZ1AYZQDRCMSGCUjrdXGm9aQ\n7/SmJzibqs+6g0pam63F78FnhK4dYkOiRt/+0m6kE8bqXy2IsbGRvX6HkwoMYgY=\n=2o5l\n-----END PGP SIGNATURE-----\n", "payload": "tree 6d2a39ee2c8a32a361b6a6fdf507a038add0b6ee\nparent 7ae0618e0af852c3e777272a29419f85eaf033cc\nparent afced941555ecaa7fff2e11c8396bca58384d760\nauthor Yuki Okushi <huyuumi.dev@gmail.com> 1578685854 +0900\ncommitter GitHub <noreply@github.com> 1578685854 +0900\n\nRollup merge of #68059 - jethrogb:jb/target-llvm-args, r=alexcrichton\n\nAllow specifying LLVM args in target specifications\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1af7524d20ef0dacff1e063268a10c6eda6345ea", "html_url": "https://github.com/rust-lang/rust/commit/1af7524d20ef0dacff1e063268a10c6eda6345ea", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1af7524d20ef0dacff1e063268a10c6eda6345ea/comments", "author": {"login": "JohnTitor", "id": 25030997, "node_id": "MDQ6VXNlcjI1MDMwOTk3", "avatar_url": "https://avatars.githubusercontent.com/u/25030997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JohnTitor", "html_url": "https://github.com/JohnTitor", "followers_url": "https://api.github.com/users/JohnTitor/followers", "following_url": "https://api.github.com/users/JohnTitor/following{/other_user}", "gists_url": "https://api.github.com/users/JohnTitor/gists{/gist_id}", "starred_url": "https://api.github.com/users/JohnTitor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JohnTitor/subscriptions", "organizations_url": "https://api.github.com/users/JohnTitor/orgs", "repos_url": "https://api.github.com/users/JohnTitor/repos", "events_url": "https://api.github.com/users/JohnTitor/events{/privacy}", "received_events_url": "https://api.github.com/users/JohnTitor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7ae0618e0af852c3e777272a29419f85eaf033cc", "url": "https://api.github.com/repos/rust-lang/rust/commits/7ae0618e0af852c3e777272a29419f85eaf033cc", "html_url": "https://github.com/rust-lang/rust/commit/7ae0618e0af852c3e777272a29419f85eaf033cc"}, {"sha": "afced941555ecaa7fff2e11c8396bca58384d760", "url": "https://api.github.com/repos/rust-lang/rust/commits/afced941555ecaa7fff2e11c8396bca58384d760", "html_url": "https://github.com/rust-lang/rust/commit/afced941555ecaa7fff2e11c8396bca58384d760"}], "stats": {"total": 21, "additions": 12, "deletions": 9}, "files": [{"sha": "52613fef7e612b0def79aa7d451130e96adbc9c1", "filename": "src/librustc_codegen_llvm/llvm_util.rs", "status": "modified", "additions": 6, "deletions": 9, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/1af7524d20ef0dacff1e063268a10c6eda6345ea/src%2Flibrustc_codegen_llvm%2Fllvm_util.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1af7524d20ef0dacff1e063268a10c6eda6345ea/src%2Flibrustc_codegen_llvm%2Fllvm_util.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_llvm%2Fllvm_util.rs?ref=1af7524d20ef0dacff1e063268a10c6eda6345ea", "patch": "@@ -46,7 +46,7 @@ fn require_inited() {\n }\n \n unsafe fn configure_llvm(sess: &Session) {\n-    let n_args = sess.opts.cg.llvm_args.len();\n+    let n_args = sess.opts.cg.llvm_args.len() + sess.target.target.options.llvm_args.len();\n     let mut llvm_c_strs = Vec::with_capacity(n_args + 1);\n     let mut llvm_args = Vec::with_capacity(n_args + 1);\n \n@@ -56,14 +56,11 @@ unsafe fn configure_llvm(sess: &Session) {\n         full_arg.trim().split(|c: char| c == '=' || c.is_whitespace()).next().unwrap_or(\"\")\n     }\n \n-    let user_specified_args: FxHashSet<_> = sess\n-        .opts\n-        .cg\n-        .llvm_args\n-        .iter()\n-        .map(|s| llvm_arg_to_arg_name(s))\n-        .filter(|s| s.len() > 0)\n-        .collect();\n+    let cg_opts = sess.opts.cg.llvm_args.iter();\n+    let tg_opts = sess.target.target.options.llvm_args.iter();\n+\n+    let user_specified_args: FxHashSet<_> =\n+        cg_opts.chain(tg_opts).map(|s| llvm_arg_to_arg_name(s)).filter(|s| s.len() > 0).collect();\n \n     {\n         // This adds the given argument to LLVM. Unless `force` is true"}, {"sha": "528ffdf93a01a43ad82822bfa1244a7b61d4eb83", "filename": "src/librustc_target/spec/mod.rs", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/1af7524d20ef0dacff1e063268a10c6eda6345ea/src%2Flibrustc_target%2Fspec%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1af7524d20ef0dacff1e063268a10c6eda6345ea/src%2Flibrustc_target%2Fspec%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Fmod.rs?ref=1af7524d20ef0dacff1e063268a10c6eda6345ea", "patch": "@@ -805,6 +805,9 @@ pub struct TargetOptions {\n \n     /// Whether or not RelaxElfRelocation flag will be passed to the linker\n     pub relax_elf_relocations: bool,\n+\n+    /// Additional arguments to pass to LLVM, similar to the `-C llvm-args` codegen option.\n+    pub llvm_args: Vec<String>,\n }\n \n impl Default for TargetOptions {\n@@ -893,6 +896,7 @@ impl Default for TargetOptions {\n             target_mcount: \"mcount\".to_string(),\n             llvm_abiname: \"\".to_string(),\n             relax_elf_relocations: false,\n+            llvm_args: vec![],\n         }\n     }\n }\n@@ -1206,6 +1210,7 @@ impl Target {\n         key!(target_mcount);\n         key!(llvm_abiname);\n         key!(relax_elf_relocations, bool);\n+        key!(llvm_args, list);\n \n         if let Some(array) = obj.find(\"abi-blacklist\").and_then(Json::as_array) {\n             for name in array.iter().filter_map(|abi| abi.as_string()) {\n@@ -1433,6 +1438,7 @@ impl ToJson for Target {\n         target_option_val!(target_mcount);\n         target_option_val!(llvm_abiname);\n         target_option_val!(relax_elf_relocations);\n+        target_option_val!(llvm_args);\n \n         if default.abi_blacklist != self.options.abi_blacklist {\n             d.insert("}]}