{"sha": "2e6eb0070bb031755d490324dd69a9795988d1c4", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJlNmViMDA3MGJiMDMxNzU1ZDQ5MDMyNGRkNjlhOTc5NTk4OGQxYzQ=", "commit": {"author": {"name": "Oliver S\u0336c\u0336h\u0336n\u0336e\u0336i\u0336d\u0336e\u0336r Scherer", "email": "github35764891676564198441@oli-obk.de", "date": "2018-11-14T08:11:33Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2018-11-14T08:11:33Z"}, "message": "Merge pull request #518 from RalfJung/readme\n\nadd a description of what miri can do for you", "tree": {"sha": "f6a251aa99392042b628678a3685506bf1d66f1e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f6a251aa99392042b628678a3685506bf1d66f1e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2e6eb0070bb031755d490324dd69a9795988d1c4", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJb69i1CRBK7hj4Ov3rIwAAdHIIAHz1VR24jxk/PByiHj18pU6V\nB5PgPeTqyFnvqJ2eP8ZRe7hGBedsAFGZU5HQotZiReo4WRDrfr0ypufMZK4jayQ/\nvHJKF+0hy/VWJrxz8n+qtKnHaS+U9I+qFHFn++HjMAlXRnCTCyqWbj44gzh6kqiX\nHwwGawzSXbfsrVvxflWCq+j/ueFwJyngjnK9EsRAtUiMqL3ZfdPi8oZWtFe1Tee1\nn+qtdy3U64DYt+raIExRWSCOyXDdT+qyhRoWl1VDk+SbEVvpTUR3W3gYO7FT/U4X\nFwi6a0sJpQfXyMUrOp1tDGzJbI7xbnI5iRKWoMMuaubmEwvu7zDXjOxmI6mTLrQ=\n=5CKC\n-----END PGP SIGNATURE-----\n", "payload": "tree f6a251aa99392042b628678a3685506bf1d66f1e\nparent 60a6a817d0b142bcd6e7444d5872a4d9b310c05e\nparent bf3e376049d122ca47d692cca8cff7134a9746f4\nauthor Oliver S\u0336c\u0336h\u0336n\u0336e\u0336i\u0336d\u0336e\u0336r Scherer <github35764891676564198441@oli-obk.de> 1542183093 +0100\ncommitter GitHub <noreply@github.com> 1542183093 +0100\n\nMerge pull request #518 from RalfJung/readme\n\nadd a description of what miri can do for you"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2e6eb0070bb031755d490324dd69a9795988d1c4", "html_url": "https://github.com/rust-lang/rust/commit/2e6eb0070bb031755d490324dd69a9795988d1c4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2e6eb0070bb031755d490324dd69a9795988d1c4/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "60a6a817d0b142bcd6e7444d5872a4d9b310c05e", "url": "https://api.github.com/repos/rust-lang/rust/commits/60a6a817d0b142bcd6e7444d5872a4d9b310c05e", "html_url": "https://github.com/rust-lang/rust/commit/60a6a817d0b142bcd6e7444d5872a4d9b310c05e"}, {"sha": "bf3e376049d122ca47d692cca8cff7134a9746f4", "url": "https://api.github.com/repos/rust-lang/rust/commits/bf3e376049d122ca47d692cca8cff7134a9746f4", "html_url": "https://github.com/rust-lang/rust/commit/bf3e376049d122ca47d692cca8cff7134a9746f4"}], "stats": {"total": 52, "additions": 42, "deletions": 10}, "files": [{"sha": "04a263597c0b23c41b307bfd7e5d12ca4aab7ad9", "filename": "README.md", "status": "modified", "additions": 42, "deletions": 10, "changes": 52, "blob_url": "https://github.com/rust-lang/rust/blob/2e6eb0070bb031755d490324dd69a9795988d1c4/README.md", "raw_url": "https://github.com/rust-lang/rust/raw/2e6eb0070bb031755d490324dd69a9795988d1c4/README.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/README.md?ref=2e6eb0070bb031755d490324dd69a9795988d1c4", "patch": "@@ -1,13 +1,28 @@\n-# Miri [[slides](https://solson.me/miri-slides.pdf)] [[report](https://solson.me/miri-report.pdf)] [![Build Status](https://travis-ci.org/solson/miri.svg?branch=master)](https://travis-ci.org/solson/miri) [![Windows build status](https://ci.appveyor.com/api/projects/status/github/solson/miri?svg=true)](https://ci.appveyor.com/project/solson63299/miri)\n+# Miri [![Build Status](https://travis-ci.org/solson/miri.svg?branch=master)](https://travis-ci.org/solson/miri) [![Windows build status](https://ci.appveyor.com/api/projects/status/github/solson/miri?svg=true)](https://ci.appveyor.com/project/solson63299/miri)\n \n \n-An experimental interpreter for [Rust][rust]'s [mid-level intermediate\n-representation][mir] (MIR). This project began as part of my work for the\n-undergraduate research course at the [University of Saskatchewan][usask].\n+An experimental interpreter for [Rust][rust]'s\n+[mid-level intermediate representation][mir] (MIR).  It can run binaries and\n+test suites of cargo projects and detect certain classes of undefined behavior,\n+for example:\n+\n+* Out-of-bounds memory accesses and use-after-free\n+* Invalid use of uninitialized data\n+* Violation of intrinsic preconditions (an [`unreachable_unchecked`] being\n+  reached, calling [`copy_nonoverlapping`] with overlapping ranges, ...)\n+* Not sufficiently aligned memory accesses and references\n+* Violation of basic type invariants (a `bool` that is not 0 or 1, for example,\n+  or an invalid enum discriminant)\n+* WIP: Violations of the rules governing aliasing for reference types\n+\n+[rust]: https://www.rust-lang.org/\n+[mir]: https://github.com/rust-lang/rfcs/blob/master/text/1211-mir.md\n+[`unreachable_unchecked`]: https://doc.rust-lang.org/stable/std/hint/fn.unreachable_unchecked.html\n+[`copy_nonoverlapping`]: https://doc.rust-lang.org/stable/std/ptr/fn.copy_nonoverlapping.html\n \n ## Building Miri\n \n-We recommend that you install [rustup][rustup] to obtain Rust. Then all you have\n+We recommend that you install [rustup] to obtain Rust. Then all you have\n to do is:\n \n ```sh\n@@ -25,6 +40,8 @@ To avoid repeating the nightly version all the time, you can use\n which means `nightly` Rust will automatically be used whenever you are working\n in this directory.\n \n+[rustup]: https://www.rustup.rs\n+\n ## Running Miri\n \n ```sh\n@@ -175,6 +192,26 @@ needs to be done that I haven't documented in the issues yet, however. For more\n ideas or help with running or hacking on Miri, you can contact me (`scott`) on\n Mozilla IRC in any of the Rust IRC channels (`#rust`, `#rust-offtopic`, etc).\n \n+## History\n+\n+This project began as part of an undergraduate research course in 2015 by\n+@solson at the [University of Saskatchewan][usask].  There are [slides] and a\n+[report] available from that project.  In 2016, @oli-obk joined to prepare miri\n+for eventually being used as const evaluator in the Rust compiler itself\n+(basically, for `const` and `static` stuff), replacing the old evaluator that\n+worked directly on the AST.  In 2017, @RalfJung did an internship with Mozilla\n+and began developing miri towards a tool for detecting undefined behavior, and\n+also using miri as a way to explore the consequences of various possible\n+definitions for undefined behavior in Rust.  @oli-obk's move of the miri engine\n+into the compiler finally came to completion in early 2018.  Meanwhile, later\n+that year, @RalfJung did a second internship, developing miri further with\n+support for checking basic type invariants and verifying that references are\n+used according to their aliasing restrictions.\n+\n+[usask]: https://www.usask.ca/\n+[slides]: https://solson.me/miri-slides.pdf\n+[report]: https://solson.me/miri-report.pdf\n+\n ## License\n \n Licensed under either of\n@@ -188,8 +225,3 @@ Licensed under either of\n Unless you explicitly state otherwise, any contribution intentionally submitted\n for inclusion in the work by you shall be dual licensed as above, without any\n additional terms or conditions.\n-\n-[rust]: https://www.rust-lang.org/\n-[mir]: https://github.com/rust-lang/rfcs/blob/master/text/1211-mir.md\n-[usask]: https://www.usask.ca/\n-[rustup]: https://www.rustup.rs"}]}