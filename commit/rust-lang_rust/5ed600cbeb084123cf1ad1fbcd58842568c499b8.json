{"sha": "5ed600cbeb084123cf1ad1fbcd58842568c499b8", "node_id": "MDY6Q29tbWl0NzI0NzEyOjVlZDYwMGNiZWIwODQxMjNjZjFhZDFmYmNkNTg4NDI1NjhjNDk5Yjg=", "commit": {"author": {"name": "Nick Cameron", "email": "nrc@ncameron.org", "date": "2018-07-31T22:28:49Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2018-07-31T22:28:49Z"}, "message": "Merge pull request #2879 from RReverser/master\n\nFix check for unstable features", "tree": {"sha": "db0de1493f1822d287ea70db3224675e144c67dd", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/db0de1493f1822d287ea70db3224675e144c67dd"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5ed600cbeb084123cf1ad1fbcd58842568c499b8", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJbYOKhCRBK7hj4Ov3rIwAAdHIIAD8orVItYqn91KLTQr9jgV7+\nE9ApxK9Gqc5Jxmgh81oChOc8sFjZ7EgwW31et4NTboEsDFbcZnA0HAdOX3YozR/w\n0CrlOlCkp4s6zNaxMLn1hv9aU2I8EkPZ5CeoTHV9vJRo48JD8ljjaSG4U+4ZMBzy\npb5nfCr6T2uXKWsgUdIW7Q+7/gSOItHYmeMtDWGLsCoOot7wGM5xu0d1+JRaLmAJ\nvyTssViBJrTVhur9EpXL30V68gFm/8KKTL0dCZjaFm57wmri+xOLmc4JYuuXKQ3F\nGAQXUBXd2QlmIzTxdlDg7pOI2jNQI9RVJPlEuRsm9VvjvJculmDuhsbllmhimc8=\n=vMlk\n-----END PGP SIGNATURE-----\n", "payload": "tree db0de1493f1822d287ea70db3224675e144c67dd\nparent df2e8bb5940a9bca7bc455189f4ea5e70a071fb8\nparent 593a5c40a4c8c255ca15969d9ba15760cbc86391\nauthor Nick Cameron <nrc@ncameron.org> 1533076129 +1200\ncommitter GitHub <noreply@github.com> 1533076129 +1200\n\nMerge pull request #2879 from RReverser/master\n\nFix check for unstable features"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5ed600cbeb084123cf1ad1fbcd58842568c499b8", "html_url": "https://github.com/rust-lang/rust/commit/5ed600cbeb084123cf1ad1fbcd58842568c499b8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5ed600cbeb084123cf1ad1fbcd58842568c499b8/comments", "author": {"login": "nrc", "id": 762626, "node_id": "MDQ6VXNlcjc2MjYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/762626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nrc", "html_url": "https://github.com/nrc", "followers_url": "https://api.github.com/users/nrc/followers", "following_url": "https://api.github.com/users/nrc/following{/other_user}", "gists_url": "https://api.github.com/users/nrc/gists{/gist_id}", "starred_url": "https://api.github.com/users/nrc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nrc/subscriptions", "organizations_url": "https://api.github.com/users/nrc/orgs", "repos_url": "https://api.github.com/users/nrc/repos", "events_url": "https://api.github.com/users/nrc/events{/privacy}", "received_events_url": "https://api.github.com/users/nrc/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "df2e8bb5940a9bca7bc455189f4ea5e70a071fb8", "url": "https://api.github.com/repos/rust-lang/rust/commits/df2e8bb5940a9bca7bc455189f4ea5e70a071fb8", "html_url": "https://github.com/rust-lang/rust/commit/df2e8bb5940a9bca7bc455189f4ea5e70a071fb8"}, {"sha": "593a5c40a4c8c255ca15969d9ba15760cbc86391", "url": "https://api.github.com/repos/rust-lang/rust/commits/593a5c40a4c8c255ca15969d9ba15760cbc86391", "html_url": "https://github.com/rust-lang/rust/commit/593a5c40a4c8c255ca15969d9ba15760cbc86391"}], "stats": {"total": 63, "additions": 31, "deletions": 32}, "files": [{"sha": "e5f5b625ebaeb4228a391e4871bfd25adc2caf86", "filename": "src/bin/main.rs", "status": "modified", "additions": 31, "deletions": 32, "changes": 63, "blob_url": "https://github.com/rust-lang/rust/blob/5ed600cbeb084123cf1ad1fbcd58842568c499b8/src%2Fbin%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5ed600cbeb084123cf1ad1fbcd58842568c499b8/src%2Fbin%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbin%2Fmain.rs?ref=5ed600cbeb084123cf1ad1fbcd58842568c499b8", "patch": "@@ -456,41 +456,40 @@ impl GetOptsOptions {\n             return Err(format_err!(\"Can't use both `--verbose` and `--quiet`\"));\n         }\n \n-        let rust_nightly = option_env!(\"CFG_RELEASE_CHANNEL\")\n-            .map(|c| c == \"nightly\")\n-            .unwrap_or(false);\n+        let rust_nightly = is_nightly();\n+\n         if rust_nightly {\n             options.unstable_features = matches.opt_present(\"unstable-features\");\n-        }\n \n-        if options.unstable_features {\n-            if matches.opt_present(\"skip-children\") {\n-                options.skip_children = Some(true);\n-            }\n-            if matches.opt_present(\"error-on-unformatted\") {\n-                options.error_on_unformatted = Some(true);\n-            }\n-            if let Some(ref file_lines) = matches.opt_str(\"file-lines\") {\n-                options.file_lines = file_lines.parse().map_err(err_msg)?;\n-            }\n-        } else {\n-            let mut unstable_options = vec![];\n-            if matches.opt_present(\"skip-children\") {\n-                unstable_options.push(\"`--skip-children`\");\n-            }\n-            if matches.opt_present(\"error-on-unformatted\") {\n-                unstable_options.push(\"`--error-on-unformatted`\");\n-            }\n-            if matches.opt_present(\"file-lines\") {\n-                unstable_options.push(\"`--file-lines`\");\n-            }\n-            if !unstable_options.is_empty() {\n-                let s = if unstable_options.len() == 1 { \"\" } else { \"s\" };\n-                return Err(format_err!(\n-                    \"Unstable option{} ({}) used without `--unstable-features`\",\n-                    s,\n-                    unstable_options.join(\", \"),\n-                ));\n+            if options.unstable_features {\n+                if matches.opt_present(\"skip-children\") {\n+                    options.skip_children = Some(true);\n+                }\n+                if matches.opt_present(\"error-on-unformatted\") {\n+                    options.error_on_unformatted = Some(true);\n+                }\n+                if let Some(ref file_lines) = matches.opt_str(\"file-lines\") {\n+                    options.file_lines = file_lines.parse().map_err(err_msg)?;\n+                }\n+            } else {\n+                let mut unstable_options = vec![];\n+                if matches.opt_present(\"skip-children\") {\n+                    unstable_options.push(\"`--skip-children`\");\n+                }\n+                if matches.opt_present(\"error-on-unformatted\") {\n+                    unstable_options.push(\"`--error-on-unformatted`\");\n+                }\n+                if matches.opt_present(\"file-lines\") {\n+                    unstable_options.push(\"`--file-lines`\");\n+                }\n+                if !unstable_options.is_empty() {\n+                    let s = if unstable_options.len() == 1 { \"\" } else { \"s\" };\n+                    return Err(format_err!(\n+                        \"Unstable option{} ({}) used without `--unstable-features`\",\n+                        s,\n+                        unstable_options.join(\", \"),\n+                    ));\n+                }\n             }\n         }\n "}]}