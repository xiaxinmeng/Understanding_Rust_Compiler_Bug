{"sha": "76449d86c0c0b85ff93912a450012f2ece16c3d4", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc2NDQ5ZDg2YzBjMGI4NWZmOTM5MTJhNDUwMDEyZjJlY2UxNmMzZDQ=", "commit": {"author": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2018-11-05T20:25:31Z"}, "committer": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2018-11-23T23:37:31Z"}, "message": "Point at macro arm when it doesn't expand to an expression", "tree": {"sha": "79d3a48f7c1bb243ea3c97a0cf3f04650d4158f2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/79d3a48f7c1bb243ea3c97a0cf3f04650d4158f2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/76449d86c0c0b85ff93912a450012f2ece16c3d4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/76449d86c0c0b85ff93912a450012f2ece16c3d4", "html_url": "https://github.com/rust-lang/rust/commit/76449d86c0c0b85ff93912a450012f2ece16c3d4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/76449d86c0c0b85ff93912a450012f2ece16c3d4/comments", "author": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "committer": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e5cd1edfa190442f4e3e0f53c0ac28f6cc9d15f3", "url": "https://api.github.com/repos/rust-lang/rust/commits/e5cd1edfa190442f4e3e0f53c0ac28f6cc9d15f3", "html_url": "https://github.com/rust-lang/rust/commit/e5cd1edfa190442f4e3e0f53c0ac28f6cc9d15f3"}], "stats": {"total": 13, "additions": 10, "deletions": 3}, "files": [{"sha": "fa10d219ad6ea9a0f174db01d15729f56bdad981", "filename": "src/libsyntax/ext/tt/macro_rules.rs", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/76449d86c0c0b85ff93912a450012f2ece16c3d4/src%2Flibsyntax%2Fext%2Ftt%2Fmacro_rules.rs", "raw_url": "https://github.com/rust-lang/rust/raw/76449d86c0c0b85ff93912a450012f2ece16c3d4/src%2Flibsyntax%2Fext%2Ftt%2Fmacro_rules.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Ftt%2Fmacro_rules.rs?ref=76449d86c0c0b85ff93912a450012f2ece16c3d4", "patch": "@@ -45,16 +45,18 @@ pub struct ParserAnyMacro<'a> {\n     /// Span of the expansion site of the macro this parser is for\n     site_span: Span,\n     /// The ident of the macro we're parsing\n-    macro_ident: ast::Ident\n+    macro_ident: ast::Ident,\n+    arm_span: Span,\n }\n \n impl<'a> ParserAnyMacro<'a> {\n     pub fn make(mut self: Box<ParserAnyMacro<'a>>, kind: AstFragmentKind) -> AstFragment {\n-        let ParserAnyMacro { site_span, macro_ident, ref mut parser } = *self;\n+        let ParserAnyMacro { site_span, macro_ident, ref mut parser, arm_span } = *self;\n         let fragment = panictry!(parser.parse_ast_fragment(kind, true).map_err(|mut e| {\n             if e.span.is_dummy() {  // Get around lack of span in error (#30128)\n                 e.set_span(site_span);\n                 e.span_label(site_span, \"in this macro expansion\");\n+                e.span_label(arm_span, \"in this macro arm\");\n             } else if parser.token == token::Eof {  // (#52866)\n                 e.set_span(parser.sess.source_map().next_point(parser.span));\n             }\n@@ -146,6 +148,7 @@ fn generic_extension<'cx>(cx: &'cx mut ExtCtxt,\n                     quoted::TokenTree::Delimited(_, ref delimed) => delimed.tts.clone(),\n                     _ => cx.span_bug(sp, \"malformed macro rhs\"),\n                 };\n+                let arm_span = rhses[i].span();\n \n                 let rhs_spans = rhs.iter().map(|t| t.span()).collect::<Vec<_>>();\n                 // rhs has holes ( `$id` and `$(...)` that need filled)\n@@ -184,7 +187,8 @@ fn generic_extension<'cx>(cx: &'cx mut ExtCtxt,\n                     // so we can print a useful error message if the parse of the expanded\n                     // macro leaves unparsed tokens.\n                     site_span: sp,\n-                    macro_ident: name\n+                    macro_ident: name,\n+                    arm_span,\n                 })\n             }\n             Failure(sp, tok, t) => if sp.lo() >= best_fail_spot.lo() {"}, {"sha": "f2b67ab6138f78a909b59f6f281201edee8ff3d0", "filename": "src/test/ui/macros/macro-in-expression-context-2.stderr", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/76449d86c0c0b85ff93912a450012f2ece16c3d4/src%2Ftest%2Fui%2Fmacros%2Fmacro-in-expression-context-2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/76449d86c0c0b85ff93912a450012f2ece16c3d4/src%2Ftest%2Fui%2Fmacros%2Fmacro-in-expression-context-2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmacros%2Fmacro-in-expression-context-2.stderr?ref=76449d86c0c0b85ff93912a450012f2ece16c3d4", "patch": "@@ -1,6 +1,9 @@\n error: expected expression, found the end of the macro arm\n   --> $DIR/macro-in-expression-context-2.rs:5:16\n    |\n+LL | macro_rules! empty { () => () }\n+   |                            -- in this macro arm\n+...\n LL |         _ => { empty!() }\n    |                ^^^^^^^^ in this macro expansion\n "}]}