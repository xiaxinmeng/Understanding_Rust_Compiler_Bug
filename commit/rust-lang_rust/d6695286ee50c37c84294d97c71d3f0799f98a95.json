{"sha": "d6695286ee50c37c84294d97c71d3f0799f98a95", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQ2Njk1Mjg2ZWU1MGMzN2M4NDI5NGQ5N2M3MWQzZjA3OTlmOThhOTU=", "commit": {"author": {"name": "elkowar", "email": "5300871+elkowar@users.noreply.github.com", "date": "2021-08-20T13:20:54Z"}, "committer": {"name": "elkowar", "email": "5300871+elkowar@users.noreply.github.com", "date": "2021-08-20T13:20:54Z"}, "message": "Add empty-body check to replace_match_with_if_let and re-prioritize choices", "tree": {"sha": "5cacdbaa1e216f32453368cf1a8488ccca6a5a02", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5cacdbaa1e216f32453368cf1a8488ccca6a5a02"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d6695286ee50c37c84294d97c71d3f0799f98a95", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCAAdFiEEtViXQSiCDLRzvZgH4yGtcbHR8n8FAmEfrDYACgkQ4yGtcbHR\n8n82zQwAhdybfa/nuc3BsNoMX+NIMdXYBnszOWtb12MBEAvbAVB4kuV71dz5MW1e\nQqAIUlMjbbr8pRfretnRLQ7dTCC+6XbRurm/GZH3R0AVuKff6TiIuqlZP5Eu/rnz\nOgO21FVZxJmlOUtsX+a79wRHVDka5vKrimyExd5rIxyHl2oQVjUyjWi52X9EKKgY\nVI2qqfUh7le9kJCQqNE71wVRTlc8XAB905zWbOuWd8K9d5m0a3UtIqu9QizeztXh\nnGjmyGjA+ugROsJgOoNfg+thVcAJBpcY7653t1irb0vdO9l11a5e76tOnlJSsjdK\ng8/9yXyS1mE6J/uA9FxAiaccgWKr821oGlBUf60Gx0xkfmfZBMIS344DzQQr62aU\nEHkTIIjALidPU/BrlkFuS/ZKAuCF93aGh9OLF7fgw/lnhI1IdW0pn2+2P7C5ZVau\nImzJrVA+of7cFWWXPn9UTq07MKLt4jjmFX3A7v9eE6KYeabldeq8lWsO5m3TI877\nu8kFH4fa\n=ZrpE\n-----END PGP SIGNATURE-----", "payload": "tree 5cacdbaa1e216f32453368cf1a8488ccca6a5a02\nparent 09ec0a15fa06b16a9addca2e3bf8e6f30ff027d0\nauthor elkowar <5300871+elkowar@users.noreply.github.com> 1629465654 +0200\ncommitter elkowar <5300871+elkowar@users.noreply.github.com> 1629465654 +0200\n\nAdd empty-body check to replace_match_with_if_let and re-prioritize choices\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d6695286ee50c37c84294d97c71d3f0799f98a95", "html_url": "https://github.com/rust-lang/rust/commit/d6695286ee50c37c84294d97c71d3f0799f98a95", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d6695286ee50c37c84294d97c71d3f0799f98a95/comments", "author": {"login": "elkowar", "id": 5300871, "node_id": "MDQ6VXNlcjUzMDA4NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/5300871?v=4", "gravatar_id": "", "url": "https://api.github.com/users/elkowar", "html_url": "https://github.com/elkowar", "followers_url": "https://api.github.com/users/elkowar/followers", "following_url": "https://api.github.com/users/elkowar/following{/other_user}", "gists_url": "https://api.github.com/users/elkowar/gists{/gist_id}", "starred_url": "https://api.github.com/users/elkowar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/elkowar/subscriptions", "organizations_url": "https://api.github.com/users/elkowar/orgs", "repos_url": "https://api.github.com/users/elkowar/repos", "events_url": "https://api.github.com/users/elkowar/events{/privacy}", "received_events_url": "https://api.github.com/users/elkowar/received_events", "type": "User", "site_admin": false}, "committer": {"login": "elkowar", "id": 5300871, "node_id": "MDQ6VXNlcjUzMDA4NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/5300871?v=4", "gravatar_id": "", "url": "https://api.github.com/users/elkowar", "html_url": "https://github.com/elkowar", "followers_url": "https://api.github.com/users/elkowar/followers", "following_url": "https://api.github.com/users/elkowar/following{/other_user}", "gists_url": "https://api.github.com/users/elkowar/gists{/gist_id}", "starred_url": "https://api.github.com/users/elkowar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/elkowar/subscriptions", "organizations_url": "https://api.github.com/users/elkowar/orgs", "repos_url": "https://api.github.com/users/elkowar/repos", "events_url": "https://api.github.com/users/elkowar/events{/privacy}", "received_events_url": "https://api.github.com/users/elkowar/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "09ec0a15fa06b16a9addca2e3bf8e6f30ff027d0", "url": "https://api.github.com/repos/rust-lang/rust/commits/09ec0a15fa06b16a9addca2e3bf8e6f30ff027d0", "html_url": "https://github.com/rust-lang/rust/commit/09ec0a15fa06b16a9addca2e3bf8e6f30ff027d0"}], "stats": {"total": 48, "additions": 45, "deletions": 3}, "files": [{"sha": "d3269ef4d41764c3da5f6010706b96f0cd419f33", "filename": "crates/ide_assists/src/handlers/replace_if_let_with_match.rs", "status": "modified", "additions": 45, "deletions": 3, "changes": 48, "blob_url": "https://github.com/rust-lang/rust/blob/d6695286ee50c37c84294d97c71d3f0799f98a95/crates%2Fide_assists%2Fsrc%2Fhandlers%2Freplace_if_let_with_match.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d6695286ee50c37c84294d97c71d3f0799f98a95/crates%2Fide_assists%2Fsrc%2Fhandlers%2Freplace_if_let_with_match.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_assists%2Fsrc%2Fhandlers%2Freplace_if_let_with_match.rs?ref=d6695286ee50c37c84294d97c71d3f0799f98a95", "patch": "@@ -235,12 +235,14 @@ fn pick_pattern_and_expr_order(\n ) -> Option<(ast::Pat, ast::Expr, ast::Expr)> {\n     let res = match (pat, pat2) {\n         (ast::Pat::WildcardPat(_), _) => return None,\n-        (pat, sad_pat) if is_sad_pat(sema, &sad_pat) => (pat, expr, expr2),\n-        (sad_pat, pat) if is_sad_pat(sema, &sad_pat) => (pat, expr2, expr),\n+        (pat, _) if expr2.syntax().first_child().is_none() => (pat, expr, expr2),\n+        (_, pat) if expr.syntax().first_child().is_none() => (pat, expr2, expr),\n         (pat, pat2) => match (binds_name(&pat), binds_name(&pat2)) {\n-            (true, true) => return None,\n             (true, false) => (pat, expr, expr2),\n             (false, true) => (pat2, expr2, expr),\n+            _ if is_sad_pat(sema, &pat2) => (pat, expr, expr2),\n+            _ if is_sad_pat(sema, &pat) => (pat2, expr2, expr),\n+            (true, true) => return None,\n             (false, false) => (pat, expr, expr2),\n         },\n     };\n@@ -762,6 +764,46 @@ fn foo() {\n         );\n     }\n \n+    #[test]\n+    fn replace_match_with_if_let_prefer_nonempty_body() {\n+        check_assist(\n+            replace_match_with_if_let,\n+            r#\"\n+fn foo() {\n+    match $0Ok(0) {\n+        Ok(value) => {},\n+        Err(err) => eprintln!(\"{}\", err),\n+    }\n+}\n+\"#,\n+            r#\"\n+fn foo() {\n+    if let Err(err) = Ok(0) {\n+        eprintln!(\"{}\", err)\n+    }\n+}\n+\"#,\n+        );\n+        check_assist(\n+            replace_match_with_if_let,\n+            r#\"\n+fn foo() {\n+    match $0Ok(0) {\n+        Err(err) => eprintln!(\"{}\", err),\n+        Ok(value) => {},\n+    }\n+}\n+\"#,\n+            r#\"\n+fn foo() {\n+    if let Err(err) = Ok(0) {\n+        eprintln!(\"{}\", err)\n+    }\n+}\n+\"#,\n+        );\n+    }\n+\n     #[test]\n     fn replace_match_with_if_let_rejects_double_name_bindings() {\n         check_assist_not_applicable("}]}