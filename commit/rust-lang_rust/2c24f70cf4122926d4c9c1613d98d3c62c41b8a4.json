{"sha": "2c24f70cf4122926d4c9c1613d98d3c62c41b8a4", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJjMjRmNzBjZjQxMjI5MjZkNGM5YzE2MTNkOThkM2M2MmM0MWI4YTQ=", "commit": {"author": {"name": "Jeffrey Yasskin", "email": "jyasskin@gmail.com", "date": "2010-07-22T11:02:23Z"}, "committer": {"name": "Graydon Hoare", "email": "graydon@pobox.com", "date": "2010-07-22T16:42:51Z"}, "message": "Fix simple generic type parameters in LLVM.", "tree": {"sha": "155d7945256a74d75a5194c9e256ee8109566564", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/155d7945256a74d75a5194c9e256ee8109566564"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2c24f70cf4122926d4c9c1613d98d3c62c41b8a4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2c24f70cf4122926d4c9c1613d98d3c62c41b8a4", "html_url": "https://github.com/rust-lang/rust/commit/2c24f70cf4122926d4c9c1613d98d3c62c41b8a4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2c24f70cf4122926d4c9c1613d98d3c62c41b8a4/comments", "author": {"login": "jyasskin", "id": 83420, "node_id": "MDQ6VXNlcjgzNDIw", "avatar_url": "https://avatars.githubusercontent.com/u/83420?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jyasskin", "html_url": "https://github.com/jyasskin", "followers_url": "https://api.github.com/users/jyasskin/followers", "following_url": "https://api.github.com/users/jyasskin/following{/other_user}", "gists_url": "https://api.github.com/users/jyasskin/gists{/gist_id}", "starred_url": "https://api.github.com/users/jyasskin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jyasskin/subscriptions", "organizations_url": "https://api.github.com/users/jyasskin/orgs", "repos_url": "https://api.github.com/users/jyasskin/repos", "events_url": "https://api.github.com/users/jyasskin/events{/privacy}", "received_events_url": "https://api.github.com/users/jyasskin/received_events", "type": "User", "site_admin": false}, "committer": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "09885b5b878730f266d3450b95d2f91b46183654", "url": "https://api.github.com/repos/rust-lang/rust/commits/09885b5b878730f266d3450b95d2f91b46183654", "html_url": "https://github.com/rust-lang/rust/commit/09885b5b878730f266d3450b95d2f91b46183654"}], "stats": {"total": 33, "additions": 28, "deletions": 5}, "files": [{"sha": "25e22a0cfeb077988ce416c2401a93d417cdfda8", "filename": "src/Makefile", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/2c24f70cf4122926d4c9c1613d98d3c62c41b8a4/src%2FMakefile", "raw_url": "https://github.com/rust-lang/rust/raw/2c24f70cf4122926d4c9c1613d98d3c62c41b8a4/src%2FMakefile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2FMakefile?ref=2c24f70cf4122926d4c9c1613d98d3c62c41b8a4", "patch": "@@ -427,8 +427,6 @@ TEST_XFAILS_LLVM := $(addprefix test/run-pass/, \\\n                       generic-recursive-tag.rs \\\n                       generic-tag-alt.rs \\\n                       generic-tag.rs \\\n-                      generic-type-synonym.rs \\\n-                      generic-type.rs \\\n                       import.rs \\\n                       inner-module.rs \\\n                       large-records.rs \\"}, {"sha": "5ff63ba50a2b44220ad9134c4c92a5b9366ef6cd", "filename": "src/boot/llvm/llabi.ml", "status": "modified", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/2c24f70cf4122926d4c9c1613d98d3c62c41b8a4/src%2Fboot%2Fllvm%2Fllabi.ml", "raw_url": "https://github.com/rust-lang/rust/raw/2c24f70cf4122926d4c9c1613d98d3c62c41b8a4/src%2Fboot%2Fllvm%2Fllabi.ml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fboot%2Fllvm%2Fllabi.ml?ref=2c24f70cf4122926d4c9c1613d98d3c62c41b8a4", "patch": "@@ -6,13 +6,15 @@ type abi = {\n   crate_ty:   Llvm.lltype;\n   task_ty:    Llvm.lltype;\n   word_ty:    Llvm.lltype;\n+  tydesc_ty:  Llvm.lltype;\n   rust_start: Llvm.llvalue;\n };;\n \n let declare_abi (llctx:Llvm.llcontext) (llmod:Llvm.llmodule) : abi =\n   let i32 = Llvm.i32_type llctx in\n   (* FIXME: Use Llvm_target.intptr_type for more platform support. *)\n   let word_ty = i32 in\n+  let p ty = Llvm.pointer_type ty in\n \n   let crate_ty =\n     (* TODO: other architectures besides x86 *)\n@@ -53,6 +55,27 @@ let declare_abi (llctx:Llvm.llcontext) (llmod:Llvm.llmodule) : abi =\n   in\n   ignore (Llvm.define_type_name \"rust_task\" task_ty llmod);\n \n+    (* This is the type_desc struct in rust_internal.h *)\n+  let tydesc_ty =\n+    (* TODO: other architectures besides x86 *)\n+    let tydesc_opaque_ty = Llvm.opaque_type llctx in\n+    let tydesc_tyhandle = Llvm.handle_to_type (Llvm.struct_type llctx [|\n+        p (p tydesc_opaque_ty);  (* const type_desc **first_param *)\n+        word_ty;                 (* size_t size *)\n+        word_ty;                 (* size_t align *)\n+        word_ty;                 (* uintptr_t copy_glue_off *)\n+        word_ty;                 (* uintptr_t drop_glue_off *)\n+        word_ty;                 (* uintptr_t free_glue_off *)\n+        word_ty;                 (* uintptr_t sever_glue_off *)\n+        word_ty;                 (* uintptr_t mark_glue_off *)\n+        word_ty;                 (* uintptr_t obj_drop_glue_off *)\n+      |])\n+    in\n+    Llvm.refine_type tydesc_opaque_ty (Llvm.type_of_handle tydesc_tyhandle);\n+    Llvm.type_of_handle tydesc_tyhandle\n+  in\n+  ignore (Llvm.define_type_name \"type_desc\" tydesc_ty llmod);\n+\n   let rust_start_ty =\n     (* Rust's main function can have several types, so we cast them\n        all to uintptr_t. *)\n@@ -64,6 +87,7 @@ let declare_abi (llctx:Llvm.llcontext) (llmod:Llvm.llmodule) : abi =\n     crate_ty = crate_ty;\n     task_ty = task_ty;\n     word_ty = word_ty;\n+    tydesc_ty = tydesc_ty;\n     rust_start = Llvm.declare_function \"rust_start\" rust_start_ty llmod\n   }\n ;;"}, {"sha": "51a05c7415481c125b6f97b0e435ca216d4f9354", "filename": "src/boot/llvm/lltrans.ml", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/2c24f70cf4122926d4c9c1613d98d3c62c41b8a4/src%2Fboot%2Fllvm%2Flltrans.ml", "raw_url": "https://github.com/rust-lang/rust/raw/2c24f70cf4122926d4c9c1613d98d3c62c41b8a4/src%2Fboot%2Fllvm%2Flltrans.ml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fboot%2Fllvm%2Flltrans.ml?ref=2c24f70cf4122926d4c9c1613d98d3c62c41b8a4", "patch": "@@ -346,12 +346,13 @@ let trans_crate\n       | Ast.TY_native _ ->\n           word_ty\n \n+      | Ast.TY_param _ ->\n+          abi.Llabi.tydesc_ty\n+\n       | Ast.TY_tag _ | Ast.TY_iso _ | Ast.TY_idx _\n-      | Ast.TY_obj _ | Ast.TY_type ->\n+      | Ast.TY_obj _ | Ast.TY_type | Ast.TY_named _ ->\n           Common.unimpl None \"LLVM type translation for: %a\" Ast.sprintf_ty ty\n \n-      | Ast.TY_param _ | Ast.TY_named _ ->\n-          bug () \"unresolved type in lltrans\"\n \n   and trans_ty t =\n     htab_search_or_add lltys t (fun _ -> trans_ty_full t)"}]}