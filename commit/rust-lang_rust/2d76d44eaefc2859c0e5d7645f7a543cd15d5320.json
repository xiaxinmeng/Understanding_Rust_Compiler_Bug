{"sha": "2d76d44eaefc2859c0e5d7645f7a543cd15d5320", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJkNzZkNDRlYWVmYzI4NTljMGU1ZDc2NDVmN2E1NDNjZDE1ZDUzMjA=", "commit": {"author": {"name": "Trinity Pointard", "email": "trinity.pointard@gmail.com", "date": "2021-06-15T12:30:14Z"}, "committer": {"name": "Trinity Pointard", "email": "trinity.pointard@gmail.com", "date": "2021-06-15T12:30:14Z"}, "message": "remove code for recursive Deref in sidebar\n\nfix #85037", "tree": {"sha": "80d3e658f8f888879c297f4f3a71d67479aeb4d9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/80d3e658f8f888879c297f4f3a71d67479aeb4d9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2d76d44eaefc2859c0e5d7645f7a543cd15d5320", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2d76d44eaefc2859c0e5d7645f7a543cd15d5320", "html_url": "https://github.com/rust-lang/rust/commit/2d76d44eaefc2859c0e5d7645f7a543cd15d5320", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2d76d44eaefc2859c0e5d7645f7a543cd15d5320/comments", "author": {"login": "trinity-1686a", "id": 35889323, "node_id": "MDQ6VXNlcjM1ODg5MzIz", "avatar_url": "https://avatars.githubusercontent.com/u/35889323?v=4", "gravatar_id": "", "url": "https://api.github.com/users/trinity-1686a", "html_url": "https://github.com/trinity-1686a", "followers_url": "https://api.github.com/users/trinity-1686a/followers", "following_url": "https://api.github.com/users/trinity-1686a/following{/other_user}", "gists_url": "https://api.github.com/users/trinity-1686a/gists{/gist_id}", "starred_url": "https://api.github.com/users/trinity-1686a/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/trinity-1686a/subscriptions", "organizations_url": "https://api.github.com/users/trinity-1686a/orgs", "repos_url": "https://api.github.com/users/trinity-1686a/repos", "events_url": "https://api.github.com/users/trinity-1686a/events{/privacy}", "received_events_url": "https://api.github.com/users/trinity-1686a/received_events", "type": "User", "site_admin": false}, "committer": {"login": "trinity-1686a", "id": 35889323, "node_id": "MDQ6VXNlcjM1ODg5MzIz", "avatar_url": "https://avatars.githubusercontent.com/u/35889323?v=4", "gravatar_id": "", "url": "https://api.github.com/users/trinity-1686a", "html_url": "https://github.com/trinity-1686a", "followers_url": "https://api.github.com/users/trinity-1686a/followers", "following_url": "https://api.github.com/users/trinity-1686a/following{/other_user}", "gists_url": "https://api.github.com/users/trinity-1686a/gists{/gist_id}", "starred_url": "https://api.github.com/users/trinity-1686a/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/trinity-1686a/subscriptions", "organizations_url": "https://api.github.com/users/trinity-1686a/orgs", "repos_url": "https://api.github.com/users/trinity-1686a/repos", "events_url": "https://api.github.com/users/trinity-1686a/events{/privacy}", "received_events_url": "https://api.github.com/users/trinity-1686a/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "aee50f417f38ce57f2491ee86fb386e7d32f241c", "url": "https://api.github.com/repos/rust-lang/rust/commits/aee50f417f38ce57f2491ee86fb386e7d32f241c", "html_url": "https://github.com/rust-lang/rust/commit/aee50f417f38ce57f2491ee86fb386e7d32f241c"}], "stats": {"total": 53, "additions": 24, "deletions": 29}, "files": [{"sha": "54171733c30f677db3b7e96e3be8b4917de3cbaf", "filename": "src/librustdoc/html/render/mod.rs", "status": "modified", "additions": 2, "deletions": 29, "changes": 31, "blob_url": "https://github.com/rust-lang/rust/blob/2d76d44eaefc2859c0e5d7645f7a543cd15d5320/src%2Flibrustdoc%2Fhtml%2Frender%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2d76d44eaefc2859c0e5d7645f7a543cd15d5320/src%2Flibrustdoc%2Fhtml%2Frender%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Frender%2Fmod.rs?ref=2d76d44eaefc2859c0e5d7645f7a543cd15d5320", "patch": "@@ -1960,19 +1960,13 @@ fn sidebar_assoc_items(cx: &Context<'_>, out: &mut Buffer, it: &clean::Item) {\n                 .filter(|i| i.inner_impl().trait_.is_some())\n                 .find(|i| i.inner_impl().trait_.def_id_full(cache) == cx.cache.deref_trait_did)\n             {\n-                sidebar_deref_methods(cx, out, impl_, v, FxHashSet::default());\n+                sidebar_deref_methods(cx, out, impl_, v);\n             }\n         }\n     }\n }\n \n-fn sidebar_deref_methods(\n-    cx: &Context<'_>,\n-    out: &mut Buffer,\n-    impl_: &Impl,\n-    v: &Vec<Impl>,\n-    mut already_seen: FxHashSet<DefId>,\n-) {\n+fn sidebar_deref_methods(cx: &Context<'_>, out: &mut Buffer, impl_: &Impl, v: &Vec<Impl>) {\n     let c = cx.cache();\n \n     debug!(\"found Deref: {:?}\", impl_);\n@@ -2029,27 +2023,6 @@ fn sidebar_deref_methods(\n                 out.push_str(\"</div>\");\n             }\n         }\n-\n-        // Recurse into any further impls that might exist for `target`\n-        if let Some(target_did) = target.def_id_full(c) {\n-            if let Some(target_impls) = c.impls.get(&target_did) {\n-                if let Some(target_deref_impl) = target_impls\n-                    .iter()\n-                    .filter(|i| i.inner_impl().trait_.is_some())\n-                    .find(|i| i.inner_impl().trait_.def_id_full(c) == c.deref_trait_did)\n-                {\n-                    if already_seen.insert(target_did.clone()) {\n-                        sidebar_deref_methods(\n-                            cx,\n-                            out,\n-                            target_deref_impl,\n-                            target_impls,\n-                            already_seen,\n-                        );\n-                    }\n-                }\n-            }\n-        }\n     }\n }\n "}, {"sha": "86bd246a878ccfc64d613d84c292e0b35efb3bd5", "filename": "src/test/rustdoc/issue-85037.rs", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/2d76d44eaefc2859c0e5d7645f7a543cd15d5320/src%2Ftest%2Frustdoc%2Fissue-85037.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2d76d44eaefc2859c0e5d7645f7a543cd15d5320/src%2Ftest%2Frustdoc%2Fissue-85037.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fissue-85037.rs?ref=2d76d44eaefc2859c0e5d7645f7a543cd15d5320", "patch": "@@ -0,0 +1,22 @@\n+use std::ops::Deref;\n+\n+pub struct A {}\n+impl A { pub fn foo_a(&self) {} }\n+\n+pub struct B {}\n+impl B { pub fn foo_b(&self) {} }\n+\n+pub struct C {}\n+impl C { pub fn foo_c(&self) {} }\n+\n+// @has issue_85037/struct.A.html '//div[@class=\"sidebar-links\"]' 'foo_b'\n+impl Deref for A {\n+    type Target = B;\n+    fn deref(&self) -> &B { todo!() }\n+}\n+\n+// @!has issue_85037/struct.A.html '//div[@class=\"sidebar-links\"]' 'foo_c'\n+impl Deref for B {\n+    type Target = C;\n+    fn deref(&self) -> &C { todo!() }\n+}"}]}