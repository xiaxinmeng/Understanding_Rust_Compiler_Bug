{"sha": "53ca2598d3156b420931e5bcedbf49baeba0a68c", "node_id": "C_kwDOAAsO6NoAKDUzY2EyNTk4ZDMxNTZiNDIwOTMxZTViY2VkYmY0OWJhZWJhMGE2OGM", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-12-12T05:16:50Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-12-12T05:16:50Z"}, "message": "Auto merge of #105160 - nnethercote:rm-Lit-token_lit, r=petrochenkov\n\nRemove `token::Lit` from `ast::MetaItemLit`.\n\nCurrently `ast::MetaItemLit` represents the literal kind twice. This PR removes that redundancy. Best reviewed one commit at a time.\n\nr? `@petrochenkov`", "tree": {"sha": "da759ca5c9722beae66a4b5c4bd73f9e9566f8dc", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/da759ca5c9722beae66a4b5c4bd73f9e9566f8dc"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/53ca2598d3156b420931e5bcedbf49baeba0a68c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/53ca2598d3156b420931e5bcedbf49baeba0a68c", "html_url": "https://github.com/rust-lang/rust/commit/53ca2598d3156b420931e5bcedbf49baeba0a68c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/53ca2598d3156b420931e5bcedbf49baeba0a68c/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2119f7d7d1f06059dfe5059fb62362efa56d4069", "url": "https://api.github.com/repos/rust-lang/rust/commits/2119f7d7d1f06059dfe5059fb62362efa56d4069", "html_url": "https://github.com/rust-lang/rust/commit/2119f7d7d1f06059dfe5059fb62362efa56d4069"}, {"sha": "c91dd22870d40315c3e0e5b45077516286e918fd", "url": "https://api.github.com/repos/rust-lang/rust/commits/c91dd22870d40315c3e0e5b45077516286e918fd", "html_url": "https://github.com/rust-lang/rust/commit/c91dd22870d40315c3e0e5b45077516286e918fd"}], "stats": {"total": 12, "additions": 7, "deletions": 5}, "files": [{"sha": "c503eeeb9b3b950e387d7b8b0e6a82dcd40a226b", "filename": "src/attr.rs", "status": "modified", "additions": 7, "deletions": 5, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/53ca2598d3156b420931e5bcedbf49baeba0a68c/src%2Fattr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/53ca2598d3156b420931e5bcedbf49baeba0a68c/src%2Fattr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fattr.rs?ref=53ca2598d3156b420931e5bcedbf49baeba0a68c", "patch": "@@ -260,7 +260,9 @@ impl Rewrite for ast::NestedMetaItem {\n     fn rewrite(&self, context: &RewriteContext<'_>, shape: Shape) -> Option<String> {\n         match self {\n             ast::NestedMetaItem::MetaItem(ref meta_item) => meta_item.rewrite(context, shape),\n-            ast::NestedMetaItem::Lit(ref l) => rewrite_literal(context, l.token_lit, l.span, shape),\n+            ast::NestedMetaItem::Lit(ref l) => {\n+                rewrite_literal(context, l.as_token_lit(), l.span, shape)\n+            }\n         }\n     }\n }\n@@ -308,18 +310,18 @@ impl Rewrite for ast::MetaItem {\n                     }),\n                 )?\n             }\n-            ast::MetaItemKind::NameValue(ref literal) => {\n+            ast::MetaItemKind::NameValue(ref lit) => {\n                 let path = rewrite_path(context, PathContext::Type, &None, &self.path, shape)?;\n                 // 3 = ` = `\n                 let lit_shape = shape.shrink_left(path.len() + 3)?;\n-                // `rewrite_literal` returns `None` when `literal` exceeds max\n+                // `rewrite_literal` returns `None` when `lit` exceeds max\n                 // width. Since a literal is basically unformattable unless it\n                 // is a string literal (and only if `format_strings` is set),\n                 // we might be better off ignoring the fact that the attribute\n                 // is longer than the max width and continue on formatting.\n                 // See #2479 for example.\n-                let value = rewrite_literal(context, literal.token_lit, literal.span, lit_shape)\n-                    .unwrap_or_else(|| context.snippet(literal.span).to_owned());\n+                let value = rewrite_literal(context, lit.as_token_lit(), lit.span, lit_shape)\n+                    .unwrap_or_else(|| context.snippet(lit.span).to_owned());\n                 format!(\"{} = {}\", path, value)\n             }\n         })"}]}