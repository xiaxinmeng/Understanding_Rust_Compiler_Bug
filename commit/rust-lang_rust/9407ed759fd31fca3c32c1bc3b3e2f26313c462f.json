{"sha": "9407ed759fd31fca3c32c1bc3b3e2f26313c462f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjk0MDdlZDc1OWZkMzFmY2EzYzMyYzFiYzNiM2UyZjI2MzEzYzQ2MmY=", "commit": {"author": {"name": "Hugo Beauz\u00e9e-Luyssen", "email": "hugo@beauzee.fr", "date": "2019-05-27T14:41:52Z"}, "committer": {"name": "Hugo Beauz\u00e9e-Luyssen", "email": "hugo@beauzee.fr", "date": "2019-07-25T19:30:08Z"}, "message": "std: rand: Use BCrypt on UWP\n\nAs Rtl* functions are not allowed there", "tree": {"sha": "ef1e908fedc6a18b8387c5334f56cf91cd6fa7a7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ef1e908fedc6a18b8387c5334f56cf91cd6fa7a7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9407ed759fd31fca3c32c1bc3b3e2f26313c462f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9407ed759fd31fca3c32c1bc3b3e2f26313c462f", "html_url": "https://github.com/rust-lang/rust/commit/9407ed759fd31fca3c32c1bc3b3e2f26313c462f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9407ed759fd31fca3c32c1bc3b3e2f26313c462f/comments", "author": {"login": "chouquette", "id": 54693, "node_id": "MDQ6VXNlcjU0Njkz", "avatar_url": "https://avatars.githubusercontent.com/u/54693?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chouquette", "html_url": "https://github.com/chouquette", "followers_url": "https://api.github.com/users/chouquette/followers", "following_url": "https://api.github.com/users/chouquette/following{/other_user}", "gists_url": "https://api.github.com/users/chouquette/gists{/gist_id}", "starred_url": "https://api.github.com/users/chouquette/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chouquette/subscriptions", "organizations_url": "https://api.github.com/users/chouquette/orgs", "repos_url": "https://api.github.com/users/chouquette/repos", "events_url": "https://api.github.com/users/chouquette/events{/privacy}", "received_events_url": "https://api.github.com/users/chouquette/received_events", "type": "User", "site_admin": false}, "committer": {"login": "chouquette", "id": 54693, "node_id": "MDQ6VXNlcjU0Njkz", "avatar_url": "https://avatars.githubusercontent.com/u/54693?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chouquette", "html_url": "https://github.com/chouquette", "followers_url": "https://api.github.com/users/chouquette/followers", "following_url": "https://api.github.com/users/chouquette/following{/other_user}", "gists_url": "https://api.github.com/users/chouquette/gists{/gist_id}", "starred_url": "https://api.github.com/users/chouquette/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chouquette/subscriptions", "organizations_url": "https://api.github.com/users/chouquette/orgs", "repos_url": "https://api.github.com/users/chouquette/repos", "events_url": "https://api.github.com/users/chouquette/events{/privacy}", "received_events_url": "https://api.github.com/users/chouquette/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "642f8cd9c2625ea0c838442d973718ea92c14de8", "url": "https://api.github.com/repos/rust-lang/rust/commits/642f8cd9c2625ea0c838442d973718ea92c14de8", "html_url": "https://github.com/rust-lang/rust/commit/642f8cd9c2625ea0c838442d973718ea92c14de8"}], "stats": {"total": 45, "additions": 43, "deletions": 2}, "files": [{"sha": "20397369387cb1ec040f19009565413c503afba9", "filename": "src/libstd/build.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9407ed759fd31fca3c32c1bc3b3e2f26313c462f/src%2Flibstd%2Fbuild.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9407ed759fd31fca3c32c1bc3b3e2f26313c462f/src%2Flibstd%2Fbuild.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fbuild.rs?ref=9407ed759fd31fca3c32c1bc3b3e2f26313c462f", "patch": "@@ -41,6 +41,8 @@ fn main() {\n         println!(\"cargo:rustc-link-lib=resolv\");\n     } else if target.contains(\"uwp\") {\n         println!(\"cargo:rustc-link-lib=ws2_32\");\n+        // For BCryptGenRandom\n+        println!(\"cargo:rustc-link-lib=bcrypt\");\n     } else if target.contains(\"windows\") {\n         println!(\"cargo:rustc-link-lib=advapi32\");\n         println!(\"cargo:rustc-link-lib=ws2_32\");"}, {"sha": "9738c9daf7c7e55374b993659088f237d68d351a", "filename": "src/libstd/sys/windows/c.rs", "status": "modified", "additions": 23, "deletions": 2, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/9407ed759fd31fca3c32c1bc3b3e2f26313c462f/src%2Flibstd%2Fsys%2Fwindows%2Fc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9407ed759fd31fca3c32c1bc3b3e2f26313c462f/src%2Flibstd%2Fsys%2Fwindows%2Fc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Fwindows%2Fc.rs?ref=9407ed759fd31fca3c32c1bc3b3e2f26313c462f", "patch": "@@ -655,6 +655,29 @@ pub struct timeval {\n     pub tv_usec: c_long,\n }\n \n+// Functions forbidden when targeting UWP\n+cfg_if::cfg_if! {\n+if #[cfg(not(target_vendor = \"uwp\"))] {\n+    extern \"system\" {\n+        #[link_name = \"SystemFunction036\"]\n+        pub fn RtlGenRandom(RandomBuffer: *mut u8, RandomBufferLength: ULONG) -> BOOLEAN;\n+    }\n+}\n+}\n+\n+// UWP specific functions & types\n+cfg_if::cfg_if! {\n+if #[cfg(target_vendor = \"uwp\")] {\n+    pub const BCRYPT_USE_SYSTEM_PREFERRED_RNG: DWORD = 0x00000002;\n+\n+    extern \"system\" {\n+        pub fn BCryptGenRandom(hAlgorithm: LPVOID, pBuffer: *mut u8,\n+                               cbBuffer: ULONG, dwFlags: ULONG) -> LONG;\n+    }\n+}\n+}\n+\n+// Shared between Desktop & UWP\n extern \"system\" {\n     pub fn WSAStartup(wVersionRequested: WORD,\n                       lpWSAData: LPWSADATA) -> c_int;\n@@ -950,8 +973,6 @@ extern \"system\" {\n                   exceptfds: *mut fd_set,\n                   timeout: *const timeval) -> c_int;\n \n-    #[link_name = \"SystemFunction036\"]\n-    pub fn RtlGenRandom(RandomBuffer: *mut u8, RandomBufferLength: ULONG) -> BOOLEAN;\n \n     pub fn GetProcessHeap() -> HANDLE;\n     pub fn HeapAlloc(hHeap: HANDLE, dwFlags: DWORD, dwBytes: SIZE_T) -> LPVOID;"}, {"sha": "c9bcb5d74151429162110aa5ac410d0270bcd46d", "filename": "src/libstd/sys/windows/rand.rs", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/9407ed759fd31fca3c32c1bc3b3e2f26313c462f/src%2Flibstd%2Fsys%2Fwindows%2Frand.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9407ed759fd31fca3c32c1bc3b3e2f26313c462f/src%2Flibstd%2Fsys%2Fwindows%2Frand.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Fwindows%2Frand.rs?ref=9407ed759fd31fca3c32c1bc3b3e2f26313c462f", "patch": "@@ -2,6 +2,7 @@ use crate::io;\n use crate::mem;\n use crate::sys::c;\n \n+#[cfg(not(target_vendor = \"uwp\"))]\n pub fn hashmap_random_keys() -> (u64, u64) {\n     let mut v = (0, 0);\n     let ret = unsafe {\n@@ -14,3 +15,20 @@ pub fn hashmap_random_keys() -> (u64, u64) {\n     }\n     return v\n }\n+\n+#[cfg(target_vendor = \"uwp\")]\n+pub fn hashmap_random_keys() -> (u64, u64) {\n+    use crate::ptr;\n+\n+    let mut v = (0, 0);\n+    let ret = unsafe {\n+        c::BCryptGenRandom(ptr::null_mut(), &mut v as *mut _ as *mut u8,\n+                           mem::size_of_val(&v) as c::ULONG,\n+                           c::BCRYPT_USE_SYSTEM_PREFERRED_RNG)\n+    };\n+    if ret != 0 {\n+        panic!(\"couldn't generate random bytes: {}\",\n+               io::Error::last_os_error());\n+    }\n+    return v\n+}"}]}