{"sha": "f2a3270b9c6104136637a8f03e4baa9b52c0d36a", "node_id": "MDY6Q29tbWl0NzI0NzEyOmYyYTMyNzBiOWM2MTA0MTM2NjM3YThmMDNlNGJhYTliNTJjMGQzNmE=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2011-10-28T18:17:07Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2011-10-28T18:17:07Z"}, "message": "Reorder statements in rustc main to avoid bounds check", "tree": {"sha": "e0e94a74d6659779b97bc67c84ff2f8a28723e8f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e0e94a74d6659779b97bc67c84ff2f8a28723e8f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f2a3270b9c6104136637a8f03e4baa9b52c0d36a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f2a3270b9c6104136637a8f03e4baa9b52c0d36a", "html_url": "https://github.com/rust-lang/rust/commit/f2a3270b9c6104136637a8f03e4baa9b52c0d36a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f2a3270b9c6104136637a8f03e4baa9b52c0d36a/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a81fdf0a5a0bd70970ad66c1e9e99af823e74260", "url": "https://api.github.com/repos/rust-lang/rust/commits/a81fdf0a5a0bd70970ad66c1e9e99af823e74260", "html_url": "https://github.com/rust-lang/rust/commit/a81fdf0a5a0bd70970ad66c1e9e99af823e74260"}], "stats": {"total": 6, "additions": 3, "deletions": 3}, "files": [{"sha": "84b846a61a7f03e1c7e8b1888d581637174af380", "filename": "src/comp/driver/rustc.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/f2a3270b9c6104136637a8f03e4baa9b52c0d36a/src%2Fcomp%2Fdriver%2Frustc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f2a3270b9c6104136637a8f03e4baa9b52c0d36a/src%2Fcomp%2Fdriver%2Frustc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fdriver%2Frustc.rs?ref=f2a3270b9c6104136637a8f03e4baa9b52c0d36a", "patch": "@@ -506,14 +506,14 @@ fn main(args: [str]) {\n     let sopts = build_session_options(match);\n     let sess = build_session(sopts);\n     let n_inputs = vec::len::<str>(match.free);\n-    let ofile = getopts::opt_maybe_str(match, \"o\");\n-    let ifile = match.free[0];\n-    let outputs = build_output_filenames(ifile, ofile, sopts);\n     if n_inputs == 0u {\n         sess.fatal(\"No input filename given.\");\n     } else if n_inputs > 1u {\n         sess.fatal(\"Multiple input filenames provided.\");\n     }\n+    let ofile = getopts::opt_maybe_str(match, \"o\");\n+    let ifile = match.free[0];\n+    let outputs = build_output_filenames(ifile, ofile, sopts);\n     let cfg = build_configuration(sess, binary, ifile);\n     let pretty =\n         option::map::<str,"}]}