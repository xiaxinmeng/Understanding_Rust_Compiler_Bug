{"sha": "718a5a2e3f8190d30c527692cf700fdd761d3712", "node_id": "MDY6Q29tbWl0NzI0NzEyOjcxOGE1YTJlM2Y4MTkwZDMwYzUyNzY5MmNmNzAwZmRkNzYxZDM3MTI=", "commit": {"author": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2019-07-25T12:52:37Z"}, "committer": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2019-07-26T09:32:04Z"}, "message": "Display span in Assert panic message", "tree": {"sha": "7c5579b2901cee11315791a26ac792e78b38c2a9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7c5579b2901cee11315791a26ac792e78b38c2a9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/718a5a2e3f8190d30c527692cf700fdd761d3712", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/718a5a2e3f8190d30c527692cf700fdd761d3712", "html_url": "https://github.com/rust-lang/rust/commit/718a5a2e3f8190d30c527692cf700fdd761d3712", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/718a5a2e3f8190d30c527692cf700fdd761d3712/comments", "author": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "81fa33da3d3a7fa747e332de5f6adafcf4ac7bdf", "url": "https://api.github.com/repos/rust-lang/rust/commits/81fa33da3d3a7fa747e332de5f6adafcf4ac7bdf", "html_url": "https://github.com/rust-lang/rust/commit/81fa33da3d3a7fa747e332de5f6adafcf4ac7bdf"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "3d09b7cefc5604b4282be6777e2c61c46720c6e8", "filename": "src/base.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/718a5a2e3f8190d30c527692cf700fdd761d3712/src%2Fbase.rs", "raw_url": "https://github.com/rust-lang/rust/raw/718a5a2e3f8190d30c527692cf700fdd761d3712/src%2Fbase.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbase.rs?ref=718a5a2e3f8190d30c527692cf700fdd761d3712", "patch": "@@ -164,7 +164,7 @@ fn codegen_fn_content<'a, 'tcx: 'a>(fx: &mut FunctionCx<'a, 'tcx, impl Backend>)\n                 } else {\n                     fx.bcx.ins().brz(cond, target, &[]);\n                 };\n-                trap_panic(fx, format!(\"[panic] Assert {:?} failed at {:?}.\", msg, bb_data.terminator().source_info.span));\n+                trap_panic(fx, format!(\"[panic] Assert {:?} at {:?} failed.\", msg, bb_data.terminator().source_info.span));\n             }\n \n             TerminatorKind::SwitchInt {"}]}