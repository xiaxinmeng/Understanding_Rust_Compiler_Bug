{"sha": "14ebca5c1986b55c39b5711c0cb33850afdc0a0c", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE0ZWJjYTVjMTk4NmI1NWMzOWI1NzExYzBjYjMzODUwYWZkYzBhMGM=", "commit": {"author": {"name": "kennytm", "email": "kennytm@gmail.com", "date": "2018-12-22T16:07:41Z"}, "committer": {"name": "kennytm", "email": "kennytm@gmail.com", "date": "2018-12-22T18:11:59Z"}, "message": "Rollup merge of #56941 - euclio:deny-libstd-resolution-failures, r=QuietMisdreavus\n\ndeny intra-doc link resolution failures in libstd\n\nFixes #56693.\n\nUntil we land a fix for the underlying issue (#56922), we can at least fix the failures in libstd so they don't propagate to downstream crates.", "tree": {"sha": "085750e97ff0d0f1eca3e3f710509134fa6e6265", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/085750e97ff0d0f1eca3e3f710509134fa6e6265"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/14ebca5c1986b55c39b5711c0cb33850afdc0a0c", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEZ1R8CLMp8f2GxWoQ/vbIBR0OATwFAlwefm8ACgkQ/vbIBR0O\nATxNVw//dzE5erwlWynOQN9OdX0y6aM0P2iUK70ftQfxfcshnaf3NjAcO3jKLdbp\nIMyQmMN8wOuANTmEuuqyulDE/VsmDPzv37BF4i9lMepp6j+5MUemlWxDmxYAD8A4\nZgaltLT87x+pKPiibAod3s9HRqbF+5syrG/eOzMbWAs6a7MCy9McA59lvCHrVR0C\nqAyD77oJVGQKrCwzZro1/8Ujpp5RebyC32f3flbYT4yoeA3t2VItaZl2j4Cpszrh\n3OaZfdfLKkGvg5mxmDYTpc4LasqYMeMmPdfqmzrNXtVkJTSIOk9wAyBE7DLzixav\nv3V6qgiVI3pFuZiRPsJeGs7YW4TAx6+6P+lXCsXSeMpIQP458Xb7qvNsFOW2Ouyk\nzs/p0Ka5bSvcEU0QYiEn9HN1cR5Njr4oMBn3ZnXxZ0/ooqc/XEFCwHZtvuQKoXsM\n7PbwbEBpUuqlt77T6vgVZpTZxH1HFezozmuHUrAI7wuHETdlcPzu8aepKRW2MD+5\nWzUntZRnCGUqbnNP8i1te00TugpCq4jNMY9ezfbMz6+opd6u/q1pqKorh9TwNyMW\nCZXdqMkeaw98EM2W/MuftRYgxwMfteKnn9e6G/+s7O+ssxlkKpqikmS9ZqaFyijl\nHxMpfHxNeArpj2fw3XIJFdHiauZopS3JsW2wvLRjoLZlTVRXlNI=\n=wYcH\n-----END PGP SIGNATURE-----", "payload": "tree 085750e97ff0d0f1eca3e3f710509134fa6e6265\nparent 314e61f37eb7873f73294bd6e6ce37a64c5232fc\nparent 82e55c1bdcf0a20a2652152447160414a9cd57d7\nauthor kennytm <kennytm@gmail.com> 1545494861 +0800\ncommitter kennytm <kennytm@gmail.com> 1545502319 +0800\n\nRollup merge of #56941 - euclio:deny-libstd-resolution-failures, r=QuietMisdreavus\n\ndeny intra-doc link resolution failures in libstd\n\nFixes #56693.\n\nUntil we land a fix for the underlying issue (#56922), we can at least fix the failures in libstd so they don't propagate to downstream crates.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/14ebca5c1986b55c39b5711c0cb33850afdc0a0c", "html_url": "https://github.com/rust-lang/rust/commit/14ebca5c1986b55c39b5711c0cb33850afdc0a0c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/14ebca5c1986b55c39b5711c0cb33850afdc0a0c/comments", "author": {"login": "kennytm", "id": 103023, "node_id": "MDQ6VXNlcjEwMzAyMw==", "avatar_url": "https://avatars.githubusercontent.com/u/103023?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kennytm", "html_url": "https://github.com/kennytm", "followers_url": "https://api.github.com/users/kennytm/followers", "following_url": "https://api.github.com/users/kennytm/following{/other_user}", "gists_url": "https://api.github.com/users/kennytm/gists{/gist_id}", "starred_url": "https://api.github.com/users/kennytm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kennytm/subscriptions", "organizations_url": "https://api.github.com/users/kennytm/orgs", "repos_url": "https://api.github.com/users/kennytm/repos", "events_url": "https://api.github.com/users/kennytm/events{/privacy}", "received_events_url": "https://api.github.com/users/kennytm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "kennytm", "id": 103023, "node_id": "MDQ6VXNlcjEwMzAyMw==", "avatar_url": "https://avatars.githubusercontent.com/u/103023?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kennytm", "html_url": "https://github.com/kennytm", "followers_url": "https://api.github.com/users/kennytm/followers", "following_url": "https://api.github.com/users/kennytm/following{/other_user}", "gists_url": "https://api.github.com/users/kennytm/gists{/gist_id}", "starred_url": "https://api.github.com/users/kennytm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kennytm/subscriptions", "organizations_url": "https://api.github.com/users/kennytm/orgs", "repos_url": "https://api.github.com/users/kennytm/repos", "events_url": "https://api.github.com/users/kennytm/events{/privacy}", "received_events_url": "https://api.github.com/users/kennytm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "314e61f37eb7873f73294bd6e6ce37a64c5232fc", "url": "https://api.github.com/repos/rust-lang/rust/commits/314e61f37eb7873f73294bd6e6ce37a64c5232fc", "html_url": "https://github.com/rust-lang/rust/commit/314e61f37eb7873f73294bd6e6ce37a64c5232fc"}, {"sha": "82e55c1bdcf0a20a2652152447160414a9cd57d7", "url": "https://api.github.com/repos/rust-lang/rust/commits/82e55c1bdcf0a20a2652152447160414a9cd57d7", "html_url": "https://github.com/rust-lang/rust/commit/82e55c1bdcf0a20a2652152447160414a9cd57d7"}], "stats": {"total": 27, "additions": 24, "deletions": 3}, "files": [{"sha": "afa7a6f919d26d9210687cfd759a1b5261617f0a", "filename": "src/liballoc/lib.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/14ebca5c1986b55c39b5711c0cb33850afdc0a0c/src%2Fliballoc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/14ebca5c1986b55c39b5711c0cb33850afdc0a0c/src%2Fliballoc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Flib.rs?ref=14ebca5c1986b55c39b5711c0cb33850afdc0a0c", "patch": "@@ -72,6 +72,8 @@\n        test(no_crate_inject, attr(allow(unused_variables), deny(warnings))))]\n #![no_std]\n #![needs_allocator]\n+\n+#![deny(intra_doc_link_resolution_failure)]\n #![deny(missing_debug_implementations)]\n \n #![cfg_attr(not(test), feature(fn_traits))]"}, {"sha": "65a610b9d1e92b42bafe31dac319746fceb5f4d2", "filename": "src/liballoc/rc.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/14ebca5c1986b55c39b5711c0cb33850afdc0a0c/src%2Fliballoc%2Frc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/14ebca5c1986b55c39b5711c0cb33850afdc0a0c/src%2Fliballoc%2Frc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Frc.rs?ref=14ebca5c1986b55c39b5711c0cb33850afdc0a0c", "patch": "@@ -843,6 +843,8 @@ unsafe impl<#[may_dangle] T: ?Sized> Drop for Rc<T> {\n     /// drop(foo);    // Doesn't print anything\n     /// drop(foo2);   // Prints \"dropped!\"\n     /// ```\n+    ///\n+    /// [`Weak`]: ../../std/rc/struct.Weak.html\n     fn drop(&mut self) {\n         unsafe {\n             self.dec_strong();\n@@ -1422,9 +1424,10 @@ impl<T: ?Sized + fmt::Debug> fmt::Debug for Weak<T> {\n #[stable(feature = \"downgraded_weak\", since = \"1.10.0\")]\n impl<T> Default for Weak<T> {\n     /// Constructs a new `Weak<T>`, allocating memory for `T` without initializing\n-    /// it. Calling [`upgrade`][Weak::upgrade] on the return value always gives [`None`].\n+    /// it. Calling [`upgrade`] on the return value always gives [`None`].\n     ///\n     /// [`None`]: ../../std/option/enum.Option.html\n+    /// [`upgrade`]: ../../std/rc/struct.Weak.html#method.upgrade\n     ///\n     /// # Examples\n     ///"}, {"sha": "948c36117a301414abf6c3496bf5d164150964c7", "filename": "src/liballoc/sync.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/14ebca5c1986b55c39b5711c0cb33850afdc0a0c/src%2Fliballoc%2Fsync.rs", "raw_url": "https://github.com/rust-lang/rust/raw/14ebca5c1986b55c39b5711c0cb33850afdc0a0c/src%2Fliballoc%2Fsync.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Fsync.rs?ref=14ebca5c1986b55c39b5711c0cb33850afdc0a0c", "patch": "@@ -955,6 +955,8 @@ unsafe impl<#[may_dangle] T: ?Sized> Drop for Arc<T> {\n     /// drop(foo);    // Doesn't print anything\n     /// drop(foo2);   // Prints \"dropped!\"\n     /// ```\n+    ///\n+    /// [`Weak`]: ../../std/sync/struct.Weak.html\n     #[inline]\n     fn drop(&mut self) {\n         // Because `fetch_sub` is already atomic, we do not need to synchronize\n@@ -1222,10 +1224,11 @@ impl<T: ?Sized> Clone for Weak<T> {\n #[stable(feature = \"downgraded_weak\", since = \"1.10.0\")]\n impl<T> Default for Weak<T> {\n     /// Constructs a new `Weak<T>`, without allocating memory.\n-    /// Calling [`upgrade`][Weak::upgrade] on the return value always\n+    /// Calling [`upgrade`] on the return value always\n     /// gives [`None`].\n     ///\n     /// [`None`]: ../../std/option/enum.Option.html#variant.None\n+    /// [`upgrade`]: ../../std/sync/struct.Weak.html#method.upgrade\n     ///\n     /// # Examples\n     ///"}, {"sha": "2124458dc559720b90457b8c1d62cafe64c15b86", "filename": "src/libcore/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/14ebca5c1986b55c39b5711c0cb33850afdc0a0c/src%2Flibcore%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/14ebca5c1986b55c39b5711c0cb33850afdc0a0c/src%2Flibcore%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Flib.rs?ref=14ebca5c1986b55c39b5711c0cb33850afdc0a0c", "patch": "@@ -71,6 +71,7 @@\n \n #![no_core]\n #![deny(missing_docs)]\n+#![deny(intra_doc_link_resolution_failure)]\n #![deny(missing_debug_implementations)]\n \n #![feature(allow_internal_unstable)]"}, {"sha": "0cde23cde40f1c8483dd9951ff53ea0bd1a8fd2b", "filename": "src/libcore/mem.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/14ebca5c1986b55c39b5711c0cb33850afdc0a0c/src%2Flibcore%2Fmem.rs", "raw_url": "https://github.com/rust-lang/rust/raw/14ebca5c1986b55c39b5711c0cb33850afdc0a0c/src%2Flibcore%2Fmem.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fmem.rs?ref=14ebca5c1986b55c39b5711c0cb33850afdc0a0c", "patch": "@@ -984,6 +984,9 @@ impl<T> ManuallyDrop<T> {\n     ///\n     /// This function semantically moves out the contained value without preventing further usage.\n     /// It is up to the user of this method to ensure that this container is not used again.\n+    ///\n+    /// [`ManuallyDrop::drop`]: #method.drop\n+    /// [`ManuallyDrop::into_inner`]: #method.into_inner\n     #[must_use = \"if you don't need the value, you can use `ManuallyDrop::drop` instead\"]\n     #[unstable(feature = \"manually_drop_take\", issue = \"55422\")]\n     #[inline]"}, {"sha": "193061457b5cd8617dab130ca60576f6849a67c4", "filename": "src/libcore/slice/mod.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/14ebca5c1986b55c39b5711c0cb33850afdc0a0c/src%2Flibcore%2Fslice%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/14ebca5c1986b55c39b5711c0cb33850afdc0a0c/src%2Flibcore%2Fslice%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fslice%2Fmod.rs?ref=14ebca5c1986b55c39b5711c0cb33850afdc0a0c", "patch": "@@ -877,6 +877,7 @@ impl<T> [T] {\n     /// assert_eq!(iter.remainder(), &['l']);\n     /// ```\n     ///\n+    /// [`chunks`]: #method.chunks\n     /// [`rchunks`]: #method.rchunks\n     /// [`chunks_exact`]: #method.chunks_exact\n     #[stable(feature = \"rchunks\", since = \"1.31.0\")]\n@@ -921,6 +922,7 @@ impl<T> [T] {\n     /// assert_eq!(v, &[0, 2, 2, 1, 1]);\n     /// ```\n     ///\n+    /// [`chunks_mut`]: #method.chunks_mut\n     /// [`rchunks_mut`]: #method.rchunks_mut\n     /// [`chunks_exact_mut`]: #method.chunks_exact_mut\n     #[stable(feature = \"rchunks\", since = \"1.31.0\")]"}, {"sha": "7aaf89cd0ff71dc502b8f8010a5581a6a3ed65af", "filename": "src/libstd/io/buffered.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/14ebca5c1986b55c39b5711c0cb33850afdc0a0c/src%2Flibstd%2Fio%2Fbuffered.rs", "raw_url": "https://github.com/rust-lang/rust/raw/14ebca5c1986b55c39b5711c0cb33850afdc0a0c/src%2Flibstd%2Fio%2Fbuffered.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fio%2Fbuffered.rs?ref=14ebca5c1986b55c39b5711c0cb33850afdc0a0c", "patch": "@@ -294,7 +294,7 @@ impl<R: Seek> Seek for BufReader<R> {\n     /// `.into_inner()` immediately after a seek yields the underlying reader\n     /// at the same position.\n     ///\n-    /// To seek without discarding the internal buffer, use [`Seek::seek_relative`].\n+    /// To seek without discarding the internal buffer, use [`BufReader::seek_relative`].\n     ///\n     /// See [`std::io::Seek`] for more details.\n     ///\n@@ -303,6 +303,9 @@ impl<R: Seek> Seek for BufReader<R> {\n     /// seeks will be performed instead of one. If the second seek returns\n     /// `Err`, the underlying reader will be left at the same position it would\n     /// have if you called `seek` with `SeekFrom::Current(0)`.\n+    ///\n+    /// [`BufReader::seek_relative`]: struct.BufReader.html#method.seek_relative\n+    /// [`std::io::Seek`]: trait.Seek.html\n     fn seek(&mut self, pos: SeekFrom) -> io::Result<u64> {\n         let result: u64;\n         if let SeekFrom::Current(n) = pos {"}, {"sha": "324852355b0d66847f125684e64ab5e13559de5e", "filename": "src/libstd/io/error.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/14ebca5c1986b55c39b5711c0cb33850afdc0a0c/src%2Flibstd%2Fio%2Ferror.rs", "raw_url": "https://github.com/rust-lang/rust/raw/14ebca5c1986b55c39b5711c0cb33850afdc0a0c/src%2Flibstd%2Fio%2Ferror.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fio%2Ferror.rs?ref=14ebca5c1986b55c39b5711c0cb33850afdc0a0c", "patch": "@@ -225,6 +225,9 @@ impl From<ErrorKind> for Error {\n     /// let error = Error::from(not_found);\n     /// assert_eq!(\"entity not found\", format!(\"{}\", error));\n     /// ```\n+    ///\n+    /// [`ErrorKind`]: ../../std/io/enum.ErrorKind.html\n+    /// [`Error`]: ../../std/io/struct.Error.html\n     #[inline]\n     fn from(kind: ErrorKind) -> Error {\n         Error {"}, {"sha": "0d3de34fe64383c0bfcd288c307a302348558039", "filename": "src/libstd/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/14ebca5c1986b55c39b5711c0cb33850afdc0a0c/src%2Flibstd%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/14ebca5c1986b55c39b5711c0cb33850afdc0a0c/src%2Flibstd%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Flib.rs?ref=14ebca5c1986b55c39b5711c0cb33850afdc0a0c", "patch": "@@ -222,6 +222,7 @@\n #![no_std]\n \n #![deny(missing_docs)]\n+#![deny(intra_doc_link_resolution_failure)]\n #![deny(missing_debug_implementations)]\n \n // Tell the compiler to link to either panic_abort or panic_unwind"}]}