{"sha": "6611567f9e253edabcfc38006ef817712f6ce595", "node_id": "C_kwDOAAsO6NoAKDY2MTE1NjdmOWUyNTNlZGFiY2ZjMzgwMDZlZjgxNzcxMmY2Y2U1OTU", "commit": {"author": {"name": "Michael Howell", "email": "michael@notriddle.com", "date": "2021-12-06T18:07:34Z"}, "committer": {"name": "Michael Howell", "email": "michael@notriddle.com", "date": "2021-12-06T18:16:46Z"}, "message": "Expect extern fn with no body when parsing\n\nAlso add a test case for inserting a semicolon on extern fns.\n\nWithout this fix, we got an error like this:\n\n    error: expected one of `->`, `where`, or `{`, found `}`\n     --> chk.rs:3:1\n      |\n    2 |   fn foo()\n      |      ---  - expected one of `->`, `where`, or `{`\n      |      |\n      |      while parsing this `fn`\n    3 | }\n      | ^ unexpected token\n\nSince this is inside an extern block, you're required to write function\nprototypes with no body. This fixes a regression, and adds a test case\nfor it.", "tree": {"sha": "404ad58fe9394c2c68d2a75857125d3653164d55", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/404ad58fe9394c2c68d2a75857125d3653164d55"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6611567f9e253edabcfc38006ef817712f6ce595", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6611567f9e253edabcfc38006ef817712f6ce595", "html_url": "https://github.com/rust-lang/rust/commit/6611567f9e253edabcfc38006ef817712f6ce595", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6611567f9e253edabcfc38006ef817712f6ce595/comments", "author": {"login": "notriddle", "id": 1593513, "node_id": "MDQ6VXNlcjE1OTM1MTM=", "avatar_url": "https://avatars.githubusercontent.com/u/1593513?v=4", "gravatar_id": "", "url": "https://api.github.com/users/notriddle", "html_url": "https://github.com/notriddle", "followers_url": "https://api.github.com/users/notriddle/followers", "following_url": "https://api.github.com/users/notriddle/following{/other_user}", "gists_url": "https://api.github.com/users/notriddle/gists{/gist_id}", "starred_url": "https://api.github.com/users/notriddle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/notriddle/subscriptions", "organizations_url": "https://api.github.com/users/notriddle/orgs", "repos_url": "https://api.github.com/users/notriddle/repos", "events_url": "https://api.github.com/users/notriddle/events{/privacy}", "received_events_url": "https://api.github.com/users/notriddle/received_events", "type": "User", "site_admin": false}, "committer": {"login": "notriddle", "id": 1593513, "node_id": "MDQ6VXNlcjE1OTM1MTM=", "avatar_url": "https://avatars.githubusercontent.com/u/1593513?v=4", "gravatar_id": "", "url": "https://api.github.com/users/notriddle", "html_url": "https://github.com/notriddle", "followers_url": "https://api.github.com/users/notriddle/followers", "following_url": "https://api.github.com/users/notriddle/following{/other_user}", "gists_url": "https://api.github.com/users/notriddle/gists{/gist_id}", "starred_url": "https://api.github.com/users/notriddle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/notriddle/subscriptions", "organizations_url": "https://api.github.com/users/notriddle/orgs", "repos_url": "https://api.github.com/users/notriddle/repos", "events_url": "https://api.github.com/users/notriddle/events{/privacy}", "received_events_url": "https://api.github.com/users/notriddle/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "61995926d2bc39e048e3f259cb9363126edbe757", "url": "https://api.github.com/repos/rust-lang/rust/commits/61995926d2bc39e048e3f259cb9363126edbe757", "html_url": "https://github.com/rust-lang/rust/commit/61995926d2bc39e048e3f259cb9363126edbe757"}], "stats": {"total": 30, "additions": 29, "deletions": 1}, "files": [{"sha": "831c64e3faf037e3f9ccf8626f076f3b7e97e64e", "filename": "compiler/rustc_parse/src/parser/item.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6611567f9e253edabcfc38006ef817712f6ce595/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fitem.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6611567f9e253edabcfc38006ef817712f6ce595/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fitem.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fitem.rs?ref=6611567f9e253edabcfc38006ef817712f6ce595", "patch": "@@ -950,7 +950,7 @@ impl<'a> Parser<'a> {\n         &mut self,\n         force_collect: ForceCollect,\n     ) -> PResult<'a, Option<Option<P<ForeignItem>>>> {\n-        let fn_parse_mode = FnParseMode { req_name: |_| true, req_body: true };\n+        let fn_parse_mode = FnParseMode { req_name: |_| true, req_body: false };\n         Ok(self.parse_item_(fn_parse_mode, force_collect)?.map(\n             |Item { attrs, id, span, vis, ident, kind, tokens }| {\n                 let kind = match ForeignItemKind::try_from(kind) {"}, {"sha": "5c55566ffe92fe7338957551e2a5f59cba027220", "filename": "src/test/ui/suggestions/suggest-semicolon-for-fn-in-extern-block.fixed", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/6611567f9e253edabcfc38006ef817712f6ce595/src%2Ftest%2Fui%2Fsuggestions%2Fsuggest-semicolon-for-fn-in-extern-block.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/6611567f9e253edabcfc38006ef817712f6ce595/src%2Ftest%2Fui%2Fsuggestions%2Fsuggest-semicolon-for-fn-in-extern-block.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Fsuggest-semicolon-for-fn-in-extern-block.fixed?ref=6611567f9e253edabcfc38006ef817712f6ce595", "patch": "@@ -0,0 +1,9 @@\n+// run-rustfix\n+\n+#[allow(dead_code)]\n+\n+extern \"C\" {\n+  fn foo(); //~ERROR expected `;`\n+}\n+\n+fn main() {}"}, {"sha": "91971cba3e863ad1c5c7a03eaa9830a469af5696", "filename": "src/test/ui/suggestions/suggest-semicolon-for-fn-in-extern-block.rs", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/6611567f9e253edabcfc38006ef817712f6ce595/src%2Ftest%2Fui%2Fsuggestions%2Fsuggest-semicolon-for-fn-in-extern-block.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6611567f9e253edabcfc38006ef817712f6ce595/src%2Ftest%2Fui%2Fsuggestions%2Fsuggest-semicolon-for-fn-in-extern-block.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Fsuggest-semicolon-for-fn-in-extern-block.rs?ref=6611567f9e253edabcfc38006ef817712f6ce595", "patch": "@@ -0,0 +1,9 @@\n+// run-rustfix\n+\n+#[allow(dead_code)]\n+\n+extern \"C\" {\n+  fn foo() //~ERROR expected `;`\n+}\n+\n+fn main() {}"}, {"sha": "c5df72c4a477f432a6608824d35d7604c6f78e5f", "filename": "src/test/ui/suggestions/suggest-semicolon-for-fn-in-extern-block.stderr", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/6611567f9e253edabcfc38006ef817712f6ce595/src%2Ftest%2Fui%2Fsuggestions%2Fsuggest-semicolon-for-fn-in-extern-block.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6611567f9e253edabcfc38006ef817712f6ce595/src%2Ftest%2Fui%2Fsuggestions%2Fsuggest-semicolon-for-fn-in-extern-block.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Fsuggest-semicolon-for-fn-in-extern-block.stderr?ref=6611567f9e253edabcfc38006ef817712f6ce595", "patch": "@@ -0,0 +1,10 @@\n+error: expected `;`, found `}`\n+  --> $DIR/suggest-semicolon-for-fn-in-extern-block.rs:6:11\n+   |\n+LL |   fn foo()\n+   |           ^ help: add `;` here\n+LL | }\n+   | - unexpected token\n+\n+error: aborting due to previous error\n+"}]}