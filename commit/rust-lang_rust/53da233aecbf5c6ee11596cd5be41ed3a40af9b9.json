{"sha": "53da233aecbf5c6ee11596cd5be41ed3a40af9b9", "node_id": "MDY6Q29tbWl0NzI0NzEyOjUzZGEyMzNhZWNiZjVjNmVlMTE1OTZjZDViZTQxZWQzYTQwYWY5Yjk=", "commit": {"author": {"name": "Joshua Nelson", "email": "jyn514@gmail.com", "date": "2020-12-27T00:34:10Z"}, "committer": {"name": "Joshua Nelson", "email": "jyn514@gmail.com", "date": "2020-12-27T00:34:10Z"}, "message": "Remove FIXME in rustc_privacy", "tree": {"sha": "09c402103502c42ca6c20c1cd58b7e06b9474aac", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/09c402103502c42ca6c20c1cd58b7e06b9474aac"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/53da233aecbf5c6ee11596cd5be41ed3a40af9b9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/53da233aecbf5c6ee11596cd5be41ed3a40af9b9", "html_url": "https://github.com/rust-lang/rust/commit/53da233aecbf5c6ee11596cd5be41ed3a40af9b9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/53da233aecbf5c6ee11596cd5be41ed3a40af9b9/comments", "author": {"login": "jyn514", "id": 23638587, "node_id": "MDQ6VXNlcjIzNjM4NTg3", "avatar_url": "https://avatars.githubusercontent.com/u/23638587?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jyn514", "html_url": "https://github.com/jyn514", "followers_url": "https://api.github.com/users/jyn514/followers", "following_url": "https://api.github.com/users/jyn514/following{/other_user}", "gists_url": "https://api.github.com/users/jyn514/gists{/gist_id}", "starred_url": "https://api.github.com/users/jyn514/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jyn514/subscriptions", "organizations_url": "https://api.github.com/users/jyn514/orgs", "repos_url": "https://api.github.com/users/jyn514/repos", "events_url": "https://api.github.com/users/jyn514/events{/privacy}", "received_events_url": "https://api.github.com/users/jyn514/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jyn514", "id": 23638587, "node_id": "MDQ6VXNlcjIzNjM4NTg3", "avatar_url": "https://avatars.githubusercontent.com/u/23638587?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jyn514", "html_url": "https://github.com/jyn514", "followers_url": "https://api.github.com/users/jyn514/followers", "following_url": "https://api.github.com/users/jyn514/following{/other_user}", "gists_url": "https://api.github.com/users/jyn514/gists{/gist_id}", "starred_url": "https://api.github.com/users/jyn514/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jyn514/subscriptions", "organizations_url": "https://api.github.com/users/jyn514/orgs", "repos_url": "https://api.github.com/users/jyn514/repos", "events_url": "https://api.github.com/users/jyn514/events{/privacy}", "received_events_url": "https://api.github.com/users/jyn514/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3ffea60dd5a2260004cc4f487401ae7c7db1aa0e", "url": "https://api.github.com/repos/rust-lang/rust/commits/3ffea60dd5a2260004cc4f487401ae7c7db1aa0e", "html_url": "https://github.com/rust-lang/rust/commit/3ffea60dd5a2260004cc4f487401ae7c7db1aa0e"}], "stats": {"total": 4, "additions": 1, "deletions": 3}, "files": [{"sha": "708563f2ee981bd2802dbdceeac59f7a2ccb1cfa", "filename": "compiler/rustc_privacy/src/lib.rs", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/53da233aecbf5c6ee11596cd5be41ed3a40af9b9/compiler%2Frustc_privacy%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/53da233aecbf5c6ee11596cd5be41ed3a40af9b9/compiler%2Frustc_privacy%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_privacy%2Fsrc%2Flib.rs?ref=53da233aecbf5c6ee11596cd5be41ed3a40af9b9", "patch": "@@ -842,11 +842,9 @@ impl Visitor<'tcx> for EmbargoVisitor<'tcx> {\n         let macro_module_def_id =\n             ty::DefIdTree::parent(self.tcx, self.tcx.hir().local_def_id(md.hir_id).to_def_id())\n                 .unwrap();\n-        // FIXME(#71104) Should really be using just `as_local_hir_id` but\n-        // some `DefId` do not seem to have a corresponding HirId.\n         let hir_id = macro_module_def_id\n             .as_local()\n-            .and_then(|def_id| self.tcx.hir().opt_local_def_id_to_hir_id(def_id));\n+            .map(|def_id| self.tcx.hir().local_def_id_to_hir_id(def_id));\n         let mut module_id = match hir_id {\n             Some(module_id) if self.tcx.hir().is_hir_id_module(module_id) => module_id,\n             // `module_id` doesn't correspond to a `mod`, return early (#63164, #65252)."}]}