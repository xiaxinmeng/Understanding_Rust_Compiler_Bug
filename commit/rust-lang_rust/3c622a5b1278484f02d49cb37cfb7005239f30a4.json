{"sha": "3c622a5b1278484f02d49cb37cfb7005239f30a4", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNjNjIyYTViMTI3ODQ4NGYwMmQ0OWNiMzdjZmI3MDA1MjM5ZjMwYTQ=", "commit": {"author": {"name": "Lindsey Kuper", "email": "lindsey@rockstargirl.org", "date": "2012-06-01T17:30:50Z"}, "committer": {"name": "Lindsey Kuper", "email": "lindsey@rockstargirl.org", "date": "2012-06-01T17:30:50Z"}, "message": "Clarifying comments in test.", "tree": {"sha": "58968a6404fd01c2c7a2d2f6e3275c23ad07ce7f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/58968a6404fd01c2c7a2d2f6e3275c23ad07ce7f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3c622a5b1278484f02d49cb37cfb7005239f30a4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3c622a5b1278484f02d49cb37cfb7005239f30a4", "html_url": "https://github.com/rust-lang/rust/commit/3c622a5b1278484f02d49cb37cfb7005239f30a4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3c622a5b1278484f02d49cb37cfb7005239f30a4/comments", "author": {"login": "lkuper", "id": 535218, "node_id": "MDQ6VXNlcjUzNTIxOA==", "avatar_url": "https://avatars.githubusercontent.com/u/535218?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lkuper", "html_url": "https://github.com/lkuper", "followers_url": "https://api.github.com/users/lkuper/followers", "following_url": "https://api.github.com/users/lkuper/following{/other_user}", "gists_url": "https://api.github.com/users/lkuper/gists{/gist_id}", "starred_url": "https://api.github.com/users/lkuper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lkuper/subscriptions", "organizations_url": "https://api.github.com/users/lkuper/orgs", "repos_url": "https://api.github.com/users/lkuper/repos", "events_url": "https://api.github.com/users/lkuper/events{/privacy}", "received_events_url": "https://api.github.com/users/lkuper/received_events", "type": "User", "site_admin": false}, "committer": {"login": "lkuper", "id": 535218, "node_id": "MDQ6VXNlcjUzNTIxOA==", "avatar_url": "https://avatars.githubusercontent.com/u/535218?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lkuper", "html_url": "https://github.com/lkuper", "followers_url": "https://api.github.com/users/lkuper/followers", "following_url": "https://api.github.com/users/lkuper/following{/other_user}", "gists_url": "https://api.github.com/users/lkuper/gists{/gist_id}", "starred_url": "https://api.github.com/users/lkuper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lkuper/subscriptions", "organizations_url": "https://api.github.com/users/lkuper/orgs", "repos_url": "https://api.github.com/users/lkuper/repos", "events_url": "https://api.github.com/users/lkuper/events{/privacy}", "received_events_url": "https://api.github.com/users/lkuper/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "43eb5f0a2e9fb52e154ac9a463061bb673431f19", "url": "https://api.github.com/repos/rust-lang/rust/commits/43eb5f0a2e9fb52e154ac9a463061bb673431f19", "html_url": "https://github.com/rust-lang/rust/commit/43eb5f0a2e9fb52e154ac9a463061bb673431f19"}], "stats": {"total": 7, "additions": 5, "deletions": 2}, "files": [{"sha": "3cbee781bba791a40265317b75931907474732c7", "filename": "src/test/compile-fail/regions-fn-subtyping.rs", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/3c622a5b1278484f02d49cb37cfb7005239f30a4/src%2Ftest%2Fcompile-fail%2Fregions-fn-subtyping.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3c622a5b1278484f02d49cb37cfb7005239f30a4/src%2Ftest%2Fcompile-fail%2Fregions-fn-subtyping.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fregions-fn-subtyping.rs?ref=3c622a5b1278484f02d49cb37cfb7005239f30a4", "patch": "@@ -1,5 +1,3 @@\n-// Issue #2263.\n-\n // Here, `f` is a function that takes a pointer `x` and a function\n // `g`, where `g` requires its argument `y` to be in the same region\n // that `x` is in.\n@@ -13,6 +11,11 @@ fn has_same_region(f: fn(x: &a.int, g: fn(y: &a.int))) {\n }\n \n fn wants_two_regions(_f: fn(x: &int, g: fn(y: &int))) {\n+    // Suppose we were to write code here that passed some arbitrary\n+    // &int and some arbitrary fn(&int) to whatever's passed in as _f.\n+    // This would be fine as far as the type annotation on the formal\n+    // parameter _f goes, but if _f were `f` we'd be in trouble since\n+    // `f` can't handle those arguments.\n }\n \n fn main() {"}]}