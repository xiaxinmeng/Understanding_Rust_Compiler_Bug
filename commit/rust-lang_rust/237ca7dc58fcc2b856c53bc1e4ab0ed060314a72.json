{"sha": "237ca7dc58fcc2b856c53bc1e4ab0ed060314a72", "node_id": "MDY6Q29tbWl0NzI0NzEyOjIzN2NhN2RjNThmY2MyYjg1NmM1M2JjMWU0YWIwZWQwNjAzMTRhNzI=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2013-06-25T04:01:56Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2013-06-25T04:01:56Z"}, "message": "auto merge of #7257 : indutny/rust/feature/libc-mman, r=cmr\n\nAdd functions and constants required to be able to use `mmap` and friends.", "tree": {"sha": "645bde905d3cc2deb5f6fa2d582f2454dc24ddbf", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/645bde905d3cc2deb5f6fa2d582f2454dc24ddbf"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/237ca7dc58fcc2b856c53bc1e4ab0ed060314a72", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/237ca7dc58fcc2b856c53bc1e4ab0ed060314a72", "html_url": "https://github.com/rust-lang/rust/commit/237ca7dc58fcc2b856c53bc1e4ab0ed060314a72", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/237ca7dc58fcc2b856c53bc1e4ab0ed060314a72/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c6515ee6a7f424679e2b53336974a991dd3b71c8", "url": "https://api.github.com/repos/rust-lang/rust/commits/c6515ee6a7f424679e2b53336974a991dd3b71c8", "html_url": "https://github.com/rust-lang/rust/commit/c6515ee6a7f424679e2b53336974a991dd3b71c8"}, {"sha": "bc70edbb25487e539386c68bd6e821eedd704194", "url": "https://api.github.com/repos/rust-lang/rust/commits/bc70edbb25487e539386c68bd6e821eedd704194", "html_url": "https://github.com/rust-lang/rust/commit/bc70edbb25487e539386c68bd6e821eedd704194"}], "stats": {"total": 1190, "additions": 873, "deletions": 317}, "files": [{"sha": "523645e69a52ae16af6436b3959c48816ca089cf", "filename": "src/libstd/libc.rs", "status": "modified", "additions": 872, "deletions": 316, "changes": 1188, "blob_url": "https://github.com/rust-lang/rust/blob/237ca7dc58fcc2b856c53bc1e4ab0ed060314a72/src%2Flibstd%2Flibc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/237ca7dc58fcc2b856c53bc1e4ab0ed060314a72/src%2Flibstd%2Flibc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Flibc.rs?ref=237ca7dc58fcc2b856c53bc1e4ab0ed060314a72", "patch": "@@ -102,10 +102,12 @@ pub use libc::funcs::posix88::stdio::*;\n pub use libc::funcs::posix88::fcntl::*;\n pub use libc::funcs::posix88::dirent::*;\n pub use libc::funcs::posix88::unistd::*;\n+pub use libc::funcs::posix88::mman::*;\n \n pub use libc::funcs::posix01::stat_::*;\n pub use libc::funcs::posix01::unistd::*;\n pub use libc::funcs::posix01::glob::*;\n+pub use libc::funcs::posix01::mman::*;\n pub use libc::funcs::posix08::unistd::*;\n \n pub use libc::funcs::bsd44::*;\n@@ -285,7 +287,7 @@ pub mod types {\n             #[cfg(target_arch = \"x86\")]\n             #[cfg(target_arch = \"mips\")]\n             pub mod posix01 {\n-                use libc::types::os::arch::c95::{c_short, c_long, c_ulong, time_t};\n+                use libc::types::os::arch::c95::{c_short, c_long, time_t};\n                 use libc::types::os::arch::posix88::{dev_t, gid_t, ino_t};\n                 use libc::types::os::arch::posix88::{mode_t, off_t};\n                 use libc::types::os::arch::posix88::{uid_t};\n@@ -903,52 +905,56 @@ pub mod consts {\n     #[cfg(target_os = \"win32\")]\n     pub mod os {\n         pub mod c95 {\n-            pub static EXIT_FAILURE : int = 1;\n-            pub static EXIT_SUCCESS : int = 0;\n-            pub static RAND_MAX : int = 32767;\n-            pub static EOF : int = -1;\n-            pub static SEEK_SET : int = 0;\n-            pub static SEEK_CUR : int = 1;\n-            pub static SEEK_END : int = 2;\n-            pub static _IOFBF : int = 0;\n-            pub static _IONBF : int = 4;\n-            pub static _IOLBF : int = 64;\n-            pub static BUFSIZ : uint = 512_u;\n-            pub static FOPEN_MAX : uint = 20_u;\n-            pub static FILENAME_MAX : uint = 260_u;\n-            pub static L_tmpnam : uint = 16_u;\n-            pub static TMP_MAX : uint = 32767_u;\n+            use libc::types::os::arch::c95::{c_int, c_uint};\n+\n+            pub static EXIT_FAILURE : c_int = 1;\n+            pub static EXIT_SUCCESS : c_int = 0;\n+            pub static RAND_MAX : c_int = 32767;\n+            pub static EOF : c_int = -1;\n+            pub static SEEK_SET : c_int = 0;\n+            pub static SEEK_CUR : c_int = 1;\n+            pub static SEEK_END : c_int = 2;\n+            pub static _IOFBF : c_int = 0;\n+            pub static _IONBF : c_int = 4;\n+            pub static _IOLBF : c_int = 64;\n+            pub static BUFSIZ : c_uint = 512_u32;\n+            pub static FOPEN_MAX : c_uint = 20_u32;\n+            pub static FILENAME_MAX : c_uint = 260_u32;\n+            pub static L_tmpnam : c_uint = 16_u32;\n+            pub static TMP_MAX : c_uint = 32767_u32;\n         }\n         pub mod c99 {\n         }\n         pub mod posix88 {\n-            pub static O_RDONLY : int = 0;\n-            pub static O_WRONLY : int = 1;\n-            pub static O_RDWR : int = 2;\n-            pub static O_APPEND : int = 8;\n-            pub static O_CREAT : int = 256;\n-            pub static O_EXCL : int = 1024;\n-            pub static O_TRUNC : int = 512;\n-            pub static S_IFIFO : int = 4096;\n-            pub static S_IFCHR : int = 8192;\n-            pub static S_IFBLK : int = 12288;\n-            pub static S_IFDIR : int = 16384;\n-            pub static S_IFREG : int = 32768;\n-            pub static S_IFMT : int = 61440;\n-            pub static S_IEXEC : int = 64;\n-            pub static S_IWRITE : int = 128;\n-            pub static S_IREAD : int = 256;\n-            pub static S_IRWXU : int = 448;\n-            pub static S_IXUSR : int = 64;\n-            pub static S_IWUSR : int = 128;\n-            pub static S_IRUSR : int = 256;\n-            pub static F_OK : int = 0;\n-            pub static R_OK : int = 4;\n-            pub static W_OK : int = 2;\n-            pub static X_OK : int = 1;\n-            pub static STDIN_FILENO : int = 0;\n-            pub static STDOUT_FILENO : int = 1;\n-            pub static STDERR_FILENO : int = 2;\n+            use libc::types::os::arch::c95::c_int;\n+\n+            pub static O_RDONLY : c_int = 0;\n+            pub static O_WRONLY : c_int = 1;\n+            pub static O_RDWR : c_int = 2;\n+            pub static O_APPEND : c_int = 8;\n+            pub static O_CREAT : c_int = 256;\n+            pub static O_EXCL : c_int = 1024;\n+            pub static O_TRUNC : c_int = 512;\n+            pub static S_IFIFO : c_int = 4096;\n+            pub static S_IFCHR : c_int = 8192;\n+            pub static S_IFBLK : c_int = 12288;\n+            pub static S_IFDIR : c_int = 16384;\n+            pub static S_IFREG : c_int = 32768;\n+            pub static S_IFMT : c_int = 61440;\n+            pub static S_IEXEC : c_int = 64;\n+            pub static S_IWRITE : c_int = 128;\n+            pub static S_IREAD : c_int = 256;\n+            pub static S_IRWXU : c_int = 448;\n+            pub static S_IXUSR : c_int = 64;\n+            pub static S_IWUSR : c_int = 128;\n+            pub static S_IRUSR : c_int = 256;\n+            pub static F_OK : c_int = 0;\n+            pub static R_OK : c_int = 4;\n+            pub static W_OK : c_int = 2;\n+            pub static X_OK : c_int = 1;\n+            pub static STDIN_FILENO : c_int = 0;\n+            pub static STDOUT_FILENO : c_int = 1;\n+            pub static STDERR_FILENO : c_int = 2;\n         }\n         pub mod posix01 {\n         }\n@@ -957,18 +963,19 @@ pub mod consts {\n         pub mod bsd44 {\n         }\n         pub mod extra {\n+            use libc::types::os::arch::c95::c_int;\n             use libc::types::os::arch::extra::{DWORD, BOOL};\n \n             pub static TRUE : BOOL = 1;\n             pub static FALSE : BOOL = 0;\n \n-            pub static O_TEXT : int = 16384;\n-            pub static O_BINARY : int = 32768;\n-            pub static O_NOINHERIT: int = 128;\n+            pub static O_TEXT : c_int = 16384;\n+            pub static O_BINARY : c_int = 32768;\n+            pub static O_NOINHERIT: c_int = 128;\n \n-            pub static ERROR_SUCCESS : int = 0;\n-            pub static ERROR_INSUFFICIENT_BUFFER : int = 122;\n-            pub static INVALID_HANDLE_VALUE: int = -1;\n+            pub static ERROR_SUCCESS : c_int = 0;\n+            pub static ERROR_INSUFFICIENT_BUFFER : c_int = 122;\n+            pub static INVALID_HANDLE_VALUE: c_int = -1;\n \n             pub static DELETE : DWORD = 0x00010000;\n             pub static READ_CONTROL : DWORD = 0x00020000;\n@@ -1021,331 +1028,815 @@ pub mod consts {\n     #[cfg(target_os = \"android\")]\n     pub mod os {\n         pub mod c95 {\n-            pub static EXIT_FAILURE : int = 1;\n-            pub static EXIT_SUCCESS : int = 0;\n-            pub static RAND_MAX : int = 2147483647;\n-            pub static EOF : int = -1;\n-            pub static SEEK_SET : int = 0;\n-            pub static SEEK_CUR : int = 1;\n-            pub static SEEK_END : int = 2;\n-            pub static _IOFBF : int = 0;\n-            pub static _IONBF : int = 2;\n-            pub static _IOLBF : int = 1;\n-            pub static BUFSIZ : uint = 8192_u;\n-            pub static FOPEN_MAX : uint = 16_u;\n-            pub static FILENAME_MAX : uint = 4096_u;\n-            pub static L_tmpnam : uint = 20_u;\n-            pub static TMP_MAX : uint = 238328_u;\n+            use libc::types::os::arch::c95::{c_int, c_uint};\n+\n+            pub static EXIT_FAILURE : c_int = 1;\n+            pub static EXIT_SUCCESS : c_int = 0;\n+            pub static RAND_MAX : c_int = 2147483647;\n+            pub static EOF : c_int = -1;\n+            pub static SEEK_SET : c_int = 0;\n+            pub static SEEK_CUR : c_int = 1;\n+            pub static SEEK_END : c_int = 2;\n+            pub static _IOFBF : c_int = 0;\n+            pub static _IONBF : c_int = 2;\n+            pub static _IOLBF : c_int = 1;\n+            pub static BUFSIZ : c_uint = 8192_u32;\n+            pub static FOPEN_MAX : c_uint = 16_u32;\n+            pub static FILENAME_MAX : c_uint = 4096_u32;\n+            pub static L_tmpnam : c_uint = 20_u32;\n+            pub static TMP_MAX : c_uint = 238328_u32;\n         }\n         pub mod c99 {\n         }\n         #[cfg(target_arch = \"x86\")]\n         #[cfg(target_arch = \"x86_64\")]\n         #[cfg(target_arch = \"arm\")]\n         pub mod posix88 {\n-            pub static O_RDONLY : int = 0;\n-            pub static O_WRONLY : int = 1;\n-            pub static O_RDWR : int = 2;\n-            pub static O_APPEND : int = 1024;\n-            pub static O_CREAT : int = 64;\n-            pub static O_EXCL : int = 128;\n-            pub static O_TRUNC : int = 512;\n-            pub static S_IFIFO : int = 4096;\n-            pub static S_IFCHR : int = 8192;\n-            pub static S_IFBLK : int = 24576;\n-            pub static S_IFDIR : int = 16384;\n-            pub static S_IFREG : int = 32768;\n-            pub static S_IFMT : int = 61440;\n-            pub static S_IEXEC : int = 64;\n-            pub static S_IWRITE : int = 128;\n-            pub static S_IREAD : int = 256;\n-            pub static S_IRWXU : int = 448;\n-            pub static S_IXUSR : int = 64;\n-            pub static S_IWUSR : int = 128;\n-            pub static S_IRUSR : int = 256;\n-            pub static F_OK : int = 0;\n-            pub static R_OK : int = 4;\n-            pub static W_OK : int = 2;\n-            pub static X_OK : int = 1;\n-            pub static STDIN_FILENO : int = 0;\n-            pub static STDOUT_FILENO : int = 1;\n-            pub static STDERR_FILENO : int = 2;\n-            pub static F_LOCK : int = 1;\n-            pub static F_TEST : int = 3;\n-            pub static F_TLOCK : int = 2;\n-            pub static F_ULOCK : int = 0;\n-            pub static SIGHUP : int = 1;\n-            pub static SIGINT : int = 2;\n-            pub static SIGQUIT : int = 3;\n-            pub static SIGILL : int = 4;\n-            pub static SIGABRT : int = 6;\n-            pub static SIGFPE : int = 8;\n-            pub static SIGKILL : int = 9;\n-            pub static SIGSEGV : int = 11;\n-            pub static SIGPIPE : int = 13;\n-            pub static SIGALRM : int = 14;\n-            pub static SIGTERM : int = 15;\n+            use libc::types::os::arch::c95::c_int;\n+            use libc::types::common::c95::c_void;\n+\n+            pub static O_RDONLY : c_int = 0;\n+            pub static O_WRONLY : c_int = 1;\n+            pub static O_RDWR : c_int = 2;\n+            pub static O_APPEND : c_int = 1024;\n+            pub static O_CREAT : c_int = 64;\n+            pub static O_EXCL : c_int = 128;\n+            pub static O_TRUNC : c_int = 512;\n+            pub static S_IFIFO : c_int = 4096;\n+            pub static S_IFCHR : c_int = 8192;\n+            pub static S_IFBLK : c_int = 24576;\n+            pub static S_IFDIR : c_int = 16384;\n+            pub static S_IFREG : c_int = 32768;\n+            pub static S_IFMT : c_int = 61440;\n+            pub static S_IEXEC : c_int = 64;\n+            pub static S_IWRITE : c_int = 128;\n+            pub static S_IREAD : c_int = 256;\n+            pub static S_IRWXU : c_int = 448;\n+            pub static S_IXUSR : c_int = 64;\n+            pub static S_IWUSR : c_int = 128;\n+            pub static S_IRUSR : c_int = 256;\n+            pub static F_OK : c_int = 0;\n+            pub static R_OK : c_int = 4;\n+            pub static W_OK : c_int = 2;\n+            pub static X_OK : c_int = 1;\n+            pub static STDIN_FILENO : c_int = 0;\n+            pub static STDOUT_FILENO : c_int = 1;\n+            pub static STDERR_FILENO : c_int = 2;\n+            pub static F_LOCK : c_int = 1;\n+            pub static F_TEST : c_int = 3;\n+            pub static F_TLOCK : c_int = 2;\n+            pub static F_ULOCK : c_int = 0;\n+            pub static SIGHUP : c_int = 1;\n+            pub static SIGINT : c_int = 2;\n+            pub static SIGQUIT : c_int = 3;\n+            pub static SIGILL : c_int = 4;\n+            pub static SIGABRT : c_int = 6;\n+            pub static SIGFPE : c_int = 8;\n+            pub static SIGKILL : c_int = 9;\n+            pub static SIGSEGV : c_int = 11;\n+            pub static SIGPIPE : c_int = 13;\n+            pub static SIGALRM : c_int = 14;\n+            pub static SIGTERM : c_int = 15;\n+\n+            pub static PROT_NONE : c_int = 0;\n+            pub static PROT_READ : c_int = 1;\n+            pub static PROT_WRITE : c_int = 2;\n+            pub static PROT_EXEC : c_int = 4;\n+\n+            pub static MAP_FILE : c_int = 0x0000;\n+            pub static MAP_SHARED : c_int = 0x0001;\n+            pub static MAP_PRIVATE : c_int = 0x0002;\n+            pub static MAP_FIXED : c_int = 0x0010;\n+            pub static MAP_ANON : c_int = 0x1000;\n+\n+            pub static MAP_FAILED : *c_void = -1 as *c_void;\n+\n+            pub static MCL_CURRENT : c_int = 0x0001;\n+            pub static MCL_FUTURE : c_int = 0x0002;\n+\n+            pub static MS_ASYNC : c_int = 0x0001;\n+            pub static MS_INVALIDATE : c_int = 0x0002;\n+            pub static MS_SYNC : c_int = 0x0004;\n         }\n         #[cfg(target_arch = \"mips\")]\n         pub mod posix88 {\n-            pub static O_RDONLY : int = 0;\n-            pub static O_WRONLY : int = 1;\n-            pub static O_RDWR : int = 2;\n-            pub static O_APPEND : int = 8;\n-            pub static O_CREAT : int = 256;\n-            pub static O_EXCL : int = 1024;\n-            pub static O_TRUNC : int = 512;\n-            pub static S_IFIFO : int = 4096;\n-            pub static S_IFCHR : int = 8192;\n-            pub static S_IFBLK : int = 24576;\n-            pub static S_IFDIR : int = 16384;\n-            pub static S_IFREG : int = 32768;\n-            pub static S_IFMT : int = 61440;\n-            pub static S_IEXEC : int = 64;\n-            pub static S_IWRITE : int = 128;\n-            pub static S_IREAD : int = 256;\n-            pub static S_IRWXU : int = 448;\n-            pub static S_IXUSR : int = 64;\n-            pub static S_IWUSR : int = 128;\n-            pub static S_IRUSR : int = 256;\n-            pub static F_OK : int = 0;\n-            pub static R_OK : int = 4;\n-            pub static W_OK : int = 2;\n-            pub static X_OK : int = 1;\n-            pub static STDIN_FILENO : int = 0;\n-            pub static STDOUT_FILENO : int = 1;\n-            pub static STDERR_FILENO : int = 2;\n-            pub static F_LOCK : int = 1;\n-            pub static F_TEST : int = 3;\n-            pub static F_TLOCK : int = 2;\n-            pub static F_ULOCK : int = 0;\n-            pub static SIGHUP : int = 1;\n-            pub static SIGINT : int = 2;\n-            pub static SIGQUIT : int = 3;\n-            pub static SIGILL : int = 4;\n-            pub static SIGABRT : int = 6;\n-            pub static SIGFPE : int = 8;\n-            pub static SIGKILL : int = 9;\n-            pub static SIGSEGV : int = 11;\n-            pub static SIGPIPE : int = 13;\n-            pub static SIGALRM : int = 14;\n-            pub static SIGTERM : int = 15;\n+            use libc::types::os::arch::c95::c_int;\n+            use libc::types::common::c95::c_void;\n+\n+            pub static O_RDONLY : c_int = 0;\n+            pub static O_WRONLY : c_int = 1;\n+            pub static O_RDWR : c_int = 2;\n+            pub static O_APPEND : c_int = 8;\n+            pub static O_CREAT : c_int = 256;\n+            pub static O_EXCL : c_int = 1024;\n+            pub static O_TRUNC : c_int = 512;\n+            pub static S_IFIFO : c_int = 4096;\n+            pub static S_IFCHR : c_int = 8192;\n+            pub static S_IFBLK : c_int = 24576;\n+            pub static S_IFDIR : c_int = 16384;\n+            pub static S_IFREG : c_int = 32768;\n+            pub static S_IFMT : c_int = 61440;\n+            pub static S_IEXEC : c_int = 64;\n+            pub static S_IWRITE : c_int = 128;\n+            pub static S_IREAD : c_int = 256;\n+            pub static S_IRWXU : c_int = 448;\n+            pub static S_IXUSR : c_int = 64;\n+            pub static S_IWUSR : c_int = 128;\n+            pub static S_IRUSR : c_int = 256;\n+            pub static F_OK : c_int = 0;\n+            pub static R_OK : c_int = 4;\n+            pub static W_OK : c_int = 2;\n+            pub static X_OK : c_int = 1;\n+            pub static STDIN_FILENO : c_int = 0;\n+            pub static STDOUT_FILENO : c_int = 1;\n+            pub static STDERR_FILENO : c_int = 2;\n+            pub static F_LOCK : c_int = 1;\n+            pub static F_TEST : c_int = 3;\n+            pub static F_TLOCK : c_int = 2;\n+            pub static F_ULOCK : c_int = 0;\n+            pub static SIGHUP : c_int = 1;\n+            pub static SIGINT : c_int = 2;\n+            pub static SIGQUIT : c_int = 3;\n+            pub static SIGILL : c_int = 4;\n+            pub static SIGABRT : c_int = 6;\n+            pub static SIGFPE : c_int = 8;\n+            pub static SIGKILL : c_int = 9;\n+            pub static SIGSEGV : c_int = 11;\n+            pub static SIGPIPE : c_int = 13;\n+            pub static SIGALRM : c_int = 14;\n+            pub static SIGTERM : c_int = 15;\n+\n+            pub static PROT_NONE : c_int = 0;\n+            pub static PROT_READ : c_int = 1;\n+            pub static PROT_WRITE : c_int = 2;\n+            pub static PROT_EXEC : c_int = 4;\n+\n+            pub static MAP_FILE : c_int = 0x0000;\n+            pub static MAP_SHARED : c_int = 0x0001;\n+            pub static MAP_PRIVATE : c_int = 0x0002;\n+            pub static MAP_FIXED : c_int = 0x0010;\n+            pub static MAP_ANON : c_int = 0x1000;\n+\n+            pub static MAP_FAILED : *c_void = -1 as *c_void;\n+\n+            pub static MCL_CURRENT : c_int = 0x0001;\n+            pub static MCL_FUTURE : c_int = 0x0002;\n+\n+            pub static MS_ASYNC : c_int = 0x0001;\n+            pub static MS_INVALIDATE : c_int = 0x0002;\n+            pub static MS_SYNC : c_int = 0x0004;\n+\n+            pub static _SC_ARG_MAX : c_int = 0;\n+            pub static _SC_CHILD_MAX : c_int = 1;\n+            pub static _SC_CLK_TCK : c_int = 2;\n+            pub static _SC_NGROUPS_MAX : c_int = 3;\n+            pub static _SC_OPEN_MAX : c_int = 4;\n+            pub static _SC_STREAM_MAX : c_int = 5;\n+            pub static _SC_TZNAME_MAX : c_int = 6;\n+            pub static _SC_JOB_CONTROL : c_int = 7;\n+            pub static _SC_SAVED_IDS : c_int = 8;\n+            pub static _SC_REALTIME_SIGNALS : c_int = 9;\n+            pub static _SC_PRIORITY_SCHEDULING : c_int = 10;\n+            pub static _SC_TIMERS : c_int = 11;\n+            pub static _SC_ASYNCHRONOUS_IO : c_int = 12;\n+            pub static _SC_PRIORITIZED_IO : c_int = 13;\n+            pub static _SC_SYNCHRONIZED_IO : c_int = 14;\n+            pub static _SC_FSYNC : c_int = 15;\n+            pub static _SC_MAPPED_FILES : c_int = 16;\n+            pub static _SC_MEMLOCK : c_int = 17;\n+            pub static _SC_MEMLOCK_RANGE : c_int = 18;\n+            pub static _SC_MEMORY_PROTECTION : c_int = 19;\n+            pub static _SC_MESSAGE_PASSING : c_int = 20;\n+            pub static _SC_SEMAPHORES : c_int = 21;\n+            pub static _SC_SHARED_MEMORY_OBJECTS : c_int = 22;\n+            pub static _SC_AIO_LISTIO_MAX : c_int = 23;\n+            pub static _SC_AIO_MAX : c_int = 24;\n+            pub static _SC_AIO_PRIO_DELTA_MAX : c_int = 25;\n+            pub static _SC_DELAYTIMER_MAX : c_int = 26;\n+            pub static _SC_MQ_OPEN_MAX : c_int = 27;\n+            pub static _SC_VERSION : c_int = 29;\n+            pub static _SC_PAGESIZE : c_int = 30;\n+            pub static _SC_RTSIG_MAX : c_int = 31;\n+            pub static _SC_SEM_NSEMS_MAX : c_int = 32;\n+            pub static _SC_SEM_VALUE_MAX : c_int = 33;\n+            pub static _SC_SIGQUEUE_MAX : c_int = 34;\n+            pub static _SC_TIMER_MAX : c_int = 35;\n+            pub static _SC_BC_BASE_MAX : c_int = 36;\n+            pub static _SC_BC_DIM_MAX : c_int = 37;\n+            pub static _SC_BC_SCALE_MAX : c_int = 38;\n+            pub static _SC_BC_STRING_MAX : c_int = 39;\n+            pub static _SC_COLL_WEIGHTS_MAX : c_int = 40;\n+            pub static _SC_EXPR_NEST_MAX : c_int = 42;\n+            pub static _SC_LINE_MAX : c_int = 43;\n+            pub static _SC_RE_DUP_MAX : c_int = 44;\n+            pub static _SC_2_VERSION : c_int = 46;\n+            pub static _SC_2_C_BIND : c_int = 47;\n+            pub static _SC_2_C_DEV : c_int = 48;\n+            pub static _SC_2_FORT_DEV : c_int = 49;\n+            pub static _SC_2_FORT_RUN : c_int = 50;\n+            pub static _SC_2_SW_DEV : c_int = 51;\n+            pub static _SC_2_LOCALEDEF : c_int = 52;\n+            pub static _SC_2_CHAR_TERM : c_int = 95;\n+            pub static _SC_2_C_VERSION : c_int = 96;\n+            pub static _SC_2_UPE : c_int = 97;\n+            pub static _SC_XBS5_ILP32_OFF32 : c_int = 125;\n+            pub static _SC_XBS5_ILP32_OFFBIG : c_int = 126;\n+            pub static _SC_XBS5_LPBIG_OFFBIG : c_int = 128;\n         }\n         pub mod posix01 {\n-            pub static SIGTRAP : int = 5;\n-\n-            pub static GLOB_ERR      : int = 1 << 0;\n-            pub static GLOB_MARK     : int = 1 << 1;\n-            pub static GLOB_NOSORT   : int = 1 << 2;\n-            pub static GLOB_DOOFFS   : int = 1 << 3;\n-            pub static GLOB_NOCHECK  : int = 1 << 4;\n-            pub static GLOB_APPEND   : int = 1 << 5;\n-            pub static GLOB_NOESCAPE : int = 1 << 6;\n-\n-            pub static GLOB_NOSPACE  : int = 1;\n-            pub static GLOB_ABORTED  : int = 2;\n-            pub static GLOB_NOMATCH  : int = 3;\n+            use libc::types::os::arch::c95::c_int;\n+\n+            pub static SIGTRAP : c_int = 5;\n+\n+            pub static GLOB_ERR      : c_int = 1 << 0;\n+            pub static GLOB_MARK     : c_int = 1 << 1;\n+            pub static GLOB_NOSORT   : c_int = 1 << 2;\n+            pub static GLOB_DOOFFS   : c_int = 1 << 3;\n+            pub static GLOB_NOCHECK  : c_int = 1 << 4;\n+            pub static GLOB_APPEND   : c_int = 1 << 5;\n+            pub static GLOB_NOESCAPE : c_int = 1 << 6;\n+\n+            pub static GLOB_NOSPACE  : c_int = 1;\n+            pub static GLOB_ABORTED  : c_int = 2;\n+            pub static GLOB_NOMATCH  : c_int = 3;\n+\n+            pub static POSIX_MADV_NORMAL : c_int = 0;\n+            pub static POSIX_MADV_RANDOM : c_int = 1;\n+            pub static POSIX_MADV_SEQUENTIAL : c_int = 2;\n+            pub static POSIX_MADV_WILLNEED : c_int = 3;\n+            pub static POSIX_MADV_DONTNEED : c_int = 4;\n+\n+            pub static _SC_MQ_PRIO_MAX : c_int = 28;\n+            pub static _SC_IOV_MAX : c_int = 60;\n+            pub static _SC_GETGR_R_SIZE_MAX : c_int = 69;\n+            pub static _SC_GETPW_R_SIZE_MAX : c_int = 70;\n+            pub static _SC_LOGIN_NAME_MAX : c_int = 71;\n+            pub static _SC_TTY_NAME_MAX : c_int = 72;\n+            pub static _SC_THREADS : c_int = 67;\n+            pub static _SC_THREAD_SAFE_FUNCTIONS : c_int = 68;\n+            pub static _SC_THREAD_DESTRUCTOR_ITERATIONS : c_int = 73;\n+            pub static _SC_THREAD_KEYS_MAX : c_int = 74;\n+            pub static _SC_THREAD_STACK_MIN : c_int = 75;\n+            pub static _SC_THREAD_THREADS_MAX : c_int = 76;\n+            pub static _SC_THREAD_ATTR_STACKADDR : c_int = 77;\n+            pub static _SC_THREAD_ATTR_STACKSIZE : c_int = 78;\n+            pub static _SC_THREAD_PRIORITY_SCHEDULING : c_int = 79;\n+            pub static _SC_THREAD_PRIO_INHERIT : c_int = 80;\n+            pub static _SC_THREAD_PRIO_PROTECT : c_int = 81;\n+            pub static _SC_THREAD_PROCESS_SHARED : c_int = 82;\n+            pub static _SC_ATEXIT_MAX : c_int = 87;\n+            pub static _SC_XOPEN_VERSION : c_int = 89;\n+            pub static _SC_XOPEN_XCU_VERSION : c_int = 90;\n+            pub static _SC_XOPEN_UNIX : c_int = 91;\n+            pub static _SC_XOPEN_CRYPT : c_int = 92;\n+            pub static _SC_XOPEN_ENH_I18N : c_int = 93;\n+            pub static _SC_XOPEN_SHM : c_int = 94;\n+            pub static _SC_XOPEN_LEGACY : c_int = 129;\n+            pub static _SC_XOPEN_REALTIME : c_int = 130;\n+            pub static _SC_XOPEN_REALTIME_THREADS : c_int = 131;\n         }\n         pub mod posix08 {\n         }\n         pub mod bsd44 {\n+            use libc::types::os::arch::c95::c_int;\n+\n+            pub static MADV_NORMAL : c_int = 0;\n+            pub static MADV_RANDOM : c_int = 1;\n+            pub static MADV_SEQUENTIAL : c_int = 2;\n+            pub static MADV_WILLNEED : c_int = 3;\n+            pub static MADV_DONTNEED : c_int = 4;\n+            pub static MADV_REMOVE : c_int = 9;\n+            pub static MADV_DONTFORK : c_int = 10;\n+            pub static MADV_DOFORK : c_int = 11;\n+            pub static MADV_MERGEABLE : c_int = 12;\n+            pub static MADV_UNMERGEABLE : c_int = 13;\n+            pub static MADV_HWPOISON : c_int = 100;\n         }\n         #[cfg(target_arch = \"x86\")]\n         #[cfg(target_arch = \"x86_64\")]\n         #[cfg(target_arch = \"arm\")]\n         pub mod extra {\n-            pub static O_RSYNC : int = 1052672;\n-            pub static O_DSYNC : int = 4096;\n-            pub static O_SYNC : int = 1052672;\n+            use libc::types::os::arch::c95::c_int;\n+\n+            pub static O_RSYNC : c_int = 1052672;\n+            pub static O_DSYNC : c_int = 4096;\n+            pub static O_SYNC : c_int = 1052672;\n+\n+            pub static PROT_GROWSDOWN : c_int = 0x010000000;\n+            pub static PROT_GROWSUP : c_int = 0x020000000;\n+\n+            pub static MAP_TYPE : c_int = 0x000f;\n+            pub static MAP_ANONONYMOUS : c_int = 0x1000;\n+            pub static MAP_32BIT : c_int = 0x0040;\n+            pub static MAP_GROWSDOWN : c_int = 0x0100;\n+            pub static MAP_DENYWRITE : c_int = 0x0800;\n+            pub static MAP_EXECUTABLE : c_int = 0x01000;\n+            pub static MAP_LOCKED : c_int = 0x02000;\n+            pub static MAP_NONRESERVE : c_int = 0x04000;\n+            pub static MAP_POPULATE : c_int = 0x08000;\n+            pub static MAP_NONBLOCK : c_int = 0x010000;\n+            pub static MAP_STACK : c_int = 0x020000;\n         }\n         #[cfg(target_arch = \"mips\")]\n         pub mod extra {\n-            pub static O_RSYNC : int = 16400;\n-            pub static O_DSYNC : int = 16;\n-            pub static O_SYNC : int = 16400;\n+            use libc::types::os::arch::c95::c_int;\n+\n+            pub static O_RSYNC : c_int = 16400;\n+            pub static O_DSYNC : c_int = 16;\n+            pub static O_SYNC : c_int = 16400;\n+\n+            pub static PROT_GROWSDOWN : c_int = 0x010000000;\n+            pub static PROT_GROWSUP : c_int = 0x020000000;\n+\n+            pub static MAP_TYPE : c_int = 0x000f;\n+            pub static MAP_ANONONYMOUS : c_int = 0x1000;\n+            pub static MAP_32BIT : c_int = 0x0040;\n+            pub static MAP_GROWSDOWN : c_int = 0x0100;\n+            pub static MAP_DENYWRITE : c_int = 0x0800;\n+            pub static MAP_EXECUTABLE : c_int = 0x01000;\n+            pub static MAP_LOCKED : c_int = 0x02000;\n+            pub static MAP_NONRESERVE : c_int = 0x04000;\n+            pub static MAP_POPULATE : c_int = 0x08000;\n+            pub static MAP_NONBLOCK : c_int = 0x010000;\n+            pub static MAP_STACK : c_int = 0x020000;\n         }\n     }\n \n     #[cfg(target_os = \"freebsd\")]\n     pub mod os {\n         pub mod c95 {\n-            pub static EXIT_FAILURE : int = 1;\n-            pub static EXIT_SUCCESS : int = 0;\n-            pub static RAND_MAX : int = 2147483647;\n-            pub static EOF : int = -1;\n-            pub static SEEK_SET : int = 0;\n-            pub static SEEK_CUR : int = 1;\n-            pub static SEEK_END : int = 2;\n-            pub static _IOFBF : int = 0;\n-            pub static _IONBF : int = 2;\n-            pub static _IOLBF : int = 1;\n-            pub static BUFSIZ : uint = 1024_u;\n-            pub static FOPEN_MAX : uint = 20_u;\n-            pub static FILENAME_MAX : uint = 1024_u;\n-            pub static L_tmpnam : uint = 1024_u;\n-            pub static TMP_MAX : uint = 308915776_u;\n+            use libc::types::os::arch::c95::{c_int, c_uint};\n+\n+            pub static EXIT_FAILURE : c_int = 1;\n+            pub static EXIT_SUCCESS : c_int = 0;\n+            pub static RAND_MAX : c_int = 2147483647;\n+            pub static EOF : c_int = -1;\n+            pub static SEEK_SET : c_int = 0;\n+            pub static SEEK_CUR : c_int = 1;\n+            pub static SEEK_END : c_int = 2;\n+            pub static _IOFBF : c_int = 0;\n+            pub static _IONBF : c_int = 2;\n+            pub static _IOLBF : c_int = 1;\n+            pub static BUFSIZ : c_uint = 1024_u32;\n+            pub static FOPEN_MAX : c_uint = 20_u32;\n+            pub static FILENAME_MAX : c_uint = 1024_u32;\n+            pub static L_tmpnam : c_uint = 1024_u32;\n+            pub static TMP_MAX : c_uint = 308915776_u32;\n         }\n         pub mod c99 {\n         }\n         pub mod posix88 {\n-            pub static O_RDONLY : int = 0;\n-            pub static O_WRONLY : int = 1;\n-            pub static O_RDWR : int = 2;\n-            pub static O_APPEND : int = 8;\n-            pub static O_CREAT : int = 512;\n-            pub static O_EXCL : int = 2048;\n-            pub static O_TRUNC : int = 1024;\n-            pub static S_IFIFO : int = 4096;\n-            pub static S_IFCHR : int = 8192;\n-            pub static S_IFBLK : int = 24576;\n-            pub static S_IFDIR : int = 16384;\n-            pub static S_IFREG : int = 32768;\n-            pub static S_IFMT : int = 61440;\n-            pub static S_IEXEC : int = 64;\n-            pub static S_IWRITE : int = 128;\n-            pub static S_IREAD : int = 256;\n-            pub static S_IRWXU : int = 448;\n-            pub static S_IXUSR : int = 64;\n-            pub static S_IWUSR : int = 128;\n-            pub static S_IRUSR : int = 256;\n-            pub static F_OK : int = 0;\n-            pub static R_OK : int = 4;\n-            pub static W_OK : int = 2;\n-            pub static X_OK : int = 1;\n-            pub static STDIN_FILENO : int = 0;\n-            pub static STDOUT_FILENO : int = 1;\n-            pub static STDERR_FILENO : int = 2;\n-            pub static F_LOCK : int = 1;\n-            pub static F_TEST : int = 3;\n-            pub static F_TLOCK : int = 2;\n-            pub static F_ULOCK : int = 0;\n-            pub static SIGHUP : int = 1;\n-            pub static SIGINT : int = 2;\n-            pub static SIGQUIT : int = 3;\n-            pub static SIGILL : int = 4;\n-            pub static SIGABRT : int = 6;\n-            pub static SIGFPE : int = 8;\n-            pub static SIGKILL : int = 9;\n-            pub static SIGSEGV : int = 11;\n-            pub static SIGPIPE : int = 13;\n-            pub static SIGALRM : int = 14;\n-            pub static SIGTERM : int = 15;\n+            use libc::types::common::c95::c_void;\n+            use libc::types::os::arch::c95::c_int;\n+\n+            pub static O_RDONLY : c_int = 0;\n+            pub static O_WRONLY : c_int = 1;\n+            pub static O_RDWR : c_int = 2;\n+            pub static O_APPEND : c_int = 8;\n+            pub static O_CREAT : c_int = 512;\n+            pub static O_EXCL : c_int = 2048;\n+            pub static O_TRUNC : c_int = 1024;\n+            pub static S_IFIFO : c_int = 4096;\n+            pub static S_IFCHR : c_int = 8192;\n+            pub static S_IFBLK : c_int = 24576;\n+            pub static S_IFDIR : c_int = 16384;\n+            pub static S_IFREG : c_int = 32768;\n+            pub static S_IFMT : c_int = 61440;\n+            pub static S_IEXEC : c_int = 64;\n+            pub static S_IWRITE : c_int = 128;\n+            pub static S_IREAD : c_int = 256;\n+            pub static S_IRWXU : c_int = 448;\n+            pub static S_IXUSR : c_int = 64;\n+            pub static S_IWUSR : c_int = 128;\n+            pub static S_IRUSR : c_int = 256;\n+            pub static F_OK : c_int = 0;\n+            pub static R_OK : c_int = 4;\n+            pub static W_OK : c_int = 2;\n+            pub static X_OK : c_int = 1;\n+            pub static STDIN_FILENO : c_int = 0;\n+            pub static STDOUT_FILENO : c_int = 1;\n+            pub static STDERR_FILENO : c_int = 2;\n+            pub static F_LOCK : c_int = 1;\n+            pub static F_TEST : c_int = 3;\n+            pub static F_TLOCK : c_int = 2;\n+            pub static F_ULOCK : c_int = 0;\n+            pub static SIGHUP : c_int = 1;\n+            pub static SIGINT : c_int = 2;\n+            pub static SIGQUIT : c_int = 3;\n+            pub static SIGILL : c_int = 4;\n+            pub static SIGABRT : c_int = 6;\n+            pub static SIGFPE : c_int = 8;\n+            pub static SIGKILL : c_int = 9;\n+            pub static SIGSEGV : c_int = 11;\n+            pub static SIGPIPE : c_int = 13;\n+            pub static SIGALRM : c_int = 14;\n+            pub static SIGTERM : c_int = 15;\n+\n+            pub static PROT_NONE : c_int = 0;\n+            pub static PROT_READ : c_int = 1;\n+            pub static PROT_WRITE : c_int = 2;\n+            pub static PROT_EXEC : c_int = 4;\n+\n+            pub static MAP_FILE : c_int = 0x0000;\n+            pub static MAP_SHARED : c_int = 0x0001;\n+            pub static MAP_PRIVATE : c_int = 0x0002;\n+            pub static MAP_FIXED : c_int = 0x0010;\n+            pub static MAP_ANON : c_int = 0x1000;\n+\n+            pub static MAP_FAILED : *c_void = -1 as *c_void;\n+\n+            pub static MCL_CURRENT : c_int = 0x0001;\n+            pub static MCL_FUTURE : c_int = 0x0002;\n+\n+            pub static MS_SYNC : c_int = 0x0000;\n+            pub static MS_ASYNC : c_int = 0x0001;\n+            pub static MS_INVALIDATE : c_int = 0x0002;\n+\n+            pub static _SC_ARG_MAX : c_int = 1;\n+            pub static _SC_CHILD_MAX : c_int = 2;\n+            pub static _SC_CLK_TCK : c_int = 3;\n+            pub static _SC_NGROUPS_MAX : c_int = 4;\n+            pub static _SC_OPEN_MAX : c_int = 5;\n+            pub static _SC_JOB_CONTROL : c_int = 6;\n+            pub static _SC_SAVED_IDS : c_int = 7;\n+            pub static _SC_VERSION : c_int = 8;\n+            pub static _SC_BC_BASE_MAX : c_int = 9;\n+            pub static _SC_BC_DIM_MAX : c_int = 10;\n+            pub static _SC_BC_SCALE_MAX : c_int = 11;\n+            pub static _SC_BC_STRING_MAX : c_int = 12;\n+            pub static _SC_COLL_WEIGHTS_MAX : c_int = 13;\n+            pub static _SC_EXPR_NEST_MAX : c_int = 14;\n+            pub static _SC_LINE_MAX : c_int = 15;\n+            pub static _SC_RE_DUP_MAX : c_int = 16;\n+            pub static _SC_2_VERSION : c_int = 17;\n+            pub static _SC_2_C_BIND : c_int = 18;\n+            pub static _SC_2_C_DEV : c_int = 19;\n+            pub static _SC_2_CHAR_TERM : c_int = 20;\n+            pub static _SC_2_FORT_DEV : c_int = 21;\n+            pub static _SC_2_FORT_RUN : c_int = 22;\n+            pub static _SC_2_LOCALEDEF : c_int = 23;\n+            pub static _SC_2_SW_DEV : c_int = 24;\n+            pub static _SC_2_UPE : c_int = 25;\n+            pub static _SC_STREAM_MAX : c_int = 26;\n+            pub static _SC_TZNAME_MAX : c_int = 27;\n+            pub static _SC_ASYNCHRONOUS_IO : c_int = 28;\n+            pub static _SC_MAPPED_FILES : c_int = 29;\n+            pub static _SC_MEMLOCK : c_int = 30;\n+            pub static _SC_MEMLOCK_RANGE : c_int = 31;\n+            pub static _SC_MEMORY_PROTECTION : c_int = 32;\n+            pub static _SC_MESSAGE_PASSING : c_int = 33;\n+            pub static _SC_PRIORITIZED_IO : c_int = 34;\n+            pub static _SC_PRIORITY_SCHEDULING : c_int = 35;\n+            pub static _SC_REALTIME_SIGNALS : c_int = 36;\n+            pub static _SC_SEMAPHORES : c_int = 37;\n+            pub static _SC_FSYNC : c_int = 38;\n+            pub static _SC_SHARED_MEMORY_OBJECTS : c_int = 39;\n+            pub static _SC_SYNCHRONIZED_IO : c_int = 40;\n+            pub static _SC_TIMERS : c_int = 41;\n+            pub static _SC_AIO_LISTIO_MAX : c_int = 42;\n+            pub static _SC_AIO_MAX : c_int = 43;\n+            pub static _SC_AIO_PRIO_DELTA_MAX : c_int = 44;\n+            pub static _SC_DELAYTIMER_MAX : c_int = 45;\n+            pub static _SC_MQ_OPEN_MAX : c_int = 46;\n+            pub static _SC_PAGESIZE : c_int = 47;\n+            pub static _SC_RTSIG_MAX : c_int = 48;\n+            pub static _SC_SEM_NSEMS_MAX : c_int = 49;\n+            pub static _SC_SEM_VALUE_MAX : c_int = 50;\n+            pub static _SC_SIGQUEUE_MAX : c_int = 51;\n+            pub static _SC_TIMER_MAX : c_int = 52;\n         }\n         pub mod posix01 {\n-            pub static SIGTRAP : int = 5;\n-\n-            pub static GLOB_APPEND   : int = 0x0001;\n-            pub static GLOB_DOOFFS   : int = 0x0002;\n-            pub static GLOB_ERR      : int = 0x0004;\n-            pub static GLOB_MARK     : int = 0x0008;\n-            pub static GLOB_NOCHECK  : int = 0x0010;\n-            pub static GLOB_NOSORT   : int = 0x0020;\n-            pub static GLOB_NOESCAPE : int = 0x2000;\n-\n-            pub static GLOB_NOSPACE  : int = -1;\n-            pub static GLOB_ABORTED  : int = -2;\n-            pub static GLOB_NOMATCH  : int = -3;\n+            use libc::types::os::arch::c95::c_int;\n+\n+            pub static SIGTRAP : c_int = 5;\n+\n+            pub static GLOB_APPEND   : c_int = 0x0001;\n+            pub static GLOB_DOOFFS   : c_int = 0x0002;\n+            pub static GLOB_ERR      : c_int = 0x0004;\n+            pub static GLOB_MARK     : c_int = 0x0008;\n+            pub static GLOB_NOCHECK  : c_int = 0x0010;\n+            pub static GLOB_NOSORT   : c_int = 0x0020;\n+            pub static GLOB_NOESCAPE : c_int = 0x2000;\n+\n+            pub static GLOB_NOSPACE  : c_int = -1;\n+            pub static GLOB_ABORTED  : c_int = -2;\n+            pub static GLOB_NOMATCH  : c_int = -3;\n+\n+            pub static POSIX_MADV_NORMAL : c_int = 0;\n+            pub static POSIX_MADV_RANDOM : c_int = 1;\n+            pub static POSIX_MADV_SEQUENTIAL : c_int = 2;\n+            pub static POSIX_MADV_WILLNEED : c_int = 3;\n+            pub static POSIX_MADV_DONTNEED : c_int = 4;\n+\n+            pub static _SC_IOV_MAX : c_int = 56;\n+            pub static _SC_GETGR_R_SIZE_MAX : c_int = 70;\n+            pub static _SC_GETPW_R_SIZE_MAX : c_int = 71;\n+            pub static _SC_LOGIN_NAME_MAX : c_int = 73;\n+            pub static _SC_MQ_PRIO_MAX : c_int = 75;\n+            pub static _SC_THREAD_ATTR_STACKADDR : c_int = 82;\n+            pub static _SC_THREAD_ATTR_STACKSIZE : c_int = 83;\n+            pub static _SC_THREAD_DESTRUCTOR_ITERATIONS : c_int = 85;\n+            pub static _SC_THREAD_KEYS_MAX : c_int = 86;\n+            pub static _SC_THREAD_PRIO_INHERIT : c_int = 87;\n+            pub static _SC_THREAD_PRIO_PROTECT : c_int = 88;\n+            pub static _SC_THREAD_PRIORITY_SCHEDULING : c_int = 89;\n+            pub static _SC_THREAD_PROCESS_SHARED : c_int = 90;\n+            pub static _SC_THREAD_SAFE_FUNCTIONS : c_int = 91;\n+            pub static _SC_THREAD_STACK_MIN : c_int = 93;\n+            pub static _SC_THREAD_THREADS_MAX : c_int = 94;\n+            pub static _SC_THREADS : c_int = 96;\n+            pub static _SC_TTY_NAME_MAX : c_int = 101;\n+            pub static _SC_ATEXIT_MAX : c_int = 107;\n+            pub static _SC_XOPEN_CRYPT : c_int = 108;\n+            pub static _SC_XOPEN_ENH_I18N : c_int = 109;\n+            pub static _SC_XOPEN_LEGACY : c_int = 110;\n+            pub static _SC_XOPEN_REALTIME : c_int = 111;\n+            pub static _SC_XOPEN_REALTIME_THREADS : c_int = 112;\n+            pub static _SC_XOPEN_SHM : c_int = 113;\n+            pub static _SC_XOPEN_UNIX : c_int = 115;\n+            pub static _SC_XOPEN_VERSION : c_int = 116;\n+            pub static _SC_XOPEN_XCU_VERSION : c_int = 117;\n         }\n         pub mod posix08 {\n         }\n         pub mod bsd44 {\n+            use libc::types::os::arch::c95::c_int;\n+\n+            pub static MADV_NORMAL : c_int = 0;\n+            pub static MADV_RANDOM : c_int = 1;\n+            pub static MADV_SEQUENTIAL : c_int = 2;\n+            pub static MADV_WILLNEED : c_int = 3;\n+            pub static MADV_DONTNEED : c_int = 4;\n+            pub static MADV_FREE : c_int = 5;\n+            pub static MADV_NOSYNC : c_int = 6;\n+            pub static MADV_AUTOSYNC : c_int = 7;\n+            pub static MADV_NOCORE : c_int = 8;\n+            pub static MADV_CORE : c_int = 9;\n+            pub static MADV_PROTECT : c_int = 10;\n+\n+            pub static MINCORE_INCORE : c_int =  0x1;\n+            pub static MINCORE_REFERENCED : c_int = 0x2;\n+            pub static MINCORE_MODIFIED : c_int = 0x4;\n+            pub static MINCORE_REFERENCED_OTHER : c_int = 0x8;\n+            pub static MINCORE_MODIFIED_OTHER : c_int = 0x10;\n+            pub static MINCORE_SUPER : c_int = 0x20;\n         }\n         pub mod extra {\n-            pub static O_SYNC : int = 128;\n-            pub static CTL_KERN: int = 1;\n-            pub static KERN_PROC: int = 14;\n-            pub static KERN_PROC_PATHNAME: int = 12;\n+            use libc::types::os::arch::c95::c_int;\n+\n+            pub static O_SYNC : c_int = 128;\n+            pub static CTL_KERN: c_int = 1;\n+            pub static KERN_PROC: c_int = 14;\n+            pub static KERN_PROC_PATHNAME: c_int = 12;\n+\n+            pub static MAP_COPY : c_int = 0x0002;\n+            pub static MAP_RENAME : c_int = 0x0020;\n+            pub static MAP_NORESERVE : c_int = 0x0040;\n+            pub static MAP_HASSEMAPHORE : c_int = 0x0200;\n+            pub static MAP_STACK : c_int = 0x0400;\n+            pub static MAP_NOSYNC : c_int = 0x0800;\n+            pub static MAP_NOCORE : c_int = 0x020000;\n         }\n     }\n \n     #[cfg(target_os = \"macos\")]\n     pub mod os {\n         pub mod c95 {\n-            pub static EXIT_FAILURE : int = 1;\n-            pub static EXIT_SUCCESS : int = 0;\n-            pub static RAND_MAX : int = 2147483647;\n-            pub static EOF : int = -1;\n-            pub static SEEK_SET : int = 0;\n-            pub static SEEK_CUR : int = 1;\n-            pub static SEEK_END : int = 2;\n-            pub static _IOFBF : int = 0;\n-            pub static _IONBF : int = 2;\n-            pub static _IOLBF : int = 1;\n-            pub static BUFSIZ : uint = 1024_u;\n-            pub static FOPEN_MAX : uint = 20_u;\n-            pub static FILENAME_MAX : uint = 1024_u;\n-            pub static L_tmpnam : uint = 1024_u;\n-            pub static TMP_MAX : uint = 308915776_u;\n+            use libc::types::os::arch::c95::{c_int, c_uint};\n+\n+            pub static EXIT_FAILURE : c_int = 1;\n+            pub static EXIT_SUCCESS : c_int = 0;\n+            pub static RAND_MAX : c_int = 2147483647;\n+            pub static EOF : c_int = -1;\n+            pub static SEEK_SET : c_int = 0;\n+            pub static SEEK_CUR : c_int = 1;\n+            pub static SEEK_END : c_int = 2;\n+            pub static _IOFBF : c_int = 0;\n+            pub static _IONBF : c_int = 2;\n+            pub static _IOLBF : c_int = 1;\n+            pub static BUFSIZ : c_uint = 1024_u32;\n+            pub static FOPEN_MAX : c_uint = 20_u32;\n+            pub static FILENAME_MAX : c_uint = 1024_u32;\n+            pub static L_tmpnam : c_uint = 1024_u32;\n+            pub static TMP_MAX : c_uint = 308915776_u32;\n         }\n         pub mod c99 {\n         }\n         pub mod posix88 {\n-            pub static O_RDONLY : int = 0;\n-            pub static O_WRONLY : int = 1;\n-            pub static O_RDWR : int = 2;\n-            pub static O_APPEND : int = 8;\n-            pub static O_CREAT : int = 512;\n-            pub static O_EXCL : int = 2048;\n-            pub static O_TRUNC : int = 1024;\n-            pub static S_IFIFO : int = 4096;\n-            pub static S_IFCHR : int = 8192;\n-            pub static S_IFBLK : int = 24576;\n-            pub static S_IFDIR : int = 16384;\n-            pub static S_IFREG : int = 32768;\n-            pub static S_IFMT : int = 61440;\n-            pub static S_IEXEC : int = 64;\n-            pub static S_IWRITE : int = 128;\n-            pub static S_IREAD : int = 256;\n-            pub static S_IRWXU : int = 448;\n-            pub static S_IXUSR : int = 64;\n-            pub static S_IWUSR : int = 128;\n-            pub static S_IRUSR : int = 256;\n-            pub static F_OK : int = 0;\n-            pub static R_OK : int = 4;\n-            pub static W_OK : int = 2;\n-            pub static X_OK : int = 1;\n-            pub static STDIN_FILENO : int = 0;\n-            pub static STDOUT_FILENO : int = 1;\n-            pub static STDERR_FILENO : int = 2;\n-            pub static F_LOCK : int = 1;\n-            pub static F_TEST : int = 3;\n-            pub static F_TLOCK : int = 2;\n-            pub static F_ULOCK : int = 0;\n-            pub static SIGHUP : int = 1;\n-            pub static SIGINT : int = 2;\n-            pub static SIGQUIT : int = 3;\n-            pub static SIGILL : int = 4;\n-            pub static SIGABRT : int = 6;\n-            pub static SIGFPE : int = 8;\n-            pub static SIGKILL : int = 9;\n-            pub static SIGSEGV : int = 11;\n-            pub static SIGPIPE : int = 13;\n-            pub static SIGALRM : int = 14;\n-            pub static SIGTERM : int = 15;\n+            use libc::types::common::c95::c_void;\n+            use libc::types::os::arch::c95::c_int;\n+\n+            pub static O_RDONLY : c_int = 0;\n+            pub static O_WRONLY : c_int = 1;\n+            pub static O_RDWR : c_int = 2;\n+            pub static O_APPEND : c_int = 8;\n+            pub static O_CREAT : c_int = 512;\n+            pub static O_EXCL : c_int = 2048;\n+            pub static O_TRUNC : c_int = 1024;\n+            pub static S_IFIFO : c_int = 4096;\n+            pub static S_IFCHR : c_int = 8192;\n+            pub static S_IFBLK : c_int = 24576;\n+            pub static S_IFDIR : c_int = 16384;\n+            pub static S_IFREG : c_int = 32768;\n+            pub static S_IFMT : c_int = 61440;\n+            pub static S_IEXEC : c_int = 64;\n+            pub static S_IWRITE : c_int = 128;\n+            pub static S_IREAD : c_int = 256;\n+            pub static S_IRWXU : c_int = 448;\n+            pub static S_IXUSR : c_int = 64;\n+            pub static S_IWUSR : c_int = 128;\n+            pub static S_IRUSR : c_int = 256;\n+            pub static F_OK : c_int = 0;\n+            pub static R_OK : c_int = 4;\n+            pub static W_OK : c_int = 2;\n+            pub static X_OK : c_int = 1;\n+            pub static STDIN_FILENO : c_int = 0;\n+            pub static STDOUT_FILENO : c_int = 1;\n+            pub static STDERR_FILENO : c_int = 2;\n+            pub static F_LOCK : c_int = 1;\n+            pub static F_TEST : c_int = 3;\n+            pub static F_TLOCK : c_int = 2;\n+            pub static F_ULOCK : c_int = 0;\n+            pub static SIGHUP : c_int = 1;\n+            pub static SIGINT : c_int = 2;\n+            pub static SIGQUIT : c_int = 3;\n+            pub static SIGILL : c_int = 4;\n+            pub static SIGABRT : c_int = 6;\n+            pub static SIGFPE : c_int = 8;\n+            pub static SIGKILL : c_int = 9;\n+            pub static SIGSEGV : c_int = 11;\n+            pub static SIGPIPE : c_int = 13;\n+            pub static SIGALRM : c_int = 14;\n+            pub static SIGTERM : c_int = 15;\n+\n+            pub static PROT_NONE : c_int = 0;\n+            pub static PROT_READ : c_int = 1;\n+            pub static PROT_WRITE : c_int = 2;\n+            pub static PROT_EXEC : c_int = 4;\n+\n+            pub static MAP_FILE : c_int = 0x0000;\n+            pub static MAP_SHARED : c_int = 0x0001;\n+            pub static MAP_PRIVATE : c_int = 0x0002;\n+            pub static MAP_FIXED : c_int = 0x0010;\n+            pub static MAP_ANON : c_int = 0x1000;\n+\n+            pub static MAP_FAILED : *c_void = -1 as *c_void;\n+\n+            pub static MCL_CURRENT : c_int = 0x0001;\n+            pub static MCL_FUTURE : c_int = 0x0002;\n+\n+            pub static MS_ASYNC : c_int = 0x0001;\n+            pub static MS_INVALIDATE : c_int = 0x0002;\n+            pub static MS_SYNC : c_int = 0x0010;\n+\n+            pub static MS_KILLPAGES : c_int = 0x0004;\n+            pub static MS_DEACTIVATE : c_int = 0x0008;\n+\n+            pub static _SC_ARG_MAX : c_int = 1;\n+            pub static _SC_CHILD_MAX : c_int = 2;\n+            pub static _SC_CLK_TCK : c_int = 3;\n+            pub static _SC_NGROUPS_MAX : c_int = 4;\n+            pub static _SC_OPEN_MAX : c_int = 5;\n+            pub static _SC_JOB_CONTROL : c_int = 6;\n+            pub static _SC_SAVED_IDS : c_int = 7;\n+            pub static _SC_VERSION : c_int = 8;\n+            pub static _SC_BC_BASE_MAX : c_int = 9;\n+            pub static _SC_BC_DIM_MAX : c_int = 10;\n+            pub static _SC_BC_SCALE_MAX : c_int = 11;\n+            pub static _SC_BC_STRING_MAX : c_int = 12;\n+            pub static _SC_COLL_WEIGHTS_MAX : c_int = 13;\n+            pub static _SC_EXPR_NEST_MAX : c_int = 14;\n+            pub static _SC_LINE_MAX : c_int = 15;\n+            pub static _SC_RE_DUP_MAX : c_int = 16;\n+            pub static _SC_2_VERSION : c_int = 17;\n+            pub static _SC_2_C_BIND : c_int = 18;\n+            pub static _SC_2_C_DEV : c_int = 19;\n+            pub static _SC_2_CHAR_TERM : c_int = 20;\n+            pub static _SC_2_FORT_DEV : c_int = 21;\n+            pub static _SC_2_FORT_RUN : c_int = 22;\n+            pub static _SC_2_LOCALEDEF : c_int = 23;\n+            pub static _SC_2_SW_DEV : c_int = 24;\n+            pub static _SC_2_UPE : c_int = 25;\n+            pub static _SC_STREAM_MAX : c_int = 26;\n+            pub static _SC_TZNAME_MAX : c_int = 27;\n+            pub static _SC_ASYNCHRONOUS_IO : c_int = 28;\n+            pub static _SC_PAGESIZE : c_int = 29;\n+            pub static _SC_MEMLOCK : c_int = 30;\n+            pub static _SC_MEMLOCK_RANGE : c_int = 31;\n+            pub static _SC_MEMORY_PROTECTION : c_int = 32;\n+            pub static _SC_MESSAGE_PASSING : c_int = 33;\n+            pub static _SC_PRIORITIZED_IO : c_int = 34;\n+            pub static _SC_PRIORITY_SCHEDULING : c_int = 35;\n+            pub static _SC_REALTIME_SIGNALS : c_int = 36;\n+            pub static _SC_SEMAPHORES : c_int = 37;\n+            pub static _SC_FSYNC : c_int = 38;\n+            pub static _SC_SHARED_MEMORY_OBJECTS : c_int = 39;\n+            pub static _SC_SYNCHRONIZED_IO : c_int = 40;\n+            pub static _SC_TIMERS : c_int = 41;\n+            pub static _SC_AIO_LISTIO_MAX : c_int = 42;\n+            pub static _SC_AIO_MAX : c_int = 43;\n+            pub static _SC_AIO_PRIO_DELTA_MAX : c_int = 44;\n+            pub static _SC_DELAYTIMER_MAX : c_int = 45;\n+            pub static _SC_MQ_OPEN_MAX : c_int = 46;\n+            pub static _SC_MAPPED_FILES : c_int = 47;\n+            pub static _SC_RTSIG_MAX : c_int = 48;\n+            pub static _SC_SEM_NSEMS_MAX : c_int = 49;\n+            pub static _SC_SEM_VALUE_MAX : c_int = 50;\n+            pub static _SC_SIGQUEUE_MAX : c_int = 51;\n+            pub static _SC_TIMER_MAX : c_int = 52;\n+            pub static _SC_XBS5_ILP32_OFF32 : c_int = 122;\n+            pub static _SC_XBS5_ILP32_OFFBIG : c_int = 123;\n+            pub static _SC_XBS5_LP64_OFF64 : c_int = 124;\n+            pub static _SC_XBS5_LPBIG_OFFBIG : c_int = 125;\n         }\n         pub mod posix01 {\n-            pub static SIGTRAP : int = 5;\n-\n-            pub static GLOB_APPEND   : int = 0x0001;\n-            pub static GLOB_DOOFFS   : int = 0x0002;\n-            pub static GLOB_ERR      : int = 0x0004;\n-            pub static GLOB_MARK     : int = 0x0008;\n-            pub static GLOB_NOCHECK  : int = 0x0010;\n-            pub static GLOB_NOSORT   : int = 0x0020;\n-            pub static GLOB_NOESCAPE : int = 0x2000;\n-\n-            pub static GLOB_NOSPACE  : int = -1;\n-            pub static GLOB_ABORTED  : int = -2;\n-            pub static GLOB_NOMATCH  : int = -3;\n+            use libc::types::os::arch::c95::c_int;\n+\n+            pub static SIGTRAP : c_int = 5;\n+\n+            pub static GLOB_APPEND   : c_int = 0x0001;\n+            pub static GLOB_DOOFFS   : c_int = 0x0002;\n+            pub static GLOB_ERR      : c_int = 0x0004;\n+            pub static GLOB_MARK     : c_int = 0x0008;\n+            pub static GLOB_NOCHECK  : c_int = 0x0010;\n+            pub static GLOB_NOSORT   : c_int = 0x0020;\n+            pub static GLOB_NOESCAPE : c_int = 0x2000;\n+\n+            pub static GLOB_NOSPACE  : c_int = -1;\n+            pub static GLOB_ABORTED  : c_int = -2;\n+            pub static GLOB_NOMATCH  : c_int = -3;\n+\n+            pub static POSIX_MADV_NORMAL : c_int = 0;\n+            pub static POSIX_MADV_RANDOM : c_int = 1;\n+            pub static POSIX_MADV_SEQUENTIAL : c_int = 2;\n+            pub static POSIX_MADV_WILLNEED : c_int = 3;\n+            pub static POSIX_MADV_DONTNEED : c_int = 4;\n+\n+            pub static _SC_IOV_MAX : c_int = 56;\n+            pub static _SC_GETGR_R_SIZE_MAX : c_int = 70;\n+            pub static _SC_GETPW_R_SIZE_MAX : c_int = 71;\n+            pub static _SC_LOGIN_NAME_MAX : c_int = 73;\n+            pub static _SC_MQ_PRIO_MAX : c_int = 75;\n+            pub static _SC_THREAD_ATTR_STACKADDR : c_int = 82;\n+            pub static _SC_THREAD_ATTR_STACKSIZE : c_int = 83;\n+            pub static _SC_THREAD_DESTRUCTOR_ITERATIONS : c_int = 85;\n+            pub static _SC_THREAD_KEYS_MAX : c_int = 86;\n+            pub static _SC_THREAD_PRIO_INHERIT : c_int = 87;\n+            pub static _SC_THREAD_PRIO_PROTECT : c_int = 88;\n+            pub static _SC_THREAD_PRIORITY_SCHEDULING : c_int = 89;\n+            pub static _SC_THREAD_PROCESS_SHARED : c_int = 90;\n+            pub static _SC_THREAD_SAFE_FUNCTIONS : c_int = 91;\n+            pub static _SC_THREAD_STACK_MIN : c_int = 93;\n+            pub static _SC_THREAD_THREADS_MAX : c_int = 94;\n+            pub static _SC_THREADS : c_int = 96;\n+            pub static _SC_TTY_NAME_MAX : c_int = 101;\n+            pub static _SC_ATEXIT_MAX : c_int = 107;\n+            pub static _SC_XOPEN_CRYPT : c_int = 108;\n+            pub static _SC_XOPEN_ENH_I18N : c_int = 109;\n+            pub static _SC_XOPEN_LEGACY : c_int = 110;\n+            pub static _SC_XOPEN_REALTIME : c_int = 111;\n+            pub static _SC_XOPEN_REALTIME_THREADS : c_int = 112;\n+            pub static _SC_XOPEN_SHM : c_int = 113;\n+            pub static _SC_XOPEN_UNIX : c_int = 115;\n+            pub static _SC_XOPEN_VERSION : c_int = 116;\n+            pub static _SC_XOPEN_XCU_VERSION : c_int = 121;\n         }\n         pub mod posix08 {\n         }\n         pub mod bsd44 {\n+            use libc::types::os::arch::c95::c_int;\n+\n+            pub static MADV_NORMAL : c_int = 0;\n+            pub static MADV_RANDOM : c_int = 1;\n+            pub static MADV_SEQUENTIAL : c_int = 2;\n+            pub static MADV_WILLNEED : c_int = 3;\n+            pub static MADV_DONTNEED : c_int = 4;\n+            pub static MADV_FREE : c_int = 5;\n+            pub static MADV_ZERO_WIRED_PAGES : c_int = 6;\n+            pub static MADV_FREE_REUSABLE : c_int = 7;\n+            pub static MADV_FREE_REUSE : c_int = 8;\n+            pub static MADV_CAN_REUSE : c_int = 9;\n+\n+            pub static MINCORE_INCORE : c_int =  0x1;\n+            pub static MINCORE_REFERENCED : c_int = 0x2;\n+            pub static MINCORE_MODIFIED : c_int = 0x4;\n+            pub static MINCORE_REFERENCED_OTHER : c_int = 0x8;\n+            pub static MINCORE_MODIFIED_OTHER : c_int = 0x10;\n         }\n         pub mod extra {\n-            pub static O_DSYNC : int = 4194304;\n-            pub static O_SYNC : int = 128;\n-            pub static F_FULLFSYNC : int = 51;\n+            use libc::types::os::arch::c95::c_int;\n+\n+            pub static O_DSYNC : c_int = 4194304;\n+            pub static O_SYNC : c_int = 128;\n+            pub static F_FULLFSYNC : c_int = 51;\n+\n+            pub static MAP_COPY : c_int = 0x0002;\n+            pub static MAP_RENAME : c_int = 0x0020;\n+            pub static MAP_NORESERVE : c_int = 0x0040;\n+            pub static MAP_NOEXTEND : c_int = 0x0100;\n+            pub static MAP_HASSEMAPHORE : c_int = 0x0200;\n+            pub static MAP_NOCACHE : c_int = 0x0400;\n+            pub static MAP_JIT : c_int = 0x0800;\n         }\n     }\n }\n@@ -1658,6 +2149,9 @@ pub mod funcs {\n                              -> c_int;\n             }\n         }\n+\n+        pub mod mman {\n+        }\n     }\n \n \n@@ -1835,6 +2329,38 @@ pub mod funcs {\n                 unsafe fn kill(pid: pid_t, sig: c_int) -> c_int;\n             }\n         }\n+\n+        #[nolink]\n+        #[abi = \"cdecl\"]\n+        pub mod mman {\n+            use libc::types::common::c95::{c_void};\n+            use libc::types::os::arch::c95::{size_t, c_int, c_char};\n+            use libc::types::os::arch::posix88::{mode_t, off_t};\n+\n+            pub extern {\n+                unsafe fn mlock(addr: *c_void, len: size_t) -> c_int;\n+                unsafe fn munlock(addr: *c_void, len: size_t) -> c_int;\n+                unsafe fn mlockall(flags: c_int) -> c_int;\n+                unsafe fn munlockall() -> c_int;\n+\n+                unsafe fn mmap(addr: *c_void,\n+                               len: size_t,\n+                               prot: c_int,\n+                               flags: c_int,\n+                               fd: c_int,\n+                               offset: off_t) -> *mut c_void;\n+                unsafe fn munmap(addr: *c_void, len: size_t) -> c_int;\n+\n+                unsafe fn mprotect(addr: *c_void, len: size_t, prot: c_int)\n+                    -> c_int;\n+\n+                unsafe fn msync(addr: *c_void, len: size_t, flags: c_int)\n+                    -> c_int;\n+                unsafe fn shm_open(name: *c_char, oflag: c_int, mode: mode_t)\n+                    -> c_int;\n+                unsafe fn shm_unlink(name: *c_char) -> c_int;\n+            }\n+        }\n     }\n \n     #[cfg(target_os = \"linux\")]\n@@ -1913,6 +2439,19 @@ pub mod funcs {\n                 unsafe fn globfree(pglob: *mut glob_t);\n             }\n         }\n+\n+        #[nolink]\n+        #[abi = \"cdecl\"]\n+        pub mod mman {\n+            use libc::types::common::c95::{c_void};\n+            use libc::types::os::arch::c95::{c_int, size_t};\n+\n+            pub extern {\n+                unsafe fn posix_madvise(addr: *c_void,\n+                                        len: size_t,\n+                                        advice: c_int) -> c_int;\n+            }\n+        }\n     }\n \n     #[cfg(target_os = \"win32\")]\n@@ -1925,6 +2464,9 @@ pub mod funcs {\n \n         pub mod glob {\n         }\n+\n+        pub mod mman {\n+        }\n     }\n \n \n@@ -1943,7 +2485,8 @@ pub mod funcs {\n     #[cfg(target_os = \"freebsd\")]\n     pub mod bsd44 {\n         use libc::types::common::c95::{c_void};\n-        use libc::types::os::arch::c95::{c_char, c_int, c_uint, size_t};\n+        use libc::types::os::arch::c95::{c_char, c_uchar, c_int, c_uint,\n+                                         size_t};\n \n         #[abi = \"cdecl\"]\n         pub extern {\n@@ -1959,18 +2502,31 @@ pub mod funcs {\n                                sizep: *mut size_t) -> c_int;\n \n             unsafe fn getdtablesize() -> c_int;\n+\n+            unsafe fn madvise(addr: *c_void, len: size_t, advice: c_int)\n+                -> c_int;\n+\n+            unsafe fn mincore(addr: *c_void, len: size_t, vec: *c_uchar)\n+                -> c_int;\n         }\n     }\n \n \n     #[cfg(target_os = \"linux\")]\n     #[cfg(target_os = \"android\")]\n     pub mod bsd44 {\n-        use libc::types::os::arch::c95::{c_int};\n+        use libc::types::common::c95::{c_void};\n+        use libc::types::os::arch::c95::{c_uchar, c_int, size_t};\n \n         #[abi = \"cdecl\"]\n         pub extern {\n             unsafe fn getdtablesize() -> c_int;\n+\n+            unsafe fn madvise(addr: *c_void, len: size_t, advice: c_int)\n+                -> c_int;\n+\n+            unsafe fn mincore(addr: *c_void, len: size_t, vec: *c_uchar)\n+                -> c_int;\n         }\n     }\n "}, {"sha": "e6b92c0ccc3f933eddf9c5b9371e0c711a641f78", "filename": "src/libstd/os.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/237ca7dc58fcc2b856c53bc1e4ab0ed060314a72/src%2Flibstd%2Fos.rs", "raw_url": "https://github.com/rust-lang/rust/raw/237ca7dc58fcc2b856c53bc1e4ab0ed060314a72/src%2Flibstd%2Fos.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fos.rs?ref=237ca7dc58fcc2b856c53bc1e4ab0ed060314a72", "patch": "@@ -758,7 +758,7 @@ pub fn list_dir(p: &Path) -> ~[~str] {\n                     FindFirstFileW(\n                         path_ptr,\n                         ::cast::transmute(wfd_ptr));\n-                if find_handle as int != INVALID_HANDLE_VALUE {\n+                if find_handle as libc::c_int != INVALID_HANDLE_VALUE {\n                     let mut more_files = 1 as libc::c_int;\n                     while more_files != 0 {\n                         let fp_buf = rust_list_dir_wfd_fp_buf(wfd_ptr);"}]}