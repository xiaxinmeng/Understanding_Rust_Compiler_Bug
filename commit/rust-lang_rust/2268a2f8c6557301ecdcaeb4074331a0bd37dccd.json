{"sha": "2268a2f8c6557301ecdcaeb4074331a0bd37dccd", "node_id": "MDY6Q29tbWl0NzI0NzEyOjIyNjhhMmY4YzY1NTczMDFlY2RjYWViNDA3NDMzMWEwYmQzN2RjY2Q=", "commit": {"author": {"name": "Alan Du", "email": "alanhdu@gmail.com", "date": "2018-10-17T23:15:22Z"}, "committer": {"name": "Alan Du", "email": "alanhdu@gmail.com", "date": "2018-10-17T23:42:23Z"}, "message": "Silence clippy::derive_hash_xor_eq\n\nManually implement PartialEq", "tree": {"sha": "bf0f63b33fd4ad0fc99ac0893d733303ed6952d6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bf0f63b33fd4ad0fc99ac0893d733303ed6952d6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2268a2f8c6557301ecdcaeb4074331a0bd37dccd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2268a2f8c6557301ecdcaeb4074331a0bd37dccd", "html_url": "https://github.com/rust-lang/rust/commit/2268a2f8c6557301ecdcaeb4074331a0bd37dccd", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2268a2f8c6557301ecdcaeb4074331a0bd37dccd/comments", "author": {"login": "alanhdu", "id": 1914111, "node_id": "MDQ6VXNlcjE5MTQxMTE=", "avatar_url": "https://avatars.githubusercontent.com/u/1914111?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alanhdu", "html_url": "https://github.com/alanhdu", "followers_url": "https://api.github.com/users/alanhdu/followers", "following_url": "https://api.github.com/users/alanhdu/following{/other_user}", "gists_url": "https://api.github.com/users/alanhdu/gists{/gist_id}", "starred_url": "https://api.github.com/users/alanhdu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alanhdu/subscriptions", "organizations_url": "https://api.github.com/users/alanhdu/orgs", "repos_url": "https://api.github.com/users/alanhdu/repos", "events_url": "https://api.github.com/users/alanhdu/events{/privacy}", "received_events_url": "https://api.github.com/users/alanhdu/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alanhdu", "id": 1914111, "node_id": "MDQ6VXNlcjE5MTQxMTE=", "avatar_url": "https://avatars.githubusercontent.com/u/1914111?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alanhdu", "html_url": "https://github.com/alanhdu", "followers_url": "https://api.github.com/users/alanhdu/followers", "following_url": "https://api.github.com/users/alanhdu/following{/other_user}", "gists_url": "https://api.github.com/users/alanhdu/gists{/gist_id}", "starred_url": "https://api.github.com/users/alanhdu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alanhdu/subscriptions", "organizations_url": "https://api.github.com/users/alanhdu/orgs", "repos_url": "https://api.github.com/users/alanhdu/repos", "events_url": "https://api.github.com/users/alanhdu/events{/privacy}", "received_events_url": "https://api.github.com/users/alanhdu/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4e8ea94e2b72a3e927c8ff1b5f3fe2413ccc79a7", "url": "https://api.github.com/repos/rust-lang/rust/commits/4e8ea94e2b72a3e927c8ff1b5f3fe2413ccc79a7", "html_url": "https://github.com/rust-lang/rust/commit/4e8ea94e2b72a3e927c8ff1b5f3fe2413ccc79a7"}], "stats": {"total": 8, "additions": 7, "deletions": 1}, "files": [{"sha": "99d40a2690d9b58bd71348684688a53c4c9093eb", "filename": "crates/ra_analysis/src/db.rs", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/2268a2f8c6557301ecdcaeb4074331a0bd37dccd/crates%2Fra_analysis%2Fsrc%2Fdb.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2268a2f8c6557301ecdcaeb4074331a0bd37dccd/crates%2Fra_analysis%2Fsrc%2Fdb.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_analysis%2Fsrc%2Fdb.rs?ref=2268a2f8c6557301ecdcaeb4074331a0bd37dccd", "patch": "@@ -76,12 +76,18 @@ salsa::query_group! {\n     }\n }\n \n-#[derive(Default, Debug, PartialEq, Eq)]\n+#[derive(Default, Debug, Eq)]\n pub(crate) struct FileSet {\n     pub(crate) files: FxHashSet<FileId>,\n     pub(crate) resolver: FileResolverImp,\n }\n \n+impl PartialEq for FileSet {\n+    fn eq(&self, other: &FileSet) -> bool {\n+        self.files == other.files && self.resolver == other.resolver\n+    }\n+}\n+\n impl Hash for FileSet {\n     fn hash<H: Hasher>(&self, hasher: &mut H) {\n         let mut files = self.files.iter().cloned().collect::<Vec<_>>();"}]}