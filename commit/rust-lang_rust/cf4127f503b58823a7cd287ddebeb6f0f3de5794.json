{"sha": "cf4127f503b58823a7cd287ddebeb6f0f3de5794", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNmNDEyN2Y1MDNiNTg4MjNhN2NkMjg3ZGRlYmViNmYwZjNkZTU3OTQ=", "commit": {"author": {"name": "blake2-ppc", "email": "blake2-ppc", "date": "2013-07-16T01:55:52Z"}, "committer": {"name": "blake2-ppc", "email": "blake2-ppc", "date": "2013-07-16T01:55:52Z"}, "message": "hashmap: Remove .mutate_values() which is replaced by .mut_iter()", "tree": {"sha": "50ecd3cf6ae32a6b3afd759670d78ccb97e58f1f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/50ecd3cf6ae32a6b3afd759670d78ccb97e58f1f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/cf4127f503b58823a7cd287ddebeb6f0f3de5794", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/cf4127f503b58823a7cd287ddebeb6f0f3de5794", "html_url": "https://github.com/rust-lang/rust/commit/cf4127f503b58823a7cd287ddebeb6f0f3de5794", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/cf4127f503b58823a7cd287ddebeb6f0f3de5794/comments", "author": null, "committer": null, "parents": [{"sha": "e844b524ed1c099a6c19b7754fafcf67b99455df", "url": "https://api.github.com/repos/rust-lang/rust/commits/e844b524ed1c099a6c19b7754fafcf67b99455df", "html_url": "https://github.com/rust-lang/rust/commit/e844b524ed1c099a6c19b7754fafcf67b99455df"}], "stats": {"total": 13, "additions": 0, "deletions": 13}, "files": [{"sha": "0131c3b540a19b1170dfe02a41ea3a03454c1118", "filename": "src/libstd/hashmap.rs", "status": "modified", "additions": 0, "deletions": 13, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/cf4127f503b58823a7cd287ddebeb6f0f3de5794/src%2Flibstd%2Fhashmap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cf4127f503b58823a7cd287ddebeb6f0f3de5794/src%2Flibstd%2Fhashmap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fhashmap.rs?ref=cf4127f503b58823a7cd287ddebeb6f0f3de5794", "patch": "@@ -510,19 +510,6 @@ impl<K: Hash + Eq, V> HashMap<K, V> {\n         self.iter().advance(|(_, v)| blk(v))\n     }\n \n-    /// Iterate over the map and mutate the contained values\n-    pub fn mutate_values(&mut self, blk: &fn(&K, &mut V) -> bool) -> bool {\n-        for uint::range(0, self.buckets.len()) |i| {\n-            match self.buckets[i] {\n-              Some(Bucket{key: ref key, value: ref mut value, _}) => {\n-                if !blk(key, value) { return false; }\n-              }\n-              None => ()\n-            }\n-        }\n-        return true;\n-    }\n-\n     /// An iterator visiting all key-value pairs in arbitrary order.\n     /// Iterator element type is (&'a K, &'a V).\n     pub fn iter<'a>(&'a self) -> HashMapIterator<'a, K, V> {"}]}