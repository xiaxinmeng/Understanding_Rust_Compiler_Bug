{"sha": "bd8aa02ff4b76a6aa9c03ad8ab80aaab21080e9c", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJkOGFhMDJmZjRiNzZhNmFhOWMwM2FkOGFiODBhYWFiMjEwODBlOWM=", "commit": {"author": {"name": "kennytm", "email": "kennytm@gmail.com", "date": "2018-01-17T17:57:16Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2018-01-17T17:57:16Z"}, "message": "Rollup merge of #47407 - gaurikholkar:master, r=estebank\n\nfix mispositioned span\n\nThis fixes #47377\n\nThe output now looks like this\n```\nerror[E0369]: binary operation `+` cannot be applied to type `&str`\n --> h.rs:3:11\n  |\n3 |     let _a = b + \", World!\";\n  |              ^^^^^^^^^^^^^^ `+` can't be used to concatenate two `&str` strings\nhelp: `to_owned()` can be used to create an owned `String` from a string reference. String concatenation appends the string on the right to the string on the left and may require reallocation. This requires ownership of the string on the left\n  |\n3 |     let _a = b.to_owned() + \", World!\";\n  |              ^^^^^^^^^\n\nerror: aborting due to previous error\n```\nFor the case when emojis are involved,  it gives the new output for proper indentation.\nBut for an indentation as follows,\n```\nfn main() {\nlet b = \"hello\";\n    let _a = b + \", World!\";\n}\n```\nit still mispositions the span\n```\n3 |     println!(\"\ud83e\udd80\ud83e\udd80\ud83e\udd80\ud83e\udd80\ud83e\udd80\"); let _a = b + \", World!\";\n  |                                           ^^^^^^^^^^^^^^ `+` can't be used to concatenate two `&str` strings\n  |\n3 |     println!(\"\ud83e\udd80\ud83e\udd80\ud83e\udd80\ud83e\udd80\ud83e\udd80\"); let _a = b.to_owned() + \", World!\";\n  |                                           ^^^^^^^\nerror: aborting due to previous erro\n```\n\ncc @estebank  @est31", "tree": {"sha": "b2988ced186bb5dd1c5bf5118c2b6e7b959964fe", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b2988ced186bb5dd1c5bf5118c2b6e7b959964fe"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/bd8aa02ff4b76a6aa9c03ad8ab80aaab21080e9c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/bd8aa02ff4b76a6aa9c03ad8ab80aaab21080e9c", "html_url": "https://github.com/rust-lang/rust/commit/bd8aa02ff4b76a6aa9c03ad8ab80aaab21080e9c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/bd8aa02ff4b76a6aa9c03ad8ab80aaab21080e9c/comments", "author": {"login": "kennytm", "id": 103023, "node_id": "MDQ6VXNlcjEwMzAyMw==", "avatar_url": "https://avatars.githubusercontent.com/u/103023?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kennytm", "html_url": "https://github.com/kennytm", "followers_url": "https://api.github.com/users/kennytm/followers", "following_url": "https://api.github.com/users/kennytm/following{/other_user}", "gists_url": "https://api.github.com/users/kennytm/gists{/gist_id}", "starred_url": "https://api.github.com/users/kennytm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kennytm/subscriptions", "organizations_url": "https://api.github.com/users/kennytm/orgs", "repos_url": "https://api.github.com/users/kennytm/repos", "events_url": "https://api.github.com/users/kennytm/events{/privacy}", "received_events_url": "https://api.github.com/users/kennytm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e7087f0f4f5300734f37498d4ed9059aafdfcf0a", "url": "https://api.github.com/repos/rust-lang/rust/commits/e7087f0f4f5300734f37498d4ed9059aafdfcf0a", "html_url": "https://github.com/rust-lang/rust/commit/e7087f0f4f5300734f37498d4ed9059aafdfcf0a"}, {"sha": "efe3d69ad827cc359b1a120b0e5c58dd87a2935b", "url": "https://api.github.com/repos/rust-lang/rust/commits/efe3d69ad827cc359b1a120b0e5c58dd87a2935b", "html_url": "https://github.com/rust-lang/rust/commit/efe3d69ad827cc359b1a120b0e5c58dd87a2935b"}], "stats": {"total": 57, "additions": 55, "deletions": 2}, "files": [{"sha": "58f851aea3817e44d81b8a1735ea9d5c6fb4c6b9", "filename": "src/librustc_errors/emitter.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/bd8aa02ff4b76a6aa9c03ad8ab80aaab21080e9c/src%2Flibrustc_errors%2Femitter.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bd8aa02ff4b76a6aa9c03ad8ab80aaab21080e9c/src%2Flibrustc_errors%2Femitter.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_errors%2Femitter.rs?ref=bd8aa02ff4b76a6aa9c03ad8ab80aaab21080e9c", "patch": "@@ -1187,8 +1187,8 @@ impl EmitterWriter {\n                     let sub_len = parts[0].snippet.trim().chars().fold(0, |acc, ch| {\n                         acc + unicode_width::UnicodeWidthChar::width(ch).unwrap_or(0)\n                     });\n-                    let underline_start = span_start_pos.col.0 + start;\n-                    let underline_end = span_start_pos.col.0 + start + sub_len;\n+                    let underline_start = span_start_pos.col_display + start;\n+                    let underline_end = span_start_pos.col_display + start + sub_len;\n                     for p in underline_start..underline_end {\n                         buffer.putc(row_num,\n                                     max_line_num_len + 3 + p,"}, {"sha": "f294008cfd0d5d35941ec6621bca415e4edb5479", "filename": "src/test/ui/issue-47377.rs", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/bd8aa02ff4b76a6aa9c03ad8ab80aaab21080e9c/src%2Ftest%2Fui%2Fissue-47377.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bd8aa02ff4b76a6aa9c03ad8ab80aaab21080e9c/src%2Ftest%2Fui%2Fissue-47377.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-47377.rs?ref=bd8aa02ff4b76a6aa9c03ad8ab80aaab21080e9c", "patch": "@@ -0,0 +1,15 @@\n+// Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+// ignore-tidy-tab\n+fn main() {\n+ \tlet b = \"hello\";\n+ \tlet _a = b + \", World!\";\n+ \t//~^ ERROR E0369\n+}"}, {"sha": "13b3ff58697834dbc9fb63ccabeb8d7ffa52c80d", "filename": "src/test/ui/issue-47377.stderr", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/bd8aa02ff4b76a6aa9c03ad8ab80aaab21080e9c/src%2Ftest%2Fui%2Fissue-47377.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/bd8aa02ff4b76a6aa9c03ad8ab80aaab21080e9c/src%2Ftest%2Fui%2Fissue-47377.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-47377.stderr?ref=bd8aa02ff4b76a6aa9c03ad8ab80aaab21080e9c", "patch": "@@ -0,0 +1,12 @@\n+error[E0369]: binary operation `+` cannot be applied to type `&str`\n+  --> $DIR/issue-47377.rs:13:12\n+   |\n+13 |      let _a = b + \", World!\";\n+   |               ^^^^^^^^^^^^^^ `+` can't be used to concatenate two `&str` strings\n+help: `to_owned()` can be used to create an owned `String` from a string reference. String concatenation appends the string on the right to the string on the left and may require reallocation. This requires ownership of the string on the left\n+   |\n+13 |      let _a = b.to_owned() + \", World!\";\n+   |               ^^^^^^^^^^^^\n+\n+error: aborting due to previous error\n+"}, {"sha": "e43a967253ca8f61e39392397ee0e1865f5a4f50", "filename": "src/test/ui/issue-47380.rs", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/bd8aa02ff4b76a6aa9c03ad8ab80aaab21080e9c/src%2Ftest%2Fui%2Fissue-47380.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bd8aa02ff4b76a6aa9c03ad8ab80aaab21080e9c/src%2Ftest%2Fui%2Fissue-47380.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-47380.rs?ref=bd8aa02ff4b76a6aa9c03ad8ab80aaab21080e9c", "patch": "@@ -0,0 +1,14 @@\n+// Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+fn main() {\n+    let b = \"hello\";\n+    println!(\"\ud83e\udd80\ud83e\udd80\ud83e\udd80\ud83e\udd80\ud83e\udd80\"); let _a = b + \", World!\";\n+    //~^ ERROR E0369\n+}"}, {"sha": "6c9f79b5a94174a12f002a99b1b523663af7d2fe", "filename": "src/test/ui/issue-47380.stderr", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/bd8aa02ff4b76a6aa9c03ad8ab80aaab21080e9c/src%2Ftest%2Fui%2Fissue-47380.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/bd8aa02ff4b76a6aa9c03ad8ab80aaab21080e9c/src%2Ftest%2Fui%2Fissue-47380.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-47380.stderr?ref=bd8aa02ff4b76a6aa9c03ad8ab80aaab21080e9c", "patch": "@@ -0,0 +1,12 @@\n+error[E0369]: binary operation `+` cannot be applied to type `&str`\n+  --> $DIR/issue-47380.rs:12:33\n+   |\n+12 |     println!(\"\ud83e\udd80\ud83e\udd80\ud83e\udd80\ud83e\udd80\ud83e\udd80\"); let _a = b + \", World!\";\n+   |                                      ^^^^^^^^^^^^^^ `+` can't be used to concatenate two `&str` strings\n+help: `to_owned()` can be used to create an owned `String` from a string reference. String concatenation appends the string on the right to the string on the left and may require reallocation. This requires ownership of the string on the left\n+   |\n+12 |     println!(\"\ud83e\udd80\ud83e\udd80\ud83e\udd80\ud83e\udd80\ud83e\udd80\"); let _a = b.to_owned() + \", World!\";\n+   |                                      ^^^^^^^^^^^^\n+\n+error: aborting due to previous error\n+"}]}