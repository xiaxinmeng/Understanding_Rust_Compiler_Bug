{"sha": "29f72063667187f2d281e940209a924730e165b2", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI5ZjcyMDYzNjY3MTg3ZjJkMjgxZTk0MDIwOWE5MjQ3MzBlMTY1YjI=", "commit": {"author": {"name": "varkor", "email": "github@varkor.com", "date": "2019-02-05T15:51:49Z"}, "committer": {"name": "varkor", "email": "github@varkor.com", "date": "2019-02-07T14:02:17Z"}, "message": "Add const params to Def\n\nCo-Authored-By: Gabriel Smith <yodaldevoid@users.noreply.github.com>", "tree": {"sha": "97d1fba3c8f2c242ccff4a86f43d9ab0f74980cf", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/97d1fba3c8f2c242ccff4a86f43d9ab0f74980cf"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/29f72063667187f2d281e940209a924730e165b2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/29f72063667187f2d281e940209a924730e165b2", "html_url": "https://github.com/rust-lang/rust/commit/29f72063667187f2d281e940209a924730e165b2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/29f72063667187f2d281e940209a924730e165b2/comments", "author": {"login": "varkor", "id": 3943692, "node_id": "MDQ6VXNlcjM5NDM2OTI=", "avatar_url": "https://avatars.githubusercontent.com/u/3943692?v=4", "gravatar_id": "", "url": "https://api.github.com/users/varkor", "html_url": "https://github.com/varkor", "followers_url": "https://api.github.com/users/varkor/followers", "following_url": "https://api.github.com/users/varkor/following{/other_user}", "gists_url": "https://api.github.com/users/varkor/gists{/gist_id}", "starred_url": "https://api.github.com/users/varkor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/varkor/subscriptions", "organizations_url": "https://api.github.com/users/varkor/orgs", "repos_url": "https://api.github.com/users/varkor/repos", "events_url": "https://api.github.com/users/varkor/events{/privacy}", "received_events_url": "https://api.github.com/users/varkor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "varkor", "id": 3943692, "node_id": "MDQ6VXNlcjM5NDM2OTI=", "avatar_url": "https://avatars.githubusercontent.com/u/3943692?v=4", "gravatar_id": "", "url": "https://api.github.com/users/varkor", "html_url": "https://github.com/varkor", "followers_url": "https://api.github.com/users/varkor/followers", "following_url": "https://api.github.com/users/varkor/following{/other_user}", "gists_url": "https://api.github.com/users/varkor/gists{/gist_id}", "starred_url": "https://api.github.com/users/varkor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/varkor/subscriptions", "organizations_url": "https://api.github.com/users/varkor/orgs", "repos_url": "https://api.github.com/users/varkor/repos", "events_url": "https://api.github.com/users/varkor/events{/privacy}", "received_events_url": "https://api.github.com/users/varkor/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ea0d99829da705377b7b690062401f772f0babe8", "url": "https://api.github.com/repos/rust-lang/rust/commits/ea0d99829da705377b7b690062401f772f0babe8", "html_url": "https://github.com/rust-lang/rust/commit/ea0d99829da705377b7b690062401f772f0babe8"}], "stats": {"total": 24, "additions": 21, "deletions": 3}, "files": [{"sha": "15efa7650293c52b2f09cd94b56c93fdc42a261e", "filename": "src/librustc/hir/def.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/29f72063667187f2d281e940209a924730e165b2/src%2Flibrustc%2Fhir%2Fdef.rs", "raw_url": "https://github.com/rust-lang/rust/raw/29f72063667187f2d281e940209a924730e165b2/src%2Flibrustc%2Fhir%2Fdef.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fhir%2Fdef.rs?ref=29f72063667187f2d281e940209a924730e165b2", "patch": "@@ -52,6 +52,7 @@ pub enum Def {\n     AssociatedExistential(DefId),\n     PrimTy(hir::PrimTy),\n     TyParam(DefId),\n+    ConstParam(DefId),\n     SelfTy(Option<DefId> /* trait */, Option<DefId> /* impl */),\n     ToolMod, // e.g., `rustfmt` in `#[rustfmt::skip]`\n \n@@ -265,7 +266,8 @@ impl Def {\n             Def::Fn(id) | Def::Mod(id) | Def::Static(id, _) |\n             Def::Variant(id) | Def::VariantCtor(id, ..) | Def::Enum(id) |\n             Def::TyAlias(id) | Def::TraitAlias(id) |\n-            Def::AssociatedTy(id) | Def::TyParam(id) | Def::Struct(id) | Def::StructCtor(id, ..) |\n+            Def::AssociatedTy(id) | Def::TyParam(id) | Def::ConstParam(id) | Def::Struct(id) |\n+            Def::StructCtor(id, ..) |\n             Def::Union(id) | Def::Trait(id) | Def::Method(id) | Def::Const(id) |\n             Def::AssociatedConst(id) | Def::Macro(id, ..) |\n             Def::Existential(id) | Def::AssociatedExistential(id) | Def::ForeignTy(id) => {\n@@ -322,6 +324,7 @@ impl Def {\n             Def::Const(..) => \"constant\",\n             Def::AssociatedConst(..) => \"associated constant\",\n             Def::TyParam(..) => \"type parameter\",\n+            Def::ConstParam(..) => \"const parameter\",\n             Def::PrimTy(..) => \"builtin type\",\n             Def::Local(..) => \"local variable\",\n             Def::Upvar(..) => \"closure capture\","}, {"sha": "02fb503e752b582ab3ef6d4f6c8df24b46999bec", "filename": "src/librustc/hir/map/def_collector.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/29f72063667187f2d281e940209a924730e165b2/src%2Flibrustc%2Fhir%2Fmap%2Fdef_collector.rs", "raw_url": "https://github.com/rust-lang/rust/raw/29f72063667187f2d281e940209a924730e165b2/src%2Flibrustc%2Fhir%2Fmap%2Fdef_collector.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fhir%2Fmap%2Fdef_collector.rs?ref=29f72063667187f2d281e940209a924730e165b2", "patch": "@@ -218,6 +218,7 @@ impl<'a> visit::Visitor<'a> for DefCollector<'a> {\n         let def_path_data = match param.kind {\n             GenericParamKind::Lifetime { .. } => DefPathData::LifetimeParam(name),\n             GenericParamKind::Type { .. } => DefPathData::TypeParam(name),\n+            GenericParamKind::Const { .. } => DefPathData::ConstParam(name),\n         };\n         self.create_def(param.id, def_path_data, REGULAR_SPACE, param.ident.span);\n "}, {"sha": "84e9cde6df16012a3867cc9bb1f7bc3dd14d1d1d", "filename": "src/librustc/hir/map/definitions.rs", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/29f72063667187f2d281e940209a924730e165b2/src%2Flibrustc%2Fhir%2Fmap%2Fdefinitions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/29f72063667187f2d281e940209a924730e165b2/src%2Flibrustc%2Fhir%2Fmap%2Fdefinitions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fhir%2Fmap%2Fdefinitions.rs?ref=29f72063667187f2d281e940209a924730e165b2", "patch": "@@ -356,10 +356,12 @@ pub enum DefPathData {\n     /// A closure expression\n     ClosureExpr,\n     // Subportions of items\n-    /// A type parameter (generic parameter)\n+    /// A type (generic) parameter\n     TypeParam(InternedString),\n-    /// A lifetime definition\n+    /// A lifetime (generic) parameter\n     LifetimeParam(InternedString),\n+    /// A const (generic) parameter\n+    ConstParam(InternedString),\n     /// A variant of a enum\n     EnumVariant(InternedString),\n     /// A struct field\n@@ -641,6 +643,7 @@ impl DefPathData {\n             MacroDef(name) |\n             TypeParam(name) |\n             LifetimeParam(name) |\n+            ConstParam(name) |\n             EnumVariant(name) |\n             Field(name) |\n             GlobalMetaData(name) => Some(name),\n@@ -669,6 +672,7 @@ impl DefPathData {\n             MacroDef(name) |\n             TypeParam(name) |\n             LifetimeParam(name) |\n+            ConstParam(name) |\n             EnumVariant(name) |\n             Field(name) |\n             GlobalMetaData(name) => {"}, {"sha": "712fd360fbb6fffd31e423b2ad96f18387a6de9a", "filename": "src/librustc/ich/impls_hir.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/29f72063667187f2d281e940209a924730e165b2/src%2Flibrustc%2Fich%2Fimpls_hir.rs", "raw_url": "https://github.com/rust-lang/rust/raw/29f72063667187f2d281e940209a924730e165b2/src%2Flibrustc%2Fich%2Fimpls_hir.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fich%2Fimpls_hir.rs?ref=29f72063667187f2d281e940209a924730e165b2", "patch": "@@ -1046,6 +1046,7 @@ impl_stable_hash_for!(enum hir::def::Def {\n     AssociatedExistential(def_id),\n     PrimTy(prim_ty),\n     TyParam(def_id),\n+    ConstParam(def_id),\n     SelfTy(trait_def_id, impl_def_id),\n     ForeignTy(def_id),\n     Fn(def_id),"}, {"sha": "8214c8bacc70408aae36a6df6023fcd7321d1658", "filename": "src/librustc/ty/item_path.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/29f72063667187f2d281e940209a924730e165b2/src%2Flibrustc%2Fty%2Fitem_path.rs", "raw_url": "https://github.com/rust-lang/rust/raw/29f72063667187f2d281e940209a924730e165b2/src%2Flibrustc%2Fty%2Fitem_path.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Fitem_path.rs?ref=29f72063667187f2d281e940209a924730e165b2", "patch": "@@ -325,6 +325,7 @@ impl<'a, 'gcx, 'tcx> TyCtxt<'a, 'gcx, 'tcx> {\n             data @ DefPathData::Module(..) |\n             data @ DefPathData::TypeParam(..) |\n             data @ DefPathData::LifetimeParam(..) |\n+            data @ DefPathData::ConstParam(..) |\n             data @ DefPathData::EnumVariant(..) |\n             data @ DefPathData::Field(..) |\n             data @ DefPathData::AnonConst |"}, {"sha": "a12ec3471a91c7b84f48e1bcf515d39dfc535bc5", "filename": "src/librustc/util/ppaux.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/29f72063667187f2d281e940209a924730e165b2/src%2Flibrustc%2Futil%2Fppaux.rs", "raw_url": "https://github.com/rust-lang/rust/raw/29f72063667187f2d281e940209a924730e165b2/src%2Flibrustc%2Futil%2Fppaux.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Futil%2Fppaux.rs?ref=29f72063667187f2d281e940209a924730e165b2", "patch": "@@ -426,6 +426,7 @@ impl PrintContext {\n                     DefPathData::ClosureExpr |\n                     DefPathData::TypeParam(_) |\n                     DefPathData::LifetimeParam(_) |\n+                    DefPathData::ConstParam(_) |\n                     DefPathData::Field(_) |\n                     DefPathData::StructCtor |\n                     DefPathData::AnonConst |"}, {"sha": "4969d521b8039f98eeede1221e9edc85128eaf0e", "filename": "src/librustc_save_analysis/lib.rs", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/29f72063667187f2d281e940209a924730e165b2/src%2Flibrustc_save_analysis%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/29f72063667187f2d281e940209a924730e165b2/src%2Flibrustc_save_analysis%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_save_analysis%2Flib.rs?ref=29f72063667187f2d281e940209a924730e165b2", "patch": "@@ -762,6 +762,13 @@ impl<'l, 'tcx: 'l> SaveContext<'l, 'tcx> {\n                     ref_id: id_from_def_id(def_id),\n                 })\n             }\n+            HirDef::ConstParam(def_id) => {\n+                Some(Ref {\n+                    kind: RefKind::Variable,\n+                    span,\n+                    ref_id: id_from_def_id(def_id),\n+                })\n+            }\n             HirDef::StructCtor(def_id, _) => {\n                 // This is a reference to a tuple struct where the def_id points\n                 // to an invisible constructor function. That is not a very useful"}]}