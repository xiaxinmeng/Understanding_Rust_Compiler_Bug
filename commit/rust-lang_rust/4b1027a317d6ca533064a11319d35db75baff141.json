{"sha": "4b1027a317d6ca533064a11319d35db75baff141", "node_id": "MDY6Q29tbWl0NzI0NzEyOjRiMTAyN2EzMTdkNmNhNTMzMDY0YTExMzE5ZDM1ZGI3NWJhZmYxNDE=", "commit": {"author": {"name": "Justus K", "email": "justus.k@protonmail.com", "date": "2021-07-03T13:29:26Z"}, "committer": {"name": "Justus K", "email": "justus.k@protonmail.com", "date": "2021-07-05T17:51:55Z"}, "message": "rustdoc: Convert new ItemId's to real Json Ids", "tree": {"sha": "c6c048ce0c02eed8f4d65d5fce67efb4e1b06169", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c6c048ce0c02eed8f4d65d5fce67efb4e1b06169"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4b1027a317d6ca533064a11319d35db75baff141", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEDDGYqKFKtc1ioGY0jGL+mKYvxGIFAmDjRrsACgkQjGL+mKYv\nxGKH7g/7BwZqrCnOZlb8Dwkpag6i7VXq9QNlPhte4QnHvjswTp4jIhQxLIRbBM9f\nUznOPeCtaY8g/g7KZRj0+5TMcRbF1vnnWMg90czH6EaDFfyTVYDsskI7ILxNMUwD\nCiGrFfgkhPsJ9hoMONFPOcobcP5eppzC85IPsKv7VeJc3Dp5sAq6ejE6H3qEIXFF\noFZH1FYR/kfOzW4HH89ziF6DStFwWrEXbQra3STo1RPFo1LUcODwZX/f1nY9cE5f\nzwQYctMToHF36LQLDzO0Yv6zRpv2H/Z6S36/uq+FihiyZ7pIvSPSvypno7Nr+FPE\nfhmcyejpDu5Rcz6z5OmI9EPWgb+iZyL84XQTZlpOBHiKcM5LdBzd1rnCjoK0y+LQ\nBo5RW6L2lhNFK9nvuEapZ92psSepQv0u1Z0pgTBcKTQamR9GhCIaMgyCDPULTKS9\nTc000AZbLEVAUF4Epyc/dCRBQgxZSV46YCTZSjdRKOjQsHRLCDqkNc5NbjDeKSTS\n5iqICMpV1y0y39nzAj4qlVW3/7fhHPfw0bFD84FOhd3CYRQhdMdO/qby2ddFt6mv\nagJXTnnfnLH7lnKv3QJn2MFsXnjHVGADUVKbP4Jpz3Y+UNww0sEAgmYdrc6OUOna\na2HRKTsUEg/ipdc/4EznQ0My0CyFVG/UqkbP13N+NiHF2EI5mjM=\n=JYyn\n-----END PGP SIGNATURE-----", "payload": "tree c6c048ce0c02eed8f4d65d5fce67efb4e1b06169\nparent 97c82d8731784866dfc12f7e79e592a9e191c28f\nauthor Justus K <justus.k@protonmail.com> 1625318966 +0200\ncommitter Justus K <justus.k@protonmail.com> 1625507515 +0200\n\nrustdoc: Convert new ItemId's to real Json Ids\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4b1027a317d6ca533064a11319d35db75baff141", "html_url": "https://github.com/rust-lang/rust/commit/4b1027a317d6ca533064a11319d35db75baff141", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4b1027a317d6ca533064a11319d35db75baff141/comments", "author": {"login": "Stupremee", "id": 39732259, "node_id": "MDQ6VXNlcjM5NzMyMjU5", "avatar_url": "https://avatars.githubusercontent.com/u/39732259?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Stupremee", "html_url": "https://github.com/Stupremee", "followers_url": "https://api.github.com/users/Stupremee/followers", "following_url": "https://api.github.com/users/Stupremee/following{/other_user}", "gists_url": "https://api.github.com/users/Stupremee/gists{/gist_id}", "starred_url": "https://api.github.com/users/Stupremee/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Stupremee/subscriptions", "organizations_url": "https://api.github.com/users/Stupremee/orgs", "repos_url": "https://api.github.com/users/Stupremee/repos", "events_url": "https://api.github.com/users/Stupremee/events{/privacy}", "received_events_url": "https://api.github.com/users/Stupremee/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Stupremee", "id": 39732259, "node_id": "MDQ6VXNlcjM5NzMyMjU5", "avatar_url": "https://avatars.githubusercontent.com/u/39732259?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Stupremee", "html_url": "https://github.com/Stupremee", "followers_url": "https://api.github.com/users/Stupremee/followers", "following_url": "https://api.github.com/users/Stupremee/following{/other_user}", "gists_url": "https://api.github.com/users/Stupremee/gists{/gist_id}", "starred_url": "https://api.github.com/users/Stupremee/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Stupremee/subscriptions", "organizations_url": "https://api.github.com/users/Stupremee/orgs", "repos_url": "https://api.github.com/users/Stupremee/repos", "events_url": "https://api.github.com/users/Stupremee/events{/privacy}", "received_events_url": "https://api.github.com/users/Stupremee/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "97c82d8731784866dfc12f7e79e592a9e191c28f", "url": "https://api.github.com/repos/rust-lang/rust/commits/97c82d8731784866dfc12f7e79e592a9e191c28f", "html_url": "https://github.com/rust-lang/rust/commit/97c82d8731784866dfc12f7e79e592a9e191c28f"}], "stats": {"total": 21, "additions": 18, "deletions": 3}, "files": [{"sha": "bf4c7e7ff376eb340d9380a93c518933b47a033a", "filename": "src/librustdoc/json/conversions.rs", "status": "modified", "additions": 18, "deletions": 3, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/4b1027a317d6ca533064a11319d35db75baff141/src%2Flibrustdoc%2Fjson%2Fconversions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4b1027a317d6ca533064a11319d35db75baff141/src%2Flibrustdoc%2Fjson%2Fconversions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fjson%2Fconversions.rs?ref=4b1027a317d6ca533064a11319d35db75baff141", "patch": "@@ -5,9 +5,10 @@\n #![allow(rustc::default_hash_types)]\n \n use std::convert::From;\n+use std::fmt;\n \n use rustc_ast::ast;\n-use rustc_hir::def::CtorKind;\n+use rustc_hir::{def::CtorKind, def_id::DefId};\n use rustc_middle::ty::TyCtxt;\n use rustc_span::def_id::CRATE_DEF_INDEX;\n use rustc_span::Pos;\n@@ -171,9 +172,23 @@ impl FromWithTcx<clean::TypeBindingKind> for TypeBindingKind {\n }\n \n crate fn from_item_id(did: ItemId) -> Id {\n+    struct DisplayDefId(DefId);\n+\n+    impl fmt::Display for DisplayDefId {\n+        fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {\n+            write!(f, \"{}:{}\", self.0.krate.as_u32(), u32::from(self.0.index))\n+        }\n+    }\n+\n     match did {\n-        ItemId::DefId(did) => Id(format!(\"{}:{}\", did.krate.as_u32(), u32::from(did.index))),\n-        _ => todo!(\"how should json ItemId's be represented?\"),\n+        ItemId::DefId(did) => Id(format!(\"{}\", DisplayDefId(did))),\n+        ItemId::Blanket { for_, trait_ } => {\n+            Id(format!(\"b:{}-{}\", DisplayDefId(trait_), DisplayDefId(for_)))\n+        }\n+        ItemId::Auto { for_, trait_ } => {\n+            Id(format!(\"a:{}-{}\", DisplayDefId(trait_), DisplayDefId(for_)))\n+        }\n+        ItemId::Primitive(krate) => Id(format!(\"p:{}\", krate.as_u32())),\n     }\n }\n "}]}