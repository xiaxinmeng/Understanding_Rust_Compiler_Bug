{"sha": "47515ad5bdd8503a518db6a2c1fa9a8abeb1d67d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ3NTE1YWQ1YmRkODUwM2E1MThkYjZhMmMxZmE5YThhYmViMWQ2N2Q=", "commit": {"author": {"name": "Liigo Zhuang", "email": "com.liigo@gmail.com", "date": "2016-10-24T01:09:44Z"}, "committer": {"name": "Liigo Zhuang", "email": "com.liigo@gmail.com", "date": "2016-10-25T09:12:33Z"}, "message": "rustdoc: mark unsafe fns with icons", "tree": {"sha": "089bce6e90d890d7bcee3bc15f11ed2cd4a4eda9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/089bce6e90d890d7bcee3bc15f11ed2cd4a4eda9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/47515ad5bdd8503a518db6a2c1fa9a8abeb1d67d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/47515ad5bdd8503a518db6a2c1fa9a8abeb1d67d", "html_url": "https://github.com/rust-lang/rust/commit/47515ad5bdd8503a518db6a2c1fa9a8abeb1d67d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/47515ad5bdd8503a518db6a2c1fa9a8abeb1d67d/comments", "author": {"login": "liigo", "id": 346530, "node_id": "MDQ6VXNlcjM0NjUzMA==", "avatar_url": "https://avatars.githubusercontent.com/u/346530?v=4", "gravatar_id": "", "url": "https://api.github.com/users/liigo", "html_url": "https://github.com/liigo", "followers_url": "https://api.github.com/users/liigo/followers", "following_url": "https://api.github.com/users/liigo/following{/other_user}", "gists_url": "https://api.github.com/users/liigo/gists{/gist_id}", "starred_url": "https://api.github.com/users/liigo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/liigo/subscriptions", "organizations_url": "https://api.github.com/users/liigo/orgs", "repos_url": "https://api.github.com/users/liigo/repos", "events_url": "https://api.github.com/users/liigo/events{/privacy}", "received_events_url": "https://api.github.com/users/liigo/received_events", "type": "User", "site_admin": false}, "committer": {"login": "liigo", "id": 346530, "node_id": "MDQ6VXNlcjM0NjUzMA==", "avatar_url": "https://avatars.githubusercontent.com/u/346530?v=4", "gravatar_id": "", "url": "https://api.github.com/users/liigo", "html_url": "https://github.com/liigo", "followers_url": "https://api.github.com/users/liigo/followers", "following_url": "https://api.github.com/users/liigo/following{/other_user}", "gists_url": "https://api.github.com/users/liigo/gists{/gist_id}", "starred_url": "https://api.github.com/users/liigo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/liigo/subscriptions", "organizations_url": "https://api.github.com/users/liigo/orgs", "repos_url": "https://api.github.com/users/liigo/repos", "events_url": "https://api.github.com/users/liigo/events{/privacy}", "received_events_url": "https://api.github.com/users/liigo/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7a208648daa5ed2697527e0c6b79c0697f3950d8", "url": "https://api.github.com/repos/rust-lang/rust/commits/7a208648daa5ed2697527e0c6b79c0697f3950d8", "html_url": "https://github.com/rust-lang/rust/commit/7a208648daa5ed2697527e0c6b79c0697f3950d8"}], "stats": {"total": 11, "additions": 10, "deletions": 1}, "files": [{"sha": "97193f37acba70f8f712ea82fbca531b1deda6af", "filename": "src/librustdoc/html/render.rs", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/47515ad5bdd8503a518db6a2c1fa9a8abeb1d67d/src%2Flibrustdoc%2Fhtml%2Frender.rs", "raw_url": "https://github.com/rust-lang/rust/raw/47515ad5bdd8503a518db6a2c1fa9a8abeb1d67d/src%2Flibrustdoc%2Fhtml%2Frender.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Frender.rs?ref=47515ad5bdd8503a518db6a2c1fa9a8abeb1d67d", "patch": "@@ -1828,11 +1828,19 @@ fn item_module(w: &mut fmt::Formatter, cx: &Context,\n                 } else {\n                     String::new()\n                 };\n+\n+                let mut unsafety_flag = \"\";\n+                if let clean::FunctionItem(ref func) = myitem.inner {\n+                    if func.unsafety == hir::Unsafety::Unsafe {\n+                        unsafety_flag = \"<a title='unsafe function' href='#'><sup>\u26a0</sup></a>\";\n+                    }\n+                }\n+\n                 let doc_value = myitem.doc_value().unwrap_or(\"\");\n                 write!(w, \"\n                        <tr class='{stab} module-item'>\n                            <td><a class='{class}' href='{href}'\n-                                  title='{title}'>{name}</a></td>\n+                                  title='{title}'>{name}</a>{unsafety_flag}</td>\n                            <td class='docblock-short'>\n                                {stab_docs} {docs}\n                            </td>\n@@ -1842,6 +1850,7 @@ fn item_module(w: &mut fmt::Formatter, cx: &Context,\n                        docs = shorter(Some(&Markdown(doc_value).to_string())),\n                        class = myitem.type_(),\n                        stab = myitem.stability_class(),\n+                       unsafety_flag = unsafety_flag,\n                        href = item_path(myitem.type_(), myitem.name.as_ref().unwrap()),\n                        title = full_path(cx, myitem))?;\n             }"}]}