{"sha": "aa0f25ae31c4eb385c515269ad73b84b09350473", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFhMGYyNWFlMzFjNGViMzg1YzUxNTI2OWFkNzNiODRiMDkzNTA0NzM=", "commit": {"author": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2012-03-23T21:42:39Z"}, "committer": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2012-03-23T21:42:39Z"}, "message": "test: Add a trans.rs-workalike test case for regions", "tree": {"sha": "49d4e55c12b0bc048ddb25463c4902829fc1add3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/49d4e55c12b0bc048ddb25463c4902829fc1add3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/aa0f25ae31c4eb385c515269ad73b84b09350473", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/aa0f25ae31c4eb385c515269ad73b84b09350473", "html_url": "https://github.com/rust-lang/rust/commit/aa0f25ae31c4eb385c515269ad73b84b09350473", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/aa0f25ae31c4eb385c515269ad73b84b09350473/comments", "author": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7931a61ebb689723526bf14857ff06b6b7db2cfd", "url": "https://api.github.com/repos/rust-lang/rust/commits/7931a61ebb689723526bf14857ff06b6b7db2cfd", "html_url": "https://github.com/rust-lang/rust/commit/7931a61ebb689723526bf14857ff06b6b7db2cfd"}], "stats": {"total": 41, "additions": 41, "deletions": 0}, "files": [{"sha": "610efe89c176e99ec8cdbe4bbc05dde304a3be6c", "filename": "src/test/run-pass/regions-mock-trans.rs", "status": "added", "additions": 41, "deletions": 0, "changes": 41, "blob_url": "https://github.com/rust-lang/rust/blob/aa0f25ae31c4eb385c515269ad73b84b09350473/src%2Ftest%2Frun-pass%2Fregions-mock-trans.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aa0f25ae31c4eb385c515269ad73b84b09350473/src%2Ftest%2Frun-pass%2Fregions-mock-trans.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fregions-mock-trans.rs?ref=aa0f25ae31c4eb385c515269ad73b84b09350473", "patch": "@@ -0,0 +1,41 @@\n+import libc, sys, unsafe;\n+\n+enum arena = ();\n+\n+type bcx = {\n+    fcx: &fcx\n+};\n+\n+type fcx = {\n+    arena: &arena,\n+    ccx: &ccx\n+};\n+\n+type ccx = {\n+    x: int\n+};\n+\n+fn alloc(bcx : &a.arena) -> &a.bcx unsafe {\n+    ret unsafe::reinterpret_cast(libc::malloc(sys::size_of::<bcx>()));\n+}\n+\n+fn h(bcx : &a.bcx) -> &a.bcx {\n+    ret alloc(bcx.fcx.arena);\n+}\n+\n+fn g(fcx : &fcx) {\n+    let bcx = { fcx: fcx };\n+    let bcx2 = h(&bcx);\n+}\n+\n+fn f(ccx : &ccx) {\n+    let a = arena(());\n+    let fcx = { arena: &a, ccx: ccx }; \n+    ret g(&fcx);\n+}\n+\n+fn main() {\n+    let ccx = { x: 0 };\n+    f(&ccx);\n+}\n+"}]}