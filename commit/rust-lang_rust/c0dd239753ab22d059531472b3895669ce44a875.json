{"sha": "c0dd239753ab22d059531472b3895669ce44a875", "node_id": "MDY6Q29tbWl0NzI0NzEyOmMwZGQyMzk3NTNhYjIyZDA1OTUzMTQ3MmIzODk1NjY5Y2U0NGE4NzU=", "commit": {"author": {"name": "Murarth", "email": "murarth@gmail.com", "date": "2015-03-16T20:04:31Z"}, "committer": {"name": "Murarth", "email": "murarth@gmail.com", "date": "2015-03-27T00:13:14Z"}, "message": "Add `std::net::lookup_addr` for reverse DNS lookup\n\nCloses #22608", "tree": {"sha": "a2f712b9431f2f3091b141ea2a48f24d3bcfaeee", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a2f712b9431f2f3091b141ea2a48f24d3bcfaeee"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c0dd239753ab22d059531472b3895669ce44a875", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c0dd239753ab22d059531472b3895669ce44a875", "html_url": "https://github.com/rust-lang/rust/commit/c0dd239753ab22d059531472b3895669ce44a875", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c0dd239753ab22d059531472b3895669ce44a875/comments", "author": {"login": "murarth", "id": 1332722, "node_id": "MDQ6VXNlcjEzMzI3MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/1332722?v=4", "gravatar_id": "", "url": "https://api.github.com/users/murarth", "html_url": "https://github.com/murarth", "followers_url": "https://api.github.com/users/murarth/followers", "following_url": "https://api.github.com/users/murarth/following{/other_user}", "gists_url": "https://api.github.com/users/murarth/gists{/gist_id}", "starred_url": "https://api.github.com/users/murarth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/murarth/subscriptions", "organizations_url": "https://api.github.com/users/murarth/orgs", "repos_url": "https://api.github.com/users/murarth/repos", "events_url": "https://api.github.com/users/murarth/events{/privacy}", "received_events_url": "https://api.github.com/users/murarth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "murarth", "id": 1332722, "node_id": "MDQ6VXNlcjEzMzI3MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/1332722?v=4", "gravatar_id": "", "url": "https://api.github.com/users/murarth", "html_url": "https://github.com/murarth", "followers_url": "https://api.github.com/users/murarth/followers", "following_url": "https://api.github.com/users/murarth/following{/other_user}", "gists_url": "https://api.github.com/users/murarth/gists{/gist_id}", "starred_url": "https://api.github.com/users/murarth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/murarth/subscriptions", "organizations_url": "https://api.github.com/users/murarth/orgs", "repos_url": "https://api.github.com/users/murarth/repos", "events_url": "https://api.github.com/users/murarth/events{/privacy}", "received_events_url": "https://api.github.com/users/murarth/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1501f33e76f6f9621aa08fb0cbbc5f85a5ac7f0f", "url": "https://api.github.com/repos/rust-lang/rust/commits/1501f33e76f6f9621aa08fb0cbbc5f85a5ac7f0f", "html_url": "https://github.com/rust-lang/rust/commit/1501f33e76f6f9621aa08fb0cbbc5f85a5ac7f0f"}], "stats": {"total": 58, "additions": 57, "deletions": 1}, "files": [{"sha": "a08b33b342bece06aebe3183e2646b9301a2d70b", "filename": "src/libstd/net/addr.rs", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/c0dd239753ab22d059531472b3895669ce44a875/src%2Flibstd%2Fnet%2Faddr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c0dd239753ab22d059531472b3895669ce44a875/src%2Flibstd%2Fnet%2Faddr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fnet%2Faddr.rs?ref=c0dd239753ab22d059531472b3895669ce44a875", "patch": "@@ -47,6 +47,15 @@ pub struct SocketAddrV4 { inner: libc::sockaddr_in }\n pub struct SocketAddrV6 { inner: libc::sockaddr_in6 }\n \n impl SocketAddr {\n+    /// Creates a new socket address from the (ip, port) pair.\n+    #[unstable(feature = \"ip_addr\", reason = \"recent addition\")]\n+    pub fn new(ip: IpAddr, port: u16) -> SocketAddr {\n+        match ip {\n+            IpAddr::V4(a) => SocketAddr::V4(SocketAddrV4::new(a, port)),\n+            IpAddr::V6(a) => SocketAddr::V6(SocketAddrV6::new(a, port, 0, 0)),\n+        }\n+    }\n+\n     /// Gets the IP address associated with this socket address.\n     #[unstable(feature = \"ip_addr\", reason = \"recent addition\")]\n     pub fn ip(&self) -> IpAddr {"}, {"sha": "68f3098d993c0510af6d2687bcb9d26a95c5841e", "filename": "src/libstd/net/mod.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/c0dd239753ab22d059531472b3895669ce44a875/src%2Flibstd%2Fnet%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c0dd239753ab22d059531472b3895669ce44a875/src%2Flibstd%2Fnet%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fnet%2Fmod.rs?ref=c0dd239753ab22d059531472b3895669ce44a875", "patch": "@@ -111,3 +111,13 @@ impl Iterator for LookupHost {\n pub fn lookup_host(host: &str) -> io::Result<LookupHost> {\n     net_imp::lookup_host(host).map(LookupHost)\n }\n+\n+/// Resolve the given address to a hostname.\n+///\n+/// This function may perform a DNS query to resolve `addr` and may also inspect\n+/// system configuration to resolve the specified address. If the address\n+/// cannot be resolved, it is returned in string format.\n+#[unstable(feature = \"lookup_addr\", reason = \"recent addition\")]\n+pub fn lookup_addr(addr: &IpAddr) -> io::Result<String> {\n+    net_imp::lookup_addr(addr)\n+}"}, {"sha": "a8ee40639e32ee3fcda50ff9acdd78c0ef6290ba", "filename": "src/libstd/sys/common/net2.rs", "status": "modified", "additions": 38, "deletions": 1, "changes": 39, "blob_url": "https://github.com/rust-lang/rust/blob/c0dd239753ab22d059531472b3895669ce44a875/src%2Flibstd%2Fsys%2Fcommon%2Fnet2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c0dd239753ab22d059531472b3895669ce44a875/src%2Flibstd%2Fsys%2Fcommon%2Fnet2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Fcommon%2Fnet2.rs?ref=c0dd239753ab22d059531472b3895669ce44a875", "patch": "@@ -10,11 +10,12 @@\n \n use prelude::v1::*;\n \n-use ffi::CString;\n+use ffi::{CStr, CString};\n use io::{self, Error, ErrorKind};\n use libc::{self, c_int, c_char, c_void, socklen_t};\n use mem;\n use net::{SocketAddr, Shutdown, IpAddr};\n+use str::from_utf8;\n use sys::c;\n use sys::net::{cvt, cvt_r, cvt_gai, Socket, init, wrlen_t};\n use sys_common::{AsInner, FromInner, IntoInner};\n@@ -126,6 +127,42 @@ pub fn lookup_host(host: &str) -> io::Result<LookupHost> {\n     }\n }\n \n+////////////////////////////////////////////////////////////////////////////////\n+// lookup_addr\n+////////////////////////////////////////////////////////////////////////////////\n+\n+extern \"system\" {\n+    fn getnameinfo(sa: *const libc::sockaddr, salen: socklen_t,\n+                   host: *mut c_char, hostlen: libc::size_t,\n+                   serv: *mut c_char, servlen: libc::size_t,\n+                   flags: c_int) -> c_int;\n+}\n+\n+const NI_MAXHOST: usize = 1025;\n+\n+pub fn lookup_addr(addr: &IpAddr) -> io::Result<String> {\n+    init();\n+\n+    let saddr = SocketAddr::new(*addr, 0);\n+    let (inner, len) = saddr.into_inner();\n+    let mut hostbuf = [0 as c_char; NI_MAXHOST];\n+\n+    let data = unsafe {\n+        try!(cvt_gai(getnameinfo(inner, len,\n+                                 hostbuf.as_mut_ptr(), NI_MAXHOST as libc::size_t,\n+                                 0 as *mut _, 0, 0)));\n+\n+        CStr::from_ptr(hostbuf.as_ptr())\n+    };\n+\n+    match from_utf8(data.to_bytes()) {\n+        Ok(name) => Ok(name.to_string()),\n+        Err(_) => Err(io::Error::new(io::ErrorKind::Other,\n+                                     \"failed to lookup address information\",\n+                                     Some(\"invalid host name\".to_string())))\n+    }\n+}\n+\n ////////////////////////////////////////////////////////////////////////////////\n // TCP streams\n ////////////////////////////////////////////////////////////////////////////////"}]}