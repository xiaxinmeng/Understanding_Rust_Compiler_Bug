{"sha": "7a4d07105f58fdee2ee1d72826bfaa177b07fdb2", "node_id": "C_kwDOAAsO6NoAKDdhNGQwNzEwNWY1OGZkZWUyZWUxZDcyODI2YmZhYTE3N2IwN2ZkYjI", "commit": {"author": {"name": "bing", "email": "tanbinghwang@gmail.com", "date": "2022-04-18T06:42:24Z"}, "committer": {"name": "bing", "email": "tanbinghwang@gmail.com", "date": "2022-04-18T06:42:24Z"}, "message": "Less authoritative stable_sort_primitive message", "tree": {"sha": "b9ce1db54181531d6ac409f3e2cee577648396a0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b9ce1db54181531d6ac409f3e2cee577648396a0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7a4d07105f58fdee2ee1d72826bfaa177b07fdb2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7a4d07105f58fdee2ee1d72826bfaa177b07fdb2", "html_url": "https://github.com/rust-lang/rust/commit/7a4d07105f58fdee2ee1d72826bfaa177b07fdb2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7a4d07105f58fdee2ee1d72826bfaa177b07fdb2/comments", "author": null, "committer": null, "parents": [{"sha": "e5ebece910f8bfcc2361bddd847a7ae623debd57", "url": "https://api.github.com/repos/rust-lang/rust/commits/e5ebece910f8bfcc2361bddd847a7ae623debd57", "html_url": "https://github.com/rust-lang/rust/commit/e5ebece910f8bfcc2361bddd847a7ae623debd57"}], "stats": {"total": 18, "additions": 9, "deletions": 9}, "files": [{"sha": "a285323dc6e0b660da2bcd65bbf245828a39e3b5", "filename": "clippy_lints/src/stable_sort_primitive.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/7a4d07105f58fdee2ee1d72826bfaa177b07fdb2/clippy_lints%2Fsrc%2Fstable_sort_primitive.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7a4d07105f58fdee2ee1d72826bfaa177b07fdb2/clippy_lints%2Fsrc%2Fstable_sort_primitive.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fstable_sort_primitive.rs?ref=7a4d07105f58fdee2ee1d72826bfaa177b07fdb2", "patch": "@@ -30,7 +30,7 @@ declare_clippy_lint! {\n     /// ```\n     #[clippy::version = \"1.47.0\"]\n     pub STABLE_SORT_PRIMITIVE,\n-    perf,\n+    pedantic,\n     \"use of sort() when sort_unstable() is equivalent\"\n }\n \n@@ -126,7 +126,7 @@ impl LateLintPass<'_> for StableSortPrimitive {\n                         Applicability::MachineApplicable,\n                     );\n                     diag.note(\n-                        \"an unstable sort would perform faster without any observable difference for this data type\",\n+                        \"an unstable sort typically performs faster without any observable difference for this data type\",\n                     );\n                 },\n             );"}, {"sha": "c35e0c22ae8994a4cced07921e44d0b281f306c6", "filename": "tests/ui/stable_sort_primitive.stderr", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/7a4d07105f58fdee2ee1d72826bfaa177b07fdb2/tests%2Fui%2Fstable_sort_primitive.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/7a4d07105f58fdee2ee1d72826bfaa177b07fdb2/tests%2Fui%2Fstable_sort_primitive.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fstable_sort_primitive.stderr?ref=7a4d07105f58fdee2ee1d72826bfaa177b07fdb2", "patch": "@@ -5,55 +5,55 @@ LL |     vec.sort();\n    |     ^^^^^^^^^^ help: try: `vec.sort_unstable()`\n    |\n    = note: `-D clippy::stable-sort-primitive` implied by `-D warnings`\n-   = note: an unstable sort would perform faster without any observable difference for this data type\n+   = note: an unstable sort typically performs faster without any observable difference for this data type\n \n error: used `sort` on primitive type `bool`\n   --> $DIR/stable_sort_primitive.rs:9:5\n    |\n LL |     vec.sort();\n    |     ^^^^^^^^^^ help: try: `vec.sort_unstable()`\n    |\n-   = note: an unstable sort would perform faster without any observable difference for this data type\n+   = note: an unstable sort typically performs faster without any observable difference for this data type\n \n error: used `sort` on primitive type `char`\n   --> $DIR/stable_sort_primitive.rs:11:5\n    |\n LL |     vec.sort();\n    |     ^^^^^^^^^^ help: try: `vec.sort_unstable()`\n    |\n-   = note: an unstable sort would perform faster without any observable difference for this data type\n+   = note: an unstable sort typically performs faster without any observable difference for this data type\n \n error: used `sort` on primitive type `str`\n   --> $DIR/stable_sort_primitive.rs:13:5\n    |\n LL |     vec.sort();\n    |     ^^^^^^^^^^ help: try: `vec.sort_unstable()`\n    |\n-   = note: an unstable sort would perform faster without any observable difference for this data type\n+   = note: an unstable sort typically performs faster without any observable difference for this data type\n \n error: used `sort` on primitive type `tuple`\n   --> $DIR/stable_sort_primitive.rs:15:5\n    |\n LL |     vec.sort();\n    |     ^^^^^^^^^^ help: try: `vec.sort_unstable()`\n    |\n-   = note: an unstable sort would perform faster without any observable difference for this data type\n+   = note: an unstable sort typically performs faster without any observable difference for this data type\n \n error: used `sort` on primitive type `array`\n   --> $DIR/stable_sort_primitive.rs:17:5\n    |\n LL |     vec.sort();\n    |     ^^^^^^^^^^ help: try: `vec.sort_unstable()`\n    |\n-   = note: an unstable sort would perform faster without any observable difference for this data type\n+   = note: an unstable sort typically performs faster without any observable difference for this data type\n \n error: used `sort` on primitive type `i32`\n   --> $DIR/stable_sort_primitive.rs:19:5\n    |\n LL |     arr.sort();\n    |     ^^^^^^^^^^ help: try: `arr.sort_unstable()`\n    |\n-   = note: an unstable sort would perform faster without any observable difference for this data type\n+   = note: an unstable sort typically performs faster without any observable difference for this data type\n \n error: aborting due to 7 previous errors\n "}]}