{"sha": "63030acf4ff453da2beb7f43b13cca8fb6cf425a", "node_id": "C_kwDOAAsO6NoAKDYzMDMwYWNmNGZmNDUzZGEyYmViN2Y0M2IxM2NjYThmYjZjZjQyNWE", "commit": {"author": {"name": "Michael Schubart", "email": "michael@schubart.net", "date": "2023-03-12T14:45:22Z"}, "committer": {"name": "Michael Schubart", "email": "michael@schubart.net", "date": "2023-04-11T01:27:32Z"}, "message": "Refactor", "tree": {"sha": "ebe6c50d209743140291ef99fdb282701c780779", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ebe6c50d209743140291ef99fdb282701c780779"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/63030acf4ff453da2beb7f43b13cca8fb6cf425a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/63030acf4ff453da2beb7f43b13cca8fb6cf425a", "html_url": "https://github.com/rust-lang/rust/commit/63030acf4ff453da2beb7f43b13cca8fb6cf425a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/63030acf4ff453da2beb7f43b13cca8fb6cf425a/comments", "author": {"login": "schubart", "id": 75188, "node_id": "MDQ6VXNlcjc1MTg4", "avatar_url": "https://avatars.githubusercontent.com/u/75188?v=4", "gravatar_id": "", "url": "https://api.github.com/users/schubart", "html_url": "https://github.com/schubart", "followers_url": "https://api.github.com/users/schubart/followers", "following_url": "https://api.github.com/users/schubart/following{/other_user}", "gists_url": "https://api.github.com/users/schubart/gists{/gist_id}", "starred_url": "https://api.github.com/users/schubart/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/schubart/subscriptions", "organizations_url": "https://api.github.com/users/schubart/orgs", "repos_url": "https://api.github.com/users/schubart/repos", "events_url": "https://api.github.com/users/schubart/events{/privacy}", "received_events_url": "https://api.github.com/users/schubart/received_events", "type": "User", "site_admin": false}, "committer": {"login": "schubart", "id": 75188, "node_id": "MDQ6VXNlcjc1MTg4", "avatar_url": "https://avatars.githubusercontent.com/u/75188?v=4", "gravatar_id": "", "url": "https://api.github.com/users/schubart", "html_url": "https://github.com/schubart", "followers_url": "https://api.github.com/users/schubart/followers", "following_url": "https://api.github.com/users/schubart/following{/other_user}", "gists_url": "https://api.github.com/users/schubart/gists{/gist_id}", "starred_url": "https://api.github.com/users/schubart/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/schubart/subscriptions", "organizations_url": "https://api.github.com/users/schubart/orgs", "repos_url": "https://api.github.com/users/schubart/repos", "events_url": "https://api.github.com/users/schubart/events{/privacy}", "received_events_url": "https://api.github.com/users/schubart/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5ec2e192f58aa4fc82e3b4551e16e0f83d368569", "url": "https://api.github.com/repos/rust-lang/rust/commits/5ec2e192f58aa4fc82e3b4551e16e0f83d368569", "html_url": "https://github.com/rust-lang/rust/commit/5ec2e192f58aa4fc82e3b4551e16e0f83d368569"}], "stats": {"total": 12, "additions": 8, "deletions": 4}, "files": [{"sha": "a5feffa3106566e4b43272eb8b342c65c32ec749", "filename": "clippy_lints/src/collection_is_never_read.rs", "status": "modified", "additions": 8, "deletions": 4, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/63030acf4ff453da2beb7f43b13cca8fb6cf425a/clippy_lints%2Fsrc%2Fcollection_is_never_read.rs", "raw_url": "https://github.com/rust-lang/rust/raw/63030acf4ff453da2beb7f43b13cca8fb6cf425a/clippy_lints%2Fsrc%2Fcollection_is_never_read.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fcollection_is_never_read.rs?ref=63030acf4ff453da2beb7f43b13cca8fb6cf425a", "patch": "@@ -101,21 +101,25 @@ fn has_no_read_access<'tcx>(cx: &LateContext<'tcx>, id: HirId, block: &'tcx Bloc\n             return ControlFlow::Continue(());\n         }\n \n-        // Method call on `id` in a statement ignores any return value, so it's not a read access:\n+        // Look for method call with receiver `id`. It might be a non-read access:\n         //\n-        // id.foo(...); // Not reading `id`.\n+        // id.foo(args)\n         //\n         // Only assuming this for \"official\" methods defined on the type. For methods defined in extension\n         // traits (identified as local, based on the orphan rule), pessimistically assume that they might\n         // have side effects, so consider them a read.\n         if let Some(Node::Expr(parent)) = get_parent_node(cx.tcx, expr.hir_id)\n             && let ExprKind::MethodCall(_, receiver, _, _) = parent.kind\n             && path_to_local_id(receiver, id)\n-            && let Some(Node::Stmt(..)) = get_parent_node(cx.tcx, parent.hir_id)\n             && let Some(method_def_id) = cx.typeck_results().type_dependent_def_id(parent.hir_id)\n             && !method_def_id.is_local()\n         {\n-            return ControlFlow::Continue(());\n+            // The method call is a statement, so the return value is not used. That's not a read access:\n+            //\n+            // id.foo(args);\n+            if let Some(Node::Stmt(..)) = get_parent_node(cx.tcx, parent.hir_id) {\n+                return ControlFlow::Continue(());\n+            }\n         }\n \n         // Any other access to `id` is a read access. Stop searching."}]}