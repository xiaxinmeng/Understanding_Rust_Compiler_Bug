{"sha": "a5c0b1470cc48e665eabf29881dd87438973ab97", "node_id": "C_kwDOAAsO6NoAKGE1YzBiMTQ3MGNjNDhlNjY1ZWFiZjI5ODgxZGQ4NzQzODk3M2FiOTc", "commit": {"author": {"name": "Nixon Enraght-Moony", "email": "nixon.emoony@gmail.com", "date": "2022-03-13T23:37:04Z"}, "committer": {"name": "Nixon Enraght-Moony", "email": "nixon.emoony@gmail.com", "date": "2022-03-14T00:05:11Z"}, "message": "rustdoc-json-types: implementors -> implementations\n\nCloses #94198", "tree": {"sha": "4fe7e1c1f7e298d04617e39a4831355b11ad98d8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4fe7e1c1f7e298d04617e39a4831355b11ad98d8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a5c0b1470cc48e665eabf29881dd87438973ab97", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a5c0b1470cc48e665eabf29881dd87438973ab97", "html_url": "https://github.com/rust-lang/rust/commit/a5c0b1470cc48e665eabf29881dd87438973ab97", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a5c0b1470cc48e665eabf29881dd87438973ab97/comments", "author": {"login": "aDotInTheVoid", "id": 28781354, "node_id": "MDQ6VXNlcjI4NzgxMzU0", "avatar_url": "https://avatars.githubusercontent.com/u/28781354?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aDotInTheVoid", "html_url": "https://github.com/aDotInTheVoid", "followers_url": "https://api.github.com/users/aDotInTheVoid/followers", "following_url": "https://api.github.com/users/aDotInTheVoid/following{/other_user}", "gists_url": "https://api.github.com/users/aDotInTheVoid/gists{/gist_id}", "starred_url": "https://api.github.com/users/aDotInTheVoid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aDotInTheVoid/subscriptions", "organizations_url": "https://api.github.com/users/aDotInTheVoid/orgs", "repos_url": "https://api.github.com/users/aDotInTheVoid/repos", "events_url": "https://api.github.com/users/aDotInTheVoid/events{/privacy}", "received_events_url": "https://api.github.com/users/aDotInTheVoid/received_events", "type": "User", "site_admin": false}, "committer": {"login": "aDotInTheVoid", "id": 28781354, "node_id": "MDQ6VXNlcjI4NzgxMzU0", "avatar_url": "https://avatars.githubusercontent.com/u/28781354?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aDotInTheVoid", "html_url": "https://github.com/aDotInTheVoid", "followers_url": "https://api.github.com/users/aDotInTheVoid/followers", "following_url": "https://api.github.com/users/aDotInTheVoid/following{/other_user}", "gists_url": "https://api.github.com/users/aDotInTheVoid/gists{/gist_id}", "starred_url": "https://api.github.com/users/aDotInTheVoid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aDotInTheVoid/subscriptions", "organizations_url": "https://api.github.com/users/aDotInTheVoid/orgs", "repos_url": "https://api.github.com/users/aDotInTheVoid/repos", "events_url": "https://api.github.com/users/aDotInTheVoid/events{/privacy}", "received_events_url": "https://api.github.com/users/aDotInTheVoid/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b526d8f27c37a7ab6d567d5eff90291082841c46", "url": "https://api.github.com/repos/rust-lang/rust/commits/b526d8f27c37a7ab6d567d5eff90291082841c46", "html_url": "https://github.com/rust-lang/rust/commit/b526d8f27c37a7ab6d567d5eff90291082841c46"}], "stats": {"total": 29, "additions": 24, "deletions": 5}, "files": [{"sha": "89696f392621b60d8601403499b53b7bf5a09f16", "filename": "src/etc/check_missing_items.py", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a5c0b1470cc48e665eabf29881dd87438973ab97/src%2Fetc%2Fcheck_missing_items.py", "raw_url": "https://github.com/rust-lang/rust/raw/a5c0b1470cc48e665eabf29881dd87438973ab97/src%2Fetc%2Fcheck_missing_items.py", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fetc%2Fcheck_missing_items.py?ref=a5c0b1470cc48e665eabf29881dd87438973ab97", "patch": "@@ -171,7 +171,7 @@ def check_type(ty):\n         for bound in item[\"inner\"][\"bounds\"]:\n             check_generic_bound(bound)\n         work_list |= (\n-            set(item[\"inner\"][\"items\"]) | set(item[\"inner\"][\"implementors\"])\n+            set(item[\"inner\"][\"items\"]) | set(item[\"inner\"][\"implementations\"])\n         ) - visited\n     elif item[\"kind\"] == \"impl\":\n         check_generics(item[\"inner\"][\"generics\"])"}, {"sha": "7cf5d02f9f89126b10fb1ca672245a9505a4f4f1", "filename": "src/librustdoc/json/conversions.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a5c0b1470cc48e665eabf29881dd87438973ab97/src%2Flibrustdoc%2Fjson%2Fconversions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a5c0b1470cc48e665eabf29881dd87438973ab97/src%2Flibrustdoc%2Fjson%2Fconversions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fjson%2Fconversions.rs?ref=a5c0b1470cc48e665eabf29881dd87438973ab97", "patch": "@@ -517,7 +517,7 @@ impl FromWithTcx<clean::Trait> for Trait {\n             items: ids(items),\n             generics: generics.into_tcx(tcx),\n             bounds: bounds.into_iter().map(|x| x.into_tcx(tcx)).collect(),\n-            implementors: Vec::new(), // Added in JsonRenderer::item\n+            implementations: Vec::new(), // Added in JsonRenderer::item\n         }\n     }\n }"}, {"sha": "126c5d89ca97c03896c61f9d512fc76488cc763e", "filename": "src/librustdoc/json/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a5c0b1470cc48e665eabf29881dd87438973ab97/src%2Flibrustdoc%2Fjson%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a5c0b1470cc48e665eabf29881dd87438973ab97/src%2Flibrustdoc%2Fjson%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fjson%2Fmod.rs?ref=a5c0b1470cc48e665eabf29881dd87438973ab97", "patch": "@@ -179,7 +179,7 @@ impl<'tcx> FormatRenderer<'tcx> for JsonRenderer<'tcx> {\n         let id = item.def_id;\n         if let Some(mut new_item) = self.convert_item(item) {\n             if let types::ItemEnum::Trait(ref mut t) = new_item.inner {\n-                t.implementors = self.get_trait_implementors(id.expect_def_id())\n+                t.implementations = self.get_trait_implementors(id.expect_def_id())\n             } else if let types::ItemEnum::Struct(ref mut s) = new_item.inner {\n                 s.impls = self.get_impls(id.expect_def_id())\n             } else if let types::ItemEnum::Enum(ref mut e) = new_item.inner {"}, {"sha": "17b3859a77b645a0053f77263f12484df818418f", "filename": "src/rustdoc-json-types/lib.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/a5c0b1470cc48e665eabf29881dd87438973ab97/src%2Frustdoc-json-types%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a5c0b1470cc48e665eabf29881dd87438973ab97/src%2Frustdoc-json-types%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustdoc-json-types%2Flib.rs?ref=a5c0b1470cc48e665eabf29881dd87438973ab97", "patch": "@@ -9,7 +9,7 @@ use std::path::PathBuf;\n use serde::{Deserialize, Serialize};\n \n /// rustdoc format-version.\n-pub const FORMAT_VERSION: u32 = 13;\n+pub const FORMAT_VERSION: u32 = 14;\n \n /// A `Crate` is the root of the emitted JSON blob. It contains all type/documentation information\n /// about the language items in the local crate, as well as info about external items to allow\n@@ -505,7 +505,7 @@ pub struct Trait {\n     pub items: Vec<Id>,\n     pub generics: Generics,\n     pub bounds: Vec<GenericBound>,\n-    pub implementors: Vec<Id>,\n+    pub implementations: Vec<Id>,\n }\n \n #[derive(Clone, Debug, Serialize, Deserialize, PartialEq)]"}, {"sha": "f7f03d987207e34ea2ad28c56dedb4c63d3b9f5a", "filename": "src/test/rustdoc-json/traits/implementors.rs", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/a5c0b1470cc48e665eabf29881dd87438973ab97/src%2Ftest%2Frustdoc-json%2Ftraits%2Fimplementors.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a5c0b1470cc48e665eabf29881dd87438973ab97/src%2Ftest%2Frustdoc-json%2Ftraits%2Fimplementors.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-json%2Ftraits%2Fimplementors.rs?ref=a5c0b1470cc48e665eabf29881dd87438973ab97", "patch": "@@ -0,0 +1,19 @@\n+#![feature(no_core)]\n+#![no_core]\n+\n+// @set wham = implementors.json \"$.index[*][?(@.name=='Wham')].id\"\n+// @count - \"$.index[*][?(@.name=='Wham')].inner.implementations[*]\" 1\n+// @set gmWham = - \"$.index[*][?(@.name=='Wham')].inner.implementations[0]\"\n+pub trait Wham {}\n+\n+// @count - \"$.index[*][?(@.name=='GeorgeMichael')].inner.impls[*]\" 1\n+// @is - \"$.index[*][?(@.name=='GeorgeMichael')].inner.impls[0]\" $gmWham\n+// @set gm = - \"$.index[*][?(@.name=='Wham')].id\"\n+\n+// jsonpath_lib isnt expressive enough (for now) to get the \"impl\" item, so we\n+// just check it isn't pointing to the type, but when you port to jsondocck-ng\n+// check what the impl item is\n+// @!is - \"$.index[*][?(@.name=='Wham')].inner.implementations[0]\" $gm\n+pub struct GeorgeMichael {}\n+\n+impl Wham for GeorgeMichael {}"}]}