{"sha": "2bfcfb0b0e5e518e8fc2779c6564ed1009d3f920", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJiZmNmYjBiMGU1ZTUxOGU4ZmMyNzc5YzY1NjRlZDEwMDlkM2Y5MjA=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2019-06-29T11:01:36Z"}, "committer": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2019-06-29T11:01:36Z"}, "message": "Merge #1457\n\n1457: Complete associated methods on enums (and unions) as well r=matklad a=flodiebold\n\nThis has been seriously annoying me for a while ;)\n\nCo-authored-by: Florian Diebold <flodiebold@gmail.com>", "tree": {"sha": "97b1732bc0bcfb1aee6ffa6496d5f70be264ef95", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/97b1732bc0bcfb1aee6ffa6496d5f70be264ef95"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2bfcfb0b0e5e518e8fc2779c6564ed1009d3f920", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2bfcfb0b0e5e518e8fc2779c6564ed1009d3f920", "html_url": "https://github.com/rust-lang/rust/commit/2bfcfb0b0e5e518e8fc2779c6564ed1009d3f920", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2bfcfb0b0e5e518e8fc2779c6564ed1009d3f920/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "parents": [{"sha": "8865db6768fd913b971df56fc0bcf7439fcb1e71", "url": "https://api.github.com/repos/rust-lang/rust/commits/8865db6768fd913b971df56fc0bcf7439fcb1e71", "html_url": "https://github.com/rust-lang/rust/commit/8865db6768fd913b971df56fc0bcf7439fcb1e71"}, {"sha": "d37f960dfaac2272de3065ad586b25dc1cdb7dbd", "url": "https://api.github.com/repos/rust-lang/rust/commits/d37f960dfaac2272de3065ad586b25dc1cdb7dbd", "html_url": "https://github.com/rust-lang/rust/commit/d37f960dfaac2272de3065ad586b25dc1cdb7dbd"}], "stats": {"total": 97, "additions": 91, "deletions": 6}, "files": [{"sha": "32f98e394af80c7f3a39f38265e3b2229d00b5da", "filename": "crates/ra_hir/src/code_model.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/2bfcfb0b0e5e518e8fc2779c6564ed1009d3f920/crates%2Fra_hir%2Fsrc%2Fcode_model.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2bfcfb0b0e5e518e8fc2779c6564ed1009d3f920/crates%2Fra_hir%2Fsrc%2Fcode_model.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Fcode_model.rs?ref=2bfcfb0b0e5e518e8fc2779c6564ed1009d3f920", "patch": "@@ -390,6 +390,10 @@ impl Union {\n         self.id.module(db)\n     }\n \n+    pub fn ty(self, db: &impl HirDatabase) -> Ty {\n+        db.type_for_def(self.into(), Namespace::Types)\n+    }\n+\n     // FIXME move to a more general type\n     /// Builds a resolver for type references inside this union.\n     pub(crate) fn resolver(self, db: &impl HirDatabase) -> Resolver {"}, {"sha": "b42b7c458ef8e5de58a8a2456ad1488b5a0a0575", "filename": "crates/ra_ide_api/src/completion/complete_path.rs", "status": "modified", "additions": 49, "deletions": 6, "changes": 55, "blob_url": "https://github.com/rust-lang/rust/blob/2bfcfb0b0e5e518e8fc2779c6564ed1009d3f920/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fcomplete_path.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2bfcfb0b0e5e518e8fc2779c6564ed1009d3f920/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fcomplete_path.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fcomplete_path.rs?ref=2bfcfb0b0e5e518e8fc2779c6564ed1009d3f920", "patch": "@@ -37,13 +37,18 @@ pub(super) fn complete_path(acc: &mut Completions, ctx: &CompletionContext) {\n                 acc.add_resolution(ctx, name.to_string(), &res.def.map(hir::Resolution::Def));\n             }\n         }\n-        hir::ModuleDef::Enum(e) => {\n-            for variant in e.variants(ctx.db) {\n-                acc.add_enum_variant(ctx, variant);\n+        hir::ModuleDef::Enum(_) | hir::ModuleDef::Struct(_) | hir::ModuleDef::Union(_) => {\n+            if let hir::ModuleDef::Enum(e) = def {\n+                for variant in e.variants(ctx.db) {\n+                    acc.add_enum_variant(ctx, variant);\n+                }\n             }\n-        }\n-        hir::ModuleDef::Struct(s) => {\n-            let ty = s.ty(ctx.db);\n+            let ty = match def {\n+                hir::ModuleDef::Enum(e) => e.ty(ctx.db),\n+                hir::ModuleDef::Struct(s) => s.ty(ctx.db),\n+                hir::ModuleDef::Union(u) => u.ty(ctx.db),\n+                _ => unreachable!(),\n+            };\n             let krate = ctx.module.and_then(|m| m.krate(ctx.db));\n             if let Some(krate) = krate {\n                 ty.iterate_impl_items(ctx.db, krate, |item| {\n@@ -280,6 +285,44 @@ mod tests {\n         );\n     }\n \n+    #[test]\n+    fn completes_enum_associated_method() {\n+        check_reference_completion(\n+            \"enum_associated_method\",\n+            \"\n+            //- /lib.rs\n+            /// An enum\n+            enum S {};\n+\n+            impl S {\n+                /// An associated method\n+                fn m() { }\n+            }\n+\n+            fn foo() { let _ = S::<|> }\n+            \",\n+        );\n+    }\n+\n+    #[test]\n+    fn completes_union_associated_method() {\n+        check_reference_completion(\n+            \"union_associated_method\",\n+            \"\n+            //- /lib.rs\n+            /// A union\n+            union U {};\n+\n+            impl U {\n+                /// An associated method\n+                fn m() { }\n+            }\n+\n+            fn foo() { let _ = U::<|> }\n+            \",\n+        );\n+    }\n+\n     #[test]\n     fn completes_use_paths_across_crates() {\n         check_reference_completion("}, {"sha": "ee6518fc83f6538df3fa6b06e7d38740efc4d26f", "filename": "crates/ra_ide_api/src/completion/snapshots/completion_item__enum_associated_method.snap", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/2bfcfb0b0e5e518e8fc2779c6564ed1009d3f920/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fsnapshots%2Fcompletion_item__enum_associated_method.snap", "raw_url": "https://github.com/rust-lang/rust/raw/2bfcfb0b0e5e518e8fc2779c6564ed1009d3f920/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fsnapshots%2Fcompletion_item__enum_associated_method.snap", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fsnapshots%2Fcompletion_item__enum_associated_method.snap?ref=2bfcfb0b0e5e518e8fc2779c6564ed1009d3f920", "patch": "@@ -0,0 +1,19 @@\n+---\n+created: \"2019-06-29T10:30:34.110468474Z\"\n+creator: insta@0.8.1\n+source: crates/ra_ide_api/src/completion/completion_item.rs\n+expression: kind_completions\n+---\n+[\n+    CompletionItem {\n+        label: \"m\",\n+        source_range: [100; 100),\n+        delete: [100; 100),\n+        insert: \"m()$0\",\n+        kind: Function,\n+        detail: \"fn m()\",\n+        documentation: Documentation(\n+            \"An associated method\",\n+        ),\n+    },\n+]"}, {"sha": "1c1a250f4b21330233bc6590dd11000dccc878d4", "filename": "crates/ra_ide_api/src/completion/snapshots/completion_item__union_associated_method.snap", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/2bfcfb0b0e5e518e8fc2779c6564ed1009d3f920/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fsnapshots%2Fcompletion_item__union_associated_method.snap", "raw_url": "https://github.com/rust-lang/rust/raw/2bfcfb0b0e5e518e8fc2779c6564ed1009d3f920/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fsnapshots%2Fcompletion_item__union_associated_method.snap", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fsnapshots%2Fcompletion_item__union_associated_method.snap?ref=2bfcfb0b0e5e518e8fc2779c6564ed1009d3f920", "patch": "@@ -0,0 +1,19 @@\n+---\n+created: \"2019-06-29T10:37:44.968500164Z\"\n+creator: insta@0.8.1\n+source: crates/ra_ide_api/src/completion/completion_item.rs\n+expression: kind_completions\n+---\n+[\n+    CompletionItem {\n+        label: \"m\",\n+        source_range: [101; 101),\n+        delete: [101; 101),\n+        insert: \"m()$0\",\n+        kind: Function,\n+        detail: \"fn m()\",\n+        documentation: Documentation(\n+            \"An associated method\",\n+        ),\n+    },\n+]"}]}