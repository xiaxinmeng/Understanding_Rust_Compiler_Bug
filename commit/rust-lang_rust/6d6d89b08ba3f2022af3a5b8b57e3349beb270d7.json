{"sha": "6d6d89b08ba3f2022af3a5b8b57e3349beb270d7", "node_id": "C_kwDOAAsO6NoAKDZkNmQ4OWIwOGJhM2YyMDIyYWYzYTViOGI1N2UzMzQ5YmViMjcwZDc", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2022-09-23T13:40:23Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-09-23T13:40:23Z"}, "message": "Rollup merge of #102158 - notriddle:notriddle/stab-p, r=GuillaumeGomez\n\nrustdoc: clean up CSS/DOM for deprecation warnings\n\nPreview: https://notriddle.com/notriddle-rustdoc-test/stab-p/std/macro.try.html", "tree": {"sha": "4ead6f576fec96c8c7647720db241bbe32244873", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4ead6f576fec96c8c7647720db241bbe32244873"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6d6d89b08ba3f2022af3a5b8b57e3349beb270d7", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJjLbdHCRBK7hj4Ov3rIwAAuhEIAK0Q2LhSQpx6JNYgP27sa3ls\nhs6GxDP6VV4vGjrXxU5IxQBG7a4dyoCGxftF1k+SpQjDaxymFbOuoflmFmww9hUg\nNmEcvRO+f8aoLPfcpIBnWde/ncAEnMBp6EINI05YHJBJdbmACGfplQdIaNGAGEbr\nv36kUOuotsmfDLiquFG4/Xtwc5P5QGgF7XCjt7470TMCE42cqU6i9auizgPnriO2\nDUUlTM8xamtgbUyaKKuUxA7u3vJN6XUsUQfdm5rU/SeowwGqfPDImseP1WxIlZpo\nj9nTHKhn2fUSbiHnEKVbpA/8Qxd5ooQ/F8kDIb3MMsBc9JAH2MEFVl6+5ThEs1w=\n=CasY\n-----END PGP SIGNATURE-----\n", "payload": "tree 4ead6f576fec96c8c7647720db241bbe32244873\nparent 0d0186939bb08989fb7864930fbf7a384f491a0c\nparent 51f335deca435bd4899b3cde0555bbaaa6afdbef\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1663940423 +0200\ncommitter GitHub <noreply@github.com> 1663940423 +0200\n\nRollup merge of #102158 - notriddle:notriddle/stab-p, r=GuillaumeGomez\n\nrustdoc: clean up CSS/DOM for deprecation warnings\n\nPreview: https://notriddle.com/notriddle-rustdoc-test/stab-p/std/macro.try.html\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6d6d89b08ba3f2022af3a5b8b57e3349beb270d7", "html_url": "https://github.com/rust-lang/rust/commit/6d6d89b08ba3f2022af3a5b8b57e3349beb270d7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6d6d89b08ba3f2022af3a5b8b57e3349beb270d7/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0d0186939bb08989fb7864930fbf7a384f491a0c", "url": "https://api.github.com/repos/rust-lang/rust/commits/0d0186939bb08989fb7864930fbf7a384f491a0c", "html_url": "https://github.com/rust-lang/rust/commit/0d0186939bb08989fb7864930fbf7a384f491a0c"}, {"sha": "51f335deca435bd4899b3cde0555bbaaa6afdbef", "url": "https://api.github.com/repos/rust-lang/rust/commits/51f335deca435bd4899b3cde0555bbaaa6afdbef", "html_url": "https://github.com/rust-lang/rust/commit/51f335deca435bd4899b3cde0555bbaaa6afdbef"}], "stats": {"total": 47, "additions": 17, "deletions": 30}, "files": [{"sha": "8e53fbbcd1975ce6fd6aa8fe66182326d2d8d6ac", "filename": "src/librustdoc/html/markdown.rs", "status": "modified", "additions": 8, "deletions": 11, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/6d6d89b08ba3f2022af3a5b8b57e3349beb270d7/src%2Flibrustdoc%2Fhtml%2Fmarkdown.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6d6d89b08ba3f2022af3a5b8b57e3349beb270d7/src%2Flibrustdoc%2Fhtml%2Fmarkdown.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fmarkdown.rs?ref=6d6d89b08ba3f2022af3a5b8b57e3349beb270d7", "patch": "@@ -111,14 +111,9 @@ pub(crate) struct MarkdownWithToc<'a>(\n     pub(crate) Edition,\n     pub(crate) &'a Option<Playground>,\n );\n-/// A tuple struct like `Markdown` that renders the markdown escaping HTML tags.\n-pub(crate) struct MarkdownHtml<'a>(\n-    pub(crate) &'a str,\n-    pub(crate) &'a mut IdMap,\n-    pub(crate) ErrorCodes,\n-    pub(crate) Edition,\n-    pub(crate) &'a Option<Playground>,\n-);\n+/// A tuple struct like `Markdown` that renders the markdown escaping HTML tags\n+/// and includes no paragraph tags.\n+pub(crate) struct MarkdownItemInfo<'a>(pub(crate) &'a str, pub(crate) &'a mut IdMap);\n /// A tuple struct like `Markdown` that renders only the first paragraph.\n pub(crate) struct MarkdownSummaryLine<'a>(pub &'a str, pub &'a [RenderedLink]);\n \n@@ -1072,9 +1067,9 @@ impl MarkdownWithToc<'_> {\n     }\n }\n \n-impl MarkdownHtml<'_> {\n+impl MarkdownItemInfo<'_> {\n     pub(crate) fn into_string(self) -> String {\n-        let MarkdownHtml(md, ids, codes, edition, playground) = self;\n+        let MarkdownItemInfo(md, ids) = self;\n \n         // This is actually common enough to special-case\n         if md.is_empty() {\n@@ -1093,7 +1088,9 @@ impl MarkdownHtml<'_> {\n         let p = HeadingLinks::new(p, None, ids, HeadingOffset::H1);\n         let p = Footnotes::new(p);\n         let p = TableWrapper::new(p.map(|(ev, _)| ev));\n-        let p = CodeBlocks::new(p, codes, edition, playground);\n+        let p = p.filter(|event| {\n+            !matches!(event, Event::Start(Tag::Paragraph) | Event::End(Tag::Paragraph))\n+        });\n         html::push_html(&mut s, p);\n \n         s"}, {"sha": "e4f72a057892f5ee1098859fecc557aae49df72a", "filename": "src/librustdoc/html/markdown/tests.rs", "status": "modified", "additions": 5, "deletions": 6, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/6d6d89b08ba3f2022af3a5b8b57e3349beb270d7/src%2Flibrustdoc%2Fhtml%2Fmarkdown%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6d6d89b08ba3f2022af3a5b8b57e3349beb270d7/src%2Flibrustdoc%2Fhtml%2Fmarkdown%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fmarkdown%2Ftests.rs?ref=6d6d89b08ba3f2022af3a5b8b57e3349beb270d7", "patch": "@@ -1,5 +1,5 @@\n use super::{find_testable_code, plain_text_summary, short_markdown_summary};\n-use super::{ErrorCodes, HeadingOffset, IdMap, Ignore, LangString, Markdown, MarkdownHtml};\n+use super::{ErrorCodes, HeadingOffset, IdMap, Ignore, LangString, Markdown, MarkdownItemInfo};\n use rustc_span::edition::{Edition, DEFAULT_EDITION};\n \n #[test]\n@@ -279,14 +279,13 @@ fn test_plain_text_summary() {\n fn test_markdown_html_escape() {\n     fn t(input: &str, expect: &str) {\n         let mut idmap = IdMap::new();\n-        let output =\n-            MarkdownHtml(input, &mut idmap, ErrorCodes::Yes, DEFAULT_EDITION, &None).into_string();\n+        let output = MarkdownItemInfo(input, &mut idmap).into_string();\n         assert_eq!(output, expect, \"original: {}\", input);\n     }\n \n-    t(\"`Struct<'a, T>`\", \"<p><code>Struct&lt;'a, T&gt;</code></p>\\n\");\n-    t(\"Struct<'a, T>\", \"<p>Struct&lt;\u2019a, T&gt;</p>\\n\");\n-    t(\"Struct<br>\", \"<p>Struct&lt;br&gt;</p>\\n\");\n+    t(\"`Struct<'a, T>`\", \"<code>Struct&lt;'a, T&gt;</code>\");\n+    t(\"Struct<'a, T>\", \"Struct&lt;\u2019a, T&gt;\");\n+    t(\"Struct<br>\", \"Struct&lt;br&gt;\");\n }\n \n #[test]"}, {"sha": "1c4e666cd94afab4c733a65d7c2a3c0e4875215c", "filename": "src/librustdoc/html/render/mod.rs", "status": "modified", "additions": 4, "deletions": 9, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/6d6d89b08ba3f2022af3a5b8b57e3349beb270d7/src%2Flibrustdoc%2Fhtml%2Frender%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6d6d89b08ba3f2022af3a5b8b57e3349beb270d7/src%2Flibrustdoc%2Fhtml%2Frender%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Frender%2Fmod.rs?ref=6d6d89b08ba3f2022af3a5b8b57e3349beb270d7", "patch": "@@ -74,7 +74,9 @@ use crate::html::format::{\n     PrintWithSpace,\n };\n use crate::html::highlight;\n-use crate::html::markdown::{HeadingOffset, IdMap, Markdown, MarkdownHtml, MarkdownSummaryLine};\n+use crate::html::markdown::{\n+    HeadingOffset, IdMap, Markdown, MarkdownItemInfo, MarkdownSummaryLine,\n+};\n use crate::html::sources;\n use crate::html::static_files::SCRAPE_EXAMPLES_HELP_MD;\n use crate::scrape_examples::{CallData, CallLocation};\n@@ -584,7 +586,6 @@ fn short_item_info(\n     parent: Option<&clean::Item>,\n ) -> Vec<String> {\n     let mut extra_info = vec![];\n-    let error_codes = cx.shared.codes;\n \n     if let Some(depr @ Deprecation { note, since, is_since_rustc_version: _, suggestion: _ }) =\n         item.deprecation(cx.tcx())\n@@ -608,13 +609,7 @@ fn short_item_info(\n \n         if let Some(note) = note {\n             let note = note.as_str();\n-            let html = MarkdownHtml(\n-                note,\n-                &mut cx.id_map,\n-                error_codes,\n-                cx.shared.edition(),\n-                &cx.shared.playground,\n-            );\n+            let html = MarkdownItemInfo(note, &mut cx.id_map);\n             message.push_str(&format!(\": {}\", html.into_string()));\n         }\n         extra_info.push(format!("}, {"sha": "e17165440d109a919914a2238eff29772ffe4b39", "filename": "src/librustdoc/html/static/css/rustdoc.css", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/6d6d89b08ba3f2022af3a5b8b57e3349beb270d7/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fcss%2Frustdoc.css", "raw_url": "https://github.com/rust-lang/rust/raw/6d6d89b08ba3f2022af3a5b8b57e3349beb270d7/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fcss%2Frustdoc.css", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fcss%2Frustdoc.css?ref=6d6d89b08ba3f2022af3a5b8b57e3349beb270d7", "patch": "@@ -1068,10 +1068,6 @@ so that we can apply CSS-filters to change the arrow color in themes */\n \tfont-size: 0.875rem;\n \tfont-weight: normal;\n }\n-.stab p {\n-\tdisplay: inline;\n-\tmargin: 0;\n-}\n \n .stab .emoji {\n \tfont-size: 1.25rem;"}]}