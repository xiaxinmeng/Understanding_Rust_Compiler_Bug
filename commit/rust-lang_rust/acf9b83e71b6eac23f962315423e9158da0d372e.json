{"sha": "acf9b83e71b6eac23f962315423e9158da0d372e", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFjZjliODNlNzFiNmVhYzIzZjk2MjMxNTQyM2U5MTU4ZGEwZDM3MmU=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2011-10-13T21:53:34Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2011-10-13T21:55:47Z"}, "message": "Fix a use of visit in rustc::middle::fn_usage\n\nThis was working by just skipping an AST node instead of doing the advertised\ncheck. I can't find a test case for it, but this is more correct.", "tree": {"sha": "c094a707fde994731a79df3d284c67157823c9af", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c094a707fde994731a79df3d284c67157823c9af"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/acf9b83e71b6eac23f962315423e9158da0d372e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/acf9b83e71b6eac23f962315423e9158da0d372e", "html_url": "https://github.com/rust-lang/rust/commit/acf9b83e71b6eac23f962315423e9158da0d372e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/acf9b83e71b6eac23f962315423e9158da0d372e/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bc4c3df1bf98443411f96112b4ced136e1abcdf1", "url": "https://api.github.com/repos/rust-lang/rust/commits/bc4c3df1bf98443411f96112b4ced136e1abcdf1", "html_url": "https://github.com/rust-lang/rust/commit/bc4c3df1bf98443411f96112b4ced136e1abcdf1"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "70d5b57f3d98c1d6f2ff14501142e3e4b0d22bb2", "filename": "src/comp/middle/fn_usage.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/acf9b83e71b6eac23f962315423e9158da0d372e/src%2Fcomp%2Fmiddle%2Ffn_usage.rs", "raw_url": "https://github.com/rust-lang/rust/raw/acf9b83e71b6eac23f962315423e9158da0d372e/src%2Fcomp%2Fmiddle%2Ffn_usage.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Ffn_usage.rs?ref=acf9b83e71b6eac23f962315423e9158da0d372e", "patch": "@@ -51,7 +51,7 @@ fn fn_usage_expr(expr: @ast::expr,\n       ast::expr_call(f, args) {\n         let f_ctx = {unsafe_fn_legal: true,\n                      generic_bare_fn_legal: true with ctx};\n-        visit::visit_expr(f, f_ctx, v);\n+        v.visit_expr(f, f_ctx, v);\n \n         let args_ctx = {unsafe_fn_legal: false,\n                         generic_bare_fn_legal: false with ctx};"}]}