{"sha": "765f1533db10a7d31b9d61d1618bf0a199d41562", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc2NWYxNTMzZGIxMGE3ZDMxYjlkNjFkMTYxOGJmMGExOTlkNDE1NjI=", "commit": {"author": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2021-09-17T15:41:15Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-09-17T15:41:15Z"}, "message": "Rollup merge of #88666 - GuillaumeGomez:compiler-docs, r=Mark-Simulacrum\n\nImprove build command for compiler docs\n\nIt was rather complicated to document rustc crates. With this, you can directly run:\n\n```console\nx.py doc compiler\nx.py doc compiler/rustc_hir_pretty\n```\n\nThe second commit adds the handling of the `--open` flag.\n\nr? `@Mark-Simulacrum`", "tree": {"sha": "a4c2a6ea7ee6672be75182972f6270100a131133", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a4c2a6ea7ee6672be75182972f6270100a131133"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/765f1533db10a7d31b9d61d1618bf0a199d41562", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJhRLcbCRBK7hj4Ov3rIwAAlEUIAFiDi37YDVBeXlHIHmjIhInV\nbtJ3kitg9z4Bc5NS3NiBreNVcSGlbpV71GaaOPV3WrG6zypXx61aMVufNdhU0Thz\nkaN2MZYR6SUMoc/s+7g4iqY8DuCiGHQBG9WBOuHY72K0Z/aojxlCCPihBadkcDp2\nNzBqBtWJUGgf9Pq97cHYncxHh2L9cQhqSEbYGDMFKKPplTr7wCPpsrwKyWRJkt6W\nFN1lHQMlFFXNmjHrXG9UiD1RKrf0vV+CUuZuiQc+9ZA43vlAN+xcuUnD5mxiI+YO\nuuvKYZc/EYBUlFyf5p7dU+Wpj5H1LV/kteaSeW9ghn0F1X0KyOubN98PCeiB/DY=\n=ZIvL\n-----END PGP SIGNATURE-----\n", "payload": "tree a4c2a6ea7ee6672be75182972f6270100a131133\nparent 1b7896716e21b1b3518e9d51270a0c304abaae1c\nparent 57ee7a63ebc28e9ed645702fa152b8f35a0cd538\nauthor Guillaume Gomez <guillaume1.gomez@gmail.com> 1631893275 +0200\ncommitter GitHub <noreply@github.com> 1631893275 +0200\n\nRollup merge of #88666 - GuillaumeGomez:compiler-docs, r=Mark-Simulacrum\n\nImprove build command for compiler docs\n\nIt was rather complicated to document rustc crates. With this, you can directly run:\n\n```console\nx.py doc compiler\nx.py doc compiler/rustc_hir_pretty\n```\n\nThe second commit adds the handling of the `--open` flag.\n\nr? `@Mark-Simulacrum`\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/765f1533db10a7d31b9d61d1618bf0a199d41562", "html_url": "https://github.com/rust-lang/rust/commit/765f1533db10a7d31b9d61d1618bf0a199d41562", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/765f1533db10a7d31b9d61d1618bf0a199d41562/comments", "author": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1b7896716e21b1b3518e9d51270a0c304abaae1c", "url": "https://api.github.com/repos/rust-lang/rust/commits/1b7896716e21b1b3518e9d51270a0c304abaae1c", "html_url": "https://github.com/rust-lang/rust/commit/1b7896716e21b1b3518e9d51270a0c304abaae1c"}, {"sha": "57ee7a63ebc28e9ed645702fa152b8f35a0cd538", "url": "https://api.github.com/repos/rust-lang/rust/commits/57ee7a63ebc28e9ed645702fa152b8f35a0cd538", "html_url": "https://github.com/rust-lang/rust/commit/57ee7a63ebc28e9ed645702fa152b8f35a0cd538"}], "stats": {"total": 63, "additions": 53, "deletions": 10}, "files": [{"sha": "af3774b7c7586ef3f33d38747405153b0eb4dff0", "filename": "src/bootstrap/doc.rs", "status": "modified", "additions": 53, "deletions": 10, "changes": 63, "blob_url": "https://github.com/rust-lang/rust/blob/765f1533db10a7d31b9d61d1618bf0a199d41562/src%2Fbootstrap%2Fdoc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/765f1533db10a7d31b9d61d1618bf0a199d41562/src%2Fbootstrap%2Fdoc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fdoc.rs?ref=765f1533db10a7d31b9d61d1618bf0a199d41562", "patch": "@@ -537,7 +537,7 @@ impl Step for Rustc {\n \n     fn should_run(run: ShouldRun<'_>) -> ShouldRun<'_> {\n         let builder = run.builder;\n-        run.krate(\"rustc-main\").default_condition(builder.config.docs)\n+        run.krate(\"rustc-main\").path(\"compiler\").default_condition(builder.config.docs)\n     }\n \n     fn make_run(run: RunConfig<'_>) {\n@@ -553,9 +553,24 @@ impl Step for Rustc {\n     fn run(self, builder: &Builder<'_>) {\n         let stage = self.stage;\n         let target = self.target;\n+        let mut is_explicit_request = false;\n         builder.info(&format!(\"Documenting stage{} compiler ({})\", stage, target));\n \n-        if !builder.config.compiler_docs {\n+        let paths = builder\n+            .paths\n+            .iter()\n+            .map(components_simplified)\n+            .filter_map(|path| {\n+                if path.get(0) == Some(&\"compiler\") {\n+                    is_explicit_request = true;\n+                    path.get(1).map(|p| p.to_owned())\n+                } else {\n+                    None\n+                }\n+            })\n+            .collect::<Vec<_>>();\n+\n+        if !builder.config.compiler_docs && !is_explicit_request {\n             builder.info(\"\\tskipping - compiler/librustdoc docs disabled\");\n             return;\n         }\n@@ -604,26 +619,54 @@ impl Step for Rustc {\n         cargo.rustdocflag(\"--extern-html-root-url\");\n         cargo.rustdocflag(\"ena=https://docs.rs/ena/latest/\");\n \n-        // Find dependencies for top level crates.\n         let mut compiler_crates = HashSet::new();\n-        for root_crate in &[\"rustc_driver\", \"rustc_codegen_llvm\", \"rustc_codegen_ssa\"] {\n-            compiler_crates.extend(\n-                builder\n-                    .in_tree_crates(root_crate, Some(target))\n-                    .into_iter()\n-                    .map(|krate| krate.name),\n-            );\n+\n+        if paths.is_empty() {\n+            // Find dependencies for top level crates.\n+            for root_crate in &[\"rustc_driver\", \"rustc_codegen_llvm\", \"rustc_codegen_ssa\"] {\n+                compiler_crates.extend(\n+                    builder\n+                        .in_tree_crates(root_crate, Some(target))\n+                        .into_iter()\n+                        .map(|krate| krate.name),\n+                );\n+            }\n+        } else {\n+            for root_crate in paths {\n+                if !builder.src.join(\"compiler\").join(&root_crate).exists() {\n+                    builder.info(&format!(\n+                        \"\\tskipping - compiler/{} (unknown compiler crate)\",\n+                        root_crate\n+                    ));\n+                } else {\n+                    compiler_crates.extend(\n+                        builder\n+                            .in_tree_crates(root_crate, Some(target))\n+                            .into_iter()\n+                            .map(|krate| krate.name),\n+                    );\n+                }\n+            }\n         }\n \n+        let mut to_open = None;\n         for krate in &compiler_crates {\n             // Create all crate output directories first to make sure rustdoc uses\n             // relative links.\n             // FIXME: Cargo should probably do this itself.\n             t!(fs::create_dir_all(out_dir.join(krate)));\n             cargo.arg(\"-p\").arg(krate);\n+            if to_open.is_none() {\n+                to_open = Some(krate);\n+            }\n         }\n \n         builder.run(&mut cargo.into());\n+        // Let's open the first crate documentation page:\n+        if let Some(krate) = to_open {\n+            let index = out.join(krate).join(\"index.html\");\n+            open(builder, &index);\n+        }\n     }\n }\n "}]}