{"sha": "4e30e10f25ed39453ef69666a98e9650c7222c52", "node_id": "MDY6Q29tbWl0NzI0NzEyOjRlMzBlMTBmMjVlZDM5NDUzZWY2OTY2NmE5OGU5NjUwYzcyMjJjNTI=", "commit": {"author": {"name": "Camelid", "email": "camelidcamel@gmail.com", "date": "2020-10-28T23:47:05Z"}, "committer": {"name": "Camelid", "email": "camelidcamel@gmail.com", "date": "2020-10-28T23:49:30Z"}, "message": "Don't say you \"should\" use fully qualified syntax\n\nThat recommendation was removed last year; there isn't a particular\nstyle that is officially recommended anymore.", "tree": {"sha": "7c39cf1f63d783fa82ee5f0a29128478a860a06b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7c39cf1f63d783fa82ee5f0a29128478a860a06b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4e30e10f25ed39453ef69666a98e9650c7222c52", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4e30e10f25ed39453ef69666a98e9650c7222c52", "html_url": "https://github.com/rust-lang/rust/commit/4e30e10f25ed39453ef69666a98e9650c7222c52", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4e30e10f25ed39453ef69666a98e9650c7222c52/comments", "author": {"login": "camelid", "id": 37223377, "node_id": "MDQ6VXNlcjM3MjIzMzc3", "avatar_url": "https://avatars.githubusercontent.com/u/37223377?v=4", "gravatar_id": "", "url": "https://api.github.com/users/camelid", "html_url": "https://github.com/camelid", "followers_url": "https://api.github.com/users/camelid/followers", "following_url": "https://api.github.com/users/camelid/following{/other_user}", "gists_url": "https://api.github.com/users/camelid/gists{/gist_id}", "starred_url": "https://api.github.com/users/camelid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/camelid/subscriptions", "organizations_url": "https://api.github.com/users/camelid/orgs", "repos_url": "https://api.github.com/users/camelid/repos", "events_url": "https://api.github.com/users/camelid/events{/privacy}", "received_events_url": "https://api.github.com/users/camelid/received_events", "type": "User", "site_admin": false}, "committer": {"login": "camelid", "id": 37223377, "node_id": "MDQ6VXNlcjM3MjIzMzc3", "avatar_url": "https://avatars.githubusercontent.com/u/37223377?v=4", "gravatar_id": "", "url": "https://api.github.com/users/camelid", "html_url": "https://github.com/camelid", "followers_url": "https://api.github.com/users/camelid/followers", "following_url": "https://api.github.com/users/camelid/following{/other_user}", "gists_url": "https://api.github.com/users/camelid/gists{/gist_id}", "starred_url": "https://api.github.com/users/camelid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/camelid/subscriptions", "organizations_url": "https://api.github.com/users/camelid/orgs", "repos_url": "https://api.github.com/users/camelid/repos", "events_url": "https://api.github.com/users/camelid/events{/privacy}", "received_events_url": "https://api.github.com/users/camelid/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e0eed3c55836292907ec4ea5ce0a3b62e62bed38", "url": "https://api.github.com/repos/rust-lang/rust/commits/e0eed3c55836292907ec4ea5ce0a3b62e62bed38", "html_url": "https://github.com/rust-lang/rust/commit/e0eed3c55836292907ec4ea5ce0a3b62e62bed38"}], "stats": {"total": 26, "additions": 16, "deletions": 10}, "files": [{"sha": "6dcd0c6056c3039f9189c41685865ec6a97ea5a2", "filename": "library/alloc/src/rc.rs", "status": "modified", "additions": 8, "deletions": 5, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/4e30e10f25ed39453ef69666a98e9650c7222c52/library%2Falloc%2Fsrc%2Frc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4e30e10f25ed39453ef69666a98e9650c7222c52/library%2Falloc%2Fsrc%2Frc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Falloc%2Fsrc%2Frc.rs?ref=4e30e10f25ed39453ef69666a98e9650c7222c52", "patch": "@@ -44,15 +44,18 @@\n //! Rc::downgrade(&my_rc);\n //! ```\n //!\n-//! `Rc<T>`'s implementations of traits like `Clone` should also be called using\n-//! fully qualified syntax to avoid confusion as to whether the *reference* is being\n-//! cloned or the *backing data* (`T`) is being cloned:\n+//! `Rc<T>`'s implementations of traits like `Clone` may also be called using\n+//! fully qualified syntax. Some people prefer to use fully qualified syntax,\n+//! while others prefer using method-call syntax.\n //!\n //! ```\n //! use std::rc::Rc;\n //!\n-//! let my_rc = Rc::new(());\n-//! let your_rc = Rc::clone(&my_rc);\n+//! let rc = Rc::new(());\n+//! // Method-call syntax\n+//! let rc2 = rc.clone();\n+//! // Fully qualified syntax\n+//! let rc3 = Rc::clone(&rc);\n //! ```\n //!\n //! [`Weak<T>`][`Weak`] does not auto-dereference to `T`, because the inner value may have"}, {"sha": "5ab930a5208843bfdb68035ea1b9bbb24ea4306a", "filename": "library/alloc/src/sync.rs", "status": "modified", "additions": 8, "deletions": 5, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/4e30e10f25ed39453ef69666a98e9650c7222c52/library%2Falloc%2Fsrc%2Fsync.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4e30e10f25ed39453ef69666a98e9650c7222c52/library%2Falloc%2Fsrc%2Fsync.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Falloc%2Fsrc%2Fsync.rs?ref=4e30e10f25ed39453ef69666a98e9650c7222c52", "patch": "@@ -138,15 +138,18 @@ macro_rules! acquire {\n /// Arc::downgrade(&my_arc);\n /// ```\n ///\n-/// `Arc<T>`'s implementations of traits like `Clone` should also be called using\n-/// fully qualified syntax to avoid confusion as to whether the *reference* is being\n-/// cloned or the *backing data* (`T`) is being cloned:\n+/// `Arc<T>`'s implementations of traits like `Clone` may also be called using\n+/// fully qualified syntax. Some people prefer to use fully qualified syntax,\n+/// while others prefer using method-call syntax.\n ///\n /// ```\n /// use std::sync::Arc;\n ///\n-/// let my_arc = Arc::new(());\n-/// let your_arc = Arc::clone(&my_arc);\n+/// let arc = Arc::new(());\n+/// // Method-call syntax\n+/// let arc2 = arc.clone();\n+/// // Fully qualified syntax\n+/// let arc3 = Arc::clone(&arc);\n /// ```\n ///\n /// [`Weak<T>`][Weak] does not auto-dereference to `T`, because the inner value may have"}]}