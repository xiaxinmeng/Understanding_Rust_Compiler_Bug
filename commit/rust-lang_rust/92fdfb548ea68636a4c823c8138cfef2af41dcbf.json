{"sha": "92fdfb548ea68636a4c823c8138cfef2af41dcbf", "node_id": "C_kwDOAAsO6NoAKDkyZmRmYjU0OGVhNjg2MzZhNGM4MjNjODEzOGNmZWYyYWY0MWRjYmY", "commit": {"author": {"name": "Ryo Yoshida", "email": "low.ryoshida@gmail.com", "date": "2023-02-13T09:43:59Z"}, "committer": {"name": "Ryo Yoshida", "email": "low.ryoshida@gmail.com", "date": "2023-02-13T09:43:59Z"}, "message": "Make `is_raw_identifier()` public util function", "tree": {"sha": "0400c096b8cb384b2b7e10ea3f7f4e0008b92da2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0400c096b8cb384b2b7e10ea3f7f4e0008b92da2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/92fdfb548ea68636a4c823c8138cfef2af41dcbf", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEkSbsQIURluxz4rzf4laYqTBYYXEFAmPqBmcACgkQ4laYqTBY\nYXHzJg/9EYYHohCk+VQtlaxRmMo3Cp9qaGqA3p/q8MEqFJQgEoeQyDy8Qr0bnWzJ\ny25h/WyYzMn9jBZvySLD0S+nBKHtDRkLGwqB6YzMEoiGuu1189g4d4Jj8X0N010H\nY2erimtuSyv9jcUmIWcks826Y0B15hLz03iNiV4ENgr4e9BJOQJbkjXPqUyJeaGu\njK1KjwHafafpgLdUSD0QAQTB0mOk0W87cFQ6MMXStJEAwpvLENWHqJNNDL9bzrrx\n7VVxvc3/+9VxDLnwiw3kYO7Wf2+E0Ln+YPhMUbCvbQ/AuNZpzYI2T8FdVsJSTslc\nPRMZU3YDRnInX2nBIRYmz88fc9n7Nxd0NneTdcvR1i9/cDXVOyXUfBJo9bcRe0EX\n/eXyeSpSholdAoFRoJdwBHTDgSRWv7wchqne4xfhx77pGnsKqZti/xYQMbAt7Bx8\nfNF7yce4iFYux1+BLLxGJiBQK0hG2DkwSJScMw0ZTDulbwHsVLNif6XViJB/aQoz\n5aZICNHMVhdhZnH7oDKe0lfgHiwfOSYMIcJsj7Jq3ubK4w1NfQJQOqbdt+u5H0vx\nvM0KMeSMpi1Gt2/5eoaBQ8bLLqkkcC2aySOUvc8xcM+B0JjsjmMZfCjqSQSpmtDA\nXs2qT+chaz880UPDR08Z0AAf+5UC7JmHBlMwJ/jcGNfbJ3TDIB4=\n=q/1r\n-----END PGP SIGNATURE-----", "payload": "tree 0400c096b8cb384b2b7e10ea3f7f4e0008b92da2\nparent 646f97385709fab31db2f10661125c0bbbda6b7c\nauthor Ryo Yoshida <low.ryoshida@gmail.com> 1676281439 +0900\ncommitter Ryo Yoshida <low.ryoshida@gmail.com> 1676281439 +0900\n\nMake `is_raw_identifier()` public util function\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/92fdfb548ea68636a4c823c8138cfef2af41dcbf", "html_url": "https://github.com/rust-lang/rust/commit/92fdfb548ea68636a4c823c8138cfef2af41dcbf", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/92fdfb548ea68636a4c823c8138cfef2af41dcbf/comments", "author": {"login": "lowr", "id": 24381114, "node_id": "MDQ6VXNlcjI0MzgxMTE0", "avatar_url": "https://avatars.githubusercontent.com/u/24381114?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lowr", "html_url": "https://github.com/lowr", "followers_url": "https://api.github.com/users/lowr/followers", "following_url": "https://api.github.com/users/lowr/following{/other_user}", "gists_url": "https://api.github.com/users/lowr/gists{/gist_id}", "starred_url": "https://api.github.com/users/lowr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lowr/subscriptions", "organizations_url": "https://api.github.com/users/lowr/orgs", "repos_url": "https://api.github.com/users/lowr/repos", "events_url": "https://api.github.com/users/lowr/events{/privacy}", "received_events_url": "https://api.github.com/users/lowr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "lowr", "id": 24381114, "node_id": "MDQ6VXNlcjI0MzgxMTE0", "avatar_url": "https://avatars.githubusercontent.com/u/24381114?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lowr", "html_url": "https://github.com/lowr", "followers_url": "https://api.github.com/users/lowr/followers", "following_url": "https://api.github.com/users/lowr/following{/other_user}", "gists_url": "https://api.github.com/users/lowr/gists{/gist_id}", "starred_url": "https://api.github.com/users/lowr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lowr/subscriptions", "organizations_url": "https://api.github.com/users/lowr/orgs", "repos_url": "https://api.github.com/users/lowr/repos", "events_url": "https://api.github.com/users/lowr/events{/privacy}", "received_events_url": "https://api.github.com/users/lowr/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "646f97385709fab31db2f10661125c0bbbda6b7c", "url": "https://api.github.com/repos/rust-lang/rust/commits/646f97385709fab31db2f10661125c0bbbda6b7c", "html_url": "https://github.com/rust-lang/rust/commit/646f97385709fab31db2f10661125c0bbbda6b7c"}], "stats": {"total": 19, "additions": 9, "deletions": 10}, "files": [{"sha": "c3462beac73c5bd9a6f17bd7105a6a635440f652", "filename": "crates/hir-expand/src/name.rs", "status": "modified", "additions": 1, "deletions": 6, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/92fdfb548ea68636a4c823c8138cfef2af41dcbf/crates%2Fhir-expand%2Fsrc%2Fname.rs", "raw_url": "https://github.com/rust-lang/rust/raw/92fdfb548ea68636a4c823c8138cfef2af41dcbf/crates%2Fhir-expand%2Fsrc%2Fname.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir-expand%2Fsrc%2Fname.rs?ref=92fdfb548ea68636a4c823c8138cfef2af41dcbf", "patch": "@@ -2,7 +2,7 @@\n \n use std::fmt;\n \n-use syntax::{ast, SmolStr, SyntaxKind};\n+use syntax::{ast, utils::is_raw_identifier, SmolStr};\n \n /// `Name` is a wrapper around string, which is used in hir for both references\n /// and declarations. In theory, names should also carry hygiene info, but we are\n@@ -33,11 +33,6 @@ impl fmt::Display for Name {\n     }\n }\n \n-fn is_raw_identifier(name: &str) -> bool {\n-    let is_keyword = SyntaxKind::from_keyword(name).is_some();\n-    is_keyword && !matches!(name, \"self\" | \"crate\" | \"super\" | \"Self\")\n-}\n-\n impl<'a> fmt::Display for UnescapedName<'a> {\n     fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {\n         match &self.0 .0 {"}, {"sha": "5aebe4cd9f53aa98ef194d41ed8853fa38d52b00", "filename": "crates/syntax/src/ast/make.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/92fdfb548ea68636a4c823c8138cfef2af41dcbf/crates%2Fsyntax%2Fsrc%2Fast%2Fmake.rs", "raw_url": "https://github.com/rust-lang/rust/raw/92fdfb548ea68636a4c823c8138cfef2af41dcbf/crates%2Fsyntax%2Fsrc%2Fast%2Fmake.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Fsrc%2Fast%2Fmake.rs?ref=92fdfb548ea68636a4c823c8138cfef2af41dcbf", "patch": "@@ -12,7 +12,7 @@\n use itertools::Itertools;\n use stdx::{format_to, never};\n \n-use crate::{ast, AstNode, SourceFile, SyntaxKind, SyntaxToken};\n+use crate::{ast, utils::is_raw_identifier, AstNode, SourceFile, SyntaxKind, SyntaxToken};\n \n /// While the parent module defines basic atomic \"constructors\", the `ext`\n /// module defines shortcuts for common things.\n@@ -111,8 +111,7 @@ pub fn name_ref(name_ref: &str) -> ast::NameRef {\n     ast_from_text(&format!(\"fn f() {{ {raw_escape}{name_ref}; }}\"))\n }\n fn raw_ident_esc(ident: &str) -> &'static str {\n-    let is_keyword = parser::SyntaxKind::from_keyword(ident).is_some();\n-    if is_keyword && !matches!(ident, \"self\" | \"crate\" | \"super\" | \"Self\") {\n+    if is_raw_identifier(ident) {\n         \"r#\"\n     } else {\n         \"\""}, {"sha": "25f34ea9d397d747f91cf06e6aaf31613c9d2f80", "filename": "crates/syntax/src/utils.rs", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/92fdfb548ea68636a4c823c8138cfef2af41dcbf/crates%2Fsyntax%2Fsrc%2Futils.rs", "raw_url": "https://github.com/rust-lang/rust/raw/92fdfb548ea68636a4c823c8138cfef2af41dcbf/crates%2Fsyntax%2Fsrc%2Futils.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Fsrc%2Futils.rs?ref=92fdfb548ea68636a4c823c8138cfef2af41dcbf", "patch": "@@ -2,7 +2,7 @@\n \n use itertools::Itertools;\n \n-use crate::{ast, match_ast, AstNode};\n+use crate::{ast, match_ast, AstNode, SyntaxKind};\n \n pub fn path_to_string_stripping_turbo_fish(path: &ast::Path) -> String {\n     path.syntax()\n@@ -23,6 +23,11 @@ pub fn path_to_string_stripping_turbo_fish(path: &ast::Path) -> String {\n         .join(\"::\")\n }\n \n+pub fn is_raw_identifier(name: &str) -> bool {\n+    let is_keyword = SyntaxKind::from_keyword(name).is_some();\n+    is_keyword && !matches!(name, \"self\" | \"crate\" | \"super\" | \"Self\")\n+}\n+\n #[cfg(test)]\n mod tests {\n     use super::path_to_string_stripping_turbo_fish;"}]}