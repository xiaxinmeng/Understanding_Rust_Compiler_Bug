{"sha": "de1376f923055bee1c3dfc24de23fcab3e2e9f0b", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRlMTM3NmY5MjMwNTViZWUxYzNkZmMyNGRlMjNmY2FiM2UyZTlmMGI=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2017-08-03T18:36:58Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2017-08-03T18:38:00Z"}, "message": "Add a build script to inform the binary about its profile, and use that in the test suite", "tree": {"sha": "dda86869e70a5c3a6119e77b0324875db740e203", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/dda86869e70a5c3a6119e77b0324875db740e203"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/de1376f923055bee1c3dfc24de23fcab3e2e9f0b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/de1376f923055bee1c3dfc24de23fcab3e2e9f0b", "html_url": "https://github.com/rust-lang/rust/commit/de1376f923055bee1c3dfc24de23fcab3e2e9f0b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/de1376f923055bee1c3dfc24de23fcab3e2e9f0b/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f7bc6ab162cf5dfda7f41fa09c413e9e1908cd2b", "url": "https://api.github.com/repos/rust-lang/rust/commits/f7bc6ab162cf5dfda7f41fa09c413e9e1908cd2b", "html_url": "https://github.com/rust-lang/rust/commit/f7bc6ab162cf5dfda7f41fa09c413e9e1908cd2b"}], "stats": {"total": 18, "additions": 12, "deletions": 6}, "files": [{"sha": "d674cc10d3ec280b615e4893760c23ac1b8d9b11", "filename": "Cargo.toml", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/de1376f923055bee1c3dfc24de23fcab3e2e9f0b/Cargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/de1376f923055bee1c3dfc24de23fcab3e2e9f0b/Cargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Cargo.toml?ref=de1376f923055bee1c3dfc24de23fcab3e2e9f0b", "patch": "@@ -5,6 +5,7 @@ license = \"MIT/Apache-2.0\"\n name = \"miri\"\n repository = \"https://github.com/solson/miri\"\n version = \"0.1.0\"\n+build = \"build.rs\"\n \n [[bin]]\n doc = false"}, {"sha": "86ccf3cda1ab5879b9747d2446b3fef2b5f82fc9", "filename": "build.rs", "status": "added", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/de1376f923055bee1c3dfc24de23fcab3e2e9f0b/build.rs", "raw_url": "https://github.com/rust-lang/rust/raw/de1376f923055bee1c3dfc24de23fcab3e2e9f0b/build.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/build.rs?ref=de1376f923055bee1c3dfc24de23fcab3e2e9f0b", "patch": "@@ -0,0 +1,6 @@\n+use std::env;\n+\n+fn main() {\n+    // Forward the profile to the main compilation\n+    println!(\"cargo:rustc-env=PROFILE={}\", env::var(\"PROFILE\").unwrap());\n+}"}, {"sha": "c7e6149723d6d7c927957cf73fe5f058789b79cc", "filename": "tests/compiletest.rs", "status": "modified", "additions": 5, "deletions": 6, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/de1376f923055bee1c3dfc24de23fcab3e2e9f0b/tests%2Fcompiletest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/de1376f923055bee1c3dfc24de23fcab3e2e9f0b/tests%2Fcompiletest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompiletest.rs?ref=de1376f923055bee1c3dfc24de23fcab3e2e9f0b", "patch": "@@ -13,16 +13,15 @@ macro_rules! eprintln {\n     }\n }\n \n-#[cfg(debug_assertions)]\n-const MIRI_PATH: &str = \"target/debug/miri\";\n-#[cfg(not(debug_assertions))]\n-const MIRI_PATH: &str = \"target/release/miri\";\n+fn miri_path() -> String {\n+    format!(\"target/{}/miri\", env!(\"PROFILE\"))\n+}\n \n fn compile_fail(sysroot: &Path, path: &str, target: &str, host: &str, fullmir: bool) {\n     eprintln!(\"## Running compile-fail tests in {} against miri for target {}\", path, target);\n     let mut config = compiletest::default_config();\n     config.mode = \"compile-fail\".parse().expect(\"Invalid mode\");\n-    config.rustc_path = MIRI_PATH.into();\n+    config.rustc_path = miri_path().into();\n     if fullmir {\n         if host != target {\n             // skip fullmir on nonhost\n@@ -61,7 +60,7 @@ fn miri_pass(path: &str, target: &str, host: &str, fullmir: bool, opt: bool) {\n     config.src_base = PathBuf::from(path);\n     config.target = target.to_owned();\n     config.host = host.to_owned();\n-    config.rustc_path = MIRI_PATH.into();\n+    config.rustc_path = miri_path().into();\n     let mut flags = Vec::new();\n     if fullmir {\n         if host != target {"}]}