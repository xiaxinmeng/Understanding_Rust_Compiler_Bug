{"sha": "5a5402d4d4ab033f0035622df880c82ea064d2c5", "node_id": "MDY6Q29tbWl0NzI0NzEyOjVhNTQwMmQ0ZDRhYjAzM2YwMDM1NjIyZGY4ODBjODJlYTA2NGQyYzU=", "commit": {"author": {"name": "bors[bot]", "email": "bors[bot]@users.noreply.github.com", "date": "2018-12-22T13:34:04Z"}, "committer": {"name": "bors[bot]", "email": "bors[bot]@users.noreply.github.com", "date": "2018-12-22T13:34:04Z"}, "message": "Merge #322\n\n322: Fix analyzer extension fail when there are enabled any VIM extension r=matklad a=max-frai\n\n`type` command is allowed only once to be registered and it was built specially for vim mode.\r\nSo if user has vim extension enabled, rust-analyzer initialization failes on trying to register own `type` handler.\r\n\r\nUnfortunatelly, there are no nice ways to check if command is already registered so the way is to wrap everything with try/catch and notify user about conflict.\n\nCo-authored-by: frai <me@maxfrai.com>", "tree": {"sha": "a0224a5e049e27f61c20f8d7fd0b723e832192b6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a0224a5e049e27f61c20f8d7fd0b723e832192b6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5a5402d4d4ab033f0035622df880c82ea064d2c5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5a5402d4d4ab033f0035622df880c82ea064d2c5", "html_url": "https://github.com/rust-lang/rust/commit/5a5402d4d4ab033f0035622df880c82ea064d2c5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5a5402d4d4ab033f0035622df880c82ea064d2c5/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "parents": [{"sha": "5c7e8f47a8318e744b8e5d5bcb127ca9753ca04b", "url": "https://api.github.com/repos/rust-lang/rust/commits/5c7e8f47a8318e744b8e5d5bcb127ca9753ca04b", "html_url": "https://github.com/rust-lang/rust/commit/5c7e8f47a8318e744b8e5d5bcb127ca9753ca04b"}, {"sha": "0f5d9a03221ec9a4597f3e0bc29f210607713cb4", "url": "https://api.github.com/repos/rust-lang/rust/commits/0f5d9a03221ec9a4597f3e0bc29f210607713cb4", "html_url": "https://github.com/rust-lang/rust/commit/0f5d9a03221ec9a4597f3e0bc29f210607713cb4"}], "stats": {"total": 30, "additions": 17, "deletions": 13}, "files": [{"sha": "4acd54d90701629fe431577f529e31f6610b9a51", "filename": "editors/code/src/extension.ts", "status": "modified", "additions": 17, "deletions": 13, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/5a5402d4d4ab033f0035622df880c82ea064d2c5/editors%2Fcode%2Fsrc%2Fextension.ts", "raw_url": "https://github.com/rust-lang/rust/raw/5a5402d4d4ab033f0035622df880c82ea064d2c5/editors%2Fcode%2Fsrc%2Fextension.ts", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fsrc%2Fextension.ts?ref=5a5402d4d4ab033f0035622df880c82ea064d2c5", "patch": "@@ -23,19 +23,23 @@ export function activate(context: vscode.ExtensionContext) {\n         const original = (...args: any[]) =>\n             vscode.commands.executeCommand(defaultCmd, ...args);\n \n-        registerCommand(name, async (...args: any[]) => {\n-            const editor = vscode.window.activeTextEditor;\n-            if (\n-                !editor ||\n-                !editor.document ||\n-                editor.document.languageId !== 'rust'\n-            ) {\n-                return await original(...args);\n-            }\n-            if (!(await f(...args))) {\n-                return await original(...args);\n-            }\n-        });\n+        try {\n+            registerCommand(name, async (...args: any[]) => {\n+                const editor = vscode.window.activeTextEditor;\n+                if (\n+                    !editor ||\n+                    !editor.document ||\n+                    editor.document.languageId !== 'rust'\n+                ) {\n+                    return await original(...args);\n+                }\n+                if (!(await f(...args))) {\n+                    return await original(...args);\n+                }\n+            });\n+        } catch(_) {\n+            vscode.window.showWarningMessage('Enhanced typing feature is disabled because of incompatibility with VIM extension');\n+        }\n     }\n \n     // Commands are requests from vscode to the language server"}]}