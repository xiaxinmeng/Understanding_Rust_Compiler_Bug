{"sha": "98a516274a7f512b051c5725fdfee641281ebe0d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjk4YTUxNjI3NGE3ZjUxMmIwNTFjNTcyNWZkZmVlNjQxMjgxZWJlMGQ=", "commit": {"author": {"name": "Eduard Burtescu", "email": "edy.burt@gmail.com", "date": "2016-08-02T02:18:23Z"}, "committer": {"name": "Eduard Burtescu", "email": "edy.burt@gmail.com", "date": "2016-08-02T06:01:48Z"}, "message": "rustc: parse -Z orbit=off.", "tree": {"sha": "054cb2de8b59e689a874d262afc7b540adf67ce2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/054cb2de8b59e689a874d262afc7b540adf67ce2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/98a516274a7f512b051c5725fdfee641281ebe0d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/98a516274a7f512b051c5725fdfee641281ebe0d", "html_url": "https://github.com/rust-lang/rust/commit/98a516274a7f512b051c5725fdfee641281ebe0d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/98a516274a7f512b051c5725fdfee641281ebe0d/comments", "author": {"login": "eddyb", "id": 77424, "node_id": "MDQ6VXNlcjc3NDI0", "avatar_url": "https://avatars.githubusercontent.com/u/77424?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eddyb", "html_url": "https://github.com/eddyb", "followers_url": "https://api.github.com/users/eddyb/followers", "following_url": "https://api.github.com/users/eddyb/following{/other_user}", "gists_url": "https://api.github.com/users/eddyb/gists{/gist_id}", "starred_url": "https://api.github.com/users/eddyb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eddyb/subscriptions", "organizations_url": "https://api.github.com/users/eddyb/orgs", "repos_url": "https://api.github.com/users/eddyb/repos", "events_url": "https://api.github.com/users/eddyb/events{/privacy}", "received_events_url": "https://api.github.com/users/eddyb/received_events", "type": "User", "site_admin": false}, "committer": {"login": "eddyb", "id": 77424, "node_id": "MDQ6VXNlcjc3NDI0", "avatar_url": "https://avatars.githubusercontent.com/u/77424?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eddyb", "html_url": "https://github.com/eddyb", "followers_url": "https://api.github.com/users/eddyb/followers", "following_url": "https://api.github.com/users/eddyb/following{/other_user}", "gists_url": "https://api.github.com/users/eddyb/gists{/gist_id}", "starred_url": "https://api.github.com/users/eddyb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eddyb/subscriptions", "organizations_url": "https://api.github.com/users/eddyb/orgs", "repos_url": "https://api.github.com/users/eddyb/repos", "events_url": "https://api.github.com/users/eddyb/events{/privacy}", "received_events_url": "https://api.github.com/users/eddyb/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b197a375c000a8d66dbeb1b511bd39fe8186f50b", "url": "https://api.github.com/repos/rust-lang/rust/commits/b197a375c000a8d66dbeb1b511bd39fe8186f50b", "html_url": "https://github.com/rust-lang/rust/commit/b197a375c000a8d66dbeb1b511bd39fe8186f50b"}], "stats": {"total": 23, "additions": 22, "deletions": 1}, "files": [{"sha": "1d839be9f5378964c5c4be185790e8631e845bc2", "filename": "src/librustc/session/config.rs", "status": "modified", "additions": 22, "deletions": 1, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/98a516274a7f512b051c5725fdfee641281ebe0d/src%2Flibrustc%2Fsession%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/98a516274a7f512b051c5725fdfee641281ebe0d/src%2Flibrustc%2Fsession%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fsession%2Fconfig.rs?ref=98a516274a7f512b051c5725fdfee641281ebe0d", "patch": "@@ -463,6 +463,8 @@ macro_rules! options {\n         pub const parse_bool: Option<&'static str> = None;\n         pub const parse_opt_bool: Option<&'static str> =\n             Some(\"one of: `y`, `yes`, `on`, `n`, `no`, or `off`\");\n+        pub const parse_all_bool: Option<&'static str> =\n+            Some(\"one of: `y`, `yes`, `on`, `n`, `no`, or `off`\");\n         pub const parse_string: Option<&'static str> = Some(\"a string\");\n         pub const parse_opt_string: Option<&'static str> = Some(\"a string\");\n         pub const parse_list: Option<&'static str> = Some(\"a space-separated list of strings\");\n@@ -512,6 +514,25 @@ macro_rules! options {\n             }\n         }\n \n+        fn parse_all_bool(slot: &mut bool, v: Option<&str>) -> bool {\n+            match v {\n+                Some(s) => {\n+                    match s {\n+                        \"n\" | \"no\" | \"off\" => {\n+                            *slot = false;\n+                        }\n+                        \"y\" | \"yes\" | \"on\" => {\n+                            *slot = true;\n+                        }\n+                        _ => { return false; }\n+                    }\n+\n+                    true\n+                },\n+                None => { *slot = true; true }\n+            }\n+        }\n+\n         fn parse_opt_string(slot: &mut Option<String>, v: Option<&str>) -> bool {\n             match v {\n                 Some(s) => { *slot = Some(s.to_string()); true },\n@@ -756,7 +777,7 @@ options! {DebuggingOptions, DebuggingSetter, basic_debugging_options,\n           \"dump MIR state at various points in translation\"),\n     dump_mir_dir: Option<String> = (None, parse_opt_string,\n           \"the directory the MIR is dumped into\"),\n-    orbit: bool = (true, parse_bool,\n+    orbit: bool = (true, parse_all_bool,\n           \"get MIR where it belongs - everywhere; most importantly, in orbit\"),\n }\n "}]}