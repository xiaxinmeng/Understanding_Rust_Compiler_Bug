{"sha": "6c6bd014210aa4a5cd4a2bb5ab4cc7174e82d74b", "node_id": "C_kwDOAAsO6NoAKDZjNmJkMDE0MjEwYWE0YTVjZDRhMmJiNWFiNGNjNzE3NGU4MmQ3NGI", "commit": {"author": {"name": "Michael Goulet", "email": "michael@errs.io", "date": "2023-03-09T22:08:48Z"}, "committer": {"name": "Michael Goulet", "email": "michael@errs.io", "date": "2023-03-23T19:09:34Z"}, "message": "Note type mismatch on ConstArgHasType", "tree": {"sha": "f936c5c8d0f168cccdaa8713ef81ad4a3acc40d6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f936c5c8d0f168cccdaa8713ef81ad4a3acc40d6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6c6bd014210aa4a5cd4a2bb5ab4cc7174e82d74b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6c6bd014210aa4a5cd4a2bb5ab4cc7174e82d74b", "html_url": "https://github.com/rust-lang/rust/commit/6c6bd014210aa4a5cd4a2bb5ab4cc7174e82d74b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6c6bd014210aa4a5cd4a2bb5ab4cc7174e82d74b/comments", "author": {"login": "compiler-errors", "id": 3674314, "node_id": "MDQ6VXNlcjM2NzQzMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3674314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/compiler-errors", "html_url": "https://github.com/compiler-errors", "followers_url": "https://api.github.com/users/compiler-errors/followers", "following_url": "https://api.github.com/users/compiler-errors/following{/other_user}", "gists_url": "https://api.github.com/users/compiler-errors/gists{/gist_id}", "starred_url": "https://api.github.com/users/compiler-errors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/compiler-errors/subscriptions", "organizations_url": "https://api.github.com/users/compiler-errors/orgs", "repos_url": "https://api.github.com/users/compiler-errors/repos", "events_url": "https://api.github.com/users/compiler-errors/events{/privacy}", "received_events_url": "https://api.github.com/users/compiler-errors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "compiler-errors", "id": 3674314, "node_id": "MDQ6VXNlcjM2NzQzMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3674314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/compiler-errors", "html_url": "https://github.com/compiler-errors", "followers_url": "https://api.github.com/users/compiler-errors/followers", "following_url": "https://api.github.com/users/compiler-errors/following{/other_user}", "gists_url": "https://api.github.com/users/compiler-errors/gists{/gist_id}", "starred_url": "https://api.github.com/users/compiler-errors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/compiler-errors/subscriptions", "organizations_url": "https://api.github.com/users/compiler-errors/orgs", "repos_url": "https://api.github.com/users/compiler-errors/repos", "events_url": "https://api.github.com/users/compiler-errors/events{/privacy}", "received_events_url": "https://api.github.com/users/compiler-errors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e55f73ae47dd3b508edaf8403ca26ca9dbb1097e", "url": "https://api.github.com/repos/rust-lang/rust/commits/e55f73ae47dd3b508edaf8403ca26ca9dbb1097e", "html_url": "https://github.com/rust-lang/rust/commit/e55f73ae47dd3b508edaf8403ca26ca9dbb1097e"}], "stats": {"total": 20, "additions": 15, "deletions": 5}, "files": [{"sha": "296fd1ed5248f56a114db55a165d0b2a648d39d0", "filename": "compiler/rustc_trait_selection/src/traits/error_reporting/mod.rs", "status": "modified", "additions": 12, "deletions": 2, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/6c6bd014210aa4a5cd4a2bb5ab4cc7174e82d74b/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Ferror_reporting%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6c6bd014210aa4a5cd4a2bb5ab4cc7174e82d74b/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Ferror_reporting%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Ferror_reporting%2Fmod.rs?ref=6c6bd014210aa4a5cd4a2bb5ab4cc7174e82d74b", "patch": "@@ -1282,10 +1282,20 @@ impl<'tcx> TypeErrCtxtExt<'tcx> for TypeErrCtxt<'_, 'tcx> {\n                     ),\n \n                     ty::PredicateKind::Clause(ty::Clause::ConstArgHasType(ct, ty)) => {\n-                        self.tcx.sess.struct_span_err(\n+                        let mut diag = self.tcx.sess.struct_span_err(\n                             span,\n                             &format!(\"the constant `{}` is not of type `{}`\", ct, ty),\n-                        )\n+                        );\n+                        self.note_type_err(\n+                            &mut diag,\n+                            &obligation.cause,\n+                            None,\n+                            None,\n+                            TypeError::Sorts(ty::error::ExpectedFound::new(true, ty, ct.ty())),\n+                            false,\n+                            false,\n+                        );\n+                        diag\n                     }\n                 }\n             }"}, {"sha": "394dd44d40d3308536ae1da482aa767dad78fce7", "filename": "tests/ui/const-generics/type_mismatch.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6c6bd014210aa4a5cd4a2bb5ab4cc7174e82d74b/tests%2Fui%2Fconst-generics%2Ftype_mismatch.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6c6bd014210aa4a5cd4a2bb5ab4cc7174e82d74b/tests%2Fui%2Fconst-generics%2Ftype_mismatch.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fconst-generics%2Ftype_mismatch.stderr?ref=6c6bd014210aa4a5cd4a2bb5ab4cc7174e82d74b", "patch": "@@ -2,7 +2,7 @@ error: the constant `N` is not of type `u8`\n   --> $DIR/type_mismatch.rs:2:11\n    |\n LL |     bar::<N>()\n-   |           ^\n+   |           ^ expected `u8`, found `usize`\n    |\n note: required by a bound in `bar`\n   --> $DIR/type_mismatch.rs:6:8"}, {"sha": "83f311efd39d7017ba191b1474e5d121480f06b2", "filename": "tests/ui/specialization/min_specialization/bad-const-wf-doesnt-specialize.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6c6bd014210aa4a5cd4a2bb5ab4cc7174e82d74b/tests%2Fui%2Fspecialization%2Fmin_specialization%2Fbad-const-wf-doesnt-specialize.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6c6bd014210aa4a5cd4a2bb5ab4cc7174e82d74b/tests%2Fui%2Fspecialization%2Fmin_specialization%2Fbad-const-wf-doesnt-specialize.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fspecialization%2Fmin_specialization%2Fbad-const-wf-doesnt-specialize.stderr?ref=6c6bd014210aa4a5cd4a2bb5ab4cc7174e82d74b", "patch": "@@ -2,7 +2,7 @@ error: the constant `N` is not of type `usize`\n   --> $DIR/bad-const-wf-doesnt-specialize.rs:8:29\n    |\n LL | impl<const N: i32> Copy for S<N> {}\n-   |                             ^^^^\n+   |                             ^^^^ expected `usize`, found `i32`\n    |\n note: required by a bound in `S`\n   --> $DIR/bad-const-wf-doesnt-specialize.rs:6:10"}, {"sha": "bf947d0ea4a6cfd44fc3f0ccec08c136181c22c5", "filename": "tests/ui/transmutability/issue-101739-1.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6c6bd014210aa4a5cd4a2bb5ab4cc7174e82d74b/tests%2Fui%2Ftransmutability%2Fissue-101739-1.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6c6bd014210aa4a5cd4a2bb5ab4cc7174e82d74b/tests%2Fui%2Ftransmutability%2Fissue-101739-1.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ftransmutability%2Fissue-101739-1.stderr?ref=6c6bd014210aa4a5cd4a2bb5ab4cc7174e82d74b", "patch": "@@ -8,7 +8,7 @@ error: the constant `ASSUME_ALIGNMENT` is not of type `Assume`\n   --> $DIR/issue-101739-1.rs:8:14\n    |\n LL |         Dst: BikeshedIntrinsicFrom<Src, Context, ASSUME_ALIGNMENT>,\n-   |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `Assume`, found `bool`\n    |\n note: required by a bound in `BikeshedIntrinsicFrom`\n   --> $SRC_DIR/core/src/mem/transmutability.rs:LL:COL"}]}