{"sha": "fcd1f53e4351d241b27c8a3af37e37962811a124", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZjZDFmNTNlNDM1MWQyNDFiMjdjOGEzYWYzN2UzNzk2MjgxMWExMjQ=", "commit": {"author": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2014-12-08T22:07:33Z"}, "committer": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2014-12-09T05:44:04Z"}, "message": "Add some missing Copy implementations", "tree": {"sha": "4b56e42989d7b6c778cfdf6f68178697203466e9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4b56e42989d7b6c778cfdf6f68178697203466e9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/fcd1f53e4351d241b27c8a3af37e37962811a124", "comment_count": 5, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/fcd1f53e4351d241b27c8a3af37e37962811a124", "html_url": "https://github.com/rust-lang/rust/commit/fcd1f53e4351d241b27c8a3af37e37962811a124", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/fcd1f53e4351d241b27c8a3af37e37962811a124/comments", "author": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a16f60b1173fae1b971b41780288e2dbe005569d", "url": "https://api.github.com/repos/rust-lang/rust/commits/a16f60b1173fae1b971b41780288e2dbe005569d", "html_url": "https://github.com/rust-lang/rust/commit/a16f60b1173fae1b971b41780288e2dbe005569d"}], "stats": {"total": 6, "additions": 6, "deletions": 0}, "files": [{"sha": "5bc542a84e6e8bb9640b0c8f1dc0dd69593a8da7", "filename": "src/librustrt/unwind.rs", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/fcd1f53e4351d241b27c8a3af37e37962811a124/src%2Flibrustrt%2Funwind.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fcd1f53e4351d241b27c8a3af37e37962811a124/src%2Flibrustrt%2Funwind.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustrt%2Funwind.rs?ref=fcd1f53e4351d241b27c8a3af37e37962811a124", "patch": "@@ -400,14 +400,18 @@ pub mod eabi {\n #[allow(non_camel_case_types, non_snake_case)]\n pub mod eabi {\n     pub use self::EXCEPTION_DISPOSITION::*;\n+    use core::prelude::*;\n     use libunwind as uw;\n     use libc::{c_void, c_int};\n \n     #[repr(C)]\n+    #[allow(missing_copy_implementations)]\n     pub struct EXCEPTION_RECORD;\n     #[repr(C)]\n+    #[allow(missing_copy_implementations)]\n     pub struct CONTEXT;\n     #[repr(C)]\n+    #[allow(missing_copy_implementations)]\n     pub struct DISPATCHER_CONTEXT;\n \n     #[repr(C)]\n@@ -418,6 +422,8 @@ pub mod eabi {\n         ExceptionCollidedUnwind\n     }\n \n+    impl Copy for EXCEPTION_DISPOSITION {}\n+\n     type _Unwind_Personality_Fn =\n         extern \"C\" fn(\n             version: c_int,"}]}