{"sha": "0081d8826b00f4eaf217d4d68d54e715bd98dcb9", "node_id": "MDY6Q29tbWl0NzI0NzEyOjAwODFkODgyNmIwMGY0ZWFmMjE3ZDRkNjhkNTRlNzE1YmQ5OGRjYjk=", "commit": {"author": {"name": "Simon Sapin", "email": "simon.sapin@exyr.org", "date": "2018-05-30T19:04:17Z"}, "committer": {"name": "Simon Sapin", "email": "simon.sapin@exyr.org", "date": "2018-06-11T20:47:28Z"}, "message": "Remove some unneeded casts", "tree": {"sha": "4f17151ee8563a6c97d741605bb3be7022ba5ed8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4f17151ee8563a6c97d741605bb3be7022ba5ed8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0081d8826b00f4eaf217d4d68d54e715bd98dcb9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0081d8826b00f4eaf217d4d68d54e715bd98dcb9", "html_url": "https://github.com/rust-lang/rust/commit/0081d8826b00f4eaf217d4d68d54e715bd98dcb9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0081d8826b00f4eaf217d4d68d54e715bd98dcb9/comments", "author": {"login": "SimonSapin", "id": 291359, "node_id": "MDQ6VXNlcjI5MTM1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/291359?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SimonSapin", "html_url": "https://github.com/SimonSapin", "followers_url": "https://api.github.com/users/SimonSapin/followers", "following_url": "https://api.github.com/users/SimonSapin/following{/other_user}", "gists_url": "https://api.github.com/users/SimonSapin/gists{/gist_id}", "starred_url": "https://api.github.com/users/SimonSapin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SimonSapin/subscriptions", "organizations_url": "https://api.github.com/users/SimonSapin/orgs", "repos_url": "https://api.github.com/users/SimonSapin/repos", "events_url": "https://api.github.com/users/SimonSapin/events{/privacy}", "received_events_url": "https://api.github.com/users/SimonSapin/received_events", "type": "User", "site_admin": false}, "committer": {"login": "SimonSapin", "id": 291359, "node_id": "MDQ6VXNlcjI5MTM1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/291359?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SimonSapin", "html_url": "https://github.com/SimonSapin", "followers_url": "https://api.github.com/users/SimonSapin/followers", "following_url": "https://api.github.com/users/SimonSapin/following{/other_user}", "gists_url": "https://api.github.com/users/SimonSapin/gists{/gist_id}", "starred_url": "https://api.github.com/users/SimonSapin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SimonSapin/subscriptions", "organizations_url": "https://api.github.com/users/SimonSapin/orgs", "repos_url": "https://api.github.com/users/SimonSapin/repos", "events_url": "https://api.github.com/users/SimonSapin/events{/privacy}", "received_events_url": "https://api.github.com/users/SimonSapin/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "11f992c9584f05f56664627ac1ec42e4cd1f0e3e", "url": "https://api.github.com/repos/rust-lang/rust/commits/11f992c9584f05f56664627ac1ec42e4cd1f0e3e", "html_url": "https://github.com/rust-lang/rust/commit/11f992c9584f05f56664627ac1ec42e4cd1f0e3e"}], "stats": {"total": 10, "additions": 5, "deletions": 5}, "files": [{"sha": "d1f140e96a3ae45c456a4a25211f289c17bc0f9b", "filename": "src/liballoc/raw_vec.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/0081d8826b00f4eaf217d4d68d54e715bd98dcb9/src%2Fliballoc%2Fraw_vec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0081d8826b00f4eaf217d4d68d54e715bd98dcb9/src%2Fliballoc%2Fraw_vec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Fraw_vec.rs?ref=0081d8826b00f4eaf217d4d68d54e715bd98dcb9", "patch": "@@ -93,7 +93,7 @@ impl<T, A: Alloc> RawVec<T, A> {\n \n             // handles ZSTs and `cap = 0` alike\n             let ptr = if alloc_size == 0 {\n-                NonNull::<T>::dangling().cast()\n+                NonNull::<T>::dangling()\n             } else {\n                 let align = mem::align_of::<T>();\n                 let layout = Layout::from_size_align(alloc_size, align).unwrap();\n@@ -103,13 +103,13 @@ impl<T, A: Alloc> RawVec<T, A> {\n                     a.alloc(layout)\n                 };\n                 match result {\n-                    Ok(ptr) => ptr,\n+                    Ok(ptr) => ptr.cast(),\n                     Err(_) => oom(layout),\n                 }\n             };\n \n             RawVec {\n-                ptr: ptr.cast().into(),\n+                ptr: ptr.into(),\n                 cap,\n                 a,\n             }"}, {"sha": "7152e721eac9e63642ef45ffae13e4571b79506f", "filename": "src/test/run-pass/realloc-16687.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/0081d8826b00f4eaf217d4d68d54e715bd98dcb9/src%2Ftest%2Frun-pass%2Frealloc-16687.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0081d8826b00f4eaf217d4d68d54e715bd98dcb9/src%2Ftest%2Frun-pass%2Frealloc-16687.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Frealloc-16687.rs?ref=0081d8826b00f4eaf217d4d68d54e715bd98dcb9", "patch": "@@ -64,15 +64,15 @@ unsafe fn test_triangle() -> bool {\n             println!(\"deallocate({:?}, {:?}\", ptr, layout);\n         }\n \n-        Global.dealloc(NonNull::new_unchecked(ptr).cast(), layout);\n+        Global.dealloc(NonNull::new_unchecked(ptr), layout);\n     }\n \n     unsafe fn reallocate(ptr: *mut u8, old: Layout, new: Layout) -> *mut u8 {\n         if PRINT {\n             println!(\"reallocate({:?}, old={:?}, new={:?})\", ptr, old, new);\n         }\n \n-        let ret = Global.realloc(NonNull::new_unchecked(ptr).cast(), old, new.size())\n+        let ret = Global.realloc(NonNull::new_unchecked(ptr), old, new.size())\n             .unwrap_or_else(|_| oom(Layout::from_size_align_unchecked(new.size(), old.align())));\n \n         if PRINT {"}]}