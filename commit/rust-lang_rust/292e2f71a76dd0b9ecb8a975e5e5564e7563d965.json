{"sha": "292e2f71a76dd0b9ecb8a975e5e5564e7563d965", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI5MmUyZjcxYTc2ZGQwYjllY2I4YTk3NWU1ZTU1NjRlNzU2M2Q5NjU=", "commit": {"author": {"name": "Christiaan Dirkx", "email": "christiaan@dirkx.email", "date": "2020-09-20T08:46:30Z"}, "committer": {"name": "Christiaan Dirkx", "email": "christiaan@dirkx.email", "date": "2020-09-20T08:46:30Z"}, "message": "Remove `can_suggest` check for `is_ok` and `is_err`.\n\n`is_ok` and `is_err` are stabilized as const and can thus always be suggested.", "tree": {"sha": "56c9a9355d358cb948181038c10e62859745a7f8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/56c9a9355d358cb948181038c10e62859745a7f8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/292e2f71a76dd0b9ecb8a975e5e5564e7563d965", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/292e2f71a76dd0b9ecb8a975e5e5564e7563d965", "html_url": "https://github.com/rust-lang/rust/commit/292e2f71a76dd0b9ecb8a975e5e5564e7563d965", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/292e2f71a76dd0b9ecb8a975e5e5564e7563d965/comments", "author": {"login": "CDirkx", "id": 11176562, "node_id": "MDQ6VXNlcjExMTc2NTYy", "avatar_url": "https://avatars.githubusercontent.com/u/11176562?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CDirkx", "html_url": "https://github.com/CDirkx", "followers_url": "https://api.github.com/users/CDirkx/followers", "following_url": "https://api.github.com/users/CDirkx/following{/other_user}", "gists_url": "https://api.github.com/users/CDirkx/gists{/gist_id}", "starred_url": "https://api.github.com/users/CDirkx/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CDirkx/subscriptions", "organizations_url": "https://api.github.com/users/CDirkx/orgs", "repos_url": "https://api.github.com/users/CDirkx/repos", "events_url": "https://api.github.com/users/CDirkx/events{/privacy}", "received_events_url": "https://api.github.com/users/CDirkx/received_events", "type": "User", "site_admin": false}, "committer": {"login": "CDirkx", "id": 11176562, "node_id": "MDQ6VXNlcjExMTc2NTYy", "avatar_url": "https://avatars.githubusercontent.com/u/11176562?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CDirkx", "html_url": "https://github.com/CDirkx", "followers_url": "https://api.github.com/users/CDirkx/followers", "following_url": "https://api.github.com/users/CDirkx/following{/other_user}", "gists_url": "https://api.github.com/users/CDirkx/gists{/gist_id}", "starred_url": "https://api.github.com/users/CDirkx/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CDirkx/subscriptions", "organizations_url": "https://api.github.com/users/CDirkx/orgs", "repos_url": "https://api.github.com/users/CDirkx/repos", "events_url": "https://api.github.com/users/CDirkx/events{/privacy}", "received_events_url": "https://api.github.com/users/CDirkx/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "10d272b2e2678544f108d6ce573333cd11c27234", "url": "https://api.github.com/repos/rust-lang/rust/commits/10d272b2e2678544f108d6ce573333cd11c27234", "html_url": "https://github.com/rust-lang/rust/commit/10d272b2e2678544f108d6ce573333cd11c27234"}], "stats": {"total": 8, "additions": 4, "deletions": 4}, "files": [{"sha": "d20662f1ef948f2f65e009d29910b7c968f42ceb", "filename": "clippy_lints/src/matches.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/292e2f71a76dd0b9ecb8a975e5e5564e7563d965/clippy_lints%2Fsrc%2Fmatches.rs", "raw_url": "https://github.com/rust-lang/rust/raw/292e2f71a76dd0b9ecb8a975e5e5564e7563d965/clippy_lints%2Fsrc%2Fmatches.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmatches.rs?ref=292e2f71a76dd0b9ecb8a975e5e5564e7563d965", "patch": "@@ -1469,10 +1469,10 @@ mod redundant_pattern_match {\n         keyword: &'static str,\n     ) {\n         fn find_suggestion(cx: &LateContext<'_>, hir_id: HirId, path: &QPath<'_>) -> Option<&'static str> {\n-            if match_qpath(path, &paths::RESULT_OK) && can_suggest(cx, hir_id, sym!(result_type), \"is_ok\") {\n+            if match_qpath(path, &paths::RESULT_OK) {\n                 return Some(\"is_ok()\");\n             }\n-            if match_qpath(path, &paths::RESULT_ERR) && can_suggest(cx, hir_id, sym!(result_type), \"is_err\") {\n+            if match_qpath(path, &paths::RESULT_ERR) {\n                 return Some(\"is_err()\");\n             }\n             if match_qpath(path, &paths::OPTION_SOME) && can_suggest(cx, hir_id, sym!(option_type), \"is_some\") {\n@@ -1562,8 +1562,8 @@ mod redundant_pattern_match {\n                             &paths::RESULT_ERR,\n                             \"is_ok()\",\n                             \"is_err()\",\n-                            || can_suggest(cx, hir_id, sym!(result_type), \"is_ok\"),\n-                            || can_suggest(cx, hir_id, sym!(result_type), \"is_err\"),\n+                            || true,\n+                            || true\n                         )\n                     } else {\n                         None"}]}