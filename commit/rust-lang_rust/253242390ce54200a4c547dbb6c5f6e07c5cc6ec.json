{"sha": "253242390ce54200a4c547dbb6c5f6e07c5cc6ec", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI1MzI0MjM5MGNlNTQyMDBhNGM1NDdkYmI2YzVmNmUwN2M1Y2M2ZWM=", "commit": {"author": {"name": "Haitao Li", "email": "lihaitao@gmail.com", "date": "2011-11-08T04:37:42Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2011-11-08T05:12:48Z"}, "message": "Use \".ll\" as default suffix of LLVM assembly file\n\nThis commit is a follow up of Issue #1147.\n\nAlthought there are some inconsistency about this naming convention in\nLLVM. For example, `clang' write LLVM assembly to a file with \".s\" suffix,\nwhile both `llvm-dis' and `opt' write to files with \".ll\" suffices. We\nthink \".ll\" makes more sense.\n\nAlso rustc manual page is updated.", "tree": {"sha": "ce45614b33228690d30743fd343fe56c29b2236c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ce45614b33228690d30743fd343fe56c29b2236c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/253242390ce54200a4c547dbb6c5f6e07c5cc6ec", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/253242390ce54200a4c547dbb6c5f6e07c5cc6ec", "html_url": "https://github.com/rust-lang/rust/commit/253242390ce54200a4c547dbb6c5f6e07c5cc6ec", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/253242390ce54200a4c547dbb6c5f6e07c5cc6ec/comments", "author": {"login": "lht", "id": 19508, "node_id": "MDQ6VXNlcjE5NTA4", "avatar_url": "https://avatars.githubusercontent.com/u/19508?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lht", "html_url": "https://github.com/lht", "followers_url": "https://api.github.com/users/lht/followers", "following_url": "https://api.github.com/users/lht/following{/other_user}", "gists_url": "https://api.github.com/users/lht/gists{/gist_id}", "starred_url": "https://api.github.com/users/lht/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lht/subscriptions", "organizations_url": "https://api.github.com/users/lht/orgs", "repos_url": "https://api.github.com/users/lht/repos", "events_url": "https://api.github.com/users/lht/events{/privacy}", "received_events_url": "https://api.github.com/users/lht/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8857657640f16da938de9e24cc4adf6960e29784", "url": "https://api.github.com/repos/rust-lang/rust/commits/8857657640f16da938de9e24cc4adf6960e29784", "html_url": "https://github.com/rust-lang/rust/commit/8857657640f16da938de9e24cc4adf6960e29784"}], "stats": {"total": 9, "additions": 6, "deletions": 3}, "files": [{"sha": "58109cd1e9e5525ad8c78a1a8726d7043a32b897", "filename": "man/rustc.1", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/253242390ce54200a4c547dbb6c5f6e07c5cc6ec/man%2Frustc.1", "raw_url": "https://github.com/rust-lang/rust/raw/253242390ce54200a4c547dbb6c5f6e07c5cc6ec/man%2Frustc.1", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/man%2Frustc.1?ref=253242390ce54200a4c547dbb6c5f6e07c5cc6ec", "patch": "@@ -25,7 +25,8 @@ output filename for \\fBfoo.rs\\fR is otherwise \\fBfoo\\fR plus any\n platform-specific extension (when compiling a binary), a\n platform-specific name, e.g. \\fBlibfoo.so\\fR (when compiling a\n library), \\fBfoo.o\\fR (when using \\fB-c\\fR), \\fBfoo.s\\fR (when using\n-\\fB-S\\fR) or \\fBfoo.bc\\fR (when using \\fB--emit-llvm\\fR), and\n+\\fB-S\\fR) or \\fBfoo.bc\\fR (when using \\fB--emit-llvm\\fR), and \\fBfoo.ll\\fR\n+(when using both \\fB-S\\fR and \\fB--emit-llvm\\fR).\n .TP\n \\fB--lib\\fR:\n Compile and link a library crate into a shared object.\n@@ -82,7 +83,9 @@ Compile to assembly, but do not assemble or link.\n Compile and assemble, but do not link.\n .TP\n \\fB--emit-llvm\\fR:\n-Generate llvm bitcode.\n+Generate output files in LLVM format. When used with \\fB-S\\fR this generate LLVM\n+intermediate language assembly files, otherwise this generates LLVM bitcode\n+format object files. \n .TP\n \\fB--save-temps\\fR:\n For foo.rs, save generated bitcode before optimization to"}, {"sha": "ec715593ce74346053b2476c7199e0c6ebb9881e", "filename": "src/comp/driver/rustc.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/253242390ce54200a4c547dbb6c5f6e07c5cc6ec/src%2Fcomp%2Fdriver%2Frustc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/253242390ce54200a4c547dbb6c5f6e07c5cc6ec/src%2Fcomp%2Fdriver%2Frustc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fdriver%2Frustc.rs?ref=253242390ce54200a4c547dbb6c5f6e07c5cc6ec", "patch": "@@ -477,7 +477,7 @@ fn build_output_filenames(ifile: str, ofile: option::t<str>,\n               link::output_type_none. { \"none\" }\n               link::output_type_bitcode. { \"bc\" }\n               link::output_type_assembly. { \"s\" }\n-              link::output_type_llvm_assembly. { \"s\" }\n+              link::output_type_llvm_assembly. { \"ll\" }\n               // Object and exe output both use the '.o' extension here\n               link::output_type_object. | link::output_type_exe. {\n                 \"o\""}]}