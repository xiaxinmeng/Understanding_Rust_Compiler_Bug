{"sha": "aa1dc0975a43e224386ec0ed1bb7ae09cfd0dd7e", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFhMWRjMDk3NWE0M2UyMjQzODZlYzBlZDFiYjdhZTA5Y2ZkMGRkN2U=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2016-02-11T16:49:20Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2016-02-11T16:49:20Z"}, "message": "Auto merge of #31532 - tomaka:fix-emscripten, r=brson\n\nBefore this PR:\n\n> test result: FAILED. 2039 passed; 327 failed; 2 ignored; 0 measured\n\nAfter:\n\n> test result: FAILED. 2232 passed; 134 failed; 2 ignored; 0 measured\n\nr? @brson", "tree": {"sha": "13d6901dcf2b6b97b5d50352f70089f6c44a9c67", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/13d6901dcf2b6b97b5d50352f70089f6c44a9c67"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/aa1dc0975a43e224386ec0ed1bb7ae09cfd0dd7e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/aa1dc0975a43e224386ec0ed1bb7ae09cfd0dd7e", "html_url": "https://github.com/rust-lang/rust/commit/aa1dc0975a43e224386ec0ed1bb7ae09cfd0dd7e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/aa1dc0975a43e224386ec0ed1bb7ae09cfd0dd7e/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a91ff1c9d1842918329ef7a81afd3848854d53c7", "url": "https://api.github.com/repos/rust-lang/rust/commits/a91ff1c9d1842918329ef7a81afd3848854d53c7", "html_url": "https://github.com/rust-lang/rust/commit/a91ff1c9d1842918329ef7a81afd3848854d53c7"}, {"sha": "657f1cf0e0c4302827f24084dd1822385944f5ef", "url": "https://api.github.com/repos/rust-lang/rust/commits/657f1cf0e0c4302827f24084dd1822385944f5ef", "html_url": "https://github.com/rust-lang/rust/commit/657f1cf0e0c4302827f24084dd1822385944f5ef"}], "stats": {"total": 19, "additions": 11, "deletions": 8}, "files": [{"sha": "5eef6b7f24c043bcd70cbe4f479344fe1317a1b7", "filename": "src/compiletest/runtest.rs", "status": "modified", "additions": 7, "deletions": 5, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/aa1dc0975a43e224386ec0ed1bb7ae09cfd0dd7e/src%2Fcompiletest%2Fruntest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aa1dc0975a43e224386ec0ed1bb7ae09cfd0dd7e/src%2Fcompiletest%2Fruntest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcompiletest%2Fruntest.rs?ref=aa1dc0975a43e224386ec0ed1bb7ae09cfd0dd7e", "patch": "@@ -1229,11 +1229,13 @@ fn compose_and_run_compiler(config: &Config, props: &TestProps,\n             // for the test suite (otherwise including libstd statically in all\n             // executables takes up quite a bit of space).\n             //\n-            // For targets like MUSL, however, there is no support for dynamic\n-            // libraries so we just go back to building a normal library. Note,\n-            // however, that if the library is built with `force_host` then it's\n-            // ok to be a dylib as the host should always support dylibs.\n-            if config.target.contains(\"musl\") && !aux_props.force_host {\n+            // For targets like MUSL or Emscripten, however, there is no support for\n+            // dynamic libraries so we just go back to building a normal library. Note,\n+            // however, that for MUSL if the library is built with `force_host` then\n+            // it's ok to be a dylib as the host should always support dylibs.\n+            if (config.target.contains(\"musl\") && !aux_props.force_host) ||\n+                config.target.contains(\"emscripten\")\n+            {\n                 vec!(\"--crate-type=lib\".to_owned())\n             } else {\n                 vec!(\"--crate-type=dylib\".to_owned())"}, {"sha": "299c6ec2731d7f02462de3632ae8e6c391906131", "filename": "src/libstd/sys/unix/fd.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/aa1dc0975a43e224386ec0ed1bb7ae09cfd0dd7e/src%2Flibstd%2Fsys%2Funix%2Ffd.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aa1dc0975a43e224386ec0ed1bb7ae09cfd0dd7e/src%2Flibstd%2Fsys%2Funix%2Ffd.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Funix%2Ffd.rs?ref=aa1dc0975a43e224386ec0ed1bb7ae09cfd0dd7e", "patch": "@@ -51,14 +51,14 @@ impl FileDesc {\n         Ok(ret as usize)\n     }\n \n-    #[cfg(not(any(target_env = \"newlib\", target_os = \"solaris\")))]\n+    #[cfg(not(any(target_env = \"newlib\", target_os = \"solaris\", target_os = \"emscripten\")))]\n     pub fn set_cloexec(&self) {\n         unsafe {\n             let ret = libc::ioctl(self.fd, libc::FIOCLEX);\n             debug_assert_eq!(ret, 0);\n         }\n     }\n-    #[cfg(any(target_env = \"newlib\", target_os = \"solaris\"))]\n+    #[cfg(any(target_env = \"newlib\", target_os = \"solaris\", target_os = \"emscripten\"))]\n     pub fn set_cloexec(&self) {\n         unsafe {\n             let previous = libc::fcntl(self.fd, libc::F_GETFD);"}, {"sha": "106bf8ce7dfa43108977fb1c618dd988584fe856", "filename": "src/test/run-pass/x86stdcall.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/aa1dc0975a43e224386ec0ed1bb7ae09cfd0dd7e/src%2Ftest%2Frun-pass%2Fx86stdcall.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aa1dc0975a43e224386ec0ed1bb7ae09cfd0dd7e/src%2Ftest%2Frun-pass%2Fx86stdcall.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fx86stdcall.rs?ref=aa1dc0975a43e224386ec0ed1bb7ae09cfd0dd7e", "patch": "@@ -38,5 +38,6 @@ pub fn main() {\n           target_os = \"netbsd\",\n           target_os = \"openbsd\",\n           target_os = \"android\",\n-          target_os = \"solaris\"))]\n+          target_os = \"solaris\",\n+          target_os = \"emscripten\"))]\n pub fn main() { }"}]}