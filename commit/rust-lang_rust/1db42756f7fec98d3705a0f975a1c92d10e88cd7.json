{"sha": "1db42756f7fec98d3705a0f975a1c92d10e88cd7", "node_id": "MDY6Q29tbWl0NzI0NzEyOjFkYjQyNzU2ZjdmZWM5OGQzNzA1YTBmOTc1YTFjOTJkMTBlODhjZDc=", "commit": {"author": {"name": "David Wood", "email": "david@davidtw.co", "date": "2019-01-21T12:25:15Z"}, "committer": {"name": "David Wood", "email": "david@davidtw.co", "date": "2019-01-21T12:25:15Z"}, "message": "Print visible name for types as well as modules.\n\nThis commit extends previous work in #55007 where the name from the\nvisible parent was used for modules. Now, we also print the name from\nthe visible parent for types.", "tree": {"sha": "efd27ee196bca88c518f9294e6cfbd5e992168c8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/efd27ee196bca88c518f9294e6cfbd5e992168c8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1db42756f7fec98d3705a0f975a1c92d10e88cd7", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEWwgxPGhT5b/6kagXAXYLT59T8VQFAlxFujIACgkQAXYLT59T\n8VTLnxAArNxfQ+hawgWUznd3tgVtmCqwNuZZHxgNQc3vlS3agg9ASL5nfRFaxXTY\nuxHtyywNfs8hj7hKcgo1YI3CMA3dm2ZXkrbq7yd/qtdyx0du/ezyK4CoVYRUJc0T\nHu+muBsv6vMDdVBc7GkmaUZYmguKFVW+LDhIwJoqMu4jsNA6MrkwSsroyrssOYfk\nU5z6vvVLFJwMuBESRP6Vd0c/0vd8DDWDFJ88DyYXbrs0SS7e9YeNKzBcdhw2YxU+\ncIz38wCtudO56jOm0TTFzeBs0+Ectk62Qznoq4V8TT4kDu44YovzcENx3Tnk1SLU\n7HFScrsi2KmteprX2f22+Or27jeo7u+ck9JfanEy6aXWOfyLBVugQdjlryVIcyle\nqhKZl7/gJtBmpVBK9qSwuhrt4G+LLIA9qlrtBG6QDkEOCohfYFIxNjiF2gXff1/Y\nOtxwzLbJpmMDYozhkAyeH7PiX7Zf/8ViKFfO1E4XtpEC+YBQr8m/ItcoGjgcSGT+\nTYE8cONxDkZFQCLp5Uy1BiNq/zpokvq4gidDZlgKtxeCrIcKvkRnHWovgQtFBlB4\nY9PvFBmyYTArHOW1zsllq5ZPlnwls4I3hyZrzPVShbfrFK4Le2DE8GJGvNWAcA76\nYrCvcjE2n5oqyNiijCjogKhD7B6DEoEYqgRzacWthMxuiQQ1hss=\n=1Obu\n-----END PGP SIGNATURE-----", "payload": "tree efd27ee196bca88c518f9294e6cfbd5e992168c8\nparent b5f5a2715ed8685bc19fd589a23c7c658c2fe6bd\nauthor David Wood <david@davidtw.co> 1548073515 +0100\ncommitter David Wood <david@davidtw.co> 1548073515 +0100\n\nPrint visible name for types as well as modules.\n\nThis commit extends previous work in #55007 where the name from the\nvisible parent was used for modules. Now, we also print the name from\nthe visible parent for types.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1db42756f7fec98d3705a0f975a1c92d10e88cd7", "html_url": "https://github.com/rust-lang/rust/commit/1db42756f7fec98d3705a0f975a1c92d10e88cd7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1db42756f7fec98d3705a0f975a1c92d10e88cd7/comments", "author": {"login": "davidtwco", "id": 1295100, "node_id": "MDQ6VXNlcjEyOTUxMDA=", "avatar_url": "https://avatars.githubusercontent.com/u/1295100?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidtwco", "html_url": "https://github.com/davidtwco", "followers_url": "https://api.github.com/users/davidtwco/followers", "following_url": "https://api.github.com/users/davidtwco/following{/other_user}", "gists_url": "https://api.github.com/users/davidtwco/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidtwco/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidtwco/subscriptions", "organizations_url": "https://api.github.com/users/davidtwco/orgs", "repos_url": "https://api.github.com/users/davidtwco/repos", "events_url": "https://api.github.com/users/davidtwco/events{/privacy}", "received_events_url": "https://api.github.com/users/davidtwco/received_events", "type": "User", "site_admin": false}, "committer": {"login": "davidtwco", "id": 1295100, "node_id": "MDQ6VXNlcjEyOTUxMDA=", "avatar_url": "https://avatars.githubusercontent.com/u/1295100?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidtwco", "html_url": "https://github.com/davidtwco", "followers_url": "https://api.github.com/users/davidtwco/followers", "following_url": "https://api.github.com/users/davidtwco/following{/other_user}", "gists_url": "https://api.github.com/users/davidtwco/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidtwco/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidtwco/subscriptions", "organizations_url": "https://api.github.com/users/davidtwco/orgs", "repos_url": "https://api.github.com/users/davidtwco/repos", "events_url": "https://api.github.com/users/davidtwco/events{/privacy}", "received_events_url": "https://api.github.com/users/davidtwco/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b5f5a2715ed8685bc19fd589a23c7c658c2fe6bd", "url": "https://api.github.com/repos/rust-lang/rust/commits/b5f5a2715ed8685bc19fd589a23c7c658c2fe6bd", "html_url": "https://github.com/rust-lang/rust/commit/b5f5a2715ed8685bc19fd589a23c7c658c2fe6bd"}], "stats": {"total": 51, "additions": 37, "deletions": 14}, "files": [{"sha": "0ddc5ae87208dcf2a61a51e868837794f34b1e2e", "filename": "src/librustc/ty/item_path.rs", "status": "modified", "additions": 14, "deletions": 14, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/1db42756f7fec98d3705a0f975a1c92d10e88cd7/src%2Flibrustc%2Fty%2Fitem_path.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1db42756f7fec98d3705a0f975a1c92d10e88cd7/src%2Flibrustc%2Fty%2Fitem_path.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Fitem_path.rs?ref=1db42756f7fec98d3705a0f975a1c92d10e88cd7", "patch": "@@ -210,12 +210,12 @@ impl<'a, 'gcx, 'tcx> TyCtxt<'a, 'gcx, 'tcx> {\n \n             let visible_parent = visible_parent_map.get(&cur_def).cloned();\n             let actual_parent = self.parent(cur_def);\n-            debug!(\n-                \"try_push_visible_item_path: visible_parent={:?} actual_parent={:?}\",\n-                visible_parent, actual_parent,\n-            );\n \n             let data = cur_def_key.disambiguated_data.data;\n+            debug!(\n+                \"try_push_visible_item_path: data={:?} visible_parent={:?} actual_parent={:?}\",\n+                data, visible_parent, actual_parent,\n+            );\n             let symbol = match data {\n                 // In order to output a path that could actually be imported (valid and visible),\n                 // we need to handle re-exports correctly.\n@@ -248,16 +248,16 @@ impl<'a, 'gcx, 'tcx> TyCtxt<'a, 'gcx, 'tcx> {\n                 // the children of the visible parent (as was done when computing\n                 // `visible_parent_map`), looking for the specific child we currently have and then\n                 // have access to the re-exported name.\n-                DefPathData::Module(module_name) if visible_parent != actual_parent => {\n-                    let mut name: Option<ast::Ident> = None;\n-                    if let Some(visible_parent) = visible_parent {\n-                        for child in self.item_children(visible_parent).iter() {\n-                            if child.def.def_id() == cur_def {\n-                                name = Some(child.ident);\n-                            }\n-                        }\n-                    }\n-                    name.map(|n| n.as_str()).unwrap_or(module_name.as_str())\n+                DefPathData::Module(actual_name) |\n+                DefPathData::TypeNs(actual_name) if visible_parent != actual_parent => {\n+                    visible_parent\n+                        .and_then(|parent| {\n+                            self.item_children(parent)\n+                                .iter()\n+                                .find(|child| child.def.def_id() == cur_def)\n+                                .map(|child| child.ident.as_str())\n+                        })\n+                        .unwrap_or_else(|| actual_name.as_str())\n                 },\n                 _ => {\n                     data.get_opt_name().map(|n| n.as_str()).unwrap_or_else(|| {"}, {"sha": "65b9beb91f90ca00cddda0ff6bf16cb6d8c1edc0", "filename": "src/test/ui/issues/auxiliary/issue-56943.rs", "status": "added", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/1db42756f7fec98d3705a0f975a1c92d10e88cd7/src%2Ftest%2Fui%2Fissues%2Fauxiliary%2Fissue-56943.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1db42756f7fec98d3705a0f975a1c92d10e88cd7/src%2Ftest%2Fui%2Fissues%2Fauxiliary%2Fissue-56943.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fauxiliary%2Fissue-56943.rs?ref=1db42756f7fec98d3705a0f975a1c92d10e88cd7", "patch": "@@ -0,0 +1,3 @@\n+pub struct S;\n+mod m { pub struct S; }\n+pub use crate::m::S as S2;"}, {"sha": "8fc77abdbf58827101780bf20e448cd03d83ba1c", "filename": "src/test/ui/issues/issue-56943.rs", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/1db42756f7fec98d3705a0f975a1c92d10e88cd7/src%2Ftest%2Fui%2Fissues%2Fissue-56943.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1db42756f7fec98d3705a0f975a1c92d10e88cd7/src%2Ftest%2Fui%2Fissues%2Fissue-56943.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-56943.rs?ref=1db42756f7fec98d3705a0f975a1c92d10e88cd7", "patch": "@@ -0,0 +1,8 @@\n+// aux-build:issue-56943.rs\n+\n+extern crate issue_56943;\n+\n+fn main() {\n+    let _: issue_56943::S = issue_56943::S2;\n+    //~^ ERROR mismatched types [E0308]\n+}"}, {"sha": "27202051524c9be592d84314ecbf49dee6a33007", "filename": "src/test/ui/issues/issue-56943.stderr", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/1db42756f7fec98d3705a0f975a1c92d10e88cd7/src%2Ftest%2Fui%2Fissues%2Fissue-56943.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1db42756f7fec98d3705a0f975a1c92d10e88cd7/src%2Ftest%2Fui%2Fissues%2Fissue-56943.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-56943.stderr?ref=1db42756f7fec98d3705a0f975a1c92d10e88cd7", "patch": "@@ -0,0 +1,12 @@\n+error[E0308]: mismatched types\n+  --> $DIR/issue-56943.rs:6:29\n+   |\n+LL |     let _: issue_56943::S = issue_56943::S2;\n+   |                             ^^^^^^^^^^^^^^^ expected struct `issue_56943::S`, found struct `issue_56943::S2`\n+   |\n+   = note: expected type `issue_56943::S`\n+              found type `issue_56943::S2`\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0308`."}]}