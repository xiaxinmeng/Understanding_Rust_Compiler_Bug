{"sha": "d7eda77692282c27013981e7a1309404125f3a8b", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQ3ZWRhNzc2OTIyODJjMjcwMTM5ODFlN2ExMzA5NDA0MTI1ZjNhOGI=", "commit": {"author": {"name": "kennytm", "email": "kennytm@gmail.com", "date": "2018-03-22T09:51:30Z"}, "committer": {"name": "kennytm", "email": "kennytm@gmail.com", "date": "2018-03-22T14:43:43Z"}, "message": "Rollup merge of #49189 - GuillaumeGomez:fix-implied-shortcut-links, r=QuietMisdreavus\n\nFix automatic urls with backticks\n\nFixes #49164.\n\nr? @QuietMisdreavus", "tree": {"sha": "458c675e6dcd0c29aa677a7ea3689c903d8a5a7c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/458c675e6dcd0c29aa677a7ea3689c903d8a5a7c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d7eda77692282c27013981e7a1309404125f3a8b", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEZ1R8CLMp8f2GxWoQ/vbIBR0OATwFAlqzwR8ACgkQ/vbIBR0O\nATxTtA//Z3JQTS+uZe9sTgB292eSECmJPo+1V0qOndoj0z6NuQVGJ7YhHAxGPZzb\nOJZ8xREyUhjoMVrWXp59gmDkGDdey5tFxKevi57pr0C+V7zH0vJN620lANRzRH2v\na5ztIdN6xIHN/fxfkKxU6KnhyXsEJtOjZkEZZJH4TA/jjv4DhlYpgZs08YkF6ucq\nBohfMU20w8FGsWRGVXpsAk2MMZSDjRSGrb6qu4cxQUes04jnEvwTT5y1tkfuPe43\nNC/ho4EDyyeNKxSo/EzJkRmn7YzBq426zT32bakJzO545zRczgEzVowrnKleZ5Rb\nwWPG87tn83f/HPKFL4yAQ+wswiOiw4DryGE/OJXCZjpEIMHSzQRUelaZ50OBDoa8\nbH1NBzKnDOlq+2qXX4WZFPHb2/TLY53GK4pKaFegYyzdsqr6Te4Lasr0TGdcC1vi\nTtQ7uD0NltNE8MrqAKDLaELjBNZGewy9BMOenlCbPK3bbwj0SdfOsLjxPuKqwR+m\nNUk+qgvJTSwl5GjKHG7oNxGZpS00P4sy2g2qZNHmsW5ImjiSuFYa+kbeAu9VqbPh\n8DyOdhvfpZcnVWfTxaMVsABZeMe5udY1AMaG2tBYMQpkHjlzBwbq94np2buC5Oxa\nwFtNvHb7/1pfPOKL/rEfqVIx2TGmiyglSLeWk65lSPhSP7m9Gjw=\n=WDDd\n-----END PGP SIGNATURE-----", "payload": "tree 458c675e6dcd0c29aa677a7ea3689c903d8a5a7c\nparent 95967c7c722f76cc894752aa2ab4e5c7ef7aa284\nparent bac6484a315a805287b98adc3c9c0909579c8393\nauthor kennytm <kennytm@gmail.com> 1521712290 +0800\ncommitter kennytm <kennytm@gmail.com> 1521729823 +0800\n\nRollup merge of #49189 - GuillaumeGomez:fix-implied-shortcut-links, r=QuietMisdreavus\n\nFix automatic urls with backticks\n\nFixes #49164.\n\nr? @QuietMisdreavus\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d7eda77692282c27013981e7a1309404125f3a8b", "html_url": "https://github.com/rust-lang/rust/commit/d7eda77692282c27013981e7a1309404125f3a8b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d7eda77692282c27013981e7a1309404125f3a8b/comments", "author": {"login": "kennytm", "id": 103023, "node_id": "MDQ6VXNlcjEwMzAyMw==", "avatar_url": "https://avatars.githubusercontent.com/u/103023?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kennytm", "html_url": "https://github.com/kennytm", "followers_url": "https://api.github.com/users/kennytm/followers", "following_url": "https://api.github.com/users/kennytm/following{/other_user}", "gists_url": "https://api.github.com/users/kennytm/gists{/gist_id}", "starred_url": "https://api.github.com/users/kennytm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kennytm/subscriptions", "organizations_url": "https://api.github.com/users/kennytm/orgs", "repos_url": "https://api.github.com/users/kennytm/repos", "events_url": "https://api.github.com/users/kennytm/events{/privacy}", "received_events_url": "https://api.github.com/users/kennytm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "kennytm", "id": 103023, "node_id": "MDQ6VXNlcjEwMzAyMw==", "avatar_url": "https://avatars.githubusercontent.com/u/103023?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kennytm", "html_url": "https://github.com/kennytm", "followers_url": "https://api.github.com/users/kennytm/followers", "following_url": "https://api.github.com/users/kennytm/following{/other_user}", "gists_url": "https://api.github.com/users/kennytm/gists{/gist_id}", "starred_url": "https://api.github.com/users/kennytm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kennytm/subscriptions", "organizations_url": "https://api.github.com/users/kennytm/orgs", "repos_url": "https://api.github.com/users/kennytm/repos", "events_url": "https://api.github.com/users/kennytm/events{/privacy}", "received_events_url": "https://api.github.com/users/kennytm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "95967c7c722f76cc894752aa2ab4e5c7ef7aa284", "url": "https://api.github.com/repos/rust-lang/rust/commits/95967c7c722f76cc894752aa2ab4e5c7ef7aa284", "html_url": "https://github.com/rust-lang/rust/commit/95967c7c722f76cc894752aa2ab4e5c7ef7aa284"}, {"sha": "bac6484a315a805287b98adc3c9c0909579c8393", "url": "https://api.github.com/repos/rust-lang/rust/commits/bac6484a315a805287b98adc3c9c0909579c8393", "html_url": "https://github.com/rust-lang/rust/commit/bac6484a315a805287b98adc3c9c0909579c8393"}], "stats": {"total": 38, "additions": 28, "deletions": 10}, "files": [{"sha": "1a42b02140cd27b04b0a1626343af235522a3547", "filename": "src/librustdoc/clean/mod.rs", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/d7eda77692282c27013981e7a1309404125f3a8b/src%2Flibrustdoc%2Fclean%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d7eda77692282c27013981e7a1309404125f3a8b/src%2Flibrustdoc%2Fclean%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fclean%2Fmod.rs?ref=d7eda77692282c27013981e7a1309404125f3a8b", "patch": "@@ -942,7 +942,7 @@ fn ambiguity_error(cx: &DocContext, attrs: &Attributes,\n                       select the {}\",\n                       disambig1, kind1, disambig2,\n                       kind2))\n-             .emit();\n+      .emit();\n }\n \n /// Given an enum variant's def, return the def of its enum and the associated fragment\n@@ -1087,6 +1087,7 @@ fn macro_resolve(cx: &DocContext, path_str: &str) -> Option<Def> {\n     }\n }\n \n+#[derive(Debug)]\n enum PathKind {\n     /// can be either value or type, not a macro\n     Unknown,\n@@ -1095,7 +1096,7 @@ enum PathKind {\n     /// values, functions, consts, statics, everything in the value namespace\n     Value,\n     /// types, traits, everything in the type namespace\n-    Type\n+    Type,\n }\n \n impl Clean<Attributes> for [ast::Attribute] {\n@@ -1104,12 +1105,13 @@ impl Clean<Attributes> for [ast::Attribute] {\n \n         if UnstableFeatures::from_environment().is_nightly_build() {\n             let dox = attrs.collapsed_doc_value().unwrap_or_else(String::new);\n-            for link in markdown_links(&dox) {\n+            for ori_link in markdown_links(&dox) {\n                 // bail early for real links\n-                if link.contains('/') {\n+                if ori_link.contains('/') {\n                     continue;\n                 }\n-                let (def, fragment)  = {\n+                let link = ori_link.replace(\"`\", \"\");\n+                let (def, fragment) = {\n                     let mut kind = PathKind::Unknown;\n                     let path_str = if let Some(prefix) =\n                         [\"struct@\", \"enum@\", \"type@\",\n@@ -1145,7 +1147,6 @@ impl Clean<Attributes> for [ast::Attribute] {\n                         continue;\n                     }\n \n-\n                     match kind {\n                         PathKind::Value => {\n                             if let Ok(def) = resolve(cx, path_str, true) {\n@@ -1219,9 +1220,8 @@ impl Clean<Attributes> for [ast::Attribute] {\n                     }\n                 };\n \n-\n                 let id = register_def(cx, def);\n-                attrs.links.push((link, id, fragment));\n+                attrs.links.push((ori_link, id, fragment));\n             }\n \n             cx.sess().abort_if_errors();"}, {"sha": "c09bd4cc84ae5222714bf7bb514a38d10c4998ec", "filename": "src/librustdoc/html/markdown.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/d7eda77692282c27013981e7a1309404125f3a8b/src%2Flibrustdoc%2Fhtml%2Fmarkdown.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d7eda77692282c27013981e7a1309404125f3a8b/src%2Flibrustdoc%2Fhtml%2Fmarkdown.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fmarkdown.rs?ref=d7eda77692282c27013981e7a1309404125f3a8b", "patch": "@@ -233,14 +233,14 @@ impl<'a, I: Iterator<Item = Event<'a>>> Iterator for CodeBlocks<'a, I> {\n /// Make headings links with anchor ids and build up TOC.\n struct LinkReplacer<'a, 'b, I: Iterator<Item = Event<'a>>> {\n     inner: I,\n-    links: &'b [(String, String)]\n+    links: &'b [(String, String)],\n }\n \n impl<'a, 'b, I: Iterator<Item = Event<'a>>> LinkReplacer<'a, 'b, I> {\n     fn new(iter: I, links: &'b [(String, String)]) -> Self {\n         LinkReplacer {\n             inner: iter,\n-            links\n+            links,\n         }\n     }\n }"}, {"sha": "1633711e83d9afa2fd9af978773c867ca1f31e50", "filename": "src/test/rustdoc/check-styled-link.rs", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/d7eda77692282c27013981e7a1309404125f3a8b/src%2Ftest%2Frustdoc%2Fcheck-styled-link.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d7eda77692282c27013981e7a1309404125f3a8b/src%2Ftest%2Frustdoc%2Fcheck-styled-link.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fcheck-styled-link.rs?ref=d7eda77692282c27013981e7a1309404125f3a8b", "patch": "@@ -0,0 +1,18 @@\n+// Copyright 2018 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#![crate_name = \"foo\"]\n+\n+pub struct Foo;\n+\n+// @has foo/struct.Bar.html '//a[@href=\"../foo/struct.Foo.html\"]' 'Foo'\n+\n+/// Code-styled reference to [`Foo`].\n+pub struct Bar;"}]}