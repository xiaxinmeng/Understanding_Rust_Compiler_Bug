{"sha": "9df9c9df7bdcd688bcad9e91b9e2669f01d9f858", "node_id": "MDY6Q29tbWl0NzI0NzEyOjlkZjljOWRmN2JkY2Q2ODhiY2FkOWU5MWI5ZTI2NjlmMDFkOWY4NTg=", "commit": {"author": {"name": "Zack M. Davis", "email": "code@zackmdavis.net", "date": "2018-07-01T03:22:19Z"}, "committer": {"name": "Zack M. Davis", "email": "code@zackmdavis.net", "date": "2018-07-01T05:20:28Z"}, "message": "choose a less arbitrary span when parsing the empty visibility modifier\n\nVisibility spans were added to the AST in #47799 (d6bdf296) as a\n`Spanned<_>`\u2014which means that we need to choose a span even in the case\nof inherited visibility (what you get when there's no `pub` &c. keyword\nat all). That initial implementation's choice is pretty\ncounterintuitive, which could matter if we want to use it as a site to\nsuggest inserting a visibility modifier, &c.\n\n(The phrase \"Schelling span\" in the comment is meant in analogy to the\ngame-theoretic concept of a \"Schelling point\", a value that is chosen\nsimply because it's what one can expect to agree upon with other agents\nin the absence of explicit co\u00f6rdination.)", "tree": {"sha": "285a0144a736bc9b26f79873360a3ed9a2a18d6d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/285a0144a736bc9b26f79873360a3ed9a2a18d6d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9df9c9df7bdcd688bcad9e91b9e2669f01d9f858", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9df9c9df7bdcd688bcad9e91b9e2669f01d9f858", "html_url": "https://github.com/rust-lang/rust/commit/9df9c9df7bdcd688bcad9e91b9e2669f01d9f858", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9df9c9df7bdcd688bcad9e91b9e2669f01d9f858/comments", "author": {"login": "zackmdavis", "id": 1076988, "node_id": "MDQ6VXNlcjEwNzY5ODg=", "avatar_url": "https://avatars.githubusercontent.com/u/1076988?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zackmdavis", "html_url": "https://github.com/zackmdavis", "followers_url": "https://api.github.com/users/zackmdavis/followers", "following_url": "https://api.github.com/users/zackmdavis/following{/other_user}", "gists_url": "https://api.github.com/users/zackmdavis/gists{/gist_id}", "starred_url": "https://api.github.com/users/zackmdavis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zackmdavis/subscriptions", "organizations_url": "https://api.github.com/users/zackmdavis/orgs", "repos_url": "https://api.github.com/users/zackmdavis/repos", "events_url": "https://api.github.com/users/zackmdavis/events{/privacy}", "received_events_url": "https://api.github.com/users/zackmdavis/received_events", "type": "User", "site_admin": false}, "committer": {"login": "zackmdavis", "id": 1076988, "node_id": "MDQ6VXNlcjEwNzY5ODg=", "avatar_url": "https://avatars.githubusercontent.com/u/1076988?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zackmdavis", "html_url": "https://github.com/zackmdavis", "followers_url": "https://api.github.com/users/zackmdavis/followers", "following_url": "https://api.github.com/users/zackmdavis/following{/other_user}", "gists_url": "https://api.github.com/users/zackmdavis/gists{/gist_id}", "starred_url": "https://api.github.com/users/zackmdavis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zackmdavis/subscriptions", "organizations_url": "https://api.github.com/users/zackmdavis/orgs", "repos_url": "https://api.github.com/users/zackmdavis/repos", "events_url": "https://api.github.com/users/zackmdavis/events{/privacy}", "received_events_url": "https://api.github.com/users/zackmdavis/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "33b40f56792f0ed198b79818891634275cb8168e", "url": "https://api.github.com/repos/rust-lang/rust/commits/33b40f56792f0ed198b79818891634275cb8168e", "html_url": "https://github.com/rust-lang/rust/commit/33b40f56792f0ed198b79818891634275cb8168e"}], "stats": {"total": 5, "additions": 4, "deletions": 1}, "files": [{"sha": "1f062656b813bed98dbecb6d37a4ed87adc562be", "filename": "src/libsyntax/parse/parser.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/9df9c9df7bdcd688bcad9e91b9e2669f01d9f858/src%2Flibsyntax%2Fparse%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9df9c9df7bdcd688bcad9e91b9e2669f01d9f858/src%2Flibsyntax%2Fparse%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fparser.rs?ref=9df9c9df7bdcd688bcad9e91b9e2669f01d9f858", "patch": "@@ -6032,7 +6032,10 @@ impl<'a> Parser<'a> {\n         }\n \n         if !self.eat_keyword(keywords::Pub) {\n-            return Ok(respan(self.prev_span, VisibilityKind::Inherited))\n+            // We need a span for our `Spanned<VisibilityKind>`, but there's inherently no\n+            // keyword to grab a span from for inherited visibility; an empty span at the\n+            // beginning of the current token would seem to be the \"Schelling span\".\n+            return Ok(respan(self.span.shrink_to_lo(), VisibilityKind::Inherited))\n         }\n         let lo = self.prev_span;\n "}]}