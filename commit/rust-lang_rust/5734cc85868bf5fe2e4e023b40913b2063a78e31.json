{"sha": "5734cc85868bf5fe2e4e023b40913b2063a78e31", "node_id": "MDY6Q29tbWl0NzI0NzEyOjU3MzRjYzg1ODY4YmY1ZmUyZTRlMDIzYjQwOTEzYjIwNjNhNzhlMzE=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-08-13T08:17:59Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-08-13T08:36:04Z"}, "message": "Simplify", "tree": {"sha": "faab3b05956536abaab4ab87ec7f71684ba7c0d1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/faab3b05956536abaab4ab87ec7f71684ba7c0d1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5734cc85868bf5fe2e4e023b40913b2063a78e31", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5734cc85868bf5fe2e4e023b40913b2063a78e31", "html_url": "https://github.com/rust-lang/rust/commit/5734cc85868bf5fe2e4e023b40913b2063a78e31", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5734cc85868bf5fe2e4e023b40913b2063a78e31/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3615758f8ebf5d2cdd5d82f10daa596acfc1a64f", "url": "https://api.github.com/repos/rust-lang/rust/commits/3615758f8ebf5d2cdd5d82f10daa596acfc1a64f", "html_url": "https://github.com/rust-lang/rust/commit/3615758f8ebf5d2cdd5d82f10daa596acfc1a64f"}], "stats": {"total": 14, "additions": 6, "deletions": 8}, "files": [{"sha": "336fe25bc9c4a3f58d0b1cb300612bd0dbfaaac0", "filename": "crates/ra_cfg/src/cfg_expr.rs", "status": "modified", "additions": 6, "deletions": 8, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/5734cc85868bf5fe2e4e023b40913b2063a78e31/crates%2Fra_cfg%2Fsrc%2Fcfg_expr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5734cc85868bf5fe2e4e023b40913b2063a78e31/crates%2Fra_cfg%2Fsrc%2Fcfg_expr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_cfg%2Fsrc%2Fcfg_expr.rs?ref=5734cc85868bf5fe2e4e023b40913b2063a78e31", "patch": "@@ -86,17 +86,15 @@ fn next_cfg_expr(it: &mut SliceIter<tt::TokenTree>) -> Option<CfgExpr> {\n mod tests {\n     use super::*;\n \n-    use mbe::{ast_to_token_tree, TokenMap};\n+    use mbe::ast_to_token_tree;\n     use syntax::ast::{self, AstNode};\n \n-    fn get_token_tree_generated(input: &str) -> (tt::Subtree, TokenMap) {\n-        let source_file = ast::SourceFile::parse(input).ok().unwrap();\n-        let tt = source_file.syntax().descendants().find_map(ast::TokenTree::cast).unwrap();\n-        ast_to_token_tree(&tt).unwrap()\n-    }\n-\n     fn assert_parse_result(input: &str, expected: CfgExpr) {\n-        let (tt, _) = get_token_tree_generated(input);\n+        let (tt, _) = {\n+            let source_file = ast::SourceFile::parse(input).ok().unwrap();\n+            let tt = source_file.syntax().descendants().find_map(ast::TokenTree::cast).unwrap();\n+            ast_to_token_tree(&tt).unwrap()\n+        };\n         let cfg = CfgExpr::parse(&tt);\n         assert_eq!(cfg, expected);\n     }"}]}