{"sha": "a62cd1b44cdf34313cd0afc4e66410444bab6669", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE2MmNkMWI0NGNkZjM0MzEzY2QwYWZjNGU2NjQxMDQ0NGJhYjY2Njk=", "commit": {"author": {"name": "The8472", "email": "git@infinite-source.de", "date": "2020-05-20T23:34:05Z"}, "committer": {"name": "The8472", "email": "git@infinite-source.de", "date": "2020-09-03T18:59:33Z"}, "message": "fix benchmark compile errors", "tree": {"sha": "7d414c8d545b1596bb85d3eaa7c5161ce0e7e224", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7d414c8d545b1596bb85d3eaa7c5161ce0e7e224"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a62cd1b44cdf34313cd0afc4e66410444bab6669", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a62cd1b44cdf34313cd0afc4e66410444bab6669", "html_url": "https://github.com/rust-lang/rust/commit/a62cd1b44cdf34313cd0afc4e66410444bab6669", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a62cd1b44cdf34313cd0afc4e66410444bab6669/comments", "author": {"login": "the8472", "id": 1065730, "node_id": "MDQ6VXNlcjEwNjU3MzA=", "avatar_url": "https://avatars.githubusercontent.com/u/1065730?v=4", "gravatar_id": "", "url": "https://api.github.com/users/the8472", "html_url": "https://github.com/the8472", "followers_url": "https://api.github.com/users/the8472/followers", "following_url": "https://api.github.com/users/the8472/following{/other_user}", "gists_url": "https://api.github.com/users/the8472/gists{/gist_id}", "starred_url": "https://api.github.com/users/the8472/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/the8472/subscriptions", "organizations_url": "https://api.github.com/users/the8472/orgs", "repos_url": "https://api.github.com/users/the8472/repos", "events_url": "https://api.github.com/users/the8472/events{/privacy}", "received_events_url": "https://api.github.com/users/the8472/received_events", "type": "User", "site_admin": false}, "committer": {"login": "the8472", "id": 1065730, "node_id": "MDQ6VXNlcjEwNjU3MzA=", "avatar_url": "https://avatars.githubusercontent.com/u/1065730?v=4", "gravatar_id": "", "url": "https://api.github.com/users/the8472", "html_url": "https://github.com/the8472", "followers_url": "https://api.github.com/users/the8472/followers", "following_url": "https://api.github.com/users/the8472/following{/other_user}", "gists_url": "https://api.github.com/users/the8472/gists{/gist_id}", "starred_url": "https://api.github.com/users/the8472/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/the8472/subscriptions", "organizations_url": "https://api.github.com/users/the8472/orgs", "repos_url": "https://api.github.com/users/the8472/repos", "events_url": "https://api.github.com/users/the8472/events{/privacy}", "received_events_url": "https://api.github.com/users/the8472/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bec9f9223cefb50cdb4a9b8a7d056545fa3641c2", "url": "https://api.github.com/repos/rust-lang/rust/commits/bec9f9223cefb50cdb4a9b8a7d056545fa3641c2", "html_url": "https://github.com/rust-lang/rust/commit/bec9f9223cefb50cdb4a9b8a7d056545fa3641c2"}], "stats": {"total": 21, "additions": 9, "deletions": 12}, "files": [{"sha": "5ba3e0e00572c052f509c3e155e42dd1ca63a48f", "filename": "library/alloc/benches/vec.rs", "status": "modified", "additions": 9, "deletions": 12, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/a62cd1b44cdf34313cd0afc4e66410444bab6669/library%2Falloc%2Fbenches%2Fvec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a62cd1b44cdf34313cd0afc4e66410444bab6669/library%2Falloc%2Fbenches%2Fvec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Falloc%2Fbenches%2Fvec.rs?ref=a62cd1b44cdf34313cd0afc4e66410444bab6669", "patch": "@@ -244,7 +244,7 @@ fn bench_extend_recycle(b: &mut Bencher) {\n         let tmp = std::mem::replace(&mut data, Vec::new());\n         let mut to_extend = black_box(Vec::new());\n         to_extend.extend(tmp.into_iter());\n-        std::mem::replace(&mut data, black_box(to_extend));\n+        data = black_box(to_extend);\n     });\n \n     black_box(data);\n@@ -502,16 +502,13 @@ fn bench_in_place_recycle(b: &mut test::Bencher) {\n \n     b.iter(|| {\n         let tmp = std::mem::replace(&mut data, Vec::new());\n-        std::mem::replace(\n-            &mut data,\n-            black_box(\n-                tmp.into_iter()\n-                    .enumerate()\n-                    .map(|(idx, e)| idx.wrapping_add(e))\n-                    .fuse()\n-                    .peekable()\n-                    .collect::<Vec<usize>>(),\n-            ),\n+        data = black_box(\n+            tmp.into_iter()\n+                .enumerate()\n+                .map(|(idx, e)| idx.wrapping_add(e))\n+                .fuse()\n+                .peekable()\n+                .collect::<Vec<usize>>(),\n         );\n     });\n }\n@@ -532,7 +529,7 @@ fn bench_in_place_zip_recycle(b: &mut test::Bencher) {\n             .map(|(i, (d, s))| d.wrapping_add(i as u8) ^ s)\n             .collect::<Vec<_>>();\n         assert_eq!(mangled.len(), 1000);\n-        std::mem::replace(&mut data, black_box(mangled));\n+        data = black_box(mangled);\n     });\n }\n "}]}