{"sha": "f47f53078c7477d2a2f7739c8f0e295125dd6bd3", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY0N2Y1MzA3OGM3NDc3ZDJhMmY3NzM5YzhmMGUyOTUxMjVkZDZiZDM=", "commit": {"author": {"name": "varkor", "email": "github@varkor.com", "date": "2019-10-25T23:46:07Z"}, "committer": {"name": "varkor", "email": "github@varkor.com", "date": "2019-10-25T23:46:07Z"}, "message": "Make inline associated constants a future compatibility warning", "tree": {"sha": "d63b405a86273220a30b47bc9be7cac26ed51abf", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d63b405a86273220a30b47bc9be7cac26ed51abf"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f47f53078c7477d2a2f7739c8f0e295125dd6bd3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f47f53078c7477d2a2f7739c8f0e295125dd6bd3", "html_url": "https://github.com/rust-lang/rust/commit/f47f53078c7477d2a2f7739c8f0e295125dd6bd3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f47f53078c7477d2a2f7739c8f0e295125dd6bd3/comments", "author": {"login": "varkor", "id": 3943692, "node_id": "MDQ6VXNlcjM5NDM2OTI=", "avatar_url": "https://avatars.githubusercontent.com/u/3943692?v=4", "gravatar_id": "", "url": "https://api.github.com/users/varkor", "html_url": "https://github.com/varkor", "followers_url": "https://api.github.com/users/varkor/followers", "following_url": "https://api.github.com/users/varkor/following{/other_user}", "gists_url": "https://api.github.com/users/varkor/gists{/gist_id}", "starred_url": "https://api.github.com/users/varkor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/varkor/subscriptions", "organizations_url": "https://api.github.com/users/varkor/orgs", "repos_url": "https://api.github.com/users/varkor/repos", "events_url": "https://api.github.com/users/varkor/events{/privacy}", "received_events_url": "https://api.github.com/users/varkor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "varkor", "id": 3943692, "node_id": "MDQ6VXNlcjM5NDM2OTI=", "avatar_url": "https://avatars.githubusercontent.com/u/3943692?v=4", "gravatar_id": "", "url": "https://api.github.com/users/varkor", "html_url": "https://github.com/varkor", "followers_url": "https://api.github.com/users/varkor/followers", "following_url": "https://api.github.com/users/varkor/following{/other_user}", "gists_url": "https://api.github.com/users/varkor/gists{/gist_id}", "starred_url": "https://api.github.com/users/varkor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/varkor/subscriptions", "organizations_url": "https://api.github.com/users/varkor/orgs", "repos_url": "https://api.github.com/users/varkor/repos", "events_url": "https://api.github.com/users/varkor/events{/privacy}", "received_events_url": "https://api.github.com/users/varkor/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f8db8ffcf32199dd534768ed30233724dab1fc08", "url": "https://api.github.com/repos/rust-lang/rust/commits/f8db8ffcf32199dd534768ed30233724dab1fc08", "html_url": "https://github.com/rust-lang/rust/commit/f8db8ffcf32199dd534768ed30233724dab1fc08"}], "stats": {"total": 79, "additions": 54, "deletions": 25}, "files": [{"sha": "96562002aa070240c1cffeee6b91d7bf7e91fe5a", "filename": "src/librustc/hir/check_attr.rs", "status": "modified", "additions": 26, "deletions": 8, "changes": 34, "blob_url": "https://github.com/rust-lang/rust/blob/f47f53078c7477d2a2f7739c8f0e295125dd6bd3/src%2Flibrustc%2Fhir%2Fcheck_attr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f47f53078c7477d2a2f7739c8f0e295125dd6bd3/src%2Flibrustc%2Fhir%2Fcheck_attr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fhir%2Fcheck_attr.rs?ref=f47f53078c7477d2a2f7739c8f0e295125dd6bd3", "patch": "@@ -128,7 +128,7 @@ impl Target {\n \n     fn from_impl_item<'tcx>(tcx: TyCtxt<'tcx>, impl_item: &hir::ImplItem) -> Target {\n         match impl_item.kind {\n-            hir::ImplItemKind::Const(..) => Target::Const,\n+            hir::ImplItemKind::Const(..) => Target::AssocConst,\n             hir::ImplItemKind::Method(..) => {\n                 let parent_hir_id = tcx.hir().get_parent_item(impl_item.hir_id);\n                 let containing_item = tcx.hir().expect_item(parent_hir_id);\n@@ -142,8 +142,7 @@ impl Target {\n                     Target::Method(MethodKind::Inherent)\n                 }\n             }\n-            hir::ImplItemKind::TyAlias(..) => Target::TyAlias,\n-            hir::ImplItemKind::OpaqueTy(..) => Target::OpaqueTy,\n+            hir::ImplItemKind::TyAlias(..) | hir::ImplItemKind::OpaqueTy(..) => Target::AssocTy,\n         }\n     }\n }\n@@ -205,12 +204,31 @@ impl CheckAttrVisitor<'tcx> {\n                 ).emit();\n                 true\n             }\n+            // FIXME(#65833): We permit associated consts to have an `#[inline]` attribute with\n+            // just a lint, because we previously erroneously allowed it and some crates used it\n+            // accidentally, to to be compatible with crates depending on them, we can't throw an\n+            // error here.\n+            Target::AssocConst => {\n+                self.tcx.struct_span_lint_hir(\n+                    UNUSED_ATTRIBUTES,\n+                    hir_id,\n+                    attr.span,\n+                    \"`#[inline]` is ignored on constants\",\n+                ).warn(\"this was previously accepted by the compiler but is \\\n+                       being phased out; it will become a hard error in \\\n+                       a future release!\")\n+                .note(\"for more information, see issue #65833 \\\n+                       <https://github.com/rust-lang/rust/issues/65833>\")\n+                .emit();\n+                true\n+            }\n             _ => {\n-                struct_span_err!(self.tcx.sess,\n-                                 attr.span,\n-                                 E0518,\n-                                 \"attribute should be applied to function or closure\")\n-                    .span_label(*span, \"not a function or closure\")\n+                struct_span_err!(\n+                    self.tcx.sess,\n+                    attr.span,\n+                    E0518,\n+                    \"attribute should be applied to function or closure\",\n+                ).span_label(*span, \"not a function or closure\")\n                     .emit();\n                 false\n             }"}, {"sha": "8bdefbb36ae5f21c955bd9edba77e6a02b63f119", "filename": "src/test/ui/lint/inline-trait-and-foreign-items.rs", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/f47f53078c7477d2a2f7739c8f0e295125dd6bd3/src%2Ftest%2Fui%2Flint%2Finline-trait-and-foreign-items.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f47f53078c7477d2a2f7739c8f0e295125dd6bd3/src%2Ftest%2Fui%2Flint%2Finline-trait-and-foreign-items.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Finline-trait-and-foreign-items.rs?ref=f47f53078c7477d2a2f7739c8f0e295125dd6bd3", "patch": "@@ -1,8 +1,11 @@\n #![feature(extern_types)]\n #![feature(type_alias_impl_trait)]\n \n+#![warn(unused_attributes)]\n+\n trait Trait {\n-    #[inline] //~ ERROR attribute should be applied to function or closure\n+    #[inline] //~ WARN `#[inline]` is ignored on constants\n+    //~^ WARN this was previously accepted\n     const X: u32;\n \n     #[inline] //~ ERROR attribute should be applied to function or closure\n@@ -12,7 +15,8 @@ trait Trait {\n }\n \n impl Trait for () {\n-    #[inline] //~ ERROR attribute should be applied to function or closure\n+    #[inline] //~ WARN `#[inline]` is ignored on constants\n+    //~^ WARN this was previously accepted\n     const X: u32 = 0;\n \n     #[inline] //~ ERROR attribute should be applied to function or closure"}, {"sha": "6c94f88f139485efc3b77271e95b22ac8de4fd4d", "filename": "src/test/ui/lint/inline-trait-and-foreign-items.stderr", "status": "modified", "additions": 22, "deletions": 15, "changes": 37, "blob_url": "https://github.com/rust-lang/rust/blob/f47f53078c7477d2a2f7739c8f0e295125dd6bd3/src%2Ftest%2Fui%2Flint%2Finline-trait-and-foreign-items.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f47f53078c7477d2a2f7739c8f0e295125dd6bd3/src%2Ftest%2Fui%2Flint%2Finline-trait-and-foreign-items.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Finline-trait-and-foreign-items.stderr?ref=f47f53078c7477d2a2f7739c8f0e295125dd6bd3", "patch": "@@ -1,65 +1,72 @@\n error[E0518]: attribute should be applied to function or closure\n-  --> $DIR/inline-trait-and-foreign-items.rs:26:5\n+  --> $DIR/inline-trait-and-foreign-items.rs:30:5\n    |\n LL |     #[inline]\n    |     ^^^^^^^^^\n LL |     static X: u32;\n    |     -------------- not a function or closure\n \n error[E0518]: attribute should be applied to function or closure\n-  --> $DIR/inline-trait-and-foreign-items.rs:29:5\n+  --> $DIR/inline-trait-and-foreign-items.rs:33:5\n    |\n LL |     #[inline]\n    |     ^^^^^^^^^\n LL |     type T;\n    |     ------- not a function or closure\n \n-error[E0518]: attribute should be applied to function or closure\n-  --> $DIR/inline-trait-and-foreign-items.rs:5:5\n+warning: `#[inline]` is ignored on constants\n+  --> $DIR/inline-trait-and-foreign-items.rs:7:5\n    |\n LL |     #[inline]\n    |     ^^^^^^^^^\n-LL |     const X: u32;\n-   |     ------------- not a function or closure\n+   |\n+note: lint level defined here\n+  --> $DIR/inline-trait-and-foreign-items.rs:4:9\n+   |\n+LL | #![warn(unused_attributes)]\n+   |         ^^^^^^^^^^^^^^^^^\n+   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n+   = note: for more information, see issue #65833 <https://github.com/rust-lang/rust/issues/65833>\n \n error[E0518]: attribute should be applied to function or closure\n-  --> $DIR/inline-trait-and-foreign-items.rs:8:5\n+  --> $DIR/inline-trait-and-foreign-items.rs:11:5\n    |\n LL |     #[inline]\n    |     ^^^^^^^^^\n LL |     type T;\n    |     ------- not a function or closure\n \n-error[E0518]: attribute should be applied to function or closure\n-  --> $DIR/inline-trait-and-foreign-items.rs:15:5\n+warning: `#[inline]` is ignored on constants\n+  --> $DIR/inline-trait-and-foreign-items.rs:18:5\n    |\n LL |     #[inline]\n    |     ^^^^^^^^^\n-LL |     const X: u32 = 0;\n-   |     ----------------- not a function or closure\n+   |\n+   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n+   = note: for more information, see issue #65833 <https://github.com/rust-lang/rust/issues/65833>\n \n error[E0518]: attribute should be applied to function or closure\n-  --> $DIR/inline-trait-and-foreign-items.rs:18:5\n+  --> $DIR/inline-trait-and-foreign-items.rs:22:5\n    |\n LL |     #[inline]\n    |     ^^^^^^^^^\n LL |     type T = Self;\n    |     -------------- not a function or closure\n \n error[E0518]: attribute should be applied to function or closure\n-  --> $DIR/inline-trait-and-foreign-items.rs:21:5\n+  --> $DIR/inline-trait-and-foreign-items.rs:25:5\n    |\n LL |     #[inline]\n    |     ^^^^^^^^^\n LL |     type U = impl Trait;\n    |     -------------------- not a function or closure\n \n error: could not find defining uses\n-  --> $DIR/inline-trait-and-foreign-items.rs:22:5\n+  --> $DIR/inline-trait-and-foreign-items.rs:26:5\n    |\n LL |     type U = impl Trait;\n    |     ^^^^^^^^^^^^^^^^^^^^\n \n-error: aborting due to 8 previous errors\n+error: aborting due to 6 previous errors\n \n For more information about this error, try `rustc --explain E0518`."}]}