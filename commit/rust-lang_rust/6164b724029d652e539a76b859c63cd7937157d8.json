{"sha": "6164b724029d652e539a76b859c63cd7937157d8", "node_id": "MDY6Q29tbWl0NzI0NzEyOjYxNjRiNzI0MDI5ZDY1MmU1MzlhNzZiODU5YzYzY2Q3OTM3MTU3ZDg=", "commit": {"author": {"name": "Marijn Haverbeke", "email": "marijnh@gmail.com", "date": "2011-09-26T01:56:39Z"}, "committer": {"name": "Marijn Haverbeke", "email": "marijnh@gmail.com", "date": "2011-09-26T01:56:39Z"}, "message": "Fix bug in mutability-checking pass\n\nIt wasn't properly handling function arguments.", "tree": {"sha": "144444a26bfc8e459638fd6795a2467822594426", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/144444a26bfc8e459638fd6795a2467822594426"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6164b724029d652e539a76b859c63cd7937157d8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6164b724029d652e539a76b859c63cd7937157d8", "html_url": "https://github.com/rust-lang/rust/commit/6164b724029d652e539a76b859c63cd7937157d8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6164b724029d652e539a76b859c63cd7937157d8/comments", "author": {"login": "marijnh", "id": 144427, "node_id": "MDQ6VXNlcjE0NDQyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/144427?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marijnh", "html_url": "https://github.com/marijnh", "followers_url": "https://api.github.com/users/marijnh/followers", "following_url": "https://api.github.com/users/marijnh/following{/other_user}", "gists_url": "https://api.github.com/users/marijnh/gists{/gist_id}", "starred_url": "https://api.github.com/users/marijnh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marijnh/subscriptions", "organizations_url": "https://api.github.com/users/marijnh/orgs", "repos_url": "https://api.github.com/users/marijnh/repos", "events_url": "https://api.github.com/users/marijnh/events{/privacy}", "received_events_url": "https://api.github.com/users/marijnh/received_events", "type": "User", "site_admin": false}, "committer": {"login": "marijnh", "id": 144427, "node_id": "MDQ6VXNlcjE0NDQyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/144427?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marijnh", "html_url": "https://github.com/marijnh", "followers_url": "https://api.github.com/users/marijnh/followers", "following_url": "https://api.github.com/users/marijnh/following{/other_user}", "gists_url": "https://api.github.com/users/marijnh/gists{/gist_id}", "starred_url": "https://api.github.com/users/marijnh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marijnh/subscriptions", "organizations_url": "https://api.github.com/users/marijnh/orgs", "repos_url": "https://api.github.com/users/marijnh/repos", "events_url": "https://api.github.com/users/marijnh/events{/privacy}", "received_events_url": "https://api.github.com/users/marijnh/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "203bc16e7b52341fa5e1f47d21b27fcf118ded59", "url": "https://api.github.com/repos/rust-lang/rust/commits/203bc16e7b52341fa5e1f47d21b27fcf118ded59", "html_url": "https://github.com/rust-lang/rust/commit/203bc16e7b52341fa5e1f47d21b27fcf118ded59"}], "stats": {"total": 23, "additions": 13, "deletions": 10}, "files": [{"sha": "7952353ca2f9edcbc893286a09f412472a6387b7", "filename": "src/comp/middle/mut.rs", "status": "modified", "additions": 13, "deletions": 10, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/6164b724029d652e539a76b859c63cd7937157d8/src%2Fcomp%2Fmiddle%2Fmut.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6164b724029d652e539a76b859c63cd7937157d8/src%2Fcomp%2Fmiddle%2Fmut.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Fmut.rs?ref=6164b724029d652e539a76b859c63cd7937157d8", "patch": "@@ -124,14 +124,11 @@ fn check_crate(tcx: ty::ctxt, crate: @crate) -> mut_map {\n tag msg { msg_assign; msg_move_out; msg_mut_ref; }\n \n fn mk_err(cx: @ctx, span: syntax::codemap::span, msg: msg, name: str) {\n-    cx.tcx.sess.span_err(span,\n-                         alt msg {\n-                           msg_assign. { \"assigning to \" + name }\n-                           msg_move_out. { \"moving out of \" + name }\n-                           msg_mut_ref. {\n-                             \"passing \" + name + \" by mutable reference\"\n-                           }\n-                         });\n+    cx.tcx.sess.span_err(span, alt msg {\n+      msg_assign. { \"assigning to \" + name }\n+      msg_move_out. { \"moving out of \" + name }\n+      msg_mut_ref. { \"passing \" + name + \" by mutable reference\" }\n+    });\n }\n \n fn visit_decl(cx: @ctx, d: @decl, e: (), v: visit::vt<()>) {\n@@ -183,7 +180,9 @@ fn check_lval(cx: @ctx, dest: @expr, msg: msg) {\n       _ {\n         let root = expr_root(cx.tcx, dest, false);\n         if vec::len(*root.ds) == 0u {\n-            if msg == msg_assign { mk_err(cx, dest.span, msg, \"non-lvalue\"); }\n+            if msg != msg_move_out {\n+                mk_err(cx, dest.span, msg, \"non-lvalue\");\n+            }\n         } else if !root.ds[0].mut {\n             let name =\n                 alt root.ds[0].kind {\n@@ -223,7 +222,11 @@ fn check_call(cx: @ctx, f: @expr, args: [@expr]) {\n     let arg_ts = ty::ty_fn_args(cx.tcx, ty::expr_ty(cx.tcx, f));\n     let i = 0u;\n     for arg_t: ty::arg in arg_ts {\n-        if arg_t.mode != by_ref { check_lval(cx, args[i], msg_mut_ref); }\n+        alt arg_t.mode {\n+          by_mut_ref. { check_lval(cx, args[i], msg_mut_ref); }\n+          by_move. { check_lval(cx, args[i], msg_move_out); }\n+          by_ref. {}\n+        }\n         i += 1u;\n     }\n }"}]}