{"sha": "7c31df9d6c7f0baf38c331607dbc51be50d9eb84", "node_id": "C_kwDOAAsO6NoAKDdjMzFkZjlkNmM3ZjBiYWYzOGMzMzE2MDdkYmM1MWJlNTBkOWViODQ", "commit": {"author": {"name": "Michael Goulet", "email": "michael@errs.io", "date": "2023-05-12T00:43:08Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2023-05-12T00:43:08Z"}, "message": "Rollup merge of #111444 - cjgillot:issue-111400, r=oli-obk\n\nOnly warn single-use lifetime when the binders match.\n\nFixes https://github.com/rust-lang/rust/issues/111400", "tree": {"sha": "e1c9192842ce5f405da86fad177ee55a519ac127", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e1c9192842ce5f405da86fad177ee55a519ac127"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7c31df9d6c7f0baf38c331607dbc51be50d9eb84", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJkXYucCRBK7hj4Ov3rIwAAQx8IAHzgeqb+vx67NKewgLmMKQxt\nQ/KV85/yNu+3BKNAX4ZFrTpGfHe+TOean72u4WAewfkmajpXYAGSmp6wtWEKkRxm\ngnV+nZmU4OGahWtVkNyCDcTM2T1Wy3Ddik4Rawc0/V87/dvr8hjsZOofREJ67XYo\niV0X1c/L0Z9IjjmavYIKjx1lHNGZKgqgopISflfb75Vi4ifHF4lLpU8laqLKo7FC\ndnEHwc40d/ZxZ5lG8P20Yr9vJFIAE5nJEkdtEEFmjEOmsTXio9Of8BRx1VCe2xBb\nzM5MjibPs6bW+TSWWp4m7XOafjixZLeOGR72qhGa+Wpjxl6SrqQShwkcR8nEItI=\n=G0AC\n-----END PGP SIGNATURE-----\n", "payload": "tree e1c9192842ce5f405da86fad177ee55a519ac127\nparent d4d15e8a7450312debdb953689095f30fe33900d\nparent a2fe9935ea6b2cef2cc9b3aca6d1fee3ae15524b\nauthor Michael Goulet <michael@errs.io> 1683852188 -0700\ncommitter GitHub <noreply@github.com> 1683852188 -0700\n\nRollup merge of #111444 - cjgillot:issue-111400, r=oli-obk\n\nOnly warn single-use lifetime when the binders match.\n\nFixes https://github.com/rust-lang/rust/issues/111400\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7c31df9d6c7f0baf38c331607dbc51be50d9eb84", "html_url": "https://github.com/rust-lang/rust/commit/7c31df9d6c7f0baf38c331607dbc51be50d9eb84", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7c31df9d6c7f0baf38c331607dbc51be50d9eb84/comments", "author": {"login": "compiler-errors", "id": 3674314, "node_id": "MDQ6VXNlcjM2NzQzMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3674314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/compiler-errors", "html_url": "https://github.com/compiler-errors", "followers_url": "https://api.github.com/users/compiler-errors/followers", "following_url": "https://api.github.com/users/compiler-errors/following{/other_user}", "gists_url": "https://api.github.com/users/compiler-errors/gists{/gist_id}", "starred_url": "https://api.github.com/users/compiler-errors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/compiler-errors/subscriptions", "organizations_url": "https://api.github.com/users/compiler-errors/orgs", "repos_url": "https://api.github.com/users/compiler-errors/repos", "events_url": "https://api.github.com/users/compiler-errors/events{/privacy}", "received_events_url": "https://api.github.com/users/compiler-errors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d4d15e8a7450312debdb953689095f30fe33900d", "url": "https://api.github.com/repos/rust-lang/rust/commits/d4d15e8a7450312debdb953689095f30fe33900d", "html_url": "https://github.com/rust-lang/rust/commit/d4d15e8a7450312debdb953689095f30fe33900d"}, {"sha": "a2fe9935ea6b2cef2cc9b3aca6d1fee3ae15524b", "url": "https://api.github.com/repos/rust-lang/rust/commits/a2fe9935ea6b2cef2cc9b3aca6d1fee3ae15524b", "html_url": "https://github.com/rust-lang/rust/commit/a2fe9935ea6b2cef2cc9b3aca6d1fee3ae15524b"}], "stats": {"total": 17, "additions": 12, "deletions": 5}, "files": [{"sha": "d7509cbf10e331da66a5b1def64261b4a4ab0a98", "filename": "compiler/rustc_resolve/src/late.rs", "status": "modified", "additions": 11, "deletions": 5, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/7c31df9d6c7f0baf38c331607dbc51be50d9eb84/compiler%2Frustc_resolve%2Fsrc%2Flate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7c31df9d6c7f0baf38c331607dbc51be50d9eb84/compiler%2Frustc_resolve%2Fsrc%2Flate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_resolve%2Fsrc%2Flate.rs?ref=7c31df9d6c7f0baf38c331607dbc51be50d9eb84", "patch": "@@ -1482,7 +1482,7 @@ impl<'a: 'ast, 'b, 'ast, 'tcx> LateResolutionVisitor<'a, 'b, 'ast, 'tcx> {\n             if let Some(&(_, res)) = rib.bindings.get(&normalized_ident) {\n                 self.record_lifetime_res(lifetime.id, res, LifetimeElisionCandidate::Named);\n \n-                if let LifetimeRes::Param { param, .. } = res {\n+                if let LifetimeRes::Param { param, binder } = res {\n                     match self.lifetime_uses.entry(param) {\n                         Entry::Vacant(v) => {\n                             debug!(\"First use of {:?} at {:?}\", res, ident.span);\n@@ -1496,10 +1496,16 @@ impl<'a: 'ast, 'b, 'ast, 'tcx> LateResolutionVisitor<'a, 'b, 'ast, 'tcx> {\n                                     LifetimeRibKind::Item\n                                     | LifetimeRibKind::AnonymousReportError\n                                     | LifetimeRibKind::ElisionFailure => Some(LifetimeUseSet::Many),\n-                                    // An anonymous lifetime is legal here, go ahead.\n-                                    LifetimeRibKind::AnonymousCreateParameter { .. } => {\n-                                        Some(LifetimeUseSet::One { use_span: ident.span, use_ctxt })\n-                                    }\n+                                    // An anonymous lifetime is legal here, and bound to the right\n+                                    // place, go ahead.\n+                                    LifetimeRibKind::AnonymousCreateParameter {\n+                                        binder: anon_binder,\n+                                        ..\n+                                    } => Some(if binder == anon_binder {\n+                                        LifetimeUseSet::One { use_span: ident.span, use_ctxt }\n+                                    } else {\n+                                        LifetimeUseSet::Many\n+                                    }),\n                                     // Only report if eliding the lifetime would have the same\n                                     // semantics.\n                                     LifetimeRibKind::Elided(r) => Some(if res == r {"}, {"sha": "88327f864237ac2a9ad4849bbbc033059051de1b", "filename": "tests/ui/associated-inherent-types/issue-109790.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/7c31df9d6c7f0baf38c331607dbc51be50d9eb84/tests%2Fui%2Fassociated-inherent-types%2Fissue-109790.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7c31df9d6c7f0baf38c331607dbc51be50d9eb84/tests%2Fui%2Fassociated-inherent-types%2Fissue-109790.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fassociated-inherent-types%2Fissue-109790.rs?ref=7c31df9d6c7f0baf38c331607dbc51be50d9eb84", "patch": "@@ -2,6 +2,7 @@\n \n #![feature(inherent_associated_types)]\n #![allow(incomplete_features)]\n+#![deny(single_use_lifetimes)]\n \n struct Foo<T>(T);\n "}]}