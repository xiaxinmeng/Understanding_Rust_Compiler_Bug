{"sha": "423915590b08896ecc845b8b22910cb98c4c7e36", "node_id": "C_kwDOAAsO6NoAKDQyMzkxNTU5MGIwODg5NmVjYzg0NWI4YjIyOTEwY2I5OGM0YzdlMzY", "commit": {"author": {"name": "Oli Scherer", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2022-07-11T10:11:28Z"}, "committer": {"name": "Oli Scherer", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2022-07-11T10:11:28Z"}, "message": "More obvious closure name", "tree": {"sha": "5c9ba790cf3aecda5e0899ed3f22558fc6ba5ad9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5c9ba790cf3aecda5e0899ed3f22558fc6ba5ad9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/423915590b08896ecc845b8b22910cb98c4c7e36", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/423915590b08896ecc845b8b22910cb98c4c7e36", "html_url": "https://github.com/rust-lang/rust/commit/423915590b08896ecc845b8b22910cb98c4c7e36", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/423915590b08896ecc845b8b22910cb98c4c7e36/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "69b1b3c011143b573c904f0759d187588cc457c0", "url": "https://api.github.com/repos/rust-lang/rust/commits/69b1b3c011143b573c904f0759d187588cc457c0", "html_url": "https://github.com/rust-lang/rust/commit/69b1b3c011143b573c904f0759d187588cc457c0"}], "stats": {"total": 8, "additions": 4, "deletions": 4}, "files": [{"sha": "8cbc0169bc7a42e27d0cefa5104e9513ee1e21fe", "filename": "compiler/rustc_middle/src/ty/layout.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/423915590b08896ecc845b8b22910cb98c4c7e36/compiler%2Frustc_middle%2Fsrc%2Fty%2Flayout.rs", "raw_url": "https://github.com/rust-lang/rust/raw/423915590b08896ecc845b8b22910cb98c4c7e36/compiler%2Frustc_middle%2Fsrc%2Fty%2Flayout.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fty%2Flayout.rs?ref=423915590b08896ecc845b8b22910cb98c4c7e36", "patch": "@@ -1078,7 +1078,7 @@ impl<'tcx> LayoutCx<'tcx, TyCtxt<'tcx>> {\n                     st.variants = Variants::Single { index: v };\n \n                     if def.is_unsafe_cell() {\n-                        let fill = |scalar: &mut _| match scalar {\n+                        let hide_niches = |scalar: &mut _| match scalar {\n                             Scalar::Initialized { value, valid_range } => {\n                                 *valid_range = WrappingRange::full(value.size(dl))\n                             }\n@@ -1087,10 +1087,10 @@ impl<'tcx> LayoutCx<'tcx, TyCtxt<'tcx>> {\n                         };\n                         match &mut st.abi {\n                             Abi::Uninhabited => {}\n-                            Abi::Scalar(scalar) => fill(scalar),\n+                            Abi::Scalar(scalar) => hide_niches(scalar),\n                             Abi::ScalarPair(a, b) => {\n-                                fill(a);\n-                                fill(b);\n+                                hide_niches(a);\n+                                hide_niches(b);\n                             }\n                             Abi::Vector { element, count: _ } => {\n                                 // Until we support types other than floats and integers in SIMD,"}]}