{"sha": "d42af68e0362ef7a43a9a3d0e216a7d83b291e20", "node_id": "C_kwDOAAsO6NoAKGQ0MmFmNjhlMDM2MmVmN2E0M2E5YTNkMGUyMTZhN2Q4M2IyOTFlMjA", "commit": {"author": {"name": "Serial", "email": "69764315+Serial-ATA@users.noreply.github.com", "date": "2022-06-23T15:50:11Z"}, "committer": {"name": "Serial", "email": "69764315+Serial-ATA@users.noreply.github.com", "date": "2022-06-23T16:16:34Z"}, "message": "Add `cargo dev dogfood`", "tree": {"sha": "e9fbacd2777725fbe6f8e0941e79a35589c282a9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e9fbacd2777725fbe6f8e0941e79a35589c282a9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d42af68e0362ef7a43a9a3d0e216a7d83b291e20", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d42af68e0362ef7a43a9a3d0e216a7d83b291e20", "html_url": "https://github.com/rust-lang/rust/commit/d42af68e0362ef7a43a9a3d0e216a7d83b291e20", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d42af68e0362ef7a43a9a3d0e216a7d83b291e20/comments", "author": {"login": "Serial-ATA", "id": 69764315, "node_id": "MDQ6VXNlcjY5NzY0MzE1", "avatar_url": "https://avatars.githubusercontent.com/u/69764315?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Serial-ATA", "html_url": "https://github.com/Serial-ATA", "followers_url": "https://api.github.com/users/Serial-ATA/followers", "following_url": "https://api.github.com/users/Serial-ATA/following{/other_user}", "gists_url": "https://api.github.com/users/Serial-ATA/gists{/gist_id}", "starred_url": "https://api.github.com/users/Serial-ATA/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Serial-ATA/subscriptions", "organizations_url": "https://api.github.com/users/Serial-ATA/orgs", "repos_url": "https://api.github.com/users/Serial-ATA/repos", "events_url": "https://api.github.com/users/Serial-ATA/events{/privacy}", "received_events_url": "https://api.github.com/users/Serial-ATA/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Serial-ATA", "id": 69764315, "node_id": "MDQ6VXNlcjY5NzY0MzE1", "avatar_url": "https://avatars.githubusercontent.com/u/69764315?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Serial-ATA", "html_url": "https://github.com/Serial-ATA", "followers_url": "https://api.github.com/users/Serial-ATA/followers", "following_url": "https://api.github.com/users/Serial-ATA/following{/other_user}", "gists_url": "https://api.github.com/users/Serial-ATA/gists{/gist_id}", "starred_url": "https://api.github.com/users/Serial-ATA/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Serial-ATA/subscriptions", "organizations_url": "https://api.github.com/users/Serial-ATA/orgs", "repos_url": "https://api.github.com/users/Serial-ATA/repos", "events_url": "https://api.github.com/users/Serial-ATA/events{/privacy}", "received_events_url": "https://api.github.com/users/Serial-ATA/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2cc5211584c7d813860706bafa49ee70c38a1f7b", "url": "https://api.github.com/repos/rust-lang/rust/commits/2cc5211584c7d813860706bafa49ee70c38a1f7b", "html_url": "https://github.com/rust-lang/rust/commit/2cc5211584c7d813860706bafa49ee70c38a1f7b"}], "stats": {"total": 69, "additions": 64, "deletions": 5}, "files": [{"sha": "b69e9f649ec78c1c26f85d9b93f64b635b9ae9d8", "filename": "clippy_dev/src/dogfood.rs", "status": "added", "additions": 33, "deletions": 0, "changes": 33, "blob_url": "https://github.com/rust-lang/rust/blob/d42af68e0362ef7a43a9a3d0e216a7d83b291e20/clippy_dev%2Fsrc%2Fdogfood.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d42af68e0362ef7a43a9a3d0e216a7d83b291e20/clippy_dev%2Fsrc%2Fdogfood.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_dev%2Fsrc%2Fdogfood.rs?ref=d42af68e0362ef7a43a9a3d0e216a7d83b291e20", "patch": "@@ -0,0 +1,33 @@\n+use crate::clippy_project_root;\n+use std::process::Command;\n+\n+/// # Panics\n+///\n+/// Panics if unable to run the dogfood test\n+pub fn dogfood(fix: bool, allow_dirty: bool, allow_staged: bool) {\n+    let mut cmd = Command::new(\"cargo\");\n+\n+    cmd.current_dir(clippy_project_root())\n+        .args([\"test\", \"--test\", \"dogfood\"])\n+        .args([\"--features\", \"internal\"])\n+        .args([\"--\", \"dogfood_clippy\"]);\n+\n+    let mut dogfood_args = Vec::new();\n+    if fix {\n+        dogfood_args.push(\"--fix\");\n+    }\n+\n+    if allow_dirty {\n+        dogfood_args.push(\"--allow-dirty\");\n+    }\n+\n+    if allow_staged {\n+        dogfood_args.push(\"--allow-staged\");\n+    }\n+\n+    cmd.env(\"__CLIPPY_DOGFOOD_ARGS\", dogfood_args.join(\" \"));\n+\n+    let output = cmd.output().expect(\"failed to run command\");\n+\n+    println!(\"{}\", String::from_utf8_lossy(&output.stdout));\n+}"}, {"sha": "82574a8e64b0ae028eb64769914837fd8c148553", "filename": "clippy_dev/src/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d42af68e0362ef7a43a9a3d0e216a7d83b291e20/clippy_dev%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d42af68e0362ef7a43a9a3d0e216a7d83b291e20/clippy_dev%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_dev%2Fsrc%2Flib.rs?ref=d42af68e0362ef7a43a9a3d0e216a7d83b291e20", "patch": "@@ -11,6 +11,7 @@ extern crate rustc_lexer;\n use std::path::PathBuf;\n \n pub mod bless;\n+pub mod dogfood;\n pub mod fmt;\n pub mod lint;\n pub mod new_lint;"}, {"sha": "41eda842f9579ac38f3d8d484021dbc8f9e1f5b4", "filename": "clippy_dev/src/main.rs", "status": "modified", "additions": 20, "deletions": 1, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/d42af68e0362ef7a43a9a3d0e216a7d83b291e20/clippy_dev%2Fsrc%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d42af68e0362ef7a43a9a3d0e216a7d83b291e20/clippy_dev%2Fsrc%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_dev%2Fsrc%2Fmain.rs?ref=d42af68e0362ef7a43a9a3d0e216a7d83b291e20", "patch": "@@ -3,15 +3,23 @@\n #![warn(rust_2018_idioms, unused_lifetimes)]\n \n use clap::{Arg, ArgAction, ArgMatches, Command, PossibleValue};\n-use clippy_dev::{bless, fmt, lint, new_lint, serve, setup, update_lints};\n+use clippy_dev::{bless, dogfood, fmt, lint, new_lint, serve, setup, update_lints};\n use indoc::indoc;\n+\n fn main() {\n     let matches = get_clap_config();\n \n     match matches.subcommand() {\n         Some((\"bless\", matches)) => {\n             bless::bless(matches.contains_id(\"ignore-timestamp\"));\n         },\n+        Some((\"dogfood\", matches)) => {\n+            dogfood::dogfood(\n+                matches.contains_id(\"fix\"),\n+                matches.contains_id(\"allow-dirty\"),\n+                matches.contains_id(\"allow-staged\"),\n+            );\n+        },\n         Some((\"fmt\", matches)) => {\n             fmt::run(matches.contains_id(\"check\"), matches.contains_id(\"verbose\"));\n         },\n@@ -98,6 +106,17 @@ fn get_clap_config() -> ArgMatches {\n                     .long(\"ignore-timestamp\")\n                     .help(\"Include files updated before clippy was built\"),\n             ),\n+            Command::new(\"dogfood\").about(\"Runs the dogfood test\").args([\n+                Arg::new(\"fix\").long(\"fix\").help(\"Apply the suggestions when possible\"),\n+                Arg::new(\"allow-dirty\")\n+                    .long(\"allow-dirty\")\n+                    .help(\"Fix code even if the working directory has changes\")\n+                    .requires(\"fix\"),\n+                Arg::new(\"allow-staged\")\n+                    .long(\"allow-staged\")\n+                    .help(\"Fix code even if the working directory has staged changes\")\n+                    .requires(\"fix\"),\n+            ]),\n             Command::new(\"fmt\")\n                 .about(\"Run rustfmt on all projects and tests\")\n                 .args(["}, {"sha": "5697e8680cd6f86779a303edfd5b63d940e8da14", "filename": "tests/dogfood.rs", "status": "modified", "additions": 10, "deletions": 4, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/d42af68e0362ef7a43a9a3d0e216a7d83b291e20/tests%2Fdogfood.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d42af68e0362ef7a43a9a3d0e216a7d83b291e20/tests%2Fdogfood.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fdogfood.rs?ref=d42af68e0362ef7a43a9a3d0e216a7d83b291e20", "patch": "@@ -74,10 +74,16 @@ fn run_clippy_for_package(project: &str, args: &[&str]) {\n         .env(\"CARGO_INCREMENTAL\", \"0\")\n         .arg(\"clippy\")\n         .arg(\"--all-targets\")\n-        .arg(\"--all-features\")\n-        .arg(\"--\")\n-        .args(args)\n-        .arg(\"-Cdebuginfo=0\"); // disable debuginfo to generate less data in the target dir\n+        .arg(\"--all-features\");\n+\n+    if let Ok(dogfood_args) = std::env::var(\"__CLIPPY_DOGFOOD_ARGS\") {\n+        for arg in dogfood_args.split_whitespace() {\n+            command.arg(arg);\n+        }\n+    }\n+\n+    command.arg(\"--\").args(args);\n+    command.arg(\"-Cdebuginfo=0\"); // disable debuginfo to generate less data in the target dir\n \n     if cfg!(feature = \"internal\") {\n         // internal lints only exist if we build with the internal feature"}]}