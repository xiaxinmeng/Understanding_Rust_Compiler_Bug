{"sha": "f5ce3bf15d5f636bb73b7aae671b3a9e9681f38e", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY1Y2UzYmYxNWQ1ZjYzNmJiNzNiN2FhZTY3MWIzYTllOTY4MWYzOGU=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2011-08-18T22:00:12Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2011-08-18T22:01:49Z"}, "message": "More misc ivec->vec renaming", "tree": {"sha": "dc32b6ef3e3413458ef34ebc85b322cca28f0438", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/dc32b6ef3e3413458ef34ebc85b322cca28f0438"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f5ce3bf15d5f636bb73b7aae671b3a9e9681f38e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f5ce3bf15d5f636bb73b7aae671b3a9e9681f38e", "html_url": "https://github.com/rust-lang/rust/commit/f5ce3bf15d5f636bb73b7aae671b3a9e9681f38e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f5ce3bf15d5f636bb73b7aae671b3a9e9681f38e/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "223f6017c796898722c0fcb78fabf973120e1344", "url": "https://api.github.com/repos/rust-lang/rust/commits/223f6017c796898722c0fcb78fabf973120e1344", "html_url": "https://github.com/rust-lang/rust/commit/223f6017c796898722c0fcb78fabf973120e1344"}], "stats": {"total": 18, "additions": 9, "deletions": 9}, "files": [{"sha": "cf46e8b2a0fb24542c434163ea9fb71514b1a151", "filename": "src/comp/middle/ty.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/f5ce3bf15d5f636bb73b7aae671b3a9e9681f38e/src%2Fcomp%2Fmiddle%2Fty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f5ce3bf15d5f636bb73b7aae671b3a9e9681f38e/src%2Fcomp%2Fmiddle%2Fty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Fty.rs?ref=f5ce3bf15d5f636bb73b7aae671b3a9e9681f38e", "patch": "@@ -1348,7 +1348,7 @@ fn type_param(cx: &ctxt, ty: &t) -> option::t<uint> {\n     ret none;\n }\n \n-// Returns an ivec of all the type variables\n+// Returns a vec of all the type variables\n // occurring in t. It may contain duplicates.\n fn vars_in_type(cx:&ctxt, ty: &t) -> [int] {\n     fn collect_var(cx:&ctxt, vars: &@mutable [int], ty: t) {\n@@ -1362,7 +1362,7 @@ fn vars_in_type(cx:&ctxt, ty: &t) -> [int] {\n     let rslt: @mutable [int] = @mutable (~[]);\n     walk_ty(cx, bind collect_var(cx, rslt, _), ty);\n     // Works because of a \"convenient\" bug that lets us\n-    // return a mutable ivec as if it's immutable\n+    // return a mutable vec as if it's immutable\n     ret *rslt;\n }\n "}, {"sha": "9b8a5e28e095e578ca63e279c30d54bab00b3a47", "filename": "src/comp/syntax/ext/simplext.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f5ce3bf15d5f636bb73b7aae671b3a9e9681f38e/src%2Fcomp%2Fsyntax%2Fext%2Fsimplext.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f5ce3bf15d5f636bb73b7aae671b3a9e9681f38e/src%2Fcomp%2Fsyntax%2Fext%2Fsimplext.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fsyntax%2Fext%2Fsimplext.rs?ref=f5ce3bf15d5f636bb73b7aae671b3a9e9681f38e", "patch": "@@ -39,7 +39,7 @@ fn path_to_ident(pth: &path) -> option::t<ident> {\n     ret none;\n }\n \n-//an ivec of binders might be a little big.\n+//a vec of binders might be a little big.\n type clause = {params: binders, body: @expr};\n \n /* logically, an arb_depth should contain only one kind of matchable */"}, {"sha": "124a1e947f11a4564284dadbe08704cc31be03cb", "filename": "src/comp/syntax/untyped_ast.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/f5ce3bf15d5f636bb73b7aae671b3a9e9681f38e/src%2Fcomp%2Fsyntax%2Funtyped_ast.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f5ce3bf15d5f636bb73b7aae671b3a9e9681f38e/src%2Fcomp%2Fsyntax%2Funtyped_ast.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fsyntax%2Funtyped_ast.rs?ref=f5ce3bf15d5f636bb73b7aae671b3a9e9681f38e", "patch": "@@ -1,4 +1,4 @@\n-import std::ivec;\n+import std::vec;\n import std::vec::map;\n import std::option;\n import std::option::some;\n@@ -410,7 +410,7 @@ fn cv_crate(ctx: &ctx, ut: &@ast_node) -> @crate {\n fn cv_crate_cfg(ctx: &ctx, ut: &@ast_node) -> crate_cfg {\n     ret alt *ut {\n       branch(n_crate_cfg., _, meta_items) {\n-        ivec::map(bind cv_meta_item(ctx,_), meta_items)\n+        vec::map(bind cv_meta_item(ctx,_), meta_items)\n       }\n       branch(_, sp, _) { ctx.ff(sp,\"Invalid crate_cfg\") }\n     };"}, {"sha": "bfb796916a393b09ff52c0edf7fdd92c02b516f8", "filename": "src/test/compile-fail/bad-module.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/f5ce3bf15d5f636bb73b7aae671b3a9e9681f38e/src%2Ftest%2Fcompile-fail%2Fbad-module.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f5ce3bf15d5f636bb73b7aae671b3a9e9681f38e/src%2Ftest%2Fcompile-fail%2Fbad-module.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fbad-module.rs?ref=f5ce3bf15d5f636bb73b7aae671b3a9e9681f38e", "patch": "@@ -1,4 +1,4 @@\n-// error-pattern: unresolved import: ivec\n-import ivec;\n+// error-pattern: unresolved import: vec\n+import vec;\n \n fn main() { let foo = vec::len([]); }\n\\ No newline at end of file"}, {"sha": "60265eebcf7f89a3108eb1f6cb8cfcd95432947e", "filename": "src/test/pretty/vec-type.pp", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f5ce3bf15d5f636bb73b7aae671b3a9e9681f38e/src%2Ftest%2Fpretty%2Fvec-type.pp", "raw_url": "https://github.com/rust-lang/rust/raw/f5ce3bf15d5f636bb73b7aae671b3a9e9681f38e/src%2Ftest%2Fpretty%2Fvec-type.pp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fpretty%2Fvec-type.pp?ref=f5ce3bf15d5f636bb73b7aae671b3a9e9681f38e", "patch": "@@ -1,4 +1,4 @@\n-// pp-exact:ivec-type.pp\n+// pp-exact:vec-type.pp\n \n fn f1(x: [int]) { }\n ", "previous_filename": "src/test/pretty/ivec-type.pp"}, {"sha": "010ad755f513d105f7fef1ead4180973d8db803e", "filename": "src/test/pretty/vec-type.rs", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f5ce3bf15d5f636bb73b7aae671b3a9e9681f38e/src%2Ftest%2Fpretty%2Fvec-type.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f5ce3bf15d5f636bb73b7aae671b3a9e9681f38e/src%2Ftest%2Fpretty%2Fvec-type.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fpretty%2Fvec-type.rs?ref=f5ce3bf15d5f636bb73b7aae671b3a9e9681f38e", "patch": "@@ -1,4 +1,4 @@\n-// pp-exact:ivec-type.pp\n+// pp-exact:vec-type.pp\n \n fn f1(x: [int]) { }\n ", "previous_filename": "src/test/pretty/ivec-type.rs"}]}