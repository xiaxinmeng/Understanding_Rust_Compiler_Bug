{"sha": "5880ce396832fd94efb1fc90f2682f209712ba24", "node_id": "MDY6Q29tbWl0NzI0NzEyOjU4ODBjZTM5NjgzMmZkOTRlZmIxZmM5MGYyNjgyZjIwOTcxMmJhMjQ=", "commit": {"author": {"name": "ben", "email": "benlewisj@gmail.com", "date": "2019-10-06T06:56:05Z"}, "committer": {"name": "ben", "email": "benlewisj@gmail.com", "date": "2019-10-06T06:56:05Z"}, "message": "Fix const arguments not displaying in types mismatch diagnostic.", "tree": {"sha": "9a073b457a3d73c414ad6f893306f0f6a900acc5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9a073b457a3d73c414ad6f893306f0f6a900acc5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5880ce396832fd94efb1fc90f2682f209712ba24", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5880ce396832fd94efb1fc90f2682f209712ba24", "html_url": "https://github.com/rust-lang/rust/commit/5880ce396832fd94efb1fc90f2682f209712ba24", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5880ce396832fd94efb1fc90f2682f209712ba24/comments", "author": {"login": "BenLewis-Seequent", "id": 7391596, "node_id": "MDQ6VXNlcjczOTE1OTY=", "avatar_url": "https://avatars.githubusercontent.com/u/7391596?v=4", "gravatar_id": "", "url": "https://api.github.com/users/BenLewis-Seequent", "html_url": "https://github.com/BenLewis-Seequent", "followers_url": "https://api.github.com/users/BenLewis-Seequent/followers", "following_url": "https://api.github.com/users/BenLewis-Seequent/following{/other_user}", "gists_url": "https://api.github.com/users/BenLewis-Seequent/gists{/gist_id}", "starred_url": "https://api.github.com/users/BenLewis-Seequent/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/BenLewis-Seequent/subscriptions", "organizations_url": "https://api.github.com/users/BenLewis-Seequent/orgs", "repos_url": "https://api.github.com/users/BenLewis-Seequent/repos", "events_url": "https://api.github.com/users/BenLewis-Seequent/events{/privacy}", "received_events_url": "https://api.github.com/users/BenLewis-Seequent/received_events", "type": "User", "site_admin": false}, "committer": {"login": "BenLewis-Seequent", "id": 7391596, "node_id": "MDQ6VXNlcjczOTE1OTY=", "avatar_url": "https://avatars.githubusercontent.com/u/7391596?v=4", "gravatar_id": "", "url": "https://api.github.com/users/BenLewis-Seequent", "html_url": "https://github.com/BenLewis-Seequent", "followers_url": "https://api.github.com/users/BenLewis-Seequent/followers", "following_url": "https://api.github.com/users/BenLewis-Seequent/following{/other_user}", "gists_url": "https://api.github.com/users/BenLewis-Seequent/gists{/gist_id}", "starred_url": "https://api.github.com/users/BenLewis-Seequent/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/BenLewis-Seequent/subscriptions", "organizations_url": "https://api.github.com/users/BenLewis-Seequent/orgs", "repos_url": "https://api.github.com/users/BenLewis-Seequent/repos", "events_url": "https://api.github.com/users/BenLewis-Seequent/events{/privacy}", "received_events_url": "https://api.github.com/users/BenLewis-Seequent/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7870050796e5904a0fc85ecbe6fa6dde1cfe0c91", "url": "https://api.github.com/repos/rust-lang/rust/commits/7870050796e5904a0fc85ecbe6fa6dde1cfe0c91", "html_url": "https://github.com/rust-lang/rust/commit/7870050796e5904a0fc85ecbe6fa6dde1cfe0c91"}], "stats": {"total": 31, "additions": 24, "deletions": 7}, "files": [{"sha": "f1192c7ce10a9577858ea98883b977e91831a69e", "filename": "src/librustc/infer/error_reporting/mod.rs", "status": "modified", "additions": 18, "deletions": 1, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/5880ce396832fd94efb1fc90f2682f209712ba24/src%2Flibrustc%2Finfer%2Ferror_reporting%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5880ce396832fd94efb1fc90f2682f209712ba24/src%2Flibrustc%2Finfer%2Ferror_reporting%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Finfer%2Ferror_reporting%2Fmod.rs?ref=5880ce396832fd94efb1fc90f2682f209712ba24", "patch": "@@ -935,6 +935,7 @@ impl<'a, 'tcx> InferCtxt<'a, 'tcx> {\n                         .filter(|(a, b)| a == b)\n                         .count();\n                     let len = sub1.len() - common_default_params;\n+                    let consts_offset = len - sub1.consts().count();\n \n                     // Only draw `<...>` if there're lifetime/type arguments.\n                     if len > 0 {\n@@ -981,7 +982,8 @@ impl<'a, 'tcx> InferCtxt<'a, 'tcx> {\n                     //         ^ elided type as this type argument was the same in both sides\n                     let type_arguments = sub1.types().zip(sub2.types());\n                     let regions_len = sub1.regions().count();\n-                    for (i, (ta1, ta2)) in type_arguments.take(len).enumerate() {\n+                    let num_display_types = consts_offset - regions_len;\n+                    for (i, (ta1, ta2)) in type_arguments.take(num_display_types).enumerate() {\n                         let i = i + regions_len;\n                         if ta1 == ta2 {\n                             values.0.push_normal(\"_\");\n@@ -994,6 +996,21 @@ impl<'a, 'tcx> InferCtxt<'a, 'tcx> {\n                         self.push_comma(&mut values.0, &mut values.1, len, i);\n                     }\n \n+                    // Do the same for const arguments, if they are equal, do not highlight and\n+                    // elide them from the output.\n+                    let const_arguments = sub1.consts().zip(sub2.consts());\n+                    for (i, (ca1, ca2)) in const_arguments.enumerate() {\n+                        let i = i + consts_offset;\n+                        if ca1 == ca2 {\n+                            values.0.push_normal(\"_\");\n+                            values.1.push_normal(\"_\");\n+                        } else {\n+                            values.0.push_highlighted(ca1.to_string());\n+                            values.1.push_highlighted(ca2.to_string());\n+                        }\n+                        self.push_comma(&mut values.0, &mut values.1, len, i);\n+                    }\n+\n                     // Close the type argument bracket.\n                     // Only draw `<...>` if there're lifetime/type arguments.\n                     if len > 0 {"}, {"sha": "380a70d664e05939a032bf5041b79ffd158a82f5", "filename": "src/test/ui/const-generics/slice-const-param-mismatch.stderr", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/5880ce396832fd94efb1fc90f2682f209712ba24/src%2Ftest%2Fui%2Fconst-generics%2Fslice-const-param-mismatch.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/5880ce396832fd94efb1fc90f2682f209712ba24/src%2Ftest%2Fui%2Fconst-generics%2Fslice-const-param-mismatch.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fslice-const-param-mismatch.stderr?ref=5880ce396832fd94efb1fc90f2682f209712ba24", "patch": "@@ -12,26 +12,26 @@ error[E0308]: mismatched types\n LL |     let _: ConstString<\"Hello\"> = ConstString::<\"World\">;\n    |                                   ^^^^^^^^^^^^^^^^^^^^^^ expected `\"Hello\"`, found `\"World\"`\n    |\n-   = note: expected type `ConstString<>`\n-              found type `ConstString<>`\n+   = note: expected type `ConstString<\"Hello\">`\n+              found type `ConstString<\"World\">`\n \n error[E0308]: mismatched types\n   --> $DIR/slice-const-param-mismatch.rs:11:33\n    |\n LL |     let _: ConstString<\"\u2107\u31c8\u21a6\"> = ConstString::<\"\u2107\u31c8\u21a5\">;\n    |                                  ^^^^^^^^^^^^^^^^^^^^^ expected `\"\u2107\u31c8\u21a6\"`, found `\"\u2107\u31c8\u21a5\"`\n    |\n-   = note: expected type `ConstString<>`\n-              found type `ConstString<>`\n+   = note: expected type `ConstString<\"\u2107\u31c8\u21a6\">`\n+              found type `ConstString<\"\u2107\u31c8\u21a5\">`\n \n error[E0308]: mismatched types\n   --> $DIR/slice-const-param-mismatch.rs:13:33\n    |\n LL |     let _: ConstBytes<b\"AAA\"> = ConstBytes::<b\"BBB\">;\n    |                                 ^^^^^^^^^^^^^^^^^^^^ expected `b\"AAA\"`, found `b\"BBB\"`\n    |\n-   = note: expected type `ConstBytes<>`\n-              found type `ConstBytes<>`\n+   = note: expected type `ConstBytes<b\"AAA\">`\n+              found type `ConstBytes<b\"BBB\">`\n \n error: aborting due to 3 previous errors\n "}]}