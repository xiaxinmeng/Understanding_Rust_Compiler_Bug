{"sha": "e4cca21a107b0fe9c79817fcbc907cff6b3d08e3", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU0Y2NhMjFhMTA3YjBmZTljNzk4MTdmY2JjOTA3Y2ZmNmIzZDA4ZTM=", "commit": {"author": {"name": "Nick Cameron", "email": "ncameron@mozilla.com", "date": "2015-09-15T05:45:54Z"}, "committer": {"name": "Nick Cameron", "email": "ncameron@mozilla.com", "date": "2015-09-15T05:47:18Z"}, "message": "Preserve unsafe blocks in closures\n\nFixes #321", "tree": {"sha": "3ad687918e3a86edac2ebe0306b92b5bf2080466", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3ad687918e3a86edac2ebe0306b92b5bf2080466"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e4cca21a107b0fe9c79817fcbc907cff6b3d08e3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e4cca21a107b0fe9c79817fcbc907cff6b3d08e3", "html_url": "https://github.com/rust-lang/rust/commit/e4cca21a107b0fe9c79817fcbc907cff6b3d08e3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e4cca21a107b0fe9c79817fcbc907cff6b3d08e3/comments", "author": {"login": "nrc", "id": 762626, "node_id": "MDQ6VXNlcjc2MjYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/762626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nrc", "html_url": "https://github.com/nrc", "followers_url": "https://api.github.com/users/nrc/followers", "following_url": "https://api.github.com/users/nrc/following{/other_user}", "gists_url": "https://api.github.com/users/nrc/gists{/gist_id}", "starred_url": "https://api.github.com/users/nrc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nrc/subscriptions", "organizations_url": "https://api.github.com/users/nrc/orgs", "repos_url": "https://api.github.com/users/nrc/repos", "events_url": "https://api.github.com/users/nrc/events{/privacy}", "received_events_url": "https://api.github.com/users/nrc/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nrc", "id": 762626, "node_id": "MDQ6VXNlcjc2MjYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/762626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nrc", "html_url": "https://github.com/nrc", "followers_url": "https://api.github.com/users/nrc/followers", "following_url": "https://api.github.com/users/nrc/following{/other_user}", "gists_url": "https://api.github.com/users/nrc/gists{/gist_id}", "starred_url": "https://api.github.com/users/nrc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nrc/subscriptions", "organizations_url": "https://api.github.com/users/nrc/orgs", "repos_url": "https://api.github.com/users/nrc/repos", "events_url": "https://api.github.com/users/nrc/events{/privacy}", "received_events_url": "https://api.github.com/users/nrc/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ff02953a024399c1b60aefd741356a05b10fcd89", "url": "https://api.github.com/repos/rust-lang/rust/commits/ff02953a024399c1b60aefd741356a05b10fcd89", "html_url": "https://github.com/rust-lang/rust/commit/ff02953a024399c1b60aefd741356a05b10fcd89"}], "stats": {"total": 5, "additions": 4, "deletions": 1}, "files": [{"sha": "1f82c5e10a3e3036929fa12c66b6d61f2b5b5167", "filename": "src/expr.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e4cca21a107b0fe9c79817fcbc907cff6b3d08e3/src%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e4cca21a107b0fe9c79817fcbc907cff6b3d08e3/src%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fexpr.rs?ref=e4cca21a107b0fe9c79817fcbc907cff6b3d08e3", "patch": "@@ -280,7 +280,9 @@ fn rewrite_closure(capture: ast::CaptureClause,\n         // All closure bodies are blocks in the eyes of the AST, but we may not\n         // want to unwrap them when they only contain a single expression.\n         let inner_expr = match expr.node {\n-            ast::Expr_::ExprBlock(ref inner) if inner.stmts.is_empty() && inner.expr.is_some() => {\n+            ast::Expr_::ExprBlock(ref inner) if inner.stmts.is_empty() && inner.expr.is_some() &&\n+                                                inner.rules ==\n+                                                ast::BlockCheckMode::DefaultBlock => {\n                 inner.expr.as_ref().unwrap()\n             }\n             _ => expr,"}, {"sha": "f9ea3f0c0c57939047db028ae8b554fc9e220b7d", "filename": "tests/target/fn.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/e4cca21a107b0fe9c79817fcbc907cff6b3d08e3/tests%2Ftarget%2Ffn.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e4cca21a107b0fe9c79817fcbc907cff6b3d08e3/tests%2Ftarget%2Ffn.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Ffn.rs?ref=e4cca21a107b0fe9c79817fcbc907cff6b3d08e3", "patch": "@@ -82,4 +82,5 @@ fn homura<T: Deref<Target = i32>>(_: T) {\n fn main() {\n     let _ = function(move || 5);\n     let _ = move || 42;\n+    let _ = || unsafe { abort() };\n }"}]}