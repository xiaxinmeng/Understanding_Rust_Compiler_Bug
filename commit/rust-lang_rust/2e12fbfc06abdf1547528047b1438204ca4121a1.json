{"sha": "2e12fbfc06abdf1547528047b1438204ca4121a1", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJlMTJmYmZjMDZhYmRmMTU0NzUyODA0N2IxNDM4MjA0Y2E0MTIxYTE=", "commit": {"author": {"name": "Brian Anderson", "email": "andersrb@gmail.com", "date": "2011-04-27T00:13:23Z"}, "committer": {"name": "Brian Anderson", "email": "andersrb@gmail.com", "date": "2011-04-27T00:20:17Z"}, "message": "Support octal #fmt conversions", "tree": {"sha": "449454de4d0605d25c292650a563f7d4933efe4d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/449454de4d0605d25c292650a563f7d4933efe4d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2e12fbfc06abdf1547528047b1438204ca4121a1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2e12fbfc06abdf1547528047b1438204ca4121a1", "html_url": "https://github.com/rust-lang/rust/commit/2e12fbfc06abdf1547528047b1438204ca4121a1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2e12fbfc06abdf1547528047b1438204ca4121a1/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "66b59e4b056ade5f0a5e5a8fd64534aeea9b952c", "url": "https://api.github.com/repos/rust-lang/rust/commits/66b59e4b056ade5f0a5e5a8fd64534aeea9b952c", "html_url": "https://github.com/rust-lang/rust/commit/66b59e4b056ade5f0a5e5a8fd64534aeea9b952c"}], "stats": {"total": 25, "additions": 25, "deletions": 0}, "files": [{"sha": "aea3e7df9c437f606828c93e58280f95f8cadd87", "filename": "src/comp/front/extfmt.rs", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/2e12fbfc06abdf1547528047b1438204ca4121a1/src%2Fcomp%2Ffront%2Fextfmt.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2e12fbfc06abdf1547528047b1438204ca4121a1/src%2Fcomp%2Ffront%2Fextfmt.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Ffront%2Fextfmt.rs?ref=2e12fbfc06abdf1547528047b1438204ca4121a1", "patch": "@@ -25,6 +25,7 @@ import std.ExtFmt.CT.ty_char;\n import std.ExtFmt.CT.ty_int;\n import std.ExtFmt.CT.ty_bits;\n import std.ExtFmt.CT.ty_hex;\n+import std.ExtFmt.CT.ty_octal;\n import std.ExtFmt.CT.flag;\n import std.ExtFmt.CT.flag_left_justify;\n import std.ExtFmt.CT.flag_left_zero_pad;\n@@ -236,6 +237,9 @@ fn pieces_to_expr(vec[piece] pieces, vec[@ast.expr] args) -> @ast.expr {\n                 case (ty_bits) {\n                     rt_type = \"ty_bits\";\n                 }\n+                case (ty_octal) {\n+                    rt_type = \"ty_octal\";\n+                }\n                 case (_) {\n                     rt_type = \"ty_default\";\n                 }\n@@ -381,6 +385,9 @@ fn pieces_to_expr(vec[piece] pieces, vec[@ast.expr] args) -> @ast.expr {\n             case (ty_bits) {\n                 ret make_conv_call(arg.span, \"uint\", cnv, arg);\n             }\n+            case (ty_octal) {\n+                ret make_conv_call(arg.span, \"uint\", cnv, arg);\n+            }\n             case (_) {\n                 log_err unsupported;\n                 fail;"}, {"sha": "a9747c6a7487483d5bfbb49fe88566483d23bfec", "filename": "src/lib/ExtFmt.rs", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/2e12fbfc06abdf1547528047b1438204ca4121a1/src%2Flib%2FExtFmt.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2e12fbfc06abdf1547528047b1438204ca4121a1/src%2Flib%2FExtFmt.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flib%2FExtFmt.rs?ref=2e12fbfc06abdf1547528047b1438204ca4121a1", "patch": "@@ -46,6 +46,7 @@ mod CT {\n         ty_int(signedness);\n         ty_bits;\n         ty_hex(caseness);\n+        ty_octal;\n         // FIXME: More types\n     }\n \n@@ -289,6 +290,8 @@ mod CT {\n             t = ty_hex(case_upper);\n         } else if (_str.eq(tstr, \"t\")) {\n             t = ty_bits;\n+        } else if (_str.eq(tstr, \"o\")) {\n+            t = ty_octal;\n         } else {\n             log_err \"unknown type in conversion\";\n             fail;\n@@ -326,6 +329,7 @@ mod RT {\n         ty_bits;\n         ty_hex_upper;\n         ty_hex_lower;\n+        ty_octal;\n     }\n \n     // FIXME: May not want to use a vector here for flags;\n@@ -365,6 +369,9 @@ mod RT {\n             case (ty_bits) {\n                 res = uint_to_str_prec(u, 2u, prec);\n             }\n+            case (ty_octal) {\n+                res = uint_to_str_prec(u, 8u, prec);\n+            }\n         }\n         ret pad(cv, res, pad_unsigned);\n     }"}, {"sha": "46b529d5847e751a7895901b891d0c9d9224a509", "filename": "src/test/run-pass/syntax-extension-fmt.rs", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/2e12fbfc06abdf1547528047b1438204ca4121a1/src%2Ftest%2Frun-pass%2Fsyntax-extension-fmt.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2e12fbfc06abdf1547528047b1438204ca4121a1/src%2Ftest%2Frun-pass%2Fsyntax-extension-fmt.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fsyntax-extension-fmt.rs?ref=2e12fbfc06abdf1547528047b1438204ca4121a1", "patch": "@@ -24,13 +24,15 @@ fn main() {\n   test(#fmt(\"%c\", 'A'), \"A\");\n   test(#fmt(\"%x\", 0xff_u), \"ff\");\n   test(#fmt(\"%X\", 0x12ab_u), \"12AB\");\n+  test(#fmt(\"%o\", 10u), \"12\");\n   test(#fmt(\"%t\", 0b11010101_u), \"11010101\");\n \n   // 32-bit limits\n   test(#fmt(\"%i\", -2147483648), \"-2147483648\");\n   test(#fmt(\"%i\", 2147483647), \"2147483647\");\n   test(#fmt(\"%u\", 4294967295u), \"4294967295\");\n   test(#fmt(\"%x\", 0xffffffff_u), \"ffffffff\");\n+  test(#fmt(\"%o\", 0xffffffff_u), \"37777777777\");\n   test(#fmt(\"%t\", 0xffffffff_u), \"11111111111111111111111111111111\");\n \n   // Widths\n@@ -42,6 +44,7 @@ fn main() {\n   test(#fmt(\"%10b\", true), \"      true\");\n   test(#fmt(\"%10x\", 0xff_u), \"        ff\");\n   test(#fmt(\"%10X\", 0xff_u), \"        FF\");\n+  test(#fmt(\"%10o\", 10u), \"        12\");\n   test(#fmt(\"%10t\", 0xff_u), \"  11111111\");\n   test(#fmt(\"%10c\", 'A'), \"         A\");\n \n@@ -53,6 +56,7 @@ fn main() {\n   test(#fmt(\"%-10b\", true), \"true      \");\n   test(#fmt(\"%-10x\", 0xff_u), \"ff        \");\n   test(#fmt(\"%-10X\", 0xff_u), \"FF        \");\n+  test(#fmt(\"%-10o\", 10u), \"12        \");\n   test(#fmt(\"%-10t\", 0xff_u), \"11111111  \");\n   test(#fmt(\"%-10c\", 'A'), \"A         \");\n \n@@ -66,6 +70,7 @@ fn main() {\n   test(#fmt(\"%.u\", 10u), \"10\");\n   test(#fmt(\"%.s\", \"test\"), \"\");\n   test(#fmt(\"%.x\", 127u), \"7f\");\n+  test(#fmt(\"%.o\", 10u), \"12\");\n   test(#fmt(\"%.t\", 3u), \"11\");\n   test(#fmt(\"%.c\", 'A'), \"A\");\n \n@@ -78,6 +83,7 @@ fn main() {\n   test(#fmt(\"%.0u\", 10u), \"10\");\n   test(#fmt(\"%.0s\", \"test\"), \"\");\n   test(#fmt(\"%.0x\", 127u), \"7f\");\n+  test(#fmt(\"%.0o\", 10u), \"12\");\n   test(#fmt(\"%.0t\", 3u), \"11\");\n   test(#fmt(\"%.0c\", 'A'), \"A\");\n \n@@ -90,6 +96,7 @@ fn main() {\n   test(#fmt(\"%.1u\", 10u), \"10\");\n   test(#fmt(\"%.1s\", \"test\"), \"t\");\n   test(#fmt(\"%.1x\", 127u), \"7f\");\n+  test(#fmt(\"%.1o\", 10u), \"12\");\n   test(#fmt(\"%.1t\", 3u), \"11\");\n   test(#fmt(\"%.1c\", 'A'), \"A\");\n \n@@ -102,6 +109,7 @@ fn main() {\n   test(#fmt(\"%.5u\", 10u), \"00010\");\n   test(#fmt(\"%.5s\", \"test\"), \"test\");\n   test(#fmt(\"%.5x\", 127u), \"0007f\");\n+  test(#fmt(\"%.5o\", 10u), \"00012\");\n   test(#fmt(\"%.5t\", 3u), \"00011\");\n   test(#fmt(\"%.5c\", 'A'), \"A\");\n \n@@ -134,6 +142,7 @@ fn main() {\n   test(#fmt(\"%05u\", 1u), \"00001\");\n   test(#fmt(\"%05x\", 127u), \"0007f\");\n   test(#fmt(\"%05X\", 127u), \"0007F\");\n+  test(#fmt(\"%05o\", 10u), \"00012\");\n   test(#fmt(\"%05t\", 3u), \"00011\");\n   // 0-padding a string is undefined but glibc does this:\n   test(#fmt(\"%05s\", \"test\"), \" test\");\n@@ -147,6 +156,7 @@ fn main() {\n   test(#fmt(\"%-05u\", 1u), \"1    \");\n   test(#fmt(\"%-05x\", 127u), \"7f   \");\n   test(#fmt(\"%-05X\", 127u), \"7F   \");\n+  test(#fmt(\"%-05o\", 10u), \"12   \");\n   test(#fmt(\"%-05t\", 3u), \"11   \");\n   test(#fmt(\"%-05s\", \"test\"), \"test \");\n   test(#fmt(\"%-05c\", 'A'), \"A    \");\n@@ -163,6 +173,7 @@ fn main() {\n   test(#fmt(\"%06.5c\", 'A'), \"     A\");\n   test(#fmt(\"%06.5x\", 127u), \" 0007f\");\n   test(#fmt(\"%06.5X\", 127u), \" 0007F\");\n+  test(#fmt(\"%06.5o\", 10u), \" 00012\");\n \n   // TODO: Padding and +\n   // TODO: Padding and ' '"}]}