{"sha": "e4b81d25122b0ff230182375d09300d5403b1750", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU0YjgxZDI1MTIyYjBmZjIzMDE4MjM3NWQwOTMwMGQ1NDAzYjE3NTA=", "commit": {"author": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2015-01-21T17:19:03Z"}, "committer": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2015-01-21T17:19:03Z"}, "message": "rollup merge of #21447: cmr/master\n\nCloses #13971", "tree": {"sha": "f89103300bd97ec68154879cccc28c66816eb482", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f89103300bd97ec68154879cccc28c66816eb482"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e4b81d25122b0ff230182375d09300d5403b1750", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e4b81d25122b0ff230182375d09300d5403b1750", "html_url": "https://github.com/rust-lang/rust/commit/e4b81d25122b0ff230182375d09300d5403b1750", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e4b81d25122b0ff230182375d09300d5403b1750/comments", "author": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "efea645c94451efbb6ac4be29c6307b434057ff2", "url": "https://api.github.com/repos/rust-lang/rust/commits/efea645c94451efbb6ac4be29c6307b434057ff2", "html_url": "https://github.com/rust-lang/rust/commit/efea645c94451efbb6ac4be29c6307b434057ff2"}, {"sha": "9714d3cccfa1f317986d0f1d5cd4717b6e2bfcee", "url": "https://api.github.com/repos/rust-lang/rust/commits/9714d3cccfa1f317986d0f1d5cd4717b6e2bfcee", "html_url": "https://github.com/rust-lang/rust/commit/9714d3cccfa1f317986d0f1d5cd4717b6e2bfcee"}], "stats": {"total": 44, "additions": 17, "deletions": 27}, "files": [{"sha": "cdb96e5dcbfcd166be6d8cf44d12b20b8e808cbb", "filename": "src/test/run-pass/const-block.rs", "status": "modified", "additions": 17, "deletions": 27, "changes": 44, "blob_url": "https://github.com/rust-lang/rust/blob/e4b81d25122b0ff230182375d09300d5403b1750/src%2Ftest%2Frun-pass%2Fconst-block.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e4b81d25122b0ff230182375d09300d5403b1750/src%2Ftest%2Frun-pass%2Fconst-block.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fconst-block.rs?ref=e4b81d25122b0ff230182375d09300d5403b1750", "patch": "@@ -14,7 +14,7 @@\n use std::marker::Sync;\n \n struct Foo {\n-    a: uint,\n+    a: usize,\n     b: *const ()\n }\n \n@@ -24,27 +24,24 @@ fn foo<T>(a: T) -> T {\n     a\n }\n \n-static BLOCK_INTEGRAL: uint = { 1 };\n+static BLOCK_INTEGRAL: usize = { 1 };\n static BLOCK_EXPLICIT_UNIT: () = { () };\n static BLOCK_IMPLICIT_UNIT: () = { };\n static BLOCK_FLOAT: f64 = { 1.0 };\n-static BLOCK_ENUM: Option<uint> = { Some(100) };\n+static BLOCK_ENUM: Option<usize> = { Some(100) };\n static BLOCK_STRUCT: Foo = { Foo { a: 12, b: 0 as *const () } };\n-static BLOCK_UNSAFE: uint = unsafe { 1000 };\n+static BLOCK_UNSAFE: usize = unsafe { 1000 };\n \n-// FIXME: #13970\n-// static BLOCK_FN_INFERRED: fn(uint) -> uint = { foo };\n+static BLOCK_FN_INFERRED: fn(usize) -> usize = { foo };\n \n-// FIXME: #13971\n-// static BLOCK_FN: fn(uint) -> uint = { foo::<uint> };\n+static BLOCK_FN: fn(usize) -> usize = { foo::<usize> };\n \n-// FIXME: #13972\n-// static BLOCK_ENUM_CONSTRUCTOR: fn(uint) -> Option<uint> = { Some };\n+static BLOCK_ENUM_CONSTRUCTOR: fn(usize) -> Option<usize> = { Some };\n \n-// FIXME: #13973\n-// static BLOCK_UNSAFE_SAFE_PTR: &'static int = unsafe { &*(0xdeadbeef as *int) };\n-// static BLOCK_UNSAFE_SAFE_PTR_2: &'static int = unsafe {\n-//     static X: *int = 0xdeadbeef as *int;\n+// FIXME #13972\n+// static BLOCK_UNSAFE_SAFE_PTR: &'static isize = unsafe { &*(0xdeadbeef as *const isize) };\n+// static BLOCK_UNSAFE_SAFE_PTR_2: &'static isize = unsafe {\n+//     const X: *const isize = 0xdeadbeef as *const isize;\n //     &*X\n // };\n \n@@ -57,17 +54,10 @@ pub fn main() {\n     assert_eq!(BLOCK_STRUCT.b, 0 as *const ());\n     assert_eq!(BLOCK_ENUM, Some(100));\n     assert_eq!(BLOCK_UNSAFE, 1000);\n-\n-    // FIXME: #13970\n-    // assert_eq!(BLOCK_FN_INFERRED(300), 300);\n-\n-    // FIXME: #13971\n-    // assert_eq!(BLOCK_FN(300), 300);\n-\n-    // FIXME: #13972\n-    // assert_eq!(BLOCK_ENUM_CONSTRUCTOR(200), Some(200));\n-\n-    // FIXME: #13973\n-    // assert_eq!(BLOCK_UNSAFE_SAFE_PTR as *int as uint, 0xdeadbeef_u);\n-    // assert_eq!(BLOCK_UNSAFE_SAFE_PTR_2 as *int as uint, 0xdeadbeef_u);\n+    assert_eq!(BLOCK_FN_INFERRED(300), 300);\n+    assert_eq!(BLOCK_FN(300), 300);\n+    assert_eq!(BLOCK_ENUM_CONSTRUCTOR(200), Some(200));\n+    // FIXME #13972\n+    // assert_eq!(BLOCK_UNSAFE_SAFE_PTR as *const isize as usize, 0xdeadbeef_us);\n+    // assert_eq!(BLOCK_UNSAFE_SAFE_PTR_2 as *const isize as usize, 0xdeadbeef_us);\n }"}]}