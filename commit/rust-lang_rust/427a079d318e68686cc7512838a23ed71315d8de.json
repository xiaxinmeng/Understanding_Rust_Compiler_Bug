{"sha": "427a079d318e68686cc7512838a23ed71315d8de", "node_id": "C_kwDOAAsO6NoAKDQyN2EwNzlkMzE4ZTY4Njg2Y2M3NTEyODM4YTIzZWQ3MTMxNWQ4ZGU", "commit": {"author": {"name": "Tomoaki Kawada", "email": "kawada@kmckk.co.jp", "date": "2022-12-01T01:40:15Z"}, "committer": {"name": "Tomoaki Kawada", "email": "kawada@kmckk.co.jp", "date": "2022-12-01T04:18:05Z"}, "message": "kmc-solid: Use `expose_addr` and `from_exposed_addr` for pointer-integer casts\n\nPointer-integer casts are required for conversion between `EXINF` (ITRON\ntask entry point parameter) and `*const ThreadInner`. Addresses the\ndeny-level lint `fuzzy_provenance_casts`.", "tree": {"sha": "f2db7e3f246c4cc50bfad1fb43d56f957e05c934", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f2db7e3f246c4cc50bfad1fb43d56f957e05c934"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/427a079d318e68686cc7512838a23ed71315d8de", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/427a079d318e68686cc7512838a23ed71315d8de", "html_url": "https://github.com/rust-lang/rust/commit/427a079d318e68686cc7512838a23ed71315d8de", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/427a079d318e68686cc7512838a23ed71315d8de/comments", "author": {"login": "kawadakk", "id": 81723441, "node_id": "MDQ6VXNlcjgxNzIzNDQx", "avatar_url": "https://avatars.githubusercontent.com/u/81723441?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kawadakk", "html_url": "https://github.com/kawadakk", "followers_url": "https://api.github.com/users/kawadakk/followers", "following_url": "https://api.github.com/users/kawadakk/following{/other_user}", "gists_url": "https://api.github.com/users/kawadakk/gists{/gist_id}", "starred_url": "https://api.github.com/users/kawadakk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kawadakk/subscriptions", "organizations_url": "https://api.github.com/users/kawadakk/orgs", "repos_url": "https://api.github.com/users/kawadakk/repos", "events_url": "https://api.github.com/users/kawadakk/events{/privacy}", "received_events_url": "https://api.github.com/users/kawadakk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "kawadakk", "id": 81723441, "node_id": "MDQ6VXNlcjgxNzIzNDQx", "avatar_url": "https://avatars.githubusercontent.com/u/81723441?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kawadakk", "html_url": "https://github.com/kawadakk", "followers_url": "https://api.github.com/users/kawadakk/followers", "following_url": "https://api.github.com/users/kawadakk/following{/other_user}", "gists_url": "https://api.github.com/users/kawadakk/gists{/gist_id}", "starred_url": "https://api.github.com/users/kawadakk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kawadakk/subscriptions", "organizations_url": "https://api.github.com/users/kawadakk/orgs", "repos_url": "https://api.github.com/users/kawadakk/repos", "events_url": "https://api.github.com/users/kawadakk/events{/privacy}", "received_events_url": "https://api.github.com/users/kawadakk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8de4b138455add55bde6de5553a933a2ab79b71f", "url": "https://api.github.com/repos/rust-lang/rust/commits/8de4b138455add55bde6de5553a933a2ab79b71f", "html_url": "https://github.com/rust-lang/rust/commit/8de4b138455add55bde6de5553a933a2ab79b71f"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "573a50b42de3c21800f34210116dc954f01d523f", "filename": "library/std/src/sys/itron/thread.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/427a079d318e68686cc7512838a23ed71315d8de/library%2Fstd%2Fsrc%2Fsys%2Fitron%2Fthread.rs", "raw_url": "https://github.com/rust-lang/rust/raw/427a079d318e68686cc7512838a23ed71315d8de/library%2Fstd%2Fsrc%2Fsys%2Fitron%2Fthread.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsys%2Fitron%2Fthread.rs?ref=427a079d318e68686cc7512838a23ed71315d8de", "patch": "@@ -91,7 +91,7 @@ impl Thread {\n \n         unsafe extern \"C\" fn trampoline(exinf: isize) {\n             // Safety: `ThreadInner` is alive at this point\n-            let inner = unsafe { &*(exinf as *const ThreadInner) };\n+            let inner: &ThreadInner = unsafe { &*crate::ptr::from_exposed_addr(exinf as usize) };\n \n             // Safety: Since `trampoline` is called only once for each\n             //         `ThreadInner` and only `trampoline` touches `start`,\n@@ -168,7 +168,7 @@ impl Thread {\n             abi::acre_tsk(&abi::T_CTSK {\n                 // Activate this task immediately\n                 tskatr: abi::TA_ACT,\n-                exinf: inner_ptr as abi::EXINF,\n+                exinf: inner_ptr.expose_addr() as abi::EXINF,\n                 // The entry point\n                 task: Some(trampoline),\n                 // Inherit the calling task's base priority"}]}