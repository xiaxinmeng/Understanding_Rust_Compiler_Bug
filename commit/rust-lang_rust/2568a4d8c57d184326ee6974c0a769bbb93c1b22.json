{"sha": "2568a4d8c57d184326ee6974c0a769bbb93c1b22", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI1NjhhNGQ4YzU3ZDE4NDMyNmVlNjk3NGMwYTc2OWJiYjkzYzFiMjI=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2015-04-30T17:07:14Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2015-04-30T17:07:14Z"}, "message": "Auto merge of #24924 - carols10cents:grammar-improvements, r=pnkfelix\n\nI'm interested in helping out with #16676 but more in the grammar than the reference-- here's my first chunk, more to come!! :tada: \r\n\r\nI did pull a bit *out* of the reference, though, that was more relevant to the grammar but wasn't moved over as part of #24729.\r\n\r\nI'm looking at, e.g. https://github.com/rust-lang/rust/blob/master/src/libsyntax/ast.rs, as the source of truth, please let me know if I should be checking against something else instead/in addition.\r\n\r\nr? @steveklabnik", "tree": {"sha": "ad8bf2350e49ca97f4bebe87d631b99b8b2f6c6c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ad8bf2350e49ca97f4bebe87d631b99b8b2f6c6c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2568a4d8c57d184326ee6974c0a769bbb93c1b22", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2568a4d8c57d184326ee6974c0a769bbb93c1b22", "html_url": "https://github.com/rust-lang/rust/commit/2568a4d8c57d184326ee6974c0a769bbb93c1b22", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2568a4d8c57d184326ee6974c0a769bbb93c1b22/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2f613bfaeb81ce25b116835a5f09750384b888c7", "url": "https://api.github.com/repos/rust-lang/rust/commits/2f613bfaeb81ce25b116835a5f09750384b888c7", "html_url": "https://github.com/rust-lang/rust/commit/2f613bfaeb81ce25b116835a5f09750384b888c7"}, {"sha": "0ddee94cfeec045d23be3ce98d06b2f3f774a134", "url": "https://api.github.com/repos/rust-lang/rust/commits/0ddee94cfeec045d23be3ce98d06b2f3f774a134", "html_url": "https://github.com/rust-lang/rust/commit/0ddee94cfeec045d23be3ce98d06b2f3f774a134"}], "stats": {"total": 23, "additions": 15, "deletions": 8}, "files": [{"sha": "80a4b63cc5f7965cae166534add0100c33b1b159", "filename": "src/doc/grammar.md", "status": "modified", "additions": 15, "deletions": 3, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/2568a4d8c57d184326ee6974c0a769bbb93c1b22/src%2Fdoc%2Fgrammar.md", "raw_url": "https://github.com/rust-lang/rust/raw/2568a4d8c57d184326ee6974c0a769bbb93c1b22/src%2Fdoc%2Fgrammar.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Fgrammar.md?ref=2568a4d8c57d184326ee6974c0a769bbb93c1b22", "patch": "@@ -176,9 +176,15 @@ excluded from the `ident` rule.\n \n ```antlr\n lit_suffix : ident;\n-literal : [ string_lit | char_lit | byte_string_lit | byte_lit | num_lit ] lit_suffix ?;\n+literal : [ string_lit | char_lit | byte_string_lit | byte_lit | num_lit | bool_lit ] lit_suffix ?;\n ```\n \n+The optional `lit_suffix` production is only used for certain numeric literals,\n+but is reserved for future extension. That is, the above gives the lexical\n+grammar, but a Rust parser will reject everything but the 12 special cases\n+mentioned in [Number literals](reference.html#number-literals) in the\n+reference.\n+\n #### Character and string literals\n \n ```antlr\n@@ -238,7 +244,9 @@ dec_lit : [ dec_digit | '_' ] + ;\n \n #### Boolean literals\n \n-**FIXME:** write grammar\n+```antlr\n+bool_lit : [ \"true\" | \"false\" ] ;\n+```\n \n The two values of the boolean type are written `true` and `false`.\n \n@@ -297,7 +305,7 @@ transcriber : '(' transcriber * ')' | '[' transcriber * ']'\n \n ```antlr\n item : mod_item | fn_item | type_item | struct_item | enum_item\n-     | static_item | trait_item | impl_item | extern_block ;\n+     | const_item | static_item | trait_item | impl_item | extern_block ;\n ```\n \n ### Type Parameters\n@@ -369,6 +377,10 @@ path_item : ident | \"mod\" ;\n \n **FIXME:** grammar?\n \n+### Enumerations\n+\n+**FIXME:** grammar?\n+\n ### Constant items\n \n ```antlr"}, {"sha": "4485704c3d523b83983904ecd5721d372593c829", "filename": "src/doc/reference.md", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/2568a4d8c57d184326ee6974c0a769bbb93c1b22/src%2Fdoc%2Freference.md", "raw_url": "https://github.com/rust-lang/rust/raw/2568a4d8c57d184326ee6974c0a769bbb93c1b22/src%2Fdoc%2Freference.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Freference.md?ref=2568a4d8c57d184326ee6974c0a769bbb93c1b22", "patch": "@@ -130,11 +130,6 @@ of tokens, that immediately and directly denotes the value it evaluates to,\n rather than referring to it by name or some other evaluation rule. A literal is\n a form of constant expression, so is evaluated (primarily) at compile time.\n \n-The optional suffix is only used for certain numeric literals, but is\n-reserved for future extension, that is, the above gives the lexical\n-grammar, but a Rust parser will reject everything but the 12 special\n-cases mentioned in [Number literals](#number-literals) below.\n-\n #### Examples\n \n ##### Characters and strings"}]}