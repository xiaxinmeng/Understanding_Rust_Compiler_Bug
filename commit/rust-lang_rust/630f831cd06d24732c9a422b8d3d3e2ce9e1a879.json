{"sha": "630f831cd06d24732c9a422b8d3d3e2ce9e1a879", "node_id": "C_kwDOAAsO6NoAKDYzMGY4MzFjZDA2ZDI0NzMyYzlhNDIyYjhkM2QzZTJjZTllMWE4Nzk", "commit": {"author": {"name": "Chris Denton", "email": "christophersdenton@gmail.com", "date": "2022-09-01T03:17:36Z"}, "committer": {"name": "Chris Denton", "email": "christophersdenton@gmail.com", "date": "2022-09-01T03:17:36Z"}, "message": "Use `FILE_ATTRIBUTE_TAG_INFO` to get reparse tag\n\nThis avoid unnecessarily getting the full reparse data when all we need is the tag.", "tree": {"sha": "89112dc031aad7efb8d8ac04bdadf26cc9b437bb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/89112dc031aad7efb8d8ac04bdadf26cc9b437bb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/630f831cd06d24732c9a422b8d3d3e2ce9e1a879", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE+p/jD6jrzmnSIWJLcTRy8vRWJ94FAmMQJFAACgkQcTRy8vRW\nJ94Ovw/+LRBAY6q/aVy3cvNQ1sRzpLhGS6aw2exYa9UkCJcdLuc0k936KjT6TKQN\nQDGT8sMM3CscSpL4RrWglDo5X8SF+LC8YMTv6qof4Y5fNlDkouo8wElcd21wAEXx\nzBZ6j+Y7y56qZlGuq1PvtfXilu4a2ouSt9Mgjhxhd+1bA0rw5P+tNgaiZJHRJJnx\nNFGDiN/DluBF/0OY4NqV+iXHYsWVJrJiNtSrPtStvw/mF7u3FlmsffXmdLFccybu\no4c7yR8hHeRkUfUExQdvyK9BuTTYTw4QofK6AZdY/FuxudYNQnPi88AsL9alQDFL\njrdYEawUkkpYUTRvZz44+agKQDeTNmEDqE7G/yE+qUBpKyGBgc1DZWVNvFWaAEvk\nqTuCopKHTzI30HY9br4F/sEEuB9QxGr2gB+escpnU+RUpsXY81jz91B5D+NXVl3z\n7ug+M4JoR/PfZS+bXHCkA0vjNwLr0iyWpPUNa/iwO+qOVPuYTxnbKK6pH14Z6rDj\ntvtROJVBStmSQGYvaIdDHtdY6FFk1jAmMMtEZxaCs3SqOJPUg1cK4NzbeqBQc0AK\nciOn+R02A11jrk9fVO1yJ6bJimdm8MDeqegV0MtU2VQchuh1F2gBUs5szNqfxWAN\nJ7EBxiikXrSX1nP6Qqbh3IvM4/u5EJKZ4U8FPEf2HmZa13gErZk=\n=1c+V\n-----END PGP SIGNATURE-----", "payload": "tree 89112dc031aad7efb8d8ac04bdadf26cc9b437bb\nparent 3892b7074daeb23ddeaffd3e26b4f7979c6cc5a7\nauthor Chris Denton <christophersdenton@gmail.com> 1662002256 +0100\ncommitter Chris Denton <christophersdenton@gmail.com> 1662002256 +0100\n\nUse `FILE_ATTRIBUTE_TAG_INFO` to get reparse tag\n\nThis avoid unnecessarily getting the full reparse data when all we need is the tag.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/630f831cd06d24732c9a422b8d3d3e2ce9e1a879", "html_url": "https://github.com/rust-lang/rust/commit/630f831cd06d24732c9a422b8d3d3e2ce9e1a879", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/630f831cd06d24732c9a422b8d3d3e2ce9e1a879/comments", "author": {"login": "ChrisDenton", "id": 4459874, "node_id": "MDQ6VXNlcjQ0NTk4NzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/4459874?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ChrisDenton", "html_url": "https://github.com/ChrisDenton", "followers_url": "https://api.github.com/users/ChrisDenton/followers", "following_url": "https://api.github.com/users/ChrisDenton/following{/other_user}", "gists_url": "https://api.github.com/users/ChrisDenton/gists{/gist_id}", "starred_url": "https://api.github.com/users/ChrisDenton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ChrisDenton/subscriptions", "organizations_url": "https://api.github.com/users/ChrisDenton/orgs", "repos_url": "https://api.github.com/users/ChrisDenton/repos", "events_url": "https://api.github.com/users/ChrisDenton/events{/privacy}", "received_events_url": "https://api.github.com/users/ChrisDenton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ChrisDenton", "id": 4459874, "node_id": "MDQ6VXNlcjQ0NTk4NzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/4459874?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ChrisDenton", "html_url": "https://github.com/ChrisDenton", "followers_url": "https://api.github.com/users/ChrisDenton/followers", "following_url": "https://api.github.com/users/ChrisDenton/following{/other_user}", "gists_url": "https://api.github.com/users/ChrisDenton/gists{/gist_id}", "starred_url": "https://api.github.com/users/ChrisDenton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ChrisDenton/subscriptions", "organizations_url": "https://api.github.com/users/ChrisDenton/orgs", "repos_url": "https://api.github.com/users/ChrisDenton/repos", "events_url": "https://api.github.com/users/ChrisDenton/events{/privacy}", "received_events_url": "https://api.github.com/users/ChrisDenton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3892b7074daeb23ddeaffd3e26b4f7979c6cc5a7", "url": "https://api.github.com/repos/rust-lang/rust/commits/3892b7074daeb23ddeaffd3e26b4f7979c6cc5a7", "html_url": "https://github.com/rust-lang/rust/commit/3892b7074daeb23ddeaffd3e26b4f7979c6cc5a7"}], "stats": {"total": 32, "additions": 24, "deletions": 8}, "files": [{"sha": "b4db77700aabd2f8f033d6958a7ff40609e4528c", "filename": "library/std/src/sys/windows/c.rs", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/630f831cd06d24732c9a422b8d3d3e2ce9e1a879/library%2Fstd%2Fsrc%2Fsys%2Fwindows%2Fc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/630f831cd06d24732c9a422b8d3d3e2ce9e1a879/library%2Fstd%2Fsrc%2Fsys%2Fwindows%2Fc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsys%2Fwindows%2Fc.rs?ref=630f831cd06d24732c9a422b8d3d3e2ce9e1a879", "patch": "@@ -454,6 +454,12 @@ pub enum FILE_INFO_BY_HANDLE_CLASS {\n     MaximumFileInfoByHandlesClass,\n }\n \n+#[repr(C)]\n+pub struct FILE_ATTRIBUTE_TAG_INFO {\n+    pub FileAttributes: DWORD,\n+    pub ReparseTag: DWORD,\n+}\n+\n #[repr(C)]\n pub struct FILE_DISPOSITION_INFO {\n     pub DeleteFile: BOOLEAN,"}, {"sha": "c2ad592dfea73379ca8a433aab2179307a7f2ab0", "filename": "library/std/src/sys/windows/fs.rs", "status": "modified", "additions": 18, "deletions": 8, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/630f831cd06d24732c9a422b8d3d3e2ce9e1a879/library%2Fstd%2Fsrc%2Fsys%2Fwindows%2Ffs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/630f831cd06d24732c9a422b8d3d3e2ce9e1a879/library%2Fstd%2Fsrc%2Fsys%2Fwindows%2Ffs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsys%2Fwindows%2Ffs.rs?ref=630f831cd06d24732c9a422b8d3d3e2ce9e1a879", "patch": "@@ -326,10 +326,15 @@ impl File {\n             cvt(c::GetFileInformationByHandle(self.handle.as_raw_handle(), &mut info))?;\n             let mut reparse_tag = 0;\n             if info.dwFileAttributes & c::FILE_ATTRIBUTE_REPARSE_POINT != 0 {\n-                let mut b =\n-                    Align8([MaybeUninit::<u8>::uninit(); c::MAXIMUM_REPARSE_DATA_BUFFER_SIZE]);\n-                if let Ok((_, buf)) = self.reparse_point(&mut b) {\n-                    reparse_tag = (*buf).ReparseTag;\n+                let mut attr_tag: c::FILE_ATTRIBUTE_TAG_INFO = mem::zeroed();\n+                cvt(c::GetFileInformationByHandleEx(\n+                    self.handle.as_raw_handle(),\n+                    c::FileAttributeTagInfo,\n+                    ptr::addr_of_mut!(attr_tag).cast(),\n+                    mem::size_of::<c::FILE_ATTRIBUTE_TAG_INFO>().try_into().unwrap(),\n+                ))?;\n+                if attr_tag.FileAttributes & c::FILE_ATTRIBUTE_REPARSE_POINT != 0 {\n+                    reparse_tag = attr_tag.ReparseTag;\n                 }\n             }\n             Ok(FileAttr {\n@@ -390,10 +395,15 @@ impl File {\n             attr.file_size = info.AllocationSize as u64;\n             attr.number_of_links = Some(info.NumberOfLinks);\n             if attr.file_type().is_reparse_point() {\n-                let mut b =\n-                    Align8([MaybeUninit::<u8>::uninit(); c::MAXIMUM_REPARSE_DATA_BUFFER_SIZE]);\n-                if let Ok((_, buf)) = self.reparse_point(&mut b) {\n-                    attr.reparse_tag = (*buf).ReparseTag;\n+                let mut attr_tag: c::FILE_ATTRIBUTE_TAG_INFO = mem::zeroed();\n+                cvt(c::GetFileInformationByHandleEx(\n+                    self.handle.as_raw_handle(),\n+                    c::FileAttributeTagInfo,\n+                    ptr::addr_of_mut!(attr_tag).cast(),\n+                    mem::size_of::<c::FILE_ATTRIBUTE_TAG_INFO>().try_into().unwrap(),\n+                ))?;\n+                if attr_tag.FileAttributes & c::FILE_ATTRIBUTE_REPARSE_POINT != 0 {\n+                    reparse_tag = attr_tag.ReparseTag;\n                 }\n             }\n             Ok(attr)"}]}