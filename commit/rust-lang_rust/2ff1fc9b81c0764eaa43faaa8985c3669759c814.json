{"sha": "2ff1fc9b81c0764eaa43faaa8985c3669759c814", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJmZjFmYzliODFjMDc2NGVhYTQzZmFhYTg5ODVjMzY2OTc1OWM4MTQ=", "commit": {"author": {"name": "Dylan MacKenzie", "email": "ecstaticmorse@gmail.com", "date": "2020-04-12T17:48:56Z"}, "committer": {"name": "Dylan MacKenzie", "email": "ecstaticmorse@gmail.com", "date": "2020-04-22T16:57:43Z"}, "message": "Add `#[inline]` declarations", "tree": {"sha": "4ae8289711ad10dc5f4fcc425850139174765051", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4ae8289711ad10dc5f4fcc425850139174765051"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2ff1fc9b81c0764eaa43faaa8985c3669759c814", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2ff1fc9b81c0764eaa43faaa8985c3669759c814", "html_url": "https://github.com/rust-lang/rust/commit/2ff1fc9b81c0764eaa43faaa8985c3669759c814", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2ff1fc9b81c0764eaa43faaa8985c3669759c814/comments", "author": {"login": "ecstatic-morse", "id": 29463364, "node_id": "MDQ6VXNlcjI5NDYzMzY0", "avatar_url": "https://avatars.githubusercontent.com/u/29463364?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ecstatic-morse", "html_url": "https://github.com/ecstatic-morse", "followers_url": "https://api.github.com/users/ecstatic-morse/followers", "following_url": "https://api.github.com/users/ecstatic-morse/following{/other_user}", "gists_url": "https://api.github.com/users/ecstatic-morse/gists{/gist_id}", "starred_url": "https://api.github.com/users/ecstatic-morse/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ecstatic-morse/subscriptions", "organizations_url": "https://api.github.com/users/ecstatic-morse/orgs", "repos_url": "https://api.github.com/users/ecstatic-morse/repos", "events_url": "https://api.github.com/users/ecstatic-morse/events{/privacy}", "received_events_url": "https://api.github.com/users/ecstatic-morse/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ecstatic-morse", "id": 29463364, "node_id": "MDQ6VXNlcjI5NDYzMzY0", "avatar_url": "https://avatars.githubusercontent.com/u/29463364?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ecstatic-morse", "html_url": "https://github.com/ecstatic-morse", "followers_url": "https://api.github.com/users/ecstatic-morse/followers", "following_url": "https://api.github.com/users/ecstatic-morse/following{/other_user}", "gists_url": "https://api.github.com/users/ecstatic-morse/gists{/gist_id}", "starred_url": "https://api.github.com/users/ecstatic-morse/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ecstatic-morse/subscriptions", "organizations_url": "https://api.github.com/users/ecstatic-morse/orgs", "repos_url": "https://api.github.com/users/ecstatic-morse/repos", "events_url": "https://api.github.com/users/ecstatic-morse/events{/privacy}", "received_events_url": "https://api.github.com/users/ecstatic-morse/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8287842eb4bdc59d407ffcae29b0b5e8a4abb1be", "url": "https://api.github.com/repos/rust-lang/rust/commits/8287842eb4bdc59d407ffcae29b0b5e8a4abb1be", "html_url": "https://github.com/rust-lang/rust/commit/8287842eb4bdc59d407ffcae29b0b5e8a4abb1be"}], "stats": {"total": 16, "additions": 16, "deletions": 0}, "files": [{"sha": "b56198724db0bbf6a713a7525bcc4f94915b7437", "filename": "src/librustc_metadata/rmeta/encoder.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/2ff1fc9b81c0764eaa43faaa8985c3669759c814/src%2Flibrustc_metadata%2Frmeta%2Fencoder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2ff1fc9b81c0764eaa43faaa8985c3669759c814/src%2Flibrustc_metadata%2Frmeta%2Fencoder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_metadata%2Frmeta%2Fencoder.rs?ref=2ff1fc9b81c0764eaa43faaa8985c3669759c814", "patch": "@@ -68,6 +68,7 @@ macro_rules! encoder_methods {\n impl<'tcx> Encoder for EncodeContext<'tcx> {\n     type Error = <opaque::Encoder as Encoder>::Error;\n \n+    #[inline]\n     fn emit_unit(&mut self) -> Result<(), Self::Error> {\n         Ok(())\n     }"}, {"sha": "ea3e59666d67ae36b8aed616262e91cd03c72ce2", "filename": "src/librustc_middle/mir/mod.rs", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/2ff1fc9b81c0764eaa43faaa8985c3669759c814/src%2Flibrustc_middle%2Fmir%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2ff1fc9b81c0764eaa43faaa8985c3669759c814/src%2Flibrustc_middle%2Fmir%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_middle%2Fmir%2Fmod.rs?ref=2ff1fc9b81c0764eaa43faaa8985c3669759c814", "patch": "@@ -381,15 +381,18 @@ impl<'tcx> Body<'tcx> {\n     }\n \n     /// Returns the return type; it always return first element from `local_decls` array.\n+    #[inline]\n     pub fn return_ty(&self) -> Ty<'tcx> {\n         self.local_decls[RETURN_PLACE].ty\n     }\n \n     /// Gets the location of the terminator for the given block.\n+    #[inline]\n     pub fn terminator_loc(&self, bb: BasicBlock) -> Location {\n         Location { block: bb, statement_index: self[bb].statements.len() }\n     }\n \n+    #[inline]\n     pub fn predecessors_for(\n         &self,\n         bb: BasicBlock,\n@@ -398,6 +401,7 @@ impl<'tcx> Body<'tcx> {\n         MappedLockGuard::map(predecessors, |preds| &mut preds[bb])\n     }\n \n+    #[inline]\n     pub fn predecessors(&self) -> impl std::ops::Deref<Target = Predecessors> + '_ {\n         self.predecessor_cache.compute(&self.basic_blocks)\n     }\n@@ -2639,18 +2643,21 @@ impl<'tcx> graph::DirectedGraph for Body<'tcx> {\n }\n \n impl<'tcx> graph::WithNumNodes for Body<'tcx> {\n+    #[inline]\n     fn num_nodes(&self) -> usize {\n         self.basic_blocks.len()\n     }\n }\n \n impl<'tcx> graph::WithStartNode for Body<'tcx> {\n+    #[inline]\n     fn start_node(&self) -> Self::Node {\n         START_BLOCK\n     }\n }\n \n impl<'tcx> graph::WithSuccessors for Body<'tcx> {\n+    #[inline]\n     fn successors(&self, node: Self::Node) -> <Self as GraphSuccessors<'_>>::Iter {\n         self.basic_blocks[node].terminator().successors().cloned()\n     }\n@@ -2667,6 +2674,7 @@ impl graph::GraphPredecessors<'graph> for Body<'tcx> {\n }\n \n impl graph::WithPredecessors for Body<'tcx> {\n+    #[inline]\n     fn predecessors(&self, node: Self::Node) -> <Self as graph::GraphPredecessors<'_>>::Iter {\n         self.predecessors_for(node).clone().into_iter()\n     }"}, {"sha": "629b5c2efb7112d944d0ffae708bb11183b0f271", "filename": "src/librustc_middle/mir/predecessors.rs", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/2ff1fc9b81c0764eaa43faaa8985c3669759c814/src%2Flibrustc_middle%2Fmir%2Fpredecessors.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2ff1fc9b81c0764eaa43faaa8985c3669759c814/src%2Flibrustc_middle%2Fmir%2Fpredecessors.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_middle%2Fmir%2Fpredecessors.rs?ref=2ff1fc9b81c0764eaa43faaa8985c3669759c814", "patch": "@@ -15,14 +15,17 @@ pub struct PredecessorCache {\n }\n \n impl PredecessorCache {\n+    #[inline]\n     pub fn new() -> Self {\n         PredecessorCache { cache: Lock::new(None) }\n     }\n \n+    #[inline]\n     pub fn invalidate(&mut self) {\n         *self.cache.get_mut() = None;\n     }\n \n+    #[inline]\n     pub fn compute(\n         &self,\n         basic_blocks: &IndexVec<BasicBlock, BasicBlockData<'_>>,\n@@ -45,18 +48,21 @@ impl PredecessorCache {\n }\n \n impl serialize::Encodable for PredecessorCache {\n+    #[inline]\n     fn encode<S: serialize::Encoder>(&self, s: &mut S) -> Result<(), S::Error> {\n         serialize::Encodable::encode(&(), s)\n     }\n }\n \n impl serialize::Decodable for PredecessorCache {\n+    #[inline]\n     fn decode<D: serialize::Decoder>(d: &mut D) -> Result<Self, D::Error> {\n         serialize::Decodable::decode(d).map(|_v: ()| Self::new())\n     }\n }\n \n impl<CTX> HashStable<CTX> for PredecessorCache {\n+    #[inline]\n     fn hash_stable(&self, _: &mut CTX, _: &mut StableHasher) {\n         // do nothing\n     }"}, {"sha": "e9bb659d5c839ee115725f319b1a08264e468045", "filename": "src/librustc_middle/ty/query/on_disk_cache.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/2ff1fc9b81c0764eaa43faaa8985c3669759c814/src%2Flibrustc_middle%2Fty%2Fquery%2Fon_disk_cache.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2ff1fc9b81c0764eaa43faaa8985c3669759c814/src%2Flibrustc_middle%2Fty%2Fquery%2Fon_disk_cache.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_middle%2Fty%2Fquery%2Fon_disk_cache.rs?ref=2ff1fc9b81c0764eaa43faaa8985c3669759c814", "patch": "@@ -922,6 +922,7 @@ where\n {\n     type Error = E::Error;\n \n+    #[inline]\n     fn emit_unit(&mut self) -> Result<(), Self::Error> {\n         Ok(())\n     }"}]}