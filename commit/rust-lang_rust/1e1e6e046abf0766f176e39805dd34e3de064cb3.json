{"sha": "1e1e6e046abf0766f176e39805dd34e3de064cb3", "node_id": "MDY6Q29tbWl0NzI0NzEyOjFlMWU2ZTA0NmFiZjA3NjZmMTc2ZTM5ODA1ZGQzNGUzZGUwNjRjYjM=", "commit": {"author": {"name": "Barosl Lee", "email": "vcs@barosl.com", "date": "2015-05-08T15:39:58Z"}, "committer": {"name": "Barosl Lee", "email": "vcs@barosl.com", "date": "2015-05-08T17:24:18Z"}, "message": "Fix invalid references due to the automated string substitution", "tree": {"sha": "6f7f0ca80733bdb52fd8fc46c641bd30133c2e85", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6f7f0ca80733bdb52fd8fc46c641bd30133c2e85"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1e1e6e046abf0766f176e39805dd34e3de064cb3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1e1e6e046abf0766f176e39805dd34e3de064cb3", "html_url": "https://github.com/rust-lang/rust/commit/1e1e6e046abf0766f176e39805dd34e3de064cb3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1e1e6e046abf0766f176e39805dd34e3de064cb3/comments", "author": {"login": "barosl", "id": 573768, "node_id": "MDQ6VXNlcjU3Mzc2OA==", "avatar_url": "https://avatars.githubusercontent.com/u/573768?v=4", "gravatar_id": "", "url": "https://api.github.com/users/barosl", "html_url": "https://github.com/barosl", "followers_url": "https://api.github.com/users/barosl/followers", "following_url": "https://api.github.com/users/barosl/following{/other_user}", "gists_url": "https://api.github.com/users/barosl/gists{/gist_id}", "starred_url": "https://api.github.com/users/barosl/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/barosl/subscriptions", "organizations_url": "https://api.github.com/users/barosl/orgs", "repos_url": "https://api.github.com/users/barosl/repos", "events_url": "https://api.github.com/users/barosl/events{/privacy}", "received_events_url": "https://api.github.com/users/barosl/received_events", "type": "User", "site_admin": false}, "committer": {"login": "barosl", "id": 573768, "node_id": "MDQ6VXNlcjU3Mzc2OA==", "avatar_url": "https://avatars.githubusercontent.com/u/573768?v=4", "gravatar_id": "", "url": "https://api.github.com/users/barosl", "html_url": "https://github.com/barosl", "followers_url": "https://api.github.com/users/barosl/followers", "following_url": "https://api.github.com/users/barosl/following{/other_user}", "gists_url": "https://api.github.com/users/barosl/gists{/gist_id}", "starred_url": "https://api.github.com/users/barosl/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/barosl/subscriptions", "organizations_url": "https://api.github.com/users/barosl/orgs", "repos_url": "https://api.github.com/users/barosl/repos", "events_url": "https://api.github.com/users/barosl/events{/privacy}", "received_events_url": "https://api.github.com/users/barosl/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ff332b6467b2b93831c3f0ae3665e920ec725959", "url": "https://api.github.com/repos/rust-lang/rust/commits/ff332b6467b2b93831c3f0ae3665e920ec725959", "html_url": "https://github.com/rust-lang/rust/commit/ff332b6467b2b93831c3f0ae3665e920ec725959"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "8f721a9767672fa5439a9668dfb619ab36f470ac", "filename": "src/doc/style/ownership/builders.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1e1e6e046abf0766f176e39805dd34e3de064cb3/src%2Fdoc%2Fstyle%2Fownership%2Fbuilders.md", "raw_url": "https://github.com/rust-lang/rust/raw/1e1e6e046abf0766f176e39805dd34e3de064cb3/src%2Fdoc%2Fstyle%2Fownership%2Fbuilders.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Fstyle%2Fownership%2Fbuilders.md?ref=1e1e6e046abf0766f176e39805dd34e3de064cb3", "patch": "@@ -115,7 +115,7 @@ Sometimes builders must transfer ownership when constructing the final type\n `T`, meaning that the terminal methods must take `self` rather than `&self`:\n \n ```rust\n-// A simplified excerpt from std::thread::ThreadBuilder\n+// A simplified excerpt from std::thread::Builder\n \n impl ThreadBuilder {\n     /// Name the thread-to-be. Currently the name is used for identification"}, {"sha": "f4f066fb3dfe3c5243f458bce92f2c3e9ef2d790", "filename": "src/doc/trpl/academic-research.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1e1e6e046abf0766f176e39805dd34e3de064cb3/src%2Fdoc%2Ftrpl%2Facademic-research.md", "raw_url": "https://github.com/rust-lang/rust/raw/1e1e6e046abf0766f176e39805dd34e3de064cb3/src%2Fdoc%2Ftrpl%2Facademic-research.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Ftrpl%2Facademic-research.md?ref=1e1e6e046abf0766f176e39805dd34e3de064cb3", "patch": "@@ -24,7 +24,7 @@ Recommended for inspiration and a better understanding of Rust's background.\n * [Thread scheduling for multiprogramming multiprocessors](http://www.eecis.udel.edu/%7Ecavazos/cisc879-spring2008/papers/arora98thread.pdf)\n * [The data locality of work stealing](http://www.aladdin.cs.cmu.edu/papers/pdfs/y2000/locality_spaa00.pdf)\n * [Dynamic circular work stealing deque](http://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.170.1097&rep=rep1&type=pdf) - The Chase/Lev deque\n-* [Work-first and help-first scheduling policies for async-finish thread parallelism](http://www.cs.rice.edu/%7Eyguo/pubs/PID824943.pdf) - More general than fully-strict work stealing\n+* [Work-first and help-first scheduling policies for async-finish task parallelism](http://www.cs.rice.edu/%7Eyguo/pubs/PID824943.pdf) - More general than fully-strict work stealing\n * [A Java fork/join calamity](http://www.coopsoft.com/ar/CalamityArticle.html) - critique of Java's fork/join library, particularly its application of work stealing to non-strict computation\n * [Scheduling techniques for concurrent systems](http://www.ece.rutgers.edu/%7Eparashar/Classes/ece572-papers/05/ps-ousterhout.pdf)\n * [Contention aware scheduling](http://www.blagodurov.net/files/a8-blagodurov.pdf)"}]}