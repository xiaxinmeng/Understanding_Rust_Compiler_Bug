{"sha": "20a90485c040df87a667e9b6ee38e4d8a7d7fc5d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjIwYTkwNDg1YzA0MGRmODdhNjY3ZTliNmVlMzhlNGQ4YTdkN2ZjNWQ=", "commit": {"author": {"name": "Jeffrey Seyfried", "email": "jeffrey.seyfried@gmail.com", "date": "2017-03-31T04:06:28Z"}, "committer": {"name": "Jeffrey Seyfried", "email": "jeffrey.seyfried@gmail.com", "date": "2017-06-26T02:06:32Z"}, "message": "Add exmaple/test for `quote!` hygiene.", "tree": {"sha": "84627e1078881a7dfd93db7c857542366043cf26", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/84627e1078881a7dfd93db7c857542366043cf26"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/20a90485c040df87a667e9b6ee38e4d8a7d7fc5d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/20a90485c040df87a667e9b6ee38e4d8a7d7fc5d", "html_url": "https://github.com/rust-lang/rust/commit/20a90485c040df87a667e9b6ee38e4d8a7d7fc5d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/20a90485c040df87a667e9b6ee38e4d8a7d7fc5d/comments", "author": {"login": "jseyfried", "id": 8652869, "node_id": "MDQ6VXNlcjg2NTI4Njk=", "avatar_url": "https://avatars.githubusercontent.com/u/8652869?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jseyfried", "html_url": "https://github.com/jseyfried", "followers_url": "https://api.github.com/users/jseyfried/followers", "following_url": "https://api.github.com/users/jseyfried/following{/other_user}", "gists_url": "https://api.github.com/users/jseyfried/gists{/gist_id}", "starred_url": "https://api.github.com/users/jseyfried/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jseyfried/subscriptions", "organizations_url": "https://api.github.com/users/jseyfried/orgs", "repos_url": "https://api.github.com/users/jseyfried/repos", "events_url": "https://api.github.com/users/jseyfried/events{/privacy}", "received_events_url": "https://api.github.com/users/jseyfried/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jseyfried", "id": 8652869, "node_id": "MDQ6VXNlcjg2NTI4Njk=", "avatar_url": "https://avatars.githubusercontent.com/u/8652869?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jseyfried", "html_url": "https://github.com/jseyfried", "followers_url": "https://api.github.com/users/jseyfried/followers", "following_url": "https://api.github.com/users/jseyfried/following{/other_user}", "gists_url": "https://api.github.com/users/jseyfried/gists{/gist_id}", "starred_url": "https://api.github.com/users/jseyfried/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jseyfried/subscriptions", "organizations_url": "https://api.github.com/users/jseyfried/orgs", "repos_url": "https://api.github.com/users/jseyfried/repos", "events_url": "https://api.github.com/users/jseyfried/events{/privacy}", "received_events_url": "https://api.github.com/users/jseyfried/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7d493bdd2a9f86ed51bc80a5c91cbb502aa3b3c4", "url": "https://api.github.com/repos/rust-lang/rust/commits/7d493bdd2a9f86ed51bc80a5c91cbb502aa3b3c4", "html_url": "https://github.com/rust-lang/rust/commit/7d493bdd2a9f86ed51bc80a5c91cbb502aa3b3c4"}], "stats": {"total": 82, "additions": 82, "deletions": 0}, "files": [{"sha": "8ffa7abe6f7f943e35f6029ef74679df939c0b92", "filename": "src/test/run-pass-fulldeps/proc-macro/auxiliary/hygiene_example.rs", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/20a90485c040df87a667e9b6ee38e4d8a7d7fc5d/src%2Ftest%2Frun-pass-fulldeps%2Fproc-macro%2Fauxiliary%2Fhygiene_example.rs", "raw_url": "https://github.com/rust-lang/rust/raw/20a90485c040df87a667e9b6ee38e4d8a7d7fc5d/src%2Ftest%2Frun-pass-fulldeps%2Fproc-macro%2Fauxiliary%2Fhygiene_example.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass-fulldeps%2Fproc-macro%2Fauxiliary%2Fhygiene_example.rs?ref=20a90485c040df87a667e9b6ee38e4d8a7d7fc5d", "patch": "@@ -0,0 +1,19 @@\n+// Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#![feature(proc_macro)]\n+\n+extern crate hygiene_example_codegen;\n+\n+pub use hygiene_example_codegen::hello;\n+\n+pub fn print(string: &str) {\n+    println!(\"{}\", string);\n+}"}, {"sha": "055e4e2fad7af52c84f2fc5850ea6fc6969a2b79", "filename": "src/test/run-pass-fulldeps/proc-macro/auxiliary/hygiene_example_codegen.rs", "status": "added", "additions": 36, "deletions": 0, "changes": 36, "blob_url": "https://github.com/rust-lang/rust/blob/20a90485c040df87a667e9b6ee38e4d8a7d7fc5d/src%2Ftest%2Frun-pass-fulldeps%2Fproc-macro%2Fauxiliary%2Fhygiene_example_codegen.rs", "raw_url": "https://github.com/rust-lang/rust/raw/20a90485c040df87a667e9b6ee38e4d8a7d7fc5d/src%2Ftest%2Frun-pass-fulldeps%2Fproc-macro%2Fauxiliary%2Fhygiene_example_codegen.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass-fulldeps%2Fproc-macro%2Fauxiliary%2Fhygiene_example_codegen.rs?ref=20a90485c040df87a667e9b6ee38e4d8a7d7fc5d", "patch": "@@ -0,0 +1,36 @@\n+// Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// no-prefer-dynamic\n+\n+#![feature(proc_macro)]\n+#![crate_type = \"proc-macro\"]\n+\n+extern crate proc_macro as proc_macro_renamed; // This does not break `quote!`\n+\n+use proc_macro_renamed::{TokenStream, quote};\n+\n+#[proc_macro]\n+pub fn hello(input: TokenStream) -> TokenStream {\n+    quote!(hello_helper!($input))\n+    //^ `hello_helper!` always resolves to the following proc macro,\n+    //| no matter where `hello!` is used.\n+}\n+\n+#[proc_macro]\n+pub fn hello_helper(input: TokenStream) -> TokenStream {\n+    quote! {\n+        extern crate hygiene_example; // This is never a conflict error\n+        let string = format!(\"hello {}\", $input);\n+        //^ `format!` always resolves to the prelude macro,\n+        //| even if a different `format!` is in scope where `hello!` is used.\n+        hygiene_example::print(&string)\n+    }\n+}"}, {"sha": "51198db5aa76d137fdc81d1da315c29ed7ae0113", "filename": "src/test/run-pass-fulldeps/proc-macro/hygiene_example.rs", "status": "added", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/20a90485c040df87a667e9b6ee38e4d8a7d7fc5d/src%2Ftest%2Frun-pass-fulldeps%2Fproc-macro%2Fhygiene_example.rs", "raw_url": "https://github.com/rust-lang/rust/raw/20a90485c040df87a667e9b6ee38e4d8a7d7fc5d/src%2Ftest%2Frun-pass-fulldeps%2Fproc-macro%2Fhygiene_example.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass-fulldeps%2Fproc-macro%2Fhygiene_example.rs?ref=20a90485c040df87a667e9b6ee38e4d8a7d7fc5d", "patch": "@@ -0,0 +1,27 @@\n+// Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// aux-build:hygiene_example_codegen.rs\n+// aux-build:hygiene_example.rs\n+\n+#![feature(proc_macro)]\n+\n+extern crate hygiene_example;\n+use hygiene_example::hello;\n+\n+fn main() {\n+    mod hygiene_example {} // no conflict with `extern crate hygiene_example;` from the proc macro\n+    macro_rules! format { () => {} } // does not interfere with `format!` from the proc macro\n+    macro_rules! hello_helper { () => {} } // similarly does not intefere with the proc macro\n+\n+    let string = \"world\"; // no conflict with `string` from the proc macro\n+    hello!(string);\n+    hello!(string);\n+}"}]}