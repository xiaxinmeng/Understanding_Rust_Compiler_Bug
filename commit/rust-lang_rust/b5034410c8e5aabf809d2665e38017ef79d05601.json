{"sha": "b5034410c8e5aabf809d2665e38017ef79d05601", "node_id": "MDY6Q29tbWl0NzI0NzEyOmI1MDM0NDEwYzhlNWFhYmY4MDlkMjY2NWUzODAxN2VmNzlkMDU2MDE=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2018-01-07T13:01:30Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2018-01-07T13:01:30Z"}, "message": "G: function item", "tree": {"sha": "e38af66118447b1834acf6d25630c294ea622176", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e38af66118447b1834acf6d25630c294ea622176"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b5034410c8e5aabf809d2665e38017ef79d05601", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b5034410c8e5aabf809d2665e38017ef79d05601", "html_url": "https://github.com/rust-lang/rust/commit/b5034410c8e5aabf809d2665e38017ef79d05601", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b5034410c8e5aabf809d2665e38017ef79d05601/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7c6f0f9128665c1a605caaa552347b936578f952", "url": "https://api.github.com/repos/rust-lang/rust/commits/7c6f0f9128665c1a605caaa552347b936578f952", "html_url": "https://github.com/rust-lang/rust/commit/7c6f0f9128665c1a605caaa552347b936578f952"}], "stats": {"total": 36, "additions": 32, "deletions": 4}, "files": [{"sha": "9beb7f7aa2cdf62cfac5374b5e9a6a2e45cb10c3", "filename": "grammar.ron", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/b5034410c8e5aabf809d2665e38017ef79d05601/grammar.ron", "raw_url": "https://github.com/rust-lang/rust/raw/b5034410c8e5aabf809d2665e38017ef79d05601/grammar.ron", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/grammar.ron?ref=b5034410c8e5aabf809d2665e38017ef79d05601", "patch": "@@ -64,5 +64,6 @@ Grammar(\n         \"FILE\",\n         \"STRUCT_ITEM\",\n         \"STRUCT_FIELD\",\n+        \"FN_ITEM\",\n     ]\n )\n\\ No newline at end of file"}, {"sha": "09b2f02b2d4ff0ba4c8c236278c864490002b80a", "filename": "src/parser/event_parser/grammar.rs", "status": "modified", "additions": 14, "deletions": 3, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/b5034410c8e5aabf809d2665e38017ef79d05601/src%2Fparser%2Fevent_parser%2Fgrammar.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b5034410c8e5aabf809d2665e38017ef79d05601/src%2Fparser%2Fevent_parser%2Fgrammar.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fparser%2Fevent_parser%2Fgrammar.rs?ref=b5034410c8e5aabf809d2665e38017ef79d05601", "patch": "@@ -22,16 +22,21 @@ fn inner_attributes(_: &mut Parser) {\n }\n \n fn item_first(p: &Parser) -> bool {\n-    match p.current() {\n-        Some(STRUCT_KW) => true,\n+    let current = match p.current() {\n+        Some(c) => c,\n+        None => return false,\n+    };\n+    match current {\n+        STRUCT_KW | FN_KW => true,\n         _ => false,\n     }\n }\n \n fn item(p: &mut Parser) {\n     outer_attributes(p);\n     visibility(p);\n-    node_if(p, STRUCT_KW, STRUCT_ITEM, struct_item);\n+    node_if(p, STRUCT_KW, STRUCT_ITEM, struct_item)\n+        || node_if(p, FN_KW, FN_ITEM, fn_item);\n }\n \n fn struct_item(p: &mut Parser) {\n@@ -45,6 +50,12 @@ fn struct_field(p: &mut Parser) -> bool {\n     })\n }\n \n+fn fn_item(p: &mut Parser) {\n+    p.expect(IDENT) && p.expect(L_PAREN) && p.expect(R_PAREN)\n+        && p.curly_block(|p| ());\n+}\n+\n+\n // Paths, types, attributes, and stuff //\n \n fn outer_attributes(_: &mut Parser) {"}, {"sha": "6099cd6e0da290561f83e47639f7c4033416b12e", "filename": "src/syntax_kinds.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/b5034410c8e5aabf809d2665e38017ef79d05601/src%2Fsyntax_kinds.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b5034410c8e5aabf809d2665e38017ef79d05601/src%2Fsyntax_kinds.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fsyntax_kinds.rs?ref=b5034410c8e5aabf809d2665e38017ef79d05601", "patch": "@@ -61,8 +61,9 @@ pub const SHEBANG: SyntaxKind = SyntaxKind(56);\n pub const FILE: SyntaxKind = SyntaxKind(57);\n pub const STRUCT_ITEM: SyntaxKind = SyntaxKind(58);\n pub const STRUCT_FIELD: SyntaxKind = SyntaxKind(59);\n+pub const FN_ITEM: SyntaxKind = SyntaxKind(60);\n \n-static INFOS: [SyntaxInfo; 60] = [\n+static INFOS: [SyntaxInfo; 61] = [\n     SyntaxInfo { name: \"USE_KW\" },\n     SyntaxInfo { name: \"FN_KW\" },\n     SyntaxInfo { name: \"STRUCT_KW\" },\n@@ -123,6 +124,7 @@ static INFOS: [SyntaxInfo; 60] = [\n     SyntaxInfo { name: \"FILE\" },\n     SyntaxInfo { name: \"STRUCT_ITEM\" },\n     SyntaxInfo { name: \"STRUCT_FIELD\" },\n+    SyntaxInfo { name: \"FN_ITEM\" },\n ];\n \n pub(crate) fn syntax_info(kind: SyntaxKind) -> &'static SyntaxInfo {"}, {"sha": "03210551cb1741bb5c4fc59e62e9ff47682ef65c", "filename": "tests/data/parser/ok/0005_fn_item.rs", "status": "added", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b5034410c8e5aabf809d2665e38017ef79d05601/tests%2Fdata%2Fparser%2Fok%2F0005_fn_item.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b5034410c8e5aabf809d2665e38017ef79d05601/tests%2Fdata%2Fparser%2Fok%2F0005_fn_item.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fdata%2Fparser%2Fok%2F0005_fn_item.rs?ref=b5034410c8e5aabf809d2665e38017ef79d05601", "patch": "@@ -0,0 +1,2 @@\n+fn foo() {\n+}"}, {"sha": "e37129ff15442475c1979aa0b0a59804f3bb3049", "filename": "tests/data/parser/ok/0005_fn_item.txt", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/b5034410c8e5aabf809d2665e38017ef79d05601/tests%2Fdata%2Fparser%2Fok%2F0005_fn_item.txt", "raw_url": "https://github.com/rust-lang/rust/raw/b5034410c8e5aabf809d2665e38017ef79d05601/tests%2Fdata%2Fparser%2Fok%2F0005_fn_item.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fdata%2Fparser%2Fok%2F0005_fn_item.txt?ref=b5034410c8e5aabf809d2665e38017ef79d05601", "patch": "@@ -0,0 +1,12 @@\n+FILE@[0; 13)\n+  FN_ITEM@[0; 13)\n+    FN_KW@[0; 2)\n+    WHITESPACE@[2; 3)\n+    IDENT@[3; 6)\n+    L_PAREN@[6; 7)\n+    R_PAREN@[7; 8)\n+    WHITESPACE@[8; 9)\n+    L_CURLY@[9; 10)\n+    WHITESPACE@[10; 11)\n+    R_CURLY@[11; 12)\n+    WHITESPACE@[12; 13)"}]}