{"sha": "6e84f00045e20cbd9f9d2695f67e9fc0852134d4", "node_id": "C_kwDOAAsO6NoAKDZlODRmMDAwNDVlMjBjYmQ5ZjlkMjY5NWY2N2U5ZmMwODUyMTM0ZDQ", "commit": {"author": {"name": "5225225", "email": "5225225@mailbox.org", "date": "2021-11-09T17:35:35Z"}, "committer": {"name": "5225225", "email": "5225225@mailbox.org", "date": "2021-11-09T17:35:35Z"}, "message": "Check MSRV for bool to int from impl", "tree": {"sha": "66faf7cfe90a6c43a6025301d031ed60d6dfd83c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/66faf7cfe90a6c43a6025301d031ed60d6dfd83c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6e84f00045e20cbd9f9d2695f67e9fc0852134d4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6e84f00045e20cbd9f9d2695f67e9fc0852134d4", "html_url": "https://github.com/rust-lang/rust/commit/6e84f00045e20cbd9f9d2695f67e9fc0852134d4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6e84f00045e20cbd9f9d2695f67e9fc0852134d4/comments", "author": {"login": "5225225", "id": 8584210, "node_id": "MDQ6VXNlcjg1ODQyMTA=", "avatar_url": "https://avatars.githubusercontent.com/u/8584210?v=4", "gravatar_id": "", "url": "https://api.github.com/users/5225225", "html_url": "https://github.com/5225225", "followers_url": "https://api.github.com/users/5225225/followers", "following_url": "https://api.github.com/users/5225225/following{/other_user}", "gists_url": "https://api.github.com/users/5225225/gists{/gist_id}", "starred_url": "https://api.github.com/users/5225225/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/5225225/subscriptions", "organizations_url": "https://api.github.com/users/5225225/orgs", "repos_url": "https://api.github.com/users/5225225/repos", "events_url": "https://api.github.com/users/5225225/events{/privacy}", "received_events_url": "https://api.github.com/users/5225225/received_events", "type": "User", "site_admin": false}, "committer": {"login": "5225225", "id": 8584210, "node_id": "MDQ6VXNlcjg1ODQyMTA=", "avatar_url": "https://avatars.githubusercontent.com/u/8584210?v=4", "gravatar_id": "", "url": "https://api.github.com/users/5225225", "html_url": "https://github.com/5225225", "followers_url": "https://api.github.com/users/5225225/followers", "following_url": "https://api.github.com/users/5225225/following{/other_user}", "gists_url": "https://api.github.com/users/5225225/gists{/gist_id}", "starred_url": "https://api.github.com/users/5225225/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/5225225/subscriptions", "organizations_url": "https://api.github.com/users/5225225/orgs", "repos_url": "https://api.github.com/users/5225225/repos", "events_url": "https://api.github.com/users/5225225/events{/privacy}", "received_events_url": "https://api.github.com/users/5225225/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "96db1d6bea254b23bcda76206683d7452ff45c48", "url": "https://api.github.com/repos/rust-lang/rust/commits/96db1d6bea254b23bcda76206683d7452ff45c48", "html_url": "https://github.com/rust-lang/rust/commit/96db1d6bea254b23bcda76206683d7452ff45c48"}], "stats": {"total": 41, "additions": 31, "deletions": 10}, "files": [{"sha": "cc360fc9c760cbf4a3839133d34de31fb206f4b1", "filename": "clippy_lints/src/casts/cast_lossless.rs", "status": "modified", "additions": 19, "deletions": 5, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/6e84f00045e20cbd9f9d2695f67e9fc0852134d4/clippy_lints%2Fsrc%2Fcasts%2Fcast_lossless.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6e84f00045e20cbd9f9d2695f67e9fc0852134d4/clippy_lints%2Fsrc%2Fcasts%2Fcast_lossless.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fcasts%2Fcast_lossless.rs?ref=6e84f00045e20cbd9f9d2695f67e9fc0852134d4", "patch": "@@ -1,16 +1,24 @@\n use clippy_utils::diagnostics::span_lint_and_sugg;\n-use clippy_utils::in_constant;\n use clippy_utils::source::snippet_opt;\n use clippy_utils::ty::is_isize_or_usize;\n+use clippy_utils::{in_constant, meets_msrv, msrvs};\n use rustc_errors::Applicability;\n use rustc_hir::{Expr, ExprKind};\n use rustc_lint::LateContext;\n use rustc_middle::ty::{self, FloatTy, Ty};\n+use rustc_semver::RustcVersion;\n \n use super::{utils, CAST_LOSSLESS};\n \n-pub(super) fn check(cx: &LateContext<'_>, expr: &Expr<'_>, cast_op: &Expr<'_>, cast_from: Ty<'_>, cast_to: Ty<'_>) {\n-    if !should_lint(cx, expr, cast_from, cast_to) {\n+pub(super) fn check(\n+    cx: &LateContext<'_>,\n+    expr: &Expr<'_>,\n+    cast_op: &Expr<'_>,\n+    cast_from: Ty<'_>,\n+    cast_to: Ty<'_>,\n+    msrv: &Option<RustcVersion>,\n+) {\n+    if !should_lint(cx, expr, cast_from, cast_to, msrv) {\n         return;\n     }\n \n@@ -46,7 +54,13 @@ pub(super) fn check(cx: &LateContext<'_>, expr: &Expr<'_>, cast_op: &Expr<'_>, c\n     );\n }\n \n-fn should_lint(cx: &LateContext<'_>, expr: &Expr<'_>, cast_from: Ty<'_>, cast_to: Ty<'_>) -> bool {\n+fn should_lint(\n+    cx: &LateContext<'_>,\n+    expr: &Expr<'_>,\n+    cast_from: Ty<'_>,\n+    cast_to: Ty<'_>,\n+    msrv: &Option<RustcVersion>,\n+) -> bool {\n     // Do not suggest using From in consts/statics until it is valid to do so (see #2267).\n     if in_constant(cx, expr.hir_id) {\n         return false;\n@@ -72,7 +86,7 @@ fn should_lint(cx: &LateContext<'_>, expr: &Expr<'_>, cast_from: Ty<'_>, cast_to\n             };\n             from_nbits < to_nbits\n         },\n-        (false, true) if matches!(cast_from.kind(), ty::Bool) => true,\n+        (false, true) if matches!(cast_from.kind(), ty::Bool) && meets_msrv(msrv.as_ref(), &msrvs::FROM_BOOL) => true,\n         (_, _) => {\n             matches!(cast_from.kind(), ty::Float(FloatTy::F32)) && matches!(cast_to.kind(), ty::Float(FloatTy::F64))\n         },"}, {"sha": "822ac4c242e0a7b655dafc9428967de268460236", "filename": "clippy_lints/src/casts/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6e84f00045e20cbd9f9d2695f67e9fc0852134d4/clippy_lints%2Fsrc%2Fcasts%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6e84f00045e20cbd9f9d2695f67e9fc0852134d4/clippy_lints%2Fsrc%2Fcasts%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fcasts%2Fmod.rs?ref=6e84f00045e20cbd9f9d2695f67e9fc0852134d4", "patch": "@@ -435,7 +435,7 @@ impl<'tcx> LateLintPass<'tcx> for Casts {\n                     cast_sign_loss::check(cx, expr, cast_expr, cast_from, cast_to);\n                 }\n \n-                cast_lossless::check(cx, expr, cast_expr, cast_from, cast_to);\n+                cast_lossless::check(cx, expr, cast_expr, cast_from, cast_to, &self.msrv);\n             }\n         }\n "}, {"sha": "fb11928dad6ced4ba5173317e5c6c070c14e814b", "filename": "clippy_utils/src/msrvs.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/6e84f00045e20cbd9f9d2695f67e9fc0852134d4/clippy_utils%2Fsrc%2Fmsrvs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6e84f00045e20cbd9f9d2695f67e9fc0852134d4/clippy_utils%2Fsrc%2Fmsrvs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_utils%2Fsrc%2Fmsrvs.rs?ref=6e84f00045e20cbd9f9d2695f67e9fc0852134d4", "patch": "@@ -28,6 +28,7 @@ msrv_aliases! {\n     1,35,0 { OPTION_COPIED, RANGE_CONTAINS }\n     1,34,0 { TRY_FROM }\n     1,30,0 { ITERATOR_FIND_MAP, TOOL_ATTRIBUTES }\n+    1,28,0 { FROM_BOOL }\n     1,17,0 { FIELD_INIT_SHORTHAND, STATIC_IN_CONST }\n     1,16,0 { STR_REPEAT }\n }"}, {"sha": "c5f221220ece7374caeab1c21dc14c35e6b8751e", "filename": "tests/ui/min_rust_version_attr.rs", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/6e84f00045e20cbd9f9d2695f67e9fc0852134d4/tests%2Fui%2Fmin_rust_version_attr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6e84f00045e20cbd9f9d2695f67e9fc0852134d4/tests%2Fui%2Fmin_rust_version_attr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmin_rust_version_attr.rs?ref=6e84f00045e20cbd9f9d2695f67e9fc0852134d4", "patch": "@@ -140,6 +140,11 @@ fn unnest_or_patterns() {\n #[cfg_attr(rustfmt, rustfmt_skip)]\n fn deprecated_cfg_attr() {}\n \n+#[warn(clippy::cast_lossless)]\n+fn int_from_bool() -> u8 {\n+    true as u8\n+}\n+\n fn main() {\n     filter_map_next();\n     checked_conversion();\n@@ -156,6 +161,7 @@ fn main() {\n     map_unwrap_or();\n     missing_const_for_fn();\n     unnest_or_patterns();\n+    int_from_bool();\n }\n \n mod just_under_msrv {"}, {"sha": "6b3fdb0844b49e1a0e2dd23dfc6c0fc70dcc4942", "filename": "tests/ui/min_rust_version_attr.stderr", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/6e84f00045e20cbd9f9d2695f67e9fc0852134d4/tests%2Fui%2Fmin_rust_version_attr.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6e84f00045e20cbd9f9d2695f67e9fc0852134d4/tests%2Fui%2Fmin_rust_version_attr.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmin_rust_version_attr.stderr?ref=6e84f00045e20cbd9f9d2695f67e9fc0852134d4", "patch": "@@ -1,12 +1,12 @@\n error: stripping a prefix manually\n-  --> $DIR/min_rust_version_attr.rs:180:24\n+  --> $DIR/min_rust_version_attr.rs:186:24\n    |\n LL |             assert_eq!(s[\"hello, \".len()..].to_uppercase(), \"WORLD!\");\n    |                        ^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: `-D clippy::manual-strip` implied by `-D warnings`\n note: the prefix was tested here\n-  --> $DIR/min_rust_version_attr.rs:179:9\n+  --> $DIR/min_rust_version_attr.rs:185:9\n    |\n LL |         if s.starts_with(\"hello, \") {\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n@@ -17,13 +17,13 @@ LL ~             assert_eq!(<stripped>.to_uppercase(), \"WORLD!\");\n    |\n \n error: stripping a prefix manually\n-  --> $DIR/min_rust_version_attr.rs:192:24\n+  --> $DIR/min_rust_version_attr.rs:198:24\n    |\n LL |             assert_eq!(s[\"hello, \".len()..].to_uppercase(), \"WORLD!\");\n    |                        ^^^^^^^^^^^^^^^^^^^^\n    |\n note: the prefix was tested here\n-  --> $DIR/min_rust_version_attr.rs:191:9\n+  --> $DIR/min_rust_version_attr.rs:197:9\n    |\n LL |         if s.starts_with(\"hello, \") {\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^"}]}