{"sha": "09fe163c9290b8aa573decb25d5b4b02f33e481e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjA5ZmUxNjNjOTI5MGI4YWE1NzNkZWNiMjVkNWI0YjAyZjMzZTQ4MWU=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2020-03-31T11:45:43Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2020-03-31T11:45:43Z"}, "message": "Auto merge of #5397 - pmk21:macro-single-match, r=flip1995\n\nAvoid single_match lint in macro rules\n\nchangelog: none\nfixes #5359", "tree": {"sha": "28cb312b81b4845e4362fd31bd5b430c4c98c2c0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/28cb312b81b4845e4362fd31bd5b430c4c98c2c0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/09fe163c9290b8aa573decb25d5b4b02f33e481e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/09fe163c9290b8aa573decb25d5b4b02f33e481e", "html_url": "https://github.com/rust-lang/rust/commit/09fe163c9290b8aa573decb25d5b4b02f33e481e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/09fe163c9290b8aa573decb25d5b4b02f33e481e/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1cac2f9e8601a952afa1c90c7b61c143108c3542", "url": "https://api.github.com/repos/rust-lang/rust/commits/1cac2f9e8601a952afa1c90c7b61c143108c3542", "html_url": "https://github.com/rust-lang/rust/commit/1cac2f9e8601a952afa1c90c7b61c143108c3542"}, {"sha": "79ab05458fb8eea29f1ebf9c15e73de9326eb0d5", "url": "https://api.github.com/repos/rust-lang/rust/commits/79ab05458fb8eea29f1ebf9c15e73de9326eb0d5", "html_url": "https://github.com/rust-lang/rust/commit/79ab05458fb8eea29f1ebf9c15e73de9326eb0d5"}], "stats": {"total": 34, "additions": 32, "deletions": 2}, "files": [{"sha": "20b793f95dedb91e894d99cef29c2fdb4dbe00a2", "filename": "clippy_lints/src/matches.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/09fe163c9290b8aa573decb25d5b4b02f33e481e/clippy_lints%2Fsrc%2Fmatches.rs", "raw_url": "https://github.com/rust-lang/rust/raw/09fe163c9290b8aa573decb25d5b4b02f33e481e/clippy_lints%2Fsrc%2Fmatches.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmatches.rs?ref=09fe163c9290b8aa573decb25d5b4b02f33e481e", "patch": "@@ -447,6 +447,11 @@ impl<'a, 'tcx> LateLintPass<'a, 'tcx> for Matches {\n #[rustfmt::skip]\n fn check_single_match(cx: &LateContext<'_, '_>, ex: &Expr<'_>, arms: &[Arm<'_>], expr: &Expr<'_>) {\n     if arms.len() == 2 && arms[0].guard.is_none() && arms[1].guard.is_none() {\n+        if in_macro(expr.span) {\n+            // Don't lint match expressions present in\n+            // macro_rules! block\n+            return;\n+        }\n         if let PatKind::Or(..) = arms[0].pat.kind {\n             // don't lint for or patterns for now, this makes\n             // the lint noisy in unnecessary situations"}, {"sha": "1c55af5dfb673536605d3443bc135b4d49209e65", "filename": "tests/ui/single_match.rs", "status": "modified", "additions": 12, "deletions": 1, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/09fe163c9290b8aa573decb25d5b4b02f33e481e/tests%2Fui%2Fsingle_match.rs", "raw_url": "https://github.com/rust-lang/rust/raw/09fe163c9290b8aa573decb25d5b4b02f33e481e/tests%2Fui%2Fsingle_match.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fsingle_match.rs?ref=09fe163c9290b8aa573decb25d5b4b02f33e481e", "patch": "@@ -81,4 +81,15 @@ fn single_match_know_enum() {\n     }\n }\n \n-fn main() {}\n+macro_rules! single_match {\n+    ($num:literal) => {\n+        match $num {\n+            15 => println!(\"15\"),\n+            _ => (),\n+        }\n+    };\n+}\n+\n+fn main() {\n+    single_match!(5);\n+}"}, {"sha": "34193be0b75e40b978ae7661c3ab944fe1fd5b90", "filename": "tests/ui/single_match_else.rs", "status": "modified", "additions": 15, "deletions": 1, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/09fe163c9290b8aa573decb25d5b4b02f33e481e/tests%2Fui%2Fsingle_match_else.rs", "raw_url": "https://github.com/rust-lang/rust/raw/09fe163c9290b8aa573decb25d5b4b02f33e481e/tests%2Fui%2Fsingle_match_else.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fsingle_match_else.rs?ref=09fe163c9290b8aa573decb25d5b4b02f33e481e", "patch": "@@ -18,4 +18,18 @@ fn unwrap_addr() -> Option<&'static ExprNode> {\n     }\n }\n \n-fn main() {}\n+macro_rules! unwrap_addr {\n+    ($expression:expr) => {\n+        match $expression {\n+            ExprNode::ExprAddrOf => Some(&NODE),\n+            _ => {\n+                let x = 5;\n+                None\n+            },\n+        }\n+    };\n+}\n+\n+fn main() {\n+    unwrap_addr!(ExprNode::Unicorns);\n+}"}]}