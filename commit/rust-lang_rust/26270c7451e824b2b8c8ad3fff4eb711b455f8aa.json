{"sha": "26270c7451e824b2b8c8ad3fff4eb711b455f8aa", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI2MjcwYzc0NTFlODI0YjJiOGM4YWQzZmZmNGViNzExYjQ1NWY4YWE=", "commit": {"author": {"name": "Oliver Schneider", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2017-03-03T13:46:33Z"}, "committer": {"name": "Oliver Schneider", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2017-03-03T13:46:33Z"}, "message": "Fix ice", "tree": {"sha": "0450176f5ae8ab1f7b8d0138cc754a3309b5e566", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0450176f5ae8ab1f7b8d0138cc754a3309b5e566"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/26270c7451e824b2b8c8ad3fff4eb711b455f8aa", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/26270c7451e824b2b8c8ad3fff4eb711b455f8aa", "html_url": "https://github.com/rust-lang/rust/commit/26270c7451e824b2b8c8ad3fff4eb711b455f8aa", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/26270c7451e824b2b8c8ad3fff4eb711b455f8aa/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "268b15f2888cf708b142e70afe1cbcd12cb83f64", "url": "https://api.github.com/repos/rust-lang/rust/commits/268b15f2888cf708b142e70afe1cbcd12cb83f64", "html_url": "https://github.com/rust-lang/rust/commit/268b15f2888cf708b142e70afe1cbcd12cb83f64"}], "stats": {"total": 50, "additions": 19, "deletions": 31}, "files": [{"sha": "3b624ff3d6cde0c2d3c12d5bab5bd2a395a991f9", "filename": "clippy_lints/src/consts.rs", "status": "modified", "additions": 6, "deletions": 31, "changes": 37, "blob_url": "https://github.com/rust-lang/rust/blob/26270c7451e824b2b8c8ad3fff4eb711b455f8aa/clippy_lints%2Fsrc%2Fconsts.rs", "raw_url": "https://github.com/rust-lang/rust/raw/26270c7451e824b2b8c8ad3fff4eb711b455f8aa/clippy_lints%2Fsrc%2Fconsts.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fconsts.rs?ref=26270c7451e824b2b8c8ad3fff4eb711b455f8aa", "patch": "@@ -53,21 +53,6 @@ pub enum Constant {\n     Tuple(Vec<Constant>),\n }\n \n-impl Constant {\n-    /// Convert to `u64` if possible.\n-    ///\n-    /// # panics\n-    ///\n-    /// If the constant could not be converted to `u64` losslessly.\n-    fn as_u64(&self) -> u64 {\n-        if let Constant::Int(val) = *self {\n-            val.to_u64().expect(\"negative constant can't be casted to `u64`\")\n-        } else {\n-            panic!(\"Could not convert a `{:?}` to `u64`\", self);\n-        }\n-    }\n-}\n-\n impl PartialEq for Constant {\n     fn eq(&self, other: &Constant) -> bool {\n         match (self, other) {\n@@ -266,11 +251,12 @@ impl<'c, 'cc> ConstEvalLateContext<'c, 'cc> {\n             ExprLit(ref lit) => Some(lit_to_constant(&lit.node, self.tcx, self.tables.expr_ty(e))),\n             ExprArray(ref vec) => self.multi(vec).map(Constant::Vec),\n             ExprTup(ref tup) => self.multi(tup).map(Constant::Tuple),\n-            ExprRepeat(ref value, number_id) => {\n-                let val = &self.tcx.hir.body(number_id).value;\n-                self.binop_apply(value,\n-                                 val,\n-                                 |v, n| Some(Constant::Repeat(Box::new(v), n.as_u64() as usize)))\n+            ExprRepeat(ref value, _) => {\n+                let n = match self.tables.expr_ty(e).sty {\n+                    ty::TyArray(_, n) => n,\n+                    _ => span_bug!(e.span, \"typeck error\"),\n+                };\n+                self.expr(value).map(|v| Constant::Repeat(Box::new(v), n))\n             },\n             ExprUnary(op, ref operand) => {\n                 self.expr(operand).and_then(|o| match op {\n@@ -375,15 +361,4 @@ impl<'c, 'cc> ConstEvalLateContext<'c, 'cc> {\n             _ => None,\n         }\n     }\n-\n-\n-    fn binop_apply<F>(&mut self, left: &Expr, right: &Expr, op: F) -> Option<Constant>\n-        where F: Fn(Constant, Constant) -> Option<Constant>\n-    {\n-        if let (Some(lc), Some(rc)) = (self.expr(left), self.expr(right)) {\n-            op(lc, rc)\n-        } else {\n-            None\n-        }\n-    }\n }"}, {"sha": "d53d3a1cc758f660260567f9d7b86e4aef8b102c", "filename": "tests/run-pass/ice-1588.rs", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/26270c7451e824b2b8c8ad3fff4eb711b455f8aa/tests%2Frun-pass%2Fice-1588.rs", "raw_url": "https://github.com/rust-lang/rust/raw/26270c7451e824b2b8c8ad3fff4eb711b455f8aa/tests%2Frun-pass%2Fice-1588.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frun-pass%2Fice-1588.rs?ref=26270c7451e824b2b8c8ad3fff4eb711b455f8aa", "patch": "@@ -0,0 +1,13 @@\n+#![feature(plugin)]\n+#![plugin(clippy)]\n+#![allow(clippy)]\n+\n+fn main() {\n+    match 1 {\n+        1 => {}\n+        2 => {\n+            [0; 1];\n+        }\n+        _ => {}\n+    }\n+}"}]}