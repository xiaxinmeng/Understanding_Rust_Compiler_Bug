{"sha": "076ae25714b3e045742b4b3d6ec14ea894fb210d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjA3NmFlMjU3MTRiM2UwNDU3NDJiNGIzZDZlYzE0ZWE4OTRmYjIxMGQ=", "commit": {"author": {"name": "Denis Vasilik", "email": "contact@denisvasilik.com", "date": "2020-08-18T22:10:57Z"}, "committer": {"name": "Denis Vasilik", "email": "contact@denisvasilik.com", "date": "2020-08-18T22:10:57Z"}, "message": "Use intra-doc links for AtomicIsize::*", "tree": {"sha": "d1723fa05dfa9226f86deb7e28a0b5cce36b0496", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d1723fa05dfa9226f86deb7e28a0b5cce36b0496"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/076ae25714b3e045742b4b3d6ec14ea894fb210d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/076ae25714b3e045742b4b3d6ec14ea894fb210d", "html_url": "https://github.com/rust-lang/rust/commit/076ae25714b3e045742b4b3d6ec14ea894fb210d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/076ae25714b3e045742b4b3d6ec14ea894fb210d/comments", "author": {"login": "denisvasilik", "id": 18697981, "node_id": "MDQ6VXNlcjE4Njk3OTgx", "avatar_url": "https://avatars.githubusercontent.com/u/18697981?v=4", "gravatar_id": "", "url": "https://api.github.com/users/denisvasilik", "html_url": "https://github.com/denisvasilik", "followers_url": "https://api.github.com/users/denisvasilik/followers", "following_url": "https://api.github.com/users/denisvasilik/following{/other_user}", "gists_url": "https://api.github.com/users/denisvasilik/gists{/gist_id}", "starred_url": "https://api.github.com/users/denisvasilik/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/denisvasilik/subscriptions", "organizations_url": "https://api.github.com/users/denisvasilik/orgs", "repos_url": "https://api.github.com/users/denisvasilik/repos", "events_url": "https://api.github.com/users/denisvasilik/events{/privacy}", "received_events_url": "https://api.github.com/users/denisvasilik/received_events", "type": "User", "site_admin": false}, "committer": {"login": "denisvasilik", "id": 18697981, "node_id": "MDQ6VXNlcjE4Njk3OTgx", "avatar_url": "https://avatars.githubusercontent.com/u/18697981?v=4", "gravatar_id": "", "url": "https://api.github.com/users/denisvasilik", "html_url": "https://github.com/denisvasilik", "followers_url": "https://api.github.com/users/denisvasilik/followers", "following_url": "https://api.github.com/users/denisvasilik/following{/other_user}", "gists_url": "https://api.github.com/users/denisvasilik/gists{/gist_id}", "starred_url": "https://api.github.com/users/denisvasilik/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/denisvasilik/subscriptions", "organizations_url": "https://api.github.com/users/denisvasilik/orgs", "repos_url": "https://api.github.com/users/denisvasilik/repos", "events_url": "https://api.github.com/users/denisvasilik/events{/privacy}", "received_events_url": "https://api.github.com/users/denisvasilik/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "69e5a4ccaa37b9d4c666133122f5ef4e2d0046e5", "url": "https://api.github.com/repos/rust-lang/rust/commits/69e5a4ccaa37b9d4c666133122f5ef4e2d0046e5", "html_url": "https://github.com/rust-lang/rust/commit/69e5a4ccaa37b9d4c666133122f5ef4e2d0046e5"}], "stats": {"total": 20, "additions": 10, "deletions": 10}, "files": [{"sha": "fe10c1aec0ad9d37db5ca0ce2b8e008f20e1d14e", "filename": "library/core/src/intrinsics.rs", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/076ae25714b3e045742b4b3d6ec14ea894fb210d/library%2Fcore%2Fsrc%2Fintrinsics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/076ae25714b3e045742b4b3d6ec14ea894fb210d/library%2Fcore%2Fsrc%2Fintrinsics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fintrinsics.rs?ref=076ae25714b3e045742b4b3d6ec14ea894fb210d", "patch": "@@ -373,39 +373,39 @@ extern \"rust-intrinsic\" {\n     /// `std::sync::atomic` types via the `fetch_add` method by passing\n     /// [`Ordering::SeqCst`](crate::sync::atomic::Ordering::SeqCst)\n     /// as the `order`. For example,\n-    /// [`AtomicIsize::fetch_add`](../../std/sync/atomic/struct.AtomicIsize.html#method.fetch_add).\n+    /// [`AtomicIsize::fetch_add`](crate::sync::atomic::AtomicIsize::fetch_add).\n     pub fn atomic_xadd<T: Copy>(dst: *mut T, src: T) -> T;\n     /// Adds to the current value, returning the previous value.\n     ///\n     /// The stabilized version of this intrinsic is available on the\n     /// `std::sync::atomic` types via the `fetch_add` method by passing\n     /// [`Ordering::Acquire`](crate::sync::atomic::Ordering::Acquire)\n     /// as the `order`. For example,\n-    /// [`AtomicIsize::fetch_add`](../../std/sync/atomic/struct.AtomicIsize.html#method.fetch_add).\n+    /// [`AtomicIsize::fetch_add`](crate::sync::atomic::AtomicIsize::fetch_add).\n     pub fn atomic_xadd_acq<T: Copy>(dst: *mut T, src: T) -> T;\n     /// Adds to the current value, returning the previous value.\n     ///\n     /// The stabilized version of this intrinsic is available on the\n     /// `std::sync::atomic` types via the `fetch_add` method by passing\n     /// [`Ordering::Release`](crate::sync::atomic::Ordering::Release)\n     /// as the `order`. For example,\n-    /// [`AtomicIsize::fetch_add`](../../std/sync/atomic/struct.AtomicIsize.html#method.fetch_add).\n+    /// [`AtomicIsize::fetch_add`](crate::sync::atomic::AtomicIsize::fetch_add).\n     pub fn atomic_xadd_rel<T: Copy>(dst: *mut T, src: T) -> T;\n     /// Adds to the current value, returning the previous value.\n     ///\n     /// The stabilized version of this intrinsic is available on the\n     /// `std::sync::atomic` types via the `fetch_add` method by passing\n     /// [`Ordering::AcqRel`](crate::sync::atomic::Ordering::AcqRel)\n     /// as the `order`. For example,\n-    /// [`AtomicIsize::fetch_add`](../../std/sync/atomic/struct.AtomicIsize.html#method.fetch_add).\n+    /// [`AtomicIsize::fetch_add`](crate::sync::atomic::AtomicIsize::fetch_add).\n     pub fn atomic_xadd_acqrel<T: Copy>(dst: *mut T, src: T) -> T;\n     /// Adds to the current value, returning the previous value.\n     ///\n     /// The stabilized version of this intrinsic is available on the\n     /// `std::sync::atomic` types via the `fetch_add` method by passing\n     /// [`Ordering::Relaxed`](crate::sync::atomic::Ordering::Relaxed)\n     /// as the `order`. For example,\n-    /// [`AtomicIsize::fetch_add`](../../std/sync/atomic/struct.AtomicIsize.html#method.fetch_add).\n+    /// [`AtomicIsize::fetch_add`](crate::sync::atomic::AtomicIsize::fetch_add).\n     pub fn atomic_xadd_relaxed<T: Copy>(dst: *mut T, src: T) -> T;\n \n     /// Subtract from the current value, returning the previous value.\n@@ -414,39 +414,39 @@ extern \"rust-intrinsic\" {\n     /// `std::sync::atomic` types via the `fetch_sub` method by passing\n     /// [`Ordering::SeqCst`](crate::sync::atomic::Ordering::SeqCst)\n     /// as the `order`. For example,\n-    /// [`AtomicIsize::fetch_sub`](../../std/sync/atomic/struct.AtomicIsize.html#method.fetch_sub).\n+    /// [`AtomicIsize::fetch_sub`](crate::sync::atomic::AtomicIsize::fetch_sub).\n     pub fn atomic_xsub<T: Copy>(dst: *mut T, src: T) -> T;\n     /// Subtract from the current value, returning the previous value.\n     ///\n     /// The stabilized version of this intrinsic is available on the\n     /// `std::sync::atomic` types via the `fetch_sub` method by passing\n     /// [`Ordering::Acquire`](crate::sync::atomic::Ordering::Acquire)\n     /// as the `order`. For example,\n-    /// [`AtomicIsize::fetch_sub`](../../std/sync/atomic/struct.AtomicIsize.html#method.fetch_sub).\n+    /// [`AtomicIsize::fetch_sub`](crate::sync::atomic::AtomicIsize::fetch_sub).\n     pub fn atomic_xsub_acq<T: Copy>(dst: *mut T, src: T) -> T;\n     /// Subtract from the current value, returning the previous value.\n     ///\n     /// The stabilized version of this intrinsic is available on the\n     /// `std::sync::atomic` types via the `fetch_sub` method by passing\n     /// [`Ordering::Release`](crate::sync::atomic::Ordering::Release)\n     /// as the `order`. For example,\n-    /// [`AtomicIsize::fetch_sub`](../../std/sync/atomic/struct.AtomicIsize.html#method.fetch_sub).\n+    /// [`AtomicIsize::fetch_sub`](crate::sync::atomic::AtomicIsize::fetch_sub).\n     pub fn atomic_xsub_rel<T: Copy>(dst: *mut T, src: T) -> T;\n     /// Subtract from the current value, returning the previous value.\n     ///\n     /// The stabilized version of this intrinsic is available on the\n     /// `std::sync::atomic` types via the `fetch_sub` method by passing\n     /// [`Ordering::AcqRel`](crate::sync::atomic::Ordering::AcqRel)\n     /// as the `order`. For example,\n-    /// [`AtomicIsize::fetch_sub`](../../std/sync/atomic/struct.AtomicIsize.html#method.fetch_sub).\n+    /// [`AtomicIsize::fetch_sub`](crate::sync::atomic::AtomicIsize::fetch_sub).\n     pub fn atomic_xsub_acqrel<T: Copy>(dst: *mut T, src: T) -> T;\n     /// Subtract from the current value, returning the previous value.\n     ///\n     /// The stabilized version of this intrinsic is available on the\n     /// `std::sync::atomic` types via the `fetch_sub` method by passing\n     /// [`Ordering::Relaxed`](crate::sync::atomic::Ordering::Relaxed)\n     /// as the `order`. For example,\n-    /// [`AtomicIsize::fetch_sub`](../../std/sync/atomic/struct.AtomicIsize.html#method.fetch_sub).\n+    /// [`AtomicIsize::fetch_sub`](crate::sync::atomic::AtomicIsize::fetch_sub).\n     pub fn atomic_xsub_relaxed<T: Copy>(dst: *mut T, src: T) -> T;\n \n     /// Bitwise and with the current value, returning the previous value."}]}