{"sha": "4d8a7c282935ccb4452e371c1f572e75b7fd180e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjRkOGE3YzI4MjkzNWNjYjQ0NTJlMzcxYzFmNTcyZTc1YjdmZDE4MGU=", "commit": {"author": {"name": "Benjamin Peterson", "email": "benjamin@python.org", "date": "2020-10-21T04:10:47Z"}, "committer": {"name": "Benjamin Peterson", "email": "benjamin@python.org", "date": "2020-12-04T05:37:26Z"}, "message": "Unnest some .chain calls, so it's clearer what's going on.", "tree": {"sha": "37c0855affb6940e4b8349fd2d733ac933aec7d5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/37c0855affb6940e4b8349fd2d733ac933aec7d5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4d8a7c282935ccb4452e371c1f572e75b7fd180e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4d8a7c282935ccb4452e371c1f572e75b7fd180e", "html_url": "https://github.com/rust-lang/rust/commit/4d8a7c282935ccb4452e371c1f572e75b7fd180e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4d8a7c282935ccb4452e371c1f572e75b7fd180e/comments", "author": {"login": "benjaminp", "id": 219470, "node_id": "MDQ6VXNlcjIxOTQ3MA==", "avatar_url": "https://avatars.githubusercontent.com/u/219470?v=4", "gravatar_id": "", "url": "https://api.github.com/users/benjaminp", "html_url": "https://github.com/benjaminp", "followers_url": "https://api.github.com/users/benjaminp/followers", "following_url": "https://api.github.com/users/benjaminp/following{/other_user}", "gists_url": "https://api.github.com/users/benjaminp/gists{/gist_id}", "starred_url": "https://api.github.com/users/benjaminp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/benjaminp/subscriptions", "organizations_url": "https://api.github.com/users/benjaminp/orgs", "repos_url": "https://api.github.com/users/benjaminp/repos", "events_url": "https://api.github.com/users/benjaminp/events{/privacy}", "received_events_url": "https://api.github.com/users/benjaminp/received_events", "type": "User", "site_admin": false}, "committer": {"login": "benjaminp", "id": 219470, "node_id": "MDQ6VXNlcjIxOTQ3MA==", "avatar_url": "https://avatars.githubusercontent.com/u/219470?v=4", "gravatar_id": "", "url": "https://api.github.com/users/benjaminp", "html_url": "https://github.com/benjaminp", "followers_url": "https://api.github.com/users/benjaminp/followers", "following_url": "https://api.github.com/users/benjaminp/following{/other_user}", "gists_url": "https://api.github.com/users/benjaminp/gists{/gist_id}", "starred_url": "https://api.github.com/users/benjaminp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/benjaminp/subscriptions", "organizations_url": "https://api.github.com/users/benjaminp/orgs", "repos_url": "https://api.github.com/users/benjaminp/repos", "events_url": "https://api.github.com/users/benjaminp/events{/privacy}", "received_events_url": "https://api.github.com/users/benjaminp/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cb56b1a7e99735238908206b6a5febf8fd6a29c0", "url": "https://api.github.com/repos/rust-lang/rust/commits/cb56b1a7e99735238908206b6a5febf8fd6a29c0", "html_url": "https://github.com/rust-lang/rust/commit/cb56b1a7e99735238908206b6a5febf8fd6a29c0"}], "stats": {"total": 24, "additions": 10, "deletions": 14}, "files": [{"sha": "497754f20e4c5ce9b896f7f76f20ed76e0de1c07", "filename": "compiler/rustc_typeck/src/bounds.rs", "status": "modified", "additions": 10, "deletions": 14, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/4d8a7c282935ccb4452e371c1f572e75b7fd180e/compiler%2Frustc_typeck%2Fsrc%2Fbounds.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4d8a7c282935ccb4452e371c1f572e75b7fd180e/compiler%2Frustc_typeck%2Fsrc%2Fbounds.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fbounds.rs?ref=4d8a7c282935ccb4452e371c1f572e75b7fd180e", "patch": "@@ -67,22 +67,18 @@ impl<'tcx> Bounds<'tcx> {\n \n         sized_predicate\n             .into_iter()\n+            .chain(self.region_bounds.iter().map(|&(region_bound, span)| {\n+                let outlives = ty::OutlivesPredicate(param_ty, region_bound);\n+                (ty::Binder::bind(outlives).to_predicate(tcx), span)\n+            }))\n+            .chain(self.trait_bounds.iter().map(|&(bound_trait_ref, span, constness)| {\n+                let predicate = bound_trait_ref.with_constness(constness).to_predicate(tcx);\n+                (predicate, span)\n+            }))\n             .chain(\n-                self.region_bounds\n+                self.projection_bounds\n                     .iter()\n-                    .map(|&(region_bound, span)| {\n-                        let outlives = ty::OutlivesPredicate(param_ty, region_bound);\n-                        (ty::Binder::bind(outlives).to_predicate(tcx), span)\n-                    })\n-                    .chain(self.trait_bounds.iter().map(|&(bound_trait_ref, span, constness)| {\n-                        let predicate = bound_trait_ref.with_constness(constness).to_predicate(tcx);\n-                        (predicate, span)\n-                    }))\n-                    .chain(\n-                        self.projection_bounds\n-                            .iter()\n-                            .map(|&(projection, span)| (projection.to_predicate(tcx), span)),\n-                    ),\n+                    .map(|&(projection, span)| (projection.to_predicate(tcx), span)),\n             )\n             .collect()\n     }"}]}