{"sha": "02c0501a6185da2d3bfce2be1b2bc02abbd36bb9", "node_id": "MDY6Q29tbWl0NzI0NzEyOjAyYzA1MDFhNjE4NWRhMmQzYmZjZTJiZTFiMmJjMDJhYmJkMzZiYjk=", "commit": {"author": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2011-06-16T18:13:23Z"}, "committer": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2011-06-16T18:16:03Z"}, "message": "rt: memory_region::free(NULL) shouldn't touch the live allocation count", "tree": {"sha": "4bafae64ff506da9048e51535382ccd042d601a5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4bafae64ff506da9048e51535382ccd042d601a5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/02c0501a6185da2d3bfce2be1b2bc02abbd36bb9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/02c0501a6185da2d3bfce2be1b2bc02abbd36bb9", "html_url": "https://github.com/rust-lang/rust/commit/02c0501a6185da2d3bfce2be1b2bc02abbd36bb9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/02c0501a6185da2d3bfce2be1b2bc02abbd36bb9/comments", "author": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4673eb6839852b3902dc6855cce48d195c3b4092", "url": "https://api.github.com/repos/rust-lang/rust/commits/4673eb6839852b3902dc6855cce48d195c3b4092", "html_url": "https://github.com/rust-lang/rust/commit/4673eb6839852b3902dc6855cce48d195c3b4092"}], "stats": {"total": 1, "additions": 1, "deletions": 0}, "files": [{"sha": "6c50bf42d8c8ec4d21fcbf133745d661921adc9f", "filename": "src/rt/memory_region.cpp", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/02c0501a6185da2d3bfce2be1b2bc02abbd36bb9/src%2Frt%2Fmemory_region.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/02c0501a6185da2d3bfce2be1b2bc02abbd36bb9/src%2Frt%2Fmemory_region.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Fmemory_region.cpp?ref=02c0501a6185da2d3bfce2be1b2bc02abbd36bb9", "patch": "@@ -21,6 +21,7 @@ memory_region::memory_region(memory_region *parent) :\n \n void memory_region::free(void *mem) {\n     // printf(\"free: ptr 0x%\" PRIxPTR\"\\n\", (uintptr_t) mem);\n+    if (!mem) { return; }\n     if (_synchronized) { _lock.lock(); }\n #ifdef TRACK_ALLOCATIONS\n     if (_allocation_list.replace(mem, NULL) == false) {"}]}