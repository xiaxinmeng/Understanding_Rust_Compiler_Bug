{"sha": "ba74c6cfdc2cb4e0e3374fee3af54e8b1f3564ac", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJhNzRjNmNmZGMyY2I0ZTBlMzM3NGZlZTNhZjU0ZThiMWYzNTY0YWM=", "commit": {"author": {"name": "Rafael \u00c1vila de Esp\u00edndola", "email": "respindola@mozilla.com", "date": "2011-06-03T19:02:58Z"}, "committer": {"name": "Rafael \u00c1vila de Esp\u00edndola", "email": "respindola@mozilla.com", "date": "2011-06-03T19:02:58Z"}, "message": "Boilerplate for pointers. Sorry for missing this on the first patch.", "tree": {"sha": "ad4f05813b62415474c5ab696932c81ef7b703a8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ad4f05813b62415474c5ab696932c81ef7b703a8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ba74c6cfdc2cb4e0e3374fee3af54e8b1f3564ac", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ba74c6cfdc2cb4e0e3374fee3af54e8b1f3564ac", "html_url": "https://github.com/rust-lang/rust/commit/ba74c6cfdc2cb4e0e3374fee3af54e8b1f3564ac", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ba74c6cfdc2cb4e0e3374fee3af54e8b1f3564ac/comments", "author": null, "committer": null, "parents": [{"sha": "18b63865ce35901d9beaf7ea94f4b1408defd7ad", "url": "https://api.github.com/repos/rust-lang/rust/commits/18b63865ce35901d9beaf7ea94f4b1408defd7ad", "html_url": "https://github.com/rust-lang/rust/commit/18b63865ce35901d9beaf7ea94f4b1408defd7ad"}], "stats": {"total": 20, "additions": 20, "deletions": 0}, "files": [{"sha": "e2e60b80075288e7b523c7369900936e45e36154", "filename": "src/comp/middle/metadata.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/ba74c6cfdc2cb4e0e3374fee3af54e8b1f3564ac/src%2Fcomp%2Fmiddle%2Fmetadata.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ba74c6cfdc2cb4e0e3374fee3af54e8b1f3564ac/src%2Fcomp%2Fmiddle%2Fmetadata.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Fmetadata.rs?ref=ba74c6cfdc2cb4e0e3374fee3af54e8b1f3564ac", "patch": "@@ -174,6 +174,7 @@ mod Encode {\n                 w.write_char(']');\n             }\n             case (ty::ty_box(?mt)) {w.write_char('@'); enc_mt(w, cx, mt); }\n+            case (ty::ty_ptr(?mt)) {w.write_char('*'); enc_mt(w, cx, mt); }\n             case (ty::ty_vec(?mt)) {w.write_char('V'); enc_mt(w, cx, mt); }\n             case (ty::ty_port(?t)) {w.write_char('P'); enc_ty(w, cx, t); }\n             case (ty::ty_chan(?t)) {w.write_char('C'); enc_ty(w, cx, t); }"}, {"sha": "3712ed7475d6a32904db6f226c3b0d6d72aa30f3", "filename": "src/comp/middle/trans.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/ba74c6cfdc2cb4e0e3374fee3af54e8b1f3564ac/src%2Fcomp%2Fmiddle%2Ftrans.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ba74c6cfdc2cb4e0e3374fee3af54e8b1f3564ac/src%2Fcomp%2Fmiddle%2Ftrans.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Ftrans.rs?ref=ba74c6cfdc2cb4e0e3374fee3af54e8b1f3564ac", "patch": "@@ -882,6 +882,9 @@ fn type_of_inner(&@crate_ctxt cx, &span sp, &ty::t t) -> TypeRef {\n         case (ty::ty_vec(?mt)) {\n             llty = T_ptr(T_vec(type_of_inner(cx, sp, mt.ty)));\n         }\n+        case (ty::ty_ptr(?mt)) {\n+            llty = T_ptr(type_of_inner(cx, sp, mt.ty));\n+        }\n         case (ty::ty_port(?t)) {\n             llty = T_ptr(T_port(type_of_inner(cx, sp, t)));\n         }"}, {"sha": "d10cbd338ade5cbfb10fa0bb60dab763de1ed523", "filename": "src/comp/middle/ty.rs", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/ba74c6cfdc2cb4e0e3374fee3af54e8b1f3564ac/src%2Fcomp%2Fmiddle%2Fty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ba74c6cfdc2cb4e0e3374fee3af54e8b1f3564ac/src%2Fcomp%2Fmiddle%2Fty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Fty.rs?ref=ba74c6cfdc2cb4e0e3374fee3af54e8b1f3564ac", "patch": "@@ -109,6 +109,7 @@ tag sty {\n     ty_tag(ast::def_id, vec[t]);\n     ty_box(mt);\n     ty_vec(mt);\n+    ty_ptr(mt);\n     ty_port(t);\n     ty_chan(t);\n     ty_task;\n@@ -436,6 +437,10 @@ fn mk_box(&ctxt cx, &mt tm) -> t {\n     ret gen_ty(cx, ty_box(tm));\n }\n \n+fn mk_ptr(&ctxt cx, &mt tm) -> t {\n+    ret gen_ty(cx, ty_ptr(tm));\n+}\n+\n fn mk_imm_box(&ctxt cx, &t ty) -> t {\n     ret mk_box(cx, rec(ty=ty, mut=ast::imm));\n }\n@@ -1225,6 +1230,7 @@ fn hash_type_structure(&sty st) -> uint {\n         case (ty_type) { ret 32u; }\n         case (ty_native) { ret 33u; }\n         case (ty_bot) { ret 34u; }\n+        case (ty_ptr(?mt)) { ret hash_subty(35u, mt.ty); }\n     }\n }\n \n@@ -1356,6 +1362,12 @@ fn equal_type_structures(&sty a, &sty b) -> bool {\n                 case (_) { ret false; }\n             }\n         }\n+        case (ty_ptr(?mt_a)) {\n+            alt (b) {\n+                case (ty_ptr(?mt_b)) { ret equal_mt(mt_a, mt_b); }\n+                case (_) { ret false; }\n+            }\n+        }\n         case (ty_port(?t_a)) {\n             alt (b) {\n                 case (ty_port(?t_b)) { ret eq_ty(t_a, t_b); }"}, {"sha": "e952908a6ba613ff3a3303a45faa1f74c8f5e296", "filename": "src/comp/middle/typeck.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/ba74c6cfdc2cb4e0e3374fee3af54e8b1f3564ac/src%2Fcomp%2Fmiddle%2Ftypeck.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ba74c6cfdc2cb4e0e3374fee3af54e8b1f3564ac/src%2Fcomp%2Fmiddle%2Ftypeck.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Ftypeck.rs?ref=ba74c6cfdc2cb4e0e3374fee3af54e8b1f3564ac", "patch": "@@ -284,6 +284,9 @@ fn ast_ty_to_ty(&ty::ctxt tcx, &ty_getter getter, &@ast::ty ast_ty) -> ty::t {\n         case (ast::ty_vec(?mt)) {\n             typ = ty::mk_vec(tcx, ast_mt_to_mt(tcx, getter, mt));\n         }\n+        case (ast::ty_ptr(?mt)) {\n+            typ = ty::mk_ptr(tcx, ast_mt_to_mt(tcx, getter, mt));\n+        }\n         case (ast::ty_task) { typ = ty::mk_task(tcx); }\n         case (ast::ty_port(?t)) {\n             typ = ty::mk_port(tcx, ast_ty_to_ty(tcx, getter, t));"}, {"sha": "76b027fd8f9be1523c19db3323bdd35443e76aa0", "filename": "src/comp/middle/walk.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/ba74c6cfdc2cb4e0e3374fee3af54e8b1f3564ac/src%2Fcomp%2Fmiddle%2Fwalk.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ba74c6cfdc2cb4e0e3374fee3af54e8b1f3564ac/src%2Fcomp%2Fmiddle%2Fwalk.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Fwalk.rs?ref=ba74c6cfdc2cb4e0e3374fee3af54e8b1f3564ac", "patch": "@@ -156,6 +156,7 @@ fn walk_ty(&ast_visitor v, @ast::ty t) {\n         case (ast::ty_str) {}\n         case (ast::ty_box(?mt)) { walk_ty(v, mt.ty); }\n         case (ast::ty_vec(?mt)) { walk_ty(v, mt.ty); }\n+        case (ast::ty_ptr(?mt)) { walk_ty(v, mt.ty); }\n         case (ast::ty_task) {}\n         case (ast::ty_port(?t)) { walk_ty(v, t); }\n         case (ast::ty_chan(?t)) { walk_ty(v, t); }"}]}