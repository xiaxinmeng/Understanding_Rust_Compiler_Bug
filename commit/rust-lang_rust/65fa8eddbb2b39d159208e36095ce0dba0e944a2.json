{"sha": "65fa8eddbb2b39d159208e36095ce0dba0e944a2", "node_id": "MDY6Q29tbWl0NzI0NzEyOjY1ZmE4ZWRkYmIyYjM5ZDE1OTIwOGUzNjA5NWNlMGRiYTBlOTQ0YTI=", "commit": {"author": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2018-08-15T14:33:19Z"}, "committer": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2018-08-15T14:33:19Z"}, "message": "Fix trait method calls", "tree": {"sha": "ef51f927809dda0561509a0056e2acb112621950", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ef51f927809dda0561509a0056e2acb112621950"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/65fa8eddbb2b39d159208e36095ce0dba0e944a2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/65fa8eddbb2b39d159208e36095ce0dba0e944a2", "html_url": "https://github.com/rust-lang/rust/commit/65fa8eddbb2b39d159208e36095ce0dba0e944a2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/65fa8eddbb2b39d159208e36095ce0dba0e944a2/comments", "author": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ca59e4405e81b2ce7ba6667117241496c2c4be9a", "url": "https://api.github.com/repos/rust-lang/rust/commits/ca59e4405e81b2ce7ba6667117241496c2c4be9a", "html_url": "https://github.com/rust-lang/rust/commit/ca59e4405e81b2ce7ba6667117241496c2c4be9a"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "cfb6c3e336fb25c234842828d91324f5f12c7cbb", "filename": "src/constant.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/65fa8eddbb2b39d159208e36095ce0dba0e944a2/src%2Fconstant.rs", "raw_url": "https://github.com/rust-lang/rust/raw/65fa8eddbb2b39d159208e36095ce0dba0e944a2/src%2Fconstant.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fconstant.rs?ref=65fa8eddbb2b39d159208e36095ce0dba0e944a2", "patch": "@@ -106,7 +106,7 @@ fn trans_const_value<'a, 'tcx: 'a>(\n             CValue::const_val(fx, ty, bits as i128 as i64)\n         }\n         TypeVariants::TyFnDef(def_id, substs) => {\n-            let func_ref = fx.get_function_ref(Instance::new(def_id, substs));\n+            let func_ref = fx.get_function_ref(Instance::resolve(fx.tcx, ParamEnv::reveal_all(), def_id, substs).unwrap());\n             CValue::Func(func_ref, layout)\n         }\n         _ => trans_const_place(fx, const_).to_cvalue(fx),"}]}