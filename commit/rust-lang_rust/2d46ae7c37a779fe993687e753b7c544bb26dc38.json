{"sha": "2d46ae7c37a779fe993687e753b7c544bb26dc38", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJkNDZhZTdjMzdhNzc5ZmU5OTM2ODdlNzUzYjdjNTQ0YmIyNmRjMzg=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2018-11-22T09:54:04Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2018-11-22T09:54:04Z"}, "message": "expand thread::park explanation", "tree": {"sha": "05f9b58b90c74d78c791cb19e19bdff58b2e27b3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/05f9b58b90c74d78c791cb19e19bdff58b2e27b3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2d46ae7c37a779fe993687e753b7c544bb26dc38", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2d46ae7c37a779fe993687e753b7c544bb26dc38", "html_url": "https://github.com/rust-lang/rust/commit/2d46ae7c37a779fe993687e753b7c544bb26dc38", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2d46ae7c37a779fe993687e753b7c544bb26dc38/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4bec59c93baa71d599a616fda9f1180febb08386", "url": "https://api.github.com/repos/rust-lang/rust/commits/4bec59c93baa71d599a616fda9f1180febb08386", "html_url": "https://github.com/rust-lang/rust/commit/4bec59c93baa71d599a616fda9f1180febb08386"}], "stats": {"total": 7, "additions": 6, "deletions": 1}, "files": [{"sha": "99f8fa390d227eb4c8dba5ffd4b8292fc7897731", "filename": "src/libstd/thread/mod.rs", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/2d46ae7c37a779fe993687e753b7c544bb26dc38/src%2Flibstd%2Fthread%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2d46ae7c37a779fe993687e753b7c544bb26dc38/src%2Flibstd%2Fthread%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fthread%2Fmod.rs?ref=2d46ae7c37a779fe993687e753b7c544bb26dc38", "patch": "@@ -806,9 +806,13 @@ const NOTIFIED: usize = 2;\n /// In other words, each [`Thread`] acts a bit like a spinlock that can be\n /// locked and unlocked using `park` and `unpark`.\n ///\n+/// Notice that it would be a valid (but inefficient) implementation to make both [`park`] and\n+/// [`unpark`] NOPs that return immediately.  Being unblocked does not imply\n+/// any synchronization with someone that unparked this thread, it could also be spurious.\n+///\n /// The API is typically used by acquiring a handle to the current thread,\n /// placing that handle in a shared data structure so that other threads can\n-/// find it, and then `park`ing. When some desired condition is met, another\n+/// find it, and then `park`ing in a loop. When some desired condition is met, another\n /// thread calls [`unpark`] on the handle.\n ///\n /// The motivation for this design is twofold:\n@@ -829,6 +833,7 @@ const NOTIFIED: usize = 2;\n ///     .spawn(|| {\n ///         println!(\"Parking thread\");\n ///         thread::park();\n+///         // We *could* get here spuriously, i.e., way before the 10ms below are over!\n ///         println!(\"Thread unparked\");\n ///     })\n ///     .unwrap();"}]}