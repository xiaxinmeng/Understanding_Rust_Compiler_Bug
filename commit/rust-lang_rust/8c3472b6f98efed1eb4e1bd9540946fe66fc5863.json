{"sha": "8c3472b6f98efed1eb4e1bd9540946fe66fc5863", "node_id": "MDY6Q29tbWl0NzI0NzEyOjhjMzQ3MmI2Zjk4ZWZlZDFlYjRlMWJkOTU0MDk0NmZlNjZmYzU4NjM=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-11-30T10:45:32Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-11-30T10:47:38Z"}, "message": "Minor cleanup", "tree": {"sha": "8730283a64ba7af48fe0eb6cb59f3f5df27e19ae", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8730283a64ba7af48fe0eb6cb59f3f5df27e19ae"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8c3472b6f98efed1eb4e1bd9540946fe66fc5863", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8c3472b6f98efed1eb4e1bd9540946fe66fc5863", "html_url": "https://github.com/rust-lang/rust/commit/8c3472b6f98efed1eb4e1bd9540946fe66fc5863", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8c3472b6f98efed1eb4e1bd9540946fe66fc5863/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ac30710ada112984c9cf79c4af39ad666d000171", "url": "https://api.github.com/repos/rust-lang/rust/commits/ac30710ada112984c9cf79c4af39ad666d000171", "html_url": "https://github.com/rust-lang/rust/commit/ac30710ada112984c9cf79c4af39ad666d000171"}], "stats": {"total": 67, "additions": 31, "deletions": 36}, "files": [{"sha": "14b420421e7eff8930091331ede893c0b46948fd", "filename": "crates/assists/src/handlers/toggle_ignore.rs", "status": "renamed", "additions": 9, "deletions": 14, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/8c3472b6f98efed1eb4e1bd9540946fe66fc5863/crates%2Fassists%2Fsrc%2Fhandlers%2Ftoggle_ignore.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8c3472b6f98efed1eb4e1bd9540946fe66fc5863/crates%2Fassists%2Fsrc%2Fhandlers%2Ftoggle_ignore.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fassists%2Fsrc%2Fhandlers%2Ftoggle_ignore.rs?ref=8c3472b6f98efed1eb4e1bd9540946fe66fc5863", "patch": "@@ -5,7 +5,7 @@ use syntax::{\n \n use crate::{utils::test_related_attribute, AssistContext, AssistId, AssistKind, Assists};\n \n-// Assist: ignore_test\n+// Assist: toggle_ignore\n //\n // Adds `#[ignore]` attribute to the test.\n //\n@@ -23,20 +23,20 @@ use crate::{utils::test_related_attribute, AssistContext, AssistId, AssistKind,\n //     assert_eq!(2 + 2, 5);\n // }\n // ```\n-pub(crate) fn ignore_test(acc: &mut Assists, ctx: &AssistContext) -> Option<()> {\n+pub(crate) fn toggle_ignore(acc: &mut Assists, ctx: &AssistContext) -> Option<()> {\n     let attr: ast::Attr = ctx.find_node_at_offset()?;\n     let func = attr.syntax().parent().and_then(ast::Fn::cast)?;\n     let attr = test_related_attribute(&func)?;\n \n     match has_ignore_attribute(&func) {\n         None => acc.add(\n-            AssistId(\"ignore_test\", AssistKind::None),\n+            AssistId(\"toggle_ignore\", AssistKind::None),\n             \"Ignore this test\",\n             attr.syntax().text_range(),\n             |builder| builder.insert(attr.syntax().text_range().end(), &format!(\"\\n#[ignore]\")),\n         ),\n         Some(ignore_attr) => acc.add(\n-            AssistId(\"unignore_test\", AssistKind::None),\n+            AssistId(\"toggle_ignore\", AssistKind::None),\n             \"Re-enable this test\",\n             ignore_attr.syntax().text_range(),\n             |builder| {\n@@ -55,24 +55,19 @@ pub(crate) fn ignore_test(acc: &mut Assists, ctx: &AssistContext) -> Option<()>\n }\n \n fn has_ignore_attribute(fn_def: &ast::Fn) -> Option<ast::Attr> {\n-    fn_def.attrs().find_map(|attr| {\n-        if attr.path()?.syntax().text() == \"ignore\" {\n-            Some(attr)\n-        } else {\n-            None\n-        }\n-    })\n+    fn_def.attrs().find(|attr| attr.path().map(|it| it.syntax().text() == \"ignore\") == Some(true))\n }\n \n #[cfg(test)]\n mod tests {\n-    use super::ignore_test;\n     use crate::tests::check_assist;\n \n+    use super::*;\n+\n     #[test]\n     fn test_base_case() {\n         check_assist(\n-            ignore_test,\n+            toggle_ignore,\n             r#\"\n             #[test<|>]\n             fn test() {}\n@@ -88,7 +83,7 @@ mod tests {\n     #[test]\n     fn test_unignore() {\n         check_assist(\n-            ignore_test,\n+            toggle_ignore,\n             r#\"\n             #[test<|>]\n             #[ignore]", "previous_filename": "crates/assists/src/handlers/ignore_test.rs"}, {"sha": "dfe6c27295be181b1876661a91d6b5e02b09a5c5", "filename": "crates/assists/src/lib.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/8c3472b6f98efed1eb4e1bd9540946fe66fc5863/crates%2Fassists%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8c3472b6f98efed1eb4e1bd9540946fe66fc5863/crates%2Fassists%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fassists%2Fsrc%2Flib.rs?ref=8c3472b6f98efed1eb4e1bd9540946fe66fc5863", "patch": "@@ -141,7 +141,6 @@ mod handlers {\n     mod generate_function;\n     mod generate_impl;\n     mod generate_new;\n-    mod ignore_test;\n     mod infer_function_return_type;\n     mod inline_local_variable;\n     mod introduce_named_lifetime;\n@@ -164,6 +163,7 @@ mod handlers {\n     mod replace_string_with_char;\n     mod replace_unwrap_with_match;\n     mod split_import;\n+    mod toggle_ignore;\n     mod unwrap_block;\n     mod wrap_return_type_in_result;\n \n@@ -190,7 +190,6 @@ mod handlers {\n             generate_function::generate_function,\n             generate_impl::generate_impl,\n             generate_new::generate_new,\n-            ignore_test::ignore_test,\n             infer_function_return_type::infer_function_return_type,\n             inline_local_variable::inline_local_variable,\n             introduce_named_lifetime::introduce_named_lifetime,\n@@ -215,6 +214,7 @@ mod handlers {\n             replace_qualified_name_with_use::replace_qualified_name_with_use,\n             replace_unwrap_with_match::replace_unwrap_with_match,\n             split_import::split_import,\n+            toggle_ignore::toggle_ignore,\n             unwrap_block::unwrap_block,\n             wrap_return_type_in_result::wrap_return_type_in_result,\n             // These are manually sorted for better priorities"}, {"sha": "8d50c8791a8d860ebb31a4c53731164a1d95330d", "filename": "crates/assists/src/tests/generated.rs", "status": "modified", "additions": 20, "deletions": 20, "changes": 40, "blob_url": "https://github.com/rust-lang/rust/blob/8c3472b6f98efed1eb4e1bd9540946fe66fc5863/crates%2Fassists%2Fsrc%2Ftests%2Fgenerated.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8c3472b6f98efed1eb4e1bd9540946fe66fc5863/crates%2Fassists%2Fsrc%2Ftests%2Fgenerated.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fassists%2Fsrc%2Ftests%2Fgenerated.rs?ref=8c3472b6f98efed1eb4e1bd9540946fe66fc5863", "patch": "@@ -473,26 +473,6 @@ impl<T: Clone> Ctx<T> {\n     )\n }\n \n-#[test]\n-fn doctest_ignore_test() {\n-    check_doc_test(\n-        \"ignore_test\",\n-        r#####\"\n-<|>#[test]\n-fn arithmetics {\n-    assert_eq!(2 + 2, 5);\n-}\n-\"#####,\n-        r#####\"\n-#[test]\n-#[ignore]\n-fn arithmetics {\n-    assert_eq!(2 + 2, 5);\n-}\n-\"#####,\n-    )\n-}\n-\n #[test]\n fn doctest_infer_function_return_type() {\n     check_doc_test(\n@@ -978,6 +958,26 @@ use std::{collections::HashMap};\n     )\n }\n \n+#[test]\n+fn doctest_toggle_ignore() {\n+    check_doc_test(\n+        \"toggle_ignore\",\n+        r#####\"\n+<|>#[test]\n+fn arithmetics {\n+    assert_eq!(2 + 2, 5);\n+}\n+\"#####,\n+        r#####\"\n+#[test]\n+#[ignore]\n+fn arithmetics {\n+    assert_eq!(2 + 2, 5);\n+}\n+\"#####,\n+    )\n+}\n+\n #[test]\n fn doctest_unwrap_block() {\n     check_doc_test("}]}