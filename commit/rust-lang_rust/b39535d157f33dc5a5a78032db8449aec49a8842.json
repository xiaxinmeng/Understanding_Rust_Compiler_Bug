{"sha": "b39535d157f33dc5a5a78032db8449aec49a8842", "node_id": "MDY6Q29tbWl0NzI0NzEyOmIzOTUzNWQxNTdmMzNkYzVhNWE3ODAzMmRiODQ0OWFlYzQ5YTg4NDI=", "commit": {"author": {"name": "kennytm", "email": "kennytm@gmail.com", "date": "2018-10-12T14:04:09Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2018-10-12T14:04:09Z"}, "message": "Rollup merge of #54920 - varkor:must_use-unit, r=estebank\n\nFix handling of #[must_use] on unit and uninhabited types\n\nFixes https://github.com/rust-lang/rust/issues/54828.", "tree": {"sha": "3c003af2c8cf2ebe431566083ee95cb3c60ca13b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3c003af2c8cf2ebe431566083ee95cb3c60ca13b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b39535d157f33dc5a5a78032db8449aec49a8842", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJbwKnZCRBK7hj4Ov3rIwAAdHIIAFDVcq0VPXL4btQDdbe+KtTv\nUL1naHHHb0qzhzCM88q2qyLMc+nVcf1kD8ekfVsJnSjBai3Synya+LNu88sXIvWj\nyDB5zjfvZoBCfat5YEKfrqxo4hRZssN6gw7qqWHFsFHlldPXe186wD/GjwXT5G5W\nMFDcYZMVOdNbPpA7cixtr0wF/HTlO3PZa6mCctNuUhH2i/LmLUIDQX/Z90AoLxY7\n3tIgATcSgtguNQBjdtCV9sWfAq1FwJq+3uCUPrnIvCrB4VzfLvAk/MldK8CuaNMD\nZU+6CjJViLyiLazWk1F2sgpJ7mWFsKzeKlV0po05R1mXvTmiHQnJLqe2A50RMDs=\n=0ygC\n-----END PGP SIGNATURE-----\n", "payload": "tree 3c003af2c8cf2ebe431566083ee95cb3c60ca13b\nparent 80ee322a20ac6e8e3546ea26e3211cb77a462f80\nparent be8896109af7b939b5c01c4ad1c470904d06f494\nauthor kennytm <kennytm@gmail.com> 1539353049 +0800\ncommitter GitHub <noreply@github.com> 1539353049 +0800\n\nRollup merge of #54920 - varkor:must_use-unit, r=estebank\n\nFix handling of #[must_use] on unit and uninhabited types\n\nFixes https://github.com/rust-lang/rust/issues/54828.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b39535d157f33dc5a5a78032db8449aec49a8842", "html_url": "https://github.com/rust-lang/rust/commit/b39535d157f33dc5a5a78032db8449aec49a8842", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b39535d157f33dc5a5a78032db8449aec49a8842/comments", "author": {"login": "kennytm", "id": 103023, "node_id": "MDQ6VXNlcjEwMzAyMw==", "avatar_url": "https://avatars.githubusercontent.com/u/103023?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kennytm", "html_url": "https://github.com/kennytm", "followers_url": "https://api.github.com/users/kennytm/followers", "following_url": "https://api.github.com/users/kennytm/following{/other_user}", "gists_url": "https://api.github.com/users/kennytm/gists{/gist_id}", "starred_url": "https://api.github.com/users/kennytm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kennytm/subscriptions", "organizations_url": "https://api.github.com/users/kennytm/orgs", "repos_url": "https://api.github.com/users/kennytm/repos", "events_url": "https://api.github.com/users/kennytm/events{/privacy}", "received_events_url": "https://api.github.com/users/kennytm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "80ee322a20ac6e8e3546ea26e3211cb77a462f80", "url": "https://api.github.com/repos/rust-lang/rust/commits/80ee322a20ac6e8e3546ea26e3211cb77a462f80", "html_url": "https://github.com/rust-lang/rust/commit/80ee322a20ac6e8e3546ea26e3211cb77a462f80"}, {"sha": "be8896109af7b939b5c01c4ad1c470904d06f494", "url": "https://api.github.com/repos/rust-lang/rust/commits/be8896109af7b939b5c01c4ad1c470904d06f494", "html_url": "https://github.com/rust-lang/rust/commit/be8896109af7b939b5c01c4ad1c470904d06f494"}], "stats": {"total": 60, "additions": 52, "deletions": 8}, "files": [{"sha": "ec3c310c63c4f80c42ec88d65cfed1f1efcd2137", "filename": "src/librustc_lint/unused.rs", "status": "modified", "additions": 15, "deletions": 8, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/b39535d157f33dc5a5a78032db8449aec49a8842/src%2Flibrustc_lint%2Funused.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b39535d157f33dc5a5a78032db8449aec49a8842/src%2Flibrustc_lint%2Funused.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_lint%2Funused.rs?ref=b39535d157f33dc5a5a78032db8449aec49a8842", "patch": "@@ -59,15 +59,17 @@ impl<'a, 'tcx> LateLintPass<'a, 'tcx> for UnusedResults {\n         }\n \n         let t = cx.tables.expr_ty(&expr);\n-        let ty_warned = match t.sty {\n-            ty::Tuple(ref tys) if tys.is_empty() => return,\n-            ty::Never => return,\n+        // FIXME(varkor): replace with `t.is_unit() || t.conservative_is_uninhabited()`.\n+        let type_permits_no_use = match t.sty {\n+            ty::Tuple(ref tys) if tys.is_empty() => true,\n+            ty::Never => true,\n             ty::Adt(def, _) => {\n                 if def.variants.is_empty() {\n-                    return;\n+                    true\n+                } else {\n+                    check_must_use(cx, def.did, s.span, \"\")\n                 }\n-                check_must_use(cx, def.did, s.span, \"\")\n-            },\n+            }\n             _ => false,\n         };\n \n@@ -95,7 +97,12 @@ impl<'a, 'tcx> LateLintPass<'a, 'tcx> for UnusedResults {\n         if let Some(def) = maybe_def {\n             let def_id = def.def_id();\n             fn_warned = check_must_use(cx, def_id, s.span, \"return value of \");\n+        } else if type_permits_no_use {\n+            // We don't warn about unused unit or uninhabited types.\n+            // (See https://github.com/rust-lang/rust/issues/43806 for details.)\n+            return;\n         }\n+\n         let must_use_op = match expr.node {\n             // Hardcoding operators here seemed more expedient than the\n             // refactoring that would be needed to look up the `#[must_use]`\n@@ -139,7 +146,7 @@ impl<'a, 'tcx> LateLintPass<'a, 'tcx> for UnusedResults {\n             op_warned = true;\n         }\n \n-        if !(ty_warned || fn_warned || op_warned) {\n+        if !(type_permits_no_use || fn_warned || op_warned) {\n             cx.span_lint(UNUSED_RESULTS, s.span, \"unused result\");\n         }\n \n@@ -233,7 +240,7 @@ impl<'a, 'tcx> LateLintPass<'a, 'tcx> for UnusedAttributes {\n                 .find(|&&(builtin, ty, _)| name == builtin && ty == AttributeType::CrateLevel)\n                 .is_some();\n \n-            // Has a plugin registered this attribute as one which must be used at\n+            // Has a plugin registered this attribute as one that must be used at\n             // the crate level?\n             let plugin_crate = plugin_attributes.iter()\n                 .find(|&&(ref x, t)| name == &**x && AttributeType::CrateLevel == t)"}, {"sha": "92568252164f683d0b7e57ee78c564143553dffd", "filename": "src/test/ui/lint/must_use-unit.rs", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/b39535d157f33dc5a5a78032db8449aec49a8842/src%2Ftest%2Fui%2Flint%2Fmust_use-unit.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b39535d157f33dc5a5a78032db8449aec49a8842/src%2Ftest%2Fui%2Flint%2Fmust_use-unit.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Fmust_use-unit.rs?ref=b39535d157f33dc5a5a78032db8449aec49a8842", "patch": "@@ -0,0 +1,17 @@\n+#![feature(never_type)]\n+\n+#![deny(unused_must_use)]\n+\n+#[must_use]\n+fn foo() {}\n+\n+#[must_use]\n+fn bar() -> ! {\n+    unimplemented!()\n+}\n+\n+fn main() {\n+    foo(); //~ unused return value of `foo`\n+\n+    bar(); //~ unused return value of `bar`\n+}"}, {"sha": "0a956f74611b53839bf9b052eeecca967ae33696", "filename": "src/test/ui/lint/must_use-unit.stderr", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/b39535d157f33dc5a5a78032db8449aec49a8842/src%2Ftest%2Fui%2Flint%2Fmust_use-unit.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b39535d157f33dc5a5a78032db8449aec49a8842/src%2Ftest%2Fui%2Flint%2Fmust_use-unit.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Fmust_use-unit.stderr?ref=b39535d157f33dc5a5a78032db8449aec49a8842", "patch": "@@ -0,0 +1,20 @@\n+error: unused return value of `foo` which must be used\n+  --> $DIR/must_use-unit.rs:14:5\n+   |\n+LL |     foo(); //~ unused return value of `foo`\n+   |     ^^^^^^\n+   |\n+note: lint level defined here\n+  --> $DIR/must_use-unit.rs:3:9\n+   |\n+LL | #![deny(unused_must_use)]\n+   |         ^^^^^^^^^^^^^^^\n+\n+error: unused return value of `bar` which must be used\n+  --> $DIR/must_use-unit.rs:16:5\n+   |\n+LL |     bar(); //~ unused return value of `bar`\n+   |     ^^^^^^\n+\n+error: aborting due to 2 previous errors\n+"}]}