{"sha": "7e0a42b4927a213b8e6ceeec6d842eb0faaf0d26", "node_id": "C_kwDOAAsO6NoAKDdlMGE0MmI0OTI3YTIxM2I4ZTZjZWVlYzZkODQyZWIwZmFhZjBkMjY", "commit": {"author": {"name": "antoyo", "email": "antoyo@users.noreply.github.com", "date": "2022-05-28T13:24:50Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-05-28T13:24:50Z"}, "message": "Merge pull request #165 from yvt/fix-const-memattr\n\nDefine immutable statics with const qualified types", "tree": {"sha": "ac5584a1873221aa7f1a46bf6c9bb855dfb256fa", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ac5584a1873221aa7f1a46bf6c9bb855dfb256fa"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7e0a42b4927a213b8e6ceeec6d842eb0faaf0d26", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJikiKiCRBK7hj4Ov3rIwAAEXIIAHe78Y6wFkfFrScA5q9/P/b3\nGJVx88qSVel5FQYu5KpIT2pcQfJZsEsMNtblNdfkP61hyWAviagRUrumant9PS45\nvnKZQOhumYmt0VHE2xFoEKjOifzwOjcOAq6X72gfRzk/hVXVdGn/wnWDLpTh1GTu\nN6g0lnw9zJhPBH2k5JcSdt3d/4XAenR253olnk0ODhu5gUTTYsZyV2vzSFF0Zork\n30lHHsi77nYahOf/fNhIH7Doe0pxTV+4Neo+UzcEI9TuGMpoElx2cvOmUtbAm3cr\n0PINFV+Q1T4HOU+sDmEofjSl/3aV7YsXcSauKaPw6RwIchxiiFI+BzMZKRl/OVM=\n=10m6\n-----END PGP SIGNATURE-----\n", "payload": "tree ac5584a1873221aa7f1a46bf6c9bb855dfb256fa\nparent e6dbecdff382691b9f072fedc7cf70cd8ab5a6a4\nparent 10a9c0e57f888b56fd396b913e0b0eeca1eb0d0c\nauthor antoyo <antoyo@users.noreply.github.com> 1653744290 -0400\ncommitter GitHub <noreply@github.com> 1653744290 -0400\n\nMerge pull request #165 from yvt/fix-const-memattr\n\nDefine immutable statics with const qualified types"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7e0a42b4927a213b8e6ceeec6d842eb0faaf0d26", "html_url": "https://github.com/rust-lang/rust/commit/7e0a42b4927a213b8e6ceeec6d842eb0faaf0d26", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7e0a42b4927a213b8e6ceeec6d842eb0faaf0d26/comments", "author": {"login": "antoyo", "id": 584972, "node_id": "MDQ6VXNlcjU4NDk3Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/584972?v=4", "gravatar_id": "", "url": "https://api.github.com/users/antoyo", "html_url": "https://github.com/antoyo", "followers_url": "https://api.github.com/users/antoyo/followers", "following_url": "https://api.github.com/users/antoyo/following{/other_user}", "gists_url": "https://api.github.com/users/antoyo/gists{/gist_id}", "starred_url": "https://api.github.com/users/antoyo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/antoyo/subscriptions", "organizations_url": "https://api.github.com/users/antoyo/orgs", "repos_url": "https://api.github.com/users/antoyo/repos", "events_url": "https://api.github.com/users/antoyo/events{/privacy}", "received_events_url": "https://api.github.com/users/antoyo/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e6dbecdff382691b9f072fedc7cf70cd8ab5a6a4", "url": "https://api.github.com/repos/rust-lang/rust/commits/e6dbecdff382691b9f072fedc7cf70cd8ab5a6a4", "html_url": "https://github.com/rust-lang/rust/commit/e6dbecdff382691b9f072fedc7cf70cd8ab5a6a4"}, {"sha": "10a9c0e57f888b56fd396b913e0b0eeca1eb0d0c", "url": "https://api.github.com/repos/rust-lang/rust/commits/10a9c0e57f888b56fd396b913e0b0eeca1eb0d0c", "html_url": "https://github.com/rust-lang/rust/commit/10a9c0e57f888b56fd396b913e0b0eeca1eb0d0c"}], "stats": {"total": 12, "additions": 8, "deletions": 4}, "files": [{"sha": "6df2102470fe680daa1495b97cc47badc53d8619", "filename": "Cargo.lock", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/7e0a42b4927a213b8e6ceeec6d842eb0faaf0d26/Cargo.lock", "raw_url": "https://github.com/rust-lang/rust/raw/7e0a42b4927a213b8e6ceeec6d842eb0faaf0d26/Cargo.lock", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Cargo.lock?ref=7e0a42b4927a213b8e6ceeec6d842eb0faaf0d26", "patch": "@@ -41,15 +41,15 @@ dependencies = [\n [[package]]\n name = \"gccjit\"\n version = \"1.0.0\"\n-source = \"git+https://github.com/antoyo/gccjit.rs#6c2af0cf733a26740f01a7c679afc20431165a54\"\n+source = \"git+https://github.com/antoyo/gccjit.rs#bdb86fb5092895ff5589726b33250010c64d93f6\"\n dependencies = [\n  \"gccjit_sys\",\n ]\n \n [[package]]\n name = \"gccjit_sys\"\n version = \"0.0.1\"\n-source = \"git+https://github.com/antoyo/gccjit.rs#6c2af0cf733a26740f01a7c679afc20431165a54\"\n+source = \"git+https://github.com/antoyo/gccjit.rs#bdb86fb5092895ff5589726b33250010c64d93f6\"\n dependencies = [\n  \"libc 0.1.12\",\n ]"}, {"sha": "9517cf8494b02031534198c6f8db223fff0b19a8", "filename": "src/consts.rs", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/7e0a42b4927a213b8e6ceeec6d842eb0faaf0d26/src%2Fconsts.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7e0a42b4927a213b8e6ceeec6d842eb0faaf0d26/src%2Fconsts.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fconsts.rs?ref=7e0a42b4927a213b8e6ceeec6d842eb0faaf0d26", "patch": "@@ -47,7 +47,10 @@ impl<'gcc, 'tcx> StaticMethods for CodegenCx<'gcc, 'tcx> {\n             }\n         }\n         let global_value = self.static_addr_of_mut(cv, align, kind);\n-        // TODO(antoyo): set global constant.\n+        #[cfg(feature = \"master\")]\n+        self.global_lvalues.borrow().get(&global_value)\n+            .expect(\"`static_addr_of_mut` did not add the global to `self.global_lvalues`\")\n+            .global_set_readonly();\n         self.const_globals.borrow_mut().insert(cv, global_value);\n         global_value\n     }\n@@ -88,7 +91,8 @@ impl<'gcc, 'tcx> StaticMethods for CodegenCx<'gcc, 'tcx> {\n         // mutability are placed into read-only memory.\n         if !is_mutable {\n             if self.type_is_freeze(ty) {\n-                // TODO(antoyo): set global constant.\n+                #[cfg(feature = \"master\")]\n+                global.global_set_readonly();\n             }\n         }\n "}]}