{"sha": "bb5a652361bb416e38fa4f41784dd5d08b232f59", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJiNWE2NTIzNjFiYjQxNmUzOGZhNGY0MTc4NGRkNWQwOGIyMzJmNTk=", "commit": {"author": {"name": "Oliver Scherer", "email": "github35764891676564198441@oli-obk.de", "date": "2019-10-17T11:28:14Z"}, "committer": {"name": "Oliver Scherer", "email": "github35764891676564198441@oli-obk.de", "date": "2019-10-17T11:28:14Z"}, "message": "Rebase fallout", "tree": {"sha": "ecd1e2733ac338e4c9bbae63db9bd24444b18dea", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ecd1e2733ac338e4c9bbae63db9bd24444b18dea"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/bb5a652361bb416e38fa4f41784dd5d08b232f59", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/bb5a652361bb416e38fa4f41784dd5d08b232f59", "html_url": "https://github.com/rust-lang/rust/commit/bb5a652361bb416e38fa4f41784dd5d08b232f59", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/bb5a652361bb416e38fa4f41784dd5d08b232f59/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f5669ebb45353bfb828650472af783331b7b90fe", "url": "https://api.github.com/repos/rust-lang/rust/commits/f5669ebb45353bfb828650472af783331b7b90fe", "html_url": "https://github.com/rust-lang/rust/commit/f5669ebb45353bfb828650472af783331b7b90fe"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "3e0527393cd12a8f858d0c0f191fac21b8f5b44f", "filename": "src/librustc_typeck/check/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/bb5a652361bb416e38fa4f41784dd5d08b232f59/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bb5a652361bb416e38fa4f41784dd5d08b232f59/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs?ref=bb5a652361bb416e38fa4f41784dd5d08b232f59", "patch": "@@ -1400,7 +1400,7 @@ fn check_union_fields(tcx: TyCtxt<'_>, _: Span, item_def_id: DefId) -> bool {\n         return true;\n     }\n     let item_type = tcx.type_of(item_def_id);\n-    if let ty::Adt(def, substs) = item_type.sty {\n+    if let ty::Adt(def, substs) = item_type.kind {\n         if def.is_union() {\n             let fields = &def.non_enum_variant().fields;\n             for field in fields {"}]}