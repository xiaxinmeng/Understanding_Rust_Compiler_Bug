{"sha": "67978d56c11006a10d286153226f18e18367aa32", "node_id": "MDY6Q29tbWl0NzI0NzEyOjY3OTc4ZDU2YzExMDA2YTEwZDI4NjE1MzIyNmYxOGUxODM2N2FhMzI=", "commit": {"author": {"name": "Jeremy Fitzhardinge", "email": "jeremy@goop.org", "date": "2021-01-10T00:04:48Z"}, "committer": {"name": "Jeremy Fitzhardinge", "email": "jeremy@goop.org", "date": "2021-01-10T02:55:50Z"}, "message": "Fix --pretty=expanded with --remap-path-prefix\n\nPer https://github.com/rust-lang/rust/issues/80832, using\n--pretty=expanded and --remap-path-prefix results in an ICE.\n\nThis is becasue the session source files table is stored in remapped\nform, whereas --pretty-expanded looks up unremapped files. This remaps\nthe path prefixes before lookup.", "tree": {"sha": "ced8c5bbac2d082f872d5df0900b020c458ea879", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ced8c5bbac2d082f872d5df0900b020c458ea879"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/67978d56c11006a10d286153226f18e18367aa32", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/67978d56c11006a10d286153226f18e18367aa32", "html_url": "https://github.com/rust-lang/rust/commit/67978d56c11006a10d286153226f18e18367aa32", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/67978d56c11006a10d286153226f18e18367aa32/comments", "author": {"login": "jsgf", "id": 147966, "node_id": "MDQ6VXNlcjE0Nzk2Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/147966?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsgf", "html_url": "https://github.com/jsgf", "followers_url": "https://api.github.com/users/jsgf/followers", "following_url": "https://api.github.com/users/jsgf/following{/other_user}", "gists_url": "https://api.github.com/users/jsgf/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsgf/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsgf/subscriptions", "organizations_url": "https://api.github.com/users/jsgf/orgs", "repos_url": "https://api.github.com/users/jsgf/repos", "events_url": "https://api.github.com/users/jsgf/events{/privacy}", "received_events_url": "https://api.github.com/users/jsgf/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jsgf", "id": 147966, "node_id": "MDQ6VXNlcjE0Nzk2Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/147966?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsgf", "html_url": "https://github.com/jsgf", "followers_url": "https://api.github.com/users/jsgf/followers", "following_url": "https://api.github.com/users/jsgf/following{/other_user}", "gists_url": "https://api.github.com/users/jsgf/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsgf/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsgf/subscriptions", "organizations_url": "https://api.github.com/users/jsgf/orgs", "repos_url": "https://api.github.com/users/jsgf/repos", "events_url": "https://api.github.com/users/jsgf/events{/privacy}", "received_events_url": "https://api.github.com/users/jsgf/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6184f23950fb4aa14884ce310d948dc6fca269a3", "url": "https://api.github.com/repos/rust-lang/rust/commits/6184f23950fb4aa14884ce310d948dc6fca269a3", "html_url": "https://github.com/rust-lang/rust/commit/6184f23950fb4aa14884ce310d948dc6fca269a3"}], "stats": {"total": 26, "additions": 23, "deletions": 3}, "files": [{"sha": "b7edc24bc4a1a1f2425ce659bcfa904d3619f71c", "filename": "compiler/rustc_driver/src/pretty.rs", "status": "modified", "additions": 9, "deletions": 2, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/67978d56c11006a10d286153226f18e18367aa32/compiler%2Frustc_driver%2Fsrc%2Fpretty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/67978d56c11006a10d286153226f18e18367aa32/compiler%2Frustc_driver%2Fsrc%2Fpretty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_driver%2Fsrc%2Fpretty.rs?ref=67978d56c11006a10d286153226f18e18367aa32", "patch": "@@ -363,8 +363,15 @@ impl<'tcx> pprust_hir::PpAnn for TypedAnnotation<'tcx> {\n \n fn get_source(input: &Input, sess: &Session) -> (String, FileName) {\n     let src_name = input.source_name();\n-    let src =\n-        String::clone(&sess.source_map().get_source_file(&src_name).unwrap().src.as_ref().unwrap());\n+    let src = String::clone(\n+        &sess\n+            .source_map()\n+            .get_source_file(&src_name)\n+            .expect(\"get_source_file\")\n+            .src\n+            .as_ref()\n+            .expect(\"src\"),\n+    );\n     (src, src_name)\n }\n "}, {"sha": "c864e0b46377c6f49ba8cc92e25ca59dad2c887a", "filename": "compiler/rustc_span/src/source_map.rs", "status": "modified", "additions": 14, "deletions": 1, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/67978d56c11006a10d286153226f18e18367aa32/compiler%2Frustc_span%2Fsrc%2Fsource_map.rs", "raw_url": "https://github.com/rust-lang/rust/raw/67978d56c11006a10d286153226f18e18367aa32/compiler%2Frustc_span%2Fsrc%2Fsource_map.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_span%2Fsrc%2Fsource_map.rs?ref=67978d56c11006a10d286153226f18e18367aa32", "patch": "@@ -870,8 +870,10 @@ impl SourceMap {\n     }\n \n     pub fn get_source_file(&self, filename: &FileName) -> Option<Lrc<SourceFile>> {\n+        // Remap filename before lookup\n+        let filename = self.path_mapping().map_filename_prefix(filename).0;\n         for sf in self.files.borrow().source_files.iter() {\n-            if *filename == sf.name {\n+            if filename == sf.name {\n                 return Some(sf.clone());\n             }\n         }\n@@ -1039,4 +1041,15 @@ impl FilePathMapping {\n \n         (path, false)\n     }\n+\n+    fn map_filename_prefix(&self, file: &FileName) -> (FileName, bool) {\n+        match file {\n+            FileName::Real(realfile) => {\n+                let path = realfile.local_path();\n+                let (path, mapped) = self.map_prefix(path.to_path_buf());\n+                (FileName::Real(RealFileName::Named(path)), mapped)\n+            }\n+            other => (other.clone(), false),\n+        }\n+    }\n }"}]}