{"sha": "4300bea0c25ae5dabf6865d333568eede555856f", "node_id": "C_kwDOAAsO6NoAKDQzMDBiZWEwYzI1YWU1ZGFiZjY4NjVkMzMzNTY4ZWVkZTU1NTg1NmY", "commit": {"author": {"name": "Mara Bos", "email": "m-ou.se@m-ou.se", "date": "2022-01-04T15:32:39Z"}, "committer": {"name": "Mara Bos", "email": "m-ou.se@m-ou.se", "date": "2022-01-04T15:32:39Z"}, "message": "Formatting.", "tree": {"sha": "cb65711cab0b29511684c9fae0566e8f30966994", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/cb65711cab0b29511684c9fae0566e8f30966994"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4300bea0c25ae5dabf6865d333568eede555856f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4300bea0c25ae5dabf6865d333568eede555856f", "html_url": "https://github.com/rust-lang/rust/commit/4300bea0c25ae5dabf6865d333568eede555856f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4300bea0c25ae5dabf6865d333568eede555856f/comments", "author": {"login": "m-ou-se", "id": 783247, "node_id": "MDQ6VXNlcjc4MzI0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/783247?v=4", "gravatar_id": "", "url": "https://api.github.com/users/m-ou-se", "html_url": "https://github.com/m-ou-se", "followers_url": "https://api.github.com/users/m-ou-se/followers", "following_url": "https://api.github.com/users/m-ou-se/following{/other_user}", "gists_url": "https://api.github.com/users/m-ou-se/gists{/gist_id}", "starred_url": "https://api.github.com/users/m-ou-se/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/m-ou-se/subscriptions", "organizations_url": "https://api.github.com/users/m-ou-se/orgs", "repos_url": "https://api.github.com/users/m-ou-se/repos", "events_url": "https://api.github.com/users/m-ou-se/events{/privacy}", "received_events_url": "https://api.github.com/users/m-ou-se/received_events", "type": "User", "site_admin": false}, "committer": {"login": "m-ou-se", "id": 783247, "node_id": "MDQ6VXNlcjc4MzI0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/783247?v=4", "gravatar_id": "", "url": "https://api.github.com/users/m-ou-se", "html_url": "https://github.com/m-ou-se", "followers_url": "https://api.github.com/users/m-ou-se/followers", "following_url": "https://api.github.com/users/m-ou-se/following{/other_user}", "gists_url": "https://api.github.com/users/m-ou-se/gists{/gist_id}", "starred_url": "https://api.github.com/users/m-ou-se/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/m-ou-se/subscriptions", "organizations_url": "https://api.github.com/users/m-ou-se/orgs", "repos_url": "https://api.github.com/users/m-ou-se/repos", "events_url": "https://api.github.com/users/m-ou-se/events{/privacy}", "received_events_url": "https://api.github.com/users/m-ou-se/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f5217792ed0dbf132174250ea81ca2e3dd7b60f1", "url": "https://api.github.com/repos/rust-lang/rust/commits/f5217792ed0dbf132174250ea81ca2e3dd7b60f1", "html_url": "https://github.com/rust-lang/rust/commit/f5217792ed0dbf132174250ea81ca2e3dd7b60f1"}], "stats": {"total": 4, "additions": 3, "deletions": 1}, "files": [{"sha": "0db938b9f392ae0d5c8b0203a714cf1bfdab456e", "filename": "library/std/src/thread/scoped.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/4300bea0c25ae5dabf6865d333568eede555856f/library%2Fstd%2Fsrc%2Fthread%2Fscoped.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4300bea0c25ae5dabf6865d333568eede555856f/library%2Fstd%2Fsrc%2Fthread%2Fscoped.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fthread%2Fscoped.rs?ref=4300bea0c25ae5dabf6865d333568eede555856f", "patch": "@@ -116,7 +116,9 @@ where\n     // Throw any panic from `f`, or the return value of `f` if no thread panicked.\n     match result {\n         Err(e) => resume_unwind(e),\n-        Ok(_) if scope.data.a_thread_panicked.load(Ordering::Relaxed) => panic!(\"a thread panicked\"),\n+        Ok(_) if scope.data.a_thread_panicked.load(Ordering::Relaxed) => {\n+            panic!(\"a thread panicked\")\n+        }\n         Ok(result) => result,\n     }\n }"}]}