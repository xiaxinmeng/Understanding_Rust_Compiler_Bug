{"sha": "a34948a2c5d7cd296abda6970652a9513d67feb7", "node_id": "MDY6Q29tbWl0NzI0NzEyOmEzNDk0OGEyYzVkN2NkMjk2YWJkYTY5NzA2NTJhOTUxM2Q2N2ZlYjc=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2013-03-28T23:47:33Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2013-04-11T01:49:51Z"}, "message": "rustllvm: Initialize target analysis passes\n\nWithout this the target info for certain optimizations will not be\ncreated and the compiler will sometimes crash", "tree": {"sha": "bc485ce2e6e6ed416a08412edd85085a16211f93", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bc485ce2e6e6ed416a08412edd85085a16211f93"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a34948a2c5d7cd296abda6970652a9513d67feb7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a34948a2c5d7cd296abda6970652a9513d67feb7", "html_url": "https://github.com/rust-lang/rust/commit/a34948a2c5d7cd296abda6970652a9513d67feb7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a34948a2c5d7cd296abda6970652a9513d67feb7/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "344628fe91ffa0fad32bc5b3eee3e6b4b48c9990", "url": "https://api.github.com/repos/rust-lang/rust/commits/344628fe91ffa0fad32bc5b3eee3e6b4b48c9990", "html_url": "https://github.com/rust-lang/rust/commit/344628fe91ffa0fad32bc5b3eee3e6b4b48c9990"}], "stats": {"total": 5, "additions": 4, "deletions": 1}, "files": [{"sha": "5d422b2d2edc3af6abfe4b907e6fde43670aa15f", "filename": "src/rustllvm/RustWrapper.cpp", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/a34948a2c5d7cd296abda6970652a9513d67feb7/src%2Frustllvm%2FRustWrapper.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/a34948a2c5d7cd296abda6970652a9513d67feb7/src%2Frustllvm%2FRustWrapper.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustllvm%2FRustWrapper.cpp?ref=a34948a2c5d7cd296abda6970652a9513d67feb7", "patch": "@@ -452,6 +452,8 @@ LLVMRustWriteOutputFile(LLVMPassManagerRef PMR,\n   Options.NoFramePointerElim = true;\n   Options.EnableSegmentedStacks = EnableSegmentedStacks;\n \n+  PassManager *PM = unwrap<PassManager>(PMR);\n+\n   std::string Err;\n   std::string Trip(Triple::normalize(triple));\n   std::string FeaturesStr;\n@@ -461,8 +463,9 @@ LLVMRustWriteOutputFile(LLVMPassManagerRef PMR,\n     TheTarget->createTargetMachine(Trip, CPUStr, FeaturesStr,\n \t\t\t\t   Options, Reloc::PIC_,\n \t\t\t\t   CodeModel::Default, OptLevel);\n+  Target->addAnalysisPasses(*PM);\n+\n   bool NoVerify = false;\n-  PassManager *PM = unwrap<PassManager>(PMR);\n   std::string ErrorInfo;\n   raw_fd_ostream OS(path, ErrorInfo,\n                     raw_fd_ostream::F_Binary);"}]}