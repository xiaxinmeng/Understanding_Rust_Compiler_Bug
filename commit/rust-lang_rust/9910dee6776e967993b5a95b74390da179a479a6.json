{"sha": "9910dee6776e967993b5a95b74390da179a479a6", "node_id": "MDY6Q29tbWl0NzI0NzEyOjk5MTBkZWU2Nzc2ZTk2Nzk5M2I1YTk1Yjc0MzkwZGExNzlhNDc5YTY=", "commit": {"author": {"name": "dylan_DPC", "email": "dylan.dpc@gmail.com", "date": "2018-07-19T18:52:57Z"}, "committer": {"name": "dylan_DPC", "email": "dylan.dpc@gmail.com", "date": "2018-07-19T18:52:57Z"}, "message": "tidy fixes", "tree": {"sha": "f44b5a3098d6df8961fe8809d0efc90d18c9c7aa", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f44b5a3098d6df8961fe8809d0efc90d18c9c7aa"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9910dee6776e967993b5a95b74390da179a479a6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9910dee6776e967993b5a95b74390da179a479a6", "html_url": "https://github.com/rust-lang/rust/commit/9910dee6776e967993b5a95b74390da179a479a6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9910dee6776e967993b5a95b74390da179a479a6/comments", "author": {"login": "Dylan-DPC", "id": 99973273, "node_id": "U_kgDOBfV4mQ", "avatar_url": "https://avatars.githubusercontent.com/u/99973273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dylan-DPC", "html_url": "https://github.com/Dylan-DPC", "followers_url": "https://api.github.com/users/Dylan-DPC/followers", "following_url": "https://api.github.com/users/Dylan-DPC/following{/other_user}", "gists_url": "https://api.github.com/users/Dylan-DPC/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dylan-DPC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dylan-DPC/subscriptions", "organizations_url": "https://api.github.com/users/Dylan-DPC/orgs", "repos_url": "https://api.github.com/users/Dylan-DPC/repos", "events_url": "https://api.github.com/users/Dylan-DPC/events{/privacy}", "received_events_url": "https://api.github.com/users/Dylan-DPC/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Dylan-DPC", "id": 99973273, "node_id": "U_kgDOBfV4mQ", "avatar_url": "https://avatars.githubusercontent.com/u/99973273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dylan-DPC", "html_url": "https://github.com/Dylan-DPC", "followers_url": "https://api.github.com/users/Dylan-DPC/followers", "following_url": "https://api.github.com/users/Dylan-DPC/following{/other_user}", "gists_url": "https://api.github.com/users/Dylan-DPC/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dylan-DPC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dylan-DPC/subscriptions", "organizations_url": "https://api.github.com/users/Dylan-DPC/orgs", "repos_url": "https://api.github.com/users/Dylan-DPC/repos", "events_url": "https://api.github.com/users/Dylan-DPC/events{/privacy}", "received_events_url": "https://api.github.com/users/Dylan-DPC/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "225578621288b5c67c2174a6f4b1576f16155324", "url": "https://api.github.com/repos/rust-lang/rust/commits/225578621288b5c67c2174a6f4b1576f16155324", "html_url": "https://github.com/rust-lang/rust/commit/225578621288b5c67c2174a6f4b1576f16155324"}], "stats": {"total": 13, "additions": 9, "deletions": 4}, "files": [{"sha": "bfac03debab4632314cb7d70ec1b48e3d7c736f1", "filename": "src/librustc/mir/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9910dee6776e967993b5a95b74390da179a479a6/src%2Flibrustc%2Fmir%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9910dee6776e967993b5a95b74390da179a479a6/src%2Flibrustc%2Fmir%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmir%2Fmod.rs?ref=9910dee6776e967993b5a95b74390da179a479a6", "patch": "@@ -2933,4 +2933,4 @@ impl<'tcx> TypeFoldable<'tcx> for Literal<'tcx> {\n     }\n }\n \n-newtype_index!(LocalWithRegion);\n\\ No newline at end of file\n+newtype_index!(LocalWithRegion);"}, {"sha": "f2f8ffa6a8b89a9c2c93d6edae1f85620aff1d80", "filename": "src/librustc_mir/borrow_check/nll/mod.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/9910dee6776e967993b5a95b74390da179a479a6/src%2Flibrustc_mir%2Fborrow_check%2Fnll%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9910dee6776e967993b5a95b74390da179a479a6/src%2Flibrustc_mir%2Fborrow_check%2Fnll%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check%2Fnll%2Fmod.rs?ref=9910dee6776e967993b5a95b74390da179a479a6", "patch": "@@ -408,7 +408,10 @@ impl ToRegionVid for RegionVid {\n     }\n }\n \n-fn live_variable_set(regular: &LocalSet<LocalWithRegion>, drops: &LocalSet<LocalWithRegion>) -> String {\n+fn live_variable_set(\n+    regular: &LocalSet<LocalWithRegion>,\n+    drops: &LocalSet<LocalWithRegion>\n+) -> String {\n     // sort and deduplicate:\n     let all_locals: BTreeSet<_> = regular.iter().chain(drops.iter()).collect();\n "}, {"sha": "c19fdb9503413df3d322427909aba3ea8890313e", "filename": "src/librustc_mir/util/liveness.rs", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/9910dee6776e967993b5a95b74390da179a479a6/src%2Flibrustc_mir%2Futil%2Fliveness.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9910dee6776e967993b5a95b74390da179a479a6/src%2Flibrustc_mir%2Futil%2Fliveness.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Futil%2Fliveness.rs?ref=9910dee6776e967993b5a95b74390da179a479a6", "patch": "@@ -570,7 +570,10 @@ impl LiveVariableMap for NllLivenessMap {\n impl NllLivenessMap {\n     pub fn compute(mir: &Mir) -> Self {\n         let mut to_local = IndexVec::default();\n-        let from_local: IndexVec<Local,Option<_>> = mir.local_decls.iter_enumerated().map(|(local, local_decl)| {\n+        let from_local: IndexVec<Local,Option<_>> = mir\n+            .local_decls\n+            .iter_enumerated()\n+            .map(|(local, local_decl)| {\n             if local_decl.ty.has_free_regions() {\n                 Some(to_local.push(local))\n             }\n@@ -582,4 +585,3 @@ impl NllLivenessMap {\n         Self { from_local, to_local }\n     }\n }\n-"}]}