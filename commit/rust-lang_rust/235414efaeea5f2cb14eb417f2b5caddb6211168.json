{"sha": "235414efaeea5f2cb14eb417f2b5caddb6211168", "node_id": "C_kwDOAAsO6NoAKDIzNTQxNGVmYWVlYTVmMmNiMTRlYjQxN2YyYjVjYWRkYjYyMTExNjg", "commit": {"author": {"name": "antoyo", "email": "antoyo@users.noreply.github.com", "date": "2022-10-03T02:27:29Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-10-03T02:27:29Z"}, "message": "Merge pull request #228 from sadlerap/simd-as\n\nsimd: enable simd_as intrinsic", "tree": {"sha": "92433a9aace8b0737a17b353a6728fc6b7ab1e31", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/92433a9aace8b0737a17b353a6728fc6b7ab1e31"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/235414efaeea5f2cb14eb417f2b5caddb6211168", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJjOkiRCRBK7hj4Ov3rIwAARzUIAA8oJHBR6UVJjBurvcBVY+TE\nnHbhjkLrGgLDnZOpbEdIPcETQLnslNQHISumAjNaa/rDCyY3dmQVxslCZAfjspJv\nMuCvn1lpfr8K1mlxxSLKZ3LidzNxrm6vI6a9uoM/r7CLwm3w+iPDUQiQWL6SmsYj\nH8UxmyRwNcRZYooi3m9T1jufbMGc3sWbk0YS0NGblEr4NCA6Sv/9zAOntL5TvpDh\naM9FLlg2lrYsorqbxEi9OPc7cQs8zejdy8HaxVvhyyPSthPZ1AtxZpImnUxg+Qo8\n+WYsjvYO3AkgOqqbWYk1FwxN5plOR2KLjP5Kg2aAhiQs/JHREONB+4PoCPbN+ds=\n=pNnP\n-----END PGP SIGNATURE-----\n", "payload": "tree 92433a9aace8b0737a17b353a6728fc6b7ab1e31\nparent 86a3e3bd03a3be2cbd44094878d6ea7528ba5c9c\nparent 436710fa9bf5ea9a601705c2bd276e18751f2c24\nauthor antoyo <antoyo@users.noreply.github.com> 1664764049 -0400\ncommitter GitHub <noreply@github.com> 1664764049 -0400\n\nMerge pull request #228 from sadlerap/simd-as\n\nsimd: enable simd_as intrinsic"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/235414efaeea5f2cb14eb417f2b5caddb6211168", "html_url": "https://github.com/rust-lang/rust/commit/235414efaeea5f2cb14eb417f2b5caddb6211168", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/235414efaeea5f2cb14eb417f2b5caddb6211168/comments", "author": {"login": "antoyo", "id": 584972, "node_id": "MDQ6VXNlcjU4NDk3Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/584972?v=4", "gravatar_id": "", "url": "https://api.github.com/users/antoyo", "html_url": "https://github.com/antoyo", "followers_url": "https://api.github.com/users/antoyo/followers", "following_url": "https://api.github.com/users/antoyo/following{/other_user}", "gists_url": "https://api.github.com/users/antoyo/gists{/gist_id}", "starred_url": "https://api.github.com/users/antoyo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/antoyo/subscriptions", "organizations_url": "https://api.github.com/users/antoyo/orgs", "repos_url": "https://api.github.com/users/antoyo/repos", "events_url": "https://api.github.com/users/antoyo/events{/privacy}", "received_events_url": "https://api.github.com/users/antoyo/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "86a3e3bd03a3be2cbd44094878d6ea7528ba5c9c", "url": "https://api.github.com/repos/rust-lang/rust/commits/86a3e3bd03a3be2cbd44094878d6ea7528ba5c9c", "html_url": "https://github.com/rust-lang/rust/commit/86a3e3bd03a3be2cbd44094878d6ea7528ba5c9c"}, {"sha": "436710fa9bf5ea9a601705c2bd276e18751f2c24", "url": "https://api.github.com/repos/rust-lang/rust/commits/436710fa9bf5ea9a601705c2bd276e18751f2c24", "html_url": "https://github.com/rust-lang/rust/commit/436710fa9bf5ea9a601705c2bd276e18751f2c24"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "6acd3808445745fe165e222a12c66677e2d0d8a3", "filename": "failing-ui-tests.txt", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/235414efaeea5f2cb14eb417f2b5caddb6211168/failing-ui-tests.txt", "raw_url": "https://github.com/rust-lang/rust/raw/235414efaeea5f2cb14eb417f2b5caddb6211168/failing-ui-tests.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/failing-ui-tests.txt?ref=235414efaeea5f2cb14eb417f2b5caddb6211168", "patch": "@@ -31,7 +31,6 @@ src/test/ui/sepcomp/sepcomp-fns-backwards.rs\n src/test/ui/sepcomp/sepcomp-fns.rs\n src/test/ui/sepcomp/sepcomp-statics.rs\n src/test/ui/simd/intrinsic/generic-arithmetic-pass.rs\n-src/test/ui/simd/intrinsic/generic-as.rs\n src/test/ui/simd/intrinsic/generic-bitmask-pass.rs\n src/test/ui/simd/intrinsic/generic-gather-pass.rs\n src/test/ui/simd/intrinsic/generic-select-pass.rs"}, {"sha": "027c929d2f3d818e461a89c3b62b5ce42d9986e7", "filename": "failing-ui-tests12.txt", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/235414efaeea5f2cb14eb417f2b5caddb6211168/failing-ui-tests12.txt", "raw_url": "https://github.com/rust-lang/rust/raw/235414efaeea5f2cb14eb417f2b5caddb6211168/failing-ui-tests12.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/failing-ui-tests12.txt?ref=235414efaeea5f2cb14eb417f2b5caddb6211168", "patch": "@@ -10,6 +10,7 @@ src/test/ui/packed/packed-tuple-struct-layout.rs\n src/test/ui/simd/array-type.rs\n src/test/ui/simd/intrinsic/float-minmax-pass.rs\n src/test/ui/simd/intrinsic/generic-arithmetic-saturating-pass.rs\n+src/test/ui/simd/intrinsic/generic-as.rs\n src/test/ui/simd/intrinsic/generic-cast-pass.rs\n src/test/ui/simd/intrinsic/generic-cast-pointer-width.rs\n src/test/ui/simd/intrinsic/generic-comparison-pass.rs"}, {"sha": "00c541a8af754a5b74092b7e0526ef3fb6ddc530", "filename": "src/intrinsic/simd.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/235414efaeea5f2cb14eb417f2b5caddb6211168/src%2Fintrinsic%2Fsimd.rs", "raw_url": "https://github.com/rust-lang/rust/raw/235414efaeea5f2cb14eb417f2b5caddb6211168/src%2Fintrinsic%2Fsimd.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fintrinsic%2Fsimd.rs?ref=235414efaeea5f2cb14eb417f2b5caddb6211168", "patch": "@@ -254,7 +254,7 @@ pub fn generic_simd_intrinsic<'a, 'gcc, 'tcx>(bx: &mut Builder<'a, 'gcc, 'tcx>,\n     }\n \n     #[cfg(feature=\"master\")]\n-    if name == sym::simd_cast {\n+    if name == sym::simd_cast || name == sym::simd_as {\n         require_simd!(ret_ty, \"return\");\n         let (out_len, out_elem) = ret_ty.simd_size_and_type(bx.tcx());\n         require!("}]}