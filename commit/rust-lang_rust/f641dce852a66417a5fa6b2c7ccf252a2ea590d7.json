{"sha": "f641dce852a66417a5fa6b2c7ccf252a2ea590d7", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY2NDFkY2U4NTJhNjY0MTdhNWZhNmIyYzdjY2YyNTJhMmVhNTkwZDc=", "commit": {"author": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2012-04-19T23:37:06Z"}, "committer": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2012-04-19T23:51:37Z"}, "message": "Get evec slices and unique-evec slice-borrowing working.", "tree": {"sha": "85bef319d2e0dcc3a27dbdd70724bd547a48d4cd", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/85bef319d2e0dcc3a27dbdd70724bd547a48d4cd"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f641dce852a66417a5fa6b2c7ccf252a2ea590d7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f641dce852a66417a5fa6b2c7ccf252a2ea590d7", "html_url": "https://github.com/rust-lang/rust/commit/f641dce852a66417a5fa6b2c7ccf252a2ea590d7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f641dce852a66417a5fa6b2c7ccf252a2ea590d7/comments", "author": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "committer": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b0074c5a92a5b4bcfbb936d3877cc50b1cf8df90", "url": "https://api.github.com/repos/rust-lang/rust/commits/b0074c5a92a5b4bcfbb936d3877cc50b1cf8df90", "html_url": "https://github.com/rust-lang/rust/commit/b0074c5a92a5b4bcfbb936d3877cc50b1cf8df90"}], "stats": {"total": 41, "additions": 36, "deletions": 5}, "files": [{"sha": "e41e8665cd8bb4a4f672da9eb44af84d97633733", "filename": "src/rustc/middle/trans/tvec.rs", "status": "modified", "additions": 12, "deletions": 2, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/f641dce852a66417a5fa6b2c7ccf252a2ea590d7/src%2Frustc%2Fmiddle%2Ftrans%2Ftvec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f641dce852a66417a5fa6b2c7ccf252a2ea590d7/src%2Frustc%2Fmiddle%2Ftrans%2Ftvec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustc%2Fmiddle%2Ftrans%2Ftvec.rs?ref=f641dce852a66417a5fa6b2c7ccf252a2ea590d7", "patch": "@@ -102,6 +102,7 @@ fn trans_evec(bcx: block, args: [@ast::expr],\n     let vec_ty = node_id_type(bcx, id);\n     let unit_ty = ty::sequence_element_type(bcx.tcx(), vec_ty);\n     let llunitty = type_of::type_of(ccx, unit_ty);\n+    let unit_sz = llsize_of(ccx, llunitty);\n \n     let mut {bcx, val, dataptr} =\n         alt vst {\n@@ -122,8 +123,14 @@ fn trans_evec(bcx: block, args: [@ast::expr],\n             let n = vec::len(args);\n             let n = C_uint(ccx, n);\n             let vp = base::arrayalloca(bcx, llunitty, n);\n-            let v = C_struct([vp, n]);\n-            {bcx: bcx, val: v, dataptr: vp}\n+            let len = Mul(bcx, n, unit_sz);\n+\n+            let p = base::alloca(bcx, T_struct([T_ptr(llunitty),\n+                                                ccx.int_type]));\n+            Store(bcx, vp, GEPi(bcx, p, [0, abi::slice_elt_base]));\n+            Store(bcx, len, GEPi(bcx, p, [0, abi::slice_elt_len]));\n+\n+            {bcx: bcx, val: p, dataptr: vp}\n           }\n           ast::vstore_uniq {\n             let {bcx, val} = alloc_uniq(bcx, llunitty, args.len());\n@@ -157,6 +164,9 @@ fn trans_evec(bcx: block, args: [@ast::expr],\n         // We wrote into the destination in the fixed case.\n         ret bcx;\n       }\n+      ast::vstore_slice(_) {\n+        ret base::store_in_dest(bcx, Load(bcx, val), dest);\n+      }\n       _ {\n         ret base::store_in_dest(bcx, val, dest);\n       }"}, {"sha": "1c7799ce2c39c6607694481795aa095df48ce83c", "filename": "src/test/run-pass/evec-slice.rs", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/f641dce852a66417a5fa6b2c7ccf252a2ea590d7/src%2Ftest%2Frun-pass%2Fevec-slice.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f641dce852a66417a5fa6b2c7ccf252a2ea590d7/src%2Ftest%2Frun-pass%2Fevec-slice.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fevec-slice.rs?ref=f641dce852a66417a5fa6b2c7ccf252a2ea590d7", "patch": "@@ -0,0 +1,7 @@\n+fn main() {\n+    let x : [int]/& = [1,2,3,4,5]/&;\n+    let mut z = [1,2,3,4,5]/&;\n+    z = x;\n+    assert z[0] == 1;\n+    assert z[4] == 5;\n+}"}, {"sha": "f118b96bb41766dfb68def1933e2c6c339a6ce57", "filename": "src/test/run-pass/regions-borrow-estr-uniq.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/f641dce852a66417a5fa6b2c7ccf252a2ea590d7/src%2Ftest%2Frun-pass%2Fregions-borrow-estr-uniq.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f641dce852a66417a5fa6b2c7ccf252a2ea590d7/src%2Ftest%2Frun-pass%2Fregions-borrow-estr-uniq.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fregions-borrow-estr-uniq.rs?ref=f641dce852a66417a5fa6b2c7ccf252a2ea590d7", "patch": "@@ -6,4 +6,8 @@ fn main() {\n     let p = \"hello\"/~;\n     let r = foo(p);\n     assert r == 'h' as u8;\n+\n+    let p = \"hello\";\n+    let r = foo(p);\n+    assert r == 'h' as u8;\n }"}, {"sha": "3cfcd015dde8f18e592f003dcbae8bde91c6f591", "filename": "src/test/run-pass/regions-borrow-evec-uniq.rs", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/f641dce852a66417a5fa6b2c7ccf252a2ea590d7/src%2Ftest%2Frun-pass%2Fregions-borrow-evec-uniq.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f641dce852a66417a5fa6b2c7ccf252a2ea590d7/src%2Ftest%2Frun-pass%2Fregions-borrow-evec-uniq.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fregions-borrow-evec-uniq.rs?ref=f641dce852a66417a5fa6b2c7ccf252a2ea590d7", "patch": "@@ -0,0 +1,13 @@\n+fn foo(x: [int]/&) -> int {\n+    x[0]\n+}\n+\n+fn main() {\n+    let p = [1,2,3,4,5]/~;\n+    let r = foo(p);\n+    assert r == 1;\n+\n+    let p = [5,4,3,2,1];\n+    let r = foo(p);\n+    assert r == 5;\n+}"}, {"sha": "3a5a1916d64a5dad6fb34ac571a3dedc2eace812", "filename": "src/test/run-pass/vec-concat.rs", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/f641dce852a66417a5fa6b2c7ccf252a2ea590d7/src%2Ftest%2Frun-pass%2Fvec-concat.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f641dce852a66417a5fa6b2c7ccf252a2ea590d7/src%2Ftest%2Frun-pass%2Fvec-concat.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fvec-concat.rs?ref=f641dce852a66417a5fa6b2c7ccf252a2ea590d7", "patch": "@@ -1,6 +1,3 @@\n-\n-\n-\n // -*- rust -*-\n fn main() {\n     let a: [int] = [1, 2, 3, 4, 5];"}]}