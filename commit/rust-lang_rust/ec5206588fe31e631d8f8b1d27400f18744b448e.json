{"sha": "ec5206588fe31e631d8f8b1d27400f18744b448e", "node_id": "MDY6Q29tbWl0NzI0NzEyOmVjNTIwNjU4OGZlMzFlNjMxZDhmOGIxZDI3NDAwZjE4NzQ0YjQ0OGU=", "commit": {"author": {"name": "Oliver Scherer", "email": "github35764891676564198441@oli-obk.de", "date": "2019-04-08T13:32:31Z"}, "committer": {"name": "Oliver Scherer", "email": "github35764891676564198441@oli-obk.de", "date": "2019-04-08T13:32:31Z"}, "message": "Explicit promotion is indistinguishable from explicit promotion\n\nImplicit promotion on the other hand has very strict rules on what may be done", "tree": {"sha": "1c638a7b76227a8f453954d545e00df121b8e502", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1c638a7b76227a8f453954d545e00df121b8e502"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ec5206588fe31e631d8f8b1d27400f18744b448e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ec5206588fe31e631d8f8b1d27400f18744b448e", "html_url": "https://github.com/rust-lang/rust/commit/ec5206588fe31e631d8f8b1d27400f18744b448e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ec5206588fe31e631d8f8b1d27400f18744b448e/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6b018444081a6a2940889bec495acea923e365cf", "url": "https://api.github.com/repos/rust-lang/rust/commits/6b018444081a6a2940889bec495acea923e365cf", "html_url": "https://github.com/rust-lang/rust/commit/6b018444081a6a2940889bec495acea923e365cf"}], "stats": {"total": 18, "additions": 8, "deletions": 10}, "files": [{"sha": "9095b78dd726a081264f4b7a4c3bff1ec229d016", "filename": "src/librustc_mir/transform/qualify_consts.rs", "status": "modified", "additions": 8, "deletions": 10, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/ec5206588fe31e631d8f8b1d27400f18744b448e/src%2Flibrustc_mir%2Ftransform%2Fqualify_consts.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ec5206588fe31e631d8f8b1d27400f18744b448e/src%2Flibrustc_mir%2Ftransform%2Fqualify_consts.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Ftransform%2Fqualify_consts.rs?ref=ec5206588fe31e631d8f8b1d27400f18744b448e", "patch": "@@ -508,13 +508,11 @@ impl Qualif for IsNotConst {\n     }\n }\n \n-// Refers to temporaries which cannot be promoted as\n-// promote_consts decided they weren't simple enough.\n-// FIXME(oli-obk,eddyb): Remove this flag entirely and\n-// solely process this information via `IsNotConst`.\n-struct IsNotPromotable;\n+/// Refers to temporaries which cannot be promoted *implicitly*.\n+/// Explicit promotion e.g. for constant arguments declared via `rustc_args_required_const`.\n+struct IsNotImplicitlyPromotable;\n \n-impl Qualif for IsNotPromotable {\n+impl Qualif for IsNotImplicitlyPromotable {\n     const IDX: usize = 3;\n \n     fn in_call(\n@@ -550,15 +548,15 @@ macro_rules! static_assert_seq_qualifs {\n         static_assert!(SEQ_QUALIFS: QUALIF_COUNT == $i);\n     };\n }\n-static_assert_seq_qualifs!(0 => HasMutInterior, NeedsDrop, IsNotConst, IsNotPromotable);\n+static_assert_seq_qualifs!(0 => HasMutInterior, NeedsDrop, IsNotConst, IsNotImplicitlyPromotable);\n \n impl ConstCx<'_, 'tcx> {\n     fn qualifs_in_any_value_of_ty(&self, ty: Ty<'tcx>) -> PerQualif<bool> {\n         let mut qualifs = PerQualif::default();\n         qualifs[HasMutInterior] = HasMutInterior::in_any_value_of_ty(self, ty).unwrap_or(false);\n         qualifs[NeedsDrop] = NeedsDrop::in_any_value_of_ty(self, ty).unwrap_or(false);\n         qualifs[IsNotConst] = IsNotConst::in_any_value_of_ty(self, ty).unwrap_or(false);\n-        qualifs[IsNotPromotable] = IsNotPromotable::in_any_value_of_ty(self, ty).unwrap_or(false);\n+        qualifs[IsNotImplicitlyPromotable] = IsNotImplicitlyPromotable::in_any_value_of_ty(self, ty).unwrap_or(false);\n         qualifs\n     }\n \n@@ -567,7 +565,7 @@ impl ConstCx<'_, 'tcx> {\n         qualifs[HasMutInterior] = HasMutInterior::in_local(self, local);\n         qualifs[NeedsDrop] = NeedsDrop::in_local(self, local);\n         qualifs[IsNotConst] = IsNotConst::in_local(self, local);\n-        qualifs[IsNotPromotable] = IsNotPromotable::in_local(self, local);\n+        qualifs[IsNotImplicitlyPromotable] = IsNotImplicitlyPromotable::in_local(self, local);\n         qualifs\n     }\n \n@@ -576,7 +574,7 @@ impl ConstCx<'_, 'tcx> {\n         qualifs[HasMutInterior] = HasMutInterior::in_value(self, source);\n         qualifs[NeedsDrop] = NeedsDrop::in_value(self, source);\n         qualifs[IsNotConst] = IsNotConst::in_value(self, source);\n-        qualifs[IsNotPromotable] = IsNotPromotable::in_value(self, source);\n+        qualifs[IsNotImplicitlyPromotable] = IsNotImplicitlyPromotable::in_value(self, source);\n         qualifs\n     }\n }"}]}