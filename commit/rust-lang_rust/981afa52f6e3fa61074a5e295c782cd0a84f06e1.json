{"sha": "981afa52f6e3fa61074a5e295c782cd0a84f06e1", "node_id": "MDY6Q29tbWl0NzI0NzEyOjk4MWFmYTUyZjZlM2ZhNjEwNzRhNWUyOTVjNzgyY2QwYTg0ZjA2ZTE=", "commit": {"author": {"name": "Mark Simulacrum", "email": "mark.simulacrum@gmail.com", "date": "2017-07-18T21:28:53Z"}, "committer": {"name": "Mark Simulacrum", "email": "mark.simulacrum@gmail.com", "date": "2017-07-20T17:24:37Z"}, "message": "Krate -> Crate", "tree": {"sha": "1ed4eef6cd7f51a3f14d8d48240517b7a41ee7c0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1ed4eef6cd7f51a3f14d8d48240517b7a41ee7c0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/981afa52f6e3fa61074a5e295c782cd0a84f06e1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/981afa52f6e3fa61074a5e295c782cd0a84f06e1", "html_url": "https://github.com/rust-lang/rust/commit/981afa52f6e3fa61074a5e295c782cd0a84f06e1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/981afa52f6e3fa61074a5e295c782cd0a84f06e1/comments", "author": {"login": "Mark-Simulacrum", "id": 5047365, "node_id": "MDQ6VXNlcjUwNDczNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/5047365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mark-Simulacrum", "html_url": "https://github.com/Mark-Simulacrum", "followers_url": "https://api.github.com/users/Mark-Simulacrum/followers", "following_url": "https://api.github.com/users/Mark-Simulacrum/following{/other_user}", "gists_url": "https://api.github.com/users/Mark-Simulacrum/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mark-Simulacrum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mark-Simulacrum/subscriptions", "organizations_url": "https://api.github.com/users/Mark-Simulacrum/orgs", "repos_url": "https://api.github.com/users/Mark-Simulacrum/repos", "events_url": "https://api.github.com/users/Mark-Simulacrum/events{/privacy}", "received_events_url": "https://api.github.com/users/Mark-Simulacrum/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Mark-Simulacrum", "id": 5047365, "node_id": "MDQ6VXNlcjUwNDczNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/5047365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mark-Simulacrum", "html_url": "https://github.com/Mark-Simulacrum", "followers_url": "https://api.github.com/users/Mark-Simulacrum/followers", "following_url": "https://api.github.com/users/Mark-Simulacrum/following{/other_user}", "gists_url": "https://api.github.com/users/Mark-Simulacrum/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mark-Simulacrum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mark-Simulacrum/subscriptions", "organizations_url": "https://api.github.com/users/Mark-Simulacrum/orgs", "repos_url": "https://api.github.com/users/Mark-Simulacrum/repos", "events_url": "https://api.github.com/users/Mark-Simulacrum/events{/privacy}", "received_events_url": "https://api.github.com/users/Mark-Simulacrum/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ba1fc82fe4377dd7a7898b8354dcf7e2b3a0e685", "url": "https://api.github.com/repos/rust-lang/rust/commits/ba1fc82fe4377dd7a7898b8354dcf7e2b3a0e685", "html_url": "https://github.com/rust-lang/rust/commit/ba1fc82fe4377dd7a7898b8354dcf7e2b3a0e685"}], "stats": {"total": 22, "additions": 11, "deletions": 11}, "files": [{"sha": "77f8dda251badefa9f3f358620c54f2becc4257f", "filename": "src/bootstrap/builder.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/981afa52f6e3fa61074a5e295c782cd0a84f06e1/src%2Fbootstrap%2Fbuilder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/981afa52f6e3fa61074a5e295c782cd0a84f06e1/src%2Fbootstrap%2Fbuilder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fbuilder.rs?ref=981afa52f6e3fa61074a5e295c782cd0a84f06e1", "patch": "@@ -156,9 +156,9 @@ impl<'a> Builder<'a> {\n                 tool::Compiletest, tool::RemoteTestServer, tool::RemoteTestClient,\n                 tool::RustInstaller, tool::Cargo, tool::Rls),\n             Kind::Test => check!(builder, paths, check::Tidy, check::Bootstrap, check::Compiletest,\n-                check::Krate, check::KrateLibrustc, check::Linkcheck, check::Cargotest,\n+                check::Crate, check::CrateLibrustc, check::Linkcheck, check::Cargotest,\n                 check::Cargo, check::Docs, check::ErrorIndex, check::Distcheck),\n-            Kind::Bench => check!(builder, paths, check::Krate, check::KrateLibrustc),\n+            Kind::Bench => check!(builder, paths, check::Crate, check::CrateLibrustc),\n             Kind::Doc => builder.default_doc(Some(paths)),\n             Kind::Dist => check!(builder, paths, dist::Docs, dist::Mingw, dist::Rustc,\n                 dist::DebuggerScripts, dist::Std, dist::Analysis, dist::Src,"}, {"sha": "6c41a76e70f60846930e5613d8d106997bb61693", "filename": "src/bootstrap/check.rs", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/981afa52f6e3fa61074a5e295c782cd0a84f06e1/src%2Fbootstrap%2Fcheck.rs", "raw_url": "https://github.com/rust-lang/rust/raw/981afa52f6e3fa61074a5e295c782cd0a84f06e1/src%2Fbootstrap%2Fcheck.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fcheck.rs?ref=981afa52f6e3fa61074a5e295c782cd0a84f06e1", "patch": "@@ -961,14 +961,14 @@ fn markdown_test(builder: &Builder, compiler: Compiler, markdown: &Path) {\n //         .run(move |s| check::krate(build, &s.compiler(), s.target,\n //                                    Mode::Librustc, TestKind::Test, None));\n #[derive(Debug, Copy, Clone, PartialEq, Eq, Hash)]\n-pub struct KrateLibrustc {\n+pub struct CrateLibrustc {\n     compiler: Compiler,\n     target: Interned<String>,\n     test_kind: TestKind,\n     krate: Option<Interned<String>>,\n }\n \n-impl Step for KrateLibrustc {\n+impl Step for CrateLibrustc {\n     type Output = ();\n     const DEFAULT: bool = true;\n     const ONLY_HOSTS: bool = true;\n@@ -993,10 +993,10 @@ impl Step for KrateLibrustc {\n             } else if builder.kind == Kind::Bench {\n                 TestKind::Bench\n             } else {\n-                panic!(\"unexpected builder.kind in Krate: {:?}\", builder.kind);\n+                panic!(\"unexpected builder.kind in crate: {:?}\", builder.kind);\n             };\n \n-            builder.ensure(KrateLibrustc {\n+            builder.ensure(CrateLibrustc {\n                 compiler,\n                 target,\n                 test_kind: test_kind,\n@@ -1017,7 +1017,7 @@ impl Step for KrateLibrustc {\n \n \n     fn run(self, builder: &Builder) {\n-        builder.ensure(Krate {\n+        builder.ensure(Crate {\n             compiler: self.compiler,\n             target: self.target,\n             mode: Mode::Librustc,\n@@ -1075,15 +1075,15 @@ impl Step for KrateLibrustc {\n //                                    Mode::Libtest, TestKind::Test, None));\n \n #[derive(Debug, Copy, Clone, PartialEq, Eq, Hash)]\n-pub struct Krate {\n+pub struct Crate {\n     compiler: Compiler,\n     target: Interned<String>,\n     mode: Mode,\n     test_kind: TestKind,\n     krate: Option<Interned<String>>,\n }\n \n-impl Step for Krate {\n+impl Step for Crate {\n     type Output = ();\n     const DEFAULT: bool = true;\n \n@@ -1110,10 +1110,10 @@ impl Step for Krate {\n             } else if builder.kind == Kind::Bench {\n                 TestKind::Bench\n             } else {\n-                panic!(\"unexpected builder.kind in Krate: {:?}\", builder.kind);\n+                panic!(\"unexpected builder.kind in crate: {:?}\", builder.kind);\n             };\n \n-            builder.ensure(Krate {\n+            builder.ensure(Crate {\n                 compiler, target,\n                 mode: mode,\n                 test_kind: test_kind,"}]}