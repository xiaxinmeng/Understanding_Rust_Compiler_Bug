{"sha": "456ebd30d5b5f72d1ff75b6bd7a86612fc28017b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ1NmViZDMwZDViNWY3MmQxZmY3NWI2YmQ3YTg2NjEyZmMyODAxN2I=", "commit": {"author": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2021-07-19T09:37:42Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-07-19T09:37:42Z"}, "message": "Rollup merge of #87210 - notriddle:notriddle/rustdoc-sidebar-headers, r=GuillaumeGomez\n\nRustdoc accessibility: make the sidebar headers actual headers\n\nPart of #87059\n\nPreview it at: https://notriddle.com/notriddle-rustdoc-test/rustdoc-sidebar-header/std/index.html", "tree": {"sha": "728fcf19ec038b6aee4ab84792da85e7915612ce", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/728fcf19ec038b6aee4ab84792da85e7915612ce"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/456ebd30d5b5f72d1ff75b6bd7a86612fc28017b", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJg9UfnCRBK7hj4Ov3rIwAAbJEIAAFw8Otr/OQ1w1V0QPc6uYi2\nNpdE/q8H04HxLAKwqQ+2jphq9TNC6yU7bwUtJ4EC6c5yenPKSPEJvAeMNaahyUZ2\naKJn//ypcUnb/DbOI8nQ4+99sPR4jkT0G8oRQW29R4t+W50ToXz560SkmqFSe5Hf\n9s/TwqaRA1J5lDPAvEbFI9v9Bay192CAkglH2lJ9lkxSHonnEE8NgSEYalyB/zan\nxMpGJADxsHkhstXrvhenct8GhZq5vNe3gtoNqAAk75GhEOWrx7hAd67szKhQnydn\nIbZMKYG9wgsd3ANLjs8eRCtj3vQgPYFXdzogmdraLXQ1BcaRCILSO6/XBXGNQB8=\n=e6Q9\n-----END PGP SIGNATURE-----\n", "payload": "tree 728fcf19ec038b6aee4ab84792da85e7915612ce\nparent 0fce468fe80ef818587d3fd2b4702a7d99f59cc4\nparent 1941764607cf1c2f85d1301496d5e49eb3e5356a\nauthor Guillaume Gomez <guillaume1.gomez@gmail.com> 1626687462 +0200\ncommitter GitHub <noreply@github.com> 1626687462 +0200\n\nRollup merge of #87210 - notriddle:notriddle/rustdoc-sidebar-headers, r=GuillaumeGomez\n\nRustdoc accessibility: make the sidebar headers actual headers\n\nPart of #87059\n\nPreview it at: https://notriddle.com/notriddle-rustdoc-test/rustdoc-sidebar-header/std/index.html\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/456ebd30d5b5f72d1ff75b6bd7a86612fc28017b", "html_url": "https://github.com/rust-lang/rust/commit/456ebd30d5b5f72d1ff75b6bd7a86612fc28017b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/456ebd30d5b5f72d1ff75b6bd7a86612fc28017b/comments", "author": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0fce468fe80ef818587d3fd2b4702a7d99f59cc4", "url": "https://api.github.com/repos/rust-lang/rust/commits/0fce468fe80ef818587d3fd2b4702a7d99f59cc4", "html_url": "https://github.com/rust-lang/rust/commit/0fce468fe80ef818587d3fd2b4702a7d99f59cc4"}, {"sha": "1941764607cf1c2f85d1301496d5e49eb3e5356a", "url": "https://api.github.com/repos/rust-lang/rust/commits/1941764607cf1c2f85d1301496d5e49eb3e5356a", "html_url": "https://github.com/rust-lang/rust/commit/1941764607cf1c2f85d1301496d5e49eb3e5356a"}], "stats": {"total": 86, "additions": 45, "deletions": 41}, "files": [{"sha": "b6c3220901f06ad4289f50311357ebbf525084dc", "filename": "src/librustdoc/html/render/context.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/456ebd30d5b5f72d1ff75b6bd7a86612fc28017b/src%2Flibrustdoc%2Fhtml%2Frender%2Fcontext.rs", "raw_url": "https://github.com/rust-lang/rust/raw/456ebd30d5b5f72d1ff75b6bd7a86612fc28017b/src%2Flibrustdoc%2Fhtml%2Frender%2Fcontext.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Frender%2Fcontext.rs?ref=456ebd30d5b5f72d1ff75b6bd7a86612fc28017b", "patch": "@@ -539,7 +539,7 @@ impl<'tcx> FormatRenderer<'tcx> for Context<'tcx> {\n         };\n         let sidebar = if let Some(ref version) = self.cache.crate_version {\n             format!(\n-                \"<p class=\\\"location\\\">Crate {}</p>\\\n+                \"<h2 class=\\\"location\\\">Crate {}</h2>\\\n                      <div class=\\\"block version\\\">\\\n                          <p>Version {}</p>\\\n                      </div>\\\n@@ -567,7 +567,7 @@ impl<'tcx> FormatRenderer<'tcx> for Context<'tcx> {\n         page.root_path = \"./\";\n \n         let mut style_files = self.shared.style_files.clone();\n-        let sidebar = \"<p class=\\\"location\\\">Settings</p><div class=\\\"sidebar-elems\\\"></div>\";\n+        let sidebar = \"<h2 class=\\\"location\\\">Settings</h2><div class=\\\"sidebar-elems\\\"></div>\";\n         style_files.push(StylePath { path: PathBuf::from(\"settings.css\"), disabled: false });\n         let v = layout::render(\n             &self.shared.templates,"}, {"sha": "68c59612ccc448d58c4c508ada7f1e675e3c8da4", "filename": "src/librustdoc/html/render/mod.rs", "status": "modified", "additions": 27, "deletions": 27, "changes": 54, "blob_url": "https://github.com/rust-lang/rust/blob/456ebd30d5b5f72d1ff75b6bd7a86612fc28017b/src%2Flibrustdoc%2Fhtml%2Frender%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/456ebd30d5b5f72d1ff75b6bd7a86612fc28017b/src%2Flibrustdoc%2Fhtml%2Frender%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Frender%2Fmod.rs?ref=456ebd30d5b5f72d1ff75b6bd7a86612fc28017b", "patch": "@@ -1654,7 +1654,7 @@ fn print_sidebar(cx: &Context<'_>, it: &clean::Item, buffer: &mut Buffer) {\n     {\n         write!(\n             buffer,\n-            \"<p class=\\\"location\\\">{}{}</p>\",\n+            \"<h2 class=\\\"location\\\">{}{}</h2>\",\n             match *it.kind {\n                 clean::StructItem(..) => \"Struct \",\n                 clean::TraitItem(..) => \"Trait \",\n@@ -1718,7 +1718,7 @@ fn print_sidebar(cx: &Context<'_>, it: &clean::Item, buffer: &mut Buffer) {\n     // to navigate the documentation (though slightly inefficiently).\n \n     if !it.is_mod() {\n-        buffer.write_str(\"<p class=\\\"location\\\">Other items in<br>\");\n+        buffer.write_str(\"<h2 class=\\\"location\\\">Other items in<br>\");\n         for (i, name) in cx.current.iter().take(parentlen).enumerate() {\n             if i > 0 {\n                 buffer.write_str(\"::<wbr>\");\n@@ -1730,7 +1730,7 @@ fn print_sidebar(cx: &Context<'_>, it: &clean::Item, buffer: &mut Buffer) {\n                 *name\n             );\n         }\n-        buffer.write_str(\"</p>\");\n+        buffer.write_str(\"</h2>\");\n     }\n \n     // Sidebar refers to the enclosing module, not this module.\n@@ -1841,7 +1841,7 @@ fn sidebar_assoc_items(cx: &Context<'_>, out: &mut Buffer, it: &clean::Item) {\n                 ret.sort();\n \n                 out.push_str(\n-                    \"<a class=\\\"sidebar-title\\\" href=\\\"#implementations\\\">Methods</a>\\\n+                    \"<h3 class=\\\"sidebar-title\\\"><a href=\\\"#implementations\\\">Methods</a></h3>\\\n                      <div class=\\\"sidebar-links\\\">\",\n                 );\n                 for line in ret {\n@@ -1906,24 +1906,24 @@ fn sidebar_assoc_items(cx: &Context<'_>, out: &mut Buffer, it: &clean::Item) {\n \n             if !concrete_format.is_empty() {\n                 out.push_str(\n-                    \"<a class=\\\"sidebar-title\\\" href=\\\"#trait-implementations\\\">\\\n-                        Trait Implementations</a>\",\n+                    \"<h3 class=\\\"sidebar-title\\\"><a href=\\\"#trait-implementations\\\">\\\n+                        Trait Implementations</a></h3>\",\n                 );\n                 write_sidebar_links(out, concrete_format);\n             }\n \n             if !synthetic_format.is_empty() {\n                 out.push_str(\n-                    \"<a class=\\\"sidebar-title\\\" href=\\\"#synthetic-implementations\\\">\\\n-                        Auto Trait Implementations</a>\",\n+                    \"<h3 class=\\\"sidebar-title\\\"><a href=\\\"#synthetic-implementations\\\">\\\n+                        Auto Trait Implementations</a></h3>\",\n                 );\n                 write_sidebar_links(out, synthetic_format);\n             }\n \n             if !blanket_format.is_empty() {\n                 out.push_str(\n-                    \"<a class=\\\"sidebar-title\\\" href=\\\"#blanket-implementations\\\">\\\n-                        Blanket Implementations</a>\",\n+                    \"<h3 class=\\\"sidebar-title\\\"><a href=\\\"#blanket-implementations\\\">\\\n+                        Blanket Implementations</a></h3>\",\n                 );\n                 write_sidebar_links(out, blanket_format);\n             }\n@@ -1975,7 +1975,7 @@ fn sidebar_deref_methods(cx: &Context<'_>, out: &mut Buffer, impl_: &Impl, v: &V\n             if !ret.is_empty() {\n                 write!(\n                     out,\n-                    \"<a class=\\\"sidebar-title\\\" href=\\\"#deref-methods\\\">Methods from {}&lt;Target={}&gt;</a>\",\n+                    \"<h3 class=\\\"sidebar-title\\\"><a href=\\\"#deref-methods\\\">Methods from {}&lt;Target={}&gt;</a></h3>\",\n                     Escape(&format!(\"{:#}\", impl_.inner_impl().trait_.as_ref().unwrap().print(cx))),\n                     Escape(&format!(\"{:#}\", real_target.print(cx))),\n                 );\n@@ -1998,7 +1998,7 @@ fn sidebar_struct(cx: &Context<'_>, buf: &mut Buffer, it: &clean::Item, s: &clea\n     if !fields.is_empty() {\n         if let CtorKind::Fictive = s.struct_type {\n             sidebar.push_str(\n-                \"<a class=\\\"sidebar-title\\\" href=\\\"#fields\\\">Fields</a>\\\n+                \"<h3 class=\\\"sidebar-title\\\"><a href=\\\"#fields\\\">Fields</a></h3>\\\n                 <div class=\\\"sidebar-links\\\">\",\n             );\n \n@@ -2075,8 +2075,8 @@ fn sidebar_trait(cx: &Context<'_>, buf: &mut Buffer, it: &clean::Item, t: &clean\n     print_sidebar_section(\n         buf,\n         &t.items,\n-        \"<a class=\\\"sidebar-title\\\" href=\\\"#associated-types\\\">\\\n-            Associated Types</a><div class=\\\"sidebar-links\\\">\",\n+        \"<h3 class=\\\"sidebar-title\\\"><a href=\\\"#associated-types\\\">\\\n+            Associated Types</a></h3><div class=\\\"sidebar-links\\\">\",\n         |m| m.is_associated_type(),\n         |out, sym| write!(out, \"<a href=\\\"#associatedtype.{0}\\\">{0}</a>\", sym),\n         \"</div>\",\n@@ -2085,8 +2085,8 @@ fn sidebar_trait(cx: &Context<'_>, buf: &mut Buffer, it: &clean::Item, t: &clean\n     print_sidebar_section(\n         buf,\n         &t.items,\n-        \"<a class=\\\"sidebar-title\\\" href=\\\"#associated-const\\\">\\\n-            Associated Constants</a><div class=\\\"sidebar-links\\\">\",\n+        \"<h3 class=\\\"sidebar-title\\\"><a href=\\\"#associated-const\\\">\\\n+            Associated Constants</a></h3><div class=\\\"sidebar-links\\\">\",\n         |m| m.is_associated_const(),\n         |out, sym| write!(out, \"<a href=\\\"#associatedconstant.{0}\\\">{0}</a>\", sym),\n         \"</div>\",\n@@ -2095,8 +2095,8 @@ fn sidebar_trait(cx: &Context<'_>, buf: &mut Buffer, it: &clean::Item, t: &clean\n     print_sidebar_section(\n         buf,\n         &t.items,\n-        \"<a class=\\\"sidebar-title\\\" href=\\\"#required-methods\\\">\\\n-            Required Methods</a><div class=\\\"sidebar-links\\\">\",\n+        \"<h3 class=\\\"sidebar-title\\\"><a href=\\\"#required-methods\\\">\\\n+            Required Methods</a></h3><div class=\\\"sidebar-links\\\">\",\n         |m| m.is_ty_method(),\n         |out, sym| write!(out, \"<a href=\\\"#tymethod.{0}\\\">{0}</a>\", sym),\n         \"</div>\",\n@@ -2105,8 +2105,8 @@ fn sidebar_trait(cx: &Context<'_>, buf: &mut Buffer, it: &clean::Item, t: &clean\n     print_sidebar_section(\n         buf,\n         &t.items,\n-        \"<a class=\\\"sidebar-title\\\" href=\\\"#provided-methods\\\">\\\n-            Provided Methods</a><div class=\\\"sidebar-links\\\">\",\n+        \"<h3 class=\\\"sidebar-title\\\"><a href=\\\"#provided-methods\\\">\\\n+            Provided Methods</a></h3><div class=\\\"sidebar-links\\\">\",\n         |m| m.is_method(),\n         |out, sym| write!(out, \"<a href=\\\"#method.{0}\\\">{0}</a>\", sym),\n         \"</div>\",\n@@ -2128,8 +2128,8 @@ fn sidebar_trait(cx: &Context<'_>, buf: &mut Buffer, it: &clean::Item, t: &clean\n         if !res.is_empty() {\n             res.sort();\n             buf.push_str(\n-                \"<a class=\\\"sidebar-title\\\" href=\\\"#foreign-impls\\\">\\\n-                    Implementations on Foreign Types</a>\\\n+                \"<h3 class=\\\"sidebar-title\\\"><a href=\\\"#foreign-impls\\\">\\\n+                    Implementations on Foreign Types</a></h3>\\\n                  <div class=\\\"sidebar-links\\\">\",\n             );\n             for (name, id) in res.into_iter() {\n@@ -2141,11 +2141,11 @@ fn sidebar_trait(cx: &Context<'_>, buf: &mut Buffer, it: &clean::Item, t: &clean\n \n     sidebar_assoc_items(cx, buf, it);\n \n-    buf.push_str(\"<a class=\\\"sidebar-title\\\" href=\\\"#implementors\\\">Implementors</a>\");\n+    buf.push_str(\"<h3 class=\\\"sidebar-title\\\"><a href=\\\"#implementors\\\">Implementors</a></h3>\");\n     if t.is_auto {\n         buf.push_str(\n-            \"<a class=\\\"sidebar-title\\\" \\\n-                href=\\\"#synthetic-implementors\\\">Auto Implementors</a>\",\n+            \"<h3 class=\\\"sidebar-title\\\"><a \\\n+                href=\\\"#synthetic-implementors\\\">Auto Implementors</a></h3>\",\n         );\n     }\n \n@@ -2188,7 +2188,7 @@ fn sidebar_union(cx: &Context<'_>, buf: &mut Buffer, it: &clean::Item, u: &clean\n \n     if !fields.is_empty() {\n         sidebar.push_str(\n-            \"<a class=\\\"sidebar-title\\\" href=\\\"#fields\\\">Fields</a>\\\n+            \"<h3 class=\\\"sidebar-title\\\"><a href=\\\"#fields\\\">Fields</a></h3>\\\n             <div class=\\\"sidebar-links\\\">\",\n         );\n \n@@ -2220,7 +2220,7 @@ fn sidebar_enum(cx: &Context<'_>, buf: &mut Buffer, it: &clean::Item, e: &clean:\n     if !variants.is_empty() {\n         variants.sort_unstable();\n         sidebar.push_str(&format!(\n-            \"<a class=\\\"sidebar-title\\\" href=\\\"#variants\\\">Variants</a>\\\n+            \"<h3 class=\\\"sidebar-title\\\"><a href=\\\"#variants\\\">Variants</a></h3>\\\n              <div class=\\\"sidebar-links\\\">{}</div>\",\n             variants.join(\"\"),\n         ));"}, {"sha": "a7ffd8a9aea1407d738ff1ad462419f2078c70c7", "filename": "src/librustdoc/html/static/css/rustdoc.css", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/456ebd30d5b5f72d1ff75b6bd7a86612fc28017b/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fcss%2Frustdoc.css", "raw_url": "https://github.com/rust-lang/rust/raw/456ebd30d5b5f72d1ff75b6bd7a86612fc28017b/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fcss%2Frustdoc.css", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fcss%2Frustdoc.css?ref=456ebd30d5b5f72d1ff75b6bd7a86612fc28017b", "patch": "@@ -342,6 +342,8 @@ nav.sub {\n \tmargin: 30px 10px 20px 10px;\n \ttext-align: center;\n \tword-wrap: break-word;\n+\tfont-weight: inherit;\n+\tpadding: 0;\n }\n \n .sidebar .version {\n@@ -394,6 +396,8 @@ nav.sub {\n \ttext-align: center;\n \tfont-size: 17px;\n \tmargin-bottom: 5px;\n+\tfont-weight: inherit;\n+\tpadding: 0;\n }\n \n .sidebar-links {"}, {"sha": "7138f91667573bcda4ae8c425139a603cfb6af70", "filename": "src/test/rustdoc-gui/sidebar-mobile.goml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/456ebd30d5b5f72d1ff75b6bd7a86612fc28017b/src%2Ftest%2Frustdoc-gui%2Fsidebar-mobile.goml", "raw_url": "https://github.com/rust-lang/rust/raw/456ebd30d5b5f72d1ff75b6bd7a86612fc28017b/src%2Ftest%2Frustdoc-gui%2Fsidebar-mobile.goml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-gui%2Fsidebar-mobile.goml?ref=456ebd30d5b5f72d1ff75b6bd7a86612fc28017b", "patch": "@@ -13,7 +13,7 @@ click: \".sidebar-menu\"\n assert-css: (\".sidebar-elems\", {\"display\": \"block\", \"left\": \"-246px\"})\n // Force the sidebar open by focusing a link inside it.\n // This makes it easier for keyboard users to get to it.\n-focus: \".sidebar-title\"\n+focus: \".sidebar-title a\"\n assert-css: (\".sidebar-elems\", {\"display\": \"block\", \"left\": \"0px\"})\n // When we tab out of the sidebar, close it.\n focus: \".search-input\""}, {"sha": "d42ff384b29b83863eb9b9aa81600bb74930d634", "filename": "src/test/rustdoc/deref-typedef.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/456ebd30d5b5f72d1ff75b6bd7a86612fc28017b/src%2Ftest%2Frustdoc%2Fderef-typedef.rs", "raw_url": "https://github.com/rust-lang/rust/raw/456ebd30d5b5f72d1ff75b6bd7a86612fc28017b/src%2Ftest%2Frustdoc%2Fderef-typedef.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fderef-typedef.rs?ref=456ebd30d5b5f72d1ff75b6bd7a86612fc28017b", "patch": "@@ -6,7 +6,7 @@\n // @has '-' '//*[@class=\"impl-items\"]//*[@id=\"method.foo_b\"]' 'pub fn foo_b(&self)'\n // @has '-' '//*[@class=\"impl-items\"]//*[@id=\"method.foo_c\"]' 'pub fn foo_c(&self)'\n // @has '-' '//*[@class=\"impl-items\"]//*[@id=\"method.foo_j\"]' 'pub fn foo_j(&self)'\n-// @has '-' '//*[@class=\"sidebar-title\"][@href=\"#deref-methods\"]' 'Methods from Deref<Target=FooJ>'\n+// @has '-' '//*[@class=\"sidebar-title\"]/a[@href=\"#deref-methods\"]' 'Methods from Deref<Target=FooJ>'\n // @has '-' '//*[@class=\"sidebar-links\"]/a[@href=\"#method.foo_a\"]' 'foo_a'\n // @has '-' '//*[@class=\"sidebar-links\"]/a[@href=\"#method.foo_b\"]' 'foo_b'\n // @has '-' '//*[@class=\"sidebar-links\"]/a[@href=\"#method.foo_c\"]' 'foo_c'"}, {"sha": "d63ab346045eec60f1c8d7849037ac33de9fbd98", "filename": "src/test/rustdoc/negative-impl-sidebar.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/456ebd30d5b5f72d1ff75b6bd7a86612fc28017b/src%2Ftest%2Frustdoc%2Fnegative-impl-sidebar.rs", "raw_url": "https://github.com/rust-lang/rust/raw/456ebd30d5b5f72d1ff75b6bd7a86612fc28017b/src%2Ftest%2Frustdoc%2Fnegative-impl-sidebar.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fnegative-impl-sidebar.rs?ref=456ebd30d5b5f72d1ff75b6bd7a86612fc28017b", "patch": "@@ -4,6 +4,6 @@\n pub struct Foo;\n \n // @has foo/struct.Foo.html\n-// @has - '//*[@class=\"sidebar-title\"][@href=\"#trait-implementations\"]' 'Trait Implementations'\n+// @has - '//*[@class=\"sidebar-title\"]/a[@href=\"#trait-implementations\"]' 'Trait Implementations'\n // @has - '//*[@class=\"sidebar-links\"]/a' '!Sync'\n impl !Sync for Foo {}"}, {"sha": "5da660b4df304a5ab3fa4b3b40346c5175889623", "filename": "src/test/rustdoc/sidebar-items.rs", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/456ebd30d5b5f72d1ff75b6bd7a86612fc28017b/src%2Ftest%2Frustdoc%2Fsidebar-items.rs", "raw_url": "https://github.com/rust-lang/rust/raw/456ebd30d5b5f72d1ff75b6bd7a86612fc28017b/src%2Ftest%2Frustdoc%2Fsidebar-items.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fsidebar-items.rs?ref=456ebd30d5b5f72d1ff75b6bd7a86612fc28017b", "patch": "@@ -1,13 +1,13 @@\n #![crate_name = \"foo\"]\n \n // @has foo/trait.Foo.html\n-// @has - '//*[@class=\"sidebar-title\"][@href=\"#required-methods\"]' 'Required Methods'\n+// @has - '//*[@class=\"sidebar-title\"]/a[@href=\"#required-methods\"]' 'Required Methods'\n // @has - '//*[@class=\"sidebar-links\"]/a' 'bar'\n-// @has - '//*[@class=\"sidebar-title\"][@href=\"#provided-methods\"]' 'Provided Methods'\n+// @has - '//*[@class=\"sidebar-title\"]/a[@href=\"#provided-methods\"]' 'Provided Methods'\n // @has - '//*[@class=\"sidebar-links\"]/a' 'foo'\n-// @has - '//*[@class=\"sidebar-title\"][@href=\"#associated-const\"]' 'Associated Constants'\n+// @has - '//*[@class=\"sidebar-title\"]/a[@href=\"#associated-const\"]' 'Associated Constants'\n // @has - '//*[@class=\"sidebar-links\"]/a' 'BAR'\n-// @has - '//*[@class=\"sidebar-title\"][@href=\"#associated-types\"]' 'Associated Types'\n+// @has - '//*[@class=\"sidebar-title\"]/a[@href=\"#associated-types\"]' 'Associated Types'\n // @has - '//*[@class=\"sidebar-links\"]/a' 'Output'\n pub trait Foo {\n     const BAR: u32 = 0;\n@@ -18,7 +18,7 @@ pub trait Foo {\n }\n \n // @has foo/struct.Bar.html\n-// @has - '//*[@class=\"sidebar-title\"][@href=\"#fields\"]' 'Fields'\n+// @has - '//*[@class=\"sidebar-title\"]/a[@href=\"#fields\"]' 'Fields'\n // @has - '//*[@class=\"sidebar-links\"]/a[@href=\"#structfield.f\"]' 'f'\n // @has - '//*[@class=\"sidebar-links\"]/a[@href=\"#structfield.u\"]' 'u'\n // @!has - '//*[@class=\"sidebar-links\"]/a' 'waza'\n@@ -29,7 +29,7 @@ pub struct Bar {\n }\n \n // @has foo/enum.En.html\n-// @has - '//*[@class=\"sidebar-title\"][@href=\"#variants\"]' 'Variants'\n+// @has - '//*[@class=\"sidebar-title\"]/a[@href=\"#variants\"]' 'Variants'\n // @has - '//*[@class=\"sidebar-links\"]/a' 'foo'\n // @has - '//*[@class=\"sidebar-links\"]/a' 'bar'\n pub enum En {\n@@ -38,7 +38,7 @@ pub enum En {\n }\n \n // @has foo/union.MyUnion.html\n-// @has - '//*[@class=\"sidebar-title\"][@href=\"#fields\"]' 'Fields'\n+// @has - '//*[@class=\"sidebar-title\"]/a[@href=\"#fields\"]' 'Fields'\n // @has - '//*[@class=\"sidebar-links\"]/a[@href=\"#structfield.f1\"]' 'f1'\n // @has - '//*[@class=\"sidebar-links\"]/a[@href=\"#structfield.f2\"]' 'f2'\n // @!has - '//*[@class=\"sidebar-links\"]/a' 'waza'"}, {"sha": "e73c5b4f640cf3d4eb3baa695de1cd990937e2c3", "filename": "src/test/rustdoc/sidebar-links-to-foreign-impl.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/456ebd30d5b5f72d1ff75b6bd7a86612fc28017b/src%2Ftest%2Frustdoc%2Fsidebar-links-to-foreign-impl.rs", "raw_url": "https://github.com/rust-lang/rust/raw/456ebd30d5b5f72d1ff75b6bd7a86612fc28017b/src%2Ftest%2Frustdoc%2Fsidebar-links-to-foreign-impl.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fsidebar-links-to-foreign-impl.rs?ref=456ebd30d5b5f72d1ff75b6bd7a86612fc28017b", "patch": "@@ -3,7 +3,7 @@\n #![crate_name = \"foo\"]\n \n // @has foo/trait.Foo.html\n-// @has - '//*[@class=\"sidebar-title\"][@href=\"#foreign-impls\"]' 'Implementations on Foreign Types'\n+// @has - '//*[@class=\"sidebar-title\"]/a[@href=\"#foreign-impls\"]' 'Implementations on Foreign Types'\n // @has - '//h2[@id=\"foreign-impls\"]' 'Implementations on Foreign Types'\n // @has - '//*[@class=\"sidebar-links\"]/a[@href=\"#impl-Foo-for-u32\"]' 'u32'\n // @has - '//div[@id=\"impl-Foo-for-u32\"]//code' 'impl Foo for u32'"}, {"sha": "479cd91a9dc6043e8971ccf755aeb39634f210c5", "filename": "src/test/rustdoc/typedef.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/456ebd30d5b5f72d1ff75b6bd7a86612fc28017b/src%2Ftest%2Frustdoc%2Ftypedef.rs", "raw_url": "https://github.com/rust-lang/rust/raw/456ebd30d5b5f72d1ff75b6bd7a86612fc28017b/src%2Ftest%2Frustdoc%2Ftypedef.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Ftypedef.rs?ref=456ebd30d5b5f72d1ff75b6bd7a86612fc28017b", "patch": "@@ -12,7 +12,7 @@ impl MyStruct {\n // @has - '//*[@class=\"impl has-srclink\"]//code' 'impl MyAlias'\n // @has - '//*[@class=\"impl has-srclink\"]//code' 'impl MyTrait for MyAlias'\n // @has - 'Alias docstring'\n-// @has - '//*[@class=\"sidebar\"]//p[@class=\"location\"]' 'Type Definition MyAlias'\n+// @has - '//*[@class=\"sidebar\"]//*[@class=\"location\"]' 'Type Definition MyAlias'\n // @has - '//*[@class=\"sidebar\"]//a[@href=\"#implementations\"]' 'Methods'\n // @has - '//*[@class=\"sidebar\"]//a[@href=\"#trait-implementations\"]' 'Trait Implementations'\n /// Alias docstring"}]}