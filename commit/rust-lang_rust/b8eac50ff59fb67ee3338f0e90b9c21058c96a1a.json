{"sha": "b8eac50ff59fb67ee3338f0e90b9c21058c96a1a", "node_id": "MDY6Q29tbWl0NzI0NzEyOmI4ZWFjNTBmZjU5ZmI2N2VlMzMzOGYwZTkwYjljMjEwNThjOTZhMWE=", "commit": {"author": {"name": "Yuki Okushi", "email": "huyuumi.dev@gmail.com", "date": "2021-01-28T06:09:13Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-01-28T06:09:13Z"}, "message": "Rollup merge of #81416 - estebank:suggestion-span-tweak, r=petrochenkov\n\nTweak suggestion for missing field in patterns\n\nAccount for parser recovered struct and tuple patterns to avoid invalid\nsuggestion.\n\nFollow up to #81103.", "tree": {"sha": "57eee0e4e8eeb476a052c80078395c2851fde3d7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/57eee0e4e8eeb476a052c80078395c2851fde3d7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b8eac50ff59fb67ee3338f0e90b9c21058c96a1a", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJgElUKCRBK7hj4Ov3rIwAAdHIIAAQ8yhqOs3OCORzWoCHZPlKB\nIsh0w/QHQ/4murbzmHJZq06AwSy4YM2BPfdU6/XLaKnUGGpPUfikmRE256vcO5H4\nq+gQVyVAYlTT0GWzQat/CGCtauaITaBylneZUy+ET4Q7Ou+3LbF4UiEZYRYxYpEn\n6f1z+62x+jFXSnNM/qoiIO2ST5iRApHlUYnFHgmR5y6V6lfTp4HC2XuepGl+L2eh\nPAB0JNajt3FNV82FioAEV5IQbWEmr9PXhRQku1NuucYq9sv9r2CCJip5OBLCcD7S\nhF8zJXteFMs76YHpXPQGYw7j7/QIeQx0CDFkP38rq+fV+E/7SxeDfd8+nlcrLOY=\n=U7MC\n-----END PGP SIGNATURE-----\n", "payload": "tree 57eee0e4e8eeb476a052c80078395c2851fde3d7\nparent 0b1870e7b98f6319a38750c41738c3ad35f01a27\nparent 0959f0f912c1029f0dfd3de431786433211a1f2d\nauthor Yuki Okushi <huyuumi.dev@gmail.com> 1611814153 +0900\ncommitter GitHub <noreply@github.com> 1611814153 +0900\n\nRollup merge of #81416 - estebank:suggestion-span-tweak, r=petrochenkov\n\nTweak suggestion for missing field in patterns\n\nAccount for parser recovered struct and tuple patterns to avoid invalid\nsuggestion.\n\nFollow up to #81103.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b8eac50ff59fb67ee3338f0e90b9c21058c96a1a", "html_url": "https://github.com/rust-lang/rust/commit/b8eac50ff59fb67ee3338f0e90b9c21058c96a1a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b8eac50ff59fb67ee3338f0e90b9c21058c96a1a/comments", "author": {"login": "JohnTitor", "id": 25030997, "node_id": "MDQ6VXNlcjI1MDMwOTk3", "avatar_url": "https://avatars.githubusercontent.com/u/25030997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JohnTitor", "html_url": "https://github.com/JohnTitor", "followers_url": "https://api.github.com/users/JohnTitor/followers", "following_url": "https://api.github.com/users/JohnTitor/following{/other_user}", "gists_url": "https://api.github.com/users/JohnTitor/gists{/gist_id}", "starred_url": "https://api.github.com/users/JohnTitor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JohnTitor/subscriptions", "organizations_url": "https://api.github.com/users/JohnTitor/orgs", "repos_url": "https://api.github.com/users/JohnTitor/repos", "events_url": "https://api.github.com/users/JohnTitor/events{/privacy}", "received_events_url": "https://api.github.com/users/JohnTitor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0b1870e7b98f6319a38750c41738c3ad35f01a27", "url": "https://api.github.com/repos/rust-lang/rust/commits/0b1870e7b98f6319a38750c41738c3ad35f01a27", "html_url": "https://github.com/rust-lang/rust/commit/0b1870e7b98f6319a38750c41738c3ad35f01a27"}, {"sha": "0959f0f912c1029f0dfd3de431786433211a1f2d", "url": "https://api.github.com/repos/rust-lang/rust/commits/0959f0f912c1029f0dfd3de431786433211a1f2d", "html_url": "https://github.com/rust-lang/rust/commit/0959f0f912c1029f0dfd3de431786433211a1f2d"}], "stats": {"total": 49, "additions": 19, "deletions": 30}, "files": [{"sha": "1c1f7f7886fcd95053ba9ceb5f174db06d30b51c", "filename": "compiler/rustc_typeck/src/check/pat.rs", "status": "modified", "additions": 7, "deletions": 18, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/b8eac50ff59fb67ee3338f0e90b9c21058c96a1a/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fpat.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b8eac50ff59fb67ee3338f0e90b9c21058c96a1a/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fpat.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fpat.rs?ref=b8eac50ff59fb67ee3338f0e90b9c21058c96a1a", "patch": "@@ -1525,24 +1525,13 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n                 _ => return err,\n             },\n             [.., field] => {\n-                // if last field has a trailing comma, use the comma\n-                // as the span to avoid trailing comma in ultimate\n-                // suggestion (Issue #78511)\n-                let tail = field.span.shrink_to_hi().until(pat.span.shrink_to_hi());\n-                let tail_through_comma = self.tcx.sess.source_map().span_through_char(tail, ',');\n-                let sp = if tail_through_comma == tail {\n-                    field.span.shrink_to_hi()\n-                } else {\n-                    tail_through_comma\n-                };\n-                (\n-                    match pat.kind {\n-                        PatKind::Struct(_, [_, ..], _) => \", \",\n-                        _ => \"\",\n-                    },\n-                    \"\",\n-                    sp,\n-                )\n+                // Account for last field having a trailing comma or parse recovery at the tail of\n+                // the pattern to avoid invalid suggestion (#78511).\n+                let tail = field.span.shrink_to_hi().with_hi(pat.span.hi());\n+                match &pat.kind {\n+                    PatKind::Struct(..) => (\", \", \" }\", tail),\n+                    _ => return err,\n+                }\n             }\n         };\n         err.span_suggestion("}, {"sha": "8a83e145ea2d024a943b692d4eabf29c620eac06", "filename": "src/test/ui/destructuring-assignment/struct_destructure_fail.stderr", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/b8eac50ff59fb67ee3338f0e90b9c21058c96a1a/src%2Ftest%2Fui%2Fdestructuring-assignment%2Fstruct_destructure_fail.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b8eac50ff59fb67ee3338f0e90b9c21058c96a1a/src%2Ftest%2Fui%2Fdestructuring-assignment%2Fstruct_destructure_fail.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fdestructuring-assignment%2Fstruct_destructure_fail.stderr?ref=b8eac50ff59fb67ee3338f0e90b9c21058c96a1a", "patch": "@@ -32,12 +32,12 @@ LL |     Struct { a, _ } = Struct { a: 1, b: 2 };\n    |\n help: include the missing field in the pattern\n    |\n-LL |     Struct { a, b _ } = Struct { a: 1, b: 2 };\n-   |               ^^^\n+LL |     Struct { a, b } = Struct { a: 1, b: 2 };\n+   |               ^^^^^\n help: if you don't care about this missing field, you can explicitly ignore it\n    |\n-LL |     Struct { a, .. _ } = Struct { a: 1, b: 2 };\n-   |               ^^^^\n+LL |     Struct { a, .. } = Struct { a: 1, b: 2 };\n+   |               ^^^^^^\n \n error: aborting due to 5 previous errors\n "}, {"sha": "a3dd6910be4a5209c2f3c39d44a4b0f9a93e32e6", "filename": "src/test/ui/error-codes/E0027.stderr", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/b8eac50ff59fb67ee3338f0e90b9c21058c96a1a/src%2Ftest%2Fui%2Ferror-codes%2FE0027.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b8eac50ff59fb67ee3338f0e90b9c21058c96a1a/src%2Ftest%2Fui%2Ferror-codes%2FE0027.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ferror-codes%2FE0027.stderr?ref=b8eac50ff59fb67ee3338f0e90b9c21058c96a1a", "patch": "@@ -7,11 +7,11 @@ LL |         Dog { age: x } => {}\n help: include the missing field in the pattern\n    |\n LL |         Dog { age: x, name } => {}\n-   |                     ^^^^^^\n+   |                     ^^^^^^^^\n help: if you don't care about this missing field, you can explicitly ignore it\n    |\n LL |         Dog { age: x, .. } => {}\n-   |                     ^^^^\n+   |                     ^^^^^^\n \n error[E0027]: pattern does not mention field `age`\n   --> $DIR/E0027.rs:15:9\n@@ -22,11 +22,11 @@ LL |         Dog { name: x, } => {}\n help: include the missing field in the pattern\n    |\n LL |         Dog { name: x, age } => {}\n-   |                      ^^^^^\n+   |                      ^^^^^^^\n help: if you don't care about this missing field, you can explicitly ignore it\n    |\n LL |         Dog { name: x, .. } => {}\n-   |                      ^^^^\n+   |                      ^^^^^^\n \n error[E0027]: pattern does not mention field `age`\n   --> $DIR/E0027.rs:19:9\n@@ -37,11 +37,11 @@ LL |         Dog { name: x  , } => {}\n help: include the missing field in the pattern\n    |\n LL |         Dog { name: x, age } => {}\n-   |                      ^^^^^\n+   |                      ^^^^^^^\n help: if you don't care about this missing field, you can explicitly ignore it\n    |\n LL |         Dog { name: x, .. } => {}\n-   |                      ^^^^\n+   |                      ^^^^^^\n \n error[E0027]: pattern does not mention fields `name`, `age`\n   --> $DIR/E0027.rs:22:9"}, {"sha": "c1a95636d34cb0040ca34d207cfe697d0380217f", "filename": "src/test/ui/structs/struct-pat-derived-error.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/b8eac50ff59fb67ee3338f0e90b9c21058c96a1a/src%2Ftest%2Fui%2Fstructs%2Fstruct-pat-derived-error.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b8eac50ff59fb67ee3338f0e90b9c21058c96a1a/src%2Ftest%2Fui%2Fstructs%2Fstruct-pat-derived-error.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fstructs%2Fstruct-pat-derived-error.stderr?ref=b8eac50ff59fb67ee3338f0e90b9c21058c96a1a", "patch": "@@ -19,11 +19,11 @@ LL |         let A { x, y } = self.d;\n help: include the missing fields in the pattern\n    |\n LL |         let A { x, y, b, c } = self.d;\n-   |                     ^^^^^^\n+   |                     ^^^^^^^^\n help: if you don't care about these missing fields, you can explicitly ignore them\n    |\n LL |         let A { x, y, .. } = self.d;\n-   |                     ^^^^\n+   |                     ^^^^^^\n \n error: aborting due to 3 previous errors\n "}]}