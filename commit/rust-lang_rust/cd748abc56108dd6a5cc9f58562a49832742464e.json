{"sha": "cd748abc56108dd6a5cc9f58562a49832742464e", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNkNzQ4YWJjNTYxMDhkZDZhNWNjOWY1ODU2MmE0OTgzMjc0MjQ2NGU=", "commit": {"author": {"name": "Dylan DPC", "email": "dylan.dpc@gmail.com", "date": "2020-04-18T23:04:53Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-04-18T23:04:53Z"}, "message": "Rollup merge of #71283 - Amanieu:zprofile, r=davidtwco\n\nMinor improvements to -Zprofile\n\n- `-Zprofile` is broken with codegen units because GCOV assumes that each source file corresponds to one object file. This PR makes `-Zprofile` automatically set codegen units to 1 and gives an error if `-Ccodegen-units=X` is specified on the command line (with `X != 1`).\n- The `profiler_builtins` crate is not suitable for `no_std` applications since it contains C code that depends on libc. In such cases a custom implementation of the LLVM gcov API (`llvm_gcov_init`, `llvm_gcda_*`) is needed. This PR adds `-Zno-profiler-runtime` flag which inhibits automatic injection of the `profiler_builtins` crate.\n\ncc @whitequark who implemented the original `-Zprofile` support", "tree": {"sha": "e3efba59b0487853294ed16ea60e54254733b3d1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e3efba59b0487853294ed16ea60e54254733b3d1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/cd748abc56108dd6a5cc9f58562a49832742464e", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJem4eVCRBK7hj4Ov3rIwAAdHIIAICS7hHyOY6+/fLXf8Ut8Djp\ngExzFOVi2EEBSjZwCfH60j1MO7BVsL5ElQlv7vjRlD9V/WT2kYinaFsSmwivcuJF\n7xhQ3re6hzJ7DEdL5a/Q3hIBJ4R5nM5qP7MfKiq5aPRMQ6YzK2ru9sboyNPq8wdB\nHSvpcTxeblCbq/thQwyQzr8RiX36luFjofpBF24xKT7WNYd6h+t7v6cd0LmSvlHT\nA7AvRnpozIqjkaSmHcCqwnkg3De4ehs59dMZogM0hS+ej+yd76LtGVF3OVOYOk+o\nIrItG5aVZs3hoAF5JelfL6d9izr7QqSwqUm5z9EMZIoaddVqKozhGNJe2Vd5sTk=\n=jyzy\n-----END PGP SIGNATURE-----\n", "payload": "tree e3efba59b0487853294ed16ea60e54254733b3d1\nparent 404e06785bfdf3dfeffb8d488c0825301fc62979\nparent 9f23b2d36bf31b89a107b83a37665af08f6c0fb3\nauthor Dylan DPC <dylan.dpc@gmail.com> 1587251093 +0200\ncommitter GitHub <noreply@github.com> 1587251093 +0200\n\nRollup merge of #71283 - Amanieu:zprofile, r=davidtwco\n\nMinor improvements to -Zprofile\n\n- `-Zprofile` is broken with codegen units because GCOV assumes that each source file corresponds to one object file. This PR makes `-Zprofile` automatically set codegen units to 1 and gives an error if `-Ccodegen-units=X` is specified on the command line (with `X != 1`).\n- The `profiler_builtins` crate is not suitable for `no_std` applications since it contains C code that depends on libc. In such cases a custom implementation of the LLVM gcov API (`llvm_gcov_init`, `llvm_gcda_*`) is needed. This PR adds `-Zno-profiler-runtime` flag which inhibits automatic injection of the `profiler_builtins` crate.\n\ncc @whitequark who implemented the original `-Zprofile` support\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/cd748abc56108dd6a5cc9f58562a49832742464e", "html_url": "https://github.com/rust-lang/rust/commit/cd748abc56108dd6a5cc9f58562a49832742464e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/cd748abc56108dd6a5cc9f58562a49832742464e/comments", "author": {"login": "Dylan-DPC", "id": 99973273, "node_id": "U_kgDOBfV4mQ", "avatar_url": "https://avatars.githubusercontent.com/u/99973273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dylan-DPC", "html_url": "https://github.com/Dylan-DPC", "followers_url": "https://api.github.com/users/Dylan-DPC/followers", "following_url": "https://api.github.com/users/Dylan-DPC/following{/other_user}", "gists_url": "https://api.github.com/users/Dylan-DPC/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dylan-DPC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dylan-DPC/subscriptions", "organizations_url": "https://api.github.com/users/Dylan-DPC/orgs", "repos_url": "https://api.github.com/users/Dylan-DPC/repos", "events_url": "https://api.github.com/users/Dylan-DPC/events{/privacy}", "received_events_url": "https://api.github.com/users/Dylan-DPC/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "404e06785bfdf3dfeffb8d488c0825301fc62979", "url": "https://api.github.com/repos/rust-lang/rust/commits/404e06785bfdf3dfeffb8d488c0825301fc62979", "html_url": "https://github.com/rust-lang/rust/commit/404e06785bfdf3dfeffb8d488c0825301fc62979"}, {"sha": "9f23b2d36bf31b89a107b83a37665af08f6c0fb3", "url": "https://api.github.com/repos/rust-lang/rust/commits/9f23b2d36bf31b89a107b83a37665af08f6c0fb3", "html_url": "https://github.com/rust-lang/rust/commit/9f23b2d36bf31b89a107b83a37665af08f6c0fb3"}], "stats": {"total": 18, "additions": 16, "deletions": 2}, "files": [{"sha": "fe8fbd50627d3c38b4eb31cb1788bf6f6cd5015e", "filename": "src/librustc_metadata/creader.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/cd748abc56108dd6a5cc9f58562a49832742464e/src%2Flibrustc_metadata%2Fcreader.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cd748abc56108dd6a5cc9f58562a49832742464e/src%2Flibrustc_metadata%2Fcreader.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_metadata%2Fcreader.rs?ref=cd748abc56108dd6a5cc9f58562a49832742464e", "patch": "@@ -686,7 +686,9 @@ impl<'a> CrateLoader<'a> {\n     }\n \n     fn inject_profiler_runtime(&mut self) {\n-        if self.sess.opts.debugging_opts.profile || self.sess.opts.cg.profile_generate.enabled() {\n+        if (self.sess.opts.debugging_opts.profile || self.sess.opts.cg.profile_generate.enabled())\n+            && !self.sess.opts.debugging_opts.no_profiler_runtime\n+        {\n             info!(\"loading profiler\");\n \n             let name = Symbol::intern(\"profiler_builtins\");"}, {"sha": "ba2a4d1d56f2395d6d05a87ca815d5c97ff1d483", "filename": "src/librustc_session/config.rs", "status": "modified", "additions": 11, "deletions": 1, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/cd748abc56108dd6a5cc9f58562a49832742464e/src%2Flibrustc_session%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cd748abc56108dd6a5cc9f58562a49832742464e/src%2Flibrustc_session%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_session%2Fconfig.rs?ref=cd748abc56108dd6a5cc9f58562a49832742464e", "patch": "@@ -1655,7 +1655,7 @@ pub fn build_session_options(matches: &getopts::Matches) -> Options {\n     let output_types = parse_output_types(&debugging_opts, matches, error_format);\n \n     let mut cg = build_codegen_options(matches, error_format);\n-    let (disable_thinlto, codegen_units) = should_override_cgus_and_disable_thinlto(\n+    let (disable_thinlto, mut codegen_units) = should_override_cgus_and_disable_thinlto(\n         &output_types,\n         matches,\n         error_format,\n@@ -1672,6 +1672,16 @@ pub fn build_session_options(matches: &getopts::Matches) -> Options {\n             \"can't instrument with gcov profiling when compiling incrementally\",\n         );\n     }\n+    if debugging_opts.profile {\n+        match codegen_units {\n+            Some(1) => {}\n+            None => codegen_units = Some(1),\n+            Some(_) => early_error(\n+                error_format,\n+                \"can't instrument with gcov profiling with multiple codegen units\",\n+            ),\n+        }\n+    }\n \n     if cg.profile_generate.enabled() && cg.profile_use.is_some() {\n         early_error("}, {"sha": "94e65093e71b23714928ca416729332725a9067b", "filename": "src/librustc_session/options.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/cd748abc56108dd6a5cc9f58562a49832742464e/src%2Flibrustc_session%2Foptions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cd748abc56108dd6a5cc9f58562a49832742464e/src%2Flibrustc_session%2Foptions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_session%2Foptions.rs?ref=cd748abc56108dd6a5cc9f58562a49832742464e", "patch": "@@ -890,6 +890,8 @@ options! {DebuggingOptions, DebuggingSetter, basic_debugging_options,\n         \"extra arguments to prepend to the linker invocation (space separated)\"),\n     profile: bool = (false, parse_bool, [TRACKED],\n                      \"insert profiling code\"),\n+    no_profiler_runtime: bool = (false, parse_bool, [TRACKED],\n+        \"don't automatically inject the profiler_builtins crate\"),\n     relro_level: Option<RelroLevel> = (None, parse_relro_level, [TRACKED],\n         \"choose which RELRO level to use\"),\n     nll_facts: bool = (false, parse_bool, [UNTRACKED],"}]}