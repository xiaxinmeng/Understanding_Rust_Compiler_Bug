{"sha": "78e0525366d0e2873797624a558fd026d8809cde", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc4ZTA1MjUzNjZkMGUyODczNzk3NjI0YTU1OGZkMDI2ZDg4MDljZGU=", "commit": {"author": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2019-07-28T08:24:57Z"}, "committer": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2019-07-29T09:03:55Z"}, "message": "[WIP] simd_shuffle support", "tree": {"sha": "5dd91543f53637803a3a8b385108342c7f30ce62", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5dd91543f53637803a3a8b385108342c7f30ce62"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/78e0525366d0e2873797624a558fd026d8809cde", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/78e0525366d0e2873797624a558fd026d8809cde", "html_url": "https://github.com/rust-lang/rust/commit/78e0525366d0e2873797624a558fd026d8809cde", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/78e0525366d0e2873797624a558fd026d8809cde/comments", "author": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1a2689117013d7137f207dc85da7df57df5e0af9", "url": "https://api.github.com/repos/rust-lang/rust/commits/1a2689117013d7137f207dc85da7df57df5e0af9", "html_url": "https://github.com/rust-lang/rust/commit/1a2689117013d7137f207dc85da7df57df5e0af9"}], "stats": {"total": 31, "additions": 30, "deletions": 1}, "files": [{"sha": "5c7f8b46f5ce63dae1da088696e8a43f89c490bc", "filename": "src/intrinsics.rs", "status": "modified", "additions": 22, "deletions": 1, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/78e0525366d0e2873797624a558fd026d8809cde/src%2Fintrinsics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/78e0525366d0e2873797624a558fd026d8809cde/src%2Fintrinsics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fintrinsics.rs?ref=78e0525366d0e2873797624a558fd026d8809cde", "patch": "@@ -121,6 +121,7 @@ fn lane_type_and_count<'tcx>(\n     layout: TyLayout<'tcx>,\n     intrinsic: &str,\n ) -> (TyLayout<'tcx>, usize) {\n+    assert!(layout.ty.is_simd());\n     let lane_count = match layout.fields {\n         layout::FieldPlacement::Array { stride: _, count } => usize::try_from(count).unwrap(),\n         _ => panic!(\"Non vector type {:?} passed to or returned from simd_* intrinsic {}\", layout.ty, intrinsic),\n@@ -805,6 +806,26 @@ pub fn codegen_intrinsic_call<'a, 'tcx: 'a>(\n             simd_cmp!(fx, intrinsic, UnsignedGreaterThanOrEqual|SignedGreaterThanOrEqual(x, y) -> ret);\n         };\n \n+        // simd_shuffle32<T, U>(x: T, y: T, idx: [u32; 32]) -> U\n+        _ if intrinsic.starts_with(\"simd_shuffle\"), (c x, c y, c idx) {\n+            let n: usize = intrinsic[\"simd_shuffle\".len()..].parse().unwrap();\n+\n+            assert_eq!(x.layout(), y.layout());\n+            let layout = x.layout();\n+\n+            let (lane_type, lane_count) = lane_type_and_count(fx, layout, intrinsic);\n+            let (ret_lane_type, ret_lane_count) = lane_type_and_count(fx, ret.layout(), intrinsic);\n+\n+            assert_eq!(lane_type, ret_lane_type);\n+            assert_eq!(n, ret_lane_count);\n+\n+            let total_len = lane_count * 2;\n+\n+            // TODO get shuffle indices\n+            fx.tcx.sess.warn(\"simd_shuffle* not yet implemented\");\n+            crate::trap::trap_unimplemented(fx, \"simd_shuffle* not yet implemented\");\n+        };\n+\n         simd_add, (c x, c y) {\n             simd_binop!(fx, intrinsic, iadd(x, y) -> ret);\n         };\n@@ -832,7 +853,7 @@ pub fn codegen_intrinsic_call<'a, 'tcx: 'a>(\n         simd_or, (c x, c y) {\n             simd_binop!(fx, intrinsic, bor(x, y) -> ret);\n         };\n-        simd_bxor, (c x, c y) {\n+        simd_xor, (c x, c y) {\n             simd_binop!(fx, intrinsic, bxor(x, y) -> ret);\n         };\n "}, {"sha": "765adafa10b9e422ee23daeacd0de7069bfd4525", "filename": "src/llvm_intrinsics.rs", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/78e0525366d0e2873797624a558fd026d8809cde/src%2Fllvm_intrinsics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/78e0525366d0e2873797624a558fd026d8809cde/src%2Fllvm_intrinsics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fllvm_intrinsics.rs?ref=78e0525366d0e2873797624a558fd026d8809cde", "patch": "@@ -19,3 +19,11 @@ pub fn codegen_llvm_intrinsic_call<'a, 'tcx: 'a>(\n         trap_unreachable(fx, \"[corruption] Diverging intrinsic returned.\");\n     }\n }\n+\n+// llvm.x86.sse2.pmovmskb.128\n+// llvm.x86.avx2.vperm2i128\n+// llvm.x86.ssse3.pshuf.b.128\n+// llvm.x86.avx2.pshuf.b\n+// llvm.x86.avx2.pmovmskb\n+// llvm.x86.avx2.psrli.w\n+// llvm.x86.sse2.psrli.w"}]}