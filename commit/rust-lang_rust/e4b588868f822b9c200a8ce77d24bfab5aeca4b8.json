{"sha": "e4b588868f822b9c200a8ce77d24bfab5aeca4b8", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU0YjU4ODg2OGY4MjJiOWMyMDBhOGNlNzdkMjRiZmFiNWFlY2E0Yjg=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-12-31T16:22:43Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-12-31T16:22:43Z"}, "message": "Refactor status activation", "tree": {"sha": "6241f2088d0b1d8eeae9cceef4aee74a48d31993", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6241f2088d0b1d8eeae9cceef4aee74a48d31993"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e4b588868f822b9c200a8ce77d24bfab5aeca4b8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e4b588868f822b9c200a8ce77d24bfab5aeca4b8", "html_url": "https://github.com/rust-lang/rust/commit/e4b588868f822b9c200a8ce77d24bfab5aeca4b8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e4b588868f822b9c200a8ce77d24bfab5aeca4b8/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1327aed7f6289043091aa9179282030c6f13ddbe", "url": "https://api.github.com/repos/rust-lang/rust/commits/1327aed7f6289043091aa9179282030c6f13ddbe", "html_url": "https://github.com/rust-lang/rust/commit/1327aed7f6289043091aa9179282030c6f13ddbe"}], "stats": {"total": 83, "additions": 38, "deletions": 45}, "files": [{"sha": "0e62a3a851b5539c791daad870cdf4684098c5a1", "filename": "editors/code/src/ctx.ts", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/e4b588868f822b9c200a8ce77d24bfab5aeca4b8/editors%2Fcode%2Fsrc%2Fctx.ts", "raw_url": "https://github.com/rust-lang/rust/raw/e4b588868f822b9c200a8ce77d24bfab5aeca4b8/editors%2Fcode%2Fsrc%2Fctx.ts", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fsrc%2Fctx.ts?ref=e4b588868f822b9c200a8ce77d24bfab5aeca4b8", "patch": "@@ -84,6 +84,11 @@ export class Ctx {\n         }\n         throw 'unreachable';\n     }\n+\n+    onNotification(method: string, handler: lc.GenericNotificationHandler) {\n+        this.client.onReady()\n+            .then(() => this.client.onNotification(method, handler))\n+    }\n }\n \n export type Cmd = (...args: any[]) => any;"}, {"sha": "d4e961b5b623383e93480e57f1cf6649aac2fa66", "filename": "editors/code/src/highlighting.ts", "status": "modified", "additions": 20, "deletions": 22, "changes": 42, "blob_url": "https://github.com/rust-lang/rust/blob/e4b588868f822b9c200a8ce77d24bfab5aeca4b8/editors%2Fcode%2Fsrc%2Fhighlighting.ts", "raw_url": "https://github.com/rust-lang/rust/raw/e4b588868f822b9c200a8ce77d24bfab5aeca4b8/editors%2Fcode%2Fsrc%2Fhighlighting.ts", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fsrc%2Fhighlighting.ts?ref=e4b588868f822b9c200a8ce77d24bfab5aeca4b8", "patch": "@@ -10,28 +10,26 @@ import { Ctx } from './ctx';\n export function activateHighlighting(ctx: Ctx) {\n     const highlighter = new Highlighter(ctx);\n \n-    ctx.client.onReady().then(() => {\n-        ctx.client.onNotification(\n-            'rust-analyzer/publishDecorations',\n-            (params: PublishDecorationsParams) => {\n-                if (!ctx.config.highlightingOn) return;\n-\n-                const targetEditor = vscode.window.visibleTextEditors.find(\n-                    editor => {\n-                        const unescapedUri = unescape(\n-                            editor.document.uri.toString(),\n-                        );\n-                        // Unescaped URI looks like:\n-                        // file:///c:/Workspace/ra-test/src/main.rs\n-                        return unescapedUri === params.uri;\n-                    },\n-                );\n-                if (!targetEditor) return;\n-\n-                highlighter.setHighlights(targetEditor, params.decorations);\n-            },\n-        );\n-    });\n+    ctx.onNotification(\n+        'rust-analyzer/publishDecorations',\n+        (params: PublishDecorationsParams) => {\n+            if (!ctx.config.highlightingOn) return;\n+\n+            const targetEditor = vscode.window.visibleTextEditors.find(\n+                editor => {\n+                    const unescapedUri = unescape(\n+                        editor.document.uri.toString(),\n+                    );\n+                    // Unescaped URI looks like:\n+                    // file:///c:/Workspace/ra-test/src/main.rs\n+                    return unescapedUri === params.uri;\n+                },\n+            );\n+            if (!targetEditor) return;\n+\n+            highlighter.setHighlights(targetEditor, params.decorations);\n+        },\n+    );\n \n     vscode.workspace.onDidChangeConfiguration(\n         _ => highlighter.removeHighlights(),"}, {"sha": "511f17ca4ece44fa86e26ef81a4e8b0fdce8e4c8", "filename": "editors/code/src/main.ts", "status": "modified", "additions": 3, "deletions": 14, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/e4b588868f822b9c200a8ce77d24bfab5aeca4b8/editors%2Fcode%2Fsrc%2Fmain.ts", "raw_url": "https://github.com/rust-lang/rust/raw/e4b588868f822b9c200a8ce77d24bfab5aeca4b8/editors%2Fcode%2Fsrc%2Fmain.ts", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fsrc%2Fmain.ts?ref=e4b588868f822b9c200a8ce77d24bfab5aeca4b8", "patch": "@@ -1,9 +1,8 @@\n import * as vscode from 'vscode';\n-import * as lc from 'vscode-languageclient';\n \n import * as commands from './commands';\n import { activateInlayHints } from './inlay_hints';\n-import { StatusDisplay } from './status_display';\n+import { activateStatusDisplay } from './status_display';\n import { Server } from './server';\n import { Ctx } from './ctx';\n import { activateHighlighting } from './highlighting';\n@@ -32,18 +31,7 @@ export async function activate(context: vscode.ExtensionContext) {\n         ctx.overrideCommand('type', commands.onEnter);\n     }\n \n-    const watchStatus = new StatusDisplay(ctx.config.cargoWatchOptions.command);\n-    ctx.pushCleanup(watchStatus);\n-\n-    // Notifications are events triggered by the language server\n-    const allNotifications: [string, lc.GenericNotificationHandler][] = [\n-        [\n-            '$/progress',\n-            params => watchStatus.handleProgressNotification(params),\n-        ],\n-    ];\n-\n-    const startServer = () => Server.start(allNotifications);\n+    const startServer = () => Server.start();\n     const reloadCommand = () => reloadServer(startServer);\n \n     vscode.commands.registerCommand('rust-analyzer.reload', reloadCommand);\n@@ -55,6 +43,7 @@ export async function activate(context: vscode.ExtensionContext) {\n         vscode.window.showErrorMessage(e.message);\n     }\n \n+    activateStatusDisplay(ctx);\n     activateHighlighting(ctx);\n \n     if (ctx.config.displayInlayHints) {"}, {"sha": "5dc8a36bdf0578793fdd415daffd8d76e9864fd1", "filename": "editors/code/src/server.ts", "status": "modified", "additions": 1, "deletions": 8, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/e4b588868f822b9c200a8ce77d24bfab5aeca4b8/editors%2Fcode%2Fsrc%2Fserver.ts", "raw_url": "https://github.com/rust-lang/rust/raw/e4b588868f822b9c200a8ce77d24bfab5aeca4b8/editors%2Fcode%2Fsrc%2Fserver.ts", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fsrc%2Fserver.ts?ref=e4b588868f822b9c200a8ce77d24bfab5aeca4b8", "patch": "@@ -15,9 +15,7 @@ export class Server {\n     public static config = new Config();\n     public static client: lc.LanguageClient;\n \n-    public static async start(\n-        notificationHandlers: Iterable<[string, lc.GenericNotificationHandler]>,\n-    ) {\n+    public static async start() {\n         // '.' Is the fallback if no folder is open\n         // TODO?: Workspace folders support Uri's (eg: file://test.txt). It might be a good idea to test if the uri points to a file.\n         let folder: string = '.';\n@@ -92,11 +90,6 @@ export class Server {\n             },\n         };\n         Server.client.registerProposedFeatures();\n-        Server.client.onReady().then(() => {\n-            for (const [type, handler] of notificationHandlers) {\n-                Server.client.onNotification(type, handler);\n-            }\n-        });\n         Server.client.start();\n     }\n }"}, {"sha": "e3719075bb7540539366fc571d4740e7f477fe78", "filename": "editors/code/src/status_display.ts", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/e4b588868f822b9c200a8ce77d24bfab5aeca4b8/editors%2Fcode%2Fsrc%2Fstatus_display.ts", "raw_url": "https://github.com/rust-lang/rust/raw/e4b588868f822b9c200a8ce77d24bfab5aeca4b8/editors%2Fcode%2Fsrc%2Fstatus_display.ts", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fsrc%2Fstatus_display.ts?ref=e4b588868f822b9c200a8ce77d24bfab5aeca4b8", "patch": "@@ -1,8 +1,16 @@\n import * as vscode from 'vscode';\n \n+import { Ctx } from './ctx';\n+\n const spinnerFrames = ['\u280b', '\u2819', '\u2839', '\u2838', '\u283c', '\u2834', '\u2826', '\u2827', '\u2807', '\u280f'];\n \n-export class StatusDisplay implements vscode.Disposable {\n+export function activateStatusDisplay(ctx: Ctx) {\n+    const statusDisplay = new StatusDisplay(ctx.config.cargoWatchOptions.command);\n+    ctx.pushCleanup(statusDisplay);\n+    ctx.onNotification('$/progress', params => statusDisplay.handleProgressNotification(params));\n+}\n+\n+class StatusDisplay implements vscode.Disposable {\n     packageName?: string;\n \n     private i = 0;"}]}