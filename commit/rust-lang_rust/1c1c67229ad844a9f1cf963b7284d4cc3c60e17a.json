{"sha": "1c1c67229ad844a9f1cf963b7284d4cc3c60e17a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjFjMWM2NzIyOWFkODQ0YTlmMWNmOTYzYjcyODRkNGNjM2M2MGUxN2E=", "commit": {"author": {"name": "Lindsey Kuper", "email": "lkuper@mozilla.com", "date": "2011-03-25T20:40:40Z"}, "committer": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2011-03-27T00:51:42Z"}, "message": "Updates to the nbody demo.", "tree": {"sha": "8a723efbf143507c9effc7d618b4dd9803086215", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8a723efbf143507c9effc7d618b4dd9803086215"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1c1c67229ad844a9f1cf963b7284d4cc3c60e17a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1c1c67229ad844a9f1cf963b7284d4cc3c60e17a", "html_url": "https://github.com/rust-lang/rust/commit/1c1c67229ad844a9f1cf963b7284d4cc3c60e17a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1c1c67229ad844a9f1cf963b7284d4cc3c60e17a/comments", "author": {"login": "lkuper", "id": 535218, "node_id": "MDQ6VXNlcjUzNTIxOA==", "avatar_url": "https://avatars.githubusercontent.com/u/535218?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lkuper", "html_url": "https://github.com/lkuper", "followers_url": "https://api.github.com/users/lkuper/followers", "following_url": "https://api.github.com/users/lkuper/following{/other_user}", "gists_url": "https://api.github.com/users/lkuper/gists{/gist_id}", "starred_url": "https://api.github.com/users/lkuper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lkuper/subscriptions", "organizations_url": "https://api.github.com/users/lkuper/orgs", "repos_url": "https://api.github.com/users/lkuper/repos", "events_url": "https://api.github.com/users/lkuper/events{/privacy}", "received_events_url": "https://api.github.com/users/lkuper/received_events", "type": "User", "site_admin": false}, "committer": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7571935aedca69751c1164b5cbcdbab87d5daea6", "url": "https://api.github.com/repos/rust-lang/rust/commits/7571935aedca69751c1164b5cbcdbab87d5daea6", "html_url": "https://github.com/rust-lang/rust/commit/7571935aedca69751c1164b5cbcdbab87d5daea6"}], "stats": {"total": 85, "additions": 47, "deletions": 38}, "files": [{"sha": "bfa77674cabf38b5ee096c4dc8179a094c969aec", "filename": "src/test/bench/shootout/nbody.rs", "status": "modified", "additions": 47, "deletions": 38, "changes": 85, "blob_url": "https://github.com/rust-lang/rust/blob/1c1c67229ad844a9f1cf963b7284d4cc3c60e17a/src%2Ftest%2Fbench%2Fshootout%2Fnbody.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1c1c67229ad844a9f1cf963b7284d4cc3c60e17a/src%2Ftest%2Fbench%2Fshootout%2Fnbody.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fbench%2Fshootout%2Fnbody.rs?ref=1c1c67229ad844a9f1cf963b7284d4cc3c60e17a", "patch": "@@ -4,6 +4,8 @@\n \n fn main() {\n \n+    log \"foo\";\n+\n     let vec[int] inputs = vec(\n         50000\n         //these segfault :(\n@@ -56,7 +58,9 @@ mod NBodySystem {\n             py += body.vy * body.mass;\n             pz += body.vz * body.mass;\n         }\n-        bodies.(0) = Body.offsetMomentum(bodies.(0), px, py, pz);\n+\n+        // side-effecting\n+        Body.offsetMomentum(bodies.(0), px, py, pz);\n \n         ret bodies;\n     }\n@@ -76,6 +80,14 @@ mod NBodySystem {\n                 let float distance;\n                 rustrt.squareroot(dSquared, distance);\n                 let float mag = dt / (dSquared * distance);\n+\n+                iBody.vx -= dx * jbody.mass * mag;\n+                iBody.vy -= dy * jbody.mass * mag;\n+                iBody.vz -= dz * jbody.mass * mag;\n+\n+                jbody.vx += dx * iBody.mass * mag;\n+                jbody.vy += dy * iBody.mass * mag;\n+                jbody.vz += dz * iBody.mass * mag;\n             }\n         }        \n \n@@ -125,8 +137,8 @@ mod NBodySystem {\n \n mod Body {\n     \n-    const float PI = 3.141592;\n-    const float SOLAR_MASS = 39.478417; // was 4 * PI * PI originally\n+    const float PI = 3.14;\n+    const float SOLAR_MASS = 39.47; // was 4 * PI * PI originally\n     const float DAYS_PER_YEAR = 365.24;\n \n     type props = rec(float x, \n@@ -142,49 +154,49 @@ mod Body {\n         // fit into a 32-bit int.\n         \n         let Body.props p;\n-        p.x    =  4.841431e+00;\n-        p.y    = -1.160320e+00;\n-        p.z    = -1.036220e-01;\n-        p.vx   =  1.660076e-03 * DAYS_PER_YEAR;\n-        p.vy   =  7.699011e-03 * DAYS_PER_YEAR;\n-        p.vz   = -6.904600e-05 * DAYS_PER_YEAR;\n-        p.mass =  9.547919e-04 * SOLAR_MASS;\n+        p.x    =  4.84e+00;\n+        p.y    = -1.16e+00;\n+        p.z    = -1.03e-01;\n+        p.vx   =  1.66e-03 * DAYS_PER_YEAR;\n+        p.vy   =  7.69e-03 * DAYS_PER_YEAR;\n+        p.vz   = -6.90e-05 * DAYS_PER_YEAR;\n+        p.mass =  9.54e-04 * SOLAR_MASS;\n         ret p;\n     }\n \n     fn saturn() -> Body.props {\n         let Body.props p;\n-        p.x    =  8.343366e+00;\n-        p.y    =  4.124798e+00;\n-        p.z    = -4.035234e-01;\n-        p.vx   = -2.767425e-03 * DAYS_PER_YEAR;\n-        p.vy   =  4.998528e-03 * DAYS_PER_YEAR;\n-        p.vz   =  2.304172e-05 * DAYS_PER_YEAR;\n-        p.mass =  2.858859e-04 * SOLAR_MASS;\n+        p.x    =  8.34e+00;\n+        p.y    =  4.12e+00;\n+        p.z    = -4.03e-01;\n+        p.vx   = -2.76e-03 * DAYS_PER_YEAR;\n+        p.vy   =  4.99e-03 * DAYS_PER_YEAR;\n+        p.vz   =  2.30e-05 * DAYS_PER_YEAR;\n+        p.mass =  2.85e-04 * SOLAR_MASS;\n         ret p;\n    }\n \n     fn uranus() -> Body.props {\n         let Body.props p;\n-        p.x    =  1.289436e+01;\n-        p.y    = -1.511115e+01;\n-        p.z    = -2.233075e-01;\n-        p.vx   =  2.964601e-03 * DAYS_PER_YEAR;\n-        p.vy   =  2.378471e-03 * DAYS_PER_YEAR;\n-        p.vz   = -2.965895e-05 * DAYS_PER_YEAR;\n-        p.mass =  4.366244e-05 * SOLAR_MASS;\n+        p.x    =  1.28e+01;\n+        p.y    = -1.51e+01;\n+        p.z    = -2.23e-01;\n+        p.vx   =  2.96e-03 * DAYS_PER_YEAR;\n+        p.vy   =  2.37e-03 * DAYS_PER_YEAR;\n+        p.vz   = -2.96e-05 * DAYS_PER_YEAR;\n+        p.mass =  4.36e-05 * SOLAR_MASS;\n         ret p;\n     }\n \n     fn neptune() -> Body.props {\n         let Body.props p;\n-        p.x    =  1.537969e+01;\n-        p.y    = -2.591931e+01;\n-        p.z    =  1.792587e-01;\n-        p.vx   =  2.680677e-03 * DAYS_PER_YEAR;\n-        p.vy   =  1.628241e-03 * DAYS_PER_YEAR;\n-        p.vz   = -9.515922e-05 * DAYS_PER_YEAR;\n-        p.mass =  5.151389e-05 * SOLAR_MASS;\n+        p.x    =  1.53e+01;\n+        p.y    = -2.59e+01;\n+        p.z    =  1.79e-01;\n+        p.vx   =  2.68e-03 * DAYS_PER_YEAR;\n+        p.vy   =  1.62e-03 * DAYS_PER_YEAR;\n+        p.vz   = -9.51e-05 * DAYS_PER_YEAR;\n+        p.mass =  5.15e-05 * SOLAR_MASS;\n         ret p;\n    }\n \n@@ -194,17 +206,14 @@ mod Body {\n         ret p;\n    }\n \n-   fn offsetMomentum(Body.props props,\n+   impure fn offsetMomentum(mutable Body.props props,\n                      float px, \n                      float py, \n                      float pz) -> Body.props {\n \n-       // TODO: should we create a new one or mutate the original?\n-       let Body.props p = props;\n-       p.vx = -px / SOLAR_MASS;\n-       p.vy = -py / SOLAR_MASS;\n-       p.vz = -pz / SOLAR_MASS;\n-       ret p;\n+       props.vx = -px / SOLAR_MASS;\n+       props.vy = -py / SOLAR_MASS;\n+       props.vz = -pz / SOLAR_MASS;\n    }\n \n }"}]}