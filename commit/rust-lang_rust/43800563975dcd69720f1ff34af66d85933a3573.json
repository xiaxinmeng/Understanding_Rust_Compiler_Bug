{"sha": "43800563975dcd69720f1ff34af66d85933a3573", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQzODAwNTYzOTc1ZGNkNjk3MjBmMWZmMzRhZjY2ZDg1OTMzYTM1NzM=", "commit": {"author": {"name": "Cameron Steffen", "email": "cam.steffen94@gmail.com", "date": "2021-08-02T14:36:51Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-08-02T14:36:51Z"}, "message": "Rollup merge of #87659 - FabianWolff:issue-87397, r=davidtwco\n\nFix invalid suggestions for non-ASCII characters in byte constants\n\nFixes #87397.", "tree": {"sha": "4418c7b7a91f714c1ba67f2c099452d30d82c1ab", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4418c7b7a91f714c1ba67f2c099452d30d82c1ab"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/43800563975dcd69720f1ff34af66d85933a3573", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJhCAMECRBK7hj4Ov3rIwAAFY8IAGYrrtB0r/Zqqwm8at7P2F+G\n7GeU01tHCvrOuao4jKmber8+oLEM3RvN59U206d2ZbIpBla/ER5JacMmWdhKqskP\nehxnvMa0Z0T2+qzDyFA6UoZVO+qMUbQp568zSp83wz9hNXI5jyms3K2cBk3gQSS9\ngveGJMF7rUcDgap7dckvcV9Q+o4JomLQU9FQjLYu2RE19RIvD9HXeSPfBN1TiLMF\nODhHSoNyYT6Zo0xhAnnLF9WFkiUbf4IV7T3nqOMv/XHr/yvV42xv8PycCVirkchq\ni9poOWHDPg/PMfR0mkUC4oJrn4GsJEV6HeTLqrPOg/2ag3gAaQQmYXSr4gN/xQI=\n=gF8z\n-----END PGP SIGNATURE-----\n", "payload": "tree 4418c7b7a91f714c1ba67f2c099452d30d82c1ab\nparent b1166e14b626bbfe1921b42d11ff8b7dfaf91855\nparent c1abb6f4d6756086d74008cacf51e42ae2cda7bb\nauthor Cameron Steffen <cam.steffen94@gmail.com> 1627915011 -0500\ncommitter GitHub <noreply@github.com> 1627915011 -0500\n\nRollup merge of #87659 - FabianWolff:issue-87397, r=davidtwco\n\nFix invalid suggestions for non-ASCII characters in byte constants\n\nFixes #87397.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/43800563975dcd69720f1ff34af66d85933a3573", "html_url": "https://github.com/rust-lang/rust/commit/43800563975dcd69720f1ff34af66d85933a3573", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/43800563975dcd69720f1ff34af66d85933a3573/comments", "author": {"login": "camsteffen", "id": 5565418, "node_id": "MDQ6VXNlcjU1NjU0MTg=", "avatar_url": "https://avatars.githubusercontent.com/u/5565418?v=4", "gravatar_id": "", "url": "https://api.github.com/users/camsteffen", "html_url": "https://github.com/camsteffen", "followers_url": "https://api.github.com/users/camsteffen/followers", "following_url": "https://api.github.com/users/camsteffen/following{/other_user}", "gists_url": "https://api.github.com/users/camsteffen/gists{/gist_id}", "starred_url": "https://api.github.com/users/camsteffen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/camsteffen/subscriptions", "organizations_url": "https://api.github.com/users/camsteffen/orgs", "repos_url": "https://api.github.com/users/camsteffen/repos", "events_url": "https://api.github.com/users/camsteffen/events{/privacy}", "received_events_url": "https://api.github.com/users/camsteffen/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b1166e14b626bbfe1921b42d11ff8b7dfaf91855", "url": "https://api.github.com/repos/rust-lang/rust/commits/b1166e14b626bbfe1921b42d11ff8b7dfaf91855", "html_url": "https://github.com/rust-lang/rust/commit/b1166e14b626bbfe1921b42d11ff8b7dfaf91855"}, {"sha": "c1abb6f4d6756086d74008cacf51e42ae2cda7bb", "url": "https://api.github.com/repos/rust-lang/rust/commits/c1abb6f4d6756086d74008cacf51e42ae2cda7bb", "html_url": "https://github.com/rust-lang/rust/commit/c1abb6f4d6756086d74008cacf51e42ae2cda7bb"}], "stats": {"total": 118, "additions": 98, "deletions": 20}, "files": [{"sha": "4e95cdc0efa5f30c83392dc47498ca379b5d6d4d", "filename": "compiler/rustc_parse/src/lexer/unescape_error_reporting.rs", "status": "modified", "additions": 29, "deletions": 8, "changes": 37, "blob_url": "https://github.com/rust-lang/rust/blob/43800563975dcd69720f1ff34af66d85933a3573/compiler%2Frustc_parse%2Fsrc%2Flexer%2Funescape_error_reporting.rs", "raw_url": "https://github.com/rust-lang/rust/raw/43800563975dcd69720f1ff34af66d85933a3573/compiler%2Frustc_parse%2Fsrc%2Flexer%2Funescape_error_reporting.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_parse%2Fsrc%2Flexer%2Funescape_error_reporting.rs?ref=43800563975dcd69720f1ff34af66d85933a3573", "patch": "@@ -153,16 +153,37 @@ pub(crate) fn emit_unescape_error(\n         EscapeError::NonAsciiCharInByte => {\n             assert!(mode.is_bytes());\n             let (c, span) = last_char();\n-            handler\n-                .struct_span_err(span, \"non-ASCII character in byte constant\")\n-                .span_label(span, \"byte constant must be ASCII\")\n-                .span_suggestion(\n+            let mut err = handler.struct_span_err(span, \"non-ASCII character in byte constant\");\n+            err.span_label(span, \"byte constant must be ASCII\");\n+            if (c as u32) <= 0xFF {\n+                err.span_suggestion(\n                     span,\n-                    \"use a \\\\xHH escape for a non-ASCII byte\",\n+                    &format!(\n+                        \"if you meant to use the unicode code point for '{}', use a \\\\xHH escape\",\n+                        c\n+                    ),\n                     format!(\"\\\\x{:X}\", c as u32),\n-                    Applicability::MachineApplicable,\n-                )\n-                .emit();\n+                    Applicability::MaybeIncorrect,\n+                );\n+            } else if matches!(mode, Mode::Byte) {\n+                err.span_label(span, \"this multibyte character does not fit into a single byte\");\n+            } else if matches!(mode, Mode::ByteStr) {\n+                let mut utf8 = String::new();\n+                utf8.push(c);\n+                err.span_suggestion(\n+                    span,\n+                    &format!(\n+                        \"if you meant to use the UTF-8 encoding of '{}', use \\\\xHH escapes\",\n+                        c\n+                    ),\n+                    utf8.as_bytes()\n+                        .iter()\n+                        .map(|b: &u8| format!(\"\\\\x{:X}\", *b))\n+                        .fold(\"\".to_string(), |a, c| a + &c),\n+                    Applicability::MaybeIncorrect,\n+                );\n+            }\n+            err.emit();\n         }\n         EscapeError::NonAsciiCharInByteString => {\n             assert!(mode.is_bytes());"}, {"sha": "01a07ad3b0ee461fe9bbcd15c4da9963cc470118", "filename": "src/test/ui/attributes/key-value-non-ascii.stderr", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/43800563975dcd69720f1ff34af66d85933a3573/src%2Ftest%2Fui%2Fattributes%2Fkey-value-non-ascii.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/43800563975dcd69720f1ff34af66d85933a3573/src%2Ftest%2Fui%2Fattributes%2Fkey-value-non-ascii.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fattributes%2Fkey-value-non-ascii.stderr?ref=43800563975dcd69720f1ff34af66d85933a3573", "patch": "@@ -2,10 +2,12 @@ error: non-ASCII character in byte constant\n   --> $DIR/key-value-non-ascii.rs:3:19\n    |\n LL | #[rustc_dummy = b\"\ufb03.rs\"]\n-   |                   ^\n-   |                   |\n-   |                   byte constant must be ASCII\n-   |                   help: use a \\xHH escape for a non-ASCII byte: `\\xFB03`\n+   |                   ^ byte constant must be ASCII\n+   |\n+help: if you meant to use the UTF-8 encoding of '\ufb03', use \\xHH escapes\n+   |\n+LL | #[rustc_dummy = b\"/xEF/xAC/x83.rs\"]\n+   |                   ^^^^^^^^^^^^\n \n error: aborting due to previous error\n "}, {"sha": "b9fb42088d9d385359561f7c8cec94c8f72b8290", "filename": "src/test/ui/parser/byte-literals.stderr", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/43800563975dcd69720f1ff34af66d85933a3573/src%2Ftest%2Fui%2Fparser%2Fbyte-literals.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/43800563975dcd69720f1ff34af66d85933a3573/src%2Ftest%2Fui%2Fparser%2Fbyte-literals.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fbyte-literals.stderr?ref=43800563975dcd69720f1ff34af66d85933a3573", "patch": "@@ -36,10 +36,12 @@ error: non-ASCII character in byte constant\n   --> $DIR/byte-literals.rs:10:7\n    |\n LL |     b'\u00e9';\n-   |       ^\n-   |       |\n-   |       byte constant must be ASCII\n-   |       help: use a \\xHH escape for a non-ASCII byte: `\\xE9`\n+   |       ^ byte constant must be ASCII\n+   |\n+help: if you meant to use the unicode code point for '\u00e9', use a \\xHH escape\n+   |\n+LL |     b'\\xE9';\n+   |       ^^^^\n \n error[E0763]: unterminated byte constant\n   --> $DIR/byte-literals.rs:11:6"}, {"sha": "4f22a16224f0c3f2b9fc4bc9f4588b19ea0189d4", "filename": "src/test/ui/parser/byte-string-literals.stderr", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/43800563975dcd69720f1ff34af66d85933a3573/src%2Ftest%2Fui%2Fparser%2Fbyte-string-literals.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/43800563975dcd69720f1ff34af66d85933a3573/src%2Ftest%2Fui%2Fparser%2Fbyte-string-literals.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fbyte-string-literals.stderr?ref=43800563975dcd69720f1ff34af66d85933a3573", "patch": "@@ -24,10 +24,12 @@ error: non-ASCII character in byte constant\n   --> $DIR/byte-string-literals.rs:6:7\n    |\n LL |     b\"\u00e9\";\n-   |       ^\n-   |       |\n-   |       byte constant must be ASCII\n-   |       help: use a \\xHH escape for a non-ASCII byte: `\\xE9`\n+   |       ^ byte constant must be ASCII\n+   |\n+help: if you meant to use the unicode code point for '\u00e9', use a \\xHH escape\n+   |\n+LL |     b\"\\xE9\";\n+   |       ^^^^\n \n error: raw byte string must be ASCII\n   --> $DIR/byte-string-literals.rs:7:10"}, {"sha": "fd5d46a4e923e8fdc295f2befb66eaed6b73ee13", "filename": "src/test/ui/suggestions/multibyte-escapes.rs", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/43800563975dcd69720f1ff34af66d85933a3573/src%2Ftest%2Fui%2Fsuggestions%2Fmultibyte-escapes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/43800563975dcd69720f1ff34af66d85933a3573/src%2Ftest%2Fui%2Fsuggestions%2Fmultibyte-escapes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Fmultibyte-escapes.rs?ref=43800563975dcd69720f1ff34af66d85933a3573", "patch": "@@ -0,0 +1,18 @@\n+// Regression test for #87397.\n+\n+fn main() {\n+    b'\u00b5';\n+    //~^ ERROR: non-ASCII character in byte constant\n+    //~| HELP: if you meant to use the unicode code point for '\u00b5', use a \\xHH escape\n+    //~| NOTE: byte constant must be ASCII\n+\n+    b'\u5b57';\n+    //~^ ERROR: non-ASCII character in byte constant\n+    //~| NOTE: this multibyte character does not fit into a single byte\n+    //~| NOTE: byte constant must be ASCII\n+\n+    b\"\u5b57\";\n+    //~^ ERROR: non-ASCII character in byte constant\n+    //~| HELP: if you meant to use the UTF-8 encoding of '\u5b57', use \\xHH escapes\n+    //~| NOTE: byte constant must be ASCII\n+}"}, {"sha": "bb4f8e8c304a10cbdcb6e5c0a35b384a3e2be628", "filename": "src/test/ui/suggestions/multibyte-escapes.stderr", "status": "added", "additions": 33, "deletions": 0, "changes": 33, "blob_url": "https://github.com/rust-lang/rust/blob/43800563975dcd69720f1ff34af66d85933a3573/src%2Ftest%2Fui%2Fsuggestions%2Fmultibyte-escapes.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/43800563975dcd69720f1ff34af66d85933a3573/src%2Ftest%2Fui%2Fsuggestions%2Fmultibyte-escapes.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Fmultibyte-escapes.stderr?ref=43800563975dcd69720f1ff34af66d85933a3573", "patch": "@@ -0,0 +1,33 @@\n+error: non-ASCII character in byte constant\n+  --> $DIR/multibyte-escapes.rs:4:7\n+   |\n+LL |     b'\u00b5';\n+   |       ^ byte constant must be ASCII\n+   |\n+help: if you meant to use the unicode code point for '\u00b5', use a \\xHH escape\n+   |\n+LL |     b'\\xB5';\n+   |       ^^^^\n+\n+error: non-ASCII character in byte constant\n+  --> $DIR/multibyte-escapes.rs:9:7\n+   |\n+LL |     b'\u5b57';\n+   |       ^^\n+   |       |\n+   |       byte constant must be ASCII\n+   |       this multibyte character does not fit into a single byte\n+\n+error: non-ASCII character in byte constant\n+  --> $DIR/multibyte-escapes.rs:14:7\n+   |\n+LL |     b\"\u5b57\";\n+   |       ^^ byte constant must be ASCII\n+   |\n+help: if you meant to use the UTF-8 encoding of '\u5b57', use \\xHH escapes\n+   |\n+LL |     b\"\\xE5\\xAD\\x97\";\n+   |       ^^^^^^^^^^^^\n+\n+error: aborting due to 3 previous errors\n+"}]}