{"sha": "a5b647faa71c307c8480e9a0699b6dd1bbd4461e", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE1YjY0N2ZhYTcxYzMwN2M4NDgwZTlhMDY5OWI2ZGQxYmJkNDQ2MWU=", "commit": {"author": {"name": "topecongiro", "email": "seuchida@gmail.com", "date": "2017-11-27T10:29:26Z"}, "committer": {"name": "topecongiro", "email": "seuchida@gmail.com", "date": "2017-11-27T10:29:26Z"}, "message": "Allow '--package <package>'", "tree": {"sha": "4c2b3a13ecc3c9ed2beb592a7b430d42a67625ff", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4c2b3a13ecc3c9ed2beb592a7b430d42a67625ff"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a5b647faa71c307c8480e9a0699b6dd1bbd4461e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a5b647faa71c307c8480e9a0699b6dd1bbd4461e", "html_url": "https://github.com/rust-lang/rust/commit/a5b647faa71c307c8480e9a0699b6dd1bbd4461e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a5b647faa71c307c8480e9a0699b6dd1bbd4461e/comments", "author": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "committer": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bf87d9b79ffccf9dc3f5f0ec102568097def2127", "url": "https://api.github.com/repos/rust-lang/rust/commits/bf87d9b79ffccf9dc3f5f0ec102568097def2127", "html_url": "https://github.com/rust-lang/rust/commit/bf87d9b79ffccf9dc3f5f0ec102568097def2127"}], "stats": {"total": 17, "additions": 10, "deletions": 7}, "files": [{"sha": "33e7db7adcd7036dda8df1436bbf4a7dc222ae0b", "filename": "src/bin/cargo-fmt.rs", "status": "modified", "additions": 10, "deletions": 7, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/a5b647faa71c307c8480e9a0699b6dd1bbd4461e/src%2Fbin%2Fcargo-fmt.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a5b647faa71c307c8480e9a0699b6dd1bbd4461e/src%2Fbin%2Fcargo-fmt.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbin%2Fcargo-fmt.rs?ref=a5b647faa71c307c8480e9a0699b6dd1bbd4461e", "patch": "@@ -52,13 +52,16 @@ fn execute() -> i32 {\n     opts.optflag(\"\", \"all\", \"format all packages (only usable in workspaces)\");\n \n     // If there is any invalid argument passed to `cargo fmt`, return without formatting.\n-    if let Some(arg) = env::args()\n-        .skip(2)\n-        .take_while(|a| a != \"--\")\n-        .find(|a| !a.starts_with('-'))\n-    {\n-        print_usage_to_stderr(&opts, &format!(\"Invalid argument: `{}`.\", arg));\n-        return failure;\n+    let mut is_package_arg = false;\n+    for arg in env::args().skip(2).take_while(|a| a != \"--\") {\n+        if arg.starts_with(\"-\") {\n+            is_package_arg = arg.starts_with(\"--package\");\n+        } else if !is_package_arg {\n+            print_usage_to_stderr(&opts, &format!(\"Invalid argument: `{}`.\", arg));\n+            return failure;\n+        } else {\n+            is_package_arg = false;\n+        }\n     }\n \n     let matches = match opts.parse(env::args().skip(1).take_while(|a| a != \"--\")) {"}]}