{"sha": "09f7a377a663043c6f63ded70436ac0969e4abc7", "node_id": "MDY6Q29tbWl0NzI0NzEyOjA5ZjdhMzc3YTY2MzA0M2M2ZjYzZGVkNzA0MzZhYzA5NjllNGFiYzc=", "commit": {"author": {"name": "Thom Chiovoloni", "email": "chiovolonit@gmail.com", "date": "2020-09-10T21:50:10Z"}, "committer": {"name": "Thom Chiovoloni", "email": "chiovolonit@gmail.com", "date": "2020-09-10T21:50:10Z"}, "message": "Add comments to the invalid_atomic_ordering example", "tree": {"sha": "d1d75eb6a81f534c69b46cad85413d47e5aab513", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d1d75eb6a81f534c69b46cad85413d47e5aab513"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/09f7a377a663043c6f63ded70436ac0969e4abc7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/09f7a377a663043c6f63ded70436ac0969e4abc7", "html_url": "https://github.com/rust-lang/rust/commit/09f7a377a663043c6f63ded70436ac0969e4abc7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/09f7a377a663043c6f63ded70436ac0969e4abc7/comments", "author": {"login": "thomcc", "id": 860665, "node_id": "MDQ6VXNlcjg2MDY2NQ==", "avatar_url": "https://avatars.githubusercontent.com/u/860665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thomcc", "html_url": "https://github.com/thomcc", "followers_url": "https://api.github.com/users/thomcc/followers", "following_url": "https://api.github.com/users/thomcc/following{/other_user}", "gists_url": "https://api.github.com/users/thomcc/gists{/gist_id}", "starred_url": "https://api.github.com/users/thomcc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thomcc/subscriptions", "organizations_url": "https://api.github.com/users/thomcc/orgs", "repos_url": "https://api.github.com/users/thomcc/repos", "events_url": "https://api.github.com/users/thomcc/events{/privacy}", "received_events_url": "https://api.github.com/users/thomcc/received_events", "type": "User", "site_admin": false}, "committer": {"login": "thomcc", "id": 860665, "node_id": "MDQ6VXNlcjg2MDY2NQ==", "avatar_url": "https://avatars.githubusercontent.com/u/860665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thomcc", "html_url": "https://github.com/thomcc", "followers_url": "https://api.github.com/users/thomcc/followers", "following_url": "https://api.github.com/users/thomcc/following{/other_user}", "gists_url": "https://api.github.com/users/thomcc/gists{/gist_id}", "starred_url": "https://api.github.com/users/thomcc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thomcc/subscriptions", "organizations_url": "https://api.github.com/users/thomcc/orgs", "repos_url": "https://api.github.com/users/thomcc/repos", "events_url": "https://api.github.com/users/thomcc/events{/privacy}", "received_events_url": "https://api.github.com/users/thomcc/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3a072131da2e574e914073af6d72360ead735781", "url": "https://api.github.com/repos/rust-lang/rust/commits/3a072131da2e574e914073af6d72360ead735781", "html_url": "https://github.com/rust-lang/rust/commit/3a072131da2e574e914073af6d72360ead735781"}], "stats": {"total": 15, "additions": 12, "deletions": 3}, "files": [{"sha": "703d8a6f62bb1f07ab305dfec36e32097d10f070", "filename": "clippy_lints/src/atomic_ordering.rs", "status": "modified", "additions": 12, "deletions": 3, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/09f7a377a663043c6f63ded70436ac0969e4abc7/clippy_lints%2Fsrc%2Fatomic_ordering.rs", "raw_url": "https://github.com/rust-lang/rust/raw/09f7a377a663043c6f63ded70436ac0969e4abc7/clippy_lints%2Fsrc%2Fatomic_ordering.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fatomic_ordering.rs?ref=09f7a377a663043c6f63ded70436ac0969e4abc7", "patch": "@@ -22,18 +22,27 @@ declare_clippy_lint! {\n     ///\n     /// let x = AtomicU8::new(0);\n     ///\n+    /// // Bad: `Release` and `AcqRel` cannot be used for `load`.\n     /// let _ = x.load(Ordering::Release);\n     /// let _ = x.load(Ordering::AcqRel);\n     ///\n+    /// // Bad: `Acquire` and `AcqRel` cannot be used for `store`.\n     /// x.store(1, Ordering::Acquire);\n     /// x.store(2, Ordering::AcqRel);\n     ///\n+    /// // Bad: `Relaxed` cannot be used as a fence's ordering.\n     /// atomic::fence(Ordering::Relaxed);\n     /// atomic::compiler_fence(Ordering::Relaxed);\n     ///\n-    /// let _ = x.compare_exchange(1, 2, Ordering::Relaxed, Ordering::SeqCst);\n-    /// let _ = x.compare_exchange_weak(2, 3, Ordering::SeqCst, Ordering::Release);\n-    /// let _ = x.fetch_update(Ordering::AcqRel, Ordering::AcqRel, |val| Some(val + val));\n+    /// // Bad: `Release` and `AcqRel` are both always invalid\n+    /// // for the failure ordering (the last arg).\n+    /// let _ = x.compare_exchange(1, 2, Ordering::SeqCst, Ordering::Release);\n+    /// let _ = x.compare_exchange_weak(2, 3, Ordering::AcqRel, Ordering::AcqRel);\n+    ///\n+    /// // Bad: The failure ordering is not allowed to be\n+    /// // stronger than the success order, and `SeqCst` is\n+    /// // stronger than `Relaxed`.\n+    /// let _ = x.fetch_update(Ordering::Relaxed, Ordering::SeqCst, |val| Some(val + val));\n     /// ```\n     pub INVALID_ATOMIC_ORDERING,\n     correctness,"}]}