{"sha": "4e17170c54c3e8bbff9cee1937dd6ab3b2001857", "node_id": "C_kwDOAAsO6NoAKDRlMTcxNzBjNTRjM2U4YmJmZjljZWUxOTM3ZGQ2YWIzYjIwMDE4NTc", "commit": {"author": {"name": "Artem Kryvokrysenko", "email": "krivokrisenko@live.com", "date": "2022-01-19T08:59:44Z"}, "committer": {"name": "Artem Kryvokrysenko", "email": "krivokrisenko@live.com", "date": "2022-01-20T06:28:07Z"}, "message": "rustdoc: auto create output directory when \"--output-format json\"\n\nThis PR allows rustdoc to automatically create output directory in case\nit does not exist (when run with `--output-format json`).\n\nThis fixes rustdoc crash:\n\n````\n$ rustdoc --output-format json -Z unstable-options src/main.rs\nerror: couldn't generate documentation: No such file or directory (os error 2)\n  |\n  = note: failed to create or modify \"doc/main.json\"\n\nerror: aborting due to previous error\n````\n\nWith this fix behavior of `rustdoc --output-format json` becomes consistent\nwith `rustdoc --output-format html` (which already auto-creates output\ndirectory if it's missing)", "tree": {"sha": "89e12c6951f4af2dcd4c59a67e80b3fd9ede4dcb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/89e12c6951f4af2dcd4c59a67e80b3fd9ede4dcb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4e17170c54c3e8bbff9cee1937dd6ab3b2001857", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4e17170c54c3e8bbff9cee1937dd6ab3b2001857", "html_url": "https://github.com/rust-lang/rust/commit/4e17170c54c3e8bbff9cee1937dd6ab3b2001857", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4e17170c54c3e8bbff9cee1937dd6ab3b2001857/comments", "author": {"login": "tomkris", "id": 5573549, "node_id": "MDQ6VXNlcjU1NzM1NDk=", "avatar_url": "https://avatars.githubusercontent.com/u/5573549?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tomkris", "html_url": "https://github.com/tomkris", "followers_url": "https://api.github.com/users/tomkris/followers", "following_url": "https://api.github.com/users/tomkris/following{/other_user}", "gists_url": "https://api.github.com/users/tomkris/gists{/gist_id}", "starred_url": "https://api.github.com/users/tomkris/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tomkris/subscriptions", "organizations_url": "https://api.github.com/users/tomkris/orgs", "repos_url": "https://api.github.com/users/tomkris/repos", "events_url": "https://api.github.com/users/tomkris/events{/privacy}", "received_events_url": "https://api.github.com/users/tomkris/received_events", "type": "User", "site_admin": false}, "committer": {"login": "tomkris", "id": 5573549, "node_id": "MDQ6VXNlcjU1NzM1NDk=", "avatar_url": "https://avatars.githubusercontent.com/u/5573549?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tomkris", "html_url": "https://github.com/tomkris", "followers_url": "https://api.github.com/users/tomkris/followers", "following_url": "https://api.github.com/users/tomkris/following{/other_user}", "gists_url": "https://api.github.com/users/tomkris/gists{/gist_id}", "starred_url": "https://api.github.com/users/tomkris/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tomkris/subscriptions", "organizations_url": "https://api.github.com/users/tomkris/orgs", "repos_url": "https://api.github.com/users/tomkris/repos", "events_url": "https://api.github.com/users/tomkris/events{/privacy}", "received_events_url": "https://api.github.com/users/tomkris/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e5e2b0be26ea177527b60d355bd8f56cd473bd00", "url": "https://api.github.com/repos/rust-lang/rust/commits/e5e2b0be26ea177527b60d355bd8f56cd473bd00", "html_url": "https://github.com/rust-lang/rust/commit/e5e2b0be26ea177527b60d355bd8f56cd473bd00"}], "stats": {"total": 12, "additions": 8, "deletions": 4}, "files": [{"sha": "f9e9fe0d3cf201d7aaae3937650af957ff6c54ed", "filename": "src/librustdoc/json/mod.rs", "status": "modified", "additions": 8, "deletions": 4, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/4e17170c54c3e8bbff9cee1937dd6ab3b2001857/src%2Flibrustdoc%2Fjson%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4e17170c54c3e8bbff9cee1937dd6ab3b2001857/src%2Flibrustdoc%2Fjson%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fjson%2Fmod.rs?ref=4e17170c54c3e8bbff9cee1937dd6ab3b2001857", "patch": "@@ -7,7 +7,7 @@\n mod conversions;\n \n use std::cell::RefCell;\n-use std::fs::File;\n+use std::fs::{create_dir_all, File};\n use std::path::PathBuf;\n use std::rc::Rc;\n \n@@ -18,13 +18,14 @@ use rustc_session::Session;\n \n use rustdoc_json_types as types;\n \n-use crate::clean;\n use crate::clean::types::{ExternalCrate, ExternalLocation};\n use crate::config::RenderOptions;\n+use crate::docfs::PathError;\n use crate::error::Error;\n use crate::formats::cache::Cache;\n use crate::formats::FormatRenderer;\n use crate::json::conversions::{from_item_id, IntoWithTcx};\n+use crate::{clean, try_err};\n \n #[derive(Clone)]\n crate struct JsonRenderer<'tcx> {\n@@ -256,10 +257,13 @@ impl<'tcx> FormatRenderer<'tcx> for JsonRenderer<'tcx> {\n                 .collect(),\n             format_version: types::FORMAT_VERSION,\n         };\n-        let mut p = self.out_path.clone();\n+        let out_dir = self.out_path.clone();\n+        try_err!(create_dir_all(&out_dir), out_dir);\n+\n+        let mut p = out_dir;\n         p.push(output.index.get(&output.root).unwrap().name.clone().unwrap());\n         p.set_extension(\"json\");\n-        let file = File::create(&p).map_err(|error| Error { error: error.to_string(), file: p })?;\n+        let file = try_err!(File::create(&p), p);\n         serde_json::ser::to_writer(&file, &output).unwrap();\n         Ok(())\n     }"}]}