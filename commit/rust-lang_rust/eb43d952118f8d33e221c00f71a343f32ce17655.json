{"sha": "eb43d952118f8d33e221c00f71a343f32ce17655", "node_id": "MDY6Q29tbWl0NzI0NzEyOmViNDNkOTUyMTE4ZjhkMzNlMjIxYzAwZjcxYTM0M2YzMmNlMTc2NTU=", "commit": {"author": {"name": "Eduard Burtescu", "email": "edy.burt@gmail.com", "date": "2016-03-08T12:21:11Z"}, "committer": {"name": "Eduard Burtescu", "email": "edy.burt@gmail.com", "date": "2016-03-17T19:51:53Z"}, "message": "mir: Don't load the discriminant, it's already in immediate form.", "tree": {"sha": "2295c6b01b295dd7ff5eb0634284dd7dfbe4e151", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2295c6b01b295dd7ff5eb0634284dd7dfbe4e151"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/eb43d952118f8d33e221c00f71a343f32ce17655", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/eb43d952118f8d33e221c00f71a343f32ce17655", "html_url": "https://github.com/rust-lang/rust/commit/eb43d952118f8d33e221c00f71a343f32ce17655", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/eb43d952118f8d33e221c00f71a343f32ce17655/comments", "author": {"login": "eddyb", "id": 77424, "node_id": "MDQ6VXNlcjc3NDI0", "avatar_url": "https://avatars.githubusercontent.com/u/77424?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eddyb", "html_url": "https://github.com/eddyb", "followers_url": "https://api.github.com/users/eddyb/followers", "following_url": "https://api.github.com/users/eddyb/following{/other_user}", "gists_url": "https://api.github.com/users/eddyb/gists{/gist_id}", "starred_url": "https://api.github.com/users/eddyb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eddyb/subscriptions", "organizations_url": "https://api.github.com/users/eddyb/orgs", "repos_url": "https://api.github.com/users/eddyb/repos", "events_url": "https://api.github.com/users/eddyb/events{/privacy}", "received_events_url": "https://api.github.com/users/eddyb/received_events", "type": "User", "site_admin": false}, "committer": {"login": "eddyb", "id": 77424, "node_id": "MDQ6VXNlcjc3NDI0", "avatar_url": "https://avatars.githubusercontent.com/u/77424?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eddyb", "html_url": "https://github.com/eddyb", "followers_url": "https://api.github.com/users/eddyb/followers", "following_url": "https://api.github.com/users/eddyb/following{/other_user}", "gists_url": "https://api.github.com/users/eddyb/gists{/gist_id}", "starred_url": "https://api.github.com/users/eddyb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eddyb/subscriptions", "organizations_url": "https://api.github.com/users/eddyb/orgs", "repos_url": "https://api.github.com/users/eddyb/repos", "events_url": "https://api.github.com/users/eddyb/events{/privacy}", "received_events_url": "https://api.github.com/users/eddyb/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d3a6d67fb85c766d58c3097ef8c880e468e25478", "url": "https://api.github.com/repos/rust-lang/rust/commits/d3a6d67fb85c766d58c3097ef8c880e468e25478", "html_url": "https://github.com/rust-lang/rust/commit/d3a6d67fb85c766d58c3097ef8c880e468e25478"}], "stats": {"total": 11, "additions": 4, "deletions": 7}, "files": [{"sha": "d2806f3daba032b5e3ee8868929867563bf23cdf", "filename": "src/librustc_trans/trans/mir/rvalue.rs", "status": "modified", "additions": 4, "deletions": 7, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/eb43d952118f8d33e221c00f71a343f32ce17655/src%2Flibrustc_trans%2Ftrans%2Fmir%2Frvalue.rs", "raw_url": "https://github.com/rust-lang/rust/raw/eb43d952118f8d33e221c00f71a343f32ce17655/src%2Flibrustc_trans%2Ftrans%2Fmir%2Frvalue.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Ftrans%2Fmir%2Frvalue.rs?ref=eb43d952118f8d33e221c00f71a343f32ce17655", "patch": "@@ -248,15 +248,12 @@ impl<'bcx, 'tcx> MirContext<'bcx, 'tcx> {\n                         let r_t_out = CastTy::from_ty(cast_ty).expect(\"bad output type for cast\");\n                         let ll_t_in = type_of::immediate_type_of(bcx.ccx(), operand.ty);\n                         let ll_t_out = type_of::immediate_type_of(bcx.ccx(), cast_ty);\n-                        let (llval, ll_t_in, signed) = if let CastTy::Int(IntTy::CEnum) = r_t_in {\n+                        let llval = operand.immediate();\n+                        let signed = if let CastTy::Int(IntTy::CEnum) = r_t_in {\n                             let repr = adt::represent_type(bcx.ccx(), operand.ty);\n-                            let llval = operand.immediate();\n-                            let discr = bcx.with_block(|bcx| {\n-                                adt::trans_get_discr(bcx, &repr, llval, None, true)\n-                            });\n-                            (discr, common::val_ty(discr), adt::is_discr_signed(&repr))\n+                            adt::is_discr_signed(&repr)\n                         } else {\n-                            (operand.immediate(), ll_t_in, operand.ty.is_signed())\n+                            operand.ty.is_signed()\n                         };\n \n                         let newval = match (r_t_in, r_t_out) {"}]}