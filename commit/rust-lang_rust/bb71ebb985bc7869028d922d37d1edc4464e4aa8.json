{"sha": "bb71ebb985bc7869028d922d37d1edc4464e4aa8", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJiNzFlYmI5ODViYzc4NjkwMjhkOTIyZDM3ZDFlZGM0NDY0ZTRhYTg=", "commit": {"author": {"name": "Lukas Wirth", "email": "lukastw97@gmail.com", "date": "2021-07-20T15:57:47Z"}, "committer": {"name": "Lukas Wirth", "email": "lukastw97@gmail.com", "date": "2021-07-20T15:57:47Z"}, "message": "Move doc_links tests from hover to doc_links", "tree": {"sha": "5dc8ddce9abf77cb612297d4125ec8d30c956957", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5dc8ddce9abf77cb612297d4125ec8d30c956957"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/bb71ebb985bc7869028d922d37d1edc4464e4aa8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/bb71ebb985bc7869028d922d37d1edc4464e4aa8", "html_url": "https://github.com/rust-lang/rust/commit/bb71ebb985bc7869028d922d37d1edc4464e4aa8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/bb71ebb985bc7869028d922d37d1edc4464e4aa8/comments", "author": {"login": "Veykril", "id": 3757771, "node_id": "MDQ6VXNlcjM3NTc3NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/3757771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veykril", "html_url": "https://github.com/Veykril", "followers_url": "https://api.github.com/users/Veykril/followers", "following_url": "https://api.github.com/users/Veykril/following{/other_user}", "gists_url": "https://api.github.com/users/Veykril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veykril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veykril/subscriptions", "organizations_url": "https://api.github.com/users/Veykril/orgs", "repos_url": "https://api.github.com/users/Veykril/repos", "events_url": "https://api.github.com/users/Veykril/events{/privacy}", "received_events_url": "https://api.github.com/users/Veykril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Veykril", "id": 3757771, "node_id": "MDQ6VXNlcjM3NTc3NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/3757771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veykril", "html_url": "https://github.com/Veykril", "followers_url": "https://api.github.com/users/Veykril/followers", "following_url": "https://api.github.com/users/Veykril/following{/other_user}", "gists_url": "https://api.github.com/users/Veykril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veykril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veykril/subscriptions", "organizations_url": "https://api.github.com/users/Veykril/orgs", "repos_url": "https://api.github.com/users/Veykril/repos", "events_url": "https://api.github.com/users/Veykril/events{/privacy}", "received_events_url": "https://api.github.com/users/Veykril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a35687fe1f96a2a297822a89bcc9136d8bdf864c", "url": "https://api.github.com/repos/rust-lang/rust/commits/a35687fe1f96a2a297822a89bcc9136d8bdf864c", "html_url": "https://github.com/rust-lang/rust/commit/a35687fe1f96a2a297822a89bcc9136d8bdf864c"}], "stats": {"total": 455, "additions": 72, "deletions": 383}, "files": [{"sha": "10fceda71c30b4c5f9a9ca44ad38c0e425cdf004", "filename": "crates/ide/src/doc_links.rs", "status": "modified", "additions": 72, "deletions": 0, "changes": 72, "blob_url": "https://github.com/rust-lang/rust/blob/bb71ebb985bc7869028d922d37d1edc4464e4aa8/crates%2Fide%2Fsrc%2Fdoc_links.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bb71ebb985bc7869028d922d37d1edc4464e4aa8/crates%2Fide%2Fsrc%2Fdoc_links.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fdoc_links.rs?ref=bb71ebb985bc7869028d922d37d1edc4464e4aa8", "patch": "@@ -602,6 +602,78 @@ trait Trait$0 {\n         )\n     }\n \n+    #[test]\n+    fn test_rewrite_html_root_url() {\n+        check_rewrite(\n+            r#\"\n+#![doc(arbitrary_attribute = \"test\", html_root_url = \"https:/example.com\", arbitrary_attribute2)]\n+\n+pub mod foo {\n+    pub struct Foo;\n+}\n+/// [Foo](foo::Foo)\n+pub struct B$0ar\n+\"#,\n+            expect![[r#\"[Foo](https://example.com/test/foo/struct.Foo.html)\"#]],\n+        );\n+    }\n+\n+    #[test]\n+    fn test_rewrite_on_field() {\n+        // FIXME: Should be\n+        //  [Foo](https://docs.rs/test/*/test/struct.Foo.html)\n+        check_rewrite(\n+            r#\"\n+pub struct Foo {\n+    /// [Foo](struct.Foo.html)\n+    fie$0ld: ()\n+}\n+\"#,\n+            expect![[r#\"[Foo](struct.Foo.html)\"#]],\n+        );\n+    }\n+\n+    #[test]\n+    fn test_rewrite_struct() {\n+        check_rewrite(\n+            r#\"\n+/// [Foo]\n+pub struct $0Foo;\n+\"#,\n+            expect![[r#\"[Foo](https://docs.rs/test/*/test/struct.Foo.html)\"#]],\n+        );\n+        check_rewrite(\n+            r#\"\n+/// [`Foo`]\n+pub struct $0Foo;\n+\"#,\n+            expect![[r#\"[`Foo`](https://docs.rs/test/*/test/struct.Foo.html)\"#]],\n+        );\n+        check_rewrite(\n+            r#\"\n+/// [Foo](struct.Foo.html)\n+pub struct $0Foo;\n+\"#,\n+            expect![[r#\"[Foo](https://docs.rs/test/*/test/struct.Foo.html)\"#]],\n+        );\n+        check_rewrite(\n+            r#\"\n+/// [struct Foo](struct.Foo.html)\n+pub struct $0Foo;\n+\"#,\n+            expect![[r#\"[struct Foo](https://docs.rs/test/*/test/struct.Foo.html)\"#]],\n+        );\n+        check_rewrite(\n+            r#\"\n+/// [my Foo][foo]\n+///\n+/// [foo]: Foo\n+pub struct $0Foo;\n+\"#,\n+            expect![[r#\"[my Foo](https://docs.rs/test/*/test/struct.Foo.html)\"#]],\n+        );\n+    }\n+\n     #[test]\n     fn test_rewrite() {\n         check_rewrite("}, {"sha": "653833dd346d03f910f07b1fd124f00a6cc5764d", "filename": "crates/ide/src/hover.rs", "status": "modified", "additions": 0, "deletions": 383, "changes": 383, "blob_url": "https://github.com/rust-lang/rust/blob/bb71ebb985bc7869028d922d37d1edc4464e4aa8/crates%2Fide%2Fsrc%2Fhover.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bb71ebb985bc7869028d922d37d1edc4464e4aa8/crates%2Fide%2Fsrc%2Fhover.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fhover.rs?ref=bb71ebb985bc7869028d922d37d1edc4464e4aa8", "patch": "@@ -1779,335 +1779,6 @@ fn foo() { let bar = Ba$0r; }\n         );\n     }\n \n-    #[test]\n-    fn test_hover_path_link() {\n-        check(\n-            r#\"\n-pub struct Foo;\n-/// [Foo](struct.Foo.html)\n-pub struct B$0ar\n-\"#,\n-            expect![[r#\"\n-                *Bar*\n-\n-                ```rust\n-                test\n-                ```\n-\n-                ```rust\n-                pub struct Bar\n-                ```\n-\n-                ---\n-\n-                [Foo](https://docs.rs/test/*/test/struct.Foo.html)\n-            \"#]],\n-        );\n-    }\n-\n-    #[test]\n-    fn test_hover_path_link_no_strip() {\n-        check(\n-            r#\"\n-pub struct Foo;\n-/// [struct Foo](struct.Foo.html)\n-pub struct B$0ar\n-\"#,\n-            expect![[r#\"\n-                *Bar*\n-\n-                ```rust\n-                test\n-                ```\n-\n-                ```rust\n-                pub struct Bar\n-                ```\n-\n-                ---\n-\n-                [struct Foo](https://docs.rs/test/*/test/struct.Foo.html)\n-            \"#]],\n-        );\n-    }\n-\n-    #[test]\n-    fn test_hover_path_link_field() {\n-        // FIXME: Should be\n-        //  [Foo](https://docs.rs/test/*/test/struct.Foo.html)\n-        check(\n-            r#\"\n-pub struct Foo;\n-pub struct Bar {\n-    /// [Foo](struct.Foo.html)\n-    fie$0ld: ()\n-}\n-\"#,\n-            expect![[r#\"\n-                *field*\n-\n-                ```rust\n-                test::Bar\n-                ```\n-\n-                ```rust\n-                field: ()\n-                ```\n-\n-                ---\n-\n-                [Foo](struct.Foo.html)\n-            \"#]],\n-        );\n-    }\n-\n-    #[test]\n-    fn test_hover_intra_link() {\n-        check(\n-            r#\"\n-pub mod foo {\n-    pub struct Foo;\n-}\n-/// [Foo](foo::Foo)\n-pub struct B$0ar\n-\"#,\n-            expect![[r#\"\n-                *Bar*\n-\n-                ```rust\n-                test\n-                ```\n-\n-                ```rust\n-                pub struct Bar\n-                ```\n-\n-                ---\n-\n-                [Foo](https://docs.rs/test/*/test/foo/struct.Foo.html)\n-            \"#]],\n-        );\n-    }\n-\n-    #[test]\n-    fn test_hover_intra_link_html_root_url() {\n-        check(\n-            r#\"\n-#![doc(arbitrary_attribute = \"test\", html_root_url = \"https:/example.com\", arbitrary_attribute2)]\n-\n-pub mod foo {\n-    pub struct Foo;\n-}\n-/// [Foo](foo::Foo)\n-pub struct B$0ar\n-\"#,\n-            expect![[r#\"\n-                *Bar*\n-\n-                ```rust\n-                test\n-                ```\n-\n-                ```rust\n-                pub struct Bar\n-                ```\n-\n-                ---\n-\n-                [Foo](https://example.com/test/foo/struct.Foo.html)\n-            \"#]],\n-        );\n-    }\n-\n-    #[test]\n-    fn test_hover_intra_link_shortlink() {\n-        check(\n-            r#\"\n-pub struct Foo;\n-/// [Foo]\n-pub struct B$0ar\n-\"#,\n-            expect![[r#\"\n-                *Bar*\n-\n-                ```rust\n-                test\n-                ```\n-\n-                ```rust\n-                pub struct Bar\n-                ```\n-\n-                ---\n-\n-                [Foo](https://docs.rs/test/*/test/struct.Foo.html)\n-            \"#]],\n-        );\n-    }\n-\n-    #[test]\n-    fn test_hover_intra_link_shortlink_code() {\n-        check(\n-            r#\"\n-pub struct Foo;\n-/// [`Foo`]\n-pub struct B$0ar\n-\"#,\n-            expect![[r#\"\n-                *Bar*\n-\n-                ```rust\n-                test\n-                ```\n-\n-                ```rust\n-                pub struct Bar\n-                ```\n-\n-                ---\n-\n-                [`Foo`](https://docs.rs/test/*/test/struct.Foo.html)\n-            \"#]],\n-        );\n-    }\n-\n-    #[test]\n-    fn test_hover_intra_link_namespaced() {\n-        check(\n-            r#\"\n-pub struct Foo;\n-fn Foo() {}\n-/// [Foo()]\n-pub struct B$0ar\n-\"#,\n-            expect![[r#\"\n-                *Bar*\n-\n-                ```rust\n-                test\n-                ```\n-\n-                ```rust\n-                pub struct Bar\n-                ```\n-\n-                ---\n-\n-                [Foo](https://docs.rs/test/*/test/struct.Foo.html)\n-            \"#]],\n-        );\n-    }\n-\n-    #[test]\n-    fn test_hover_intra_link_shortlink_namspaced_code() {\n-        check(\n-            r#\"\n-pub struct Foo;\n-/// [`struct Foo`]\n-pub struct B$0ar\n-\"#,\n-            expect![[r#\"\n-                *Bar*\n-\n-                ```rust\n-                test\n-                ```\n-\n-                ```rust\n-                pub struct Bar\n-                ```\n-\n-                ---\n-\n-                [`Foo`](https://docs.rs/test/*/test/struct.Foo.html)\n-            \"#]],\n-        );\n-    }\n-\n-    #[test]\n-    fn test_hover_intra_link_shortlink_namspaced_code_with_at() {\n-        check(\n-            r#\"\n-pub struct Foo;\n-/// [`struct@Foo`]\n-pub struct B$0ar\n-\"#,\n-            expect![[r#\"\n-                *Bar*\n-\n-                ```rust\n-                test\n-                ```\n-\n-                ```rust\n-                pub struct Bar\n-                ```\n-\n-                ---\n-\n-                [`Foo`](https://docs.rs/test/*/test/struct.Foo.html)\n-            \"#]],\n-        );\n-    }\n-\n-    #[test]\n-    fn test_hover_intra_link_reference() {\n-        check(\n-            r#\"\n-pub struct Foo;\n-/// [my Foo][foo]\n-///\n-/// [foo]: Foo\n-pub struct B$0ar\n-\"#,\n-            expect![[r#\"\n-                *Bar*\n-\n-                ```rust\n-                test\n-                ```\n-\n-                ```rust\n-                pub struct Bar\n-                ```\n-\n-                ---\n-\n-                [my Foo](https://docs.rs/test/*/test/struct.Foo.html)\n-            \"#]],\n-        );\n-    }\n-\n-    #[test]\n-    fn test_hover_intra_link_reference_to_trait_method() {\n-        check(\n-            r#\"\n-pub trait Foo {\n-    fn buzz() -> usize;\n-}\n-/// [Foo][buzz]\n-///\n-/// [buzz]: Foo::buzz\n-pub struct B$0ar\n-\"#,\n-            expect![[r##\"\n-                *Bar*\n-\n-                ```rust\n-                test\n-                ```\n-\n-                ```rust\n-                pub struct Bar\n-                ```\n-\n-                ---\n-\n-                [Foo](https://docs.rs/test/*/test/trait.Foo.html#tymethod.buzz)\n-            \"##]],\n-        );\n-    }\n-\n     #[test]\n     fn test_hover_external_url() {\n         check(\n@@ -2161,60 +1832,6 @@ pub struct B$0ar\n         );\n     }\n \n-    #[test]\n-    fn test_doc_links_enum_variant() {\n-        check(\n-            r#\"\n-enum E {\n-    /// [E]\n-    V$0 { field: i32 }\n-}\n-\"#,\n-            expect![[r#\"\n-                *V*\n-\n-                ```rust\n-                test::E\n-                ```\n-\n-                ```rust\n-                V { field: i32 }\n-                ```\n-\n-                ---\n-\n-                [E](https://docs.rs/test/*/test/enum.E.html)\n-            \"#]],\n-        );\n-    }\n-\n-    #[test]\n-    fn test_doc_links_field() {\n-        check(\n-            r#\"\n-struct S {\n-    /// [`S`]\n-    field$0: i32\n-}\n-\"#,\n-            expect![[r#\"\n-                *field*\n-\n-                ```rust\n-                test::S\n-                ```\n-\n-                ```rust\n-                field: i32\n-                ```\n-\n-                ---\n-\n-                [`S`](https://docs.rs/test/*/test/struct.S.html)\n-            \"#]],\n-        );\n-    }\n-\n     #[test]\n     fn test_hover_no_links() {\n         check_hover_no_links("}]}