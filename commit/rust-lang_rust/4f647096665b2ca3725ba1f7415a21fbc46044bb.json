{"sha": "4f647096665b2ca3725ba1f7415a21fbc46044bb", "node_id": "MDY6Q29tbWl0NzI0NzEyOjRmNjQ3MDk2NjY1YjJjYTM3MjViYTFmNzQxNWEyMWZiYzQ2MDQ0YmI=", "commit": {"author": {"name": "bors[bot]", "email": "bors[bot]@users.noreply.github.com", "date": "2018-09-08T16:24:24Z"}, "committer": {"name": "bors[bot]", "email": "bors[bot]@users.noreply.github.com", "date": "2018-09-08T16:24:24Z"}, "message": "Merge #65\n\n65: simplify r=matklad a=matklad\n\n\n\nCo-authored-by: Aleksey Kladov <aleksey.kladov@gmail.com>", "tree": {"sha": "c62319bde31a42a49152b6ebb187c873702dcdbf", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c62319bde31a42a49152b6ebb187c873702dcdbf"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4f647096665b2ca3725ba1f7415a21fbc46044bb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4f647096665b2ca3725ba1f7415a21fbc46044bb", "html_url": "https://github.com/rust-lang/rust/commit/4f647096665b2ca3725ba1f7415a21fbc46044bb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4f647096665b2ca3725ba1f7415a21fbc46044bb/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "parents": [{"sha": "8c3720d4b843808b7c8de2ac87642611c993fc44", "url": "https://api.github.com/repos/rust-lang/rust/commits/8c3720d4b843808b7c8de2ac87642611c993fc44", "html_url": "https://github.com/rust-lang/rust/commit/8c3720d4b843808b7c8de2ac87642611c993fc44"}, {"sha": "bae5938682978cff84826cee300d6cfad1b9dbd0", "url": "https://api.github.com/repos/rust-lang/rust/commits/bae5938682978cff84826cee300d6cfad1b9dbd0", "html_url": "https://github.com/rust-lang/rust/commit/bae5938682978cff84826cee300d6cfad1b9dbd0"}], "stats": {"total": 18, "additions": 11, "deletions": 7}, "files": [{"sha": "deb4a918cf285e32878c7823519b347b6e670c5d", "filename": "README.md", "status": "modified", "additions": 10, "deletions": 6, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/4f647096665b2ca3725ba1f7415a21fbc46044bb/README.md", "raw_url": "https://github.com/rust-lang/rust/raw/4f647096665b2ca3725ba1f7415a21fbc46044bb/README.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/README.md?ref=4f647096665b2ca3725ba1f7415a21fbc46044bb", "patch": "@@ -37,24 +37,28 @@ doesn't hurt too much :-)\n \n * syntax highlighting (LSP does not have API for it, so impl is hacky\n   and sometimes fall-backs to the horrible built-in highlighting)\n-  \n+\n * commands (`ctrl+shift+p` or keybindings)\n   - **Show Rust Syntax Tree** (use it to verify that plugin works)\n   - **Rust Extend Selection** (works with multiple cursors)\n   - **Rust Matching Brace** (knows the difference between `<` and `<`)\n   - **Rust Parent Module**\n   - **Rust Join Lines** (deals with trailing commas)\n-  \n+\n * **Go to symbol in file**\n \n-* **Go to symbol in workspace** (no support for Cargo deps yet)\n+* **Go to symbol in workspace**\n+  - `#Foo` searches for `Foo` type in the current workspace\n+  - `#foo#` searches for `foo` function in the current workspace\n+  - `#Foo*` searches for `Foo` type among dependencies, excluding `stdlib`\n+  - Sorry for a weired UI, neither LSP, not VSCode have any sane API for filtering! :)\n \n * code actions:\n   - Flip `,` in comma separated lists\n   - Add `#[derive]` to struct/enum\n   - Add `impl` block to struct/enum\n   - Run tests at caret\n-  \n+\n * **Go to definition** (\"correct\" for `mod foo;` decls, index-based for functions).\n \n \n@@ -71,7 +75,7 @@ doesn't hurt too much :-)\n   space tree traversal (this is cool) and `visit` for type-driven\n   visiting the nodes (this is double plus cool, if you understand how\n   `Visitor` works, you understand libsyntax2).\n-  \n+\n \n ### `crates/libeditor`\n \n@@ -84,7 +88,7 @@ single-file and is basically a bunch of pure functions.\n A stateful library for analyzing many Rust files as they change.\n `WorldState` is a mutable entity (clojure's atom) which holds current\n state, incorporates changes and handles out `World`s --- immutable\n-consistent snapshots of `WorldState`, which actually power analysis. \n+consistent snapshots of `WorldState`, which actually power analysis.\n \n \n ### `crates/server`"}, {"sha": "772d753afa3a6905a1272127178d09713660488f", "filename": "crates/libsyntax2/src/parser_api.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4f647096665b2ca3725ba1f7415a21fbc46044bb/crates%2Flibsyntax2%2Fsrc%2Fparser_api.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4f647096665b2ca3725ba1f7415a21fbc46044bb/crates%2Flibsyntax2%2Fsrc%2Fparser_api.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Flibsyntax2%2Fsrc%2Fparser_api.rs?ref=4f647096665b2ca3725ba1f7415a21fbc46044bb", "patch": "@@ -118,7 +118,7 @@ impl<'t> Parser<'t> {\n     pub(crate) fn err_recover(&mut self, message: &str, recovery: TokenSet) {\n         if self.at(SyntaxKind::L_CURLY)\n             || self.at(SyntaxKind::R_CURLY)\n-            || recovery.contains(self.current()) {\n+            || self.at_ts(recovery) {\n             self.error(message);\n         } else {\n             let m = self.start();"}]}