{"sha": "70121941fffce3292e45b40c84d263af5bffb109", "node_id": "MDY6Q29tbWl0NzI0NzEyOjcwMTIxOTQxZmZmY2UzMjkyZTQ1YjQwYzg0ZDI2M2FmNWJmZmIxMDk=", "commit": {"author": {"name": "Ian Jackson", "email": "ijackson@chiark.greenend.org.uk", "date": "2021-01-04T17:11:41Z"}, "committer": {"name": "Ian Jackson", "email": "ijackson@chiark.greenend.org.uk", "date": "2021-01-13T12:50:29Z"}, "message": "ExitStatusExt unix: Retrospectively seal this trait\n\nAs discussed in #79982.\n\nI think the \"new interfaces\", ie the new trait and impl, must be\ninsta-stable.  This seems OK because we are, in fact, adding a new\nrestriction to the stable API.\n\nSigned-off-by: Ian Jackson <ijackson@chiark.greenend.org.uk>", "tree": {"sha": "d8886fd96c60a59d4b75a1b5b91a92a725e77df9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d8886fd96c60a59d4b75a1b5b91a92a725e77df9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/70121941fffce3292e45b40c84d263af5bffb109", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/70121941fffce3292e45b40c84d263af5bffb109", "html_url": "https://github.com/rust-lang/rust/commit/70121941fffce3292e45b40c84d263af5bffb109", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/70121941fffce3292e45b40c84d263af5bffb109/comments", "author": {"login": "ijackson", "id": 2090772, "node_id": "MDQ6VXNlcjIwOTA3NzI=", "avatar_url": "https://avatars.githubusercontent.com/u/2090772?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ijackson", "html_url": "https://github.com/ijackson", "followers_url": "https://api.github.com/users/ijackson/followers", "following_url": "https://api.github.com/users/ijackson/following{/other_user}", "gists_url": "https://api.github.com/users/ijackson/gists{/gist_id}", "starred_url": "https://api.github.com/users/ijackson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ijackson/subscriptions", "organizations_url": "https://api.github.com/users/ijackson/orgs", "repos_url": "https://api.github.com/users/ijackson/repos", "events_url": "https://api.github.com/users/ijackson/events{/privacy}", "received_events_url": "https://api.github.com/users/ijackson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ijackson", "id": 2090772, "node_id": "MDQ6VXNlcjIwOTA3NzI=", "avatar_url": "https://avatars.githubusercontent.com/u/2090772?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ijackson", "html_url": "https://github.com/ijackson", "followers_url": "https://api.github.com/users/ijackson/followers", "following_url": "https://api.github.com/users/ijackson/following{/other_user}", "gists_url": "https://api.github.com/users/ijackson/gists{/gist_id}", "starred_url": "https://api.github.com/users/ijackson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ijackson/subscriptions", "organizations_url": "https://api.github.com/users/ijackson/orgs", "repos_url": "https://api.github.com/users/ijackson/repos", "events_url": "https://api.github.com/users/ijackson/events{/privacy}", "received_events_url": "https://api.github.com/users/ijackson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fa68567a1fa87e92ad39b1749a134faedbbeae48", "url": "https://api.github.com/repos/rust-lang/rust/commits/fa68567a1fa87e92ad39b1749a134faedbbeae48", "html_url": "https://github.com/rust-lang/rust/commit/fa68567a1fa87e92ad39b1749a134faedbbeae48"}], "stats": {"total": 16, "additions": 15, "deletions": 1}, "files": [{"sha": "a72417818d066fb5eebc4421fd0a8094c4d1e869", "filename": "library/std/src/sys/unix/ext/process.rs", "status": "modified", "additions": 15, "deletions": 1, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/70121941fffce3292e45b40c84d263af5bffb109/library%2Fstd%2Fsrc%2Fsys%2Funix%2Fext%2Fprocess.rs", "raw_url": "https://github.com/rust-lang/rust/raw/70121941fffce3292e45b40c84d263af5bffb109/library%2Fstd%2Fsrc%2Fsys%2Funix%2Fext%2Fprocess.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsys%2Funix%2Fext%2Fprocess.rs?ref=70121941fffce3292e45b40c84d263af5bffb109", "patch": "@@ -9,6 +9,14 @@ use crate::process;\n use crate::sys;\n use crate::sys_common::{AsInner, AsInnerMut, FromInner, IntoInner};\n \n+mod private {\n+    /// This trait being unreachable from outside the crate\n+    /// prevents other implementations of the `ExitStatusExt` trait,\n+    /// which allows potentially adding more trait methods in the future.\n+    #[stable(feature = \"none\", since = \"1.51.0\")]\n+    pub trait Sealed {}\n+}\n+\n /// Unix-specific extensions to the [`process::Command`] builder.\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n pub trait CommandExt {\n@@ -163,8 +171,11 @@ impl CommandExt for process::Command {\n }\n \n /// Unix-specific extensions to [`process::ExitStatus`].\n+///\n+/// This trait is saeled (since Rust 1.51): it cannot be implemented outside the standard library.\n+/// This is so that future additional methods are not breaking changes.\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n-pub trait ExitStatusExt {\n+pub trait ExitStatusExt: private::Sealed {\n     /// Creates a new `ExitStatus` from the raw underlying `i32` return value of\n     /// a process.\n     #[stable(feature = \"exit_status_from\", since = \"1.12.0\")]\n@@ -199,6 +210,9 @@ pub trait ExitStatusExt {\n     fn into_raw(self) -> i32;\n }\n \n+#[stable(feature = \"none\", since = \"1.51.0\")]\n+impl private::Sealed for process::ExitStatus {}\n+\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n impl ExitStatusExt for process::ExitStatus {\n     fn from_raw(raw: i32) -> Self {"}]}