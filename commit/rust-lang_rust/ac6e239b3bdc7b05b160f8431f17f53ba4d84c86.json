{"sha": "ac6e239b3bdc7b05b160f8431f17f53ba4d84c86", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFjNmUyMzliM2JkYzdiMDViMTYwZjg0MzFmMTdmNTNiYTRkODRjODY=", "commit": {"author": {"name": "Yuki Okushi", "email": "jtitor@2k36.org", "date": "2021-06-07T06:20:56Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-06-07T06:20:56Z"}, "message": "Rollup merge of #84262 - camelid:sized-ice, r=estebank\n\nFix ICE during type layout when there's a `[type error]`\n\nFixes #84108.\n\nBased on estebank's [comment], except I used `delay_span_bug` because it\nshould work in more cases, and I think it expresses its intent more\nclearly.\n\nr? `@estebank`\n\n[comment]: https://github.com/rust-lang/rust/issues/84108#issuecomment-818916848", "tree": {"sha": "a5791bf1994a258d1c4fb725e087172d7b3c6d1a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a5791bf1994a258d1c4fb725e087172d7b3c6d1a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ac6e239b3bdc7b05b160f8431f17f53ba4d84c86", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJgvbrKCRBK7hj4Ov3rIwAAYGkIAK5WP2DpaNz8izAdpPFblyIY\nqkupgCDn7r1FaNt+s7i1cWgH2A19LRAIWF2uwhztbOV8XPDA6PSCmNqqnz5I6ldF\nGRGUcH1F+94vPzEbeYccDkvekjkOucg8cmWGKFdGbnh9QCwY4YT/Hj1OynyHvYNc\n7EYtheqYNDwF8079gy4tqd+dcqxDi4zhMAEXJjxhFQBxoRUwmIS9DFil5PbfnOdp\n87Axrc1h3ICH6V7VSUhWdM6fdQqsCDDB+/A7O7U0LmigsVTCSM5i26pYy6wULeqB\n+1h66EYZ6I+6biBo+TcxUV4bckard6SE+8Qxx6pr4A4J/Dto+1XfUNd2nk0nKAI=\n=OKQj\n-----END PGP SIGNATURE-----\n", "payload": "tree a5791bf1994a258d1c4fb725e087172d7b3c6d1a\nparent cc9610bf5af1d5c54968db0dd899595ca12307a0\nparent c30eac51c4406abe916479f49210beee9abd38b7\nauthor Yuki Okushi <jtitor@2k36.org> 1623046856 +0900\ncommitter GitHub <noreply@github.com> 1623046856 +0900\n\nRollup merge of #84262 - camelid:sized-ice, r=estebank\n\nFix ICE during type layout when there's a `[type error]`\n\nFixes #84108.\n\nBased on estebank's [comment], except I used `delay_span_bug` because it\nshould work in more cases, and I think it expresses its intent more\nclearly.\n\nr? `@estebank`\n\n[comment]: https://github.com/rust-lang/rust/issues/84108#issuecomment-818916848\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ac6e239b3bdc7b05b160f8431f17f53ba4d84c86", "html_url": "https://github.com/rust-lang/rust/commit/ac6e239b3bdc7b05b160f8431f17f53ba4d84c86", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ac6e239b3bdc7b05b160f8431f17f53ba4d84c86/comments", "author": {"login": "JohnTitor", "id": 25030997, "node_id": "MDQ6VXNlcjI1MDMwOTk3", "avatar_url": "https://avatars.githubusercontent.com/u/25030997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JohnTitor", "html_url": "https://github.com/JohnTitor", "followers_url": "https://api.github.com/users/JohnTitor/followers", "following_url": "https://api.github.com/users/JohnTitor/following{/other_user}", "gists_url": "https://api.github.com/users/JohnTitor/gists{/gist_id}", "starred_url": "https://api.github.com/users/JohnTitor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JohnTitor/subscriptions", "organizations_url": "https://api.github.com/users/JohnTitor/orgs", "repos_url": "https://api.github.com/users/JohnTitor/repos", "events_url": "https://api.github.com/users/JohnTitor/events{/privacy}", "received_events_url": "https://api.github.com/users/JohnTitor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cc9610bf5af1d5c54968db0dd899595ca12307a0", "url": "https://api.github.com/repos/rust-lang/rust/commits/cc9610bf5af1d5c54968db0dd899595ca12307a0", "html_url": "https://github.com/rust-lang/rust/commit/cc9610bf5af1d5c54968db0dd899595ca12307a0"}, {"sha": "c30eac51c4406abe916479f49210beee9abd38b7", "url": "https://api.github.com/repos/rust-lang/rust/commits/c30eac51c4406abe916479f49210beee9abd38b7", "html_url": "https://github.com/rust-lang/rust/commit/c30eac51c4406abe916479f49210beee9abd38b7"}], "stats": {"total": 67, "additions": 66, "deletions": 1}, "files": [{"sha": "28a44b09de2b112ce0e8a366ca541b3ef51329d6", "filename": "compiler/rustc_middle/src/ty/layout.rs", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/ac6e239b3bdc7b05b160f8431f17f53ba4d84c86/compiler%2Frustc_middle%2Fsrc%2Fty%2Flayout.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ac6e239b3bdc7b05b160f8431f17f53ba4d84c86/compiler%2Frustc_middle%2Fsrc%2Fty%2Flayout.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fty%2Flayout.rs?ref=ac6e239b3bdc7b05b160f8431f17f53ba4d84c86", "patch": "@@ -367,7 +367,14 @@ impl<'tcx> LayoutCx<'tcx, TyCtxt<'tcx>> {\n         for &i in &inverse_memory_index {\n             let field = fields[i as usize];\n             if !sized {\n-                bug!(\"univariant: field #{} of `{}` comes after unsized field\", offsets.len(), ty);\n+                self.tcx.sess.delay_span_bug(\n+                    DUMMY_SP,\n+                    &format!(\n+                        \"univariant: field #{} of `{}` comes after unsized field\",\n+                        offsets.len(),\n+                        ty\n+                    ),\n+                );\n             }\n \n             if field.is_unsized() {"}, {"sha": "dd025c9b443f882c14731d663726798160dfbe37", "filename": "src/test/ui/layout/issue-84108.rs", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/ac6e239b3bdc7b05b160f8431f17f53ba4d84c86/src%2Ftest%2Fui%2Flayout%2Fissue-84108.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ac6e239b3bdc7b05b160f8431f17f53ba4d84c86/src%2Ftest%2Fui%2Flayout%2Fissue-84108.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flayout%2Fissue-84108.rs?ref=ac6e239b3bdc7b05b160f8431f17f53ba4d84c86", "patch": "@@ -0,0 +1,14 @@\n+// See issue #84108 -- this is a test to ensure we do not ICE\n+// on this invalid code.\n+\n+#![crate_type = \"lib\"]\n+\n+static FOO: (dyn AsRef<OsStr>, u8) = (\"hello\", 42);\n+//~^ ERROR cannot find type `OsStr` in this scope\n+\n+const BAR: (&Path, [u8], usize) = (\"hello\", [], 42);\n+//~^ ERROR cannot find type `Path` in this scope\n+//~| ERROR the size for values of type `[u8]` cannot be known at compilation time\n+\n+static BAZ: ([u8], usize) = ([], 0);\n+//~^ ERROR the size for values of type `[u8]` cannot be known at compilation time"}, {"sha": "36be6424110091689fb354df985c847834ec631f", "filename": "src/test/ui/layout/issue-84108.stderr", "status": "added", "additions": 44, "deletions": 0, "changes": 44, "blob_url": "https://github.com/rust-lang/rust/blob/ac6e239b3bdc7b05b160f8431f17f53ba4d84c86/src%2Ftest%2Fui%2Flayout%2Fissue-84108.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/ac6e239b3bdc7b05b160f8431f17f53ba4d84c86/src%2Ftest%2Fui%2Flayout%2Fissue-84108.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flayout%2Fissue-84108.stderr?ref=ac6e239b3bdc7b05b160f8431f17f53ba4d84c86", "patch": "@@ -0,0 +1,44 @@\n+error[E0412]: cannot find type `OsStr` in this scope\n+  --> $DIR/issue-84108.rs:6:24\n+   |\n+LL | static FOO: (dyn AsRef<OsStr>, u8) = (\"hello\", 42);\n+   |                        ^^^^^ not found in this scope\n+   |\n+help: consider importing this struct\n+   |\n+LL | use std::ffi::OsStr;\n+   |\n+\n+error[E0412]: cannot find type `Path` in this scope\n+  --> $DIR/issue-84108.rs:9:14\n+   |\n+LL | const BAR: (&Path, [u8], usize) = (\"hello\", [], 42);\n+   |              ^^^^ not found in this scope\n+   |\n+help: consider importing this struct\n+   |\n+LL | use std::path::Path;\n+   |\n+\n+error[E0277]: the size for values of type `[u8]` cannot be known at compilation time\n+  --> $DIR/issue-84108.rs:9:12\n+   |\n+LL | const BAR: (&Path, [u8], usize) = (\"hello\", [], 42);\n+   |            ^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time\n+   |\n+   = help: the trait `Sized` is not implemented for `[u8]`\n+   = note: only the last element of a tuple may have a dynamically sized type\n+\n+error[E0277]: the size for values of type `[u8]` cannot be known at compilation time\n+  --> $DIR/issue-84108.rs:13:13\n+   |\n+LL | static BAZ: ([u8], usize) = ([], 0);\n+   |             ^^^^^^^^^^^^^ doesn't have a size known at compile-time\n+   |\n+   = help: the trait `Sized` is not implemented for `[u8]`\n+   = note: only the last element of a tuple may have a dynamically sized type\n+\n+error: aborting due to 4 previous errors\n+\n+Some errors have detailed explanations: E0277, E0412.\n+For more information about an error, try `rustc --explain E0277`."}]}