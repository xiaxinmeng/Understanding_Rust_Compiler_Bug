{"sha": "c8cdabc32fc7c6a5c3b01ef24340bc2f4b1ae359", "node_id": "MDY6Q29tbWl0NzI0NzEyOmM4Y2RhYmMzMmZjN2M2YTVjM2IwMWVmMjQzNDBiYzJmNGIxYWUzNTk=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2013-10-01T18:26:27Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2013-10-01T18:26:27Z"}, "message": "auto merge of #9633 : alexcrichton/rust/issue-9631, r=huonw\n\nCloses #9631", "tree": {"sha": "333abfadefa05bf675f8368212f5a3d0558ae7bc", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/333abfadefa05bf675f8368212f5a3d0558ae7bc"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c8cdabc32fc7c6a5c3b01ef24340bc2f4b1ae359", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c8cdabc32fc7c6a5c3b01ef24340bc2f4b1ae359", "html_url": "https://github.com/rust-lang/rust/commit/c8cdabc32fc7c6a5c3b01ef24340bc2f4b1ae359", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c8cdabc32fc7c6a5c3b01ef24340bc2f4b1ae359/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "24a253778aa26222cae97e3b57f85e5054a39977", "url": "https://api.github.com/repos/rust-lang/rust/commits/24a253778aa26222cae97e3b57f85e5054a39977", "html_url": "https://github.com/rust-lang/rust/commit/24a253778aa26222cae97e3b57f85e5054a39977"}, {"sha": "eafbcfb73cad912a0b2c2ec24f028257e5f2f999", "url": "https://api.github.com/repos/rust-lang/rust/commits/eafbcfb73cad912a0b2c2ec24f028257e5f2f999", "html_url": "https://github.com/rust-lang/rust/commit/eafbcfb73cad912a0b2c2ec24f028257e5f2f999"}], "stats": {"total": 43, "additions": 31, "deletions": 12}, "files": [{"sha": "11d9713af98f8bcbf075dfe8a34d9b5c4877658a", "filename": "src/libsyntax/ext/format.rs", "status": "modified", "additions": 16, "deletions": 12, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/c8cdabc32fc7c6a5c3b01ef24340bc2f4b1ae359/src%2Flibsyntax%2Fext%2Fformat.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c8cdabc32fc7c6a5c3b01ef24340bc2f4b1ae359/src%2Flibsyntax%2Fext%2Fformat.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Fformat.rs?ref=c8cdabc32fc7c6a5c3b01ef24340bc2f4b1ae359", "patch": "@@ -319,6 +319,17 @@ impl Context {\n         }\n     }\n \n+    /// These attributes are applied to all statics that this syntax extension\n+    /// will generate.\n+    fn static_attrs(&self) -> ~[ast::Attribute] {\n+        // Flag statics as `address_insignificant` so LLVM can merge duplicate\n+        // globals as much as possible (which we're generating a whole lot of).\n+        let unnamed = self.ecx.meta_word(self.fmtsp, @\"address_insignificant\");\n+        let unnamed = self.ecx.attribute(self.fmtsp, unnamed);\n+\n+        return ~[unnamed];\n+    }\n+\n     /// Translate a `parse::Piece` to a static `rt::Piece`\n     fn trans_piece(&mut self, piece: &parse::Piece) -> @ast::Expr {\n         let sp = self.fmtsp;\n@@ -444,14 +455,9 @@ impl Context {\n                 ~[]\n             ), None);\n             let st = ast::item_static(ty, ast::MutImmutable, method);\n-            let static_name = self.ecx.ident_of(format!(\"__static_method_{}\",\n+            let static_name = self.ecx.ident_of(format!(\"__STATIC_METHOD_{}\",\n                                                      self.method_statics.len()));\n-            // Flag these statics as `address_insignificant` so LLVM can\n-            // merge duplicate globals as much as possible (which we're\n-            // generating a whole lot of).\n-            let unnamed = self.ecx.meta_word(self.fmtsp, @\"address_insignificant\");\n-            let unnamed = self.ecx.attribute(self.fmtsp, unnamed);\n-            let item = self.ecx.item(sp, static_name, ~[unnamed], st);\n+            let item = self.ecx.item(sp, static_name, self.static_attrs(), st);\n             self.method_statics.push(item);\n             self.ecx.expr_ident(sp, static_name)\n         };\n@@ -572,11 +578,9 @@ impl Context {\n         );\n         let ty = self.ecx.ty(self.fmtsp, ty);\n         let st = ast::item_static(ty, ast::MutImmutable, fmt);\n-        let static_name = self.ecx.ident_of(\"__static_fmtstr\");\n-        // see above comment for `address_insignificant` and why we do it\n-        let unnamed = self.ecx.meta_word(self.fmtsp, @\"address_insignificant\");\n-        let unnamed = self.ecx.attribute(self.fmtsp, unnamed);\n-        let item = self.ecx.item(self.fmtsp, static_name, ~[unnamed], st);\n+        let static_name = self.ecx.ident_of(\"__STATIC_FMTSTR\");\n+        let item = self.ecx.item(self.fmtsp, static_name,\n+                                 self.static_attrs(), st);\n         let decl = respan(self.fmtsp, ast::DeclItem(item));\n         lets.push(@respan(self.fmtsp, ast::StmtDecl(@decl, ast::DUMMY_NODE_ID)));\n "}, {"sha": "585a61544cab9a6c3afcd0cd0865a4804188caf9", "filename": "src/test/run-pass/format-no-uppercase-statics.rs", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/c8cdabc32fc7c6a5c3b01ef24340bc2f4b1ae359/src%2Ftest%2Frun-pass%2Fformat-no-uppercase-statics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c8cdabc32fc7c6a5c3b01ef24340bc2f4b1ae359/src%2Ftest%2Frun-pass%2Fformat-no-uppercase-statics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fformat-no-uppercase-statics.rs?ref=c8cdabc32fc7c6a5c3b01ef24340bc2f4b1ae359", "patch": "@@ -0,0 +1,15 @@\n+// Copyright 2013 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#[deny(non_uppercase_statics)];\n+\n+pub fn main() {\n+    println!(\"I generate statics with {0, select, other{#}}\", \"weird names\");\n+}"}]}