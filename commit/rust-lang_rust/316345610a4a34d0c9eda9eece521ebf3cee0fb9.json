{"sha": "316345610a4a34d0c9eda9eece521ebf3cee0fb9", "node_id": "MDY6Q29tbWl0NzI0NzEyOjMxNjM0NTYxMGE0YTM0ZDBjOWVkYTllZWNlNTIxZWJmM2NlZTBmYjk=", "commit": {"author": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2013-12-23T00:41:37Z"}, "committer": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2013-12-23T17:10:37Z"}, "message": "doc: Expand rustdoc's documentation for testing", "tree": {"sha": "f9643f6c4135c8b509d0d50234f628018e00c3a0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f9643f6c4135c8b509d0d50234f628018e00c3a0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/316345610a4a34d0c9eda9eece521ebf3cee0fb9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/316345610a4a34d0c9eda9eece521ebf3cee0fb9", "html_url": "https://github.com/rust-lang/rust/commit/316345610a4a34d0c9eda9eece521ebf3cee0fb9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/316345610a4a34d0c9eda9eece521ebf3cee0fb9/comments", "author": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fe8b360c9dd1c18c788660a58cba65fccdb8cc46", "url": "https://api.github.com/repos/rust-lang/rust/commits/fe8b360c9dd1c18c788660a58cba65fccdb8cc46", "html_url": "https://github.com/rust-lang/rust/commit/fe8b360c9dd1c18c788660a58cba65fccdb8cc46"}], "stats": {"total": 89, "additions": 89, "deletions": 0}, "files": [{"sha": "1750d0990097ef19da34c1bbf974c9a5a33e84a1", "filename": "doc/rustdoc.md", "status": "modified", "additions": 89, "deletions": 0, "changes": 89, "blob_url": "https://github.com/rust-lang/rust/blob/316345610a4a34d0c9eda9eece521ebf3cee0fb9/doc%2Frustdoc.md", "raw_url": "https://github.com/rust-lang/rust/raw/316345610a4a34d0c9eda9eece521ebf3cee0fb9/doc%2Frustdoc.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/doc%2Frustdoc.md?ref=316345610a4a34d0c9eda9eece521ebf3cee0fb9", "patch": "@@ -85,3 +85,92 @@ javascript and a statically-generated search index. No special web server is\n required for the search.\n \n [sundown]: https://github.com/vmg/sundown/\n+\n+# Testing the Documentation\n+\n+`rustdoc` has support for testing code examples which appear in the\n+documentation. This is helpful for keeping code examples up to date with the\n+source code.\n+\n+To test documentation, the `--test` argument is passed to rustdoc:\n+\n+~~~\n+rustdoc --test crate.rs\n+~~~\n+\n+## Defining tests\n+\n+Rust documentation currently uses the markdown format, and code blocks can refer\n+to any piece of code-related documentation, which isn't always rust. Because of\n+this, only code blocks with the language of \"rust\" will be considered for\n+testing.\n+\n+~~~\n+```rust\n+// This is a testable code block\n+```\n+\n+```\n+// This is not a testable code block\n+```\n+\n+    // This is not a testable code block (4-space indent)\n+~~~\n+\n+In addition to only testing \"rust\"-language code blocks, there are additional\n+specifiers that can be used to dictate how a code block is tested:\n+\n+~~~\n+```rust,ignore\n+// This code block is ignored by rustdoc, but is passed through to the test\n+// harness\n+```\n+\n+```rust,should_fail\n+// This code block is expected to generate a failure\n+```\n+~~~\n+\n+Rustdoc also supplies some extra sugar for helping with some tedious\n+documentation examples. If a line os prefixed with a `#` character, then the\n+line will not show up in the HTML documentation, but it will be used when\n+testing the code block.\n+\n+~~~\n+```rust\n+# // showing 'fib' in this documentation would just be tedious and detracts from\n+# // what's actualy being documented.\n+# fn fib(n: int) { n + 2 }\n+\n+do spawn { fib(200); }\n+```\n+~~~\n+\n+The documentation online would look like `do spawn { fib(200); }`, but when\n+testing this code, the `fib` function will be included (so it can compile).\n+\n+## Running tests (advanced)\n+\n+Running tests often requires some special configuration to filter tests, find\n+libraries, or try running ignored examples. The testing framework that rustdoc\n+uses is build on `extra::test`, which is also used when you compile crates with\n+rustc's `--test` flag. Extra arguments can be passed to rustdoc's test harness\n+with the `--test-args` flag.\n+\n+~~~\n+// Only run tests containing 'foo' in their name\n+rustdoc --test lib.rs --test-args 'foo'\n+\n+// See what's possible when running tests\n+rustdoc --test lib.rs --test-args '--help'\n+\n+// Run all ignored tests\n+rustdoc --test lib.rs --test-args '--ignored'\n+~~~\n+\n+When testing a library, code examples will often show how functions are used,\n+and this code often requires `use`-ing paths from the crate. To accomodate this,\n+rustdoc will implicitly add `extern mod <crate>;` where `<crate>` is the name of\n+the crate being tested to the top of each code example. This means that rustdoc\n+must be able to find a compiled version of the library crate being tested. Extra\n+search paths may be added via the `-L` flag to `rustdoc`."}]}