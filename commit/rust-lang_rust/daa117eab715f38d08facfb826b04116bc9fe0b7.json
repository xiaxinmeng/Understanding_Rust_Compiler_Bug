{"sha": "daa117eab715f38d08facfb826b04116bc9fe0b7", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRhYTExN2VhYjcxNWYzOGQwOGZhY2ZiODI2YjA0MTE2YmM5ZmUwYjc=", "commit": {"author": {"name": "Nadrieril", "email": "nadrieril+git@gmail.com", "date": "2019-11-17T17:48:45Z"}, "committer": {"name": "Nadrieril", "email": "nadrieril+git@gmail.com", "date": "2019-11-17T17:59:37Z"}, "message": "Small improvement to exhaustiveness diagnostics", "tree": {"sha": "2f3f9fad5459e741392a3d246ac064b7efecf0bd", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2f3f9fad5459e741392a3d246ac064b7efecf0bd"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/daa117eab715f38d08facfb826b04116bc9fe0b7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/daa117eab715f38d08facfb826b04116bc9fe0b7", "html_url": "https://github.com/rust-lang/rust/commit/daa117eab715f38d08facfb826b04116bc9fe0b7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/daa117eab715f38d08facfb826b04116bc9fe0b7/comments", "author": {"login": "Nadrieril", "id": 6783654, "node_id": "MDQ6VXNlcjY3ODM2NTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/6783654?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Nadrieril", "html_url": "https://github.com/Nadrieril", "followers_url": "https://api.github.com/users/Nadrieril/followers", "following_url": "https://api.github.com/users/Nadrieril/following{/other_user}", "gists_url": "https://api.github.com/users/Nadrieril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Nadrieril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Nadrieril/subscriptions", "organizations_url": "https://api.github.com/users/Nadrieril/orgs", "repos_url": "https://api.github.com/users/Nadrieril/repos", "events_url": "https://api.github.com/users/Nadrieril/events{/privacy}", "received_events_url": "https://api.github.com/users/Nadrieril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Nadrieril", "id": 6783654, "node_id": "MDQ6VXNlcjY3ODM2NTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/6783654?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Nadrieril", "html_url": "https://github.com/Nadrieril", "followers_url": "https://api.github.com/users/Nadrieril/followers", "following_url": "https://api.github.com/users/Nadrieril/following{/other_user}", "gists_url": "https://api.github.com/users/Nadrieril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Nadrieril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Nadrieril/subscriptions", "organizations_url": "https://api.github.com/users/Nadrieril/orgs", "repos_url": "https://api.github.com/users/Nadrieril/repos", "events_url": "https://api.github.com/users/Nadrieril/events{/privacy}", "received_events_url": "https://api.github.com/users/Nadrieril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "54e97e889b97aa04d477329e26299a1bbc6fefe2", "url": "https://api.github.com/repos/rust-lang/rust/commits/54e97e889b97aa04d477329e26299a1bbc6fefe2", "html_url": "https://github.com/rust-lang/rust/commit/54e97e889b97aa04d477329e26299a1bbc6fefe2"}], "stats": {"total": 28, "additions": 20, "deletions": 8}, "files": [{"sha": "d379f606da4e17a36511eb2933f2ded732757ce6", "filename": "src/librustc_mir/hair/pattern/_match.rs", "status": "modified", "additions": 14, "deletions": 2, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/daa117eab715f38d08facfb826b04116bc9fe0b7/src%2Flibrustc_mir%2Fhair%2Fpattern%2F_match.rs", "raw_url": "https://github.com/rust-lang/rust/raw/daa117eab715f38d08facfb826b04116bc9fe0b7/src%2Flibrustc_mir%2Fhair%2Fpattern%2F_match.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fhair%2Fpattern%2F_match.rs?ref=daa117eab715f38d08facfb826b04116bc9fe0b7", "patch": "@@ -957,8 +957,20 @@ impl<'tcx> Constructor<'tcx> {\n                     PatKind::Slice { prefix: subpatterns.collect(), slice: None, suffix: vec![] }\n                 }\n                 VarLen(prefix, _) => {\n-                    let prefix = subpatterns.by_ref().take(prefix as usize).collect();\n-                    let suffix = subpatterns.collect();\n+                    let mut prefix: Vec<_> = subpatterns.by_ref().take(prefix as usize).collect();\n+                    let mut suffix: Vec<_> = subpatterns.collect();\n+                    if slice.array_len.is_some() {\n+                        // Improves diagnostics a bit: if the type is a known-size array, instead\n+                        // of reporting `[x, _, .., _, y]`, we prefer to report `[x, .., y]`.\n+                        // This is incorrect if the size is not known, since `[_, ..]` captures\n+                        // arrays of lengths `>= 1` whereas `[..]` captures any length.\n+                        while !suffix.is_empty() && suffix.first().unwrap().is_wildcard() {\n+                            suffix.remove(0);\n+                        }\n+                        while !prefix.is_empty() && prefix.last().unwrap().is_wildcard() {\n+                            prefix.pop();\n+                        }\n+                    }\n                     let wild = Pat::wildcard_from_ty(ty);\n                     PatKind::Slice { prefix, slice: Some(wild), suffix }\n                 }"}, {"sha": "eb3dfac950f798d3a3ddc24fbb87beddc1970bce", "filename": "src/test/ui/pattern/usefulness/slice-patterns-exhaustiveness.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/daa117eab715f38d08facfb826b04116bc9fe0b7/src%2Ftest%2Fui%2Fpattern%2Fusefulness%2Fslice-patterns-exhaustiveness.rs", "raw_url": "https://github.com/rust-lang/rust/raw/daa117eab715f38d08facfb826b04116bc9fe0b7/src%2Ftest%2Fui%2Fpattern%2Fusefulness%2Fslice-patterns-exhaustiveness.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fpattern%2Fusefulness%2Fslice-patterns-exhaustiveness.rs?ref=daa117eab715f38d08facfb826b04116bc9fe0b7", "patch": "@@ -12,11 +12,11 @@ fn main() {\n         [true, .., true] => {}\n     }\n     match s3 {\n-    //~^ ERROR `&[false, .., _]` not covered\n+    //~^ ERROR `&[false, ..]` not covered\n         [true, .., true] => {}\n     }\n     match s10 {\n-    //~^ ERROR `&[false, .., _]` not covered\n+    //~^ ERROR `&[false, ..]` not covered\n         [true, .., true] => {}\n     }\n "}, {"sha": "ebadedccfea217991f539bc1a2f7e73ac3b088ff", "filename": "src/test/ui/pattern/usefulness/slice-patterns-exhaustiveness.stderr", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/daa117eab715f38d08facfb826b04116bc9fe0b7/src%2Ftest%2Fui%2Fpattern%2Fusefulness%2Fslice-patterns-exhaustiveness.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/daa117eab715f38d08facfb826b04116bc9fe0b7/src%2Ftest%2Fui%2Fpattern%2Fusefulness%2Fslice-patterns-exhaustiveness.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fpattern%2Fusefulness%2Fslice-patterns-exhaustiveness.stderr?ref=daa117eab715f38d08facfb826b04116bc9fe0b7", "patch": "@@ -6,19 +6,19 @@ LL |     match s2 {\n    |\n    = help: ensure that all possible cases are being handled, possibly by adding wildcards or more match arms\n \n-error[E0004]: non-exhaustive patterns: `&[false, .., _]` not covered\n+error[E0004]: non-exhaustive patterns: `&[false, ..]` not covered\n   --> $DIR/slice-patterns-exhaustiveness.rs:14:11\n    |\n LL |     match s3 {\n-   |           ^^ pattern `&[false, .., _]` not covered\n+   |           ^^ pattern `&[false, ..]` not covered\n    |\n    = help: ensure that all possible cases are being handled, possibly by adding wildcards or more match arms\n \n-error[E0004]: non-exhaustive patterns: `&[false, .., _]` not covered\n+error[E0004]: non-exhaustive patterns: `&[false, ..]` not covered\n   --> $DIR/slice-patterns-exhaustiveness.rs:18:11\n    |\n LL |     match s10 {\n-   |           ^^^ pattern `&[false, .., _]` not covered\n+   |           ^^^ pattern `&[false, ..]` not covered\n    |\n    = help: ensure that all possible cases are being handled, possibly by adding wildcards or more match arms\n "}]}