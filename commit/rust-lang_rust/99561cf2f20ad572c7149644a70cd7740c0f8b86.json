{"sha": "99561cf2f20ad572c7149644a70cd7740c0f8b86", "node_id": "MDY6Q29tbWl0NzI0NzEyOjk5NTYxY2YyZjIwYWQ1NzJjNzE0OTY0NGE3MGNkNzc0MGMwZjhiODY=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2018-12-18T10:23:23Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2018-12-20T09:15:23Z"}, "message": "Add type alias", "tree": {"sha": "422844369082284d749079d8f9ce5428dd4fbdd2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/422844369082284d749079d8f9ce5428dd4fbdd2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/99561cf2f20ad572c7149644a70cd7740c0f8b86", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/99561cf2f20ad572c7149644a70cd7740c0f8b86", "html_url": "https://github.com/rust-lang/rust/commit/99561cf2f20ad572c7149644a70cd7740c0f8b86", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/99561cf2f20ad572c7149644a70cd7740c0f8b86/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2ae05a6163d8b15f3d8a18a2ab713d1fbd83c505", "url": "https://api.github.com/repos/rust-lang/rust/commits/2ae05a6163d8b15f3d8a18a2ab713d1fbd83c505", "html_url": "https://github.com/rust-lang/rust/commit/2ae05a6163d8b15f3d8a18a2ab713d1fbd83c505"}], "stats": {"total": 12, "additions": 8, "deletions": 4}, "files": [{"sha": "257f1bf538657c45180fa92328ac26399a532fc5", "filename": "crates/ra_vfs/src/io.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/99561cf2f20ad572c7149644a70cd7740c0f8b86/crates%2Fra_vfs%2Fsrc%2Fio.rs", "raw_url": "https://github.com/rust-lang/rust/raw/99561cf2f20ad572c7149644a70cd7740c0f8b86/crates%2Fra_vfs%2Fsrc%2Fio.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_vfs%2Fsrc%2Fio.rs?ref=99561cf2f20ad572c7149644a70cd7740c0f8b86", "patch": "@@ -19,7 +19,9 @@ pub enum FileEventKind {\n     Add(String),\n }\n \n-pub fn start() -> (Worker<PathBuf, (PathBuf, Vec<FileEvent>)>, WorkerHandle) {\n+pub(crate) type FsWorker = Worker<PathBuf, (PathBuf, Vec<FileEvent>)>;\n+\n+pub(crate) fn start() -> (FsWorker, WorkerHandle) {\n     thread_worker::spawn::<PathBuf, (PathBuf, Vec<FileEvent>), _>(\n         \"vfs\",\n         128,"}, {"sha": "d4ba2cb4550ffc7488049b59ce9a5c9c11cb1fbc", "filename": "crates/ra_vfs/src/lib.rs", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/99561cf2f20ad572c7149644a70cd7740c0f8b86/crates%2Fra_vfs%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/99561cf2f20ad572c7149644a70cd7740c0f8b86/crates%2Fra_vfs%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_vfs%2Fsrc%2Flib.rs?ref=99561cf2f20ad572c7149644a70cd7740c0f8b86", "patch": "@@ -27,10 +27,11 @@ use thread_worker::{WorkerHandle, Worker};\n \n use crate::{\n     arena::{ArenaId, Arena},\n-    io::FileEvent,\n+    io::{FileEvent, FsWorker},\n };\n \n-/// `RootFilter` is a predicate that checks if a file can belong to a root\n+/// `RootFilter` is a predicate that checks if a file can belong to a root. If\n+/// several filters match a file (nested dirs), the most nested one wins.\n struct RootFilter {\n     root: PathBuf,\n     file_filter: fn(&Path) -> bool,\n@@ -86,7 +87,7 @@ struct Vfs {\n     roots: Arena<VfsRoot, RootFilter>,\n     files: Arena<VfsFile, VfsFileData>,\n     // pending_changes: Vec<PendingChange>,\n-    worker: Worker<PathBuf, (PathBuf, Vec<FileEvent>)>,\n+    worker: FsWorker,\n     worker_handle: WorkerHandle,\n }\n \n@@ -101,6 +102,7 @@ impl Vfs {\n             worker_handle,\n         };\n \n+        // A hack to make nesting work.\n         roots.sort_by_key(|it| Reverse(it.as_os_str().len()));\n \n         for path in roots {"}]}