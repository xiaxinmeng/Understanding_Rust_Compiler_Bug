{"sha": "6eb1bd4c3e3ad9a28d0a3b0f1579a4769d9a88d2", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZlYjFiZDRjM2UzYWQ5YTI4ZDBhM2IwZjE1NzlhNDc2OWQ5YTg4ZDI=", "commit": {"author": {"name": "\u00d6mer Sinan A\u011facan", "email": "omeragacan@gmail.com", "date": "2021-02-08T07:43:54Z"}, "committer": {"name": "\u00d6mer Sinan A\u011facan", "email": "omeragacan@gmail.com", "date": "2021-02-08T07:46:19Z"}, "message": "parser: Fix panic in 'const impl' recovery\n\nThe panic happens when in recovery parsing a full `impl`\n(`parse_item_impl`) fails and we drop the `DiagnosticBuilder` for the\nrecovery suggestion and return the `parse_item_impl` error.\n\nWe now raise the original error \"expected identifier found `impl`\" when\nparsing the `impl` fails.\n\nNote that the regression test is slightly simplified version of the\noriginal repro in #81806, to make the error output smaller and more\nresilient to unrelated changes in parser error messages.\n\nFixes #81806", "tree": {"sha": "6b9617fdbfadb5ae72b10ccb0b9c488e21f31cbe", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6b9617fdbfadb5ae72b10ccb0b9c488e21f31cbe"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6eb1bd4c3e3ad9a28d0a3b0f1579a4769d9a88d2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6eb1bd4c3e3ad9a28d0a3b0f1579a4769d9a88d2", "html_url": "https://github.com/rust-lang/rust/commit/6eb1bd4c3e3ad9a28d0a3b0f1579a4769d9a88d2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6eb1bd4c3e3ad9a28d0a3b0f1579a4769d9a88d2/comments", "author": {"login": "osa1", "id": 448274, "node_id": "MDQ6VXNlcjQ0ODI3NA==", "avatar_url": "https://avatars.githubusercontent.com/u/448274?v=4", "gravatar_id": "", "url": "https://api.github.com/users/osa1", "html_url": "https://github.com/osa1", "followers_url": "https://api.github.com/users/osa1/followers", "following_url": "https://api.github.com/users/osa1/following{/other_user}", "gists_url": "https://api.github.com/users/osa1/gists{/gist_id}", "starred_url": "https://api.github.com/users/osa1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/osa1/subscriptions", "organizations_url": "https://api.github.com/users/osa1/orgs", "repos_url": "https://api.github.com/users/osa1/repos", "events_url": "https://api.github.com/users/osa1/events{/privacy}", "received_events_url": "https://api.github.com/users/osa1/received_events", "type": "User", "site_admin": false}, "committer": {"login": "osa1", "id": 448274, "node_id": "MDQ6VXNlcjQ0ODI3NA==", "avatar_url": "https://avatars.githubusercontent.com/u/448274?v=4", "gravatar_id": "", "url": "https://api.github.com/users/osa1", "html_url": "https://github.com/osa1", "followers_url": "https://api.github.com/users/osa1/followers", "following_url": "https://api.github.com/users/osa1/following{/other_user}", "gists_url": "https://api.github.com/users/osa1/gists{/gist_id}", "starred_url": "https://api.github.com/users/osa1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/osa1/subscriptions", "organizations_url": "https://api.github.com/users/osa1/orgs", "repos_url": "https://api.github.com/users/osa1/repos", "events_url": "https://api.github.com/users/osa1/events{/privacy}", "received_events_url": "https://api.github.com/users/osa1/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0b7a598e12649d7ab2415a82cbc3fea879fa9dab", "url": "https://api.github.com/repos/rust-lang/rust/commits/0b7a598e12649d7ab2415a82cbc3fea879fa9dab", "html_url": "https://github.com/rust-lang/rust/commit/0b7a598e12649d7ab2415a82cbc3fea879fa9dab"}], "stats": {"total": 36, "additions": 34, "deletions": 2}, "files": [{"sha": "ee2428624146848b069bc671a26aa102138d3412", "filename": "compiler/rustc_parse/src/parser/item.rs", "status": "modified", "additions": 12, "deletions": 2, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/6eb1bd4c3e3ad9a28d0a3b0f1579a4769d9a88d2/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fitem.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6eb1bd4c3e3ad9a28d0a3b0f1579a4769d9a88d2/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fitem.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fitem.rs?ref=6eb1bd4c3e3ad9a28d0a3b0f1579a4769d9a88d2", "patch": "@@ -1010,9 +1010,18 @@ impl<'a> Parser<'a> {\n     ) -> PResult<'a, ItemInfo> {\n         let impl_span = self.token.span;\n         let mut err = self.expected_ident_found();\n-        let mut impl_info = self.parse_item_impl(attrs, defaultness)?;\n+\n+        // Only try to recover if this is implementing a trait for a type\n+        let mut impl_info = match self.parse_item_impl(attrs, defaultness) {\n+            Ok(impl_info) => impl_info,\n+            Err(mut recovery_error) => {\n+                // Recovery failed, raise the \"expected identifier\" error\n+                recovery_error.cancel();\n+                return Err(err);\n+            }\n+        };\n+\n         match impl_info.1 {\n-            // only try to recover if this is implementing a trait for a type\n             ItemKind::Impl(box ImplKind {\n                 of_trait: Some(ref trai), ref mut constness, ..\n             }) => {\n@@ -1030,6 +1039,7 @@ impl<'a> Parser<'a> {\n             ItemKind::Impl { .. } => return Err(err),\n             _ => unreachable!(),\n         }\n+\n         Ok(impl_info)\n     }\n "}, {"sha": "ca86788dff79cadc781eaa731a4d2277804df8ac", "filename": "src/test/ui/parser/issue-81806.rs", "status": "added", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/6eb1bd4c3e3ad9a28d0a3b0f1579a4769d9a88d2/src%2Ftest%2Fui%2Fparser%2Fissue-81806.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6eb1bd4c3e3ad9a28d0a3b0f1579a4769d9a88d2/src%2Ftest%2Fui%2Fparser%2Fissue-81806.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fissue-81806.rs?ref=6eb1bd4c3e3ad9a28d0a3b0f1579a4769d9a88d2", "patch": "@@ -0,0 +1,5 @@\n+trait T { const\n+impl //~ ERROR: expected identifier, found keyword `impl`\n+}\n+\n+fn main() {}"}, {"sha": "b8ada11d922b247765f7d2734c4deb69b7772bef", "filename": "src/test/ui/parser/issue-81806.stderr", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/6eb1bd4c3e3ad9a28d0a3b0f1579a4769d9a88d2/src%2Ftest%2Fui%2Fparser%2Fissue-81806.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6eb1bd4c3e3ad9a28d0a3b0f1579a4769d9a88d2/src%2Ftest%2Fui%2Fparser%2Fissue-81806.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fissue-81806.stderr?ref=6eb1bd4c3e3ad9a28d0a3b0f1579a4769d9a88d2", "patch": "@@ -0,0 +1,17 @@\n+error: expected identifier, found keyword `impl`\n+  --> $DIR/issue-81806.rs:2:1\n+   |\n+LL | trait T { const\n+   |         - while parsing this item list starting here\n+LL | impl\n+   | ^^^^ expected identifier, found keyword\n+LL | }\n+   | - the item list ends here\n+   |\n+help: you can escape reserved keywords to use them as identifiers\n+   |\n+LL | r#impl\n+   | ^^^^^^\n+\n+error: aborting due to previous error\n+"}]}