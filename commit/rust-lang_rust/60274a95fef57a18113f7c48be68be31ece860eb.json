{"sha": "60274a95fef57a18113f7c48be68be31ece860eb", "node_id": "MDY6Q29tbWl0NzI0NzEyOjYwMjc0YTk1ZmVmNTdhMTgxMTNmN2M0OGJlNjhiZTMxZWNlODYwZWI=", "commit": {"author": {"name": "Daniel Henry-Mantilla", "email": "daniel.henry.mantilla@gmail.com", "date": "2019-09-01T15:23:20Z"}, "committer": {"name": "Daniel Henry-Mantilla", "email": "daniel.henry.mantilla@gmail.com", "date": "2020-02-04T16:20:33Z"}, "message": "Added From<Vec<NonZeroU8>> for CString\n\nUpdated tracking issue number\n\nAdded safeguards for transmute_vec potentially being factored out elsewhere\n\nClarified comment about avoiding mem::forget\n\nRemoved unneeded unstable guard\n\nAdded back a stability annotation for CI\n\nMinor documentation improvements\n\nThanks to @Centril's code review\n\nCo-Authored-By: Mazdak Farrokhzad <twingoow@gmail.com>\n\nImproved layout checks, type annotations and removed unaccurate comment\n\nRemoved unnecessary check on array layout\n\nAdapt the stability annotation to the new 1.41 milestone\n\nCo-Authored-By: Mazdak Farrokhzad <twingoow@gmail.com>\n\nSimplify the implementation.\n\nUse `Vec::into_raw_parts` instead of a manual implementation of\n`Vec::transmute`.\n\nIf `Vec::into_raw_parts` uses `NonNull` instead, then the code here\nwill need to be adjusted to take it into account (issue #65816)\n\nReduce the whitespace of safety comments", "tree": {"sha": "3d7c952a5d45b574160bb7c5f41d26e3058704bd", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3d7c952a5d45b574160bb7c5f41d26e3058704bd"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/60274a95fef57a18113f7c48be68be31ece860eb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/60274a95fef57a18113f7c48be68be31ece860eb", "html_url": "https://github.com/rust-lang/rust/commit/60274a95fef57a18113f7c48be68be31ece860eb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/60274a95fef57a18113f7c48be68be31ece860eb/comments", "author": {"login": "danielhenrymantilla", "id": 9920355, "node_id": "MDQ6VXNlcjk5MjAzNTU=", "avatar_url": "https://avatars.githubusercontent.com/u/9920355?v=4", "gravatar_id": "", "url": "https://api.github.com/users/danielhenrymantilla", "html_url": "https://github.com/danielhenrymantilla", "followers_url": "https://api.github.com/users/danielhenrymantilla/followers", "following_url": "https://api.github.com/users/danielhenrymantilla/following{/other_user}", "gists_url": "https://api.github.com/users/danielhenrymantilla/gists{/gist_id}", "starred_url": "https://api.github.com/users/danielhenrymantilla/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/danielhenrymantilla/subscriptions", "organizations_url": "https://api.github.com/users/danielhenrymantilla/orgs", "repos_url": "https://api.github.com/users/danielhenrymantilla/repos", "events_url": "https://api.github.com/users/danielhenrymantilla/events{/privacy}", "received_events_url": "https://api.github.com/users/danielhenrymantilla/received_events", "type": "User", "site_admin": false}, "committer": {"login": "danielhenrymantilla", "id": 9920355, "node_id": "MDQ6VXNlcjk5MjAzNTU=", "avatar_url": "https://avatars.githubusercontent.com/u/9920355?v=4", "gravatar_id": "", "url": "https://api.github.com/users/danielhenrymantilla", "html_url": "https://github.com/danielhenrymantilla", "followers_url": "https://api.github.com/users/danielhenrymantilla/followers", "following_url": "https://api.github.com/users/danielhenrymantilla/following{/other_user}", "gists_url": "https://api.github.com/users/danielhenrymantilla/gists{/gist_id}", "starred_url": "https://api.github.com/users/danielhenrymantilla/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/danielhenrymantilla/subscriptions", "organizations_url": "https://api.github.com/users/danielhenrymantilla/orgs", "repos_url": "https://api.github.com/users/danielhenrymantilla/repos", "events_url": "https://api.github.com/users/danielhenrymantilla/events{/privacy}", "received_events_url": "https://api.github.com/users/danielhenrymantilla/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "41501a6b03a8f10d8c29dfcb37dbd5ff84b33f34", "url": "https://api.github.com/repos/rust-lang/rust/commits/41501a6b03a8f10d8c29dfcb37dbd5ff84b33f34", "html_url": "https://github.com/rust-lang/rust/commit/41501a6b03a8f10d8c29dfcb37dbd5ff84b33f34"}], "stats": {"total": 28, "additions": 28, "deletions": 0}, "files": [{"sha": "217672ea292fc9f0e580c6df1dd8523c07a841fd", "filename": "src/libstd/ffi/c_str.rs", "status": "modified", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/60274a95fef57a18113f7c48be68be31ece860eb/src%2Flibstd%2Fffi%2Fc_str.rs", "raw_url": "https://github.com/rust-lang/rust/raw/60274a95fef57a18113f7c48be68be31ece860eb/src%2Flibstd%2Fffi%2Fc_str.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fffi%2Fc_str.rs?ref=60274a95fef57a18113f7c48be68be31ece860eb", "patch": "@@ -6,6 +6,7 @@ use crate::fmt::{self, Write};\n use crate::io;\n use crate::mem;\n use crate::memchr;\n+use crate::num::NonZeroU8;\n use crate::ops;\n use crate::os::raw::c_char;\n use crate::ptr;\n@@ -741,6 +742,32 @@ impl From<Box<CStr>> for CString {\n     }\n }\n \n+#[stable(feature = \"cstring_from_vec_of_nonzerou8\", since = \"1.43.0\")]\n+impl From<Vec<NonZeroU8>> for CString {\n+    /// Converts a [`Vec`]`<`[`NonZeroU8`]`>` into a [`CString`] without\n+    /// copying nor checking for inner null bytes.\n+    ///\n+    /// [`CString`]: ../ffi/struct.CString.html\n+    /// [`NonZeroU8`]: ../num/struct.NonZeroU8.html\n+    /// [`Vec`]: ../vec/struct.Vec.html\n+    #[inline]\n+    fn from(v: Vec<NonZeroU8>) -> CString {\n+        unsafe {\n+            // Transmute `Vec<NonZeroU8>` to `Vec<u8>`.\n+            let v: Vec<u8> = {\n+                // Safety:\n+                //   - transmuting between `NonZeroU8` and `u8` is sound;\n+                //   - `alloc::Layout<NonZeroU8> == alloc::Layout<u8>`.\n+                let (ptr, len, cap): (*mut NonZeroU8, _, _) = Vec::into_raw_parts(v);\n+                Vec::from_raw_parts(ptr.cast::<u8>(), len, cap)\n+            };\n+            // Safety: `v` cannot contain null bytes, given the type-level\n+            // invariant of `NonZeroU8`.\n+            CString::from_vec_unchecked(v)\n+        }\n+    }\n+}\n+\n #[stable(feature = \"more_box_slice_clone\", since = \"1.29.0\")]\n impl Clone for Box<CStr> {\n     #[inline]"}, {"sha": "c05ebc7349d71855ace5b440ed71f08cc381f07d", "filename": "src/libstd/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/60274a95fef57a18113f7c48be68be31ece860eb/src%2Flibstd%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/60274a95fef57a18113f7c48be68be31ece860eb/src%2Flibstd%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Flib.rs?ref=60274a95fef57a18113f7c48be68be31ece860eb", "patch": "@@ -310,6 +310,7 @@\n #![feature(unboxed_closures)]\n #![feature(untagged_unions)]\n #![feature(unwind_attributes)]\n+#![feature(vec_into_raw_parts)]\n // NB: the above list is sorted to minimize merge conflicts.\n #![default_lib_allocator]\n "}]}