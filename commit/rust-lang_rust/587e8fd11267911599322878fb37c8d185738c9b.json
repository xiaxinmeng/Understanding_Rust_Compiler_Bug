{"sha": "587e8fd11267911599322878fb37c8d185738c9b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjU4N2U4ZmQxMTI2NzkxMTU5OTMyMjg3OGZiMzdjOGQxODU3MzhjOWI=", "commit": {"author": {"name": "Oli Scherer", "email": "github35764891676564198441@oli-obk.de", "date": "2021-07-13T15:19:35Z"}, "committer": {"name": "Oli Scherer", "email": "github35764891676564198441@oli-obk.de", "date": "2021-07-13T15:19:35Z"}, "message": "Loop over all opaque types instead of looking at just the first one with the same DefId", "tree": {"sha": "f87d0cf3dc8d343714a85d845c51a6f42758c52b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f87d0cf3dc8d343714a85d845c51a6f42758c52b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/587e8fd11267911599322878fb37c8d185738c9b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/587e8fd11267911599322878fb37c8d185738c9b", "html_url": "https://github.com/rust-lang/rust/commit/587e8fd11267911599322878fb37c8d185738c9b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/587e8fd11267911599322878fb37c8d185738c9b/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "95f296db63d58f82a6a96d8b7baf52efaa26b260", "url": "https://api.github.com/repos/rust-lang/rust/commits/95f296db63d58f82a6a96d8b7baf52efaa26b260", "html_url": "https://github.com/rust-lang/rust/commit/95f296db63d58f82a6a96d8b7baf52efaa26b260"}], "stats": {"total": 35, "additions": 22, "deletions": 13}, "files": [{"sha": "7b0002914eca80d20d0df9cf6e94bfa4dbfe933f", "filename": "compiler/rustc_typeck/src/collect/type_of.rs", "status": "modified", "additions": 8, "deletions": 12, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/587e8fd11267911599322878fb37c8d185738c9b/compiler%2Frustc_typeck%2Fsrc%2Fcollect%2Ftype_of.rs", "raw_url": "https://github.com/rust-lang/rust/raw/587e8fd11267911599322878fb37c8d185738c9b/compiler%2Frustc_typeck%2Fsrc%2Fcollect%2Ftype_of.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fcollect%2Ftype_of.rs?ref=587e8fd11267911599322878fb37c8d185738c9b", "patch": "@@ -542,13 +542,14 @@ fn find_opaque_ty_constraints(tcx: TyCtxt<'_>, def_id: LocalDefId) -> Ty<'_> {\n             }\n             // Use borrowck to get the type with unerased regions.\n             let concrete_opaque_types = &self.tcx.mir_borrowck(def_id).concrete_opaque_types;\n-            if let Some((opaque_type_key, concrete_type)) =\n-                concrete_opaque_types.iter().find(|(key, _)| key.def_id == self.def_id)\n-            {\n-                debug!(\n-                    \"find_opaque_ty_constraints: found constraint for `{:?}` at `{:?}`: {:?}\",\n-                    self.def_id, def_id, concrete_type,\n-                );\n+            debug!(?concrete_opaque_types);\n+            for (opaque_type_key, concrete_type) in concrete_opaque_types {\n+                if opaque_type_key.def_id != self.def_id {\n+                    // Ignore constraints for other opaque types.\n+                    continue;\n+                }\n+\n+                debug!(?concrete_type, ?opaque_type_key.substs, \"found constraint\");\n \n                 // FIXME(oli-obk): trace the actual span from inference to improve errors.\n                 let span = self.tcx.def_span(def_id);\n@@ -613,11 +614,6 @@ fn find_opaque_ty_constraints(tcx: TyCtxt<'_>, def_id: LocalDefId) -> Ty<'_> {\n                 } else {\n                     self.found = Some((span, concrete_type));\n                 }\n-            } else {\n-                debug!(\n-                    \"find_opaque_ty_constraints: no constraint for `{:?}` at `{:?}`\",\n-                    self.def_id, def_id,\n-                );\n             }\n         }\n     }"}, {"sha": "0c37399df8dd21fa70195fd42074bfc09447cfcd", "filename": "src/test/ui/type-alias-impl-trait/issue-85113.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/587e8fd11267911599322878fb37c8d185738c9b/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Fissue-85113.rs", "raw_url": "https://github.com/rust-lang/rust/raw/587e8fd11267911599322878fb37c8d185738c9b/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Fissue-85113.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Fissue-85113.rs?ref=587e8fd11267911599322878fb37c8d185738c9b", "patch": "@@ -12,6 +12,7 @@ trait Output<'a> {}\n impl<'a> Output<'a> for &'a str {}\n \n fn cool_fn<'a>(arg: &'a str) -> OpaqueOutputImpl<'a> {\n+    //~^ ERROR: concrete type differs from previous defining opaque type use\n     let out: OpaqueOutputImpl<'a> = arg;\n     arg\n }"}, {"sha": "233c996340d844fe57b47485af643d0308d3a703", "filename": "src/test/ui/type-alias-impl-trait/issue-85113.stderr", "status": "modified", "additions": 13, "deletions": 1, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/587e8fd11267911599322878fb37c8d185738c9b/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Fissue-85113.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/587e8fd11267911599322878fb37c8d185738c9b/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Fissue-85113.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Fissue-85113.stderr?ref=587e8fd11267911599322878fb37c8d185738c9b", "patch": "@@ -10,6 +10,18 @@ note: hidden type `&'<empty> str` captures lifetime smaller than the function bo\n LL | type OpaqueOutputImpl<'a> = impl Output<'a> + 'a;\n    |                             ^^^^^^^^^^^^^^^^^^^^\n \n+error: concrete type differs from previous defining opaque type use\n+  --> $DIR/issue-85113.rs:14:1\n+   |\n+LL | fn cool_fn<'a>(arg: &'a str) -> OpaqueOutputImpl<'a> {\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `&'<empty> str`, got `&'a str`\n+   |\n+note: previous use here\n+  --> $DIR/issue-85113.rs:14:1\n+   |\n+LL | fn cool_fn<'a>(arg: &'a str) -> OpaqueOutputImpl<'a> {\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+\n error[E0477]: the type `&'<empty> str` does not fulfill the required lifetime\n   --> $DIR/issue-85113.rs:5:29\n    |\n@@ -42,7 +54,7 @@ LL | type OpaqueOutputImpl<'a> = impl Output<'a> + 'a;\n    = note: expected `Output<'a>`\n               found `Output<'_>`\n \n-error: aborting due to 3 previous errors\n+error: aborting due to 4 previous errors\n \n Some errors have detailed explanations: E0477, E0495, E0700.\n For more information about an error, try `rustc --explain E0477`."}]}