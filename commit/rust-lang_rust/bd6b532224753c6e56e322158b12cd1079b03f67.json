{"sha": "bd6b532224753c6e56e322158b12cd1079b03f67", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJkNmI1MzIyMjQ3NTNjNmU1NmUzMjIxNThiMTJjZDEwNzliMDNmNjc=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2020-04-17T10:06:01Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-04-17T10:06:01Z"}, "message": "Merge #4009\n\n4009: Better snippet when completing trait method r=matklad a=matklad\n\n\n\nbors r+\n\ud83e\udd16\n\nCo-authored-by: Aleksey Kladov <aleksey.kladov@gmail.com>", "tree": {"sha": "3f06d51f6cc069e1b92e62c41243ad1dffb9fe16", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3f06d51f6cc069e1b92e62c41243ad1dffb9fe16"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/bd6b532224753c6e56e322158b12cd1079b03f67", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJemX+JCRBK7hj4Ov3rIwAAdHIIAJcLQ0J9+xqzzQal8rS+P9vn\nLQl0Mf50HcdnrJhxUpJ/xX7lWN69WUq962RELtk2GtsoWBxJ1+RT34VjJ8htQiSI\ndS+dEOfct2nZOR//wLCqrcLm6J9M08aaglo6Yj14t39oVjjD9FAJjJyuK1QYJyfZ\nCzNij4xW87GwI0HUIeaopgn+6oqTqwiFk3cT5idK1uP24nDEwZ/PyUyVNel9jg6O\nxOFeGqok41gHcL5t1gVdFt8o12GzLcGnImi3H9IqBwh2jPwIRvT8ss7ELzZR4JR+\nMaD1Iw7NF1Tc2GhfDHSJ6gAZPSyB2zm0tfZNH/cKm8RrRPzBZGjdVTnMYDDPuBc=\n=E/TT\n-----END PGP SIGNATURE-----\n", "payload": "tree 3f06d51f6cc069e1b92e62c41243ad1dffb9fe16\nparent 46105cdaba049239d2815489f4beeedfec5be9d7\nparent 3b75bc154f75cb97ff2debee9f6594d6fc4f4053\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1587117961 +0000\ncommitter GitHub <noreply@github.com> 1587117961 +0000\n\nMerge #4009\n\n4009: Better snippet when completing trait method r=matklad a=matklad\n\n\n\nbors r+\n\ud83e\udd16\n\nCo-authored-by: Aleksey Kladov <aleksey.kladov@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/bd6b532224753c6e56e322158b12cd1079b03f67", "html_url": "https://github.com/rust-lang/rust/commit/bd6b532224753c6e56e322158b12cd1079b03f67", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/bd6b532224753c6e56e322158b12cd1079b03f67/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "46105cdaba049239d2815489f4beeedfec5be9d7", "url": "https://api.github.com/repos/rust-lang/rust/commits/46105cdaba049239d2815489f4beeedfec5be9d7", "html_url": "https://github.com/rust-lang/rust/commit/46105cdaba049239d2815489f4beeedfec5be9d7"}, {"sha": "3b75bc154f75cb97ff2debee9f6594d6fc4f4053", "url": "https://api.github.com/repos/rust-lang/rust/commits/3b75bc154f75cb97ff2debee9f6594d6fc4f4053", "html_url": "https://github.com/rust-lang/rust/commit/3b75bc154f75cb97ff2debee9f6594d6fc4f4053"}], "stats": {"total": 19, "additions": 10, "deletions": 9}, "files": [{"sha": "2ec0e7ce9df356c6d1f2a1e9a25964fc44e8436a", "filename": "crates/ra_ide/src/completion/complete_trait_impl.rs", "status": "modified", "additions": 10, "deletions": 9, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/bd6b532224753c6e56e322158b12cd1079b03f67/crates%2Fra_ide%2Fsrc%2Fcompletion%2Fcomplete_trait_impl.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bd6b532224753c6e56e322158b12cd1079b03f67/crates%2Fra_ide%2Fsrc%2Fcompletion%2Fcomplete_trait_impl.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fcompletion%2Fcomplete_trait_impl.rs?ref=bd6b532224753c6e56e322158b12cd1079b03f67", "patch": "@@ -142,11 +142,11 @@ fn add_function_impl(\n         CompletionItemKind::Function\n     };\n \n-    let snippet = format!(\"{} {{}}\", display);\n+    let snippet = format!(\"{} {{\\n    $0\\n}}\", display);\n \n     let range = TextRange::from_to(fn_def_node.text_range().start(), ctx.source_range().end());\n \n-    builder.text_edit(TextEdit::replace(range, snippet)).kind(completion_kind).add_to(acc);\n+    builder.snippet_edit(TextEdit::replace(range, snippet)).kind(completion_kind).add_to(acc);\n }\n \n fn add_type_alias_impl(\n@@ -217,9 +217,10 @@ fn make_const_compl_syntax(const_: &ast::ConstDef) -> String {\n \n #[cfg(test)]\n mod tests {\n-    use crate::completion::{test_utils::do_completion, CompletionItem, CompletionKind};\n     use insta::assert_debug_snapshot;\n \n+    use crate::completion::{test_utils::do_completion, CompletionItem, CompletionKind};\n+\n     fn complete(code: &str) -> Vec<CompletionItem> {\n         do_completion(code, CompletionKind::Magic)\n     }\n@@ -255,7 +256,7 @@ mod tests {\n                 label: \"fn test()\",\n                 source_range: [209; 210),\n                 delete: [209; 210),\n-                insert: \"fn test() {}\",\n+                insert: \"fn test() {\\n    $0\\n}\",\n                 kind: Function,\n                 lookup: \"test\",\n             },\n@@ -313,7 +314,7 @@ mod tests {\n                 label: \"fn test()\",\n                 source_range: [139; 140),\n                 delete: [139; 140),\n-                insert: \"fn test() {}\",\n+                insert: \"fn test() {\\n    $0\\n}\",\n                 kind: Function,\n                 lookup: \"test\",\n             },\n@@ -342,7 +343,7 @@ mod tests {\n                 label: \"fn foo()\",\n                 source_range: [141; 142),\n                 delete: [138; 142),\n-                insert: \"fn foo() {}\",\n+                insert: \"fn foo() {\\n    $0\\n}\",\n                 kind: Function,\n                 lookup: \"foo\",\n             },\n@@ -374,7 +375,7 @@ mod tests {\n                 label: \"fn foo_bar()\",\n                 source_range: [200; 201),\n                 delete: [197; 201),\n-                insert: \"fn foo_bar() {}\",\n+                insert: \"fn foo_bar() {\\n    $0\\n}\",\n                 kind: Function,\n                 lookup: \"foo_bar\",\n             },\n@@ -425,7 +426,7 @@ mod tests {\n                 label: \"fn foo()\",\n                 source_range: [144; 145),\n                 delete: [141; 145),\n-                insert: \"fn foo<T>() {}\",\n+                insert: \"fn foo<T>() {\\n    $0\\n}\",\n                 kind: Function,\n                 lookup: \"foo\",\n             },\n@@ -454,7 +455,7 @@ mod tests {\n                 label: \"fn foo()\",\n                 source_range: [166; 167),\n                 delete: [163; 167),\n-                insert: \"fn foo<T>()\\nwhere T: Into<String> {}\",\n+                insert: \"fn foo<T>()\\nwhere T: Into<String> {\\n    $0\\n}\",\n                 kind: Function,\n                 lookup: \"foo\",\n             },"}]}