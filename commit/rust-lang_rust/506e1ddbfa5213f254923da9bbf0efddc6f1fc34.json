{"sha": "506e1ddbfa5213f254923da9bbf0efddc6f1fc34", "node_id": "MDY6Q29tbWl0NzI0NzEyOjUwNmUxZGRiZmE1MjEzZjI1NDkyM2RhOWJiZjBlZmRkYzZmMWZjMzQ=", "commit": {"author": {"name": "Matthew Jasper", "email": "mjjasper1@gmail.com", "date": "2020-06-10T10:30:48Z"}, "committer": {"name": "Matthew Jasper", "email": "mjjasper1@gmail.com", "date": "2020-06-10T10:30:58Z"}, "message": "Separating parsing of `for` in predicates and types", "tree": {"sha": "2c220370c38a8a79a6d9b07d0fe184db0d827e1d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2c220370c38a8a79a6d9b07d0fe184db0d827e1d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/506e1ddbfa5213f254923da9bbf0efddc6f1fc34", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/506e1ddbfa5213f254923da9bbf0efddc6f1fc34", "html_url": "https://github.com/rust-lang/rust/commit/506e1ddbfa5213f254923da9bbf0efddc6f1fc34", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/506e1ddbfa5213f254923da9bbf0efddc6f1fc34/comments", "author": {"login": "matthewjasper", "id": 20113453, "node_id": "MDQ6VXNlcjIwMTEzNDUz", "avatar_url": "https://avatars.githubusercontent.com/u/20113453?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthewjasper", "html_url": "https://github.com/matthewjasper", "followers_url": "https://api.github.com/users/matthewjasper/followers", "following_url": "https://api.github.com/users/matthewjasper/following{/other_user}", "gists_url": "https://api.github.com/users/matthewjasper/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthewjasper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthewjasper/subscriptions", "organizations_url": "https://api.github.com/users/matthewjasper/orgs", "repos_url": "https://api.github.com/users/matthewjasper/repos", "events_url": "https://api.github.com/users/matthewjasper/events{/privacy}", "received_events_url": "https://api.github.com/users/matthewjasper/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matthewjasper", "id": 20113453, "node_id": "MDQ6VXNlcjIwMTEzNDUz", "avatar_url": "https://avatars.githubusercontent.com/u/20113453?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthewjasper", "html_url": "https://github.com/matthewjasper", "followers_url": "https://api.github.com/users/matthewjasper/followers", "following_url": "https://api.github.com/users/matthewjasper/following{/other_user}", "gists_url": "https://api.github.com/users/matthewjasper/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthewjasper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthewjasper/subscriptions", "organizations_url": "https://api.github.com/users/matthewjasper/orgs", "repos_url": "https://api.github.com/users/matthewjasper/repos", "events_url": "https://api.github.com/users/matthewjasper/events{/privacy}", "received_events_url": "https://api.github.com/users/matthewjasper/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "560b98bc505be6ff70876df661e4055e1b38a78c", "url": "https://api.github.com/repos/rust-lang/rust/commits/560b98bc505be6ff70876df661e4055e1b38a78c", "html_url": "https://github.com/rust-lang/rust/commit/560b98bc505be6ff70876df661e4055e1b38a78c"}], "stats": {"total": 798, "additions": 507, "deletions": 291}, "files": [{"sha": "b3508c732e9ba3d154bd2b649a691fefd09e0be8", "filename": "crates/ra_parser/src/grammar/type_params.rs", "status": "modified", "additions": 21, "deletions": 1, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/506e1ddbfa5213f254923da9bbf0efddc6f1fc34/crates%2Fra_parser%2Fsrc%2Fgrammar%2Ftype_params.rs", "raw_url": "https://github.com/rust-lang/rust/raw/506e1ddbfa5213f254923da9bbf0efddc6f1fc34/crates%2Fra_parser%2Fsrc%2Fgrammar%2Ftype_params.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_parser%2Fsrc%2Fgrammar%2Ftype_params.rs?ref=506e1ddbfa5213f254923da9bbf0efddc6f1fc34", "patch": "@@ -191,10 +191,30 @@ fn where_predicate(p: &mut Parser) {\n         }\n         _ => {\n             // test where_pred_for\n-            // fn test<F>()\n+            // fn for_trait<F>()\n             // where\n             //    for<'a> F: Fn(&'a str)\n             // { }\n+            // fn for_ref<F>()\n+            // where\n+            //    for<'a> &'a F: Debug\n+            // { }\n+            // fn for_parens<F>()\n+            // where\n+            //    for<'a> (&'a F): Fn(&'a str)\n+            // { }\n+            // fn for_slice<F>()\n+            // where\n+            //    for<'a> [&'a F]: Eq\n+            // { }\n+            // fn for_qpath<T>(_t: &T)\n+            // where\n+            //     for<'a> <&'a T as Baz>::Foo: Iterator\n+            // { }\n+            if p.at(T![for]) {\n+                types::for_binder(p);\n+            }\n+\n             types::type_(p);\n \n             if p.at(T![:]) {"}, {"sha": "63dd3774f11fbe41926f85e1fa2e0c2d2ac533ad", "filename": "crates/ra_parser/src/grammar/types.rs", "status": "modified", "additions": 8, "deletions": 7, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/506e1ddbfa5213f254923da9bbf0efddc6f1fc34/crates%2Fra_parser%2Fsrc%2Fgrammar%2Ftypes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/506e1ddbfa5213f254923da9bbf0efddc6f1fc34/crates%2Fra_parser%2Fsrc%2Fgrammar%2Ftypes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_parser%2Fsrc%2Fgrammar%2Ftypes.rs?ref=506e1ddbfa5213f254923da9bbf0efddc6f1fc34", "patch": "@@ -216,19 +216,20 @@ pub(super) fn for_binder(p: &mut Parser) {\n \n // test for_type\n // type A = for<'a> fn() -> ();\n-// fn foo<T>(_t: &T) where for<'a> &'a T: Iterator {}\n-// fn bar<T>(_t: &T) where for<'a> &'a mut T: Iterator {}\n-// fn baz<T>(_t: &T) where for<'a> <&'a T as Baz>::Foo: Iterator {}\n+// type B = for<'a> unsafe extern \"C\" fn(&'a ()) -> ();\n pub(super) fn for_type(p: &mut Parser) {\n     assert!(p.at(T![for]));\n     let m = p.start();\n     for_binder(p);\n     match p.current() {\n-        T![fn] | T![unsafe] | T![extern] => fn_pointer_type(p),\n-        T![&] => reference_type(p),\n-        _ if paths::is_path_start(p) => path_type_(p, false),\n-        _ => p.error(\"expected a path\"),\n+        T![fn] | T![unsafe] | T![extern] => {}\n+        // OK: legacy trait object format\n+        _ if paths::is_use_path_start(p) => {}\n+        _ => {\n+            p.error(\"expected a function pointer or path\");\n+        }\n     }\n+    type_no_bounds(p);\n     m.complete(p, FOR_TYPE);\n }\n "}, {"sha": "9d02aeef3fa2a7659e90428f9b86daa845eed37a", "filename": "crates/ra_syntax/src/ast.rs", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/506e1ddbfa5213f254923da9bbf0efddc6f1fc34/crates%2Fra_syntax%2Fsrc%2Fast.rs", "raw_url": "https://github.com/rust-lang/rust/raw/506e1ddbfa5213f254923da9bbf0efddc6f1fc34/crates%2Fra_syntax%2Fsrc%2Fast.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Fsrc%2Fast.rs?ref=506e1ddbfa5213f254923da9bbf0efddc6f1fc34", "patch": "@@ -285,6 +285,8 @@ where\n     let pred = predicates.next().unwrap();\n     let mut bounds = pred.type_bound_list().unwrap().bounds();\n \n+    assert!(pred.for_token().is_none());\n+    assert!(pred.type_param_list().is_none());\n     assert_eq!(\"T\", pred.type_ref().unwrap().syntax().text().to_string());\n     assert_bound(\"Clone\", bounds.next());\n     assert_bound(\"Copy\", bounds.next());\n@@ -322,6 +324,8 @@ where\n     let pred = predicates.next().unwrap();\n     let mut bounds = pred.type_bound_list().unwrap().bounds();\n \n-    assert_eq!(\"for<'a> F\", pred.type_ref().unwrap().syntax().text().to_string());\n+    assert!(pred.for_token().is_some());\n+    assert_eq!(\"<'a>\", pred.type_param_list().unwrap().syntax().text().to_string());\n+    assert_eq!(\"F\", pred.type_ref().unwrap().syntax().text().to_string());\n     assert_bound(\"Fn(&'a str)\", bounds.next());\n }"}, {"sha": "40081ebb16ea13a646383e1f8962816f5ef7ed0e", "filename": "crates/ra_syntax/src/ast/generated/nodes.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/506e1ddbfa5213f254923da9bbf0efddc6f1fc34/crates%2Fra_syntax%2Fsrc%2Fast%2Fgenerated%2Fnodes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/506e1ddbfa5213f254923da9bbf0efddc6f1fc34/crates%2Fra_syntax%2Fsrc%2Fast%2Fgenerated%2Fnodes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Fsrc%2Fast%2Fgenerated%2Fnodes.rs?ref=506e1ddbfa5213f254923da9bbf0efddc6f1fc34", "patch": "@@ -2052,6 +2052,8 @@ pub struct WherePred {\n }\n impl ast::TypeBoundsOwner for WherePred {}\n impl WherePred {\n+    pub fn for_token(&self) -> Option<SyntaxToken> { support::token(&self.syntax, T![for]) }\n+    pub fn type_param_list(&self) -> Option<TypeParamList> { support::child(&self.syntax) }\n     pub fn lifetime_token(&self) -> Option<SyntaxToken> {\n         support::token(&self.syntax, T![lifetime])\n     }"}, {"sha": "4d6461d1e195da553feb721bd4c344c7e8a86c51", "filename": "crates/ra_syntax/test_data/parser/err/0027_incomplere_where_for.rast", "status": "modified", "additions": 7, "deletions": 8, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/506e1ddbfa5213f254923da9bbf0efddc6f1fc34/crates%2Fra_syntax%2Ftest_data%2Fparser%2Ferr%2F0027_incomplere_where_for.rast", "raw_url": "https://github.com/rust-lang/rust/raw/506e1ddbfa5213f254923da9bbf0efddc6f1fc34/crates%2Fra_syntax%2Ftest_data%2Fparser%2Ferr%2F0027_incomplere_where_for.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Ferr%2F0027_incomplere_where_for.rast?ref=506e1ddbfa5213f254923da9bbf0efddc6f1fc34", "patch": "@@ -12,17 +12,16 @@ SOURCE_FILE@0..30\n       WHERE_KW@13..18 \"where\"\n       WHITESPACE@18..19 \" \"\n       WHERE_PRED@19..26\n-        FOR_TYPE@19..26\n-          FOR_KW@19..22 \"for\"\n-          TYPE_PARAM_LIST@22..26\n-            L_ANGLE@22..23 \"<\"\n-            LIFETIME_PARAM@23..25\n-              LIFETIME@23..25 \"\\'a\"\n-            R_ANGLE@25..26 \">\"\n+        FOR_KW@19..22 \"for\"\n+        TYPE_PARAM_LIST@22..26\n+          L_ANGLE@22..23 \"<\"\n+          LIFETIME_PARAM@23..25\n+            LIFETIME@23..25 \"\\'a\"\n+          R_ANGLE@25..26 \">\"\n     WHITESPACE@26..27 \"\\n\"\n     BLOCK_EXPR@27..29\n       L_CURLY@27..28 \"{\"\n       R_CURLY@28..29 \"}\"\n   WHITESPACE@29..30 \"\\n\"\n-error 26..26: expected a path\n+error 26..26: expected type\n error 26..26: expected colon"}, {"sha": "3400beff03eee0b6dc2ad03052c9ef8e72cab92c", "filename": "crates/ra_syntax/test_data/parser/err/0044_unexpected_for_type.rast", "status": "added", "additions": 88, "deletions": 0, "changes": 88, "blob_url": "https://github.com/rust-lang/rust/blob/506e1ddbfa5213f254923da9bbf0efddc6f1fc34/crates%2Fra_syntax%2Ftest_data%2Fparser%2Ferr%2F0044_unexpected_for_type.rast", "raw_url": "https://github.com/rust-lang/rust/raw/506e1ddbfa5213f254923da9bbf0efddc6f1fc34/crates%2Fra_syntax%2Ftest_data%2Fparser%2Ferr%2F0044_unexpected_for_type.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Ferr%2F0044_unexpected_for_type.rast?ref=506e1ddbfa5213f254923da9bbf0efddc6f1fc34", "patch": "@@ -0,0 +1,88 @@\n+SOURCE_FILE@0..79\n+  TYPE_ALIAS_DEF@0..25\n+    TYPE_KW@0..4 \"type\"\n+    WHITESPACE@4..5 \" \"\n+    NAME@5..6\n+      IDENT@5..6 \"A\"\n+    WHITESPACE@6..7 \" \"\n+    EQ@7..8 \"=\"\n+    WHITESPACE@8..9 \" \"\n+    FOR_TYPE@9..24\n+      FOR_KW@9..12 \"for\"\n+      TYPE_PARAM_LIST@12..16\n+        L_ANGLE@12..13 \"<\"\n+        LIFETIME_PARAM@13..15\n+          LIFETIME@13..15 \"\\'a\"\n+        R_ANGLE@15..16 \">\"\n+      WHITESPACE@16..17 \" \"\n+      REFERENCE_TYPE@17..24\n+        AMP@17..18 \"&\"\n+        LIFETIME@18..20 \"\\'a\"\n+        WHITESPACE@20..21 \" \"\n+        PATH_TYPE@21..24\n+          PATH@21..24\n+            PATH_SEGMENT@21..24\n+              NAME_REF@21..24\n+                IDENT@21..24 \"u32\"\n+    SEMICOLON@24..25 \";\"\n+  WHITESPACE@25..26 \"\\n\"\n+  TYPE_ALIAS_DEF@26..54\n+    TYPE_KW@26..30 \"type\"\n+    WHITESPACE@30..31 \" \"\n+    NAME@31..32\n+      IDENT@31..32 \"B\"\n+    WHITESPACE@32..33 \" \"\n+    EQ@33..34 \"=\"\n+    WHITESPACE@34..35 \" \"\n+    FOR_TYPE@35..53\n+      FOR_KW@35..38 \"for\"\n+      TYPE_PARAM_LIST@38..42\n+        L_ANGLE@38..39 \"<\"\n+        LIFETIME_PARAM@39..41\n+          LIFETIME@39..41 \"\\'a\"\n+        R_ANGLE@41..42 \">\"\n+      WHITESPACE@42..43 \" \"\n+      TUPLE_TYPE@43..53\n+        L_PAREN@43..44 \"(\"\n+        REFERENCE_TYPE@44..51\n+          AMP@44..45 \"&\"\n+          LIFETIME@45..47 \"\\'a\"\n+          WHITESPACE@47..48 \" \"\n+          PATH_TYPE@48..51\n+            PATH@48..51\n+              PATH_SEGMENT@48..51\n+                NAME_REF@48..51\n+                  IDENT@48..51 \"u32\"\n+        COMMA@51..52 \",\"\n+        R_PAREN@52..53 \")\"\n+    SEMICOLON@53..54 \";\"\n+  WHITESPACE@54..55 \"\\n\"\n+  TYPE_ALIAS_DEF@55..78\n+    TYPE_KW@55..59 \"type\"\n+    WHITESPACE@59..60 \" \"\n+    NAME@60..61\n+      IDENT@60..61 \"B\"\n+    WHITESPACE@61..62 \" \"\n+    EQ@62..63 \"=\"\n+    WHITESPACE@63..64 \" \"\n+    FOR_TYPE@64..77\n+      FOR_KW@64..67 \"for\"\n+      TYPE_PARAM_LIST@67..71\n+        L_ANGLE@67..68 \"<\"\n+        LIFETIME_PARAM@68..70\n+          LIFETIME@68..70 \"\\'a\"\n+        R_ANGLE@70..71 \">\"\n+      WHITESPACE@71..72 \" \"\n+      SLICE_TYPE@72..77\n+        L_BRACK@72..73 \"[\"\n+        PATH_TYPE@73..76\n+          PATH@73..76\n+            PATH_SEGMENT@73..76\n+              NAME_REF@73..76\n+                IDENT@73..76 \"u32\"\n+        R_BRACK@76..77 \"]\"\n+    SEMICOLON@77..78 \";\"\n+  WHITESPACE@78..79 \"\\n\"\n+error 16..16: expected a function pointer or path\n+error 42..42: expected a function pointer or path\n+error 71..71: expected a function pointer or path"}, {"sha": "f34ac7fc578fc7fa76704dcd5587a49dee5050b6", "filename": "crates/ra_syntax/test_data/parser/err/0044_unexpected_for_type.rs", "status": "added", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/506e1ddbfa5213f254923da9bbf0efddc6f1fc34/crates%2Fra_syntax%2Ftest_data%2Fparser%2Ferr%2F0044_unexpected_for_type.rs", "raw_url": "https://github.com/rust-lang/rust/raw/506e1ddbfa5213f254923da9bbf0efddc6f1fc34/crates%2Fra_syntax%2Ftest_data%2Fparser%2Ferr%2F0044_unexpected_for_type.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Ferr%2F0044_unexpected_for_type.rs?ref=506e1ddbfa5213f254923da9bbf0efddc6f1fc34", "patch": "@@ -0,0 +1,3 @@\n+type A = for<'a> &'a u32;\n+type B = for<'a> (&'a u32,);\n+type B = for<'a> [u32];"}, {"sha": "4f88bfe434e860cfe6bba27c273f30aa23fec677", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0003_where_pred_for.rast", "status": "modified", "additions": 308, "deletions": 59, "changes": 367, "blob_url": "https://github.com/rust-lang/rust/blob/506e1ddbfa5213f254923da9bbf0efddc6f1fc34/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0003_where_pred_for.rast", "raw_url": "https://github.com/rust-lang/rust/raw/506e1ddbfa5213f254923da9bbf0efddc6f1fc34/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0003_where_pred_for.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0003_where_pred_for.rast?ref=506e1ddbfa5213f254923da9bbf0efddc6f1fc34", "patch": "@@ -1,61 +1,310 @@\n-SOURCE_FILE@0..49\n-  FN_DEF@0..48\n+SOURCE_FILE@0..292\n+  FN_DEF@0..53\n     FN_KW@0..2 \"fn\"\n     WHITESPACE@2..3 \" \"\n-    NAME@3..7\n-      IDENT@3..7 \"test\"\n-    TYPE_PARAM_LIST@7..10\n-      L_ANGLE@7..8 \"<\"\n-      TYPE_PARAM@8..9\n-        NAME@8..9\n-          IDENT@8..9 \"F\"\n-      R_ANGLE@9..10 \">\"\n-    PARAM_LIST@10..12\n-      L_PAREN@10..11 \"(\"\n-      R_PAREN@11..12 \")\"\n-    WHITESPACE@12..13 \"\\n\"\n-    WHERE_CLAUSE@13..44\n-      WHERE_KW@13..18 \"where\"\n-      WHITESPACE@18..22 \"\\n   \"\n-      WHERE_PRED@22..44\n-        FOR_TYPE@22..31\n-          FOR_KW@22..25 \"for\"\n-          TYPE_PARAM_LIST@25..29\n-            L_ANGLE@25..26 \"<\"\n-            LIFETIME_PARAM@26..28\n-              LIFETIME@26..28 \"\\'a\"\n-            R_ANGLE@28..29 \">\"\n-          WHITESPACE@29..30 \" \"\n-          PATH_TYPE@30..31\n-            PATH@30..31\n-              PATH_SEGMENT@30..31\n-                NAME_REF@30..31\n-                  IDENT@30..31 \"F\"\n-        COLON@31..32 \":\"\n-        WHITESPACE@32..33 \" \"\n-        TYPE_BOUND_LIST@33..44\n-          TYPE_BOUND@33..44\n-            PATH_TYPE@33..44\n-              PATH@33..44\n-                PATH_SEGMENT@33..44\n-                  NAME_REF@33..35\n-                    IDENT@33..35 \"Fn\"\n-                  PARAM_LIST@35..44\n-                    L_PAREN@35..36 \"(\"\n-                    PARAM@36..43\n-                      REFERENCE_TYPE@36..43\n-                        AMP@36..37 \"&\"\n-                        LIFETIME@37..39 \"\\'a\"\n-                        WHITESPACE@39..40 \" \"\n-                        PATH_TYPE@40..43\n-                          PATH@40..43\n-                            PATH_SEGMENT@40..43\n-                              NAME_REF@40..43\n-                                IDENT@40..43 \"str\"\n-                    R_PAREN@43..44 \")\"\n-    WHITESPACE@44..45 \"\\n\"\n-    BLOCK_EXPR@45..48\n-      L_CURLY@45..46 \"{\"\n-      WHITESPACE@46..47 \" \"\n-      R_CURLY@47..48 \"}\"\n-  WHITESPACE@48..49 \"\\n\"\n+    NAME@3..12\n+      IDENT@3..12 \"for_trait\"\n+    TYPE_PARAM_LIST@12..15\n+      L_ANGLE@12..13 \"<\"\n+      TYPE_PARAM@13..14\n+        NAME@13..14\n+          IDENT@13..14 \"F\"\n+      R_ANGLE@14..15 \">\"\n+    PARAM_LIST@15..17\n+      L_PAREN@15..16 \"(\"\n+      R_PAREN@16..17 \")\"\n+    WHITESPACE@17..18 \"\\n\"\n+    WHERE_CLAUSE@18..49\n+      WHERE_KW@18..23 \"where\"\n+      WHITESPACE@23..27 \"\\n   \"\n+      WHERE_PRED@27..49\n+        FOR_KW@27..30 \"for\"\n+        TYPE_PARAM_LIST@30..34\n+          L_ANGLE@30..31 \"<\"\n+          LIFETIME_PARAM@31..33\n+            LIFETIME@31..33 \"\\'a\"\n+          R_ANGLE@33..34 \">\"\n+        WHITESPACE@34..35 \" \"\n+        PATH_TYPE@35..36\n+          PATH@35..36\n+            PATH_SEGMENT@35..36\n+              NAME_REF@35..36\n+                IDENT@35..36 \"F\"\n+        COLON@36..37 \":\"\n+        WHITESPACE@37..38 \" \"\n+        TYPE_BOUND_LIST@38..49\n+          TYPE_BOUND@38..49\n+            PATH_TYPE@38..49\n+              PATH@38..49\n+                PATH_SEGMENT@38..49\n+                  NAME_REF@38..40\n+                    IDENT@38..40 \"Fn\"\n+                  PARAM_LIST@40..49\n+                    L_PAREN@40..41 \"(\"\n+                    PARAM@41..48\n+                      REFERENCE_TYPE@41..48\n+                        AMP@41..42 \"&\"\n+                        LIFETIME@42..44 \"\\'a\"\n+                        WHITESPACE@44..45 \" \"\n+                        PATH_TYPE@45..48\n+                          PATH@45..48\n+                            PATH_SEGMENT@45..48\n+                              NAME_REF@45..48\n+                                IDENT@45..48 \"str\"\n+                    R_PAREN@48..49 \")\"\n+    WHITESPACE@49..50 \"\\n\"\n+    BLOCK_EXPR@50..53\n+      L_CURLY@50..51 \"{\"\n+      WHITESPACE@51..52 \" \"\n+      R_CURLY@52..53 \"}\"\n+  WHITESPACE@53..54 \"\\n\"\n+  FN_DEF@54..103\n+    FN_KW@54..56 \"fn\"\n+    WHITESPACE@56..57 \" \"\n+    NAME@57..64\n+      IDENT@57..64 \"for_ref\"\n+    TYPE_PARAM_LIST@64..67\n+      L_ANGLE@64..65 \"<\"\n+      TYPE_PARAM@65..66\n+        NAME@65..66\n+          IDENT@65..66 \"F\"\n+      R_ANGLE@66..67 \">\"\n+    PARAM_LIST@67..69\n+      L_PAREN@67..68 \"(\"\n+      R_PAREN@68..69 \")\"\n+    WHITESPACE@69..70 \"\\n\"\n+    WHERE_CLAUSE@70..99\n+      WHERE_KW@70..75 \"where\"\n+      WHITESPACE@75..79 \"\\n   \"\n+      WHERE_PRED@79..99\n+        FOR_KW@79..82 \"for\"\n+        TYPE_PARAM_LIST@82..86\n+          L_ANGLE@82..83 \"<\"\n+          LIFETIME_PARAM@83..85\n+            LIFETIME@83..85 \"\\'a\"\n+          R_ANGLE@85..86 \">\"\n+        WHITESPACE@86..87 \" \"\n+        REFERENCE_TYPE@87..92\n+          AMP@87..88 \"&\"\n+          LIFETIME@88..90 \"\\'a\"\n+          WHITESPACE@90..91 \" \"\n+          PATH_TYPE@91..92\n+            PATH@91..92\n+              PATH_SEGMENT@91..92\n+                NAME_REF@91..92\n+                  IDENT@91..92 \"F\"\n+        COLON@92..93 \":\"\n+        WHITESPACE@93..94 \" \"\n+        TYPE_BOUND_LIST@94..99\n+          TYPE_BOUND@94..99\n+            PATH_TYPE@94..99\n+              PATH@94..99\n+                PATH_SEGMENT@94..99\n+                  NAME_REF@94..99\n+                    IDENT@94..99 \"Debug\"\n+    WHITESPACE@99..100 \"\\n\"\n+    BLOCK_EXPR@100..103\n+      L_CURLY@100..101 \"{\"\n+      WHITESPACE@101..102 \" \"\n+      R_CURLY@102..103 \"}\"\n+  WHITESPACE@103..104 \"\\n\"\n+  FN_DEF@104..164\n+    FN_KW@104..106 \"fn\"\n+    WHITESPACE@106..107 \" \"\n+    NAME@107..117\n+      IDENT@107..117 \"for_parens\"\n+    TYPE_PARAM_LIST@117..120\n+      L_ANGLE@117..118 \"<\"\n+      TYPE_PARAM@118..119\n+        NAME@118..119\n+          IDENT@118..119 \"F\"\n+      R_ANGLE@119..120 \">\"\n+    PARAM_LIST@120..122\n+      L_PAREN@120..121 \"(\"\n+      R_PAREN@121..122 \")\"\n+    WHITESPACE@122..123 \"\\n\"\n+    WHERE_CLAUSE@123..160\n+      WHERE_KW@123..128 \"where\"\n+      WHITESPACE@128..132 \"\\n   \"\n+      WHERE_PRED@132..160\n+        FOR_KW@132..135 \"for\"\n+        TYPE_PARAM_LIST@135..139\n+          L_ANGLE@135..136 \"<\"\n+          LIFETIME_PARAM@136..138\n+            LIFETIME@136..138 \"\\'a\"\n+          R_ANGLE@138..139 \">\"\n+        WHITESPACE@139..140 \" \"\n+        PAREN_TYPE@140..147\n+          L_PAREN@140..141 \"(\"\n+          REFERENCE_TYPE@141..146\n+            AMP@141..142 \"&\"\n+            LIFETIME@142..144 \"\\'a\"\n+            WHITESPACE@144..145 \" \"\n+            PATH_TYPE@145..146\n+              PATH@145..146\n+                PATH_SEGMENT@145..146\n+                  NAME_REF@145..146\n+                    IDENT@145..146 \"F\"\n+          R_PAREN@146..147 \")\"\n+        COLON@147..148 \":\"\n+        WHITESPACE@148..149 \" \"\n+        TYPE_BOUND_LIST@149..160\n+          TYPE_BOUND@149..160\n+            PATH_TYPE@149..160\n+              PATH@149..160\n+                PATH_SEGMENT@149..160\n+                  NAME_REF@149..151\n+                    IDENT@149..151 \"Fn\"\n+                  PARAM_LIST@151..160\n+                    L_PAREN@151..152 \"(\"\n+                    PARAM@152..159\n+                      REFERENCE_TYPE@152..159\n+                        AMP@152..153 \"&\"\n+                        LIFETIME@153..155 \"\\'a\"\n+                        WHITESPACE@155..156 \" \"\n+                        PATH_TYPE@156..159\n+                          PATH@156..159\n+                            PATH_SEGMENT@156..159\n+                              NAME_REF@156..159\n+                                IDENT@156..159 \"str\"\n+                    R_PAREN@159..160 \")\"\n+    WHITESPACE@160..161 \"\\n\"\n+    BLOCK_EXPR@161..164\n+      L_CURLY@161..162 \"{\"\n+      WHITESPACE@162..163 \" \"\n+      R_CURLY@163..164 \"}\"\n+  WHITESPACE@164..165 \"\\n\"\n+  FN_DEF@165..215\n+    FN_KW@165..167 \"fn\"\n+    WHITESPACE@167..168 \" \"\n+    NAME@168..177\n+      IDENT@168..177 \"for_slice\"\n+    TYPE_PARAM_LIST@177..180\n+      L_ANGLE@177..178 \"<\"\n+      TYPE_PARAM@178..179\n+        NAME@178..179\n+          IDENT@178..179 \"F\"\n+      R_ANGLE@179..180 \">\"\n+    PARAM_LIST@180..182\n+      L_PAREN@180..181 \"(\"\n+      R_PAREN@181..182 \")\"\n+    WHITESPACE@182..183 \"\\n\"\n+    WHERE_CLAUSE@183..211\n+      WHERE_KW@183..188 \"where\"\n+      WHITESPACE@188..192 \"\\n   \"\n+      WHERE_PRED@192..211\n+        FOR_KW@192..195 \"for\"\n+        TYPE_PARAM_LIST@195..199\n+          L_ANGLE@195..196 \"<\"\n+          LIFETIME_PARAM@196..198\n+            LIFETIME@196..198 \"\\'a\"\n+          R_ANGLE@198..199 \">\"\n+        WHITESPACE@199..200 \" \"\n+        SLICE_TYPE@200..207\n+          L_BRACK@200..201 \"[\"\n+          REFERENCE_TYPE@201..206\n+            AMP@201..202 \"&\"\n+            LIFETIME@202..204 \"\\'a\"\n+            WHITESPACE@204..205 \" \"\n+            PATH_TYPE@205..206\n+              PATH@205..206\n+                PATH_SEGMENT@205..206\n+                  NAME_REF@205..206\n+                    IDENT@205..206 \"F\"\n+          R_BRACK@206..207 \"]\"\n+        COLON@207..208 \":\"\n+        WHITESPACE@208..209 \" \"\n+        TYPE_BOUND_LIST@209..211\n+          TYPE_BOUND@209..211\n+            PATH_TYPE@209..211\n+              PATH@209..211\n+                PATH_SEGMENT@209..211\n+                  NAME_REF@209..211\n+                    IDENT@209..211 \"Eq\"\n+    WHITESPACE@211..212 \"\\n\"\n+    BLOCK_EXPR@212..215\n+      L_CURLY@212..213 \"{\"\n+      WHITESPACE@213..214 \" \"\n+      R_CURLY@214..215 \"}\"\n+  WHITESPACE@215..216 \"\\n\"\n+  FN_DEF@216..291\n+    FN_KW@216..218 \"fn\"\n+    WHITESPACE@218..219 \" \"\n+    NAME@219..228\n+      IDENT@219..228 \"for_qpath\"\n+    TYPE_PARAM_LIST@228..231\n+      L_ANGLE@228..229 \"<\"\n+      TYPE_PARAM@229..230\n+        NAME@229..230\n+          IDENT@229..230 \"T\"\n+      R_ANGLE@230..231 \">\"\n+    PARAM_LIST@231..239\n+      L_PAREN@231..232 \"(\"\n+      PARAM@232..238\n+        BIND_PAT@232..234\n+          NAME@232..234\n+            IDENT@232..234 \"_t\"\n+        COLON@234..235 \":\"\n+        WHITESPACE@235..236 \" \"\n+        REFERENCE_TYPE@236..238\n+          AMP@236..237 \"&\"\n+          PATH_TYPE@237..238\n+            PATH@237..238\n+              PATH_SEGMENT@237..238\n+                NAME_REF@237..238\n+                  IDENT@237..238 \"T\"\n+      R_PAREN@238..239 \")\"\n+    WHITESPACE@239..240 \"\\n\"\n+    WHERE_CLAUSE@240..287\n+      WHERE_KW@240..245 \"where\"\n+      WHITESPACE@245..250 \"\\n    \"\n+      WHERE_PRED@250..287\n+        FOR_KW@250..253 \"for\"\n+        TYPE_PARAM_LIST@253..257\n+          L_ANGLE@253..254 \"<\"\n+          LIFETIME_PARAM@254..256\n+            LIFETIME@254..256 \"\\'a\"\n+          R_ANGLE@256..257 \">\"\n+        WHITESPACE@257..258 \" \"\n+        PATH_TYPE@258..277\n+          PATH@258..277\n+            PATH@258..272\n+              PATH_SEGMENT@258..272\n+                L_ANGLE@258..259 \"<\"\n+                REFERENCE_TYPE@259..264\n+                  AMP@259..260 \"&\"\n+                  LIFETIME@260..262 \"\\'a\"\n+                  WHITESPACE@262..263 \" \"\n+                  PATH_TYPE@263..264\n+                    PATH@263..264\n+                      PATH_SEGMENT@263..264\n+                        NAME_REF@263..264\n+                          IDENT@263..264 \"T\"\n+                WHITESPACE@264..265 \" \"\n+                AS_KW@265..267 \"as\"\n+                WHITESPACE@267..268 \" \"\n+                PATH_TYPE@268..271\n+                  PATH@268..271\n+                    PATH_SEGMENT@268..271\n+                      NAME_REF@268..271\n+                        IDENT@268..271 \"Baz\"\n+                R_ANGLE@271..272 \">\"\n+            COLON2@272..274 \"::\"\n+            PATH_SEGMENT@274..277\n+              NAME_REF@274..277\n+                IDENT@274..277 \"Foo\"\n+        COLON@277..278 \":\"\n+        WHITESPACE@278..279 \" \"\n+        TYPE_BOUND_LIST@279..287\n+          TYPE_BOUND@279..287\n+            PATH_TYPE@279..287\n+              PATH@279..287\n+                PATH_SEGMENT@279..287\n+                  NAME_REF@279..287\n+                    IDENT@279..287 \"Iterator\"\n+    WHITESPACE@287..288 \"\\n\"\n+    BLOCK_EXPR@288..291\n+      L_CURLY@288..289 \"{\"\n+      WHITESPACE@289..290 \" \"\n+      R_CURLY@290..291 \"}\"\n+  WHITESPACE@291..292 \"\\n\""}, {"sha": "2d47596be39baa6987569d3726f93ddccb3d9966", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0003_where_pred_for.rs", "status": "modified", "additions": 17, "deletions": 1, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/506e1ddbfa5213f254923da9bbf0efddc6f1fc34/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0003_where_pred_for.rs", "raw_url": "https://github.com/rust-lang/rust/raw/506e1ddbfa5213f254923da9bbf0efddc6f1fc34/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0003_where_pred_for.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0003_where_pred_for.rs?ref=506e1ddbfa5213f254923da9bbf0efddc6f1fc34", "patch": "@@ -1,4 +1,20 @@\n-fn test<F>()\n+fn for_trait<F>()\n where\n    for<'a> F: Fn(&'a str)\n { }\n+fn for_ref<F>()\n+where\n+   for<'a> &'a F: Debug\n+{ }\n+fn for_parens<F>()\n+where\n+   for<'a> (&'a F): Fn(&'a str)\n+{ }\n+fn for_slice<F>()\n+where\n+   for<'a> [&'a F]: Eq\n+{ }\n+fn for_qpath<T>(_t: &T)\n+where\n+    for<'a> <&'a T as Baz>::Foo: Iterator\n+{ }"}, {"sha": "26a80017aea7f1b7c9f562c458259bbb0097eab7", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0081_for_type.rast", "status": "modified", "additions": 46, "deletions": 210, "changes": 256, "blob_url": "https://github.com/rust-lang/rust/blob/506e1ddbfa5213f254923da9bbf0efddc6f1fc34/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0081_for_type.rast", "raw_url": "https://github.com/rust-lang/rust/raw/506e1ddbfa5213f254923da9bbf0efddc6f1fc34/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0081_for_type.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0081_for_type.rast?ref=506e1ddbfa5213f254923da9bbf0efddc6f1fc34", "patch": "@@ -1,4 +1,4 @@\n-SOURCE_FILE@0..200\n+SOURCE_FILE@0..82\n   TYPE_ALIAS_DEF@0..28\n     TYPE_KW@0..4 \"type\"\n     WHITESPACE@4..5 \" \"\n@@ -29,212 +29,48 @@ SOURCE_FILE@0..200\n             R_PAREN@26..27 \")\"\n     SEMICOLON@27..28 \";\"\n   WHITESPACE@28..29 \"\\n\"\n-  FN_DEF@29..79\n-    FN_KW@29..31 \"fn\"\n-    WHITESPACE@31..32 \" \"\n-    NAME@32..35\n-      IDENT@32..35 \"foo\"\n-    TYPE_PARAM_LIST@35..38\n-      L_ANGLE@35..36 \"<\"\n-      TYPE_PARAM@36..37\n-        NAME@36..37\n-          IDENT@36..37 \"T\"\n-      R_ANGLE@37..38 \">\"\n-    PARAM_LIST@38..46\n-      L_PAREN@38..39 \"(\"\n-      PARAM@39..45\n-        BIND_PAT@39..41\n-          NAME@39..41\n-            IDENT@39..41 \"_t\"\n-        COLON@41..42 \":\"\n-        WHITESPACE@42..43 \" \"\n-        REFERENCE_TYPE@43..45\n-          AMP@43..44 \"&\"\n-          PATH_TYPE@44..45\n-            PATH@44..45\n-              PATH_SEGMENT@44..45\n-                NAME_REF@44..45\n-                  IDENT@44..45 \"T\"\n-      R_PAREN@45..46 \")\"\n-    WHITESPACE@46..47 \" \"\n-    WHERE_CLAUSE@47..76\n-      WHERE_KW@47..52 \"where\"\n-      WHITESPACE@52..53 \" \"\n-      WHERE_PRED@53..76\n-        FOR_TYPE@53..66\n-          FOR_KW@53..56 \"for\"\n-          TYPE_PARAM_LIST@56..60\n-            L_ANGLE@56..57 \"<\"\n-            LIFETIME_PARAM@57..59\n-              LIFETIME@57..59 \"\\'a\"\n-            R_ANGLE@59..60 \">\"\n-          WHITESPACE@60..61 \" \"\n-          REFERENCE_TYPE@61..66\n-            AMP@61..62 \"&\"\n-            LIFETIME@62..64 \"\\'a\"\n-            WHITESPACE@64..65 \" \"\n-            PATH_TYPE@65..66\n-              PATH@65..66\n-                PATH_SEGMENT@65..66\n-                  NAME_REF@65..66\n-                    IDENT@65..66 \"T\"\n-        COLON@66..67 \":\"\n-        WHITESPACE@67..68 \" \"\n-        TYPE_BOUND_LIST@68..76\n-          TYPE_BOUND@68..76\n-            PATH_TYPE@68..76\n-              PATH@68..76\n-                PATH_SEGMENT@68..76\n-                  NAME_REF@68..76\n-                    IDENT@68..76 \"Iterator\"\n-    WHITESPACE@76..77 \" \"\n-    BLOCK_EXPR@77..79\n-      L_CURLY@77..78 \"{\"\n-      R_CURLY@78..79 \"}\"\n-  WHITESPACE@79..80 \"\\n\"\n-  FN_DEF@80..134\n-    FN_KW@80..82 \"fn\"\n-    WHITESPACE@82..83 \" \"\n-    NAME@83..86\n-      IDENT@83..86 \"bar\"\n-    TYPE_PARAM_LIST@86..89\n-      L_ANGLE@86..87 \"<\"\n-      TYPE_PARAM@87..88\n-        NAME@87..88\n-          IDENT@87..88 \"T\"\n-      R_ANGLE@88..89 \">\"\n-    PARAM_LIST@89..97\n-      L_PAREN@89..90 \"(\"\n-      PARAM@90..96\n-        BIND_PAT@90..92\n-          NAME@90..92\n-            IDENT@90..92 \"_t\"\n-        COLON@92..93 \":\"\n-        WHITESPACE@93..94 \" \"\n-        REFERENCE_TYPE@94..96\n-          AMP@94..95 \"&\"\n-          PATH_TYPE@95..96\n-            PATH@95..96\n-              PATH_SEGMENT@95..96\n-                NAME_REF@95..96\n-                  IDENT@95..96 \"T\"\n-      R_PAREN@96..97 \")\"\n-    WHITESPACE@97..98 \" \"\n-    WHERE_CLAUSE@98..131\n-      WHERE_KW@98..103 \"where\"\n-      WHITESPACE@103..104 \" \"\n-      WHERE_PRED@104..131\n-        FOR_TYPE@104..121\n-          FOR_KW@104..107 \"for\"\n-          TYPE_PARAM_LIST@107..111\n-            L_ANGLE@107..108 \"<\"\n-            LIFETIME_PARAM@108..110\n-              LIFETIME@108..110 \"\\'a\"\n-            R_ANGLE@110..111 \">\"\n-          WHITESPACE@111..112 \" \"\n-          REFERENCE_TYPE@112..121\n-            AMP@112..113 \"&\"\n-            LIFETIME@113..115 \"\\'a\"\n-            WHITESPACE@115..116 \" \"\n-            MUT_KW@116..119 \"mut\"\n-            WHITESPACE@119..120 \" \"\n-            PATH_TYPE@120..121\n-              PATH@120..121\n-                PATH_SEGMENT@120..121\n-                  NAME_REF@120..121\n-                    IDENT@120..121 \"T\"\n-        COLON@121..122 \":\"\n-        WHITESPACE@122..123 \" \"\n-        TYPE_BOUND_LIST@123..131\n-          TYPE_BOUND@123..131\n-            PATH_TYPE@123..131\n-              PATH@123..131\n-                PATH_SEGMENT@123..131\n-                  NAME_REF@123..131\n-                    IDENT@123..131 \"Iterator\"\n-    WHITESPACE@131..132 \" \"\n-    BLOCK_EXPR@132..134\n-      L_CURLY@132..133 \"{\"\n-      R_CURLY@133..134 \"}\"\n-  WHITESPACE@134..135 \"\\n\"\n-  FN_DEF@135..199\n-    FN_KW@135..137 \"fn\"\n-    WHITESPACE@137..138 \" \"\n-    NAME@138..141\n-      IDENT@138..141 \"baz\"\n-    TYPE_PARAM_LIST@141..144\n-      L_ANGLE@141..142 \"<\"\n-      TYPE_PARAM@142..143\n-        NAME@142..143\n-          IDENT@142..143 \"T\"\n-      R_ANGLE@143..144 \">\"\n-    PARAM_LIST@144..152\n-      L_PAREN@144..145 \"(\"\n-      PARAM@145..151\n-        BIND_PAT@145..147\n-          NAME@145..147\n-            IDENT@145..147 \"_t\"\n-        COLON@147..148 \":\"\n-        WHITESPACE@148..149 \" \"\n-        REFERENCE_TYPE@149..151\n-          AMP@149..150 \"&\"\n-          PATH_TYPE@150..151\n-            PATH@150..151\n-              PATH_SEGMENT@150..151\n-                NAME_REF@150..151\n-                  IDENT@150..151 \"T\"\n-      R_PAREN@151..152 \")\"\n-    WHITESPACE@152..153 \" \"\n-    WHERE_CLAUSE@153..196\n-      WHERE_KW@153..158 \"where\"\n-      WHITESPACE@158..159 \" \"\n-      WHERE_PRED@159..196\n-        FOR_TYPE@159..186\n-          FOR_KW@159..162 \"for\"\n-          TYPE_PARAM_LIST@162..166\n-            L_ANGLE@162..163 \"<\"\n-            LIFETIME_PARAM@163..165\n-              LIFETIME@163..165 \"\\'a\"\n-            R_ANGLE@165..166 \">\"\n-          WHITESPACE@166..167 \" \"\n-          PATH_TYPE@167..186\n-            PATH@167..186\n-              PATH@167..181\n-                PATH_SEGMENT@167..181\n-                  L_ANGLE@167..168 \"<\"\n-                  REFERENCE_TYPE@168..173\n-                    AMP@168..169 \"&\"\n-                    LIFETIME@169..171 \"\\'a\"\n-                    WHITESPACE@171..172 \" \"\n-                    PATH_TYPE@172..173\n-                      PATH@172..173\n-                        PATH_SEGMENT@172..173\n-                          NAME_REF@172..173\n-                            IDENT@172..173 \"T\"\n-                  WHITESPACE@173..174 \" \"\n-                  AS_KW@174..176 \"as\"\n-                  WHITESPACE@176..177 \" \"\n-                  PATH_TYPE@177..180\n-                    PATH@177..180\n-                      PATH_SEGMENT@177..180\n-                        NAME_REF@177..180\n-                          IDENT@177..180 \"Baz\"\n-                  R_ANGLE@180..181 \">\"\n-              COLON2@181..183 \"::\"\n-              PATH_SEGMENT@183..186\n-                NAME_REF@183..186\n-                  IDENT@183..186 \"Foo\"\n-        COLON@186..187 \":\"\n-        WHITESPACE@187..188 \" \"\n-        TYPE_BOUND_LIST@188..196\n-          TYPE_BOUND@188..196\n-            PATH_TYPE@188..196\n-              PATH@188..196\n-                PATH_SEGMENT@188..196\n-                  NAME_REF@188..196\n-                    IDENT@188..196 \"Iterator\"\n-    WHITESPACE@196..197 \" \"\n-    BLOCK_EXPR@197..199\n-      L_CURLY@197..198 \"{\"\n-      R_CURLY@198..199 \"}\"\n-  WHITESPACE@199..200 \"\\n\"\n+  TYPE_ALIAS_DEF@29..81\n+    TYPE_KW@29..33 \"type\"\n+    WHITESPACE@33..34 \" \"\n+    NAME@34..35\n+      IDENT@34..35 \"B\"\n+    WHITESPACE@35..36 \" \"\n+    EQ@36..37 \"=\"\n+    WHITESPACE@37..38 \" \"\n+    FOR_TYPE@38..80\n+      FOR_KW@38..41 \"for\"\n+      TYPE_PARAM_LIST@41..45\n+        L_ANGLE@41..42 \"<\"\n+        LIFETIME_PARAM@42..44\n+          LIFETIME@42..44 \"\\'a\"\n+        R_ANGLE@44..45 \">\"\n+      WHITESPACE@45..46 \" \"\n+      FN_POINTER_TYPE@46..80\n+        UNSAFE_KW@46..52 \"unsafe\"\n+        WHITESPACE@52..53 \" \"\n+        ABI@53..63\n+          EXTERN_KW@53..59 \"extern\"\n+          WHITESPACE@59..60 \" \"\n+          STRING@60..63 \"\\\"C\\\"\"\n+        WHITESPACE@63..64 \" \"\n+        FN_KW@64..66 \"fn\"\n+        PARAM_LIST@66..74\n+          L_PAREN@66..67 \"(\"\n+          PARAM@67..73\n+            REFERENCE_TYPE@67..73\n+              AMP@67..68 \"&\"\n+              LIFETIME@68..70 \"\\'a\"\n+              WHITESPACE@70..71 \" \"\n+              TUPLE_TYPE@71..73\n+                L_PAREN@71..72 \"(\"\n+                R_PAREN@72..73 \")\"\n+          R_PAREN@73..74 \")\"\n+        WHITESPACE@74..75 \" \"\n+        RET_TYPE@75..80\n+          THIN_ARROW@75..77 \"->\"\n+          WHITESPACE@77..78 \" \"\n+          TUPLE_TYPE@78..80\n+            L_PAREN@78..79 \"(\"\n+            R_PAREN@79..80 \")\"\n+    SEMICOLON@80..81 \";\"\n+  WHITESPACE@81..82 \"\\n\""}, {"sha": "457e8744fe108f92777fdd9ce04512e9b61f46cf", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0081_for_type.rs", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/506e1ddbfa5213f254923da9bbf0efddc6f1fc34/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0081_for_type.rs", "raw_url": "https://github.com/rust-lang/rust/raw/506e1ddbfa5213f254923da9bbf0efddc6f1fc34/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0081_for_type.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0081_for_type.rs?ref=506e1ddbfa5213f254923da9bbf0efddc6f1fc34", "patch": "@@ -1,4 +1,2 @@\n type A = for<'a> fn() -> ();\n-fn foo<T>(_t: &T) where for<'a> &'a T: Iterator {}\n-fn bar<T>(_t: &T) where for<'a> &'a mut T: Iterator {}\n-fn baz<T>(_t: &T) where for<'a> <&'a T as Baz>::Foo: Iterator {}\n+type B = for<'a> unsafe extern \"C\" fn(&'a ()) -> ();"}, {"sha": "392648d7133d6c623ffed187d35074a822eca894", "filename": "xtask/src/ast_src.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/506e1ddbfa5213f254923da9bbf0efddc6f1fc34/xtask%2Fsrc%2Fast_src.rs", "raw_url": "https://github.com/rust-lang/rust/raw/506e1ddbfa5213f254923da9bbf0efddc6f1fc34/xtask%2Fsrc%2Fast_src.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/xtask%2Fsrc%2Fast_src.rs?ref=506e1ddbfa5213f254923da9bbf0efddc6f1fc34", "patch": "@@ -1707,7 +1707,7 @@ pub(crate) const AST_SRC: AstSrc = AstSrc {\n         /// ```\n         ///\n         /// [Reference](https://doc.rust-lang.org/reference/items/generics.html#where-clauses)\n-        struct WherePred: TypeBoundsOwner { T![lifetime], TypeRef }\n+        struct WherePred: TypeBoundsOwner { T![for], TypeParamList, T![lifetime], TypeRef }\n \n         /// Where clause.\n         ///"}]}