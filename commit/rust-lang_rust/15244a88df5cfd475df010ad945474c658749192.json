{"sha": "15244a88df5cfd475df010ad945474c658749192", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE1MjQ0YTg4ZGY1Y2ZkNDc1ZGYwMTBhZDk0NTQ3NGM2NTg3NDkxOTI=", "commit": {"author": {"name": "Michael Wright", "email": "mikerite@lavabit.com", "date": "2020-09-14T04:11:35Z"}, "committer": {"name": "Michael Wright", "email": "mikerite@lavabit.com", "date": "2020-09-14T04:11:35Z"}, "message": "Fix `manual-strip` dogfood errors", "tree": {"sha": "d9b055cf5cc5bd3959951e3889e8203037f8f883", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d9b055cf5cc5bd3959951e3889e8203037f8f883"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/15244a88df5cfd475df010ad945474c658749192", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/15244a88df5cfd475df010ad945474c658749192", "html_url": "https://github.com/rust-lang/rust/commit/15244a88df5cfd475df010ad945474c658749192", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/15244a88df5cfd475df010ad945474c658749192/comments", "author": null, "committer": null, "parents": [{"sha": "d1f0f04a488d027fdf91e08cdf25df00fb677205", "url": "https://api.github.com/repos/rust-lang/rust/commits/d1f0f04a488d027fdf91e08cdf25df00fb677205", "html_url": "https://github.com/rust-lang/rust/commit/d1f0f04a488d027fdf91e08cdf25df00fb677205"}], "stats": {"total": 30, "additions": 14, "deletions": 16}, "files": [{"sha": "62bb70af06e937e2e4522b6886d5d411706c670e", "filename": "clippy_lints/src/doc.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/15244a88df5cfd475df010ad945474c658749192/clippy_lints%2Fsrc%2Fdoc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/15244a88df5cfd475df010ad945474c658749192/clippy_lints%2Fsrc%2Fdoc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fdoc.rs?ref=15244a88df5cfd475df010ad945474c658749192", "patch": "@@ -534,7 +534,7 @@ fn check_word(cx: &LateContext<'_>, word: &str, span: Span) {\n             return false;\n         }\n \n-        let s = if s.ends_with('s') { &s[..s.len() - 1] } else { s };\n+        let s = s.strip_suffix('s').unwrap_or(s);\n \n         s.chars().all(char::is_alphanumeric)\n             && s.chars().filter(|&c| c.is_uppercase()).take(2).count() > 1"}, {"sha": "8f5675a61b902d46a539a52c30722a1f5c38e4ac", "filename": "clippy_lints/src/loops.rs", "status": "modified", "additions": 3, "deletions": 5, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/15244a88df5cfd475df010ad945474c658749192/clippy_lints%2Fsrc%2Floops.rs", "raw_url": "https://github.com/rust-lang/rust/raw/15244a88df5cfd475df010ad945474c658749192/clippy_lints%2Fsrc%2Floops.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Floops.rs?ref=15244a88df5cfd475df010ad945474c658749192", "patch": "@@ -2601,11 +2601,9 @@ fn check_needless_collect_direct_usage<'tcx>(expr: &'tcx Expr<'_>, cx: &LateCont\n                         span,\n                         NEEDLESS_COLLECT_MSG,\n                         |diag| {\n-                            let (arg, pred) = if contains_arg.starts_with('&') {\n-                                (\"x\", &contains_arg[1..])\n-                            } else {\n-                                (\"&x\", &*contains_arg)\n-                            };\n+                            let (arg, pred) = contains_arg\n+                                    .strip_prefix('&')\n+                                    .map_or((\"&x\", &*contains_arg), |s| (\"x\", s));\n                             diag.span_suggestion(\n                                 span,\n                                 \"replace with\","}, {"sha": "9cb1cfb915d5796734b2f94b6167709a53a93ea3", "filename": "clippy_lints/src/misc_early.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/15244a88df5cfd475df010ad945474c658749192/clippy_lints%2Fsrc%2Fmisc_early.rs", "raw_url": "https://github.com/rust-lang/rust/raw/15244a88df5cfd475df010ad945474c658749192/clippy_lints%2Fsrc%2Fmisc_early.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmisc_early.rs?ref=15244a88df5cfd475df010ad945474c658749192", "patch": "@@ -377,16 +377,16 @@ impl EarlyLintPass for MiscEarlyLints {\n             if let PatKind::Ident(_, ident, None) = arg.pat.kind {\n                 let arg_name = ident.to_string();\n \n-                if arg_name.starts_with('_') {\n-                    if let Some(correspondence) = registered_names.get(&arg_name[1..]) {\n+                if let Some(arg_name) = arg_name.strip_prefix('_') {\n+                    if let Some(correspondence) = registered_names.get(arg_name) {\n                         span_lint(\n                             cx,\n                             DUPLICATE_UNDERSCORE_ARGUMENT,\n                             *correspondence,\n                             &format!(\n                                 \"`{}` already exists, having another argument having almost the same \\\n                                  name makes code comprehension and documentation more difficult\",\n-                                arg_name[1..].to_owned()\n+                                arg_name\n                             ),\n                         );\n                     }"}, {"sha": "1a7f36fbdadbb65cb43fb2042e3c6e024901ed87", "filename": "clippy_lints/src/redundant_clone.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/15244a88df5cfd475df010ad945474c658749192/clippy_lints%2Fsrc%2Fredundant_clone.rs", "raw_url": "https://github.com/rust-lang/rust/raw/15244a88df5cfd475df010ad945474c658749192/clippy_lints%2Fsrc%2Fredundant_clone.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fredundant_clone.rs?ref=15244a88df5cfd475df010ad945474c658749192", "patch": "@@ -239,10 +239,9 @@ impl<'tcx> LateLintPass<'tcx> for RedundantClone {\n                         );\n                         let mut app = Applicability::MaybeIncorrect;\n \n-                        let mut call_snip = &snip[dot + 1..];\n+                        let call_snip = &snip[dot + 1..];\n                         // Machine applicable when `call_snip` looks like `foobar()`\n-                        if call_snip.ends_with(\"()\") {\n-                            call_snip = call_snip[..call_snip.len()-2].trim();\n+                        if let Some(call_snip) = call_snip.strip_suffix(\"()\").map(str::trim) {\n                             if call_snip.as_bytes().iter().all(|b| b.is_ascii_alphabetic() || *b == b'_') {\n                                 app = Applicability::MachineApplicable;\n                             }"}, {"sha": "32a67f181df435ed1157c5d00f6196495509668a", "filename": "tests/ui/let_if_seq.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/15244a88df5cfd475df010ad945474c658749192/tests%2Fui%2Flet_if_seq.rs", "raw_url": "https://github.com/rust-lang/rust/raw/15244a88df5cfd475df010ad945474c658749192/tests%2Fui%2Flet_if_seq.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Flet_if_seq.rs?ref=15244a88df5cfd475df010ad945474c658749192", "patch": "@@ -33,6 +33,7 @@ fn issue985_alt() -> i32 {\n     x\n }\n \n+#[allow(clippy::manual_strip)]\n fn issue975() -> String {\n     let mut udn = \"dummy\".to_string();\n     if udn.starts_with(\"uuid:\") {"}, {"sha": "7de560c73486bf7e622523d4af6036b8ac4b5163", "filename": "tests/ui/let_if_seq.stderr", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/15244a88df5cfd475df010ad945474c658749192/tests%2Fui%2Flet_if_seq.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/15244a88df5cfd475df010ad945474c658749192/tests%2Fui%2Flet_if_seq.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Flet_if_seq.stderr?ref=15244a88df5cfd475df010ad945474c658749192", "patch": "@@ -1,5 +1,5 @@\n error: `if _ { .. } else { .. }` is an expression\n-  --> $DIR/let_if_seq.rs:63:5\n+  --> $DIR/let_if_seq.rs:64:5\n    |\n LL | /     let mut foo = 0;\n LL | |     if f() {\n@@ -11,7 +11,7 @@ LL | |     }\n    = note: you might not need `mut` at all\n \n error: `if _ { .. } else { .. }` is an expression\n-  --> $DIR/let_if_seq.rs:68:5\n+  --> $DIR/let_if_seq.rs:69:5\n    |\n LL | /     let mut bar = 0;\n LL | |     if f() {\n@@ -25,7 +25,7 @@ LL | |     }\n    = note: you might not need `mut` at all\n \n error: `if _ { .. } else { .. }` is an expression\n-  --> $DIR/let_if_seq.rs:76:5\n+  --> $DIR/let_if_seq.rs:77:5\n    |\n LL | /     let quz;\n LL | |     if f() {\n@@ -36,7 +36,7 @@ LL | |     }\n    | |_____^ help: it is more idiomatic to write: `let quz = if f() { 42 } else { 0 };`\n \n error: `if _ { .. } else { .. }` is an expression\n-  --> $DIR/let_if_seq.rs:105:5\n+  --> $DIR/let_if_seq.rs:106:5\n    |\n LL | /     let mut baz = 0;\n LL | |     if f() {"}]}