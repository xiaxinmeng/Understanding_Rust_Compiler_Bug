{"sha": "a9f9227a1c3d944ea9f5d88c721fbb32473b5454", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE5ZjkyMjdhMWMzZDk0NGVhOWY1ZDg4YzcyMWZiYjMyNDczYjU0NTQ=", "commit": {"author": {"name": "Matt Brubeck", "email": "mbrubeck@limpet.net", "date": "2011-10-27T19:46:55Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2011-10-27T20:37:53Z"}, "message": "Add std documentation for float and u8 functions", "tree": {"sha": "4fc39b66d94820c30539f297fb6136403cb53a99", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4fc39b66d94820c30539f297fb6136403cb53a99"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a9f9227a1c3d944ea9f5d88c721fbb32473b5454", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a9f9227a1c3d944ea9f5d88c721fbb32473b5454", "html_url": "https://github.com/rust-lang/rust/commit/a9f9227a1c3d944ea9f5d88c721fbb32473b5454", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a9f9227a1c3d944ea9f5d88c721fbb32473b5454/comments", "author": {"login": "mbrubeck", "id": 5920, "node_id": "MDQ6VXNlcjU5MjA=", "avatar_url": "https://avatars.githubusercontent.com/u/5920?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mbrubeck", "html_url": "https://github.com/mbrubeck", "followers_url": "https://api.github.com/users/mbrubeck/followers", "following_url": "https://api.github.com/users/mbrubeck/following{/other_user}", "gists_url": "https://api.github.com/users/mbrubeck/gists{/gist_id}", "starred_url": "https://api.github.com/users/mbrubeck/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mbrubeck/subscriptions", "organizations_url": "https://api.github.com/users/mbrubeck/orgs", "repos_url": "https://api.github.com/users/mbrubeck/repos", "events_url": "https://api.github.com/users/mbrubeck/events{/privacy}", "received_events_url": "https://api.github.com/users/mbrubeck/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9e4c2b6bc60335f3eb64d4ea0514bafabd264675", "url": "https://api.github.com/repos/rust-lang/rust/commits/9e4c2b6bc60335f3eb64d4ea0514bafabd264675", "html_url": "https://github.com/rust-lang/rust/commit/9e4c2b6bc60335f3eb64d4ea0514bafabd264675"}], "stats": {"total": 41, "additions": 41, "deletions": 0}, "files": [{"sha": "5bdf250069e94eae29793903e0e04c92ce976c8f", "filename": "src/lib/float.rs", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/a9f9227a1c3d944ea9f5d88c721fbb32473b5454/src%2Flib%2Ffloat.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a9f9227a1c3d944ea9f5d88c721fbb32473b5454/src%2Flib%2Ffloat.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flib%2Ffloat.rs?ref=a9f9227a1c3d944ea9f5d88c721fbb32473b5454", "patch": "@@ -223,34 +223,49 @@ fn neg_infinity() -> float {\n    ret -1./0.;\n }\n \n+/* Function: add */\n pure fn add(x: float, y: float) -> float { ret x + y; }\n \n+/* Function: sub */\n pure fn sub(x: float, y: float) -> float { ret x - y; }\n \n+/* Function: mul */\n pure fn mul(x: float, y: float) -> float { ret x * y; }\n \n+/* Function: div */\n pure fn div(x: float, y: float) -> float { ret x / y; }\n \n+/* Function: rem */\n pure fn rem(x: float, y: float) -> float { ret x % y; }\n \n+/* Predicate: lt */\n pure fn lt(x: float, y: float) -> bool { ret x < y; }\n \n+/* Predicate: le */\n pure fn le(x: float, y: float) -> bool { ret x <= y; }\n \n+/* Predicate: eq */\n pure fn eq(x: float, y: float) -> bool { ret x == y; }\n \n+/* Predicate: ne */\n pure fn ne(x: float, y: float) -> bool { ret x != y; }\n \n+/* Predicate: ge */\n pure fn ge(x: float, y: float) -> bool { ret x >= y; }\n \n+/* Predicate: gt */\n pure fn gt(x: float, y: float) -> bool { ret x > y; }\n \n+/* Predicate: positive */\n pure fn positive(x: float) -> bool { ret x > 0.; }\n \n+/* Predicate: negative */\n pure fn negative(x: float) -> bool { ret x < 0.; }\n \n+/* Predicate: nonpositive */\n pure fn nonpositive(x: float) -> bool { ret x <= 0.; }\n \n+/* Predicate: nonnegative */\n pure fn nonnegative(x: float) -> bool { ret x >= 0.; }\n \n //"}, {"sha": "5f594165e19680303d656ab4ed2b8d2119bebc8a", "filename": "src/lib/u8.rs", "status": "modified", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/a9f9227a1c3d944ea9f5d88c721fbb32473b5454/src%2Flib%2Fu8.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a9f9227a1c3d944ea9f5d88c721fbb32473b5454/src%2Flib%2Fu8.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flib%2Fu8.rs?ref=a9f9227a1c3d944ea9f5d88c721fbb32473b5454", "patch": "@@ -1,26 +1,52 @@\n+/*\n+Module: u8\n+*/\n+\n+/*\n+Function: max_value\n+\n+The maximum value of a u8.\n+*/\n pure fn max_value() -> u8 { ret 255u8; }\n+\n+/*\n+Function: min_value\n+\n+The minumum value of a u8.\n+*/\n pure fn min_value() -> u8 { ret 0u8; }\n \n+/* Function: add */\n pure fn add(x: u8, y: u8) -> u8 { ret x + y; }\n \n+/* Function: sub */\n pure fn sub(x: u8, y: u8) -> u8 { ret x - y; }\n \n+/* Function: mul */\n pure fn mul(x: u8, y: u8) -> u8 { ret x * y; }\n \n+/* Function: div */\n pure fn div(x: u8, y: u8) -> u8 { ret x / y; }\n \n+/* Function: rem */\n pure fn rem(x: u8, y: u8) -> u8 { ret x % y; }\n \n+/* Predicate: lt */\n pure fn lt(x: u8, y: u8) -> bool { ret x < y; }\n \n+/* Predicate: le */\n pure fn le(x: u8, y: u8) -> bool { ret x <= y; }\n \n+/* Predicate: eq */\n pure fn eq(x: u8, y: u8) -> bool { ret x == y; }\n \n+/* Predicate: ne */\n pure fn ne(x: u8, y: u8) -> bool { ret x != y; }\n \n+/* Predicate: ge */\n pure fn ge(x: u8, y: u8) -> bool { ret x >= y; }\n \n+/* Predicate: gt */\n pure fn gt(x: u8, y: u8) -> bool { ret x > y; }\n \n fn range(lo: u8, hi: u8, it: block(u8)) {"}]}