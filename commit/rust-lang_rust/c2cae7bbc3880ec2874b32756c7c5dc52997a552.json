{"sha": "c2cae7bbc3880ec2874b32756c7c5dc52997a552", "node_id": "MDY6Q29tbWl0NzI0NzEyOmMyY2FlN2JiYzM4ODBlYzI4NzRiMzI3NTZjN2M1ZGM1Mjk5N2E1NTI=", "commit": {"author": {"name": "Nicholas Nethercote", "email": "nnethercote@mozilla.com", "date": "2019-05-09T01:54:47Z"}, "committer": {"name": "Nicholas Nethercote", "email": "nnethercote@mozilla.com", "date": "2019-05-10T05:59:12Z"}, "message": "Avoid recursion in de-gensym functions.", "tree": {"sha": "13959efb8eba8a2d02d968dbd12562498b71a3c5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/13959efb8eba8a2d02d968dbd12562498b71a3c5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c2cae7bbc3880ec2874b32756c7c5dc52997a552", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c2cae7bbc3880ec2874b32756c7c5dc52997a552", "html_url": "https://github.com/rust-lang/rust/commit/c2cae7bbc3880ec2874b32756c7c5dc52997a552", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c2cae7bbc3880ec2874b32756c7c5dc52997a552/comments", "author": {"login": "nnethercote", "id": 1940286, "node_id": "MDQ6VXNlcjE5NDAyODY=", "avatar_url": "https://avatars.githubusercontent.com/u/1940286?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nnethercote", "html_url": "https://github.com/nnethercote", "followers_url": "https://api.github.com/users/nnethercote/followers", "following_url": "https://api.github.com/users/nnethercote/following{/other_user}", "gists_url": "https://api.github.com/users/nnethercote/gists{/gist_id}", "starred_url": "https://api.github.com/users/nnethercote/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nnethercote/subscriptions", "organizations_url": "https://api.github.com/users/nnethercote/orgs", "repos_url": "https://api.github.com/users/nnethercote/repos", "events_url": "https://api.github.com/users/nnethercote/events{/privacy}", "received_events_url": "https://api.github.com/users/nnethercote/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nnethercote", "id": 1940286, "node_id": "MDQ6VXNlcjE5NDAyODY=", "avatar_url": "https://avatars.githubusercontent.com/u/1940286?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nnethercote", "html_url": "https://github.com/nnethercote", "followers_url": "https://api.github.com/users/nnethercote/followers", "following_url": "https://api.github.com/users/nnethercote/following{/other_user}", "gists_url": "https://api.github.com/users/nnethercote/gists{/gist_id}", "starred_url": "https://api.github.com/users/nnethercote/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nnethercote/subscriptions", "organizations_url": "https://api.github.com/users/nnethercote/orgs", "repos_url": "https://api.github.com/users/nnethercote/repos", "events_url": "https://api.github.com/users/nnethercote/events{/privacy}", "received_events_url": "https://api.github.com/users/nnethercote/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8c465b4efab9dec55434193acacf0a10e83c3ae0", "url": "https://api.github.com/repos/rust-lang/rust/commits/8c465b4efab9dec55434193acacf0a10e83c3ae0", "html_url": "https://github.com/rust-lang/rust/commit/8c465b4efab9dec55434193acacf0a10e83c3ae0"}], "stats": {"total": 7, "additions": 5, "deletions": 2}, "files": [{"sha": "e8472e1b9f1f2b0bd51ce7cf5db1c7a418011d51", "filename": "src/libsyntax_pos/symbol.rs", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/c2cae7bbc3880ec2874b32756c7c5dc52997a552/src%2Flibsyntax_pos%2Fsymbol.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c2cae7bbc3880ec2874b32756c7c5dc52997a552/src%2Flibsyntax_pos%2Fsymbol.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax_pos%2Fsymbol.rs?ref=c2cae7bbc3880ec2874b32756c7c5dc52997a552", "patch": "@@ -492,7 +492,7 @@ impl Interner {\n         if (symbol.0.as_usize()) < self.strings.len() {\n             symbol\n         } else {\n-            self.interned(self.gensyms[(SymbolIndex::MAX_AS_U32 - symbol.0.as_u32()) as usize])\n+            self.gensyms[(SymbolIndex::MAX_AS_U32 - symbol.0.as_u32()) as usize]\n         }\n     }\n \n@@ -513,7 +513,10 @@ impl Interner {\n     pub fn get(&self, symbol: Symbol) -> &str {\n         match self.strings.get(symbol.0.as_usize()) {\n             Some(string) => string,\n-            None => self.get(self.gensyms[(SymbolIndex::MAX_AS_U32 - symbol.0.as_u32()) as usize]),\n+            None => {\n+                let symbol = self.gensyms[(SymbolIndex::MAX_AS_U32 - symbol.0.as_u32()) as usize];\n+                self.strings[symbol.0.as_usize()]\n+            }\n         }\n     }\n }"}]}