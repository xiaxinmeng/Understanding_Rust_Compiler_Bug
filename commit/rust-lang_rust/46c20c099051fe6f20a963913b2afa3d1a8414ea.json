{"sha": "46c20c099051fe6f20a963913b2afa3d1a8414ea", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ2YzIwYzA5OTA1MWZlNmYyMGE5NjM5MTNiMmFmYTNkMWE4NDE0ZWE=", "commit": {"author": {"name": "Geoffry Song", "email": "goffrie@gmail.com", "date": "2018-01-16T19:43:57Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2018-01-16T19:43:57Z"}, "message": "Remove incorrect `Default::default` links, add a new one\n\n`map_or` and `map_or_else` don't use `Default::default`, but `unwrap_or_default` does.", "tree": {"sha": "8fa33c171945190d8697e2c2ab6b3015927c6020", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8fa33c171945190d8697e2c2ab6b3015927c6020"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/46c20c099051fe6f20a963913b2afa3d1a8414ea", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJaXlX9CRBK7hj4Ov3rIwAAdHIIABgAoeV+K25dpaaD5YxTafcj\nwgQO4Dlkh7oxZ3SYseDPIwwyQk7MEc5iZ+Tfh/GKl9fUnMoZMfoDWjX/RxmeqrwV\nHJ6eyGlkkN+IArgA86/Y63a/bEkE/JVFL9HUYaHJKtMzcmHNLexZSSjpoBmb6oS3\nSA3LW+mFBuc/BBh9AzfG36NN4c1Oyb33BlYtgGyHt7OOTaIhUQrM1QC0DNZVxSm4\nZFrqh6pxV8SN7t6wflUb3eSmG+5MsRI2AIXc8c/KwD7gal03RYgSnQmsr3+AiKAZ\nb5Ol38utleCkqt/ufoq+tcaVH/BYaUvbh1X76Qxs8HfhA/aNkSFU0+ZpHLaqMqA=\n=WoAY\n-----END PGP SIGNATURE-----\n", "payload": "tree 8fa33c171945190d8697e2c2ab6b3015927c6020\nparent da569fa9ddf8369a9809184d43c600dc06bd4b4d\nauthor Geoffry Song <goffrie@gmail.com> 1516131837 -0800\ncommitter GitHub <noreply@github.com> 1516131837 -0800\n\nRemove incorrect `Default::default` links, add a new one\n\n`map_or` and `map_or_else` don't use `Default::default`, but `unwrap_or_default` does."}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/46c20c099051fe6f20a963913b2afa3d1a8414ea", "html_url": "https://github.com/rust-lang/rust/commit/46c20c099051fe6f20a963913b2afa3d1a8414ea", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/46c20c099051fe6f20a963913b2afa3d1a8414ea/comments", "author": {"login": "goffrie", "id": 1240398, "node_id": "MDQ6VXNlcjEyNDAzOTg=", "avatar_url": "https://avatars.githubusercontent.com/u/1240398?v=4", "gravatar_id": "", "url": "https://api.github.com/users/goffrie", "html_url": "https://github.com/goffrie", "followers_url": "https://api.github.com/users/goffrie/followers", "following_url": "https://api.github.com/users/goffrie/following{/other_user}", "gists_url": "https://api.github.com/users/goffrie/gists{/gist_id}", "starred_url": "https://api.github.com/users/goffrie/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/goffrie/subscriptions", "organizations_url": "https://api.github.com/users/goffrie/orgs", "repos_url": "https://api.github.com/users/goffrie/repos", "events_url": "https://api.github.com/users/goffrie/events{/privacy}", "received_events_url": "https://api.github.com/users/goffrie/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "da569fa9ddf8369a9809184d43c600dc06bd4b4d", "url": "https://api.github.com/repos/rust-lang/rust/commits/da569fa9ddf8369a9809184d43c600dc06bd4b4d", "html_url": "https://github.com/rust-lang/rust/commit/da569fa9ddf8369a9809184d43c600dc06bd4b4d"}], "stats": {"total": 11, "additions": 4, "deletions": 7}, "files": [{"sha": "15181dab8531cb9330fff8574e5cc9c112657708", "filename": "src/libcore/option.rs", "status": "modified", "additions": 4, "deletions": 7, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/46c20c099051fe6f20a963913b2afa3d1a8414ea/src%2Flibcore%2Foption.rs", "raw_url": "https://github.com/rust-lang/rust/raw/46c20c099051fe6f20a963913b2afa3d1a8414ea/src%2Flibcore%2Foption.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Foption.rs?ref=46c20c099051fe6f20a963913b2afa3d1a8414ea", "patch": "@@ -407,9 +407,7 @@ impl<T> Option<T> {\n     }\n \n     /// Applies a function to the contained value (if any),\n-    /// or returns a [`default`][] (if not).\n-    ///\n-    /// [`default`]: ../default/trait.Default.html#tymethod.default\n+    /// or returns the provided default (if not).\n     ///\n     /// # Examples\n     ///\n@@ -430,9 +428,7 @@ impl<T> Option<T> {\n     }\n \n     /// Applies a function to the contained value (if any),\n-    /// or computes a [`default`][] (if not).\n-    ///\n-    /// [`default`]: ../default/trait.Default.html#tymethod.default\n+    /// or computes a default (if not).\n     ///\n     /// # Examples\n     ///\n@@ -850,7 +846,7 @@ impl<T: Default> Option<T> {\n     /// Returns the contained value or a default\n     ///\n     /// Consumes the `self` argument then, if [`Some`], returns the contained\n-    /// value, otherwise if [`None`], returns the default value for that\n+    /// value, otherwise if [`None`], returns the [default value] for that\n     /// type.\n     ///\n     /// # Examples\n@@ -872,6 +868,7 @@ impl<T: Default> Option<T> {\n     ///\n     /// [`Some`]: #variant.Some\n     /// [`None`]: #variant.None\n+    /// [default value]: ../default/trait.Default.html#tymethod.default\n     /// [`parse`]: ../../std/primitive.str.html#method.parse\n     /// [`FromStr`]: ../../std/str/trait.FromStr.html\n     #[inline]"}]}