{"sha": "f062544cddb5ea662a4a7db3ecf49445c27dd089", "node_id": "MDY6Q29tbWl0NzI0NzEyOmYwNjI1NDRjZGRiNWVhNjYyYTRhN2RiM2VjZjQ5NDQ1YzI3ZGQwODk=", "commit": {"author": {"name": "topecongiro", "email": "seuchida@gmail.com", "date": "2017-06-23T03:57:34Z"}, "committer": {"name": "topecongiro", "email": "seuchida@gmail.com", "date": "2017-06-23T04:03:37Z"}, "message": "Update tests inside macro.rs\n\nI moved around some tests in order to prevent rustfmt from failing to format\ntests after macro invocations whose arguments cannot be parsed as expressions.", "tree": {"sha": "d2b532947c6dd7a352bc9f7c5050850385266657", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d2b532947c6dd7a352bc9f7c5050850385266657"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f062544cddb5ea662a4a7db3ecf49445c27dd089", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f062544cddb5ea662a4a7db3ecf49445c27dd089", "html_url": "https://github.com/rust-lang/rust/commit/f062544cddb5ea662a4a7db3ecf49445c27dd089", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f062544cddb5ea662a4a7db3ecf49445c27dd089/comments", "author": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "committer": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "60f0c576c9d6227f493494fe3cc7ca3880ab6b2d", "url": "https://api.github.com/repos/rust-lang/rust/commits/60f0c576c9d6227f493494fe3cc7ca3880ab6b2d", "html_url": "https://github.com/rust-lang/rust/commit/60f0c576c9d6227f493494fe3cc7ca3880ab6b2d"}], "stats": {"total": 101, "additions": 73, "deletions": 28}, "files": [{"sha": "e3d7229a0e1023b7dc07615c39bec5d07fe321bb", "filename": "tests/source/macros.rs", "status": "modified", "additions": 29, "deletions": 10, "changes": 39, "blob_url": "https://github.com/rust-lang/rust/blob/f062544cddb5ea662a4a7db3ecf49445c27dd089/tests%2Fsource%2Fmacros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f062544cddb5ea662a4a7db3ecf49445c27dd089/tests%2Fsource%2Fmacros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fsource%2Fmacros.rs?ref=f062544cddb5ea662a4a7db3ecf49445c27dd089", "patch": "@@ -12,6 +12,8 @@ fn main() {\n \n     bar!( a , b , c );\n \n+    bar!( a , b , c , );\n+\n     baz!(1+2+3, quux. kaas());\n \n     quux!(AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA, BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB);\n@@ -85,11 +87,6 @@ fn main() {\n         10, 11, 12;\n         20, 21, 22);\n \n-    // #1577\n-    let json = json!({\n-        \"foo\": \"bar\",\n-    });\n-\n     // #1092\n     chain!(input, a:take!(max_size), || []);\n }\n@@ -98,11 +95,6 @@ impl X {\n     empty_invoc!{}\n }\n \n-gfx_pipeline!(pipe {\n-    vbuf: gfx::VertexBuffer<Vertex> = (),\n-    out: gfx::RenderTarget<ColorFormat> = \"Target0\",\n-});\n-\n fn issue_1279() {\n     println!(\"dsfs\"); // a comment\n }\n@@ -120,3 +112,30 @@ fn issue1178() {\n \n     foo!(#[doc = \"bar\"] baz);\n }\n+fn issue1739() {\n+    sql_function!(add_rss_item,\n+                  add_rss_item_t,\n+                  (a: types::Integer,\n+                   b: types::Timestamptz,\n+                   c: types::Text,\n+                   d: types::Text,\n+                   e: types::Text));\n+\n+    w.slice_mut(s![.., init_size[1] - extreeeeeeeeeeeeeeeeeeeeeeeem..init_size[1], ..])\n+        .par_map_inplace(|el| *el = 0.);\n+}\n+\n+// Put the following tests with macro invocations whose arguments cannot be parsed as expressioins\n+// at the end of the file for now.\n+\n+// #1577\n+fn issue1577() {\n+    let json = json!({\n+        \"foo\": \"bar\",\n+    });\n+}\n+\n+gfx_pipeline!(pipe {\n+    vbuf: gfx::VertexBuffer<Vertex> = (),\n+    out: gfx::RenderTarget<ColorFormat> = \"Target0\",\n+});"}, {"sha": "bd1042638a1f2010614e42fea5ff8620083cbfe0", "filename": "tests/target/macros.rs", "status": "modified", "additions": 43, "deletions": 17, "changes": 60, "blob_url": "https://github.com/rust-lang/rust/blob/f062544cddb5ea662a4a7db3ecf49445c27dd089/tests%2Ftarget%2Fmacros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f062544cddb5ea662a4a7db3ecf49445c27dd089/tests%2Ftarget%2Fmacros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fmacros.rs?ref=f062544cddb5ea662a4a7db3ecf49445c27dd089", "patch": "@@ -17,6 +17,8 @@ fn main() {\n \n     bar!(a, b, c);\n \n+    bar!(a, b, c,);\n+\n     baz!(1 + 2 + 3, quux.kaas());\n \n     quux!(\n@@ -30,7 +32,7 @@ fn main() {\n         b /* another */\n     );\n \n-    trailingcomma!( a , b , c , );\n+    trailingcomma!(a, b, c,);\n \n     noexpr!( i am not an expression, OK? );\n \n@@ -81,9 +83,7 @@ fn main() {\n     ];\n     vec![a; unsafe { x + 1 }];\n \n-    unknown_bracket_macro__comma_should_not_be_stripped![\n-    a,\n-    ];\n+    unknown_bracket_macro__comma_should_not_be_stripped![a,];\n \n     foo(makro!(1, 3));\n \n@@ -116,11 +116,6 @@ fn main() {\n         10, 11, 12;\n         20, 21, 22);\n \n-    // #1577\n-    let json = json!({\n-        \"foo\": \"bar\",\n-    });\n-\n     // #1092\n     chain!(input, a:take!(max_size), || []);\n }\n@@ -129,19 +124,16 @@ impl X {\n     empty_invoc!{}\n }\n \n-gfx_pipeline!(pipe {\n-    vbuf: gfx::VertexBuffer<Vertex> = (),\n-    out: gfx::RenderTarget<ColorFormat> = \"Target0\",\n-});\n-\n fn issue_1279() {\n     println!(\"dsfs\"); // a comment\n }\n \n fn issue_1555() {\n-    let hello = &format!(\"HTTP/1.1 200 OK\\r\\nServer: {}\\r\\n\\r\\n{}\",\n-                         \"65454654654654654654654655464\",\n-                         \"4\");\n+    let hello = &format!(\n+        \"HTTP/1.1 200 OK\\r\\nServer: {}\\r\\n\\r\\n{}\",\n+        \"65454654654654654654654655464\",\n+        \"4\"\n+    );\n }\n \n fn issue1178() {\n@@ -151,3 +143,37 @@ fn issue1178() {\n \n     foo!(#[doc = \"bar\"] baz);\n }\n+fn issue1739() {\n+    sql_function!(\n+        add_rss_item,\n+        add_rss_item_t,\n+        (\n+            a: types::Integer,\n+            b: types::Timestamptz,\n+            c: types::Text,\n+            d: types::Text,\n+            e: types::Text,\n+        )\n+    );\n+\n+    w.slice_mut(s![\n+        ..,\n+        init_size[1] - extreeeeeeeeeeeeeeeeeeeeeeeem..init_size[1],\n+        ..\n+    ]).par_map_inplace(|el| *el = 0.);\n+}\n+\n+// Put the following tests with macro invocations whose arguments cannot be parsed as expressioins\n+// at the end of the file for now.\n+\n+// #1577\n+fn issue1577() {\n+    let json = json!({\n+        \"foo\": \"bar\",\n+    });\n+}\n+\n+gfx_pipeline!(pipe {\n+    vbuf: gfx::VertexBuffer<Vertex> = (),\n+    out: gfx::RenderTarget<ColorFormat> = \"Target0\",\n+});"}, {"sha": "0b82e4821364868f4d125b3210da873ca54df61b", "filename": "tests/target/tuple.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f062544cddb5ea662a4a7db3ecf49445c27dd089/tests%2Ftarget%2Ftuple.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f062544cddb5ea662a4a7db3ecf49445c27dd089/tests%2Ftarget%2Ftuple.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Ftuple.rs?ref=f062544cddb5ea662a4a7db3ecf49445c27dd089", "patch": "@@ -69,7 +69,7 @@ fn issue775() {\n                     \"b\".to_string(),\n                     Array(vec![\n                         mk_object(\n-                            &[(\"c\".to_string(), String(\"\\x0c\\r\".to_string()))]\n+                            &[(\"c\".to_string(), String(\"\\x0c\\r\".to_string()))],\n                         ),\n                         mk_object(&[(\"d\".to_string(), String(\"\".to_string()))]),\n                     ]),"}]}