{"sha": "41bfd18e0266b990708879c2bc22edb2626b1532", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQxYmZkMThlMDI2NmI5OTA3MDg4NzljMmJjMjJlZGIyNjI2YjE1MzI=", "commit": {"author": {"name": "Tom Eccles", "email": "tom.eccles@codethink.co.uk", "date": "2020-06-02T11:07:43Z"}, "committer": {"name": "Tom Eccles", "email": "tom.eccles@codethink.co.uk", "date": "2020-06-04T15:00:31Z"}, "message": "resolve: Sort E0408 errors by Symbol str\n\nPreviously errors were sorted by Symbol index instead of the string. The\nindexes are not the same between architectures because Symbols for\narchitecture extensions (e.g. x86 AVX or RISC-V d) are interned before\nthe source file is parsed. RISC-V's naming of extensions after single\nletters led to it having errors sorted differently for test cases using\nsingle letter variable names. Instead sort the errors by the Symbol\nstring so that it is stable across architectures.", "tree": {"sha": "e0319350b4e6ed9813dbc504aff886f937082417", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e0319350b4e6ed9813dbc504aff886f937082417"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/41bfd18e0266b990708879c2bc22edb2626b1532", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/41bfd18e0266b990708879c2bc22edb2626b1532", "html_url": "https://github.com/rust-lang/rust/commit/41bfd18e0266b990708879c2bc22edb2626b1532", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/41bfd18e0266b990708879c2bc22edb2626b1532/comments", "author": {"login": "tblah", "id": 3716681, "node_id": "MDQ6VXNlcjM3MTY2ODE=", "avatar_url": "https://avatars.githubusercontent.com/u/3716681?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tblah", "html_url": "https://github.com/tblah", "followers_url": "https://api.github.com/users/tblah/followers", "following_url": "https://api.github.com/users/tblah/following{/other_user}", "gists_url": "https://api.github.com/users/tblah/gists{/gist_id}", "starred_url": "https://api.github.com/users/tblah/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tblah/subscriptions", "organizations_url": "https://api.github.com/users/tblah/orgs", "repos_url": "https://api.github.com/users/tblah/repos", "events_url": "https://api.github.com/users/tblah/events{/privacy}", "received_events_url": "https://api.github.com/users/tblah/received_events", "type": "User", "site_admin": false}, "committer": {"login": "tblah", "id": 3716681, "node_id": "MDQ6VXNlcjM3MTY2ODE=", "avatar_url": "https://avatars.githubusercontent.com/u/3716681?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tblah", "html_url": "https://github.com/tblah", "followers_url": "https://api.github.com/users/tblah/followers", "following_url": "https://api.github.com/users/tblah/following{/other_user}", "gists_url": "https://api.github.com/users/tblah/gists{/gist_id}", "starred_url": "https://api.github.com/users/tblah/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tblah/subscriptions", "organizations_url": "https://api.github.com/users/tblah/orgs", "repos_url": "https://api.github.com/users/tblah/repos", "events_url": "https://api.github.com/users/tblah/events{/privacy}", "received_events_url": "https://api.github.com/users/tblah/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8edb05c2a0dbb6bee7c71c664e216c0d863411a6", "url": "https://api.github.com/repos/rust-lang/rust/commits/8edb05c2a0dbb6bee7c71c664e216c0d863411a6", "html_url": "https://github.com/rust-lang/rust/commit/8edb05c2a0dbb6bee7c71c664e216c0d863411a6"}], "stats": {"total": 49, "additions": 25, "deletions": 24}, "files": [{"sha": "2e37f666b39875892d735e3efc52b1e0048a1626", "filename": "src/librustc_resolve/late.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/41bfd18e0266b990708879c2bc22edb2626b1532/src%2Flibrustc_resolve%2Flate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/41bfd18e0266b990708879c2bc22edb2626b1532/src%2Flibrustc_resolve%2Flate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2Flate.rs?ref=41bfd18e0266b990708879c2bc22edb2626b1532", "patch": "@@ -1323,7 +1323,8 @@ impl<'a, 'b, 'ast> LateResolutionVisitor<'a, 'b, 'ast> {\n \n         // 3) Report all missing variables we found.\n         let mut missing_vars = missing_vars.iter_mut().collect::<Vec<_>>();\n-        missing_vars.sort();\n+        missing_vars.sort_by_key(|(sym, _err)| sym.as_str());\n+\n         for (name, mut v) in missing_vars {\n             if inconsistent_vars.contains_key(name) {\n                 v.could_be_path = false;"}, {"sha": "998577cf4b5e072846a3f618103aee6be9db2ef8", "filename": "src/test/ui/or-patterns/mismatched-bindings-async-fn.stderr", "status": "modified", "additions": 13, "deletions": 13, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/41bfd18e0266b990708879c2bc22edb2626b1532/src%2Ftest%2Fui%2For-patterns%2Fmismatched-bindings-async-fn.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/41bfd18e0266b990708879c2bc22edb2626b1532/src%2Ftest%2Fui%2For-patterns%2Fmismatched-bindings-async-fn.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2For-patterns%2Fmismatched-bindings-async-fn.stderr?ref=41bfd18e0266b990708879c2bc22edb2626b1532", "patch": "@@ -1,11 +1,3 @@\n-error[E0408]: variable `x` is not bound in all patterns\n-  --> $DIR/mismatched-bindings-async-fn.rs:6:17\n-   |\n-LL | async fn a((x | s): String) {}\n-   |             -   ^ pattern doesn't bind `x`\n-   |             |\n-   |             variable not in all patterns\n-\n error[E0408]: variable `s` is not bound in all patterns\n   --> $DIR/mismatched-bindings-async-fn.rs:6:13\n    |\n@@ -15,12 +7,12 @@ LL | async fn a((x | s): String) {}\n    |             pattern doesn't bind `s`\n \n error[E0408]: variable `x` is not bound in all patterns\n-  --> $DIR/mismatched-bindings-async-fn.rs:11:13\n+  --> $DIR/mismatched-bindings-async-fn.rs:6:17\n    |\n-LL |     let x | s = String::new();\n-   |         -   ^ pattern doesn't bind `x`\n-   |         |\n-   |         variable not in all patterns\n+LL | async fn a((x | s): String) {}\n+   |             -   ^ pattern doesn't bind `x`\n+   |             |\n+   |             variable not in all patterns\n \n error[E0408]: variable `s` is not bound in all patterns\n   --> $DIR/mismatched-bindings-async-fn.rs:11:9\n@@ -30,6 +22,14 @@ LL |     let x | s = String::new();\n    |         |\n    |         pattern doesn't bind `s`\n \n+error[E0408]: variable `x` is not bound in all patterns\n+  --> $DIR/mismatched-bindings-async-fn.rs:11:13\n+   |\n+LL |     let x | s = String::new();\n+   |         -   ^ pattern doesn't bind `x`\n+   |         |\n+   |         variable not in all patterns\n+\n error: aborting due to 4 previous errors\n \n For more information about this error, try `rustc --explain E0408`."}, {"sha": "445df90d395ee3f956ce6636a857843068cc8dea", "filename": "src/test/ui/span/issue-39698.stderr", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/41bfd18e0266b990708879c2bc22edb2626b1532/src%2Ftest%2Fui%2Fspan%2Fissue-39698.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/41bfd18e0266b990708879c2bc22edb2626b1532/src%2Ftest%2Fui%2Fspan%2Fissue-39698.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fspan%2Fissue-39698.stderr?ref=41bfd18e0266b990708879c2bc22edb2626b1532", "patch": "@@ -8,16 +8,6 @@ LL |         T::T1(a, d) | T::T2(d, b) | T::T3(c) | T::T4(a) => { println!(\"{:?}\n    |               |       pattern doesn't bind `a`\n    |               variable not in all patterns\n \n-error[E0408]: variable `d` is not bound in all patterns\n-  --> $DIR/issue-39698.rs:10:37\n-   |\n-LL |         T::T1(a, d) | T::T2(d, b) | T::T3(c) | T::T4(a) => { println!(\"{:?}\", a); }\n-   |                  -          -       ^^^^^^^^   ^^^^^^^^ pattern doesn't bind `d`\n-   |                  |          |       |\n-   |                  |          |       pattern doesn't bind `d`\n-   |                  |          variable not in all patterns\n-   |                  variable not in all patterns\n-\n error[E0408]: variable `b` is not bound in all patterns\n   --> $DIR/issue-39698.rs:10:9\n    |\n@@ -38,6 +28,16 @@ LL |         T::T1(a, d) | T::T2(d, b) | T::T3(c) | T::T4(a) => { println!(\"{:?}\n    |         |             pattern doesn't bind `c`\n    |         pattern doesn't bind `c`\n \n+error[E0408]: variable `d` is not bound in all patterns\n+  --> $DIR/issue-39698.rs:10:37\n+   |\n+LL |         T::T1(a, d) | T::T2(d, b) | T::T3(c) | T::T4(a) => { println!(\"{:?}\", a); }\n+   |                  -          -       ^^^^^^^^   ^^^^^^^^ pattern doesn't bind `d`\n+   |                  |          |       |\n+   |                  |          |       pattern doesn't bind `d`\n+   |                  |          variable not in all patterns\n+   |                  variable not in all patterns\n+\n error: aborting due to 4 previous errors\n \n For more information about this error, try `rustc --explain E0408`."}]}