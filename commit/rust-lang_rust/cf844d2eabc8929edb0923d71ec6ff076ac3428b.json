{"sha": "cf844d2eabc8929edb0923d71ec6ff076ac3428b", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNmODQ0ZDJlYWJjODkyOWVkYjA5MjNkNzFlYzZmZjA3NmFjMzQyOGI=", "commit": {"author": {"name": "Joshua Nelson", "email": "jyn514@gmail.com", "date": "2020-07-10T02:11:15Z"}, "committer": {"name": "Joshua Nelson", "email": "jyn514@gmail.com", "date": "2020-07-15T14:54:05Z"}, "message": "Don't make typeck_tables_of public", "tree": {"sha": "cdc031b0329f738d7a94952da7355cc92c798b94", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/cdc031b0329f738d7a94952da7355cc92c798b94"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/cf844d2eabc8929edb0923d71ec6ff076ac3428b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/cf844d2eabc8929edb0923d71ec6ff076ac3428b", "html_url": "https://github.com/rust-lang/rust/commit/cf844d2eabc8929edb0923d71ec6ff076ac3428b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/cf844d2eabc8929edb0923d71ec6ff076ac3428b/comments", "author": {"login": "jyn514", "id": 23638587, "node_id": "MDQ6VXNlcjIzNjM4NTg3", "avatar_url": "https://avatars.githubusercontent.com/u/23638587?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jyn514", "html_url": "https://github.com/jyn514", "followers_url": "https://api.github.com/users/jyn514/followers", "following_url": "https://api.github.com/users/jyn514/following{/other_user}", "gists_url": "https://api.github.com/users/jyn514/gists{/gist_id}", "starred_url": "https://api.github.com/users/jyn514/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jyn514/subscriptions", "organizations_url": "https://api.github.com/users/jyn514/orgs", "repos_url": "https://api.github.com/users/jyn514/repos", "events_url": "https://api.github.com/users/jyn514/events{/privacy}", "received_events_url": "https://api.github.com/users/jyn514/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jyn514", "id": 23638587, "node_id": "MDQ6VXNlcjIzNjM4NTg3", "avatar_url": "https://avatars.githubusercontent.com/u/23638587?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jyn514", "html_url": "https://github.com/jyn514", "followers_url": "https://api.github.com/users/jyn514/followers", "following_url": "https://api.github.com/users/jyn514/following{/other_user}", "gists_url": "https://api.github.com/users/jyn514/gists{/gist_id}", "starred_url": "https://api.github.com/users/jyn514/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jyn514/subscriptions", "organizations_url": "https://api.github.com/users/jyn514/orgs", "repos_url": "https://api.github.com/users/jyn514/repos", "events_url": "https://api.github.com/users/jyn514/events{/privacy}", "received_events_url": "https://api.github.com/users/jyn514/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d01044305a5f2eb177521f51a7d7bfaee1ccf688", "url": "https://api.github.com/repos/rust-lang/rust/commits/d01044305a5f2eb177521f51a7d7bfaee1ccf688", "html_url": "https://github.com/rust-lang/rust/commit/d01044305a5f2eb177521f51a7d7bfaee1ccf688"}], "stats": {"total": 10, "additions": 3, "deletions": 7}, "files": [{"sha": "bc01da324b66fd4dab9457d5a892e4efb84a4b84", "filename": "src/librustc_typeck/check/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/cf844d2eabc8929edb0923d71ec6ff076ac3428b/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cf844d2eabc8929edb0923d71ec6ff076ac3428b/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs?ref=cf844d2eabc8929edb0923d71ec6ff076ac3428b", "patch": "@@ -955,7 +955,7 @@ where\n     val.fold_with(&mut FixupFolder { tcx })\n }\n \n-pub fn typeck_tables_of<'tcx>(tcx: TyCtxt<'tcx>, def_id: LocalDefId) -> &ty::TypeckTables<'tcx> {\n+fn typeck_tables_of<'tcx>(tcx: TyCtxt<'tcx>, def_id: LocalDefId) -> &ty::TypeckTables<'tcx> {\n     let fallback = move || tcx.type_of(def_id.to_def_id());\n     typeck_tables_of_with_fallback(tcx, def_id, fallback)\n }"}, {"sha": "9ba2545ba63cbc8d98d512826a4679d9667f3f01", "filename": "src/librustc_typeck/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/cf844d2eabc8929edb0923d71ec6ff076ac3428b/src%2Flibrustc_typeck%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cf844d2eabc8929edb0923d71ec6ff076ac3428b/src%2Flibrustc_typeck%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Flib.rs?ref=cf844d2eabc8929edb0923d71ec6ff076ac3428b", "patch": "@@ -78,7 +78,7 @@ extern crate rustc_middle;\n pub mod expr_use_visitor;\n \n mod astconv;\n-pub mod check;\n+mod check;\n mod check_unused;\n mod coherence;\n mod collect;"}, {"sha": "78b4456ba9c6c24f94ccae5b132abc7d1aa8f483", "filename": "src/librustdoc/core.rs", "status": "modified", "additions": 1, "deletions": 5, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/cf844d2eabc8929edb0923d71ec6ff076ac3428b/src%2Flibrustdoc%2Fcore.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cf844d2eabc8929edb0923d71ec6ff076ac3428b/src%2Flibrustdoc%2Fcore.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fcore.rs?ref=cf844d2eabc8929edb0923d71ec6ff076ac3428b", "patch": "@@ -375,7 +375,6 @@ pub fn run_core(options: RustdocOptions) -> (clean::Crate, RenderInfo, RenderOpt\n         override_queries: Some(|_sess, local_providers, external_providers| {\n             local_providers.lint_mod = |_, _| {};\n             external_providers.lint_mod = |_, _| {};\n-            //let old_typeck = local_providers.typeck_tables_of;\n             local_providers.typeck_tables_of = move |tcx, def_id| {\n                 // Closures' tables come from their outermost function,\n                 // as they are part of the same \"inference environment\".\n@@ -389,8 +388,7 @@ pub fn run_core(options: RustdocOptions) -> (clean::Crate, RenderInfo, RenderOpt\n                 let body = hir.body(hir.body_owned_by(hir.as_local_hir_id(def_id)));\n                 debug!(\"visiting body for {:?}\", def_id);\n                 EmitIgnoredResolutionErrors::new(&tcx.sess, hir).visit_body(body);\n-                rustc_typeck::check::typeck_tables_of(tcx, def_id)\n-                //DEFAULT_TYPECK.with(|typeck| typeck(tcx, def_id))\n+                DEFAULT_TYPECK.with(|typeck| typeck(tcx, def_id))\n             };\n         }),\n         registry: rustc_driver::diagnostics_registry(),\n@@ -596,13 +594,11 @@ use rustc_hir::{\n };\n use rustc_middle::hir::map::Map;\n \n-/*\n thread_local!(static DEFAULT_TYPECK: for<'tcx> fn(rustc_middle::ty::TyCtxt<'tcx>, rustc_span::def_id::LocalDefId) -> &'tcx rustc_middle::ty::TypeckTables<'tcx> = {\n     let mut providers = rustc_middle::ty::query::Providers::default();\n     rustc_typeck::provide(&mut providers);\n     providers.typeck_tables_of\n });\n-*/\n \n /// Due to https://github.com/rust-lang/rust/pull/73566,\n /// the name resolution pass may find errors that are never emitted."}]}