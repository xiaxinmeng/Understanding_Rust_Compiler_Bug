{"sha": "79c6c60f511da6db0cce1707ef2923ee7038ae95", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc5YzZjNjBmNTExZGE2ZGIwY2NlMTcwN2VmMjkyM2VlNzAzOGFlOTU=", "commit": {"author": {"name": "Michael Wright", "email": "mikerite@lavabit.com", "date": "2018-01-19T06:10:09Z"}, "committer": {"name": "Michael Wright", "email": "mikerite@lavabit.com", "date": "2018-01-19T06:10:09Z"}, "message": "Added further tests", "tree": {"sha": "a53404235bde8cabca7f93ae99a2ff1bb5e34103", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a53404235bde8cabca7f93ae99a2ff1bb5e34103"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/79c6c60f511da6db0cce1707ef2923ee7038ae95", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/79c6c60f511da6db0cce1707ef2923ee7038ae95", "html_url": "https://github.com/rust-lang/rust/commit/79c6c60f511da6db0cce1707ef2923ee7038ae95", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/79c6c60f511da6db0cce1707ef2923ee7038ae95/comments", "author": null, "committer": null, "parents": [{"sha": "fca248957b26414ab04b9f8c5777f804d69fb1e1", "url": "https://api.github.com/repos/rust-lang/rust/commits/fca248957b26414ab04b9f8c5777f804d69fb1e1", "html_url": "https://github.com/rust-lang/rust/commit/fca248957b26414ab04b9f8c5777f804d69fb1e1"}], "stats": {"total": 39, "additions": 34, "deletions": 5}, "files": [{"sha": "249745c6a4504c68b1f2aa63ad0f8c629c2a496d", "filename": "tests/ui/option_option.rs", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/79c6c60f511da6db0cce1707ef2923ee7038ae95/tests%2Fui%2Foption_option.rs", "raw_url": "https://github.com/rust-lang/rust/raw/79c6c60f511da6db0cce1707ef2923ee7038ae95/tests%2Fui%2Foption_option.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Foption_option.rs?ref=79c6c60f511da6db0cce1707ef2923ee7038ae95", "patch": "@@ -18,6 +18,16 @@ struct Struct {\n     x: Option<Option<u8>>,\n }\n \n+impl Struct {\n+    fn struct_fn() -> Option<Option<u8>> {\n+        None\n+    }\n+}\n+\n+trait Trait {\n+    fn trait_fn() -> Option<Option<u8>>;\n+}\n+\n enum Enum {\n     Tuple(Option<Option<u8>>),\n     Struct{x: Option<Option<u8>>},\n@@ -31,6 +41,13 @@ fn output_type_alias() -> OptionOption {\n     None\n }\n \n+// The line allows this\n+impl Trait for Struct {\n+    fn trait_fn() -> Option<Option<u8>> {\n+        None\n+    }\n+}\n+\n fn main() {\n     input(None);\n     output();"}, {"sha": "19e00efae7188d9d2c2277d31f71aa6a05b2b0fe", "filename": "tests/ui/option_option.stderr", "status": "modified", "additions": 17, "deletions": 5, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/79c6c60f511da6db0cce1707ef2923ee7038ae95/tests%2Fui%2Foption_option.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/79c6c60f511da6db0cce1707ef2923ee7038ae95/tests%2Fui%2Foption_option.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Foption_option.stderr?ref=79c6c60f511da6db0cce1707ef2923ee7038ae95", "patch": "@@ -31,16 +31,28 @@ error: consider using `Option<T>` instead of `Option<Option<T>>` or a custom enu\n    |        ^^^^^^^^^^^^^^^^^^\n \n error: consider using `Option<T>` instead of `Option<Option<T>>` or a custom enum if you need to distinguish all 3 cases\n-  --> $DIR/option_option.rs:22:11\n+  --> $DIR/option_option.rs:22:23\n    |\n-22 |     Tuple(Option<Option<u8>>),\n+22 |     fn struct_fn() -> Option<Option<u8>> {\n+   |                       ^^^^^^^^^^^^^^^^^^\n+\n+error: consider using `Option<T>` instead of `Option<Option<T>>` or a custom enum if you need to distinguish all 3 cases\n+  --> $DIR/option_option.rs:28:22\n+   |\n+28 |     fn trait_fn() -> Option<Option<u8>>;\n+   |                      ^^^^^^^^^^^^^^^^^^\n+\n+error: consider using `Option<T>` instead of `Option<Option<T>>` or a custom enum if you need to distinguish all 3 cases\n+  --> $DIR/option_option.rs:32:11\n+   |\n+32 |     Tuple(Option<Option<u8>>),\n    |           ^^^^^^^^^^^^^^^^^^\n \n error: consider using `Option<T>` instead of `Option<Option<T>>` or a custom enum if you need to distinguish all 3 cases\n-  --> $DIR/option_option.rs:23:15\n+  --> $DIR/option_option.rs:33:15\n    |\n-23 |     Struct{x: Option<Option<u8>>},\n+33 |     Struct{x: Option<Option<u8>>},\n    |               ^^^^^^^^^^^^^^^^^^\n \n-error: aborting due to 7 previous errors\n+error: aborting due to 9 previous errors\n "}]}