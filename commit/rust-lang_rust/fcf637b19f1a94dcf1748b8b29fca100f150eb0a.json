{"sha": "fcf637b19f1a94dcf1748b8b29fca100f150eb0a", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZjZjYzN2IxOWYxYTk0ZGNmMTc0OGI4YjI5ZmNhMTAwZjE1MGViMGE=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2015-04-18T12:35:07Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2015-04-18T12:35:07Z"}, "message": "Auto merge of #24519 - rprichard:opt-write-args, r=alexcrichton\n\nIt's just as convenient, but it's much faster. Using write! requires an\r\nextra call to fmt::write and a extra dynamically dispatched call to\r\nArguments' Display format function.", "tree": {"sha": "9a95984876768f80b82c10d5406f6202b3007294", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9a95984876768f80b82c10d5406f6202b3007294"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/fcf637b19f1a94dcf1748b8b29fca100f150eb0a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/fcf637b19f1a94dcf1748b8b29fca100f150eb0a", "html_url": "https://github.com/rust-lang/rust/commit/fcf637b19f1a94dcf1748b8b29fca100f150eb0a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/fcf637b19f1a94dcf1748b8b29fca100f150eb0a/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ba1192835b6e76c1bf3d86a23e0e91b847d4d61f", "url": "https://api.github.com/repos/rust-lang/rust/commits/ba1192835b6e76c1bf3d86a23e0e91b847d4d61f", "html_url": "https://github.com/rust-lang/rust/commit/ba1192835b6e76c1bf3d86a23e0e91b847d4d61f"}, {"sha": "317eac3277ccfa9b3cd159760041964253d17ef5", "url": "https://api.github.com/repos/rust-lang/rust/commits/317eac3277ccfa9b3cd159760041964253d17ef5", "html_url": "https://github.com/rust-lang/rust/commit/317eac3277ccfa9b3cd159760041964253d17ef5"}], "stats": {"total": 6, "additions": 3, "deletions": 3}, "files": [{"sha": "5f0d9012d1a7d5b6df3fd0a252b9576b978efc59", "filename": "src/libcollections/fmt.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fcf637b19f1a94dcf1748b8b29fca100f150eb0a/src%2Flibcollections%2Ffmt.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fcf637b19f1a94dcf1748b8b29fca100f150eb0a/src%2Flibcollections%2Ffmt.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcollections%2Ffmt.rs?ref=fcf637b19f1a94dcf1748b8b29fca100f150eb0a", "patch": "@@ -443,6 +443,6 @@ use string;\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n pub fn format(args: Arguments) -> string::String {\n     let mut output = string::String::new();\n-    let _ = write!(&mut output, \"{}\", args);\n+    let _ = output.write_fmt(args);\n     output\n }"}, {"sha": "c880aae80fca749e4e7ba33980a22988dbddd5f6", "filename": "src/libstd/rt/unwind.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fcf637b19f1a94dcf1748b8b29fca100f150eb0a/src%2Flibstd%2Frt%2Funwind.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fcf637b19f1a94dcf1748b8b29fca100f150eb0a/src%2Flibstd%2Frt%2Funwind.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Frt%2Funwind.rs?ref=fcf637b19f1a94dcf1748b8b29fca100f150eb0a", "patch": "@@ -504,7 +504,7 @@ pub fn begin_unwind_fmt(msg: fmt::Arguments, file_line: &(&'static str, u32)) ->\n     // below).\n \n     let mut s = String::new();\n-    let _ = write!(&mut s, \"{}\", msg);\n+    let _ = s.write_fmt(msg);\n     begin_unwind_inner(Box::new(s), file_line)\n }\n "}, {"sha": "9919238c208dab8063e05adf4cab6875457f011b", "filename": "src/libstd/rt/util.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fcf637b19f1a94dcf1748b8b29fca100f150eb0a/src%2Flibstd%2Frt%2Futil.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fcf637b19f1a94dcf1748b8b29fca100f150eb0a/src%2Flibstd%2Frt%2Futil.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Frt%2Futil.rs?ref=fcf637b19f1a94dcf1748b8b29fca100f150eb0a", "patch": "@@ -65,7 +65,7 @@ pub const ENFORCE_SANITY: bool = true || !cfg!(rtopt) || cfg!(rtdebug) ||\n                                   cfg!(rtassert);\n \n pub fn dumb_print(args: fmt::Arguments) {\n-    let _ = write!(&mut Stderr::new(), \"{}\", args);\n+    let _ = Stderr::new().write_fmt(args);\n }\n \n pub fn abort(args: fmt::Arguments) -> ! {"}]}