{"sha": "cbede85538d3ee59819c5d069ffe8d2dd7931749", "node_id": "C_kwDOAAsO6NoAKGNiZWRlODU1MzhkM2VlNTk4MTljNWQwNjlmZmU4ZDJkZDc5MzE3NDk", "commit": {"author": {"name": "Joshua Nelson", "email": "github@jyn.dev", "date": "2022-12-29T20:57:54Z"}, "committer": {"name": "Joshua Nelson", "email": "github@jyn.dev", "date": "2022-12-29T21:58:14Z"}, "message": "Support `x clean --stage 1 rustc_query_impl`\n\nPreviously, clean only supported `--stage 0` for specific crates.\n\nThe new `crate_description` function generates a string that looks\nlike\n```\n: {rustc_query_impl}\n```", "tree": {"sha": "bd0b75152f93cdd291c62213e2cd7069c2113cce", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bd0b75152f93cdd291c62213e2cd7069c2113cce"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/cbede85538d3ee59819c5d069ffe8d2dd7931749", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/cbede85538d3ee59819c5d069ffe8d2dd7931749", "html_url": "https://github.com/rust-lang/rust/commit/cbede85538d3ee59819c5d069ffe8d2dd7931749", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/cbede85538d3ee59819c5d069ffe8d2dd7931749/comments", "author": {"login": "jyn514", "id": 23638587, "node_id": "MDQ6VXNlcjIzNjM4NTg3", "avatar_url": "https://avatars.githubusercontent.com/u/23638587?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jyn514", "html_url": "https://github.com/jyn514", "followers_url": "https://api.github.com/users/jyn514/followers", "following_url": "https://api.github.com/users/jyn514/following{/other_user}", "gists_url": "https://api.github.com/users/jyn514/gists{/gist_id}", "starred_url": "https://api.github.com/users/jyn514/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jyn514/subscriptions", "organizations_url": "https://api.github.com/users/jyn514/orgs", "repos_url": "https://api.github.com/users/jyn514/repos", "events_url": "https://api.github.com/users/jyn514/events{/privacy}", "received_events_url": "https://api.github.com/users/jyn514/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jyn514", "id": 23638587, "node_id": "MDQ6VXNlcjIzNjM4NTg3", "avatar_url": "https://avatars.githubusercontent.com/u/23638587?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jyn514", "html_url": "https://github.com/jyn514", "followers_url": "https://api.github.com/users/jyn514/followers", "following_url": "https://api.github.com/users/jyn514/following{/other_user}", "gists_url": "https://api.github.com/users/jyn514/gists{/gist_id}", "starred_url": "https://api.github.com/users/jyn514/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jyn514/subscriptions", "organizations_url": "https://api.github.com/users/jyn514/orgs", "repos_url": "https://api.github.com/users/jyn514/repos", "events_url": "https://api.github.com/users/jyn514/events{/privacy}", "received_events_url": "https://api.github.com/users/jyn514/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e37ff7e71a087fcd799d3e59bcd63e3732d351d3", "url": "https://api.github.com/repos/rust-lang/rust/commits/e37ff7e71a087fcd799d3e59bcd63e3732d351d3", "html_url": "https://github.com/rust-lang/rust/commit/e37ff7e71a087fcd799d3e59bcd63e3732d351d3"}], "stats": {"total": 56, "additions": 40, "deletions": 16}, "files": [{"sha": "97b353b5462f5d2524f6b85a0fb24ee7a253042e", "filename": "src/bootstrap/builder.rs", "status": "modified", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/cbede85538d3ee59819c5d069ffe8d2dd7931749/src%2Fbootstrap%2Fbuilder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cbede85538d3ee59819c5d069ffe8d2dd7931749/src%2Fbootstrap%2Fbuilder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fbuilder.rs?ref=cbede85538d3ee59819c5d069ffe8d2dd7931749", "patch": "@@ -109,6 +109,25 @@ impl RunConfig<'_> {\n     }\n }\n \n+/// A description of the crates in this set, suitable for passing to `builder.info`.\n+///\n+/// `crates` should be generated by [`RunConfig::cargo_crates_in_set`].\n+pub fn crate_description(crates: Interned<Vec<String>>) -> String {\n+    if crates.is_empty() {\n+        return \"\".into();\n+    }\n+\n+    let mut descr = String::from(\": {\");\n+    for krate in &*crates {\n+        write!(descr, \"{}, \", krate.strip_prefix(\"-p=\").unwrap()).unwrap();\n+    }\n+\n+    descr.pop();\n+    descr.pop();\n+    descr.push('}');\n+    descr\n+}\n+\n struct StepDescription {\n     default: bool,\n     only_hosts: bool,"}, {"sha": "d887495d633f0dbe3af2be54c35642a642eba562", "filename": "src/bootstrap/clean.rs", "status": "modified", "additions": 10, "deletions": 12, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/cbede85538d3ee59819c5d069ffe8d2dd7931749/src%2Fbootstrap%2Fclean.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cbede85538d3ee59819c5d069ffe8d2dd7931749/src%2Fbootstrap%2Fclean.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fclean.rs?ref=cbede85538d3ee59819c5d069ffe8d2dd7931749", "patch": "@@ -9,11 +9,10 @@ use std::fs;\n use std::io::{self, ErrorKind};\n use std::path::Path;\n \n-use crate::builder::{Builder, RunConfig, ShouldRun, Step};\n+use crate::builder::{crate_description, Builder, RunConfig, ShouldRun, Step};\n use crate::cache::Interned;\n-use crate::config::TargetSelection;\n use crate::util::t;\n-use crate::{Build, Mode, Subcommand};\n+use crate::{Build, Compiler, Mode, Subcommand};\n \n #[derive(Debug, Clone, Copy, PartialEq, Eq, Hash)]\n pub struct CleanAll {}\n@@ -40,7 +39,7 @@ macro_rules! clean_crate_tree {\n     ( $( $name:ident, $mode:path, $root_crate:literal);+ $(;)? ) => { $(\n         #[derive(Debug, Clone, Copy, PartialEq, Eq, Hash)]\n         pub struct $name {\n-            target: TargetSelection,\n+            compiler: Compiler,\n             crates: Interned<Vec<String>>,\n         }\n \n@@ -54,22 +53,21 @@ macro_rules! clean_crate_tree {\n \n             fn make_run(run: RunConfig<'_>) {\n                 let builder = run.builder;\n-                if builder.top_stage != 0 {\n-                    panic!(\"non-stage-0 clean not supported for individual crates\");\n-                }\n-                builder.ensure(Self { crates: run.cargo_crates_in_set(), target: run.target });\n+                let compiler = builder.compiler(builder.top_stage, run.target);\n+                builder.ensure(Self { crates: run.cargo_crates_in_set(), compiler });\n             }\n \n             fn run(self, builder: &Builder<'_>) -> Self::Output {\n-                let compiler = builder.compiler(0, self.target);\n-                let mut cargo = builder.bare_cargo(compiler, $mode, self.target, \"clean\");\n+                let compiler = self.compiler;\n+                let target = compiler.host;\n+                let mut cargo = builder.bare_cargo(compiler, $mode, target, \"clean\");\n                 for krate in &*self.crates {\n                     cargo.arg(krate);\n                 }\n \n                 builder.info(&format!(\n-                    \"Cleaning stage{} {} artifacts ({} -> {})\",\n-                    compiler.stage, stringify!($name).to_lowercase(), &compiler.host, self.target\n+                    \"Cleaning stage{} {} artifacts ({} -> {}){}\",\n+                    compiler.stage, stringify!($name).to_lowercase(), &compiler.host, target, crate_description(self.crates),\n                 ));\n \n                 // NOTE: doesn't use `run_cargo` because we don't want to save a stamp file,"}, {"sha": "5bf5683f85deac0d7faa0903c1b3ed139d0cc572", "filename": "src/bootstrap/compile.rs", "status": "modified", "additions": 11, "deletions": 4, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/cbede85538d3ee59819c5d069ffe8d2dd7931749/src%2Fbootstrap%2Fcompile.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cbede85538d3ee59819c5d069ffe8d2dd7931749/src%2Fbootstrap%2Fcompile.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fcompile.rs?ref=cbede85538d3ee59819c5d069ffe8d2dd7931749", "patch": "@@ -18,6 +18,7 @@ use std::str;\n \n use serde::Deserialize;\n \n+use crate::builder::crate_description;\n use crate::builder::Cargo;\n use crate::builder::{Builder, Kind, RunConfig, ShouldRun, Step};\n use crate::cache::{Interned, INTERNER};\n@@ -128,8 +129,11 @@ impl Step for Std {\n         std_cargo(builder, target, compiler.stage, &mut cargo);\n \n         builder.info(&format!(\n-            \"Building stage{} std artifacts ({} -> {})\",\n-            compiler.stage, &compiler.host, target\n+            \"Building stage{} std artifacts ({} -> {}){}\",\n+            compiler.stage,\n+            &compiler.host,\n+            target,\n+            crate_description(self.crates),\n         ));\n         run_cargo(\n             builder,\n@@ -715,8 +719,11 @@ impl Step for Rustc {\n         }\n \n         builder.info(&format!(\n-            \"Building stage{} compiler artifacts ({} -> {})\",\n-            compiler.stage, &compiler.host, target\n+            \"Building stage{} compiler artifacts ({} -> {}){}\",\n+            compiler.stage,\n+            &compiler.host,\n+            target,\n+            crate_description(self.crates),\n         ));\n         run_cargo(\n             builder,"}]}