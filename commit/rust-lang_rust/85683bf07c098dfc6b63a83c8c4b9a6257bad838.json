{"sha": "85683bf07c098dfc6b63a83c8c4b9a6257bad838", "node_id": "MDY6Q29tbWl0NzI0NzEyOjg1NjgzYmYwN2MwOThkZmM2YjYzYTgzYzhjNGI5YTYyNTdiYWQ4Mzg=", "commit": {"author": {"name": "cgm616", "email": "cgm616@me.com", "date": "2017-10-28T18:23:05Z"}, "committer": {"name": "cgm616", "email": "cgm616@me.com", "date": "2017-10-28T18:23:05Z"}, "message": "Fix mistake in merging", "tree": {"sha": "508c4fe2031d67c46a0c6c5950409fe64dea78a4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/508c4fe2031d67c46a0c6c5950409fe64dea78a4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/85683bf07c098dfc6b63a83c8c4b9a6257bad838", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/85683bf07c098dfc6b63a83c8c4b9a6257bad838", "html_url": "https://github.com/rust-lang/rust/commit/85683bf07c098dfc6b63a83c8c4b9a6257bad838", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/85683bf07c098dfc6b63a83c8c4b9a6257bad838/comments", "author": {"login": "cgm616", "id": 2502394, "node_id": "MDQ6VXNlcjI1MDIzOTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/2502394?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cgm616", "html_url": "https://github.com/cgm616", "followers_url": "https://api.github.com/users/cgm616/followers", "following_url": "https://api.github.com/users/cgm616/following{/other_user}", "gists_url": "https://api.github.com/users/cgm616/gists{/gist_id}", "starred_url": "https://api.github.com/users/cgm616/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cgm616/subscriptions", "organizations_url": "https://api.github.com/users/cgm616/orgs", "repos_url": "https://api.github.com/users/cgm616/repos", "events_url": "https://api.github.com/users/cgm616/events{/privacy}", "received_events_url": "https://api.github.com/users/cgm616/received_events", "type": "User", "site_admin": false}, "committer": {"login": "cgm616", "id": 2502394, "node_id": "MDQ6VXNlcjI1MDIzOTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/2502394?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cgm616", "html_url": "https://github.com/cgm616", "followers_url": "https://api.github.com/users/cgm616/followers", "following_url": "https://api.github.com/users/cgm616/following{/other_user}", "gists_url": "https://api.github.com/users/cgm616/gists{/gist_id}", "starred_url": "https://api.github.com/users/cgm616/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cgm616/subscriptions", "organizations_url": "https://api.github.com/users/cgm616/orgs", "repos_url": "https://api.github.com/users/cgm616/repos", "events_url": "https://api.github.com/users/cgm616/events{/privacy}", "received_events_url": "https://api.github.com/users/cgm616/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d094f98f0b644d6422e7d363fbfd275d4b073605", "url": "https://api.github.com/repos/rust-lang/rust/commits/d094f98f0b644d6422e7d363fbfd275d4b073605", "html_url": "https://github.com/rust-lang/rust/commit/d094f98f0b644d6422e7d363fbfd275d4b073605"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "1651aa9c6116d9f2e7e840a322f94266062aaafa", "filename": "clippy_lints/src/methods.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/85683bf07c098dfc6b63a83c8c4b9a6257bad838/clippy_lints%2Fsrc%2Fmethods.rs", "raw_url": "https://github.com/rust-lang/rust/raw/85683bf07c098dfc6b63a83c8c4b9a6257bad838/clippy_lints%2Fsrc%2Fmethods.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmethods.rs?ref=85683bf07c098dfc6b63a83c8c4b9a6257bad838", "patch": "@@ -735,7 +735,7 @@ impl<'a, 'tcx> LateLintPass<'a, 'tcx> for Pass {\n         let name = implitem.name;\n         let parent = cx.tcx.hir.get_parent(implitem.id);\n         let item = cx.tcx.hir.expect_item(parent);\n-        if_chain! {[\n+        if_chain! {\n             if let hir::ImplItemKind::Method(ref sig, id) = implitem.node;\n             if let Some(first_arg_ty) = sig.decl.inputs.get(0);\n             if let Some(first_arg) = iter_input_pats(&sig.decl, cx.tcx.hir.body(id)).next();"}]}