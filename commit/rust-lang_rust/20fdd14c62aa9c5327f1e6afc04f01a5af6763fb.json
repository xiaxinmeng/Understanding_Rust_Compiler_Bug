{"sha": "20fdd14c62aa9c5327f1e6afc04f01a5af6763fb", "node_id": "MDY6Q29tbWl0NzI0NzEyOjIwZmRkMTRjNjJhYTljNTMyN2YxZTZhZmMwNGYwMWE1YWY2NzYzZmI=", "commit": {"author": {"name": "vsrs", "email": "vit@conrlab.com", "date": "2020-05-14T13:02:01Z"}, "committer": {"name": "vsrs", "email": "vit@conrlab.com", "date": "2020-05-14T13:02:01Z"}, "message": "Multiple binaries support for launch.json.\n\nGenerate unique names on the LSP side.", "tree": {"sha": "162fc72991b2ed514be0649f027ba577a4b5ba80", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/162fc72991b2ed514be0649f027ba577a4b5ba80"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/20fdd14c62aa9c5327f1e6afc04f01a5af6763fb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/20fdd14c62aa9c5327f1e6afc04f01a5af6763fb", "html_url": "https://github.com/rust-lang/rust/commit/20fdd14c62aa9c5327f1e6afc04f01a5af6763fb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/20fdd14c62aa9c5327f1e6afc04f01a5af6763fb/comments", "author": {"login": "vsrs", "id": 62505555, "node_id": "MDQ6VXNlcjYyNTA1NTU1", "avatar_url": "https://avatars.githubusercontent.com/u/62505555?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vsrs", "html_url": "https://github.com/vsrs", "followers_url": "https://api.github.com/users/vsrs/followers", "following_url": "https://api.github.com/users/vsrs/following{/other_user}", "gists_url": "https://api.github.com/users/vsrs/gists{/gist_id}", "starred_url": "https://api.github.com/users/vsrs/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vsrs/subscriptions", "organizations_url": "https://api.github.com/users/vsrs/orgs", "repos_url": "https://api.github.com/users/vsrs/repos", "events_url": "https://api.github.com/users/vsrs/events{/privacy}", "received_events_url": "https://api.github.com/users/vsrs/received_events", "type": "User", "site_admin": false}, "committer": {"login": "vsrs", "id": 62505555, "node_id": "MDQ6VXNlcjYyNTA1NTU1", "avatar_url": "https://avatars.githubusercontent.com/u/62505555?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vsrs", "html_url": "https://github.com/vsrs", "followers_url": "https://api.github.com/users/vsrs/followers", "following_url": "https://api.github.com/users/vsrs/following{/other_user}", "gists_url": "https://api.github.com/users/vsrs/gists{/gist_id}", "starred_url": "https://api.github.com/users/vsrs/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vsrs/subscriptions", "organizations_url": "https://api.github.com/users/vsrs/orgs", "repos_url": "https://api.github.com/users/vsrs/repos", "events_url": "https://api.github.com/users/vsrs/events{/privacy}", "received_events_url": "https://api.github.com/users/vsrs/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5f6cdae18f415b9af3b3d24234ab2943efb30993", "url": "https://api.github.com/repos/rust-lang/rust/commits/5f6cdae18f415b9af3b3d24234ab2943efb30993", "html_url": "https://github.com/rust-lang/rust/commit/5f6cdae18f415b9af3b3d24234ab2943efb30993"}], "stats": {"total": 10, "additions": 7, "deletions": 3}, "files": [{"sha": "76ed6f29ad93fdd3d58743d3ed7d15dd95c6b27f", "filename": "crates/rust-analyzer/src/main_loop/handlers.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/20fdd14c62aa9c5327f1e6afc04f01a5af6763fb/crates%2Frust-analyzer%2Fsrc%2Fmain_loop%2Fhandlers.rs", "raw_url": "https://github.com/rust-lang/rust/raw/20fdd14c62aa9c5327f1e6afc04f01a5af6763fb/crates%2Frust-analyzer%2Fsrc%2Fmain_loop%2Fhandlers.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fmain_loop%2Fhandlers.rs?ref=20fdd14c62aa9c5327f1e6afc04f01a5af6763fb", "patch": "@@ -1011,14 +1011,17 @@ fn to_lsp_runnable(\n     runnable: Runnable,\n ) -> Result<lsp_ext::Runnable> {\n     let spec = CargoTargetSpec::for_file(world, file_id)?;\n+    let target = spec.as_ref().map(|s| s.target.clone());\n     let (args, extra_args) = CargoTargetSpec::runnable_args(spec, &runnable.kind)?;\n     let line_index = world.analysis().file_line_index(file_id)?;\n     let label = match &runnable.kind {\n         RunnableKind::Test { test_id, .. } => format!(\"test {}\", test_id),\n         RunnableKind::TestMod { path } => format!(\"test-mod {}\", path),\n         RunnableKind::Bench { test_id } => format!(\"bench {}\", test_id),\n         RunnableKind::DocTest { test_id, .. } => format!(\"doctest {}\", test_id),\n-        RunnableKind::Bin => \"run binary\".to_string(),\n+        RunnableKind::Bin => {\n+            target.map_or_else(|| \"run binary\".to_string(), |t| format!(\"run binary '{}'\", t))\n+        }\n     };\n     Ok(lsp_ext::Runnable {\n         range: to_proto::range(&line_index, runnable.range),"}, {"sha": "1f93a2b7ec4ada7302f523b5181895e639a2b874", "filename": "editors/code/src/debug.ts", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/20fdd14c62aa9c5327f1e6afc04f01a5af6763fb/editors%2Fcode%2Fsrc%2Fdebug.ts", "raw_url": "https://github.com/rust-lang/rust/raw/20fdd14c62aa9c5327f1e6afc04f01a5af6763fb/editors%2Fcode%2Fsrc%2Fdebug.ts", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fsrc%2Fdebug.ts?ref=20fdd14c62aa9c5327f1e6afc04f01a5af6763fb", "patch": "@@ -88,8 +88,9 @@ export async function getDebugConfiguration(ctx: Ctx, config: ra.Runnable): Prom\n     }\n \n     if (debugConfig.name === \"run binary\") {\n-        // A workaround for multiple binaries. It would be better to get proper names on the LSP side.\n-        debugConfig.name = `run binary [${path.basename(executable)}]`;\n+        // The LSP side: crates\\rust-analyzer\\src\\main_loop\\handlers.rs,\n+        // fn to_lsp_runnable(...) with RunnableKind::Bin\n+        debugConfig.name = `run binary '${path.basename(executable)}'`;\n     }\n \n     if (debugConfig.cwd) {"}]}