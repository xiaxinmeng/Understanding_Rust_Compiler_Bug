{"sha": "9fb91b8742391e74ff2fe7b6ab4f9758b88c8c6c", "node_id": "C_kwDOAAsO6NoAKDlmYjkxYjg3NDIzOTFlNzRmZjJmZTdiNmFiNGY5NzU4Yjg4YzhjNmM", "commit": {"author": {"name": "Oli Scherer", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2022-12-09T22:10:52Z"}, "committer": {"name": "Oli Scherer", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2023-02-20T15:28:58Z"}, "message": "Remove a redundant function argument", "tree": {"sha": "f522a6845902be250bf0f22e230d151181ac7420", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f522a6845902be250bf0f22e230d151181ac7420"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9fb91b8742391e74ff2fe7b6ab4f9758b88c8c6c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9fb91b8742391e74ff2fe7b6ab4f9758b88c8c6c", "html_url": "https://github.com/rust-lang/rust/commit/9fb91b8742391e74ff2fe7b6ab4f9758b88c8c6c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9fb91b8742391e74ff2fe7b6ab4f9758b88c8c6c/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8f132d85498e12e0a248f29644d74fcac15f0d96", "url": "https://api.github.com/repos/rust-lang/rust/commits/8f132d85498e12e0a248f29644d74fcac15f0d96", "html_url": "https://github.com/rust-lang/rust/commit/8f132d85498e12e0a248f29644d74fcac15f0d96"}], "stats": {"total": 13, "additions": 3, "deletions": 10}, "files": [{"sha": "5679cdcbbd0625e8d03c7769b38ac65d850fc134", "filename": "compiler/rustc_expand/src/mbe/macro_rules.rs", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/9fb91b8742391e74ff2fe7b6ab4f9758b88c8c6c/compiler%2Frustc_expand%2Fsrc%2Fmbe%2Fmacro_rules.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9fb91b8742391e74ff2fe7b6ab4f9758b88c8c6c/compiler%2Frustc_expand%2Fsrc%2Fmbe%2Fmacro_rules.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_expand%2Fsrc%2Fmbe%2Fmacro_rules.rs?ref=9fb91b8742391e74ff2fe7b6ab4f9758b88c8c6c", "patch": "@@ -16,7 +16,6 @@ use rustc_ast_pretty::pprust;\n use rustc_attr::{self as attr, TransparencyError};\n use rustc_data_structures::fx::{FxHashMap, FxIndexMap};\n use rustc_errors::{Applicability, ErrorGuaranteed};\n-use rustc_feature::Features;\n use rustc_lint_defs::builtin::{\n     RUST_2021_INCOMPATIBLE_OR_PATTERNS, SEMICOLON_IN_EXPRESSIONS_FROM_MACROS,\n };\n@@ -379,7 +378,6 @@ pub(super) fn try_match_macro<'matcher, T: Tracker<'matcher>>(\n /// Converts a macro item into a syntax extension.\n pub fn compile_declarative_macro(\n     sess: &Session,\n-    features: &Features,\n     def: &ast::Item,\n     edition: Edition,\n ) -> (SyntaxExtension, Vec<(usize, Span)>) {\n@@ -508,7 +506,7 @@ pub fn compile_declarative_macro(\n                         true,\n                         &sess.parse_sess,\n                         def.id,\n-                        features,\n+                        sess.features_untracked(),\n                         edition,\n                     )\n                     .pop()\n@@ -532,7 +530,7 @@ pub fn compile_declarative_macro(\n                         false,\n                         &sess.parse_sess,\n                         def.id,\n-                        features,\n+                        sess.features_untracked(),\n                         edition,\n                     )\n                     .pop()"}, {"sha": "341db774b4d3919a98979b2bda028d0742a94506", "filename": "compiler/rustc_resolve/src/macros.rs", "status": "modified", "additions": 1, "deletions": 6, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/9fb91b8742391e74ff2fe7b6ab4f9758b88c8c6c/compiler%2Frustc_resolve%2Fsrc%2Fmacros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9fb91b8742391e74ff2fe7b6ab4f9758b88c8c6c/compiler%2Frustc_resolve%2Fsrc%2Fmacros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_resolve%2Fsrc%2Fmacros.rs?ref=9fb91b8742391e74ff2fe7b6ab4f9758b88c8c6c", "patch": "@@ -878,12 +878,7 @@ impl<'a, 'tcx> Resolver<'a, 'tcx> {\n         item: &ast::Item,\n         edition: Edition,\n     ) -> (SyntaxExtension, Vec<(usize, Span)>) {\n-        let (mut result, mut rule_spans) = compile_declarative_macro(\n-            &self.tcx.sess,\n-            self.tcx.sess.features_untracked(),\n-            item,\n-            edition,\n-        );\n+        let (mut result, mut rule_spans) = compile_declarative_macro(self.tcx.sess, item, edition);\n \n         if let Some(builtin_name) = result.builtin_name {\n             // The macro was marked with `#[rustc_builtin_macro]`."}]}