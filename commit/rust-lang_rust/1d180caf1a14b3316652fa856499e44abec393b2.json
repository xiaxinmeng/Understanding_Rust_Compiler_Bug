{"sha": "1d180caf1a14b3316652fa856499e44abec393b2", "node_id": "C_kwDOAAsO6NoAKDFkMTgwY2FmMWExNGIzMzE2NjUyZmE4NTY0OTllNDRhYmVjMzkzYjI", "commit": {"author": {"name": "Tomoaki Kawada", "email": "kawada@kmckk.co.jp", "date": "2022-02-10T02:26:46Z"}, "committer": {"name": "Tomoaki Kawada", "email": "kawada@kmckk.co.jp", "date": "2022-02-10T02:35:37Z"}, "message": "kmc-solid: Wait queue should be sorted in the descending order of task priorities\n\nIn ITRON, lower priority values mean higher priorities.", "tree": {"sha": "7c78e07bec489da6c0bec942bc28c33e636536d7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7c78e07bec489da6c0bec942bc28c33e636536d7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1d180caf1a14b3316652fa856499e44abec393b2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1d180caf1a14b3316652fa856499e44abec393b2", "html_url": "https://github.com/rust-lang/rust/commit/1d180caf1a14b3316652fa856499e44abec393b2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1d180caf1a14b3316652fa856499e44abec393b2/comments", "author": {"login": "kawadakk", "id": 81723441, "node_id": "MDQ6VXNlcjgxNzIzNDQx", "avatar_url": "https://avatars.githubusercontent.com/u/81723441?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kawadakk", "html_url": "https://github.com/kawadakk", "followers_url": "https://api.github.com/users/kawadakk/followers", "following_url": "https://api.github.com/users/kawadakk/following{/other_user}", "gists_url": "https://api.github.com/users/kawadakk/gists{/gist_id}", "starred_url": "https://api.github.com/users/kawadakk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kawadakk/subscriptions", "organizations_url": "https://api.github.com/users/kawadakk/orgs", "repos_url": "https://api.github.com/users/kawadakk/repos", "events_url": "https://api.github.com/users/kawadakk/events{/privacy}", "received_events_url": "https://api.github.com/users/kawadakk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "kawadakk", "id": 81723441, "node_id": "MDQ6VXNlcjgxNzIzNDQx", "avatar_url": "https://avatars.githubusercontent.com/u/81723441?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kawadakk", "html_url": "https://github.com/kawadakk", "followers_url": "https://api.github.com/users/kawadakk/followers", "following_url": "https://api.github.com/users/kawadakk/following{/other_user}", "gists_url": "https://api.github.com/users/kawadakk/gists{/gist_id}", "starred_url": "https://api.github.com/users/kawadakk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kawadakk/subscriptions", "organizations_url": "https://api.github.com/users/kawadakk/orgs", "repos_url": "https://api.github.com/users/kawadakk/repos", "events_url": "https://api.github.com/users/kawadakk/events{/privacy}", "received_events_url": "https://api.github.com/users/kawadakk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bdc9508bb6e227979045c5ba3937151635a32ec0", "url": "https://api.github.com/repos/rust-lang/rust/commits/bdc9508bb6e227979045c5ba3937151635a32ec0", "html_url": "https://github.com/rust-lang/rust/commit/bdc9508bb6e227979045c5ba3937151635a32ec0"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "2992a6a542901ccd5fc0d521368344bdbc8fd437", "filename": "library/std/src/sys/itron/condvar.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1d180caf1a14b3316652fa856499e44abec393b2/library%2Fstd%2Fsrc%2Fsys%2Fitron%2Fcondvar.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1d180caf1a14b3316652fa856499e44abec393b2/library%2Fstd%2Fsrc%2Fsys%2Fitron%2Fcondvar.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsys%2Fitron%2Fcondvar.rs?ref=1d180caf1a14b3316652fa856499e44abec393b2", "patch": "@@ -192,7 +192,7 @@ mod waiter_queue {\n                     let insert_after = {\n                         let mut cursor = head.last;\n                         loop {\n-                            if waiter.priority <= cursor.as_ref().priority {\n+                            if waiter.priority >= cursor.as_ref().priority {\n                                 // `cursor` and all previous waiters have the same or higher\n                                 // priority than `current_task_priority`. Insert the new\n                                 // waiter right after `cursor`."}]}