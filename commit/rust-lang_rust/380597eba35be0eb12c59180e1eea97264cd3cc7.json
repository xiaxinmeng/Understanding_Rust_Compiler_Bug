{"sha": "380597eba35be0eb12c59180e1eea97264cd3cc7", "node_id": "MDY6Q29tbWl0NzI0NzEyOjM4MDU5N2ViYTM1YmUwZWIxMmM1OTE4MGUxZWVhOTcyNjRjZDNjYzc=", "commit": {"author": {"name": "Erick Tryzelaar", "email": "erick.tryzelaar@gmail.com", "date": "2013-02-25T03:04:17Z"}, "committer": {"name": "Erick Tryzelaar", "email": "erick.tryzelaar@gmail.com", "date": "2013-02-26T08:44:49Z"}, "message": "libsyntax: change parse_matcher_subseq to take &Token", "tree": {"sha": "7f1764eb78b4edee04744409db81ced0275f86cb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7f1764eb78b4edee04744409db81ced0275f86cb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/380597eba35be0eb12c59180e1eea97264cd3cc7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/380597eba35be0eb12c59180e1eea97264cd3cc7", "html_url": "https://github.com/rust-lang/rust/commit/380597eba35be0eb12c59180e1eea97264cd3cc7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/380597eba35be0eb12c59180e1eea97264cd3cc7/comments", "author": {"login": "erickt", "id": 84711, "node_id": "MDQ6VXNlcjg0NzEx", "avatar_url": "https://avatars.githubusercontent.com/u/84711?v=4", "gravatar_id": "", "url": "https://api.github.com/users/erickt", "html_url": "https://github.com/erickt", "followers_url": "https://api.github.com/users/erickt/followers", "following_url": "https://api.github.com/users/erickt/following{/other_user}", "gists_url": "https://api.github.com/users/erickt/gists{/gist_id}", "starred_url": "https://api.github.com/users/erickt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/erickt/subscriptions", "organizations_url": "https://api.github.com/users/erickt/orgs", "repos_url": "https://api.github.com/users/erickt/repos", "events_url": "https://api.github.com/users/erickt/events{/privacy}", "received_events_url": "https://api.github.com/users/erickt/received_events", "type": "User", "site_admin": false}, "committer": {"login": "erickt", "id": 84711, "node_id": "MDQ6VXNlcjg0NzEx", "avatar_url": "https://avatars.githubusercontent.com/u/84711?v=4", "gravatar_id": "", "url": "https://api.github.com/users/erickt", "html_url": "https://github.com/erickt", "followers_url": "https://api.github.com/users/erickt/followers", "following_url": "https://api.github.com/users/erickt/following{/other_user}", "gists_url": "https://api.github.com/users/erickt/gists{/gist_id}", "starred_url": "https://api.github.com/users/erickt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/erickt/subscriptions", "organizations_url": "https://api.github.com/users/erickt/orgs", "repos_url": "https://api.github.com/users/erickt/repos", "events_url": "https://api.github.com/users/erickt/events{/privacy}", "received_events_url": "https://api.github.com/users/erickt/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cf6e21a17f04ddc766633f1f22144f7e6c59008c", "url": "https://api.github.com/repos/rust-lang/rust/commits/cf6e21a17f04ddc766633f1f22144f7e6c59008c", "html_url": "https://github.com/rust-lang/rust/commit/cf6e21a17f04ddc766633f1f22144f7e6c59008c"}], "stats": {"total": 16, "additions": 8, "deletions": 8}, "files": [{"sha": "fc69605a92720a53198b66423f38c7f3fba07069", "filename": "src/libsyntax/parse/parser.rs", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/380597eba35be0eb12c59180e1eea97264cd3cc7/src%2Flibsyntax%2Fparse%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/380597eba35be0eb12c59180e1eea97264cd3cc7/src%2Flibsyntax%2Fparse%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fparser.rs?ref=380597eba35be0eb12c59180e1eea97264cd3cc7", "patch": "@@ -1502,9 +1502,9 @@ pub impl Parser {\n             token::LBRACE | token::LPAREN | token::LBRACKET => {\n                 self.parse_matcher_subseq(\n                     name_idx,\n-                    *self.token,\n+                    &*self.token,\n                     // tjc: not sure why we need a copy\n-                    token::flip_delimiter(&*self.token)\n+                    &token::flip_delimiter(&*self.token)\n                 )\n             }\n             _ => self.fatal(~\"expected open delimiter\")\n@@ -1517,15 +1517,15 @@ pub impl Parser {\n     // invalid. It's similar to common::parse_seq.\n     fn parse_matcher_subseq(\n         name_idx: @mut uint,\n-        bra: token::Token,\n-        ket: token::Token\n+        bra: &token::Token,\n+        ket: &token::Token\n     ) -> ~[matcher] {\n         let mut ret_val = ~[];\n         let mut lparens = 0u;\n \n-        self.expect(&bra);\n+        self.expect(bra);\n \n-        while *self.token != ket || lparens > 0u {\n+        while *self.token != *ket || lparens > 0u {\n             if *self.token == token::LPAREN { lparens += 1u; }\n             if *self.token == token::RPAREN { lparens -= 1u; }\n             ret_val.push(self.parse_matcher(name_idx));\n@@ -1545,8 +1545,8 @@ pub impl Parser {\n                 let name_idx_lo = *name_idx;\n                 let ms = self.parse_matcher_subseq(\n                     name_idx,\n-                    token::LPAREN,\n-                    token::RPAREN\n+                    &token::LPAREN,\n+                    &token::RPAREN\n                 );\n                 if ms.len() == 0u {\n                     self.fatal(~\"repetition body must be nonempty\");"}]}