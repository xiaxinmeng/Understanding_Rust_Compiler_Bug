{"sha": "bfd7535130692af426f1230777f313cf7610f45e", "node_id": "C_kwDOAAsO6NoAKGJmZDc1MzUxMzA2OTJhZjQyNmYxMjMwNzc3ZjMxM2NmNzYxMGY0NWU", "commit": {"author": {"name": "Bryysen", "email": "Brukkenbrisen@gmail.com", "date": "2022-08-07T21:50:12Z"}, "committer": {"name": "Bryysen", "email": "Brukkenbrisen@gmail.com", "date": "2022-08-07T21:50:12Z"}, "message": "Fix wording on comment", "tree": {"sha": "c5046270658ed29876b75660933234cb4a59b990", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c5046270658ed29876b75660933234cb4a59b990"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/bfd7535130692af426f1230777f313cf7610f45e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/bfd7535130692af426f1230777f313cf7610f45e", "html_url": "https://github.com/rust-lang/rust/commit/bfd7535130692af426f1230777f313cf7610f45e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/bfd7535130692af426f1230777f313cf7610f45e/comments", "author": {"login": "Bryysen", "id": 20719480, "node_id": "MDQ6VXNlcjIwNzE5NDgw", "avatar_url": "https://avatars.githubusercontent.com/u/20719480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Bryysen", "html_url": "https://github.com/Bryysen", "followers_url": "https://api.github.com/users/Bryysen/followers", "following_url": "https://api.github.com/users/Bryysen/following{/other_user}", "gists_url": "https://api.github.com/users/Bryysen/gists{/gist_id}", "starred_url": "https://api.github.com/users/Bryysen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Bryysen/subscriptions", "organizations_url": "https://api.github.com/users/Bryysen/orgs", "repos_url": "https://api.github.com/users/Bryysen/repos", "events_url": "https://api.github.com/users/Bryysen/events{/privacy}", "received_events_url": "https://api.github.com/users/Bryysen/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Bryysen", "id": 20719480, "node_id": "MDQ6VXNlcjIwNzE5NDgw", "avatar_url": "https://avatars.githubusercontent.com/u/20719480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Bryysen", "html_url": "https://github.com/Bryysen", "followers_url": "https://api.github.com/users/Bryysen/followers", "following_url": "https://api.github.com/users/Bryysen/following{/other_user}", "gists_url": "https://api.github.com/users/Bryysen/gists{/gist_id}", "starred_url": "https://api.github.com/users/Bryysen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Bryysen/subscriptions", "organizations_url": "https://api.github.com/users/Bryysen/orgs", "repos_url": "https://api.github.com/users/Bryysen/repos", "events_url": "https://api.github.com/users/Bryysen/events{/privacy}", "received_events_url": "https://api.github.com/users/Bryysen/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "399796d2b351b6ec3d58c47db610926f73ad779e", "url": "https://api.github.com/repos/rust-lang/rust/commits/399796d2b351b6ec3d58c47db610926f73ad779e", "html_url": "https://github.com/rust-lang/rust/commit/399796d2b351b6ec3d58c47db610926f73ad779e"}], "stats": {"total": 14, "additions": 7, "deletions": 7}, "files": [{"sha": "1943d3de3ad7ce734257db3461648a4ba6cd2716", "filename": "compiler/rustc_typeck/src/check/check.rs", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/bfd7535130692af426f1230777f313cf7610f45e/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fcheck.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bfd7535130692af426f1230777f313cf7610f45e/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fcheck.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fcheck.rs?ref=bfd7535130692af426f1230777f313cf7610f45e", "patch": "@@ -1526,7 +1526,7 @@ fn detect_discriminant_duplicate<'tcx>(\n             }\n             None => {\n                 // At this point we know this discriminant is a duplicate, and was not explicitly\n-                // assigned by the user. Here we iterate backwards to fetch the hir for the last\n+                // assigned by the user. Here we iterate backwards to fetch the HIR for the last\n                 // explictly assigned discriminant, and letting the user know that this was the\n                 // increment startpoint, and how many steps from there leading to the duplicate\n                 if let Some((n, hir::Variant { span, ident, .. })) =\n@@ -1549,12 +1549,12 @@ fn detect_discriminant_duplicate<'tcx>(\n         err.span_label(span, format!(\"{display_discr} assigned here\"));\n     };\n \n-    // Here we are looping through the discriminant vec, comparing each discriminant to oneanother.\n-    // When a duplicate is detected, we instatiate an error and add a spanned note pointing to both\n-    // initial and duplicate value. The duplicate discriminant is then discarded from the vec by swapping\n-    // it with the last element and decrementing the vec.len by 1 (which is why we have to evaluate\n-    // `discrs.len()` anew every iteration, and why this could be tricky to do in a functional style as\n-    // we are mutating `discrs` on the fly).\n+    // Here we are loop through the discriminants, comparing each discriminant to another.\n+    // When a duplicate is detected, we instatiate an error and point to both\n+    // initial and duplicate value. The duplicate discriminant is then discarded by swapping\n+    // it with the last element and decrementing the `vec.len` (which is why we have to evaluate\n+    // `discrs.len()` anew every iteration, and why this could be tricky to do in a functional\n+    // style as we are mutating `discrs` on the fly).\n     let mut i = 0;\n     while i < discrs.len() {\n         let hir_var_i_idx = discrs[i].0.index();"}]}