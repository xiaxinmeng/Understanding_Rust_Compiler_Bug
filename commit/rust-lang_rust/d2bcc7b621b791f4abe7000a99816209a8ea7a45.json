{"sha": "d2bcc7b621b791f4abe7000a99816209a8ea7a45", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQyYmNjN2I2MjFiNzkxZjRhYmU3MDAwYTk5ODE2MjA5YThlYTdhNDU=", "commit": {"author": {"name": "Guillaume Pinot", "email": "texitoi@texitoi.eu", "date": "2013-11-14T22:22:44Z"}, "committer": {"name": "Guillaume Pinot", "email": "texitoi@texitoi.eu", "date": "2013-11-14T22:22:44Z"}, "message": "Improve variable naming.", "tree": {"sha": "8e77dfe7ab2fb43eb653c8cc8b292df4a9d51472", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8e77dfe7ab2fb43eb653c8cc8b292df4a9d51472"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d2bcc7b621b791f4abe7000a99816209a8ea7a45", "comment_count": 9, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d2bcc7b621b791f4abe7000a99816209a8ea7a45", "html_url": "https://github.com/rust-lang/rust/commit/d2bcc7b621b791f4abe7000a99816209a8ea7a45", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d2bcc7b621b791f4abe7000a99816209a8ea7a45/comments", "author": {"login": "TeXitoi", "id": 5787066, "node_id": "MDQ6VXNlcjU3ODcwNjY=", "avatar_url": "https://avatars.githubusercontent.com/u/5787066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TeXitoi", "html_url": "https://github.com/TeXitoi", "followers_url": "https://api.github.com/users/TeXitoi/followers", "following_url": "https://api.github.com/users/TeXitoi/following{/other_user}", "gists_url": "https://api.github.com/users/TeXitoi/gists{/gist_id}", "starred_url": "https://api.github.com/users/TeXitoi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TeXitoi/subscriptions", "organizations_url": "https://api.github.com/users/TeXitoi/orgs", "repos_url": "https://api.github.com/users/TeXitoi/repos", "events_url": "https://api.github.com/users/TeXitoi/events{/privacy}", "received_events_url": "https://api.github.com/users/TeXitoi/received_events", "type": "User", "site_admin": false}, "committer": {"login": "TeXitoi", "id": 5787066, "node_id": "MDQ6VXNlcjU3ODcwNjY=", "avatar_url": "https://avatars.githubusercontent.com/u/5787066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TeXitoi", "html_url": "https://github.com/TeXitoi", "followers_url": "https://api.github.com/users/TeXitoi/followers", "following_url": "https://api.github.com/users/TeXitoi/following{/other_user}", "gists_url": "https://api.github.com/users/TeXitoi/gists{/gist_id}", "starred_url": "https://api.github.com/users/TeXitoi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TeXitoi/subscriptions", "organizations_url": "https://api.github.com/users/TeXitoi/orgs", "repos_url": "https://api.github.com/users/TeXitoi/repos", "events_url": "https://api.github.com/users/TeXitoi/events{/privacy}", "received_events_url": "https://api.github.com/users/TeXitoi/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "74d27311a7ecb50b4783b6adc4a977a6e51759b2", "url": "https://api.github.com/repos/rust-lang/rust/commits/74d27311a7ecb50b4783b6adc4a977a6e51759b2", "html_url": "https://github.com/rust-lang/rust/commit/74d27311a7ecb50b4783b6adc4a977a6e51759b2"}], "stats": {"total": 15, "additions": 8, "deletions": 7}, "files": [{"sha": "78b31b335c93d63d03f536c1796e5ea7042c3024", "filename": "src/test/bench/shootout-meteor.rs", "status": "modified", "additions": 8, "deletions": 7, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/d2bcc7b621b791f4abe7000a99816209a8ea7a45/src%2Ftest%2Fbench%2Fshootout-meteor.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d2bcc7b621b791f4abe7000a99816209a8ea7a45/src%2Ftest%2Fbench%2Fshootout-meteor.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fbench%2Fshootout-meteor.rs?ref=d2bcc7b621b791f4abe7000a99816209a8ea7a45", "patch": "@@ -63,20 +63,21 @@ impl<'self, T> Iterator<&'self T> for ListIterator<'self, T> {\n // corresponding mirrored piece), with, as minimum coordinates, (0,\n // 0).  If all is false, only generate half of the possibilities (used\n // to break the symetry of the board).\n-fn transform(p: ~[(int, int)], all: bool) -> ~[~[(int, int)]] {\n+fn transform(piece: ~[(int, int)], all: bool) -> ~[~[(int, int)]] {\n     let mut res =\n         // rotations\n-        iterate(p, |p| p.iter().map(|&(y, x)| (x + y, -y)).collect())\n+        iterate(piece, |rot| rot.iter().map(|&(y, x)| (x + y, -y)).collect())\n         .take(if all {6} else {3})\n         // mirror\n-        .flat_map(|p| {\n-            iterate(p, |p| p.iter().map(|&(y, x)| (x, y)).collect()).take(2)\n+        .flat_map(|cur_piece| {\n+            iterate(cur_piece, |mir| mir.iter().map(|&(y, x)| (x, y)).collect())\n+            .take(2)\n         }).to_owned_vec();\n \n     // translating to (0, 0) as minimum coordinates.\n-    for p in res.mut_iter() {\n-        let (dy, dx) = *p.iter().min_by(|e| *e).unwrap();\n-        for &(ref mut y, ref mut x) in p.mut_iter() {\n+    for cur_piece in res.mut_iter() {\n+        let (dy, dx) = *cur_piece.iter().min_by(|e| *e).unwrap();\n+        for &(ref mut y, ref mut x) in cur_piece.mut_iter() {\n             *y -= dy; *x -= dx;\n         }\n     }"}]}