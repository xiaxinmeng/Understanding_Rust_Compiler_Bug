{"sha": "ef874310f2c11671e96fd700aceb9dcbc44db983", "node_id": "MDY6Q29tbWl0NzI0NzEyOmVmODc0MzEwZjJjMTE2NzFlOTZmZDcwMGFjZWI5ZGNiYzQ0ZGI5ODM=", "commit": {"author": {"name": "Piotr Czarnecki", "email": "pioczarn@gmail.com", "date": "2016-03-06T11:24:18Z"}, "committer": {"name": "Piotr Czarnecki", "email": "pioczarn@gmail.com", "date": "2016-03-06T11:24:18Z"}, "message": "fix Recover::replace", "tree": {"sha": "cb4232936148fe6588ad05017a51ecda397120f0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/cb4232936148fe6588ad05017a51ecda397120f0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ef874310f2c11671e96fd700aceb9dcbc44db983", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ef874310f2c11671e96fd700aceb9dcbc44db983", "html_url": "https://github.com/rust-lang/rust/commit/ef874310f2c11671e96fd700aceb9dcbc44db983", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ef874310f2c11671e96fd700aceb9dcbc44db983/comments", "author": {"login": "pczarn", "id": 3356767, "node_id": "MDQ6VXNlcjMzNTY3Njc=", "avatar_url": "https://avatars.githubusercontent.com/u/3356767?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pczarn", "html_url": "https://github.com/pczarn", "followers_url": "https://api.github.com/users/pczarn/followers", "following_url": "https://api.github.com/users/pczarn/following{/other_user}", "gists_url": "https://api.github.com/users/pczarn/gists{/gist_id}", "starred_url": "https://api.github.com/users/pczarn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pczarn/subscriptions", "organizations_url": "https://api.github.com/users/pczarn/orgs", "repos_url": "https://api.github.com/users/pczarn/repos", "events_url": "https://api.github.com/users/pczarn/events{/privacy}", "received_events_url": "https://api.github.com/users/pczarn/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pczarn", "id": 3356767, "node_id": "MDQ6VXNlcjMzNTY3Njc=", "avatar_url": "https://avatars.githubusercontent.com/u/3356767?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pczarn", "html_url": "https://github.com/pczarn", "followers_url": "https://api.github.com/users/pczarn/followers", "following_url": "https://api.github.com/users/pczarn/following{/other_user}", "gists_url": "https://api.github.com/users/pczarn/gists{/gist_id}", "starred_url": "https://api.github.com/users/pczarn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pczarn/subscriptions", "organizations_url": "https://api.github.com/users/pczarn/orgs", "repos_url": "https://api.github.com/users/pczarn/repos", "events_url": "https://api.github.com/users/pczarn/events{/privacy}", "received_events_url": "https://api.github.com/users/pczarn/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d67cf45d2222fdde16d935dead18a8be4b080060", "url": "https://api.github.com/repos/rust-lang/rust/commits/d67cf45d2222fdde16d935dead18a8be4b080060", "html_url": "https://github.com/rust-lang/rust/commit/d67cf45d2222fdde16d935dead18a8be4b080060"}], "stats": {"total": 9, "additions": 7, "deletions": 2}, "files": [{"sha": "8fb703e8fb830105f958014f503c32019f498717", "filename": "src/libstd/collections/hash/map.rs", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/ef874310f2c11671e96fd700aceb9dcbc44db983/src%2Flibstd%2Fcollections%2Fhash%2Fmap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ef874310f2c11671e96fd700aceb9dcbc44db983/src%2Flibstd%2Fcollections%2Fhash%2Fmap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fcollections%2Fhash%2Fmap.rs?ref=ef874310f2c11671e96fd700aceb9dcbc44db983", "patch": "@@ -1668,8 +1668,13 @@ impl<K, S, Q: ?Sized> super::Recover<Q> for HashMap<K, (), S>\n             InternalEntry::Occupied { mut elem } => {\n                 Some(mem::replace(elem.read_mut().0, key))\n             }\n-            _ => {\n-                None\n+            other => {\n+                if let Some(Vacant(vacant)) = other.into_entry(key) {\n+                    vacant.insert(());\n+                    None\n+                } else {\n+                    unreachable!()\n+                }\n             }\n         }\n     }"}]}