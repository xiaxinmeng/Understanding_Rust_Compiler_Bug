{"sha": "ecd1c11f9e8ae7718f4243d1eb4c9a45efd060a2", "node_id": "MDY6Q29tbWl0NzI0NzEyOmVjZDFjMTFmOWU4YWU3NzE4ZjQyNDNkMWViNGM5YTQ1ZWZkMDYwYTI=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-12-08T13:17:46Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-12-08T13:17:46Z"}, "message": "cleanup: match over unwrap", "tree": {"sha": "c3a63a574745b30dfc07efbb6b7eb26e5e545f51", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c3a63a574745b30dfc07efbb6b7eb26e5e545f51"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ecd1c11f9e8ae7718f4243d1eb4c9a45efd060a2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ecd1c11f9e8ae7718f4243d1eb4c9a45efd060a2", "html_url": "https://github.com/rust-lang/rust/commit/ecd1c11f9e8ae7718f4243d1eb4c9a45efd060a2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ecd1c11f9e8ae7718f4243d1eb4c9a45efd060a2/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "021e97ea03cf67ad7785ab39580e04bc69506b8c", "url": "https://api.github.com/repos/rust-lang/rust/commits/021e97ea03cf67ad7785ab39580e04bc69506b8c", "html_url": "https://github.com/rust-lang/rust/commit/021e97ea03cf67ad7785ab39580e04bc69506b8c"}], "stats": {"total": 10, "additions": 5, "deletions": 5}, "files": [{"sha": "7bfbc61037bfda0d97a5de548e76e84d81965173", "filename": "crates/rust-analyzer/src/handlers.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/ecd1c11f9e8ae7718f4243d1eb4c9a45efd060a2/crates%2Frust-analyzer%2Fsrc%2Fhandlers.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ecd1c11f9e8ae7718f4243d1eb4c9a45efd060a2/crates%2Frust-analyzer%2Fsrc%2Fhandlers.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fhandlers.rs?ref=ecd1c11f9e8ae7718f4243d1eb4c9a45efd060a2", "patch": "@@ -1336,12 +1336,12 @@ pub(crate) fn handle_open_cargo_toml(\n ) -> Result<Option<lsp_types::GotoDefinitionResponse>> {\n     let _p = profile::span(\"handle_open_cargo_toml\");\n     let file_id = from_proto::file_id(&snap, &params.text_document.uri)?;\n-    let maybe_cargo_spec = CargoTargetSpec::for_file(&snap, file_id)?;\n-    if maybe_cargo_spec.is_none() {\n-        return Ok(None);\n-    }\n \n-    let cargo_spec = maybe_cargo_spec.unwrap();\n+    let cargo_spec = match CargoTargetSpec::for_file(&snap, file_id)? {\n+        Some(it) => it,\n+        None => return Ok(None),\n+    };\n+\n     let cargo_toml_path = cargo_spec.workspace_root.join(\"Cargo.toml\");\n     if !cargo_toml_path.exists() {\n         return Ok(None);"}]}