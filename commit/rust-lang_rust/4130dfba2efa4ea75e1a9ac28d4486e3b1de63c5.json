{"sha": "4130dfba2efa4ea75e1a9ac28d4486e3b1de63c5", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQxMzBkZmJhMmVmYTRlYTc1ZTFhOWFjMjhkNDQ4NmUzYjFkZTYzYzU=", "commit": {"author": {"name": "Jeremy Stucki", "email": "stucki.jeremy@gmail.com", "date": "2019-08-23T20:31:22Z"}, "committer": {"name": "Jeremy Stucki", "email": "stucki.jeremy@gmail.com", "date": "2019-08-23T20:31:22Z"}, "message": "Refactor 'lint_or_fun_call'", "tree": {"sha": "cde715f9d51b69e52f5f3976efc0eecf09759c3b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/cde715f9d51b69e52f5f3976efc0eecf09759c3b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4130dfba2efa4ea75e1a9ac28d4486e3b1de63c5", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEnLVrz+MJS3aQxZ9oj1SKWi7RP1gFAl1gTRoACgkQj1SKWi7R\nP1iwgA/9EhxOLNoGTZLvBYERbNL/QrSBjeXSoKZ9mar16IQQZzNBQvD2gOl8Dhor\no15k0AHzYtwQ4SOU1lDjyMocjoa82IC6BFbPuJCjEFzCt+H5ja6Tx/jcniV6yVNB\nXWpEjrWQn4vQdYYmNXiwN+xTu5A9camEwDODmJfIhqJ1GrU55paeW5BMFMPth46P\nB+VnVtWd8XbsM13I/hDbj2fv79KybyrzJXLT0cEFG7UUg47ThrQ4FAADxXZYyHxq\n0zebXf6iWac52twCH2ewp7ILT6YnkTgew+PZSdQDXE55FBNu5SGIyns/mV9Kirn+\ncETKrnj6V2yYfSBawn46JobWlAfVVw5WGZbqZyJzIZGZUUq2AvrWWGt2Cav4vQq8\n2IEkHAeN75Zh3If25VO/mCSAvTYxF3bMBPcIiDl08DPLURemFfioYTu3oKAEWRXG\nfZom0bSD9zKgUhf2TbFG7BsTnbMuLO9BD14XuzwHOnK1Zmm4M7Oz3wEpu86sEhGc\nUniNMx9WlJG0XXQUBRktD97KjX4q9gaKu4rDUCRQ1Z4z12Li0IYzxdvX9B9H6NFn\n4PZANhRh747VBYapPkvZZjaBwk65IDxKu/jZtSk6w1zjrFIQ08AA4WOYQUMckE10\nvjHsJjW5QaJ/Hrcxb39L1SOJcikHnokjDgKSKfT36RQU82cPtxs=\n=m+1O\n-----END PGP SIGNATURE-----", "payload": "tree cde715f9d51b69e52f5f3976efc0eecf09759c3b\nparent 419c87fb35fac37312bda238b58b9c493b0e909a\nauthor Jeremy Stucki <stucki.jeremy@gmail.com> 1566592282 +0200\ncommitter Jeremy Stucki <stucki.jeremy@gmail.com> 1566592282 +0200\n\nRefactor 'lint_or_fun_call'\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4130dfba2efa4ea75e1a9ac28d4486e3b1de63c5", "html_url": "https://github.com/rust-lang/rust/commit/4130dfba2efa4ea75e1a9ac28d4486e3b1de63c5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4130dfba2efa4ea75e1a9ac28d4486e3b1de63c5/comments", "author": {"login": "jeremystucki", "id": 7629727, "node_id": "MDQ6VXNlcjc2Mjk3Mjc=", "avatar_url": "https://avatars.githubusercontent.com/u/7629727?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jeremystucki", "html_url": "https://github.com/jeremystucki", "followers_url": "https://api.github.com/users/jeremystucki/followers", "following_url": "https://api.github.com/users/jeremystucki/following{/other_user}", "gists_url": "https://api.github.com/users/jeremystucki/gists{/gist_id}", "starred_url": "https://api.github.com/users/jeremystucki/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jeremystucki/subscriptions", "organizations_url": "https://api.github.com/users/jeremystucki/orgs", "repos_url": "https://api.github.com/users/jeremystucki/repos", "events_url": "https://api.github.com/users/jeremystucki/events{/privacy}", "received_events_url": "https://api.github.com/users/jeremystucki/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jeremystucki", "id": 7629727, "node_id": "MDQ6VXNlcjc2Mjk3Mjc=", "avatar_url": "https://avatars.githubusercontent.com/u/7629727?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jeremystucki", "html_url": "https://github.com/jeremystucki", "followers_url": "https://api.github.com/users/jeremystucki/followers", "following_url": "https://api.github.com/users/jeremystucki/following{/other_user}", "gists_url": "https://api.github.com/users/jeremystucki/gists{/gist_id}", "starred_url": "https://api.github.com/users/jeremystucki/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jeremystucki/subscriptions", "organizations_url": "https://api.github.com/users/jeremystucki/orgs", "repos_url": "https://api.github.com/users/jeremystucki/repos", "events_url": "https://api.github.com/users/jeremystucki/events{/privacy}", "received_events_url": "https://api.github.com/users/jeremystucki/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "419c87fb35fac37312bda238b58b9c493b0e909a", "url": "https://api.github.com/repos/rust-lang/rust/commits/419c87fb35fac37312bda238b58b9c493b0e909a", "html_url": "https://github.com/rust-lang/rust/commit/419c87fb35fac37312bda238b58b9c493b0e909a"}], "stats": {"total": 61, "additions": 26, "deletions": 35}, "files": [{"sha": "006a6876767fac0876722b075fec24bac277947f", "filename": "clippy_lints/src/methods/mod.rs", "status": "modified", "additions": 26, "deletions": 35, "changes": 61, "blob_url": "https://github.com/rust-lang/rust/blob/4130dfba2efa4ea75e1a9ac28d4486e3b1de63c5/clippy_lints%2Fsrc%2Fmethods%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4130dfba2efa4ea75e1a9ac28d4486e3b1de63c5/clippy_lints%2Fsrc%2Fmethods%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmethods%2Fmod.rs?ref=4130dfba2efa4ea75e1a9ac28d4486e3b1de63c5", "patch": "@@ -1281,46 +1281,37 @@ fn lint_or_fun_call<'a, 'tcx>(\n             (&paths::RESULT, true, &[\"or\", \"unwrap_or\"], \"else\"),\n         ];\n \n-        // early check if the name is one we care about\n-        if know_types.iter().all(|k| !k.2.contains(&name)) {\n-            return;\n-        }\n+        if_chain! {\n+            if know_types.iter().any(|k| k.2.contains(&name));\n \n-        let mut finder = FunCallFinder { cx: &cx, found: false };\n-        finder.visit_expr(&arg);\n-        if !finder.found {\n-            return;\n-        }\n+            let mut finder = FunCallFinder { cx: &cx, found: false };\n+            if { finder.visit_expr(&arg); finder.found };\n \n-        let self_ty = cx.tables.expr_ty(self_expr);\n+            let self_ty = cx.tables.expr_ty(self_expr);\n \n-        let (fn_has_arguments, poss, suffix) = if let Some(&(_, fn_has_arguments, poss, suffix)) =\n-            know_types.iter().find(|&&i| match_type(cx, self_ty, i.0))\n-        {\n-            (fn_has_arguments, poss, suffix)\n-        } else {\n-            return;\n-        };\n+            if let Some(&(_, fn_has_arguments, poss, suffix)) =\n+                   know_types.iter().find(|&&i| match_type(cx, self_ty, i.0));\n \n-        if !poss.contains(&name) {\n-            return;\n-        }\n+            if poss.contains(&name);\n \n-        let sugg: Cow<'_, _> = match (fn_has_arguments, !or_has_args) {\n-            (true, _) => format!(\"|_| {}\", snippet_with_macro_callsite(cx, arg.span, \"..\")).into(),\n-            (false, false) => format!(\"|| {}\", snippet_with_macro_callsite(cx, arg.span, \"..\")).into(),\n-            (false, true) => snippet_with_macro_callsite(cx, fun_span, \"..\"),\n-        };\n-        let span_replace_word = method_span.with_hi(span.hi());\n-        span_lint_and_sugg(\n-            cx,\n-            OR_FUN_CALL,\n-            span_replace_word,\n-            &format!(\"use of `{}` followed by a function call\", name),\n-            \"try this\",\n-            format!(\"{}_{}({})\", name, suffix, sugg),\n-            Applicability::HasPlaceholders,\n-        );\n+            then {\n+                let sugg: Cow<'_, _> = match (fn_has_arguments, !or_has_args) {\n+                    (true, _) => format!(\"|_| {}\", snippet_with_macro_callsite(cx, arg.span, \"..\")).into(),\n+                    (false, false) => format!(\"|| {}\", snippet_with_macro_callsite(cx, arg.span, \"..\")).into(),\n+                    (false, true) => snippet_with_macro_callsite(cx, fun_span, \"..\"),\n+                };\n+                let span_replace_word = method_span.with_hi(span.hi());\n+                span_lint_and_sugg(\n+                    cx,\n+                    OR_FUN_CALL,\n+                    span_replace_word,\n+                    &format!(\"use of `{}` followed by a function call\", name),\n+                    \"try this\",\n+                    format!(\"{}_{}({})\", name, suffix, sugg),\n+                    Applicability::HasPlaceholders,\n+                );\n+            }\n+        }\n     }\n \n     if args.len() == 2 {"}]}