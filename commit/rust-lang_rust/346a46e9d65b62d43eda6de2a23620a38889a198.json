{"sha": "346a46e9d65b62d43eda6de2a23620a38889a198", "node_id": "MDY6Q29tbWl0NzI0NzEyOjM0NmE0NmU5ZDY1YjYyZDQzZWRhNmRlMmEyMzYyMGEzODg4OWExOTg=", "commit": {"author": {"name": "kennytm", "email": "kennytm@gmail.com", "date": "2018-03-22T09:51:35Z"}, "committer": {"name": "kennytm", "email": "kennytm@gmail.com", "date": "2018-03-22T14:43:48Z"}, "message": "Rollup merge of #49216 - bjorn3:patch-1, r=estebank\n\nDon't check interpret_interner when accessing a static to fix miri mutable statics\n\nMutable statics don't work in my PR to fix the standalone [miri](https://github.com/solson/miri), as init_static didn't get called when the interpret_interner already contained a entry for the static, which is always immutable.\n\ncc solson/miri#364", "tree": {"sha": "52153cf0cf02a7e488efecae9a239c68c350b969", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/52153cf0cf02a7e488efecae9a239c68c350b969"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/346a46e9d65b62d43eda6de2a23620a38889a198", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEZ1R8CLMp8f2GxWoQ/vbIBR0OATwFAlqzwSQACgkQ/vbIBR0O\nATySlg/+NoOe2EWnHIp6UWKtr2st0HnUUY6ibIhXYlthEA2e39UiBW4dRgWeqzLz\nS0VzFBcVo4cM41nMksW/AVyVr/OMbXjpzjsP9CAadg+ZzL3EDKrz1P/soxW5B7V8\nXZWEEhjEWySEEJUBAJcklYaGLAE6HOgn3KDr3Wn3LmBJqk3h2+Dqph16XpNGDt7u\n4texVSZ0X52x6s+5Ndj84BJytBPiAbX63F77cMOWffX/MiGa9lFvXCBWp7I2sknO\nBSWk79cEMpMGZg79rf1j9MxMmGxc4qZiJdHcDkw05SfarL6FxbuGxKzQwT/nfBxj\nnI/ATeRtlApuayyxBjbg0zXM3prgMk0GjRLuGKSqwJ9BbRPMHBdVemmIHlUtHmsE\nUmzDGVk93qV+KeQL4TRJudkLHFljnuhqb1YFIDStaX1JXy+SY2GlVE0CrYKQigso\nT8C5U98R8EcfJ1YlXieBZQlLJ+ukgcRcbKy4xkPWXtyCnam24gDRcPuFcQHV4xJ5\nP1nuj54aQ14VA7qY87xV3pAeXp1CeF2FKouNsmw7Kdw7Z1bz8bwuP7z7wc+qJ0NU\nNvB9rL4NkuOF6eSJbHsQMV32DjMcAqeCJwSAy6dQ2+dsslp19RMc0+NpurlNH9X8\nl05ei+sCncRnXE7nIPtw5YYVcUEMoww6dj/8K//rAdJEKaV8YXs=\n=vlsG\n-----END PGP SIGNATURE-----", "payload": "tree 52153cf0cf02a7e488efecae9a239c68c350b969\nparent 70ae9174ee3fe05a505c4acc51dd5191e8825866\nparent 5aa29c4c823cbe02a2d84080eefe3eb1aecf0a06\nauthor kennytm <kennytm@gmail.com> 1521712295 +0800\ncommitter kennytm <kennytm@gmail.com> 1521729828 +0800\n\nRollup merge of #49216 - bjorn3:patch-1, r=estebank\n\nDon't check interpret_interner when accessing a static to fix miri mutable statics\n\nMutable statics don't work in my PR to fix the standalone [miri](https://github.com/solson/miri), as init_static didn't get called when the interpret_interner already contained a entry for the static, which is always immutable.\n\ncc solson/miri#364\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/346a46e9d65b62d43eda6de2a23620a38889a198", "html_url": "https://github.com/rust-lang/rust/commit/346a46e9d65b62d43eda6de2a23620a38889a198", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/346a46e9d65b62d43eda6de2a23620a38889a198/comments", "author": {"login": "kennytm", "id": 103023, "node_id": "MDQ6VXNlcjEwMzAyMw==", "avatar_url": "https://avatars.githubusercontent.com/u/103023?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kennytm", "html_url": "https://github.com/kennytm", "followers_url": "https://api.github.com/users/kennytm/followers", "following_url": "https://api.github.com/users/kennytm/following{/other_user}", "gists_url": "https://api.github.com/users/kennytm/gists{/gist_id}", "starred_url": "https://api.github.com/users/kennytm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kennytm/subscriptions", "organizations_url": "https://api.github.com/users/kennytm/orgs", "repos_url": "https://api.github.com/users/kennytm/repos", "events_url": "https://api.github.com/users/kennytm/events{/privacy}", "received_events_url": "https://api.github.com/users/kennytm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "kennytm", "id": 103023, "node_id": "MDQ6VXNlcjEwMzAyMw==", "avatar_url": "https://avatars.githubusercontent.com/u/103023?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kennytm", "html_url": "https://github.com/kennytm", "followers_url": "https://api.github.com/users/kennytm/followers", "following_url": "https://api.github.com/users/kennytm/following{/other_user}", "gists_url": "https://api.github.com/users/kennytm/gists{/gist_id}", "starred_url": "https://api.github.com/users/kennytm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kennytm/subscriptions", "organizations_url": "https://api.github.com/users/kennytm/orgs", "repos_url": "https://api.github.com/users/kennytm/repos", "events_url": "https://api.github.com/users/kennytm/events{/privacy}", "received_events_url": "https://api.github.com/users/kennytm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "70ae9174ee3fe05a505c4acc51dd5191e8825866", "url": "https://api.github.com/repos/rust-lang/rust/commits/70ae9174ee3fe05a505c4acc51dd5191e8825866", "html_url": "https://github.com/rust-lang/rust/commit/70ae9174ee3fe05a505c4acc51dd5191e8825866"}, {"sha": "5aa29c4c823cbe02a2d84080eefe3eb1aecf0a06", "url": "https://api.github.com/repos/rust-lang/rust/commits/5aa29c4c823cbe02a2d84080eefe3eb1aecf0a06", "html_url": "https://github.com/rust-lang/rust/commit/5aa29c4c823cbe02a2d84080eefe3eb1aecf0a06"}], "stats": {"total": 40, "additions": 18, "deletions": 22}, "files": [{"sha": "47f6f61072e13acb232e5edc8c74249bf3fa56c0", "filename": "src/librustc_mir/interpret/const_eval.rs", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/346a46e9d65b62d43eda6de2a23620a38889a198/src%2Flibrustc_mir%2Finterpret%2Fconst_eval.rs", "raw_url": "https://github.com/rust-lang/rust/raw/346a46e9d65b62d43eda6de2a23620a38889a198/src%2Flibrustc_mir%2Finterpret%2Fconst_eval.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Finterpret%2Fconst_eval.rs?ref=346a46e9d65b62d43eda6de2a23620a38889a198", "patch": "@@ -339,6 +339,14 @@ impl<'mir, 'tcx> super::Machine<'mir, 'tcx> for CompileTimeEvaluator {\n         ecx: &mut EvalContext<'a, 'mir, 'tcx, Self>,\n         cid: GlobalId<'tcx>,\n     ) -> EvalResult<'tcx, AllocId> {\n+        let alloc = ecx\n+                    .tcx\n+                    .interpret_interner\n+                    .get_cached(cid.instance.def_id());\n+        // Don't evaluate when already cached to prevent cycles\n+        if let Some(alloc) = alloc {\n+            return Ok(alloc)\n+        }\n         // ensure the static is computed\n         ecx.const_eval(cid)?;\n         Ok(ecx"}, {"sha": "456f5fd75db09772ea8949c7c887c71a1ad0cb54", "filename": "src/librustc_mir/interpret/place.rs", "status": "modified", "additions": 10, "deletions": 22, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/346a46e9d65b62d43eda6de2a23620a38889a198/src%2Flibrustc_mir%2Finterpret%2Fplace.rs", "raw_url": "https://github.com/rust-lang/rust/raw/346a46e9d65b62d43eda6de2a23620a38889a198/src%2Flibrustc_mir%2Finterpret%2Fplace.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Finterpret%2Fplace.rs?ref=346a46e9d65b62d43eda6de2a23620a38889a198", "patch": "@@ -197,29 +197,17 @@ impl<'a, 'mir, 'tcx, M: Machine<'mir, 'tcx>> EvalContext<'a, 'mir, 'tcx, M> {\n             },\n \n             Static(ref static_) => {\n-                let alloc = self\n-                    .tcx\n-                    .interpret_interner\n-                    .get_cached(static_.def_id);\n                 let layout = self.layout_of(self.place_ty(mir_place))?;\n-                if let Some(alloc) = alloc {\n-                    Place::Ptr {\n-                        ptr: MemoryPointer::new(alloc, 0).into(),\n-                        align: layout.align,\n-                        extra: PlaceExtra::None,\n-                    }\n-                } else {\n-                    let instance = ty::Instance::mono(*self.tcx, static_.def_id);\n-                    let cid = GlobalId {\n-                        instance,\n-                        promoted: None\n-                    };\n-                    let alloc = Machine::init_static(self, cid)?;\n-                    Place::Ptr {\n-                        ptr: MemoryPointer::new(alloc, 0).into(),\n-                        align: layout.align,\n-                        extra: PlaceExtra::None,\n-                    }\n+                let instance = ty::Instance::mono(*self.tcx, static_.def_id);\n+                let cid = GlobalId {\n+                    instance,\n+                    promoted: None\n+                };\n+                let alloc = Machine::init_static(self, cid)?;\n+                Place::Ptr {\n+                    ptr: MemoryPointer::new(alloc, 0).into(),\n+                    align: layout.align,\n+                    extra: PlaceExtra::None,\n                 }\n             }\n "}]}