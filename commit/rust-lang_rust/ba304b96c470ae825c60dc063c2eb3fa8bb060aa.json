{"sha": "ba304b96c470ae825c60dc063c2eb3fa8bb060aa", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJhMzA0Yjk2YzQ3MGFlODI1YzYwZGMwNjNjMmViM2ZhOGJiMDYwYWE=", "commit": {"author": {"name": "Ariel Ben-Yehuda", "email": "arielb1@mail.tau.ac.il", "date": "2017-08-29T21:40:56Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2017-08-29T21:40:56Z"}, "message": "Rollup merge of #44076 - RalfJung:src, r=alexcrichton\n\ninclude Cargo.{toml,lock} in rust-src tarball\n\nThe lock file is interesting because e.g. xargo could use it to build libstd against the same dependencies that were used for the main build. More generally speaking, just documenting in this form which exact dependencies should be used IMHO makes lots of sense.\n\nI added the Cargo.toml mostly because having the lock without the toml feels odd. Of course, the toml contains references to paths that don't actually exist in the rust-src tarball. Not sure if that is considered a problem.", "tree": {"sha": "7188a6291217267cfa52bcc7ddf84c15cdd64cff", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7188a6291217267cfa52bcc7ddf84c15cdd64cff"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ba304b96c470ae825c60dc063c2eb3fa8bb060aa", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ba304b96c470ae825c60dc063c2eb3fa8bb060aa", "html_url": "https://github.com/rust-lang/rust/commit/ba304b96c470ae825c60dc063c2eb3fa8bb060aa", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ba304b96c470ae825c60dc063c2eb3fa8bb060aa/comments", "author": null, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b1fff23f602eaab2953d933836a9406d61d3be0e", "url": "https://api.github.com/repos/rust-lang/rust/commits/b1fff23f602eaab2953d933836a9406d61d3be0e", "html_url": "https://github.com/rust-lang/rust/commit/b1fff23f602eaab2953d933836a9406d61d3be0e"}, {"sha": "bd24325ce1c4af21d519ca38e6973a6018ee7ad8", "url": "https://api.github.com/repos/rust-lang/rust/commits/bd24325ce1c4af21d519ca38e6973a6018ee7ad8", "html_url": "https://github.com/rust-lang/rust/commit/bd24325ce1c4af21d519ca38e6973a6018ee7ad8"}], "stats": {"total": 6, "additions": 6, "deletions": 0}, "files": [{"sha": "746f85a9d59d67291137c0ce5347a26759fa2cfa", "filename": "src/bootstrap/dist.rs", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/ba304b96c470ae825c60dc063c2eb3fa8bb060aa/src%2Fbootstrap%2Fdist.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ba304b96c470ae825c60dc063c2eb3fa8bb060aa/src%2Fbootstrap%2Fdist.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fdist.rs?ref=ba304b96c470ae825c60dc063c2eb3fa8bb060aa", "patch": "@@ -724,6 +724,9 @@ impl Step for Src {\n         let dst_src = dst.join(\"rust\");\n         t!(fs::create_dir_all(&dst_src));\n \n+        let src_files = [\n+            \"src/Cargo.lock\",\n+        ];\n         // This is the reduced set of paths which will become the rust-src component\n         // (essentially libstd and all of its path dependencies)\n         let std_src_dirs = [\n@@ -759,6 +762,9 @@ impl Step for Src {\n         ];\n \n         copy_src_dirs(build, &std_src_dirs[..], &std_src_dirs_exclude[..], &dst_src);\n+        for file in src_files.iter() {\n+            copy(&build.src.join(file), &dst_src.join(file));\n+        }\n \n         // Create source tarball in rust-installer format\n         let mut cmd = rust_installer(builder);"}]}