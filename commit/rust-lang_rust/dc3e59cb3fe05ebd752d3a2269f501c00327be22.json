{"sha": "dc3e59cb3fe05ebd752d3a2269f501c00327be22", "node_id": "C_kwDOAAsO6NoAKGRjM2U1OWNiM2ZlMDVlYmQ3NTJkM2EyMjY5ZjUwMWMwMDMyN2JlMjI", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2023-01-31T02:46:11Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2023-01-31T02:46:11Z"}, "message": "Auto merge of #107443 - cjgillot:generator-less-query, r=compiler-errors\n\nTest drop_tracking_mir before querying generator.\n\nr? `@ghost`", "tree": {"sha": "ea98798d197f96bc9162959b999b6bba625ad0c6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ea98798d197f96bc9162959b999b6bba625ad0c6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/dc3e59cb3fe05ebd752d3a2269f501c00327be22", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/dc3e59cb3fe05ebd752d3a2269f501c00327be22", "html_url": "https://github.com/rust-lang/rust/commit/dc3e59cb3fe05ebd752d3a2269f501c00327be22", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/dc3e59cb3fe05ebd752d3a2269f501c00327be22/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "487e83b711b96d84ce2edfc4cb4ba792c10b589e", "url": "https://api.github.com/repos/rust-lang/rust/commits/487e83b711b96d84ce2edfc4cb4ba792c10b589e", "html_url": "https://github.com/rust-lang/rust/commit/487e83b711b96d84ce2edfc4cb4ba792c10b589e"}, {"sha": "1d3f5b49d6bdfb2a051ddbfb7ad4b4ad603e9908", "url": "https://api.github.com/repos/rust-lang/rust/commits/1d3f5b49d6bdfb2a051ddbfb7ad4b4ad603e9908", "html_url": "https://github.com/rust-lang/rust/commit/1d3f5b49d6bdfb2a051ddbfb7ad4b4ad603e9908"}], "stats": {"total": 7, "additions": 5, "deletions": 2}, "files": [{"sha": "9d8f14058f681203548cd2a703b3556b5d6c7129", "filename": "compiler/rustc_metadata/src/rmeta/encoder.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/dc3e59cb3fe05ebd752d3a2269f501c00327be22/compiler%2Frustc_metadata%2Fsrc%2Frmeta%2Fencoder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dc3e59cb3fe05ebd752d3a2269f501c00327be22/compiler%2Frustc_metadata%2Fsrc%2Frmeta%2Fencoder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_metadata%2Fsrc%2Frmeta%2Fencoder.rs?ref=dc3e59cb3fe05ebd752d3a2269f501c00327be22", "patch": "@@ -1415,7 +1415,7 @@ impl<'a, 'tcx> EncodeContext<'a, 'tcx> {\n             if encode_opt {\n                 record!(self.tables.optimized_mir[def_id.to_def_id()] <- tcx.optimized_mir(def_id));\n \n-                if let DefKind::Generator = self.tcx.def_kind(def_id) && tcx.sess.opts.unstable_opts.drop_tracking_mir {\n+                if tcx.sess.opts.unstable_opts.drop_tracking_mir && let DefKind::Generator = self.tcx.def_kind(def_id) {\n                     record!(self.tables.mir_generator_witnesses[def_id.to_def_id()] <- tcx.mir_generator_witnesses(def_id));\n                 }\n             }"}, {"sha": "6815289776e9372059aecd2df65d93a4d7525efa", "filename": "compiler/rustc_mir_transform/src/lib.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/dc3e59cb3fe05ebd752d3a2269f501c00327be22/compiler%2Frustc_mir_transform%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dc3e59cb3fe05ebd752d3a2269f501c00327be22/compiler%2Frustc_mir_transform%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir_transform%2Fsrc%2Flib.rs?ref=dc3e59cb3fe05ebd752d3a2269f501c00327be22", "patch": "@@ -23,6 +23,7 @@ use rustc_const_eval::util;\n use rustc_data_structures::fx::FxIndexSet;\n use rustc_data_structures::steal::Steal;\n use rustc_hir as hir;\n+use rustc_hir::def::DefKind;\n use rustc_hir::def_id::{DefId, LocalDefId};\n use rustc_hir::intravisit::{self, Visitor};\n use rustc_index::vec::IndexVec;\n@@ -430,7 +431,9 @@ fn mir_drops_elaborated_and_const_checked(\n         return tcx.mir_drops_elaborated_and_const_checked(def);\n     }\n \n-    if tcx.generator_kind(def.did).is_some() && tcx.sess.opts.unstable_opts.drop_tracking_mir {\n+    if tcx.sess.opts.unstable_opts.drop_tracking_mir\n+        && let DefKind::Generator = tcx.def_kind(def.did)\n+    {\n         tcx.ensure().mir_generator_witnesses(def.did);\n     }\n     let mir_borrowck = tcx.mir_borrowck_opt_const_arg(def);"}]}