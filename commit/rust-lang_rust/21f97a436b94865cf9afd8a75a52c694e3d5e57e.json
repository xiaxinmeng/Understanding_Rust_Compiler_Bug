{"sha": "21f97a436b94865cf9afd8a75a52c694e3d5e57e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjIxZjk3YTQzNmI5NDg2NWNmOWFmZDhhNzVhNTJjNjk0ZTNkNWU1N2U=", "commit": {"author": {"name": "Scott Olson", "email": "scott@solson.me", "date": "2016-02-28T04:10:10Z"}, "committer": {"name": "Scott Olson", "email": "scott@solson.me", "date": "2016-02-28T04:10:10Z"}, "message": "WIP: Rename eval_constant to const_to_ptr.", "tree": {"sha": "bdbb047c1fccbee0e79e6ee1b7c69f990122af6b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bdbb047c1fccbee0e79e6ee1b7c69f990122af6b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/21f97a436b94865cf9afd8a75a52c694e3d5e57e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/21f97a436b94865cf9afd8a75a52c694e3d5e57e", "html_url": "https://github.com/rust-lang/rust/commit/21f97a436b94865cf9afd8a75a52c694e3d5e57e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/21f97a436b94865cf9afd8a75a52c694e3d5e57e/comments", "author": {"login": "solson", "id": 26806, "node_id": "MDQ6VXNlcjI2ODA2", "avatar_url": "https://avatars.githubusercontent.com/u/26806?v=4", "gravatar_id": "", "url": "https://api.github.com/users/solson", "html_url": "https://github.com/solson", "followers_url": "https://api.github.com/users/solson/followers", "following_url": "https://api.github.com/users/solson/following{/other_user}", "gists_url": "https://api.github.com/users/solson/gists{/gist_id}", "starred_url": "https://api.github.com/users/solson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/solson/subscriptions", "organizations_url": "https://api.github.com/users/solson/orgs", "repos_url": "https://api.github.com/users/solson/repos", "events_url": "https://api.github.com/users/solson/events{/privacy}", "received_events_url": "https://api.github.com/users/solson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "solson", "id": 26806, "node_id": "MDQ6VXNlcjI2ODA2", "avatar_url": "https://avatars.githubusercontent.com/u/26806?v=4", "gravatar_id": "", "url": "https://api.github.com/users/solson", "html_url": "https://github.com/solson", "followers_url": "https://api.github.com/users/solson/followers", "following_url": "https://api.github.com/users/solson/following{/other_user}", "gists_url": "https://api.github.com/users/solson/gists{/gist_id}", "starred_url": "https://api.github.com/users/solson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/solson/subscriptions", "organizations_url": "https://api.github.com/users/solson/orgs", "repos_url": "https://api.github.com/users/solson/repos", "events_url": "https://api.github.com/users/solson/events{/privacy}", "received_events_url": "https://api.github.com/users/solson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2776f55d0cb961ae9fef2a70917381baccdfa935", "url": "https://api.github.com/repos/rust-lang/rust/commits/2776f55d0cb961ae9fef2a70917381baccdfa935", "html_url": "https://github.com/rust-lang/rust/commit/2776f55d0cb961ae9fef2a70917381baccdfa935"}], "stats": {"total": 6, "additions": 3, "deletions": 3}, "files": [{"sha": "e34aa952c4265818cf7e76e1faf61513fae05bb3", "filename": "src/interpreter.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/21f97a436b94865cf9afd8a75a52c694e3d5e57e/src%2Finterpreter.rs", "raw_url": "https://github.com/rust-lang/rust/raw/21f97a436b94865cf9afd8a75a52c694e3d5e57e/src%2Finterpreter.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Finterpreter.rs?ref=21f97a436b94865cf9afd8a75a52c694e3d5e57e", "patch": "@@ -292,7 +292,7 @@ impl<'a, 'tcx> Interpreter<'a, 'tcx> {\n                 // mir::Terminator::SwitchInt { ref discr, ref values, ref targets, .. } => {\n                 //     let discr_val = self.read_lvalue(discr);\n \n-                //     let index = values.iter().position(|v| discr_val == self.eval_constant(v))\n+                //     let index = values.iter().position(|v| discr_val == self.const_to_ptr(v))\n                 //         .expect(\"discriminant matched no values\");\n \n                 //     block = targets[index];\n@@ -463,7 +463,7 @@ impl<'a, 'tcx> Interpreter<'a, 'tcx> {\n \n             mir::Operand::Constant(ref constant) => {\n                 match constant.literal {\n-                    mir::Literal::Value { ref value } => self.eval_constant(value),\n+                    mir::Literal::Value { ref value } => self.const_to_ptr(value),\n \n                     mir::Literal::Item { def_id, kind, .. } => match kind {\n                         // mir::ItemKind::Function | mir::ItemKind::Method => Value::Func(def_id),\n@@ -474,7 +474,7 @@ impl<'a, 'tcx> Interpreter<'a, 'tcx> {\n         }\n     }\n \n-    fn eval_constant(&mut self, const_val: &const_eval::ConstVal) -> Pointer {\n+    fn const_to_ptr(&mut self, const_val: &const_eval::ConstVal) -> Pointer {\n         match *const_val {\n             const_eval::ConstVal::Float(_f)         => unimplemented!(),\n             // const_eval::ConstVal::Int(i)            => Value::new_int(i),"}]}