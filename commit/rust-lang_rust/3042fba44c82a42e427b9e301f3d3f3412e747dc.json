{"sha": "3042fba44c82a42e427b9e301f3d3f3412e747dc", "node_id": "MDY6Q29tbWl0NzI0NzEyOjMwNDJmYmE0NGM4MmE0MmU0MjdiOWUzMDFmM2QzZjM0MTJlNzQ3ZGM=", "commit": {"author": {"name": "Christophe Vu-Brugier", "email": "cvubrugier@fastmail.fm", "date": "2016-08-12T09:49:52Z"}, "committer": {"name": "Christophe Vu-Brugier", "email": "cvubrugier@fastmail.fm", "date": "2016-08-12T12:49:16Z"}, "message": "book: fix the hidden find() functions in error-handling.md\n\nThe hidden find() functions always returns None. Consequently, one of the\nexamples using find() prints \"No file extension found\" instead of\n\"File extension: rs\" which is the expected output.\n\nThis patch fixes the issue by implementing find() with std::str::find().\n\nSigned-off-by: Christophe Vu-Brugier <cvubrugier@fastmail.fm>", "tree": {"sha": "e77d1f071fe9136f82a894d240ebc035a2cef1c3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e77d1f071fe9136f82a894d240ebc035a2cef1c3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3042fba44c82a42e427b9e301f3d3f3412e747dc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3042fba44c82a42e427b9e301f3d3f3412e747dc", "html_url": "https://github.com/rust-lang/rust/commit/3042fba44c82a42e427b9e301f3d3f3412e747dc", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3042fba44c82a42e427b9e301f3d3f3412e747dc/comments", "author": {"login": "cvubrugier", "id": 2720217, "node_id": "MDQ6VXNlcjI3MjAyMTc=", "avatar_url": "https://avatars.githubusercontent.com/u/2720217?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cvubrugier", "html_url": "https://github.com/cvubrugier", "followers_url": "https://api.github.com/users/cvubrugier/followers", "following_url": "https://api.github.com/users/cvubrugier/following{/other_user}", "gists_url": "https://api.github.com/users/cvubrugier/gists{/gist_id}", "starred_url": "https://api.github.com/users/cvubrugier/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cvubrugier/subscriptions", "organizations_url": "https://api.github.com/users/cvubrugier/orgs", "repos_url": "https://api.github.com/users/cvubrugier/repos", "events_url": "https://api.github.com/users/cvubrugier/events{/privacy}", "received_events_url": "https://api.github.com/users/cvubrugier/received_events", "type": "User", "site_admin": false}, "committer": {"login": "cvubrugier", "id": 2720217, "node_id": "MDQ6VXNlcjI3MjAyMTc=", "avatar_url": "https://avatars.githubusercontent.com/u/2720217?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cvubrugier", "html_url": "https://github.com/cvubrugier", "followers_url": "https://api.github.com/users/cvubrugier/followers", "following_url": "https://api.github.com/users/cvubrugier/following{/other_user}", "gists_url": "https://api.github.com/users/cvubrugier/gists{/gist_id}", "starred_url": "https://api.github.com/users/cvubrugier/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cvubrugier/subscriptions", "organizations_url": "https://api.github.com/users/cvubrugier/orgs", "repos_url": "https://api.github.com/users/cvubrugier/repos", "events_url": "https://api.github.com/users/cvubrugier/events{/privacy}", "received_events_url": "https://api.github.com/users/cvubrugier/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f55ac6944a88d4da62b30a16cc95893ca050c328", "url": "https://api.github.com/repos/rust-lang/rust/commits/f55ac6944a88d4da62b30a16cc95893ca050c328", "html_url": "https://github.com/rust-lang/rust/commit/f55ac6944a88d4da62b30a16cc95893ca050c328"}], "stats": {"total": 6, "additions": 3, "deletions": 3}, "files": [{"sha": "6e13b464e4c25767643c637dc406be387671c8ff", "filename": "src/doc/book/error-handling.md", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/3042fba44c82a42e427b9e301f3d3f3412e747dc/src%2Fdoc%2Fbook%2Ferror-handling.md", "raw_url": "https://github.com/rust-lang/rust/raw/3042fba44c82a42e427b9e301f3d3f3412e747dc/src%2Fdoc%2Fbook%2Ferror-handling.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Fbook%2Ferror-handling.md?ref=3042fba44c82a42e427b9e301f3d3f3412e747dc", "patch": "@@ -166,7 +166,7 @@ story. The other half is *using* the `find` function we've written. Let's try\n to use it to find the extension in a file name.\n \n ```rust\n-# fn find(_: &str, _: char) -> Option<usize> { None }\n+# fn find(haystack: &str, needle: char) -> Option<usize> { haystack.find(needle) }\n fn main() {\n     let file_name = \"foobar.rs\";\n     match find(file_name, '.') {\n@@ -223,7 +223,7 @@ Getting the extension of a file name is a pretty common operation, so it makes\n sense to put it into a function:\n \n ```rust\n-# fn find(_: &str, _: char) -> Option<usize> { None }\n+# fn find(haystack: &str, needle: char) -> Option<usize> { haystack.find(needle) }\n // Returns the extension of the given file name, where the extension is defined\n // as all characters following the first `.`.\n // If `file_name` has no `.`, then `None` is returned.\n@@ -272,7 +272,7 @@ Armed with our new combinator, we can rewrite our `extension_explicit` method\n to get rid of the case analysis:\n \n ```rust\n-# fn find(_: &str, _: char) -> Option<usize> { None }\n+# fn find(haystack: &str, needle: char) -> Option<usize> { haystack.find(needle) }\n // Returns the extension of the given file name, where the extension is defined\n // as all characters following the first `.`.\n // If `file_name` has no `.`, then `None` is returned."}]}