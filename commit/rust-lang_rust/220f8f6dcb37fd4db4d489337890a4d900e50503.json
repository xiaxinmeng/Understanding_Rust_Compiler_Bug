{"sha": "220f8f6dcb37fd4db4d489337890a4d900e50503", "node_id": "MDY6Q29tbWl0NzI0NzEyOjIyMGY4ZjZkY2IzN2ZkNGRiNGQ0ODkzMzc4OTBhNGQ5MDBlNTA1MDM=", "commit": {"author": {"name": "nham", "email": "hamann.nick@gmail.com", "date": "2014-07-28T04:00:29Z"}, "committer": {"name": "nham", "email": "hamann.nick@gmail.com", "date": "2014-07-28T04:00:29Z"}, "message": "Implement PartialOrd for SmallIntMap", "tree": {"sha": "56a8ac114b289d819022396878860572ad9a844a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/56a8ac114b289d819022396878860572ad9a844a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/220f8f6dcb37fd4db4d489337890a4d900e50503", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/220f8f6dcb37fd4db4d489337890a4d900e50503", "html_url": "https://github.com/rust-lang/rust/commit/220f8f6dcb37fd4db4d489337890a4d900e50503", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/220f8f6dcb37fd4db4d489337890a4d900e50503/comments", "author": {"login": "nham", "id": 546409, "node_id": "MDQ6VXNlcjU0NjQwOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/546409?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nham", "html_url": "https://github.com/nham", "followers_url": "https://api.github.com/users/nham/followers", "following_url": "https://api.github.com/users/nham/following{/other_user}", "gists_url": "https://api.github.com/users/nham/gists{/gist_id}", "starred_url": "https://api.github.com/users/nham/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nham/subscriptions", "organizations_url": "https://api.github.com/users/nham/orgs", "repos_url": "https://api.github.com/users/nham/repos", "events_url": "https://api.github.com/users/nham/events{/privacy}", "received_events_url": "https://api.github.com/users/nham/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nham", "id": 546409, "node_id": "MDQ6VXNlcjU0NjQwOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/546409?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nham", "html_url": "https://github.com/nham", "followers_url": "https://api.github.com/users/nham/followers", "following_url": "https://api.github.com/users/nham/following{/other_user}", "gists_url": "https://api.github.com/users/nham/gists{/gist_id}", "starred_url": "https://api.github.com/users/nham/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nham/subscriptions", "organizations_url": "https://api.github.com/users/nham/orgs", "repos_url": "https://api.github.com/users/nham/repos", "events_url": "https://api.github.com/users/nham/events{/privacy}", "received_events_url": "https://api.github.com/users/nham/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "16acc10bf9f0318d1d6e310a1fd23dd242811d10", "url": "https://api.github.com/repos/rust-lang/rust/commits/16acc10bf9f0318d1d6e310a1fd23dd242811d10", "html_url": "https://github.com/rust-lang/rust/commit/16acc10bf9f0318d1d6e310a1fd23dd242811d10"}], "stats": {"total": 39, "additions": 39, "deletions": 0}, "files": [{"sha": "5acabecb6ee513943e6173be55bcef5b8154e892", "filename": "src/libcollections/smallintmap.rs", "status": "modified", "additions": 39, "deletions": 0, "changes": 39, "blob_url": "https://github.com/rust-lang/rust/blob/220f8f6dcb37fd4db4d489337890a4d900e50503/src%2Flibcollections%2Fsmallintmap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/220f8f6dcb37fd4db4d489337890a4d900e50503/src%2Flibcollections%2Fsmallintmap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcollections%2Fsmallintmap.rs?ref=220f8f6dcb37fd4db4d489337890a4d900e50503", "patch": "@@ -373,6 +373,13 @@ impl<V:Clone> SmallIntMap<V> {\n     }\n }\n \n+impl<V: PartialOrd> PartialOrd for SmallIntMap<V> {\n+    #[inline]\n+    fn partial_cmp(&self, other: &SmallIntMap<V>) -> Option<Ordering> {\n+        iter::order::partial_cmp(self.iter(), other.iter())\n+    }\n+}\n+\n impl<V: fmt::Show> fmt::Show for SmallIntMap<V> {\n     fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {\n         try!(write!(f, \"{{\"));\n@@ -770,6 +777,38 @@ mod test_map {\n         assert!(a == b);\n     }\n \n+    #[test]\n+    fn test_lt() {\n+        let mut a = SmallIntMap::new();\n+        let mut b = SmallIntMap::new();\n+\n+        assert!(!(a < b) && !(b < a));\n+        assert!(b.insert(2u, 5i));\n+        assert!(a < b);\n+        assert!(a.insert(2, 7));\n+        assert!(!(a < b) && b < a);\n+        assert!(b.insert(1, 0));\n+        assert!(b < a);\n+        assert!(a.insert(0, 6));\n+        assert!(a < b);\n+        assert!(a.insert(6, 2));\n+        assert!(a < b && !(b < a));\n+    }\n+\n+    #[test]\n+    fn test_ord() {\n+        let mut a = SmallIntMap::new();\n+        let mut b = SmallIntMap::new();\n+\n+        assert!(a <= b && a >= b);\n+        assert!(a.insert(1u, 1i));\n+        assert!(a > b && a >= b);\n+        assert!(b < a && b <= a);\n+        assert!(b.insert(2, 2));\n+        assert!(b > a && b >= a);\n+        assert!(a < b && a <= b);\n+    }\n+\n     #[test]\n     fn test_hash() {\n         let mut x = SmallIntMap::new();"}]}