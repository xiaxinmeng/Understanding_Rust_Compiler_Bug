{"sha": "c6df67afca788453a3c494899fbf5295992bcfba", "node_id": "MDY6Q29tbWl0NzI0NzEyOmM2ZGY2N2FmY2E3ODg0NTNhM2M0OTQ4OTlmYmY1Mjk1OTkyYmNmYmE=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2017-03-23T06:48:23Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2017-03-23T06:48:23Z"}, "message": "Auto merge of #40515 - alexcrichton:tarball-names, r=brson\n\nrustbuild: Don't hardcode 'nightly' for Cargo\n\nIt now follows rustc release trains. I also had to land this commit on beta (https://github.com/rust-lang/rust/commit/0a27a8713bdca09564ffd298fce8f760e47775af) before https://github.com/rust-lang/rust/pull/40484 could land, so this is basically just a forward port (if you will) of that commit to master.", "tree": {"sha": "30bb8acf031feb9645d8d883dd4c82ae5f6f21d7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/30bb8acf031feb9645d8d883dd4c82ae5f6f21d7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c6df67afca788453a3c494899fbf5295992bcfba", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c6df67afca788453a3c494899fbf5295992bcfba", "html_url": "https://github.com/rust-lang/rust/commit/c6df67afca788453a3c494899fbf5295992bcfba", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c6df67afca788453a3c494899fbf5295992bcfba/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7c7753d370ee186219bf369cb0910a20198ea79e", "url": "https://api.github.com/repos/rust-lang/rust/commits/7c7753d370ee186219bf369cb0910a20198ea79e", "html_url": "https://github.com/rust-lang/rust/commit/7c7753d370ee186219bf369cb0910a20198ea79e"}, {"sha": "fe2b7a49524c889715fb3346d4d309ecbd6ba651", "url": "https://api.github.com/repos/rust-lang/rust/commits/fe2b7a49524c889715fb3346d4d309ecbd6ba651", "html_url": "https://github.com/rust-lang/rust/commit/fe2b7a49524c889715fb3346d4d309ecbd6ba651"}], "stats": {"total": 24, "additions": 16, "deletions": 8}, "files": [{"sha": "ec992b47a6e4b0d3865cc071a31fa0b05dd3552a", "filename": "src/bootstrap/dist.rs", "status": "modified", "additions": 11, "deletions": 8, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/c6df67afca788453a3c494899fbf5295992bcfba/src%2Fbootstrap%2Fdist.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c6df67afca788453a3c494899fbf5295992bcfba/src%2Fbootstrap%2Fdist.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fdist.rs?ref=c6df67afca788453a3c494899fbf5295992bcfba", "patch": "@@ -37,8 +37,12 @@ use channel;\n use util::{cp_r, libdir, is_dylib, cp_filtered, copy, exe};\n \n fn pkgname(build: &Build, component: &str) -> String {\n-    assert!(component.starts_with(\"rust\")); // does not work with cargo\n-    format!(\"{}-{}\", component, build.rust_package_vers())\n+    if component == \"cargo\" {\n+        format!(\"{}-{}\", component, build.cargo_package_vers())\n+    } else {\n+        assert!(component.starts_with(\"rust\"));\n+        format!(\"{}-{}\", component, build.rust_package_vers())\n+    }\n }\n \n fn distdir(build: &Build) -> PathBuf {\n@@ -533,7 +537,7 @@ pub fn cargo(build: &Build, stage: u32, target: &str) {\n     let src = build.src.join(\"cargo\");\n     let etc = src.join(\"src/etc\");\n     let release_num = build.cargo_release_num();\n-    let name = format!(\"cargo-{}\", build.package_vers(&release_num));\n+    let name = pkgname(build, \"cargo\");\n     let version = build.cargo_info.version(build, &release_num);\n \n     let tmp = tmpdir(build);\n@@ -591,12 +595,11 @@ pub fn extended(build: &Build, stage: u32, target: &str) {\n     println!(\"Dist extended stage{} ({})\", stage, target);\n \n     let dist = distdir(build);\n-    let cargo_vers = build.cargo_release_num();\n     let rustc_installer = dist.join(format!(\"{}-{}.tar.gz\",\n                                             pkgname(build, \"rustc\"),\n                                             target));\n-    let cargo_installer = dist.join(format!(\"cargo-{}-{}.tar.gz\",\n-                                            build.package_vers(&cargo_vers),\n+    let cargo_installer = dist.join(format!(\"{}-{}.tar.gz\",\n+                                            pkgname(build, \"cargo\"),\n                                             target));\n     let docs_installer = dist.join(format!(\"{}-{}.tar.gz\",\n                                            pkgname(build, \"rust-docs\"),\n@@ -674,7 +677,7 @@ pub fn extended(build: &Build, stage: u32, target: &str) {\n \n         cp_r(&work.join(&format!(\"{}-{}\", pkgname(build, \"rustc\"), target)),\n              &pkg.join(\"rustc\"));\n-        cp_r(&work.join(&format!(\"cargo-nightly-{}\", target)),\n+        cp_r(&work.join(&format!(\"{}-{}\", pkgname(build, \"cargo\"), target)),\n              &pkg.join(\"cargo\"));\n         cp_r(&work.join(&format!(\"{}-{}\", pkgname(build, \"rust-docs\"), target)),\n              &pkg.join(\"rust-docs\"));\n@@ -726,7 +729,7 @@ pub fn extended(build: &Build, stage: u32, target: &str) {\n         cp_r(&work.join(&format!(\"{}-{}\", pkgname(build, \"rustc\"), target))\n                   .join(\"rustc\"),\n              &exe.join(\"rustc\"));\n-        cp_r(&work.join(&format!(\"cargo-nightly-{}\", target))\n+        cp_r(&work.join(&format!(\"{}-{}\", pkgname(build, \"cargo\"), target))\n                   .join(\"cargo\"),\n              &exe.join(\"cargo\"));\n         cp_r(&work.join(&format!(\"{}-{}\", pkgname(build, \"rust-docs\"), target))"}, {"sha": "84254d7d6ae515b2f49afaa647e58aec2bcb2b63", "filename": "src/bootstrap/lib.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/c6df67afca788453a3c494899fbf5295992bcfba/src%2Fbootstrap%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c6df67afca788453a3c494899fbf5295992bcfba/src%2Fbootstrap%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Flib.rs?ref=c6df67afca788453a3c494899fbf5295992bcfba", "patch": "@@ -1015,6 +1015,11 @@ impl Build {\n         self.package_vers(channel::CFG_RELEASE_NUM)\n     }\n \n+    /// Returns the value of `package_vers` above for Cargo\n+    fn cargo_package_vers(&self) -> String {\n+        self.package_vers(&self.cargo_release_num())\n+    }\n+\n     /// Returns the `version` string associated with this compiler for Rust\n     /// itself.\n     ///"}]}