{"sha": "9891ea74d6f706cf38e91599f1e65816977cefdc", "node_id": "MDY6Q29tbWl0NzI0NzEyOjk4OTFlYTc0ZDZmNzA2Y2YzOGU5MTU5OWYxZTY1ODE2OTc3Y2VmZGM=", "commit": {"author": {"name": "Adolfo Ochagav\u00eda", "email": "aochagavia92@gmail.com", "date": "2015-04-15T09:17:58Z"}, "committer": {"name": "Adolfo Ochagav\u00eda", "email": "aochagavia92@gmail.com", "date": "2015-04-15T09:17:58Z"}, "message": "Implement traits for parser error structs\n\nImplement `Debug`, `Display` and `Error` for `FatalError` and `ExplicitBug`", "tree": {"sha": "d3763cb2376fac529d4e8cd11fb077a59ad7b6d7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d3763cb2376fac529d4e8cd11fb077a59ad7b6d7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9891ea74d6f706cf38e91599f1e65816977cefdc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9891ea74d6f706cf38e91599f1e65816977cefdc", "html_url": "https://github.com/rust-lang/rust/commit/9891ea74d6f706cf38e91599f1e65816977cefdc", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9891ea74d6f706cf38e91599f1e65816977cefdc/comments", "author": {"login": "aochagavia", "id": 5196584, "node_id": "MDQ6VXNlcjUxOTY1ODQ=", "avatar_url": "https://avatars.githubusercontent.com/u/5196584?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aochagavia", "html_url": "https://github.com/aochagavia", "followers_url": "https://api.github.com/users/aochagavia/followers", "following_url": "https://api.github.com/users/aochagavia/following{/other_user}", "gists_url": "https://api.github.com/users/aochagavia/gists{/gist_id}", "starred_url": "https://api.github.com/users/aochagavia/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aochagavia/subscriptions", "organizations_url": "https://api.github.com/users/aochagavia/orgs", "repos_url": "https://api.github.com/users/aochagavia/repos", "events_url": "https://api.github.com/users/aochagavia/events{/privacy}", "received_events_url": "https://api.github.com/users/aochagavia/received_events", "type": "User", "site_admin": false}, "committer": {"login": "aochagavia", "id": 5196584, "node_id": "MDQ6VXNlcjUxOTY1ODQ=", "avatar_url": "https://avatars.githubusercontent.com/u/5196584?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aochagavia", "html_url": "https://github.com/aochagavia", "followers_url": "https://api.github.com/users/aochagavia/followers", "following_url": "https://api.github.com/users/aochagavia/following{/other_user}", "gists_url": "https://api.github.com/users/aochagavia/gists{/gist_id}", "starred_url": "https://api.github.com/users/aochagavia/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aochagavia/subscriptions", "organizations_url": "https://api.github.com/users/aochagavia/orgs", "repos_url": "https://api.github.com/users/aochagavia/repos", "events_url": "https://api.github.com/users/aochagavia/events{/privacy}", "received_events_url": "https://api.github.com/users/aochagavia/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "af1c39cbd90a03f22dbb2b144ac1e543dbe0fe1d", "url": "https://api.github.com/repos/rust-lang/rust/commits/af1c39cbd90a03f22dbb2b144ac1e543dbe0fe1d", "html_url": "https://github.com/rust-lang/rust/commit/af1c39cbd90a03f22dbb2b144ac1e543dbe0fe1d"}], "stats": {"total": 37, "additions": 29, "deletions": 8}, "files": [{"sha": "e9af6c00995a65b2095b1548c5ddba0f1583a864", "filename": "src/libsyntax/diagnostic.rs", "status": "modified", "additions": 29, "deletions": 8, "changes": 37, "blob_url": "https://github.com/rust-lang/rust/blob/9891ea74d6f706cf38e91599f1e65816977cefdc/src%2Flibsyntax%2Fdiagnostic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9891ea74d6f706cf38e91599f1e65816977cefdc/src%2Flibsyntax%2Fdiagnostic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fdiagnostic.rs?ref=9891ea74d6f706cf38e91599f1e65816977cefdc", "patch": "@@ -13,17 +13,14 @@ pub use self::RenderSpan::*;\n pub use self::ColorConfig::*;\n use self::Destination::*;\n \n-use codemap::{COMMAND_LINE_SP, COMMAND_LINE_EXPN, Pos, Span};\n-use codemap;\n+use codemap::{self, COMMAND_LINE_SP, COMMAND_LINE_EXPN, Pos, Span};\n use diagnostics;\n \n use std::cell::{RefCell, Cell};\n-use std::cmp;\n-use std::fmt;\n+use std::{cmp, error, fmt};\n use std::io::prelude::*;\n use std::io;\n-use term::WriterWrapper;\n-use term;\n+use term::{self, WriterWrapper};\n use libc;\n \n /// maximum number of lines we will print for each error; arbitrary.\n@@ -83,15 +80,39 @@ pub trait Emitter {\n /// Used as a return value to signify a fatal error occurred. (It is also\n /// used as the argument to panic at the moment, but that will eventually\n /// not be true.)\n-#[derive(Copy, Clone)]\n+#[derive(Copy, Clone, Debug)]\n #[must_use]\n pub struct FatalError;\n \n+impl fmt::Display for FatalError {\n+    fn fmt(&self, f: &mut fmt::Formatter) -> Result<(), fmt::Error> {\n+        write!(f, \"parser fatal error\")\n+    }\n+}\n+\n+impl error::Error for FatalError {\n+    fn description(&self) -> &str {\n+        \"The parser has encountered a fatal error\"\n+    }\n+}\n+\n /// Signifies that the compiler died with an explicit call to `.bug`\n /// or `.span_bug` rather than a failed assertion, etc.\n-#[derive(Copy, Clone)]\n+#[derive(Copy, Clone, Debug)]\n pub struct ExplicitBug;\n \n+impl fmt::Display for ExplicitBug {\n+    fn fmt(&self, f: &mut fmt::Formatter) -> Result<(), fmt::Error> {\n+        write!(f, \"parser internal bug\")\n+    }\n+}\n+\n+impl error::Error for ExplicitBug {\n+    fn description(&self) -> &str {\n+        \"The parser has encountered an internal bug\"\n+    }\n+}\n+\n /// A span-handler is like a handler but also\n /// accepts span information for source-location\n /// reporting."}]}