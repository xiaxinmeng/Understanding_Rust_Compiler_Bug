{"sha": "359ac360a453b31494d18bf838f6620032a663e5", "node_id": "MDY6Q29tbWl0NzI0NzEyOjM1OWFjMzYwYTQ1M2IzMTQ5NGQxOGJmODM4ZjY2MjAwMzJhNjYzZTU=", "commit": {"author": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2014-02-14T18:03:53Z"}, "committer": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2014-02-15T06:55:20Z"}, "message": "Register new snapshots\n\nThis enables the parser error for `extern mod` => `extern crate` transitions.", "tree": {"sha": "d4103a6de21ec37365bc1327f5f52ab21559f909", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d4103a6de21ec37365bc1327f5f52ab21559f909"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/359ac360a453b31494d18bf838f6620032a663e5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/359ac360a453b31494d18bf838f6620032a663e5", "html_url": "https://github.com/rust-lang/rust/commit/359ac360a453b31494d18bf838f6620032a663e5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/359ac360a453b31494d18bf838f6620032a663e5/comments", "author": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3496e93d13590140242f862c905dc2d591d2e2ea", "url": "https://api.github.com/repos/rust-lang/rust/commits/3496e93d13590140242f862c905dc2d591d2e2ea", "html_url": "https://github.com/rust-lang/rust/commit/3496e93d13590140242f862c905dc2d591d2e2ea"}], "stats": {"total": 57, "additions": 18, "deletions": 39}, "files": [{"sha": "1ac599d0654fbd0e162982f839c4af6e265b6c0c", "filename": "src/libstd/hashmap.rs", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/359ac360a453b31494d18bf838f6620032a663e5/src%2Flibstd%2Fhashmap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/359ac360a453b31494d18bf838f6620032a663e5/src%2Flibstd%2Fhashmap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fhashmap.rs?ref=359ac360a453b31494d18bf838f6620032a663e5", "patch": "@@ -56,7 +56,7 @@ use container::{Container, Mutable, Map, MutableMap, Set, MutableSet};\n use clone::Clone;\n use cmp::{Eq, Equiv, max};\n use default::Default;\n-#[cfg(not(stage0))] use fmt;\n+use fmt;\n use hash::Hash;\n use iter;\n use iter::{Iterator, FromIterator, Extendable};\n@@ -66,7 +66,7 @@ use num;\n use option::{None, Option, Some};\n use rand::Rng;\n use rand;\n-#[cfg(not(stage0))] use result::{Ok, Err};\n+use result::{Ok, Err};\n use vec::{ImmutableVector, MutableVector, OwnedVector, Items, MutItems};\n use vec_ng;\n use vec_ng::Vec;\n@@ -597,7 +597,6 @@ impl<K:Hash + Eq + Clone,V:Clone> Clone for HashMap<K,V> {\n     }\n }\n \n-#[cfg(not(stage0))]\n impl<A: fmt::Show + Hash + Eq, B: fmt::Show> fmt::Show for HashMap<A, B> {\n     fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {\n         if_ok!(write!(f.buf, r\"\\{\"))\n@@ -876,7 +875,6 @@ impl<T:Hash + Eq + Clone> Clone for HashSet<T> {\n     }\n }\n \n-#[cfg(not(stage0))]\n impl<A: fmt::Show + Hash + Eq> fmt::Show for HashSet<A> {\n     fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {\n         if_ok!(write!(f.buf, r\"\\{\"))"}, {"sha": "94f56d42613fd7ee26158db6bb4df7ec6fd8e44b", "filename": "src/libstd/rt/env.rs", "status": "modified", "additions": 0, "deletions": 11, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/359ac360a453b31494d18bf838f6620032a663e5/src%2Flibstd%2Frt%2Fenv.rs", "raw_url": "https://github.com/rust-lang/rust/raw/359ac360a453b31494d18bf838f6620032a663e5/src%2Flibstd%2Frt%2Fenv.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Frt%2Fenv.rs?ref=359ac360a453b31494d18bf838f6620032a663e5", "patch": "@@ -10,8 +10,6 @@\n \n //! Runtime environment settings\n \n-// NOTE: remove `POISON_ON_FREE` after a snapshot\n-\n use from_str::from_str;\n use option::{Some, None};\n use os;\n@@ -23,7 +21,6 @@ static mut MIN_STACK: uint = 2 * 1024 * 1024;\n /// This default corresponds to 20M of cache per scheduler (at the default size).\n static mut MAX_CACHED_STACKS: uint = 10;\n static mut DEBUG_BORROW: bool = false;\n-static mut POISON_ON_FREE: bool = false;\n \n pub fn init() {\n     unsafe {\n@@ -43,10 +40,6 @@ pub fn init() {\n             Some(_) => DEBUG_BORROW = true,\n             None => ()\n         }\n-        match os::getenv(\"RUST_POISON_ON_FREE\") {\n-            Some(_) => POISON_ON_FREE = true,\n-            None => ()\n-        }\n     }\n }\n \n@@ -61,7 +54,3 @@ pub fn max_cached_stacks() -> uint {\n pub fn debug_borrow() -> bool {\n     unsafe { DEBUG_BORROW }\n }\n-\n-pub fn poison_on_free() -> bool {\n-    unsafe { POISON_ON_FREE }\n-}"}, {"sha": "f3474b9401e1a2562db2549d7e24abc08930a0d5", "filename": "src/libstd/rt/local_heap.rs", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/359ac360a453b31494d18bf838f6620032a663e5/src%2Flibstd%2Frt%2Flocal_heap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/359ac360a453b31494d18bf838f6620032a663e5/src%2Flibstd%2Frt%2Flocal_heap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Frt%2Flocal_heap.rs?ref=359ac360a453b31494d18bf838f6620032a663e5", "patch": "@@ -17,7 +17,6 @@ use ops::Drop;\n use option::{Option, None, Some};\n use ptr;\n use ptr::RawPtr;\n-use rt::env;\n use rt::global_heap;\n use rt::local::Local;\n use rt::task::Task;\n@@ -41,7 +40,6 @@ pub struct MemoryRegion {\n pub struct LocalHeap {\n     priv memory_region: MemoryRegion,\n \n-    priv poison_on_free: bool,\n     priv live_allocs: *mut raw::Box<()>,\n }\n \n@@ -54,7 +52,6 @@ impl LocalHeap {\n         };\n         LocalHeap {\n             memory_region: region,\n-            poison_on_free: env::poison_on_free(),\n             live_allocs: ptr::mut_null(),\n         }\n     }"}, {"sha": "a1c5e83db44e765f899ac4e625ce3a6da8ab40bf", "filename": "src/libstd/vec.rs", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/359ac360a453b31494d18bf838f6620032a663e5/src%2Flibstd%2Fvec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/359ac360a453b31494d18bf838f6620032a663e5/src%2Flibstd%2Fvec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fvec.rs?ref=359ac360a453b31494d18bf838f6620032a663e5", "patch": "@@ -108,15 +108,15 @@ use container::{Container, Mutable};\n use cmp::{Eq, TotalOrd, Ordering, Less, Equal, Greater};\n use cmp;\n use default::Default;\n-#[cfg(not(stage0))] use fmt;\n+use fmt;\n use iter::*;\n use num::{Integer, CheckedAdd, Saturating, checked_next_power_of_two};\n use option::{None, Option, Some};\n use ptr::to_unsafe_ptr;\n use ptr;\n use ptr::RawPtr;\n use rt::global_heap::{malloc_raw, realloc_raw, exchange_free};\n-#[cfg(not(stage0))] use result::{Ok, Err};\n+use result::{Ok, Err};\n use mem;\n use mem::size_of;\n use kinds::marker;\n@@ -2643,7 +2643,6 @@ impl<A: DeepClone> DeepClone for ~[A] {\n     }\n }\n \n-#[cfg(not(stage0))]\n impl<'a, T: fmt::Show> fmt::Show for &'a [T] {\n     fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {\n         if_ok!(write!(f.buf, \"[\"));\n@@ -2660,7 +2659,6 @@ impl<'a, T: fmt::Show> fmt::Show for &'a [T] {\n     }\n }\n \n-#[cfg(not(stage0))]\n impl<T: fmt::Show> fmt::Show for ~[T] {\n     fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {\n         self.as_slice().fmt(f)"}, {"sha": "f602925140b65ddd0464c148837a04a245072388", "filename": "src/libsyntax/parse/parser.rs", "status": "modified", "additions": 6, "deletions": 7, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/359ac360a453b31494d18bf838f6620032a663e5/src%2Flibsyntax%2Fparse%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/359ac360a453b31494d18bf838f6620032a663e5/src%2Flibsyntax%2Fparse%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fparser.rs?ref=359ac360a453b31494d18bf838f6620032a663e5", "patch": "@@ -4566,13 +4566,12 @@ impl Parser {\n             let next_is_mod = self.eat_keyword(keywords::Mod);\n \n             if next_is_mod || self.eat_keyword(keywords::Crate) {\n-                // NOTE(flaper87): Uncomment this when this changes gets into stage0\n-                //\n-                // if next_is_mod {\n-                //    self.span_err(self.span,\n-                //                   format!(\"`extern mod` is obsolete, use `extern crate` instead \\\n-                //                           to refer to external crates.\"))\n-                // }\n+                if next_is_mod {\n+                   self.span_err(self.span,\n+                                  format!(\"`extern mod` is obsolete, use \\\n+                                           `extern crate` instead \\\n+                                           to refer to external crates.\"))\n+                }\n                 return self.parse_item_extern_crate(lo, visibility, attrs);\n             }\n "}, {"sha": "88966a618358c405dd118126692d5e5d59134ac0", "filename": "src/snapshots.txt", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/359ac360a453b31494d18bf838f6620032a663e5/src%2Fsnapshots.txt", "raw_url": "https://github.com/rust-lang/rust/raw/359ac360a453b31494d18bf838f6620032a663e5/src%2Fsnapshots.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fsnapshots.txt?ref=359ac360a453b31494d18bf838f6620032a663e5", "patch": "@@ -1,3 +1,11 @@\n+S 2014-02-14 18477ac\n+  freebsd-x86_64 102df7dfab2a1c59d9e2f16a3f02f368310dd022\n+  linux-i386 fcf5891e9b3c7c9ef5ee5ea37e62089346099425\n+  linux-x86_64 d7c2df185fd2e25b4b8f5b2caad277b5ba664b81\n+  macos-i386\n+  macos-x86_64\n+  winnt-i386 f78a892f47627f34233e44c2ff4a00b68063a2ce\n+\n S 2014-02-12 c62f6ce\n   freebsd-x86_64 737a423c5f803119ff5a692eac432fa9d0c595a8\n   linux-i386 a7e90e27e8b6a3fa79ddc15f0ed217ccbade875d"}, {"sha": "54219de810707ac151bf5e7aa5b514bb598bd1dd", "filename": "src/test/auxiliary/crateresolve_calories-1.rs", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/359ac360a453b31494d18bf838f6620032a663e5/src%2Ftest%2Fauxiliary%2Fcrateresolve_calories-1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/359ac360a453b31494d18bf838f6620032a663e5/src%2Ftest%2Fauxiliary%2Fcrateresolve_calories-1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fauxiliary%2Fcrateresolve_calories-1.rs?ref=359ac360a453b31494d18bf838f6620032a663e5", "patch": "@@ -9,11 +9,6 @@\n // except according to those terms.\n \n #[crate_id=\"crateresolve_calories#0.1\"];\n-// NOTE: remove after the next snapshot\n-#[link(name = \"crateresolve_calories\",\n-       vers = \"0.1\",\n-       calories = \"100\")];\n-\n #[crate_type = \"lib\"];\n \n pub fn f() -> int { 100 }"}, {"sha": "3b949b48613e46e5b35a4bfee6ca1e279f12aaef", "filename": "src/test/auxiliary/crateresolve_calories-2.rs", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/359ac360a453b31494d18bf838f6620032a663e5/src%2Ftest%2Fauxiliary%2Fcrateresolve_calories-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/359ac360a453b31494d18bf838f6620032a663e5/src%2Ftest%2Fauxiliary%2Fcrateresolve_calories-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fauxiliary%2Fcrateresolve_calories-2.rs?ref=359ac360a453b31494d18bf838f6620032a663e5", "patch": "@@ -9,11 +9,6 @@\n // except according to those terms.\n \n #[crate_id=\"crateresolve_calories#0.1\"];\n-// NOTE: remove after the next snapshot\n-#[link(name = \"crateresolve_calories\",\n-       vers = \"0.1\",\n-       calories = \"200\")];\n-\n #[crate_type = \"lib\"];\n \n pub fn f() -> int { 200 }"}]}