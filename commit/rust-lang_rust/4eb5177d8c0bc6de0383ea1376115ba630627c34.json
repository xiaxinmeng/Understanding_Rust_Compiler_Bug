{"sha": "4eb5177d8c0bc6de0383ea1376115ba630627c34", "node_id": "MDY6Q29tbWl0NzI0NzEyOjRlYjUxNzdkOGMwYmM2ZGUwMzgzZWExMzc2MTE1YmE2MzA2MjdjMzQ=", "commit": {"author": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2012-09-28T00:17:10Z"}, "committer": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2012-09-28T00:17:27Z"}, "message": "Finish de-exporting cast, mutable, flate, repr, cleanup, reflect. Part of #3583.", "tree": {"sha": "48cbe8d4d0f4384911a3a352d88931c0dc634bd0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/48cbe8d4d0f4384911a3a352d88931c0dc634bd0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4eb5177d8c0bc6de0383ea1376115ba630627c34", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4eb5177d8c0bc6de0383ea1376115ba630627c34", "html_url": "https://github.com/rust-lang/rust/commit/4eb5177d8c0bc6de0383ea1376115ba630627c34", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4eb5177d8c0bc6de0383ea1376115ba630627c34/comments", "author": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "committer": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "24265b1598e20173e4fa3f9f6c32bd4b665789c8", "url": "https://api.github.com/repos/rust-lang/rust/commits/24265b1598e20173e4fa3f9f6c32bd4b665789c8", "html_url": "https://github.com/rust-lang/rust/commit/24265b1598e20173e4fa3f9f6c32bd4b665789c8"}], "stats": {"total": 15, "additions": 3, "deletions": 12}, "files": [{"sha": "d6dacf18171538aa2ce0e5df31b439890b91bd03", "filename": "src/libcore/cast.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/4eb5177d8c0bc6de0383ea1376115ba630627c34/src%2Flibcore%2Fcast.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4eb5177d8c0bc6de0383ea1376115ba630627c34/src%2Flibcore%2Fcast.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fcast.rs?ref=4eb5177d8c0bc6de0383ea1376115ba630627c34", "patch": "@@ -2,7 +2,6 @@\n \n #[abi = \"rust-intrinsic\"]\n extern mod rusti {\n-    #[legacy_exports];\n     fn forget<T>(-x: T);\n     fn reinterpret_cast<T, U>(e: T) -> U;\n }"}, {"sha": "0e1530d3233c97efba6966d6906bbf76240f6e27", "filename": "src/libcore/core.rc", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/4eb5177d8c0bc6de0383ea1376115ba630627c34/src%2Flibcore%2Fcore.rc", "raw_url": "https://github.com/rust-lang/rust/raw/4eb5177d8c0bc6de0383ea1376115ba630627c34/src%2Flibcore%2Fcore.rc", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fcore.rc?ref=4eb5177d8c0bc6de0383ea1376115ba630627c34", "patch": "@@ -311,17 +311,11 @@ mod path;\n mod rand;\n mod run;\n mod sys;\n-#[legacy_exports]\n mod cast;\n-#[legacy_exports]\n mod mutable;\n-#[legacy_exports]\n mod flate;\n-#[legacy_exports]\n mod repr;\n-#[legacy_exports]\n mod cleanup;\n-#[legacy_exports]\n mod reflect;\n \n // Modules supporting compiler-generated code"}, {"sha": "cfc34b03a94dc1d86cefa5c8b0f4ed30eea68cb4", "filename": "src/libcore/flate.rs", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/4eb5177d8c0bc6de0383ea1376115ba630627c34/src%2Flibcore%2Fflate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4eb5177d8c0bc6de0383ea1376115ba630627c34/src%2Flibcore%2Fflate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fflate.rs?ref=4eb5177d8c0bc6de0383ea1376115ba630627c34", "patch": "@@ -11,8 +11,6 @@ Simple compression\n use libc::{c_void, size_t, c_int};\n \n extern mod rustrt {\n-    #[legacy_exports];\n-\n     fn tdefl_compress_mem_to_heap(psrc_buf: *const c_void,\n                                   src_buf_len: size_t,\n                                   pout_len: *size_t,\n@@ -29,7 +27,7 @@ const lz_fast : c_int = 0x1;   // LZ with only one probe\n const lz_norm : c_int = 0x80;  // LZ with 128 probes, \"normal\"\n const lz_best : c_int = 0xfff; // LZ with 4095 probes, \"best\"\n \n-fn deflate_bytes(bytes: &[const u8]) -> ~[u8] {\n+pub fn deflate_bytes(bytes: &[const u8]) -> ~[u8] {\n     do vec::as_const_buf(bytes) |b, len| {\n         unsafe {\n             let mut outsz : size_t = 0;\n@@ -47,7 +45,7 @@ fn deflate_bytes(bytes: &[const u8]) -> ~[u8] {\n     }\n }\n \n-fn inflate_bytes(bytes: &[const u8]) -> ~[u8] {\n+pub fn inflate_bytes(bytes: &[const u8]) -> ~[u8] {\n     do vec::as_const_buf(bytes) |b, len| {\n         unsafe {\n             let mut outsz : size_t = 0;"}, {"sha": "af6a3f9b47834aa8a6d02212271a5ce7c2a3ab6d", "filename": "src/libcore/reflect.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4eb5177d8c0bc6de0383ea1376115ba630627c34/src%2Flibcore%2Freflect.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4eb5177d8c0bc6de0383ea1376115ba630627c34/src%2Flibcore%2Freflect.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Freflect.rs?ref=4eb5177d8c0bc6de0383ea1376115ba630627c34", "patch": "@@ -13,7 +13,7 @@ use libc::c_void;\n  * data structure, and implement both `MovePtr` for it as well as `TyVisitor`;\n  * then build a MovePtrAdaptor wrapped around your struct.\n  */\n-trait MovePtr {\n+pub trait MovePtr {\n     fn move_ptr(adjustment: fn(*c_void) -> *c_void);\n }\n "}]}