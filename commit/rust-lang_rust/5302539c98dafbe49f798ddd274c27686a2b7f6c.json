{"sha": "5302539c98dafbe49f798ddd274c27686a2b7f6c", "node_id": "MDY6Q29tbWl0NzI0NzEyOjUzMDI1MzljOThkYWZiZTQ5Zjc5OGRkZDI3NGMyNzY4NmEyYjdmNmM=", "commit": {"author": {"name": "Zach Lute", "email": "zach.lute@gmail.com", "date": "2020-07-01T18:25:54Z"}, "committer": {"name": "Zach Lute", "email": "zach.lute@gmail.com", "date": "2021-07-10T21:20:32Z"}, "message": "Change all 'optflag' arguments to 'optflagmulti'\n\nBecause specifying these flags multiple times will never be discernibly different in functionality from specifying them a single time, there is no reason to fail and report an error to the user.", "tree": {"sha": "f45060b4939fe42e474355401868399c7ccde931", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f45060b4939fe42e474355401868399c7ccde931"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5302539c98dafbe49f798ddd274c27686a2b7f6c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5302539c98dafbe49f798ddd274c27686a2b7f6c", "html_url": "https://github.com/rust-lang/rust/commit/5302539c98dafbe49f798ddd274c27686a2b7f6c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5302539c98dafbe49f798ddd274c27686a2b7f6c/comments", "author": {"login": "zachlute", "id": 308981, "node_id": "MDQ6VXNlcjMwODk4MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/308981?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zachlute", "html_url": "https://github.com/zachlute", "followers_url": "https://api.github.com/users/zachlute/followers", "following_url": "https://api.github.com/users/zachlute/following{/other_user}", "gists_url": "https://api.github.com/users/zachlute/gists{/gist_id}", "starred_url": "https://api.github.com/users/zachlute/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zachlute/subscriptions", "organizations_url": "https://api.github.com/users/zachlute/orgs", "repos_url": "https://api.github.com/users/zachlute/repos", "events_url": "https://api.github.com/users/zachlute/events{/privacy}", "received_events_url": "https://api.github.com/users/zachlute/received_events", "type": "User", "site_admin": false}, "committer": {"login": "zachlute", "id": 308981, "node_id": "MDQ6VXNlcjMwODk4MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/308981?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zachlute", "html_url": "https://github.com/zachlute", "followers_url": "https://api.github.com/users/zachlute/followers", "following_url": "https://api.github.com/users/zachlute/following{/other_user}", "gists_url": "https://api.github.com/users/zachlute/gists{/gist_id}", "starred_url": "https://api.github.com/users/zachlute/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zachlute/subscriptions", "organizations_url": "https://api.github.com/users/zachlute/orgs", "repos_url": "https://api.github.com/users/zachlute/repos", "events_url": "https://api.github.com/users/zachlute/events{/privacy}", "received_events_url": "https://api.github.com/users/zachlute/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8b87e85394aa583b01e53aef06343dd0749a3324", "url": "https://api.github.com/repos/rust-lang/rust/commits/8b87e85394aa583b01e53aef06343dd0749a3324", "html_url": "https://github.com/rust-lang/rust/commit/8b87e85394aa583b01e53aef06343dd0749a3324"}], "stats": {"total": 34, "additions": 19, "deletions": 15}, "files": [{"sha": "ec233a689ef8374f6b377790be32e5cda536e722", "filename": "src/librustdoc/lib.rs", "status": "modified", "additions": 15, "deletions": 15, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/5302539c98dafbe49f798ddd274c27686a2b7f6c/src%2Flibrustdoc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5302539c98dafbe49f798ddd274c27686a2b7f6c/src%2Flibrustdoc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Flib.rs?ref=5302539c98dafbe49f798ddd274c27686a2b7f6c", "patch": "@@ -269,9 +269,9 @@ fn opts() -> Vec<RustcOptGroup> {\n     let stable: fn(_, fn(&mut getopts::Options) -> &mut _) -> _ = RustcOptGroup::stable;\n     let unstable: fn(_, fn(&mut getopts::Options) -> &mut _) -> _ = RustcOptGroup::unstable;\n     vec![\n-        stable(\"h\", |o| o.optflag(\"h\", \"help\", \"show this help message\")),\n-        stable(\"V\", |o| o.optflag(\"V\", \"version\", \"print rustdoc's version\")),\n-        stable(\"v\", |o| o.optflag(\"v\", \"verbose\", \"use verbose output\")),\n+        stable(\"h\", |o| o.optflagmulti(\"h\", \"help\", \"show this help message\")),\n+        stable(\"V\", |o| o.optflagmulti(\"V\", \"version\", \"print rustdoc's version\")),\n+        stable(\"v\", |o| o.optflagmulti(\"v\", \"verbose\", \"use verbose output\")),\n         stable(\"r\", |o| {\n             o.optopt(\"r\", \"input-format\", \"the input type of the specified file\", \"[rust]\")\n         }),\n@@ -309,14 +309,14 @@ fn opts() -> Vec<RustcOptGroup> {\n             )\n         }),\n         stable(\"plugins\", |o| o.optmulti(\"\", \"plugins\", \"removed\", \"PLUGINS\")),\n-        stable(\"no-default\", |o| o.optflag(\"\", \"no-defaults\", \"don't run the default passes\")),\n+        stable(\"no-default\", |o| o.optflagmulti(\"\", \"no-defaults\", \"don't run the default passes\")),\n         stable(\"document-private-items\", |o| {\n-            o.optflag(\"\", \"document-private-items\", \"document private items\")\n+            o.optflagmulti(\"\", \"document-private-items\", \"document private items\")\n         }),\n         unstable(\"document-hidden-items\", |o| {\n-            o.optflag(\"\", \"document-hidden-items\", \"document items that have doc(hidden)\")\n+            o.optflagmulti(\"\", \"document-hidden-items\", \"document items that have doc(hidden)\")\n         }),\n-        stable(\"test\", |o| o.optflag(\"\", \"test\", \"run code examples as tests\")),\n+        stable(\"test\", |o| o.optflagmulti(\"\", \"test\", \"run code examples as tests\")),\n         stable(\"test-args\", |o| {\n             o.optmulti(\"\", \"test-args\", \"arguments to pass to the test runner\", \"ARGS\")\n         }),\n@@ -386,7 +386,7 @@ fn opts() -> Vec<RustcOptGroup> {\n             o.optopt(\"\", \"markdown-playground-url\", \"URL to send code snippets to\", \"URL\")\n         }),\n         stable(\"markdown-no-toc\", |o| {\n-            o.optflag(\"\", \"markdown-no-toc\", \"don't include table of contents\")\n+            o.optflagmulti(\"\", \"markdown-no-toc\", \"don't include table of contents\")\n         }),\n         stable(\"e\", |o| {\n             o.optopt(\n@@ -412,13 +412,13 @@ fn opts() -> Vec<RustcOptGroup> {\n             )\n         }),\n         unstable(\"display-warnings\", |o| {\n-            o.optflag(\"\", \"display-warnings\", \"to print code warnings when testing doc\")\n+            o.optflagmulti(\"\", \"display-warnings\", \"to print code warnings when testing doc\")\n         }),\n         stable(\"crate-version\", |o| {\n             o.optopt(\"\", \"crate-version\", \"crate version to print into documentation\", \"VERSION\")\n         }),\n         unstable(\"sort-modules-by-appearance\", |o| {\n-            o.optflag(\n+            o.optflagmulti(\n                 \"\",\n                 \"sort-modules-by-appearance\",\n                 \"sort modules by where they appear in the program, rather than alphabetically\",\n@@ -495,7 +495,7 @@ fn opts() -> Vec<RustcOptGroup> {\n             o.optopt(\"\", \"json\", \"Configure the structure of JSON diagnostics\", \"CONFIG\")\n         }),\n         unstable(\"disable-minification\", |o| {\n-            o.optflag(\"\", \"disable-minification\", \"Disable minification applied on JS files\")\n+            o.optflagmulti(\"\", \"disable-minification\", \"Disable minification applied on JS files\")\n         }),\n         stable(\"warn\", |o| o.optmulti(\"W\", \"warn\", \"Set lint warnings\", \"OPT\")),\n         stable(\"allow\", |o| o.optmulti(\"A\", \"allow\", \"Set lint allowed\", \"OPT\")),\n@@ -523,7 +523,7 @@ fn opts() -> Vec<RustcOptGroup> {\n             o.optopt(\"\", \"index-page\", \"Markdown file to be used as index page\", \"PATH\")\n         }),\n         unstable(\"enable-index-page\", |o| {\n-            o.optflag(\"\", \"enable-index-page\", \"To enable generation of the index page\")\n+            o.optflagmulti(\"\", \"enable-index-page\", \"To enable generation of the index page\")\n         }),\n         unstable(\"static-root-path\", |o| {\n             o.optopt(\n@@ -535,7 +535,7 @@ fn opts() -> Vec<RustcOptGroup> {\n             )\n         }),\n         unstable(\"disable-per-crate-search\", |o| {\n-            o.optflag(\n+            o.optflagmulti(\n                 \"\",\n                 \"disable-per-crate-search\",\n                 \"disables generating the crate selector on the search box\",\n@@ -550,14 +550,14 @@ fn opts() -> Vec<RustcOptGroup> {\n             )\n         }),\n         unstable(\"show-coverage\", |o| {\n-            o.optflag(\n+            o.optflagmulti(\n                 \"\",\n                 \"show-coverage\",\n                 \"calculate percentage of public items with documentation\",\n             )\n         }),\n         unstable(\"enable-per-target-ignores\", |o| {\n-            o.optflag(\n+            o.optflagmulti(\n                 \"\",\n                 \"enable-per-target-ignores\",\n                 \"parse ignore-foo for ignoring doctests on a per-target basis\","}, {"sha": "dde36df2cf50eb7fe5ff19dc460eee08f3e72581", "filename": "src/test/rustdoc/duplicate-flags.rs", "status": "added", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/5302539c98dafbe49f798ddd274c27686a2b7f6c/src%2Ftest%2Frustdoc%2Fduplicate-flags.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5302539c98dafbe49f798ddd274c27686a2b7f6c/src%2Ftest%2Frustdoc%2Fduplicate-flags.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fduplicate-flags.rs?ref=5302539c98dafbe49f798ddd274c27686a2b7f6c", "patch": "@@ -0,0 +1,4 @@\n+// compile-flags: --document-private-items --document-private-items\n+\n+// @has duplicate_flags/struct.Private.html\n+struct Private;"}]}