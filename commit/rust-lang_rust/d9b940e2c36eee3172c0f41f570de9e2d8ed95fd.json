{"sha": "d9b940e2c36eee3172c0f41f570de9e2d8ed95fd", "node_id": "C_kwDOAAsO6NoAKGQ5Yjk0MGUyYzM2ZWVlMzE3MmMwZjQxZjU3MGRlOWUyZDhlZDk1ZmQ", "commit": {"author": {"name": "kraktus", "email": "kraktus@users.noreply.github.com", "date": "2022-10-23T14:03:05Z"}, "committer": {"name": "kraktus", "email": "kraktus@users.noreply.github.com", "date": "2022-11-07T18:49:43Z"}, "message": "dogfood", "tree": {"sha": "a2ee0751d2d79f699ab6c069e5d4a0f86f42f009", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a2ee0751d2d79f699ab6c069e5d4a0f86f42f009"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d9b940e2c36eee3172c0f41f570de9e2d8ed95fd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d9b940e2c36eee3172c0f41f570de9e2d8ed95fd", "html_url": "https://github.com/rust-lang/rust/commit/d9b940e2c36eee3172c0f41f570de9e2d8ed95fd", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d9b940e2c36eee3172c0f41f570de9e2d8ed95fd/comments", "author": {"login": "kraktus", "id": 56031107, "node_id": "MDQ6VXNlcjU2MDMxMTA3", "avatar_url": "https://avatars.githubusercontent.com/u/56031107?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kraktus", "html_url": "https://github.com/kraktus", "followers_url": "https://api.github.com/users/kraktus/followers", "following_url": "https://api.github.com/users/kraktus/following{/other_user}", "gists_url": "https://api.github.com/users/kraktus/gists{/gist_id}", "starred_url": "https://api.github.com/users/kraktus/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kraktus/subscriptions", "organizations_url": "https://api.github.com/users/kraktus/orgs", "repos_url": "https://api.github.com/users/kraktus/repos", "events_url": "https://api.github.com/users/kraktus/events{/privacy}", "received_events_url": "https://api.github.com/users/kraktus/received_events", "type": "User", "site_admin": false}, "committer": {"login": "kraktus", "id": 56031107, "node_id": "MDQ6VXNlcjU2MDMxMTA3", "avatar_url": "https://avatars.githubusercontent.com/u/56031107?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kraktus", "html_url": "https://github.com/kraktus", "followers_url": "https://api.github.com/users/kraktus/followers", "following_url": "https://api.github.com/users/kraktus/following{/other_user}", "gists_url": "https://api.github.com/users/kraktus/gists{/gist_id}", "starred_url": "https://api.github.com/users/kraktus/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kraktus/subscriptions", "organizations_url": "https://api.github.com/users/kraktus/orgs", "repos_url": "https://api.github.com/users/kraktus/repos", "events_url": "https://api.github.com/users/kraktus/events{/privacy}", "received_events_url": "https://api.github.com/users/kraktus/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e8c2c3d1c6ac27d0f1fa9125b79f1f927a59cfcf", "url": "https://api.github.com/repos/rust-lang/rust/commits/e8c2c3d1c6ac27d0f1fa9125b79f1f927a59cfcf", "html_url": "https://github.com/rust-lang/rust/commit/e8c2c3d1c6ac27d0f1fa9125b79f1f927a59cfcf"}], "stats": {"total": 6, "additions": 3, "deletions": 3}, "files": [{"sha": "281d0631d06a0435e7aa71be73ff2d143d50e659", "filename": "clippy_lints/src/excessive_bools.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/d9b940e2c36eee3172c0f41f570de9e2d8ed95fd/clippy_lints%2Fsrc%2Fexcessive_bools.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d9b940e2c36eee3172c0f41f570de9e2d8ed95fd/clippy_lints%2Fsrc%2Fexcessive_bools.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fexcessive_bools.rs?ref=d9b940e2c36eee3172c0f41f570de9e2d8ed95fd", "patch": "@@ -86,7 +86,7 @@ pub struct ExcessiveBools {\n     max_fn_params_bools: u64,\n }\n \n-#[derive(Eq, PartialEq, Debug)]\n+#[derive(Eq, PartialEq, Debug, Copy, Clone)]\n enum Kind {\n     Struct,\n     Fn,\n@@ -147,7 +147,7 @@ impl<'tcx> LateLintPass<'tcx> for ExcessiveBools {\n                     &format!(\"more than {} bools in a struct\", self.max_struct_bools),\n                     None,\n                     \"consider using a state machine or refactoring bools into two-variant enums\",\n-                )\n+                );\n             }\n         }\n     }\n@@ -164,7 +164,7 @@ impl<'tcx> LateLintPass<'tcx> for ExcessiveBools {\n         if let Some(fn_header) = fn_kind.header()\n             && fn_header.abi == Abi::Rust\n             && !span.from_expansion() {\n-            self.check_fn_sig(cx, fn_decl, span)\n+            self.check_fn_sig(cx, fn_decl, span);\n         }\n     }\n }"}]}