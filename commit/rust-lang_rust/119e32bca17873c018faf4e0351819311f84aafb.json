{"sha": "119e32bca17873c018faf4e0351819311f84aafb", "node_id": "MDY6Q29tbWl0NzI0NzEyOjExOWUzMmJjYTE3ODczYzAxOGZhZjRlMDM1MTgxOTMxMWY4NGFhZmI=", "commit": {"author": {"name": "Dylan DPC", "email": "dylan.dpc@gmail.com", "date": "2020-04-14T21:29:55Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-04-14T21:29:55Z"}, "message": "Rollup merge of #71002 - Freax13:fix-target, r=ollie27\n\nfix target & runtool args order\n\n- `TargetTripple::to_string` converts \"path triples\" to `<target>-<hash>`, but in this case we need the path. Afaict there is no method to get the real triple other than manually matching\n- the order of the runtools arguments is inconsistent with the way tests usually pass arguments ie using `runner` key in `.cargo/config`", "tree": {"sha": "7a92b05cd5e2506f47b8d10b199106d09ced8a9a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7a92b05cd5e2506f47b8d10b199106d09ced8a9a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/119e32bca17873c018faf4e0351819311f84aafb", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJelitTCRBK7hj4Ov3rIwAAdHIIAHmtXF0xofop0G/G0yzZ21Ma\ntWjP16b2JD3oCtnEbMKoErpNUOHVTRdm96W2vhZ60VPJWlZhcbEwvKsNHOJCaF6+\nWCKB1UaWcumo18Vf7CjEKTGInTvFkULG81udlAU96Wp6WcDc/gBHUaApel3WVLtO\nsWgWNfZKzKLyEb/IVzGru6ek1DXcIf/OlyRULhdvppQ5EH5oP9OgbtV3/oRLfu/N\ne5hlOfKC4gLaAPunoEucXSP04x9wV5Hr+0qsUIbSrcxZXZJ1VNZJNTTSrKYjefZs\nPWXv2mVlcVxuDDtHshjrsM/OXE9BnkYrugMBK0UjngTrk9Ht9cQ6ZoiJ3hBXbsw=\n=kQ2r\n-----END PGP SIGNATURE-----\n", "payload": "tree 7a92b05cd5e2506f47b8d10b199106d09ced8a9a\nparent e2f24230a23cb6074c26a6a4b6546cb10740fb84\nparent 54b5d30f2981736156e75d49e39632875dad5f73\nauthor Dylan DPC <dylan.dpc@gmail.com> 1586899795 +0200\ncommitter GitHub <noreply@github.com> 1586899795 +0200\n\nRollup merge of #71002 - Freax13:fix-target, r=ollie27\n\nfix target & runtool args order\n\n- `TargetTripple::to_string` converts \"path triples\" to `<target>-<hash>`, but in this case we need the path. Afaict there is no method to get the real triple other than manually matching\n- the order of the runtools arguments is inconsistent with the way tests usually pass arguments ie using `runner` key in `.cargo/config`\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/119e32bca17873c018faf4e0351819311f84aafb", "html_url": "https://github.com/rust-lang/rust/commit/119e32bca17873c018faf4e0351819311f84aafb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/119e32bca17873c018faf4e0351819311f84aafb/comments", "author": {"login": "Dylan-DPC", "id": 99973273, "node_id": "U_kgDOBfV4mQ", "avatar_url": "https://avatars.githubusercontent.com/u/99973273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dylan-DPC", "html_url": "https://github.com/Dylan-DPC", "followers_url": "https://api.github.com/users/Dylan-DPC/followers", "following_url": "https://api.github.com/users/Dylan-DPC/following{/other_user}", "gists_url": "https://api.github.com/users/Dylan-DPC/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dylan-DPC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dylan-DPC/subscriptions", "organizations_url": "https://api.github.com/users/Dylan-DPC/orgs", "repos_url": "https://api.github.com/users/Dylan-DPC/repos", "events_url": "https://api.github.com/users/Dylan-DPC/events{/privacy}", "received_events_url": "https://api.github.com/users/Dylan-DPC/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e2f24230a23cb6074c26a6a4b6546cb10740fb84", "url": "https://api.github.com/repos/rust-lang/rust/commits/e2f24230a23cb6074c26a6a4b6546cb10740fb84", "html_url": "https://github.com/rust-lang/rust/commit/e2f24230a23cb6074c26a6a4b6546cb10740fb84"}, {"sha": "54b5d30f2981736156e75d49e39632875dad5f73", "url": "https://api.github.com/repos/rust-lang/rust/commits/54b5d30f2981736156e75d49e39632875dad5f73", "html_url": "https://github.com/rust-lang/rust/commit/54b5d30f2981736156e75d49e39632875dad5f73"}], "stats": {"total": 9, "additions": 7, "deletions": 2}, "files": [{"sha": "fbbe172afb81f2abded48c31bf56b96899641f6a", "filename": "src/librustdoc/test.rs", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/119e32bca17873c018faf4e0351819311f84aafb/src%2Flibrustdoc%2Ftest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/119e32bca17873c018faf4e0351819311f84aafb/src%2Flibrustdoc%2Ftest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Ftest.rs?ref=119e32bca17873c018faf4e0351819311f84aafb", "patch": "@@ -263,7 +263,12 @@ fn run_test(\n     if no_run && !compile_fail {\n         compiler.arg(\"--emit=metadata\");\n     }\n-    compiler.arg(\"--target\").arg(target.to_string());\n+    compiler.arg(\"--target\").arg(match target {\n+        TargetTriple::TargetTriple(s) => s,\n+        TargetTriple::TargetPath(path) => {\n+            path.to_str().expect(\"target path must be valid unicode\").to_string()\n+        }\n+    });\n \n     compiler.arg(\"-\");\n     compiler.stdin(Stdio::piped());\n@@ -312,8 +317,8 @@ fn run_test(\n \n     if let Some(tool) = runtool {\n         cmd = Command::new(tool);\n-        cmd.arg(output_file);\n         cmd.args(runtool_args);\n+        cmd.arg(output_file);\n     } else {\n         cmd = Command::new(output_file);\n     }"}]}