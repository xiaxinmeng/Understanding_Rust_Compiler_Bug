{"sha": "93c85eb8bdcc910a27caf6abd20207a626ae98e5", "node_id": "MDY6Q29tbWl0NzI0NzEyOjkzYzg1ZWI4YmRjYzkxMGEyN2NhZjZhYmQyMDIwN2E2MjZhZTk4ZTU=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2014-11-08T23:56:39Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2014-11-08T23:56:39Z"}, "message": "auto merge of #18730 : bkoropoff/rust/issue-18652, r=eddyb\n\n`FnOnce` environments that fit within an `int` are passed to the closure by value.  For some reason there was an assert that this would only happen if there were 1 or 0 free variables, but it can also happen if there are multiple variables that happen to fit.\r\n\r\nCloses #18652", "tree": {"sha": "fa8c54d2988a71a15ccd3218d4be8f84d356bb49", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fa8c54d2988a71a15ccd3218d4be8f84d356bb49"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/93c85eb8bdcc910a27caf6abd20207a626ae98e5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/93c85eb8bdcc910a27caf6abd20207a626ae98e5", "html_url": "https://github.com/rust-lang/rust/commit/93c85eb8bdcc910a27caf6abd20207a626ae98e5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/93c85eb8bdcc910a27caf6abd20207a626ae98e5/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f0ca717c643cbef31859e443ee20db4465ac8864", "url": "https://api.github.com/repos/rust-lang/rust/commits/f0ca717c643cbef31859e443ee20db4465ac8864", "html_url": "https://github.com/rust-lang/rust/commit/f0ca717c643cbef31859e443ee20db4465ac8864"}, {"sha": "2c956d0abfa8cc169fc2c2ab5343b77b20397817", "url": "https://api.github.com/repos/rust-lang/rust/commits/2c956d0abfa8cc169fc2c2ab5343b77b20397817", "html_url": "https://github.com/rust-lang/rust/commit/2c956d0abfa8cc169fc2c2ab5343b77b20397817"}], "stats": {"total": 22, "additions": 21, "deletions": 1}, "files": [{"sha": "9b710f5eabd6f135176e5083765cac3e03fd8b8e", "filename": "src/librustc/middle/trans/closure.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/93c85eb8bdcc910a27caf6abd20207a626ae98e5/src%2Flibrustc%2Fmiddle%2Ftrans%2Fclosure.rs", "raw_url": "https://github.com/rust-lang/rust/raw/93c85eb8bdcc910a27caf6abd20207a626ae98e5/src%2Flibrustc%2Fmiddle%2Ftrans%2Fclosure.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftrans%2Fclosure.rs?ref=93c85eb8bdcc910a27caf6abd20207a626ae98e5", "patch": "@@ -323,7 +323,6 @@ fn load_unboxed_closure_environment<'blk, 'tcx>(\n                                          self_type,\n                                          \"unboxed_closure_env\");\n         store_ty(bcx, bcx.fcx.llenv.unwrap(), datum.val, self_type);\n-        assert!(freevars.len() <= 1);\n         datum.val\n     } else {\n         bcx.fcx.llenv.unwrap()"}, {"sha": "5ca091000608b5ee3f6ba5ff86ce078b01b10a18", "filename": "src/test/run-pass/issue-18652.rs", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/93c85eb8bdcc910a27caf6abd20207a626ae98e5/src%2Ftest%2Frun-pass%2Fissue-18652.rs", "raw_url": "https://github.com/rust-lang/rust/raw/93c85eb8bdcc910a27caf6abd20207a626ae98e5/src%2Ftest%2Frun-pass%2Fissue-18652.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-18652.rs?ref=93c85eb8bdcc910a27caf6abd20207a626ae98e5", "patch": "@@ -0,0 +1,21 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// Tests multiple free variables being passed by value into an unboxed\n+// once closure as an optimization by trans.  This used to hit an\n+// incorrect assert.\n+\n+#![feature(unboxed_closures, overloaded_calls)]\n+\n+fn main() {\n+    let x = 2u8;\n+    let y = 3u8;\n+    assert_eq!((move |:| x + y)(), 5);\n+}"}]}