{"sha": "f4f057ced1f4152575571a6e5116e1ad5bb38beb", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY0ZjA1N2NlZDFmNDE1MjU3NTU3MWE2ZTUxMTZlMWFkNWJiMzhiZWI=", "commit": {"author": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2011-08-08T23:51:32Z"}, "committer": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2011-08-08T23:52:11Z"}, "message": "rt: Compare the insides of boxes", "tree": {"sha": "291713b7020532a580d65fbd94e5fc3c373c811a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/291713b7020532a580d65fbd94e5fc3c373c811a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f4f057ced1f4152575571a6e5116e1ad5bb38beb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f4f057ced1f4152575571a6e5116e1ad5bb38beb", "html_url": "https://github.com/rust-lang/rust/commit/f4f057ced1f4152575571a6e5116e1ad5bb38beb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f4f057ced1f4152575571a6e5116e1ad5bb38beb/comments", "author": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "72fdb1a3bfcf1017a14cb606c8c145bf3355e2db", "url": "https://api.github.com/repos/rust-lang/rust/commits/72fdb1a3bfcf1017a14cb606c8c145bf3355e2db", "html_url": "https://github.com/rust-lang/rust/commit/72fdb1a3bfcf1017a14cb606c8c145bf3355e2db"}], "stats": {"total": 38, "additions": 32, "deletions": 6}, "files": [{"sha": "551cf547a2ea6830ef6aa787cae364eeb1c376ad", "filename": "src/rt/rust_shape.cpp", "status": "modified", "additions": 32, "deletions": 6, "changes": 38, "blob_url": "https://github.com/rust-lang/rust/blob/f4f057ced1f4152575571a6e5116e1ad5bb38beb/src%2Frt%2Frust_shape.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/f4f057ced1f4152575571a6e5116e1ad5bb38beb/src%2Frt%2Frust_shape.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frust_shape.cpp?ref=f4f057ced1f4152575571a6e5116e1ad5bb38beb", "patch": "@@ -175,6 +175,11 @@ class ptr_pair {\n         ptr_pair self(fst, snd);\n         return self;\n     }\n+\n+    static inline ptr_pair make(const data_pair<uint8_t *> &pair) {\n+        ptr_pair self(pair.fst, pair.snd);\n+        return self;\n+    }\n };\n \n inline ptr_pair\n@@ -812,11 +817,7 @@ class data : public ctxt< data<T,U> > {\n     void walk_ivec(bool align, bool is_pod, size_align &elem_sa);\n \n     void walk_struct(bool align, const uint8_t *end_sp) {\n-        while (this->sp != end_sp) {\n-            // TODO: Allow subclasses to optimize for POD if they want to.\n-            this->walk(align);\n-            align = true;\n-        }\n+        static_cast<T *>(this)->walk_struct(align, end_sp);\n     }\n \n     void walk_evec(bool align, bool is_pod, uint16_t sp_size) {\n@@ -921,8 +922,16 @@ class cmp : public data<cmp,ptr_pair> {\n         uint8_t *in_data_0,\n         uint8_t *in_data_1)\n     : data<cmp,ptr_pair>(in_task, in_sp, in_params, in_tables,\n-                         ptr_pair::make(in_data_0, in_data_1)) {}\n+                         ptr_pair::make(in_data_0, in_data_1)),\n+      result(0) {}\n \n+    cmp(const cmp &other, const ptr_pair &in_dp)\n+    : data<cmp,ptr_pair>(other.task, other.sp, other.params, other.tables,\n+                         in_dp),\n+      result(0) {}\n+\n+    void walk_box(bool align);\n+    void walk_struct(bool align, const uint8_t *end_sp);\n     void walk_tag(bool align, tag_info &tinfo,\n                   data_pair<uint32_t> &tag_variants);\n     void walk_res(bool align, const rust_fn *dtor, uint16_t n_ty_params,\n@@ -932,6 +941,23 @@ class cmp : public data<cmp,ptr_pair> {\n     void walk_number() { result = cmp_number<T>(dp); }\n };\n \n+void\n+cmp::walk_box(bool align) {\n+    data_pair<uint8_t *> subdp = bump_dp<uint8_t *>(dp);\n+    cmp subcx(*this, ptr_pair::make(subdp));\n+    subcx.dp += sizeof(uint32_t);   // Skip over the reference count.\n+    subcx.walk(false);\n+    result = subcx.result;\n+}\n+\n+void\n+cmp::walk_struct(bool align, const uint8_t *end_sp) {\n+    while (!result && this->sp != end_sp) {\n+        this->walk(align);\n+        align = true;\n+    }\n+}\n+\n void\n cmp::walk_tag(bool align, tag_info &tinfo,\n               data_pair<uint32_t> &tag_variants) {"}]}