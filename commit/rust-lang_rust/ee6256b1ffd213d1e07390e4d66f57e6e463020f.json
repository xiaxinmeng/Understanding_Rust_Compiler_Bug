{"sha": "ee6256b1ffd213d1e07390e4d66f57e6e463020f", "node_id": "MDY6Q29tbWl0NzI0NzEyOmVlNjI1NmIxZmZkMjEzZDFlMDczOTBlNGQ2NmY1N2U2ZTQ2MzAyMGY=", "commit": {"author": {"name": "est31", "email": "MTest31@outlook.com", "date": "2016-12-22T11:06:30Z"}, "committer": {"name": "est31", "email": "MTest31@outlook.com", "date": "2016-12-30T14:17:30Z"}, "message": "More windows fixes", "tree": {"sha": "4149f24c5672bfa6daf05402744366adbbda51c2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4149f24c5672bfa6daf05402744366adbbda51c2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ee6256b1ffd213d1e07390e4d66f57e6e463020f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ee6256b1ffd213d1e07390e4d66f57e6e463020f", "html_url": "https://github.com/rust-lang/rust/commit/ee6256b1ffd213d1e07390e4d66f57e6e463020f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ee6256b1ffd213d1e07390e4d66f57e6e463020f/comments", "author": {"login": "est31", "id": 8872119, "node_id": "MDQ6VXNlcjg4NzIxMTk=", "avatar_url": "https://avatars.githubusercontent.com/u/8872119?v=4", "gravatar_id": "", "url": "https://api.github.com/users/est31", "html_url": "https://github.com/est31", "followers_url": "https://api.github.com/users/est31/followers", "following_url": "https://api.github.com/users/est31/following{/other_user}", "gists_url": "https://api.github.com/users/est31/gists{/gist_id}", "starred_url": "https://api.github.com/users/est31/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/est31/subscriptions", "organizations_url": "https://api.github.com/users/est31/orgs", "repos_url": "https://api.github.com/users/est31/repos", "events_url": "https://api.github.com/users/est31/events{/privacy}", "received_events_url": "https://api.github.com/users/est31/received_events", "type": "User", "site_admin": false}, "committer": {"login": "est31", "id": 8872119, "node_id": "MDQ6VXNlcjg4NzIxMTk=", "avatar_url": "https://avatars.githubusercontent.com/u/8872119?v=4", "gravatar_id": "", "url": "https://api.github.com/users/est31", "html_url": "https://github.com/est31", "followers_url": "https://api.github.com/users/est31/followers", "following_url": "https://api.github.com/users/est31/following{/other_user}", "gists_url": "https://api.github.com/users/est31/gists{/gist_id}", "starred_url": "https://api.github.com/users/est31/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/est31/subscriptions", "organizations_url": "https://api.github.com/users/est31/orgs", "repos_url": "https://api.github.com/users/est31/repos", "events_url": "https://api.github.com/users/est31/events{/privacy}", "received_events_url": "https://api.github.com/users/est31/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9842d27e9cbb95fc3472cf17a2696d864acf0a8c", "url": "https://api.github.com/repos/rust-lang/rust/commits/9842d27e9cbb95fc3472cf17a2696d864acf0a8c", "html_url": "https://github.com/rust-lang/rust/commit/9842d27e9cbb95fc3472cf17a2696d864acf0a8c"}], "stats": {"total": 22, "additions": 15, "deletions": 7}, "files": [{"sha": "1c625ea985599fceb9d25f6b15ef820a6bbff3ee", "filename": "src/libcompiler_builtins/lib.rs", "status": "modified", "additions": 15, "deletions": 7, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/ee6256b1ffd213d1e07390e4d66f57e6e463020f/src%2Flibcompiler_builtins%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ee6256b1ffd213d1e07390e4d66f57e6e463020f/src%2Flibcompiler_builtins%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcompiler_builtins%2Flib.rs?ref=ee6256b1ffd213d1e07390e4d66f57e6e463020f", "patch": "@@ -378,21 +378,21 @@ pub mod reimpls {\n                 if b != 0 && b != 1 {\n                     *overflow = 1;\n                 }\n-                return result.to_ret();\n+                return result;\n             }\n             if b == <$ty>::min_value() {\n                 if a != 0 && a != 1 {\n                     *overflow = 1;\n                 }\n-                return result.to_ret();\n+                return result;\n             }\n \n             let sa = a.signum();\n             let abs_a = a.iabs();\n             let sb = b.signum();\n             let abs_b = b.iabs();\n             if abs_a < 2 || abs_b < 2 {\n-                return result.to_ret();\n+                return result;\n             }\n             unsafe {\n             if sa == sb {\n@@ -405,13 +405,14 @@ pub mod reimpls {\n                 }\n             }\n             }\n-            result.to_ret()\n+            result\n         }}\n     }\n \n     // FIXME: i32 here should be c_int.\n-    #[export_name=\"__muloti4\"]\n-    pub extern \"C\" fn i128_mul_oflow(a: i128_, b: i128_, o: &mut i32) -> i128ret {\n+    #[cfg_attr(not(all(windows, target_pointer_width=\"64\", not(stage0))),\n+               export_name=\"__muloti4\")]\n+    pub extern \"C\" fn i128_mul_oflow(a: i128_, b: i128_, o: &mut i32) -> i128 {\n         mulo!(a, b, o, i128_)\n     }\n \n@@ -696,7 +697,14 @@ pub mod reimpls {\n     #[cfg(all(windows, target_pointer_width=\"64\"))]\n     mod windows_64_workarounds {\n         use super::{i128_, u128_, LargeInt};\n-        use super::{i128_as_f64, i128_as_f32, u128_as_f64, u128_as_f32};\n+        use super::{i128_as_f64, i128_as_f32, u128_as_f64, u128_as_f32, i128_mul_oflow};\n+\n+        #[export_name=\"__muloti4\"]\n+        pub extern \"C\" fn i128_mul_oflow_win(alow: u64, ahigh: i64,\n+                                             blow: u64, bhigh: i64, o: &mut i32) -> i128 {\n+            i128_mul_oflow(i128_::from_parts(alow, ahigh), i128_::from_parts(blow, bhigh), o)\n+        }\n+\n         #[export_name=\"__floattidf\"]\n         pub extern \"C\" fn i128_as_f64_win(alow: u64, ahigh: i64) -> f64 {\n             i128_as_f64(i128_::from_parts(alow, ahigh))"}]}