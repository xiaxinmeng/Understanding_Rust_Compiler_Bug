{"sha": "41e7ac16c48381321ab7af2a7a89ef0914c98470", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQxZTdhYzE2YzQ4MzgxMzIxYWI3YWYyYTdhODllZjA5MTRjOTg0NzA=", "commit": {"author": {"name": "QuietMisdreavus", "email": "grey@quietmisdreavus.net", "date": "2018-07-10T00:11:06Z"}, "committer": {"name": "QuietMisdreavus", "email": "grey@quietmisdreavus.net", "date": "2018-07-20T15:13:38Z"}, "message": "report doctest compile failures correctly", "tree": {"sha": "ab6ede7472864bf120b9271d0998732d022db840", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ab6ede7472864bf120b9271d0998732d022db840"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/41e7ac16c48381321ab7af2a7a89ef0914c98470", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/41e7ac16c48381321ab7af2a7a89ef0914c98470", "html_url": "https://github.com/rust-lang/rust/commit/41e7ac16c48381321ab7af2a7a89ef0914c98470", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/41e7ac16c48381321ab7af2a7a89ef0914c98470/comments", "author": {"login": "QuietMisdreavus", "id": 5217170, "node_id": "MDQ6VXNlcjUyMTcxNzA=", "avatar_url": "https://avatars.githubusercontent.com/u/5217170?v=4", "gravatar_id": "", "url": "https://api.github.com/users/QuietMisdreavus", "html_url": "https://github.com/QuietMisdreavus", "followers_url": "https://api.github.com/users/QuietMisdreavus/followers", "following_url": "https://api.github.com/users/QuietMisdreavus/following{/other_user}", "gists_url": "https://api.github.com/users/QuietMisdreavus/gists{/gist_id}", "starred_url": "https://api.github.com/users/QuietMisdreavus/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/QuietMisdreavus/subscriptions", "organizations_url": "https://api.github.com/users/QuietMisdreavus/orgs", "repos_url": "https://api.github.com/users/QuietMisdreavus/repos", "events_url": "https://api.github.com/users/QuietMisdreavus/events{/privacy}", "received_events_url": "https://api.github.com/users/QuietMisdreavus/received_events", "type": "User", "site_admin": false}, "committer": {"login": "QuietMisdreavus", "id": 5217170, "node_id": "MDQ6VXNlcjUyMTcxNzA=", "avatar_url": "https://avatars.githubusercontent.com/u/5217170?v=4", "gravatar_id": "", "url": "https://api.github.com/users/QuietMisdreavus", "html_url": "https://github.com/QuietMisdreavus", "followers_url": "https://api.github.com/users/QuietMisdreavus/followers", "following_url": "https://api.github.com/users/QuietMisdreavus/following{/other_user}", "gists_url": "https://api.github.com/users/QuietMisdreavus/gists{/gist_id}", "starred_url": "https://api.github.com/users/QuietMisdreavus/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/QuietMisdreavus/subscriptions", "organizations_url": "https://api.github.com/users/QuietMisdreavus/orgs", "repos_url": "https://api.github.com/users/QuietMisdreavus/repos", "events_url": "https://api.github.com/users/QuietMisdreavus/events{/privacy}", "received_events_url": "https://api.github.com/users/QuietMisdreavus/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "33654195a101ae78c9601355bc310e45a87f5e03", "url": "https://api.github.com/repos/rust-lang/rust/commits/33654195a101ae78c9601355bc310e45a87f5e03", "html_url": "https://github.com/rust-lang/rust/commit/33654195a101ae78c9601355bc310e45a87f5e03"}], "stats": {"total": 60, "additions": 38, "deletions": 22}, "files": [{"sha": "c7d2e52e620d710e6c3c5ecbd2eba552e34d86e1", "filename": "src/librustdoc/test.rs", "status": "modified", "additions": 19, "deletions": 19, "changes": 38, "blob_url": "https://github.com/rust-lang/rust/blob/41e7ac16c48381321ab7af2a7a89ef0914c98470/src%2Flibrustdoc%2Ftest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/41e7ac16c48381321ab7af2a7a89ef0914c98470/src%2Flibrustdoc%2Ftest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Ftest.rs?ref=41e7ac16c48381321ab7af2a7a89ef0914c98470", "patch": "@@ -260,7 +260,7 @@ fn run_test(test: &str, cratename: &str, filename: &FileName, line: usize,\n     let old = io::set_panic(Some(box Sink(data.clone())));\n     let _bomb = Bomb(data.clone(), old.unwrap_or(box io::stdout()));\n \n-    let (libdir, outdir) = driver::spawn_thread_pool(sessopts, |sessopts| {\n+    let (libdir, outdir, compile_result) = driver::spawn_thread_pool(sessopts, |sessopts| {\n         let codemap = Lrc::new(CodeMap::new_doctest(\n             sessopts.file_path_mapping(), filename.clone(), line as isize - line_offset as isize\n         ));\n@@ -314,28 +314,28 @@ fn run_test(test: &str, cratename: &str, filename: &FileName, line: usize,\n             Err(_) | Ok(Err(CompileIncomplete::Errored(_))) => Err(())\n         };\n \n-        match (compile_result, compile_fail) {\n-            (Ok(()), true) => {\n-                panic!(\"test compiled while it wasn't supposed to\")\n-            }\n-            (Ok(()), false) => {}\n-            (Err(()), true) => {\n-                if error_codes.len() > 0 {\n-                    let out = String::from_utf8(data.lock().unwrap().to_vec()).unwrap();\n-                    error_codes.retain(|err| !out.contains(err));\n-                }\n-            }\n-            (Err(()), false) => {\n-                panic!(\"couldn't compile the test\")\n+        (libdir, outdir, compile_result)\n+    });\n+\n+    match (compile_result, compile_fail) {\n+        (Ok(()), true) => {\n+            panic!(\"test compiled while it wasn't supposed to\")\n+        }\n+        (Ok(()), false) => {}\n+        (Err(()), true) => {\n+            if error_codes.len() > 0 {\n+                let out = String::from_utf8(data.lock().unwrap().to_vec()).unwrap();\n+                error_codes.retain(|err| !out.contains(err));\n             }\n         }\n-\n-        if error_codes.len() > 0 {\n-            panic!(\"Some expected error codes were not found: {:?}\", error_codes);\n+        (Err(()), false) => {\n+            panic!(\"couldn't compile the test\")\n         }\n+    }\n \n-        (libdir, outdir)\n-    });\n+    if error_codes.len() > 0 {\n+        panic!(\"Some expected error codes were not found: {:?}\", error_codes);\n+    }\n \n     if no_run { return }\n "}, {"sha": "21d3d94714abb998125e856ec8a9166bc379f078", "filename": "src/test/rustdoc-ui/failed-doctest-output.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/41e7ac16c48381321ab7af2a7a89ef0914c98470/src%2Ftest%2Frustdoc-ui%2Ffailed-doctest-output.rs", "raw_url": "https://github.com/rust-lang/rust/raw/41e7ac16c48381321ab7af2a7a89ef0914c98470/src%2Ftest%2Frustdoc-ui%2Ffailed-doctest-output.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-ui%2Ffailed-doctest-output.rs?ref=41e7ac16c48381321ab7af2a7a89ef0914c98470", "patch": "@@ -17,3 +17,8 @@\n /// panic!(\"oh no\");\n /// ```\n pub struct SomeStruct;\n+\n+/// ```\n+/// no\n+/// ```\n+pub struct OtherStruct;"}, {"sha": "08522d80225d1a071bedb666043a7db0d9e6e68a", "filename": "src/test/rustdoc-ui/failed-doctest-output.stdout", "status": "modified", "additions": 14, "deletions": 3, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/41e7ac16c48381321ab7af2a7a89ef0914c98470/src%2Ftest%2Frustdoc-ui%2Ffailed-doctest-output.stdout", "raw_url": "https://github.com/rust-lang/rust/raw/41e7ac16c48381321ab7af2a7a89ef0914c98470/src%2Ftest%2Frustdoc-ui%2Ffailed-doctest-output.stdout", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-ui%2Ffailed-doctest-output.stdout?ref=41e7ac16c48381321ab7af2a7a89ef0914c98470", "patch": "@@ -1,21 +1,32 @@\n \n-running 1 test\n+running 2 tests\n+test src/test/rustdoc-ui/failed-doctest-output.rs - OtherStruct (line 21) ... FAILED\n test src/test/rustdoc-ui/failed-doctest-output.rs - SomeStruct (line 16) ... FAILED\n \n failures:\n \n+---- src/test/rustdoc-ui/failed-doctest-output.rs - OtherStruct (line 21) stdout ----\n+error[E0425]: cannot find value `no` in this scope\n+ --> src/test/rustdoc-ui/failed-doctest-output.rs:22:1\n+  |\n+3 | no\n+  | ^^ not found in this scope\n+\n+thread 'src/test/rustdoc-ui/failed-doctest-output.rs - OtherStruct (line 21)' panicked at 'couldn't compile the test', librustdoc/test.rs:332:13\n+note: Run with `RUST_BACKTRACE=1` for a backtrace.\n+\n ---- src/test/rustdoc-ui/failed-doctest-output.rs - SomeStruct (line 16) stdout ----\n thread 'src/test/rustdoc-ui/failed-doctest-output.rs - SomeStruct (line 16)' panicked at 'test executable failed:\n \n thread 'main' panicked at 'oh no', src/test/rustdoc-ui/failed-doctest-output.rs:3:1\n note: Run with `RUST_BACKTRACE=1` for a backtrace.\n \n ', librustdoc/test.rs:367:17\n-note: Run with `RUST_BACKTRACE=1` for a backtrace.\n \n \n failures:\n+    src/test/rustdoc-ui/failed-doctest-output.rs - OtherStruct (line 21)\n     src/test/rustdoc-ui/failed-doctest-output.rs - SomeStruct (line 16)\n \n-test result: FAILED. 0 passed; 1 failed; 0 ignored; 0 measured; 0 filtered out\n+test result: FAILED. 0 passed; 2 failed; 0 ignored; 0 measured; 0 filtered out\n "}]}