{"sha": "c4c73e09f1a25c8a9d9c69a3243d9342037fed73", "node_id": "MDY6Q29tbWl0NzI0NzEyOmM0YzczZTA5ZjFhMjVjOGE5ZDljNjlhMzI0M2Q5MzQyMDM3ZmVkNzM=", "commit": {"author": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2010-09-16T19:17:56Z"}, "committer": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2010-09-16T19:34:07Z"}, "message": "Add a pexp-rebuild phase to the type resolution pass in resolve.ml.", "tree": {"sha": "9d0a0af1e32298d4a4cd47eb1ab03edf594f9303", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9d0a0af1e32298d4a4cd47eb1ab03edf594f9303"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c4c73e09f1a25c8a9d9c69a3243d9342037fed73", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c4c73e09f1a25c8a9d9c69a3243d9342037fed73", "html_url": "https://github.com/rust-lang/rust/commit/c4c73e09f1a25c8a9d9c69a3243d9342037fed73", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c4c73e09f1a25c8a9d9c69a3243d9342037fed73/comments", "author": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "committer": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "01a76e21a62041b50f746969e69c60e79e7e8b44", "url": "https://api.github.com/repos/rust-lang/rust/commits/01a76e21a62041b50f746969e69c60e79e7e8b44", "html_url": "https://github.com/rust-lang/rust/commit/01a76e21a62041b50f746969e69c60e79e7e8b44"}], "stats": {"total": 46, "additions": 46, "deletions": 0}, "files": [{"sha": "efb64e50c98cfcfdb67f3570a70e5fb70bfbddb9", "filename": "src/boot/fe/ast.ml", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c4c73e09f1a25c8a9d9c69a3243d9342037fed73/src%2Fboot%2Ffe%2Fast.ml", "raw_url": "https://github.com/rust-lang/rust/raw/c4c73e09f1a25c8a9d9c69a3243d9342037fed73/src%2Fboot%2Ffe%2Fast.ml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fboot%2Ffe%2Fast.ml?ref=c4c73e09f1a25c8a9d9c69a3243d9342037fed73", "patch": "@@ -1749,6 +1749,8 @@ let sprintf_expr = sprintf_fmt fmt_expr;;\n let sprintf_name = sprintf_fmt fmt_name;;\n let sprintf_name_component = sprintf_fmt fmt_name_component;;\n let sprintf_lval = sprintf_fmt fmt_lval;;\n+let sprintf_plval = sprintf_fmt fmt_plval;;\n+let sprintf_pexp = sprintf_fmt fmt_pexp;;\n let sprintf_atom = sprintf_fmt fmt_atom;;\n let sprintf_slot = sprintf_fmt fmt_slot;;\n let sprintf_slot_key = sprintf_fmt fmt_slot_key;;"}, {"sha": "7cb11d1ff629b70a675e557970b584314d3a7e39", "filename": "src/boot/me/resolve.ml", "status": "modified", "additions": 44, "deletions": 0, "changes": 44, "blob_url": "https://github.com/rust-lang/rust/blob/c4c73e09f1a25c8a9d9c69a3243d9342037fed73/src%2Fboot%2Fme%2Fresolve.ml", "raw_url": "https://github.com/rust-lang/rust/raw/c4c73e09f1a25c8a9d9c69a3243d9342037fed73/src%2Fboot%2Fme%2Fresolve.ml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fboot%2Fme%2Fresolve.ml?ref=c4c73e09f1a25c8a9d9c69a3243d9342037fed73", "patch": "@@ -483,6 +483,49 @@ let type_resolving_visitor\n     inner.Walk.visit_stmt_pre stmt\n   in\n \n+  let rebuilt_pexps = Hashtbl.create 0 in\n+  let get_rebuilt_pexp p =\n+    Hashtbl.find rebuilt_pexps p.id\n+  in\n+\n+  let visit_pexp_post p =\n+    let rebuild_plval pl =\n+      match pl with\n+          Ast.PLVAL_ident _ -> pl\n+        | Ast.PLVAL_app (id, tys) ->\n+            Ast.PLVAL_app (id, Array.map resolve_ty tys)\n+        | Ast.PLVAL_ext_name (pexp, nc) ->\n+            let pexp = get_rebuilt_pexp pexp in\n+            let nc =\n+              match nc with\n+                  Ast.COMP_ident _\n+                | Ast.COMP_idx _ -> nc\n+                | Ast.COMP_app (id, tys) ->\n+                    Ast.COMP_app (id, Array.map resolve_ty tys)\n+            in\n+              Ast.PLVAL_ext_name (pexp, nc)\n+\n+        | Ast.PLVAL_ext_pexp (a, b) ->\n+            Ast.PLVAL_ext_pexp (get_rebuilt_pexp a,\n+                                get_rebuilt_pexp b)\n+        | Ast.PLVAL_ext_deref p ->\n+            Ast.PLVAL_ext_deref (get_rebuilt_pexp p)\n+    in\n+    let p =\n+      match p.node with\n+          Ast.PEXP_lval pl ->\n+            let pl' = rebuild_plval pl in\n+              iflog cx (fun _ -> log cx \"rebuilt plval %a as %a (#%d)\"\n+                          Ast.sprintf_plval pl Ast.sprintf_plval pl'\n+                          (int_of_node p.id));\n+              { p with node = Ast.PEXP_lval pl' }\n+\n+        | _ -> p\n+    in\n+      htab_put rebuilt_pexps p.id p\n+  in\n+\n+\n   let visit_lval_pre lv =\n     let rec rebuild_lval' lv =\n       match lv with\n@@ -539,6 +582,7 @@ let type_resolving_visitor\n         Walk.visit_obj_drop_pre = visit_obj_drop_pre;\n         Walk.visit_stmt_pre = visit_stmt_pre;\n         Walk.visit_lval_pre = visit_lval_pre;\n+        Walk.visit_pexp_post = visit_pexp_post;\n         Walk.visit_crate_post = visit_crate_post }\n ;;\n "}]}