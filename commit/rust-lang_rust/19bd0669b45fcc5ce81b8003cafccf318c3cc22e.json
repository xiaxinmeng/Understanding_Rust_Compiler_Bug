{"sha": "19bd0669b45fcc5ce81b8003cafccf318c3cc22e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE5YmQwNjY5YjQ1ZmNjNWNlODFiODAwM2NhZmNjZjMxOGMzY2MyMmU=", "commit": {"author": {"name": "J. Frimmel", "email": "31166235+jfrimmel@users.noreply.github.com", "date": "2021-03-18T20:15:19Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-03-18T20:15:19Z"}, "message": "Apply suggestions from code review\n\nCo-authored-by: Josh Triplett <josh@joshtriplett.org>", "tree": {"sha": "f05bc78ac2671cd360c3649e1bf7efaa0f01f815", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f05bc78ac2671cd360c3649e1bf7efaa0f01f815"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/19bd0669b45fcc5ce81b8003cafccf318c3cc22e", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJgU7TXCRBK7hj4Ov3rIwAAdHIIADP7wKzuMJgtPLZd/hbL6qiu\nPrZtLvkftPFL8sLRbDDBrcHI3rJu36uFD7y/MJ0zF2Eh1ZQgVtlo0ofq3ejUvwr8\nJYFdL7fy1ICR/00mjTn9ZViZUby/v1dWLRDArX54iIC/LWXLlxtP397sapWItbHe\nIPN+nB6buNOIu/0pWU8KzTPT1TmbplZqslNdUgP8Ik8cf+WMb2kyY5iv8UgTBfb5\nwtlmZxl3mn4Ijc5uUVBuwmzGQ4M5S5wm5hnTJEp1kzFE0vEbWsf/0f+gAqe+zJJ5\nbiuzrulLXbAFsrtGTJLhPOn6zdBcyVQlQ11mcIdaUWenS/+2vGO1KTuN4PGOy5E=\n=btER\n-----END PGP SIGNATURE-----\n", "payload": "tree f05bc78ac2671cd360c3649e1bf7efaa0f01f815\nparent d5e45b50cdfc029a061229d9edf5f5fa58eb0353\nauthor J. Frimmel <31166235+jfrimmel@users.noreply.github.com> 1616098519 +0100\ncommitter GitHub <noreply@github.com> 1616098519 +0100\n\nApply suggestions from code review\n\nCo-authored-by: Josh Triplett <josh@joshtriplett.org>"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/19bd0669b45fcc5ce81b8003cafccf318c3cc22e", "html_url": "https://github.com/rust-lang/rust/commit/19bd0669b45fcc5ce81b8003cafccf318c3cc22e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/19bd0669b45fcc5ce81b8003cafccf318c3cc22e/comments", "author": {"login": "jfrimmel", "id": 31166235, "node_id": "MDQ6VXNlcjMxMTY2MjM1", "avatar_url": "https://avatars.githubusercontent.com/u/31166235?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jfrimmel", "html_url": "https://github.com/jfrimmel", "followers_url": "https://api.github.com/users/jfrimmel/followers", "following_url": "https://api.github.com/users/jfrimmel/following{/other_user}", "gists_url": "https://api.github.com/users/jfrimmel/gists{/gist_id}", "starred_url": "https://api.github.com/users/jfrimmel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jfrimmel/subscriptions", "organizations_url": "https://api.github.com/users/jfrimmel/orgs", "repos_url": "https://api.github.com/users/jfrimmel/repos", "events_url": "https://api.github.com/users/jfrimmel/events{/privacy}", "received_events_url": "https://api.github.com/users/jfrimmel/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d5e45b50cdfc029a061229d9edf5f5fa58eb0353", "url": "https://api.github.com/repos/rust-lang/rust/commits/d5e45b50cdfc029a061229d9edf5f5fa58eb0353", "html_url": "https://github.com/rust-lang/rust/commit/d5e45b50cdfc029a061229d9edf5f5fa58eb0353"}], "stats": {"total": 6, "additions": 3, "deletions": 3}, "files": [{"sha": "5127a16bbfd86ed0f8dc164e1b5ef36e94e05490", "filename": "library/core/src/macros/panic.md", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/19bd0669b45fcc5ce81b8003cafccf318c3cc22e/library%2Fcore%2Fsrc%2Fmacros%2Fpanic.md", "raw_url": "https://github.com/rust-lang/rust/raw/19bd0669b45fcc5ce81b8003cafccf318c3cc22e/library%2Fcore%2Fsrc%2Fmacros%2Fpanic.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fmacros%2Fpanic.md?ref=19bd0669b45fcc5ce81b8003cafccf318c3cc22e", "patch": "@@ -13,11 +13,11 @@ When using `panic!()` you can specify a string payload, that is built using\n the [`format!`] syntax. That payload is used when injecting the panic into\n the calling Rust thread, causing the thread to panic entirely.\n \n-The behavior of the default `std` hook, i.e. the code, that runs directy\n-after the panic is invoked, is to print the message payload to the\n+The behavior of the default `std` hook, i.e. the code that runs directly\n+after the panic is invoked, is to print the message payload to\n `stderr` along with the file/line/column information of the `panic!()`\n call. You can override the panic hook using [`std::panic::set_hook()`].\n-Inside the hook a panic can be accessed as a `&dyn Any + Send`, which\n+Inside the hook a panic can be accessed as a `&dyn Any + Send`,\n which contains either a `&str` or `String` for regular `panic!()` invocations.\n To panic with a value of another other type, [`panic_any`] can be used.\n "}]}