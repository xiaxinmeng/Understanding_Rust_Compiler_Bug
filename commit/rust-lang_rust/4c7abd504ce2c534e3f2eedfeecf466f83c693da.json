{"sha": "4c7abd504ce2c534e3f2eedfeecf466f83c693da", "node_id": "MDY6Q29tbWl0NzI0NzEyOjRjN2FiZDUwNGNlMmM1MzRlM2YyZWVkZmVlY2Y0NjZmODNjNjkzZGE=", "commit": {"author": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2019-12-31T14:59:49Z"}, "committer": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2019-12-31T14:59:49Z"}, "message": "Revert some changes", "tree": {"sha": "5e94d73c8a1e70760298faea499284e3db58774c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5e94d73c8a1e70760298faea499284e3db58774c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4c7abd504ce2c534e3f2eedfeecf466f83c693da", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4c7abd504ce2c534e3f2eedfeecf466f83c693da", "html_url": "https://github.com/rust-lang/rust/commit/4c7abd504ce2c534e3f2eedfeecf466f83c693da", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4c7abd504ce2c534e3f2eedfeecf466f83c693da/comments", "author": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "dbb118a5bccc4a1fd71503abb777f684c3ccce68", "url": "https://api.github.com/repos/rust-lang/rust/commits/dbb118a5bccc4a1fd71503abb777f684c3ccce68", "html_url": "https://github.com/rust-lang/rust/commit/dbb118a5bccc4a1fd71503abb777f684c3ccce68"}], "stats": {"total": 34, "additions": 20, "deletions": 14}, "files": [{"sha": "1912cc50a218ed080547337c0b2b89d18e6e96de", "filename": "example/mini_core.rs", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/4c7abd504ce2c534e3f2eedfeecf466f83c693da/example%2Fmini_core.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4c7abd504ce2c534e3f2eedfeecf466f83c693da/example%2Fmini_core.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/example%2Fmini_core.rs?ref=4c7abd504ce2c534e3f2eedfeecf466f83c693da", "patch": "@@ -394,10 +394,6 @@ pub trait FnMut<Args>: FnOnce<Args> {\n \n #[lang = \"panic\"]\n pub fn panic(&(_msg, _file, _line, _col): &(&'static str, &'static str, u32, u32)) -> ! {\n-    panic_inner(&_msg);\n-}\n-\n-pub fn panic_inner(_msg: &&str) -> ! {\n     unsafe {\n         libc::puts(\"Panicking\\0\" as *const str as *const u8);\n         intrinsics::abort();"}, {"sha": "81ca47fe64580a7881dd42e5e95597daebaa7259", "filename": "src/base.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4c7abd504ce2c534e3f2eedfeecf466f83c693da/src%2Fbase.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4c7abd504ce2c534e3f2eedfeecf466f83c693da/src%2Fbase.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbase.rs?ref=4c7abd504ce2c534e3f2eedfeecf466f83c693da", "patch": "@@ -269,7 +269,7 @@ fn trans_stmt<'tcx>(\n \n     fx.set_debug_loc(stmt.source_info);\n \n-    #[cfg(false_debug_assertions)]\n+    #[cfg(debug_assertions)]\n     match &stmt.kind {\n         StatementKind::StorageLive(..) | StatementKind::StorageDead(..) => {} // Those are not very useful\n         _ => {"}, {"sha": "39eb7d247074425495721f533ae941dbca15df0e", "filename": "src/value_and_place.rs", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/4c7abd504ce2c534e3f2eedfeecf466f83c693da/src%2Fvalue_and_place.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4c7abd504ce2c534e3f2eedfeecf466f83c693da/src%2Fvalue_and_place.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fvalue_and_place.rs?ref=4c7abd504ce2c534e3f2eedfeecf466f83c693da", "patch": "@@ -362,6 +362,19 @@ impl<'tcx> CPlace<'tcx> {\n     }\n \n     pub fn write_cvalue(self, fx: &mut FunctionCx<'_, 'tcx, impl Backend>, from: CValue<'tcx>) {\n+        #[cfg(debug_assertions)]\n+        {\n+            use cranelift_codegen::cursor::{Cursor, CursorPosition};\n+            let cur_ebb = match fx.bcx.cursor().position() {\n+                CursorPosition::After(ebb) => ebb,\n+                _ => unreachable!(),\n+            };\n+            fx.add_comment(\n+                fx.bcx.func.layout.last_inst(cur_ebb).unwrap(),\n+                format!(\"write_cvalue: {:?} <- {:?}\",self, from),\n+            );\n+        }\n+\n         let from_ty = from.layout().ty;\n         let to_ty = self.layout().ty;\n "}, {"sha": "e502a20db5bef37fe15f6ee0b04e52e3fcff9699", "filename": "test.sh", "status": "modified", "additions": 6, "deletions": 9, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/4c7abd504ce2c534e3f2eedfeecf466f83c693da/test.sh", "raw_url": "https://github.com/rust-lang/rust/raw/4c7abd504ce2c534e3f2eedfeecf466f83c693da/test.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/test.sh?ref=4c7abd504ce2c534e3f2eedfeecf466f83c693da", "patch": "@@ -4,10 +4,10 @@ set -e\n \n if [[ \"$1\" == \"--release\" ]]; then\n     export CHANNEL='release'\n-    cargo rustc --release $CG_CLIF_COMPILE_FLAGS -- -Clink-args=-fuse-ld=lld\n+    cargo build --release $CG_CLIF_COMPILE_FLAGS\n else\n     export CHANNEL='debug'\n-    cargo rustc $CG_CLIF_COMPILE_FLAGS -- -Clink-args=-fuse-ld=lld\n+    cargo build $CG_CLIF_COMPILE_FLAGS\n fi\n \n source config.sh\n@@ -28,8 +28,6 @@ mkdir -p target/out/clif\n echo \"[BUILD] mini_core\"\n $RUSTC example/mini_core.rs --crate-name mini_core --crate-type lib,dylib\n \n-#exit 1\n-\n echo \"[BUILD] example\"\n $RUSTC example/example.rs --crate-type lib\n \n@@ -71,16 +69,15 @@ $RUSTC example/mod_bench.rs --crate-type bin\n \n pushd simple-raytracer\n echo \"[BENCH COMPILE] ebobby/simple-raytracer\"\n-rm -r target/x86_64*/\n-../cargo.sh build\n+hyperfine --runs ${RUN_RUNS:-10} --warmup 1 --prepare \"rm -r target/*/debug || true\" \\\n+    \"RUSTFLAGS='' cargo build --target $TARGET_TRIPLE\" \\\n+    \"../cargo.sh build\"\n \n echo \"[BENCH RUN] ebobby/simple-raytracer\"\n cp ./target/*/debug/main ./raytracer_cg_clif\n-hyperfine --runs ${RUN_RUNS:-10} ./raytracer_*\n+hyperfine --runs ${RUN_RUNS:-10} ./raytracer_cg_llvm ./raytracer_cg_clif\n popd\n \n-exit 1\n-\n pushd build_sysroot/sysroot_src/src/libcore/tests\n rm -r ./target || true\n ../../../../../cargo.sh test"}]}