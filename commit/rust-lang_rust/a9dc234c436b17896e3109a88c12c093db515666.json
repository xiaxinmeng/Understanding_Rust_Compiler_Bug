{"sha": "a9dc234c436b17896e3109a88c12c093db515666", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE5ZGMyMzRjNDM2YjE3ODk2ZTMxMDlhODhjMTJjMDkzZGI1MTU2NjY=", "commit": {"author": {"name": "jam1garner", "email": "8260240+jam1garner@users.noreply.github.com", "date": "2021-05-27T01:52:56Z"}, "committer": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2021-06-14T17:27:24Z"}, "message": "Add docs for FnCtxt::resolve_ufcs", "tree": {"sha": "401c107f2f313ae4a350072344e00760e3a9def1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/401c107f2f313ae4a350072344e00760e3a9def1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a9dc234c436b17896e3109a88c12c093db515666", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a9dc234c436b17896e3109a88c12c093db515666", "html_url": "https://github.com/rust-lang/rust/commit/a9dc234c436b17896e3109a88c12c093db515666", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a9dc234c436b17896e3109a88c12c093db515666/comments", "author": {"login": "jam1garner", "id": 8260240, "node_id": "MDQ6VXNlcjgyNjAyNDA=", "avatar_url": "https://avatars.githubusercontent.com/u/8260240?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jam1garner", "html_url": "https://github.com/jam1garner", "followers_url": "https://api.github.com/users/jam1garner/followers", "following_url": "https://api.github.com/users/jam1garner/following{/other_user}", "gists_url": "https://api.github.com/users/jam1garner/gists{/gist_id}", "starred_url": "https://api.github.com/users/jam1garner/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jam1garner/subscriptions", "organizations_url": "https://api.github.com/users/jam1garner/orgs", "repos_url": "https://api.github.com/users/jam1garner/repos", "events_url": "https://api.github.com/users/jam1garner/events{/privacy}", "received_events_url": "https://api.github.com/users/jam1garner/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "01bdb8e38a5ba8c0db8ccaaeab66b1edd315aeca", "url": "https://api.github.com/repos/rust-lang/rust/commits/01bdb8e38a5ba8c0db8ccaaeab66b1edd315aeca", "html_url": "https://github.com/rust-lang/rust/commit/01bdb8e38a5ba8c0db8ccaaeab66b1edd315aeca"}], "stats": {"total": 12, "additions": 12, "deletions": 0}, "files": [{"sha": "d2bd4b0dd32ae9b002620734ad4d156f33b0b1db", "filename": "compiler/rustc_typeck/src/check/method/mod.rs", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/a9dc234c436b17896e3109a88c12c093db515666/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fmethod%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a9dc234c436b17896e3109a88c12c093db515666/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fmethod%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fmethod%2Fmod.rs?ref=a9dc234c436b17896e3109a88c12c093db515666", "patch": "@@ -468,6 +468,18 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n         Some(InferOk { obligations, value: callee })\n     }\n \n+    /// Performs \"universal function call\" lookup. If lookup is successful, it will return the type\n+    /// of definition and the [`DefId`] of the found definition.\n+    ///\n+    /// # Arguments\n+    ///\n+    /// Given a function call like `Foo::bar::<T1,...Tn>(...)`:\n+    ///\n+    /// * `self`:                  the surrounding `FnCtxt` (!)\n+    /// * `span`:                  the span of the entire function call\n+    /// * `method_name`:           the identifier of the function within the container type (`bar`)\n+    /// * `self_ty`:               the type to search within (`Foo`)\n+    /// * `expr_id`:               the [`hir::HirId`] of the expression composing the entire call\n     #[instrument(level = \"debug\", skip(self))]\n     pub fn resolve_ufcs(\n         &self,"}]}