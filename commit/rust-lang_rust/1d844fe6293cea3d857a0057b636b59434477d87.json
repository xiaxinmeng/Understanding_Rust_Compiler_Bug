{"sha": "1d844fe6293cea3d857a0057b636b59434477d87", "node_id": "C_kwDOAAsO6NoAKDFkODQ0ZmU2MjkzY2VhM2Q4NTdhMDA1N2I2MzZiNTk0MzQ0NzdkODc", "commit": {"author": {"name": "Jack Wrenn", "email": "jack@wrenn.fyi", "date": "2022-08-23T15:52:49Z"}, "committer": {"name": "Jack Wrenn", "email": "jack@wrenn.fyi", "date": "2022-08-23T15:52:49Z"}, "message": "safe transmute: use `FxIndex{Map,Set}` instead of `FxHash{Map,Set}`\n\nresolves query instability issues, and probably better for performance", "tree": {"sha": "1a2b63cedba88b2c6b286ecea6ea6c7ac99c9760", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1a2b63cedba88b2c6b286ecea6ea6c7ac99c9760"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1d844fe6293cea3d857a0057b636b59434477d87", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1d844fe6293cea3d857a0057b636b59434477d87", "html_url": "https://github.com/rust-lang/rust/commit/1d844fe6293cea3d857a0057b636b59434477d87", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1d844fe6293cea3d857a0057b636b59434477d87/comments", "author": {"login": "jswrenn", "id": 3820879, "node_id": "MDQ6VXNlcjM4MjA4Nzk=", "avatar_url": "https://avatars.githubusercontent.com/u/3820879?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jswrenn", "html_url": "https://github.com/jswrenn", "followers_url": "https://api.github.com/users/jswrenn/followers", "following_url": "https://api.github.com/users/jswrenn/following{/other_user}", "gists_url": "https://api.github.com/users/jswrenn/gists{/gist_id}", "starred_url": "https://api.github.com/users/jswrenn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jswrenn/subscriptions", "organizations_url": "https://api.github.com/users/jswrenn/orgs", "repos_url": "https://api.github.com/users/jswrenn/repos", "events_url": "https://api.github.com/users/jswrenn/events{/privacy}", "received_events_url": "https://api.github.com/users/jswrenn/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jswrenn", "id": 3820879, "node_id": "MDQ6VXNlcjM4MjA4Nzk=", "avatar_url": "https://avatars.githubusercontent.com/u/3820879?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jswrenn", "html_url": "https://github.com/jswrenn", "followers_url": "https://api.github.com/users/jswrenn/followers", "following_url": "https://api.github.com/users/jswrenn/following{/other_user}", "gists_url": "https://api.github.com/users/jswrenn/gists{/gist_id}", "starred_url": "https://api.github.com/users/jswrenn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jswrenn/subscriptions", "organizations_url": "https://api.github.com/users/jswrenn/orgs", "repos_url": "https://api.github.com/users/jswrenn/repos", "events_url": "https://api.github.com/users/jswrenn/events{/privacy}", "received_events_url": "https://api.github.com/users/jswrenn/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f46fffc276c19b2c81c9b5e84f4f8678fc4d6d0a", "url": "https://api.github.com/repos/rust-lang/rust/commits/f46fffc276c19b2c81c9b5e84f4f8678fc4d6d0a", "html_url": "https://github.com/rust-lang/rust/commit/f46fffc276c19b2c81c9b5e84f4f8678fc4d6d0a"}], "stats": {"total": 16, "additions": 2, "deletions": 14}, "files": [{"sha": "aa6fe7d241968ffd239887c4ddd93d3326268be3", "filename": "compiler/rustc_transmute/Cargo.toml", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/1d844fe6293cea3d857a0057b636b59434477d87/compiler%2Frustc_transmute%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/1d844fe6293cea3d857a0057b636b59434477d87/compiler%2Frustc_transmute%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_transmute%2FCargo.toml?ref=1d844fe6293cea3d857a0057b636b59434477d87", "patch": "@@ -7,7 +7,7 @@ edition = \"2021\"\n \n [dependencies]\n tracing = \"0.1\"\n-rustc_data_structures = { path = \"../rustc_data_structures\", optional = true}\n+rustc_data_structures = { path = \"../rustc_data_structures\"}\n rustc_hir = { path = \"../rustc_hir\", optional = true}\n rustc_infer = { path = \"../rustc_infer\", optional = true}\n rustc_macros = { path = \"../rustc_macros\", optional = true}\n@@ -18,7 +18,6 @@ rustc_target = { path = \"../rustc_target\", optional = true}\n [features]\n rustc = [\n     \"rustc_middle\",\n-    \"rustc_data_structures\",\n     \"rustc_hir\",\n     \"rustc_infer\",\n     \"rustc_macros\","}, {"sha": "b8922696e3067248fee95c81d28d042a623a7c4f", "filename": "compiler/rustc_transmute/src/layout/dfa.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/1d844fe6293cea3d857a0057b636b59434477d87/compiler%2Frustc_transmute%2Fsrc%2Flayout%2Fdfa.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1d844fe6293cea3d857a0057b636b59434477d87/compiler%2Frustc_transmute%2Fsrc%2Flayout%2Fdfa.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_transmute%2Fsrc%2Flayout%2Fdfa.rs?ref=1d844fe6293cea3d857a0057b636b59434477d87", "patch": "@@ -104,7 +104,6 @@ where\n     }\n \n     #[instrument(level = \"debug\")]\n-    #[cfg_attr(feature = \"rustc\", allow(rustc::potential_query_instability))]\n     pub(crate) fn from_nfa(nfa: Nfa<R>) -> Self {\n         let Nfa { transitions: nfa_transitions, start: nfa_start, accepting: nfa_accepting } = nfa;\n "}, {"sha": "c2bc47bc043a0d358bf77a7826423b05cad1cedb", "filename": "compiler/rustc_transmute/src/layout/nfa.rs", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/1d844fe6293cea3d857a0057b636b59434477d87/compiler%2Frustc_transmute%2Fsrc%2Flayout%2Fnfa.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1d844fe6293cea3d857a0057b636b59434477d87/compiler%2Frustc_transmute%2Fsrc%2Flayout%2Fnfa.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_transmute%2Fsrc%2Flayout%2Fnfa.rs?ref=1d844fe6293cea3d857a0057b636b59434477d87", "patch": "@@ -119,8 +119,6 @@ where\n \n         let mut transitions: Map<State, Map<Transition<R>, Set<State>>> = self.transitions;\n \n-        // the iteration order doesn't matter\n-        #[cfg_attr(feature = \"rustc\", allow(rustc::potential_query_instability))]\n         for (source, transition) in other.transitions {\n             let fix_state = |state| if state == other.start { self.accepting } else { state };\n             let entry = transitions.entry(fix_state(source)).or_default();\n@@ -142,8 +140,6 @@ where\n \n         let mut transitions: Map<State, Map<Transition<R>, Set<State>>> = self.transitions.clone();\n \n-        // the iteration order doesn't matter\n-        #[cfg_attr(feature = \"rustc\", allow(rustc::potential_query_instability))]\n         for (&(mut source), transition) in other.transitions.iter() {\n             // if source is starting state of `other`, replace with starting state of `self`\n             if source == other.start {\n@@ -152,8 +148,6 @@ where\n             let entry = transitions.entry(source).or_default();\n             for (edge, destinations) in transition {\n                 let entry = entry.entry(edge.clone()).or_default();\n-                // the iteration order doesn't matter\n-                #[cfg_attr(feature = \"rustc\", allow(rustc::potential_query_instability))]\n                 for &(mut destination) in destinations {\n                     // if dest is accepting state of `other`, replace with accepting state of `self`\n                     if destination == other.accepting {"}, {"sha": "68270a603a146fdcb9fbe83b5462b1c36c06cdd0", "filename": "compiler/rustc_transmute/src/lib.rs", "status": "modified", "additions": 1, "deletions": 5, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/1d844fe6293cea3d857a0057b636b59434477d87/compiler%2Frustc_transmute%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1d844fe6293cea3d857a0057b636b59434477d87/compiler%2Frustc_transmute%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_transmute%2Fsrc%2Flib.rs?ref=1d844fe6293cea3d857a0057b636b59434477d87", "patch": "@@ -13,11 +13,7 @@\n #[macro_use]\n extern crate tracing;\n \n-#[cfg(feature = \"rustc\")]\n-pub(crate) use rustc_data_structures::fx::{FxHashMap as Map, FxHashSet as Set};\n-\n-#[cfg(not(feature = \"rustc\"))]\n-pub(crate) use std::collections::{HashMap as Map, HashSet as Set};\n+pub(crate) use rustc_data_structures::fx::{FxIndexMap as Map, FxIndexSet as Set};\n \n pub(crate) mod layout;\n pub(crate) mod maybe_transmutable;"}]}