{"sha": "8da850b6d5cdb9896ff936170ccc6a6891ca067d", "node_id": "C_kwDOAAsO6NoAKDhkYTg1MGI2ZDVjZGI5ODk2ZmY5MzYxNzBjY2M2YTY4OTFjYTA2N2Q", "commit": {"author": {"name": "Lukas Wirth", "email": "lukastw97@gmail.com", "date": "2021-12-03T19:28:15Z"}, "committer": {"name": "Lukas Wirth", "email": "lukastw97@gmail.com", "date": "2021-12-03T19:28:15Z"}, "message": "Improve hover message for inert attributes", "tree": {"sha": "a6b2153162b073ff599ff92230aba2caae22a410", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a6b2153162b073ff599ff92230aba2caae22a410"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8da850b6d5cdb9896ff936170ccc6a6891ca067d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8da850b6d5cdb9896ff936170ccc6a6891ca067d", "html_url": "https://github.com/rust-lang/rust/commit/8da850b6d5cdb9896ff936170ccc6a6891ca067d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8da850b6d5cdb9896ff936170ccc6a6891ca067d/comments", "author": {"login": "Veykril", "id": 3757771, "node_id": "MDQ6VXNlcjM3NTc3NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/3757771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veykril", "html_url": "https://github.com/Veykril", "followers_url": "https://api.github.com/users/Veykril/followers", "following_url": "https://api.github.com/users/Veykril/following{/other_user}", "gists_url": "https://api.github.com/users/Veykril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veykril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veykril/subscriptions", "organizations_url": "https://api.github.com/users/Veykril/orgs", "repos_url": "https://api.github.com/users/Veykril/repos", "events_url": "https://api.github.com/users/Veykril/events{/privacy}", "received_events_url": "https://api.github.com/users/Veykril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Veykril", "id": 3757771, "node_id": "MDQ6VXNlcjM3NTc3NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/3757771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veykril", "html_url": "https://github.com/Veykril", "followers_url": "https://api.github.com/users/Veykril/followers", "following_url": "https://api.github.com/users/Veykril/following{/other_user}", "gists_url": "https://api.github.com/users/Veykril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veykril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veykril/subscriptions", "organizations_url": "https://api.github.com/users/Veykril/orgs", "repos_url": "https://api.github.com/users/Veykril/repos", "events_url": "https://api.github.com/users/Veykril/events{/privacy}", "received_events_url": "https://api.github.com/users/Veykril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d174158abce0ab7e9f2d3bc7556ab7070d38aaa4", "url": "https://api.github.com/repos/rust-lang/rust/commits/d174158abce0ab7e9f2d3bc7556ab7070d38aaa4", "html_url": "https://github.com/rust-lang/rust/commit/d174158abce0ab7e9f2d3bc7556ab7070d38aaa4"}], "stats": {"total": 82, "additions": 75, "deletions": 7}, "files": [{"sha": "4d758c7df7610b01e61e91c0eb220d71e0e858db", "filename": "crates/hir/src/lib.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/8da850b6d5cdb9896ff936170ccc6a6891ca067d/crates%2Fhir%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8da850b6d5cdb9896ff936170ccc6a6891ca067d/crates%2Fhir%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir%2Fsrc%2Flib.rs?ref=8da850b6d5cdb9896ff936170ccc6a6891ca067d", "patch": "@@ -103,6 +103,7 @@ pub use {\n     hir_def::{\n         adt::StructKind,\n         attr::{Attr, Attrs, AttrsWithOwner, Documentation},\n+        builtin_attr::AttributeTemplate,\n         find_path::PrefixKind,\n         import_map,\n         item_scope::ItemScope,\n@@ -2036,6 +2037,10 @@ impl BuiltinAttr {\n         // FIXME: Return a `Name` here\n         hir_def::builtin_attr::INERT_ATTRIBUTES[self.0].name\n     }\n+\n+    pub fn template(&self, _: &dyn HirDatabase) -> AttributeTemplate {\n+        hir_def::builtin_attr::INERT_ATTRIBUTES[self.0].template\n+    }\n }\n \n #[derive(Clone, Copy, Debug, PartialEq, Eq, Hash)]"}, {"sha": "3f43111fb1d5726a91ec96f93c1eb01ab71c4dcb", "filename": "crates/hir_def/src/builtin_attr.rs", "status": "modified", "additions": 7, "deletions": 5, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/8da850b6d5cdb9896ff936170ccc6a6891ca067d/crates%2Fhir_def%2Fsrc%2Fbuiltin_attr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8da850b6d5cdb9896ff936170ccc6a6891ca067d/crates%2Fhir_def%2Fsrc%2Fbuiltin_attr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_def%2Fsrc%2Fbuiltin_attr.rs?ref=8da850b6d5cdb9896ff936170ccc6a6891ca067d", "patch": "@@ -21,15 +21,15 @@ pub struct BuiltinAttribute {\n \n /// A template that the attribute input must match.\n /// Only top-level shape (`#[attr]` vs `#[attr(...)]` vs `#[attr = ...]`) is considered now.\n+#[derive(Clone, Copy)]\n pub struct AttributeTemplate {\n     pub word: bool,\n     pub list: Option<&'static str>,\n     pub name_value_str: Option<&'static str>,\n }\n \n-static BUILTIN_LOOKUP_TABLE: OnceCell<FxHashMap<&'static str, usize>> = OnceCell::new();\n-\n pub fn find_builtin_attr_idx(name: &str) -> Option<usize> {\n+    static BUILTIN_LOOKUP_TABLE: OnceCell<FxHashMap<&'static str, usize>> = OnceCell::new();\n     BUILTIN_LOOKUP_TABLE\n         .get_or_init(|| {\n             INERT_ATTRIBUTES.iter().map(|attr| attr.name).enumerate().map(|(a, b)| (b, a)).collect()\n@@ -58,9 +58,11 @@ macro_rules! template {\n     (Word, List: $descr1: expr, NameValueStr: $descr2: expr) => {\n         template!(@ true, Some($descr1), Some($descr2))\n     };\n-    (@ $word: expr, $list: expr, $name_value_str: expr) => { AttributeTemplate {\n-        word: $word, list: $list, name_value_str: $name_value_str\n-    } };\n+    (@ $word: expr, $list: expr, $name_value_str: expr) => {\n+        AttributeTemplate {\n+            word: $word, list: $list, name_value_str: $name_value_str\n+        }\n+    };\n }\n \n macro_rules! ungated {"}, {"sha": "c493e3e2fb255123faf8e2b6db1db717ae14d58e", "filename": "crates/ide/src/hover/render.rs", "status": "modified", "additions": 20, "deletions": 2, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/8da850b6d5cdb9896ff936170ccc6a6891ca067d/crates%2Fide%2Fsrc%2Fhover%2Frender.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8da850b6d5cdb9896ff936170ccc6a6891ca067d/crates%2Fide%2Fsrc%2Fhover%2Frender.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fhover%2Frender.rs?ref=8da850b6d5cdb9896ff936170ccc6a6891ca067d", "patch": "@@ -2,7 +2,7 @@\n use std::fmt::Display;\n \n use either::Either;\n-use hir::{AsAssocItem, HasAttrs, HasSource, HirDisplay, Semantics, TypeInfo};\n+use hir::{AsAssocItem, AttributeTemplate, HasAttrs, HasSource, HirDisplay, Semantics, TypeInfo};\n use ide_db::{\n     base_db::SourceDatabase,\n     defs::Definition,\n@@ -370,13 +370,31 @@ pub(super) fn definition(\n         Definition::GenericParam(it) => label_and_docs(db, it),\n         Definition::Label(it) => return Some(Markup::fenced_block(&it.name(db))),\n         // FIXME: We should be able to show more info about these\n-        Definition::BuiltinAttr(it) => return Some(Markup::fenced_block(&it.name(db))),\n+        Definition::BuiltinAttr(it) => return render_builtin_attr(db, it),\n         Definition::ToolModule(it) => return Some(Markup::fenced_block(&it.name(db))),\n     };\n \n     markup(docs.filter(|_| config.documentation.is_some()).map(Into::into), label, mod_path)\n }\n \n+fn render_builtin_attr(db: &RootDatabase, attr: hir::BuiltinAttr) -> Option<Markup> {\n+    let name = attr.name(db);\n+    let desc = format!(\"#[{}]\", name);\n+\n+    let AttributeTemplate { word, list, name_value_str } = attr.template(db);\n+    let mut docs = \"Valid forms are:\".to_owned();\n+    if word {\n+        format_to!(docs, \"\\n - #\\\\[{}]\", name);\n+    }\n+    if let Some(list) = list {\n+        format_to!(docs, \"\\n - #\\\\[{}({})]\", name, list);\n+    }\n+    if let Some(name_value_str) = name_value_str {\n+        format_to!(docs, \"\\n - #\\\\[{} = {}]\", name, name_value_str);\n+    }\n+    markup(Some(docs.replace('*', \"\\\\*\")), desc, None)\n+}\n+\n fn label_and_docs<D>(db: &RootDatabase, def: D) -> (String, Option<hir::Documentation>)\n where\n     D: HasAttrs + HirDisplay,"}, {"sha": "f1d7d2791d8ecf402cf14315c89bf61f08dde61c", "filename": "crates/ide/src/hover/tests.rs", "status": "modified", "additions": 43, "deletions": 0, "changes": 43, "blob_url": "https://github.com/rust-lang/rust/blob/8da850b6d5cdb9896ff936170ccc6a6891ca067d/crates%2Fide%2Fsrc%2Fhover%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8da850b6d5cdb9896ff936170ccc6a6891ca067d/crates%2Fide%2Fsrc%2Fhover%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fhover%2Ftests.rs?ref=8da850b6d5cdb9896ff936170ccc6a6891ca067d", "patch": "@@ -4277,3 +4277,46 @@ pub struct Foo;\n         \"#]],\n     );\n }\n+\n+#[test]\n+fn hover_inert_attr() {\n+    check(\n+        r#\"\n+#[doc$0 = \"\"]\n+pub struct Foo;\n+\"#,\n+        expect![[r##\"\n+            *doc*\n+\n+            ```rust\n+            #[doc]\n+            ```\n+\n+            ---\n+\n+            Valid forms are:\n+\n+            * \\#\\[doc(hidden|inline|...)\\]\n+            * \\#\\[doc = string\\]\n+        \"##]],\n+    );\n+    check(\n+        r#\"\n+#[allow$0()]\n+pub struct Foo;\n+\"#,\n+        expect![[r##\"\n+            *allow*\n+\n+            ```rust\n+            #[allow]\n+            ```\n+\n+            ---\n+\n+            Valid forms are:\n+\n+            * \\#\\[allow(lint1, lint2, ..., /\\*opt\\*/ reason = \"...\")\\]\n+        \"##]],\n+    );\n+}"}]}