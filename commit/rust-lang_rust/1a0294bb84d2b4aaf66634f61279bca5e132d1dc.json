{"sha": "1a0294bb84d2b4aaf66634f61279bca5e132d1dc", "node_id": "MDY6Q29tbWl0NzI0NzEyOjFhMDI5NGJiODRkMmI0YWFmNjY2MzRmNjEyNzliY2E1ZTEzMmQxZGM=", "commit": {"author": {"name": "Felix S. Klock II", "email": "pnkfelix@pnkfx.org", "date": "2018-07-18T21:23:21Z"}, "committer": {"name": "Felix S. Klock II", "email": "pnkfelix@pnkfx.org", "date": "2018-07-23T12:20:20Z"}, "message": "Thread the `errors_buffer` down through the NLL region_infer code.", "tree": {"sha": "5aa27ccc1508c754c084fc20768b61a3f7529269", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5aa27ccc1508c754c084fc20768b61a3f7529269"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1a0294bb84d2b4aaf66634f61279bca5e132d1dc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1a0294bb84d2b4aaf66634f61279bca5e132d1dc", "html_url": "https://github.com/rust-lang/rust/commit/1a0294bb84d2b4aaf66634f61279bca5e132d1dc", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1a0294bb84d2b4aaf66634f61279bca5e132d1dc/comments", "author": {"login": "pnkfelix", "id": 173127, "node_id": "MDQ6VXNlcjE3MzEyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/173127?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pnkfelix", "html_url": "https://github.com/pnkfelix", "followers_url": "https://api.github.com/users/pnkfelix/followers", "following_url": "https://api.github.com/users/pnkfelix/following{/other_user}", "gists_url": "https://api.github.com/users/pnkfelix/gists{/gist_id}", "starred_url": "https://api.github.com/users/pnkfelix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pnkfelix/subscriptions", "organizations_url": "https://api.github.com/users/pnkfelix/orgs", "repos_url": "https://api.github.com/users/pnkfelix/repos", "events_url": "https://api.github.com/users/pnkfelix/events{/privacy}", "received_events_url": "https://api.github.com/users/pnkfelix/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pnkfelix", "id": 173127, "node_id": "MDQ6VXNlcjE3MzEyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/173127?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pnkfelix", "html_url": "https://github.com/pnkfelix", "followers_url": "https://api.github.com/users/pnkfelix/followers", "following_url": "https://api.github.com/users/pnkfelix/following{/other_user}", "gists_url": "https://api.github.com/users/pnkfelix/gists{/gist_id}", "starred_url": "https://api.github.com/users/pnkfelix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pnkfelix/subscriptions", "organizations_url": "https://api.github.com/users/pnkfelix/orgs", "repos_url": "https://api.github.com/users/pnkfelix/repos", "events_url": "https://api.github.com/users/pnkfelix/events{/privacy}", "received_events_url": "https://api.github.com/users/pnkfelix/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ec005ccf84e470a70f8bb8b5347ab8e793fb30a3", "url": "https://api.github.com/repos/rust-lang/rust/commits/ec005ccf84e470a70f8bb8b5347ab8e793fb30a3", "html_url": "https://github.com/rust-lang/rust/commit/ec005ccf84e470a70f8bb8b5347ab8e793fb30a3"}], "stats": {"total": 12, "additions": 7, "deletions": 5}, "files": [{"sha": "52f596f61c2e803beba22d2ff46402d28fcf9212", "filename": "src/librustc_mir/borrow_check/nll/region_infer/mod.rs", "status": "modified", "additions": 7, "deletions": 5, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/1a0294bb84d2b4aaf66634f61279bca5e132d1dc/src%2Flibrustc_mir%2Fborrow_check%2Fnll%2Fregion_infer%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1a0294bb84d2b4aaf66634f61279bca5e132d1dc/src%2Flibrustc_mir%2Fborrow_check%2Fnll%2Fregion_infer%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check%2Fnll%2Fregion_infer%2Fmod.rs?ref=1a0294bb84d2b4aaf66634f61279bca5e132d1dc", "patch": "@@ -390,7 +390,8 @@ impl<'tcx> RegionInferenceContext<'tcx> {\n             None\n         };\n \n-        self.check_type_tests(infcx, mir, mir_def_id, outlives_requirements.as_mut());\n+        self.check_type_tests(\n+            infcx, mir, mir_def_id, outlives_requirements.as_mut(), errors_buffer);\n \n         self.check_universal_regions(\n             infcx, mir, mir_def_id, outlives_requirements.as_mut(), errors_buffer);\n@@ -480,6 +481,7 @@ impl<'tcx> RegionInferenceContext<'tcx> {\n         mir: &Mir<'tcx>,\n         mir_def_id: DefId,\n         mut propagated_outlives_requirements: Option<&mut Vec<ClosureOutlivesRequirement<'gcx>>>,\n+        errors_buffer: &mut Vec<Diagnostic>,\n     ) {\n         let tcx = infcx.tcx;\n \n@@ -506,13 +508,13 @@ impl<'tcx> RegionInferenceContext<'tcx> {\n             if let Some(lower_bound_region) = lower_bound_region {\n                 let region_scope_tree = &tcx.region_scope_tree(mir_def_id);\n                 let type_test_span = type_test.locations.span(mir);\n-                infcx.report_generic_bound_failure(\n+                infcx.construct_generic_bound_failure(\n                     region_scope_tree,\n                     type_test_span,\n                     None,\n                     type_test.generic_kind,\n                     lower_bound_region,\n-                );\n+                ).buffer(errors_buffer);\n             } else {\n                 // FIXME. We should handle this case better. It\n                 // indicates that we have e.g. some region variable\n@@ -524,10 +526,10 @@ impl<'tcx> RegionInferenceContext<'tcx> {\n                 // iterating over the universal regions and reporting\n                 // an error that multiple bounds are required.\n                 let type_test_span = type_test.locations.span(mir);\n-                tcx.sess.span_err(\n+                tcx.sess.struct_span_err(\n                     type_test_span,\n                     &format!(\"`{}` does not live long enough\", type_test.generic_kind,),\n-                );\n+                ).buffer(errors_buffer);\n             }\n         }\n     }"}]}