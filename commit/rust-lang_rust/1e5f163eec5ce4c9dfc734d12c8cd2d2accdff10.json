{"sha": "1e5f163eec5ce4c9dfc734d12c8cd2d2accdff10", "node_id": "MDY6Q29tbWl0NzI0NzEyOjFlNWYxNjNlZWM1Y2U0YzlkZmM3MzRkMTJjOGNkMmQyYWNjZGZmMTA=", "commit": {"author": {"name": "Matt Brubeck", "email": "mbrubeck@limpet.net", "date": "2011-10-18T02:30:29Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2011-10-18T05:21:31Z"}, "message": "doc: 'alt' expressions no longer require parens", "tree": {"sha": "d3b5a44825e8540b2a9dfe89732815edea88d4f2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d3b5a44825e8540b2a9dfe89732815edea88d4f2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1e5f163eec5ce4c9dfc734d12c8cd2d2accdff10", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1e5f163eec5ce4c9dfc734d12c8cd2d2accdff10", "html_url": "https://github.com/rust-lang/rust/commit/1e5f163eec5ce4c9dfc734d12c8cd2d2accdff10", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1e5f163eec5ce4c9dfc734d12c8cd2d2accdff10/comments", "author": {"login": "mbrubeck", "id": 5920, "node_id": "MDQ6VXNlcjU5MjA=", "avatar_url": "https://avatars.githubusercontent.com/u/5920?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mbrubeck", "html_url": "https://github.com/mbrubeck", "followers_url": "https://api.github.com/users/mbrubeck/followers", "following_url": "https://api.github.com/users/mbrubeck/following{/other_user}", "gists_url": "https://api.github.com/users/mbrubeck/gists{/gist_id}", "starred_url": "https://api.github.com/users/mbrubeck/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mbrubeck/subscriptions", "organizations_url": "https://api.github.com/users/mbrubeck/orgs", "repos_url": "https://api.github.com/users/mbrubeck/repos", "events_url": "https://api.github.com/users/mbrubeck/events{/privacy}", "received_events_url": "https://api.github.com/users/mbrubeck/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9e8076c88bdedd81a9dbd0492c6682cdc61d6e61", "url": "https://api.github.com/repos/rust-lang/rust/commits/9e8076c88bdedd81a9dbd0492c6682cdc61d6e61", "html_url": "https://github.com/rust-lang/rust/commit/9e8076c88bdedd81a9dbd0492c6682cdc61d6e61"}], "stats": {"total": 8, "additions": 4, "deletions": 4}, "files": [{"sha": "5024dd47ed3a02653fe7c773848a05305822baa3", "filename": "doc/rust.texi", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/1e5f163eec5ce4c9dfc734d12c8cd2d2accdff10/doc%2Frust.texi", "raw_url": "https://github.com/rust-lang/rust/raw/1e5f163eec5ce4c9dfc734d12c8cd2d2accdff10/doc%2Frust.texi", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/doc%2Frust.texi?ref=1e5f163eec5ce4c9dfc734d12c8cd2d2accdff10", "patch": "@@ -3347,9 +3347,9 @@ expression following the @code{alt} when the case block completes.\n A pattern @code{alt} expression branches on a @emph{pattern}. The exact form of\n matching that occurs depends on the pattern. Patterns consist of some\n combination of literals, tag constructors, variable binding specifications and\n-placeholders (@code{_}). A pattern @code{alt} has a parenthesized @emph{head\n-expression}, which is the value to compare to the patterns. The type of the\n-patterns must equal the type of the head expression.\n+placeholders (@code{_}). A pattern @code{alt} has a @emph{head expression},\n+which is the value to compare to the patterns. The type of the patterns must\n+equal the type of the head expression.\n \n To execute a pattern @code{alt} expression, first the head expression is\n evaluated, then its value is sequentially compared to the patterns in the arms\n@@ -3365,7 +3365,7 @@ type list<X> = tag(nil, cons(X, @@list<X>));\n \n let x: list<int> = cons(10, cons(11, nil));\n \n-alt (x) @{\n+alt x @{\n     case (cons(a, cons(b, _))) @{\n         process_pair(a,b);\n     @}"}]}