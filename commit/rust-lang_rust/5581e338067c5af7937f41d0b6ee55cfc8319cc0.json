{"sha": "5581e338067c5af7937f41d0b6ee55cfc8319cc0", "node_id": "C_kwDOAAsO6NoAKDU1ODFlMzM4MDY3YzVhZjc5MzdmNDFkMGI2ZWU1NWNmYzgzMTljYzA", "commit": {"author": {"name": "Mara Bos", "email": "m-ou.se@m-ou.se", "date": "2022-04-06T21:48:26Z"}, "committer": {"name": "Mara Bos", "email": "m-ou.se@m-ou.se", "date": "2022-04-06T21:48:26Z"}, "message": "Add test for FUTEX_*_BITSET.", "tree": {"sha": "98c4b1802f9978cf929e99c49aa6abbbaaf29116", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/98c4b1802f9978cf929e99c49aa6abbbaaf29116"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5581e338067c5af7937f41d0b6ee55cfc8319cc0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5581e338067c5af7937f41d0b6ee55cfc8319cc0", "html_url": "https://github.com/rust-lang/rust/commit/5581e338067c5af7937f41d0b6ee55cfc8319cc0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5581e338067c5af7937f41d0b6ee55cfc8319cc0/comments", "author": {"login": "m-ou-se", "id": 783247, "node_id": "MDQ6VXNlcjc4MzI0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/783247?v=4", "gravatar_id": "", "url": "https://api.github.com/users/m-ou-se", "html_url": "https://github.com/m-ou-se", "followers_url": "https://api.github.com/users/m-ou-se/followers", "following_url": "https://api.github.com/users/m-ou-se/following{/other_user}", "gists_url": "https://api.github.com/users/m-ou-se/gists{/gist_id}", "starred_url": "https://api.github.com/users/m-ou-se/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/m-ou-se/subscriptions", "organizations_url": "https://api.github.com/users/m-ou-se/orgs", "repos_url": "https://api.github.com/users/m-ou-se/repos", "events_url": "https://api.github.com/users/m-ou-se/events{/privacy}", "received_events_url": "https://api.github.com/users/m-ou-se/received_events", "type": "User", "site_admin": false}, "committer": {"login": "m-ou-se", "id": 783247, "node_id": "MDQ6VXNlcjc4MzI0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/783247?v=4", "gravatar_id": "", "url": "https://api.github.com/users/m-ou-se", "html_url": "https://github.com/m-ou-se", "followers_url": "https://api.github.com/users/m-ou-se/followers", "following_url": "https://api.github.com/users/m-ou-se/following{/other_user}", "gists_url": "https://api.github.com/users/m-ou-se/gists{/gist_id}", "starred_url": "https://api.github.com/users/m-ou-se/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/m-ou-se/subscriptions", "organizations_url": "https://api.github.com/users/m-ou-se/orgs", "repos_url": "https://api.github.com/users/m-ou-se/repos", "events_url": "https://api.github.com/users/m-ou-se/events{/privacy}", "received_events_url": "https://api.github.com/users/m-ou-se/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "53ed500c92d95b0f7c5ab974573b0e7ca283d45e", "url": "https://api.github.com/repos/rust-lang/rust/commits/53ed500c92d95b0f7c5ab974573b0e7ca283d45e", "html_url": "https://github.com/rust-lang/rust/commit/53ed500c92d95b0f7c5ab974573b0e7ca283d45e"}], "stats": {"total": 48, "additions": 48, "deletions": 0}, "files": [{"sha": "fb7c022929bd7e363d3b5d3ce956ff82fd7af761", "filename": "tests/run-pass/concurrency/linux-futex.rs", "status": "modified", "additions": 48, "deletions": 0, "changes": 48, "blob_url": "https://github.com/rust-lang/rust/blob/5581e338067c5af7937f41d0b6ee55cfc8319cc0/tests%2Frun-pass%2Fconcurrency%2Flinux-futex.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5581e338067c5af7937f41d0b6ee55cfc8319cc0/tests%2Frun-pass%2Fconcurrency%2Flinux-futex.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frun-pass%2Fconcurrency%2Flinux-futex.rs?ref=5581e338067c5af7937f41d0b6ee55cfc8319cc0", "patch": "@@ -160,11 +160,59 @@ fn wait_wake() {\n     assert!((200..1000).contains(&start.elapsed().as_millis()));\n }\n \n+fn wait_wake_bitset() {\n+    let start = Instant::now();\n+\n+    static FUTEX: i32 = 0;\n+\n+    thread::spawn(move || {\n+        thread::sleep(Duration::from_millis(200));\n+        unsafe {\n+            assert_eq!(libc::syscall(\n+                libc::SYS_futex,\n+                &FUTEX as *const i32,\n+                libc::FUTEX_WAKE_BITSET,\n+                10, // Wake up at most 10 threads.\n+                0,\n+                0,\n+                0b1001, // bitset\n+            ), 0); // Didn't match any thread.\n+        }\n+        thread::sleep(Duration::from_millis(200));\n+        unsafe {\n+            assert_eq!(libc::syscall(\n+                libc::SYS_futex,\n+                &FUTEX as *const i32,\n+                libc::FUTEX_WAKE_BITSET,\n+                10, // Wake up at most 10 threads.\n+                0,\n+                0,\n+                0b0110, // bitset\n+            ), 1); // Woken up one thread.\n+        }\n+    });\n+\n+    unsafe {\n+        assert_eq!(libc::syscall(\n+            libc::SYS_futex,\n+            &FUTEX as *const i32,\n+            libc::FUTEX_WAIT_BITSET,\n+            0,\n+            ptr::null::<libc::timespec>(),\n+            0,\n+            0b0100, // bitset\n+        ), 0);\n+    }\n+\n+    assert!((400..1000).contains(&start.elapsed().as_millis()));\n+}\n+\n fn main() {\n     wake_nobody();\n     wake_dangling();\n     wait_wrong_val();\n     wait_timeout();\n     wait_absolute_timeout();\n     wait_wake();\n+    wait_wake_bitset();\n }"}]}