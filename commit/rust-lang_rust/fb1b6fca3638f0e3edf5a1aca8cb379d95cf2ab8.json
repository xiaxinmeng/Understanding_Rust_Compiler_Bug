{"sha": "fb1b6fca3638f0e3edf5a1aca8cb379d95cf2ab8", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZiMWI2ZmNhMzYzOGYwZTNlZGY1YTFhY2E4Y2IzNzlkOTVjZjJhYjg=", "commit": {"author": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2015-08-11T13:54:06Z"}, "committer": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2015-08-12T21:58:57Z"}, "message": "regionck.rs: correct misuse of ty.regions() rather than regions()\nand add a test that was (incorrectly) failing to compile with\nexisting code", "tree": {"sha": "f026230db3a5f626f9b2c020a7603d86c230dd91", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f026230db3a5f626f9b2c020a7603d86c230dd91"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/fb1b6fca3638f0e3edf5a1aca8cb379d95cf2ab8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/fb1b6fca3638f0e3edf5a1aca8cb379d95cf2ab8", "html_url": "https://github.com/rust-lang/rust/commit/fb1b6fca3638f0e3edf5a1aca8cb379d95cf2ab8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/fb1b6fca3638f0e3edf5a1aca8cb379d95cf2ab8/comments", "author": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c9a49f93ac8e9cdbaa22b33c9e3b9a9adffd360c", "url": "https://api.github.com/repos/rust-lang/rust/commits/c9a49f93ac8e9cdbaa22b33c9e3b9a9adffd360c", "html_url": "https://github.com/rust-lang/rust/commit/c9a49f93ac8e9cdbaa22b33c9e3b9a9adffd360c"}], "stats": {"total": 38, "additions": 37, "deletions": 1}, "files": [{"sha": "1d575128663dc0072310233621203dcf3bd628af", "filename": "src/librustc_typeck/check/regionck.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fb1b6fca3638f0e3edf5a1aca8cb379d95cf2ab8/src%2Flibrustc_typeck%2Fcheck%2Fregionck.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fb1b6fca3638f0e3edf5a1aca8cb379d95cf2ab8/src%2Flibrustc_typeck%2Fcheck%2Fregionck.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fregionck.rs?ref=fb1b6fca3638f0e3edf5a1aca8cb379d95cf2ab8", "patch": "@@ -1785,7 +1785,7 @@ fn recursive_type_bound<'a, 'tcx>(rcx: &Rcx<'a, 'tcx>,\n \n     let mut regions = ty.regions();\n     regions.retain(|r| !r.is_bound()); // ignore late-bound regions\n-    bounds.push(VerifyBound::AllRegions(ty.regions()));\n+    bounds.push(VerifyBound::AllRegions(regions));\n \n     // remove bounds that must hold, since they are not interesting\n     bounds.retain(|b| !b.must_hold());"}, {"sha": "2d271b7be73e083a064e816dd374cffe9b72a231", "filename": "src/test/compile-fail/regions-outlives-projection-hrtype.rs", "status": "added", "additions": 36, "deletions": 0, "changes": 36, "blob_url": "https://github.com/rust-lang/rust/blob/fb1b6fca3638f0e3edf5a1aca8cb379d95cf2ab8/src%2Ftest%2Fcompile-fail%2Fregions-outlives-projection-hrtype.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fb1b6fca3638f0e3edf5a1aca8cb379d95cf2ab8/src%2Ftest%2Fcompile-fail%2Fregions-outlives-projection-hrtype.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fregions-outlives-projection-hrtype.rs?ref=fb1b6fca3638f0e3edf5a1aca8cb379d95cf2ab8", "patch": "@@ -0,0 +1,36 @@\n+// Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// Test for the outlives relation when applied to a projection on a\n+// type with bound regions. In this case, we are checking that\n+// `<for<'r> fn(&'r T) as TheTrait>::TheType: 'a` If we're not\n+// careful, we could wind up with a constraint that `'r:'a`, but since\n+// `'r` is bound, that leads to badness. This test checks that\n+// everything works.\n+\n+#![feature(rustc_attrs)]\n+#![allow(dead_code)]\n+\n+trait TheTrait {\n+    type TheType;\n+}\n+\n+fn wf<T>() { }\n+\n+type FnType<T> = for<'r> fn(&'r T);\n+\n+fn foo<'a,'b,T>()\n+    where FnType<T>: TheTrait\n+{\n+    wf::< <FnType<T> as TheTrait>::TheType >();\n+}\n+\n+#[rustc_error]\n+fn main() { } //~ ERROR compilation successful"}]}