{"sha": "ea68ce7fac0a5888e54e5725066b04fcd4290efa", "node_id": "C_kwDOAAsO6NoAKGVhNjhjZTdmYWMwYTU4ODhlNTRlNTcyNTA2NmIwNGZjZDQyOTBlZmE", "commit": {"author": {"name": "Oli Scherer", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2022-06-28T08:00:25Z"}, "committer": {"name": "Oli Scherer", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2022-07-15T15:56:17Z"}, "message": "Revert a hack that only ever worked on level deep", "tree": {"sha": "86c175376515be6945655e9cfab8f7f3520392f0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/86c175376515be6945655e9cfab8f7f3520392f0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ea68ce7fac0a5888e54e5725066b04fcd4290efa", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ea68ce7fac0a5888e54e5725066b04fcd4290efa", "html_url": "https://github.com/rust-lang/rust/commit/ea68ce7fac0a5888e54e5725066b04fcd4290efa", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ea68ce7fac0a5888e54e5725066b04fcd4290efa/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6b33d5bfa94f0005c2ae7136f4cda14a396e42bc", "url": "https://api.github.com/repos/rust-lang/rust/commits/6b33d5bfa94f0005c2ae7136f4cda14a396e42bc", "html_url": "https://github.com/rust-lang/rust/commit/6b33d5bfa94f0005c2ae7136f4cda14a396e42bc"}], "stats": {"total": 6, "additions": 1, "deletions": 5}, "files": [{"sha": "9e7a267ecbd7fc86dd9d057324d9595f21ac5b74", "filename": "compiler/rustc_mir_build/src/thir/pattern/usefulness.rs", "status": "modified", "additions": 1, "deletions": 5, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/ea68ce7fac0a5888e54e5725066b04fcd4290efa/compiler%2Frustc_mir_build%2Fsrc%2Fthir%2Fpattern%2Fusefulness.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ea68ce7fac0a5888e54e5725066b04fcd4290efa/compiler%2Frustc_mir_build%2Fsrc%2Fthir%2Fpattern%2Fusefulness.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir_build%2Fsrc%2Fthir%2Fpattern%2Fusefulness.rs?ref=ea68ce7fac0a5888e54e5725066b04fcd4290efa", "patch": "@@ -967,11 +967,7 @@ pub(crate) fn compute_match_usefulness<'p, 'tcx>(\n         })\n         .collect();\n \n-    // In case we're matching on an opaque type in its defining scope, the patterns define the hidden type.\n-    // The wildcard pattern needs to have the same type, otherwise it will always be deemed useful, even if the\n-    // match is exhaustive for the pattern type.\n-    let wild_ty = arms.first().map_or(scrut_ty, |arm| arm.pat.ty());\n-    let wild_pattern = cx.pattern_arena.alloc(DeconstructedPat::wildcard(wild_ty));\n+    let wild_pattern = cx.pattern_arena.alloc(DeconstructedPat::wildcard(scrut_ty));\n     let v = PatStack::from_pattern(wild_pattern);\n     let usefulness = is_useful(cx, &matrix, &v, FakeExtraWildcard, scrut_hir_id, false, true);\n     let non_exhaustiveness_witnesses = match usefulness {"}]}