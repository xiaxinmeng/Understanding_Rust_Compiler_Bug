{"sha": "5e5cc6749eb16f2820fe291582ded0b035667612", "node_id": "MDY6Q29tbWl0NzI0NzEyOjVlNWNjNjc0OWViMTZmMjgyMGZlMjkxNTgyZGVkMGIwMzU2Njc2MTI=", "commit": {"author": {"name": "Huon Wilson", "email": "dbau.pp+github@gmail.com", "date": "2014-12-05T09:10:22Z"}, "committer": {"name": "Huon Wilson", "email": "dbau.pp+github@gmail.com", "date": "2014-12-29T12:55:25Z"}, "message": "Slash the ast::Stmt type from 104 to 24 bytes.\n\n(on platforms with 64-bit pointers.)\n\nThe StmtMac variant is rather large and also fairly rare, so let's\noptimise the common case.", "tree": {"sha": "a9a5da702c47ff1bf8f9d0436a4452e248cdb2f3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a9a5da702c47ff1bf8f9d0436a4452e248cdb2f3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5e5cc6749eb16f2820fe291582ded0b035667612", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5e5cc6749eb16f2820fe291582ded0b035667612", "html_url": "https://github.com/rust-lang/rust/commit/5e5cc6749eb16f2820fe291582ded0b035667612", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5e5cc6749eb16f2820fe291582ded0b035667612/comments", "author": {"login": "huonw", "id": 1203825, "node_id": "MDQ6VXNlcjEyMDM4MjU=", "avatar_url": "https://avatars.githubusercontent.com/u/1203825?v=4", "gravatar_id": "", "url": "https://api.github.com/users/huonw", "html_url": "https://github.com/huonw", "followers_url": "https://api.github.com/users/huonw/followers", "following_url": "https://api.github.com/users/huonw/following{/other_user}", "gists_url": "https://api.github.com/users/huonw/gists{/gist_id}", "starred_url": "https://api.github.com/users/huonw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/huonw/subscriptions", "organizations_url": "https://api.github.com/users/huonw/orgs", "repos_url": "https://api.github.com/users/huonw/repos", "events_url": "https://api.github.com/users/huonw/events{/privacy}", "received_events_url": "https://api.github.com/users/huonw/received_events", "type": "User", "site_admin": false}, "committer": {"login": "huonw", "id": 1203825, "node_id": "MDQ6VXNlcjEyMDM4MjU=", "avatar_url": "https://avatars.githubusercontent.com/u/1203825?v=4", "gravatar_id": "", "url": "https://api.github.com/users/huonw", "html_url": "https://github.com/huonw", "followers_url": "https://api.github.com/users/huonw/followers", "following_url": "https://api.github.com/users/huonw/following{/other_user}", "gists_url": "https://api.github.com/users/huonw/gists{/gist_id}", "starred_url": "https://api.github.com/users/huonw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/huonw/subscriptions", "organizations_url": "https://api.github.com/users/huonw/orgs", "repos_url": "https://api.github.com/users/huonw/repos", "events_url": "https://api.github.com/users/huonw/events{/privacy}", "received_events_url": "https://api.github.com/users/huonw/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "06f25b7e99b8e05ba5a90f948a78ab32ea5ec457", "url": "https://api.github.com/repos/rust-lang/rust/commits/06f25b7e99b8e05ba5a90f948a78ab32ea5ec457", "html_url": "https://github.com/rust-lang/rust/commit/06f25b7e99b8e05ba5a90f948a78ab32ea5ec457"}], "stats": {"total": 12, "additions": 6, "deletions": 6}, "files": [{"sha": "d4932fbb5f1c545f85b9e7becba26f2cd3fc0dd2", "filename": "src/libsyntax/ast.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5e5cc6749eb16f2820fe291582ded0b035667612/src%2Flibsyntax%2Fast.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5e5cc6749eb16f2820fe291582ded0b035667612/src%2Flibsyntax%2Fast.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fast.rs?ref=5e5cc6749eb16f2820fe291582ded0b035667612", "patch": "@@ -607,7 +607,7 @@ pub enum Stmt_ {\n     /// Expr with trailing semi-colon (may have any type):\n     StmtSemi(P<Expr>, NodeId),\n \n-    StmtMac(Mac, MacStmtStyle),\n+    StmtMac(P<Mac>, MacStmtStyle),\n }\n \n #[deriving(Clone, Copy, PartialEq, Eq, RustcEncodable, RustcDecodable, Hash, Show)]"}, {"sha": "d2d624fa05e77be015f21786649b3295cda4def5", "filename": "src/libsyntax/ext/expand.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5e5cc6749eb16f2820fe291582ded0b035667612/src%2Flibsyntax%2Fext%2Fexpand.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5e5cc6749eb16f2820fe291582ded0b035667612/src%2Flibsyntax%2Fext%2Fexpand.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Fexpand.rs?ref=5e5cc6749eb16f2820fe291582ded0b035667612", "patch": "@@ -672,7 +672,7 @@ fn expand_stmt(s: Stmt, fld: &mut MacroExpander) -> SmallVector<P<Stmt>> {\n         StmtMac(mac, style) => (mac, style),\n         _ => return expand_non_macro_stmt(s, fld)\n     };\n-    let expanded_stmt = match expand_mac_invoc(mac, s.span,\n+    let expanded_stmt = match expand_mac_invoc(mac.and_then(|m| m), s.span,\n                                                 |r| r.make_stmt(),\n                                                 mark_stmt, fld) {\n         Some(stmt) => stmt,"}, {"sha": "c58901701f530068df47429b8dabdf65baa0174f", "filename": "src/libsyntax/fold.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5e5cc6749eb16f2820fe291582ded0b035667612/src%2Flibsyntax%2Ffold.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5e5cc6749eb16f2820fe291582ded0b035667612/src%2Flibsyntax%2Ffold.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Ffold.rs?ref=5e5cc6749eb16f2820fe291582ded0b035667612", "patch": "@@ -1461,7 +1461,7 @@ pub fn noop_fold_stmt<T: Folder>(Spanned {node, span}: Stmt, folder: &mut T)\n             }))\n         }\n         StmtMac(mac, semi) => SmallVector::one(P(Spanned {\n-            node: StmtMac(folder.fold_mac(mac), semi),\n+            node: StmtMac(mac.map(|m| folder.fold_mac(m)), semi),\n             span: span\n         }))\n     }"}, {"sha": "15b92b2edbf98038d2a2020af83ad7b3fe524476", "filename": "src/libsyntax/parse/parser.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5e5cc6749eb16f2820fe291582ded0b035667612/src%2Flibsyntax%2Fparse%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5e5cc6749eb16f2820fe291582ded0b035667612/src%2Flibsyntax%2Fparse%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fparser.rs?ref=5e5cc6749eb16f2820fe291582ded0b035667612", "patch": "@@ -3940,7 +3940,7 @@ impl<'a> Parser<'a> {\n                                     expr = Some(\n                                         self.mk_mac_expr(span.lo,\n                                                          span.hi,\n-                                                         m.node));\n+                                                         m.and_then(|x| x.node)));\n                                 }\n                                 _ => {\n                                     stmts.push(P(Spanned {"}, {"sha": "623f20bccd2ee36a100797e3b7bd19228c9f7479", "filename": "src/libsyntax/print/pprust.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5e5cc6749eb16f2820fe291582ded0b035667612/src%2Flibsyntax%2Fprint%2Fpprust.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5e5cc6749eb16f2820fe291582ded0b035667612/src%2Flibsyntax%2Fprint%2Fpprust.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fprint%2Fpprust.rs?ref=5e5cc6749eb16f2820fe291582ded0b035667612", "patch": "@@ -1337,7 +1337,7 @@ impl<'a> State<'a> {\n                     ast::MacStmtWithBraces => token::Brace,\n                     _ => token::Paren\n                 };\n-                try!(self.print_mac(mac, delim));\n+                try!(self.print_mac(&**mac, delim));\n                 match style {\n                     ast::MacStmtWithBraces => {}\n                     _ => try!(word(&mut self.s, \";\")),"}, {"sha": "714339d0f0aaa84b8c33656b0a3176cc93a9ac54", "filename": "src/libsyntax/visit.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5e5cc6749eb16f2820fe291582ded0b035667612/src%2Flibsyntax%2Fvisit.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5e5cc6749eb16f2820fe291582ded0b035667612/src%2Flibsyntax%2Fvisit.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fvisit.rs?ref=5e5cc6749eb16f2820fe291582ded0b035667612", "patch": "@@ -730,7 +730,7 @@ pub fn walk_stmt<'v, V: Visitor<'v>>(visitor: &mut V, statement: &'v Stmt) {\n         StmtExpr(ref expression, _) | StmtSemi(ref expression, _) => {\n             visitor.visit_expr(&**expression)\n         }\n-        StmtMac(ref macro, _) => visitor.visit_mac(macro),\n+        StmtMac(ref macro, _) => visitor.visit_mac(&**macro),\n     }\n }\n "}]}