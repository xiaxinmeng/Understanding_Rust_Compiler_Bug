{"sha": "c75a1f0e4dfd6e4a3929bc6496018734b5ef60c9", "node_id": "MDY6Q29tbWl0NzI0NzEyOmM3NWExZjBlNGRmZDZlNGEzOTI5YmM2NDk2MDE4NzM0YjVlZjYwYzk=", "commit": {"author": {"name": "Erin Power", "email": "xampprocky@gmail.com", "date": "2020-01-06T12:04:14Z"}, "committer": {"name": "Erin Power", "email": "xampprocky@gmail.com", "date": "2020-01-21T10:47:06Z"}, "message": "Update RELEASES.md for 1.41.0", "tree": {"sha": "48464addf09f47fe35046b5d2b8705b3018e7972", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/48464addf09f47fe35046b5d2b8705b3018e7972"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c75a1f0e4dfd6e4a3929bc6496018734b5ef60c9", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEElvMJe5JxX3nbhR4/xbKxh4dM4awFAl4m1qoACgkQxbKxh4dM\n4az/+BAAivYGBacocq8v6ZdiTAVJIIA8uMlSZMeeatUMYlUWWKazJYQdtRjahnD1\nh/NyfNnt0WEVlYJ3MWmSjhKYPBiJo9jPGKqvI9IV4N6xmPKnSZTu8nevBv1Z2HNm\n+k1UKhir3oxLE9mlqI0q+hOFXp1ad3peg9tRHqGPJKsIiX6pi/6IVoBO6x3nvm0U\nZ2Dz9+f9q6T+6cIKFNB58hSaFOpi0DnwqZe0NVnEGwH05zH3pFXf9XMOiON9Jwvl\nbm29INKWfSex6rFHda5gErQ+J8oaL3i32MH72HDVzLaVLexmIZBhvTcBlV9KG0Cq\n7MCBAua6yFU5rvgwDy2OQjAZaC08mEA9psm1g/lJ1j7HjChtm1RZA43zToR9HSZc\nyFrpD+DeS4Gd9tjC6VRKx7IiFPbomYUfPuNm7qveA0kDovL2KoVhqNo5oHfK8Bdh\nupFyMr3visP9BAbyWDT1Esn7QVa8fE3CJvxtCJ1xuZrcWdDAMFO3y7oIvdw/RuyW\n1Z3BcsaES/pcK8sgmgqvUwGxb8t0cVXxWC8bo3okyl6ZWTmmODPWzzJQUefPZPg5\nwcLpvgaaSn+qQ+MJ8OY+eSIQOXGu+/NgGLwKxQ/HH7acTNAOwjAYM+zm2FtJeYWW\n0k3vNtizye9PGvH36lllPfEdLhxRERT0ryApRkjM8OiIQkXC+zg=\n=eGR+\n-----END PGP SIGNATURE-----", "payload": "tree 48464addf09f47fe35046b5d2b8705b3018e7972\nparent 33640f0e03af2fb31ce380d5389d5545f24ce29a\nauthor Erin Power <xampprocky@gmail.com> 1578312254 +0100\ncommitter Erin Power <xampprocky@gmail.com> 1579603626 +0100\n\nUpdate RELEASES.md for 1.41.0\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c75a1f0e4dfd6e4a3929bc6496018734b5ef60c9", "html_url": "https://github.com/rust-lang/rust/commit/c75a1f0e4dfd6e4a3929bc6496018734b5ef60c9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c75a1f0e4dfd6e4a3929bc6496018734b5ef60c9/comments", "author": {"login": "XAMPPRocky", "id": 4464295, "node_id": "MDQ6VXNlcjQ0NjQyOTU=", "avatar_url": "https://avatars.githubusercontent.com/u/4464295?v=4", "gravatar_id": "", "url": "https://api.github.com/users/XAMPPRocky", "html_url": "https://github.com/XAMPPRocky", "followers_url": "https://api.github.com/users/XAMPPRocky/followers", "following_url": "https://api.github.com/users/XAMPPRocky/following{/other_user}", "gists_url": "https://api.github.com/users/XAMPPRocky/gists{/gist_id}", "starred_url": "https://api.github.com/users/XAMPPRocky/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/XAMPPRocky/subscriptions", "organizations_url": "https://api.github.com/users/XAMPPRocky/orgs", "repos_url": "https://api.github.com/users/XAMPPRocky/repos", "events_url": "https://api.github.com/users/XAMPPRocky/events{/privacy}", "received_events_url": "https://api.github.com/users/XAMPPRocky/received_events", "type": "User", "site_admin": false}, "committer": {"login": "XAMPPRocky", "id": 4464295, "node_id": "MDQ6VXNlcjQ0NjQyOTU=", "avatar_url": "https://avatars.githubusercontent.com/u/4464295?v=4", "gravatar_id": "", "url": "https://api.github.com/users/XAMPPRocky", "html_url": "https://github.com/XAMPPRocky", "followers_url": "https://api.github.com/users/XAMPPRocky/followers", "following_url": "https://api.github.com/users/XAMPPRocky/following{/other_user}", "gists_url": "https://api.github.com/users/XAMPPRocky/gists{/gist_id}", "starred_url": "https://api.github.com/users/XAMPPRocky/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/XAMPPRocky/subscriptions", "organizations_url": "https://api.github.com/users/XAMPPRocky/orgs", "repos_url": "https://api.github.com/users/XAMPPRocky/repos", "events_url": "https://api.github.com/users/XAMPPRocky/events{/privacy}", "received_events_url": "https://api.github.com/users/XAMPPRocky/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "33640f0e03af2fb31ce380d5389d5545f24ce29a", "url": "https://api.github.com/repos/rust-lang/rust/commits/33640f0e03af2fb31ce380d5389d5545f24ce29a", "html_url": "https://github.com/rust-lang/rust/commit/33640f0e03af2fb31ce380d5389d5545f24ce29a"}], "stats": {"total": 116, "additions": 116, "deletions": 0}, "files": [{"sha": "0a5896a6665a79650dd0ab74521f5a757c925920", "filename": "RELEASES.md", "status": "modified", "additions": 116, "deletions": 0, "changes": 116, "blob_url": "https://github.com/rust-lang/rust/blob/c75a1f0e4dfd6e4a3929bc6496018734b5ef60c9/RELEASES.md", "raw_url": "https://github.com/rust-lang/rust/raw/c75a1f0e4dfd6e4a3929bc6496018734b5ef60c9/RELEASES.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/RELEASES.md?ref=c75a1f0e4dfd6e4a3929bc6496018734b5ef60c9", "patch": "@@ -1,3 +1,119 @@\n+Version 1.41.0 (2020-01-30)\n+===========================\n+\n+Language\n+--------\n+\n+- [You can now pass type parameters to foreign items when implementing\n+  traits.][65879] E.g. You can now write `impl<T> From<Foo> for Vec<T> {}`.\n+- [You can now arbitrarily nest receiver types in the `self` position.][64325] E.g. you can\n+  now write `fn foo(self: Box<Box<Self>>) {}`. Previously only `Self`, `&Self`,\n+  `&mut Self`, `Arc<Self>`, `Rc<Self>`, and `Box<Self>` were allowed.\n+- [You can now use any valid identifier in a `format_args` macro.][66847]\n+  Previously identifiers starting with an underscore were not allowed.\n+- [Visibility modifiers (e.g. `pub`) are now syntactically allowed on trait items and\n+  enum variants.][66183] These are still rejected semantically, but\n+  can be seen and parsed by procedural macros and conditional compilation.\n+\n+Compiler\n+--------\n+\n+- [Rustc will now warn if you have unused loop `'label`s.][66325]\n+- [Removed support for the `i686-unknown-dragonfly` target.][67255]\n+- [Added tier 3 support\\* for the `riscv64gc-unknown-linux-gnu` target.][66661]\n+- [You can now pass an arguments file passing the `@path` syntax\n+  to rustc.][66172] Note that the format differs somewhat from what is\n+  found in other tooling; please see [the documentation][argfile-docs] for\n+  more information.\n+- [You can now provide `--extern` flag without a path, indicating that it is\n+  available from the search path or specified with an `-L` flag.][64882]\n+\n+\\* Refer to Rust's [platform support page][forge-platform-support] for more\n+information on Rust's tiered platform support.\n+\n+[argfile-docs]: https://doc.rust-lang.org/nightly/rustc/command-line-arguments.html#path-load-command-line-flags-from-a-path\n+\n+Libraries\n+---------\n+\n+- [The `core::panic` module is now stable.][66771] It was already stable\n+  through `std`.\n+- [`NonZero*` numerics now implement `From<NonZero*>` if it's a smaller integer\n+  width.][66277] E.g. `NonZeroU16` now implements `From<NonZeroU8>`.\n+- [`MaybeUninit<T>` now implements `fmt::Debug`.][65013]\n+\n+Stabilized APIs\n+---------------\n+\n+- [`Result::map_or`]\n+- [`Result::map_or_else`]\n+- [`std::rc::Weak::weak_count`]\n+- [`std::rc::Weak::strong_count`]\n+- [`std::sync::Weak::weak_count`]\n+- [`std::sync::Weak::strong_count`]\n+\n+Cargo\n+-----\n+\n+- [Cargo will now document all the private items for binary crates\n+  by default.][cargo/7593]\n+- [`cargo-install` will now reinstall the package if it detects that it is out\n+  of date.][cargo/7560]\n+- [Cargo.lock now uses a more git friendly format that should help to reduce\n+  merge conflicts.][cargo/7579]\n+- [You can now override specific dependencies's build settings][cargo/7591] E.g.\n+  `[profile.dev.overrides.image] opt-level = 2` sets the `image` crate's\n+  optimisation level to `2` for debug builds. You can also use\n+  `[profile.<profile>.build_overrides]` to override build scripts and\n+  their dependencies.\n+\n+Misc\n+----\n+\n+- [You can now specify `edition` in documentation code blocks to compile the block\n+  for that edition.][66238] E.g. `edition2018` tells rustdoc that the code sample\n+  should be compiled the 2018 edition of Rust.\n+- [You can now provide custom themes to rustdoc with `--theme`, and check the\n+  current theme with `--check-theme`.][54733]\n+- [You can use `#[doc(cfg(item))]` to document that a item is only available with\n+  certain features.][61351]\n+\n+Compatibility Notes\n+-------------------\n+\n+- [As previously announced 1.41.0 will be the last tier 1 release for 32-bit\n+  Apple targets.][apple-32bit-drop] This means that the source code is still\n+  available to build, but the targets are no longer being tested and release\n+  binaries for those platforms will no longer be distributed by the Rust project.\n+  Please refer to the linked blog post for more information.\n+\n+[54733]: https://github.com/rust-lang/rust/pull/54733/\n+[61351]: https://github.com/rust-lang/rust/pull/61351/\n+[67255]: https://github.com/rust-lang/rust/pull/67255/\n+[66661]: https://github.com/rust-lang/rust/pull/66661/\n+[66771]: https://github.com/rust-lang/rust/pull/66771/\n+[66847]: https://github.com/rust-lang/rust/pull/66847/\n+[66238]: https://github.com/rust-lang/rust/pull/66238/\n+[66277]: https://github.com/rust-lang/rust/pull/66277/\n+[66325]: https://github.com/rust-lang/rust/pull/66325/\n+[66172]: https://github.com/rust-lang/rust/pull/66172/\n+[66183]: https://github.com/rust-lang/rust/pull/66183/\n+[65879]: https://github.com/rust-lang/rust/pull/65879/\n+[65013]: https://github.com/rust-lang/rust/pull/65013/\n+[64882]: https://github.com/rust-lang/rust/pull/64882/\n+[64325]: https://github.com/rust-lang/rust/pull/64325/\n+[cargo/7560]: https://github.com/rust-lang/cargo/pull/7560/\n+[cargo/7579]: https://github.com/rust-lang/cargo/pull/7579/\n+[cargo/7591]: https://github.com/rust-lang/cargo/pull/7591/\n+[cargo/7593]: https://github.com/rust-lang/cargo/pull/7593/\n+[`Result::map_or_else`]: https://doc.rust-lang.org/std/result/enum.Result.html#method.map_or_else\n+[`Result::map_or`]: https://doc.rust-lang.org/std/result/enum.Result.html#method.map_or\n+[`std::rc::Weak::weak_count`]: https://doc.rust-lang.org/std/rc/struct.Weak.html#method.weak_count\n+[`std::rc::Weak::strong_count`]: https://doc.rust-lang.org/std/rc/struct.Weak.html#method.strong_count\n+[`std::sync::Weak::weak_count`]: https://doc.rust-lang.org/std/sync/struct.Weak.html#method.weak_count\n+[`std::sync::Weak::strong_count`]: https://doc.rust-lang.org/std/sync/struct.Weak.html#method.strong_count\n+[apple-32bit-drop]: https://blog.rust-lang.org/2020/01/03/reducing-support-for-32-bit-apple-targets.html\n+\n Version 1.40.0 (2019-12-19)\n ===========================\n "}]}