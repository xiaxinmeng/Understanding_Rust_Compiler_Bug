{"sha": "33ecad4407e1345cd662f535c2ae7a04e4bee52b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjMzZWNhZDQ0MDdlMTM0NWNkNjYyZjUzNWMyYWU3YTA0ZTRiZWU1MmI=", "commit": {"author": {"name": "Lukas Wirth", "email": "lukastw97@gmail.com", "date": "2020-12-20T19:13:06Z"}, "committer": {"name": "Lukas Wirth", "email": "lukastw97@gmail.com", "date": "2020-12-20T19:13:06Z"}, "message": "Create non-exhaustive patterns for non_exhaustive attributed items", "tree": {"sha": "edd613981e78ac6b9f4ea23b511cb2922d79c67f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/edd613981e78ac6b9f4ea23b511cb2922d79c67f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/33ecad4407e1345cd662f535c2ae7a04e4bee52b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/33ecad4407e1345cd662f535c2ae7a04e4bee52b", "html_url": "https://github.com/rust-lang/rust/commit/33ecad4407e1345cd662f535c2ae7a04e4bee52b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/33ecad4407e1345cd662f535c2ae7a04e4bee52b/comments", "author": {"login": "Veykril", "id": 3757771, "node_id": "MDQ6VXNlcjM3NTc3NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/3757771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veykril", "html_url": "https://github.com/Veykril", "followers_url": "https://api.github.com/users/Veykril/followers", "following_url": "https://api.github.com/users/Veykril/following{/other_user}", "gists_url": "https://api.github.com/users/Veykril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veykril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veykril/subscriptions", "organizations_url": "https://api.github.com/users/Veykril/orgs", "repos_url": "https://api.github.com/users/Veykril/repos", "events_url": "https://api.github.com/users/Veykril/events{/privacy}", "received_events_url": "https://api.github.com/users/Veykril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Veykril", "id": 3757771, "node_id": "MDQ6VXNlcjM3NTc3NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/3757771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veykril", "html_url": "https://github.com/Veykril", "followers_url": "https://api.github.com/users/Veykril/followers", "following_url": "https://api.github.com/users/Veykril/following{/other_user}", "gists_url": "https://api.github.com/users/Veykril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veykril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veykril/subscriptions", "organizations_url": "https://api.github.com/users/Veykril/orgs", "repos_url": "https://api.github.com/users/Veykril/repos", "events_url": "https://api.github.com/users/Veykril/events{/privacy}", "received_events_url": "https://api.github.com/users/Veykril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a5874a38cb1bbaee685ff92a40b66f9d5bcf34f6", "url": "https://api.github.com/repos/rust-lang/rust/commits/a5874a38cb1bbaee685ff92a40b66f9d5bcf34f6", "html_url": "https://github.com/rust-lang/rust/commit/a5874a38cb1bbaee685ff92a40b66f9d5bcf34f6"}], "stats": {"total": 8, "additions": 5, "deletions": 3}, "files": [{"sha": "2d16001053b59e5818dd21c6278f56ef3d978d68", "filename": "crates/completion/src/render/pattern.rs", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/33ecad4407e1345cd662f535c2ae7a04e4bee52b/crates%2Fcompletion%2Fsrc%2Frender%2Fpattern.rs", "raw_url": "https://github.com/rust-lang/rust/raw/33ecad4407e1345cd662f535c2ae7a04e4bee52b/crates%2Fcompletion%2Fsrc%2Frender%2Fpattern.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fcompletion%2Fsrc%2Frender%2Fpattern.rs?ref=33ecad4407e1345cd662f535c2ae7a04e4bee52b", "patch": "@@ -1,6 +1,6 @@\n //! Renderer for patterns.\n \n-use hir::{db::HirDatabase, HasVisibility, Name, StructKind};\n+use hir::{db::HirDatabase, HasAttrs, HasVisibility, Name, StructKind};\n use itertools::Itertools;\n \n use crate::{\n@@ -27,7 +27,8 @@ pub(crate) fn render_struct_pat(\n         // Matching a struct without matching its fields is pointless, unlike matching a Variant without its fields\n         return None;\n     }\n-    let fields_omitted = n_fields - fields.len() > 0;\n+    let fields_omitted =\n+        n_fields - fields.len() > 0 || strukt.attrs(ctx.db()).by_key(\"non_exhaustive\").exists();\n \n     let name = local_name.unwrap_or_else(|| strukt.name(ctx.db())).to_string();\n     let pat = render_pat(&ctx, &name, strukt.kind(ctx.db()), &fields, fields_omitted)?;\n@@ -60,7 +61,8 @@ pub(crate) fn render_variant_pat(\n         .filter(|field| field.is_visible_from(ctx.db(), module))\n         .collect::<Vec<_>>();\n \n-    let fields_omitted = n_fields - fields.len() > 0;\n+    let fields_omitted =\n+        n_fields - fields.len() > 0 || variant.attrs(ctx.db()).by_key(\"non_exhaustive\").exists();\n \n     let name = local_name.unwrap_or_else(|| variant.name(ctx.db())).to_string();\n     let pat = render_pat(&ctx, &name, variant.kind(ctx.db()), &fields, fields_omitted)?;"}]}