{"sha": "a9950f6a459b88ea7424724849f79ce3720e94e4", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE5OTUwZjZhNDU5Yjg4ZWE3NDI0NzI0ODQ5Zjc5Y2UzNzIwZTk0ZTQ=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-01-25T00:37:02Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-01-25T00:37:02Z"}, "message": "Rollup merge of #57802 - davidtwco:issue-56943, r=estebank\n\nPrint visible name for types as well as modules.\n\nFixes #56943 and fixes #57713.\n\nThis commit extends previous work in #55007 where the name from the\nvisible parent was used for modules. Now, we also print the name from\nthe visible parent for types.\n\nr? @estebank", "tree": {"sha": "c2eb8d7c75d4b6ad8c2578222fd7deed7347d709", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c2eb8d7c75d4b6ad8c2578222fd7deed7347d709"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a9950f6a459b88ea7424724849f79ce3720e94e4", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJcSlouCRBK7hj4Ov3rIwAAdHIIACpEI5qhp6ZYajaijMHwempD\n1B0O4c3eFmfxvbd2eFn1gXCxwr0MVE2FAI1IzQRyH72OpPPnUBtPJqKw8rFS1Pnk\nADEca7f5t7ws+euTNmSK0K0k6koj7a3uID0iW0o/OJtNgMKhkP96ihKGlLlW6Mfg\nyaYiTCBIY9FWE6wZpr23HseuYfUgI0nyYm6nO92C/mBN7arshFL42g9Bg3zZ8VQA\nW/KC65IuLLE9K7vnKnqYBQGpumIQomXaDdEoPQGv54H1Jnzv5VjJJtw0GisAGl/I\nOCN5VvEqQT+Qo2l072j+bfPhcRl/3yB/SNv/UmGCyPozJnz/7EQvk5K+X218j5I=\n=HQ7e\n-----END PGP SIGNATURE-----\n", "payload": "tree c2eb8d7c75d4b6ad8c2578222fd7deed7347d709\nparent 2876801d188e11ec8c39b40d60ee4ded31c77d7f\nparent 1db42756f7fec98d3705a0f975a1c92d10e88cd7\nauthor Mazdak Farrokhzad <twingoow@gmail.com> 1548376622 +0100\ncommitter GitHub <noreply@github.com> 1548376622 +0100\n\nRollup merge of #57802 - davidtwco:issue-56943, r=estebank\n\nPrint visible name for types as well as modules.\n\nFixes #56943 and fixes #57713.\n\nThis commit extends previous work in #55007 where the name from the\nvisible parent was used for modules. Now, we also print the name from\nthe visible parent for types.\n\nr? @estebank\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a9950f6a459b88ea7424724849f79ce3720e94e4", "html_url": "https://github.com/rust-lang/rust/commit/a9950f6a459b88ea7424724849f79ce3720e94e4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a9950f6a459b88ea7424724849f79ce3720e94e4/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2876801d188e11ec8c39b40d60ee4ded31c77d7f", "url": "https://api.github.com/repos/rust-lang/rust/commits/2876801d188e11ec8c39b40d60ee4ded31c77d7f", "html_url": "https://github.com/rust-lang/rust/commit/2876801d188e11ec8c39b40d60ee4ded31c77d7f"}, {"sha": "1db42756f7fec98d3705a0f975a1c92d10e88cd7", "url": "https://api.github.com/repos/rust-lang/rust/commits/1db42756f7fec98d3705a0f975a1c92d10e88cd7", "html_url": "https://github.com/rust-lang/rust/commit/1db42756f7fec98d3705a0f975a1c92d10e88cd7"}], "stats": {"total": 51, "additions": 37, "deletions": 14}, "files": [{"sha": "0ddc5ae87208dcf2a61a51e868837794f34b1e2e", "filename": "src/librustc/ty/item_path.rs", "status": "modified", "additions": 14, "deletions": 14, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/a9950f6a459b88ea7424724849f79ce3720e94e4/src%2Flibrustc%2Fty%2Fitem_path.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a9950f6a459b88ea7424724849f79ce3720e94e4/src%2Flibrustc%2Fty%2Fitem_path.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Fitem_path.rs?ref=a9950f6a459b88ea7424724849f79ce3720e94e4", "patch": "@@ -210,12 +210,12 @@ impl<'a, 'gcx, 'tcx> TyCtxt<'a, 'gcx, 'tcx> {\n \n             let visible_parent = visible_parent_map.get(&cur_def).cloned();\n             let actual_parent = self.parent(cur_def);\n-            debug!(\n-                \"try_push_visible_item_path: visible_parent={:?} actual_parent={:?}\",\n-                visible_parent, actual_parent,\n-            );\n \n             let data = cur_def_key.disambiguated_data.data;\n+            debug!(\n+                \"try_push_visible_item_path: data={:?} visible_parent={:?} actual_parent={:?}\",\n+                data, visible_parent, actual_parent,\n+            );\n             let symbol = match data {\n                 // In order to output a path that could actually be imported (valid and visible),\n                 // we need to handle re-exports correctly.\n@@ -248,16 +248,16 @@ impl<'a, 'gcx, 'tcx> TyCtxt<'a, 'gcx, 'tcx> {\n                 // the children of the visible parent (as was done when computing\n                 // `visible_parent_map`), looking for the specific child we currently have and then\n                 // have access to the re-exported name.\n-                DefPathData::Module(module_name) if visible_parent != actual_parent => {\n-                    let mut name: Option<ast::Ident> = None;\n-                    if let Some(visible_parent) = visible_parent {\n-                        for child in self.item_children(visible_parent).iter() {\n-                            if child.def.def_id() == cur_def {\n-                                name = Some(child.ident);\n-                            }\n-                        }\n-                    }\n-                    name.map(|n| n.as_str()).unwrap_or(module_name.as_str())\n+                DefPathData::Module(actual_name) |\n+                DefPathData::TypeNs(actual_name) if visible_parent != actual_parent => {\n+                    visible_parent\n+                        .and_then(|parent| {\n+                            self.item_children(parent)\n+                                .iter()\n+                                .find(|child| child.def.def_id() == cur_def)\n+                                .map(|child| child.ident.as_str())\n+                        })\n+                        .unwrap_or_else(|| actual_name.as_str())\n                 },\n                 _ => {\n                     data.get_opt_name().map(|n| n.as_str()).unwrap_or_else(|| {"}, {"sha": "65b9beb91f90ca00cddda0ff6bf16cb6d8c1edc0", "filename": "src/test/ui/issues/auxiliary/issue-56943.rs", "status": "added", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/a9950f6a459b88ea7424724849f79ce3720e94e4/src%2Ftest%2Fui%2Fissues%2Fauxiliary%2Fissue-56943.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a9950f6a459b88ea7424724849f79ce3720e94e4/src%2Ftest%2Fui%2Fissues%2Fauxiliary%2Fissue-56943.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fauxiliary%2Fissue-56943.rs?ref=a9950f6a459b88ea7424724849f79ce3720e94e4", "patch": "@@ -0,0 +1,3 @@\n+pub struct S;\n+mod m { pub struct S; }\n+pub use crate::m::S as S2;"}, {"sha": "8fc77abdbf58827101780bf20e448cd03d83ba1c", "filename": "src/test/ui/issues/issue-56943.rs", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/a9950f6a459b88ea7424724849f79ce3720e94e4/src%2Ftest%2Fui%2Fissues%2Fissue-56943.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a9950f6a459b88ea7424724849f79ce3720e94e4/src%2Ftest%2Fui%2Fissues%2Fissue-56943.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-56943.rs?ref=a9950f6a459b88ea7424724849f79ce3720e94e4", "patch": "@@ -0,0 +1,8 @@\n+// aux-build:issue-56943.rs\n+\n+extern crate issue_56943;\n+\n+fn main() {\n+    let _: issue_56943::S = issue_56943::S2;\n+    //~^ ERROR mismatched types [E0308]\n+}"}, {"sha": "27202051524c9be592d84314ecbf49dee6a33007", "filename": "src/test/ui/issues/issue-56943.stderr", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/a9950f6a459b88ea7424724849f79ce3720e94e4/src%2Ftest%2Fui%2Fissues%2Fissue-56943.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/a9950f6a459b88ea7424724849f79ce3720e94e4/src%2Ftest%2Fui%2Fissues%2Fissue-56943.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-56943.stderr?ref=a9950f6a459b88ea7424724849f79ce3720e94e4", "patch": "@@ -0,0 +1,12 @@\n+error[E0308]: mismatched types\n+  --> $DIR/issue-56943.rs:6:29\n+   |\n+LL |     let _: issue_56943::S = issue_56943::S2;\n+   |                             ^^^^^^^^^^^^^^^ expected struct `issue_56943::S`, found struct `issue_56943::S2`\n+   |\n+   = note: expected type `issue_56943::S`\n+              found type `issue_56943::S2`\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0308`."}]}