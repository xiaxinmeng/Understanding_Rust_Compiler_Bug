{"sha": "2f4a7a074299a1450f02365de2d80a8c13f03510", "node_id": "C_kwDOAAsO6NoAKDJmNGE3YTA3NDI5OWExNDUwZjAyMzY1ZGUyZDgwYThjMTNmMDM1MTA", "commit": {"author": {"name": "Jakob Degen", "email": "jakob.e.degen@gmail.com", "date": "2022-03-24T22:25:37Z"}, "committer": {"name": "Jakob Degen", "email": "jakob.e.degen@gmail.com", "date": "2022-04-11T19:18:53Z"}, "message": "Adjust computation of place types to detect more invalid places", "tree": {"sha": "a3f9c507b1c1518f6d42c15b02eaab7a6753bfa6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a3f9c507b1c1518f6d42c15b02eaab7a6753bfa6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2f4a7a074299a1450f02365de2d80a8c13f03510", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2f4a7a074299a1450f02365de2d80a8c13f03510", "html_url": "https://github.com/rust-lang/rust/commit/2f4a7a074299a1450f02365de2d80a8c13f03510", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2f4a7a074299a1450f02365de2d80a8c13f03510/comments", "author": {"login": "JakobDegen", "id": 51179609, "node_id": "MDQ6VXNlcjUxMTc5NjA5", "avatar_url": "https://avatars.githubusercontent.com/u/51179609?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JakobDegen", "html_url": "https://github.com/JakobDegen", "followers_url": "https://api.github.com/users/JakobDegen/followers", "following_url": "https://api.github.com/users/JakobDegen/following{/other_user}", "gists_url": "https://api.github.com/users/JakobDegen/gists{/gist_id}", "starred_url": "https://api.github.com/users/JakobDegen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JakobDegen/subscriptions", "organizations_url": "https://api.github.com/users/JakobDegen/orgs", "repos_url": "https://api.github.com/users/JakobDegen/repos", "events_url": "https://api.github.com/users/JakobDegen/events{/privacy}", "received_events_url": "https://api.github.com/users/JakobDegen/received_events", "type": "User", "site_admin": false}, "committer": {"login": "JakobDegen", "id": 51179609, "node_id": "MDQ6VXNlcjUxMTc5NjA5", "avatar_url": "https://avatars.githubusercontent.com/u/51179609?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JakobDegen", "html_url": "https://github.com/JakobDegen", "followers_url": "https://api.github.com/users/JakobDegen/followers", "following_url": "https://api.github.com/users/JakobDegen/following{/other_user}", "gists_url": "https://api.github.com/users/JakobDegen/gists{/gist_id}", "starred_url": "https://api.github.com/users/JakobDegen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JakobDegen/subscriptions", "organizations_url": "https://api.github.com/users/JakobDegen/orgs", "repos_url": "https://api.github.com/users/JakobDegen/repos", "events_url": "https://api.github.com/users/JakobDegen/events{/privacy}", "received_events_url": "https://api.github.com/users/JakobDegen/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "dae5c842fca09a4da272ec003285a8867cf906eb", "url": "https://api.github.com/repos/rust-lang/rust/commits/dae5c842fca09a4da272ec003285a8867cf906eb", "html_url": "https://github.com/rust-lang/rust/commit/dae5c842fca09a4da272ec003285a8867cf906eb"}], "stats": {"total": 13, "additions": 12, "deletions": 1}, "files": [{"sha": "af58bcabdf23d3bd504a4dbee97c2c7536f1aa21", "filename": "compiler/rustc_const_eval/src/transform/validate.rs", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/2f4a7a074299a1450f02365de2d80a8c13f03510/compiler%2Frustc_const_eval%2Fsrc%2Ftransform%2Fvalidate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2f4a7a074299a1450f02365de2d80a8c13f03510/compiler%2Frustc_const_eval%2Fsrc%2Ftransform%2Fvalidate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_const_eval%2Fsrc%2Ftransform%2Fvalidate.rs?ref=2f4a7a074299a1450f02365de2d80a8c13f03510", "patch": "@@ -3,8 +3,8 @@\n use rustc_index::bit_set::BitSet;\n use rustc_infer::infer::TyCtxtInferExt;\n use rustc_middle::mir::interpret::Scalar;\n-use rustc_middle::mir::traversal;\n use rustc_middle::mir::visit::{PlaceContext, Visitor};\n+use rustc_middle::mir::{traversal, Place};\n use rustc_middle::mir::{\n     AggregateKind, BasicBlock, Body, BorrowKind, Local, Location, MirPass, MirPhase, Operand,\n     PlaceElem, PlaceRef, ProjectionElem, Rvalue, SourceScope, Statement, StatementKind, Terminator,\n@@ -240,6 +240,14 @@ impl<'a, 'tcx> Visitor<'tcx> for TypeChecker<'a, 'tcx> {\n         self.super_projection_elem(local, proj_base, elem, context, location);\n     }\n \n+    fn visit_place(&mut self, place: &Place<'tcx>, _: PlaceContext, location: Location) {\n+        // Set off any `bug!`s in the type computation code\n+        let ty = place.ty(&self.body.local_decls, self.tcx);\n+        if ty.variant_index.is_some() {\n+            self.fail(location, \"Top level places may not have their variant index set!\");\n+        }\n+    }\n+\n     fn visit_statement(&mut self, statement: &Statement<'tcx>, location: Location) {\n         match &statement.kind {\n             StatementKind::Assign(box (dest, rvalue)) => {"}, {"sha": "597ade42236842c10ba0cb8b4675c87f44779021", "filename": "compiler/rustc_middle/src/mir/tcx.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/2f4a7a074299a1450f02365de2d80a8c13f03510/compiler%2Frustc_middle%2Fsrc%2Fmir%2Ftcx.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2f4a7a074299a1450f02365de2d80a8c13f03510/compiler%2Frustc_middle%2Fsrc%2Fmir%2Ftcx.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fmir%2Ftcx.rs?ref=2f4a7a074299a1450f02365de2d80a8c13f03510", "patch": "@@ -76,6 +76,9 @@ impl<'tcx> PlaceTy<'tcx> {\n         V: ::std::fmt::Debug,\n         T: ::std::fmt::Debug + Copy,\n     {\n+        if self.variant_index.is_some() && !matches!(elem, ProjectionElem::Field(..)) {\n+            bug!(\"cannot use non field projection on downcasted place\")\n+        }\n         let answer = match *elem {\n             ProjectionElem::Deref => {\n                 let ty = self"}]}