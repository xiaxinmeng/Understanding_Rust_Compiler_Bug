{"sha": "bb6e54d4bc7d4ce4c2372fecb84222867374b135", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJiNmU1NGQ0YmM3ZDRjZTRjMjM3MmZlY2I4NDIyMjg2NzM3NGIxMzU=", "commit": {"author": {"name": "David Wood", "email": "david@davidtw.co", "date": "2018-02-06T17:37:49Z"}, "committer": {"name": "David Wood", "email": "david@davidtw.co", "date": "2018-02-06T17:37:49Z"}, "message": "Added and updated tests to enable/disable overflow checks.", "tree": {"sha": "5bfb77786523a2c2a6530fd6a9b7633d9e2dad40", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5bfb77786523a2c2a6530fd6a9b7633d9e2dad40"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/bb6e54d4bc7d4ce4c2372fecb84222867374b135", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEWwgxPGhT5b/6kagXAXYLT59T8VQFAlp55+4ACgkQAXYLT59T\n8VT4Uw//TvV3LwPlr/sJ80YnL0pe9DN4ZoInKBgJ6ivxUYUxG2NFcseF04MY64zk\nVVnesX8d4wdQ9s6Rf6KMTrThYDvBjzbAPaqM2UbAwcTY8UT/NahjLVGe+DX2qCP5\nW5GxRiPa/RgWf3gXkLlBqtUW7OHgDIypfweVQcpMsuyShV6suqZ+wGfEQMd5FHs2\ne8ARsN+DfQESDIbcOKp7Ad/4nyOQYoXlzfrW5PhCmDY+j16fwtP0eIhUTzWu5kA2\nDkjzlFFYBuuMvNsZpWLiwJ/EKoDK+P09fDZhzx08P/3fAO8SsSRQHiFUgf+txIjK\nly/gXi6MhK2fmdh6Fj2E+ZFLUdKPqC21+OXT2sSC9DhBbWJF9Vn3hgHaDNFnBaYb\nKSHAnASEE10aSjOX0p9VvI4XVxw1pFieOPzSNOQK+GYPb5AXT9bvXiMnZY5B0Ut4\nKe3ZTjt0cnTFlcnZ6maASP4qk1tWcYy7EKianAWAJwzLqrfT2MXulw+oo59yt1az\nFaqatCIjHuNZqdaa5sXat6W+GwO1MQIi7KxDZ6MnenMocaNpiZabF7XsDBePf1Q+\nu0PqyAqvLOm3NguX7lCCwey8ZoR4FFYb4gUxEm13gEB8O4ik1yM9Is14Sve0BsbC\n6MhB0FdlTJBVZXFv6xM9AiCqna1a8tQYI4Jl/bfNd3QoiNUVMOE=\n=ySvb\n-----END PGP SIGNATURE-----", "payload": "tree 5bfb77786523a2c2a6530fd6a9b7633d9e2dad40\nparent 5cd4b4fd955ac57f64f45e175844c0e7e165989f\nauthor David Wood <david@davidtw.co> 1517938669 +0000\ncommitter David Wood <david@davidtw.co> 1517938669 +0000\n\nAdded and updated tests to enable/disable overflow checks.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/bb6e54d4bc7d4ce4c2372fecb84222867374b135", "html_url": "https://github.com/rust-lang/rust/commit/bb6e54d4bc7d4ce4c2372fecb84222867374b135", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/bb6e54d4bc7d4ce4c2372fecb84222867374b135/comments", "author": {"login": "davidtwco", "id": 1295100, "node_id": "MDQ6VXNlcjEyOTUxMDA=", "avatar_url": "https://avatars.githubusercontent.com/u/1295100?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidtwco", "html_url": "https://github.com/davidtwco", "followers_url": "https://api.github.com/users/davidtwco/followers", "following_url": "https://api.github.com/users/davidtwco/following{/other_user}", "gists_url": "https://api.github.com/users/davidtwco/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidtwco/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidtwco/subscriptions", "organizations_url": "https://api.github.com/users/davidtwco/orgs", "repos_url": "https://api.github.com/users/davidtwco/repos", "events_url": "https://api.github.com/users/davidtwco/events{/privacy}", "received_events_url": "https://api.github.com/users/davidtwco/received_events", "type": "User", "site_admin": false}, "committer": {"login": "davidtwco", "id": 1295100, "node_id": "MDQ6VXNlcjEyOTUxMDA=", "avatar_url": "https://avatars.githubusercontent.com/u/1295100?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidtwco", "html_url": "https://github.com/davidtwco", "followers_url": "https://api.github.com/users/davidtwco/followers", "following_url": "https://api.github.com/users/davidtwco/following{/other_user}", "gists_url": "https://api.github.com/users/davidtwco/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidtwco/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidtwco/subscriptions", "organizations_url": "https://api.github.com/users/davidtwco/orgs", "repos_url": "https://api.github.com/users/davidtwco/repos", "events_url": "https://api.github.com/users/davidtwco/events{/privacy}", "received_events_url": "https://api.github.com/users/davidtwco/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5cd4b4fd955ac57f64f45e175844c0e7e165989f", "url": "https://api.github.com/repos/rust-lang/rust/commits/5cd4b4fd955ac57f64f45e175844c0e7e165989f", "html_url": "https://github.com/rust-lang/rust/commit/5cd4b4fd955ac57f64f45e175844c0e7e165989f"}], "stats": {"total": 55, "additions": 54, "deletions": 1}, "files": [{"sha": "7734b14b2ab7b008f3a10d5469f5538dae8389c7", "filename": "src/test/ui/issue-45697-1.rs", "status": "added", "additions": 35, "deletions": 0, "changes": 35, "blob_url": "https://github.com/rust-lang/rust/blob/bb6e54d4bc7d4ce4c2372fecb84222867374b135/src%2Ftest%2Fui%2Fissue-45697-1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bb6e54d4bc7d4ce4c2372fecb84222867374b135/src%2Ftest%2Fui%2Fissue-45697-1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-45697-1.rs?ref=bb6e54d4bc7d4ce4c2372fecb84222867374b135", "patch": "@@ -0,0 +1,35 @@\n+// Copyright 2012 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// Test that assignments to an `&mut` pointer which is found in a\n+// borrowed (but otherwise non-aliasable) location is illegal.\n+\n+// compile-flags: -Z emit-end-regions -Z borrowck=compare -C overflow-checks=on\n+\n+struct S<'a> {\n+    pointer: &'a mut isize\n+}\n+\n+fn copy_borrowed_ptr<'a>(p: &'a mut S<'a>) -> S<'a> {\n+    S { pointer: &mut *p.pointer }\n+}\n+\n+fn main() {\n+    let mut x = 1;\n+\n+    {\n+        let mut y = S { pointer: &mut x };\n+        let z = copy_borrowed_ptr(&mut y);\n+        *y.pointer += 1;\n+        //~^ ERROR cannot assign to `*y.pointer` because it is borrowed (Ast) [E0506]\n+        //~| ERROR cannot use `*y.pointer` because it was mutably borrowed (Mir) [E0503]\n+        *z.pointer += 1;\n+    }\n+}"}, {"sha": "09f32b93acc1c9c60419f6ac836ca63d8d618991", "filename": "src/test/ui/issue-45697-1.stderr", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/bb6e54d4bc7d4ce4c2372fecb84222867374b135/src%2Ftest%2Fui%2Fissue-45697-1.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/bb6e54d4bc7d4ce4c2372fecb84222867374b135/src%2Ftest%2Fui%2Fissue-45697-1.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-45697-1.stderr?ref=bb6e54d4bc7d4ce4c2372fecb84222867374b135", "patch": "@@ -0,0 +1,18 @@\n+error[E0506]: cannot assign to `*y.pointer` because it is borrowed (Ast)\n+  --> $DIR/issue-45697-1.rs:30:9\n+   |\n+29 |         let z = copy_borrowed_ptr(&mut y);\n+   |                                        - borrow of `*y.pointer` occurs here\n+30 |         *y.pointer += 1;\n+   |         ^^^^^^^^^^^^^^^ assignment to borrowed `*y.pointer` occurs here\n+\n+error[E0503]: cannot use `*y.pointer` because it was mutably borrowed (Mir)\n+  --> $DIR/issue-45697-1.rs:30:9\n+   |\n+29 |         let z = copy_borrowed_ptr(&mut y);\n+   |                                   ------ borrow of `y` occurs here\n+30 |         *y.pointer += 1;\n+   |         ^^^^^^^^^^^^^^^ use of borrowed `y`\n+\n+error: aborting due to 2 previous errors\n+"}, {"sha": "4e93eccd6f6496ee1f4fde63302ed376073117cc", "filename": "src/test/ui/issue-45697.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/bb6e54d4bc7d4ce4c2372fecb84222867374b135/src%2Ftest%2Fui%2Fissue-45697.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bb6e54d4bc7d4ce4c2372fecb84222867374b135/src%2Ftest%2Fui%2Fissue-45697.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-45697.rs?ref=bb6e54d4bc7d4ce4c2372fecb84222867374b135", "patch": "@@ -11,7 +11,7 @@\n // Test that assignments to an `&mut` pointer which is found in a\n // borrowed (but otherwise non-aliasable) location is illegal.\n \n-// compile-flags: -Z emit-end-regions -Z borrowck=compare\n+// compile-flags: -Z emit-end-regions -Z borrowck=compare -C overflow-checks=off\n \n struct S<'a> {\n     pointer: &'a mut isize"}]}