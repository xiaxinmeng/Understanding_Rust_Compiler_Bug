{"sha": "f49b891ce534101695bb012982cf50d21665feef", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY0OWI4OTFjZTUzNDEwMTY5NWJiMDEyOTgyY2Y1MGQyMTY2NWZlZWY=", "commit": {"author": {"name": "Eric Holk", "email": "eric.holk@gmail.com", "date": "2012-05-29T23:11:15Z"}, "committer": {"name": "Eric Holk", "email": "eric.holk@gmail.com", "date": "2012-05-30T19:03:51Z"}, "message": "Include capture clauses when generating metadata.\n\nThis may fix the bug that's blocking Issue #2441.", "tree": {"sha": "b5a389c5407cbc31226eb0227bcc50d662f2db6d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b5a389c5407cbc31226eb0227bcc50d662f2db6d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f49b891ce534101695bb012982cf50d21665feef", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f49b891ce534101695bb012982cf50d21665feef", "html_url": "https://github.com/rust-lang/rust/commit/f49b891ce534101695bb012982cf50d21665feef", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f49b891ce534101695bb012982cf50d21665feef/comments", "author": {"login": "eholk", "id": 105766, "node_id": "MDQ6VXNlcjEwNTc2Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/105766?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eholk", "html_url": "https://github.com/eholk", "followers_url": "https://api.github.com/users/eholk/followers", "following_url": "https://api.github.com/users/eholk/following{/other_user}", "gists_url": "https://api.github.com/users/eholk/gists{/gist_id}", "starred_url": "https://api.github.com/users/eholk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eholk/subscriptions", "organizations_url": "https://api.github.com/users/eholk/orgs", "repos_url": "https://api.github.com/users/eholk/repos", "events_url": "https://api.github.com/users/eholk/events{/privacy}", "received_events_url": "https://api.github.com/users/eholk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "eholk", "id": 105766, "node_id": "MDQ6VXNlcjEwNTc2Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/105766?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eholk", "html_url": "https://github.com/eholk", "followers_url": "https://api.github.com/users/eholk/followers", "following_url": "https://api.github.com/users/eholk/following{/other_user}", "gists_url": "https://api.github.com/users/eholk/gists{/gist_id}", "starred_url": "https://api.github.com/users/eholk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eholk/subscriptions", "organizations_url": "https://api.github.com/users/eholk/orgs", "repos_url": "https://api.github.com/users/eholk/repos", "events_url": "https://api.github.com/users/eholk/events{/privacy}", "received_events_url": "https://api.github.com/users/eholk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6abddca18b432d37945bd2fda24bbc77fba970aa", "url": "https://api.github.com/repos/rust-lang/rust/commits/6abddca18b432d37945bd2fda24bbc77fba970aa", "html_url": "https://github.com/rust-lang/rust/commit/6abddca18b432d37945bd2fda24bbc77fba970aa"}], "stats": {"total": 28, "additions": 18, "deletions": 10}, "files": [{"sha": "ecdb8d328fb91c1188a9e7e7fff7efa59348f0e7", "filename": "src/librustsyntax/fold.rs", "status": "modified", "additions": 8, "deletions": 3, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/f49b891ce534101695bb012982cf50d21665feef/src%2Flibrustsyntax%2Ffold.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f49b891ce534101695bb012982cf50d21665feef/src%2Flibrustsyntax%2Ffold.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustsyntax%2Ffold.rs?ref=f49b891ce534101695bb012982cf50d21665feef", "patch": "@@ -427,12 +427,17 @@ fn noop_fold_expr(e: expr_, fld: ast_fold) -> expr_ {\n             expr_alt(fld.fold_expr(expr), vec::map(arms, fld.fold_arm), mode)\n           }\n           expr_fn(proto, decl, body, captures) {\n-              expr_fn(proto, fold_fn_decl(decl, fld),\n-                      fld.fold_block(body), captures)\n+            expr_fn(proto, fold_fn_decl(decl, fld),\n+                    fld.fold_block(body),\n+                    @((*captures).map({|cap_item|\n+                        @({id: fld.new_id((*cap_item).id)\n+                           with *cap_item})})))\n           }\n           expr_fn_block(decl, body, captures) {\n             expr_fn_block(fold_fn_decl(decl, fld), fld.fold_block(body),\n-                          captures)\n+                          @((*captures).map({|cap_item|\n+                              @({id: fld.new_id((*cap_item).id)\n+                                 with *cap_item})})))\n           }\n           expr_block(blk) { expr_block(fld.fold_block(blk)) }\n           expr_move(el, er) {"}, {"sha": "4d4124477971144b8b40daa00cda9bfc52ebfa6a", "filename": "src/rustc/middle/astencode.rs", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/f49b891ce534101695bb012982cf50d21665feef/src%2Frustc%2Fmiddle%2Fastencode.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f49b891ce534101695bb012982cf50d21665feef/src%2Frustc%2Fmiddle%2Fastencode.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustc%2Fmiddle%2Fastencode.rs?ref=f49b891ce534101695bb012982cf50d21665feef", "patch": "@@ -252,7 +252,11 @@ fn visit_ids(item: ast::inlined_item, vfn: fn@(ast::node_id)) {\n                 vfn(m.self_id);\n                 vec::iter(tps) {|tp| vfn(tp.id)}\n               }\n-              visit::fk_anon(*) | visit::fk_fn_block(*) {\n+              visit::fk_anon(_, capture_clause)\n+              | visit::fk_fn_block(capture_clause) {\n+                for vec::each(*capture_clause) {|clause|\n+                    vfn(clause.id);\n+                }\n               }\n             }\n "}, {"sha": "64dafc09a7c54a0350f96d9db4fc1a5e1bace221", "filename": "src/rustc/middle/capture.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/f49b891ce534101695bb012982cf50d21665feef/src%2Frustc%2Fmiddle%2Fcapture.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f49b891ce534101695bb012982cf50d21665feef/src%2Frustc%2Fmiddle%2Fcapture.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustc%2Fmiddle%2Fcapture.rs?ref=f49b891ce534101695bb012982cf50d21665feef", "patch": "@@ -67,6 +67,9 @@ fn compute_capture_vars(tcx: ty::ctxt,\n     // first add entries for anything explicitly named in the cap clause\n \n     for (*cap_clause).each { |cap_item|\n+        #debug(\"Doing capture var: %s (%?)\",\n+               cap_item.name, cap_item.id);\n+\n         let cap_def = tcx.def_map.get(cap_item.id);\n         let cap_def_id = ast_util::def_id_of_def(cap_def).node;\n         if cap_item.is_move {"}, {"sha": "0779179326a56e9314c2d2e8751a9188d93b958b", "filename": "src/test/bench/graph500-bfs.rs", "status": "modified", "additions": 2, "deletions": 6, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/f49b891ce534101695bb012982cf50d21665feef/src%2Ftest%2Fbench%2Fgraph500-bfs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f49b891ce534101695bb012982cf50d21665feef/src%2Ftest%2Fbench%2Fgraph500-bfs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fbench%2Fgraph500-bfs.rs?ref=f49b891ce534101695bb012982cf50d21665feef", "patch": "@@ -1,5 +1,3 @@\n-// xfail-test :(\n-\n /**\n \n An implementation of the Graph500 Bread First Search problem in Rust.\n@@ -267,8 +265,7 @@ fn pbfs(graph: graph, key: node_id) -> bfs_result {\n         }\n     }\n \n-    let graph_arc = arc::shared_arc(copy graph);\n-    let graph = *graph_arc;\n+    let (res, graph) = arc::shared_arc(copy graph);\n \n     let mut i = 0u;\n     while par::any(colors, is_gray) {\n@@ -277,8 +274,7 @@ fn pbfs(graph: graph, key: node_id) -> bfs_result {\n         i += 1u;\n         let old_len = colors.len();\n \n-        let colors_arc = arc::shared_arc(copy colors);\n-        let color = *colors_arc;\n+        let (res, color) = arc::shared_arc(copy colors);\n \n         colors = par::mapi(colors) {|i, c|\n             let c : color = c;"}]}