{"sha": "a8e1d83103cdaa8391e99c8ecaff0f68b8c0ff9e", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE4ZTFkODMxMDNjZGFhODM5MWU5OWM4ZWNhZmYwZjY4YjhjMGZmOWU=", "commit": {"author": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2012-10-11T19:10:01Z"}, "committer": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2012-10-11T19:10:01Z"}, "message": "manual: remove all mention of constraints.", "tree": {"sha": "41cc021ca3bbd23fcadd9ba8b4a7d9cd929f0933", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/41cc021ca3bbd23fcadd9ba8b4a7d9cd929f0933"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a8e1d83103cdaa8391e99c8ecaff0f68b8c0ff9e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a8e1d83103cdaa8391e99c8ecaff0f68b8c0ff9e", "html_url": "https://github.com/rust-lang/rust/commit/a8e1d83103cdaa8391e99c8ecaff0f68b8c0ff9e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a8e1d83103cdaa8391e99c8ecaff0f68b8c0ff9e/comments", "author": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "committer": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c4237db60e35d00257f602a38530aadbc9143689", "url": "https://api.github.com/repos/rust-lang/rust/commits/c4237db60e35d00257f602a38530aadbc9143689", "html_url": "https://github.com/rust-lang/rust/commit/c4237db60e35d00257f602a38530aadbc9143689"}], "stats": {"total": 11, "additions": 5, "deletions": 6}, "files": [{"sha": "f6c4e776973fc715b785a85b92431fd7e662ab8e", "filename": "doc/rust.md", "status": "modified", "additions": 5, "deletions": 6, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/a8e1d83103cdaa8391e99c8ecaff0f68b8c0ff9e/doc%2Frust.md", "raw_url": "https://github.com/rust-lang/rust/raw/a8e1d83103cdaa8391e99c8ecaff0f68b8c0ff9e/doc%2Frust.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/doc%2Frust.md?ref=a8e1d83103cdaa8391e99c8ecaff0f68b8c0ff9e", "patch": "@@ -676,8 +676,8 @@ from outside the source file: either by an explicit `source_directive` in\n a referencing crate file, or by the filename of the source file itself.\n \n A source file that contains a `main` function can be compiled to an\n-executable. If a `main` function is present, it must have no [type parameters](#type-parameters)\n-and no [constraints](#constraints). Its return type must be [`nil`](#primitive-types) and it must take no arguments.\n+executable. If a `main` function is present,\n+its return type must be [`nil`](#primitive-types) and it must take no arguments.\n \n # Items and attributes\n \n@@ -2292,8 +2292,7 @@ execute after the `assert`.\n ## Types\n \n Every slot and value in a Rust program has a type. The _type_ of a *value*\n-defines the interpretation of the memory holding it. The type of a *slot* may\n-also include [constraints](#constraints).\n+defines the interpretation of the memory holding it.\n \n Built-in types and type-constructors are tightly integrated into the language,\n in nontrivial ways that are not possible to emulate in user-defined\n@@ -2562,8 +2561,8 @@ Raw pointers (`*`)\n ### Function types\n \n The function type-constructor `fn` forms new function types. A function type\n-consists of a sequence of input slots, an optional set of\n-[input constraints](#constraints) and an output slot.\n+consists of a set of function-type modifiers (`pure`, `unsafe`, `extern`, etc.),\n+a sequence of input slots and an output slot.\n \n An example of a `fn` type:\n "}]}