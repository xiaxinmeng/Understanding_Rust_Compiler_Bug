{"sha": "52fd69c9332b1cddd1a778cf96ff432cfcad5beb", "node_id": "MDY6Q29tbWl0NzI0NzEyOjUyZmQ2OWM5MzMyYjFjZGRkMWE3NzhjZjk2ZmY0MzJjZmNhZDViZWI=", "commit": {"author": {"name": "Nick Cameron", "email": "ncameron@mozilla.com", "date": "2015-07-25T05:05:34Z"}, "committer": {"name": "Nick Cameron", "email": "ncameron@mozilla.com", "date": "2015-07-25T05:05:34Z"}, "message": "save-analysis: add references to paths to get_path_data", "tree": {"sha": "f908b30282606af160f00ba8a9f1b23bf0c331bb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f908b30282606af160f00ba8a9f1b23bf0c331bb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/52fd69c9332b1cddd1a778cf96ff432cfcad5beb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/52fd69c9332b1cddd1a778cf96ff432cfcad5beb", "html_url": "https://github.com/rust-lang/rust/commit/52fd69c9332b1cddd1a778cf96ff432cfcad5beb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/52fd69c9332b1cddd1a778cf96ff432cfcad5beb/comments", "author": {"login": "nrc", "id": 762626, "node_id": "MDQ6VXNlcjc2MjYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/762626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nrc", "html_url": "https://github.com/nrc", "followers_url": "https://api.github.com/users/nrc/followers", "following_url": "https://api.github.com/users/nrc/following{/other_user}", "gists_url": "https://api.github.com/users/nrc/gists{/gist_id}", "starred_url": "https://api.github.com/users/nrc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nrc/subscriptions", "organizations_url": "https://api.github.com/users/nrc/orgs", "repos_url": "https://api.github.com/users/nrc/repos", "events_url": "https://api.github.com/users/nrc/events{/privacy}", "received_events_url": "https://api.github.com/users/nrc/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nrc", "id": 762626, "node_id": "MDQ6VXNlcjc2MjYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/762626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nrc", "html_url": "https://github.com/nrc", "followers_url": "https://api.github.com/users/nrc/followers", "following_url": "https://api.github.com/users/nrc/following{/other_user}", "gists_url": "https://api.github.com/users/nrc/gists{/gist_id}", "starred_url": "https://api.github.com/users/nrc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nrc/subscriptions", "organizations_url": "https://api.github.com/users/nrc/orgs", "repos_url": "https://api.github.com/users/nrc/repos", "events_url": "https://api.github.com/users/nrc/events{/privacy}", "received_events_url": "https://api.github.com/users/nrc/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "82d40cb2ba44a27b7db8ec185b5c532237db4b3e", "url": "https://api.github.com/repos/rust-lang/rust/commits/82d40cb2ba44a27b7db8ec185b5c532237db4b3e", "html_url": "https://github.com/rust-lang/rust/commit/82d40cb2ba44a27b7db8ec185b5c532237db4b3e"}], "stats": {"total": 17, "additions": 17, "deletions": 0}, "files": [{"sha": "077284a7c4223667ceb88760d02db0d62b960725", "filename": "src/librustc_trans/save/mod.rs", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/52fd69c9332b1cddd1a778cf96ff432cfcad5beb/src%2Flibrustc_trans%2Fsave%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/52fd69c9332b1cddd1a778cf96ff432cfcad5beb/src%2Flibrustc_trans%2Fsave%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Fsave%2Fmod.rs?ref=52fd69c9332b1cddd1a778cf96ff432cfcad5beb", "patch": "@@ -63,6 +63,8 @@ pub enum Data {\n     VariableRefData(VariableRefData),\n     /// Data for a reference to a type or trait.\n     TypeRefData(TypeRefData),\n+    /// Data for a reference to a module.\n+    ModRefData(ModRefData),\n     /// Data about a function call.\n     FunctionCallData(FunctionCallData),\n     /// Data about a method call.\n@@ -143,6 +145,14 @@ pub struct TypeRefData {\n     pub ref_id: DefId,\n }\n \n+/// Data for a reference to a module.\n+#[derive(Debug)]\n+pub struct ModRefData {\n+    pub span: Span,\n+    pub scope: NodeId,\n+    pub ref_id: DefId,\n+}\n+\n /// Data about a function call.\n #[derive(Debug)]\n pub struct FunctionCallData {\n@@ -585,6 +595,13 @@ impl<'l, 'tcx: 'l> SaveContext<'l, 'tcx> {\n                     scope: self.enclosing_scope(id),\n                 })\n             }\n+            def::DefMod(def_id) => {\n+                Data::ModRefData(ModRefData {\n+                    ref_id: def_id,\n+                    span: sub_span.unwrap(),\n+                    scope: self.enclosing_scope(id),\n+                })\n+            }\n             _ => self.tcx.sess.span_bug(path.span,\n                                         &format!(\"Unexpected def kind while looking \\\n                                                   up path in `{}`: `{:?}`\","}]}