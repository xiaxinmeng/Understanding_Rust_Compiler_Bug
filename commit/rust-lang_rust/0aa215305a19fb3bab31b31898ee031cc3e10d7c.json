{"sha": "0aa215305a19fb3bab31b31898ee031cc3e10d7c", "node_id": "MDY6Q29tbWl0NzI0NzEyOjBhYTIxNTMwNWExOWZiM2JhYjMxYjMxODk4ZWUwMzFjYzNlMTBkN2M=", "commit": {"author": {"name": "Jack Huey", "email": "jack.huey@umassmed.edu", "date": "2020-09-04T23:17:57Z"}, "committer": {"name": "Jack Huey", "email": "jack.huey@umassmed.edu", "date": "2020-09-04T23:17:57Z"}, "message": "kind -> kind()", "tree": {"sha": "a9bc5c5e993d72cb3dfeded88e152545e580583c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a9bc5c5e993d72cb3dfeded88e152545e580583c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0aa215305a19fb3bab31b31898ee031cc3e10d7c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0aa215305a19fb3bab31b31898ee031cc3e10d7c", "html_url": "https://github.com/rust-lang/rust/commit/0aa215305a19fb3bab31b31898ee031cc3e10d7c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0aa215305a19fb3bab31b31898ee031cc3e10d7c/comments", "author": {"login": "jackh726", "id": 31162821, "node_id": "MDQ6VXNlcjMxMTYyODIx", "avatar_url": "https://avatars.githubusercontent.com/u/31162821?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jackh726", "html_url": "https://github.com/jackh726", "followers_url": "https://api.github.com/users/jackh726/followers", "following_url": "https://api.github.com/users/jackh726/following{/other_user}", "gists_url": "https://api.github.com/users/jackh726/gists{/gist_id}", "starred_url": "https://api.github.com/users/jackh726/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jackh726/subscriptions", "organizations_url": "https://api.github.com/users/jackh726/orgs", "repos_url": "https://api.github.com/users/jackh726/repos", "events_url": "https://api.github.com/users/jackh726/events{/privacy}", "received_events_url": "https://api.github.com/users/jackh726/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jackh726", "id": 31162821, "node_id": "MDQ6VXNlcjMxMTYyODIx", "avatar_url": "https://avatars.githubusercontent.com/u/31162821?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jackh726", "html_url": "https://github.com/jackh726", "followers_url": "https://api.github.com/users/jackh726/followers", "following_url": "https://api.github.com/users/jackh726/following{/other_user}", "gists_url": "https://api.github.com/users/jackh726/gists{/gist_id}", "starred_url": "https://api.github.com/users/jackh726/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jackh726/subscriptions", "organizations_url": "https://api.github.com/users/jackh726/orgs", "repos_url": "https://api.github.com/users/jackh726/repos", "events_url": "https://api.github.com/users/jackh726/events{/privacy}", "received_events_url": "https://api.github.com/users/jackh726/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3a9a4e8b2d027f2f93e20fb3dee2834664dad299", "url": "https://api.github.com/repos/rust-lang/rust/commits/3a9a4e8b2d027f2f93e20fb3dee2834664dad299", "html_url": "https://github.com/rust-lang/rust/commit/3a9a4e8b2d027f2f93e20fb3dee2834664dad299"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "e89a51a81768d55085a885be1c8f00062f7a49c4", "filename": "compiler/rustc_traits/src/chalk/lowering.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0aa215305a19fb3bab31b31898ee031cc3e10d7c/compiler%2Frustc_traits%2Fsrc%2Fchalk%2Flowering.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0aa215305a19fb3bab31b31898ee031cc3e10d7c/compiler%2Frustc_traits%2Fsrc%2Fchalk%2Flowering.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_traits%2Fsrc%2Fchalk%2Flowering.rs?ref=0aa215305a19fb3bab31b31898ee031cc3e10d7c", "patch": "@@ -1009,7 +1009,7 @@ impl PlaceholdersCollector {\n \n impl<'tcx> TypeVisitor<'tcx> for PlaceholdersCollector {\n     fn visit_ty(&mut self, t: Ty<'tcx>) -> bool {\n-        match t.kind {\n+        match t.kind() {\n             ty::Placeholder(p) if p.universe == self.universe_index => {\n                 self.next_ty_placeholder = self.next_ty_placeholder.max(p.name.as_usize() + 1);\n             }"}]}