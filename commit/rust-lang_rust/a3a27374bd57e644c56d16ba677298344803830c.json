{"sha": "a3a27374bd57e644c56d16ba677298344803830c", "node_id": "MDY6Q29tbWl0NzI0NzEyOmEzYTI3Mzc0YmQ1N2U2NDRjNTZkMTZiYTY3NzI5ODM0NDgwMzgzMGM=", "commit": {"author": {"name": "Marijn Haverbeke", "email": "marijnh@gmail.com", "date": "2011-09-28T10:23:08Z"}, "committer": {"name": "Marijn Haverbeke", "email": "marijnh@gmail.com", "date": "2011-09-28T10:37:28Z"}, "message": "Don't descend into functions from relax_precond_block\n\nCloses #913", "tree": {"sha": "27d245ebfe197445d8bae61866417e7e519d46da", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/27d245ebfe197445d8bae61866417e7e519d46da"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a3a27374bd57e644c56d16ba677298344803830c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a3a27374bd57e644c56d16ba677298344803830c", "html_url": "https://github.com/rust-lang/rust/commit/a3a27374bd57e644c56d16ba677298344803830c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a3a27374bd57e644c56d16ba677298344803830c/comments", "author": {"login": "marijnh", "id": 144427, "node_id": "MDQ6VXNlcjE0NDQyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/144427?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marijnh", "html_url": "https://github.com/marijnh", "followers_url": "https://api.github.com/users/marijnh/followers", "following_url": "https://api.github.com/users/marijnh/following{/other_user}", "gists_url": "https://api.github.com/users/marijnh/gists{/gist_id}", "starred_url": "https://api.github.com/users/marijnh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marijnh/subscriptions", "organizations_url": "https://api.github.com/users/marijnh/orgs", "repos_url": "https://api.github.com/users/marijnh/repos", "events_url": "https://api.github.com/users/marijnh/events{/privacy}", "received_events_url": "https://api.github.com/users/marijnh/received_events", "type": "User", "site_admin": false}, "committer": {"login": "marijnh", "id": 144427, "node_id": "MDQ6VXNlcjE0NDQyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/144427?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marijnh", "html_url": "https://github.com/marijnh", "followers_url": "https://api.github.com/users/marijnh/followers", "following_url": "https://api.github.com/users/marijnh/following{/other_user}", "gists_url": "https://api.github.com/users/marijnh/gists{/gist_id}", "starred_url": "https://api.github.com/users/marijnh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marijnh/subscriptions", "organizations_url": "https://api.github.com/users/marijnh/orgs", "repos_url": "https://api.github.com/users/marijnh/repos", "events_url": "https://api.github.com/users/marijnh/events{/privacy}", "received_events_url": "https://api.github.com/users/marijnh/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "759fc101fbd6db4c8384ca5858ed82a729ac520f", "url": "https://api.github.com/repos/rust-lang/rust/commits/759fc101fbd6db4c8384ca5858ed82a729ac520f", "html_url": "https://github.com/rust-lang/rust/commit/759fc101fbd6db4c8384ca5858ed82a729ac520f"}], "stats": {"total": 18, "additions": 7, "deletions": 11}, "files": [{"sha": "f67c07dff55192b86e003cb3dced3f249482a7f8", "filename": "src/comp/middle/trans.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a3a27374bd57e644c56d16ba677298344803830c/src%2Fcomp%2Fmiddle%2Ftrans.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a3a27374bd57e644c56d16ba677298344803830c/src%2Fcomp%2Fmiddle%2Ftrans.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Ftrans.rs?ref=a3a27374bd57e644c56d16ba677298344803830c", "patch": "@@ -4091,7 +4091,7 @@ fn trans_rec(bcx: @block_ctxt, fields: [ast::field],\n     for tf in ty_fields {\n         let dst = GEP_tup_like_1(bcx, t, addr, [0, i]);\n         bcx = dst.bcx;\n-        // FIXME make this {|f| str::eq(f.node.ident, tf.ident)} again when\n+        // FIXME make this  again when\n         // bug #913 is fixed\n         fn test(n: str, f: ast::field) -> bool { str::eq(f.node.ident, n) }\n         alt vec::find(bind test(tf.ident, _), fields) {"}, {"sha": "63d220ddbd2a74419caa1f0ed13c810182f5b89f", "filename": "src/comp/middle/tstate/bitvectors.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/a3a27374bd57e644c56d16ba677298344803830c/src%2Fcomp%2Fmiddle%2Ftstate%2Fbitvectors.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a3a27374bd57e644c56d16ba677298344803830c/src%2Fcomp%2Fmiddle%2Ftstate%2Fbitvectors.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Ftstate%2Fbitvectors.rs?ref=a3a27374bd57e644c56d16ba677298344803830c", "patch": "@@ -150,7 +150,8 @@ fn relax_precond_block(fcx: fn_ctxt, i: node_id, b: blk) {\n           visit_expr: relax_precond_expr,\n           visit_stmt: relax_precond_stmt,\n           visit_item:\n-              fn (_i: @item, _cx: relax_ctxt, _vt: visit::vt<relax_ctxt>) { }\n+              fn (_i: @item, _cx: relax_ctxt, _vt: visit::vt<relax_ctxt>) { },\n+          visit_fn: do_nothing\n              with *visitor};\n     let v1 = visit::mk_vt(visitor);\n     v1.visit_block(b, cx, v1);"}, {"sha": "5b192e3a406413672e4fbf741198960e5b980b6f", "filename": "src/comp/middle/tstate/collect_locals.rs", "status": "modified", "additions": 4, "deletions": 9, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/a3a27374bd57e644c56d16ba677298344803830c/src%2Fcomp%2Fmiddle%2Ftstate%2Fcollect_locals.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a3a27374bd57e644c56d16ba677298344803830c/src%2Fcomp%2Fmiddle%2Ftstate%2Fcollect_locals.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Ftstate%2Fcollect_locals.rs?ref=a3a27374bd57e644c56d16ba677298344803830c", "patch": "@@ -130,19 +130,14 @@ fn mk_fn_info(ccx: crate_ctxt, f: _fn, tp: [ty_param], f_sp: span,\n     // \"diverges\" constraint\n     let diverges_id = ccx.tcx.sess.next_node_id();\n     let diverges_name = name + \"!\";\n-    add_constraint(cx.tcx, respan(f_sp, ninit(diverges_id, diverges_name)),\n-                   next, res_map);\n+    next = add_constraint(cx.tcx, respan(f_sp, ninit(diverges_id,\n+                                                     diverges_name)),\n+                          next, res_map);\n \n     let v: @mutable [node_id] = @mutable [];\n     let rslt =\n         {constrs: res_map,\n-\n-         // add 2 to account for the i_return and i_diverge constraints\n-         // FIXME the 1u here is a kludge to make bug #913's impact somewhat\n-         // smaller. it should be removed once the bug is really fixed\n-         num_constraints:\n-             vec::len(*cx.cs) + vec::len(f.decl.constraints) +\n-                 vec::len(f.decl.inputs) + 2u + 1u,\n+         num_constraints: next,\n          cf: f.decl.cf,\n          i_return: ninit(id, name),\n          i_diverge: ninit(diverges_id, diverges_name),"}]}