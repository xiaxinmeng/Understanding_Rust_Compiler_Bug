{"sha": "b17de50a4182c1e5df1abec5374a09d28dcb387a", "node_id": "C_kwDOAAsO6NoAKGIxN2RlNTBhNDE4MmMxZTVkZjFhYmVjNTM3NGEwOWQyOGRjYjM4N2E", "commit": {"author": {"name": "Yuki Okushi", "email": "jtitor@2k36.org", "date": "2021-11-16T06:59:39Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-11-16T06:59:39Z"}, "message": "Rollup merge of #90803 - TaKO8Ki:suggest-chars-on-attempt-to-iter, r=estebank\n\nSuggest `&str.chars()` on attempt to `&str.iter()`\n\ncloses #90786", "tree": {"sha": "d4e565b60aab03470a1bf30eb0be69f7aa3ebc34", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d4e565b60aab03470a1bf30eb0be69f7aa3ebc34"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b17de50a4182c1e5df1abec5374a09d28dcb387a", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJhk1bbCRBK7hj4Ov3rIwAA1fsIAIElLnSDPd9aF4jGKjz+2VZI\nfzigp3585rrjmvs0ypu66hL/4yBBUAVCvsYxF4yCfDFPpAVRg6asFoY4HZ4QMSgY\nwJKE0OiNhsYbVvjoBBMdBLvirJP8SeR/4Y25Q5ikPzNJzv1bGMBqzP2IOjtgJFs/\ntyJRkvjjMmRyiM55iHZ1qfVmtkrjy4uqRKUzhmBTNd3wLec/gQLIgLQkghJkEqel\nPq0+xaFCYr/r/42UoImenchH/T6BTd96tVH7hfLHrq2aNlH9Sv1aP1VDUp4Lv598\nK+hdTBzg6omABQa6vFvst9roGsABANfNtkKxuAdkeYi7jeNeD8Jrnpq2Y3dXfCc=\n=aGOK\n-----END PGP SIGNATURE-----\n", "payload": "tree d4e565b60aab03470a1bf30eb0be69f7aa3ebc34\nparent 21bff4a4c1c40e889ee0db41f0c8d98d440d4e6f\nparent d562f487c92698cb901df89cab0682ec2cbef222\nauthor Yuki Okushi <jtitor@2k36.org> 1637045979 +0900\ncommitter GitHub <noreply@github.com> 1637045979 +0900\n\nRollup merge of #90803 - TaKO8Ki:suggest-chars-on-attempt-to-iter, r=estebank\n\nSuggest `&str.chars()` on attempt to `&str.iter()`\n\ncloses #90786\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b17de50a4182c1e5df1abec5374a09d28dcb387a", "html_url": "https://github.com/rust-lang/rust/commit/b17de50a4182c1e5df1abec5374a09d28dcb387a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b17de50a4182c1e5df1abec5374a09d28dcb387a/comments", "author": {"login": "JohnTitor", "id": 25030997, "node_id": "MDQ6VXNlcjI1MDMwOTk3", "avatar_url": "https://avatars.githubusercontent.com/u/25030997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JohnTitor", "html_url": "https://github.com/JohnTitor", "followers_url": "https://api.github.com/users/JohnTitor/followers", "following_url": "https://api.github.com/users/JohnTitor/following{/other_user}", "gists_url": "https://api.github.com/users/JohnTitor/gists{/gist_id}", "starred_url": "https://api.github.com/users/JohnTitor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JohnTitor/subscriptions", "organizations_url": "https://api.github.com/users/JohnTitor/orgs", "repos_url": "https://api.github.com/users/JohnTitor/repos", "events_url": "https://api.github.com/users/JohnTitor/events{/privacy}", "received_events_url": "https://api.github.com/users/JohnTitor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "21bff4a4c1c40e889ee0db41f0c8d98d440d4e6f", "url": "https://api.github.com/repos/rust-lang/rust/commits/21bff4a4c1c40e889ee0db41f0c8d98d440d4e6f", "html_url": "https://github.com/rust-lang/rust/commit/21bff4a4c1c40e889ee0db41f0c8d98d440d4e6f"}, {"sha": "d562f487c92698cb901df89cab0682ec2cbef222", "url": "https://api.github.com/repos/rust-lang/rust/commits/d562f487c92698cb901df89cab0682ec2cbef222", "html_url": "https://github.com/rust-lang/rust/commit/d562f487c92698cb901df89cab0682ec2cbef222"}], "stats": {"total": 75, "additions": 75, "deletions": 0}, "files": [{"sha": "661ced952c7362c0798f34c2ec630427fbb2f594", "filename": "compiler/rustc_typeck/src/check/method/suggest.rs", "status": "modified", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/b17de50a4182c1e5df1abec5374a09d28dcb387a/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fmethod%2Fsuggest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b17de50a4182c1e5df1abec5374a09d28dcb387a/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fmethod%2Fsuggest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fmethod%2Fsuggest.rs?ref=b17de50a4182c1e5df1abec5374a09d28dcb387a", "patch": "@@ -478,6 +478,26 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n                 let mut label_span_not_found = || {\n                     if unsatisfied_predicates.is_empty() {\n                         err.span_label(span, format!(\"{item_kind} not found in `{ty_str}`\"));\n+                        let is_string_or_ref_str = match actual.kind() {\n+                            ty::Ref(_, ty, _) => {\n+                                ty.is_str()\n+                                    || matches!(\n+                                        ty.kind(),\n+                                        ty::Adt(adt, _) if self.tcx.is_diagnostic_item(sym::String, adt.did)\n+                                    )\n+                            }\n+                            ty::Adt(adt, _) => self.tcx.is_diagnostic_item(sym::String, adt.did),\n+                            _ => false,\n+                        };\n+                        if is_string_or_ref_str && item_name.name == sym::iter {\n+                            err.span_suggestion_verbose(\n+                                item_name.span,\n+                                \"because of the in-memory representation of `&str`, to obtain \\\n+                                 an `Iterator` over each of its codepoint use method `chars`\",\n+                                String::from(\"chars\"),\n+                                Applicability::MachineApplicable,\n+                            );\n+                        }\n                         if let ty::Adt(adt, _) = rcvr_ty.kind() {\n                             let mut inherent_impls_candidate = self\n                                 .tcx"}, {"sha": "95732881baf09423d8a5aeeead5bb3d21a145464", "filename": "src/test/ui/suggest-using-chars.rs", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/b17de50a4182c1e5df1abec5374a09d28dcb387a/src%2Ftest%2Fui%2Fsuggest-using-chars.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b17de50a4182c1e5df1abec5374a09d28dcb387a/src%2Ftest%2Fui%2Fsuggest-using-chars.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggest-using-chars.rs?ref=b17de50a4182c1e5df1abec5374a09d28dcb387a", "patch": "@@ -0,0 +1,7 @@\n+pub fn main() {\n+    let _ = \"foo\".iter(); //~ ERROR no method named `iter` found for reference `&'static str` in the current scope\n+    let _ = \"foo\".foo(); //~ ERROR no method named `foo` found for reference `&'static str` in the current scope\n+    let _ = String::from(\"bar\").iter(); //~ ERROR no method named `iter` found for struct `String` in the current scope\n+    let _ = (&String::from(\"bar\")).iter(); //~ ERROR no method named `iter` found for reference `&String` in the current scope\n+    let _ = 0.iter(); //~ ERROR no method named `iter` found for type `{integer}` in the current scope\n+}"}, {"sha": "99bcfb08a08924c37a61e5da1d665de968fa855b", "filename": "src/test/ui/suggest-using-chars.stderr", "status": "added", "additions": 48, "deletions": 0, "changes": 48, "blob_url": "https://github.com/rust-lang/rust/blob/b17de50a4182c1e5df1abec5374a09d28dcb387a/src%2Ftest%2Fui%2Fsuggest-using-chars.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b17de50a4182c1e5df1abec5374a09d28dcb387a/src%2Ftest%2Fui%2Fsuggest-using-chars.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggest-using-chars.stderr?ref=b17de50a4182c1e5df1abec5374a09d28dcb387a", "patch": "@@ -0,0 +1,48 @@\n+error[E0599]: no method named `iter` found for reference `&'static str` in the current scope\n+  --> $DIR/suggest-using-chars.rs:2:19\n+   |\n+LL |     let _ = \"foo\".iter();\n+   |                   ^^^^ method not found in `&'static str`\n+   |\n+help: because of the in-memory representation of `&str`, to obtain an `Iterator` over each of its codepoint use method `chars`\n+   |\n+LL |     let _ = \"foo\".chars();\n+   |                   ~~~~~\n+\n+error[E0599]: no method named `foo` found for reference `&'static str` in the current scope\n+  --> $DIR/suggest-using-chars.rs:3:19\n+   |\n+LL |     let _ = \"foo\".foo();\n+   |                   ^^^ method not found in `&'static str`\n+\n+error[E0599]: no method named `iter` found for struct `String` in the current scope\n+  --> $DIR/suggest-using-chars.rs:4:33\n+   |\n+LL |     let _ = String::from(\"bar\").iter();\n+   |                                 ^^^^ method not found in `String`\n+   |\n+help: because of the in-memory representation of `&str`, to obtain an `Iterator` over each of its codepoint use method `chars`\n+   |\n+LL |     let _ = String::from(\"bar\").chars();\n+   |                                 ~~~~~\n+\n+error[E0599]: no method named `iter` found for reference `&String` in the current scope\n+  --> $DIR/suggest-using-chars.rs:5:36\n+   |\n+LL |     let _ = (&String::from(\"bar\")).iter();\n+   |                                    ^^^^ method not found in `&String`\n+   |\n+help: because of the in-memory representation of `&str`, to obtain an `Iterator` over each of its codepoint use method `chars`\n+   |\n+LL |     let _ = (&String::from(\"bar\")).chars();\n+   |                                    ~~~~~\n+\n+error[E0599]: no method named `iter` found for type `{integer}` in the current scope\n+  --> $DIR/suggest-using-chars.rs:6:15\n+   |\n+LL |     let _ = 0.iter();\n+   |               ^^^^ method not found in `{integer}`\n+\n+error: aborting due to 5 previous errors\n+\n+For more information about this error, try `rustc --explain E0599`."}]}