{"sha": "729cd8530bc256a64aa09435d3fc7b632d79cff3", "node_id": "C_kwDOAAsO6NoAKDcyOWNkODUzMGJjMjU2YTY0YWEwOTQzNWQzZmM3YjYzMmQ3OWNmZjM", "commit": {"author": {"name": "iDawer", "email": "ilnur.iskhakov.oss@outlook.com", "date": "2022-04-26T06:50:28Z"}, "committer": {"name": "iDawer", "email": "ilnur.iskhakov.oss@outlook.com", "date": "2022-04-26T06:50:28Z"}, "message": "`signature_help`: use corresponding param list for methods", "tree": {"sha": "8c7c135cd1741b6a3a388933ef86e6ef9dc4025f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8c7c135cd1741b6a3a388933ef86e6ef9dc4025f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/729cd8530bc256a64aa09435d3fc7b632d79cff3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/729cd8530bc256a64aa09435d3fc7b632d79cff3", "html_url": "https://github.com/rust-lang/rust/commit/729cd8530bc256a64aa09435d3fc7b632d79cff3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/729cd8530bc256a64aa09435d3fc7b632d79cff3/comments", "author": {"login": "iDawer", "id": 7803845, "node_id": "MDQ6VXNlcjc4MDM4NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/7803845?v=4", "gravatar_id": "", "url": "https://api.github.com/users/iDawer", "html_url": "https://github.com/iDawer", "followers_url": "https://api.github.com/users/iDawer/followers", "following_url": "https://api.github.com/users/iDawer/following{/other_user}", "gists_url": "https://api.github.com/users/iDawer/gists{/gist_id}", "starred_url": "https://api.github.com/users/iDawer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/iDawer/subscriptions", "organizations_url": "https://api.github.com/users/iDawer/orgs", "repos_url": "https://api.github.com/users/iDawer/repos", "events_url": "https://api.github.com/users/iDawer/events{/privacy}", "received_events_url": "https://api.github.com/users/iDawer/received_events", "type": "User", "site_admin": false}, "committer": {"login": "iDawer", "id": 7803845, "node_id": "MDQ6VXNlcjc4MDM4NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/7803845?v=4", "gravatar_id": "", "url": "https://api.github.com/users/iDawer", "html_url": "https://github.com/iDawer", "followers_url": "https://api.github.com/users/iDawer/followers", "following_url": "https://api.github.com/users/iDawer/following{/other_user}", "gists_url": "https://api.github.com/users/iDawer/gists{/gist_id}", "starred_url": "https://api.github.com/users/iDawer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/iDawer/subscriptions", "organizations_url": "https://api.github.com/users/iDawer/orgs", "repos_url": "https://api.github.com/users/iDawer/repos", "events_url": "https://api.github.com/users/iDawer/events{/privacy}", "received_events_url": "https://api.github.com/users/iDawer/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1b120216de987f2e7700b7707ef6b5d5b5545d94", "url": "https://api.github.com/repos/rust-lang/rust/commits/1b120216de987f2e7700b7707ef6b5d5b5545d94", "html_url": "https://github.com/rust-lang/rust/commit/1b120216de987f2e7700b7707ef6b5d5b5545d94"}], "stats": {"total": 24, "additions": 23, "deletions": 1}, "files": [{"sha": "50187c933d3aa7b3125f505ca807671aac46644a", "filename": "crates/ide/src/signature_help.rs", "status": "modified", "additions": 23, "deletions": 1, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/729cd8530bc256a64aa09435d3fc7b632d79cff3/crates%2Fide%2Fsrc%2Fsignature_help.rs", "raw_url": "https://github.com/rust-lang/rust/raw/729cd8530bc256a64aa09435d3fc7b632d79cff3/crates%2Fide%2Fsrc%2Fsignature_help.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fsignature_help.rs?ref=729cd8530bc256a64aa09435d3fc7b632d79cff3", "patch": "@@ -115,7 +115,10 @@ fn signature_help_for_call(\n         hir::CallableKind::Function(func) => {\n             res.doc = func.docs(db).map(|it| it.into());\n             format_to!(res.signature, \"fn {}\", func.name(db));\n-            fn_params = Some(func.assoc_fn_params(db));\n+            fn_params = Some(match func.self_param(db) {\n+                Some(_self) => func.params_without_self(db),\n+                None => func.assoc_fn_params(db),\n+            });\n         }\n         hir::CallableKind::TupleStruct(strukt) => {\n             res.doc = strukt.docs(db).map(|it| it.into());\n@@ -1036,6 +1039,25 @@ fn f() {\n         );\n     }\n \n+    #[test]\n+    fn test_generic_param_in_method_call() {\n+        check(\n+            r#\"\n+struct Foo;\n+impl Foo {\n+    fn test<V>(&mut self, val: V) {}\n+}\n+fn sup() {\n+    Foo.test($0)\n+}\n+\"#,\n+            expect![[r#\"\n+                fn test(&mut self, val: V)\n+                                   ^^^^^^\n+            \"#]],\n+        );\n+    }\n+\n     #[test]\n     fn test_generic_kinds() {\n         check("}]}