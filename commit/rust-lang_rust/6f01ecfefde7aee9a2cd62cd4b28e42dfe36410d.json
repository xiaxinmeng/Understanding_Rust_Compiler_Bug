{"sha": "6f01ecfefde7aee9a2cd62cd4b28e42dfe36410d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZmMDFlY2ZlZmRlN2FlZTlhMmNkNjJjZDRiMjhlNDJkZmUzNjQxMGQ=", "commit": {"author": {"name": "flip1995", "email": "hello@philkrones.com", "date": "2019-03-27T10:46:33Z"}, "committer": {"name": "flip1995", "email": "hello@philkrones.com", "date": "2019-04-01T18:37:05Z"}, "message": "Fix question_mark lint+test", "tree": {"sha": "45acf65b1bb406a018cf877a1d7eff53ef97a3a5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/45acf65b1bb406a018cf877a1d7eff53ef97a3a5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6f01ecfefde7aee9a2cd62cd4b28e42dfe36410d", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEZxoS6lESXlRGMHWcaTCGhp1QZjcFAlyiWlEACgkQaTCGhp1Q\nZjcS9w//c2Ry4NvXlaOnSm3AUeXdJbia9NlHqR91tbsE14oWTLb+m8uPeKdn98+a\n2tCZZHC0/tbhVnJ4sl15QeA6dTUcTbHAQHztEHgHXPCydaPxU3W/4QbUWknMYy9k\nc/HCwal0R691YTi52aoUbQ4+sAfaDiePZvqWm0UQ5JJLZnddDqjoup2GkQxmwtP/\n4rUn5HnmCdsVS0tt2ODbCTu1tZ8L4dwiG3RAGgd3R27E0h0bOtUJ99Y7LfO5gtlN\nKz5HSN2K03JuYtWWBX6zAfBGQWuaOm1XdNXK8ke4JKUvKNK/OKq+AWdS5nelO9KK\nAv78gXEAGOiksfESl7PWisa+JtXG8FmdswkXuAfaK6YfqqStLz8z6771WxWw0w3Y\nH9JOW5J1qiKCgFqP5tcIWFydUN3OgizNa98xYtajzNToflsn/TSrogpSxu8NBCGn\nvWBEIp1QPeixYeOjxFsVnUjdtW742n2olHas8kqTzUmjbHQqNrTZQXbL8wT2Ii6c\nGg1R75/3t/X9fLd2J9/85JEQGTQ09Qf+oKx7Vo2c8wKISuVKCzoealulSDVpbRfG\nLd/X9DNCQ8Ru2eZqrA4m0dL36OeAxjkTUYS/8pqCclAU7OybAEX0IZUBYu4T+0gO\nhAKGNH/jpLG0TP6uUzD13hCjiJFI1XQ/CTrn4TH+jJGm7tqPtRM=\n=/+eZ\n-----END PGP SIGNATURE-----", "payload": "tree 45acf65b1bb406a018cf877a1d7eff53ef97a3a5\nparent 3cff06a0eb27dc5b6d208eb24fb22016222ea9d8\nauthor flip1995 <hello@philkrones.com> 1553683593 +0100\ncommitter flip1995 <hello@philkrones.com> 1554143825 +0200\n\nFix question_mark lint+test\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6f01ecfefde7aee9a2cd62cd4b28e42dfe36410d", "html_url": "https://github.com/rust-lang/rust/commit/6f01ecfefde7aee9a2cd62cd4b28e42dfe36410d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6f01ecfefde7aee9a2cd62cd4b28e42dfe36410d/comments", "author": {"login": "flip1995", "id": 9744647, "node_id": "MDQ6VXNlcjk3NDQ2NDc=", "avatar_url": "https://avatars.githubusercontent.com/u/9744647?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flip1995", "html_url": "https://github.com/flip1995", "followers_url": "https://api.github.com/users/flip1995/followers", "following_url": "https://api.github.com/users/flip1995/following{/other_user}", "gists_url": "https://api.github.com/users/flip1995/gists{/gist_id}", "starred_url": "https://api.github.com/users/flip1995/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flip1995/subscriptions", "organizations_url": "https://api.github.com/users/flip1995/orgs", "repos_url": "https://api.github.com/users/flip1995/repos", "events_url": "https://api.github.com/users/flip1995/events{/privacy}", "received_events_url": "https://api.github.com/users/flip1995/received_events", "type": "User", "site_admin": false}, "committer": {"login": "flip1995", "id": 9744647, "node_id": "MDQ6VXNlcjk3NDQ2NDc=", "avatar_url": "https://avatars.githubusercontent.com/u/9744647?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flip1995", "html_url": "https://github.com/flip1995", "followers_url": "https://api.github.com/users/flip1995/followers", "following_url": "https://api.github.com/users/flip1995/following{/other_user}", "gists_url": "https://api.github.com/users/flip1995/gists{/gist_id}", "starred_url": "https://api.github.com/users/flip1995/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flip1995/subscriptions", "organizations_url": "https://api.github.com/users/flip1995/orgs", "repos_url": "https://api.github.com/users/flip1995/repos", "events_url": "https://api.github.com/users/flip1995/events{/privacy}", "received_events_url": "https://api.github.com/users/flip1995/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3cff06a0eb27dc5b6d208eb24fb22016222ea9d8", "url": "https://api.github.com/repos/rust-lang/rust/commits/3cff06a0eb27dc5b6d208eb24fb22016222ea9d8", "html_url": "https://github.com/rust-lang/rust/commit/3cff06a0eb27dc5b6d208eb24fb22016222ea9d8"}], "stats": {"total": 72, "additions": 71, "deletions": 1}, "files": [{"sha": "1f4b0324700e37349af5fa7d48a92d4c2bfc85fb", "filename": "clippy_lints/src/utils/mod.rs", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/6f01ecfefde7aee9a2cd62cd4b28e42dfe36410d/clippy_lints%2Fsrc%2Futils%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6f01ecfefde7aee9a2cd62cd4b28e42dfe36410d/clippy_lints%2Fsrc%2Futils%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Futils%2Fmod.rs?ref=6f01ecfefde7aee9a2cd62cd4b28e42dfe36410d", "patch": "@@ -27,7 +27,7 @@ use rustc::hir::def::Def;\n use rustc::hir::def_id::CrateNum;\n use rustc::hir::def_id::{DefId, CRATE_DEF_INDEX, LOCAL_CRATE};\n use rustc::hir::intravisit::{NestedVisitorMap, Visitor};\n-use rustc::hir::map::DisambiguatedDefPathData;\n+use rustc::hir::map::{DefPathData, DisambiguatedDefPathData};\n use rustc::hir::Node;\n use rustc::hir::*;\n use rustc::lint::{LateContext, Level, Lint, LintContext};\n@@ -178,6 +178,13 @@ impl<'tcx> Printer<'tcx, 'tcx> for AbsolutePathPrinter<'_, 'tcx> {\n         disambiguated_data: &DisambiguatedDefPathData,\n     ) -> Result<Self::Path, Self::Error> {\n         let mut path = print_prefix(self)?;\n+\n+        // Skip `::{{constructor}}` on tuple/unit structs.\n+        match disambiguated_data.data {\n+            DefPathData::Ctor => return Ok(path),\n+            _ => {}\n+        }\n+\n         path.push(disambiguated_data.data.as_interned_str().as_str());\n         Ok(path)\n     }"}, {"sha": "522501d58c66d49bec578704bcf3e4cde2c96a4e", "filename": "tests/ui/question_mark.stderr", "status": "modified", "additions": 63, "deletions": 0, "changes": 63, "blob_url": "https://github.com/rust-lang/rust/blob/6f01ecfefde7aee9a2cd62cd4b28e42dfe36410d/tests%2Fui%2Fquestion_mark.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6f01ecfefde7aee9a2cd62cd4b28e42dfe36410d/tests%2Fui%2Fquestion_mark.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fquestion_mark.stderr?ref=6f01ecfefde7aee9a2cd62cd4b28e42dfe36410d", "patch": "@@ -0,0 +1,63 @@\n+error: this block may be rewritten with the `?` operator\n+  --> $DIR/question_mark.rs:2:5\n+   |\n+LL | /     if a.is_none() {\n+LL | |         return None;\n+LL | |     }\n+   | |_____^ help: replace_it_with: `a?;`\n+   |\n+   = note: `-D clippy::question-mark` implied by `-D warnings`\n+\n+error: this block may be rewritten with the `?` operator\n+  --> $DIR/question_mark.rs:47:9\n+   |\n+LL | /         if (self.opt).is_none() {\n+LL | |             return None;\n+LL | |         }\n+   | |_________^ help: replace_it_with: `(self.opt)?;`\n+\n+error: this block may be rewritten with the `?` operator\n+  --> $DIR/question_mark.rs:51:9\n+   |\n+LL | /         if self.opt.is_none() {\n+LL | |             return None\n+LL | |         }\n+   | |_________^ help: replace_it_with: `self.opt?;`\n+\n+error: this block may be rewritten with the `?` operator\n+  --> $DIR/question_mark.rs:55:17\n+   |\n+LL |           let _ = if self.opt.is_none() {\n+   |  _________________^\n+LL | |             return None;\n+LL | |         } else {\n+LL | |             self.opt\n+LL | |         };\n+   | |_________^ help: replace_it_with: `Some(self.opt?)`\n+\n+error: this block may be rewritten with the `?` operator\n+  --> $DIR/question_mark.rs:72:9\n+   |\n+LL | /         if self.opt.is_none() {\n+LL | |             return None;\n+LL | |         }\n+   | |_________^ help: replace_it_with: `self.opt.as_ref()?;`\n+\n+error: this block may be rewritten with the `?` operator\n+  --> $DIR/question_mark.rs:80:9\n+   |\n+LL | /         if self.opt.is_none() {\n+LL | |             return None;\n+LL | |         }\n+   | |_________^ help: replace_it_with: `self.opt.as_ref()?;`\n+\n+error: this block may be rewritten with the `?` operator\n+  --> $DIR/question_mark.rs:88:9\n+   |\n+LL | /         if self.opt.is_none() {\n+LL | |             return None;\n+LL | |         }\n+   | |_________^ help: replace_it_with: `self.opt.as_ref()?;`\n+\n+error: aborting due to 7 previous errors\n+"}]}