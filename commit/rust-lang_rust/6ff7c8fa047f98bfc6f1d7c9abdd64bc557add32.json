{"sha": "6ff7c8fa047f98bfc6f1d7c9abdd64bc557add32", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZmZjdjOGZhMDQ3Zjk4YmZjNmYxZDdjOWFiZGQ2NGJjNTU3YWRkMzI=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2017-07-31T20:20:37Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2017-07-31T20:20:37Z"}, "message": "more documentation", "tree": {"sha": "59e45724da1928eab4b187c78889a455de24be5a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/59e45724da1928eab4b187c78889a455de24be5a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6ff7c8fa047f98bfc6f1d7c9abdd64bc557add32", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6ff7c8fa047f98bfc6f1d7c9abdd64bc557add32", "html_url": "https://github.com/rust-lang/rust/commit/6ff7c8fa047f98bfc6f1d7c9abdd64bc557add32", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6ff7c8fa047f98bfc6f1d7c9abdd64bc557add32/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6641415e8744e3f82f464eba270296536b1edaa1", "url": "https://api.github.com/repos/rust-lang/rust/commits/6641415e8744e3f82f464eba270296536b1edaa1", "html_url": "https://github.com/rust-lang/rust/commit/6641415e8744e3f82f464eba270296536b1edaa1"}], "stats": {"total": 13, "additions": 12, "deletions": 1}, "files": [{"sha": "f7ef542544cceebe97c21debcc9683c45102db86", "filename": "src/librustc/mir/mod.rs", "status": "modified", "additions": 12, "deletions": 1, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/6ff7c8fa047f98bfc6f1d7c9abdd64bc557add32/src%2Flibrustc%2Fmir%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6ff7c8fa047f98bfc6f1d7c9abdd64bc557add32/src%2Flibrustc%2Fmir%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmir%2Fmod.rs?ref=6ff7c8fa047f98bfc6f1d7c9abdd64bc557add32", "patch": "@@ -825,7 +825,9 @@ pub enum StatementKind<'tcx> {\n         inputs: Vec<Operand<'tcx>>\n     },\n \n-    /// Assert the given lvalues to be valid inhabitants of their type.\n+    /// Assert the given lvalues to be valid inhabitants of their type.  These statements are\n+    /// currently only interpreted by miri and only generated when \"-Z mir-emit-validate\" is passed.\n+    /// See <https://internals.rust-lang.org/t/types-as-contracts/5562/73> for more details.\n     Validate(ValidationOp, Vec<ValidationOperand<'tcx, Lvalue<'tcx>>>),\n \n     /// Mark one terminating point of an extent (i.e. static region).\n@@ -836,10 +838,19 @@ pub enum StatementKind<'tcx> {\n     Nop,\n }\n \n+/// The `ValidationOp` describes what happens with each of the operands of a\n+/// `Validate` statement.\n #[derive(Copy, Clone, RustcEncodable, RustcDecodable, PartialEq, Eq)]\n pub enum ValidationOp {\n+    /// Recursively traverse the lvalue following the type and validate that all type\n+    /// invariants are maintained.  Furthermore, acquire exclusive/read-only access to the\n+    /// memory reachable from the lvalue.\n     Acquire,\n+    /// Recursive traverse the *mutable* part of the type and relinquish all exclusive\n+    /// access.\n     Release,\n+    /// Recursive traverse the *mutable* part of the type and relinquish all exclusive\n+    /// access *until* the given region ends.  Then, access will be recovered.\n     Suspend(CodeExtent),\n }\n "}]}