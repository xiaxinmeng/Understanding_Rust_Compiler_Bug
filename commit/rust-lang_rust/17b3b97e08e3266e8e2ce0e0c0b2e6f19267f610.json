{"sha": "17b3b97e08e3266e8e2ce0e0c0b2e6f19267f610", "node_id": "C_kwDOAAsO6NoAKDE3YjNiOTdlMDhlMzI2NmU4ZTJjZTBlMGMwYjJlNmYxOTI2N2Y2MTA", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2022-12-22T18:36:12Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-12-22T18:36:12Z"}, "message": "Rollup merge of #105567 - TimNN:kcfi16, r=nikic\n\nKCFI test: Also support LLVM 16 output\n\nWith a regex we can support the LLVM 16 output now already (and there are some third-party build bots that test Rust with LLVM head, like https://buildkite.com/llvm-project/rust-llvm-integrate-prototype/builds?branch=master).\n\ncc ```@rcvalle```", "tree": {"sha": "c1a838e38b48d55869b2aff0250f11ccb7995724", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c1a838e38b48d55869b2aff0250f11ccb7995724"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/17b3b97e08e3266e8e2ce0e0c0b2e6f19267f610", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJjpKOcCRBK7hj4Ov3rIwAA5qoIAIE28a4mfE8KpavZA+mqr/V5\nUGdfEye5ytVf0FXXKM2HiFNDCR71MN5wQqrPeYiNEALAZo0YhT0yeuOUU5duUR2T\nn5OvkuBbM1X1BpevsnoJM7SACNhpFiGF450ieexWBrM/2pfGnhHbKrECs+HOmYm5\n28/drbNOLwWaBAySVVoiEUUS3leYY36RXnDp4j8U+mgA5QPEIjD//HHqP7qPNVac\nstU3yNR9bnLAkVmlWV1lB+OOtp0x/uvpE3u6kJwdRELq2uyRbHJSuBXScV1WuF/M\n/f3jATzC3HuckXw6qE/exPLRiU8Pujl4lY0EyaQToBx5+BwwroF/Y+iWuugZcNM=\n=mksr\n-----END PGP SIGNATURE-----\n", "payload": "tree c1a838e38b48d55869b2aff0250f11ccb7995724\nparent e5e4eef02d443eae5089a330e59a69a4f350db81\nparent 295f5f514bf423e79ad67ed99c6d90944b299c10\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1671734172 +0100\ncommitter GitHub <noreply@github.com> 1671734172 +0100\n\nRollup merge of #105567 - TimNN:kcfi16, r=nikic\n\nKCFI test: Also support LLVM 16 output\n\nWith a regex we can support the LLVM 16 output now already (and there are some third-party build bots that test Rust with LLVM head, like https://buildkite.com/llvm-project/rust-llvm-integrate-prototype/builds?branch=master).\n\ncc ```@rcvalle```\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/17b3b97e08e3266e8e2ce0e0c0b2e6f19267f610", "html_url": "https://github.com/rust-lang/rust/commit/17b3b97e08e3266e8e2ce0e0c0b2e6f19267f610", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/17b3b97e08e3266e8e2ce0e0c0b2e6f19267f610/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e5e4eef02d443eae5089a330e59a69a4f350db81", "url": "https://api.github.com/repos/rust-lang/rust/commits/e5e4eef02d443eae5089a330e59a69a4f350db81", "html_url": "https://github.com/rust-lang/rust/commit/e5e4eef02d443eae5089a330e59a69a4f350db81"}, {"sha": "295f5f514bf423e79ad67ed99c6d90944b299c10", "url": "https://api.github.com/repos/rust-lang/rust/commits/295f5f514bf423e79ad67ed99c6d90944b299c10", "html_url": "https://github.com/rust-lang/rust/commit/295f5f514bf423e79ad67ed99c6d90944b299c10"}], "stats": {"total": 9, "additions": 3, "deletions": 6}, "files": [{"sha": "8e0d02550ee94a5fa859adb0edcd5c511c452965", "filename": "src/test/codegen/sanitizer-kcfi-emit-kcfi-operand-bundle-itanium-cxx-abi.rs", "status": "modified", "additions": 3, "deletions": 6, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/17b3b97e08e3266e8e2ce0e0c0b2e6f19267f610/src%2Ftest%2Fcodegen%2Fsanitizer-kcfi-emit-kcfi-operand-bundle-itanium-cxx-abi.rs", "raw_url": "https://github.com/rust-lang/rust/raw/17b3b97e08e3266e8e2ce0e0c0b2e6f19267f610/src%2Ftest%2Fcodegen%2Fsanitizer-kcfi-emit-kcfi-operand-bundle-itanium-cxx-abi.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcodegen%2Fsanitizer-kcfi-emit-kcfi-operand-bundle-itanium-cxx-abi.rs?ref=17b3b97e08e3266e8e2ce0e0c0b2e6f19267f610", "patch": "@@ -20,24 +20,21 @@ impl Copy for i32 {}\n \n pub fn foo(f: fn(i32) -> i32, arg: i32) -> i32 {\n     // CHECK-LABEL: define{{.*}}foo\n-    // FIXME(rcvalle): Change <unknown kind #36> to !kcfi_type when Rust is updated to LLVM 16\n-    // CHECK-SAME: {{.*}}!<unknown kind #36> ![[TYPE1:[0-9]+]]\n+    // CHECK-SAME: {{.*}}!{{<unknown kind #36>|kcfi_type}} ![[TYPE1:[0-9]+]]\n     // CHECK: call i32 %f(i32 %arg){{.*}}[ \"kcfi\"(i32 -1666898348) ]\n     f(arg)\n }\n \n pub fn bar(f: fn(i32, i32) -> i32, arg1: i32, arg2: i32) -> i32 {\n     // CHECK-LABEL: define{{.*}}bar\n-    // FIXME(rcvalle): Change <unknown kind #36> to !kcfi_type when Rust is updated to LLVM 16\n-    // CHECK-SAME: {{.*}}!<unknown kind #36> ![[TYPE2:[0-9]+]]\n+    // CHECK-SAME: {{.*}}!{{<unknown kind #36>|kcfi_type}} ![[TYPE2:[0-9]+]]\n     // CHECK: call i32 %f(i32 %arg1, i32 %arg2){{.*}}[ \"kcfi\"(i32 -1789026986) ]\n     f(arg1, arg2)\n }\n \n pub fn baz(f: fn(i32, i32, i32) -> i32, arg1: i32, arg2: i32, arg3: i32) -> i32 {\n     // CHECK-LABEL: define{{.*}}baz\n-    // FIXME(rcvalle): Change <unknown kind #36> to !kcfi_type when Rust is updated to LLVM 16\n-    // CHECK-SAME: {{.*}}!<unknown kind #36> ![[TYPE3:[0-9]+]]\n+    // CHECK-SAME: {{.*}}!{{<unknown kind #36>|kcfi_type}} ![[TYPE3:[0-9]+]]\n     // CHECK: call i32 %f(i32 %arg1, i32 %arg2, i32 %arg3){{.*}}[ \"kcfi\"(i32 1248878270) ]\n     f(arg1, arg2, arg3)\n }"}]}