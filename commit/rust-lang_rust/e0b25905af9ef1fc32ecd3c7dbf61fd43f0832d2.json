{"sha": "e0b25905af9ef1fc32ecd3c7dbf61fd43f0832d2", "node_id": "MDY6Q29tbWl0NzI0NzEyOmUwYjI1OTA1YWY5ZWYxZmMzMmVjZDNjN2RiZjYxZmQ0M2YwODMyZDI=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2020-05-31T10:03:26Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-05-31T10:03:26Z"}, "message": "Rollup merge of #72745 - lcnr:interned-cleanup, r=petrochenkov\n\ngeneralize Borrow<[T]> for Interned<'tcx, List<T>>", "tree": {"sha": "8db9789d8860aa9488d7b2161227412ec9c597ed", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8db9789d8860aa9488d7b2161227412ec9c597ed"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e0b25905af9ef1fc32ecd3c7dbf61fd43f0832d2", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJe04DuCRBK7hj4Ov3rIwAAdHIIAJ0gFy+pnJmrwytqPEZaLE49\n8K1hKyDxJVZLnwIpCV1tKBNGxwQ65MxUbMBXMc2GL0f/+Ij8rgNQa6m4VpqT0Zy1\niZDFcjUFMdjtp8xijz87g4nCz96ahsBiDFqJBml3If2d8IhI1aYTx9nKVk5wuRWA\n8QSN1SvNardB3r+7dX2qWuPhfvxq3fuvwTHQI3E5mQ6Px5+k/b6HlPaQIjuCoitm\nCC8C02b+V0v93avBTH8m6rO0gYXhSTwITsI5l6uxVH48wrY4fssdkrTCe7CLZTDI\nrMYy0YWp0/UMdXpWymecU04WaRrUeeVzrkczwJ1YhwCrQnNPa5jF6+Ri9t7JUMI=\n=gGHj\n-----END PGP SIGNATURE-----\n", "payload": "tree 8db9789d8860aa9488d7b2161227412ec9c597ed\nparent b714f5c9acc1732e0e9e0269073272534995bafd\nparent 15955772276e5574414a6ff630495a9898a99efb\nauthor Ralf Jung <post@ralfj.de> 1590919406 +0200\ncommitter GitHub <noreply@github.com> 1590919406 +0200\n\nRollup merge of #72745 - lcnr:interned-cleanup, r=petrochenkov\n\ngeneralize Borrow<[T]> for Interned<'tcx, List<T>>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e0b25905af9ef1fc32ecd3c7dbf61fd43f0832d2", "html_url": "https://github.com/rust-lang/rust/commit/e0b25905af9ef1fc32ecd3c7dbf61fd43f0832d2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e0b25905af9ef1fc32ecd3c7dbf61fd43f0832d2/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b714f5c9acc1732e0e9e0269073272534995bafd", "url": "https://api.github.com/repos/rust-lang/rust/commits/b714f5c9acc1732e0e9e0269073272534995bafd", "html_url": "https://github.com/rust-lang/rust/commit/b714f5c9acc1732e0e9e0269073272534995bafd"}, {"sha": "15955772276e5574414a6ff630495a9898a99efb", "url": "https://api.github.com/repos/rust-lang/rust/commits/15955772276e5574414a6ff630495a9898a99efb", "html_url": "https://github.com/rust-lang/rust/commit/15955772276e5574414a6ff630495a9898a99efb"}], "stats": {"total": 50, "additions": 2, "deletions": 48}, "files": [{"sha": "089a1613e7d3bc23b729915fd46b6d94d25bb5d7", "filename": "src/librustc_middle/ty/context.rs", "status": "modified", "additions": 2, "deletions": 48, "changes": 50, "blob_url": "https://github.com/rust-lang/rust/blob/e0b25905af9ef1fc32ecd3c7dbf61fd43f0832d2/src%2Flibrustc_middle%2Fty%2Fcontext.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e0b25905af9ef1fc32ecd3c7dbf61fd43f0832d2/src%2Flibrustc_middle%2Fty%2Fcontext.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_middle%2Fty%2Fcontext.rs?ref=e0b25905af9ef1fc32ecd3c7dbf61fd43f0832d2", "patch": "@@ -1971,32 +1971,8 @@ impl<'tcx, T: Hash> Hash for Interned<'tcx, List<T>> {\n     }\n }\n \n-impl<'tcx> Borrow<[Ty<'tcx>]> for Interned<'tcx, List<Ty<'tcx>>> {\n-    fn borrow<'a>(&'a self) -> &'a [Ty<'tcx>] {\n-        &self.0[..]\n-    }\n-}\n-\n-impl<'tcx> Borrow<[CanonicalVarInfo]> for Interned<'tcx, List<CanonicalVarInfo>> {\n-    fn borrow(&self) -> &[CanonicalVarInfo] {\n-        &self.0[..]\n-    }\n-}\n-\n-impl<'tcx> Borrow<[GenericArg<'tcx>]> for Interned<'tcx, InternalSubsts<'tcx>> {\n-    fn borrow<'a>(&'a self) -> &'a [GenericArg<'tcx>] {\n-        &self.0[..]\n-    }\n-}\n-\n-impl<'tcx> Borrow<[ProjectionKind]> for Interned<'tcx, List<ProjectionKind>> {\n-    fn borrow(&self) -> &[ProjectionKind] {\n-        &self.0[..]\n-    }\n-}\n-\n-impl<'tcx> Borrow<[PlaceElem<'tcx>]> for Interned<'tcx, List<PlaceElem<'tcx>>> {\n-    fn borrow(&self) -> &[PlaceElem<'tcx>] {\n+impl<'tcx, T> Borrow<[T]> for Interned<'tcx, List<T>> {\n+    fn borrow<'a>(&'a self) -> &'a [T] {\n         &self.0[..]\n     }\n }\n@@ -2007,34 +1983,12 @@ impl<'tcx> Borrow<RegionKind> for Interned<'tcx, RegionKind> {\n     }\n }\n \n-impl<'tcx> Borrow<[ExistentialPredicate<'tcx>]>\n-    for Interned<'tcx, List<ExistentialPredicate<'tcx>>>\n-{\n-    fn borrow<'a>(&'a self) -> &'a [ExistentialPredicate<'tcx>] {\n-        &self.0[..]\n-    }\n-}\n-\n-impl<'tcx> Borrow<[Predicate<'tcx>]> for Interned<'tcx, List<Predicate<'tcx>>> {\n-    fn borrow<'a>(&'a self) -> &'a [Predicate<'tcx>] {\n-        &self.0[..]\n-    }\n-}\n-\n impl<'tcx> Borrow<Const<'tcx>> for Interned<'tcx, Const<'tcx>> {\n     fn borrow<'a>(&'a self) -> &'a Const<'tcx> {\n         &self.0\n     }\n }\n \n-impl<'tcx> Borrow<[traits::ChalkEnvironmentClause<'tcx>]>\n-    for Interned<'tcx, List<traits::ChalkEnvironmentClause<'tcx>>>\n-{\n-    fn borrow<'a>(&'a self) -> &'a [traits::ChalkEnvironmentClause<'tcx>] {\n-        &self.0[..]\n-    }\n-}\n-\n impl<'tcx> Borrow<PredicateKind<'tcx>> for Interned<'tcx, PredicateKind<'tcx>> {\n     fn borrow<'a>(&'a self) -> &'a PredicateKind<'tcx> {\n         &self.0"}]}