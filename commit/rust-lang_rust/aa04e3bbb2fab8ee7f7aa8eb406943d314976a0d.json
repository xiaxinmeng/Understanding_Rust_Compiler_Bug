{"sha": "aa04e3bbb2fab8ee7f7aa8eb406943d314976a0d", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFhMDRlM2JiYjJmYWI4ZWU3ZjdhYThlYjQwNjk0M2QzMTQ5NzZhMGQ=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2021-02-28T18:08:51Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2021-02-28T18:08:51Z"}, "message": "Don't spam loop-rewriting assist\n\nThe more focused the assist, the better!", "tree": {"sha": "9918df0e4041ad8b77f33b34eff4b982f3d77430", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9918df0e4041ad8b77f33b34eff4b982f3d77430"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/aa04e3bbb2fab8ee7f7aa8eb406943d314976a0d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/aa04e3bbb2fab8ee7f7aa8eb406943d314976a0d", "html_url": "https://github.com/rust-lang/rust/commit/aa04e3bbb2fab8ee7f7aa8eb406943d314976a0d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/aa04e3bbb2fab8ee7f7aa8eb406943d314976a0d/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "358b9a50f73000711371a82546161956f53f8c9c", "url": "https://api.github.com/repos/rust-lang/rust/commits/358b9a50f73000711371a82546161956f53f8c9c", "html_url": "https://github.com/rust-lang/rust/commit/358b9a50f73000711371a82546161956f53f8c9c"}], "stats": {"total": 24, "additions": 22, "deletions": 2}, "files": [{"sha": "011df1c1859c7f582b1dbcef9068d926474b9a7a", "filename": "crates/ide_assists/src/handlers/convert_for_to_iter_for_each.rs", "status": "modified", "additions": 21, "deletions": 1, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/aa04e3bbb2fab8ee7f7aa8eb406943d314976a0d/crates%2Fide_assists%2Fsrc%2Fhandlers%2Fconvert_for_to_iter_for_each.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aa04e3bbb2fab8ee7f7aa8eb406943d314976a0d/crates%2Fide_assists%2Fsrc%2Fhandlers%2Fconvert_for_to_iter_for_each.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_assists%2Fsrc%2Fhandlers%2Fconvert_for_to_iter_for_each.rs?ref=aa04e3bbb2fab8ee7f7aa8eb406943d314976a0d", "patch": "@@ -3,6 +3,7 @@ use hir::known;\n use ide_db::helpers::FamousDefs;\n use stdx::format_to;\n use syntax::{ast, AstNode};\n+use test_utils::mark;\n \n use crate::{AssistContext, AssistId, AssistKind, Assists};\n \n@@ -13,7 +14,7 @@ use crate::{AssistContext, AssistId, AssistKind, Assists};\n // ```\n // fn main() {\n //     let x = vec![1, 2, 3];\n-//     for $0v in x {\n+//     for$0 v in x {\n //         let y = v * 2;\n //     }\n // }\n@@ -32,6 +33,10 @@ pub(crate) fn convert_for_to_iter_for_each(acc: &mut Assists, ctx: &AssistContex\n     let iterable = for_loop.iterable()?;\n     let pat = for_loop.pat()?;\n     let body = for_loop.loop_body()?;\n+    if body.syntax().text_range().start() < ctx.offset() {\n+        mark::hit!(not_available_in_body);\n+        return None;\n+    }\n \n     acc.add(\n         AssistId(\"convert_for_to_iter_for_each\", AssistKind::RefactorRewrite),\n@@ -180,6 +185,21 @@ fn main() {\n         )\n     }\n \n+    #[test]\n+    fn not_available_in_body() {\n+        mark::check!(not_available_in_body);\n+        check_assist_not_applicable(\n+            convert_for_to_iter_for_each,\n+            r\"\n+fn main() {\n+    let x = vec![1, 2, 3];\n+    for v in x {\n+        $0v *= 2;\n+    }\n+}\",\n+        )\n+    }\n+\n     #[test]\n     fn test_for_borrowed() {\n         check_assist_with_fixtures("}, {"sha": "be7e724b568e5ac708eac952b2fc454db2799fdd", "filename": "crates/ide_assists/src/handlers/replace_let_with_if_let.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/aa04e3bbb2fab8ee7f7aa8eb406943d314976a0d/crates%2Fide_assists%2Fsrc%2Fhandlers%2Freplace_let_with_if_let.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aa04e3bbb2fab8ee7f7aa8eb406943d314976a0d/crates%2Fide_assists%2Fsrc%2Fhandlers%2Freplace_let_with_if_let.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_assists%2Fsrc%2Fhandlers%2Freplace_let_with_if_let.rs?ref=aa04e3bbb2fab8ee7f7aa8eb406943d314976a0d", "patch": "@@ -1,5 +1,6 @@\n use std::iter::once;\n \n+use ide_db::ty_filter::TryEnum;\n use syntax::{\n     ast::{\n         self,\n@@ -10,7 +11,6 @@ use syntax::{\n };\n \n use crate::{AssistContext, AssistId, AssistKind, Assists};\n-use ide_db::ty_filter::TryEnum;\n \n // Assist: replace_let_with_if_let\n //"}]}