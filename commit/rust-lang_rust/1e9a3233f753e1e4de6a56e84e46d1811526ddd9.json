{"sha": "1e9a3233f753e1e4de6a56e84e46d1811526ddd9", "node_id": "MDY6Q29tbWl0NzI0NzEyOjFlOWEzMjMzZjc1M2UxZTRkZTZhNTZlODRlNDZkMTgxMTUyNmRkZDk=", "commit": {"author": {"name": "Edwin Cheng", "email": "edwin0cheng@gmail.com", "date": "2020-03-03T17:13:20Z"}, "committer": {"name": "Edwin Cheng", "email": "edwin0cheng@gmail.com", "date": "2020-03-03T17:21:14Z"}, "message": "Move pub function first", "tree": {"sha": "b80642c75291b86d3a1c0b6df24582dea20f73a1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b80642c75291b86d3a1c0b6df24582dea20f73a1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1e9a3233f753e1e4de6a56e84e46d1811526ddd9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1e9a3233f753e1e4de6a56e84e46d1811526ddd9", "html_url": "https://github.com/rust-lang/rust/commit/1e9a3233f753e1e4de6a56e84e46d1811526ddd9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1e9a3233f753e1e4de6a56e84e46d1811526ddd9/comments", "author": {"login": "edwin0cheng", "id": 11014119, "node_id": "MDQ6VXNlcjExMDE0MTE5", "avatar_url": "https://avatars.githubusercontent.com/u/11014119?v=4", "gravatar_id": "", "url": "https://api.github.com/users/edwin0cheng", "html_url": "https://github.com/edwin0cheng", "followers_url": "https://api.github.com/users/edwin0cheng/followers", "following_url": "https://api.github.com/users/edwin0cheng/following{/other_user}", "gists_url": "https://api.github.com/users/edwin0cheng/gists{/gist_id}", "starred_url": "https://api.github.com/users/edwin0cheng/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/edwin0cheng/subscriptions", "organizations_url": "https://api.github.com/users/edwin0cheng/orgs", "repos_url": "https://api.github.com/users/edwin0cheng/repos", "events_url": "https://api.github.com/users/edwin0cheng/events{/privacy}", "received_events_url": "https://api.github.com/users/edwin0cheng/received_events", "type": "User", "site_admin": false}, "committer": {"login": "edwin0cheng", "id": 11014119, "node_id": "MDQ6VXNlcjExMDE0MTE5", "avatar_url": "https://avatars.githubusercontent.com/u/11014119?v=4", "gravatar_id": "", "url": "https://api.github.com/users/edwin0cheng", "html_url": "https://github.com/edwin0cheng", "followers_url": "https://api.github.com/users/edwin0cheng/followers", "following_url": "https://api.github.com/users/edwin0cheng/following{/other_user}", "gists_url": "https://api.github.com/users/edwin0cheng/gists{/gist_id}", "starred_url": "https://api.github.com/users/edwin0cheng/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/edwin0cheng/subscriptions", "organizations_url": "https://api.github.com/users/edwin0cheng/orgs", "repos_url": "https://api.github.com/users/edwin0cheng/repos", "events_url": "https://api.github.com/users/edwin0cheng/events{/privacy}", "received_events_url": "https://api.github.com/users/edwin0cheng/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "02b865019b7ca07ef929d1cfe560070d12ab3f96", "url": "https://api.github.com/repos/rust-lang/rust/commits/02b865019b7ca07ef929d1cfe560070d12ab3f96", "html_url": "https://github.com/rust-lang/rust/commit/02b865019b7ca07ef929d1cfe560070d12ab3f96"}], "stats": {"total": 48, "additions": 24, "deletions": 24}, "files": [{"sha": "7fcdfab5aec74a9097235ea7c93c25ce3383fa6a", "filename": "crates/ra_hir_expand/src/eager.rs", "status": "modified", "additions": 24, "deletions": 24, "changes": 48, "blob_url": "https://github.com/rust-lang/rust/blob/1e9a3233f753e1e4de6a56e84e46d1811526ddd9/crates%2Fra_hir_expand%2Fsrc%2Feager.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1e9a3233f753e1e4de6a56e84e46d1811526ddd9/crates%2Fra_hir_expand%2Fsrc%2Feager.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_expand%2Fsrc%2Feager.rs?ref=1e9a3233f753e1e4de6a56e84e46d1811526ddd9", "patch": "@@ -29,6 +29,30 @@ use ra_parser::FragmentKind;\n use ra_syntax::{algo::replace_descendants, SyntaxElement, SyntaxNode};\n use std::{collections::HashMap, sync::Arc};\n \n+pub fn expand_eager_macro(\n+    db: &impl AstDatabase,\n+    macro_call: InFile<ast::MacroCall>,\n+    def: MacroDefId,\n+    resolver: &dyn Fn(ast::Path) -> Option<MacroDefId>,\n+) -> Option<EagerMacroId> {\n+    let args = macro_call.value.token_tree()?;\n+    let parsed_args = mbe::ast_to_token_tree(&args)?.0;\n+    let parsed_args = mbe::token_tree_to_syntax_node(&parsed_args, FragmentKind::Expr).ok()?.0;\n+    let result = eager_macro_recur(db, macro_call.with_value(parsed_args.syntax_node()), resolver)?;\n+\n+    let subtree = to_subtree(&result)?;\n+\n+    if let MacroDefKind::BuiltInEager(eager) = def.kind {\n+        let (subtree, fragment) = eager.expand(&subtree).ok()?;\n+        let eager =\n+            EagerCallLoc { def, fragment, subtree: Arc::new(subtree), file_id: macro_call.file_id };\n+\n+        Some(db.intern_eager_expansion(eager))\n+    } else {\n+        None\n+    }\n+}\n+\n fn to_subtree(node: &SyntaxNode) -> Option<tt::Subtree> {\n     let mut subtree = mbe::syntax_node_to_token_tree(node)?.0;\n     subtree.delimiter = None;\n@@ -86,27 +110,3 @@ fn eager_macro_recur(\n \n     Some(original)\n }\n-\n-pub fn expand_eager_macro(\n-    db: &impl AstDatabase,\n-    macro_call: InFile<ast::MacroCall>,\n-    def: MacroDefId,\n-    resolver: &dyn Fn(ast::Path) -> Option<MacroDefId>,\n-) -> Option<EagerMacroId> {\n-    let args = macro_call.value.token_tree()?;\n-    let parsed_args = mbe::ast_to_token_tree(&args)?.0;\n-    let parsed_args = mbe::token_tree_to_syntax_node(&parsed_args, FragmentKind::Expr).ok()?.0;\n-    let result = eager_macro_recur(db, macro_call.with_value(parsed_args.syntax_node()), resolver)?;\n-\n-    let subtree = to_subtree(&result)?;\n-\n-    if let MacroDefKind::BuiltInEager(eager) = def.kind {\n-        let (subtree, fragment) = eager.expand(&subtree).ok()?;\n-        let eager =\n-            EagerCallLoc { def, fragment, subtree: Arc::new(subtree), file_id: macro_call.file_id };\n-\n-        Some(db.intern_eager_expansion(eager))\n-    } else {\n-        None\n-    }\n-}"}]}