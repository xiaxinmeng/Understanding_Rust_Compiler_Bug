{"sha": "22baa46f784856b6d6bb4374bcc3fb4b66bb8097", "node_id": "MDY6Q29tbWl0NzI0NzEyOjIyYmFhNDZmNzg0ODU2YjZkNmJiNDM3NGJjYzNmYjRiNjZiYjgwOTc=", "commit": {"author": {"name": "Garming Sam", "email": "garming_sam@outlook.com", "date": "2015-08-09T16:45:57Z"}, "committer": {"name": "Garming Sam", "email": "garming_sam@outlook.com", "date": "2015-08-09T16:52:43Z"}, "message": "Avoid adding extra paren with two casts", "tree": {"sha": "0c63b865a41ab08240776e7c296e9bf4cf7a0d87", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0c63b865a41ab08240776e7c296e9bf4cf7a0d87"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/22baa46f784856b6d6bb4374bcc3fb4b66bb8097", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/22baa46f784856b6d6bb4374bcc3fb4b66bb8097", "html_url": "https://github.com/rust-lang/rust/commit/22baa46f784856b6d6bb4374bcc3fb4b66bb8097", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/22baa46f784856b6d6bb4374bcc3fb4b66bb8097/comments", "author": {"login": "GSam", "id": 1924133, "node_id": "MDQ6VXNlcjE5MjQxMzM=", "avatar_url": "https://avatars.githubusercontent.com/u/1924133?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GSam", "html_url": "https://github.com/GSam", "followers_url": "https://api.github.com/users/GSam/followers", "following_url": "https://api.github.com/users/GSam/following{/other_user}", "gists_url": "https://api.github.com/users/GSam/gists{/gist_id}", "starred_url": "https://api.github.com/users/GSam/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GSam/subscriptions", "organizations_url": "https://api.github.com/users/GSam/orgs", "repos_url": "https://api.github.com/users/GSam/repos", "events_url": "https://api.github.com/users/GSam/events{/privacy}", "received_events_url": "https://api.github.com/users/GSam/received_events", "type": "User", "site_admin": false}, "committer": {"login": "GSam", "id": 1924133, "node_id": "MDQ6VXNlcjE5MjQxMzM=", "avatar_url": "https://avatars.githubusercontent.com/u/1924133?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GSam", "html_url": "https://github.com/GSam", "followers_url": "https://api.github.com/users/GSam/followers", "following_url": "https://api.github.com/users/GSam/following{/other_user}", "gists_url": "https://api.github.com/users/GSam/gists{/gist_id}", "starred_url": "https://api.github.com/users/GSam/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GSam/subscriptions", "organizations_url": "https://api.github.com/users/GSam/orgs", "repos_url": "https://api.github.com/users/GSam/repos", "events_url": "https://api.github.com/users/GSam/events{/privacy}", "received_events_url": "https://api.github.com/users/GSam/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6a51de0a0a846524dc76b027f52f0afec1597383", "url": "https://api.github.com/repos/rust-lang/rust/commits/6a51de0a0a846524dc76b027f52f0afec1597383", "html_url": "https://github.com/rust-lang/rust/commit/6a51de0a0a846524dc76b027f52f0afec1597383"}], "stats": {"total": 6, "additions": 5, "deletions": 1}, "files": [{"sha": "7919bd45ced53654547d6b5b33f576287ef7d9d3", "filename": "src/libsyntax/print/pprust.rs", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/22baa46f784856b6d6bb4374bcc3fb4b66bb8097/src%2Flibsyntax%2Fprint%2Fpprust.rs", "raw_url": "https://github.com/rust-lang/rust/raw/22baa46f784856b6d6bb4374bcc3fb4b66bb8097/src%2Flibsyntax%2Fprint%2Fpprust.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fprint%2Fpprust.rs?ref=22baa46f784856b6d6bb4374bcc3fb4b66bb8097", "patch": "@@ -1753,7 +1753,11 @@ impl<'a> State<'a> {\n                 try!(self.print_literal(&**lit));\n             }\n             ast::ExprCast(ref expr, ref ty) => {\n-                try!(self.print_expr_maybe_paren(&**expr));\n+                if let ast::ExprCast(..) = expr.node {\n+                    try!(self.print_expr(&**expr));\n+                } else {\n+                    try!(self.print_expr_maybe_paren(&**expr));\n+                }\n                 try!(space(&mut self.s));\n                 try!(self.word_space(\"as\"));\n                 try!(self.print_type(&**ty));"}]}