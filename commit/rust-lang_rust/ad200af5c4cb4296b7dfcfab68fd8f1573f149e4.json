{"sha": "ad200af5c4cb4296b7dfcfab68fd8f1573f149e4", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFkMjAwYWY1YzRjYjQyOTZiN2RmY2ZhYjY4ZmQ4ZjE1NzNmMTQ5ZTQ=", "commit": {"author": {"name": "Dylan DPC", "email": "dylan.dpc@gmail.com", "date": "2020-02-29T17:54:07Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-02-29T17:54:07Z"}, "message": "Rollup merge of #69587 - petrochenkov:reqname, r=Centril\n\nrustc_parse: Tweak the function parameter name check\n\nThe function doesn't need a full token, only its edition.\n\nNoticed while implementing https://github.com/rust-lang/rust/pull/69384.\nI'm still not sure whether normalized or unnormalized token is a better fit for the edition check here, so  https://github.com/rust-lang/rust/pull/69384 and this PR just keep the status quo behavior.\nr? @Centril", "tree": {"sha": "66a80f91baf1e87c8f5251eb4ee5f0aa66802f16", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/66a80f91baf1e87c8f5251eb4ee5f0aa66802f16"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ad200af5c4cb4296b7dfcfab68fd8f1573f149e4", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJeWqU/CRBK7hj4Ov3rIwAAdHIIAEIvqWMMbbo3pRlzOeYVG4kc\n/nkABeOL8fm+hlCyEfJYnytI/GNAQaAVdbLq/RNtaW9ZyL4Zik2kHmIwQLjZfhrU\nuKWMhMzDowyC9SDtCrQOI26dL3RDWwIAwqR+PT9k2hXJMLL3h5AqN9FRxy0HPQh8\n3yCRXbtyAkmwHyP4oai5jr/eAbqATSojQe3oBIhoyw1Ir3zMxbc/q3zA0P1Z6tHu\nh5ZKdEm5hcRPaZzt8hPyhp8uLHxaulNv0F3d2rZCWm1hxDCVamWIm6F9iyRPvHmE\naZWjHPWyuWYtLZhTfrPjLlFdb5QjKQifCprOt/EarOF4Qi2rq3GPWoFf75kYAh4=\n=H0k+\n-----END PGP SIGNATURE-----\n", "payload": "tree 66a80f91baf1e87c8f5251eb4ee5f0aa66802f16\nparent cf48ca6170066602095b33e0f740d40e0d1c0836\nparent 65a666c339a515ed39e61319d5101c8b98e77ba2\nauthor Dylan DPC <dylan.dpc@gmail.com> 1582998847 +0100\ncommitter GitHub <noreply@github.com> 1582998847 +0100\n\nRollup merge of #69587 - petrochenkov:reqname, r=Centril\n\nrustc_parse: Tweak the function parameter name check\n\nThe function doesn't need a full token, only its edition.\n\nNoticed while implementing https://github.com/rust-lang/rust/pull/69384.\nI'm still not sure whether normalized or unnormalized token is a better fit for the edition check here, so  https://github.com/rust-lang/rust/pull/69384 and this PR just keep the status quo behavior.\nr? @Centril\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ad200af5c4cb4296b7dfcfab68fd8f1573f149e4", "html_url": "https://github.com/rust-lang/rust/commit/ad200af5c4cb4296b7dfcfab68fd8f1573f149e4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ad200af5c4cb4296b7dfcfab68fd8f1573f149e4/comments", "author": {"login": "Dylan-DPC", "id": 99973273, "node_id": "U_kgDOBfV4mQ", "avatar_url": "https://avatars.githubusercontent.com/u/99973273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dylan-DPC", "html_url": "https://github.com/Dylan-DPC", "followers_url": "https://api.github.com/users/Dylan-DPC/followers", "following_url": "https://api.github.com/users/Dylan-DPC/following{/other_user}", "gists_url": "https://api.github.com/users/Dylan-DPC/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dylan-DPC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dylan-DPC/subscriptions", "organizations_url": "https://api.github.com/users/Dylan-DPC/orgs", "repos_url": "https://api.github.com/users/Dylan-DPC/repos", "events_url": "https://api.github.com/users/Dylan-DPC/events{/privacy}", "received_events_url": "https://api.github.com/users/Dylan-DPC/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cf48ca6170066602095b33e0f740d40e0d1c0836", "url": "https://api.github.com/repos/rust-lang/rust/commits/cf48ca6170066602095b33e0f740d40e0d1c0836", "html_url": "https://github.com/rust-lang/rust/commit/cf48ca6170066602095b33e0f740d40e0d1c0836"}, {"sha": "65a666c339a515ed39e61319d5101c8b98e77ba2", "url": "https://api.github.com/repos/rust-lang/rust/commits/65a666c339a515ed39e61319d5101c8b98e77ba2", "html_url": "https://github.com/rust-lang/rust/commit/65a666c339a515ed39e61319d5101c8b98e77ba2"}], "stats": {"total": 7, "additions": 4, "deletions": 3}, "files": [{"sha": "d00d9fc72bfff80de4282ff36811a05e4e512d08", "filename": "src/librustc_parse/parser/item.rs", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/ad200af5c4cb4296b7dfcfab68fd8f1573f149e4/src%2Flibrustc_parse%2Fparser%2Fitem.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ad200af5c4cb4296b7dfcfab68fd8f1573f149e4/src%2Flibrustc_parse%2Fparser%2Fitem.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_parse%2Fparser%2Fitem.rs?ref=ad200af5c4cb4296b7dfcfab68fd8f1573f149e4", "patch": "@@ -6,6 +6,7 @@ use crate::maybe_whole;\n \n use rustc_ast_pretty::pprust;\n use rustc_errors::{struct_span_err, Applicability, PResult, StashKey};\n+use rustc_span::edition::Edition;\n use rustc_span::source_map::{self, Span};\n use rustc_span::symbol::{kw, sym, Symbol};\n use syntax::ast::{self, AttrStyle, AttrVec, Attribute, Ident, DUMMY_NODE_ID};\n@@ -636,7 +637,7 @@ impl<'a> Parser<'a> {\n     }\n \n     pub fn parse_trait_item(&mut self) -> PResult<'a, Option<Option<P<AssocItem>>>> {\n-        self.parse_assoc_item(|t| t.span.rust_2018())\n+        self.parse_assoc_item(|edition| edition >= Edition::Edition2018)\n     }\n \n     /// Parses associated items.\n@@ -1380,7 +1381,7 @@ impl<'a> Parser<'a> {\n /// The parsing configuration used to parse a parameter list (see `parse_fn_params`).\n ///\n /// The function decides if, per-parameter `p`, `p` must have a pattern or just a type.\n-type ReqName = fn(&token::Token) -> bool;\n+type ReqName = fn(Edition) -> bool;\n \n /// Parsing of functions and methods.\n impl<'a> Parser<'a> {\n@@ -1536,7 +1537,7 @@ impl<'a> Parser<'a> {\n \n         let is_name_required = match self.token.kind {\n             token::DotDotDot => false,\n-            _ => req_name(&self.normalized_token),\n+            _ => req_name(self.normalized_token.span.edition()),\n         };\n         let (pat, ty) = if is_name_required || self.is_named_param() {\n             debug!(\"parse_param_general parse_pat (is_name_required:{})\", is_name_required);"}]}