{"sha": "48cdb55d797a2fd8b45fd22fed7a5bec8086f19e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ4Y2RiNTVkNzk3YTJmZDhiNDVmZDIyZmVkN2E1YmVjODA4NmYxOWU=", "commit": {"author": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2014-10-03T14:39:45Z"}, "committer": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2014-10-03T14:39:45Z"}, "message": "rollup merge of #17739 : eddyb/fix-process-test", "tree": {"sha": "c1e4ae3cc8ac63e093c925db490905e39e75af8e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c1e4ae3cc8ac63e093c925db490905e39e75af8e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/48cdb55d797a2fd8b45fd22fed7a5bec8086f19e", "comment_count": 3, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/48cdb55d797a2fd8b45fd22fed7a5bec8086f19e", "html_url": "https://github.com/rust-lang/rust/commit/48cdb55d797a2fd8b45fd22fed7a5bec8086f19e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/48cdb55d797a2fd8b45fd22fed7a5bec8086f19e/comments", "author": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4b6733ec88df49f1af162a1ac6ab56502fecdfb5", "url": "https://api.github.com/repos/rust-lang/rust/commits/4b6733ec88df49f1af162a1ac6ab56502fecdfb5", "html_url": "https://github.com/rust-lang/rust/commit/4b6733ec88df49f1af162a1ac6ab56502fecdfb5"}, {"sha": "ef693885a78ee21786ae464f590fff6437e43865", "url": "https://api.github.com/repos/rust-lang/rust/commits/ef693885a78ee21786ae464f590fff6437e43865", "html_url": "https://github.com/rust-lang/rust/commit/ef693885a78ee21786ae464f590fff6437e43865"}], "stats": {"total": 79, "additions": 53, "deletions": 26}, "files": [{"sha": "ef336bc7b4f99f4a07cfbd773bfeef5551cd83bd", "filename": "src/libstd/io/process.rs", "status": "modified", "additions": 0, "deletions": 26, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/48cdb55d797a2fd8b45fd22fed7a5bec8086f19e/src%2Flibstd%2Fio%2Fprocess.rs", "raw_url": "https://github.com/rust-lang/rust/raw/48cdb55d797a2fd8b45fd22fed7a5bec8086f19e/src%2Flibstd%2Fio%2Fprocess.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fio%2Fprocess.rs?ref=48cdb55d797a2fd8b45fd22fed7a5bec8086f19e", "patch": "@@ -1025,32 +1025,6 @@ mod tests {\n                 \"didn't find RUN_TEST_NEW_ENV inside of:\\n\\n{}\", output);\n     }\n \n-    #[test]\n-    fn test_remove_from_env() {\n-        use os;\n-\n-        // save original environment\n-        let old_env = os::getenv(\"RUN_TEST_NEW_ENV\");\n-\n-        os::setenv(\"RUN_TEST_NEW_ENV\", \"123\");\n-        let prog = env_cmd().env_remove(\"RUN_TEST_NEW_ENV\").spawn().unwrap();\n-        let result = prog.wait_with_output().unwrap();\n-        let output = str::from_utf8_lossy(result.output.as_slice()).into_string();\n-\n-        // restore original environment\n-        match old_env {\n-            None => {\n-                os::unsetenv(\"RUN_TEST_NEW_ENV\");\n-            }\n-            Some(val) => {\n-                os::setenv(\"RUN_TEST_NEW_ENV\", val.as_slice());\n-            }\n-        }\n-\n-        assert!(!output.as_slice().contains(\"RUN_TEST_NEW_ENV\"),\n-                \"found RUN_TEST_NEW_ENV inside of:\\n\\n{}\", output);\n-    }\n-\n     #[cfg(unix)]\n     pub fn sleeper() -> Process {\n         Command::new(\"sleep\").arg(\"1000\").spawn().unwrap()"}, {"sha": "eab9c8a95da2c20c8e28a654890a8bf19e9f51c6", "filename": "src/test/run-pass/process-remove-from-env.rs", "status": "added", "additions": 53, "deletions": 0, "changes": 53, "blob_url": "https://github.com/rust-lang/rust/blob/48cdb55d797a2fd8b45fd22fed7a5bec8086f19e/src%2Ftest%2Frun-pass%2Fprocess-remove-from-env.rs", "raw_url": "https://github.com/rust-lang/rust/raw/48cdb55d797a2fd8b45fd22fed7a5bec8086f19e/src%2Ftest%2Frun-pass%2Fprocess-remove-from-env.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fprocess-remove-from-env.rs?ref=48cdb55d797a2fd8b45fd22fed7a5bec8086f19e", "patch": "@@ -0,0 +1,53 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+use std::io::Command;\n+use std::os;\n+\n+#[cfg(all(unix, not(target_os=\"android\")))]\n+pub fn env_cmd() -> Command {\n+    Command::new(\"env\")\n+}\n+#[cfg(target_os=\"android\")]\n+pub fn env_cmd() -> Command {\n+    let mut cmd = Command::new(\"/system/bin/sh\");\n+    cmd.arg(\"-c\").arg(\"set\");\n+    cmd\n+}\n+\n+#[cfg(windows)]\n+pub fn env_cmd() -> Command {\n+    let mut cmd = Command::new(\"cmd\");\n+    cmd.arg(\"/c\").arg(\"set\");\n+    cmd\n+}\n+\n+fn main() {\n+    // save original environment\n+    let old_env = os::getenv(\"RUN_TEST_NEW_ENV\");\n+\n+    os::setenv(\"RUN_TEST_NEW_ENV\", \"123\");\n+\n+    let mut cmd = env_cmd();\n+    cmd.env_remove(\"RUN_TEST_NEW_ENV\");\n+\n+    // restore original environment\n+    match old_env {\n+        None => os::unsetenv(\"RUN_TEST_NEW_ENV\"),\n+        Some(val) => os::setenv(\"RUN_TEST_NEW_ENV\", val.as_slice())\n+    }\n+\n+    let prog = cmd.spawn().unwrap();\n+    let result = prog.wait_with_output().unwrap();\n+    let output = String::from_utf8_lossy(result.output.as_slice());\n+\n+    assert!(!output.as_slice().contains(\"RUN_TEST_NEW_ENV\"),\n+            \"found RUN_TEST_NEW_ENV inside of:\\n\\n{}\", output);\n+}"}]}