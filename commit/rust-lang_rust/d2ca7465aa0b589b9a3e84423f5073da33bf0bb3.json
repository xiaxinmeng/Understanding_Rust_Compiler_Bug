{"sha": "d2ca7465aa0b589b9a3e84423f5073da33bf0bb3", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQyY2E3NDY1YWEwYjU4OWI5YTNlODQ0MjNmNTA3M2RhMzNiZjBiYjM=", "commit": {"author": {"name": "Cameron Zwarich", "email": "zwarich@mozilla.com", "date": "2014-06-16T22:40:20Z"}, "committer": {"name": "Cameron Zwarich", "email": "zwarich@mozilla.com", "date": "2014-06-16T22:40:20Z"}, "message": "Remove an unused closure parameter\n\nRemove the unused &Restriction parameter of each_in_scope_restriction's\nop parameter.", "tree": {"sha": "0ee5fb040c254773bb261bdec0d2951c12aac5c1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0ee5fb040c254773bb261bdec0d2951c12aac5c1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d2ca7465aa0b589b9a3e84423f5073da33bf0bb3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d2ca7465aa0b589b9a3e84423f5073da33bf0bb3", "html_url": "https://github.com/rust-lang/rust/commit/d2ca7465aa0b589b9a3e84423f5073da33bf0bb3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d2ca7465aa0b589b9a3e84423f5073da33bf0bb3/comments", "author": null, "committer": null, "parents": [{"sha": "2d3f1225342760bcf986d0a7d3945ddacce47ab2", "url": "https://api.github.com/repos/rust-lang/rust/commits/2d3f1225342760bcf986d0a7d3945ddacce47ab2", "html_url": "https://github.com/rust-lang/rust/commit/2d3f1225342760bcf986d0a7d3945ddacce47ab2"}], "stats": {"total": 8, "additions": 4, "deletions": 4}, "files": [{"sha": "3c8516a5706606265f255157057774639733270b", "filename": "src/librustc/middle/borrowck/check_loans.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/d2ca7465aa0b589b9a3e84423f5073da33bf0bb3/src%2Flibrustc%2Fmiddle%2Fborrowck%2Fcheck_loans.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d2ca7465aa0b589b9a3e84423f5073da33bf0bb3/src%2Flibrustc%2Fmiddle%2Fborrowck%2Fcheck_loans.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fborrowck%2Fcheck_loans.rs?ref=d2ca7465aa0b589b9a3e84423f5073da33bf0bb3", "patch": "@@ -192,7 +192,7 @@ impl<'a> CheckLoanCtxt<'a> {\n     pub fn each_in_scope_restriction(&self,\n                                      scope_id: ast::NodeId,\n                                      loan_path: &LoanPath,\n-                                     op: |&Loan, &Restriction| -> bool)\n+                                     op: |&Loan| -> bool)\n                                      -> bool {\n         //! Iterates through all the in-scope restrictions for the\n         //! given `loan_path`\n@@ -204,7 +204,7 @@ impl<'a> CheckLoanCtxt<'a> {\n             let mut ret = true;\n             for restr in loan.restrictions.iter() {\n                 if *restr.loan_path == *loan_path {\n-                    if !op(loan, restr) {\n+                    if !op(loan) {\n                         ret = false;\n                         break;\n                     }\n@@ -541,7 +541,7 @@ impl<'a> CheckLoanCtxt<'a> {\n         //     let x = &mut a.b.c; // Restricts a, a.b, and a.b.c\n         //     let y = a;          // Conflicts with restriction\n \n-        self.each_in_scope_restriction(expr_id, use_path, |loan, _restr| {\n+        self.each_in_scope_restriction(expr_id, use_path, |loan| {\n             if incompatible(loan.kind, borrow_kind) {\n                 ret = UseWhileBorrowed(loan.loan_path.clone(), loan.span);\n                 false\n@@ -833,7 +833,7 @@ impl<'a> CheckLoanCtxt<'a> {\n \n             let cont = this.each_in_scope_restriction(assignment_id,\n                                                       &*loan_path,\n-                                                      |loan, _restr| {\n+                                                      |loan| {\n                 this.report_illegal_mutation(assignment_span, &*loan_path, loan);\n                 false\n             });"}]}