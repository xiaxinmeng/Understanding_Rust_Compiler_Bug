{"sha": "86d5ffae8a23c0057989463b86d5e95102a457f6", "node_id": "MDY6Q29tbWl0NzI0NzEyOjg2ZDVmZmFlOGEyM2MwMDU3OTg5NDYzYjg2ZDVlOTUxMDJhNDU3ZjY=", "commit": {"author": {"name": "Luis de Bethencourt", "email": "luisbg@osg.samsung.com", "date": "2017-05-11T11:45:55Z"}, "committer": {"name": "Luis de Bethencourt", "email": "luisbg@osg.samsung.com", "date": "2017-05-11T15:22:32Z"}, "message": "clean tests/ui/matches.rs\n\nCleaning the empty lines for clarity.", "tree": {"sha": "e8731b9132dd7258fc53bf0a0fb6300bb98d38c5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e8731b9132dd7258fc53bf0a0fb6300bb98d38c5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/86d5ffae8a23c0057989463b86d5e95102a457f6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/86d5ffae8a23c0057989463b86d5e95102a457f6", "html_url": "https://github.com/rust-lang/rust/commit/86d5ffae8a23c0057989463b86d5e95102a457f6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/86d5ffae8a23c0057989463b86d5e95102a457f6/comments", "author": {"login": "luisbg", "id": 303663, "node_id": "MDQ6VXNlcjMwMzY2Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/303663?v=4", "gravatar_id": "", "url": "https://api.github.com/users/luisbg", "html_url": "https://github.com/luisbg", "followers_url": "https://api.github.com/users/luisbg/followers", "following_url": "https://api.github.com/users/luisbg/following{/other_user}", "gists_url": "https://api.github.com/users/luisbg/gists{/gist_id}", "starred_url": "https://api.github.com/users/luisbg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/luisbg/subscriptions", "organizations_url": "https://api.github.com/users/luisbg/orgs", "repos_url": "https://api.github.com/users/luisbg/repos", "events_url": "https://api.github.com/users/luisbg/events{/privacy}", "received_events_url": "https://api.github.com/users/luisbg/received_events", "type": "User", "site_admin": false}, "committer": {"login": "luisbg", "id": 303663, "node_id": "MDQ6VXNlcjMwMzY2Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/303663?v=4", "gravatar_id": "", "url": "https://api.github.com/users/luisbg", "html_url": "https://github.com/luisbg", "followers_url": "https://api.github.com/users/luisbg/followers", "following_url": "https://api.github.com/users/luisbg/following{/other_user}", "gists_url": "https://api.github.com/users/luisbg/gists{/gist_id}", "starred_url": "https://api.github.com/users/luisbg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/luisbg/subscriptions", "organizations_url": "https://api.github.com/users/luisbg/orgs", "repos_url": "https://api.github.com/users/luisbg/repos", "events_url": "https://api.github.com/users/luisbg/events{/privacy}", "received_events_url": "https://api.github.com/users/luisbg/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a5e66fa34b256b0f805e6fd0bc8092547667dc64", "url": "https://api.github.com/repos/rust-lang/rust/commits/a5e66fa34b256b0f805e6fd0bc8092547667dc64", "html_url": "https://github.com/rust-lang/rust/commit/a5e66fa34b256b0f805e6fd0bc8092547667dc64"}], "stats": {"total": 357, "additions": 127, "deletions": 230}, "files": [{"sha": "e45b0c97f2f960c8f7aa7c3661e7bf6ab958d7fa", "filename": "tests/ui/matches.rs", "status": "modified", "additions": 0, "deletions": 52, "changes": 52, "blob_url": "https://github.com/rust-lang/rust/blob/86d5ffae8a23c0057989463b86d5e95102a457f6/tests%2Fui%2Fmatches.rs", "raw_url": "https://github.com/rust-lang/rust/raw/86d5ffae8a23c0057989463b86d5e95102a457f6/tests%2Fui%2Fmatches.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmatches.rs?ref=86d5ffae8a23c0057989463b86d5e95102a457f6", "patch": "@@ -24,9 +24,6 @@ fn dummy() {\n \n fn unwrap_addr() -> Option<&'static ExprNode> {\n     match ExprNode::Butterflies {\n-\n-\n-\n         ExprNode::ExprAddrOf => Some(&NODE),\n         _ => { let x = 5; None },\n     }\n@@ -36,18 +33,12 @@ fn single_match(){\n     let x = Some(1u8);\n \n     match x {\n-\n-\n-\n         Some(y) => { println!(\"{:?}\", y); }\n         _ => ()\n     };\n \n     let z = (1u8,1u8);\n     match z {\n-\n-\n-\n         (2...3, 7...9) => dummy(),\n         _ => {}\n     };\n@@ -70,27 +61,18 @@ fn single_match_know_enum() {\n     let y : Result<_, i8> = Ok(1i8);\n \n     match x {\n-\n-\n-\n         Some(y) => dummy(),\n         None => ()\n     };\n \n     match y {\n-\n-\n-\n         Ok(y) => dummy(),\n         Err(..) => ()\n     };\n \n     let c = Cow::Borrowed(\"\");\n \n     match c {\n-\n-\n-\n         Cow::Borrowed(..) => dummy(),\n         Cow::Owned(..) => (),\n     };\n@@ -112,51 +94,32 @@ fn match_bool() {\n     let test: bool = true;\n \n     match test {\n-\n-\n-\n         true => 0,\n         false => 42,\n     };\n \n     let option = 1;\n     match option == 1 {\n-\n-\n-\n         true => 1,\n         false => 0,\n     };\n \n     match test {\n-\n-\n-\n         true => (),\n         false => { println!(\"Noooo!\"); }\n     };\n \n     match test {\n-\n-\n-\n         false => { println!(\"Noooo!\"); }\n         _ => (),\n     };\n \n     match test && test {\n-\n-\n-\n-\n         false => { println!(\"Noooo!\"); }\n         _ => (),\n     };\n \n     match test {\n-\n-\n-\n         false => { println!(\"Noooo!\"); }\n         true => { println!(\"Yes!\"); }\n     };\n@@ -173,9 +136,6 @@ fn ref_pats() {\n     {\n         let v = &Some(0);\n         match v {\n-\n-\n-\n             &Some(v) => println!(\"{:?}\", v),\n             &None => println!(\"none\"),\n         }\n@@ -186,18 +146,12 @@ fn ref_pats() {\n     }\n     let tup =& (1, 2);\n     match tup {\n-\n-\n-\n         &(v, 1) => println!(\"{}\", v),\n         _ => println!(\"none\"),\n     }\n     // special case: using & both in expr and pats\n     let w = Some(0);\n     match &w {\n-\n-\n-\n         &Some(v) => println!(\"{:?}\", v),\n         &None => println!(\"none\"),\n     }\n@@ -209,17 +163,11 @@ fn ref_pats() {\n \n     let a = &Some(0);\n     if let &None = a {\n-\n-\n-\n         println!(\"none\");\n     }\n \n     let b = Some(0);\n     if let &None = &b {\n-\n-\n-\n         println!(\"none\");\n     }\n }"}, {"sha": "a1013aa50118f5522d4c7952872c3587edc57a71", "filename": "tests/ui/matches.stderr", "status": "modified", "additions": 127, "deletions": 178, "changes": 305, "blob_url": "https://github.com/rust-lang/rust/blob/86d5ffae8a23c0057989463b86d5e95102a457f6/tests%2Fui%2Fmatches.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/86d5ffae8a23c0057989463b86d5e95102a457f6/tests%2Fui%2Fmatches.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmatches.stderr?ref=86d5ffae8a23c0057989463b86d5e95102a457f6", "patch": "@@ -2,12 +2,9 @@ error: you seem to be trying to use match for destructuring a single pattern. Co\n   --> $DIR/matches.rs:26:5\n    |\n 26 | /     match ExprNode::Butterflies {\n-27 | |\n-28 | |\n-29 | |\n-30 | |         ExprNode::ExprAddrOf => Some(&NODE),\n-31 | |         _ => { let x = 5; None },\n-32 | |     }\n+27 | |         ExprNode::ExprAddrOf => Some(&NODE),\n+28 | |         _ => { let x = 5; None },\n+29 | |     }\n    | |_____^ help: try this `if let ExprNode::ExprAddrOf = ExprNode::Butterflies { Some(&NODE) } else { let x = 5; None }`\n    |\n note: lint level defined here\n@@ -17,15 +14,12 @@ note: lint level defined here\n    |         ^^^^^^^^^^^^^^^^^\n \n error: you seem to be trying to use match for destructuring a single pattern. Consider using `if let`\n-  --> $DIR/matches.rs:38:5\n+  --> $DIR/matches.rs:35:5\n    |\n-38 | /     match x {\n-39 | |\n-40 | |\n-41 | |\n-42 | |         Some(y) => { println!(\"{:?}\", y); }\n-43 | |         _ => ()\n-44 | |     };\n+35 | /     match x {\n+36 | |         Some(y) => { println!(\"{:?}\", y); }\n+37 | |         _ => ()\n+38 | |     };\n    | |_____^ help: try this `if let Some(y) = x { println!(\"{:?}\", y); }`\n    |\n    = note: #[deny(single_match)] implied by #[deny(clippy)]\n@@ -36,140 +30,113 @@ note: lint level defined here\n    |         ^^^^^^\n \n error: you seem to be trying to use match for destructuring a single pattern. Consider using `if let`\n-  --> $DIR/matches.rs:47:5\n+  --> $DIR/matches.rs:41:5\n    |\n-47 | /     match z {\n-48 | |\n-49 | |\n-50 | |\n-51 | |         (2...3, 7...9) => dummy(),\n-52 | |         _ => {}\n-53 | |     };\n+41 | /     match z {\n+42 | |         (2...3, 7...9) => dummy(),\n+43 | |         _ => {}\n+44 | |     };\n    | |_____^ help: try this `if let (2...3, 7...9) = z { dummy() }`\n    |\n    = note: #[deny(single_match)] implied by #[deny(clippy)]\n \n error: you seem to be trying to use match for destructuring a single pattern. Consider using `if let`\n-  --> $DIR/matches.rs:72:5\n+  --> $DIR/matches.rs:63:5\n    |\n-72 | /     match x {\n-73 | |\n-74 | |\n-75 | |\n-76 | |         Some(y) => dummy(),\n-77 | |         None => ()\n-78 | |     };\n+63 | /     match x {\n+64 | |         Some(y) => dummy(),\n+65 | |         None => ()\n+66 | |     };\n    | |_____^ help: try this `if let Some(y) = x { dummy() }`\n    |\n    = note: #[deny(single_match)] implied by #[deny(clippy)]\n \n error: you seem to be trying to use match for destructuring a single pattern. Consider using `if let`\n-  --> $DIR/matches.rs:80:5\n+  --> $DIR/matches.rs:68:5\n    |\n-80 | /     match y {\n-81 | |\n-82 | |\n-83 | |\n-84 | |         Ok(y) => dummy(),\n-85 | |         Err(..) => ()\n-86 | |     };\n+68 | /     match y {\n+69 | |         Ok(y) => dummy(),\n+70 | |         Err(..) => ()\n+71 | |     };\n    | |_____^ help: try this `if let Ok(y) = y { dummy() }`\n    |\n    = note: #[deny(single_match)] implied by #[deny(clippy)]\n \n error: you seem to be trying to use match for destructuring a single pattern. Consider using `if let`\n-  --> $DIR/matches.rs:90:5\n+  --> $DIR/matches.rs:75:5\n    |\n-90 | /     match c {\n-91 | |\n-92 | |\n-93 | |\n-94 | |         Cow::Borrowed(..) => dummy(),\n-95 | |         Cow::Owned(..) => (),\n-96 | |     };\n+75 | /     match c {\n+76 | |         Cow::Borrowed(..) => dummy(),\n+77 | |         Cow::Owned(..) => (),\n+78 | |     };\n    | |_____^ help: try this `if let Cow::Borrowed(..) = c { dummy() }`\n    |\n    = note: #[deny(single_match)] implied by #[deny(clippy)]\n \n error: you seem to be trying to match on a boolean expression\n-   --> $DIR/matches.rs:114:5\n-    |\n-114 | /     match test {\n-115 | |\n-116 | |\n-117 | |\n-118 | |         true => 0,\n-119 | |         false => 42,\n-120 | |     };\n-    | |_____^ help: consider using an if/else expression `if test { 0 } else { 42 }`\n-    |\n-    = note: #[deny(match_bool)] implied by #[deny(clippy)]\n+  --> $DIR/matches.rs:96:5\n+   |\n+96 | /     match test {\n+97 | |         true => 0,\n+98 | |         false => 42,\n+99 | |     };\n+   | |_____^ help: consider using an if/else expression `if test { 0 } else { 42 }`\n+   |\n+   = note: #[deny(match_bool)] implied by #[deny(clippy)]\n note: lint level defined here\n-   --> $DIR/matches.rs:5:9\n-    |\n-5   | #![deny(clippy)]\n-    |         ^^^^^^\n+  --> $DIR/matches.rs:5:9\n+   |\n+5  | #![deny(clippy)]\n+   |         ^^^^^^\n \n error: you seem to be trying to match on a boolean expression\n-   --> $DIR/matches.rs:123:5\n-    |\n-123 | /     match option == 1 {\n-124 | |\n-125 | |\n-126 | |\n-127 | |         true => 1,\n-128 | |         false => 0,\n-129 | |     };\n+   --> $DIR/matches.rs:102:5\n+    |\n+102 | /     match option == 1 {\n+103 | |         true => 1,\n+104 | |         false => 0,\n+105 | |     };\n     | |_____^ help: consider using an if/else expression `if option == 1 { 1 } else { 0 }`\n     |\n     = note: #[deny(match_bool)] implied by #[deny(clippy)]\n \n error: you seem to be trying to match on a boolean expression\n-   --> $DIR/matches.rs:131:5\n-    |\n-131 | /     match test {\n-132 | |\n-133 | |\n-134 | |\n-135 | |         true => (),\n-136 | |         false => { println!(\"Noooo!\"); }\n-137 | |     };\n+   --> $DIR/matches.rs:107:5\n+    |\n+107 | /     match test {\n+108 | |         true => (),\n+109 | |         false => { println!(\"Noooo!\"); }\n+110 | |     };\n     | |_____^ help: consider using an if/else expression `if !test { println!(\"Noooo!\"); }`\n     |\n     = note: #[deny(match_bool)] implied by #[deny(clippy)]\n \n error: you seem to be trying to match on a boolean expression\n-   --> $DIR/matches.rs:139:5\n-    |\n-139 | /     match test {\n-140 | |\n-141 | |\n-142 | |\n-143 | |         false => { println!(\"Noooo!\"); }\n-144 | |         _ => (),\n-145 | |     };\n+   --> $DIR/matches.rs:112:5\n+    |\n+112 | /     match test {\n+113 | |         false => { println!(\"Noooo!\"); }\n+114 | |         _ => (),\n+115 | |     };\n     | |_____^ help: consider using an if/else expression `if !test { println!(\"Noooo!\"); }`\n     |\n     = note: #[deny(match_bool)] implied by #[deny(clippy)]\n \n error: you seem to be trying to match on a boolean expression\n-   --> $DIR/matches.rs:147:5\n-    |\n-147 | /     match test && test {\n-148 | |\n-149 | |\n-150 | |\n-...   |\n-153 | |         _ => (),\n-154 | |     };\n+   --> $DIR/matches.rs:117:5\n+    |\n+117 | /     match test && test {\n+118 | |         false => { println!(\"Noooo!\"); }\n+119 | |         _ => (),\n+120 | |     };\n     | |_____^ help: consider using an if/else expression `if !(test && test) { println!(\"Noooo!\"); }`\n     |\n     = note: #[deny(match_bool)] implied by #[deny(clippy)]\n \n error: equal expressions as operands to `&&`\n-   --> $DIR/matches.rs:147:11\n+   --> $DIR/matches.rs:117:11\n     |\n-147 |     match test && test {\n+117 |     match test && test {\n     |           ^^^^^^^^^^^^\n     |\n     = note: #[deny(eq_op)] implied by #[deny(clippy)]\n@@ -180,29 +147,23 @@ note: lint level defined here\n     |         ^^^^^^\n \n error: you seem to be trying to match on a boolean expression\n-   --> $DIR/matches.rs:156:5\n-    |\n-156 | /     match test {\n-157 | |\n-158 | |\n-159 | |\n-160 | |         false => { println!(\"Noooo!\"); }\n-161 | |         true => { println!(\"Yes!\"); }\n-162 | |     };\n+   --> $DIR/matches.rs:122:5\n+    |\n+122 | /     match test {\n+123 | |         false => { println!(\"Noooo!\"); }\n+124 | |         true => { println!(\"Yes!\"); }\n+125 | |     };\n     | |_____^ help: consider using an if/else expression `if test { println!(\"Yes!\"); } else { println!(\"Noooo!\"); }`\n     |\n     = note: #[deny(match_bool)] implied by #[deny(clippy)]\n \n error: you don't need to add `&` to all patterns\n-   --> $DIR/matches.rs:175:9\n-    |\n-175 | /         match v {\n-176 | |\n-177 | |\n-178 | |\n-179 | |             &Some(v) => println!(\"{:?}\", v),\n-180 | |             &None => println!(\"none\"),\n-181 | |         }\n+   --> $DIR/matches.rs:138:9\n+    |\n+138 | /         match v {\n+139 | |             &Some(v) => println!(\"{:?}\", v),\n+140 | |             &None => println!(\"none\"),\n+141 | |         }\n     | |_________^\n     |\n     = note: #[deny(match_ref_pats)] implied by #[deny(clippy)]\n@@ -215,67 +176,55 @@ help: instead of prefixing all patterns with `&`, you can dereference the expres\n     |         match *v { .. }\n \n error: you don't need to add `&` to all patterns\n-   --> $DIR/matches.rs:188:5\n-    |\n-188 | /     match tup {\n-189 | |\n-190 | |\n-191 | |\n-192 | |         &(v, 1) => println!(\"{}\", v),\n-193 | |         _ => println!(\"none\"),\n-194 | |     }\n+   --> $DIR/matches.rs:148:5\n+    |\n+148 | /     match tup {\n+149 | |         &(v, 1) => println!(\"{}\", v),\n+150 | |         _ => println!(\"none\"),\n+151 | |     }\n     | |_____^\n     |\n     = note: #[deny(match_ref_pats)] implied by #[deny(clippy)]\n help: instead of prefixing all patterns with `&`, you can dereference the expression\n     |     match *tup { .. }\n \n error: you don't need to add `&` to both the expression and the patterns\n-   --> $DIR/matches.rs:197:5\n-    |\n-197 | /     match &w {\n-198 | |\n-199 | |\n-200 | |\n-201 | |         &Some(v) => println!(\"{:?}\", v),\n-202 | |         &None => println!(\"none\"),\n-203 | |     }\n+   --> $DIR/matches.rs:154:5\n+    |\n+154 | /     match &w {\n+155 | |         &Some(v) => println!(\"{:?}\", v),\n+156 | |         &None => println!(\"none\"),\n+157 | |     }\n     | |_____^ help: try `match w { .. }`\n     |\n     = note: #[deny(match_ref_pats)] implied by #[deny(clippy)]\n \n error: you don't need to add `&` to all patterns\n-   --> $DIR/matches.rs:211:5\n-    |\n-211 | /     if let &None = a {\n-212 | |\n-213 | |\n-214 | |\n-215 | |         println!(\"none\");\n-216 | |     }\n+   --> $DIR/matches.rs:165:5\n+    |\n+165 | /     if let &None = a {\n+166 | |         println!(\"none\");\n+167 | |     }\n     | |_____^\n     |\n     = note: #[deny(match_ref_pats)] implied by #[deny(clippy)]\n help: instead of prefixing all patterns with `&`, you can dereference the expression\n     |     if let .. = *a { .. }\n \n error: you don't need to add `&` to both the expression and the patterns\n-   --> $DIR/matches.rs:219:5\n-    |\n-219 | /     if let &None = &b {\n-220 | |\n-221 | |\n-222 | |\n-223 | |         println!(\"none\");\n-224 | |     }\n+   --> $DIR/matches.rs:170:5\n+    |\n+170 | /     if let &None = &b {\n+171 | |         println!(\"none\");\n+172 | |     }\n     | |_____^ help: try `if let .. = b { .. }`\n     |\n     = note: #[deny(match_ref_pats)] implied by #[deny(clippy)]\n \n error: some ranges overlap\n-   --> $DIR/matches.rs:231:9\n+   --> $DIR/matches.rs:179:9\n     |\n-231 |         0 ... 10 => println!(\"0 ... 10\"),\n+179 |         0 ... 10 => println!(\"0 ... 10\"),\n     |         ^^^^^^^^\n     |\n     = note: #[deny(match_overlapping_arm)] implied by #[deny(clippy)]\n@@ -285,67 +234,67 @@ note: lint level defined here\n 5   | #![deny(clippy)]\n     |         ^^^^^^\n note: overlaps with this\n-   --> $DIR/matches.rs:232:9\n+   --> $DIR/matches.rs:180:9\n     |\n-232 |         0 ... 11 => println!(\"0 ... 11\"),\n+180 |         0 ... 11 => println!(\"0 ... 11\"),\n     |         ^^^^^^^^\n \n error: some ranges overlap\n-   --> $DIR/matches.rs:237:9\n+   --> $DIR/matches.rs:185:9\n     |\n-237 |         0 ... 5 => println!(\"0 ... 5\"),\n+185 |         0 ... 5 => println!(\"0 ... 5\"),\n     |         ^^^^^^^\n     |\n     = note: #[deny(match_overlapping_arm)] implied by #[deny(clippy)]\n note: overlaps with this\n-   --> $DIR/matches.rs:239:9\n+   --> $DIR/matches.rs:187:9\n     |\n-239 |         FOO ... 11 => println!(\"0 ... 11\"),\n+187 |         FOO ... 11 => println!(\"0 ... 11\"),\n     |         ^^^^^^^^^^\n \n error: some ranges overlap\n-   --> $DIR/matches.rs:245:9\n+   --> $DIR/matches.rs:193:9\n     |\n-245 |         0 ... 5 => println!(\"0 ... 5\"),\n+193 |         0 ... 5 => println!(\"0 ... 5\"),\n     |         ^^^^^^^\n     |\n     = note: #[deny(match_overlapping_arm)] implied by #[deny(clippy)]\n note: overlaps with this\n-   --> $DIR/matches.rs:244:9\n+   --> $DIR/matches.rs:192:9\n     |\n-244 |         2 => println!(\"2\"),\n+192 |         2 => println!(\"2\"),\n     |         ^\n \n error: some ranges overlap\n-   --> $DIR/matches.rs:251:9\n+   --> $DIR/matches.rs:199:9\n     |\n-251 |         0 ... 2 => println!(\"0 ... 2\"),\n+199 |         0 ... 2 => println!(\"0 ... 2\"),\n     |         ^^^^^^^\n     |\n     = note: #[deny(match_overlapping_arm)] implied by #[deny(clippy)]\n note: overlaps with this\n-   --> $DIR/matches.rs:250:9\n+   --> $DIR/matches.rs:198:9\n     |\n-250 |         2 => println!(\"2\"),\n+198 |         2 => println!(\"2\"),\n     |         ^\n \n error: some ranges overlap\n-   --> $DIR/matches.rs:274:9\n+   --> $DIR/matches.rs:222:9\n     |\n-274 |         0 .. 11 => println!(\"0 .. 11\"),\n+222 |         0 .. 11 => println!(\"0 .. 11\"),\n     |         ^^^^^^^\n     |\n     = note: #[deny(match_overlapping_arm)] implied by #[deny(clippy)]\n note: overlaps with this\n-   --> $DIR/matches.rs:275:9\n+   --> $DIR/matches.rs:223:9\n     |\n-275 |         0 ... 11 => println!(\"0 ... 11\"),\n+223 |         0 ... 11 => println!(\"0 ... 11\"),\n     |         ^^^^^^^^\n \n error: Err(_) will match all errors, maybe not a good idea\n-   --> $DIR/matches.rs:292:9\n+   --> $DIR/matches.rs:240:9\n     |\n-292 |         Err(_) => panic!(\"err\")\n+240 |         Err(_) => panic!(\"err\")\n     |         ^^^^^^\n     |\n     = note: #[deny(match_wild_err_arm)] implied by #[deny(clippy)]\n@@ -357,18 +306,18 @@ note: lint level defined here\n     = note: to remove this warning, match each error seperately or use unreachable macro\n \n error: Err(_) will match all errors, maybe not a good idea\n-   --> $DIR/matches.rs:298:9\n+   --> $DIR/matches.rs:246:9\n     |\n-298 |         Err(_) => {panic!()}\n+246 |         Err(_) => {panic!()}\n     |         ^^^^^^\n     |\n     = note: #[deny(match_wild_err_arm)] implied by #[deny(clippy)]\n     = note: to remove this warning, match each error seperately or use unreachable macro\n \n error: Err(_) will match all errors, maybe not a good idea\n-   --> $DIR/matches.rs:304:9\n+   --> $DIR/matches.rs:252:9\n     |\n-304 |         Err(_) => {panic!();}\n+252 |         Err(_) => {panic!();}\n     |         ^^^^^^\n     |\n     = note: #[deny(match_wild_err_arm)] implied by #[deny(clippy)]"}]}