{"sha": "2d86d040a5472998843008cbb6ffa58de0fd138e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJkODZkMDQwYTU0NzI5OTg4NDMwMDhjYmI2ZmZhNThkZTBmZDEzOGU=", "commit": {"author": {"name": "Oliver Scherer", "email": "github35764891676564198441@oli-obk.de", "date": "2019-05-17T09:13:55Z"}, "committer": {"name": "Oliver Scherer", "email": "github35764891676564198441@oli-obk.de", "date": "2019-08-05T15:48:05Z"}, "message": "Address comment and formatting nits", "tree": {"sha": "6897ee69d9a6c6ae44773533f41bdf173521521c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6897ee69d9a6c6ae44773533f41bdf173521521c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2d86d040a5472998843008cbb6ffa58de0fd138e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2d86d040a5472998843008cbb6ffa58de0fd138e", "html_url": "https://github.com/rust-lang/rust/commit/2d86d040a5472998843008cbb6ffa58de0fd138e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2d86d040a5472998843008cbb6ffa58de0fd138e/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f4f957d00b5e8f8de0a2818a39cc9ec6a47bc828", "url": "https://api.github.com/repos/rust-lang/rust/commits/f4f957d00b5e8f8de0a2818a39cc9ec6a47bc828", "html_url": "https://github.com/rust-lang/rust/commit/f4f957d00b5e8f8de0a2818a39cc9ec6a47bc828"}], "stats": {"total": 6, "additions": 3, "deletions": 3}, "files": [{"sha": "e5e47a51e8da56ff9a87f9b371f3bd2a2fbc16b0", "filename": "src/librustc/ty/sty.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/2d86d040a5472998843008cbb6ffa58de0fd138e/src%2Flibrustc%2Fty%2Fsty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2d86d040a5472998843008cbb6ffa58de0fd138e/src%2Flibrustc%2Fty%2Fsty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Fsty.rs?ref=2d86d040a5472998843008cbb6ffa58de0fd138e", "patch": "@@ -2298,6 +2298,7 @@ impl<'tcx> Const<'tcx> {\n         ty: Ty<'tcx>,\n     ) -> Option<u128> {\n         assert_eq!(self.ty, ty);\n+        // if `ty` does not depend on generic parameters, use an empty param_env\n         let size = tcx.layout_of(param_env.with_reveal_all().and(ty)).ok()?.size;\n         match self.val {\n             // FIXME(const_generics): this doesn't work right now,\n@@ -2315,8 +2316,7 @@ impl<'tcx> Const<'tcx> {\n                 let evaluated = tcx.const_eval(param_env.and(gid)).ok()?;\n                 evaluated.val.try_to_bits(size)\n             },\n-            // FIXME(const_generics): try to evaluate generic consts with a given param env?\n-            // E.g. when you have an associated constant whose value depends on a generic const\n+            // otherwise just extract a `ConstValue`'s bits if possible\n             _ => self.val.try_to_bits(size),\n         }\n     }"}, {"sha": "93aadda1ec532a9dd94002513150fb69f9531d4f", "filename": "src/test/ui/consts/self_normalization.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/2d86d040a5472998843008cbb6ffa58de0fd138e/src%2Ftest%2Fui%2Fconsts%2Fself_normalization.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2d86d040a5472998843008cbb6ffa58de0fd138e/src%2Ftest%2Fui%2Fconsts%2Fself_normalization.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fself_normalization.rs?ref=2d86d040a5472998843008cbb6ffa58de0fd138e", "patch": "@@ -1,6 +1,6 @@\n // compile-pass\n \n-fn testfn(_arr: &mut [();0]) {}\n+fn testfn(_arr: &mut [(); 0]) {}\n \n trait TestTrait {\n     fn method();"}]}