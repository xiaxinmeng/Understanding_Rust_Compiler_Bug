{"sha": "89dfd00dcf8016447143e985dbbd812dba4c1b3a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjg5ZGZkMDBkY2Y4MDE2NDQ3MTQzZTk4NWRiYmQ4MTJkYmE0YzFiM2E=", "commit": {"author": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2013-12-22T22:05:29Z"}, "committer": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2013-12-26T23:54:36Z"}, "message": "librustc: De-`@mut` `next_id` in the type context", "tree": {"sha": "2c1f972f0c708f3e0d64a4e27146cbd5362ba6c5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2c1f972f0c708f3e0d64a4e27146cbd5362ba6c5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/89dfd00dcf8016447143e985dbbd812dba4c1b3a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/89dfd00dcf8016447143e985dbbd812dba4c1b3a", "html_url": "https://github.com/rust-lang/rust/commit/89dfd00dcf8016447143e985dbbd812dba4c1b3a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/89dfd00dcf8016447143e985dbbd812dba4c1b3a/comments", "author": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a483ee8e33c74ffe2b06e62b934c91ec0aa762ba", "url": "https://api.github.com/repos/rust-lang/rust/commits/a483ee8e33c74ffe2b06e62b934c91ec0aa762ba", "html_url": "https://github.com/rust-lang/rust/commit/a483ee8e33c74ffe2b06e62b934c91ec0aa762ba"}], "stats": {"total": 10, "additions": 5, "deletions": 5}, "files": [{"sha": "46a9fed9674929911e69c9f6ba18d7065f9be77b", "filename": "src/librustc/middle/ty.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/89dfd00dcf8016447143e985dbbd812dba4c1b3a/src%2Flibrustc%2Fmiddle%2Fty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/89dfd00dcf8016447143e985dbbd812dba4c1b3a/src%2Flibrustc%2Fmiddle%2Fty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fty.rs?ref=89dfd00dcf8016447143e985dbbd812dba4c1b3a", "patch": "@@ -29,7 +29,7 @@ use util::ppaux::{Repr, UserString};\n use util::common::{indenter};\n \n use std::cast;\n-use std::cell::RefCell;\n+use std::cell::{Cell, RefCell};\n use std::cmp;\n use std::hashmap::{HashMap, HashSet};\n use std::ops;\n@@ -265,7 +265,7 @@ pub type ctxt = @ctxt_;\n struct ctxt_ {\n     diag: @mut syntax::diagnostic::span_handler,\n     interner: RefCell<HashMap<intern_key, ~t_box_>>,\n-    next_id: @mut uint,\n+    next_id: Cell<uint>,\n     cstore: @metadata::cstore::CStore,\n     sess: session::Session,\n     def_map: resolve::DefMap,\n@@ -970,7 +970,7 @@ pub fn mk_ctxt(s: session::Session,\n         item_variance_map: RefCell::new(HashMap::new()),\n         diag: s.diagnostic(),\n         interner: RefCell::new(HashMap::new()),\n-        next_id: @mut primitives::LAST_PRIMITIVE_ID,\n+        next_id: Cell::new(primitives::LAST_PRIMITIVE_ID),\n         cstore: s.cstore,\n         sess: s,\n         def_map: dm,\n@@ -1124,7 +1124,7 @@ pub fn mk_t(cx: ctxt, st: sty) -> t {\n \n     let t = ~t_box_ {\n         sty: st,\n-        id: *cx.next_id,\n+        id: cx.next_id.get(),\n         flags: flags,\n     };\n \n@@ -1137,7 +1137,7 @@ pub fn mk_t(cx: ctxt, st: sty) -> t {\n     let mut interner = cx.interner.borrow_mut();\n     interner.get().insert(key, t);\n \n-    *cx.next_id += 1;\n+    cx.next_id.set(cx.next_id.get() + 1);\n \n     unsafe {\n         cast::transmute::<*sty, t>(sty_ptr)"}]}