{"sha": "906b85157cc7928d86fd186a255f3fd89543aca8", "node_id": "C_kwDOAAsO6NoAKDkwNmI4NTE1N2NjNzkyOGQ4NmZkMTg2YTI1NWYzZmQ4OTU0M2FjYTg", "commit": {"author": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2022-05-13T12:20:32Z"}, "committer": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2022-06-06T12:38:38Z"}, "message": "Factor Option out of copy_cgu_workproduct_to_incr_comp_cache_dir call\n\nThis improves clarity of the code a bit", "tree": {"sha": "1fb4112c7cca2c3dd0cb9db943ae57c8f95b0bb3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1fb4112c7cca2c3dd0cb9db943ae57c8f95b0bb3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/906b85157cc7928d86fd186a255f3fd89543aca8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/906b85157cc7928d86fd186a255f3fd89543aca8", "html_url": "https://github.com/rust-lang/rust/commit/906b85157cc7928d86fd186a255f3fd89543aca8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/906b85157cc7928d86fd186a255f3fd89543aca8/comments", "author": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "065e202b563b7f690b7cc79b8fb5a61150c2976e", "url": "https://api.github.com/repos/rust-lang/rust/commits/065e202b563b7f690b7cc79b8fb5a61150c2976e", "html_url": "https://github.com/rust-lang/rust/commit/065e202b563b7f690b7cc79b8fb5a61150c2976e"}], "stats": {"total": 48, "additions": 20, "deletions": 28}, "files": [{"sha": "b652b58cb65a8206121b885b7ed621581d2f5ea8", "filename": "compiler/rustc_codegen_cranelift/src/driver/aot.rs", "status": "modified", "additions": 1, "deletions": 5, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/906b85157cc7928d86fd186a255f3fd89543aca8/compiler%2Frustc_codegen_cranelift%2Fsrc%2Fdriver%2Faot.rs", "raw_url": "https://github.com/rust-lang/rust/raw/906b85157cc7928d86fd186a255f3fd89543aca8/compiler%2Frustc_codegen_cranelift%2Fsrc%2Fdriver%2Faot.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_cranelift%2Fsrc%2Fdriver%2Faot.rs?ref=906b85157cc7928d86fd186a255f3fd89543aca8", "patch": "@@ -66,11 +66,7 @@ fn emit_module(\n     let work_product = if backend_config.disable_incr_cache {\n         None\n     } else {\n-        rustc_incremental::copy_cgu_workproduct_to_incr_comp_cache_dir(\n-            tcx.sess,\n-            &name,\n-            Some(&tmp_file),\n-        )\n+        rustc_incremental::copy_cgu_workproduct_to_incr_comp_cache_dir(tcx.sess, &name, &tmp_file)\n     };\n \n     ModuleCodegenResult("}, {"sha": "36e590665241241e365d3c602bf65ac14876f83b", "filename": "compiler/rustc_codegen_ssa/src/back/write.rs", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/906b85157cc7928d86fd186a255f3fd89543aca8/compiler%2Frustc_codegen_ssa%2Fsrc%2Fback%2Fwrite.rs", "raw_url": "https://github.com/rust-lang/rust/raw/906b85157cc7928d86fd186a255f3fd89543aca8/compiler%2Frustc_codegen_ssa%2Fsrc%2Fback%2Fwrite.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_ssa%2Fsrc%2Fback%2Fwrite.rs?ref=906b85157cc7928d86fd186a255f3fd89543aca8", "patch": "@@ -494,12 +494,12 @@ fn copy_all_cgu_workproducts_to_incr_comp_cache_dir(\n     let _timer = sess.timer(\"copy_all_cgu_workproducts_to_incr_comp_cache_dir\");\n \n     for module in compiled_modules.modules.iter().filter(|m| m.kind == ModuleKind::Regular) {\n-        let path = module.object.as_deref();\n-\n-        if let Some((id, product)) =\n-            copy_cgu_workproduct_to_incr_comp_cache_dir(sess, &module.name, path)\n-        {\n-            work_products.insert(id, product);\n+        if let Some(path) = &module.object {\n+            if let Some((id, product)) =\n+                copy_cgu_workproduct_to_incr_comp_cache_dir(sess, &module.name, path)\n+            {\n+                work_products.insert(id, product);\n+            }\n         }\n     }\n "}, {"sha": "2d5cbc28d6eac1d1cd9ee69361246181ef2da77c", "filename": "compiler/rustc_incremental/src/persist/work_product.rs", "status": "modified", "additions": 13, "deletions": 17, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/906b85157cc7928d86fd186a255f3fd89543aca8/compiler%2Frustc_incremental%2Fsrc%2Fpersist%2Fwork_product.rs", "raw_url": "https://github.com/rust-lang/rust/raw/906b85157cc7928d86fd186a255f3fd89543aca8/compiler%2Frustc_incremental%2Fsrc%2Fpersist%2Fwork_product.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_incremental%2Fsrc%2Fpersist%2Fwork_product.rs?ref=906b85157cc7928d86fd186a255f3fd89543aca8", "patch": "@@ -13,28 +13,24 @@ use std::path::Path;\n pub fn copy_cgu_workproduct_to_incr_comp_cache_dir(\n     sess: &Session,\n     cgu_name: &str,\n-    path: Option<&Path>,\n+    path: &Path,\n ) -> Option<(WorkProductId, WorkProduct)> {\n     debug!(\"copy_cgu_workproduct_to_incr_comp_cache_dir({:?},{:?})\", cgu_name, path);\n     sess.opts.incremental.as_ref()?;\n \n-    let saved_file = if let Some(path) = path {\n-        let file_name = format!(\"{}.o\", cgu_name);\n-        let path_in_incr_dir = in_incr_comp_dir_sess(sess, &file_name);\n-        match link_or_copy(path, &path_in_incr_dir) {\n-            Ok(_) => Some(file_name),\n-            Err(err) => {\n-                sess.warn(&format!(\n-                    \"error copying object file `{}` to incremental directory as `{}`: {}\",\n-                    path.display(),\n-                    path_in_incr_dir.display(),\n-                    err\n-                ));\n-                return None;\n-            }\n+    let file_name = format!(\"{}.o\", cgu_name);\n+    let path_in_incr_dir = in_incr_comp_dir_sess(sess, &file_name);\n+    let saved_file = match link_or_copy(path, &path_in_incr_dir) {\n+        Ok(_) => Some(file_name),\n+        Err(err) => {\n+            sess.warn(&format!(\n+                \"error copying object file `{}` to incremental directory as `{}`: {}\",\n+                path.display(),\n+                path_in_incr_dir.display(),\n+                err\n+            ));\n+            return None;\n         }\n-    } else {\n-        None\n     };\n \n     let work_product = WorkProduct { cgu_name: cgu_name.to_string(), saved_file };"}]}