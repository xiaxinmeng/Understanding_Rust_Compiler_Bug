{"sha": "92163f1c5e73cd8430276ba738d2cc3bca116163", "node_id": "MDY6Q29tbWl0NzI0NzEyOjkyMTYzZjFjNWU3M2NkODQzMDI3NmJhNzM4ZDJjYzNiY2ExMTYxNjM=", "commit": {"author": {"name": "est31", "email": "MTest31@outlook.com", "date": "2016-12-10T21:18:01Z"}, "committer": {"name": "est31", "email": "MTest31@outlook.com", "date": "2016-12-30T14:17:29Z"}, "message": "Windows x64 ABI requires i128 params to be passed as reference", "tree": {"sha": "edb223fb3fc8f412352c086f15a759808e3fd0c8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/edb223fb3fc8f412352c086f15a759808e3fd0c8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/92163f1c5e73cd8430276ba738d2cc3bca116163", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/92163f1c5e73cd8430276ba738d2cc3bca116163", "html_url": "https://github.com/rust-lang/rust/commit/92163f1c5e73cd8430276ba738d2cc3bca116163", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/92163f1c5e73cd8430276ba738d2cc3bca116163/comments", "author": {"login": "est31", "id": 8872119, "node_id": "MDQ6VXNlcjg4NzIxMTk=", "avatar_url": "https://avatars.githubusercontent.com/u/8872119?v=4", "gravatar_id": "", "url": "https://api.github.com/users/est31", "html_url": "https://github.com/est31", "followers_url": "https://api.github.com/users/est31/followers", "following_url": "https://api.github.com/users/est31/following{/other_user}", "gists_url": "https://api.github.com/users/est31/gists{/gist_id}", "starred_url": "https://api.github.com/users/est31/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/est31/subscriptions", "organizations_url": "https://api.github.com/users/est31/orgs", "repos_url": "https://api.github.com/users/est31/repos", "events_url": "https://api.github.com/users/est31/events{/privacy}", "received_events_url": "https://api.github.com/users/est31/received_events", "type": "User", "site_admin": false}, "committer": {"login": "est31", "id": 8872119, "node_id": "MDQ6VXNlcjg4NzIxMTk=", "avatar_url": "https://avatars.githubusercontent.com/u/8872119?v=4", "gravatar_id": "", "url": "https://api.github.com/users/est31", "html_url": "https://github.com/est31", "followers_url": "https://api.github.com/users/est31/followers", "following_url": "https://api.github.com/users/est31/following{/other_user}", "gists_url": "https://api.github.com/users/est31/gists{/gist_id}", "starred_url": "https://api.github.com/users/est31/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/est31/subscriptions", "organizations_url": "https://api.github.com/users/est31/orgs", "repos_url": "https://api.github.com/users/est31/repos", "events_url": "https://api.github.com/users/est31/events{/privacy}", "received_events_url": "https://api.github.com/users/est31/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ca73affe8d060eaea9ff44950e758ed17fb4034a", "url": "https://api.github.com/repos/rust-lang/rust/commits/ca73affe8d060eaea9ff44950e758ed17fb4034a", "html_url": "https://github.com/rust-lang/rust/commit/ca73affe8d060eaea9ff44950e758ed17fb4034a"}], "stats": {"total": 24, "additions": 14, "deletions": 10}, "files": [{"sha": "a849f38247380d1dd7e808a77aaa7d2b2bd2cacc", "filename": "src/librustc_trans/cabi_x86_win64.rs", "status": "modified", "additions": 14, "deletions": 10, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/92163f1c5e73cd8430276ba738d2cc3bca116163/src%2Flibrustc_trans%2Fcabi_x86_win64.rs", "raw_url": "https://github.com/rust-lang/rust/raw/92163f1c5e73cd8430276ba738d2cc3bca116163/src%2Flibrustc_trans%2Fcabi_x86_win64.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Fcabi_x86_win64.rs?ref=92163f1c5e73cd8430276ba738d2cc3bca116163", "patch": "@@ -18,16 +18,20 @@ use type_::Type;\n \n pub fn compute_abi_info(ccx: &CrateContext, fty: &mut FnType) {\n     let fixup = |a: &mut ArgType| {\n-        if a.ty.kind() == Struct {\n-            match llsize_of_alloc(ccx, a.ty) {\n-                1 => a.cast = Some(Type::i8(ccx)),\n-                2 => a.cast = Some(Type::i16(ccx)),\n-                4 => a.cast = Some(Type::i32(ccx)),\n-                8 => a.cast = Some(Type::i64(ccx)),\n-                _ => a.make_indirect(ccx)\n-            }\n-        } else {\n-            a.extend_integer_width_to(32);\n+        match a.ty.kind() {\n+            Struct => match llsize_of_alloc(ccx, a.ty) {\n+                          1 => a.cast = Some(Type::i8(ccx)),\n+                          2 => a.cast = Some(Type::i16(ccx)),\n+                          4 => a.cast = Some(Type::i32(ccx)),\n+                          8 => a.cast = Some(Type::i64(ccx)),\n+                          _ => a.make_indirect(ccx)\n+                      },\n+            Integer => match llsize_of_alloc(ccx, a.ty) {\n+                           1 ... 8 => a.extend_integer_width_to(32),\n+                           16 => a.make_indirect(ccx),\n+                           _ => bug!(),\n+            },\n+            _ => (),\n         }\n     };\n "}]}