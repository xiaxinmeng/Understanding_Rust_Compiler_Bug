{"sha": "5eafab30ba0721451f5114c5b27b37870bb3955a", "node_id": "C_kwDOAAsO6NoAKDVlYWZhYjMwYmEwNzIxNDUxZjUxMTRjNWIyN2IzNzg3MGJiMzk1NWE", "commit": {"author": {"name": "bohan", "email": "bohan-zhang@foxmail.com", "date": "2023-06-06T16:26:16Z"}, "committer": {"name": "bohan", "email": "bohan-zhang@foxmail.com", "date": "2023-06-07T02:20:36Z"}, "message": "feat(expand): emit note for doc comment in macro matcher", "tree": {"sha": "2131c1f71121cdace463a29d03ee7697c13a3964", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2131c1f71121cdace463a29d03ee7697c13a3964"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5eafab30ba0721451f5114c5b27b37870bb3955a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5eafab30ba0721451f5114c5b27b37870bb3955a", "html_url": "https://github.com/rust-lang/rust/commit/5eafab30ba0721451f5114c5b27b37870bb3955a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5eafab30ba0721451f5114c5b27b37870bb3955a/comments", "author": {"login": "bvanjoi", "id": 30187863, "node_id": "MDQ6VXNlcjMwMTg3ODYz", "avatar_url": "https://avatars.githubusercontent.com/u/30187863?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bvanjoi", "html_url": "https://github.com/bvanjoi", "followers_url": "https://api.github.com/users/bvanjoi/followers", "following_url": "https://api.github.com/users/bvanjoi/following{/other_user}", "gists_url": "https://api.github.com/users/bvanjoi/gists{/gist_id}", "starred_url": "https://api.github.com/users/bvanjoi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bvanjoi/subscriptions", "organizations_url": "https://api.github.com/users/bvanjoi/orgs", "repos_url": "https://api.github.com/users/bvanjoi/repos", "events_url": "https://api.github.com/users/bvanjoi/events{/privacy}", "received_events_url": "https://api.github.com/users/bvanjoi/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bvanjoi", "id": 30187863, "node_id": "MDQ6VXNlcjMwMTg3ODYz", "avatar_url": "https://avatars.githubusercontent.com/u/30187863?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bvanjoi", "html_url": "https://github.com/bvanjoi", "followers_url": "https://api.github.com/users/bvanjoi/followers", "following_url": "https://api.github.com/users/bvanjoi/following{/other_user}", "gists_url": "https://api.github.com/users/bvanjoi/gists{/gist_id}", "starred_url": "https://api.github.com/users/bvanjoi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bvanjoi/subscriptions", "organizations_url": "https://api.github.com/users/bvanjoi/orgs", "repos_url": "https://api.github.com/users/bvanjoi/repos", "events_url": "https://api.github.com/users/bvanjoi/events{/privacy}", "received_events_url": "https://api.github.com/users/bvanjoi/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c927743b7b7bd382836dcce2d1140a7e829dc3d0", "url": "https://api.github.com/repos/rust-lang/rust/commits/c927743b7b7bd382836dcce2d1140a7e829dc3d0", "html_url": "https://github.com/rust-lang/rust/commit/c927743b7b7bd382836dcce2d1140a7e829dc3d0"}], "stats": {"total": 131, "additions": 119, "deletions": 12}, "files": [{"sha": "ee9616a0f0a9df94b36dc5d18b23e2657be39c10", "filename": "compiler/rustc_expand/src/mbe/macro_rules.rs", "status": "modified", "additions": 35, "deletions": 11, "changes": 46, "blob_url": "https://github.com/rust-lang/rust/blob/5eafab30ba0721451f5114c5b27b37870bb3955a/compiler%2Frustc_expand%2Fsrc%2Fmbe%2Fmacro_rules.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5eafab30ba0721451f5114c5b27b37870bb3955a/compiler%2Frustc_expand%2Fsrc%2Fmbe%2Fmacro_rules.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_expand%2Fsrc%2Fmbe%2Fmacro_rules.rs?ref=5eafab30ba0721451f5114c5b27b37870bb3955a", "patch": "@@ -628,6 +628,40 @@ fn check_lhs_nt_follows(sess: &ParseSess, def: &ast::Item, lhs: &mbe::TokenTree)\n     // after parsing/expansion. we can report every error in every macro this way.\n }\n \n+fn is_empty_token_tree(sess: &ParseSess, seq: &mbe::SequenceRepetition) -> bool {\n+    if seq.separator.is_some() {\n+        false\n+    } else {\n+        let mut is_empty = true;\n+        let mut iter = seq.tts.iter().peekable();\n+        while let Some(tt) = iter.next() {\n+            match tt {\n+                mbe::TokenTree::MetaVarDecl(_, _, Some(NonterminalKind::Vis)) => {}\n+                mbe::TokenTree::Token(t @ Token { kind: DocComment(..), .. }) => {\n+                    let mut now = t;\n+                    while let Some(&mbe::TokenTree::Token(\n+                        next @ Token { kind: DocComment(..), .. },\n+                    )) = iter.peek()\n+                    {\n+                        now = next;\n+                        iter.next();\n+                    }\n+                    let span = t.span.to(now.span);\n+                    sess.span_diagnostic.span_note_without_error(\n+                        span,\n+                        \"doc comments are ignored in matcher position\",\n+                    );\n+                }\n+                mbe::TokenTree::Sequence(_, sub_seq)\n+                    if (sub_seq.kleene.op == mbe::KleeneOp::ZeroOrMore\n+                        || sub_seq.kleene.op == mbe::KleeneOp::ZeroOrOne) => {}\n+                _ => is_empty = false,\n+            }\n+        }\n+        is_empty\n+    }\n+}\n+\n /// Checks that the lhs contains no repetition which could match an empty token\n /// tree, because then the matcher would hang indefinitely.\n fn check_lhs_no_empty_seq(sess: &ParseSess, tts: &[mbe::TokenTree]) -> bool {\n@@ -644,17 +678,7 @@ fn check_lhs_no_empty_seq(sess: &ParseSess, tts: &[mbe::TokenTree]) -> bool {\n                 }\n             }\n             TokenTree::Sequence(span, seq) => {\n-                if seq.separator.is_none()\n-                    && seq.tts.iter().all(|seq_tt| match seq_tt {\n-                        TokenTree::MetaVarDecl(_, _, Some(NonterminalKind::Vis)) => true,\n-                        TokenTree::Token(t) => matches!(t, Token { kind: DocComment(..), .. }),\n-                        TokenTree::Sequence(_, sub_seq) => {\n-                            sub_seq.kleene.op == mbe::KleeneOp::ZeroOrMore\n-                                || sub_seq.kleene.op == mbe::KleeneOp::ZeroOrOne\n-                        }\n-                        _ => false,\n-                    })\n-                {\n+                if is_empty_token_tree(sess, seq) {\n                     let sp = span.entire();\n                     sess.span_diagnostic.span_err(sp, \"repetition matches empty token tree\");\n                     return false;"}, {"sha": "bd2abe7f697f4f8d66e56cff3681b75ab73f6d55", "filename": "tests/ui/macros/issue-112342-1.rs", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/5eafab30ba0721451f5114c5b27b37870bb3955a/tests%2Fui%2Fmacros%2Fissue-112342-1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5eafab30ba0721451f5114c5b27b37870bb3955a/tests%2Fui%2Fmacros%2Fissue-112342-1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmacros%2Fissue-112342-1.rs?ref=5eafab30ba0721451f5114c5b27b37870bb3955a", "patch": "@@ -33,4 +33,17 @@ macro_rules! m3 {\n \n m3! {}\n \n+\n+macro_rules! m4 {\n+    (\n+        $(\n+            ///\n+            ///\n+        )*\n+        //~^^^^ERROR repetition matches empty token tree\n+    ) => {};\n+}\n+\n+m4! {}\n+\n fn main() {}"}, {"sha": "f2d82bf599e99fdff6eacc658290356e4b310586", "filename": "tests/ui/macros/issue-112342-1.stderr", "status": "modified", "additions": 36, "deletions": 1, "changes": 37, "blob_url": "https://github.com/rust-lang/rust/blob/5eafab30ba0721451f5114c5b27b37870bb3955a/tests%2Fui%2Fmacros%2Fissue-112342-1.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/5eafab30ba0721451f5114c5b27b37870bb3955a/tests%2Fui%2Fmacros%2Fissue-112342-1.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmacros%2Fissue-112342-1.stderr?ref=5eafab30ba0721451f5114c5b27b37870bb3955a", "patch": "@@ -1,3 +1,9 @@\n+note: doc comments are ignored in matcher position\n+  --> $DIR/issue-112342-1.rs:6:13\n+   |\n+LL |             ///\n+   |             ^^^\n+\n error: repetition matches empty token tree\n   --> $DIR/issue-112342-1.rs:5:10\n    |\n@@ -7,6 +13,12 @@ LL | |             ///\n LL | |         )*\n    | |_________^\n \n+note: doc comments are ignored in matcher position\n+  --> $DIR/issue-112342-1.rs:17:13\n+   |\n+LL |             ///\n+   |             ^^^\n+\n error: repetition matches empty token tree\n   --> $DIR/issue-112342-1.rs:16:10\n    |\n@@ -16,6 +28,12 @@ LL | |             ///\n LL | |         )+\n    | |_________^\n \n+note: doc comments are ignored in matcher position\n+  --> $DIR/issue-112342-1.rs:28:13\n+   |\n+LL |             ///\n+   |             ^^^\n+\n error: repetition matches empty token tree\n   --> $DIR/issue-112342-1.rs:27:10\n    |\n@@ -25,5 +43,22 @@ LL | |             ///\n LL | |         )?\n    | |_________^\n \n-error: aborting due to 3 previous errors\n+note: doc comments are ignored in matcher position\n+  --> $DIR/issue-112342-1.rs:40:13\n+   |\n+LL | /             ///\n+LL | |             ///\n+   | |_______________^\n+\n+error: repetition matches empty token tree\n+  --> $DIR/issue-112342-1.rs:39:10\n+   |\n+LL |           $(\n+   |  __________^\n+LL | |             ///\n+LL | |             ///\n+LL | |         )*\n+   | |_________^\n+\n+error: aborting due to 4 previous errors\n "}, {"sha": "e797aff94d2f3e69e7a613ca4c8a2dcc91b9e2e9", "filename": "tests/ui/macros/issue-112342-2.rs", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/5eafab30ba0721451f5114c5b27b37870bb3955a/tests%2Fui%2Fmacros%2Fissue-112342-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5eafab30ba0721451f5114c5b27b37870bb3955a/tests%2Fui%2Fmacros%2Fissue-112342-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmacros%2Fissue-112342-2.rs?ref=5eafab30ba0721451f5114c5b27b37870bb3955a", "patch": "@@ -25,4 +25,15 @@ macro_rules! m2 {\n \n m2! {}\n \n+macro_rules! m3 {\n+    (\n+        $(\n+            ///\n+            $tt: tt,\n+        )*\n+    ) => {};\n+}\n+\n+m3! {}\n+\n fn main() {}"}, {"sha": "8c1b6f9471bcea6b61415b08660fb9cbcb7a1ae7", "filename": "tests/ui/macros/issue-112342-2.stderr", "status": "added", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/5eafab30ba0721451f5114c5b27b37870bb3955a/tests%2Fui%2Fmacros%2Fissue-112342-2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/5eafab30ba0721451f5114c5b27b37870bb3955a/tests%2Fui%2Fmacros%2Fissue-112342-2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmacros%2Fissue-112342-2.stderr?ref=5eafab30ba0721451f5114c5b27b37870bb3955a", "patch": "@@ -0,0 +1,24 @@\n+note: doc comments are ignored in matcher position\n+  --> $DIR/issue-112342-2.rs:8:13\n+   |\n+LL |             ///\n+   |             ^^^\n+\n+note: doc comments are ignored in matcher position\n+  --> $DIR/issue-112342-2.rs:19:13\n+   |\n+LL |             ///\n+   |             ^^^\n+\n+note: doc comments are ignored in matcher position\n+  --> $DIR/issue-112342-2.rs:21:13\n+   |\n+LL |             ///\n+   |             ^^^\n+\n+note: doc comments are ignored in matcher position\n+  --> $DIR/issue-112342-2.rs:31:13\n+   |\n+LL |             ///\n+   |             ^^^\n+"}]}