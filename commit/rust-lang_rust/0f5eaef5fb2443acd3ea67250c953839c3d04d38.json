{"sha": "0f5eaef5fb2443acd3ea67250c953839c3d04d38", "node_id": "MDY6Q29tbWl0NzI0NzEyOjBmNWVhZWY1ZmIyNDQzYWNkM2VhNjcyNTBjOTUzODM5YzNkMDRkMzg=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-07-03T23:06:09Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-07-04T00:03:52Z"}, "message": "Remove rule requiring non-nil block-style statements to be semi-terminated\n\nThis is a subtle rule that no longer seems to be required.", "tree": {"sha": "3f22009e8299aca3a0814a2ed9eaa8180248f03f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3f22009e8299aca3a0814a2ed9eaa8180248f03f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0f5eaef5fb2443acd3ea67250c953839c3d04d38", "comment_count": 4, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0f5eaef5fb2443acd3ea67250c953839c3d04d38", "html_url": "https://github.com/rust-lang/rust/commit/0f5eaef5fb2443acd3ea67250c953839c3d04d38", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0f5eaef5fb2443acd3ea67250c953839c3d04d38/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3f59a4bc64f46c5f44621327c697c5314b2f4358", "url": "https://api.github.com/repos/rust-lang/rust/commits/3f59a4bc64f46c5f44621327c697c5314b2f4358", "html_url": "https://github.com/rust-lang/rust/commit/3f59a4bc64f46c5f44621327c697c5314b2f4358"}], "stats": {"total": 67, "additions": 32, "deletions": 35}, "files": [{"sha": "6c0b5a2e8b16f00860a35e7c7008836b2d9d3852", "filename": "src/libsyntax/ast.rs", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/0f5eaef5fb2443acd3ea67250c953839c3d04d38/src%2Flibsyntax%2Fast.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0f5eaef5fb2443acd3ea67250c953839c3d04d38/src%2Flibsyntax%2Fast.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fast.rs?ref=0f5eaef5fb2443acd3ea67250c953839c3d04d38", "patch": "@@ -243,12 +243,7 @@ type stmt = spanned<stmt_>;\n #[auto_serialize]\n enum stmt_ {\n     stmt_decl(@decl, node_id),\n-\n-    // expr without trailing semi-colon (must have unit type):\n     stmt_expr(@expr, node_id),\n-\n-    // expr with trailing semi-colon (may have any type):\n-    stmt_semi(@expr, node_id),\n }\n \n #[auto_serialize]"}, {"sha": "568f00b0dfb4f182dbcf7b45e5105fb110b80821", "filename": "src/libsyntax/ast_util.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/0f5eaef5fb2443acd3ea67250c953839c3d04d38/src%2Flibsyntax%2Fast_util.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0f5eaef5fb2443acd3ea67250c953839c3d04d38/src%2Flibsyntax%2Fast_util.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fast_util.rs?ref=0f5eaef5fb2443acd3ea67250c953839c3d04d38", "patch": "@@ -38,7 +38,6 @@ pure fn stmt_id(s: stmt) -> node_id {\n     alt s.node {\n       stmt_decl(_, id) { id }\n       stmt_expr(_, id) { id }\n-      stmt_semi(_, id) { id }\n     }\n }\n "}, {"sha": "8685bce4c1bf773752a73fec37e0653984551387", "filename": "src/libsyntax/ext/auto_serialize.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0f5eaef5fb2443acd3ea67250c953839c3d04d38/src%2Flibsyntax%2Fext%2Fauto_serialize.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0f5eaef5fb2443acd3ea67250c953839c3d04d38/src%2Flibsyntax%2Fext%2Fauto_serialize.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Fauto_serialize.rs?ref=0f5eaef5fb2443acd3ea67250c953839c3d04d38", "patch": "@@ -206,7 +206,7 @@ impl helpers for ext_ctxt {\n     }\n \n     fn stmt(expr: @ast::expr) -> @ast::stmt {\n-        @{node: ast::stmt_semi(expr, self.next_id()),\n+        @{node: ast::stmt_expr(expr, self.next_id()),\n           span: expr.span}\n     }\n "}, {"sha": "fd17403b6950268bc137080dd766107153372240", "filename": "src/libsyntax/fold.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/0f5eaef5fb2443acd3ea67250c953839c3d04d38/src%2Flibsyntax%2Ffold.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0f5eaef5fb2443acd3ea67250c953839c3d04d38/src%2Flibsyntax%2Ffold.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Ffold.rs?ref=0f5eaef5fb2443acd3ea67250c953839c3d04d38", "patch": "@@ -315,7 +315,6 @@ fn noop_fold_stmt(s: stmt_, fld: ast_fold) -> stmt_ {\n     ret alt s {\n       stmt_decl(d, nid) { stmt_decl(fld.fold_decl(d), fld.new_id(nid)) }\n       stmt_expr(e, nid) { stmt_expr(fld.fold_expr(e), fld.new_id(nid)) }\n-      stmt_semi(e, nid) { stmt_semi(fld.fold_expr(e), fld.new_id(nid)) }\n     };\n }\n "}, {"sha": "4fcb761fa066dc23a5712bdbaecdab7d2f863320", "filename": "src/libsyntax/parse/classify.rs", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/0f5eaef5fb2443acd3ea67250c953839c3d04d38/src%2Flibsyntax%2Fparse%2Fclassify.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0f5eaef5fb2443acd3ea67250c953839c3d04d38/src%2Flibsyntax%2Fparse%2Fclassify.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fclassify.rs?ref=0f5eaef5fb2443acd3ea67250c953839c3d04d38", "patch": "@@ -27,9 +27,6 @@ fn stmt_ends_with_semi(stmt: ast::stmt) -> bool {\n       ast::stmt_expr(e, _) {\n         ret expr_requires_semi_to_be_stmt(e);\n       }\n-      ast::stmt_semi(e, _) {\n-        ret false;\n-      }\n     }\n }\n "}, {"sha": "97185b6dfb98e1cdd4ec1ebb82ed96573d49f432", "filename": "src/libsyntax/parse/parser.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0f5eaef5fb2443acd3ea67250c953839c3d04d38/src%2Flibsyntax%2Fparse%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0f5eaef5fb2443acd3ea67250c953839c3d04d38/src%2Flibsyntax%2Fparse%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fparser.rs?ref=0f5eaef5fb2443acd3ea67250c953839c3d04d38", "patch": "@@ -1848,7 +1848,7 @@ class parser {\n                       token::SEMI {\n                         self.bump();\n                         push(stmts,\n-                             @{node: stmt_semi(e, stmt_id) with *stmt});\n+                             @{node: stmt_expr(e, stmt_id) with *stmt});\n                       }\n                       token::RBRACE {\n                         expr = some(e);"}, {"sha": "171ad240635d4d2e4870d78892eaa39e662d6c26", "filename": "src/libsyntax/print/pprust.rs", "status": "modified", "additions": 3, "deletions": 5, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/0f5eaef5fb2443acd3ea67250c953839c3d04d38/src%2Flibsyntax%2Fprint%2Fpprust.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0f5eaef5fb2443acd3ea67250c953839c3d04d38/src%2Flibsyntax%2Fprint%2Fpprust.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fprint%2Fpprust.rs?ref=0f5eaef5fb2443acd3ea67250c953839c3d04d38", "patch": "@@ -682,11 +682,9 @@ fn print_stmt(s: ps, st: ast::stmt) {\n       ast::stmt_expr(expr, _) {\n         space_if_not_bol(s);\n         print_expr(s, expr);\n-      }\n-      ast::stmt_semi(expr, _) {\n-        space_if_not_bol(s);\n-        print_expr(s, expr);\n-        word(s.s, \";\");\n+        if expr_requires_semi_to_be_stmt(expr) {\n+            word(s.s, \";\");\n+        }\n       }\n     }\n     if parse::classify::stmt_ends_with_semi(st) { word(s.s, \";\"); }"}, {"sha": "d2e5b1d1f2145623d2c7b006d1eacf73ccb535dd", "filename": "src/libsyntax/visit.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/0f5eaef5fb2443acd3ea67250c953839c3d04d38/src%2Flibsyntax%2Fvisit.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0f5eaef5fb2443acd3ea67250c953839c3d04d38/src%2Flibsyntax%2Fvisit.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fvisit.rs?ref=0f5eaef5fb2443acd3ea67250c953839c3d04d38", "patch": "@@ -320,7 +320,6 @@ fn visit_stmt<E>(s: @stmt, e: E, v: vt<E>) {\n     alt s.node {\n       stmt_decl(d, _) { v.visit_decl(d, e, v); }\n       stmt_expr(ex, _) { v.visit_expr(ex, e, v); }\n-      stmt_semi(ex, _) { v.visit_expr(ex, e, v); }\n     }\n }\n "}, {"sha": "61b2816c2e6e17c9d79db133f6dd7ae7f0a4ccab", "filename": "src/rustc/front/test.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0f5eaef5fb2443acd3ea67250c953839c3d04d38/src%2Frustc%2Ffront%2Ftest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0f5eaef5fb2443acd3ea67250c953839c3d04d38/src%2Frustc%2Ffront%2Ftest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustc%2Ffront%2Ftest.rs?ref=0f5eaef5fb2443acd3ea67250c953839c3d04d38", "patch": "@@ -359,7 +359,7 @@ fn mk_test_wrapper(cx: test_ctxt,\n     };\n \n     let call_stmt: ast::stmt = nospan(\n-        ast::stmt_semi(@call_expr, cx.sess.next_node_id()));\n+        ast::stmt_expr(@call_expr, cx.sess.next_node_id()));\n \n     let wrapper_decl: ast::fn_decl = {\n         inputs: ~[],"}, {"sha": "5cc6e9881ae1d2c4559aebc6cd7e96313a106b54", "filename": "src/rustc/middle/astencode.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0f5eaef5fb2443acd3ea67250c953839c3d04d38/src%2Frustc%2Fmiddle%2Fastencode.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0f5eaef5fb2443acd3ea67250c953839c3d04d38/src%2Frustc%2Fmiddle%2Fastencode.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustc%2Fmiddle%2Fastencode.rs?ref=0f5eaef5fb2443acd3ea67250c953839c3d04d38", "patch": "@@ -229,7 +229,7 @@ fn simplify_ast(ii: ast::inlined_item) -> ast::inlined_item {\n     fn drop_nested_items(blk: ast::blk_, fld: fold::ast_fold) -> ast::blk_ {\n         let stmts_sans_items = do vec::filter(blk.stmts) |stmt| {\n             alt stmt.node {\n-              ast::stmt_expr(_, _) | ast::stmt_semi(_, _) |\n+              ast::stmt_expr(_, _) |\n               ast::stmt_decl(@{node: ast::decl_local(_), span: _}, _) { true }\n               ast::stmt_decl(@{node: ast::decl_item(_), span: _}, _) { false }\n             }"}, {"sha": "c3206bafd310cdcf552f612b0051523eaaee20e9", "filename": "src/rustc/middle/lint.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0f5eaef5fb2443acd3ea67250c953839c3d04d38/src%2Frustc%2Fmiddle%2Flint.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0f5eaef5fb2443acd3ea67250c953839c3d04d38/src%2Frustc%2Fmiddle%2Flint.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustc%2Fmiddle%2Flint.rs?ref=0f5eaef5fb2443acd3ea67250c953839c3d04d38", "patch": "@@ -405,7 +405,7 @@ fn check_item_path_statement(cx: ty::ctxt, it: @ast::item) {\n     let visit = item_stopping_visitor(visit::mk_simple_visitor(@{\n         visit_stmt: fn@(s: @ast::stmt) {\n             alt s.node {\n-              ast::stmt_semi(@{id: id,\n+              ast::stmt_expr(@{id: id,\n                                node: ast::expr_path(@path),\n                                span: _}, _) {\n                 cx.sess.span_lint("}, {"sha": "fdd18a21a1d19b5d97ec0ffc7cd6459f9dc93321", "filename": "src/rustc/middle/liveness.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0f5eaef5fb2443acd3ea67250c953839c3d04d38/src%2Frustc%2Fmiddle%2Fliveness.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0f5eaef5fb2443acd3ea67250c953839c3d04d38/src%2Frustc%2Fmiddle%2Fliveness.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustc%2Fmiddle%2Fliveness.rs?ref=0f5eaef5fb2443acd3ea67250c953839c3d04d38", "patch": "@@ -843,7 +843,7 @@ class liveness {\n             ret self.propagate_through_decl(decl, succ);\n           }\n \n-          stmt_expr(expr, _) | stmt_semi(expr, _) {\n+          stmt_expr(expr, _) {\n             ret self.propagate_through_expr(expr, succ);\n           }\n         }"}, {"sha": "a958079b327128c6c64470be3209d87ca57ff37d", "filename": "src/rustc/middle/trans/base.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0f5eaef5fb2443acd3ea67250c953839c3d04d38/src%2Frustc%2Fmiddle%2Ftrans%2Fbase.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0f5eaef5fb2443acd3ea67250c953839c3d04d38/src%2Frustc%2Fmiddle%2Ftrans%2Fbase.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustc%2Fmiddle%2Ftrans%2Fbase.rs?ref=0f5eaef5fb2443acd3ea67250c953839c3d04d38", "patch": "@@ -4131,7 +4131,7 @@ fn trans_stmt(cx: block, s: ast::stmt) -> block {\n     debuginfo::update_source_pos(cx, s.span);\n \n     alt s.node {\n-      ast::stmt_expr(e, _) | ast::stmt_semi(e, _) {\n+      ast::stmt_expr(e, _) {\n         bcx = trans_expr(cx, e, ignore);\n       }\n       ast::stmt_decl(d, _) {"}, {"sha": "9dd1157a56f0420de3bf1a451b3b5704e9bc3666", "filename": "src/rustc/middle/tstate/annotate.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0f5eaef5fb2443acd3ea67250c953839c3d04d38/src%2Frustc%2Fmiddle%2Ftstate%2Fannotate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0f5eaef5fb2443acd3ea67250c953839c3d04d38/src%2Frustc%2Fmiddle%2Ftstate%2Fannotate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustc%2Fmiddle%2Ftstate%2Fannotate.rs?ref=0f5eaef5fb2443acd3ea67250c953839c3d04d38", "patch": "@@ -15,7 +15,7 @@ fn collect_ids_block(b: blk, rs: @mut ~[node_id]) {\n \n fn collect_ids_stmt(s: @stmt, rs: @mut ~[node_id]) {\n     alt s.node {\n-      stmt_decl(_, id) | stmt_expr(_, id) | stmt_semi(_, id) {\n+      stmt_decl(_, id) | stmt_expr(_, id) {\n         #debug[\"node_id %s\", int::str(id)];\n         #debug[\"%s\", stmt_to_str(*s)];\n         vec::push(*rs, id);"}, {"sha": "13d82cefe1398c8f00a9f625200e1d750e9f58da", "filename": "src/rustc/middle/tstate/auxiliary.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0f5eaef5fb2443acd3ea67250c953839c3d04d38/src%2Frustc%2Fmiddle%2Ftstate%2Fauxiliary.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0f5eaef5fb2443acd3ea67250c953839c3d04d38/src%2Frustc%2Fmiddle%2Ftstate%2Fauxiliary.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustc%2Fmiddle%2Ftstate%2Fauxiliary.rs?ref=0f5eaef5fb2443acd3ea67250c953839c3d04d38", "patch": "@@ -278,7 +278,7 @@ fn node_id_to_poststate(ccx: crate_ctxt, id: node_id) -> poststate {\n fn stmt_to_ann(ccx: crate_ctxt, s: stmt) -> ts_ann {\n     #debug(\"stmt_to_ann\");\n     alt s.node {\n-      stmt_decl(_, id) | stmt_expr(_, id) | stmt_semi(_, id) {\n+      stmt_decl(_, id) | stmt_expr(_, id) {\n         ret node_id_to_ts_ann(ccx, id);\n       }\n     }"}, {"sha": "9f2e12cff2dc51ce47b52e3edd074868c6f3f721", "filename": "src/rustc/middle/tstate/pre_post_conditions.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0f5eaef5fb2443acd3ea67250c953839c3d04d38/src%2Frustc%2Fmiddle%2Ftstate%2Fpre_post_conditions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0f5eaef5fb2443acd3ea67250c953839c3d04d38/src%2Frustc%2Fmiddle%2Ftstate%2Fpre_post_conditions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustc%2Fmiddle%2Ftstate%2Fpre_post_conditions.rs?ref=0f5eaef5fb2443acd3ea67250c953839c3d04d38", "patch": "@@ -520,7 +520,7 @@ fn find_pre_post_stmt(fcx: fn_ctxt, s: stmt) {\n           }\n         }\n       }\n-      stmt_expr(e, id) | stmt_semi(e, id) {\n+      stmt_expr(e, id) {\n         find_pre_post_expr(fcx, e);\n         copy_pre_post(fcx.ccx, id, e);\n       }"}, {"sha": "85b66dfd3893e4e2b5fa4969a812f02b05dc74f6", "filename": "src/rustc/middle/tstate/states.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0f5eaef5fb2443acd3ea67250c953839c3d04d38/src%2Frustc%2Fmiddle%2Ftstate%2Fstates.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0f5eaef5fb2443acd3ea67250c953839c3d04d38/src%2Frustc%2Fmiddle%2Ftstate%2Fstates.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustc%2Fmiddle%2Ftstate%2Fstates.rs?ref=0f5eaef5fb2443acd3ea67250c953839c3d04d38", "patch": "@@ -537,7 +537,7 @@ fn find_pre_post_state_stmt(fcx: fn_ctxt, pres: prestate, s: @stmt) -> bool {\n           }\n         }\n       }\n-      stmt_expr(ex, _) | stmt_semi(ex, _) {\n+      stmt_expr(ex, _) {\n         let mut changed =\n             find_pre_post_state_expr(fcx, pres, ex) |\n                 set_prestate(stmt_ann, expr_prestate(fcx.ccx, ex)) |"}, {"sha": "f60ede09ceca4d530f61560e6cccee49605caea8", "filename": "src/rustc/middle/ty.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0f5eaef5fb2443acd3ea67250c953839c3d04d38/src%2Frustc%2Fmiddle%2Fty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0f5eaef5fb2443acd3ea67250c953839c3d04d38/src%2Frustc%2Fmiddle%2Fty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustc%2Fmiddle%2Fty.rs?ref=0f5eaef5fb2443acd3ea67250c953839c3d04d38", "patch": "@@ -2255,7 +2255,7 @@ fn expr_is_lval(method_map: typeck::method_map, e: @ast::expr) -> bool {\n \n fn stmt_node_id(s: @ast::stmt) -> ast::node_id {\n     alt s.node {\n-      ast::stmt_decl(_, id) | stmt_expr(_, id) | stmt_semi(_, id) {\n+      ast::stmt_decl(_, id) | stmt_expr(_, id) {\n         ret id;\n       }\n     }"}, {"sha": "0f0cb2903cb022818bbf21d191ec8f8a1de24731", "filename": "src/rustc/middle/typeck/check.rs", "status": "modified", "additions": 1, "deletions": 5, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/0f5eaef5fb2443acd3ea67250c953839c3d04d38/src%2Frustc%2Fmiddle%2Ftypeck%2Fcheck.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0f5eaef5fb2443acd3ea67250c953839c3d04d38/src%2Frustc%2Fmiddle%2Ftypeck%2Fcheck.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustc%2Fmiddle%2Ftypeck%2Fcheck.rs?ref=0f5eaef5fb2443acd3ea67250c953839c3d04d38", "patch": "@@ -1718,10 +1718,6 @@ fn check_stmt(fcx: @fn_ctxt, stmt: @ast::stmt) -> bool {\n         }\n       }\n       ast::stmt_expr(expr, id) {\n-        node_id = id;\n-        bot = check_expr_with(fcx, expr, ty::mk_nil(fcx.ccx.tcx));\n-      }\n-      ast::stmt_semi(expr, id) {\n         node_id = id;\n         bot = check_expr(fcx, expr, none);\n       }\n@@ -1753,7 +1749,7 @@ fn check_block(fcx0: @fn_ctxt, blk: ast::blk) -> bool {\n         if bot && !warned &&\n                alt s.node {\n                  ast::stmt_decl(@{node: ast::decl_local(_), _}, _) |\n-                 ast::stmt_expr(_, _) | ast::stmt_semi(_, _) {\n+                 ast::stmt_expr(_, _) {\n                    true\n                  }\n                  _ { false }"}, {"sha": "630c0c95511d13f55e362aab1606e539a4cb6969", "filename": "src/test/run-pass/block-arg-as-stmt-with-value.rs", "status": "renamed", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/0f5eaef5fb2443acd3ea67250c953839c3d04d38/src%2Ftest%2Frun-pass%2Fblock-arg-as-stmt-with-value.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0f5eaef5fb2443acd3ea67250c953839c3d04d38/src%2Ftest%2Frun-pass%2Fblock-arg-as-stmt-with-value.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fblock-arg-as-stmt-with-value.rs?ref=0f5eaef5fb2443acd3ea67250c953839c3d04d38", "patch": "@@ -2,12 +2,13 @@\n fn compute1() -> float {\n     let v = ~[0f, 1f, 2f, 3f];\n \n+    // This is actually a (block-style) statement followed by\n+    // a unary tail expression\n     do vec::foldl(0f, v) |x, y| { x + y } - 10f\n-    //~^ ERROR mismatched types: expected `()`\n }\n \n fn main() {\n     let x = compute1();\n     log(debug, x);\n-    assert(x == -4f);\n+    assert(x == -10f);\n }", "previous_filename": "src/test/compile-fail/block-arg-as-stmt-with-value.rs"}, {"sha": "e2556f793afd5ca050be2c0702e60b47ba3775c1", "filename": "src/test/run-pass/typed-statements-dont-need-semis.rs", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/0f5eaef5fb2443acd3ea67250c953839c3d04d38/src%2Ftest%2Frun-pass%2Ftyped-statements-dont-need-semis.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0f5eaef5fb2443acd3ea67250c953839c3d04d38/src%2Ftest%2Frun-pass%2Ftyped-statements-dont-need-semis.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Ftyped-statements-dont-need-semis.rs?ref=0f5eaef5fb2443acd3ea67250c953839c3d04d38", "patch": "@@ -0,0 +1,13 @@\n+fn f(f: fn()) -> int {\n+    f(); 0\n+}\n+\n+fn main() {\n+    // Testing that the old rule that statements (even control\n+    // structures) that have non-nil type be semi-terminated _no\n+    // longer_ is required\n+    do f {\n+    }\n+    if true { 0 } else { 0 }\n+    let _x = 0;\n+}\n\\ No newline at end of file"}]}