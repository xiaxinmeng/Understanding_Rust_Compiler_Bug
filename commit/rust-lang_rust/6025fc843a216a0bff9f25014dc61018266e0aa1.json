{"sha": "6025fc843a216a0bff9f25014dc61018266e0aa1", "node_id": "MDY6Q29tbWl0NzI0NzEyOjYwMjVmYzg0M2EyMTZhMGJmZjlmMjUwMTRkYzYxMDE4MjY2ZTBhYTE=", "commit": {"author": {"name": "Nicholas Nethercote", "email": "nnethercote@mozilla.com", "date": "2019-09-03T23:45:57Z"}, "committer": {"name": "Nicholas Nethercote", "email": "nnethercote@mozilla.com", "date": "2019-09-04T04:41:07Z"}, "message": "Remove hashing impls for `LocalInternedString`.", "tree": {"sha": "ca5981b4acd306df00e3c804a99955e8049a859f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ca5981b4acd306df00e3c804a99955e8049a859f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6025fc843a216a0bff9f25014dc61018266e0aa1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6025fc843a216a0bff9f25014dc61018266e0aa1", "html_url": "https://github.com/rust-lang/rust/commit/6025fc843a216a0bff9f25014dc61018266e0aa1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6025fc843a216a0bff9f25014dc61018266e0aa1/comments", "author": {"login": "nnethercote", "id": 1940286, "node_id": "MDQ6VXNlcjE5NDAyODY=", "avatar_url": "https://avatars.githubusercontent.com/u/1940286?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nnethercote", "html_url": "https://github.com/nnethercote", "followers_url": "https://api.github.com/users/nnethercote/followers", "following_url": "https://api.github.com/users/nnethercote/following{/other_user}", "gists_url": "https://api.github.com/users/nnethercote/gists{/gist_id}", "starred_url": "https://api.github.com/users/nnethercote/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nnethercote/subscriptions", "organizations_url": "https://api.github.com/users/nnethercote/orgs", "repos_url": "https://api.github.com/users/nnethercote/repos", "events_url": "https://api.github.com/users/nnethercote/events{/privacy}", "received_events_url": "https://api.github.com/users/nnethercote/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nnethercote", "id": 1940286, "node_id": "MDQ6VXNlcjE5NDAyODY=", "avatar_url": "https://avatars.githubusercontent.com/u/1940286?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nnethercote", "html_url": "https://github.com/nnethercote", "followers_url": "https://api.github.com/users/nnethercote/followers", "following_url": "https://api.github.com/users/nnethercote/following{/other_user}", "gists_url": "https://api.github.com/users/nnethercote/gists{/gist_id}", "starred_url": "https://api.github.com/users/nnethercote/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nnethercote/subscriptions", "organizations_url": "https://api.github.com/users/nnethercote/orgs", "repos_url": "https://api.github.com/users/nnethercote/repos", "events_url": "https://api.github.com/users/nnethercote/events{/privacy}", "received_events_url": "https://api.github.com/users/nnethercote/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "224daa64bd3d8f34afaacd73ffc972153fe75eda", "url": "https://api.github.com/repos/rust-lang/rust/commits/224daa64bd3d8f34afaacd73ffc972153fe75eda", "html_url": "https://github.com/rust-lang/rust/commit/224daa64bd3d8f34afaacd73ffc972153fe75eda"}], "stats": {"total": 27, "additions": 3, "deletions": 24}, "files": [{"sha": "b8bd1d73fc28b4e12e786aea303dc12430ea2d2c", "filename": "src/librustc/hir/map/collector.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6025fc843a216a0bff9f25014dc61018266e0aa1/src%2Flibrustc%2Fhir%2Fmap%2Fcollector.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6025fc843a216a0bff9f25014dc61018266e0aa1/src%2Flibrustc%2Fhir%2Fmap%2Fcollector.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fhir%2Fmap%2Fcollector.rs?ref=6025fc843a216a0bff9f25014dc61018266e0aa1", "patch": "@@ -186,7 +186,7 @@ impl<'a, 'hir> NodeCollector<'a, 'hir> {\n             });\n \n         let mut upstream_crates: Vec<_> = cstore.crates_untracked().iter().map(|&cnum| {\n-            let name = cstore.crate_name_untracked(cnum).as_str();\n+            let name = cstore.crate_name_untracked(cnum).as_interned_str();\n             let disambiguator = cstore.crate_disambiguator_untracked(cnum).to_fingerprint();\n             let hash = cstore.crate_hash_untracked(cnum);\n             (name, disambiguator, hash)"}, {"sha": "ddfca3a4cfb725a0ec256fdd807358731552f056", "filename": "src/librustc/ich/impls_syntax.rs", "status": "modified", "additions": 1, "deletions": 22, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/6025fc843a216a0bff9f25014dc61018266e0aa1/src%2Flibrustc%2Fich%2Fimpls_syntax.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6025fc843a216a0bff9f25014dc61018266e0aa1/src%2Flibrustc%2Fich%2Fimpls_syntax.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fich%2Fimpls_syntax.rs?ref=6025fc843a216a0bff9f25014dc61018266e0aa1", "patch": "@@ -9,7 +9,7 @@ use std::mem;\n use syntax::ast;\n use syntax::feature_gate;\n use syntax::parse::token;\n-use syntax::symbol::{InternedString, LocalInternedString};\n+use syntax::symbol::InternedString;\n use syntax::tokenstream;\n use syntax_pos::SourceFile;\n \n@@ -39,27 +39,6 @@ impl<'a> ToStableHashKey<StableHashingContext<'a>> for InternedString {\n     }\n }\n \n-impl<'a> HashStable<StableHashingContext<'a>> for LocalInternedString {\n-    #[inline]\n-    fn hash_stable<W: StableHasherResult>(&self,\n-                                          hcx: &mut StableHashingContext<'a>,\n-                                          hasher: &mut StableHasher<W>) {\n-        let s: &str = &**self;\n-        s.hash_stable(hcx, hasher);\n-    }\n-}\n-\n-impl<'a> ToStableHashKey<StableHashingContext<'a>> for LocalInternedString {\n-    type KeyType = LocalInternedString;\n-\n-    #[inline]\n-    fn to_stable_hash_key(&self,\n-                          _: &StableHashingContext<'a>)\n-                          -> LocalInternedString {\n-        self.clone()\n-    }\n-}\n-\n impl<'a> HashStable<StableHashingContext<'a>> for ast::Name {\n     #[inline]\n     fn hash_stable<W: StableHasherResult>(&self,"}, {"sha": "aeea3c920af570ccf027fd07c74fbefcde55388e", "filename": "src/libsyntax_pos/symbol.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6025fc843a216a0bff9f25014dc61018266e0aa1/src%2Flibsyntax_pos%2Fsymbol.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6025fc843a216a0bff9f25014dc61018266e0aa1/src%2Flibsyntax_pos%2Fsymbol.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax_pos%2Fsymbol.rs?ref=6025fc843a216a0bff9f25014dc61018266e0aa1", "patch": "@@ -1152,7 +1152,7 @@ fn with_interner<T, F: FnOnce(&mut Interner) -> T>(f: F) -> T {\n // FIXME: ensure that the interner outlives any thread which uses\n // `LocalInternedString`, by creating a new thread right after constructing the\n // interner.\n-#[derive(Clone, Copy, Hash, PartialOrd, Eq, Ord)]\n+#[derive(Clone, Copy, Eq, PartialOrd, Ord)]\n pub struct LocalInternedString {\n     string: &'static str,\n }"}]}