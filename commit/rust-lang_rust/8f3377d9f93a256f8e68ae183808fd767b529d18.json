{"sha": "8f3377d9f93a256f8e68ae183808fd767b529d18", "node_id": "MDY6Q29tbWl0NzI0NzEyOjhmMzM3N2Q5ZjkzYTI1NmY4ZTY4YWUxODM4MDhmZDc2N2I1MjlkMTg=", "commit": {"author": {"name": "Kirill Bulatov", "email": "mail4score@gmail.com", "date": "2019-07-22T18:52:47Z"}, "committer": {"name": "Kirill Bulatov", "email": "mail4score@gmail.com", "date": "2019-07-22T20:25:13Z"}, "message": "Code review fixes", "tree": {"sha": "a56a828eeba4301bbd816383abc8674a25996d85", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a56a828eeba4301bbd816383abc8674a25996d85"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8f3377d9f93a256f8e68ae183808fd767b529d18", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8f3377d9f93a256f8e68ae183808fd767b529d18", "html_url": "https://github.com/rust-lang/rust/commit/8f3377d9f93a256f8e68ae183808fd767b529d18", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8f3377d9f93a256f8e68ae183808fd767b529d18/comments", "author": {"login": "SomeoneToIgnore", "id": 2690773, "node_id": "MDQ6VXNlcjI2OTA3NzM=", "avatar_url": "https://avatars.githubusercontent.com/u/2690773?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SomeoneToIgnore", "html_url": "https://github.com/SomeoneToIgnore", "followers_url": "https://api.github.com/users/SomeoneToIgnore/followers", "following_url": "https://api.github.com/users/SomeoneToIgnore/following{/other_user}", "gists_url": "https://api.github.com/users/SomeoneToIgnore/gists{/gist_id}", "starred_url": "https://api.github.com/users/SomeoneToIgnore/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SomeoneToIgnore/subscriptions", "organizations_url": "https://api.github.com/users/SomeoneToIgnore/orgs", "repos_url": "https://api.github.com/users/SomeoneToIgnore/repos", "events_url": "https://api.github.com/users/SomeoneToIgnore/events{/privacy}", "received_events_url": "https://api.github.com/users/SomeoneToIgnore/received_events", "type": "User", "site_admin": false}, "committer": {"login": "SomeoneToIgnore", "id": 2690773, "node_id": "MDQ6VXNlcjI2OTA3NzM=", "avatar_url": "https://avatars.githubusercontent.com/u/2690773?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SomeoneToIgnore", "html_url": "https://github.com/SomeoneToIgnore", "followers_url": "https://api.github.com/users/SomeoneToIgnore/followers", "following_url": "https://api.github.com/users/SomeoneToIgnore/following{/other_user}", "gists_url": "https://api.github.com/users/SomeoneToIgnore/gists{/gist_id}", "starred_url": "https://api.github.com/users/SomeoneToIgnore/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SomeoneToIgnore/subscriptions", "organizations_url": "https://api.github.com/users/SomeoneToIgnore/orgs", "repos_url": "https://api.github.com/users/SomeoneToIgnore/repos", "events_url": "https://api.github.com/users/SomeoneToIgnore/events{/privacy}", "received_events_url": "https://api.github.com/users/SomeoneToIgnore/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "25398ad30d6ffc07b3ca9ceee6a55f301973c155", "url": "https://api.github.com/repos/rust-lang/rust/commits/25398ad30d6ffc07b3ca9ceee6a55f301973c155", "html_url": "https://github.com/rust-lang/rust/commit/25398ad30d6ffc07b3ca9ceee6a55f301973c155"}], "stats": {"total": 100, "additions": 70, "deletions": 30}, "files": [{"sha": "174662beb57b5fe095ea0c3e609f577b41f38190", "filename": "crates/ra_ide_api/src/inlay_hints.rs", "status": "modified", "additions": 20, "deletions": 29, "changes": 49, "blob_url": "https://github.com/rust-lang/rust/blob/8f3377d9f93a256f8e68ae183808fd767b529d18/crates%2Fra_ide_api%2Fsrc%2Finlay_hints.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8f3377d9f93a256f8e68ae183808fd767b529d18/crates%2Fra_ide_api%2Fsrc%2Finlay_hints.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Finlay_hints.rs?ref=8f3377d9f93a256f8e68ae183808fd767b529d18", "patch": "@@ -9,16 +9,15 @@ use ra_syntax::{\n \n #[derive(Debug, PartialEq, Eq)]\n pub enum InlayKind {\n-    LetBinding,\n-    ClosureParameter,\n+    LetBindingType,\n+    ClosureParameterType,\n }\n \n #[derive(Debug)]\n pub struct InlayHint {\n     pub range: TextRange,\n-    pub text: SmolStr,\n-    pub inlay_kind: InlayKind,\n-    pub inlay_type_string: SmolStr,\n+    pub kind: InlayKind,\n+    pub label: SmolStr,\n }\n \n pub(crate) fn inlay_hints(db: &RootDatabase, file_id: FileId, file: &SourceFile) -> Vec<InlayHint> {\n@@ -56,9 +55,8 @@ fn get_inlay_hints(\n \n             Some(vec![InlayHint {\n                 range: pat_range,\n-                text: let_syntax.text().to_string().into(),\n-                inlay_kind: InlayKind::LetBinding,\n-                inlay_type_string,\n+                kind: InlayKind::LetBindingType,\n+                label: inlay_type_string,\n             }])\n         })\n         .visit(|closure_parameter: ast::LambdaExpr| match closure_parameter.param_list() {\n@@ -80,9 +78,8 @@ fn get_inlay_hints(\n \n                         Some(InlayHint {\n                             range: closure_param_syntax.text_range(),\n-                            text: closure_param_syntax.text().to_string().into(),\n-                            inlay_kind: InlayKind::ClosureParameter,\n-                            inlay_type_string,\n+                            kind: InlayKind::ClosureParameterType,\n+                            label: inlay_type_string,\n                         })\n                     })\n                     .collect(),\n@@ -149,39 +146,33 @@ fn main() {\n         assert_debug_snapshot_matches!(analysis.inlay_hints(file_id).unwrap(), @r#\"[\n     InlayHint {\n         range: [71; 75),\n-        text: \"let test = 54;\",\n-        inlay_kind: LetBinding,\n-        inlay_type_string: \"i32\",\n+        kind: LetBindingType,\n+        label: \"i32\",\n     },\n     InlayHint {\n         range: [121; 125),\n-        text: \"let test = OuterStruct {};\",\n-        inlay_kind: LetBinding,\n-        inlay_type_string: \"OuterStruct\",\n+        kind: LetBindingType,\n+        label: \"OuterStruct\",\n     },\n     InlayHint {\n         range: [297; 305),\n-        text: \"let mut test = 33;\",\n-        inlay_kind: LetBinding,\n-        inlay_type_string: \"i32\",\n+        kind: LetBindingType,\n+        label: \"i32\",\n     },\n     InlayHint {\n         range: [417; 426),\n-        text: \"let i_squared = i * i;\",\n-        inlay_kind: LetBinding,\n-        inlay_type_string: \"u32\",\n+        kind: LetBindingType,\n+        label: \"u32\",\n     },\n     InlayHint {\n         range: [496; 502),\n-        text: \"let (x, c) = (42, \\'a\\');\",\n-        inlay_kind: LetBinding,\n-        inlay_type_string: \"(i32, char)\",\n+        kind: LetBindingType,\n+        label: \"(i32, char)\",\n     },\n     InlayHint {\n         range: [524; 528),\n-        text: \"let test = (42, \\'a\\');\",\n-        inlay_kind: LetBinding,\n-        inlay_type_string: \"(i32, char)\",\n+        kind: LetBindingType,\n+        label: \"(i32, char)\",\n     },\n ]\"#\n         );"}, {"sha": "8e830c8b8586f9b414142b160e2909f20cca1624", "filename": "crates/ra_lsp_server/src/main_loop.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/8f3377d9f93a256f8e68ae183808fd767b529d18/crates%2Fra_lsp_server%2Fsrc%2Fmain_loop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8f3377d9f93a256f8e68ae183808fd767b529d18/crates%2Fra_lsp_server%2Fsrc%2Fmain_loop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_lsp_server%2Fsrc%2Fmain_loop.rs?ref=8f3377d9f93a256f8e68ae183808fd767b529d18", "patch": "@@ -362,6 +362,7 @@ fn on_request(\n         .on::<req::References>(handlers::handle_references)?\n         .on::<req::Formatting>(handlers::handle_formatting)?\n         .on::<req::DocumentHighlightRequest>(handlers::handle_document_highlight)?\n+        .on::<req::InlayHints>(handlers::handle_inlay_hints)?\n         .finish();\n     Ok(())\n }"}, {"sha": "5bf950a53780348292a79837b537465c27e93620", "filename": "crates/ra_lsp_server/src/main_loop/handlers.rs", "status": "modified", "additions": 22, "deletions": 1, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/8f3377d9f93a256f8e68ae183808fd767b529d18/crates%2Fra_lsp_server%2Fsrc%2Fmain_loop%2Fhandlers.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8f3377d9f93a256f8e68ae183808fd767b529d18/crates%2Fra_lsp_server%2Fsrc%2Fmain_loop%2Fhandlers.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_lsp_server%2Fsrc%2Fmain_loop%2Fhandlers.rs?ref=8f3377d9f93a256f8e68ae183808fd767b529d18", "patch": "@@ -21,7 +21,7 @@ use url_serde::Ser;\n use crate::{\n     cargo_target_spec::{runnable_args, CargoTargetSpec},\n     conv::{to_location, Conv, ConvWith, MapConvWith, TryConvWith, TryConvWithToVec},\n-    req::{self, Decoration},\n+    req::{self, Decoration, InlayHint, InlayHintsParams, InlayKind},\n     world::WorldSnapshot,\n     LspError, Result,\n };\n@@ -874,3 +874,24 @@ fn to_diagnostic_severity(severity: Severity) -> DiagnosticSeverity {\n         WeakWarning => DiagnosticSeverity::Hint,\n     }\n }\n+\n+pub fn handle_inlay_hints(\n+    world: WorldSnapshot,\n+    params: InlayHintsParams,\n+) -> Result<Vec<InlayHint>> {\n+    let file_id = params.text_document.try_conv_with(&world)?;\n+    let analysis = world.analysis();\n+    let line_index = analysis.file_line_index(file_id);\n+    Ok(analysis\n+        .inlay_hints(file_id)?\n+        .into_iter()\n+        .map(|api_type| InlayHint {\n+            label: api_type.label.to_string(),\n+            range: api_type.range.conv_with(&line_index),\n+            kind: match api_type.kind {\n+                ra_ide_api::InlayKind::LetBindingType => InlayKind::LetBindingType,\n+                ra_ide_api::InlayKind::ClosureParameterType => InlayKind::ClosureParameterType,\n+            },\n+        })\n+        .collect())\n+}"}, {"sha": "916185f99d17d99ef6b18133d0a144ee334b86e1", "filename": "crates/ra_lsp_server/src/req.rs", "status": "modified", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/8f3377d9f93a256f8e68ae183808fd767b529d18/crates%2Fra_lsp_server%2Fsrc%2Freq.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8f3377d9f93a256f8e68ae183808fd767b529d18/crates%2Fra_lsp_server%2Fsrc%2Freq.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_lsp_server%2Fsrc%2Freq.rs?ref=8f3377d9f93a256f8e68ae183808fd767b529d18", "patch": "@@ -196,3 +196,30 @@ pub struct SourceChange {\n     pub workspace_edit: WorkspaceEdit,\n     pub cursor_position: Option<TextDocumentPositionParams>,\n }\n+\n+pub enum InlayHints {}\n+\n+impl Request for InlayHints {\n+    type Params = InlayHintsParams;\n+    type Result = Vec<InlayHint>;\n+    const METHOD: &'static str = \"rust-analyzer/inlayHints\";\n+}\n+\n+#[derive(Serialize, Deserialize, Debug)]\n+#[serde(rename_all = \"camelCase\")]\n+pub struct InlayHintsParams {\n+    pub text_document: TextDocumentIdentifier,\n+}\n+\n+#[derive(Debug, PartialEq, Eq, Deserialize, Serialize)]\n+pub enum InlayKind {\n+    LetBindingType,\n+    ClosureParameterType,\n+}\n+\n+#[derive(Debug, Deserialize, Serialize)]\n+pub struct InlayHint {\n+    pub range: Range,\n+    pub kind: InlayKind,\n+    pub label: String,\n+}"}]}