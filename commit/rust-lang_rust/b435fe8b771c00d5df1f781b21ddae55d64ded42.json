{"sha": "b435fe8b771c00d5df1f781b21ddae55d64ded42", "node_id": "MDY6Q29tbWl0NzI0NzEyOmI0MzVmZThiNzcxYzAwZDVkZjFmNzgxYjIxZGRhZTU1ZDY0ZGVkNDI=", "commit": {"author": {"name": "Han Mertens", "email": "hanmertens@outlook.com", "date": "2020-02-12T21:55:37Z"}, "committer": {"name": "Han Mertens", "email": "hanmertens@outlook.com", "date": "2020-02-12T21:55:37Z"}, "message": "Add test for unnamed argument in function pointer", "tree": {"sha": "9932f2104ce671d0106edbbe5edf31ae14b2c587", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9932f2104ce671d0106edbbe5edf31ae14b2c587"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b435fe8b771c00d5df1f781b21ddae55d64ded42", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b435fe8b771c00d5df1f781b21ddae55d64ded42", "html_url": "https://github.com/rust-lang/rust/commit/b435fe8b771c00d5df1f781b21ddae55d64ded42", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b435fe8b771c00d5df1f781b21ddae55d64ded42/comments", "author": {"login": "hanmertens", "id": 21318961, "node_id": "MDQ6VXNlcjIxMzE4OTYx", "avatar_url": "https://avatars.githubusercontent.com/u/21318961?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hanmertens", "html_url": "https://github.com/hanmertens", "followers_url": "https://api.github.com/users/hanmertens/followers", "following_url": "https://api.github.com/users/hanmertens/following{/other_user}", "gists_url": "https://api.github.com/users/hanmertens/gists{/gist_id}", "starred_url": "https://api.github.com/users/hanmertens/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hanmertens/subscriptions", "organizations_url": "https://api.github.com/users/hanmertens/orgs", "repos_url": "https://api.github.com/users/hanmertens/repos", "events_url": "https://api.github.com/users/hanmertens/events{/privacy}", "received_events_url": "https://api.github.com/users/hanmertens/received_events", "type": "User", "site_admin": false}, "committer": {"login": "hanmertens", "id": 21318961, "node_id": "MDQ6VXNlcjIxMzE4OTYx", "avatar_url": "https://avatars.githubusercontent.com/u/21318961?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hanmertens", "html_url": "https://github.com/hanmertens", "followers_url": "https://api.github.com/users/hanmertens/followers", "following_url": "https://api.github.com/users/hanmertens/following{/other_user}", "gists_url": "https://api.github.com/users/hanmertens/gists{/gist_id}", "starred_url": "https://api.github.com/users/hanmertens/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hanmertens/subscriptions", "organizations_url": "https://api.github.com/users/hanmertens/orgs", "repos_url": "https://api.github.com/users/hanmertens/repos", "events_url": "https://api.github.com/users/hanmertens/events{/privacy}", "received_events_url": "https://api.github.com/users/hanmertens/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0e10e77a7820d08332744d91e44940a2321138c3", "url": "https://api.github.com/repos/rust-lang/rust/commits/0e10e77a7820d08332744d91e44940a2321138c3", "html_url": "https://github.com/rust-lang/rust/commit/0e10e77a7820d08332744d91e44940a2321138c3"}], "stats": {"total": 3, "additions": 3, "deletions": 0}, "files": [{"sha": "272661b1da49013a41edd5c21104751c0bbc2aff", "filename": "crates/ra_parser/src/grammar/params.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/b435fe8b771c00d5df1f781b21ddae55d64ded42/crates%2Fra_parser%2Fsrc%2Fgrammar%2Fparams.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b435fe8b771c00d5df1f781b21ddae55d64ded42/crates%2Fra_parser%2Fsrc%2Fgrammar%2Fparams.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_parser%2Fsrc%2Fgrammar%2Fparams.rs?ref=b435fe8b771c00d5df1f781b21ddae55d64ded42", "patch": "@@ -114,6 +114,9 @@ fn value_parameter(p: &mut Parser, flavor: Flavor) {\n         // test fn_pointer_param_ident_path\n         // type Foo = fn(Bar::Baz);\n         // type Qux = fn(baz: Bar::Baz);\n+\n+        // test fn_pointer_unnamed_arg\n+        // type Foo = fn(_: bar);\n         Flavor::FnPointer => {\n             if (p.at(IDENT) || p.at(UNDERSCORE)) && p.nth(1) == T![:] && !p.nth_at(1, T![::]) {\n                 patterns::pattern_single(p);"}]}