{"sha": "9321efd8f7138e99c69d134fda24b7bf9dc0c95b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjkzMjFlZmQ4ZjcxMzhlOTljNjlkMTM0ZmRhMjRiN2JmOWRjMGM5NWI=", "commit": {"author": {"name": "Ivan Tham", "email": "pickfire@riseup.net", "date": "2020-09-07T14:27:00Z"}, "committer": {"name": "Ivan Tham", "email": "pickfire@riseup.net", "date": "2021-03-17T01:02:19Z"}, "message": "Detect pub fn attr wrong order like `async pub`\n\nRedirects `const? async? unsafe? pub` to `pub const? async? unsafe?`.\n\nFix #76437", "tree": {"sha": "c4acb293b6a733640fefad65e5297a1a61ea68c4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c4acb293b6a733640fefad65e5297a1a61ea68c4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9321efd8f7138e99c69d134fda24b7bf9dc0c95b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9321efd8f7138e99c69d134fda24b7bf9dc0c95b", "html_url": "https://github.com/rust-lang/rust/commit/9321efd8f7138e99c69d134fda24b7bf9dc0c95b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9321efd8f7138e99c69d134fda24b7bf9dc0c95b/comments", "author": {"login": "pickfire", "id": 4687791, "node_id": "MDQ6VXNlcjQ2ODc3OTE=", "avatar_url": "https://avatars.githubusercontent.com/u/4687791?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pickfire", "html_url": "https://github.com/pickfire", "followers_url": "https://api.github.com/users/pickfire/followers", "following_url": "https://api.github.com/users/pickfire/following{/other_user}", "gists_url": "https://api.github.com/users/pickfire/gists{/gist_id}", "starred_url": "https://api.github.com/users/pickfire/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pickfire/subscriptions", "organizations_url": "https://api.github.com/users/pickfire/orgs", "repos_url": "https://api.github.com/users/pickfire/repos", "events_url": "https://api.github.com/users/pickfire/events{/privacy}", "received_events_url": "https://api.github.com/users/pickfire/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pickfire", "id": 4687791, "node_id": "MDQ6VXNlcjQ2ODc3OTE=", "avatar_url": "https://avatars.githubusercontent.com/u/4687791?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pickfire", "html_url": "https://github.com/pickfire", "followers_url": "https://api.github.com/users/pickfire/followers", "following_url": "https://api.github.com/users/pickfire/following{/other_user}", "gists_url": "https://api.github.com/users/pickfire/gists{/gist_id}", "starred_url": "https://api.github.com/users/pickfire/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pickfire/subscriptions", "organizations_url": "https://api.github.com/users/pickfire/orgs", "repos_url": "https://api.github.com/users/pickfire/repos", "events_url": "https://api.github.com/users/pickfire/events{/privacy}", "received_events_url": "https://api.github.com/users/pickfire/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f5d8117c338a788bd24abec733fd143dfceb25a0", "url": "https://api.github.com/repos/rust-lang/rust/commits/f5d8117c338a788bd24abec733fd143dfceb25a0", "html_url": "https://github.com/rust-lang/rust/commit/f5d8117c338a788bd24abec733fd143dfceb25a0"}], "stats": {"total": 198, "additions": 156, "deletions": 42}, "files": [{"sha": "2dc4edf9a1441e53dbff5a9cfd2c45d760f4b729", "filename": "compiler/rustc_parse/src/parser/item.rs", "status": "modified", "additions": 24, "deletions": 3, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/9321efd8f7138e99c69d134fda24b7bf9dc0c95b/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fitem.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9321efd8f7138e99c69d134fda24b7bf9dc0c95b/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fitem.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fitem.rs?ref=9321efd8f7138e99c69d134fda24b7bf9dc0c95b", "patch": "@@ -1639,7 +1639,8 @@ impl<'a> Parser<'a> {\n     pub(super) fn check_fn_front_matter(&mut self) -> bool {\n         // We use an over-approximation here.\n         // `const const`, `fn const` won't parse, but we're not stepping over other syntax either.\n-        const QUALS: [Symbol; 4] = [kw::Const, kw::Async, kw::Unsafe, kw::Extern];\n+        // `pub` is added in case users got confused with the ordering like `async pub fn`.\n+        const QUALS: [Symbol; 5] = [kw::Pub, kw::Const, kw::Async, kw::Unsafe, kw::Extern];\n         self.check_keyword(kw::Fn) // Definitely an `fn`.\n             // `$qual fn` or `$qual $qual`:\n             || QUALS.iter().any(|&kw| self.check_keyword(kw))\n@@ -1668,6 +1669,7 @@ impl<'a> Parser<'a> {\n     /// FnFrontMatter = FnQual \"fn\" ;\n     /// ```\n     pub(super) fn parse_fn_front_matter(&mut self) -> PResult<'a, FnHeader> {\n+        let sp_start = self.token.span;\n         let constness = self.parse_constness();\n         let asyncness = self.parse_asyncness();\n         let unsafety = self.parse_unsafety();\n@@ -1681,8 +1683,27 @@ impl<'a> Parser<'a> {\n             // It is possible for `expect_one_of` to recover given the contents of\n             // `self.expected_tokens`, therefore, do not use `self.unexpected()` which doesn't\n             // account for this.\n-            if !self.expect_one_of(&[], &[])? {\n-                unreachable!()\n+            match self.expect_one_of(&[], &[]) {\n+                Ok(true) => {}\n+                Ok(false) => unreachable!(),\n+                Err(mut err) => {\n+                    // Recover incorrect visibility order such as `async pub`.\n+                    if self.check_keyword(kw::Pub) {\n+                        let sp = sp_start.to(self.prev_token.span);\n+                        if let Ok(snippet) = self.span_to_snippet(sp) {\n+                            let vis = self.parse_visibility(FollowedByType::No)?;\n+                            let vs = pprust::vis_to_string(&vis);\n+                            let vs = vs.trim_end();\n+                            err.span_suggestion(\n+                                sp_start.to(self.prev_token.span),\n+                                &format!(\"visibility `{}` must come before `{}`\", vs, snippet),\n+                                format!(\"{} {}\", vs, snippet),\n+                                Applicability::MachineApplicable,\n+                            );\n+                        }\n+                    }\n+                    return Err(err);\n+                }\n             }\n         }\n "}, {"sha": "1e31a026d948258e7aaf945e76dff15034cbd247", "filename": "src/test/ui/parser/default.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/9321efd8f7138e99c69d134fda24b7bf9dc0c95b/src%2Ftest%2Fui%2Fparser%2Fdefault.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9321efd8f7138e99c69d134fda24b7bf9dc0c95b/src%2Ftest%2Fui%2Fparser%2Fdefault.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fdefault.rs?ref=9321efd8f7138e99c69d134fda24b7bf9dc0c95b", "patch": "@@ -1,3 +1,4 @@\n+// ignore-tidy-linelength\n // Test successful and unsuccessful parsing of the `default` contextual keyword\n \n #![feature(specialization)]\n@@ -21,8 +22,7 @@ impl Foo for u16 {\n \n impl Foo for u32 { //~ ERROR not all trait items implemented, missing: `foo`\n     default pub fn foo<T: Default>() -> T { T::default() }\n-    //~^ ERROR `default` is not followed by an item\n-    //~| ERROR non-item in item list\n+    //~^ ERROR expected one of `async`, `const`, `extern`, `fn`, `pub`, `unsafe`, or `use`, found keyword `pub`\n }\n \n fn main() {}"}, {"sha": "489613b1e096598aa3fc85324f39df2e87647a22", "filename": "src/test/ui/parser/default.stderr", "status": "modified", "additions": 13, "deletions": 18, "changes": 31, "blob_url": "https://github.com/rust-lang/rust/blob/9321efd8f7138e99c69d134fda24b7bf9dc0c95b/src%2Ftest%2Fui%2Fparser%2Fdefault.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/9321efd8f7138e99c69d134fda24b7bf9dc0c95b/src%2Ftest%2Fui%2Fparser%2Fdefault.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fdefault.stderr?ref=9321efd8f7138e99c69d134fda24b7bf9dc0c95b", "patch": "@@ -1,30 +1,25 @@\n-error: `default` is not followed by an item\n-  --> $DIR/default.rs:23:5\n-   |\n-LL |     default pub fn foo<T: Default>() -> T { T::default() }\n-   |     ^^^^^^^ the `default` qualifier\n-   |\n-   = note: only `fn`, `const`, `type`, or `impl` items may be prefixed by `default`\n-\n-error: non-item in item list\n-  --> $DIR/default.rs:23:13\n+error: expected one of `async`, `const`, `extern`, `fn`, `pub`, `unsafe`, or `use`, found keyword `pub`\n+  --> $DIR/default.rs:24:13\n    |\n LL | impl Foo for u32 {\n-   |                  - item list starts here\n+   |                  - while parsing this item list starting here\n LL |     default pub fn foo<T: Default>() -> T { T::default() }\n-   |             ^^^ non-item starts here\n-...\n+   |             ^^^\n+   |             |\n+   |             expected one of 7 possible tokens\n+   |             help: visibility `pub` must come before `default pub`: `pub default pub`\n+LL |\n LL | }\n-   | - item list ends here\n+   | - the item list ends here\n \n error[E0449]: unnecessary visibility qualifier\n-  --> $DIR/default.rs:17:5\n+  --> $DIR/default.rs:18:5\n    |\n LL |     pub default fn foo<T: Default>() -> T {\n    |     ^^^ `pub` not permitted here because it's implied\n \n warning: the feature `specialization` is incomplete and may not be safe to use and/or cause compiler crashes\n-  --> $DIR/default.rs:3:12\n+  --> $DIR/default.rs:4:12\n    |\n LL | #![feature(specialization)]\n    |            ^^^^^^^^^^^^^^\n@@ -34,15 +29,15 @@ LL | #![feature(specialization)]\n    = help: consider using `min_specialization` instead, which is more stable and complete\n \n error[E0046]: not all trait items implemented, missing: `foo`\n-  --> $DIR/default.rs:22:1\n+  --> $DIR/default.rs:23:1\n    |\n LL |     fn foo<T: Default>() -> T;\n    |     -------------------------- `foo` from trait\n ...\n LL | impl Foo for u32 {\n    | ^^^^^^^^^^^^^^^^ missing `foo` in implementation\n \n-error: aborting due to 4 previous errors; 1 warning emitted\n+error: aborting due to 3 previous errors; 1 warning emitted\n \n Some errors have detailed explanations: E0046, E0449.\n For more information about an error, try `rustc --explain E0046`."}, {"sha": "97f19b3da45265a0e2271dde5271c344c361cf2f", "filename": "src/test/ui/parser/duplicate-visibility.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/9321efd8f7138e99c69d134fda24b7bf9dc0c95b/src%2Ftest%2Fui%2Fparser%2Fduplicate-visibility.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9321efd8f7138e99c69d134fda24b7bf9dc0c95b/src%2Ftest%2Fui%2Fparser%2Fduplicate-visibility.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fduplicate-visibility.rs?ref=9321efd8f7138e99c69d134fda24b7bf9dc0c95b", "patch": "@@ -1,7 +1,8 @@\n+// ignore-tidy-linelength\n+\n fn main() {}\n \n extern \"C\" {\n     pub pub fn foo();\n-    //~^ ERROR visibility `pub` is not followed by an item\n-    //~| ERROR non-item in item list\n+    //~^ ERROR expected one of `(`, `async`, `const`, `default`, `extern`, `fn`, `pub`, `unsafe`, or `use`, found keyword `pub`\n }"}, {"sha": "6ac27078ea387f93b16dffde59431ce82c9435bf", "filename": "src/test/ui/parser/duplicate-visibility.stderr", "status": "modified", "additions": 10, "deletions": 15, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/9321efd8f7138e99c69d134fda24b7bf9dc0c95b/src%2Ftest%2Fui%2Fparser%2Fduplicate-visibility.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/9321efd8f7138e99c69d134fda24b7bf9dc0c95b/src%2Ftest%2Fui%2Fparser%2Fduplicate-visibility.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fduplicate-visibility.stderr?ref=9321efd8f7138e99c69d134fda24b7bf9dc0c95b", "patch": "@@ -1,21 +1,16 @@\n-error: visibility `pub` is not followed by an item\n-  --> $DIR/duplicate-visibility.rs:4:5\n-   |\n-LL |     pub pub fn foo();\n-   |     ^^^ the visibility\n-   |\n-   = help: you likely meant to define an item, e.g., `pub fn foo() {}`\n-\n-error: non-item in item list\n-  --> $DIR/duplicate-visibility.rs:4:9\n+error: expected one of `(`, `async`, `const`, `default`, `extern`, `fn`, `pub`, `unsafe`, or `use`, found keyword `pub`\n+  --> $DIR/duplicate-visibility.rs:6:9\n    |\n LL | extern \"C\" {\n-   |            - item list starts here\n+   |            - while parsing this item list starting here\n LL |     pub pub fn foo();\n-   |         ^^^ non-item starts here\n-...\n+   |         ^^^\n+   |         |\n+   |         expected one of 9 possible tokens\n+   |         help: visibility `pub` must come before `pub pub`: `pub pub pub`\n+LL |\n LL | }\n-   | - item list ends here\n+   | - the item list ends here\n \n-error: aborting due to 2 previous errors\n+error: aborting due to previous error\n "}, {"sha": "8d46f9c0fc49b3927183940deac0c7596f3f807f", "filename": "src/test/ui/parser/issue-63116.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/9321efd8f7138e99c69d134fda24b7bf9dc0c95b/src%2Ftest%2Fui%2Fparser%2Fissue-63116.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/9321efd8f7138e99c69d134fda24b7bf9dc0c95b/src%2Ftest%2Fui%2Fparser%2Fissue-63116.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fissue-63116.stderr?ref=9321efd8f7138e99c69d134fda24b7bf9dc0c95b", "patch": "@@ -1,4 +1,4 @@\n-error: this file contains an unclosed delimiter\n+=rror: this file contains an unclosed delimiter\n   --> $DIR/issue-63116.rs:3:18\n    |\n LL | impl W <s(f;Y(;]\n@@ -12,7 +12,7 @@ error: expected one of `!`, `(`, `)`, `+`, `,`, `::`, or `<`, found `;`\n LL | impl W <s(f;Y(;]\n    |            ^ expected one of 7 possible tokens\n \n-error: expected one of `!`, `&&`, `&`, `(`, `)`, `*`, `+`, `,`, `->`, `...`, `::`, `:`, `<`, `=`, `>`, `?`, `[`, `_`, `async`, `const`, `dyn`, `extern`, `fn`, `for`, `impl`, `unsafe`, lifetime, or path, found `;`\n+error: expected one of `!`, `&&`, `&`, `(`, `)`, `*`, `+`, `,`, `->`, `...`, `::`, `<`, `>`, `?`, `[`, `_`, `async`, `const`, `dyn`, `extern`, `fn`, `for`, `impl`, `pub`, `unsafe`, lifetime, or path, found `;`\n   --> $DIR/issue-63116.rs:3:15\n    |\n LL | impl W <s(f;Y(;]"}, {"sha": "6a6e96f2c881f4118372dc262ef6205f27826c36", "filename": "src/test/ui/parser/issue-76437-async.rs", "status": "added", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/9321efd8f7138e99c69d134fda24b7bf9dc0c95b/src%2Ftest%2Fui%2Fparser%2Fissue-76437-async.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9321efd8f7138e99c69d134fda24b7bf9dc0c95b/src%2Ftest%2Fui%2Fparser%2Fissue-76437-async.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fissue-76437-async.rs?ref=9321efd8f7138e99c69d134fda24b7bf9dc0c95b", "patch": "@@ -0,0 +1,6 @@\n+// edition:2018\n+\n+mod t {\n+    async pub fn t() {}\n+    //~^ ERROR expected one of `extern`, `fn`, or `unsafe`, found keyword `pub`\n+}"}, {"sha": "2c9c2a8cfba9ba0f2598989fad4afcb09e4fce80", "filename": "src/test/ui/parser/issue-76437-async.stderr", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/9321efd8f7138e99c69d134fda24b7bf9dc0c95b/src%2Ftest%2Fui%2Fparser%2Fissue-76437-async.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/9321efd8f7138e99c69d134fda24b7bf9dc0c95b/src%2Ftest%2Fui%2Fparser%2Fissue-76437-async.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fissue-76437-async.stderr?ref=9321efd8f7138e99c69d134fda24b7bf9dc0c95b", "patch": "@@ -0,0 +1,11 @@\n+error: expected one of `extern`, `fn`, or `unsafe`, found keyword `pub`\n+  --> $DIR/issue-76437-async.rs:4:11\n+   |\n+LL |     async pub fn t() {}\n+   |     ------^^^\n+   |     |     |\n+   |     |     expected one of `extern`, `fn`, or `unsafe`\n+   |     help: visibility `pub` must come before `async`: `pub async`\n+\n+error: aborting due to previous error\n+"}, {"sha": "f9c0c6dbed8e7729ab84192b7247cca96421d152", "filename": "src/test/ui/parser/issue-76437-const-async-unsafe.rs", "status": "added", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/9321efd8f7138e99c69d134fda24b7bf9dc0c95b/src%2Ftest%2Fui%2Fparser%2Fissue-76437-const-async-unsafe.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9321efd8f7138e99c69d134fda24b7bf9dc0c95b/src%2Ftest%2Fui%2Fparser%2Fissue-76437-const-async-unsafe.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fissue-76437-const-async-unsafe.rs?ref=9321efd8f7138e99c69d134fda24b7bf9dc0c95b", "patch": "@@ -0,0 +1,6 @@\n+// edition:2018\n+\n+mod t {\n+    const async unsafe pub fn t() {}\n+    //~^ ERROR expected one of `extern` or `fn`, found keyword `pub`\n+}"}, {"sha": "2e91beda1165d1958faaf5f76aadaf79c7fe6adb", "filename": "src/test/ui/parser/issue-76437-const-async-unsafe.stderr", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/9321efd8f7138e99c69d134fda24b7bf9dc0c95b/src%2Ftest%2Fui%2Fparser%2Fissue-76437-const-async-unsafe.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/9321efd8f7138e99c69d134fda24b7bf9dc0c95b/src%2Ftest%2Fui%2Fparser%2Fissue-76437-const-async-unsafe.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fissue-76437-const-async-unsafe.stderr?ref=9321efd8f7138e99c69d134fda24b7bf9dc0c95b", "patch": "@@ -0,0 +1,11 @@\n+error: expected one of `extern` or `fn`, found keyword `pub`\n+  --> $DIR/issue-76437-const-async-unsafe.rs:4:24\n+   |\n+LL |     const async unsafe pub fn t() {}\n+   |     -------------------^^^\n+   |     |                  |\n+   |     |                  expected one of `extern` or `fn`\n+   |     help: visibility `pub` must come before `const async unsafe`: `pub const async unsafe`\n+\n+error: aborting due to previous error\n+"}, {"sha": "79bf801ece3cc3e27a005f03a5f59dd66a63c1d8", "filename": "src/test/ui/parser/issue-76437-const-async.rs", "status": "added", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/9321efd8f7138e99c69d134fda24b7bf9dc0c95b/src%2Ftest%2Fui%2Fparser%2Fissue-76437-const-async.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9321efd8f7138e99c69d134fda24b7bf9dc0c95b/src%2Ftest%2Fui%2Fparser%2Fissue-76437-const-async.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fissue-76437-const-async.rs?ref=9321efd8f7138e99c69d134fda24b7bf9dc0c95b", "patch": "@@ -0,0 +1,6 @@\n+// edition:2018\n+\n+mod t {\n+    const async pub fn t() {}\n+    //~^ ERROR expected one of `extern`, `fn`, or `unsafe`, found keyword `pub`\n+}"}, {"sha": "21b96c14d7de04c8c01e89bfb752583a41ea206d", "filename": "src/test/ui/parser/issue-76437-const-async.stderr", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/9321efd8f7138e99c69d134fda24b7bf9dc0c95b/src%2Ftest%2Fui%2Fparser%2Fissue-76437-const-async.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/9321efd8f7138e99c69d134fda24b7bf9dc0c95b/src%2Ftest%2Fui%2Fparser%2Fissue-76437-const-async.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fissue-76437-const-async.stderr?ref=9321efd8f7138e99c69d134fda24b7bf9dc0c95b", "patch": "@@ -0,0 +1,11 @@\n+error: expected one of `extern`, `fn`, or `unsafe`, found keyword `pub`\n+  --> $DIR/issue-76437-const-async.rs:4:17\n+   |\n+LL |     const async pub fn t() {}\n+   |     ------------^^^\n+   |     |           |\n+   |     |           expected one of `extern`, `fn`, or `unsafe`\n+   |     help: visibility `pub` must come before `const async`: `pub const async`\n+\n+error: aborting due to previous error\n+"}, {"sha": "5dd151d8b76836a6af4fa1ca259b5981b4bb8a6f", "filename": "src/test/ui/parser/issue-76437-const.rs", "status": "added", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/9321efd8f7138e99c69d134fda24b7bf9dc0c95b/src%2Ftest%2Fui%2Fparser%2Fissue-76437-const.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9321efd8f7138e99c69d134fda24b7bf9dc0c95b/src%2Ftest%2Fui%2Fparser%2Fissue-76437-const.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fissue-76437-const.rs?ref=9321efd8f7138e99c69d134fda24b7bf9dc0c95b", "patch": "@@ -0,0 +1,6 @@\n+// edition:2018\n+\n+mod t {\n+    const pub fn t() {}\n+    //~^ ERROR expected one of `async`, `extern`, `fn`, or `unsafe`, found keyword `pub`\n+}"}, {"sha": "cf80d9a9037c9707f8fd6fcdaa6bc8bd1578d1fc", "filename": "src/test/ui/parser/issue-76437-const.stderr", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/9321efd8f7138e99c69d134fda24b7bf9dc0c95b/src%2Ftest%2Fui%2Fparser%2Fissue-76437-const.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/9321efd8f7138e99c69d134fda24b7bf9dc0c95b/src%2Ftest%2Fui%2Fparser%2Fissue-76437-const.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fissue-76437-const.stderr?ref=9321efd8f7138e99c69d134fda24b7bf9dc0c95b", "patch": "@@ -0,0 +1,11 @@\n+error: expected one of `async`, `extern`, `fn`, or `unsafe`, found keyword `pub`\n+  --> $DIR/issue-76437-const.rs:4:11\n+   |\n+LL |     const pub fn t() {}\n+   |     ------^^^\n+   |     |     |\n+   |     |     expected one of `async`, `extern`, `fn`, or `unsafe`\n+   |     help: visibility `pub` must come before `const`: `pub const`\n+\n+error: aborting due to previous error\n+"}, {"sha": "e9269ef8e0fc7f5fbaabe84e6755f5a65d43d8d7", "filename": "src/test/ui/parser/issue-76437-pub-crate-unsafe.rs", "status": "added", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/9321efd8f7138e99c69d134fda24b7bf9dc0c95b/src%2Ftest%2Fui%2Fparser%2Fissue-76437-pub-crate-unsafe.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9321efd8f7138e99c69d134fda24b7bf9dc0c95b/src%2Ftest%2Fui%2Fparser%2Fissue-76437-pub-crate-unsafe.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fissue-76437-pub-crate-unsafe.rs?ref=9321efd8f7138e99c69d134fda24b7bf9dc0c95b", "patch": "@@ -0,0 +1,6 @@\n+// edition:2018\n+\n+mod t {\n+    unsafe pub(crate) fn t() {}\n+    //~^ ERROR expected one of `extern` or `fn`, found keyword `pub`\n+}"}, {"sha": "fa8f13721c89401c4784fe644d113102aa72d76d", "filename": "src/test/ui/parser/issue-76437-pub-crate-unsafe.stderr", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/9321efd8f7138e99c69d134fda24b7bf9dc0c95b/src%2Ftest%2Fui%2Fparser%2Fissue-76437-pub-crate-unsafe.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/9321efd8f7138e99c69d134fda24b7bf9dc0c95b/src%2Ftest%2Fui%2Fparser%2Fissue-76437-pub-crate-unsafe.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fissue-76437-pub-crate-unsafe.stderr?ref=9321efd8f7138e99c69d134fda24b7bf9dc0c95b", "patch": "@@ -0,0 +1,11 @@\n+error: expected one of `extern` or `fn`, found keyword `pub`\n+  --> $DIR/issue-76437-pub-crate-unsafe.rs:4:12\n+   |\n+LL |     unsafe pub(crate) fn t() {}\n+   |     -------^^^-------\n+   |     |      |\n+   |     |      expected one of `extern` or `fn`\n+   |     help: visibility `pub(crate)` must come before `unsafe`: `pub(crate) unsafe`\n+\n+error: aborting due to previous error\n+"}, {"sha": "95538aaea696fd176a6bffee4d821bb9fbc3df0d", "filename": "src/test/ui/parser/issue-76437-unsafe.rs", "status": "added", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/9321efd8f7138e99c69d134fda24b7bf9dc0c95b/src%2Ftest%2Fui%2Fparser%2Fissue-76437-unsafe.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9321efd8f7138e99c69d134fda24b7bf9dc0c95b/src%2Ftest%2Fui%2Fparser%2Fissue-76437-unsafe.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fissue-76437-unsafe.rs?ref=9321efd8f7138e99c69d134fda24b7bf9dc0c95b", "patch": "@@ -0,0 +1,6 @@\n+// edition:2018\n+\n+mod t {\n+    unsafe pub fn t() {}\n+    //~^ ERROR expected one of `extern` or `fn`, found keyword `pub`\n+}"}, {"sha": "c63292ef853958796d035164dcef057cb87955e5", "filename": "src/test/ui/parser/issue-76437-unsafe.stderr", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/9321efd8f7138e99c69d134fda24b7bf9dc0c95b/src%2Ftest%2Fui%2Fparser%2Fissue-76437-unsafe.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/9321efd8f7138e99c69d134fda24b7bf9dc0c95b/src%2Ftest%2Fui%2Fparser%2Fissue-76437-unsafe.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fissue-76437-unsafe.stderr?ref=9321efd8f7138e99c69d134fda24b7bf9dc0c95b", "patch": "@@ -0,0 +1,11 @@\n+error: expected one of `extern` or `fn`, found keyword `pub`\n+  --> $DIR/issue-76437-unsafe.rs:4:12\n+   |\n+LL |     unsafe pub fn t() {}\n+   |     -------^^^\n+   |     |      |\n+   |     |      expected one of `extern` or `fn`\n+   |     help: visibility `pub` must come before `unsafe`: `pub unsafe`\n+\n+error: aborting due to previous error\n+"}]}