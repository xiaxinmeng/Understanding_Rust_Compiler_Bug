{"sha": "3ffaaab9e9e3a2437fd9ed5b04cf3ba3695cc2d2", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNmZmFhYWI5ZTllM2EyNDM3ZmQ5ZWQ1YjA0Y2YzYmEzNjk1Y2MyZDI=", "commit": {"author": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2013-04-01T22:33:21Z"}, "committer": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2013-04-19T18:53:32Z"}, "message": "librustc: Switch the `@`s in types with `~`", "tree": {"sha": "bda2064de1f021a6f6597ec4edc589560d049a5f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bda2064de1f021a6f6597ec4edc589560d049a5f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3ffaaab9e9e3a2437fd9ed5b04cf3ba3695cc2d2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3ffaaab9e9e3a2437fd9ed5b04cf3ba3695cc2d2", "html_url": "https://github.com/rust-lang/rust/commit/3ffaaab9e9e3a2437fd9ed5b04cf3ba3695cc2d2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3ffaaab9e9e3a2437fd9ed5b04cf3ba3695cc2d2/comments", "author": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "af42d37547c15732a7c9d358c0a14967aef75e96", "url": "https://api.github.com/repos/rust-lang/rust/commits/af42d37547c15732a7c9d358c0a14967aef75e96", "html_url": "https://github.com/rust-lang/rust/commit/af42d37547c15732a7c9d358c0a14967aef75e96"}], "stats": {"total": 19, "additions": 13, "deletions": 6}, "files": [{"sha": "ef0b2070a0e09665cf41fc3d49c34e7cd5580976", "filename": "src/librustc/middle/ty.rs", "status": "modified", "additions": 12, "deletions": 6, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/3ffaaab9e9e3a2437fd9ed5b04cf3ba3695cc2d2/src%2Flibrustc%2Fmiddle%2Fty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3ffaaab9e9e3a2437fd9ed5b04cf3ba3695cc2d2/src%2Flibrustc%2Fmiddle%2Fty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fty.rs?ref=3ffaaab9e9e3a2437fd9ed5b04cf3ba3695cc2d2", "patch": "@@ -232,7 +232,7 @@ pub type ctxt = @ctxt_;\n \n struct ctxt_ {\n     diag: @syntax::diagnostic::span_handler,\n-    interner: @mut HashMap<intern_key, t_box>,\n+    interner: @mut HashMap<intern_key, ~t_box_>,\n     next_id: @mut uint,\n     vecs_implicitly_copyable: bool,\n     legacy_modes: bool,\n@@ -320,7 +320,7 @@ enum tbox_flag {\n     needs_subst = 1 | 2 | 8\n }\n \n-type t_box = @t_box_;\n+type t_box = &'static t_box_;\n \n struct t_box_ {\n     sty: sty,\n@@ -903,7 +903,7 @@ fn mk_t(cx: ctxt, +st: sty) -> t { mk_t_with_id(cx, st, None) }\n fn mk_t_with_id(cx: ctxt, +st: sty, o_def_id: Option<ast::def_id>) -> t {\n     let key = intern_key { sty: to_unsafe_ptr(&st), o_def_id: o_def_id };\n     match cx.interner.find(&key) {\n-      Some(&t) => unsafe { return cast::reinterpret_cast(&t); },\n+      Some(t) => unsafe { return cast::transmute(&t.sty); },\n       _ => ()\n     }\n \n@@ -973,21 +973,27 @@ fn mk_t_with_id(cx: ctxt, +st: sty, o_def_id: Option<ast::def_id>) -> t {\n       }\n     }\n \n-    let t = @t_box_ {\n+    let t = ~t_box_ {\n         sty: st,\n         id: *cx.next_id,\n         flags: flags,\n         o_def_id: o_def_id\n     };\n+\n+    let sty_ptr = to_unsafe_ptr(&t.sty);\n+\n     let key = intern_key {\n-        sty: to_unsafe_ptr(&t.sty),\n+        sty: sty_ptr,\n         o_def_id: o_def_id\n     };\n \n     cx.interner.insert(key, t);\n \n     *cx.next_id += 1;\n-    unsafe { cast::reinterpret_cast(&t) }\n+\n+    unsafe {\n+        cast::transmute::<*sty, t>(sty_ptr)\n+    }\n }\n \n pub fn mk_nil(cx: ctxt) -> t { mk_t(cx, ty_nil) }"}, {"sha": "b75aa3c909b9692aca57a8a398f70275b9023ca6", "filename": "src/test/bench/core-map.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/3ffaaab9e9e3a2437fd9ed5b04cf3ba3695cc2d2/src%2Ftest%2Fbench%2Fcore-map.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3ffaaab9e9e3a2437fd9ed5b04cf3ba3695cc2d2/src%2Ftest%2Fbench%2Fcore-map.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fbench%2Fcore-map.rs?ref=3ffaaab9e9e3a2437fd9ed5b04cf3ba3695cc2d2", "patch": "@@ -88,6 +88,7 @@ fn vector<M: Map<uint, uint>>(map: &mut M, n_keys: uint, dist: &[uint]) {\n     }\n }\n \n+#[fixed_stack_segment]\n fn main() {\n     let args = os::args();\n     let n_keys = {"}]}