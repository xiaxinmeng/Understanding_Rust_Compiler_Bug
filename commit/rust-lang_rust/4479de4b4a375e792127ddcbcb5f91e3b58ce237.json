{"sha": "4479de4b4a375e792127ddcbcb5f91e3b58ce237", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ0NzlkZTRiNGEzNzVlNzkyMTI3ZGRjYmNiNWY5MWUzYjU4Y2UyMzc=", "commit": {"author": {"name": "Pietro Albini", "email": "pietro@pietroalbini.org", "date": "2019-10-10T15:04:44Z"}, "committer": {"name": "Pietro Albini", "email": "pietro@pietroalbini.org", "date": "2019-10-29T09:07:39Z"}, "message": "ci: extract uploading artifacts into a script", "tree": {"sha": "7c4750b6a9873d70cb5951050d4b5954722a11cf", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7c4750b6a9873d70cb5951050d4b5954722a11cf"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4479de4b4a375e792127ddcbcb5f91e3b58ce237", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE1JbYPtLJAsc22U9xPgar6Auq8ZwFAl24AVsACgkQPgar6Auq\n8ZyzmA/9HO3Xd3SdiOlMSIAozm3/rTdvF5nLgmsU42l6G3YrS2GxYB0wHFjJc/+h\nL3c2XBDq63Nh6bhxE9DAltyLZj9Gp8F9ib+IE1C7VQKGxWuPM7iOsIRbYexcpMrw\nvOWJJ3ILLl3Dg6cwJ4kdfEmoMsZBTBtouiZiyGLrpva3y9jaQagN+/kbm68oWp4v\nBhpxU3BWwVngdTMFcMNFSbUq9+kLYhezJWglJ7L/oqkG3YgX8WJiZOXrGzj8+KMM\n3rM209/cECZzzg7Ani+vI5R0e6XsXoBtrx6g+dIeWthElk+C4JUATdSRd808zmPT\nxsVLcTPR9ecim7WaSptkxkV9icRFQPkgNhIlwLIjSNG03rhYTpEVCTURIDvLWVla\n7V4A2VEEUwpAc6IQdlO36verrk8MUuLxtUPKE4fSCPz5ESD8hk0osKBqwr8xbItC\nbYb42cFzKhF/sfvSJVRm//+1U9fkILMumP2tLrnCSFsbxx31d9HQpRqlVv/w56HT\ngEbIylztJLY+AqG1dsbb9/aLO0gEjhto0JhDLoz9KGsO9eiV66Jz/ZlXxs18g3eZ\nPw9HnkQLHsru3e5MT0FYHm3NlOAFu2/Cv3AR59PSnIZR0bsFWKYLGW4kj/gskoUj\ndfHdvuzTHChPnlX3A0C74M3ovjeStcC2lRyhoJ54ARTG4tm1dHs=\n=zoSD\n-----END PGP SIGNATURE-----", "payload": "tree 7c4750b6a9873d70cb5951050d4b5954722a11cf\nparent 2dd4e7320e620dc9a59423c55a7db3520ba8b553\nauthor Pietro Albini <pietro@pietroalbini.org> 1570719884 +0200\ncommitter Pietro Albini <pietro@pietroalbini.org> 1572340059 +0100\n\nci: extract uploading artifacts into a script\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4479de4b4a375e792127ddcbcb5f91e3b58ce237", "html_url": "https://github.com/rust-lang/rust/commit/4479de4b4a375e792127ddcbcb5f91e3b58ce237", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4479de4b4a375e792127ddcbcb5f91e3b58ce237/comments", "author": {"login": "pietroalbini", "id": 2299951, "node_id": "MDQ6VXNlcjIyOTk5NTE=", "avatar_url": "https://avatars.githubusercontent.com/u/2299951?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pietroalbini", "html_url": "https://github.com/pietroalbini", "followers_url": "https://api.github.com/users/pietroalbini/followers", "following_url": "https://api.github.com/users/pietroalbini/following{/other_user}", "gists_url": "https://api.github.com/users/pietroalbini/gists{/gist_id}", "starred_url": "https://api.github.com/users/pietroalbini/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pietroalbini/subscriptions", "organizations_url": "https://api.github.com/users/pietroalbini/orgs", "repos_url": "https://api.github.com/users/pietroalbini/repos", "events_url": "https://api.github.com/users/pietroalbini/events{/privacy}", "received_events_url": "https://api.github.com/users/pietroalbini/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pietroalbini", "id": 2299951, "node_id": "MDQ6VXNlcjIyOTk5NTE=", "avatar_url": "https://avatars.githubusercontent.com/u/2299951?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pietroalbini", "html_url": "https://github.com/pietroalbini", "followers_url": "https://api.github.com/users/pietroalbini/followers", "following_url": "https://api.github.com/users/pietroalbini/following{/other_user}", "gists_url": "https://api.github.com/users/pietroalbini/gists{/gist_id}", "starred_url": "https://api.github.com/users/pietroalbini/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pietroalbini/subscriptions", "organizations_url": "https://api.github.com/users/pietroalbini/orgs", "repos_url": "https://api.github.com/users/pietroalbini/repos", "events_url": "https://api.github.com/users/pietroalbini/events{/privacy}", "received_events_url": "https://api.github.com/users/pietroalbini/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2dd4e7320e620dc9a59423c55a7db3520ba8b553", "url": "https://api.github.com/repos/rust-lang/rust/commits/2dd4e7320e620dc9a59423c55a7db3520ba8b553", "html_url": "https://github.com/rust-lang/rust/commit/2dd4e7320e620dc9a59423c55a7db3520ba8b553"}], "stats": {"total": 84, "additions": 54, "deletions": 30}, "files": [{"sha": "c82bc6af738a0a61fafa92a02083e93d634311d7", "filename": "src/ci/azure-pipelines/steps/run.yml", "status": "modified", "additions": 14, "deletions": 30, "changes": 44, "blob_url": "https://github.com/rust-lang/rust/blob/4479de4b4a375e792127ddcbcb5f91e3b58ce237/src%2Fci%2Fazure-pipelines%2Fsteps%2Frun.yml", "raw_url": "https://github.com/rust-lang/rust/raw/4479de4b4a375e792127ddcbcb5f91e3b58ce237/src%2Fci%2Fazure-pipelines%2Fsteps%2Frun.yml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fazure-pipelines%2Fsteps%2Frun.yml?ref=4479de4b4a375e792127ddcbcb5f91e3b58ce237", "patch": "@@ -201,37 +201,21 @@ steps:\n   condition: and(succeeded(), not(variables.SKIP_JOB))\n   displayName: Run build\n \n-# If we're a deploy builder, use the `aws` command to publish everything to our\n-# bucket.\n-- bash: |\n-    set -e\n-    source src/ci/shared.sh\n-    if [ \"$AGENT_OS\" = \"Linux\" ]; then\n-        rm -rf obj/build/dist/doc\n-        upload_dir=obj/build/dist\n-    else\n-        rm -rf build/dist/doc\n-        upload_dir=build/dist\n-    fi\n-    ls -la $upload_dir\n-    deploy_dir=rustc-builds\n-    if [ \"$DEPLOY_ALT\" == \"1\" ]; then\n-        deploy_dir=rustc-builds-alt\n-    fi\n-    retry aws s3 cp --no-progress --recursive --acl public-read ./$upload_dir s3://$DEPLOY_BUCKET/$deploy_dir/$BUILD_SOURCEVERSION\n+- bash: src/ci/scripts/upload-artifacts.sh\n   env:\n     AWS_ACCESS_KEY_ID: $(UPLOAD_AWS_ACCESS_KEY_ID)\n     AWS_SECRET_ACCESS_KEY: $(UPLOAD_AWS_SECRET_ACCESS_KEY)\n-  condition: and(succeeded(), not(variables.SKIP_JOB), or(eq(variables.DEPLOY, '1'), eq(variables.DEPLOY_ALT, '1')))\n   displayName: Upload artifacts\n-\n-# Upload CPU usage statistics that we've been gathering this whole time. Always\n-# execute this step in case we want to inspect failed builds, but don't let\n-# errors here ever fail the build since this is just informational.\n-- bash: aws s3 cp --acl public-read cpu-usage.csv s3://$DEPLOY_BUCKET/rustc-builds/$BUILD_SOURCEVERSION/cpu-$CI_JOB_NAME.csv\n-  env:\n-    AWS_ACCESS_KEY_ID: $(UPLOAD_AWS_ACCESS_KEY_ID)\n-    AWS_SECRET_ACCESS_KEY: $(UPLOAD_AWS_SECRET_ACCESS_KEY)\n-  condition: variables['UPLOAD_AWS_SECRET_ACCESS_KEY']\n-  continueOnError: true\n-  displayName: Upload CPU usage statistics\n+  # Adding a condition on DEPLOY=1 or DEPLOY_ALT=1 is not needed as all deploy\n+  # builders *should* have the AWS credentials available. Still, explicitly\n+  # adding the condition is helpful as this way CI will not silently skip\n+  # deploying artifacts from a dist builder if the variables are misconfigured,\n+  # erroring about invalid credentials instead.\n+  condition: |\n+    and(\n+      succeeded(), not(variables.SKIP_JOB),\n+      or(\n+        variables.UPLOAD_AWS_SECRET_ACCESS_KEY,\n+        eq(variables.DEPLOY, '1'), eq(variables.DEPLOY_ALT, '1')\n+      )\n+    )"}, {"sha": "2d24fc53a9505e42b0c8dd8d46c3581c6f602772", "filename": "src/ci/scripts/upload-artifacts.sh", "status": "added", "additions": 36, "deletions": 0, "changes": 36, "blob_url": "https://github.com/rust-lang/rust/blob/4479de4b4a375e792127ddcbcb5f91e3b58ce237/src%2Fci%2Fscripts%2Fupload-artifacts.sh", "raw_url": "https://github.com/rust-lang/rust/raw/4479de4b4a375e792127ddcbcb5f91e3b58ce237/src%2Fci%2Fscripts%2Fupload-artifacts.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fscripts%2Fupload-artifacts.sh?ref=4479de4b4a375e792127ddcbcb5f91e3b58ce237", "patch": "@@ -0,0 +1,36 @@\n+#!/bin/bash\n+# Upload all the artifacts to our S3 bucket. All the files inside ${upload_dir}\n+# will be uploaded to the deploy bucket and eventually signed and released in\n+# static.rust-lang.org.\n+\n+set -euo pipefail\n+IFS=$'\\n\\t'\n+\n+source \"$(cd \"$(dirname \"$0\")\" && pwd)/../shared.sh\"\n+\n+upload_dir=\"$(mktemp -d)\"\n+\n+# Release tarballs produced by a dist builder.\n+if [[ \"${DEPLOY-0}\" = \"1\" ]] || [[ \"${DEPLOY_ALT-0}\" = \"1\" ]]; then\n+    dist_dir=build/dist\n+    if isLinux; then\n+        dist_dir=obj/build/dist\n+    fi\n+    rm -rf \"${dist_dir}/doc\"\n+    cp -r \"${dist_dir}\"/* \"${upload_dir}\"\n+fi\n+\n+# CPU usage statistics.\n+cp cpu-usage.csv \"${upload_dir}/cpu-${CI_JOB_NAME}.csv\"\n+\n+echo \"Files that will be uploaded:\"\n+ls -lah \"${upload_dir}\"\n+echo\n+\n+deploy_dir=\"rustc-builds\"\n+if [[ \"${DEPLOY_ALT-0}\" = \"1\" ]]; then\n+    deploy_dir=\"rustc-builds-alt\"\n+fi\n+deploy_url=\"s3://${DEPLOY_BUCKET}/${deploy_dir}/$(ciCommit)\"\n+\n+retry aws s3 cp --no-progress --recursive --acl public-read \"${upload_dir}\" \"${deploy_url}\""}, {"sha": "718a5379ae558c44aac11ac160163b71eb19225a", "filename": "src/ci/shared.sh", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/4479de4b4a375e792127ddcbcb5f91e3b58ce237/src%2Fci%2Fshared.sh", "raw_url": "https://github.com/rust-lang/rust/raw/4479de4b4a375e792127ddcbcb5f91e3b58ce237/src%2Fci%2Fshared.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fshared.sh?ref=4479de4b4a375e792127ddcbcb5f91e3b58ce237", "patch": "@@ -46,6 +46,10 @@ function getCIBranch {\n   echo \"$BUILD_SOURCEBRANCHNAME\"\n }\n \n+function ciCommit {\n+  echo \"${BUILD_SOURCEVERSION}\"\n+}\n+\n function ciCommandAddPath {\n     if [[ $# -ne 1 ]]; then\n         echo \"usage: $0 <path>\""}]}