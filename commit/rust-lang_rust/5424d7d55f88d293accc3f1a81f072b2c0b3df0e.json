{"sha": "5424d7d55f88d293accc3f1a81f072b2c0b3df0e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjU0MjRkN2Q1NWY4OGQyOTNhY2NjM2YxYTgxZjA3MmIyYzBiM2RmMGU=", "commit": {"author": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2020-01-10T11:14:28Z"}, "committer": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2020-01-10T11:14:28Z"}, "message": "Prepare for basic blocks", "tree": {"sha": "090fcd81a712bb49e4b09f71eba6c96fe163de4a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/090fcd81a712bb49e4b09f71eba6c96fe163de4a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5424d7d55f88d293accc3f1a81f072b2c0b3df0e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5424d7d55f88d293accc3f1a81f072b2c0b3df0e", "html_url": "https://github.com/rust-lang/rust/commit/5424d7d55f88d293accc3f1a81f072b2c0b3df0e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5424d7d55f88d293accc3f1a81f072b2c0b3df0e/comments", "author": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "72729e22116652f8e6d34736f4d8502558e0fbb1", "url": "https://api.github.com/repos/rust-lang/rust/commits/72729e22116652f8e6d34736f4d8502558e0fbb1", "html_url": "https://github.com/rust-lang/rust/commit/72729e22116652f8e6d34736f4d8502558e0fbb1"}], "stats": {"total": 10, "additions": 8, "deletions": 2}, "files": [{"sha": "9a3a7870b0dfa7d9e9e89a9b366c31c9bdcf1230", "filename": "src/base.rs", "status": "modified", "additions": 8, "deletions": 2, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/5424d7d55f88d293accc3f1a81f072b2c0b3df0e/src%2Fbase.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5424d7d55f88d293accc3f1a81f072b2c0b3df0e/src%2Fbase.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbase.rs?ref=5424d7d55f88d293accc3f1a81f072b2c0b3df0e", "patch": "@@ -182,11 +182,17 @@ fn codegen_fn_content(fx: &mut FunctionCx<'_, '_, impl Backend>) {\n                 }\n                 let cond = trans_operand(fx, cond).load_scalar(fx);\n                 let target = fx.get_ebb(*target);\n+                let failure = fx.bcx.create_ebb();\n                 if *expected {\n-                    fx.bcx.ins().brnz(cond, target, &[]);\n+                    fx.bcx.ins().brz(cond, failure, &[]);\n                 } else {\n-                    fx.bcx.ins().brz(cond, target, &[]);\n+                    fx.bcx.ins().brnz(cond, failure, &[]);\n                 };\n+                fx.bcx.ins().jump(target, &[]);\n+\n+                // FIXME insert bb after all other bb's to reduce the amount of jumps in the common\n+                // case and improve code locality.\n+                fx.bcx.switch_to_block(failure);\n                 trap_panic(\n                     fx,\n                     format!("}]}