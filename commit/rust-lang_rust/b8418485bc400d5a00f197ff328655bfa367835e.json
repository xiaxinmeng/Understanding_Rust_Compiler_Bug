{"sha": "b8418485bc400d5a00f197ff328655bfa367835e", "node_id": "C_kwDOAAsO6NoAKGI4NDE4NDg1YmM0MDBkNWEwMGYxOTdmZjMyODY1NWJmYTM2NzgzNWU", "commit": {"author": {"name": "Takayuki Maeda", "email": "takoyaki0316@gmail.com", "date": "2022-10-13T04:07:56Z"}, "committer": {"name": "Takayuki Maeda", "email": "takoyaki0316@gmail.com", "date": "2022-10-14T04:31:15Z"}, "message": "check if the self type is `ty::Float` before getting second substs", "tree": {"sha": "0cfb597239d85fb82e3d623a38c9df5d959d94f8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0cfb597239d85fb82e3d623a38c9df5d959d94f8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b8418485bc400d5a00f197ff328655bfa367835e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b8418485bc400d5a00f197ff328655bfa367835e", "html_url": "https://github.com/rust-lang/rust/commit/b8418485bc400d5a00f197ff328655bfa367835e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b8418485bc400d5a00f197ff328655bfa367835e/comments", "author": {"login": "TaKO8Ki", "id": 41065217, "node_id": "MDQ6VXNlcjQxMDY1MjE3", "avatar_url": "https://avatars.githubusercontent.com/u/41065217?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TaKO8Ki", "html_url": "https://github.com/TaKO8Ki", "followers_url": "https://api.github.com/users/TaKO8Ki/followers", "following_url": "https://api.github.com/users/TaKO8Ki/following{/other_user}", "gists_url": "https://api.github.com/users/TaKO8Ki/gists{/gist_id}", "starred_url": "https://api.github.com/users/TaKO8Ki/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TaKO8Ki/subscriptions", "organizations_url": "https://api.github.com/users/TaKO8Ki/orgs", "repos_url": "https://api.github.com/users/TaKO8Ki/repos", "events_url": "https://api.github.com/users/TaKO8Ki/events{/privacy}", "received_events_url": "https://api.github.com/users/TaKO8Ki/received_events", "type": "User", "site_admin": false}, "committer": {"login": "TaKO8Ki", "id": 41065217, "node_id": "MDQ6VXNlcjQxMDY1MjE3", "avatar_url": "https://avatars.githubusercontent.com/u/41065217?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TaKO8Ki", "html_url": "https://github.com/TaKO8Ki", "followers_url": "https://api.github.com/users/TaKO8Ki/followers", "following_url": "https://api.github.com/users/TaKO8Ki/following{/other_user}", "gists_url": "https://api.github.com/users/TaKO8Ki/gists{/gist_id}", "starred_url": "https://api.github.com/users/TaKO8Ki/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TaKO8Ki/subscriptions", "organizations_url": "https://api.github.com/users/TaKO8Ki/orgs", "repos_url": "https://api.github.com/users/TaKO8Ki/repos", "events_url": "https://api.github.com/users/TaKO8Ki/events{/privacy}", "received_events_url": "https://api.github.com/users/TaKO8Ki/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "edabf59ca4646b3fc1a961c26431215001043f6a", "url": "https://api.github.com/repos/rust-lang/rust/commits/edabf59ca4646b3fc1a961c26431215001043f6a", "html_url": "https://github.com/rust-lang/rust/commit/edabf59ca4646b3fc1a961c26431215001043f6a"}], "stats": {"total": 112, "additions": 99, "deletions": 13}, "files": [{"sha": "4431cf9f4436b3defd70e161fa63b5483d729b09", "filename": "compiler/rustc_trait_selection/src/traits/error_reporting/suggestions.rs", "status": "modified", "additions": 9, "deletions": 13, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/b8418485bc400d5a00f197ff328655bfa367835e/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Ferror_reporting%2Fsuggestions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b8418485bc400d5a00f197ff328655bfa367835e/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Ferror_reporting%2Fsuggestions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Ferror_reporting%2Fsuggestions.rs?ref=b8418485bc400d5a00f197ff328655bfa367835e", "patch": "@@ -2937,19 +2937,15 @@ impl<'tcx> TypeErrCtxtExt<'tcx> for TypeErrCtxt<'_, 'tcx> {\n             ObligationCauseCode::BinOp { rhs_span: Some(span), is_lit, .. } if *is_lit => span,\n             _ => return,\n         };\n-        match (\n-            trait_ref.skip_binder().self_ty().kind(),\n-            trait_ref.skip_binder().substs.type_at(1).kind(),\n-        ) {\n-            (ty::Float(_), ty::Infer(InferTy::IntVar(_))) => {\n-                err.span_suggestion_verbose(\n-                    rhs_span.shrink_to_hi(),\n-                    \"consider using a floating-point literal by writing it with `.0`\",\n-                    \".0\",\n-                    Applicability::MaybeIncorrect,\n-                );\n-            }\n-            _ => {}\n+        if let ty::Float(_) = trait_ref.skip_binder().self_ty().kind()\n+            && let ty::Infer(InferTy::IntVar(_)) = trait_ref.skip_binder().substs.type_at(1).kind()\n+        {\n+            err.span_suggestion_verbose(\n+                rhs_span.shrink_to_hi(),\n+                \"consider using a floating-point literal by writing it with `.0`\",\n+                \".0\",\n+                Applicability::MaybeIncorrect,\n+            );\n         }\n     }\n "}, {"sha": "cd517a1c4ac87209c09edb2f16ed41b7fbe4d1b4", "filename": "src/test/ui/traits/issue-102989.rs", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/b8418485bc400d5a00f197ff328655bfa367835e/src%2Ftest%2Fui%2Ftraits%2Fissue-102989.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b8418485bc400d5a00f197ff328655bfa367835e/src%2Ftest%2Fui%2Ftraits%2Fissue-102989.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftraits%2Fissue-102989.rs?ref=b8418485bc400d5a00f197ff328655bfa367835e", "patch": "@@ -0,0 +1,18 @@\n+// compile-flags: -Cinstrument-coverage\n+//~^ ERROR can't find crate for `profiler_builtins`\n+\n+#![no_core]\n+#![feature(no_core, lang_items)]\n+#[lang=\"sized\"]\n+trait Sized { } //~ ERROR found duplicate lang item `sized`\n+\n+fn ref_Struct(self: &Struct, f: &u32) -> &u32 {\n+    //~^ ERROR `self` parameter is only allowed in associated functions\n+    //~| ERROR cannot find type `Struct` in this scope\n+    //~| ERROR mismatched types\n+    let x = x << 1;\n+    //~^ ERROR the size for values of type `{integer}` cannot be known at compilation time\n+    //~| ERROR cannot find value `x` in this scope\n+}\n+\n+fn main() {}"}, {"sha": "255fa6966efc950f07e1036cba84fa4b8d47f456", "filename": "src/test/ui/traits/issue-102989.stderr", "status": "added", "additions": 72, "deletions": 0, "changes": 72, "blob_url": "https://github.com/rust-lang/rust/blob/b8418485bc400d5a00f197ff328655bfa367835e/src%2Ftest%2Fui%2Ftraits%2Fissue-102989.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b8418485bc400d5a00f197ff328655bfa367835e/src%2Ftest%2Fui%2Ftraits%2Fissue-102989.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftraits%2Fissue-102989.stderr?ref=b8418485bc400d5a00f197ff328655bfa367835e", "patch": "@@ -0,0 +1,72 @@\n+error: `self` parameter is only allowed in associated functions\n+  --> $DIR/issue-102989.rs:9:15\n+   |\n+LL | fn ref_Struct(self: &Struct, f: &u32) -> &u32 {\n+   |               ^^^^ not semantically valid as function parameter\n+   |\n+   = note: associated functions are those in `impl` or `trait` definitions\n+\n+error[E0412]: cannot find type `Struct` in this scope\n+  --> $DIR/issue-102989.rs:9:22\n+   |\n+LL | fn ref_Struct(self: &Struct, f: &u32) -> &u32 {\n+   |                      ^^^^^^ not found in this scope\n+\n+error[E0425]: cannot find value `x` in this scope\n+  --> $DIR/issue-102989.rs:13:13\n+   |\n+LL |     let x = x << 1;\n+   |             ^ help: a local variable with a similar name exists: `f`\n+\n+error: `profiler_builtins` crate (required by compiler options) is not compatible with crate attribute `#![no_core]`\n+\n+error[E0463]: can't find crate for `profiler_builtins`\n+   |\n+   = note: the compiler may have been built without the profiler runtime\n+\n+error[E0152]: found duplicate lang item `sized`\n+  --> $DIR/issue-102989.rs:7:1\n+   |\n+LL | trait Sized { }\n+   | ^^^^^^^^^^^\n+   |\n+   = note: the lang item is first defined in crate `core`.\n+   = note: first definition in `core` loaded from $BUILD_DIR/aarch64-apple-darwin/stage1/lib/rustlib/aarch64-apple-darwin/lib/libcore-500f4c12402b1108.rlib\n+   = note: second definition in the local crate (`issue_102989`)\n+\n+error: `#[panic_handler]` function required, but not found\n+\n+error: language item required, but not found: `eh_personality`\n+   |\n+   = note: this can occur when a binary crate with `#![no_std]` is compiled for a target where `eh_personality` is defined in the standard library\n+   = help: you may be able to compile for a target that doesn't need `eh_personality`, specify a target with `--target` or in `.cargo/config`\n+\n+error[E0277]: the size for values of type `{integer}` cannot be known at compilation time\n+  --> $DIR/issue-102989.rs:13:15\n+   |\n+LL |     let x = x << 1;\n+   |               ^^ doesn't have a size known at compile-time\n+   |\n+   = help: the trait `core::marker::Sized` is not implemented for `{integer}`\n+\n+error[E0308]: mismatched types\n+  --> $DIR/issue-102989.rs:9:42\n+   |\n+LL | fn ref_Struct(self: &Struct, f: &u32) -> &u32 {\n+   |    ----------                            ^^^^ expected `&u32`, found `()`\n+   |    |\n+   |    implicitly returns `()` as its body has no tail or `return` expression\n+   |\n+note: consider returning one of these bindings\n+  --> $DIR/issue-102989.rs:9:30\n+   |\n+LL | fn ref_Struct(self: &Struct, f: &u32) -> &u32 {\n+   |                              ^\n+...\n+LL |     let x = x << 1;\n+   |         ^\n+\n+error: aborting due to 10 previous errors\n+\n+Some errors have detailed explanations: E0152, E0277, E0308, E0412, E0425, E0463.\n+For more information about an error, try `rustc --explain E0152`."}]}