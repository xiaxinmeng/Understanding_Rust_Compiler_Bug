{"sha": "9a86e3df991fc008ed96c0dce9d77b3dc1ff792c", "node_id": "MDY6Q29tbWl0NzI0NzEyOjlhODZlM2RmOTkxZmMwMDhlZDk2YzBkY2U5ZDc3YjNkYzFmZjc5MmM=", "commit": {"author": {"name": "Karoline Plum", "email": "karoline@plum-ge.de", "date": "2018-07-14T13:48:52Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2018-07-14T13:48:52Z"}, "message": "Make rounding down clear in duration documentation\n\nNow also the documentations of `subsec_millis`, `subsec_micros`, `as_millis` and `as_micros` make clear that the fractional nanosecond component is rounded down to whole units.", "tree": {"sha": "a73ade48844e0cffa3832cbf33a474f6c195c9e9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a73ade48844e0cffa3832cbf33a474f6c195c9e9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9a86e3df991fc008ed96c0dce9d77b3dc1ff792c", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJbSf9ECRBK7hj4Ov3rIwAAdHIIADK5xyPNRN7DNKv9IV3sMoE8\n5xq8ovCER7CydkgDvYt46KL4HRdbYFHb/w9EmRlpnbg4m1iIQpf2hEVUQ8DtZyPU\nDAdRpjyk2zUfUlBl/KRdvSTBhG44biFUmb0mzJoq+5iv53+oD3jXaq9rBhTSQZH1\nYLoLhB7Z9uMkZRgHAf+glQt1rwt8F5m3tUFOwVUX3bQ7/VypZP3sJUpGYZr+55qQ\nI+rwCJ7O2tAwlnwM9mIkIVi7kSQZtB7F++j0uWyy4huvs4zBVuThTxSn3JsXQmGT\nm5XzCjtgZcCKotadQNkDPBs7BA1pRH4/N0WtqBeBqTwkMOFOCXDd5jfmZS4I7bE=\n=k/1i\n-----END PGP SIGNATURE-----\n", "payload": "tree a73ade48844e0cffa3832cbf33a474f6c195c9e9\nparent 1731f0af22af16c461b2b7abe58988b8549b2de6\nauthor Karoline Plum <karoline@plum-ge.de> 1531576132 +0200\ncommitter GitHub <noreply@github.com> 1531576132 +0200\n\nMake rounding down clear in duration documentation\n\nNow also the documentations of `subsec_millis`, `subsec_micros`, `as_millis` and `as_micros` make clear that the fractional nanosecond component is rounded down to whole units."}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9a86e3df991fc008ed96c0dce9d77b3dc1ff792c", "html_url": "https://github.com/rust-lang/rust/commit/9a86e3df991fc008ed96c0dce9d77b3dc1ff792c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9a86e3df991fc008ed96c0dce9d77b3dc1ff792c/comments", "author": {"login": "KarolinePlum", "id": 20512980, "node_id": "MDQ6VXNlcjIwNTEyOTgw", "avatar_url": "https://avatars.githubusercontent.com/u/20512980?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KarolinePlum", "html_url": "https://github.com/KarolinePlum", "followers_url": "https://api.github.com/users/KarolinePlum/followers", "following_url": "https://api.github.com/users/KarolinePlum/following{/other_user}", "gists_url": "https://api.github.com/users/KarolinePlum/gists{/gist_id}", "starred_url": "https://api.github.com/users/KarolinePlum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KarolinePlum/subscriptions", "organizations_url": "https://api.github.com/users/KarolinePlum/orgs", "repos_url": "https://api.github.com/users/KarolinePlum/repos", "events_url": "https://api.github.com/users/KarolinePlum/events{/privacy}", "received_events_url": "https://api.github.com/users/KarolinePlum/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1731f0af22af16c461b2b7abe58988b8549b2de6", "url": "https://api.github.com/repos/rust-lang/rust/commits/1731f0af22af16c461b2b7abe58988b8549b2de6", "html_url": "https://github.com/rust-lang/rust/commit/1731f0af22af16c461b2b7abe58988b8549b2de6"}], "stats": {"total": 8, "additions": 4, "deletions": 4}, "files": [{"sha": "54973b7b7783a5e1240c6f3ee5031f89b7c2ae2f", "filename": "src/libcore/time.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/9a86e3df991fc008ed96c0dce9d77b3dc1ff792c/src%2Flibcore%2Ftime.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9a86e3df991fc008ed96c0dce9d77b3dc1ff792c/src%2Flibcore%2Ftime.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Ftime.rs?ref=9a86e3df991fc008ed96c0dce9d77b3dc1ff792c", "patch": "@@ -208,7 +208,7 @@ impl Duration {\n     #[inline]\n     pub const fn as_secs(&self) -> u64 { self.secs }\n \n-    /// Returns the fractional part of this `Duration`, in milliseconds.\n+    /// Returns the fractional part of this `Duration`, in whole milliseconds.\n     ///\n     /// This method does **not** return the length of the duration when\n     /// represented by milliseconds. The returned number always represents a\n@@ -228,7 +228,7 @@ impl Duration {\n     #[inline]\n     pub const fn subsec_millis(&self) -> u32 { self.nanos / NANOS_PER_MILLI }\n \n-    /// Returns the fractional part of this `Duration`, in microseconds.\n+    /// Returns the fractional part of this `Duration`, in whole microseconds.\n     ///\n     /// This method does **not** return the length of the duration when\n     /// represented by microseconds. The returned number always represents a\n@@ -268,7 +268,7 @@ impl Duration {\n     #[inline]\n     pub const fn subsec_nanos(&self) -> u32 { self.nanos }\n \n-    /// Returns the total number of milliseconds contained by this `Duration`.\n+    /// Returns the total number of whole milliseconds contained by this `Duration`.\n     ///\n     /// # Examples\n     ///\n@@ -285,7 +285,7 @@ impl Duration {\n         self.secs as u128 * MILLIS_PER_SEC as u128 + (self.nanos / NANOS_PER_MILLI) as u128\n     }\n \n-    /// Returns the total number of microseconds contained by this `Duration`.\n+    /// Returns the total number of whole microseconds contained by this `Duration`.\n     ///\n     /// # Examples\n     ///"}]}