{"sha": "85a59de39f636d69389730c9ea22d8f9bce4dac1", "node_id": "MDY6Q29tbWl0NzI0NzEyOjg1YTU5ZGUzOWY2MzZkNjkzODk3MzBjOWVhMjJkOGY5YmNlNGRhYzE=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2021-06-23T21:33:30Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-06-23T21:33:30Z"}, "message": "Merge #9353\n\n9353: Include extra targets when the pkg_root is not the same as the target root. r=matklad a=rezural\n\nFixes #7715 \r\n\r\nFor example, if a sub-crate includes sets the path='../somewhere-else/lib.rs', the files will not be in pkg_root , but in the target root's parent.\r\n\r\nIt may actually be in root.parent().parent(), I'm not sure about that.\r\n\r\nAt the moment it is just a fix, are there any relevant tests that this could go in? I've got about 1 brain cell left... but im happy to add tests where appropriate.\r\n\n\nCo-authored-by: rezural <rezural@protonmail.com>", "tree": {"sha": "0dfc8126d489bf7ed361e669c5e83264cba0ca09", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0dfc8126d489bf7ed361e669c5e83264cba0ca09"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/85a59de39f636d69389730c9ea22d8f9bce4dac1", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJg06iqCRBK7hj4Ov3rIwAAMrAIAF+xEPEPje6ys55MbugULk5c\nIgYmiaOZT2cPUogxxmxVPI8uIEvCoNy7ulbxn7nDIzdvD+UEjFyT48K4quPo3UFI\nBZPPOaWPd4PCIU7wG1nRZEsKR3X+MleuZUaN6zrD7cTScqwuaV6zhSflYVUJB6bN\nR5HlcGDJYLoXQz2bUqMhng74o3S48S2wN0i44JmUrU03EEpeZHYCBBXWwNrTJY2P\nMC51JpRGcnKBE1di46Bh2KBzGA24XzhKP91asUxM0gspHrrveJ9Tnh6QdMw0d3Pf\nl0lZwzkUlbS/qMa1tDSgBxEKQlUcm41Qs7fQPOznYdkrwQ6xo4qSZvbRWlaHRHc=\n=ziGE\n-----END PGP SIGNATURE-----\n", "payload": "tree 0dfc8126d489bf7ed361e669c5e83264cba0ca09\nparent 1deb1d3209556a47c08b62beee00897b73ff5d2a\nparent f55b1d1e19cb960c7ce99f15c88ce4b214d568dd\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1624484010 +0000\ncommitter GitHub <noreply@github.com> 1624484010 +0000\n\nMerge #9353\n\n9353: Include extra targets when the pkg_root is not the same as the target root. r=matklad a=rezural\n\nFixes #7715 \r\n\r\nFor example, if a sub-crate includes sets the path='../somewhere-else/lib.rs', the files will not be in pkg_root , but in the target root's parent.\r\n\r\nIt may actually be in root.parent().parent(), I'm not sure about that.\r\n\r\nAt the moment it is just a fix, are there any relevant tests that this could go in? I've got about 1 brain cell left... but im happy to add tests where appropriate.\r\n\n\nCo-authored-by: rezural <rezural@protonmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/85a59de39f636d69389730c9ea22d8f9bce4dac1", "html_url": "https://github.com/rust-lang/rust/commit/85a59de39f636d69389730c9ea22d8f9bce4dac1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/85a59de39f636d69389730c9ea22d8f9bce4dac1/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1deb1d3209556a47c08b62beee00897b73ff5d2a", "url": "https://api.github.com/repos/rust-lang/rust/commits/1deb1d3209556a47c08b62beee00897b73ff5d2a", "html_url": "https://github.com/rust-lang/rust/commit/1deb1d3209556a47c08b62beee00897b73ff5d2a"}, {"sha": "f55b1d1e19cb960c7ce99f15c88ce4b214d568dd", "url": "https://api.github.com/repos/rust-lang/rust/commits/f55b1d1e19cb960c7ce99f15c88ce4b214d568dd", "html_url": "https://github.com/rust-lang/rust/commit/f55b1d1e19cb960c7ce99f15c88ce4b214d568dd"}], "stats": {"total": 17, "additions": 17, "deletions": 0}, "files": [{"sha": "5c178785d808f3ab5acd4877a8343c567d68a41c", "filename": "crates/project_model/src/workspace.rs", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/85a59de39f636d69389730c9ea22d8f9bce4dac1/crates%2Fproject_model%2Fsrc%2Fworkspace.rs", "raw_url": "https://github.com/rust-lang/rust/raw/85a59de39f636d69389730c9ea22d8f9bce4dac1/crates%2Fproject_model%2Fsrc%2Fworkspace.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fproject_model%2Fsrc%2Fworkspace.rs?ref=85a59de39f636d69389730c9ea22d8f9bce4dac1", "patch": "@@ -234,6 +234,23 @@ impl ProjectWorkspace {\n                                 .and_then(|it| it.out_dir.clone()),\n                         );\n \n+                        // In case target's path is manually set in Cargo.toml to be\n+                        // outside the package root, add its parent as an extra include.\n+                        // An example of this situation would look like this:\n+                        //\n+                        // ```toml\n+                        // [lib]\n+                        // path = \"../../src/lib.rs\"\n+                        // ```\n+                        let extra_targets = cargo[pkg]\n+                            .targets\n+                            .iter()\n+                            .filter(|&&tgt| cargo[tgt].kind == TargetKind::Lib)\n+                            .filter_map(|&tgt| cargo[tgt].root.parent())\n+                            .map(|tgt| tgt.normalize().to_path_buf())\n+                            .filter(|path| !path.starts_with(pkg_root.clone()));\n+                        include.extend(extra_targets);\n+\n                         let mut exclude = vec![pkg_root.join(\".git\")];\n                         if is_member {\n                             exclude.push(pkg_root.join(\"target\"));"}]}