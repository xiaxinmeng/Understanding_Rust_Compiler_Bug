{"sha": "5262113fa6a4701d7f97a1d4e6f6ecf248b623f4", "node_id": "MDY6Q29tbWl0NzI0NzEyOjUyNjIxMTNmYTZhNDcwMWQ3Zjk3YTFkNGU2ZjZlY2YyNDhiNjIzZjQ=", "commit": {"author": {"name": "Mark-Simulacrum", "email": "mark.simulacrum@gmail.com", "date": "2016-12-16T21:10:32Z"}, "committer": {"name": "Mark Simulacrum", "email": "mark.simulacrum@gmail.com", "date": "2016-12-21T03:03:26Z"}, "message": "Remove fcx.span", "tree": {"sha": "872cf1a93296b81177306668272ebe24d0095f5c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/872cf1a93296b81177306668272ebe24d0095f5c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5262113fa6a4701d7f97a1d4e6f6ecf248b623f4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5262113fa6a4701d7f97a1d4e6f6ecf248b623f4", "html_url": "https://github.com/rust-lang/rust/commit/5262113fa6a4701d7f97a1d4e6f6ecf248b623f4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5262113fa6a4701d7f97a1d4e6f6ecf248b623f4/comments", "author": {"login": "Mark-Simulacrum", "id": 5047365, "node_id": "MDQ6VXNlcjUwNDczNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/5047365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mark-Simulacrum", "html_url": "https://github.com/Mark-Simulacrum", "followers_url": "https://api.github.com/users/Mark-Simulacrum/followers", "following_url": "https://api.github.com/users/Mark-Simulacrum/following{/other_user}", "gists_url": "https://api.github.com/users/Mark-Simulacrum/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mark-Simulacrum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mark-Simulacrum/subscriptions", "organizations_url": "https://api.github.com/users/Mark-Simulacrum/orgs", "repos_url": "https://api.github.com/users/Mark-Simulacrum/repos", "events_url": "https://api.github.com/users/Mark-Simulacrum/events{/privacy}", "received_events_url": "https://api.github.com/users/Mark-Simulacrum/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Mark-Simulacrum", "id": 5047365, "node_id": "MDQ6VXNlcjUwNDczNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/5047365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mark-Simulacrum", "html_url": "https://github.com/Mark-Simulacrum", "followers_url": "https://api.github.com/users/Mark-Simulacrum/followers", "following_url": "https://api.github.com/users/Mark-Simulacrum/following{/other_user}", "gists_url": "https://api.github.com/users/Mark-Simulacrum/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mark-Simulacrum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mark-Simulacrum/subscriptions", "organizations_url": "https://api.github.com/users/Mark-Simulacrum/orgs", "repos_url": "https://api.github.com/users/Mark-Simulacrum/repos", "events_url": "https://api.github.com/users/Mark-Simulacrum/events{/privacy}", "received_events_url": "https://api.github.com/users/Mark-Simulacrum/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "820164582dc22e8d31283da377825331bfc06da9", "url": "https://api.github.com/repos/rust-lang/rust/commits/820164582dc22e8d31283da377825331bfc06da9", "html_url": "https://github.com/rust-lang/rust/commit/820164582dc22e8d31283da377825331bfc06da9"}], "stats": {"total": 11, "additions": 3, "deletions": 8}, "files": [{"sha": "093e57816b965ced1d39ba81e917cac320f5302e", "filename": "src/librustc_trans/common.rs", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/5262113fa6a4701d7f97a1d4e6f6ecf248b623f4/src%2Flibrustc_trans%2Fcommon.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5262113fa6a4701d7f97a1d4e6f6ecf248b623f4/src%2Flibrustc_trans%2Fcommon.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Fcommon.rs?ref=5262113fa6a4701d7f97a1d4e6f6ecf248b623f4", "patch": "@@ -300,10 +300,6 @@ pub struct FunctionContext<'a, 'tcx: 'a> {\n     // substitutions used.\n     pub param_substs: &'tcx Substs<'tcx>,\n \n-    // The source span and nesting context where this function comes from, for\n-    // error reporting and symbol generation.\n-    pub span: Option<Span>,\n-\n     // This function's enclosing crate context.\n     pub ccx: &'a CrateContext<'a, 'tcx>,\n \n@@ -360,7 +356,6 @@ impl<'a, 'tcx> FunctionContext<'a, 'tcx> {\n             landingpad_alloca: Cell::new(None),\n             fn_ty: fn_ty,\n             param_substs: param_substs,\n-            span: None,\n             ccx: ccx,\n             debug_context: debug_context,\n             owned_builder: OwnedBuilder::new_with_ccx(ccx),"}, {"sha": "15683a6bb15d4a3de601c24c7e12dc286835ec13", "filename": "src/librustc_trans/mir/mod.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/5262113fa6a4701d7f97a1d4e6f6ecf248b623f4/src%2Flibrustc_trans%2Fmir%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5262113fa6a4701d7f97a1d4e6f6ecf248b623f4/src%2Flibrustc_trans%2Fmir%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Fmir%2Fmod.rs?ref=5262113fa6a4701d7f97a1d4e6f6ecf248b623f4", "patch": "@@ -372,7 +372,7 @@ fn arg_local_refs<'bcx, 'tcx>(bcx: &BlockAndBuilder<'bcx, 'tcx>,\n                 declare_local(bcx, arg_decl.name.unwrap_or(keywords::Invalid.name()),\n                               arg_ty, scope, variable_access,\n                               VariableKind::ArgumentVariable(arg_index + 1),\n-                              bcx.fcx().span.unwrap_or(DUMMY_SP));\n+                              DUMMY_SP);\n             });\n \n             return LocalRef::Lvalue(LvalueRef::new_sized(lltemp, LvalueTy::from_ty(arg_ty)));\n@@ -444,7 +444,7 @@ fn arg_local_refs<'bcx, 'tcx>(bcx: &BlockAndBuilder<'bcx, 'tcx>,\n                 declare_local(bcx, arg_decl.name.unwrap_or(keywords::Invalid.name()), arg_ty,\n                               scope, VariableAccess::DirectVariable { alloca: llval },\n                               VariableKind::ArgumentVariable(arg_index + 1),\n-                              bcx.fcx().span.unwrap_or(DUMMY_SP));\n+                              DUMMY_SP);\n                 return;\n             }\n \n@@ -513,7 +513,7 @@ fn arg_local_refs<'bcx, 'tcx>(bcx: &BlockAndBuilder<'bcx, 'tcx>,\n                 };\n                 declare_local(bcx, decl.debug_name, ty, scope, variable_access,\n                               VariableKind::CapturedVariable,\n-                              bcx.fcx().span.unwrap_or(DUMMY_SP));\n+                              DUMMY_SP);\n             }\n         });\n         LocalRef::Lvalue(LvalueRef::new_sized(llval, LvalueTy::from_ty(arg_ty)))"}]}