{"sha": "8a5a5732a1527fbdffbc825ae630d911fc130e2e", "node_id": "C_kwDOAAsO6NoAKDhhNWE1NzMyYTE1MjdmYmRmZmJjODI1YWU2MzBkOTExZmMxMzBlMmU", "commit": {"author": {"name": "Caleb Zulawski", "email": "caleb.zulawski@gmail.com", "date": "2022-06-26T14:07:48Z"}, "committer": {"name": "Caleb Zulawski", "email": "caleb.zulawski@gmail.com", "date": "2022-10-29T15:55:01Z"}, "message": "Clarify addr and with_addr implementations", "tree": {"sha": "beb013b2159ce1dde8b671fdc457a6e4889d871f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/beb013b2159ce1dde8b671fdc457a6e4889d871f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8a5a5732a1527fbdffbc825ae630d911fc130e2e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8a5a5732a1527fbdffbc825ae630d911fc130e2e", "html_url": "https://github.com/rust-lang/rust/commit/8a5a5732a1527fbdffbc825ae630d911fc130e2e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8a5a5732a1527fbdffbc825ae630d911fc130e2e/comments", "author": {"login": "calebzulawski", "id": 563826, "node_id": "MDQ6VXNlcjU2MzgyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/563826?v=4", "gravatar_id": "", "url": "https://api.github.com/users/calebzulawski", "html_url": "https://github.com/calebzulawski", "followers_url": "https://api.github.com/users/calebzulawski/followers", "following_url": "https://api.github.com/users/calebzulawski/following{/other_user}", "gists_url": "https://api.github.com/users/calebzulawski/gists{/gist_id}", "starred_url": "https://api.github.com/users/calebzulawski/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/calebzulawski/subscriptions", "organizations_url": "https://api.github.com/users/calebzulawski/orgs", "repos_url": "https://api.github.com/users/calebzulawski/repos", "events_url": "https://api.github.com/users/calebzulawski/events{/privacy}", "received_events_url": "https://api.github.com/users/calebzulawski/received_events", "type": "User", "site_admin": false}, "committer": {"login": "calebzulawski", "id": 563826, "node_id": "MDQ6VXNlcjU2MzgyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/563826?v=4", "gravatar_id": "", "url": "https://api.github.com/users/calebzulawski", "html_url": "https://github.com/calebzulawski", "followers_url": "https://api.github.com/users/calebzulawski/followers", "following_url": "https://api.github.com/users/calebzulawski/following{/other_user}", "gists_url": "https://api.github.com/users/calebzulawski/gists{/gist_id}", "starred_url": "https://api.github.com/users/calebzulawski/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/calebzulawski/subscriptions", "organizations_url": "https://api.github.com/users/calebzulawski/orgs", "repos_url": "https://api.github.com/users/calebzulawski/repos", "events_url": "https://api.github.com/users/calebzulawski/events{/privacy}", "received_events_url": "https://api.github.com/users/calebzulawski/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e7cc021189f1d18974057d60223bdbb5abd4dc15", "url": "https://api.github.com/repos/rust-lang/rust/commits/e7cc021189f1d18974057d60223bdbb5abd4dc15", "html_url": "https://github.com/rust-lang/rust/commit/e7cc021189f1d18974057d60223bdbb5abd4dc15"}], "stats": {"total": 28, "additions": 18, "deletions": 10}, "files": [{"sha": "3485d31e44dff0abaa94784ac974dc7306eedcbe", "filename": "crates/core_simd/src/elements/const_ptr.rs", "status": "modified", "additions": 9, "deletions": 5, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/8a5a5732a1527fbdffbc825ae630d911fc130e2e/crates%2Fcore_simd%2Fsrc%2Felements%2Fconst_ptr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8a5a5732a1527fbdffbc825ae630d911fc130e2e/crates%2Fcore_simd%2Fsrc%2Felements%2Fconst_ptr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fcore_simd%2Fsrc%2Felements%2Fconst_ptr.rs?ref=8a5a5732a1527fbdffbc825ae630d911fc130e2e", "patch": "@@ -83,17 +83,21 @@ where\n \n     #[inline]\n     fn addr(self) -> Self::Usize {\n-        // Safety: Since `addr` discards provenance, this is safe.\n+        // FIXME(strict_provenance_magic): I am magic and should be a compiler intrinsic.\n+        // SAFETY: Pointer-to-integer transmutes are valid (if you are okay with losing the\n+        // provenance).\n         unsafe { core::mem::transmute_copy(&self) }\n-\n-        //TODO switch to casts when available\n-        //self.cast()\n     }\n \n     #[inline]\n-    fn with_addr(self, addr: Self::Usize) -> Self {\n+    fn with_addr(self, _addr: Self::Usize) -> Self {\n         unimplemented!()\n         /*\n+        // FIXME(strict_provenance_magic): I am magic and should be a compiler intrinsic.\n+        //\n+        // In the mean-time, this operation is defined to be \"as if\" it was\n+        // a wrapping_offset, so we can emulate it as such. This should properly\n+        // restore pointer provenance even under today's compiler.\n         self.cast::<*const u8>()\n             .wrapping_offset(addr.cast::<isize>() - self.addr().cast::<isize>())\n             .cast()"}, {"sha": "39fe9f3562119394646f3fc9f928be904bffc077", "filename": "crates/core_simd/src/elements/mut_ptr.rs", "status": "modified", "additions": 9, "deletions": 5, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/8a5a5732a1527fbdffbc825ae630d911fc130e2e/crates%2Fcore_simd%2Fsrc%2Felements%2Fmut_ptr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8a5a5732a1527fbdffbc825ae630d911fc130e2e/crates%2Fcore_simd%2Fsrc%2Felements%2Fmut_ptr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fcore_simd%2Fsrc%2Felements%2Fmut_ptr.rs?ref=8a5a5732a1527fbdffbc825ae630d911fc130e2e", "patch": "@@ -78,17 +78,21 @@ where\n \n     #[inline]\n     fn addr(self) -> Self::Usize {\n-        // Safety: Since `addr` discards provenance, this is safe.\n+        // FIXME(strict_provenance_magic): I am magic and should be a compiler intrinsic.\n+        // SAFETY: Pointer-to-integer transmutes are valid (if you are okay with losing the\n+        // provenance).\n         unsafe { core::mem::transmute_copy(&self) }\n-\n-        //TODO switch to casts when available\n-        //self.cast()\n     }\n \n     #[inline]\n-    fn with_addr(self, addr: Self::Usize) -> Self {\n+    fn with_addr(self, _addr: Self::Usize) -> Self {\n         unimplemented!()\n         /*\n+        // FIXME(strict_provenance_magic): I am magic and should be a compiler intrinsic.\n+        //\n+        // In the mean-time, this operation is defined to be \"as if\" it was\n+        // a wrapping_offset, so we can emulate it as such. This should properly\n+        // restore pointer provenance even under today's compiler.\n         self.cast::<*mut u8>()\n             .wrapping_offset(addr.cast::<isize>() - self.addr().cast::<isize>())\n             .cast()"}]}