{"sha": "d62238d6a8ed57fecddfa9b97fd79cb0ac814791", "node_id": "C_kwDOAAsO6NoAKGQ2MjIzOGQ2YThlZDU3ZmVjZGRmYTliOTdmZDc5Y2IwYWM4MTQ3OTE", "commit": {"author": {"name": "Michael Goulet", "email": "michael@errs.io", "date": "2023-03-27T19:41:15Z"}, "committer": {"name": "Michael Goulet", "email": "michael@errs.io", "date": "2023-03-29T16:13:05Z"}, "message": "Do not consider elaborated projection predicates for objects in new solver", "tree": {"sha": "2e3ce08aadf17a0c89d4f574b5c7d07c2999b6db", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2e3ce08aadf17a0c89d4f574b5c7d07c2999b6db"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d62238d6a8ed57fecddfa9b97fd79cb0ac814791", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d62238d6a8ed57fecddfa9b97fd79cb0ac814791", "html_url": "https://github.com/rust-lang/rust/commit/d62238d6a8ed57fecddfa9b97fd79cb0ac814791", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d62238d6a8ed57fecddfa9b97fd79cb0ac814791/comments", "author": {"login": "compiler-errors", "id": 3674314, "node_id": "MDQ6VXNlcjM2NzQzMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3674314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/compiler-errors", "html_url": "https://github.com/compiler-errors", "followers_url": "https://api.github.com/users/compiler-errors/followers", "following_url": "https://api.github.com/users/compiler-errors/following{/other_user}", "gists_url": "https://api.github.com/users/compiler-errors/gists{/gist_id}", "starred_url": "https://api.github.com/users/compiler-errors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/compiler-errors/subscriptions", "organizations_url": "https://api.github.com/users/compiler-errors/orgs", "repos_url": "https://api.github.com/users/compiler-errors/repos", "events_url": "https://api.github.com/users/compiler-errors/events{/privacy}", "received_events_url": "https://api.github.com/users/compiler-errors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "compiler-errors", "id": 3674314, "node_id": "MDQ6VXNlcjM2NzQzMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3674314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/compiler-errors", "html_url": "https://github.com/compiler-errors", "followers_url": "https://api.github.com/users/compiler-errors/followers", "following_url": "https://api.github.com/users/compiler-errors/following{/other_user}", "gists_url": "https://api.github.com/users/compiler-errors/gists{/gist_id}", "starred_url": "https://api.github.com/users/compiler-errors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/compiler-errors/subscriptions", "organizations_url": "https://api.github.com/users/compiler-errors/orgs", "repos_url": "https://api.github.com/users/compiler-errors/repos", "events_url": "https://api.github.com/users/compiler-errors/events{/privacy}", "received_events_url": "https://api.github.com/users/compiler-errors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cf32b9de1e8f66526c36ad2927458558d2e81093", "url": "https://api.github.com/repos/rust-lang/rust/commits/cf32b9de1e8f66526c36ad2927458558d2e81093", "html_url": "https://github.com/rust-lang/rust/commit/cf32b9de1e8f66526c36ad2927458558d2e81093"}], "stats": {"total": 46, "additions": 37, "deletions": 9}, "files": [{"sha": "856b1c08b7237d610a36290b30e2448601aaa5fa", "filename": "compiler/rustc_trait_selection/src/solve/assembly.rs", "status": "modified", "additions": 16, "deletions": 3, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/d62238d6a8ed57fecddfa9b97fd79cb0ac814791/compiler%2Frustc_trait_selection%2Fsrc%2Fsolve%2Fassembly.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d62238d6a8ed57fecddfa9b97fd79cb0ac814791/compiler%2Frustc_trait_selection%2Fsrc%2Fsolve%2Fassembly.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_trait_selection%2Fsrc%2Fsolve%2Fassembly.rs?ref=d62238d6a8ed57fecddfa9b97fd79cb0ac814791", "patch": "@@ -6,6 +6,7 @@ use super::trait_goals::structural_traits::*;\n use super::{EvalCtxt, SolverMode};\n use crate::traits::coherence;\n use itertools::Itertools;\n+use rustc_data_structures::fx::FxIndexSet;\n use rustc_hir::def_id::DefId;\n use rustc_infer::traits::query::NoSolution;\n use rustc_infer::traits::util::elaborate_predicates;\n@@ -489,9 +490,21 @@ impl<'tcx> EvalCtxt<'_, 'tcx> {\n         };\n \n         let tcx = self.tcx();\n-        for assumption in\n-            elaborate_predicates(tcx, bounds.iter().map(|bound| bound.with_self_ty(tcx, self_ty)))\n-        {\n+        let own_bounds: FxIndexSet<_> =\n+            bounds.iter().map(|bound| bound.with_self_ty(tcx, self_ty)).collect();\n+        for assumption in elaborate_predicates(tcx, own_bounds.iter().copied()) {\n+            // FIXME: Predicates are fully elaborated in the object type's existential bounds\n+            // list. We want to only consider these pre-elaborated projections, and not other\n+            // projection predicates that we reach by elaborating the principal trait ref,\n+            // since that'll cause ambiguity.\n+            //\n+            // We can remove this when we have implemented intersections in responses.\n+            if assumption.to_opt_poly_projection_pred().is_some()\n+                && !own_bounds.contains(&assumption)\n+            {\n+                continue;\n+            }\n+\n             match G::consider_object_bound_candidate(self, goal, assumption) {\n                 Ok(result) => {\n                     candidates.push(Candidate { source: CandidateSource::BuiltinImpl, result })"}, {"sha": "e608250063c0bdc63c1410ea5a5b47b3df4355fa", "filename": "tests/ui/traits/new-solver/dont-elaborate-for-projections.rs", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/d62238d6a8ed57fecddfa9b97fd79cb0ac814791/tests%2Fui%2Ftraits%2Fnew-solver%2Fdont-elaborate-for-projections.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d62238d6a8ed57fecddfa9b97fd79cb0ac814791/tests%2Fui%2Ftraits%2Fnew-solver%2Fdont-elaborate-for-projections.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ftraits%2Fnew-solver%2Fdont-elaborate-for-projections.rs?ref=d62238d6a8ed57fecddfa9b97fd79cb0ac814791", "patch": "@@ -0,0 +1,12 @@\n+// compile-flags: -Ztrait-solver=next\n+// check-pass\n+\n+trait Iter<'a, I: 'a>: Iterator<Item = &'a I> {}\n+\n+fn needs_iter<'a, T: Iter<'a, I> + ?Sized, I: 'a>(_: &T) {}\n+\n+fn test(x: &dyn Iter<'_, ()>) {\n+    needs_iter(x);\n+}\n+\n+fn main() {}"}, {"sha": "bb730b18ef77be91f90dbdf04ca312de5145cf54", "filename": "tests/ui/traits/new-solver/more-object-bound.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d62238d6a8ed57fecddfa9b97fd79cb0ac814791/tests%2Fui%2Ftraits%2Fnew-solver%2Fmore-object-bound.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d62238d6a8ed57fecddfa9b97fd79cb0ac814791/tests%2Fui%2Ftraits%2Fnew-solver%2Fmore-object-bound.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ftraits%2Fnew-solver%2Fmore-object-bound.rs?ref=d62238d6a8ed57fecddfa9b97fd79cb0ac814791", "patch": "@@ -10,7 +10,7 @@ trait Trait: SuperTrait<A = <Self as SuperTrait>::B> {}\n \n fn transmute<A, B>(x: A) -> B {\n     foo::<A, B, dyn Trait<A = A, B = B>>(x)\n-    //~^ ERROR type annotations needed: cannot satisfy `dyn Trait<A = A, B = B>: Trait`\n+    //~^ ERROR the trait bound `dyn Trait<A = A, B = B>: Trait` is not satisfied\n }\n \n fn foo<A, B, T: ?Sized>(x: T::A) -> B"}, {"sha": "4554b8c7473cb7f37e7092414e9b8cdb70058b51", "filename": "tests/ui/traits/new-solver/more-object-bound.stderr", "status": "modified", "additions": 8, "deletions": 5, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/d62238d6a8ed57fecddfa9b97fd79cb0ac814791/tests%2Fui%2Ftraits%2Fnew-solver%2Fmore-object-bound.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d62238d6a8ed57fecddfa9b97fd79cb0ac814791/tests%2Fui%2Ftraits%2Fnew-solver%2Fmore-object-bound.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ftraits%2Fnew-solver%2Fmore-object-bound.stderr?ref=d62238d6a8ed57fecddfa9b97fd79cb0ac814791", "patch": "@@ -1,10 +1,9 @@\n-error[E0283]: type annotations needed: cannot satisfy `dyn Trait<A = A, B = B>: Trait`\n-  --> $DIR/more-object-bound.rs:12:5\n+error[E0277]: the trait bound `dyn Trait<A = A, B = B>: Trait` is not satisfied\n+  --> $DIR/more-object-bound.rs:12:17\n    |\n LL |     foo::<A, B, dyn Trait<A = A, B = B>>(x)\n-   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |                 ^^^^^^^^^^^^^^^^^^^^^^^ the trait `Trait` is not implemented for `dyn Trait<A = A, B = B>`\n    |\n-   = note: cannot satisfy `dyn Trait<A = A, B = B>: Trait`\n note: required by a bound in `foo`\n   --> $DIR/more-object-bound.rs:18:8\n    |\n@@ -13,7 +12,11 @@ LL | fn foo<A, B, T: ?Sized>(x: T::A) -> B\n LL | where\n LL |     T: Trait<B = B>,\n    |        ^^^^^^^^^^^^ required by this bound in `foo`\n+help: consider introducing a `where` clause, but there might be an alternative better way to express this requirement\n+   |\n+LL | fn transmute<A, B>(x: A) -> B where dyn Trait<A = A, B = B>: Trait {\n+   |                               ++++++++++++++++++++++++++++++++++++\n \n error: aborting due to previous error\n \n-For more information about this error, try `rustc --explain E0283`.\n+For more information about this error, try `rustc --explain E0277`."}]}