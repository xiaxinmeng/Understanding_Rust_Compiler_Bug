{"sha": "3a1f8e897bc2af56cd7a6c08bad1bf88cc97b257", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNhMWY4ZTg5N2JjMmFmNTZjZDdhNmMwOGJhZDFiZjg4Y2M5N2IyNTc=", "commit": {"author": {"name": "Nick Spain", "email": "nicholas.spain@stileeducation.com", "date": "2021-01-01T06:30:13Z"}, "committer": {"name": "Nick Spain", "email": "nicholas.spain@stileeducation.com", "date": "2021-01-02T10:53:52Z"}, "message": "Remove source_old from adding const and function impls", "tree": {"sha": "e43e7951c084e5b8a15cb84177345d9ad8c18c5b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e43e7951c084e5b8a15cb84177345d9ad8c18c5b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3a1f8e897bc2af56cd7a6c08bad1bf88cc97b257", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3a1f8e897bc2af56cd7a6c08bad1bf88cc97b257", "html_url": "https://github.com/rust-lang/rust/commit/3a1f8e897bc2af56cd7a6c08bad1bf88cc97b257", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3a1f8e897bc2af56cd7a6c08bad1bf88cc97b257/comments", "author": {"login": "nick96", "id": 9591268, "node_id": "MDQ6VXNlcjk1OTEyNjg=", "avatar_url": "https://avatars.githubusercontent.com/u/9591268?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nick96", "html_url": "https://github.com/nick96", "followers_url": "https://api.github.com/users/nick96/followers", "following_url": "https://api.github.com/users/nick96/following{/other_user}", "gists_url": "https://api.github.com/users/nick96/gists{/gist_id}", "starred_url": "https://api.github.com/users/nick96/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nick96/subscriptions", "organizations_url": "https://api.github.com/users/nick96/orgs", "repos_url": "https://api.github.com/users/nick96/repos", "events_url": "https://api.github.com/users/nick96/events{/privacy}", "received_events_url": "https://api.github.com/users/nick96/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nick96", "id": 9591268, "node_id": "MDQ6VXNlcjk1OTEyNjg=", "avatar_url": "https://avatars.githubusercontent.com/u/9591268?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nick96", "html_url": "https://github.com/nick96", "followers_url": "https://api.github.com/users/nick96/followers", "following_url": "https://api.github.com/users/nick96/following{/other_user}", "gists_url": "https://api.github.com/users/nick96/gists{/gist_id}", "starred_url": "https://api.github.com/users/nick96/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nick96/subscriptions", "organizations_url": "https://api.github.com/users/nick96/orgs", "repos_url": "https://api.github.com/users/nick96/repos", "events_url": "https://api.github.com/users/nick96/events{/privacy}", "received_events_url": "https://api.github.com/users/nick96/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7bfec89cf969aa630f184f7d4a66e8e12a423d2f", "url": "https://api.github.com/repos/rust-lang/rust/commits/7bfec89cf969aa630f184f7d4a66e8e12a423d2f", "html_url": "https://github.com/rust-lang/rust/commit/7bfec89cf969aa630f184f7d4a66e8e12a423d2f"}], "stats": {"total": 49, "additions": 26, "deletions": 23}, "files": [{"sha": "54bb897e9b784cc0e288d7bcb0523c779b0d8e74", "filename": "crates/completion/src/completions/trait_impl.rs", "status": "modified", "additions": 26, "deletions": 23, "changes": 49, "blob_url": "https://github.com/rust-lang/rust/blob/3a1f8e897bc2af56cd7a6c08bad1bf88cc97b257/crates%2Fcompletion%2Fsrc%2Fcompletions%2Ftrait_impl.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3a1f8e897bc2af56cd7a6c08bad1bf88cc97b257/crates%2Fcompletion%2Fsrc%2Fcompletions%2Ftrait_impl.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fcompletion%2Fsrc%2Fcompletions%2Ftrait_impl.rs?ref=3a1f8e897bc2af56cd7a6c08bad1bf88cc97b257", "patch": "@@ -156,20 +156,21 @@ fn add_function_impl(\n     };\n     let range = TextRange::new(fn_def_node.text_range().start(), ctx.source_range().end());\n \n-    #[allow(deprecated)]\n-    let function_decl = function_declaration(&func.source_old(ctx.db).value);\n-    match ctx.config.snippet_cap {\n-        Some(cap) => {\n-            let snippet = format!(\"{} {{\\n    $0\\n}}\", function_decl);\n-            builder.snippet_edit(cap, TextEdit::replace(range, snippet))\n-        }\n-        None => {\n-            let header = format!(\"{} {{\", function_decl);\n-            builder.text_edit(TextEdit::replace(range, header))\n+    if let Some(src) = func.source(ctx.db) {\n+        let function_decl = function_declaration(&src.value);\n+        match ctx.config.snippet_cap {\n+            Some(cap) => {\n+                let snippet = format!(\"{} {{\\n    $0\\n}}\", function_decl);\n+                builder.snippet_edit(cap, TextEdit::replace(range, snippet))\n+            }\n+            None => {\n+                let header = format!(\"{} {{\", function_decl);\n+                builder.text_edit(TextEdit::replace(range, header))\n+            }\n         }\n+        .kind(completion_kind)\n+        .add_to(acc);\n     }\n-    .kind(completion_kind)\n-    .add_to(acc);\n }\n \n fn add_type_alias_impl(\n@@ -201,17 +202,19 @@ fn add_const_impl(\n     let const_name = const_.name(ctx.db).map(|n| n.to_string());\n \n     if let Some(const_name) = const_name {\n-        #[allow(deprecated)]\n-        let snippet = make_const_compl_syntax(&const_.source_old(ctx.db).value);\n-\n-        let range = TextRange::new(const_def_node.text_range().start(), ctx.source_range().end());\n-\n-        CompletionItem::new(CompletionKind::Magic, ctx.source_range(), snippet.clone())\n-            .text_edit(TextEdit::replace(range, snippet))\n-            .lookup_by(const_name)\n-            .kind(CompletionItemKind::Const)\n-            .set_documentation(const_.docs(ctx.db))\n-            .add_to(acc);\n+        if let Some(source) = const_.source(ctx.db) {\n+            let snippet = make_const_compl_syntax(&source.value);\n+\n+            let range =\n+                TextRange::new(const_def_node.text_range().start(), ctx.source_range().end());\n+\n+            CompletionItem::new(CompletionKind::Magic, ctx.source_range(), snippet.clone())\n+                .text_edit(TextEdit::replace(range, snippet))\n+                .lookup_by(const_name)\n+                .kind(CompletionItemKind::Const)\n+                .set_documentation(const_.docs(ctx.db))\n+                .add_to(acc);\n+        }\n     }\n }\n "}]}