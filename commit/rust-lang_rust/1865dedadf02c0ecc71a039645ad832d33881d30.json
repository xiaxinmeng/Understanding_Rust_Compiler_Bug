{"sha": "1865dedadf02c0ecc71a039645ad832d33881d30", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE4NjVkZWRhZGYwMmMwZWNjNzFhMDM5NjQ1YWQ4MzJkMzM4ODFkMzA=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-04-30T20:43:06Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-04-30T20:58:26Z"}, "message": "Introduce BlockModifier", "tree": {"sha": "abdb487e6f8a7968f49738833219384804064ef2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/abdb487e6f8a7968f49738833219384804064ef2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1865dedadf02c0ecc71a039645ad832d33881d30", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1865dedadf02c0ecc71a039645ad832d33881d30", "html_url": "https://github.com/rust-lang/rust/commit/1865dedadf02c0ecc71a039645ad832d33881d30", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1865dedadf02c0ecc71a039645ad832d33881d30/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "292ba6a1f81fee4170c3081f74499fe8c3ddedd4", "url": "https://api.github.com/repos/rust-lang/rust/commits/292ba6a1f81fee4170c3081f74499fe8c3ddedd4", "html_url": "https://github.com/rust-lang/rust/commit/292ba6a1f81fee4170c3081f74499fe8c3ddedd4"}], "stats": {"total": 21, "additions": 19, "deletions": 2}, "files": [{"sha": "521ca8ab8eda3a18034d0b44d334adad5f1a2d82", "filename": "crates/ra_syntax/src/ast.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/1865dedadf02c0ecc71a039645ad832d33881d30/crates%2Fra_syntax%2Fsrc%2Fast.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1865dedadf02c0ecc71a039645ad832d33881d30/crates%2Fra_syntax%2Fsrc%2Fast.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Fsrc%2Fast.rs?ref=1865dedadf02c0ecc71a039645ad832d33881d30", "patch": "@@ -16,7 +16,9 @@ use crate::{\n };\n \n pub use self::{\n-    expr_extensions::{ArrayExprKind, BinOp, ElseBranch, LiteralKind, PrefixOp, RangeOp},\n+    expr_extensions::{\n+        ArrayExprKind, BinOp, BlockModifier, ElseBranch, LiteralKind, PrefixOp, RangeOp,\n+    },\n     extensions::{\n         AttrKind, FieldKind, NameOrNameRef, PathSegmentKind, SelfParamKind, SlicePatComponents,\n         StructKind, TypeBoundKind, VisibilityKind,"}, {"sha": "352c0d2c57e2226ff403a17af2073563b37d30a7", "filename": "crates/ra_syntax/src/ast/expr_extensions.rs", "status": "modified", "additions": 16, "deletions": 1, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/1865dedadf02c0ecc71a039645ad832d33881d30/crates%2Fra_syntax%2Fsrc%2Fast%2Fexpr_extensions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1865dedadf02c0ecc71a039645ad832d33881d30/crates%2Fra_syntax%2Fsrc%2Fast%2Fexpr_extensions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Fsrc%2Fast%2Fexpr_extensions.rs?ref=1865dedadf02c0ecc71a039645ad832d33881d30", "patch": "@@ -359,7 +359,22 @@ impl ast::Literal {\n     }\n }\n \n+pub enum BlockModifier {\n+    Async(SyntaxToken),\n+    Unsafe(SyntaxToken),\n+}\n+\n impl ast::BlockExpr {\n+    pub fn modifier(&self) -> Option<BlockModifier> {\n+        if let Some(token) = self.async_token() {\n+            return Some(BlockModifier::Async(token));\n+        }\n+        if let Some(token) = self.unsafe_token() {\n+            return Some(BlockModifier::Unsafe(token));\n+        }\n+        None\n+    }\n+\n     /// false if the block is an intrinsic part of the syntax and can't be\n     /// replaced with arbitrary expression.\n     ///\n@@ -368,7 +383,7 @@ impl ast::BlockExpr {\n     /// const FOO: () = { stand_alone };\n     /// ```\n     pub fn is_standalone(&self) -> bool {\n-        if self.unsafe_token().is_some() || self.async_token().is_some() {\n+        if self.modifier().is_some() {\n             return false;\n         }\n         let parent = match self.syntax().parent() {"}]}