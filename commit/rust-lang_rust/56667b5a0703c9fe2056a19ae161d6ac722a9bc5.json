{"sha": "56667b5a0703c9fe2056a19ae161d6ac722a9bc5", "node_id": "C_kwDOAAsO6NoAKDU2NjY3YjVhMDcwM2M5ZmUyMDU2YTE5YWUxNjFkNmFjNzIyYTliYzU", "commit": {"author": {"name": "Dylan DPC", "email": "99973273+Dylan-DPC@users.noreply.github.com", "date": "2022-07-06T09:19:11Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-07-06T09:19:11Z"}, "message": "Rollup merge of #98964 - RalfJung:typo, r=Dylan-DPC\n\nfix typo in function name\n\nI don't know what I was doing when I named that function...\nfollow-up to #98888\nr? `@oli-obk`", "tree": {"sha": "a8adce04c57de6425427ec54c70107637d456076", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a8adce04c57de6425427ec54c70107637d456076"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/56667b5a0703c9fe2056a19ae161d6ac722a9bc5", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJixVOQCRBK7hj4Ov3rIwAAwn8IACKYCxC7QL1W4GTiYbKjfMJc\nB6pYNokM8Z0g8YZDpinQD+UzROKB4y/JXReh3+TP+Xbr/nAMaszLv6M0Yn/ga9sP\nv2//N2FQy2BZw6lPPZlq1IChYBWc6lqoDasjXizK1+YCWl1l6LiB9ivkuzb3KyBF\nMqUzPOEEIEqosXTabYMx59RPyOj8EplnvVUIiRmBtgneZDgvKZfQkpdwtvCi7psl\nnds4+oXYJlsQUmAQJBbLIoz9gWVcPUqZ/ooi6n+c1j0uPI+E6l0w/SlOQzGg7ypY\n5vdTutnQiJaGM9xsF0/SwzZXCPKPkQqGVNOlWJ9Z9y+FRypTaUPtYTOLLFwLZ1s=\n=0hKt\n-----END PGP SIGNATURE-----\n", "payload": "tree a8adce04c57de6425427ec54c70107637d456076\nparent df1f41530509308d4271f5b8204809e025293857\nparent 4687afa480846c155af1598940a97d0286a2f1d5\nauthor Dylan DPC <99973273+Dylan-DPC@users.noreply.github.com> 1657099151 +0530\ncommitter GitHub <noreply@github.com> 1657099151 +0530\n\nRollup merge of #98964 - RalfJung:typo, r=Dylan-DPC\n\nfix typo in function name\n\nI don't know what I was doing when I named that function...\nfollow-up to #98888\nr? `@oli-obk`\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/56667b5a0703c9fe2056a19ae161d6ac722a9bc5", "html_url": "https://github.com/rust-lang/rust/commit/56667b5a0703c9fe2056a19ae161d6ac722a9bc5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/56667b5a0703c9fe2056a19ae161d6ac722a9bc5/comments", "author": {"login": "Dylan-DPC", "id": 99973273, "node_id": "U_kgDOBfV4mQ", "avatar_url": "https://avatars.githubusercontent.com/u/99973273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dylan-DPC", "html_url": "https://github.com/Dylan-DPC", "followers_url": "https://api.github.com/users/Dylan-DPC/followers", "following_url": "https://api.github.com/users/Dylan-DPC/following{/other_user}", "gists_url": "https://api.github.com/users/Dylan-DPC/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dylan-DPC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dylan-DPC/subscriptions", "organizations_url": "https://api.github.com/users/Dylan-DPC/orgs", "repos_url": "https://api.github.com/users/Dylan-DPC/repos", "events_url": "https://api.github.com/users/Dylan-DPC/events{/privacy}", "received_events_url": "https://api.github.com/users/Dylan-DPC/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "df1f41530509308d4271f5b8204809e025293857", "url": "https://api.github.com/repos/rust-lang/rust/commits/df1f41530509308d4271f5b8204809e025293857", "html_url": "https://github.com/rust-lang/rust/commit/df1f41530509308d4271f5b8204809e025293857"}, {"sha": "4687afa480846c155af1598940a97d0286a2f1d5", "url": "https://api.github.com/repos/rust-lang/rust/commits/4687afa480846c155af1598940a97d0286a2f1d5", "html_url": "https://github.com/rust-lang/rust/commit/4687afa480846c155af1598940a97d0286a2f1d5"}], "stats": {"total": 6, "additions": 3, "deletions": 3}, "files": [{"sha": "4661a7c28286de438b644a8d9ef8a0b431e6d9ab", "filename": "compiler/rustc_const_eval/src/interpret/machine.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/56667b5a0703c9fe2056a19ae161d6ac722a9bc5/compiler%2Frustc_const_eval%2Fsrc%2Finterpret%2Fmachine.rs", "raw_url": "https://github.com/rust-lang/rust/raw/56667b5a0703c9fe2056a19ae161d6ac722a9bc5/compiler%2Frustc_const_eval%2Fsrc%2Finterpret%2Fmachine.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_const_eval%2Fsrc%2Finterpret%2Fmachine.rs?ref=56667b5a0703c9fe2056a19ae161d6ac722a9bc5", "patch": "@@ -145,7 +145,7 @@ pub trait Machine<'mir, 'tcx>: Sized {\n     }\n \n     /// Whether CheckedBinOp MIR statements should actually check for overflow.\n-    fn check_binop_checks_overflow(_ecx: &InterpCx<'mir, 'tcx, Self>) -> bool;\n+    fn checked_binop_checks_overflow(_ecx: &InterpCx<'mir, 'tcx, Self>) -> bool;\n \n     /// Entry point for obtaining the MIR of anything that should get evaluated.\n     /// So not just functions and shims, but also const/static initializers, anonymous\n@@ -472,7 +472,7 @@ pub macro compile_time_machine(<$mir: lifetime, $tcx: lifetime>) {\n     }\n \n     #[inline(always)]\n-    fn check_binop_checks_overflow(_ecx: &InterpCx<$mir, $tcx, Self>) -> bool {\n+    fn checked_binop_checks_overflow(_ecx: &InterpCx<$mir, $tcx, Self>) -> bool {\n         true\n     }\n "}, {"sha": "f0c113376eab1c576a46edc8f8d6e6975e8a6110", "filename": "compiler/rustc_const_eval/src/interpret/operator.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/56667b5a0703c9fe2056a19ae161d6ac722a9bc5/compiler%2Frustc_const_eval%2Fsrc%2Finterpret%2Foperator.rs", "raw_url": "https://github.com/rust-lang/rust/raw/56667b5a0703c9fe2056a19ae161d6ac722a9bc5/compiler%2Frustc_const_eval%2Fsrc%2Finterpret%2Foperator.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_const_eval%2Fsrc%2Finterpret%2Foperator.rs?ref=56667b5a0703c9fe2056a19ae161d6ac722a9bc5", "patch": "@@ -33,7 +33,7 @@ impl<'mir, 'tcx: 'mir, M: Machine<'mir, 'tcx>> InterpCx<'mir, 'tcx, M> {\n         // As per https://github.com/rust-lang/rust/pull/98738, we always return `false` in the 2nd\n         // component when overflow checking is disabled.\n         let overflowed =\n-            overflowed && (force_overflow_checks || M::check_binop_checks_overflow(self));\n+            overflowed && (force_overflow_checks || M::checked_binop_checks_overflow(self));\n         // Write the result to `dest`.\n         if let Abi::ScalarPair(..) = dest.layout.abi {\n             // We can use the optimized path and avoid `place_field` (which might do"}]}