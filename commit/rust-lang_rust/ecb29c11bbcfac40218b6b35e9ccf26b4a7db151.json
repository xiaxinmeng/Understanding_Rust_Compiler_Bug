{"sha": "ecb29c11bbcfac40218b6b35e9ccf26b4a7db151", "node_id": "MDY6Q29tbWl0NzI0NzEyOmVjYjI5YzExYmJjZmFjNDAyMThiNmIzNWU5Y2NmMjZiNGE3ZGIxNTE=", "commit": {"author": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2017-08-23T19:54:36Z"}, "committer": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2017-08-25T23:08:35Z"}, "message": "rustc: Fix two instances of `try_get`\n\nThe `sized_constraint` and `needs_drop_raw` queries both use `try_get` to detect\ncycles, but in both of these cases the cycle indicates an error has happened\nelsewhere in compilation. In these cases we can just delay the diagnostic to get\nemitted as a bug later if we ended up forgetting to emit the error diagnostic.", "tree": {"sha": "a2879b00e65a2a6189c48b313cf2d4f54aa8ce76", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a2879b00e65a2a6189c48b313cf2d4f54aa8ce76"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ecb29c11bbcfac40218b6b35e9ccf26b4a7db151", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ecb29c11bbcfac40218b6b35e9ccf26b4a7db151", "html_url": "https://github.com/rust-lang/rust/commit/ecb29c11bbcfac40218b6b35e9ccf26b4a7db151", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ecb29c11bbcfac40218b6b35e9ccf26b4a7db151/comments", "author": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "97f2c37435b76c59ff60164b30a02f09641f798f", "url": "https://api.github.com/repos/rust-lang/rust/commits/97f2c37435b76c59ff60164b30a02f09641f798f", "html_url": "https://github.com/rust-lang/rust/commit/97f2c37435b76c59ff60164b30a02f09641f798f"}], "stats": {"total": 17, "additions": 12, "deletions": 5}, "files": [{"sha": "852bd48a5eeed871fe5bd30eb7e8b5295d842aa2", "filename": "src/librustc/ty/mod.rs", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/ecb29c11bbcfac40218b6b35e9ccf26b4a7db151/src%2Flibrustc%2Fty%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ecb29c11bbcfac40218b6b35e9ccf26b4a7db151/src%2Flibrustc%2Fty%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Fmod.rs?ref=ecb29c11bbcfac40218b6b35e9ccf26b4a7db151", "patch": "@@ -1684,12 +1684,15 @@ impl<'a, 'gcx, 'tcx> AdtDef {\n     pub fn sized_constraint(&self, tcx: TyCtxt<'a, 'gcx, 'tcx>) -> &'tcx [Ty<'tcx>] {\n         match queries::adt_sized_constraint::try_get(tcx, DUMMY_SP, self.did) {\n             Ok(tys) => tys,\n-            Err(_) => {\n+            Err(mut bug) => {\n                 debug!(\"adt_sized_constraint: {:?} is recursive\", self);\n                 // This should be reported as an error by `check_representable`.\n                 //\n                 // Consider the type as Sized in the meanwhile to avoid\n-                // further errors.\n+                // further errors. Delay our `bug` diagnostic here to get\n+                // emitted later as well in case we accidentally otherwise don't\n+                // emit an error.\n+                bug.delay_as_bug();\n                 tcx.intern_type_list(&[tcx.types.err])\n             }\n         }"}, {"sha": "bbbb8611f98a5f104b11b96b2d93954d3826bda3", "filename": "src/librustc/ty/util.rs", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/ecb29c11bbcfac40218b6b35e9ccf26b4a7db151/src%2Flibrustc%2Fty%2Futil.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ecb29c11bbcfac40218b6b35e9ccf26b4a7db151/src%2Flibrustc%2Fty%2Futil.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Futil.rs?ref=ecb29c11bbcfac40218b6b35e9ccf26b4a7db151", "patch": "@@ -1069,11 +1069,15 @@ fn needs_drop_raw<'a, 'tcx>(tcx: TyCtxt<'a, 'tcx, 'tcx>,\n     let needs_drop = |ty: Ty<'tcx>| -> bool {\n         match ty::queries::needs_drop_raw::try_get(tcx, DUMMY_SP, param_env.and(ty)) {\n             Ok(v) => v,\n-            Err(_) => {\n+            Err(mut bug) => {\n                 // Cycles should be reported as an error by `check_representable`.\n                 //\n-                // Consider the type as not needing drop in the meanwhile to avoid\n-                // further errors.\n+                // Consider the type as not needing drop in the meanwhile to\n+                // avoid further errors.\n+                //\n+                // In case we forgot to emit a bug elsewhere, delay our\n+                // diagnostic to get emitted as a compiler bug.\n+                bug.delay_as_bug();\n                 false\n             }\n         }"}]}