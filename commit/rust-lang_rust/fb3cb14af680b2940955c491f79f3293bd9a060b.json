{"sha": "fb3cb14af680b2940955c491f79f3293bd9a060b", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZiM2NiMTRhZjY4MGIyOTQwOTU1YzQ5MWY3OWYzMjkzYmQ5YTA2MGI=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2020-09-21T13:30:49Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-09-21T13:30:49Z"}, "message": "Rollup merge of #77009 - est31:dogfood_total_cmp, r=lcnr\n\nDogfood total_cmp in the test crate", "tree": {"sha": "d90ccb4af9a09638f7ac21ff716dac62610d70d4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d90ccb4af9a09638f7ac21ff716dac62610d70d4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/fb3cb14af680b2940955c491f79f3293bd9a060b", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJfaKsKCRBK7hj4Ov3rIwAAdHIIAJfnmVB6b0zfTuKA8kCfpkr+\nkn+Q7Argun26OcNMkdVCxjwqra7sySqWFmYSkhuw84Ntp+2weRxbybH/S7HEFrSo\nro/OBRZQiDEoNaeM0FLiNoqH4mOQgv+VyJLKEfwvHY3ABi+X9oi6BvTP0Ppefija\n3n4DDpXvGAiYYSNFG4UtiruttgdpxNbOqfKYzZ3MPA+12IYLPt9bQsZgTS1N2ESu\nw25U/gJF3EOfBoqPYK28XyS5vrqOD/+P/gIIP/PRYH21oEK0C9QvezqPEvUPAFc6\ne2YgackZjdh7LVjW58sX7SqIlTn1AWVRaroU8lPFz8At68d+E+uutLzL7x7GMpA=\n=hUJf\n-----END PGP SIGNATURE-----\n", "payload": "tree d90ccb4af9a09638f7ac21ff716dac62610d70d4\nparent 48fc20cc471c6c0f16c291fc5801ede05126103a\nparent 9172e277f864205daaf8fde64868d833cc6e7eb2\nauthor Ralf Jung <post@ralfj.de> 1600695049 +0200\ncommitter GitHub <noreply@github.com> 1600695049 +0200\n\nRollup merge of #77009 - est31:dogfood_total_cmp, r=lcnr\n\nDogfood total_cmp in the test crate\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/fb3cb14af680b2940955c491f79f3293bd9a060b", "html_url": "https://github.com/rust-lang/rust/commit/fb3cb14af680b2940955c491f79f3293bd9a060b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/fb3cb14af680b2940955c491f79f3293bd9a060b/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "48fc20cc471c6c0f16c291fc5801ede05126103a", "url": "https://api.github.com/repos/rust-lang/rust/commits/48fc20cc471c6c0f16c291fc5801ede05126103a", "html_url": "https://github.com/rust-lang/rust/commit/48fc20cc471c6c0f16c291fc5801ede05126103a"}, {"sha": "9172e277f864205daaf8fde64868d833cc6e7eb2", "url": "https://api.github.com/repos/rust-lang/rust/commits/9172e277f864205daaf8fde64868d833cc6e7eb2", "html_url": "https://github.com/rust-lang/rust/commit/9172e277f864205daaf8fde64868d833cc6e7eb2"}], "stats": {"total": 19, "additions": 2, "deletions": 17}, "files": [{"sha": "caea4b1e3094162593310c64f32d8340fb11c578", "filename": "library/test/src/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/fb3cb14af680b2940955c491f79f3293bd9a060b/library%2Ftest%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fb3cb14af680b2940955c491f79f3293bd9a060b/library%2Ftest%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Ftest%2Fsrc%2Flib.rs?ref=fb3cb14af680b2940955c491f79f3293bd9a060b", "patch": "@@ -29,6 +29,7 @@\n #![feature(staged_api)]\n #![feature(termination_trait_lib)]\n #![feature(test)]\n+#![feature(total_cmp)]\n \n // Public reexports\n pub use self::bench::{black_box, Bencher};"}, {"sha": "1a2cb893a8a4fc551807c4750d2d5c82ceecdec4", "filename": "library/test/src/stats.rs", "status": "modified", "additions": 1, "deletions": 17, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/fb3cb14af680b2940955c491f79f3293bd9a060b/library%2Ftest%2Fsrc%2Fstats.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fb3cb14af680b2940955c491f79f3293bd9a060b/library%2Ftest%2Fsrc%2Fstats.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Ftest%2Fsrc%2Fstats.rs?ref=fb3cb14af680b2940955c491f79f3293bd9a060b", "patch": "@@ -1,29 +1,13 @@\n #![allow(missing_docs)]\n #![allow(deprecated)] // Float\n \n-use std::cmp::Ordering::{self, Equal, Greater, Less};\n use std::mem;\n \n #[cfg(test)]\n mod tests;\n \n-fn local_cmp(x: f64, y: f64) -> Ordering {\n-    // arbitrarily decide that NaNs are larger than everything.\n-    if y.is_nan() {\n-        Less\n-    } else if x.is_nan() {\n-        Greater\n-    } else if x < y {\n-        Less\n-    } else if x == y {\n-        Equal\n-    } else {\n-        Greater\n-    }\n-}\n-\n fn local_sort(v: &mut [f64]) {\n-    v.sort_by(|x: &f64, y: &f64| local_cmp(*x, *y));\n+    v.sort_by(|x: &f64, y: &f64| x.total_cmp(y));\n }\n \n /// Trait that provides simple descriptive statistics on a univariate set of numeric samples."}]}