{"sha": "471e65571b11c5187449a83e9f8daacf6443e523", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ3MWU2NTU3MWIxMWM1MTg3NDQ5YTgzZTlmOGRhYWNmNjQ0M2U1MjM=", "commit": {"author": {"name": "deso", "email": "deso@posteo.net", "date": "2017-03-01T13:44:50Z"}, "committer": {"name": "deso", "email": "deso@posteo.net", "date": "2017-03-01T13:52:41Z"}, "message": "doc: fix inconsistency in error output in guessing-game.md\n\nThe line '.expect(\"failed to read line\");' is partly started with a\nlower case 'f' and partly with an uppercase one, adding additional\nspurious changes to otherwise clean diffs if each sample is\ncopy-and-pasted over the previous.\nThis change starts the string with an uppercase everywhere which is in\nline with the style of the other strings.", "tree": {"sha": "32d5131616af62efb8e443a2746380704eee21f8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/32d5131616af62efb8e443a2746380704eee21f8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/471e65571b11c5187449a83e9f8daacf6443e523", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQItBAABCgAXBQJYttIuEBxkZXNvQHBvc3Rlby5uZXQACgkQlS3W+PNNi46bpA/+\nKDYX6e3NL9W9dR28Z+w1NxH8tM01rlP4kf+ghrA6TVEdmI2xFbxlOfq+bdxrIdcD\nfGe1JhR6rdgrtAsbOatpW9Ypyxf0DPXnfd+ki24AOWICl5c55lOY2ZwPwZleI0Pk\nFIWjtll2hI4E0wf6Y8eGdU1lNgyOItrOPEgRXWfTplHEt0nZ1cIMEdsnn8OtToQ8\nNPALpZoFGi1/eruO+b/qy7Lbkhm/BsEnkEnrhRN3ueOpbEadG4CFQunttDO/WT8n\n4YfST8pV9LgQoXOnSFkIW5B9M6EGhH44O+dGL6YWHw0kNdvs0ZGguPXBsWJJKvgn\nWqWNqxSqMl875f5eTbgCyfV6k2Yo50OJDxS7LWlGCMUuTR5e28KePFEWol+gDdQi\nKswpz0bqL3R6kTwHuUl8lottf/JO2s0YVekixdPsR2hwZS4BeTOeYrk776oScSda\nrt6m1P+0ikwP03IZtmIMSTCjpV3ZHcsJ10UzDeAZKOUm0WwH6c8yBtfMV40x1iIE\nNPI0tlOOveyo8FXs4sUPXjXloh0SlPxDkZko3Jb+w20xdHS17jSjMXl+119FPkk/\nSYZw88CLs3aCArrl0M/lJdXAQAS0n5EGtcBxuHPlW0dm9Os9t77PKGPgHCHcHfMc\nJA3o7lNCTwiBC/5/a8LkVyyKFYpUDboAOj9D6CO6PNg=\n=zlE6\n-----END PGP SIGNATURE-----", "payload": "tree 32d5131616af62efb8e443a2746380704eee21f8\nparent 2f52386f1072755d1b9973014e8e1d4b383e8eef\nauthor deso <deso@posteo.net> 1488375890 -0800\ncommitter deso <deso@posteo.net> 1488376361 -0800\n\ndoc: fix inconsistency in error output in guessing-game.md\n\nThe line '.expect(\"failed to read line\");' is partly started with a\nlower case 'f' and partly with an uppercase one, adding additional\nspurious changes to otherwise clean diffs if each sample is\ncopy-and-pasted over the previous.\nThis change starts the string with an uppercase everywhere which is in\nline with the style of the other strings.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/471e65571b11c5187449a83e9f8daacf6443e523", "html_url": "https://github.com/rust-lang/rust/commit/471e65571b11c5187449a83e9f8daacf6443e523", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/471e65571b11c5187449a83e9f8daacf6443e523/comments", "author": {"login": "d-e-s-o", "id": 6610056, "node_id": "MDQ6VXNlcjY2MTAwNTY=", "avatar_url": "https://avatars.githubusercontent.com/u/6610056?v=4", "gravatar_id": "", "url": "https://api.github.com/users/d-e-s-o", "html_url": "https://github.com/d-e-s-o", "followers_url": "https://api.github.com/users/d-e-s-o/followers", "following_url": "https://api.github.com/users/d-e-s-o/following{/other_user}", "gists_url": "https://api.github.com/users/d-e-s-o/gists{/gist_id}", "starred_url": "https://api.github.com/users/d-e-s-o/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/d-e-s-o/subscriptions", "organizations_url": "https://api.github.com/users/d-e-s-o/orgs", "repos_url": "https://api.github.com/users/d-e-s-o/repos", "events_url": "https://api.github.com/users/d-e-s-o/events{/privacy}", "received_events_url": "https://api.github.com/users/d-e-s-o/received_events", "type": "User", "site_admin": false}, "committer": {"login": "d-e-s-o", "id": 6610056, "node_id": "MDQ6VXNlcjY2MTAwNTY=", "avatar_url": "https://avatars.githubusercontent.com/u/6610056?v=4", "gravatar_id": "", "url": "https://api.github.com/users/d-e-s-o", "html_url": "https://github.com/d-e-s-o", "followers_url": "https://api.github.com/users/d-e-s-o/followers", "following_url": "https://api.github.com/users/d-e-s-o/following{/other_user}", "gists_url": "https://api.github.com/users/d-e-s-o/gists{/gist_id}", "starred_url": "https://api.github.com/users/d-e-s-o/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/d-e-s-o/subscriptions", "organizations_url": "https://api.github.com/users/d-e-s-o/orgs", "repos_url": "https://api.github.com/users/d-e-s-o/repos", "events_url": "https://api.github.com/users/d-e-s-o/events{/privacy}", "received_events_url": "https://api.github.com/users/d-e-s-o/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2f52386f1072755d1b9973014e8e1d4b383e8eef", "url": "https://api.github.com/repos/rust-lang/rust/commits/2f52386f1072755d1b9973014e8e1d4b383e8eef", "html_url": "https://github.com/rust-lang/rust/commit/2f52386f1072755d1b9973014e8e1d4b383e8eef"}], "stats": {"total": 16, "additions": 8, "deletions": 8}, "files": [{"sha": "4d81438b11deadfe9cfb3c7a8c587df46fd09747", "filename": "src/doc/book/src/guessing-game.md", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/471e65571b11c5187449a83e9f8daacf6443e523/src%2Fdoc%2Fbook%2Fsrc%2Fguessing-game.md", "raw_url": "https://github.com/rust-lang/rust/raw/471e65571b11c5187449a83e9f8daacf6443e523/src%2Fdoc%2Fbook%2Fsrc%2Fguessing-game.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Fbook%2Fsrc%2Fguessing-game.md?ref=471e65571b11c5187449a83e9f8daacf6443e523", "patch": "@@ -255,7 +255,7 @@ and other whitespace. This helps you split up long lines. We _could_ have\n done:\n \n ```rust,ignore\n-    io::stdin().read_line(&mut guess).expect(\"failed to read line\");\n+    io::stdin().read_line(&mut guess).expect(\"Failed to read line\");\n ```\n \n But that gets hard to read. So we\u2019ve split it up, two lines for two method\n@@ -473,7 +473,7 @@ fn main() {\n     let mut guess = String::new();\n \n     io::stdin().read_line(&mut guess)\n-        .expect(\"failed to read line\");\n+        .expect(\"Failed to read line\");\n \n     println!(\"You guessed: {}\", guess);\n }\n@@ -563,7 +563,7 @@ fn main() {\n     let mut guess = String::new();\n \n     io::stdin().read_line(&mut guess)\n-        .expect(\"failed to read line\");\n+        .expect(\"Failed to read line\");\n \n     println!(\"You guessed: {}\", guess);\n \n@@ -678,7 +678,7 @@ fn main() {\n     let mut guess = String::new();\n \n     io::stdin().read_line(&mut guess)\n-        .expect(\"failed to read line\");\n+        .expect(\"Failed to read line\");\n \n     let guess: u32 = guess.trim().parse()\n         .expect(\"Please type a number!\");\n@@ -780,7 +780,7 @@ fn main() {\n         let mut guess = String::new();\n \n         io::stdin().read_line(&mut guess)\n-            .expect(\"failed to read line\");\n+            .expect(\"Failed to read line\");\n \n         let guess: u32 = guess.trim().parse()\n             .expect(\"Please type a number!\");\n@@ -847,7 +847,7 @@ fn main() {\n         let mut guess = String::new();\n \n         io::stdin().read_line(&mut guess)\n-            .expect(\"failed to read line\");\n+            .expect(\"Failed to read line\");\n \n         let guess: u32 = guess.trim().parse()\n             .expect(\"Please type a number!\");\n@@ -892,7 +892,7 @@ fn main() {\n         let mut guess = String::new();\n \n         io::stdin().read_line(&mut guess)\n-            .expect(\"failed to read line\");\n+            .expect(\"Failed to read line\");\n \n         let guess: u32 = match guess.trim().parse() {\n             Ok(num) => num,\n@@ -981,7 +981,7 @@ fn main() {\n         let mut guess = String::new();\n \n         io::stdin().read_line(&mut guess)\n-            .expect(\"failed to read line\");\n+            .expect(\"Failed to read line\");\n \n         let guess: u32 = match guess.trim().parse() {\n             Ok(num) => num,"}]}