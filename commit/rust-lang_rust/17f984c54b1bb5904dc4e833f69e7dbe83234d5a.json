{"sha": "17f984c54b1bb5904dc4e833f69e7dbe83234d5a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE3Zjk4NGM1NGIxYmI1OTA0ZGM0ZTgzM2Y2OWU3ZGJlODMyMzRkNWE=", "commit": {"author": {"name": "Luqman Aden", "email": "laden@csclub.uwaterloo.ca", "date": "2014-01-13T00:59:47Z"}, "committer": {"name": "Luqman Aden", "email": "laden@csclub.uwaterloo.ca", "date": "2014-01-14T01:51:49Z"}, "message": "librustc: Don't allow use after move of implicitly coerced object. Fixes #11481.", "tree": {"sha": "d18bc013b8e9a6b251c07026ca1d4e7f35237c6e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d18bc013b8e9a6b251c07026ca1d4e7f35237c6e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/17f984c54b1bb5904dc4e833f69e7dbe83234d5a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/17f984c54b1bb5904dc4e833f69e7dbe83234d5a", "html_url": "https://github.com/rust-lang/rust/commit/17f984c54b1bb5904dc4e833f69e7dbe83234d5a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/17f984c54b1bb5904dc4e833f69e7dbe83234d5a/comments", "author": {"login": "luqmana", "id": 287063, "node_id": "MDQ6VXNlcjI4NzA2Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/287063?v=4", "gravatar_id": "", "url": "https://api.github.com/users/luqmana", "html_url": "https://github.com/luqmana", "followers_url": "https://api.github.com/users/luqmana/followers", "following_url": "https://api.github.com/users/luqmana/following{/other_user}", "gists_url": "https://api.github.com/users/luqmana/gists{/gist_id}", "starred_url": "https://api.github.com/users/luqmana/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/luqmana/subscriptions", "organizations_url": "https://api.github.com/users/luqmana/orgs", "repos_url": "https://api.github.com/users/luqmana/repos", "events_url": "https://api.github.com/users/luqmana/events{/privacy}", "received_events_url": "https://api.github.com/users/luqmana/received_events", "type": "User", "site_admin": false}, "committer": {"login": "luqmana", "id": 287063, "node_id": "MDQ6VXNlcjI4NzA2Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/287063?v=4", "gravatar_id": "", "url": "https://api.github.com/users/luqmana", "html_url": "https://github.com/luqmana", "followers_url": "https://api.github.com/users/luqmana/followers", "following_url": "https://api.github.com/users/luqmana/following{/other_user}", "gists_url": "https://api.github.com/users/luqmana/gists{/gist_id}", "starred_url": "https://api.github.com/users/luqmana/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/luqmana/subscriptions", "organizations_url": "https://api.github.com/users/luqmana/orgs", "repos_url": "https://api.github.com/users/luqmana/repos", "events_url": "https://api.github.com/users/luqmana/events{/privacy}", "received_events_url": "https://api.github.com/users/luqmana/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ab66f762548228a9491de8c955141b8d62b1f5fa", "url": "https://api.github.com/repos/rust-lang/rust/commits/ab66f762548228a9491de8c955141b8d62b1f5fa", "html_url": "https://github.com/rust-lang/rust/commit/ab66f762548228a9491de8c955141b8d62b1f5fa"}], "stats": {"total": 44, "additions": 42, "deletions": 2}, "files": [{"sha": "8cf39d14763b395ec07cfee1f77693cc52d02777", "filename": "src/librustc/middle/mem_categorization.rs", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/17f984c54b1bb5904dc4e833f69e7dbe83234d5a/src%2Flibrustc%2Fmiddle%2Fmem_categorization.rs", "raw_url": "https://github.com/rust-lang/rust/raw/17f984c54b1bb5904dc4e833f69e7dbe83234d5a/src%2Flibrustc%2Fmiddle%2Fmem_categorization.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fmem_categorization.rs?ref=17f984c54b1bb5904dc4e833f69e7dbe83234d5a", "patch": "@@ -345,9 +345,12 @@ impl mem_categorization_ctxt {\n                 match **adjustment {\n                     ty::AutoObject(..) => {\n                         // Implicity casts a concrete object to trait object\n-                        // Result is an rvalue\n+                        // so just patch up the type\n                         let expr_ty = ty::expr_ty_adjusted(self.tcx, expr);\n-                        self.cat_rvalue_node(expr, expr_ty)\n+                        @cmt_ {\n+                            ty: expr_ty,\n+                            ..*self.cat_expr_unadjusted(expr)\n+                        }\n                     }\n \n                     ty::AutoAddEnv(..) => {"}, {"sha": "bef6165d120a5f2ea216f439f5ea11d52b96e140", "filename": "src/test/compile-fail/use-after-move-implicity-coerced-object.rs", "status": "added", "additions": 37, "deletions": 0, "changes": 37, "blob_url": "https://github.com/rust-lang/rust/blob/17f984c54b1bb5904dc4e833f69e7dbe83234d5a/src%2Ftest%2Fcompile-fail%2Fuse-after-move-implicity-coerced-object.rs", "raw_url": "https://github.com/rust-lang/rust/raw/17f984c54b1bb5904dc4e833f69e7dbe83234d5a/src%2Ftest%2Fcompile-fail%2Fuse-after-move-implicity-coerced-object.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fuse-after-move-implicity-coerced-object.rs?ref=17f984c54b1bb5904dc4e833f69e7dbe83234d5a", "patch": "@@ -0,0 +1,37 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+struct Number {\n+    n: i64\n+}\n+\n+impl ToStr for Number {\n+    fn to_str(&self) -> ~str {\n+        self.n.to_str()\n+    }\n+}\n+\n+struct List {\n+    list: ~[~ToStr]\n+}\n+\n+impl List {\n+    fn push(&mut self, n: ~ToStr) {\n+        self.list.push(n);\n+    }\n+}\n+\n+fn main() {\n+    let n = ~Number { n: 42 };\n+    let mut l = ~List { list: ~[] };\n+    l.push(n);\n+    //^~ NOTE: `n` moved here because it has type `~Number`, which is non-copyable (perhaps you meant to use clone()?)\n+    let x = n.to_str(); //~ ERROR: use of moved value: `n`\n+}"}]}