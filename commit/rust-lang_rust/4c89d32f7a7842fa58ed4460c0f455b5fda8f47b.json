{"sha": "4c89d32f7a7842fa58ed4460c0f455b5fda8f47b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjRjODlkMzJmN2E3ODQyZmE1OGVkNDQ2MGMwZjQ1NWI1ZmRhOGY0N2I=", "commit": {"author": {"name": "Benjamin Coenen", "email": "5719034+bnjjj@users.noreply.github.com", "date": "2020-06-18T20:16:39Z"}, "committer": {"name": "Benjamin Coenen", "email": "5719034+bnjjj@users.noreply.github.com", "date": "2020-06-18T20:16:39Z"}, "message": "do not suggest assist for return type to result in bad case #4826\n\nSigned-off-by: Benjamin Coenen <5719034+bnjjj@users.noreply.github.com>", "tree": {"sha": "0bcf6c514aa814ea73bdd34986a0b405f522f572", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0bcf6c514aa814ea73bdd34986a0b405f522f572"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4c89d32f7a7842fa58ed4460c0f455b5fda8f47b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4c89d32f7a7842fa58ed4460c0f455b5fda8f47b", "html_url": "https://github.com/rust-lang/rust/commit/4c89d32f7a7842fa58ed4460c0f455b5fda8f47b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4c89d32f7a7842fa58ed4460c0f455b5fda8f47b/comments", "author": {"login": "bnjjj", "id": 5719034, "node_id": "MDQ6VXNlcjU3MTkwMzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/5719034?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bnjjj", "html_url": "https://github.com/bnjjj", "followers_url": "https://api.github.com/users/bnjjj/followers", "following_url": "https://api.github.com/users/bnjjj/following{/other_user}", "gists_url": "https://api.github.com/users/bnjjj/gists{/gist_id}", "starred_url": "https://api.github.com/users/bnjjj/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bnjjj/subscriptions", "organizations_url": "https://api.github.com/users/bnjjj/orgs", "repos_url": "https://api.github.com/users/bnjjj/repos", "events_url": "https://api.github.com/users/bnjjj/events{/privacy}", "received_events_url": "https://api.github.com/users/bnjjj/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bnjjj", "id": 5719034, "node_id": "MDQ6VXNlcjU3MTkwMzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/5719034?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bnjjj", "html_url": "https://github.com/bnjjj", "followers_url": "https://api.github.com/users/bnjjj/followers", "following_url": "https://api.github.com/users/bnjjj/following{/other_user}", "gists_url": "https://api.github.com/users/bnjjj/gists{/gist_id}", "starred_url": "https://api.github.com/users/bnjjj/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bnjjj/subscriptions", "organizations_url": "https://api.github.com/users/bnjjj/orgs", "repos_url": "https://api.github.com/users/bnjjj/repos", "events_url": "https://api.github.com/users/bnjjj/events{/privacy}", "received_events_url": "https://api.github.com/users/bnjjj/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1e35c7405560b2c0badaa9ee4945a131b733bda8", "url": "https://api.github.com/repos/rust-lang/rust/commits/1e35c7405560b2c0badaa9ee4945a131b733bda8", "html_url": "https://github.com/rust-lang/rust/commit/1e35c7405560b2c0badaa9ee4945a131b733bda8"}], "stats": {"total": 30, "additions": 28, "deletions": 2}, "files": [{"sha": "12572936a6204dcb7c4547faa68025b81de48f7a", "filename": "crates/ra_assists/src/handlers/change_return_type_to_result.rs", "status": "modified", "additions": 28, "deletions": 2, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/4c89d32f7a7842fa58ed4460c0f455b5fda8f47b/crates%2Fra_assists%2Fsrc%2Fhandlers%2Fchange_return_type_to_result.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4c89d32f7a7842fa58ed4460c0f455b5fda8f47b/crates%2Fra_assists%2Fsrc%2Fhandlers%2Fchange_return_type_to_result.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_assists%2Fsrc%2Fhandlers%2Fchange_return_type_to_result.rs?ref=4c89d32f7a7842fa58ed4460c0f455b5fda8f47b", "patch": "@@ -22,8 +22,12 @@ pub(crate) fn change_return_type_to_result(acc: &mut Assists, ctx: &AssistContex\n     let fn_def = ret_type.syntax().parent().and_then(ast::FnDef::cast)?;\n \n     let type_ref = &ret_type.type_ref()?;\n-    if type_ref.syntax().text().to_string().starts_with(\"Result<\") {\n-        return None;\n+    let ret_type_str = type_ref.syntax().text().to_string();\n+    let first_part_ret_type = ret_type_str.splitn(2, '<').next();\n+    if let Some(ret_type_first_part) = first_part_ret_type {\n+        if ret_type_first_part.ends_with(\"Result\") {\n+            return None;\n+        }\n     }\n \n     let block_expr = &fn_def.body()?;\n@@ -296,6 +300,28 @@ mod tests {\n         );\n     }\n \n+    #[test]\n+    fn change_return_type_to_result_simple_return_type_already_result_std() {\n+        check_assist_not_applicable(\n+            change_return_type_to_result,\n+            r#\"fn foo() -> std::result::Result<i32<|>, String> {\n+                let test = \"test\";\n+                return 42i32;\n+            }\"#,\n+        );\n+    }\n+\n+    #[test]\n+    fn change_return_type_to_result_simple_return_type_already_result() {\n+        check_assist_not_applicable(\n+            change_return_type_to_result,\n+            r#\"fn foo() -> Result<i32<|>, String> {\n+                let test = \"test\";\n+                return 42i32;\n+            }\"#,\n+        );\n+    }\n+\n     #[test]\n     fn change_return_type_to_result_simple_with_cursor() {\n         check_assist("}]}