{"sha": "bed84898fca9443f97fc3db17b0417c179d25803", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJlZDg0ODk4ZmNhOTQ0M2Y5N2ZjM2RiMTdiMDQxN2MxNzlkMjU4MDM=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2013-08-25T05:46:13Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2013-08-25T05:46:13Z"}, "message": "auto merge of #8736 : luqmana/rust/hf, r=yichoi\n\nFixes #8536.", "tree": {"sha": "d5fb12015d733948b7ec0fc86b56583929c73755", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d5fb12015d733948b7ec0fc86b56583929c73755"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/bed84898fca9443f97fc3db17b0417c179d25803", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/bed84898fca9443f97fc3db17b0417c179d25803", "html_url": "https://github.com/rust-lang/rust/commit/bed84898fca9443f97fc3db17b0417c179d25803", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/bed84898fca9443f97fc3db17b0417c179d25803/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "da08b0244a6bfec980ed2152a963886749886472", "url": "https://api.github.com/repos/rust-lang/rust/commits/da08b0244a6bfec980ed2152a963886749886472", "html_url": "https://github.com/rust-lang/rust/commit/da08b0244a6bfec980ed2152a963886749886472"}, {"sha": "6a05aa6a203189658d0d63ceab91bdc88734e83b", "url": "https://api.github.com/repos/rust-lang/rust/commits/6a05aa6a203189658d0d63ceab91bdc88734e83b", "html_url": "https://github.com/rust-lang/rust/commit/6a05aa6a203189658d0d63ceab91bdc88734e83b"}], "stats": {"total": 59, "additions": 20, "deletions": 39}, "files": [{"sha": "94f4adb590ab2c8bdc8336dbaf5b0e04cda7f894", "filename": "src/librustc/back/arm.rs", "status": "modified", "additions": 2, "deletions": 8, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/bed84898fca9443f97fc3db17b0417c179d25803/src%2Flibrustc%2Fback%2Farm.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bed84898fca9443f97fc3db17b0417c179d25803/src%2Flibrustc%2Fback%2Farm.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fback%2Farm.rs?ref=bed84898fca9443f97fc3db17b0417c179d25803", "patch": "@@ -13,7 +13,7 @@ use driver::session::sess_os_to_meta_os;\n use driver::session;\n use metadata::loader::meta_section_name;\n \n-pub fn get_target_strs(target_os: session::os) -> target_strs::t {\n+pub fn get_target_strs(target_triple: ~str, target_os: session::os) -> target_strs::t {\n     return target_strs::t {\n         module_asm: ~\"\",\n \n@@ -61,13 +61,7 @@ pub fn get_target_strs(target_os: session::os) -> target_strs::t {\n           }\n         },\n \n-        target_triple: match target_os {\n-          session::os_macos => ~\"arm-apple-darwin\",\n-          session::os_win32 => ~\"arm-pc-mingw32\",\n-          session::os_linux => ~\"arm-unknown-linux-gnueabihf\",\n-          session::os_android => ~\"arm-linux-androideabi\",\n-          session::os_freebsd => ~\"arm-unknown-freebsd\"\n-        },\n+        target_triple: target_triple,\n \n         cc_args: ~[~\"-marm\"]\n     };"}, {"sha": "e19b3c78623a61ed681fbdfc512ec1401c759b93", "filename": "src/librustc/back/mips.rs", "status": "modified", "additions": 2, "deletions": 8, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/bed84898fca9443f97fc3db17b0417c179d25803/src%2Flibrustc%2Fback%2Fmips.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bed84898fca9443f97fc3db17b0417c179d25803/src%2Flibrustc%2Fback%2Fmips.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fback%2Fmips.rs?ref=bed84898fca9443f97fc3db17b0417c179d25803", "patch": "@@ -13,7 +13,7 @@ use driver::session;\n use driver::session::sess_os_to_meta_os;\n use metadata::loader::meta_section_name;\n \n-pub fn get_target_strs(target_os: session::os) -> target_strs::t {\n+pub fn get_target_strs(target_triple: ~str, target_os: session::os) -> target_strs::t {\n     return target_strs::t {\n         module_asm: ~\"\",\n \n@@ -61,13 +61,7 @@ pub fn get_target_strs(target_os: session::os) -> target_strs::t {\n           }\n         },\n \n-        target_triple: match target_os {\n-          session::os_macos => ~\"mips-apple-darwin\",\n-          session::os_win32 => ~\"mips-pc-mingw32\",\n-          session::os_linux => ~\"mips-unknown-linux-gnu\",\n-          session::os_android => ~\"mips-unknown-android-gnu\",\n-          session::os_freebsd => ~\"mips-unknown-freebsd\"\n-        },\n+        target_triple: target_triple,\n \n         cc_args: ~[]\n     };"}, {"sha": "968c5ba161b1de1cf64393be5db7d2b626af8aef", "filename": "src/librustc/back/x86.rs", "status": "modified", "additions": 2, "deletions": 8, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/bed84898fca9443f97fc3db17b0417c179d25803/src%2Flibrustc%2Fback%2Fx86.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bed84898fca9443f97fc3db17b0417c179d25803/src%2Flibrustc%2Fback%2Fx86.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fback%2Fx86.rs?ref=bed84898fca9443f97fc3db17b0417c179d25803", "patch": "@@ -14,7 +14,7 @@ use driver::session::sess_os_to_meta_os;\n use driver::session;\n use metadata::loader::meta_section_name;\n \n-pub fn get_target_strs(target_os: session::os) -> target_strs::t {\n+pub fn get_target_strs(target_triple: ~str, target_os: session::os) -> target_strs::t {\n     return target_strs::t {\n         module_asm: ~\"\",\n \n@@ -44,13 +44,7 @@ pub fn get_target_strs(target_os: session::os) -> target_strs::t {\n           }\n         },\n \n-        target_triple: match target_os {\n-          session::os_macos => ~\"i686-apple-darwin\",\n-          session::os_win32 => ~\"i686-pc-mingw32\",\n-          session::os_linux => ~\"i686-unknown-linux-gnu\",\n-          session::os_android => ~\"i686-unknown-android-gnu\",\n-          session::os_freebsd => ~\"i686-unknown-freebsd\"\n-        },\n+        target_triple: target_triple,\n \n         cc_args: ~[~\"-m32\"]\n     };"}, {"sha": "87aad7a108cebbf5e3c55d1b0c8f1eca1a651c62", "filename": "src/librustc/back/x86_64.rs", "status": "modified", "additions": 2, "deletions": 8, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/bed84898fca9443f97fc3db17b0417c179d25803/src%2Flibrustc%2Fback%2Fx86_64.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bed84898fca9443f97fc3db17b0417c179d25803/src%2Flibrustc%2Fback%2Fx86_64.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fback%2Fx86_64.rs?ref=bed84898fca9443f97fc3db17b0417c179d25803", "patch": "@@ -14,7 +14,7 @@ use driver::session::sess_os_to_meta_os;\n use driver::session;\n use metadata::loader::meta_section_name;\n \n-pub fn get_target_strs(target_os: session::os) -> target_strs::t {\n+pub fn get_target_strs(target_triple: ~str, target_os: session::os) -> target_strs::t {\n     return target_strs::t {\n         module_asm: ~\"\",\n \n@@ -52,13 +52,7 @@ pub fn get_target_strs(target_os: session::os) -> target_strs::t {\n           }\n         },\n \n-        target_triple: match target_os {\n-          session::os_macos => ~\"x86_64-apple-darwin\",\n-          session::os_win32 => ~\"x86_64-pc-mingw32\",\n-          session::os_linux => ~\"x86_64-unknown-linux-gnu\",\n-          session::os_android => ~\"x86_64-unknown-android-gnu\",\n-          session::os_freebsd => ~\"x86_64-unknown-freebsd\",\n-        },\n+        target_triple: target_triple,\n \n         cc_args: ~[~\"-m64\"]\n     };"}, {"sha": "e0c5a729b3f88116804e629eb3c7df6b9d890cdc", "filename": "src/librustc/driver/driver.rs", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/bed84898fca9443f97fc3db17b0417c179d25803/src%2Flibrustc%2Fdriver%2Fdriver.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bed84898fca9443f97fc3db17b0417c179d25803/src%2Flibrustc%2Fdriver%2Fdriver.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fdriver%2Fdriver.rs?ref=bed84898fca9443f97fc3db17b0417c179d25803", "patch": "@@ -570,11 +570,12 @@ pub fn build_target_config(sopts: @session::options,\n       abi::Arm => (ast::ty_i32, ast::ty_u32, ast::ty_f64),\n       abi::Mips => (ast::ty_i32, ast::ty_u32, ast::ty_f64)\n     };\n+    let target_triple = sopts.target_triple.clone();\n     let target_strs = match arch {\n-      abi::X86 => x86::get_target_strs(os),\n-      abi::X86_64 => x86_64::get_target_strs(os),\n-      abi::Arm => arm::get_target_strs(os),\n-      abi::Mips => mips::get_target_strs(os)\n+      abi::X86 => x86::get_target_strs(target_triple, os),\n+      abi::X86_64 => x86_64::get_target_strs(target_triple, os),\n+      abi::Arm => arm::get_target_strs(target_triple, os),\n+      abi::Mips => mips::get_target_strs(target_triple, os)\n     };\n     let target_cfg = @session::config {\n         os: os,"}, {"sha": "5b8c6bc883fb58816048478556e8d66da2e39303", "filename": "src/rustllvm/RustWrapper.cpp", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/bed84898fca9443f97fc3db17b0417c179d25803/src%2Frustllvm%2FRustWrapper.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/bed84898fca9443f97fc3db17b0417c179d25803/src%2Frustllvm%2FRustWrapper.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustllvm%2FRustWrapper.cpp?ref=bed84898fca9443f97fc3db17b0417c179d25803", "patch": "@@ -391,19 +391,23 @@ LLVMRustWriteOutputFile(LLVMPassManagerRef PMR,\n     cl::ParseCommandLineOptions(argc, argv);\n   }\n \n+  Triple Trip(Triple::normalize(triple));\n+\n   TargetOptions Options;\n   Options.EnableSegmentedStacks = EnableSegmentedStacks;\n   Options.FixedStackSegmentSize = 2 * 1024 * 1024;  // XXX: This is too big.\n+  Options.FloatABIType =\n+      (Trip.getEnvironment() == Triple::GNUEABIHF) ? FloatABI::Hard :\n+                                                     FloatABI::Default;\n \n   PassManager *PM = unwrap<PassManager>(PMR);\n \n   std::string Err;\n-  std::string Trip(Triple::normalize(triple));\n   std::string FeaturesStr(feature);\n   std::string CPUStr(cpu);\n-  const Target *TheTarget = TargetRegistry::lookupTarget(Trip, Err);\n+  const Target *TheTarget = TargetRegistry::lookupTarget(Trip.getTriple(), Err);\n   TargetMachine *Target =\n-    TheTarget->createTargetMachine(Trip, CPUStr, FeaturesStr,\n+    TheTarget->createTargetMachine(Trip.getTriple(), CPUStr, FeaturesStr,\n            Options, Reloc::PIC_,\n            CodeModel::Default, OptLevel);\n   Target->addAnalysisPasses(*PM);"}]}