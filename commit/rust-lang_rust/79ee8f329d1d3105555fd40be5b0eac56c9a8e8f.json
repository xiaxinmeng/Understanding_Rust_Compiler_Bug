{"sha": "79ee8f329d1d3105555fd40be5b0eac56c9a8e8f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc5ZWU4ZjMyOWQxZDMxMDU1NTVmZDQwYmU1YjBlYWM1NmM5YThlOGY=", "commit": {"author": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2018-11-25T20:41:38Z"}, "committer": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2018-11-25T20:41:38Z"}, "message": "Suggest appropriate place for lifetime when declared after type arguments", "tree": {"sha": "161cff916319e609c529f746aae0735807db7c87", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/161cff916319e609c529f746aae0735807db7c87"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/79ee8f329d1d3105555fd40be5b0eac56c9a8e8f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/79ee8f329d1d3105555fd40be5b0eac56c9a8e8f", "html_url": "https://github.com/rust-lang/rust/commit/79ee8f329d1d3105555fd40be5b0eac56c9a8e8f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/79ee8f329d1d3105555fd40be5b0eac56c9a8e8f/comments", "author": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "committer": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e9bca7a993d740291568c57eeef797b175c591cf", "url": "https://api.github.com/repos/rust-lang/rust/commits/e9bca7a993d740291568c57eeef797b175c591cf", "html_url": "https://github.com/rust-lang/rust/commit/e9bca7a993d740291568c57eeef797b175c591cf"}], "stats": {"total": 110, "additions": 102, "deletions": 8}, "files": [{"sha": "07e13ffc3143b57a3b0db650d9e0be822965e9ef", "filename": "src/libsyntax/parse/parser.rs", "status": "modified", "additions": 35, "deletions": 8, "changes": 43, "blob_url": "https://github.com/rust-lang/rust/blob/79ee8f329d1d3105555fd40be5b0eac56c9a8e8f/src%2Flibsyntax%2Fparse%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/79ee8f329d1d3105555fd40be5b0eac56c9a8e8f/src%2Flibsyntax%2Fparse%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fparser.rs?ref=79ee8f329d1d3105555fd40be5b0eac56c9a8e8f", "patch": "@@ -5178,8 +5178,10 @@ impl<'a> Parser<'a> {\n     /// Parses (possibly empty) list of lifetime and type parameters, possibly including\n     /// trailing comma and erroneous trailing attributes.\n     crate fn parse_generic_params(&mut self) -> PResult<'a, Vec<ast::GenericParam>> {\n+        let mut lifetimes = Vec::new();\n         let mut params = Vec::new();\n-        let mut seen_ty_param = false;\n+        let mut seen_ty_param: Option<Span> = None;\n+        let mut last_comma_span = None;\n         loop {\n             let attrs = self.parse_outer_attributes()?;\n             if self.check_lifetime() {\n@@ -5190,25 +5192,48 @@ impl<'a> Parser<'a> {\n                 } else {\n                     Vec::new()\n                 };\n-                params.push(ast::GenericParam {\n+                lifetimes.push(ast::GenericParam {\n                     ident: lifetime.ident,\n                     id: lifetime.id,\n                     attrs: attrs.into(),\n                     bounds,\n                     kind: ast::GenericParamKind::Lifetime,\n                 });\n-                if seen_ty_param {\n-                    self.span_err(self.prev_span,\n-                        \"lifetime parameters must be declared prior to type parameters\");\n+                if let Some(sp) = seen_ty_param {\n+                    let param_span = self.prev_span;\n+                    let ate_comma = self.eat(&token::Comma);\n+                    let remove_sp = if ate_comma {\n+                        param_span.until(self.span)\n+                    } else {\n+                        last_comma_span.unwrap_or(param_span).to(param_span)\n+                    };\n+                    let mut err = self.struct_span_err(\n+                        self.prev_span,\n+                        \"lifetime parameters must be declared prior to type parameters\",\n+                    );\n+                    if let Ok(snippet) = self.sess.source_map().span_to_snippet(param_span) {\n+                        err.multipart_suggestion(\n+                            \"move the lifetime parameter prior to the first type parameter\",\n+                            vec![\n+                                (remove_sp, String::new()),\n+                                (sp.shrink_to_lo(), format!(\"{}, \", snippet)),\n+                            ],\n+                        );\n+                    }\n+                    err.emit();\n+                    if ate_comma {\n+                        last_comma_span = Some(self.prev_span);\n+                        continue\n+                    }\n                 }\n             } else if self.check_ident() {\n                 // Parse type parameter.\n                 params.push(self.parse_ty_param(attrs)?);\n-                seen_ty_param = true;\n+                seen_ty_param = Some(self.prev_span);\n             } else {\n                 // Check for trailing attributes and stop parsing.\n                 if !attrs.is_empty() {\n-                    let param_kind = if seen_ty_param { \"type\" } else { \"lifetime\" };\n+                    let param_kind = if seen_ty_param.is_some() { \"type\" } else { \"lifetime\" };\n                     self.span_err(attrs[0].span,\n                         &format!(\"trailing attribute after {} parameters\", param_kind));\n                 }\n@@ -5218,8 +5243,10 @@ impl<'a> Parser<'a> {\n             if !self.eat(&token::Comma) {\n                 break\n             }\n+            last_comma_span = Some(self.prev_span);\n         }\n-        Ok(params)\n+        lifetimes.extend(params);  // ensure the correct order of lifetimes and type params\n+        Ok(lifetimes)\n     }\n \n     /// Parse a set of optional generic type parameter declarations. Where"}, {"sha": "622066a94f80a1562486882d570619102f8bfa14", "filename": "src/test/ui/parser/issue-14303-enum.stderr", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/79ee8f329d1d3105555fd40be5b0eac56c9a8e8f/src%2Ftest%2Fui%2Fparser%2Fissue-14303-enum.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/79ee8f329d1d3105555fd40be5b0eac56c9a8e8f/src%2Ftest%2Fui%2Fparser%2Fissue-14303-enum.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fissue-14303-enum.stderr?ref=79ee8f329d1d3105555fd40be5b0eac56c9a8e8f", "patch": "@@ -3,6 +3,10 @@ error: lifetime parameters must be declared prior to type parameters\n    |\n LL | enum X<'a, T, 'b> {\n    |               ^^\n+help: move the lifetime parameter prior to the first type parameter\n+   |\n+LL | enum X<'a, 'b, T> {\n+   |            ^^^ --\n \n error: aborting due to previous error\n "}, {"sha": "630c9cb40de37aa452dbef5c90a3bdf08e891e23", "filename": "src/test/ui/parser/issue-14303-fn-def.stderr", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/79ee8f329d1d3105555fd40be5b0eac56c9a8e8f/src%2Ftest%2Fui%2Fparser%2Fissue-14303-fn-def.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/79ee8f329d1d3105555fd40be5b0eac56c9a8e8f/src%2Ftest%2Fui%2Fparser%2Fissue-14303-fn-def.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fissue-14303-fn-def.stderr?ref=79ee8f329d1d3105555fd40be5b0eac56c9a8e8f", "patch": "@@ -3,6 +3,10 @@ error: lifetime parameters must be declared prior to type parameters\n    |\n LL | fn foo<'a, T, 'b>(x: &'a T) {}\n    |               ^^\n+help: move the lifetime parameter prior to the first type parameter\n+   |\n+LL | fn foo<'a, 'b, T>(x: &'a T) {}\n+   |            ^^^ --\n \n error: aborting due to previous error\n "}, {"sha": "2e3181de902758c3207b98e741716ace89776c76", "filename": "src/test/ui/parser/issue-14303-impl.stderr", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/79ee8f329d1d3105555fd40be5b0eac56c9a8e8f/src%2Ftest%2Fui%2Fparser%2Fissue-14303-impl.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/79ee8f329d1d3105555fd40be5b0eac56c9a8e8f/src%2Ftest%2Fui%2Fparser%2Fissue-14303-impl.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fissue-14303-impl.stderr?ref=79ee8f329d1d3105555fd40be5b0eac56c9a8e8f", "patch": "@@ -3,6 +3,10 @@ error: lifetime parameters must be declared prior to type parameters\n    |\n LL | impl<'a, T, 'b> X {}\n    |             ^^\n+help: move the lifetime parameter prior to the first type parameter\n+   |\n+LL | impl<'a, 'b, T> X {}\n+   |          ^^^ --\n \n error: aborting due to previous error\n "}, {"sha": "c6b33120c18f046094b9501c4140c3871fd4c3cd", "filename": "src/test/ui/parser/issue-14303-struct.stderr", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/79ee8f329d1d3105555fd40be5b0eac56c9a8e8f/src%2Ftest%2Fui%2Fparser%2Fissue-14303-struct.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/79ee8f329d1d3105555fd40be5b0eac56c9a8e8f/src%2Ftest%2Fui%2Fparser%2Fissue-14303-struct.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fissue-14303-struct.stderr?ref=79ee8f329d1d3105555fd40be5b0eac56c9a8e8f", "patch": "@@ -3,6 +3,10 @@ error: lifetime parameters must be declared prior to type parameters\n    |\n LL | struct X<'a, T, 'b> {\n    |                 ^^\n+help: move the lifetime parameter prior to the first type parameter\n+   |\n+LL | struct X<'a, 'b, T> {\n+   |              ^^^ --\n \n error: aborting due to previous error\n "}, {"sha": "6d00f284bbbe741b75bac61292248964a7e4d2db", "filename": "src/test/ui/parser/issue-14303-trait.stderr", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/79ee8f329d1d3105555fd40be5b0eac56c9a8e8f/src%2Ftest%2Fui%2Fparser%2Fissue-14303-trait.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/79ee8f329d1d3105555fd40be5b0eac56c9a8e8f/src%2Ftest%2Fui%2Fparser%2Fissue-14303-trait.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fissue-14303-trait.stderr?ref=79ee8f329d1d3105555fd40be5b0eac56c9a8e8f", "patch": "@@ -3,6 +3,10 @@ error: lifetime parameters must be declared prior to type parameters\n    |\n LL | trait Foo<'a, T, 'b> {}\n    |                  ^^\n+help: move the lifetime parameter prior to the first type parameter\n+   |\n+LL | trait Foo<'a, 'b, T> {}\n+   |               ^^^ --\n \n error: aborting due to previous error\n "}, {"sha": "be6d29d933763a917e48b364ebc807972cee49e5", "filename": "src/test/ui/suggestions/suggest-move-lifetimes.rs", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/79ee8f329d1d3105555fd40be5b0eac56c9a8e8f/src%2Ftest%2Fui%2Fsuggestions%2Fsuggest-move-lifetimes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/79ee8f329d1d3105555fd40be5b0eac56c9a8e8f/src%2Ftest%2Fui%2Fsuggestions%2Fsuggest-move-lifetimes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Fsuggest-move-lifetimes.rs?ref=79ee8f329d1d3105555fd40be5b0eac56c9a8e8f", "patch": "@@ -0,0 +1,15 @@\n+struct A<T, 'a> {\n+    t: &'a T,\n+}\n+\n+struct B<T, 'a, U> {\n+    t: &'a T,\n+    u: U,\n+}\n+\n+struct C<T, U, 'a> {\n+    t: &'a T,\n+    u: U,\n+}\n+\n+fn main() {}"}, {"sha": "57e6780b35984b68747d4e7f31191bc591b2974c", "filename": "src/test/ui/suggestions/suggest-move-lifetimes.stderr", "status": "added", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/79ee8f329d1d3105555fd40be5b0eac56c9a8e8f/src%2Ftest%2Fui%2Fsuggestions%2Fsuggest-move-lifetimes.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/79ee8f329d1d3105555fd40be5b0eac56c9a8e8f/src%2Ftest%2Fui%2Fsuggestions%2Fsuggest-move-lifetimes.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Fsuggest-move-lifetimes.stderr?ref=79ee8f329d1d3105555fd40be5b0eac56c9a8e8f", "patch": "@@ -0,0 +1,32 @@\n+error: lifetime parameters must be declared prior to type parameters\n+  --> $DIR/suggest-move-lifetimes.rs:1:13\n+   |\n+LL | struct A<T, 'a> {\n+   |             ^^\n+help: move the lifetime parameter prior to the first type parameter\n+   |\n+LL | struct A<'a, T> {\n+   |          ^^^ --\n+\n+error: lifetime parameters must be declared prior to type parameters\n+  --> $DIR/suggest-move-lifetimes.rs:5:15\n+   |\n+LL | struct B<T, 'a, U> {\n+   |               ^\n+help: move the lifetime parameter prior to the first type parameter\n+   |\n+LL | struct B<'a, T, U> {\n+   |          ^^^   --\n+\n+error: lifetime parameters must be declared prior to type parameters\n+  --> $DIR/suggest-move-lifetimes.rs:10:16\n+   |\n+LL | struct C<T, U, 'a> {\n+   |                ^^\n+help: move the lifetime parameter prior to the first type parameter\n+   |\n+LL | struct C<T, 'a, U> {\n+   |             ^^^ --\n+\n+error: aborting due to 3 previous errors\n+"}]}