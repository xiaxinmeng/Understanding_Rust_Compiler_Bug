{"sha": "7b81cc09c14920f3a39362a22ed3a747eb2d8527", "node_id": "MDY6Q29tbWl0NzI0NzEyOjdiODFjYzA5YzE0OTIwZjNhMzkzNjJhMjJlZDNhNzQ3ZWIyZDg1Mjc=", "commit": {"author": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2014-02-06T00:09:59Z"}, "committer": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2014-02-06T02:47:49Z"}, "message": "Make a double-write UDP test more robust\n\nI have a hunch this just deadlocked the windows bots. Due to UDP being a lossy\nprotocol, I don't think we can guarantee that the server can receive both\npackets, so just listen for one of them.", "tree": {"sha": "a36c42ed600512127f616133cd9e8133cba3fdd9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a36c42ed600512127f616133cd9e8133cba3fdd9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7b81cc09c14920f3a39362a22ed3a747eb2d8527", "comment_count": 9, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7b81cc09c14920f3a39362a22ed3a747eb2d8527", "html_url": "https://github.com/rust-lang/rust/commit/7b81cc09c14920f3a39362a22ed3a747eb2d8527", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7b81cc09c14920f3a39362a22ed3a747eb2d8527/comments", "author": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6aad3bf944da209d1852c51144ba584de400a10c", "url": "https://api.github.com/repos/rust-lang/rust/commits/6aad3bf944da209d1852c51144ba584de400a10c", "html_url": "https://github.com/rust-lang/rust/commit/6aad3bf944da209d1852c51144ba584de400a10c"}], "stats": {"total": 17, "additions": 10, "deletions": 7}, "files": [{"sha": "ae99101e17963196dfc91629c7f64410b8c8c378", "filename": "src/libstd/io/net/udp.rs", "status": "modified", "additions": 10, "deletions": 7, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/7b81cc09c14920f3a39362a22ed3a747eb2d8527/src%2Flibstd%2Fio%2Fnet%2Fudp.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7b81cc09c14920f3a39362a22ed3a747eb2d8527/src%2Flibstd%2Fio%2Fnet%2Fudp.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fio%2Fnet%2Fudp.rs?ref=7b81cc09c14920f3a39362a22ed3a747eb2d8527", "patch": "@@ -335,17 +335,18 @@ mod test {\n         let sock2 = UdpSocket::bind(addr2).unwrap();\n \n         let (p, c) = SharedChan::new();\n+        let (serv_port, serv_chan) = Chan::new();\n \n         spawn(proc() {\n             let mut sock2 = sock2;\n             let mut buf = [0, 1];\n \n-            for _ in p.iter() {\n-                match sock2.recvfrom(buf) {\n-                    Ok(..) => {}\n-                    Err(e) => fail!(\"failed receive: {}\", e),\n-                }\n+            p.recv();\n+            match sock2.recvfrom(buf) {\n+                Ok(..) => {}\n+                Err(e) => fail!(\"failed receive: {}\", e),\n             }\n+            serv_chan.send(());\n         });\n \n         let sock3 = sock1.clone();\n@@ -355,16 +356,18 @@ mod test {\n         spawn(proc() {\n             let mut sock3 = sock3;\n             match sock3.sendto([1], addr2) {\n-                Ok(..) => c2.send(()),\n+                Ok(..) => { let _ = c2.try_send(()); }\n                 Err(..) => {}\n             }\n             done.send(());\n         });\n         match sock1.sendto([2], addr2) {\n-            Ok(..) => c.send(()),\n+            Ok(..) => { let _ = c.try_send(()); }\n             Err(..) => {}\n         }\n+        drop(c);\n \n         p.recv();\n+        serv_port.recv();\n     })\n }"}]}