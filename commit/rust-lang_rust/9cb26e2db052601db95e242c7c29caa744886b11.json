{"sha": "9cb26e2db052601db95e242c7c29caa744886b11", "node_id": "MDY6Q29tbWl0NzI0NzEyOjljYjI2ZTJkYjA1MjYwMWRiOTVlMjQyYzdjMjljYWE3NDQ4ODZiMTE=", "commit": {"author": {"name": "jbranchaud", "email": "jbranchaud@gmail.com", "date": "2014-12-06T05:50:13Z"}, "committer": {"name": "jbranchaud", "email": "jbranchaud@gmail.com", "date": "2014-12-06T05:50:13Z"}, "message": "Add a doctest for BTreeMap's iter method.", "tree": {"sha": "9fb00cfc57da5f2a55b90694a242066fcdfe08a7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9fb00cfc57da5f2a55b90694a242066fcdfe08a7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9cb26e2db052601db95e242c7c29caa744886b11", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9cb26e2db052601db95e242c7c29caa744886b11", "html_url": "https://github.com/rust-lang/rust/commit/9cb26e2db052601db95e242c7c29caa744886b11", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9cb26e2db052601db95e242c7c29caa744886b11/comments", "author": {"login": "jbranchaud", "id": 694063, "node_id": "MDQ6VXNlcjY5NDA2Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/694063?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jbranchaud", "html_url": "https://github.com/jbranchaud", "followers_url": "https://api.github.com/users/jbranchaud/followers", "following_url": "https://api.github.com/users/jbranchaud/following{/other_user}", "gists_url": "https://api.github.com/users/jbranchaud/gists{/gist_id}", "starred_url": "https://api.github.com/users/jbranchaud/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jbranchaud/subscriptions", "organizations_url": "https://api.github.com/users/jbranchaud/orgs", "repos_url": "https://api.github.com/users/jbranchaud/repos", "events_url": "https://api.github.com/users/jbranchaud/events{/privacy}", "received_events_url": "https://api.github.com/users/jbranchaud/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jbranchaud", "id": 694063, "node_id": "MDQ6VXNlcjY5NDA2Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/694063?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jbranchaud", "html_url": "https://github.com/jbranchaud", "followers_url": "https://api.github.com/users/jbranchaud/followers", "following_url": "https://api.github.com/users/jbranchaud/following{/other_user}", "gists_url": "https://api.github.com/users/jbranchaud/gists{/gist_id}", "starred_url": "https://api.github.com/users/jbranchaud/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jbranchaud/subscriptions", "organizations_url": "https://api.github.com/users/jbranchaud/orgs", "repos_url": "https://api.github.com/users/jbranchaud/repos", "events_url": "https://api.github.com/users/jbranchaud/events{/privacy}", "received_events_url": "https://api.github.com/users/jbranchaud/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6f4c11be3b9706d1ba0e1b74b89de1478410a56f", "url": "https://api.github.com/repos/rust-lang/rust/commits/6f4c11be3b9706d1ba0e1b74b89de1478410a56f", "html_url": "https://github.com/rust-lang/rust/commit/6f4c11be3b9706d1ba0e1b74b89de1478410a56f"}], "stats": {"total": 18, "additions": 18, "deletions": 0}, "files": [{"sha": "f6d196d2f582d258defefd1536f07c7dfa9e4287", "filename": "src/libcollections/btree/map.rs", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/9cb26e2db052601db95e242c7c29caa744886b11/src%2Flibcollections%2Fbtree%2Fmap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9cb26e2db052601db95e242c7c29caa744886b11/src%2Flibcollections%2Fbtree%2Fmap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcollections%2Fbtree%2Fmap.rs?ref=9cb26e2db052601db95e242c7c29caa744886b11", "patch": "@@ -1026,6 +1026,24 @@ impl<'a, K: Ord, V> OccupiedEntry<'a, K, V> {\n \n impl<K, V> BTreeMap<K, V> {\n     /// Gets an iterator over the entries of the map.\n+    ///\n+    /// # Example\n+    ///\n+    /// ```\n+    /// use std::collections::BTreeMap;\n+    ///\n+    /// let mut map = BTreeMap::new();\n+    /// map.insert(1u, \"a\");\n+    /// map.insert(2u, \"b\");\n+    /// map.insert(3u, \"c\");\n+    ///\n+    /// for (key, value) in map.iter() {\n+    ///     println!(\"{}: {}\", key, value);\n+    /// }\n+    ///\n+    /// let (first_key, first_value) = map.iter().next().unwrap();\n+    /// assert_eq!((*first_key, *first_value), (1u, \"a\"));\n+    /// ```\n     #[unstable = \"matches collection reform specification, waiting for dust to settle\"]\n     pub fn iter<'a>(&'a self) -> Entries<'a, K, V> {\n         let len = self.len();"}]}