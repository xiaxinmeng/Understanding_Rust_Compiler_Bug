{"sha": "9340fd5ce0d7bd0f1bbfbda73944920bcc1364eb", "node_id": "MDY6Q29tbWl0NzI0NzEyOjkzNDBmZDVjZTBkN2JkMGYxYmJmYmRhNzM5NDQ5MjBiY2MxMzY0ZWI=", "commit": {"author": {"name": "Michael Sullivan", "email": "sully@msully.net", "date": "2013-06-29T00:47:44Z"}, "committer": {"name": "Michael Sullivan", "email": "sully@msully.net", "date": "2013-06-29T01:09:02Z"}, "message": "Add tests for some default method things.", "tree": {"sha": "282a1cdc6e5a5d2358ba962763f1260d51150f4a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/282a1cdc6e5a5d2358ba962763f1260d51150f4a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9340fd5ce0d7bd0f1bbfbda73944920bcc1364eb", "comment_count": 5, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9340fd5ce0d7bd0f1bbfbda73944920bcc1364eb", "html_url": "https://github.com/rust-lang/rust/commit/9340fd5ce0d7bd0f1bbfbda73944920bcc1364eb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9340fd5ce0d7bd0f1bbfbda73944920bcc1364eb/comments", "author": {"login": "msullivan", "id": 340349, "node_id": "MDQ6VXNlcjM0MDM0OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/340349?v=4", "gravatar_id": "", "url": "https://api.github.com/users/msullivan", "html_url": "https://github.com/msullivan", "followers_url": "https://api.github.com/users/msullivan/followers", "following_url": "https://api.github.com/users/msullivan/following{/other_user}", "gists_url": "https://api.github.com/users/msullivan/gists{/gist_id}", "starred_url": "https://api.github.com/users/msullivan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/msullivan/subscriptions", "organizations_url": "https://api.github.com/users/msullivan/orgs", "repos_url": "https://api.github.com/users/msullivan/repos", "events_url": "https://api.github.com/users/msullivan/events{/privacy}", "received_events_url": "https://api.github.com/users/msullivan/received_events", "type": "User", "site_admin": false}, "committer": {"login": "msullivan", "id": 340349, "node_id": "MDQ6VXNlcjM0MDM0OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/340349?v=4", "gravatar_id": "", "url": "https://api.github.com/users/msullivan", "html_url": "https://github.com/msullivan", "followers_url": "https://api.github.com/users/msullivan/followers", "following_url": "https://api.github.com/users/msullivan/following{/other_user}", "gists_url": "https://api.github.com/users/msullivan/gists{/gist_id}", "starred_url": "https://api.github.com/users/msullivan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/msullivan/subscriptions", "organizations_url": "https://api.github.com/users/msullivan/orgs", "repos_url": "https://api.github.com/users/msullivan/repos", "events_url": "https://api.github.com/users/msullivan/events{/privacy}", "received_events_url": "https://api.github.com/users/msullivan/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c05165bf93e05a8473461716579c47355bd1659d", "url": "https://api.github.com/repos/rust-lang/rust/commits/c05165bf93e05a8473461716579c47355bd1659d", "html_url": "https://github.com/rust-lang/rust/commit/c05165bf93e05a8473461716579c47355bd1659d"}], "stats": {"total": 110, "additions": 110, "deletions": 0}, "files": [{"sha": "00c415a860d4fe385913c33d09b6be67768aed7b", "filename": "src/test/compile-fail/impl-bounds-checking.rs", "status": "added", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/9340fd5ce0d7bd0f1bbfbda73944920bcc1364eb/src%2Ftest%2Fcompile-fail%2Fimpl-bounds-checking.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9340fd5ce0d7bd0f1bbfbda73944920bcc1364eb/src%2Ftest%2Fcompile-fail%2Fimpl-bounds-checking.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fimpl-bounds-checking.rs?ref=9340fd5ce0d7bd0f1bbfbda73944920bcc1364eb", "patch": "@@ -0,0 +1,24 @@\n+// Copyright 2013 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+pub trait Clone2 {\n+    fn clone(&self) -> Self;\n+}\n+\n+\n+trait Getter<T: Clone2> {\n+    fn get(&self) -> T;\n+}\n+\n+impl Getter<int> for int { //~ ERROR failed to find an implementation of trait Clone2 for int\n+    fn get(&self) -> int { *self }\n+}\n+\n+fn main() { }"}, {"sha": "4fc5587e7f36d28da867b3274a5da33f2320a200", "filename": "src/test/run-pass/bug-7183-generics.rs", "status": "added", "additions": 45, "deletions": 0, "changes": 45, "blob_url": "https://github.com/rust-lang/rust/blob/9340fd5ce0d7bd0f1bbfbda73944920bcc1364eb/src%2Ftest%2Frun-pass%2Fbug-7183-generics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9340fd5ce0d7bd0f1bbfbda73944920bcc1364eb/src%2Ftest%2Frun-pass%2Fbug-7183-generics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fbug-7183-generics.rs?ref=9340fd5ce0d7bd0f1bbfbda73944920bcc1364eb", "patch": "@@ -0,0 +1,45 @@\n+// Copyright 2013 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#[allow(default_methods)]\n+trait Speak {\n+    fn say(&self, s:&str) -> ~str;\n+    fn hi(&self) -> ~str { hello(self) }\n+}\n+\n+fn hello<S:Speak>(s:&S) -> ~str{\n+    s.say(\"hello\")\n+}\n+\n+impl Speak for int {\n+    fn say(&self, s:&str) -> ~str {\n+        fmt!(\"%s: %d\", s, *self)\n+    }\n+}\n+\n+impl<T: Speak> Speak for Option<T> {\n+    fn say(&self, s:&str) -> ~str {\n+        match *self {\n+            None => fmt!(\"%s - none\", s),\n+            Some(ref x) => { ~\"something!\" + x.say(s) }\n+        }\n+    }\n+}\n+\n+\n+fn main() {\n+    assert_eq!(3.hi(), ~\"hello: 3\");\n+    assert_eq!(Some(Some(3)).hi(), ~\"something!something!hello: 3\");\n+    assert_eq!(None::<int>.hi(), ~\"hello - none\");\n+\n+    // These fail because of a bug in monomorphization's ID generation.\n+    //assert_eq!(Some(None::<int>).hi(), ~\"something!hello - none\");\n+    //assert_eq!(Some(3).hi(), ~\"something!hello: 3\");\n+}"}, {"sha": "b3ddbbb9dc112a542ad7625677b2cd7f7d3984c3", "filename": "src/test/run-pass/trait-with-bounds-default.rs", "status": "added", "additions": 41, "deletions": 0, "changes": 41, "blob_url": "https://github.com/rust-lang/rust/blob/9340fd5ce0d7bd0f1bbfbda73944920bcc1364eb/src%2Ftest%2Frun-pass%2Ftrait-with-bounds-default.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9340fd5ce0d7bd0f1bbfbda73944920bcc1364eb/src%2Ftest%2Frun-pass%2Ftrait-with-bounds-default.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Ftrait-with-bounds-default.rs?ref=9340fd5ce0d7bd0f1bbfbda73944920bcc1364eb", "patch": "@@ -0,0 +1,41 @@\n+// Copyright 2013 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+pub trait Clone2 {\n+    /// Returns a copy of the value. The contents of owned pointers\n+    /// are copied to maintain uniqueness, while the contents of\n+    /// managed pointers are not copied.\n+    fn clone(&self) -> Self;\n+}\n+\n+#[allow(default_methods)]\n+trait Getter<T: Clone> {\n+    fn do_get(&self) -> T;\n+\n+    fn do_get2(&self) -> (T, T) {\n+        let x = self.do_get();\n+        (x.clone(), x.clone())\n+    }\n+\n+}\n+\n+impl Getter<int> for int {\n+    fn do_get(&self) -> int { *self }\n+}\n+\n+impl<T: Clone> Getter<T> for Option<T> {\n+    fn do_get(&self) -> T { self.get_ref().clone() }\n+}\n+\n+\n+fn main() {\n+    assert_eq!(3.do_get2(), (3, 3));\n+    assert_eq!(Some(~\"hi\").do_get2(), (~\"hi\", ~\"hi\"));\n+}"}]}