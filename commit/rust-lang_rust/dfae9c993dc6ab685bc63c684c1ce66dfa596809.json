{"sha": "dfae9c993dc6ab685bc63c684c1ce66dfa596809", "node_id": "C_kwDOAAsO6NoAKGRmYWU5Yzk5M2RjNmFiNjg1YmM2M2M2ODRjMWNlNjZkZmE1OTY4MDk", "commit": {"author": {"name": "John K\u00e5re Alsaker", "email": "john.kare.alsaker@gmail.com", "date": "2023-03-20T02:49:19Z"}, "committer": {"name": "John K\u00e5re Alsaker", "email": "john.kare.alsaker@gmail.com", "date": "2023-03-25T01:59:54Z"}, "message": "Remove `DebugArg`", "tree": {"sha": "6ae8275986328256128e42890bb817affbdcc571", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6ae8275986328256128e42890bb817affbdcc571"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/dfae9c993dc6ab685bc63c684c1ce66dfa596809", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/dfae9c993dc6ab685bc63c684c1ce66dfa596809", "html_url": "https://github.com/rust-lang/rust/commit/dfae9c993dc6ab685bc63c684c1ce66dfa596809", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/dfae9c993dc6ab685bc63c684c1ce66dfa596809/comments", "author": {"login": "Zoxc", "id": 25784, "node_id": "MDQ6VXNlcjI1Nzg0", "avatar_url": "https://avatars.githubusercontent.com/u/25784?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Zoxc", "html_url": "https://github.com/Zoxc", "followers_url": "https://api.github.com/users/Zoxc/followers", "following_url": "https://api.github.com/users/Zoxc/following{/other_user}", "gists_url": "https://api.github.com/users/Zoxc/gists{/gist_id}", "starred_url": "https://api.github.com/users/Zoxc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Zoxc/subscriptions", "organizations_url": "https://api.github.com/users/Zoxc/orgs", "repos_url": "https://api.github.com/users/Zoxc/repos", "events_url": "https://api.github.com/users/Zoxc/events{/privacy}", "received_events_url": "https://api.github.com/users/Zoxc/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Zoxc", "id": 25784, "node_id": "MDQ6VXNlcjI1Nzg0", "avatar_url": "https://avatars.githubusercontent.com/u/25784?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Zoxc", "html_url": "https://github.com/Zoxc", "followers_url": "https://api.github.com/users/Zoxc/followers", "following_url": "https://api.github.com/users/Zoxc/following{/other_user}", "gists_url": "https://api.github.com/users/Zoxc/gists{/gist_id}", "starred_url": "https://api.github.com/users/Zoxc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Zoxc/subscriptions", "organizations_url": "https://api.github.com/users/Zoxc/orgs", "repos_url": "https://api.github.com/users/Zoxc/repos", "events_url": "https://api.github.com/users/Zoxc/events{/privacy}", "received_events_url": "https://api.github.com/users/Zoxc/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8f294066b32c13fb9865aecfc1ce9cd30e956555", "url": "https://api.github.com/repos/rust-lang/rust/commits/8f294066b32c13fb9865aecfc1ce9cd30e956555", "html_url": "https://github.com/rust-lang/rust/commit/8f294066b32c13fb9865aecfc1ce9cd30e956555"}], "stats": {"total": 48, "additions": 5, "deletions": 43}, "files": [{"sha": "8465696d301af90c81af4399d98dbf41721a259f", "filename": "compiler/rustc_query_system/src/query/plumbing.rs", "status": "modified", "additions": 5, "deletions": 43, "changes": 48, "blob_url": "https://github.com/rust-lang/rust/blob/dfae9c993dc6ab685bc63c684c1ce66dfa596809/compiler%2Frustc_query_system%2Fsrc%2Fquery%2Fplumbing.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dfae9c993dc6ab685bc63c684c1ce66dfa596809/compiler%2Frustc_query_system%2Fsrc%2Fquery%2Fplumbing.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_query_system%2Fsrc%2Fquery%2Fplumbing.rs?ref=dfae9c993dc6ab685bc63c684c1ce66dfa596809", "patch": "@@ -651,7 +651,7 @@ pub(crate) fn incremental_verify_ich<Tcx, V: Debug>(\n     let old_hash = dep_graph_data.prev_fingerprint_of(prev_index);\n \n     if new_hash != old_hash {\n-        incremental_verify_ich_failed::<Tcx>(prev_index, DebugArg::from(&result));\n+        incremental_verify_ich_failed::<Tcx>(prev_index, result);\n     }\n }\n \n@@ -669,50 +669,12 @@ where\n     })\n }\n \n-// This DebugArg business is largely a mirror of std::fmt::ArgumentV1, which is\n-// currently not exposed publicly.\n-//\n-// The PR which added this attempted to use `&dyn Debug` instead, but that\n-// showed statistically significant worse compiler performance. It's not\n-// actually clear what the cause there was -- the code should be cold. If this\n-// can be replaced with `&dyn Debug` with on perf impact, then it probably\n-// should be.\n-extern \"C\" {\n-    type Opaque;\n-}\n-\n-struct DebugArg<'a> {\n-    value: &'a Opaque,\n-    fmt: fn(&Opaque, &mut std::fmt::Formatter<'_>) -> std::fmt::Result,\n-}\n-\n-impl<'a, T> From<&'a T> for DebugArg<'a>\n-where\n-    T: std::fmt::Debug,\n-{\n-    fn from(value: &'a T) -> DebugArg<'a> {\n-        DebugArg {\n-            value: unsafe { std::mem::transmute(value) },\n-            fmt: unsafe {\n-                std::mem::transmute(<T as std::fmt::Debug>::fmt as fn(_, _) -> std::fmt::Result)\n-            },\n-        }\n-    }\n-}\n-\n-impl std::fmt::Debug for DebugArg<'_> {\n-    fn fmt(&self, f: &mut std::fmt::Formatter<'_>) -> std::fmt::Result {\n-        (self.fmt)(self.value, f)\n-    }\n-}\n-\n-// Note that this is marked #[cold] and intentionally takes the equivalent of\n-// `dyn Debug` for its arguments, as we want to avoid generating a bunch of\n-// different implementations for LLVM to chew on (and filling up the final\n-// binary, too).\n+// Note that this is marked #[cold] and intentionally takes `dyn Debug` for `result`,\n+// as we want to avoid generating a bunch of different implementations for LLVM to\n+// chew on (and filling up the final binary, too).\n #[cold]\n #[inline(never)]\n-fn incremental_verify_ich_failed<Tcx>(prev_index: SerializedDepNodeIndex, result: DebugArg<'_>)\n+fn incremental_verify_ich_failed<Tcx>(prev_index: SerializedDepNodeIndex, result: &dyn Debug)\n where\n     Tcx: DepContext,\n {"}]}