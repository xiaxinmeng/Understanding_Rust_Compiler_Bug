{"sha": "1630c7912f986f788b808160a004baea4180b64f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE2MzBjNzkxMmY5ODZmNzg4YjgwODE2MGEwMDRiYWVhNDE4MGI2NGY=", "commit": {"author": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2015-08-21T18:44:52Z"}, "committer": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2015-08-21T18:44:52Z"}, "message": "rename `best_upper_bound` to `postdom_upper_bound`", "tree": {"sha": "b8cb233f753d851a0362a4e44a50377a451e13ed", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b8cb233f753d851a0362a4e44a50377a451e13ed"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1630c7912f986f788b808160a004baea4180b64f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1630c7912f986f788b808160a004baea4180b64f", "html_url": "https://github.com/rust-lang/rust/commit/1630c7912f986f788b808160a004baea4180b64f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1630c7912f986f788b808160a004baea4180b64f/comments", "author": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a54b91ff5bb1672ba0dc83a5ead0e599723714f6", "url": "https://api.github.com/repos/rust-lang/rust/commits/a54b91ff5bb1672ba0dc83a5ead0e599723714f6", "html_url": "https://github.com/rust-lang/rust/commit/a54b91ff5bb1672ba0dc83a5ead0e599723714f6"}], "stats": {"total": 18, "additions": 9, "deletions": 9}, "files": [{"sha": "33aec3e1f83a26f2e7f53e7a04291c3e9ce827fd", "filename": "src/librustc/middle/free_region.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1630c7912f986f788b808160a004baea4180b64f/src%2Flibrustc%2Fmiddle%2Ffree_region.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1630c7912f986f788b808160a004baea4180b64f/src%2Flibrustc%2Fmiddle%2Ffree_region.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ffree_region.rs?ref=1630c7912f986f788b808160a004baea4180b64f", "patch": "@@ -104,7 +104,7 @@ impl FreeRegionMap {\n         let r_a = ty::ReFree(fr_a);\n         let r_b = ty::ReFree(fr_b);\n         let result = if fr_a == fr_b { r_a } else {\n-            match self.relation.best_upper_bound(&r_a, &r_b) {\n+            match self.relation.postdom_upper_bound(&r_a, &r_b) {\n                 None => ty::ReStatic,\n                 Some(r) => *r,\n             }"}, {"sha": "374c0a93a74c46718675ec8cae8099590b4f48ac", "filename": "src/librustc_data_structures/transitive_relation.rs", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/1630c7912f986f788b808160a004baea4180b64f/src%2Flibrustc_data_structures%2Ftransitive_relation.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1630c7912f986f788b808160a004baea4180b64f/src%2Flibrustc_data_structures%2Ftransitive_relation.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_data_structures%2Ftransitive_relation.rs?ref=1630c7912f986f788b808160a004baea4180b64f", "patch": "@@ -107,7 +107,7 @@ impl<T:Debug+PartialEq> TransitiveRelation<T> {\n     ///\n     /// Examples are probably clearer than any prose I could write\n     /// (there are corresponding tests below, btw). In each case,\n-    /// the query is `best_upper_bound(a, b)`:\n+    /// the query is `postdom_upper_bound(a, b)`:\n     ///\n     /// ```\n     /// // returns Some(x), which is also LUB\n@@ -127,7 +127,7 @@ impl<T:Debug+PartialEq> TransitiveRelation<T> {\n     /// a -> a1\n     /// b -> b1\n     /// ```\n-    pub fn best_upper_bound(&self, a: &T, b: &T) -> Option<&T> {\n+    pub fn postdom_upper_bound(&self, a: &T, b: &T) -> Option<&T> {\n         let mut mubs = self.minimal_upper_bounds(a, b);\n         loop {\n             match mubs.len() {\n@@ -422,7 +422,7 @@ fn mubs_best_choice_scc() {\n }\n \n #[test]\n-fn bub_crisscross() {\n+fn pdub_crisscross() {\n     // diagonal edges run left-to-right\n     // a -> a1 -> x\n     //   \\/       ^\n@@ -438,11 +438,11 @@ fn bub_crisscross() {\n     relation.add(\"b1\", \"x\");\n \n     assert_eq!(relation.minimal_upper_bounds(&\"a\", &\"b\"), vec![&\"a1\", &\"b1\"]);\n-    assert_eq!(relation.best_upper_bound(&\"a\", &\"b\"), Some(&\"x\"));\n+    assert_eq!(relation.postdom_upper_bound(&\"a\", &\"b\"), Some(&\"x\"));\n }\n \n #[test]\n-fn bub_crisscross_more() {\n+fn pdub_crisscross_more() {\n     // diagonal edges run left-to-right\n     // a -> a1 -> a2 -> a3 -> x\n     //   \\/    \\/             ^\n@@ -467,11 +467,11 @@ fn bub_crisscross_more() {\n \n     assert_eq!(relation.minimal_upper_bounds(&\"a\", &\"b\"), vec![&\"a1\", &\"b1\"]);\n     assert_eq!(relation.minimal_upper_bounds(&\"a1\", &\"b1\"), vec![&\"a2\", &\"b2\"]);\n-    assert_eq!(relation.best_upper_bound(&\"a\", &\"b\"), Some(&\"x\"));\n+    assert_eq!(relation.postdom_upper_bound(&\"a\", &\"b\"), Some(&\"x\"));\n }\n \n #[test]\n-fn bub_lub() {\n+fn pdub_lub() {\n     // a -> a1 -> x\n     //            ^\n     //            |\n@@ -484,7 +484,7 @@ fn bub_lub() {\n     relation.add(\"b1\", \"x\");\n \n     assert_eq!(relation.minimal_upper_bounds(&\"a\", &\"b\"), vec![&\"x\"]);\n-    assert_eq!(relation.best_upper_bound(&\"a\", &\"b\"), Some(&\"x\"));\n+    assert_eq!(relation.postdom_upper_bound(&\"a\", &\"b\"), Some(&\"x\"));\n }\n \n #[test]"}]}