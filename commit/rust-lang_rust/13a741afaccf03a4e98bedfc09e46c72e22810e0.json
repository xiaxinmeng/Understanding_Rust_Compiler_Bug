{"sha": "13a741afaccf03a4e98bedfc09e46c72e22810e0", "node_id": "C_kwDOAAsO6NoAKDEzYTc0MWFmYWNjZjAzYTRlOThiZWRmYzA5ZTQ2YzcyZTIyODEwZTA", "commit": {"author": {"name": "nx2k3", "email": "nx2k3@duck.com", "date": "2023-02-26T16:24:08Z"}, "committer": {"name": "nx2k3", "email": "nx2k3@duck.com", "date": "2023-02-26T16:24:08Z"}, "message": "fix some comments", "tree": {"sha": "48adf5749b67382e6d3562e826d74da94df3cde2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/48adf5749b67382e6d3562e826d74da94df3cde2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/13a741afaccf03a4e98bedfc09e46c72e22810e0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/13a741afaccf03a4e98bedfc09e46c72e22810e0", "html_url": "https://github.com/rust-lang/rust/commit/13a741afaccf03a4e98bedfc09e46c72e22810e0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/13a741afaccf03a4e98bedfc09e46c72e22810e0/comments", "author": {"login": "nx2k3", "id": 71603665, "node_id": "MDQ6VXNlcjcxNjAzNjY1", "avatar_url": "https://avatars.githubusercontent.com/u/71603665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nx2k3", "html_url": "https://github.com/nx2k3", "followers_url": "https://api.github.com/users/nx2k3/followers", "following_url": "https://api.github.com/users/nx2k3/following{/other_user}", "gists_url": "https://api.github.com/users/nx2k3/gists{/gist_id}", "starred_url": "https://api.github.com/users/nx2k3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nx2k3/subscriptions", "organizations_url": "https://api.github.com/users/nx2k3/orgs", "repos_url": "https://api.github.com/users/nx2k3/repos", "events_url": "https://api.github.com/users/nx2k3/events{/privacy}", "received_events_url": "https://api.github.com/users/nx2k3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nx2k3", "id": 71603665, "node_id": "MDQ6VXNlcjcxNjAzNjY1", "avatar_url": "https://avatars.githubusercontent.com/u/71603665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nx2k3", "html_url": "https://github.com/nx2k3", "followers_url": "https://api.github.com/users/nx2k3/followers", "following_url": "https://api.github.com/users/nx2k3/following{/other_user}", "gists_url": "https://api.github.com/users/nx2k3/gists{/gist_id}", "starred_url": "https://api.github.com/users/nx2k3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nx2k3/subscriptions", "organizations_url": "https://api.github.com/users/nx2k3/orgs", "repos_url": "https://api.github.com/users/nx2k3/repos", "events_url": "https://api.github.com/users/nx2k3/events{/privacy}", "received_events_url": "https://api.github.com/users/nx2k3/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "46ea12a499aecd655a5c954431466db0a66e8ec9", "url": "https://api.github.com/repos/rust-lang/rust/commits/46ea12a499aecd655a5c954431466db0a66e8ec9", "html_url": "https://github.com/rust-lang/rust/commit/46ea12a499aecd655a5c954431466db0a66e8ec9"}], "stats": {"total": 12, "additions": 5, "deletions": 7}, "files": [{"sha": "134120532f87a400833937e172ecc6350a3f534b", "filename": "compiler/rustc_parse/src/parser/diagnostics.rs", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/13a741afaccf03a4e98bedfc09e46c72e22810e0/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/13a741afaccf03a4e98bedfc09e46c72e22810e0/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fdiagnostics.rs?ref=13a741afaccf03a4e98bedfc09e46c72e22810e0", "patch": "@@ -165,8 +165,6 @@ enum IsStandalone {\n #[derive(Debug, Copy, Clone, PartialEq, Eq)]\n enum IncOrDec {\n     Inc,\n-    // FIXME: `i--` recovery isn't implemented yet\n-    // #[allow(dead_code)]\n     Dec,\n }\n \n@@ -1331,7 +1329,7 @@ impl<'a> Parser<'a> {\n \n         Ok(())\n     }\n-    #[allow(dead_code)]\n+\n     pub(super) fn recover_from_prefix_increment(\n         &mut self,\n         operand_expr: P<Expr>,\n@@ -1342,7 +1340,7 @@ impl<'a> Parser<'a> {\n         let kind = IncDecRecovery { standalone, op: IncOrDec::Inc, fixity: UnaryFixity::Pre };\n         self.recover_from_inc_dec(operand_expr, kind, op_span)\n     }\n-    #[allow(dead_code)]\n+\n     pub(super) fn recover_from_postfix_increment(\n         &mut self,\n         operand_expr: P<Expr>,"}, {"sha": "a14f576eedce6b52affac554e1cd8af7d58390be", "filename": "compiler/rustc_parse/src/parser/expr.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/13a741afaccf03a4e98bedfc09e46c72e22810e0/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/13a741afaccf03a4e98bedfc09e46c72e22810e0/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fexpr.rs?ref=13a741afaccf03a4e98bedfc09e46c72e22810e0", "patch": "@@ -286,7 +286,7 @@ impl<'a> Parser<'a> {\n                 && self.prev_token.span.between(self.token.span).is_empty()\n             {\n                 let op_span = self.prev_token.span.to(self.token.span);\n-                // Eat the second `+`\n+                // Eat the second `-`\n                 self.bump();\n                 lhs = self.recover_from_postfix_decrement(lhs, op_span, starts_stmt)?;\n                 continue;\n@@ -602,14 +602,14 @@ impl<'a> Parser<'a> {\n                 let operand_expr = this.parse_dot_or_call_expr(Default::default())?;\n                 this.recover_from_prefix_increment(operand_expr, pre_span, starts_stmt)\n             }\n-            // Recover from `++x`:\n+            // Recover from `--x`:\n             token::BinOp(token::Minus)\n                 if this.look_ahead(1, |t| *t == token::BinOp(token::Minus)) =>\n             {\n                 let starts_stmt = this.prev_token == token::Semi\n                     || this.prev_token == token::CloseDelim(Delimiter::Brace);\n                 let pre_span = this.token.span.to(this.look_ahead(1, |t| t.span));\n-                // Eat both `+`s.\n+                // Eat both `-`s.\n                 this.bump();\n                 this.bump();\n "}]}