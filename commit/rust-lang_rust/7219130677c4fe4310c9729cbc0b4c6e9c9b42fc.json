{"sha": "7219130677c4fe4310c9729cbc0b4c6e9c9b42fc", "node_id": "MDY6Q29tbWl0NzI0NzEyOjcyMTkxMzA2NzdjNGZlNDMxMGM5NzI5Y2JjMGI0YzZlOWM5YjQyZmM=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2018-08-26T20:10:43Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2018-08-26T20:10:43Z"}, "message": "Auto merge of #53717 - GuillaumeGomez:rollup, r=GuillaumeGomez\n\nRollup of 5 pull requests\n\nSuccessful merges:\n\n - #53043 (Improve unstable message display)\n - #53428 (libtest terse format: show how far in we are)\n - #53626 (Automatically expand a section even after page load)\n - #53651 (Add struct keyword doc)\n - #53706 (rustdoc: Fix gap on section anchor symbol when hovering.)\n\nFailed merges:\n\n - #53472 (Use FxHash{Map,Set} instead of the default Hash{Map,Set} everywhere in rustc.)\n\nr? @ghost", "tree": {"sha": "7c8c16f550330eacb35373dba2da56a0754e1f88", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7c8c16f550330eacb35373dba2da56a0754e1f88"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7219130677c4fe4310c9729cbc0b4c6e9c9b42fc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7219130677c4fe4310c9729cbc0b4c6e9c9b42fc", "html_url": "https://github.com/rust-lang/rust/commit/7219130677c4fe4310c9729cbc0b4c6e9c9b42fc", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7219130677c4fe4310c9729cbc0b4c6e9c9b42fc/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "caed80ba4ba8d9f4d3fa8aa9af6c4092d779cd9d", "url": "https://api.github.com/repos/rust-lang/rust/commits/caed80ba4ba8d9f4d3fa8aa9af6c4092d779cd9d", "html_url": "https://github.com/rust-lang/rust/commit/caed80ba4ba8d9f4d3fa8aa9af6c4092d779cd9d"}, {"sha": "f9eef71986741c91161c88b9f7a3bf80796f44a3", "url": "https://api.github.com/repos/rust-lang/rust/commits/f9eef71986741c91161c88b9f7a3bf80796f44a3", "html_url": "https://github.com/rust-lang/rust/commit/f9eef71986741c91161c88b9f7a3bf80796f44a3"}], "stats": {"total": 97, "additions": 77, "deletions": 20}, "files": [{"sha": "88c25567d2963e7c3f4b5181b92657594a6974b8", "filename": "src/librustdoc/html/static/main.js", "status": "modified", "additions": 36, "deletions": 16, "changes": 52, "blob_url": "https://github.com/rust-lang/rust/blob/7219130677c4fe4310c9729cbc0b4c6e9c9b42fc/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fmain.js", "raw_url": "https://github.com/rust-lang/rust/raw/7219130677c4fe4310c9729cbc0b4c6e9c9b42fc/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fmain.js", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fmain.js?ref=7219130677c4fe4310c9729cbc0b4c6e9c9b42fc", "patch": "@@ -223,7 +223,25 @@\n             }\n         }\n     }\n-    highlightSourceLines(null);\n+\n+    function expandSection(id) {\n+        var elem = document.getElementById(id);\n+        if (elem && isHidden(elem)) {\n+            var h3 = elem.parentNode.previousSibling;\n+            if (h3 && h3.tagName !== 'H3') {\n+                h3 = h3.previousSibling; // skip div.docblock\n+            }\n+\n+            if (h3) {\n+                var collapses = h3.getElementsByClassName(\"collapse-toggle\");\n+                if (collapses.length > 0) {\n+                    // The element is not visible, we need to make it appear!\n+                    collapseDocs(collapses[0], \"show\");\n+                }\n+            }\n+        }\n+    }\n+\n     window.onhashchange = highlightSourceLines;\n \n     // Gets the human-readable string for the virtual-key code of the\n@@ -317,6 +335,15 @@\n         }\n     }\n \n+    function findParentElement(elem, tagName) {\n+        do {\n+            if (elem && elem.tagName === tagName) {\n+                return elem;\n+            }\n+        } while (elem = elem.parentNode);\n+        return null;\n+    }\n+\n     document.onkeypress = handleShortcut;\n     document.onkeydown = handleShortcut;\n     document.onclick = function(ev) {\n@@ -354,6 +381,13 @@\n         } else if (!hasClass(document.getElementById(\"help\"), \"hidden\")) {\n             addClass(document.getElementById(\"help\"), \"hidden\");\n             removeClass(document.body, \"blur\");\n+        } else {\n+            // Making a collapsed element visible on onhashchange seems\n+            // too late\n+            var a = findParentElement(ev.target, 'A');\n+            if (a && a.hash) {\n+                expandSection(a.hash.replace(/^#/, ''));\n+            }\n         }\n     };\n \n@@ -2213,21 +2247,7 @@\n     autoCollapse(getPageId(), getCurrentValue(\"rustdoc-collapse\") === \"true\");\n \n     if (window.location.hash && window.location.hash.length > 0) {\n-        var hash = getPageId();\n-        if (hash !== null) {\n-            var elem = document.getElementById(hash);\n-            if (elem && elem.offsetParent === null) {\n-                if (elem.parentNode && elem.parentNode.previousSibling) {\n-                    var collapses = elem.parentNode\n-                                        .previousSibling\n-                                        .getElementsByClassName(\"collapse-toggle\");\n-                    if (collapses.length > 0) {\n-                        // The element is not visible, we need to make it appear!\n-                        collapseDocs(collapses[0], \"show\");\n-                    }\n-                }\n-            }\n-        }\n+        expandSection(window.location.hash.replace(/^#/, ''));\n     }\n }());\n "}, {"sha": "ffe6a40b369988d7a83558a558b722c6a1989669", "filename": "src/librustdoc/html/static/rustdoc.css", "status": "modified", "additions": 15, "deletions": 3, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/7219130677c4fe4310c9729cbc0b4c6e9c9b42fc/src%2Flibrustdoc%2Fhtml%2Fstatic%2Frustdoc.css", "raw_url": "https://github.com/rust-lang/rust/raw/7219130677c4fe4310c9729cbc0b4c6e9c9b42fc/src%2Flibrustdoc%2Fhtml%2Fstatic%2Frustdoc.css", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic%2Frustdoc.css?ref=7219130677c4fe4310c9729cbc0b4c6e9c9b42fc", "patch": "@@ -497,6 +497,19 @@ h4 > code, h3 > code, .invisible > code {\n \tfont-size: 90%;\n }\n \n+.content .stability {\n+\tposition: relative;\n+\tmargin-left: 33px;\n+\tmargin-top: -13px;\n+}\n+.content .stability::before {\n+\tcontent: '\u02ea';\n+\tfont-size: 30px;\n+\tposition: absolute;\n+\ttop: -9px;\n+\tleft: -13px;\n+}\n+\n nav {\n \tborder-bottom: 1px solid;\n \tpadding-bottom: 10px;\n@@ -545,10 +558,8 @@ a {\n \tleft: -5px;\n }\n .small-section-header > .anchor {\n-\tleft: -20px;\n-}\n-.small-section-header > .anchor:not(.field) {\n \tleft: -28px;\n+\tpadding-right: 10px; /* avoid gap that causes hover to disappear */\n }\n .anchor:before {\n \tcontent: '\\2002\\00a7\\2002';\n@@ -745,6 +756,7 @@ a.test-arrow:hover{\n .section-header:hover a:before {\n \tposition: absolute;\n \tleft: -25px;\n+\tpadding-right: 10px; /* avoid gap that causes hover to disappear */\n \tcontent: '\\2002\\00a7\\2002';\n }\n "}, {"sha": "d70cf132b3c3a83df35cf295df7bc68736429bd2", "filename": "src/libstd/keyword_docs.rs", "status": "modified", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/7219130677c4fe4310c9729cbc0b4c6e9c9b42fc/src%2Flibstd%2Fkeyword_docs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7219130677c4fe4310c9729cbc0b4c6e9c9b42fc/src%2Flibstd%2Fkeyword_docs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fkeyword_docs.rs?ref=7219130677c4fe4310c9729cbc0b4c6e9c9b42fc", "patch": "@@ -56,3 +56,24 @@ mod fn_keyword { }\n ///\n /// [book]: https://doc.rust-lang.org/book/second-edition/ch03-01-variables-and-mutability.html\n mod let_keyword { }\n+\n+#[doc(keyword = \"struct\")]\n+//\n+/// The `struct` keyword.\n+///\n+/// The `struct` keyword is used to define a struct type.\n+///\n+/// Example:\n+///\n+/// ```\n+/// struct Foo {\n+///     field1: u32,\n+///     field2: String,\n+/// }\n+/// ```\n+///\n+/// There are different kinds of structs. For more information, take a look at the\n+/// [Rust Book][book].\n+///\n+/// [book]: https://doc.rust-lang.org/book/second-edition/ch05-01-defining-structs.html\n+mod struct_keyword { }"}, {"sha": "6f7dfee53facc423fa5919c854be3c9c00a26043", "filename": "src/libtest/formatters/terse.rs", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/7219130677c4fe4310c9729cbc0b4c6e9c9b42fc/src%2Flibtest%2Fformatters%2Fterse.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7219130677c4fe4310c9729cbc0b4c6e9c9b42fc/src%2Flibtest%2Fformatters%2Fterse.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibtest%2Fformatters%2Fterse.rs?ref=7219130677c4fe4310c9729cbc0b4c6e9c9b42fc", "patch": "@@ -18,6 +18,7 @@ pub(crate) struct TerseFormatter<T> {\n     max_name_len: usize,\n \n     test_count: usize,\n+    total_test_count: usize,\n }\n \n impl<T: Write> TerseFormatter<T> {\n@@ -33,6 +34,7 @@ impl<T: Write> TerseFormatter<T> {\n             max_name_len,\n             is_multithreaded,\n             test_count: 0,\n+            total_test_count: 0, // initialized later, when write_run_start is called\n         }\n     }\n \n@@ -66,7 +68,8 @@ impl<T: Write> TerseFormatter<T> {\n             // we insert a new line every 100 dots in order to flush the\n             // screen when dealing with line-buffered output (e.g. piping to\n             // `stamp` in the rust CI).\n-            self.write_plain(\"\\n\")?;\n+            let out = format!(\" {}/{}\\n\", self.test_count+1, self.total_test_count);\n+            self.write_plain(&out)?;\n         }\n \n         self.test_count += 1;\n@@ -160,6 +163,7 @@ impl<T: Write> TerseFormatter<T> {\n \n impl<T: Write> OutputFormatter for TerseFormatter<T> {\n     fn write_run_start(&mut self, test_count: usize) -> io::Result<()> {\n+        self.total_test_count = test_count;\n         let noun = if test_count != 1 { \"tests\" } else { \"test\" };\n         self.write_plain(&format!(\"\\nrunning {} {}\\n\", test_count, noun))\n     }"}]}