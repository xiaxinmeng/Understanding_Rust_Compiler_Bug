{"sha": "a6aa3cb2c10c986eb231378e154766ce38f99a49", "node_id": "C_kwDOAAsO6NoAKGE2YWEzY2IyYzEwYzk4NmViMjMxMzc4ZTE1NDc2NmNlMzhmOTlhNDk", "commit": {"author": {"name": "Rune Tynan", "email": "runetynan@gmail.com", "date": "2022-01-13T19:40:28Z"}, "committer": {"name": "Rune Tynan", "email": "runetynan@gmail.com", "date": "2022-01-13T19:40:28Z"}, "message": "inline ItemId method, clarify comments a bit", "tree": {"sha": "43a573b44b6b99654abd86177cf8dd55eab01164", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/43a573b44b6b99654abd86177cf8dd55eab01164"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a6aa3cb2c10c986eb231378e154766ce38f99a49", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a6aa3cb2c10c986eb231378e154766ce38f99a49", "html_url": "https://github.com/rust-lang/rust/commit/a6aa3cb2c10c986eb231378e154766ce38f99a49", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a6aa3cb2c10c986eb231378e154766ce38f99a49/comments", "author": {"login": "CraftSpider", "id": 13342132, "node_id": "MDQ6VXNlcjEzMzQyMTMy", "avatar_url": "https://avatars.githubusercontent.com/u/13342132?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CraftSpider", "html_url": "https://github.com/CraftSpider", "followers_url": "https://api.github.com/users/CraftSpider/followers", "following_url": "https://api.github.com/users/CraftSpider/following{/other_user}", "gists_url": "https://api.github.com/users/CraftSpider/gists{/gist_id}", "starred_url": "https://api.github.com/users/CraftSpider/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CraftSpider/subscriptions", "organizations_url": "https://api.github.com/users/CraftSpider/orgs", "repos_url": "https://api.github.com/users/CraftSpider/repos", "events_url": "https://api.github.com/users/CraftSpider/events{/privacy}", "received_events_url": "https://api.github.com/users/CraftSpider/received_events", "type": "User", "site_admin": false}, "committer": {"login": "CraftSpider", "id": 13342132, "node_id": "MDQ6VXNlcjEzMzQyMTMy", "avatar_url": "https://avatars.githubusercontent.com/u/13342132?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CraftSpider", "html_url": "https://github.com/CraftSpider", "followers_url": "https://api.github.com/users/CraftSpider/followers", "following_url": "https://api.github.com/users/CraftSpider/following{/other_user}", "gists_url": "https://api.github.com/users/CraftSpider/gists{/gist_id}", "starred_url": "https://api.github.com/users/CraftSpider/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CraftSpider/subscriptions", "organizations_url": "https://api.github.com/users/CraftSpider/orgs", "repos_url": "https://api.github.com/users/CraftSpider/repos", "events_url": "https://api.github.com/users/CraftSpider/events{/privacy}", "received_events_url": "https://api.github.com/users/CraftSpider/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "74f0e582becf704e6e9ccf0c1956bcbc7cc3703d", "url": "https://api.github.com/repos/rust-lang/rust/commits/74f0e582becf704e6e9ccf0c1956bcbc7cc3703d", "html_url": "https://github.com/rust-lang/rust/commit/74f0e582becf704e6e9ccf0c1956bcbc7cc3703d"}], "stats": {"total": 21, "additions": 10, "deletions": 11}, "files": [{"sha": "00c6e38839f5489623c3568e3bed382459295b3e", "filename": "src/librustdoc/clean/types.rs", "status": "modified", "additions": 0, "deletions": 8, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/a6aa3cb2c10c986eb231378e154766ce38f99a49/src%2Flibrustdoc%2Fclean%2Ftypes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a6aa3cb2c10c986eb231378e154766ce38f99a49/src%2Flibrustdoc%2Fclean%2Ftypes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fclean%2Ftypes.rs?ref=a6aa3cb2c10c986eb231378e154766ce38f99a49", "patch": "@@ -75,14 +75,6 @@ impl ItemId {\n         }\n     }\n \n-    #[inline]\n-    crate fn is_local_impl(self) -> bool {\n-        match self {\n-            ItemId::Blanket { impl_id, .. } => impl_id.is_local(),\n-            ItemId::Auto { .. } | ItemId::DefId(_) | ItemId::Primitive(_, _) => false,\n-        }\n-    }\n-\n     #[inline]\n     #[track_caller]\n     crate fn expect_def_id(self) -> DefId {"}, {"sha": "0f80c8a5b4cc4a05e99ccc30753964d39b716274", "filename": "src/librustdoc/json/mod.rs", "status": "modified", "additions": 10, "deletions": 3, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/a6aa3cb2c10c986eb231378e154766ce38f99a49/src%2Flibrustdoc%2Fjson%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a6aa3cb2c10c986eb231378e154766ce38f99a49/src%2Flibrustdoc%2Fjson%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fjson%2Fmod.rs?ref=a6aa3cb2c10c986eb231378e154766ce38f99a49", "patch": "@@ -171,10 +171,17 @@ impl<'tcx> FormatRenderer<'tcx> for JsonRenderer<'tcx> {\n     /// the hashmap because certain items (traits and types) need to have their mappings for trait\n     /// implementations filled out before they're inserted.\n     fn item(&mut self, item: clean::Item) -> Result<(), Error> {\n+        // We skip children of local blanket implementations, as we'll have already seen the actual\n+        // generic impl, and the generated ones don't need documenting.\n+        let local_blanket_impl = match item.def_id {\n+            clean::ItemId::Blanket { impl_id, .. } => impl_id.is_local(),\n+            clean::ItemId::Auto { .. }\n+            | clean::ItemId::DefId(_)\n+            | clean::ItemId::Primitive(_, _) => false,\n+        };\n+\n         // Flatten items that recursively store other items\n-        // We skip local blanket implementations, as we'll have already seen the actual generic\n-        // impl, and the generated ones don't need documenting.\n-        if !item.def_id.is_local_impl() {\n+        if !local_blanket_impl {\n             item.kind.inner_items().for_each(|i| self.item(i.clone()).unwrap());\n         }\n "}]}