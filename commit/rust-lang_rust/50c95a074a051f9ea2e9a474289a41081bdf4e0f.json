{"sha": "50c95a074a051f9ea2e9a474289a41081bdf4e0f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjUwYzk1YTA3NGEwNTFmOWVhMmU5YTQ3NDI4OWE0MTA4MWJkZjRlMGY=", "commit": {"author": {"name": "Nick Cameron", "email": "ncameron@mozilla.com", "date": "2018-03-14T07:43:01Z"}, "committer": {"name": "Nick Cameron", "email": "ncameron@mozilla.com", "date": "2018-03-19T20:27:31Z"}, "message": "cargo fmt", "tree": {"sha": "627f542dae70e56010d044fdd44afb8210ece967", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/627f542dae70e56010d044fdd44afb8210ece967"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/50c95a074a051f9ea2e9a474289a41081bdf4e0f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/50c95a074a051f9ea2e9a474289a41081bdf4e0f", "html_url": "https://github.com/rust-lang/rust/commit/50c95a074a051f9ea2e9a474289a41081bdf4e0f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/50c95a074a051f9ea2e9a474289a41081bdf4e0f/comments", "author": {"login": "nrc", "id": 762626, "node_id": "MDQ6VXNlcjc2MjYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/762626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nrc", "html_url": "https://github.com/nrc", "followers_url": "https://api.github.com/users/nrc/followers", "following_url": "https://api.github.com/users/nrc/following{/other_user}", "gists_url": "https://api.github.com/users/nrc/gists{/gist_id}", "starred_url": "https://api.github.com/users/nrc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nrc/subscriptions", "organizations_url": "https://api.github.com/users/nrc/orgs", "repos_url": "https://api.github.com/users/nrc/repos", "events_url": "https://api.github.com/users/nrc/events{/privacy}", "received_events_url": "https://api.github.com/users/nrc/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nrc", "id": 762626, "node_id": "MDQ6VXNlcjc2MjYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/762626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nrc", "html_url": "https://github.com/nrc", "followers_url": "https://api.github.com/users/nrc/followers", "following_url": "https://api.github.com/users/nrc/following{/other_user}", "gists_url": "https://api.github.com/users/nrc/gists{/gist_id}", "starred_url": "https://api.github.com/users/nrc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nrc/subscriptions", "organizations_url": "https://api.github.com/users/nrc/orgs", "repos_url": "https://api.github.com/users/nrc/repos", "events_url": "https://api.github.com/users/nrc/events{/privacy}", "received_events_url": "https://api.github.com/users/nrc/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4cfffbd0a8ee33cf99a36ed133f18d2a3157dbdf", "url": "https://api.github.com/repos/rust-lang/rust/commits/4cfffbd0a8ee33cf99a36ed133f18d2a3157dbdf", "html_url": "https://github.com/rust-lang/rust/commit/4cfffbd0a8ee33cf99a36ed133f18d2a3157dbdf"}], "stats": {"total": 52, "additions": 26, "deletions": 26}, "files": [{"sha": "975cb890ed79eb09943348181eba13d28d03e82a", "filename": "Configurations.md", "status": "modified", "additions": 4, "deletions": 5, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/50c95a074a051f9ea2e9a474289a41081bdf4e0f/Configurations.md", "raw_url": "https://github.com/rust-lang/rust/raw/50c95a074a051f9ea2e9a474289a41081bdf4e0f/Configurations.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Configurations.md?ref=50c95a074a051f9ea2e9a474289a41081bdf4e0f", "patch": "@@ -1300,13 +1300,12 @@ Reorder import statements in group\n #### `false` (default):\n \n ```rust\n-use std::mem;\n-use std::io;\n-\n-use lorem;\n-use ipsum;\n use dolor;\n+use ipsum;\n+use lorem;\n use sit;\n+use std::io;\n+use std::mem;\n ```\n \n #### `true`:"}, {"sha": "b59e47930e0c44ea965e6a43875e015ce1dce7bd", "filename": "src/bin/main.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/50c95a074a051f9ea2e9a474289a41081bdf4e0f/src%2Fbin%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/50c95a074a051f9ea2e9a474289a41081bdf4e0f/src%2Fbin%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbin%2Fmain.rs?ref=50c95a074a051f9ea2e9a474289a41081bdf4e0f", "patch": "@@ -14,17 +14,17 @@ extern crate env_logger;\n extern crate getopts;\n extern crate rustfmt_nightly as rustfmt;\n \n-use std::{env, error};\n use std::fs::File;\n use std::io::{self, Read, Write};\n use std::path::{Path, PathBuf};\n use std::str::FromStr;\n+use std::{env, error};\n \n use getopts::{Matches, Options};\n \n-use rustfmt::{run, FileName, Input, Summary};\n-use rustfmt::config::{get_toml_path, Color, Config, WriteMode};\n use rustfmt::config::file_lines::FileLines;\n+use rustfmt::config::{get_toml_path, Color, Config, WriteMode};\n+use rustfmt::{run, FileName, Input, Summary};\n \n type FmtError = Box<error::Error + Send + Sync>;\n type FmtResult<T> = std::result::Result<T, FmtError>;"}, {"sha": "d798981415e847d1bdeb0257da9656c46c068c38", "filename": "src/chains.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/50c95a074a051f9ea2e9a474289a41081bdf4e0f/src%2Fchains.rs", "raw_url": "https://github.com/rust-lang/rust/raw/50c95a074a051f9ea2e9a474289a41081bdf4e0f/src%2Fchains.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fchains.rs?ref=50c95a074a051f9ea2e9a474289a41081bdf4e0f", "patch": "@@ -77,8 +77,8 @@ use std::borrow::Cow;\n use std::cmp::min;\n use std::iter;\n \n-use syntax::{ast, ptr};\n use syntax::codemap::Span;\n+use syntax::{ast, ptr};\n \n pub fn rewrite_chain(expr: &ast::Expr, context: &RewriteContext, shape: Shape) -> Option<String> {\n     debug!(\"rewrite_chain {:?}\", shape);"}, {"sha": "2ec31afa391847c97195a14f194f622c0a590d2a", "filename": "src/closures.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/50c95a074a051f9ea2e9a474289a41081bdf4e0f/src%2Fclosures.rs", "raw_url": "https://github.com/rust-lang/rust/raw/50c95a074a051f9ea2e9a474289a41081bdf4e0f/src%2Fclosures.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fclosures.rs?ref=50c95a074a051f9ea2e9a474289a41081bdf4e0f", "patch": "@@ -9,9 +9,9 @@\n // except according to those terms.\n \n use config::lists::*;\n-use syntax::{ast, ptr};\n use syntax::codemap::Span;\n use syntax::parse::classify;\n+use syntax::{ast, ptr};\n \n use codemap::SpanUtils;\n use expr::{block_contains_comment, is_simple_block, is_unsafe_block, rewrite_cond, ToExpr};"}, {"sha": "cf3f827c00daba13697024bf6604334ee9a6360b", "filename": "src/config/file_lines.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/50c95a074a051f9ea2e9a474289a41081bdf4e0f/src%2Fconfig%2Ffile_lines.rs", "raw_url": "https://github.com/rust-lang/rust/raw/50c95a074a051f9ea2e9a474289a41081bdf4e0f/src%2Fconfig%2Ffile_lines.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fconfig%2Ffile_lines.rs?ref=50c95a074a051f9ea2e9a474289a41081bdf4e0f", "patch": "@@ -10,9 +10,9 @@\n \n //! This module contains types and functions to support formatting specific line ranges.\n \n-use std::{cmp, iter, str};\n use std::collections::HashMap;\n use std::rc::Rc;\n+use std::{cmp, iter, str};\n \n use serde::de::{Deserialize, Deserializer};\n use serde_json as json;"}, {"sha": "b28592e613be8a26e5dfd84bd5922b4e4692b1a6", "filename": "src/config/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/50c95a074a051f9ea2e9a474289a41081bdf4e0f/src%2Fconfig%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/50c95a074a051f9ea2e9a474289a41081bdf4e0f/src%2Fconfig%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fconfig%2Fmod.rs?ref=50c95a074a051f9ea2e9a474289a41081bdf4e0f", "patch": "@@ -8,12 +8,12 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-use std::{env, fs};\n use std::cell::Cell;\n use std::default::Default;\n use std::fs::File;\n use std::io::{Error, ErrorKind, Read};\n use std::path::{Path, PathBuf};\n+use std::{env, fs};\n \n use regex::Regex;\n "}, {"sha": "d364da20128af5faa3182e53b503cc3ea63bfc93", "filename": "src/expr.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/50c95a074a051f9ea2e9a474289a41081bdf4e0f/src%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/50c95a074a051f9ea2e9a474289a41081bdf4e0f/src%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fexpr.rs?ref=50c95a074a051f9ea2e9a474289a41081bdf4e0f", "patch": "@@ -13,8 +13,8 @@ use std::cmp::min;\n use std::iter::repeat;\n \n use config::lists::*;\n-use syntax::{ast, ptr};\n use syntax::codemap::{BytePos, CodeMap, Span};\n+use syntax::{ast, ptr};\n \n use chains::rewrite_chain;\n use closures;"}, {"sha": "c871395f72ab9aed4b57b49a235fa250dd89b240", "filename": "src/format-diff/main.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/50c95a074a051f9ea2e9a474289a41081bdf4e0f/src%2Fformat-diff%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/50c95a074a051f9ea2e9a474289a41081bdf4e0f/src%2Fformat-diff%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fformat-diff%2Fmain.rs?ref=50c95a074a051f9ea2e9a474289a41081bdf4e0f", "patch": "@@ -23,10 +23,10 @@ extern crate regex;\n extern crate serde_derive;\n extern crate serde_json as json;\n \n-use std::{env, fmt, process};\n use std::collections::HashSet;\n use std::error::Error;\n use std::io::{self, BufRead};\n+use std::{env, fmt, process};\n \n use regex::Regex;\n "}, {"sha": "2e0e869d12a50025baf167407ebcdbb2b1d3b82d", "filename": "src/items.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/50c95a074a051f9ea2e9a474289a41081bdf4e0f/src%2Fitems.rs", "raw_url": "https://github.com/rust-lang/rust/raw/50c95a074a051f9ea2e9a474289a41081bdf4e0f/src%2Fitems.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fitems.rs?ref=50c95a074a051f9ea2e9a474289a41081bdf4e0f", "patch": "@@ -15,9 +15,9 @@ use std::cmp::min;\n \n use config::lists::*;\n use regex::Regex;\n-use syntax::{abi, ast, ptr, symbol};\n use syntax::codemap::{self, BytePos, Span};\n use syntax::visit;\n+use syntax::{abi, ast, ptr, symbol};\n \n use codemap::{LineRangeUtils, SpanUtils};\n use comment::{combine_strs_with_missing_comments, contains_comment, recover_comment_removed,"}, {"sha": "c080f1396cbd850ca47dd9b27225899dd389fbae", "filename": "src/lib.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/50c95a074a051f9ea2e9a474289a41081bdf4e0f/src%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/50c95a074a051f9ea2e9a474289a41081bdf4e0f/src%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flib.rs?ref=50c95a074a051f9ea2e9a474289a41081bdf4e0f", "patch": "@@ -38,11 +38,11 @@ use std::path::PathBuf;\n use std::rc::Rc;\n use std::time::Duration;\n \n-use syntax::errors::{DiagnosticBuilder, Handler};\n-use syntax::errors::emitter::{ColorConfig, EmitterWriter};\n use syntax::ast;\n-use syntax::codemap::{CodeMap, FilePathMapping};\n pub use syntax::codemap::FileName;\n+use syntax::codemap::{CodeMap, FilePathMapping};\n+use syntax::errors::{DiagnosticBuilder, Handler};\n+use syntax::errors::emitter::{ColorConfig, EmitterWriter};\n use syntax::parse::{self, ParseSess};\n \n use checkstyle::{output_footer, output_header};"}, {"sha": "ec1ca29d1739b7840424690de65d6576aa545e4f", "filename": "src/macros.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/50c95a074a051f9ea2e9a474289a41081bdf4e0f/src%2Fmacros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/50c95a074a051f9ea2e9a474289a41081bdf4e0f/src%2Fmacros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fmacros.rs?ref=50c95a074a051f9ea2e9a474289a41081bdf4e0f", "patch": "@@ -22,7 +22,6 @@\n use std::collections::HashMap;\n \n use config::lists::*;\n-use syntax::{ast, ptr};\n use syntax::codemap::{BytePos, Span};\n use syntax::parse::new_parser_from_tts;\n use syntax::parse::parser::Parser;\n@@ -31,6 +30,7 @@ use syntax::print::pprust;\n use syntax::symbol;\n use syntax::tokenstream::{Cursor, ThinTokenStream, TokenStream, TokenTree};\n use syntax::util::ThinVec;\n+use syntax::{ast, ptr};\n \n use codemap::SpanUtils;\n use comment::{contains_comment, remove_trailing_white_spaces, CharClasses, FindUncommented,"}, {"sha": "db72a775f414f498c585c0323691934d79b04edb", "filename": "src/rustfmt_diff.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/50c95a074a051f9ea2e9a474289a41081bdf4e0f/src%2Frustfmt_diff.rs", "raw_url": "https://github.com/rust-lang/rust/raw/50c95a074a051f9ea2e9a474289a41081bdf4e0f/src%2Frustfmt_diff.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustfmt_diff.rs?ref=50c95a074a051f9ea2e9a474289a41081bdf4e0f", "patch": "@@ -211,8 +211,8 @@ where\n \n #[cfg(test)]\n mod test {\n-    use super::{make_diff, Mismatch};\n     use super::DiffLine::*;\n+    use super::{make_diff, Mismatch};\n \n     #[test]\n     fn diff_simple() {"}, {"sha": "d1d526efe3699548a2b4ec86d32911169e40ee61", "filename": "src/utils.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/50c95a074a051f9ea2e9a474289a41081bdf4e0f/src%2Futils.rs", "raw_url": "https://github.com/rust-lang/rust/raw/50c95a074a051f9ea2e9a474289a41081bdf4e0f/src%2Futils.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Futils.rs?ref=50c95a074a051f9ea2e9a474289a41081bdf4e0f", "patch": "@@ -10,10 +10,10 @@\n \n use std::borrow::Cow;\n \n-use syntax::{abi, ptr};\n use syntax::ast::{self, Attribute, CrateSugar, MetaItem, MetaItemKind, NestedMetaItem,\n                   NestedMetaItemKind, Path, Visibility, VisibilityKind};\n use syntax::codemap::{BytePos, Span, NO_EXPANSION};\n+use syntax::{abi, ptr};\n \n use config::Color;\n use rewrite::RewriteContext;"}, {"sha": "54a85062d435f16146ac56eb519de45265267ec6", "filename": "src/visitor.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/50c95a074a051f9ea2e9a474289a41081bdf4e0f/src%2Fvisitor.rs", "raw_url": "https://github.com/rust-lang/rust/raw/50c95a074a051f9ea2e9a474289a41081bdf4e0f/src%2Fvisitor.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fvisitor.rs?ref=50c95a074a051f9ea2e9a474289a41081bdf4e0f", "patch": "@@ -8,10 +8,10 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-use syntax::{ast, visit};\n use syntax::attr::HasAttrs;\n use syntax::codemap::{self, BytePos, CodeMap, Pos, Span};\n use syntax::parse::ParseSess;\n+use syntax::{ast, visit};\n \n use attr::*;\n use codemap::{LineRangeUtils, SpanUtils};"}, {"sha": "5845669e868d04c28192b982716f71ac90eece34", "filename": "tests/target/imports.rs", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/50c95a074a051f9ea2e9a474289a41081bdf4e0f/tests%2Ftarget%2Fimports.rs", "raw_url": "https://github.com/rust-lang/rust/raw/50c95a074a051f9ea2e9a474289a41081bdf4e0f/tests%2Ftarget%2Fimports.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fimports.rs?ref=50c95a074a051f9ea2e9a474289a41081bdf4e0f", "patch": "@@ -43,21 +43,21 @@ fn test() {\n }\n \n // Simple imports\n-use foo::bar::baz;\n use bar::quux as kaas;\n use foo;\n+use foo::bar::baz;\n \n // With aliases.\n-use foo::{self as bar, baz};\n use foo as bar;\n use foo::qux as bar;\n+use foo::{self as bar, baz};\n use foo::{baz, qux as bar};\n \n // With absolute paths\n use foo;\n+use Foo;\n use foo::Bar;\n use foo::{Bar, Baz};\n-use Foo;\n use {Bar, Baz};\n \n // Root globs\n@@ -83,6 +83,7 @@ use fooo::{bar, x, y, z,\n            bar::*};\n \n // nested imports with a single sub-tree.\n-use a::b::c::*;\n use a::b::c::d;\n+use a::b::c::*;\n+\n use a::b::c::{xxx, yyy, zzz};"}]}