{"sha": "e4ffd7b31780b1f2ac6dcb731566b583bf562647", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU0ZmZkN2IzMTc4MGIxZjJhYzZkY2I3MzE1NjZiNTgzYmY1NjI2NDc=", "commit": {"author": {"name": "bors[bot]", "email": "bors[bot]@users.noreply.github.com", "date": "2019-01-01T15:18:32Z"}, "committer": {"name": "bors[bot]", "email": "bors[bot]@users.noreply.github.com", "date": "2019-01-01T15:18:32Z"}, "message": "Merge #401\n\n401: complete `crate` `self` and `super` in use stmt r=matklad a=gfreezy\n\nfixed #387\n\nCo-authored-by: gfreezy <gfreezy@gmail.com>", "tree": {"sha": "bfbb1d64978187b4eae6042599af2f68bd4c4563", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bfbb1d64978187b4eae6042599af2f68bd4c4563"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e4ffd7b31780b1f2ac6dcb731566b583bf562647", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e4ffd7b31780b1f2ac6dcb731566b583bf562647", "html_url": "https://github.com/rust-lang/rust/commit/e4ffd7b31780b1f2ac6dcb731566b583bf562647", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e4ffd7b31780b1f2ac6dcb731566b583bf562647/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "parents": [{"sha": "6f4c9303e41b5973830ae8d80b2b6d206f2e9a57", "url": "https://api.github.com/repos/rust-lang/rust/commits/6f4c9303e41b5973830ae8d80b2b6d206f2e9a57", "html_url": "https://github.com/rust-lang/rust/commit/6f4c9303e41b5973830ae8d80b2b6d206f2e9a57"}, {"sha": "39dab68404aa5649c45e6d428b8d5edb134ef44c", "url": "https://api.github.com/repos/rust-lang/rust/commits/39dab68404aa5649c45e6d428b8d5edb134ef44c", "html_url": "https://github.com/rust-lang/rust/commit/39dab68404aa5649c45e6d428b8d5edb134ef44c"}], "stats": {"total": 68, "additions": 68, "deletions": 0}, "files": [{"sha": "b4ee092b50819edaacb89762eff0ff510ac46f40", "filename": "crates/ra_analysis/src/completion.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/e4ffd7b31780b1f2ac6dcb731566b583bf562647/crates%2Fra_analysis%2Fsrc%2Fcompletion.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e4ffd7b31780b1f2ac6dcb731566b583bf562647/crates%2Fra_analysis%2Fsrc%2Fcompletion.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_analysis%2Fsrc%2Fcompletion.rs?ref=e4ffd7b31780b1f2ac6dcb731566b583bf562647", "patch": "@@ -40,6 +40,7 @@ pub(crate) fn completions(\n \n     complete_fn_param::complete_fn_param(&mut acc, &ctx);\n     complete_keyword::complete_expr_keyword(&mut acc, &ctx);\n+    complete_keyword::complete_use_tree_keyword(&mut acc, &ctx);\n     complete_snippet::complete_expr_snippet(&mut acc, &ctx);\n     complete_snippet::complete_item_snippet(&mut acc, &ctx);\n     complete_path::complete_path(&mut acc, &ctx)?;"}, {"sha": "28194c9088755a295a974a1182e031f7406057e8", "filename": "crates/ra_analysis/src/completion/complete_keyword.rs", "status": "modified", "additions": 67, "deletions": 0, "changes": 67, "blob_url": "https://github.com/rust-lang/rust/blob/e4ffd7b31780b1f2ac6dcb731566b583bf562647/crates%2Fra_analysis%2Fsrc%2Fcompletion%2Fcomplete_keyword.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e4ffd7b31780b1f2ac6dcb731566b583bf562647/crates%2Fra_analysis%2Fsrc%2Fcompletion%2Fcomplete_keyword.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_analysis%2Fsrc%2Fcompletion%2Fcomplete_keyword.rs?ref=e4ffd7b31780b1f2ac6dcb731566b583bf562647", "patch": "@@ -7,6 +7,38 @@ use ra_syntax::{\n \n use crate::completion::{CompletionContext, CompletionItem, Completions, CompletionKind, CompletionItemKind};\n \n+pub(super) fn complete_use_tree_keyword(acc: &mut Completions, ctx: &CompletionContext) {\n+    // complete keyword \"crate\" in use stmt\n+    match (ctx.use_item_syntax.as_ref(), ctx.path_prefix.as_ref()) {\n+        (Some(_), None) => {\n+            CompletionItem::new(CompletionKind::Keyword, \"crate\")\n+                .kind(CompletionItemKind::Keyword)\n+                .lookup_by(\"crate\")\n+                .snippet(\"crate::\")\n+                .add_to(acc);\n+            CompletionItem::new(CompletionKind::Keyword, \"self\")\n+                .kind(CompletionItemKind::Keyword)\n+                .lookup_by(\"self\")\n+                .add_to(acc);\n+            CompletionItem::new(CompletionKind::Keyword, \"super\")\n+                .kind(CompletionItemKind::Keyword)\n+                .lookup_by(\"super\")\n+                .add_to(acc);\n+        }\n+        (Some(_), Some(_)) => {\n+            CompletionItem::new(CompletionKind::Keyword, \"self\")\n+                .kind(CompletionItemKind::Keyword)\n+                .lookup_by(\"self\")\n+                .add_to(acc);\n+            CompletionItem::new(CompletionKind::Keyword, \"super\")\n+                .kind(CompletionItemKind::Keyword)\n+                .lookup_by(\"super\")\n+                .add_to(acc);\n+        }\n+        _ => {}\n+    }\n+}\n+\n fn keyword(kw: &str, snippet: &str) -> CompletionItem {\n     CompletionItem::new(CompletionKind::Keyword, kw)\n         .kind(CompletionItemKind::Keyword)\n@@ -18,6 +50,7 @@ pub(super) fn complete_expr_keyword(acc: &mut Completions, ctx: &CompletionConte\n     if !ctx.is_trivial_path {\n         return;\n     }\n+\n     let fn_def = match ctx.function_syntax {\n         Some(it) => it,\n         None => return,\n@@ -79,6 +112,40 @@ mod tests {\n         check_completion(code, expected_completions, CompletionKind::Keyword);\n     }\n \n+    #[test]\n+    fn completes_keywords_in_use_stmt() {\n+        check_keyword_completion(\n+            r\"\n+            use <|>\n+            \",\n+            r#\"\n+            crate \"crate\" \"crate::\"\n+            self \"self\"\n+            super \"super\"\n+            \"#,\n+        );\n+\n+        check_keyword_completion(\n+            r\"\n+            use a::<|>\n+            \",\n+            r#\"\n+            self \"self\"\n+            super \"super\"\n+            \"#,\n+        );\n+\n+        check_keyword_completion(\n+            r\"\n+            use a::{b, <|>}\n+            \",\n+            r#\"\n+            self \"self\"\n+            super \"super\"\n+            \"#,\n+        );\n+    }\n+\n     #[test]\n     fn completes_various_keywords_in_function() {\n         check_keyword_completion("}]}