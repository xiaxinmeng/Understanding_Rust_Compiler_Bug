{"sha": "b92a1e9c20327c26097a7ddf55a022d2ea58fbf5", "node_id": "C_kwDOAAsO6NoAKGI5MmExZTljMjAzMjdjMjYwOTdhN2RkZjU1YTAyMmQyZWE1OGZiZjU", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2022-01-24T11:29:50Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-01-24T11:29:50Z"}, "message": "Rollup merge of #92513 - Xuanwo:path-buf, r=dtolnay\n\nstd: Implement try_reserve and try_reserve_exact on PathBuf\n\nPart of https://github.com/rust-lang/rust/issues/91789\n\nSigned-off-by: Xuanwo <github@xuanwo.io>", "tree": {"sha": "55bc3d175a441019bdf74d555a1be5af82805a09", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/55bc3d175a441019bdf74d555a1be5af82805a09"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b92a1e9c20327c26097a7ddf55a022d2ea58fbf5", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJh7o2vCRBK7hj4Ov3rIwAAXNUIAG7FLbEUBFZQuGOt6uRIuOsh\nurl3hdO3LU/RV/r7OjjeyrHlHo9w2lzBdAxjHhh9/yWZYxIIm2NszJJ+svfDDNwB\nwxC8yAycu0a77w32ebuaez0YXrQ6zjilUUpPEQ6nTDeNQ9eL/ePBB/pTS/qVb4Jr\nJHHj2Djoh9GznYHGVD94aEhzqJHuoBllUTgJkW/2mBcTA8xJzCjoCe1ccqieBznr\nPRSyUcktIH7+1/gFO61uIYRfseQ9xJkizUnylbw4P6PxPseiLgO23DARcYpExOGB\nxL7bKccsi+fC16RwnomU5YFUkHxtH10UrjFPdBFyEUZm49A9nWgzPdEDpHSgT8E=\n=QVo3\n-----END PGP SIGNATURE-----\n", "payload": "tree 55bc3d175a441019bdf74d555a1be5af82805a09\nparent ef119d704d87a05435ea97ef4161529142313a9b\nparent edae82e5e4b29718ee060b86cffa0d702cabc713\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1643023790 +0100\ncommitter GitHub <noreply@github.com> 1643023790 +0100\n\nRollup merge of #92513 - Xuanwo:path-buf, r=dtolnay\n\nstd: Implement try_reserve and try_reserve_exact on PathBuf\n\nPart of https://github.com/rust-lang/rust/issues/91789\n\nSigned-off-by: Xuanwo <github@xuanwo.io>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b92a1e9c20327c26097a7ddf55a022d2ea58fbf5", "html_url": "https://github.com/rust-lang/rust/commit/b92a1e9c20327c26097a7ddf55a022d2ea58fbf5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b92a1e9c20327c26097a7ddf55a022d2ea58fbf5/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ef119d704d87a05435ea97ef4161529142313a9b", "url": "https://api.github.com/repos/rust-lang/rust/commits/ef119d704d87a05435ea97ef4161529142313a9b", "html_url": "https://github.com/rust-lang/rust/commit/ef119d704d87a05435ea97ef4161529142313a9b"}, {"sha": "edae82e5e4b29718ee060b86cffa0d702cabc713", "url": "https://api.github.com/repos/rust-lang/rust/commits/edae82e5e4b29718ee060b86cffa0d702cabc713", "html_url": "https://github.com/rust-lang/rust/commit/edae82e5e4b29718ee060b86cffa0d702cabc713"}], "stats": {"total": 19, "additions": 19, "deletions": 0}, "files": [{"sha": "e540f86016038fcdcc010cae006709cd1064eefe", "filename": "library/std/src/path.rs", "status": "modified", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/b92a1e9c20327c26097a7ddf55a022d2ea58fbf5/library%2Fstd%2Fsrc%2Fpath.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b92a1e9c20327c26097a7ddf55a022d2ea58fbf5/library%2Fstd%2Fsrc%2Fpath.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fpath.rs?ref=b92a1e9c20327c26097a7ddf55a022d2ea58fbf5", "patch": "@@ -72,6 +72,7 @@ mod tests;\n \n use crate::borrow::{Borrow, Cow};\n use crate::cmp;\n+use crate::collections::TryReserveError;\n use crate::error::Error;\n use crate::fmt;\n use crate::fs;\n@@ -1512,6 +1513,15 @@ impl PathBuf {\n         self.inner.reserve(additional)\n     }\n \n+    /// Invokes [`try_reserve`] on the underlying instance of [`OsString`].\n+    ///\n+    /// [`try_reserve`]: OsString::try_reserve\n+    #[unstable(feature = \"try_reserve_2\", issue = \"91789\")]\n+    #[inline]\n+    pub fn try_reserve(&mut self, additional: usize) -> Result<(), TryReserveError> {\n+        self.inner.try_reserve(additional)\n+    }\n+\n     /// Invokes [`reserve_exact`] on the underlying instance of [`OsString`].\n     ///\n     /// [`reserve_exact`]: OsString::reserve_exact\n@@ -1521,6 +1531,15 @@ impl PathBuf {\n         self.inner.reserve_exact(additional)\n     }\n \n+    /// Invokes [`try_reserve_exact`] on the underlying instance of [`OsString`].\n+    ///\n+    /// [`try_reserve_exact`]: OsString::try_reserve_exact\n+    #[unstable(feature = \"try_reserve_2\", issue = \"91789\")]\n+    #[inline]\n+    pub fn try_reserve_exact(&mut self, additional: usize) -> Result<(), TryReserveError> {\n+        self.inner.try_reserve_exact(additional)\n+    }\n+\n     /// Invokes [`shrink_to_fit`] on the underlying instance of [`OsString`].\n     ///\n     /// [`shrink_to_fit`]: OsString::shrink_to_fit"}]}