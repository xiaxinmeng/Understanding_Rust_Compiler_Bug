{"sha": "d1fd7d49a773d5b5921a659d9c1222b662b991d5", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQxZmQ3ZDQ5YTc3M2Q1YjU5MjFhNjU5ZDljMTIyMmI2NjJiOTkxZDU=", "commit": {"author": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2011-12-01T19:31:29Z"}, "committer": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2011-12-01T19:31:29Z"}, "message": "Build infra and minor build-enabling bugfixes for cargo.", "tree": {"sha": "0e600f3deb450e7ed6f22cdad9e9ca2235b3c5a0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0e600f3deb450e7ed6f22cdad9e9ca2235b3c5a0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d1fd7d49a773d5b5921a659d9c1222b662b991d5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d1fd7d49a773d5b5921a659d9c1222b662b991d5", "html_url": "https://github.com/rust-lang/rust/commit/d1fd7d49a773d5b5921a659d9c1222b662b991d5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d1fd7d49a773d5b5921a659d9c1222b662b991d5/comments", "author": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "committer": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fa9e3e8d9aa13296e8bc0526e32085ddc7ca3c66", "url": "https://api.github.com/repos/rust-lang/rust/commits/fa9e3e8d9aa13296e8bc0526e32085ddc7ca3c66", "html_url": "https://github.com/rust-lang/rust/commit/fa9e3e8d9aa13296e8bc0526e32085ddc7ca3c66"}], "stats": {"total": 51, "additions": 42, "deletions": 9}, "files": [{"sha": "4f23ec4f6698940fb01cfbd87e46a005e9be4a31", "filename": "Makefile.in", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/d1fd7d49a773d5b5921a659d9c1222b662b991d5/Makefile.in", "raw_url": "https://github.com/rust-lang/rust/raw/d1fd7d49a773d5b5921a659d9c1222b662b991d5/Makefile.in", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Makefile.in?ref=d1fd7d49a773d5b5921a659d9c1222b662b991d5", "patch": "@@ -343,9 +343,10 @@ TSREQS :=\t\t\t\t\t\t\t\t\t\t\t\\\n \t$(foreach target,$(CFG_TARGET_TRIPLES),\t\t\t\\\n \t\t$(SREQ3_T_$(target)_H_$(CFG_HOST_TRIPLE)))\n FUZZ := $(HBIN3_H_$(CFG_HOST_TRIPLE))/fuzzer$(X)\n+CARGO := $(HBIN3_H_$(CFG_HOST_TRIPLE))/cargo$(X)\n \n #all: $(SREQ3$(CFG_HOST_TRIPLE)) $(GENERATED) $(DOCS) $(FUZZ)\n-all: $(TSREQS) $(GENERATED) $(DOCS) $(FUZZ)\n+all: $(TSREQS) $(GENERATED) $(DOCS) $(FUZZ) $(CARGO)\n \n endif\n "}, {"sha": "071b4ae0350a15b3c26637e1ce069190717b58b0", "filename": "mk/clean.mk", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d1fd7d49a773d5b5921a659d9c1222b662b991d5/mk%2Fclean.mk", "raw_url": "https://github.com/rust-lang/rust/raw/d1fd7d49a773d5b5921a659d9c1222b662b991d5/mk%2Fclean.mk", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/mk%2Fclean.mk?ref=d1fd7d49a773d5b5921a659d9c1222b662b991d5", "patch": "@@ -54,6 +54,7 @@ define CLEAN_HOST_STAGE_N\n clean$(1)_H_$(2):\n \t$(Q)rm -f $$(HBIN$(1)_H_$(2))/rustc$(X)\n \t$(Q)rm -f $$(HBIN$(1)_H_$(2))/fuzzer$(X)\n+\t$(Q)rm -f $$(HBIN$(1)_H_$(2))/cargo$(X)\n \t$(Q)rm -f $$(HLIB$(1)_H_$(2))/$(CFG_RUNTIME)\n \t$(Q)rm -f $$(HLIB$(1)_H_$(2))/$(CFG_STDLIB)\n \t$(Q)rm -f $$(HLIB$(1)_H_$(2))/$(CFG_RUSTLLVM)"}, {"sha": "54fcfdeb013490f1c3bc1d3401500ee3923462d3", "filename": "mk/dist.mk", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d1fd7d49a773d5b5921a659d9c1222b662b991d5/mk%2Fdist.mk", "raw_url": "https://github.com/rust-lang/rust/raw/d1fd7d49a773d5b5921a659d9c1222b662b991d5/mk%2Fdist.mk", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/mk%2Fdist.mk?ref=d1fd7d49a773d5b5921a659d9c1222b662b991d5", "patch": "@@ -52,6 +52,8 @@ PKG_FILES = \\\n     $(FUZZER_INPUTS)                           \\\n     $(COMPILETEST_CRATE)                       \\\n     $(COMPILETEST_INPUTS)                      \\\n+    $(CARGO_CRATE)                             \\\n+    $(CARGO_INPUTS)                            \\\n     $(PKG_PP_EXAMPLES)                         \\\n     $(MKFILE_DEPS)\n "}, {"sha": "7ee3cee8c416ea6617d0925b4a8865fffaebe323", "filename": "mk/pp.mk", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/d1fd7d49a773d5b5921a659d9c1222b662b991d5/mk%2Fpp.mk", "raw_url": "https://github.com/rust-lang/rust/raw/d1fd7d49a773d5b5921a659d9c1222b662b991d5/mk%2Fpp.mk", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/mk%2Fpp.mk?ref=d1fd7d49a773d5b5921a659d9c1222b662b991d5", "patch": "@@ -4,9 +4,10 @@ ifdef PPFILES\n else\n   PP_INPUTS = $(wildcard $(addprefix $(S)src/lib/,*.rs */*.rs)) \\\n               $(wildcard $(addprefix $(S)src/comp/,*.rs */*.rs */*/*.rs)) \\\n-              $(wildcard $(S)src/test/*/*.rs   \\\n+              $(wildcard $(S)src/test/*/*.rs    \\\n                          $(S)src/test/*/*/*.rs) \\\n-              $(wildcard $(S)src/fuzzer/*.rs)\n+              $(wildcard $(S)src/fuzzer/*.rs)   \\\n+              $(wildcard $(S)src/cargo/*.rs)\n \n   PP_INPUTS_FILTERED = $(shell echo $(PP_INPUTS) | xargs grep -L \\\n                        \"no-reformat\\|xfail-pretty\\|xfail-test\")"}, {"sha": "3a944f76f32a3003c404894572a599afe6e5d0d0", "filename": "mk/tools.mk", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/d1fd7d49a773d5b5921a659d9c1222b662b991d5/mk%2Ftools.mk", "raw_url": "https://github.com/rust-lang/rust/raw/d1fd7d49a773d5b5921a659d9c1222b662b991d5/mk%2Ftools.mk", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/mk%2Ftools.mk?ref=d1fd7d49a773d5b5921a659d9c1222b662b991d5", "patch": "@@ -8,6 +8,10 @@ FUZZER_INPUTS := $(wildcard $(addprefix $(S)src/fuzzer/, *.rs))\n COMPILETEST_CRATE := $(S)src/compiletest/compiletest.rc\n COMPILETEST_INPUTS := $(wildcard $(S)src/compiletest/*rs)\n \n+# Cargo, the package manager\n+CARGO_CRATE := $(S)src/cargo/cargo.rc\n+CARGO_INPUTS := $(wildcard $(S)src/cargo/*rs)\n+\n # FIXME: These are only built for the host arch. Eventually we'll\n # have tools that need to built for other targets.\n define TOOLS_STAGE_N\n@@ -43,6 +47,20 @@ $$(HBIN$(2)_H_$(4))/compiletest$$(X):\t\t\t\t\\\n \t@$$(call E, cp: $$@)\n \t$$(Q)cp $$< $$@\n \n+$$(TBIN$(1)_T_$(4)_H_$(3))/cargo$$(X):\t\t\t\t\\\n+\t\t$$(CARGO_CRATE) $$(CARGO_INPUTS)\t\t\t\\\n+\t\t$$(TSREQ$(1)_T_$(4)_H_$(3))\t\t\t\t\t\\\n+\t\t$$(TLIB$(1)_T_$(4)_H_$(3))/$$(CFG_STDLIB)   \\\n+\t\t$$(TLIB$(1)_T_$(4)_H_$(3))/$$(CFG_LIBRUSTC)\n+\t@$$(call E, compile_and_link: $$@)\n+\t$$(STAGE$(1)_T_$(4)_H_$(3)) -o $$@ $$<\n+\n+$$(HBIN$(2)_H_$(4))/cargo$$(X):\t\t\t\t\t\\\n+\t\t$$(TBIN$(1)_T_$(4)_H_$(3))/cargo$$(X)\t\\\n+\t\t$$(HSREQ$(2)_$(4))\n+\t@$$(call E, cp: $$@)\n+\t$$(Q)cp $$< $$@\n+\n endef\n \n $(foreach host,$(CFG_TARGET_TRIPLES),\t\t\t\t\\"}, {"sha": "93d58f6dbad479b43cefdaa11dfada3eb329abf8", "filename": "src/cargo/cargo.rc", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/d1fd7d49a773d5b5921a659d9c1222b662b991d5/src%2Fcargo%2Fcargo.rc", "raw_url": "https://github.com/rust-lang/rust/raw/d1fd7d49a773d5b5921a659d9c1222b662b991d5/src%2Fcargo%2Fcargo.rc", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcargo%2Fcargo.rc?ref=d1fd7d49a773d5b5921a659d9c1222b662b991d5", "patch": "@@ -0,0 +1,14 @@\n+// -*- rust -*-\n+\n+// cargo.rs - Rust package manager\n+\n+use std;\n+use rustc;\n+\n+// Local Variables:\n+// fill-column: 78;\n+// indent-tabs-mode: nil\n+// c-basic-offset: 4\n+// buffer-file-coding-system: utf-8-unix\n+// compile-command: \"make -k -C $RBUILD 2>&1 | sed -e 's/\\\\/x\\\\//x:\\\\//g'\";\n+// End:"}, {"sha": "7da29ab88a02e8593527f3cf4930391b588ae64f", "filename": "src/cargo/cargo.rs", "status": "renamed", "additions": 2, "deletions": 6, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/d1fd7d49a773d5b5921a659d9c1222b662b991d5/src%2Fcargo%2Fcargo.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d1fd7d49a773d5b5921a659d9c1222b662b991d5/src%2Fcargo%2Fcargo.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcargo%2Fcargo.rs?ref=d1fd7d49a773d5b5921a659d9c1222b662b991d5", "patch": "@@ -1,8 +1,5 @@\n // cargo.rs - Rust package manager\n \n-use rustc;\n-use std;\n-\n import rustc::syntax::{ast, codemap, visit};\n import rustc::syntax::parse::parser;\n \n@@ -98,7 +95,7 @@ fn rest(s: str, start: uint) -> str {\n     }\n }\n \n-fn install_file(path: str) -> option::t<str> {\n+fn install_file(_path: str) -> option::t<str> {\n     let wd = tempfile::mkdtemp(\"/tmp/cargo-work-\", \"\");\n     ret wd;\n }\n@@ -110,7 +107,7 @@ fn cmd_install(argv: [str]) {\n         ret;\n     }\n \n-    let wd = if str::starts_with(argv[2], \"file:\") {\n+    let _wd = if str::starts_with(argv[2], \"file:\") {\n         let path = rest(argv[2], 5u);\n         install_file(path)\n     } else {\n@@ -132,4 +129,3 @@ fn main(argv: [str]) {\n         _ { cmd_usage(); }\n     }\n }\n-", "previous_filename": "src/cargo.rs"}]}