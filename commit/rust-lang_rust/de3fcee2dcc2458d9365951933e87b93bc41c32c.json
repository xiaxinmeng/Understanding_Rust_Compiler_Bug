{"sha": "de3fcee2dcc2458d9365951933e87b93bc41c32c", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRlM2ZjZWUyZGNjMjQ1OGQ5MzY1OTUxOTMzZTg3YjkzYmM0MWMzMmM=", "commit": {"author": {"name": "jbranchaud", "email": "jbranchaud@gmail.com", "date": "2014-12-07T23:47:00Z"}, "committer": {"name": "jbranchaud", "email": "jbranchaud@gmail.com", "date": "2014-12-09T17:11:50Z"}, "message": "Add a doctest for the std::string::as_string method.\n\nChange Example to Examples.\n\nAdd a doctest that better demonstrates the utility of as_string.\n\nUpdate the doctest example to use String instead of &String.", "tree": {"sha": "f8ae386208fd829fd141e274718d548e0146d80a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f8ae386208fd829fd141e274718d548e0146d80a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/de3fcee2dcc2458d9365951933e87b93bc41c32c", "comment_count": 5, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/de3fcee2dcc2458d9365951933e87b93bc41c32c", "html_url": "https://github.com/rust-lang/rust/commit/de3fcee2dcc2458d9365951933e87b93bc41c32c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/de3fcee2dcc2458d9365951933e87b93bc41c32c/comments", "author": {"login": "jbranchaud", "id": 694063, "node_id": "MDQ6VXNlcjY5NDA2Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/694063?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jbranchaud", "html_url": "https://github.com/jbranchaud", "followers_url": "https://api.github.com/users/jbranchaud/followers", "following_url": "https://api.github.com/users/jbranchaud/following{/other_user}", "gists_url": "https://api.github.com/users/jbranchaud/gists{/gist_id}", "starred_url": "https://api.github.com/users/jbranchaud/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jbranchaud/subscriptions", "organizations_url": "https://api.github.com/users/jbranchaud/orgs", "repos_url": "https://api.github.com/users/jbranchaud/repos", "events_url": "https://api.github.com/users/jbranchaud/events{/privacy}", "received_events_url": "https://api.github.com/users/jbranchaud/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jbranchaud", "id": 694063, "node_id": "MDQ6VXNlcjY5NDA2Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/694063?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jbranchaud", "html_url": "https://github.com/jbranchaud", "followers_url": "https://api.github.com/users/jbranchaud/followers", "following_url": "https://api.github.com/users/jbranchaud/following{/other_user}", "gists_url": "https://api.github.com/users/jbranchaud/gists{/gist_id}", "starred_url": "https://api.github.com/users/jbranchaud/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jbranchaud/subscriptions", "organizations_url": "https://api.github.com/users/jbranchaud/orgs", "repos_url": "https://api.github.com/users/jbranchaud/repos", "events_url": "https://api.github.com/users/jbranchaud/events{/privacy}", "received_events_url": "https://api.github.com/users/jbranchaud/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "77cd5cc54eda4243614be32b893db512beab0f8e", "url": "https://api.github.com/repos/rust-lang/rust/commits/77cd5cc54eda4243614be32b893db512beab0f8e", "html_url": "https://github.com/rust-lang/rust/commit/77cd5cc54eda4243614be32b893db512beab0f8e"}], "stats": {"total": 13, "additions": 13, "deletions": 0}, "files": [{"sha": "aa344ccbffed2d9b8cffdeb6422a9949644b6bae", "filename": "src/libcollections/string.rs", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/de3fcee2dcc2458d9365951933e87b93bc41c32c/src%2Flibcollections%2Fstring.rs", "raw_url": "https://github.com/rust-lang/rust/raw/de3fcee2dcc2458d9365951933e87b93bc41c32c/src%2Flibcollections%2Fstring.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcollections%2Fstring.rs?ref=de3fcee2dcc2458d9365951933e87b93bc41c32c", "patch": "@@ -880,6 +880,19 @@ impl<'a> Deref<String> for DerefString<'a> {\n }\n \n /// Convert a string slice to a wrapper type providing a `&String` reference.\n+///\n+/// # Examples\n+///\n+/// ```\n+/// use std::string::as_string;\n+///\n+/// fn string_consumer(s: String) {\n+///     assert_eq!(s, \"foo\".to_string());\n+/// }\n+///\n+/// let string = as_string(\"foo\").clone();\n+/// string_consumer(string);\n+/// ```\n #[experimental]\n pub fn as_string<'a>(x: &'a str) -> DerefString<'a> {\n     DerefString { x: as_vec(x.as_bytes()) }"}]}