{"sha": "aa5a9bc15233960b8c375e1fa45fd11e5ae5b6cb", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFhNWE5YmMxNTIzMzk2MGI4YzM3NWUxZmE0NWZkMTFlNWFlNWI2Y2I=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2019-06-29T12:15:05Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2019-06-29T12:15:05Z"}, "message": "some module comments", "tree": {"sha": "3af9c39c1a1c83d12eeabeeb1c2dc661b57be206", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3af9c39c1a1c83d12eeabeeb1c2dc661b57be206"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/aa5a9bc15233960b8c375e1fa45fd11e5ae5b6cb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/aa5a9bc15233960b8c375e1fa45fd11e5ae5b6cb", "html_url": "https://github.com/rust-lang/rust/commit/aa5a9bc15233960b8c375e1fa45fd11e5ae5b6cb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/aa5a9bc15233960b8c375e1fa45fd11e5ae5b6cb/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "857305ff6785251809551217f181b4f4f4f041b3", "url": "https://api.github.com/repos/rust-lang/rust/commits/857305ff6785251809551217f181b4f4f4f041b3", "html_url": "https://github.com/rust-lang/rust/commit/857305ff6785251809551217f181b4f4f4f041b3"}], "stats": {"total": 15, "additions": 11, "deletions": 4}, "files": [{"sha": "616e11a51561f00288f97234eabdc58ea66d401d", "filename": "src/eval.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/aa5a9bc15233960b8c375e1fa45fd11e5ae5b6cb/src%2Feval.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aa5a9bc15233960b8c375e1fa45fd11e5ae5b6cb/src%2Feval.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Feval.rs?ref=aa5a9bc15233960b8c375e1fa45fd11e5ae5b6cb", "patch": "@@ -1,3 +1,5 @@\n+//! Main evaluator loop and setting up the initial stack frame.\n+\n use rand::rngs::StdRng;\n use rand::SeedableRng;\n "}, {"sha": "9785d6a45560cc62d7c5a398553d5cc47e8eed72", "filename": "src/machine.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/aa5a9bc15233960b8c375e1fa45fd11e5ae5b6cb/src%2Fmachine.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aa5a9bc15233960b8c375e1fa45fd11e5ae5b6cb/src%2Fmachine.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fmachine.rs?ref=aa5a9bc15233960b8c375e1fa45fd11e5ae5b6cb", "patch": "@@ -1,3 +1,6 @@\n+//! Global machine state as well as implementation of the interpreter engine\n+//! `Machine` trait.\n+\n use std::rc::Rc;\n use std::borrow::Cow;\n use std::collections::HashMap;"}, {"sha": "f2cbd89f64da642443647e61c62f35ee284f3c07", "filename": "src/range_map.rs", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/aa5a9bc15233960b8c375e1fa45fd11e5ae5b6cb/src%2Frange_map.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aa5a9bc15233960b8c375e1fa45fd11e5ae5b6cb/src%2Frange_map.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frange_map.rs?ref=aa5a9bc15233960b8c375e1fa45fd11e5ae5b6cb", "patch": "@@ -1,5 +1,3 @@\n-#![allow(unused)]\n-\n //! Implements a map from integer indices to data.\n //! Rather than storing data for every index, internally, this maps entire ranges to the data.\n //! To this end, the APIs all work on ranges, not on individual integers. Ranges are split as\n@@ -8,7 +6,6 @@\n //! via the iteration APIs.\n \n use std::ops;\n-use std::num::NonZeroU64;\n \n use rustc::ty::layout::Size;\n \n@@ -158,7 +155,7 @@ impl<T> RangeMap<T> {\n                 let mut end_idx = first_idx; // when the loop is done, this is the first excluded element.\n                 loop {\n                     // Compute if `end` is the last element we need to look at.\n-                    let done = (self.v[end_idx].range.end >= offset+len);\n+                    let done = self.v[end_idx].range.end >= offset+len;\n                     // We definitely need to include `end`, so move the index.\n                     end_idx += 1;\n                     debug_assert!(done || end_idx < self.v.len(), \"iter_mut: end-offset {} is out-of-bounds\", offset+len);"}, {"sha": "6e5bbf50941bda4d724515736169fa457d8fc499", "filename": "src/stacked_borrows.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/aa5a9bc15233960b8c375e1fa45fd11e5ae5b6cb/src%2Fstacked_borrows.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aa5a9bc15233960b8c375e1fa45fd11e5ae5b6cb/src%2Fstacked_borrows.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fstacked_borrows.rs?ref=aa5a9bc15233960b8c375e1fa45fd11e5ae5b6cb", "patch": "@@ -1,3 +1,6 @@\n+//! Implements \"Stacked Borrows\".  See <https://github.com/rust-lang/unsafe-code-guidelines/blob/master/wip/stacked-borrows.md>\n+//! for further information.\n+\n use std::cell::RefCell;\n use std::collections::{HashMap, HashSet};\n use std::rc::Rc;"}, {"sha": "73c778f66d25d36998ed2f2100bbf14138e30304", "filename": "src/tls.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/aa5a9bc15233960b8c375e1fa45fd11e5ae5b6cb/src%2Ftls.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aa5a9bc15233960b8c375e1fa45fd11e5ae5b6cb/src%2Ftls.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftls.rs?ref=aa5a9bc15233960b8c375e1fa45fd11e5ae5b6cb", "patch": "@@ -1,3 +1,5 @@\n+//! Implement thread-local storage.\n+\n use std::collections::BTreeMap;\n \n use rustc_target::abi::LayoutOf;"}]}