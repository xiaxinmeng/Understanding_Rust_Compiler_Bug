{"sha": "3f517fb1ae1af9f10e0e7492f725b729202499cf", "node_id": "C_kwDOAAsO6NoAKDNmNTE3ZmIxYWUxYWY5ZjEwZTBlNzQ5MmY3MjViNzI5MjAyNDk5Y2Y", "commit": {"author": {"name": "Jacob Hoffman-Andrews", "email": "github@hoffman-andrews.com", "date": "2021-12-10T19:35:26Z"}, "committer": {"name": "Jacob Hoffman-Andrews", "email": "github@hoffman-andrews.com", "date": "2021-12-11T06:25:43Z"}, "message": "Split CSS classes for \"typedef\" vs \"associatedtype\".", "tree": {"sha": "eccebae4ffee1fe81cefaa27a640876bdd486750", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/eccebae4ffee1fe81cefaa27a640876bdd486750"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3f517fb1ae1af9f10e0e7492f725b729202499cf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3f517fb1ae1af9f10e0e7492f725b729202499cf", "html_url": "https://github.com/rust-lang/rust/commit/3f517fb1ae1af9f10e0e7492f725b729202499cf", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3f517fb1ae1af9f10e0e7492f725b729202499cf/comments", "author": {"login": "jsha", "id": 220205, "node_id": "MDQ6VXNlcjIyMDIwNQ==", "avatar_url": "https://avatars.githubusercontent.com/u/220205?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsha", "html_url": "https://github.com/jsha", "followers_url": "https://api.github.com/users/jsha/followers", "following_url": "https://api.github.com/users/jsha/following{/other_user}", "gists_url": "https://api.github.com/users/jsha/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsha/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsha/subscriptions", "organizations_url": "https://api.github.com/users/jsha/orgs", "repos_url": "https://api.github.com/users/jsha/repos", "events_url": "https://api.github.com/users/jsha/events{/privacy}", "received_events_url": "https://api.github.com/users/jsha/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jsha", "id": 220205, "node_id": "MDQ6VXNlcjIyMDIwNQ==", "avatar_url": "https://avatars.githubusercontent.com/u/220205?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsha", "html_url": "https://github.com/jsha", "followers_url": "https://api.github.com/users/jsha/followers", "following_url": "https://api.github.com/users/jsha/following{/other_user}", "gists_url": "https://api.github.com/users/jsha/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsha/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsha/subscriptions", "organizations_url": "https://api.github.com/users/jsha/orgs", "repos_url": "https://api.github.com/users/jsha/repos", "events_url": "https://api.github.com/users/jsha/events{/privacy}", "received_events_url": "https://api.github.com/users/jsha/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c8e0f97ad2e8efc71a7099ae1f67be8e7dcb5f6b", "url": "https://api.github.com/repos/rust-lang/rust/commits/c8e0f97ad2e8efc71a7099ae1f67be8e7dcb5f6b", "html_url": "https://github.com/rust-lang/rust/commit/c8e0f97ad2e8efc71a7099ae1f67be8e7dcb5f6b"}], "stats": {"total": 48, "additions": 31, "deletions": 17}, "files": [{"sha": "ad5d20550ee4cad3fbd19445087ff25e1d90fc20", "filename": "src/librustdoc/html/format.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3f517fb1ae1af9f10e0e7492f725b729202499cf/src%2Flibrustdoc%2Fhtml%2Fformat.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3f517fb1ae1af9f10e0e7492f725b729202499cf/src%2Flibrustdoc%2Fhtml%2Fformat.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fformat.rs?ref=3f517fb1ae1af9f10e0e7492f725b729202499cf", "patch": "@@ -944,7 +944,7 @@ fn fmt_type<'cx>(\n                 Ok((ref url, _, ref path)) if !f.alternate() => {\n                     write!(\n                         f,\n-                        \"<a class=\\\"type\\\" href=\\\"{url}#{shortty}.{name}\\\" \\\n+                        \"<a class=\\\"associatedtype\\\" href=\\\"{url}#{shortty}.{name}\\\" \\\n                                     title=\\\"type {path}::{name}\\\">{name}</a>\",\n                         url = url,\n                         shortty = ItemType::AssocType,"}, {"sha": "99cc9cecb1ea0e8a0773071e8a5c26743d840d7a", "filename": "src/librustdoc/html/render/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3f517fb1ae1af9f10e0e7492f725b729202499cf/src%2Flibrustdoc%2Fhtml%2Frender%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3f517fb1ae1af9f10e0e7492f725b729202499cf/src%2Flibrustdoc%2Fhtml%2Frender%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Frender%2Fmod.rs?ref=3f517fb1ae1af9f10e0e7492f725b729202499cf", "patch": "@@ -797,7 +797,7 @@ fn assoc_type(\n ) {\n     write!(\n         w,\n-        \"{}type <a href=\\\"{}\\\" class=\\\"type\\\">{}</a>\",\n+        \"{}type <a href=\\\"{}\\\" class=\\\"associatedtype\\\">{}</a>\",\n         extra,\n         naive_assoc_href(it, link, cx),\n         it.name.as_ref().unwrap()"}, {"sha": "9b98fd7582d48319049099e557c19e60a01647cf", "filename": "src/librustdoc/html/static/css/themes/ayu.css", "status": "modified", "additions": 10, "deletions": 2, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/3f517fb1ae1af9f10e0e7492f725b729202499cf/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fcss%2Fthemes%2Fayu.css", "raw_url": "https://github.com/rust-lang/rust/raw/3f517fb1ae1af9f10e0e7492f725b729202499cf/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fcss%2Fthemes%2Fayu.css", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fcss%2Fthemes%2Fayu.css?ref=3f517fb1ae1af9f10e0e7492f725b729202499cf", "patch": "@@ -190,6 +190,12 @@ pre, .rustdoc.source .example-wrap {\n .content span.type, .content a.type {\n \tcolor: #39AFD7;\n }\n+.content span.type,\n+.content a.type,\n+.block a.current.type { color: #39AFD7; }\n+.content span.associatedtype,\n+.content a.associatedtype,\n+.block a.current.associatedtype { color: #39AFD7; }\n .content span.fn, .content a.fn, .content span.method,\n .content a.method, .content span.tymethod,\n .content a.tymethod, .content .fnname {\n@@ -454,11 +460,12 @@ above the `@media (max-width: 700px)` rules due to a bug in the css checker */\n .block a.current.derive,.content span.macro,.content a.macro,.block a.current.macro {}\n .content span.struct,.content a.struct,.block a.current.struct {}\n #titles>button:hover,#titles>button.selected {}\n-.content span.type,.content a.type,.block a.current.type {}\n+.content span.typedef,.content a.typedef,.block a.current.typedef {}\n .content span.union,.content a.union,.block a.current.union {}\n pre.rust .lifetime {}\n .stab.unstable {}\n-h2,h3:not(.impl):not(.method):not(.type):not(.tymethod),h4:not(.method):not(.type):not(.tymethod) {}\n+h2,\n+h3:not(.impl):not(.method):not(.type):not(.tymethod), h4:not(.method):not(.type):not(.tymethod) {}\n .content span.enum,.content a.enum,.block a.current.enum {}\n .content span.constant,.content a.constant,.block a.current.constant,.content span.static,\n .content a.static, .block a.current.static {}\n@@ -495,6 +502,7 @@ a.result-fn:focus,\n a.result-method:focus,\n a.result-tymethod:focus {}\n a.result-type:focus {}\n+a.result-associatedtype:focus {}\n a.result-foreigntype:focus {}\n a.result-attr:focus,\n a.result-derive:focus,"}, {"sha": "968a6218d984fa90ae284b0a628fe7f11eda8754", "filename": "src/librustdoc/html/static/css/themes/dark.css", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/3f517fb1ae1af9f10e0e7492f725b729202499cf/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fcss%2Fthemes%2Fdark.css", "raw_url": "https://github.com/rust-lang/rust/raw/3f517fb1ae1af9f10e0e7492f725b729202499cf/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fcss%2Fthemes%2Fdark.css", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fcss%2Fthemes%2Fdark.css?ref=3f517fb1ae1af9f10e0e7492f725b729202499cf", "patch": "@@ -126,7 +126,8 @@ a.result-union:focus { background-color: #194e9f; }\n a.result-fn:focus,\n a.result-method:focus,\n a.result-tymethod:focus { background-color: #4950ed; }\n-a.result-type:focus { background-color: #884719; }\n+a.result-type:focus { background-color: #194e9f; }\n+a.result-associatedtype:focus { background-color: #884719; }\n a.result-foreigntype:focus { background-color: #194e9f; }\n a.result-attr:focus,\n a.result-derive:focus,\n@@ -140,7 +141,10 @@ a.result-keyword:focus { background-color: #884719; }\n \n .content span.enum, .content a.enum, .block a.current.enum { color: #2dbfb8; }\n .content span.struct, .content a.struct, .block a.current.struct { color: #2dbfb8; }\n-.content span.type, .content a.type, .block a.current.type { color: #D2991D; }\n+.content span.type, .content a.type, .block a.current.type { color: #2dbfb8; }\n+.content span.associatedtype,\n+.content a.associatedtype,\n+.block a.current.associatedtype { color: #D2991D; }\n .content span.foreigntype, .content a.foreigntype, .block a.current.foreigntype { color: #2dbfb8; }\n .content span.attr, .content a.attr, .block a.current.attr,\n .content span.derive, .content a.derive, .block a.current.derive,"}, {"sha": "14b8461116fca526a2be37706db322149df19d7b", "filename": "src/librustdoc/html/static/css/themes/light.css", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/3f517fb1ae1af9f10e0e7492f725b729202499cf/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fcss%2Fthemes%2Flight.css", "raw_url": "https://github.com/rust-lang/rust/raw/3f517fb1ae1af9f10e0e7492f725b729202499cf/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fcss%2Fthemes%2Flight.css", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fcss%2Fthemes%2Flight.css?ref=3f517fb1ae1af9f10e0e7492f725b729202499cf", "patch": "@@ -126,7 +126,8 @@ a.result-union:focus { background-color: #e7b1a0; }\n a.result-fn:focus,\n a.result-method:focus,\n a.result-tymethod:focus { background-color: #c6afb3; }\n-a.result-type:focus { background-color: #afc6e4; }\n+a.result-type:focus { background-color: #e7b1a0; }\n+a.result-associatedtype:focus { background-color: #afc6e4; }\n a.result-foreigntype:focus { background-color: #e7b1a0; }\n a.result-attr:focus,\n a.result-derive:focus,\n@@ -140,8 +141,11 @@ a.result-keyword:focus { background-color: #afc6e4; }\n \n .content span.enum, .content a.enum, .block a.current.enum { color: #AD378A; }\n .content span.struct, .content a.struct, .block a.current.struct { color: #AD378A; }\n-.content span.type, .content a.type, .block a.current.type { color:  #3873AD; }\n-.content span.foreigntype, .content a.foreigntype, .block a.current.foreigntype { color: #AD378A; }\n+.content span.type, .content a.type, .block a.current.type { color:  #AD378A; }\n+.content span.foreigntype, .content a.foreigntype, .block a.current.foreigntype { color: #3873AD; }\n+.content span.associatedtype,\n+.content a.associatedtype,\n+.block a.current.associatedtype { color: #3873AD; }\n .content span.attr, .content a.attr, .block a.current.attr,\n .content span.derive, .content a.derive, .block a.current.derive,\n .content span.macro, .content a.macro, .block a.current.macro { color: #068000; }"}, {"sha": "a22167d8a1d81998bb817be0250b87b4d896976f", "filename": "src/test/rustdoc-gui/font-weight.goml", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/3f517fb1ae1af9f10e0e7492f725b729202499cf/src%2Ftest%2Frustdoc-gui%2Ffont-weight.goml", "raw_url": "https://github.com/rust-lang/rust/raw/3f517fb1ae1af9f10e0e7492f725b729202499cf/src%2Ftest%2Frustdoc-gui%2Ffont-weight.goml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-gui%2Ffont-weight.goml?ref=3f517fb1ae1af9f10e0e7492f725b729202499cf", "patch": "@@ -28,8 +28,8 @@ goto: file://|DOC_PATH|/lib2/trait.Trait.html\n assert-count: (\"//*[@class='docblock item-decl']/pre[@class='rust trait']/code/a[@class='constant']//text()/parent::*\", 1)\n assert-css: (\"//*[@class='docblock item-decl']/pre[@class='rust trait']/code/a[@class='constant']//text()/parent::*\", {\"font-weight\": \"400\"})\n \n-assert-count: (\".methods .type\", 1)\n-assert-css: (\".methods .type\", {\"font-weight\": \"600\"})\n+assert-count: (\".methods .associatedtype\", 1)\n+assert-css: (\".methods .associatedtype\", {\"font-weight\": \"600\"})\n assert-count: (\".methods .constant\", 1)\n assert-css: (\".methods .constant\", {\"font-weight\": \"600\"})\n assert-css: (\".methods .method\", {\"font-weight\": \"600\"})"}, {"sha": "a409d64131afdfa96de35c418376f41569be6738", "filename": "src/test/rustdoc/assoc-item-cast.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/3f517fb1ae1af9f10e0e7492f725b729202499cf/src%2Ftest%2Frustdoc%2Fassoc-item-cast.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3f517fb1ae1af9f10e0e7492f725b729202499cf/src%2Ftest%2Frustdoc%2Fassoc-item-cast.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fassoc-item-cast.rs?ref=3f517fb1ae1af9f10e0e7492f725b729202499cf", "patch": "@@ -1,6 +1,5 @@\n #![crate_name = \"foo\"]\n \n-\n pub trait Expression {\n     type SqlType;\n }\n@@ -11,5 +10,5 @@ pub trait AsExpression<T> {\n }\n \n // @has foo/type.AsExprOf.html\n-// @has - '//*[@class=\"rust typedef\"]' 'type AsExprOf<Item, Type> = <Item as AsExpression<Type>>::Expression;'\n+// @has - '//pre[@class=\"rust typedef\"]' 'type AsExprOf<Item, Type> = <Item as AsExpression<Type>>::Expression;'\n pub type AsExprOf<Item, Type> = <Item as AsExpression<Type>>::Expression;"}, {"sha": "db9adb4838e3e1e1889e6b69f3f6e7104f89f5f5", "filename": "src/test/rustdoc/trait-impl-items-links-and-anchors.rs", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/3f517fb1ae1af9f10e0e7492f725b729202499cf/src%2Ftest%2Frustdoc%2Ftrait-impl-items-links-and-anchors.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3f517fb1ae1af9f10e0e7492f725b729202499cf/src%2Ftest%2Frustdoc%2Ftrait-impl-items-links-and-anchors.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Ftrait-impl-items-links-and-anchors.rs?ref=3f517fb1ae1af9f10e0e7492f725b729202499cf", "patch": "@@ -6,9 +6,8 @@ pub trait MyTrait {\n     fn defaulted_override(&self) {}\n }\n \n-\n impl MyTrait for String {\n-    // @has trait_impl_items_links_and_anchors/trait.MyTrait.html '//div[@id=\"associatedtype.Assoc-1\"]//a[@class=\"type\"]/@href' #associatedtype.Assoc\n+    // @has trait_impl_items_links_and_anchors/trait.MyTrait.html '//div[@id=\"associatedtype.Assoc-1\"]//a[@class=\"associatedtype\"]/@href' #associatedtype.Assoc\n     // @has trait_impl_items_links_and_anchors/trait.MyTrait.html '//div[@id=\"associatedtype.Assoc-1\"]//a[@class=\"anchor\"]/@href' #associatedtype.Assoc-1\n     type Assoc = ();\n     // @has trait_impl_items_links_and_anchors/trait.MyTrait.html '//div[@id=\"associatedconstant.VALUE-1\"]//a[@class=\"constant\"]/@href' #associatedconstant.VALUE\n@@ -23,7 +22,7 @@ impl MyTrait for String {\n }\n \n impl MyTrait for Vec<u8> {\n-    // @has trait_impl_items_links_and_anchors/trait.MyTrait.html '//div[@id=\"associatedtype.Assoc-2\"]//a[@class=\"type\"]/@href' #associatedtype.Assoc\n+    // @has trait_impl_items_links_and_anchors/trait.MyTrait.html '//div[@id=\"associatedtype.Assoc-2\"]//a[@class=\"associatedtype\"]/@href' #associatedtype.Assoc\n     // @has trait_impl_items_links_and_anchors/trait.MyTrait.html '//div[@id=\"associatedtype.Assoc-2\"]//a[@class=\"anchor\"]/@href' #associatedtype.Assoc-2\n     type Assoc = ();\n     // @has trait_impl_items_links_and_anchors/trait.MyTrait.html '//div[@id=\"associatedconstant.VALUE-2\"]//a[@class=\"constant\"]/@href' #associatedconstant.VALUE\n@@ -39,7 +38,7 @@ impl MyTrait for Vec<u8> {\n \n impl MyTrait for MyStruct {\n     // @has trait_impl_items_links_and_anchors/trait.MyTrait.html '//div[@id=\"associatedtype.Assoc-3\"]//a[@class=\"anchor\"]/@href' #associatedtype.Assoc-3\n-    // @has trait_impl_items_links_and_anchors/struct.MyStruct.html '//div[@id=\"associatedtype.Assoc\"]//a[@class=\"type\"]/@href' trait.MyTrait.html#associatedtype.Assoc\n+    // @has trait_impl_items_links_and_anchors/struct.MyStruct.html '//div[@id=\"associatedtype.Assoc\"]//a[@class=\"associatedtype\"]/@href' trait.MyTrait.html#associatedtype.Assoc\n     // @has trait_impl_items_links_and_anchors/struct.MyStruct.html '//div[@id=\"associatedtype.Assoc\"]//a[@class=\"anchor\"]/@href' #associatedtype.Assoc\n     type Assoc = bool;\n     // @has trait_impl_items_links_and_anchors/trait.MyTrait.html '//div[@id=\"associatedconstant.VALUE-3\"]//a[@class=\"anchor\"]/@href' #associatedconstant.VALUE-3"}]}