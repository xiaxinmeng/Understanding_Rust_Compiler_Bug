{"sha": "f0f449d6edda5a40057fc82ea02cc9abeae4d012", "node_id": "C_kwDOAAsO6NoAKGYwZjQ0OWQ2ZWRkYTVhNDAwNTdmYzgyZWEwMmNjOWFiZWFlNGQwMTI", "commit": {"author": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2021-09-18T01:56:30Z"}, "committer": {"name": "Caleb Cartwright", "email": "calebcartwright@users.noreply.github.com", "date": "2021-10-05T01:41:17Z"}, "message": "Wrap long array and slice patterns.\n\nCloses #4530.", "tree": {"sha": "ad80a8d64b438db68dd50ef74f7b178ea945bbfd", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ad80a8d64b438db68dd50ef74f7b178ea945bbfd"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f0f449d6edda5a40057fc82ea02cc9abeae4d012", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f0f449d6edda5a40057fc82ea02cc9abeae4d012", "html_url": "https://github.com/rust-lang/rust/commit/f0f449d6edda5a40057fc82ea02cc9abeae4d012", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f0f449d6edda5a40057fc82ea02cc9abeae4d012/comments", "author": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "calebcartwright", "id": 13042488, "node_id": "MDQ6VXNlcjEzMDQyNDg4", "avatar_url": "https://avatars.githubusercontent.com/u/13042488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/calebcartwright", "html_url": "https://github.com/calebcartwright", "followers_url": "https://api.github.com/users/calebcartwright/followers", "following_url": "https://api.github.com/users/calebcartwright/following{/other_user}", "gists_url": "https://api.github.com/users/calebcartwright/gists{/gist_id}", "starred_url": "https://api.github.com/users/calebcartwright/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/calebcartwright/subscriptions", "organizations_url": "https://api.github.com/users/calebcartwright/orgs", "repos_url": "https://api.github.com/users/calebcartwright/repos", "events_url": "https://api.github.com/users/calebcartwright/events{/privacy}", "received_events_url": "https://api.github.com/users/calebcartwright/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e3203ef5e6902e0bbb7b62ebd34b3d53cb5d28b8", "url": "https://api.github.com/repos/rust-lang/rust/commits/e3203ef5e6902e0bbb7b62ebd34b3d53cb5d28b8", "html_url": "https://github.com/rust-lang/rust/commit/e3203ef5e6902e0bbb7b62ebd34b3d53cb5d28b8"}], "stats": {"total": 29, "additions": 27, "deletions": 2}, "files": [{"sha": "ac24181c7805258b89c053d6c444a65709f79af6", "filename": "src/overflow.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/f0f449d6edda5a40057fc82ea02cc9abeae4d012/src%2Foverflow.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f0f449d6edda5a40057fc82ea02cc9abeae4d012/src%2Foverflow.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Foverflow.rs?ref=f0f449d6edda5a40057fc82ea02cc9abeae4d012", "patch": "@@ -77,6 +77,7 @@ pub(crate) enum OverflowableItem<'a> {\n     FieldDef(&'a ast::FieldDef),\n     TuplePatField(&'a TuplePatField<'a>),\n     Ty(&'a ast::Ty),\n+    Pat(&'a ast::Pat),\n }\n \n impl<'a> Rewrite for OverflowableItem<'a> {\n@@ -116,6 +117,7 @@ impl<'a> OverflowableItem<'a> {\n             OverflowableItem::FieldDef(sf) => f(*sf),\n             OverflowableItem::TuplePatField(pat) => f(*pat),\n             OverflowableItem::Ty(ty) => f(*ty),\n+            OverflowableItem::Pat(pat) => f(*pat),\n         }\n     }\n \n@@ -232,7 +234,7 @@ macro_rules! impl_into_overflowable_item_for_rustfmt_types {\n     }\n }\n \n-impl_into_overflowable_item_for_ast_node!(Expr, GenericParam, NestedMetaItem, FieldDef, Ty);\n+impl_into_overflowable_item_for_ast_node!(Expr, GenericParam, NestedMetaItem, FieldDef, Ty, Pat);\n impl_into_overflowable_item_for_rustfmt_types!([MacroArg], [SegmentParam, TuplePatField]);\n \n pub(crate) fn into_overflowable_list<'a, T>("}, {"sha": "34987b1d59e4b484bb9c49bde7e979c8d8db2c7a", "filename": "src/patterns.rs", "status": "modified", "additions": 11, "deletions": 1, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/f0f449d6edda5a40057fc82ea02cc9abeae4d012/src%2Fpatterns.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f0f449d6edda5a40057fc82ea02cc9abeae4d012/src%2Fpatterns.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fpatterns.rs?ref=f0f449d6edda5a40057fc82ea02cc9abeae4d012", "patch": "@@ -4,6 +4,7 @@ use rustc_span::{BytePos, Span};\n \n use crate::comment::{combine_strs_with_missing_comments, FindUncommented};\n use crate::config::lists::*;\n+use crate::config::Version;\n use crate::expr::{can_be_overflowed_expr, rewrite_unary_prefix, wrap_struct_field};\n use crate::lists::{\n     definitive_tactic, itemize_list, shape_for_tactic, struct_lit_formatting, struct_lit_shape,\n@@ -232,7 +233,7 @@ impl Rewrite for Pat {\n                 rewrite_tuple_pat(pat_vec, Some(path_str), self.span, context, shape)\n             }\n             PatKind::Lit(ref expr) => expr.rewrite(context, shape),\n-            PatKind::Slice(ref slice_pat) => {\n+            PatKind::Slice(ref slice_pat) if context.config.version() == Version::One => {\n                 let rw: Vec<String> = slice_pat\n                     .iter()\n                     .map(|p| {\n@@ -245,6 +246,15 @@ impl Rewrite for Pat {\n                     .collect();\n                 Some(format!(\"[{}]\", rw.join(\", \")))\n             }\n+            PatKind::Slice(ref slice_pat) => overflow::rewrite_with_square_brackets(\n+                context,\n+                \"\",\n+                slice_pat.iter(),\n+                shape,\n+                self.span,\n+                None,\n+                None,\n+            ),\n             PatKind::Struct(ref qself, ref path, ref fields, ellipsis) => {\n                 rewrite_struct_pat(qself, path, fields, ellipsis, self.span, context, shape)\n             }"}, {"sha": "9d2882abb3c1ccd0a45a60d37b896d13c2e868ff", "filename": "tests/source/issue-4530.rs", "status": "added", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/f0f449d6edda5a40057fc82ea02cc9abeae4d012/tests%2Fsource%2Fissue-4530.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f0f449d6edda5a40057fc82ea02cc9abeae4d012/tests%2Fsource%2Fissue-4530.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fsource%2Fissue-4530.rs?ref=f0f449d6edda5a40057fc82ea02cc9abeae4d012", "patch": "@@ -0,0 +1,4 @@\n+// rustfmt-version: Two\n+fn main() {\n+    let [aaaaaaaaaaaaaaaaaaaaaaaaaa, bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb, cccccccccccccccccccccccccc, ddddddddddddddddddddddddd] = panic!();\n+}"}, {"sha": "296dc559a9343175b9c3d2164e7c5620c68eec73", "filename": "tests/target/issue-4530.rs", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/f0f449d6edda5a40057fc82ea02cc9abeae4d012/tests%2Ftarget%2Fissue-4530.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f0f449d6edda5a40057fc82ea02cc9abeae4d012/tests%2Ftarget%2Fissue-4530.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fissue-4530.rs?ref=f0f449d6edda5a40057fc82ea02cc9abeae4d012", "patch": "@@ -0,0 +1,9 @@\n+// rustfmt-version: Two\n+fn main() {\n+    let [\n+        aaaaaaaaaaaaaaaaaaaaaaaaaa,\n+        bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb,\n+        cccccccccccccccccccccccccc,\n+        ddddddddddddddddddddddddd,\n+    ] = panic!();\n+}"}]}