{"sha": "ca0ef0fcf66b0fe913c19a3a00729af4494866e6", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNhMGVmMGZjZjY2YjBmZTkxM2MxOWEzYTAwNzI5YWY0NDk0ODY2ZTY=", "commit": {"author": {"name": "Vadim Petrochenkov", "email": "vadim.petrochenkov@gmail.com", "date": "2019-08-01T00:35:26Z"}, "committer": {"name": "Vadim Petrochenkov", "email": "vadim.petrochenkov@gmail.com", "date": "2019-08-01T22:59:01Z"}, "message": "librustc: Unconfigure tests during normal build", "tree": {"sha": "b736faca89df52ae7e3f93114a79b6ae24ea7112", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b736faca89df52ae7e3f93114a79b6ae24ea7112"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ca0ef0fcf66b0fe913c19a3a00729af4494866e6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ca0ef0fcf66b0fe913c19a3a00729af4494866e6", "html_url": "https://github.com/rust-lang/rust/commit/ca0ef0fcf66b0fe913c19a3a00729af4494866e6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ca0ef0fcf66b0fe913c19a3a00729af4494866e6/comments", "author": {"login": "petrochenkov", "id": 5751617, "node_id": "MDQ6VXNlcjU3NTE2MTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5751617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrochenkov", "html_url": "https://github.com/petrochenkov", "followers_url": "https://api.github.com/users/petrochenkov/followers", "following_url": "https://api.github.com/users/petrochenkov/following{/other_user}", "gists_url": "https://api.github.com/users/petrochenkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrochenkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrochenkov/subscriptions", "organizations_url": "https://api.github.com/users/petrochenkov/orgs", "repos_url": "https://api.github.com/users/petrochenkov/repos", "events_url": "https://api.github.com/users/petrochenkov/events{/privacy}", "received_events_url": "https://api.github.com/users/petrochenkov/received_events", "type": "User", "site_admin": false}, "committer": {"login": "petrochenkov", "id": 5751617, "node_id": "MDQ6VXNlcjU3NTE2MTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5751617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrochenkov", "html_url": "https://github.com/petrochenkov", "followers_url": "https://api.github.com/users/petrochenkov/followers", "following_url": "https://api.github.com/users/petrochenkov/following{/other_user}", "gists_url": "https://api.github.com/users/petrochenkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrochenkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrochenkov/subscriptions", "organizations_url": "https://api.github.com/users/petrochenkov/orgs", "repos_url": "https://api.github.com/users/petrochenkov/repos", "events_url": "https://api.github.com/users/petrochenkov/events{/privacy}", "received_events_url": "https://api.github.com/users/petrochenkov/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "42c5473d005c39e2d0262ba38e4ea6e1e0469455", "url": "https://api.github.com/repos/rust-lang/rust/commits/42c5473d005c39e2d0262ba38e4ea6e1e0469455", "html_url": "https://github.com/rust-lang/rust/commit/42c5473d005c39e2d0262ba38e4ea6e1e0469455"}], "stats": {"total": 60, "additions": 33, "deletions": 27}, "files": [{"sha": "8e0581b41ef7aeb99d4ae44659c4e0a4e9d8d7a7", "filename": "src/librustc/lib.rs", "status": "modified", "additions": 3, "deletions": 13, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/ca0ef0fcf66b0fe913c19a3a00729af4494866e6/src%2Flibrustc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca0ef0fcf66b0fe913c19a3a00729af4494866e6/src%2Flibrustc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Flib.rs?ref=ca0ef0fcf66b0fe913c19a3a00729af4494866e6", "patch": "@@ -80,6 +80,9 @@ extern crate libc;\n // librustc_driver and libtest.\n extern crate test as _;\n \n+#[cfg(test)]\n+mod tests;\n+\n #[macro_use]\n mod macros;\n \n@@ -138,18 +141,5 @@ pub mod util {\n // Allows macros to refer to this crate as `::rustc`\n extern crate self as rustc;\n \n-// FIXME(#27438): right now the unit tests of librustc don't refer to any actual\n-//                functions generated in librustc_data_structures (all\n-//                references are through generic functions), but statics are\n-//                referenced from time to time. Due to this bug we won't\n-//                actually correctly link in the statics unless we also\n-//                reference a function, so be sure to reference a dummy\n-//                function.\n-#[test]\n-fn noop() {\n-    rustc_data_structures::__noop_fix_for_27438();\n-}\n-\n-\n // Build the diagnostics array at the end so that the metadata includes error use sites.\n __build_diagnostic_array! { librustc, DIAGNOSTICS }"}, {"sha": "cf3ea2ffa9397f1a9bfa12ef9deccff8a74d2968", "filename": "src/librustc/tests.rs", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/ca0ef0fcf66b0fe913c19a3a00729af4494866e6/src%2Flibrustc%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca0ef0fcf66b0fe913c19a3a00729af4494866e6/src%2Flibrustc%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Ftests.rs?ref=ca0ef0fcf66b0fe913c19a3a00729af4494866e6", "patch": "@@ -0,0 +1,13 @@\n+use super::*;\n+\n+// FIXME(#27438): right now the unit tests of librustc don't refer to any actual\n+//                functions generated in librustc_data_structures (all\n+//                references are through generic functions), but statics are\n+//                referenced from time to time. Due to this bug we won't\n+//                actually correctly link in the statics unless we also\n+//                reference a function, so be sure to reference a dummy\n+//                function.\n+#[test]\n+fn noop() {\n+    rustc_data_structures::__noop_fix_for_27438();\n+}"}, {"sha": "7118d05204c3be500733e05294d2e26b879f256e", "filename": "src/librustc/util/common.rs", "status": "modified", "additions": 3, "deletions": 13, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/ca0ef0fcf66b0fe913c19a3a00729af4494866e6/src%2Flibrustc%2Futil%2Fcommon.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca0ef0fcf66b0fe913c19a3a00729af4494866e6/src%2Flibrustc%2Futil%2Fcommon.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Futil%2Fcommon.rs?ref=ca0ef0fcf66b0fe913c19a3a00729af4494866e6", "patch": "@@ -18,6 +18,9 @@ use crate::dep_graph::{DepNode};\n use lazy_static;\n use crate::session::Session;\n \n+#[cfg(test)]\n+mod tests;\n+\n // The name of the associated type for `Fn` return types.\n pub const FN_OUTPUT_NAME: Symbol = sym::Output;\n \n@@ -349,16 +352,3 @@ impl<K, V> MemoizationMap for RefCell<FxHashMap<K,V>>\n         }\n     }\n }\n-\n-#[test]\n-fn test_to_readable_str() {\n-    assert_eq!(\"0\", to_readable_str(0));\n-    assert_eq!(\"1\", to_readable_str(1));\n-    assert_eq!(\"99\", to_readable_str(99));\n-    assert_eq!(\"999\", to_readable_str(999));\n-    assert_eq!(\"1_000\", to_readable_str(1_000));\n-    assert_eq!(\"1_001\", to_readable_str(1_001));\n-    assert_eq!(\"999_999\", to_readable_str(999_999));\n-    assert_eq!(\"1_000_000\", to_readable_str(1_000_000));\n-    assert_eq!(\"1_234_567\", to_readable_str(1_234_567));\n-}"}, {"sha": "9a9fb203c625e3d84846cddafa8fe3c8e7a38225", "filename": "src/librustc/util/common/tests.rs", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/ca0ef0fcf66b0fe913c19a3a00729af4494866e6/src%2Flibrustc%2Futil%2Fcommon%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca0ef0fcf66b0fe913c19a3a00729af4494866e6/src%2Flibrustc%2Futil%2Fcommon%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Futil%2Fcommon%2Ftests.rs?ref=ca0ef0fcf66b0fe913c19a3a00729af4494866e6", "patch": "@@ -0,0 +1,14 @@\n+use super::*;\n+\n+#[test]\n+fn test_to_readable_str() {\n+    assert_eq!(\"0\", to_readable_str(0));\n+    assert_eq!(\"1\", to_readable_str(1));\n+    assert_eq!(\"99\", to_readable_str(99));\n+    assert_eq!(\"999\", to_readable_str(999));\n+    assert_eq!(\"1_000\", to_readable_str(1_000));\n+    assert_eq!(\"1_001\", to_readable_str(1_001));\n+    assert_eq!(\"999_999\", to_readable_str(999_999));\n+    assert_eq!(\"1_000_000\", to_readable_str(1_000_000));\n+    assert_eq!(\"1_234_567\", to_readable_str(1_234_567));\n+}"}, {"sha": "d7d47721170aa6d968dc70b05a33cb1b9d6237b7", "filename": "src/tools/tidy/src/unit_tests.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/ca0ef0fcf66b0fe913c19a3a00729af4494866e6/src%2Ftools%2Ftidy%2Fsrc%2Funit_tests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca0ef0fcf66b0fe913c19a3a00729af4494866e6/src%2Ftools%2Ftidy%2Fsrc%2Funit_tests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Ftidy%2Fsrc%2Funit_tests.rs?ref=ca0ef0fcf66b0fe913c19a3a00729af4494866e6", "patch": "@@ -27,7 +27,6 @@ pub fn check(root_path: &Path, bad: &mut bool) {\n     };\n     let fixme = [\n         \"liballoc\",\n-        \"librustc\",\n         \"librustc_data_structures\",\n         \"librustdoc\",\n         \"libstd\","}]}