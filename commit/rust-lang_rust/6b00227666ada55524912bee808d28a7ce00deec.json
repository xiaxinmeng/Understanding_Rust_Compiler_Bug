{"sha": "6b00227666ada55524912bee808d28a7ce00deec", "node_id": "C_kwDOAAsO6NoAKDZiMDAyMjc2NjZhZGE1NTUyNDkxMmJlZTgwOGQyOGE3Y2UwMGRlZWM", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2021-12-15T07:36:23Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-12-15T07:36:23Z"}, "message": "Rollup merge of #91888 - BoxyUwU:generic_arg_infer_aaaa, r=lcnr\n\nHandle unordered const/ty generics for object lifetime defaults\n\n*feel like I should have a PR description but cant think of what to put here*\n\nr? ```@lcnr```", "tree": {"sha": "a301554718c6bbdf1771200d5607897efc7c87e7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a301554718c6bbdf1771200d5607897efc7c87e7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6b00227666ada55524912bee808d28a7ce00deec", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJhuZr3CRBK7hj4Ov3rIwAAHLIIACNiDEed5o7XhQri/uTz0ycJ\nsYV/FpCLD4/wCmfFZE7by7Y4TNuDPFmKy4cUXQIHQdFf3tGCej7Tl6HwlJCdqx0t\nQkOLQgw51IDchl9+LjPHBldogWvZS1dZUN2uIryIZ/XIvYL/t0u0W9eHwo/7/pX+\nXWKajV7hsaA+oDSgY/bQf8P8OV68X8LYkb+NAQsLlTGXoeWxfnKZRdarhS81nXeE\nbgh01zZVACvA/fj2pU0mYBcJqnR7oE26QxpiToMPe59rvC0FG8LA/hT3DQwu5/sh\ncKJgstcg4CHvRn4C7uLFH8xKAde+2CVS82rxYQKK0S4QP39tHAa0NH4UqZwtT/g=\n=fkHS\n-----END PGP SIGNATURE-----\n", "payload": "tree a301554718c6bbdf1771200d5607897efc7c87e7\nparent e6c495dd5996c1c16f67869bf62fa68a210768be\nparent 0a0f01410d378fc9d1ca27fe5a42f01092e0cf3e\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1639553783 +0100\ncommitter GitHub <noreply@github.com> 1639553783 +0100\n\nRollup merge of #91888 - BoxyUwU:generic_arg_infer_aaaa, r=lcnr\n\nHandle unordered const/ty generics for object lifetime defaults\n\n*feel like I should have a PR description but cant think of what to put here*\n\nr? ```@lcnr```\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6b00227666ada55524912bee808d28a7ce00deec", "html_url": "https://github.com/rust-lang/rust/commit/6b00227666ada55524912bee808d28a7ce00deec", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6b00227666ada55524912bee808d28a7ce00deec/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e6c495dd5996c1c16f67869bf62fa68a210768be", "url": "https://api.github.com/repos/rust-lang/rust/commits/e6c495dd5996c1c16f67869bf62fa68a210768be", "html_url": "https://github.com/rust-lang/rust/commit/e6c495dd5996c1c16f67869bf62fa68a210768be"}, {"sha": "0a0f01410d378fc9d1ca27fe5a42f01092e0cf3e", "url": "https://api.github.com/repos/rust-lang/rust/commits/0a0f01410d378fc9d1ca27fe5a42f01092e0cf3e", "html_url": "https://github.com/rust-lang/rust/commit/0a0f01410d378fc9d1ca27fe5a42f01092e0cf3e"}], "stats": {"total": 51, "additions": 30, "deletions": 21}, "files": [{"sha": "0077dec889dff9a81eb9fb125a0f42ec2d52dbe6", "filename": "compiler/rustc_ast_lowering/src/lib.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/6b00227666ada55524912bee808d28a7ce00deec/compiler%2Frustc_ast_lowering%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6b00227666ada55524912bee808d28a7ce00deec/compiler%2Frustc_ast_lowering%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_ast_lowering%2Fsrc%2Flib.rs?ref=6b00227666ada55524912bee808d28a7ce00deec", "patch": "@@ -52,7 +52,7 @@ use rustc_hir::def::{DefKind, Namespace, PartialRes, PerNS, Res};\n use rustc_hir::def_id::{DefId, DefPathHash, LocalDefId, CRATE_DEF_ID};\n use rustc_hir::definitions::{DefKey, DefPathData, Definitions};\n use rustc_hir::intravisit;\n-use rustc_hir::{ConstArg, GenericArg, InferKind, ParamName};\n+use rustc_hir::{ConstArg, GenericArg, ParamName};\n use rustc_index::vec::{Idx, IndexVec};\n use rustc_query_system::ich::StableHashingContext;\n use rustc_session::lint::builtin::BARE_TRAIT_OBJECTS;\n@@ -1113,7 +1113,6 @@ impl<'a, 'hir> LoweringContext<'a, 'hir> {\n                         return GenericArg::Infer(hir::InferArg {\n                             hir_id: self.lower_node_id(ty.id),\n                             span: self.lower_span(ty.span),\n-                            kind: InferKind::Type,\n                         });\n                     }\n                     // We parse const arguments as path types as we cannot distinguish them during"}, {"sha": "e2358aac1e7fd4ba7010b4ac29b6184f1102fb8c", "filename": "compiler/rustc_hir/src/hir.rs", "status": "modified", "additions": 0, "deletions": 14, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/6b00227666ada55524912bee808d28a7ce00deec/compiler%2Frustc_hir%2Fsrc%2Fhir.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6b00227666ada55524912bee808d28a7ce00deec/compiler%2Frustc_hir%2Fsrc%2Fhir.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_hir%2Fsrc%2Fhir.rs?ref=6b00227666ada55524912bee808d28a7ce00deec", "patch": "@@ -255,23 +255,9 @@ pub struct ConstArg {\n     pub span: Span,\n }\n \n-#[derive(Copy, Clone, Encodable, Debug, HashStable_Generic)]\n-pub enum InferKind {\n-    Const,\n-    Type,\n-}\n-\n-impl InferKind {\n-    #[inline]\n-    pub fn is_type(self) -> bool {\n-        matches!(self, InferKind::Type)\n-    }\n-}\n-\n #[derive(Encodable, Debug, HashStable_Generic)]\n pub struct InferArg {\n     pub hir_id: HirId,\n-    pub kind: InferKind,\n     pub span: Span,\n }\n "}, {"sha": "05098defead38dc5274e112bac4839f11c8547bf", "filename": "compiler/rustc_resolve/src/late/lifetimes.rs", "status": "modified", "additions": 4, "deletions": 5, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/6b00227666ada55524912bee808d28a7ce00deec/compiler%2Frustc_resolve%2Fsrc%2Flate%2Flifetimes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6b00227666ada55524912bee808d28a7ce00deec/compiler%2Frustc_resolve%2Fsrc%2Flate%2Flifetimes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_resolve%2Fsrc%2Flate%2Flifetimes.rs?ref=6b00227666ada55524912bee808d28a7ce00deec", "patch": "@@ -2541,8 +2541,8 @@ impl<'a, 'tcx> LifetimeContext<'a, 'tcx> {\n                                 GenericParamDefKind::Type { object_lifetime_default, .. } => {\n                                     Some(object_lifetime_default)\n                                 }\n-                                GenericParamDefKind::Lifetime\n-                                | GenericParamDefKind::Const { .. } => None,\n+                                GenericParamDefKind::Const { .. } => Some(Set1::Empty),\n+                                GenericParamDefKind::Lifetime => None,\n                             })\n                             .collect()\n                     })\n@@ -2569,12 +2569,11 @@ impl<'a, 'tcx> LifetimeContext<'a, 'tcx> {\n                 }\n                 GenericArg::Const(ct) => {\n                     self.visit_anon_const(&ct.value);\n+                    i += 1;\n                 }\n                 GenericArg::Infer(inf) => {\n                     self.visit_id(inf.hir_id);\n-                    if inf.kind.is_type() {\n-                        i += 1;\n-                    }\n+                    i += 1;\n                 }\n             }\n         }"}, {"sha": "26a2c47ffb26d84980c46e75eff629cd3a4f7550", "filename": "src/test/ui/const-generics/defaults/auxiliary/trait_object_lt_defaults_lib.rs", "status": "added", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/6b00227666ada55524912bee808d28a7ce00deec/src%2Ftest%2Fui%2Fconst-generics%2Fdefaults%2Fauxiliary%2Ftrait_object_lt_defaults_lib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6b00227666ada55524912bee808d28a7ce00deec/src%2Ftest%2Fui%2Fconst-generics%2Fdefaults%2Fauxiliary%2Ftrait_object_lt_defaults_lib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fdefaults%2Fauxiliary%2Ftrait_object_lt_defaults_lib.rs?ref=6b00227666ada55524912bee808d28a7ce00deec", "patch": "@@ -0,0 +1 @@\n+pub struct Foo<'a, const N: usize, T: 'a + ?Sized>(pub &'a T, [(); N]);"}, {"sha": "a1828727ecdbe32de195c08dc4ce68e6a309f85d", "filename": "src/test/ui/const-generics/defaults/trait_object_lt_defaults.rs", "status": "added", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/6b00227666ada55524912bee808d28a7ce00deec/src%2Ftest%2Fui%2Fconst-generics%2Fdefaults%2Ftrait_object_lt_defaults.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6b00227666ada55524912bee808d28a7ce00deec/src%2Ftest%2Fui%2Fconst-generics%2Fdefaults%2Ftrait_object_lt_defaults.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fdefaults%2Ftrait_object_lt_defaults.rs?ref=6b00227666ada55524912bee808d28a7ce00deec", "patch": "@@ -0,0 +1,24 @@\n+// aux-build:trait_object_lt_defaults_lib.rs\n+// run-pass\n+#![allow(dead_code)]\n+extern crate trait_object_lt_defaults_lib;\n+\n+// Tests that `A<'a, 3, dyn Test>` is short for `A<'a, 3, dyn Test + 'a>`\n+// and `Foo<'a, 3, dyn Test>` is short for `Foo<'a, 3, dyn Test + 'a>`\n+// Test is in `const-generics/defaults` because it relies on param ordering\n+\n+trait Test {}\n+\n+struct A<'a, const N: usize, T: ?Sized + 'a>(&'a T, [(); N]);\n+fn blah<'a>(mut a: A<'a, 3, dyn Test>, arg: &'a (dyn Test + 'a)) {\n+    a.0 = arg;\n+}\n+\n+fn other_blah<'a>(\n+    mut a: trait_object_lt_defaults_lib::Foo<'a, 3, dyn Test>,\n+    arg: &'a (dyn Test + 'a),\n+) {\n+    a.0 = arg;\n+}\n+\n+fn main() {}"}]}