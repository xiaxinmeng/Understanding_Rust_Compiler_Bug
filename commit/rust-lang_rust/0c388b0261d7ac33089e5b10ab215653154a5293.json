{"sha": "0c388b0261d7ac33089e5b10ab215653154a5293", "node_id": "MDY6Q29tbWl0NzI0NzEyOjBjMzg4YjAyNjFkN2FjMzMwODllNWIxMGFiMjE1NjUzMTU0YTUyOTM=", "commit": {"author": {"name": "Matthew Jasper", "email": "mjjasper1@gmail.com", "date": "2021-03-07T15:08:52Z"}, "committer": {"name": "R\u00e9my Rakic", "email": "remy.rakic+github@gmail.com", "date": "2021-08-15T07:11:00Z"}, "message": "Report mismatched type errors for bound region errors in NLL", "tree": {"sha": "06a8ae03c47e7ea8f64f482ea5e155ba542a52fc", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/06a8ae03c47e7ea8f64f482ea5e155ba542a52fc"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0c388b0261d7ac33089e5b10ab215653154a5293", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0c388b0261d7ac33089e5b10ab215653154a5293", "html_url": "https://github.com/rust-lang/rust/commit/0c388b0261d7ac33089e5b10ab215653154a5293", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0c388b0261d7ac33089e5b10ab215653154a5293/comments", "author": {"login": "matthewjasper", "id": 20113453, "node_id": "MDQ6VXNlcjIwMTEzNDUz", "avatar_url": "https://avatars.githubusercontent.com/u/20113453?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthewjasper", "html_url": "https://github.com/matthewjasper", "followers_url": "https://api.github.com/users/matthewjasper/followers", "following_url": "https://api.github.com/users/matthewjasper/following{/other_user}", "gists_url": "https://api.github.com/users/matthewjasper/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthewjasper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthewjasper/subscriptions", "organizations_url": "https://api.github.com/users/matthewjasper/orgs", "repos_url": "https://api.github.com/users/matthewjasper/repos", "events_url": "https://api.github.com/users/matthewjasper/events{/privacy}", "received_events_url": "https://api.github.com/users/matthewjasper/received_events", "type": "User", "site_admin": false}, "committer": {"login": "lqd", "id": 247183, "node_id": "MDQ6VXNlcjI0NzE4Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/247183?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lqd", "html_url": "https://github.com/lqd", "followers_url": "https://api.github.com/users/lqd/followers", "following_url": "https://api.github.com/users/lqd/following{/other_user}", "gists_url": "https://api.github.com/users/lqd/gists{/gist_id}", "starred_url": "https://api.github.com/users/lqd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lqd/subscriptions", "organizations_url": "https://api.github.com/users/lqd/orgs", "repos_url": "https://api.github.com/users/lqd/repos", "events_url": "https://api.github.com/users/lqd/events{/privacy}", "received_events_url": "https://api.github.com/users/lqd/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5e6027c6bfd7fe55a1e0019d5fd48223d8a8f022", "url": "https://api.github.com/repos/rust-lang/rust/commits/5e6027c6bfd7fe55a1e0019d5fd48223d8a8f022", "html_url": "https://github.com/rust-lang/rust/commit/5e6027c6bfd7fe55a1e0019d5fd48223d8a8f022"}], "stats": {"total": 213, "additions": 154, "deletions": 59}, "files": [{"sha": "5db20acf941be4c47c87f546f0dac8ed537c096d", "filename": "compiler/rustc_mir/src/borrow_check/diagnostics/bound_region_errors.rs", "status": "modified", "additions": 25, "deletions": 4, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/0c388b0261d7ac33089e5b10ab215653154a5293/compiler%2Frustc_mir%2Fsrc%2Fborrow_check%2Fdiagnostics%2Fbound_region_errors.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0c388b0261d7ac33089e5b10ab215653154a5293/compiler%2Frustc_mir%2Fsrc%2Fborrow_check%2Fdiagnostics%2Fbound_region_errors.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir%2Fsrc%2Fborrow_check%2Fdiagnostics%2Fbound_region_errors.rs?ref=0c388b0261d7ac33089e5b10ab215653154a5293", "patch": "@@ -1,4 +1,6 @@\n use rustc_infer::infer::canonical::Canonical;\n+use rustc_infer::traits::ObligationCause;\n+use rustc_middle::ty::error::TypeError;\n use rustc_middle::ty::{self, Ty, TypeFoldable};\n use rustc_span::Span;\n use rustc_trait_selection::traits::query::type_op;\n@@ -32,14 +34,33 @@ impl UniverseInfo<'tcx> {\n         UniverseInfo(UniverseInfoInner::RelateTys { expected, found })\n     }\n \n-    crate fn _report_error(\n+    crate fn report_error(\n         &self,\n-        _mbcx: &mut MirBorrowckCtxt<'_, 'tcx>,\n+        mbcx: &mut MirBorrowckCtxt<'_, 'tcx>,\n         _placeholder: ty::PlaceholderRegion,\n         _error_element: RegionElement,\n-        _span: Span,\n+        span: Span,\n     ) {\n-        todo!();\n+        // FIXME: improve this error message\n+        match self.0 {\n+            UniverseInfoInner::RelateTys { expected, found } => {\n+                let body_id = mbcx.infcx.tcx.hir().local_def_id_to_hir_id(mbcx.mir_def_id());\n+                let err = mbcx.infcx.report_mismatched_types(\n+                    &ObligationCause::misc(span, body_id),\n+                    expected,\n+                    found,\n+                    TypeError::RegionsPlaceholderMismatch,\n+                );\n+                err.buffer(&mut mbcx.errors_buffer);\n+            }\n+            UniverseInfoInner::TypeOp(_) | UniverseInfoInner::Other => {\n+                mbcx.infcx\n+                    .tcx\n+                    .sess\n+                    .struct_span_err(span, \"higher-ranked subtype error\")\n+                    .buffer(&mut mbcx.errors_buffer);\n+            }\n+        }\n     }\n }\n "}, {"sha": "7e39f985fb995f68dd80e242bcd60381001c0eaa", "filename": "compiler/rustc_mir/src/borrow_check/diagnostics/region_errors.rs", "status": "modified", "additions": 4, "deletions": 6, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/0c388b0261d7ac33089e5b10ab215653154a5293/compiler%2Frustc_mir%2Fsrc%2Fborrow_check%2Fdiagnostics%2Fregion_errors.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0c388b0261d7ac33089e5b10ab215653154a5293/compiler%2Frustc_mir%2Fsrc%2Fborrow_check%2Fdiagnostics%2Fregion_errors.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir%2Fsrc%2Fborrow_check%2Fdiagnostics%2Fregion_errors.rs?ref=0c388b0261d7ac33089e5b10ab215653154a5293", "patch": "@@ -223,12 +223,10 @@ impl<'a, 'tcx> MirBorrowckCtxt<'a, 'tcx> {\n                         error_vid,\n                     );\n \n-                    // FIXME: improve this error message\n-                    self.infcx\n-                        .tcx\n-                        .sess\n-                        .struct_span_err(span, \"higher-ranked subtype error\")\n-                        .buffer(&mut self.errors_buffer);\n+                    let universe = placeholder.universe;\n+                    let universe_info = self.regioncx.universe_info(universe);\n+\n+                    universe_info.report_error(self, placeholder, error_element, span);\n                 }\n \n                 RegionErrorKind::RegionError { fr_origin, longer_fr, shorter_fr, is_reported } => {"}, {"sha": "17272e744beb2743f440d61ffa840fbb43d584f7", "filename": "compiler/rustc_mir/src/borrow_check/region_infer/mod.rs", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/0c388b0261d7ac33089e5b10ab215653154a5293/compiler%2Frustc_mir%2Fsrc%2Fborrow_check%2Fregion_infer%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0c388b0261d7ac33089e5b10ab215653154a5293/compiler%2Frustc_mir%2Fsrc%2Fborrow_check%2Fregion_infer%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir%2Fsrc%2Fborrow_check%2Fregion_infer%2Fmod.rs?ref=0c388b0261d7ac33089e5b10ab215653154a5293", "patch": "@@ -85,7 +85,7 @@ pub struct RegionInferenceContext<'tcx> {\n         FxHashMap<Location, FxHashMap<(RegionVid, RegionVid), (ConstraintCategory, Span)>>,\n \n     /// Map universe indexes to information on why we created it.\n-    _universe_causes: IndexVec<ty::UniverseIndex, UniverseInfo<'tcx>>,\n+    universe_causes: IndexVec<ty::UniverseIndex, UniverseInfo<'tcx>>,\n \n     /// Contains the minimum universe of any variable within the same\n     /// SCC. We will ensure that no SCC contains values that are not\n@@ -297,7 +297,7 @@ impl<'tcx> RegionInferenceContext<'tcx> {\n             member_constraints,\n             member_constraints_applied: Vec::new(),\n             closure_bounds_mapping,\n-            _universe_causes: universe_causes,\n+            universe_causes,\n             scc_universes,\n             scc_representatives,\n             scc_values,\n@@ -2143,6 +2143,10 @@ impl<'tcx> RegionInferenceContext<'tcx> {\n \n         categorized_path.remove(0)\n     }\n+\n+    crate fn universe_info(&self, universe: ty::UniverseIndex) -> UniverseInfo<'tcx> {\n+        self.universe_causes[universe].clone()\n+    }\n }\n \n impl<'tcx> RegionDefinition<'tcx> {"}, {"sha": "768dc8e12db504861158dff33e4006d3f71b6c13", "filename": "src/test/ui/closure-expected-type/expect-fn-supply-fn.nll.stderr", "status": "modified", "additions": 16, "deletions": 6, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/0c388b0261d7ac33089e5b10ab215653154a5293/src%2Ftest%2Fui%2Fclosure-expected-type%2Fexpect-fn-supply-fn.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/0c388b0261d7ac33089e5b10ab215653154a5293/src%2Ftest%2Fui%2Fclosure-expected-type%2Fexpect-fn-supply-fn.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fclosure-expected-type%2Fexpect-fn-supply-fn.nll.stderr?ref=0c388b0261d7ac33089e5b10ab215653154a5293", "patch": "@@ -21,23 +21,33 @@ LL |     with_closure_expecting_fn_with_free_region(|x: fn(&'x u32), y| {});\n    |\n    = help: consider replacing `'x` with `'static`\n \n-error: higher-ranked subtype error\n+error[E0308]: mismatched types\n   --> $DIR/expect-fn-supply-fn.rs:32:49\n    |\n LL |     with_closure_expecting_fn_with_free_region(|x: fn(&u32), y| {});\n-   |                                                 ^\n+   |                                                 ^ one type is more general than the other\n+   |\n+   = note: expected fn pointer `for<'r> fn(&'r u32)`\n+              found fn pointer `fn(&u32)`\n \n-error: higher-ranked subtype error\n+error[E0308]: mismatched types\n   --> $DIR/expect-fn-supply-fn.rs:39:50\n    |\n LL |     with_closure_expecting_fn_with_bound_region(|x: fn(&'x u32), y| {});\n-   |                                                  ^\n+   |                                                  ^ one type is more general than the other\n+   |\n+   = note: expected fn pointer `fn(&'x u32)`\n+              found fn pointer `for<'r> fn(&'r u32)`\n \n-error: higher-ranked subtype error\n+error[E0308]: mismatched types\n   --> $DIR/expect-fn-supply-fn.rs:48:50\n    |\n LL |     with_closure_expecting_fn_with_bound_region(|x: Foo<'_>, y| {\n-   |                                                  ^\n+   |                                                  ^ one type is more general than the other\n+   |\n+   = note: expected fn pointer `fn(&u32)`\n+              found fn pointer `for<'r> fn(&'r u32)`\n \n error: aborting due to 5 previous errors\n \n+For more information about this error, try `rustc --explain E0308`."}, {"sha": "439a113ef38112226b3cac1ec5e0792d7351e74b", "filename": "src/test/ui/hr-subtype/hr-subtype.bound_a_b_ret_a_vs_bound_a_ret_a.nll.stderr", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/0c388b0261d7ac33089e5b10ab215653154a5293/src%2Ftest%2Fui%2Fhr-subtype%2Fhr-subtype.bound_a_b_ret_a_vs_bound_a_ret_a.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/0c388b0261d7ac33089e5b10ab215653154a5293/src%2Ftest%2Fui%2Fhr-subtype%2Fhr-subtype.bound_a_b_ret_a_vs_bound_a_ret_a.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fhr-subtype%2Fhr-subtype.bound_a_b_ret_a_vs_bound_a_ret_a.nll.stderr?ref=0c388b0261d7ac33089e5b10ab215653154a5293", "patch": "@@ -1,14 +1,17 @@\n-error: higher-ranked subtype error\n+error[E0308]: mismatched types\n   --> $DIR/hr-subtype.rs:45:13\n    |\n LL |               gimme::<$t1>(None::<$t2>);\n-   |               ^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |               ^^^^^^^^^^^^^^^^^^^^^^^^^ one type is more general than the other\n ...\n LL | / check! { bound_a_b_ret_a_vs_bound_a_ret_a: (for<'a,'b> fn(&'a u32, &'b u32) -> &'a u32,\n LL | | for<'a>    fn(&'a u32, &'a u32) -> &'a u32) }\n    | |_____________________________________________- in this macro invocation\n    |\n+   = note: expected enum `Option<for<'r, 's> fn(&'r u32, &'s u32) -> &'r u32>`\n+              found enum `Option<for<'r> fn(&'r u32, &'r u32) -> &'r u32>`\n    = note: this error originates in the macro `check` (in Nightly builds, run with -Z macro-backtrace for more info)\n \n error: aborting due to previous error\n \n+For more information about this error, try `rustc --explain E0308`."}, {"sha": "61b3f0ca2847c60b75b9d92d230e3a51bcc1a8cf", "filename": "src/test/ui/hr-subtype/hr-subtype.bound_a_vs_free_x.nll.stderr", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/0c388b0261d7ac33089e5b10ab215653154a5293/src%2Ftest%2Fui%2Fhr-subtype%2Fhr-subtype.bound_a_vs_free_x.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/0c388b0261d7ac33089e5b10ab215653154a5293/src%2Ftest%2Fui%2Fhr-subtype%2Fhr-subtype.bound_a_vs_free_x.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fhr-subtype%2Fhr-subtype.bound_a_vs_free_x.nll.stderr?ref=0c388b0261d7ac33089e5b10ab215653154a5293", "patch": "@@ -1,14 +1,17 @@\n-error: higher-ranked subtype error\n+error[E0308]: mismatched types\n   --> $DIR/hr-subtype.rs:45:13\n    |\n LL |               gimme::<$t1>(None::<$t2>);\n-   |               ^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |               ^^^^^^^^^^^^^^^^^^^^^^^^^ one type is more general than the other\n ...\n LL | / check! { bound_a_vs_free_x: (for<'a> fn(&'a u32),\n LL | | fn(&'x u32)) }\n    | |______________- in this macro invocation\n    |\n+   = note: expected enum `Option<for<'r> fn(&'r u32)>`\n+              found enum `Option<fn(&u32)>`\n    = note: this error originates in the macro `check` (in Nightly builds, run with -Z macro-backtrace for more info)\n \n error: aborting due to previous error\n \n+For more information about this error, try `rustc --explain E0308`."}, {"sha": "75e2ba58f33fbe9391347a3e349f1341272205d3", "filename": "src/test/ui/hr-subtype/hr-subtype.bound_inv_a_b_vs_bound_inv_a.nll.stderr", "status": "modified", "additions": 9, "deletions": 4, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/0c388b0261d7ac33089e5b10ab215653154a5293/src%2Ftest%2Fui%2Fhr-subtype%2Fhr-subtype.bound_inv_a_b_vs_bound_inv_a.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/0c388b0261d7ac33089e5b10ab215653154a5293/src%2Ftest%2Fui%2Fhr-subtype%2Fhr-subtype.bound_inv_a_b_vs_bound_inv_a.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fhr-subtype%2Fhr-subtype.bound_inv_a_b_vs_bound_inv_a.nll.stderr?ref=0c388b0261d7ac33089e5b10ab215653154a5293", "patch": "@@ -1,26 +1,31 @@\n-error: higher-ranked subtype error\n+error[E0308]: mismatched types\n   --> $DIR/hr-subtype.rs:45:13\n    |\n LL |               gimme::<$t1>(None::<$t2>);\n-   |               ^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |               ^^^^^^^^^^^^^^^^^^^^^^^^^ one type is more general than the other\n ...\n LL | / check! { bound_inv_a_b_vs_bound_inv_a: (for<'a,'b> fn(Inv<'a>, Inv<'b>),\n LL | | for<'a>    fn(Inv<'a>, Inv<'a>)) }\n    | |__________________________________- in this macro invocation\n    |\n+   = note: expected enum `Option<for<'r, 's> fn(Inv<'r>, Inv<'s>)>`\n+              found enum `Option<for<'r> fn(Inv<'r>, Inv<'r>)>`\n    = note: this error originates in the macro `check` (in Nightly builds, run with -Z macro-backtrace for more info)\n \n-error: higher-ranked subtype error\n+error[E0308]: mismatched types\n   --> $DIR/hr-subtype.rs:45:13\n    |\n LL |               gimme::<$t1>(None::<$t2>);\n-   |               ^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |               ^^^^^^^^^^^^^^^^^^^^^^^^^ one type is more general than the other\n ...\n LL | / check! { bound_inv_a_b_vs_bound_inv_a: (for<'a,'b> fn(Inv<'a>, Inv<'b>),\n LL | | for<'a>    fn(Inv<'a>, Inv<'a>)) }\n    | |__________________________________- in this macro invocation\n    |\n+   = note: expected enum `Option<for<'r, 's> fn(Inv<'r>, Inv<'s>)>`\n+              found enum `Option<for<'r> fn(Inv<'r>, Inv<'r>)>`\n    = note: this error originates in the macro `check` (in Nightly builds, run with -Z macro-backtrace for more info)\n \n error: aborting due to 2 previous errors\n \n+For more information about this error, try `rustc --explain E0308`."}, {"sha": "1ee3c67496397e032e68446477414f586f20005d", "filename": "src/test/ui/hrtb/hrtb-exists-forall-fn.nll.stderr", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/0c388b0261d7ac33089e5b10ab215653154a5293/src%2Ftest%2Fui%2Fhrtb%2Fhrtb-exists-forall-fn.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/0c388b0261d7ac33089e5b10ab215653154a5293/src%2Ftest%2Fui%2Fhrtb%2Fhrtb-exists-forall-fn.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fhrtb%2Fhrtb-exists-forall-fn.nll.stderr?ref=0c388b0261d7ac33089e5b10ab215653154a5293", "patch": "@@ -1,8 +1,12 @@\n-error: higher-ranked subtype error\n+error[E0308]: mismatched types\n   --> $DIR/hrtb-exists-forall-fn.rs:17:12\n    |\n LL |     let _: for<'b> fn(&'b u32) = foo();\n-   |            ^^^^^^^^^^^^^^^^^^^\n+   |            ^^^^^^^^^^^^^^^^^^^ one type is more general than the other\n+   |\n+   = note: expected fn pointer `for<'b> fn(&'b u32)`\n+              found fn pointer `fn(&u32)`\n \n error: aborting due to previous error\n \n+For more information about this error, try `rustc --explain E0308`."}, {"sha": "3fdc2da9f1e2e3f0c22ae2ed344937a965b2149e", "filename": "src/test/ui/lub-glb/old-lub-glb-hr-noteq1.nll.stderr", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/0c388b0261d7ac33089e5b10ab215653154a5293/src%2Ftest%2Fui%2Flub-glb%2Fold-lub-glb-hr-noteq1.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/0c388b0261d7ac33089e5b10ab215653154a5293/src%2Ftest%2Fui%2Flub-glb%2Fold-lub-glb-hr-noteq1.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flub-glb%2Fold-lub-glb-hr-noteq1.nll.stderr?ref=0c388b0261d7ac33089e5b10ab215653154a5293", "patch": "@@ -1,8 +1,12 @@\n-error: higher-ranked subtype error\n+error[E0308]: mismatched types\n   --> $DIR/old-lub-glb-hr-noteq1.rs:11:14\n    |\n LL |         _ => y,\n-   |              ^\n+   |              ^ one type is more general than the other\n+   |\n+   = note: expected fn pointer `for<'r, 's> fn(&'r u8, &'s u8) -> &'r u8`\n+              found fn pointer `for<'r> fn(&'r u8, &'r u8) -> &'r u8`\n \n error: aborting due to previous error\n \n+For more information about this error, try `rustc --explain E0308`."}, {"sha": "0730dcc9e497821f122a0253bad1bf5cd98bcdb5", "filename": "src/test/ui/nll/relate_tys/fn-subtype.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0c388b0261d7ac33089e5b10ab215653154a5293/src%2Ftest%2Fui%2Fnll%2Frelate_tys%2Ffn-subtype.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0c388b0261d7ac33089e5b10ab215653154a5293/src%2Ftest%2Fui%2Fnll%2Frelate_tys%2Ffn-subtype.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Frelate_tys%2Ffn-subtype.rs?ref=0c388b0261d7ac33089e5b10ab215653154a5293", "patch": "@@ -6,5 +6,5 @@\n \n fn main() {\n     let x: fn(&'static ()) = |_| {};\n-    let y: for<'a> fn(&'a ()) = x; //~ ERROR higher-ranked subtype error\n+    let y: for<'a> fn(&'a ()) = x; //~ ERROR mismatched types [E0308]\n }"}, {"sha": "94def6900867795ca0adfe8246effba8e3c2c542", "filename": "src/test/ui/nll/relate_tys/fn-subtype.stderr", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/0c388b0261d7ac33089e5b10ab215653154a5293/src%2Ftest%2Fui%2Fnll%2Frelate_tys%2Ffn-subtype.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/0c388b0261d7ac33089e5b10ab215653154a5293/src%2Ftest%2Fui%2Fnll%2Frelate_tys%2Ffn-subtype.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Frelate_tys%2Ffn-subtype.stderr?ref=0c388b0261d7ac33089e5b10ab215653154a5293", "patch": "@@ -1,8 +1,12 @@\n-error: higher-ranked subtype error\n+error[E0308]: mismatched types\n   --> $DIR/fn-subtype.rs:9:33\n    |\n LL |     let y: for<'a> fn(&'a ()) = x;\n-   |                                 ^\n+   |                                 ^ one type is more general than the other\n+   |\n+   = note: expected fn pointer `for<'r> fn(&'r ())`\n+              found fn pointer `fn(&())`\n \n error: aborting due to previous error\n \n+For more information about this error, try `rustc --explain E0308`."}, {"sha": "a6d6ffa0ce3d2d8dfc209826d69e7009c4b08988", "filename": "src/test/ui/nll/relate_tys/hr-fn-aaa-as-aba.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/0c388b0261d7ac33089e5b10ab215653154a5293/src%2Ftest%2Fui%2Fnll%2Frelate_tys%2Fhr-fn-aaa-as-aba.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0c388b0261d7ac33089e5b10ab215653154a5293/src%2Ftest%2Fui%2Fnll%2Frelate_tys%2Fhr-fn-aaa-as-aba.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Frelate_tys%2Fhr-fn-aaa-as-aba.rs?ref=0c388b0261d7ac33089e5b10ab215653154a5293", "patch": "@@ -12,15 +12,15 @@ fn make_it() -> for<'a> fn(&'a u32, &'a u32) -> &'a u32 {\n \n fn foo() {\n     let a: for<'a, 'b> fn(&'a u32, &'b u32) -> &'a u32 = make_it();\n-    //~^ ERROR higher-ranked subtype error\n+    //~^ ERROR mismatched types [E0308]\n     drop(a);\n }\n \n fn bar() {\n     // The code path for patterns is mildly different, so go ahead and\n     // test that too:\n     let _: for<'a, 'b> fn(&'a u32, &'b u32) -> &'a u32 = make_it();\n-    //~^ ERROR higher-ranked subtype error\n+    //~^ ERROR mismatched types [E0308]\n }\n \n-fn main() { }\n+fn main() {}"}, {"sha": "8c1eaeb6aa7b9777aa61243a0b7a64a460976f64", "filename": "src/test/ui/nll/relate_tys/hr-fn-aaa-as-aba.stderr", "status": "modified", "additions": 11, "deletions": 4, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/0c388b0261d7ac33089e5b10ab215653154a5293/src%2Ftest%2Fui%2Fnll%2Frelate_tys%2Fhr-fn-aaa-as-aba.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/0c388b0261d7ac33089e5b10ab215653154a5293/src%2Ftest%2Fui%2Fnll%2Frelate_tys%2Fhr-fn-aaa-as-aba.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Frelate_tys%2Fhr-fn-aaa-as-aba.stderr?ref=0c388b0261d7ac33089e5b10ab215653154a5293", "patch": "@@ -1,14 +1,21 @@\n-error: higher-ranked subtype error\n+error[E0308]: mismatched types\n   --> $DIR/hr-fn-aaa-as-aba.rs:14:58\n    |\n LL |     let a: for<'a, 'b> fn(&'a u32, &'b u32) -> &'a u32 = make_it();\n-   |                                                          ^^^^^^^^^\n+   |                                                          ^^^^^^^^^ one type is more general than the other\n+   |\n+   = note: expected fn pointer `for<'r, 's> fn(&'r u32, &'s u32) -> &'r u32`\n+              found fn pointer `for<'a> fn(&'a u32, &'a u32) -> &'a u32`\n \n-error: higher-ranked subtype error\n+error[E0308]: mismatched types\n   --> $DIR/hr-fn-aaa-as-aba.rs:22:12\n    |\n LL |     let _: for<'a, 'b> fn(&'a u32, &'b u32) -> &'a u32 = make_it();\n-   |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ one type is more general than the other\n+   |\n+   = note: expected fn pointer `for<'a, 'b> fn(&'a u32, &'b u32) -> &'a u32`\n+              found fn pointer `for<'r> fn(&'r u32, &'r u32) -> &'r u32`\n \n error: aborting due to 2 previous errors\n \n+For more information about this error, try `rustc --explain E0308`."}, {"sha": "8389c8e8377ed0dd65df9674e5e65df9e84a6fcb", "filename": "src/test/ui/nll/relate_tys/universe-violation.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0c388b0261d7ac33089e5b10ab215653154a5293/src%2Ftest%2Fui%2Fnll%2Frelate_tys%2Funiverse-violation.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0c388b0261d7ac33089e5b10ab215653154a5293/src%2Ftest%2Fui%2Fnll%2Frelate_tys%2Funiverse-violation.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Frelate_tys%2Funiverse-violation.rs?ref=0c388b0261d7ac33089e5b10ab215653154a5293", "patch": "@@ -12,6 +12,6 @@ fn make_it() -> fn(&'static u32) -> &'static u32 {\n \n fn main() {\n     let a: fn(_) -> _ = make_it();\n-    let b: fn(&u32) -> &u32 = a; //~ ERROR higher-ranked subtype error\n+    let b: fn(&u32) -> &u32 = a; //~ ERROR mismatched types [E0308]\n     drop(a);\n }"}, {"sha": "ff4c7abc250553c434fe9e72c2c71c4823a81320", "filename": "src/test/ui/nll/relate_tys/universe-violation.stderr", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/0c388b0261d7ac33089e5b10ab215653154a5293/src%2Ftest%2Fui%2Fnll%2Frelate_tys%2Funiverse-violation.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/0c388b0261d7ac33089e5b10ab215653154a5293/src%2Ftest%2Fui%2Fnll%2Frelate_tys%2Funiverse-violation.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Frelate_tys%2Funiverse-violation.stderr?ref=0c388b0261d7ac33089e5b10ab215653154a5293", "patch": "@@ -1,8 +1,12 @@\n-error: higher-ranked subtype error\n+error[E0308]: mismatched types\n   --> $DIR/universe-violation.rs:15:31\n    |\n LL |     let b: fn(&u32) -> &u32 = a;\n-   |                               ^\n+   |                               ^ one type is more general than the other\n+   |\n+   = note: expected fn pointer `for<'r> fn(&'r u32) -> &'r u32`\n+              found fn pointer `fn(&u32) -> &u32`\n \n error: aborting due to previous error\n \n+For more information about this error, try `rustc --explain E0308`."}, {"sha": "a64ad46ef462b0b12f9f0eba1bd7869e0974ce77", "filename": "src/test/ui/regions/region-lifetime-bounds-on-fns-where-clause.nll.stderr", "status": "modified", "additions": 11, "deletions": 4, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/0c388b0261d7ac33089e5b10ab215653154a5293/src%2Ftest%2Fui%2Fregions%2Fregion-lifetime-bounds-on-fns-where-clause.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/0c388b0261d7ac33089e5b10ab215653154a5293/src%2Ftest%2Fui%2Fregions%2Fregion-lifetime-bounds-on-fns-where-clause.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fregions%2Fregion-lifetime-bounds-on-fns-where-clause.nll.stderr?ref=0c388b0261d7ac33089e5b10ab215653154a5293", "patch": "@@ -27,17 +27,24 @@ LL |     a(x, y);\n    = note: mutable references are invariant over their type parameter\n    = help: see <https://doc.rust-lang.org/nomicon/subtyping.html> for more information about variance\n \n-error: higher-ranked subtype error\n+error[E0308]: mismatched types\n   --> $DIR/region-lifetime-bounds-on-fns-where-clause.rs:20:12\n    |\n LL |     let _: fn(&mut &isize, &mut &isize) = a;\n-   |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ one type is more general than the other\n+   |\n+   = note: expected fn pointer `for<'r, 's, 't0, 't1> fn(&'r mut &'s isize, &'t0 mut &'t1 isize)`\n+              found fn pointer `for<'r, 's> fn(&'r mut &isize, &'s mut &isize)`\n \n-error: higher-ranked subtype error\n+error[E0308]: mismatched types\n   --> $DIR/region-lifetime-bounds-on-fns-where-clause.rs:20:12\n    |\n LL |     let _: fn(&mut &isize, &mut &isize) = a;\n-   |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ one type is more general than the other\n+   |\n+   = note: expected fn pointer `for<'r, 's, 't0, 't1> fn(&'r mut &'s isize, &'t0 mut &'t1 isize)`\n+              found fn pointer `for<'r, 's> fn(&'r mut &isize, &'s mut &isize)`\n \n error: aborting due to 4 previous errors\n \n+For more information about this error, try `rustc --explain E0308`."}, {"sha": "ce5e7d01723083e606e532e735da9483d2f3be78", "filename": "src/test/ui/regions/region-multiple-lifetime-bounds-on-fns-where-clause.nll.stderr", "status": "modified", "additions": 16, "deletions": 6, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/0c388b0261d7ac33089e5b10ab215653154a5293/src%2Ftest%2Fui%2Fregions%2Fregion-multiple-lifetime-bounds-on-fns-where-clause.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/0c388b0261d7ac33089e5b10ab215653154a5293/src%2Ftest%2Fui%2Fregions%2Fregion-multiple-lifetime-bounds-on-fns-where-clause.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fregions%2Fregion-multiple-lifetime-bounds-on-fns-where-clause.nll.stderr?ref=0c388b0261d7ac33089e5b10ab215653154a5293", "patch": "@@ -27,23 +27,33 @@ LL |     a(x, y, z);\n    = note: mutable references are invariant over their type parameter\n    = help: see <https://doc.rust-lang.org/nomicon/subtyping.html> for more information about variance\n \n-error: higher-ranked subtype error\n+error[E0308]: mismatched types\n   --> $DIR/region-multiple-lifetime-bounds-on-fns-where-clause.rs:22:12\n    |\n LL |     let _: fn(&mut &isize, &mut &isize, &mut &isize) = a;\n-   |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ one type is more general than the other\n+   |\n+   = note: expected fn pointer `for<'r, 's, 't0, 't1, 't2, 't3> fn(&'r mut &'s isize, &'t0 mut &'t1 isize, &'t2 mut &'t3 isize)`\n+              found fn pointer `for<'r, 's, 't0> fn(&'r mut &isize, &'s mut &isize, &'t0 mut &isize)`\n \n-error: higher-ranked subtype error\n+error[E0308]: mismatched types\n   --> $DIR/region-multiple-lifetime-bounds-on-fns-where-clause.rs:22:12\n    |\n LL |     let _: fn(&mut &isize, &mut &isize, &mut &isize) = a;\n-   |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ one type is more general than the other\n+   |\n+   = note: expected fn pointer `for<'r, 's, 't0, 't1, 't2, 't3> fn(&'r mut &'s isize, &'t0 mut &'t1 isize, &'t2 mut &'t3 isize)`\n+              found fn pointer `for<'r, 's, 't0> fn(&'r mut &isize, &'s mut &isize, &'t0 mut &isize)`\n \n-error: higher-ranked subtype error\n+error[E0308]: mismatched types\n   --> $DIR/region-multiple-lifetime-bounds-on-fns-where-clause.rs:22:12\n    |\n LL |     let _: fn(&mut &isize, &mut &isize, &mut &isize) = a;\n-   |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ one type is more general than the other\n+   |\n+   = note: expected fn pointer `for<'r, 's, 't0, 't1, 't2, 't3> fn(&'r mut &'s isize, &'t0 mut &'t1 isize, &'t2 mut &'t3 isize)`\n+              found fn pointer `for<'r, 's, 't0> fn(&'r mut &isize, &'s mut &isize, &'t0 mut &isize)`\n \n error: aborting due to 5 previous errors\n \n+For more information about this error, try `rustc --explain E0308`."}, {"sha": "c2956cd89580f757e4c66c47c49f05794301267d", "filename": "src/test/ui/regions/regions-fn-subtyping-return-static-fail.nll.stderr", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/0c388b0261d7ac33089e5b10ab215653154a5293/src%2Ftest%2Fui%2Fregions%2Fregions-fn-subtyping-return-static-fail.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/0c388b0261d7ac33089e5b10ab215653154a5293/src%2Ftest%2Fui%2Fregions%2Fregions-fn-subtyping-return-static-fail.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fregions%2Fregions-fn-subtyping-return-static-fail.nll.stderr?ref=0c388b0261d7ac33089e5b10ab215653154a5293", "patch": "@@ -1,8 +1,12 @@\n-error: higher-ranked subtype error\n+error[E0308]: mismatched types\n   --> $DIR/regions-fn-subtyping-return-static-fail.rs:48:5\n    |\n LL |     want_G(baz);\n-   |     ^^^^^^^^^^^\n+   |     ^^^^^^^^^^^ one type is more general than the other\n+   |\n+   = note: expected fn pointer `for<'cx> fn(&'cx S) -> &'static S`\n+              found fn pointer `for<'r> fn(&'r S) -> &'r S`\n \n error: aborting due to previous error\n \n+For more information about this error, try `rustc --explain E0308`."}, {"sha": "cae692ad2f6fa39a3689056ed9f28144f6f4f669", "filename": "src/test/ui/regions/regions-lifetime-bounds-on-fns.nll.stderr", "status": "modified", "additions": 11, "deletions": 4, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/0c388b0261d7ac33089e5b10ab215653154a5293/src%2Ftest%2Fui%2Fregions%2Fregions-lifetime-bounds-on-fns.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/0c388b0261d7ac33089e5b10ab215653154a5293/src%2Ftest%2Fui%2Fregions%2Fregions-lifetime-bounds-on-fns.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fregions%2Fregions-lifetime-bounds-on-fns.nll.stderr?ref=0c388b0261d7ac33089e5b10ab215653154a5293", "patch": "@@ -27,17 +27,24 @@ LL |     a(x, y);\n    = note: mutable references are invariant over their type parameter\n    = help: see <https://doc.rust-lang.org/nomicon/subtyping.html> for more information about variance\n \n-error: higher-ranked subtype error\n+error[E0308]: mismatched types\n   --> $DIR/regions-lifetime-bounds-on-fns.rs:20:12\n    |\n LL |     let _: fn(&mut &isize, &mut &isize) = a;\n-   |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ one type is more general than the other\n+   |\n+   = note: expected fn pointer `for<'r, 's, 't0, 't1> fn(&'r mut &'s isize, &'t0 mut &'t1 isize)`\n+              found fn pointer `for<'r, 's> fn(&'r mut &isize, &'s mut &isize)`\n \n-error: higher-ranked subtype error\n+error[E0308]: mismatched types\n   --> $DIR/regions-lifetime-bounds-on-fns.rs:20:12\n    |\n LL |     let _: fn(&mut &isize, &mut &isize) = a;\n-   |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ one type is more general than the other\n+   |\n+   = note: expected fn pointer `for<'r, 's, 't0, 't1> fn(&'r mut &'s isize, &'t0 mut &'t1 isize)`\n+              found fn pointer `for<'r, 's> fn(&'r mut &isize, &'s mut &isize)`\n \n error: aborting due to 4 previous errors\n \n+For more information about this error, try `rustc --explain E0308`."}]}