{"sha": "d1ce7ff84ec94d8d5d18368dc8c18560f327c9a1", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQxY2U3ZmY4NGVjOTRkOGQ1ZDE4MzY4ZGM4YzE4NTYwZjMyN2M5YTE=", "commit": {"author": {"name": "LeSeulArtichaut", "email": "leseulartichaut@gmail.com", "date": "2020-04-11T20:00:34Z"}, "committer": {"name": "LeSeulArtichaut", "email": "leseulartichaut@gmail.com", "date": "2020-04-11T20:00:34Z"}, "message": "Document unsafety in `src/libcore/hash/mod.rs`", "tree": {"sha": "8326abb6398275ba1296df15199cce249905c99c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8326abb6398275ba1296df15199cce249905c99c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d1ce7ff84ec94d8d5d18368dc8c18560f327c9a1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d1ce7ff84ec94d8d5d18368dc8c18560f327c9a1", "html_url": "https://github.com/rust-lang/rust/commit/d1ce7ff84ec94d8d5d18368dc8c18560f327c9a1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d1ce7ff84ec94d8d5d18368dc8c18560f327c9a1/comments", "author": {"login": "LeSeulArtichaut", "id": 38361244, "node_id": "MDQ6VXNlcjM4MzYxMjQ0", "avatar_url": "https://avatars.githubusercontent.com/u/38361244?v=4", "gravatar_id": "", "url": "https://api.github.com/users/LeSeulArtichaut", "html_url": "https://github.com/LeSeulArtichaut", "followers_url": "https://api.github.com/users/LeSeulArtichaut/followers", "following_url": "https://api.github.com/users/LeSeulArtichaut/following{/other_user}", "gists_url": "https://api.github.com/users/LeSeulArtichaut/gists{/gist_id}", "starred_url": "https://api.github.com/users/LeSeulArtichaut/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/LeSeulArtichaut/subscriptions", "organizations_url": "https://api.github.com/users/LeSeulArtichaut/orgs", "repos_url": "https://api.github.com/users/LeSeulArtichaut/repos", "events_url": "https://api.github.com/users/LeSeulArtichaut/events{/privacy}", "received_events_url": "https://api.github.com/users/LeSeulArtichaut/received_events", "type": "User", "site_admin": false}, "committer": {"login": "LeSeulArtichaut", "id": 38361244, "node_id": "MDQ6VXNlcjM4MzYxMjQ0", "avatar_url": "https://avatars.githubusercontent.com/u/38361244?v=4", "gravatar_id": "", "url": "https://api.github.com/users/LeSeulArtichaut", "html_url": "https://github.com/LeSeulArtichaut", "followers_url": "https://api.github.com/users/LeSeulArtichaut/followers", "following_url": "https://api.github.com/users/LeSeulArtichaut/following{/other_user}", "gists_url": "https://api.github.com/users/LeSeulArtichaut/gists{/gist_id}", "starred_url": "https://api.github.com/users/LeSeulArtichaut/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/LeSeulArtichaut/subscriptions", "organizations_url": "https://api.github.com/users/LeSeulArtichaut/orgs", "repos_url": "https://api.github.com/users/LeSeulArtichaut/repos", "events_url": "https://api.github.com/users/LeSeulArtichaut/events{/privacy}", "received_events_url": "https://api.github.com/users/LeSeulArtichaut/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "37514dedabd58f8146afcac6680dc0d77ef2193d", "url": "https://api.github.com/repos/rust-lang/rust/commits/37514dedabd58f8146afcac6680dc0d77ef2193d", "html_url": "https://github.com/rust-lang/rust/commit/37514dedabd58f8146afcac6680dc0d77ef2193d"}], "stats": {"total": 9, "additions": 7, "deletions": 2}, "files": [{"sha": "14ca0826733c0a39ef6b46ce570e538e4b425d58", "filename": "src/libcore/hash/mod.rs", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/d1ce7ff84ec94d8d5d18368dc8c18560f327c9a1/src%2Flibcore%2Fhash%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d1ce7ff84ec94d8d5d18368dc8c18560f327c9a1/src%2Flibcore%2Fhash%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fhash%2Fmod.rs?ref=d1ce7ff84ec94d8d5d18368dc8c18560f327c9a1", "patch": "@@ -79,8 +79,6 @@\n //! }\n //! ```\n \n-// ignore-tidy-undocumented-unsafe\n-\n #![stable(feature = \"rust1\", since = \"1.0.0\")]\n \n use crate::fmt;\n@@ -572,6 +570,9 @@ mod impls {\n                 fn hash_slice<H: Hasher>(data: &[$ty], state: &mut H) {\n                     let newlen = data.len() * mem::size_of::<$ty>();\n                     let ptr = data.as_ptr() as *const u8;\n+                    // SAFETY: `ptr` is valid and aligned, the new slice only spans\n+                    // across `data` and is never mutated, and its total size is the\n+                    // same as the original `data` so it can't be over `isize::MAX`.\n                     state.write(unsafe { slice::from_raw_parts(ptr, newlen) })\n                 }\n             }\n@@ -691,6 +692,8 @@ mod impls {\n                 state.write_usize(*self as *const () as usize);\n             } else {\n                 // Fat pointer\n+                // SAFETY: we are accessing the memory occupied by `self`\n+                // which is guaranteed to be valid.\n                 let (a, b) = unsafe { *(self as *const Self as *const (usize, usize)) };\n                 state.write_usize(a);\n                 state.write_usize(b);\n@@ -706,6 +709,8 @@ mod impls {\n                 state.write_usize(*self as *const () as usize);\n             } else {\n                 // Fat pointer\n+                // SAFETY: we are accessing the memory occupied by `self`\n+                // which is guaranteed to be valid.\n                 let (a, b) = unsafe { *(self as *const Self as *const (usize, usize)) };\n                 state.write_usize(a);\n                 state.write_usize(b);"}]}