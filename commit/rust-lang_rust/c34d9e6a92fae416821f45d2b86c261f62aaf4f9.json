{"sha": "c34d9e6a92fae416821f45d2b86c261f62aaf4f9", "node_id": "MDY6Q29tbWl0NzI0NzEyOmMzNGQ5ZTZhOTJmYWU0MTY4MjFmNDVkMmI4NmMyNjFmNjJhYWY0Zjk=", "commit": {"author": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2019-09-19T21:52:38Z"}, "committer": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2019-09-19T21:52:38Z"}, "message": "add comments", "tree": {"sha": "59cb45fcc16c6e6899c20f4fbd440d128b574bd0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/59cb45fcc16c6e6899c20f4fbd440d128b574bd0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c34d9e6a92fae416821f45d2b86c261f62aaf4f9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c34d9e6a92fae416821f45d2b86c261f62aaf4f9", "html_url": "https://github.com/rust-lang/rust/commit/c34d9e6a92fae416821f45d2b86c261f62aaf4f9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c34d9e6a92fae416821f45d2b86c261f62aaf4f9/comments", "author": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "committer": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d64c90d40b05c31404b7617d196b155f00ce999a", "url": "https://api.github.com/repos/rust-lang/rust/commits/d64c90d40b05c31404b7617d196b155f00ce999a", "html_url": "https://github.com/rust-lang/rust/commit/d64c90d40b05c31404b7617d196b155f00ce999a"}], "stats": {"total": 8, "additions": 8, "deletions": 0}, "files": [{"sha": "0406d7a12d243ace1a0aa1ba7caac035ecadd483", "filename": "src/librustc_typeck/check/mod.rs", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/c34d9e6a92fae416821f45d2b86c261f62aaf4f9/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c34d9e6a92fae416821f45d2b86c261f62aaf4f9/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs?ref=c34d9e6a92fae416821f45d2b86c261f62aaf4f9", "patch": "@@ -3372,6 +3372,10 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n         vec![self.tcx.types.err; len]\n     }\n \n+    /// Given a vec of evaluated `FullfillmentError`s and an `fn` call argument expressions, we\n+    /// walk the resolved types for each argument to see if any of the `FullfillmentError`s\n+    /// reference a type argument. If they do, and there's only *one* argument that does, we point\n+    /// at the corresponding argument's expression span instead of the `fn` call path span.\n     fn point_at_arg_instead_of_call_if_possible(\n         &self,\n         errors: &mut Vec<traits::FulfillmentError<'_>>,\n@@ -3384,9 +3388,13 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n             // the `?` operator.\n             for error in errors {\n                 if let ty::Predicate::Trait(predicate) = error.obligation.predicate {\n+                    // Collect the argument position for all arguments that could have caused this\n+                    // `FullfillmentError`.\n                     let mut referenced_in = final_arg_types.iter()\n                         .flat_map(|(i, ty)| {\n                             let ty = self.resolve_vars_if_possible(ty);\n+                            // We walk the argument type because the argument's type could have\n+                            // been `Option<T>`, but the `FullfillmentError` references `T`.\n                             ty.walk()\n                                 .filter(|&ty| ty == predicate.skip_binder().self_ty())\n                                 .map(move |_| *i)"}]}