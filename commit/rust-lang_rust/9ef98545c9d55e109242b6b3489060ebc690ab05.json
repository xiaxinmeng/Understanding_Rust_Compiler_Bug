{"sha": "9ef98545c9d55e109242b6b3489060ebc690ab05", "node_id": "MDY6Q29tbWl0NzI0NzEyOjllZjk4NTQ1YzlkNTVlMTA5MjQyYjZiMzQ4OTA2MGViYzY5MGFiMDU=", "commit": {"author": {"name": "kennytm", "email": "kennytm@gmail.com", "date": "2018-01-08T17:58:55Z"}, "committer": {"name": "kennytm", "email": "kennytm@gmail.com", "date": "2018-01-08T19:37:22Z"}, "message": "Rollup merge of #47272 - GuillaumeGomez:missing-links, r=QuietMisdreavus\n\nAdd missing links\n\nr? @QuietMisdreavus\n\n(please wait for CI, I have a few doubts about the `Write` trait links...)", "tree": {"sha": "91adae4383a3e9a5dcbd68543a78ef9adcda5b29", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/91adae4383a3e9a5dcbd68543a78ef9adcda5b29"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9ef98545c9d55e109242b6b3489060ebc690ab05", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEZ1R8CLMp8f2GxWoQ/vbIBR0OATwFAlpTyHIACgkQ/vbIBR0O\nATxAFxAAst2yDtwLebMQmc2smckw2N5yNUAy4kT/PvaVgna38UzXY8+3ksidYcrm\nSmpyth9a8J3GGjpTfgkFO2zI4+Std4xqRiJ76gWF+UhaMQsqRHMX+qRAnyMWMiEj\nG6BDhZvZXN/LXdzDekFRKWOpbTFXF1JSZh/8qSEXTG4oEe6H3Zj51k5Mp6SJUpY4\n0KTb90YwptlFpOTWON3/UETbKGN0mtKlxzs1r/9gqxrioZZfSTU+yoJGekG0M6tb\n+BgREgH25wSAx/jcG2k7nmrrwRtbT+LBN1sD82wp2DTxZdZMqxaQsFUqcaqV4pqo\nN+oKOMHZe+5uYkTov7I6SW6QQBLA1gcd36jOrEvDwVyMOkmAeq8J4kBmfyAMNOFy\nAEK/8HzBDrNQiHeSDFAJ5DyrXV/GFPJtuAOHAamJNAJz4S01eUP/qnkkWsv6uIlG\nZ22wOEOp2QBMV3FglYf4EfYxizQe9pXTfbaX2SykGnZiAuxay66F9sVB9+XpJffZ\nixW6zf3y4LBGIOkml8oiLyVazBAP6pu8U6DRO1Va5stzDAEU7gvkJw8L08Ufnrfs\n32v4KFevWKENdekR40QO3d/F+d/lis/1n/pyWYuAJQZ2PVCmB94x2L+33KdtZGz5\nY/9DldOCsHrE9EMbaoZ8sFHd0JjuWI6DydrYiF8dPUVFhNS1hZU=\n=sIv+\n-----END PGP SIGNATURE-----", "payload": "tree 91adae4383a3e9a5dcbd68543a78ef9adcda5b29\nparent 9dd7caef041e1b3ef52e9694d146c2170d833ad7\nparent 93969734f6a8f38e95c7038c926ab2504e87dad6\nauthor kennytm <kennytm@gmail.com> 1515434335 +0800\ncommitter kennytm <kennytm@gmail.com> 1515440242 +0800\n\nRollup merge of #47272 - GuillaumeGomez:missing-links, r=QuietMisdreavus\n\nAdd missing links\n\nr? @QuietMisdreavus\n\n(please wait for CI, I have a few doubts about the `Write` trait links...)\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9ef98545c9d55e109242b6b3489060ebc690ab05", "html_url": "https://github.com/rust-lang/rust/commit/9ef98545c9d55e109242b6b3489060ebc690ab05", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9ef98545c9d55e109242b6b3489060ebc690ab05/comments", "author": {"login": "kennytm", "id": 103023, "node_id": "MDQ6VXNlcjEwMzAyMw==", "avatar_url": "https://avatars.githubusercontent.com/u/103023?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kennytm", "html_url": "https://github.com/kennytm", "followers_url": "https://api.github.com/users/kennytm/followers", "following_url": "https://api.github.com/users/kennytm/following{/other_user}", "gists_url": "https://api.github.com/users/kennytm/gists{/gist_id}", "starred_url": "https://api.github.com/users/kennytm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kennytm/subscriptions", "organizations_url": "https://api.github.com/users/kennytm/orgs", "repos_url": "https://api.github.com/users/kennytm/repos", "events_url": "https://api.github.com/users/kennytm/events{/privacy}", "received_events_url": "https://api.github.com/users/kennytm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "kennytm", "id": 103023, "node_id": "MDQ6VXNlcjEwMzAyMw==", "avatar_url": "https://avatars.githubusercontent.com/u/103023?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kennytm", "html_url": "https://github.com/kennytm", "followers_url": "https://api.github.com/users/kennytm/followers", "following_url": "https://api.github.com/users/kennytm/following{/other_user}", "gists_url": "https://api.github.com/users/kennytm/gists{/gist_id}", "starred_url": "https://api.github.com/users/kennytm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kennytm/subscriptions", "organizations_url": "https://api.github.com/users/kennytm/orgs", "repos_url": "https://api.github.com/users/kennytm/repos", "events_url": "https://api.github.com/users/kennytm/events{/privacy}", "received_events_url": "https://api.github.com/users/kennytm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9dd7caef041e1b3ef52e9694d146c2170d833ad7", "url": "https://api.github.com/repos/rust-lang/rust/commits/9dd7caef041e1b3ef52e9694d146c2170d833ad7", "html_url": "https://github.com/rust-lang/rust/commit/9dd7caef041e1b3ef52e9694d146c2170d833ad7"}, {"sha": "93969734f6a8f38e95c7038c926ab2504e87dad6", "url": "https://api.github.com/repos/rust-lang/rust/commits/93969734f6a8f38e95c7038c926ab2504e87dad6", "html_url": "https://github.com/rust-lang/rust/commit/93969734f6a8f38e95c7038c926ab2504e87dad6"}], "stats": {"total": 26, "additions": 18, "deletions": 8}, "files": [{"sha": "65aacb23bd76813511c1381d85f73b17b1a1a344", "filename": "src/libcore/fmt/mod.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/9ef98545c9d55e109242b6b3489060ebc690ab05/src%2Flibcore%2Ffmt%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9ef98545c9d55e109242b6b3489060ebc690ab05/src%2Flibcore%2Ffmt%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Ffmt%2Fmod.rs?ref=9ef98545c9d55e109242b6b3489060ebc690ab05", "patch": "@@ -83,9 +83,12 @@ pub type Result = result::Result<(), Error>;\n /// some other means.\n ///\n /// An important thing to remember is that the type `fmt::Error` should not be\n-/// confused with `std::io::Error` or `std::error::Error`, which you may also\n+/// confused with [`std::io::Error`] or [`std::error::Error`], which you may also\n /// have in scope.\n ///\n+/// [`std::io::Error`]: ../../std/io/struct.Error.html\n+/// [`std::error::Error`]: ../../std/error/trait.Error.html\n+///\n /// # Examples\n ///\n /// ```rust"}, {"sha": "33d11ebb35022b2ad411e2de6d76fc8ac9077900", "filename": "src/libstd/io/mod.rs", "status": "modified", "additions": 14, "deletions": 7, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/9ef98545c9d55e109242b6b3489060ebc690ab05/src%2Flibstd%2Fio%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9ef98545c9d55e109242b6b3489060ebc690ab05/src%2Flibstd%2Fio%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fio%2Fmod.rs?ref=9ef98545c9d55e109242b6b3489060ebc690ab05", "patch": "@@ -997,9 +997,9 @@ pub trait Write {\n     ///\n     /// Calls to `write` are not guaranteed to block waiting for data to be\n     /// written, and a write which would otherwise block can be indicated through\n-    /// an `Err` variant.\n+    /// an [`Err`] variant.\n     ///\n-    /// If the return value is `Ok(n)` then it must be guaranteed that\n+    /// If the return value is [`Ok(n)`] then it must be guaranteed that\n     /// `0 <= n <= buf.len()`. A return value of `0` typically means that the\n     /// underlying object is no longer able to accept bytes and will likely not\n     /// be able to in the future as well, or that the buffer provided is empty.\n@@ -1013,9 +1013,13 @@ pub trait Write {\n     /// It is **not** considered an error if the entire buffer could not be\n     /// written to this writer.\n     ///\n-    /// An error of the `ErrorKind::Interrupted` kind is non-fatal and the\n+    /// An error of the [`ErrorKind::Interrupted`] kind is non-fatal and the\n     /// write operation should be retried if there is nothing else to do.\n     ///\n+    /// [`Err`]: ../../std/result/enum.Result.html#variant.Err\n+    /// [`Ok(n)`]:  ../../std/result/enum.Result.html#variant.Ok\n+    /// [`ErrorKind::Interrupted`]: ../../std/io/enum.ErrorKind.html#variant.Interrupted\n+    ///\n     /// # Examples\n     ///\n     /// ```\n@@ -1061,17 +1065,20 @@ pub trait Write {\n \n     /// Attempts to write an entire buffer into this write.\n     ///\n-    /// This method will continuously call `write` until there is no more data\n-    /// to be written or an error of non-`ErrorKind::Interrupted` kind is\n+    /// This method will continuously call [`write`] until there is no more data\n+    /// to be written or an error of non-[`ErrorKind::Interrupted`] kind is\n     /// returned. This method will not return until the entire buffer has been\n     /// successfully written or such an error occurs. The first error that is\n-    /// not of `ErrorKind::Interrupted` kind generated from this method will be\n+    /// not of [`ErrorKind::Interrupted`] kind generated from this method will be\n     /// returned.\n     ///\n     /// # Errors\n     ///\n     /// This function will return the first error of\n-    /// non-`ErrorKind::Interrupted` kind that `write` returns.\n+    /// non-[`ErrorKind::Interrupted`] kind that [`write`] returns.\n+    ///\n+    /// [`ErrorKind::Interrupted`]: ../../std/io/enum.ErrorKind.html#variant.Interrupted\n+    /// [`write`]: #tymethod.write\n     ///\n     /// # Examples\n     ///"}]}