{"sha": "54b26f49e6d30aefcbf206ee5cfcf6122503553c", "node_id": "C_kwDOAAsO6NoAKDU0YjI2ZjQ5ZTZkMzBhZWZjYmYyMDZlZTVjZmNmNjEyMjUwMzU1M2M", "commit": {"author": {"name": "Oleksii Lozovskyi", "email": "me@ilammy.net", "date": "2022-10-02T03:58:05Z"}, "committer": {"name": "Oleksii Lozovskyi", "email": "me@ilammy.net", "date": "2023-02-09T03:29:43Z"}, "message": "Test XRay only for supported targets\n\nNow that the compiler accepts \"-Z instrument-xray\" option only when\ntargeting one of the supported targets, make sure to not run the\ncodegen tests where the compiler will fail.\n\nLike with other compiletests, we don't have access to internals,\nso simply hardcode a list of supported architectures here.", "tree": {"sha": "c86e55fc022191bfdd526047d8860c5e06210273", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c86e55fc022191bfdd526047d8860c5e06210273"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/54b26f49e6d30aefcbf206ee5cfcf6122503553c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/54b26f49e6d30aefcbf206ee5cfcf6122503553c", "html_url": "https://github.com/rust-lang/rust/commit/54b26f49e6d30aefcbf206ee5cfcf6122503553c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/54b26f49e6d30aefcbf206ee5cfcf6122503553c/comments", "author": {"login": "ilammy", "id": 1256587, "node_id": "MDQ6VXNlcjEyNTY1ODc=", "avatar_url": "https://avatars.githubusercontent.com/u/1256587?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ilammy", "html_url": "https://github.com/ilammy", "followers_url": "https://api.github.com/users/ilammy/followers", "following_url": "https://api.github.com/users/ilammy/following{/other_user}", "gists_url": "https://api.github.com/users/ilammy/gists{/gist_id}", "starred_url": "https://api.github.com/users/ilammy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ilammy/subscriptions", "organizations_url": "https://api.github.com/users/ilammy/orgs", "repos_url": "https://api.github.com/users/ilammy/repos", "events_url": "https://api.github.com/users/ilammy/events{/privacy}", "received_events_url": "https://api.github.com/users/ilammy/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ilammy", "id": 1256587, "node_id": "MDQ6VXNlcjEyNTY1ODc=", "avatar_url": "https://avatars.githubusercontent.com/u/1256587?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ilammy", "html_url": "https://github.com/ilammy", "followers_url": "https://api.github.com/users/ilammy/followers", "following_url": "https://api.github.com/users/ilammy/following{/other_user}", "gists_url": "https://api.github.com/users/ilammy/gists{/gist_id}", "starred_url": "https://api.github.com/users/ilammy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ilammy/subscriptions", "organizations_url": "https://api.github.com/users/ilammy/orgs", "repos_url": "https://api.github.com/users/ilammy/repos", "events_url": "https://api.github.com/users/ilammy/events{/privacy}", "received_events_url": "https://api.github.com/users/ilammy/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3561dc948c1a2a24c2b49992099954a96be3c8ee", "url": "https://api.github.com/repos/rust-lang/rust/commits/3561dc948c1a2a24c2b49992099954a96be3c8ee", "html_url": "https://github.com/rust-lang/rust/commit/3561dc948c1a2a24c2b49992099954a96be3c8ee"}], "stats": {"total": 23, "additions": 23, "deletions": 0}, "files": [{"sha": "e11ebca6ea9af9bd116680857546d395b6b36bed", "filename": "src/tools/compiletest/src/header.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/54b26f49e6d30aefcbf206ee5cfcf6122503553c/src%2Ftools%2Fcompiletest%2Fsrc%2Fheader.rs", "raw_url": "https://github.com/rust-lang/rust/raw/54b26f49e6d30aefcbf206ee5cfcf6122503553c/src%2Ftools%2Fcompiletest%2Fsrc%2Fheader.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fcompiletest%2Fsrc%2Fheader.rs?ref=54b26f49e6d30aefcbf206ee5cfcf6122503553c", "patch": "@@ -941,6 +941,7 @@ pub fn make_test_description<R: Read>(\n     let has_hwasan = util::HWASAN_SUPPORTED_TARGETS.contains(&&*config.target);\n     let has_memtag = util::MEMTAG_SUPPORTED_TARGETS.contains(&&*config.target);\n     let has_shadow_call_stack = util::SHADOWCALLSTACK_SUPPORTED_TARGETS.contains(&&*config.target);\n+    let has_xray = util::XRAY_SUPPORTED_TARGETS.contains(&&*config.target);\n \n     // For tests using the `needs-rust-lld` directive (e.g. for `-Zgcc-ld=lld`), we need to find\n     // whether `rust-lld` is present in the compiler under test.\n@@ -1019,6 +1020,7 @@ pub fn make_test_description<R: Read>(\n                 && config.parse_name_directive(ln, \"needs-sanitizer-shadow-call-stack\")\n         );\n         reason!(!config.can_unwind() && config.parse_name_directive(ln, \"needs-unwind\"));\n+        reason!(!has_xray && config.parse_name_directive(ln, \"needs-xray\"));\n         reason!(\n             config.target == \"wasm32-unknown-unknown\"\n                 && config.parse_name_directive(ln, directives::CHECK_RUN_RESULTS)"}, {"sha": "67f49bb6397c2f21779177f54dfd81fd47658b8e", "filename": "src/tools/compiletest/src/util.rs", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/54b26f49e6d30aefcbf206ee5cfcf6122503553c/src%2Ftools%2Fcompiletest%2Fsrc%2Futil.rs", "raw_url": "https://github.com/rust-lang/rust/raw/54b26f49e6d30aefcbf206ee5cfcf6122503553c/src%2Ftools%2Fcompiletest%2Fsrc%2Futil.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fcompiletest%2Fsrc%2Futil.rs?ref=54b26f49e6d30aefcbf206ee5cfcf6122503553c", "patch": "@@ -78,6 +78,19 @@ pub const MEMTAG_SUPPORTED_TARGETS: &[&str] =\n \n pub const SHADOWCALLSTACK_SUPPORTED_TARGETS: &[&str] = &[\"aarch64-linux-android\"];\n \n+pub const XRAY_SUPPORTED_TARGETS: &[&str] = &[\n+    \"aarch64-linux-android\",\n+    \"aarch64-unknown-linux-gnu\",\n+    \"aarch64-unknown-linux-musl\",\n+    \"x86_64-linux-android\",\n+    \"x86_64-unknown-freebsd\",\n+    \"x86_64-unknown-linux-gnu\",\n+    \"x86_64-unknown-linux-musl\",\n+    \"x86_64-unknown-netbsd\",\n+    \"x86_64-unknown-none-linuxkernel\",\n+    \"x86_64-unknown-openbsd\",\n+];\n+\n pub fn make_new_path(path: &str) -> String {\n     assert!(cfg!(windows));\n     // Windows just uses PATH as the library search path, so we have to"}, {"sha": "d3e49d53174428dad08d97fec891080c3ae409c7", "filename": "tests/codegen/instrument-xray/basic.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/54b26f49e6d30aefcbf206ee5cfcf6122503553c/tests%2Fcodegen%2Finstrument-xray%2Fbasic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/54b26f49e6d30aefcbf206ee5cfcf6122503553c/tests%2Fcodegen%2Finstrument-xray%2Fbasic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcodegen%2Finstrument-xray%2Fbasic.rs?ref=54b26f49e6d30aefcbf206ee5cfcf6122503553c", "patch": "@@ -1,5 +1,6 @@\n // Checks that `-Z instrument-xray` produces expected instrumentation.\n //\n+// needs-xray\n // compile-flags: -Z instrument-xray=always\n \n #![crate_type = \"lib\"]"}, {"sha": "f7e500b65f62d9e7ffefc4825570f0df3617a7be", "filename": "tests/codegen/instrument-xray/options-combine.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/54b26f49e6d30aefcbf206ee5cfcf6122503553c/tests%2Fcodegen%2Finstrument-xray%2Foptions-combine.rs", "raw_url": "https://github.com/rust-lang/rust/raw/54b26f49e6d30aefcbf206ee5cfcf6122503553c/tests%2Fcodegen%2Finstrument-xray%2Foptions-combine.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcodegen%2Finstrument-xray%2Foptions-combine.rs?ref=54b26f49e6d30aefcbf206ee5cfcf6122503553c", "patch": "@@ -1,5 +1,6 @@\n // Checks that `-Z instrument-xray` options can be specified multiple times.\n //\n+// needs-xray\n // compile-flags: -Z instrument-xray=skip-exit\n // compile-flags: -Z instrument-xray=instruction-threshold=123\n // compile-flags: -Z instrument-xray=instruction-threshold=456"}, {"sha": "00f81837902dd5d381bf94d82d9d784881a3e814", "filename": "tests/codegen/instrument-xray/options-override.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/54b26f49e6d30aefcbf206ee5cfcf6122503553c/tests%2Fcodegen%2Finstrument-xray%2Foptions-override.rs", "raw_url": "https://github.com/rust-lang/rust/raw/54b26f49e6d30aefcbf206ee5cfcf6122503553c/tests%2Fcodegen%2Finstrument-xray%2Foptions-override.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcodegen%2Finstrument-xray%2Foptions-override.rs?ref=54b26f49e6d30aefcbf206ee5cfcf6122503553c", "patch": "@@ -1,5 +1,6 @@\n // Checks that the last `-Z instrument-xray` option wins.\n //\n+// needs-xray\n // compile-flags: -Z instrument-xray=always\n // compile-flags: -Z instrument-xray=never\n "}, {"sha": "4dd43439eb7c2db6ee0b2a34930a5c826a0a0ce1", "filename": "tests/ui/instrument-xray/flags-always-never-1.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/54b26f49e6d30aefcbf206ee5cfcf6122503553c/tests%2Fui%2Finstrument-xray%2Fflags-always-never-1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/54b26f49e6d30aefcbf206ee5cfcf6122503553c/tests%2Fui%2Finstrument-xray%2Fflags-always-never-1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Finstrument-xray%2Fflags-always-never-1.rs?ref=54b26f49e6d30aefcbf206ee5cfcf6122503553c", "patch": "@@ -1,5 +1,6 @@\n // Checks that `-Z instrument-xray` does not allow `always` and `never` simultaneously.\n //\n+// needs-xray\n // compile-flags: -Z instrument-xray=always,never\n // error-pattern: incorrect value `always,never` for unstable option `instrument-xray`\n "}, {"sha": "7310aa0a0d288a987f83dc3acc51058a88163eb4", "filename": "tests/ui/instrument-xray/flags-always-never-2.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/54b26f49e6d30aefcbf206ee5cfcf6122503553c/tests%2Fui%2Finstrument-xray%2Fflags-always-never-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/54b26f49e6d30aefcbf206ee5cfcf6122503553c/tests%2Fui%2Finstrument-xray%2Fflags-always-never-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Finstrument-xray%2Fflags-always-never-2.rs?ref=54b26f49e6d30aefcbf206ee5cfcf6122503553c", "patch": "@@ -1,6 +1,7 @@\n // Checks that `-Z instrument-xray` allows `always` and `never` sequentially.\n // (The last specified setting wins, like `-Z instrument-xray=no` as well.)\n //\n+// needs-xray\n // compile-flags: -Z instrument-xray=always\n // compile-flags: -Z instrument-xray=never\n // check-pass"}, {"sha": "b97f0dd8a072ca9dd50d0723e5658bd0a5468aac", "filename": "tests/ui/instrument-xray/flags-basic.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/54b26f49e6d30aefcbf206ee5cfcf6122503553c/tests%2Fui%2Finstrument-xray%2Fflags-basic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/54b26f49e6d30aefcbf206ee5cfcf6122503553c/tests%2Fui%2Finstrument-xray%2Fflags-basic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Finstrument-xray%2Fflags-basic.rs?ref=54b26f49e6d30aefcbf206ee5cfcf6122503553c", "patch": "@@ -1,5 +1,6 @@\n // Verifies basic `-Z instrument-xray` flags.\n //\n+// needs-xray\n // compile-flags: -Z instrument-xray\n // compile-flags: -Z instrument-xray=skip-exit\n // compile-flags: -Z instrument-xray=ignore-loops,instruction-threshold=300"}, {"sha": "407f3e2aa5da8f45916a05d2362ea9b11d8c331c", "filename": "tests/ui/instrument-xray/flags-dupe-always.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/54b26f49e6d30aefcbf206ee5cfcf6122503553c/tests%2Fui%2Finstrument-xray%2Fflags-dupe-always.rs", "raw_url": "https://github.com/rust-lang/rust/raw/54b26f49e6d30aefcbf206ee5cfcf6122503553c/tests%2Fui%2Finstrument-xray%2Fflags-dupe-always.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Finstrument-xray%2Fflags-dupe-always.rs?ref=54b26f49e6d30aefcbf206ee5cfcf6122503553c", "patch": "@@ -1,5 +1,6 @@\n // Checks that `-Z instrument-xray` does not allow duplicates.\n //\n+// needs-xray\n // compile-flags: -Z instrument-xray=always,always\n // error-pattern: incorrect value `always,always` for unstable option `instrument-xray`\n "}, {"sha": "75b210a6547ec3d23c18ac3d18c47b606b01428b", "filename": "tests/ui/instrument-xray/flags-dupe-ignore-loops.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/54b26f49e6d30aefcbf206ee5cfcf6122503553c/tests%2Fui%2Finstrument-xray%2Fflags-dupe-ignore-loops.rs", "raw_url": "https://github.com/rust-lang/rust/raw/54b26f49e6d30aefcbf206ee5cfcf6122503553c/tests%2Fui%2Finstrument-xray%2Fflags-dupe-ignore-loops.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Finstrument-xray%2Fflags-dupe-ignore-loops.rs?ref=54b26f49e6d30aefcbf206ee5cfcf6122503553c", "patch": "@@ -1,5 +1,6 @@\n // Checks that `-Z instrument-xray` does not allow duplicates.\n //\n+// needs-xray\n // compile-flags: -Z instrument-xray=ignore-loops,ignore-loops\n // error-pattern: incorrect value `ignore-loops,ignore-loops` for unstable option `instrument-xray`\n "}]}