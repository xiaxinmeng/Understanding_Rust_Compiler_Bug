{"sha": "d6952121e0a4654c7d94bfe679c97afac8f66ce9", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQ2OTUyMTIxZTBhNDY1NGM3ZDk0YmZlNjc5Yzk3YWZhYzhmNjZjZTk=", "commit": {"author": {"name": "Martin Pool", "email": "mbp@sourcefrog.net", "date": "2015-11-28T01:35:12Z"}, "committer": {"name": "Martin Pool", "email": "mbp@sourcefrog.net", "date": "2015-11-28T01:35:12Z"}, "message": "Attempted documentation of coercions\n\nTrying to summarize here only the cases that will make sense at the\nlevel of the rust book", "tree": {"sha": "f2c37f7f3803ad82ae7947ed93f342d8516ae759", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f2c37f7f3803ad82ae7947ed93f342d8516ae759"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d6952121e0a4654c7d94bfe679c97afac8f66ce9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d6952121e0a4654c7d94bfe679c97afac8f66ce9", "html_url": "https://github.com/rust-lang/rust/commit/d6952121e0a4654c7d94bfe679c97afac8f66ce9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d6952121e0a4654c7d94bfe679c97afac8f66ce9/comments", "author": {"login": "sourcefrog", "id": 346355, "node_id": "MDQ6VXNlcjM0NjM1NQ==", "avatar_url": "https://avatars.githubusercontent.com/u/346355?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sourcefrog", "html_url": "https://github.com/sourcefrog", "followers_url": "https://api.github.com/users/sourcefrog/followers", "following_url": "https://api.github.com/users/sourcefrog/following{/other_user}", "gists_url": "https://api.github.com/users/sourcefrog/gists{/gist_id}", "starred_url": "https://api.github.com/users/sourcefrog/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sourcefrog/subscriptions", "organizations_url": "https://api.github.com/users/sourcefrog/orgs", "repos_url": "https://api.github.com/users/sourcefrog/repos", "events_url": "https://api.github.com/users/sourcefrog/events{/privacy}", "received_events_url": "https://api.github.com/users/sourcefrog/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sourcefrog", "id": 346355, "node_id": "MDQ6VXNlcjM0NjM1NQ==", "avatar_url": "https://avatars.githubusercontent.com/u/346355?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sourcefrog", "html_url": "https://github.com/sourcefrog", "followers_url": "https://api.github.com/users/sourcefrog/followers", "following_url": "https://api.github.com/users/sourcefrog/following{/other_user}", "gists_url": "https://api.github.com/users/sourcefrog/gists{/gist_id}", "starred_url": "https://api.github.com/users/sourcefrog/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sourcefrog/subscriptions", "organizations_url": "https://api.github.com/users/sourcefrog/orgs", "repos_url": "https://api.github.com/users/sourcefrog/repos", "events_url": "https://api.github.com/users/sourcefrog/events{/privacy}", "received_events_url": "https://api.github.com/users/sourcefrog/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f34e6ff084ec6b7260e2014cbe09f4f44993ea63", "url": "https://api.github.com/repos/rust-lang/rust/commits/f34e6ff084ec6b7260e2014cbe09f4f44993ea63", "html_url": "https://github.com/rust-lang/rust/commit/f34e6ff084ec6b7260e2014cbe09f4f44993ea63"}], "stats": {"total": 22, "additions": 19, "deletions": 3}, "files": [{"sha": "a5849e2f05113fb438ea08a96e43ede56c84e2a1", "filename": "src/doc/book/casting-between-types.md", "status": "modified", "additions": 19, "deletions": 3, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/d6952121e0a4654c7d94bfe679c97afac8f66ce9/src%2Fdoc%2Fbook%2Fcasting-between-types.md", "raw_url": "https://github.com/rust-lang/rust/raw/d6952121e0a4654c7d94bfe679c97afac8f66ce9/src%2Fdoc%2Fbook%2Fcasting-between-types.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Fbook%2Fcasting-between-types.md?ref=d6952121e0a4654c7d94bfe679c97afac8f66ce9", "patch": "@@ -5,6 +5,22 @@ different types between each other. The first, `as`, is for safe casts.\n In contrast, `transmute` allows for arbitrary casting, and is one of the\n most dangerous features of Rust!\n \n+# Coercion\n+\n+Coercion between types is implicit and has no explicit syntax. Coercion occurs\n+in `let`, `const`, and `static` statements; in function call arguments; in\n+field values in struct initialization; and in a function result.\n+\n+The main cases of coercion are:\n+\n+ * `&mut T` to `&T`\n+\n+ * `*mut T` to `*const T`\n+\n+ * `&T` to `*const T`\n+\n+ * `&mut T` to `*mut T`\n+ \n # `as`\n \n The `as` keyword does safe casting:\n@@ -31,10 +47,10 @@ For example:\n \n ```rust\n let a = \"hello\";\n-let b = a as String\n+let b = a as String;\n ```\n \n-Coercions always occur implicitly so this form is only for clarity.\n+All coercions will be made implicitly when necessary and unambiguous.\n \n ## Numeric casts\n \n@@ -58,7 +74,7 @@ Perhaps surprisingly, it is safe to cast pointers to and from integers, and\n to cast between pointers to different types subject to some constraints. It\n is only unsafe to dereference the pointer.\n \n-* `e` has type `*T`, `U` is a pointer to `*U_0`, and either `U_0: Sized` or\n+* `e` has type `*T`, `U` has type `*U_0`, and either `U_0: Sized` or\n   unsize_kind(`T`) = unsize_kind(`U_0`); a *ptr-ptr-cast*\n * `e` has type `*T` and `U` is a numeric type, while `T: Sized`; *ptr-addr-cast*\n * `e` is an integer and `U` is `*U_0`, while `U_0: Sized`; *addr-ptr-cast*"}]}