{"sha": "ae2f2991860f1d117414a61b0b0c862a8e2d3468", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFlMmYyOTkxODYwZjFkMTE3NDE0YTYxYjBiMGM4NjJhOGUyZDM0Njg=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2018-05-31T13:14:18Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2018-05-31T13:14:18Z"}, "message": "Auto merge of #51203 - nnethercote:obligations-2, r=michaelwoerister\n\nTwo minor `obligation_forest` tweaks.\n\nPretty minimal improvements, but improvements nonetheless.", "tree": {"sha": "942a72dc80e9c14b3d01afdc0be23bb69ecbd33f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/942a72dc80e9c14b3d01afdc0be23bb69ecbd33f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ae2f2991860f1d117414a61b0b0c862a8e2d3468", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ae2f2991860f1d117414a61b0b0c862a8e2d3468", "html_url": "https://github.com/rust-lang/rust/commit/ae2f2991860f1d117414a61b0b0c862a8e2d3468", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ae2f2991860f1d117414a61b0b0c862a8e2d3468/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "30cae5870907e7ae9e74a39eee5bcf55ee5d2809", "url": "https://api.github.com/repos/rust-lang/rust/commits/30cae5870907e7ae9e74a39eee5bcf55ee5d2809", "html_url": "https://github.com/rust-lang/rust/commit/30cae5870907e7ae9e74a39eee5bcf55ee5d2809"}, {"sha": "a5ffcf6dd830367ccd9b0924c1a1f052330173a2", "url": "https://api.github.com/repos/rust-lang/rust/commits/a5ffcf6dd830367ccd9b0924c1a1f052330173a2", "html_url": "https://github.com/rust-lang/rust/commit/a5ffcf6dd830367ccd9b0924c1a1f052330173a2"}], "stats": {"total": 7, "additions": 2, "deletions": 5}, "files": [{"sha": "612f44f09cf65cf0ac614396061f238eed68783e", "filename": "src/librustc_data_structures/obligation_forest/mod.rs", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/ae2f2991860f1d117414a61b0b0c862a8e2d3468/src%2Flibrustc_data_structures%2Fobligation_forest%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ae2f2991860f1d117414a61b0b0c862a8e2d3468/src%2Flibrustc_data_structures%2Fobligation_forest%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_data_structures%2Fobligation_forest%2Fmod.rs?ref=ae2f2991860f1d117414a61b0b0c862a8e2d3468", "patch": "@@ -75,9 +75,6 @@ pub struct ObligationForest<O: ForestObligation> {\n     done_cache: FxHashSet<O::Predicate>,\n     /// An cache of the nodes in `nodes`, indexed by predicate.\n     waiting_cache: FxHashMap<O::Predicate, NodeIndex>,\n-    /// A list of the obligations added in snapshots, to allow\n-    /// for their removal.\n-    cache_list: Vec<O::Predicate>,\n     scratch: Option<Vec<usize>>,\n }\n \n@@ -158,7 +155,6 @@ impl<O: ForestObligation> ObligationForest<O> {\n             nodes: vec![],\n             done_cache: FxHashSet(),\n             waiting_cache: FxHashMap(),\n-            cache_list: vec![],\n             scratch: Some(vec![]),\n         }\n     }\n@@ -207,7 +203,6 @@ impl<O: ForestObligation> ObligationForest<O> {\n                 debug!(\"register_obligation_at({:?}, {:?}) - ok, new index is {}\",\n                        obligation, parent, self.nodes.len());\n                 v.insert(NodeIndex::new(self.nodes.len()));\n-                self.cache_list.push(obligation.as_predicate().clone());\n                 self.nodes.push(Node::new(parent, obligation));\n                 Ok(())\n             }"}, {"sha": "d89bd22ec9637d2221b0a7cc3b7b8b05b0456776", "filename": "src/librustc_data_structures/obligation_forest/node_index.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ae2f2991860f1d117414a61b0b0c862a8e2d3468/src%2Flibrustc_data_structures%2Fobligation_forest%2Fnode_index.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ae2f2991860f1d117414a61b0b0c862a8e2d3468/src%2Flibrustc_data_structures%2Fobligation_forest%2Fnode_index.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_data_structures%2Fobligation_forest%2Fnode_index.rs?ref=ae2f2991860f1d117414a61b0b0c862a8e2d3468", "patch": "@@ -17,11 +17,13 @@ pub struct NodeIndex {\n }\n \n impl NodeIndex {\n+    #[inline]\n     pub fn new(value: usize) -> NodeIndex {\n         assert!(value < (u32::MAX as usize));\n         NodeIndex { index: NonZeroU32::new((value as u32) + 1).unwrap() }\n     }\n \n+    #[inline]\n     pub fn get(self) -> usize {\n         (self.index.get() - 1) as usize\n     }"}]}