{"sha": "eda35e153bc6f323d0707dff89a99d0034a1f39d", "node_id": "MDY6Q29tbWl0NzI0NzEyOmVkYTM1ZTE1M2JjNmYzMjNkMDcwN2RmZjg5YTk5ZDAwMzRhMWYzOWQ=", "commit": {"author": {"name": "David Cook", "email": "divergentdave@gmail.com", "date": "2020-01-31T00:38:30Z"}, "committer": {"name": "David Cook", "email": "divergentdave@gmail.com", "date": "2020-02-18T04:24:33Z"}, "message": "Add methods to FileHandler", "tree": {"sha": "bc89c4ce2f211271cbec45ffe0329116f3dcb0f1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bc89c4ce2f211271cbec45ffe0329116f3dcb0f1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/eda35e153bc6f323d0707dff89a99d0034a1f39d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/eda35e153bc6f323d0707dff89a99d0034a1f39d", "html_url": "https://github.com/rust-lang/rust/commit/eda35e153bc6f323d0707dff89a99d0034a1f39d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/eda35e153bc6f323d0707dff89a99d0034a1f39d/comments", "author": {"login": "divergentdave", "id": 181772, "node_id": "MDQ6VXNlcjE4MTc3Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/181772?v=4", "gravatar_id": "", "url": "https://api.github.com/users/divergentdave", "html_url": "https://github.com/divergentdave", "followers_url": "https://api.github.com/users/divergentdave/followers", "following_url": "https://api.github.com/users/divergentdave/following{/other_user}", "gists_url": "https://api.github.com/users/divergentdave/gists{/gist_id}", "starred_url": "https://api.github.com/users/divergentdave/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/divergentdave/subscriptions", "organizations_url": "https://api.github.com/users/divergentdave/orgs", "repos_url": "https://api.github.com/users/divergentdave/repos", "events_url": "https://api.github.com/users/divergentdave/events{/privacy}", "received_events_url": "https://api.github.com/users/divergentdave/received_events", "type": "User", "site_admin": false}, "committer": {"login": "divergentdave", "id": 181772, "node_id": "MDQ6VXNlcjE4MTc3Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/181772?v=4", "gravatar_id": "", "url": "https://api.github.com/users/divergentdave", "html_url": "https://github.com/divergentdave", "followers_url": "https://api.github.com/users/divergentdave/followers", "following_url": "https://api.github.com/users/divergentdave/following{/other_user}", "gists_url": "https://api.github.com/users/divergentdave/gists{/gist_id}", "starred_url": "https://api.github.com/users/divergentdave/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/divergentdave/subscriptions", "organizations_url": "https://api.github.com/users/divergentdave/orgs", "repos_url": "https://api.github.com/users/divergentdave/repos", "events_url": "https://api.github.com/users/divergentdave/events{/privacy}", "received_events_url": "https://api.github.com/users/divergentdave/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1de9d107cf0e6f922fc017606a675b6a727e2bd6", "url": "https://api.github.com/repos/rust-lang/rust/commits/1de9d107cf0e6f922fc017606a675b6a727e2bd6", "html_url": "https://github.com/rust-lang/rust/commit/1de9d107cf0e6f922fc017606a675b6a727e2bd6"}], "stats": {"total": 24, "additions": 17, "deletions": 7}, "files": [{"sha": "792996f678d4e04dc60f9fd5adc3e597ada729e1", "filename": "src/shims/fs.rs", "status": "modified", "additions": 17, "deletions": 7, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/eda35e153bc6f323d0707dff89a99d0034a1f39d/src%2Fshims%2Ffs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/eda35e153bc6f323d0707dff89a99d0034a1f39d/src%2Fshims%2Ffs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fshims%2Ffs.rs?ref=eda35e153bc6f323d0707dff89a99d0034a1f39d", "patch": "@@ -23,6 +23,17 @@ pub struct FileHandler {\n     low: i32,\n }\n \n+impl FileHandler {\n+    fn next_fd(&self) -> i32 {\n+        self.low + 1\n+    }\n+\n+    fn register_fd(&mut self, fd: i32, handle: FileHandle) {\n+        self.low = fd;\n+        self.handles.insert(fd, handle).unwrap_none();\n+    }\n+}\n+\n impl Default for FileHandler {\n     fn default() -> Self {\n         FileHandler {\n@@ -107,10 +118,10 @@ pub trait EvalContextExt<'mir, 'tcx: 'mir>: crate::MiriEvalContextExt<'mir, 'tcx\n         let path = this.read_os_str_from_c_str(this.read_scalar(path_op)?.not_undef()?)?;\n \n         let fd = options.open(&path).map(|file| {\n-            let mut fh = &mut this.machine.file_handler;\n-            fh.low += 1;\n-            fh.handles.insert(fh.low, FileHandle { file, writable }).unwrap_none();\n-            fh.low\n+            let fh = &mut this.machine.file_handler;\n+            let fd = fh.next_fd();\n+            fh.register_fd(fd, FileHandle { file, writable });\n+            fd\n         });\n \n         this.try_unwrap_io_result(fd)\n@@ -153,9 +164,8 @@ pub trait EvalContextExt<'mir, 'tcx: 'mir>: crate::MiriEvalContextExt<'mir, 'tcx\n                 None => return this.handle_not_found(),\n             };\n             let fd_result = file_result.map(|duplicated| {\n-                let new_fd = std::cmp::max(fh.low + 1, arg);\n-                fh.low = new_fd;\n-                fh.handles.insert(fh.low, FileHandle { file: duplicated, writable }).unwrap_none();\n+                let new_fd = std::cmp::max(fh.next_fd(), arg);\n+                fh.register_fd(new_fd, FileHandle { file: duplicated, writable });\n                 new_fd\n             });\n             this.try_unwrap_io_result(fd_result)"}]}