{"sha": "b53ff214aa9fe30eeedb64f78cc89561060c0083", "node_id": "MDY6Q29tbWl0NzI0NzEyOmI1M2ZmMjE0YWE5ZmUzMGVlZWRiNjRmNzhjYzg5NTYxMDYwYzAwODM=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2020-02-29T10:56:10Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-02-29T10:56:10Z"}, "message": "Merge #3374\n\n3374: More orthogonal API for building paths r=matklad a=matklad\n\n\n\nbors r+\n\ud83e\udd16\n\nCo-authored-by: Aleksey Kladov <aleksey.kladov@gmail.com>", "tree": {"sha": "f78e3650b3cd4ca1f13a7fdc90b9f4f60e0c6ce0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f78e3650b3cd4ca1f13a7fdc90b9f4f60e0c6ce0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b53ff214aa9fe30eeedb64f78cc89561060c0083", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJeWkNKCRBK7hj4Ov3rIwAAdHIIAB0Q4nTrXT+pCtkgdkTYuP/Q\nPTmG526kef1xtYwB7FDBgqUKoEg8SksgDordcEmUuE8mOzv+ldVBhgTFnV8tNOtc\nwCjjgGkdnFefOcpZ4BiB86VqOgLaUYd1WbBRVs4YE/9FAhrrURZvN6Q05xP9RxIr\nFG0fE6Gv7KumXKq1Dk6XggTaCuOfLbyOhzlzCP65YUBu6UqXvXVW8YtaMCqoqdvm\n7LSSzAoEyyvxjRV96/Y9IYM0bwvy3FcWN218rFnDnfgCBH7/HjBncP0r2WSlvulK\nmBuLDduQjxQTrgBUwXz4BWp5D5pbElWG9AIGQnhbKsu7gbWY5FwDBurjT9DogB8=\n=ha+1\n-----END PGP SIGNATURE-----\n", "payload": "tree f78e3650b3cd4ca1f13a7fdc90b9f4f60e0c6ce0\nparent 7cf710c66f5645193a765ededfed77eaec9a19a9\nparent ca713e462b90afd650a5c07014e066d0aa4dbd69\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1582973770 +0000\ncommitter GitHub <noreply@github.com> 1582973770 +0000\n\nMerge #3374\n\n3374: More orthogonal API for building paths r=matklad a=matklad\n\n\n\nbors r+\n\ud83e\udd16\n\nCo-authored-by: Aleksey Kladov <aleksey.kladov@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b53ff214aa9fe30eeedb64f78cc89561060c0083", "html_url": "https://github.com/rust-lang/rust/commit/b53ff214aa9fe30eeedb64f78cc89561060c0083", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b53ff214aa9fe30eeedb64f78cc89561060c0083/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7cf710c66f5645193a765ededfed77eaec9a19a9", "url": "https://api.github.com/repos/rust-lang/rust/commits/7cf710c66f5645193a765ededfed77eaec9a19a9", "html_url": "https://github.com/rust-lang/rust/commit/7cf710c66f5645193a765ededfed77eaec9a19a9"}, {"sha": "ca713e462b90afd650a5c07014e066d0aa4dbd69", "url": "https://api.github.com/repos/rust-lang/rust/commits/ca713e462b90afd650a5c07014e066d0aa4dbd69", "html_url": "https://github.com/rust-lang/rust/commit/ca713e462b90afd650a5c07014e066d0aa4dbd69"}], "stats": {"total": 40, "additions": 25, "deletions": 15}, "files": [{"sha": "f57ecd07a0fad081c6b79527960027cf1fdf32bd", "filename": "crates/ra_assists/src/handlers/early_return.rs", "status": "modified", "additions": 13, "deletions": 10, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/b53ff214aa9fe30eeedb64f78cc89561060c0083/crates%2Fra_assists%2Fsrc%2Fhandlers%2Fearly_return.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b53ff214aa9fe30eeedb64f78cc89561060c0083/crates%2Fra_assists%2Fsrc%2Fhandlers%2Fearly_return.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_assists%2Fsrc%2Fhandlers%2Fearly_return.rs?ref=b53ff214aa9fe30eeedb64f78cc89561060c0083", "patch": "@@ -112,16 +112,19 @@ pub(crate) fn convert_to_guarded_return(ctx: AssistCtx) -> Option<Assist> {\n             Some((path, bound_ident)) => {\n                 // If-let.\n                 let match_expr = {\n-                    let happy_arm = make::match_arm(\n-                        once(\n-                            make::tuple_struct_pat(\n-                                path,\n-                                once(make::bind_pat(make::name(\"it\")).into()),\n-                            )\n-                            .into(),\n-                        ),\n-                        make::expr_path(make::path_from_name_ref(make::name_ref(\"it\"))),\n-                    );\n+                    let happy_arm = {\n+                        let pat = make::tuple_struct_pat(\n+                            path,\n+                            once(make::bind_pat(make::name(\"it\")).into()),\n+                        );\n+                        let expr = {\n+                            let name_ref = make::name_ref(\"it\");\n+                            let segment = make::path_segment(name_ref);\n+                            let path = make::path_unqalified(segment);\n+                            make::expr_path(path)\n+                        };\n+                        make::match_arm(once(pat.into()), expr)\n+                    };\n \n                     let sad_arm = make::match_arm(\n                         // FIXME: would be cool to use `None` or `Err(_)` if appropriate"}, {"sha": "616b957700da3d4c1f169d2abb95c4e1a4503f34", "filename": "crates/ra_assists/src/handlers/move_bounds.rs", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/b53ff214aa9fe30eeedb64f78cc89561060c0083/crates%2Fra_assists%2Fsrc%2Fhandlers%2Fmove_bounds.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b53ff214aa9fe30eeedb64f78cc89561060c0083/crates%2Fra_assists%2Fsrc%2Fhandlers%2Fmove_bounds.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_assists%2Fsrc%2Fhandlers%2Fmove_bounds.rs?ref=b53ff214aa9fe30eeedb64f78cc89561060c0083", "patch": "@@ -72,7 +72,11 @@ pub(crate) fn move_bounds_to_where_clause(ctx: AssistCtx) -> Option<Assist> {\n }\n \n fn build_predicate(param: ast::TypeParam) -> Option<ast::WherePred> {\n-    let path = make::path_from_name_ref(make::name_ref(&param.name()?.syntax().to_string()));\n+    let path = {\n+        let name_ref = make::name_ref(&param.name()?.syntax().to_string());\n+        let segment = make::path_segment(name_ref);\n+        make::path_unqalified(segment)\n+    };\n     let predicate = make::where_pred(path, param.type_bound_list()?.bounds());\n     Some(predicate)\n }"}, {"sha": "60cd9d260abfd45dbcd38f1cb60c169caa934ac4", "filename": "crates/ra_syntax/src/ast/make.rs", "status": "modified", "additions": 7, "deletions": 4, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/b53ff214aa9fe30eeedb64f78cc89561060c0083/crates%2Fra_syntax%2Fsrc%2Fast%2Fmake.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b53ff214aa9fe30eeedb64f78cc89561060c0083/crates%2Fra_syntax%2Fsrc%2Fast%2Fmake.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Fsrc%2Fast%2Fmake.rs?ref=b53ff214aa9fe30eeedb64f78cc89561060c0083", "patch": "@@ -12,11 +12,14 @@ pub fn name_ref(text: &str) -> ast::NameRef {\n     ast_from_text(&format!(\"fn f() {{ {}; }}\", text))\n }\n \n-pub fn path_from_name_ref(name_ref: ast::NameRef) -> ast::Path {\n-    path_from_text(&name_ref.syntax().to_string())\n+pub fn path_segment(name_ref: ast::NameRef) -> ast::PathSegment {\n+    ast_from_text(&format!(\"use {};\", name_ref.syntax()))\n }\n-pub fn path_qualified(qual: ast::Path, name_ref: ast::NameRef) -> ast::Path {\n-    path_from_text(&format!(\"{}::{}\", qual.syntax(), name_ref.syntax()))\n+pub fn path_unqalified(segment: ast::PathSegment) -> ast::Path {\n+    path_from_text(&format!(\"use {}\", segment.syntax()))\n+}\n+pub fn path_qualified(qual: ast::Path, segment: ast::PathSegment) -> ast::Path {\n+    path_from_text(&format!(\"{}::{}\", qual.syntax(), segment.syntax()))\n }\n fn path_from_text(text: &str) -> ast::Path {\n     ast_from_text(text)"}]}