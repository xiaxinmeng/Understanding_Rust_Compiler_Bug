{"sha": "e3f07b2e30eb29a737b13ab127db927d3825c22b", "node_id": "MDY6Q29tbWl0NzI0NzEyOmUzZjA3YjJlMzBlYjI5YTczN2IxM2FiMTI3ZGI5MjdkMzgyNWMyMmI=", "commit": {"author": {"name": "Andreas Liljeqvist", "email": "bonega@gmail.com", "date": "2021-08-24T08:18:07Z"}, "committer": {"name": "Andreas Liljeqvist", "email": "bonega@gmail.com", "date": "2021-08-24T08:18:07Z"}, "message": "Force inline: small functions and single call-site", "tree": {"sha": "0ea20afa3988c1477fe250337b29beb4e467bc24", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0ea20afa3988c1477fe250337b29beb4e467bc24"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e3f07b2e30eb29a737b13ab127db927d3825c22b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e3f07b2e30eb29a737b13ab127db927d3825c22b", "html_url": "https://github.com/rust-lang/rust/commit/e3f07b2e30eb29a737b13ab127db927d3825c22b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e3f07b2e30eb29a737b13ab127db927d3825c22b/comments", "author": {"login": "bonega", "id": 411677, "node_id": "MDQ6VXNlcjQxMTY3Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/411677?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bonega", "html_url": "https://github.com/bonega", "followers_url": "https://api.github.com/users/bonega/followers", "following_url": "https://api.github.com/users/bonega/following{/other_user}", "gists_url": "https://api.github.com/users/bonega/gists{/gist_id}", "starred_url": "https://api.github.com/users/bonega/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bonega/subscriptions", "organizations_url": "https://api.github.com/users/bonega/orgs", "repos_url": "https://api.github.com/users/bonega/repos", "events_url": "https://api.github.com/users/bonega/events{/privacy}", "received_events_url": "https://api.github.com/users/bonega/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bonega", "id": 411677, "node_id": "MDQ6VXNlcjQxMTY3Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/411677?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bonega", "html_url": "https://github.com/bonega", "followers_url": "https://api.github.com/users/bonega/followers", "following_url": "https://api.github.com/users/bonega/following{/other_user}", "gists_url": "https://api.github.com/users/bonega/gists{/gist_id}", "starred_url": "https://api.github.com/users/bonega/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bonega/subscriptions", "organizations_url": "https://api.github.com/users/bonega/orgs", "repos_url": "https://api.github.com/users/bonega/repos", "events_url": "https://api.github.com/users/bonega/events{/privacy}", "received_events_url": "https://api.github.com/users/bonega/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d92810646ed517376b16ac3b1fed329d8df2a8a9", "url": "https://api.github.com/repos/rust-lang/rust/commits/d92810646ed517376b16ac3b1fed329d8df2a8a9", "html_url": "https://github.com/rust-lang/rust/commit/d92810646ed517376b16ac3b1fed329d8df2a8a9"}], "stats": {"total": 6, "additions": 4, "deletions": 2}, "files": [{"sha": "49c06fca85acc9cdd2f60412367d77c2e9742346", "filename": "compiler/rustc_target/src/abi/mod.rs", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/e3f07b2e30eb29a737b13ab127db927d3825c22b/compiler%2Frustc_target%2Fsrc%2Fabi%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e3f07b2e30eb29a737b13ab127db927d3825c22b/compiler%2Frustc_target%2Fsrc%2Fabi%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_target%2Fsrc%2Fabi%2Fmod.rs?ref=e3f07b2e30eb29a737b13ab127db927d3825c22b", "patch": "@@ -697,7 +697,7 @@ pub struct WrappingRange {\n \n impl WrappingRange {\n     /// Returns `true` if `v` is contained in the range.\n-    #[inline]\n+    #[inline(always)]\n     pub fn contains(&self, v: u128) -> bool {\n         if self.start <= self.end {\n             self.start <= v && v <= self.end\n@@ -708,17 +708,19 @@ impl WrappingRange {\n \n     /// Returns `true` if zero is contained in the range.\n     /// Equal to `range.contains(0)` but should be faster.\n-    #[inline]\n+    #[inline(always)]\n     pub fn contains_zero(&self) -> bool {\n         self.start > self.end || self.start == 0\n     }\n \n     /// Returns new `WrappingRange` with replaced `start`\n+    #[inline(always)]\n     pub fn with_start(&self, start: u128) -> Self {\n         Self { start, end: self.end }\n     }\n \n     /// Returns new `WrappingRange` with replaced `end`\n+    #[inline(always)]\n     pub fn with_end(&self, end: u128) -> Self {\n         Self { start: self.start, end }\n     }"}]}