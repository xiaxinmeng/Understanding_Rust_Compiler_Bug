{"sha": "8e2063d02062ee9f088274690a97826333847e17", "node_id": "MDY6Q29tbWl0NzI0NzEyOjhlMjA2M2QwMjA2MmVlOWYwODgyNzQ2OTBhOTc4MjYzMzM4NDdlMTc=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2019-01-07T19:44:00Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2019-01-07T19:44:00Z"}, "message": "Auto merge of #57303 - matthiaskrgr:clippy_submodule_upd, r=oli-obk\n\nsubmodules: update clippy and rls\n\nFixes clippy toolstate\n\nChanges:\n````\nUpdate to latest compiletest-rs release\nadd testcase for #3462\ndeps: bump rustc_tools_util version from 0.1.0 to 0.1.1 just in case...\nrustc_tool_utils: fix failure to create proper non-repo version string when used in crates on crates.io, bump version\nUI test cleanup: Extract ifs_same_cond tests\nUI test cleanup: Extract for_kv_map lint tests\nFix test for rust-lang/rust#57250\nLimit infinite_iter collect() check to known types\nSome improvements to util documentation\nUse hashset for name blacklist\nReformat random_state tests\nUse node_id_to_type_opt instead of node_it_to_type in random_state\nCheck pattern equality while checking declaration equality\nrandom_state lint\nUse an FxHashSet for valid idents in documentation lint\nFix suggestion for unnecessary_ref lint\nUpdate CONTRIBUTING.md for rustfix tests\nUpdate .fixed files via update-references.sh\nRun rustfix on first UI test\nUse WIP branch for compiletest_rs\n````\n\nAlso updates RLS and removes the patching of rustc_tool_utils from cargo.toml\n\nRLS changes:\n````\nupdate clippy hash and rustc_tools_util and use rustc_tools_util from crates.io\nWork around https://github.com/rust-lang/rust/pull/55937\nUpdate Clippy... again\nUpdate Clippy\nUpdate clippy\n````\nr? @oli-obk", "tree": {"sha": "25e699e2b22601756a73caec1401c9c0a39ab83a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/25e699e2b22601756a73caec1401c9c0a39ab83a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8e2063d02062ee9f088274690a97826333847e17", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8e2063d02062ee9f088274690a97826333847e17", "html_url": "https://github.com/rust-lang/rust/commit/8e2063d02062ee9f088274690a97826333847e17", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8e2063d02062ee9f088274690a97826333847e17/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "59e70f27756a57b16a48bd7262e67fda01744701", "url": "https://api.github.com/repos/rust-lang/rust/commits/59e70f27756a57b16a48bd7262e67fda01744701", "html_url": "https://github.com/rust-lang/rust/commit/59e70f27756a57b16a48bd7262e67fda01744701"}, {"sha": "c5101b6dffd2c917e1670ee0d94a146cc075f956", "url": "https://api.github.com/repos/rust-lang/rust/commits/c5101b6dffd2c917e1670ee0d94a146cc075f956", "html_url": "https://github.com/rust-lang/rust/commit/c5101b6dffd2c917e1670ee0d94a146cc075f956"}], "stats": {"total": 79, "additions": 40, "deletions": 39}, "files": [{"sha": "1ea872cc34241d44633d2dd4c7386d48faf31f1c", "filename": "Cargo.lock", "status": "modified", "additions": 17, "deletions": 10, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/8e2063d02062ee9f088274690a97826333847e17/Cargo.lock", "raw_url": "https://github.com/rust-lang/rust/raw/8e2063d02062ee9f088274690a97826333847e17/Cargo.lock", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Cargo.lock?ref=8e2063d02062ee9f088274690a97826333847e17", "patch": "@@ -322,12 +322,12 @@ dependencies = [\n  \"clippy-mini-macro-test 0.2.0\",\n  \"clippy_dev 0.0.1\",\n  \"clippy_lints 0.0.212\",\n- \"compiletest_rs 0.3.17 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"compiletest_rs 0.3.18 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"derive-new 0.5.6 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"lazy_static 1.2.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"regex 1.1.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"rustc-workspace-hack 1.0.0\",\n- \"rustc_tools_util 0.1.0\",\n+ \"rustc_tools_util 0.1.1\",\n  \"semver 0.9.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"serde 1.0.82 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"serde_derive 1.0.81 (registry+https://github.com/rust-lang/crates.io-index)\",\n@@ -441,7 +441,7 @@ dependencies = [\n \n [[package]]\n name = \"compiletest_rs\"\n-version = \"0.3.17\"\n+version = \"0.3.18\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n dependencies = [\n  \"diff 0.1.11 (registry+https://github.com/rust-lang/crates.io-index)\",\n@@ -451,6 +451,7 @@ dependencies = [\n  \"log 0.4.6 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"miow 0.3.3 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"regex 1.1.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"rustfix 0.4.4 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"serde 1.0.82 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"serde_derive 1.0.81 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"serde_json 1.0.33 (registry+https://github.com/rust-lang/crates.io-index)\",\n@@ -1381,7 +1382,7 @@ dependencies = [\n  \"byteorder 1.2.7 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"cargo_metadata 0.6.2 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"colored 1.6.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"compiletest_rs 0.3.17 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"compiletest_rs 0.3.18 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"directories 1.0.2 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"env_logger 0.6.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"log 0.4.6 (registry+https://github.com/rust-lang/crates.io-index)\",\n@@ -1812,7 +1813,7 @@ name = \"rand_chacha\"\n version = \"0.1.0\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n dependencies = [\n- \"rand_core 0.2.2 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"rand_core 0.3.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"rustc_version 0.2.3 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n \n@@ -1834,7 +1835,7 @@ name = \"rand_hc\"\n version = \"0.1.0\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n dependencies = [\n- \"rand_core 0.2.2 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"rand_core 0.3.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n \n [[package]]\n@@ -1859,7 +1860,7 @@ name = \"rand_xorshift\"\n version = \"0.1.0\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n dependencies = [\n- \"rand_core 0.2.2 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"rand_core 0.3.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n \n [[package]]\n@@ -1983,7 +1984,7 @@ dependencies = [\n  \"rls-vfs 0.7.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"rustc-serialize 0.3.24 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"rustc-workspace-hack 1.0.0\",\n- \"rustc_tools_util 0.1.0\",\n+ \"rustc_tools_util 0.1.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"rustfmt-nightly 1.0.1\",\n  \"serde 1.0.82 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"serde_derive 1.0.81 (registry+https://github.com/rust-lang/crates.io-index)\",\n@@ -2632,7 +2633,12 @@ dependencies = [\n \n [[package]]\n name = \"rustc_tools_util\"\n-version = \"0.1.0\"\n+version = \"0.1.1\"\n+\n+[[package]]\n+name = \"rustc_tools_util\"\n+version = \"0.1.1\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n \n [[package]]\n name = \"rustc_traits\"\n@@ -3415,7 +3421,7 @@ source = \"registry+https://github.com/rust-lang/crates.io-index\"\n \"checksum commoncrypto 0.2.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"d056a8586ba25a1e4d61cb090900e495952c7886786fc55f909ab2f819b69007\"\n \"checksum commoncrypto-sys 0.2.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"1fed34f46747aa73dfaa578069fd8279d2818ade2b55f38f22a9401c7f4083e2\"\n \"checksum compiler_builtins 0.1.4 (registry+https://github.com/rust-lang/crates.io-index)\" = \"bd14d75a16b6c836c62350e2e8c85495ed8e13df30a7298c574cb1ee4cdac7bc\"\n-\"checksum compiletest_rs 0.3.17 (registry+https://github.com/rust-lang/crates.io-index)\" = \"89747fe073b7838343bd2c2445e7a7c2e0d415598f8925f0fa9205b9cdfc48cb\"\n+\"checksum compiletest_rs 0.3.18 (registry+https://github.com/rust-lang/crates.io-index)\" = \"0d76d4322a40f6b0db7259d4f2c8a65ed8b0d84fce0bbc61b98cf47f8ec6eec3\"\n \"checksum core-foundation 0.6.3 (registry+https://github.com/rust-lang/crates.io-index)\" = \"4e2640d6d0bf22e82bed1b73c6aef8d5dd31e5abe6666c57e6d45e2649f4f887\"\n \"checksum core-foundation-sys 0.6.2 (registry+https://github.com/rust-lang/crates.io-index)\" = \"e7ca8a5221364ef15ce201e8ed2f609fc312682a8f4e0e3d4aa5879764e0fa3b\"\n \"checksum crc 1.8.1 (registry+https://github.com/rust-lang/crates.io-index)\" = \"d663548de7f5cca343f1e0a48d14dcfb0e9eb4e079ec58883b7251539fa10aeb\"\n@@ -3593,6 +3599,7 @@ source = \"registry+https://github.com/rust-lang/crates.io-index\"\n \"checksum rustc-rayon 0.1.1 (registry+https://github.com/rust-lang/crates.io-index)\" = \"8c6d5a683c6ba4ed37959097e88d71c9e8e26659a3cb5be8b389078e7ad45306\"\n \"checksum rustc-rayon-core 0.1.1 (registry+https://github.com/rust-lang/crates.io-index)\" = \"40f06724db71e18d68b3b946fdf890ca8c921d9edccc1404fdfdb537b0d12649\"\n \"checksum rustc-serialize 0.3.24 (registry+https://github.com/rust-lang/crates.io-index)\" = \"dcf128d1287d2ea9d80910b5f1120d0b8eede3fbf1abe91c40d39ea7d51e6fda\"\n+\"checksum rustc_tools_util 0.1.1 (registry+https://github.com/rust-lang/crates.io-index)\" = \"b3c5a95edfa0c893236ae4778bb7c4752760e4c0d245e19b5eff33c5aa5eb9dc\"\n \"checksum rustc_version 0.2.3 (registry+https://github.com/rust-lang/crates.io-index)\" = \"138e3e0acb6c9fb258b19b67cb8abd63c00679d2851805ea151465464fe9030a\"\n \"checksum rustfix 0.4.4 (registry+https://github.com/rust-lang/crates.io-index)\" = \"af7c21531a91512a4a51b490be6ba1c8eff34fdda0dc5bf87dc28d86748aac56\"\n \"checksum rusty-fork 0.2.1 (registry+https://github.com/rust-lang/crates.io-index)\" = \"9591f190d2852720b679c21f66ad929f9f1d7bb09d1193c26167586029d8489c\""}, {"sha": "cb3c0ee194fe2e4f0a3cab2b46be70b7bf9ec1ef", "filename": "Cargo.toml", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/8e2063d02062ee9f088274690a97826333847e17/Cargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/8e2063d02062ee9f088274690a97826333847e17/Cargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Cargo.toml?ref=8e2063d02062ee9f088274690a97826333847e17", "patch": "@@ -70,4 +70,3 @@ rustc-std-workspace-core = { path = 'src/tools/rustc-std-workspace-core' }\n \n [patch.\"https://github.com/rust-lang/rust-clippy\"]\n clippy_lints = { path = \"src/tools/clippy/clippy_lints\" }\n-rustc_tools_util = { path = \"src/tools/clippy/rustc_tools_util\" }"}, {"sha": "19f1c7a18fad14ebf0c4f2f2c2269cbff1de984c", "filename": "src/librustc/session/filesearch.rs", "status": "modified", "additions": 0, "deletions": 7, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/8e2063d02062ee9f088274690a97826333847e17/src%2Flibrustc%2Fsession%2Ffilesearch.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8e2063d02062ee9f088274690a97826333847e17/src%2Flibrustc%2Fsession%2Ffilesearch.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fsession%2Ffilesearch.rs?ref=8e2063d02062ee9f088274690a97826333847e17", "patch": "@@ -114,13 +114,6 @@ pub fn make_target_lib_path(sysroot: &Path, target_triple: &str) -> PathBuf {\n     sysroot.join(&relative_target_lib_path(sysroot, target_triple))\n }\n \n-pub fn target_lib_path(target_triple: &str) -> PathBuf {\n-    let mut p = PathBuf::from(RUST_LIB_DIR);\n-    p.push(target_triple);\n-    p.push(\"lib\");\n-    p\n-}\n-\n pub fn get_or_default_sysroot() -> PathBuf {\n     // Follow symlinks.  If the resolved path is relative, make it absolute.\n     fn canonicalize(path: Option<PathBuf>) -> Option<PathBuf> {"}, {"sha": "1ec14fbb06c794ef5c092be50ba5c5dee0cc2057", "filename": "src/librustc_driver/lib.rs", "status": "modified", "additions": 21, "deletions": 19, "changes": 40, "blob_url": "https://github.com/rust-lang/rust/blob/8e2063d02062ee9f088274690a97826333847e17/src%2Flibrustc_driver%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8e2063d02062ee9f088274690a97826333847e17/src%2Flibrustc_driver%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_driver%2Flib.rs?ref=8e2063d02062ee9f088274690a97826333847e17", "patch": "@@ -269,35 +269,37 @@ fn get_codegen_sysroot(backend_name: &str) -> fn() -> Box<dyn CodegenBackend> {\n     }\n \n     let target = session::config::host_triple();\n-    // get target libdir path based on executable binary path\n-    let sysroot = filesearch::get_or_default_sysroot();\n-    let mut libdir_candidates = vec![filesearch::make_target_lib_path(&sysroot, &target)];\n+    let mut sysroot_candidates = vec![filesearch::get_or_default_sysroot()];\n     let path = current_dll_path()\n         .and_then(|s| s.canonicalize().ok());\n     if let Some(dll) = path {\n-        // use `parent` once to chop off the file name\n-        if let Some(path) = dll.parent() {\n+        // use `parent` twice to chop off the file name and then also the\n+        // directory containing the dll which should be either `lib` or `bin`.\n+        if let Some(path) = dll.parent().and_then(|p| p.parent()) {\n             // The original `path` pointed at the `rustc_driver` crate's dll.\n             // Now that dll should only be in one of two locations. The first is\n-            // in the compiler's libdir, for example `$sysroot/$libdir/*.dll`. The\n+            // in the compiler's libdir, for example `$sysroot/lib/*.dll`. The\n             // other is the target's libdir, for example\n-            // `$sysroot/$libdir/rustlib/$target/lib/*.dll`.\n+            // `$sysroot/lib/rustlib/$target/lib/*.dll`.\n             //\n             // We don't know which, so let's assume that if our `path` above\n-            // doesn't end in `$target` we *could* be in the main libdir, and always\n-            // assume that we may be in the target libdir.\n-            libdir_candidates.push(path.to_owned());\n-\n-            if !path.parent().map_or(false, |p| p.ends_with(target)) {\n-                libdir_candidates.push(path.join(filesearch::target_lib_path(target)));\n+            // ends in `$target` we *could* be in the target libdir, and always\n+            // assume that we may be in the main libdir.\n+            sysroot_candidates.push(path.to_owned());\n+\n+            if path.ends_with(target) {\n+                sysroot_candidates.extend(path.parent() // chop off `$target`\n+                    .and_then(|p| p.parent())           // chop off `rustlib`\n+                    .and_then(|p| p.parent())           // chop off `lib`\n+                    .map(|s| s.to_owned()));\n             }\n         }\n     }\n \n-    let sysroot = libdir_candidates.iter()\n-        .map(|libdir| {\n-            debug!(\"Trying target libdir: {}\", libdir.display());\n-            libdir.with_file_name(\n+    let sysroot = sysroot_candidates.iter()\n+        .map(|sysroot| {\n+            let libdir = filesearch::relative_target_lib_path(&sysroot, &target);\n+            sysroot.join(libdir).with_file_name(\n                 option_env!(\"CFG_CODEGEN_BACKENDS_DIR\").unwrap_or(\"codegen-backends\"))\n         })\n         .filter(|f| {\n@@ -306,12 +308,12 @@ fn get_codegen_sysroot(backend_name: &str) -> fn() -> Box<dyn CodegenBackend> {\n         })\n         .next();\n     let sysroot = sysroot.unwrap_or_else(|| {\n-        let candidates = libdir_candidates.iter()\n+        let candidates = sysroot_candidates.iter()\n             .map(|p| p.display().to_string())\n             .collect::<Vec<_>>()\n             .join(\"\\n* \");\n         let err = format!(\"failed to find a `codegen-backends` folder \\\n-                           in the libdir candidates:\\n* {}\", candidates);\n+                           in the sysroot candidates:\\n* {}\", candidates);\n         early_error(ErrorOutputType::default(), &err);\n     });\n     info!(\"probing {} for a codegen backend\", sysroot.display());"}, {"sha": "c63b6349b44019146cc2edcef8141692891b9401", "filename": "src/tools/clippy", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": null, "raw_url": null, "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy?ref=8e2063d02062ee9f088274690a97826333847e17", "patch": "@@ -1 +1 @@\n-Subproject commit 39bd84494f4a9b40f2e3b38416a91d52d5c4738b\n+Subproject commit c63b6349b44019146cc2edcef8141692891b9401"}, {"sha": "1a6361bd399a9466deba9b42ff2ff2ae365c5d0e", "filename": "src/tools/rls", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": null, "raw_url": null, "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Frls?ref=8e2063d02062ee9f088274690a97826333847e17", "patch": "@@ -1 +1 @@\n-Subproject commit 6f5e4bba7b1586fca6e0ea7724cadb5683b2f308\n+Subproject commit 1a6361bd399a9466deba9b42ff2ff2ae365c5d0e"}]}