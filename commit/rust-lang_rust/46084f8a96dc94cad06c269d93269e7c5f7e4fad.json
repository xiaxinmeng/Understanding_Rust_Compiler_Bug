{"sha": "46084f8a96dc94cad06c269d93269e7c5f7e4fad", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ2MDg0ZjhhOTZkYzk0Y2FkMDZjMjY5ZDkzMjY5ZTdjNWY3ZTRmYWQ=", "commit": {"author": {"name": "vsrs", "email": "vit@conrlab.com", "date": "2020-06-06T17:10:36Z"}, "committer": {"name": "vsrs", "email": "vit@conrlab.com", "date": "2020-06-06T17:10:36Z"}, "message": "Disable runnables lookup in macro-generated code.", "tree": {"sha": "41a8b3b9518b6afcd4c27697a52088f956099804", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/41a8b3b9518b6afcd4c27697a52088f956099804"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/46084f8a96dc94cad06c269d93269e7c5f7e4fad", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/46084f8a96dc94cad06c269d93269e7c5f7e4fad", "html_url": "https://github.com/rust-lang/rust/commit/46084f8a96dc94cad06c269d93269e7c5f7e4fad", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/46084f8a96dc94cad06c269d93269e7c5f7e4fad/comments", "author": {"login": "vsrs", "id": 62505555, "node_id": "MDQ6VXNlcjYyNTA1NTU1", "avatar_url": "https://avatars.githubusercontent.com/u/62505555?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vsrs", "html_url": "https://github.com/vsrs", "followers_url": "https://api.github.com/users/vsrs/followers", "following_url": "https://api.github.com/users/vsrs/following{/other_user}", "gists_url": "https://api.github.com/users/vsrs/gists{/gist_id}", "starred_url": "https://api.github.com/users/vsrs/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vsrs/subscriptions", "organizations_url": "https://api.github.com/users/vsrs/orgs", "repos_url": "https://api.github.com/users/vsrs/repos", "events_url": "https://api.github.com/users/vsrs/events{/privacy}", "received_events_url": "https://api.github.com/users/vsrs/received_events", "type": "User", "site_admin": false}, "committer": {"login": "vsrs", "id": 62505555, "node_id": "MDQ6VXNlcjYyNTA1NTU1", "avatar_url": "https://avatars.githubusercontent.com/u/62505555?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vsrs", "html_url": "https://github.com/vsrs", "followers_url": "https://api.github.com/users/vsrs/followers", "following_url": "https://api.github.com/users/vsrs/following{/other_user}", "gists_url": "https://api.github.com/users/vsrs/gists{/gist_id}", "starred_url": "https://api.github.com/users/vsrs/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vsrs/subscriptions", "organizations_url": "https://api.github.com/users/vsrs/orgs", "repos_url": "https://api.github.com/users/vsrs/repos", "events_url": "https://api.github.com/users/vsrs/events{/privacy}", "received_events_url": "https://api.github.com/users/vsrs/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3434f1dd2c47fff3df159b9d62115c2df3fd6401", "url": "https://api.github.com/repos/rust-lang/rust/commits/3434f1dd2c47fff3df159b9d62115c2df3fd6401", "html_url": "https://github.com/rust-lang/rust/commit/3434f1dd2c47fff3df159b9d62115c2df3fd6401"}], "stats": {"total": 11, "additions": 10, "deletions": 1}, "files": [{"sha": "bbff5e81a44e8722b35f5b2927ecfc973a7c3d76", "filename": "crates/ra_ide/src/hover.rs", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/46084f8a96dc94cad06c269d93269e7c5f7e4fad/crates%2Fra_ide%2Fsrc%2Fhover.rs", "raw_url": "https://github.com/rust-lang/rust/raw/46084f8a96dc94cad06c269d93269e7c5f7e4fad/crates%2Fra_ide%2Fsrc%2Fhover.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fhover.rs?ref=46084f8a96dc94cad06c269d93269e7c5f7e4fad", "patch": "@@ -200,7 +200,16 @@ fn runnable_action(\n                 _ => None,\n             },\n             ModuleDef::Function(it) => {\n-                runnable(&sema, it.source(sema.db).value.syntax().clone(), file_id)\n+                let src = it.source(sema.db);\n+                if src.file_id != file_id.into() {\n+                    // Don't try to find runnables in a macro generated code.\n+                    // See tests below:\n+                    //   test_hover_macro_generated_struct_fn_doc_comment\n+                    //   test_hover_macro_generated_struct_fn_doc_attr\n+                    return None;\n+                }\n+\n+                runnable(&sema, src.value.syntax().clone(), file_id)\n                     .map(|it| HoverAction::Runnable(it))\n             }\n             _ => None,"}]}