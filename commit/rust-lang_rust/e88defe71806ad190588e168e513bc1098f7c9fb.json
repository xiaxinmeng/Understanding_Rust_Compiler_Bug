{"sha": "e88defe71806ad190588e168e513bc1098f7c9fb", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU4OGRlZmU3MTgwNmFkMTkwNTg4ZTE2OGU1MTNiYzEwOThmN2M5ZmI=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2016-05-12T11:01:55Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2016-05-12T11:01:55Z"}, "message": "Auto merge of #33338 - birkenfeld:issue-25356, r=jseyfried\n\ntypeck: limit number of candidates shown for a single error\n\nNo idea if 10/11 is a good limit. Are there any other such limits in rustc currently?\n\nFixes: #25356", "tree": {"sha": "a17438bee0f1f5315699e4447d03af13f3d04543", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a17438bee0f1f5315699e4447d03af13f3d04543"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e88defe71806ad190588e168e513bc1098f7c9fb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e88defe71806ad190588e168e513bc1098f7c9fb", "html_url": "https://github.com/rust-lang/rust/commit/e88defe71806ad190588e168e513bc1098f7c9fb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e88defe71806ad190588e168e513bc1098f7c9fb/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "992bb1332ffc68093a6aa555807b9129a1e94977", "url": "https://api.github.com/repos/rust-lang/rust/commits/992bb1332ffc68093a6aa555807b9129a1e94977", "html_url": "https://github.com/rust-lang/rust/commit/992bb1332ffc68093a6aa555807b9129a1e94977"}, {"sha": "6ab93d7430d75941373ad48fc681bb8337a31465", "url": "https://api.github.com/repos/rust-lang/rust/commits/6ab93d7430d75941373ad48fc681bb8337a31465", "html_url": "https://github.com/rust-lang/rust/commit/6ab93d7430d75941373ad48fc681bb8337a31465"}], "stats": {"total": 13, "additions": 11, "deletions": 2}, "files": [{"sha": "be329ec11afcb1a7cc477f806e833cf1a67d9697", "filename": "src/librustc_typeck/check/method/suggest.rs", "status": "modified", "additions": 11, "deletions": 2, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/e88defe71806ad190588e168e513bc1098f7c9fb/src%2Flibrustc_typeck%2Fcheck%2Fmethod%2Fsuggest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e88defe71806ad190588e168e513bc1098f7c9fb/src%2Flibrustc_typeck%2Fcheck%2Fmethod%2Fsuggest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fmethod%2Fsuggest.rs?ref=e88defe71806ad190588e168e513bc1098f7c9fb", "patch": "@@ -101,8 +101,10 @@ impl<'a, 'gcx, 'tcx> FnCtxt<'a, 'gcx, 'tcx> {\n \n             sources.sort();\n             sources.dedup();\n+            // Dynamic limit to avoid hiding just one candidate, which is silly.\n+            let limit = if sources.len() == 5 { 5 } else { 4 };\n \n-            for (idx, source) in sources.iter().enumerate() {\n+            for (idx, source) in sources.iter().take(limit).enumerate() {\n                 match *source {\n                     CandidateSource::ImplSource(impl_did) => {\n                         // Provide the best span we can. Use the item, if local to crate, else\n@@ -151,6 +153,9 @@ impl<'a, 'gcx, 'tcx> FnCtxt<'a, 'gcx, 'tcx> {\n                     }\n                 }\n             }\n+            if sources.len() > limit {\n+                err.note(&format!(\"and {} others\", sources.len() - limit));\n+            }\n         };\n \n         match error {\n@@ -295,11 +300,15 @@ impl<'a, 'gcx, 'tcx> FnCtxt<'a, 'gcx, 'tcx> {\n \n             err.help(&msg[..]);\n \n-            for (i, trait_did) in candidates.iter().enumerate() {\n+            let limit = if candidates.len() == 5 { 5 } else { 4 };\n+            for (i, trait_did) in candidates.iter().take(limit).enumerate() {\n                 err.help(&format!(\"candidate #{}: `use {}`\",\n                                   i + 1,\n                                   self.tcx.item_path_str(*trait_did)));\n             }\n+            if candidates.len() > limit {\n+                err.note(&format!(\"and {} others\", candidates.len() - limit));\n+            }\n             return\n         }\n "}]}