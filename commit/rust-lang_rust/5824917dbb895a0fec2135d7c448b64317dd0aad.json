{"sha": "5824917dbb895a0fec2135d7c448b64317dd0aad", "node_id": "MDY6Q29tbWl0NzI0NzEyOjU4MjQ5MTdkYmI4OTVhMGZlYzIxMzVkN2M0NDhiNjQzMTdkZDBhYWQ=", "commit": {"author": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2021-03-03T02:24:13Z"}, "committer": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2021-03-03T02:24:13Z"}, "message": "Account for macros when suggesting adding lifetime\n\nFix #70152.", "tree": {"sha": "dc78690c4865cfe94afc7337da2e56012ef7a290", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/dc78690c4865cfe94afc7337da2e56012ef7a290"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5824917dbb895a0fec2135d7c448b64317dd0aad", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5824917dbb895a0fec2135d7c448b64317dd0aad", "html_url": "https://github.com/rust-lang/rust/commit/5824917dbb895a0fec2135d7c448b64317dd0aad", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5824917dbb895a0fec2135d7c448b64317dd0aad/comments", "author": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "committer": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "795a934b51cb481ea3cb1cc8c3835a043a9e0102", "url": "https://api.github.com/repos/rust-lang/rust/commits/795a934b51cb481ea3cb1cc8c3835a043a9e0102", "html_url": "https://github.com/rust-lang/rust/commit/795a934b51cb481ea3cb1cc8c3835a043a9e0102"}], "stats": {"total": 79, "additions": 71, "deletions": 8}, "files": [{"sha": "36707b5938f26023b189cfa9f1fab07e04592aca", "filename": "compiler/rustc_resolve/src/late/diagnostics.rs", "status": "modified", "additions": 17, "deletions": 8, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/5824917dbb895a0fec2135d7c448b64317dd0aad/compiler%2Frustc_resolve%2Fsrc%2Flate%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5824917dbb895a0fec2135d7c448b64317dd0aad/compiler%2Frustc_resolve%2Fsrc%2Flate%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_resolve%2Fsrc%2Flate%2Fdiagnostics.rs?ref=5824917dbb895a0fec2135d7c448b64317dd0aad", "patch": "@@ -1645,6 +1645,7 @@ impl<'tcx> LifetimeContext<'_, 'tcx> {\n         );\n         err.span_label(lifetime_ref.span, \"undeclared lifetime\");\n         let mut suggests_in_band = false;\n+        let mut suggest_note = true;\n         for missing in &self.missing_named_lifetime_spots {\n             match missing {\n                 MissingLifetimeSpot::Generics(generics) => {\n@@ -1664,12 +1665,20 @@ impl<'tcx> LifetimeContext<'_, 'tcx> {\n                         suggests_in_band = true;\n                         (generics.span, format!(\"<{}>\", lifetime_ref))\n                     };\n-                    err.span_suggestion(\n-                        span,\n-                        &format!(\"consider introducing lifetime `{}` here\", lifetime_ref),\n-                        sugg,\n-                        Applicability::MaybeIncorrect,\n-                    );\n+                    if !span.from_expansion() {\n+                        err.span_suggestion(\n+                            span,\n+                            &format!(\"consider introducing lifetime `{}` here\", lifetime_ref),\n+                            sugg,\n+                            Applicability::MaybeIncorrect,\n+                        );\n+                    } else if suggest_note {\n+                        suggest_note = false; // Avoid displaying the same help multiple times.\n+                        err.help(&format!(\n+                            \"consider introducing lifetime `{}` to the item's generics\",\n+                            lifetime_ref,\n+                        ));\n+                    }\n                 }\n                 MissingLifetimeSpot::HigherRanked { span, span_type } => {\n                     err.span_suggestion(\n@@ -1684,7 +1693,7 @@ impl<'tcx> LifetimeContext<'_, 'tcx> {\n                     );\n                     err.note(\n                         \"for more information on higher-ranked polymorphism, visit \\\n-                            https://doc.rust-lang.org/nomicon/hrtb.html\",\n+                         https://doc.rust-lang.org/nomicon/hrtb.html\",\n                     );\n                 }\n                 _ => {}\n@@ -1696,7 +1705,7 @@ impl<'tcx> LifetimeContext<'_, 'tcx> {\n         {\n             err.help(\n                 \"if you want to experiment with in-band lifetime bindings, \\\n-                    add `#![feature(in_band_lifetimes)]` to the crate attributes\",\n+                 add `#![feature(in_band_lifetimes)]` to the crate attributes\",\n             );\n         }\n         err.emit();"}, {"sha": "cc29f9de7fb4a45216be336069ce7ed1b2b26caa", "filename": "src/test/ui/lifetimes/undeclared-lifetime-used-in-debug-macro-issue-70152.rs", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/5824917dbb895a0fec2135d7c448b64317dd0aad/src%2Ftest%2Fui%2Flifetimes%2Fundeclared-lifetime-used-in-debug-macro-issue-70152.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5824917dbb895a0fec2135d7c448b64317dd0aad/src%2Ftest%2Fui%2Flifetimes%2Fundeclared-lifetime-used-in-debug-macro-issue-70152.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flifetimes%2Fundeclared-lifetime-used-in-debug-macro-issue-70152.rs?ref=5824917dbb895a0fec2135d7c448b64317dd0aad", "patch": "@@ -0,0 +1,16 @@\n+#[derive(Eq, PartialEq)]\n+struct Test {\n+    a: &'b str,\n+    //~^ ERROR use of undeclared lifetime name `'b`\n+    //~| ERROR use of undeclared lifetime name `'b`\n+}\n+\n+trait T {\n+    fn foo(&'static self) {}\n+}\n+\n+impl T for Test {\n+    fn foo(&'b self) {} //~ ERROR use of undeclared lifetime name `'b`\n+}\n+\n+fn main() {}"}, {"sha": "01dc0edc61eeceaa87dccbe981a6f47dbe549543", "filename": "src/test/ui/lifetimes/undeclared-lifetime-used-in-debug-macro-issue-70152.stderr", "status": "added", "additions": 38, "deletions": 0, "changes": 38, "blob_url": "https://github.com/rust-lang/rust/blob/5824917dbb895a0fec2135d7c448b64317dd0aad/src%2Ftest%2Fui%2Flifetimes%2Fundeclared-lifetime-used-in-debug-macro-issue-70152.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/5824917dbb895a0fec2135d7c448b64317dd0aad/src%2Ftest%2Fui%2Flifetimes%2Fundeclared-lifetime-used-in-debug-macro-issue-70152.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flifetimes%2Fundeclared-lifetime-used-in-debug-macro-issue-70152.stderr?ref=5824917dbb895a0fec2135d7c448b64317dd0aad", "patch": "@@ -0,0 +1,38 @@\n+error[E0261]: use of undeclared lifetime name `'b`\n+  --> $DIR/undeclared-lifetime-used-in-debug-macro-issue-70152.rs:13:13\n+   |\n+LL |     fn foo(&'b self) {}\n+   |             ^^ undeclared lifetime\n+   |\n+   = help: if you want to experiment with in-band lifetime bindings, add `#![feature(in_band_lifetimes)]` to the crate attributes\n+help: consider introducing lifetime `'b` here\n+   |\n+LL | impl<'b> T for Test {\n+   |     ^^^^\n+help: consider introducing lifetime `'b` here\n+   |\n+LL |     fn foo<'b>(&'b self) {}\n+   |           ^^^^\n+\n+error[E0261]: use of undeclared lifetime name `'b`\n+  --> $DIR/undeclared-lifetime-used-in-debug-macro-issue-70152.rs:3:9\n+   |\n+LL | struct Test {\n+   |            - help: consider introducing lifetime `'b` here: `<'b>`\n+LL |     a: &'b str,\n+   |         ^^ undeclared lifetime\n+   |\n+   = help: if you want to experiment with in-band lifetime bindings, add `#![feature(in_band_lifetimes)]` to the crate attributes\n+\n+error[E0261]: use of undeclared lifetime name `'b`\n+  --> $DIR/undeclared-lifetime-used-in-debug-macro-issue-70152.rs:3:9\n+   |\n+LL |     a: &'b str,\n+   |         ^^ undeclared lifetime\n+   |\n+   = help: consider introducing lifetime `'b` to the item's generics\n+   = help: if you want to experiment with in-band lifetime bindings, add `#![feature(in_band_lifetimes)]` to the crate attributes\n+\n+error: aborting due to 3 previous errors\n+\n+For more information about this error, try `rustc --explain E0261`."}]}