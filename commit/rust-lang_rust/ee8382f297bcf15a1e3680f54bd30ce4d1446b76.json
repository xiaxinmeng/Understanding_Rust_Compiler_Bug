{"sha": "ee8382f297bcf15a1e3680f54bd30ce4d1446b76", "node_id": "MDY6Q29tbWl0NzI0NzEyOmVlODM4MmYyOTdiY2YxNWExZTM2ODBmNTRiZDMwY2U0ZDE0NDZiNzY=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-04-26T02:56:25Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-04-26T02:56:25Z"}, "message": "Auto merge of #84544 - RalfJung:const_fn_in_trait, r=oli-obk\n\nAlways reject `const fn` in `trait` during parsing.\n\n'const fn' in trait are rejected in the AST:\nhttps://github.com/rust-lang/rust/blob/b78c0d8a4d5af91a4a55d029293e3ecb879ec142/compiler/rustc_ast_passes/src/ast_validation.rs#L1411\nSo this feature gate check is a NOP and we can just remove it.\n\nThe src/test/ui/feature-gates/feature-gate-min_const_fn.rs and src/test/ui/feature-gates/feature-gate-const_fn.rs tests ensure that we still reject `const fn` in `trait`\n\nCc https://github.com/rust-lang/rust/issues/84510\nr? `@oli-obk`", "tree": {"sha": "16e61d7df8e0e014e55c30cd10dff2cb5de40b6c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/16e61d7df8e0e014e55c30cd10dff2cb5de40b6c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ee8382f297bcf15a1e3680f54bd30ce4d1446b76", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ee8382f297bcf15a1e3680f54bd30ce4d1446b76", "html_url": "https://github.com/rust-lang/rust/commit/ee8382f297bcf15a1e3680f54bd30ce4d1446b76", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ee8382f297bcf15a1e3680f54bd30ce4d1446b76/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f8f59682558dd9a5b6254cd8bf98c3b082a8e99e", "url": "https://api.github.com/repos/rust-lang/rust/commits/f8f59682558dd9a5b6254cd8bf98c3b082a8e99e", "html_url": "https://github.com/rust-lang/rust/commit/f8f59682558dd9a5b6254cd8bf98c3b082a8e99e"}, {"sha": "8a961a5b334a4f871093462823e8c86aab2611b6", "url": "https://api.github.com/repos/rust-lang/rust/commits/8a961a5b334a4f871093462823e8c86aab2611b6", "html_url": "https://github.com/rust-lang/rust/commit/8a961a5b334a4f871093462823e8c86aab2611b6"}], "stats": {"total": 79, "additions": 14, "deletions": 65}, "files": [{"sha": "077ab06d82ddeb371fe0eba343841cb066673493", "filename": "compiler/rustc_ast_passes/src/feature_gate.rs", "status": "modified", "additions": 1, "deletions": 6, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/ee8382f297bcf15a1e3680f54bd30ce4d1446b76/compiler%2Frustc_ast_passes%2Fsrc%2Ffeature_gate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ee8382f297bcf15a1e3680f54bd30ce4d1446b76/compiler%2Frustc_ast_passes%2Fsrc%2Ffeature_gate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_ast_passes%2Fsrc%2Ffeature_gate.rs?ref=ee8382f297bcf15a1e3680f54bd30ce4d1446b76", "patch": "@@ -586,12 +586,7 @@ impl<'a> Visitor<'a> for PostExpansionVisitor<'a> {\n \n     fn visit_assoc_item(&mut self, i: &'a ast::AssocItem, ctxt: AssocCtxt) {\n         let is_fn = match i.kind {\n-            ast::AssocItemKind::Fn(box ast::FnKind(_, ref sig, _, _)) => {\n-                if let (ast::Const::Yes(_), AssocCtxt::Trait) = (sig.header.constness, ctxt) {\n-                    gate_feature_post!(&self, const_fn, i.span, \"const fn is unstable\");\n-                }\n-                true\n-            }\n+            ast::AssocItemKind::Fn(_) => true,\n             ast::AssocItemKind::TyAlias(box ast::TyAliasKind(_, ref generics, _, ref ty)) => {\n                 if let (Some(_), AssocCtxt::Trait) = (ty, ctxt) {\n                     gate_feature_post!("}, {"sha": "ab438e41447125634365e46ab03a5e2d8e7bbf8a", "filename": "compiler/rustc_error_codes/src/error_codes/E0379.md", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ee8382f297bcf15a1e3680f54bd30ce4d1446b76/compiler%2Frustc_error_codes%2Fsrc%2Ferror_codes%2FE0379.md", "raw_url": "https://github.com/rust-lang/rust/raw/ee8382f297bcf15a1e3680f54bd30ce4d1446b76/compiler%2Frustc_error_codes%2Fsrc%2Ferror_codes%2FE0379.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_error_codes%2Fsrc%2Ferror_codes%2FE0379.md?ref=ee8382f297bcf15a1e3680f54bd30ce4d1446b76", "patch": "@@ -3,8 +3,6 @@ A trait method was declared const.\n Erroneous code example:\n \n ```compile_fail,E0379\n-#![feature(const_fn)]\n-\n trait Foo {\n     const fn bar() -> u32; // error!\n }"}, {"sha": "152627cf6545f5efb4b12f02dea2d4d4c4394371", "filename": "compiler/rustc_error_codes/src/error_codes/E0764.md", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ee8382f297bcf15a1e3680f54bd30ce4d1446b76/compiler%2Frustc_error_codes%2Fsrc%2Ferror_codes%2FE0764.md", "raw_url": "https://github.com/rust-lang/rust/raw/ee8382f297bcf15a1e3680f54bd30ce4d1446b76/compiler%2Frustc_error_codes%2Fsrc%2Ferror_codes%2FE0764.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_error_codes%2Fsrc%2Ferror_codes%2FE0764.md?ref=ee8382f297bcf15a1e3680f54bd30ce4d1446b76", "patch": "@@ -3,7 +3,6 @@ A mutable reference was used in a constant.\n Erroneous code example:\n \n ```compile_fail,E0764\n-#![feature(const_fn)]\n #![feature(const_mut_refs)]\n \n fn main() {\n@@ -27,7 +26,6 @@ Remember: you cannot use a function call inside a constant or static. However,\n you can totally use it in constant functions:\n \n ```\n-#![feature(const_fn)]\n #![feature(const_mut_refs)]\n \n const fn foo(x: usize) -> usize {"}, {"sha": "cbc220a1ba29b789c18af4729aea223efdb3baac", "filename": "src/test/ui/consts/const-fn-not-in-trait.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ee8382f297bcf15a1e3680f54bd30ce4d1446b76/src%2Ftest%2Fui%2Fconsts%2Fconst-fn-not-in-trait.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ee8382f297bcf15a1e3680f54bd30ce4d1446b76/src%2Ftest%2Fui%2Fconsts%2Fconst-fn-not-in-trait.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fconst-fn-not-in-trait.rs?ref=ee8382f297bcf15a1e3680f54bd30ce4d1446b76", "patch": "@@ -1,5 +1,5 @@\n // Test that const fn is illegal in a trait declaration, whether or\n-// not a default is provided.\n+// not a default is provided, and even with the feature gate.\n \n #![feature(const_fn)]\n "}, {"sha": "b97aa214f843ab9582e99cab9f32f28374f391d6", "filename": "src/test/ui/feature-gates/feature-gate-const_fn.rs", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/ee8382f297bcf15a1e3680f54bd30ce4d1446b76/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-const_fn.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ee8382f297bcf15a1e3680f54bd30ce4d1446b76/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-const_fn.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-const_fn.rs?ref=ee8382f297bcf15a1e3680f54bd30ce4d1446b76", "patch": "@@ -3,10 +3,8 @@\n const fn foo() -> usize { 0 } // ok\n \n trait Foo {\n-    const fn foo() -> u32; //~ ERROR const fn is unstable\n-                           //~| ERROR functions in traits cannot be declared const\n-    const fn bar() -> u32 { 0 } //~ ERROR const fn is unstable\n-                                //~| ERROR functions in traits cannot be declared const\n+    const fn foo() -> u32; //~ ERROR functions in traits cannot be declared const\n+    const fn bar() -> u32 { 0 } //~ ERROR functions in traits cannot be declared const\n }\n \n impl Foo for u32 {"}, {"sha": "1e7fd669b1d48941f74107fb32a653f7e87a550e", "filename": "src/test/ui/feature-gates/feature-gate-const_fn.stderr", "status": "modified", "additions": 4, "deletions": 23, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/ee8382f297bcf15a1e3680f54bd30ce4d1446b76/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-const_fn.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/ee8382f297bcf15a1e3680f54bd30ce4d1446b76/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-const_fn.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-const_fn.stderr?ref=ee8382f297bcf15a1e3680f54bd30ce4d1446b76", "patch": "@@ -5,36 +5,17 @@ LL |     const fn foo() -> u32;\n    |     ^^^^^ functions in traits cannot be const\n \n error[E0379]: functions in traits cannot be declared const\n-  --> $DIR/feature-gate-const_fn.rs:8:5\n+  --> $DIR/feature-gate-const_fn.rs:7:5\n    |\n LL |     const fn bar() -> u32 { 0 }\n    |     ^^^^^ functions in traits cannot be const\n \n error[E0379]: functions in traits cannot be declared const\n-  --> $DIR/feature-gate-const_fn.rs:13:5\n+  --> $DIR/feature-gate-const_fn.rs:11:5\n    |\n LL |     const fn foo() -> u32 { 0 }\n    |     ^^^^^ functions in traits cannot be const\n \n-error[E0658]: const fn is unstable\n-  --> $DIR/feature-gate-const_fn.rs:6:5\n-   |\n-LL |     const fn foo() -> u32;\n-   |     ^^^^^^^^^^^^^^^^^^^^^^\n-   |\n-   = note: see issue #57563 <https://github.com/rust-lang/rust/issues/57563> for more information\n-   = help: add `#![feature(const_fn)]` to the crate attributes to enable\n-\n-error[E0658]: const fn is unstable\n-  --> $DIR/feature-gate-const_fn.rs:8:5\n-   |\n-LL |     const fn bar() -> u32 { 0 }\n-   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n-   |\n-   = note: see issue #57563 <https://github.com/rust-lang/rust/issues/57563> for more information\n-   = help: add `#![feature(const_fn)]` to the crate attributes to enable\n-\n-error: aborting due to 5 previous errors\n+error: aborting due to 3 previous errors\n \n-Some errors have detailed explanations: E0379, E0658.\n-For more information about an error, try `rustc --explain E0379`.\n+For more information about this error, try `rustc --explain E0379`."}, {"sha": "8f9b433009d3c41a50fef2a41538fa3e28a81299", "filename": "src/test/ui/feature-gates/feature-gate-min_const_fn.rs", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/ee8382f297bcf15a1e3680f54bd30ce4d1446b76/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-min_const_fn.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ee8382f297bcf15a1e3680f54bd30ce4d1446b76/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-min_const_fn.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-min_const_fn.rs?ref=ee8382f297bcf15a1e3680f54bd30ce4d1446b76", "patch": "@@ -3,10 +3,8 @@\n const fn foo() -> usize { 0 } // stabilized\n \n trait Foo {\n-    const fn foo() -> u32; //~ ERROR const fn is unstable\n-                           //~| ERROR functions in traits cannot be declared const\n-    const fn bar() -> u32 { 0 } //~ ERROR const fn is unstable\n-                                //~| ERROR functions in traits cannot be declared const\n+    const fn foo() -> u32; //~ ERROR functions in traits cannot be declared const\n+    const fn bar() -> u32 { 0 } //~ ERROR functions in traits cannot be declared const\n }\n \n impl Foo for u32 {"}, {"sha": "d7a58591364ed22fe9850a627aec79e3c330fb09", "filename": "src/test/ui/feature-gates/feature-gate-min_const_fn.stderr", "status": "modified", "additions": 4, "deletions": 23, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/ee8382f297bcf15a1e3680f54bd30ce4d1446b76/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-min_const_fn.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/ee8382f297bcf15a1e3680f54bd30ce4d1446b76/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-min_const_fn.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-min_const_fn.stderr?ref=ee8382f297bcf15a1e3680f54bd30ce4d1446b76", "patch": "@@ -5,36 +5,17 @@ LL |     const fn foo() -> u32;\n    |     ^^^^^ functions in traits cannot be const\n \n error[E0379]: functions in traits cannot be declared const\n-  --> $DIR/feature-gate-min_const_fn.rs:8:5\n+  --> $DIR/feature-gate-min_const_fn.rs:7:5\n    |\n LL |     const fn bar() -> u32 { 0 }\n    |     ^^^^^ functions in traits cannot be const\n \n error[E0379]: functions in traits cannot be declared const\n-  --> $DIR/feature-gate-min_const_fn.rs:13:5\n+  --> $DIR/feature-gate-min_const_fn.rs:11:5\n    |\n LL |     const fn foo() -> u32 { 0 }\n    |     ^^^^^ functions in traits cannot be const\n \n-error[E0658]: const fn is unstable\n-  --> $DIR/feature-gate-min_const_fn.rs:6:5\n-   |\n-LL |     const fn foo() -> u32;\n-   |     ^^^^^^^^^^^^^^^^^^^^^^\n-   |\n-   = note: see issue #57563 <https://github.com/rust-lang/rust/issues/57563> for more information\n-   = help: add `#![feature(const_fn)]` to the crate attributes to enable\n-\n-error[E0658]: const fn is unstable\n-  --> $DIR/feature-gate-min_const_fn.rs:8:5\n-   |\n-LL |     const fn bar() -> u32 { 0 }\n-   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n-   |\n-   = note: see issue #57563 <https://github.com/rust-lang/rust/issues/57563> for more information\n-   = help: add `#![feature(const_fn)]` to the crate attributes to enable\n-\n-error: aborting due to 5 previous errors\n+error: aborting due to 3 previous errors\n \n-Some errors have detailed explanations: E0379, E0658.\n-For more information about an error, try `rustc --explain E0379`.\n+For more information about this error, try `rustc --explain E0379`."}]}