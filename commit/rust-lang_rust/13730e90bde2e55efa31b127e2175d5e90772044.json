{"sha": "13730e90bde2e55efa31b127e2175d5e90772044", "node_id": "MDY6Q29tbWl0NzI0NzEyOjEzNzMwZTkwYmRlMmU1NWVmYTMxYjEyN2UyMTc1ZDVlOTA3NzIwNDQ=", "commit": {"author": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2021-02-17T19:37:58Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-02-17T19:37:58Z"}, "message": "Rollup merge of #82136 - edward-shen:mismatched-subst-and-hir, r=lcnr\n\nFix ICE: Use delay_span_bug for mismatched subst/hir arg\n\nFixes #82126.", "tree": {"sha": "fa090c9443c6d926098a10a49fd459e389414eea", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fa090c9443c6d926098a10a49fd459e389414eea"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/13730e90bde2e55efa31b127e2175d5e90772044", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJgLXCXCRBK7hj4Ov3rIwAAdHIIABZFGbEJTvj5Y/MFODY7Hw9K\nXv6ZsRkvEqvWvHE5IefImz+k3XVnshj/njtNYCpfQLVOmhXh7lP+h6ryU2I+0wHc\naRnn/H7ZbCGCIcW7e0EDlW7blPvUU0ZTY/K6EI2XaPI7AsK9yTU4XrjCiYCNt5Od\nTNCaxUoVaZWmem6+7PW4cHCTuzBg0V+G/Esc3tIgQA9D78qA+wEuP9J8mwywnCgw\nEBrj1uFflmfjVOaG5prIBRrMyaVG984vWy56RUJA/DybCxOWWBIWuoKgpXwQbsHP\nzcsWg9oS4o/XADsq6DV9hA+NAZYEXt58d06Vb9DjHtJZjDFwf6dJ4JGzVCcgaME=\n=lTVQ\n-----END PGP SIGNATURE-----\n", "payload": "tree fa090c9443c6d926098a10a49fd459e389414eea\nparent 7292d5ff60a914b61077764e1b10362b6cd1842b\nparent a4b2fafcc19801e858afc59ed3b319c39adefc20\nauthor Guillaume Gomez <guillaume1.gomez@gmail.com> 1613590678 +0100\ncommitter GitHub <noreply@github.com> 1613590678 +0100\n\nRollup merge of #82136 - edward-shen:mismatched-subst-and-hir, r=lcnr\n\nFix ICE: Use delay_span_bug for mismatched subst/hir arg\n\nFixes #82126.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/13730e90bde2e55efa31b127e2175d5e90772044", "html_url": "https://github.com/rust-lang/rust/commit/13730e90bde2e55efa31b127e2175d5e90772044", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/13730e90bde2e55efa31b127e2175d5e90772044/comments", "author": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7292d5ff60a914b61077764e1b10362b6cd1842b", "url": "https://api.github.com/repos/rust-lang/rust/commits/7292d5ff60a914b61077764e1b10362b6cd1842b", "html_url": "https://github.com/rust-lang/rust/commit/7292d5ff60a914b61077764e1b10362b6cd1842b"}, {"sha": "a4b2fafcc19801e858afc59ed3b319c39adefc20", "url": "https://api.github.com/repos/rust-lang/rust/commits/a4b2fafcc19801e858afc59ed3b319c39adefc20", "html_url": "https://github.com/rust-lang/rust/commit/a4b2fafcc19801e858afc59ed3b319c39adefc20"}], "stats": {"total": 79, "additions": 72, "deletions": 7}, "files": [{"sha": "03738f1b40a1c0538dcf1fadbb255e083046c325", "filename": "compiler/rustc_mir/src/borrow_check/diagnostics/region_name.rs", "status": "modified", "additions": 4, "deletions": 7, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/13730e90bde2e55efa31b127e2175d5e90772044/compiler%2Frustc_mir%2Fsrc%2Fborrow_check%2Fdiagnostics%2Fregion_name.rs", "raw_url": "https://github.com/rust-lang/rust/raw/13730e90bde2e55efa31b127e2175d5e90772044/compiler%2Frustc_mir%2Fsrc%2Fborrow_check%2Fdiagnostics%2Fregion_name.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir%2Fsrc%2Fborrow_check%2Fdiagnostics%2Fregion_name.rs?ref=13730e90bde2e55efa31b127e2175d5e90772044", "patch": "@@ -634,14 +634,11 @@ impl<'tcx> MirBorrowckCtxt<'_, 'tcx> {\n                     | GenericArgKind::Const(_),\n                     _,\n                 ) => {\n-                    // I *think* that HIR lowering should ensure this\n-                    // doesn't happen, even in erroneous\n-                    // programs. Else we should use delay-span-bug.\n-                    span_bug!(\n+                    // HIR lowering sometimes doesn't catch this in erroneous\n+                    // programs, so we need to use delay_span_bug here. See #82126.\n+                    self.infcx.tcx.sess.delay_span_bug(\n                         hir_arg.span(),\n-                        \"unmatched subst and hir arg: found {:?} vs {:?}\",\n-                        kind,\n-                        hir_arg,\n+                        &format!(\"unmatched subst and hir arg: found {:?} vs {:?}\", kind, hir_arg),\n                     );\n                 }\n             }"}, {"sha": "2e6b88a4beba8ccbcf4ecb5ce7f4f1fadecf549b", "filename": "src/test/ui/borrowck/issue-82126-mismatched-subst-and-hir.rs", "status": "added", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/13730e90bde2e55efa31b127e2175d5e90772044/src%2Ftest%2Fui%2Fborrowck%2Fissue-82126-mismatched-subst-and-hir.rs", "raw_url": "https://github.com/rust-lang/rust/raw/13730e90bde2e55efa31b127e2175d5e90772044/src%2Ftest%2Fui%2Fborrowck%2Fissue-82126-mismatched-subst-and-hir.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fborrowck%2Fissue-82126-mismatched-subst-and-hir.rs?ref=13730e90bde2e55efa31b127e2175d5e90772044", "patch": "@@ -0,0 +1,25 @@\n+// Regression test for #82126. Checks that mismatched lifetimes and types are\n+// properly handled.\n+\n+// edition:2018\n+\n+use std::sync::Mutex;\n+\n+struct MarketMultiplier {}\n+\n+impl MarketMultiplier {\n+    fn buy(&mut self) -> &mut usize {\n+        todo!()\n+    }\n+}\n+\n+async fn buy_lock(generator: &Mutex<MarketMultiplier>) -> LockedMarket<'_> {\n+    //~^ ERROR this struct takes 0 lifetime arguments but 1 lifetime argument was supplied\n+    //~^^ ERROR this struct takes 1 type argument but 0 type arguments were supplied\n+    LockedMarket(generator.lock().unwrap().buy())\n+    //~^ ERROR cannot return value referencing temporary value\n+}\n+\n+struct LockedMarket<T>(T);\n+\n+fn main() {}"}, {"sha": "b6844f50488e106f7a37415619fa4d489455cc7c", "filename": "src/test/ui/borrowck/issue-82126-mismatched-subst-and-hir.stderr", "status": "added", "additions": 43, "deletions": 0, "changes": 43, "blob_url": "https://github.com/rust-lang/rust/blob/13730e90bde2e55efa31b127e2175d5e90772044/src%2Ftest%2Fui%2Fborrowck%2Fissue-82126-mismatched-subst-and-hir.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/13730e90bde2e55efa31b127e2175d5e90772044/src%2Ftest%2Fui%2Fborrowck%2Fissue-82126-mismatched-subst-and-hir.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fborrowck%2Fissue-82126-mismatched-subst-and-hir.stderr?ref=13730e90bde2e55efa31b127e2175d5e90772044", "patch": "@@ -0,0 +1,43 @@\n+error[E0107]: this struct takes 0 lifetime arguments but 1 lifetime argument was supplied\n+  --> $DIR/issue-82126-mismatched-subst-and-hir.rs:16:59\n+   |\n+LL | async fn buy_lock(generator: &Mutex<MarketMultiplier>) -> LockedMarket<'_> {\n+   |                                                           ^^^^^^^^^^^^---- help: remove these generics\n+   |                                                           |\n+   |                                                           expected 0 lifetime arguments\n+   |\n+note: struct defined here, with 0 lifetime parameters\n+  --> $DIR/issue-82126-mismatched-subst-and-hir.rs:23:8\n+   |\n+LL | struct LockedMarket<T>(T);\n+   |        ^^^^^^^^^^^^\n+\n+error[E0107]: this struct takes 1 type argument but 0 type arguments were supplied\n+  --> $DIR/issue-82126-mismatched-subst-and-hir.rs:16:59\n+   |\n+LL | async fn buy_lock(generator: &Mutex<MarketMultiplier>) -> LockedMarket<'_> {\n+   |                                                           ^^^^^^^^^^^^ expected 1 type argument\n+   |\n+note: struct defined here, with 1 type parameter: `T`\n+  --> $DIR/issue-82126-mismatched-subst-and-hir.rs:23:8\n+   |\n+LL | struct LockedMarket<T>(T);\n+   |        ^^^^^^^^^^^^ -\n+help: add missing type argument\n+   |\n+LL | async fn buy_lock(generator: &Mutex<MarketMultiplier>) -> LockedMarket<'_, T> {\n+   |                                                                          ^^^\n+\n+error[E0515]: cannot return value referencing temporary value\n+  --> $DIR/issue-82126-mismatched-subst-and-hir.rs:19:5\n+   |\n+LL |     LockedMarket(generator.lock().unwrap().buy())\n+   |     ^^^^^^^^^^^^^-------------------------^^^^^^^\n+   |     |            |\n+   |     |            temporary value created here\n+   |     returns a value referencing data owned by the current function\n+\n+error: aborting due to 3 previous errors\n+\n+Some errors have detailed explanations: E0107, E0515.\n+For more information about an error, try `rustc --explain E0107`."}]}