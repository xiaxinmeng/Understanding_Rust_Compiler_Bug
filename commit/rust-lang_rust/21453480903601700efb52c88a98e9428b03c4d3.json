{"sha": "21453480903601700efb52c88a98e9428b03c4d3", "node_id": "MDY6Q29tbWl0NzI0NzEyOjIxNDUzNDgwOTAzNjAxNzAwZWZiNTJjODhhOThlOTQyOGIwM2M0ZDM=", "commit": {"author": {"name": "Tim Chevalier", "email": "chevalier@alum.wellesley.edu", "date": "2012-09-19T05:44:46Z"}, "committer": {"name": "Tim Chevalier", "email": "chevalier@alum.wellesley.edu", "date": "2012-10-13T03:43:37Z"}, "message": "Make moves explicit in cfail tests", "tree": {"sha": "ecba18274d84ddb4463212ff76928e89be4dac34", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ecba18274d84ddb4463212ff76928e89be4dac34"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/21453480903601700efb52c88a98e9428b03c4d3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/21453480903601700efb52c88a98e9428b03c4d3", "html_url": "https://github.com/rust-lang/rust/commit/21453480903601700efb52c88a98e9428b03c4d3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/21453480903601700efb52c88a98e9428b03c4d3/comments", "author": {"login": "catamorphism", "id": 427212, "node_id": "MDQ6VXNlcjQyNzIxMg==", "avatar_url": "https://avatars.githubusercontent.com/u/427212?v=4", "gravatar_id": "", "url": "https://api.github.com/users/catamorphism", "html_url": "https://github.com/catamorphism", "followers_url": "https://api.github.com/users/catamorphism/followers", "following_url": "https://api.github.com/users/catamorphism/following{/other_user}", "gists_url": "https://api.github.com/users/catamorphism/gists{/gist_id}", "starred_url": "https://api.github.com/users/catamorphism/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/catamorphism/subscriptions", "organizations_url": "https://api.github.com/users/catamorphism/orgs", "repos_url": "https://api.github.com/users/catamorphism/repos", "events_url": "https://api.github.com/users/catamorphism/events{/privacy}", "received_events_url": "https://api.github.com/users/catamorphism/received_events", "type": "User", "site_admin": false}, "committer": {"login": "catamorphism", "id": 427212, "node_id": "MDQ6VXNlcjQyNzIxMg==", "avatar_url": "https://avatars.githubusercontent.com/u/427212?v=4", "gravatar_id": "", "url": "https://api.github.com/users/catamorphism", "html_url": "https://github.com/catamorphism", "followers_url": "https://api.github.com/users/catamorphism/followers", "following_url": "https://api.github.com/users/catamorphism/following{/other_user}", "gists_url": "https://api.github.com/users/catamorphism/gists{/gist_id}", "starred_url": "https://api.github.com/users/catamorphism/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/catamorphism/subscriptions", "organizations_url": "https://api.github.com/users/catamorphism/orgs", "repos_url": "https://api.github.com/users/catamorphism/repos", "events_url": "https://api.github.com/users/catamorphism/events{/privacy}", "received_events_url": "https://api.github.com/users/catamorphism/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f5f3a75b6501c987ffb34b3fb7510e0139c64bb8", "url": "https://api.github.com/repos/rust-lang/rust/commits/f5f3a75b6501c987ffb34b3fb7510e0139c64bb8", "html_url": "https://github.com/rust-lang/rust/commit/f5f3a75b6501c987ffb34b3fb7510e0139c64bb8"}], "stats": {"total": 30, "additions": 15, "deletions": 15}, "files": [{"sha": "e48756bbbeb35a4a8213ec60142f198331dcd968", "filename": "src/test/compile-fail/borrowck-loan-blocks-move.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/21453480903601700efb52c88a98e9428b03c4d3/src%2Ftest%2Fcompile-fail%2Fborrowck-loan-blocks-move.rs", "raw_url": "https://github.com/rust-lang/rust/raw/21453480903601700efb52c88a98e9428b03c4d3/src%2Ftest%2Fcompile-fail%2Fborrowck-loan-blocks-move.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fborrowck-loan-blocks-move.rs?ref=21453480903601700efb52c88a98e9428b03c4d3", "patch": "@@ -4,7 +4,7 @@ fn take(-_v: ~int) {\n fn box_imm() {\n     let v = ~3;\n     let _w = &v; //~ NOTE loan of immutable local variable granted here\n-    take(v); //~ ERROR moving out of immutable local variable prohibited due to outstanding loan\n+    take(move v); //~ ERROR moving out of immutable local variable prohibited due to outstanding loan\n }\n \n fn main() {"}, {"sha": "51e0934bfe00f1689416675ad92f9b47e8579760", "filename": "src/test/compile-fail/copy-into-closure.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/21453480903601700efb52c88a98e9428b03c4d3/src%2Ftest%2Fcompile-fail%2Fcopy-into-closure.rs", "raw_url": "https://github.com/rust-lang/rust/raw/21453480903601700efb52c88a98e9428b03c4d3/src%2Ftest%2Fcompile-fail%2Fcopy-into-closure.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fcopy-into-closure.rs?ref=21453480903601700efb52c88a98e9428b03c4d3", "patch": "@@ -4,7 +4,7 @@ fn closure1(+x: ~str) -> (~str, fn@() -> ~str) {\n         //~^ WARNING implicitly copying a non-implicitly-copyable value\n         //~^^ NOTE to copy values into a @fn closure, use a capture clause\n     };\n-    (x,f)\n+    (move x,f)\n }\n \n fn closure2(+x: util::NonCopyable) -> (util::NonCopyable,\n@@ -15,7 +15,7 @@ fn closure2(+x: util::NonCopyable) -> (util::NonCopyable,\n         //~^^ NOTE non-copyable value cannot be copied into a @fn closure\n         //~^^^ ERROR copying a noncopyable value\n     };\n-    (x,f)\n+    (move x,f)\n }\n fn closure3(+x: util::NonCopyable) {\n     do task::spawn {"}, {"sha": "ee318d7b02caca640593d3c9752ee0fef63914d5", "filename": "src/test/compile-fail/issue-1965.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/21453480903601700efb52c88a98e9428b03c4d3/src%2Ftest%2Fcompile-fail%2Fissue-1965.rs", "raw_url": "https://github.com/rust-lang/rust/raw/21453480903601700efb52c88a98e9428b03c4d3/src%2Ftest%2Fcompile-fail%2Fissue-1965.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-1965.rs?ref=21453480903601700efb52c88a98e9428b03c4d3", "patch": "@@ -2,6 +2,6 @@\n fn test(-x: uint) {}\n \n fn main() {\n-    let i = 3u;\n-    for uint::range(0u, 10u) |_x| {test(i)}\n+    let i = 3;\n+    for uint::range(0, 10) |_x| {test(move i)}\n }"}, {"sha": "0d491fc8834acce08d84a3dc1967d568bb1dfd03", "filename": "src/test/compile-fail/issue-2548.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/21453480903601700efb52c88a98e9428b03c4d3/src%2Ftest%2Fcompile-fail%2Fissue-2548.rs", "raw_url": "https://github.com/rust-lang/rust/raw/21453480903601700efb52c88a98e9428b03c4d3/src%2Ftest%2Fcompile-fail%2Fissue-2548.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-2548.rs?ref=21453480903601700efb52c88a98e9428b03c4d3", "patch": "@@ -21,7 +21,7 @@ fn main() {\n         let mut res = foo(x);\n         \n         let mut v = ~[mut];\n-        v <- ~[mut res] + v; //~ ERROR instantiating a type parameter with an incompatible type (needs `copy`, got `owned`, missing `copy`)\n+        v <- ~[mut (move res)] + v; //~ ERROR instantiating a type parameter with an incompatible type (needs `copy`, got `owned`, missing `copy`)\n         assert (v.len() == 2);\n     }\n "}, {"sha": "48f72dd0d3e8b4c64680fd68014f62ec4c1695b4", "filename": "src/test/compile-fail/liveness-move-from-args.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/21453480903601700efb52c88a98e9428b03c4d3/src%2Ftest%2Fcompile-fail%2Fliveness-move-from-args.rs", "raw_url": "https://github.com/rust-lang/rust/raw/21453480903601700efb52c88a98e9428b03c4d3/src%2Ftest%2Fcompile-fail%2Fliveness-move-from-args.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fliveness-move-from-args.rs?ref=21453480903601700efb52c88a98e9428b03c4d3", "patch": "@@ -1,19 +1,19 @@\n fn take(-_x: int) { }\n \n fn from_by_value_arg(++x: int) {\n-    take(x);  //~ ERROR illegal move from argument `x`, which is not copy or move mode\n+    take(move x);  //~ ERROR illegal move from argument `x`, which is not copy or move mode\n }\n \n fn from_by_ref_arg(&&x: int) {\n-    take(x);  //~ ERROR illegal move from argument `x`, which is not copy or move mode\n+    take(move x);  //~ ERROR illegal move from argument `x`, which is not copy or move mode\n }\n \n fn from_copy_arg(+x: int) {\n-    take(x);\n+    take(move x);\n }\n \n fn from_move_arg(-x: int) {\n-    take(x);\n+    take(move x);\n }\n \n fn main() {"}, {"sha": "959bda4e5834202763fc6db54d4347c2b739c7ed", "filename": "src/test/compile-fail/liveness-move-from-mode.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/21453480903601700efb52c88a98e9428b03c4d3/src%2Ftest%2Fcompile-fail%2Fliveness-move-from-mode.rs", "raw_url": "https://github.com/rust-lang/rust/raw/21453480903601700efb52c88a98e9428b03c4d3/src%2Ftest%2Fcompile-fail%2Fliveness-move-from-mode.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fliveness-move-from-mode.rs?ref=21453480903601700efb52c88a98e9428b03c4d3", "patch": "@@ -4,7 +4,7 @@ fn main() {\n \n     let x: int = 25;\n     loop {\n-        take(x); //~ ERROR use of moved variable: `x`\n+        take(move x); //~ ERROR use of moved variable: `x`\n         //~^ NOTE move of variable occurred here\n     }\n }"}, {"sha": "473a133730a4f9103d504812cfe1565116fa38a2", "filename": "src/test/compile-fail/liveness-unused.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/21453480903601700efb52c88a98e9428b03c4d3/src%2Ftest%2Fcompile-fail%2Fliveness-unused.rs", "raw_url": "https://github.com/rust-lang/rust/raw/21453480903601700efb52c88a98e9428b03c4d3/src%2Ftest%2Fcompile-fail%2Fliveness-unused.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fliveness-unused.rs?ref=21453480903601700efb52c88a98e9428b03c4d3", "patch": "@@ -54,5 +54,5 @@ struct r {\n }\n fn main() {\n     let x = r { x: () };\n-    fn@() { copy x; }; //~ ERROR copying a noncopyable value\n+    fn@(move x) { copy x; }; //~ ERROR copying a noncopyable value\n }"}, {"sha": "13952dbe3c1118b58e07b0b9a6fc7487a91a27be", "filename": "src/test/compile-fail/liveness-use-after-send.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/21453480903601700efb52c88a98e9428b03c4d3/src%2Ftest%2Fcompile-fail%2Fliveness-use-after-send.rs", "raw_url": "https://github.com/rust-lang/rust/raw/21453480903601700efb52c88a98e9428b03c4d3/src%2Ftest%2Fcompile-fail%2Fliveness-use-after-send.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fliveness-use-after-send.rs?ref=21453480903601700efb52c88a98e9428b03c4d3", "patch": "@@ -9,7 +9,7 @@ enum _chan<T> = int;\n // Tests that \"log(debug, message);\" is flagged as using\n // message after the send deinitializes it\n fn test00_start(ch: _chan<int>, message: int, _count: int) {\n-    send(ch, message); //~ NOTE move of variable occurred here\n+    send(ch, move message); //~ NOTE move of variable occurred here\n     log(debug, message); //~ ERROR use of moved variable: `message`\n }\n "}, {"sha": "b31583724d214eb9d34981ac965a49d50f75eec2", "filename": "src/test/compile-fail/unique-unique-kind.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/21453480903601700efb52c88a98e9428b03c4d3/src%2Ftest%2Fcompile-fail%2Funique-unique-kind.rs", "raw_url": "https://github.com/rust-lang/rust/raw/21453480903601700efb52c88a98e9428b03c4d3/src%2Ftest%2Fcompile-fail%2Funique-unique-kind.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Funique-unique-kind.rs?ref=21453480903601700efb52c88a98e9428b03c4d3", "patch": "@@ -3,5 +3,5 @@ fn f<T: Send>(_i: T) {\n \n fn main() {\n     let i = ~@100;\n-    f(i); //~ ERROR missing `send`\n+    f(move i); //~ ERROR missing `send`\n }"}, {"sha": "a84c1397319f5502d686c06bb74747cd418cfea2", "filename": "src/test/compile-fail/unsendable-class.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/21453480903601700efb52c88a98e9428b03c4d3/src%2Ftest%2Fcompile-fail%2Funsendable-class.rs", "raw_url": "https://github.com/rust-lang/rust/raw/21453480903601700efb52c88a98e9428b03c4d3/src%2Ftest%2Fcompile-fail%2Funsendable-class.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Funsendable-class.rs?ref=21453480903601700efb52c88a98e9428b03c4d3", "patch": "@@ -17,5 +17,5 @@ fn main() {\n   let cat = ~\"kitty\";\n   let po = comm::Port();         //~ ERROR missing `send`\n   let ch = comm::Chan(&po);       //~ ERROR missing `send`\n-  comm::send(ch, foo(42, @cat)); //~ ERROR missing `send`\n+  comm::send(ch, foo(42, @(move cat))); //~ ERROR missing `send`\n }"}]}