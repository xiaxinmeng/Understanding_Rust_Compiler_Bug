{"sha": "f756ad3d9478a5b82b0dfb304bf31b46a031ed08", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY3NTZhZDNkOTQ3OGE1YjgyYjBkZmIzMDRiZjMxYjQ2YTAzMWVkMDg=", "commit": {"author": {"name": "Amanieu d'Antras", "email": "amanieu@gmail.com", "date": "2018-02-27T02:05:58Z"}, "committer": {"name": "Amanieu d'Antras", "email": "amanieu@gmail.com", "date": "2018-02-28T14:47:17Z"}, "message": "Add AArch64 features", "tree": {"sha": "fa8d58c14f52c600b5122a85d8370ae86a15403d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fa8d58c14f52c600b5122a85d8370ae86a15403d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f756ad3d9478a5b82b0dfb304bf31b46a031ed08", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f756ad3d9478a5b82b0dfb304bf31b46a031ed08", "html_url": "https://github.com/rust-lang/rust/commit/f756ad3d9478a5b82b0dfb304bf31b46a031ed08", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f756ad3d9478a5b82b0dfb304bf31b46a031ed08/comments", "author": {"login": "Amanieu", "id": 278509, "node_id": "MDQ6VXNlcjI3ODUwOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/278509?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Amanieu", "html_url": "https://github.com/Amanieu", "followers_url": "https://api.github.com/users/Amanieu/followers", "following_url": "https://api.github.com/users/Amanieu/following{/other_user}", "gists_url": "https://api.github.com/users/Amanieu/gists{/gist_id}", "starred_url": "https://api.github.com/users/Amanieu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Amanieu/subscriptions", "organizations_url": "https://api.github.com/users/Amanieu/orgs", "repos_url": "https://api.github.com/users/Amanieu/repos", "events_url": "https://api.github.com/users/Amanieu/events{/privacy}", "received_events_url": "https://api.github.com/users/Amanieu/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Amanieu", "id": 278509, "node_id": "MDQ6VXNlcjI3ODUwOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/278509?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Amanieu", "html_url": "https://github.com/Amanieu", "followers_url": "https://api.github.com/users/Amanieu/followers", "following_url": "https://api.github.com/users/Amanieu/following{/other_user}", "gists_url": "https://api.github.com/users/Amanieu/gists{/gist_id}", "starred_url": "https://api.github.com/users/Amanieu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Amanieu/subscriptions", "organizations_url": "https://api.github.com/users/Amanieu/orgs", "repos_url": "https://api.github.com/users/Amanieu/repos", "events_url": "https://api.github.com/users/Amanieu/events{/privacy}", "received_events_url": "https://api.github.com/users/Amanieu/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "90b28135ccee40577bd0915d70fcd5613aa52544", "url": "https://api.github.com/repos/rust-lang/rust/commits/90b28135ccee40577bd0915d70fcd5613aa52544", "html_url": "https://github.com/rust-lang/rust/commit/90b28135ccee40577bd0915d70fcd5613aa52544"}], "stats": {"total": 26, "additions": 17, "deletions": 9}, "files": [{"sha": "57cd47063dcefbe7d8631db764fc4c84b5f3b7de", "filename": "src/librustc_trans/attributes.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f756ad3d9478a5b82b0dfb304bf31b46a031ed08/src%2Flibrustc_trans%2Fattributes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f756ad3d9478a5b82b0dfb304bf31b46a031ed08/src%2Flibrustc_trans%2Fattributes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Fattributes.rs?ref=f756ad3d9478a5b82b0dfb304bf31b46a031ed08", "patch": "@@ -212,7 +212,7 @@ fn from_target_feature(\n         let value = value.as_str();\n         for feature in value.split(',') {\n             if whitelist.contains(feature) {\n-                let llvm_feature = llvm_util::to_llvm_feature(feature);\n+                let llvm_feature = llvm_util::to_llvm_feature(&tcx.sess, feature);\n                 target_features.push(format!(\"+{}\", llvm_feature));\n                 continue\n             }"}, {"sha": "45445a48e233ed160b5ac6c743296d28e95b70ad", "filename": "src/librustc_trans/llvm_util.rs", "status": "modified", "additions": 16, "deletions": 8, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/f756ad3d9478a5b82b0dfb304bf31b46a031ed08/src%2Flibrustc_trans%2Fllvm_util.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f756ad3d9478a5b82b0dfb304bf31b46a031ed08/src%2Flibrustc_trans%2Fllvm_util.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Fllvm_util.rs?ref=f756ad3d9478a5b82b0dfb304bf31b46a031ed08", "patch": "@@ -81,7 +81,9 @@ unsafe fn configure_llvm(sess: &Session) {\n \n const ARM_WHITELIST: &'static [&'static str] = &[\"neon\", \"v7\", \"vfp2\", \"vfp3\", \"vfp4\"];\n \n-const AARCH64_WHITELIST: &'static [&'static str] = &[\"neon\"];\n+const AARCH64_WHITELIST: &'static [&'static str] = &[\"fp\", \"neon\", \"sve\", \"crc\", \"crypto\",\n+                                                     \"ras\", \"lse\", \"rdm\", \"fp16\", \"rcpc\",\n+                                                     \"dotprod\", \"v8.1a\", \"v8.2a\", \"v8.3a\"];\n \n const X86_WHITELIST: &'static [&'static str] = &[\"aes\", \"avx\", \"avx2\", \"avx512bw\",\n                                                  \"avx512cd\", \"avx512dq\", \"avx512er\",\n@@ -104,12 +106,18 @@ const POWERPC_WHITELIST: &'static [&'static str] = &[\"altivec\",\n \n const MIPS_WHITELIST: &'static [&'static str] = &[\"msa\"];\n \n-pub fn to_llvm_feature(s: &str) -> &str {\n-    match s {\n-        \"pclmulqdq\" => \"pclmul\",\n-        \"rdrand\" => \"rdrnd\",\n-        \"bmi1\" => \"bmi\",\n-        s => s,\n+pub fn to_llvm_feature<'a>(sess: &Session, s: &'a str) -> &'a str {\n+    let arch = if sess.target.target.arch == \"x86_64\" {\n+        \"x86\"\n+    } else {\n+        &*sess.target.target.arch\n+    };\n+    match (arch, s) {\n+        (\"x86\", \"pclmulqdq\") => \"pclmul\",\n+        (\"x86\", \"rdrand\") => \"rdrnd\",\n+        (\"x86\", \"bmi1\") => \"bmi\",\n+        (\"aarch64\", \"fp16\") => \"fullfp16\",\n+        (_, s) => s,\n     }\n }\n \n@@ -118,7 +126,7 @@ pub fn target_features(sess: &Session) -> Vec<Symbol> {\n     target_feature_whitelist(sess)\n         .iter()\n         .filter(|feature| {\n-            let llvm_feature = to_llvm_feature(feature);\n+            let llvm_feature = to_llvm_feature(sess, feature);\n             let cstr = CString::new(llvm_feature).unwrap();\n             unsafe { llvm::LLVMRustHasFeature(target_machine, cstr.as_ptr()) }\n         })"}]}