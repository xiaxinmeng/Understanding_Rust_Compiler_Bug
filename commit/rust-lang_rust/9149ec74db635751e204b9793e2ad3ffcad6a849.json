{"sha": "9149ec74db635751e204b9793e2ad3ffcad6a849", "node_id": "MDY6Q29tbWl0NzI0NzEyOjkxNDllYzc0ZGI2MzU3NTFlMjA0Yjk3OTNlMmFkM2ZmY2FkNmE4NDk=", "commit": {"author": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2020-08-09T23:56:47Z"}, "committer": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2020-08-10T00:12:57Z"}, "message": "Tweak conditions for E0026 and E0769\n\nWhen we have a tuple struct used with struct we don't want to suggest using\nthe (valid) struct syntax with numeric field names. Instead we want to\nsuggest the expected syntax.\n\nGiven\n\n```rust\nfn main() {\n    match MyOption::MySome(42) {\n        MyOption::MySome { x: 42 } => (),\n        _ => (),\n    }\n}\n```\n\nWe now emit E0769 \"tuple variant `MyOption::MySome` written as struct variant\"\ninstead of E0026 \"variant `MyOption::MySome` does not have a field named `x`\".", "tree": {"sha": "6e8fc6aa899aec2777ed28adaafffe43bc1c6fe9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6e8fc6aa899aec2777ed28adaafffe43bc1c6fe9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9149ec74db635751e204b9793e2ad3ffcad6a849", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9149ec74db635751e204b9793e2ad3ffcad6a849", "html_url": "https://github.com/rust-lang/rust/commit/9149ec74db635751e204b9793e2ad3ffcad6a849", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9149ec74db635751e204b9793e2ad3ffcad6a849/comments", "author": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "committer": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "18f3be7704a4ec7976fcd1272c728974243d29bd", "url": "https://api.github.com/repos/rust-lang/rust/commits/18f3be7704a4ec7976fcd1272c728974243d29bd", "html_url": "https://github.com/rust-lang/rust/commit/18f3be7704a4ec7976fcd1272c728974243d29bd"}], "stats": {"total": 24, "additions": 14, "deletions": 10}, "files": [{"sha": "1c78bef98527a6b988e4fe3363834d51747522ae", "filename": "src/librustc_typeck/check/pat.rs", "status": "modified", "additions": 9, "deletions": 2, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/9149ec74db635751e204b9793e2ad3ffcad6a849/src%2Flibrustc_typeck%2Fcheck%2Fpat.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9149ec74db635751e204b9793e2ad3ffcad6a849/src%2Flibrustc_typeck%2Fcheck%2Fpat.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fpat.rs?ref=9149ec74db635751e204b9793e2ad3ffcad6a849", "patch": "@@ -1229,8 +1229,15 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n                         Applicability::MaybeIncorrect,\n                     );\n \n-                    // we don't want to throw `E0027` in case we have thrown `E0026` for them\n-                    unmentioned_fields.retain(|&x| x.name != suggested_name);\n+                    // When we have a tuple struct used with struct we don't want to suggest using\n+                    // the (valid) struct syntax with numeric field names. Instead we want to\n+                    // suggest the expected syntax. We infer that this is the case by parsing the\n+                    // `Ident` into an unsized integer. The suggestion will be emitted elsewhere in\n+                    // `smart_resolve_context_dependent_help`.\n+                    if suggested_name.to_ident_string().parse::<usize>().is_err() {\n+                        // We don't want to throw `E0027` in case we have thrown `E0026` for them.\n+                        unmentioned_fields.retain(|&x| x.name != suggested_name);\n+                    }\n                 }\n             }\n         }"}, {"sha": "5254f45d7c2de7cea3a35418c00b24c10b900e8c", "filename": "src/test/ui/issues/issue-17800.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9149ec74db635751e204b9793e2ad3ffcad6a849/src%2Ftest%2Fui%2Fissues%2Fissue-17800.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9149ec74db635751e204b9793e2ad3ffcad6a849/src%2Ftest%2Fui%2Fissues%2Fissue-17800.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-17800.rs?ref=9149ec74db635751e204b9793e2ad3ffcad6a849", "patch": "@@ -6,7 +6,7 @@ enum MyOption<T> {\n fn main() {\n     match MyOption::MySome(42) {\n         MyOption::MySome { x: 42 } => (),\n-        //~^ ERROR variant `MyOption::MySome` does not have a field named `x`\n+        //~^ ERROR tuple variant `MyOption::MySome` written as struct variant\n         _ => (),\n     }\n }"}, {"sha": "fc034a0cbf3b8120fd2f081a395fa3b3fcda5d66", "filename": "src/test/ui/issues/issue-17800.stderr", "status": "modified", "additions": 4, "deletions": 7, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/9149ec74db635751e204b9793e2ad3ffcad6a849/src%2Ftest%2Fui%2Fissues%2Fissue-17800.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/9149ec74db635751e204b9793e2ad3ffcad6a849/src%2Ftest%2Fui%2Fissues%2Fissue-17800.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-17800.stderr?ref=9149ec74db635751e204b9793e2ad3ffcad6a849", "patch": "@@ -1,12 +1,9 @@\n-error[E0026]: variant `MyOption::MySome` does not have a field named `x`\n-  --> $DIR/issue-17800.rs:8:28\n+error[E0769]: tuple variant `MyOption::MySome` written as struct variant\n+  --> $DIR/issue-17800.rs:8:9\n    |\n LL |         MyOption::MySome { x: 42 } => (),\n-   |                            ^\n-   |                            |\n-   |                            variant `MyOption::MySome` does not have this field\n-   |                            help: a field with a similar name exists: `0`\n+   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use the tuple variant pattern syntax instead: `MyOption::MySome(42)`\n \n error: aborting due to previous error\n \n-For more information about this error, try `rustc --explain E0026`.\n+For more information about this error, try `rustc --explain E0769`."}]}