{"sha": "3d85f05dfd85be2ea8c61fd2e6a5b6816c0abfdc", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNkODVmMDVkZmQ4NWJlMmVhOGM2MWZkMmU2YTViNjgxNmMwYWJmZGM=", "commit": {"author": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2021-03-15T12:55:54Z"}, "committer": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2021-03-15T13:04:04Z"}, "message": "Remove no longer necessary intcasts", "tree": {"sha": "7f750c7051868202998daa490ea4f3f70cd3d146", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7f750c7051868202998daa490ea4f3f70cd3d146"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3d85f05dfd85be2ea8c61fd2e6a5b6816c0abfdc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3d85f05dfd85be2ea8c61fd2e6a5b6816c0abfdc", "html_url": "https://github.com/rust-lang/rust/commit/3d85f05dfd85be2ea8c61fd2e6a5b6816c0abfdc", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3d85f05dfd85be2ea8c61fd2e6a5b6816c0abfdc/comments", "author": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b1d14ca05d6b34423c31fd237fdf2d6cd6f70333", "url": "https://api.github.com/repos/rust-lang/rust/commits/b1d14ca05d6b34423c31fd237fdf2d6cd6f70333", "html_url": "https://github.com/rust-lang/rust/commit/b1d14ca05d6b34423c31fd237fdf2d6cd6f70333"}], "stats": {"total": 2, "additions": 0, "deletions": 2}, "files": [{"sha": "2ebf30da2d8ba930e973995dac9bc173eea636da", "filename": "src/num.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3d85f05dfd85be2ea8c61fd2e6a5b6816c0abfdc/src%2Fnum.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3d85f05dfd85be2ea8c61fd2e6a5b6816c0abfdc/src%2Fnum.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fnum.rs?ref=3d85f05dfd85be2ea8c61fd2e6a5b6816c0abfdc", "patch": "@@ -166,13 +166,11 @@ pub(crate) fn codegen_int_binop<'tcx>(\n         BinOp::Shl => {\n             let lhs_ty = fx.bcx.func.dfg.value_type(lhs);\n             let actual_shift = fx.bcx.ins().band_imm(rhs, i64::from(lhs_ty.bits() - 1));\n-            let actual_shift = clif_intcast(fx, actual_shift, types::I8, false);\n             fx.bcx.ins().ishl(lhs, actual_shift)\n         }\n         BinOp::Shr => {\n             let lhs_ty = fx.bcx.func.dfg.value_type(lhs);\n             let actual_shift = fx.bcx.ins().band_imm(rhs, i64::from(lhs_ty.bits() - 1));\n-            let actual_shift = clif_intcast(fx, actual_shift, types::I8, false);\n             if signed {\n                 fx.bcx.ins().sshr(lhs, actual_shift)\n             } else {"}]}