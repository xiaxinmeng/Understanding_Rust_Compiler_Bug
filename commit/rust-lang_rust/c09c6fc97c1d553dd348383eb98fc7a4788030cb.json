{"sha": "c09c6fc97c1d553dd348383eb98fc7a4788030cb", "node_id": "MDY6Q29tbWl0NzI0NzEyOmMwOWM2ZmM5N2MxZDU1M2RkMzQ4MzgzZWI5OGZjN2E0Nzg4MDMwY2I=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-01-30T20:58:52Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-01-31T20:23:30Z"}, "message": "start tt convertions boilerplate", "tree": {"sha": "2a89c345b5bbc25943b971a3752988e52a8edef9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2a89c345b5bbc25943b971a3752988e52a8edef9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c09c6fc97c1d553dd348383eb98fc7a4788030cb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c09c6fc97c1d553dd348383eb98fc7a4788030cb", "html_url": "https://github.com/rust-lang/rust/commit/c09c6fc97c1d553dd348383eb98fc7a4788030cb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c09c6fc97c1d553dd348383eb98fc7a4788030cb/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a4342a7feeaca642a64ad908432a17b31f081e01", "url": "https://api.github.com/repos/rust-lang/rust/commits/a4342a7feeaca642a64ad908432a17b31f081e01", "html_url": "https://github.com/rust-lang/rust/commit/a4342a7feeaca642a64ad908432a17b31f081e01"}], "stats": {"total": 50, "additions": 43, "deletions": 7}, "files": [{"sha": "9ba3816856396bc90f42c6beaebd49764defb281", "filename": "crates/ra_hir/src/macros.rs", "status": "modified", "additions": 36, "deletions": 2, "changes": 38, "blob_url": "https://github.com/rust-lang/rust/blob/c09c6fc97c1d553dd348383eb98fc7a4788030cb/crates%2Fra_hir%2Fsrc%2Fmacros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c09c6fc97c1d553dd348383eb98fc7a4788030cb/crates%2Fra_hir%2Fsrc%2Fmacros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Fmacros.rs?ref=c09c6fc97c1d553dd348383eb98fc7a4788030cb", "patch": "@@ -16,6 +16,7 @@ use std::sync::Arc;\n \n use ra_syntax::{\n     TextRange, TextUnit, SourceFile, AstNode, SyntaxNode, TreeArc, SyntaxNodePtr,\n+    SyntaxKind::*,\n     ast::{self, NameOwner},\n };\n \n@@ -201,6 +202,39 @@ pub(crate) fn expand_macro_invocation(\n     def.expand(input).map(Arc::new)\n }\n \n-fn macro_call_to_tt(call: &ast::MacroCall) -> Option<tt::TokenTree> {\n-    None\n+fn macro_call_to_tt(call: &ast::MacroCall) -> Option<tt::Subtree> {\n+    let tt = call.token_tree()?;\n+    convert_tt(tt.syntax())\n+}\n+\n+fn convert_tt(tt: &SyntaxNode) -> Option<tt::Subtree> {\n+    let first_child = tt.first_child()?;\n+    let last_child = tt.last_child()?;\n+    let delimiter = match (first_child.kind(), last_child.kind()) {\n+        (L_PAREN, R_PAREN) => tt::Delimiter::Parenthesis,\n+        (L_CURLY, R_CURLY) => tt::Delimiter::Brace,\n+        (L_BRACK, R_BRACK) => tt::Delimiter::Bracket,\n+        _ => return None,\n+    };\n+    let mut token_trees = Vec::new();\n+    for child in tt.children().skip(1) {\n+        if child == first_child || child == last_child || child.kind().is_trivia() {\n+            continue;\n+        }\n+        let child = if child.kind() == TOKEN_TREE {\n+            convert_tt(child)?.into()\n+        } else if child.kind().is_keyword() {\n+            let text = child.leaf_text().unwrap().clone();\n+            tt::Leaf::from(tt::Ident { text }).into()\n+        } else {\n+            return None;\n+        };\n+        token_trees.push(child)\n+    }\n+\n+    let res = tt::Subtree {\n+        delimiter,\n+        token_trees,\n+    };\n+    Some(res)\n }"}, {"sha": "11b1089d36526ce56fd6ef53192dc5aea8a0f536", "filename": "crates/ra_hir/src/macros/tt.rs", "status": "modified", "additions": 7, "deletions": 5, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/c09c6fc97c1d553dd348383eb98fc7a4788030cb/crates%2Fra_hir%2Fsrc%2Fmacros%2Ftt.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c09c6fc97c1d553dd348383eb98fc7a4788030cb/crates%2Fra_hir%2Fsrc%2Fmacros%2Ftt.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Fmacros%2Ftt.rs?ref=c09c6fc97c1d553dd348383eb98fc7a4788030cb", "patch": "@@ -4,16 +4,18 @@ pub(crate) enum TokenTree {\n     Leaf(Leaf),\n     Subtree(Subtree),\n }\n+impl_froms!(TokenTree: Leaf, Subtree);\n \n pub(crate) enum Leaf {\n     Literal(Literal),\n     Punct(Punct),\n     Ident(Ident),\n }\n+impl_froms!(Leaf: Literal, Punct, Ident);\n \n pub(crate) struct Subtree {\n-    delimiter: Delimiter,\n-    token_trees: Vec<TokenTree>,\n+    pub(crate) delimiter: Delimiter,\n+    pub(crate) token_trees: Vec<TokenTree>,\n }\n \n pub(crate) enum Delimiter {\n@@ -24,13 +26,13 @@ pub(crate) enum Delimiter {\n }\n \n pub(crate) struct Literal {\n-    text: SmolStr,\n+    pub(crate) text: SmolStr,\n }\n \n pub(crate) struct Punct {\n-    char: char,\n+    pub(crate) char: char,\n }\n \n pub(crate) struct Ident {\n-    text: SmolStr,\n+    pub(crate) text: SmolStr,\n }"}]}