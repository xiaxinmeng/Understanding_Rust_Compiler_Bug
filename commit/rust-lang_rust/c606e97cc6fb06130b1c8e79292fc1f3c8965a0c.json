{"sha": "c606e97cc6fb06130b1c8e79292fc1f3c8965a0c", "node_id": "MDY6Q29tbWl0NzI0NzEyOmM2MDZlOTdjYzZmYjA2MTMwYjFjOGU3OTI5MmZjMWYzYzg5NjVhMGM=", "commit": {"author": {"name": "Josh Stone", "email": "jistone@redhat.com", "date": "2017-09-08T22:55:28Z"}, "committer": {"name": "Josh Stone", "email": "jistone@redhat.com", "date": "2017-09-08T22:55:28Z"}, "message": "Add a test for `min_global_align`", "tree": {"sha": "81cbd9465cfa9cc635a20568a89df73ca8877a42", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/81cbd9465cfa9cc635a20568a89df73ca8877a42"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c606e97cc6fb06130b1c8e79292fc1f3c8965a0c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c606e97cc6fb06130b1c8e79292fc1f3c8965a0c", "html_url": "https://github.com/rust-lang/rust/commit/c606e97cc6fb06130b1c8e79292fc1f3c8965a0c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c606e97cc6fb06130b1c8e79292fc1f3c8965a0c/comments", "author": {"login": "cuviper", "id": 36186, "node_id": "MDQ6VXNlcjM2MTg2", "avatar_url": "https://avatars.githubusercontent.com/u/36186?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cuviper", "html_url": "https://github.com/cuviper", "followers_url": "https://api.github.com/users/cuviper/followers", "following_url": "https://api.github.com/users/cuviper/following{/other_user}", "gists_url": "https://api.github.com/users/cuviper/gists{/gist_id}", "starred_url": "https://api.github.com/users/cuviper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cuviper/subscriptions", "organizations_url": "https://api.github.com/users/cuviper/orgs", "repos_url": "https://api.github.com/users/cuviper/repos", "events_url": "https://api.github.com/users/cuviper/events{/privacy}", "received_events_url": "https://api.github.com/users/cuviper/received_events", "type": "User", "site_admin": false}, "committer": {"login": "cuviper", "id": 36186, "node_id": "MDQ6VXNlcjM2MTg2", "avatar_url": "https://avatars.githubusercontent.com/u/36186?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cuviper", "html_url": "https://github.com/cuviper", "followers_url": "https://api.github.com/users/cuviper/followers", "following_url": "https://api.github.com/users/cuviper/following{/other_user}", "gists_url": "https://api.github.com/users/cuviper/gists{/gist_id}", "starred_url": "https://api.github.com/users/cuviper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cuviper/subscriptions", "organizations_url": "https://api.github.com/users/cuviper/orgs", "repos_url": "https://api.github.com/users/cuviper/repos", "events_url": "https://api.github.com/users/cuviper/events{/privacy}", "received_events_url": "https://api.github.com/users/cuviper/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "95a5a0ed16171cfab039c3b59f45a6e4a93075fa", "url": "https://api.github.com/repos/rust-lang/rust/commits/95a5a0ed16171cfab039c3b59f45a6e4a93075fa", "html_url": "https://github.com/rust-lang/rust/commit/95a5a0ed16171cfab039c3b59f45a6e4a93075fa"}], "stats": {"total": 60, "additions": 60, "deletions": 0}, "files": [{"sha": "2eacc36f380d118dde1da95f10b21e7cfd120a15", "filename": "src/test/run-make/min-global-align/Makefile", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/c606e97cc6fb06130b1c8e79292fc1f3c8965a0c/src%2Ftest%2Frun-make%2Fmin-global-align%2FMakefile", "raw_url": "https://github.com/rust-lang/rust/raw/c606e97cc6fb06130b1c8e79292fc1f3c8965a0c/src%2Ftest%2Frun-make%2Fmin-global-align%2FMakefile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Fmin-global-align%2FMakefile?ref=c606e97cc6fb06130b1c8e79292fc1f3c8965a0c", "patch": "@@ -0,0 +1,22 @@\n+-include ../tools.mk\n+\n+# This tests ensure that global variables respect the target minimum alignment.\n+# The three bools `STATIC_BOOL`, `STATIC_MUT_BOOL`, and `CONST_BOOL` all have\n+# type-alignment of 1, but some targets require greater global alignment.\n+\n+SRC = min_global_align.rs\n+LL = $(TMPDIR)/min_global_align.ll\n+\n+all:\n+ifeq ($(UNAME),Linux)\n+# Most targets are happy with default alignment -- take i686 for example.\n+ifeq ($(filter x86,$(LLVM_COMPONENTS)),x86)\n+\t$(RUSTC) --target=i686-unknown-linux-gnu --emit=llvm-ir $(SRC)\n+\t[ \"$$(grep -c 'align 1' \"$(LL)\")\" -eq \"3\" ]\n+endif\n+# SystemZ requires even alignment for PC-relative addressing.\n+ifeq ($(filter systemz,$(LLVM_COMPONENTS)),systemz)\n+\t$(RUSTC) --target=s390x-unknown-linux-gnu --emit=llvm-ir $(SRC)\n+\t[ \"$$(grep -c 'align 2' \"$(LL)\")\" -eq \"3\" ]\n+endif\n+endif"}, {"sha": "3d4f9001a747455bdc77384538c7a26bc228ee2a", "filename": "src/test/run-make/min-global-align/min_global_align.rs", "status": "added", "additions": 38, "deletions": 0, "changes": 38, "blob_url": "https://github.com/rust-lang/rust/blob/c606e97cc6fb06130b1c8e79292fc1f3c8965a0c/src%2Ftest%2Frun-make%2Fmin-global-align%2Fmin_global_align.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c606e97cc6fb06130b1c8e79292fc1f3c8965a0c/src%2Ftest%2Frun-make%2Fmin-global-align%2Fmin_global_align.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Fmin-global-align%2Fmin_global_align.rs?ref=c606e97cc6fb06130b1c8e79292fc1f3c8965a0c", "patch": "@@ -0,0 +1,38 @@\n+// Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#![feature(no_core, lang_items)]\n+#![crate_type=\"rlib\"]\n+#![no_core]\n+\n+pub static STATIC_BOOL: bool = true;\n+\n+pub static mut STATIC_MUT_BOOL: bool = true;\n+\n+const CONST_BOOL: bool = true;\n+pub static CONST_BOOL_REF: &'static bool = &CONST_BOOL;\n+\n+\n+#[lang = \"sized\"]\n+trait Sized {}\n+\n+#[lang = \"copy\"]\n+trait Copy {}\n+\n+#[lang = \"freeze\"]\n+trait Freeze {}\n+\n+#[lang = \"sync\"]\n+trait Sync {}\n+impl Sync for bool {}\n+impl Sync for &'static bool {}\n+\n+#[lang=\"drop_in_place\"]\n+pub unsafe fn drop_in_place<T: ?Sized>(_: *mut T) { }"}]}