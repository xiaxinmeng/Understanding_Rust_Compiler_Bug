{"sha": "b5fc27cc8180c2de8cef3c8e44db20b24bbe1dc2", "node_id": "MDY6Q29tbWl0NzI0NzEyOmI1ZmMyN2NjODE4MGMyZGU4Y2VmM2M4ZTQ0ZGIyMGIyNGJiZTFkYzI=", "commit": {"author": {"name": "Steve Klabnik", "email": "steve@steveklabnik.com", "date": "2016-04-11T14:31:27Z"}, "committer": {"name": "Steve Klabnik", "email": "steve@steveklabnik.com", "date": "2016-04-11T14:31:27Z"}, "message": "Rollup merge of #32815 - allonsy:master, r=GuillaumeGomez\n\nAdds data race in docs\n\nThanks for all your hard work!\nThis is in reference to #32733\nI know there has been a discussion about this on PR #32538 so you are welcome to keep the code as is or merge my documentation in.\nLet me know what you think and/or if you want me to modify anything!", "tree": {"sha": "448b9dedb2071969093b7ce1ede775eaa9e26d61", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/448b9dedb2071969093b7ce1ede775eaa9e26d61"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b5fc27cc8180c2de8cef3c8e44db20b24bbe1dc2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b5fc27cc8180c2de8cef3c8e44db20b24bbe1dc2", "html_url": "https://github.com/rust-lang/rust/commit/b5fc27cc8180c2de8cef3c8e44db20b24bbe1dc2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b5fc27cc8180c2de8cef3c8e44db20b24bbe1dc2/comments", "author": {"login": "steveklabnik", "id": 27786, "node_id": "MDQ6VXNlcjI3Nzg2", "avatar_url": "https://avatars.githubusercontent.com/u/27786?v=4", "gravatar_id": "", "url": "https://api.github.com/users/steveklabnik", "html_url": "https://github.com/steveklabnik", "followers_url": "https://api.github.com/users/steveklabnik/followers", "following_url": "https://api.github.com/users/steveklabnik/following{/other_user}", "gists_url": "https://api.github.com/users/steveklabnik/gists{/gist_id}", "starred_url": "https://api.github.com/users/steveklabnik/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/steveklabnik/subscriptions", "organizations_url": "https://api.github.com/users/steveklabnik/orgs", "repos_url": "https://api.github.com/users/steveklabnik/repos", "events_url": "https://api.github.com/users/steveklabnik/events{/privacy}", "received_events_url": "https://api.github.com/users/steveklabnik/received_events", "type": "User", "site_admin": false}, "committer": {"login": "steveklabnik", "id": 27786, "node_id": "MDQ6VXNlcjI3Nzg2", "avatar_url": "https://avatars.githubusercontent.com/u/27786?v=4", "gravatar_id": "", "url": "https://api.github.com/users/steveklabnik", "html_url": "https://github.com/steveklabnik", "followers_url": "https://api.github.com/users/steveklabnik/followers", "following_url": "https://api.github.com/users/steveklabnik/following{/other_user}", "gists_url": "https://api.github.com/users/steveklabnik/gists{/gist_id}", "starred_url": "https://api.github.com/users/steveklabnik/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/steveklabnik/subscriptions", "organizations_url": "https://api.github.com/users/steveklabnik/orgs", "repos_url": "https://api.github.com/users/steveklabnik/repos", "events_url": "https://api.github.com/users/steveklabnik/events{/privacy}", "received_events_url": "https://api.github.com/users/steveklabnik/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "47cc036948e18f8e8bd23472a7d425137605bcb2", "url": "https://api.github.com/repos/rust-lang/rust/commits/47cc036948e18f8e8bd23472a7d425137605bcb2", "html_url": "https://github.com/rust-lang/rust/commit/47cc036948e18f8e8bd23472a7d425137605bcb2"}, {"sha": "4d8fac078acad2944fb953359ee370eb57176d0f", "url": "https://api.github.com/repos/rust-lang/rust/commits/4d8fac078acad2944fb953359ee370eb57176d0f", "html_url": "https://github.com/rust-lang/rust/commit/4d8fac078acad2944fb953359ee370eb57176d0f"}], "stats": {"total": 21, "additions": 8, "deletions": 13}, "files": [{"sha": "c179629a79a720d724952e2ef0ef1b636b0ff0eb", "filename": "src/doc/book/concurrency.md", "status": "modified", "additions": 8, "deletions": 13, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/b5fc27cc8180c2de8cef3c8e44db20b24bbe1dc2/src%2Fdoc%2Fbook%2Fconcurrency.md", "raw_url": "https://github.com/rust-lang/rust/raw/b5fc27cc8180c2de8cef3c8e44db20b24bbe1dc2/src%2Fdoc%2Fbook%2Fconcurrency.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Fbook%2Fconcurrency.md?ref=b5fc27cc8180c2de8cef3c8e44db20b24bbe1dc2", "patch": "@@ -162,7 +162,7 @@ The same [ownership system](ownership.html) that helps prevent using pointers\n incorrectly also helps rule out data races, one of the worst kinds of\n concurrency bugs.\n \n-As an example, here is a Rust program that could have a data race in many\n+As an example, here is a Rust program that would have a data race in many\n languages. It will not compile:\n \n ```ignore\n@@ -174,7 +174,7 @@ fn main() {\n \n     for i in 0..3 {\n         thread::spawn(move || {\n-            data[i] += 1;\n+            data[0] += i;\n         });\n     }\n \n@@ -186,7 +186,7 @@ This gives us an error:\n \n ```text\n 8:17 error: capture of moved value: `data`\n-        data[i] += 1;\n+        data[0] += i;\n         ^~~~\n ```\n \n@@ -195,11 +195,6 @@ thread, and the thread takes ownership of the reference, we'd have three owners!\n `data` gets moved out of `main` in the first call to `spawn()`, so subsequent\n calls in the loop cannot use this variable.\n \n-Note that this specific example will not cause a data race since different array\n-indices are being accessed. But this can't be determined at compile time, and in\n-a similar situation where `i` is a constant or is random, you would have a data\n-race.\n-\n So, we need some type that lets us have more than one owning reference to a\n value. Usually, we'd use `Rc<T>` for this, which is a reference counted type\n that provides shared ownership. It has some runtime bookkeeping that keeps track\n@@ -223,7 +218,7 @@ fn main() {\n \n         // use it in a thread\n         thread::spawn(move || {\n-            data_ref[i] += 1;\n+            data_ref[0] += i;\n         });\n     }\n \n@@ -266,7 +261,7 @@ fn main() {\n     for i in 0..3 {\n         let data = data.clone();\n         thread::spawn(move || {\n-            data[i] += 1;\n+            data[0] += i;\n         });\n     }\n \n@@ -281,7 +276,7 @@ And... still gives us an error.\n \n ```text\n <anon>:11:24 error: cannot borrow immutable borrowed content as mutable\n-<anon>:11                    data[i] += 1;\n+<anon>:11                    data[0] += i;\n                              ^~~~\n ```\n \n@@ -317,7 +312,7 @@ fn main() {\n         let data = data.clone();\n         thread::spawn(move || {\n             let mut data = data.lock().unwrap();\n-            data[i] += 1;\n+            data[0] += i;\n         });\n     }\n \n@@ -360,7 +355,7 @@ Let's examine the body of the thread more closely:\n #         let data = data.clone();\n thread::spawn(move || {\n     let mut data = data.lock().unwrap();\n-    data[i] += 1;\n+    data[0] += i;\n });\n #     }\n #     thread::sleep(Duration::from_millis(50));"}]}