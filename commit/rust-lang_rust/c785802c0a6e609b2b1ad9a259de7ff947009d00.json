{"sha": "c785802c0a6e609b2b1ad9a259de7ff947009d00", "node_id": "MDY6Q29tbWl0NzI0NzEyOmM3ODU4MDJjMGE2ZTYwOWIyYjFhZDlhMjU5ZGU3ZmY5NDcwMDlkMDA=", "commit": {"author": {"name": "Scott Olson", "email": "scott@solson.me", "date": "2016-01-05T23:26:22Z"}, "committer": {"name": "Scott Olson", "email": "scott@solson.me", "date": "2016-01-05T23:26:22Z"}, "message": "Boring whitespace cleanup.", "tree": {"sha": "59b1e69feace248190072d49e89b0cd9b42a2fbd", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/59b1e69feace248190072d49e89b0cd9b42a2fbd"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c785802c0a6e609b2b1ad9a259de7ff947009d00", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c785802c0a6e609b2b1ad9a259de7ff947009d00", "html_url": "https://github.com/rust-lang/rust/commit/c785802c0a6e609b2b1ad9a259de7ff947009d00", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c785802c0a6e609b2b1ad9a259de7ff947009d00/comments", "author": {"login": "solson", "id": 26806, "node_id": "MDQ6VXNlcjI2ODA2", "avatar_url": "https://avatars.githubusercontent.com/u/26806?v=4", "gravatar_id": "", "url": "https://api.github.com/users/solson", "html_url": "https://github.com/solson", "followers_url": "https://api.github.com/users/solson/followers", "following_url": "https://api.github.com/users/solson/following{/other_user}", "gists_url": "https://api.github.com/users/solson/gists{/gist_id}", "starred_url": "https://api.github.com/users/solson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/solson/subscriptions", "organizations_url": "https://api.github.com/users/solson/orgs", "repos_url": "https://api.github.com/users/solson/repos", "events_url": "https://api.github.com/users/solson/events{/privacy}", "received_events_url": "https://api.github.com/users/solson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "solson", "id": 26806, "node_id": "MDQ6VXNlcjI2ODA2", "avatar_url": "https://avatars.githubusercontent.com/u/26806?v=4", "gravatar_id": "", "url": "https://api.github.com/users/solson", "html_url": "https://github.com/solson", "followers_url": "https://api.github.com/users/solson/followers", "following_url": "https://api.github.com/users/solson/following{/other_user}", "gists_url": "https://api.github.com/users/solson/gists{/gist_id}", "starred_url": "https://api.github.com/users/solson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/solson/subscriptions", "organizations_url": "https://api.github.com/users/solson/orgs", "repos_url": "https://api.github.com/users/solson/repos", "events_url": "https://api.github.com/users/solson/events{/privacy}", "received_events_url": "https://api.github.com/users/solson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "803c3e2ee8be0516d68131d4c8bae31cfce67891", "url": "https://api.github.com/repos/rust-lang/rust/commits/803c3e2ee8be0516d68131d4c8bae31cfce67891", "html_url": "https://github.com/rust-lang/rust/commit/803c3e2ee8be0516d68131d4c8bae31cfce67891"}], "stats": {"total": 12, "additions": 5, "deletions": 7}, "files": [{"sha": "6d126f8306f32b45a5f3bcfdb0a03149b0617d45", "filename": "src/librustc/mir/repr.rs", "status": "modified", "additions": 5, "deletions": 7, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/c785802c0a6e609b2b1ad9a259de7ff947009d00/src%2Flibrustc%2Fmir%2Frepr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c785802c0a6e609b2b1ad9a259de7ff947009d00/src%2Flibrustc%2Fmir%2Frepr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmir%2Frepr.rs?ref=c785802c0a6e609b2b1ad9a259de7ff947009d00", "patch": "@@ -496,13 +496,11 @@ pub enum ProjectionElem<'tcx, V> {\n \n /// Alias for projections as they appear in lvalues, where the base is an lvalue\n /// and the index is an operand.\n-pub type LvalueProjection<'tcx> =\n-    Projection<'tcx,Lvalue<'tcx>,Operand<'tcx>>;\n+pub type LvalueProjection<'tcx> = Projection<'tcx, Lvalue<'tcx>, Operand<'tcx>>;\n \n /// Alias for projections as they appear in lvalues, where the base is an lvalue\n /// and the index is an operand.\n-pub type LvalueElem<'tcx> =\n-    ProjectionElem<'tcx,Operand<'tcx>>;\n+pub type LvalueElem<'tcx> = ProjectionElem<'tcx, Operand<'tcx>>;\n \n /// Index into the list of fields found in a `VariantDef`\n #[derive(Copy, Clone, Debug, PartialEq, Eq, Hash, RustcEncodable, RustcDecodable)]\n@@ -546,11 +544,11 @@ impl<'tcx> Debug for Lvalue<'tcx> {\n \n         match *self {\n             Var(id) =>\n-                write!(fmt,\"var{:?}\", id),\n+                write!(fmt, \"var{:?}\", id),\n             Arg(id) =>\n-                write!(fmt,\"arg{:?}\", id),\n+                write!(fmt, \"arg{:?}\", id),\n             Temp(id) =>\n-                write!(fmt,\"tmp{:?}\", id),\n+                write!(fmt, \"tmp{:?}\", id),\n             Static(def_id) =>\n                 write!(fmt, \"{}\", ty::tls::with(|tcx| tcx.item_path_str(def_id))),\n             ReturnPointer =>"}]}