{"sha": "f71c31c0e866f87e7aaafc315b042c077ff302b5", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY3MWMzMWMwZTg2NmY4N2U3YWFhZmMzMTViMDQyYzA3N2ZmMzAyYjU=", "commit": {"author": {"name": "Oliver 'ker' Schneider", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2016-11-13T20:30:03Z"}, "committer": {"name": "Oliver 'ker' Schneider", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2016-11-13T20:30:03Z"}, "message": "cannot index into non-fat-pointers", "tree": {"sha": "3b12c9716917d0c3b0652dbeb608308093aca7ce", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3b12c9716917d0c3b0652dbeb608308093aca7ce"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f71c31c0e866f87e7aaafc315b042c077ff302b5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f71c31c0e866f87e7aaafc315b042c077ff302b5", "html_url": "https://github.com/rust-lang/rust/commit/f71c31c0e866f87e7aaafc315b042c077ff302b5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f71c31c0e866f87e7aaafc315b042c077ff302b5/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "75f56eb144be4c87893c83fa5ad3b0ce4b84e737", "url": "https://api.github.com/repos/rust-lang/rust/commits/75f56eb144be4c87893c83fa5ad3b0ce4b84e737", "html_url": "https://github.com/rust-lang/rust/commit/75f56eb144be4c87893c83fa5ad3b0ce4b84e737"}], "stats": {"total": 16, "additions": 6, "deletions": 10}, "files": [{"sha": "0e96656a219645c70e85b4d28222890e1db268c1", "filename": "src/interpreter/mod.rs", "status": "modified", "additions": 6, "deletions": 10, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/f71c31c0e866f87e7aaafc315b042c077ff302b5/src%2Finterpreter%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f71c31c0e866f87e7aaafc315b042c077ff302b5/src%2Finterpreter%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Finterpreter%2Fmod.rs?ref=f71c31c0e866f87e7aaafc315b042c077ff302b5", "patch": "@@ -734,16 +734,12 @@ impl<'a, 'tcx> EvalContext<'a, 'tcx> {\n             ty::TyRef(_, ty::TypeAndMut { ty, .. }) |\n             ty::TyRawPtr(ty::TypeAndMut { ty, .. }) |\n             ty::TyBox(ty) => {\n-                if self.type_is_sized(ty) {\n-                    assert_eq!(field_index, 0);\n-                    Ok(self.tcx.mk_imm_ptr(self.tcx.types.never))\n-                } else {\n-                    match (field_index, &ty.sty) {\n-                        (1, &ty::TySlice(_)) => Ok(self.tcx.types.usize),\n-                        (1, &ty::TyTrait(_)) |\n-                        (0, _) => Ok(self.tcx.mk_imm_ptr(self.tcx.types.never)),\n-                        _ => bug!(\"invalid fat pointee type\"),\n-                    }\n+                assert!(!self.type_is_sized(ty));\n+                match (field_index, &self.tcx.struct_tail(ty).sty) {\n+                    (1, &ty::TySlice(_)) => Ok(self.tcx.types.usize),\n+                    (1, &ty::TyTrait(_)) |\n+                    (0, _) => Ok(self.tcx.mk_imm_ptr(self.tcx.types.u8)),\n+                    _ => bug!(\"invalid fat pointee type\"),\n                 }\n             }\n             _ => Err(EvalError::Unimplemented(format!(\"can't handle type: {:?}, {:?}\", ty, ty.sty))),"}]}