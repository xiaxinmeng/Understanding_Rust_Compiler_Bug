{"sha": "7d1e36a31582f45b532823ff37bca5cf2019792d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjdkMWUzNmEzMTU4MmY0NWI1MzI4MjNmZjM3YmNhNWNmMjAxOTc5MmQ=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-02-27T00:24:37Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-02-27T00:24:37Z"}, "message": "rt: Remove ptr_vec. Unused", "tree": {"sha": "b3d9d94c8e9cbde555bb3edd95d14df1e7418f2e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b3d9d94c8e9cbde555bb3edd95d14df1e7418f2e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7d1e36a31582f45b532823ff37bca5cf2019792d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7d1e36a31582f45b532823ff37bca5cf2019792d", "html_url": "https://github.com/rust-lang/rust/commit/7d1e36a31582f45b532823ff37bca5cf2019792d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7d1e36a31582f45b532823ff37bca5cf2019792d/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4d03e4b711c8aadb829ce8b26237c917ee04bbb7", "url": "https://api.github.com/repos/rust-lang/rust/commits/4d03e4b711c8aadb829ce8b26237c917ee04bbb7", "html_url": "https://github.com/rust-lang/rust/commit/4d03e4b711c8aadb829ce8b26237c917ee04bbb7"}], "stats": {"total": 119, "additions": 0, "deletions": 119}, "files": [{"sha": "85b12b3e546ad8f37503a99ddec9f76b599d7efa", "filename": "src/rt/rust_internal.h", "status": "modified", "additions": 0, "deletions": 28, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/7d1e36a31582f45b532823ff37bca5cf2019792d/src%2Frt%2Frust_internal.h", "raw_url": "https://github.com/rust-lang/rust/raw/7d1e36a31582f45b532823ff37bca5cf2019792d/src%2Frt%2Frust_internal.h", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frust_internal.h?ref=7d1e36a31582f45b532823ff37bca5cf2019792d", "patch": "@@ -152,34 +152,6 @@ template <typename T> struct region_owned {\n \n struct rust_cond { };\n \n-// Helper class used regularly elsewhere.\n-\n-template <typename T> class ptr_vec : public task_owned<ptr_vec<T> > {\n-    static const size_t INIT_SIZE = 8;\n-    rust_task *task;\n-    size_t alloc;\n-    size_t fill;\n-    T **data;\n-public:\n-    ptr_vec(rust_task *task);\n-    ~ptr_vec();\n-\n-    size_t length() {\n-        return fill;\n-    }\n-\n-    bool is_empty() {\n-        return fill == 0;\n-    }\n-\n-    T *& operator[](size_t offset);\n-    void push(T *p);\n-    T *pop();\n-    T *peek();\n-    void trim(size_t fill);\n-    void swap_delete(T* p);\n-};\n-\n #include \"memory_region.h\"\n #include \"rust_srv.h\"\n #include \"rust_log.h\""}, {"sha": "834d50438418542a81bf742127957d0efcc30cd0", "filename": "src/rt/rust_util.h", "status": "modified", "additions": 0, "deletions": 91, "changes": 91, "blob_url": "https://github.com/rust-lang/rust/blob/7d1e36a31582f45b532823ff37bca5cf2019792d/src%2Frt%2Frust_util.h", "raw_url": "https://github.com/rust-lang/rust/raw/7d1e36a31582f45b532823ff37bca5cf2019792d/src%2Frt%2Frust_util.h", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frust_util.h?ref=7d1e36a31582f45b532823ff37bca5cf2019792d", "patch": "@@ -4,97 +4,6 @@\n #include \"rust_task.h\"\n #include <limits.h>\n \n-// Utility type: pointer-vector.\n-\n-template <typename T>\n-ptr_vec<T>::ptr_vec(rust_task *task) :\n-    task(task),\n-    alloc(INIT_SIZE),\n-    fill(0),\n-    data(new (task, \"ptr_vec<T>\") T*[alloc])\n-{\n-    I(task->thread, data);\n-    DLOG(task->thread, mem, \"new ptr_vec(data=0x%\" PRIxPTR \") -> 0x%\" PRIxPTR,\n-         (uintptr_t)data, (uintptr_t)this);\n-}\n-\n-template <typename T>\n-ptr_vec<T>::~ptr_vec()\n-{\n-    I(task->thread, data);\n-    DLOG(task->thread, mem, \"~ptr_vec 0x%\" PRIxPTR \", data=0x%\" PRIxPTR,\n-         (uintptr_t)this, (uintptr_t)data);\n-    I(task->thread, fill == 0);\n-    task->free(data);\n-}\n-\n-template <typename T> T *&\n-ptr_vec<T>::operator[](size_t offset) {\n-    I(task->thread, data[offset]->idx == offset);\n-    return data[offset];\n-}\n-\n-template <typename T>\n-void\n-ptr_vec<T>::push(T *p)\n-{\n-    I(task->thread, data);\n-    I(task->thread, fill <= alloc);\n-    if (fill == alloc) {\n-        alloc *= 2;\n-        data = (T **)task->realloc(data, alloc * sizeof(T*));\n-        I(task->thread, data);\n-    }\n-    I(task->thread, fill < alloc);\n-    p->idx = fill;\n-    data[fill++] = p;\n-}\n-\n-template <typename T>\n-T *\n-ptr_vec<T>::pop()\n-{\n-    return data[--fill];\n-}\n-\n-template <typename T>\n-T *\n-ptr_vec<T>::peek()\n-{\n-    return data[fill - 1];\n-}\n-\n-template <typename T>\n-void\n-ptr_vec<T>::trim(size_t sz)\n-{\n-    I(task->thread, data);\n-    if (sz <= (alloc / 4) &&\n-        (alloc / 2) >= INIT_SIZE) {\n-        alloc /= 2;\n-        I(task->thread, alloc >= fill);\n-        data = (T **)task->realloc(data, alloc * sizeof(T*));\n-        I(task->thread, data);\n-    }\n-}\n-\n-template <typename T>\n-void\n-ptr_vec<T>::swap_delete(T *item)\n-{\n-    /* Swap the endpoint into i and decr fill. */\n-    I(task->thread, data);\n-    I(task->thread, fill > 0);\n-    I(task->thread, item->idx < fill);\n-    fill--;\n-    if (fill > 0) {\n-        T *subst = data[fill];\n-        size_t idx = item->idx;\n-        data[idx] = subst;\n-        subst->idx = idx;\n-    }\n-}\n-\n // Inline fn used regularly elsewhere.\n \n static inline size_t"}]}