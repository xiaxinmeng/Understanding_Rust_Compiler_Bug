{"sha": "cd8a35299572c7d246cd9ab13d0d5c962aba053c", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNkOGEzNTI5OTU3MmM3ZDI0NmNkOWFiMTNkMGQ1Yzk2MmFiYTA1M2M=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2017-12-04T21:46:15Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2017-12-04T21:46:15Z"}, "message": "Auto merge of #46427 - michaelwoerister:transitive-svh, r=nikomatsakis\n\nincr.comp.: Incorporate the stable commandline arg hash and SVHs of upstream crates into the SVH.\n\nSo far the SVH detected changes in the HIR, which is already very sensitive, but in order for `eval_always` queries to also be sensitive to changes in upstream crates, the SVH also needs to capture changes there.\n\nThis PR fixes [rust-icci/crossbeam](https://travis-ci.org/rust-icci/crossbeam/builds/308936448), but I have not yet been able to come up with a minimal regression test.\n\nr? @nikomatsakis", "tree": {"sha": "e02d7b115dc7f18461af51e246b7749b3c21f1c0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e02d7b115dc7f18461af51e246b7749b3c21f1c0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/cd8a35299572c7d246cd9ab13d0d5c962aba053c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/cd8a35299572c7d246cd9ab13d0d5c962aba053c", "html_url": "https://github.com/rust-lang/rust/commit/cd8a35299572c7d246cd9ab13d0d5c962aba053c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/cd8a35299572c7d246cd9ab13d0d5c962aba053c/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8503b3ff822c1ed01c89773d30e4e10b886d77a5", "url": "https://api.github.com/repos/rust-lang/rust/commits/8503b3ff822c1ed01c89773d30e4e10b886d77a5", "html_url": "https://github.com/rust-lang/rust/commit/8503b3ff822c1ed01c89773d30e4e10b886d77a5"}, {"sha": "8129c539582942e67bb581b2e88d40242ba6fc0f", "url": "https://api.github.com/repos/rust-lang/rust/commits/8129c539582942e67bb581b2e88d40242ba6fc0f", "html_url": "https://github.com/rust-lang/rust/commit/8129c539582942e67bb581b2e88d40242ba6fc0f"}], "stats": {"total": 26, "additions": 23, "deletions": 3}, "files": [{"sha": "02a1e33eeb918413ae62a6ea7af85289edafd9cb", "filename": "src/librustc/hir/map/collector.rs", "status": "modified", "additions": 19, "deletions": 2, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/cd8a35299572c7d246cd9ab13d0d5c962aba053c/src%2Flibrustc%2Fhir%2Fmap%2Fcollector.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cd8a35299572c7d246cd9ab13d0d5c962aba053c/src%2Flibrustc%2Fhir%2Fmap%2Fcollector.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fhir%2Fmap%2Fcollector.rs?ref=cd8a35299572c7d246cd9ab13d0d5c962aba053c", "patch": "@@ -12,6 +12,7 @@ use super::*;\n \n use dep_graph::{DepGraph, DepKind, DepNodeIndex};\n use hir::intravisit::{Visitor, NestedVisitorMap};\n+use middle::cstore::CrateStore;\n use session::CrateDisambiguator;\n use std::iter::repeat;\n use syntax::ast::{NodeId, CRATE_NODE_ID};\n@@ -119,7 +120,9 @@ impl<'a, 'hir> NodeCollector<'a, 'hir> {\n     }\n \n     pub(super) fn finalize_and_compute_crate_hash(self,\n-                                                  crate_disambiguator: CrateDisambiguator)\n+                                                  crate_disambiguator: CrateDisambiguator,\n+                                                  cstore: &CrateStore,\n+                                                  commandline_args_hash: u64)\n                                                   -> Vec<MapEntry<'hir>> {\n         let mut node_hashes: Vec<_> = self\n             .hir_body_nodes\n@@ -132,9 +135,23 @@ impl<'a, 'hir> NodeCollector<'a, 'hir> {\n \n         node_hashes.sort_unstable_by(|&(ref d1, _), &(ref d2, _)| d1.cmp(d2));\n \n+        let mut upstream_crates: Vec<_> = cstore.crates_untracked().iter().map(|&cnum| {\n+            let name = cstore.crate_name_untracked(cnum).as_str();\n+            let disambiguator = cstore.crate_disambiguator_untracked(cnum)\n+                                      .to_fingerprint();\n+            let hash = cstore.crate_hash_untracked(cnum);\n+            (name, disambiguator, hash)\n+        }).collect();\n+\n+        upstream_crates.sort_unstable_by(|&(name1, dis1, _), &(name2, dis2, _)| {\n+            (name1, dis1).cmp(&(name2, dis2))\n+        });\n+\n         self.dep_graph.with_task(DepNode::new_no_params(DepKind::Krate),\n                                  &self.hcx,\n-                                 (node_hashes, crate_disambiguator.to_fingerprint()),\n+                                 ((node_hashes, upstream_crates),\n+                                  (commandline_args_hash,\n+                                   crate_disambiguator.to_fingerprint())),\n                                  identity_fn);\n         self.map\n     }"}, {"sha": "28527b6f0bc64aea4a8ba8d3dffa538382114be4", "filename": "src/librustc/hir/map/mod.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/cd8a35299572c7d246cd9ab13d0d5c962aba053c/src%2Flibrustc%2Fhir%2Fmap%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cd8a35299572c7d246cd9ab13d0d5c962aba053c/src%2Flibrustc%2Fhir%2Fmap%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fhir%2Fmap%2Fmod.rs?ref=cd8a35299572c7d246cd9ab13d0d5c962aba053c", "patch": "@@ -1059,7 +1059,10 @@ pub fn map_crate<'hir>(sess: &::session::Session,\n         intravisit::walk_crate(&mut collector, &forest.krate);\n \n         let crate_disambiguator = sess.local_crate_disambiguator();\n-        collector.finalize_and_compute_crate_hash(crate_disambiguator)\n+        let cmdline_args = sess.opts.dep_tracking_hash();\n+        collector.finalize_and_compute_crate_hash(crate_disambiguator,\n+                                                  cstore,\n+                                                  cmdline_args)\n     };\n \n     if log_enabled!(::log::LogLevel::Debug) {"}]}