{"sha": "04db13eb564f6e3264a0d376ef95365b1de44797", "node_id": "MDY6Q29tbWl0NzI0NzEyOjA0ZGIxM2ViNTY0ZjZlMzI2NGEwZDM3NmVmOTUzNjViMWRlNDQ3OTc=", "commit": {"author": {"name": "flip1995", "email": "hello@philkrones.com", "date": "2020-05-12T14:50:00Z"}, "committer": {"name": "Eduardo Broto", "email": "ebroto@tutanota.com", "date": "2020-05-26T19:41:51Z"}, "message": "Fix fallout in similar_names", "tree": {"sha": "80bce8256853ad001488d1c925a9ae24be9dd444", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/80bce8256853ad001488d1c925a9ae24be9dd444"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/04db13eb564f6e3264a0d376ef95365b1de44797", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/04db13eb564f6e3264a0d376ef95365b1de44797", "html_url": "https://github.com/rust-lang/rust/commit/04db13eb564f6e3264a0d376ef95365b1de44797", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/04db13eb564f6e3264a0d376ef95365b1de44797/comments", "author": {"login": "flip1995", "id": 9744647, "node_id": "MDQ6VXNlcjk3NDQ2NDc=", "avatar_url": "https://avatars.githubusercontent.com/u/9744647?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flip1995", "html_url": "https://github.com/flip1995", "followers_url": "https://api.github.com/users/flip1995/followers", "following_url": "https://api.github.com/users/flip1995/following{/other_user}", "gists_url": "https://api.github.com/users/flip1995/gists{/gist_id}", "starred_url": "https://api.github.com/users/flip1995/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flip1995/subscriptions", "organizations_url": "https://api.github.com/users/flip1995/orgs", "repos_url": "https://api.github.com/users/flip1995/repos", "events_url": "https://api.github.com/users/flip1995/events{/privacy}", "received_events_url": "https://api.github.com/users/flip1995/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ebroto", "id": 816908, "node_id": "MDQ6VXNlcjgxNjkwOA==", "avatar_url": "https://avatars.githubusercontent.com/u/816908?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ebroto", "html_url": "https://github.com/ebroto", "followers_url": "https://api.github.com/users/ebroto/followers", "following_url": "https://api.github.com/users/ebroto/following{/other_user}", "gists_url": "https://api.github.com/users/ebroto/gists{/gist_id}", "starred_url": "https://api.github.com/users/ebroto/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ebroto/subscriptions", "organizations_url": "https://api.github.com/users/ebroto/orgs", "repos_url": "https://api.github.com/users/ebroto/repos", "events_url": "https://api.github.com/users/ebroto/events{/privacy}", "received_events_url": "https://api.github.com/users/ebroto/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8e22d15055231fc0df4a07d57cd883fd89d8131b", "url": "https://api.github.com/repos/rust-lang/rust/commits/8e22d15055231fc0df4a07d57cd883fd89d8131b", "html_url": "https://github.com/rust-lang/rust/commit/8e22d15055231fc0df4a07d57cd883fd89d8131b"}], "stats": {"total": 9, "additions": 9, "deletions": 0}, "files": [{"sha": "5328773a73899df96247467f3d86e96655ad6122", "filename": "clippy_lints/src/non_expressive_names.rs", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/04db13eb564f6e3264a0d376ef95365b1de44797/clippy_lints%2Fsrc%2Fnon_expressive_names.rs", "raw_url": "https://github.com/rust-lang/rust/raw/04db13eb564f6e3264a0d376ef95365b1de44797/clippy_lints%2Fsrc%2Fnon_expressive_names.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fnon_expressive_names.rs?ref=04db13eb564f6e3264a0d376ef95365b1de44797", "patch": "@@ -5,6 +5,7 @@ use rustc_ast::ast::{\n use rustc_ast::attr;\n use rustc_ast::visit::{walk_block, walk_expr, walk_pat, Visitor};\n use rustc_lint::{EarlyContext, EarlyLintPass};\n+use rustc_middle::lint::in_external_macro;\n use rustc_session::{declare_tool_lint, impl_lint_pass};\n use rustc_span::source_map::Span;\n use rustc_span::symbol::{Ident, SymbolStr};\n@@ -354,12 +355,20 @@ impl<'a, 'tcx> Visitor<'tcx> for SimilarNamesLocalVisitor<'a, 'tcx> {\n \n impl EarlyLintPass for NonExpressiveNames {\n     fn check_item(&mut self, cx: &EarlyContext<'_>, item: &Item) {\n+        if in_external_macro(cx.sess, item.span) {\n+            return;\n+        }\n+\n         if let ItemKind::Fn(_, ref sig, _, Some(ref blk)) = item.kind {\n             do_check(self, cx, &item.attrs, &sig.decl, blk);\n         }\n     }\n \n     fn check_impl_item(&mut self, cx: &EarlyContext<'_>, item: &AssocItem) {\n+        if in_external_macro(cx.sess, item.span) {\n+            return;\n+        }\n+\n         if let AssocItemKind::Fn(_, ref sig, _, Some(ref blk)) = item.kind {\n             do_check(self, cx, &item.attrs, &sig.decl, blk);\n         }"}]}