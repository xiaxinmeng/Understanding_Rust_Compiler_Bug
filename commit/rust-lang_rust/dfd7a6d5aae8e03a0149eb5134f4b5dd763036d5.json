{"sha": "dfd7a6d5aae8e03a0149eb5134f4b5dd763036d5", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRmZDdhNmQ1YWFlOGUwM2EwMTQ5ZWI1MTM0ZjRiNWRkNzYzMDM2ZDU=", "commit": {"author": {"name": "hyd-dev", "email": "yd-huang@outlook.com", "date": "2021-06-15T08:11:49Z"}, "committer": {"name": "hyd-dev", "email": "yd-huang@outlook.com", "date": "2021-06-15T08:12:47Z"}, "message": "Rustup", "tree": {"sha": "fb5bbe9ec98bf531cd838f0eb0301baf88f1d998", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fb5bbe9ec98bf531cd838f0eb0301baf88f1d998"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/dfd7a6d5aae8e03a0149eb5134f4b5dd763036d5", "comment_count": 0, "verification": {"verified": false, "reason": "no_user", "signature": "-----BEGIN PGP SIGNATURE-----\n\niIsEABYIADMWIQRJ2jPMDdiQ+U4U42Z0+n/VuNoUuAUCYMhg/xUceWQtaHVhbmdA\nb3V0bG9vay5jb20ACgkQdPp/1bjaFLhzQQEAlelj6pSv9uKsjOkKDQzpmSF50kge\nroRv0CSMd/S5pXkBAKdSlaOoHlUwLYlayiN4t+Ix08ijs4dJtQBNiERlwyEP\n=cijE\n-----END PGP SIGNATURE-----", "payload": "tree fb5bbe9ec98bf531cd838f0eb0301baf88f1d998\nparent d39f0c64b8b369188a73a655716ab56683a6537b\nauthor hyd-dev <yd-huang@outlook.com> 1623744709 +0800\ncommitter hyd-dev <yd-huang@outlook.com> 1623744767 +0800\n\nRustup\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/dfd7a6d5aae8e03a0149eb5134f4b5dd763036d5", "html_url": "https://github.com/rust-lang/rust/commit/dfd7a6d5aae8e03a0149eb5134f4b5dd763036d5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/dfd7a6d5aae8e03a0149eb5134f4b5dd763036d5/comments", "author": null, "committer": null, "parents": [{"sha": "d39f0c64b8b369188a73a655716ab56683a6537b", "url": "https://api.github.com/repos/rust-lang/rust/commits/d39f0c64b8b369188a73a655716ab56683a6537b", "html_url": "https://github.com/rust-lang/rust/commit/d39f0c64b8b369188a73a655716ab56683a6537b"}], "stats": {"total": 10, "additions": 5, "deletions": 5}, "files": [{"sha": "18cfda63a53ee6c99d272393eec4c96f93a1ea0a", "filename": "rust-version", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/dfd7a6d5aae8e03a0149eb5134f4b5dd763036d5/rust-version", "raw_url": "https://github.com/rust-lang/rust/raw/dfd7a6d5aae8e03a0149eb5134f4b5dd763036d5/rust-version", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/rust-version?ref=dfd7a6d5aae8e03a0149eb5134f4b5dd763036d5", "patch": "@@ -1 +1 @@\n-a50d72158e08e02cfc051b863017bdbd2c45b637\n+d74b36ea2f814b720c39d7b60aecaefe512a056b"}, {"sha": "d4ee3cc8a34a8a535600b1b76107a1a1ddcb2786", "filename": "tests/compile-fail/validity/invalid_enum_tag.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/dfd7a6d5aae8e03a0149eb5134f4b5dd763036d5/tests%2Fcompile-fail%2Fvalidity%2Finvalid_enum_tag.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dfd7a6d5aae8e03a0149eb5134f4b5dd763036d5/tests%2Fcompile-fail%2Fvalidity%2Finvalid_enum_tag.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompile-fail%2Fvalidity%2Finvalid_enum_tag.rs?ref=dfd7a6d5aae8e03a0149eb5134f4b5dd763036d5", "patch": "@@ -4,5 +4,5 @@ pub enum Foo {\n }\n \n fn main() {\n-    let _f = unsafe { std::mem::transmute::<i32, Foo>(42) }; //~ ERROR encountered 0x0000002a at .<enum-tag>, but expected a valid enum tag\n+    let _f = unsafe { std::mem::transmute::<i32, Foo>(42) }; //~ ERROR type validation failed at .<enum-tag>: encountered 0x0000002a, but expected a valid enum tag\n }"}, {"sha": "ccf97b416c6916f832e0582fc96fe8acdb0957e7", "filename": "tests/compile-fail/validity/invalid_enum_tag_256variants_uninit.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/dfd7a6d5aae8e03a0149eb5134f4b5dd763036d5/tests%2Fcompile-fail%2Fvalidity%2Finvalid_enum_tag_256variants_uninit.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dfd7a6d5aae8e03a0149eb5134f4b5dd763036d5/tests%2Fcompile-fail%2Fvalidity%2Finvalid_enum_tag_256variants_uninit.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompile-fail%2Fvalidity%2Finvalid_enum_tag_256variants_uninit.rs?ref=dfd7a6d5aae8e03a0149eb5134f4b5dd763036d5", "patch": "@@ -266,5 +266,5 @@ union MyUninit {\n }\n \n fn main() {\n-    let _a = unsafe { MyUninit { init: () }.uninit }; //~ ERROR encountered uninitialized bytes at .<enum-tag>, but expected a valid enum tag\n+    let _a = unsafe { MyUninit { init: () }.uninit }; //~ ERROR type validation failed at .<enum-tag>: encountered uninitialized bytes, but expected a valid enum tag\n }"}, {"sha": "cd354eac4aef9f1e8ed362567c70d88f60b3be2f", "filename": "tests/compile-fail/validity/transmute_through_ptr.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/dfd7a6d5aae8e03a0149eb5134f4b5dd763036d5/tests%2Fcompile-fail%2Fvalidity%2Ftransmute_through_ptr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dfd7a6d5aae8e03a0149eb5134f4b5dd763036d5/tests%2Fcompile-fail%2Fvalidity%2Ftransmute_through_ptr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompile-fail%2Fvalidity%2Ftransmute_through_ptr.rs?ref=dfd7a6d5aae8e03a0149eb5134f4b5dd763036d5", "patch": "@@ -11,6 +11,6 @@ fn main() {\n     let mut x = Bool::True;\n     evil(&mut x);\n     let y = x; // reading this ought to be enough to trigger validation\n-    //~^ ERROR encountered 0x0000002c at .<enum-tag>, but expected a valid enum tag\n+    //~^ ERROR type validation failed at .<enum-tag>: encountered 0x0000002c, but expected a valid enum tag\n     println!(\"{:?}\", y); // make sure it is used (and not optimized away)\n }"}, {"sha": "87624e520db100d85c894a89aed84f0c47a9c114", "filename": "tests/run-pass/stacked-borrows/interior_mutability.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/dfd7a6d5aae8e03a0149eb5134f4b5dd763036d5/tests%2Frun-pass%2Fstacked-borrows%2Finterior_mutability.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dfd7a6d5aae8e03a0149eb5134f4b5dd763036d5/tests%2Frun-pass%2Fstacked-borrows%2Finterior_mutability.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frun-pass%2Fstacked-borrows%2Finterior_mutability.rs?ref=dfd7a6d5aae8e03a0149eb5134f4b5dd763036d5", "patch": "@@ -1,4 +1,4 @@\n-#![feature(maybe_uninit_extra, maybe_uninit_ref)]\n+#![feature(maybe_uninit_extra)]\n use std::mem::MaybeUninit;\n use std::cell::{Cell, RefCell, UnsafeCell};\n "}]}