{"sha": "2f3440d213af7d46e11d143fc3811b0b0d770abe", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJmMzQ0MGQyMTNhZjdkNDZlMTFkMTQzZmMzODExYjBiMGQ3NzBhYmU=", "commit": {"author": {"name": "David Renshaw", "email": "david@sandstorm.io", "date": "2017-03-13T23:28:29Z"}, "committer": {"name": "David Renshaw", "email": "david@sandstorm.io", "date": "2017-03-13T23:46:44Z"}, "message": "implement write_bytes intrinsic", "tree": {"sha": "1629c303c4c348d2c88656e3551fea637fe9643f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1629c303c4c348d2c88656e3551fea637fe9643f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2f3440d213af7d46e11d143fc3811b0b0d770abe", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2f3440d213af7d46e11d143fc3811b0b0d770abe", "html_url": "https://github.com/rust-lang/rust/commit/2f3440d213af7d46e11d143fc3811b0b0d770abe", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2f3440d213af7d46e11d143fc3811b0b0d770abe/comments", "author": null, "committer": null, "parents": [{"sha": "feeb13c4b95a8291625a375df6d4d2122606e0aa", "url": "https://api.github.com/repos/rust-lang/rust/commits/feeb13c4b95a8291625a375df6d4d2122606e0aa", "html_url": "https://github.com/rust-lang/rust/commit/feeb13c4b95a8291625a375df6d4d2122606e0aa"}], "stats": {"total": 19, "additions": 19, "deletions": 0}, "files": [{"sha": "9c7489d145c3508c8c05640d9b5fd3efcb786e3c", "filename": "src/terminator/intrinsic.rs", "status": "modified", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/2f3440d213af7d46e11d143fc3811b0b0d770abe/src%2Fterminator%2Fintrinsic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2f3440d213af7d46e11d143fc3811b0b0d770abe/src%2Fterminator%2Fintrinsic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fterminator%2Fintrinsic.rs?ref=2f3440d213af7d46e11d143fc3811b0b0d770abe", "patch": "@@ -402,6 +402,25 @@ impl<'a, 'tcx> EvalContext<'a, 'tcx> {\n                 }\n             }\n \n+            \"write_bytes\" => {\n+                let u8 = self.tcx.types.u8;\n+                let ty = substs.type_at(0);\n+                let size = self.type_size(ty)?.expect(\"write_bytes() type must be sized\");\n+                let val_byte = self.value_to_primval(arg_vals[1], u8)?.to_u128()?;\n+                let mut pattern: u128 = 0;\n+                for ii in 0..size {\n+                    pattern |= val_byte << (8 * ii);\n+                }\n+                let val_full = Value::ByVal(PrimVal::from_u128(pattern));\n+                let mut ptr = arg_vals[0].read_ptr(&self.memory)?;\n+\n+                let count = self.value_to_primval(arg_vals[2], usize)?.to_u64()?;\n+                for _ in 0..count {\n+                    self.write_value_to_ptr(val_full, ptr, ty)?;\n+                    ptr = ptr.offset(size);\n+                }\n+            }\n+\n             name => return Err(EvalError::Unimplemented(format!(\"unimplemented intrinsic: {}\", name))),\n         }\n "}]}