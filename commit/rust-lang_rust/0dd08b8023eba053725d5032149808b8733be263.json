{"sha": "0dd08b8023eba053725d5032149808b8733be263", "node_id": "MDY6Q29tbWl0NzI0NzEyOjBkZDA4YjgwMjNlYmEwNTM3MjVkNTAzMjE0OTgwOGI4NzMzYmUyNjM=", "commit": {"author": {"name": "Ekaterina Babshukova", "email": "ekaterina.babshukova@yandex.ru", "date": "2019-10-12T12:47:36Z"}, "committer": {"name": "Ekaterina Babshukova", "email": "ekaterina.babshukova@yandex.ru", "date": "2019-10-22T20:47:31Z"}, "message": "classify definition of a function right", "tree": {"sha": "47b294a490ab03782b654c5d2272bedd6263b858", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/47b294a490ab03782b654c5d2272bedd6263b858"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0dd08b8023eba053725d5032149808b8733be263", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0dd08b8023eba053725d5032149808b8733be263", "html_url": "https://github.com/rust-lang/rust/commit/0dd08b8023eba053725d5032149808b8733be263", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0dd08b8023eba053725d5032149808b8733be263/comments", "author": {"login": "viorina", "id": 6714973, "node_id": "MDQ6VXNlcjY3MTQ5NzM=", "avatar_url": "https://avatars.githubusercontent.com/u/6714973?v=4", "gravatar_id": "", "url": "https://api.github.com/users/viorina", "html_url": "https://github.com/viorina", "followers_url": "https://api.github.com/users/viorina/followers", "following_url": "https://api.github.com/users/viorina/following{/other_user}", "gists_url": "https://api.github.com/users/viorina/gists{/gist_id}", "starred_url": "https://api.github.com/users/viorina/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/viorina/subscriptions", "organizations_url": "https://api.github.com/users/viorina/orgs", "repos_url": "https://api.github.com/users/viorina/repos", "events_url": "https://api.github.com/users/viorina/events{/privacy}", "received_events_url": "https://api.github.com/users/viorina/received_events", "type": "User", "site_admin": false}, "committer": {"login": "viorina", "id": 6714973, "node_id": "MDQ6VXNlcjY3MTQ5NzM=", "avatar_url": "https://avatars.githubusercontent.com/u/6714973?v=4", "gravatar_id": "", "url": "https://api.github.com/users/viorina", "html_url": "https://github.com/viorina", "followers_url": "https://api.github.com/users/viorina/followers", "following_url": "https://api.github.com/users/viorina/following{/other_user}", "gists_url": "https://api.github.com/users/viorina/gists{/gist_id}", "starred_url": "https://api.github.com/users/viorina/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/viorina/subscriptions", "organizations_url": "https://api.github.com/users/viorina/orgs", "repos_url": "https://api.github.com/users/viorina/repos", "events_url": "https://api.github.com/users/viorina/events{/privacy}", "received_events_url": "https://api.github.com/users/viorina/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "79e6b3b0d17b9389ccdc422ae42beb38163c6610", "url": "https://api.github.com/repos/rust-lang/rust/commits/79e6b3b0d17b9389ccdc422ae42beb38163c6610", "html_url": "https://github.com/rust-lang/rust/commit/79e6b3b0d17b9389ccdc422ae42beb38163c6610"}], "stats": {"total": 3, "additions": 3, "deletions": 0}, "files": [{"sha": "583399cfe9b4e65c535659f9a2ec608c316604b9", "filename": "crates/ra_ide_api/src/name_kind.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/0dd08b8023eba053725d5032149808b8733be263/crates%2Fra_ide_api%2Fsrc%2Fname_kind.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0dd08b8023eba053725d5032149808b8733be263/crates%2Fra_ide_api%2Fsrc%2Fname_kind.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Fname_kind.rs?ref=0dd08b8023eba053725d5032149808b8733be263", "patch": "@@ -221,6 +221,9 @@ impl HasDefinition for AssocItem {\n     }\n \n     fn from_def(db: &RootDatabase, file_id: HirFileId, def: Self::Def) -> Option<Definition> {\n+        if def.syntax().parent().and_then(ast::ItemList::cast).is_none() {\n+            return None;\n+        }\n         let src = hir::Source { file_id, ast: def };\n         let item = AssocItem::from_source(db, src)?;\n         Some(item.definition(db))"}]}