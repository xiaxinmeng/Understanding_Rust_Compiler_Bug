{"sha": "5f861ee1ae9dffe29cdd177e0bf2a067ea9b8ca9", "node_id": "C_kwDOAAsO6NoAKDVmODYxZWUxYWU5ZGZmZTI5Y2RkMTc3ZTBiZjJhMDY3ZWE5YjhjYTk", "commit": {"author": {"name": "Jason Newcomb", "email": "jsnewcomb@pm.me", "date": "2021-11-17T15:39:53Z"}, "committer": {"name": "Jason Newcomb", "email": "jsnewcomb@pm.me", "date": "2021-11-17T15:39:53Z"}, "message": "Addition `manual_map` test for `unsafe` blocks", "tree": {"sha": "7835d68ff569aeb32e9ae4e303ecf0e92be12970", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7835d68ff569aeb32e9ae4e303ecf0e92be12970"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5f861ee1ae9dffe29cdd177e0bf2a067ea9b8ca9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5f861ee1ae9dffe29cdd177e0bf2a067ea9b8ca9", "html_url": "https://github.com/rust-lang/rust/commit/5f861ee1ae9dffe29cdd177e0bf2a067ea9b8ca9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5f861ee1ae9dffe29cdd177e0bf2a067ea9b8ca9/comments", "author": {"login": "Jarcho", "id": 7761774, "node_id": "MDQ6VXNlcjc3NjE3NzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/7761774?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Jarcho", "html_url": "https://github.com/Jarcho", "followers_url": "https://api.github.com/users/Jarcho/followers", "following_url": "https://api.github.com/users/Jarcho/following{/other_user}", "gists_url": "https://api.github.com/users/Jarcho/gists{/gist_id}", "starred_url": "https://api.github.com/users/Jarcho/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Jarcho/subscriptions", "organizations_url": "https://api.github.com/users/Jarcho/orgs", "repos_url": "https://api.github.com/users/Jarcho/repos", "events_url": "https://api.github.com/users/Jarcho/events{/privacy}", "received_events_url": "https://api.github.com/users/Jarcho/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Jarcho", "id": 7761774, "node_id": "MDQ6VXNlcjc3NjE3NzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/7761774?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Jarcho", "html_url": "https://github.com/Jarcho", "followers_url": "https://api.github.com/users/Jarcho/followers", "following_url": "https://api.github.com/users/Jarcho/following{/other_user}", "gists_url": "https://api.github.com/users/Jarcho/gists{/gist_id}", "starred_url": "https://api.github.com/users/Jarcho/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Jarcho/subscriptions", "organizations_url": "https://api.github.com/users/Jarcho/orgs", "repos_url": "https://api.github.com/users/Jarcho/repos", "events_url": "https://api.github.com/users/Jarcho/events{/privacy}", "received_events_url": "https://api.github.com/users/Jarcho/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8506f662942a689c5f217b1c82eff45a06fb9f37", "url": "https://api.github.com/repos/rust-lang/rust/commits/8506f662942a689c5f217b1c82eff45a06fb9f37", "html_url": "https://github.com/rust-lang/rust/commit/8506f662942a689c5f217b1c82eff45a06fb9f37"}], "stats": {"total": 23, "additions": 20, "deletions": 3}, "files": [{"sha": "ebf3f8cabd4706b3da545355708d039f0f693a4f", "filename": "tests/ui/manual_map_option_2.fixed", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5f861ee1ae9dffe29cdd177e0bf2a067ea9b8ca9/tests%2Fui%2Fmanual_map_option_2.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/5f861ee1ae9dffe29cdd177e0bf2a067ea9b8ca9/tests%2Fui%2Fmanual_map_option_2.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmanual_map_option_2.fixed?ref=5f861ee1ae9dffe29cdd177e0bf2a067ea9b8ca9", "patch": "@@ -48,11 +48,13 @@ fn main() {\n             if let Some(ref s) = s { (x.clone(), s) } else { panic!() }\n         });\n \n+    // Issue #7820\n     unsafe fn f(x: u32) -> u32 {\n         x\n     }\n     unsafe {\n         let _ = Some(0).map(|x| f(x));\n     }\n     let _ = Some(0).map(|x| unsafe { f(x) });\n+    let _ = Some(0).map(|x| unsafe { f(x) });\n }"}, {"sha": "1382d9af0aa085d5c77c4429aa0f459ba7fecb16", "filename": "tests/ui/manual_map_option_2.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/5f861ee1ae9dffe29cdd177e0bf2a067ea9b8ca9/tests%2Fui%2Fmanual_map_option_2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5f861ee1ae9dffe29cdd177e0bf2a067ea9b8ca9/tests%2Fui%2Fmanual_map_option_2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmanual_map_option_2.rs?ref=5f861ee1ae9dffe29cdd177e0bf2a067ea9b8ca9", "patch": "@@ -54,6 +54,7 @@ fn main() {\n         None => None,\n     };\n \n+    // Issue #7820\n     unsafe fn f(x: u32) -> u32 {\n         x\n     }\n@@ -67,4 +68,8 @@ fn main() {\n         Some(x) => unsafe { Some(f(x)) },\n         None => None,\n     };\n+    let _ = match Some(0) {\n+        Some(x) => Some(unsafe { f(x) }),\n+        None => None,\n+    };\n }"}, {"sha": "d35b6252fb8704fc377666eb5d0197006db7ef59", "filename": "tests/ui/manual_map_option_2.stderr", "status": "modified", "additions": 13, "deletions": 3, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/5f861ee1ae9dffe29cdd177e0bf2a067ea9b8ca9/tests%2Fui%2Fmanual_map_option_2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/5f861ee1ae9dffe29cdd177e0bf2a067ea9b8ca9/tests%2Fui%2Fmanual_map_option_2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmanual_map_option_2.stderr?ref=5f861ee1ae9dffe29cdd177e0bf2a067ea9b8ca9", "patch": "@@ -40,7 +40,7 @@ LL ~         });\n    |\n \n error: manual implementation of `Option::map`\n-  --> $DIR/manual_map_option_2.rs:61:17\n+  --> $DIR/manual_map_option_2.rs:62:17\n    |\n LL |           let _ = match Some(0) {\n    |  _________________^\n@@ -50,7 +50,7 @@ LL | |         };\n    | |_________^ help: try this: `Some(0).map(|x| f(x))`\n \n error: manual implementation of `Option::map`\n-  --> $DIR/manual_map_option_2.rs:66:13\n+  --> $DIR/manual_map_option_2.rs:67:13\n    |\n LL |       let _ = match Some(0) {\n    |  _____________^\n@@ -59,5 +59,15 @@ LL | |         None => None,\n LL | |     };\n    | |_____^ help: try this: `Some(0).map(|x| unsafe { f(x) })`\n \n-error: aborting due to 4 previous errors\n+error: manual implementation of `Option::map`\n+  --> $DIR/manual_map_option_2.rs:71:13\n+   |\n+LL |       let _ = match Some(0) {\n+   |  _____________^\n+LL | |         Some(x) => Some(unsafe { f(x) }),\n+LL | |         None => None,\n+LL | |     };\n+   | |_____^ help: try this: `Some(0).map(|x| unsafe { f(x) })`\n+\n+error: aborting due to 5 previous errors\n "}]}