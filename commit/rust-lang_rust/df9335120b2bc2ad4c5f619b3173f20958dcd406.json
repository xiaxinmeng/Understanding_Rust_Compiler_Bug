{"sha": "df9335120b2bc2ad4c5f619b3173f20958dcd406", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRmOTMzNTEyMGIyYmMyYWQ0YzVmNjE5YjMxNzNmMjA5NThkY2Q0MDY=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2019-10-12T19:02:38Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2019-10-12T19:02:38Z"}, "message": "test unwind(abort) with Rust ABI", "tree": {"sha": "2eb8812db863a3ba0734414e478daf35eda689f4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2eb8812db863a3ba0734414e478daf35eda689f4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/df9335120b2bc2ad4c5f619b3173f20958dcd406", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/df9335120b2bc2ad4c5f619b3173f20958dcd406", "html_url": "https://github.com/rust-lang/rust/commit/df9335120b2bc2ad4c5f619b3173f20958dcd406", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/df9335120b2bc2ad4c5f619b3173f20958dcd406/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a0106527c65310adb642ac4e407622a8eff3f364", "url": "https://api.github.com/repos/rust-lang/rust/commits/a0106527c65310adb642ac4e407622a8eff3f364", "html_url": "https://github.com/rust-lang/rust/commit/a0106527c65310adb642ac4e407622a8eff3f364"}], "stats": {"total": 30, "additions": 27, "deletions": 3}, "files": [{"sha": "c6e8dbf012cf3d42d6443ba7435e9f6cb80eb81a", "filename": "src/test/ui/panics/abort-on-panic.rs", "status": "renamed", "additions": 27, "deletions": 3, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/df9335120b2bc2ad4c5f619b3173f20958dcd406/src%2Ftest%2Fui%2Fpanics%2Fabort-on-panic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/df9335120b2bc2ad4c5f619b3173f20958dcd406/src%2Ftest%2Fui%2Fpanics%2Fabort-on-panic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fpanics%2Fabort-on-panic.rs?ref=df9335120b2bc2ad4c5f619b3173f20958dcd406", "patch": "@@ -14,27 +14,51 @@ use std::io::prelude::*;\n use std::io;\n use std::process::{Command, Stdio};\n \n-#[unwind(aborts)] // FIXME(#58794)\n+#[unwind(aborts)] // FIXME(#58794) should work even without the attribute\n extern \"C\" fn panic_in_ffi() {\n     panic!(\"Test\");\n }\n \n+#[unwind(aborts)]\n+extern \"Rust\" fn panic_in_rust_abi() {\n+    panic!(\"TestRust\");\n+}\n+\n fn test() {\n     let _ = panic::catch_unwind(|| { panic_in_ffi(); });\n     // The process should have aborted by now.\n     io::stdout().write(b\"This should never be printed.\\n\");\n     let _ = io::stdout().flush();\n }\n \n+fn testrust() {\n+    let _ = panic::catch_unwind(|| { panic_in_rust_abi(); });\n+    // The process should have aborted by now.\n+    io::stdout().write(b\"This should never be printed.\\n\");\n+    let _ = io::stdout().flush();\n+}\n+\n fn main() {\n     let args: Vec<String> = env::args().collect();\n-    if args.len() > 1 && args[1] == \"test\" {\n-        return test();\n+    if args.len() > 1 {\n+        // This is inside the self-executed command.\n+        match &*args[1] {\n+            \"test\" => return test(),\n+            \"testrust\" => return testrust(),\n+            _ => panic!(\"bad test\"),\n+        }\n     }\n \n+    // These end up calling the self-execution branches above.\n     let mut p = Command::new(&args[0])\n                         .stdout(Stdio::piped())\n                         .stdin(Stdio::piped())\n                         .arg(\"test\").spawn().unwrap();\n     assert!(!p.wait().unwrap().success());\n+\n+    let mut p = Command::new(&args[0])\n+                        .stdout(Stdio::piped())\n+                        .stdin(Stdio::piped())\n+                        .arg(\"testrust\").spawn().unwrap();\n+    assert!(!p.wait().unwrap().success());\n }", "previous_filename": "src/test/ui/abi/abort-on-c-abi.rs"}]}