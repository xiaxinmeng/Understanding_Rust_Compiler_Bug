{"sha": "0777ce86e1adc55362e1190db7b74e8f29559b3d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjA3NzdjZTg2ZTFhZGM1NTM2MmUxMTkwZGI3Yjc0ZThmMjk1NTliM2Q=", "commit": {"author": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2014-05-28T00:15:10Z"}, "committer": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2014-06-01T04:59:50Z"}, "message": "rustdoc: Freeze the cache ASAP\n\nThe cache is going to be used earlier in the HTML generation process, which\nmeans that it needs to get into TLS as soon as possible.", "tree": {"sha": "d49ec6714b0fc58b2866cea10748eeab5b3776f9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d49ec6714b0fc58b2866cea10748eeab5b3776f9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0777ce86e1adc55362e1190db7b74e8f29559b3d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0777ce86e1adc55362e1190db7b74e8f29559b3d", "html_url": "https://github.com/rust-lang/rust/commit/0777ce86e1adc55362e1190db7b74e8f29559b3d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0777ce86e1adc55362e1190db7b74e8f29559b3d/comments", "author": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "356423d8f1c308f0dc77f803f8ed00c7e80305f3", "url": "https://api.github.com/repos/rust-lang/rust/commits/356423d8f1c308f0dc77f803f8ed00c7e80305f3", "html_url": "https://github.com/rust-lang/rust/commit/356423d8f1c308f0dc77f803f8ed00c7e80305f3"}], "stats": {"total": 15, "additions": 9, "deletions": 6}, "files": [{"sha": "ab985828a4655419a7801e3dca1c6c747a48e022", "filename": "src/librustdoc/html/render.rs", "status": "modified", "additions": 9, "deletions": 6, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/0777ce86e1adc55362e1190db7b74e8f29559b3d/src%2Flibrustdoc%2Fhtml%2Frender.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0777ce86e1adc55362e1190db7b74e8f29559b3d/src%2Flibrustdoc%2Fhtml%2Frender.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Frender.rs?ref=0777ce86e1adc55362e1190db7b74e8f29559b3d", "patch": "@@ -307,11 +307,17 @@ pub fn run(mut krate: clean::Crate, dst: Path) -> io::IoResult<()> {\n     }\n \n     let index = try!(build_index(&krate, &mut cache));\n-    try!(write_shared(&cx, &krate, &cache, index));\n+\n+    // Freeze the cache now that the index has been built. Put an Arc into TLS\n+    // for future parallelization opportunities\n+    let cache = Arc::new(cache);\n+    cache_key.replace(Some(cache.clone()));\n+\n+    try!(write_shared(&cx, &krate, &*cache, index));\n     let krate = try!(render_sources(&mut cx, krate));\n \n     // And finally render the whole crate's documentation\n-    cx.krate(krate, cache)\n+    cx.krate(krate)\n }\n \n fn build_index(krate: &clean::Crate, cache: &mut Cache) -> io::IoResult<String> {\n@@ -954,16 +960,13 @@ impl Context {\n     ///\n     /// This currently isn't parallelized, but it'd be pretty easy to add\n     /// parallelization to this function.\n-    fn krate(self, mut krate: clean::Crate, cache: Cache) -> io::IoResult<()> {\n+    fn krate(self, mut krate: clean::Crate) -> io::IoResult<()> {\n         let mut item = match krate.module.take() {\n             Some(i) => i,\n             None => return Ok(())\n         };\n         item.name = Some(krate.name);\n \n-        // using a rwarc makes this parallelizable in the future\n-        cache_key.replace(Some(Arc::new(cache)));\n-\n         let mut work = vec!((self, item));\n         loop {\n             match work.pop() {"}]}