{"sha": "32953d04ded37430db2d52ca02057866003ff93a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjMyOTUzZDA0ZGVkMzc0MzBkYjJkNTJjYTAyMDU3ODY2MDAzZmY5M2E=", "commit": {"author": {"name": "brotzeit", "email": "brotzeitmacher@gmail.com", "date": "2018-02-12T11:58:38Z"}, "committer": {"name": "brotzeit", "email": "brotzeitmacher@gmail.com", "date": "2018-02-12T11:58:38Z"}, "message": "don't print verbose output when formatting with stdin", "tree": {"sha": "6ab35d781de8de18dd7e253ccd45d1258b6b46d7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6ab35d781de8de18dd7e253ccd45d1258b6b46d7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/32953d04ded37430db2d52ca02057866003ff93a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/32953d04ded37430db2d52ca02057866003ff93a", "html_url": "https://github.com/rust-lang/rust/commit/32953d04ded37430db2d52ca02057866003ff93a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/32953d04ded37430db2d52ca02057866003ff93a/comments", "author": {"login": "brotzeit", "id": 25367303, "node_id": "MDQ6VXNlcjI1MzY3MzAz", "avatar_url": "https://avatars.githubusercontent.com/u/25367303?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brotzeit", "html_url": "https://github.com/brotzeit", "followers_url": "https://api.github.com/users/brotzeit/followers", "following_url": "https://api.github.com/users/brotzeit/following{/other_user}", "gists_url": "https://api.github.com/users/brotzeit/gists{/gist_id}", "starred_url": "https://api.github.com/users/brotzeit/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brotzeit/subscriptions", "organizations_url": "https://api.github.com/users/brotzeit/orgs", "repos_url": "https://api.github.com/users/brotzeit/repos", "events_url": "https://api.github.com/users/brotzeit/events{/privacy}", "received_events_url": "https://api.github.com/users/brotzeit/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brotzeit", "id": 25367303, "node_id": "MDQ6VXNlcjI1MzY3MzAz", "avatar_url": "https://avatars.githubusercontent.com/u/25367303?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brotzeit", "html_url": "https://github.com/brotzeit", "followers_url": "https://api.github.com/users/brotzeit/followers", "following_url": "https://api.github.com/users/brotzeit/following{/other_user}", "gists_url": "https://api.github.com/users/brotzeit/gists{/gist_id}", "starred_url": "https://api.github.com/users/brotzeit/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brotzeit/subscriptions", "organizations_url": "https://api.github.com/users/brotzeit/orgs", "repos_url": "https://api.github.com/users/brotzeit/repos", "events_url": "https://api.github.com/users/brotzeit/events{/privacy}", "received_events_url": "https://api.github.com/users/brotzeit/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "63ebe1b13ef0876f40fc2a99baa64dde2d030213", "url": "https://api.github.com/repos/rust-lang/rust/commits/63ebe1b13ef0876f40fc2a99baa64dde2d030213", "html_url": "https://github.com/rust-lang/rust/commit/63ebe1b13ef0876f40fc2a99baa64dde2d030213"}], "stats": {"total": 21, "additions": 15, "deletions": 6}, "files": [{"sha": "cc55226dd20738803d7862c3f52bb886a6e21472", "filename": "rustfmt-core/src/lib.rs", "status": "modified", "additions": 15, "deletions": 6, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/32953d04ded37430db2d52ca02057866003ff93a/rustfmt-core%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/32953d04ded37430db2d52ca02057866003ff93a/rustfmt-core%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/rustfmt-core%2Fsrc%2Flib.rs?ref=32953d04ded37430db2d52ca02057866003ff93a", "patch": "@@ -75,6 +75,8 @@ mod types;\n mod vertical;\n pub mod visitor;\n \n+const STDIN: &'static str = \"<stdin>\";\n+\n // A map of the files of a crate, with their new content\n pub type FileMap = Vec<FileRecord>;\n \n@@ -294,6 +296,15 @@ impl fmt::Display for FormatReport {\n     }\n }\n \n+fn should_emit_verbose<F>(path: &FileName, config: &Config, f: F)\n+where\n+    F: Fn(),\n+{\n+    if config.verbose() && path.to_string() != STDIN {\n+        f();\n+    }\n+}\n+\n // Formatting which depends on the AST.\n fn format_ast<F>(\n     krate: &ast::Crate,\n@@ -316,9 +327,7 @@ where\n         if skip_children && path != *main_file {\n             continue;\n         }\n-        if config.verbose() {\n-            println!(\"Formatting {}\", path);\n-        }\n+        should_emit_verbose(&path, config, || println!(\"Formatting {}\", path));\n         let filemap = parse_session\n             .codemap()\n             .lookup_char_pos(module.inner.lo())\n@@ -676,7 +685,7 @@ pub fn format_input<T: Write>(\n \n     summary.mark_format_time();\n \n-    if config.verbose() {\n+    should_emit_verbose(&main_file, config, || {\n         fn duration_to_f32(d: Duration) -> f32 {\n             d.as_secs() as f32 + d.subsec_nanos() as f32 / 1_000_000_000f32\n         }\n@@ -685,8 +694,8 @@ pub fn format_input<T: Write>(\n             \"Spent {0:.3} secs in the parsing phase, and {1:.3} secs in the formatting phase\",\n             duration_to_f32(summary.get_parse_time().unwrap()),\n             duration_to_f32(summary.get_format_time().unwrap()),\n-        );\n-    }\n+        )\n+    });\n \n     match format_result {\n         Ok((file_map, has_diff)) => {"}]}