{"sha": "05b368f065cefeff31cbc04283453d6a4027532c", "node_id": "C_kwDOAAsO6NoAKDA1YjM2OGYwNjVjZWZlZmYzMWNiYzA0MjgzNDUzZDZhNDAyNzUzMmM", "commit": {"author": {"name": "TheDoctor314", "email": "64731940+TheDoctor314@users.noreply.github.com", "date": "2021-11-08T15:49:22Z"}, "committer": {"name": "TheDoctor314", "email": "64731940+TheDoctor314@users.noreply.github.com", "date": "2021-11-10T07:23:48Z"}, "message": "Add generic parameters for manual impl assist\n\nThe `impl_trait` function takes an optional `GenericParamList` to create\nthe trait impl.", "tree": {"sha": "1eca7024bcb0e965c3301e220751fad2732bc833", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1eca7024bcb0e965c3301e220751fad2732bc833"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/05b368f065cefeff31cbc04283453d6a4027532c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/05b368f065cefeff31cbc04283453d6a4027532c", "html_url": "https://github.com/rust-lang/rust/commit/05b368f065cefeff31cbc04283453d6a4027532c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/05b368f065cefeff31cbc04283453d6a4027532c/comments", "author": {"login": "TheDoctor314", "id": 64731940, "node_id": "MDQ6VXNlcjY0NzMxOTQw", "avatar_url": "https://avatars.githubusercontent.com/u/64731940?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TheDoctor314", "html_url": "https://github.com/TheDoctor314", "followers_url": "https://api.github.com/users/TheDoctor314/followers", "following_url": "https://api.github.com/users/TheDoctor314/following{/other_user}", "gists_url": "https://api.github.com/users/TheDoctor314/gists{/gist_id}", "starred_url": "https://api.github.com/users/TheDoctor314/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TheDoctor314/subscriptions", "organizations_url": "https://api.github.com/users/TheDoctor314/orgs", "repos_url": "https://api.github.com/users/TheDoctor314/repos", "events_url": "https://api.github.com/users/TheDoctor314/events{/privacy}", "received_events_url": "https://api.github.com/users/TheDoctor314/received_events", "type": "User", "site_admin": false}, "committer": {"login": "TheDoctor314", "id": 64731940, "node_id": "MDQ6VXNlcjY0NzMxOTQw", "avatar_url": "https://avatars.githubusercontent.com/u/64731940?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TheDoctor314", "html_url": "https://github.com/TheDoctor314", "followers_url": "https://api.github.com/users/TheDoctor314/followers", "following_url": "https://api.github.com/users/TheDoctor314/following{/other_user}", "gists_url": "https://api.github.com/users/TheDoctor314/gists{/gist_id}", "starred_url": "https://api.github.com/users/TheDoctor314/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TheDoctor314/subscriptions", "organizations_url": "https://api.github.com/users/TheDoctor314/orgs", "repos_url": "https://api.github.com/users/TheDoctor314/repos", "events_url": "https://api.github.com/users/TheDoctor314/events{/privacy}", "received_events_url": "https://api.github.com/users/TheDoctor314/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4f93fa12134e47b12a27bd456e59247e8e9d51df", "url": "https://api.github.com/repos/rust-lang/rust/commits/4f93fa12134e47b12a27bd456e59247e8e9d51df", "html_url": "https://github.com/rust-lang/rust/commit/4f93fa12134e47b12a27bd456e59247e8e9d51df"}], "stats": {"total": 18, "additions": 13, "deletions": 5}, "files": [{"sha": "7aeaedf5f05a47af89a39ac40db8e446dbd31604", "filename": "crates/ide_assists/src/handlers/replace_derive_with_manual_impl.rs", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/05b368f065cefeff31cbc04283453d6a4027532c/crates%2Fide_assists%2Fsrc%2Fhandlers%2Freplace_derive_with_manual_impl.rs", "raw_url": "https://github.com/rust-lang/rust/raw/05b368f065cefeff31cbc04283453d6a4027532c/crates%2Fide_assists%2Fsrc%2Fhandlers%2Freplace_derive_with_manual_impl.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_assists%2Fsrc%2Fhandlers%2Freplace_derive_with_manual_impl.rs?ref=05b368f065cefeff31cbc04283453d6a4027532c", "patch": "@@ -3,7 +3,7 @@ use ide_db::helpers::{import_assets::NameToImport, mod_path_to_ast};\n use ide_db::items_locator;\n use itertools::Itertools;\n use syntax::{\n-    ast::{self, make, AstNode, HasName},\n+    ast::{self, make, AstNode, HasGenericParams, HasName},\n     SyntaxKind::{IDENT, WHITESPACE},\n };\n \n@@ -160,8 +160,11 @@ fn impl_def_from_trait(\n     if trait_items.is_empty() {\n         return None;\n     }\n-    let impl_def =\n-        make::impl_trait(trait_path.clone(), make::ext::ident_path(&annotated_name.text()));\n+    let impl_def = make::impl_trait(\n+        trait_path.clone(),\n+        make::ext::ident_path(&annotated_name.text()),\n+        adt.generic_param_list(),\n+    );\n     let (impl_def, first_assoc_item) =\n         add_trait_assoc_items_to_impl(sema, trait_items, trait_, impl_def, target_scope);\n "}, {"sha": "e1938307cf36eb7559eae80857214b9a442a5690", "filename": "crates/syntax/src/ast/make.rs", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/05b368f065cefeff31cbc04283453d6a4027532c/crates%2Fsyntax%2Fsrc%2Fast%2Fmake.rs", "raw_url": "https://github.com/rust-lang/rust/raw/05b368f065cefeff31cbc04283453d6a4027532c/crates%2Fsyntax%2Fsrc%2Fast%2Fmake.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Fsrc%2Fast%2Fmake.rs?ref=05b368f065cefeff31cbc04283453d6a4027532c", "patch": "@@ -149,8 +149,13 @@ pub fn impl_(\n     ast_from_text(&format!(\"impl{} {}{} {{}}\", params, ty, ty_params))\n }\n \n-pub fn impl_trait(trait_: ast::Path, ty: ast::Path) -> ast::Impl {\n-    ast_from_text(&format!(\"impl {} for {} {{}}\", trait_, ty))\n+pub fn impl_trait(\n+    trait_: ast::Path,\n+    ty: ast::Path,\n+    ty_params: Option<ast::GenericParamList>,\n+) -> ast::Impl {\n+    let ty_params = ty_params.map_or_else(String::new, |params| params.to_string());\n+    ast_from_text(&format!(\"impl{2} {} for {}{2} {{}}\", trait_, ty, ty_params))\n }\n \n pub(crate) fn generic_arg_list() -> ast::GenericArgList {"}]}