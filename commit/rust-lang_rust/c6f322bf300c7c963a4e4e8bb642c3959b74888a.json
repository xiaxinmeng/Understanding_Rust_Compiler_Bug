{"sha": "c6f322bf300c7c963a4e4e8bb642c3959b74888a", "node_id": "C_kwDOAAsO6NoAKGM2ZjMyMmJmMzAwYzdjOTYzYTRlNGU4YmI2NDJjMzk1OWI3NDg4OGE", "commit": {"author": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2023-01-08T20:51:40Z"}, "committer": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2023-01-11T21:30:32Z"}, "message": "review comments: account for generics", "tree": {"sha": "8dc616308ab4c3a59008292599f59c625120ddb6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8dc616308ab4c3a59008292599f59c625120ddb6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c6f322bf300c7c963a4e4e8bb642c3959b74888a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c6f322bf300c7c963a4e4e8bb642c3959b74888a", "html_url": "https://github.com/rust-lang/rust/commit/c6f322bf300c7c963a4e4e8bb642c3959b74888a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c6f322bf300c7c963a4e4e8bb642c3959b74888a/comments", "author": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "committer": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "147c9bf4d56d7a9cf5fb70270b3e68c730da7d95", "url": "https://api.github.com/repos/rust-lang/rust/commits/147c9bf4d56d7a9cf5fb70270b3e68c730da7d95", "html_url": "https://github.com/rust-lang/rust/commit/147c9bf4d56d7a9cf5fb70270b3e68c730da7d95"}], "stats": {"total": 52, "additions": 44, "deletions": 8}, "files": [{"sha": "5baaaf09edb66553b393b30b25b024bea8bae406", "filename": "compiler/rustc_hir_analysis/src/astconv/mod.rs", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/c6f322bf300c7c963a4e4e8bb642c3959b74888a/compiler%2Frustc_hir_analysis%2Fsrc%2Fastconv%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c6f322bf300c7c963a4e4e8bb642c3959b74888a/compiler%2Frustc_hir_analysis%2Fsrc%2Fastconv%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_hir_analysis%2Fsrc%2Fastconv%2Fmod.rs?ref=c6f322bf300c7c963a4e4e8bb642c3959b74888a", "patch": "@@ -2147,8 +2147,12 @@ impl<'o, 'tcx> dyn AstConv<'tcx> + 'o {\n                                 .is_accessible_from(self.item_def_id(), tcx)\n                             && tcx.all_impls(*trait_def_id)\n                                 .any(|impl_def_id| {\n-                                    let trait_ref = tcx.impl_trait_ref(impl_def_id);\n-                                    trait_ref.map_or(false, |impl_| {\n+                                    let trait_ref = tcx.bound_impl_trait_ref(impl_def_id);\n+                                    trait_ref.map_or(false, |trait_ref| {\n+                                        let impl_ = trait_ref.subst(\n+                                            tcx,\n+                                            infcx.fresh_substs_for_item(span, impl_def_id),\n+                                        );\n                                         infcx\n                                             .can_eq(\n                                                 param_env,"}, {"sha": "23f71520040080f22287b09941da4d838d3846a1", "filename": "tests/ui/associated-item/ambiguous-associated-type-with-generics.fixed", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/c6f322bf300c7c963a4e4e8bb642c3959b74888a/tests%2Fui%2Fassociated-item%2Fambiguous-associated-type-with-generics.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/c6f322bf300c7c963a4e4e8bb642c3959b74888a/tests%2Fui%2Fassociated-item%2Fambiguous-associated-type-with-generics.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fassociated-item%2Fambiguous-associated-type-with-generics.fixed?ref=c6f322bf300c7c963a4e4e8bb642c3959b74888a", "patch": "@@ -0,0 +1,14 @@\n+// run-rustfix\n+trait Trait<A> {}\n+\n+trait Assoc {\n+    type Ty;\n+}\n+\n+impl<A> Assoc for dyn Trait<A> {\n+    type Ty = i32;\n+}\n+\n+fn main() {\n+    let _x: <dyn Trait<i32> as Assoc>::Ty; //~ ERROR ambiguous associated type\n+}"}, {"sha": "9c26e339a449b59bf66560b5d7d5ddbe5f11d05a", "filename": "tests/ui/associated-item/ambiguous-associated-type-with-generics.rs", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/c6f322bf300c7c963a4e4e8bb642c3959b74888a/tests%2Fui%2Fassociated-item%2Fambiguous-associated-type-with-generics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c6f322bf300c7c963a4e4e8bb642c3959b74888a/tests%2Fui%2Fassociated-item%2Fambiguous-associated-type-with-generics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fassociated-item%2Fambiguous-associated-type-with-generics.rs?ref=c6f322bf300c7c963a4e4e8bb642c3959b74888a", "patch": "@@ -0,0 +1,14 @@\n+// run-rustfix\n+trait Trait<A> {}\n+\n+trait Assoc {\n+    type Ty;\n+}\n+\n+impl<A> Assoc for dyn Trait<A> {\n+    type Ty = i32;\n+}\n+\n+fn main() {\n+    let _x: <dyn Trait<i32>>::Ty; //~ ERROR ambiguous associated type\n+}"}, {"sha": "97088b79fd67128a1f2e428d38ee290ce6061c9c", "filename": "tests/ui/associated-item/ambiguous-associated-type-with-generics.stderr", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/c6f322bf300c7c963a4e4e8bb642c3959b74888a/tests%2Fui%2Fassociated-item%2Fambiguous-associated-type-with-generics.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/c6f322bf300c7c963a4e4e8bb642c3959b74888a/tests%2Fui%2Fassociated-item%2Fambiguous-associated-type-with-generics.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fassociated-item%2Fambiguous-associated-type-with-generics.stderr?ref=c6f322bf300c7c963a4e4e8bb642c3959b74888a", "patch": "@@ -0,0 +1,9 @@\n+error[E0223]: ambiguous associated type\n+  --> $DIR/ambiguous-associated-type-with-generics.rs:13:13\n+   |\n+LL |     let _x: <dyn Trait<i32>>::Ty;\n+   |             ^^^^^^^^^^^^^^^^^^^^ help: use the fully-qualified path: `<dyn Trait<i32> as Assoc>::Ty`\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0223`."}, {"sha": "55096e95df7e06cee280a39f5f477cf81a108c06", "filename": "tests/ui/did_you_mean/bad-assoc-ty.stderr", "status": "modified", "additions": 1, "deletions": 6, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/c6f322bf300c7c963a4e4e8bb642c3959b74888a/tests%2Fui%2Fdid_you_mean%2Fbad-assoc-ty.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/c6f322bf300c7c963a4e4e8bb642c3959b74888a/tests%2Fui%2Fdid_you_mean%2Fbad-assoc-ty.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fdid_you_mean%2Fbad-assoc-ty.stderr?ref=c6f322bf300c7c963a4e4e8bb642c3959b74888a", "patch": "@@ -147,12 +147,7 @@ error[E0223]: ambiguous associated type\n   --> $DIR/bad-assoc-ty.rs:33:10\n    |\n LL | type H = Fn(u8) -> (u8)::Output;\n-   |          ^^^^^^^^^^^^^^^^^^^^^^\n-   |\n-help: if there were a trait named `Example` with associated type `Output` implemented for `(dyn Fn(u8) -> u8 + 'static)`, you could use the fully-qualified path\n-   |\n-LL | type H = <(dyn Fn(u8) -> u8 + 'static) as Example>::Output;\n-   |          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n+   |          ^^^^^^^^^^^^^^^^^^^^^^ help: use the fully-qualified path: `<(dyn Fn(u8) -> u8 + 'static) as IntoFuture>::Output`\n \n error[E0223]: ambiguous associated type\n   --> $DIR/bad-assoc-ty.rs:39:19"}]}