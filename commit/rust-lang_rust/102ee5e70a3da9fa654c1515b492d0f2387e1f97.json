{"sha": "102ee5e70a3da9fa654c1515b492d0f2387e1f97", "node_id": "MDY6Q29tbWl0NzI0NzEyOjEwMmVlNWU3MGEzZGE5ZmE2NTRjMTUxNWI0OTJkMGYyMzg3ZTFmOTc=", "commit": {"author": {"name": "Mark-Simulacrum", "email": "mark.simulacrum@gmail.com", "date": "2016-09-16T01:47:04Z"}, "committer": {"name": "Mark-Simulacrum", "email": "mark.simulacrum@gmail.com", "date": "2016-09-16T01:47:04Z"}, "message": "Add example in AsMut trait documentation", "tree": {"sha": "6d1b52ef41a97d1bda3cf495f21e4a2868d47b74", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6d1b52ef41a97d1bda3cf495f21e4a2868d47b74"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/102ee5e70a3da9fa654c1515b492d0f2387e1f97", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/102ee5e70a3da9fa654c1515b492d0f2387e1f97", "html_url": "https://github.com/rust-lang/rust/commit/102ee5e70a3da9fa654c1515b492d0f2387e1f97", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/102ee5e70a3da9fa654c1515b492d0f2387e1f97/comments", "author": {"login": "Mark-Simulacrum", "id": 5047365, "node_id": "MDQ6VXNlcjUwNDczNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/5047365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mark-Simulacrum", "html_url": "https://github.com/Mark-Simulacrum", "followers_url": "https://api.github.com/users/Mark-Simulacrum/followers", "following_url": "https://api.github.com/users/Mark-Simulacrum/following{/other_user}", "gists_url": "https://api.github.com/users/Mark-Simulacrum/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mark-Simulacrum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mark-Simulacrum/subscriptions", "organizations_url": "https://api.github.com/users/Mark-Simulacrum/orgs", "repos_url": "https://api.github.com/users/Mark-Simulacrum/repos", "events_url": "https://api.github.com/users/Mark-Simulacrum/events{/privacy}", "received_events_url": "https://api.github.com/users/Mark-Simulacrum/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Mark-Simulacrum", "id": 5047365, "node_id": "MDQ6VXNlcjUwNDczNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/5047365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mark-Simulacrum", "html_url": "https://github.com/Mark-Simulacrum", "followers_url": "https://api.github.com/users/Mark-Simulacrum/followers", "following_url": "https://api.github.com/users/Mark-Simulacrum/following{/other_user}", "gists_url": "https://api.github.com/users/Mark-Simulacrum/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mark-Simulacrum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mark-Simulacrum/subscriptions", "organizations_url": "https://api.github.com/users/Mark-Simulacrum/orgs", "repos_url": "https://api.github.com/users/Mark-Simulacrum/repos", "events_url": "https://api.github.com/users/Mark-Simulacrum/events{/privacy}", "received_events_url": "https://api.github.com/users/Mark-Simulacrum/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1265cbf4e05628c98f51afebe0b662c451173faa", "url": "https://api.github.com/repos/rust-lang/rust/commits/1265cbf4e05628c98f51afebe0b662c451173faa", "html_url": "https://github.com/rust-lang/rust/commit/1265cbf4e05628c98f51afebe0b662c451173faa"}], "stats": {"total": 16, "additions": 16, "deletions": 0}, "files": [{"sha": "5f16a4f2435f8549e49fec9d2016f33262d9ec2f", "filename": "src/libcore/convert.rs", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/102ee5e70a3da9fa654c1515b492d0f2387e1f97/src%2Flibcore%2Fconvert.rs", "raw_url": "https://github.com/rust-lang/rust/raw/102ee5e70a3da9fa654c1515b492d0f2387e1f97/src%2Flibcore%2Fconvert.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fconvert.rs?ref=102ee5e70a3da9fa654c1515b492d0f2387e1f97", "patch": "@@ -92,6 +92,22 @@ pub trait AsRef<T: ?Sized> {\n /// [`Option<T>`]: ../../std/option/enum.Option.html\n /// [`Result<T, E>`]: ../../std/result/enum.Result.html\n ///\n+/// # Examples\n+///\n+/// [`Box<T>`] implements `AsMut<T>`:\n+///\n+/// [`Box<T>`]: ../../std/boxed/struct.Box.html\n+///\n+/// ```\n+/// fn add_one<T: AsMut<u64>>(num: &mut T) {\n+///     *num.as_mut() += 1;\n+/// }\n+///\n+/// let mut boxed_num = Box::new(0);\n+/// add_one(&mut boxed_num);\n+/// assert_eq!(*boxed_num, 1);\n+/// ```\n+///\n /// # Generic Impls\n ///\n /// - `AsMut` auto-dereferences if the inner type is a reference or a mutable"}]}