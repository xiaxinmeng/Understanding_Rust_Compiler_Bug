{"sha": "f6c552d6d7bcf06d6d30099ddf856364e3aef532", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY2YzU1MmQ2ZDdiY2YwNmQ2ZDMwMDk5ZGRmODU2MzY0ZTNhZWY1MzI=", "commit": {"author": {"name": "Tim Chevalier", "email": "chevalier@alum.wellesley.edu", "date": "2012-06-01T23:19:48Z"}, "committer": {"name": "Tim Chevalier", "email": "chevalier@alum.wellesley.edu", "date": "2012-06-02T03:40:34Z"}, "message": "Update task-killjoin-rsrc to use classes\n\nThis test was xfailed, but I decided to update it to use classes\nanyway. The test currently compiles, but fails with a runtime error.\nSo it's still xfailed.", "tree": {"sha": "27b835f78b01241bd5f8f82de9c5d9c7cbe51232", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/27b835f78b01241bd5f8f82de9c5d9c7cbe51232"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f6c552d6d7bcf06d6d30099ddf856364e3aef532", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f6c552d6d7bcf06d6d30099ddf856364e3aef532", "html_url": "https://github.com/rust-lang/rust/commit/f6c552d6d7bcf06d6d30099ddf856364e3aef532", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f6c552d6d7bcf06d6d30099ddf856364e3aef532/comments", "author": {"login": "catamorphism", "id": 427212, "node_id": "MDQ6VXNlcjQyNzIxMg==", "avatar_url": "https://avatars.githubusercontent.com/u/427212?v=4", "gravatar_id": "", "url": "https://api.github.com/users/catamorphism", "html_url": "https://github.com/catamorphism", "followers_url": "https://api.github.com/users/catamorphism/followers", "following_url": "https://api.github.com/users/catamorphism/following{/other_user}", "gists_url": "https://api.github.com/users/catamorphism/gists{/gist_id}", "starred_url": "https://api.github.com/users/catamorphism/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/catamorphism/subscriptions", "organizations_url": "https://api.github.com/users/catamorphism/orgs", "repos_url": "https://api.github.com/users/catamorphism/repos", "events_url": "https://api.github.com/users/catamorphism/events{/privacy}", "received_events_url": "https://api.github.com/users/catamorphism/received_events", "type": "User", "site_admin": false}, "committer": {"login": "catamorphism", "id": 427212, "node_id": "MDQ6VXNlcjQyNzIxMg==", "avatar_url": "https://avatars.githubusercontent.com/u/427212?v=4", "gravatar_id": "", "url": "https://api.github.com/users/catamorphism", "html_url": "https://github.com/catamorphism", "followers_url": "https://api.github.com/users/catamorphism/followers", "following_url": "https://api.github.com/users/catamorphism/following{/other_user}", "gists_url": "https://api.github.com/users/catamorphism/gists{/gist_id}", "starred_url": "https://api.github.com/users/catamorphism/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/catamorphism/subscriptions", "organizations_url": "https://api.github.com/users/catamorphism/orgs", "repos_url": "https://api.github.com/users/catamorphism/repos", "events_url": "https://api.github.com/users/catamorphism/events{/privacy}", "received_events_url": "https://api.github.com/users/catamorphism/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "053db0208b20e1e468390e3d73d9b74260e690a7", "url": "https://api.github.com/repos/rust-lang/rust/commits/053db0208b20e1e468390e3d73d9b74260e690a7", "html_url": "https://github.com/rust-lang/rust/commit/053db0208b20e1e468390e3d73d9b74260e690a7"}], "stats": {"total": 40, "additions": 21, "deletions": 19}, "files": [{"sha": "0696d17614707d024b5c26568749e6ccc992b358", "filename": "src/test/run-pass/task-killjoin-rsrc.rs", "status": "modified", "additions": 21, "deletions": 19, "changes": 40, "blob_url": "https://github.com/rust-lang/rust/blob/f6c552d6d7bcf06d6d30099ddf856364e3aef532/src%2Ftest%2Frun-pass%2Ftask-killjoin-rsrc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f6c552d6d7bcf06d6d30099ddf856364e3aef532/src%2Ftest%2Frun-pass%2Ftask-killjoin-rsrc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Ftask-killjoin-rsrc.rs?ref=f6c552d6d7bcf06d6d30099ddf856364e3aef532", "patch": "@@ -1,27 +1,30 @@\n+// xfail-test\n \n // A port of task-killjoin to use a class with a dtor to manage\n // the join.\n \n use std;\n import task;\n \n-fn joinable(f: fn()) -> (task::task, comm::port<bool>) {\n-    class notify {\n-        let ch: comm::chan<bool>; let v: @mut bool;\n-        new(ch: comm::chan<bool>, v: @mut bool) { self.ch = ch; self.v = v; }\n-        drop {\n-            #error[\"notify: task=%d v=%x unwinding=%b b=%b\",\n+class notify {\n+    let ch: comm::chan<bool>; let v: @mut bool;\n+    new(ch: comm::chan<bool>, v: @mut bool) { self.ch = ch; self.v = v; }\n+    drop {\n+        #error[\"notify: task=%? v=%x unwinding=%b b=%b\",\n                task::get_task(),\n                ptr::addr_of(*(self.v)) as uint,\n                task::failing(),\n                *(self.v)];\n-            comm::send(self.ch, *(self.v));\n-        }\n+        let b = *(self.v);\n+        comm::send(self.ch, b);\n     }\n-    fn wrapper(pair: (comm::chan<bool>, fn())) {\n+}\n+\n+fn joinable(f: fn~()) -> comm::port<bool> {\n+    fn wrapper(+pair: (comm::chan<bool>, fn())) {\n         let (c, f) = pair;\n         let b = @mut false;\n-        #error[\"wrapper: task=%d allocated v=%x\",\n+        #error[\"wrapper: task=%? allocated v=%x\",\n                task::get_task(),\n                ptr::addr_of(*b) as uint];\n         let _r = notify(c, b);\n@@ -30,35 +33,34 @@ fn joinable(f: fn()) -> (task::task, comm::port<bool>) {\n     }\n     let p = comm::port();\n     let c = comm::chan(p);\n-    let t = task::spawn {|| wrapper((c, f)) };\n-    ret (t, p);\n+    let _ = task::spawn {|| wrapper((c, f)) };\n+    p\n }\n \n-fn join(pair: (task::task, comm::port<bool>)) -> bool {\n-    let (_, port) = pair;\n+fn join(port: comm::port<bool>) -> bool {\n     comm::recv(port)\n }\n \n fn supervised() {\n     // Yield to make sure the supervisor joins before we\n     // fail. This is currently not needed because the supervisor\n     // runs first, but I can imagine that changing.\n-    #error[\"supervised task=%d\", task::get_task()];\n+    #error[\"supervised task=%?\", task::get_task];\n     task::yield();\n     fail;\n }\n \n-fn supervisor() {\n+fn supervisor(b: task::builder) {\n     // Unsupervise this task so the process doesn't return a failure status as\n     // a result of the main task being killed.\n-    task::unsupervise();\n-    #error[\"supervisor task=%d\", task::get_task()];\n+    task::unsupervise(b);\n+    #error[\"supervisor task=%?\", task::get_task()];\n     let t = joinable(supervised);\n     join(t);\n }\n \n fn main() {\n-    join(joinable(supervisor));\n+    join(joinable({|| supervisor(task::builder())}));\n }\n \n // Local Variables:"}]}