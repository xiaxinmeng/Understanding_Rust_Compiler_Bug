{"sha": "a30b548919715737817d8b66ee7867503188bbca", "node_id": "MDY6Q29tbWl0NzI0NzEyOmEzMGI1NDg5MTk3MTU3Mzc4MTdkOGI2NmVlNzg2NzUwMzE4OGJiY2E=", "commit": {"author": {"name": "Oli Scherer", "email": "github35764891676564198441@oli-obk.de", "date": "2021-07-27T11:46:31Z"}, "committer": {"name": "Oli Scherer", "email": "github35764891676564198441@oli-obk.de", "date": "2021-08-06T10:23:11Z"}, "message": "Split fold_opaque_ty", "tree": {"sha": "5e12b187bd63a6476495e4029c1df419b6a2fd37", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5e12b187bd63a6476495e4029c1df419b6a2fd37"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a30b548919715737817d8b66ee7867503188bbca", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a30b548919715737817d8b66ee7867503188bbca", "html_url": "https://github.com/rust-lang/rust/commit/a30b548919715737817d8b66ee7867503188bbca", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a30b548919715737817d8b66ee7867503188bbca/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "34182804e866a9f2f0c937aad5e01f8f2b7c0fda", "url": "https://api.github.com/repos/rust-lang/rust/commits/34182804e866a9f2f0c937aad5e01f8f2b7c0fda", "html_url": "https://github.com/rust-lang/rust/commit/34182804e866a9f2f0c937aad5e01f8f2b7c0fda"}], "stats": {"total": 17, "additions": 14, "deletions": 3}, "files": [{"sha": "8f23cc9e133f2df61479fbb0b7f09b79998ee80c", "filename": "compiler/rustc_trait_selection/src/opaque_types.rs", "status": "modified", "additions": 14, "deletions": 3, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/a30b548919715737817d8b66ee7867503188bbca/compiler%2Frustc_trait_selection%2Fsrc%2Fopaque_types.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a30b548919715737817d8b66ee7867503188bbca/compiler%2Frustc_trait_selection%2Fsrc%2Fopaque_types.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_trait_selection%2Fsrc%2Fopaque_types.rs?ref=a30b548919715737817d8b66ee7867503188bbca", "patch": "@@ -999,6 +999,19 @@ impl<'a, 'tcx> Instantiator<'a, 'tcx> {\n             OpaqueTypeDecl { opaque_type: ty, definition_span, concrete_ty: ty_var, origin },\n         );\n         debug!(\"instantiate_opaque_types: ty_var={:?}\", ty_var);\n+        self.compute_opaque_type_obligations(opaque_type_key, span);\n+\n+        ty_var\n+    }\n+\n+    fn compute_opaque_type_obligations(\n+        &mut self,\n+        opaque_type_key: OpaqueTypeKey<'tcx>,\n+        span: Span,\n+    ) {\n+        let infcx = self.infcx;\n+        let tcx = infcx.tcx;\n+        let OpaqueTypeKey { def_id, substs } = opaque_type_key;\n \n         let item_bounds = tcx.explicit_item_bounds(def_id);\n         debug!(\"instantiate_opaque_types: bounds={:#?}\", item_bounds);\n@@ -1019,7 +1032,7 @@ impl<'a, 'tcx> Instantiator<'a, 'tcx> {\n             if let ty::PredicateKind::Projection(projection) = predicate.kind().skip_binder() {\n                 if projection.ty.references_error() {\n                     // No point on adding these obligations since there's a type error involved.\n-                    return ty_var;\n+                    return;\n                 }\n             }\n         }\n@@ -1037,8 +1050,6 @@ impl<'a, 'tcx> Instantiator<'a, 'tcx> {\n             debug!(\"instantiate_opaque_types: predicate={:?}\", predicate);\n             self.obligations.push(traits::Obligation::new(cause, self.param_env, predicate));\n         }\n-\n-        ty_var\n     }\n }\n "}]}