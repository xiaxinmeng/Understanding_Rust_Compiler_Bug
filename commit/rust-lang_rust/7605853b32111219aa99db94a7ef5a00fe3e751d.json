{"sha": "7605853b32111219aa99db94a7ef5a00fe3e751d", "node_id": "C_kwDOAAsO6NoAKDc2MDU4NTNiMzIxMTEyMTlhYTk5ZGI5NGE3ZWY1YTAwZmUzZTc1MWQ", "commit": {"author": {"name": "Nilstrieb", "email": "48135649+Nilstrieb@users.noreply.github.com", "date": "2023-01-19T18:46:53Z"}, "committer": {"name": "Nilstrieb", "email": "48135649+Nilstrieb@users.noreply.github.com", "date": "2023-01-19T18:46:53Z"}, "message": "Change codegen documentation", "tree": {"sha": "7c1cac8751ee6ee5a9e725e04f34f8118f57bdf2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7c1cac8751ee6ee5a9e725e04f34f8118f57bdf2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7605853b32111219aa99db94a7ef5a00fe3e751d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7605853b32111219aa99db94a7ef5a00fe3e751d", "html_url": "https://github.com/rust-lang/rust/commit/7605853b32111219aa99db94a7ef5a00fe3e751d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7605853b32111219aa99db94a7ef5a00fe3e751d/comments", "author": {"login": "Nilstrieb", "id": 48135649, "node_id": "MDQ6VXNlcjQ4MTM1NjQ5", "avatar_url": "https://avatars.githubusercontent.com/u/48135649?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Nilstrieb", "html_url": "https://github.com/Nilstrieb", "followers_url": "https://api.github.com/users/Nilstrieb/followers", "following_url": "https://api.github.com/users/Nilstrieb/following{/other_user}", "gists_url": "https://api.github.com/users/Nilstrieb/gists{/gist_id}", "starred_url": "https://api.github.com/users/Nilstrieb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Nilstrieb/subscriptions", "organizations_url": "https://api.github.com/users/Nilstrieb/orgs", "repos_url": "https://api.github.com/users/Nilstrieb/repos", "events_url": "https://api.github.com/users/Nilstrieb/events{/privacy}", "received_events_url": "https://api.github.com/users/Nilstrieb/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Nilstrieb", "id": 48135649, "node_id": "MDQ6VXNlcjQ4MTM1NjQ5", "avatar_url": "https://avatars.githubusercontent.com/u/48135649?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Nilstrieb", "html_url": "https://github.com/Nilstrieb", "followers_url": "https://api.github.com/users/Nilstrieb/followers", "following_url": "https://api.github.com/users/Nilstrieb/following{/other_user}", "gists_url": "https://api.github.com/users/Nilstrieb/gists{/gist_id}", "starred_url": "https://api.github.com/users/Nilstrieb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Nilstrieb/subscriptions", "organizations_url": "https://api.github.com/users/Nilstrieb/orgs", "repos_url": "https://api.github.com/users/Nilstrieb/repos", "events_url": "https://api.github.com/users/Nilstrieb/events{/privacy}", "received_events_url": "https://api.github.com/users/Nilstrieb/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a6fda3ee7fb24c9ccf1544ec719e8db01f77f36b", "url": "https://api.github.com/repos/rust-lang/rust/commits/a6fda3ee7fb24c9ccf1544ec719e8db01f77f36b", "html_url": "https://github.com/rust-lang/rust/commit/a6fda3ee7fb24c9ccf1544ec719e8db01f77f36b"}], "stats": {"total": 64, "additions": 32, "deletions": 32}, "files": [{"sha": "5ed5e3c7f11afbce25f08233edd368b12e0cff25", "filename": "src/doc/rustc/src/codegen-options/index.md", "status": "modified", "additions": 32, "deletions": 32, "changes": 64, "blob_url": "https://github.com/rust-lang/rust/blob/7605853b32111219aa99db94a7ef5a00fe3e751d/src%2Fdoc%2Frustc%2Fsrc%2Fcodegen-options%2Findex.md", "raw_url": "https://github.com/rust-lang/rust/raw/7605853b32111219aa99db94a7ef5a00fe3e751d/src%2Fdoc%2Frustc%2Fsrc%2Fcodegen-options%2Findex.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Frustc%2Fsrc%2Fcodegen-options%2Findex.md?ref=7605853b32111219aa99db94a7ef5a00fe3e751d", "patch": "@@ -49,19 +49,19 @@ Guard](https://docs.microsoft.com/en-us/windows/win32/secbp/control-flow-guard)\n platform security feature. This flag is currently ignored for non-Windows targets.\n It takes one of the following values:\n \n-* `y`, `yes`, `on`, `checks`, or no value: enable Control Flow Guard.\n+* `y`, `yes`, `on`, `true`, `checks`, or no value: enable Control Flow Guard.\n * `nochecks`: emit Control Flow Guard metadata without runtime enforcement checks (this\n should only be used for testing purposes as it does not provide security enforcement).\n-* `n`, `no`, `off`: do not enable Control Flow Guard (the default).\n+* `n`, `no`, `off`, `false`: do not enable Control Flow Guard (the default).\n \n ## debug-assertions\n \n This flag lets you turn `cfg(debug_assertions)` [conditional\n compilation](../../reference/conditional-compilation.md#debug_assertions) on\n or off. It takes one of the following values:\n \n-* `y`, `yes`, `on`, or no value: enable debug-assertions.\n-* `n`, `no`, or `off`: disable debug-assertions.\n+* `y`, `yes`, `on`, `true`, or no value: enable debug-assertions.\n+* `n`, `no`, `off` or `false`: disable debug-assertions.\n \n If not specified, debug assertions are automatically enabled only if the\n [opt-level](#opt-level) is 0.\n@@ -82,8 +82,8 @@ Note: The [`-g` flag][option-g-debug] is an alias for `-C debuginfo=2`.\n This flag controls whether or not the linker includes its default libraries.\n It takes one of the following values:\n \n-* `y`, `yes`, `on`, or no value: include default libraries (the default).\n-* `n`, `no`, or `off`: exclude default libraries.\n+* `y`, `yes`, `on`, `true` or no value: include default libraries (the default).\n+* `n`, `no`, `off` or `false`: exclude default libraries.\n \n For example, for gcc flavor linkers, this issues the `-nodefaultlibs` flag to\n the linker.\n@@ -93,8 +93,8 @@ the linker.\n This flag controls whether or not the compiler embeds LLVM bitcode into object\n files. It takes one of the following values:\n \n-* `y`, `yes`, `on`, or no value: put bitcode in rlibs (the default).\n-* `n`, `no`, or `off`: omit bitcode from rlibs.\n+* `y`, `yes`, `on`, `true` or no value: put bitcode in rlibs (the default).\n+* `n`, `no`, `off` or `false`: omit bitcode from rlibs.\n \n LLVM bitcode is required when rustc is performing link-time optimization (LTO).\n It is also required on some targets like iOS ones where vendors look for LLVM\n@@ -135,8 +135,8 @@ flag][option-emit] for more information.\n This flag forces the use of frame pointers. It takes one of the following\n values:\n \n-* `y`, `yes`, `on`, or no value: force-enable frame pointers.\n-* `n`, `no`, or `off`: do not force-enable frame pointers. This does\n+* `y`, `yes`, `on`, `true` or no value: force-enable frame pointers.\n+* `n`, `no`, `off` or `false`: do not force-enable frame pointers. This does\n   not necessarily mean frame pointers will be removed.\n \n The default behaviour, if frame pointers are not force-enabled, depends on the\n@@ -147,8 +147,8 @@ target.\n This flag forces the generation of unwind tables. It takes one of the following\n values:\n \n-* `y`, `yes`, `on`, or no value: Unwind tables are forced to be generated.\n-* `n`, `no`, or `off`: Unwind tables are not forced to be generated. If unwind\n+* `y`, `yes`, `on`, `true` or no value: Unwind tables are forced to be generated.\n+* `n`, `no`, `off` or `false`: Unwind tables are not forced to be generated. If unwind\n   tables are required by the target an error will be emitted.\n \n The default if not specified depends on the target.\n@@ -202,8 +202,8 @@ options should be separated by spaces.\n This flag controls whether the linker will keep dead code. It takes one of\n the following values:\n \n-* `y`, `yes`, `on`, or no value: keep dead code.\n-* `n`, `no`, or `off`: remove dead code (the default).\n+* `y`, `yes`, `on`, `true` or no value: keep dead code.\n+* `n`, `no`, `off` or `false`: remove dead code (the default).\n \n An example of when this flag might be useful is when trying to construct code coverage\n metrics.\n@@ -215,8 +215,8 @@ linker will use libraries and objects shipped with Rust instead or those in the\n It takes one of the following values:\n \n * no value: rustc will use heuristic to disable self-contained mode if system has necessary tools.\n-* `y`, `yes`, `on`: use only libraries/objects shipped with Rust.\n-* `n`, `no`, or `off`: rely on the user or the linker to provide non-Rust libraries/objects.\n+* `y`, `yes`, `on`, `true`: use only libraries/objects shipped with Rust.\n+* `n`, `no`, `off` or `false`: rely on the user or the linker to provide non-Rust libraries/objects.\n \n This allows overriding cases when detection fails or user wants to use shipped libraries.\n \n@@ -261,8 +261,8 @@ This flag defers LTO optimizations to the linker. See\n [linker-plugin-LTO](../linker-plugin-lto.md) for more details. It takes one of\n the following values:\n \n-* `y`, `yes`, `on`, or no value: enable linker plugin LTO.\n-* `n`, `no`, or `off`: disable linker plugin LTO (the default).\n+* `y`, `yes`, `on`, `true` or no value: enable linker plugin LTO.\n+* `n`, `no`, `off` or `false`: disable linker plugin LTO (the default).\n * A path to the linker plugin.\n \n More specifically this flag will cause the compiler to replace its typical\n@@ -292,9 +292,9 @@ optimizations](https://llvm.org/docs/LinkTimeOptimization.html) to produce\n better optimized code, using whole-program analysis, at the cost of longer\n linking time. It takes one of the following values:\n \n-* `y`, `yes`, `on`, `fat`, or no value: perform \"fat\" LTO which attempts to\n+* `y`, `yes`, `on`, `true`, `fat`, or no value: perform \"fat\" LTO which attempts to\n   perform optimizations across all crates within the dependency graph.\n-* `n`, `no`, `off`: disables LTO.\n+* `n`, `no`, `off`, `false`: disables LTO.\n * `thin`: perform [\"thin\"\n   LTO](http://blog.llvm.org/2016/06/thinlto-scalable-and-incremental-lto.html).\n   This is similar to \"fat\", but takes substantially less time to run while\n@@ -333,8 +333,8 @@ This flag allows you to disable [the\n red zone](https://en.wikipedia.org/wiki/Red_zone_\\(computing\\)). It takes one\n of the following values:\n \n-* `y`, `yes`, `on`, or no value: disable the red zone.\n-* `n`, `no`, or `off`: enable the red zone.\n+* `y`, `yes`, `on`, `true` or no value: disable the red zone.\n+* `n`, `no`, `off` or `false`: enable the red zone.\n \n The default behaviour, if the flag is not specified, depends on the target.\n \n@@ -376,8 +376,8 @@ overflow](../../reference/expressions/operator-expr.md#overflow). When\n overflow-checks are enabled, a panic will occur on overflow. This flag takes\n one of the following values:\n \n-* `y`, `yes`, `on`, or no value: enable overflow checks.\n-* `n`, `no`, or `off`: disable overflow checks.\n+* `y`, `yes`, `on`, `true` or no value: enable overflow checks.\n+* `n`, `no`, `off` or `false`: disable overflow checks.\n \n If not specified, overflow checks are enabled if\n [debug-assertions](#debug-assertions) are enabled, disabled otherwise.\n@@ -409,8 +409,8 @@ for determining whether or not it is possible to statically or dynamically\n link with a dependency. For example, `cdylib` crate types may only use static\n linkage. This flag takes one of the following values:\n \n-* `y`, `yes`, `on`, or no value: use dynamic linking.\n-* `n`, `no`, or `off`: use static linking (the default).\n+* `y`, `yes`, `on`, `true` or no value: use dynamic linking.\n+* `n`, `no`, `off` or `false`: use static linking (the default).\n \n ## profile-generate\n \n@@ -487,24 +487,24 @@ The list of passes should be separated by spaces.\n This flag controls whether [`rpath`](https://en.wikipedia.org/wiki/Rpath) is\n enabled. It takes one of the following values:\n \n-* `y`, `yes`, `on`, or no value: enable rpath.\n-* `n`, `no`, or `off`: disable rpath (the default).\n+* `y`, `yes`, `on`, `true` or no value: enable rpath.\n+* `n`, `no`, `off` or `false`: disable rpath (the default).\n \n ## save-temps\n \n This flag controls whether temporary files generated during compilation are\n deleted once compilation finishes. It takes one of the following values:\n \n-* `y`, `yes`, `on`, or no value: save temporary files.\n-* `n`, `no`, or `off`: delete temporary files (the default).\n+* `y`, `yes`, `on`, `true` or no value: save temporary files.\n+* `n`, `no`, `off` or `false`: delete temporary files (the default).\n \n ## soft-float\n \n This option controls whether `rustc` generates code that emulates floating\n point instructions in software. It takes one of the following values:\n \n-* `y`, `yes`, `on`, or no value: use soft floats.\n-* `n`, `no`, or `off`: use hardware floats (the default).\n+* `y`, `yes`, `on`, `true` or no value: use soft floats.\n+* `n`, `no`, `off` or `false`: use hardware floats (the default).\n \n ## split-debuginfo\n "}]}