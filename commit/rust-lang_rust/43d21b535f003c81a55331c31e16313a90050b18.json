{"sha": "43d21b535f003c81a55331c31e16313a90050b18", "node_id": "C_kwDOAAsO6NoAKDQzZDIxYjUzNWYwMDNjODFhNTUzMzFjMzFlMTYzMTNhOTAwNTBiMTg", "commit": {"author": {"name": "Nicholas Nethercote", "email": "n.nethercote@gmail.com", "date": "2022-11-04T02:52:44Z"}, "committer": {"name": "Nicholas Nethercote", "email": "n.nethercote@gmail.com", "date": "2022-11-05T02:56:36Z"}, "message": "Rename some `result` variables as `res`, for consistency.", "tree": {"sha": "04657890c0fff65c142278d65e349ec476ae0d9a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/04657890c0fff65c142278d65e349ec476ae0d9a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/43d21b535f003c81a55331c31e16313a90050b18", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/43d21b535f003c81a55331c31e16313a90050b18", "html_url": "https://github.com/rust-lang/rust/commit/43d21b535f003c81a55331c31e16313a90050b18", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/43d21b535f003c81a55331c31e16313a90050b18/comments", "author": {"login": "nnethercote", "id": 1940286, "node_id": "MDQ6VXNlcjE5NDAyODY=", "avatar_url": "https://avatars.githubusercontent.com/u/1940286?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nnethercote", "html_url": "https://github.com/nnethercote", "followers_url": "https://api.github.com/users/nnethercote/followers", "following_url": "https://api.github.com/users/nnethercote/following{/other_user}", "gists_url": "https://api.github.com/users/nnethercote/gists{/gist_id}", "starred_url": "https://api.github.com/users/nnethercote/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nnethercote/subscriptions", "organizations_url": "https://api.github.com/users/nnethercote/orgs", "repos_url": "https://api.github.com/users/nnethercote/repos", "events_url": "https://api.github.com/users/nnethercote/events{/privacy}", "received_events_url": "https://api.github.com/users/nnethercote/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nnethercote", "id": 1940286, "node_id": "MDQ6VXNlcjE5NDAyODY=", "avatar_url": "https://avatars.githubusercontent.com/u/1940286?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nnethercote", "html_url": "https://github.com/nnethercote", "followers_url": "https://api.github.com/users/nnethercote/followers", "following_url": "https://api.github.com/users/nnethercote/following{/other_user}", "gists_url": "https://api.github.com/users/nnethercote/gists{/gist_id}", "starred_url": "https://api.github.com/users/nnethercote/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nnethercote/subscriptions", "organizations_url": "https://api.github.com/users/nnethercote/orgs", "repos_url": "https://api.github.com/users/nnethercote/repos", "events_url": "https://api.github.com/users/nnethercote/events{/privacy}", "received_events_url": "https://api.github.com/users/nnethercote/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a838952239493d9dafe2d5f2ca1204f326841ae9", "url": "https://api.github.com/repos/rust-lang/rust/commits/a838952239493d9dafe2d5f2ca1204f326841ae9", "html_url": "https://github.com/rust-lang/rust/commit/a838952239493d9dafe2d5f2ca1204f326841ae9"}], "stats": {"total": 12, "additions": 6, "deletions": 6}, "files": [{"sha": "674bbff0878ceb6aac7fc1c33f4e39de08167660", "filename": "compiler/rustc_lexer/src/unescape.rs", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/43d21b535f003c81a55331c31e16313a90050b18/compiler%2Frustc_lexer%2Fsrc%2Funescape.rs", "raw_url": "https://github.com/rust-lang/rust/raw/43d21b535f003c81a55331c31e16313a90050b18/compiler%2Frustc_lexer%2Fsrc%2Funescape.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_lexer%2Fsrc%2Funescape.rs?ref=43d21b535f003c81a55331c31e16313a90050b18", "patch": "@@ -83,8 +83,8 @@ where\n     match mode {\n         Mode::Char | Mode::Byte => {\n             let mut chars = src.chars();\n-            let result = unescape_char_or_byte(&mut chars, mode == Mode::Byte);\n-            callback(0..(src.len() - chars.as_str().len()), result);\n+            let res = unescape_char_or_byte(&mut chars, mode == Mode::Byte);\n+            callback(0..(src.len() - chars.as_str().len()), res);\n         }\n         Mode::Str | Mode::ByteStr => unescape_str_or_byte_str(src, mode == Mode::ByteStr, callback),\n         Mode::RawStr | Mode::RawByteStr => {\n@@ -263,7 +263,7 @@ where\n     // them in the range computation.\n     while let Some(c) = chars.next() {\n         let start = src.len() - chars.as_str().len() - c.len_utf8();\n-        let result = match c {\n+        let res = match c {\n             '\\\\' => {\n                 match chars.clone().next() {\n                     Some('\\n') => {\n@@ -284,7 +284,7 @@ where\n             _ => ascii_check(c, is_byte),\n         };\n         let end = src.len() - chars.as_str().len();\n-        callback(start..end, result);\n+        callback(start..end, res);\n     }\n \n     fn skip_ascii_whitespace<F>(chars: &mut Chars<'_>, start: usize, callback: &mut F)\n@@ -329,12 +329,12 @@ where\n     // doesn't have to worry about skipping any chars.\n     while let Some(c) = chars.next() {\n         let start = src.len() - chars.as_str().len() - c.len_utf8();\n-        let result = match c {\n+        let res = match c {\n             '\\r' => Err(EscapeError::BareCarriageReturnInRawString),\n             _ => ascii_check(c, is_byte),\n         };\n         let end = src.len() - chars.as_str().len();\n-        callback(start..end, result);\n+        callback(start..end, res);\n     }\n }\n "}]}