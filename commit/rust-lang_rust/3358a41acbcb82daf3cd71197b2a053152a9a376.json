{"sha": "3358a41acbcb82daf3cd71197b2a053152a9a376", "node_id": "C_kwDOAAsO6NoAKDMzNThhNDFhY2JjYjgyZGFmM2NkNzExOTdiMmEwNTMxNTJhOWEzNzY", "commit": {"author": {"name": "Nilstrieb", "email": "48135649+Nilstrieb@users.noreply.github.com", "date": "2022-05-29T17:21:57Z"}, "committer": {"name": "Nilstrieb", "email": "48135649+Nilstrieb@users.noreply.github.com", "date": "2022-05-31T08:51:35Z"}, "message": "Add unicode fast path to `is_printable`\n\nBefore, it would enter the full expensive check even for normal ascii\ncharacters. Now, it skips the check for the ascii characters in\n`32..127`. This range was checked manually from the current behavior.", "tree": {"sha": "3eae0100aef267bc1f975ff3013e1d9c194ff119", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3eae0100aef267bc1f975ff3013e1d9c194ff119"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3358a41acbcb82daf3cd71197b2a053152a9a376", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3358a41acbcb82daf3cd71197b2a053152a9a376", "html_url": "https://github.com/rust-lang/rust/commit/3358a41acbcb82daf3cd71197b2a053152a9a376", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3358a41acbcb82daf3cd71197b2a053152a9a376/comments", "author": {"login": "Nilstrieb", "id": 48135649, "node_id": "MDQ6VXNlcjQ4MTM1NjQ5", "avatar_url": "https://avatars.githubusercontent.com/u/48135649?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Nilstrieb", "html_url": "https://github.com/Nilstrieb", "followers_url": "https://api.github.com/users/Nilstrieb/followers", "following_url": "https://api.github.com/users/Nilstrieb/following{/other_user}", "gists_url": "https://api.github.com/users/Nilstrieb/gists{/gist_id}", "starred_url": "https://api.github.com/users/Nilstrieb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Nilstrieb/subscriptions", "organizations_url": "https://api.github.com/users/Nilstrieb/orgs", "repos_url": "https://api.github.com/users/Nilstrieb/repos", "events_url": "https://api.github.com/users/Nilstrieb/events{/privacy}", "received_events_url": "https://api.github.com/users/Nilstrieb/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Nilstrieb", "id": 48135649, "node_id": "MDQ6VXNlcjQ4MTM1NjQ5", "avatar_url": "https://avatars.githubusercontent.com/u/48135649?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Nilstrieb", "html_url": "https://github.com/Nilstrieb", "followers_url": "https://api.github.com/users/Nilstrieb/followers", "following_url": "https://api.github.com/users/Nilstrieb/following{/other_user}", "gists_url": "https://api.github.com/users/Nilstrieb/gists{/gist_id}", "starred_url": "https://api.github.com/users/Nilstrieb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Nilstrieb/subscriptions", "organizations_url": "https://api.github.com/users/Nilstrieb/orgs", "repos_url": "https://api.github.com/users/Nilstrieb/repos", "events_url": "https://api.github.com/users/Nilstrieb/events{/privacy}", "received_events_url": "https://api.github.com/users/Nilstrieb/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9d1aeaeb827da7a10b7cfaccf0a1d6ebf414a7b5", "url": "https://api.github.com/repos/rust-lang/rust/commits/9d1aeaeb827da7a10b7cfaccf0a1d6ebf414a7b5", "html_url": "https://github.com/rust-lang/rust/commit/9d1aeaeb827da7a10b7cfaccf0a1d6ebf414a7b5"}], "stats": {"total": 33, "additions": 29, "deletions": 4}, "files": [{"sha": "ff726ff7559d892b2ac436f155ef85a50571e899", "filename": "library/core/benches/fmt.rs", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/3358a41acbcb82daf3cd71197b2a053152a9a376/library%2Fcore%2Fbenches%2Ffmt.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3358a41acbcb82daf3cd71197b2a053152a9a376/library%2Fcore%2Fbenches%2Ffmt.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fbenches%2Ffmt.rs?ref=3358a41acbcb82daf3cd71197b2a053152a9a376", "patch": "@@ -109,6 +109,17 @@ fn write_str_macro_debug(bh: &mut Bencher) {\n     });\n }\n \n+#[bench]\n+fn write_str_macro_debug_ascii(bh: &mut Bencher) {\n+    bh.iter(|| {\n+        let mut mem = String::new();\n+        let wr = &mut mem as &mut dyn fmt::Write;\n+        for _ in 0..1000 {\n+            write!(wr, \"{:?}\", \"Hello, World!\").unwrap();\n+        }\n+    });\n+}\n+\n #[bench]\n fn write_u128_max(bh: &mut Bencher) {\n     bh.iter(|| {"}, {"sha": "7c37f5f099c7f602711d80815df229fbdeed9cf6", "filename": "library/core/src/unicode/printable.py", "status": "modified", "additions": 9, "deletions": 2, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/3358a41acbcb82daf3cd71197b2a053152a9a376/library%2Fcore%2Fsrc%2Funicode%2Fprintable.py", "raw_url": "https://github.com/rust-lang/rust/raw/3358a41acbcb82daf3cd71197b2a053152a9a376/library%2Fcore%2Fsrc%2Funicode%2Fprintable.py", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Funicode%2Fprintable.py?ref=3358a41acbcb82daf3cd71197b2a053152a9a376", "patch": "@@ -170,7 +170,7 @@ def main():\n     normal1 = compress_normal(normal1)\n \n     print(\"\"\"\\\n-// NOTE: The following code was generated by \"src/libcore/unicode/printable.py\",\n+// NOTE: The following code was generated by \"library/core/src/unicode/printable.py\",\n //       do not edit directly!\n \n fn check(x: u16, singletonuppers: &[(u8, u8)], singletonlowers: &[u8], normal: &[u8]) -> bool {\n@@ -211,7 +211,14 @@ def main():\n pub(crate) fn is_printable(x: char) -> bool {\n     let x = x as u32;\n     let lower = x as u16;\n-    if x < 0x10000 {\n+\n+    if x < 32 {\n+        // ASCII fast path\n+        false\n+    } else if x < 127 {\n+        // ASCII fast path\n+        true\n+    } else if x < 0x10000 {\n         check(lower, SINGLETONS0U, SINGLETONS0L, NORMAL0)\n     } else if x < 0x20000 {\n         check(lower, SINGLETONS1U, SINGLETONS1L, NORMAL1)"}, {"sha": "31cf88a41497e01fc6d8e8cd0a6891f08fb66aaf", "filename": "library/core/src/unicode/printable.rs", "status": "modified", "additions": 9, "deletions": 2, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/3358a41acbcb82daf3cd71197b2a053152a9a376/library%2Fcore%2Fsrc%2Funicode%2Fprintable.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3358a41acbcb82daf3cd71197b2a053152a9a376/library%2Fcore%2Fsrc%2Funicode%2Fprintable.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Funicode%2Fprintable.rs?ref=3358a41acbcb82daf3cd71197b2a053152a9a376", "patch": "@@ -1,4 +1,4 @@\n-// NOTE: The following code was generated by \"src/libcore/unicode/printable.py\",\n+// NOTE: The following code was generated by \"library/core/src/unicode/printable.py\",\n //       do not edit directly!\n \n fn check(x: u16, singletonuppers: &[(u8, u8)], singletonlowers: &[u8], normal: &[u8]) -> bool {\n@@ -39,7 +39,14 @@ fn check(x: u16, singletonuppers: &[(u8, u8)], singletonlowers: &[u8], normal: &\n pub(crate) fn is_printable(x: char) -> bool {\n     let x = x as u32;\n     let lower = x as u16;\n-    if x < 0x10000 {\n+\n+    if x < 32 {\n+        // ASCII fast path\n+        false\n+    } else if x < 127 {\n+        // ASCII fast path\n+        true\n+    } else if x < 0x10000 {\n         check(lower, SINGLETONS0U, SINGLETONS0L, NORMAL0)\n     } else if x < 0x20000 {\n         check(lower, SINGLETONS1U, SINGLETONS1L, NORMAL1)"}]}