{"sha": "0e0f9311dacad865c43953a1015ac00a010e19df", "node_id": "MDY6Q29tbWl0NzI0NzEyOjBlMGY5MzExZGFjYWQ4NjVjNDM5NTNhMTAxNWFjMDBhMDEwZTE5ZGY=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2020-03-17T12:19:06Z"}, "committer": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2020-03-24T05:28:56Z"}, "message": "defatalize get_test_runner", "tree": {"sha": "47a2bdb387baf531c435b0595075d4d2314d3da1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/47a2bdb387baf531c435b0595075d4d2314d3da1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0e0f9311dacad865c43953a1015ac00a010e19df", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0e0f9311dacad865c43953a1015ac00a010e19df", "html_url": "https://github.com/rust-lang/rust/commit/0e0f9311dacad865c43953a1015ac00a010e19df", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0e0f9311dacad865c43953a1015ac00a010e19df/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2868045a28f959e612185022688c4469e0b752cd", "url": "https://api.github.com/repos/rust-lang/rust/commits/2868045a28f959e612185022688c4469e0b752cd", "html_url": "https://github.com/rust-lang/rust/commit/2868045a28f959e612185022688c4469e0b752cd"}], "stats": {"total": 20, "additions": 10, "deletions": 10}, "files": [{"sha": "160a5204eaf703d3352e6d6676ac4a3422d18e6b", "filename": "src/librustc_builtin_macros/test_harness.rs", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/0e0f9311dacad865c43953a1015ac00a010e19df/src%2Flibrustc_builtin_macros%2Ftest_harness.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0e0f9311dacad865c43953a1015ac00a010e19df/src%2Flibrustc_builtin_macros%2Ftest_harness.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_builtin_macros%2Ftest_harness.rs?ref=0e0f9311dacad865c43953a1015ac00a010e19df", "patch": "@@ -345,14 +345,14 @@ fn is_test_case(i: &ast::Item) -> bool {\n \n fn get_test_runner(sd: &rustc_errors::Handler, krate: &ast::Crate) -> Option<ast::Path> {\n     let test_attr = attr::find_by_name(&krate.attrs, sym::test_runner)?;\n-    test_attr.meta_item_list().map(|meta_list| {\n-        if meta_list.len() != 1 {\n-            sd.span_fatal(test_attr.span, \"`#![test_runner(..)]` accepts exactly 1 argument\")\n-                .raise()\n-        }\n-        match meta_list[0].meta_item() {\n-            Some(meta_item) if meta_item.is_word() => meta_item.path.clone(),\n-            _ => sd.span_fatal(test_attr.span, \"`test_runner` argument must be a path\").raise(),\n-        }\n-    })\n+    let meta_list = test_attr.meta_item_list()?;\n+    let span = test_attr.span;\n+    match &*meta_list {\n+        [single] => match single.meta_item() {\n+            Some(meta_item) if meta_item.is_word() => return Some(meta_item.path.clone()),\n+            _ => sd.struct_span_err(span, \"`test_runner` argument must be a path\").emit(),\n+        },\n+        _ => sd.struct_span_err(span, \"`#![test_runner(..)]` accepts exactly 1 argument\").emit(),\n+    }\n+    None\n }"}]}