{"sha": "7a5965b459ecbaa3ca702ebb9ae31b89ef449528", "node_id": "C_kwDOAAsO6NoAKDdhNTk2NWI0NTllY2JhYTNjYTcwMmViYjlhZTMxYjg5ZWY0NDk1Mjg", "commit": {"author": {"name": "Xiretza", "email": "xiretza@xiretza.xyz", "date": "2022-07-18T08:36:48Z"}, "committer": {"name": "Xiretza", "email": "xiretza@xiretza.xyz", "date": "2022-07-18T08:57:08Z"}, "message": "unused_self: respect avoid-breaking-exported-api", "tree": {"sha": "7f58d07fc00ae2e0d74aeda5bbd3963d925f9d56", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7f58d07fc00ae2e0d74aeda5bbd3963d925f9d56"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7a5965b459ecbaa3ca702ebb9ae31b89ef449528", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7a5965b459ecbaa3ca702ebb9ae31b89ef449528", "html_url": "https://github.com/rust-lang/rust/commit/7a5965b459ecbaa3ca702ebb9ae31b89ef449528", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7a5965b459ecbaa3ca702ebb9ae31b89ef449528/comments", "author": {"login": "Xiretza", "id": 3107142, "node_id": "MDQ6VXNlcjMxMDcxNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3107142?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Xiretza", "html_url": "https://github.com/Xiretza", "followers_url": "https://api.github.com/users/Xiretza/followers", "following_url": "https://api.github.com/users/Xiretza/following{/other_user}", "gists_url": "https://api.github.com/users/Xiretza/gists{/gist_id}", "starred_url": "https://api.github.com/users/Xiretza/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Xiretza/subscriptions", "organizations_url": "https://api.github.com/users/Xiretza/orgs", "repos_url": "https://api.github.com/users/Xiretza/repos", "events_url": "https://api.github.com/users/Xiretza/events{/privacy}", "received_events_url": "https://api.github.com/users/Xiretza/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Xiretza", "id": 3107142, "node_id": "MDQ6VXNlcjMxMDcxNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3107142?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Xiretza", "html_url": "https://github.com/Xiretza", "followers_url": "https://api.github.com/users/Xiretza/followers", "following_url": "https://api.github.com/users/Xiretza/following{/other_user}", "gists_url": "https://api.github.com/users/Xiretza/gists{/gist_id}", "starred_url": "https://api.github.com/users/Xiretza/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Xiretza/subscriptions", "organizations_url": "https://api.github.com/users/Xiretza/orgs", "repos_url": "https://api.github.com/users/Xiretza/repos", "events_url": "https://api.github.com/users/Xiretza/events{/privacy}", "received_events_url": "https://api.github.com/users/Xiretza/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "79a0d234fe9fc27961dc5fb9ff7b4c8806c71438", "url": "https://api.github.com/repos/rust-lang/rust/commits/79a0d234fe9fc27961dc5fb9ff7b4c8806c71438", "html_url": "https://github.com/rust-lang/rust/commit/79a0d234fe9fc27961dc5fb9ff7b4c8806c71438"}], "stats": {"total": 30, "additions": 26, "deletions": 4}, "files": [{"sha": "8444532f6bbf93b6b1bfd7abd29200a9498bd713", "filename": "clippy_lints/src/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7a5965b459ecbaa3ca702ebb9ae31b89ef449528/clippy_lints%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7a5965b459ecbaa3ca702ebb9ae31b89ef449528/clippy_lints%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Flib.rs?ref=7a5965b459ecbaa3ca702ebb9ae31b89ef449528", "patch": "@@ -782,7 +782,7 @@ pub fn register_plugins(store: &mut rustc_lint::LintStore, sess: &Session, conf:\n         ))\n     });\n     store.register_late_pass(|| Box::new(default::Default::default()));\n-    store.register_late_pass(|| Box::new(unused_self::UnusedSelf));\n+    store.register_late_pass(move || Box::new(unused_self::UnusedSelf::new(avoid_breaking_exported_api)));\n     store.register_late_pass(|| Box::new(mutable_debug_assertion::DebugAssertWithMutCall));\n     store.register_late_pass(|| Box::new(exit::Exit));\n     store.register_late_pass(|| Box::new(to_digit_is_some::ToDigitIsSome));"}, {"sha": "51c65d898cf5ffe8dc44758ddda8633576b4bd39", "filename": "clippy_lints/src/unused_self.rs", "status": "modified", "additions": 15, "deletions": 2, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/7a5965b459ecbaa3ca702ebb9ae31b89ef449528/clippy_lints%2Fsrc%2Funused_self.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7a5965b459ecbaa3ca702ebb9ae31b89ef449528/clippy_lints%2Fsrc%2Funused_self.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Funused_self.rs?ref=7a5965b459ecbaa3ca702ebb9ae31b89ef449528", "patch": "@@ -3,7 +3,7 @@ use clippy_utils::visitors::is_local_used;\n use if_chain::if_chain;\n use rustc_hir::{Impl, ImplItem, ImplItemKind, ItemKind};\n use rustc_lint::{LateContext, LateLintPass};\n-use rustc_session::{declare_lint_pass, declare_tool_lint};\n+use rustc_session::{declare_tool_lint, impl_lint_pass};\n \n declare_clippy_lint! {\n     /// ### What it does\n@@ -35,7 +35,19 @@ declare_clippy_lint! {\n     \"methods that contain a `self` argument but don't use it\"\n }\n \n-declare_lint_pass!(UnusedSelf => [UNUSED_SELF]);\n+pub struct UnusedSelf {\n+    avoid_breaking_exported_api: bool,\n+}\n+\n+impl_lint_pass!(UnusedSelf => [UNUSED_SELF]);\n+\n+impl UnusedSelf {\n+    pub fn new(avoid_breaking_exported_api: bool) -> Self {\n+        Self {\n+            avoid_breaking_exported_api,\n+        }\n+    }\n+}\n \n impl<'tcx> LateLintPass<'tcx> for UnusedSelf {\n     fn check_impl_item(&mut self, cx: &LateContext<'tcx>, impl_item: &ImplItem<'_>) {\n@@ -49,6 +61,7 @@ impl<'tcx> LateLintPass<'tcx> for UnusedSelf {\n             if let ItemKind::Impl(Impl { of_trait: None, .. }) = parent_item.kind;\n             if assoc_item.fn_has_self_parameter;\n             if let ImplItemKind::Fn(.., body_id) = &impl_item.kind;\n+            if !cx.access_levels.is_exported(impl_item.def_id) || !self.avoid_breaking_exported_api;\n             let body = cx.tcx.hir().body(*body_id);\n             if let [self_param, ..] = body.params;\n             if !is_local_used(cx, body, self_param.pat.hir_id);"}, {"sha": "6153dbbc88d191d4275949a01005b982de1e43d4", "filename": "clippy_lints/src/utils/conf.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7a5965b459ecbaa3ca702ebb9ae31b89ef449528/clippy_lints%2Fsrc%2Futils%2Fconf.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7a5965b459ecbaa3ca702ebb9ae31b89ef449528/clippy_lints%2Fsrc%2Futils%2Fconf.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Futils%2Fconf.rs?ref=7a5965b459ecbaa3ca702ebb9ae31b89ef449528", "patch": "@@ -191,7 +191,7 @@ macro_rules! define_Conf {\n }\n \n define_Conf! {\n-    /// Lint: ENUM_VARIANT_NAMES, LARGE_TYPES_PASSED_BY_VALUE, TRIVIALLY_COPY_PASS_BY_REF, UNNECESSARY_WRAPS, UPPER_CASE_ACRONYMS, WRONG_SELF_CONVENTION, BOX_COLLECTION, REDUNDANT_ALLOCATION, RC_BUFFER, VEC_BOX, OPTION_OPTION, LINKEDLIST, RC_MUTEX.\n+    /// Lint: ENUM_VARIANT_NAMES, LARGE_TYPES_PASSED_BY_VALUE, TRIVIALLY_COPY_PASS_BY_REF, UNNECESSARY_WRAPS, UNUSED_SELF, UPPER_CASE_ACRONYMS, WRONG_SELF_CONVENTION, BOX_COLLECTION, REDUNDANT_ALLOCATION, RC_BUFFER, VEC_BOX, OPTION_OPTION, LINKEDLIST, RC_MUTEX.\n     ///\n     /// Suppress lints whenever the suggested change would cause breakage for other crates.\n     (avoid_breaking_exported_api: bool = true),"}, {"sha": "92e8e1dba69dd0a963f33439d9f134ec5cd7b1bc", "filename": "tests/ui/unused_self.rs", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/7a5965b459ecbaa3ca702ebb9ae31b89ef449528/tests%2Fui%2Funused_self.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7a5965b459ecbaa3ca702ebb9ae31b89ef449528/tests%2Fui%2Funused_self.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Funused_self.rs?ref=7a5965b459ecbaa3ca702ebb9ae31b89ef449528", "patch": "@@ -53,8 +53,17 @@ mod unused_self_allow {\n         // shouldn't trigger\n         fn unused_self_move(self) {}\n     }\n+\n+    pub struct D;\n+\n+    impl D {\n+        // shouldn't trigger for public methods\n+        pub fn unused_self_move(self) {}\n+    }\n }\n \n+pub use unused_self_allow::D;\n+\n mod used_self {\n     use std::pin::Pin;\n "}]}