{"sha": "1a7ef02dcb65ee4aa9e7679ad0ce7e8a42bee6bf", "node_id": "C_kwDOAAsO6NoAKDFhN2VmMDJkY2I2NWVlNGFhOWU3Njc5YWQwY2U3ZThhNDJiZWU2YmY", "commit": {"author": {"name": "koka", "email": "koka.code@gmail.com", "date": "2023-01-09T09:49:46Z"}, "committer": {"name": "koka", "email": "koka.code@gmail.com", "date": "2023-01-09T09:49:46Z"}, "message": "Fix fp in unnecessary_safety_comment", "tree": {"sha": "b9cca57d336341b81288cb85780beb5bc24b7e97", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b9cca57d336341b81288cb85780beb5bc24b7e97"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1a7ef02dcb65ee4aa9e7679ad0ce7e8a42bee6bf", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCAAdFiEEhMJg5A6fhFMEoE5LbBJqIM8JYewFAmO7410ACgkQbBJqIM8J\nYewxbgv/RkbN/b08rPU7o6nmeWfRZGqI0SlKMoJZ4qGqJoWAVwGrRTq27I8+TZT4\n5zgxYvYSOOwR5q8CkCXs2mF7bsfvi/6y7TtKFGnSo6lpP79VL+aSm3VVX8ovW0yV\ngnLE78WuBki0uuJDmnvm/1+TlHq7istiE1Y24Dcf3cQZamcPpLzoj3hy6qgNpvA4\nkfkIXOB0XJ1LneCRkcnFZEJXa+jrrcGGlJ6ST3vPMo0mTegyNZiDByjEaVQyHLRG\nGy3Ofb4YmSgDsah0DCDCp6Dg5iFcfHOtxH6P4T7JSSDzxQz0tcpZiJNVa52j5BGA\nnJdEuR+o4R+uP2sOv4qU37Z+Zqpkn4qPWi55EYUDMmfoqGn/vW/3MbHCxCKBiisZ\nSbrwbMRhhn24bmmfydlaUNlj5BG/BWOxfHkVibVQQwri5NoWgUAh0wtWCG5Mc4au\nqdlbuI/8ahokWTif3+Wds9WB9xr7TzM8u6Q1cl5CwE23BHW95vyJ0mNRRnNjnS5K\nCnMSGY+H\n=LMP2\n-----END PGP SIGNATURE-----", "payload": "tree b9cca57d336341b81288cb85780beb5bc24b7e97\nparent d29c4c9f638f456a235a5bae632401b6d1bb3614\nauthor koka <koka.code@gmail.com> 1673257786 +0900\ncommitter koka <koka.code@gmail.com> 1673257786 +0900\n\nFix fp in unnecessary_safety_comment\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1a7ef02dcb65ee4aa9e7679ad0ce7e8a42bee6bf", "html_url": "https://github.com/rust-lang/rust/commit/1a7ef02dcb65ee4aa9e7679ad0ce7e8a42bee6bf", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1a7ef02dcb65ee4aa9e7679ad0ce7e8a42bee6bf/comments", "author": {"login": "koka831", "id": 14945055, "node_id": "MDQ6VXNlcjE0OTQ1MDU1", "avatar_url": "https://avatars.githubusercontent.com/u/14945055?v=4", "gravatar_id": "", "url": "https://api.github.com/users/koka831", "html_url": "https://github.com/koka831", "followers_url": "https://api.github.com/users/koka831/followers", "following_url": "https://api.github.com/users/koka831/following{/other_user}", "gists_url": "https://api.github.com/users/koka831/gists{/gist_id}", "starred_url": "https://api.github.com/users/koka831/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/koka831/subscriptions", "organizations_url": "https://api.github.com/users/koka831/orgs", "repos_url": "https://api.github.com/users/koka831/repos", "events_url": "https://api.github.com/users/koka831/events{/privacy}", "received_events_url": "https://api.github.com/users/koka831/received_events", "type": "User", "site_admin": false}, "committer": {"login": "koka831", "id": 14945055, "node_id": "MDQ6VXNlcjE0OTQ1MDU1", "avatar_url": "https://avatars.githubusercontent.com/u/14945055?v=4", "gravatar_id": "", "url": "https://api.github.com/users/koka831", "html_url": "https://github.com/koka831", "followers_url": "https://api.github.com/users/koka831/followers", "following_url": "https://api.github.com/users/koka831/following{/other_user}", "gists_url": "https://api.github.com/users/koka831/gists{/gist_id}", "starred_url": "https://api.github.com/users/koka831/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/koka831/subscriptions", "organizations_url": "https://api.github.com/users/koka831/orgs", "repos_url": "https://api.github.com/users/koka831/repos", "events_url": "https://api.github.com/users/koka831/events{/privacy}", "received_events_url": "https://api.github.com/users/koka831/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d29c4c9f638f456a235a5bae632401b6d1bb3614", "url": "https://api.github.com/repos/rust-lang/rust/commits/d29c4c9f638f456a235a5bae632401b6d1bb3614", "html_url": "https://github.com/rust-lang/rust/commit/d29c4c9f638f456a235a5bae632401b6d1bb3614"}], "stats": {"total": 29, "additions": 29, "deletions": 0}, "files": [{"sha": "2920684ade33cd89a98e949da70c3fa8a702694b", "filename": "clippy_lints/src/undocumented_unsafe_blocks.rs", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/1a7ef02dcb65ee4aa9e7679ad0ce7e8a42bee6bf/clippy_lints%2Fsrc%2Fundocumented_unsafe_blocks.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1a7ef02dcb65ee4aa9e7679ad0ce7e8a42bee6bf/clippy_lints%2Fsrc%2Fundocumented_unsafe_blocks.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fundocumented_unsafe_blocks.rs?ref=1a7ef02dcb65ee4aa9e7679ad0ce7e8a42bee6bf", "patch": "@@ -263,6 +263,18 @@ fn expr_has_unnecessary_safety_comment<'tcx>(\n     expr: &'tcx hir::Expr<'tcx>,\n     comment_pos: BytePos,\n ) -> Option<Span> {\n+    if cx.tcx.hir().parent_iter(expr.hir_id).any(|(_, ref node)| {\n+        matches!(\n+            node,\n+            Node::Block(&Block {\n+                rules: BlockCheckMode::UnsafeBlock(UnsafeSource::UserProvided),\n+                ..\n+            }),\n+        )\n+    }) {\n+        return None;\n+    }\n+\n     // this should roughly be the reverse of `block_parents_have_safety_comment`\n     if for_each_expr_with_closures(cx, expr, |expr| match expr.kind {\n         hir::ExprKind::Block("}, {"sha": "89fedb145f88bd2c75748559237c58477e0fe6a3", "filename": "tests/ui/unnecessary_safety_comment.rs", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/1a7ef02dcb65ee4aa9e7679ad0ce7e8a42bee6bf/tests%2Fui%2Funnecessary_safety_comment.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1a7ef02dcb65ee4aa9e7679ad0ce7e8a42bee6bf/tests%2Fui%2Funnecessary_safety_comment.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Funnecessary_safety_comment.rs?ref=1a7ef02dcb65ee4aa9e7679ad0ce7e8a42bee6bf", "patch": "@@ -48,4 +48,21 @@ fn unnecessary_on_stmt_and_expr() -> u32 {\n     24\n }\n \n+mod issue_10084 {\n+    unsafe fn bar() -> i32 {\n+        42\n+    }\n+\n+    macro_rules! foo {\n+        () => {\n+            // SAFETY: This is necessary\n+            unsafe { bar() }\n+        };\n+    }\n+\n+    fn main() {\n+        foo!();\n+    }\n+}\n+\n fn main() {}"}]}