{"sha": "78a3cefc45d74b4a8d2c8b688a273fcd3b729c6d", "node_id": "C_kwDOAAsO6NoAKDc4YTNjZWZjNDVkNzRiNGE4ZDJjOGI2ODhhMjczZmNkM2I3MjljNmQ", "commit": {"author": {"name": "Maybe Waffle", "email": "waffle.lapkin@gmail.com", "date": "2022-01-28T15:19:35Z"}, "committer": {"name": "Maybe Waffle", "email": "waffle.lapkin@gmail.com", "date": "2022-01-28T15:19:35Z"}, "message": "Use `compare_exchange_weak` in `limit::Limit::check`", "tree": {"sha": "f6e137ee0cc441be9639f10b4b22d1f317ccf652", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f6e137ee0cc441be9639f10b4b22d1f317ccf652"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/78a3cefc45d74b4a8d2c8b688a273fcd3b729c6d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/78a3cefc45d74b4a8d2c8b688a273fcd3b729c6d", "html_url": "https://github.com/rust-lang/rust/commit/78a3cefc45d74b4a8d2c8b688a273fcd3b729c6d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/78a3cefc45d74b4a8d2c8b688a273fcd3b729c6d/comments", "author": {"login": "WaffleLapkin", "id": 38225716, "node_id": "MDQ6VXNlcjM4MjI1NzE2", "avatar_url": "https://avatars.githubusercontent.com/u/38225716?v=4", "gravatar_id": "", "url": "https://api.github.com/users/WaffleLapkin", "html_url": "https://github.com/WaffleLapkin", "followers_url": "https://api.github.com/users/WaffleLapkin/followers", "following_url": "https://api.github.com/users/WaffleLapkin/following{/other_user}", "gists_url": "https://api.github.com/users/WaffleLapkin/gists{/gist_id}", "starred_url": "https://api.github.com/users/WaffleLapkin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/WaffleLapkin/subscriptions", "organizations_url": "https://api.github.com/users/WaffleLapkin/orgs", "repos_url": "https://api.github.com/users/WaffleLapkin/repos", "events_url": "https://api.github.com/users/WaffleLapkin/events{/privacy}", "received_events_url": "https://api.github.com/users/WaffleLapkin/received_events", "type": "User", "site_admin": false}, "committer": {"login": "WaffleLapkin", "id": 38225716, "node_id": "MDQ6VXNlcjM4MjI1NzE2", "avatar_url": "https://avatars.githubusercontent.com/u/38225716?v=4", "gravatar_id": "", "url": "https://api.github.com/users/WaffleLapkin", "html_url": "https://github.com/WaffleLapkin", "followers_url": "https://api.github.com/users/WaffleLapkin/followers", "following_url": "https://api.github.com/users/WaffleLapkin/following{/other_user}", "gists_url": "https://api.github.com/users/WaffleLapkin/gists{/gist_id}", "starred_url": "https://api.github.com/users/WaffleLapkin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/WaffleLapkin/subscriptions", "organizations_url": "https://api.github.com/users/WaffleLapkin/orgs", "repos_url": "https://api.github.com/users/WaffleLapkin/repos", "events_url": "https://api.github.com/users/WaffleLapkin/events{/privacy}", "received_events_url": "https://api.github.com/users/WaffleLapkin/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4aadabc735dea22e995f794e1a609240e14d64b5", "url": "https://api.github.com/repos/rust-lang/rust/commits/4aadabc735dea22e995f794e1a609240e14d64b5", "html_url": "https://github.com/rust-lang/rust/commit/4aadabc735dea22e995f794e1a609240e14d64b5"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "12228e105c1cc567d1c3d3d60c8bf1cafa880452", "filename": "crates/limit/src/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/78a3cefc45d74b4a8d2c8b688a273fcd3b729c6d/crates%2Flimit%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/78a3cefc45d74b4a8d2c8b688a273fcd3b729c6d/crates%2Flimit%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Flimit%2Fsrc%2Flib.rs?ref=78a3cefc45d74b4a8d2c8b688a273fcd3b729c6d", "patch": "@@ -45,7 +45,7 @@ impl Limit {\n                 }\n                 if self\n                     .max\n-                    .compare_exchange(old_max, other, Ordering::Relaxed, Ordering::Relaxed)\n+                    .compare_exchange_weak(old_max, other, Ordering::Relaxed, Ordering::Relaxed)\n                     .is_ok()\n                 {\n                     eprintln!(\"new max: {}\", other);"}]}