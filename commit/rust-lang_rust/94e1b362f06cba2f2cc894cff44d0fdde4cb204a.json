{"sha": "94e1b362f06cba2f2cc894cff44d0fdde4cb204a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjk0ZTFiMzYyZjA2Y2JhMmYyY2M4OTRjZmY0NGQwZmRkZTRjYjIwNGE=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2011-07-11T22:57:11Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2011-07-12T02:01:53Z"}, "message": "Pass command-line args to the test runner. Issue #428\n\nThis will let the test runner filter the tests it runs.", "tree": {"sha": "57be4d2131ff5b0b84ff54180549a8875a518567", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/57be4d2131ff5b0b84ff54180549a8875a518567"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/94e1b362f06cba2f2cc894cff44d0fdde4cb204a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/94e1b362f06cba2f2cc894cff44d0fdde4cb204a", "html_url": "https://github.com/rust-lang/rust/commit/94e1b362f06cba2f2cc894cff44d0fdde4cb204a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/94e1b362f06cba2f2cc894cff44d0fdde4cb204a/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2e46438507e95462f38f28c3a03acd5cd00e8890", "url": "https://api.github.com/repos/rust-lang/rust/commits/2e46438507e95462f38f28c3a03acd5cd00e8890", "html_url": "https://github.com/rust-lang/rust/commit/2e46438507e95462f38f28c3a03acd5cd00e8890"}], "stats": {"total": 35, "additions": 29, "deletions": 6}, "files": [{"sha": "ca7f3b69d7a91d65ad68d2e75bcadfdca2e0f2f7", "filename": "src/comp/front/test.rs", "status": "modified", "additions": 28, "deletions": 5, "changes": 33, "blob_url": "https://github.com/rust-lang/rust/blob/94e1b362f06cba2f2cc894cff44d0fdde4cb204a/src%2Fcomp%2Ffront%2Ftest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/94e1b362f06cba2f2cc894cff44d0fdde4cb204a/src%2Fcomp%2Ffront%2Ftest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Ffront%2Ftest.rs?ref=94e1b362f06cba2f2cc894cff44d0fdde4cb204a", "patch": "@@ -249,11 +249,20 @@ fn mk_test_desc_rec(&test_ctxt cx, ast::ident[] path) -> @ast::expr {\n }\n \n fn mk_main(&test_ctxt cx) -> @ast::item {\n-    auto ret_ty = @rec(node=ast::ty_int,\n-                       span=rec(lo=0u, hi=0u));\n \n-    let ast::fn_decl decl = rec(inputs = ~[],\n-                                output = ret_ty,\n+    let ast::mt args_mt = rec(ty = @nospan(ast::ty_str),\n+                              mut = ast::imm);\n+    let ast::ty args_ty = nospan(ast::ty_vec(args_mt));\n+\n+    let ast::arg args_arg = rec(mode = ast::val,\n+                                ty = @args_ty,\n+                                ident = \"args\",\n+                                id = cx.next_node_id());\n+\n+    auto ret_ty = nospan(ast::ty_int);\n+\n+    let ast::fn_decl decl = rec(inputs = ~[args_arg],\n+                                output = @ret_ty,\n                                 purity = ast::impure_fn,\n                                 cf = ast::return,\n                                 constraints = ~[]);\n@@ -281,6 +290,18 @@ fn mk_main(&test_ctxt cx) -> @ast::item {\n \n fn mk_test_main_call(&test_ctxt cx) -> @ast::expr {\n \n+    // Get the args passed to main so we can pass the to test_main\n+    let ast::path args_path = nospan(rec(global = false,\n+                                         idents = ~[\"args\"],\n+                                         types = ~[]));\n+\n+    let ast::expr_ args_path_expr_ = ast::expr_path(args_path);\n+\n+    let ast::expr args_path_expr = rec(id = cx.next_node_id(),\n+                                       node = args_path_expr_,\n+                                       span = rec(lo=0u, hi=0u));\n+\n+    // Call __test::test to generate the vector of test_descs\n     let ast::path test_path = nospan(rec(global = false,\n                                          idents = ~[\"tests\"],\n                                          types = ~[]));\n@@ -297,6 +318,7 @@ fn mk_test_main_call(&test_ctxt cx) -> @ast::expr {\n                                        node = test_call_expr_,\n                                        span = rec(lo=0u, hi=0u));\n \n+    // Call std::test::test_main\n     let ast::path test_main_path = nospan(rec(global = false,\n                                               idents = ~[\"std\",\n                                                          \"test\",\n@@ -311,7 +333,8 @@ fn mk_test_main_call(&test_ctxt cx) -> @ast::expr {\n                                             span = rec(lo=0u, hi=0u));\n \n     let ast::expr_ test_main_call_expr_ \n-        = ast::expr_call(@test_main_path_expr, ~[@test_call_expr]);\n+        = ast::expr_call(@test_main_path_expr, ~[@args_path_expr,\n+                                                 @test_call_expr]);\n \n     let ast::expr test_main_call_expr = rec(id = cx.next_node_id(),\n                                             node = test_main_call_expr_,"}, {"sha": "446902432e2ec68e9aafb5f19b6cee9180eafcb4", "filename": "src/lib/test.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/94e1b362f06cba2f2cc894cff44d0fdde4cb204a/src%2Flib%2Ftest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/94e1b362f06cba2f2cc894cff44d0fdde4cb204a/src%2Flib%2Ftest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flib%2Ftest.rs?ref=94e1b362f06cba2f2cc894cff44d0fdde4cb204a", "patch": "@@ -27,7 +27,7 @@ type test_desc = rec(test_name name,\n \n // The default console test runner. It accepts the command line\n // arguments and a vector of test_descs (generated at compile time).\n-fn test_main(&test_desc[] tests) -> int {\n+fn test_main(&vec[str] args, &test_desc[] tests) -> int {\n     if (run_tests(tests)) {\n         ret 0;\n     } else {"}]}