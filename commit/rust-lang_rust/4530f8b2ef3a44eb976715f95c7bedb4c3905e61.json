{"sha": "4530f8b2ef3a44eb976715f95c7bedb4c3905e61", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ1MzBmOGIyZWYzYTQ0ZWI5NzY3MTVmOTVjN2JlZGI0YzM5MDVlNjE=", "commit": {"author": {"name": "OGINO Masanori", "email": "masanori.ogino@gmail.com", "date": "2014-07-03T14:52:43Z"}, "committer": {"name": "OGINO Masanori", "email": "masanori.ogino@gmail.com", "date": "2014-07-03T15:18:30Z"}, "message": "Rename ctime to asctime and add *proper* ctime.\n\nIn C, `ctime(t)` is equivalent to `asctime(localtime(t))`, so the result\nshould depend on the local timezone. Current `ctime` is compatible with\n`asctime` in C, not `ctime`.\n\nThis commit renames `ctime` to `asctime` and adds `ctime` which converts\nthe time to the local timezone before formatting it.\n\nThis commit also fixes the documentation of them. Current documentation\nof `ctime` says it returns \"a string of the current time.\" However, it\nactually returns a string of the time represented as `self`, not the\ntime when it is called.\n\nSigned-off-by: OGINO Masanori <masanori.ogino@gmail.com>", "tree": {"sha": "3c2a2f46f9c2109add3c2272e5de5500336df709", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3c2a2f46f9c2109add3c2272e5de5500336df709"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4530f8b2ef3a44eb976715f95c7bedb4c3905e61", "comment_count": 5, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4530f8b2ef3a44eb976715f95c7bedb4c3905e61", "html_url": "https://github.com/rust-lang/rust/commit/4530f8b2ef3a44eb976715f95c7bedb4c3905e61", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4530f8b2ef3a44eb976715f95c7bedb4c3905e61/comments", "author": {"login": "omasanori", "id": 167209, "node_id": "MDQ6VXNlcjE2NzIwOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/167209?v=4", "gravatar_id": "", "url": "https://api.github.com/users/omasanori", "html_url": "https://github.com/omasanori", "followers_url": "https://api.github.com/users/omasanori/followers", "following_url": "https://api.github.com/users/omasanori/following{/other_user}", "gists_url": "https://api.github.com/users/omasanori/gists{/gist_id}", "starred_url": "https://api.github.com/users/omasanori/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/omasanori/subscriptions", "organizations_url": "https://api.github.com/users/omasanori/orgs", "repos_url": "https://api.github.com/users/omasanori/repos", "events_url": "https://api.github.com/users/omasanori/events{/privacy}", "received_events_url": "https://api.github.com/users/omasanori/received_events", "type": "User", "site_admin": false}, "committer": {"login": "omasanori", "id": 167209, "node_id": "MDQ6VXNlcjE2NzIwOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/167209?v=4", "gravatar_id": "", "url": "https://api.github.com/users/omasanori", "html_url": "https://github.com/omasanori", "followers_url": "https://api.github.com/users/omasanori/followers", "following_url": "https://api.github.com/users/omasanori/following{/other_user}", "gists_url": "https://api.github.com/users/omasanori/gists{/gist_id}", "starred_url": "https://api.github.com/users/omasanori/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/omasanori/subscriptions", "organizations_url": "https://api.github.com/users/omasanori/orgs", "repos_url": "https://api.github.com/users/omasanori/repos", "events_url": "https://api.github.com/users/omasanori/events{/privacy}", "received_events_url": "https://api.github.com/users/omasanori/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e6c54a12c4d209de9f438b4722657ca381f969a2", "url": "https://api.github.com/repos/rust-lang/rust/commits/e6c54a12c4d209de9f438b4722657ca381f969a2", "html_url": "https://github.com/rust-lang/rust/commit/e6c54a12c4d209de9f438b4722657ca381f969a2"}], "stats": {"total": 40, "additions": 35, "deletions": 5}, "files": [{"sha": "b7e2d83695b7f122b2a18605ece8339de57380de", "filename": "src/libtime/lib.rs", "status": "modified", "additions": 35, "deletions": 5, "changes": 40, "blob_url": "https://github.com/rust-lang/rust/blob/4530f8b2ef3a44eb976715f95c7bedb4c3905e61/src%2Flibtime%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4530f8b2ef3a44eb976715f95c7bedb4c3905e61/src%2Flibtime%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibtime%2Flib.rs?ref=4530f8b2ef3a44eb976715f95c7bedb4c3905e61", "patch": "@@ -316,10 +316,24 @@ impl Tm {\n     }\n \n     /**\n-     * Return a string of the current time in the form\n-     * \"Thu Jan  1 00:00:00 1970\".\n+     * Returns a time string formatted according to the `asctime` format in ISO\n+     * C, in the local timezone.\n+     *\n+     * Example: \"Thu Jan  1 00:00:00 1970\"\n+     */\n+    pub fn ctime(&self) -> String {\n+        self.to_local().asctime()\n+    }\n+\n+    /**\n+     * Returns a time string formatted according to the `asctime` format in ISO\n+     * C.\n+     *\n+     * Example: \"Thu Jan  1 00:00:00 1970\"\n      */\n-    pub fn ctime(&self) -> String { self.strftime(\"%c\") }\n+    pub fn asctime(&self) -> String {\n+        self.strftime(\"%c\")\n+    }\n \n     /// Formats the time according to the format string.\n     pub fn strftime(&self, format: &str) -> String {\n@@ -1371,6 +1385,19 @@ mod tests {\n         assert_eq!(strptime(\"360\", \"%Y-%m-%d\"), Err(\"Invalid year\".to_string()))\n     }\n \n+    fn test_asctime() {\n+        set_time_zone();\n+\n+        let time = Timespec::new(1234567890, 54321);\n+        let utc   = at_utc(time);\n+        let local = at(time);\n+\n+        debug!(\"test_ctime: {:?} {:?}\", utc.asctime(), local.asctime());\n+\n+        assert_eq!(utc.asctime(), \"Fri Feb 13 23:31:30 2009\".to_string());\n+        assert_eq!(local.asctime(), \"Fri Feb 13 15:31:30 2009\".to_string());\n+    }\n+\n     fn test_ctime() {\n         set_time_zone();\n \n@@ -1380,7 +1407,7 @@ mod tests {\n \n         debug!(\"test_ctime: {:?} {:?}\", utc.ctime(), local.ctime());\n \n-        assert_eq!(utc.ctime(), \"Fri Feb 13 23:31:30 2009\".to_string());\n+        assert_eq!(utc.ctime(), \"Fri Feb 13 15:31:30 2009\".to_string());\n         assert_eq!(local.ctime(), \"Fri Feb 13 15:31:30 2009\".to_string());\n     }\n \n@@ -1435,11 +1462,13 @@ mod tests {\n         assert_eq!(local.strftime(\"%z\"), \"-0800\".to_string());\n         assert_eq!(local.strftime(\"%%\"), \"%\".to_string());\n \n+        assert_eq!(local.asctime(), \"Fri Feb 13 15:31:30 2009\".to_string());\n         assert_eq!(local.ctime(), \"Fri Feb 13 15:31:30 2009\".to_string());\n         assert_eq!(local.rfc822z(), \"Fri, 13 Feb 2009 15:31:30 -0800\".to_string());\n         assert_eq!(local.rfc3339(), \"2009-02-13T15:31:30-08:00\".to_string());\n \n-        assert_eq!(utc.ctime(), \"Fri Feb 13 23:31:30 2009\".to_string());\n+        assert_eq!(utc.asctime(), \"Fri Feb 13 23:31:30 2009\".to_string());\n+        assert_eq!(utc.ctime(), \"Fri Feb 13 15:31:30 2009\".to_string());\n         assert_eq!(utc.rfc822(), \"Fri, 13 Feb 2009 23:31:30 GMT\".to_string());\n         assert_eq!(utc.rfc822z(), \"Fri, 13 Feb 2009 23:31:30 -0000\".to_string());\n         assert_eq!(utc.rfc3339(), \"2009-02-13T23:31:30Z\".to_string());\n@@ -1488,6 +1517,7 @@ mod tests {\n         test_to_timespec();\n         test_conversions();\n         test_strptime();\n+        test_asctime();\n         test_ctime();\n         test_strftime();\n         test_timespec_eq_ord();"}]}