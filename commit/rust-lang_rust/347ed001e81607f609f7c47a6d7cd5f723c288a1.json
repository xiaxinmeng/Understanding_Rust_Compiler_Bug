{"sha": "347ed001e81607f609f7c47a6d7cd5f723c288a1", "node_id": "MDY6Q29tbWl0NzI0NzEyOjM0N2VkMDAxZTgxNjA3ZjYwOWY3YzQ3YTZkN2NkNWY3MjNjMjg4YTE=", "commit": {"author": {"name": "Ali\u00e9nore Bouttefeux", "email": "alienore.bouttefeux@gmail.com", "date": "2021-05-03T12:55:22Z"}, "committer": {"name": "Ali\u00e9nore Bouttefeux", "email": "alienore.bouttefeux@gmail.com", "date": "2021-05-03T13:22:19Z"}, "message": "proof of concept add test type on prints", "tree": {"sha": "dc69b24543e1bbbd68b1ccac755ba365a562ca6d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/dc69b24543e1bbbd68b1ccac755ba365a562ca6d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/347ed001e81607f609f7c47a6d7cd5f723c288a1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/347ed001e81607f609f7c47a6d7cd5f723c288a1", "html_url": "https://github.com/rust-lang/rust/commit/347ed001e81607f609f7c47a6d7cd5f723c288a1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/347ed001e81607f609f7c47a6d7cd5f723c288a1/comments", "author": {"login": "ABouttefeux", "id": 77335613, "node_id": "MDQ6VXNlcjc3MzM1NjEz", "avatar_url": "https://avatars.githubusercontent.com/u/77335613?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ABouttefeux", "html_url": "https://github.com/ABouttefeux", "followers_url": "https://api.github.com/users/ABouttefeux/followers", "following_url": "https://api.github.com/users/ABouttefeux/following{/other_user}", "gists_url": "https://api.github.com/users/ABouttefeux/gists{/gist_id}", "starred_url": "https://api.github.com/users/ABouttefeux/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ABouttefeux/subscriptions", "organizations_url": "https://api.github.com/users/ABouttefeux/orgs", "repos_url": "https://api.github.com/users/ABouttefeux/repos", "events_url": "https://api.github.com/users/ABouttefeux/events{/privacy}", "received_events_url": "https://api.github.com/users/ABouttefeux/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ABouttefeux", "id": 77335613, "node_id": "MDQ6VXNlcjc3MzM1NjEz", "avatar_url": "https://avatars.githubusercontent.com/u/77335613?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ABouttefeux", "html_url": "https://github.com/ABouttefeux", "followers_url": "https://api.github.com/users/ABouttefeux/followers", "following_url": "https://api.github.com/users/ABouttefeux/following{/other_user}", "gists_url": "https://api.github.com/users/ABouttefeux/gists{/gist_id}", "starred_url": "https://api.github.com/users/ABouttefeux/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ABouttefeux/subscriptions", "organizations_url": "https://api.github.com/users/ABouttefeux/orgs", "repos_url": "https://api.github.com/users/ABouttefeux/repos", "events_url": "https://api.github.com/users/ABouttefeux/events{/privacy}", "received_events_url": "https://api.github.com/users/ABouttefeux/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "89ebad52a8b5a6d89d66a158d377cd7505ec4b48", "url": "https://api.github.com/repos/rust-lang/rust/commits/89ebad52a8b5a6d89d66a158d377cd7505ec4b48", "html_url": "https://github.com/rust-lang/rust/commit/89ebad52a8b5a6d89d66a158d377cd7505ec4b48"}], "stats": {"total": 232, "additions": 187, "deletions": 45}, "files": [{"sha": "99544ddb66e66f4445d7fec260b46aa435055017", "filename": "compiler/rustc_builtin_macros/src/test.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/347ed001e81607f609f7c47a6d7cd5f723c288a1/compiler%2Frustc_builtin_macros%2Fsrc%2Ftest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/347ed001e81607f609f7c47a6d7cd5f723c288a1/compiler%2Frustc_builtin_macros%2Fsrc%2Ftest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_builtin_macros%2Fsrc%2Ftest.rs?ref=347ed001e81607f609f7c47a6d7cd5f723c288a1", "patch": "@@ -254,6 +254,10 @@ pub fn expand_test_or_bench(\n                                         \"allow_fail\",\n                                         cx.expr_bool(sp, should_fail(&cx.sess, &item)),\n                                     ),\n+                                    // compile_fail: true | false\n+                                    field(\"compile_fail\", cx.expr_bool(sp, false)),\n+                                    // no_run: true | false\n+                                    field(\"no_run\", cx.expr_bool(sp, false)),\n                                     // should_panic: ...\n                                     field(\n                                         \"should_panic\","}, {"sha": "00d4b18b3023213be2baa357c1aaa7694281275c", "filename": "library/test/src/formatters/pretty.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/347ed001e81607f609f7c47a6d7cd5f723c288a1/library%2Ftest%2Fsrc%2Fformatters%2Fpretty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/347ed001e81607f609f7c47a6d7cd5f723c288a1/library%2Ftest%2Fsrc%2Fformatters%2Fpretty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Ftest%2Fsrc%2Fformatters%2Fpretty.rs?ref=347ed001e81607f609f7c47a6d7cd5f723c288a1", "patch": "@@ -169,7 +169,7 @@ impl<T: Write> PrettyFormatter<T> {\n \n     fn write_test_name(&mut self, desc: &TestDesc) -> io::Result<()> {\n         let name = desc.padded_name(self.max_name_len, desc.name.padding());\n-        self.write_plain(&format!(\"test {} ... \", name))?;\n+        self.write_plain(&format!(\"test {} {} ... \", name, desc.test_mode_string()))?;\n \n         Ok(())\n     }"}, {"sha": "a68ceb404f9f76323aae3274e05a214ebf9b8b46", "filename": "library/test/src/formatters/terse.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/347ed001e81607f609f7c47a6d7cd5f723c288a1/library%2Ftest%2Fsrc%2Fformatters%2Fterse.rs", "raw_url": "https://github.com/rust-lang/rust/raw/347ed001e81607f609f7c47a6d7cd5f723c288a1/library%2Ftest%2Fsrc%2Fformatters%2Fterse.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Ftest%2Fsrc%2Fformatters%2Fterse.rs?ref=347ed001e81607f609f7c47a6d7cd5f723c288a1", "patch": "@@ -158,7 +158,7 @@ impl<T: Write> TerseFormatter<T> {\n \n     fn write_test_name(&mut self, desc: &TestDesc) -> io::Result<()> {\n         let name = desc.padded_name(self.max_name_len, desc.name.padding());\n-        self.write_plain(&format!(\"test {} ... \", name))?;\n+        self.write_plain(&format!(\"test {} {} ... \", name, desc.test_mode_string()))?;\n \n         Ok(())\n     }"}, {"sha": "794f72770047646780b7478956dd2e74979f8c4c", "filename": "library/test/src/tests.rs", "status": "modified", "additions": 38, "deletions": 0, "changes": 38, "blob_url": "https://github.com/rust-lang/rust/blob/347ed001e81607f609f7c47a6d7cd5f723c288a1/library%2Ftest%2Fsrc%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/347ed001e81607f609f7c47a6d7cd5f723c288a1/library%2Ftest%2Fsrc%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Ftest%2Fsrc%2Ftests.rs?ref=347ed001e81607f609f7c47a6d7cd5f723c288a1", "patch": "@@ -61,6 +61,8 @@ fn one_ignored_one_unignored_test() -> Vec<TestDescAndFn> {\n                 ignore: true,\n                 should_panic: ShouldPanic::No,\n                 allow_fail: false,\n+                compile_fail: false,\n+                no_run: false,\n                 test_type: TestType::Unknown,\n             },\n             testfn: DynTestFn(Box::new(move || {})),\n@@ -71,6 +73,8 @@ fn one_ignored_one_unignored_test() -> Vec<TestDescAndFn> {\n                 ignore: false,\n                 should_panic: ShouldPanic::No,\n                 allow_fail: false,\n+                compile_fail: false,\n+                no_run: false,\n                 test_type: TestType::Unknown,\n             },\n             testfn: DynTestFn(Box::new(move || {})),\n@@ -89,6 +93,8 @@ pub fn do_not_run_ignored_tests() {\n             ignore: true,\n             should_panic: ShouldPanic::No,\n             allow_fail: false,\n+            compile_fail: false,\n+            no_run: false,\n             test_type: TestType::Unknown,\n         },\n         testfn: DynTestFn(Box::new(f)),\n@@ -108,6 +114,8 @@ pub fn ignored_tests_result_in_ignored() {\n             ignore: true,\n             should_panic: ShouldPanic::No,\n             allow_fail: false,\n+            compile_fail: false,\n+            no_run: false,\n             test_type: TestType::Unknown,\n         },\n         testfn: DynTestFn(Box::new(f)),\n@@ -131,6 +139,8 @@ fn test_should_panic() {\n             ignore: false,\n             should_panic: ShouldPanic::Yes,\n             allow_fail: false,\n+            compile_fail: false,\n+            no_run: false,\n             test_type: TestType::Unknown,\n         },\n         testfn: DynTestFn(Box::new(f)),\n@@ -154,6 +164,8 @@ fn test_should_panic_good_message() {\n             ignore: false,\n             should_panic: ShouldPanic::YesWithMessage(\"error message\"),\n             allow_fail: false,\n+            compile_fail: false,\n+            no_run: false,\n             test_type: TestType::Unknown,\n         },\n         testfn: DynTestFn(Box::new(f)),\n@@ -182,6 +194,8 @@ fn test_should_panic_bad_message() {\n             ignore: false,\n             should_panic: ShouldPanic::YesWithMessage(expected),\n             allow_fail: false,\n+            compile_fail: false,\n+            no_run: false,\n             test_type: TestType::Unknown,\n         },\n         testfn: DynTestFn(Box::new(f)),\n@@ -214,6 +228,8 @@ fn test_should_panic_non_string_message_type() {\n             ignore: false,\n             should_panic: ShouldPanic::YesWithMessage(expected),\n             allow_fail: false,\n+            compile_fail: false,\n+            no_run: false,\n             test_type: TestType::Unknown,\n         },\n         testfn: DynTestFn(Box::new(f)),\n@@ -238,6 +254,8 @@ fn test_should_panic_but_succeeds() {\n                 ignore: false,\n                 should_panic,\n                 allow_fail: false,\n+                compile_fail: false,\n+                no_run: false,\n                 test_type: TestType::Unknown,\n             },\n             testfn: DynTestFn(Box::new(f)),\n@@ -270,6 +288,8 @@ fn report_time_test_template(report_time: bool) -> Option<TestExecTime> {\n             ignore: false,\n             should_panic: ShouldPanic::No,\n             allow_fail: false,\n+            compile_fail: false,\n+            no_run: false,\n             test_type: TestType::Unknown,\n         },\n         testfn: DynTestFn(Box::new(f)),\n@@ -303,6 +323,8 @@ fn time_test_failure_template(test_type: TestType) -> TestResult {\n             ignore: false,\n             should_panic: ShouldPanic::No,\n             allow_fail: false,\n+            compile_fail: false,\n+            no_run: false,\n             test_type,\n         },\n         testfn: DynTestFn(Box::new(f)),\n@@ -340,6 +362,8 @@ fn typed_test_desc(test_type: TestType) -> TestDesc {\n         ignore: false,\n         should_panic: ShouldPanic::No,\n         allow_fail: false,\n+        compile_fail: false,\n+        no_run: false,\n         test_type,\n     }\n }\n@@ -451,6 +475,8 @@ pub fn exclude_should_panic_option() {\n             ignore: false,\n             should_panic: ShouldPanic::Yes,\n             allow_fail: false,\n+            compile_fail: false,\n+            no_run: false,\n             test_type: TestType::Unknown,\n         },\n         testfn: DynTestFn(Box::new(move || {})),\n@@ -473,6 +499,8 @@ pub fn exact_filter_match() {\n                     ignore: false,\n                     should_panic: ShouldPanic::No,\n                     allow_fail: false,\n+                    compile_fail: false,\n+                    no_run: false,\n                     test_type: TestType::Unknown,\n                 },\n                 testfn: DynTestFn(Box::new(move || {})),\n@@ -565,6 +593,8 @@ pub fn sort_tests() {\n                     ignore: false,\n                     should_panic: ShouldPanic::No,\n                     allow_fail: false,\n+                    compile_fail: false,\n+                    no_run: false,\n                     test_type: TestType::Unknown,\n                 },\n                 testfn: DynTestFn(Box::new(testfn)),\n@@ -642,6 +672,8 @@ pub fn test_bench_no_iter() {\n         ignore: false,\n         should_panic: ShouldPanic::No,\n         allow_fail: false,\n+        compile_fail: false,\n+        no_run: false,\n         test_type: TestType::Unknown,\n     };\n \n@@ -662,6 +694,8 @@ pub fn test_bench_iter() {\n         ignore: false,\n         should_panic: ShouldPanic::No,\n         allow_fail: false,\n+        compile_fail: false,\n+        no_run: false,\n         test_type: TestType::Unknown,\n     };\n \n@@ -676,6 +710,8 @@ fn should_sort_failures_before_printing_them() {\n         ignore: false,\n         should_panic: ShouldPanic::No,\n         allow_fail: false,\n+        compile_fail: false,\n+        no_run: false,\n         test_type: TestType::Unknown,\n     };\n \n@@ -684,6 +720,8 @@ fn should_sort_failures_before_printing_them() {\n         ignore: false,\n         should_panic: ShouldPanic::No,\n         allow_fail: false,\n+        compile_fail: false,\n+        no_run: false,\n         test_type: TestType::Unknown,\n     };\n "}, {"sha": "61c644f7972f818a627627801543522d898d6ff4", "filename": "library/test/src/types.rs", "status": "modified", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/347ed001e81607f609f7c47a6d7cd5f723c288a1/library%2Ftest%2Fsrc%2Ftypes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/347ed001e81607f609f7c47a6d7cd5f723c288a1/library%2Ftest%2Fsrc%2Ftypes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Ftest%2Fsrc%2Ftypes.rs?ref=347ed001e81607f609f7c47a6d7cd5f723c288a1", "patch": "@@ -124,6 +124,8 @@ pub struct TestDesc {\n     pub ignore: bool,\n     pub should_panic: options::ShouldPanic,\n     pub allow_fail: bool,\n+    pub compile_fail: bool,\n+    pub no_run: bool,\n     pub test_type: TestType,\n }\n \n@@ -140,6 +142,28 @@ impl TestDesc {\n             }\n         }\n     }\n+\n+    pub fn test_mode_string(&self) -> String {\n+        if self.ignore {\n+            return \"ignore\".to_string();\n+        }\n+        match self.should_panic {\n+            options::ShouldPanic::Yes | options::ShouldPanic::YesWithMessage(_) => {\n+                return \"should panic\".to_string();\n+            }\n+            _ => {}\n+        }\n+        if self.allow_fail {\n+            return \"allow fail\".to_string();\n+        }\n+        if self.compile_fail {\n+            return \"compile fail\".to_string();\n+        }\n+        if self.no_run {\n+            return \"compile\".to_string();\n+        }\n+        \"run\".to_string()\n+    }\n }\n \n #[derive(Debug)]"}, {"sha": "8ef9170f9194582707c859dfe3b46ea0627571a3", "filename": "src/librustdoc/doctest.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/347ed001e81607f609f7c47a6d7cd5f723c288a1/src%2Flibrustdoc%2Fdoctest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/347ed001e81607f609f7c47a6d7cd5f723c288a1/src%2Flibrustdoc%2Fdoctest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fdoctest.rs?ref=347ed001e81607f609f7c47a6d7cd5f723c288a1", "patch": "@@ -879,6 +879,7 @@ impl Tester for Collector {\n         let target = self.options.target.clone();\n         let target_str = target.to_string();\n         let unused_externs = self.unused_extern_reports.clone();\n+        let no_run = config.no_run || options.no_run;\n         if !config.compile_fail {\n             self.compiling_test_count.fetch_add(1, Ordering::SeqCst);\n         }\n@@ -934,13 +935,14 @@ impl Tester for Collector {\n                 // compiler failures are test failures\n                 should_panic: testing::ShouldPanic::No,\n                 allow_fail: config.allow_fail,\n+                compile_fail: config.compile_fail,\n+                no_run,\n                 test_type: testing::TestType::DocTest,\n             },\n             testfn: testing::DynTestFn(box move || {\n                 let report_unused_externs = |uext| {\n                     unused_externs.lock().unwrap().push(uext);\n                 };\n-                let no_run = config.no_run || options.no_run;\n                 let res = run_test(\n                     &test,\n                     &cratename,"}, {"sha": "fdd754609ef8c51ede9e6d1b266c7c434ca66917", "filename": "src/test/rustdoc-ui/cfg-test.stdout", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/347ed001e81607f609f7c47a6d7cd5f723c288a1/src%2Ftest%2Frustdoc-ui%2Fcfg-test.stdout", "raw_url": "https://github.com/rust-lang/rust/raw/347ed001e81607f609f7c47a6d7cd5f723c288a1/src%2Ftest%2Frustdoc-ui%2Fcfg-test.stdout", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-ui%2Fcfg-test.stdout?ref=347ed001e81607f609f7c47a6d7cd5f723c288a1", "patch": "@@ -1,7 +1,7 @@\n \n running 2 tests\n-test $DIR/cfg-test.rs - Bar (line 27) ... ok\n-test $DIR/cfg-test.rs - Foo (line 19) ... ok\n+test $DIR/cfg-test.rs - Bar (line 27) run ... ok\n+test $DIR/cfg-test.rs - Foo (line 19) run ... ok\n \n test result: ok. 2 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in $TIME\n "}, {"sha": "ecf5dcd056a32b7a36351d2e0cd202cdbab2869e", "filename": "src/test/rustdoc-ui/doc-test-doctest-feature.stdout", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/347ed001e81607f609f7c47a6d7cd5f723c288a1/src%2Ftest%2Frustdoc-ui%2Fdoc-test-doctest-feature.stdout", "raw_url": "https://github.com/rust-lang/rust/raw/347ed001e81607f609f7c47a6d7cd5f723c288a1/src%2Ftest%2Frustdoc-ui%2Fdoc-test-doctest-feature.stdout", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-ui%2Fdoc-test-doctest-feature.stdout?ref=347ed001e81607f609f7c47a6d7cd5f723c288a1", "patch": "@@ -1,6 +1,6 @@\n \n running 1 test\n-test $DIR/doc-test-doctest-feature.rs - Foo (line 9) ... ok\n+test $DIR/doc-test-doctest-feature.rs - Foo (line 9) run ... ok\n \n test result: ok. 1 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in $TIME\n "}, {"sha": "7f900cb28580138a8dead677879e78be9bd29037", "filename": "src/test/rustdoc-ui/doc-test-rustdoc-feature.stdout", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/347ed001e81607f609f7c47a6d7cd5f723c288a1/src%2Ftest%2Frustdoc-ui%2Fdoc-test-rustdoc-feature.stdout", "raw_url": "https://github.com/rust-lang/rust/raw/347ed001e81607f609f7c47a6d7cd5f723c288a1/src%2Ftest%2Frustdoc-ui%2Fdoc-test-rustdoc-feature.stdout", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-ui%2Fdoc-test-rustdoc-feature.stdout?ref=347ed001e81607f609f7c47a6d7cd5f723c288a1", "patch": "@@ -1,6 +1,6 @@\n \n running 1 test\n-test $DIR/doc-test-rustdoc-feature.rs - Foo (line 10) ... ok\n+test $DIR/doc-test-rustdoc-feature.rs - Foo (line 10) run ... ok\n \n test result: ok. 1 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in $TIME\n "}, {"sha": "1b5857d251b4056ca0066f79fb110a47f4aa0686", "filename": "src/test/rustdoc-ui/doctest-output.stdout", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/347ed001e81607f609f7c47a6d7cd5f723c288a1/src%2Ftest%2Frustdoc-ui%2Fdoctest-output.stdout", "raw_url": "https://github.com/rust-lang/rust/raw/347ed001e81607f609f7c47a6d7cd5f723c288a1/src%2Ftest%2Frustdoc-ui%2Fdoctest-output.stdout", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-ui%2Fdoctest-output.stdout?ref=347ed001e81607f609f7c47a6d7cd5f723c288a1", "patch": "@@ -1,8 +1,8 @@\n \n running 3 tests\n-test $DIR/doctest-output.rs - (line 8) ... ok\n-test $DIR/doctest-output.rs - ExpandedStruct (line 24) ... ok\n-test $DIR/doctest-output.rs - foo::bar (line 18) ... ok\n+test $DIR/doctest-output.rs - (line 8) run ... ok\n+test $DIR/doctest-output.rs - ExpandedStruct (line 24) run ... ok\n+test $DIR/doctest-output.rs - foo::bar (line 18) run ... ok\n \n test result: ok. 3 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in $TIME\n "}, {"sha": "dc811df609cc5a37f5d66e5c213bb29959f38469", "filename": "src/test/rustdoc-ui/failed-doctest-compile-fail.stdout", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/347ed001e81607f609f7c47a6d7cd5f723c288a1/src%2Ftest%2Frustdoc-ui%2Ffailed-doctest-compile-fail.stdout", "raw_url": "https://github.com/rust-lang/rust/raw/347ed001e81607f609f7c47a6d7cd5f723c288a1/src%2Ftest%2Frustdoc-ui%2Ffailed-doctest-compile-fail.stdout", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-ui%2Ffailed-doctest-compile-fail.stdout?ref=347ed001e81607f609f7c47a6d7cd5f723c288a1", "patch": "@@ -1,6 +1,6 @@\n \n running 1 test\n-test $DIR/failed-doctest-compile-fail.rs - Foo (line 9) ... FAILED\n+test $DIR/failed-doctest-compile-fail.rs - Foo (line 9) compile fail ... FAILED\n \n failures:\n "}, {"sha": "a76511eb29e7d1bf6f199654ec65c63aee1e71c3", "filename": "src/test/rustdoc-ui/failed-doctest-missing-codes.stdout", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/347ed001e81607f609f7c47a6d7cd5f723c288a1/src%2Ftest%2Frustdoc-ui%2Ffailed-doctest-missing-codes.stdout", "raw_url": "https://github.com/rust-lang/rust/raw/347ed001e81607f609f7c47a6d7cd5f723c288a1/src%2Ftest%2Frustdoc-ui%2Ffailed-doctest-missing-codes.stdout", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-ui%2Ffailed-doctest-missing-codes.stdout?ref=347ed001e81607f609f7c47a6d7cd5f723c288a1", "patch": "@@ -1,6 +1,6 @@\n \n running 1 test\n-test $DIR/failed-doctest-missing-codes.rs - Foo (line 9) ... FAILED\n+test $DIR/failed-doctest-missing-codes.rs - Foo (line 9) compile fail ... FAILED\n \n failures:\n "}, {"sha": "83c8c5301e00683dfaba6bbb3ea7ea49671c0c72", "filename": "src/test/rustdoc-ui/failed-doctest-output.stdout", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/347ed001e81607f609f7c47a6d7cd5f723c288a1/src%2Ftest%2Frustdoc-ui%2Ffailed-doctest-output.stdout", "raw_url": "https://github.com/rust-lang/rust/raw/347ed001e81607f609f7c47a6d7cd5f723c288a1/src%2Ftest%2Frustdoc-ui%2Ffailed-doctest-output.stdout", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-ui%2Ffailed-doctest-output.stdout?ref=347ed001e81607f609f7c47a6d7cd5f723c288a1", "patch": "@@ -1,7 +1,7 @@\n \n running 2 tests\n-test $DIR/failed-doctest-output.rs - OtherStruct (line 22) ... FAILED\n-test $DIR/failed-doctest-output.rs - SomeStruct (line 12) ... FAILED\n+test $DIR/failed-doctest-output.rs - OtherStruct (line 22) run ... FAILED\n+test $DIR/failed-doctest-output.rs - SomeStruct (line 12) run ... FAILED\n \n failures:\n "}, {"sha": "e3d0216441b84dfa77bcb2b3453a6a40b8eabdd3", "filename": "src/test/rustdoc-ui/failed-doctest-should-panic.stdout", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/347ed001e81607f609f7c47a6d7cd5f723c288a1/src%2Ftest%2Frustdoc-ui%2Ffailed-doctest-should-panic.stdout", "raw_url": "https://github.com/rust-lang/rust/raw/347ed001e81607f609f7c47a6d7cd5f723c288a1/src%2Ftest%2Frustdoc-ui%2Ffailed-doctest-should-panic.stdout", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-ui%2Ffailed-doctest-should-panic.stdout?ref=347ed001e81607f609f7c47a6d7cd5f723c288a1", "patch": "@@ -1,6 +1,6 @@\n \n running 1 test\n-test $DIR/failed-doctest-should-panic.rs - Foo (line 9) ... FAILED\n+test $DIR/failed-doctest-should-panic.rs - Foo (line 9) run ... FAILED\n \n failures:\n "}, {"sha": "e7110dee4fb077adef5bab706a02381ebf63ff72", "filename": "src/test/rustdoc-ui/issue-80992.stdout", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/347ed001e81607f609f7c47a6d7cd5f723c288a1/src%2Ftest%2Frustdoc-ui%2Fissue-80992.stdout", "raw_url": "https://github.com/rust-lang/rust/raw/347ed001e81607f609f7c47a6d7cd5f723c288a1/src%2Ftest%2Frustdoc-ui%2Fissue-80992.stdout", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-ui%2Fissue-80992.stdout?ref=347ed001e81607f609f7c47a6d7cd5f723c288a1", "patch": "@@ -1,6 +1,6 @@\n \n running 1 test\n-test $DIR/issue-80992.rs - test (line 7) ... ok\n+test $DIR/issue-80992.rs - test (line 7) compile fail ... ok\n \n test result: ok. 1 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in $TIME\n "}, {"sha": "3c2901e70f0ee40496bb22eff8a48ac0fff17d57", "filename": "src/test/rustdoc-ui/issue-81662-shortness.stdout", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/347ed001e81607f609f7c47a6d7cd5f723c288a1/src%2Ftest%2Frustdoc-ui%2Fissue-81662-shortness.stdout", "raw_url": "https://github.com/rust-lang/rust/raw/347ed001e81607f609f7c47a6d7cd5f723c288a1/src%2Ftest%2Frustdoc-ui%2Fissue-81662-shortness.stdout", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-ui%2Fissue-81662-shortness.stdout?ref=347ed001e81607f609f7c47a6d7cd5f723c288a1", "patch": "@@ -1,6 +1,6 @@\n \n running 1 test\n-test $DIR/issue-81662-shortness.rs - foo (line 6) ... FAILED\n+test $DIR/issue-81662-shortness.rs - foo (line 6) run ... FAILED\n \n failures:\n "}, {"sha": "418691e4f0cbe8cdc1083706a31be4bd691dc0d5", "filename": "src/test/rustdoc-ui/no-run-flag.stdout", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/347ed001e81607f609f7c47a6d7cd5f723c288a1/src%2Ftest%2Frustdoc-ui%2Fno-run-flag.stdout", "raw_url": "https://github.com/rust-lang/rust/raw/347ed001e81607f609f7c47a6d7cd5f723c288a1/src%2Ftest%2Frustdoc-ui%2Fno-run-flag.stdout", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-ui%2Fno-run-flag.stdout?ref=347ed001e81607f609f7c47a6d7cd5f723c288a1", "patch": "@@ -1,12 +1,12 @@\n \n running 7 tests\n-test $DIR/no-run-flag.rs - f (line 11) ... ok\n-test $DIR/no-run-flag.rs - f (line 14) ... ignored\n-test $DIR/no-run-flag.rs - f (line 17) ... ok\n-test $DIR/no-run-flag.rs - f (line 23) ... ok\n-test $DIR/no-run-flag.rs - f (line 28) ... ok\n-test $DIR/no-run-flag.rs - f (line 32) ... ok\n-test $DIR/no-run-flag.rs - f (line 8) ... ok\n+test $DIR/no-run-flag.rs - f (line 11) compile ... ok\n+test $DIR/no-run-flag.rs - f (line 14) ignore ... ignored\n+test $DIR/no-run-flag.rs - f (line 17) compile ... ok\n+test $DIR/no-run-flag.rs - f (line 23) compile fail ... ok\n+test $DIR/no-run-flag.rs - f (line 28) compile ... ok\n+test $DIR/no-run-flag.rs - f (line 32) compile ... ok\n+test $DIR/no-run-flag.rs - f (line 8) compile ... ok\n \n test result: ok. 6 passed; 0 failed; 1 ignored; 0 measured; 0 filtered out; finished in $TIME\n "}, {"sha": "a5bc41ece99123e00941e83dfd6322b7e551d1c4", "filename": "src/test/rustdoc-ui/run-directory.correct.stdout", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/347ed001e81607f609f7c47a6d7cd5f723c288a1/src%2Ftest%2Frustdoc-ui%2Frun-directory.correct.stdout", "raw_url": "https://github.com/rust-lang/rust/raw/347ed001e81607f609f7c47a6d7cd5f723c288a1/src%2Ftest%2Frustdoc-ui%2Frun-directory.correct.stdout", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-ui%2Frun-directory.correct.stdout?ref=347ed001e81607f609f7c47a6d7cd5f723c288a1", "patch": "@@ -1,6 +1,6 @@\n \n running 1 test\n-test $DIR/run-directory.rs - foo (line 10) ... ok\n+test $DIR/run-directory.rs - foo (line 10) run ... ok\n \n test result: ok. 1 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in $TIME\n "}, {"sha": "542043bc43758e9afedcc3d00fa1500a8b49a6db", "filename": "src/test/rustdoc-ui/run-directory.incorrect.stdout", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/347ed001e81607f609f7c47a6d7cd5f723c288a1/src%2Ftest%2Frustdoc-ui%2Frun-directory.incorrect.stdout", "raw_url": "https://github.com/rust-lang/rust/raw/347ed001e81607f609f7c47a6d7cd5f723c288a1/src%2Ftest%2Frustdoc-ui%2Frun-directory.incorrect.stdout", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-ui%2Frun-directory.incorrect.stdout?ref=347ed001e81607f609f7c47a6d7cd5f723c288a1", "patch": "@@ -1,6 +1,6 @@\n \n running 1 test\n-test $DIR/run-directory.rs - foo (line 19) ... ok\n+test $DIR/run-directory.rs - foo (line 19) run ... ok\n \n test result: ok. 1 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in $TIME\n "}, {"sha": "82dbffcbd55ddf92b4b17f8ed130e2b74f8f30bb", "filename": "src/test/rustdoc-ui/test-no_std.stdout", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/347ed001e81607f609f7c47a6d7cd5f723c288a1/src%2Ftest%2Frustdoc-ui%2Ftest-no_std.stdout", "raw_url": "https://github.com/rust-lang/rust/raw/347ed001e81607f609f7c47a6d7cd5f723c288a1/src%2Ftest%2Frustdoc-ui%2Ftest-no_std.stdout", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-ui%2Ftest-no_std.stdout?ref=347ed001e81607f609f7c47a6d7cd5f723c288a1", "patch": "@@ -1,6 +1,6 @@\n \n running 1 test\n-test $DIR/test-no_std.rs - f (line 10) ... ok\n+test $DIR/test-no_std.rs - f (line 10) run ... ok\n \n test result: ok. 1 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in $TIME\n "}, {"sha": "882da5c2503fed8ef748755ac25e509969405a42", "filename": "src/test/rustdoc-ui/test-type.rs", "status": "added", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/347ed001e81607f609f7c47a6d7cd5f723c288a1/src%2Ftest%2Frustdoc-ui%2Ftest-type.rs", "raw_url": "https://github.com/rust-lang/rust/raw/347ed001e81607f609f7c47a6d7cd5f723c288a1/src%2Ftest%2Frustdoc-ui%2Ftest-type.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-ui%2Ftest-type.rs?ref=347ed001e81607f609f7c47a6d7cd5f723c288a1", "patch": "@@ -0,0 +1,26 @@\n+// compile-flags: --test --test-args=--test-threads=1\n+// check-pass\n+// normalize-stdout-test: \"src/test/rustdoc-ui\" -> \"$$DIR\"\n+// normalize-stdout-test \"finished in \\d+\\.\\d+s\" -> \"finished in $$TIME\"\n+\n+/// ```\n+/// let a = true;\n+/// ```\n+/// ```should_panic\n+/// panic!()\n+/// ```\n+/// ```ignore (incomplete-code)\n+/// fn foo() {\n+/// ```\n+/// ```no_run\n+/// loop {\n+///     println!(\"Hello, world\");\n+/// }\n+/// ```\n+/// fails to compile\n+/// ```compile_fail\n+/// let x = 5;\n+/// x += 2; // shouldn't compile!\n+/// ```\n+\n+pub fn f() {}"}, {"sha": "8f36d643b2f983eae14dd2d2b1392a30d8783246", "filename": "src/test/rustdoc-ui/test-type.stdout", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/347ed001e81607f609f7c47a6d7cd5f723c288a1/src%2Ftest%2Frustdoc-ui%2Ftest-type.stdout", "raw_url": "https://github.com/rust-lang/rust/raw/347ed001e81607f609f7c47a6d7cd5f723c288a1/src%2Ftest%2Frustdoc-ui%2Ftest-type.stdout", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-ui%2Ftest-type.stdout?ref=347ed001e81607f609f7c47a6d7cd5f723c288a1", "patch": "@@ -0,0 +1,10 @@\n+\n+running 5 tests\n+test $DIR/test-type.rs - f (line 12) ignore ... ignored\n+test $DIR/test-type.rs - f (line 15) compile ... ok\n+test $DIR/test-type.rs - f (line 21) compile fail ... ok\n+test $DIR/test-type.rs - f (line 6) run ... ok\n+test $DIR/test-type.rs - f (line 9) run ... ok\n+\n+test result: ok. 4 passed; 0 failed; 1 ignored; 0 measured; 0 filtered out; finished in $TIME\n+"}, {"sha": "dbbb6541b97189f3ee3c01d7dec913f58e98c812", "filename": "src/test/rustdoc-ui/unparseable-doc-test.stdout", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/347ed001e81607f609f7c47a6d7cd5f723c288a1/src%2Ftest%2Frustdoc-ui%2Funparseable-doc-test.stdout", "raw_url": "https://github.com/rust-lang/rust/raw/347ed001e81607f609f7c47a6d7cd5f723c288a1/src%2Ftest%2Frustdoc-ui%2Funparseable-doc-test.stdout", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-ui%2Funparseable-doc-test.stdout?ref=347ed001e81607f609f7c47a6d7cd5f723c288a1", "patch": "@@ -1,6 +1,6 @@\n \n running 1 test\n-test $DIR/unparseable-doc-test.rs - foo (line 7) ... FAILED\n+test $DIR/unparseable-doc-test.rs - foo (line 7) run ... FAILED\n \n failures:\n "}, {"sha": "6389d7f998ffbd6f2caa3a6d9cbb2f2e7a08def7", "filename": "src/test/ui/test-attrs/test-filter-multiple.run.stdout", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/347ed001e81607f609f7c47a6d7cd5f723c288a1/src%2Ftest%2Fui%2Ftest-attrs%2Ftest-filter-multiple.run.stdout", "raw_url": "https://github.com/rust-lang/rust/raw/347ed001e81607f609f7c47a6d7cd5f723c288a1/src%2Ftest%2Fui%2Ftest-attrs%2Ftest-filter-multiple.run.stdout", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftest-attrs%2Ftest-filter-multiple.run.stdout?ref=347ed001e81607f609f7c47a6d7cd5f723c288a1", "patch": "@@ -1,7 +1,7 @@\n \n running 2 tests\n-test test1 ... ok\n-test test2 ... ok\n+test test1 run ... ok\n+test test2 run ... ok\n \n test result: ok. 2 passed; 0 failed; 0 ignored; 0 measured; 1 filtered out; finished in $TIME\n "}, {"sha": "3f0fa81373f10ffe1b40e3e220bb1020e4f231ff", "filename": "src/test/ui/test-attrs/test-type.rs", "status": "added", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/347ed001e81607f609f7c47a6d7cd5f723c288a1/src%2Ftest%2Fui%2Ftest-attrs%2Ftest-type.rs", "raw_url": "https://github.com/rust-lang/rust/raw/347ed001e81607f609f7c47a6d7cd5f723c288a1/src%2Ftest%2Fui%2Ftest-attrs%2Ftest-type.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftest-attrs%2Ftest-type.rs?ref=347ed001e81607f609f7c47a6d7cd5f723c288a1", "patch": "@@ -0,0 +1,28 @@\n+// compile-flags: --test\n+// run-flags: --test-threads=1\n+// check-run-results\n+// normalize-stdout-test \"finished in \\d+\\.\\d+s\" -> \"finished in $$TIME\"\n+// ignore-emscripten no threads support\n+// run-pass\n+\n+\n+#[test]\n+fn test_ok() {\n+    let _a = true;\n+}\n+\n+#[test]\n+#[should_panic]\n+fn test_panic() {\n+    panic!();\n+}\n+\n+#[test]\n+#[ignore]\n+fn test_no_run() {\n+    loop{\n+        println!(\"Hello, world\");\n+    }\n+}\n+\n+fn main() {}"}, {"sha": "5f10c784f891f2258365a066493428f2d1b18f04", "filename": "src/test/ui/test-attrs/test-type.run.stdout", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/347ed001e81607f609f7c47a6d7cd5f723c288a1/src%2Ftest%2Fui%2Ftest-attrs%2Ftest-type.run.stdout", "raw_url": "https://github.com/rust-lang/rust/raw/347ed001e81607f609f7c47a6d7cd5f723c288a1/src%2Ftest%2Fui%2Ftest-attrs%2Ftest-type.run.stdout", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftest-attrs%2Ftest-type.run.stdout?ref=347ed001e81607f609f7c47a6d7cd5f723c288a1", "patch": "@@ -0,0 +1,8 @@\n+\n+running 3 tests\n+test test_no_run ignore ... ignored\n+test test_ok run ... ok\n+test test_panic should panic ... ok\n+\n+test result: ok. 2 passed; 0 failed; 1 ignored; 0 measured; 0 filtered out; finished in $TIME\n+"}, {"sha": "29d5172ce8c87d16f0c22155458998d218583736", "filename": "src/test/ui/test-panic-abort-nocapture.run.stdout", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/347ed001e81607f609f7c47a6d7cd5f723c288a1/src%2Ftest%2Fui%2Ftest-panic-abort-nocapture.run.stdout", "raw_url": "https://github.com/rust-lang/rust/raw/347ed001e81607f609f7c47a6d7cd5f723c288a1/src%2Ftest%2Fui%2Ftest-panic-abort-nocapture.run.stdout", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftest-panic-abort-nocapture.run.stdout?ref=347ed001e81607f609f7c47a6d7cd5f723c288a1", "patch": "@@ -1,12 +1,12 @@\n \n running 4 tests\n-test it_fails ... about to fail\n+test it_fails run ... about to fail\n FAILED\n-test it_panics ... about to panic\n+test it_panics should panic ... about to panic\n ok\n-test it_works ... about to succeed\n+test it_works run ... about to succeed\n ok\n-test it_writes_to_stdio ... hello, world\n+test it_writes_to_stdio run ... hello, world\n testing123\n ok\n "}, {"sha": "2842f08f6cc09c4fc3dcf87c0a863dbbfc12ae6c", "filename": "src/test/ui/test-panic-abort.run.stdout", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/347ed001e81607f609f7c47a6d7cd5f723c288a1/src%2Ftest%2Fui%2Ftest-panic-abort.run.stdout", "raw_url": "https://github.com/rust-lang/rust/raw/347ed001e81607f609f7c47a6d7cd5f723c288a1/src%2Ftest%2Fui%2Ftest-panic-abort.run.stdout", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftest-panic-abort.run.stdout?ref=347ed001e81607f609f7c47a6d7cd5f723c288a1", "patch": "@@ -1,10 +1,10 @@\n \n running 5 tests\n-test it_exits ... FAILED\n-test it_fails ... FAILED\n-test it_panics ... ok\n-test it_works ... ok\n-test no_residual_environment ... ok\n+test it_exits run ... FAILED\n+test it_fails run ... FAILED\n+test it_panics should panic ... ok\n+test it_works run ... ok\n+test no_residual_environment run ... ok\n \n failures:\n "}, {"sha": "cd4b0e466a3fb3bd34c2eb9e291f8ffa6c9843cf", "filename": "src/test/ui/test-passed.run.stdout", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/347ed001e81607f609f7c47a6d7cd5f723c288a1/src%2Ftest%2Fui%2Ftest-passed.run.stdout", "raw_url": "https://github.com/rust-lang/rust/raw/347ed001e81607f609f7c47a6d7cd5f723c288a1/src%2Ftest%2Fui%2Ftest-passed.run.stdout", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftest-passed.run.stdout?ref=347ed001e81607f609f7c47a6d7cd5f723c288a1", "patch": "@@ -1,7 +1,7 @@\n \n running 2 tests\n-test it_works ... ok\n-test it_works_too ... ok\n+test it_works run ... ok\n+test it_works_too run ... ok\n \n test result: ok. 2 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in $TIME\n "}, {"sha": "db9d90f20f2d430d55b337a9d1c62a689a3ef339", "filename": "src/test/ui/test-thread-capture.run.stdout", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/347ed001e81607f609f7c47a6d7cd5f723c288a1/src%2Ftest%2Fui%2Ftest-thread-capture.run.stdout", "raw_url": "https://github.com/rust-lang/rust/raw/347ed001e81607f609f7c47a6d7cd5f723c288a1/src%2Ftest%2Fui%2Ftest-thread-capture.run.stdout", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftest-thread-capture.run.stdout?ref=347ed001e81607f609f7c47a6d7cd5f723c288a1", "patch": "@@ -1,7 +1,7 @@\n \n running 2 tests\n-test thready_fail ... FAILED\n-test thready_pass ... ok\n+test thready_fail run ... FAILED\n+test thready_pass run ... ok\n \n failures:\n "}, {"sha": "42e6d40a4d11e24ca7c3d9a08caaa207de778e89", "filename": "src/test/ui/test-thread-nocapture.run.stdout", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/347ed001e81607f609f7c47a6d7cd5f723c288a1/src%2Ftest%2Fui%2Ftest-thread-nocapture.run.stdout", "raw_url": "https://github.com/rust-lang/rust/raw/347ed001e81607f609f7c47a6d7cd5f723c288a1/src%2Ftest%2Fui%2Ftest-thread-nocapture.run.stdout", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftest-thread-nocapture.run.stdout?ref=347ed001e81607f609f7c47a6d7cd5f723c288a1", "patch": "@@ -1,11 +1,11 @@\n \n running 2 tests\n-test thready_fail ... fee\n+test thready_fail run ... fee\n fie\n foe\n fum\n FAILED\n-test thready_pass ... fee\n+test thready_pass run ... fee\n fie\n foe\n fum"}, {"sha": "f3751ff244fd0720007ee4f52e473502cf8cd6ab", "filename": "src/tools/compiletest/src/main.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/347ed001e81607f609f7c47a6d7cd5f723c288a1/src%2Ftools%2Fcompiletest%2Fsrc%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/347ed001e81607f609f7c47a6d7cd5f723c288a1/src%2Ftools%2Fcompiletest%2Fsrc%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fcompiletest%2Fsrc%2Fmain.rs?ref=347ed001e81607f609f7c47a6d7cd5f723c288a1", "patch": "@@ -649,6 +649,8 @@ fn make_test(config: &Config, testpaths: &TestPaths, inputs: &Stamp) -> Vec<test\n                     ignore,\n                     should_panic,\n                     allow_fail: false,\n+                    compile_fail: false,\n+                    no_run: false,\n                     test_type: test::TestType::Unknown,\n                 },\n                 testfn: make_test_closure(config, testpaths, revision),"}]}