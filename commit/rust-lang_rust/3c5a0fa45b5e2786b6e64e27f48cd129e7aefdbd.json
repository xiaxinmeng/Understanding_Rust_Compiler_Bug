{"sha": "3c5a0fa45b5e2786b6e64e27f48cd129e7aefdbd", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNjNWEwZmE0NWI1ZTI3ODZiNmU2NGUyN2Y0OGNkMTI5ZTdhZWZkYmQ=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2016-08-22T15:29:41Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2016-08-22T15:29:41Z"}, "message": "Auto merge of #35871 - bluss:cstring-new, r=alexcrichton\n\ncstring: avoid excessive growth just to 0-terminate\n\nBased on following what happens in CString::new(\"string literal\"):\n\n1. Using `Into<Vec<u8>>`, a Vec is allocated with capacity exactly equal\n   to the string's input length.\n2. By `v.push(0)`, the Vec is grown to twice capacity, since it was full.\n3. By `v.into_boxed_slice()`, the Vec capacity is shrunk to fit the length again.\n\nIf we use `.reserve_exact(1)` just before the push, then we avoid the\ncapacity doubling that we're going to have to shrink anyway.\n\nGrowing by just 1 byte means that the step (2) is less likely to have to\nmove the memory to a larger allocation chunk, and that the step (3) does\nnot have to reallocate.\n\nAddresses part of #35838", "tree": {"sha": "b88c447994c5e59c229de24412151077d60cd285", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b88c447994c5e59c229de24412151077d60cd285"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3c5a0fa45b5e2786b6e64e27f48cd129e7aefdbd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3c5a0fa45b5e2786b6e64e27f48cd129e7aefdbd", "html_url": "https://github.com/rust-lang/rust/commit/3c5a0fa45b5e2786b6e64e27f48cd129e7aefdbd", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3c5a0fa45b5e2786b6e64e27f48cd129e7aefdbd/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "57a1f684cd14d8f042b4356d8c1518ca3e02cecf", "url": "https://api.github.com/repos/rust-lang/rust/commits/57a1f684cd14d8f042b4356d8c1518ca3e02cecf", "html_url": "https://github.com/rust-lang/rust/commit/57a1f684cd14d8f042b4356d8c1518ca3e02cecf"}, {"sha": "876c02cc1ab537703c4d6f19693dd9a42b131442", "url": "https://api.github.com/repos/rust-lang/rust/commits/876c02cc1ab537703c4d6f19693dd9a42b131442", "html_url": "https://github.com/rust-lang/rust/commit/876c02cc1ab537703c4d6f19693dd9a42b131442"}], "stats": {"total": 1, "additions": 1, "deletions": 0}, "files": [{"sha": "5dae1a09bf410f7330a3786c8270b32fbc1b90ff", "filename": "src/libstd/ffi/c_str.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/3c5a0fa45b5e2786b6e64e27f48cd129e7aefdbd/src%2Flibstd%2Fffi%2Fc_str.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3c5a0fa45b5e2786b6e64e27f48cd129e7aefdbd/src%2Flibstd%2Fffi%2Fc_str.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fffi%2Fc_str.rs?ref=3c5a0fa45b5e2786b6e64e27f48cd129e7aefdbd", "patch": "@@ -224,6 +224,7 @@ impl CString {\n     /// ```\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n     pub unsafe fn from_vec_unchecked(mut v: Vec<u8>) -> CString {\n+        v.reserve_exact(1);\n         v.push(0);\n         CString { inner: v.into_boxed_slice() }\n     }"}]}