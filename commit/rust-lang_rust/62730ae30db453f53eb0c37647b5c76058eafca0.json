{"sha": "62730ae30db453f53eb0c37647b5c76058eafca0", "node_id": "MDY6Q29tbWl0NzI0NzEyOjYyNzMwYWUzMGRiNDUzZjUzZWIwYzM3NjQ3YjVjNzYwNThlYWZjYTA=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2020-05-13T23:10:05Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-05-13T23:10:05Z"}, "message": "Merge #4452\n\n4452: Use back ticks instead of single quotes around code r=matklad a=tspiteri\n\nAlso, use back ticks instead of single quotes in `rustc_unescape_error_to_string` for `EE:UnclosedUnicodeEscape`.\n\nCo-authored-by: Trevor Spiteri <tspiteri@ieee.org>", "tree": {"sha": "71caf8f1abdea2bd1de8be38e4595b7dac38ae85", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/71caf8f1abdea2bd1de8be38e4595b7dac38ae85"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/62730ae30db453f53eb0c37647b5c76058eafca0", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJevH5NCRBK7hj4Ov3rIwAAdHIIAFyl0X5JHTrYw5goGLCV1RsZ\n9C4cVSixwohzvrDIiZ8e4PabCu2aOAf1c93W50iHM9/AhYwZIAwwO8l1vY8Hffkq\n4zrRJylVmq1XZ7BXy4c3GUnUSa8/uhpnZ+Xzt3idrgr8G3P1APNm4PgKIJZvwzIL\nt9OaoAeazUfrvwX7BXuT2OU851pExNoPyz/AIbZ1Cf7/DgTP17PTe20mstCm1DNK\nJYvxBxeq0qTb3KJDD3WQPn/sMickUdDAW9Esna/zNcT5M8eAgJ3XU1D9MkibBAKf\njt4nQOm6vd54cKc6ZkCBL3Un8E2vOHA14QN0m3h781ffiCnf2T2ZqTb+vd5LBCk=\n=3Va0\n-----END PGP SIGNATURE-----\n", "payload": "tree 71caf8f1abdea2bd1de8be38e4595b7dac38ae85\nparent 530a35f3f949d70c53accede35fa561429585bc1\nparent 2d0a9492362e47c51f389d586a43c81328be4670\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1589411405 +0000\ncommitter GitHub <noreply@github.com> 1589411405 +0000\n\nMerge #4452\n\n4452: Use back ticks instead of single quotes around code r=matklad a=tspiteri\n\nAlso, use back ticks instead of single quotes in `rustc_unescape_error_to_string` for `EE:UnclosedUnicodeEscape`.\n\nCo-authored-by: Trevor Spiteri <tspiteri@ieee.org>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/62730ae30db453f53eb0c37647b5c76058eafca0", "html_url": "https://github.com/rust-lang/rust/commit/62730ae30db453f53eb0c37647b5c76058eafca0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/62730ae30db453f53eb0c37647b5c76058eafca0/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "530a35f3f949d70c53accede35fa561429585bc1", "url": "https://api.github.com/repos/rust-lang/rust/commits/530a35f3f949d70c53accede35fa561429585bc1", "html_url": "https://github.com/rust-lang/rust/commit/530a35f3f949d70c53accede35fa561429585bc1"}, {"sha": "2d0a9492362e47c51f389d586a43c81328be4670", "url": "https://api.github.com/repos/rust-lang/rust/commits/2d0a9492362e47c51f389d586a43c81328be4670", "html_url": "https://github.com/rust-lang/rust/commit/2d0a9492362e47c51f389d586a43c81328be4670"}], "stats": {"total": 8, "additions": 4, "deletions": 4}, "files": [{"sha": "2baeb8607f82b5fa98870b41e81174f1ff2bb303", "filename": "crates/ra_assists/src/handlers/add_custom_impl.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/62730ae30db453f53eb0c37647b5c76058eafca0/crates%2Fra_assists%2Fsrc%2Fhandlers%2Fadd_custom_impl.rs", "raw_url": "https://github.com/rust-lang/rust/raw/62730ae30db453f53eb0c37647b5c76058eafca0/crates%2Fra_assists%2Fsrc%2Fhandlers%2Fadd_custom_impl.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_assists%2Fsrc%2Fhandlers%2Fadd_custom_impl.rs?ref=62730ae30db453f53eb0c37647b5c76058eafca0", "patch": "@@ -49,7 +49,7 @@ pub(crate) fn add_custom_impl(acc: &mut Assists, ctx: &AssistContext) -> Option<\n     let start_offset = annotated.syntax().parent()?.text_range().end();\n \n     let label =\n-        format!(\"Add custom impl '{}' for '{}'\", trait_token.text().as_str(), annotated_name);\n+        format!(\"Add custom impl `{}` for `{}`\", trait_token.text().as_str(), annotated_name);\n \n     let target = attr.syntax().text_range();\n     acc.add(AssistId(\"add_custom_impl\"), label, target, |edit| {"}, {"sha": "0c7d5e355f7952f2490586399ebf9a62755aacbd", "filename": "crates/ra_assists/src/handlers/add_explicit_type.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/62730ae30db453f53eb0c37647b5c76058eafca0/crates%2Fra_assists%2Fsrc%2Fhandlers%2Fadd_explicit_type.rs", "raw_url": "https://github.com/rust-lang/rust/raw/62730ae30db453f53eb0c37647b5c76058eafca0/crates%2Fra_assists%2Fsrc%2Fhandlers%2Fadd_explicit_type.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_assists%2Fsrc%2Fhandlers%2Fadd_explicit_type.rs?ref=62730ae30db453f53eb0c37647b5c76058eafca0", "patch": "@@ -61,7 +61,7 @@ pub(crate) fn add_explicit_type(acc: &mut Assists, ctx: &AssistContext) -> Optio\n     let inferred_type = ty.display_source_code(ctx.db, module.into()).ok()?;\n     acc.add(\n         AssistId(\"add_explicit_type\"),\n-        format!(\"Insert explicit type '{}'\", inferred_type),\n+        format!(\"Insert explicit type `{}`\", inferred_type),\n         pat_range,\n         |builder| match ascribed_ty {\n             Some(ascribed_ty) => {"}, {"sha": "d5efb6ab3c99ff10d396879999b14265c275bc54", "filename": "crates/ra_flycheck/src/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/62730ae30db453f53eb0c37647b5c76058eafca0/crates%2Fra_flycheck%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/62730ae30db453f53eb0c37647b5c76058eafca0/crates%2Fra_flycheck%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_flycheck%2Fsrc%2Flib.rs?ref=62730ae30db453f53eb0c37647b5c76058eafca0", "patch": "@@ -157,7 +157,7 @@ impl FlycheckThread {\n             CheckEvent::Begin => {\n                 task_send\n                     .send(CheckTask::Status(WorkDoneProgress::Begin(WorkDoneProgressBegin {\n-                        title: \"Running 'cargo check'\".to_string(),\n+                        title: \"Running `cargo check`\".to_string(),\n                         cancellable: Some(false),\n                         message: None,\n                         percentage: None,"}, {"sha": "d68cf0a82bf434b86e1a91539b912b5601c7578f", "filename": "crates/ra_syntax/src/validation.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/62730ae30db453f53eb0c37647b5c76058eafca0/crates%2Fra_syntax%2Fsrc%2Fvalidation.rs", "raw_url": "https://github.com/rust-lang/rust/raw/62730ae30db453f53eb0c37647b5c76058eafca0/crates%2Fra_syntax%2Fsrc%2Fvalidation.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Fsrc%2Fvalidation.rs?ref=62730ae30db453f53eb0c37647b5c76058eafca0", "patch": "@@ -54,7 +54,7 @@ fn rustc_unescape_error_to_string(err: unescape::EscapeError) -> &'static str {\n             \"Unicode escape must not be empty\"\n         }\n         EE::UnclosedUnicodeEscape => {\n-            \"Missing '}' to terminate the unicode escape\"\n+            \"Missing `}` to terminate the unicode escape\"\n         }\n         EE::LeadingUnderscoreUnicodeEscape => {\n             \"Unicode escape code must not begin with an underscore\""}]}