{"sha": "d53e6f87e94c83651ad1e22f294f6f59d8d1b5d1", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQ1M2U2Zjg3ZTk0YzgzNjUxYWQxZTIyZjI5NGY2ZjU5ZDhkMWI1ZDE=", "commit": {"author": {"name": "HMPerson1", "email": "hmperson1@gmail.com", "date": "2018-10-25T02:27:47Z"}, "committer": {"name": "HMPerson1", "email": "hmperson1@gmail.com", "date": "2018-10-25T03:39:55Z"}, "message": "Add tests for more than one level of reference", "tree": {"sha": "cfe00b6ddb3e526f95ad8200b811e5991910fbc5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/cfe00b6ddb3e526f95ad8200b811e5991910fbc5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d53e6f87e94c83651ad1e22f294f6f59d8d1b5d1", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQFIBAABCAAyFiEE30PRORiHa0gkBHJnH7R33dJ4Ic4FAlvROwsUHGhtcGVyc29u\nMUBnbWFpbC5jb20ACgkQH7R33dJ4Ic6iqAgAyMXnu6QKOFr9Ydom+Yx5R+EZCbDc\nTAYpHASkJe57Qw0XMtPYtlD1vee5+C0VKTw7MQ0fdnKJib0PfCvpYkrB5DUfJYQb\nXZnoiEAwY1r2mCSYf4oJ3OwPUGTeOX7bTCo+GepKOpnsUI1pu0wSyYhnc2zW+1e6\n0W5wIIKq+IrL7HJmq/vJNAFIsDH5hJBRW37yia3X4yY5shA+GcBdxoLIre823gFR\n8IsKT5mpQgBTHwwAO5Q93/vl5/6NRRg2625yaNaaupUYPLcCW+1RWmllR+dPMYMh\nkJC76CPk+BnWfFkYjg/yYe1mxpvfoMwSxjwVaAHIjfgZ1k9RBK2iAGqHsQ==\n=cIcK\n-----END PGP SIGNATURE-----", "payload": "tree cfe00b6ddb3e526f95ad8200b811e5991910fbc5\nparent 1a6bfecf383ca1e48fe9a5838261a60ade5af403\nauthor HMPerson1 <hmperson1@gmail.com> 1540434467 -0400\ncommitter HMPerson1 <hmperson1@gmail.com> 1540438795 -0400\n\nAdd tests for more than one level of reference\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d53e6f87e94c83651ad1e22f294f6f59d8d1b5d1", "html_url": "https://github.com/rust-lang/rust/commit/d53e6f87e94c83651ad1e22f294f6f59d8d1b5d1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d53e6f87e94c83651ad1e22f294f6f59d8d1b5d1/comments", "author": {"login": "HMPerson1", "id": 2219904, "node_id": "MDQ6VXNlcjIyMTk5MDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/2219904?v=4", "gravatar_id": "", "url": "https://api.github.com/users/HMPerson1", "html_url": "https://github.com/HMPerson1", "followers_url": "https://api.github.com/users/HMPerson1/followers", "following_url": "https://api.github.com/users/HMPerson1/following{/other_user}", "gists_url": "https://api.github.com/users/HMPerson1/gists{/gist_id}", "starred_url": "https://api.github.com/users/HMPerson1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/HMPerson1/subscriptions", "organizations_url": "https://api.github.com/users/HMPerson1/orgs", "repos_url": "https://api.github.com/users/HMPerson1/repos", "events_url": "https://api.github.com/users/HMPerson1/events{/privacy}", "received_events_url": "https://api.github.com/users/HMPerson1/received_events", "type": "User", "site_admin": false}, "committer": {"login": "HMPerson1", "id": 2219904, "node_id": "MDQ6VXNlcjIyMTk5MDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/2219904?v=4", "gravatar_id": "", "url": "https://api.github.com/users/HMPerson1", "html_url": "https://github.com/HMPerson1", "followers_url": "https://api.github.com/users/HMPerson1/followers", "following_url": "https://api.github.com/users/HMPerson1/following{/other_user}", "gists_url": "https://api.github.com/users/HMPerson1/gists{/gist_id}", "starred_url": "https://api.github.com/users/HMPerson1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/HMPerson1/subscriptions", "organizations_url": "https://api.github.com/users/HMPerson1/orgs", "repos_url": "https://api.github.com/users/HMPerson1/repos", "events_url": "https://api.github.com/users/HMPerson1/events{/privacy}", "received_events_url": "https://api.github.com/users/HMPerson1/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1a6bfecf383ca1e48fe9a5838261a60ade5af403", "url": "https://api.github.com/repos/rust-lang/rust/commits/1a6bfecf383ca1e48fe9a5838261a60ade5af403", "html_url": "https://github.com/rust-lang/rust/commit/1a6bfecf383ca1e48fe9a5838261a60ade5af403"}], "stats": {"total": 24, "additions": 23, "deletions": 1}, "files": [{"sha": "5ddd90ac8b57350d9ec94ac59b96a13270d44582", "filename": "tests/ui/mem_discriminant.rs", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/d53e6f87e94c83651ad1e22f294f6f59d8d1b5d1/tests%2Fui%2Fmem_discriminant.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d53e6f87e94c83651ad1e22f294f6f59d8d1b5d1/tests%2Fui%2Fmem_discriminant.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmem_discriminant.rs?ref=d53e6f87e94c83651ad1e22f294f6f59d8d1b5d1", "patch": "@@ -40,10 +40,16 @@ fn main() {\n \n     mem_discriminant_but_in_a_macro!(&rro);\n \n+    let rrrrro = &&&rro;\n+    mem::discriminant(&rrrrro);\n+    mem::discriminant(*rrrrro);\n+\n     // ok\n     mem::discriminant(&Some(2));\n     mem::discriminant(&None::<u8>);\n     mem::discriminant(&Foo::One(5));\n     mem::discriminant(&Foo::Two(5));\n     mem::discriminant(ro);\n+    mem::discriminant(*rro);\n+    mem::discriminant(****rrrrro);\n }"}, {"sha": "6414e4c96d63bdacb54d42d4644c26b51221ae7c", "filename": "tests/ui/mem_discriminant.stderr", "status": "modified", "additions": 17, "deletions": 1, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/d53e6f87e94c83651ad1e22f294f6f59d8d1b5d1/tests%2Fui%2Fmem_discriminant.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d53e6f87e94c83651ad1e22f294f6f59d8d1b5d1/tests%2Fui%2Fmem_discriminant.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmem_discriminant.stderr?ref=d53e6f87e94c83651ad1e22f294f6f59d8d1b5d1", "patch": "@@ -84,5 +84,21 @@ error: calling `mem::discriminant` on non-enum type `&&std::option::Option<i32>`\n    |     |                                help: try dereferencing: `*rro`\n    |     in this macro invocation\n \n-error: aborting due to 10 previous errors\n+error: calling `mem::discriminant` on non-enum type `&&&&&std::option::Option<i32>`\n+  --> $DIR/mem_discriminant.rs:44:5\n+   |\n+44 |     mem::discriminant(&rrrrro);\n+   |     ^^^^^^^^^^^^^^^^^^-------^\n+   |                       |\n+   |                       help: try dereferencing: `****rrrrro`\n+\n+error: calling `mem::discriminant` on non-enum type `&&&std::option::Option<i32>`\n+  --> $DIR/mem_discriminant.rs:45:5\n+   |\n+45 |     mem::discriminant(*rrrrro);\n+   |     ^^^^^^^^^^^^^^^^^^-------^\n+   |                       |\n+   |                       help: try dereferencing: `****rrrrro`\n+\n+error: aborting due to 12 previous errors\n "}]}