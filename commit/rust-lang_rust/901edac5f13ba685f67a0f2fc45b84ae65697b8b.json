{"sha": "901edac5f13ba685f67a0f2fc45b84ae65697b8b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjkwMWVkYWM1ZjEzYmE2ODVmNjdhMGYyZmM0NWI4NGFlNjU2OTdiOGI=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2020-02-28T07:07:21Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-02-28T07:07:21Z"}, "message": "Merge #3357\n\n3357: introduce const visibility assist r=matklad a=qmx\n\nthis adds the same change visibility assist to `const` declarations too - as suggested by @matklad \n\nCo-authored-by: Douglas Campos <qmx@qmx.me>", "tree": {"sha": "533915b3a5917c2ff71edde525f7a5602cc69e45", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/533915b3a5917c2ff71edde525f7a5602cc69e45"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/901edac5f13ba685f67a0f2fc45b84ae65697b8b", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJeWLwpCRBK7hj4Ov3rIwAAdHIIADF44uwCZmW26woIrpSivION\nCm23dNjbEsjwEmdsw2pGo0rgJutB4N+k35klLqniUG/HZEJPuFh3nSyXSSb6A6XE\nLk5pDnsImD3rcwsThCRzJWcCniBduHxNMvNM4aQ6Rr5x3+8Iv5KYaEkzd31advOQ\nJUupMiVyAq4xdCLi/zIHWrOMOv3/mqS9B1pnWU994toz7SEQwslio2cikw1mRPkL\nAlEdRT7oYVcfnBwMaPQMVkZoniI12ZMyTTxF19UI8wbc7Sv35NAIkqND/jrgkVz7\n0HjJCIPw6i/Zzvs6RRAonfYD33GfXPIR9RM6lFMbrbfodTk2fOgyE1jXjtlK9Vw=\n=XLlQ\n-----END PGP SIGNATURE-----\n", "payload": "tree 533915b3a5917c2ff71edde525f7a5602cc69e45\nparent e0c6e106d9909f34f1b8bbf2b18dee6ece47aa91\nparent 34a7e4fbafe34265563c7c27aadc524d094cf129\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1582873641 +0000\ncommitter GitHub <noreply@github.com> 1582873641 +0000\n\nMerge #3357\n\n3357: introduce const visibility assist r=matklad a=qmx\n\nthis adds the same change visibility assist to `const` declarations too - as suggested by @matklad \n\nCo-authored-by: Douglas Campos <qmx@qmx.me>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/901edac5f13ba685f67a0f2fc45b84ae65697b8b", "html_url": "https://github.com/rust-lang/rust/commit/901edac5f13ba685f67a0f2fc45b84ae65697b8b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/901edac5f13ba685f67a0f2fc45b84ae65697b8b/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e0c6e106d9909f34f1b8bbf2b18dee6ece47aa91", "url": "https://api.github.com/repos/rust-lang/rust/commits/e0c6e106d9909f34f1b8bbf2b18dee6ece47aa91", "html_url": "https://github.com/rust-lang/rust/commit/e0c6e106d9909f34f1b8bbf2b18dee6ece47aa91"}, {"sha": "34a7e4fbafe34265563c7c27aadc524d094cf129", "url": "https://api.github.com/repos/rust-lang/rust/commits/34a7e4fbafe34265563c7c27aadc524d094cf129", "html_url": "https://github.com/rust-lang/rust/commit/34a7e4fbafe34265563c7c27aadc524d094cf129"}], "stats": {"total": 13, "additions": 9, "deletions": 4}, "files": [{"sha": "54e0a6c8405ca32be8ae4abc5acd5a58ffa71a8b", "filename": "crates/ra_assists/src/handlers/change_visibility.rs", "status": "modified", "additions": 9, "deletions": 4, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/901edac5f13ba685f67a0f2fc45b84ae65697b8b/crates%2Fra_assists%2Fsrc%2Fhandlers%2Fchange_visibility.rs", "raw_url": "https://github.com/rust-lang/rust/raw/901edac5f13ba685f67a0f2fc45b84ae65697b8b/crates%2Fra_assists%2Fsrc%2Fhandlers%2Fchange_visibility.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_assists%2Fsrc%2Fhandlers%2Fchange_visibility.rs?ref=901edac5f13ba685f67a0f2fc45b84ae65697b8b", "patch": "@@ -2,8 +2,8 @@ use ra_syntax::{\n     ast::{self, NameOwner, VisibilityOwner},\n     AstNode,\n     SyntaxKind::{\n-        ATTR, COMMENT, ENUM_DEF, FN_DEF, IDENT, MODULE, STRUCT_DEF, TRAIT_DEF, VISIBILITY,\n-        WHITESPACE,\n+        ATTR, COMMENT, CONST_DEF, ENUM_DEF, FN_DEF, IDENT, MODULE, STRUCT_DEF, TRAIT_DEF,\n+        VISIBILITY, WHITESPACE,\n     },\n     SyntaxNode, TextUnit, T,\n };\n@@ -30,13 +30,13 @@ pub(crate) fn change_visibility(ctx: AssistCtx) -> Option<Assist> {\n \n fn add_vis(ctx: AssistCtx) -> Option<Assist> {\n     let item_keyword = ctx.token_at_offset().find(|leaf| match leaf.kind() {\n-        T![fn] | T![mod] | T![struct] | T![enum] | T![trait] => true,\n+        T![const] | T![fn] | T![mod] | T![struct] | T![enum] | T![trait] => true,\n         _ => false,\n     });\n \n     let (offset, target) = if let Some(keyword) = item_keyword {\n         let parent = keyword.parent();\n-        let def_kws = vec![FN_DEF, MODULE, STRUCT_DEF, ENUM_DEF, TRAIT_DEF];\n+        let def_kws = vec![CONST_DEF, FN_DEF, MODULE, STRUCT_DEF, ENUM_DEF, TRAIT_DEF];\n         // Parent is not a definition, can't add visibility\n         if !def_kws.iter().any(|&def_kw| def_kw == parent.kind()) {\n             return None;\n@@ -135,6 +135,11 @@ mod tests {\n         check_assist(change_visibility, \"<|>pub(crate) fn foo() {}\", \"<|>pub fn foo() {}\")\n     }\n \n+    #[test]\n+    fn change_visibility_const() {\n+        check_assist(change_visibility, \"<|>const FOO = 3u8;\", \"<|>pub(crate) const FOO = 3u8;\");\n+    }\n+\n     #[test]\n     fn change_visibility_handles_comment_attrs() {\n         check_assist("}]}