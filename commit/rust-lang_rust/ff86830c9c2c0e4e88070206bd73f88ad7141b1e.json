{"sha": "ff86830c9c2c0e4e88070206bd73f88ad7141b1e", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZmODY4MzBjOWMyYzBlNGU4ODA3MDIwNmJkNzNmODhhZDcxNDFiMWU=", "commit": {"author": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2013-05-25T06:05:31Z"}, "committer": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2013-05-29T02:23:42Z"}, "message": "Define rustc's host triple at compile time\n\nThis way a cross-compiled rustc's answer to host_triple() is correct. The return\nvalue of host_triple() reflects the actual host triple that the compiler was\nbuild for, not the triple the compiler is being built on", "tree": {"sha": "168117cabde261454fa3d7870872644ff215f381", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/168117cabde261454fa3d7870872644ff215f381"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ff86830c9c2c0e4e88070206bd73f88ad7141b1e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ff86830c9c2c0e4e88070206bd73f88ad7141b1e", "html_url": "https://github.com/rust-lang/rust/commit/ff86830c9c2c0e4e88070206bd73f88ad7141b1e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ff86830c9c2c0e4e88070206bd73f88ad7141b1e/comments", "author": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5f90f1ca1d142dc408108a58e8ac48f10f2d719b", "url": "https://api.github.com/repos/rust-lang/rust/commits/5f90f1ca1d142dc408108a58e8ac48f10f2d719b", "html_url": "https://github.com/rust-lang/rust/commit/5f90f1ca1d142dc408108a58e8ac48f10f2d719b"}], "stats": {"total": 31, "additions": 19, "deletions": 12}, "files": [{"sha": "737b3b82c00dedefbd70368b6fc56f2740db5183", "filename": "mk/target.mk", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/ff86830c9c2c0e4e88070206bd73f88ad7141b1e/mk%2Ftarget.mk", "raw_url": "https://github.com/rust-lang/rust/raw/ff86830c9c2c0e4e88070206bd73f88ad7141b1e/mk%2Ftarget.mk", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/mk%2Ftarget.mk?ref=ff86830c9c2c0e4e88070206bd73f88ad7141b1e", "patch": "@@ -8,6 +8,11 @@\n # option. This file may not be copied, modified, or distributed\n # except according to those terms.\n \n+# This is the compile-time target-triple for the compiler. For the compiler at\n+# runtime, this should be considered the host-triple. More explanation for why\n+# this exists can be found on issue #2400\n+export CFG_COMPILER_TRIPLE\n+\n # TARGET_STAGE_N template: This defines how target artifacts are built\n # for all stage/target architecture combinations. The arguments:\n # $(1) is the stage\n@@ -62,6 +67,7 @@ $$(TLIB$(1)_T_$(2)_H_$(3))/$(CFG_RUSTLLVM_$(3)): \\\n \t@$$(call E, cp: $$@)\n \t$$(Q)cp $$< $$@\n \n+$$(TLIB$(1)_T_$(2)_H_$(3))/$(CFG_LIBRUSTC_$(3)): CFG_COMPILER_TRIPLE = $(2)\n $$(TLIB$(1)_T_$(2)_H_$(3))/$(CFG_LIBRUSTC_$(3)):\t\t\\\n \t\t$$(COMPILER_CRATE) $$(COMPILER_INPUTS)\t\t\\\n                 $$(TLIB$(1)_T_$(2)_H_$(3))/$(CFG_LIBSYNTAX_$(3)) \\"}, {"sha": "eff8c2a9f346ec3c547449811c19975f9fbe693f", "filename": "mk/tests.mk", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/ff86830c9c2c0e4e88070206bd73f88ad7141b1e/mk%2Ftests.mk", "raw_url": "https://github.com/rust-lang/rust/raw/ff86830c9c2c0e4e88070206bd73f88ad7141b1e/mk%2Ftests.mk", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/mk%2Ftests.mk?ref=ff86830c9c2c0e4e88070206bd73f88ad7141b1e", "patch": "@@ -307,6 +307,7 @@ $(3)/stage$(1)/test/syntaxtest-$(2)$$(X_$(2)):\t\t\t\\\n \t@$$(call E, compile_and_link: $$@)\n \t$$(STAGE$(1)_T_$(2)_H_$(3)) -o $$@ $$< --test\n \n+$(3)/stage$(1)/test/rustctest-$(2)$$(X_$(2)): CFG_COMPILER_TRIPLE = $(2)\n $(3)/stage$(1)/test/rustctest-$(2)$$(X_$(2)):\t\t\t\t\t\\\n \t\t$$(COMPILER_CRATE) $$(COMPILER_INPUTS) \\\n \t\t$$(TLIB$(1)_T_$(2)_H_$(3))/$$(CFG_RUSTLLVM_$(2)) \\"}, {"sha": "1887cc067706394e4c533c790c89f5d5dda85ec7", "filename": "src/librustc/driver/driver.rs", "status": "modified", "additions": 12, "deletions": 12, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/ff86830c9c2c0e4e88070206bd73f88ad7141b1e/src%2Flibrustc%2Fdriver%2Fdriver.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ff86830c9c2c0e4e88070206bd73f88ad7141b1e/src%2Flibrustc%2Fdriver%2Fdriver.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fdriver%2Fdriver.rs?ref=ff86830c9c2c0e4e88070206bd73f88ad7141b1e", "patch": "@@ -516,15 +516,15 @@ pub fn host_triple() -> ~str {\n     // idea of the host triple is the same as for the set of libraries we've\n     // actually built.  We can't just take LLVM's host triple because they\n     // normalize all ix86 architectures to i386.\n-\n-    // FIXME (#2400): Instead of grabbing the host triple we really should\n-    // be grabbing (at compile time) the target triple that this rustc is\n-    // built with and calling that (at runtime) the host triple.\n-    let ht = env!(\"CFG_BUILD_TRIPLE\");\n+    //\n+    // Instead of grabbing the host triple (for the current host), we grab (at\n+    // compile time) the target triple that this rustc is built with and\n+    // calling that (at runtime) the host triple.\n+    let ht = env!(\"CFG_COMPILER_TRIPLE\");\n     return if ht != ~\"\" {\n             ht\n         } else {\n-            fail!(\"rustc built without CFG_BUILD_TRIPLE\")\n+            fail!(\"rustc built without CFG_COMPILER_TRIPLE\")\n         };\n }\n \n@@ -534,15 +534,15 @@ pub fn host_triple() -> ~str {\n     // idea of the host triple is the same as for the set of libraries we've\n     // actually built.  We can't just take LLVM's host triple because they\n     // normalize all ix86 architectures to i386.\n-\n-    // FIXME (#2400): Instead of grabbing the host triple we really should\n-    // be grabbing (at compile time) the target triple that this rustc is\n-    // built with and calling that (at runtime) the host triple.\n-    let ht = env!(\"CFG_BUILD_TRIPLE\");\n+    //\n+    // Instead of grabbing the host triple (for the current host), we grab (at\n+    // compile time) the target triple that this rustc is built with and\n+    // calling that (at runtime) the host triple.\n+    let ht = env!(\"CFG_COMPILER_TRIPLE\");\n     return if ht != \"\" {\n             ht.to_owned()\n         } else {\n-            fail!(\"rustc built without CFG_BUILD_TRIPLE\")\n+            fail!(\"rustc built without CFG_COMPILER_TRIPLE\")\n         };\n }\n "}]}