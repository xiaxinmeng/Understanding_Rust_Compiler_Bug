{"sha": "8f84d3abc690ab905501a87a3d693b0f5094fb4b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjhmODRkM2FiYzY5MGFiOTA1NTAxYTg3YTNkNjkzYjBmNTA5NGZiNGI=", "commit": {"author": {"name": "Scott Olson", "email": "scott@solson.me", "date": "2016-03-15T11:50:53Z"}, "committer": {"name": "Scott Olson", "email": "scott@solson.me", "date": "2016-03-15T11:51:02Z"}, "message": "Implement fixed-sized arrays.", "tree": {"sha": "e33f1089d43fd43bed36f0f446d07d92adb3cce8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e33f1089d43fd43bed36f0f446d07d92adb3cce8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8f84d3abc690ab905501a87a3d693b0f5094fb4b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8f84d3abc690ab905501a87a3d693b0f5094fb4b", "html_url": "https://github.com/rust-lang/rust/commit/8f84d3abc690ab905501a87a3d693b0f5094fb4b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8f84d3abc690ab905501a87a3d693b0f5094fb4b/comments", "author": {"login": "solson", "id": 26806, "node_id": "MDQ6VXNlcjI2ODA2", "avatar_url": "https://avatars.githubusercontent.com/u/26806?v=4", "gravatar_id": "", "url": "https://api.github.com/users/solson", "html_url": "https://github.com/solson", "followers_url": "https://api.github.com/users/solson/followers", "following_url": "https://api.github.com/users/solson/following{/other_user}", "gists_url": "https://api.github.com/users/solson/gists{/gist_id}", "starred_url": "https://api.github.com/users/solson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/solson/subscriptions", "organizations_url": "https://api.github.com/users/solson/orgs", "repos_url": "https://api.github.com/users/solson/repos", "events_url": "https://api.github.com/users/solson/events{/privacy}", "received_events_url": "https://api.github.com/users/solson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "solson", "id": 26806, "node_id": "MDQ6VXNlcjI2ODA2", "avatar_url": "https://avatars.githubusercontent.com/u/26806?v=4", "gravatar_id": "", "url": "https://api.github.com/users/solson", "html_url": "https://github.com/solson", "followers_url": "https://api.github.com/users/solson/followers", "following_url": "https://api.github.com/users/solson/following{/other_user}", "gists_url": "https://api.github.com/users/solson/gists{/gist_id}", "starred_url": "https://api.github.com/users/solson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/solson/subscriptions", "organizations_url": "https://api.github.com/users/solson/orgs", "repos_url": "https://api.github.com/users/solson/repos", "events_url": "https://api.github.com/users/solson/events{/privacy}", "received_events_url": "https://api.github.com/users/solson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "40462d64ef367b22a27ff67e1cf170798d7e29a3", "url": "https://api.github.com/repos/rust-lang/rust/commits/40462d64ef367b22a27ff67e1cf170798d7e29a3", "html_url": "https://github.com/rust-lang/rust/commit/40462d64ef367b22a27ff67e1cf170798d7e29a3"}], "stats": {"total": 65, "additions": 56, "deletions": 9}, "files": [{"sha": "1abc50ce55bc1a4d84f6a93cb6ec1d3713b3227c", "filename": "src/interpreter.rs", "status": "modified", "additions": 22, "deletions": 4, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/8f84d3abc690ab905501a87a3d693b0f5094fb4b/src%2Finterpreter.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8f84d3abc690ab905501a87a3d693b0f5094fb4b/src%2Finterpreter.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Finterpreter.rs?ref=8f84d3abc690ab905501a87a3d693b0f5094fb4b", "patch": "@@ -336,7 +336,20 @@ impl<'a, 'tcx: 'a> Interpreter<'a, 'tcx> {\n                         }\n                     },\n \n-                    Vec => unimplemented!(),\n+                    Vec => match dest_repr {\n+                        Repr::Array { ref elem, length } => {\n+                            assert_eq!(length, operands.len());\n+                            let elem_size = elem.size();\n+                            for (i, operand) in operands.iter().enumerate() {\n+                                let (src, _) = try!(self.eval_operand(operand));\n+                                let offset = i * elem_size;\n+                                try!(self.memory.copy(src, dest.offset(offset), elem_size));\n+                            }\n+                            Ok(())\n+                        }\n+                        _ => panic!(\"expected Repr::Array target\"),\n+                    },\n+\n                     Closure(..) => unimplemented!(),\n                 }\n             }\n@@ -517,9 +530,14 @@ impl<'a, 'tcx: 'a> Interpreter<'a, 'tcx> {\n                 self.make_variant_repr(&adt_def.variants[0], substs)\n             }\n \n-            ty::TyRef(_, ty::TypeAndMut { ty, .. }) | ty::TyBox(ty) => {\n-                Repr::Pointer { target: Box::new(self.ty_to_repr(ty)) }\n-            }\n+            ty::TyArray(ref elem_ty, length) => Repr::Array {\n+                elem: Box::new(self.ty_to_repr(elem_ty)),\n+                length: length,\n+            },\n+\n+            ty::TyRef(_, ty::TypeAndMut { ty, .. }) | ty::TyBox(ty) => Repr::Pointer {\n+                target: Box::new(self.ty_to_repr(ty))\n+            },\n \n             ref t => panic!(\"can't convert type to repr: {:?}\", t),\n         }"}, {"sha": "379c95ec05014a50ae0cf00db80f9d31a14526b9", "filename": "src/memory.rs", "status": "modified", "additions": 7, "deletions": 5, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/8f84d3abc690ab905501a87a3d693b0f5094fb4b/src%2Fmemory.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8f84d3abc690ab905501a87a3d693b0f5094fb4b/src%2Fmemory.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fmemory.rs?ref=8f84d3abc690ab905501a87a3d693b0f5094fb4b", "patch": "@@ -58,11 +58,12 @@ pub enum Repr {\n         discr: Box<Repr>,\n     },\n \n-    // Array {\n-    //     /// Number of elements.\n-    //     length: usize,\n-    //     elem: Repr,\n-    // },\n+    Array {\n+        elem: Box<Repr>,\n+\n+        /// Number of elements.\n+        length: usize,\n+    },\n \n     Pointer {\n         target: Box<Repr>,\n@@ -359,6 +360,7 @@ impl Repr {\n             Repr::I64 | Repr::U64 => 8,\n             Repr::Product { size, .. } => size,\n             Repr::Sum { ref discr, max_variant_size, .. } => discr.size() + max_variant_size,\n+            Repr::Array { ref elem, length } => elem.size() * length,\n             Repr::Pointer { .. } => POINTER_SIZE,\n         }\n     }"}, {"sha": "ed9e501600d194c63abd486f821199669377a48c", "filename": "test/arrays.rs", "status": "added", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/8f84d3abc690ab905501a87a3d693b0f5094fb4b/test%2Farrays.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8f84d3abc690ab905501a87a3d693b0f5094fb4b/test%2Farrays.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/test%2Farrays.rs?ref=8f84d3abc690ab905501a87a3d693b0f5094fb4b", "patch": "@@ -0,0 +1,27 @@\n+#![feature(custom_attribute)]\n+#![allow(dead_code, unused_attributes)]\n+\n+#[miri_run]\n+fn empty_array() -> [u16; 0] {\n+    []\n+}\n+\n+#[miri_run]\n+fn singular_array() -> [u16; 1] {\n+    [42]\n+}\n+\n+#[miri_run]\n+fn deuce_array() -> [u16; 2] {\n+    [42, 53]\n+}\n+\n+#[miri_run]\n+fn big_array() -> [u16; 5] {\n+    [5, 4, 3, 2, 1]\n+}\n+\n+#[miri_run]\n+fn array_array() -> [[u8; 2]; 3] {\n+    [[5, 4], [3, 2], [1, 0]]\n+}"}]}