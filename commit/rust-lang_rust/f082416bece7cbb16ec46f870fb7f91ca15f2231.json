{"sha": "f082416bece7cbb16ec46f870fb7f91ca15f2231", "node_id": "MDY6Q29tbWl0NzI0NzEyOmYwODI0MTZiZWNlN2NiYjE2ZWM0NmY4NzBmYjdmOTFjYTE1ZjIyMzE=", "commit": {"author": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2014-09-19T19:15:39Z"}, "committer": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2014-09-20T02:58:14Z"}, "message": "Test fixes from the rollup", "tree": {"sha": "5c542e4e3b558619d53c9f9a6851eed666223ee6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5c542e4e3b558619d53c9f9a6851eed666223ee6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f082416bece7cbb16ec46f870fb7f91ca15f2231", "comment_count": 5, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f082416bece7cbb16ec46f870fb7f91ca15f2231", "html_url": "https://github.com/rust-lang/rust/commit/f082416bece7cbb16ec46f870fb7f91ca15f2231", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f082416bece7cbb16ec46f870fb7f91ca15f2231/comments", "author": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ebe9ec80746e7943c3d53bedbbded7f0afc0b3d5", "url": "https://api.github.com/repos/rust-lang/rust/commits/ebe9ec80746e7943c3d53bedbbded7f0afc0b3d5", "html_url": "https://github.com/rust-lang/rust/commit/ebe9ec80746e7943c3d53bedbbded7f0afc0b3d5"}], "stats": {"total": 55, "additions": 28, "deletions": 27}, "files": [{"sha": "3b3d7d02a2c8a7c47a8e254ee62f516620bd39bb", "filename": "src/librustc/middle/trans/intrinsic.rs", "status": "modified", "additions": 12, "deletions": 12, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/f082416bece7cbb16ec46f870fb7f91ca15f2231/src%2Flibrustc%2Fmiddle%2Ftrans%2Fintrinsic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f082416bece7cbb16ec46f870fb7f91ca15f2231/src%2Flibrustc%2Fmiddle%2Ftrans%2Fintrinsic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftrans%2Fintrinsic.rs?ref=f082416bece7cbb16ec46f870fb7f91ca15f2231", "patch": "@@ -11,7 +11,7 @@\n #![allow(non_uppercase_statics)]\n \n use llvm;\n-use llvm::{SequentiallyConsistent, Acquire, Release, Xchg, ValueRef};\n+use llvm::{SequentiallyConsistent, Acquire, Release, AtomicXchg, ValueRef};\n use middle::subst;\n use middle::subst::FnSpace;\n use middle::trans::base::*;\n@@ -510,17 +510,17 @@ pub fn trans_intrinsic_call<'blk, 'tcx>(mut bcx: Block<'blk, 'tcx>, node: ast::N\n                 // These are all AtomicRMW ops\n                 op => {\n                     let atom_op = match op {\n-                        \"xchg\"  => llvm::Xchg,\n-                        \"xadd\"  => llvm::Add,\n-                        \"xsub\"  => llvm::Sub,\n-                        \"and\"   => llvm::And,\n-                        \"nand\"  => llvm::Nand,\n-                        \"or\"    => llvm::Or,\n-                        \"xor\"   => llvm::Xor,\n-                        \"max\"   => llvm::Max,\n-                        \"min\"   => llvm::Min,\n-                        \"umax\"  => llvm::UMax,\n-                        \"umin\"  => llvm::UMin,\n+                        \"xchg\"  => llvm::AtomicXchg,\n+                        \"xadd\"  => llvm::AtomicAdd,\n+                        \"xsub\"  => llvm::AtomicSub,\n+                        \"and\"   => llvm::AtomicAnd,\n+                        \"nand\"  => llvm::AtomicNand,\n+                        \"or\"    => llvm::AtomicOr,\n+                        \"xor\"   => llvm::AtomicXor,\n+                        \"max\"   => llvm::AtomicMax,\n+                        \"min\"   => llvm::AtomicMin,\n+                        \"umax\"  => llvm::AtomicUMax,\n+                        \"umin\"  => llvm::AtomicUMin,\n                         _ => ccx.sess().fatal(\"unknown atomic operation\")\n                     };\n "}, {"sha": "22e7ec6124f0dadb5606491072889e843803573e", "filename": "src/librustc_llvm/lib.rs", "status": "modified", "additions": 11, "deletions": 11, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/f082416bece7cbb16ec46f870fb7f91ca15f2231/src%2Flibrustc_llvm%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f082416bece7cbb16ec46f870fb7f91ca15f2231/src%2Flibrustc_llvm%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_llvm%2Flib.rs?ref=f082416bece7cbb16ec46f870fb7f91ca15f2231", "patch": "@@ -297,17 +297,17 @@ pub enum TypeKind {\n \n #[repr(C)]\n pub enum AtomicBinOp {\n-    Xchg = 0,\n-    Add  = 1,\n-    Sub  = 2,\n-    And  = 3,\n-    Nand = 4,\n-    Or   = 5,\n-    Xor  = 6,\n-    Max  = 7,\n-    Min  = 8,\n-    UMax = 9,\n-    UMin = 10,\n+    AtomicXchg = 0,\n+    AtomicAdd  = 1,\n+    AtomicSub  = 2,\n+    AtomicAnd  = 3,\n+    AtomicNand = 4,\n+    AtomicOr   = 5,\n+    AtomicXor  = 6,\n+    AtomicMax  = 7,\n+    AtomicMin  = 8,\n+    AtomicUMax = 9,\n+    AtomicUMin = 10,\n }\n \n #[repr(C)]"}, {"sha": "61c77ce7bbaa9ac2acaa571ac4e126775d3ae845", "filename": "src/test/compile-fail/borrowck-closures-unique.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f082416bece7cbb16ec46f870fb7f91ca15f2231/src%2Ftest%2Fcompile-fail%2Fborrowck-closures-unique.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f082416bece7cbb16ec46f870fb7f91ca15f2231/src%2Ftest%2Fcompile-fail%2Fborrowck-closures-unique.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fborrowck-closures-unique.rs?ref=f082416bece7cbb16ec46f870fb7f91ca15f2231", "patch": "@@ -43,7 +43,7 @@ fn d(x: &mut int) {\n }\n \n fn e(x: &mut int) {\n-    let c1: || = || x = fail!(); //~ ERROR closure cannot assign to immutable argument `x`\n+    let c1: || = || x = fail!(); //~ ERROR closure cannot assign to immutable local variable\n }\n \n fn main() {"}, {"sha": "5f9dd72f5bf148733a611321bb5d014d4d3abe5f", "filename": "src/test/compile-fail/borrowck-unboxed-closures.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f082416bece7cbb16ec46f870fb7f91ca15f2231/src%2Ftest%2Fcompile-fail%2Fborrowck-unboxed-closures.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f082416bece7cbb16ec46f870fb7f91ca15f2231/src%2Ftest%2Fcompile-fail%2Fborrowck-unboxed-closures.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fborrowck-unboxed-closures.rs?ref=f082416bece7cbb16ec46f870fb7f91ca15f2231", "patch": "@@ -17,7 +17,7 @@ fn a<F:Fn(int, int) -> int>(mut f: F) {\n }\n \n fn b<F:FnMut(int, int) -> int>(f: F) {\n-    f(1, 2);    //~ ERROR cannot borrow immutable argument\n+    f(1, 2);    //~ ERROR cannot borrow immutable local variable\n }\n \n fn c<F:FnOnce(int, int) -> int>(f: F) {"}, {"sha": "c5cfabd74e1341d420c656bca922c0f2fbfde1f0", "filename": "src/test/run-pass-fulldeps/issue_16723_multiple_items_syntax_ext.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/f082416bece7cbb16ec46f870fb7f91ca15f2231/src%2Ftest%2Frun-pass-fulldeps%2Fissue_16723_multiple_items_syntax_ext.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f082416bece7cbb16ec46f870fb7f91ca15f2231/src%2Ftest%2Frun-pass-fulldeps%2Fissue_16723_multiple_items_syntax_ext.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass-fulldeps%2Fissue_16723_multiple_items_syntax_ext.rs?ref=f082416bece7cbb16ec46f870fb7f91ca15f2231", "patch": "@@ -9,6 +9,7 @@\n // except according to those terms.\n \n // ignore-stage1\n+// ignore-android\n // aux-build:issue_16723_multiple_items_syntax_ext.rs\n #![feature(phase)]\n "}, {"sha": "d6a154edd789be3f884abad29d9764e44469dd75", "filename": "src/test/run-pass/tag-align-dyn-u64.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/f082416bece7cbb16ec46f870fb7f91ca15f2231/src%2Ftest%2Frun-pass%2Ftag-align-dyn-u64.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f082416bece7cbb16ec46f870fb7f91ca15f2231/src%2Ftest%2Frun-pass%2Ftag-align-dyn-u64.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Ftag-align-dyn-u64.rs?ref=f082416bece7cbb16ec46f870fb7f91ca15f2231", "patch": "@@ -14,7 +14,7 @@\n use std::mem;\n \n enum Tag<A> {\n-    Tag(A)\n+    Tag2(A)\n }\n \n struct Rec {\n@@ -23,7 +23,7 @@ struct Rec {\n }\n \n fn mk_rec() -> Rec {\n-    return Rec { c8:0u8, t:Tag(0u64) };\n+    return Rec { c8:0u8, t:Tag2(0u64) };\n }\n \n fn is_8_byte_aligned(u: &Tag<u64>) -> bool {"}]}