{"sha": "58fe05a124383d87ab3eaa3a2f754577954eb94a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjU4ZmUwNWExMjQzODNkODdhYjNlYWEzYTJmNzU0NTc3OTU0ZWI5NGE=", "commit": {"author": {"name": "Yuki Okushi", "email": "huyuumi.dev@gmail.com", "date": "2020-05-23T08:51:58Z"}, "committer": {"name": "Yuki Okushi", "email": "huyuumi.dev@gmail.com", "date": "2020-05-23T08:53:14Z"}, "message": "Add test for #69415", "tree": {"sha": "d60fdbd4d1e98468fa46c7492500c7dbbb933842", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d60fdbd4d1e98468fa46c7492500c7dbbb933842"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/58fe05a124383d87ab3eaa3a2f754577954eb94a", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEXmatGLoofN5+9u4rsJhshcDi2qEFAl7I5HoACgkQsJhshcDi\n2qFRphAAhh5LSpmSuBMizjDY17v4CG90TADrnqPatpkQU3Asv0Ovw1MU+ZQ3XNKP\n0Szqvmtv82dLItjP170qpm+QluUo4vg6XqkdrEu7IY9QJiGnpGo+ISOfVGF6qoCb\nx7xRwIFD9ld4fAJb+1RYs46Qkd/eEDUZ3rO75jY8Hgkg6cnK7UZqnsU+JUGh/ohP\nZGLJmxvIELJCvfGX9dX3qz3M8DkUrjla73qqjg50jkY7mi9Wp9zO/LTxel8ambBC\nimR8W4ENZBDBFGIbCSssjq7WETobN3vn68cfynLgulwv9WtvmrS7UYL4eoXaKubO\neqSznuGX1IbfqNX1L/NgjvPRf7SSvdiFp0l5EKgrXfeBwNrV+E4ANI6mCByvouPU\nEO4fGZXh5ucN4MzhM4RtQt9v8vucKCvsK7EIbwv8vLTgPAtWvjDkG4UwmdKFOgkI\nCZ6xMOamRZw7fnBrwPGzxN8JRGZy8VQI4fT5nHYjrR9VBvg5cqvboBlXQpdi85uF\nw4g3nL8lur1hsJm2gJQVip+H95StEovhW0snfiJ/sI9LbwQYU/mf1VA3VCsMPNy2\ndU7M7qkufflwa6U+iJoHenQbvI821zZ+qJkWuFgmImgn8opksIEqVLqE42DGSIGx\nt/3OsHc2x4cHEnFQEvka8LHBlhLUHrNSuKrlHeMy3Zt7//Q8y2U=\n=I4fO\n-----END PGP SIGNATURE-----", "payload": "tree d60fdbd4d1e98468fa46c7492500c7dbbb933842\nparent 7f940ef5d91b53e889f111f27e00849f2f5ae4a2\nauthor Yuki Okushi <huyuumi.dev@gmail.com> 1590223918 +0900\ncommitter Yuki Okushi <huyuumi.dev@gmail.com> 1590223994 +0900\n\nAdd test for #69415\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/58fe05a124383d87ab3eaa3a2f754577954eb94a", "html_url": "https://github.com/rust-lang/rust/commit/58fe05a124383d87ab3eaa3a2f754577954eb94a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/58fe05a124383d87ab3eaa3a2f754577954eb94a/comments", "author": {"login": "JohnTitor", "id": 25030997, "node_id": "MDQ6VXNlcjI1MDMwOTk3", "avatar_url": "https://avatars.githubusercontent.com/u/25030997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JohnTitor", "html_url": "https://github.com/JohnTitor", "followers_url": "https://api.github.com/users/JohnTitor/followers", "following_url": "https://api.github.com/users/JohnTitor/following{/other_user}", "gists_url": "https://api.github.com/users/JohnTitor/gists{/gist_id}", "starred_url": "https://api.github.com/users/JohnTitor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JohnTitor/subscriptions", "organizations_url": "https://api.github.com/users/JohnTitor/orgs", "repos_url": "https://api.github.com/users/JohnTitor/repos", "events_url": "https://api.github.com/users/JohnTitor/events{/privacy}", "received_events_url": "https://api.github.com/users/JohnTitor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "JohnTitor", "id": 25030997, "node_id": "MDQ6VXNlcjI1MDMwOTk3", "avatar_url": "https://avatars.githubusercontent.com/u/25030997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JohnTitor", "html_url": "https://github.com/JohnTitor", "followers_url": "https://api.github.com/users/JohnTitor/followers", "following_url": "https://api.github.com/users/JohnTitor/following{/other_user}", "gists_url": "https://api.github.com/users/JohnTitor/gists{/gist_id}", "starred_url": "https://api.github.com/users/JohnTitor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JohnTitor/subscriptions", "organizations_url": "https://api.github.com/users/JohnTitor/orgs", "repos_url": "https://api.github.com/users/JohnTitor/repos", "events_url": "https://api.github.com/users/JohnTitor/events{/privacy}", "received_events_url": "https://api.github.com/users/JohnTitor/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7f940ef5d91b53e889f111f27e00849f2f5ae4a2", "url": "https://api.github.com/repos/rust-lang/rust/commits/7f940ef5d91b53e889f111f27e00849f2f5ae4a2", "html_url": "https://github.com/rust-lang/rust/commit/7f940ef5d91b53e889f111f27e00849f2f5ae4a2"}], "stats": {"total": 35, "additions": 19, "deletions": 16}, "files": [{"sha": "9bce274027ee00186f26297d5012223a47ec96fb", "filename": "src/test/ui/feature-gates/feature-gate-associated_type_bounds.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/58fe05a124383d87ab3eaa3a2f754577954eb94a/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-associated_type_bounds.rs", "raw_url": "https://github.com/rust-lang/rust/raw/58fe05a124383d87ab3eaa3a2f754577954eb94a/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-associated_type_bounds.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-associated_type_bounds.rs?ref=58fe05a124383d87ab3eaa3a2f754577954eb94a", "patch": "@@ -1,3 +1,6 @@\n+// compile-flags: -Zsave-analysis\n+// This is also a regression test for #69415 and the above flag is needed.\n+\n #![feature(untagged_unions)]\n \n trait Tr1 { type As1: Copy; }"}, {"sha": "7f2704e1bc3715b314b28e557ad5535011452ed1", "filename": "src/test/ui/feature-gates/feature-gate-associated_type_bounds.stderr", "status": "modified", "additions": 16, "deletions": 16, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/58fe05a124383d87ab3eaa3a2f754577954eb94a/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-associated_type_bounds.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/58fe05a124383d87ab3eaa3a2f754577954eb94a/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-associated_type_bounds.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-associated_type_bounds.stderr?ref=58fe05a124383d87ab3eaa3a2f754577954eb94a", "patch": "@@ -1,5 +1,5 @@\n error[E0658]: associated type bounds are unstable\n-  --> $DIR/feature-gate-associated_type_bounds.rs:12:22\n+  --> $DIR/feature-gate-associated_type_bounds.rs:15:22\n    |\n LL |     type A: Iterator<Item: Copy>;\n    |                      ^^^^^^^^^^\n@@ -8,7 +8,7 @@ LL |     type A: Iterator<Item: Copy>;\n    = help: add `#![feature(associated_type_bounds)]` to the crate attributes to enable\n \n error[E0658]: associated type bounds are unstable\n-  --> $DIR/feature-gate-associated_type_bounds.rs:15:22\n+  --> $DIR/feature-gate-associated_type_bounds.rs:18:22\n    |\n LL |     type B: Iterator<Item: 'static>;\n    |                      ^^^^^^^^^^^^^\n@@ -17,7 +17,7 @@ LL |     type B: Iterator<Item: 'static>;\n    = help: add `#![feature(associated_type_bounds)]` to the crate attributes to enable\n \n error[E0658]: associated type bounds are unstable\n-  --> $DIR/feature-gate-associated_type_bounds.rs:19:20\n+  --> $DIR/feature-gate-associated_type_bounds.rs:22:20\n    |\n LL | struct _St1<T: Tr1<As1: Tr2>> {\n    |                    ^^^^^^^^\n@@ -26,7 +26,7 @@ LL | struct _St1<T: Tr1<As1: Tr2>> {\n    = help: add `#![feature(associated_type_bounds)]` to the crate attributes to enable\n \n error[E0658]: associated type bounds are unstable\n-  --> $DIR/feature-gate-associated_type_bounds.rs:26:18\n+  --> $DIR/feature-gate-associated_type_bounds.rs:29:18\n    |\n LL | enum _En1<T: Tr1<As1: Tr2>> {\n    |                  ^^^^^^^^\n@@ -35,7 +35,7 @@ LL | enum _En1<T: Tr1<As1: Tr2>> {\n    = help: add `#![feature(associated_type_bounds)]` to the crate attributes to enable\n \n error[E0658]: associated type bounds are unstable\n-  --> $DIR/feature-gate-associated_type_bounds.rs:33:19\n+  --> $DIR/feature-gate-associated_type_bounds.rs:36:19\n    |\n LL | union _Un1<T: Tr1<As1: Tr2>> {\n    |                   ^^^^^^^^\n@@ -44,7 +44,7 @@ LL | union _Un1<T: Tr1<As1: Tr2>> {\n    = help: add `#![feature(associated_type_bounds)]` to the crate attributes to enable\n \n error[E0658]: associated type bounds are unstable\n-  --> $DIR/feature-gate-associated_type_bounds.rs:40:37\n+  --> $DIR/feature-gate-associated_type_bounds.rs:43:37\n    |\n LL | type _TaWhere1<T> where T: Iterator<Item: Copy> = T;\n    |                                     ^^^^^^^^^^\n@@ -53,7 +53,7 @@ LL | type _TaWhere1<T> where T: Iterator<Item: Copy> = T;\n    = help: add `#![feature(associated_type_bounds)]` to the crate attributes to enable\n \n error[E0658]: associated type bounds are unstable\n-  --> $DIR/feature-gate-associated_type_bounds.rs:43:22\n+  --> $DIR/feature-gate-associated_type_bounds.rs:46:22\n    |\n LL | fn _apit(_: impl Tr1<As1: Copy>) {}\n    |                      ^^^^^^^^^\n@@ -62,7 +62,7 @@ LL | fn _apit(_: impl Tr1<As1: Copy>) {}\n    = help: add `#![feature(associated_type_bounds)]` to the crate attributes to enable\n \n error[E0658]: associated type bounds are unstable\n-  --> $DIR/feature-gate-associated_type_bounds.rs:45:26\n+  --> $DIR/feature-gate-associated_type_bounds.rs:48:26\n    |\n LL | fn _apit_dyn(_: &dyn Tr1<As1: Copy>) {}\n    |                          ^^^^^^^^^\n@@ -71,7 +71,7 @@ LL | fn _apit_dyn(_: &dyn Tr1<As1: Copy>) {}\n    = help: add `#![feature(associated_type_bounds)]` to the crate attributes to enable\n \n error[E0658]: associated type bounds are unstable\n-  --> $DIR/feature-gate-associated_type_bounds.rs:48:24\n+  --> $DIR/feature-gate-associated_type_bounds.rs:51:24\n    |\n LL | fn _rpit() -> impl Tr1<As1: Copy> { S1 }\n    |                        ^^^^^^^^^\n@@ -80,7 +80,7 @@ LL | fn _rpit() -> impl Tr1<As1: Copy> { S1 }\n    = help: add `#![feature(associated_type_bounds)]` to the crate attributes to enable\n \n error[E0658]: associated type bounds are unstable\n-  --> $DIR/feature-gate-associated_type_bounds.rs:51:31\n+  --> $DIR/feature-gate-associated_type_bounds.rs:54:31\n    |\n LL | fn _rpit_dyn() -> Box<dyn Tr1<As1: Copy>> { Box::new(S1) }\n    |                               ^^^^^^^^^\n@@ -89,7 +89,7 @@ LL | fn _rpit_dyn() -> Box<dyn Tr1<As1: Copy>> { Box::new(S1) }\n    = help: add `#![feature(associated_type_bounds)]` to the crate attributes to enable\n \n error[E0658]: associated type bounds are unstable\n-  --> $DIR/feature-gate-associated_type_bounds.rs:54:23\n+  --> $DIR/feature-gate-associated_type_bounds.rs:57:23\n    |\n LL | const _cdef: impl Tr1<As1: Copy> = S1;\n    |                       ^^^^^^^^^\n@@ -98,7 +98,7 @@ LL | const _cdef: impl Tr1<As1: Copy> = S1;\n    = help: add `#![feature(associated_type_bounds)]` to the crate attributes to enable\n \n error[E0658]: associated type bounds are unstable\n-  --> $DIR/feature-gate-associated_type_bounds.rs:60:24\n+  --> $DIR/feature-gate-associated_type_bounds.rs:63:24\n    |\n LL | static _sdef: impl Tr1<As1: Copy> = S1;\n    |                        ^^^^^^^^^\n@@ -107,7 +107,7 @@ LL | static _sdef: impl Tr1<As1: Copy> = S1;\n    = help: add `#![feature(associated_type_bounds)]` to the crate attributes to enable\n \n error[E0658]: associated type bounds are unstable\n-  --> $DIR/feature-gate-associated_type_bounds.rs:67:21\n+  --> $DIR/feature-gate-associated_type_bounds.rs:70:21\n    |\n LL |     let _: impl Tr1<As1: Copy> = S1;\n    |                     ^^^^^^^^^\n@@ -116,23 +116,23 @@ LL |     let _: impl Tr1<As1: Copy> = S1;\n    = help: add `#![feature(associated_type_bounds)]` to the crate attributes to enable\n \n error[E0562]: `impl Trait` not allowed outside of function and inherent method return types\n-  --> $DIR/feature-gate-associated_type_bounds.rs:54:14\n+  --> $DIR/feature-gate-associated_type_bounds.rs:57:14\n    |\n LL | const _cdef: impl Tr1<As1: Copy> = S1;\n    |              ^^^^^^^^^^^^^^^^^^^\n    |\n    = help: add `#![feature(impl_trait_in_bindings)]` to the crate attributes to enable\n \n error[E0562]: `impl Trait` not allowed outside of function and inherent method return types\n-  --> $DIR/feature-gate-associated_type_bounds.rs:60:15\n+  --> $DIR/feature-gate-associated_type_bounds.rs:63:15\n    |\n LL | static _sdef: impl Tr1<As1: Copy> = S1;\n    |               ^^^^^^^^^^^^^^^^^^^\n    |\n    = help: add `#![feature(impl_trait_in_bindings)]` to the crate attributes to enable\n \n error[E0562]: `impl Trait` not allowed outside of function and inherent method return types\n-  --> $DIR/feature-gate-associated_type_bounds.rs:67:12\n+  --> $DIR/feature-gate-associated_type_bounds.rs:70:12\n    |\n LL |     let _: impl Tr1<As1: Copy> = S1;\n    |            ^^^^^^^^^^^^^^^^^^^"}]}