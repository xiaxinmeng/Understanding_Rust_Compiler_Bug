{"sha": "e513bc98754c1dfa33e8d71b7352a0409905e5f3", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU1MTNiYzk4NzU0YzFkZmEzM2U4ZDcxYjczNTJhMDQwOTkwNWU1ZjM=", "commit": {"author": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2012-10-05T22:46:49Z"}, "committer": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2012-10-06T02:06:23Z"}, "message": "Minor reformatting.", "tree": {"sha": "228327844f49f671558bbd40d28175c84a59c930", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/228327844f49f671558bbd40d28175c84a59c930"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e513bc98754c1dfa33e8d71b7352a0409905e5f3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e513bc98754c1dfa33e8d71b7352a0409905e5f3", "html_url": "https://github.com/rust-lang/rust/commit/e513bc98754c1dfa33e8d71b7352a0409905e5f3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e513bc98754c1dfa33e8d71b7352a0409905e5f3/comments", "author": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "committer": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5947141aef34bd87db4997fe74c23b90314f7a22", "url": "https://api.github.com/repos/rust-lang/rust/commits/5947141aef34bd87db4997fe74c23b90314f7a22", "html_url": "https://github.com/rust-lang/rust/commit/5947141aef34bd87db4997fe74c23b90314f7a22"}], "stats": {"total": 12, "additions": 6, "deletions": 6}, "files": [{"sha": "588fceba61919dd917644831da679f7750ffaf21", "filename": "doc/rust.md", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/e513bc98754c1dfa33e8d71b7352a0409905e5f3/doc%2Frust.md", "raw_url": "https://github.com/rust-lang/rust/raw/e513bc98754c1dfa33e8d71b7352a0409905e5f3/doc%2Frust.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/doc%2Frust.md?ref=e513bc98754c1dfa33e8d71b7352a0409905e5f3", "patch": "@@ -773,8 +773,8 @@ A view item manages the namespace of a module; it does not define new items\n but simply changes the visibility of other items. There are several kinds of\n view item:\n \n- * [extern mod declarations](#extern-mod-declarations)\n- * [use declarations](#use-declarations)\n+ * [`extern mod` declarations](#extern-mod-declarations)\n+ * [`use` declarations](#use-declarations)\n \n ##### Extern mod declarations\n \n@@ -784,7 +784,7 @@ link_attrs : link_attr [ ',' link_attrs ] + ;\n link_attr : ident '=' literal ;\n ~~~~~~~~\n \n-An _extern mod declaration_ specifies a dependency on an external crate.\n+An _`extern mod` declaration_ specifies a dependency on an external crate.\n The external crate is then bound into the declaring scope as the `ident` provided in the `extern_mod_decl`.\n \n The external crate is resolved to a specific `soname` at compile time, and a\n@@ -1737,9 +1737,9 @@ A type cast expression is denoted with the binary operator `as`.\n Executing an `as` expression casts the value on the left-hand side to the type\n on the right-hand side.\n \n-A numeric value can be cast to any numeric type.  An unsafe pointer value can\n-be cast to or from any integral type or unsafe pointer type.  Any other cast\n-is unsupported and will fail to compile.\n+A numeric value can be cast to any numeric type.\n+A raw pointer value can be cast to or from any integral type or raw pointer type.\n+Any other cast is unsupported and will fail to compile.\n \n An example of an `as` expression:\n "}]}