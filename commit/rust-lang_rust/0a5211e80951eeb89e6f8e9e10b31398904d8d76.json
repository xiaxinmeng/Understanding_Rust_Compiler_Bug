{"sha": "0a5211e80951eeb89e6f8e9e10b31398904d8d76", "node_id": "MDY6Q29tbWl0NzI0NzEyOjBhNTIxMWU4MDk1MWVlYjg5ZTZmOGU5ZTEwYjMxMzk4OTA0ZDhkNzY=", "commit": {"author": {"name": "Felix S. Klock II", "email": "pnkfelix@pnkfx.org", "date": "2017-05-22T11:06:51Z"}, "committer": {"name": "Felix S. Klock II", "email": "pnkfelix@pnkfx.org", "date": "2017-06-12T11:06:42Z"}, "message": "Add post-pass to remove EndRegions of unborrowed extents.", "tree": {"sha": "58c2a6053e6d09593ac85af1bea8e2a273f96090", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/58c2a6053e6d09593ac85af1bea8e2a273f96090"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0a5211e80951eeb89e6f8e9e10b31398904d8d76", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0a5211e80951eeb89e6f8e9e10b31398904d8d76", "html_url": "https://github.com/rust-lang/rust/commit/0a5211e80951eeb89e6f8e9e10b31398904d8d76", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0a5211e80951eeb89e6f8e9e10b31398904d8d76/comments", "author": {"login": "pnkfelix", "id": 173127, "node_id": "MDQ6VXNlcjE3MzEyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/173127?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pnkfelix", "html_url": "https://github.com/pnkfelix", "followers_url": "https://api.github.com/users/pnkfelix/followers", "following_url": "https://api.github.com/users/pnkfelix/following{/other_user}", "gists_url": "https://api.github.com/users/pnkfelix/gists{/gist_id}", "starred_url": "https://api.github.com/users/pnkfelix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pnkfelix/subscriptions", "organizations_url": "https://api.github.com/users/pnkfelix/orgs", "repos_url": "https://api.github.com/users/pnkfelix/repos", "events_url": "https://api.github.com/users/pnkfelix/events{/privacy}", "received_events_url": "https://api.github.com/users/pnkfelix/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pnkfelix", "id": 173127, "node_id": "MDQ6VXNlcjE3MzEyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/173127?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pnkfelix", "html_url": "https://github.com/pnkfelix", "followers_url": "https://api.github.com/users/pnkfelix/followers", "following_url": "https://api.github.com/users/pnkfelix/following{/other_user}", "gists_url": "https://api.github.com/users/pnkfelix/gists{/gist_id}", "starred_url": "https://api.github.com/users/pnkfelix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pnkfelix/subscriptions", "organizations_url": "https://api.github.com/users/pnkfelix/orgs", "repos_url": "https://api.github.com/users/pnkfelix/repos", "events_url": "https://api.github.com/users/pnkfelix/events{/privacy}", "received_events_url": "https://api.github.com/users/pnkfelix/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1d315cf7da85911dfa239331fab30607ce2d1dce", "url": "https://api.github.com/repos/rust-lang/rust/commits/1d315cf7da85911dfa239331fab30607ce2d1dce", "html_url": "https://github.com/rust-lang/rust/commit/1d315cf7da85911dfa239331fab30607ce2d1dce"}], "stats": {"total": 88, "additions": 88, "deletions": 0}, "files": [{"sha": "b1620ed53c71838a95325edc14907cc321a04b71", "filename": "src/librustc_driver/driver.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/0a5211e80951eeb89e6f8e9e10b31398904d8d76/src%2Flibrustc_driver%2Fdriver.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0a5211e80951eeb89e6f8e9e10b31398904d8d76/src%2Flibrustc_driver%2Fdriver.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_driver%2Fdriver.rs?ref=0a5211e80951eeb89e6f8e9e10b31398904d8d76", "patch": "@@ -912,6 +912,9 @@ pub fn phase_3_run_analysis_passes<'tcx, F, R>(sess: &'tcx Session,\n     let mut passes = Passes::new();\n     passes.push_hook(mir::transform::dump_mir::DumpMir);\n \n+    // Remove all `EndRegion` statements that are not involved in borrows.\n+    passes.push_pass(MIR_CONST, mir::transform::clean_end_regions::CleanEndRegions);\n+\n     // What we need to do constant evaluation.\n     passes.push_pass(MIR_CONST, mir::transform::simplify::SimplifyCfg::new(\"initial\"));\n     passes.push_pass(MIR_CONST, mir::transform::type_check::TypeckMir);"}, {"sha": "36125f9454365eb09b739f0f7bcd44a09906192c", "filename": "src/librustc_mir/transform/clean_end_regions.rs", "status": "added", "additions": 84, "deletions": 0, "changes": 84, "blob_url": "https://github.com/rust-lang/rust/blob/0a5211e80951eeb89e6f8e9e10b31398904d8d76/src%2Flibrustc_mir%2Ftransform%2Fclean_end_regions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0a5211e80951eeb89e6f8e9e10b31398904d8d76/src%2Flibrustc_mir%2Ftransform%2Fclean_end_regions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Ftransform%2Fclean_end_regions.rs?ref=0a5211e80951eeb89e6f8e9e10b31398904d8d76", "patch": "@@ -0,0 +1,84 @@\n+// Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+//! This module provides one pass, `CleanEndRegions`, that reduces the\n+//! set of `EndRegion` statements in the MIR.\n+//!\n+//! The \"pass\" is actually implemented as two traversals (aka visits)\n+//! of the input MIR. The first traversal, `GatherBorrowedRegions`,\n+//! finds all of the regions in the MIR that are involved in a borrow.\n+//!\n+//! The second traversal, `DeleteTrivialEndRegions`, walks over the\n+//! MIR and removes any `EndRegion` that is applied to a region that\n+//! was not seen in the previous pass.\n+\n+use rustc_data_structures::fx::FxHashSet;\n+\n+use rustc::middle::region::CodeExtent;\n+use rustc::mir::transform::{MirPass, MirSource};\n+use rustc::mir::{BasicBlock, Location, Mir, Rvalue, Statement, StatementKind};\n+use rustc::mir::visit::{MutVisitor, Visitor};\n+use rustc::ty::{RegionKind, TyCtxt};\n+\n+pub struct CleanEndRegions;\n+\n+struct GatherBorrowedRegions {\n+    seen_regions: FxHashSet<CodeExtent>,\n+}\n+\n+struct DeleteTrivialEndRegions<'a> {\n+    seen_regions: &'a FxHashSet<CodeExtent>,\n+}\n+\n+impl MirPass for CleanEndRegions {\n+    fn run_pass<'a, 'tcx>(&self,\n+                          _tcx: TyCtxt<'a, 'tcx, 'tcx>,\n+                          _source: MirSource,\n+                          mir: &mut Mir<'tcx>) {\n+        let mut gather = GatherBorrowedRegions { seen_regions: FxHashSet() };\n+        gather.visit_mir(mir);\n+\n+        let mut delete = DeleteTrivialEndRegions { seen_regions: &mut gather.seen_regions };\n+        delete.visit_mir(mir);\n+    }\n+}\n+\n+impl<'tcx> Visitor<'tcx> for GatherBorrowedRegions {\n+    fn visit_rvalue(&mut self,\n+                    rvalue: &Rvalue<'tcx>,\n+                    location: Location) {\n+        if let Rvalue::Ref(r, _, _) = *rvalue {\n+            if let RegionKind::ReScope(ce) = *r {\n+                self.seen_regions.insert(ce);\n+            }\n+        }\n+        self.super_rvalue(rvalue, location);\n+    }\n+}\n+\n+impl<'a, 'tcx> MutVisitor<'tcx> for DeleteTrivialEndRegions<'a> {\n+    fn visit_statement(&mut self,\n+                       block: BasicBlock,\n+                       statement: &mut Statement<'tcx>,\n+                       location: Location) {\n+        let mut delete_it = false;\n+\n+        if let StatementKind::EndRegion(ref extent) = statement.kind {\n+            if !self.seen_regions.contains(extent) {\n+                delete_it = true;\n+            }\n+        }\n+\n+        if delete_it {\n+            statement.kind = StatementKind::Nop;\n+        }\n+        self.super_statement(block, statement, location);\n+    }\n+}"}, {"sha": "4594c611d596f6cf06de8ee054fdeca25969d5e9", "filename": "src/librustc_mir/transform/mod.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/0a5211e80951eeb89e6f8e9e10b31398904d8d76/src%2Flibrustc_mir%2Ftransform%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0a5211e80951eeb89e6f8e9e10b31398904d8d76/src%2Flibrustc_mir%2Ftransform%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Ftransform%2Fmod.rs?ref=0a5211e80951eeb89e6f8e9e10b31398904d8d76", "patch": "@@ -24,6 +24,7 @@ use syntax::ast;\n use syntax_pos::{DUMMY_SP, Span};\n use transform;\n \n+pub mod clean_end_regions;\n pub mod simplify_branches;\n pub mod simplify;\n pub mod erase_regions;"}]}