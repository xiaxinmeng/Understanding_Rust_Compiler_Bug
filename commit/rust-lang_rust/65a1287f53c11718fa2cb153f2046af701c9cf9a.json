{"sha": "65a1287f53c11718fa2cb153f2046af701c9cf9a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjY1YTEyODdmNTNjMTE3MThmYTJjYjE1M2YyMDQ2YWY3MDFjOWNmOWE=", "commit": {"author": {"name": "Tim Chevalier", "email": "chevalier@alum.wellesley.edu", "date": "2012-12-11T04:56:25Z"}, "committer": {"name": "Tim Chevalier", "email": "chevalier@alum.wellesley.edu", "date": "2012-12-11T19:23:20Z"}, "message": "Discuss the Option type a bit in the tutorial\n\nas per #3577", "tree": {"sha": "07fc00771e35afe3c1336db0e9ae052e27e6d84b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/07fc00771e35afe3c1336db0e9ae052e27e6d84b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/65a1287f53c11718fa2cb153f2046af701c9cf9a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/65a1287f53c11718fa2cb153f2046af701c9cf9a", "html_url": "https://github.com/rust-lang/rust/commit/65a1287f53c11718fa2cb153f2046af701c9cf9a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/65a1287f53c11718fa2cb153f2046af701c9cf9a/comments", "author": {"login": "catamorphism", "id": 427212, "node_id": "MDQ6VXNlcjQyNzIxMg==", "avatar_url": "https://avatars.githubusercontent.com/u/427212?v=4", "gravatar_id": "", "url": "https://api.github.com/users/catamorphism", "html_url": "https://github.com/catamorphism", "followers_url": "https://api.github.com/users/catamorphism/followers", "following_url": "https://api.github.com/users/catamorphism/following{/other_user}", "gists_url": "https://api.github.com/users/catamorphism/gists{/gist_id}", "starred_url": "https://api.github.com/users/catamorphism/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/catamorphism/subscriptions", "organizations_url": "https://api.github.com/users/catamorphism/orgs", "repos_url": "https://api.github.com/users/catamorphism/repos", "events_url": "https://api.github.com/users/catamorphism/events{/privacy}", "received_events_url": "https://api.github.com/users/catamorphism/received_events", "type": "User", "site_admin": false}, "committer": {"login": "catamorphism", "id": 427212, "node_id": "MDQ6VXNlcjQyNzIxMg==", "avatar_url": "https://avatars.githubusercontent.com/u/427212?v=4", "gravatar_id": "", "url": "https://api.github.com/users/catamorphism", "html_url": "https://github.com/catamorphism", "followers_url": "https://api.github.com/users/catamorphism/followers", "following_url": "https://api.github.com/users/catamorphism/following{/other_user}", "gists_url": "https://api.github.com/users/catamorphism/gists{/gist_id}", "starred_url": "https://api.github.com/users/catamorphism/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/catamorphism/subscriptions", "organizations_url": "https://api.github.com/users/catamorphism/orgs", "repos_url": "https://api.github.com/users/catamorphism/repos", "events_url": "https://api.github.com/users/catamorphism/events{/privacy}", "received_events_url": "https://api.github.com/users/catamorphism/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "01c0971172578ac170b3ae07c35ae416644ca1ef", "url": "https://api.github.com/repos/rust-lang/rust/commits/01c0971172578ac170b3ae07c35ae416644ca1ef", "html_url": "https://github.com/rust-lang/rust/commit/01c0971172578ac170b3ae07c35ae416644ca1ef"}], "stats": {"total": 23, "additions": 19, "deletions": 4}, "files": [{"sha": "3701dc75160a505da0284d1abafb5248bb291f14", "filename": "doc/tutorial.md", "status": "modified", "additions": 19, "deletions": 4, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/65a1287f53c11718fa2cb153f2046af701c9cf9a/doc%2Ftutorial.md", "raw_url": "https://github.com/rust-lang/rust/raw/65a1287f53c11718fa2cb153f2046af701c9cf9a/doc%2Ftutorial.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/doc%2Ftutorial.md?ref=65a1287f53c11718fa2cb153f2046af701c9cf9a", "patch": "@@ -1817,14 +1817,29 @@ struct Stack<T> {\n     elements: ~[mut T]\n }\n \n-enum Maybe<T> {\n-    Just(T),\n-    Nothing\n+enum Option<T> {\n+    Some(T),\n+    None\n }\n ~~~~\n \n These declarations can be instantiated to valid types like `Set<int>`,\n-`Stack<int>` and `Maybe<int>`.\n+`Stack<int>` and `Option<int>`.\n+\n+The last type in that example, `Option`, appears frequently in Rust code.\n+Because Rust does not have null pointers (except in unsafe code), we need\n+another way to write a function whose result isn't defined on every possible\n+combination of arguments of the appropriate types. The usual way is to write\n+a function that returns `Option<T>` instead of `T`.\n+\n+~~~~\n+fn radius(shape: Shape) -> Option<float> {\n+   match shape {\n+       Circle(_, radius) => Some(radius),\n+       Rectangle(*)      => None\n+   }      \n+}\n+~~~~\n \n The Rust compiler compiles generic functions very efficiently by\n *monomorphizing* them. *Monomorphization* is a fancy name for a simple"}]}