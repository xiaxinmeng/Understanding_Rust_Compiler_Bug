{"sha": "37489a67e597d6b5f85ce407f8075ee7ae7f3fec", "node_id": "MDY6Q29tbWl0NzI0NzEyOjM3NDg5YTY3ZTU5N2Q2YjVmODVjZTQwN2Y4MDc1ZWU3YWU3ZjNmZWM=", "commit": {"author": {"name": "Ron Dahlgren", "email": "ronald.dahlgren@gmail.com", "date": "2013-06-11T23:34:03Z"}, "committer": {"name": "Ron Dahlgren", "email": "ronald.dahlgren@gmail.com", "date": "2013-06-11T23:34:03Z"}, "message": "Iterator documentation fixes\n\nFixes two typos and one incorrect description.", "tree": {"sha": "3902b8e5e456ae2772a4e9a9b85e84a148458efd", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3902b8e5e456ae2772a4e9a9b85e84a148458efd"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/37489a67e597d6b5f85ce407f8075ee7ae7f3fec", "comment_count": 9, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/37489a67e597d6b5f85ce407f8075ee7ae7f3fec", "html_url": "https://github.com/rust-lang/rust/commit/37489a67e597d6b5f85ce407f8075ee7ae7f3fec", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/37489a67e597d6b5f85ce407f8075ee7ae7f3fec/comments", "author": null, "committer": null, "parents": [{"sha": "1175e94de3b6d0f6b35fd8de3599b29267f1adab", "url": "https://api.github.com/repos/rust-lang/rust/commits/1175e94de3b6d0f6b35fd8de3599b29267f1adab", "html_url": "https://github.com/rust-lang/rust/commit/1175e94de3b6d0f6b35fd8de3599b29267f1adab"}], "stats": {"total": 6, "additions": 3, "deletions": 3}, "files": [{"sha": "0c3249b812d2142053bde4b2cbcebefad6ec0107", "filename": "src/libstd/iterator.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/37489a67e597d6b5f85ce407f8075ee7ae7f3fec/src%2Flibstd%2Fiterator.rs", "raw_url": "https://github.com/rust-lang/rust/raw/37489a67e597d6b5f85ce407f8075ee7ae7f3fec/src%2Flibstd%2Fiterator.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fiterator.rs?ref=37489a67e597d6b5f85ce407f8075ee7ae7f3fec", "patch": "@@ -38,7 +38,7 @@ pub trait Iterator<A> {\n ///\n /// In the future these will be default methods instead of a utility trait.\n pub trait IteratorUtil<A> {\n-    /// Chan this iterator with another, returning a new iterator which will\n+    /// Chain this iterator with another, returning a new iterator which will\n     /// finish iterating over the current iterator, and then it will iterate\n     /// over the other specified iterator.\n     ///\n@@ -108,7 +108,7 @@ pub trait IteratorUtil<A> {\n     /// ~~~\n     fn filter<'r>(self, predicate: &'r fn(&A) -> bool) -> FilterIterator<'r, A, Self>;\n \n-    /// Creates an iterator which both filters and maps elements at the same\n+    /// Creates an iterator which both filters and maps elements.\n     /// If the specified function returns None, the element is skipped.\n     /// Otherwise the option is unwrapped and the new value is yielded.\n     ///\n@@ -141,7 +141,7 @@ pub trait IteratorUtil<A> {\n     fn enumerate(self) -> EnumerateIterator<A, Self>;\n \n     /// Creates an iterator which invokes the predicate on elements until it\n-    /// returns true. Once the predicate returns true, all further elements are\n+    /// returns false. Once the predicate returns false, all further elements are\n     /// yielded.\n     ///\n     /// # Example"}]}