{"sha": "2493e039f1d9997e14aece2441f937ae8c7c6730", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI0OTNlMDM5ZjFkOTk5N2UxNGFlY2UyNDQxZjkzN2FlOGM3YzY3MzA=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2021-05-03T16:36:59Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-05-03T16:36:59Z"}, "message": "Merge #8712\n\n8712: Map nodes to their mutable counterpart before mutating in reorder_impl r=Veykril a=Veykril\n\nbors r+\n\nCo-authored-by: Lukas Tobias Wirth <lukastw97@gmail.com>", "tree": {"sha": "bb8b99b087e28535e7f4753467e2479875365931", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bb8b99b087e28535e7f4753467e2479875365931"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2493e039f1d9997e14aece2441f937ae8c7c6730", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJgkCarCRBK7hj4Ov3rIwAAGLEIAJdVVKXkdNkOctTRiwvjl0TJ\nZBYyKVd4M4BMbG2vwIfiEfpt6wfn3boQG4qNZ0dh5CV91pSZMNv04K/NW0uxlzeA\nKXgmLSyTIiYRirY2roQE9xWMIT+gsaVkPwFD/5XkhOb7fxm38vUfI4mLHrQicMw9\nUqZUBJv2WPDFsP0oVJcX1dAKIZcmw6UEPqJc0A6HBGZvx105qo/ji0s0OonY+TAJ\nB6/IPOoXGzRNm1WrrsaQvKdZ1620tY0PS1ZTtCNbW+U7s0PCRwl+lxEzMPagrkgT\nt03MF43tQDuB6laYEXo14RSnrgOebe38yx29QHYX3WK/ycWZ5d25Kw6+OhQpP6Y=\n=y6tt\n-----END PGP SIGNATURE-----\n", "payload": "tree bb8b99b087e28535e7f4753467e2479875365931\nparent 544a93ee0815697ff42b79e54d1a7a5a743de1f9\nparent 3d6d4e9855db134a07763d2650ada2a7ea9cfbd0\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1620059819 +0000\ncommitter GitHub <noreply@github.com> 1620059819 +0000\n\nMerge #8712\n\n8712: Map nodes to their mutable counterpart before mutating in reorder_impl r=Veykril a=Veykril\n\nbors r+\n\nCo-authored-by: Lukas Tobias Wirth <lukastw97@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2493e039f1d9997e14aece2441f937ae8c7c6730", "html_url": "https://github.com/rust-lang/rust/commit/2493e039f1d9997e14aece2441f937ae8c7c6730", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2493e039f1d9997e14aece2441f937ae8c7c6730/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "544a93ee0815697ff42b79e54d1a7a5a743de1f9", "url": "https://api.github.com/repos/rust-lang/rust/commits/544a93ee0815697ff42b79e54d1a7a5a743de1f9", "html_url": "https://github.com/rust-lang/rust/commit/544a93ee0815697ff42b79e54d1a7a5a743de1f9"}, {"sha": "3d6d4e9855db134a07763d2650ada2a7ea9cfbd0", "url": "https://api.github.com/repos/rust-lang/rust/commits/3d6d4e9855db134a07763d2650ada2a7ea9cfbd0", "html_url": "https://github.com/rust-lang/rust/commit/3d6d4e9855db134a07763d2650ada2a7ea9cfbd0"}], "stats": {"total": 40, "additions": 36, "deletions": 4}, "files": [{"sha": "54a9a468ecc68b7ed39b1a91ccaa765e6da2cc30", "filename": "crates/ide_assists/src/handlers/reorder_impl.rs", "status": "modified", "additions": 36, "deletions": 4, "changes": 40, "blob_url": "https://github.com/rust-lang/rust/blob/2493e039f1d9997e14aece2441f937ae8c7c6730/crates%2Fide_assists%2Fsrc%2Fhandlers%2Freorder_impl.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2493e039f1d9997e14aece2441f937ae8c7c6730/crates%2Fide_assists%2Fsrc%2Fhandlers%2Freorder_impl.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_assists%2Fsrc%2Fhandlers%2Freorder_impl.rs?ref=2493e039f1d9997e14aece2441f937ae8c7c6730", "patch": "@@ -79,9 +79,12 @@ pub(crate) fn reorder_impl(acc: &mut Assists, ctx: &AssistContext) -> Option<()>\n         \"Sort methods\",\n         target,\n         |builder| {\n-            methods.into_iter().zip(sorted).for_each(|(old, new)| {\n-                ted::replace(builder.make_ast_mut(old).syntax(), new.clone_for_update().syntax())\n-            });\n+            let methods =\n+                methods.into_iter().map(|fn_| builder.make_ast_mut(fn_)).collect::<Vec<_>>();\n+            methods\n+                .into_iter()\n+                .zip(sorted)\n+                .for_each(|(old, new)| ted::replace(old.syntax(), new.clone_for_update().syntax()));\n         },\n     )\n }\n@@ -160,7 +163,7 @@ $0impl Bar for Foo {}\n     }\n \n     #[test]\n-    fn reorder_impl_trait_methods() {\n+    fn reorder_impl_trait_functions() {\n         check_assist(\n             reorder_impl,\n             r#\"\n@@ -197,4 +200,33 @@ impl Bar for Foo {\n         \"#,\n         )\n     }\n+\n+    #[test]\n+    fn reorder_impl_trait_methods_uneven_ident_lengths() {\n+        check_assist(\n+            reorder_impl,\n+            r#\"\n+trait Bar {\n+    fn foo(&mut self) {}\n+    fn fooo(&mut self) {}\n+}\n+\n+struct Foo;\n+impl Bar for Foo {\n+    fn fooo(&mut self) {}\n+    fn foo(&mut self) {$0}\n+}\"#,\n+            r#\"\n+trait Bar {\n+    fn foo(&mut self) {}\n+    fn fooo(&mut self) {}\n+}\n+\n+struct Foo;\n+impl Bar for Foo {\n+    fn foo(&mut self) {}\n+    fn fooo(&mut self) {}\n+}\"#,\n+        )\n+    }\n }"}]}