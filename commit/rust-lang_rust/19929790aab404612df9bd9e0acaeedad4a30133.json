{"sha": "19929790aab404612df9bd9e0acaeedad4a30133", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE5OTI5NzkwYWFiNDA0NjEyZGY5YmQ5ZTBhY2FlZWRhZDRhMzAxMzM=", "commit": {"author": {"name": "Oliver Schneider", "email": "oli-obk@users.noreply.github.com", "date": "2017-02-22T12:34:28Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2017-02-22T12:34:28Z"}, "message": "Merge pull request #1561 from Manishearth/zero_ptr\n\nNew zero_ptr lint.", "tree": {"sha": "3a7af2823ef19f887216615293965aeb5f2645f1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3a7af2823ef19f887216615293965aeb5f2645f1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/19929790aab404612df9bd9e0acaeedad4a30133", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/19929790aab404612df9bd9e0acaeedad4a30133", "html_url": "https://github.com/rust-lang/rust/commit/19929790aab404612df9bd9e0acaeedad4a30133", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/19929790aab404612df9bd9e0acaeedad4a30133/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e494a694524e7462e6079242b81da3e5cc72b4b7", "url": "https://api.github.com/repos/rust-lang/rust/commits/e494a694524e7462e6079242b81da3e5cc72b4b7", "html_url": "https://github.com/rust-lang/rust/commit/e494a694524e7462e6079242b81da3e5cc72b4b7"}, {"sha": "3c04109fcc0142056f77d99f64b131cf7fd75d74", "url": "https://api.github.com/repos/rust-lang/rust/commits/3c04109fcc0142056f77d99f64b131cf7fd75d74", "html_url": "https://github.com/rust-lang/rust/commit/3c04109fcc0142056f77d99f64b131cf7fd75d74"}], "stats": {"total": 73, "additions": 70, "deletions": 3}, "files": [{"sha": "22b503746cfe7ad3d005a073ea498b7f3f4183a2", "filename": "CHANGELOG.md", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/19929790aab404612df9bd9e0acaeedad4a30133/CHANGELOG.md", "raw_url": "https://github.com/rust-lang/rust/raw/19929790aab404612df9bd9e0acaeedad4a30133/CHANGELOG.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/CHANGELOG.md?ref=19929790aab404612df9bd9e0acaeedad4a30133", "patch": "@@ -1,6 +1,7 @@\n # Change Log\n All notable changes to this project will be documented in this file.\n \n+* New [`zero_ptr`] lint\n * New [`never_loop`] lint\n * New [`mut_from_ref`] lint\n \n@@ -474,5 +475,6 @@ All notable changes to this project will be documented in this file.\n [`wrong_transmute`]: https://github.com/Manishearth/rust-clippy/wiki#wrong_transmute\n [`zero_divided_by_zero`]: https://github.com/Manishearth/rust-clippy/wiki#zero_divided_by_zero\n [`zero_prefixed_literal`]: https://github.com/Manishearth/rust-clippy/wiki#zero_prefixed_literal\n+[`zero_ptr`]: https://github.com/Manishearth/rust-clippy/wiki#zero_ptr\n [`zero_width_space`]: https://github.com/Manishearth/rust-clippy/wiki#zero_width_space\n <!-- end autogenerated links to wiki -->"}, {"sha": "36ea7e401774f962bc11ed3dbaf53c7be8524177", "filename": "README.md", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/19929790aab404612df9bd9e0acaeedad4a30133/README.md", "raw_url": "https://github.com/rust-lang/rust/raw/19929790aab404612df9bd9e0acaeedad4a30133/README.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/README.md?ref=19929790aab404612df9bd9e0acaeedad4a30133", "patch": "@@ -376,6 +376,7 @@ name\n [wrong_transmute](https://github.com/Manishearth/rust-clippy/wiki#wrong_transmute)                                     | warn    | transmutes that are confusing at best, undefined behaviour at worst and always useless\n [zero_divided_by_zero](https://github.com/Manishearth/rust-clippy/wiki#zero_divided_by_zero)                           | warn    | usage of `0.0 / 0.0` to obtain NaN instead of std::f32::NaN or std::f64::NaN\n [zero_prefixed_literal](https://github.com/Manishearth/rust-clippy/wiki#zero_prefixed_literal)                         | warn    | integer literals starting with `0`\n+[zero_ptr](https://github.com/Manishearth/rust-clippy/wiki#zero_ptr)                                                   | warn    | using 0 as *{const, mut} T\n [zero_width_space](https://github.com/Manishearth/rust-clippy/wiki#zero_width_space)                                   | deny    | using a zero-width space in a string literal, which is confusing\n \n More to come, please [file an issue](https://github.com/Manishearth/rust-clippy/issues) if you have ideas!"}, {"sha": "31b2e23422f7baa9d6d648bebb1fa856c374c92f", "filename": "clippy_lints/src/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/19929790aab404612df9bd9e0acaeedad4a30133/clippy_lints%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/19929790aab404612df9bd9e0acaeedad4a30133/clippy_lints%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Flib.rs?ref=19929790aab404612df9bd9e0acaeedad4a30133", "patch": "@@ -452,6 +452,7 @@ pub fn register_plugins(reg: &mut rustc_plugin::Registry) {\n         misc_early::REDUNDANT_CLOSURE_CALL,\n         misc_early::UNNEEDED_FIELD_PATTERN,\n         misc_early::ZERO_PREFIXED_LITERAL,\n+        misc_early::ZERO_PTR,\n         mut_reference::UNNECESSARY_MUT_PASSED,\n         mutex_atomic::MUTEX_ATOMIC,\n         needless_bool::BOOL_COMPARISON,"}, {"sha": "f9de6a011a16770a55345a7d8d536cfdf501ab97", "filename": "clippy_lints/src/misc_early.rs", "status": "modified", "additions": 37, "deletions": 1, "changes": 38, "blob_url": "https://github.com/rust-lang/rust/blob/19929790aab404612df9bd9e0acaeedad4a30133/clippy_lints%2Fsrc%2Fmisc_early.rs", "raw_url": "https://github.com/rust-lang/rust/raw/19929790aab404612df9bd9e0acaeedad4a30133/clippy_lints%2Fsrc%2Fmisc_early.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmisc_early.rs?ref=19929790aab404612df9bd9e0acaeedad4a30133", "patch": "@@ -162,6 +162,23 @@ declare_lint! {\n     \"shadowing a builtin type\"\n }\n \n+/// **What it does:** Catch casts from `0` to some pointer type\n+///\n+/// **Why is this bad?** This generally means `null` and is better expressed as\n+/// {`std`, `core`}`::ptr::`{`null`, `null_mut`}.\n+///\n+/// **Known problems:** None.\n+///\n+/// **Example:**\n+///\n+/// ```rust\n+/// 0 as *const u32\n+/// ```\n+declare_lint! {\n+    pub ZERO_PTR,\n+    Warn,\n+    \"using 0 as *{const, mut} T\"\n+}\n \n #[derive(Copy, Clone)]\n pub struct MiscEarly;\n@@ -175,7 +192,8 @@ impl LintPass for MiscEarly {\n                     MIXED_CASE_HEX_LITERALS,\n                     UNSEPARATED_LITERAL_SUFFIX,\n                     ZERO_PREFIXED_LITERAL,\n-                    BUILTIN_TYPE_SHADOW)\n+                    BUILTIN_TYPE_SHADOW,\n+                    ZERO_PTR)\n     }\n }\n \n@@ -363,6 +381,9 @@ impl EarlyLintPass for MiscEarly {\n                     }\n                 }}\n             },\n+            ExprKind::Cast(ref e, ref ty) => {\n+                check_cast(cx, expr.span, e, ty);\n+            },\n             _ => (),\n         }\n     }\n@@ -391,3 +412,18 @@ impl EarlyLintPass for MiscEarly {\n         }\n     }\n }\n+\n+fn check_cast(cx: &EarlyContext, span: Span, e: &Expr, ty: &Ty) {\n+    if_let_chain! {[\n+        let TyKind::Ptr(MutTy { mutbl, .. }) = ty.node,\n+        let ExprKind::Lit(ref lit) = e.node,\n+        let LitKind::Int(value, ..) = lit.node,\n+        value == 0\n+    ], {\n+        let msg = match mutbl {\n+            Mutability::Mutable => \"`0 as *mut _` detected. Consider using `ptr::null_mut()`\",\n+            Mutability::Immutable => \"`0 as *const _` detected. Consider using `ptr::null()`\",\n+        };\n+        span_lint(cx, ZERO_PTR, span, msg);\n+    }}\n+}"}, {"sha": "6f0a831f5d5665972aff8c785b8e740e8bbd1356", "filename": "tests/ui/transmute.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/19929790aab404612df9bd9e0acaeedad4a30133/tests%2Fui%2Ftransmute.rs", "raw_url": "https://github.com/rust-lang/rust/raw/19929790aab404612df9bd9e0acaeedad4a30133/tests%2Fui%2Ftransmute.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ftransmute.rs?ref=19929790aab404612df9bd9e0acaeedad4a30133", "patch": "@@ -91,7 +91,7 @@ fn issue1231() {\n         bar: &'a T,\n     }\n \n-    let raw = 0 as *const i32;\n+    let raw = 42 as *const i32;\n     let _: &Foo<u8> = unsafe { std::mem::transmute::<_, &Foo<_>>(raw) };\n \n \n@@ -103,7 +103,7 @@ fn issue1231() {\n \n \n     type Bar<'a> = &'a u8;\n-    let raw = 0 as *const i32;\n+    let raw = 42 as *const i32;\n     unsafe { std::mem::transmute::<_, Bar>(raw) };\n \n "}, {"sha": "a72223ef54c138e0548a4b2fa7d74b56d16a17dd", "filename": "tests/ui/zero_ptr.rs", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/19929790aab404612df9bd9e0acaeedad4a30133/tests%2Fui%2Fzero_ptr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/19929790aab404612df9bd9e0acaeedad4a30133/tests%2Fui%2Fzero_ptr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fzero_ptr.rs?ref=19929790aab404612df9bd9e0acaeedad4a30133", "patch": "@@ -0,0 +1,11 @@\n+#![feature(plugin)]\n+#![plugin(clippy)]\n+\n+#[allow(unused_variables)]\n+fn main() {\n+    let x = 0 as *const usize;\n+    let y = 0 as *mut f64;\n+\n+    let z = 0;\n+    let z = z as *const usize; // this is currently not caught\n+}"}, {"sha": "e17a3bfb2bdbcc45350638bc2b19c5ae215e62f8", "filename": "tests/ui/zero_ptr.stderr", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/19929790aab404612df9bd9e0acaeedad4a30133/tests%2Fui%2Fzero_ptr.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/19929790aab404612df9bd9e0acaeedad4a30133/tests%2Fui%2Fzero_ptr.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fzero_ptr.stderr?ref=19929790aab404612df9bd9e0acaeedad4a30133", "patch": "@@ -0,0 +1,16 @@\n+warning: `0 as *const _` detected. Consider using `ptr::null()`\n+ --> $DIR/zero_ptr.rs:6:13\n+  |\n+6 |     let x = 0 as *const usize;\n+  |             ^^^^^^^^^^^^^^^^^\n+  |\n+  = note: #[warn(zero_ptr)] on by default\n+\n+warning: `0 as *mut _` detected. Consider using `ptr::null_mut()`\n+ --> $DIR/zero_ptr.rs:7:13\n+  |\n+7 |     let y = 0 as *mut f64;\n+  |             ^^^^^^^^^^^^^\n+  |\n+  = note: #[warn(zero_ptr)] on by default\n+"}]}