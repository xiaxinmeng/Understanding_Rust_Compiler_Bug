{"sha": "3df40c09ec5efb74e16c3da84fef6ce142dae73a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNkZjQwYzA5ZWM1ZWZiNzRlMTZjM2RhODRmZWY2Y2UxNDJkYWU3M2E=", "commit": {"author": {"name": "Jeffrey Seyfried", "email": "jeffrey.seyfried@gmail.com", "date": "2016-02-09T06:26:27Z"}, "committer": {"name": "Jeffrey Seyfried", "email": "jeffrey.seyfried@gmail.com", "date": "2016-02-09T17:30:45Z"}, "message": "Allow prelude imports to shadow eachother (needed for the [pretty] tests)\n\nDerive the Default impl for NameResolution", "tree": {"sha": "aab55bbfdb783b55f6d6e7d50e7d48cf49a53c6e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/aab55bbfdb783b55f6d6e7d50e7d48cf49a53c6e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3df40c09ec5efb74e16c3da84fef6ce142dae73a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3df40c09ec5efb74e16c3da84fef6ce142dae73a", "html_url": "https://github.com/rust-lang/rust/commit/3df40c09ec5efb74e16c3da84fef6ce142dae73a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3df40c09ec5efb74e16c3da84fef6ce142dae73a/comments", "author": {"login": "jseyfried", "id": 8652869, "node_id": "MDQ6VXNlcjg2NTI4Njk=", "avatar_url": "https://avatars.githubusercontent.com/u/8652869?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jseyfried", "html_url": "https://github.com/jseyfried", "followers_url": "https://api.github.com/users/jseyfried/followers", "following_url": "https://api.github.com/users/jseyfried/following{/other_user}", "gists_url": "https://api.github.com/users/jseyfried/gists{/gist_id}", "starred_url": "https://api.github.com/users/jseyfried/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jseyfried/subscriptions", "organizations_url": "https://api.github.com/users/jseyfried/orgs", "repos_url": "https://api.github.com/users/jseyfried/repos", "events_url": "https://api.github.com/users/jseyfried/events{/privacy}", "received_events_url": "https://api.github.com/users/jseyfried/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jseyfried", "id": 8652869, "node_id": "MDQ6VXNlcjg2NTI4Njk=", "avatar_url": "https://avatars.githubusercontent.com/u/8652869?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jseyfried", "html_url": "https://github.com/jseyfried", "followers_url": "https://api.github.com/users/jseyfried/followers", "following_url": "https://api.github.com/users/jseyfried/following{/other_user}", "gists_url": "https://api.github.com/users/jseyfried/gists{/gist_id}", "starred_url": "https://api.github.com/users/jseyfried/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jseyfried/subscriptions", "organizations_url": "https://api.github.com/users/jseyfried/orgs", "repos_url": "https://api.github.com/users/jseyfried/repos", "events_url": "https://api.github.com/users/jseyfried/events{/privacy}", "received_events_url": "https://api.github.com/users/jseyfried/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3c62d90202ce3750d3278746c89f1a1d2908b6f9", "url": "https://api.github.com/repos/rust-lang/rust/commits/3c62d90202ce3750d3278746c89f1a1d2908b6f9", "html_url": "https://github.com/rust-lang/rust/commit/3c62d90202ce3750d3278746c89f1a1d2908b6f9"}], "stats": {"total": 12, "additions": 3, "deletions": 9}, "files": [{"sha": "6667e48987087cc8b0e20a82474b99523a4ae751", "filename": "src/librustc_resolve/resolve_imports.rs", "status": "modified", "additions": 3, "deletions": 9, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/3df40c09ec5efb74e16c3da84fef6ce142dae73a/src%2Flibrustc_resolve%2Fresolve_imports.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3df40c09ec5efb74e16c3da84fef6ce142dae73a/src%2Flibrustc_resolve%2Fresolve_imports.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2Fresolve_imports.rs?ref=3df40c09ec5efb74e16c3da84fef6ce142dae73a", "patch": "@@ -99,7 +99,7 @@ impl ImportDirective {\n     }\n }\n \n-#[derive(Clone, Copy)]\n+#[derive(Clone, Default)]\n /// Records information about the resolution of a name in a module.\n pub struct NameResolution<'a> {\n     /// The number of unresolved single imports that could define the name.\n@@ -108,12 +108,6 @@ pub struct NameResolution<'a> {\n     pub binding: Option<&'a NameBinding<'a>>,\n }\n \n-impl<'a> Default for NameResolution<'a> {\n-    fn default() -> Self {\n-        NameResolution { outstanding_references: 0, binding: None }\n-    }\n-}\n-\n impl<'a> NameResolution<'a> {\n     pub fn result(&self, outstanding_globs: usize) -> ResolveResult<&'a NameBinding<'a>> {\n         // If no unresolved imports (single or glob) can define the name, self.binding is final.\n@@ -137,8 +131,8 @@ impl<'a> NameResolution<'a> {\n     pub fn try_define(&mut self, binding: &'a NameBinding<'a>) -> Result<(), &'a NameBinding<'a>> {\n         let is_prelude = |binding: &NameBinding| binding.defined_with(DefModifiers::PRELUDE);\n         let old_binding = match self.binding {\n-            Some(old_binding) if is_prelude(binding) && !is_prelude(old_binding) => return Ok(()),\n-            Some(old_binding) if is_prelude(old_binding) == is_prelude(binding) => old_binding,\n+            Some(_) if is_prelude(binding) => return Ok(()),\n+            Some(old_binding) if !is_prelude(old_binding) => old_binding,\n             _ => { self.binding = Some(binding); return Ok(()); }\n         };\n "}]}