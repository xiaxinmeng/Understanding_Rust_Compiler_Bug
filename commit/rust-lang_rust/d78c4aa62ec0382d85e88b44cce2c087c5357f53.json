{"sha": "d78c4aa62ec0382d85e88b44cce2c087c5357f53", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQ3OGM0YWE2MmVjMDM4MmQ4NWU4OGI0NGNjZTJjMDg3YzUzNTdmNTM=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2019-11-09T11:19:44Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2020-02-29T08:27:25Z"}, "message": "use valid_range_exclusive for correct overflow handling", "tree": {"sha": "beb7c57b47e0bcafef01c34877b4dad7a358faff", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/beb7c57b47e0bcafef01c34877b4dad7a358faff"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d78c4aa62ec0382d85e88b44cce2c087c5357f53", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d78c4aa62ec0382d85e88b44cce2c087c5357f53", "html_url": "https://github.com/rust-lang/rust/commit/d78c4aa62ec0382d85e88b44cce2c087c5357f53", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d78c4aa62ec0382d85e88b44cce2c087c5357f53/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6fd909b2b1dd2789e0f1af79283c6105fa502ca3", "url": "https://api.github.com/repos/rust-lang/rust/commits/6fd909b2b1dd2789e0f1af79283c6105fa502ca3", "html_url": "https://github.com/rust-lang/rust/commit/6fd909b2b1dd2789e0f1af79283c6105fa502ca3"}], "stats": {"total": 11, "additions": 7, "deletions": 4}, "files": [{"sha": "c48e7de6b04863934fa8060d8ff08059270d648d", "filename": "src/librustc_target/abi/mod.rs", "status": "modified", "additions": 7, "deletions": 4, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/d78c4aa62ec0382d85e88b44cce2c087c5357f53/src%2Flibrustc_target%2Fabi%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d78c4aa62ec0382d85e88b44cce2c087c5357f53/src%2Flibrustc_target%2Fabi%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fabi%2Fmod.rs?ref=d78c4aa62ec0382d85e88b44cce2c087c5357f53", "patch": "@@ -1051,17 +1051,20 @@ impl<'a, Ty> TyLayout<'a, Ty> {\n     where\n         Self: Copy,\n         Ty: TyLayoutMethods<'a, C>,\n-        C: LayoutOf<Ty = Ty, TyLayout: MaybeResult<Self, Error = E>>\n+        C: LayoutOf<Ty = Ty, TyLayout: MaybeResult<Self, Error = E>> + HasDataLayout\n     {\n         let scalar_allows_raw_init = move |s: &Scalar| -> bool {\n-            let range = &s.valid_range;\n             if zero {\n+                let range = &s.valid_range;\n                 // The range must contain 0.\n                 range.contains(&0) ||\n                 (*range.start() > *range.end()) // wrap-around allows 0\n             } else {\n-                // The range must include all values.\n-                *range.start() == range.end().wrapping_add(1)\n+                // The range must include all values. `valid_range_exclusive` handles\n+                // the wrap-around using target arithmetic; with wrap-around then the full\n+                // range is one where `start == end`.\n+                let range = s.valid_range_exclusive(cx);\n+                range.start == range.end\n             }\n         };\n "}]}