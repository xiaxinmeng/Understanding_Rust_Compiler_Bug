{"sha": "565de31867d9ac73cdc5af413c5e0441ac26ae23", "node_id": "MDY6Q29tbWl0NzI0NzEyOjU2NWRlMzE4NjdkOWFjNzNjZGM1YWY0MTNjNWUwNDQxYWMyNmFlMjM=", "commit": {"author": {"name": "Andrew Chin", "email": "achin@eminence32.net", "date": "2014-01-11T03:10:43Z"}, "committer": {"name": "Andrew Chin", "email": "achin@eminence32.net", "date": "2014-01-11T03:10:43Z"}, "message": "Re-implement --help in rustpkg\n\nFixes #11423", "tree": {"sha": "270a0379d1a108068f4d403b3d6ccee66d456370", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/270a0379d1a108068f4d403b3d6ccee66d456370"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/565de31867d9ac73cdc5af413c5e0441ac26ae23", "comment_count": 5, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/565de31867d9ac73cdc5af413c5e0441ac26ae23", "html_url": "https://github.com/rust-lang/rust/commit/565de31867d9ac73cdc5af413c5e0441ac26ae23", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/565de31867d9ac73cdc5af413c5e0441ac26ae23/comments", "author": {"login": "eminence", "id": 402454, "node_id": "MDQ6VXNlcjQwMjQ1NA==", "avatar_url": "https://avatars.githubusercontent.com/u/402454?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eminence", "html_url": "https://github.com/eminence", "followers_url": "https://api.github.com/users/eminence/followers", "following_url": "https://api.github.com/users/eminence/following{/other_user}", "gists_url": "https://api.github.com/users/eminence/gists{/gist_id}", "starred_url": "https://api.github.com/users/eminence/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eminence/subscriptions", "organizations_url": "https://api.github.com/users/eminence/orgs", "repos_url": "https://api.github.com/users/eminence/repos", "events_url": "https://api.github.com/users/eminence/events{/privacy}", "received_events_url": "https://api.github.com/users/eminence/received_events", "type": "User", "site_admin": false}, "committer": {"login": "eminence", "id": 402454, "node_id": "MDQ6VXNlcjQwMjQ1NA==", "avatar_url": "https://avatars.githubusercontent.com/u/402454?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eminence", "html_url": "https://github.com/eminence", "followers_url": "https://api.github.com/users/eminence/followers", "following_url": "https://api.github.com/users/eminence/following{/other_user}", "gists_url": "https://api.github.com/users/eminence/gists{/gist_id}", "starred_url": "https://api.github.com/users/eminence/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eminence/subscriptions", "organizations_url": "https://api.github.com/users/eminence/orgs", "repos_url": "https://api.github.com/users/eminence/repos", "events_url": "https://api.github.com/users/eminence/events{/privacy}", "received_events_url": "https://api.github.com/users/eminence/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f411b94ce1b3d4b6751093beeb7d9674e45db0d3", "url": "https://api.github.com/repos/rust-lang/rust/commits/f411b94ce1b3d4b6751093beeb7d9674e45db0d3", "html_url": "https://github.com/rust-lang/rust/commit/f411b94ce1b3d4b6751093beeb7d9674e45db0d3"}], "stats": {"total": 9, "additions": 8, "deletions": 1}, "files": [{"sha": "1051d475a8489b1c7a55a42484ae64fbe88f0280", "filename": "src/librustpkg/parse_args.rs", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/565de31867d9ac73cdc5af413c5e0441ac26ae23/src%2Flibrustpkg%2Fparse_args.rs", "raw_url": "https://github.com/rust-lang/rust/raw/565de31867d9ac73cdc5af413c5e0441ac26ae23/src%2Flibrustpkg%2Fparse_args.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustpkg%2Fparse_args.rs?ref=565de31867d9ac73cdc5af413c5e0441ac26ae23", "patch": "@@ -36,7 +36,8 @@ pub struct ParseResult {\n /// Parses command line arguments of rustpkg.\n /// Returns a triplet (command, remaining_args, context)\n pub fn parse_args(args: &[~str]) -> Result<ParseResult, int> {\n-    let opts = ~[ getopts::optflag(\"no-link\"),\n+    let opts = ~[ getopts::optflag(\"h\"), getopts::optflag(\"help\"),\n+                                        getopts::optflag(\"no-link\"),\n                                         getopts::optflag(\"no-trans\"),\n                  // n.b. Ignores different --pretty options for now\n                                         getopts::optflag(\"pretty\"),\n@@ -71,6 +72,12 @@ pub fn parse_args(args: &[~str]) -> Result<ParseResult, int> {\n     let pretty = matches.opt_present(\"pretty\");\n     let emit_llvm = matches.opt_present(\"emit-llvm\");\n \n+    if matches.opt_present(\"h\") ||\n+       matches.opt_present(\"help\") {\n+         usage::general();\n+         return Err(0);\n+    }\n+\n     if matches.opt_present(\"v\") ||\n        matches.opt_present(\"version\") {\n         version(args[0]);"}]}