{"sha": "ebbf07a1544151867e20ff75f740836aba1ff73a", "node_id": "MDY6Q29tbWl0NzI0NzEyOmViYmYwN2ExNTQ0MTUxODY3ZTIwZmY3NWY3NDA4MzZhYmExZmY3M2E=", "commit": {"author": {"name": "Nicholas Nethercote", "email": "nnethercote@mozilla.com", "date": "2020-08-06T05:58:23Z"}, "committer": {"name": "Nicholas Nethercote", "email": "nnethercote@mozilla.com", "date": "2020-08-06T20:58:14Z"}, "message": "Change the type of `AssertModuleSource::available_cgus`.\n\nIt's currently a `BTreeSet<Symbol>`, which is a strange type. The\n`BTreeSet` suggests that element order is important, but `Symbol` is a\ntype whose ordering isn't useful to humans. The ordering of the\ncollection only manifests in an obscure error message (\"no module named\n`...`\") that doesn't appear in any tests.\n\nThis commit changes the `Symbol` to a `String`, which is more\ntypical.", "tree": {"sha": "92fe76ada9496359a57f6cb57489467991bcd798", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/92fe76ada9496359a57f6cb57489467991bcd798"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ebbf07a1544151867e20ff75f740836aba1ff73a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ebbf07a1544151867e20ff75f740836aba1ff73a", "html_url": "https://github.com/rust-lang/rust/commit/ebbf07a1544151867e20ff75f740836aba1ff73a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ebbf07a1544151867e20ff75f740836aba1ff73a/comments", "author": {"login": "nnethercote", "id": 1940286, "node_id": "MDQ6VXNlcjE5NDAyODY=", "avatar_url": "https://avatars.githubusercontent.com/u/1940286?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nnethercote", "html_url": "https://github.com/nnethercote", "followers_url": "https://api.github.com/users/nnethercote/followers", "following_url": "https://api.github.com/users/nnethercote/following{/other_user}", "gists_url": "https://api.github.com/users/nnethercote/gists{/gist_id}", "starred_url": "https://api.github.com/users/nnethercote/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nnethercote/subscriptions", "organizations_url": "https://api.github.com/users/nnethercote/orgs", "repos_url": "https://api.github.com/users/nnethercote/repos", "events_url": "https://api.github.com/users/nnethercote/events{/privacy}", "received_events_url": "https://api.github.com/users/nnethercote/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nnethercote", "id": 1940286, "node_id": "MDQ6VXNlcjE5NDAyODY=", "avatar_url": "https://avatars.githubusercontent.com/u/1940286?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nnethercote", "html_url": "https://github.com/nnethercote", "followers_url": "https://api.github.com/users/nnethercote/followers", "following_url": "https://api.github.com/users/nnethercote/following{/other_user}", "gists_url": "https://api.github.com/users/nnethercote/gists{/gist_id}", "starred_url": "https://api.github.com/users/nnethercote/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nnethercote/subscriptions", "organizations_url": "https://api.github.com/users/nnethercote/orgs", "repos_url": "https://api.github.com/users/nnethercote/repos", "events_url": "https://api.github.com/users/nnethercote/events{/privacy}", "received_events_url": "https://api.github.com/users/nnethercote/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "60c2e8d438f75aed5192dfa76e4b42a6739f6291", "url": "https://api.github.com/repos/rust-lang/rust/commits/60c2e8d438f75aed5192dfa76e4b42a6739f6291", "html_url": "https://github.com/rust-lang/rust/commit/60c2e8d438f75aed5192dfa76e4b42a6739f6291"}], "stats": {"total": 11, "additions": 5, "deletions": 6}, "files": [{"sha": "29d615b04a394cc3227a00379addfb81da52fa47", "filename": "src/librustc_incremental/assert_module_sources.rs", "status": "modified", "additions": 5, "deletions": 6, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/ebbf07a1544151867e20ff75f740836aba1ff73a/src%2Flibrustc_incremental%2Fassert_module_sources.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ebbf07a1544151867e20ff75f740836aba1ff73a/src%2Flibrustc_incremental%2Fassert_module_sources.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_incremental%2Fassert_module_sources.rs?ref=ebbf07a1544151867e20ff75f740836aba1ff73a", "patch": "@@ -39,8 +39,8 @@ pub fn assert_module_sources(tcx: TyCtxt<'_>) {\n             .collect_and_partition_mono_items(LOCAL_CRATE)\n             .1\n             .iter()\n-            .map(|cgu| cgu.name())\n-            .collect::<BTreeSet<Symbol>>();\n+            .map(|cgu| cgu.name().to_string())\n+            .collect::<BTreeSet<String>>();\n \n         let ams = AssertModuleSource { tcx, available_cgus };\n \n@@ -52,7 +52,7 @@ pub fn assert_module_sources(tcx: TyCtxt<'_>) {\n \n struct AssertModuleSource<'tcx> {\n     tcx: TyCtxt<'tcx>,\n-    available_cgus: BTreeSet<Symbol>,\n+    available_cgus: BTreeSet<String>,\n }\n \n impl AssertModuleSource<'tcx> {\n@@ -121,12 +121,11 @@ impl AssertModuleSource<'tcx> {\n \n         debug!(\"mapping '{}' to cgu name '{}'\", self.field(attr, sym::module), cgu_name);\n \n-        if !self.available_cgus.contains(&cgu_name) {\n+        if !self.available_cgus.contains(&*cgu_name.as_str()) {\n             self.tcx.sess.span_err(\n                 attr.span,\n                 &format!(\n-                    \"no module named `{}` (mangled: {}). \\\n-                          Available modules: {}\",\n+                    \"no module named `{}` (mangled: {}). Available modules: {}\",\n                     user_path,\n                     cgu_name,\n                     self.available_cgus"}]}