{"sha": "1eb2a8b10be2063637e510794ed6bbc49693b5b8", "node_id": "MDY6Q29tbWl0NzI0NzEyOjFlYjJhOGIxMGJlMjA2MzYzN2U1MTA3OTRlZDZiYmM0OTY5M2I1Yjg=", "commit": {"author": {"name": "Roy Frostig", "email": "rfrostig@mozilla.com", "date": "2010-09-03T23:03:13Z"}, "committer": {"name": "Roy Frostig", "email": "rfrostig@mozilla.com", "date": "2010-09-03T23:03:13Z"}, "message": "Assert to insure that the worst-case glue-call arg count is not exceeded unless allowed to.", "tree": {"sha": "abe8ad0c5a66af5e6e15db1ef11386b3d77ce504", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/abe8ad0c5a66af5e6e15db1ef11386b3d77ce504"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1eb2a8b10be2063637e510794ed6bbc49693b5b8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1eb2a8b10be2063637e510794ed6bbc49693b5b8", "html_url": "https://github.com/rust-lang/rust/commit/1eb2a8b10be2063637e510794ed6bbc49693b5b8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1eb2a8b10be2063637e510794ed6bbc49693b5b8/comments", "author": {"login": "froystig", "id": 123903, "node_id": "MDQ6VXNlcjEyMzkwMw==", "avatar_url": "https://avatars.githubusercontent.com/u/123903?v=4", "gravatar_id": "", "url": "https://api.github.com/users/froystig", "html_url": "https://github.com/froystig", "followers_url": "https://api.github.com/users/froystig/followers", "following_url": "https://api.github.com/users/froystig/following{/other_user}", "gists_url": "https://api.github.com/users/froystig/gists{/gist_id}", "starred_url": "https://api.github.com/users/froystig/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/froystig/subscriptions", "organizations_url": "https://api.github.com/users/froystig/orgs", "repos_url": "https://api.github.com/users/froystig/repos", "events_url": "https://api.github.com/users/froystig/events{/privacy}", "received_events_url": "https://api.github.com/users/froystig/received_events", "type": "User", "site_admin": false}, "committer": {"login": "froystig", "id": 123903, "node_id": "MDQ6VXNlcjEyMzkwMw==", "avatar_url": "https://avatars.githubusercontent.com/u/123903?v=4", "gravatar_id": "", "url": "https://api.github.com/users/froystig", "html_url": "https://github.com/froystig", "followers_url": "https://api.github.com/users/froystig/followers", "following_url": "https://api.github.com/users/froystig/following{/other_user}", "gists_url": "https://api.github.com/users/froystig/gists{/gist_id}", "starred_url": "https://api.github.com/users/froystig/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/froystig/subscriptions", "organizations_url": "https://api.github.com/users/froystig/orgs", "repos_url": "https://api.github.com/users/froystig/repos", "events_url": "https://api.github.com/users/froystig/events{/privacy}", "received_events_url": "https://api.github.com/users/froystig/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1fa978ebb9ef97640724ad92900ba49a3544c6c9", "url": "https://api.github.com/repos/rust-lang/rust/commits/1fa978ebb9ef97640724ad92900ba49a3544c6c9", "html_url": "https://github.com/rust-lang/rust/commit/1fa978ebb9ef97640724ad92900ba49a3544c6c9"}], "stats": {"total": 27, "additions": 22, "deletions": 5}, "files": [{"sha": "f6cf37c9e361f35c5d4c3de2c47f873c5befff32", "filename": "src/boot/me/trans.ml", "status": "modified", "additions": 22, "deletions": 5, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/1eb2a8b10be2063637e510794ed6bbc49693b5b8/src%2Fboot%2Fme%2Ftrans.ml", "raw_url": "https://github.com/rust-lang/rust/raw/1eb2a8b10be2063637e510794ed6bbc49693b5b8/src%2Fboot%2Fme%2Ftrans.ml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fboot%2Fme%2Ftrans.ml?ref=1eb2a8b10be2063637e510794ed6bbc49693b5b8", "patch": "@@ -1244,7 +1244,7 @@ let trans_visitor\n     in\n     let callsz = Il.referent_ty_size word_bits self_args_rty in\n     let spill = new_fixup \"forwarding fn spill\" in\n-      trans_glue_frame_entry callsz spill;\n+      trans_glue_frame_entry callsz spill true;\n       let all_self_args_cell = caller_args_cell self_args_rty in\n       let self_indirect_args_cell =\n         get_element_ptr all_self_args_cell Abi.calltup_elt_indirect_args\n@@ -1403,7 +1403,25 @@ let trans_visitor\n   and trans_glue_frame_entry\n       (callsz:size)\n       (spill:fixup)\n+      (user_level:bool)\n       : unit =\n+    (*\n+     * The user_level flag is true to indicate that this is glue that is\n+     * not called via the push/pop mechanism of trans_call_glue, and thereby\n+     * may (legitimately) have callsz exceeding Abi.worst_case_glue_call_args.\n+     *\n+     * Assert that the callsz is indeed no bigger than our abi's purported\n+     * worst-case glue args.  Moreover, the callsz should be static for non-\n+     * user-level glue, so we can rely on (force_sz callsz) as a preliminary\n+     * assertion as well.\n+     *)\n+    if not user_level\n+    then assert ((Int64.compare\n+                    (force_sz callsz)\n+                    (Int64.mul\n+                       word_sz\n+                       (Int64.of_int Abi.worst_case_glue_call_args))) <= 0);\n+\n     let framesz = SIZE_fixup_mem_sz spill in\n       push_new_emitter_with_vregs None;\n       iflog (fun _ -> annotate \"prologue\");\n@@ -1491,7 +1509,7 @@ let trans_visitor\n \n     let callsz = Il.referent_ty_size word_bits callee_args_rty in\n     let spill = new_fixup \"bind glue spill\" in\n-      trans_glue_frame_entry callsz spill;\n+      trans_glue_frame_entry callsz spill true;\n \n       let all_self_args_cell = caller_args_cell self_args_rty in\n \n@@ -1545,9 +1563,8 @@ let trans_visitor\n    *)\n \n   and trans_mem_glue_frame_entry (n_outgoing_args:int) (spill:fixup) : unit =\n-    let isz = cx.ctxt_abi.Abi.abi_implicit_args_sz in\n-    let callsz = SIZE_fixed (Int64.add isz (word_n n_outgoing_args)) in\n-      trans_glue_frame_entry callsz spill\n+    let callsz = SIZE_fixed (word_n n_outgoing_args) in\n+      trans_glue_frame_entry callsz spill false\n \n   and get_mem_glue (g:glue) (inner:Il.mem -> unit) : fixup =\n     match htab_search cx.ctxt_glue_code g with"}]}