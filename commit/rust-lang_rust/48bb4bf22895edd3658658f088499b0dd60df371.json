{"sha": "48bb4bf22895edd3658658f088499b0dd60df371", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ4YmI0YmYyMjg5NWVkZDM2NTg2NThmMDg4NDk5YjBkZDYwZGYzNzE=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2020-11-20T16:30:04Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-11-20T16:30:04Z"}, "message": "Merge #6595\n\n6595: Don't wrap parens around expr in remove_dbg assist if its in conditions r=Veykril a=Veykril\n\nIf the expr in the `dbg!` macro consists of multiple elements it won't remove the parentheses if its in a `match` or condition-using construct, as these are followed by siblings causing the `is_leaf` check to fail.\n\nCo-authored-by: Lukas Wirth <lukastw97@gmail.com>", "tree": {"sha": "696c39c005c76f9e718782d7c18152a84ca6f4dc", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/696c39c005c76f9e718782d7c18152a84ca6f4dc"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/48bb4bf22895edd3658658f088499b0dd60df371", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJft+8MCRBK7hj4Ov3rIwAAdHIIAGmxijNcf1f7DEbjV5+fctzp\nrlvE7N3Ca+YTcegU8y+7/0E4M0eF53urEafvyCmqT03JO0oPOgR12CEJxF/L/ahZ\nfXTBQQkiJqsRub6mXu6AyHs9OJeTW5UX66hRcvHOkw126FWuX4oAEfCULxQ7mP0u\nn4CR4ztcfKLYqpMC2vi00DZruGqwd5O1gD4oaPfHr/kadxMdzpHgnrJ8PiX9Yf0f\nwgM9OeW2Rsff6FTTxgJDKSv1BBA0K1xvxBc+7wjA8D5BLcS/VlFo+MNZlJVZSCRk\nxZ6nAXGcq1hkDADDg8MCjG61itzItDicVrtvOg4HBvOJNtzUt0rTkElFjAoO460=\n=2a5l\n-----END PGP SIGNATURE-----\n", "payload": "tree 696c39c005c76f9e718782d7c18152a84ca6f4dc\nparent 66db0d3cadd4fefd70543aba8eae57e8db99935a\nparent 5d39f6a357a519226165af5614f381054f3c33ea\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1605889804 +0000\ncommitter GitHub <noreply@github.com> 1605889804 +0000\n\nMerge #6595\n\n6595: Don't wrap parens around expr in remove_dbg assist if its in conditions r=Veykril a=Veykril\n\nIf the expr in the `dbg!` macro consists of multiple elements it won't remove the parentheses if its in a `match` or condition-using construct, as these are followed by siblings causing the `is_leaf` check to fail.\n\nCo-authored-by: Lukas Wirth <lukastw97@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/48bb4bf22895edd3658658f088499b0dd60df371", "html_url": "https://github.com/rust-lang/rust/commit/48bb4bf22895edd3658658f088499b0dd60df371", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/48bb4bf22895edd3658658f088499b0dd60df371/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "66db0d3cadd4fefd70543aba8eae57e8db99935a", "url": "https://api.github.com/repos/rust-lang/rust/commits/66db0d3cadd4fefd70543aba8eae57e8db99935a", "html_url": "https://github.com/rust-lang/rust/commit/66db0d3cadd4fefd70543aba8eae57e8db99935a"}, {"sha": "5d39f6a357a519226165af5614f381054f3c33ea", "url": "https://api.github.com/repos/rust-lang/rust/commits/5d39f6a357a519226165af5614f381054f3c33ea", "html_url": "https://github.com/rust-lang/rust/commit/5d39f6a357a519226165af5614f381054f3c33ea"}], "stats": {"total": 71, "additions": 64, "deletions": 7}, "files": [{"sha": "eae6367c112e2091e18c254d84f86a72bb2d395e", "filename": "crates/assists/src/handlers/remove_dbg.rs", "status": "modified", "additions": 64, "deletions": 7, "changes": 71, "blob_url": "https://github.com/rust-lang/rust/blob/48bb4bf22895edd3658658f088499b0dd60df371/crates%2Fassists%2Fsrc%2Fhandlers%2Fremove_dbg.rs", "raw_url": "https://github.com/rust-lang/rust/raw/48bb4bf22895edd3658658f088499b0dd60df371/crates%2Fassists%2Fsrc%2Fhandlers%2Fremove_dbg.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fassists%2Fsrc%2Fhandlers%2Fremove_dbg.rs?ref=48bb4bf22895edd3658658f088499b0dd60df371", "patch": "@@ -1,6 +1,6 @@\n use syntax::{\n     ast::{self, AstNode},\n-    SyntaxElement, SyntaxKind, TextRange, TextSize, T,\n+    match_ast, SyntaxElement, SyntaxKind, TextRange, TextSize, T,\n };\n \n use crate::{AssistContext, AssistId, AssistKind, Assists};\n@@ -49,12 +49,29 @@ fn adjusted_macro_contents(macro_call: &ast::MacroCall) -> Option<String> {\n         macro_text_with_brackets.len() - TextSize::of(')'),\n     ));\n \n-    let is_leaf = macro_call.syntax().next_sibling().is_none();\n-    Some(if !is_leaf && needs_parentheses_around_macro_contents(contents) {\n-        format!(\"({})\", macro_text_in_brackets)\n-    } else {\n-        macro_text_in_brackets.to_string()\n-    })\n+    Some(\n+        if !is_leaf_or_control_flow_expr(macro_call)\n+            && needs_parentheses_around_macro_contents(contents)\n+        {\n+            format!(\"({})\", macro_text_in_brackets)\n+        } else {\n+            macro_text_in_brackets.to_string()\n+        },\n+    )\n+}\n+\n+fn is_leaf_or_control_flow_expr(macro_call: &ast::MacroCall) -> bool {\n+    macro_call.syntax().next_sibling().is_none()\n+        || match macro_call.syntax().parent() {\n+            Some(parent) => match_ast! {\n+                match parent {\n+                    ast::Condition(_it) => true,\n+                    ast::MatchExpr(_it) => true,\n+                    _ => false,\n+                }\n+            },\n+            None => false,\n+        }\n }\n \n /// Verifies that the given macro_call actually matches the given name\n@@ -361,4 +378,44 @@ fn main() {\n             r#\"let res = (foo..=bar).foo();\"#,\n         );\n     }\n+\n+    #[test]\n+    fn test_remove_dbg_followed_by_block() {\n+        check_assist(\n+            remove_dbg,\n+            r#\"fn foo() {\n+    if <|>dbg!(x || y) {}\n+}\"#,\n+            r#\"fn foo() {\n+    if x || y {}\n+}\"#,\n+        );\n+        check_assist(\n+            remove_dbg,\n+            r#\"fn foo() {\n+    while let foo = <|>dbg!(&x) {}\n+}\"#,\n+            r#\"fn foo() {\n+    while let foo = &x {}\n+}\"#,\n+        );\n+        check_assist(\n+            remove_dbg,\n+            r#\"fn foo() {\n+    if let foo = <|>dbg!(&x) {}\n+}\"#,\n+            r#\"fn foo() {\n+    if let foo = &x {}\n+}\"#,\n+        );\n+        check_assist(\n+            remove_dbg,\n+            r#\"fn foo() {\n+    match <|>dbg!(&x) {}\n+}\"#,\n+            r#\"fn foo() {\n+    match &x {}\n+}\"#,\n+        );\n+    }\n }"}]}