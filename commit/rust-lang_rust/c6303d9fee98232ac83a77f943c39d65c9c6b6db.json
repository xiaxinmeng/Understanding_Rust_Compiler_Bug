{"sha": "c6303d9fee98232ac83a77f943c39d65c9c6b6db", "node_id": "MDY6Q29tbWl0NzI0NzEyOmM2MzAzZDlmZWU5ODIzMmFjODNhNzdmOTQzYzM5ZDY1YzljNmI2ZGI=", "commit": {"author": {"name": "oxalica", "email": "oxalicc@pm.me", "date": "2019-10-05T12:55:27Z"}, "committer": {"name": "oxalica", "email": "oxalicc@pm.me", "date": "2019-10-05T12:55:27Z"}, "message": "Use raw cfgs in json project and fix typo", "tree": {"sha": "9c0f29993289916e3cc43d7be9cfa6f0a62b7754", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9c0f29993289916e3cc43d7be9cfa6f0a62b7754"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c6303d9fee98232ac83a77f943c39d65c9c6b6db", "comment_count": 0, "verification": {"verified": false, "reason": "unknown_key", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEXLDp5dXVcfV/VA/qztOS3gxIPQAFAl2Ykr8ACgkQztOS3gxI\nPQB7sBAAw7G4u/dp172g8SP+JAqbp7S9MA5jGMxwcNCOaFmnXzMJegW8jIKRnNt+\nkWH3X9hwqHruMv4oiraBJ4FYmY+WivEa1GbnUZa/xlcYkDLNkRvvUfkhlNYNQVCM\nAQ1LWC+LglzTwJ2VNolSQ/oEbjXU7i3wATPhqH/27JExtGmlCiAbWPjrsaECwRGx\nyS++/Y27kFPopqG9vsdz/h7QVrE2wBNaTP7JflLmQi2joVbJ7MwhhEZLTE/85sXr\nmBHDSj7/cNziFBPrpK+E5Z38CWplilrmp5v5P9V6YYXGMGhMIYFYe7lJfcLtxlwi\nfMXvDtqojGKpA0RaE1zpAv8M0SAP1KC4QHEZOjM+XgZOm4oiXfeE205vrBm/Tb6L\nnFiNMja+I73fQmkeqrG6rtx6n0NkaowPIAUrujixG8adeFsq1LcfGZBwgs+nD6pR\ndjUyDU8gMqFExaSSb1vLqLKTL8A7yBSvduwSFKyqoOAA4fycYt5Edu9dKm8OwAwE\nZfnq1GWN9/EnZHev+gGiTtrnMwxkkv4Adc9NoApA9BTFa2mPoA7Y99ozbraz8ujA\nzjVEQ3WuSJ/QvD3dSG+eZmlJ4lgTk3NqdLejpUdmXgb+sY/bYjohJIFoSzj+lZ4n\nAYgzmma0qIQ8mA4Zl3Fzu2V6SqfRjNudcZqsxFRqLSI6j/a0m2M=\n=J5zK\n-----END PGP SIGNATURE-----", "payload": "tree 9c0f29993289916e3cc43d7be9cfa6f0a62b7754\nparent b271cb18d5ab19624e751867df6705cd1e94edbc\nauthor oxalica <oxalicc@pm.me> 1570280127 +0800\ncommitter oxalica <oxalicc@pm.me> 1570280127 +0800\n\nUse raw cfgs in json project and fix typo\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c6303d9fee98232ac83a77f943c39d65c9c6b6db", "html_url": "https://github.com/rust-lang/rust/commit/c6303d9fee98232ac83a77f943c39d65c9c6b6db", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c6303d9fee98232ac83a77f943c39d65c9c6b6db/comments", "author": {"login": "oxalica", "id": 14816024, "node_id": "MDQ6VXNlcjE0ODE2MDI0", "avatar_url": "https://avatars.githubusercontent.com/u/14816024?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oxalica", "html_url": "https://github.com/oxalica", "followers_url": "https://api.github.com/users/oxalica/followers", "following_url": "https://api.github.com/users/oxalica/following{/other_user}", "gists_url": "https://api.github.com/users/oxalica/gists{/gist_id}", "starred_url": "https://api.github.com/users/oxalica/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oxalica/subscriptions", "organizations_url": "https://api.github.com/users/oxalica/orgs", "repos_url": "https://api.github.com/users/oxalica/repos", "events_url": "https://api.github.com/users/oxalica/events{/privacy}", "received_events_url": "https://api.github.com/users/oxalica/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oxalica", "id": 14816024, "node_id": "MDQ6VXNlcjE0ODE2MDI0", "avatar_url": "https://avatars.githubusercontent.com/u/14816024?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oxalica", "html_url": "https://github.com/oxalica", "followers_url": "https://api.github.com/users/oxalica/followers", "following_url": "https://api.github.com/users/oxalica/following{/other_user}", "gists_url": "https://api.github.com/users/oxalica/gists{/gist_id}", "starred_url": "https://api.github.com/users/oxalica/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oxalica/subscriptions", "organizations_url": "https://api.github.com/users/oxalica/orgs", "repos_url": "https://api.github.com/users/oxalica/repos", "events_url": "https://api.github.com/users/oxalica/events{/privacy}", "received_events_url": "https://api.github.com/users/oxalica/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b271cb18d5ab19624e751867df6705cd1e94edbc", "url": "https://api.github.com/repos/rust-lang/rust/commits/b271cb18d5ab19624e751867df6705cd1e94edbc", "html_url": "https://github.com/rust-lang/rust/commit/b271cb18d5ab19624e751867df6705cd1e94edbc"}], "stats": {"total": 27, "additions": 18, "deletions": 9}, "files": [{"sha": "2ba82ab051f96eee2da9a8599121dcc1c135e4ee", "filename": "crates/ra_lsp_server/tests/heavy_tests/main.rs", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/c6303d9fee98232ac83a77f943c39d65c9c6b6db/crates%2Fra_lsp_server%2Ftests%2Fheavy_tests%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c6303d9fee98232ac83a77f943c39d65c9c6b6db/crates%2Fra_lsp_server%2Ftests%2Fheavy_tests%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_lsp_server%2Ftests%2Fheavy_tests%2Fmain.rs?ref=c6303d9fee98232ac83a77f943c39d65c9c6b6db", "patch": "@@ -286,7 +286,13 @@ fn test_missing_module_code_action_in_json_project() {\n \n     let project = json!({\n         \"roots\": [path],\n-        \"crates\": [ { \"root_module\": path.join(\"src/lib.rs\"), \"deps\": [], \"edition\": \"2015\" } ]\n+        \"crates\": [ {\n+            \"root_module\": path.join(\"src/lib.rs\"),\n+            \"deps\": [],\n+            \"edition\": \"2015\",\n+            \"atom_cfgs\": [],\n+            \"key_value_cfgs\": {}\n+        } ]\n     });\n \n     let code = format!("}, {"sha": "1bacb1d09a155cff835d5345c114c76083305a9e", "filename": "crates/ra_project_model/src/json_project.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/c6303d9fee98232ac83a77f943c39d65c9c6b6db/crates%2Fra_project_model%2Fsrc%2Fjson_project.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c6303d9fee98232ac83a77f943c39d65c9c6b6db/crates%2Fra_project_model%2Fsrc%2Fjson_project.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_project_model%2Fsrc%2Fjson_project.rs?ref=c6303d9fee98232ac83a77f943c39d65c9c6b6db", "patch": "@@ -2,6 +2,7 @@\n \n use std::path::PathBuf;\n \n+use rustc_hash::{FxHashMap, FxHashSet};\n use serde::Deserialize;\n \n /// A root points to the directory which contains Rust crates. rust-analyzer watches all files in\n@@ -19,8 +20,8 @@ pub struct Crate {\n     pub(crate) root_module: PathBuf,\n     pub(crate) edition: Edition,\n     pub(crate) deps: Vec<Dep>,\n-    #[serde(default)]\n-    pub(crate) features: Vec<String>,\n+    pub(crate) atom_cfgs: FxHashSet<String>,\n+    pub(crate) key_value_cfgs: FxHashMap<String, String>,\n }\n \n #[derive(Clone, Copy, Debug, Deserialize)]"}, {"sha": "640a5ebd3213c984954ac5ea2a32c92aefbd2c73", "filename": "crates/ra_project_model/src/lib.rs", "status": "modified", "additions": 8, "deletions": 6, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/c6303d9fee98232ac83a77f943c39d65c9c6b6db/crates%2Fra_project_model%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c6303d9fee98232ac83a77f943c39d65c9c6b6db/crates%2Fra_project_model%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_project_model%2Fsrc%2Flib.rs?ref=c6303d9fee98232ac83a77f943c39d65c9c6b6db", "patch": "@@ -134,11 +134,13 @@ impl ProjectWorkspace {\n                             json_project::Edition::Edition2015 => Edition::Edition2015,\n                             json_project::Edition::Edition2018 => Edition::Edition2018,\n                         };\n-                        // FIXME: cfg options\n-                        // Default to enable test for workspace crates.\n-                        let cfg_options = default_cfg_options\n-                            .clone()\n-                            .features(krate.features.iter().map(Into::into));\n+                        let mut cfg_options = default_cfg_options.clone();\n+                        for name in &krate.atom_cfgs {\n+                            cfg_options = cfg_options.atom(name.into());\n+                        }\n+                        for (key, value) in &krate.key_value_cfgs {\n+                            cfg_options = cfg_options.key_value(key.into(), value.into());\n+                        }\n                         crates.insert(\n                             crate_id,\n                             crate_graph.add_crate_root(file_id, edition, cfg_options),\n@@ -309,7 +311,7 @@ pub fn get_rustc_cfg_options() -> CfgOptions {\n     let mut cfg_options = CfgOptions::default();\n \n     match (|| -> Result<_> {\n-        // `cfg(test)` ans `cfg(debug_assertion)` is handled outside, so we suppress them here.\n+        // `cfg(test)` and `cfg(debug_assertion)` are handled outside, so we suppress them here.\n         let output = Command::new(\"rustc\").args(&[\"--print\", \"cfg\", \"-O\"]).output()?;\n         if !output.status.success() {\n             Err(\"failed to get rustc cfgs\")?;"}]}