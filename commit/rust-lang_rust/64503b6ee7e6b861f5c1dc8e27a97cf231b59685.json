{"sha": "64503b6ee7e6b861f5c1dc8e27a97cf231b59685", "node_id": "MDY6Q29tbWl0NzI0NzEyOjY0NTAzYjZlZTdlNmI4NjFmNWMxZGM4ZTI3YTk3Y2YyMzFiNTk2ODU=", "commit": {"author": {"name": "topecongiro", "email": "seuchida@gmail.com", "date": "2017-08-12T09:00:57Z"}, "committer": {"name": "topecongiro", "email": "seuchida@gmail.com", "date": "2017-08-12T09:00:57Z"}, "message": "Include 'let' keyword to the span for ast::Local", "tree": {"sha": "5fff01ab39bcc0d95771817096a089210cad0deb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5fff01ab39bcc0d95771817096a089210cad0deb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/64503b6ee7e6b861f5c1dc8e27a97cf231b59685", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/64503b6ee7e6b861f5c1dc8e27a97cf231b59685", "html_url": "https://github.com/rust-lang/rust/commit/64503b6ee7e6b861f5c1dc8e27a97cf231b59685", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/64503b6ee7e6b861f5c1dc8e27a97cf231b59685/comments", "author": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "committer": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bffc973da8a7045d6ad5c678eab6fd57ab49ed54", "url": "https://api.github.com/repos/rust-lang/rust/commits/bffc973da8a7045d6ad5c678eab6fd57ab49ed54", "html_url": "https://github.com/rust-lang/rust/commit/bffc973da8a7045d6ad5c678eab6fd57ab49ed54"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "15f05df58b5077fa8f54d83a33f75aa2c776fa23", "filename": "src/libsyntax/parse/parser.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/64503b6ee7e6b861f5c1dc8e27a97cf231b59685/src%2Flibsyntax%2Fparse%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/64503b6ee7e6b861f5c1dc8e27a97cf231b59685/src%2Flibsyntax%2Fparse%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fparser.rs?ref=64503b6ee7e6b861f5c1dc8e27a97cf231b59685", "patch": "@@ -3587,7 +3587,7 @@ impl<'a> Parser<'a> {\n \n     /// Parse a local variable declaration\n     fn parse_local(&mut self, attrs: ThinVec<Attribute>) -> PResult<'a, P<Local>> {\n-        let lo = self.span;\n+        let lo = self.prev_span;\n         let pat = self.parse_pat()?;\n \n         let ty = if self.eat(&token::Colon) {"}]}