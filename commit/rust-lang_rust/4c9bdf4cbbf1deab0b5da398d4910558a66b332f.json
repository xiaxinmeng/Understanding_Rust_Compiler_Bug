{"sha": "4c9bdf4cbbf1deab0b5da398d4910558a66b332f", "node_id": "C_kwDOAAsO6NoAKDRjOWJkZjRjYmJmMWRlYWIwYjVkYTM5OGQ0OTEwNTU4YTY2YjMzMmY", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-12-12T11:24:20Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-12-12T11:24:20Z"}, "message": "Auto merge of #90423 - Aaron1011:deduplicate-projection, r=jackh726\n\nDeduplicate projection sub-obligations", "tree": {"sha": "e4fbffd7c9d800a4bbe9cfbdcbb0778c85bbe2d0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e4fbffd7c9d800a4bbe9cfbdcbb0778c85bbe2d0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4c9bdf4cbbf1deab0b5da398d4910558a66b332f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4c9bdf4cbbf1deab0b5da398d4910558a66b332f", "html_url": "https://github.com/rust-lang/rust/commit/4c9bdf4cbbf1deab0b5da398d4910558a66b332f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4c9bdf4cbbf1deab0b5da398d4910558a66b332f/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a0a4c7d1e48c39a73119eb9107d402d60c83293b", "url": "https://api.github.com/repos/rust-lang/rust/commits/a0a4c7d1e48c39a73119eb9107d402d60c83293b", "html_url": "https://github.com/rust-lang/rust/commit/a0a4c7d1e48c39a73119eb9107d402d60c83293b"}, {"sha": "39d44e72ca2ef82ea294f64e7ef3db23b4fdfd04", "url": "https://api.github.com/repos/rust-lang/rust/commits/39d44e72ca2ef82ea294f64e7ef3db23b4fdfd04", "html_url": "https://github.com/rust-lang/rust/commit/39d44e72ca2ef82ea294f64e7ef3db23b4fdfd04"}], "stats": {"total": 6, "additions": 6, "deletions": 0}, "files": [{"sha": "4a23206402e264de82e007a7933581f4f6fd65ff", "filename": "compiler/rustc_trait_selection/src/traits/project.rs", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/4c9bdf4cbbf1deab0b5da398d4910558a66b332f/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fproject.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4c9bdf4cbbf1deab0b5da398d4910558a66b332f/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fproject.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fproject.rs?ref=4c9bdf4cbbf1deab0b5da398d4910558a66b332f", "patch": "@@ -20,6 +20,7 @@ use super::{Normalized, NormalizedTy, ProjectionCacheEntry, ProjectionCacheKey};\n use crate::infer::type_variable::{TypeVariableOrigin, TypeVariableOriginKind};\n use crate::infer::{InferCtxt, InferOk, LateBoundRegionConversionTime};\n use crate::traits::error_reporting::InferCtxtExt as _;\n+use rustc_data_structures::sso::SsoHashSet;\n use rustc_data_structures::stack::ensure_sufficient_stack;\n use rustc_errors::ErrorReported;\n use rustc_hir::def_id::DefId;\n@@ -944,9 +945,14 @@ fn opt_normalize_projection_type<'a, 'b, 'tcx>(\n                 Normalized { value: projected_ty, obligations: projected_obligations }\n             };\n \n+            let mut deduped: SsoHashSet<_> = Default::default();\n             let mut canonical =\n                 SelectionContext::with_query_mode(selcx.infcx(), TraitQueryMode::Canonical);\n+\n             result.obligations.drain_filter(|projected_obligation| {\n+                if !deduped.insert(projected_obligation.clone()) {\n+                    return true;\n+                }\n                 // If any global obligations always apply, considering regions, then we don't\n                 // need to include them. The `is_global` check rules out inference variables,\n                 // so there's no need for the caller of `opt_normalize_projection_type`"}]}