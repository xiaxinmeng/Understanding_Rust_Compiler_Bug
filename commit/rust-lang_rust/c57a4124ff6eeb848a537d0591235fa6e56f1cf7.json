{"sha": "c57a4124ff6eeb848a537d0591235fa6e56f1cf7", "node_id": "MDY6Q29tbWl0NzI0NzEyOmM1N2E0MTI0ZmY2ZWViODQ4YTUzN2QwNTkxMjM1ZmE2ZTU2ZjFjZjc=", "commit": {"author": {"name": "Simon Sapin", "email": "simon.sapin@exyr.org", "date": "2015-06-08T17:43:04Z"}, "committer": {"name": "Simon Sapin", "email": "simon.sapin@exyr.org", "date": "2015-06-08T17:50:28Z"}, "message": "Address a review comment and fix a bootstrapping issue", "tree": {"sha": "acbd1765474273f030bdf5197b7a26a011c04546", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/acbd1765474273f030bdf5197b7a26a011c04546"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c57a4124ff6eeb848a537d0591235fa6e56f1cf7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c57a4124ff6eeb848a537d0591235fa6e56f1cf7", "html_url": "https://github.com/rust-lang/rust/commit/c57a4124ff6eeb848a537d0591235fa6e56f1cf7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c57a4124ff6eeb848a537d0591235fa6e56f1cf7/comments", "author": {"login": "SimonSapin", "id": 291359, "node_id": "MDQ6VXNlcjI5MTM1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/291359?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SimonSapin", "html_url": "https://github.com/SimonSapin", "followers_url": "https://api.github.com/users/SimonSapin/followers", "following_url": "https://api.github.com/users/SimonSapin/following{/other_user}", "gists_url": "https://api.github.com/users/SimonSapin/gists{/gist_id}", "starred_url": "https://api.github.com/users/SimonSapin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SimonSapin/subscriptions", "organizations_url": "https://api.github.com/users/SimonSapin/orgs", "repos_url": "https://api.github.com/users/SimonSapin/repos", "events_url": "https://api.github.com/users/SimonSapin/events{/privacy}", "received_events_url": "https://api.github.com/users/SimonSapin/received_events", "type": "User", "site_admin": false}, "committer": {"login": "SimonSapin", "id": 291359, "node_id": "MDQ6VXNlcjI5MTM1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/291359?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SimonSapin", "html_url": "https://github.com/SimonSapin", "followers_url": "https://api.github.com/users/SimonSapin/followers", "following_url": "https://api.github.com/users/SimonSapin/following{/other_user}", "gists_url": "https://api.github.com/users/SimonSapin/gists{/gist_id}", "starred_url": "https://api.github.com/users/SimonSapin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SimonSapin/subscriptions", "organizations_url": "https://api.github.com/users/SimonSapin/orgs", "repos_url": "https://api.github.com/users/SimonSapin/repos", "events_url": "https://api.github.com/users/SimonSapin/events{/privacy}", "received_events_url": "https://api.github.com/users/SimonSapin/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7ac6b58237dca474a5ff187a8fc9d0cea884d91f", "url": "https://api.github.com/repos/rust-lang/rust/commits/7ac6b58237dca474a5ff187a8fc9d0cea884d91f", "html_url": "https://github.com/rust-lang/rust/commit/7ac6b58237dca474a5ff187a8fc9d0cea884d91f"}], "stats": {"total": 43, "additions": 37, "deletions": 6}, "files": [{"sha": "ce594180c0327c7f0eeb9b8a3f1cc55e524cb837", "filename": "src/libcollections/str.rs", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/c57a4124ff6eeb848a537d0591235fa6e56f1cf7/src%2Flibcollections%2Fstr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c57a4124ff6eeb848a537d0591235fa6e56f1cf7/src%2Flibcollections%2Fstr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcollections%2Fstr.rs?ref=c57a4124ff6eeb848a537d0591235fa6e56f1cf7", "patch": "@@ -1856,16 +1856,21 @@ impl str {\n         let mut s = String::with_capacity(self.len());\n         for (i, c) in self[..].char_indices() {\n             if c == '\u03a3' {\n+                // \u03a3 maps to \u03c3, except at the end of a word where it maps to \u03c2.\n+                // This is the only conditional (contextual) but language-independent mapping\n+                // in `SpecialCasing.txt`,\n+                // so hard-code it rather than have a generic \"condition\" mechanim.\n+                // See https://github.com/rust-lang/rust/issues/26035\n                 map_uppercase_sigma(self, i, &mut s)\n             } else {\n                 s.extend(c.to_lowercase());\n             }\n         }\n         return s;\n \n-        #[cold]\n-        #[inline(never)]\n         fn map_uppercase_sigma(from: &str, i: usize, to: &mut String) {\n+            // See http://www.unicode.org/versions/Unicode7.0.0/ch03.pdf#G33992\n+            // for the definition of `Final_Sigma`.\n             debug_assert!('\u03a3'.len_utf8() == 2);\n             let is_word_final =\n                 case_ignoreable_then_cased(from[..i].chars().rev()) &&"}, {"sha": "1042ec0d86fac3482f8843f7b779e37e8e823aa6", "filename": "src/libcollectionstest/str.rs", "status": "modified", "additions": 27, "deletions": 1, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/c57a4124ff6eeb848a537d0591235fa6e56f1cf7/src%2Flibcollectionstest%2Fstr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c57a4124ff6eeb848a537d0591235fa6e56f1cf7/src%2Flibcollectionstest%2Fstr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcollectionstest%2Fstr.rs?ref=c57a4124ff6eeb848a537d0591235fa6e56f1cf7", "patch": "@@ -1690,8 +1690,34 @@ fn trim_ws() {\n #[test]\n fn to_lowercase() {\n     assert_eq!(\"\".to_lowercase(), \"\");\n+    assert_eq!(\"A\u00c9\u01c5a\u00e9 \".to_lowercase(), \"a\u00e9\u01c6a\u00e9 \");\n+\n     // https://github.com/rust-lang/rust/issues/26035\n-    assert_eq!(\"'\u03a3 A\u00c9\u03a3'\u03a3'' \u03a3 \u01c5\u03a3\".to_lowercase(), \"'\u03c3 a\u00e9\u03c3'\u03c2'' \u03c3 \u01c6\u03c2\");\n+    assert_eq!(\"\u0391\u03a3\".to_lowercase(), \"\u03b1\u03c2\");\n+    assert_eq!(\"\u0391'\u03a3\".to_lowercase(), \"\u03b1'\u03c2\");\n+    assert_eq!(\"\u0391''\u03a3\".to_lowercase(), \"\u03b1''\u03c2\");\n+\n+    assert_eq!(\"\u0391\u03a3 \u0391\".to_lowercase(), \"\u03b1\u03c2 \u03b1\");\n+    assert_eq!(\"\u0391'\u03a3 \u0391\".to_lowercase(), \"\u03b1'\u03c2 \u03b1\");\n+    assert_eq!(\"\u0391''\u03a3 \u0391\".to_lowercase(), \"\u03b1''\u03c2 \u03b1\");\n+\n+    assert_eq!(\"\u0391\u03a3' \u0391\".to_lowercase(), \"\u03b1\u03c2' \u03b1\");\n+    assert_eq!(\"\u0391\u03a3'' \u0391\".to_lowercase(), \"\u03b1\u03c2'' \u03b1\");\n+\n+    assert_eq!(\"\u0391'\u03a3' \u0391\".to_lowercase(), \"\u03b1'\u03c2' \u03b1\");\n+    assert_eq!(\"\u0391''\u03a3'' \u0391\".to_lowercase(), \"\u03b1''\u03c2'' \u03b1\");\n+\n+    assert_eq!(\"\u0391 \u03a3\".to_lowercase(), \"\u03b1 \u03c3\");\n+    assert_eq!(\"\u0391 '\u03a3\".to_lowercase(), \"\u03b1 '\u03c3\");\n+    assert_eq!(\"\u0391 ''\u03a3\".to_lowercase(), \"\u03b1 ''\u03c3\");\n+\n+    assert_eq!(\"\u03a3\".to_lowercase(), \"\u03c3\");\n+    assert_eq!(\"'\u03a3\".to_lowercase(), \"'\u03c3\");\n+    assert_eq!(\"''\u03a3\".to_lowercase(), \"''\u03c3\");\n+\n+    assert_eq!(\"\u0391\u03a3\u0391\".to_lowercase(), \"\u03b1\u03c3\u03b1\");\n+    assert_eq!(\"\u0391\u03a3'\u0391\".to_lowercase(), \"\u03b1\u03c3'\u03b1\");\n+    assert_eq!(\"\u0391\u03a3''\u0391\".to_lowercase(), \"\u03b1\u03c3''\u03b1\");\n }\n \n #[test]"}, {"sha": "1737de827e3cead9414212814a613d4eeb0decc0", "filename": "src/librustc_lint/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c57a4124ff6eeb848a537d0591235fa6e56f1cf7/src%2Flibrustc_lint%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c57a4124ff6eeb848a537d0591235fa6e56f1cf7/src%2Flibrustc_lint%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_lint%2Flib.rs?ref=c57a4124ff6eeb848a537d0591235fa6e56f1cf7", "patch": "@@ -32,7 +32,7 @@\n \n #![feature(box_patterns)]\n #![feature(box_syntax)]\n-#![feature(collections)]\n+#![cfg_attr(stage0, feature(collections))]\n #![feature(core)]\n #![feature(quote)]\n #![feature(rustc_diagnostic_macros)]"}, {"sha": "5b1300b18b63bedd013d3999d4f4fd2032c12d27", "filename": "src/librustc_unicode/char.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/c57a4124ff6eeb848a537d0591235fa6e56f1cf7/src%2Flibrustc_unicode%2Fchar.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c57a4124ff6eeb848a537d0591235fa6e56f1cf7/src%2Flibrustc_unicode%2Fchar.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_unicode%2Fchar.rs?ref=c57a4124ff6eeb848a537d0591235fa6e56f1cf7", "patch": "@@ -70,7 +70,7 @@ impl Iterator for ToUppercase {\n /// An iterator over the titlecase mapping of a given character, returned from\n /// the [`to_titlecase` method](../primitive.char.html#method.to_titlecase) on\n /// characters.\n-#[stable(feature = \"unicode_case_mapping\", since = \"1.2.0\")]\n+#[unstable(feature = \"unicode\", reason = \"recently added\")]\n pub struct ToTitlecase(CaseMappingIter);\n \n #[stable(feature = \"unicode_case_mapping\", since = \"1.2.0\")]\n@@ -481,7 +481,7 @@ impl char {\n     /// Returns an iterator which yields the characters corresponding to the\n     /// lowercase equivalent of the character. If no conversion is possible then\n     /// an iterator with just the input character is returned.\n-    #[stable(feature = \"unicode_case_mapping\", since = \"1.2.0\")]\n+    #[unstable(feature = \"unicode\", reason = \"recently added\")]\n     #[inline]\n     pub fn to_titlecase(self) -> ToTitlecase {\n         ToTitlecase(CaseMappingIter::new(conversions::to_title(self)))"}]}