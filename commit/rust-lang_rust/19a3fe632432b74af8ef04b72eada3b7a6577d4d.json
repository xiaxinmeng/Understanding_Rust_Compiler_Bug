{"sha": "19a3fe632432b74af8ef04b72eada3b7a6577d4d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE5YTNmZTYzMjQzMmI3NGFmOGVmMDRiNzJlYWRhM2I3YTY1NzdkNGQ=", "commit": {"author": {"name": "Bastian Kauschke", "email": "bastian_kauschke@hotmail.de", "date": "2020-11-10T09:08:51Z"}, "committer": {"name": "Bastian Kauschke", "email": "bastian_kauschke@hotmail.de", "date": "2020-11-10T09:08:51Z"}, "message": "exhaustively enumerate all values of a const param", "tree": {"sha": "375a2b1bcff83a74cadd93bdc83b36d1b41ccb07", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/375a2b1bcff83a74cadd93bdc83b36d1b41ccb07"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/19a3fe632432b74af8ef04b72eada3b7a6577d4d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/19a3fe632432b74af8ef04b72eada3b7a6577d4d", "html_url": "https://github.com/rust-lang/rust/commit/19a3fe632432b74af8ef04b72eada3b7a6577d4d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/19a3fe632432b74af8ef04b72eada3b7a6577d4d/comments", "author": {"login": "lcnr", "id": 29864074, "node_id": "MDQ6VXNlcjI5ODY0MDc0", "avatar_url": "https://avatars.githubusercontent.com/u/29864074?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lcnr", "html_url": "https://github.com/lcnr", "followers_url": "https://api.github.com/users/lcnr/followers", "following_url": "https://api.github.com/users/lcnr/following{/other_user}", "gists_url": "https://api.github.com/users/lcnr/gists{/gist_id}", "starred_url": "https://api.github.com/users/lcnr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lcnr/subscriptions", "organizations_url": "https://api.github.com/users/lcnr/orgs", "repos_url": "https://api.github.com/users/lcnr/repos", "events_url": "https://api.github.com/users/lcnr/events{/privacy}", "received_events_url": "https://api.github.com/users/lcnr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "lcnr", "id": 29864074, "node_id": "MDQ6VXNlcjI5ODY0MDc0", "avatar_url": "https://avatars.githubusercontent.com/u/29864074?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lcnr", "html_url": "https://github.com/lcnr", "followers_url": "https://api.github.com/users/lcnr/followers", "following_url": "https://api.github.com/users/lcnr/following{/other_user}", "gists_url": "https://api.github.com/users/lcnr/gists{/gist_id}", "starred_url": "https://api.github.com/users/lcnr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lcnr/subscriptions", "organizations_url": "https://api.github.com/users/lcnr/orgs", "repos_url": "https://api.github.com/users/lcnr/repos", "events_url": "https://api.github.com/users/lcnr/events{/privacy}", "received_events_url": "https://api.github.com/users/lcnr/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a8310e202c236a43f6c9d9af877fd54a8abb461e", "url": "https://api.github.com/repos/rust-lang/rust/commits/a8310e202c236a43f6c9d9af877fd54a8abb461e", "html_url": "https://github.com/rust-lang/rust/commit/a8310e202c236a43f6c9d9af877fd54a8abb461e"}], "stats": {"total": 310, "additions": 310, "deletions": 0}, "files": [{"sha": "fdea1fb0c3ead2327e27d149329c08c397f48969", "filename": "src/test/ui/const-generics/exhaustive-value.full.stderr", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/19a3fe632432b74af8ef04b72eada3b7a6577d4d/src%2Ftest%2Fui%2Fconst-generics%2Fexhaustive-value.full.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/19a3fe632432b74af8ef04b72eada3b7a6577d4d/src%2Ftest%2Fui%2Fconst-generics%2Fexhaustive-value.full.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fexhaustive-value.full.stderr?ref=19a3fe632432b74af8ef04b72eada3b7a6577d4d", "patch": "@@ -0,0 +1,19 @@\n+error[E0277]: the trait bound `(): Foo<N>` is not satisfied\n+  --> $DIR/exhaustive-value.rs:267:5\n+   |\n+LL |     fn test() {}\n+   |     --------- required by `Foo::test`\n+...\n+LL |     <() as Foo<N>>::test()\n+   |     ^^^^^^^^^^^^^^^^^^^^ the trait `Foo<N>` is not implemented for `()`\n+   |\n+   = help: the following implementations were found:\n+             <() as Foo<0_u8>>\n+             <() as Foo<100_u8>>\n+             <() as Foo<101_u8>>\n+             <() as Foo<102_u8>>\n+           and 252 others\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0277`."}, {"sha": "fdea1fb0c3ead2327e27d149329c08c397f48969", "filename": "src/test/ui/const-generics/exhaustive-value.min.stderr", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/19a3fe632432b74af8ef04b72eada3b7a6577d4d/src%2Ftest%2Fui%2Fconst-generics%2Fexhaustive-value.min.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/19a3fe632432b74af8ef04b72eada3b7a6577d4d/src%2Ftest%2Fui%2Fconst-generics%2Fexhaustive-value.min.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fexhaustive-value.min.stderr?ref=19a3fe632432b74af8ef04b72eada3b7a6577d4d", "patch": "@@ -0,0 +1,19 @@\n+error[E0277]: the trait bound `(): Foo<N>` is not satisfied\n+  --> $DIR/exhaustive-value.rs:267:5\n+   |\n+LL |     fn test() {}\n+   |     --------- required by `Foo::test`\n+...\n+LL |     <() as Foo<N>>::test()\n+   |     ^^^^^^^^^^^^^^^^^^^^ the trait `Foo<N>` is not implemented for `()`\n+   |\n+   = help: the following implementations were found:\n+             <() as Foo<0_u8>>\n+             <() as Foo<100_u8>>\n+             <() as Foo<101_u8>>\n+             <() as Foo<102_u8>>\n+           and 252 others\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0277`."}, {"sha": "fce036b0da624dc09ac58982141cf37d14643ab8", "filename": "src/test/ui/const-generics/exhaustive-value.rs", "status": "added", "additions": 272, "deletions": 0, "changes": 272, "blob_url": "https://github.com/rust-lang/rust/blob/19a3fe632432b74af8ef04b72eada3b7a6577d4d/src%2Ftest%2Fui%2Fconst-generics%2Fexhaustive-value.rs", "raw_url": "https://github.com/rust-lang/rust/raw/19a3fe632432b74af8ef04b72eada3b7a6577d4d/src%2Ftest%2Fui%2Fconst-generics%2Fexhaustive-value.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fexhaustive-value.rs?ref=19a3fe632432b74af8ef04b72eada3b7a6577d4d", "patch": "@@ -0,0 +1,272 @@\n+// revisions: full min\n+#![cfg_attr(full, feature(const_generics))]\n+#![cfg_attr(full, allow(incomplete_features))]\n+#![cfg_attr(min, feature(min_const_generics))]\n+\n+trait Foo<const N: u8> {\n+    fn test() {}\n+}\n+impl Foo<0> for () {}\n+impl Foo<1> for () {}\n+impl Foo<2> for () {}\n+impl Foo<3> for () {}\n+impl Foo<4> for () {}\n+impl Foo<5> for () {}\n+impl Foo<6> for () {}\n+impl Foo<7> for () {}\n+impl Foo<8> for () {}\n+impl Foo<9> for () {}\n+impl Foo<10> for () {}\n+impl Foo<11> for () {}\n+impl Foo<12> for () {}\n+impl Foo<13> for () {}\n+impl Foo<14> for () {}\n+impl Foo<15> for () {}\n+impl Foo<16> for () {}\n+impl Foo<17> for () {}\n+impl Foo<18> for () {}\n+impl Foo<19> for () {}\n+impl Foo<20> for () {}\n+impl Foo<21> for () {}\n+impl Foo<22> for () {}\n+impl Foo<23> for () {}\n+impl Foo<24> for () {}\n+impl Foo<25> for () {}\n+impl Foo<26> for () {}\n+impl Foo<27> for () {}\n+impl Foo<28> for () {}\n+impl Foo<29> for () {}\n+impl Foo<30> for () {}\n+impl Foo<31> for () {}\n+impl Foo<32> for () {}\n+impl Foo<33> for () {}\n+impl Foo<34> for () {}\n+impl Foo<35> for () {}\n+impl Foo<36> for () {}\n+impl Foo<37> for () {}\n+impl Foo<38> for () {}\n+impl Foo<39> for () {}\n+impl Foo<40> for () {}\n+impl Foo<41> for () {}\n+impl Foo<42> for () {}\n+impl Foo<43> for () {}\n+impl Foo<44> for () {}\n+impl Foo<45> for () {}\n+impl Foo<46> for () {}\n+impl Foo<47> for () {}\n+impl Foo<48> for () {}\n+impl Foo<49> for () {}\n+impl Foo<50> for () {}\n+impl Foo<51> for () {}\n+impl Foo<52> for () {}\n+impl Foo<53> for () {}\n+impl Foo<54> for () {}\n+impl Foo<55> for () {}\n+impl Foo<56> for () {}\n+impl Foo<57> for () {}\n+impl Foo<58> for () {}\n+impl Foo<59> for () {}\n+impl Foo<60> for () {}\n+impl Foo<61> for () {}\n+impl Foo<62> for () {}\n+impl Foo<63> for () {}\n+impl Foo<64> for () {}\n+impl Foo<65> for () {}\n+impl Foo<66> for () {}\n+impl Foo<67> for () {}\n+impl Foo<68> for () {}\n+impl Foo<69> for () {}\n+impl Foo<70> for () {}\n+impl Foo<71> for () {}\n+impl Foo<72> for () {}\n+impl Foo<73> for () {}\n+impl Foo<74> for () {}\n+impl Foo<75> for () {}\n+impl Foo<76> for () {}\n+impl Foo<77> for () {}\n+impl Foo<78> for () {}\n+impl Foo<79> for () {}\n+impl Foo<80> for () {}\n+impl Foo<81> for () {}\n+impl Foo<82> for () {}\n+impl Foo<83> for () {}\n+impl Foo<84> for () {}\n+impl Foo<85> for () {}\n+impl Foo<86> for () {}\n+impl Foo<87> for () {}\n+impl Foo<88> for () {}\n+impl Foo<89> for () {}\n+impl Foo<90> for () {}\n+impl Foo<91> for () {}\n+impl Foo<92> for () {}\n+impl Foo<93> for () {}\n+impl Foo<94> for () {}\n+impl Foo<95> for () {}\n+impl Foo<96> for () {}\n+impl Foo<97> for () {}\n+impl Foo<98> for () {}\n+impl Foo<99> for () {}\n+impl Foo<100> for () {}\n+impl Foo<101> for () {}\n+impl Foo<102> for () {}\n+impl Foo<103> for () {}\n+impl Foo<104> for () {}\n+impl Foo<105> for () {}\n+impl Foo<106> for () {}\n+impl Foo<107> for () {}\n+impl Foo<108> for () {}\n+impl Foo<109> for () {}\n+impl Foo<110> for () {}\n+impl Foo<111> for () {}\n+impl Foo<112> for () {}\n+impl Foo<113> for () {}\n+impl Foo<114> for () {}\n+impl Foo<115> for () {}\n+impl Foo<116> for () {}\n+impl Foo<117> for () {}\n+impl Foo<118> for () {}\n+impl Foo<119> for () {}\n+impl Foo<120> for () {}\n+impl Foo<121> for () {}\n+impl Foo<122> for () {}\n+impl Foo<123> for () {}\n+impl Foo<124> for () {}\n+impl Foo<125> for () {}\n+impl Foo<126> for () {}\n+impl Foo<127> for () {}\n+impl Foo<128> for () {}\n+impl Foo<129> for () {}\n+impl Foo<130> for () {}\n+impl Foo<131> for () {}\n+impl Foo<132> for () {}\n+impl Foo<133> for () {}\n+impl Foo<134> for () {}\n+impl Foo<135> for () {}\n+impl Foo<136> for () {}\n+impl Foo<137> for () {}\n+impl Foo<138> for () {}\n+impl Foo<139> for () {}\n+impl Foo<140> for () {}\n+impl Foo<141> for () {}\n+impl Foo<142> for () {}\n+impl Foo<143> for () {}\n+impl Foo<144> for () {}\n+impl Foo<145> for () {}\n+impl Foo<146> for () {}\n+impl Foo<147> for () {}\n+impl Foo<148> for () {}\n+impl Foo<149> for () {}\n+impl Foo<150> for () {}\n+impl Foo<151> for () {}\n+impl Foo<152> for () {}\n+impl Foo<153> for () {}\n+impl Foo<154> for () {}\n+impl Foo<155> for () {}\n+impl Foo<156> for () {}\n+impl Foo<157> for () {}\n+impl Foo<158> for () {}\n+impl Foo<159> for () {}\n+impl Foo<160> for () {}\n+impl Foo<161> for () {}\n+impl Foo<162> for () {}\n+impl Foo<163> for () {}\n+impl Foo<164> for () {}\n+impl Foo<165> for () {}\n+impl Foo<166> for () {}\n+impl Foo<167> for () {}\n+impl Foo<168> for () {}\n+impl Foo<169> for () {}\n+impl Foo<170> for () {}\n+impl Foo<171> for () {}\n+impl Foo<172> for () {}\n+impl Foo<173> for () {}\n+impl Foo<174> for () {}\n+impl Foo<175> for () {}\n+impl Foo<176> for () {}\n+impl Foo<177> for () {}\n+impl Foo<178> for () {}\n+impl Foo<179> for () {}\n+impl Foo<180> for () {}\n+impl Foo<181> for () {}\n+impl Foo<182> for () {}\n+impl Foo<183> for () {}\n+impl Foo<184> for () {}\n+impl Foo<185> for () {}\n+impl Foo<186> for () {}\n+impl Foo<187> for () {}\n+impl Foo<188> for () {}\n+impl Foo<189> for () {}\n+impl Foo<190> for () {}\n+impl Foo<191> for () {}\n+impl Foo<192> for () {}\n+impl Foo<193> for () {}\n+impl Foo<194> for () {}\n+impl Foo<195> for () {}\n+impl Foo<196> for () {}\n+impl Foo<197> for () {}\n+impl Foo<198> for () {}\n+impl Foo<199> for () {}\n+impl Foo<200> for () {}\n+impl Foo<201> for () {}\n+impl Foo<202> for () {}\n+impl Foo<203> for () {}\n+impl Foo<204> for () {}\n+impl Foo<205> for () {}\n+impl Foo<206> for () {}\n+impl Foo<207> for () {}\n+impl Foo<208> for () {}\n+impl Foo<209> for () {}\n+impl Foo<210> for () {}\n+impl Foo<211> for () {}\n+impl Foo<212> for () {}\n+impl Foo<213> for () {}\n+impl Foo<214> for () {}\n+impl Foo<215> for () {}\n+impl Foo<216> for () {}\n+impl Foo<217> for () {}\n+impl Foo<218> for () {}\n+impl Foo<219> for () {}\n+impl Foo<220> for () {}\n+impl Foo<221> for () {}\n+impl Foo<222> for () {}\n+impl Foo<223> for () {}\n+impl Foo<224> for () {}\n+impl Foo<225> for () {}\n+impl Foo<226> for () {}\n+impl Foo<227> for () {}\n+impl Foo<228> for () {}\n+impl Foo<229> for () {}\n+impl Foo<230> for () {}\n+impl Foo<231> for () {}\n+impl Foo<232> for () {}\n+impl Foo<233> for () {}\n+impl Foo<234> for () {}\n+impl Foo<235> for () {}\n+impl Foo<236> for () {}\n+impl Foo<237> for () {}\n+impl Foo<238> for () {}\n+impl Foo<239> for () {}\n+impl Foo<240> for () {}\n+impl Foo<241> for () {}\n+impl Foo<242> for () {}\n+impl Foo<243> for () {}\n+impl Foo<244> for () {}\n+impl Foo<245> for () {}\n+impl Foo<246> for () {}\n+impl Foo<247> for () {}\n+impl Foo<248> for () {}\n+impl Foo<249> for () {}\n+impl Foo<250> for () {}\n+impl Foo<251> for () {}\n+impl Foo<252> for () {}\n+impl Foo<253> for () {}\n+impl Foo<254> for () {}\n+impl Foo<255> for () {}\n+\n+fn foo<const N: u8>() {\n+    <() as Foo<N>>::test() //~ ERROR the trait bound `(): Foo<N>`\n+}\n+\n+fn main() {\n+    foo::<7>();\n+}"}]}