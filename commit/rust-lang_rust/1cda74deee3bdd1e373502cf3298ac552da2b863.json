{"sha": "1cda74deee3bdd1e373502cf3298ac552da2b863", "node_id": "MDY6Q29tbWl0NzI0NzEyOjFjZGE3NGRlZWUzYmRkMWUzNzM1MDJjZjMyOThhYzU1MmRhMmI4NjM=", "commit": {"author": {"name": "Marijn Haverbeke", "email": "marijnh@gmail.com", "date": "2011-09-15T09:42:56Z"}, "committer": {"name": "Marijn Haverbeke", "email": "marijnh@gmail.com", "date": "2011-09-15T09:42:56Z"}, "message": "Add representation for by-ref let bindings\n\nIssue #918", "tree": {"sha": "b20afe955d342405c24acfa677acdf152dbff035", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b20afe955d342405c24acfa677acdf152dbff035"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1cda74deee3bdd1e373502cf3298ac552da2b863", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1cda74deee3bdd1e373502cf3298ac552da2b863", "html_url": "https://github.com/rust-lang/rust/commit/1cda74deee3bdd1e373502cf3298ac552da2b863", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1cda74deee3bdd1e373502cf3298ac552da2b863/comments", "author": {"login": "marijnh", "id": 144427, "node_id": "MDQ6VXNlcjE0NDQyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/144427?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marijnh", "html_url": "https://github.com/marijnh", "followers_url": "https://api.github.com/users/marijnh/followers", "following_url": "https://api.github.com/users/marijnh/following{/other_user}", "gists_url": "https://api.github.com/users/marijnh/gists{/gist_id}", "starred_url": "https://api.github.com/users/marijnh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marijnh/subscriptions", "organizations_url": "https://api.github.com/users/marijnh/orgs", "repos_url": "https://api.github.com/users/marijnh/repos", "events_url": "https://api.github.com/users/marijnh/events{/privacy}", "received_events_url": "https://api.github.com/users/marijnh/received_events", "type": "User", "site_admin": false}, "committer": {"login": "marijnh", "id": 144427, "node_id": "MDQ6VXNlcjE0NDQyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/144427?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marijnh", "html_url": "https://github.com/marijnh", "followers_url": "https://api.github.com/users/marijnh/followers", "following_url": "https://api.github.com/users/marijnh/following{/other_user}", "gists_url": "https://api.github.com/users/marijnh/gists{/gist_id}", "starred_url": "https://api.github.com/users/marijnh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marijnh/subscriptions", "organizations_url": "https://api.github.com/users/marijnh/orgs", "repos_url": "https://api.github.com/users/marijnh/repos", "events_url": "https://api.github.com/users/marijnh/events{/privacy}", "received_events_url": "https://api.github.com/users/marijnh/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "197f360e30538f34398854e35366d8909b131057", "url": "https://api.github.com/repos/rust-lang/rust/commits/197f360e30538f34398854e35366d8909b131057", "html_url": "https://github.com/rust-lang/rust/commit/197f360e30538f34398854e35366d8909b131057"}], "stats": {"total": 50, "additions": 31, "deletions": 19}, "files": [{"sha": "f3850d977ee99c461bc385956a791132f2ac33f8", "filename": "src/comp/middle/alias.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/1cda74deee3bdd1e373502cf3298ac552da2b863/src%2Fcomp%2Fmiddle%2Falias.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1cda74deee3bdd1e373502cf3298ac552da2b863/src%2Fcomp%2Fmiddle%2Falias.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Falias.rs?ref=1cda74deee3bdd1e373502cf3298ac552da2b863", "patch": "@@ -144,7 +144,8 @@ fn visit_decl(cx: @ctx, d: @ast::decl, sc: scope, v: vt<scope>) {\n     visit::visit_decl(d, sc, v);\n     alt d.node {\n       ast::decl_local(locs) {\n-        for loc: @ast::local in locs {\n+        // FIXME check that init is lvalue\n+        for (style, loc) in locs {\n             alt loc.node.init {\n               some(init) {\n                 if init.op == ast::init_move {"}, {"sha": "11c56456ebfae54fb5e6cd12aadd9d27a755270a", "filename": "src/comp/middle/mut.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1cda74deee3bdd1e373502cf3298ac552da2b863/src%2Fcomp%2Fmiddle%2Fmut.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1cda74deee3bdd1e373502cf3298ac552da2b863/src%2Fcomp%2Fmiddle%2Fmut.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Fmut.rs?ref=1cda74deee3bdd1e373502cf3298ac552da2b863", "patch": "@@ -142,7 +142,7 @@ fn visit_decl(cx: @ctx, d: @decl, e: (), v: visit::vt<()>) {\n     visit::visit_decl(d, e, v);\n     alt d.node {\n       decl_local(locs) {\n-        for loc: @local in locs {\n+        for (_, loc) in locs {\n             alt loc.node.init {\n               some(init) {\n                 if init.op == init_move { check_move_rhs(cx, init.expr); }"}, {"sha": "587ad4541ce1c7fdbab02439c063872c1fa635f3", "filename": "src/comp/middle/resolve.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/1cda74deee3bdd1e373502cf3298ac552da2b863/src%2Fcomp%2Fmiddle%2Fresolve.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1cda74deee3bdd1e373502cf3298ac552da2b863/src%2Fcomp%2Fmiddle%2Fresolve.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Fresolve.rs?ref=1cda74deee3bdd1e373502cf3298ac552da2b863", "patch": "@@ -371,7 +371,7 @@ fn visit_decl_with_scope(d: @decl, sc: scopes, v: vt<scopes>) {\n         };\n     alt d.node {\n       decl_local(locs) {\n-        for loc in locs { v.visit_local(loc, sc, v);; *loc_pos += 1u; }\n+        for (_, loc) in locs { v.visit_local(loc, sc, v);; *loc_pos += 1u; }\n       }\n       decl_item(it) { v.visit_item(it, sc, v); }\n     }\n@@ -797,7 +797,7 @@ fn lookup_in_block(name: ident, b: ast::blk_, pos: uint, loc_pos: uint,\n                     let j = vec::len(locs);\n                     while j > 0u {\n                         j -= 1u;\n-                        let loc = locs[j];\n+                        let (_, loc) = locs[j];\n                         if ns == ns_value && (i < pos || j < loc_pos) {\n                             alt lookup_in_pat(name, loc.node.pat) {\n                               some(did) { ret some(ast::def_local(did)); }\n@@ -1315,7 +1315,7 @@ fn check_block(e: @env, b: ast::blk, x: (), v: vt<()>) {\n             alt d.node {\n               ast::decl_local(locs) {\n                 let local_values = checker(*e, \"value\");\n-                for loc in locs {\n+                for (_, loc) in locs {\n                     for each p in ast_util::pat_bindings(loc.node.pat) {\n                         let ident = alt p.node { pat_bind(n) { n } };\n                         add_name(local_values, p.span, ident);"}, {"sha": "3f517a4a7cd821d2a17194ed8a810708505a3801", "filename": "src/comp/middle/trans.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/1cda74deee3bdd1e373502cf3298ac552da2b863/src%2Fcomp%2Fmiddle%2Ftrans.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1cda74deee3bdd1e373502cf3298ac552da2b863/src%2Fcomp%2Fmiddle%2Ftrans.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Ftrans.rs?ref=1cda74deee3bdd1e373502cf3298ac552da2b863", "patch": "@@ -4538,7 +4538,7 @@ fn trans_stmt(cx: @block_ctxt, s: ast::stmt) -> result {\n       ast::stmt_decl(d, _) {\n         alt d.node {\n           ast::decl_local(locals) {\n-            for local: @ast::local in locals {\n+            for (_, local) in locals {\n                 bcx = init_local(bcx, local).bcx;\n             }\n           }\n@@ -4654,7 +4654,7 @@ iter block_locals(b: ast::blk) -> @ast::local {\n           ast::stmt_decl(d, _) {\n             alt d.node {\n               ast::decl_local(locals) {\n-                for local: @ast::local in locals { put local; }\n+                for (_, local) in locals { put local; }\n               }\n               _ {/* fall through */ }\n             }"}, {"sha": "39312e17ca1f26e9dc1a7af5e69361e7bf471692", "filename": "src/comp/middle/tstate/auxiliary.rs", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/1cda74deee3bdd1e373502cf3298ac552da2b863/src%2Fcomp%2Fmiddle%2Ftstate%2Fauxiliary.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1cda74deee3bdd1e373502cf3298ac552da2b863/src%2Fcomp%2Fmiddle%2Ftstate%2Fauxiliary.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Ftstate%2Fauxiliary.rs?ref=1cda74deee3bdd1e373502cf3298ac552da2b863", "patch": "@@ -1063,8 +1063,10 @@ fn local_to_bindings(loc: @local) -> binding {\n     {lhs: lhs, rhs: loc.node.init}\n }\n \n-fn locals_to_bindings(locals: [@local]) -> [binding] {\n-    vec::map(local_to_bindings, locals)\n+fn locals_to_bindings(locals: [(let_style, @local)]) -> [binding] {\n+    let rslt = [];\n+    for (_, loc) in locals { rslt += [local_to_bindings(loc)]; }\n+    ret rslt;\n }\n \n fn callee_modes(fcx: fn_ctxt, callee: node_id) -> [ty::mode] {"}, {"sha": "8cb28cfaca4aa464fd48ec5fd1ce819ee9a26ecf", "filename": "src/comp/middle/tstate/pre_post_conditions.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1cda74deee3bdd1e373502cf3298ac552da2b863/src%2Fcomp%2Fmiddle%2Ftstate%2Fpre_post_conditions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1cda74deee3bdd1e373502cf3298ac552da2b863/src%2Fcomp%2Fmiddle%2Ftstate%2Fpre_post_conditions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Ftstate%2Fpre_post_conditions.rs?ref=1cda74deee3bdd1e373502cf3298ac552da2b863", "patch": "@@ -572,7 +572,7 @@ fn find_pre_post_stmt(fcx: fn_ctxt, s: stmt) {\n           decl_local(alocals) {\n             let e_pp;\n             let prev_pp = empty_pre_post(num_constraints(fcx.enclosing));\n-            for alocal: @local in alocals {\n+            for (_, alocal) in alocals {\n                 alt alocal.node.init {\n                   some(an_init) {\n                     /* LHS always becomes initialized,"}, {"sha": "0e2ace6291bfb56201c1f0a7bcb7176c6a536151", "filename": "src/comp/middle/typeck.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1cda74deee3bdd1e373502cf3298ac552da2b863/src%2Fcomp%2Fmiddle%2Ftypeck.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1cda74deee3bdd1e373502cf3298ac552da2b863/src%2Fcomp%2Fmiddle%2Ftypeck.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Ftypeck.rs?ref=1cda74deee3bdd1e373502cf3298ac552da2b863", "patch": "@@ -2418,7 +2418,7 @@ fn check_stmt(fcx: @fn_ctxt, stmt: @ast::stmt) -> bool {\n         node_id = id;\n         alt decl.node {\n           ast::decl_local(ls) {\n-            for l: @ast::local in ls { bot |= check_decl_local(fcx, l); }\n+            for (_, l) in ls { bot |= check_decl_local(fcx, l); }\n           }\n           ast::decl_item(_) {/* ignore for now */ }\n         }"}, {"sha": "5e6269a9a8fa7c2fec1d4c94b6761c218cedd408", "filename": "src/comp/syntax/ast.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/1cda74deee3bdd1e373502cf3298ac552da2b863/src%2Fcomp%2Fsyntax%2Fast.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1cda74deee3bdd1e373502cf3298ac552da2b863/src%2Fcomp%2Fsyntax%2Fast.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fsyntax%2Fast.rs?ref=1cda74deee3bdd1e373502cf3298ac552da2b863", "patch": "@@ -149,7 +149,9 @@ type local = spanned<local_>;\n \n type decl = spanned<decl_>;\n \n-tag decl_ { decl_local([@local]); decl_item(@item); }\n+tag let_style { let_copy; let_ref; }\n+\n+tag decl_ { decl_local([(let_style, @local)]); decl_item(@item); }\n \n type arm = {pats: [@pat], guard: option::t<@expr>, body: blk};\n "}, {"sha": "d3702dacfc65d56b82d1e17c4350dd4db68a7a76", "filename": "src/comp/syntax/fold.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/1cda74deee3bdd1e373502cf3298ac552da2b863/src%2Fcomp%2Fsyntax%2Ffold.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1cda74deee3bdd1e373502cf3298ac552da2b863/src%2Fcomp%2Fsyntax%2Ffold.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fsyntax%2Ffold.rs?ref=1cda74deee3bdd1e373502cf3298ac552da2b863", "patch": "@@ -296,7 +296,10 @@ fn noop_fold_pat(p: pat_, fld: ast_fold) -> pat_ {\n \n fn noop_fold_decl(d: decl_, fld: ast_fold) -> decl_ {\n     ret alt d {\n-          decl_local(ls) { decl_local(vec::map(fld.fold_local, ls)) }\n+          decl_local(ls) {\n+            decl_local(vec::map({|l| let (st, lc) = l;\n+                                 (st, fld.fold_local(lc))}, ls))\n+          }\n           decl_item(it) { decl_item(fld.fold_item(it)) }\n         }\n }"}, {"sha": "4a449c25a97f7d91d442212129c7850bc6e6f2fc", "filename": "src/comp/syntax/parse/parser.rs", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/1cda74deee3bdd1e373502cf3298ac552da2b863/src%2Fcomp%2Fsyntax%2Fparse%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1cda74deee3bdd1e373502cf3298ac552da2b863/src%2Fcomp%2Fsyntax%2Fparse%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fsyntax%2Fparse%2Fparser.rs?ref=1cda74deee3bdd1e373502cf3298ac552da2b863", "patch": "@@ -1505,11 +1505,13 @@ fn parse_local(p: parser, allow_init: bool) -> @ast::local {\n }\n \n fn parse_let(p: parser) -> @ast::decl {\n+    fn parse_let_style(p: parser) -> ast::let_style {\n+        eat(p, token::BINOP(token::AND)) ? ast::let_ref : ast::let_copy\n+    }\n     let lo = p.get_lo_pos();\n-    let locals = [parse_local(p, true)];\n-    while p.peek() == token::COMMA {\n-        p.bump();\n-        locals += [parse_local(p, true)];\n+    let locals = [(parse_let_style(p), parse_local(p, true))];\n+    while eat(p, token::COMMA) {\n+        locals += [(parse_let_style(p), parse_local(p, true))];\n     }\n     ret @spanned(lo, p.get_last_hi_pos(), ast::decl_local(locals));\n }"}, {"sha": "b6964b429f519ed7c07ebcb243293ca980d5147f", "filename": "src/comp/syntax/print/pprust.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/1cda74deee3bdd1e373502cf3298ac552da2b863/src%2Fcomp%2Fsyntax%2Fprint%2Fpprust.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1cda74deee3bdd1e373502cf3298ac552da2b863/src%2Fcomp%2Fsyntax%2Fprint%2Fpprust.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fsyntax%2Fprint%2Fpprust.rs?ref=1cda74deee3bdd1e373502cf3298ac552da2b863", "patch": "@@ -1024,8 +1024,10 @@ fn print_decl(s: ps, decl: @ast::decl) {\n         space_if_not_bol(s);\n         ibox(s, indent_unit);\n         word_nbsp(s, \"let\");\n-        fn print_local(s: ps, loc: @ast::local) {\n+        fn print_local(s: ps, loc_st: (ast::let_style, @ast::local)) {\n+            let (st, loc) = loc_st;\n             ibox(s, indent_unit);\n+            if st == ast::let_ref { word(s.s, \"&\"); }\n             print_local_decl(s, loc);\n             end(s);\n             alt loc.node.init {"}, {"sha": "386f5564781efe2f97dce1daf88149fbdb77c14a", "filename": "src/comp/syntax/visit.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1cda74deee3bdd1e373502cf3298ac552da2b863/src%2Fcomp%2Fsyntax%2Fvisit.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1cda74deee3bdd1e373502cf3298ac552da2b863/src%2Fcomp%2Fsyntax%2Fvisit.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fsyntax%2Fvisit.rs?ref=1cda74deee3bdd1e373502cf3298ac552da2b863", "patch": "@@ -212,7 +212,7 @@ fn visit_stmt<E>(s: @stmt, e: E, v: vt<E>) {\n fn visit_decl<E>(d: @decl, e: E, v: vt<E>) {\n     alt d.node {\n       decl_local(locs) {\n-        for loc: @ast::local in locs { v.visit_local(loc, e, v); }\n+        for (_, loc) in locs { v.visit_local(loc, e, v); }\n       }\n       decl_item(it) { v.visit_item(it, e, v); }\n     }"}]}