{"sha": "b40788e89fac38781ddb838bb4fb0d706a6a3546", "node_id": "MDY6Q29tbWl0NzI0NzEyOmI0MDc4OGU4OWZhYzM4NzgxZGRiODM4YmI0ZmIwZDcwNmE2YTM1NDY=", "commit": {"author": {"name": "Tyler Mandry", "email": "tmandry@gmail.com", "date": "2019-07-27T00:13:14Z"}, "committer": {"name": "Tyler Mandry", "email": "tmandry@gmail.com", "date": "2019-08-06T21:16:47Z"}, "message": "Fix generator size regressions due to optimization\n\nI tested the generator optimizations in #60187 and #61922 on the Fuchsia\nbuild, and noticed that some small generators (about 8% of the async fns\nin our build) increased in size slightly.\n\nThis is because in #60187 we split the fields into two groups, a\n\"prefix\" non-overlap region and an overlap region, and lay them out\nseparately. This can introduce unnecessary padding bytes between the two\ngroups.\n\nIn every single case in the Fuchsia build, it was due to there being\nonly a single variant being used in the overlap region. This means that\nwe aren't doing any overlapping, period. So it's better to combine the\ntwo regions into one and lay out all the fields at once, which is what\nthis change does.", "tree": {"sha": "c47d72ff91fdeefe0ab916d283e0c4bef3a3f7d5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c47d72ff91fdeefe0ab916d283e0c4bef3a3f7d5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b40788e89fac38781ddb838bb4fb0d706a6a3546", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b40788e89fac38781ddb838bb4fb0d706a6a3546", "html_url": "https://github.com/rust-lang/rust/commit/b40788e89fac38781ddb838bb4fb0d706a6a3546", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b40788e89fac38781ddb838bb4fb0d706a6a3546/comments", "author": {"login": "tmandry", "id": 2280544, "node_id": "MDQ6VXNlcjIyODA1NDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/2280544?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tmandry", "html_url": "https://github.com/tmandry", "followers_url": "https://api.github.com/users/tmandry/followers", "following_url": "https://api.github.com/users/tmandry/following{/other_user}", "gists_url": "https://api.github.com/users/tmandry/gists{/gist_id}", "starred_url": "https://api.github.com/users/tmandry/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tmandry/subscriptions", "organizations_url": "https://api.github.com/users/tmandry/orgs", "repos_url": "https://api.github.com/users/tmandry/repos", "events_url": "https://api.github.com/users/tmandry/events{/privacy}", "received_events_url": "https://api.github.com/users/tmandry/received_events", "type": "User", "site_admin": false}, "committer": {"login": "tmandry", "id": 2280544, "node_id": "MDQ6VXNlcjIyODA1NDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/2280544?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tmandry", "html_url": "https://github.com/tmandry", "followers_url": "https://api.github.com/users/tmandry/followers", "following_url": "https://api.github.com/users/tmandry/following{/other_user}", "gists_url": "https://api.github.com/users/tmandry/gists{/gist_id}", "starred_url": "https://api.github.com/users/tmandry/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tmandry/subscriptions", "organizations_url": "https://api.github.com/users/tmandry/orgs", "repos_url": "https://api.github.com/users/tmandry/repos", "events_url": "https://api.github.com/users/tmandry/events{/privacy}", "received_events_url": "https://api.github.com/users/tmandry/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9d4ca879b88e3a21354dcda458d7e7f7ff6370b2", "url": "https://api.github.com/repos/rust-lang/rust/commits/9d4ca879b88e3a21354dcda458d7e7f7ff6370b2", "html_url": "https://github.com/rust-lang/rust/commit/9d4ca879b88e3a21354dcda458d7e7f7ff6370b2"}], "stats": {"total": 21, "additions": 21, "deletions": 0}, "files": [{"sha": "1908cc6c1e82885e28dd08e4a1267c0bb5ae535c", "filename": "src/librustc/ty/layout.rs", "status": "modified", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/b40788e89fac38781ddb838bb4fb0d706a6a3546/src%2Flibrustc%2Fty%2Flayout.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b40788e89fac38781ddb838bb4fb0d706a6a3546/src%2Flibrustc%2Fty%2Flayout.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Flayout.rs?ref=b40788e89fac38781ddb838bb4fb0d706a6a3546", "patch": "@@ -1368,6 +1368,27 @@ impl<'tcx> LayoutCx<'tcx, TyCtxt<'tcx>> {\n             }\n         }\n \n+        // Count the number of variants in use. If only one of them, then it is\n+        // impossible to overlap any locals in our layout. In this case it's\n+        // always better to make the remaining locals ineligible, so we can\n+        // lay them out with the other locals in the prefix and eliminate\n+        // unnecessary padding bytes.\n+        {\n+            let mut used_variants = BitSet::new_empty(info.variant_fields.len());\n+            for assignment in &assignments {\n+                match assignment {\n+                    Assigned(idx) => { used_variants.insert(*idx); }\n+                    _ => {}\n+                }\n+            }\n+            if used_variants.count() < 2 {\n+                for assignment in assignments.iter_mut() {\n+                    *assignment = Ineligible(None);\n+                }\n+                ineligible_locals.insert_all();\n+            }\n+        }\n+\n         // Write down the order of our locals that will be promoted to the prefix.\n         {\n             let mut idx = 0u32;"}]}