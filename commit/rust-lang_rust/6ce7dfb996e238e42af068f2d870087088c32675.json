{"sha": "6ce7dfb996e238e42af068f2d870087088c32675", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZjZTdkZmI5OTZlMjM4ZTQyYWYwNjhmMmQ4NzAwODcwODhjMzI2NzU=", "commit": {"author": {"name": "OGINO Masanori", "email": "masanori.ogino@gmail.com", "date": "2014-05-13T15:41:58Z"}, "committer": {"name": "OGINO Masanori", "email": "masanori.ogino@gmail.com", "date": "2014-05-14T00:14:45Z"}, "message": "Suppress a \"unused variable\" warning.\n\nSigned-off-by: OGINO Masanori <masanori.ogino@gmail.com>", "tree": {"sha": "bd0cd139936234678180740684f2ca82a58a5633", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bd0cd139936234678180740684f2ca82a58a5633"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6ce7dfb996e238e42af068f2d870087088c32675", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6ce7dfb996e238e42af068f2d870087088c32675", "html_url": "https://github.com/rust-lang/rust/commit/6ce7dfb996e238e42af068f2d870087088c32675", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6ce7dfb996e238e42af068f2d870087088c32675/comments", "author": {"login": "omasanori", "id": 167209, "node_id": "MDQ6VXNlcjE2NzIwOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/167209?v=4", "gravatar_id": "", "url": "https://api.github.com/users/omasanori", "html_url": "https://github.com/omasanori", "followers_url": "https://api.github.com/users/omasanori/followers", "following_url": "https://api.github.com/users/omasanori/following{/other_user}", "gists_url": "https://api.github.com/users/omasanori/gists{/gist_id}", "starred_url": "https://api.github.com/users/omasanori/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/omasanori/subscriptions", "organizations_url": "https://api.github.com/users/omasanori/orgs", "repos_url": "https://api.github.com/users/omasanori/repos", "events_url": "https://api.github.com/users/omasanori/events{/privacy}", "received_events_url": "https://api.github.com/users/omasanori/received_events", "type": "User", "site_admin": false}, "committer": {"login": "omasanori", "id": 167209, "node_id": "MDQ6VXNlcjE2NzIwOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/167209?v=4", "gravatar_id": "", "url": "https://api.github.com/users/omasanori", "html_url": "https://github.com/omasanori", "followers_url": "https://api.github.com/users/omasanori/followers", "following_url": "https://api.github.com/users/omasanori/following{/other_user}", "gists_url": "https://api.github.com/users/omasanori/gists{/gist_id}", "starred_url": "https://api.github.com/users/omasanori/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/omasanori/subscriptions", "organizations_url": "https://api.github.com/users/omasanori/orgs", "repos_url": "https://api.github.com/users/omasanori/repos", "events_url": "https://api.github.com/users/omasanori/events{/privacy}", "received_events_url": "https://api.github.com/users/omasanori/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "04c23d3fc19fddb47faddccaaa2d75f06d8a49e5", "url": "https://api.github.com/repos/rust-lang/rust/commits/04c23d3fc19fddb47faddccaaa2d75f06d8a49e5", "html_url": "https://github.com/rust-lang/rust/commit/04c23d3fc19fddb47faddccaaa2d75f06d8a49e5"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "dec68b9d89e6d693f60b9a01321417ba545d4733", "filename": "src/libstd/io/net/tcp.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6ce7dfb996e238e42af068f2d870087088c32675/src%2Flibstd%2Fio%2Fnet%2Ftcp.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6ce7dfb996e238e42af068f2d870087088c32675/src%2Flibstd%2Fio%2Fnet%2Ftcp.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fio%2Fnet%2Ftcp.rs?ref=6ce7dfb996e238e42af068f2d870087088c32675", "patch": "@@ -1116,7 +1116,7 @@ mod test {\n             spawn(proc() {\n                 tx.send(TcpStream::connect(addr.ip.to_str(), port).unwrap());\n             });\n-            let l = rx.recv();\n+            let _l = rx.recv();\n             for i in range(0, 1001) {\n                 match a.accept() {\n                     Ok(..) => break,"}]}