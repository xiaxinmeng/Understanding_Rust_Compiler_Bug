{"sha": "0019fe2459eb353688c8578459eded7d17359d22", "node_id": "MDY6Q29tbWl0NzI0NzEyOjAwMTlmZTI0NTllYjM1MzY4OGM4NTc4NDU5ZWRlZDdkMTczNTlkMjI=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2020-09-08T09:08:46Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2020-09-17T15:29:19Z"}, "message": "fix typo\n\nCo-authored-by: Oli Scherer <github35764891676564198441@oli-obk.de>", "tree": {"sha": "856b3f4af46a41d4a3a8aa67be698a465ab5dc29", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/856b3f4af46a41d4a3a8aa67be698a465ab5dc29"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0019fe2459eb353688c8578459eded7d17359d22", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0019fe2459eb353688c8578459eded7d17359d22", "html_url": "https://github.com/rust-lang/rust/commit/0019fe2459eb353688c8578459eded7d17359d22", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0019fe2459eb353688c8578459eded7d17359d22/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9a9988a4b04622805ae5060dcafc123964da2c3d", "url": "https://api.github.com/repos/rust-lang/rust/commits/9a9988a4b04622805ae5060dcafc123964da2c3d", "html_url": "https://github.com/rust-lang/rust/commit/9a9988a4b04622805ae5060dcafc123964da2c3d"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "f5c402de72766c1c11d416952e342dac1a4df49c", "filename": "cargo-miri/bin.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0019fe2459eb353688c8578459eded7d17359d22/cargo-miri%2Fbin.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0019fe2459eb353688c8578459eded7d17359d22/cargo-miri%2Fbin.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/cargo-miri%2Fbin.rs?ref=0019fe2459eb353688c8578459eded7d17359d22", "patch": "@@ -462,7 +462,7 @@ fn phase_cargo_rustc(args: env::Args) {\n         // But we cannot run it here, as cargo invoked us as a compiler -- our stdin and stdout are not\n         // like we want them.\n         // Instead of compiling, we write JSON into the output file with all the relevant command-line flags\n-        // and environment variables; this is sued alter when cargo calls us again in the CARGO_TARGET_RUNNER phase.\n+        // and environment variables; this is used when cargo calls us again in the CARGO_TARGET_RUNNER phase.\n         let info = CrateRunInfo::collect(args);\n \n         let mut path = PathBuf::from(get_arg_flag_value(\"--out-dir\").unwrap());"}]}