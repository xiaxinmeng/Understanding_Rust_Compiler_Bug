{"sha": "38ec810c37439a6a3742d85b950978d904b4f826", "node_id": "C_kwDOAAsO6NoAKDM4ZWM4MTBjMzc0MzlhNmEzNzQyZDg1Yjk1MDk3OGQ5MDRiNGY4MjY", "commit": {"author": {"name": "Alan Egerton", "email": "eggyal@gmail.com", "date": "2023-02-08T19:55:50Z"}, "committer": {"name": "Alan Egerton", "email": "eggyal@gmail.com", "date": "2023-02-08T19:55:50Z"}, "message": "Do not assemble supertraits for trait aliases", "tree": {"sha": "75f603c8fb8e54831636348b92176aee61bc8beb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/75f603c8fb8e54831636348b92176aee61bc8beb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/38ec810c37439a6a3742d85b950978d904b4f826", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQJFBAABCAAvFiEEvrRBFuOXsbT1OVTHfUwvbCISJTIFAmPj/lIRHGVnZ3lhbEBn\nbWFpbC5jb20ACgkQfUwvbCISJTIDgQ/+M6sOzrTbVEVesUV9Gr4EXavL2WNz5/8d\nmTaDk/9INkdd+ZTIcHg0UzU00D8vGcrmD09VELkW00VqnE0RG+HlG/C7CtYAzPbw\n59O80dkARHOmkbw1u7T1xXgsjRIhda0cyvVIjbk/IGVTjOneT4U2xIpKiqcgIefC\nWCNh67ZKvuYYOxVkxTYlPbRq1AjjSGRGtFR0SkDoc0yFv4NTPdhhRYcWoTlkHHjR\nR5lK5LO8YR/xJLWmM4UsKItAgrlNLBGb66bjTbC6dWPW0zpNGT3IG3XWrrx9QlAP\nvJuDXl1DlAx6Z3uByvBfZ3y9jaJkX1Wf4DdpRpjos328tP0cPppodoM9GP9y8Ebp\nL9sGnGRS3iax9JL654s+BVyDHBInIhGB6KhxxOrgAChJhn/59Z5jjC4fWfkQo/YG\nP2QbQ2QwkXW1DdazWd2prYaey+MHo6qcsiq2fcJyB99okiu4jZ6AZXZemytEuIcn\nHVMEx57JDObYal/T1P7gGIamoQIbqgQ+S+2qcDI8yvWbjJkgTajucwj09X9kp/wk\n02Hz13SxEr0Py+yGg0drp1BteNkdzA2M574L6rmdIZOV2+JaFv4WWOh951wN3BWx\nzntMc1ojTcv0aQFW6NXUqqjch4fQiTS7p45JxNaCUVSUdZTUzBhLNfi+yRyZ2b6p\nDnEwOiBUFZU=\n=9FpH\n-----END PGP SIGNATURE-----", "payload": "tree 75f603c8fb8e54831636348b92176aee61bc8beb\nparent 6eb9f2dd6752f591906281d8aa5e16a8c51a8801\nauthor Alan Egerton <eggyal@gmail.com> 1675886150 +0000\ncommitter Alan Egerton <eggyal@gmail.com> 1675886150 +0000\n\nDo not assemble supertraits for trait aliases\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/38ec810c37439a6a3742d85b950978d904b4f826", "html_url": "https://github.com/rust-lang/rust/commit/38ec810c37439a6a3742d85b950978d904b4f826", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/38ec810c37439a6a3742d85b950978d904b4f826/comments", "author": {"login": "eggyal", "id": 3089613, "node_id": "MDQ6VXNlcjMwODk2MTM=", "avatar_url": "https://avatars.githubusercontent.com/u/3089613?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eggyal", "html_url": "https://github.com/eggyal", "followers_url": "https://api.github.com/users/eggyal/followers", "following_url": "https://api.github.com/users/eggyal/following{/other_user}", "gists_url": "https://api.github.com/users/eggyal/gists{/gist_id}", "starred_url": "https://api.github.com/users/eggyal/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eggyal/subscriptions", "organizations_url": "https://api.github.com/users/eggyal/orgs", "repos_url": "https://api.github.com/users/eggyal/repos", "events_url": "https://api.github.com/users/eggyal/events{/privacy}", "received_events_url": "https://api.github.com/users/eggyal/received_events", "type": "User", "site_admin": false}, "committer": {"login": "eggyal", "id": 3089613, "node_id": "MDQ6VXNlcjMwODk2MTM=", "avatar_url": "https://avatars.githubusercontent.com/u/3089613?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eggyal", "html_url": "https://github.com/eggyal", "followers_url": "https://api.github.com/users/eggyal/followers", "following_url": "https://api.github.com/users/eggyal/following{/other_user}", "gists_url": "https://api.github.com/users/eggyal/gists{/gist_id}", "starred_url": "https://api.github.com/users/eggyal/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eggyal/subscriptions", "organizations_url": "https://api.github.com/users/eggyal/orgs", "repos_url": "https://api.github.com/users/eggyal/repos", "events_url": "https://api.github.com/users/eggyal/events{/privacy}", "received_events_url": "https://api.github.com/users/eggyal/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6eb9f2dd6752f591906281d8aa5e16a8c51a8801", "url": "https://api.github.com/repos/rust-lang/rust/commits/6eb9f2dd6752f591906281d8aa5e16a8c51a8801", "html_url": "https://github.com/rust-lang/rust/commit/6eb9f2dd6752f591906281d8aa5e16a8c51a8801"}], "stats": {"total": 69, "additions": 52, "deletions": 17}, "files": [{"sha": "d6b054d9626c3d93c861b4068faf32388228ae91", "filename": "compiler/rustc_hir_typeck/src/method/probe.rs", "status": "modified", "additions": 31, "deletions": 17, "changes": 48, "blob_url": "https://github.com/rust-lang/rust/blob/38ec810c37439a6a3742d85b950978d904b4f826/compiler%2Frustc_hir_typeck%2Fsrc%2Fmethod%2Fprobe.rs", "raw_url": "https://github.com/rust-lang/rust/raw/38ec810c37439a6a3742d85b950978d904b4f826/compiler%2Frustc_hir_typeck%2Fsrc%2Fmethod%2Fprobe.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_hir_typeck%2Fsrc%2Fmethod%2Fprobe.rs?ref=38ec810c37439a6a3742d85b950978d904b4f826", "patch": "@@ -951,24 +951,38 @@ impl<'a, 'tcx> ProbeContext<'a, 'tcx> {\n         let trait_ref = self.tcx.mk_trait_ref(trait_def_id, trait_substs);\n \n         if self.tcx.is_trait_alias(trait_def_id) {\n-            // For trait aliases, assume all supertraits are relevant.\n-            let bounds = iter::once(ty::Binder::dummy(trait_ref));\n-            self.elaborate_bounds(bounds, |this, new_trait_ref, item| {\n-                let new_trait_ref = this.erase_late_bound_regions(new_trait_ref);\n+            // For trait aliases, recursively assume all explicitly named traits are relevant\n+            for expansion in traits::expand_trait_aliases(\n+                self.tcx,\n+                iter::once((ty::Binder::dummy(trait_ref), self.span)),\n+            ) {\n+                let bound_trait_ref = expansion.trait_ref();\n+                for item in self.impl_or_trait_item(bound_trait_ref.def_id()) {\n+                    if !self.has_applicable_self(&item) {\n+                        self.record_static_candidate(CandidateSource::Trait(\n+                            bound_trait_ref.def_id(),\n+                        ));\n+                    } else {\n+                        let new_trait_ref = self.erase_late_bound_regions(bound_trait_ref);\n \n-                let (xform_self_ty, xform_ret_ty) =\n-                    this.xform_self_ty(&item, new_trait_ref.self_ty(), new_trait_ref.substs);\n-                this.push_candidate(\n-                    Candidate {\n-                        xform_self_ty,\n-                        xform_ret_ty,\n-                        item,\n-                        import_ids: import_ids.clone(),\n-                        kind: TraitCandidate(new_trait_ref),\n-                    },\n-                    false,\n-                );\n-            });\n+                        let (xform_self_ty, xform_ret_ty) = self.xform_self_ty(\n+                            &item,\n+                            new_trait_ref.self_ty(),\n+                            new_trait_ref.substs,\n+                        );\n+                        self.push_candidate(\n+                            Candidate {\n+                                xform_self_ty,\n+                                xform_ret_ty,\n+                                item,\n+                                import_ids: import_ids.clone(),\n+                                kind: TraitCandidate(new_trait_ref),\n+                            },\n+                            false,\n+                        );\n+                    }\n+                }\n+            }\n         } else {\n             debug_assert!(self.tcx.is_trait(trait_def_id));\n             if self.tcx.trait_is_auto(trait_def_id) {"}, {"sha": "9b41a8096c4e50cf927198d66590f14ebb4294fc", "filename": "tests/ui/traits/alias/issue-107747-do-not-assemble-supertraits.rs", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/38ec810c37439a6a3742d85b950978d904b4f826/tests%2Fui%2Ftraits%2Falias%2Fissue-107747-do-not-assemble-supertraits.rs", "raw_url": "https://github.com/rust-lang/rust/raw/38ec810c37439a6a3742d85b950978d904b4f826/tests%2Fui%2Ftraits%2Falias%2Fissue-107747-do-not-assemble-supertraits.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ftraits%2Falias%2Fissue-107747-do-not-assemble-supertraits.rs?ref=38ec810c37439a6a3742d85b950978d904b4f826", "patch": "@@ -0,0 +1,21 @@\n+// Regression test for #107747: methods from trait alias supertraits were brought into scope\n+//\n+// check-pass\n+\n+#![feature(trait_alias)]\n+\n+use std::fmt;\n+\n+trait Foo: fmt::Debug {}\n+trait Bar = Foo;\n+\n+#[derive(Debug)]\n+struct Qux(bool);\n+\n+impl fmt::Display for Qux {\n+    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {\n+        self.0.fmt(f)\n+    }\n+}\n+\n+fn main() {}"}]}