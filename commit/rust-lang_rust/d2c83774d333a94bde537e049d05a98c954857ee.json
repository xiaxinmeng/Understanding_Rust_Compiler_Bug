{"sha": "d2c83774d333a94bde537e049d05a98c954857ee", "node_id": "C_kwDOAAsO6NoAKGQyYzgzNzc0ZDMzM2E5NGJkZTUzN2UwNDlkMDVhOThjOTU0ODU3ZWU", "commit": {"author": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2021-10-08T11:29:03Z"}, "committer": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2021-10-08T11:29:03Z"}, "message": "Let stack_overflow::imp::cleanup call drop_handler directly\n\ninstead of through the Drop impl for Handler", "tree": {"sha": "30189238038d62f494361245b3fd48688922b154", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/30189238038d62f494361245b3fd48688922b154"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d2c83774d333a94bde537e049d05a98c954857ee", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d2c83774d333a94bde537e049d05a98c954857ee", "html_url": "https://github.com/rust-lang/rust/commit/d2c83774d333a94bde537e049d05a98c954857ee", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d2c83774d333a94bde537e049d05a98c954857ee/comments", "author": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bf9e6e5598fb714a2b2ba971f8a7404a877d7568", "url": "https://api.github.com/repos/rust-lang/rust/commits/bf9e6e5598fb714a2b2ba971f8a7404a877d7568", "html_url": "https://github.com/rust-lang/rust/commit/bf9e6e5598fb714a2b2ba971f8a7404a877d7568"}], "stats": {"total": 20, "additions": 10, "deletions": 10}, "files": [{"sha": "fa3791566b72ccbc2b4afe9987d241fab5e13c63", "filename": "library/std/src/sys/unix/stack_overflow.rs", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/d2c83774d333a94bde537e049d05a98c954857ee/library%2Fstd%2Fsrc%2Fsys%2Funix%2Fstack_overflow.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d2c83774d333a94bde537e049d05a98c954857ee/library%2Fstd%2Fsrc%2Fsys%2Funix%2Fstack_overflow.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsys%2Funix%2Fstack_overflow.rs?ref=d2c83774d333a94bde537e049d05a98c954857ee", "patch": "@@ -6,7 +6,7 @@ pub use self::imp::cleanup;\n pub use self::imp::init;\n \n pub struct Handler {\n-    _data: *mut libc::c_void,\n+    data: *mut libc::c_void,\n }\n \n impl Handler {\n@@ -15,14 +15,14 @@ impl Handler {\n     }\n \n     fn null() -> Handler {\n-        Handler { _data: crate::ptr::null_mut() }\n+        Handler { data: crate::ptr::null_mut() }\n     }\n }\n \n impl Drop for Handler {\n     fn drop(&mut self) {\n         unsafe {\n-            drop_handler(self);\n+            drop_handler(self.data);\n         }\n     }\n }\n@@ -134,12 +134,12 @@ mod imp {\n         }\n \n         let handler = make_handler();\n-        MAIN_ALTSTACK.store(handler._data, Ordering::Relaxed);\n+        MAIN_ALTSTACK.store(handler.data, Ordering::Relaxed);\n         mem::forget(handler);\n     }\n \n     pub unsafe fn cleanup() {\n-        Handler { _data: MAIN_ALTSTACK.load(Ordering::Relaxed) };\n+        drop_handler(MAIN_ALTSTACK.load(Ordering::Relaxed));\n     }\n \n     unsafe fn get_stackp() -> *mut libc::c_void {\n@@ -175,14 +175,14 @@ mod imp {\n         if stack.ss_flags & SS_DISABLE != 0 {\n             stack = get_stack();\n             sigaltstack(&stack, ptr::null_mut());\n-            Handler { _data: stack.ss_sp as *mut libc::c_void }\n+            Handler { data: stack.ss_sp as *mut libc::c_void }\n         } else {\n             Handler::null()\n         }\n     }\n \n-    pub unsafe fn drop_handler(handler: &mut Handler) {\n-        if !handler._data.is_null() {\n+    pub unsafe fn drop_handler(data: *mut libc::c_void) {\n+        if !data.is_null() {\n             let stack = libc::stack_t {\n                 ss_sp: ptr::null_mut(),\n                 ss_flags: SS_DISABLE,\n@@ -195,7 +195,7 @@ mod imp {\n             sigaltstack(&stack, ptr::null_mut());\n             // We know from `get_stackp` that the alternate stack we installed is part of a mapping\n             // that started one page earlier, so walk back a page and unmap from there.\n-            munmap(handler._data.sub(page_size()), SIGSTKSZ + page_size());\n+            munmap(data.sub(page_size()), SIGSTKSZ + page_size());\n         }\n     }\n }\n@@ -219,5 +219,5 @@ mod imp {\n         super::Handler::null()\n     }\n \n-    pub unsafe fn drop_handler(_handler: &mut super::Handler) {}\n+    pub unsafe fn drop_handler(_data: *mut libc::c_void) {}\n }"}]}