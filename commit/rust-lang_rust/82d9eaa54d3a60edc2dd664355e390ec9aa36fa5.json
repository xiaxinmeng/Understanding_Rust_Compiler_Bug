{"sha": "82d9eaa54d3a60edc2dd664355e390ec9aa36fa5", "node_id": "MDY6Q29tbWl0NzI0NzEyOjgyZDllYWE1NGQzYTYwZWRjMmRkNjY0MzU1ZTM5MGVjOWFhMzZmYTU=", "commit": {"author": {"name": "Pietro Albini", "email": "pietro@pietroalbini.org", "date": "2020-11-26T21:29:33Z"}, "committer": {"name": "Pietro Albini", "email": "pietro@pietroalbini.org", "date": "2020-12-23T18:35:22Z"}, "message": "bootstrap: convert rust-mingw to use Tarball", "tree": {"sha": "059cf8c3921c6d2e4c3c6b0882268522e2eee1d1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/059cf8c3921c6d2e4c3c6b0882268522e2eee1d1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/82d9eaa54d3a60edc2dd664355e390ec9aa36fa5", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE1JbYPtLJAsc22U9xPgar6Auq8ZwFAl/jje4ACgkQPgar6Auq\n8ZxK6A//aESd1smK5bciRxKQ+l8pyvhDYny3oN2uCVMLYyQGfAnmt6ie1hioHLuO\nh+tW5D+iZFVdkktgfpGLZz/m1pdbrUJfAIlUhWCEuOKtpMgCwlSgbxJ39/MyKn1v\nbnz1jnJ33W7Ee32wz7RR///SQwwD1KYMfFk4W0d4+lKmtbBex5Hd31ccogqesmop\nnn5nixsVXusbxGYazrkpZzuh1xaVoAGulyjxVFA4B7C7t5L7FBW0mR12+73KuVM4\naQSodfQVLwUGPBiCUfxikKBeh6UOCI3zGJFmAojrPD75hUD6lQdtF/yOWhjBFKXk\nP5FZ6zFPfTZMQ6WcGhMe/K5YK0pEWpd6N4xPBYEC6XtZ1cLA6BEnxAR/OZaQl5gO\nBVo+xACnyxGmPOZfI0y/zFoWP4rZrsHEIOXs4c7OU13tZKdhgO/xsuWHx9CsLk0a\nD8yu/J2oPgPBHOt8aTlhbVfz0iUxgBk15gD9own38DMh1VCIR9CalbrvEMBxCq+F\ndWZODzEeILvXcjN+lep6QHkf/6r1pmXIfUINFdcfpYsboD8M+sRgxYchWOhmbIPM\nEx0esBrpXNrAiWPYDQzRUBHgOvRJDGg7hZZTU3VGVf9CLjcHrmjPoO+9Sjer+fac\n4SpAjyDhH5HI66G/4F0k0RExls7QCMFXbV/vwWa4Vyvmnt5xhU8=\n=UO/s\n-----END PGP SIGNATURE-----", "payload": "tree 059cf8c3921c6d2e4c3c6b0882268522e2eee1d1\nparent 8ca46fc7a83734c9622f11f25d16b82316f44bcc\nauthor Pietro Albini <pietro@pietroalbini.org> 1606426173 +0100\ncommitter Pietro Albini <pietro@pietroalbini.org> 1608748522 +0100\n\nbootstrap: convert rust-mingw to use Tarball\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/82d9eaa54d3a60edc2dd664355e390ec9aa36fa5", "html_url": "https://github.com/rust-lang/rust/commit/82d9eaa54d3a60edc2dd664355e390ec9aa36fa5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/82d9eaa54d3a60edc2dd664355e390ec9aa36fa5/comments", "author": {"login": "pietroalbini", "id": 2299951, "node_id": "MDQ6VXNlcjIyOTk5NTE=", "avatar_url": "https://avatars.githubusercontent.com/u/2299951?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pietroalbini", "html_url": "https://github.com/pietroalbini", "followers_url": "https://api.github.com/users/pietroalbini/followers", "following_url": "https://api.github.com/users/pietroalbini/following{/other_user}", "gists_url": "https://api.github.com/users/pietroalbini/gists{/gist_id}", "starred_url": "https://api.github.com/users/pietroalbini/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pietroalbini/subscriptions", "organizations_url": "https://api.github.com/users/pietroalbini/orgs", "repos_url": "https://api.github.com/users/pietroalbini/repos", "events_url": "https://api.github.com/users/pietroalbini/events{/privacy}", "received_events_url": "https://api.github.com/users/pietroalbini/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pietroalbini", "id": 2299951, "node_id": "MDQ6VXNlcjIyOTk5NTE=", "avatar_url": "https://avatars.githubusercontent.com/u/2299951?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pietroalbini", "html_url": "https://github.com/pietroalbini", "followers_url": "https://api.github.com/users/pietroalbini/followers", "following_url": "https://api.github.com/users/pietroalbini/following{/other_user}", "gists_url": "https://api.github.com/users/pietroalbini/gists{/gist_id}", "starred_url": "https://api.github.com/users/pietroalbini/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pietroalbini/subscriptions", "organizations_url": "https://api.github.com/users/pietroalbini/orgs", "repos_url": "https://api.github.com/users/pietroalbini/repos", "events_url": "https://api.github.com/users/pietroalbini/events{/privacy}", "received_events_url": "https://api.github.com/users/pietroalbini/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8ca46fc7a83734c9622f11f25d16b82316f44bcc", "url": "https://api.github.com/repos/rust-lang/rust/commits/8ca46fc7a83734c9622f11f25d16b82316f44bcc", "html_url": "https://github.com/rust-lang/rust/commit/8ca46fc7a83734c9622f11f25d16b82316f44bcc"}], "stats": {"total": 28, "additions": 5, "deletions": 23}, "files": [{"sha": "cee8c411fa1fcb70d060697e3bab171113784978", "filename": "src/bootstrap/dist.rs", "status": "modified", "additions": 5, "deletions": 23, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/82d9eaa54d3a60edc2dd664355e390ec9aa36fa5/src%2Fbootstrap%2Fdist.rs", "raw_url": "https://github.com/rust-lang/rust/raw/82d9eaa54d3a60edc2dd664355e390ec9aa36fa5/src%2Fbootstrap%2Fdist.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fdist.rs?ref=82d9eaa54d3a60edc2dd664355e390ec9aa36fa5", "patch": "@@ -297,41 +297,23 @@ impl Step for Mingw {\n     /// without any extra installed software (e.g., we bundle gcc, libraries, etc).\n     fn run(self, builder: &Builder<'_>) -> Option<PathBuf> {\n         let host = self.host;\n-\n         if !host.contains(\"pc-windows-gnu\") {\n             return None;\n         }\n \n         builder.info(&format!(\"Dist mingw ({})\", host));\n         let _time = timeit(builder);\n-        let name = pkgname(builder, \"rust-mingw\");\n-        let image = tmpdir(builder).join(format!(\"{}-{}-image\", name, host.triple));\n-        let _ = fs::remove_dir_all(&image);\n-        t!(fs::create_dir_all(&image));\n+\n+        let mut tarball = Tarball::new(builder, \"rust-mingw\", &host.triple);\n+        tarball.set_product_name(\"Rust MinGW\");\n \n         // The first argument is a \"temporary directory\" which is just\n         // thrown away (this contains the runtime DLLs included in the rustc package\n         // above) and the second argument is where to place all the MinGW components\n         // (which is what we want).\n-        make_win_dist(&tmpdir(builder), &image, host, &builder);\n+        make_win_dist(&tmpdir(builder), tarball.image_dir(), host, &builder);\n \n-        let mut cmd = rust_installer(builder);\n-        cmd.arg(\"generate\")\n-            .arg(\"--product-name=Rust-MinGW\")\n-            .arg(\"--rel-manifest-dir=rustlib\")\n-            .arg(\"--success-message=Rust-MinGW-is-installed.\")\n-            .arg(\"--image-dir\")\n-            .arg(&image)\n-            .arg(\"--work-dir\")\n-            .arg(&tmpdir(builder))\n-            .arg(\"--output-dir\")\n-            .arg(&distdir(builder))\n-            .arg(format!(\"--package-name={}-{}\", name, host.triple))\n-            .arg(\"--component-name=rust-mingw\")\n-            .arg(\"--legacy-manifest-dirs=rustlib,cargo\");\n-        builder.run(&mut cmd);\n-        t!(fs::remove_dir_all(&image));\n-        Some(distdir(builder).join(format!(\"{}-{}.tar.gz\", name, host.triple)))\n+        Some(tarball.generate())\n     }\n }\n "}]}