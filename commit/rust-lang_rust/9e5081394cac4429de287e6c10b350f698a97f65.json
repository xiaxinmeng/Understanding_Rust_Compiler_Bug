{"sha": "9e5081394cac4429de287e6c10b350f698a97f65", "node_id": "MDY6Q29tbWl0NzI0NzEyOjllNTA4MTM5NGNhYzQ0MjlkZTI4N2U2YzEwYjM1MGY2OThhOTdmNjU=", "commit": {"author": {"name": "varkor", "email": "github@varkor.com", "date": "2019-12-23T12:39:48Z"}, "committer": {"name": "varkor", "email": "github@varkor.com", "date": "2019-12-23T12:39:48Z"}, "message": "Fix reformatting rebase issues", "tree": {"sha": "a0fb380448d6dfdc637e5537967c2c366d7cd6b1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a0fb380448d6dfdc637e5537967c2c366d7cd6b1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9e5081394cac4429de287e6c10b350f698a97f65", "comment_count": 5, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9e5081394cac4429de287e6c10b350f698a97f65", "html_url": "https://github.com/rust-lang/rust/commit/9e5081394cac4429de287e6c10b350f698a97f65", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9e5081394cac4429de287e6c10b350f698a97f65/comments", "author": {"login": "varkor", "id": 3943692, "node_id": "MDQ6VXNlcjM5NDM2OTI=", "avatar_url": "https://avatars.githubusercontent.com/u/3943692?v=4", "gravatar_id": "", "url": "https://api.github.com/users/varkor", "html_url": "https://github.com/varkor", "followers_url": "https://api.github.com/users/varkor/followers", "following_url": "https://api.github.com/users/varkor/following{/other_user}", "gists_url": "https://api.github.com/users/varkor/gists{/gist_id}", "starred_url": "https://api.github.com/users/varkor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/varkor/subscriptions", "organizations_url": "https://api.github.com/users/varkor/orgs", "repos_url": "https://api.github.com/users/varkor/repos", "events_url": "https://api.github.com/users/varkor/events{/privacy}", "received_events_url": "https://api.github.com/users/varkor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "varkor", "id": 3943692, "node_id": "MDQ6VXNlcjM5NDM2OTI=", "avatar_url": "https://avatars.githubusercontent.com/u/3943692?v=4", "gravatar_id": "", "url": "https://api.github.com/users/varkor", "html_url": "https://github.com/varkor", "followers_url": "https://api.github.com/users/varkor/followers", "following_url": "https://api.github.com/users/varkor/following{/other_user}", "gists_url": "https://api.github.com/users/varkor/gists{/gist_id}", "starred_url": "https://api.github.com/users/varkor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/varkor/subscriptions", "organizations_url": "https://api.github.com/users/varkor/orgs", "repos_url": "https://api.github.com/users/varkor/repos", "events_url": "https://api.github.com/users/varkor/events{/privacy}", "received_events_url": "https://api.github.com/users/varkor/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9a602243c422f183f574ff53e5d3e9e85fcc1210", "url": "https://api.github.com/repos/rust-lang/rust/commits/9a602243c422f183f574ff53e5d3e9e85fcc1210", "html_url": "https://github.com/rust-lang/rust/commit/9a602243c422f183f574ff53e5d3e9e85fcc1210"}], "stats": {"total": 15, "additions": 7, "deletions": 8}, "files": [{"sha": "5c602ad76cd32d05090fdd36e54d31f0f5bf6239", "filename": "src/librustc_typeck/check/expr.rs", "status": "modified", "additions": 5, "deletions": 6, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/9e5081394cac4429de287e6c10b350f698a97f65/src%2Flibrustc_typeck%2Fcheck%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9e5081394cac4429de287e6c10b350f698a97f65/src%2Flibrustc_typeck%2Fcheck%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fexpr.rs?ref=9e5081394cac4429de287e6c10b350f698a97f65", "patch": "@@ -220,8 +220,9 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n             ExprKind::Lit(ref lit) => self.check_lit(&lit, expected),\n             ExprKind::Binary(op, ref lhs, ref rhs) => self.check_binop(expr, op, lhs, rhs),\n             ExprKind::Assign(ref lhs, ref rhs, ref span) => {\n-                self.check_binop_assign(expr, op, lhs, rhs)\n+                self.check_expr_assign(expr, expected, lhs, rhs, span)\n             }\n+            ExprKind::AssignOp(op, ref lhs, ref rhs) => self.check_binop_assign(expr, op, lhs, rhs),\n             ExprKind::Unary(unop, ref oprnd) => {\n                 self.check_expr_unary(unop, oprnd, expected, needs, expr)\n             }\n@@ -730,8 +731,8 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n                 comps.iter().all(|e| self.is_destructuring_place_expr(e))\n             }\n             ExprKind::Struct(_path, fields, rest) => {\n-                rest.as_ref().map(|e| self.is_destructuring_place_expr(e)).unwrap_or(true) &&\n-                    fields.iter().all(|f| self.is_destructuring_place_expr(&f.expr))\n+                rest.as_ref().map(|e| self.is_destructuring_place_expr(e)).unwrap_or(true)\n+                    && fields.iter().all(|f| self.is_destructuring_place_expr(&f.expr))\n             }\n             _ => expr.is_syntactic_place_expr(),\n         }\n@@ -752,9 +753,7 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n             err.span_label(lhs.span, \"cannot assign to this expression\");\n             if self.is_destructuring_place_expr(lhs) {\n                 err.note(\"destructuring assignments are not currently supported\");\n-                err.note(\n-                    \"for more information, see https://github.com/rust-lang/rfcs/issues/372\",\n-                );\n+                err.note(\"for more information, see https://github.com/rust-lang/rfcs/issues/372\");\n             }\n             err.emit();\n         }"}, {"sha": "c5d3aac136bcbd64ca94c84956b8ffd7fd139eec", "filename": "src/librustc_typeck/check/op.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/9e5081394cac4429de287e6c10b350f698a97f65/src%2Flibrustc_typeck%2Fcheck%2Fop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9e5081394cac4429de287e6c10b350f698a97f65/src%2Flibrustc_typeck%2Fcheck%2Fop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fop.rs?ref=9e5081394cac4429de287e6c10b350f698a97f65", "patch": "@@ -26,8 +26,8 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n             self.check_overloaded_binop(expr, lhs, rhs, op, IsAssign::Yes);\n \n         let ty =\n-            if !lhs.is_ty_var() && !rhs.is_ty_var() && is_builtin_binop(lhs, rhs, op) {\n-                self.enforce_builtin_binop_types(lhs_expr, lhs, rhs_expr, rhs, op);\n+            if !lhs_ty.is_ty_var() && !rhs_ty.is_ty_var() && is_builtin_binop(lhs_ty, rhs_ty, op) {\n+                self.enforce_builtin_binop_types(lhs, lhs_ty, rhs, rhs_ty, op);\n                 self.tcx.mk_unit()\n             } else {\n                 return_ty"}]}