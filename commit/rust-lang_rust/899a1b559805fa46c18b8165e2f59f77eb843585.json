{"sha": "899a1b559805fa46c18b8165e2f59f77eb843585", "node_id": "MDY6Q29tbWl0NzI0NzEyOjg5OWExYjU1OTgwNWZhNDZjMThiODE2NWUyZjU5Zjc3ZWI4NDM1ODU=", "commit": {"author": {"name": "David Tolnay", "email": "dtolnay@gmail.com", "date": "2020-04-06T22:46:40Z"}, "committer": {"name": "David Tolnay", "email": "dtolnay@gmail.com", "date": "2020-04-08T15:37:20Z"}, "message": "Move cognitive_complexity to nursery", "tree": {"sha": "b96bea6b559330d6c86ed8485ae92a4fe5e8533e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b96bea6b559330d6c86ed8485ae92a4fe5e8533e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/899a1b559805fa46c18b8165e2f59f77eb843585", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEERijF2Cz/ZdaBZKeK+boUO5X/bYIFAl6N77AACgkQ+boUO5X/\nbYKLLg/+KvJy/WUGNjXzr671qJQFsamuaYHU+eeGay2uCPeNPTvxqX+5zXySyY2+\naZ0SxJC2Z1FhVqRNtOU31wOrbcya2PkmYB1lY5wK8ppnwq0I98Jz6HJJjI4frbwl\nj9X4S+sKSh4bSTnEFtgNVfPDec2bu4riFzEUL3KZqyMwk9N2FeTpesATwm6ozuR/\ncx0ITlTZGB9RB+UPOn+DlQec/diLpJ7ojCq8c3n5mxpS/zIUpwtsMeQcake2SFnD\nedLW+J5ftLaeuet5LsLqVkQM0cabRDwDQNPC7Ly7D6VrxZB3Ouo92W8KRHMRYg5Q\nEWsKI3yIiaUDpm62nmce6tFJVlVRFqRvZprxBMAR8DHZvzpGqV0vbPpmBFT4XLFk\nZUdRj13yJAbj20BDcuNfbSAWLvQKs0LmdIj9W6TyoWCaAgWtLxOBsnx0Gy84hqBn\nSoSptvYtFw2YE2Ta/jUKxc2CvaBr5kFAjq0Y/6VkN4KFq8p3gBdyRGc9G3ROHCOQ\nLJ9H6yNohY0I8F3ASu9mRmPzBTbdqX5g5OgTD4klZcR854bicfC+g9N1H6VMoE8e\nWSW22uWl36VSYxzNmdakHs5kvH6FL7g48/uiy8vS4fpU3GfDGDTZV9SkcWY8aFE5\nu26hgDnOGqcQh3l55EIV8tMWuQ/ybnN6Pd1ifJz5ddfCDTU9vlQ=\n=AvLQ\n-----END PGP SIGNATURE-----", "payload": "tree b96bea6b559330d6c86ed8485ae92a4fe5e8533e\nparent f8308c811f695a6025d48dbc89267ec4d32b5354\nauthor David Tolnay <dtolnay@gmail.com> 1586213200 -0700\ncommitter David Tolnay <dtolnay@gmail.com> 1586360240 -0700\n\nMove cognitive_complexity to nursery\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/899a1b559805fa46c18b8165e2f59f77eb843585", "html_url": "https://github.com/rust-lang/rust/commit/899a1b559805fa46c18b8165e2f59f77eb843585", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/899a1b559805fa46c18b8165e2f59f77eb843585/comments", "author": {"login": "dtolnay", "id": 1940490, "node_id": "MDQ6VXNlcjE5NDA0OTA=", "avatar_url": "https://avatars.githubusercontent.com/u/1940490?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dtolnay", "html_url": "https://github.com/dtolnay", "followers_url": "https://api.github.com/users/dtolnay/followers", "following_url": "https://api.github.com/users/dtolnay/following{/other_user}", "gists_url": "https://api.github.com/users/dtolnay/gists{/gist_id}", "starred_url": "https://api.github.com/users/dtolnay/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dtolnay/subscriptions", "organizations_url": "https://api.github.com/users/dtolnay/orgs", "repos_url": "https://api.github.com/users/dtolnay/repos", "events_url": "https://api.github.com/users/dtolnay/events{/privacy}", "received_events_url": "https://api.github.com/users/dtolnay/received_events", "type": "User", "site_admin": false}, "committer": {"login": "dtolnay", "id": 1940490, "node_id": "MDQ6VXNlcjE5NDA0OTA=", "avatar_url": "https://avatars.githubusercontent.com/u/1940490?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dtolnay", "html_url": "https://github.com/dtolnay", "followers_url": "https://api.github.com/users/dtolnay/followers", "following_url": "https://api.github.com/users/dtolnay/following{/other_user}", "gists_url": "https://api.github.com/users/dtolnay/gists{/gist_id}", "starred_url": "https://api.github.com/users/dtolnay/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dtolnay/subscriptions", "organizations_url": "https://api.github.com/users/dtolnay/orgs", "repos_url": "https://api.github.com/users/dtolnay/repos", "events_url": "https://api.github.com/users/dtolnay/events{/privacy}", "received_events_url": "https://api.github.com/users/dtolnay/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f8308c811f695a6025d48dbc89267ec4d32b5354", "url": "https://api.github.com/repos/rust-lang/rust/commits/f8308c811f695a6025d48dbc89267ec4d32b5354", "html_url": "https://github.com/rust-lang/rust/commit/f8308c811f695a6025d48dbc89267ec4d32b5354"}], "stats": {"total": 106, "additions": 48, "deletions": 58}, "files": [{"sha": "c60577e8b2dabe8adbd4096ce3250fe88238ca5c", "filename": "clippy_lints/src/assign_ops.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/899a1b559805fa46c18b8165e2f59f77eb843585/clippy_lints%2Fsrc%2Fassign_ops.rs", "raw_url": "https://github.com/rust-lang/rust/raw/899a1b559805fa46c18b8165e2f59f77eb843585/clippy_lints%2Fsrc%2Fassign_ops.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fassign_ops.rs?ref=899a1b559805fa46c18b8165e2f59f77eb843585", "patch": "@@ -77,7 +77,6 @@ impl<'a, 'tcx> LateLintPass<'a, 'tcx> for AssignOps {\n             },\n             hir::ExprKind::Assign(assignee, e, _) => {\n                 if let hir::ExprKind::Binary(op, l, r) = &e.kind {\n-                    #[allow(clippy::cognitive_complexity)]\n                     let lint = |assignee: &hir::Expr<'_>, rhs: &hir::Expr<'_>| {\n                         let ty = cx.tables.expr_ty(assignee);\n                         let rty = cx.tables.expr_ty(rhs);"}, {"sha": "98abc801302e9e6ab221be9e27d3571a0c5ec2fa", "filename": "clippy_lints/src/cognitive_complexity.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/899a1b559805fa46c18b8165e2f59f77eb843585/clippy_lints%2Fsrc%2Fcognitive_complexity.rs", "raw_url": "https://github.com/rust-lang/rust/raw/899a1b559805fa46c18b8165e2f59f77eb843585/clippy_lints%2Fsrc%2Fcognitive_complexity.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fcognitive_complexity.rs?ref=899a1b559805fa46c18b8165e2f59f77eb843585", "patch": "@@ -22,7 +22,7 @@ declare_clippy_lint! {\n     ///\n     /// **Example:** No. You'll see it when you get the warning.\n     pub COGNITIVE_COMPLEXITY,\n-    complexity,\n+    nursery,\n     \"functions that should be split up into multiple functions\"\n }\n "}, {"sha": "3e8ce4006f6f0f9d60bcffbadb8c36126ac6f63e", "filename": "clippy_lints/src/lib.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/899a1b559805fa46c18b8165e2f59f77eb843585/clippy_lints%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/899a1b559805fa46c18b8165e2f59f77eb843585/clippy_lints%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Flib.rs?ref=899a1b559805fa46c18b8165e2f59f77eb843585", "patch": "@@ -1174,7 +1174,6 @@ pub fn register_plugins(store: &mut rustc_lint::LintStore, sess: &Session, conf:\n         LintId::of(&booleans::LOGIC_BUG),\n         LintId::of(&booleans::NONMINIMAL_BOOL),\n         LintId::of(&bytecount::NAIVE_BYTECOUNT),\n-        LintId::of(&cognitive_complexity::COGNITIVE_COMPLEXITY),\n         LintId::of(&collapsible_if::COLLAPSIBLE_IF),\n         LintId::of(&comparison_chain::COMPARISON_CHAIN),\n         LintId::of(&copies::IFS_SAME_COND),\n@@ -1509,7 +1508,6 @@ pub fn register_plugins(store: &mut rustc_lint::LintStore, sess: &Session, conf:\n         LintId::of(&assign_ops::MISREFACTORED_ASSIGN_OP),\n         LintId::of(&attrs::DEPRECATED_CFG_ATTR),\n         LintId::of(&booleans::NONMINIMAL_BOOL),\n-        LintId::of(&cognitive_complexity::COGNITIVE_COMPLEXITY),\n         LintId::of(&double_comparison::DOUBLE_COMPARISONS),\n         LintId::of(&double_parens::DOUBLE_PARENS),\n         LintId::of(&duration_subsec::DURATION_SUBSEC),\n@@ -1678,6 +1676,7 @@ pub fn register_plugins(store: &mut rustc_lint::LintStore, sess: &Session, conf:\n \n     store.register_group(true, \"clippy::nursery\", Some(\"clippy_nursery\"), vec![\n         LintId::of(&attrs::EMPTY_LINE_AFTER_OUTER_ATTR),\n+        LintId::of(&cognitive_complexity::COGNITIVE_COMPLEXITY),\n         LintId::of(&fallible_impl_from::FALLIBLE_IMPL_FROM),\n         LintId::of(&floating_point_arithmetic::IMPRECISE_FLOPS),\n         LintId::of(&floating_point_arithmetic::SUBOPTIMAL_FLOPS),"}, {"sha": "3f49849ba3234a87cc734b59d2bd0e12d79dea2a", "filename": "clippy_lints/src/methods/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/899a1b559805fa46c18b8165e2f59f77eb843585/clippy_lints%2Fsrc%2Fmethods%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/899a1b559805fa46c18b8165e2f59f77eb843585/clippy_lints%2Fsrc%2Fmethods%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmethods%2Fmod.rs?ref=899a1b559805fa46c18b8165e2f59f77eb843585", "patch": "@@ -1317,7 +1317,7 @@ declare_lint_pass!(Methods => [\n ]);\n \n impl<'a, 'tcx> LateLintPass<'a, 'tcx> for Methods {\n-    #[allow(clippy::cognitive_complexity, clippy::too_many_lines)]\n+    #[allow(clippy::too_many_lines)]\n     fn check_expr(&mut self, cx: &LateContext<'a, 'tcx>, expr: &'tcx hir::Expr<'_>) {\n         if in_macro(expr.span) {\n             return;"}, {"sha": "119e0905ff442f32a5ecec979165c7951cf1681d", "filename": "clippy_lints/src/mutable_debug_assertion.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/899a1b559805fa46c18b8165e2f59f77eb843585/clippy_lints%2Fsrc%2Fmutable_debug_assertion.rs", "raw_url": "https://github.com/rust-lang/rust/raw/899a1b559805fa46c18b8165e2f59f77eb843585/clippy_lints%2Fsrc%2Fmutable_debug_assertion.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmutable_debug_assertion.rs?ref=899a1b559805fa46c18b8165e2f59f77eb843585", "patch": "@@ -53,7 +53,6 @@ impl<'a, 'tcx> LateLintPass<'a, 'tcx> for DebugAssertWithMutCall {\n }\n \n //HACK(hellow554): remove this when #4694 is implemented\n-#[allow(clippy::cognitive_complexity)]\n fn extract_call<'a, 'tcx>(cx: &'a LateContext<'a, 'tcx>, e: &'tcx Expr<'_>) -> Option<Span> {\n     if_chain! {\n         if let ExprKind::Block(ref block, _) = e.kind;"}, {"sha": "13e275b3291ddcb447c46e731ebcb154f04591ce", "filename": "clippy_lints/src/types.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/899a1b559805fa46c18b8165e2f59f77eb843585/clippy_lints%2Fsrc%2Ftypes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/899a1b559805fa46c18b8165e2f59f77eb843585/clippy_lints%2Fsrc%2Ftypes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Ftypes.rs?ref=899a1b559805fa46c18b8165e2f59f77eb843585", "patch": "@@ -315,7 +315,6 @@ impl Types {\n     /// The parameter `is_local` distinguishes the context of the type; types from\n     /// local bindings should only be checked for the `BORROWED_BOX` lint.\n     #[allow(clippy::too_many_lines)]\n-    #[allow(clippy::cognitive_complexity)]\n     fn check_ty(&mut self, cx: &LateContext<'_, '_>, hir_ty: &hir::Ty<'_>, is_local: bool) {\n         if hir_ty.span.from_expansion() {\n             return;"}, {"sha": "3b275f43e170e6e776b3b4a77033f69d73b0817c", "filename": "src/lintlist/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/899a1b559805fa46c18b8165e2f59f77eb843585/src%2Flintlist%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/899a1b559805fa46c18b8165e2f59f77eb843585/src%2Flintlist%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flintlist%2Fmod.rs?ref=899a1b559805fa46c18b8165e2f59f77eb843585", "patch": "@@ -250,7 +250,7 @@ pub static ref ALL_LINTS: Vec<Lint> = vec![\n     },\n     Lint {\n         name: \"cognitive_complexity\",\n-        group: \"complexity\",\n+        group: \"nursery\",\n         desc: \"functions that should be split up into multiple functions\",\n         deprecation: None,\n         module: \"cognitive_complexity\","}, {"sha": "ce2a1c28c8a80f84c3ab0454d2efc517efa4f7c5", "filename": "tests/ui/collapsible_else_if.fixed", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/899a1b559805fa46c18b8165e2f59f77eb843585/tests%2Fui%2Fcollapsible_else_if.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/899a1b559805fa46c18b8165e2f59f77eb843585/tests%2Fui%2Fcollapsible_else_if.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fcollapsible_else_if.fixed?ref=899a1b559805fa46c18b8165e2f59f77eb843585", "patch": "@@ -1,5 +1,5 @@\n // run-rustfix\n-#![allow(clippy::cognitive_complexity, clippy::assertions_on_constants)]\n+#![allow(clippy::assertions_on_constants)]\n \n #[rustfmt::skip]\n #[warn(clippy::collapsible_if)]"}, {"sha": "99c40b8d38eb9a79247d25b18e92b48145ef3d31", "filename": "tests/ui/collapsible_else_if.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/899a1b559805fa46c18b8165e2f59f77eb843585/tests%2Fui%2Fcollapsible_else_if.rs", "raw_url": "https://github.com/rust-lang/rust/raw/899a1b559805fa46c18b8165e2f59f77eb843585/tests%2Fui%2Fcollapsible_else_if.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fcollapsible_else_if.rs?ref=899a1b559805fa46c18b8165e2f59f77eb843585", "patch": "@@ -1,5 +1,5 @@\n // run-rustfix\n-#![allow(clippy::cognitive_complexity, clippy::assertions_on_constants)]\n+#![allow(clippy::assertions_on_constants)]\n \n #[rustfmt::skip]\n #[warn(clippy::collapsible_if)]"}, {"sha": "561283fc8e73de2b839d10dbf3d3fd22068d091c", "filename": "tests/ui/collapsible_if.fixed", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/899a1b559805fa46c18b8165e2f59f77eb843585/tests%2Fui%2Fcollapsible_if.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/899a1b559805fa46c18b8165e2f59f77eb843585/tests%2Fui%2Fcollapsible_if.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fcollapsible_if.fixed?ref=899a1b559805fa46c18b8165e2f59f77eb843585", "patch": "@@ -1,5 +1,5 @@\n // run-rustfix\n-#![allow(clippy::cognitive_complexity, clippy::assertions_on_constants)]\n+#![allow(clippy::assertions_on_constants)]\n \n #[rustfmt::skip]\n #[warn(clippy::collapsible_if)]"}, {"sha": "dc9d9b451c0f9620d9181936ebbc18bd58fa6a4f", "filename": "tests/ui/collapsible_if.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/899a1b559805fa46c18b8165e2f59f77eb843585/tests%2Fui%2Fcollapsible_if.rs", "raw_url": "https://github.com/rust-lang/rust/raw/899a1b559805fa46c18b8165e2f59f77eb843585/tests%2Fui%2Fcollapsible_if.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fcollapsible_if.rs?ref=899a1b559805fa46c18b8165e2f59f77eb843585", "patch": "@@ -1,5 +1,5 @@\n // run-rustfix\n-#![allow(clippy::cognitive_complexity, clippy::assertions_on_constants)]\n+#![allow(clippy::assertions_on_constants)]\n \n #[rustfmt::skip]\n #[warn(clippy::collapsible_if)]"}, {"sha": "477a47118d4116587fc6526ca01f3f72edf639e2", "filename": "tests/ui/debug_assert_with_mut_call.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/899a1b559805fa46c18b8165e2f59f77eb843585/tests%2Fui%2Fdebug_assert_with_mut_call.rs", "raw_url": "https://github.com/rust-lang/rust/raw/899a1b559805fa46c18b8165e2f59f77eb843585/tests%2Fui%2Fdebug_assert_with_mut_call.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fdebug_assert_with_mut_call.rs?ref=899a1b559805fa46c18b8165e2f59f77eb843585", "patch": "@@ -2,7 +2,7 @@\n #![feature(custom_inner_attributes)]\n #![rustfmt::skip]\n #![warn(clippy::debug_assert_with_mut_call)]\n-#![allow(clippy::cognitive_complexity, clippy::redundant_closure_call)]\n+#![allow(clippy::redundant_closure_call)]\n \n struct S;\n "}, {"sha": "5fc84ada9efdd4368f1f6806c4c74dcffabdb917", "filename": "tests/ui/for_loop_fixable.fixed", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/899a1b559805fa46c18b8165e2f59f77eb843585/tests%2Fui%2Ffor_loop_fixable.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/899a1b559805fa46c18b8165e2f59f77eb843585/tests%2Fui%2Ffor_loop_fixable.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ffor_loop_fixable.fixed?ref=899a1b559805fa46c18b8165e2f59f77eb843585", "patch": "@@ -28,7 +28,6 @@ impl Unrelated {\n     clippy::linkedlist,\n     clippy::shadow_unrelated,\n     clippy::unnecessary_mut_passed,\n-    clippy::cognitive_complexity,\n     clippy::similar_names\n )]\n #[allow(clippy::many_single_char_names, unused_variables)]"}, {"sha": "4165b0dc004942cae3f3fc0ef23b75ed7107d14f", "filename": "tests/ui/for_loop_fixable.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/899a1b559805fa46c18b8165e2f59f77eb843585/tests%2Fui%2Ffor_loop_fixable.rs", "raw_url": "https://github.com/rust-lang/rust/raw/899a1b559805fa46c18b8165e2f59f77eb843585/tests%2Fui%2Ffor_loop_fixable.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ffor_loop_fixable.rs?ref=899a1b559805fa46c18b8165e2f59f77eb843585", "patch": "@@ -28,7 +28,6 @@ impl Unrelated {\n     clippy::linkedlist,\n     clippy::shadow_unrelated,\n     clippy::unnecessary_mut_passed,\n-    clippy::cognitive_complexity,\n     clippy::similar_names\n )]\n #[allow(clippy::many_single_char_names, unused_variables)]"}, {"sha": "cffb4b9f0a9c0bf1eecca85f10488dff5588246f", "filename": "tests/ui/for_loop_fixable.stderr", "status": "modified", "additions": 20, "deletions": 20, "changes": 40, "blob_url": "https://github.com/rust-lang/rust/blob/899a1b559805fa46c18b8165e2f59f77eb843585/tests%2Fui%2Ffor_loop_fixable.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/899a1b559805fa46c18b8165e2f59f77eb843585/tests%2Fui%2Ffor_loop_fixable.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ffor_loop_fixable.stderr?ref=899a1b559805fa46c18b8165e2f59f77eb843585", "patch": "@@ -1,5 +1,5 @@\n error: this range is empty so this for loop will never run\n-  --> $DIR/for_loop_fixable.rs:39:14\n+  --> $DIR/for_loop_fixable.rs:38:14\n    |\n LL |     for i in 10..0 {\n    |              ^^^^^\n@@ -11,7 +11,7 @@ LL |     for i in (0..10).rev() {\n    |              ^^^^^^^^^^^^^\n \n error: this range is empty so this for loop will never run\n-  --> $DIR/for_loop_fixable.rs:43:14\n+  --> $DIR/for_loop_fixable.rs:42:14\n    |\n LL |     for i in 10..=0 {\n    |              ^^^^^^\n@@ -22,7 +22,7 @@ LL |     for i in (0..=10).rev() {\n    |              ^^^^^^^^^^^^^^\n \n error: this range is empty so this for loop will never run\n-  --> $DIR/for_loop_fixable.rs:47:14\n+  --> $DIR/for_loop_fixable.rs:46:14\n    |\n LL |     for i in MAX_LEN..0 {\n    |              ^^^^^^^^^^\n@@ -33,7 +33,7 @@ LL |     for i in (0..MAX_LEN).rev() {\n    |              ^^^^^^^^^^^^^^^^^^\n \n error: this range is empty so this for loop will never run\n-  --> $DIR/for_loop_fixable.rs:72:14\n+  --> $DIR/for_loop_fixable.rs:71:14\n    |\n LL |     for i in 10..5 + 4 {\n    |              ^^^^^^^^^\n@@ -44,7 +44,7 @@ LL |     for i in (5 + 4..10).rev() {\n    |              ^^^^^^^^^^^^^^^^^\n \n error: this range is empty so this for loop will never run\n-  --> $DIR/for_loop_fixable.rs:76:14\n+  --> $DIR/for_loop_fixable.rs:75:14\n    |\n LL |     for i in (5 + 2)..(3 - 1) {\n    |              ^^^^^^^^^^^^^^^^\n@@ -55,95 +55,95 @@ LL |     for i in ((3 - 1)..(5 + 2)).rev() {\n    |              ^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: it is more concise to loop over references to containers instead of using explicit iteration methods\n-  --> $DIR/for_loop_fixable.rs:98:15\n+  --> $DIR/for_loop_fixable.rs:97:15\n    |\n LL |     for _v in vec.iter() {}\n    |               ^^^^^^^^^^ help: to write this more concisely, try: `&vec`\n    |\n    = note: `-D clippy::explicit-iter-loop` implied by `-D warnings`\n \n error: it is more concise to loop over references to containers instead of using explicit iteration methods\n-  --> $DIR/for_loop_fixable.rs:100:15\n+  --> $DIR/for_loop_fixable.rs:99:15\n    |\n LL |     for _v in vec.iter_mut() {}\n    |               ^^^^^^^^^^^^^^ help: to write this more concisely, try: `&mut vec`\n \n error: it is more concise to loop over containers instead of using explicit iteration methods\n-  --> $DIR/for_loop_fixable.rs:103:15\n+  --> $DIR/for_loop_fixable.rs:102:15\n    |\n LL |     for _v in out_vec.into_iter() {}\n    |               ^^^^^^^^^^^^^^^^^^^ help: to write this more concisely, try: `out_vec`\n    |\n    = note: `-D clippy::explicit-into-iter-loop` implied by `-D warnings`\n \n error: it is more concise to loop over references to containers instead of using explicit iteration methods\n-  --> $DIR/for_loop_fixable.rs:108:15\n+  --> $DIR/for_loop_fixable.rs:107:15\n    |\n LL |     for _v in [1, 2, 3].iter() {}\n    |               ^^^^^^^^^^^^^^^^ help: to write this more concisely, try: `&[1, 2, 3]`\n \n error: it is more concise to loop over references to containers instead of using explicit iteration methods\n-  --> $DIR/for_loop_fixable.rs:112:15\n+  --> $DIR/for_loop_fixable.rs:111:15\n    |\n LL |     for _v in [0; 32].iter() {}\n    |               ^^^^^^^^^^^^^^ help: to write this more concisely, try: `&[0; 32]`\n \n error: it is more concise to loop over references to containers instead of using explicit iteration methods\n-  --> $DIR/for_loop_fixable.rs:117:15\n+  --> $DIR/for_loop_fixable.rs:116:15\n    |\n LL |     for _v in ll.iter() {}\n    |               ^^^^^^^^^ help: to write this more concisely, try: `&ll`\n \n error: it is more concise to loop over references to containers instead of using explicit iteration methods\n-  --> $DIR/for_loop_fixable.rs:120:15\n+  --> $DIR/for_loop_fixable.rs:119:15\n    |\n LL |     for _v in vd.iter() {}\n    |               ^^^^^^^^^ help: to write this more concisely, try: `&vd`\n \n error: it is more concise to loop over references to containers instead of using explicit iteration methods\n-  --> $DIR/for_loop_fixable.rs:123:15\n+  --> $DIR/for_loop_fixable.rs:122:15\n    |\n LL |     for _v in bh.iter() {}\n    |               ^^^^^^^^^ help: to write this more concisely, try: `&bh`\n \n error: it is more concise to loop over references to containers instead of using explicit iteration methods\n-  --> $DIR/for_loop_fixable.rs:126:15\n+  --> $DIR/for_loop_fixable.rs:125:15\n    |\n LL |     for _v in hm.iter() {}\n    |               ^^^^^^^^^ help: to write this more concisely, try: `&hm`\n \n error: it is more concise to loop over references to containers instead of using explicit iteration methods\n-  --> $DIR/for_loop_fixable.rs:129:15\n+  --> $DIR/for_loop_fixable.rs:128:15\n    |\n LL |     for _v in bt.iter() {}\n    |               ^^^^^^^^^ help: to write this more concisely, try: `&bt`\n \n error: it is more concise to loop over references to containers instead of using explicit iteration methods\n-  --> $DIR/for_loop_fixable.rs:132:15\n+  --> $DIR/for_loop_fixable.rs:131:15\n    |\n LL |     for _v in hs.iter() {}\n    |               ^^^^^^^^^ help: to write this more concisely, try: `&hs`\n \n error: it is more concise to loop over references to containers instead of using explicit iteration methods\n-  --> $DIR/for_loop_fixable.rs:135:15\n+  --> $DIR/for_loop_fixable.rs:134:15\n    |\n LL |     for _v in bs.iter() {}\n    |               ^^^^^^^^^ help: to write this more concisely, try: `&bs`\n \n error: it is more concise to loop over containers instead of using explicit iteration methods\n-  --> $DIR/for_loop_fixable.rs:310:18\n+  --> $DIR/for_loop_fixable.rs:309:18\n    |\n LL |         for i in iterator.into_iter() {\n    |                  ^^^^^^^^^^^^^^^^^^^^ help: to write this more concisely, try: `iterator`\n \n error: it is more concise to loop over references to containers instead of using explicit iteration methods\n-  --> $DIR/for_loop_fixable.rs:330:18\n+  --> $DIR/for_loop_fixable.rs:329:18\n    |\n LL |         for _ in t.into_iter() {}\n    |                  ^^^^^^^^^^^^^ help: to write this more concisely, try: `&t`\n \n error: it is more concise to loop over containers instead of using explicit iteration methods\n-  --> $DIR/for_loop_fixable.rs:332:18\n+  --> $DIR/for_loop_fixable.rs:331:18\n    |\n LL |         for _ in r.into_iter() {}\n    |                  ^^^^^^^^^^^^^ help: to write this more concisely, try: `r`"}, {"sha": "179b255e08ca77962bdb5a096333dd4d854b068c", "filename": "tests/ui/for_loop_unfixable.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/899a1b559805fa46c18b8165e2f59f77eb843585/tests%2Fui%2Ffor_loop_unfixable.rs", "raw_url": "https://github.com/rust-lang/rust/raw/899a1b559805fa46c18b8165e2f59f77eb843585/tests%2Fui%2Ffor_loop_unfixable.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ffor_loop_unfixable.rs?ref=899a1b559805fa46c18b8165e2f59f77eb843585", "patch": "@@ -12,7 +12,6 @@\n     clippy::linkedlist,\n     clippy::shadow_unrelated,\n     clippy::unnecessary_mut_passed,\n-    clippy::cognitive_complexity,\n     clippy::similar_names,\n     unused,\n     dead_code"}, {"sha": "1da8e0f3588d79fd3defd9429ff4bcd91055b61d", "filename": "tests/ui/for_loop_unfixable.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/899a1b559805fa46c18b8165e2f59f77eb843585/tests%2Fui%2Ffor_loop_unfixable.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/899a1b559805fa46c18b8165e2f59f77eb843585/tests%2Fui%2Ffor_loop_unfixable.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ffor_loop_unfixable.stderr?ref=899a1b559805fa46c18b8165e2f59f77eb843585", "patch": "@@ -1,5 +1,5 @@\n error[E0425]: cannot find function `f` in this scope\n-  --> $DIR/for_loop_unfixable.rs:37:12\n+  --> $DIR/for_loop_unfixable.rs:36:12\n    |\n LL |         if f(&vec[i], &vec[i]) {\n    |            ^ help: a local variable with a similar name exists: `i`"}, {"sha": "3cc21809264f55b94c7ec5ef2ef5e34c20097205", "filename": "tests/ui/if_same_then_else2.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/899a1b559805fa46c18b8165e2f59f77eb843585/tests%2Fui%2Fif_same_then_else2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/899a1b559805fa46c18b8165e2f59f77eb843585/tests%2Fui%2Fif_same_then_else2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fif_same_then_else2.rs?ref=899a1b559805fa46c18b8165e2f59f77eb843585", "patch": "@@ -1,7 +1,6 @@\n #![warn(clippy::if_same_then_else)]\n #![allow(\n     clippy::blacklisted_name,\n-    clippy::cognitive_complexity,\n     clippy::collapsible_if,\n     clippy::ifs_same_cond,\n     clippy::needless_return"}, {"sha": "f5d087fe128386d6006706af594e780759110ee0", "filename": "tests/ui/if_same_then_else2.stderr", "status": "modified", "additions": 12, "deletions": 12, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/899a1b559805fa46c18b8165e2f59f77eb843585/tests%2Fui%2Fif_same_then_else2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/899a1b559805fa46c18b8165e2f59f77eb843585/tests%2Fui%2Fif_same_then_else2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fif_same_then_else2.stderr?ref=899a1b559805fa46c18b8165e2f59f77eb843585", "patch": "@@ -1,5 +1,5 @@\n error: this `if` has identical blocks\n-  --> $DIR/if_same_then_else2.rs:20:12\n+  --> $DIR/if_same_then_else2.rs:19:12\n    |\n LL |       } else {\n    |  ____________^\n@@ -13,7 +13,7 @@ LL | |     }\n    |\n    = note: `-D clippy::if-same-then-else` implied by `-D warnings`\n note: same as this\n-  --> $DIR/if_same_then_else2.rs:11:13\n+  --> $DIR/if_same_then_else2.rs:10:13\n    |\n LL |       if true {\n    |  _____________^\n@@ -26,7 +26,7 @@ LL | |     } else {\n    | |_____^\n \n error: this `if` has identical blocks\n-  --> $DIR/if_same_then_else2.rs:34:12\n+  --> $DIR/if_same_then_else2.rs:33:12\n    |\n LL |       } else {\n    |  ____________^\n@@ -36,7 +36,7 @@ LL | |     }\n    | |_____^\n    |\n note: same as this\n-  --> $DIR/if_same_then_else2.rs:32:13\n+  --> $DIR/if_same_then_else2.rs:31:13\n    |\n LL |       if true {\n    |  _____________^\n@@ -45,7 +45,7 @@ LL | |     } else {\n    | |_____^\n \n error: this `if` has identical blocks\n-  --> $DIR/if_same_then_else2.rs:41:12\n+  --> $DIR/if_same_then_else2.rs:40:12\n    |\n LL |       } else {\n    |  ____________^\n@@ -55,7 +55,7 @@ LL | |     }\n    | |_____^\n    |\n note: same as this\n-  --> $DIR/if_same_then_else2.rs:39:13\n+  --> $DIR/if_same_then_else2.rs:38:13\n    |\n LL |       if true {\n    |  _____________^\n@@ -64,7 +64,7 @@ LL | |     } else {\n    | |_____^\n \n error: this `if` has identical blocks\n-  --> $DIR/if_same_then_else2.rs:91:12\n+  --> $DIR/if_same_then_else2.rs:90:12\n    |\n LL |       } else {\n    |  ____________^\n@@ -74,7 +74,7 @@ LL | |     };\n    | |_____^\n    |\n note: same as this\n-  --> $DIR/if_same_then_else2.rs:89:21\n+  --> $DIR/if_same_then_else2.rs:88:21\n    |\n LL |       let _ = if true {\n    |  _____________________^\n@@ -83,7 +83,7 @@ LL | |     } else {\n    | |_____^\n \n error: this `if` has identical blocks\n-  --> $DIR/if_same_then_else2.rs:98:12\n+  --> $DIR/if_same_then_else2.rs:97:12\n    |\n LL |       } else {\n    |  ____________^\n@@ -93,7 +93,7 @@ LL | |     }\n    | |_____^\n    |\n note: same as this\n-  --> $DIR/if_same_then_else2.rs:96:13\n+  --> $DIR/if_same_then_else2.rs:95:13\n    |\n LL |       if true {\n    |  _____________^\n@@ -102,7 +102,7 @@ LL | |     } else {\n    | |_____^\n \n error: this `if` has identical blocks\n-  --> $DIR/if_same_then_else2.rs:123:12\n+  --> $DIR/if_same_then_else2.rs:122:12\n    |\n LL |       } else {\n    |  ____________^\n@@ -112,7 +112,7 @@ LL | |     }\n    | |_____^\n    |\n note: same as this\n-  --> $DIR/if_same_then_else2.rs:120:20\n+  --> $DIR/if_same_then_else2.rs:119:20\n    |\n LL |       } else if true {\n    |  ____________________^"}, {"sha": "13fbb6e2a6eedb86cbb0c185e8ab307a81553853", "filename": "tests/ui/rename.fixed", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/899a1b559805fa46c18b8165e2f59f77eb843585/tests%2Fui%2Frename.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/899a1b559805fa46c18b8165e2f59f77eb843585/tests%2Fui%2Frename.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Frename.fixed?ref=899a1b559805fa46c18b8165e2f59f77eb843585", "patch": "@@ -5,7 +5,6 @@\n // allow the new lint name here, to test if the new name works\n #![allow(clippy::module_name_repetitions)]\n #![allow(clippy::new_without_default)]\n-#![allow(clippy::cognitive_complexity)]\n #![allow(clippy::redundant_static_lifetimes)]\n // warn for the old lint name here, to test if the renaming worked\n #![warn(clippy::cognitive_complexity)]"}, {"sha": "cbd3b1e91666aa385bedc7c97daff6298d456343", "filename": "tests/ui/rename.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/899a1b559805fa46c18b8165e2f59f77eb843585/tests%2Fui%2Frename.rs", "raw_url": "https://github.com/rust-lang/rust/raw/899a1b559805fa46c18b8165e2f59f77eb843585/tests%2Fui%2Frename.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Frename.rs?ref=899a1b559805fa46c18b8165e2f59f77eb843585", "patch": "@@ -5,7 +5,6 @@\n // allow the new lint name here, to test if the new name works\n #![allow(clippy::module_name_repetitions)]\n #![allow(clippy::new_without_default)]\n-#![allow(clippy::cognitive_complexity)]\n #![allow(clippy::redundant_static_lifetimes)]\n // warn for the old lint name here, to test if the renaming worked\n #![warn(clippy::cyclomatic_complexity)]"}, {"sha": "a9e803946041e9e8cd269e0fc147f16716c52263", "filename": "tests/ui/rename.stderr", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/899a1b559805fa46c18b8165e2f59f77eb843585/tests%2Fui%2Frename.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/899a1b559805fa46c18b8165e2f59f77eb843585/tests%2Fui%2Frename.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Frename.stderr?ref=899a1b559805fa46c18b8165e2f59f77eb843585", "patch": "@@ -1,31 +1,31 @@\n error: lint `clippy::cyclomatic_complexity` has been renamed to `clippy::cognitive_complexity`\n-  --> $DIR/rename.rs:11:9\n+  --> $DIR/rename.rs:10:9\n    |\n LL | #![warn(clippy::cyclomatic_complexity)]\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use the new name: `clippy::cognitive_complexity`\n    |\n    = note: `-D renamed-and-removed-lints` implied by `-D warnings`\n \n error: lint `clippy::stutter` has been renamed to `clippy::module_name_repetitions`\n-  --> $DIR/rename.rs:13:8\n+  --> $DIR/rename.rs:12:8\n    |\n LL | #[warn(clippy::stutter)]\n    |        ^^^^^^^^^^^^^^^ help: use the new name: `clippy::module_name_repetitions`\n \n error: lint `clippy::new_without_default_derive` has been renamed to `clippy::new_without_default`\n-  --> $DIR/rename.rs:16:8\n+  --> $DIR/rename.rs:15:8\n    |\n LL | #[warn(clippy::new_without_default_derive)]\n    |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use the new name: `clippy::new_without_default`\n \n error: lint `clippy::const_static_lifetime` has been renamed to `clippy::redundant_static_lifetimes`\n-  --> $DIR/rename.rs:19:8\n+  --> $DIR/rename.rs:18:8\n    |\n LL | #[warn(clippy::const_static_lifetime)]\n    |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use the new name: `clippy::redundant_static_lifetimes`\n \n error: lint `clippy::cyclomatic_complexity` has been renamed to `clippy::cognitive_complexity`\n-  --> $DIR/rename.rs:11:9\n+  --> $DIR/rename.rs:10:9\n    |\n LL | #![warn(clippy::cyclomatic_complexity)]\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use the new name: `clippy::cognitive_complexity`"}, {"sha": "84dfc34db1509d4ca1d9e16e3a8d8eeb0bcb3988", "filename": "tests/ui/while_let_on_iterator.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/899a1b559805fa46c18b8165e2f59f77eb843585/tests%2Fui%2Fwhile_let_on_iterator.rs", "raw_url": "https://github.com/rust-lang/rust/raw/899a1b559805fa46c18b8165e2f59f77eb843585/tests%2Fui%2Fwhile_let_on_iterator.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fwhile_let_on_iterator.rs?ref=899a1b559805fa46c18b8165e2f59f77eb843585", "patch": "@@ -1,5 +1,5 @@\n #![warn(clippy::while_let_on_iterator)]\n-#![allow(clippy::never_loop, clippy::cognitive_complexity)]\n+#![allow(clippy::never_loop)]\n \n fn main() {\n     let mut iter = 1..20;"}]}