{"sha": "360ce780fdae0dcb31cfa0f7ffa8a6c9fd62ed32", "node_id": "MDY6Q29tbWl0NzI0NzEyOjM2MGNlNzgwZmRhZTBkY2IzMWNmYTBmN2ZmYThhNmM5ZmQ2MmVkMzI=", "commit": {"author": {"name": "Mazdak", "email": "twingoow@gmail.com", "date": "2017-11-08T22:10:33Z"}, "committer": {"name": "Mazdak", "email": "twingoow@gmail.com", "date": "2017-11-08T22:10:33Z"}, "message": "added associated function Box::leak", "tree": {"sha": "c9e012f41277ea8ff785a6b05b992c11309eec48", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c9e012f41277ea8ff785a6b05b992c11309eec48"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/360ce780fdae0dcb31cfa0f7ffa8a6c9fd62ed32", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/360ce780fdae0dcb31cfa0f7ffa8a6c9fd62ed32", "html_url": "https://github.com/rust-lang/rust/commit/360ce780fdae0dcb31cfa0f7ffa8a6c9fd62ed32", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/360ce780fdae0dcb31cfa0f7ffa8a6c9fd62ed32/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7ca430df713ad1697a9d27eb4ae0f49c8563eed4", "url": "https://api.github.com/repos/rust-lang/rust/commits/7ca430df713ad1697a9d27eb4ae0f49c8563eed4", "html_url": "https://github.com/rust-lang/rust/commit/7ca430df713ad1697a9d27eb4ae0f49c8563eed4"}], "stats": {"total": 41, "additions": 41, "deletions": 0}, "files": [{"sha": "bcf0505ee82f74fdcf667dd0c99fe5697430e034", "filename": "src/liballoc/boxed.rs", "status": "modified", "additions": 41, "deletions": 0, "changes": 41, "blob_url": "https://github.com/rust-lang/rust/blob/360ce780fdae0dcb31cfa0f7ffa8a6c9fd62ed32/src%2Fliballoc%2Fboxed.rs", "raw_url": "https://github.com/rust-lang/rust/raw/360ce780fdae0dcb31cfa0f7ffa8a6c9fd62ed32/src%2Fliballoc%2Fboxed.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Fboxed.rs?ref=360ce780fdae0dcb31cfa0f7ffa8a6c9fd62ed32", "patch": "@@ -364,6 +364,47 @@ impl<T: ?Sized> Box<T> {\n     pub fn into_unique(b: Box<T>) -> Unique<T> {\n         unsafe { mem::transmute(b) }\n     }\n+\n+    /// Consumes and leaks the `Box`, returning a static reference,\n+    /// `&'static T`.\n+    ///\n+    /// This function is mainly useful for data that lives for the remainder of\n+    /// the programs life. Dropping the returned reference will cause a memory\n+    /// leak. If this is not acceptable, the reference should first be wrapped\n+    /// with the [`Box::from_raw`] function producing a `Box` which can then be\n+    /// dropped which will properly destroy `T` and release the memory.\n+    ///\n+    /// Note: this is an associated function, which means that you have\n+    /// to call it as `Box::leak(b)` instead of `b.leak()`. This\n+    /// is so that there is no conflict with a method on the inner type.\n+    ///\n+    /// [`Box::from_raw`]: struct.Box.html#method.from_raw\n+    ///\n+    /// # Examples\n+    ///\n+    /// Simple usage:\n+    ///\n+    /// ```\n+    /// let x = Box::new(41);\n+    /// let static_ref = Box::leak(x);\n+    /// *static_ref += 1;\n+    /// assert_eq!(*static_ref, 42);\n+    /// ```\n+    ///\n+    /// Unsized data:\n+    ///\n+    /// ```\n+    /// let x = vec![1, 2, 3].into_boxed_slice();\n+    /// let static_ref = Box::leak(x);\n+    /// static_ref[0] = 4;\n+    /// assert_eq!(*static_ref, [4, 2, 3]);\n+    /// ```\n+    #[unstable(feature = \"box_leak\", reason = \"needs an FCP to stabilize\",\n+               issue = \"0\")]\n+    #[inline]\n+    pub fn leak(b: Box<T>) -> &'static mut T {\n+        unsafe { &mut *Box::into_raw(b) }\n+    }\n }\n \n #[stable(feature = \"rust1\", since = \"1.0.0\")]"}]}