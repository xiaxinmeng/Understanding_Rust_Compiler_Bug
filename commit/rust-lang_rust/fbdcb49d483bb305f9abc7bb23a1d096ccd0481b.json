{"sha": "fbdcb49d483bb305f9abc7bb23a1d096ccd0481b", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZiZGNiNDlkNDgzYmIzMDVmOWFiYzdiYjIzYTFkMDk2Y2NkMDQ4MWI=", "commit": {"author": {"name": "Lukas Wirth", "email": "lukastw97@gmail.com", "date": "2021-07-02T21:52:43Z"}, "committer": {"name": "Lukas Wirth", "email": "lukastw97@gmail.com", "date": "2021-07-02T23:31:41Z"}, "message": "Simplify", "tree": {"sha": "0c8891b2d73e0990e37b34a471c2b7f42ec619c3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0c8891b2d73e0990e37b34a471c2b7f42ec619c3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/fbdcb49d483bb305f9abc7bb23a1d096ccd0481b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/fbdcb49d483bb305f9abc7bb23a1d096ccd0481b", "html_url": "https://github.com/rust-lang/rust/commit/fbdcb49d483bb305f9abc7bb23a1d096ccd0481b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/fbdcb49d483bb305f9abc7bb23a1d096ccd0481b/comments", "author": {"login": "Veykril", "id": 3757771, "node_id": "MDQ6VXNlcjM3NTc3NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/3757771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veykril", "html_url": "https://github.com/Veykril", "followers_url": "https://api.github.com/users/Veykril/followers", "following_url": "https://api.github.com/users/Veykril/following{/other_user}", "gists_url": "https://api.github.com/users/Veykril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veykril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veykril/subscriptions", "organizations_url": "https://api.github.com/users/Veykril/orgs", "repos_url": "https://api.github.com/users/Veykril/repos", "events_url": "https://api.github.com/users/Veykril/events{/privacy}", "received_events_url": "https://api.github.com/users/Veykril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Veykril", "id": 3757771, "node_id": "MDQ6VXNlcjM3NTc3NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/3757771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veykril", "html_url": "https://github.com/Veykril", "followers_url": "https://api.github.com/users/Veykril/followers", "following_url": "https://api.github.com/users/Veykril/following{/other_user}", "gists_url": "https://api.github.com/users/Veykril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veykril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veykril/subscriptions", "organizations_url": "https://api.github.com/users/Veykril/orgs", "repos_url": "https://api.github.com/users/Veykril/repos", "events_url": "https://api.github.com/users/Veykril/events{/privacy}", "received_events_url": "https://api.github.com/users/Veykril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "26dd0c4e5b032b6524335fd78e5c7f14e1075ae3", "url": "https://api.github.com/repos/rust-lang/rust/commits/26dd0c4e5b032b6524335fd78e5c7f14e1075ae3", "html_url": "https://github.com/rust-lang/rust/commit/26dd0c4e5b032b6524335fd78e5c7f14e1075ae3"}], "stats": {"total": 17, "additions": 9, "deletions": 8}, "files": [{"sha": "57773e95e159b9d859d1626489135d1de4cb05e0", "filename": "crates/ide_assists/src/handlers/unmerge_use.rs", "status": "modified", "additions": 7, "deletions": 8, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/fbdcb49d483bb305f9abc7bb23a1d096ccd0481b/crates%2Fide_assists%2Fsrc%2Fhandlers%2Funmerge_use.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fbdcb49d483bb305f9abc7bb23a1d096ccd0481b/crates%2Fide_assists%2Fsrc%2Fhandlers%2Funmerge_use.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_assists%2Fsrc%2Fhandlers%2Funmerge_use.rs?ref=fbdcb49d483bb305f9abc7bb23a1d096ccd0481b", "patch": "@@ -1,3 +1,5 @@\n+use ast::make;\n+use itertools::Itertools;\n use syntax::{\n     ast::{self, VisibilityOwner},\n     ted::{self, Position},\n@@ -42,9 +44,9 @@ pub(crate) fn unmerge_use(acc: &mut Assists, ctx: &AssistContext) -> Option<()>\n         \"Unmerge use\",\n         target,\n         |builder| {\n-            let new_use = ast::make::use_(\n+            let new_use = make::use_(\n                 use_.visibility(),\n-                ast::make::use_tree(\n+                make::use_tree(\n                     path,\n                     tree.use_tree_list(),\n                     tree.rename(),\n@@ -62,17 +64,14 @@ pub(crate) fn unmerge_use(acc: &mut Assists, ctx: &AssistContext) -> Option<()>\n }\n \n fn resolve_full_path(tree: &ast::UseTree) -> Option<ast::Path> {\n-    let mut paths = tree\n+    let paths = tree\n         .syntax()\n         .ancestors()\n-        .take_while(|n| n.kind() != SyntaxKind::USE_KW)\n+        .take_while(|n| n.kind() != SyntaxKind::USE)\n         .filter_map(ast::UseTree::cast)\n         .filter_map(|t| t.path());\n \n-    let mut final_path = paths.next()?;\n-    for path in paths {\n-        final_path = ast::make::path_concat(path, final_path)\n-    }\n+    let final_path = paths.fold1(|prev, next| make::path_concat(next, prev))?;\n     if final_path.segment().map_or(false, |it| it.self_token().is_some()) {\n         final_path.qualifier()\n     } else {"}, {"sha": "7977434e1ae23dd4ad2e510de0fdc903c36286e9", "filename": "crates/ide_assists/src/handlers/wrap_return_type_in_result.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/fbdcb49d483bb305f9abc7bb23a1d096ccd0481b/crates%2Fide_assists%2Fsrc%2Fhandlers%2Fwrap_return_type_in_result.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fbdcb49d483bb305f9abc7bb23a1d096ccd0481b/crates%2Fide_assists%2Fsrc%2Fhandlers%2Fwrap_return_type_in_result.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_assists%2Fsrc%2Fhandlers%2Fwrap_return_type_in_result.rs?ref=fbdcb49d483bb305f9abc7bb23a1d096ccd0481b", "patch": "@@ -13,6 +13,7 @@ use crate::{AssistContext, AssistId, AssistKind, Assists};\n // Wrap the function's return type into Result.\n //\n // ```\n+// # //- minicore: result\n // fn foo() -> i32$0 { 42i32 }\n // ```\n // ->"}, {"sha": "c3c21317345df4efa0f24863a4d679b7b44fe364", "filename": "crates/ide_assists/src/tests/generated.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/fbdcb49d483bb305f9abc7bb23a1d096ccd0481b/crates%2Fide_assists%2Fsrc%2Ftests%2Fgenerated.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fbdcb49d483bb305f9abc7bb23a1d096ccd0481b/crates%2Fide_assists%2Fsrc%2Ftests%2Fgenerated.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_assists%2Fsrc%2Ftests%2Fgenerated.rs?ref=fbdcb49d483bb305f9abc7bb23a1d096ccd0481b", "patch": "@@ -1600,6 +1600,7 @@ fn doctest_wrap_return_type_in_result() {\n     check_doc_test(\n         \"wrap_return_type_in_result\",\n         r#####\"\n+//- minicore: result\n fn foo() -> i32$0 { 42i32 }\n \"#####,\n         r#####\""}]}