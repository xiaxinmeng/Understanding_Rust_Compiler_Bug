{"sha": "8fd1bf332350b5899f040d749fa2bcc21ac4e23e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjhmZDFiZjMzMjM1MGI1ODk5ZjA0MGQ3NDlmYTJiY2MyMWFjNGUyM2U=", "commit": {"author": {"name": "Mara Bos", "email": "m-ou.se@m-ou.se", "date": "2021-09-02T17:10:14Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-09-02T17:10:14Z"}, "message": "Rollup merge of #88505 - ibraheemdev:use-unwrap-unchecked, r=kennytm\n\nUse `unwrap_unchecked` where possible", "tree": {"sha": "f45961ad80e16fdb8740481bf1969c27355bfdd6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f45961ad80e16fdb8740481bf1969c27355bfdd6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8fd1bf332350b5899f040d749fa2bcc21ac4e23e", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJhMQV2CRBK7hj4Ov3rIwAAbIoIAKuHwphjCYAm45qSmu6lbob6\nnkd9Niy7oMbRQb/OBrt23KNeHDN3Md3Zz402K7Lg90TAhXWYK6TVxBx90ZdwgSSZ\nP6NeQVGkjJqzL0YTRo7MoWXhwT+mFuAQ92SxGKjfJBQGNtBNgIpA4kY1zTGkVgai\nzG0ySSfKgLl+RmsvJqlnA/fLFrdUZOwc/AUtwebQfwSeCXbUmcNNb+Ym1LViD8Ng\nx688ACZEUMr2e0o0FR48XULRH3q8Aq/dQtXZ7VdNWqfUC9dCKOl1AuM9hHEZhZfG\ny8SJ+FEvKF956qr2rfQu6QpA80Oc/zF7JbvR3rCtlKiIZx6evCeUHnONRuoKad0=\n=Wy1t\n-----END PGP SIGNATURE-----\n", "payload": "tree f45961ad80e16fdb8740481bf1969c27355bfdd6\nparent e50069ff4f4b8c95443103d747f6aa22e64dc22c\nparent ffc43b84682b9378a03b4cf5b166b2049625f7a4\nauthor Mara Bos <m-ou.se@m-ou.se> 1630602614 +0200\ncommitter GitHub <noreply@github.com> 1630602614 +0200\n\nRollup merge of #88505 - ibraheemdev:use-unwrap-unchecked, r=kennytm\n\nUse `unwrap_unchecked` where possible\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8fd1bf332350b5899f040d749fa2bcc21ac4e23e", "html_url": "https://github.com/rust-lang/rust/commit/8fd1bf332350b5899f040d749fa2bcc21ac4e23e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8fd1bf332350b5899f040d749fa2bcc21ac4e23e/comments", "author": {"login": "m-ou-se", "id": 783247, "node_id": "MDQ6VXNlcjc4MzI0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/783247?v=4", "gravatar_id": "", "url": "https://api.github.com/users/m-ou-se", "html_url": "https://github.com/m-ou-se", "followers_url": "https://api.github.com/users/m-ou-se/followers", "following_url": "https://api.github.com/users/m-ou-se/following{/other_user}", "gists_url": "https://api.github.com/users/m-ou-se/gists{/gist_id}", "starred_url": "https://api.github.com/users/m-ou-se/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/m-ou-se/subscriptions", "organizations_url": "https://api.github.com/users/m-ou-se/orgs", "repos_url": "https://api.github.com/users/m-ou-se/repos", "events_url": "https://api.github.com/users/m-ou-se/events{/privacy}", "received_events_url": "https://api.github.com/users/m-ou-se/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e50069ff4f4b8c95443103d747f6aa22e64dc22c", "url": "https://api.github.com/repos/rust-lang/rust/commits/e50069ff4f4b8c95443103d747f6aa22e64dc22c", "html_url": "https://github.com/rust-lang/rust/commit/e50069ff4f4b8c95443103d747f6aa22e64dc22c"}, {"sha": "ffc43b84682b9378a03b4cf5b166b2049625f7a4", "url": "https://api.github.com/repos/rust-lang/rust/commits/ffc43b84682b9378a03b4cf5b166b2049625f7a4", "html_url": "https://github.com/rust-lang/rust/commit/ffc43b84682b9378a03b4cf5b166b2049625f7a4"}], "stats": {"total": 19, "additions": 8, "deletions": 11}, "files": [{"sha": "9d45c5082db434cb4a13cf63776f3e529aee1b39", "filename": "library/alloc/src/collections/linked_list.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/8fd1bf332350b5899f040d749fa2bcc21ac4e23e/library%2Falloc%2Fsrc%2Fcollections%2Flinked_list.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8fd1bf332350b5899f040d749fa2bcc21ac4e23e/library%2Falloc%2Fsrc%2Fcollections%2Flinked_list.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Falloc%2Fsrc%2Fcollections%2Flinked_list.rs?ref=8fd1bf332350b5899f040d749fa2bcc21ac4e23e", "patch": "@@ -300,7 +300,10 @@ impl<T> LinkedList<T> {\n         let tail = self.tail.take();\n         let len = mem::replace(&mut self.len, 0);\n         if let Some(head) = head {\n-            let tail = tail.unwrap_or_else(|| unsafe { core::hint::unreachable_unchecked() });\n+            // SAFETY: In a LinkedList, either both the head and tail are None because\n+            // the list is empty, or both head and tail are Some because the list is populated.\n+            // Since we have verified the head is Some, we are sure the tail is Some too.\n+            let tail = unsafe { tail.unwrap_unchecked() };\n             Some((head, tail, len))\n         } else {\n             None"}, {"sha": "70cccd31b92ded435eb886bd9a475bc79b27a1c1", "filename": "library/core/src/array/mod.rs", "status": "modified", "additions": 2, "deletions": 5, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/8fd1bf332350b5899f040d749fa2bcc21ac4e23e/library%2Fcore%2Fsrc%2Farray%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8fd1bf332350b5899f040d749fa2bcc21ac4e23e/library%2Fcore%2Fsrc%2Farray%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Farray%2Fmod.rs?ref=8fd1bf332350b5899f040d749fa2bcc21ac4e23e", "patch": "@@ -459,11 +459,8 @@ where\n     debug_assert!(N <= iter.size_hint().1.unwrap_or(usize::MAX));\n     debug_assert!(N <= iter.size_hint().0);\n \n-    match collect_into_array(iter) {\n-        Some(array) => array,\n-        // SAFETY: covered by the function contract.\n-        None => unsafe { crate::hint::unreachable_unchecked() },\n-    }\n+    // SAFETY: covered by the function contract.\n+    unsafe { collect_into_array(iter).unwrap_unchecked() }\n }\n \n /// Pulls `N` items from `iter` and returns them as an array. If the iterator"}, {"sha": "9d5e03dd0de795eeefe17466421e81b0b203ee72", "filename": "library/core/src/option.rs", "status": "modified", "additions": 2, "deletions": 5, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/8fd1bf332350b5899f040d749fa2bcc21ac4e23e/library%2Fcore%2Fsrc%2Foption.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8fd1bf332350b5899f040d749fa2bcc21ac4e23e/library%2Fcore%2Fsrc%2Foption.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Foption.rs?ref=8fd1bf332350b5899f040d749fa2bcc21ac4e23e", "patch": "@@ -1198,11 +1198,8 @@ impl<T> Option<T> {\n     pub fn insert(&mut self, value: T) -> &mut T {\n         *self = Some(value);\n \n-        match self {\n-            Some(v) => v,\n-            // SAFETY: the code above just filled the option\n-            None => unsafe { hint::unreachable_unchecked() },\n-        }\n+        // SAFETY: the code above just filled the option\n+        unsafe { self.as_mut().unwrap_unchecked() }\n     }\n \n     /// Inserts `value` into the option if it is [`None`], then"}]}