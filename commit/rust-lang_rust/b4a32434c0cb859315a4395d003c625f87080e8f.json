{"sha": "b4a32434c0cb859315a4395d003c625f87080e8f", "node_id": "MDY6Q29tbWl0NzI0NzEyOmI0YTMyNDM0YzBjYjg1OTMxNWE0Mzk1ZDAwM2M2MjVmODcwODBlOGY=", "commit": {"author": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2017-08-17T22:08:12Z"}, "committer": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2017-08-24T09:38:58Z"}, "message": "Remove duplicates in rustdoc", "tree": {"sha": "ca236cab2a06d176fa4d42805a8bc7bdf035447f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ca236cab2a06d176fa4d42805a8bc7bdf035447f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b4a32434c0cb859315a4395d003c625f87080e8f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b4a32434c0cb859315a4395d003c625f87080e8f", "html_url": "https://github.com/rust-lang/rust/commit/b4a32434c0cb859315a4395d003c625f87080e8f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b4a32434c0cb859315a4395d003c625f87080e8f/comments", "author": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "committer": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "dd39ecf368a3cdb937e129f36a2a342d0c9358f0", "url": "https://api.github.com/repos/rust-lang/rust/commits/dd39ecf368a3cdb937e129f36a2a342d0c9358f0", "html_url": "https://github.com/rust-lang/rust/commit/dd39ecf368a3cdb937e129f36a2a342d0c9358f0"}], "stats": {"total": 35, "additions": 35, "deletions": 0}, "files": [{"sha": "1df0ac337a700902688391fb6d3637a84c32a0bb", "filename": "src/librustdoc/clean/mod.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/b4a32434c0cb859315a4395d003c625f87080e8f/src%2Flibrustdoc%2Fclean%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b4a32434c0cb859315a4395d003c625f87080e8f/src%2Flibrustdoc%2Fclean%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fclean%2Fmod.rs?ref=b4a32434c0cb859315a4395d003c625f87080e8f", "patch": "@@ -323,6 +323,10 @@ impl Item {\n     pub fn is_union(&self) -> bool {\n         self.type_() == ItemType::Union\n     }\n+    pub fn is_import(&self) -> bool {\n+        self.type_() == ItemType::Import\n+    }\n+\n     pub fn is_stripped(&self) -> bool {\n         match self.inner { StrippedItem(..) => true, _ => false }\n     }"}, {"sha": "e113165b9ab0c838c561c53b0bb97861740ef88c", "filename": "src/librustdoc/html/render.rs", "status": "modified", "additions": 31, "deletions": 0, "changes": 31, "blob_url": "https://github.com/rust-lang/rust/blob/b4a32434c0cb859315a4395d003c625f87080e8f/src%2Flibrustdoc%2Fhtml%2Frender.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b4a32434c0cb859315a4395d003c625f87080e8f/src%2Flibrustdoc%2Fhtml%2Frender.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Frender.rs?ref=b4a32434c0cb859315a4395d003c625f87080e8f", "patch": "@@ -1764,6 +1764,37 @@ fn item_module(w: &mut fmt::Formatter, cx: &Context,\n     }\n \n     indices.sort_by(|&i1, &i2| cmp(&items[i1], &items[i2], i1, i2));\n+    // This call is to remove reexport duplicates in cases such as:\n+    //\n+    // ```\n+    // pub mod foo {\n+    //     pub mod bar {\n+    //         pub trait Double { fn foo(); }\n+    //     }\n+    // }\n+    //\n+    // pub use foo::bar::*;\n+    // pub use foo::*;\n+    // ```\n+    //\n+    // `Double` will appear twice in the generated docs.\n+    //\n+    // FIXME: This code is quite ugly and could be improved. Small issue: DefId\n+    // can be identical even if the elements are different (mostly in imports).\n+    // So in case this is an import, we keep everything by adding a \"unique id\"\n+    // (which is the position in the vector).\n+    indices.dedup_by_key(|i| (items[*i].def_id,\n+                              if items[*i].name.as_ref().is_some() {\n+                                  Some(full_path(cx, &items[*i]).clone())\n+                              } else {\n+                                  None\n+                              },\n+                              items[*i].type_(),\n+                              if items[*i].is_import() {\n+                                  *i\n+                              } else {\n+                                  0\n+                              }));\n \n     debug!(\"{:?}\", indices);\n     let mut curty = None;"}]}