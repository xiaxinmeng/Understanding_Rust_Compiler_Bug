{"sha": "73bb4de556b3dabc1ba5db397fc1bed28e0537a9", "node_id": "MDY6Q29tbWl0NzI0NzEyOjczYmI0ZGU1NTZiM2RhYmMxYmE1ZGIzOTdmYzFiZWQyOGUwNTM3YTk=", "commit": {"author": {"name": "Eric Reed", "email": "ecreed@cs.washington.edu", "date": "2013-09-06T18:13:08Z"}, "committer": {"name": "Eric Reed", "email": "ecreed@cs.washington.edu", "date": "2013-09-06T18:13:43Z"}, "message": "Forgot to make accept() home for IO", "tree": {"sha": "ebdda61fbee6c3f4cf205c2c7d5e4612c74c3398", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ebdda61fbee6c3f4cf205c2c7d5e4612c74c3398"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/73bb4de556b3dabc1ba5db397fc1bed28e0537a9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/73bb4de556b3dabc1ba5db397fc1bed28e0537a9", "html_url": "https://github.com/rust-lang/rust/commit/73bb4de556b3dabc1ba5db397fc1bed28e0537a9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/73bb4de556b3dabc1ba5db397fc1bed28e0537a9/comments", "author": {"login": "anasazi", "id": 591682, "node_id": "MDQ6VXNlcjU5MTY4Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/591682?v=4", "gravatar_id": "", "url": "https://api.github.com/users/anasazi", "html_url": "https://github.com/anasazi", "followers_url": "https://api.github.com/users/anasazi/followers", "following_url": "https://api.github.com/users/anasazi/following{/other_user}", "gists_url": "https://api.github.com/users/anasazi/gists{/gist_id}", "starred_url": "https://api.github.com/users/anasazi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/anasazi/subscriptions", "organizations_url": "https://api.github.com/users/anasazi/orgs", "repos_url": "https://api.github.com/users/anasazi/repos", "events_url": "https://api.github.com/users/anasazi/events{/privacy}", "received_events_url": "https://api.github.com/users/anasazi/received_events", "type": "User", "site_admin": false}, "committer": {"login": "anasazi", "id": 591682, "node_id": "MDQ6VXNlcjU5MTY4Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/591682?v=4", "gravatar_id": "", "url": "https://api.github.com/users/anasazi", "html_url": "https://github.com/anasazi", "followers_url": "https://api.github.com/users/anasazi/followers", "following_url": "https://api.github.com/users/anasazi/following{/other_user}", "gists_url": "https://api.github.com/users/anasazi/gists{/gist_id}", "starred_url": "https://api.github.com/users/anasazi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/anasazi/subscriptions", "organizations_url": "https://api.github.com/users/anasazi/orgs", "repos_url": "https://api.github.com/users/anasazi/repos", "events_url": "https://api.github.com/users/anasazi/events{/privacy}", "received_events_url": "https://api.github.com/users/anasazi/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "917d3c28b6aab7de454087236173122616a6f9b6", "url": "https://api.github.com/repos/rust-lang/rust/commits/917d3c28b6aab7de454087236173122616a6f9b6", "html_url": "https://github.com/rust-lang/rust/commit/917d3c28b6aab7de454087236173122616a6f9b6"}], "stats": {"total": 4, "additions": 3, "deletions": 1}, "files": [{"sha": "e32718d47fede181d620e43b04d7bf1627bae759", "filename": "src/libstd/rt/uv/uvio.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/73bb4de556b3dabc1ba5db397fc1bed28e0537a9/src%2Flibstd%2Frt%2Fuv%2Fuvio.rs", "raw_url": "https://github.com/rust-lang/rust/raw/73bb4de556b3dabc1ba5db397fc1bed28e0537a9/src%2Flibstd%2Frt%2Fuv%2Fuvio.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Frt%2Fuv%2Fuvio.rs?ref=73bb4de556b3dabc1ba5db397fc1bed28e0537a9", "patch": "@@ -719,7 +719,9 @@ impl RtioSocket for UvTcpAcceptor {\n \n impl RtioTcpAcceptor for UvTcpAcceptor {\n     fn accept(&mut self) -> Result<~RtioTcpStreamObject, IoError> {\n-        self.incoming.recv()\n+        do self.home_for_io |self_| {\n+            self_.incoming.recv()\n+        }\n     }\n \n     fn accept_simultaneously(&mut self) -> Result<(), IoError> {"}]}