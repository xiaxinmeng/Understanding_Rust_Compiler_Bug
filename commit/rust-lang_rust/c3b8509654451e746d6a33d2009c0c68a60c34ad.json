{"sha": "c3b8509654451e746d6a33d2009c0c68a60c34ad", "node_id": "C_kwDOAAsO6NoAKGMzYjg1MDk2NTQ0NTFlNzQ2ZDZhMzNkMjAwOWMwYzY4YTYwYzM0YWQ", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2022-06-05T16:26:16Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2022-06-12T00:42:23Z"}, "message": "rename ExperimentalUb \u2192 StackedBorrowsUb", "tree": {"sha": "0cbc9cbfe67dd1db6c1ca93a5ee17a1056574b7f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0cbc9cbfe67dd1db6c1ca93a5ee17a1056574b7f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c3b8509654451e746d6a33d2009c0c68a60c34ad", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c3b8509654451e746d6a33d2009c0c68a60c34ad", "html_url": "https://github.com/rust-lang/rust/commit/c3b8509654451e746d6a33d2009c0c68a60c34ad", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c3b8509654451e746d6a33d2009c0c68a60c34ad/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "069d8fdb71a9a46a76552e8eea7d427b4d6f08a1", "url": "https://api.github.com/repos/rust-lang/rust/commits/069d8fdb71a9a46a76552e8eea7d427b4d6f08a1", "html_url": "https://github.com/rust-lang/rust/commit/069d8fdb71a9a46a76552e8eea7d427b4d6f08a1"}], "stats": {"total": 23, "additions": 8, "deletions": 15}, "files": [{"sha": "0e3e693e33f9010cbeca7dc83c608d9de9da1c64", "filename": "src/diagnostics.rs", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/c3b8509654451e746d6a33d2009c0c68a60c34ad/src%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c3b8509654451e746d6a33d2009c0c68a60c34ad/src%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdiagnostics.rs?ref=c3b8509654451e746d6a33d2009c0c68a60c34ad", "patch": "@@ -16,10 +16,9 @@ pub enum TerminationInfo {\n     Exit(i64),\n     Abort(String),\n     UnsupportedInIsolation(String),\n-    ExperimentalUb {\n+    StackedBorrowsUb {\n         msg: String,\n         help: Option<String>,\n-        url: String,\n         history: Option<TagHistory>,\n     },\n     Deadlock,\n@@ -43,7 +42,7 @@ impl fmt::Display for TerminationInfo {\n             Exit(code) => write!(f, \"the evaluated program completed with exit code {}\", code),\n             Abort(msg) => write!(f, \"{}\", msg),\n             UnsupportedInIsolation(msg) => write!(f, \"{}\", msg),\n-            ExperimentalUb { msg, .. } => write!(f, \"{}\", msg),\n+            StackedBorrowsUb { msg, .. } => write!(f, \"{}\", msg),\n             Deadlock => write!(f, \"the evaluated program deadlocked\"),\n             MultipleSymbolDefinitions { link_name, .. } =>\n                 write!(f, \"multiple definitions of symbol `{}`\", link_name),\n@@ -146,7 +145,7 @@ pub fn report_error<'tcx, 'mir>(\n                 Exit(code) => return Some(*code),\n                 Abort(_) => Some(\"abnormal termination\"),\n                 UnsupportedInIsolation(_) => Some(\"unsupported operation\"),\n-                ExperimentalUb { .. } => Some(\"Undefined Behavior\"),\n+                StackedBorrowsUb { .. } => Some(\"Undefined Behavior\"),\n                 Deadlock => Some(\"deadlock\"),\n                 MultipleSymbolDefinitions { .. } | SymbolShimClashing { .. } => None,\n             };\n@@ -157,11 +156,12 @@ pub fn report_error<'tcx, 'mir>(\n                         (None, format!(\"pass the flag `-Zmiri-disable-isolation` to disable isolation;\")),\n                         (None, format!(\"or pass `-Zmiri-isolation-error=warn` to configure Miri to return an error code from isolated operations (if supported for that operation) and continue with a warning\")),\n                     ],\n-                ExperimentalUb { url, help, history, .. } => {\n+                StackedBorrowsUb { help, history, .. } => {\n+                    let url = \"https://github.com/rust-lang/unsafe-code-guidelines/blob/master/wip/stacked-borrows.md\";\n                     msg.extend(help.clone());\n                     let mut helps = vec![\n-                        (None, format!(\"this indicates a potential bug in the program: it performed an invalid operation, but the rules it violated are still experimental\")),\n-                        (None, format!(\"see {} for further information\", url)),\n+                        (None, format!(\"this indicates a potential bug in the program: it performed an invalid operation, but the Stacked Borrows rules it violated are still experimental\")),\n+                        (None, format!(\"see {url} for further information\")),\n                     ];\n                     match history {\n                         Some(TagHistory::Tagged {tag, created: (created_range, created_span), invalidated, protected }) => {"}, {"sha": "c78741499c2d4a9a6c9b084f599425fd97ab2f56", "filename": "src/stacked_borrows.rs", "status": "modified", "additions": 1, "deletions": 8, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/c3b8509654451e746d6a33d2009c0c68a60c34ad/src%2Fstacked_borrows.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c3b8509654451e746d6a33d2009c0c68a60c34ad/src%2Fstacked_borrows.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fstacked_borrows.rs?ref=c3b8509654451e746d6a33d2009c0c68a60c34ad", "patch": "@@ -250,14 +250,7 @@ pub fn err_sb_ub<'tcx>(\n     help: Option<String>,\n     history: Option<TagHistory>,\n ) -> InterpError<'tcx> {\n-    err_machine_stop!(TerminationInfo::ExperimentalUb {\n-        msg,\n-        help,\n-        url: format!(\n-            \"https://github.com/rust-lang/unsafe-code-guidelines/blob/master/wip/stacked-borrows.md\"\n-        ),\n-        history\n-    })\n+    err_machine_stop!(TerminationInfo::StackedBorrowsUb { msg, help, history })\n }\n \n // # Stacked Borrows Core Begin"}]}