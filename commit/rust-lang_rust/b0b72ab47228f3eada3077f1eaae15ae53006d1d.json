{"sha": "b0b72ab47228f3eada3077f1eaae15ae53006d1d", "node_id": "MDY6Q29tbWl0NzI0NzEyOmIwYjcyYWI0NzIyOGYzZWFkYTMwNzdmMWVhYWUxNWFlNTMwMDZkMWQ=", "commit": {"author": {"name": "Brian Anderson", "email": "andersrb@gmail.com", "date": "2011-03-31T04:46:26Z"}, "committer": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2011-03-31T14:52:29Z"}, "message": "Restore scope block contexts to the translation of expr_block.\n\nI removed this previously but that was wrong because it caused\nblock expressions to not create a new scope.", "tree": {"sha": "6057e0be60cf28db7ffad3d25828f60a20ed1477", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6057e0be60cf28db7ffad3d25828f60a20ed1477"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b0b72ab47228f3eada3077f1eaae15ae53006d1d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b0b72ab47228f3eada3077f1eaae15ae53006d1d", "html_url": "https://github.com/rust-lang/rust/commit/b0b72ab47228f3eada3077f1eaae15ae53006d1d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b0b72ab47228f3eada3077f1eaae15ae53006d1d/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "50e354611fbecd4e47ca607e5e201b236eb558e0", "url": "https://api.github.com/repos/rust-lang/rust/commits/50e354611fbecd4e47ca607e5e201b236eb558e0", "html_url": "https://github.com/rust-lang/rust/commit/50e354611fbecd4e47ca607e5e201b236eb558e0"}], "stats": {"total": 22, "additions": 20, "deletions": 2}, "files": [{"sha": "a32faddf8e50dbd8d4ba2ff952fbf7448eb4c6b8", "filename": "src/comp/middle/trans.rs", "status": "modified", "additions": 20, "deletions": 2, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/b0b72ab47228f3eada3077f1eaae15ae53006d1d/src%2Fcomp%2Fmiddle%2Ftrans.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b0b72ab47228f3eada3077f1eaae15ae53006d1d/src%2Fcomp%2Fmiddle%2Ftrans.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Ftrans.rs?ref=b0b72ab47228f3eada3077f1eaae15ae53006d1d", "patch": "@@ -3063,7 +3063,18 @@ fn trans_if(@block_ctxt cx, @ast.expr cond,\n     auto expr_llty;\n     alt (els) {\n         case (some[@ast.expr](?elexpr)) {\n-            else_res = trans_expr(else_cx, elexpr);\n+            alt (elexpr.node) {\n+                case (ast.expr_if(_, _, _, _)) {\n+                    else_res = trans_expr(else_cx, elexpr);\n+                }\n+                case (ast.expr_block(?blk, _)) {\n+                    // Calling trans_block directly instead of trans_expr\n+                    // because trans_expr will create another scope block\n+                    // context for the block, but we've already got the\n+                    // 'else' context\n+                    else_res = trans_block(else_cx, blk);\n+                }\n+            }\n \n             // If we have an else expression, then the entire\n             // if expression can have a non-nil type.\n@@ -4617,7 +4628,14 @@ fn trans_expr(@block_ctxt cx, @ast.expr e) -> result {\n         }\n \n         case (ast.expr_block(?blk, _)) {\n-            ret trans_block(cx, blk);\n+            auto sub_cx = new_scope_block_ctxt(cx, \"block-expr body\");\n+            auto next_cx = new_sub_block_ctxt(cx, \"next\");\n+            auto sub = trans_block(sub_cx, blk);\n+\n+            cx.build.Br(sub_cx.llbb);\n+            sub.bcx.build.Br(next_cx.llbb);\n+\n+            ret res(next_cx, sub.val);\n         }\n \n         case (ast.expr_assign(?dst, ?src, ?ann)) {"}]}