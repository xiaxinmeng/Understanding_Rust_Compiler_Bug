{"sha": "6e1df4732b6fb877361b0dd3b209f194481bbe7b", "node_id": "C_kwDOAAsO6NoAKDZlMWRmNDczMmI2ZmI4NzczNjFiMGRkM2IyMDlmMTk0NDgxYmJlN2I", "commit": {"author": {"name": "Evan Typanski", "email": "evan.typanski@microfocus.com", "date": "2022-06-21T20:41:36Z"}, "committer": {"name": "Evan Typanski", "email": "evan.typanski@microfocus.com", "date": "2022-06-21T20:41:36Z"}, "message": "Fix case where suggestion errored for infer type", "tree": {"sha": "af247b998333c01875eb09a6246bddc3c405c750", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/af247b998333c01875eb09a6246bddc3c405c750"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6e1df4732b6fb877361b0dd3b209f194481bbe7b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6e1df4732b6fb877361b0dd3b209f194481bbe7b", "html_url": "https://github.com/rust-lang/rust/commit/6e1df4732b6fb877361b0dd3b209f194481bbe7b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6e1df4732b6fb877361b0dd3b209f194481bbe7b/comments", "author": null, "committer": null, "parents": [{"sha": "e5ebd3edabc17436de086a7ce147983c2238939a", "url": "https://api.github.com/repos/rust-lang/rust/commits/e5ebd3edabc17436de086a7ce147983c2238939a", "html_url": "https://github.com/rust-lang/rust/commit/e5ebd3edabc17436de086a7ce147983c2238939a"}], "stats": {"total": 29, "additions": 25, "deletions": 4}, "files": [{"sha": "cba03389a9b85d0e30fce63821bbf42d612da4c9", "filename": "clippy_lints/src/manual_rem_euclid.rs", "status": "modified", "additions": 11, "deletions": 4, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/6e1df4732b6fb877361b0dd3b209f194481bbe7b/clippy_lints%2Fsrc%2Fmanual_rem_euclid.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6e1df4732b6fb877361b0dd3b209f194481bbe7b/clippy_lints%2Fsrc%2Fmanual_rem_euclid.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmanual_rem_euclid.rs?ref=6e1df4732b6fb877361b0dd3b209f194481bbe7b", "patch": "@@ -4,7 +4,7 @@ use clippy_utils::source::snippet_with_applicability;\n use clippy_utils::{meets_msrv, msrvs, path_to_local};\n use if_chain::if_chain;\n use rustc_errors::Applicability;\n-use rustc_hir::{BinOpKind, Expr, ExprKind};\n+use rustc_hir::{BinOpKind, Expr, ExprKind, Node, TyKind};\n use rustc_lint::{LateContext, LateLintPass};\n use rustc_semver::RustcVersion;\n use rustc_session::{declare_tool_lint, impl_lint_pass};\n@@ -19,12 +19,12 @@ declare_clippy_lint! {\n     ///\n     /// ### Example\n     /// ```rust\n-    /// let x = 24;\n+    /// let x: i32 = 24;\n     /// let rem = ((x % 4) + 4) % 4;\n     /// ```\n     /// Use instead:\n     /// ```rust\n-    /// let x = 24;\n+    /// let x: i32 = 24;\n     /// let rem = x.rem_euclid(4);\n     /// ```\n     #[clippy::version = \"1.63.0\"]\n@@ -63,7 +63,14 @@ impl<'tcx> LateLintPass<'tcx> for ManualRemEuclid {\n             if op3.node == BinOpKind::Rem;\n             if let Some((const3, expr3)) = check_for_positive_int_constant(cx, expr2);\n             if const1 == const2 && const2 == const3;\n-            if path_to_local(expr3).is_some();\n+            // Only apply if we see an explicit type annotation on the local.\n+            if let Some(hir_id) = path_to_local(expr3);\n+            let hir = cx.tcx.hir();\n+            if let Some(Node::Binding(_)) = hir.find(hir_id);\n+            let parent = hir.get_parent_node(hir_id);\n+            if let Some(Node::Local(local)) = hir.find(parent);\n+            if let Some(ty) = local.ty;\n+            if !matches!(ty.kind, TyKind::Infer);\n             then {\n                 let mut app = Applicability::MachineApplicable;\n                 let rem_of = snippet_with_applicability(cx, expr3.span, \"_\", &mut app);"}, {"sha": "10a10e812f42f82ba8bd4f6528a226e517c0308a", "filename": "tests/ui/manual_rem_euclid.fixed", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/6e1df4732b6fb877361b0dd3b209f194481bbe7b/tests%2Fui%2Fmanual_rem_euclid.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/6e1df4732b6fb877361b0dd3b209f194481bbe7b/tests%2Fui%2Fmanual_rem_euclid.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmanual_rem_euclid.fixed?ref=6e1df4732b6fb877361b0dd3b209f194481bbe7b", "patch": "@@ -14,4 +14,11 @@ fn main() {\n     let _: i32 = (3 + value % 4) % 4;\n     let _: i32 = (-4 + value % -4) % -4;\n     let _: i32 = ((5 % 4) + 4) % 4;\n+\n+    // Make sure the lint does not trigger if it would cause an error, like with an ambiguous\n+    // integer type\n+    let not_annotated = 24;\n+    let _ = ((not_annotated % 4) + 4) % 4;\n+    let inferred: _ = 24;\n+    let _ = ((inferred % 4) + 4) % 4;\n }"}, {"sha": "bf16f977ea94f3c7d47264e78ba10cacea6b1b1a", "filename": "tests/ui/manual_rem_euclid.rs", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/6e1df4732b6fb877361b0dd3b209f194481bbe7b/tests%2Fui%2Fmanual_rem_euclid.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6e1df4732b6fb877361b0dd3b209f194481bbe7b/tests%2Fui%2Fmanual_rem_euclid.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmanual_rem_euclid.rs?ref=6e1df4732b6fb877361b0dd3b209f194481bbe7b", "patch": "@@ -14,4 +14,11 @@ fn main() {\n     let _: i32 = (3 + value % 4) % 4;\n     let _: i32 = (-4 + value % -4) % -4;\n     let _: i32 = ((5 % 4) + 4) % 4;\n+\n+    // Make sure the lint does not trigger if it would cause an error, like with an ambiguous\n+    // integer type\n+    let not_annotated = 24;\n+    let _ = ((not_annotated % 4) + 4) % 4;\n+    let inferred: _ = 24;\n+    let _ = ((inferred % 4) + 4) % 4;\n }"}]}