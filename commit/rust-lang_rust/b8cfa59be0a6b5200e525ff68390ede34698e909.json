{"sha": "b8cfa59be0a6b5200e525ff68390ede34698e909", "node_id": "MDY6Q29tbWl0NzI0NzEyOmI4Y2ZhNTliZTBhNmI1MjAwZTUyNWZmNjgzOTBlZGUzNDY5OGU5MDk=", "commit": {"author": {"name": "Simon Mazur", "email": "semmaz.box@gmail.com", "date": "2015-09-18T12:05:35Z"}, "committer": {"name": "Simon Mazur", "email": "semmaz.box@gmail.com", "date": "2015-09-20T10:12:27Z"}, "message": "rustdoc: Changed section headers anchor rendering", "tree": {"sha": "4d02bd2829244ffa878943457330af46125b941b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4d02bd2829244ffa878943457330af46125b941b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b8cfa59be0a6b5200e525ff68390ede34698e909", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b8cfa59be0a6b5200e525ff68390ede34698e909", "html_url": "https://github.com/rust-lang/rust/commit/b8cfa59be0a6b5200e525ff68390ede34698e909", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b8cfa59be0a6b5200e525ff68390ede34698e909/comments", "author": {"login": "semmaz", "id": 3989426, "node_id": "MDQ6VXNlcjM5ODk0MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/3989426?v=4", "gravatar_id": "", "url": "https://api.github.com/users/semmaz", "html_url": "https://github.com/semmaz", "followers_url": "https://api.github.com/users/semmaz/followers", "following_url": "https://api.github.com/users/semmaz/following{/other_user}", "gists_url": "https://api.github.com/users/semmaz/gists{/gist_id}", "starred_url": "https://api.github.com/users/semmaz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/semmaz/subscriptions", "organizations_url": "https://api.github.com/users/semmaz/orgs", "repos_url": "https://api.github.com/users/semmaz/repos", "events_url": "https://api.github.com/users/semmaz/events{/privacy}", "received_events_url": "https://api.github.com/users/semmaz/received_events", "type": "User", "site_admin": false}, "committer": {"login": "semmaz", "id": 3989426, "node_id": "MDQ6VXNlcjM5ODk0MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/3989426?v=4", "gravatar_id": "", "url": "https://api.github.com/users/semmaz", "html_url": "https://github.com/semmaz", "followers_url": "https://api.github.com/users/semmaz/followers", "following_url": "https://api.github.com/users/semmaz/following{/other_user}", "gists_url": "https://api.github.com/users/semmaz/gists{/gist_id}", "starred_url": "https://api.github.com/users/semmaz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/semmaz/subscriptions", "organizations_url": "https://api.github.com/users/semmaz/orgs", "repos_url": "https://api.github.com/users/semmaz/repos", "events_url": "https://api.github.com/users/semmaz/events{/privacy}", "received_events_url": "https://api.github.com/users/semmaz/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fd38a75077a4c5efc87413b7f9f7f1b6bc9db9af", "url": "https://api.github.com/repos/rust-lang/rust/commits/fd38a75077a4c5efc87413b7f9f7f1b6bc9db9af", "html_url": "https://github.com/rust-lang/rust/commit/fd38a75077a4c5efc87413b7f9f7f1b6bc9db9af"}], "stats": {"total": 28, "additions": 23, "deletions": 5}, "files": [{"sha": "e5dbe534af8a7f7bddae67a67cb88a70854d73e0", "filename": "src/librustdoc/html/markdown.rs", "status": "modified", "additions": 23, "deletions": 5, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/b8cfa59be0a6b5200e525ff68390ede34698e909/src%2Flibrustdoc%2Fhtml%2Fmarkdown.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b8cfa59be0a6b5200e525ff68390ede34698e909/src%2Flibrustdoc%2Fhtml%2Fmarkdown.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fmarkdown.rs?ref=b8cfa59be0a6b5200e525ff68390ede34698e909", "patch": "@@ -283,19 +283,37 @@ pub fn render(w: &mut fmt::Formatter, s: &str, print_toc: bool) -> fmt::Result {\n             str::from_utf8(s).unwrap().to_string()\n         };\n \n-        // Transform the contents of the header into a hyphenated string\n-        let id = s.split_whitespace().map(|s| s.to_ascii_lowercase())\n-            .collect::<Vec<String>>().join(\"-\");\n-\n+        // Discard '<em>', '<code>' tags and some escaped characters,\n+        // transform the contents of the header into a hyphenated string\n+        // without non-alphanumeric characters other than '-' and '_'.\n+        //\n         // This is a terrible hack working around how hoedown gives us rendered\n         // html for text rather than the raw text.\n+        let mut id = s.clone();\n+        let repl_sub = vec![\"<em>\", \"</em>\", \"<code>\", \"</code>\",\n+                            \"&lt;\", \"&gt;\", \"&amp;\", \"&#39;\", \"&quot;\"];\n+        for sub in repl_sub {\n+            id = id.replace(sub, \"\");\n+        }\n+        let id = id.chars().filter_map(|c| {\n+            if c.is_alphanumeric() || c == '-' || c == '_' {\n+                if c.is_ascii() {\n+                    Some(c.to_ascii_lowercase())\n+                } else {\n+                    Some(c)\n+                }\n+            } else if c.is_whitespace() && c.is_ascii() {\n+                Some('-')\n+            } else {\n+                None\n+            }\n+        }).collect::<String>();\n \n         let opaque = unsafe { (*data).opaque as *mut hoedown_html_renderer_state };\n         let opaque = unsafe { &mut *((*opaque).opaque as *mut MyOpaque) };\n \n         // Make sure our hyphenated ID is unique for this page\n         let id = USED_HEADER_MAP.with(|map| {\n-            let id = id.replace(\"<code>\", \"\").replace(\"</code>\", \"\").to_string();\n             let id = match map.borrow_mut().get_mut(&id) {\n                 None => id,\n                 Some(a) => { *a += 1; format!(\"{}-{}\", id, *a - 1) }"}]}