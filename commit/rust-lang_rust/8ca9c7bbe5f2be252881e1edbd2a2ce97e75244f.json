{"sha": "8ca9c7bbe5f2be252881e1edbd2a2ce97e75244f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjhjYTljN2JiZTVmMmJlMjUyODgxZTFlZGJkMmEyY2U5N2U3NTI0NGY=", "commit": {"author": {"name": "Pascal Hertleif", "email": "pascal@technocreatives.com", "date": "2019-08-24T15:45:03Z"}, "committer": {"name": "Pascal Hertleif", "email": "pascal@technocreatives.com", "date": "2019-08-24T15:45:03Z"}, "message": "Fix tidy feature gate error reporting\n\nFeature gate definitions were split into multiple files in #63824 but\ntidy kept reporting the hard-coded path. Now, it shows the full path\nto the correct file.", "tree": {"sha": "f5b36f5d05c3f1a1761f08c9ec10fed4e26912be", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f5b36f5d05c3f1a1761f08c9ec10fed4e26912be"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8ca9c7bbe5f2be252881e1edbd2a2ce97e75244f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8ca9c7bbe5f2be252881e1edbd2a2ce97e75244f", "html_url": "https://github.com/rust-lang/rust/commit/8ca9c7bbe5f2be252881e1edbd2a2ce97e75244f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8ca9c7bbe5f2be252881e1edbd2a2ce97e75244f/comments", "author": {"login": "killercup", "id": 20063, "node_id": "MDQ6VXNlcjIwMDYz", "avatar_url": "https://avatars.githubusercontent.com/u/20063?v=4", "gravatar_id": "", "url": "https://api.github.com/users/killercup", "html_url": "https://github.com/killercup", "followers_url": "https://api.github.com/users/killercup/followers", "following_url": "https://api.github.com/users/killercup/following{/other_user}", "gists_url": "https://api.github.com/users/killercup/gists{/gist_id}", "starred_url": "https://api.github.com/users/killercup/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/killercup/subscriptions", "organizations_url": "https://api.github.com/users/killercup/orgs", "repos_url": "https://api.github.com/users/killercup/repos", "events_url": "https://api.github.com/users/killercup/events{/privacy}", "received_events_url": "https://api.github.com/users/killercup/received_events", "type": "User", "site_admin": false}, "committer": {"login": "killercup", "id": 20063, "node_id": "MDQ6VXNlcjIwMDYz", "avatar_url": "https://avatars.githubusercontent.com/u/20063?v=4", "gravatar_id": "", "url": "https://api.github.com/users/killercup", "html_url": "https://github.com/killercup", "followers_url": "https://api.github.com/users/killercup/followers", "following_url": "https://api.github.com/users/killercup/following{/other_user}", "gists_url": "https://api.github.com/users/killercup/gists{/gist_id}", "starred_url": "https://api.github.com/users/killercup/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/killercup/subscriptions", "organizations_url": "https://api.github.com/users/killercup/orgs", "repos_url": "https://api.github.com/users/killercup/repos", "events_url": "https://api.github.com/users/killercup/events{/privacy}", "received_events_url": "https://api.github.com/users/killercup/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "478464570e60523adc6d303577d1782229ca1f93", "url": "https://api.github.com/repos/rust-lang/rust/commits/478464570e60523adc6d303577d1782229ca1f93", "html_url": "https://github.com/rust-lang/rust/commit/478464570e60523adc6d303577d1782229ca1f93"}], "stats": {"total": 22, "additions": 15, "deletions": 7}, "files": [{"sha": "50e9116c778eac9f2dfd2e8a5924bf2de91f857b", "filename": "src/tools/tidy/src/features.rs", "status": "modified", "additions": 15, "deletions": 7, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/8ca9c7bbe5f2be252881e1edbd2a2ce97e75244f/src%2Ftools%2Ftidy%2Fsrc%2Ffeatures.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8ca9c7bbe5f2be252881e1edbd2a2ce97e75244f/src%2Ftools%2Ftidy%2Fsrc%2Ffeatures.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Ftidy%2Fsrc%2Ffeatures.rs?ref=8ca9c7bbe5f2be252881e1edbd2a2ce97e75244f", "patch": "@@ -176,7 +176,10 @@ pub fn check(path: &Path, bad: &mut bool, verbose: bool) -> CollectedFeatures {\n     CollectedFeatures { lib: lib_features, lang: features }\n }\n \n-fn format_features<'a>(features: &'a Features, family: &'a str) -> impl Iterator<Item = String> + 'a {\n+fn format_features<'a>(\n+    features: &'a Features,\n+    family: &'a str,\n+) -> impl Iterator<Item = String> + 'a {\n     features.iter().map(move |(name, feature)| {\n         format!(\"{:<32} {:<8} {:<12} {:<8}\",\n                 name,\n@@ -228,7 +231,8 @@ pub fn collect_lang_features(base_src_path: &Path, bad: &mut bool) -> Features {\n }\n \n fn collect_lang_features_in(base: &Path, file: &str, bad: &mut bool) -> Features {\n-    let contents = t!(fs::read_to_string(base.join(\"libsyntax/feature_gate\").join(file)));\n+    let path = base.join(\"libsyntax/feature_gate\").join(file);\n+    let contents = t!(fs::read_to_string(&path));\n \n     // We allow rustc-internal features to omit a tracking issue.\n     // To make tidy accept omitting a tracking issue, group the list of features\n@@ -259,8 +263,9 @@ fn collect_lang_features_in(base: &Path, file: &str, bad: &mut bool) -> Features\n                 if in_feature_group {\n                     tidy_error!(\n                         bad,\n-                        // ignore-tidy-linelength\n-                        \"libsyntax/feature_gate.rs:{}: new feature group is started without ending the previous one\",\n+                        \"{}:{}: \\\n+                        new feature group is started without ending the previous one\",\n+                        path.display(),\n                         line_number,\n                     );\n                 }\n@@ -289,7 +294,8 @@ fn collect_lang_features_in(base: &Path, file: &str, bad: &mut bool) -> Features\n                 Err(err) => {\n                     tidy_error!(\n                         bad,\n-                        \"libsyntax/feature_gate.rs:{}: failed to parse since: {} ({:?})\",\n+                        \"{}:{}: failed to parse since: {} ({:?})\",\n+                        path.display(),\n                         line_number,\n                         since_str,\n                         err,\n@@ -301,7 +307,8 @@ fn collect_lang_features_in(base: &Path, file: &str, bad: &mut bool) -> Features\n                 if prev_since > since {\n                     tidy_error!(\n                         bad,\n-                        \"libsyntax/feature_gate.rs:{}: feature {} is not sorted by since\",\n+                        \"{}:{}: feature {} is not sorted by since\",\n+                        path.display(),\n                         line_number,\n                         name,\n                     );\n@@ -315,7 +322,8 @@ fn collect_lang_features_in(base: &Path, file: &str, bad: &mut bool) -> Features\n                     *bad = true;\n                     tidy_error!(\n                         bad,\n-                        \"libsyntax/feature_gate.rs:{}: no tracking issue for feature {}\",\n+                        \"{}:{}: no tracking issue for feature {}\",\n+                        path.display(),\n                         line_number,\n                         name,\n                     );"}]}