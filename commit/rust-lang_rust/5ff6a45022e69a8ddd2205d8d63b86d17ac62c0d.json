{"sha": "5ff6a45022e69a8ddd2205d8d63b86d17ac62c0d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjVmZjZhNDUwMjJlNjlhOGRkZDIyMDVkOGQ2M2I4NmQxN2FjNjJjMGQ=", "commit": {"author": {"name": "Nick Cameron", "email": "ncameron@mozilla.com", "date": "2015-04-20T21:54:04Z"}, "committer": {"name": "Nick Cameron", "email": "ncameron@mozilla.com", "date": "2015-04-20T21:54:04Z"}, "message": "By value self in functions", "tree": {"sha": "bf08c06c79f342bbede2b334ec8f5f401a05ba55", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bf08c06c79f342bbede2b334ec8f5f401a05ba55"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5ff6a45022e69a8ddd2205d8d63b86d17ac62c0d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5ff6a45022e69a8ddd2205d8d63b86d17ac62c0d", "html_url": "https://github.com/rust-lang/rust/commit/5ff6a45022e69a8ddd2205d8d63b86d17ac62c0d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5ff6a45022e69a8ddd2205d8d63b86d17ac62c0d/comments", "author": {"login": "nrc", "id": 762626, "node_id": "MDQ6VXNlcjc2MjYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/762626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nrc", "html_url": "https://github.com/nrc", "followers_url": "https://api.github.com/users/nrc/followers", "following_url": "https://api.github.com/users/nrc/following{/other_user}", "gists_url": "https://api.github.com/users/nrc/gists{/gist_id}", "starred_url": "https://api.github.com/users/nrc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nrc/subscriptions", "organizations_url": "https://api.github.com/users/nrc/orgs", "repos_url": "https://api.github.com/users/nrc/repos", "events_url": "https://api.github.com/users/nrc/events{/privacy}", "received_events_url": "https://api.github.com/users/nrc/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nrc", "id": 762626, "node_id": "MDQ6VXNlcjc2MjYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/762626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nrc", "html_url": "https://github.com/nrc", "followers_url": "https://api.github.com/users/nrc/followers", "following_url": "https://api.github.com/users/nrc/following{/other_user}", "gists_url": "https://api.github.com/users/nrc/gists{/gist_id}", "starred_url": "https://api.github.com/users/nrc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nrc/subscriptions", "organizations_url": "https://api.github.com/users/nrc/orgs", "repos_url": "https://api.github.com/users/nrc/repos", "events_url": "https://api.github.com/users/nrc/events{/privacy}", "received_events_url": "https://api.github.com/users/nrc/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6dbb3ef2f18c82ee767add5e78e15cf49940dd7e", "url": "https://api.github.com/repos/rust-lang/rust/commits/6dbb3ef2f18c82ee767add5e78e15cf49940dd7e", "html_url": "https://github.com/rust-lang/rust/commit/6dbb3ef2f18c82ee767add5e78e15cf49940dd7e"}], "stats": {"total": 8, "additions": 5, "deletions": 3}, "files": [{"sha": "8e652c1971835cf4d2c24ad2b3c91e2b2836a9e1", "filename": "src/mod.rs", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/5ff6a45022e69a8ddd2205d8d63b86d17ac62c0d/src%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5ff6a45022e69a8ddd2205d8d63b86d17ac62c0d/src%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fmod.rs?ref=5ff6a45022e69a8ddd2205d8d63b86d17ac62c0d", "patch": "@@ -720,7 +720,6 @@ impl<'a> FmtVisitor<'a> {\n         // TODO dead spans\n         let mut arg_strs: Vec<_> = args.iter().map(|a| (self.rewrite_fn_input(a), String::new())).collect();\n         // Account for sugary self.\n-        // TODO busted with by value self\n         if let Some(explicit_self) = explicit_self {\n             match explicit_self.node {\n                 ast::ExplicitSelf_::SelfRegion(ref lt, ref m, _) => {\n@@ -732,10 +731,13 @@ impl<'a> FmtVisitor<'a> {\n                         &ast::Mutability::MutMutable => \"mut \".to_string(),\n                         &ast::Mutability::MutImmutable => String::new(),\n                     };\n-                    arg_strs[0].0 = format!(\"&{}{}self\", lt_str, mut_str)\n+                    arg_strs[0].0 = format!(\"&{}{}self\", lt_str, mut_str);\n                 }\n                 ast::ExplicitSelf_::SelfExplicit(ref ty, _) => {\n-                    arg_strs[0].0 = format!(\"self: {}\", pprust::ty_to_string(ty))\n+                    arg_strs[0].0 = format!(\"self: {}\", pprust::ty_to_string(ty));\n+                }\n+                ast::ExplicitSelf_::SelfValue(_) => {\n+                    arg_strs[0].0 = \"self\".to_string();\n                 }\n                 _ => {}\n             }"}]}