{"sha": "d74c17ba0c0a60f484dd35c6edb5093bfeeda508", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQ3NGMxN2JhMGMwYTYwZjQ4NGRkMzVjNmVkYjUwOTNiZmVlZGE1MDg=", "commit": {"author": {"name": "Erin Power", "email": "xampprocky@gmail.com", "date": "2020-03-24T12:24:20Z"}, "committer": {"name": "Erin Power", "email": "xampprocky@gmail.com", "date": "2020-03-24T12:35:24Z"}, "message": "Update RELEASES.md for 1.43.0", "tree": {"sha": "e8c614b060683a809aa3212dcd6d87997a3ea569", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e8c614b060683a809aa3212dcd6d87997a3ea569"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d74c17ba0c0a60f484dd35c6edb5093bfeeda508", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d74c17ba0c0a60f484dd35c6edb5093bfeeda508", "html_url": "https://github.com/rust-lang/rust/commit/d74c17ba0c0a60f484dd35c6edb5093bfeeda508", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d74c17ba0c0a60f484dd35c6edb5093bfeeda508/comments", "author": {"login": "XAMPPRocky", "id": 4464295, "node_id": "MDQ6VXNlcjQ0NjQyOTU=", "avatar_url": "https://avatars.githubusercontent.com/u/4464295?v=4", "gravatar_id": "", "url": "https://api.github.com/users/XAMPPRocky", "html_url": "https://github.com/XAMPPRocky", "followers_url": "https://api.github.com/users/XAMPPRocky/followers", "following_url": "https://api.github.com/users/XAMPPRocky/following{/other_user}", "gists_url": "https://api.github.com/users/XAMPPRocky/gists{/gist_id}", "starred_url": "https://api.github.com/users/XAMPPRocky/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/XAMPPRocky/subscriptions", "organizations_url": "https://api.github.com/users/XAMPPRocky/orgs", "repos_url": "https://api.github.com/users/XAMPPRocky/repos", "events_url": "https://api.github.com/users/XAMPPRocky/events{/privacy}", "received_events_url": "https://api.github.com/users/XAMPPRocky/received_events", "type": "User", "site_admin": false}, "committer": {"login": "XAMPPRocky", "id": 4464295, "node_id": "MDQ6VXNlcjQ0NjQyOTU=", "avatar_url": "https://avatars.githubusercontent.com/u/4464295?v=4", "gravatar_id": "", "url": "https://api.github.com/users/XAMPPRocky", "html_url": "https://github.com/XAMPPRocky", "followers_url": "https://api.github.com/users/XAMPPRocky/followers", "following_url": "https://api.github.com/users/XAMPPRocky/following{/other_user}", "gists_url": "https://api.github.com/users/XAMPPRocky/gists{/gist_id}", "starred_url": "https://api.github.com/users/XAMPPRocky/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/XAMPPRocky/subscriptions", "organizations_url": "https://api.github.com/users/XAMPPRocky/orgs", "repos_url": "https://api.github.com/users/XAMPPRocky/repos", "events_url": "https://api.github.com/users/XAMPPRocky/events{/privacy}", "received_events_url": "https://api.github.com/users/XAMPPRocky/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9d0ae58d30523198dec60a9cd840c30c2bd9c4c0", "url": "https://api.github.com/repos/rust-lang/rust/commits/9d0ae58d30523198dec60a9cd840c30c2bd9c4c0", "html_url": "https://github.com/rust-lang/rust/commit/9d0ae58d30523198dec60a9cd840c30c2bd9c4c0"}], "stats": {"total": 119, "additions": 119, "deletions": 0}, "files": [{"sha": "44f3390f4df3390ad6c4f707d4e13299047191cc", "filename": "RELEASES.md", "status": "modified", "additions": 119, "deletions": 0, "changes": 119, "blob_url": "https://github.com/rust-lang/rust/blob/d74c17ba0c0a60f484dd35c6edb5093bfeeda508/RELEASES.md", "raw_url": "https://github.com/rust-lang/rust/raw/d74c17ba0c0a60f484dd35c6edb5093bfeeda508/RELEASES.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/RELEASES.md?ref=d74c17ba0c0a60f484dd35c6edb5093bfeeda508", "patch": "@@ -1,3 +1,122 @@\n+Version 1.43.0 (2020-04-23)\n+==========================\n+\n+Language\n+--------\n+- [Fixed using binary operations with `&{number}` (e.g. `&1.0`) not having\n+  the correctly inferred type.][68129]\n+\n+**Syntax only changes**\n+- [Allow `type Foo: Ord` syntactically.][69361]\n+- [Unify item parsing & filter illegal item kinds.][69366]\n+- [Fuse associated and extern items up to defaultness.][69194]\n+- [Permit attributes on `if` expressions.][69201]\n+- [Syntactically allow `self` in all `fn` contexts.][68764]\n+- [Merge `fn` syntax + cleanup item parsing.][68728]\n+\n+These are still rejected *semantically*, so you will likely receive an error but\n+these changes can be seen and parsed by procedural macros and\n+conditional compilation.\n+\n+\n+Compiler\n+--------\n+- [You can now pass multiple lint flags to rustc to override the previous\n+  flags.][67885] For example; `rustc -D unused -A unused-variables` denies\n+  everything in the `unused` lint group unused except `unused-variables` which\n+  is explicitly allowed. Passing `rustc -A unused-variables -D unused` denies\n+  everything in the `unused` lint group **including** `unused-variables` since\n+  the allow flag is specified before the deny flag (and therefore overridden).\n+- [rustc will now prefer your system MinGW libraries over its bundled libraries\n+  if they are available on `windows-gnu`.][67429]\n+- [rustc now buffers errors/warnings printed in JSON.][69227]\n+\n+Libraries\n+---------\n+- [`Arc<[T; N]>`, `Box<[T; N]>`, and `Rc<[T; N]>`, now implement\n+  `TryFrom<Arc<[T]>>`,`TryFrom<Box<[T]>>`, and `TryFrom<Rc<[T]>>`\n+  respectively.][69538] Where `N` is `0..=32`.\n+- [All `to_be_bytes`, `to_le_bytes`, `to_ne_bytes`, `from_be_bytes`,\n+  `from_le_bytes`, and `from_ne_bytes` methods for integers are\n+  now `const`.][69373]\n+- [You can now use associated constants on floats and integers directly, rather\n+  than having to import the module.][68952] e.g. You can now write `u32::MAX` or\n+  `f32::NAN` no imports.\n+- [`u8::is_ascii` is now `const`.][68984]\n+- [`String` now implements `AsMut<str>`.][68742]\n+- [Added the `primitive` module to `std` and `core`.][67637] This module\n+  reexports Rust's primitive types. This is mainly useful for use in macros\n+  where you want avoid these types being shadowed.\n+- [The some of the trait bounds on `HashMap` and `HashSet`.][67642]\n+- [`string::FromUtf8Error` now implements `Clone + Eq`.][68738]\n+\n+Stabilized APIs\n+---------------\n+- [`Once::is_completed`]\n+- [`f32::LOG10_2`]\n+- [`f32::LOG2_10`]\n+- [`f64::LOG10_2`]\n+- [`f64::LOG2_10`]\n+- [`iter::once_with`]\n+\n+Misc\n+----\n+- [Certain checks in the `const_err` lint were deemed unrelated to const\n+  evaluation][69185], and have been moved to the `unconditional_panic` and\n+  `arithmetic_overflow` lints.\n+\n+Internal Only\n+-------------\n+These changes provide no direct user facing benefits, but represent significant\n+improvements to the internals and overall performance of `rustc` and\n+related tools.\n+\n+- [All components are now built with `opt-level=3` instead of `2`.][67878]\n+- [Improved how rustc generates drop code.][67332]\n+- [Improved performance from `#[inline]`-ing certain hot functions.][69256]\n+- [traits: preallocate 2 Vecs of known initial size][69022]\n+- [Avoid exponential behaviour when relating types][68772]\n+- [Skip `Drop` terminators for enum variants without drop glue][68943]\n+- [Improve performance of coherence checks][68966]\n+- [Deduplicate types in the generator witness][68672]\n+- [Invert control in struct_lint_level.][68725]\n+\n+[67332]: https://github.com/rust-lang/rust/pull/67332/\n+[67429]: https://github.com/rust-lang/rust/pull/67429/\n+[67637]: https://github.com/rust-lang/rust/pull/67637/\n+[67642]: https://github.com/rust-lang/rust/pull/67642/\n+[67878]: https://github.com/rust-lang/rust/pull/67878/\n+[67885]: https://github.com/rust-lang/rust/pull/67885/\n+[68129]: https://github.com/rust-lang/rust/pull/68129/\n+[68672]: https://github.com/rust-lang/rust/pull/68672/\n+[68725]: https://github.com/rust-lang/rust/pull/68725/\n+[68728]: https://github.com/rust-lang/rust/pull/68728/\n+[68738]: https://github.com/rust-lang/rust/pull/68738/\n+[68742]: https://github.com/rust-lang/rust/pull/68742/\n+[68764]: https://github.com/rust-lang/rust/pull/68764/\n+[68772]: https://github.com/rust-lang/rust/pull/68772/\n+[68943]: https://github.com/rust-lang/rust/pull/68943/\n+[68952]: https://github.com/rust-lang/rust/pull/68952/\n+[68966]: https://github.com/rust-lang/rust/pull/68966/\n+[68984]: https://github.com/rust-lang/rust/pull/68984/\n+[69022]: https://github.com/rust-lang/rust/pull/69022/\n+[69185]: https://github.com/rust-lang/rust/pull/69185/\n+[69194]: https://github.com/rust-lang/rust/pull/69194/\n+[69201]: https://github.com/rust-lang/rust/pull/69201/\n+[69227]: https://github.com/rust-lang/rust/pull/69227/\n+[69256]: https://github.com/rust-lang/rust/pull/69256/\n+[69361]: https://github.com/rust-lang/rust/pull/69361/\n+[69366]: https://github.com/rust-lang/rust/pull/69366/\n+[69373]: https://github.com/rust-lang/rust/pull/69373/\n+[69538]: https://github.com/rust-lang/rust/pull/69538/\n+[`Once::is_completed`]: https://doc.rust-lang.org/std/sync/struct.Once.html#method.is_completed\n+[`f32::LOG10_2`]: https://doc.rust-lang.org/std/f32/consts/constant.LOG10_2.html\n+[`f32::LOG2_10`]: https://doc.rust-lang.org/std/f32/consts/constant.LOG2_10.html\n+[`f64::LOG10_2`]: https://doc.rust-lang.org/std/f64/consts/constant.LOG10_2.html\n+[`f64::LOG2_10`]: https://doc.rust-lang.org/std/f64/consts/constant.LOG2_10.html\n+[`iter::once_with`]: https://doc.rust-lang.org/std/iter/fn.once_with.html\n+\n+\n Version 1.42.0 (2020-03-12)\n ==========================\n "}]}