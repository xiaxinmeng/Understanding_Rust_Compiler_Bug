{"sha": "1484f9cd46013a227d1d057508ff57ebc5930a8d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE0ODRmOWNkNDYwMTNhMjI3ZDFkMDU3NTA4ZmY1N2ViYzU5MzBhOGQ=", "commit": {"author": {"name": "Jakub Bukaj", "email": "jakub@jakub.cc", "date": "2014-10-21T01:40:15Z"}, "committer": {"name": "Jakub Bukaj", "email": "jakub@jakub.cc", "date": "2014-10-24T17:43:47Z"}, "message": "Update tests with the new error messages", "tree": {"sha": "339c2cd603ab76074235fb4e7f41f1bd2cf088b4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/339c2cd603ab76074235fb4e7f41f1bd2cf088b4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1484f9cd46013a227d1d057508ff57ebc5930a8d", "comment_count": 5, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1484f9cd46013a227d1d057508ff57ebc5930a8d", "html_url": "https://github.com/rust-lang/rust/commit/1484f9cd46013a227d1d057508ff57ebc5930a8d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1484f9cd46013a227d1d057508ff57ebc5930a8d/comments", "author": null, "committer": null, "parents": [{"sha": "4380e96c0470d746267a11633fafe3e4ea459687", "url": "https://api.github.com/repos/rust-lang/rust/commits/4380e96c0470d746267a11633fafe3e4ea459687", "html_url": "https://github.com/rust-lang/rust/commit/4380e96c0470d746267a11633fafe3e4ea459687"}], "stats": {"total": 85, "additions": 56, "deletions": 29}, "files": [{"sha": "a2a5a3e257f29e5c27443f94270608d0818c7d96", "filename": "src/test/compile-fail/destructure-trait-ref.rs", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/1484f9cd46013a227d1d057508ff57ebc5930a8d/src%2Ftest%2Fcompile-fail%2Fdestructure-trait-ref.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1484f9cd46013a227d1d057508ff57ebc5930a8d/src%2Ftest%2Fcompile-fail%2Fdestructure-trait-ref.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fdestructure-trait-ref.rs?ref=1484f9cd46013a227d1d057508ff57ebc5930a8d", "patch": "@@ -30,12 +30,12 @@ fn main() {\n     let &&x = &&(&1i as &T);\n \n     // n == m\n-    let &x = &1i as &T;      //~ ERROR cannot be dereferenced\n-    let &&x = &(&1i as &T);  //~ ERROR cannot be dereferenced\n-    let box x = box 1i as Box<T>; //~ ERROR cannot be dereferenced\n+    let &x = &1i as &T;      //~ ERROR type `&T` cannot be dereferenced\n+    let &&x = &(&1i as &T);  //~ ERROR type `&T` cannot be dereferenced\n+    let box x = box 1i as Box<T>; //~ ERROR type `Box<T>` cannot be dereferenced\n \n     // n > m\n-    let &&x = &1i as &T;     //~ ERROR found an `&`-pointer pattern\n-    let &&&x = &(&1i as &T); //~ ERROR found an `&`-pointer pattern\n-    let box box x = box 1i as Box<T>;    //~ ERROR found a box pattern\n+    let &&x = &1i as &T;     //~ ERROR found &-ptr\n+    let &&&x = &(&1i as &T); //~ ERROR found &-ptr\n+    let box box x = box 1i as Box<T>;    //~ ERROR found box\n }"}, {"sha": "43c7f45e15a55dc65814926917e9983a18109805", "filename": "src/test/compile-fail/issue-13482.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/1484f9cd46013a227d1d057508ff57ebc5930a8d/src%2Ftest%2Fcompile-fail%2Fissue-13482.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1484f9cd46013a227d1d057508ff57ebc5930a8d/src%2Ftest%2Fcompile-fail%2Fissue-13482.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-13482.rs?ref=1484f9cd46013a227d1d057508ff57ebc5930a8d", "patch": "@@ -12,7 +12,8 @@ fn main() {\n   let x = [1,2];\n   let y = match x {\n     [] => None,\n-//~^ ERROR expected `[<generic integer #0>, ..2]`, found a fixed array pattern of size 0\n+//~^ ERROR mismatched types: expected `[<generic integer #0>, ..2]`, found `[<generic #7>, ..0]`\n+//         (expected array, found array)\n     [a,_] => Some(a)\n   };\n }"}, {"sha": "0c103515981cdfbb66c22e35f7376800e6aa8d20", "filename": "src/test/compile-fail/issue-13624.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/1484f9cd46013a227d1d057508ff57ebc5930a8d/src%2Ftest%2Fcompile-fail%2Fissue-13624.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1484f9cd46013a227d1d057508ff57ebc5930a8d/src%2Ftest%2Fcompile-fail%2Fissue-13624.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-13624.rs?ref=1484f9cd46013a227d1d057508ff57ebc5930a8d", "patch": "@@ -29,7 +29,8 @@ mod b {\n       let enum_struct_variant = ::a::get_enum_struct_variant();\n       match enum_struct_variant {\n         a::EnumStructVariant { x, y, z } => {\n-        //~^ ERROR error: mismatched types: expected `()`, found a structure pattern\n+        //~^ ERROR mismatched types: expected `()`, found `a::Enum`\n+        //         (expected (), found enum a::Enum)\n         }\n       }\n     }"}, {"sha": "ac49f8b99cf2d7b399d839ede01e8fa67d690439", "filename": "src/test/compile-fail/issue-14541.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/1484f9cd46013a227d1d057508ff57ebc5930a8d/src%2Ftest%2Fcompile-fail%2Fissue-14541.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1484f9cd46013a227d1d057508ff57ebc5930a8d/src%2Ftest%2Fcompile-fail%2Fissue-14541.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-14541.rs?ref=1484f9cd46013a227d1d057508ff57ebc5930a8d", "patch": "@@ -13,8 +13,8 @@ struct vec3 { y: f32, z: f32 }\n \n fn make(v: vec2) {\n     let vec3 { y: _, z: _ } = v;\n-    //~^ ERROR `vec3` does not name the structure `vec2`\n-    //~^^ ERROR struct `vec2` does not have a field named `z`\n+    //~^ ERROR mismatched types: expected `vec2`, found `vec3`\n+    //         (expected struct vec2, found struct vec3)\n }\n \n fn main() { }"}, {"sha": "e3d19729710afdfa9480697e7a66240f1743a1e9", "filename": "src/test/compile-fail/issue-15260.rs", "status": "modified", "additions": 17, "deletions": 5, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/1484f9cd46013a227d1d057508ff57ebc5930a8d/src%2Ftest%2Fcompile-fail%2Fissue-15260.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1484f9cd46013a227d1d057508ff57ebc5930a8d/src%2Ftest%2Fcompile-fail%2Fissue-15260.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-15260.rs?ref=1484f9cd46013a227d1d057508ff57ebc5930a8d", "patch": "@@ -9,11 +9,23 @@\n // except according to those terms.\n \n struct Foo {\n-  a: uint,\n+    a: uint,\n }\n \n-fn main(){\n-    let Foo {a: _, a: _} = Foo {a: 29};\n-    //~^ ERROR field `a` bound twice in pattern\n-}\n+fn main() {\n+    let Foo {\n+        a: _, //~ NOTE field `a` previously bound here\n+        a: _ //~ ERROR field `a` bound multiple times in the pattern\n+    } = Foo { a: 29 };\n+\n+    let Foo {\n+        a, //~ NOTE field `a` previously bound here\n+        a: _ //~ ERROR field `a` bound multiple times in the pattern\n+    } = Foo { a: 29 };\n \n+    let Foo {\n+        a, //~ NOTE field `a` previously bound here\n+        a: _, //~ ERROR field `a` bound multiple times in the pattern\n+        a: x //~ ERROR field `a` bound multiple times in the pattern\n+    } = Foo { a: 29 };\n+}"}, {"sha": "5d92208d3e3fb8e2d332d566697acdaf6a3eb1fc", "filename": "src/test/compile-fail/issue-15896.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/1484f9cd46013a227d1d057508ff57ebc5930a8d/src%2Ftest%2Fcompile-fail%2Fissue-15896.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1484f9cd46013a227d1d057508ff57ebc5930a8d/src%2Ftest%2Fcompile-fail%2Fissue-15896.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-15896.rs?ref=1484f9cd46013a227d1d057508ff57ebc5930a8d", "patch": "@@ -18,7 +18,9 @@ fn main() {\n     let e = B(REB(()), Tau { t: 3 });\n     let u = match e {\n         B(\n-          Tau{t: x}, //~ ERROR `Tau` does not name a variant\n+          Tau{t: x},\n+          //~^ ERROR mismatched types: expected `main::R`, found `main::Tau`\n+          //        (expected enum main::R, found struct main::Tau)\n           _) => x,\n     };\n }"}, {"sha": "537fc5aaa5503e30114b6ecdeec98824452dfdc3", "filename": "src/test/compile-fail/issue-16338.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/1484f9cd46013a227d1d057508ff57ebc5930a8d/src%2Ftest%2Fcompile-fail%2Fissue-16338.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1484f9cd46013a227d1d057508ff57ebc5930a8d/src%2Ftest%2Fcompile-fail%2Fissue-16338.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-16338.rs?ref=1484f9cd46013a227d1d057508ff57ebc5930a8d", "patch": "@@ -12,6 +12,7 @@ use std::raw::Slice;\n \n fn main() {\n     let Slice { data: data, len: len } = \"foo\";\n-    //~^ ERROR mismatched types: expected `&str`, found a structure pattern\n+    //~^ ERROR mismatched types: expected `&str`, found `core::raw::Slice<<generic #3>>`\n+    //         (expected &-ptr, found struct core::raw::Slice)\n }\n "}, {"sha": "deb2f5912b652f0f53e285a0223f82ac829c4547", "filename": "src/test/compile-fail/issue-16401.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/1484f9cd46013a227d1d057508ff57ebc5930a8d/src%2Ftest%2Fcompile-fail%2Fissue-16401.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1484f9cd46013a227d1d057508ff57ebc5930a8d/src%2Ftest%2Fcompile-fail%2Fissue-16401.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-16401.rs?ref=1484f9cd46013a227d1d057508ff57ebc5930a8d", "patch": "@@ -13,7 +13,8 @@ use std::raw::Slice;\n fn main() {\n     match () {\n         Slice { data: data, len: len } => (),\n-        //~^ ERROR mismatched types: expected `()`, found a structure pattern\n+        //~^ ERROR mismatched types: expected `()`, found `core::raw::Slice<<generic #3>>`\n+        //         (expected (), found struct core::raw::Slice)\n         _ => unreachable!()\n     }\n }"}, {"sha": "b0f2e0b666e3d3fd19165e2215e8bfdcb5448735", "filename": "src/test/compile-fail/issue-17405.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1484f9cd46013a227d1d057508ff57ebc5930a8d/src%2Ftest%2Fcompile-fail%2Fissue-17405.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1484f9cd46013a227d1d057508ff57ebc5930a8d/src%2Ftest%2Fcompile-fail%2Fissue-17405.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-17405.rs?ref=1484f9cd46013a227d1d057508ff57ebc5930a8d", "patch": "@@ -14,6 +14,6 @@ enum Foo {\n \n fn main() {\n     match Bar(1i) {\n-        Foo { i } => () //~ ERROR `Foo` does not name a variant\n+        Foo { i } => () //~ ERROR `Foo` does not name a struct or a struct variant\n     }\n }"}, {"sha": "30a8a51ed8c06e3f6c87f00eff34f4a2a1552963", "filename": "src/test/compile-fail/issue-17800.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1484f9cd46013a227d1d057508ff57ebc5930a8d/src%2Ftest%2Fcompile-fail%2Fissue-17800.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1484f9cd46013a227d1d057508ff57ebc5930a8d/src%2Ftest%2Fcompile-fail%2Fissue-17800.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-17800.rs?ref=1484f9cd46013a227d1d057508ff57ebc5930a8d", "patch": "@@ -15,7 +15,7 @@ enum MyOption<T> {\n \n fn main() {\n     match MySome(42i) {\n-        MySome { x: 42i } => (), //~ ERROR `MySome` does not name a struct variant\n+        MySome { x: 42i } => (), //~ ERROR `MySome` does not name a struct or a struct variant\n         _ => (),\n     }\n }"}, {"sha": "6524056df888b86b4a36fa92a649e963d3d283f2", "filename": "src/test/compile-fail/issue-5100.rs", "status": "modified", "additions": 9, "deletions": 4, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/1484f9cd46013a227d1d057508ff57ebc5930a8d/src%2Ftest%2Fcompile-fail%2Fissue-5100.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1484f9cd46013a227d1d057508ff57ebc5930a8d/src%2Ftest%2Fcompile-fail%2Fissue-5100.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-5100.rs?ref=1484f9cd46013a227d1d057508ff57ebc5930a8d", "patch": "@@ -12,24 +12,29 @@ enum A { B, C }\n \n fn main() {\n     match (true, false) {\n-        B => (), //~ ERROR expected `(bool,bool)`, found an enum or structure pattern\n+        B => (),\n+        //~^ ERROR mismatched types: expected `(bool,bool)`, found `A`\n+        //         (expected tuple, found enum A)\n         _ => ()\n     }\n \n     match (true, false) {\n         (true, false, false) => ()\n-        //~^ ERROR mismatched types: expected `(bool,bool)`, found tuple\n+        //~^ ERROR mismatched types: expected `(bool,bool)`,\n+        //         found `(<generic #7>,<generic #8>,<generic #9>)`\n         //         (expected a tuple with 2 elements, found one with 3 elements)\n     }\n \n     match (true, false) {\n         box (true, false) => ()\n-        //~^ ERROR mismatched types: expected `(bool,bool)`, found a box pattern\n+        //~^ ERROR mismatched types: expected `(bool,bool)`, found `Box<<generic #11>>`\n+        //         (expected tuple, found box)\n     }\n \n     match (true, false) {\n         &(true, false) => ()\n-        //~^ ERROR mismatched types: expected `(bool,bool)`, found an `&`-pointer pattern\n+        //~^ ERROR mismatched types: expected `(bool,bool)`, found `&<generic #15>`\n+        //         (expected tuple, found &-ptr)\n     }\n \n "}, {"sha": "cc7e8052920b29f4b68f3cfd0452dbccf6be7e69", "filename": "src/test/compile-fail/issue-7092.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/1484f9cd46013a227d1d057508ff57ebc5930a8d/src%2Ftest%2Fcompile-fail%2Fissue-7092.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1484f9cd46013a227d1d057508ff57ebc5930a8d/src%2Ftest%2Fcompile-fail%2Fissue-7092.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-7092.rs?ref=1484f9cd46013a227d1d057508ff57ebc5930a8d", "patch": "@@ -13,8 +13,9 @@ enum Whatever {\n \n fn foo(x: Whatever) {\n     match x {\n-        Some(field) => field.access(),\n-        //~^ ERROR: mismatched types: expected `Whatever`, found\n+        Some(field) =>\n+//~^ ERROR: mismatched types: expected `Whatever`, found `core::option::Option<<generic #3>>`\n+            field.access(), //~ ERROR the type of this value must be known in this context\n     }\n }\n "}, {"sha": "6d37eb8a63645d55b67dd6e3fcc9250c996d313a", "filename": "src/test/compile-fail/match-vec-mismatch-2.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/1484f9cd46013a227d1d057508ff57ebc5930a8d/src%2Ftest%2Fcompile-fail%2Fmatch-vec-mismatch-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1484f9cd46013a227d1d057508ff57ebc5930a8d/src%2Ftest%2Fcompile-fail%2Fmatch-vec-mismatch-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fmatch-vec-mismatch-2.rs?ref=1484f9cd46013a227d1d057508ff57ebc5930a8d", "patch": "@@ -10,6 +10,7 @@\n \n fn main() {\n     match () {\n-        [()] => { } //~ ERROR mismatched types: expected `()`, found an array pattern\n+        [()] => { }\n+//~^ ERROR mismatched types: expected `()`, found `&[<generic #1>]` (expected (), found &-ptr)\n     }\n }"}, {"sha": "f438f9973cf117b2af6c1b25f0f47e5531a26d6f", "filename": "src/test/compile-fail/pattern-error-continue.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/1484f9cd46013a227d1d057508ff57ebc5930a8d/src%2Ftest%2Fcompile-fail%2Fpattern-error-continue.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1484f9cd46013a227d1d057508ff57ebc5930a8d/src%2Ftest%2Fcompile-fail%2Fpattern-error-continue.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fpattern-error-continue.rs?ref=1484f9cd46013a227d1d057508ff57ebc5930a8d", "patch": "@@ -29,7 +29,8 @@ fn main() {\n         _ => ()\n     }\n     match 'c' {\n-        S { .. } => (),   //~ ERROR mismatched types: expected `char`, found a structure pattern\n+        S { .. } => (),\n+        //~^ ERROR mismatched types: expected `char`, found `S` (expected char, found struct S)\n \n         _ => ()\n     }"}, {"sha": "54d6fa5bdd39554b751ddb61c98cc735020e4a82", "filename": "src/test/compile-fail/suppressed-error.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/1484f9cd46013a227d1d057508ff57ebc5930a8d/src%2Ftest%2Fcompile-fail%2Fsuppressed-error.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1484f9cd46013a227d1d057508ff57ebc5930a8d/src%2Ftest%2Fcompile-fail%2Fsuppressed-error.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fsuppressed-error.rs?ref=1484f9cd46013a227d1d057508ff57ebc5930a8d", "patch": "@@ -9,6 +9,7 @@\n // except according to those terms.\n \n fn main() {\n-    let (x, y) = (); //~ ERROR expected `()`, found tuple (types differ)\n+    let (x, y) = ();\n+//~^ ERROR types: expected `()`, found `(<generic #3>,<generic #4>)` (expected (), found tuple)\n     return x;\n }"}]}