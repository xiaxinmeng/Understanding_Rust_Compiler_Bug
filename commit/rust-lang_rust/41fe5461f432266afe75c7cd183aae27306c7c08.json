{"sha": "41fe5461f432266afe75c7cd183aae27306c7c08", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQxZmU1NDYxZjQzMjI2NmFmZTc1YzdjZDE4M2FhZTI3MzA2YzdjMDg=", "commit": {"author": {"name": "Jason Newcomb", "email": "jsnewcomb@pm.me", "date": "2021-09-20T16:50:59Z"}, "committer": {"name": "Jason Newcomb", "email": "jsnewcomb@pm.me", "date": "2021-09-20T16:50:59Z"}, "message": "Retry on some download errors in lintcheck", "tree": {"sha": "396f3788d463fd37be4013a1b1f9fe862c8e683d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/396f3788d463fd37be4013a1b1f9fe862c8e683d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/41fe5461f432266afe75c7cd183aae27306c7c08", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\nComment: Created with Krypton\n\niF4EABYKAAYFAmFIvB0ACgkQ2lnoZDo37QbcLwEAwyJEDdqs4ovw/kzSCRi/FwAD\nIM5YYi2P+ktq9GRhcqQA/0kBj7H+iBZyEdTwy5L/Vcyl+AVFQQt+g9w1d/8sYfcD\n=JRzK\n-----END PGP SIGNATURE-----", "payload": "tree 396f3788d463fd37be4013a1b1f9fe862c8e683d\nparent 871ad80bb02af6d8fbf3f5c7291916b817c75168\nauthor Jason Newcomb <jsnewcomb@pm.me> 1632156659 -0400\ncommitter Jason Newcomb <jsnewcomb@pm.me> 1632156659 -0400\n\nRetry on some download errors in lintcheck\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/41fe5461f432266afe75c7cd183aae27306c7c08", "html_url": "https://github.com/rust-lang/rust/commit/41fe5461f432266afe75c7cd183aae27306c7c08", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/41fe5461f432266afe75c7cd183aae27306c7c08/comments", "author": {"login": "Jarcho", "id": 7761774, "node_id": "MDQ6VXNlcjc3NjE3NzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/7761774?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Jarcho", "html_url": "https://github.com/Jarcho", "followers_url": "https://api.github.com/users/Jarcho/followers", "following_url": "https://api.github.com/users/Jarcho/following{/other_user}", "gists_url": "https://api.github.com/users/Jarcho/gists{/gist_id}", "starred_url": "https://api.github.com/users/Jarcho/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Jarcho/subscriptions", "organizations_url": "https://api.github.com/users/Jarcho/orgs", "repos_url": "https://api.github.com/users/Jarcho/repos", "events_url": "https://api.github.com/users/Jarcho/events{/privacy}", "received_events_url": "https://api.github.com/users/Jarcho/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Jarcho", "id": 7761774, "node_id": "MDQ6VXNlcjc3NjE3NzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/7761774?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Jarcho", "html_url": "https://github.com/Jarcho", "followers_url": "https://api.github.com/users/Jarcho/followers", "following_url": "https://api.github.com/users/Jarcho/following{/other_user}", "gists_url": "https://api.github.com/users/Jarcho/gists{/gist_id}", "starred_url": "https://api.github.com/users/Jarcho/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Jarcho/subscriptions", "organizations_url": "https://api.github.com/users/Jarcho/orgs", "repos_url": "https://api.github.com/users/Jarcho/repos", "events_url": "https://api.github.com/users/Jarcho/events{/privacy}", "received_events_url": "https://api.github.com/users/Jarcho/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "871ad80bb02af6d8fbf3f5c7291916b817c75168", "url": "https://api.github.com/repos/rust-lang/rust/commits/871ad80bb02af6d8fbf3f5c7291916b817c75168", "html_url": "https://github.com/rust-lang/rust/commit/871ad80bb02af6d8fbf3f5c7291916b817c75168"}], "stats": {"total": 20, "additions": 19, "deletions": 1}, "files": [{"sha": "97d3794fb84f0a951de6acd2e8a0e3eced02d357", "filename": "lintcheck/src/main.rs", "status": "modified", "additions": 19, "deletions": 1, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/41fe5461f432266afe75c7cd183aae27306c7c08/lintcheck%2Fsrc%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/41fe5461f432266afe75c7cd183aae27306c7c08/lintcheck%2Fsrc%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/lintcheck%2Fsrc%2Fmain.rs?ref=41fe5461f432266afe75c7cd183aae27306c7c08", "patch": "@@ -15,6 +15,8 @@ use std::{\n     env, fmt,\n     fs::write,\n     path::{Path, PathBuf},\n+    thread,\n+    time::Duration,\n };\n \n use clap::{App, Arg, ArgMatches};\n@@ -109,6 +111,22 @@ impl std::fmt::Display for ClippyWarning {\n     }\n }\n \n+fn get(path: &str) -> Result<ureq::Response, ureq::Error> {\n+    const MAX_RETRIES: u8 = 4;\n+    let mut retries = 0;\n+    loop {\n+        match ureq::get(path).call() {\n+            Ok(res) => return Ok(res),\n+            Err(e) if retries >= MAX_RETRIES => return Err(e),\n+            Err(ureq::Error::Transport(e)) => eprintln!(\"Error: {}\", e),\n+            Err(e) => return Err(e),\n+        }\n+        eprintln!(\"retrying in {} seconds...\", retries);\n+        thread::sleep(Duration::from_secs(retries as u64));\n+        retries += 1;\n+    }\n+}\n+\n impl CrateSource {\n     /// Makes the sources available on the disk for clippy to check.\n     /// Clones a git repo and checks out the specified commit or downloads a crate from crates.io or\n@@ -129,7 +147,7 @@ impl CrateSource {\n                 if !krate_file_path.is_file() {\n                     // create a file path to download and write the crate data into\n                     let mut krate_dest = std::fs::File::create(&krate_file_path).unwrap();\n-                    let mut krate_req = ureq::get(&url).call().unwrap().into_reader();\n+                    let mut krate_req = get(&url).unwrap().into_reader();\n                     // copy the crate into the file\n                     std::io::copy(&mut krate_req, &mut krate_dest).unwrap();\n "}]}