{"sha": "33dcc895c1f87306eebea1033fcf843ce3d1a58c", "node_id": "MDY6Q29tbWl0NzI0NzEyOjMzZGNjODk1YzFmODczMDZlZWJlYTEwMzNmY2Y4NDNjZTNkMWE1OGM=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2021-07-28T12:07:25Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-07-28T12:07:25Z"}, "message": "Merge #9700\n\n9700: fix: Remove the legacy macro scoping hack r=matklad a=jonas-schievink\n\nThis stops prepending `self::` to single-ident macro paths, resolving even legacy-scoped macros using the fixed-point algorithm. This is not correct, but a lot easier than fixing this properly (which involves pushing a new scope for every macro definition and invocation).\r\n\r\nThis allows resolution of macros from the prelude, fixing https://github.com/rust-analyzer/rust-analyzer/issues/9687.\n\nCo-authored-by: Jonas Schievink <jonasschievink@gmail.com>", "tree": {"sha": "7b4f4dd060f81e644690e3e5035ce272ce1e1ede", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7b4f4dd060f81e644690e3e5035ce272ce1e1ede"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/33dcc895c1f87306eebea1033fcf843ce3d1a58c", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJhAUh9CRBK7hj4Ov3rIwAAUHAIAGQexXITGXRppmLj3Li9yBqL\njQV7Rqe5ABXCYOPYywGjqCeY0c4LXtj1bT1g4c1oDy6/KfHS04lG9dSSwG+i6d/J\nf9OixxD8+us6O0sz4e04ltrYA0tEiS8y+WgLRZkMWcUrq6Dl90kSBR/s8fxeBjCW\n0o0EaROWzpLOXj+l+WWGiUWiWmPA6gIuqqthqxIqUUAOFASLAEHu314Dbnl3bkM7\njlWzekNzBJI+nwdrpQHHnI4FkQtZ6swsYAl405E086PhbTlLVUXR5EAwuUrhCOKr\ny6I+VWyXCiF1LNtRwOrC/NxAYZU6xnDq4xfSYuLBX8icaqtofb22/gl7EgXadHg=\n=RgLa\n-----END PGP SIGNATURE-----\n", "payload": "tree 7b4f4dd060f81e644690e3e5035ce272ce1e1ede\nparent 068ede0991ae79f2ffcfd83fb70e40af1eee12ef\nparent 18b6327a2967c552baf6fe8b0189fe66d368f5f9\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1627474045 +0000\ncommitter GitHub <noreply@github.com> 1627474045 +0000\n\nMerge #9700\n\n9700: fix: Remove the legacy macro scoping hack r=matklad a=jonas-schievink\n\nThis stops prepending `self::` to single-ident macro paths, resolving even legacy-scoped macros using the fixed-point algorithm. This is not correct, but a lot easier than fixing this properly (which involves pushing a new scope for every macro definition and invocation).\r\n\r\nThis allows resolution of macros from the prelude, fixing https://github.com/rust-analyzer/rust-analyzer/issues/9687.\n\nCo-authored-by: Jonas Schievink <jonasschievink@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/33dcc895c1f87306eebea1033fcf843ce3d1a58c", "html_url": "https://github.com/rust-lang/rust/commit/33dcc895c1f87306eebea1033fcf843ce3d1a58c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/33dcc895c1f87306eebea1033fcf843ce3d1a58c/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "068ede0991ae79f2ffcfd83fb70e40af1eee12ef", "url": "https://api.github.com/repos/rust-lang/rust/commits/068ede0991ae79f2ffcfd83fb70e40af1eee12ef", "html_url": "https://github.com/rust-lang/rust/commit/068ede0991ae79f2ffcfd83fb70e40af1eee12ef"}, {"sha": "18b6327a2967c552baf6fe8b0189fe66d368f5f9", "url": "https://api.github.com/repos/rust-lang/rust/commits/18b6327a2967c552baf6fe8b0189fe66d368f5f9", "html_url": "https://github.com/rust-lang/rust/commit/18b6327a2967c552baf6fe8b0189fe66d368f5f9"}], "stats": {"total": 36, "additions": 29, "deletions": 7}, "files": [{"sha": "cca51b8167cdc91a969d6942a4497787cb636148", "filename": "crates/hir_def/src/nameres/collector.rs", "status": "modified", "additions": 1, "deletions": 6, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/33dcc895c1f87306eebea1033fcf843ce3d1a58c/crates%2Fhir_def%2Fsrc%2Fnameres%2Fcollector.rs", "raw_url": "https://github.com/rust-lang/rust/raw/33dcc895c1f87306eebea1033fcf843ce3d1a58c/crates%2Fhir_def%2Fsrc%2Fnameres%2Fcollector.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_def%2Fsrc%2Fnameres%2Fcollector.rs?ref=33dcc895c1f87306eebea1033fcf843ce3d1a58c", "patch": "@@ -1890,7 +1890,7 @@ impl ModCollector<'_, '_> {\n     }\n \n     fn collect_macro_call(&mut self, mac: &MacroCall) {\n-        let mut ast_id = AstIdWithPath::new(self.file_id(), mac.ast_id, (*mac.path).clone());\n+        let ast_id = AstIdWithPath::new(self.file_id(), mac.ast_id, (*mac.path).clone());\n \n         // Case 1: try to resolve in legacy scope and expand macro_rules\n         let mut error = None;\n@@ -1941,11 +1941,6 @@ impl ModCollector<'_, '_> {\n         }\n \n         // Case 2: resolve in module scope, expand during name resolution.\n-        // We rewrite simple path `macro_name` to `self::macro_name` to force resolve in module scope only.\n-        if ast_id.path.is_ident() {\n-            ast_id.path.kind = PathKind::Super(0);\n-        }\n-\n         self.def_collector.unresolved_macros.push(MacroDirective {\n             module_id: self.module_id,\n             depth: self.macro_depth + 1,"}, {"sha": "45448ba81b347c6be50dae37859cddb3526e1f9e", "filename": "crates/hir_def/src/nameres/tests/macros.rs", "status": "modified", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/33dcc895c1f87306eebea1033fcf843ce3d1a58c/crates%2Fhir_def%2Fsrc%2Fnameres%2Ftests%2Fmacros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/33dcc895c1f87306eebea1033fcf843ce3d1a58c/crates%2Fhir_def%2Fsrc%2Fnameres%2Ftests%2Fmacros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_def%2Fsrc%2Fnameres%2Ftests%2Fmacros.rs?ref=33dcc895c1f87306eebea1033fcf843ce3d1a58c", "patch": "@@ -349,8 +349,10 @@ macro_rules! m {\n \"#,\n         expect![[r#\"\n             crate\n+            S: t v\n         \"#]],\n     );\n+    // FIXME: should not expand. legacy macro scoping is not implemented.\n }\n \n #[test]\n@@ -427,6 +429,7 @@ macro_rules! baz {\n \"#,\n         expect![[r#\"\n             crate\n+            NotFoundBefore: t v\n             Ok: t v\n             OkAfter: t v\n             OkShadowStop: t v\n@@ -462,6 +465,7 @@ macro_rules! baz {\n             crate::m3::m5\n         \"#]],\n     );\n+    // FIXME: should not see `NotFoundBefore`\n }\n \n #[test]\n@@ -994,3 +998,26 @@ structs!(Foo);\n         \"#]],\n     );\n }\n+\n+#[test]\n+fn macro_in_prelude() {\n+    check(\n+        r#\"\n+//- /lib.rs crate:lib deps:std\n+global_asm!();\n+\n+//- /std.rs crate:std\n+pub mod prelude {\n+    pub mod rust_2018 {\n+        pub macro global_asm() {\n+            pub struct S;\n+        }\n+    }\n+}\n+        \"#,\n+        expect![[r#\"\n+            crate\n+            S: t v\n+        \"#]],\n+    )\n+}"}, {"sha": "ea0f35501bcfebbf7f6e282e05e308868573a56a", "filename": "crates/ide_diagnostics/src/handlers/unresolved_macro_call.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/33dcc895c1f87306eebea1033fcf843ce3d1a58c/crates%2Fide_diagnostics%2Fsrc%2Fhandlers%2Funresolved_macro_call.rs", "raw_url": "https://github.com/rust-lang/rust/raw/33dcc895c1f87306eebea1033fcf843ce3d1a58c/crates%2Fide_diagnostics%2Fsrc%2Fhandlers%2Funresolved_macro_call.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_diagnostics%2Fsrc%2Fhandlers%2Funresolved_macro_call.rs?ref=33dcc895c1f87306eebea1033fcf843ce3d1a58c", "patch": "@@ -63,7 +63,7 @@ foo::bar!(92);\n macro_rules! m { () => {} }\n \n m!(); m2!();\n-    //^^ error: unresolved macro `self::m2!`\n+    //^^ error: unresolved macro `m2!`\n \"#,\n         );\n     }"}]}