{"sha": "dd05d12055ac4ce93cdafec87d3507a4259cfa44", "node_id": "C_kwDOAAsO6NoAKGRkMDVkMTIwNTVhYzRjZTkzY2RhZmVjODdkMzUwN2E0MjU5Y2ZhNDQ", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2022-02-05T11:54:07Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-02-05T11:54:07Z"}, "message": "Merge #11412\n\n11412: fix: Include `fn`/`type`/`const` keyword in trait impl completion item source ranges r=Veykril a=The0x539\n\nFixes #11301\r\n\r\nIf the user has typed, say, `fn de` while implementing `Default`, or `type Ta` when implementing `Deref`, then the resulting completion suggestion will replace the entire \"line\", which, on its own, is fine.\r\nHowever, the use of `ctx.source_range()` in this code was meant that `source_range` field of the `CompletionItem` covers only the identifier and not the preceding keyword.\r\n\r\nOver in `rust_analyzer::to_proto::completion_item`, this caused the LSP completion response to be broken up into a text edit that replaces `de` with `fn default() -> Self {` and then an entry in `additional_text_edits` to remove the extra `fn`.\r\nI'm pretty sure that using the field like that is (slightly) out of [spec](https://microsoft.github.io/language-server-protocol/specifications/specification-3-17/#completionItem):\r\n> Edits must not overlap [...] with the main edit\r\n> Additional text edits should be used to change text **unrelated to the current cursor position**\r\n\r\nVS Code supports `additionalTextEdits` in such a way that this doesn't seem like a problem, so has gone largely unnoticed.\r\nThe various LSP clients I've tried, however, do not, and as a result this bug has been haunting me for ages.\n\nCo-authored-by: The0x539 <the0x539@gmail.com>", "tree": {"sha": "fd078e46ff51646e91edfe10cf2bf56b2e200cf7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fd078e46ff51646e91edfe10cf2bf56b2e200cf7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/dd05d12055ac4ce93cdafec87d3507a4259cfa44", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJh/mVfCRBK7hj4Ov3rIwAATpMIAFv6vZxEEfbR+pfOf2BX6xQ9\neV9Aen33hLcV1M1XuPq9iB9c1otAySJVfUtIh9PozutGRcYDudmFRG6SbNinBqPk\nRH5E8YH31Q/s1ifA4aTguKl3Gpogz8mJ8DlmFCgikQ5f6QlD+7Y29tmILyGBmz56\nJiEVf4kq7NLOvRpiVx/mSBopYbKoDzIm3KuhbvOKxpxLciWlO6Z8L0BVhc97ws/d\nogm/BsvkTIZaBC2LHBYVYU2P/DFLR7ydLf1a00FSE06cIEoys3zfUCJolOTpzkY6\nCEBRiRCMhu9vlLMxL09rU/QYdMzs1ZMdjWipIM7knofeCjX7wc28KtbN4JYZVd8=\n=dbvJ\n-----END PGP SIGNATURE-----\n", "payload": "tree fd078e46ff51646e91edfe10cf2bf56b2e200cf7\nparent 0feafe8185f23f2b03f1e00b4cd09871f8855adb\nparent 1536fc040ab83089afdbd9c1d94d277406ae1656\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1644062047 +0000\ncommitter GitHub <noreply@github.com> 1644062047 +0000\n\nMerge #11412\n\n11412: fix: Include `fn`/`type`/`const` keyword in trait impl completion item source ranges r=Veykril a=The0x539\n\nFixes #11301\r\n\r\nIf the user has typed, say, `fn de` while implementing `Default`, or `type Ta` when implementing `Deref`, then the resulting completion suggestion will replace the entire \"line\", which, on its own, is fine.\r\nHowever, the use of `ctx.source_range()` in this code was meant that `source_range` field of the `CompletionItem` covers only the identifier and not the preceding keyword.\r\n\r\nOver in `rust_analyzer::to_proto::completion_item`, this caused the LSP completion response to be broken up into a text edit that replaces `de` with `fn default() -> Self {` and then an entry in `additional_text_edits` to remove the extra `fn`.\r\nI'm pretty sure that using the field like that is (slightly) out of [spec](https://microsoft.github.io/language-server-protocol/specifications/specification-3-17/#completionItem):\r\n> Edits must not overlap [...] with the main edit\r\n> Additional text edits should be used to change text **unrelated to the current cursor position**\r\n\r\nVS Code supports `additionalTextEdits` in such a way that this doesn't seem like a problem, so has gone largely unnoticed.\r\nThe various LSP clients I've tried, however, do not, and as a result this bug has been haunting me for ages.\n\nCo-authored-by: The0x539 <the0x539@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/dd05d12055ac4ce93cdafec87d3507a4259cfa44", "html_url": "https://github.com/rust-lang/rust/commit/dd05d12055ac4ce93cdafec87d3507a4259cfa44", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/dd05d12055ac4ce93cdafec87d3507a4259cfa44/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0feafe8185f23f2b03f1e00b4cd09871f8855adb", "url": "https://api.github.com/repos/rust-lang/rust/commits/0feafe8185f23f2b03f1e00b4cd09871f8855adb", "html_url": "https://github.com/rust-lang/rust/commit/0feafe8185f23f2b03f1e00b4cd09871f8855adb"}, {"sha": "1536fc040ab83089afdbd9c1d94d277406ae1656", "url": "https://api.github.com/repos/rust-lang/rust/commits/1536fc040ab83089afdbd9c1d94d277406ae1656", "html_url": "https://github.com/rust-lang/rust/commit/1536fc040ab83089afdbd9c1d94d277406ae1656"}], "stats": {"total": 8, "additions": 4, "deletions": 4}, "files": [{"sha": "4b1de8058de0fb8179bf25b5e8d33fe7a6618845", "filename": "crates/ide_completion/src/completions/trait_impl.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/dd05d12055ac4ce93cdafec87d3507a4259cfa44/crates%2Fide_completion%2Fsrc%2Fcompletions%2Ftrait_impl.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dd05d12055ac4ce93cdafec87d3507a4259cfa44/crates%2Fide_completion%2Fsrc%2Fcompletions%2Ftrait_impl.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_completion%2Fsrc%2Fcompletions%2Ftrait_impl.rs?ref=dd05d12055ac4ce93cdafec87d3507a4259cfa44", "patch": "@@ -145,10 +145,10 @@ fn add_function_impl(\n     } else {\n         CompletionItemKind::SymbolKind(SymbolKind::Function)\n     };\n-    let mut item = CompletionItem::new(completion_kind, ctx.source_range(), label);\n-    item.lookup_by(fn_name).set_documentation(func.docs(ctx.db));\n \n     let range = replacement_range(ctx, fn_def_node);\n+    let mut item = CompletionItem::new(completion_kind, range, label);\n+    item.lookup_by(fn_name).set_documentation(func.docs(ctx.db));\n \n     if let Some(source) = ctx.sema.source(func) {\n         let assoc_item = ast::AssocItem::Fn(source.value);\n@@ -209,7 +209,7 @@ fn add_type_alias_impl(\n     let snippet = format!(\"type {} = \", alias_name);\n \n     let range = replacement_range(ctx, type_def_node);\n-    let mut item = CompletionItem::new(SymbolKind::TypeAlias, ctx.source_range(), &snippet);\n+    let mut item = CompletionItem::new(SymbolKind::TypeAlias, range, &snippet);\n     item.text_edit(TextEdit::replace(range, snippet))\n         .lookup_by(alias_name)\n         .set_documentation(type_alias.docs(ctx.db));\n@@ -237,7 +237,7 @@ fn add_const_impl(\n                 let snippet = make_const_compl_syntax(&transformed_const);\n \n                 let range = replacement_range(ctx, const_def_node);\n-                let mut item = CompletionItem::new(SymbolKind::Const, ctx.source_range(), &snippet);\n+                let mut item = CompletionItem::new(SymbolKind::Const, range, &snippet);\n                 item.text_edit(TextEdit::replace(range, snippet))\n                     .lookup_by(const_name)\n                     .set_documentation(const_.docs(ctx.db));"}]}