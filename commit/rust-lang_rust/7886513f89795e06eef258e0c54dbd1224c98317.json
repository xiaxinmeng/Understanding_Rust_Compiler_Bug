{"sha": "7886513f89795e06eef258e0c54dbd1224c98317", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc4ODY1MTNmODk3OTVlMDZlZWYyNThlMGM1NGRiZDEyMjRjOTgzMTc=", "commit": {"author": {"name": "Florian Diebold", "email": "flodiebold@gmail.com", "date": "2020-04-10T20:05:31Z"}, "committer": {"name": "Florian Diebold", "email": "flodiebold@gmail.com", "date": "2020-04-13T12:31:03Z"}, "message": "Nicer display of closures in Chalk logs", "tree": {"sha": "d3eb6af5492c49011acf902c23712f346a1039f7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d3eb6af5492c49011acf902c23712f346a1039f7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7886513f89795e06eef258e0c54dbd1224c98317", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7886513f89795e06eef258e0c54dbd1224c98317", "html_url": "https://github.com/rust-lang/rust/commit/7886513f89795e06eef258e0c54dbd1224c98317", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7886513f89795e06eef258e0c54dbd1224c98317/comments", "author": {"login": "flodiebold", "id": 906069, "node_id": "MDQ6VXNlcjkwNjA2OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/906069?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flodiebold", "html_url": "https://github.com/flodiebold", "followers_url": "https://api.github.com/users/flodiebold/followers", "following_url": "https://api.github.com/users/flodiebold/following{/other_user}", "gists_url": "https://api.github.com/users/flodiebold/gists{/gist_id}", "starred_url": "https://api.github.com/users/flodiebold/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flodiebold/subscriptions", "organizations_url": "https://api.github.com/users/flodiebold/orgs", "repos_url": "https://api.github.com/users/flodiebold/repos", "events_url": "https://api.github.com/users/flodiebold/events{/privacy}", "received_events_url": "https://api.github.com/users/flodiebold/received_events", "type": "User", "site_admin": false}, "committer": {"login": "flodiebold", "id": 906069, "node_id": "MDQ6VXNlcjkwNjA2OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/906069?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flodiebold", "html_url": "https://github.com/flodiebold", "followers_url": "https://api.github.com/users/flodiebold/followers", "following_url": "https://api.github.com/users/flodiebold/following{/other_user}", "gists_url": "https://api.github.com/users/flodiebold/gists{/gist_id}", "starred_url": "https://api.github.com/users/flodiebold/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flodiebold/subscriptions", "organizations_url": "https://api.github.com/users/flodiebold/orgs", "repos_url": "https://api.github.com/users/flodiebold/repos", "events_url": "https://api.github.com/users/flodiebold/events{/privacy}", "received_events_url": "https://api.github.com/users/flodiebold/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c388130f5ffbcbe7d3131213a24d12d02f769b87", "url": "https://api.github.com/repos/rust-lang/rust/commits/c388130f5ffbcbe7d3131213a24d12d02f769b87", "html_url": "https://github.com/rust-lang/rust/commit/c388130f5ffbcbe7d3131213a24d12d02f769b87"}], "stats": {"total": 24, "additions": 22, "deletions": 2}, "files": [{"sha": "0a8932dae09cfc171000f92424700bb05fc52433", "filename": "crates/ra_hir_ty/src/traits/chalk/tls.rs", "status": "modified", "additions": 22, "deletions": 2, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/7886513f89795e06eef258e0c54dbd1224c98317/crates%2Fra_hir_ty%2Fsrc%2Ftraits%2Fchalk%2Ftls.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7886513f89795e06eef258e0c54dbd1224c98317/crates%2Fra_hir_ty%2Fsrc%2Ftraits%2Fchalk%2Ftls.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_ty%2Fsrc%2Ftraits%2Fchalk%2Ftls.rs?ref=7886513f89795e06eef258e0c54dbd1224c98317", "patch": "@@ -5,7 +5,7 @@ use chalk_ir::{AliasTy, Goal, Goals, Lifetime, Parameter, ProgramClauseImplicati\n \n use super::{from_chalk, Interner};\n use crate::{db::HirDatabase, CallableDef, TypeCtor};\n-use hir_def::{AdtId, AssocContainerId, Lookup, TypeAliasId};\n+use hir_def::{AdtId, AssocContainerId, DefWithBodyId, Lookup, TypeAliasId};\n \n pub use unsafe_tls::{set_current_program, with_current_program};\n \n@@ -69,7 +69,27 @@ impl DebugContext<'_> {\n                 write!(f, \"{}::{}\", trait_name, name)?;\n             }\n             TypeCtor::Closure { def, expr } => {\n-                write!(f, \"{{closure {:?} in {:?}}}\", expr.into_raw(), def)?;\n+                write!(f, \"{{closure {:?} in \", expr.into_raw())?;\n+                match def {\n+                    DefWithBodyId::FunctionId(func) => {\n+                        write!(f, \"fn {}\", self.0.function_data(func).name)?\n+                    }\n+                    DefWithBodyId::StaticId(s) => {\n+                        if let Some(name) = self.0.static_data(s).name.as_ref() {\n+                            write!(f, \"body of static {}\", name)?;\n+                        } else {\n+                            write!(f, \"body of unnamed static {:?}\", s)?;\n+                        }\n+                    }\n+                    DefWithBodyId::ConstId(c) => {\n+                        if let Some(name) = self.0.const_data(c).name.as_ref() {\n+                            write!(f, \"body of const {}\", name)?;\n+                        } else {\n+                            write!(f, \"body of unnamed const {:?}\", c)?;\n+                        }\n+                    }\n+                };\n+                write!(f, \"}}\")?;\n             }\n         }\n         Ok(())"}]}