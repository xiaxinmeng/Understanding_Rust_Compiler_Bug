{"sha": "1b3c6bac8b91d881b2e8b9cb6ea35a8a13c1f804", "node_id": "MDY6Q29tbWl0NzI0NzEyOjFiM2M2YmFjOGI5MWQ4ODFiMmU4YjljYjZlYTM1YThhMTNjMWY4MDQ=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2018-07-19T10:41:10Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2018-08-01T22:33:03Z"}, "message": "make the code for nth closer to what it used to be", "tree": {"sha": "bb9463337b90b8a6e86f2b832e00cceb910701a9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bb9463337b90b8a6e86f2b832e00cceb910701a9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1b3c6bac8b91d881b2e8b9cb6ea35a8a13c1f804", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1b3c6bac8b91d881b2e8b9cb6ea35a8a13c1f804", "html_url": "https://github.com/rust-lang/rust/commit/1b3c6bac8b91d881b2e8b9cb6ea35a8a13c1f804", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1b3c6bac8b91d881b2e8b9cb6ea35a8a13c1f804/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "60b06369eea523b9d8fe606357177f126bef4b42", "url": "https://api.github.com/repos/rust-lang/rust/commits/60b06369eea523b9d8fe606357177f126bef4b42", "html_url": "https://github.com/rust-lang/rust/commit/60b06369eea523b9d8fe606357177f126bef4b42"}], "stats": {"total": 7, "additions": 4, "deletions": 3}, "files": [{"sha": "ec0f9317578453d9d80ec5a572c9943b8ef010e9", "filename": "src/libcore/slice/mod.rs", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/1b3c6bac8b91d881b2e8b9cb6ea35a8a13c1f804/src%2Flibcore%2Fslice%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1b3c6bac8b91d881b2e8b9cb6ea35a8a13c1f804/src%2Flibcore%2Fslice%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fslice%2Fmod.rs?ref=1b3c6bac8b91d881b2e8b9cb6ea35a8a13c1f804", "patch": "@@ -2382,11 +2382,12 @@ macro_rules! iterator {\n         impl<'a, T> ExactSizeIterator for $name<'a, T> {\n             #[inline(always)]\n             fn len(&self) -> usize {\n+                let diff = (self.end as usize).wrapping_sub(self.ptr as usize);\n                 if mem::size_of::<T>() == 0 {\n-                    // end is really ptr+len\n-                    (self.end as usize).wrapping_sub(self.ptr as usize)\n+                    // end is really ptr+len, so we are already done\n+                    diff\n                 } else {\n-                    unsafe { self.end.offset_from(self.ptr) as usize }\n+                    diff / mem::size_of::<T>()\n                 }\n             }\n "}]}