{"sha": "3e016a7682699ac23e48b4c6571c3d78503abf4d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNlMDE2YTc2ODI2OTlhYzIzZTQ4YjRjNjU3MWMzZDc4NTAzYWJmNGQ=", "commit": {"author": {"name": "Ben-Lichtman", "email": "Ben_Lichtman@icloud.com", "date": "2021-04-29T02:43:33Z"}, "committer": {"name": "Ben-Lichtman", "email": "Ben_Lichtman@icloud.com", "date": "2021-04-29T02:43:33Z"}, "message": "Minor grammar tweaks for readability", "tree": {"sha": "db81c5e28433ce2c685d99c9e31badcaa7f15a00", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/db81c5e28433ce2c685d99c9e31badcaa7f15a00"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3e016a7682699ac23e48b4c6571c3d78503abf4d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3e016a7682699ac23e48b4c6571c3d78503abf4d", "html_url": "https://github.com/rust-lang/rust/commit/3e016a7682699ac23e48b4c6571c3d78503abf4d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3e016a7682699ac23e48b4c6571c3d78503abf4d/comments", "author": {"login": "Ben-Lichtman", "id": 15235153, "node_id": "MDQ6VXNlcjE1MjM1MTUz", "avatar_url": "https://avatars.githubusercontent.com/u/15235153?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Ben-Lichtman", "html_url": "https://github.com/Ben-Lichtman", "followers_url": "https://api.github.com/users/Ben-Lichtman/followers", "following_url": "https://api.github.com/users/Ben-Lichtman/following{/other_user}", "gists_url": "https://api.github.com/users/Ben-Lichtman/gists{/gist_id}", "starred_url": "https://api.github.com/users/Ben-Lichtman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Ben-Lichtman/subscriptions", "organizations_url": "https://api.github.com/users/Ben-Lichtman/orgs", "repos_url": "https://api.github.com/users/Ben-Lichtman/repos", "events_url": "https://api.github.com/users/Ben-Lichtman/events{/privacy}", "received_events_url": "https://api.github.com/users/Ben-Lichtman/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Ben-Lichtman", "id": 15235153, "node_id": "MDQ6VXNlcjE1MjM1MTUz", "avatar_url": "https://avatars.githubusercontent.com/u/15235153?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Ben-Lichtman", "html_url": "https://github.com/Ben-Lichtman", "followers_url": "https://api.github.com/users/Ben-Lichtman/followers", "following_url": "https://api.github.com/users/Ben-Lichtman/following{/other_user}", "gists_url": "https://api.github.com/users/Ben-Lichtman/gists{/gist_id}", "starred_url": "https://api.github.com/users/Ben-Lichtman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Ben-Lichtman/subscriptions", "organizations_url": "https://api.github.com/users/Ben-Lichtman/orgs", "repos_url": "https://api.github.com/users/Ben-Lichtman/repos", "events_url": "https://api.github.com/users/Ben-Lichtman/events{/privacy}", "received_events_url": "https://api.github.com/users/Ben-Lichtman/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "50ca3ac24f08cc6c8bbef9ac27245f83f30bc749", "url": "https://api.github.com/repos/rust-lang/rust/commits/50ca3ac24f08cc6c8bbef9ac27245f83f30bc749", "html_url": "https://github.com/rust-lang/rust/commit/50ca3ac24f08cc6c8bbef9ac27245f83f30bc749"}], "stats": {"total": 8, "additions": 4, "deletions": 4}, "files": [{"sha": "af403496e38e937dd3e995a0203c4fe6b0f0253f", "filename": "library/alloc/src/collections/btree/node.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/3e016a7682699ac23e48b4c6571c3d78503abf4d/library%2Falloc%2Fsrc%2Fcollections%2Fbtree%2Fnode.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3e016a7682699ac23e48b4c6571c3d78503abf4d/library%2Falloc%2Fsrc%2Fcollections%2Fbtree%2Fnode.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Falloc%2Fsrc%2Fcollections%2Fbtree%2Fnode.rs?ref=3e016a7682699ac23e48b4c6571c3d78503abf4d", "patch": "@@ -89,7 +89,7 @@ impl<K, V> LeafNode<K, V> {\n \n /// The underlying representation of internal nodes. As with `LeafNode`s, these should be hidden\n /// behind `BoxedNode`s to prevent dropping uninitialized keys and values. Any pointer to an\n-/// `InternalNode` can be directly casted to a pointer to the underlying `LeafNode` portion of the\n+/// `InternalNode` can be directly cast to a pointer to the underlying `LeafNode` portion of the\n /// node, allowing code to act on leaf and internal nodes generically without having to even check\n /// which of the two a pointer is pointing at. This property is enabled by the use of `repr(C)`.\n #[repr(C)]\n@@ -408,7 +408,7 @@ impl<K, V> NodeRef<marker::Dying, K, V, marker::LeafOrInternal> {\n }\n \n impl<'a, K, V, Type> NodeRef<marker::Mut<'a>, K, V, Type> {\n-    /// Temporarily takes out another, mutable reference to the same node. Beware, as\n+    /// Temporarily takes out another mutable reference to the same node. Beware, as\n     /// this method is very dangerous, doubly so since it may not immediately appear\n     /// dangerous.\n     ///\n@@ -759,15 +759,15 @@ impl<BorrowType, K, V, NodeType, HandleType> PartialEq\n impl<BorrowType, K, V, NodeType, HandleType>\n     Handle<NodeRef<BorrowType, K, V, NodeType>, HandleType>\n {\n-    /// Temporarily takes out another, immutable handle on the same location.\n+    /// Temporarily takes out another immutable handle on the same location.\n     pub fn reborrow(&self) -> Handle<NodeRef<marker::Immut<'_>, K, V, NodeType>, HandleType> {\n         // We can't use Handle::new_kv or Handle::new_edge because we don't know our type\n         Handle { node: self.node.reborrow(), idx: self.idx, _marker: PhantomData }\n     }\n }\n \n impl<'a, K, V, NodeType, HandleType> Handle<NodeRef<marker::Mut<'a>, K, V, NodeType>, HandleType> {\n-    /// Temporarily takes out another, mutable handle on the same location. Beware, as\n+    /// Temporarily takes out another mutable handle on the same location. Beware, as\n     /// this method is very dangerous, doubly so since it may not immediately appear\n     /// dangerous.\n     ///"}]}