{"sha": "26a6891925f8e8bca95c6b71eea8e6becd38b73d", "node_id": "C_kwDOAAsO6NoAKDI2YTY4OTE5MjVmOGU4YmNhOTVjNmI3MWVlYThlNmJlY2QzOGI3M2Q", "commit": {"author": {"name": "Lukas Lueg", "email": "lukas.lueg@gmail.com", "date": "2022-08-29T11:56:03Z"}, "committer": {"name": "Lukas Lueg", "email": "lukas.lueg@gmail.com", "date": "2022-08-29T11:56:03Z"}, "message": "Fix missing parens in `suboptimal_flops` sugg\n\nFixes #9391", "tree": {"sha": "ab44aec5b7e4e454668b9487db51d8fbea3a17f1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ab44aec5b7e4e454668b9487db51d8fbea3a17f1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/26a6891925f8e8bca95c6b71eea8e6becd38b73d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/26a6891925f8e8bca95c6b71eea8e6becd38b73d", "html_url": "https://github.com/rust-lang/rust/commit/26a6891925f8e8bca95c6b71eea8e6becd38b73d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/26a6891925f8e8bca95c6b71eea8e6becd38b73d/comments", "author": {"login": "lukaslueg", "id": 3148704, "node_id": "MDQ6VXNlcjMxNDg3MDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3148704?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lukaslueg", "html_url": "https://github.com/lukaslueg", "followers_url": "https://api.github.com/users/lukaslueg/followers", "following_url": "https://api.github.com/users/lukaslueg/following{/other_user}", "gists_url": "https://api.github.com/users/lukaslueg/gists{/gist_id}", "starred_url": "https://api.github.com/users/lukaslueg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lukaslueg/subscriptions", "organizations_url": "https://api.github.com/users/lukaslueg/orgs", "repos_url": "https://api.github.com/users/lukaslueg/repos", "events_url": "https://api.github.com/users/lukaslueg/events{/privacy}", "received_events_url": "https://api.github.com/users/lukaslueg/received_events", "type": "User", "site_admin": false}, "committer": {"login": "lukaslueg", "id": 3148704, "node_id": "MDQ6VXNlcjMxNDg3MDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3148704?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lukaslueg", "html_url": "https://github.com/lukaslueg", "followers_url": "https://api.github.com/users/lukaslueg/followers", "following_url": "https://api.github.com/users/lukaslueg/following{/other_user}", "gists_url": "https://api.github.com/users/lukaslueg/gists{/gist_id}", "starred_url": "https://api.github.com/users/lukaslueg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lukaslueg/subscriptions", "organizations_url": "https://api.github.com/users/lukaslueg/orgs", "repos_url": "https://api.github.com/users/lukaslueg/repos", "events_url": "https://api.github.com/users/lukaslueg/events{/privacy}", "received_events_url": "https://api.github.com/users/lukaslueg/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "28ec27b33acc513a6534eb0d310caf7700800205", "url": "https://api.github.com/repos/rust-lang/rust/commits/28ec27b33acc513a6534eb0d310caf7700800205", "html_url": "https://github.com/rust-lang/rust/commit/28ec27b33acc513a6534eb0d310caf7700800205"}], "stats": {"total": 42, "additions": 32, "deletions": 10}, "files": [{"sha": "a052ecb6e04f23f23884ba22da49f0143c94c953", "filename": "clippy_lints/src/floating_point_arithmetic.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/26a6891925f8e8bca95c6b71eea8e6becd38b73d/clippy_lints%2Fsrc%2Ffloating_point_arithmetic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/26a6891925f8e8bca95c6b71eea8e6becd38b73d/clippy_lints%2Fsrc%2Ffloating_point_arithmetic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Ffloating_point_arithmetic.rs?ref=26a6891925f8e8bca95c6b71eea8e6becd38b73d", "patch": "@@ -651,7 +651,7 @@ fn check_radians(cx: &LateContext<'_>, expr: &Expr<'_>) {\n             if (F32(f32_consts::PI) == rvalue || F64(f64_consts::PI) == rvalue) &&\n                (F32(180_f32) == lvalue || F64(180_f64) == lvalue)\n             {\n-                let mut proposal = format!(\"{}.to_degrees()\", Sugg::hir(cx, mul_lhs, \"..\"));\n+                let mut proposal = format!(\"{}.to_degrees()\", Sugg::hir(cx, mul_lhs, \"..\").maybe_par());\n                 if_chain! {\n                     if let ExprKind::Lit(ref literal) = mul_lhs.kind;\n                     if let ast::LitKind::Float(ref value, float_type) = literal.node;\n@@ -677,7 +677,7 @@ fn check_radians(cx: &LateContext<'_>, expr: &Expr<'_>) {\n                 (F32(180_f32) == rvalue || F64(180_f64) == rvalue) &&\n                 (F32(f32_consts::PI) == lvalue || F64(f64_consts::PI) == lvalue)\n             {\n-                let mut proposal = format!(\"{}.to_radians()\", Sugg::hir(cx, mul_lhs, \"..\"));\n+                let mut proposal = format!(\"{}.to_radians()\", Sugg::hir(cx, mul_lhs, \"..\").maybe_par());\n                 if_chain! {\n                     if let ExprKind::Lit(ref literal) = mul_lhs.kind;\n                     if let ast::LitKind::Float(ref value, float_type) = literal.node;"}, {"sha": "27674b8a455b099a30d9f7be60cceb729628e077", "filename": "tests/ui/floating_point_rad.fixed", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/26a6891925f8e8bca95c6b71eea8e6becd38b73d/tests%2Fui%2Ffloating_point_rad.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/26a6891925f8e8bca95c6b71eea8e6becd38b73d/tests%2Fui%2Ffloating_point_rad.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ffloating_point_rad.fixed?ref=26a6891925f8e8bca95c6b71eea8e6becd38b73d", "patch": "@@ -8,6 +8,11 @@ pub const fn const_context() {\n     let _ = x * 180f32 / std::f32::consts::PI;\n }\n \n+pub fn issue9391(degrees: i64) {\n+    let _ = (degrees as f64).to_radians();\n+    let _ = (degrees as f64).to_degrees();\n+}\n+\n fn main() {\n     let x = 3f32;\n     let _ = x.to_degrees();"}, {"sha": "f1ea73df39845d988b5437125ee05a82057eb8bc", "filename": "tests/ui/floating_point_rad.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/26a6891925f8e8bca95c6b71eea8e6becd38b73d/tests%2Fui%2Ffloating_point_rad.rs", "raw_url": "https://github.com/rust-lang/rust/raw/26a6891925f8e8bca95c6b71eea8e6becd38b73d/tests%2Fui%2Ffloating_point_rad.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ffloating_point_rad.rs?ref=26a6891925f8e8bca95c6b71eea8e6becd38b73d", "patch": "@@ -8,6 +8,11 @@ pub const fn const_context() {\n     let _ = x * 180f32 / std::f32::consts::PI;\n }\n \n+pub fn issue9391(degrees: i64) {\n+    let _ = degrees as f64 * std::f64::consts::PI / 180.0;\n+    let _ = degrees as f64 * 180.0 / std::f64::consts::PI;\n+}\n+\n fn main() {\n     let x = 3f32;\n     let _ = x * 180f32 / std::f32::consts::PI;"}, {"sha": "979442f2c24a371d57d38aa7546e790ef7b5c638", "filename": "tests/ui/floating_point_rad.stderr", "status": "modified", "additions": 20, "deletions": 8, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/26a6891925f8e8bca95c6b71eea8e6becd38b73d/tests%2Fui%2Ffloating_point_rad.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/26a6891925f8e8bca95c6b71eea8e6becd38b73d/tests%2Fui%2Ffloating_point_rad.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ffloating_point_rad.stderr?ref=26a6891925f8e8bca95c6b71eea8e6becd38b73d", "patch": "@@ -1,40 +1,52 @@\n+error: conversion to radians can be done more accurately\n+  --> $DIR/floating_point_rad.rs:12:13\n+   |\n+LL |     let _ = degrees as f64 * std::f64::consts::PI / 180.0;\n+   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using: `(degrees as f64).to_radians()`\n+   |\n+   = note: `-D clippy::suboptimal-flops` implied by `-D warnings`\n+\n error: conversion to degrees can be done more accurately\n   --> $DIR/floating_point_rad.rs:13:13\n    |\n+LL |     let _ = degrees as f64 * 180.0 / std::f64::consts::PI;\n+   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using: `(degrees as f64).to_degrees()`\n+\n+error: conversion to degrees can be done more accurately\n+  --> $DIR/floating_point_rad.rs:18:13\n+   |\n LL |     let _ = x * 180f32 / std::f32::consts::PI;\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using: `x.to_degrees()`\n-   |\n-   = note: `-D clippy::suboptimal-flops` implied by `-D warnings`\n \n error: conversion to degrees can be done more accurately\n-  --> $DIR/floating_point_rad.rs:14:13\n+  --> $DIR/floating_point_rad.rs:19:13\n    |\n LL |     let _ = 90. * 180f64 / std::f64::consts::PI;\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using: `90.0_f64.to_degrees()`\n \n error: conversion to degrees can be done more accurately\n-  --> $DIR/floating_point_rad.rs:15:13\n+  --> $DIR/floating_point_rad.rs:20:13\n    |\n LL |     let _ = 90.5 * 180f64 / std::f64::consts::PI;\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using: `90.5_f64.to_degrees()`\n \n error: conversion to radians can be done more accurately\n-  --> $DIR/floating_point_rad.rs:16:13\n+  --> $DIR/floating_point_rad.rs:21:13\n    |\n LL |     let _ = x * std::f32::consts::PI / 180f32;\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using: `x.to_radians()`\n \n error: conversion to radians can be done more accurately\n-  --> $DIR/floating_point_rad.rs:17:13\n+  --> $DIR/floating_point_rad.rs:22:13\n    |\n LL |     let _ = 90. * std::f32::consts::PI / 180f32;\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using: `90.0_f64.to_radians()`\n \n error: conversion to radians can be done more accurately\n-  --> $DIR/floating_point_rad.rs:18:13\n+  --> $DIR/floating_point_rad.rs:23:13\n    |\n LL |     let _ = 90.5 * std::f32::consts::PI / 180f32;\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using: `90.5_f64.to_radians()`\n \n-error: aborting due to 6 previous errors\n+error: aborting due to 8 previous errors\n "}]}