{"sha": "71f29cd83704b39a2aefd609eab645decd3bce92", "node_id": "MDY6Q29tbWl0NzI0NzEyOjcxZjI5Y2Q4MzcwNGIzOWEyYWVmZDYwOWVhYjY0NWRlY2QzYmNlOTI=", "commit": {"author": {"name": "arcnmx", "email": "arcnmx@users.noreply.github.com", "date": "2016-02-23T06:37:21Z"}, "committer": {"name": "arcnmx", "email": "arcnmx@users.noreply.github.com", "date": "2016-02-23T16:52:19Z"}, "message": "CStr::from_bytes_with_nul tests", "tree": {"sha": "45c0f444f4124bd152d6cd252104e762805c335b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/45c0f444f4124bd152d6cd252104e762805c335b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/71f29cd83704b39a2aefd609eab645decd3bce92", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/71f29cd83704b39a2aefd609eab645decd3bce92", "html_url": "https://github.com/rust-lang/rust/commit/71f29cd83704b39a2aefd609eab645decd3bce92", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/71f29cd83704b39a2aefd609eab645decd3bce92/comments", "author": {"login": "arcnmx", "id": 13426784, "node_id": "MDQ6VXNlcjEzNDI2Nzg0", "avatar_url": "https://avatars.githubusercontent.com/u/13426784?v=4", "gravatar_id": "", "url": "https://api.github.com/users/arcnmx", "html_url": "https://github.com/arcnmx", "followers_url": "https://api.github.com/users/arcnmx/followers", "following_url": "https://api.github.com/users/arcnmx/following{/other_user}", "gists_url": "https://api.github.com/users/arcnmx/gists{/gist_id}", "starred_url": "https://api.github.com/users/arcnmx/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/arcnmx/subscriptions", "organizations_url": "https://api.github.com/users/arcnmx/orgs", "repos_url": "https://api.github.com/users/arcnmx/repos", "events_url": "https://api.github.com/users/arcnmx/events{/privacy}", "received_events_url": "https://api.github.com/users/arcnmx/received_events", "type": "User", "site_admin": false}, "committer": {"login": "arcnmx", "id": 13426784, "node_id": "MDQ6VXNlcjEzNDI2Nzg0", "avatar_url": "https://avatars.githubusercontent.com/u/13426784?v=4", "gravatar_id": "", "url": "https://api.github.com/users/arcnmx", "html_url": "https://github.com/arcnmx", "followers_url": "https://api.github.com/users/arcnmx/followers", "following_url": "https://api.github.com/users/arcnmx/following{/other_user}", "gists_url": "https://api.github.com/users/arcnmx/gists{/gist_id}", "starred_url": "https://api.github.com/users/arcnmx/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/arcnmx/subscriptions", "organizations_url": "https://api.github.com/users/arcnmx/orgs", "repos_url": "https://api.github.com/users/arcnmx/repos", "events_url": "https://api.github.com/users/arcnmx/events{/privacy}", "received_events_url": "https://api.github.com/users/arcnmx/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9414c4ea18dab870bc0acbcd2be9a882aa17d68e", "url": "https://api.github.com/repos/rust-lang/rust/commits/9414c4ea18dab870bc0acbcd2be9a882aa17d68e", "html_url": "https://github.com/rust-lang/rust/commit/9414c4ea18dab870bc0acbcd2be9a882aa17d68e"}], "stats": {"total": 27, "additions": 27, "deletions": 0}, "files": [{"sha": "1db45764552392a494217ee3b9d010527b834e58", "filename": "src/libstd/ffi/c_str.rs", "status": "modified", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/71f29cd83704b39a2aefd609eab645decd3bce92/src%2Flibstd%2Fffi%2Fc_str.rs", "raw_url": "https://github.com/rust-lang/rust/raw/71f29cd83704b39a2aefd609eab645decd3bce92/src%2Flibstd%2Fffi%2Fc_str.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fffi%2Fc_str.rs?ref=71f29cd83704b39a2aefd609eab645decd3bce92", "patch": "@@ -721,4 +721,31 @@ mod tests {\n \n         assert_eq!(cstr_hash, cstring_hash);\n     }\n+\n+    #[test]\n+    fn from_bytes_with_nul() {\n+        let data = b\"123\\0\";\n+        let cstr = CStr::from_bytes_with_nul(data);\n+        assert_eq!(cstr.map(CStr::to_bytes), Some(&b\"123\"[..]));\n+        assert_eq!(cstr.map(CStr::to_bytes_with_nul), Some(&b\"123\\0\"[..]));\n+\n+        unsafe {\n+            let cstr_unchecked = CStr::from_bytes_with_nul_unchecked(data);\n+            assert_eq!(cstr, Some(cstr_unchecked));\n+        }\n+    }\n+\n+    #[test]\n+    fn from_bytes_with_nul_unterminated() {\n+        let data = b\"123\";\n+        let cstr = CStr::from_bytes_with_nul(data);\n+        assert!(cstr.is_none());\n+    }\n+\n+    #[test]\n+    fn from_bytes_with_nul_interior() {\n+        let data = b\"1\\023\\0\";\n+        let cstr = CStr::from_bytes_with_nul(data);\n+        assert!(cstr.is_none());\n+    }\n }"}]}