{"sha": "7c29441ef2efcd47512402d5558b41a235648841", "node_id": "MDY6Q29tbWl0NzI0NzEyOjdjMjk0NDFlZjJlZmNkNDc1MTI0MDJkNTU1OGI0MWEyMzU2NDg4NDE=", "commit": {"author": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2020-02-21T21:39:47Z"}, "committer": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2020-02-28T19:37:59Z"}, "message": "Review comments: split requirement text to multiple lines for readability", "tree": {"sha": "b11dfe0216b7476ac9e9975f8b18bcdc7a161ff2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b11dfe0216b7476ac9e9975f8b18bcdc7a161ff2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7c29441ef2efcd47512402d5558b41a235648841", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7c29441ef2efcd47512402d5558b41a235648841", "html_url": "https://github.com/rust-lang/rust/commit/7c29441ef2efcd47512402d5558b41a235648841", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7c29441ef2efcd47512402d5558b41a235648841/comments", "author": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "committer": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "01286408c1d4ac9d862801ac102ce4de44fc095b", "url": "https://api.github.com/repos/rust-lang/rust/commits/01286408c1d4ac9d862801ac102ce4de44fc095b", "html_url": "https://github.com/rust-lang/rust/commit/01286408c1d4ac9d862801ac102ce4de44fc095b"}], "stats": {"total": 50, "additions": 33, "deletions": 17}, "files": [{"sha": "9fcb1c75faeaa1d9f48d1a4443eaeb42522b35e7", "filename": "src/librustc_typeck/check/method/suggest.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7c29441ef2efcd47512402d5558b41a235648841/src%2Flibrustc_typeck%2Fcheck%2Fmethod%2Fsuggest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7c29441ef2efcd47512402d5558b41a235648841/src%2Flibrustc_typeck%2Fcheck%2Fmethod%2Fsuggest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fmethod%2Fsuggest.rs?ref=7c29441ef2efcd47512402d5558b41a235648841", "patch": "@@ -639,7 +639,7 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n                                     None => format!(\"`{}`\", p),\n                                     Some((parent_p, _)) => {\n                                         collect_type_param_suggestions(self_ty, parent_pred, &p);\n-                                        format!(\"`{}` which is required by `{}`\", p, parent_p)\n+                                        format!(\"`{}`\\nwhich is required by `{}`\", p, parent_p)\n                                     }\n                                 },\n                             })"}, {"sha": "c4c85773fbc1d26c3b7bebbeb6c4dde80f9a0a4a", "filename": "src/test/ui/derives/derive-assoc-type-not-impl.stderr", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/7c29441ef2efcd47512402d5558b41a235648841/src%2Ftest%2Fui%2Fderives%2Fderive-assoc-type-not-impl.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/7c29441ef2efcd47512402d5558b41a235648841/src%2Ftest%2Fui%2Fderives%2Fderive-assoc-type-not-impl.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fderives%2Fderive-assoc-type-not-impl.stderr?ref=7c29441ef2efcd47512402d5558b41a235648841", "patch": "@@ -14,7 +14,8 @@ LL |     Bar::<NotClone> { x: 1 }.clone();\n    |                              ^^^^^ method not found in `Bar<NotClone>`\n    |\n    = note: the method `clone` exists but the following trait bounds were not satisfied:\n-           `NotClone: std::clone::Clone` which is required by `Bar<NotClone>: std::clone::Clone`\n+           `NotClone: std::clone::Clone`\n+           which is required by `Bar<NotClone>: std::clone::Clone`\n    = help: items from traits can only be used if the trait is implemented and in scope\n    = note: the following trait defines an item `clone`, perhaps you need to implement it:\n            candidate #1: `std::clone::Clone`"}, {"sha": "3e0a532b2b8f37b378515a05ee866010035632d4", "filename": "src/test/ui/issues/issue-21596.stderr", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/7c29441ef2efcd47512402d5558b41a235648841/src%2Ftest%2Fui%2Fissues%2Fissue-21596.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/7c29441ef2efcd47512402d5558b41a235648841/src%2Ftest%2Fui%2Fissues%2Fissue-21596.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-21596.stderr?ref=7c29441ef2efcd47512402d5558b41a235648841", "patch": "@@ -7,7 +7,8 @@ LL |     println!(\"{}\", z.to_string());\n    = note: try using `<*const T>::as_ref()` to get a reference to the type behind the pointer: https://doc.rust-lang.org/std/primitive.pointer.html#method.as_ref\n    = note: using `<*const T>::as_ref()` on a pointer which is unaligned or points to invalid or uninitialized memory is undefined behavior\n    = note: the method `to_string` exists but the following trait bounds were not satisfied:\n-           `*const u8: std::fmt::Display` which is required by `*const u8: std::string::ToString`\n+           `*const u8: std::fmt::Display`\n+           which is required by `*const u8: std::string::ToString`\n \n error: aborting due to previous error\n "}, {"sha": "20bfdeea4b1fac7dbe7302b2352f192d04ccb28b", "filename": "src/test/ui/issues/issue-31173.stderr", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/7c29441ef2efcd47512402d5558b41a235648841/src%2Ftest%2Fui%2Fissues%2Fissue-31173.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/7c29441ef2efcd47512402d5558b41a235648841/src%2Ftest%2Fui%2Fissues%2Fissue-31173.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-31173.stderr?ref=7c29441ef2efcd47512402d5558b41a235648841", "patch": "@@ -22,8 +22,10 @@ LL | pub struct TakeWhile<I, P> {\n    | -------------------------- doesn't satisfy `<_ as std::iter::Iterator>::Item = &_`\n    |\n    = note: the method `collect` exists but the following trait bounds were not satisfied:\n-           `<std::iter::TakeWhile<&mut std::vec::IntoIter<u8>, [closure@$DIR/issue-31173.rs:10:39: 13:6 found_e:_]> as std::iter::Iterator>::Item = &_` which is required by `std::iter::Cloned<std::iter::TakeWhile<&mut std::vec::IntoIter<u8>, [closure@$DIR/issue-31173.rs:10:39: 13:6 found_e:_]>>: std::iter::Iterator`\n-           `std::iter::Cloned<std::iter::TakeWhile<&mut std::vec::IntoIter<u8>, [closure@$DIR/issue-31173.rs:10:39: 13:6 found_e:_]>>: std::iter::Iterator` which is required by `&mut std::iter::Cloned<std::iter::TakeWhile<&mut std::vec::IntoIter<u8>, [closure@$DIR/issue-31173.rs:10:39: 13:6 found_e:_]>>: std::iter::Iterator`\n+           `<std::iter::TakeWhile<&mut std::vec::IntoIter<u8>, [closure@$DIR/issue-31173.rs:10:39: 13:6 found_e:_]> as std::iter::Iterator>::Item = &_`\n+           which is required by `std::iter::Cloned<std::iter::TakeWhile<&mut std::vec::IntoIter<u8>, [closure@$DIR/issue-31173.rs:10:39: 13:6 found_e:_]>>: std::iter::Iterator`\n+           `std::iter::Cloned<std::iter::TakeWhile<&mut std::vec::IntoIter<u8>, [closure@$DIR/issue-31173.rs:10:39: 13:6 found_e:_]>>: std::iter::Iterator`\n+           which is required by `&mut std::iter::Cloned<std::iter::TakeWhile<&mut std::vec::IntoIter<u8>, [closure@$DIR/issue-31173.rs:10:39: 13:6 found_e:_]>>: std::iter::Iterator`\n \n error: aborting due to 2 previous errors\n "}, {"sha": "ecb6950615748f36b0558f2bcb3fc322c9c646e0", "filename": "src/test/ui/methods/method-call-err-msg.stderr", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/7c29441ef2efcd47512402d5558b41a235648841/src%2Ftest%2Fui%2Fmethods%2Fmethod-call-err-msg.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/7c29441ef2efcd47512402d5558b41a235648841/src%2Ftest%2Fui%2Fmethods%2Fmethod-call-err-msg.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmethods%2Fmethod-call-err-msg.stderr?ref=7c29441ef2efcd47512402d5558b41a235648841", "patch": "@@ -44,7 +44,8 @@ LL |      .take()\n    |       ^^^^ method not found in `Foo`\n    |\n    = note: the method `take` exists but the following trait bounds were not satisfied:\n-           `Foo: std::iter::Iterator` which is required by `&mut Foo: std::iter::Iterator`\n+           `Foo: std::iter::Iterator`\n+           which is required by `&mut Foo: std::iter::Iterator`\n    = help: items from traits can only be used if the trait is implemented and in scope\n    = note: the following traits define an item `take`, perhaps you need to implement one of them:\n            candidate #1: `std::io::Read`"}, {"sha": "f8c0470172d1989b542a95c00300d61f806c6b5f", "filename": "src/test/ui/mismatched_types/issue-36053-2.stderr", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/7c29441ef2efcd47512402d5558b41a235648841/src%2Ftest%2Fui%2Fmismatched_types%2Fissue-36053-2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/7c29441ef2efcd47512402d5558b41a235648841/src%2Ftest%2Fui%2Fmismatched_types%2Fissue-36053-2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmismatched_types%2Fissue-36053-2.stderr?ref=7c29441ef2efcd47512402d5558b41a235648841", "patch": "@@ -13,9 +13,12 @@ LL | pub struct Filter<I, P> {\n    | ----------------------- doesn't satisfy `_: std::iter::Iterator`\n    |\n    = note: the method `count` exists but the following trait bounds were not satisfied:\n-           `<[closure@$DIR/issue-36053-2.rs:11:39: 11:53] as std::ops::FnOnce<(&&str,)>>::Output = bool` which is required by `std::iter::Filter<std::iter::Fuse<std::iter::Once<&str>>, [closure@$DIR/issue-36053-2.rs:11:39: 11:53]>: std::iter::Iterator`\n-           `[closure@$DIR/issue-36053-2.rs:11:39: 11:53]: std::ops::FnMut<(&&str,)>` which is required by `std::iter::Filter<std::iter::Fuse<std::iter::Once<&str>>, [closure@$DIR/issue-36053-2.rs:11:39: 11:53]>: std::iter::Iterator`\n-           `std::iter::Filter<std::iter::Fuse<std::iter::Once<&str>>, [closure@$DIR/issue-36053-2.rs:11:39: 11:53]>: std::iter::Iterator` which is required by `&mut std::iter::Filter<std::iter::Fuse<std::iter::Once<&str>>, [closure@$DIR/issue-36053-2.rs:11:39: 11:53]>: std::iter::Iterator`\n+           `<[closure@$DIR/issue-36053-2.rs:11:39: 11:53] as std::ops::FnOnce<(&&str,)>>::Output = bool`\n+           which is required by `std::iter::Filter<std::iter::Fuse<std::iter::Once<&str>>, [closure@$DIR/issue-36053-2.rs:11:39: 11:53]>: std::iter::Iterator`\n+           `[closure@$DIR/issue-36053-2.rs:11:39: 11:53]: std::ops::FnMut<(&&str,)>`\n+           which is required by `std::iter::Filter<std::iter::Fuse<std::iter::Once<&str>>, [closure@$DIR/issue-36053-2.rs:11:39: 11:53]>: std::iter::Iterator`\n+           `std::iter::Filter<std::iter::Fuse<std::iter::Once<&str>>, [closure@$DIR/issue-36053-2.rs:11:39: 11:53]>: std::iter::Iterator`\n+           which is required by `&mut std::iter::Filter<std::iter::Fuse<std::iter::Once<&str>>, [closure@$DIR/issue-36053-2.rs:11:39: 11:53]>: std::iter::Iterator`\n \n error[E0631]: type mismatch in closure arguments\n   --> $DIR/issue-36053-2.rs:11:32"}, {"sha": "4f6620b47c2685b15959b738400e4e7a42849539", "filename": "src/test/ui/suggestions/missing-trait-bounds-for-method-call.stderr", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/7c29441ef2efcd47512402d5558b41a235648841/src%2Ftest%2Fui%2Fsuggestions%2Fmissing-trait-bounds-for-method-call.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/7c29441ef2efcd47512402d5558b41a235648841/src%2Ftest%2Fui%2Fsuggestions%2Fmissing-trait-bounds-for-method-call.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Fmissing-trait-bounds-for-method-call.stderr?ref=7c29441ef2efcd47512402d5558b41a235648841", "patch": "@@ -11,8 +11,10 @@ LL |         self.foo();\n    |              ^^^ method not found in `&Foo<T>`\n    |\n    = note: the method `foo` exists but the following trait bounds were not satisfied:\n-           `T: Bar` which is required by `Foo<T>: Bar`\n-           `T: std::default::Default` which is required by `Foo<T>: Bar`\n+           `T: Bar`\n+           which is required by `Foo<T>: Bar`\n+           `T: std::default::Default`\n+           which is required by `Foo<T>: Bar`\n    = help: items from traits can only be used if the trait is implemented and in scope\n help: consider restricting the type parameters to satisfy the obligations\n    |\n@@ -32,7 +34,8 @@ LL |         self.foo();\n    |              ^^^ method not found in `&Fin<T>`\n    |\n    = note: the method `foo` exists but the following trait bounds were not satisfied:\n-           `T: std::default::Default` which is required by `Fin<T>: Bar`\n+           `T: std::default::Default`\n+           which is required by `Fin<T>: Bar`\n    = help: items from traits can only be used if the trait is implemented and in scope\n help: consider restricting the type parameter to satisfy the obligation\n    |"}, {"sha": "57a389cbb49b5cc840228813bfc2f06d20c2ac2e", "filename": "src/test/ui/suggestions/mut-borrow-needed-by-trait.stderr", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/7c29441ef2efcd47512402d5558b41a235648841/src%2Ftest%2Fui%2Fsuggestions%2Fmut-borrow-needed-by-trait.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/7c29441ef2efcd47512402d5558b41a235648841/src%2Ftest%2Fui%2Fsuggestions%2Fmut-borrow-needed-by-trait.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Fmut-borrow-needed-by-trait.stderr?ref=7c29441ef2efcd47512402d5558b41a235648841", "patch": "@@ -37,7 +37,8 @@ LL | pub struct BufWriter<W: Write> {\n    | ------------------------------ doesn't satisfy `_: std::io::Write`\n    |\n    = note: the method `write_fmt` exists but the following trait bounds were not satisfied:\n-           `&dyn std::io::Write: std::io::Write` which is required by `std::io::BufWriter<&dyn std::io::Write>: std::io::Write`\n+           `&dyn std::io::Write: std::io::Write`\n+           which is required by `std::io::BufWriter<&dyn std::io::Write>: std::io::Write`\n    = note: this error originates in a macro (in Nightly builds, run with -Z macro-backtrace for more info)\n \n error: aborting due to 4 previous errors"}, {"sha": "fdf2393656e12d94c92cebfc322299b2a1f74f35", "filename": "src/test/ui/union/union-derive-clone.stderr", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/7c29441ef2efcd47512402d5558b41a235648841/src%2Ftest%2Fui%2Funion%2Funion-derive-clone.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/7c29441ef2efcd47512402d5558b41a235648841/src%2Ftest%2Fui%2Funion%2Funion-derive-clone.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Funion%2Funion-derive-clone.stderr?ref=7c29441ef2efcd47512402d5558b41a235648841", "patch": "@@ -23,7 +23,8 @@ LL |     let w = u.clone();\n    |               ^^^^^ method not found in `U5<CloneNoCopy>`\n    |\n    = note: the method `clone` exists but the following trait bounds were not satisfied:\n-           `CloneNoCopy: std::marker::Copy` which is required by `U5<CloneNoCopy>: std::clone::Clone`\n+           `CloneNoCopy: std::marker::Copy`\n+           which is required by `U5<CloneNoCopy>: std::clone::Clone`\n    = help: items from traits can only be used if the trait is implemented and in scope\n    = note: the following trait defines an item `clone`, perhaps you need to implement it:\n            candidate #1: `std::clone::Clone`"}, {"sha": "6a0a6c87079f3bb0dd79f9d884d7e7e58c65bef5", "filename": "src/test/ui/unique-object-noncopyable.stderr", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/7c29441ef2efcd47512402d5558b41a235648841/src%2Ftest%2Fui%2Funique-object-noncopyable.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/7c29441ef2efcd47512402d5558b41a235648841/src%2Ftest%2Fui%2Funique-object-noncopyable.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Funique-object-noncopyable.stderr?ref=7c29441ef2efcd47512402d5558b41a235648841", "patch": "@@ -16,8 +16,10 @@ LL | pub struct Box<T: ?Sized>(Unique<T>);\n    | ------------------------------------- doesn't satisfy `std::boxed::Box<dyn Foo>: std::clone::Clone`\n    |\n    = note: the method `clone` exists but the following trait bounds were not satisfied:\n-           `dyn Foo: std::clone::Clone` which is required by `std::boxed::Box<dyn Foo>: std::clone::Clone`\n-           `dyn Foo: std::marker::Sized` which is required by `std::boxed::Box<dyn Foo>: std::clone::Clone`\n+           `dyn Foo: std::clone::Clone`\n+           which is required by `std::boxed::Box<dyn Foo>: std::clone::Clone`\n+           `dyn Foo: std::marker::Sized`\n+           which is required by `std::boxed::Box<dyn Foo>: std::clone::Clone`\n    = help: items from traits can only be used if the trait is implemented and in scope\n    = note: the following trait defines an item `clone`, perhaps you need to implement it:\n            candidate #1: `std::clone::Clone`"}, {"sha": "32f751fbcf7c392ea22c60fc7d09dddc31dede17", "filename": "src/test/ui/unique-pinned-nocopy.stderr", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/7c29441ef2efcd47512402d5558b41a235648841/src%2Ftest%2Fui%2Funique-pinned-nocopy.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/7c29441ef2efcd47512402d5558b41a235648841/src%2Ftest%2Fui%2Funique-pinned-nocopy.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Funique-pinned-nocopy.stderr?ref=7c29441ef2efcd47512402d5558b41a235648841", "patch": "@@ -13,7 +13,8 @@ LL | pub struct Box<T: ?Sized>(Unique<T>);\n    | ------------------------------------- doesn't satisfy `std::boxed::Box<R>: std::clone::Clone`\n    |\n    = note: the method `clone` exists but the following trait bounds were not satisfied:\n-           `R: std::clone::Clone` which is required by `std::boxed::Box<R>: std::clone::Clone`\n+           `R: std::clone::Clone`\n+           which is required by `std::boxed::Box<R>: std::clone::Clone`\n    = help: items from traits can only be used if the trait is implemented and in scope\n    = note: the following trait defines an item `clone`, perhaps you need to implement it:\n            candidate #1: `std::clone::Clone`"}]}