{"sha": "5df6259996f3c8998d4b158ff7f29338843dc851", "node_id": "C_kwDOAAsO6NoAKDVkZjYyNTk5OTZmM2M4OTk4ZDRiMTU4ZmY3ZjI5MzM4ODQzZGM4NTE", "commit": {"author": {"name": "Eric Sampson", "email": "esampson@eaze.com", "date": "2021-10-04T07:42:13Z"}, "committer": {"name": "Eric Sampson", "email": "esampson@eaze.com", "date": "2021-10-04T07:42:13Z"}, "message": "tweak variable names.", "tree": {"sha": "83023e6fa0b957d05956d599c54cc5ee25339d17", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/83023e6fa0b957d05956d599c54cc5ee25339d17"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5df6259996f3c8998d4b158ff7f29338843dc851", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5df6259996f3c8998d4b158ff7f29338843dc851", "html_url": "https://github.com/rust-lang/rust/commit/5df6259996f3c8998d4b158ff7f29338843dc851", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5df6259996f3c8998d4b158ff7f29338843dc851/comments", "author": {"login": "ericsampson", "id": 1183853, "node_id": "MDQ6VXNlcjExODM4NTM=", "avatar_url": "https://avatars.githubusercontent.com/u/1183853?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ericsampson", "html_url": "https://github.com/ericsampson", "followers_url": "https://api.github.com/users/ericsampson/followers", "following_url": "https://api.github.com/users/ericsampson/following{/other_user}", "gists_url": "https://api.github.com/users/ericsampson/gists{/gist_id}", "starred_url": "https://api.github.com/users/ericsampson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ericsampson/subscriptions", "organizations_url": "https://api.github.com/users/ericsampson/orgs", "repos_url": "https://api.github.com/users/ericsampson/repos", "events_url": "https://api.github.com/users/ericsampson/events{/privacy}", "received_events_url": "https://api.github.com/users/ericsampson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ericsampson", "id": 1183853, "node_id": "MDQ6VXNlcjExODM4NTM=", "avatar_url": "https://avatars.githubusercontent.com/u/1183853?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ericsampson", "html_url": "https://github.com/ericsampson", "followers_url": "https://api.github.com/users/ericsampson/followers", "following_url": "https://api.github.com/users/ericsampson/following{/other_user}", "gists_url": "https://api.github.com/users/ericsampson/gists{/gist_id}", "starred_url": "https://api.github.com/users/ericsampson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ericsampson/subscriptions", "organizations_url": "https://api.github.com/users/ericsampson/orgs", "repos_url": "https://api.github.com/users/ericsampson/repos", "events_url": "https://api.github.com/users/ericsampson/events{/privacy}", "received_events_url": "https://api.github.com/users/ericsampson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "99dd8066d9787a3e8664b3845ca04b3af502301b", "url": "https://api.github.com/repos/rust-lang/rust/commits/99dd8066d9787a3e8664b3845ca04b3af502301b", "html_url": "https://github.com/rust-lang/rust/commit/99dd8066d9787a3e8664b3845ca04b3af502301b"}], "stats": {"total": 16, "additions": 8, "deletions": 8}, "files": [{"sha": "2650c3ef019522738c3aa770b61fe4715f5e02ab", "filename": "crates/ide/src/annotations.rs", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/5df6259996f3c8998d4b158ff7f29338843dc851/crates%2Fide%2Fsrc%2Fannotations.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5df6259996f3c8998d4b158ff7f29338843dc851/crates%2Fide%2Fsrc%2Fannotations.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fannotations.rs?ref=5df6259996f3c8998d4b158ff7f29338843dc851", "patch": "@@ -64,7 +64,7 @@ pub(crate) fn annotations(\n \n     visit_file_defs(&Semantics::new(db), file_id, &mut |def| match def {\n         Either::Left(def) => {\n-            let (range, ranges_variants) = match def {\n+            let (range, ranges_enum_variants) = match def {\n                 hir::ModuleDef::Const(konst) => {\n                     (konst.source(db).and_then(|node| name_range(&node, file_id)), vec![None])\n                 }\n@@ -116,19 +116,19 @@ pub(crate) fn annotations(\n             }\n \n             if config.annotate_enum_variant_references {\n-                let mut variants_metadata: Vec<(TextRange, TextSize)> = Vec::new();\n-                for range_variant in ranges_variants.into_iter() {\n-                    let (range, offset) = match range_variant {\n+                let mut enum_variants_metadata: Vec<(TextRange, TextSize)> = Vec::new();\n+                for range_enum_variant in ranges_enum_variants.into_iter() {\n+                    let (range, offset) = match range_enum_variant {\n                         Some(range) => (range, range.start()),\n                         None => return,\n                     };\n-                    variants_metadata.push((range, offset))\n+                    enum_variants_metadata.push((range, offset))\n                 }\n-                for variant_metadata in variants_metadata.into_iter() {\n+                for enum_variant_metadata in enum_variants_metadata.into_iter() {\n                     annotations.push(Annotation {\n-                        range: variant_metadata.0,\n+                        range: enum_variant_metadata.0,\n                         kind: AnnotationKind::HasReferences {\n-                            position: FilePosition { file_id, offset: variant_metadata.1 },\n+                            position: FilePosition { file_id, offset: enum_variant_metadata.1 },\n                             data: None,\n                         },\n                     });"}]}