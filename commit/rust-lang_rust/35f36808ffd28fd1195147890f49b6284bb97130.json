{"sha": "35f36808ffd28fd1195147890f49b6284bb97130", "node_id": "MDY6Q29tbWl0NzI0NzEyOjM1ZjM2ODA4ZmZkMjhmZDExOTUxNDc4OTBmNDliNjI4NGJiOTcxMzA=", "commit": {"author": {"name": "Tim Chevalier", "email": "chevalier@alum.wellesley.edu", "date": "2012-12-07T02:32:13Z"}, "committer": {"name": "Tim Chevalier", "email": "chevalier@alum.wellesley.edu", "date": "2012-12-07T05:53:14Z"}, "message": "Test cases, some xfailed", "tree": {"sha": "c4acbfca5608ee511ec0d2e07b6b276b3e3d8736", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c4acbfca5608ee511ec0d2e07b6b276b3e3d8736"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/35f36808ffd28fd1195147890f49b6284bb97130", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/35f36808ffd28fd1195147890f49b6284bb97130", "html_url": "https://github.com/rust-lang/rust/commit/35f36808ffd28fd1195147890f49b6284bb97130", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/35f36808ffd28fd1195147890f49b6284bb97130/comments", "author": {"login": "catamorphism", "id": 427212, "node_id": "MDQ6VXNlcjQyNzIxMg==", "avatar_url": "https://avatars.githubusercontent.com/u/427212?v=4", "gravatar_id": "", "url": "https://api.github.com/users/catamorphism", "html_url": "https://github.com/catamorphism", "followers_url": "https://api.github.com/users/catamorphism/followers", "following_url": "https://api.github.com/users/catamorphism/following{/other_user}", "gists_url": "https://api.github.com/users/catamorphism/gists{/gist_id}", "starred_url": "https://api.github.com/users/catamorphism/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/catamorphism/subscriptions", "organizations_url": "https://api.github.com/users/catamorphism/orgs", "repos_url": "https://api.github.com/users/catamorphism/repos", "events_url": "https://api.github.com/users/catamorphism/events{/privacy}", "received_events_url": "https://api.github.com/users/catamorphism/received_events", "type": "User", "site_admin": false}, "committer": {"login": "catamorphism", "id": 427212, "node_id": "MDQ6VXNlcjQyNzIxMg==", "avatar_url": "https://avatars.githubusercontent.com/u/427212?v=4", "gravatar_id": "", "url": "https://api.github.com/users/catamorphism", "html_url": "https://github.com/catamorphism", "followers_url": "https://api.github.com/users/catamorphism/followers", "following_url": "https://api.github.com/users/catamorphism/following{/other_user}", "gists_url": "https://api.github.com/users/catamorphism/gists{/gist_id}", "starred_url": "https://api.github.com/users/catamorphism/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/catamorphism/subscriptions", "organizations_url": "https://api.github.com/users/catamorphism/orgs", "repos_url": "https://api.github.com/users/catamorphism/repos", "events_url": "https://api.github.com/users/catamorphism/events{/privacy}", "received_events_url": "https://api.github.com/users/catamorphism/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "10ec0586387d586d637a8459b58d5fbd486c9915", "url": "https://api.github.com/repos/rust-lang/rust/commits/10ec0586387d586d637a8459b58d5fbd486c9915", "html_url": "https://github.com/rust-lang/rust/commit/10ec0586387d586d637a8459b58d5fbd486c9915"}], "stats": {"total": 323, "additions": 323, "deletions": 0}, "files": [{"sha": "bab93b176b527bb1246b18fc387c315e084cb245", "filename": "src/test/compile-fail/issue-2478.rs", "status": "added", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/35f36808ffd28fd1195147890f49b6284bb97130/src%2Ftest%2Fcompile-fail%2Fissue-2478.rs", "raw_url": "https://github.com/rust-lang/rust/raw/35f36808ffd28fd1195147890f49b6284bb97130/src%2Ftest%2Fcompile-fail%2Fissue-2478.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-2478.rs?ref=35f36808ffd28fd1195147890f49b6284bb97130", "patch": "@@ -0,0 +1,6 @@\n+// xfail-test\n+fn foo() -> &a/int {\n+    return &x;\n+}\n+const x: int = 5;\n+fn main() {}"}, {"sha": "1208f80e4c62e0a2570851a09a7ee94b139ea65d", "filename": "src/test/compile-fail/issue-3154.rs", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/35f36808ffd28fd1195147890f49b6284bb97130/src%2Ftest%2Fcompile-fail%2Fissue-3154.rs", "raw_url": "https://github.com/rust-lang/rust/raw/35f36808ffd28fd1195147890f49b6284bb97130/src%2Ftest%2Fcompile-fail%2Fissue-3154.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-3154.rs?ref=35f36808ffd28fd1195147890f49b6284bb97130", "patch": "@@ -0,0 +1,11 @@\n+struct thing<Q> {\n+    x: &Q\n+}\n+\n+fn thing<Q>(x: &Q) -> thing<Q> {\n+    thing{ x: x } //~ ERROR cannot infer an appropriate lifetime\n+}\n+\n+fn main() {\n+    thing(&());\n+}\n\\ No newline at end of file"}, {"sha": "a2ad89c86bae65a40d0a296bc896ff24f7bbb6c5", "filename": "src/test/compile-fail/issue-3243.rs", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/35f36808ffd28fd1195147890f49b6284bb97130/src%2Ftest%2Fcompile-fail%2Fissue-3243.rs", "raw_url": "https://github.com/rust-lang/rust/raw/35f36808ffd28fd1195147890f49b6284bb97130/src%2Ftest%2Fcompile-fail%2Fissue-3243.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-3243.rs?ref=35f36808ffd28fd1195147890f49b6284bb97130", "patch": "@@ -0,0 +1,11 @@\n+// xfail-test\n+fn function() -> &[mut int] {\n+    let mut x: &static/[mut int] = &[mut 1,2,3];\n+    x[0] = 12345;\n+    x //~ ERROR bad\n+}\n+\n+fn main() {\n+    let x = function();\n+    error!(\"%?\", x);\n+}\n\\ No newline at end of file"}, {"sha": "35b74e9a4d35d17d991e65059357be64e63cff7f", "filename": "src/test/compile-fail/issue-3296.rs", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/35f36808ffd28fd1195147890f49b6284bb97130/src%2Ftest%2Fcompile-fail%2Fissue-3296.rs", "raw_url": "https://github.com/rust-lang/rust/raw/35f36808ffd28fd1195147890f49b6284bb97130/src%2Ftest%2Fcompile-fail%2Fissue-3296.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-3296.rs?ref=35f36808ffd28fd1195147890f49b6284bb97130", "patch": "@@ -0,0 +1,12 @@\n+use std;\n+\n+struct Deserializer : std::serialization::deserializer{ //~ ERROR obsolete syntax: class traits\n+    x: ()\n+}\n+\n+type foo = {a: (),};\n+\n+fn deserialize_foo<__D: std::serialization::deserializer>(&&__d: __D) {\n+}\n+\n+fn main() { let des = Deserializer(); let foo = deserialize_foo(des); }"}, {"sha": "3f0c7bcfdb37ed502f828c3122fb6e16ebdfe622", "filename": "src/test/compile-fail/issue-3311.rs", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/35f36808ffd28fd1195147890f49b6284bb97130/src%2Ftest%2Fcompile-fail%2Fissue-3311.rs", "raw_url": "https://github.com/rust-lang/rust/raw/35f36808ffd28fd1195147890f49b6284bb97130/src%2Ftest%2Fcompile-fail%2Fissue-3311.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-3311.rs?ref=35f36808ffd28fd1195147890f49b6284bb97130", "patch": "@@ -0,0 +1,21 @@\n+#[legacy_mode]\n+struct Foo {\n+    s: &str,\n+    u: ~()\n+}\n+\n+impl Foo {\n+    fn get_s(&self) -> &self/str {\n+        self.s\n+    }\n+}\n+\n+fn bar(s: &str, f: fn(Option<Foo>)) {\n+    f(Some(Foo {s: s, u: ~()}));\n+}\n+\n+fn main() {\n+    do bar(~\"testing\") |opt| {\n+        io::println(option::unwrap(opt).get_s()); //~ ERROR illegal borrow:\n+    };\n+}"}, {"sha": "e2f40364b612fd9b3c04200535dc76f34cebd8ec", "filename": "src/test/compile-fail/issue-3680.rs", "status": "added", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/35f36808ffd28fd1195147890f49b6284bb97130/src%2Ftest%2Fcompile-fail%2Fissue-3680.rs", "raw_url": "https://github.com/rust-lang/rust/raw/35f36808ffd28fd1195147890f49b6284bb97130/src%2Ftest%2Fcompile-fail%2Fissue-3680.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-3680.rs?ref=35f36808ffd28fd1195147890f49b6284bb97130", "patch": "@@ -0,0 +1,6 @@\n+// xfail-test\n+fn f() {\n+    match None {\n+            Err(_) => () //~ ERROR expected `core::result\n+    }\n+}"}, {"sha": "cf44a6cbe9a58656fb574c2f51f990d9d50ed309", "filename": "src/test/compile-fail/issue-3702-2.rs", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/35f36808ffd28fd1195147890f49b6284bb97130/src%2Ftest%2Fcompile-fail%2Fissue-3702-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/35f36808ffd28fd1195147890f49b6284bb97130/src%2Ftest%2Fcompile-fail%2Fissue-3702-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-3702-2.rs?ref=35f36808ffd28fd1195147890f49b6284bb97130", "patch": "@@ -0,0 +1,13 @@\n+trait Add {\n+    fn to_int(&self) -> int;\n+    fn add_dynamic(&self, other: &Add) -> int;\n+}\n+\n+impl int: Add {\n+    fn to_int(&self) -> int { *self }\n+    fn add_dynamic(&self, other: &Add) -> int {\n+        self.to_int() + other.to_int() //~ ERROR multiple applicable methods in scope\n+    }\n+}\n+\n+fn main() { }"}, {"sha": "4415d0991819db31eceacee268f411aa4cd074aa", "filename": "src/test/compile-fail/issue-3763", "status": "added", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/35f36808ffd28fd1195147890f49b6284bb97130/src%2Ftest%2Fcompile-fail%2Fissue-3763", "raw_url": "https://github.com/rust-lang/rust/raw/35f36808ffd28fd1195147890f49b6284bb97130/src%2Ftest%2Fcompile-fail%2Fissue-3763", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-3763?ref=35f36808ffd28fd1195147890f49b6284bb97130"}, {"sha": "46e47081f3a75d2c3f860d7af73e8640a0250709", "filename": "src/test/compile-fail/issue-3763.rs", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/35f36808ffd28fd1195147890f49b6284bb97130/src%2Ftest%2Fcompile-fail%2Fissue-3763.rs", "raw_url": "https://github.com/rust-lang/rust/raw/35f36808ffd28fd1195147890f49b6284bb97130/src%2Ftest%2Fcompile-fail%2Fissue-3763.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-3763.rs?ref=35f36808ffd28fd1195147890f49b6284bb97130", "patch": "@@ -0,0 +1,17 @@\n+// xfail-test\n+mod my_mod {\n+    pub struct MyStruct {\n+        priv priv_field: int\n+    }\n+    pub fn MyStruct () -> MyStruct {\n+        MyStruct {priv_field: 4}\n+    }\n+}\n+\n+fn main() {\n+    let my_struct = my_mod::MyStruct();\n+    let _woohoo = (&my_struct).priv_field; // compiles but shouldn't\n+    let _woohoo = (~my_struct).priv_field; // ditto\n+    let _woohoo = (@my_struct).priv_field; // ditto\n+   // let nope = my_struct.priv_field;       // compile error as expected\n+}"}, {"sha": "8345aac5a0ef544929180baf54fb00dc47d7b25e", "filename": "src/test/run-pass/issue-3026.rs", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/35f36808ffd28fd1195147890f49b6284bb97130/src%2Ftest%2Frun-pass%2Fissue-3026.rs", "raw_url": "https://github.com/rust-lang/rust/raw/35f36808ffd28fd1195147890f49b6284bb97130/src%2Ftest%2Frun-pass%2Fissue-3026.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-3026.rs?ref=35f36808ffd28fd1195147890f49b6284bb97130", "patch": "@@ -0,0 +1,9 @@\n+extern mod std;\n+use std::map::HashMap;\n+use std::map;\n+\n+fn main() {\n+    let buggy_map :HashMap<uint, &uint> = HashMap::<uint, &uint>();\n+    let x = ~1;\n+    buggy_map.insert(42, x);\n+}"}, {"sha": "52c3dfb984a59b6ee02801940af5e2bf159fa973", "filename": "src/test/run-pass/issue-3052.rs", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/35f36808ffd28fd1195147890f49b6284bb97130/src%2Ftest%2Frun-pass%2Fissue-3052.rs", "raw_url": "https://github.com/rust-lang/rust/raw/35f36808ffd28fd1195147890f49b6284bb97130/src%2Ftest%2Frun-pass%2Fissue-3052.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-3052.rs?ref=35f36808ffd28fd1195147890f49b6284bb97130", "patch": "@@ -0,0 +1,11 @@\n+use option::*;\n+\n+type Connection = fn@(~[u8]);\n+\n+fn f() -> Option<Connection> {\n+    let mock_connection: Connection = fn@(_data: ~[u8]) { };\n+    Some(mock_connection)\n+}\n+\n+fn main() {\n+}"}, {"sha": "5bf16ef50975d3c7c85478d4e891175cd7437a78", "filename": "src/test/run-pass/issue-3109.rs", "status": "added", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/35f36808ffd28fd1195147890f49b6284bb97130/src%2Ftest%2Frun-pass%2Fissue-3109.rs", "raw_url": "https://github.com/rust-lang/rust/raw/35f36808ffd28fd1195147890f49b6284bb97130/src%2Ftest%2Frun-pass%2Fissue-3109.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-3109.rs?ref=35f36808ffd28fd1195147890f49b6284bb97130", "patch": "@@ -0,0 +1,3 @@\n+fn main() {\n+    log(error, (\"hi there!\", \"you\"));\n+}"}, {"sha": "57f8e71899d99fbc94b3e7ad7a83ee08b914b364", "filename": "src/test/run-pass/issue-3389.rs", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/35f36808ffd28fd1195147890f49b6284bb97130/src%2Ftest%2Frun-pass%2Fissue-3389.rs", "raw_url": "https://github.com/rust-lang/rust/raw/35f36808ffd28fd1195147890f49b6284bb97130/src%2Ftest%2Frun-pass%2Fissue-3389.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-3389.rs?ref=35f36808ffd28fd1195147890f49b6284bb97130", "patch": "@@ -0,0 +1,22 @@\n+struct trie_node {\n+    mut content: ~[~str],\n+    mut children: ~[trie_node],\n+}\n+\n+fn print_str_vector(vector: ~[~str]) {\n+    for vector.each() |string| {\n+        io::println(*string);\n+    }\n+}\n+\n+fn main() {\n+    let node: trie_node = trie_node {\n+        content: ~[],\n+        children: ~[]\n+    };\n+    let v = ~[~\"123\", ~\"abc\"];\n+    node.content = ~[~\"123\", ~\"abc\"];\n+    print_str_vector(v);\n+    print_str_vector(copy node.content);\n+\n+}"}, {"sha": "bfc683fd9aeb94aac659fb7a84caceac9584ffd3", "filename": "src/test/run-pass/issue-3424.rs", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/35f36808ffd28fd1195147890f49b6284bb97130/src%2Ftest%2Frun-pass%2Fissue-3424.rs", "raw_url": "https://github.com/rust-lang/rust/raw/35f36808ffd28fd1195147890f49b6284bb97130/src%2Ftest%2Frun-pass%2Fissue-3424.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-3424.rs?ref=35f36808ffd28fd1195147890f49b6284bb97130", "patch": "@@ -0,0 +1,16 @@\n+// rustc --test ignores2.rs && ./ignores2\n+extern mod std;\n+use path::{Path};\n+\n+type rsrc_loader = fn~ (path: &Path) -> result::Result<~str, ~str>;\n+\n+#[test]\n+fn tester()\n+{\n+    let loader: rsrc_loader = |_path| {result::Ok(~\"more blah\")};\n+\n+    let path = path::from_str(\"blah\");\n+    assert loader(&path).is_ok();\n+}\n+\n+fn main() {}"}, {"sha": "30a865d2c00c832827165d3974f162e2877ba3da", "filename": "src/test/run-pass/issue-3461.rs", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/35f36808ffd28fd1195147890f49b6284bb97130/src%2Ftest%2Frun-pass%2Fissue-3461.rs", "raw_url": "https://github.com/rust-lang/rust/raw/35f36808ffd28fd1195147890f49b6284bb97130/src%2Ftest%2Frun-pass%2Fissue-3461.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-3461.rs?ref=35f36808ffd28fd1195147890f49b6284bb97130", "patch": "@@ -0,0 +1,7 @@\n+// xfail-test\n+fn main() {\n+\n+    fn foo() { }\n+    \n+    let bar: ~fn() = ~foo;\n+}\n\\ No newline at end of file"}, {"sha": "1781b6bbf6e3fb0d0b2a8b7d7114db53dda85ce2", "filename": "src/test/run-pass/issue-3480.rs", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/35f36808ffd28fd1195147890f49b6284bb97130/src%2Ftest%2Frun-pass%2Fissue-3480.rs", "raw_url": "https://github.com/rust-lang/rust/raw/35f36808ffd28fd1195147890f49b6284bb97130/src%2Ftest%2Frun-pass%2Fissue-3480.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-3480.rs?ref=35f36808ffd28fd1195147890f49b6284bb97130", "patch": "@@ -0,0 +1,17 @@\n+// xfail-test\n+type IMap<K: Copy, V: Copy> = ~[(K, V)];\n+\n+trait ImmutableMap<K: Copy, V: Copy>\n+{\n+    pure fn contains_key(key: K) -> bool;\n+}\n+\n+impl<K: Copy, V: Copy> IMap<K, V> : ImmutableMap<K, V>\n+{\n+    pure fn contains_key(key: K) -> bool\n+    {\n+        vec::find(self, |e| {e.first() == key}).is_some()\n+    }\n+}\n+\n+fn main() {}\n\\ No newline at end of file"}, {"sha": "f42c5f193ce28f48ebed7eb3622d7c63038dbd11", "filename": "src/test/run-pass/issue-3500.rs", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/35f36808ffd28fd1195147890f49b6284bb97130/src%2Ftest%2Frun-pass%2Fissue-3500.rs", "raw_url": "https://github.com/rust-lang/rust/raw/35f36808ffd28fd1195147890f49b6284bb97130/src%2Ftest%2Frun-pass%2Fissue-3500.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-3500.rs?ref=35f36808ffd28fd1195147890f49b6284bb97130", "patch": "@@ -0,0 +1,7 @@\n+fn main() {\n+    let x = &Some(1);\n+    match x {\n+        &Some(_) => (),\n+        &None => (),\n+    }\n+}"}, {"sha": "406e055884a5de9565c97a4c3d5ce17877b009b6", "filename": "src/test/run-pass/issue-3559", "status": "added", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/35f36808ffd28fd1195147890f49b6284bb97130/src%2Ftest%2Frun-pass%2Fissue-3559", "raw_url": "https://github.com/rust-lang/rust/raw/35f36808ffd28fd1195147890f49b6284bb97130/src%2Ftest%2Frun-pass%2Fissue-3559", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-3559?ref=35f36808ffd28fd1195147890f49b6284bb97130"}, {"sha": "256299612768857d2d30b56e4ed3b0cffb7851af", "filename": "src/test/run-pass/issue-3559.rs", "status": "added", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/35f36808ffd28fd1195147890f49b6284bb97130/src%2Ftest%2Frun-pass%2Fissue-3559.rs", "raw_url": "https://github.com/rust-lang/rust/raw/35f36808ffd28fd1195147890f49b6284bb97130/src%2Ftest%2Frun-pass%2Fissue-3559.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-3559.rs?ref=35f36808ffd28fd1195147890f49b6284bb97130", "patch": "@@ -0,0 +1,26 @@\n+// rustc --test map_to_str.rs && ./map_to_str\n+extern mod std;\n+use io::{WriterUtil};\n+use std::map::*;\n+\n+#[cfg(test)]\n+fn check_strs(actual: &str, expected: &str) -> bool\n+{\n+    if actual != expected\n+    {\n+        io::stderr().write_line(fmt!(\"Found %s, but expected %s\", actual, expected));\n+        return false;\n+    }\n+    return true;\n+}\n+\n+#[test]\n+fn tester()\n+{\n+    let table = HashMap();\n+    table.insert(@~\"one\", 1);\n+    table.insert(@~\"two\", 2);\n+    assert check_strs(table.to_str(), ~\"xxx\");   // not sure what expected should be\n+}\n+\n+fn main() {}"}, {"sha": "e05e62c60e16c2593ef5fe76329c631f52ec71c3", "filename": "src/test/run-pass/issue-3563.rs", "status": "added", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/35f36808ffd28fd1195147890f49b6284bb97130/src%2Ftest%2Frun-pass%2Fissue-3563.rs", "raw_url": "https://github.com/rust-lang/rust/raw/35f36808ffd28fd1195147890f49b6284bb97130/src%2Ftest%2Frun-pass%2Fissue-3563.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-3563.rs?ref=35f36808ffd28fd1195147890f49b6284bb97130", "patch": "@@ -0,0 +1,6 @@\n+// xfail-test\n+trait A {\n+  fn a(&self) {\n+    || self.b()\n+  }\n+}"}, {"sha": "236ee1b640719175b501d130a21fd52748376a0c", "filename": "src/test/run-pass/issue-3574.rs", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/35f36808ffd28fd1195147890f49b6284bb97130/src%2Ftest%2Frun-pass%2Fissue-3574.rs", "raw_url": "https://github.com/rust-lang/rust/raw/35f36808ffd28fd1195147890f49b6284bb97130/src%2Ftest%2Frun-pass%2Fissue-3574.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-3574.rs?ref=35f36808ffd28fd1195147890f49b6284bb97130", "patch": "@@ -0,0 +1,18 @@\n+// xfail-test\n+// rustc --test match_borrowed_str.rs.rs && ./match_borrowed_str.rs\n+extern mod std;\n+\n+fn compare(x: &str, y: &str) -> bool\n+{\n+    match x\n+    {\n+        \"foo\" => y == \"foo\",\n+        _ => y == \"bar\",\n+    }\n+}\n+\n+#[test]\n+fn tester()\n+{\n+    assert compare(\"foo\", \"foo\");\n+}"}, {"sha": "3f39ee314421be851b6bb59b5444a7b8b9b6864b", "filename": "src/test/run-pass/issue-3702", "status": "added", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/35f36808ffd28fd1195147890f49b6284bb97130/src%2Ftest%2Frun-pass%2Fissue-3702", "raw_url": "https://github.com/rust-lang/rust/raw/35f36808ffd28fd1195147890f49b6284bb97130/src%2Ftest%2Frun-pass%2Fissue-3702", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-3702?ref=35f36808ffd28fd1195147890f49b6284bb97130"}, {"sha": "e790b97d6189c1b4e61e554cc02dcbbf24ada540", "filename": "src/test/run-pass/issue-3702.rs", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/35f36808ffd28fd1195147890f49b6284bb97130/src%2Ftest%2Frun-pass%2Fissue-3702.rs", "raw_url": "https://github.com/rust-lang/rust/raw/35f36808ffd28fd1195147890f49b6284bb97130/src%2Ftest%2Frun-pass%2Fissue-3702.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-3702.rs?ref=35f36808ffd28fd1195147890f49b6284bb97130", "patch": "@@ -0,0 +1,12 @@\n+use io::println;\n+\n+fn main() {\n+  trait Text {\n+    fn to_str(&self) -> ~str;\n+  }\n+\n+  fn to_string(t: Text) {\n+    println(t.to_str());\n+  }\n+\n+}"}, {"sha": "3669929e13914819b7762eb18f6fa449447c2d53", "filename": "src/test/run-pass/issue-3794.rs", "status": "added", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/35f36808ffd28fd1195147890f49b6284bb97130/src%2Ftest%2Frun-pass%2Fissue-3794.rs", "raw_url": "https://github.com/rust-lang/rust/raw/35f36808ffd28fd1195147890f49b6284bb97130/src%2Ftest%2Frun-pass%2Fissue-3794.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-3794.rs?ref=35f36808ffd28fd1195147890f49b6284bb97130", "patch": "@@ -0,0 +1,30 @@\n+// xfail-test\n+trait T {\n+    fn print(&self);\n+}\n+\n+struct S {\n+    s: int,\n+}\n+\n+impl S: T {\n+    fn print(&self) {\n+        io::println(fmt!(\"%?\", self));\n+    }\n+}\n+\n+fn print_t(t: &T) {\n+    t.print();\n+}\n+\n+fn print_s(s: &S) {\n+    s.print();\n+}\n+\n+fn main() {\n+    let s: @S = @S { s: 5 };\n+    print_s(s);\n+    let t: @T = s as @T;\n+    print_t(t);\n+\n+}"}, {"sha": "da6d6aeda37523798d041088fb561c6c12e07fbb", "filename": "src/test/run-pass/issue-3860.rs", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/35f36808ffd28fd1195147890f49b6284bb97130/src%2Ftest%2Frun-pass%2Fissue-3860.rs", "raw_url": "https://github.com/rust-lang/rust/raw/35f36808ffd28fd1195147890f49b6284bb97130/src%2Ftest%2Frun-pass%2Fissue-3860.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-3860.rs?ref=35f36808ffd28fd1195147890f49b6284bb97130", "patch": "@@ -0,0 +1,19 @@\n+// xfail-test\n+struct Foo { x: int }\n+\n+impl Foo {\n+    fn stuff(&mut self) -> &self/mut Foo {\n+        return self;\n+    }\n+}\n+\n+fn main() {\n+    let mut x = @mut Foo { x: 3 };\n+    x.stuff(); // error: internal compiler error: no enclosing scope with id 49\n+    // storing the result removes the error, so replacing the above\n+    // with the following, works:\n+    // let _y = x.stuff()\n+\n+    // also making 'stuff()' not return anything fixes it\n+    // I guess the \"dangling &ptr\" cuases issues?\n+}"}, {"sha": "ff979383c1020274f9b7fccb94818ba13a7106e5", "filename": "src/test/run-pass/issue-4016", "status": "added", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/35f36808ffd28fd1195147890f49b6284bb97130/src%2Ftest%2Frun-pass%2Fissue-4016", "raw_url": "https://github.com/rust-lang/rust/raw/35f36808ffd28fd1195147890f49b6284bb97130/src%2Ftest%2Frun-pass%2Fissue-4016", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-4016?ref=35f36808ffd28fd1195147890f49b6284bb97130"}, {"sha": "1e998b1f42e3852a597b463c324e0a2d87a51546", "filename": "src/test/run-pass/issue-4016.rs", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/35f36808ffd28fd1195147890f49b6284bb97130/src%2Ftest%2Frun-pass%2Fissue-4016.rs", "raw_url": "https://github.com/rust-lang/rust/raw/35f36808ffd28fd1195147890f49b6284bb97130/src%2Ftest%2Frun-pass%2Fissue-4016.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-4016.rs?ref=35f36808ffd28fd1195147890f49b6284bb97130", "patch": "@@ -0,0 +1,17 @@\n+// xfail-test\n+extern mod std;\n+\n+use send_map::linear;\n+use std::json;\n+use std::serialization::{Deserializable, deserialize};\n+\n+trait JD : Deserializable<json::Deserializer> { }\n+//type JD = Deserializable<json::Deserializer>;\n+\n+fn exec<T: JD>() {\n+    let doc = result::unwrap(json::from_str(\"\"));\n+    let _v: T = deserialize(&json::Deserializer(move doc));\n+    fail\n+}\n+\n+fn main() {}"}, {"sha": "761b6ab4686240b187e83982a859d10e639fec11", "filename": "src/test/run-pass/issue-4092", "status": "added", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/35f36808ffd28fd1195147890f49b6284bb97130/src%2Ftest%2Frun-pass%2Fissue-4092", "raw_url": "https://github.com/rust-lang/rust/raw/35f36808ffd28fd1195147890f49b6284bb97130/src%2Ftest%2Frun-pass%2Fissue-4092", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-4092?ref=35f36808ffd28fd1195147890f49b6284bb97130"}, {"sha": "8198abb8ddc2a5713e360f4ae581eb9b5e2447db", "filename": "src/test/run-pass/issue-4092.rs", "status": "added", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/35f36808ffd28fd1195147890f49b6284bb97130/src%2Ftest%2Frun-pass%2Fissue-4092.rs", "raw_url": "https://github.com/rust-lang/rust/raw/35f36808ffd28fd1195147890f49b6284bb97130/src%2Ftest%2Frun-pass%2Fissue-4092.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-4092.rs?ref=35f36808ffd28fd1195147890f49b6284bb97130", "patch": "@@ -0,0 +1,6 @@\n+extern mod std;\n+\n+fn main() {\n+    let x = std::map::HashMap();\n+    x.insert((@\"abc\", 0), 0);\n+}"}]}