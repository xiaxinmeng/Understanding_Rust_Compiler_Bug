{"sha": "cf437a273033a16c4084acc07b1341ee86bd5bbd", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNmNDM3YTI3MzAzM2ExNmM0MDg0YWNjMDdiMTM0MWVlODZiZDViYmQ=", "commit": {"author": {"name": "blake2-ppc", "email": "blake2-ppc", "date": "2013-07-21T20:37:14Z"}, "committer": {"name": "blake2-ppc", "email": "blake2-ppc", "date": "2013-07-21T20:37:14Z"}, "message": "dlist: Remove extraneous unwrap in .pop_back_node()", "tree": {"sha": "50f0a9cf374312af1dfcc263da0bc21326a1b228", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/50f0a9cf374312af1dfcc263da0bc21326a1b228"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/cf437a273033a16c4084acc07b1341ee86bd5bbd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/cf437a273033a16c4084acc07b1341ee86bd5bbd", "html_url": "https://github.com/rust-lang/rust/commit/cf437a273033a16c4084acc07b1341ee86bd5bbd", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/cf437a273033a16c4084acc07b1341ee86bd5bbd/comments", "author": null, "committer": null, "parents": [{"sha": "21adfd564555428d0af11e7f22b42e05698d74fd", "url": "https://api.github.com/repos/rust-lang/rust/commits/21adfd564555428d0af11e7f22b42e05698d74fd", "html_url": "https://github.com/rust-lang/rust/commit/21adfd564555428d0af11e7f22b42e05698d74fd"}], "stats": {"total": 6, "additions": 3, "deletions": 3}, "files": [{"sha": "a715d4aeeaeb431543b02cc3032fe89c49f529e9", "filename": "src/libextra/dlist.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/cf437a273033a16c4084acc07b1341ee86bd5bbd/src%2Flibextra%2Fdlist.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cf437a273033a16c4084acc07b1341ee86bd5bbd/src%2Flibextra%2Fdlist.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibextra%2Fdlist.rs?ref=cf437a273033a16c4084acc07b1341ee86bd5bbd", "patch": "@@ -185,12 +185,12 @@ impl<T> DList<T> {\n     /// Remove the last Node and return it, or None if the list is empty\n     #[inline]\n     fn pop_back_node(&mut self) -> Option<~Node<T>> {\n-        do self.list_tail.resolve().map_consume |tail| {\n+        do self.list_tail.resolve().map_consume_default(None) |tail| {\n             self.length -= 1;\n             self.list_tail = tail.prev;\n             match tail.prev.resolve() {\n-                None => self.list_head.take_unwrap(),\n-                Some(tail_prev) => tail_prev.next.take_unwrap()\n+                None => self.list_head.take(),\n+                Some(tail_prev) => tail_prev.next.take()\n             }\n         }\n     }"}]}