{"sha": "6a4faa2da18330c067babb6acf9041c599c4ad27", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZhNGZhYTJkYTE4MzMwYzA2N2JhYmI2YWNmOTA0MWM1OTljNGFkMjc=", "commit": {"author": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2020-07-14T14:38:58Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-07-14T14:38:58Z"}, "message": "Rollup merge of #73965 - davidtwco:issue-73886-non-primitive-slice-cast, r=estebank\n\ntypeck: check for infer before type impls trait\n\nFixes #73886.\n\nThis PR checks that the target type of the cast (an error related to which is being reported) does not have types to be inferred before checking if it implements the `From` trait.\n\nr? @estebank", "tree": {"sha": "e25beefd7f235a24a6f4afe2bb65f6933f83a0dc", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e25beefd7f235a24a6f4afe2bb65f6933f83a0dc"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6a4faa2da18330c067babb6acf9041c599c4ad27", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJfDcODCRBK7hj4Ov3rIwAAdHIIAFFEelAKi/6jd24F5zbbw7SQ\nDAr+KJT1hqyJZWpsnshpzlz4SaOpwSAiFvujSLOjkrEKAtzDXMNk7LUcFWqKtjke\ne3j82P0nE5A2HoeO0F628zsKrJAR2R0BWmp6z5ecUPMFjJvvx0DMco08cve44IKo\n+dFk85eNmSVw5WgqdJA7BNHDJaxanJOM45urM/gMebjbI+BUH08oYcmSbHXdgJry\nNBFWsk5MpTomdtK3IOHAQ/IalV4KduCd/lvvpM46bcAVOriQ1jQ4q7yKdjpeGFqi\nPVlNBdDPL/rN/aZfqAxcQ6hf59NExeSqC7c4IvAFL6mM2MO4LplSJ4i0B304XOc=\n=bYcT\n-----END PGP SIGNATURE-----\n", "payload": "tree e25beefd7f235a24a6f4afe2bb65f6933f83a0dc\nparent 905c4e05e1355854c0c63099c70dc1359a3accc7\nparent bddb266089deb0cb879caeff1bb9aa860746e062\nauthor Manish Goregaokar <manishsmail@gmail.com> 1594737538 -0700\ncommitter GitHub <noreply@github.com> 1594737538 -0700\n\nRollup merge of #73965 - davidtwco:issue-73886-non-primitive-slice-cast, r=estebank\n\ntypeck: check for infer before type impls trait\n\nFixes #73886.\n\nThis PR checks that the target type of the cast (an error related to which is being reported) does not have types to be inferred before checking if it implements the `From` trait.\n\nr? @estebank\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6a4faa2da18330c067babb6acf9041c599c4ad27", "html_url": "https://github.com/rust-lang/rust/commit/6a4faa2da18330c067babb6acf9041c599c4ad27", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6a4faa2da18330c067babb6acf9041c599c4ad27/comments", "author": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "905c4e05e1355854c0c63099c70dc1359a3accc7", "url": "https://api.github.com/repos/rust-lang/rust/commits/905c4e05e1355854c0c63099c70dc1359a3accc7", "html_url": "https://github.com/rust-lang/rust/commit/905c4e05e1355854c0c63099c70dc1359a3accc7"}, {"sha": "bddb266089deb0cb879caeff1bb9aa860746e062", "url": "https://api.github.com/repos/rust-lang/rust/commits/bddb266089deb0cb879caeff1bb9aa860746e062", "html_url": "https://github.com/rust-lang/rust/commit/bddb266089deb0cb879caeff1bb9aa860746e062"}], "stats": {"total": 22, "additions": 22, "deletions": 0}, "files": [{"sha": "8948e5a3e00db252ad7b5253e6a8a15c6079b351", "filename": "src/librustc_typeck/check/cast.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/6a4faa2da18330c067babb6acf9041c599c4ad27/src%2Flibrustc_typeck%2Fcheck%2Fcast.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6a4faa2da18330c067babb6acf9041c599c4ad27/src%2Flibrustc_typeck%2Fcheck%2Fcast.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fcast.rs?ref=6a4faa2da18330c067babb6acf9041c599c4ad27", "patch": "@@ -387,6 +387,7 @@ impl<'a, 'tcx> CastCheck<'tcx> {\n                             // Check for infer types because cases like `Option<{integer}>` would\n                             // panic otherwise.\n                             if !expr_ty.has_infer_types()\n+                                && !ty.has_infer_types()\n                                 && fcx.tcx.type_implements_trait((\n                                     from_trait,\n                                     ty,"}, {"sha": "2f1ec8c6d6227a6e624119447f29e43bc16d1247", "filename": "src/test/ui/issues/issue-73886.rs", "status": "added", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/6a4faa2da18330c067babb6acf9041c599c4ad27/src%2Ftest%2Fui%2Fissues%2Fissue-73886.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6a4faa2da18330c067babb6acf9041c599c4ad27/src%2Ftest%2Fui%2Fissues%2Fissue-73886.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-73886.rs?ref=6a4faa2da18330c067babb6acf9041c599c4ad27", "patch": "@@ -0,0 +1,6 @@\n+fn main() {\n+    let _ = &&[0] as &[_];\n+    //~^ ERROR non-primitive cast: `&&[i32; 1]` as `&[_]`\n+    let _ = 7u32 as Option<_>;\n+    //~^ ERROR non-primitive cast: `u32` as `std::option::Option<_>`\n+}"}, {"sha": "e8ab7db6b82c2e91cea279893d7d5d58be9e1969", "filename": "src/test/ui/issues/issue-73886.stderr", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/6a4faa2da18330c067babb6acf9041c599c4ad27/src%2Ftest%2Fui%2Fissues%2Fissue-73886.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6a4faa2da18330c067babb6acf9041c599c4ad27/src%2Ftest%2Fui%2Fissues%2Fissue-73886.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-73886.stderr?ref=6a4faa2da18330c067babb6acf9041c599c4ad27", "patch": "@@ -0,0 +1,15 @@\n+error[E0605]: non-primitive cast: `&&[i32; 1]` as `&[_]`\n+  --> $DIR/issue-73886.rs:2:13\n+   |\n+LL |     let _ = &&[0] as &[_];\n+   |             ^^^^^^^^^^^^^ an `as` expression can only be used to convert between primitive types or to coerce to a specific trait object\n+\n+error[E0605]: non-primitive cast: `u32` as `std::option::Option<_>`\n+  --> $DIR/issue-73886.rs:4:13\n+   |\n+LL |     let _ = 7u32 as Option<_>;\n+   |             ^^^^^^^^^^^^^^^^^ an `as` expression can only be used to convert between primitive types or to coerce to a specific trait object\n+\n+error: aborting due to 2 previous errors\n+\n+For more information about this error, try `rustc --explain E0605`."}]}