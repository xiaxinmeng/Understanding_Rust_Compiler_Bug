{"sha": "2ee779c8393cf534414df6837333c188437fad0d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJlZTc3OWM4MzkzY2Y1MzQ0MTRkZjY4MzczMzNjMTg4NDM3ZmFkMGQ=", "commit": {"author": {"name": "Ben Blum", "email": "bblum@andrew.cmu.edu", "date": "2012-07-06T01:01:18Z"}, "committer": {"name": "Ben Blum", "email": "bblum@andrew.cmu.edu", "date": "2012-07-06T01:01:18Z"}, "message": "Add test case in task.rs for #2782", "tree": {"sha": "67e6a8fbd47761c4a2821482e36dc445e65f7d6a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/67e6a8fbd47761c4a2821482e36dc445e65f7d6a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2ee779c8393cf534414df6837333c188437fad0d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2ee779c8393cf534414df6837333c188437fad0d", "html_url": "https://github.com/rust-lang/rust/commit/2ee779c8393cf534414df6837333c188437fad0d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2ee779c8393cf534414df6837333c188437fad0d/comments", "author": {"login": "bblum", "id": 1820515, "node_id": "MDQ6VXNlcjE4MjA1MTU=", "avatar_url": "https://avatars.githubusercontent.com/u/1820515?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bblum", "html_url": "https://github.com/bblum", "followers_url": "https://api.github.com/users/bblum/followers", "following_url": "https://api.github.com/users/bblum/following{/other_user}", "gists_url": "https://api.github.com/users/bblum/gists{/gist_id}", "starred_url": "https://api.github.com/users/bblum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bblum/subscriptions", "organizations_url": "https://api.github.com/users/bblum/orgs", "repos_url": "https://api.github.com/users/bblum/repos", "events_url": "https://api.github.com/users/bblum/events{/privacy}", "received_events_url": "https://api.github.com/users/bblum/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bblum", "id": 1820515, "node_id": "MDQ6VXNlcjE4MjA1MTU=", "avatar_url": "https://avatars.githubusercontent.com/u/1820515?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bblum", "html_url": "https://github.com/bblum", "followers_url": "https://api.github.com/users/bblum/followers", "following_url": "https://api.github.com/users/bblum/following{/other_user}", "gists_url": "https://api.github.com/users/bblum/gists{/gist_id}", "starred_url": "https://api.github.com/users/bblum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bblum/subscriptions", "organizations_url": "https://api.github.com/users/bblum/orgs", "repos_url": "https://api.github.com/users/bblum/repos", "events_url": "https://api.github.com/users/bblum/events{/privacy}", "received_events_url": "https://api.github.com/users/bblum/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7b3add0632f65865159af1ee35933c4e61d41f8b", "url": "https://api.github.com/repos/rust-lang/rust/commits/7b3add0632f65865159af1ee35933c4e61d41f8b", "html_url": "https://github.com/rust-lang/rust/commit/7b3add0632f65865159af1ee35933c4e61d41f8b"}], "stats": {"total": 38, "additions": 38, "deletions": 0}, "files": [{"sha": "fd69525d63e2d315afe7d2efed374f1a7a5afd9a", "filename": "src/libcore/task.rs", "status": "modified", "additions": 38, "deletions": 0, "changes": 38, "blob_url": "https://github.com/rust-lang/rust/blob/2ee779c8393cf534414df6837333c188437fad0d/src%2Flibcore%2Ftask.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2ee779c8393cf534414df6837333c188437fad0d/src%2Flibcore%2Ftask.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Ftask.rs?ref=2ee779c8393cf534414df6837333c188437fad0d", "patch": "@@ -1206,6 +1206,44 @@ fn test_unkillable() {\n     po.recv();\n }\n \n+#[test]\n+#[ignore(cfg(windows))]\n+#[should_fail]\n+fn test_unkillable_nested() {\n+    import comm::methods;\n+    let po = comm::port();\n+    let ch = po.chan();\n+\n+    // We want to do this after failing\n+    do spawn {\n+        for iter::repeat(10u) { yield() }\n+        ch.send(());\n+    }\n+\n+    do spawn {\n+        yield();\n+        // We want to fail after the unkillable task\n+        // blocks on recv\n+        fail;\n+    }\n+\n+    unsafe {\n+        do unkillable {\n+            do unkillable {} // Here's the difference from the previous test.\n+            let p = ~0;\n+            let pp: *uint = unsafe::transmute(p);\n+\n+            // If we are killed here then the box will leak\n+            po.recv();\n+\n+            let _p: ~int = unsafe::transmute(pp);\n+        }\n+    }\n+\n+    // Now we can be killed\n+    po.recv();\n+}\n+\n #[test]\n fn test_tls_multitask() unsafe {\n     fn my_key(+_x: @str) { }"}]}