{"sha": "87edd75ecf26c9084969f431bb5e363693a8a4ca", "node_id": "MDY6Q29tbWl0NzI0NzEyOjg3ZWRkNzVlY2YyNmM5MDg0OTY5ZjQzMWJiNWUzNjM2OTNhOGE0Y2E=", "commit": {"author": {"name": "Nick Cameron", "email": "ncameron@mozilla.com", "date": "2018-06-22T02:41:17Z"}, "committer": {"name": "Nick Cameron", "email": "ncameron@mozilla.com", "date": "2018-06-22T02:42:27Z"}, "message": "TODO -> FIXME\n\nOr just delete\n\nCloses #25", "tree": {"sha": "d79f1eb6b1c5e5ac2017dd335ecc2f84b56cd3a6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d79f1eb6b1c5e5ac2017dd335ecc2f84b56cd3a6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/87edd75ecf26c9084969f431bb5e363693a8a4ca", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/87edd75ecf26c9084969f431bb5e363693a8a4ca", "html_url": "https://github.com/rust-lang/rust/commit/87edd75ecf26c9084969f431bb5e363693a8a4ca", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/87edd75ecf26c9084969f431bb5e363693a8a4ca/comments", "author": {"login": "nrc", "id": 762626, "node_id": "MDQ6VXNlcjc2MjYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/762626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nrc", "html_url": "https://github.com/nrc", "followers_url": "https://api.github.com/users/nrc/followers", "following_url": "https://api.github.com/users/nrc/following{/other_user}", "gists_url": "https://api.github.com/users/nrc/gists{/gist_id}", "starred_url": "https://api.github.com/users/nrc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nrc/subscriptions", "organizations_url": "https://api.github.com/users/nrc/orgs", "repos_url": "https://api.github.com/users/nrc/repos", "events_url": "https://api.github.com/users/nrc/events{/privacy}", "received_events_url": "https://api.github.com/users/nrc/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nrc", "id": 762626, "node_id": "MDQ6VXNlcjc2MjYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/762626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nrc", "html_url": "https://github.com/nrc", "followers_url": "https://api.github.com/users/nrc/followers", "following_url": "https://api.github.com/users/nrc/following{/other_user}", "gists_url": "https://api.github.com/users/nrc/gists{/gist_id}", "starred_url": "https://api.github.com/users/nrc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nrc/subscriptions", "organizations_url": "https://api.github.com/users/nrc/orgs", "repos_url": "https://api.github.com/users/nrc/repos", "events_url": "https://api.github.com/users/nrc/events{/privacy}", "received_events_url": "https://api.github.com/users/nrc/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5c1884eacf791722e2d06d8e1eb113bc9207492b", "url": "https://api.github.com/repos/rust-lang/rust/commits/5c1884eacf791722e2d06d8e1eb113bc9207492b", "html_url": "https://github.com/rust-lang/rust/commit/5c1884eacf791722e2d06d8e1eb113bc9207492b"}], "stats": {"total": 16, "additions": 5, "deletions": 11}, "files": [{"sha": "f64e428c221cd8d2198d7b71eadaacf56b1b16f0", "filename": "src/filemap.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/87edd75ecf26c9084969f431bb5e363693a8a4ca/src%2Ffilemap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/87edd75ecf26c9084969f431bb5e363693a8a4ca/src%2Ffilemap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ffilemap.rs?ref=87edd75ecf26c9084969f431bb5e363693a8a4ca", "patch": "@@ -8,8 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// TODO: add tests\n-\n use std::fs;\n use std::io::{self, Write};\n "}, {"sha": "37ad4f35a1d1027f863f62d9f9b63f1ec7be5be0", "filename": "src/format-diff/main.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/87edd75ecf26c9084969f431bb5e363693a8a4ca/src%2Fformat-diff%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/87edd75ecf26c9084969f431bb5e363693a8a4ca/src%2Fformat-diff%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fformat-diff%2Fmain.rs?ref=87edd75ecf26c9084969f431bb5e363693a8a4ca", "patch": "@@ -175,7 +175,7 @@ where\n             None => continue,\n         };\n \n-        // TODO(emilio): We could avoid this most of the time if needed, but\n+        // FIXME(emilio): We could avoid this most of the time if needed, but\n         // it's not clear it's worth it.\n         if !file_filter.is_match(file) {\n             continue;"}, {"sha": "507ea09a8fed8fa78912f44330c178a43d26e306", "filename": "src/items.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/87edd75ecf26c9084969f431bb5e363693a8a4ca/src%2Fitems.rs", "raw_url": "https://github.com/rust-lang/rust/raw/87edd75ecf26c9084969f431bb5e363693a8a4ca/src%2Fitems.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fitems.rs?ref=87edd75ecf26c9084969f431bb5e363693a8a4ca", "patch": "@@ -125,8 +125,8 @@ impl Rewrite for ast::Local {\n     }\n }\n \n-// TODO convert to using rewrite style rather than visitor\n-// TODO format modules in this style\n+// FIXME convert to using rewrite style rather than visitor\n+// FIXME format modules in this style\n #[allow(dead_code)]\n struct Item<'a> {\n     keyword: &'static str,"}, {"sha": "3b49a27ccef0cbbe0895734554071378c113a0a7", "filename": "src/lists.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/87edd75ecf26c9084969f431bb5e363693a8a4ca/src%2Flists.rs", "raw_url": "https://github.com/rust-lang/rust/raw/87edd75ecf26c9084969f431bb5e363693a8a4ca/src%2Flists.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flists.rs?ref=87edd75ecf26c9084969f431bb5e363693a8a4ca", "patch": "@@ -212,7 +212,6 @@ where\n }\n \n // Format a list of commented items into a string.\n-// TODO: add unit tests\n pub fn write_list<I, T>(items: I, formatting: &ListFormatting) -> Option<String>\n where\n     I: IntoIterator<Item = T> + Clone,"}, {"sha": "512c3ac1c56eabf60243a3b60322ac30f126bc0a", "filename": "src/macros.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/87edd75ecf26c9084969f431bb5e363693a8a4ca/src%2Fmacros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/87edd75ecf26c9084969f431bb5e363693a8a4ca/src%2Fmacros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fmacros.rs?ref=87edd75ecf26c9084969f431bb5e363693a8a4ca", "patch": "@@ -192,7 +192,6 @@ pub fn rewrite_macro_inner(\n         };\n     }\n     // Format well-known macros which cannot be parsed as a valid AST.\n-    // TODO: Maybe add more macros?\n     if macro_name == \"lazy_static!\" && !has_comment {\n         if let success @ Some(..) = format_lazy_static(context, shape, &ts) {\n             return success;"}, {"sha": "70d4c66d7fbbd9dbf912a77d71f1ee7c2d7d5a2e", "filename": "src/missed_spans.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/87edd75ecf26c9084969f431bb5e363693a8a4ca/src%2Fmissed_spans.rs", "raw_url": "https://github.com/rust-lang/rust/raw/87edd75ecf26c9084969f431bb5e363693a8a4ca/src%2Fmissed_spans.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fmissed_spans.rs?ref=87edd75ecf26c9084969f431bb5e363693a8a4ca", "patch": "@@ -43,8 +43,6 @@ impl<'a> FmtVisitor<'a> {\n         self.buffer.is_empty()\n     }\n \n-    // TODO these format_missing methods are ugly. Refactor and add unit tests\n-    // for the central whitespace stripping loop.\n     pub fn format_missing(&mut self, end: BytePos) {\n         // HACK(topecongiro)\n         // We use `format_missing()` to extract a missing comment between a macro"}, {"sha": "3d2b098781de1d4d66f50263b0b57d1b5c1fad5b", "filename": "src/reorder.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/87edd75ecf26c9084969f431bb5e363693a8a4ca/src%2Freorder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/87edd75ecf26c9084969f431bb5e363693a8a4ca/src%2Freorder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Freorder.rs?ref=87edd75ecf26c9084969f431bb5e363693a8a4ca", "patch": "@@ -14,7 +14,7 @@\n //! order. Trait items are reordered in pre-determined order (associated types\n //! and constants comes before methods).\n \n-// TODO(#2455): Reorder trait items.\n+// FIXME(#2455): Reorder trait items.\n \n use config::{lists::*, Config};\n use syntax::{ast, attr, codemap::Span};"}, {"sha": "6e55059468009ec61a01f5316caf41e048175cf4", "filename": "src/types.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/87edd75ecf26c9084969f431bb5e363693a8a4ca/src%2Ftypes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/87edd75ecf26c9084969f431bb5e363693a8a4ca/src%2Ftypes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftypes.rs?ref=87edd75ecf26c9084969f431bb5e363693a8a4ca", "patch": "@@ -418,7 +418,7 @@ fn type_bound_colon(context: &RewriteContext) -> &'static str {\n \n impl Rewrite for ast::WherePredicate {\n     fn rewrite(&self, context: &RewriteContext, shape: Shape) -> Option<String> {\n-        // TODO: dead spans?\n+        // FIXME: dead spans?\n         let result = match *self {\n             ast::WherePredicate::BoundPredicate(ast::WhereBoundPredicate {\n                 ref bound_generic_params,"}]}