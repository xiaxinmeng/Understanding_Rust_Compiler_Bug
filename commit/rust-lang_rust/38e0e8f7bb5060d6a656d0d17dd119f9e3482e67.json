{"sha": "38e0e8f7bb5060d6a656d0d17dd119f9e3482e67", "node_id": "C_kwDOAAsO6NoAKDM4ZTBlOGY3YmI1MDYwZDZhNjU2ZDBkMTdkZDExOWY5ZTM0ODJlNjc", "commit": {"author": {"name": "Josh Stone", "email": "jistone@redhat.com", "date": "2022-09-16T23:37:17Z"}, "committer": {"name": "Josh Stone", "email": "jistone@redhat.com", "date": "2022-09-18T20:26:03Z"}, "message": "Remove -Znew-llvm-pass-manager", "tree": {"sha": "f3656bda20aad7ac5321eae2be0b775524adeb96", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f3656bda20aad7ac5321eae2be0b775524adeb96"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/38e0e8f7bb5060d6a656d0d17dd119f9e3482e67", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/38e0e8f7bb5060d6a656d0d17dd119f9e3482e67", "html_url": "https://github.com/rust-lang/rust/commit/38e0e8f7bb5060d6a656d0d17dd119f9e3482e67", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/38e0e8f7bb5060d6a656d0d17dd119f9e3482e67/comments", "author": {"login": "cuviper", "id": 36186, "node_id": "MDQ6VXNlcjM2MTg2", "avatar_url": "https://avatars.githubusercontent.com/u/36186?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cuviper", "html_url": "https://github.com/cuviper", "followers_url": "https://api.github.com/users/cuviper/followers", "following_url": "https://api.github.com/users/cuviper/following{/other_user}", "gists_url": "https://api.github.com/users/cuviper/gists{/gist_id}", "starred_url": "https://api.github.com/users/cuviper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cuviper/subscriptions", "organizations_url": "https://api.github.com/users/cuviper/orgs", "repos_url": "https://api.github.com/users/cuviper/repos", "events_url": "https://api.github.com/users/cuviper/events{/privacy}", "received_events_url": "https://api.github.com/users/cuviper/received_events", "type": "User", "site_admin": false}, "committer": {"login": "cuviper", "id": 36186, "node_id": "MDQ6VXNlcjM2MTg2", "avatar_url": "https://avatars.githubusercontent.com/u/36186?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cuviper", "html_url": "https://github.com/cuviper", "followers_url": "https://api.github.com/users/cuviper/followers", "following_url": "https://api.github.com/users/cuviper/following{/other_user}", "gists_url": "https://api.github.com/users/cuviper/gists{/gist_id}", "starred_url": "https://api.github.com/users/cuviper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cuviper/subscriptions", "organizations_url": "https://api.github.com/users/cuviper/orgs", "repos_url": "https://api.github.com/users/cuviper/repos", "events_url": "https://api.github.com/users/cuviper/events{/privacy}", "received_events_url": "https://api.github.com/users/cuviper/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2860f77a0dd30d7edbb374fff49b39b096e298fd", "url": "https://api.github.com/repos/rust-lang/rust/commits/2860f77a0dd30d7edbb374fff49b39b096e298fd", "html_url": "https://github.com/rust-lang/rust/commit/2860f77a0dd30d7edbb374fff49b39b096e298fd"}], "stats": {"total": 16, "additions": 3, "deletions": 13}, "files": [{"sha": "92a44a9f426c79dc8d15f418ba0de6bf67cfaf92", "filename": "compiler/rustc_codegen_llvm/src/back/write.rs", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/38e0e8f7bb5060d6a656d0d17dd119f9e3482e67/compiler%2Frustc_codegen_llvm%2Fsrc%2Fback%2Fwrite.rs", "raw_url": "https://github.com/rust-lang/rust/raw/38e0e8f7bb5060d6a656d0d17dd119f9e3482e67/compiler%2Frustc_codegen_llvm%2Fsrc%2Fback%2Fwrite.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_llvm%2Fsrc%2Fback%2Fwrite.rs?ref=38e0e8f7bb5060d6a656d0d17dd119f9e3482e67", "patch": "@@ -513,10 +513,6 @@ pub(crate) unsafe fn maybe_optimize(\n     let module_name = module.name.clone();\n     let module_name = Some(&module_name[..]);\n \n-    if let Some(false) = config.new_llvm_pass_manager {\n-        diag_handler.warn(\"ignoring `-Z new-llvm-pass-manager=no`, which is no longer supported\");\n-    }\n-\n     if config.emit_no_opt_bc {\n         let out = cgcx.output_filenames.temp_path_ext(\"no-opt.bc\", module_name);\n         let out = path_to_c_string(&out);"}, {"sha": "680b9b642d9b279bec3e16689c27787f83db823f", "filename": "compiler/rustc_codegen_ssa/src/back/write.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/38e0e8f7bb5060d6a656d0d17dd119f9e3482e67/compiler%2Frustc_codegen_ssa%2Fsrc%2Fback%2Fwrite.rs", "raw_url": "https://github.com/rust-lang/rust/raw/38e0e8f7bb5060d6a656d0d17dd119f9e3482e67/compiler%2Frustc_codegen_ssa%2Fsrc%2Fback%2Fwrite.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_ssa%2Fsrc%2Fback%2Fwrite.rs?ref=38e0e8f7bb5060d6a656d0d17dd119f9e3482e67", "patch": "@@ -113,7 +113,6 @@ pub struct ModuleConfig {\n     pub vectorize_slp: bool,\n     pub merge_functions: bool,\n     pub inline_threshold: Option<u32>,\n-    pub new_llvm_pass_manager: Option<bool>,\n     pub emit_lifetime_markers: bool,\n     pub llvm_plugins: Vec<String>,\n }\n@@ -265,7 +264,6 @@ impl ModuleConfig {\n             },\n \n             inline_threshold: sess.opts.cg.inline_threshold,\n-            new_llvm_pass_manager: sess.opts.unstable_opts.new_llvm_pass_manager,\n             emit_lifetime_markers: sess.emit_lifetime_markers(),\n             llvm_plugins: if_regular!(sess.opts.unstable_opts.llvm_plugins.clone(), vec![]),\n         }"}, {"sha": "2cd959689e6cf27f0ef24b77be1887c7367ca68d", "filename": "compiler/rustc_interface/src/tests.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/38e0e8f7bb5060d6a656d0d17dd119f9e3482e67/compiler%2Frustc_interface%2Fsrc%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/38e0e8f7bb5060d6a656d0d17dd119f9e3482e67/compiler%2Frustc_interface%2Fsrc%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_interface%2Fsrc%2Ftests.rs?ref=38e0e8f7bb5060d6a656d0d17dd119f9e3482e67", "patch": "@@ -758,7 +758,6 @@ fn test_unstable_options_tracking_hash() {\n     tracked!(mir_opt_level, Some(4));\n     tracked!(move_size_limit, Some(4096));\n     tracked!(mutable_noalias, Some(true));\n-    tracked!(new_llvm_pass_manager, Some(true));\n     tracked!(no_generate_arange_section, true);\n     tracked!(no_link, true);\n     tracked!(no_unique_section_names, true);"}, {"sha": "486c514a4f5c21842befb145c8aa95d7bdc274fb", "filename": "compiler/rustc_session/src/options.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/38e0e8f7bb5060d6a656d0d17dd119f9e3482e67/compiler%2Frustc_session%2Fsrc%2Foptions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/38e0e8f7bb5060d6a656d0d17dd119f9e3482e67/compiler%2Frustc_session%2Fsrc%2Foptions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_session%2Fsrc%2Foptions.rs?ref=38e0e8f7bb5060d6a656d0d17dd119f9e3482e67", "patch": "@@ -1409,8 +1409,6 @@ options! {\n         \"the size at which the `large_assignments` lint starts to be emitted\"),\n     mutable_noalias: Option<bool> = (None, parse_opt_bool, [TRACKED],\n         \"emit noalias metadata for mutable references (default: yes)\"),\n-    new_llvm_pass_manager: Option<bool> = (None, parse_opt_bool, [TRACKED],\n-        \"use new LLVM pass manager (default: no)\"),\n     nll_facts: bool = (false, parse_bool, [UNTRACKED],\n         \"dump facts from NLL analysis into side files (default: no)\"),\n     nll_facts_dir: String = (\"nll-facts\".to_string(), parse_string, [UNTRACKED],"}, {"sha": "b7d60409e00062b9a3b658b7a2840bc050ede4fe", "filename": "src/doc/unstable-book/src/compiler-flags/self-profile-events.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/38e0e8f7bb5060d6a656d0d17dd119f9e3482e67/src%2Fdoc%2Funstable-book%2Fsrc%2Fcompiler-flags%2Fself-profile-events.md", "raw_url": "https://github.com/rust-lang/rust/raw/38e0e8f7bb5060d6a656d0d17dd119f9e3482e67/src%2Fdoc%2Funstable-book%2Fsrc%2Fcompiler-flags%2Fself-profile-events.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Funstable-book%2Fsrc%2Fcompiler-flags%2Fself-profile-events.md?ref=38e0e8f7bb5060d6a656d0d17dd119f9e3482e67", "patch": "@@ -41,7 +41,7 @@ $ rustc -Zself-profile -Zself-profile-events=default,args\n \n - `llvm`\n   - Adds tracing information about LLVM passes and codegeneration.\n-  - Disabled by default because this only works when `-Znew-llvm-pass-manager` is enabled.\n+  - Disabled by default for historical reasons.\n \n ## Event synonyms\n "}, {"sha": "25d5c6e4ad2b980b2250acb79e038edd4ea949d2", "filename": "src/test/rustdoc-ui/z-help.stdout", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/38e0e8f7bb5060d6a656d0d17dd119f9e3482e67/src%2Ftest%2Frustdoc-ui%2Fz-help.stdout", "raw_url": "https://github.com/rust-lang/rust/raw/38e0e8f7bb5060d6a656d0d17dd119f9e3482e67/src%2Ftest%2Frustdoc-ui%2Fz-help.stdout", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-ui%2Fz-help.stdout?ref=38e0e8f7bb5060d6a656d0d17dd119f9e3482e67", "patch": "@@ -82,7 +82,6 @@\n     -Z                           mir-opt-level=val -- MIR optimization level (0-4; default: 1 in non optimized builds and 2 in optimized builds)\n     -Z                         move-size-limit=val -- the size at which the `large_assignments` lint starts to be emitted\n     -Z                         mutable-noalias=val -- emit noalias metadata for mutable references (default: yes)\n-    -Z                   new-llvm-pass-manager=val -- use new LLVM pass manager (default: no)\n     -Z                               nll-facts=val -- dump facts from NLL analysis into side files (default: no)\n     -Z                           nll-facts-dir=val -- the directory the NLL facts are dumped into (default: `nll-facts`)\n     -Z                             no-analysis=val -- parse and expand the source, but run no analysis"}, {"sha": "ee28f5eb6d665fe80e15f379b6c62fdc50f933b6", "filename": "src/test/ui/invalid/invalid-llvm-passes.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/38e0e8f7bb5060d6a656d0d17dd119f9e3482e67/src%2Ftest%2Fui%2Finvalid%2Finvalid-llvm-passes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/38e0e8f7bb5060d6a656d0d17dd119f9e3482e67/src%2Ftest%2Fui%2Finvalid%2Finvalid-llvm-passes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Finvalid%2Finvalid-llvm-passes.rs?ref=38e0e8f7bb5060d6a656d0d17dd119f9e3482e67", "patch": "@@ -1,4 +1,4 @@\n // build-fail\n-// compile-flags: -Cpasses=unknown-pass -Z new-llvm-pass-manager=yes\n+// compile-flags: -Cpasses=unknown-pass\n \n fn main() {}"}, {"sha": "33e18e35522ec2b93cec0f3bf499e3b98e18bcf1", "filename": "src/test/ui/sanitize/new-llvm-pass-manager-thin-lto.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/38e0e8f7bb5060d6a656d0d17dd119f9e3482e67/src%2Ftest%2Fui%2Fsanitize%2Fnew-llvm-pass-manager-thin-lto.rs", "raw_url": "https://github.com/rust-lang/rust/raw/38e0e8f7bb5060d6a656d0d17dd119f9e3482e67/src%2Ftest%2Fui%2Fsanitize%2Fnew-llvm-pass-manager-thin-lto.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsanitize%2Fnew-llvm-pass-manager-thin-lto.rs?ref=38e0e8f7bb5060d6a656d0d17dd119f9e3482e67", "patch": "@@ -7,7 +7,7 @@\n //\n // no-prefer-dynamic\n // revisions: opt0 opt1\n-// compile-flags: -Znew-llvm-pass-manager=yes -Zsanitizer=address -Clto=thin\n+// compile-flags: -Zsanitizer=address -Clto=thin\n //[opt0]compile-flags: -Copt-level=0\n //[opt1]compile-flags: -Copt-level=1\n // run-fail"}]}