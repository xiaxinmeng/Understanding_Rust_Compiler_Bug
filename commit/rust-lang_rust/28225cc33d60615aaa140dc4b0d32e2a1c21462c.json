{"sha": "28225cc33d60615aaa140dc4b0d32e2a1c21462c", "node_id": "C_kwDOAAsO6NoAKDI4MjI1Y2MzM2Q2MDYxNWFhYTE0MGRjNGIwZDMyZTJhMWMyMTQ2MmM", "commit": {"author": {"name": "DropDemBits", "email": "r3usrlnd@gmail.com", "date": "2023-03-18T15:41:38Z"}, "committer": {"name": "DropDemBits", "email": "r3usrlnd@gmail.com", "date": "2023-03-21T15:48:32Z"}, "message": "internal: Coalesce adjacent Indels", "tree": {"sha": "13e1506af478d208550ed01467934cd56a132cd6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/13e1506af478d208550ed01467934cd56a132cd6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/28225cc33d60615aaa140dc4b0d32e2a1c21462c", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niHUEABYKAB0WIQTeuYGhWxN6R+Ctnb9/4CpsHt+gdQUCZBnR1QAKCRB/4CpsHt+g\ndeolAP9893zHY+JlaHGzOmjMTyUr1rZp4Kys+hcvON4OHSBUwAEAk3Kaw326yZZE\ntdOml1CHIMaPfRN2H1wFFVtOQ6ny3w4=\n=50UI\n-----END PGP SIGNATURE-----", "payload": "tree 13e1506af478d208550ed01467934cd56a132cd6\nparent 924d277f32b53219fcaa03226c17b485a081ed16\nauthor DropDemBits <r3usrlnd@gmail.com> 1679154098 -0400\ncommitter DropDemBits <r3usrlnd@gmail.com> 1679413712 -0400\n\ninternal: Coalesce adjacent Indels\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/28225cc33d60615aaa140dc4b0d32e2a1c21462c", "html_url": "https://github.com/rust-lang/rust/commit/28225cc33d60615aaa140dc4b0d32e2a1c21462c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/28225cc33d60615aaa140dc4b0d32e2a1c21462c/comments", "author": {"login": "DropDemBits", "id": 13354275, "node_id": "MDQ6VXNlcjEzMzU0Mjc1", "avatar_url": "https://avatars.githubusercontent.com/u/13354275?v=4", "gravatar_id": "", "url": "https://api.github.com/users/DropDemBits", "html_url": "https://github.com/DropDemBits", "followers_url": "https://api.github.com/users/DropDemBits/followers", "following_url": "https://api.github.com/users/DropDemBits/following{/other_user}", "gists_url": "https://api.github.com/users/DropDemBits/gists{/gist_id}", "starred_url": "https://api.github.com/users/DropDemBits/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/DropDemBits/subscriptions", "organizations_url": "https://api.github.com/users/DropDemBits/orgs", "repos_url": "https://api.github.com/users/DropDemBits/repos", "events_url": "https://api.github.com/users/DropDemBits/events{/privacy}", "received_events_url": "https://api.github.com/users/DropDemBits/received_events", "type": "User", "site_admin": false}, "committer": {"login": "DropDemBits", "id": 13354275, "node_id": "MDQ6VXNlcjEzMzU0Mjc1", "avatar_url": "https://avatars.githubusercontent.com/u/13354275?v=4", "gravatar_id": "", "url": "https://api.github.com/users/DropDemBits", "html_url": "https://github.com/DropDemBits", "followers_url": "https://api.github.com/users/DropDemBits/followers", "following_url": "https://api.github.com/users/DropDemBits/following{/other_user}", "gists_url": "https://api.github.com/users/DropDemBits/gists{/gist_id}", "starred_url": "https://api.github.com/users/DropDemBits/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/DropDemBits/subscriptions", "organizations_url": "https://api.github.com/users/DropDemBits/orgs", "repos_url": "https://api.github.com/users/DropDemBits/repos", "events_url": "https://api.github.com/users/DropDemBits/events{/privacy}", "received_events_url": "https://api.github.com/users/DropDemBits/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "924d277f32b53219fcaa03226c17b485a081ed16", "url": "https://api.github.com/repos/rust-lang/rust/commits/924d277f32b53219fcaa03226c17b485a081ed16", "html_url": "https://github.com/rust-lang/rust/commit/924d277f32b53219fcaa03226c17b485a081ed16"}], "stats": {"total": 52, "additions": 52, "deletions": 0}, "files": [{"sha": "4705d18187af8f3ac92477a9ecc90d556aa6ee45", "filename": "crates/text-edit/src/lib.rs", "status": "modified", "additions": 52, "deletions": 0, "changes": 52, "blob_url": "https://github.com/rust-lang/rust/blob/28225cc33d60615aaa140dc4b0d32e2a1c21462c/crates%2Ftext-edit%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/28225cc33d60615aaa140dc4b0d32e2a1c21462c/crates%2Ftext-edit%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Ftext-edit%2Fsrc%2Flib.rs?ref=28225cc33d60615aaa140dc4b0d32e2a1c21462c", "patch": "@@ -176,6 +176,7 @@ impl TextEditBuilder {\n     pub fn finish(self) -> TextEdit {\n         let mut indels = self.indels;\n         assert_disjoint_or_equal(&mut indels);\n+        indels = coalesce_indels(indels);\n         TextEdit { indels }\n     }\n     pub fn invalidates_offset(&self, offset: TextSize) -> bool {\n@@ -205,6 +206,21 @@ where\n     indels.clone().zip(indels.skip(1)).all(|(l, r)| l.delete.end() <= r.delete.start() || l == r)\n }\n \n+fn coalesce_indels(indels: Vec<Indel>) -> Vec<Indel> {\n+    indels\n+        .into_iter()\n+        .coalesce(|mut a, b| {\n+            if a.delete.end() == b.delete.start() {\n+                a.insert.push_str(&b.insert);\n+                a.delete = TextRange::new(a.delete.start(), b.delete.end());\n+                Ok(a)\n+            } else {\n+                Err((a, b))\n+            }\n+        })\n+        .collect_vec()\n+}\n+\n #[cfg(test)]\n mod tests {\n     use super::{TextEdit, TextEditBuilder, TextRange};\n@@ -261,4 +277,40 @@ mod tests {\n         let edit2 = TextEdit::delete(range(9, 13));\n         assert!(edit1.union(edit2).is_err());\n     }\n+\n+    #[test]\n+    fn test_coalesce_disjoint() {\n+        let mut builder = TextEditBuilder::default();\n+        builder.replace(range(1, 3), \"aa\".into());\n+        builder.replace(range(5, 7), \"bb\".into());\n+        let edit = builder.finish();\n+\n+        assert_eq!(edit.indels.len(), 2);\n+    }\n+\n+    #[test]\n+    fn test_coalesce_adjacent() {\n+        let mut builder = TextEditBuilder::default();\n+        builder.replace(range(1, 3), \"aa\".into());\n+        builder.replace(range(3, 5), \"bb\".into());\n+\n+        let edit = builder.finish();\n+        assert_eq!(edit.indels.len(), 1);\n+        assert_eq!(edit.indels[0].insert, \"aabb\");\n+        assert_eq!(edit.indels[0].delete, range(1, 5));\n+    }\n+\n+    #[test]\n+    fn test_coalesce_adjacent_series() {\n+        let mut builder = TextEditBuilder::default();\n+        builder.replace(range(1, 3), \"au\".into());\n+        builder.replace(range(3, 5), \"www\".into());\n+        builder.replace(range(5, 8), \"\".into());\n+        builder.replace(range(8, 9), \"ub\".into());\n+\n+        let edit = builder.finish();\n+        assert_eq!(edit.indels.len(), 1);\n+        assert_eq!(edit.indels[0].insert, \"auwwwub\");\n+        assert_eq!(edit.indels[0].delete, range(1, 9));\n+    }\n }"}]}