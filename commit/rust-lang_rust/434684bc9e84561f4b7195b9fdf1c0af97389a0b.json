{"sha": "434684bc9e84561f4b7195b9fdf1c0af97389a0b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQzNDY4NGJjOWU4NDU2MWY0YjcxOTViOWZkZjFjMGFmOTczODlhMGI=", "commit": {"author": {"name": "Mihnea Dobrescu-Balaur", "email": "mihnea@linux.com", "date": "2015-06-14T11:33:31Z"}, "committer": {"name": "Mihnea Dobrescu-Balaur", "email": "mihnea@linux.com", "date": "2015-06-14T11:35:44Z"}, "message": "Find type of orphan methods for rustdoc search.", "tree": {"sha": "39b82707cab1142bc02f146b7261f43cb5b52e75", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/39b82707cab1142bc02f146b7261f43cb5b52e75"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/434684bc9e84561f4b7195b9fdf1c0af97389a0b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/434684bc9e84561f4b7195b9fdf1c0af97389a0b", "html_url": "https://github.com/rust-lang/rust/commit/434684bc9e84561f4b7195b9fdf1c0af97389a0b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/434684bc9e84561f4b7195b9fdf1c0af97389a0b/comments", "author": {"login": "mihneadb", "id": 643127, "node_id": "MDQ6VXNlcjY0MzEyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/643127?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mihneadb", "html_url": "https://github.com/mihneadb", "followers_url": "https://api.github.com/users/mihneadb/followers", "following_url": "https://api.github.com/users/mihneadb/following{/other_user}", "gists_url": "https://api.github.com/users/mihneadb/gists{/gist_id}", "starred_url": "https://api.github.com/users/mihneadb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mihneadb/subscriptions", "organizations_url": "https://api.github.com/users/mihneadb/orgs", "repos_url": "https://api.github.com/users/mihneadb/repos", "events_url": "https://api.github.com/users/mihneadb/events{/privacy}", "received_events_url": "https://api.github.com/users/mihneadb/received_events", "type": "User", "site_admin": false}, "committer": {"login": "mihneadb", "id": 643127, "node_id": "MDQ6VXNlcjY0MzEyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/643127?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mihneadb", "html_url": "https://github.com/mihneadb", "followers_url": "https://api.github.com/users/mihneadb/followers", "following_url": "https://api.github.com/users/mihneadb/following{/other_user}", "gists_url": "https://api.github.com/users/mihneadb/gists{/gist_id}", "starred_url": "https://api.github.com/users/mihneadb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mihneadb/subscriptions", "organizations_url": "https://api.github.com/users/mihneadb/orgs", "repos_url": "https://api.github.com/users/mihneadb/repos", "events_url": "https://api.github.com/users/mihneadb/events{/privacy}", "received_events_url": "https://api.github.com/users/mihneadb/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "043f93f2782b617a4aad8e0c0f0afc8e90716739", "url": "https://api.github.com/repos/rust-lang/rust/commits/043f93f2782b617a4aad8e0c0f0afc8e90716739", "html_url": "https://github.com/rust-lang/rust/commit/043f93f2782b617a4aad8e0c0f0afc8e90716739"}], "stats": {"total": 4, "additions": 3, "deletions": 1}, "files": [{"sha": "0080b5e5f223f6af1b6abf306d9a1b2ad7427a24", "filename": "src/librustdoc/html/render.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/434684bc9e84561f4b7195b9fdf1c0af97389a0b/src%2Flibrustdoc%2Fhtml%2Frender.rs", "raw_url": "https://github.com/rust-lang/rust/raw/434684bc9e84561f4b7195b9fdf1c0af97389a0b/src%2Flibrustdoc%2Fhtml%2Frender.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Frender.rs?ref=434684bc9e84561f4b7195b9fdf1c0af97389a0b", "patch": "@@ -456,13 +456,15 @@ fn build_index(krate: &clean::Crate, cache: &mut Cache) -> io::Result<String> {\n             let did = ast_util::local_def(pid);\n             match paths.get(&did) {\n                 Some(&(ref fqp, _)) => {\n+                    // Needed to determine `self` type.\n+                    let parent_basename = Some(fqp[fqp.len() - 1].clone());\n                     search_index.push(IndexItem {\n                         ty: shortty(item),\n                         name: item.name.clone().unwrap(),\n                         path: fqp[..fqp.len() - 1].connect(\"::\"),\n                         desc: shorter(item.doc_value()),\n                         parent: Some(did),\n-                        search_type: None,\n+                        search_type: get_index_search_type(&item, parent_basename),\n                     });\n                 },\n                 None => {}"}]}