{"sha": "f2610cbd7e4bfa4834d70cd92c5c4331c99a8ce0", "node_id": "MDY6Q29tbWl0NzI0NzEyOmYyNjEwY2JkN2U0YmZhNDgzNGQ3MGNkOTJjNWM0MzMxYzk5YThjZTA=", "commit": {"author": {"name": "Lukas Wirth", "email": "lukastw97@gmail.com", "date": "2021-03-14T19:16:02Z"}, "committer": {"name": "Lukas Wirth", "email": "lukastw97@gmail.com", "date": "2021-03-14T19:38:26Z"}, "message": "Don't drop type params in doc-test paths", "tree": {"sha": "5080987bd35dfdf366e3e81e610e4f9a0309adcb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5080987bd35dfdf366e3e81e610e4f9a0309adcb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f2610cbd7e4bfa4834d70cd92c5c4331c99a8ce0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f2610cbd7e4bfa4834d70cd92c5c4331c99a8ce0", "html_url": "https://github.com/rust-lang/rust/commit/f2610cbd7e4bfa4834d70cd92c5c4331c99a8ce0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f2610cbd7e4bfa4834d70cd92c5c4331c99a8ce0/comments", "author": {"login": "Veykril", "id": 3757771, "node_id": "MDQ6VXNlcjM3NTc3NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/3757771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veykril", "html_url": "https://github.com/Veykril", "followers_url": "https://api.github.com/users/Veykril/followers", "following_url": "https://api.github.com/users/Veykril/following{/other_user}", "gists_url": "https://api.github.com/users/Veykril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veykril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veykril/subscriptions", "organizations_url": "https://api.github.com/users/Veykril/orgs", "repos_url": "https://api.github.com/users/Veykril/repos", "events_url": "https://api.github.com/users/Veykril/events{/privacy}", "received_events_url": "https://api.github.com/users/Veykril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Veykril", "id": 3757771, "node_id": "MDQ6VXNlcjM3NTc3NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/3757771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veykril", "html_url": "https://github.com/Veykril", "followers_url": "https://api.github.com/users/Veykril/followers", "following_url": "https://api.github.com/users/Veykril/following{/other_user}", "gists_url": "https://api.github.com/users/Veykril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veykril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veykril/subscriptions", "organizations_url": "https://api.github.com/users/Veykril/orgs", "repos_url": "https://api.github.com/users/Veykril/repos", "events_url": "https://api.github.com/users/Veykril/events{/privacy}", "received_events_url": "https://api.github.com/users/Veykril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "406e4be04c2e74d58bcaa7e823e2509d1a7803d4", "url": "https://api.github.com/repos/rust-lang/rust/commits/406e4be04c2e74d58bcaa7e823e2509d1a7803d4", "html_url": "https://github.com/rust-lang/rust/commit/406e4be04c2e74d58bcaa7e823e2509d1a7803d4"}], "stats": {"total": 55, "additions": 51, "deletions": 4}, "files": [{"sha": "27d35de5b6ec7e55dbf90a660920aafb36361cfe", "filename": "crates/ide/src/runnables.rs", "status": "modified", "additions": 51, "deletions": 4, "changes": 55, "blob_url": "https://github.com/rust-lang/rust/blob/f2610cbd7e4bfa4834d70cd92c5c4331c99a8ce0/crates%2Fide%2Fsrc%2Frunnables.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f2610cbd7e4bfa4834d70cd92c5c4331c99a8ce0/crates%2Fide%2Fsrc%2Frunnables.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Frunnables.rs?ref=f2610cbd7e4bfa4834d70cd92c5c4331c99a8ce0", "patch": "@@ -2,7 +2,7 @@ use std::fmt;\n \n use ast::NameOwner;\n use cfg::CfgExpr;\n-use hir::{AsAssocItem, HasAttrs, HasSource, Semantics};\n+use hir::{AsAssocItem, HasAttrs, HasSource, HirDisplay, Semantics};\n use ide_assists::utils::test_related_attribute;\n use ide_db::{\n     base_db::{FilePosition, FileRange},\n@@ -340,11 +340,21 @@ fn module_def_doctest(sema: &Semantics<RootDatabase>, def: hir::ModuleDef) -> Op\n             // FIXME: this also looks very wrong\n             if let Some(assoc_def) = assoc_def {\n                 if let hir::AssocItemContainer::Impl(imp) = assoc_def.container(sema.db) {\n-                    if let Some(adt) = imp.target_ty(sema.db).as_adt() {\n-                        let name = adt.name(sema.db).to_string();\n+                    let ty = imp.target_ty(sema.db);\n+                    if let Some(adt) = ty.as_adt() {\n+                        let name = adt.name(sema.db);\n                         let idx = path.rfind(':').map_or(0, |idx| idx + 1);\n                         let (prefix, suffix) = path.split_at(idx);\n-                        return format!(\"{}{}::{}\", prefix, name, suffix);\n+                        let mut ty_params = ty.type_parameters().peekable();\n+                        let params = if ty_params.peek().is_some() {\n+                            format!(\n+                                \"<{}>\",\n+                                ty_params.format_with(\", \", |ty, cb| cb(&ty.display(sema.db)))\n+                            )\n+                        } else {\n+                            String::new()\n+                        };\n+                        return format!(\"{}{}{}::{}\", prefix, name, params, suffix);\n                     }\n                 }\n             }\n@@ -1406,4 +1416,41 @@ mod tests {\n             \"#]],\n         );\n     }\n+\n+    #[test]\n+    fn doc_test_type_params() {\n+        check(\n+            r#\"\n+//- /lib.rs\n+$0\n+struct Foo<T, U>;\n+\n+impl<T, U> Foo<T, U> {\n+    /// ```rust\n+    /// ````\n+    fn t() {}\n+}\n+\"#,\n+            &[&DOCTEST],\n+            expect![[r#\"\n+                [\n+                    Runnable {\n+                        nav: NavigationTarget {\n+                            file_id: FileId(\n+                                0,\n+                            ),\n+                            full_range: 47..85,\n+                            name: \"t\",\n+                        },\n+                        kind: DocTest {\n+                            test_id: Path(\n+                                \"Foo<T, U>::t\",\n+                            ),\n+                        },\n+                        cfg: None,\n+                    },\n+                ]\n+            \"#]],\n+        );\n+    }\n }"}]}