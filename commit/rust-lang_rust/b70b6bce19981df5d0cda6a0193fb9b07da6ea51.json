{"sha": "b70b6bce19981df5d0cda6a0193fb9b07da6ea51", "node_id": "MDY6Q29tbWl0NzI0NzEyOmI3MGI2YmNlMTk5ODFkZjVkMGNkYTZhMDE5M2ZiOWIwN2RhNmVhNTE=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2018-11-21T08:35:25Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2018-11-21T08:35:25Z"}, "message": "Move to top", "tree": {"sha": "cb3b2c628f34589a9f21a7665aefd0d7c28ac6fe", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/cb3b2c628f34589a9f21a7665aefd0d7c28ac6fe"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b70b6bce19981df5d0cda6a0193fb9b07da6ea51", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b70b6bce19981df5d0cda6a0193fb9b07da6ea51", "html_url": "https://github.com/rust-lang/rust/commit/b70b6bce19981df5d0cda6a0193fb9b07da6ea51", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b70b6bce19981df5d0cda6a0193fb9b07da6ea51/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ff75ad13a45dc603d445b1491d65e17c4db9addb", "url": "https://api.github.com/repos/rust-lang/rust/commits/ff75ad13a45dc603d445b1491d65e17c4db9addb", "html_url": "https://github.com/rust-lang/rust/commit/ff75ad13a45dc603d445b1491d65e17c4db9addb"}], "stats": {"total": 26, "additions": 13, "deletions": 13}, "files": [{"sha": "34127e78f08c1243a9b31c501cbfae67a21b3546", "filename": "crates/ra_analysis/src/descriptors/module/nameres.rs", "status": "modified", "additions": 13, "deletions": 13, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/b70b6bce19981df5d0cda6a0193fb9b07da6ea51/crates%2Fra_analysis%2Fsrc%2Fdescriptors%2Fmodule%2Fnameres.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b70b6bce19981df5d0cda6a0193fb9b07da6ea51/crates%2Fra_analysis%2Fsrc%2Fdescriptors%2Fmodule%2Fnameres.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_analysis%2Fsrc%2Fdescriptors%2Fmodule%2Fnameres.rs?ref=b70b6bce19981df5d0cda6a0193fb9b07da6ea51", "patch": "@@ -22,6 +22,19 @@ use crate::{\n     input::SourceRootId,\n };\n \n+/// Item map is the result of the name resolution. Item map contains, for each\n+/// module, the set of visible items.\n+#[derive(Default, Debug, PartialEq, Eq)]\n+pub(crate) struct ItemMap {\n+    per_module: FxHashMap<ModuleId, ModuleItems>,\n+}\n+\n+#[derive(Debug, Default, PartialEq, Eq)]\n+struct ModuleItems {\n+    items: FxHashMap<SmolStr, Resolution>,\n+    import_resolutions: FxHashMap<LocalSyntaxPtr, DefId>,\n+}\n+\n /// A set of items and imports declared inside a module, without relation to\n /// other modules.\n ///\n@@ -101,19 +114,6 @@ pub(crate) fn item_map(\n     Ok(Arc::new(res))\n }\n \n-/// Item map is the result of the name resolution. Item map contains, for each\n-/// module, the set of visible items.\n-#[derive(Default, Debug, PartialEq, Eq)]\n-pub(crate) struct ItemMap {\n-    per_module: FxHashMap<ModuleId, ModuleItems>,\n-}\n-\n-#[derive(Debug, Default, PartialEq, Eq)]\n-struct ModuleItems {\n-    items: FxHashMap<SmolStr, Resolution>,\n-    import_resolutions: FxHashMap<LocalSyntaxPtr, DefId>,\n-}\n-\n /// Resolution is basically `DefId` atm, but it should account for stuff like\n /// multiple namespaces, ambiguity and errors.\n #[derive(Debug, Clone, PartialEq, Eq)]"}]}