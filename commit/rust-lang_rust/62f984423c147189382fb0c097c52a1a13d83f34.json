{"sha": "62f984423c147189382fb0c097c52a1a13d83f34", "node_id": "C_kwDOAAsO6NoAKDYyZjk4NDQyM2MxNDcxODkzODJmYjBjMDk3YzUyYTFhMTNkODNmMzQ", "commit": {"author": {"name": "Pietro Albini", "email": "pietro.albini@ferrous-systems.com", "date": "2022-04-11T14:32:29Z"}, "committer": {"name": "Pietro Albini", "email": "pietro.albini@ferrous-systems.com", "date": "2022-04-28T13:36:07Z"}, "message": "extract code to detect files related to a test into a different function", "tree": {"sha": "7d7501d408fe819bcf0dc6a23969093e06305728", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7d7501d408fe819bcf0dc6a23969093e06305728"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/62f984423c147189382fb0c097c52a1a13d83f34", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEMycKYjxLY0eb13b7zXazX3c0dp4FAmJqmEcACgkQzXazX3c0\ndp4PQg/8DP23J6yxeyll2H0NwpLyc5rPb7NnYtR7Am0jIsTOBoEQVxYwNvzZPa4k\nwWGbgPBVLFFnpZ4OEetHfdJUhk1wExnj1CoE1X9TPLfHrgLdXeTugzZBQNjTFyXN\nMG5ZzJDZy3clr3I/WU3ypKnDaT8Fg9UsS1e902ONKJ/ph+0q38rZtT2MLLIVkuAw\n+C3u7fETxR6bXenKxxZuccYoALxRzuUMhhPHWy2VN+kzQSGFSDrq31Gf/7Ibwrc9\nGqh08b/HweSkO7P2hiitCfx1AcIkFpzmRwDHjvZmkDu45zdUNL14W31RLQ2ZQcfC\ncBF4pukvI3gAjy/RuLDf7h7Qr78D7T/fobrsU59uNIXE2qhYAgojZA2YeLCM4LID\n71ZTKXbmqsSGOyWMnMzqJ++Q0lrNyMl4TDXrd7FrJqeBw7krAIhXV/8ls9jdNt/J\nvWTXyRoK5QT1AUEYFF2fXGfEl0lgdjTapfVDIGRtzOcLrLW6oFFn/nXGP6RKm30w\nnlI+7Ie2C1W7IW2cfF8gLrBPtUua7J7q55b/YLPO46r2kmpT+KAqkNdT/KfNbfCx\n/wq3l5zKwKWaXIme31drpZRcU78x5Lbb6riax89EC0Gt4+jOKn7KTlK2T/V9fGPd\nnnochC5sc4RWwtypz5vjA6dNS2KoW7OeUlfZl6txNsYG9r51Jx4=\n=Jm1s\n-----END PGP SIGNATURE-----", "payload": "tree 7d7501d408fe819bcf0dc6a23969093e06305728\nparent 3bfeffd55bbc7d653d2df7ad265746bafe595a96\nauthor Pietro Albini <pietro.albini@ferrous-systems.com> 1649687549 +0200\ncommitter Pietro Albini <pietro.albini@ferrous-systems.com> 1651152967 +0200\n\nextract code to detect files related to a test into a different function\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/62f984423c147189382fb0c097c52a1a13d83f34", "html_url": "https://github.com/rust-lang/rust/commit/62f984423c147189382fb0c097c52a1a13d83f34", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/62f984423c147189382fb0c097c52a1a13d83f34/comments", "author": {"login": "pietroalbini", "id": 2299951, "node_id": "MDQ6VXNlcjIyOTk5NTE=", "avatar_url": "https://avatars.githubusercontent.com/u/2299951?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pietroalbini", "html_url": "https://github.com/pietroalbini", "followers_url": "https://api.github.com/users/pietroalbini/followers", "following_url": "https://api.github.com/users/pietroalbini/following{/other_user}", "gists_url": "https://api.github.com/users/pietroalbini/gists{/gist_id}", "starred_url": "https://api.github.com/users/pietroalbini/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pietroalbini/subscriptions", "organizations_url": "https://api.github.com/users/pietroalbini/orgs", "repos_url": "https://api.github.com/users/pietroalbini/repos", "events_url": "https://api.github.com/users/pietroalbini/events{/privacy}", "received_events_url": "https://api.github.com/users/pietroalbini/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pietroalbini", "id": 2299951, "node_id": "MDQ6VXNlcjIyOTk5NTE=", "avatar_url": "https://avatars.githubusercontent.com/u/2299951?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pietroalbini", "html_url": "https://github.com/pietroalbini", "followers_url": "https://api.github.com/users/pietroalbini/followers", "following_url": "https://api.github.com/users/pietroalbini/following{/other_user}", "gists_url": "https://api.github.com/users/pietroalbini/gists{/gist_id}", "starred_url": "https://api.github.com/users/pietroalbini/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pietroalbini/subscriptions", "organizations_url": "https://api.github.com/users/pietroalbini/orgs", "repos_url": "https://api.github.com/users/pietroalbini/repos", "events_url": "https://api.github.com/users/pietroalbini/events{/privacy}", "received_events_url": "https://api.github.com/users/pietroalbini/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3bfeffd55bbc7d653d2df7ad265746bafe595a96", "url": "https://api.github.com/repos/rust-lang/rust/commits/3bfeffd55bbc7d653d2df7ad265746bafe595a96", "html_url": "https://github.com/rust-lang/rust/commit/3bfeffd55bbc7d653d2df7ad265746bafe595a96"}], "stats": {"total": 46, "additions": 35, "deletions": 11}, "files": [{"sha": "3d11ea21acf9fccbb126c324ef6e8b10fe1248c8", "filename": "src/tools/compiletest/src/main.rs", "status": "modified", "additions": 35, "deletions": 11, "changes": 46, "blob_url": "https://github.com/rust-lang/rust/blob/62f984423c147189382fb0c097c52a1a13d83f34/src%2Ftools%2Fcompiletest%2Fsrc%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/62f984423c147189382fb0c097c52a1a13d83f34/src%2Ftools%2Fcompiletest%2Fsrc%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fcompiletest%2Fsrc%2Fmain.rs?ref=62f984423c147189382fb0c097c52a1a13d83f34", "patch": "@@ -665,6 +665,40 @@ fn stamp(config: &Config, testpaths: &TestPaths, revision: Option<&str>) -> Path\n     output_base_dir(config, testpaths, revision).join(\"stamp\")\n }\n \n+fn files_related_to_test(\n+    config: &Config,\n+    testpaths: &TestPaths,\n+    props: &EarlyProps,\n+    revision: Option<&str>,\n+) -> Vec<PathBuf> {\n+    let mut related = vec![];\n+\n+    if testpaths.file.is_dir() {\n+        // run-make tests use their individual directory\n+        for entry in WalkDir::new(&testpaths.file) {\n+            let path = entry.unwrap().into_path();\n+            if path.is_file() {\n+                related.push(path);\n+            }\n+        }\n+    } else {\n+        related.push(testpaths.file.clone());\n+    }\n+\n+    for aux in &props.aux {\n+        let path = testpaths.file.parent().unwrap().join(\"auxiliary\").join(aux);\n+        related.push(path);\n+    }\n+\n+    // UI test files.\n+    for extension in UI_EXTENSIONS {\n+        let path = expected_output_path(testpaths, revision, &config.compare_mode, extension);\n+        related.push(path);\n+    }\n+\n+    related\n+}\n+\n fn is_up_to_date(\n     config: &Config,\n     testpaths: &TestPaths,\n@@ -686,20 +720,10 @@ fn is_up_to_date(\n \n     // Check timestamps.\n     let mut inputs = inputs.clone();\n-    // Use `add_dir` to account for run-make tests, which use their individual directory\n-    inputs.add_dir(&testpaths.file);\n-\n-    for aux in &props.aux {\n-        let path = testpaths.file.parent().unwrap().join(\"auxiliary\").join(aux);\n+    for path in files_related_to_test(config, testpaths, props, revision) {\n         inputs.add_path(&path);\n     }\n \n-    // UI test files.\n-    for extension in UI_EXTENSIONS {\n-        let path = &expected_output_path(testpaths, revision, &config.compare_mode, extension);\n-        inputs.add_path(path);\n-    }\n-\n     inputs < Stamp::from_path(&stamp_name)\n }\n "}]}