{"sha": "e177207b3685de49301518e56add65494d828b51", "node_id": "MDY6Q29tbWl0NzI0NzEyOmUxNzcyMDdiMzY4NWRlNDkzMDE1MThlNTZhZGQ2NTQ5NGQ4MjhiNTE=", "commit": {"author": {"name": "Eduard Burtescu", "email": "edy.burt@gmail.com", "date": "2016-03-18T12:28:11Z"}, "committer": {"name": "Eduard Burtescu", "email": "edy.burt@gmail.com", "date": "2016-03-18T12:28:11Z"}, "message": "trans: Don't ignore zero-sized struct arguments on x86_64-pc-windows-gnu.", "tree": {"sha": "076177223e754d6961801bec2061faa56dbe2e4e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/076177223e754d6961801bec2061faa56dbe2e4e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e177207b3685de49301518e56add65494d828b51", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e177207b3685de49301518e56add65494d828b51", "html_url": "https://github.com/rust-lang/rust/commit/e177207b3685de49301518e56add65494d828b51", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e177207b3685de49301518e56add65494d828b51/comments", "author": {"login": "eddyb", "id": 77424, "node_id": "MDQ6VXNlcjc3NDI0", "avatar_url": "https://avatars.githubusercontent.com/u/77424?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eddyb", "html_url": "https://github.com/eddyb", "followers_url": "https://api.github.com/users/eddyb/followers", "following_url": "https://api.github.com/users/eddyb/following{/other_user}", "gists_url": "https://api.github.com/users/eddyb/gists{/gist_id}", "starred_url": "https://api.github.com/users/eddyb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eddyb/subscriptions", "organizations_url": "https://api.github.com/users/eddyb/orgs", "repos_url": "https://api.github.com/users/eddyb/repos", "events_url": "https://api.github.com/users/eddyb/events{/privacy}", "received_events_url": "https://api.github.com/users/eddyb/received_events", "type": "User", "site_admin": false}, "committer": {"login": "eddyb", "id": 77424, "node_id": "MDQ6VXNlcjc3NDI0", "avatar_url": "https://avatars.githubusercontent.com/u/77424?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eddyb", "html_url": "https://github.com/eddyb", "followers_url": "https://api.github.com/users/eddyb/followers", "following_url": "https://api.github.com/users/eddyb/following{/other_user}", "gists_url": "https://api.github.com/users/eddyb/gists{/gist_id}", "starred_url": "https://api.github.com/users/eddyb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eddyb/subscriptions", "organizations_url": "https://api.github.com/users/eddyb/orgs", "repos_url": "https://api.github.com/users/eddyb/repos", "events_url": "https://api.github.com/users/eddyb/events{/privacy}", "received_events_url": "https://api.github.com/users/eddyb/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "181097da3315fa143c686a37d1a0c8b32fe9a3fb", "url": "https://api.github.com/repos/rust-lang/rust/commits/181097da3315fa143c686a37d1a0c8b32fe9a3fb", "html_url": "https://github.com/rust-lang/rust/commit/181097da3315fa143c686a37d1a0c8b32fe9a3fb"}], "stats": {"total": 21, "additions": 17, "deletions": 4}, "files": [{"sha": "fd086522b2ea33c8c5942ebca461a1d5c5c61a7f", "filename": "src/librustc_trans/trans/abi.rs", "status": "modified", "additions": 17, "deletions": 4, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/e177207b3685de49301518e56add65494d828b51/src%2Flibrustc_trans%2Ftrans%2Fabi.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e177207b3685de49301518e56add65494d828b51/src%2Flibrustc_trans%2Ftrans%2Fabi.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Ftrans%2Fabi.rs?ref=e177207b3685de49301518e56add65494d828b51", "patch": "@@ -250,7 +250,16 @@ impl FnType {\n             extra_args\n         };\n \n-        let arg_of = |ty: Ty<'tcx>| {\n+        let target = &ccx.sess().target.target;\n+        let win_x64_gnu = target.target_os == \"windows\"\n+                       && target.arch == \"x86_64\"\n+                       && target.target_env == \"gnu\";\n+        let rust_abi = match abi {\n+            RustIntrinsic | PlatformIntrinsic | Rust | RustCall => true,\n+            _ => false\n+        };\n+\n+        let arg_of = |ty: Ty<'tcx>, is_return: bool| {\n             if ty.is_bool() {\n                 let llty = Type::i1(ccx);\n                 let mut arg = ArgType::new(llty, llty);\n@@ -260,7 +269,11 @@ impl FnType {\n                 let mut arg = ArgType::new(type_of::type_of(ccx, ty),\n                                            type_of::sizing_type_of(ccx, ty));\n                 if llsize_of_real(ccx, arg.ty) == 0 {\n-                    arg.ignore();\n+                    // For some forsaken reason, x86_64-pc-windows-gnu\n+                    // doesn't ignore zero-sized struct arguments.\n+                    if is_return || rust_abi || !win_x64_gnu {\n+                        arg.ignore();\n+                    }\n                 }\n                 arg\n             }\n@@ -270,7 +283,7 @@ impl FnType {\n             ty::FnConverging(ret_ty) => ret_ty,\n             ty::FnDiverging => ccx.tcx().mk_nil()\n         };\n-        let mut ret = arg_of(ret_ty);\n+        let mut ret = arg_of(ret_ty, true);\n \n         if !type_is_fat_ptr(ccx.tcx(), ret_ty) {\n             // The `noalias` attribute on the return value is useful to a\n@@ -335,7 +348,7 @@ impl FnType {\n         };\n \n         for ty in inputs.iter().chain(extra_args.iter()) {\n-            let mut arg = arg_of(ty);\n+            let mut arg = arg_of(ty, false);\n \n             if type_is_fat_ptr(ccx.tcx(), ty) {\n                 let original_tys = arg.original_ty.field_types();"}]}