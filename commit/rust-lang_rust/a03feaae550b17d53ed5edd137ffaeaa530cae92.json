{"sha": "a03feaae550b17d53ed5edd137ffaeaa530cae92", "node_id": "MDY6Q29tbWl0NzI0NzEyOmEwM2ZlYWFlNTUwYjE3ZDUzZWQ1ZWRkMTM3ZmZhZWFhNTMwY2FlOTI=", "commit": {"author": {"name": "Tunahan Karlibas", "email": "dvt.tnhn.krlbs@gmail.com", "date": "2020-12-11T15:19:30Z"}, "committer": {"name": "Tunahan Karlibas", "email": "dvt.tnhn.krlbs@gmail.com", "date": "2020-12-11T15:59:29Z"}, "message": "add missing constraints", "tree": {"sha": "70d6f1ca8582f331fc0af4be57e5fca18a31165c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/70d6f1ca8582f331fc0af4be57e5fca18a31165c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a03feaae550b17d53ed5edd137ffaeaa530cae92", "comment_count": 0, "verification": {"verified": false, "reason": "no_user", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEjRc1/OFrtBrFGXTf7MSWjcnUU94FAl/Tl2MACgkQ7MSWjcnU\nU96upg//V6VgarkQNknkK1xDm1stC5ptM5xRb2tuuog/ry94P6s4FshCrTD34a6j\ng05+IkA9qPHaFafw736wcDxtp6a4J2SCD2XoKBTzhi4ezZmGDGNtaUp/D18iv07u\nsFk+GKxdl5/RETwKxSjIzyiGpAme4fRXQ1deaFBB1idc0lqfj3jOHIUWlIuEC60E\n8xWq0RC8mFlfTEg/rsp4d3+FKGqvUftBki+bxKDhrIz68+GuwUy7wxuzvqecEN6y\n2VlbPpxv+GnZVsnrFAPY1w4Aes6Vcou04rABHbZNy6wX4NL+/MH/+QcWZ3/+q5aq\nyj0GH/UAh7MXl660skGAmWHfAPfwy04hGI9OPdCW4DmlUT3fk39q4NuRkncDHS2b\na8fleFjBSWHRdv6c+DivtOPxD5PIVDYj7+08VHySRT/GPKavOiKLITiifSyVGmp4\ncZrM5I4+ca+l8CaMBZ7amMPqTrsGLew8CPq44uqMawfkb0NUmGIXZmIN+wCC2ZGt\nfP1DUznHgy3q/eYxRhEYYTh6Eyd2mTu6ag312GNTOxn+hmKKcF9jp7CEppuOeVXI\n10zfkwxfpQ+Aud4P4iaegkHAEMpuiCPDyyczxWCTlXRKbdsrPmPvDFfGIEg2FCvv\n2g5eX0hgEQO+4Id+z0fSggOWD49cdmVg/ABbtA6rGKRIBu4FvTM=\n=Tf2V\n-----END PGP SIGNATURE-----", "payload": "tree 70d6f1ca8582f331fc0af4be57e5fca18a31165c\nparent b6f7eef946d4b9830bef2a4264c4b62f880f032b\nauthor Tunahan Karlibas <dvt.tnhn.krlbs@gmail.com> 1607699970 +0300\ncommitter Tunahan Karlibas <dvt.tnhn.krlbs@gmail.com> 1607702369 +0300\n\nadd missing constraints\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a03feaae550b17d53ed5edd137ffaeaa530cae92", "html_url": "https://github.com/rust-lang/rust/commit/a03feaae550b17d53ed5edd137ffaeaa530cae92", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a03feaae550b17d53ed5edd137ffaeaa530cae92/comments", "author": null, "committer": null, "parents": [{"sha": "b6f7eef946d4b9830bef2a4264c4b62f880f032b", "url": "https://api.github.com/repos/rust-lang/rust/commits/b6f7eef946d4b9830bef2a4264c4b62f880f032b", "html_url": "https://github.com/rust-lang/rust/commit/b6f7eef946d4b9830bef2a4264c4b62f880f032b"}], "stats": {"total": 16, "additions": 10, "deletions": 6}, "files": [{"sha": "f13b4b7b919247893983addd97075617152494e4", "filename": "compiler/rustc_mir/src/const_eval/eval_queries.rs", "status": "modified", "additions": 10, "deletions": 6, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/a03feaae550b17d53ed5edd137ffaeaa530cae92/compiler%2Frustc_mir%2Fsrc%2Fconst_eval%2Feval_queries.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a03feaae550b17d53ed5edd137ffaeaa530cae92/compiler%2Frustc_mir%2Fsrc%2Fconst_eval%2Feval_queries.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir%2Fsrc%2Fconst_eval%2Feval_queries.rs?ref=a03feaae550b17d53ed5edd137ffaeaa530cae92", "patch": "@@ -7,7 +7,7 @@ use crate::interpret::{\n };\n \n use rustc_errors::ErrorReported;\n-use rustc_hir::{ConstContext, def::DefKind};\n+use rustc_hir::def::DefKind;\n use rustc_middle::mir;\n use rustc_middle::mir::interpret::ErrorHandled;\n use rustc_middle::traits::Reveal;\n@@ -34,9 +34,15 @@ fn eval_body_using_ecx<'mir, 'tcx>(\n     assert!(\n         cid.promoted.is_some()\n             || matches!(\n-                ecx.tcx.hir().body_const_context(cid.instance.def_id().expect_local()),\n-                Some(ConstContext::Const | ConstContext::Static(_))\n-            )\n+                ecx.tcx.def_kind(cid.instance.def_id()),\n+                DefKind::Const\n+                    | DefKind::Static\n+                    | DefKind::ConstParam\n+                    | DefKind::AnonConst\n+                    | DefKind::AssocConst\n+            ),\n+        \"Unexpected DefKind: {:?}\",\n+        ecx.tcx.def_kind(cid.instance.def_id())\n     );\n     let layout = ecx.layout_of(body.return_ty().subst(tcx, cid.instance.substs))?;\n     assert!(!layout.is_unsized());\n@@ -47,8 +53,6 @@ fn eval_body_using_ecx<'mir, 'tcx>(\n     let prom = cid.promoted.map_or(String::new(), |p| format!(\"::promoted[{:?}]\", p));\n     trace!(\"eval_body_using_ecx: pushing stack frame for global: {}{}\", name, prom);\n \n-\n-\n     ecx.push_stack_frame(\n         cid.instance,\n         body,"}]}