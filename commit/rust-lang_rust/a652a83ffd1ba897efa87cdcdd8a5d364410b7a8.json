{"sha": "a652a83ffd1ba897efa87cdcdd8a5d364410b7a8", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE2NTJhODNmZmQxYmE4OTdlZmE4N2NkY2RkOGE1ZDM2NDQxMGI3YTg=", "commit": {"author": {"name": "Nick Cameron", "email": "ncameron@mozilla.com", "date": "2015-04-21T04:49:16Z"}, "committer": {"name": "Nick Cameron", "email": "ncameron@mozilla.com", "date": "2015-04-21T04:49:16Z"}, "message": "Trivial reformatting", "tree": {"sha": "3f8ff3756d8560544e8a80faf5118fbfd4c4d7fe", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3f8ff3756d8560544e8a80faf5118fbfd4c4d7fe"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a652a83ffd1ba897efa87cdcdd8a5d364410b7a8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a652a83ffd1ba897efa87cdcdd8a5d364410b7a8", "html_url": "https://github.com/rust-lang/rust/commit/a652a83ffd1ba897efa87cdcdd8a5d364410b7a8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a652a83ffd1ba897efa87cdcdd8a5d364410b7a8/comments", "author": {"login": "nrc", "id": 762626, "node_id": "MDQ6VXNlcjc2MjYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/762626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nrc", "html_url": "https://github.com/nrc", "followers_url": "https://api.github.com/users/nrc/followers", "following_url": "https://api.github.com/users/nrc/following{/other_user}", "gists_url": "https://api.github.com/users/nrc/gists{/gist_id}", "starred_url": "https://api.github.com/users/nrc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nrc/subscriptions", "organizations_url": "https://api.github.com/users/nrc/orgs", "repos_url": "https://api.github.com/users/nrc/repos", "events_url": "https://api.github.com/users/nrc/events{/privacy}", "received_events_url": "https://api.github.com/users/nrc/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nrc", "id": 762626, "node_id": "MDQ6VXNlcjc2MjYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/762626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nrc", "html_url": "https://github.com/nrc", "followers_url": "https://api.github.com/users/nrc/followers", "following_url": "https://api.github.com/users/nrc/following{/other_user}", "gists_url": "https://api.github.com/users/nrc/gists{/gist_id}", "starred_url": "https://api.github.com/users/nrc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nrc/subscriptions", "organizations_url": "https://api.github.com/users/nrc/orgs", "repos_url": "https://api.github.com/users/nrc/repos", "events_url": "https://api.github.com/users/nrc/events{/privacy}", "received_events_url": "https://api.github.com/users/nrc/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "defcceb8796ea98d429297e2cf8c414064aa0234", "url": "https://api.github.com/repos/rust-lang/rust/commits/defcceb8796ea98d429297e2cf8c414064aa0234", "html_url": "https://github.com/rust-lang/rust/commit/defcceb8796ea98d429297e2cf8c414064aa0234"}], "stats": {"total": 23, "additions": 13, "deletions": 10}, "files": [{"sha": "7ea31aec7329f6addadbba41ab3357b559a8a913", "filename": "src/mod.rs", "status": "modified", "additions": 13, "deletions": 10, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/a652a83ffd1ba897efa87cdcdd8a5d364410b7a8/src%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a652a83ffd1ba897efa87cdcdd8a5d364410b7a8/src%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fmod.rs?ref=a652a83ffd1ba897efa87cdcdd8a5d364410b7a8", "patch": "@@ -282,15 +282,6 @@ impl<'a, 'v> visit::Visitor<'v> for FmtVisitor<'a> {\n     }\n }\n \n-fn make_indent(width: usize) -> String {\n-    let mut indent = String::with_capacity(width);\n-    for _ in 0..width {\n-        indent.push(' ')\n-    }\n-    indent\n-}\n-\n-\n impl<'a> FmtVisitor<'a> {\n     fn from_codemap<'b>(codemap: &'b CodeMap) -> FmtVisitor<'b> {\n         FmtVisitor {\n@@ -603,6 +594,15 @@ fn next_char(s: &str, mut i: usize) -> usize {\n     i\n }\n \n+#[inline]\n+fn make_indent(width: usize) -> String {\n+    let mut indent = String::with_capacity(width);\n+    for _ in 0..width {\n+        indent.push(' ')\n+    }\n+    indent\n+}\n+\n struct RustFmtCalls {\n     input_path: Option<PathBuf>,\n }\n@@ -615,7 +615,10 @@ impl<'a> CompilerCalls<'a> for RustFmtCalls {\n         Compilation::Continue\n     }\n \n-    fn some_input(&mut self, input: Input, input_path: Option<PathBuf>) -> (Input, Option<PathBuf>) {\n+    fn some_input(&mut self,\n+                  input: Input,\n+                  input_path: Option<PathBuf>)\n+                  -> (Input, Option<PathBuf>) {\n         match input_path {\n             Some(ref ip) => self.input_path = Some(ip.clone()),\n             _ => {"}]}