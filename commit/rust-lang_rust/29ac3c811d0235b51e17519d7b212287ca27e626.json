{"sha": "29ac3c811d0235b51e17519d7b212287ca27e626", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI5YWMzYzgxMWQwMjM1YjUxZTE3NTE5ZDdiMjEyMjg3Y2EyN2U2MjY=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-03-07T00:51:40Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-03-07T01:16:25Z"}, "message": "rustdoc: Put brief descriptions in the indexes", "tree": {"sha": "c315ec80fa9efde2c670f63cbc0225d31ef6fba5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c315ec80fa9efde2c670f63cbc0225d31ef6fba5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/29ac3c811d0235b51e17519d7b212287ca27e626", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/29ac3c811d0235b51e17519d7b212287ca27e626", "html_url": "https://github.com/rust-lang/rust/commit/29ac3c811d0235b51e17519d7b212287ca27e626", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/29ac3c811d0235b51e17519d7b212287ca27e626/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a4ff220133128f7d4467f3919db579e7b50850c4", "url": "https://api.github.com/repos/rust-lang/rust/commits/a4ff220133128f7d4467f3919db579e7b50850c4", "html_url": "https://github.com/rust-lang/rust/commit/a4ff220133128f7d4467f3919db579e7b50850c4"}], "stats": {"total": 30, "additions": 29, "deletions": 1}, "files": [{"sha": "288bccf0d41b1ea2b3834f1b2ebf4438e4df8edb", "filename": "src/rustdoc/doc.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/29ac3c811d0235b51e17519d7b212287ca27e626/src%2Frustdoc%2Fdoc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/29ac3c811d0235b51e17519d7b212287ca27e626/src%2Frustdoc%2Fdoc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustdoc%2Fdoc.rs?ref=29ac3c811d0235b51e17519d7b212287ca27e626", "patch": "@@ -131,12 +131,14 @@ Fields:\n \n * kind - The type of thing being indexed, e.g. 'Module'\n * name - The name of the thing\n+* brief - The brief description\n * link - A format-specific string representing the link target\n \n \"]\n type index_entry = {\n     kind: str,\n     name: str,\n+    brief: option<str>,\n     link: str\n };\n "}, {"sha": "f7481da3c0b27d1cd9ad3d279ed3988d2dab7e1b", "filename": "src/rustdoc/markdown_index_pass.rs", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/29ac3c811d0235b51e17519d7b212287ca27e626/src%2Frustdoc%2Fmarkdown_index_pass.rs", "raw_url": "https://github.com/rust-lang/rust/raw/29ac3c811d0235b51e17519d7b212287ca27e626/src%2Frustdoc%2Fmarkdown_index_pass.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustdoc%2Fmarkdown_index_pass.rs?ref=29ac3c811d0235b51e17519d7b212287ca27e626", "patch": "@@ -63,6 +63,7 @@ fn item_to_entry(\n     {\n         kind: markdown_pass::header_kind(doc),\n         name: markdown_pass::header_name(doc),\n+        brief: doc.brief(),\n         link: link\n     }\n }\n@@ -100,11 +101,13 @@ fn should_index_mod_contents() {\n     assert option::get(doc.cratemod().index).entries[0] == {\n         kind: \"Module\",\n         name: \"a\",\n+        brief: none,\n         link: \"#module-a\"\n     };\n     assert option::get(doc.cratemod().index).entries[1] == {\n         kind: \"Function\",\n         name: \"b\",\n+        brief: none,\n         link: \"#function-b\"\n     };\n }\n@@ -118,15 +121,26 @@ fn should_index_mod_contents_multi_page() {\n     assert option::get(doc.cratemod().index).entries[0] == {\n         kind: \"Module\",\n         name: \"a\",\n+        brief: none,\n         link: \"a.html\"\n     };\n     assert option::get(doc.cratemod().index).entries[1] == {\n         kind: \"Function\",\n         name: \"b\",\n+        brief: none,\n         link: \"#function-b\"\n     };\n }\n \n+#[test]\n+fn should_add_brief_desc_to_index() {\n+    let doc = test::mk_doc(\n+        config::doc_per_mod,\n+        \"#[doc(brief = \\\"test\\\")] mod a { }\"\n+    );\n+    assert option::get(doc.cratemod().index).entries[0].brief == some(\"test\");\n+}\n+\n #[cfg(test)]\n mod test {\n     fn mk_doc(output_style: config::output_style, source: str) -> doc::doc {\n@@ -136,6 +150,7 @@ mod test {\n                 with config::default_config(\"whatever\")\n             };\n             let doc = extract::from_srv(srv, \"\");\n+            let doc = attr_pass::mk_pass().f(srv, doc);\n             let doc = path_pass::mk_pass().f(srv, doc);\n             run(srv, doc, config)\n         }"}, {"sha": "e531fb5e6e6907af48e2347afa05e5e4d5571805", "filename": "src/rustdoc/markdown_pass.rs", "status": "modified", "additions": 12, "deletions": 1, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/29ac3c811d0235b51e17519d7b212287ca27e626/src%2Frustdoc%2Fmarkdown_pass.rs", "raw_url": "https://github.com/rust-lang/rust/raw/29ac3c811d0235b51e17519d7b212287ca27e626/src%2Frustdoc%2Fmarkdown_pass.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustdoc%2Fmarkdown_pass.rs?ref=29ac3c811d0235b51e17519d7b212287ca27e626", "patch": "@@ -283,7 +283,12 @@ fn write_index(ctxt: ctxt, index: doc::index) {\n     for entry in index.entries {\n         let header = header_text_(entry.kind, entry.name);\n         let id = entry.link;\n-        ctxt.w.write_line(#fmt(\"* [%s](%s)\", header, id));\n+        if option::is_some(entry.brief) {\n+            ctxt.w.write_line(#fmt(\"* [%s](%s) - %s\",\n+                                   header, id, option::get(entry.brief)));\n+        } else {\n+            ctxt.w.write_line(#fmt(\"* [%s](%s)\", header, id));\n+        }\n     }\n     ctxt.w.write_line(\"\");\n }\n@@ -298,6 +303,12 @@ fn should_write_index() {\n     );\n }\n \n+#[test]\n+fn should_write_index_brief() {\n+    let markdown = test::render(\"#[doc(brief = \\\"test\\\")] mod a { }\");\n+    assert str::contains(markdown, \"(#module-a) - test\\n\");\n+}\n+\n #[test]\n fn should_not_write_index_if_no_entries() {\n     let markdown = test::render(\"\");"}]}