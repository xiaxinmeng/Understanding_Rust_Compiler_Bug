{"sha": "8617ff0f0bfc8ab8484f4ad970d63e0a787f954f", "node_id": "C_kwDOAAsO6NoAKDg2MTdmZjBmMGJmYzhhYjg0ODRmNGFkOTcwZDYzZTBhNzg3Zjk1NGY", "commit": {"author": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2021-12-10T12:23:48Z"}, "committer": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2022-01-15T20:26:25Z"}, "message": "Add inline.", "tree": {"sha": "1e2d540d7fb5b23e6567d2c766b4b1f5dfbef30e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1e2d540d7fb5b23e6567d2c766b4b1f5dfbef30e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8617ff0f0bfc8ab8484f4ad970d63e0a787f954f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8617ff0f0bfc8ab8484f4ad970d63e0a787f954f", "html_url": "https://github.com/rust-lang/rust/commit/8617ff0f0bfc8ab8484f4ad970d63e0a787f954f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8617ff0f0bfc8ab8484f4ad970d63e0a787f954f/comments", "author": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "committer": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d9c6e70c57d16b248b65ec578ca9b77028ea0725", "url": "https://api.github.com/repos/rust-lang/rust/commits/d9c6e70c57d16b248b65ec578ca9b77028ea0725", "html_url": "https://github.com/rust-lang/rust/commit/d9c6e70c57d16b248b65ec578ca9b77028ea0725"}], "stats": {"total": 2, "additions": 2, "deletions": 0}, "files": [{"sha": "5b486819c35e83e55296f187a264c265c2a0c16a", "filename": "compiler/rustc_hir/src/hir_id.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8617ff0f0bfc8ab8484f4ad970d63e0a787f954f/compiler%2Frustc_hir%2Fsrc%2Fhir_id.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8617ff0f0bfc8ab8484f4ad970d63e0a787f954f/compiler%2Frustc_hir%2Fsrc%2Fhir_id.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_hir%2Fsrc%2Fhir_id.rs?ref=8617ff0f0bfc8ab8484f4ad970d63e0a787f954f", "patch": "@@ -19,11 +19,13 @@ pub struct HirId {\n }\n \n impl HirId {\n+    #[inline]\n     pub fn expect_owner(self) -> LocalDefId {\n         assert_eq!(self.local_id.index(), 0);\n         self.owner\n     }\n \n+    #[inline]\n     pub fn as_owner(self) -> Option<LocalDefId> {\n         if self.local_id.index() == 0 { Some(self.owner) } else { None }\n     }"}]}