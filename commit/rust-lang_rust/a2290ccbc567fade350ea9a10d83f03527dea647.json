{"sha": "a2290ccbc567fade350ea9a10d83f03527dea647", "node_id": "MDY6Q29tbWl0NzI0NzEyOmEyMjkwY2NiYzU2N2ZhZGUzNTBlYTlhMTBkODNmMDM1MjdkZWE2NDc=", "commit": {"author": {"name": "Corey Richardson", "email": "corey@octayn.net", "date": "2014-04-01T14:28:20Z"}, "committer": {"name": "Corey Richardson", "email": "corey@octayn.net", "date": "2014-04-02T15:17:21Z"}, "message": "middle: trans: cabi: remove dead code", "tree": {"sha": "22e7e8b6ea49320cdc0d7b137c10d00232f720a1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/22e7e8b6ea49320cdc0d7b137c10d00232f720a1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a2290ccbc567fade350ea9a10d83f03527dea647", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a2290ccbc567fade350ea9a10d83f03527dea647", "html_url": "https://github.com/rust-lang/rust/commit/a2290ccbc567fade350ea9a10d83f03527dea647", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a2290ccbc567fade350ea9a10d83f03527dea647/comments", "author": {"login": "emberian", "id": 704250, "node_id": "MDQ6VXNlcjcwNDI1MA==", "avatar_url": "https://avatars.githubusercontent.com/u/704250?v=4", "gravatar_id": "", "url": "https://api.github.com/users/emberian", "html_url": "https://github.com/emberian", "followers_url": "https://api.github.com/users/emberian/followers", "following_url": "https://api.github.com/users/emberian/following{/other_user}", "gists_url": "https://api.github.com/users/emberian/gists{/gist_id}", "starred_url": "https://api.github.com/users/emberian/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/emberian/subscriptions", "organizations_url": "https://api.github.com/users/emberian/orgs", "repos_url": "https://api.github.com/users/emberian/repos", "events_url": "https://api.github.com/users/emberian/events{/privacy}", "received_events_url": "https://api.github.com/users/emberian/received_events", "type": "User", "site_admin": false}, "committer": {"login": "emberian", "id": 704250, "node_id": "MDQ6VXNlcjcwNDI1MA==", "avatar_url": "https://avatars.githubusercontent.com/u/704250?v=4", "gravatar_id": "", "url": "https://api.github.com/users/emberian", "html_url": "https://github.com/emberian", "followers_url": "https://api.github.com/users/emberian/followers", "following_url": "https://api.github.com/users/emberian/following{/other_user}", "gists_url": "https://api.github.com/users/emberian/gists{/gist_id}", "starred_url": "https://api.github.com/users/emberian/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/emberian/subscriptions", "organizations_url": "https://api.github.com/users/emberian/orgs", "repos_url": "https://api.github.com/users/emberian/repos", "events_url": "https://api.github.com/users/emberian/events{/privacy}", "received_events_url": "https://api.github.com/users/emberian/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5e2b5221ca6d8d12e3e9f1f9740504387997a37a", "url": "https://api.github.com/repos/rust-lang/rust/commits/5e2b5221ca6d8d12e3e9f1f9740504387997a37a", "html_url": "https://github.com/rust-lang/rust/commit/5e2b5221ca6d8d12e3e9f1f9740504387997a37a"}], "stats": {"total": 4, "additions": 0, "deletions": 4}, "files": [{"sha": "2c9be587eaa9ec3bbdfa81b4cc6b191e5d3a5522", "filename": "src/librustc/middle/trans/cabi.rs", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/a2290ccbc567fade350ea9a10d83f03527dea647/src%2Flibrustc%2Fmiddle%2Ftrans%2Fcabi.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a2290ccbc567fade350ea9a10d83f03527dea647/src%2Flibrustc%2Fmiddle%2Ftrans%2Fcabi.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftrans%2Fcabi.rs?ref=a2290ccbc567fade350ea9a10d83f03527dea647", "patch": "@@ -79,10 +79,6 @@ impl ArgType {\n         }\n     }\n \n-    pub fn is_direct(&self) -> bool {\n-        return self.kind == Direct;\n-    }\n-\n     pub fn is_indirect(&self) -> bool {\n         return self.kind == Indirect;\n     }"}]}