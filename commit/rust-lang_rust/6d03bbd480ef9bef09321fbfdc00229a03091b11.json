{"sha": "6d03bbd480ef9bef09321fbfdc00229a03091b11", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZkMDNiYmQ0ODBlZjliZWYwOTMyMWZiZmRjMDAyMjlhMDMwOTFiMTE=", "commit": {"author": {"name": "Bastian Kauschke", "email": "bastian_kauschke@hotmail.de", "date": "2020-03-08T13:24:32Z"}, "committer": {"name": "Bastian Kauschke", "email": "bastian_kauschke@hotmail.de", "date": "2020-03-08T13:24:32Z"}, "message": "constify `mem::discriminant`", "tree": {"sha": "dcf7fd10df1455d72968a192223a3a73ce56d6ce", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/dcf7fd10df1455d72968a192223a3a73ce56d6ce"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6d03bbd480ef9bef09321fbfdc00229a03091b11", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6d03bbd480ef9bef09321fbfdc00229a03091b11", "html_url": "https://github.com/rust-lang/rust/commit/6d03bbd480ef9bef09321fbfdc00229a03091b11", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6d03bbd480ef9bef09321fbfdc00229a03091b11/comments", "author": {"login": "lcnr", "id": 29864074, "node_id": "MDQ6VXNlcjI5ODY0MDc0", "avatar_url": "https://avatars.githubusercontent.com/u/29864074?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lcnr", "html_url": "https://github.com/lcnr", "followers_url": "https://api.github.com/users/lcnr/followers", "following_url": "https://api.github.com/users/lcnr/following{/other_user}", "gists_url": "https://api.github.com/users/lcnr/gists{/gist_id}", "starred_url": "https://api.github.com/users/lcnr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lcnr/subscriptions", "organizations_url": "https://api.github.com/users/lcnr/orgs", "repos_url": "https://api.github.com/users/lcnr/repos", "events_url": "https://api.github.com/users/lcnr/events{/privacy}", "received_events_url": "https://api.github.com/users/lcnr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "lcnr", "id": 29864074, "node_id": "MDQ6VXNlcjI5ODY0MDc0", "avatar_url": "https://avatars.githubusercontent.com/u/29864074?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lcnr", "html_url": "https://github.com/lcnr", "followers_url": "https://api.github.com/users/lcnr/followers", "following_url": "https://api.github.com/users/lcnr/following{/other_user}", "gists_url": "https://api.github.com/users/lcnr/gists{/gist_id}", "starred_url": "https://api.github.com/users/lcnr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lcnr/subscriptions", "organizations_url": "https://api.github.com/users/lcnr/orgs", "repos_url": "https://api.github.com/users/lcnr/repos", "events_url": "https://api.github.com/users/lcnr/events{/privacy}", "received_events_url": "https://api.github.com/users/lcnr/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f943349eafaa75a60c05b0c84dcdb771d0eae8c9", "url": "https://api.github.com/repos/rust-lang/rust/commits/f943349eafaa75a60c05b0c84dcdb771d0eae8c9", "html_url": "https://github.com/rust-lang/rust/commit/f943349eafaa75a60c05b0c84dcdb771d0eae8c9"}], "stats": {"total": 33, "additions": 32, "deletions": 1}, "files": [{"sha": "63c5d782e65662db237daa2df597a5cf85e34c82", "filename": "src/libcore/intrinsics.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/6d03bbd480ef9bef09321fbfdc00229a03091b11/src%2Flibcore%2Fintrinsics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6d03bbd480ef9bef09321fbfdc00229a03091b11/src%2Flibcore%2Fintrinsics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fintrinsics.rs?ref=6d03bbd480ef9bef09321fbfdc00229a03091b11", "patch": "@@ -1852,6 +1852,7 @@ extern \"rust-intrinsic\" {\n     ///\n     /// The stabilized version of this intrinsic is\n     /// [`std::mem::discriminant`](../../std/mem/fn.discriminant.html)\n+    #[rustc_const_unstable(feature = \"const_discriminant\", issue = \"69821\")]\n     pub fn discriminant_value<T>(v: &T) -> u64;\n \n     /// Rust's \"try catch\" construct which invokes the function pointer `f` with"}, {"sha": "cac61c2c674adf394339c5b0ebe3d08738ea2004", "filename": "src/libcore/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/6d03bbd480ef9bef09321fbfdc00229a03091b11/src%2Flibcore%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6d03bbd480ef9bef09321fbfdc00229a03091b11/src%2Flibcore%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Flib.rs?ref=6d03bbd480ef9bef09321fbfdc00229a03091b11", "patch": "@@ -72,6 +72,7 @@\n #![feature(concat_idents)]\n #![feature(const_ascii_ctype_on_intrinsics)]\n #![feature(const_alloc_layout)]\n+#![feature(const_discriminant)]\n #![feature(const_if_match)]\n #![feature(const_loop)]\n #![feature(const_checked_int_methods)]"}, {"sha": "c23d0adab5c0d14362635bf212db23c08f237dd2", "filename": "src/libcore/mem/mod.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/6d03bbd480ef9bef09321fbfdc00229a03091b11/src%2Flibcore%2Fmem%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6d03bbd480ef9bef09321fbfdc00229a03091b11/src%2Flibcore%2Fmem%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fmem%2Fmod.rs?ref=6d03bbd480ef9bef09321fbfdc00229a03091b11", "patch": "@@ -864,6 +864,7 @@ impl<T> fmt::Debug for Discriminant<T> {\n /// assert_ne!(mem::discriminant(&Foo::B(3)), mem::discriminant(&Foo::C(3)));\n /// ```\n #[stable(feature = \"discriminant_value\", since = \"1.21.0\")]\n-pub fn discriminant<T>(v: &T) -> Discriminant<T> {\n+#[rustc_const_unstable(feature = \"const_discriminant\", issue = \"69821\")]\n+pub const fn discriminant<T>(v: &T) -> Discriminant<T> {\n     Discriminant(intrinsics::discriminant_value(v), PhantomData)\n }"}, {"sha": "1e5ed76c467b40af7ad08ae9e4a0b263dae96539", "filename": "src/librustc_mir/interpret/intrinsics.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/6d03bbd480ef9bef09321fbfdc00229a03091b11/src%2Flibrustc_mir%2Finterpret%2Fintrinsics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6d03bbd480ef9bef09321fbfdc00229a03091b11/src%2Flibrustc_mir%2Finterpret%2Fintrinsics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Finterpret%2Fintrinsics.rs?ref=6d03bbd480ef9bef09321fbfdc00229a03091b11", "patch": "@@ -216,6 +216,11 @@ impl<'mir, 'tcx, M: Machine<'mir, 'tcx>> InterpCx<'mir, 'tcx, M> {\n                 };\n                 self.write_scalar(val, dest)?;\n             }\n+            sym::discriminant_value => {\n+                let place = self.deref_operand(args[0])?;\n+                let discr_val = self.read_discriminant(place.into())?.0;\n+                self.write_scalar(Scalar::from_uint(discr_val, dest.layout.size), dest)?;\n+            }\n             sym::unchecked_shl\n             | sym::unchecked_shr\n             | sym::unchecked_add"}, {"sha": "0d37e9c2c7b087b09137fa40cfca87c283e77549", "filename": "src/librustc_span/symbol.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/6d03bbd480ef9bef09321fbfdc00229a03091b11/src%2Flibrustc_span%2Fsymbol.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6d03bbd480ef9bef09321fbfdc00229a03091b11/src%2Flibrustc_span%2Fsymbol.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_span%2Fsymbol.rs?ref=6d03bbd480ef9bef09321fbfdc00229a03091b11", "patch": "@@ -265,6 +265,7 @@ symbols! {\n         derive,\n         diagnostic,\n         direct,\n+        discriminant_value,\n         doc,\n         doc_alias,\n         doc_cfg,"}, {"sha": "5a32ff2915849e630f1676b00dad06356d007501", "filename": "src/test/ui/consts/const_discriminant.rs", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/6d03bbd480ef9bef09321fbfdc00229a03091b11/src%2Ftest%2Fui%2Fconsts%2Fconst_discriminant.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6d03bbd480ef9bef09321fbfdc00229a03091b11/src%2Ftest%2Fui%2Fconsts%2Fconst_discriminant.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fconst_discriminant.rs?ref=6d03bbd480ef9bef09321fbfdc00229a03091b11", "patch": "@@ -0,0 +1,22 @@\n+// run-pass\n+#![feature(const_discriminant)]\n+\n+use std::mem::{discriminant, Discriminant};\n+\n+enum Test {\n+    A(u8),\n+    B,\n+    C { a: u8, b: u8 },\n+}\n+\n+const TEST_A: Discriminant<Test> = discriminant(&Test::A(5));\n+const TEST_A_OTHER: Discriminant<Test> = discriminant(&Test::A(17));\n+const TEST_B: Discriminant<Test> = discriminant(&Test::B);\n+\n+fn main() {\n+    assert_eq!(TEST_A, TEST_A_OTHER);\n+    assert_eq!(TEST_A, discriminant(&Test::A(17)));\n+    assert_eq!(TEST_B, discriminant(&Test::B));\n+    assert_ne!(TEST_A, TEST_B);\n+    assert_ne!(TEST_B, discriminant(&Test::C { a: 42, b: 7 }));\n+}"}]}