{"sha": "af3e940940706a1001e5eeaffd760633a84d350e", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFmM2U5NDA5NDA3MDZhMTAwMWU1ZWVhZmZkNzYwNjMzYTg0ZDM1MGU=", "commit": {"author": {"name": "topecongiro", "email": "seuchida@gmail.com", "date": "2019-04-22T23:50:59Z"}, "committer": {"name": "topecongiro", "email": "seuchida@gmail.com", "date": "2019-04-22T23:50:59Z"}, "message": "Attempt to format attributes if only they exist", "tree": {"sha": "28bed591a1ea7494d0d3d56498de091c067959f5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/28bed591a1ea7494d0d3d56498de091c067959f5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/af3e940940706a1001e5eeaffd760633a84d350e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/af3e940940706a1001e5eeaffd760633a84d350e", "html_url": "https://github.com/rust-lang/rust/commit/af3e940940706a1001e5eeaffd760633a84d350e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/af3e940940706a1001e5eeaffd760633a84d350e/comments", "author": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "committer": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8d43ca297a0c35d7ddd4909989a1e5cd1e017cbc", "url": "https://api.github.com/repos/rust-lang/rust/commits/8d43ca297a0c35d7ddd4909989a1e5cd1e017cbc", "html_url": "https://github.com/rust-lang/rust/commit/8d43ca297a0c35d7ddd4909989a1e5cd1e017cbc"}], "stats": {"total": 47, "additions": 24, "deletions": 23}, "files": [{"sha": "08647dee490b87adb2c7f652b6c4641bb874adb7", "filename": "src/imports.rs", "status": "modified", "additions": 24, "deletions": 23, "changes": 47, "blob_url": "https://github.com/rust-lang/rust/blob/af3e940940706a1001e5eeaffd760633a84d350e/src%2Fimports.rs", "raw_url": "https://github.com/rust-lang/rust/raw/af3e940940706a1001e5eeaffd760633a84d350e/src%2Fimports.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fimports.rs?ref=af3e940940706a1001e5eeaffd760633a84d350e", "patch": "@@ -242,30 +242,31 @@ impl UseTree {\n                     format!(\"{}use {};\", vis, s)\n                 }\n             })?;\n-        if let Some(ref attrs) = self.attrs {\n-            let attr_str = attrs.rewrite(context, shape)?;\n-            let lo = attrs.last().as_ref()?.span().hi();\n-            let hi = self.span.lo();\n-            let span = mk_sp(lo, hi);\n-\n-            let allow_extend = if attrs.len() == 1 {\n-                let line_len = attr_str.len() + 1 + use_str.len();\n-                !attrs.first().unwrap().is_sugared_doc\n-                    && context.config.inline_attribute_width() >= line_len\n-            } else {\n-                false\n-            };\n+        match self.attrs {\n+            Some(ref attrs) if !attrs.is_empty() => {\n+                let attr_str = attrs.rewrite(context, shape)?;\n+                let lo = attrs.last().as_ref()?.span().hi();\n+                let hi = self.span.lo();\n+                let span = mk_sp(lo, hi);\n+\n+                let allow_extend = if attrs.len() == 1 {\n+                    let line_len = attr_str.len() + 1 + use_str.len();\n+                    !attrs.first().unwrap().is_sugared_doc\n+                        && context.config.inline_attribute_width() >= line_len\n+                } else {\n+                    false\n+                };\n \n-            combine_strs_with_missing_comments(\n-                context,\n-                &attr_str,\n-                &use_str,\n-                span,\n-                shape,\n-                allow_extend,\n-            )\n-        } else {\n-            Some(use_str)\n+                combine_strs_with_missing_comments(\n+                    context,\n+                    &attr_str,\n+                    &use_str,\n+                    span,\n+                    shape,\n+                    allow_extend,\n+                )\n+            }\n+            _ => Some(use_str),\n         }\n     }\n "}]}