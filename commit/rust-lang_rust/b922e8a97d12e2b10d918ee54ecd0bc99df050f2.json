{"sha": "b922e8a97d12e2b10d918ee54ecd0bc99df050f2", "node_id": "MDY6Q29tbWl0NzI0NzEyOmI5MjJlOGE5N2QxMmUyYjEwZDkxOGVlNTRlY2QwYmM5OWRmMDUwZjI=", "commit": {"author": {"name": "Santiago Pastorino", "email": "spastorino@gmail.com", "date": "2019-05-27T20:00:44Z"}, "committer": {"name": "Santiago Pastorino", "email": "spastorino@gmail.com", "date": "2019-05-27T20:16:39Z"}, "message": "Make dest_needs_borrow iterate instead of recurse", "tree": {"sha": "70a2e32aa24b9e08493dd59b93994281728a54eb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/70a2e32aa24b9e08493dd59b93994281728a54eb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b922e8a97d12e2b10d918ee54ecd0bc99df050f2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b922e8a97d12e2b10d918ee54ecd0bc99df050f2", "html_url": "https://github.com/rust-lang/rust/commit/b922e8a97d12e2b10d918ee54ecd0bc99df050f2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b922e8a97d12e2b10d918ee54ecd0bc99df050f2/comments", "author": {"login": "spastorino", "id": 52642, "node_id": "MDQ6VXNlcjUyNjQy", "avatar_url": "https://avatars.githubusercontent.com/u/52642?v=4", "gravatar_id": "", "url": "https://api.github.com/users/spastorino", "html_url": "https://github.com/spastorino", "followers_url": "https://api.github.com/users/spastorino/followers", "following_url": "https://api.github.com/users/spastorino/following{/other_user}", "gists_url": "https://api.github.com/users/spastorino/gists{/gist_id}", "starred_url": "https://api.github.com/users/spastorino/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/spastorino/subscriptions", "organizations_url": "https://api.github.com/users/spastorino/orgs", "repos_url": "https://api.github.com/users/spastorino/repos", "events_url": "https://api.github.com/users/spastorino/events{/privacy}", "received_events_url": "https://api.github.com/users/spastorino/received_events", "type": "User", "site_admin": false}, "committer": {"login": "spastorino", "id": 52642, "node_id": "MDQ6VXNlcjUyNjQy", "avatar_url": "https://avatars.githubusercontent.com/u/52642?v=4", "gravatar_id": "", "url": "https://api.github.com/users/spastorino", "html_url": "https://github.com/spastorino", "followers_url": "https://api.github.com/users/spastorino/followers", "following_url": "https://api.github.com/users/spastorino/following{/other_user}", "gists_url": "https://api.github.com/users/spastorino/gists{/gist_id}", "starred_url": "https://api.github.com/users/spastorino/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/spastorino/subscriptions", "organizations_url": "https://api.github.com/users/spastorino/orgs", "repos_url": "https://api.github.com/users/spastorino/repos", "events_url": "https://api.github.com/users/spastorino/events{/privacy}", "received_events_url": "https://api.github.com/users/spastorino/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4dbc7f96d6438b93c9274675b276cfe934164704", "url": "https://api.github.com/repos/rust-lang/rust/commits/4dbc7f96d6438b93c9274675b276cfe934164704", "html_url": "https://github.com/rust-lang/rust/commit/4dbc7f96d6438b93c9274675b276cfe934164704"}], "stats": {"total": 23, "additions": 13, "deletions": 10}, "files": [{"sha": "782af3024ad2c448b1fb6f776e199decad28cdf1", "filename": "src/librustc_mir/transform/inline.rs", "status": "modified", "additions": 13, "deletions": 10, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/b922e8a97d12e2b10d918ee54ecd0bc99df050f2/src%2Flibrustc_mir%2Ftransform%2Finline.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b922e8a97d12e2b10d918ee54ecd0bc99df050f2/src%2Flibrustc_mir%2Ftransform%2Finline.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Ftransform%2Finline.rs?ref=b922e8a97d12e2b10d918ee54ecd0bc99df050f2", "patch": "@@ -440,19 +440,22 @@ impl<'a, 'tcx> Inliner<'a, 'tcx> {\n                 // writes to `i`. To prevent this we need to create a temporary\n                 // borrow of the place and pass the destination as `*temp` instead.\n                 fn dest_needs_borrow(place: &Place<'_>) -> bool {\n-                    match *place {\n-                        Place::Projection(ref p) => {\n-                            match p.elem {\n+                    place.iterate(|place_base, place_projection| {\n+                        for proj in place_projection {\n+                            match proj.elem {\n                                 ProjectionElem::Deref |\n-                                ProjectionElem::Index(_) => true,\n-                                _ => dest_needs_borrow(&p.base)\n+                                ProjectionElem::Index(_) => return true,\n+                                _ => {}\n                             }\n                         }\n-                        // Static variables need a borrow because the callee\n-                        // might modify the same static.\n-                        Place::Base(PlaceBase::Static(_)) => true,\n-                        _ => false\n-                    }\n+\n+                        match place_base {\n+                            // Static variables need a borrow because the callee\n+                            // might modify the same static.\n+                            PlaceBase::Static(_) => true,\n+                            _ => false\n+                        }\n+                    })\n                 }\n \n                 let dest = if dest_needs_borrow(&destination.0) {"}]}