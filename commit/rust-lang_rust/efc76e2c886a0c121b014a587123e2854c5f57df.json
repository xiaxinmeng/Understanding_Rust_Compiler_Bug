{"sha": "efc76e2c886a0c121b014a587123e2854c5f57df", "node_id": "MDY6Q29tbWl0NzI0NzEyOmVmYzc2ZTJjODg2YTBjMTIxYjAxNGE1ODcxMjNlMjg1NGM1ZjU3ZGY=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2020-12-30T10:39:45Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-12-30T10:39:45Z"}, "message": "Merge #7092\n\n7092: Simplify r=matklad a=matklad\n\nbors r+\n\ud83e\udd16\n\nCo-authored-by: Aleksey Kladov <aleksey.kladov@gmail.com>", "tree": {"sha": "68ff56bc1ebe5980308b3e045c9dea0f7751949e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/68ff56bc1ebe5980308b3e045c9dea0f7751949e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/efc76e2c886a0c121b014a587123e2854c5f57df", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJf7FjxCRBK7hj4Ov3rIwAAdHIIAGWNaUnxlF6u3Yc4Oh4z+CXz\nsEqnaXSSi1JloLMan3UgRncJGPZcI3Hx0jpdrMBM+WGobaVsRvno+Czbf7gTAW3c\nTY8jnGsS5H7LJqvGBd39JdYvonFB9ORUgp0B0ZbrXNZlSABh+HPe8aTx4t+uG0Tn\n7qhxiwJvgPi/ayrHYLKSE5a9FdHIQT57vAmgx50AGLUb+Un9UNgR5RVVTNgp0447\nQolD9ldBtZpE97vwCtOYL3Usl1J28uuARs+W/mr46HVGTRG9kxqh0X8lh7gRljJW\n2MnXrMndKK/CauFHiPcO7PAD6sgwvsgjSXYQ+tglHX4Y/XGD/odPZeQ+IBlrp28=\n=P4bz\n-----END PGP SIGNATURE-----\n", "payload": "tree 68ff56bc1ebe5980308b3e045c9dea0f7751949e\nparent 9d975320200e7d399661f04a0ba34b2fd0ba639b\nparent 0c3be014ec7108df4bb6460b54fdf46314e059a7\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1609324785 +0000\ncommitter GitHub <noreply@github.com> 1609324785 +0000\n\nMerge #7092\n\n7092: Simplify r=matklad a=matklad\n\nbors r+\n\ud83e\udd16\n\nCo-authored-by: Aleksey Kladov <aleksey.kladov@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/efc76e2c886a0c121b014a587123e2854c5f57df", "html_url": "https://github.com/rust-lang/rust/commit/efc76e2c886a0c121b014a587123e2854c5f57df", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/efc76e2c886a0c121b014a587123e2854c5f57df/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9d975320200e7d399661f04a0ba34b2fd0ba639b", "url": "https://api.github.com/repos/rust-lang/rust/commits/9d975320200e7d399661f04a0ba34b2fd0ba639b", "html_url": "https://github.com/rust-lang/rust/commit/9d975320200e7d399661f04a0ba34b2fd0ba639b"}, {"sha": "0c3be014ec7108df4bb6460b54fdf46314e059a7", "url": "https://api.github.com/repos/rust-lang/rust/commits/0c3be014ec7108df4bb6460b54fdf46314e059a7", "html_url": "https://github.com/rust-lang/rust/commit/0c3be014ec7108df4bb6460b54fdf46314e059a7"}], "stats": {"total": 6, "additions": 4, "deletions": 2}, "files": [{"sha": "30b22f51df71b3606147a02c5a1fb53fc2f8f948", "filename": "crates/hir_def/src/import_map.rs", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/efc76e2c886a0c121b014a587123e2854c5f57df/crates%2Fhir_def%2Fsrc%2Fimport_map.rs", "raw_url": "https://github.com/rust-lang/rust/raw/efc76e2c886a0c121b014a587123e2854c5f57df/crates%2Fhir_def%2Fsrc%2Fimport_map.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_def%2Fsrc%2Fimport_map.rs?ref=efc76e2c886a0c121b014a587123e2854c5f57df", "patch": "@@ -432,6 +432,7 @@ fn item_import_kind(item: ItemInNs) -> Option<ImportKind> {\n mod tests {\n     use base_db::{fixture::WithFixture, SourceDatabase, Upcast};\n     use expect_test::{expect, Expect};\n+    use stdx::format_to;\n \n     use crate::{data::FunctionData, test_db::TestDB, AssocContainerId, Lookup};\n \n@@ -467,9 +468,10 @@ mod tests {\n                             if let ItemInNs::Types(ModuleDefId::FunctionId(function_id))\n                             | ItemInNs::Values(ModuleDefId::FunctionId(function_id)) = item\n                             {\n-                                full_path += &format!(\n+                                format_to!(\n+                                    full_path,\n                                     \"::{}\",\n-                                    FunctionData::fn_data_query(&db, function_id).name\n+                                    FunctionData::fn_data_query(&db, function_id).name,\n                                 );\n                             }\n                             full_path"}]}