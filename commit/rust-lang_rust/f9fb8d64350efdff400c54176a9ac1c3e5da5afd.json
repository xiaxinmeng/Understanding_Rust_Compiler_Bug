{"sha": "f9fb8d64350efdff400c54176a9ac1c3e5da5afd", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY5ZmI4ZDY0MzUwZWZkZmY0MDBjNTQxNzZhOWFjMWMzZTVkYTVhZmQ=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2018-12-02T11:16:43Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2018-12-02T11:16:43Z"}, "message": "no reason to use mutable references here at all", "tree": {"sha": "c1e07170d33871c19959449219a242a8a8a126ec", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c1e07170d33871c19959449219a242a8a8a126ec"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f9fb8d64350efdff400c54176a9ac1c3e5da5afd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f9fb8d64350efdff400c54176a9ac1c3e5da5afd", "html_url": "https://github.com/rust-lang/rust/commit/f9fb8d64350efdff400c54176a9ac1c3e5da5afd", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f9fb8d64350efdff400c54176a9ac1c3e5da5afd/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "dd593d3ab85826436dec593ce6ac06932291fd0e", "url": "https://api.github.com/repos/rust-lang/rust/commits/dd593d3ab85826436dec593ce6ac06932291fd0e", "html_url": "https://github.com/rust-lang/rust/commit/dd593d3ab85826436dec593ce6ac06932291fd0e"}], "stats": {"total": 16, "additions": 4, "deletions": 12}, "files": [{"sha": "2bd5dee63e88370c60698127c32e25f68ee6bdfd", "filename": "src/libstd/sys/windows/mutex.rs", "status": "modified", "additions": 4, "deletions": 12, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/f9fb8d64350efdff400c54176a9ac1c3e5da5afd/src%2Flibstd%2Fsys%2Fwindows%2Fmutex.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f9fb8d64350efdff400c54176a9ac1c3e5da5afd/src%2Flibstd%2Fsys%2Fwindows%2Fmutex.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Fwindows%2Fmutex.rs?ref=f9fb8d64350efdff400c54176a9ac1c3e5da5afd", "patch": "@@ -172,27 +172,19 @@ impl ReentrantMutex {\n     }\n \n     pub unsafe fn lock(&self) {\n-        // `init` must have been called, so this is now initialized and\n-        // we can call `get_mut`.\n-        c::EnterCriticalSection((&mut *self.inner.get()).get_mut());\n+        c::EnterCriticalSection((&mut *self.inner.get()).as_mut_ptr());\n     }\n \n     #[inline]\n     pub unsafe fn try_lock(&self) -> bool {\n-        // `init` must have been called, so this is now initialized and\n-        // we can call `get_mut`.\n-        c::TryEnterCriticalSection((&mut *self.inner.get()).get_mut()) != 0\n+        c::TryEnterCriticalSection((&mut *self.inner.get()).as_mut_ptr()) != 0\n     }\n \n     pub unsafe fn unlock(&self) {\n-        // `init` must have been called, so this is now initialized and\n-        // we can call `get_mut`.\n-        c::LeaveCriticalSection((&mut *self.inner.get()).get_mut());\n+        c::LeaveCriticalSection((&mut *self.inner.get()).as_mut_ptr());\n     }\n \n     pub unsafe fn destroy(&self) {\n-        // `init` must have been called, so this is now initialized and\n-        // we can call `get_mut`.\n-        c::DeleteCriticalSection((&mut *self.inner.get()).get_mut());\n+        c::DeleteCriticalSection((&mut *self.inner.get()).as_mut_ptr());\n     }\n }"}]}