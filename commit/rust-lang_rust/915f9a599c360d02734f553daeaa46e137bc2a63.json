{"sha": "915f9a599c360d02734f553daeaa46e137bc2a63", "node_id": "C_kwDOAAsO6NoAKDkxNWY5YTU5OWMzNjBkMDI3MzRmNTUzZGFlYWE0NmUxMzdiYzJhNjM", "commit": {"author": {"name": "Caio", "email": "c410.f3r@gmail.com", "date": "2022-03-09T18:04:09Z"}, "committer": {"name": "Caio", "email": "c410.f3r@gmail.com", "date": "2022-03-09T18:04:09Z"}, "message": "Warn users about || in let chain expressions", "tree": {"sha": "44681a67ac34b61364a7283468e85073159bf8e6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/44681a67ac34b61364a7283468e85073159bf8e6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/915f9a599c360d02734f553daeaa46e137bc2a63", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/915f9a599c360d02734f553daeaa46e137bc2a63", "html_url": "https://github.com/rust-lang/rust/commit/915f9a599c360d02734f553daeaa46e137bc2a63", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/915f9a599c360d02734f553daeaa46e137bc2a63/comments", "author": {"login": "c410-f3r", "id": 17877264, "node_id": "MDQ6VXNlcjE3ODc3MjY0", "avatar_url": "https://avatars.githubusercontent.com/u/17877264?v=4", "gravatar_id": "", "url": "https://api.github.com/users/c410-f3r", "html_url": "https://github.com/c410-f3r", "followers_url": "https://api.github.com/users/c410-f3r/followers", "following_url": "https://api.github.com/users/c410-f3r/following{/other_user}", "gists_url": "https://api.github.com/users/c410-f3r/gists{/gist_id}", "starred_url": "https://api.github.com/users/c410-f3r/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/c410-f3r/subscriptions", "organizations_url": "https://api.github.com/users/c410-f3r/orgs", "repos_url": "https://api.github.com/users/c410-f3r/repos", "events_url": "https://api.github.com/users/c410-f3r/events{/privacy}", "received_events_url": "https://api.github.com/users/c410-f3r/received_events", "type": "User", "site_admin": false}, "committer": {"login": "c410-f3r", "id": 17877264, "node_id": "MDQ6VXNlcjE3ODc3MjY0", "avatar_url": "https://avatars.githubusercontent.com/u/17877264?v=4", "gravatar_id": "", "url": "https://api.github.com/users/c410-f3r", "html_url": "https://github.com/c410-f3r", "followers_url": "https://api.github.com/users/c410-f3r/followers", "following_url": "https://api.github.com/users/c410-f3r/following{/other_user}", "gists_url": "https://api.github.com/users/c410-f3r/gists{/gist_id}", "starred_url": "https://api.github.com/users/c410-f3r/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/c410-f3r/subscriptions", "organizations_url": "https://api.github.com/users/c410-f3r/orgs", "repos_url": "https://api.github.com/users/c410-f3r/repos", "events_url": "https://api.github.com/users/c410-f3r/events{/privacy}", "received_events_url": "https://api.github.com/users/c410-f3r/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "10dccdc7fcbdc64ee9efe2c1ed975ab8c1d61287", "url": "https://api.github.com/repos/rust-lang/rust/commits/10dccdc7fcbdc64ee9efe2c1ed975ab8c1d61287", "html_url": "https://github.com/rust-lang/rust/commit/10dccdc7fcbdc64ee9efe2c1ed975ab8c1d61287"}], "stats": {"total": 275, "additions": 179, "deletions": 96}, "files": [{"sha": "8f0b12cb4feef17d86420aa2181b40a9b63c2746", "filename": "compiler/rustc_ast_passes/src/ast_validation.rs", "status": "modified", "additions": 65, "deletions": 39, "changes": 104, "blob_url": "https://github.com/rust-lang/rust/blob/915f9a599c360d02734f553daeaa46e137bc2a63/compiler%2Frustc_ast_passes%2Fsrc%2Fast_validation.rs", "raw_url": "https://github.com/rust-lang/rust/raw/915f9a599c360d02734f553daeaa46e137bc2a63/compiler%2Frustc_ast_passes%2Fsrc%2Fast_validation.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_ast_passes%2Fsrc%2Fast_validation.rs?ref=915f9a599c360d02734f553daeaa46e137bc2a63", "patch": "@@ -64,8 +64,8 @@ struct AstValidator<'a> {\n     /// certain positions.\n     is_assoc_ty_bound_banned: bool,\n \n-    /// Used to allow `let` expressions in certain syntactic locations.\n-    is_let_allowed: bool,\n+    /// See [ForbiddenLetReason]\n+    forbidden_let_reason: Option<ForbiddenLetReason>,\n \n     lint_buffer: &'a mut LintBuffer,\n }\n@@ -103,20 +103,28 @@ impl<'a> AstValidator<'a> {\n         self.is_tilde_const_allowed = old;\n     }\n \n-    fn with_let_allowed(&mut self, allowed: bool, f: impl FnOnce(&mut Self, bool)) {\n-        let old = mem::replace(&mut self.is_let_allowed, allowed);\n+    fn with_let_management(\n+        &mut self,\n+        forbidden_let_reason: Option<ForbiddenLetReason>,\n+        f: impl FnOnce(&mut Self, Option<ForbiddenLetReason>),\n+    ) {\n+        let old = mem::replace(&mut self.forbidden_let_reason, forbidden_let_reason);\n         f(self, old);\n-        self.is_let_allowed = old;\n+        self.forbidden_let_reason = old;\n     }\n \n     /// Emits an error banning the `let` expression provided in the given location.\n-    fn ban_let_expr(&self, expr: &'a Expr) {\n+    fn ban_let_expr(&self, expr: &'a Expr, forbidden_let_reason: ForbiddenLetReason) {\n         let sess = &self.session;\n         if sess.opts.unstable_features.is_nightly_build() {\n-            sess.struct_span_err(expr.span, \"`let` expressions are not supported here\")\n-                .note(\"only supported directly in conditions of `if`- and `while`-expressions\")\n-                .note(\"as well as when nested within `&&` and parentheses in those conditions\")\n-                .emit();\n+            let err = \"`let` expressions are not supported here\";\n+            let mut diag = sess.struct_span_err(expr.span, err);\n+            diag.note(\"only supported directly in conditions of `if` and `while` expressions\");\n+            diag.note(\"as well as when nested within `&&` and parentheses in those conditions\");\n+            if let ForbiddenLetReason::ForbiddenWithOr(span) = forbidden_let_reason {\n+                diag.span_note(span, \"`||` operators are not allowed in let chain expressions\");\n+            }\n+            diag.emit();\n         } else {\n             sess.struct_span_err(expr.span, \"expected expression, found statement (`let`)\")\n                 .note(\"variable declaration using `let` is a statement\")\n@@ -988,39 +996,48 @@ impl<'a> Visitor<'a> for AstValidator<'a> {\n     }\n \n     fn visit_expr(&mut self, expr: &'a Expr) {\n-        self.with_let_allowed(false, |this, let_allowed| match &expr.kind {\n-            ExprKind::If(cond, then, opt_else) => {\n-                this.visit_block(then);\n-                walk_list!(this, visit_expr, opt_else);\n-                this.with_let_allowed(true, |this, _| this.visit_expr(cond));\n-                return;\n-            }\n-            ExprKind::Let(..) if !let_allowed => this.ban_let_expr(expr),\n-            ExprKind::Match(expr, arms) => {\n-                this.visit_expr(expr);\n-                for arm in arms {\n-                    this.visit_expr(&arm.body);\n-                    this.visit_pat(&arm.pat);\n-                    walk_list!(this, visit_attribute, &arm.attrs);\n-                    if let Some(ref guard) = arm.guard {\n-                        if let ExprKind::Let(_, ref expr, _) = guard.kind {\n-                            this.with_let_allowed(true, |this, _| this.visit_expr(expr));\n+        self.with_let_management(Some(ForbiddenLetReason::GenericForbidden), |this, forbidden_let_reason| {\n+            match &expr.kind {\n+                ExprKind::Binary(Spanned { node: BinOpKind::Or, span }, lhs, rhs) => {\n+                    let forbidden_let_reason = Some(ForbiddenLetReason::ForbiddenWithOr(*span));\n+                    this.with_let_management(forbidden_let_reason, |this, _| this.visit_expr(lhs));\n+                    this.with_let_management(forbidden_let_reason, |this, _| this.visit_expr(rhs));\n+                }\n+                ExprKind::If(cond, then, opt_else) => {\n+                    this.visit_block(then);\n+                    walk_list!(this, visit_expr, opt_else);\n+                    this.with_let_management(None, |this, _| this.visit_expr(cond));\n+                    return;\n+                }\n+                ExprKind::Let(..) if let Some(elem) = forbidden_let_reason => {\n+                    this.ban_let_expr(expr, elem);\n+                },\n+                ExprKind::Match(scrutinee, arms) => {\n+                    this.visit_expr(scrutinee);\n+                    for arm in arms {\n+                        this.visit_expr(&arm.body);\n+                        this.visit_pat(&arm.pat);\n+                        walk_list!(this, visit_attribute, &arm.attrs);\n+                        if let Some(guard) = &arm.guard && let ExprKind::Let(_, guard_expr, _) = &guard.kind {\n+                            this.with_let_management(None, |this, _| {\n+                                this.visit_expr(guard_expr)\n+                            });\n                             return;\n                         }\n                     }\n                 }\n+                ExprKind::Paren(_) | ExprKind::Binary(Spanned { node: BinOpKind::And, .. }, ..) => {\n+                    this.with_let_management(forbidden_let_reason, |this, _| visit::walk_expr(this, expr));\n+                    return;\n+                }\n+                ExprKind::While(cond, then, opt_label) => {\n+                    walk_list!(this, visit_label, opt_label);\n+                    this.visit_block(then);\n+                    this.with_let_management(None, |this, _| this.visit_expr(cond));\n+                    return;\n+                }\n+                _ => visit::walk_expr(this, expr),\n             }\n-            ExprKind::Paren(_) | ExprKind::Binary(Spanned { node: BinOpKind::And, .. }, ..) => {\n-                this.with_let_allowed(let_allowed, |this, _| visit::walk_expr(this, expr));\n-                return;\n-            }\n-            ExprKind::While(cond, then, opt_label) => {\n-                walk_list!(this, visit_label, opt_label);\n-                this.visit_block(then);\n-                this.with_let_allowed(true, |this, _| this.visit_expr(cond));\n-                return;\n-            }\n-            _ => visit::walk_expr(this, expr),\n         });\n     }\n \n@@ -1772,10 +1789,19 @@ pub fn check_crate(session: &Session, krate: &Crate, lints: &mut LintBuffer) ->\n         is_tilde_const_allowed: false,\n         is_impl_trait_banned: false,\n         is_assoc_ty_bound_banned: false,\n-        is_let_allowed: false,\n+        forbidden_let_reason: Some(ForbiddenLetReason::GenericForbidden),\n         lint_buffer: lints,\n     };\n     visit::walk_crate(&mut validator, krate);\n \n     validator.has_proc_macro_decls\n }\n+\n+/// Used to forbid `let` expressions in certain syntactic locations.\n+#[derive(Clone, Copy)]\n+enum ForbiddenLetReason {\n+    /// A let chain with the `||` operator\n+    ForbiddenWithOr(Span),\n+    /// `let` is not valid and the source environment is not important\n+    GenericForbidden,\n+}"}, {"sha": "9d52c32885db0232735272b69e08aa119763e6b4", "filename": "compiler/rustc_ast_passes/src/lib.rs", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/915f9a599c360d02734f553daeaa46e137bc2a63/compiler%2Frustc_ast_passes%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/915f9a599c360d02734f553daeaa46e137bc2a63/compiler%2Frustc_ast_passes%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_ast_passes%2Fsrc%2Flib.rs?ref=915f9a599c360d02734f553daeaa46e137bc2a63", "patch": "@@ -4,11 +4,13 @@\n //!\n //! The crate also contains other misc AST visitors, e.g. `node_count` and `show_span`.\n \n-#![feature(iter_is_partitioned)]\n+#![allow(rustc::potential_query_instability)]\n #![feature(box_patterns)]\n+#![feature(if_let_guard)]\n+#![feature(iter_is_partitioned)]\n+#![feature(let_chains)]\n #![feature(let_else)]\n #![recursion_limit = \"256\"]\n-#![allow(rustc::potential_query_instability)]\n \n pub mod ast_validation;\n pub mod feature_gate;"}, {"sha": "dd090a3a5483df430da3edf6161f092f0353c6c1", "filename": "src/test/ui/rfc-2497-if-let-chains/disallowed-positions.stderr", "status": "modified", "additions": 110, "deletions": 55, "changes": 165, "blob_url": "https://github.com/rust-lang/rust/blob/915f9a599c360d02734f553daeaa46e137bc2a63/src%2Ftest%2Fui%2Frfc-2497-if-let-chains%2Fdisallowed-positions.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/915f9a599c360d02734f553daeaa46e137bc2a63/src%2Ftest%2Fui%2Frfc-2497-if-let-chains%2Fdisallowed-positions.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc-2497-if-let-chains%2Fdisallowed-positions.stderr?ref=915f9a599c360d02734f553daeaa46e137bc2a63", "patch": "@@ -15,7 +15,7 @@ error: `let` expressions are not supported here\n LL |     if &let 0 = 0 {}\n    |         ^^^^^^^^^\n    |\n-   = note: only supported directly in conditions of `if`- and `while`-expressions\n+   = note: only supported directly in conditions of `if` and `while` expressions\n    = note: as well as when nested within `&&` and parentheses in those conditions\n \n error: `let` expressions are not supported here\n@@ -24,7 +24,7 @@ error: `let` expressions are not supported here\n LL |     if !let 0 = 0 {}\n    |         ^^^^^^^^^\n    |\n-   = note: only supported directly in conditions of `if`- and `while`-expressions\n+   = note: only supported directly in conditions of `if` and `while` expressions\n    = note: as well as when nested within `&&` and parentheses in those conditions\n \n error: `let` expressions are not supported here\n@@ -33,7 +33,7 @@ error: `let` expressions are not supported here\n LL |     if *let 0 = 0 {}\n    |         ^^^^^^^^^\n    |\n-   = note: only supported directly in conditions of `if`- and `while`-expressions\n+   = note: only supported directly in conditions of `if` and `while` expressions\n    = note: as well as when nested within `&&` and parentheses in those conditions\n \n error: `let` expressions are not supported here\n@@ -42,7 +42,7 @@ error: `let` expressions are not supported here\n LL |     if -let 0 = 0 {}\n    |         ^^^^^^^^^\n    |\n-   = note: only supported directly in conditions of `if`- and `while`-expressions\n+   = note: only supported directly in conditions of `if` and `while` expressions\n    = note: as well as when nested within `&&` and parentheses in those conditions\n \n error: `let` expressions are not supported here\n@@ -51,7 +51,7 @@ error: `let` expressions are not supported here\n LL |     if (let 0 = 0)? {}\n    |         ^^^^^^^^^\n    |\n-   = note: only supported directly in conditions of `if`- and `while`-expressions\n+   = note: only supported directly in conditions of `if` and `while` expressions\n    = note: as well as when nested within `&&` and parentheses in those conditions\n \n error: `let` expressions are not supported here\n@@ -60,43 +60,63 @@ error: `let` expressions are not supported here\n LL |     if true || let 0 = 0 {}\n    |                ^^^^^^^^^\n    |\n-   = note: only supported directly in conditions of `if`- and `while`-expressions\n+   = note: only supported directly in conditions of `if` and `while` expressions\n    = note: as well as when nested within `&&` and parentheses in those conditions\n+note: `||` operators are not allowed in let chain expressions\n+  --> $DIR/disallowed-positions.rs:47:13\n+   |\n+LL |     if true || let 0 = 0 {}\n+   |             ^^\n \n error: `let` expressions are not supported here\n   --> $DIR/disallowed-positions.rs:48:17\n    |\n LL |     if (true || let 0 = 0) {}\n    |                 ^^^^^^^^^\n    |\n-   = note: only supported directly in conditions of `if`- and `while`-expressions\n+   = note: only supported directly in conditions of `if` and `while` expressions\n    = note: as well as when nested within `&&` and parentheses in those conditions\n+note: `||` operators are not allowed in let chain expressions\n+  --> $DIR/disallowed-positions.rs:48:14\n+   |\n+LL |     if (true || let 0 = 0) {}\n+   |              ^^\n \n error: `let` expressions are not supported here\n   --> $DIR/disallowed-positions.rs:49:25\n    |\n LL |     if true && (true || let 0 = 0) {}\n    |                         ^^^^^^^^^\n    |\n-   = note: only supported directly in conditions of `if`- and `while`-expressions\n+   = note: only supported directly in conditions of `if` and `while` expressions\n    = note: as well as when nested within `&&` and parentheses in those conditions\n+note: `||` operators are not allowed in let chain expressions\n+  --> $DIR/disallowed-positions.rs:49:22\n+   |\n+LL |     if true && (true || let 0 = 0) {}\n+   |                      ^^\n \n error: `let` expressions are not supported here\n   --> $DIR/disallowed-positions.rs:50:25\n    |\n LL |     if true || (true && let 0 = 0) {}\n    |                         ^^^^^^^^^\n    |\n-   = note: only supported directly in conditions of `if`- and `while`-expressions\n+   = note: only supported directly in conditions of `if` and `while` expressions\n    = note: as well as when nested within `&&` and parentheses in those conditions\n+note: `||` operators are not allowed in let chain expressions\n+  --> $DIR/disallowed-positions.rs:50:13\n+   |\n+LL |     if true || (true && let 0 = 0) {}\n+   |             ^^\n \n error: `let` expressions are not supported here\n   --> $DIR/disallowed-positions.rs:53:12\n    |\n LL |     if x = let 0 = 0 {}\n    |            ^^^^^^^^^\n    |\n-   = note: only supported directly in conditions of `if`- and `while`-expressions\n+   = note: only supported directly in conditions of `if` and `while` expressions\n    = note: as well as when nested within `&&` and parentheses in those conditions\n \n error: `let` expressions are not supported here\n@@ -105,7 +125,7 @@ error: `let` expressions are not supported here\n LL |     if true..(let 0 = 0) {}\n    |               ^^^^^^^^^\n    |\n-   = note: only supported directly in conditions of `if`- and `while`-expressions\n+   = note: only supported directly in conditions of `if` and `while` expressions\n    = note: as well as when nested within `&&` and parentheses in those conditions\n \n error: `let` expressions are not supported here\n@@ -114,7 +134,7 @@ error: `let` expressions are not supported here\n LL |     if ..(let 0 = 0) {}\n    |           ^^^^^^^^^\n    |\n-   = note: only supported directly in conditions of `if`- and `while`-expressions\n+   = note: only supported directly in conditions of `if` and `while` expressions\n    = note: as well as when nested within `&&` and parentheses in those conditions\n \n error: `let` expressions are not supported here\n@@ -123,7 +143,7 @@ error: `let` expressions are not supported here\n LL |     if (let 0 = 0).. {}\n    |         ^^^^^^^^^\n    |\n-   = note: only supported directly in conditions of `if`- and `while`-expressions\n+   = note: only supported directly in conditions of `if` and `while` expressions\n    = note: as well as when nested within `&&` and parentheses in those conditions\n \n error: `let` expressions are not supported here\n@@ -132,7 +152,7 @@ error: `let` expressions are not supported here\n LL |     if let Range { start: _, end: _ } = true..true && false {}\n    |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n-   = note: only supported directly in conditions of `if`- and `while`-expressions\n+   = note: only supported directly in conditions of `if` and `while` expressions\n    = note: as well as when nested within `&&` and parentheses in those conditions\n \n error: `let` expressions are not supported here\n@@ -141,7 +161,7 @@ error: `let` expressions are not supported here\n LL |     if let Range { start: _, end: _ } = true..true || false {}\n    |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n-   = note: only supported directly in conditions of `if`- and `while`-expressions\n+   = note: only supported directly in conditions of `if` and `while` expressions\n    = note: as well as when nested within `&&` and parentheses in those conditions\n \n error: `let` expressions are not supported here\n@@ -150,7 +170,7 @@ error: `let` expressions are not supported here\n LL |     if let Range { start: F, end } = F..|| true {}\n    |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n-   = note: only supported directly in conditions of `if`- and `while`-expressions\n+   = note: only supported directly in conditions of `if` and `while` expressions\n    = note: as well as when nested within `&&` and parentheses in those conditions\n \n error: `let` expressions are not supported here\n@@ -159,7 +179,7 @@ error: `let` expressions are not supported here\n LL |     if let Range { start: true, end } = t..&&false {}\n    |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n-   = note: only supported directly in conditions of `if`- and `while`-expressions\n+   = note: only supported directly in conditions of `if` and `while` expressions\n    = note: as well as when nested within `&&` and parentheses in those conditions\n \n error: `let` expressions are not supported here\n@@ -168,7 +188,7 @@ error: `let` expressions are not supported here\n LL |     if let true = let true = true {}\n    |                   ^^^^^^^^^^^^^^^\n    |\n-   = note: only supported directly in conditions of `if`- and `while`-expressions\n+   = note: only supported directly in conditions of `if` and `while` expressions\n    = note: as well as when nested within `&&` and parentheses in those conditions\n \n error: `let` expressions are not supported here\n@@ -177,7 +197,7 @@ error: `let` expressions are not supported here\n LL |     while &let 0 = 0 {}\n    |            ^^^^^^^^^\n    |\n-   = note: only supported directly in conditions of `if`- and `while`-expressions\n+   = note: only supported directly in conditions of `if` and `while` expressions\n    = note: as well as when nested within `&&` and parentheses in those conditions\n \n error: `let` expressions are not supported here\n@@ -186,7 +206,7 @@ error: `let` expressions are not supported here\n LL |     while !let 0 = 0 {}\n    |            ^^^^^^^^^\n    |\n-   = note: only supported directly in conditions of `if`- and `while`-expressions\n+   = note: only supported directly in conditions of `if` and `while` expressions\n    = note: as well as when nested within `&&` and parentheses in those conditions\n \n error: `let` expressions are not supported here\n@@ -195,7 +215,7 @@ error: `let` expressions are not supported here\n LL |     while *let 0 = 0 {}\n    |            ^^^^^^^^^\n    |\n-   = note: only supported directly in conditions of `if`- and `while`-expressions\n+   = note: only supported directly in conditions of `if` and `while` expressions\n    = note: as well as when nested within `&&` and parentheses in those conditions\n \n error: `let` expressions are not supported here\n@@ -204,7 +224,7 @@ error: `let` expressions are not supported here\n LL |     while -let 0 = 0 {}\n    |            ^^^^^^^^^\n    |\n-   = note: only supported directly in conditions of `if`- and `while`-expressions\n+   = note: only supported directly in conditions of `if` and `while` expressions\n    = note: as well as when nested within `&&` and parentheses in those conditions\n \n error: `let` expressions are not supported here\n@@ -213,7 +233,7 @@ error: `let` expressions are not supported here\n LL |     while (let 0 = 0)? {}\n    |            ^^^^^^^^^\n    |\n-   = note: only supported directly in conditions of `if`- and `while`-expressions\n+   = note: only supported directly in conditions of `if` and `while` expressions\n    = note: as well as when nested within `&&` and parentheses in those conditions\n \n error: `let` expressions are not supported here\n@@ -222,43 +242,63 @@ error: `let` expressions are not supported here\n LL |     while true || let 0 = 0 {}\n    |                   ^^^^^^^^^\n    |\n-   = note: only supported directly in conditions of `if`- and `while`-expressions\n+   = note: only supported directly in conditions of `if` and `while` expressions\n    = note: as well as when nested within `&&` and parentheses in those conditions\n+note: `||` operators are not allowed in let chain expressions\n+  --> $DIR/disallowed-positions.rs:111:16\n+   |\n+LL |     while true || let 0 = 0 {}\n+   |                ^^\n \n error: `let` expressions are not supported here\n   --> $DIR/disallowed-positions.rs:112:20\n    |\n LL |     while (true || let 0 = 0) {}\n    |                    ^^^^^^^^^\n    |\n-   = note: only supported directly in conditions of `if`- and `while`-expressions\n+   = note: only supported directly in conditions of `if` and `while` expressions\n    = note: as well as when nested within `&&` and parentheses in those conditions\n+note: `||` operators are not allowed in let chain expressions\n+  --> $DIR/disallowed-positions.rs:112:17\n+   |\n+LL |     while (true || let 0 = 0) {}\n+   |                 ^^\n \n error: `let` expressions are not supported here\n   --> $DIR/disallowed-positions.rs:113:28\n    |\n LL |     while true && (true || let 0 = 0) {}\n    |                            ^^^^^^^^^\n    |\n-   = note: only supported directly in conditions of `if`- and `while`-expressions\n+   = note: only supported directly in conditions of `if` and `while` expressions\n    = note: as well as when nested within `&&` and parentheses in those conditions\n+note: `||` operators are not allowed in let chain expressions\n+  --> $DIR/disallowed-positions.rs:113:25\n+   |\n+LL |     while true && (true || let 0 = 0) {}\n+   |                         ^^\n \n error: `let` expressions are not supported here\n   --> $DIR/disallowed-positions.rs:114:28\n    |\n LL |     while true || (true && let 0 = 0) {}\n    |                            ^^^^^^^^^\n    |\n-   = note: only supported directly in conditions of `if`- and `while`-expressions\n+   = note: only supported directly in conditions of `if` and `while` expressions\n    = note: as well as when nested within `&&` and parentheses in those conditions\n+note: `||` operators are not allowed in let chain expressions\n+  --> $DIR/disallowed-positions.rs:114:16\n+   |\n+LL |     while true || (true && let 0 = 0) {}\n+   |                ^^\n \n error: `let` expressions are not supported here\n   --> $DIR/disallowed-positions.rs:117:15\n    |\n LL |     while x = let 0 = 0 {}\n    |               ^^^^^^^^^\n    |\n-   = note: only supported directly in conditions of `if`- and `while`-expressions\n+   = note: only supported directly in conditions of `if` and `while` expressions\n    = note: as well as when nested within `&&` and parentheses in those conditions\n \n error: `let` expressions are not supported here\n@@ -267,7 +307,7 @@ error: `let` expressions are not supported here\n LL |     while true..(let 0 = 0) {}\n    |                  ^^^^^^^^^\n    |\n-   = note: only supported directly in conditions of `if`- and `while`-expressions\n+   = note: only supported directly in conditions of `if` and `while` expressions\n    = note: as well as when nested within `&&` and parentheses in those conditions\n \n error: `let` expressions are not supported here\n@@ -276,7 +316,7 @@ error: `let` expressions are not supported here\n LL |     while ..(let 0 = 0) {}\n    |              ^^^^^^^^^\n    |\n-   = note: only supported directly in conditions of `if`- and `while`-expressions\n+   = note: only supported directly in conditions of `if` and `while` expressions\n    = note: as well as when nested within `&&` and parentheses in those conditions\n \n error: `let` expressions are not supported here\n@@ -285,7 +325,7 @@ error: `let` expressions are not supported here\n LL |     while (let 0 = 0).. {}\n    |            ^^^^^^^^^\n    |\n-   = note: only supported directly in conditions of `if`- and `while`-expressions\n+   = note: only supported directly in conditions of `if` and `while` expressions\n    = note: as well as when nested within `&&` and parentheses in those conditions\n \n error: `let` expressions are not supported here\n@@ -294,7 +334,7 @@ error: `let` expressions are not supported here\n LL |     while let Range { start: _, end: _ } = true..true && false {}\n    |           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n-   = note: only supported directly in conditions of `if`- and `while`-expressions\n+   = note: only supported directly in conditions of `if` and `while` expressions\n    = note: as well as when nested within `&&` and parentheses in those conditions\n \n error: `let` expressions are not supported here\n@@ -303,7 +343,7 @@ error: `let` expressions are not supported here\n LL |     while let Range { start: _, end: _ } = true..true || false {}\n    |           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n-   = note: only supported directly in conditions of `if`- and `while`-expressions\n+   = note: only supported directly in conditions of `if` and `while` expressions\n    = note: as well as when nested within `&&` and parentheses in those conditions\n \n error: `let` expressions are not supported here\n@@ -312,7 +352,7 @@ error: `let` expressions are not supported here\n LL |     while let Range { start: F, end } = F..|| true {}\n    |           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n-   = note: only supported directly in conditions of `if`- and `while`-expressions\n+   = note: only supported directly in conditions of `if` and `while` expressions\n    = note: as well as when nested within `&&` and parentheses in those conditions\n \n error: `let` expressions are not supported here\n@@ -321,7 +361,7 @@ error: `let` expressions are not supported here\n LL |     while let Range { start: true, end } = t..&&false {}\n    |           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n-   = note: only supported directly in conditions of `if`- and `while`-expressions\n+   = note: only supported directly in conditions of `if` and `while` expressions\n    = note: as well as when nested within `&&` and parentheses in those conditions\n \n error: `let` expressions are not supported here\n@@ -330,7 +370,7 @@ error: `let` expressions are not supported here\n LL |     while let true = let true = true {}\n    |                      ^^^^^^^^^^^^^^^\n    |\n-   = note: only supported directly in conditions of `if`- and `while`-expressions\n+   = note: only supported directly in conditions of `if` and `while` expressions\n    = note: as well as when nested within `&&` and parentheses in those conditions\n \n error: `let` expressions are not supported here\n@@ -339,7 +379,7 @@ error: `let` expressions are not supported here\n LL |     &let 0 = 0;\n    |      ^^^^^^^^^\n    |\n-   = note: only supported directly in conditions of `if`- and `while`-expressions\n+   = note: only supported directly in conditions of `if` and `while` expressions\n    = note: as well as when nested within `&&` and parentheses in those conditions\n \n error: `let` expressions are not supported here\n@@ -348,7 +388,7 @@ error: `let` expressions are not supported here\n LL |     !let 0 = 0;\n    |      ^^^^^^^^^\n    |\n-   = note: only supported directly in conditions of `if`- and `while`-expressions\n+   = note: only supported directly in conditions of `if` and `while` expressions\n    = note: as well as when nested within `&&` and parentheses in those conditions\n \n error: `let` expressions are not supported here\n@@ -357,7 +397,7 @@ error: `let` expressions are not supported here\n LL |     *let 0 = 0;\n    |      ^^^^^^^^^\n    |\n-   = note: only supported directly in conditions of `if`- and `while`-expressions\n+   = note: only supported directly in conditions of `if` and `while` expressions\n    = note: as well as when nested within `&&` and parentheses in those conditions\n \n error: `let` expressions are not supported here\n@@ -366,7 +406,7 @@ error: `let` expressions are not supported here\n LL |     -let 0 = 0;\n    |      ^^^^^^^^^\n    |\n-   = note: only supported directly in conditions of `if`- and `while`-expressions\n+   = note: only supported directly in conditions of `if` and `while` expressions\n    = note: as well as when nested within `&&` and parentheses in those conditions\n \n error: `let` expressions are not supported here\n@@ -375,7 +415,7 @@ error: `let` expressions are not supported here\n LL |     (let 0 = 0)?;\n    |      ^^^^^^^^^\n    |\n-   = note: only supported directly in conditions of `if`- and `while`-expressions\n+   = note: only supported directly in conditions of `if` and `while` expressions\n    = note: as well as when nested within `&&` and parentheses in those conditions\n \n error: `let` expressions are not supported here\n@@ -384,34 +424,49 @@ error: `let` expressions are not supported here\n LL |     true || let 0 = 0;\n    |             ^^^^^^^^^\n    |\n-   = note: only supported directly in conditions of `if`- and `while`-expressions\n+   = note: only supported directly in conditions of `if` and `while` expressions\n    = note: as well as when nested within `&&` and parentheses in those conditions\n+note: `||` operators are not allowed in let chain expressions\n+  --> $DIR/disallowed-positions.rs:184:10\n+   |\n+LL |     true || let 0 = 0;\n+   |          ^^\n \n error: `let` expressions are not supported here\n   --> $DIR/disallowed-positions.rs:185:14\n    |\n LL |     (true || let 0 = 0);\n    |              ^^^^^^^^^\n    |\n-   = note: only supported directly in conditions of `if`- and `while`-expressions\n+   = note: only supported directly in conditions of `if` and `while` expressions\n    = note: as well as when nested within `&&` and parentheses in those conditions\n+note: `||` operators are not allowed in let chain expressions\n+  --> $DIR/disallowed-positions.rs:185:11\n+   |\n+LL |     (true || let 0 = 0);\n+   |           ^^\n \n error: `let` expressions are not supported here\n   --> $DIR/disallowed-positions.rs:186:22\n    |\n LL |     true && (true || let 0 = 0);\n    |                      ^^^^^^^^^\n    |\n-   = note: only supported directly in conditions of `if`- and `while`-expressions\n+   = note: only supported directly in conditions of `if` and `while` expressions\n    = note: as well as when nested within `&&` and parentheses in those conditions\n+note: `||` operators are not allowed in let chain expressions\n+  --> $DIR/disallowed-positions.rs:186:19\n+   |\n+LL |     true && (true || let 0 = 0);\n+   |                   ^^\n \n error: `let` expressions are not supported here\n   --> $DIR/disallowed-positions.rs:189:9\n    |\n LL |     x = let 0 = 0;\n    |         ^^^^^^^^^\n    |\n-   = note: only supported directly in conditions of `if`- and `while`-expressions\n+   = note: only supported directly in conditions of `if` and `while` expressions\n    = note: as well as when nested within `&&` and parentheses in those conditions\n \n error: `let` expressions are not supported here\n@@ -420,7 +475,7 @@ error: `let` expressions are not supported here\n LL |     true..(let 0 = 0);\n    |            ^^^^^^^^^\n    |\n-   = note: only supported directly in conditions of `if`- and `while`-expressions\n+   = note: only supported directly in conditions of `if` and `while` expressions\n    = note: as well as when nested within `&&` and parentheses in those conditions\n \n error: `let` expressions are not supported here\n@@ -429,7 +484,7 @@ error: `let` expressions are not supported here\n LL |     ..(let 0 = 0);\n    |        ^^^^^^^^^\n    |\n-   = note: only supported directly in conditions of `if`- and `while`-expressions\n+   = note: only supported directly in conditions of `if` and `while` expressions\n    = note: as well as when nested within `&&` and parentheses in those conditions\n \n error: `let` expressions are not supported here\n@@ -438,7 +493,7 @@ error: `let` expressions are not supported here\n LL |     (let 0 = 0)..;\n    |      ^^^^^^^^^\n    |\n-   = note: only supported directly in conditions of `if`- and `while`-expressions\n+   = note: only supported directly in conditions of `if` and `while` expressions\n    = note: as well as when nested within `&&` and parentheses in those conditions\n \n error: `let` expressions are not supported here\n@@ -447,7 +502,7 @@ error: `let` expressions are not supported here\n LL |     (let Range { start: _, end: _ } = true..true || false);\n    |      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n-   = note: only supported directly in conditions of `if`- and `while`-expressions\n+   = note: only supported directly in conditions of `if` and `while` expressions\n    = note: as well as when nested within `&&` and parentheses in those conditions\n \n error: `let` expressions are not supported here\n@@ -456,7 +511,7 @@ error: `let` expressions are not supported here\n LL |     (let true = let true = true);\n    |      ^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n-   = note: only supported directly in conditions of `if`- and `while`-expressions\n+   = note: only supported directly in conditions of `if` and `while` expressions\n    = note: as well as when nested within `&&` and parentheses in those conditions\n \n error: `let` expressions are not supported here\n@@ -465,7 +520,7 @@ error: `let` expressions are not supported here\n LL |     &let 0 = 0\n    |      ^^^^^^^^^\n    |\n-   = note: only supported directly in conditions of `if`- and `while`-expressions\n+   = note: only supported directly in conditions of `if` and `while` expressions\n    = note: as well as when nested within `&&` and parentheses in those conditions\n \n error: `let` expressions are not supported here\n@@ -474,7 +529,7 @@ error: `let` expressions are not supported here\n LL |         true && let 1 = 1\n    |                 ^^^^^^^^^\n    |\n-   = note: only supported directly in conditions of `if`- and `while`-expressions\n+   = note: only supported directly in conditions of `if` and `while` expressions\n    = note: as well as when nested within `&&` and parentheses in those conditions\n \n error: `let` expressions are not supported here\n@@ -483,7 +538,7 @@ error: `let` expressions are not supported here\n LL |         true && let 1 = 1\n    |                 ^^^^^^^^^\n    |\n-   = note: only supported directly in conditions of `if`- and `while`-expressions\n+   = note: only supported directly in conditions of `if` and `while` expressions\n    = note: as well as when nested within `&&` and parentheses in those conditions\n \n error: `let` expressions are not supported here\n@@ -492,7 +547,7 @@ error: `let` expressions are not supported here\n LL |         true && let 1 = 1\n    |                 ^^^^^^^^^\n    |\n-   = note: only supported directly in conditions of `if`- and `while`-expressions\n+   = note: only supported directly in conditions of `if` and `while` expressions\n    = note: as well as when nested within `&&` and parentheses in those conditions\n \n error: `let` expressions are not supported here\n@@ -501,7 +556,7 @@ error: `let` expressions are not supported here\n LL |         true && let 1 = 1\n    |                 ^^^^^^^^^\n    |\n-   = note: only supported directly in conditions of `if`- and `while`-expressions\n+   = note: only supported directly in conditions of `if` and `while` expressions\n    = note: as well as when nested within `&&` and parentheses in those conditions\n \n error[E0308]: mismatched types"}]}