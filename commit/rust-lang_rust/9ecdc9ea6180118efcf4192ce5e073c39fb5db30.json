{"sha": "9ecdc9ea6180118efcf4192ce5e073c39fb5db30", "node_id": "C_kwDOAAsO6NoAKDllY2RjOWVhNjE4MDExOGVmY2Y0MTkyY2U1ZTA3M2MzOWZiNWRiMzA", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-07-21T00:38:37Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-07-21T00:38:37Z"}, "message": "Auto merge of #2381 - rust-lang:infra, r=RalfJung\n\nAdd a scheme for always using the default toolchain, running clippy and fmt before running any other command\n\nI keep forgetting to run rustup-toolchain on rebases across toolchain updates\n\nI also keep forgetting to run rustfmt and clippy. The former isn't run by vscode if I don't explicitly save (I have autosave on).", "tree": {"sha": "074a8eec5aa30e4c472b9af2d7edc6490e08ce4e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/074a8eec5aa30e4c472b9af2d7edc6490e08ce4e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9ecdc9ea6180118efcf4192ce5e073c39fb5db30", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9ecdc9ea6180118efcf4192ce5e073c39fb5db30", "html_url": "https://github.com/rust-lang/rust/commit/9ecdc9ea6180118efcf4192ce5e073c39fb5db30", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9ecdc9ea6180118efcf4192ce5e073c39fb5db30/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e8c4c9af9c3225a78ae505a7f486d748109e40e2", "url": "https://api.github.com/repos/rust-lang/rust/commits/e8c4c9af9c3225a78ae505a7f486d748109e40e2", "html_url": "https://github.com/rust-lang/rust/commit/e8c4c9af9c3225a78ae505a7f486d748109e40e2"}, {"sha": "4d4eeca8a8da67c3dd6e27dd8665b4f11763fd87", "url": "https://api.github.com/repos/rust-lang/rust/commits/4d4eeca8a8da67c3dd6e27dd8665b4f11763fd87", "html_url": "https://github.com/rust-lang/rust/commit/4d4eeca8a8da67c3dd6e27dd8665b4f11763fd87"}], "stats": {"total": 40, "additions": 37, "deletions": 3}, "files": [{"sha": "185ff4f756c1f2ec475547e328aaa6f7c2069348", "filename": ".gitignore", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/9ecdc9ea6180118efcf4192ce5e073c39fb5db30/.gitignore", "raw_url": "https://github.com/rust-lang/rust/raw/9ecdc9ea6180118efcf4192ce5e073c39fb5db30/.gitignore", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/.gitignore?ref=9ecdc9ea6180118efcf4192ce5e073c39fb5db30", "patch": "@@ -8,3 +8,4 @@ tex/*/out\n perf.data\n perf.data.old\n flamegraph.svg\n+.auto-*"}, {"sha": "47864d822c4f45dc98258d1484b59dee2ffa0177", "filename": "CONTRIBUTING.md", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/9ecdc9ea6180118efcf4192ce5e073c39fb5db30/CONTRIBUTING.md", "raw_url": "https://github.com/rust-lang/rust/raw/9ecdc9ea6180118efcf4192ce5e073c39fb5db30/CONTRIBUTING.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/CONTRIBUTING.md?ref=9ecdc9ea6180118efcf4192ce5e073c39fb5db30", "patch": "@@ -28,6 +28,11 @@ install that exact version of rustc as a toolchain:\n This will set up a rustup toolchain called `miri` and set it as an override for\n the current directory.\n \n+You can also create a `.auto-everything` file (contents don't matter, can be empty), which\n+will cause any `./miri` command to automatically call `rustup-toolchain`, `clippy` and `rustfmt`\n+for you. If you don't want all of these to happen, you can add individual `.auto-toolchain`,\n+`.auto-clippy` and `.auto-fmt` files respectively.\n+\n [`rustup-toolchain-install-master`]: https://github.com/kennytm/rustup-toolchain-install-master\n \n ## Building and testing Miri\n@@ -244,6 +249,14 @@ rustup toolchain link stage2 build/x86_64-unknown-linux-gnu/stage2\n rustup override set stage2\n ```\n \n+Note: When you are working with a locally built rustc or any other toolchain that\n+is not the same as the one in `rust-version`, you should not have `.auto-everything` or\n+`.auto-toolchain` as that will keep resetting your toolchain.\n+\n+```\n+rm -f .auto-everything .auto-toolchain\n+```\n+\n Important: You need to delete the Miri cache when you change the stdlib; otherwise the\n old, chached version will be used. On Linux, the cache is located at `~/.cache/miri`,\n and on Windows, it is located at `%LOCALAPPDATA%\\rust-lang\\miri\\cache`; the exact"}, {"sha": "2a9be1de3629c8929c075be6e2f5761273a88ee1", "filename": "miri", "status": "modified", "additions": 23, "deletions": 3, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/9ecdc9ea6180118efcf4192ce5e073c39fb5db30/miri", "raw_url": "https://github.com/rust-lang/rust/raw/9ecdc9ea6180118efcf4192ce5e073c39fb5db30/miri", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/miri?ref=9ecdc9ea6180118efcf4192ce5e073c39fb5db30", "patch": "@@ -48,14 +48,34 @@ Pass extra flags to all cargo invocations.\n EOF\n )\n \n-## Preparation\n+## We need to know where we are.\n # macOS does not have a useful readlink/realpath so we have to use Python instead...\n MIRIDIR=$(python3 -c 'import os, sys; print(os.path.dirname(os.path.realpath(sys.argv[1])))' \"$0\")\n-TOOLCHAIN=$(cd \"$MIRIDIR\"; rustup show active-toolchain | head -n 1 | cut -d ' ' -f 1)\n \n-# Determine command.\n+## Run the auto-things.\n+if [ -z \"$AUTO_OPS\" ]; then\n+    export AUTO_OPS=42\n+\n+    # Run this first, so that the toolchain doesn't change after\n+    # other code has run.\n+    if [ -f \"$MIRIDIR/.auto-everything\" ] || [ -f \"$MIRIDIR/.auto-toolchain\" ] ; then\n+        \"$MIRIDIR\"/rustup-toolchain\n+    fi\n+\n+    if [ -f \"$MIRIDIR/.auto-everything\" ] || [ -f \"$MIRIDIR/.auto-fmt\" ] ; then\n+        $0 fmt\n+    fi\n+\n+    if [ -f \"$MIRIDIR/.auto-everything\" ] || [ -f \"$MIRIDIR/.auto-clippy\" ] ; then\n+        $0 clippy -- -D warnings\n+    fi\n+fi\n+\n+## Determine command and toolchain.\n COMMAND=\"$1\"\n [ $# -gt 0 ] && shift\n+# Doing this *after* auto-toolchain logic above, since that might change the toolchain.\n+TOOLCHAIN=$(cd \"$MIRIDIR\"; rustup show active-toolchain | head -n 1 | cut -d ' ' -f 1)\n \n ## Handle some commands early, since they should *not* alter the environment.\n case \"$COMMAND\" in"}]}