{"sha": "72781085bba92756d11f9fcc3d879b60108d230f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjcyNzgxMDg1YmJhOTI3NTZkMTFmOWZjYzNkODc5YjYwMTA4ZDIzMGY=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2021-04-05T19:00:27Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-04-05T19:00:27Z"}, "message": "Merge #8352\n\n8352: Remove dead legacy macro expansion code r=lnicola a=brandondong\n\nI was investigating some unrelated macro issue when I noticed this dead code. This legacy macro expansion logic was changed in https://github.com/rust-analyzer/rust-analyzer/pull/8128.\n\nCo-authored-by: Brandon <brandondong604@hotmail.com>", "tree": {"sha": "0b7d4debbe2e5fb4603faa452cf05b795f9f20dc", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0b7d4debbe2e5fb4603faa452cf05b795f9f20dc"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/72781085bba92756d11f9fcc3d879b60108d230f", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJga15LCRBK7hj4Ov3rIwAAdHIIAA+pvjahG3mfMtziBXpqKIw/\nBOhhlzzBzyZs6tzoxROXPt72ywpzC6c9OpFEf5L2aLVtYuAwZaKlkTrxRKp5dpX/\notBbHG4TCOmwLycgRye0HxCqakBdaPPvhhCoselM8mnDaUR380ZXdqO3yvoKF84w\nEbBc9jgN0z62IoK3EZRhdZyUlFfkOESyTccI27CVx7eUtPJ3L8vNjYGKs6iyXF8m\nJs0Jv6UNC50NihRfjf18AdMHUWksVYCbeKis8f03z1JDTYIzqjnK5iwWEUiSrDIO\n6JwpEJjvE8gnUEGwDMA3SxY2F8L7Kq6lZUnL0AH7IN3Vb4xFBjgGouSqNfatxJY=\n=9UbH\n-----END PGP SIGNATURE-----\n", "payload": "tree 0b7d4debbe2e5fb4603faa452cf05b795f9f20dc\nparent 453f2360d311335839744ed538efe21d31dc6bad\nparent 4dbec2d5453dacdc699a5801114fcd7a3fbcc635\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1617649227 +0000\ncommitter GitHub <noreply@github.com> 1617649227 +0000\n\nMerge #8352\n\n8352: Remove dead legacy macro expansion code r=lnicola a=brandondong\n\nI was investigating some unrelated macro issue when I noticed this dead code. This legacy macro expansion logic was changed in https://github.com/rust-analyzer/rust-analyzer/pull/8128.\n\nCo-authored-by: Brandon <brandondong604@hotmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/72781085bba92756d11f9fcc3d879b60108d230f", "html_url": "https://github.com/rust-lang/rust/commit/72781085bba92756d11f9fcc3d879b60108d230f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/72781085bba92756d11f9fcc3d879b60108d230f/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "453f2360d311335839744ed538efe21d31dc6bad", "url": "https://api.github.com/repos/rust-lang/rust/commits/453f2360d311335839744ed538efe21d31dc6bad", "html_url": "https://github.com/rust-lang/rust/commit/453f2360d311335839744ed538efe21d31dc6bad"}, {"sha": "4dbec2d5453dacdc699a5801114fcd7a3fbcc635", "url": "https://api.github.com/repos/rust-lang/rust/commits/4dbec2d5453dacdc699a5801114fcd7a3fbcc635", "html_url": "https://github.com/rust-lang/rust/commit/4dbec2d5453dacdc699a5801114fcd7a3fbcc635"}], "stats": {"total": 12, "additions": 3, "deletions": 9}, "files": [{"sha": "f42f9270230b5fa6b28aa07a644e71bec78abd47", "filename": "crates/hir_def/src/nameres/collector.rs", "status": "modified", "additions": 3, "deletions": 9, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/72781085bba92756d11f9fcc3d879b60108d230f/crates%2Fhir_def%2Fsrc%2Fnameres%2Fcollector.rs", "raw_url": "https://github.com/rust-lang/rust/raw/72781085bba92756d11f9fcc3d879b60108d230f/crates%2Fhir_def%2Fsrc%2Fnameres%2Fcollector.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_def%2Fsrc%2Fnameres%2Fcollector.rs?ref=72781085bba92756d11f9fcc3d879b60108d230f", "patch": "@@ -215,7 +215,7 @@ struct MacroDirective {\n \n #[derive(Clone, Debug, Eq, PartialEq)]\n enum MacroDirectiveKind {\n-    FnLike { ast_id: AstIdWithPath<ast::MacroCall>, legacy: Option<MacroCallId> },\n+    FnLike { ast_id: AstIdWithPath<ast::MacroCall> },\n     Derive { ast_id: AstIdWithPath<ast::Item> },\n }\n \n@@ -806,13 +806,7 @@ impl DefCollector<'_> {\n         let mut res = ReachedFixedPoint::Yes;\n         macros.retain(|directive| {\n             match &directive.kind {\n-                MacroDirectiveKind::FnLike { ast_id, legacy } => {\n-                    if let Some(call_id) = legacy {\n-                        res = ReachedFixedPoint::No;\n-                        resolved.push((directive.module_id, *call_id, directive.depth));\n-                        return false;\n-                    }\n-\n+                MacroDirectiveKind::FnLike { ast_id } => {\n                     match macro_call_as_call_id(\n                         ast_id,\n                         self.db,\n@@ -1535,7 +1529,7 @@ impl ModCollector<'_, '_> {\n         self.def_collector.unexpanded_macros.push(MacroDirective {\n             module_id: self.module_id,\n             depth: self.macro_depth + 1,\n-            kind: MacroDirectiveKind::FnLike { ast_id, legacy: None },\n+            kind: MacroDirectiveKind::FnLike { ast_id },\n         });\n     }\n "}]}