{"sha": "46ea12a499aecd655a5c954431466db0a66e8ec9", "node_id": "C_kwDOAAsO6NoAKDQ2ZWExMmE0OTlhZWNkNjU1YTVjOTU0NDMxNDY2ZGIwYTY2ZThlYzk", "commit": {"author": {"name": "nx2k3", "email": "nx2k3@duck.com", "date": "2023-02-26T16:17:23Z"}, "committer": {"name": "nx2k3", "email": "nx2k3@duck.com", "date": "2023-02-26T16:17:23Z"}, "message": "fix #108495, postfix decrement and prefix decrement has no warning", "tree": {"sha": "a81e5ca4513c95bf96f7f9f50696fb1c9422f0b9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a81e5ca4513c95bf96f7f9f50696fb1c9422f0b9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/46ea12a499aecd655a5c954431466db0a66e8ec9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/46ea12a499aecd655a5c954431466db0a66e8ec9", "html_url": "https://github.com/rust-lang/rust/commit/46ea12a499aecd655a5c954431466db0a66e8ec9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/46ea12a499aecd655a5c954431466db0a66e8ec9/comments", "author": {"login": "nx2k3", "id": 71603665, "node_id": "MDQ6VXNlcjcxNjAzNjY1", "avatar_url": "https://avatars.githubusercontent.com/u/71603665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nx2k3", "html_url": "https://github.com/nx2k3", "followers_url": "https://api.github.com/users/nx2k3/followers", "following_url": "https://api.github.com/users/nx2k3/following{/other_user}", "gists_url": "https://api.github.com/users/nx2k3/gists{/gist_id}", "starred_url": "https://api.github.com/users/nx2k3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nx2k3/subscriptions", "organizations_url": "https://api.github.com/users/nx2k3/orgs", "repos_url": "https://api.github.com/users/nx2k3/repos", "events_url": "https://api.github.com/users/nx2k3/events{/privacy}", "received_events_url": "https://api.github.com/users/nx2k3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nx2k3", "id": 71603665, "node_id": "MDQ6VXNlcjcxNjAzNjY1", "avatar_url": "https://avatars.githubusercontent.com/u/71603665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nx2k3", "html_url": "https://github.com/nx2k3", "followers_url": "https://api.github.com/users/nx2k3/followers", "following_url": "https://api.github.com/users/nx2k3/following{/other_user}", "gists_url": "https://api.github.com/users/nx2k3/gists{/gist_id}", "starred_url": "https://api.github.com/users/nx2k3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nx2k3/subscriptions", "organizations_url": "https://api.github.com/users/nx2k3/orgs", "repos_url": "https://api.github.com/users/nx2k3/repos", "events_url": "https://api.github.com/users/nx2k3/events{/privacy}", "received_events_url": "https://api.github.com/users/nx2k3/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "70fd012439d75fd6ce561a6518b9b8fd399f455f", "url": "https://api.github.com/repos/rust-lang/rust/commits/70fd012439d75fd6ce561a6518b9b8fd399f455f", "html_url": "https://github.com/rust-lang/rust/commit/70fd012439d75fd6ce561a6518b9b8fd399f455f"}], "stats": {"total": 221, "additions": 214, "deletions": 7}, "files": [{"sha": "e3dbe89b56c4e261b0d4cacf59105dba89fafc95", "filename": "compiler/rustc_parse/src/parser/diagnostics.rs", "status": "modified", "additions": 26, "deletions": 3, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/46ea12a499aecd655a5c954431466db0a66e8ec9/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/46ea12a499aecd655a5c954431466db0a66e8ec9/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fdiagnostics.rs?ref=46ea12a499aecd655a5c954431466db0a66e8ec9", "patch": "@@ -166,7 +166,7 @@ enum IsStandalone {\n enum IncOrDec {\n     Inc,\n     // FIXME: `i--` recovery isn't implemented yet\n-    #[allow(dead_code)]\n+    // #[allow(dead_code)]\n     Dec,\n }\n \n@@ -1331,7 +1331,7 @@ impl<'a> Parser<'a> {\n \n         Ok(())\n     }\n-\n+    #[allow(dead_code)]\n     pub(super) fn recover_from_prefix_increment(\n         &mut self,\n         operand_expr: P<Expr>,\n@@ -1342,7 +1342,7 @@ impl<'a> Parser<'a> {\n         let kind = IncDecRecovery { standalone, op: IncOrDec::Inc, fixity: UnaryFixity::Pre };\n         self.recover_from_inc_dec(operand_expr, kind, op_span)\n     }\n-\n+    #[allow(dead_code)]\n     pub(super) fn recover_from_postfix_increment(\n         &mut self,\n         operand_expr: P<Expr>,\n@@ -1356,7 +1356,30 @@ impl<'a> Parser<'a> {\n         };\n         self.recover_from_inc_dec(operand_expr, kind, op_span)\n     }\n+    pub(super) fn recover_from_prefix_decrement(\n+        &mut self,\n+        operand_expr: P<Expr>,\n+        op_span: Span,\n+        start_stmt: bool,\n+    ) -> PResult<'a, P<Expr>> {\n+        let standalone = if start_stmt { IsStandalone::Standalone } else { IsStandalone::Subexpr };\n+        let kind = IncDecRecovery { standalone, op: IncOrDec::Dec, fixity: UnaryFixity::Pre };\n+        self.recover_from_inc_dec(operand_expr, kind, op_span)\n+    }\n \n+    pub(super) fn recover_from_postfix_decrement(\n+        &mut self,\n+        operand_expr: P<Expr>,\n+        op_span: Span,\n+        start_stmt: bool,\n+    ) -> PResult<'a, P<Expr>> {\n+        let kind = IncDecRecovery {\n+            standalone: if start_stmt { IsStandalone::Standalone } else { IsStandalone::Subexpr },\n+            op: IncOrDec::Dec,\n+            fixity: UnaryFixity::Post,\n+        };\n+        self.recover_from_inc_dec(operand_expr, kind, op_span)\n+    }\n     fn recover_from_inc_dec(\n         &mut self,\n         base: P<Expr>,"}, {"sha": "2004d0a8fe7b6c59bdfdb6bb73fe32a3fd8259ac", "filename": "compiler/rustc_parse/src/parser/expr.rs", "status": "modified", "additions": 29, "deletions": 4, "changes": 33, "blob_url": "https://github.com/rust-lang/rust/blob/46ea12a499aecd655a5c954431466db0a66e8ec9/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/46ea12a499aecd655a5c954431466db0a66e8ec9/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fexpr.rs?ref=46ea12a499aecd655a5c954431466db0a66e8ec9", "patch": "@@ -281,6 +281,16 @@ impl<'a> Parser<'a> {\n                 lhs = self.recover_from_postfix_increment(lhs, op_span, starts_stmt)?;\n                 continue;\n             }\n+            if self.prev_token == token::BinOp(token::Minus)\n+                && self.token == token::BinOp(token::Minus)\n+                && self.prev_token.span.between(self.token.span).is_empty()\n+            {\n+                let op_span = self.prev_token.span.to(self.token.span);\n+                // Eat the second `+`\n+                self.bump();\n+                lhs = self.recover_from_postfix_decrement(lhs, op_span, starts_stmt)?;\n+                continue;\n+            }\n \n             let op = op.node;\n             // Special cases:\n@@ -550,10 +560,7 @@ impl<'a> Parser<'a> {\n             token::Not => make_it!(this, attrs, |this, _| this.parse_unary_expr(lo, UnOp::Not)),\n             // `~expr`\n             token::Tilde => make_it!(this, attrs, |this, _| this.recover_tilde_expr(lo)),\n-            // `-expr`\n-            token::BinOp(token::Minus) => {\n-                make_it!(this, attrs, |this, _| this.parse_unary_expr(lo, UnOp::Neg))\n-            }\n+\n             // `*expr`\n             token::BinOp(token::Star) => {\n                 make_it!(this, attrs, |this, _| this.parse_unary_expr(lo, UnOp::Deref))\n@@ -595,6 +602,24 @@ impl<'a> Parser<'a> {\n                 let operand_expr = this.parse_dot_or_call_expr(Default::default())?;\n                 this.recover_from_prefix_increment(operand_expr, pre_span, starts_stmt)\n             }\n+            // Recover from `++x`:\n+            token::BinOp(token::Minus)\n+                if this.look_ahead(1, |t| *t == token::BinOp(token::Minus)) =>\n+            {\n+                let starts_stmt = this.prev_token == token::Semi\n+                    || this.prev_token == token::CloseDelim(Delimiter::Brace);\n+                let pre_span = this.token.span.to(this.look_ahead(1, |t| t.span));\n+                // Eat both `+`s.\n+                this.bump();\n+                this.bump();\n+\n+                let operand_expr = this.parse_dot_or_call_expr(Default::default())?;\n+                this.recover_from_prefix_decrement(operand_expr, pre_span, starts_stmt)\n+            }\n+            // `-expr`\n+            token::BinOp(token::Minus) => {\n+                make_it!(this, attrs, |this, _| this.parse_unary_expr(lo, UnOp::Neg))\n+            }\n             token::Ident(..) if this.token.is_keyword(kw::Box) => {\n                 make_it!(this, attrs, |this, _| this.parse_box_expr(lo))\n             }"}, {"sha": "165e6142b466cb811c3c76b64e16172e60e327e0", "filename": "tests/ui/parser/issue-108495-dec.rs", "status": "added", "additions": 52, "deletions": 0, "changes": 52, "blob_url": "https://github.com/rust-lang/rust/blob/46ea12a499aecd655a5c954431466db0a66e8ec9/tests%2Fui%2Fparser%2Fissue-108495-dec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/46ea12a499aecd655a5c954431466db0a66e8ec9/tests%2Fui%2Fparser%2Fissue-108495-dec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fparser%2Fissue-108495-dec.rs?ref=46ea12a499aecd655a5c954431466db0a66e8ec9", "patch": "@@ -0,0 +1,52 @@\n+fn test1() {\n+    let mut i = 0;\n+    let _ = i + --i; //~ ERROR Rust has no prefix decrement operator\n+}\n+\n+fn test2() {\n+    let mut i = 0;\n+    let _ = --i + i; //~ ERROR Rust has no prefix decrement operator\n+}\n+\n+fn test3() {\n+    let mut i = 0;\n+    let _ = --i + --i; //~ ERROR Rust has no prefix decrement operator\n+}\n+\n+fn test4() {\n+    let mut i = 0;\n+    let _ = i + i--; //~ ERROR Rust has no postfix decrement operator\n+    // won't suggest since we can not handle the precedences\n+}\n+\n+fn test5() {\n+    let mut i = 0;\n+    let _ = i-- + i; //~ ERROR Rust has no postfix decrement operator\n+}\n+\n+fn test6() {\n+    let mut i = 0;\n+    let _ = i-- + i--; //~ ERROR Rust has no postfix decrement operator\n+}\n+\n+fn test7() {\n+    let mut i = 0;\n+    let _ = --i + i--; //~ ERROR Rust has no prefix decrement operator\n+}\n+\n+fn test8() {\n+    let mut i = 0;\n+    let _ = i-- + --i; //~ ERROR Rust has no postfix decrement operator\n+}\n+\n+fn test9() {\n+    let mut i = 0;\n+    let _ = (1 + 2 + i)--; //~ ERROR Rust has no postfix decrement operator\n+}\n+\n+fn test10() {\n+    let mut i = 0;\n+    let _ = (i-- + 1) + 2; //~ ERROR Rust has no postfix decrement operator\n+}\n+\n+fn main() { }"}, {"sha": "078fec74c55451f293c18aa9da513f178dab0b32", "filename": "tests/ui/parser/issue-108495-dec.stderr", "status": "added", "additions": 107, "deletions": 0, "changes": 107, "blob_url": "https://github.com/rust-lang/rust/blob/46ea12a499aecd655a5c954431466db0a66e8ec9/tests%2Fui%2Fparser%2Fissue-108495-dec.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/46ea12a499aecd655a5c954431466db0a66e8ec9/tests%2Fui%2Fparser%2Fissue-108495-dec.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fparser%2Fissue-108495-dec.stderr?ref=46ea12a499aecd655a5c954431466db0a66e8ec9", "patch": "@@ -0,0 +1,107 @@\n+error: Rust has no prefix decrement operator\n+  --> $DIR/issue-dec.rs:3:17\n+   |\n+LL |     let _ = i + --i;\n+   |                 ^^ not a valid prefix operator\n+   |\n+help: use `-= 1` instead\n+   |\n+LL |     let _ = i + { i -= 1; i };\n+   |                 ~   +++++++++\n+\n+error: Rust has no prefix decrement operator\n+  --> $DIR/issue-dec.rs:8:13\n+   |\n+LL |     let _ = --i + i;\n+   |             ^^ not a valid prefix operator\n+   |\n+help: use `-= 1` instead\n+   |\n+LL |     let _ = { i -= 1; i } + i;\n+   |             ~   +++++++++\n+\n+error: Rust has no prefix decrement operator\n+  --> $DIR/issue-dec.rs:13:13\n+   |\n+LL |     let _ = --i + --i;\n+   |             ^^ not a valid prefix operator\n+   |\n+help: use `-= 1` instead\n+   |\n+LL |     let _ = { i -= 1; i } + --i;\n+   |             ~   +++++++++\n+\n+error: Rust has no postfix decrement operator\n+  --> $DIR/issue-dec.rs:18:18\n+   |\n+LL |     let _ = i + i--;\n+   |                  ^^ not a valid postfix operator\n+\n+error: Rust has no postfix decrement operator\n+  --> $DIR/issue-dec.rs:24:14\n+   |\n+LL |     let _ = i-- + i;\n+   |              ^^ not a valid postfix operator\n+   |\n+help: use `-= 1` instead\n+   |\n+LL |     let _ = { let tmp = i; i -= 1; tmp } + i;\n+   |             +++++++++++  ~~~~~~~~~~~~~~~\n+\n+error: Rust has no postfix decrement operator\n+  --> $DIR/issue-dec.rs:29:14\n+   |\n+LL |     let _ = i-- + i--;\n+   |              ^^ not a valid postfix operator\n+   |\n+help: use `-= 1` instead\n+   |\n+LL |     let _ = { let tmp = i; i -= 1; tmp } + i--;\n+   |             +++++++++++  ~~~~~~~~~~~~~~~\n+\n+error: Rust has no prefix decrement operator\n+  --> $DIR/issue-dec.rs:34:13\n+   |\n+LL |     let _ = --i + i--;\n+   |             ^^ not a valid prefix operator\n+   |\n+help: use `-= 1` instead\n+   |\n+LL |     let _ = { i -= 1; i } + i--;\n+   |             ~   +++++++++\n+\n+error: Rust has no postfix decrement operator\n+  --> $DIR/issue-dec.rs:39:14\n+   |\n+LL |     let _ = i-- + --i;\n+   |              ^^ not a valid postfix operator\n+   |\n+help: use `-= 1` instead\n+   |\n+LL |     let _ = { let tmp = i; i -= 1; tmp } + --i;\n+   |             +++++++++++  ~~~~~~~~~~~~~~~\n+\n+error: Rust has no postfix decrement operator\n+  --> $DIR/issue-dec.rs:44:24\n+   |\n+LL |     let _ = (1 + 2 + i)--;\n+   |                        ^^ not a valid postfix operator\n+   |\n+help: use `-= 1` instead\n+   |\n+LL |     let _ = { let tmp = (1 + 2 + i); (1 + 2 + i) -= 1; tmp };\n+   |             +++++++++++            ~~~~~~~~~~~~~~~~~~~~~~~~~\n+\n+error: Rust has no postfix decrement operator\n+  --> $DIR/issue-dec.rs:49:15\n+   |\n+LL |     let _ = (i-- + 1) + 2;\n+   |               ^^ not a valid postfix operator\n+   |\n+help: use `-= 1` instead\n+   |\n+LL |     let _ = ({ let tmp = i; i -= 1; tmp } + 1) + 2;\n+   |              +++++++++++  ~~~~~~~~~~~~~~~\n+\n+error: aborting due to 10 previous errors\n+"}]}