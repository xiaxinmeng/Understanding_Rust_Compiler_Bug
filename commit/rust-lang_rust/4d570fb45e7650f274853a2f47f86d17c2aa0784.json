{"sha": "4d570fb45e7650f274853a2f47f86d17c2aa0784", "node_id": "MDY6Q29tbWl0NzI0NzEyOjRkNTcwZmI0NWU3NjUwZjI3NDg1M2EyZjQ3Zjg2ZDE3YzJhYTA3ODQ=", "commit": {"author": {"name": "Lzu Tao", "email": "taolzu@gmail.com", "date": "2020-10-04T07:30:01Z"}, "committer": {"name": "Lzu Tao", "email": "taolzu@gmail.com", "date": "2020-10-04T12:01:21Z"}, "message": "Removes reg aliases since there are many ABIs: o32/n32/n64", "tree": {"sha": "1a99c11ea6844ceb1e56fe23d03569111d4f8714", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1a99c11ea6844ceb1e56fe23d03569111d4f8714"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4d570fb45e7650f274853a2f47f86d17c2aa0784", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4d570fb45e7650f274853a2f47f86d17c2aa0784", "html_url": "https://github.com/rust-lang/rust/commit/4d570fb45e7650f274853a2f47f86d17c2aa0784", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4d570fb45e7650f274853a2f47f86d17c2aa0784/comments", "author": {"login": "tesuji", "id": 15225902, "node_id": "MDQ6VXNlcjE1MjI1OTAy", "avatar_url": "https://avatars.githubusercontent.com/u/15225902?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tesuji", "html_url": "https://github.com/tesuji", "followers_url": "https://api.github.com/users/tesuji/followers", "following_url": "https://api.github.com/users/tesuji/following{/other_user}", "gists_url": "https://api.github.com/users/tesuji/gists{/gist_id}", "starred_url": "https://api.github.com/users/tesuji/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tesuji/subscriptions", "organizations_url": "https://api.github.com/users/tesuji/orgs", "repos_url": "https://api.github.com/users/tesuji/repos", "events_url": "https://api.github.com/users/tesuji/events{/privacy}", "received_events_url": "https://api.github.com/users/tesuji/received_events", "type": "User", "site_admin": false}, "committer": {"login": "tesuji", "id": 15225902, "node_id": "MDQ6VXNlcjE1MjI1OTAy", "avatar_url": "https://avatars.githubusercontent.com/u/15225902?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tesuji", "html_url": "https://github.com/tesuji", "followers_url": "https://api.github.com/users/tesuji/followers", "following_url": "https://api.github.com/users/tesuji/following{/other_user}", "gists_url": "https://api.github.com/users/tesuji/gists{/gist_id}", "starred_url": "https://api.github.com/users/tesuji/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tesuji/subscriptions", "organizations_url": "https://api.github.com/users/tesuji/orgs", "repos_url": "https://api.github.com/users/tesuji/repos", "events_url": "https://api.github.com/users/tesuji/events{/privacy}", "received_events_url": "https://api.github.com/users/tesuji/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "79f477bb1fe81385aebde628e5a3f5c9168b24e0", "url": "https://api.github.com/repos/rust-lang/rust/commits/79f477bb1fe81385aebde628e5a3f5c9168b24e0", "html_url": "https://github.com/rust-lang/rust/commit/79f477bb1fe81385aebde628e5a3f5c9168b24e0"}], "stats": {"total": 67, "additions": 32, "deletions": 35}, "files": [{"sha": "b19489aa439bf54ddcb27cbbd52baca70c503f1f", "filename": "compiler/rustc_target/src/asm/mips.rs", "status": "modified", "additions": 32, "deletions": 32, "changes": 64, "blob_url": "https://github.com/rust-lang/rust/blob/4d570fb45e7650f274853a2f47f86d17c2aa0784/compiler%2Frustc_target%2Fsrc%2Fasm%2Fmips.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4d570fb45e7650f274853a2f47f86d17c2aa0784/compiler%2Frustc_target%2Fsrc%2Fasm%2Fmips.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_target%2Fsrc%2Fasm%2Fmips.rs?ref=4d570fb45e7650f274853a2f47f86d17c2aa0784", "patch": "@@ -45,31 +45,31 @@ impl MipsInlineAsmRegClass {\n // The reserved registers are somewhat taken from <https://git.io/JUR1k#L150>.\n def_regs! {\n     Mips MipsInlineAsmReg MipsInlineAsmRegClass {\n-        v0: reg = [\"$2\", \"$v0\"],\n-        v1: reg = [\"$3\", \"$v1\"],\n-        a0: reg = [\"$4\", \"$a0\"],\n-        a1: reg = [\"$5\", \"$a1\"],\n-        a2: reg = [\"$6\", \"$a2\"],\n-        a3: reg = [\"$7\", \"$a3\"],\n+        r2: reg = [\"$2\"],\n+        r3: reg = [\"$3\"],\n+        r4: reg = [\"$4\"],\n+        r5: reg = [\"$5\"],\n+        r6: reg = [\"$6\"],\n+        r7: reg = [\"$7\"],\n         // FIXME: Reserve $t0, $t1 if in mips16 mode.\n-        t0: reg = [\"$8\", \"$t0\"],\n-        t1: reg = [\"$9\", \"$t1\"],\n-        t2: reg = [\"$10\", \"$t2\"],\n-        t3: reg = [\"$11\", \"$t3\"],\n-        t4: reg = [\"$12\", \"$t4\"],\n-        t5: reg = [\"$13\", \"$t5\"],\n-        t6: reg = [\"$14\", \"$t6\"],\n-        t7: reg = [\"$15\", \"$t7\"],\n-        s0: reg = [\"$16\", \"$s0\"],\n-        s1: reg = [\"$17\", \"$s1\"],\n-        s2: reg = [\"$18\", \"$s2\"],\n-        s3: reg = [\"$19\", \"$s3\"],\n-        s4: reg = [\"$20\", \"$s4\"],\n-        s5: reg = [\"$21\", \"$s5\"],\n-        s6: reg = [\"$22\", \"$s6\"],\n-        s7: reg = [\"$23\", \"$s7\"],\n-        t8: reg = [\"$24\", \"$t8\"],\n-        t9: reg = [\"$25\", \"$t9\"],\n+        r8: reg = [\"$8\"],\n+        r9: reg = [\"$9\"],\n+        r10: reg = [\"$10\"],\n+        r11: reg = [\"$11\"],\n+        r12: reg = [\"$12\"],\n+        r13: reg = [\"$13\"],\n+        r14: reg = [\"$14\"],\n+        r15: reg = [\"$15\"],\n+        r16: reg = [\"$16\"],\n+        r17: reg = [\"$17\"],\n+        r18: reg = [\"$18\"],\n+        r19: reg = [\"$19\"],\n+        r20: reg = [\"$20\"],\n+        r21: reg = [\"$21\"],\n+        r22: reg = [\"$22\"],\n+        r23: reg = [\"$23\"],\n+        r24: reg = [\"$24\"],\n+        r25: reg = [\"$25\"],\n         f0: freg = [\"$f0\"],\n         f1: freg = [\"$f1\"],\n         f2: freg = [\"$f2\"],\n@@ -102,21 +102,21 @@ def_regs! {\n         f29: freg = [\"$f29\"],\n         f30: freg = [\"$f30\"],\n         f31: freg = [\"$f31\"],\n-        #error = [\"$0\", \"$zero\"] =>\n+        #error = [\"$0\"] =>\n             \"constant zero cannot be used as an operand for inline asm\",\n-        #error = [\"$1\", \"$at\"] =>\n+        #error = [\"$1\"] =>\n             \"reserved for assembler (Assembler Temp)\",\n-        #error = [\"$26\", \"$k0\"] =>\n+        #error = [\"$26\"] =>\n             \"OS-reserved register cannot be used as an operand for inline asm\",\n-        #error = [\"$27\", \"$k1\"] =>\n+        #error = [\"$27\"] =>\n             \"OS-reserved register cannot be used as an operand for inline asm\",\n-        #error = [\"$28\", \"$gp\"] =>\n+        #error = [\"$28\"] =>\n             \"the global pointer cannot be used as an operand for inline asm\",\n-        #error = [\"$29\", \"$sp\"] =>\n+        #error = [\"$29\"] =>\n             \"the stack pointer cannot be used as an operand for inline asm\",\n-        #error = [\"$30\", \"$s8\", \"$fp\"] =>\n+        #error = [\"$30\"] =>\n             \"the frame pointer cannot be used as an operand for inline asm\",\n-        #error = [\"$31\", \"$ra\"] =>\n+        #error = [\"$31\"] =>\n             \"the return address register cannot be used as an operand for inline asm\",\n     }\n }"}, {"sha": "6e4e1f78b96940abd8fda07725e9d1535fdfe9ff", "filename": "src/doc/unstable-book/src/library-features/asm.md", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/4d570fb45e7650f274853a2f47f86d17c2aa0784/src%2Fdoc%2Funstable-book%2Fsrc%2Flibrary-features%2Fasm.md", "raw_url": "https://github.com/rust-lang/rust/raw/4d570fb45e7650f274853a2f47f86d17c2aa0784/src%2Fdoc%2Funstable-book%2Fsrc%2Flibrary-features%2Fasm.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Funstable-book%2Fsrc%2Flibrary-features%2Fasm.md?ref=4d570fb45e7650f274853a2f47f86d17c2aa0784", "patch": "@@ -602,7 +602,6 @@ Some registers have multiple names. These are all treated by the compiler as ide\n | ARM | `r13` | `sp` |\n | ARM | `r14` | `lr` |\n | ARM | `r15` | `pc` |\n-| MIPS32 | `$[2-25]` | Please [see the Wikipedia page][mips-regs] |\n | RISC-V | `x0` | `zero` |\n | RISC-V | `x1` | `ra` |\n | RISC-V | `x2` | `sp` |\n@@ -623,8 +622,6 @@ Some registers have multiple names. These are all treated by the compiler as ide\n | Hexagon | `r30` | `fr` |\n | Hexagon | `r31` | `lr` |\n \n-[mips-regs]: https://en.wikibooks.org/wiki/MIPS_Assembly/Register_File#Registers\n-\n Some registers cannot be used for input or output operands:\n \n | Architecture | Unsupported register | Reason |"}]}