{"sha": "87ce5ec6e955849189887e56dfafc45e1293f63f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjg3Y2U1ZWM2ZTk1NTg0OTE4OTg4N2U1NmRmYWZjNDVlMTI5M2Y2M2Y=", "commit": {"author": {"name": "Felix S. Klock II", "email": "pnkfelix@pnkfx.org", "date": "2018-10-29T23:37:38Z"}, "committer": {"name": "Felix S. Klock II", "email": "pnkfelix@pnkfx.org", "date": "2018-10-29T23:37:38Z"}, "message": "Update compare-mode=nll stderr files to reflect the fix to #55492.", "tree": {"sha": "9b331e8f591027b29b49f6acc960c3e43cdf2a73", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9b331e8f591027b29b49f6acc960c3e43cdf2a73"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/87ce5ec6e955849189887e56dfafc45e1293f63f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/87ce5ec6e955849189887e56dfafc45e1293f63f", "html_url": "https://github.com/rust-lang/rust/commit/87ce5ec6e955849189887e56dfafc45e1293f63f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/87ce5ec6e955849189887e56dfafc45e1293f63f/comments", "author": {"login": "pnkfelix", "id": 173127, "node_id": "MDQ6VXNlcjE3MzEyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/173127?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pnkfelix", "html_url": "https://github.com/pnkfelix", "followers_url": "https://api.github.com/users/pnkfelix/followers", "following_url": "https://api.github.com/users/pnkfelix/following{/other_user}", "gists_url": "https://api.github.com/users/pnkfelix/gists{/gist_id}", "starred_url": "https://api.github.com/users/pnkfelix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pnkfelix/subscriptions", "organizations_url": "https://api.github.com/users/pnkfelix/orgs", "repos_url": "https://api.github.com/users/pnkfelix/repos", "events_url": "https://api.github.com/users/pnkfelix/events{/privacy}", "received_events_url": "https://api.github.com/users/pnkfelix/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pnkfelix", "id": 173127, "node_id": "MDQ6VXNlcjE3MzEyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/173127?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pnkfelix", "html_url": "https://github.com/pnkfelix", "followers_url": "https://api.github.com/users/pnkfelix/followers", "following_url": "https://api.github.com/users/pnkfelix/following{/other_user}", "gists_url": "https://api.github.com/users/pnkfelix/gists{/gist_id}", "starred_url": "https://api.github.com/users/pnkfelix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pnkfelix/subscriptions", "organizations_url": "https://api.github.com/users/pnkfelix/orgs", "repos_url": "https://api.github.com/users/pnkfelix/repos", "events_url": "https://api.github.com/users/pnkfelix/events{/privacy}", "received_events_url": "https://api.github.com/users/pnkfelix/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d5798c9554670728412abbc688ab6123bf7895d4", "url": "https://api.github.com/repos/rust-lang/rust/commits/d5798c9554670728412abbc688ab6123bf7895d4", "html_url": "https://github.com/rust-lang/rust/commit/d5798c9554670728412abbc688ab6123bf7895d4"}], "stats": {"total": 83, "additions": 18, "deletions": 65}, "files": [{"sha": "231ae53fe82bf97484dfbf112c1372e557d6b38a", "filename": "src/test/ui/borrowck/borrowck-closures-unique.nll.stderr", "status": "modified", "additions": 2, "deletions": 6, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/87ce5ec6e955849189887e56dfafc45e1293f63f/src%2Ftest%2Fui%2Fborrowck%2Fborrowck-closures-unique.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/87ce5ec6e955849189887e56dfafc45e1293f63f/src%2Ftest%2Fui%2Fborrowck%2Fborrowck-closures-unique.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fborrowck%2Fborrowck-closures-unique.nll.stderr?ref=87ce5ec6e955849189887e56dfafc45e1293f63f", "patch": "@@ -40,19 +40,15 @@ LL |     let c2 = || set(x); //~ ERROR two closures require unique access to `x`\n LL |     c1;\n    |     -- first borrow later used here\n \n-warning[E0594]: cannot assign to `x`, as it is not declared as mutable\n+error[E0594]: cannot assign to `x`, as it is not declared as mutable\n   --> $DIR/borrowck-closures-unique.rs:57:38\n    |\n LL | fn e(x: &'static mut isize) {\n    |      - help: consider changing this to be mutable: `mut x`\n LL |     let c1 = |y: &'static mut isize| x = y; //~ ERROR closure cannot assign to immutable argument\n    |                                      ^^^^^ cannot assign\n-   |\n-   = warning: This error has been downgraded to a warning for backwards compatibility with previous releases.\n-           It represents potential unsoundness in your code.\n-           This warning will become a hard error in the future.\n \n-error: aborting due to 3 previous errors\n+error: aborting due to 4 previous errors\n \n Some errors occurred: E0500, E0524, E0594.\n For more information about an error, try `rustc --explain E0500`."}, {"sha": "c3aba793f190e617191eaf215608c30deac7d85f", "filename": "src/test/ui/borrowck/borrowck-describe-lvalue.ast.nll.stderr", "status": "modified", "additions": 2, "deletions": 5, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/87ce5ec6e955849189887e56dfafc45e1293f63f/src%2Ftest%2Fui%2Fborrowck%2Fborrowck-describe-lvalue.ast.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/87ce5ec6e955849189887e56dfafc45e1293f63f/src%2Ftest%2Fui%2Fborrowck%2Fborrowck-describe-lvalue.ast.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fborrowck%2Fborrowck-describe-lvalue.ast.nll.stderr?ref=87ce5ec6e955849189887e56dfafc45e1293f63f", "patch": "@@ -20,7 +20,7 @@ LL |                    //[mir]~^ ERROR cannot borrow `x` as mutable more than o\n LL |                    *y = 1;\n    |                    ------ first borrow later used here\n \n-warning: captured variable cannot escape `FnMut` closure body\n+error: captured variable cannot escape `FnMut` closure body\n   --> $DIR/borrowck-describe-lvalue.rs:305:16\n    |\n LL |              || {\n@@ -36,9 +36,6 @@ LL | |                 }\n    |\n    = note: `FnMut` closures only have access to their captured variables while they are executing...\n    = note: ...therefore, they cannot allow references to captured variables to escape\n-   = warning: This error has been downgraded to a warning for backwards compatibility with previous releases.\n-           It represents potential unsoundness in your code.\n-           This warning will become a hard error in the future.\n \n error[E0503]: cannot use `f.x` because it was mutably borrowed\n   --> $DIR/borrowck-describe-lvalue.rs:53:9\n@@ -382,7 +379,7 @@ LL |                 drop(x); //[ast]~ ERROR use of moved value: `x`\n    |\n    = note: move occurs because `x` has type `std::vec::Vec<i32>`, which does not implement the `Copy` trait\n \n-error: aborting due to 29 previous errors\n+error: aborting due to 30 previous errors\n \n Some errors occurred: E0382, E0499, E0502, E0503.\n For more information about an error, try `rustc --explain E0382`."}, {"sha": "14c41bb81b2c65594af40320298f4e157a95e47b", "filename": "src/test/ui/borrowck/mutability-errors.nll.stderr", "status": "modified", "additions": 5, "deletions": 21, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/87ce5ec6e955849189887e56dfafc45e1293f63f/src%2Ftest%2Fui%2Fborrowck%2Fmutability-errors.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/87ce5ec6e955849189887e56dfafc45e1293f63f/src%2Ftest%2Fui%2Fborrowck%2Fmutability-errors.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fborrowck%2Fmutability-errors.nll.stderr?ref=87ce5ec6e955849189887e56dfafc45e1293f63f", "patch": "@@ -277,57 +277,41 @@ LL |     &mut x; //~ ERROR\n LL |     &mut x.0; //~ ERROR\n    |     ^^^^^^^^ cannot borrow as mutable\n \n-warning[E0594]: cannot assign to `x`, as it is not declared as mutable\n+error[E0594]: cannot assign to `x`, as it is not declared as mutable\n   --> $DIR/mutability-errors.rs:70:9\n    |\n LL | fn imm_capture(x: (i32,)) {\n    |                - help: consider changing this to be mutable: `mut x`\n LL |     || { //~ ERROR\n LL |         x = (1,);\n    |         ^^^^^^^^ cannot assign\n-   |\n-   = warning: This error has been downgraded to a warning for backwards compatibility with previous releases.\n-           It represents potential unsoundness in your code.\n-           This warning will become a hard error in the future.\n \n-warning[E0594]: cannot assign to `x.0`, as `x` is not declared as mutable\n+error[E0594]: cannot assign to `x.0`, as `x` is not declared as mutable\n   --> $DIR/mutability-errors.rs:71:9\n    |\n LL | fn imm_capture(x: (i32,)) {\n    |                - help: consider changing this to be mutable: `mut x`\n ...\n LL |         x.0 = 1;\n    |         ^^^^^^^ cannot assign\n-   |\n-   = warning: This error has been downgraded to a warning for backwards compatibility with previous releases.\n-           It represents potential unsoundness in your code.\n-           This warning will become a hard error in the future.\n \n-warning[E0596]: cannot borrow `x` as mutable, as it is not declared as mutable\n+error[E0596]: cannot borrow `x` as mutable, as it is not declared as mutable\n   --> $DIR/mutability-errors.rs:72:9\n    |\n LL | fn imm_capture(x: (i32,)) {\n    |                - help: consider changing this to be mutable: `mut x`\n ...\n LL |         &mut x;\n    |         ^^^^^^ cannot borrow as mutable\n-   |\n-   = warning: This error has been downgraded to a warning for backwards compatibility with previous releases.\n-           It represents potential unsoundness in your code.\n-           This warning will become a hard error in the future.\n \n-warning[E0596]: cannot borrow `x.0` as mutable, as `x` is not declared as mutable\n+error[E0596]: cannot borrow `x.0` as mutable, as `x` is not declared as mutable\n   --> $DIR/mutability-errors.rs:73:9\n    |\n LL | fn imm_capture(x: (i32,)) {\n    |                - help: consider changing this to be mutable: `mut x`\n ...\n LL |         &mut x.0;\n    |         ^^^^^^^^ cannot borrow as mutable\n-   |\n-   = warning: This error has been downgraded to a warning for backwards compatibility with previous releases.\n-           It represents potential unsoundness in your code.\n-           This warning will become a hard error in the future.\n \n error[E0594]: cannot assign to `x`, as it is not declared as mutable\n   --> $DIR/mutability-errors.rs:76:9\n@@ -389,7 +373,7 @@ error[E0596]: cannot borrow `X.0` as mutable, as `X` is an immutable static item\n LL |     &mut X.0; //~ ERROR\n    |     ^^^^^^^^ cannot borrow as mutable\n \n-error: aborting due to 34 previous errors\n+error: aborting due to 38 previous errors\n \n Some errors occurred: E0594, E0596.\n For more information about an error, try `rustc --explain E0594`."}, {"sha": "084d7ff3bcd61f85d26f3db6a4c7bc4c87908e32", "filename": "src/test/ui/unboxed-closures/unboxed-closure-immutable-capture.nll.stderr", "status": "modified", "additions": 5, "deletions": 21, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/87ce5ec6e955849189887e56dfafc45e1293f63f/src%2Ftest%2Fui%2Funboxed-closures%2Funboxed-closure-immutable-capture.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/87ce5ec6e955849189887e56dfafc45e1293f63f/src%2Ftest%2Fui%2Funboxed-closures%2Funboxed-closure-immutable-capture.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Funboxed-closures%2Funboxed-closure-immutable-capture.nll.stderr?ref=87ce5ec6e955849189887e56dfafc45e1293f63f", "patch": "@@ -33,59 +33,43 @@ LL |     let x = 0;\n LL |     move || set(&mut x); //~ ERROR cannot borrow\n    |                 ^^^^^^ cannot borrow as mutable\n \n-warning[E0594]: cannot assign to `x`, as it is not declared as mutable\n+error[E0594]: cannot assign to `x`, as it is not declared as mutable\n   --> $DIR/unboxed-closure-immutable-capture.rs:23:8\n    |\n LL |     let x = 0;\n    |         - help: consider changing this to be mutable: `mut x`\n ...\n LL |     || x = 1; //~ ERROR cannot assign\n    |        ^^^^^ cannot assign\n-   |\n-   = warning: This error has been downgraded to a warning for backwards compatibility with previous releases.\n-           It represents potential unsoundness in your code.\n-           This warning will become a hard error in the future.\n \n-warning[E0596]: cannot borrow `x` as mutable, as it is not declared as mutable\n+error[E0596]: cannot borrow `x` as mutable, as it is not declared as mutable\n   --> $DIR/unboxed-closure-immutable-capture.rs:25:12\n    |\n LL |     let x = 0;\n    |         - help: consider changing this to be mutable: `mut x`\n ...\n LL |     || set(&mut x); //~ ERROR cannot assign\n    |            ^^^^^^ cannot borrow as mutable\n-   |\n-   = warning: This error has been downgraded to a warning for backwards compatibility with previous releases.\n-           It represents potential unsoundness in your code.\n-           This warning will become a hard error in the future.\n \n-warning[E0594]: cannot assign to `x`, as it is not declared as mutable\n+error[E0594]: cannot assign to `x`, as it is not declared as mutable\n   --> $DIR/unboxed-closure-immutable-capture.rs:26:8\n    |\n LL |     let x = 0;\n    |         - help: consider changing this to be mutable: `mut x`\n ...\n LL |     || x = 1; //~ ERROR cannot assign\n    |        ^^^^^ cannot assign\n-   |\n-   = warning: This error has been downgraded to a warning for backwards compatibility with previous releases.\n-           It represents potential unsoundness in your code.\n-           This warning will become a hard error in the future.\n \n-warning[E0596]: cannot borrow `x` as mutable, as it is not declared as mutable\n+error[E0596]: cannot borrow `x` as mutable, as it is not declared as mutable\n   --> $DIR/unboxed-closure-immutable-capture.rs:28:12\n    |\n LL |     let x = 0;\n    |         - help: consider changing this to be mutable: `mut x`\n ...\n LL |     || set(&mut x); //~ ERROR cannot assign\n    |            ^^^^^^ cannot borrow as mutable\n-   |\n-   = warning: This error has been downgraded to a warning for backwards compatibility with previous releases.\n-           It represents potential unsoundness in your code.\n-           This warning will become a hard error in the future.\n \n-error: aborting due to 4 previous errors\n+error: aborting due to 8 previous errors\n \n Some errors occurred: E0594, E0596.\n For more information about an error, try `rustc --explain E0594`."}, {"sha": "718c3a19938c4a8735ea1cffe8f973501520884d", "filename": "src/test/ui/unboxed-closures/unboxed-closures-infer-fnmut-calling-fnmut-no-mut.nll.stderr", "status": "modified", "additions": 2, "deletions": 6, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/87ce5ec6e955849189887e56dfafc45e1293f63f/src%2Ftest%2Fui%2Funboxed-closures%2Funboxed-closures-infer-fnmut-calling-fnmut-no-mut.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/87ce5ec6e955849189887e56dfafc45e1293f63f/src%2Ftest%2Fui%2Funboxed-closures%2Funboxed-closures-infer-fnmut-calling-fnmut-no-mut.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Funboxed-closures%2Funboxed-closures-infer-fnmut-calling-fnmut-no-mut.nll.stderr?ref=87ce5ec6e955849189887e56dfafc45e1293f63f", "patch": "@@ -1,15 +1,11 @@\n-warning[E0596]: cannot borrow `tick1` as mutable, as it is not declared as mutable\n+error[E0596]: cannot borrow `tick1` as mutable, as it is not declared as mutable\n   --> $DIR/unboxed-closures-infer-fnmut-calling-fnmut-no-mut.rs:27:9\n    |\n LL |     let tick1 = || {\n    |         ----- help: consider changing this to be mutable: `mut tick1`\n ...\n LL |         tick1();\n    |         ^^^^^ cannot borrow as mutable\n-   |\n-   = warning: This error has been downgraded to a warning for backwards compatibility with previous releases.\n-           It represents potential unsoundness in your code.\n-           This warning will become a hard error in the future.\n \n error[E0596]: cannot borrow `tick2` as mutable, as it is not declared as mutable\n   --> $DIR/unboxed-closures-infer-fnmut-calling-fnmut-no-mut.rs:30:5\n@@ -20,6 +16,6 @@ LL |     let tick2 = || { //~ ERROR closure cannot assign to immutable local var\n LL |     tick2(); //~ ERROR cannot borrow\n    |     ^^^^^ cannot borrow as mutable\n \n-error: aborting due to previous error\n+error: aborting due to 2 previous errors\n \n For more information about this error, try `rustc --explain E0596`."}, {"sha": "f765f207303d2dd1b9bc74ee926c75820baf9469", "filename": "src/test/ui/unboxed-closures/unboxed-closures-mutate-upvar.nll.stderr", "status": "modified", "additions": 2, "deletions": 6, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/87ce5ec6e955849189887e56dfafc45e1293f63f/src%2Ftest%2Fui%2Funboxed-closures%2Funboxed-closures-mutate-upvar.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/87ce5ec6e955849189887e56dfafc45e1293f63f/src%2Ftest%2Fui%2Funboxed-closures%2Funboxed-closures-mutate-upvar.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Funboxed-closures%2Funboxed-closures-mutate-upvar.nll.stderr?ref=87ce5ec6e955849189887e56dfafc45e1293f63f", "patch": "@@ -1,15 +1,11 @@\n-warning[E0594]: cannot assign to `n`, as it is not declared as mutable\n+error[E0594]: cannot assign to `n`, as it is not declared as mutable\n   --> $DIR/unboxed-closures-mutate-upvar.rs:25:9\n    |\n LL |     let n = 0;\n    |         - help: consider changing this to be mutable: `mut n`\n LL |     let mut f = to_fn_mut(|| { //~ ERROR closure cannot assign\n LL |         n += 1;\n    |         ^^^^^^ cannot assign\n-   |\n-   = warning: This error has been downgraded to a warning for backwards compatibility with previous releases.\n-           It represents potential unsoundness in your code.\n-           This warning will become a hard error in the future.\n \n error[E0594]: cannot assign to `n`, as it is not declared as mutable\n   --> $DIR/unboxed-closures-mutate-upvar.rs:42:9\n@@ -44,6 +40,6 @@ LL | |         n += 1; //~ ERROR cannot assign\n LL | |     });\n    | |_____^\n \n-error: aborting due to 3 previous errors\n+error: aborting due to 4 previous errors\n \n For more information about this error, try `rustc --explain E0594`."}]}