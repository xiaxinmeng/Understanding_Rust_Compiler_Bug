{"sha": "14d1c53a9c3570f91ede7d7ad9c8c1ad9ddef7f3", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE0ZDFjNTNhOWMzNTcwZjkxZWRlN2Q3YWQ5YzhjMWFkOWRkZWY3ZjM=", "commit": {"author": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2011-04-22T20:45:21Z"}, "committer": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2011-04-22T20:45:21Z"}, "message": "rustc: Remove direct access to the cname field of types", "tree": {"sha": "b3691a5b69f2ff8bf0683b66b3e4470698f1b364", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b3691a5b69f2ff8bf0683b66b3e4470698f1b364"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/14d1c53a9c3570f91ede7d7ad9c8c1ad9ddef7f3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/14d1c53a9c3570f91ede7d7ad9c8c1ad9ddef7f3", "html_url": "https://github.com/rust-lang/rust/commit/14d1c53a9c3570f91ede7d7ad9c8c1ad9ddef7f3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/14d1c53a9c3570f91ede7d7ad9c8c1ad9ddef7f3/comments", "author": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c7473c8260cbe6892eeed82f275bf09a73895e0e", "url": "https://api.github.com/repos/rust-lang/rust/commits/c7473c8260cbe6892eeed82f275bf09a73895e0e", "html_url": "https://github.com/rust-lang/rust/commit/c7473c8260cbe6892eeed82f275bf09a73895e0e"}], "stats": {"total": 11, "additions": 7, "deletions": 4}, "files": [{"sha": "29b2aeeebf3c0074c5a1b096cc10f0dba3896771", "filename": "src/comp/middle/ty.rs", "status": "modified", "additions": 7, "deletions": 4, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/14d1c53a9c3570f91ede7d7ad9c8c1ad9ddef7f3/src%2Fcomp%2Fmiddle%2Fty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/14d1c53a9c3570f91ede7d7ad9c8c1ad9ddef7f3/src%2Fcomp%2Fmiddle%2Fty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Fty.rs?ref=14d1c53a9c3570f91ede7d7ad9c8c1ad9ddef7f3", "patch": "@@ -217,6 +217,9 @@ fn mk_native(@type_store ts) -> t        { ret gen_ty(ts, ty_native); }\n // Returns the one-level-deep type structure of the given type.\n fn struct(t typ) -> sty { ret typ.struct; }\n \n+// Returns the canonical name of the given type.\n+fn cname(t typ) -> option.t[str] { ret typ.cname; }\n+\n \n // Stringification\n \n@@ -346,7 +349,7 @@ fn ty_to_str(&t typ) -> str {\n         }\n \n         case (ty_obj(?meths)) {\n-            alt (typ.cname) {\n+            alt (cname(typ)) {\n                 case (some[str](?cs)) {\n                     s += cs;\n                 }\n@@ -1214,15 +1217,15 @@ fn eq_ty_full(&t a, &t b) -> bool {\n     }\n \n     // Check canonical names.\n-    alt (a.cname) {\n+    alt (cname(a)) {\n         case (none[str]) {\n-            alt (b.cname) {\n+            alt (cname(b)) {\n                 case (none[str]) { /* ok */ }\n                 case (_) { ret false; }\n             }\n         }\n         case (some[str](?s_a)) {\n-            alt (b.cname) {\n+            alt (cname(b)) {\n                 case (some[str](?s_b)) {\n                     if (!_str.eq(s_a, s_b)) { ret false; }\n                 }"}]}