{"sha": "357128ad2334b48d60801640a72970c1be41d16f", "node_id": "C_kwDOAAsO6NoAKDM1NzEyOGFkMjMzNGI0OGQ2MDgwMTY0MGE3Mjk3MGMxYmU0MWQxNmY", "commit": {"author": {"name": "fee1-dead", "email": "ent3rm4n@gmail.com", "date": "2023-01-09T15:35:31Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2023-01-09T15:35:31Z"}, "message": "Rollup merge of #106468 - compiler-errors:err-instability, r=lcnr\n\nUse FxIndexSet when updating obligation causes in `adjust_fulfillment_errors_for_expr_obligation`\n\nI have no idea how to test this reliably, but I've **manually** verified it fixes the instability in #106417 that isn't due to dtolnay/trybuild#212.\n\nFixes #106417", "tree": {"sha": "7795df0429bff569cde426da96b89abb463f1f23", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7795df0429bff569cde426da96b89abb463f1f23"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/357128ad2334b48d60801640a72970c1be41d16f", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJjvDRDCRBK7hj4Ov3rIwAAJ8EIAGoClUr95NCVVy+fIk8T9f6u\nLJysih9IhRqR6Iqs9oxwXDCN+DA39R0GHx+IawBGV3gORrqvBHg6BeNWlPXmosF5\nCYwo3dN3SGfxbet8THclZF2AAWv7T/y4txMB3/bguiAs9uToqs4LYMt2dnRxLiKm\nyZub8fwaHPtmWmMkPXYXLMpVUGm37E80zdIiaS5Jeg9401uYKrQwRUA4uSo7ZyvL\nV+8dH/DG1YTLu0aMpSM8dDu5JqZYBZQN/cDiUHOq7txgUx7q0xu5EPVQaIBorw8a\n9T1+QNJM4UyenfasfH7P4524qZzIM7UwZWUbtAMfimjYph8GPoahPYqmaTVFfqY=\n=0gAX\n-----END PGP SIGNATURE-----\n", "payload": "tree 7795df0429bff569cde426da96b89abb463f1f23\nparent f8319bb4035612f8387d590f384bb77ebda50ba1\nparent 21b078a64eaa2d708a793ec7d42665ba0a326fb0\nauthor fee1-dead <ent3rm4n@gmail.com> 1673278531 +0800\ncommitter GitHub <noreply@github.com> 1673278531 +0800\n\nRollup merge of #106468 - compiler-errors:err-instability, r=lcnr\n\nUse FxIndexSet when updating obligation causes in `adjust_fulfillment_errors_for_expr_obligation`\n\nI have no idea how to test this reliably, but I've **manually** verified it fixes the instability in #106417 that isn't due to dtolnay/trybuild#212.\n\nFixes #106417\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/357128ad2334b48d60801640a72970c1be41d16f", "html_url": "https://github.com/rust-lang/rust/commit/357128ad2334b48d60801640a72970c1be41d16f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/357128ad2334b48d60801640a72970c1be41d16f/comments", "author": {"login": "fee1-dead", "id": 43851243, "node_id": "MDQ6VXNlcjQzODUxMjQz", "avatar_url": "https://avatars.githubusercontent.com/u/43851243?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fee1-dead", "html_url": "https://github.com/fee1-dead", "followers_url": "https://api.github.com/users/fee1-dead/followers", "following_url": "https://api.github.com/users/fee1-dead/following{/other_user}", "gists_url": "https://api.github.com/users/fee1-dead/gists{/gist_id}", "starred_url": "https://api.github.com/users/fee1-dead/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fee1-dead/subscriptions", "organizations_url": "https://api.github.com/users/fee1-dead/orgs", "repos_url": "https://api.github.com/users/fee1-dead/repos", "events_url": "https://api.github.com/users/fee1-dead/events{/privacy}", "received_events_url": "https://api.github.com/users/fee1-dead/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f8319bb4035612f8387d590f384bb77ebda50ba1", "url": "https://api.github.com/repos/rust-lang/rust/commits/f8319bb4035612f8387d590f384bb77ebda50ba1", "html_url": "https://github.com/rust-lang/rust/commit/f8319bb4035612f8387d590f384bb77ebda50ba1"}, {"sha": "21b078a64eaa2d708a793ec7d42665ba0a326fb0", "url": "https://api.github.com/repos/rust-lang/rust/commits/21b078a64eaa2d708a793ec7d42665ba0a326fb0", "html_url": "https://github.com/rust-lang/rust/commit/21b078a64eaa2d708a793ec7d42665ba0a326fb0"}], "stats": {"total": 11, "additions": 9, "deletions": 2}, "files": [{"sha": "4e1398826bce3dd2b019eb15247e0fd77dfc28fe", "filename": "compiler/rustc_hir_typeck/src/fn_ctxt/checks.rs", "status": "modified", "additions": 9, "deletions": 2, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/357128ad2334b48d60801640a72970c1be41d16f/compiler%2Frustc_hir_typeck%2Fsrc%2Ffn_ctxt%2Fchecks.rs", "raw_url": "https://github.com/rust-lang/rust/raw/357128ad2334b48d60801640a72970c1be41d16f/compiler%2Frustc_hir_typeck%2Fsrc%2Ffn_ctxt%2Fchecks.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_hir_typeck%2Fsrc%2Ffn_ctxt%2Fchecks.rs?ref=357128ad2334b48d60801640a72970c1be41d16f", "patch": "@@ -9,7 +9,7 @@ use crate::{\n     TupleArgumentsFlag,\n };\n use rustc_ast as ast;\n-use rustc_data_structures::fx::FxHashSet;\n+use rustc_data_structures::fx::FxIndexSet;\n use rustc_errors::{pluralize, Applicability, Diagnostic, DiagnosticId, MultiSpan};\n use rustc_hir as hir;\n use rustc_hir::def::{CtorOf, DefKind, Res};\n@@ -1698,7 +1698,7 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n         // even if their `ObligationCauseCode` isn't an `Expr*Obligation` kind.\n         // This is important since if we adjust one span but not the other, then\n         // we will have \"duplicated\" the error on the UI side.\n-        let mut remap_cause = FxHashSet::default();\n+        let mut remap_cause = FxIndexSet::default();\n         let mut not_adjusted = vec![];\n \n         for error in errors {\n@@ -1726,6 +1726,13 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n             }\n         }\n \n+        // Adjust any other errors that come from other cause codes, when these\n+        // errors are of the same predicate as one we successfully adjusted, and\n+        // when their spans overlap (suggesting they're due to the same root cause).\n+        //\n+        // This is because due to normalization, we often register duplicate\n+        // obligations with misc obligations that are basically impossible to\n+        // line back up with a useful ExprBindingObligation.\n         for error in not_adjusted {\n             for (span, predicate, cause) in &remap_cause {\n                 if *predicate == error.obligation.predicate"}]}