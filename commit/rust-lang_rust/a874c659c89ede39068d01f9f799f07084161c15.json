{"sha": "a874c659c89ede39068d01f9f799f07084161c15", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE4NzRjNjU5Yzg5ZWRlMzkwNjhkMDFmOWY3OTlmMDcwODQxNjFjMTU=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-09-29T02:35:59Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-09-29T02:35:59Z"}, "message": "Rollup merge of #64589 - andre-richter:aarch64_bare_metal, r=Amanieu\n\nDifferentiate AArch64 bare-metal targets between hf and non-hf.\n\nCC @parched, kindly request you to review.\n\n~~Note: This change breaks code that uses the target `aarch64-unknown-none` for the sake of clearer naming as discussed in the links posted below. A search on github reveals that code using `aarch64-unknown-none` is almost exclusively forked from our embedded WG's OS tutorials repo at https://github.com/rust-embedded/rust-raspi3-OS-tutorials, for which the target was originally created.~~\n\n~~I will adapt this repo to the new target name asap once this PR would go upstream. The minor annoyance for the forks to break temporarily should be acceptable for the sake of introducing a better differentiation now before it is too late.\nAlso, the break would only happen upon updating the toolchain, giving the user a good hint at what has happened.~~\n\n---------- Patch commit message:\nFollowing up on [1] and [2], this PR adds differntiation for aarch64 bare-metal\ntargets between versions with and without floating point enabled.\n\nThis streamlines the target naming with other existing ARM targets and provides\nthe user clear indication if he is getting float or non-float for his bare-metal\ntarget.\n\n[1] https://github.com/rust-lang/rust/pull/60135#issuecomment-485851356\n[2] https://github.com/rust-embedded/wg/issues/230\n\nCloses: rust-embedded/wg#230", "tree": {"sha": "c549c51ab49bdfc5fc2215cc02885256b6d2673c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c549c51ab49bdfc5fc2215cc02885256b6d2673c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a874c659c89ede39068d01f9f799f07084161c15", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJdkBiPCRBK7hj4Ov3rIwAAdHIIABOPTrLV/mnh8Hvza/+gIekh\n0XsTjx6ddBTFQ6G4whQnfKc3hDmNCWTDO1McQ/SL8LakitoiFmG+KOkwp/yOkmfm\nFWxybc1taNGOWbN8fZGkZ+kED3TMk3cvnUuoxs667eHoYRk9b8CWWM7wIt0EDVzw\nCzjKfkBWy9sVexEtsBHBQTzby0F6bm212ftGA/VAQ6uyZb82d54SblpxmAskRoPN\nAjkp9ybg5XdwgccMhVFsaNtBiCHJTHOEMpS8QxYxTtap2nn08shsI9g6Dr/QdUa3\n0I7QYjZzquceuGZGmEnVoxUT+1eQHqwhRfKYmDXkgOsO5RJNsz2UqMCKkkW1tCU=\n=uEel\n-----END PGP SIGNATURE-----\n", "payload": "tree c549c51ab49bdfc5fc2215cc02885256b6d2673c\nparent 37333b5131ba867007964dfd9b20fe59a5c191ef\nparent d2762acb8ce945670ee2249149a5757991591e85\nauthor Mazdak Farrokhzad <twingoow@gmail.com> 1569724559 +0200\ncommitter GitHub <noreply@github.com> 1569724559 +0200\n\nRollup merge of #64589 - andre-richter:aarch64_bare_metal, r=Amanieu\n\nDifferentiate AArch64 bare-metal targets between hf and non-hf.\n\nCC @parched, kindly request you to review.\n\n~~Note: This change breaks code that uses the target `aarch64-unknown-none` for the sake of clearer naming as discussed in the links posted below. A search on github reveals that code using `aarch64-unknown-none` is almost exclusively forked from our embedded WG's OS tutorials repo at https://github.com/rust-embedded/rust-raspi3-OS-tutorials, for which the target was originally created.~~\n\n~~I will adapt this repo to the new target name asap once this PR would go upstream. The minor annoyance for the forks to break temporarily should be acceptable for the sake of introducing a better differentiation now before it is too late.\nAlso, the break would only happen upon updating the toolchain, giving the user a good hint at what has happened.~~\n\n---------- Patch commit message:\nFollowing up on [1] and [2], this PR adds differntiation for aarch64 bare-metal\ntargets between versions with and without floating point enabled.\n\nThis streamlines the target naming with other existing ARM targets and provides\nthe user clear indication if he is getting float or non-float for his bare-metal\ntarget.\n\n[1] https://github.com/rust-lang/rust/pull/60135#issuecomment-485851356\n[2] https://github.com/rust-embedded/wg/issues/230\n\nCloses: rust-embedded/wg#230\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a874c659c89ede39068d01f9f799f07084161c15", "html_url": "https://github.com/rust-lang/rust/commit/a874c659c89ede39068d01f9f799f07084161c15", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a874c659c89ede39068d01f9f799f07084161c15/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "37333b5131ba867007964dfd9b20fe59a5c191ef", "url": "https://api.github.com/repos/rust-lang/rust/commits/37333b5131ba867007964dfd9b20fe59a5c191ef", "html_url": "https://github.com/rust-lang/rust/commit/37333b5131ba867007964dfd9b20fe59a5c191ef"}, {"sha": "d2762acb8ce945670ee2249149a5757991591e85", "url": "https://api.github.com/repos/rust-lang/rust/commits/d2762acb8ce945670ee2249149a5757991591e85", "html_url": "https://github.com/rust-lang/rust/commit/d2762acb8ce945670ee2249149a5757991591e85"}], "stats": {"total": 42, "additions": 40, "deletions": 2}, "files": [{"sha": "b9549ec2120dd82ff101db59c4ce064871b1d9c5", "filename": "src/librustc_target/spec/aarch64_unknown_none.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/a874c659c89ede39068d01f9f799f07084161c15/src%2Flibrustc_target%2Fspec%2Faarch64_unknown_none.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a874c659c89ede39068d01f9f799f07084161c15/src%2Flibrustc_target%2Fspec%2Faarch64_unknown_none.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Faarch64_unknown_none.rs?ref=a874c659c89ede39068d01f9f799f07084161c15", "patch": "@@ -1,4 +1,4 @@\n-// Generic AArch64 target for bare-metal code\n+// Generic AArch64 target for bare-metal code - Floating point enabled\n //\n // Can be used in conjunction with the `target-feature` and\n // `target-cpu` compiler flags to opt-in more hardware-specific\n@@ -11,7 +11,7 @@ use super::{LldFlavor, LinkerFlavor, Target, TargetOptions, PanicStrategy};\n pub fn target() -> Result<Target, String> {\n     let opts = TargetOptions {\n         linker: Some(\"rust-lld\".to_owned()),\n-        features: \"+strict-align\".to_string(),\n+        features: \"+strict-align,+neon,+fp-armv8\".to_string(),\n         executables: true,\n         relocation_model: \"static\".to_string(),\n         disable_redzone: true,"}, {"sha": "b91f2af68ecb85c2e08c51725da9af9254a4af97", "filename": "src/librustc_target/spec/aarch64_unknown_none_softfloat.rs", "status": "added", "additions": 37, "deletions": 0, "changes": 37, "blob_url": "https://github.com/rust-lang/rust/blob/a874c659c89ede39068d01f9f799f07084161c15/src%2Flibrustc_target%2Fspec%2Faarch64_unknown_none_softfloat.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a874c659c89ede39068d01f9f799f07084161c15/src%2Flibrustc_target%2Fspec%2Faarch64_unknown_none_softfloat.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Faarch64_unknown_none_softfloat.rs?ref=a874c659c89ede39068d01f9f799f07084161c15", "patch": "@@ -0,0 +1,37 @@\n+// Generic AArch64 target for bare-metal code - Floating point disabled\n+//\n+// Can be used in conjunction with the `target-feature` and\n+// `target-cpu` compiler flags to opt-in more hardware-specific\n+// features.\n+//\n+// For example, `-C target-cpu=cortex-a53`.\n+\n+use super::{LldFlavor, LinkerFlavor, Target, TargetOptions, PanicStrategy};\n+\n+pub fn target() -> Result<Target, String> {\n+    let opts = TargetOptions {\n+        linker: Some(\"rust-lld\".to_owned()),\n+        features: \"+strict-align,-neon,-fp-armv8\".to_string(),\n+        executables: true,\n+        relocation_model: \"static\".to_string(),\n+        disable_redzone: true,\n+        linker_is_gnu: true,\n+        max_atomic_width: Some(128),\n+        panic_strategy: PanicStrategy::Abort,\n+        abi_blacklist: super::arm_base::abi_blacklist(),\n+        .. Default::default()\n+    };\n+    Ok(Target {\n+        llvm_target: \"aarch64-unknown-none\".to_string(),\n+        target_endian: \"little\".to_string(),\n+        target_pointer_width: \"64\".to_string(),\n+        target_c_int_width: \"32\".to_string(),\n+        target_os: \"none\".to_string(),\n+        target_env: String::new(),\n+        target_vendor: String::new(),\n+        data_layout: \"e-m:e-i8:8:32-i16:16:32-i64:64-i128:128-n32:64-S128\".to_string(),\n+        arch: \"aarch64\".to_string(),\n+        linker_flavor: LinkerFlavor::Lld(LldFlavor::Ld),\n+        options: opts,\n+    })\n+}"}, {"sha": "25add0cc6a4be2cede092124a1ed10954cbdf989", "filename": "src/librustc_target/spec/mod.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/a874c659c89ede39068d01f9f799f07084161c15/src%2Flibrustc_target%2Fspec%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a874c659c89ede39068d01f9f799f07084161c15/src%2Flibrustc_target%2Fspec%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Fmod.rs?ref=a874c659c89ede39068d01f9f799f07084161c15", "patch": "@@ -489,6 +489,7 @@ supported_targets! {\n     (\"riscv64gc-unknown-none-elf\", riscv64gc_unknown_none_elf),\n \n     (\"aarch64-unknown-none\", aarch64_unknown_none),\n+    (\"aarch64-unknown-none-softfloat\", aarch64_unknown_none_softfloat),\n \n     (\"x86_64-fortanix-unknown-sgx\", x86_64_fortanix_unknown_sgx),\n "}]}