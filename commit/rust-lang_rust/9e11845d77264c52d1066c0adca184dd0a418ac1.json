{"sha": "9e11845d77264c52d1066c0adca184dd0a418ac1", "node_id": "MDY6Q29tbWl0NzI0NzEyOjllMTE4NDVkNzcyNjRjNTJkMTA2NmMwYWRjYTE4NGRkMGE0MThhYzE=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2015-09-28T15:58:44Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2015-09-28T15:58:44Z"}, "message": "Auto merge of #28668 - alexcrichton:crossing-with-jemalloc, r=nrc\n\nThis commit updates the compiler to not attempt to use jemalloc for platforms\r\nwhere jemalloc is never enabled. Currently the compiler attempts to link in\r\njemalloc based on whether `--disable-jemalloc` was specified at build time for\r\nthe compiler itself, but this is only the right decision for the host target,\r\nnot for other targets.\r\n\r\nThis still leaves a hole open where a set of target libraries are downloaded\r\nwhich were built with `--disable-jemalloc` and the compiler is unaware of that,\r\nbut this is a pretty rare case so it can always be fixed later.", "tree": {"sha": "bb15695f9ce15e4f9fa64e0ea4bb518548df3833", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bb15695f9ce15e4f9fa64e0ea4bb518548df3833"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9e11845d77264c52d1066c0adca184dd0a418ac1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9e11845d77264c52d1066c0adca184dd0a418ac1", "html_url": "https://github.com/rust-lang/rust/commit/9e11845d77264c52d1066c0adca184dd0a418ac1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9e11845d77264c52d1066c0adca184dd0a418ac1/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "638b2608a70171593471b45fb344741a37230b0d", "url": "https://api.github.com/repos/rust-lang/rust/commits/638b2608a70171593471b45fb344741a37230b0d", "html_url": "https://github.com/rust-lang/rust/commit/638b2608a70171593471b45fb344741a37230b0d"}, {"sha": "747f0be0822faa0ef9a62384b2960e6c22b67b6a", "url": "https://api.github.com/repos/rust-lang/rust/commits/747f0be0822faa0ef9a62384b2960e6c22b67b6a", "html_url": "https://github.com/rust-lang/rust/commit/747f0be0822faa0ef9a62384b2960e6c22b67b6a"}], "stats": {"total": 18, "additions": 9, "deletions": 9}, "files": [{"sha": "8b75bb3941477b356aef4df75b75e253961f5614", "filename": "src/librustc_back/target/apple_base.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9e11845d77264c52d1066c0adca184dd0a418ac1/src%2Flibrustc_back%2Ftarget%2Fapple_base.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9e11845d77264c52d1066c0adca184dd0a418ac1/src%2Flibrustc_back%2Ftarget%2Fapple_base.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_back%2Ftarget%2Fapple_base.rs?ref=9e11845d77264c52d1066c0adca184dd0a418ac1", "patch": "@@ -24,7 +24,7 @@ pub fn opts() -> TargetOptions {\n         dll_suffix: \".dylib\".to_string(),\n         archive_format: \"bsd\".to_string(),\n         pre_link_args: Vec::new(),\n-        exe_allocation_crate: super::best_allocator(),\n+        exe_allocation_crate: super::maybe_jemalloc(),\n         .. Default::default()\n     }\n }"}, {"sha": "2b84244cda4a2ef2f903bd532867e770a2fc9d4c", "filename": "src/librustc_back/target/bitrig_base.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9e11845d77264c52d1066c0adca184dd0a418ac1/src%2Flibrustc_back%2Ftarget%2Fbitrig_base.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9e11845d77264c52d1066c0adca184dd0a418ac1/src%2Flibrustc_back%2Ftarget%2Fbitrig_base.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_back%2Ftarget%2Fbitrig_base.rs?ref=9e11845d77264c52d1066c0adca184dd0a418ac1", "patch": "@@ -20,7 +20,7 @@ pub fn opts() -> TargetOptions {\n         has_rpath: true,\n         position_independent_executables: true,\n         archive_format: \"gnu\".to_string(),\n-        exe_allocation_crate: super::best_allocator(),\n+        exe_allocation_crate: \"alloc_system\".to_string(),\n \n         .. Default::default()\n     }"}, {"sha": "b78fdc9f59ba1103063cb2863e1ab87efaf5fa80", "filename": "src/librustc_back/target/dragonfly_base.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9e11845d77264c52d1066c0adca184dd0a418ac1/src%2Flibrustc_back%2Ftarget%2Fdragonfly_base.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9e11845d77264c52d1066c0adca184dd0a418ac1/src%2Flibrustc_back%2Ftarget%2Fdragonfly_base.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_back%2Ftarget%2Fdragonfly_base.rs?ref=9e11845d77264c52d1066c0adca184dd0a418ac1", "patch": "@@ -27,7 +27,7 @@ pub fn opts() -> TargetOptions {\n         ),\n         position_independent_executables: true,\n         archive_format: \"gnu\".to_string(),\n-        exe_allocation_crate: super::best_allocator(),\n+        exe_allocation_crate: super::maybe_jemalloc(),\n         .. Default::default()\n     }\n }"}, {"sha": "e955f8c302bd64977a0b8c84e0d17c49bd153963", "filename": "src/librustc_back/target/freebsd_base.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9e11845d77264c52d1066c0adca184dd0a418ac1/src%2Flibrustc_back%2Ftarget%2Ffreebsd_base.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9e11845d77264c52d1066c0adca184dd0a418ac1/src%2Flibrustc_back%2Ftarget%2Ffreebsd_base.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_back%2Ftarget%2Ffreebsd_base.rs?ref=9e11845d77264c52d1066c0adca184dd0a418ac1", "patch": "@@ -18,7 +18,7 @@ pub fn opts() -> TargetOptions {\n         executables: true,\n         has_rpath: true,\n         archive_format: \"gnu\".to_string(),\n-        exe_allocation_crate: super::best_allocator(),\n+        exe_allocation_crate: super::maybe_jemalloc(),\n \n         .. Default::default()\n     }"}, {"sha": "6492fa5015970e07ca149a11c3ab32866dadf997", "filename": "src/librustc_back/target/linux_base.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9e11845d77264c52d1066c0adca184dd0a418ac1/src%2Flibrustc_back%2Ftarget%2Flinux_base.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9e11845d77264c52d1066c0adca184dd0a418ac1/src%2Flibrustc_back%2Ftarget%2Flinux_base.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_back%2Ftarget%2Flinux_base.rs?ref=9e11845d77264c52d1066c0adca184dd0a418ac1", "patch": "@@ -29,7 +29,7 @@ pub fn opts() -> TargetOptions {\n         ],\n         position_independent_executables: true,\n         archive_format: \"gnu\".to_string(),\n-        exe_allocation_crate: super::best_allocator(),\n+        exe_allocation_crate: super::maybe_jemalloc(),\n         .. Default::default()\n     }\n }"}, {"sha": "197f8c760b0407368da2e2db1986a99d3e3d6d58", "filename": "src/librustc_back/target/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9e11845d77264c52d1066c0adca184dd0a418ac1/src%2Flibrustc_back%2Ftarget%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9e11845d77264c52d1066c0adca184dd0a418ac1/src%2Flibrustc_back%2Ftarget%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_back%2Ftarget%2Fmod.rs?ref=9e11845d77264c52d1066c0adca184dd0a418ac1", "patch": "@@ -458,7 +458,7 @@ impl Target {\n     }\n }\n \n-fn best_allocator() -> String {\n+fn maybe_jemalloc() -> String {\n     if cfg!(disable_jemalloc) {\n         \"alloc_system\".to_string()\n     } else {"}, {"sha": "2e4aa27cf889d22659b909e2221c5e5e6d9d8182", "filename": "src/librustc_back/target/openbsd_base.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9e11845d77264c52d1066c0adca184dd0a418ac1/src%2Flibrustc_back%2Ftarget%2Fopenbsd_base.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9e11845d77264c52d1066c0adca184dd0a418ac1/src%2Flibrustc_back%2Ftarget%2Fopenbsd_base.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_back%2Ftarget%2Fopenbsd_base.rs?ref=9e11845d77264c52d1066c0adca184dd0a418ac1", "patch": "@@ -27,7 +27,7 @@ pub fn opts() -> TargetOptions {\n         ),\n         position_independent_executables: true,\n         archive_format: \"gnu\".to_string(),\n-        exe_allocation_crate: super::best_allocator(),\n+        exe_allocation_crate: \"alloc_system\".to_string(),\n         .. Default::default()\n     }\n }"}, {"sha": "2e5973679022d7c05a56544db0e9cd84ff2c6fc9", "filename": "src/librustc_back/target/windows_base.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9e11845d77264c52d1066c0adca184dd0a418ac1/src%2Flibrustc_back%2Ftarget%2Fwindows_base.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9e11845d77264c52d1066c0adca184dd0a418ac1/src%2Flibrustc_back%2Ftarget%2Fwindows_base.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_back%2Ftarget%2Fwindows_base.rs?ref=9e11845d77264c52d1066c0adca184dd0a418ac1", "patch": "@@ -64,7 +64,7 @@ pub fn opts() -> TargetOptions {\n             // Always enable DEP (NX bit) when it is available\n             \"-Wl,--nxcompat\".to_string(),\n         ),\n-        exe_allocation_crate: super::best_allocator(),\n+        exe_allocation_crate: super::maybe_jemalloc(),\n \n         .. Default::default()\n     }"}, {"sha": "fb88ce158e4b3db5e0f25d217101df06ac247dec", "filename": "src/librustc_back/target/windows_msvc_base.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9e11845d77264c52d1066c0adca184dd0a418ac1/src%2Flibrustc_back%2Ftarget%2Fwindows_msvc_base.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9e11845d77264c52d1066c0adca184dd0a418ac1/src%2Flibrustc_back%2Ftarget%2Fwindows_msvc_base.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_back%2Ftarget%2Fwindows_msvc_base.rs?ref=9e11845d77264c52d1066c0adca184dd0a418ac1", "patch": "@@ -60,7 +60,7 @@ pub fn opts() -> TargetOptions {\n             \"/NXCOMPAT\".to_string(),\n         ],\n         archive_format: \"gnu\".to_string(),\n-        exe_allocation_crate: super::best_allocator(),\n+        exe_allocation_crate: \"alloc_system\".to_string(),\n \n         .. Default::default()\n     }"}]}