{"sha": "656a17b44d2e7ee8096f479ed8a04baab2200cae", "node_id": "MDY6Q29tbWl0NzI0NzEyOjY1NmExN2I0NGQyZTdlZTgwOTZmNDc5ZWQ4YTA0YmFhYjIyMDBjYWU=", "commit": {"author": {"name": "Mara Bos", "email": "m-ou.se@m-ou.se", "date": "2020-09-09T09:27:09Z"}, "committer": {"name": "Mara Bos", "email": "m-ou.se@m-ou.se", "date": "2020-09-09T09:27:09Z"}, "message": "Rename MaybeUninit::drop to assume_init_drop.", "tree": {"sha": "b8794f9a4c703773bae83588948126528cd9a6c5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b8794f9a4c703773bae83588948126528cd9a6c5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/656a17b44d2e7ee8096f479ed8a04baab2200cae", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/656a17b44d2e7ee8096f479ed8a04baab2200cae", "html_url": "https://github.com/rust-lang/rust/commit/656a17b44d2e7ee8096f479ed8a04baab2200cae", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/656a17b44d2e7ee8096f479ed8a04baab2200cae/comments", "author": {"login": "m-ou-se", "id": 783247, "node_id": "MDQ6VXNlcjc4MzI0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/783247?v=4", "gravatar_id": "", "url": "https://api.github.com/users/m-ou-se", "html_url": "https://github.com/m-ou-se", "followers_url": "https://api.github.com/users/m-ou-se/followers", "following_url": "https://api.github.com/users/m-ou-se/following{/other_user}", "gists_url": "https://api.github.com/users/m-ou-se/gists{/gist_id}", "starred_url": "https://api.github.com/users/m-ou-se/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/m-ou-se/subscriptions", "organizations_url": "https://api.github.com/users/m-ou-se/orgs", "repos_url": "https://api.github.com/users/m-ou-se/repos", "events_url": "https://api.github.com/users/m-ou-se/events{/privacy}", "received_events_url": "https://api.github.com/users/m-ou-se/received_events", "type": "User", "site_admin": false}, "committer": {"login": "m-ou-se", "id": 783247, "node_id": "MDQ6VXNlcjc4MzI0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/783247?v=4", "gravatar_id": "", "url": "https://api.github.com/users/m-ou-se", "html_url": "https://github.com/m-ou-se", "followers_url": "https://api.github.com/users/m-ou-se/followers", "following_url": "https://api.github.com/users/m-ou-se/following{/other_user}", "gists_url": "https://api.github.com/users/m-ou-se/gists{/gist_id}", "starred_url": "https://api.github.com/users/m-ou-se/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/m-ou-se/subscriptions", "organizations_url": "https://api.github.com/users/m-ou-se/orgs", "repos_url": "https://api.github.com/users/m-ou-se/repos", "events_url": "https://api.github.com/users/m-ou-se/events{/privacy}", "received_events_url": "https://api.github.com/users/m-ou-se/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "caef83282bfede657faf38d43967f577841b3be4", "url": "https://api.github.com/repos/rust-lang/rust/commits/caef83282bfede657faf38d43967f577841b3be4", "html_url": "https://github.com/rust-lang/rust/commit/caef83282bfede657faf38d43967f577841b3be4"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "8d19412e4c414e23e27c9e3247bd76fa8aaedc75", "filename": "library/core/src/mem/maybe_uninit.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/656a17b44d2e7ee8096f479ed8a04baab2200cae/library%2Fcore%2Fsrc%2Fmem%2Fmaybe_uninit.rs", "raw_url": "https://github.com/rust-lang/rust/raw/656a17b44d2e7ee8096f479ed8a04baab2200cae/library%2Fcore%2Fsrc%2Fmem%2Fmaybe_uninit.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fmem%2Fmaybe_uninit.rs?ref=656a17b44d2e7ee8096f479ed8a04baab2200cae", "patch": "@@ -589,7 +589,7 @@ impl<T> MaybeUninit<T> {\n     ///\n     /// [`assume_init`]: MaybeUninit::assume_init\n     #[unstable(feature = \"maybe_uninit_extra\", issue = \"63567\")]\n-    pub unsafe fn drop(&mut self) {\n+    pub unsafe fn assume_init_drop(&mut self) {\n         // SAFETY: the caller must guarantee that `self` is initialized.\n         // Dropping the value in place is safe if that is the case.\n         unsafe { ptr::drop_in_place(self.as_mut_ptr()) }"}]}