{"sha": "921ba5a09fa66b0a50bfebee5430622d0d4f3065", "node_id": "MDY6Q29tbWl0NzI0NzEyOjkyMWJhNWEwOWZhNjZiMGE1MGJmZWJlZTU0MzA2MjJkMGQ0ZjMwNjU=", "commit": {"author": {"name": "Flavio Percoco", "email": "flaper87@gmail.com", "date": "2015-01-11T12:14:39Z"}, "committer": {"name": "Flavio Percoco", "email": "flaper87@gmail.com", "date": "2015-01-16T07:18:56Z"}, "message": "Don't use NoSend/NoSync in tests", "tree": {"sha": "d0e5db3242ab1e2c04429081db1880551c557a99", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d0e5db3242ab1e2c04429081db1880551c557a99"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/921ba5a09fa66b0a50bfebee5430622d0d4f3065", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/921ba5a09fa66b0a50bfebee5430622d0d4f3065", "html_url": "https://github.com/rust-lang/rust/commit/921ba5a09fa66b0a50bfebee5430622d0d4f3065", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/921ba5a09fa66b0a50bfebee5430622d0d4f3065/comments", "author": {"login": "flaper87", "id": 13816, "node_id": "MDQ6VXNlcjEzODE2", "avatar_url": "https://avatars.githubusercontent.com/u/13816?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flaper87", "html_url": "https://github.com/flaper87", "followers_url": "https://api.github.com/users/flaper87/followers", "following_url": "https://api.github.com/users/flaper87/following{/other_user}", "gists_url": "https://api.github.com/users/flaper87/gists{/gist_id}", "starred_url": "https://api.github.com/users/flaper87/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flaper87/subscriptions", "organizations_url": "https://api.github.com/users/flaper87/orgs", "repos_url": "https://api.github.com/users/flaper87/repos", "events_url": "https://api.github.com/users/flaper87/events{/privacy}", "received_events_url": "https://api.github.com/users/flaper87/received_events", "type": "User", "site_admin": false}, "committer": {"login": "flaper87", "id": 13816, "node_id": "MDQ6VXNlcjEzODE2", "avatar_url": "https://avatars.githubusercontent.com/u/13816?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flaper87", "html_url": "https://github.com/flaper87", "followers_url": "https://api.github.com/users/flaper87/followers", "following_url": "https://api.github.com/users/flaper87/following{/other_user}", "gists_url": "https://api.github.com/users/flaper87/gists{/gist_id}", "starred_url": "https://api.github.com/users/flaper87/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flaper87/subscriptions", "organizations_url": "https://api.github.com/users/flaper87/orgs", "repos_url": "https://api.github.com/users/flaper87/repos", "events_url": "https://api.github.com/users/flaper87/events{/privacy}", "received_events_url": "https://api.github.com/users/flaper87/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "094397a88b95974a16bbb69c1b1e557d44319d04", "url": "https://api.github.com/repos/rust-lang/rust/commits/094397a88b95974a16bbb69c1b1e557d44319d04", "html_url": "https://github.com/rust-lang/rust/commit/094397a88b95974a16bbb69c1b1e557d44319d04"}], "stats": {"total": 100, "additions": 59, "deletions": 41}, "files": [{"sha": "fa8035a79652ea27a1c7f8e67aad9d47562b6bad", "filename": "src/test/compile-fail/issue-17718-static-sync.rs", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/921ba5a09fa66b0a50bfebee5430622d0d4f3065/src%2Ftest%2Fcompile-fail%2Fissue-17718-static-sync.rs", "raw_url": "https://github.com/rust-lang/rust/raw/921ba5a09fa66b0a50bfebee5430622d0d4f3065/src%2Ftest%2Fcompile-fail%2Fissue-17718-static-sync.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-17718-static-sync.rs?ref=921ba5a09fa66b0a50bfebee5430622d0d4f3065", "patch": "@@ -8,12 +8,15 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-use std::marker;\n+#![feature(optin_builtin_traits)]\n \n-struct Foo { marker: marker::NoSync }\n+use std::marker::Sync;\n+\n+struct Foo;\n+impl !Sync for Foo {}\n \n static FOO: usize = 3;\n-static BAR: Foo = Foo { marker: marker::NoSync };\n+static BAR: Foo = Foo;\n //~^ ERROR: the trait `core::marker::Sync` is not implemented\n \n fn main() {}"}, {"sha": "90ecfb6015dcd4a3a672caee67d558c80fabed83", "filename": "src/test/compile-fail/issue-7013.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/921ba5a09fa66b0a50bfebee5430622d0d4f3065/src%2Ftest%2Fcompile-fail%2Fissue-7013.rs", "raw_url": "https://github.com/rust-lang/rust/raw/921ba5a09fa66b0a50bfebee5430622d0d4f3065/src%2Ftest%2Fcompile-fail%2Fissue-7013.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-7013.rs?ref=921ba5a09fa66b0a50bfebee5430622d0d4f3065", "patch": "@@ -35,5 +35,4 @@ struct A {\n fn main() {\n     let a = A {v: box B{v: None} as Box<Foo+Send>};\n     //~^ ERROR the trait `core::marker::Send` is not implemented\n-    //~^^ ERROR the trait `core::marker::Send` is not implemented\n }"}, {"sha": "5bc769f8e117b62e452e9d691fcce54c3e8f577a", "filename": "src/test/compile-fail/kindck-nonsendable-1.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/921ba5a09fa66b0a50bfebee5430622d0d4f3065/src%2Ftest%2Fcompile-fail%2Fkindck-nonsendable-1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/921ba5a09fa66b0a50bfebee5430622d0d4f3065/src%2Ftest%2Fcompile-fail%2Fkindck-nonsendable-1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fkindck-nonsendable-1.rs?ref=921ba5a09fa66b0a50bfebee5430622d0d4f3065", "patch": "@@ -19,6 +19,5 @@ fn main() {\n     let x = Rc::new(3us);\n     bar(move|| foo(x));\n     //~^ ERROR `core::marker::Send` is not implemented\n-    //~^^ ERROR `core::marker::Send` is not implemented\n }\n "}, {"sha": "cd253b2f9e5dc85f6059d962f5bd5480b206ae64", "filename": "src/test/compile-fail/marker-no-send.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/921ba5a09fa66b0a50bfebee5430622d0d4f3065/src%2Ftest%2Fcompile-fail%2Fmarker-no-send.rs", "raw_url": "https://github.com/rust-lang/rust/raw/921ba5a09fa66b0a50bfebee5430622d0d4f3065/src%2Ftest%2Fcompile-fail%2Fmarker-no-send.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fmarker-no-send.rs?ref=921ba5a09fa66b0a50bfebee5430622d0d4f3065", "patch": "@@ -8,6 +8,10 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+// ignore-stage1\n+// ignore-stage2\n+// ignore-stage3\n+\n use std::marker;\n \n fn foo<P:Send>(p: P) { }"}, {"sha": "d86b6a0a674eb8adad7d0897f3adf57aac7493d9", "filename": "src/test/compile-fail/marker-no-share.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/921ba5a09fa66b0a50bfebee5430622d0d4f3065/src%2Ftest%2Fcompile-fail%2Fmarker-no-share.rs", "raw_url": "https://github.com/rust-lang/rust/raw/921ba5a09fa66b0a50bfebee5430622d0d4f3065/src%2Ftest%2Fcompile-fail%2Fmarker-no-share.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fmarker-no-share.rs?ref=921ba5a09fa66b0a50bfebee5430622d0d4f3065", "patch": "@@ -8,6 +8,10 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+// ignore-stage1\n+// ignore-stage2\n+// ignore-stage3\n+\n use std::marker;\n \n fn foo<P: Sync>(p: P) { }"}, {"sha": "1657d602e24c485de42a3591d5006b92899e49fc", "filename": "src/test/compile-fail/mutable-enum-indirect.rs", "status": "modified", "additions": 8, "deletions": 3, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/921ba5a09fa66b0a50bfebee5430622d0d4f3065/src%2Ftest%2Fcompile-fail%2Fmutable-enum-indirect.rs", "raw_url": "https://github.com/rust-lang/rust/raw/921ba5a09fa66b0a50bfebee5430622d0d4f3065/src%2Ftest%2Fcompile-fail%2Fmutable-enum-indirect.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fmutable-enum-indirect.rs?ref=921ba5a09fa66b0a50bfebee5430622d0d4f3065", "patch": "@@ -11,13 +11,18 @@\n // Tests that an `&` pointer to something inherently mutable is itself\n // to be considered mutable.\n \n-use std::marker;\n+#![feature(optin_builtin_traits)]\n \n-enum Foo { A(marker::NoSync) }\n+use std::marker::Sync;\n+\n+struct NoSync;\n+impl !Sync for NoSync {}\n+\n+enum Foo { A(NoSync) }\n \n fn bar<T: Sync>(_: T) {}\n \n fn main() {\n-    let x = Foo::A(marker::NoSync);\n+    let x = Foo::A(NoSync);\n     bar(&x); //~ ERROR the trait `core::marker::Sync` is not implemented\n }"}, {"sha": "52335ab76bda23abd042a9f09bc4e1997d70dd39", "filename": "src/test/compile-fail/no-send-res-ports.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/921ba5a09fa66b0a50bfebee5430622d0d4f3065/src%2Ftest%2Fcompile-fail%2Fno-send-res-ports.rs", "raw_url": "https://github.com/rust-lang/rust/raw/921ba5a09fa66b0a50bfebee5430622d0d4f3065/src%2Ftest%2Fcompile-fail%2Fno-send-res-ports.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fno-send-res-ports.rs?ref=921ba5a09fa66b0a50bfebee5430622d0d4f3065", "patch": "@@ -37,7 +37,6 @@ fn main() {\n \n     Thread::spawn(move|| {\n         //~^ ERROR `core::marker::Send` is not implemented\n-        //~^^ ERROR `core::marker::Send` is not implemented\n         let y = x;\n         println!(\"{:?}\", y);\n     });"}, {"sha": "625d51260c4dcc4375d6704da1a11ce35adacc6b", "filename": "src/test/compile-fail/no_send-enum.rs", "status": "modified", "additions": 8, "deletions": 3, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/921ba5a09fa66b0a50bfebee5430622d0d4f3065/src%2Ftest%2Fcompile-fail%2Fno_send-enum.rs", "raw_url": "https://github.com/rust-lang/rust/raw/921ba5a09fa66b0a50bfebee5430622d0d4f3065/src%2Ftest%2Fcompile-fail%2Fno_send-enum.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fno_send-enum.rs?ref=921ba5a09fa66b0a50bfebee5430622d0d4f3065", "patch": "@@ -8,16 +8,21 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-use std::marker;\n+#![feature(optin_builtin_traits)]\n+\n+use std::marker::Send;\n+\n+struct NoSend;\n+impl !Send for NoSend {}\n \n enum Foo {\n-    A(marker::NoSend)\n+    A(NoSend)\n }\n \n fn bar<T: Send>(_: T) {}\n \n fn main() {\n-    let x = Foo::A(marker::NoSend);\n+    let x = Foo::A(NoSend);\n     bar(x);\n     //~^ ERROR `core::marker::Send` is not implemented\n }"}, {"sha": "d404988bd9848cb79a2a70fc53c1d4a8a576dc4e", "filename": "src/test/compile-fail/no_send-rc.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/921ba5a09fa66b0a50bfebee5430622d0d4f3065/src%2Ftest%2Fcompile-fail%2Fno_send-rc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/921ba5a09fa66b0a50bfebee5430622d0d4f3065/src%2Ftest%2Fcompile-fail%2Fno_send-rc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fno_send-rc.rs?ref=921ba5a09fa66b0a50bfebee5430622d0d4f3065", "patch": "@@ -16,5 +16,4 @@ fn main() {\n     let x = Rc::new(5is);\n     bar(x);\n     //~^ ERROR `core::marker::Send` is not implemented\n-    //~^^ ERROR `core::marker::Send` is not implemented\n }"}, {"sha": "7f16db0ba947be19ea11269408e9f2a68458763b", "filename": "src/test/compile-fail/no_send-struct.rs", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/921ba5a09fa66b0a50bfebee5430622d0d4f3065/src%2Ftest%2Fcompile-fail%2Fno_send-struct.rs", "raw_url": "https://github.com/rust-lang/rust/raw/921ba5a09fa66b0a50bfebee5430622d0d4f3065/src%2Ftest%2Fcompile-fail%2Fno_send-struct.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fno_send-struct.rs?ref=921ba5a09fa66b0a50bfebee5430622d0d4f3065", "patch": "@@ -8,17 +8,20 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-use std::marker;\n+#![feature(optin_builtin_traits)]\n+\n+use std::marker::Send;\n \n struct Foo {\n     a: isize,\n-    ns: marker::NoSend\n }\n \n+impl !Send for Foo {}\n+\n fn bar<T: Send>(_: T) {}\n \n fn main() {\n-    let x = Foo { a: 5, ns: marker::NoSend };\n+    let x = Foo { a: 5 };\n     bar(x);\n     //~^ ERROR the trait `core::marker::Send` is not implemented\n }"}, {"sha": "9331afdbbb5d7d792a150e4cf128a9c635f182f5", "filename": "src/test/compile-fail/no_share-enum.rs", "status": "modified", "additions": 8, "deletions": 3, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/921ba5a09fa66b0a50bfebee5430622d0d4f3065/src%2Ftest%2Fcompile-fail%2Fno_share-enum.rs", "raw_url": "https://github.com/rust-lang/rust/raw/921ba5a09fa66b0a50bfebee5430622d0d4f3065/src%2Ftest%2Fcompile-fail%2Fno_share-enum.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fno_share-enum.rs?ref=921ba5a09fa66b0a50bfebee5430622d0d4f3065", "patch": "@@ -8,14 +8,19 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-use std::marker;\n+#![feature(optin_builtin_traits)]\n \n-enum Foo { A(marker::NoSync) }\n+use std::marker::Sync;\n+\n+struct NoSync;\n+impl !Sync for NoSync {}\n+\n+enum Foo { A(NoSync) }\n \n fn bar<T: Sync>(_: T) {}\n \n fn main() {\n-    let x = Foo::A(marker::NoSync);\n+    let x = Foo::A(NoSync);\n     bar(x);\n     //~^ ERROR the trait `core::marker::Sync` is not implemented\n }"}, {"sha": "4917db602e175f1fc6aabef3102ad0d2de792a7c", "filename": "src/test/compile-fail/no_share-rc.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/921ba5a09fa66b0a50bfebee5430622d0d4f3065/src%2Ftest%2Fcompile-fail%2Fno_share-rc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/921ba5a09fa66b0a50bfebee5430622d0d4f3065/src%2Ftest%2Fcompile-fail%2Fno_share-rc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fno_share-rc.rs?ref=921ba5a09fa66b0a50bfebee5430622d0d4f3065", "patch": "@@ -17,5 +17,4 @@ fn main() {\n     let x = Rc::new(RefCell::new(5is));\n     bar(x);\n     //~^ ERROR the trait `core::marker::Sync` is not implemented\n-    //~^^ ERROR the trait `core::marker::Sync` is not implemented\n }"}, {"sha": "b5ccceb3b2a7d9ec72bc6fc286af790ff6e9cd8a", "filename": "src/test/compile-fail/no_share-struct.rs", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/921ba5a09fa66b0a50bfebee5430622d0d4f3065/src%2Ftest%2Fcompile-fail%2Fno_share-struct.rs", "raw_url": "https://github.com/rust-lang/rust/raw/921ba5a09fa66b0a50bfebee5430622d0d4f3065/src%2Ftest%2Fcompile-fail%2Fno_share-struct.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fno_share-struct.rs?ref=921ba5a09fa66b0a50bfebee5430622d0d4f3065", "patch": "@@ -8,14 +8,17 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-use std::marker;\n+#![feature(optin_builtin_traits)]\n \n-struct Foo { a: isize, m: marker::NoSync }\n+use std::marker::Sync;\n+\n+struct Foo { a: isize }\n+impl !Sync for Foo {}\n \n fn bar<T: Sync>(_: T) {}\n \n fn main() {\n-    let x = Foo { a: 5, m: marker::NoSync };\n+    let x = Foo { a: 5 };\n     bar(x);\n     //~^ ERROR the trait `core::marker::Sync` is not implemented\n }"}, {"sha": "dc3385f4bb92f38e7366800fa15f31dc6f1291ca", "filename": "src/test/compile-fail/task-rng-isnt-sendable.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/921ba5a09fa66b0a50bfebee5430622d0d4f3065/src%2Ftest%2Fcompile-fail%2Ftask-rng-isnt-sendable.rs", "raw_url": "https://github.com/rust-lang/rust/raw/921ba5a09fa66b0a50bfebee5430622d0d4f3065/src%2Ftest%2Fcompile-fail%2Ftask-rng-isnt-sendable.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Ftask-rng-isnt-sendable.rs?ref=921ba5a09fa66b0a50bfebee5430622d0d4f3065", "patch": "@@ -17,5 +17,4 @@ fn test_send<S: Send>() {}\n pub fn main() {\n     test_send::<rand::ThreadRng>();\n     //~^ ERROR `core::marker::Send` is not implemented\n-    //~^^ ERROR `core::marker::Send` is not implemented\n }"}, {"sha": "38e3b57634838460e9036bc8e989dd54440f717d", "filename": "src/test/compile-fail/typeck-unsafe-always-share.rs", "status": "modified", "additions": 7, "deletions": 11, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/921ba5a09fa66b0a50bfebee5430622d0d4f3065/src%2Ftest%2Fcompile-fail%2Ftypeck-unsafe-always-share.rs", "raw_url": "https://github.com/rust-lang/rust/raw/921ba5a09fa66b0a50bfebee5430622d0d4f3065/src%2Ftest%2Fcompile-fail%2Ftypeck-unsafe-always-share.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Ftypeck-unsafe-always-share.rs?ref=921ba5a09fa66b0a50bfebee5430622d0d4f3065", "patch": "@@ -10,37 +10,33 @@\n \n // Verify that UnsafeCell is *always* sync regardless if `T` is sync.\n \n-// ignore-tidy-linelength\n+#![feature(optin_builtin_traits)]\n \n use std::cell::UnsafeCell;\n-use std::marker;\n+use std::marker::Sync;\n \n struct MySync<T> {\n     u: UnsafeCell<T>\n }\n \n-struct NoSync {\n-    m: marker::NoSync\n-}\n-\n-fn test<T: Sync>(s: T){\n+struct NoSync;\n+impl !Sync for NoSync {}\n \n-}\n+fn test<T: Sync>(s: T) {}\n \n fn main() {\n     let us = UnsafeCell::new(MySync{u: UnsafeCell::new(0is)});\n     test(us);\n     //~^ ERROR `core::marker::Sync` is not implemented\n \n-    let uns = UnsafeCell::new(NoSync{m: marker::NoSync});\n+    let uns = UnsafeCell::new(NoSync);\n     test(uns);\n     //~^ ERROR `core::marker::Sync` is not implemented\n \n     let ms = MySync{u: uns};\n     test(ms);\n     //~^ ERROR `core::marker::Sync` is not implemented\n \n-    let ns = NoSync{m: marker::NoSync};\n-    test(ns);\n+    test(NoSync);\n     //~^ ERROR `core::marker::Sync` is not implemented\n }"}, {"sha": "322de45daf03e8e17881af8bfed703ad42dd395b", "filename": "src/test/compile-fail/unique-unique-kind.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/921ba5a09fa66b0a50bfebee5430622d0d4f3065/src%2Ftest%2Fcompile-fail%2Funique-unique-kind.rs", "raw_url": "https://github.com/rust-lang/rust/raw/921ba5a09fa66b0a50bfebee5430622d0d4f3065/src%2Ftest%2Fcompile-fail%2Funique-unique-kind.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Funique-unique-kind.rs?ref=921ba5a09fa66b0a50bfebee5430622d0d4f3065", "patch": "@@ -19,5 +19,4 @@ fn main() {\n     let i = box Rc::new(100is);\n     f(i);\n     //~^ ERROR `core::marker::Send` is not implemented\n-    //~^^ ERROR `core::marker::Send` is not implemented\n }"}, {"sha": "f51eee379347c2e40c8c088b22c19bd29d598032", "filename": "src/test/compile-fail/unsendable-class.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/921ba5a09fa66b0a50bfebee5430622d0d4f3065/src%2Ftest%2Fcompile-fail%2Funsendable-class.rs", "raw_url": "https://github.com/rust-lang/rust/raw/921ba5a09fa66b0a50bfebee5430622d0d4f3065/src%2Ftest%2Fcompile-fail%2Funsendable-class.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Funsendable-class.rs?ref=921ba5a09fa66b0a50bfebee5430622d0d4f3065", "patch": "@@ -31,6 +31,5 @@ fn main() {\n   let cat = \"kitty\".to_string();\n   let (tx, _) = channel();\n   //~^ ERROR `core::marker::Send` is not implemented\n-  //~^^ ERROR `core::marker::Send` is not implemented\n   tx.send(foo(42, Rc::new(cat)));\n }"}, {"sha": "7844ef3faca458ae8869d6f0a364a68a18f9d803", "filename": "src/test/run-pass/coherence-negative-impls-safe.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/921ba5a09fa66b0a50bfebee5430622d0d4f3065/src%2Ftest%2Frun-pass%2Fcoherence-negative-impls-safe.rs", "raw_url": "https://github.com/rust-lang/rust/raw/921ba5a09fa66b0a50bfebee5430622d0d4f3065/src%2Ftest%2Frun-pass%2Fcoherence-negative-impls-safe.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fcoherence-negative-impls-safe.rs?ref=921ba5a09fa66b0a50bfebee5430622d0d4f3065", "patch": "@@ -14,8 +14,6 @@ use std::marker::Send;\n \n struct TestType;\n \n-unsafe impl Send for TestType {}\n-\n impl !Send for TestType {}\n \n fn main() {}"}, {"sha": "7c29675f3f4ff7a5dc8bc84e5076c921ac74e469", "filename": "src/test/run-pass/syntax-trait-polarity.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/921ba5a09fa66b0a50bfebee5430622d0d4f3065/src%2Ftest%2Frun-pass%2Fsyntax-trait-polarity.rs", "raw_url": "https://github.com/rust-lang/rust/raw/921ba5a09fa66b0a50bfebee5430622d0d4f3065/src%2Ftest%2Frun-pass%2Fsyntax-trait-polarity.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fsyntax-trait-polarity.rs?ref=921ba5a09fa66b0a50bfebee5430622d0d4f3065", "patch": "@@ -18,14 +18,14 @@ impl TestType {}\n \n trait TestTrait {}\n \n-unsafe impl !Send for TestType {}\n+impl !Send for TestType {}\n impl !TestTrait for TestType {}\n \n struct TestType2<T>;\n \n impl<T> TestType2<T> {}\n \n-unsafe impl<T> !Send for TestType2<T> {}\n+impl<T> !Send for TestType2<T> {}\n impl<T> !TestTrait for TestType2<T> {}\n \n fn main() {}"}]}