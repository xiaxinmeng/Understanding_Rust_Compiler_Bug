{"sha": "57dec5c79158a494905bfd5e6e2473783da177c8", "node_id": "MDY6Q29tbWl0NzI0NzEyOjU3ZGVjNWM3OTE1OGE0OTQ5MDViZmQ1ZTZlMjQ3Mzc4M2RhMTc3Yzg=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2019-11-07T08:17:40Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2019-11-07T08:17:40Z"}, "message": "also test Box<self> receiver", "tree": {"sha": "faf15d1a34270cff79249564cfb291cef76472f9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/faf15d1a34270cff79249564cfb291cef76472f9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/57dec5c79158a494905bfd5e6e2473783da177c8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/57dec5c79158a494905bfd5e6e2473783da177c8", "html_url": "https://github.com/rust-lang/rust/commit/57dec5c79158a494905bfd5e6e2473783da177c8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/57dec5c79158a494905bfd5e6e2473783da177c8/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b7a8ce1be070c095fafc881e6deb2c1ed87943dd", "url": "https://api.github.com/repos/rust-lang/rust/commits/b7a8ce1be070c095fafc881e6deb2c1ed87943dd", "html_url": "https://github.com/rust-lang/rust/commit/b7a8ce1be070c095fafc881e6deb2c1ed87943dd"}], "stats": {"total": 9, "additions": 9, "deletions": 0}, "files": [{"sha": "33d1f4fc1cf0caac47eb0a21da611c0d7f68b231", "filename": "tests/run-pass/dyn-traits.rs", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/57dec5c79158a494905bfd5e6e2473783da177c8/tests%2Frun-pass%2Fdyn-traits.rs", "raw_url": "https://github.com/rust-lang/rust/raw/57dec5c79158a494905bfd5e6e2473783da177c8/tests%2Frun-pass%2Fdyn-traits.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frun-pass%2Fdyn-traits.rs?ref=57dec5c79158a494905bfd5e6e2473783da177c8", "patch": "@@ -5,12 +5,18 @@ fn ref_box_dyn() {\n \n     trait Trait {\n         fn method(&self);\n+\n+        fn box_method(self: Box<Self>);\n     }\n \n     impl Trait for Struct {\n         fn method(&self) {\n             assert_eq!(self.0, 42);\n         }\n+\n+        fn box_method(self: Box<Self>) {\n+            assert_eq!(self.0, 7);\n+        }\n     }\n \n     struct Foo<T: ?Sized>(T);\n@@ -27,6 +33,9 @@ fn ref_box_dyn() {\n \n     let y = &y;\n     y.method();\n+\n+    let y: Box<dyn Trait> = Box::new(Struct(7));\n+    y.box_method();\n }\n \n "}]}