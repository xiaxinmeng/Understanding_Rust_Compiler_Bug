{"sha": "295f0c57a5202f9db8924044f155ac4911e5cbfc", "node_id": "C_kwDOAAsO6NoAKDI5NWYwYzU3YTUyMDJmOWRiODkyNDA0NGYxNTVhYzQ5MTFlNWNiZmM", "commit": {"author": {"name": "Lukas Wirth", "email": "lukastw97@gmail.com", "date": "2022-04-09T11:40:48Z"}, "committer": {"name": "Lukas Wirth", "email": "lukastw97@gmail.com", "date": "2022-04-09T11:41:06Z"}, "message": "Revert #11912 as it parses all visited files", "tree": {"sha": "5729bf8d47b1aa0fbd302270e0eb681d48941a6f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5729bf8d47b1aa0fbd302270e0eb681d48941a6f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/295f0c57a5202f9db8924044f155ac4911e5cbfc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/295f0c57a5202f9db8924044f155ac4911e5cbfc", "html_url": "https://github.com/rust-lang/rust/commit/295f0c57a5202f9db8924044f155ac4911e5cbfc", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/295f0c57a5202f9db8924044f155ac4911e5cbfc/comments", "author": {"login": "Veykril", "id": 3757771, "node_id": "MDQ6VXNlcjM3NTc3NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/3757771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veykril", "html_url": "https://github.com/Veykril", "followers_url": "https://api.github.com/users/Veykril/followers", "following_url": "https://api.github.com/users/Veykril/following{/other_user}", "gists_url": "https://api.github.com/users/Veykril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veykril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veykril/subscriptions", "organizations_url": "https://api.github.com/users/Veykril/orgs", "repos_url": "https://api.github.com/users/Veykril/repos", "events_url": "https://api.github.com/users/Veykril/events{/privacy}", "received_events_url": "https://api.github.com/users/Veykril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Veykril", "id": 3757771, "node_id": "MDQ6VXNlcjM3NTc3NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/3757771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veykril", "html_url": "https://github.com/Veykril", "followers_url": "https://api.github.com/users/Veykril/followers", "following_url": "https://api.github.com/users/Veykril/following{/other_user}", "gists_url": "https://api.github.com/users/Veykril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veykril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veykril/subscriptions", "organizations_url": "https://api.github.com/users/Veykril/orgs", "repos_url": "https://api.github.com/users/Veykril/repos", "events_url": "https://api.github.com/users/Veykril/events{/privacy}", "received_events_url": "https://api.github.com/users/Veykril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9050db2e80ee0190cc4a6eddc972a5e19bc9f926", "url": "https://api.github.com/repos/rust-lang/rust/commits/9050db2e80ee0190cc4a6eddc972a5e19bc9f926", "html_url": "https://github.com/rust-lang/rust/commit/9050db2e80ee0190cc4a6eddc972a5e19bc9f926"}], "stats": {"total": 29, "additions": 13, "deletions": 16}, "files": [{"sha": "e6d94f1d0ddb2ca51b30ca60b61589f6596124b6", "filename": "crates/base_db/src/input.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/295f0c57a5202f9db8924044f155ac4911e5cbfc/crates%2Fbase_db%2Fsrc%2Finput.rs", "raw_url": "https://github.com/rust-lang/rust/raw/295f0c57a5202f9db8924044f155ac4911e5cbfc/crates%2Fbase_db%2Fsrc%2Finput.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fbase_db%2Fsrc%2Finput.rs?ref=295f0c57a5202f9db8924044f155ac4911e5cbfc", "patch": "@@ -334,7 +334,7 @@ impl CrateGraph {\n \n     /// Returns an iterator over all transitive dependencies of the given crate,\n     /// including the crate itself.\n-    pub fn transitive_deps(&self, of: CrateId) -> impl Iterator<Item = CrateId> + '_ {\n+    pub fn transitive_deps(&self, of: CrateId) -> impl Iterator<Item = CrateId> {\n         let mut worklist = vec![of];\n         let mut deps = FxHashSet::default();\n \n@@ -351,7 +351,7 @@ impl CrateGraph {\n \n     /// Returns all transitive reverse dependencies of the given crate,\n     /// including the crate itself.\n-    pub fn transitive_rev_deps(&self, of: CrateId) -> impl Iterator<Item = CrateId> + '_ {\n+    pub fn transitive_rev_deps(&self, of: CrateId) -> impl Iterator<Item = CrateId> {\n         let mut worklist = vec![of];\n         let mut rev_deps = FxHashSet::default();\n         rev_deps.insert(of);"}, {"sha": "df17b75c05ca4907aca025c90c849df6c2bd6334", "filename": "crates/hir/src/lib.rs", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/295f0c57a5202f9db8924044f155ac4911e5cbfc/crates%2Fhir%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/295f0c57a5202f9db8924044f155ac4911e5cbfc/crates%2Fhir%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir%2Fsrc%2Flib.rs?ref=295f0c57a5202f9db8924044f155ac4911e5cbfc", "patch": "@@ -175,8 +175,11 @@ impl Crate {\n             .collect()\n     }\n \n-    pub fn transitive_reverse_dependencies(self, db: &dyn HirDatabase) -> Vec<Crate> {\n-        db.crate_graph().transitive_rev_deps(self.id).into_iter().map(|id| Crate { id }).collect()\n+    pub fn transitive_reverse_dependencies(\n+        self,\n+        db: &dyn HirDatabase,\n+    ) -> impl Iterator<Item = Crate> {\n+        db.crate_graph().transitive_rev_deps(self.id).map(|id| Crate { id })\n     }\n \n     pub fn root_module(self, db: &dyn HirDatabase) -> Module {"}, {"sha": "4a11fb73cd6d987aab3e1a84e4ea29873ac4b6d2", "filename": "crates/ide_db/src/search.rs", "status": "modified", "additions": 6, "deletions": 12, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/295f0c57a5202f9db8924044f155ac4911e5cbfc/crates%2Fide_db%2Fsrc%2Fsearch.rs", "raw_url": "https://github.com/rust-lang/rust/raw/295f0c57a5202f9db8924044f155ac4911e5cbfc/crates%2Fide_db%2Fsrc%2Fsearch.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_db%2Fsrc%2Fsearch.rs?ref=295f0c57a5202f9db8924044f155ac4911e5cbfc", "patch": "@@ -102,18 +102,12 @@ impl SearchScope {\n     /// Build a search scope spanning all the reverse dependencies of the given crate.\n     fn reverse_dependencies(db: &RootDatabase, of: hir::Crate) -> SearchScope {\n         let mut entries = FxHashMap::default();\n-        let mut insert_modules = |of: hir::Crate| {\n-            entries.extend(of.modules(db).into_iter().filter_map(|module| {\n-                match module.definition_source(db) {\n-                    InFile { file_id, value: ModuleSource::SourceFile(..) } => {\n-                        Some((file_id.original_file(db), None))\n-                    }\n-                    _ => None,\n-                }\n-            }));\n-        };\n-        insert_modules(of);\n-        of.transitive_reverse_dependencies(db).into_iter().for_each(insert_modules);\n+        for rev_dep in of.transitive_reverse_dependencies(db) {\n+            let root_file = rev_dep.root_file(db);\n+            let source_root_id = db.file_source_root(root_file);\n+            let source_root = db.source_root(source_root_id);\n+            entries.extend(source_root.iter().map(|id| (id, None)));\n+        }\n         SearchScope { entries }\n     }\n "}]}