{"sha": "1676e77db279772551cf804bafbad5214096b9a9", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE2NzZlNzdkYjI3OTc3MjU1MWNmODA0YmFmYmFkNTIxNDA5NmI5YTk=", "commit": {"author": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2013-08-30T01:04:17Z"}, "committer": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2013-09-24T01:23:20Z"}, "message": "librustc: Remove garbage-collected functions from util/common.", "tree": {"sha": "37531dbfd49159f4851fae19b16b9ecd5ced7fc6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/37531dbfd49159f4851fae19b16b9ecd5ced7fc6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1676e77db279772551cf804bafbad5214096b9a9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1676e77db279772551cf804bafbad5214096b9a9", "html_url": "https://github.com/rust-lang/rust/commit/1676e77db279772551cf804bafbad5214096b9a9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1676e77db279772551cf804bafbad5214096b9a9/comments", "author": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7796d519f95305fca9cec9d92d361e3df0dd999c", "url": "https://api.github.com/repos/rust-lang/rust/commits/7796d519f95305fca9cec9d92d361e3df0dd999c", "html_url": "https://github.com/rust-lang/rust/commit/7796d519f95305fca9cec9d92d361e3df0dd999c"}], "stats": {"total": 28, "additions": 16, "deletions": 12}, "files": [{"sha": "8337354724a44058ced9957eb89e78b6f5d96360", "filename": "src/librustc/util/common.rs", "status": "modified", "additions": 16, "deletions": 12, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/1676e77db279772551cf804bafbad5214096b9a9/src%2Flibrustc%2Futil%2Fcommon.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1676e77db279772551cf804bafbad5214096b9a9/src%2Flibrustc%2Futil%2Fcommon.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Futil%2Fcommon.rs?ref=1676e77db279772551cf804bafbad5214096b9a9", "patch": "@@ -60,12 +60,12 @@ pub fn field_exprs(fields: ~[ast::Field]) -> ~[@ast::Expr] {\n     fields.map(|f| f.expr)\n }\n \n-struct LoopQueryVisitor {\n-    p: @fn(&ast::Expr_) -> bool\n+struct LoopQueryVisitor<'self> {\n+    p: &'self fn(&ast::Expr_) -> bool\n }\n \n-impl Visitor<@mut bool> for LoopQueryVisitor {\n-    fn visit_expr(&mut self, e:@ast::Expr, flag:@mut bool) {\n+impl<'self> Visitor<@mut bool> for LoopQueryVisitor<'self> {\n+    fn visit_expr(&mut self, e: @ast::Expr, flag: @mut bool) {\n         *flag |= (self.p)(&e.node);\n         match e.node {\n           // Skip inner loops, since a break in the inner loop isn't a\n@@ -78,29 +78,33 @@ impl Visitor<@mut bool> for LoopQueryVisitor {\n \n // Takes a predicate p, returns true iff p is true for any subexpressions\n // of b -- skipping any inner loops (loop, while, loop_body)\n-pub fn loop_query(b: &ast::Block, p: @fn(&ast::Expr_) -> bool) -> bool {\n+pub fn loop_query(b: &ast::Block, p: &fn(&ast::Expr_) -> bool) -> bool {\n     let rs = @mut false;\n-    let mut v = LoopQueryVisitor { p: p };\n+    let mut v = LoopQueryVisitor {\n+        p: p,\n+    };\n     visit::walk_block(&mut v, b, rs);\n     return *rs;\n }\n \n-struct BlockQueryVisitor {\n-    p: @fn(@ast::Expr) -> bool\n+struct BlockQueryVisitor<'self> {\n+    p: &'self fn(@ast::Expr) -> bool\n }\n \n-impl Visitor<@mut bool> for BlockQueryVisitor {\n-    fn visit_expr(&mut self, e:@ast::Expr, flag:@mut bool) {\n+impl<'self> Visitor<@mut bool> for BlockQueryVisitor<'self> {\n+    fn visit_expr(&mut self, e: @ast::Expr, flag: @mut bool) {\n         *flag |= (self.p)(e);\n         visit::walk_expr(self, e, flag)\n     }\n }\n \n // Takes a predicate p, returns true iff p is true for any subexpressions\n // of b -- skipping any inner loops (loop, while, loop_body)\n-pub fn block_query(b: &ast::Block, p: @fn(@ast::Expr) -> bool) -> bool {\n+pub fn block_query(b: &ast::Block, p: &fn(@ast::Expr) -> bool) -> bool {\n     let rs = @mut false;\n-    let mut v = BlockQueryVisitor { p: p };\n+    let mut v = BlockQueryVisitor {\n+        p: p,\n+    };\n     visit::walk_block(&mut v, b, rs);\n     return *rs;\n }"}]}