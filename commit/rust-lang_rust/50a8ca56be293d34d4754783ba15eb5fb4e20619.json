{"sha": "50a8ca56be293d34d4754783ba15eb5fb4e20619", "node_id": "C_kwDOAAsO6NoAKDUwYThjYTU2YmUyOTNkMzRkNDc1NDc4M2JhMTVlYjVmYjRlMjA2MTk", "commit": {"author": {"name": "Lukas Markeffsky", "email": "@", "date": "2022-12-19T14:03:04Z"}, "committer": {"name": "Lukas Markeffsky", "email": "@", "date": "2022-12-29T12:31:45Z"}, "message": "`./x doc library --open` opens `std`", "tree": {"sha": "57a2e575d549274a8e0355d25adfafafe0cad981", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/57a2e575d549274a8e0355d25adfafafe0cad981"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/50a8ca56be293d34d4754783ba15eb5fb4e20619", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/50a8ca56be293d34d4754783ba15eb5fb4e20619", "html_url": "https://github.com/rust-lang/rust/commit/50a8ca56be293d34d4754783ba15eb5fb4e20619", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/50a8ca56be293d34d4754783ba15eb5fb4e20619/comments", "author": null, "committer": null, "parents": [{"sha": "11a338ab6644cf454c45d2b41651900610a55b07", "url": "https://api.github.com/repos/rust-lang/rust/commits/11a338ab6644cf454c45d2b41651900610a55b07", "html_url": "https://github.com/rust-lang/rust/commit/11a338ab6644cf454c45d2b41651900610a55b07"}], "stats": {"total": 6, "additions": 5, "deletions": 1}, "files": [{"sha": "3f43c68d2e0825960e33eeb6a411608adbcd826d", "filename": "src/bootstrap/doc.rs", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/50a8ca56be293d34d4754783ba15eb5fb4e20619/src%2Fbootstrap%2Fdoc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/50a8ca56be293d34d4754783ba15eb5fb4e20619/src%2Fbootstrap%2Fdoc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fdoc.rs?ref=50a8ca56be293d34d4754783ba15eb5fb4e20619", "patch": "@@ -506,7 +506,11 @@ impl Step for Std {\n         // Look for library/std, library/core etc in the `x.py doc` arguments and\n         // open the corresponding rendered docs.\n         for requested_crate in requested_crates {\n-            if STD_PUBLIC_CRATES.iter().any(|k| *k == requested_crate.as_str()) {\n+            if requested_crate == \"library\" {\n+                // For `x.py doc library --open`, open `std` by default.\n+                let index = out.join(\"std\").join(\"index.html\");\n+                builder.open_in_browser(index);\n+            } else if STD_PUBLIC_CRATES.iter().any(|&k| k == requested_crate) {\n                 let index = out.join(requested_crate).join(\"index.html\");\n                 builder.open_in_browser(index);\n             }"}]}