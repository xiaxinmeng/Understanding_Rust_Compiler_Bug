{"sha": "04badd6a973d2499731b49365a121dbc4c9c468e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjA0YmFkZDZhOTczZDI0OTk3MzFiNDkzNjVhMTIxZGJjNGM5YzQ2OGU=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2015-07-25T11:20:15Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2015-07-25T11:20:15Z"}, "message": "Auto merge of #27253 - bossmc:unbalanced-delimiters-cause-ice, r=nikomatsakis\n\nThis introduces a test for #23389 and improves the error behaviour to treat the malformed LHS as an error, not a compiler bug.\r\n\r\nThe parse phase that precedes the call to `check_lhs_nt_follows` could possibly be enhanced to police the format itself (which the old code suggests was the original intention), but I'm not sure that's any nicer than just parsing the matcher as generic rust code and then policing the specific requirements for being a macro matcher afterwards (as this does).\r\n\r\nFixes #23389", "tree": {"sha": "a69b660f2a87f5b34fb6c89186e8e9994e3e1637", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a69b660f2a87f5b34fb6c89186e8e9994e3e1637"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/04badd6a973d2499731b49365a121dbc4c9c468e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/04badd6a973d2499731b49365a121dbc4c9c468e", "html_url": "https://github.com/rust-lang/rust/commit/04badd6a973d2499731b49365a121dbc4c9c468e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/04badd6a973d2499731b49365a121dbc4c9c468e/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f0b7ede78a25686875d1028251f15b915fd0e6e8", "url": "https://api.github.com/repos/rust-lang/rust/commits/f0b7ede78a25686875d1028251f15b915fd0e6e8", "html_url": "https://github.com/rust-lang/rust/commit/f0b7ede78a25686875d1028251f15b915fd0e6e8"}, {"sha": "93dd75a5096c615bfdbc4502deafce2ee606b00e", "url": "https://api.github.com/repos/rust-lang/rust/commits/93dd75a5096c615bfdbc4502deafce2ee606b00e", "html_url": "https://github.com/rust-lang/rust/commit/93dd75a5096c615bfdbc4502deafce2ee606b00e"}], "stats": {"total": 20, "additions": 18, "deletions": 2}, "files": [{"sha": "e29e0ab54d17ff2d1da2a00f38c77e706ffd36b1", "filename": "src/libsyntax/ext/tt/macro_rules.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/04badd6a973d2499731b49365a121dbc4c9c468e/src%2Flibsyntax%2Fext%2Ftt%2Fmacro_rules.rs", "raw_url": "https://github.com/rust-lang/rust/raw/04badd6a973d2499731b49365a121dbc4c9c468e/src%2Flibsyntax%2Fext%2Ftt%2Fmacro_rules.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Ftt%2Fmacro_rules.rs?ref=04badd6a973d2499731b49365a121dbc4c9c468e", "patch": "@@ -302,8 +302,8 @@ fn check_lhs_nt_follows(cx: &mut ExtCtxt, lhs: &NamedMatch, sp: Span) {\n             tt @ &TtSequence(..) => {\n                 check_matcher(cx, Some(tt).into_iter(), &Eof);\n             },\n-            _ => cx.span_bug(sp, \"wrong-structured lhs for follow check (didn't find \\\n-            a TtDelimited or TtSequence)\")\n+            _ => cx.span_err(sp, \"Invalid macro matcher; matchers must be contained \\\n+               in balanced delimiters or a repetition indicator\")\n         },\n         _ => cx.span_bug(sp, \"wrong-structured lhs for follow check (didn't find a \\\n            MatchedNonterminal)\")"}, {"sha": "302bf34ff99165055871ef7a95849499ccb1dc92", "filename": "src/test/compile-fail/invalid-macro-matcher.rs", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/04badd6a973d2499731b49365a121dbc4c9c468e/src%2Ftest%2Fcompile-fail%2Finvalid-macro-matcher.rs", "raw_url": "https://github.com/rust-lang/rust/raw/04badd6a973d2499731b49365a121dbc4c9c468e/src%2Ftest%2Fcompile-fail%2Finvalid-macro-matcher.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Finvalid-macro-matcher.rs?ref=04badd6a973d2499731b49365a121dbc4c9c468e", "patch": "@@ -0,0 +1,16 @@\n+// Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+macro_rules! invalid {\n+    _ => (); //~^ ERROR Invalid macro matcher\n+}\n+\n+fn main() {\n+}"}]}