{"sha": "7ae8889286535446f9a7c0d4c3e214b55d7063e6", "node_id": "MDY6Q29tbWl0NzI0NzEyOjdhZTg4ODkyODY1MzU0NDZmOWE3YzBkNGMzZTIxNGI1NWQ3MDYzZTY=", "commit": {"author": {"name": "Flavio Percoco", "email": "flaper87@gmail.com", "date": "2015-01-26T22:10:24Z"}, "committer": {"name": "Flavio Percoco", "email": "flaper87@gmail.com", "date": "2015-02-22T01:14:24Z"}, "message": "Add negative impls for Sync", "tree": {"sha": "d99b40d0061a6cfebac8b032a2382ad45a7ca05d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d99b40d0061a6cfebac8b032a2382ad45a7ca05d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7ae8889286535446f9a7c0d4c3e214b55d7063e6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7ae8889286535446f9a7c0d4c3e214b55d7063e6", "html_url": "https://github.com/rust-lang/rust/commit/7ae8889286535446f9a7c0d4c3e214b55d7063e6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7ae8889286535446f9a7c0d4c3e214b55d7063e6/comments", "author": {"login": "flaper87", "id": 13816, "node_id": "MDQ6VXNlcjEzODE2", "avatar_url": "https://avatars.githubusercontent.com/u/13816?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flaper87", "html_url": "https://github.com/flaper87", "followers_url": "https://api.github.com/users/flaper87/followers", "following_url": "https://api.github.com/users/flaper87/following{/other_user}", "gists_url": "https://api.github.com/users/flaper87/gists{/gist_id}", "starred_url": "https://api.github.com/users/flaper87/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flaper87/subscriptions", "organizations_url": "https://api.github.com/users/flaper87/orgs", "repos_url": "https://api.github.com/users/flaper87/repos", "events_url": "https://api.github.com/users/flaper87/events{/privacy}", "received_events_url": "https://api.github.com/users/flaper87/received_events", "type": "User", "site_admin": false}, "committer": {"login": "flaper87", "id": 13816, "node_id": "MDQ6VXNlcjEzODE2", "avatar_url": "https://avatars.githubusercontent.com/u/13816?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flaper87", "html_url": "https://github.com/flaper87", "followers_url": "https://api.github.com/users/flaper87/followers", "following_url": "https://api.github.com/users/flaper87/following{/other_user}", "gists_url": "https://api.github.com/users/flaper87/gists{/gist_id}", "starred_url": "https://api.github.com/users/flaper87/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flaper87/subscriptions", "organizations_url": "https://api.github.com/users/flaper87/orgs", "repos_url": "https://api.github.com/users/flaper87/repos", "events_url": "https://api.github.com/users/flaper87/events{/privacy}", "received_events_url": "https://api.github.com/users/flaper87/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bd511f73be526640ae98012d302201a019f9b458", "url": "https://api.github.com/repos/rust-lang/rust/commits/bd511f73be526640ae98012d302201a019f9b458", "html_url": "https://github.com/rust-lang/rust/commit/bd511f73be526640ae98012d302201a019f9b458"}], "stats": {"total": 26, "additions": 9, "deletions": 17}, "files": [{"sha": "b8a22c30f9e1ed14a9146b22772af699adc45901", "filename": "src/libcore/cell.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/7ae8889286535446f9a7c0d4c3e214b55d7063e6/src%2Flibcore%2Fcell.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7ae8889286535446f9a7c0d4c3e214b55d7063e6/src%2Flibcore%2Fcell.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fcell.rs?ref=7ae8889286535446f9a7c0d4c3e214b55d7063e6", "patch": "@@ -144,7 +144,7 @@\n use clone::Clone;\n use cmp::PartialEq;\n use default::Default;\n-use marker::{Copy, Send};\n+use marker::{Copy, Send, Sync};\n use ops::{Deref, DerefMut, Drop};\n use option::Option;\n use option::Option::{None, Some};\n@@ -660,6 +660,8 @@ pub struct UnsafeCell<T> {\n     pub value: T,\n }\n \n+impl<T> !Sync for UnsafeCell<T> {}\n+\n impl<T> UnsafeCell<T> {\n     /// Construct a new instance of `UnsafeCell` which will wrap the specified\n     /// value."}, {"sha": "b5d533f104c98577b4d289cc4ce1167da8382462", "filename": "src/libcore/marker.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7ae8889286535446f9a7c0d4c3e214b55d7063e6/src%2Flibcore%2Fmarker.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7ae8889286535446f9a7c0d4c3e214b55d7063e6/src%2Flibcore%2Fmarker.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fmarker.rs?ref=7ae8889286535446f9a7c0d4c3e214b55d7063e6", "patch": "@@ -51,6 +51,7 @@ pub unsafe trait Send : MarkerTrait {\n \n impl<T> !Send for *const T { }\n impl<T> !Send for *mut T { }\n+impl !Send for Managed { }\n \n /// Types with a constant size known at compile-time.\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n@@ -219,6 +220,7 @@ pub unsafe trait Sync : MarkerTrait {\n \n impl<T> !Sync for *const T { }\n impl<T> !Sync for *mut T { }\n+impl !Sync for Managed { }\n \n /// A type which is considered \"not POD\", meaning that it is not\n /// implicitly copyable. This is typically embedded in other types to"}, {"sha": "9fade728b36c361a90f7d0034ff616784916214c", "filename": "src/librustc/middle/traits/select.rs", "status": "modified", "additions": 4, "deletions": 16, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/7ae8889286535446f9a7c0d4c3e214b55d7063e6/src%2Flibrustc%2Fmiddle%2Ftraits%2Fselect.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7ae8889286535446f9a7c0d4c3e214b55d7063e6/src%2Flibrustc%2Fmiddle%2Ftraits%2Fselect.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftraits%2Fselect.rs?ref=7ae8889286535446f9a7c0d4c3e214b55d7063e6", "patch": "@@ -826,6 +826,8 @@ impl<'cx, 'tcx> SelectionContext<'cx, 'tcx> {\n             }\n             Some(bound @ ty::BoundSend) |\n             Some(bound @ ty::BoundSync) => {\n+                // Ideally, we shouldn't sepcial case Send/Sync. This will be unified\n+                // as soon as default trait implementations for these traits land.\n                 try!(self.assemble_candidates_from_impls(obligation, &mut candidates));\n \n                 // No explicit impls were declared for this type, consider the fallback rules.\n@@ -1599,27 +1601,13 @@ impl<'cx, 'tcx> SelectionContext<'cx, 'tcx> {\n                               -> Result<BuiltinBoundConditions<'tcx>,SelectionError<'tcx>>\n         {\n             // First check for markers and other nonsense.\n-            let tcx = this.tcx();\n             match bound {\n-                ty::BoundSend => {\n-                    if Some(def_id) == tcx.lang_items.managed_bound() {\n-                        return Err(Unimplemented)\n-                    }\n-                }\n-\n                 ty::BoundCopy => {\n                     return Ok(ParameterBuiltin)\n                 }\n \n-                ty::BoundSync => {\n-                    if\n-                        Some(def_id) == tcx.lang_items.managed_bound() ||\n-                        Some(def_id) == tcx.lang_items.unsafe_cell_type()\n-                    {\n-                        return Err(Unimplemented)\n-                    }\n-                }\n-\n+                ty::BoundSend |\n+                ty::BoundSync |\n                 ty::BoundSized => { }\n             }\n "}]}