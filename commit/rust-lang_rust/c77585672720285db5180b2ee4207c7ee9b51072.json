{"sha": "c77585672720285db5180b2ee4207c7ee9b51072", "node_id": "MDY6Q29tbWl0NzI0NzEyOmM3NzU4NTY3MjcyMDI4NWRiNTE4MGIyZWU0MjA3YzdlZTliNTEwNzI=", "commit": {"author": {"name": "Hirochika Matsumoto", "email": "matsujika@gmail.com", "date": "2020-09-22T18:42:58Z"}, "committer": {"name": "Hirochika Matsumoto", "email": "matsujika@gmail.com", "date": "2020-11-17T16:28:37Z"}, "message": "Call `diag.multipart_suggestion` instead", "tree": {"sha": "c5bc42bd903ad9456fc02ea2d8cc3e5b73bc8a55", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c5bc42bd903ad9456fc02ea2d8cc3e5b73bc8a55"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c77585672720285db5180b2ee4207c7ee9b51072", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c77585672720285db5180b2ee4207c7ee9b51072", "html_url": "https://github.com/rust-lang/rust/commit/c77585672720285db5180b2ee4207c7ee9b51072", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c77585672720285db5180b2ee4207c7ee9b51072/comments", "author": {"login": "hkmatsumoto", "id": 57856193, "node_id": "MDQ6VXNlcjU3ODU2MTkz", "avatar_url": "https://avatars.githubusercontent.com/u/57856193?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hkmatsumoto", "html_url": "https://github.com/hkmatsumoto", "followers_url": "https://api.github.com/users/hkmatsumoto/followers", "following_url": "https://api.github.com/users/hkmatsumoto/following{/other_user}", "gists_url": "https://api.github.com/users/hkmatsumoto/gists{/gist_id}", "starred_url": "https://api.github.com/users/hkmatsumoto/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hkmatsumoto/subscriptions", "organizations_url": "https://api.github.com/users/hkmatsumoto/orgs", "repos_url": "https://api.github.com/users/hkmatsumoto/repos", "events_url": "https://api.github.com/users/hkmatsumoto/events{/privacy}", "received_events_url": "https://api.github.com/users/hkmatsumoto/received_events", "type": "User", "site_admin": false}, "committer": {"login": "hkmatsumoto", "id": 57856193, "node_id": "MDQ6VXNlcjU3ODU2MTkz", "avatar_url": "https://avatars.githubusercontent.com/u/57856193?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hkmatsumoto", "html_url": "https://github.com/hkmatsumoto", "followers_url": "https://api.github.com/users/hkmatsumoto/followers", "following_url": "https://api.github.com/users/hkmatsumoto/following{/other_user}", "gists_url": "https://api.github.com/users/hkmatsumoto/gists{/gist_id}", "starred_url": "https://api.github.com/users/hkmatsumoto/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hkmatsumoto/subscriptions", "organizations_url": "https://api.github.com/users/hkmatsumoto/orgs", "repos_url": "https://api.github.com/users/hkmatsumoto/repos", "events_url": "https://api.github.com/users/hkmatsumoto/events{/privacy}", "received_events_url": "https://api.github.com/users/hkmatsumoto/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3ed89026231a17beed9e93b055ea1b6192997a68", "url": "https://api.github.com/repos/rust-lang/rust/commits/3ed89026231a17beed9e93b055ea1b6192997a68", "html_url": "https://github.com/rust-lang/rust/commit/3ed89026231a17beed9e93b055ea1b6192997a68"}], "stats": {"total": 9, "additions": 4, "deletions": 5}, "files": [{"sha": "d581912284f9e515eadb8f33677642255d9d99aa", "filename": "clippy_lints/src/unnecessary_wrap.rs", "status": "modified", "additions": 4, "deletions": 5, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/c77585672720285db5180b2ee4207c7ee9b51072/clippy_lints%2Fsrc%2Funnecessary_wrap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c77585672720285db5180b2ee4207c7ee9b51072/clippy_lints%2Fsrc%2Funnecessary_wrap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Funnecessary_wrap.rs?ref=c77585672720285db5180b2ee4207c7ee9b51072", "patch": "@@ -1,5 +1,5 @@\n use crate::utils::{\n-    is_type_diagnostic_item, match_qpath, multispan_sugg_with_applicability, paths, return_ty, snippet,\n+    is_type_diagnostic_item, match_qpath, paths, return_ty, snippet,\n     span_lint_and_then,\n };\n use if_chain::if_chain;\n@@ -102,10 +102,8 @@ impl<'tcx> LateLintPass<'tcx> for UnnecessaryWrap {\n                 span,\n                 \"this function returns unnecessarily wrapping data\",\n                 move |diag| {\n-                    multispan_sugg_with_applicability(\n-                        diag,\n+                    diag.multipart_suggestion(\n                         \"factor this out to\",\n-                        Applicability::MachineApplicable,\n                         suggs.into_iter().chain({\n                             let inner_ty = return_ty(cx, hir_id)\n                                 .walk()\n@@ -116,7 +114,8 @@ impl<'tcx> LateLintPass<'tcx> for UnnecessaryWrap {\n                                     _ => None,\n                                 });\n                             inner_ty.map(|inner_ty| (fn_decl.output.span(), inner_ty))\n-                        }),\n+                        }).collect(),\n+                        Applicability::MachineApplicable,\n                     );\n                 },\n             );"}]}