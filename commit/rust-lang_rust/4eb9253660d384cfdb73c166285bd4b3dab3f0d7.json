{"sha": "4eb9253660d384cfdb73c166285bd4b3dab3f0d7", "node_id": "MDY6Q29tbWl0NzI0NzEyOjRlYjkyNTM2NjBkMzg0Y2ZkYjczYzE2NjI4NWJkNGIzZGFiM2YwZDc=", "commit": {"author": {"name": "Yuki Okushi", "email": "huyuumi.dev@gmail.com", "date": "2020-08-04T00:27:04Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-08-04T00:27:04Z"}, "message": "Rollup merge of #75083 - JohnTitor:follow-up-unused-braces, r=lcnr\n\nDo not trigger `unused_braces` for `while let`\n\nFollow-up for #75031\nr? @lcnr", "tree": {"sha": "97db86bd24b1585a3095ff55e56d9b5e33e804e5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/97db86bd24b1585a3095ff55e56d9b5e33e804e5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4eb9253660d384cfdb73c166285bd4b3dab3f0d7", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJfKKtZCRBK7hj4Ov3rIwAAdHIIAAuyDn/5PRYjHV9WEQ9GYwGa\nCJobXIYUxFuHJLP3jG7wrrXM8J+CMCiYYc074kxlLnYvmuZBeqNSjhnT2Kk3FQ8d\nkrUn2zE9CDG7zAUK59gFIDfx7yeGnquDWL5kf589M+MncAMhHhhlhmQBIYcSK9ii\nswH7CwfcLGVmN1KerDY9qzLUrgPtEH3Cx0OFyKYWsQYpuIXx9qTIMXfx5IFSeQ/w\nO5uCVpS7q0w32TD91IBvsF/3lEAjeEfpE+g3dPrIAAZZgnRLUQ4XrPotgI4Fu70q\ne7HHnGo9a8x7WJbdnX8ej1MOVi8nuRjkAtyjhSELlzl6UZd0H0mpOVhpMLBMVd8=\n=1jIv\n-----END PGP SIGNATURE-----\n", "payload": "tree 97db86bd24b1585a3095ff55e56d9b5e33e804e5\nparent c2bc733d99b99a830239c553759ce7b59ffbc507\nparent 2e5c50195aa0345e174ff9970ec58b7e154c0132\nauthor Yuki Okushi <huyuumi.dev@gmail.com> 1596500824 +0900\ncommitter GitHub <noreply@github.com> 1596500824 +0900\n\nRollup merge of #75083 - JohnTitor:follow-up-unused-braces, r=lcnr\n\nDo not trigger `unused_braces` for `while let`\n\nFollow-up for #75031\nr? @lcnr\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4eb9253660d384cfdb73c166285bd4b3dab3f0d7", "html_url": "https://github.com/rust-lang/rust/commit/4eb9253660d384cfdb73c166285bd4b3dab3f0d7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4eb9253660d384cfdb73c166285bd4b3dab3f0d7/comments", "author": {"login": "JohnTitor", "id": 25030997, "node_id": "MDQ6VXNlcjI1MDMwOTk3", "avatar_url": "https://avatars.githubusercontent.com/u/25030997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JohnTitor", "html_url": "https://github.com/JohnTitor", "followers_url": "https://api.github.com/users/JohnTitor/followers", "following_url": "https://api.github.com/users/JohnTitor/following{/other_user}", "gists_url": "https://api.github.com/users/JohnTitor/gists{/gist_id}", "starred_url": "https://api.github.com/users/JohnTitor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JohnTitor/subscriptions", "organizations_url": "https://api.github.com/users/JohnTitor/orgs", "repos_url": "https://api.github.com/users/JohnTitor/repos", "events_url": "https://api.github.com/users/JohnTitor/events{/privacy}", "received_events_url": "https://api.github.com/users/JohnTitor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c2bc733d99b99a830239c553759ce7b59ffbc507", "url": "https://api.github.com/repos/rust-lang/rust/commits/c2bc733d99b99a830239c553759ce7b59ffbc507", "html_url": "https://github.com/rust-lang/rust/commit/c2bc733d99b99a830239c553759ce7b59ffbc507"}, {"sha": "2e5c50195aa0345e174ff9970ec58b7e154c0132", "url": "https://api.github.com/repos/rust-lang/rust/commits/2e5c50195aa0345e174ff9970ec58b7e154c0132", "html_url": "https://github.com/rust-lang/rust/commit/2e5c50195aa0345e174ff9970ec58b7e154c0132"}], "stats": {"total": 46, "additions": 21, "deletions": 25}, "files": [{"sha": "1e98ddbd7db4a1849c988b9595e2a5cb206ce1b6", "filename": "src/librustc_lint/unused.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/4eb9253660d384cfdb73c166285bd4b3dab3f0d7/src%2Flibrustc_lint%2Funused.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4eb9253660d384cfdb73c166285bd4b3dab3f0d7/src%2Flibrustc_lint%2Funused.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_lint%2Funused.rs?ref=4eb9253660d384cfdb73c166285bd4b3dab3f0d7", "patch": "@@ -536,7 +536,10 @@ trait UnusedDelimLint {\n                 (cond, UnusedDelimsCtx::IfCond, true, Some(left), Some(right))\n             }\n \n-            While(ref cond, ref block, ..) => {\n+            // Do not lint `unused_braces` in `while let` expressions.\n+            While(ref cond, ref block, ..)\n+                if !matches!(cond.kind, Let(_, _)) || Self::LINT_EXPR_IN_PATTERN_MATCHING_CTX =>\n+            {\n                 let left = e.span.lo() + rustc_span::BytePos(5);\n                 let right = block.span.lo();\n                 (cond, UnusedDelimsCtx::WhileCond, true, Some(left), Some(right))"}, {"sha": "8064c3a88d1d98c1ff2d84d1b71b1cd64c1a4600", "filename": "src/test/ui/lint/issue-74883-unused-paren-baren-yield.rs", "status": "modified", "additions": 2, "deletions": 9, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/4eb9253660d384cfdb73c166285bd4b3dab3f0d7/src%2Ftest%2Fui%2Flint%2Fissue-74883-unused-paren-baren-yield.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4eb9253660d384cfdb73c166285bd4b3dab3f0d7/src%2Ftest%2Fui%2Flint%2Fissue-74883-unused-paren-baren-yield.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Fissue-74883-unused-paren-baren-yield.rs?ref=4eb9253660d384cfdb73c166285bd4b3dab3f0d7", "patch": "@@ -15,15 +15,8 @@ fn main() {\n         while let Some(_) = ((yield)) {} //~ ERROR: unnecessary parentheses\n         {{yield}}; //~ ERROR: unnecessary braces\n         {( yield )}; //~ ERROR: unnecessary parentheses\n-\n-        // FIXME: Reduce duplicate warnings.\n-        // Perhaps we should tweak checks in `BlockRetValue`?\n-        while let Some(_) = {(yield)} {}\n-        //~^ ERROR: unnecessary braces\n-        //~| ERROR: unnecessary parentheses\n-        while let Some(_) = {{yield}} {}\n-        //~^ ERROR: unnecessary braces\n-        //~| ERROR: unnecessary braces\n+        while let Some(_) = {(yield)} {} //~ ERROR: unnecessary parentheses\n+        while let Some(_) = {{yield}} {} //~ ERROR: unnecessary braces\n \n         // FIXME: It'd be great if we could also warn them.\n         ((yield));"}, {"sha": "3f6260dc6e19e29211f9207c03d0f306857a0a80", "filename": "src/test/ui/lint/issue-74883-unused-paren-baren-yield.stderr", "status": "modified", "additions": 3, "deletions": 15, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/4eb9253660d384cfdb73c166285bd4b3dab3f0d7/src%2Ftest%2Fui%2Flint%2Fissue-74883-unused-paren-baren-yield.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/4eb9253660d384cfdb73c166285bd4b3dab3f0d7/src%2Ftest%2Fui%2Flint%2Fissue-74883-unused-paren-baren-yield.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Fissue-74883-unused-paren-baren-yield.stderr?ref=4eb9253660d384cfdb73c166285bd4b3dab3f0d7", "patch": "@@ -34,29 +34,17 @@ error: unnecessary parentheses around block return value\n LL |         {( yield )};\n    |          ^^^^^^^^^ help: remove these parentheses\n \n-error: unnecessary braces around `let` scrutinee expression\n-  --> $DIR/issue-74883-unused-paren-baren-yield.rs:21:29\n-   |\n-LL |         while let Some(_) = {(yield)} {}\n-   |                             ^^^^^^^^^ help: remove these braces\n-\n error: unnecessary parentheses around block return value\n-  --> $DIR/issue-74883-unused-paren-baren-yield.rs:21:30\n+  --> $DIR/issue-74883-unused-paren-baren-yield.rs:18:30\n    |\n LL |         while let Some(_) = {(yield)} {}\n    |                              ^^^^^^^ help: remove these parentheses\n \n-error: unnecessary braces around `let` scrutinee expression\n-  --> $DIR/issue-74883-unused-paren-baren-yield.rs:24:29\n-   |\n-LL |         while let Some(_) = {{yield}} {}\n-   |                             ^^^^^^^^^ help: remove these braces\n-\n error: unnecessary braces around block return value\n-  --> $DIR/issue-74883-unused-paren-baren-yield.rs:24:30\n+  --> $DIR/issue-74883-unused-paren-baren-yield.rs:19:30\n    |\n LL |         while let Some(_) = {{yield}} {}\n    |                              ^^^^^^^ help: remove these braces\n \n-error: aborting due to 8 previous errors\n+error: aborting due to 6 previous errors\n "}, {"sha": "ac547293c583a4bc67d6865deb6f9e5c6fbc6e4e", "filename": "src/test/ui/lint/unused-braces-while-let-with-mutable-value.rs", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/4eb9253660d384cfdb73c166285bd4b3dab3f0d7/src%2Ftest%2Fui%2Flint%2Funused-braces-while-let-with-mutable-value.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4eb9253660d384cfdb73c166285bd4b3dab3f0d7/src%2Ftest%2Fui%2Flint%2Funused-braces-while-let-with-mutable-value.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Funused-braces-while-let-with-mutable-value.rs?ref=4eb9253660d384cfdb73c166285bd4b3dab3f0d7", "patch": "@@ -0,0 +1,12 @@\n+// check-pass\n+\n+#![deny(unused_braces)]\n+\n+fn main() {\n+    let mut a = Some(3);\n+    // Shouldn't warn below `a`.\n+    while let Some(ref mut v) = {a} {\n+        a.as_mut().map(|a| std::mem::swap(a, v));\n+        break;\n+    }\n+}"}]}