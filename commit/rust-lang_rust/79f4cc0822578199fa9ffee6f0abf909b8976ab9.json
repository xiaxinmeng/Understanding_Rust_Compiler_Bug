{"sha": "79f4cc0822578199fa9ffee6f0abf909b8976ab9", "node_id": "C_kwDOAAsO6NoAKDc5ZjRjYzA4MjI1NzgxOTlmYTlmZmVlNmYwYWJmOTA5Yjg5NzZhYjk", "commit": {"author": {"name": "bjorn3", "email": "17426603+bjorn3@users.noreply.github.com", "date": "2023-01-31T17:49:08Z"}, "committer": {"name": "bjorn3", "email": "17426603+bjorn3@users.noreply.github.com", "date": "2023-01-31T18:14:54Z"}, "message": "Run y.rs bench in CI", "tree": {"sha": "c35953faff74f65034c8739a8920028aa8539055", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c35953faff74f65034c8739a8920028aa8539055"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/79f4cc0822578199fa9ffee6f0abf909b8976ab9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/79f4cc0822578199fa9ffee6f0abf909b8976ab9", "html_url": "https://github.com/rust-lang/rust/commit/79f4cc0822578199fa9ffee6f0abf909b8976ab9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/79f4cc0822578199fa9ffee6f0abf909b8976ab9/comments", "author": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d1024b6560c0b75b1347841d7ccb0dc36e0dffdd", "url": "https://api.github.com/repos/rust-lang/rust/commits/d1024b6560c0b75b1347841d7ccb0dc36e0dffdd", "html_url": "https://github.com/rust-lang/rust/commit/d1024b6560c0b75b1347841d7ccb0dc36e0dffdd"}], "stats": {"total": 53, "additions": 46, "deletions": 7}, "files": [{"sha": "6e35d1e1dc26037269d308c8acbb608bd168d0df", "filename": ".github/workflows/main.yml", "status": "modified", "additions": 42, "deletions": 0, "changes": 42, "blob_url": "https://github.com/rust-lang/rust/blob/79f4cc0822578199fa9ffee6f0abf909b8976ab9/.github%2Fworkflows%2Fmain.yml", "raw_url": "https://github.com/rust-lang/rust/raw/79f4cc0822578199fa9ffee6f0abf909b8976ab9/.github%2Fworkflows%2Fmain.yml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/.github%2Fworkflows%2Fmain.yml?ref=79f4cc0822578199fa9ffee6f0abf909b8976ab9", "patch": "@@ -185,3 +185,45 @@ jobs:\n       env:\n         TARGET_TRIPLE: ${{ matrix.env.TARGET_TRIPLE }}\n       run: ./y.rs abi-cafe\n+\n+  bench:\n+    runs-on: ubuntu-latest\n+    timeout-minutes: 60\n+\n+    defaults:\n+      run:\n+        shell: bash\n+\n+    steps:\n+    - uses: actions/checkout@v3\n+\n+    - name: Cache cargo target dir\n+      uses: actions/cache@v3\n+      with:\n+        path: build/cg_clif\n+        key: ${{ runner.os }}-x86_64-unknown-linux-gnu-cargo-build-target-${{ hashFiles('rust-toolchain', '**/Cargo.lock') }}\n+\n+    - name: Cache cargo bin dir\n+      uses: actions/cache@v3\n+      with:\n+        path: ~/.cargo/bin\n+        key: ${{ runner.os }}-${{ matrix.env.TARGET_TRIPLE }}-cargo-bin-dir-${{ hashFiles('rust-toolchain', '**/Cargo.lock') }}\n+\n+    - name: Use sparse cargo registry\n+      run: |\n+        cat >> ~/.cargo/config.toml <<EOF\n+        [unstable]\n+        sparse-registry = true\n+        EOF\n+\n+    - name: Install hyperfine\n+      run: cargo install hyperfine\n+\n+    - name: Prepare dependencies\n+      run: ./y.rs prepare\n+\n+    - name: Build\n+      run: ./y.rs build --sysroot none\n+\n+    - name: Benchmark\n+      run: ./y.rs bench"}, {"sha": "a9a851d0a8afc882e0c24cc7f60c8259c0905fbf", "filename": "build_system/bench.rs", "status": "modified", "additions": 4, "deletions": 7, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/79f4cc0822578199fa9ffee6f0abf909b8976ab9/build_system%2Fbench.rs", "raw_url": "https://github.com/rust-lang/rust/raw/79f4cc0822578199fa9ffee6f0abf909b8976ab9/build_system%2Fbench.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/build_system%2Fbench.rs?ref=79f4cc0822578199fa9ffee6f0abf909b8976ab9", "patch": "@@ -5,7 +5,7 @@ use std::path::Path;\n use super::path::{Dirs, RelPath};\n use super::prepare::GitRepo;\n use super::rustc_info::get_file_name;\n-use super::utils::{hyperfine_command, is_ci, spawn_and_wait, CargoProject, Compiler};\n+use super::utils::{hyperfine_command, spawn_and_wait, CargoProject, Compiler};\n \n static SIMPLE_RAYTRACER_REPO: GitRepo = GitRepo::github(\n     \"ebobby\",\n@@ -54,10 +54,7 @@ fn benchmark_simple_raytracer(dirs: &Dirs, bootstrap_host_compiler: &Compiler) {\n     )\n     .unwrap();\n \n-    let run_runs = env::var(\"RUN_RUNS\")\n-        .unwrap_or(if is_ci() { \"2\" } else { \"10\" }.to_string())\n-        .parse()\n-        .unwrap();\n+    let bench_runs = env::var(\"BENCH_RUNS\").unwrap_or_else(|_| \"10\".to_string()).parse().unwrap();\n \n     eprintln!(\"[BENCH COMPILE] ebobby/simple-raytracer\");\n     let cargo_clif =\n@@ -83,7 +80,7 @@ fn benchmark_simple_raytracer(dirs: &Dirs, bootstrap_host_compiler: &Compiler) {\n     );\n \n     let bench_compile =\n-        hyperfine_command(1, run_runs, Some(&clean_cmd), &llvm_build_cmd, &clif_build_cmd);\n+        hyperfine_command(1, bench_runs, Some(&clean_cmd), &llvm_build_cmd, &clif_build_cmd);\n \n     spawn_and_wait(bench_compile);\n \n@@ -96,7 +93,7 @@ fn benchmark_simple_raytracer(dirs: &Dirs, bootstrap_host_compiler: &Compiler) {\n \n     let mut bench_run = hyperfine_command(\n         0,\n-        run_runs,\n+        bench_runs,\n         None,\n         Path::new(\".\").join(get_file_name(\"raytracer_cg_llvm\", \"bin\")).to_str().unwrap(),\n         Path::new(\".\").join(get_file_name(\"raytracer_cg_clif\", \"bin\")).to_str().unwrap(),"}]}