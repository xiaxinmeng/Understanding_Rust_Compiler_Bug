{"sha": "313aa5f3a2a9237c96c97c5852da39cf83bcb1ae", "node_id": "MDY6Q29tbWl0NzI0NzEyOjMxM2FhNWYzYTJhOTIzN2M5NmM5N2M1ODUyZGEzOWNmODNiY2IxYWU=", "commit": {"author": {"name": "Vladyslav Katasonov", "email": "cpud47@gmail.com", "date": "2021-02-03T14:47:21Z"}, "committer": {"name": "Vladyslav Katasonov", "email": "cpud47@gmail.com", "date": "2021-02-03T14:47:21Z"}, "message": "change TODO to FIXME", "tree": {"sha": "8f3d2960940612c4a68116b5983192dc9f9771f2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8f3d2960940612c4a68116b5983192dc9f9771f2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/313aa5f3a2a9237c96c97c5852da39cf83bcb1ae", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/313aa5f3a2a9237c96c97c5852da39cf83bcb1ae", "html_url": "https://github.com/rust-lang/rust/commit/313aa5f3a2a9237c96c97c5852da39cf83bcb1ae", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/313aa5f3a2a9237c96c97c5852da39cf83bcb1ae/comments", "author": {"login": "cpud36", "id": 4218373, "node_id": "MDQ6VXNlcjQyMTgzNzM=", "avatar_url": "https://avatars.githubusercontent.com/u/4218373?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cpud36", "html_url": "https://github.com/cpud36", "followers_url": "https://api.github.com/users/cpud36/followers", "following_url": "https://api.github.com/users/cpud36/following{/other_user}", "gists_url": "https://api.github.com/users/cpud36/gists{/gist_id}", "starred_url": "https://api.github.com/users/cpud36/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cpud36/subscriptions", "organizations_url": "https://api.github.com/users/cpud36/orgs", "repos_url": "https://api.github.com/users/cpud36/repos", "events_url": "https://api.github.com/users/cpud36/events{/privacy}", "received_events_url": "https://api.github.com/users/cpud36/received_events", "type": "User", "site_admin": false}, "committer": {"login": "cpud36", "id": 4218373, "node_id": "MDQ6VXNlcjQyMTgzNzM=", "avatar_url": "https://avatars.githubusercontent.com/u/4218373?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cpud36", "html_url": "https://github.com/cpud36", "followers_url": "https://api.github.com/users/cpud36/followers", "following_url": "https://api.github.com/users/cpud36/following{/other_user}", "gists_url": "https://api.github.com/users/cpud36/gists{/gist_id}", "starred_url": "https://api.github.com/users/cpud36/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cpud36/subscriptions", "organizations_url": "https://api.github.com/users/cpud36/orgs", "repos_url": "https://api.github.com/users/cpud36/repos", "events_url": "https://api.github.com/users/cpud36/events{/privacy}", "received_events_url": "https://api.github.com/users/cpud36/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f0d2bb9131fab4898221d30caf0b5a12800ba4e8", "url": "https://api.github.com/repos/rust-lang/rust/commits/f0d2bb9131fab4898221d30caf0b5a12800ba4e8", "html_url": "https://github.com/rust-lang/rust/commit/f0d2bb9131fab4898221d30caf0b5a12800ba4e8"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "958199e5e1656d89944f7cb5cceb25f81bcdefbe", "filename": "crates/assists/src/handlers/extract_function.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/313aa5f3a2a9237c96c97c5852da39cf83bcb1ae/crates%2Fassists%2Fsrc%2Fhandlers%2Fextract_function.rs", "raw_url": "https://github.com/rust-lang/rust/raw/313aa5f3a2a9237c96c97c5852da39cf83bcb1ae/crates%2Fassists%2Fsrc%2Fhandlers%2Fextract_function.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fassists%2Fsrc%2Fhandlers%2Fextract_function.rs?ref=313aa5f3a2a9237c96c97c5852da39cf83bcb1ae", "patch": "@@ -125,8 +125,8 @@ pub(crate) fn extract_function(acc: &mut Assists, ctx: &AssistContext) -> Option\n     let expr = body.tail_expr();\n     let ret_ty = match expr {\n         Some(expr) => {\n-            // TODO: can we do assist when type is unknown?\n-            //       We can insert something like `-> ()`\n+            // FIXME: can we do assist when type is unknown?\n+            //        We can insert something like `-> ()`\n             let ty = ctx.sema.type_of_expr(&expr)?;\n             Some(ty.display_source_code(ctx.db(), module.into()).ok()?)\n         }"}]}