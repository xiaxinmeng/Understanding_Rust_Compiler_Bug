{"sha": "846c9b81706ca6f9a7f2bfe3e74c79690836be55", "node_id": "C_kwDOAAsO6NoAKDg0NmM5YjgxNzA2Y2E2ZjlhN2YyYmZlM2U3NGM3OTY5MDgzNmJlNTU", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-11-30T19:40:22Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-11-30T19:40:22Z"}, "message": "Auto merge of #9996 - Jarcho:issue_9906, r=Alexendoo\n\nFix `unnecessary_cast` suggestion when taking a reference\n\nfixes #9906\nchangelog: `unnecessary_cast`: Fix suggestion when taking a reference", "tree": {"sha": "bb102f84e35fa9b203f72a2b72a340242b18cfc2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bb102f84e35fa9b203f72a2b72a340242b18cfc2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/846c9b81706ca6f9a7f2bfe3e74c79690836be55", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/846c9b81706ca6f9a7f2bfe3e74c79690836be55", "html_url": "https://github.com/rust-lang/rust/commit/846c9b81706ca6f9a7f2bfe3e74c79690836be55", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/846c9b81706ca6f9a7f2bfe3e74c79690836be55/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d7d098a7e63a09ff0f14db44e9dfadec30d70d97", "url": "https://api.github.com/repos/rust-lang/rust/commits/d7d098a7e63a09ff0f14db44e9dfadec30d70d97", "html_url": "https://github.com/rust-lang/rust/commit/d7d098a7e63a09ff0f14db44e9dfadec30d70d97"}, {"sha": "73f4546d24bc00f032d3761fa966f9f5927a8f76", "url": "https://api.github.com/repos/rust-lang/rust/commits/73f4546d24bc00f032d3761fa966f9f5927a8f76", "html_url": "https://github.com/rust-lang/rust/commit/73f4546d24bc00f032d3761fa966f9f5927a8f76"}], "stats": {"total": 30, "additions": 23, "deletions": 7}, "files": [{"sha": "7e23318076cf2e8b9aa6ec5247b39d2268c3ca38", "filename": "clippy_lints/src/casts/unnecessary_cast.rs", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/846c9b81706ca6f9a7f2bfe3e74c79690836be55/clippy_lints%2Fsrc%2Fcasts%2Funnecessary_cast.rs", "raw_url": "https://github.com/rust-lang/rust/raw/846c9b81706ca6f9a7f2bfe3e74c79690836be55/clippy_lints%2Fsrc%2Fcasts%2Funnecessary_cast.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fcasts%2Funnecessary_cast.rs?ref=846c9b81706ca6f9a7f2bfe3e74c79690836be55", "patch": "@@ -90,7 +90,11 @@ pub(super) fn check<'tcx>(\n             expr.span,\n             &format!(\"casting to the same type is unnecessary (`{cast_from}` -> `{cast_to}`)\"),\n             \"try\",\n-            cast_str,\n+            if get_parent_expr(cx, expr).map_or(false, |e| matches!(e.kind, ExprKind::AddrOf(..))) {\n+                format!(\"{{ {cast_str} }}\")\n+            } else {\n+                cast_str\n+            },\n             Applicability::MachineApplicable,\n         );\n         return true;"}, {"sha": "2f7e2997e739d50ec990455b60cbf898820ad2bf", "filename": "tests/ui/unnecessary_cast.fixed", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/846c9b81706ca6f9a7f2bfe3e74c79690836be55/tests%2Fui%2Funnecessary_cast.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/846c9b81706ca6f9a7f2bfe3e74c79690836be55/tests%2Fui%2Funnecessary_cast.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Funnecessary_cast.fixed?ref=846c9b81706ca6f9a7f2bfe3e74c79690836be55", "patch": "@@ -96,6 +96,9 @@ mod fixable {\n \n         let _ = 1 as I32Alias;\n         let _ = &1 as &I32Alias;\n+\n+        let x = 1i32;\n+        let _ = &{ x };\n     }\n \n     type I32Alias = i32;"}, {"sha": "54dd46ba59f104a1172d14c9363b09b08ad79627", "filename": "tests/ui/unnecessary_cast.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/846c9b81706ca6f9a7f2bfe3e74c79690836be55/tests%2Fui%2Funnecessary_cast.rs", "raw_url": "https://github.com/rust-lang/rust/raw/846c9b81706ca6f9a7f2bfe3e74c79690836be55/tests%2Fui%2Funnecessary_cast.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Funnecessary_cast.rs?ref=846c9b81706ca6f9a7f2bfe3e74c79690836be55", "patch": "@@ -96,6 +96,9 @@ mod fixable {\n \n         let _ = 1 as I32Alias;\n         let _ = &1 as &I32Alias;\n+\n+        let x = 1i32;\n+        let _ = &(x as i32);\n     }\n \n     type I32Alias = i32;"}, {"sha": "fcee4ee2a65cc9fa267c65354382292421c3ede8", "filename": "tests/ui/unnecessary_cast.stderr", "status": "modified", "additions": 12, "deletions": 6, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/846c9b81706ca6f9a7f2bfe3e74c79690836be55/tests%2Fui%2Funnecessary_cast.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/846c9b81706ca6f9a7f2bfe3e74c79690836be55/tests%2Fui%2Funnecessary_cast.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Funnecessary_cast.stderr?ref=846c9b81706ca6f9a7f2bfe3e74c79690836be55", "patch": "@@ -150,35 +150,41 @@ error: casting float literal to `f32` is unnecessary\n LL |         let _ = -1.0 as f32;\n    |                 ^^^^^^^^^^^ help: try: `-1.0_f32`\n \n+error: casting to the same type is unnecessary (`i32` -> `i32`)\n+  --> $DIR/unnecessary_cast.rs:101:18\n+   |\n+LL |         let _ = &(x as i32);\n+   |                  ^^^^^^^^^^ help: try: `{ x }`\n+\n error: casting integer literal to `i32` is unnecessary\n-  --> $DIR/unnecessary_cast.rs:104:22\n+  --> $DIR/unnecessary_cast.rs:107:22\n    |\n LL |         let _: i32 = -(1) as i32;\n    |                      ^^^^^^^^^^^ help: try: `-1_i32`\n \n error: casting integer literal to `i64` is unnecessary\n-  --> $DIR/unnecessary_cast.rs:106:22\n+  --> $DIR/unnecessary_cast.rs:109:22\n    |\n LL |         let _: i64 = -(1) as i64;\n    |                      ^^^^^^^^^^^ help: try: `-1_i64`\n \n error: casting float literal to `f64` is unnecessary\n-  --> $DIR/unnecessary_cast.rs:113:22\n+  --> $DIR/unnecessary_cast.rs:116:22\n    |\n LL |         let _: f64 = (-8.0 as f64).exp();\n    |                      ^^^^^^^^^^^^^ help: try: `(-8.0_f64)`\n \n error: casting float literal to `f64` is unnecessary\n-  --> $DIR/unnecessary_cast.rs:115:23\n+  --> $DIR/unnecessary_cast.rs:118:23\n    |\n LL |         let _: f64 = -(8.0 as f64).exp(); // should suggest `-8.0_f64.exp()` here not to change code behavior\n    |                       ^^^^^^^^^^^^ help: try: `8.0_f64`\n \n error: casting to the same type is unnecessary (`f32` -> `f32`)\n-  --> $DIR/unnecessary_cast.rs:123:20\n+  --> $DIR/unnecessary_cast.rs:126:20\n    |\n LL |         let _num = foo() as f32;\n    |                    ^^^^^^^^^^^^ help: try: `foo()`\n \n-error: aborting due to 30 previous errors\n+error: aborting due to 31 previous errors\n "}]}