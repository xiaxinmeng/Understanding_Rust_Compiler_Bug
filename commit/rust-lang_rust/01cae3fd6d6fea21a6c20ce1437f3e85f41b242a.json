{"sha": "01cae3fd6d6fea21a6c20ce1437f3e85f41b242a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjAxY2FlM2ZkNmQ2ZmVhMjFhNmMyMGNlMTQzN2YzZTg1ZjQxYjI0MmE=", "commit": {"author": {"name": "mcarton", "email": "cartonmartin+git@gmail.com", "date": "2017-06-05T19:49:26Z"}, "committer": {"name": "mcarton", "email": "cartonmartin+git@gmail.com", "date": "2017-06-05T19:49:26Z"}, "message": "Rustup to *rustc 1.19.0-nightly (0418fa9d3 2017-06-04)*", "tree": {"sha": "88546bfce845b1a993920b8ad04c2d08dab470e7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/88546bfce845b1a993920b8ad04c2d08dab470e7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/01cae3fd6d6fea21a6c20ce1437f3e85f41b242a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/01cae3fd6d6fea21a6c20ce1437f3e85f41b242a", "html_url": "https://github.com/rust-lang/rust/commit/01cae3fd6d6fea21a6c20ce1437f3e85f41b242a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/01cae3fd6d6fea21a6c20ce1437f3e85f41b242a/comments", "author": {"login": "mcarton", "id": 3751788, "node_id": "MDQ6VXNlcjM3NTE3ODg=", "avatar_url": "https://avatars.githubusercontent.com/u/3751788?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mcarton", "html_url": "https://github.com/mcarton", "followers_url": "https://api.github.com/users/mcarton/followers", "following_url": "https://api.github.com/users/mcarton/following{/other_user}", "gists_url": "https://api.github.com/users/mcarton/gists{/gist_id}", "starred_url": "https://api.github.com/users/mcarton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mcarton/subscriptions", "organizations_url": "https://api.github.com/users/mcarton/orgs", "repos_url": "https://api.github.com/users/mcarton/repos", "events_url": "https://api.github.com/users/mcarton/events{/privacy}", "received_events_url": "https://api.github.com/users/mcarton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "mcarton", "id": 3751788, "node_id": "MDQ6VXNlcjM3NTE3ODg=", "avatar_url": "https://avatars.githubusercontent.com/u/3751788?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mcarton", "html_url": "https://github.com/mcarton", "followers_url": "https://api.github.com/users/mcarton/followers", "following_url": "https://api.github.com/users/mcarton/following{/other_user}", "gists_url": "https://api.github.com/users/mcarton/gists{/gist_id}", "starred_url": "https://api.github.com/users/mcarton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mcarton/subscriptions", "organizations_url": "https://api.github.com/users/mcarton/orgs", "repos_url": "https://api.github.com/users/mcarton/repos", "events_url": "https://api.github.com/users/mcarton/events{/privacy}", "received_events_url": "https://api.github.com/users/mcarton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5a6e48fd27ddbe6a6106c49e0deea4fd77b0190e", "url": "https://api.github.com/repos/rust-lang/rust/commits/5a6e48fd27ddbe6a6106c49e0deea4fd77b0190e", "html_url": "https://github.com/rust-lang/rust/commit/5a6e48fd27ddbe6a6106c49e0deea4fd77b0190e"}], "stats": {"total": 15, "additions": 6, "deletions": 9}, "files": [{"sha": "5113f1224fe2cfafa0e7122aa2055741068735a1", "filename": "clippy_lints/src/utils/higher.rs", "status": "modified", "additions": 6, "deletions": 9, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/01cae3fd6d6fea21a6c20ce1437f3e85f41b242a/clippy_lints%2Fsrc%2Futils%2Fhigher.rs", "raw_url": "https://github.com/rust-lang/rust/raw/01cae3fd6d6fea21a6c20ce1437f3e85f41b242a/clippy_lints%2Fsrc%2Futils%2Fhigher.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Futils%2Fhigher.rs?ref=01cae3fd6d6fea21a6c20ce1437f3e85f41b242a", "patch": "@@ -129,16 +129,13 @@ pub fn for_loop(expr: &hir::Expr) -> Option<(&hir::Pat, &hir::Expr, &hir::Expr)>\n         let hir::ExprCall(_, ref iterargs) = iterexpr.node,\n         iterargs.len() == 1 && arms.len() == 1 && arms[0].guard.is_none(),\n         let hir::ExprLoop(ref block, _, _) = arms[0].body.node,\n-        block.stmts.is_empty(),\n-        let Some(ref loopexpr) = block.expr,\n-        let hir::ExprMatch(_, ref innerarms, hir::MatchSource::ForLoopDesugar) = loopexpr.node,\n-        innerarms.len() == 2 && innerarms[0].pats.len() == 1,\n-        let hir::PatKind::TupleStruct(_, ref somepats, _) = innerarms[0].pats[0].node,\n-        somepats.len() == 1\n+        block.expr.is_none(),\n+        let [ ref let_stmt, ref body ] = *block.stmts,\n+        let hir::StmtDecl(ref decl, _) = let_stmt.node,\n+        let hir::DeclLocal(ref decl) = decl.node,\n+        let hir::StmtExpr(ref expr, _) = body.node,\n     ], {\n-        return Some((&somepats[0],\n-                     &iterargs[0],\n-                     &innerarms[0].body));\n+        return Some((&*decl.pat, &iterargs[0], expr));\n     }}\n     None\n }"}]}