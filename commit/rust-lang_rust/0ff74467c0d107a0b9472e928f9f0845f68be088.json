{"sha": "0ff74467c0d107a0b9472e928f9f0845f68be088", "node_id": "MDY6Q29tbWl0NzI0NzEyOjBmZjc0NDY3YzBkMTA3YTBiOTQ3MmU5MjhmOWYwODQ1ZjY4YmUwODg=", "commit": {"author": {"name": "Vladyslav Katasonov", "email": "cpud47@gmail.com", "date": "2021-02-04T22:18:45Z"}, "committer": {"name": "Vladyslav Katasonov", "email": "cpud47@gmail.com", "date": "2021-02-04T22:41:40Z"}, "message": "use `&T` for non copy params of extracted function\n\nUse shared ref if param is not `T: Copy` and is used after body", "tree": {"sha": "f44778c3e38e4520b34a4431853d974c909f8704", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f44778c3e38e4520b34a4431853d974c909f8704"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0ff74467c0d107a0b9472e928f9f0845f68be088", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0ff74467c0d107a0b9472e928f9f0845f68be088", "html_url": "https://github.com/rust-lang/rust/commit/0ff74467c0d107a0b9472e928f9f0845f68be088", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0ff74467c0d107a0b9472e928f9f0845f68be088/comments", "author": {"login": "cpud36", "id": 4218373, "node_id": "MDQ6VXNlcjQyMTgzNzM=", "avatar_url": "https://avatars.githubusercontent.com/u/4218373?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cpud36", "html_url": "https://github.com/cpud36", "followers_url": "https://api.github.com/users/cpud36/followers", "following_url": "https://api.github.com/users/cpud36/following{/other_user}", "gists_url": "https://api.github.com/users/cpud36/gists{/gist_id}", "starred_url": "https://api.github.com/users/cpud36/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cpud36/subscriptions", "organizations_url": "https://api.github.com/users/cpud36/orgs", "repos_url": "https://api.github.com/users/cpud36/repos", "events_url": "https://api.github.com/users/cpud36/events{/privacy}", "received_events_url": "https://api.github.com/users/cpud36/received_events", "type": "User", "site_admin": false}, "committer": {"login": "cpud36", "id": 4218373, "node_id": "MDQ6VXNlcjQyMTgzNzM=", "avatar_url": "https://avatars.githubusercontent.com/u/4218373?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cpud36", "html_url": "https://github.com/cpud36", "followers_url": "https://api.github.com/users/cpud36/followers", "following_url": "https://api.github.com/users/cpud36/following{/other_user}", "gists_url": "https://api.github.com/users/cpud36/gists{/gist_id}", "starred_url": "https://api.github.com/users/cpud36/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cpud36/subscriptions", "organizations_url": "https://api.github.com/users/cpud36/orgs", "repos_url": "https://api.github.com/users/cpud36/repos", "events_url": "https://api.github.com/users/cpud36/events{/privacy}", "received_events_url": "https://api.github.com/users/cpud36/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d9b122858b8a454c23dbeab0971571ce0b38aeec", "url": "https://api.github.com/repos/rust-lang/rust/commits/d9b122858b8a454c23dbeab0971571ce0b38aeec", "html_url": "https://github.com/rust-lang/rust/commit/d9b122858b8a454c23dbeab0971571ce0b38aeec"}], "stats": {"total": 57, "additions": 55, "deletions": 2}, "files": [{"sha": "ac2a5a674053ed6933600a5ed7cfb9fcb5c48f8e", "filename": "crates/assists/src/handlers/extract_function.rs", "status": "modified", "additions": 55, "deletions": 2, "changes": 57, "blob_url": "https://github.com/rust-lang/rust/blob/0ff74467c0d107a0b9472e928f9f0845f68be088/crates%2Fassists%2Fsrc%2Fhandlers%2Fextract_function.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0ff74467c0d107a0b9472e928f9f0845f68be088/crates%2Fassists%2Fsrc%2Fhandlers%2Fextract_function.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fassists%2Fsrc%2Fhandlers%2Fextract_function.rs?ref=0ff74467c0d107a0b9472e928f9f0845f68be088", "patch": "@@ -124,6 +124,7 @@ struct Function {\n #[derive(Debug)]\n struct Param {\n     var: Local,\n+    ty: hir::Type,\n     has_usages_afterwards: bool,\n     has_mut_inside_body: bool,\n     is_copy: bool,\n@@ -437,11 +438,14 @@ fn extracted_function_params(\n         })\n         .map(|var| {\n             let usages = LocalUsages::find(ctx, var);\n+            let ty = var.ty(ctx.db());\n+            let is_copy = ty.is_copy(ctx.db());\n             Param {\n                 var,\n+                ty,\n                 has_usages_afterwards: has_usages_after_body(&usages, body),\n                 has_mut_inside_body: has_exclusive_usages(ctx, &usages, body),\n-                is_copy: true,\n+                is_copy,\n             }\n         })\n         .collect()\n@@ -719,7 +723,7 @@ fn format_param_to(fn_def: &mut String, ctx: &AssistContext, module: hir::Module\n         param.mut_pattern(),\n         param.var.name(ctx.db()).unwrap(),\n         param.type_prefix(),\n-        format_type(&param.var.ty(ctx.db()), ctx, module)\n+        format_type(&param.ty, ctx, module)\n     );\n }\n \n@@ -1723,6 +1727,55 @@ fn foo() {\n fn $0fun_name(n: i32) {\n     let mut m = 2;\n     m.inc(n);\n+}\",\n+        );\n+    }\n+\n+    #[test]\n+    fn non_copy_without_usages_after() {\n+        check_assist(\n+            extract_function,\n+            r\"\n+struct Counter(i32);\n+fn foo() {\n+    let c = Counter(0);\n+    $0let n = c.0;$0\n+}\",\n+            r\"\n+struct Counter(i32);\n+fn foo() {\n+    let c = Counter(0);\n+    fun_name(c);\n+}\n+\n+fn $0fun_name(c: Counter) {\n+    let n = c.0;\n+}\",\n+        );\n+    }\n+\n+\n+    #[test]\n+    fn non_copy_used_after() {\n+        check_assist(\n+            extract_function,\n+            r\"\n+struct Counter(i32);\n+fn foo() {\n+    let c = Counter(0);\n+    $0let n = c.0;$0\n+    let m = c.0;\n+}\",\n+            r\"\n+struct Counter(i32);\n+fn foo() {\n+    let c = Counter(0);\n+    fun_name(&c);\n+    let m = c.0;\n+}\n+\n+fn $0fun_name(c: &Counter) {\n+    let n = *c.0;\n }\",\n         );\n     }"}]}