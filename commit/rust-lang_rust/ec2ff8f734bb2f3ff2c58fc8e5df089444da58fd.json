{"sha": "ec2ff8f734bb2f3ff2c58fc8e5df089444da58fd", "node_id": "MDY6Q29tbWl0NzI0NzEyOmVjMmZmOGY3MzRiYjJmM2ZmMmM1OGZjOGU1ZGYwODk0NDRkYTU4ZmQ=", "commit": {"author": {"name": "Shotaro Yamada", "email": "sinkuu@sinkuu.xyz", "date": "2017-11-10T17:20:53Z"}, "committer": {"name": "Shotaro Yamada", "email": "sinkuu@sinkuu.xyz", "date": "2017-11-14T08:43:43Z"}, "message": "Add TyCtxt::is_closure", "tree": {"sha": "f3679953d8b1347327ce4fd9b7f001269fdfddec", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f3679953d8b1347327ce4fd9b7f001269fdfddec"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ec2ff8f734bb2f3ff2c58fc8e5df089444da58fd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ec2ff8f734bb2f3ff2c58fc8e5df089444da58fd", "html_url": "https://github.com/rust-lang/rust/commit/ec2ff8f734bb2f3ff2c58fc8e5df089444da58fd", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ec2ff8f734bb2f3ff2c58fc8e5df089444da58fd/comments", "author": {"login": "sinkuu", "id": 7091080, "node_id": "MDQ6VXNlcjcwOTEwODA=", "avatar_url": "https://avatars.githubusercontent.com/u/7091080?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sinkuu", "html_url": "https://github.com/sinkuu", "followers_url": "https://api.github.com/users/sinkuu/followers", "following_url": "https://api.github.com/users/sinkuu/following{/other_user}", "gists_url": "https://api.github.com/users/sinkuu/gists{/gist_id}", "starred_url": "https://api.github.com/users/sinkuu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sinkuu/subscriptions", "organizations_url": "https://api.github.com/users/sinkuu/orgs", "repos_url": "https://api.github.com/users/sinkuu/repos", "events_url": "https://api.github.com/users/sinkuu/events{/privacy}", "received_events_url": "https://api.github.com/users/sinkuu/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sinkuu", "id": 7091080, "node_id": "MDQ6VXNlcjcwOTEwODA=", "avatar_url": "https://avatars.githubusercontent.com/u/7091080?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sinkuu", "html_url": "https://github.com/sinkuu", "followers_url": "https://api.github.com/users/sinkuu/followers", "following_url": "https://api.github.com/users/sinkuu/following{/other_user}", "gists_url": "https://api.github.com/users/sinkuu/gists{/gist_id}", "starred_url": "https://api.github.com/users/sinkuu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sinkuu/subscriptions", "organizations_url": "https://api.github.com/users/sinkuu/orgs", "repos_url": "https://api.github.com/users/sinkuu/repos", "events_url": "https://api.github.com/users/sinkuu/events{/privacy}", "received_events_url": "https://api.github.com/users/sinkuu/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c3ec1758571fdf75a4970f9f130b3b83d451ff62", "url": "https://api.github.com/repos/rust-lang/rust/commits/c3ec1758571fdf75a4970f9f130b3b83d451ff62", "html_url": "https://github.com/rust-lang/rust/commit/c3ec1758571fdf75a4970f9f130b3b83d451ff62"}], "stats": {"total": 20, "additions": 11, "deletions": 9}, "files": [{"sha": "a0219f2f95b8453c62c7b0f37c39ca8dafe6434b", "filename": "src/librustc/ty/util.rs", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/ec2ff8f734bb2f3ff2c58fc8e5df089444da58fd/src%2Flibrustc%2Fty%2Futil.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ec2ff8f734bb2f3ff2c58fc8e5df089444da58fd/src%2Flibrustc%2Fty%2Futil.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Futil.rs?ref=ec2ff8f734bb2f3ff2c58fc8e5df089444da58fd", "patch": "@@ -621,9 +621,13 @@ impl<'a, 'gcx, 'tcx> TyCtxt<'a, 'gcx, 'tcx> {\n         result\n     }\n \n+    pub fn is_closure(self, def_id: DefId) -> bool {\n+        self.def_key(def_id).disambiguated_data.data == DefPathData::ClosureExpr\n+    }\n+\n     pub fn closure_base_def_id(self, def_id: DefId) -> DefId {\n         let mut def_id = def_id;\n-        while self.def_key(def_id).disambiguated_data.data == DefPathData::ClosureExpr {\n+        while self.is_closure(def_id) {\n             def_id = self.parent_def_id(def_id).unwrap_or_else(|| {\n                 bug!(\"closure {:?} has no parent\", def_id);\n             });"}, {"sha": "302e65a0e34d0e0de77f725390a45d4f121da660", "filename": "src/librustc_mir/transform/check_unsafety.rs", "status": "modified", "additions": 5, "deletions": 6, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/ec2ff8f734bb2f3ff2c58fc8e5df089444da58fd/src%2Flibrustc_mir%2Ftransform%2Fcheck_unsafety.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ec2ff8f734bb2f3ff2c58fc8e5df089444da58fd/src%2Flibrustc_mir%2Ftransform%2Fcheck_unsafety.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Ftransform%2Fcheck_unsafety.rs?ref=ec2ff8f734bb2f3ff2c58fc8e5df089444da58fd", "patch": "@@ -15,7 +15,6 @@ use rustc::ty::maps::Providers;\n use rustc::ty::{self, TyCtxt};\n use rustc::hir;\n use rustc::hir::def_id::DefId;\n-use rustc::hir::map::DefPathData;\n use rustc::lint::builtin::{SAFE_EXTERN_STATICS, UNUSED_UNSAFE};\n use rustc::mir::*;\n use rustc::mir::visit::{LvalueContext, Visitor};\n@@ -362,11 +361,11 @@ fn report_unused_unsafe(tcx: TyCtxt, used_unsafe: &FxHashSet<ast::NodeId>, id: a\n \n pub fn check_unsafety<'a, 'tcx>(tcx: TyCtxt<'a, 'tcx, 'tcx>, def_id: DefId) {\n     debug!(\"check_unsafety({:?})\", def_id);\n-    match tcx.def_key(def_id).disambiguated_data.data {\n-        // closures are handled by their parent fn.\n-        DefPathData::ClosureExpr => return,\n-        _ => {}\n-    };\n+\n+    // closures are handled by their parent fn.\n+    if tcx.is_closure(def_id) {\n+        return;\n+    }\n \n     let UnsafetyCheckResult {\n         violations,"}, {"sha": "b9e87fb9ec6e507de2541a79e76c266d865c84b6", "filename": "src/librustc_mir/transform/inline.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/ec2ff8f734bb2f3ff2c58fc8e5df089444da58fd/src%2Flibrustc_mir%2Ftransform%2Finline.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ec2ff8f734bb2f3ff2c58fc8e5df089444da58fd/src%2Flibrustc_mir%2Ftransform%2Finline.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Ftransform%2Finline.rs?ref=ec2ff8f734bb2f3ff2c58fc8e5df089444da58fd", "patch": "@@ -20,7 +20,6 @@ use rustc::mir::transform::{MirPass, MirSource};\n use rustc::mir::visit::*;\n use rustc::ty::{self, Instance, Ty, TyCtxt, TypeFoldable};\n use rustc::ty::subst::{Subst,Substs};\n-use rustc::hir::map::definitions::DefPathData;\n \n use std::collections::VecDeque;\n use super::simplify::{remove_dead_blocks, CfgSimplifier};\n@@ -561,7 +560,7 @@ impl<'a, 'tcx> Inliner<'a, 'tcx> {\n \n         // A closure is passed its self-type and a tuple like `(arg1, arg2, ...)`,\n         // hence mappings to tuple fields are needed.\n-        if tcx.def_key(callsite.callee).disambiguated_data.data == DefPathData::ClosureExpr {\n+        if tcx.is_closure(callsite.callee) {\n             let mut args = args.into_iter();\n             let self_ = self.create_temp_if_necessary(args.next().unwrap(), callsite, caller_mir);\n             let tuple = self.create_temp_if_necessary(args.next().unwrap(), callsite, caller_mir);"}]}