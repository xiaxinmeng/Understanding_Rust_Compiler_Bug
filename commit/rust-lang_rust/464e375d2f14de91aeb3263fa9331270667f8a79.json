{"sha": "464e375d2f14de91aeb3263fa9331270667f8a79", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ2NGUzNzVkMmYxNGRlOTFhZWIzMjYzZmE5MzMxMjcwNjY3ZjhhNzk=", "commit": {"author": {"name": "Brendan Zabarauskas", "email": "bjzaba@yahoo.com.au", "date": "2014-04-30T03:05:51Z"}, "committer": {"name": "Brendan Zabarauskas", "email": "bjzaba@yahoo.com.au", "date": "2014-04-30T17:01:14Z"}, "message": "Move bitflags module to libstd\n\nThis will allow us to provide type-safe APIs in libstd that are C-compatible.", "tree": {"sha": "4761d175c01202e73aac05525dd9dc06802e7996", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4761d175c01202e73aac05525dd9dc06802e7996"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/464e375d2f14de91aeb3263fa9331270667f8a79", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/464e375d2f14de91aeb3263fa9331270667f8a79", "html_url": "https://github.com/rust-lang/rust/commit/464e375d2f14de91aeb3263fa9331270667f8a79", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/464e375d2f14de91aeb3263fa9331270667f8a79/comments", "author": {"login": "brendanzab", "id": 695077, "node_id": "MDQ6VXNlcjY5NTA3Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/695077?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brendanzab", "html_url": "https://github.com/brendanzab", "followers_url": "https://api.github.com/users/brendanzab/followers", "following_url": "https://api.github.com/users/brendanzab/following{/other_user}", "gists_url": "https://api.github.com/users/brendanzab/gists{/gist_id}", "starred_url": "https://api.github.com/users/brendanzab/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brendanzab/subscriptions", "organizations_url": "https://api.github.com/users/brendanzab/orgs", "repos_url": "https://api.github.com/users/brendanzab/repos", "events_url": "https://api.github.com/users/brendanzab/events{/privacy}", "received_events_url": "https://api.github.com/users/brendanzab/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brendanzab", "id": 695077, "node_id": "MDQ6VXNlcjY5NTA3Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/695077?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brendanzab", "html_url": "https://github.com/brendanzab", "followers_url": "https://api.github.com/users/brendanzab/followers", "following_url": "https://api.github.com/users/brendanzab/following{/other_user}", "gists_url": "https://api.github.com/users/brendanzab/gists{/gist_id}", "starred_url": "https://api.github.com/users/brendanzab/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brendanzab/subscriptions", "organizations_url": "https://api.github.com/users/brendanzab/orgs", "repos_url": "https://api.github.com/users/brendanzab/repos", "events_url": "https://api.github.com/users/brendanzab/events{/privacy}", "received_events_url": "https://api.github.com/users/brendanzab/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "43320e584738113f1e5fb379fc34a1b38de10db5", "url": "https://api.github.com/repos/rust-lang/rust/commits/43320e584738113f1e5fb379fc34a1b38de10db5", "html_url": "https://github.com/rust-lang/rust/commit/43320e584738113f1e5fb379fc34a1b38de10db5"}], "stats": {"total": 12, "additions": 5, "deletions": 7}, "files": [{"sha": "2121e129c35235206944d3a99bd024cef4b52549", "filename": "src/libcollections/lib.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/464e375d2f14de91aeb3263fa9331270667f8a79/src%2Flibcollections%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/464e375d2f14de91aeb3263fa9331270667f8a79/src%2Flibcollections%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcollections%2Flib.rs?ref=464e375d2f14de91aeb3263fa9331270667f8a79", "patch": "@@ -42,7 +42,6 @@ pub use smallintmap::SmallIntMap;\n pub use treemap::{TreeMap, TreeSet};\n pub use trie::{TrieMap, TrieSet};\n \n-pub mod bitflags;\n pub mod bitv;\n pub mod btree;\n pub mod deque;"}, {"sha": "3caa5b5ab3cf8e850e4503c37bed4a59847b305d", "filename": "src/libstd/bitflags.rs", "status": "renamed", "additions": 2, "deletions": 6, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/464e375d2f14de91aeb3263fa9331270667f8a79/src%2Flibstd%2Fbitflags.rs", "raw_url": "https://github.com/rust-lang/rust/raw/464e375d2f14de91aeb3263fa9331270667f8a79/src%2Flibstd%2Fbitflags.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fbitflags.rs?ref=464e375d2f14de91aeb3263fa9331270667f8a79", "patch": "@@ -17,9 +17,6 @@\n //! # Example\n //!\n //! ~~~rust\n-//! #[feature(phase)];\n-//! #[phase(syntax)] extern crate collections;\n-//!\n //! bitflags!(Flags: u32 {\n //!     FlagA       = 0x00000001,\n //!     FlagB       = 0x00000010,\n@@ -41,9 +38,6 @@\n //! The generated `struct`s can also be extended with type and trait implementations:\n //!\n //! ~~~rust\n-//! #[feature(phase)];\n-//! #[phase(syntax)] extern crate collections;\n-//!\n //! use std::fmt;\n //!\n //! bitflags!(Flags: u32 {\n@@ -174,6 +168,8 @@ macro_rules! bitflags(\n \n #[cfg(test)]\n mod tests {\n+    use ops::{BitOr, BitAnd, Sub};\n+\n     bitflags!(Flags: u32 {\n         FlagA       = 0x00000001,\n         FlagB       = 0x00000010,", "previous_filename": "src/libcollections/bitflags.rs"}, {"sha": "c34ebfdf7c20b4901d91e4950f703a91afe3c901", "filename": "src/libstd/lib.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/464e375d2f14de91aeb3263fa9331270667f8a79/src%2Flibstd%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/464e375d2f14de91aeb3263fa9331270667f8a79/src%2Flibstd%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Flib.rs?ref=464e375d2f14de91aeb3263fa9331270667f8a79", "patch": "@@ -142,7 +142,10 @@ fn start(argc: int, argv: **u8) -> int {\n     green::start(argc, argv, rustuv::event_loop, __test::main)\n }\n \n+/* Exported macros */\n+\n pub mod macros;\n+pub mod bitflags;\n \n mod rtdeps;\n "}]}