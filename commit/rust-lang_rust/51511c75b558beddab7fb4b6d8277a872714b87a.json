{"sha": "51511c75b558beddab7fb4b6d8277a872714b87a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjUxNTExYzc1YjU1OGJlZGRhYjdmYjRiNmQ4Mjc3YTg3MjcxNGI4N2E=", "commit": {"author": {"name": "Dylan DPC", "email": "dylan.dpc@gmail.com", "date": "2021-02-23T15:10:30Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-02-23T15:10:30Z"}, "message": "Rollup merge of #82391 - RalfJung:miri-atomic-minmax, r=dtolnay\n\ndisable atomic_max/min tests in Miri\n\nDisable some tests that currently [fail in Miri](https://travis-ci.com/github/RalfJung/miri-test-libstd/builds/217788631).", "tree": {"sha": "5d2b5fbc26004bb75d2918bcd85669c3cc1901e7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5d2b5fbc26004bb75d2918bcd85669c3cc1901e7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/51511c75b558beddab7fb4b6d8277a872714b87a", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJgNRrmCRBK7hj4Ov3rIwAAdHIIAD/eQBLmW7ucAEwpGs9BNd3v\nce/P5GiglDvijX+t0uV3adP4k/wvz47vYYs21YM4B/5htXY2BU1kxBcn1BAnizl2\nHv4A3LzTeXwhkNrfHqOtuPI6dwt9Yg+mDFWkC9CjlXXNM5NhnDBpipm6gMlKmKEF\nIkNRzBkWu008UKdAjrTFOab0NRmnf8A0jBTxNC2ZXGX0OiOjihKE7FVLBE64Z7kC\n5Xae7E0MsTMZeK8wjW5jU4hMMgClxOHdyBMP/ZgMnkVW2eP+SHpyu10Md00+MK2m\nDMGOqbGoS+Rr2DvLu6RTT5zxk6oLYQmO0YP8p6jgG55UkWeh3n+LwPA8rKI0P2M=\n=ci1P\n-----END PGP SIGNATURE-----\n", "payload": "tree 5d2b5fbc26004bb75d2918bcd85669c3cc1901e7\nparent aa1405fff7f3856ab1e2cb2ea84d73c5a6017c28\nparent dd9ab160a14e8e7b9eee1802482db6a38fa78b80\nauthor Dylan DPC <dylan.dpc@gmail.com> 1614093030 +0100\ncommitter GitHub <noreply@github.com> 1614093030 +0100\n\nRollup merge of #82391 - RalfJung:miri-atomic-minmax, r=dtolnay\n\ndisable atomic_max/min tests in Miri\n\nDisable some tests that currently [fail in Miri](https://travis-ci.com/github/RalfJung/miri-test-libstd/builds/217788631).\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/51511c75b558beddab7fb4b6d8277a872714b87a", "html_url": "https://github.com/rust-lang/rust/commit/51511c75b558beddab7fb4b6d8277a872714b87a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/51511c75b558beddab7fb4b6d8277a872714b87a/comments", "author": {"login": "Dylan-DPC", "id": 99973273, "node_id": "U_kgDOBfV4mQ", "avatar_url": "https://avatars.githubusercontent.com/u/99973273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dylan-DPC", "html_url": "https://github.com/Dylan-DPC", "followers_url": "https://api.github.com/users/Dylan-DPC/followers", "following_url": "https://api.github.com/users/Dylan-DPC/following{/other_user}", "gists_url": "https://api.github.com/users/Dylan-DPC/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dylan-DPC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dylan-DPC/subscriptions", "organizations_url": "https://api.github.com/users/Dylan-DPC/orgs", "repos_url": "https://api.github.com/users/Dylan-DPC/repos", "events_url": "https://api.github.com/users/Dylan-DPC/events{/privacy}", "received_events_url": "https://api.github.com/users/Dylan-DPC/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "aa1405fff7f3856ab1e2cb2ea84d73c5a6017c28", "url": "https://api.github.com/repos/rust-lang/rust/commits/aa1405fff7f3856ab1e2cb2ea84d73c5a6017c28", "html_url": "https://github.com/rust-lang/rust/commit/aa1405fff7f3856ab1e2cb2ea84d73c5a6017c28"}, {"sha": "dd9ab160a14e8e7b9eee1802482db6a38fa78b80", "url": "https://api.github.com/repos/rust-lang/rust/commits/dd9ab160a14e8e7b9eee1802482db6a38fa78b80", "html_url": "https://github.com/rust-lang/rust/commit/dd9ab160a14e8e7b9eee1802482db6a38fa78b80"}], "stats": {"total": 4, "additions": 4, "deletions": 0}, "files": [{"sha": "539982eb0e49f9579944c099cad85198e757783e", "filename": "library/core/tests/atomic.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/51511c75b558beddab7fb4b6d8277a872714b87a/library%2Fcore%2Ftests%2Fatomic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/51511c75b558beddab7fb4b6d8277a872714b87a/library%2Fcore%2Ftests%2Fatomic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Ftests%2Fatomic.rs?ref=51511c75b558beddab7fb4b6d8277a872714b87a", "patch": "@@ -61,6 +61,7 @@ fn uint_xor() {\n \n #[test]\n #[cfg(any(not(target_arch = \"arm\"), target_os = \"linux\"))] // Missing intrinsic in compiler-builtins\n+#[cfg_attr(miri, ignore)] // FIXME: Miri does not support atomic_min\n fn uint_min() {\n     let x = AtomicUsize::new(0xf731);\n     assert_eq!(x.fetch_min(0x137f, SeqCst), 0xf731);\n@@ -71,6 +72,7 @@ fn uint_min() {\n \n #[test]\n #[cfg(any(not(target_arch = \"arm\"), target_os = \"linux\"))] // Missing intrinsic in compiler-builtins\n+#[cfg_attr(miri, ignore)] // FIXME: Miri does not support atomic_max\n fn uint_max() {\n     let x = AtomicUsize::new(0x137f);\n     assert_eq!(x.fetch_max(0xf731, SeqCst), 0x137f);\n@@ -109,6 +111,7 @@ fn int_xor() {\n \n #[test]\n #[cfg(any(not(target_arch = \"arm\"), target_os = \"linux\"))] // Missing intrinsic in compiler-builtins\n+#[cfg_attr(miri, ignore)] // FIXME: Miri does not support atomic_min\n fn int_min() {\n     let x = AtomicIsize::new(0xf731);\n     assert_eq!(x.fetch_min(0x137f, SeqCst), 0xf731);\n@@ -119,6 +122,7 @@ fn int_min() {\n \n #[test]\n #[cfg(any(not(target_arch = \"arm\"), target_os = \"linux\"))] // Missing intrinsic in compiler-builtins\n+#[cfg_attr(miri, ignore)] // FIXME: Miri does not support atomic_max\n fn int_max() {\n     let x = AtomicIsize::new(0x137f);\n     assert_eq!(x.fetch_max(0xf731, SeqCst), 0x137f);"}]}