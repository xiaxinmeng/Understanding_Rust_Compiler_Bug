{"sha": "4737c5a068a38e4b004180b3f39bb0974190b06e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ3MzdjNWEwNjhhMzhlNGIwMDQxODBiM2YzOWJiMDk3NDE5MGIwNmU=", "commit": {"author": {"name": "Badel2", "email": "2badel2@gmail.com", "date": "2017-09-20T18:57:18Z"}, "committer": {"name": "Badel2", "email": "2badel2@gmail.com", "date": "2017-09-22T20:05:18Z"}, "message": "Substitute `...` with the expanded form\n\nRangeInclusive { start, end }, this way we supress the warnings about `...` in expressions being deprecated until `..=` is available in the compiler", "tree": {"sha": "34a1b6964146a1976a427a36bdc3da3fe2bb38ab", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/34a1b6964146a1976a427a36bdc3da3fe2bb38ab"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4737c5a068a38e4b004180b3f39bb0974190b06e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4737c5a068a38e4b004180b3f39bb0974190b06e", "html_url": "https://github.com/rust-lang/rust/commit/4737c5a068a38e4b004180b3f39bb0974190b06e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4737c5a068a38e4b004180b3f39bb0974190b06e/comments", "author": {"login": "Badel2", "id": 15879619, "node_id": "MDQ6VXNlcjE1ODc5NjE5", "avatar_url": "https://avatars.githubusercontent.com/u/15879619?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Badel2", "html_url": "https://github.com/Badel2", "followers_url": "https://api.github.com/users/Badel2/followers", "following_url": "https://api.github.com/users/Badel2/following{/other_user}", "gists_url": "https://api.github.com/users/Badel2/gists{/gist_id}", "starred_url": "https://api.github.com/users/Badel2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Badel2/subscriptions", "organizations_url": "https://api.github.com/users/Badel2/orgs", "repos_url": "https://api.github.com/users/Badel2/repos", "events_url": "https://api.github.com/users/Badel2/events{/privacy}", "received_events_url": "https://api.github.com/users/Badel2/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Badel2", "id": 15879619, "node_id": "MDQ6VXNlcjE1ODc5NjE5", "avatar_url": "https://avatars.githubusercontent.com/u/15879619?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Badel2", "html_url": "https://github.com/Badel2", "followers_url": "https://api.github.com/users/Badel2/followers", "following_url": "https://api.github.com/users/Badel2/following{/other_user}", "gists_url": "https://api.github.com/users/Badel2/gists{/gist_id}", "starred_url": "https://api.github.com/users/Badel2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Badel2/subscriptions", "organizations_url": "https://api.github.com/users/Badel2/orgs", "repos_url": "https://api.github.com/users/Badel2/repos", "events_url": "https://api.github.com/users/Badel2/events{/privacy}", "received_events_url": "https://api.github.com/users/Badel2/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e64efc91f49affb265328e354c8c8f0544daa462", "url": "https://api.github.com/repos/rust-lang/rust/commits/e64efc91f49affb265328e354c8c8f0544daa462", "html_url": "https://github.com/rust-lang/rust/commit/e64efc91f49affb265328e354c8c8f0544daa462"}], "stats": {"total": 17, "additions": 8, "deletions": 9}, "files": [{"sha": "ae243f3f246a5833c3a2c65c0ef84233d88b0bbf", "filename": "src/libcore/slice/mod.rs", "status": "modified", "additions": 8, "deletions": 9, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/4737c5a068a38e4b004180b3f39bb0974190b06e/src%2Flibcore%2Fslice%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4737c5a068a38e4b004180b3f39bb0974190b06e/src%2Flibcore%2Fslice%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fslice%2Fmod.rs?ref=4737c5a068a38e4b004180b3f39bb0974190b06e", "patch": "@@ -16,9 +16,8 @@\n \n #![stable(feature = \"rust1\", since = \"1.0.0\")]\n \n-// FIXME: replace remaining ... by ..= after next stage0\n-// Silence warning: \"... is being replaced by ..=\"\n-#![cfg_attr(not(stage0), allow(warnings))]\n+// FIXME: after next stage0, change RangeInclusive { ... } back to ..=\n+use ops::RangeInclusive;\n \n // How this module is organized.\n //\n@@ -1048,32 +1047,32 @@ impl<T> SliceIndex<[T]> for ops::RangeToInclusive<usize> {\n \n     #[inline]\n     fn get(self, slice: &[T]) -> Option<&[T]> {\n-        (0...self.end).get(slice)\n+        (RangeInclusive { start: 0, end: self.end }).get(slice)\n     }\n \n     #[inline]\n     fn get_mut(self, slice: &mut [T]) -> Option<&mut [T]> {\n-        (0...self.end).get_mut(slice)\n+        (RangeInclusive { start: 0, end: self.end }).get_mut(slice)\n     }\n \n     #[inline]\n     unsafe fn get_unchecked(self, slice: &[T]) -> &[T] {\n-        (0...self.end).get_unchecked(slice)\n+        (RangeInclusive { start: 0, end: self.end }).get_unchecked(slice)\n     }\n \n     #[inline]\n     unsafe fn get_unchecked_mut(self, slice: &mut [T]) -> &mut [T] {\n-        (0...self.end).get_unchecked_mut(slice)\n+        (RangeInclusive { start: 0, end: self.end }).get_unchecked_mut(slice)\n     }\n \n     #[inline]\n     fn index(self, slice: &[T]) -> &[T] {\n-        (0...self.end).index(slice)\n+        (RangeInclusive { start: 0, end: self.end }).index(slice)\n     }\n \n     #[inline]\n     fn index_mut(self, slice: &mut [T]) -> &mut [T] {\n-        (0...self.end).index_mut(slice)\n+        (RangeInclusive { start: 0, end: self.end }).index_mut(slice)\n     }\n }\n "}]}