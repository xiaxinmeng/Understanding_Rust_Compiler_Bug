{"sha": "2d509f8b404b77fd7fa949a13fd38c9f5f51b9fb", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJkNTA5ZjhiNDA0Yjc3ZmQ3ZmE5NDlhMTNmZDM4YzlmNWY1MWI5ZmI=", "commit": {"author": {"name": "Cameron Steffen", "email": "cam.steffen94@gmail.com", "date": "2021-01-22T00:12:46Z"}, "committer": {"name": "Cameron Steffen", "email": "cam.steffen94@gmail.com", "date": "2021-01-22T00:13:36Z"}, "message": "Check if let guard in collapsible_match", "tree": {"sha": "db32d634a426eadc52ac24c3df27eefafffa60eb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/db32d634a426eadc52ac24c3df27eefafffa60eb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2d509f8b404b77fd7fa949a13fd38c9f5f51b9fb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2d509f8b404b77fd7fa949a13fd38c9f5f51b9fb", "html_url": "https://github.com/rust-lang/rust/commit/2d509f8b404b77fd7fa949a13fd38c9f5f51b9fb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2d509f8b404b77fd7fa949a13fd38c9f5f51b9fb/comments", "author": {"login": "camsteffen", "id": 5565418, "node_id": "MDQ6VXNlcjU1NjU0MTg=", "avatar_url": "https://avatars.githubusercontent.com/u/5565418?v=4", "gravatar_id": "", "url": "https://api.github.com/users/camsteffen", "html_url": "https://github.com/camsteffen", "followers_url": "https://api.github.com/users/camsteffen/followers", "following_url": "https://api.github.com/users/camsteffen/following{/other_user}", "gists_url": "https://api.github.com/users/camsteffen/gists{/gist_id}", "starred_url": "https://api.github.com/users/camsteffen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/camsteffen/subscriptions", "organizations_url": "https://api.github.com/users/camsteffen/orgs", "repos_url": "https://api.github.com/users/camsteffen/repos", "events_url": "https://api.github.com/users/camsteffen/events{/privacy}", "received_events_url": "https://api.github.com/users/camsteffen/received_events", "type": "User", "site_admin": false}, "committer": {"login": "camsteffen", "id": 5565418, "node_id": "MDQ6VXNlcjU1NjU0MTg=", "avatar_url": "https://avatars.githubusercontent.com/u/5565418?v=4", "gravatar_id": "", "url": "https://api.github.com/users/camsteffen", "html_url": "https://github.com/camsteffen", "followers_url": "https://api.github.com/users/camsteffen/followers", "following_url": "https://api.github.com/users/camsteffen/following{/other_user}", "gists_url": "https://api.github.com/users/camsteffen/gists{/gist_id}", "starred_url": "https://api.github.com/users/camsteffen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/camsteffen/subscriptions", "organizations_url": "https://api.github.com/users/camsteffen/orgs", "repos_url": "https://api.github.com/users/camsteffen/repos", "events_url": "https://api.github.com/users/camsteffen/events{/privacy}", "received_events_url": "https://api.github.com/users/camsteffen/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "043cf97abc51bdb6df728d57957f1d194d988475", "url": "https://api.github.com/repos/rust-lang/rust/commits/043cf97abc51bdb6df728d57957f1d194d988475", "html_url": "https://github.com/rust-lang/rust/commit/043cf97abc51bdb6df728d57957f1d194d988475"}], "stats": {"total": 7, "additions": 6, "deletions": 1}, "files": [{"sha": "c75aa2bde9753b75ca69fe3c7e43f4a66d4d8544", "filename": "clippy_lints/src/collapsible_match.rs", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/2d509f8b404b77fd7fa949a13fd38c9f5f51b9fb/clippy_lints%2Fsrc%2Fcollapsible_match.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2d509f8b404b77fd7fa949a13fd38c9f5f51b9fb/clippy_lints%2Fsrc%2Fcollapsible_match.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fcollapsible_match.rs?ref=2d509f8b404b77fd7fa949a13fd38c9f5f51b9fb", "patch": "@@ -85,7 +85,12 @@ fn check_arm(arm: &Arm<'_>, wild_outer_arm: &Arm<'_>, cx: &LateContext<'_>) {\n         // the \"wild-like\" branches must be equal\n         if SpanlessEq::new(cx).eq_expr(wild_inner_arm.body, wild_outer_arm.body);\n         // the binding must not be used in the if guard\n-        if !matches!(arm.guard, Some(Guard::If(guard)) if LocalUsedVisitor::new(binding_id).check_expr(guard));\n+        if match arm.guard {\n+            None => true,\n+            Some(Guard::If(expr) | Guard::IfLet(_, expr)) => {\n+                !LocalUsedVisitor::new(binding_id).check_expr(expr)\n+            }\n+        };\n         // ...or anywhere in the inner match\n         if !arms_inner.iter().any(|arm| LocalUsedVisitor::new(binding_id).check_arm(arm));\n         then {"}]}