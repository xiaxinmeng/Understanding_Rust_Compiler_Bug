{"sha": "a61e13423e57380a08ea1475db57fc30cb7deb15", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE2MWUxMzQyM2U1NzM4MGEwOGVhMTQ3NWRiNTdmYzMwY2I3ZGViMTU=", "commit": {"author": {"name": "Tomasz Mi\u0105sko", "email": "tomasz.miasko@gmail.com", "date": "2020-03-03T00:00:00Z"}, "committer": {"name": "Tomasz Mi\u0105sko", "email": "tomasz.miasko@gmail.com", "date": "2020-03-03T07:37:44Z"}, "message": "Invoke OptimizerLastEPCallbacks in PreLinkThinLTO\n\nThe default ThinLTO pre-link pipeline does not include optimizer last\nextension points. Thus, when using the new LLVM pass manager & ThinLTO\n& sanitizers on any opt-level different from zero, the sanitizer\nfunction passes would be omitted from the pipeline.\n\nAdd optimizer last extensions points manually to the pipeline, but guard\nregistration with stage check in the case this behaviour changes in the\nfuture.", "tree": {"sha": "ce23199a8de23398a648b8e2a00d54d637d2ca9a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ce23199a8de23398a648b8e2a00d54d637d2ca9a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a61e13423e57380a08ea1475db57fc30cb7deb15", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a61e13423e57380a08ea1475db57fc30cb7deb15", "html_url": "https://github.com/rust-lang/rust/commit/a61e13423e57380a08ea1475db57fc30cb7deb15", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a61e13423e57380a08ea1475db57fc30cb7deb15/comments", "author": {"login": "tmiasko", "id": 51362316, "node_id": "MDQ6VXNlcjUxMzYyMzE2", "avatar_url": "https://avatars.githubusercontent.com/u/51362316?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tmiasko", "html_url": "https://github.com/tmiasko", "followers_url": "https://api.github.com/users/tmiasko/followers", "following_url": "https://api.github.com/users/tmiasko/following{/other_user}", "gists_url": "https://api.github.com/users/tmiasko/gists{/gist_id}", "starred_url": "https://api.github.com/users/tmiasko/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tmiasko/subscriptions", "organizations_url": "https://api.github.com/users/tmiasko/orgs", "repos_url": "https://api.github.com/users/tmiasko/repos", "events_url": "https://api.github.com/users/tmiasko/events{/privacy}", "received_events_url": "https://api.github.com/users/tmiasko/received_events", "type": "User", "site_admin": false}, "committer": {"login": "tmiasko", "id": 51362316, "node_id": "MDQ6VXNlcjUxMzYyMzE2", "avatar_url": "https://avatars.githubusercontent.com/u/51362316?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tmiasko", "html_url": "https://github.com/tmiasko", "followers_url": "https://api.github.com/users/tmiasko/followers", "following_url": "https://api.github.com/users/tmiasko/following{/other_user}", "gists_url": "https://api.github.com/users/tmiasko/gists{/gist_id}", "starred_url": "https://api.github.com/users/tmiasko/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tmiasko/subscriptions", "organizations_url": "https://api.github.com/users/tmiasko/orgs", "repos_url": "https://api.github.com/users/tmiasko/repos", "events_url": "https://api.github.com/users/tmiasko/events{/privacy}", "received_events_url": "https://api.github.com/users/tmiasko/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "97b3d816152774e45d01d44cd5b44565dc7aba58", "url": "https://api.github.com/repos/rust-lang/rust/commits/97b3d816152774e45d01d44cd5b44565dc7aba58", "html_url": "https://github.com/rust-lang/rust/commit/97b3d816152774e45d01d44cd5b44565dc7aba58"}], "stats": {"total": 12, "additions": 10, "deletions": 2}, "files": [{"sha": "90d24d20737db3b1fb7bafeae97f61acd9b1e70d", "filename": "src/rustllvm/PassWrapper.cpp", "status": "modified", "additions": 10, "deletions": 2, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/a61e13423e57380a08ea1475db57fc30cb7deb15/src%2Frustllvm%2FPassWrapper.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/a61e13423e57380a08ea1475db57fc30cb7deb15/src%2Frustllvm%2FPassWrapper.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustllvm%2FPassWrapper.cpp?ref=a61e13423e57380a08ea1475db57fc30cb7deb15", "patch": "@@ -868,15 +868,23 @@ LLVMRustOptimizeWithNewPassManager(\n     } else {\n       for (const auto &C : PipelineStartEPCallbacks)\n         PB.registerPipelineStartEPCallback(C);\n-      for (const auto &C : OptimizerLastEPCallbacks)\n-        PB.registerOptimizerLastEPCallback(C);\n+      if (OptStage != LLVMRustOptStage::PreLinkThinLTO) {\n+        for (const auto &C : OptimizerLastEPCallbacks)\n+          PB.registerOptimizerLastEPCallback(C);\n+      }\n \n       switch (OptStage) {\n       case LLVMRustOptStage::PreLinkNoLTO:\n         MPM = PB.buildPerModuleDefaultPipeline(OptLevel, DebugPassManager);\n         break;\n       case LLVMRustOptStage::PreLinkThinLTO:\n         MPM = PB.buildThinLTOPreLinkDefaultPipeline(OptLevel, DebugPassManager);\n+        if (!OptimizerLastEPCallbacks.empty()) {\n+          FunctionPassManager FPM(DebugPassManager);\n+          for (const auto &C : OptimizerLastEPCallbacks)\n+            C(FPM, OptLevel);\n+          MPM.addPass(createModuleToFunctionPassAdaptor(std::move(FPM)));\n+        }\n         break;\n       case LLVMRustOptStage::PreLinkFatLTO:\n         MPM = PB.buildLTOPreLinkDefaultPipeline(OptLevel, DebugPassManager);"}]}