{"sha": "5bb70c14be426e4fac6f5aadf46a564cc23c5267", "node_id": "MDY6Q29tbWl0NzI0NzEyOjViYjcwYzE0YmU0MjZlNGZhYzZmNWFhZGY0NmE1NjRjYzIzYzUyNjc=", "commit": {"author": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2019-11-26T13:11:32Z"}, "committer": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2019-11-27T16:58:54Z"}, "message": "Fix tidy issues", "tree": {"sha": "d38a5446fc6faa56cbf4a7ac33ab672e4e8ef81b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d38a5446fc6faa56cbf4a7ac33ab672e4e8ef81b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5bb70c14be426e4fac6f5aadf46a564cc23c5267", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5bb70c14be426e4fac6f5aadf46a564cc23c5267", "html_url": "https://github.com/rust-lang/rust/commit/5bb70c14be426e4fac6f5aadf46a564cc23c5267", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5bb70c14be426e4fac6f5aadf46a564cc23c5267/comments", "author": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "committer": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "243fb6f7b2cf595ab5b89ca0a73034b591c8e3a5", "url": "https://api.github.com/repos/rust-lang/rust/commits/243fb6f7b2cf595ab5b89ca0a73034b591c8e3a5", "html_url": "https://github.com/rust-lang/rust/commit/243fb6f7b2cf595ab5b89ca0a73034b591c8e3a5"}], "stats": {"total": 35, "additions": 15, "deletions": 20}, "files": [{"sha": "021a0219d13e2b60b8e79b49f3fb37132dc6789b", "filename": "src/librustc_error_codes/error_codes/E0015.md", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/5bb70c14be426e4fac6f5aadf46a564cc23c5267/src%2Flibrustc_error_codes%2Ferror_codes%2FE0015.md", "raw_url": "https://github.com/rust-lang/rust/raw/5bb70c14be426e4fac6f5aadf46a564cc23c5267/src%2Flibrustc_error_codes%2Ferror_codes%2FE0015.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_error_codes%2Ferror_codes%2FE0015.md?ref=5bb70c14be426e4fac6f5aadf46a564cc23c5267", "patch": "@@ -1,4 +1,5 @@\n-A constant item was initialized with something that is not a constant expression.\n+A constant item was initialized with something that is not a constant\n+expression.\n \n Erroneous code example:\n "}, {"sha": "bfe0d21f3129b227862af561c5f66dd025638c7b", "filename": "src/librustc_error_codes/error_codes/E0107.md", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/5bb70c14be426e4fac6f5aadf46a564cc23c5267/src%2Flibrustc_error_codes%2Ferror_codes%2FE0107.md", "raw_url": "https://github.com/rust-lang/rust/raw/5bb70c14be426e4fac6f5aadf46a564cc23c5267/src%2Flibrustc_error_codes%2Ferror_codes%2FE0107.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_error_codes%2Ferror_codes%2FE0107.md?ref=5bb70c14be426e4fac6f5aadf46a564cc23c5267", "patch": "@@ -25,4 +25,3 @@ fn main() {\n                     //        expected 0, found 1\n }\n ```\n-"}, {"sha": "397979e564105f51da7f12e5cde05e805ab6c0a9", "filename": "src/librustc_error_codes/error_codes/E0369.md", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/5bb70c14be426e4fac6f5aadf46a564cc23c5267/src%2Flibrustc_error_codes%2Ferror_codes%2FE0369.md", "raw_url": "https://github.com/rust-lang/rust/raw/5bb70c14be426e4fac6f5aadf46a564cc23c5267/src%2Flibrustc_error_codes%2Ferror_codes%2FE0369.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_error_codes%2Ferror_codes%2FE0369.md?ref=5bb70c14be426e4fac6f5aadf46a564cc23c5267", "patch": "@@ -26,4 +26,3 @@ left and may require reallocation. This requires ownership of the string\n on the left. If something should be added to a string literal, move the\n literal to the heap by allocating it with `to_owned()` like in\n `\"Your text\".to_owned()`.\n-"}, {"sha": "201107c05a02c32642db633cf4f107bdc29aab3a", "filename": "src/librustc_error_codes/error_codes/E0404.md", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/5bb70c14be426e4fac6f5aadf46a564cc23c5267/src%2Flibrustc_error_codes%2Ferror_codes%2FE0404.md", "raw_url": "https://github.com/rust-lang/rust/raw/5bb70c14be426e4fac6f5aadf46a564cc23c5267/src%2Flibrustc_error_codes%2Ferror_codes%2FE0404.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_error_codes%2Ferror_codes%2FE0404.md?ref=5bb70c14be426e4fac6f5aadf46a564cc23c5267", "patch": "@@ -41,4 +41,3 @@ trait Foo {\n \n fn bar<T: Foo>(t: T) {} // ok!\n ```\n-"}, {"sha": "385079d403d59be277a285625120c7442b77ce0a", "filename": "src/librustc_error_codes/error_codes/E0458.md", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/5bb70c14be426e4fac6f5aadf46a564cc23c5267/src%2Flibrustc_error_codes%2Ferror_codes%2FE0458.md", "raw_url": "https://github.com/rust-lang/rust/raw/5bb70c14be426e4fac6f5aadf46a564cc23c5267/src%2Flibrustc_error_codes%2Ferror_codes%2FE0458.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_error_codes%2Ferror_codes%2FE0458.md?ref=5bb70c14be426e4fac6f5aadf46a564cc23c5267", "patch": "@@ -10,4 +10,3 @@ Please specify a valid \"kind\" value, from one of the following:\n * static\n * dylib\n * framework\n-"}, {"sha": "65cdf90036adeb044aaf7486539dbad5136e86f7", "filename": "src/librustc_error_codes/error_codes/E0633.md", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/5bb70c14be426e4fac6f5aadf46a564cc23c5267/src%2Flibrustc_error_codes%2Ferror_codes%2FE0633.md", "raw_url": "https://github.com/rust-lang/rust/raw/5bb70c14be426e4fac6f5aadf46a564cc23c5267/src%2Flibrustc_error_codes%2Ferror_codes%2FE0633.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_error_codes%2Ferror_codes%2FE0633.md?ref=5bb70c14be426e4fac6f5aadf46a564cc23c5267", "patch": "@@ -21,4 +21,3 @@ The `#[unwind]` attribute should be used as follows:\n \n NB. The default behavior here is \"allowed\", but this is unspecified\n and likely to change in the future.\n-"}, {"sha": "a39d2be4f8f86bc61bf797d87a5d3f7ae673b1f6", "filename": "src/librustc_error_codes/error_codes/E0635.md", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/5bb70c14be426e4fac6f5aadf46a564cc23c5267/src%2Flibrustc_error_codes%2Ferror_codes%2FE0635.md", "raw_url": "https://github.com/rust-lang/rust/raw/5bb70c14be426e4fac6f5aadf46a564cc23c5267/src%2Flibrustc_error_codes%2Ferror_codes%2FE0635.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_error_codes%2Ferror_codes%2FE0635.md?ref=5bb70c14be426e4fac6f5aadf46a564cc23c5267", "patch": "@@ -5,4 +5,3 @@ Erroneous code example:\n ```compile_fail,E0635\n #![feature(nonexistent_rust_feature)] // error: unknown feature\n ```\n-"}, {"sha": "57cf72db5568928dd43d4f5b5cc6e149dfd0c495", "filename": "src/librustc_error_codes/error_codes/E0636.md", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/5bb70c14be426e4fac6f5aadf46a564cc23c5267/src%2Flibrustc_error_codes%2Ferror_codes%2FE0636.md", "raw_url": "https://github.com/rust-lang/rust/raw/5bb70c14be426e4fac6f5aadf46a564cc23c5267/src%2Flibrustc_error_codes%2Ferror_codes%2FE0636.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_error_codes%2Ferror_codes%2FE0636.md?ref=5bb70c14be426e4fac6f5aadf46a564cc23c5267", "patch": "@@ -7,4 +7,3 @@ Erroneous code example:\n #![feature(rust1)]\n #![feature(rust1)] // error: the feature `rust1` has already been declared\n ```\n-"}, {"sha": "e2110042c7e8dd99288aafd36c06643379e03d0f", "filename": "src/librustc_error_codes/error_codes/E0641.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5bb70c14be426e4fac6f5aadf46a564cc23c5267/src%2Flibrustc_error_codes%2Ferror_codes%2FE0641.md", "raw_url": "https://github.com/rust-lang/rust/raw/5bb70c14be426e4fac6f5aadf46a564cc23c5267/src%2Flibrustc_error_codes%2Ferror_codes%2FE0641.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_error_codes%2Ferror_codes%2FE0641.md?ref=5bb70c14be426e4fac6f5aadf46a564cc23c5267", "patch": "@@ -16,4 +16,4 @@ let a = &(String::from(\"Hello world!\")) as *const _; // Ok\n let b = 0 as *const i32; // Ok\n \n let c: *const i32 = 0 as *const _; // Ok\n-```\n\\ No newline at end of file\n+```"}, {"sha": "7a653bd2264fd4eb07145aa27ad8cb018fb123f2", "filename": "src/librustc_error_codes/error_codes/E0644.md", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/5bb70c14be426e4fac6f5aadf46a564cc23c5267/src%2Flibrustc_error_codes%2Ferror_codes%2FE0644.md", "raw_url": "https://github.com/rust-lang/rust/raw/5bb70c14be426e4fac6f5aadf46a564cc23c5267/src%2Flibrustc_error_codes%2Ferror_codes%2FE0644.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_error_codes%2Ferror_codes%2FE0644.md?ref=5bb70c14be426e4fac6f5aadf46a564cc23c5267", "patch": "@@ -27,4 +27,3 @@ closure call itself by capturing a `&Fn()` object or `fn()` pointer\n that refers to itself. That is permitting, since the closure would be\n invoking itself via a virtual call, and hence does not directly\n reference its own *type*.\n-"}, {"sha": "d379b8a2384c675ece632d056a724438c3a5dc47", "filename": "src/librustc_error_codes/error_codes/E0706.md", "status": "modified", "additions": 11, "deletions": 9, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/5bb70c14be426e4fac6f5aadf46a564cc23c5267/src%2Flibrustc_error_codes%2Ferror_codes%2FE0706.md", "raw_url": "https://github.com/rust-lang/rust/raw/5bb70c14be426e4fac6f5aadf46a564cc23c5267/src%2Flibrustc_error_codes%2Ferror_codes%2FE0706.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_error_codes%2Ferror_codes%2FE0706.md?ref=5bb70c14be426e4fac6f5aadf46a564cc23c5267", "patch": "@@ -1,4 +1,4 @@\n- `async fn`s are not yet supported in traits in Rust.\n+`async fn`s are not yet supported in traits in Rust.\n \n Erroneous code example:\n \n@@ -10,7 +10,8 @@ trait T {\n }\n ```\n \n-`async fn`s return an `impl Future`, making the following two examples equivalent:\n+`async fn`s return an `impl Future`, making the following two examples\n+equivalent:\n \n ```edition2018,ignore (example-of-desugaring-equivalence)\n async fn foo() -> User {\n@@ -23,8 +24,8 @@ fn foo(&self) -> impl Future<Output = User> + '_ {\n ```\n \n But when it comes to supporting this in traits, there are [a few implementation\n-issues][async-is-hard]. One of them is returning `impl Trait` in traits is not supported,\n-as it would require [Generic Associated Types] to be supported:\n+issues][async-is-hard]. One of them is returning `impl Trait` in traits is not\n+supported, as it would require [Generic Associated Types] to be supported:\n \n ```edition2018,ignore (example-of-desugaring-equivalence)\n impl MyDatabase {\n@@ -40,13 +41,14 @@ impl MyDatabase {\n }\n ```\n \n-Until these issues are resolved, you can use the [`async-trait` crate], allowing you to use\n-`async fn` in traits by desugaring to \"boxed futures\"\n+Until these issues are resolved, you can use the [`async-trait` crate], allowing\n+you to use `async fn` in traits by desugaring to \"boxed futures\"\n (`Pin<Box<dyn Future + Send + 'async>>`).\n \n-Note that using these trait methods will result in a heap allocation per-function-call. This is not\n-a significant cost for the vast majority of applications, but should be considered when deciding\n-whether to use this functionality in the public API of a low-level function that is expected to be\n+Note that using these trait methods will result in a heap allocation\n+per-function-call. This is not a significant cost for the vast majority of\n+applications, but should be considered when deciding whether to use this\n+functionality in the public API of a low-level function that is expected to be\n called millions of times a second.\n \n You might be interested in visiting the [async book] for further information."}, {"sha": "39bebdcd3750e1f324c8e822a7c8290cda61a72a", "filename": "src/librustc_error_codes/error_codes/E0745.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5bb70c14be426e4fac6f5aadf46a564cc23c5267/src%2Flibrustc_error_codes%2Ferror_codes%2FE0745.md", "raw_url": "https://github.com/rust-lang/rust/raw/5bb70c14be426e4fac6f5aadf46a564cc23c5267/src%2Flibrustc_error_codes%2Ferror_codes%2FE0745.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_error_codes%2Ferror_codes%2FE0745.md?ref=5bb70c14be426e4fac6f5aadf46a564cc23c5267", "patch": "@@ -11,7 +11,7 @@ fn temp_address() {\n \n To avoid the error, first bind the temporary to a named local variable.\n \n-```ignore\n+```ignore (not yet implemented)\n # #![feature(raw_ref_op)]\n fn temp_address() {\n     let val = 2;"}]}