{"sha": "b63234e20be04ae0e7eca20e0bf49dca8d7d3718", "node_id": "C_kwDOAAsO6NoAKGI2MzIzNGUyMGJlMDRhZTBlN2VjYTIwZTBiZjQ5ZGNhOGQ3ZDM3MTg", "commit": {"author": {"name": "OleStrohm", "email": "strohm99@gmail.com", "date": "2022-08-06T17:12:57Z"}, "committer": {"name": "OleStrohm", "email": "strohm99@gmail.com", "date": "2022-09-12T19:19:49Z"}, "message": "Cleaned up code", "tree": {"sha": "a67b5cf7257718f1cfee821e0592cfd50526fb3d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a67b5cf7257718f1cfee821e0592cfd50526fb3d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b63234e20be04ae0e7eca20e0bf49dca8d7d3718", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b63234e20be04ae0e7eca20e0bf49dca8d7d3718", "html_url": "https://github.com/rust-lang/rust/commit/b63234e20be04ae0e7eca20e0bf49dca8d7d3718", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b63234e20be04ae0e7eca20e0bf49dca8d7d3718/comments", "author": {"login": "OleStrohm", "id": 6892524, "node_id": "MDQ6VXNlcjY4OTI1MjQ=", "avatar_url": "https://avatars.githubusercontent.com/u/6892524?v=4", "gravatar_id": "", "url": "https://api.github.com/users/OleStrohm", "html_url": "https://github.com/OleStrohm", "followers_url": "https://api.github.com/users/OleStrohm/followers", "following_url": "https://api.github.com/users/OleStrohm/following{/other_user}", "gists_url": "https://api.github.com/users/OleStrohm/gists{/gist_id}", "starred_url": "https://api.github.com/users/OleStrohm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/OleStrohm/subscriptions", "organizations_url": "https://api.github.com/users/OleStrohm/orgs", "repos_url": "https://api.github.com/users/OleStrohm/repos", "events_url": "https://api.github.com/users/OleStrohm/events{/privacy}", "received_events_url": "https://api.github.com/users/OleStrohm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "OleStrohm", "id": 6892524, "node_id": "MDQ6VXNlcjY4OTI1MjQ=", "avatar_url": "https://avatars.githubusercontent.com/u/6892524?v=4", "gravatar_id": "", "url": "https://api.github.com/users/OleStrohm", "html_url": "https://github.com/OleStrohm", "followers_url": "https://api.github.com/users/OleStrohm/followers", "following_url": "https://api.github.com/users/OleStrohm/following{/other_user}", "gists_url": "https://api.github.com/users/OleStrohm/gists{/gist_id}", "starred_url": "https://api.github.com/users/OleStrohm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/OleStrohm/subscriptions", "organizations_url": "https://api.github.com/users/OleStrohm/orgs", "repos_url": "https://api.github.com/users/OleStrohm/repos", "events_url": "https://api.github.com/users/OleStrohm/events{/privacy}", "received_events_url": "https://api.github.com/users/OleStrohm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e28046c673178361d39b7f6dafd6915767f2d71f", "url": "https://api.github.com/repos/rust-lang/rust/commits/e28046c673178361d39b7f6dafd6915767f2d71f", "html_url": "https://github.com/rust-lang/rust/commit/e28046c673178361d39b7f6dafd6915767f2d71f"}], "stats": {"total": 30, "additions": 14, "deletions": 16}, "files": [{"sha": "c821a3786b9fec113fe9c63d7f3c5c5e62ca4f28", "filename": "crates/hir-ty/src/infer.rs", "status": "modified", "additions": 1, "deletions": 5, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/b63234e20be04ae0e7eca20e0bf49dca8d7d3718/crates%2Fhir-ty%2Fsrc%2Finfer.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b63234e20be04ae0e7eca20e0bf49dca8d7d3718/crates%2Fhir-ty%2Fsrc%2Finfer.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir-ty%2Fsrc%2Finfer.rs?ref=b63234e20be04ae0e7eca20e0bf49dca8d7d3718", "patch": "@@ -26,7 +26,7 @@ use hir_def::{\n     resolver::{HasResolver, ResolveValueResult, Resolver, TypeNs, ValueNs},\n     type_ref::TypeRef,\n     AdtId, AssocItemId, DefWithBodyId, EnumVariantId, FieldId, FunctionId, HasModule, Lookup,\n-    TraitId, TypeAliasId, VariantId,\n+    TraitId, TypeAliasId, VariantId\n };\n use hir_expand::name::{name, Name};\n use itertools::Either;\n@@ -68,10 +68,6 @@ pub(crate) fn infer_query(db: &dyn HirDatabase, def: DefWithBodyId) -> Arc<Infer\n         DefWithBodyId::FunctionId(f) => ctx.collect_fn(f),\n         DefWithBodyId::StaticId(s) => ctx.collect_static(&db.static_data(s)),\n         DefWithBodyId::VariantId(v) => {\n-            //let def = AttrDefId::EnumVariantId(v);\n-            //let attrs = db.attrs(def);\n-            //let repr = attrs.by_key(\"repr\").attrs().next().unwrap();\n-            //let ident = repr.single_ident_value().unwrap().text;\n             // TODO(ole): Get the real type\n             ctx.return_ty = TyBuilder::def_ty(db, v.parent.into()).fill_with_unknown().build()\n         }"}, {"sha": "1b06dbd9085012273392a985cd225b8e0294e8bf", "filename": "crates/hir/src/lib.rs", "status": "modified", "additions": 9, "deletions": 5, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/b63234e20be04ae0e7eca20e0bf49dca8d7d3718/crates%2Fhir%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b63234e20be04ae0e7eca20e0bf49dca8d7d3718/crates%2Fhir%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir%2Fsrc%2Flib.rs?ref=b63234e20be04ae0e7eca20e0bf49dca8d7d3718", "patch": "@@ -967,11 +967,6 @@ pub struct Variant {\n }\n \n impl Variant {\n-    pub fn value(self, db: &dyn HirDatabase) -> Option<Expr> {\n-        // TODO(ole): Handle missing exprs (+1 to the prev)\n-        self.source(db)?.value.expr()\n-    }\n-\n     pub fn module(self, db: &dyn HirDatabase) -> Module {\n         self.parent.module(db)\n     }\n@@ -999,6 +994,15 @@ impl Variant {\n     pub(crate) fn variant_data(self, db: &dyn HirDatabase) -> Arc<VariantData> {\n         db.enum_data(self.parent.id).variants[self.id].variant_data.clone()\n     }\n+\n+    pub fn value(self, db: &dyn HirDatabase) -> Option<Expr> {\n+        // TODO(ole): Handle missing exprs (+1 to the prev)\n+        self.source(db)?.value.expr()\n+    }\n+\n+    pub fn eval(self, db: &dyn HirDatabase) -> Result<ComputedExpr, ConstEvalError> {\n+        db.const_eval_variant(self.into())\n+    }\n }\n \n /// Variants inherit visibility from the parent enum."}, {"sha": "fd78decda4e648b4373d86d2a6c2de5233d4de76", "filename": "crates/hir/src/symbols.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/b63234e20be04ae0e7eca20e0bf49dca8d7d3718/crates%2Fhir%2Fsrc%2Fsymbols.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b63234e20be04ae0e7eca20e0bf49dca8d7d3718/crates%2Fhir%2Fsrc%2Fsymbols.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir%2Fsrc%2Fsymbols.rs?ref=b63234e20be04ae0e7eca20e0bf49dca8d7d3718", "patch": "@@ -1,7 +1,6 @@\n //! File symbol extraction.\n \n use base_db::FileRange;\n-use hir_def::db::DefDatabase;\n use hir_def::{\n     item_tree::ItemTreeNode, src::HasSource, AdtId, AssocItemId, AssocItemLoc, DefWithBodyId,\n     HasModule, ImplId, ItemContainerId, Lookup, MacroId, ModuleDefId, ModuleId, TraitId,\n@@ -246,8 +245,8 @@ impl<'a> SymbolCollector<'a> {\n                 id.lookup(self.db.upcast()).source(self.db.upcast()).value.name()?.text().into(),\n             ),\n             DefWithBodyId::VariantId(id) => Some({\n-                let up_db: &dyn DefDatabase = self.db.upcast();\n-                up_db.lookup_intern_enum(id.parent).source(up_db).value.name()?.text().into()\n+                let db = self.db.upcast();\n+                id.parent.lookup(db).source(db).value.name()?.text().into()\n             }),\n         }\n     }"}, {"sha": "8ac268f24382a99adcf77b54748d471524c38759", "filename": "crates/ide/src/hover/render.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/b63234e20be04ae0e7eca20e0bf49dca8d7d3718/crates%2Fide%2Fsrc%2Fhover%2Frender.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b63234e20be04ae0e7eca20e0bf49dca8d7d3718/crates%2Fide%2Fsrc%2Fhover%2Frender.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fhover%2Frender.rs?ref=b63234e20be04ae0e7eca20e0bf49dca8d7d3718", "patch": "@@ -349,11 +349,10 @@ pub(super) fn definition(\n         Definition::Function(it) => label_and_docs(db, it),\n         Definition::Adt(it) => label_and_docs(db, it),\n         Definition::Variant(it) => label_value_and_docs(db, it, |&it| {\n-            let hir_db: &dyn HirDatabase = db;\n-            let body = hir_db.const_eval_variant(it.into());\n+            let body = it.eval(db);\n             match body {\n                 Ok(x) => Some(format!(\"{}\", x)),\n-                Err(_) => it.value(db).map(|s| format!(\"{}\", s)),\n+                Err(_) => it.value(db).map(|x| format!(\"{}\", x)),\n             }\n         }),\n         Definition::Const(it) => label_value_and_docs(db, it, |it| {"}]}