{"sha": "d07e537fc3daaf73b7baf652e13ee2d36706258e", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQwN2U1MzdmYzNkYWFmNzNiN2JhZjY1MmUxM2VlMmQzNjcwNjI1OGU=", "commit": {"author": {"name": "Eric Holk", "email": "eric.holk@gmail.com", "date": "2012-07-09T23:57:47Z"}, "committer": {"name": "Eric Holk", "email": "eric.holk@gmail.com", "date": "2012-07-11T05:00:46Z"}, "message": "Remember to wake up blocked task on sender terminate.", "tree": {"sha": "9a6c2ad760980508f72d8971f2fab7c1866e0dfb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9a6c2ad760980508f72d8971f2fab7c1866e0dfb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d07e537fc3daaf73b7baf652e13ee2d36706258e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d07e537fc3daaf73b7baf652e13ee2d36706258e", "html_url": "https://github.com/rust-lang/rust/commit/d07e537fc3daaf73b7baf652e13ee2d36706258e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d07e537fc3daaf73b7baf652e13ee2d36706258e/comments", "author": {"login": "eholk", "id": 105766, "node_id": "MDQ6VXNlcjEwNTc2Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/105766?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eholk", "html_url": "https://github.com/eholk", "followers_url": "https://api.github.com/users/eholk/followers", "following_url": "https://api.github.com/users/eholk/following{/other_user}", "gists_url": "https://api.github.com/users/eholk/gists{/gist_id}", "starred_url": "https://api.github.com/users/eholk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eholk/subscriptions", "organizations_url": "https://api.github.com/users/eholk/orgs", "repos_url": "https://api.github.com/users/eholk/repos", "events_url": "https://api.github.com/users/eholk/events{/privacy}", "received_events_url": "https://api.github.com/users/eholk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "eholk", "id": 105766, "node_id": "MDQ6VXNlcjEwNTc2Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/105766?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eholk", "html_url": "https://github.com/eholk", "followers_url": "https://api.github.com/users/eholk/followers", "following_url": "https://api.github.com/users/eholk/following{/other_user}", "gists_url": "https://api.github.com/users/eholk/gists{/gist_id}", "starred_url": "https://api.github.com/users/eholk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eholk/subscriptions", "organizations_url": "https://api.github.com/users/eholk/orgs", "repos_url": "https://api.github.com/users/eholk/repos", "events_url": "https://api.github.com/users/eholk/events{/privacy}", "received_events_url": "https://api.github.com/users/eholk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1c1b3a33397a38bf412e242b8f00abfa49ed78bd", "url": "https://api.github.com/repos/rust-lang/rust/commits/1c1b3a33397a38bf412e242b8f00abfa49ed78bd", "html_url": "https://github.com/rust-lang/rust/commit/1c1b3a33397a38bf412e242b8f00abfa49ed78bd"}], "stats": {"total": 41, "additions": 40, "deletions": 1}, "files": [{"sha": "441f323d7bf66e46841d591e9e622afe4e827a62", "filename": "src/libcore/pipes.rs", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/d07e537fc3daaf73b7baf652e13ee2d36706258e/src%2Flibcore%2Fpipes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d07e537fc3daaf73b7baf652e13ee2d36706258e/src%2Flibcore%2Fpipes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fpipes.rs?ref=d07e537fc3daaf73b7baf652e13ee2d36706258e", "patch": "@@ -156,7 +156,16 @@ fn peek<T: send>(p: recv_packet<T>) -> bool {\n fn sender_terminate<T: send>(p: *packet<T>) {\n     let p = unsafe { uniquify(p) };\n     alt swap_state_rel(p.header.state, terminated) {\n-      empty | blocked {\n+      empty {\n+        // The receiver will eventually clean up.\n+        unsafe { forget(p) }\n+      }\n+      blocked {\n+        // wake up the target\n+        let target = p.header.blocked_task.get();\n+        rustrt::task_signal_event(target,\n+                                  ptr::addr_of(p.header) as *libc::c_void);\n+\n         // The receiver will eventually clean up.\n         unsafe { forget(p) }\n       }"}, {"sha": "6a80fd46f34a6ffd232dd58093d845ffe9a61676", "filename": "src/test/run-pass/pipe-detect-term.rs", "status": "added", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/d07e537fc3daaf73b7baf652e13ee2d36706258e/src%2Ftest%2Frun-pass%2Fpipe-detect-term.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d07e537fc3daaf73b7baf652e13ee2d36706258e/src%2Ftest%2Frun-pass%2Fpipe-detect-term.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fpipe-detect-term.rs?ref=d07e537fc3daaf73b7baf652e13ee2d36706258e", "patch": "@@ -0,0 +1,30 @@\n+// Make sure that we can detect when one end of the pipe is closed.\n+\n+// xfail-pretty\n+\n+use std;\n+import std::timer::sleep;\n+import std::uv;\n+\n+import pipes::{recv};\n+\n+proto! oneshot {\n+    waiting:send {\n+        signal -> signaled\n+    }\n+\n+    signaled:send { }\n+}\n+\n+fn main() {\n+    let iotask = uv::global_loop::get();\n+    \n+    let c = pipes::spawn_service(oneshot::init, |p| { \n+        alt recv(p) {\n+          some(*) { fail }\n+          none { }\n+        }\n+    });\n+\n+    sleep(iotask, 1000);\n+}"}]}