{"sha": "8f4c6b039d49cbba6a1122043fac5fd29fde92ba", "node_id": "C_kwDOAAsO6NoAKDhmNGM2YjAzOWQ0OWNiYmE2YTExMjIwNDNmYWM1ZmQyOWZkZTkyYmE", "commit": {"author": {"name": "Felix S. Klock II", "email": "pnkfelix@pnkfx.org", "date": "2022-03-11T21:57:34Z"}, "committer": {"name": "Felix S. Klock II", "email": "pnkfelix@pnkfx.org", "date": "2022-03-11T21:57:34Z"}, "message": "run rust-fix in amputate-span.rs. (Thanks to ekuber for pushing me to do this.)", "tree": {"sha": "3974a7da08620892e62858d7b0729af29efc478c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3974a7da08620892e62858d7b0729af29efc478c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8f4c6b039d49cbba6a1122043fac5fd29fde92ba", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8f4c6b039d49cbba6a1122043fac5fd29fde92ba", "html_url": "https://github.com/rust-lang/rust/commit/8f4c6b039d49cbba6a1122043fac5fd29fde92ba", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8f4c6b039d49cbba6a1122043fac5fd29fde92ba/comments", "author": {"login": "pnkfelix", "id": 173127, "node_id": "MDQ6VXNlcjE3MzEyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/173127?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pnkfelix", "html_url": "https://github.com/pnkfelix", "followers_url": "https://api.github.com/users/pnkfelix/followers", "following_url": "https://api.github.com/users/pnkfelix/following{/other_user}", "gists_url": "https://api.github.com/users/pnkfelix/gists{/gist_id}", "starred_url": "https://api.github.com/users/pnkfelix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pnkfelix/subscriptions", "organizations_url": "https://api.github.com/users/pnkfelix/orgs", "repos_url": "https://api.github.com/users/pnkfelix/repos", "events_url": "https://api.github.com/users/pnkfelix/events{/privacy}", "received_events_url": "https://api.github.com/users/pnkfelix/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pnkfelix", "id": 173127, "node_id": "MDQ6VXNlcjE3MzEyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/173127?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pnkfelix", "html_url": "https://github.com/pnkfelix", "followers_url": "https://api.github.com/users/pnkfelix/followers", "following_url": "https://api.github.com/users/pnkfelix/following{/other_user}", "gists_url": "https://api.github.com/users/pnkfelix/gists{/gist_id}", "starred_url": "https://api.github.com/users/pnkfelix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pnkfelix/subscriptions", "organizations_url": "https://api.github.com/users/pnkfelix/orgs", "repos_url": "https://api.github.com/users/pnkfelix/repos", "events_url": "https://api.github.com/users/pnkfelix/events{/privacy}", "received_events_url": "https://api.github.com/users/pnkfelix/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4a0c2b2aba04f07b4351e3be93fb48460bf20dba", "url": "https://api.github.com/repos/rust-lang/rust/commits/4a0c2b2aba04f07b4351e3be93fb48460bf20dba", "html_url": "https://github.com/rust-lang/rust/commit/4a0c2b2aba04f07b4351e3be93fb48460bf20dba"}], "stats": {"total": 75, "additions": 73, "deletions": 2}, "files": [{"sha": "1afc3501a327779f6b6a902e0eab50bcb1979395", "filename": "src/test/ui/proc-macro/amputate-span.fixed", "status": "added", "additions": 69, "deletions": 0, "changes": 69, "blob_url": "https://github.com/rust-lang/rust/blob/8f4c6b039d49cbba6a1122043fac5fd29fde92ba/src%2Ftest%2Fui%2Fproc-macro%2Famputate-span.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/8f4c6b039d49cbba6a1122043fac5fd29fde92ba/src%2Ftest%2Fui%2Fproc-macro%2Famputate-span.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fproc-macro%2Famputate-span.fixed?ref=8f4c6b039d49cbba6a1122043fac5fd29fde92ba", "patch": "@@ -0,0 +1,69 @@\n+// aux-build:amputate-span.rs\n+// run-rustfix\n+// edition:2018\n+// compile-flags: --extern amputate_span\n+\n+// This test has been crafted to ensure the following things:\n+//\n+// 1. There's a resolution error that prompts the compiler to suggest\n+//    adding a `use` item.\n+//\n+// 2. There are no `use` or `extern crate` items in the source\n+//    code. In fact, there is only one item, the `fn main`\n+//    declaration.\n+//\n+// 3. The single `fn main` declaration has an attribute attached to it\n+//    that just deletes the first token from the given item.\n+//\n+// You need all of these conditions to hold in order to replicate the\n+// scenario that yielded issue 87613, where the compiler's suggestion\n+// looks like:\n+//\n+// ```\n+// help: consider importing this struct\n+//    |\n+// 47 | hey */ async use std::process::Command;\n+//    |              ++++++++++++++++++++++++++\n+// ```\n+//\n+// The first condition is necessary to force the compiler issue a\n+// suggestion. The second condition is necessary to force the\n+// suggestion to be issued at a span associated with the sole\n+// `fn`-item of this crate. The third condition is necessary in order\n+// to yield the weird state where the associated span of the `fn`-item\n+// does not actually cover all of the original source code of the\n+// `fn`-item (which is why we are calling it an \"amputated\" span\n+// here).\n+//\n+// Note that satisfying conditions 2 and 3 requires the use of the\n+// `--extern` compile flag.\n+//\n+// You might ask yourself: What code would do such a thing?  The\n+// answer is: the #[tokio::main] attribute does *exactly* this (as\n+// well as injecting some other code into the `fn main` that it\n+// constructs).\n+\n+use std::process::Command;\n+\n+#[amputate_span::drop_first_token]\n+/* what the\n+hey */ async fn main() {\n+    Command::new(\"git\"); //~ ERROR [E0433]\n+}\n+\n+// (The /* ... */ comment in the above is not part of the original\n+// bug. It is just meant to illustrate one particular facet of the\n+// original non-ideal behavior, where we were transcribing the\n+// trailing comment as part of the emitted suggestion, for better or\n+// for worse.)\n+\n+#[allow(dead_code)]\n+mod inner {\n+    use std::process::Command;\n+\n+#[amputate_span::drop_first_token]\n+        /* another interesting\n+    case */ async fn foo() {\n+        Command::new(\"git\"); //~ ERROR [E0433]\n+    }\n+}"}, {"sha": "894a06dd5f6610dd89477518872f44ec99e01b17", "filename": "src/test/ui/proc-macro/amputate-span.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8f4c6b039d49cbba6a1122043fac5fd29fde92ba/src%2Ftest%2Fui%2Fproc-macro%2Famputate-span.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8f4c6b039d49cbba6a1122043fac5fd29fde92ba/src%2Ftest%2Fui%2Fproc-macro%2Famputate-span.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fproc-macro%2Famputate-span.rs?ref=8f4c6b039d49cbba6a1122043fac5fd29fde92ba", "patch": "@@ -1,4 +1,5 @@\n // aux-build:amputate-span.rs\n+// run-rustfix\n // edition:2018\n // compile-flags: --extern amputate_span\n \n@@ -54,6 +55,7 @@ hey */ async fn main() {\n // trailing comment as part of the emitted suggestion, for better or\n // for worse.)\n \n+#[allow(dead_code)]\n mod inner {\n     #[amputate_span::drop_first_token]\n         /* another interesting"}, {"sha": "9553ba3da5428ee91217f36a8daf186fef9411e0", "filename": "src/test/ui/proc-macro/amputate-span.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/8f4c6b039d49cbba6a1122043fac5fd29fde92ba/src%2Ftest%2Fui%2Fproc-macro%2Famputate-span.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/8f4c6b039d49cbba6a1122043fac5fd29fde92ba/src%2Ftest%2Fui%2Fproc-macro%2Famputate-span.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fproc-macro%2Famputate-span.stderr?ref=8f4c6b039d49cbba6a1122043fac5fd29fde92ba", "patch": "@@ -1,5 +1,5 @@\n error[E0433]: failed to resolve: use of undeclared type `Command`\n-  --> $DIR/amputate-span.rs:48:5\n+  --> $DIR/amputate-span.rs:49:5\n    |\n LL |     Command::new(\"git\");\n    |     ^^^^^^^ not found in this scope\n@@ -10,7 +10,7 @@ LL | use std::process::Command;\n    |\n \n error[E0433]: failed to resolve: use of undeclared type `Command`\n-  --> $DIR/amputate-span.rs:61:9\n+  --> $DIR/amputate-span.rs:63:9\n    |\n LL |         Command::new(\"git\");\n    |         ^^^^^^^ not found in this scope"}]}