{"sha": "168b00fbba264346f24f770aea0e03c5c3bb3200", "node_id": "C_kwDOAAsO6NoAKDE2OGIwMGZiYmEyNjQzNDZmMjRmNzcwYWVhMGUwM2M1YzNiYjMyMDA", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2021-09-21T12:56:37Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-09-21T12:56:37Z"}, "message": "Merge #10303\n\n10303: internal: Add a mirror function-like proc-macro expander for tests r=Veykril a=Veykril\n\nbors r+\n\nCo-authored-by: Lukas Wirth <lukastw97@gmail.com>", "tree": {"sha": "30bf88292fdd8d67a196bbe503ad9c2f18ea039a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/30bf88292fdd8d67a196bbe503ad9c2f18ea039a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/168b00fbba264346f24f770aea0e03c5c3bb3200", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJhSdaFCRBK7hj4Ov3rIwAAvacIAEPIPYGEGMZ9M5WXYdtxUbnz\nsnc27/7t9mcbZGuE2cvUnEDmKE36JLLUs5iiM/HQ/nCcy2ba/SMhpX9Y9oR4zn2Z\n1dbmV161vb+HPUvbZrcG6/fXvcvlyh0yhZWPBhyzxs6oRxF73b1yCR1j6tJRP0eP\nfQqKap6Fmw9qUaMNYWoUN7YSDSPPJl2SYyhRBg0iMD1s0cNIttsruWGeLPkU+9q8\nWIRWmi5F3kUsFCZxN/njcxwghAZnbOR3VG0bWvZu9tTTe8qfxomJX2rKukIQaMKq\nrwgL0PvS4UvigWeRci80HhyXgLjD2TZlfHGdVkVY+zfVHmb5am8i27cWj7JqliI=\n=370F\n-----END PGP SIGNATURE-----\n", "payload": "tree 30bf88292fdd8d67a196bbe503ad9c2f18ea039a\nparent 063df5a4823a98c69d47f825d1741da13fe3beed\nparent ba84b91e7813762fa615544744d3c6139290f34c\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1632228997 +0000\ncommitter GitHub <noreply@github.com> 1632228997 +0000\n\nMerge #10303\n\n10303: internal: Add a mirror function-like proc-macro expander for tests r=Veykril a=Veykril\n\nbors r+\n\nCo-authored-by: Lukas Wirth <lukastw97@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/168b00fbba264346f24f770aea0e03c5c3bb3200", "html_url": "https://github.com/rust-lang/rust/commit/168b00fbba264346f24f770aea0e03c5c3bb3200", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/168b00fbba264346f24f770aea0e03c5c3bb3200/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "063df5a4823a98c69d47f825d1741da13fe3beed", "url": "https://api.github.com/repos/rust-lang/rust/commits/063df5a4823a98c69d47f825d1741da13fe3beed", "html_url": "https://github.com/rust-lang/rust/commit/063df5a4823a98c69d47f825d1741da13fe3beed"}, {"sha": "ba84b91e7813762fa615544744d3c6139290f34c", "url": "https://api.github.com/repos/rust-lang/rust/commits/ba84b91e7813762fa615544744d3c6139290f34c", "html_url": "https://github.com/rust-lang/rust/commit/ba84b91e7813762fa615544744d3c6139290f34c"}], "stats": {"total": 55, "additions": 45, "deletions": 10}, "files": [{"sha": "27be3746b71a3770ec9444c79390206c24c8b97c", "filename": "crates/base_db/src/fixture.rs", "status": "modified", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/rust-lang/rust/blob/168b00fbba264346f24f770aea0e03c5c3bb3200/crates%2Fbase_db%2Fsrc%2Ffixture.rs", "raw_url": "https://github.com/rust-lang/rust/raw/168b00fbba264346f24f770aea0e03c5c3bb3200/crates%2Fbase_db%2Fsrc%2Ffixture.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fbase_db%2Fsrc%2Ffixture.rs?ref=168b00fbba264346f24f770aea0e03c5c3bb3200", "patch": "@@ -262,6 +262,10 @@ pub fn identity(_attr: TokenStream, item: TokenStream) -> TokenStream {\n pub fn input_replace(attr: TokenStream, _item: TokenStream) -> TokenStream {\n     attr\n }\n+#[proc_macro]\n+pub fn mirror(input: TokenStream) -> TokenStream {\n+    input\n+}\n \"#;\n     let proc_macros = std::array::IntoIter::new([\n         ProcMacro {\n@@ -274,6 +278,11 @@ pub fn input_replace(attr: TokenStream, _item: TokenStream) -> TokenStream {\n             kind: crate::ProcMacroKind::Attr,\n             expander: Arc::new(AttributeInputReplaceProcMacroExpander),\n         },\n+        ProcMacro {\n+            name: \"mirror\".into(),\n+            kind: crate::ProcMacroKind::FuncLike,\n+            expander: Arc::new(MirrorProcMacroExpander),\n+        },\n     ])\n     .filter(|pm| proc_macros.iter().any(|name| name == pm.name))\n     .collect();\n@@ -348,3 +357,28 @@ impl ProcMacroExpander for AttributeInputReplaceProcMacroExpander {\n             .ok_or_else(|| ProcMacroExpansionError::Panic(\"Expected attribute input\".into()))\n     }\n }\n+\n+#[derive(Debug)]\n+struct MirrorProcMacroExpander;\n+impl ProcMacroExpander for MirrorProcMacroExpander {\n+    fn expand(\n+        &self,\n+        input: &Subtree,\n+        _: Option<&Subtree>,\n+        _: &Env,\n+    ) -> Result<Subtree, ProcMacroExpansionError> {\n+        fn traverse(input: &Subtree) -> Subtree {\n+            let mut res = Subtree::default();\n+            res.delimiter = input.delimiter;\n+            for tt in input.token_trees.iter().rev() {\n+                let tt = match tt {\n+                    tt::TokenTree::Leaf(leaf) => tt::TokenTree::Leaf(leaf.clone()),\n+                    tt::TokenTree::Subtree(sub) => tt::TokenTree::Subtree(traverse(sub)),\n+                };\n+                res.token_trees.push(tt);\n+            }\n+            res\n+        }\n+        Ok(traverse(input))\n+    }\n+}"}, {"sha": "16760c24debd5e461775db520a7e616284dcb02f", "filename": "crates/ide/src/syntax_highlighting/test_data/highlighting.html", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/168b00fbba264346f24f770aea0e03c5c3bb3200/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Ftest_data%2Fhighlighting.html", "raw_url": "https://github.com/rust-lang/rust/raw/168b00fbba264346f24f770aea0e03c5c3bb3200/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Ftest_data%2Fhighlighting.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Ftest_data%2Fhighlighting.html?ref=168b00fbba264346f24f770aea0e03c5c3bb3200", "patch": "@@ -64,10 +64,11 @@\n     <span class=\"keyword\">pub</span> <span class=\"keyword\">trait</span> <span class=\"trait declaration public\">Fn</span><span class=\"angle\">&lt;</span><span class=\"type_param declaration\">Args</span><span class=\"angle\">&gt;</span><span class=\"colon\">:</span> <span class=\"trait public\">FnMut</span><span class=\"angle\">&lt;</span><span class=\"type_param\">Args</span><span class=\"angle\">&gt;</span> <span class=\"brace\">{</span><span class=\"brace\">}</span>\n <span class=\"brace\">}</span>\n \n-\n-<span class=\"keyword\">struct</span> <span class=\"struct declaration\">Foo</span> <span class=\"brace\">{</span>\n-    <span class=\"keyword\">pub</span> <span class=\"field declaration public\">x</span><span class=\"colon\">:</span> <span class=\"builtin_type\">i32</span><span class=\"comma\">,</span>\n-    <span class=\"keyword\">pub</span> <span class=\"field declaration public\">y</span><span class=\"colon\">:</span> <span class=\"builtin_type\">i32</span><span class=\"comma\">,</span>\n+proc_macros::<span class=\"macro\">mirror!</span> <span class=\"brace\">{</span>\n+    <span class=\"brace\">{</span>\n+        <span class=\"comma\">,</span><span class=\"builtin_type\">i32</span> <span class=\"colon\">:</span><span class=\"field declaration public\">x</span> <span class=\"keyword\">pub</span>\n+        <span class=\"comma\">,</span><span class=\"builtin_type\">i32</span> <span class=\"colon\">:</span><span class=\"field declaration public\">y</span> <span class=\"keyword\">pub</span>\n+    <span class=\"brace\">}</span> <span class=\"struct declaration\">Foo</span> <span class=\"keyword\">struct</span>\n <span class=\"brace\">}</span>\n \n <span class=\"keyword\">trait</span> <span class=\"trait declaration\">Bar</span> <span class=\"keyword\">where</span> <span class=\"type_param\">Self</span><span class=\"colon\">:</span> <span class=\"brace\">{</span>"}, {"sha": "9fc730e007716ceb0347553deecfafefab023923", "filename": "crates/ide/src/syntax_highlighting/tests.rs", "status": "modified", "additions": 6, "deletions": 5, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/168b00fbba264346f24f770aea0e03c5c3bb3200/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/168b00fbba264346f24f770aea0e03c5c3bb3200/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Ftests.rs?ref=168b00fbba264346f24f770aea0e03c5c3bb3200", "patch": "@@ -10,7 +10,7 @@ use crate::{fixture, FileRange, HlTag, TextRange};\n fn test_highlighting() {\n     check_highlighting(\n         r#\"\n-//- proc_macros: identity\n+//- proc_macros: identity, mirror\n //- /main.rs crate:main deps:foo\n use inner::{self as inner_mod};\n mod inner {}\n@@ -36,10 +36,11 @@ pub mod ops {\n     pub trait Fn<Args>: FnMut<Args> {}\n }\n \n-\n-struct Foo {\n-    pub x: i32,\n-    pub y: i32,\n+proc_macros::mirror! {\n+    {\n+        ,i32 :x pub\n+        ,i32 :y pub\n+    } Foo struct\n }\n \n trait Bar where Self: {"}, {"sha": "aef03e3238e13120472af198665f8de5b9617ecc", "filename": "crates/ide_assists/src/handlers/convert_iter_for_each_to_for.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/168b00fbba264346f24f770aea0e03c5c3bb3200/crates%2Fide_assists%2Fsrc%2Fhandlers%2Fconvert_iter_for_each_to_for.rs", "raw_url": "https://github.com/rust-lang/rust/raw/168b00fbba264346f24f770aea0e03c5c3bb3200/crates%2Fide_assists%2Fsrc%2Fhandlers%2Fconvert_iter_for_each_to_for.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_assists%2Fsrc%2Fhandlers%2Fconvert_iter_for_each_to_for.rs?ref=168b00fbba264346f24f770aea0e03c5c3bb3200", "patch": "@@ -32,7 +32,6 @@ use crate::{AssistContext, AssistId, AssistKind, Assists};\n //     }\n // }\n // ```\n-\n pub(crate) fn convert_iter_for_each_to_for(acc: &mut Assists, ctx: &AssistContext) -> Option<()> {\n     let method = ctx.find_node_at_offset::<ast::MethodCallExpr>()?;\n "}]}