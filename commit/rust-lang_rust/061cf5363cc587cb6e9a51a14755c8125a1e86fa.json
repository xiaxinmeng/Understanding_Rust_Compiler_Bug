{"sha": "061cf5363cc587cb6e9a51a14755c8125a1e86fa", "node_id": "MDY6Q29tbWl0NzI0NzEyOjA2MWNmNTM2M2NjNTg3Y2I2ZTlhNTFhMTQ3NTVjODEyNWExZTg2ZmE=", "commit": {"author": {"name": "mbartlett21", "email": "29034492+mbartlett21@users.noreply.github.com", "date": "2020-10-20T04:09:01Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-10-20T04:09:01Z"}, "message": "Wrapping intrinsics update link\n\nNow refers to `wrapping_*`, not `checked_*` for wrapping intrinsics.", "tree": {"sha": "8b126d66134bdf5bc7510baf24f209444b96d6ee", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8b126d66134bdf5bc7510baf24f209444b96d6ee"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/061cf5363cc587cb6e9a51a14755c8125a1e86fa", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJfjmLdCRBK7hj4Ov3rIwAAdHIIAFOzwVmdlXpf3Ba23Ej8u996\njkx12sTTThLkM+I8hDE6xs2RiGnuF2y8vpuLQgzsEqf2IYuXAE4R+2Tbvdz+xGPX\nOoGXwGsC9UEabRFlBqkDIEO9AXDLIdAz64/F/d1FFkSf+OCbVNrKdgeIYaYguAih\nYXmtKS4WHeNfz1xFyzlrZOWhoOg+W1LOue17BEBlPjTvqCP+8eCApoXubuK3rh10\n6clMDx+5JBHbxI9C+XioDFGN0BvdFYGBvrIymFENp4ru5Z0ZBQb6wGog9ZKPGweB\n2QsqPHbKury1vY87H4TPpnT51pECCkNJrDeuGy7/VNzpOybMnPJgTDqg89RVLeM=\n=5Kxc\n-----END PGP SIGNATURE-----\n", "payload": "tree 8b126d66134bdf5bc7510baf24f209444b96d6ee\nparent a85e94927622665a9e9022de0d33a890a2e32d43\nauthor mbartlett21 <29034492+mbartlett21@users.noreply.github.com> 1603166941 +1000\ncommitter GitHub <noreply@github.com> 1603166941 +1000\n\nWrapping intrinsics update link\n\nNow refers to `wrapping_*`, not `checked_*` for wrapping intrinsics."}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/061cf5363cc587cb6e9a51a14755c8125a1e86fa", "html_url": "https://github.com/rust-lang/rust/commit/061cf5363cc587cb6e9a51a14755c8125a1e86fa", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/061cf5363cc587cb6e9a51a14755c8125a1e86fa/comments", "author": {"login": "mbartlett21", "id": 29034492, "node_id": "MDQ6VXNlcjI5MDM0NDky", "avatar_url": "https://avatars.githubusercontent.com/u/29034492?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mbartlett21", "html_url": "https://github.com/mbartlett21", "followers_url": "https://api.github.com/users/mbartlett21/followers", "following_url": "https://api.github.com/users/mbartlett21/following{/other_user}", "gists_url": "https://api.github.com/users/mbartlett21/gists{/gist_id}", "starred_url": "https://api.github.com/users/mbartlett21/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mbartlett21/subscriptions", "organizations_url": "https://api.github.com/users/mbartlett21/orgs", "repos_url": "https://api.github.com/users/mbartlett21/repos", "events_url": "https://api.github.com/users/mbartlett21/events{/privacy}", "received_events_url": "https://api.github.com/users/mbartlett21/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a85e94927622665a9e9022de0d33a890a2e32d43", "url": "https://api.github.com/repos/rust-lang/rust/commits/a85e94927622665a9e9022de0d33a890a2e32d43", "html_url": "https://github.com/rust-lang/rust/commit/a85e94927622665a9e9022de0d33a890a2e32d43"}], "stats": {"total": 12, "additions": 6, "deletions": 6}, "files": [{"sha": "dbc7921a62a674a319abf0811213c72f2e4f6107", "filename": "library/core/src/intrinsics.rs", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/061cf5363cc587cb6e9a51a14755c8125a1e86fa/library%2Fcore%2Fsrc%2Fintrinsics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/061cf5363cc587cb6e9a51a14755c8125a1e86fa/library%2Fcore%2Fsrc%2Fintrinsics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fintrinsics.rs?ref=061cf5363cc587cb6e9a51a14755c8125a1e86fa", "patch": "@@ -1660,22 +1660,22 @@ extern \"rust-intrinsic\" {\n     /// Returns (a + b) mod 2<sup>N</sup>, where N is the width of T in bits.\n     ///\n     /// The stabilized versions of this intrinsic are available on the integer\n-    /// primitives via the `checked_add` method. For example,\n-    /// [`u32::checked_add`]\n+    /// primitives via the `wrapping_add` method. For example,\n+    /// [`u32::wrapping_add`]\n     #[rustc_const_stable(feature = \"const_int_wrapping\", since = \"1.40.0\")]\n     pub fn wrapping_add<T: Copy>(a: T, b: T) -> T;\n     /// Returns (a - b) mod 2<sup>N</sup>, where N is the width of T in bits.\n     ///\n     /// The stabilized versions of this intrinsic are available on the integer\n-    /// primitives via the `checked_sub` method. For example,\n-    /// [`u32::checked_sub`]\n+    /// primitives via the `wrapping_sub` method. For example,\n+    /// [`u32::wrapping_sub`]\n     #[rustc_const_stable(feature = \"const_int_wrapping\", since = \"1.40.0\")]\n     pub fn wrapping_sub<T: Copy>(a: T, b: T) -> T;\n     /// Returns (a * b) mod 2<sup>N</sup>, where N is the width of T in bits.\n     ///\n     /// The stabilized versions of this intrinsic are available on the integer\n-    /// primitives via the `checked_mul` method. For example,\n-    /// [`u32::checked_mul`]\n+    /// primitives via the `wrapping_mul` method. For example,\n+    /// [`u32::wrapping_mul`]\n     #[rustc_const_stable(feature = \"const_int_wrapping\", since = \"1.40.0\")]\n     pub fn wrapping_mul<T: Copy>(a: T, b: T) -> T;\n "}]}