{"sha": "be465b0b85746b2f56dc4bb1842e603e8489a0f3", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJlNDY1YjBiODU3NDZiMmY1NmRjNGJiMTg0MmU2MDNlODQ4OWEwZjM=", "commit": {"author": {"name": "David Wood", "email": "david@davidtw.co", "date": "2018-01-17T10:01:57Z"}, "committer": {"name": "David Wood", "email": "david@davidtw.co", "date": "2018-01-27T11:46:28Z"}, "message": "next_point now handles creating spans over multibyte characters.", "tree": {"sha": "52cde4dfcb54ad8c5795521140fa5a3346c8e6dd", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/52cde4dfcb54ad8c5795521140fa5a3346c8e6dd"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/be465b0b85746b2f56dc4bb1842e603e8489a0f3", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEWwgxPGhT5b/6kagXAXYLT59T8VQFAlpsZpQACgkQAXYLT59T\n8VTrFg/6A+p4TlkH+ySwGMXrg1iHMGum5Eb3cUuoUel17/fnKwx51hEsqOXeOLiB\ntyqWbrqdoIKFyb5znceexJ9e6xUXv64bszQ+kjtI7iQJDnS/FpHkOAFjHyyZ0Unz\nx644Y/aFIUt0DgkE39KkN8NTXNcE8ouHAdzVY2khygbmrh8XqsfBBPY3c6T6lqlX\n1VqSRXN/FM/ZrgOO+HAC9SHyChwKf8XG+0Mq1Mfj30xCl3x6Uzi2ZmkMMEL9WAbZ\nVJwfTodqVAbKbOl3K7onEAUzJsVAAldMndN40Dq+34vFXIk692ANJjxfTahyKyFh\nsJeyc1v3G2VkeDDJ7yKVi+EoYgyX71aNFk672JMc1l0RuWFv2kJj/smYn029FL8o\nlnsrDggIA9sD9LESXLIVHJJrjFgv7FYlsNc2pDklAjxOuxdxlNK6ZQckLNR0GqMv\nzeD8O3LWjMe7OB16oUfcJkV/4u/dTrltEUPe7ngcYbhF4kNFo5xkCa9OtjcVcTar\nDhiiovvyFp5rb4yS6726/UGI01F8XEBRSjho9OqlGA0/lBFTHZuJyPVdj+udvCUv\nD9nHuWm+FbJ0+sfGPfE1oba2oOcT5tqIELemsYs40Ae0Ea/m2jrRbD7KOlVBk+D4\nFJz0iGXqyVDGii7i+mOEHNpQtIgqJUkzkpw9TLB5RHMO7UvreT8=\n=4GQZ\n-----END PGP SIGNATURE-----", "payload": "tree 52cde4dfcb54ad8c5795521140fa5a3346c8e6dd\nparent 62356471b3746012df74db22479b03ad1f6ab8ab\nauthor David Wood <david@davidtw.co> 1516183317 +0000\ncommitter David Wood <david@davidtw.co> 1517053588 +0000\n\nnext_point now handles creating spans over multibyte characters.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/be465b0b85746b2f56dc4bb1842e603e8489a0f3", "html_url": "https://github.com/rust-lang/rust/commit/be465b0b85746b2f56dc4bb1842e603e8489a0f3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/be465b0b85746b2f56dc4bb1842e603e8489a0f3/comments", "author": {"login": "davidtwco", "id": 1295100, "node_id": "MDQ6VXNlcjEyOTUxMDA=", "avatar_url": "https://avatars.githubusercontent.com/u/1295100?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidtwco", "html_url": "https://github.com/davidtwco", "followers_url": "https://api.github.com/users/davidtwco/followers", "following_url": "https://api.github.com/users/davidtwco/following{/other_user}", "gists_url": "https://api.github.com/users/davidtwco/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidtwco/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidtwco/subscriptions", "organizations_url": "https://api.github.com/users/davidtwco/orgs", "repos_url": "https://api.github.com/users/davidtwco/repos", "events_url": "https://api.github.com/users/davidtwco/events{/privacy}", "received_events_url": "https://api.github.com/users/davidtwco/received_events", "type": "User", "site_admin": false}, "committer": {"login": "davidtwco", "id": 1295100, "node_id": "MDQ6VXNlcjEyOTUxMDA=", "avatar_url": "https://avatars.githubusercontent.com/u/1295100?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidtwco", "html_url": "https://github.com/davidtwco", "followers_url": "https://api.github.com/users/davidtwco/followers", "following_url": "https://api.github.com/users/davidtwco/following{/other_user}", "gists_url": "https://api.github.com/users/davidtwco/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidtwco/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidtwco/subscriptions", "organizations_url": "https://api.github.com/users/davidtwco/orgs", "repos_url": "https://api.github.com/users/davidtwco/repos", "events_url": "https://api.github.com/users/davidtwco/events{/privacy}", "received_events_url": "https://api.github.com/users/davidtwco/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "62356471b3746012df74db22479b03ad1f6ab8ab", "url": "https://api.github.com/repos/rust-lang/rust/commits/62356471b3746012df74db22479b03ad1f6ab8ab", "html_url": "https://github.com/rust-lang/rust/commit/62356471b3746012df74db22479b03ad1f6ab8ab"}], "stats": {"total": 14, "additions": 9, "deletions": 5}, "files": [{"sha": "cfb891f0faaf1b63a239488dda0fcf868c8fa7d6", "filename": "src/libsyntax/codemap.rs", "status": "modified", "additions": 9, "deletions": 5, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/be465b0b85746b2f56dc4bb1842e603e8489a0f3/src%2Flibsyntax%2Fcodemap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/be465b0b85746b2f56dc4bb1842e603e8489a0f3/src%2Flibsyntax%2Fcodemap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fcodemap.rs?ref=be465b0b85746b2f56dc4bb1842e603e8489a0f3", "patch": "@@ -621,13 +621,17 @@ impl CodeMap {\n \n     /// Returns a new span representing the next character after the end-point of this span\n     pub fn next_point(&self, sp: Span) -> Span {\n-        let pos = sp.lo().0;\n+        let start_of_next_point = sp.hi().0;\n \n         let width = self.find_width_of_character_at_span(sp, true);\n-        let corrected_next_position = pos.checked_add(width).unwrap_or(pos);\n-\n-        let next_point = BytePos(cmp::max(sp.hi().0, corrected_next_position));\n-        Span::new(next_point, next_point, sp.ctxt())\n+        // If the width is 1, then the next span should point to the same `lo` and `hi`. However,\n+        // in the case of a multibyte character, where the width != 1, the next span should\n+        // span multiple bytes to include the whole character.\n+        let end_of_next_point = start_of_next_point.checked_add(\n+            width - 1).unwrap_or(start_of_next_point);\n+\n+        let end_of_next_point = BytePos(cmp::max(sp.lo().0 + 1, end_of_next_point));\n+        Span::new(BytePos(start_of_next_point), end_of_next_point, sp.ctxt())\n     }\n \n     /// Finds the width of a character, either before or after the provided span."}]}