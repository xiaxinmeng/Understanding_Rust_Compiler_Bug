{"sha": "715b8852e4a94875683c41771e45043d579065ce", "node_id": "MDY6Q29tbWl0NzI0NzEyOjcxNWI4ODUyZTRhOTQ4NzU2ODNjNDE3NzFlNDUwNDNkNTc5MDY1Y2U=", "commit": {"author": {"name": "ljedrz", "email": "ljedrz@gmail.com", "date": "2018-07-11T15:39:49Z"}, "committer": {"name": "ljedrz", "email": "ljedrz@gmail.com", "date": "2018-07-11T15:39:49Z"}, "message": "Deny bare trait objects in in src/librustc_codegen_utils", "tree": {"sha": "e62f027e0ca38849a84742c0fbf57ee3f6d8534d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e62f027e0ca38849a84742c0fbf57ee3f6d8534d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/715b8852e4a94875683c41771e45043d579065ce", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/715b8852e4a94875683c41771e45043d579065ce", "html_url": "https://github.com/rust-lang/rust/commit/715b8852e4a94875683c41771e45043d579065ce", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/715b8852e4a94875683c41771e45043d579065ce/comments", "author": {"login": "ljedrz", "id": 3750347, "node_id": "MDQ6VXNlcjM3NTAzNDc=", "avatar_url": "https://avatars.githubusercontent.com/u/3750347?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ljedrz", "html_url": "https://github.com/ljedrz", "followers_url": "https://api.github.com/users/ljedrz/followers", "following_url": "https://api.github.com/users/ljedrz/following{/other_user}", "gists_url": "https://api.github.com/users/ljedrz/gists{/gist_id}", "starred_url": "https://api.github.com/users/ljedrz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ljedrz/subscriptions", "organizations_url": "https://api.github.com/users/ljedrz/orgs", "repos_url": "https://api.github.com/users/ljedrz/repos", "events_url": "https://api.github.com/users/ljedrz/events{/privacy}", "received_events_url": "https://api.github.com/users/ljedrz/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ljedrz", "id": 3750347, "node_id": "MDQ6VXNlcjM3NTAzNDc=", "avatar_url": "https://avatars.githubusercontent.com/u/3750347?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ljedrz", "html_url": "https://github.com/ljedrz", "followers_url": "https://api.github.com/users/ljedrz/followers", "following_url": "https://api.github.com/users/ljedrz/following{/other_user}", "gists_url": "https://api.github.com/users/ljedrz/gists{/gist_id}", "starred_url": "https://api.github.com/users/ljedrz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ljedrz/subscriptions", "organizations_url": "https://api.github.com/users/ljedrz/orgs", "repos_url": "https://api.github.com/users/ljedrz/repos", "events_url": "https://api.github.com/users/ljedrz/events{/privacy}", "received_events_url": "https://api.github.com/users/ljedrz/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "11432ba98043ee0ade961bdedb4b785bf06c086e", "url": "https://api.github.com/repos/rust-lang/rust/commits/11432ba98043ee0ade961bdedb4b785bf06c086e", "html_url": "https://github.com/rust-lang/rust/commit/11432ba98043ee0ade961bdedb4b785bf06c086e"}], "stats": {"total": 25, "additions": 13, "deletions": 12}, "files": [{"sha": "3f230dd5d451b5545f241a6d8a9d5ce3ce0a69e5", "filename": "src/librustc_codegen_utils/codegen_backend.rs", "status": "modified", "additions": 12, "deletions": 12, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/715b8852e4a94875683c41771e45043d579065ce/src%2Flibrustc_codegen_utils%2Fcodegen_backend.rs", "raw_url": "https://github.com/rust-lang/rust/raw/715b8852e4a94875683c41771e45043d579065ce/src%2Flibrustc_codegen_utils%2Fcodegen_backend.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_utils%2Fcodegen_backend.rs?ref=715b8852e4a94875683c41771e45043d579065ce", "patch": "@@ -56,23 +56,23 @@ pub trait CodegenBackend {\n     fn print_version(&self) {}\n     fn diagnostics(&self) -> &[(&'static str, &'static str)] { &[] }\n \n-    fn metadata_loader(&self) -> Box<MetadataLoader + Sync>;\n+    fn metadata_loader(&self) -> Box<dyn MetadataLoader + Sync>;\n     fn provide(&self, _providers: &mut Providers);\n     fn provide_extern(&self, _providers: &mut Providers);\n     fn codegen_crate<'a, 'tcx>(\n         &self,\n         tcx: TyCtxt<'a, 'tcx, 'tcx>,\n-        rx: mpsc::Receiver<Box<Any + Send>>\n-    ) -> Box<Any>;\n+        rx: mpsc::Receiver<Box<dyn Any + Send>>\n+    ) -> Box<dyn Any>;\n \n-    /// This is called on the returned `Box<Any>` from `codegen_backend`\n+    /// This is called on the returned `Box<dyn Any>` from `codegen_backend`\n     ///\n     /// # Panics\n     ///\n-    /// Panics when the passed `Box<Any>` was not returned by `codegen_backend`.\n+    /// Panics when the passed `Box<dyn Any>` was not returned by `codegen_backend`.\n     fn join_codegen_and_link(\n         &self,\n-        ongoing_codegen: Box<Any>,\n+        ongoing_codegen: Box<dyn Any>,\n         sess: &Session,\n         dep_graph: &DepGraph,\n         outputs: &OutputFilenames,\n@@ -105,7 +105,7 @@ pub struct OngoingCodegen {\n }\n \n impl MetadataOnlyCodegenBackend {\n-    pub fn new() -> Box<CodegenBackend> {\n+    pub fn new() -> Box<dyn CodegenBackend> {\n         box MetadataOnlyCodegenBackend(())\n     }\n }\n@@ -125,7 +125,7 @@ impl CodegenBackend for MetadataOnlyCodegenBackend {\n         }\n     }\n \n-    fn metadata_loader(&self) -> Box<MetadataLoader + Sync> {\n+    fn metadata_loader(&self) -> Box<dyn MetadataLoader + Sync> {\n         box NoLlvmMetadataLoader\n     }\n \n@@ -145,8 +145,8 @@ impl CodegenBackend for MetadataOnlyCodegenBackend {\n     fn codegen_crate<'a, 'tcx>(\n         &self,\n         tcx: TyCtxt<'a, 'tcx, 'tcx>,\n-        _rx: mpsc::Receiver<Box<Any + Send>>\n-    ) -> Box<Any> {\n+        _rx: mpsc::Receiver<Box<dyn Any + Send>>\n+    ) -> Box<dyn Any> {\n         use rustc_mir::monomorphize::item::MonoItem;\n \n         ::check_for_rustc_errors_attr(tcx);\n@@ -193,13 +193,13 @@ impl CodegenBackend for MetadataOnlyCodegenBackend {\n \n     fn join_codegen_and_link(\n         &self,\n-        ongoing_codegen: Box<Any>,\n+        ongoing_codegen: Box<dyn Any>,\n         sess: &Session,\n         _dep_graph: &DepGraph,\n         outputs: &OutputFilenames,\n     ) -> Result<(), CompileIncomplete> {\n         let ongoing_codegen = ongoing_codegen.downcast::<OngoingCodegen>()\n-            .expect(\"Expected MetadataOnlyCodegenBackend's OngoingCodegen, found Box<Any>\");\n+            .expect(\"Expected MetadataOnlyCodegenBackend's OngoingCodegen, found Box<dyn Any>\");\n         for &crate_type in sess.opts.crate_types.iter() {\n             if crate_type != CrateType::CrateTypeRlib && crate_type != CrateType::CrateTypeDylib {\n                 continue;"}, {"sha": "e9031007a4eedbdce4b6b6d50035c925c16adbc6", "filename": "src/librustc_codegen_utils/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/715b8852e4a94875683c41771e45043d579065ce/src%2Flibrustc_codegen_utils%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/715b8852e4a94875683c41771e45043d579065ce/src%2Flibrustc_codegen_utils%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_utils%2Flib.rs?ref=715b8852e4a94875683c41771e45043d579065ce", "patch": "@@ -20,6 +20,7 @@\n #![feature(box_syntax)]\n #![feature(custom_attribute)]\n #![allow(unused_attributes)]\n+#![deny(bare_trait_objects)]\n #![feature(quote)]\n #![feature(rustc_diagnostic_macros)]\n "}]}