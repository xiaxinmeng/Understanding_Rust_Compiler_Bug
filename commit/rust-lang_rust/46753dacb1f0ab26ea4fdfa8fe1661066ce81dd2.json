{"sha": "46753dacb1f0ab26ea4fdfa8fe1661066ce81dd2", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ2NzUzZGFjYjFmMGFiMjZlYTRmZGZhOGZlMTY2MTA2NmNlODFkZDI=", "commit": {"author": {"name": "Garming Sam", "email": "garming_sam@outlook.com", "date": "2015-05-12T13:32:12Z"}, "committer": {"name": "Garming Sam", "email": "garming_sam@outlook.com", "date": "2015-05-12T13:32:12Z"}, "message": "Record correct span for static mut items", "tree": {"sha": "35c6d68e96753fcab96b6471de3b66b760eec528", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/35c6d68e96753fcab96b6471de3b66b760eec528"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/46753dacb1f0ab26ea4fdfa8fe1661066ce81dd2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/46753dacb1f0ab26ea4fdfa8fe1661066ce81dd2", "html_url": "https://github.com/rust-lang/rust/commit/46753dacb1f0ab26ea4fdfa8fe1661066ce81dd2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/46753dacb1f0ab26ea4fdfa8fe1661066ce81dd2/comments", "author": {"login": "GSam", "id": 1924133, "node_id": "MDQ6VXNlcjE5MjQxMzM=", "avatar_url": "https://avatars.githubusercontent.com/u/1924133?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GSam", "html_url": "https://github.com/GSam", "followers_url": "https://api.github.com/users/GSam/followers", "following_url": "https://api.github.com/users/GSam/following{/other_user}", "gists_url": "https://api.github.com/users/GSam/gists{/gist_id}", "starred_url": "https://api.github.com/users/GSam/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GSam/subscriptions", "organizations_url": "https://api.github.com/users/GSam/orgs", "repos_url": "https://api.github.com/users/GSam/repos", "events_url": "https://api.github.com/users/GSam/events{/privacy}", "received_events_url": "https://api.github.com/users/GSam/received_events", "type": "User", "site_admin": false}, "committer": {"login": "GSam", "id": 1924133, "node_id": "MDQ6VXNlcjE5MjQxMzM=", "avatar_url": "https://avatars.githubusercontent.com/u/1924133?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GSam", "html_url": "https://github.com/GSam", "followers_url": "https://api.github.com/users/GSam/followers", "following_url": "https://api.github.com/users/GSam/following{/other_user}", "gists_url": "https://api.github.com/users/GSam/gists{/gist_id}", "starred_url": "https://api.github.com/users/GSam/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GSam/subscriptions", "organizations_url": "https://api.github.com/users/GSam/orgs", "repos_url": "https://api.github.com/users/GSam/repos", "events_url": "https://api.github.com/users/GSam/events{/privacy}", "received_events_url": "https://api.github.com/users/GSam/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "67dfc177f3c3236a73c7273dd0bf8be80bf1f5b0", "url": "https://api.github.com/repos/rust-lang/rust/commits/67dfc177f3c3236a73c7273dd0bf8be80bf1f5b0", "html_url": "https://github.com/rust-lang/rust/commit/67dfc177f3c3236a73c7273dd0bf8be80bf1f5b0"}], "stats": {"total": 8, "additions": 4, "deletions": 4}, "files": [{"sha": "89cda6d785f07f7a8f4a540d6b2ddd88cd8dc6ee", "filename": "src/librustc_trans/save/mod.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/46753dacb1f0ab26ea4fdfa8fe1661066ce81dd2/src%2Flibrustc_trans%2Fsave%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/46753dacb1f0ab26ea4fdfa8fe1661066ce81dd2/src%2Flibrustc_trans%2Fsave%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Fsave%2Fmod.rs?ref=46753dacb1f0ab26ea4fdfa8fe1661066ce81dd2", "patch": "@@ -520,12 +520,12 @@ impl <'l, 'tcx> DxrVisitor<'l, 'tcx> {\n         let qualname = format!(\"::{}\", self.analysis.ty_cx.map.path_to_string(item.id));\n \n         // If the variable is immutable, save the initialising expression.\n-        let value = match mt {\n-            ast::MutMutable => String::from_str(\"<mutable>\"),\n-            ast::MutImmutable => self.span.snippet(expr.span),\n+        let (value, keyword) = match mt {\n+            ast::MutMutable => (String::from_str(\"<mutable>\"), keywords::Mut),\n+            ast::MutImmutable => (self.span.snippet(expr.span), keywords::Static),\n         };\n \n-        let sub_span = self.span.sub_span_after_keyword(item.span, keywords::Static);\n+        let sub_span = self.span.sub_span_after_keyword(item.span, keyword);\n         self.fmt.static_str(item.span,\n                             sub_span,\n                             item.id,"}]}