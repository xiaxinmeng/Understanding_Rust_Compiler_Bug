{"sha": "c98d66cabf7c85431cf891e4987e07d388d18740", "node_id": "C_kwDOAAsO6NoAKGM5OGQ2NmNhYmY3Yzg1NDMxY2Y4OTFlNDk4N2UwN2QzODhkMTg3NDA", "commit": {"author": {"name": "Amanieu d'Antras", "email": "amanieu@gmail.com", "date": "2022-07-11T13:26:58Z"}, "committer": {"name": "Amanieu d'Antras", "email": "amanieu@gmail.com", "date": "2022-07-11T13:26:58Z"}, "message": "Keep unstable target features for asm feature checking\n\nInline assembly uses the target features to determine which registers\nare available on the current target. However it needs to be able to\naccess unstable target features for this.\n\nFixes #99071", "tree": {"sha": "a092d3898c863c05cbc5c11f37cbd667285a0817", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a092d3898c863c05cbc5c11f37cbd667285a0817"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c98d66cabf7c85431cf891e4987e07d388d18740", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c98d66cabf7c85431cf891e4987e07d388d18740", "html_url": "https://github.com/rust-lang/rust/commit/c98d66cabf7c85431cf891e4987e07d388d18740", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c98d66cabf7c85431cf891e4987e07d388d18740/comments", "author": {"login": "Amanieu", "id": 278509, "node_id": "MDQ6VXNlcjI3ODUwOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/278509?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Amanieu", "html_url": "https://github.com/Amanieu", "followers_url": "https://api.github.com/users/Amanieu/followers", "following_url": "https://api.github.com/users/Amanieu/following{/other_user}", "gists_url": "https://api.github.com/users/Amanieu/gists{/gist_id}", "starred_url": "https://api.github.com/users/Amanieu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Amanieu/subscriptions", "organizations_url": "https://api.github.com/users/Amanieu/orgs", "repos_url": "https://api.github.com/users/Amanieu/repos", "events_url": "https://api.github.com/users/Amanieu/events{/privacy}", "received_events_url": "https://api.github.com/users/Amanieu/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Amanieu", "id": 278509, "node_id": "MDQ6VXNlcjI3ODUwOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/278509?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Amanieu", "html_url": "https://github.com/Amanieu", "followers_url": "https://api.github.com/users/Amanieu/followers", "following_url": "https://api.github.com/users/Amanieu/following{/other_user}", "gists_url": "https://api.github.com/users/Amanieu/gists{/gist_id}", "starred_url": "https://api.github.com/users/Amanieu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Amanieu/subscriptions", "organizations_url": "https://api.github.com/users/Amanieu/orgs", "repos_url": "https://api.github.com/users/Amanieu/repos", "events_url": "https://api.github.com/users/Amanieu/events{/privacy}", "received_events_url": "https://api.github.com/users/Amanieu/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a513b2abae5f749d59117ced941097a64969c913", "url": "https://api.github.com/repos/rust-lang/rust/commits/a513b2abae5f749d59117ced941097a64969c913", "html_url": "https://github.com/rust-lang/rust/commit/a513b2abae5f749d59117ced941097a64969c913"}], "stats": {"total": 8, "additions": 4, "deletions": 4}, "files": [{"sha": "91c1fa6026c4870bee5d13c395f7bd4c64012d8c", "filename": "src/lib.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/c98d66cabf7c85431cf891e4987e07d388d18740/src%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c98d66cabf7c85431cf891e4987e07d388d18740/src%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flib.rs?ref=c98d66cabf7c85431cf891e4987e07d388d18740", "patch": "@@ -133,8 +133,8 @@ impl CodegenBackend for GccCodegenBackend {\n         )\n     }\n \n-    fn target_features(&self, sess: &Session) -> Vec<Symbol> {\n-        target_features(sess)\n+    fn target_features(&self, sess: &Session, allow_unstable: bool) -> Vec<Symbol> {\n+        target_features(sess, allow_unstable)\n     }\n }\n \n@@ -291,12 +291,12 @@ pub fn target_cpu(sess: &Session) -> &str {\n     }\n }\n \n-pub fn target_features(sess: &Session) -> Vec<Symbol> {\n+pub fn target_features(sess: &Session, allow_unstable: bool) -> Vec<Symbol> {\n     supported_target_features(sess)\n         .iter()\n         .filter_map(\n             |&(feature, gate)| {\n-                if sess.is_nightly_build() || gate.is_none() { Some(feature) } else { None }\n+                if sess.is_nightly_build() || allow_unstable || gate.is_none() { Some(feature) } else { None }\n             },\n         )\n         .filter(|_feature| {"}]}