{"sha": "8c407e0fb4ba7fc4cc50e6a6d0352ec7f94d450b", "node_id": "C_kwDOAAsO6NoAKDhjNDA3ZTBmYjRiYTdmYzRjYzUwZTZhNmQwMzUyZWM3Zjk0ZDQ1MGI", "commit": {"author": {"name": "bjorn3", "email": "17426603+bjorn3@users.noreply.github.com", "date": "2022-08-13T06:34:55Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-08-13T06:34:55Z"}, "message": "Merge pull request #1255 from afonso360/abi-checker\n\nAdd abi-checker to y.rs and run it on CI", "tree": {"sha": "fc0828a7f388bb97e9a1aa6b7a7264a530057eb2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fc0828a7f388bb97e9a1aa6b7a7264a530057eb2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8c407e0fb4ba7fc4cc50e6a6d0352ec7f94d450b", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJi90YPCRBK7hj4Ov3rIwAAEmYIAC37W8RAfgNISkELS1DpSfLP\nTuhQmcjN8jwisiY019HOppCuR26iNcK3Awsyg94KkvZH9PesjpKyoDmXxlaeOZ5V\nMoIbCduogr3sQn7ZvPEq2GSPGpMi26DustzHXpVjXxAp8/19gyfY8iMC0NGjK3PC\nuf4GE+3C9z/tlYTaZd7/0qMnNQGZcW6IUIZPm2UjN1LmDq5zN2isR28L2Y40f3TW\nKC2bDOCkz9P3M3o1kVaSkyqIOkJhP2TayeCRGlEmZjbBiXPEBPT+6nGOyQgdy5E/\nFqAPNI2O2RFMRzTcvXmxyza8gZnjvBSLyzMjrBTGfMSrd196v63eLfuMVceHRvs=\n=p05P\n-----END PGP SIGNATURE-----\n", "payload": "tree fc0828a7f388bb97e9a1aa6b7a7264a530057eb2\nparent 57818ce82464e7e071418abab0f284e995cf8c44\nparent 69c6749aee93ee3c5dd3b9b394eef612d48dd6cd\nauthor bjorn3 <17426603+bjorn3@users.noreply.github.com> 1660372495 +0200\ncommitter GitHub <noreply@github.com> 1660372495 +0200\n\nMerge pull request #1255 from afonso360/abi-checker\n\nAdd abi-checker to y.rs and run it on CI"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8c407e0fb4ba7fc4cc50e6a6d0352ec7f94d450b", "html_url": "https://github.com/rust-lang/rust/commit/8c407e0fb4ba7fc4cc50e6a6d0352ec7f94d450b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8c407e0fb4ba7fc4cc50e6a6d0352ec7f94d450b/comments", "author": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "57818ce82464e7e071418abab0f284e995cf8c44", "url": "https://api.github.com/repos/rust-lang/rust/commits/57818ce82464e7e071418abab0f284e995cf8c44", "html_url": "https://github.com/rust-lang/rust/commit/57818ce82464e7e071418abab0f284e995cf8c44"}, {"sha": "69c6749aee93ee3c5dd3b9b394eef612d48dd6cd", "url": "https://api.github.com/repos/rust-lang/rust/commits/69c6749aee93ee3c5dd3b9b394eef612d48dd6cd", "html_url": "https://github.com/rust-lang/rust/commit/69c6749aee93ee3c5dd3b9b394eef612d48dd6cd"}], "stats": {"total": 119, "additions": 118, "deletions": 1}, "files": [{"sha": "6fd3e4443de5c29a78797daa438342723ce3468b", "filename": ".gitignore", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/8c407e0fb4ba7fc4cc50e6a6d0352ec7f94d450b/.gitignore", "raw_url": "https://github.com/rust-lang/rust/raw/8c407e0fb4ba7fc4cc50e6a6d0352ec7f94d450b/.gitignore", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/.gitignore?ref=8c407e0fb4ba7fc4cc50e6a6d0352ec7f94d450b", "patch": "@@ -19,3 +19,4 @@ perf.data.old\n /regex\n /simple-raytracer\n /portable-simd\n+/abi-checker"}, {"sha": "67dbd0a38a4fb4d44d0579e907bbc1a4c6bc9de0", "filename": "build_system/abi_checker.rs", "status": "added", "additions": 60, "deletions": 0, "changes": 60, "blob_url": "https://github.com/rust-lang/rust/blob/8c407e0fb4ba7fc4cc50e6a6d0352ec7f94d450b/build_system%2Fabi_checker.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8c407e0fb4ba7fc4cc50e6a6d0352ec7f94d450b/build_system%2Fabi_checker.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/build_system%2Fabi_checker.rs?ref=8c407e0fb4ba7fc4cc50e6a6d0352ec7f94d450b", "patch": "@@ -0,0 +1,60 @@\n+use super::build_sysroot;\n+use super::config;\n+use super::utils::spawn_and_wait;\n+use build_system::SysrootKind;\n+use std::env;\n+use std::path::Path;\n+use std::process::Command;\n+\n+pub(crate) fn run(\n+    channel: &str,\n+    sysroot_kind: SysrootKind,\n+    target_dir: &Path,\n+    cg_clif_build_dir: &Path,\n+    host_triple: &str,\n+    target_triple: &str,\n+) {\n+    if !config::get_bool(\"testsuite.abi-checker\") {\n+        eprintln!(\"[SKIP] abi-checker\");\n+        return;\n+    }\n+\n+    if host_triple != target_triple {\n+        eprintln!(\"[SKIP] abi-checker (cross-compilation not supported)\");\n+        return;\n+    }\n+\n+    eprintln!(\"Building sysroot for abi-checker\");\n+    build_sysroot::build_sysroot(\n+        channel,\n+        sysroot_kind,\n+        target_dir,\n+        cg_clif_build_dir,\n+        host_triple,\n+        target_triple,\n+    );\n+\n+    eprintln!(\"Running abi-checker\");\n+    let mut abi_checker_path = env::current_dir().unwrap();\n+    abi_checker_path.push(\"abi-checker\");\n+    env::set_current_dir(abi_checker_path.clone()).unwrap();\n+\n+    let build_dir = abi_checker_path.parent().unwrap().join(\"build\");\n+    let cg_clif_dylib_path = build_dir.join(if cfg!(windows) { \"bin\" } else { \"lib\" }).join(\n+        env::consts::DLL_PREFIX.to_string() + \"rustc_codegen_cranelift\" + env::consts::DLL_SUFFIX,\n+    );\n+\n+    let pairs = [\"rustc_calls_cgclif\", \"cgclif_calls_rustc\", \"cgclif_calls_cc\", \"cc_calls_cgclif\"];\n+\n+    let mut cmd = Command::new(\"cargo\");\n+    cmd.arg(\"run\");\n+    cmd.arg(\"--target\");\n+    cmd.arg(target_triple);\n+    cmd.arg(\"--\");\n+    cmd.arg(\"--pairs\");\n+    cmd.args(pairs);\n+    cmd.arg(\"--add-rustc-codegen-backend\");\n+    cmd.arg(format!(\"cgclif:{}\", cg_clif_dylib_path.display()));\n+\n+    spawn_and_wait(cmd);\n+}"}, {"sha": "c3706dc6f82039cfee03fe18fdb7ef7c3f8c36d6", "filename": "build_system/mod.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/8c407e0fb4ba7fc4cc50e6a6d0352ec7f94d450b/build_system%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8c407e0fb4ba7fc4cc50e6a6d0352ec7f94d450b/build_system%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/build_system%2Fmod.rs?ref=8c407e0fb4ba7fc4cc50e6a6d0352ec7f94d450b", "patch": "@@ -4,6 +4,7 @@ use std::process;\n \n use self::utils::is_ci;\n \n+mod abi_checker;\n mod build_backend;\n mod build_sysroot;\n mod config;\n@@ -141,6 +142,15 @@ pub fn main() {\n                 &host_triple,\n                 &target_triple,\n             );\n+\n+            abi_checker::run(\n+                channel,\n+                sysroot_kind,\n+                &target_dir,\n+                &cg_clif_build_dir,\n+                &host_triple,\n+                &target_triple,\n+            );\n         }\n         Command::Build => {\n             build_sysroot::build_sysroot("}, {"sha": "d23b7f00dcf16da744be926925043d5716cad145", "filename": "build_system/prepare.rs", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/8c407e0fb4ba7fc4cc50e6a6d0352ec7f94d450b/build_system%2Fprepare.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8c407e0fb4ba7fc4cc50e6a6d0352ec7f94d450b/build_system%2Fprepare.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/build_system%2Fprepare.rs?ref=8c407e0fb4ba7fc4cc50e6a6d0352ec7f94d450b", "patch": "@@ -14,6 +14,14 @@ pub(crate) fn prepare() {\n     eprintln!(\"[INSTALL] hyperfine\");\n     Command::new(\"cargo\").arg(\"install\").arg(\"hyperfine\").spawn().unwrap().wait().unwrap();\n \n+    clone_repo_shallow_github(\n+        \"abi-checker\",\n+        \"Gankra\",\n+        \"abi-checker\",\n+        \"a2232d45f202846f5c02203c9f27355360f9a2ff\",\n+    );\n+    apply_patches(\"abi-checker\", Path::new(\"abi-checker\"));\n+\n     clone_repo_shallow_github(\n         \"rand\",\n         \"rust-random\","}, {"sha": "62e52bd1958005655adbe4609fa3fbfe05c4b907", "filename": "clean_all.sh", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8c407e0fb4ba7fc4cc50e6a6d0352ec7f94d450b/clean_all.sh", "raw_url": "https://github.com/rust-lang/rust/raw/8c407e0fb4ba7fc4cc50e6a6d0352ec7f94d450b/clean_all.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clean_all.sh?ref=8c407e0fb4ba7fc4cc50e6a6d0352ec7f94d450b", "patch": "@@ -3,4 +3,4 @@ set -e\n \n rm -rf build_sysroot/{sysroot_src/,target/,compiler-builtins/,rustc_version}\n rm -rf target/ build/ perf.data{,.old} y.bin\n-rm -rf rand/ regex/ simple-raytracer/ portable-simd/\n+rm -rf rand/ regex/ simple-raytracer/ portable-simd/ abi-checker/"}, {"sha": "2264d301d592003b27f679becdeb32e90d583023", "filename": "config.txt", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8c407e0fb4ba7fc4cc50e6a6d0352ec7f94d450b/config.txt", "raw_url": "https://github.com/rust-lang/rust/raw/8c407e0fb4ba7fc4cc50e6a6d0352ec7f94d450b/config.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/config.txt?ref=8c407e0fb4ba7fc4cc50e6a6d0352ec7f94d450b", "patch": "@@ -48,3 +48,5 @@ test.libcore\n test.regex-shootout-regex-dna\n test.regex\n test.portable-simd\n+\n+testsuite.abi-checker"}, {"sha": "526366a7598760b95bb6d107ca3dbf20a8f0f871", "filename": "patches/0029-abi-checker-Disable-failing-tests.patch", "status": "added", "additions": 36, "deletions": 0, "changes": 36, "blob_url": "https://github.com/rust-lang/rust/blob/8c407e0fb4ba7fc4cc50e6a6d0352ec7f94d450b/patches%2F0029-abi-checker-Disable-failing-tests.patch", "raw_url": "https://github.com/rust-lang/rust/raw/8c407e0fb4ba7fc4cc50e6a6d0352ec7f94d450b/patches%2F0029-abi-checker-Disable-failing-tests.patch", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/patches%2F0029-abi-checker-Disable-failing-tests.patch?ref=8c407e0fb4ba7fc4cc50e6a6d0352ec7f94d450b", "patch": "@@ -0,0 +1,36 @@\n+From 1a315ba225577dbbd1f449d9609f16f984f68708 Mon Sep 17 00:00:00 2001\n+From: Afonso Bordado <afonso360@users.noreply.github.com>\n+Date: Fri, 12 Aug 2022 22:51:58 +0000\n+Subject: [PATCH] Disable abi-checker tests\n+\n+---\n+ src/report.rs | 14 ++++++++++++++\n+ 1 file changed, 14 insertions(+)\n+\n+diff --git a/src/report.rs b/src/report.rs\n+index 7346f5e..8347762 100644\n+--- a/src/report.rs\n++++ b/src/report.rs\n+@@ -45,6 +45,20 @@ pub fn get_test_rules(test: &TestKey, caller: &dyn AbiImpl, callee: &dyn AbiImpl\n+     //\n+     // THIS AREA RESERVED FOR VENDORS TO APPLY PATCHES\n+\n++    // Currently MSVC has some broken ABI issues. Furthermore, they cause\n++    // a STATUS_ACCESS_VIOLATION, so we can't even run them. Ensure that they compile and link.\n++    if cfg!(windows) && (test.test_name == \"bool\" || test.test_name == \"ui128\") {\n++        result.run = Link;\n++        result.check = Pass(Link);\n++    }\n++\n++    // structs is broken in the current release of cranelift for aarch64.\n++    // It has been fixed for cranelift 0.88: https://github.com/bytecodealliance/wasmtime/pull/4634\n++    if cfg!(target_arch = \"aarch64\") && test.test_name == \"structs\" {\n++        result.run = Link;\n++        result.check = Pass(Link);\n++    }\n++\n+     // END OF VENDOR RESERVED AREA\n+     //\n+     //\n+--\n+2.34.1"}]}