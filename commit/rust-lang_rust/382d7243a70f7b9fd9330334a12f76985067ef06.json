{"sha": "382d7243a70f7b9fd9330334a12f76985067ef06", "node_id": "MDY6Q29tbWl0NzI0NzEyOjM4MmQ3MjQzYTcwZjdiOWZkOTMzMDMzNGExMmY3Njk4NTA2N2VmMDY=", "commit": {"author": {"name": "Lzu Tao", "email": "taolzu@gmail.com", "date": "2020-09-24T14:41:40Z"}, "committer": {"name": "Lzu Tao", "email": "taolzu@gmail.com", "date": "2020-09-24T14:46:57Z"}, "message": "move test to intergrated test in library/core", "tree": {"sha": "dbb0b501e1da617e8a85d235ce6a18ed1599ad6f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/dbb0b501e1da617e8a85d235ce6a18ed1599ad6f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/382d7243a70f7b9fd9330334a12f76985067ef06", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/382d7243a70f7b9fd9330334a12f76985067ef06", "html_url": "https://github.com/rust-lang/rust/commit/382d7243a70f7b9fd9330334a12f76985067ef06", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/382d7243a70f7b9fd9330334a12f76985067ef06/comments", "author": {"login": "tesuji", "id": 15225902, "node_id": "MDQ6VXNlcjE1MjI1OTAy", "avatar_url": "https://avatars.githubusercontent.com/u/15225902?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tesuji", "html_url": "https://github.com/tesuji", "followers_url": "https://api.github.com/users/tesuji/followers", "following_url": "https://api.github.com/users/tesuji/following{/other_user}", "gists_url": "https://api.github.com/users/tesuji/gists{/gist_id}", "starred_url": "https://api.github.com/users/tesuji/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tesuji/subscriptions", "organizations_url": "https://api.github.com/users/tesuji/orgs", "repos_url": "https://api.github.com/users/tesuji/repos", "events_url": "https://api.github.com/users/tesuji/events{/privacy}", "received_events_url": "https://api.github.com/users/tesuji/received_events", "type": "User", "site_admin": false}, "committer": {"login": "tesuji", "id": 15225902, "node_id": "MDQ6VXNlcjE1MjI1OTAy", "avatar_url": "https://avatars.githubusercontent.com/u/15225902?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tesuji", "html_url": "https://github.com/tesuji", "followers_url": "https://api.github.com/users/tesuji/followers", "following_url": "https://api.github.com/users/tesuji/following{/other_user}", "gists_url": "https://api.github.com/users/tesuji/gists{/gist_id}", "starred_url": "https://api.github.com/users/tesuji/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tesuji/subscriptions", "organizations_url": "https://api.github.com/users/tesuji/orgs", "repos_url": "https://api.github.com/users/tesuji/repos", "events_url": "https://api.github.com/users/tesuji/events{/privacy}", "received_events_url": "https://api.github.com/users/tesuji/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4387480dea6e2611483d431857f0f85b65e3c00c", "url": "https://api.github.com/repos/rust-lang/rust/commits/4387480dea6e2611483d431857f0f85b65e3c00c", "html_url": "https://github.com/rust-lang/rust/commit/4387480dea6e2611483d431857f0f85b65e3c00c"}], "stats": {"total": 34, "additions": 17, "deletions": 17}, "files": [{"sha": "de163a60c98f42686e4a1277b234c55befb5698e", "filename": "library/core/tests/intrinsics.rs", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/382d7243a70f7b9fd9330334a12f76985067ef06/library%2Fcore%2Ftests%2Fintrinsics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/382d7243a70f7b9fd9330334a12f76985067ef06/library%2Fcore%2Ftests%2Fintrinsics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Ftests%2Fintrinsics.rs?ref=382d7243a70f7b9fd9330334a12f76985067ef06", "patch": "@@ -1,4 +1,5 @@\n use core::any::TypeId;\n+use core::intrinsics::assume;\n \n #[test]\n fn test_typeid_sized_types() {\n@@ -20,3 +21,17 @@ fn test_typeid_unsized_types() {\n     assert_eq!(TypeId::of::<Y>(), TypeId::of::<Y>());\n     assert!(TypeId::of::<X>() != TypeId::of::<Y>());\n }\n+\n+// Check that `const_assume` feature allow `assume` intrinsic\n+// to be used in const contexts.\n+#[test]\n+fn test_assume_can_be_in_const_contexts() {\n+    const unsafe fn foo(x: usize, y: usize) -> usize {\n+        // SAFETY: the entire function is not safe,\n+        // but it is just an example not used elsewhere.\n+        unsafe { assume(y != 0) };\n+        x / y\n+    }\n+    let rs = unsafe { foo(42, 97) };\n+    assert_eq!(rs, 0);\n+}"}, {"sha": "3a6caaa19fcd95c8395c2d3022c827cfc42549b0", "filename": "library/core/tests/lib.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/382d7243a70f7b9fd9330334a12f76985067ef06/library%2Fcore%2Ftests%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/382d7243a70f7b9fd9330334a12f76985067ef06/library%2Fcore%2Ftests%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Ftests%2Flib.rs?ref=382d7243a70f7b9fd9330334a12f76985067ef06", "patch": "@@ -7,6 +7,8 @@\n #![feature(bound_cloned)]\n #![feature(box_syntax)]\n #![feature(cell_update)]\n+#![feature(const_assume)]\n+#![feature(core_intrinsics)]\n #![feature(core_private_bignum)]\n #![feature(core_private_diy_float)]\n #![feature(debug_non_exhaustive)]"}, {"sha": "f72f151824bed551f3adac2e8bc707e3af6addb7", "filename": "src/test/ui/consts/const-eval/const_assume.rs", "status": "removed", "additions": 0, "deletions": 17, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/4387480dea6e2611483d431857f0f85b65e3c00c/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fconst_assume.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4387480dea6e2611483d431857f0f85b65e3c00c/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fconst_assume.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fconst_assume.rs?ref=4387480dea6e2611483d431857f0f85b65e3c00c", "patch": "@@ -1,17 +0,0 @@\n-// check-pass\n-\n-// Check that `const_assume` feature allow `assume` intrinsic\n-// to be used in const contexts.\n-\n-#![feature(core_intrinsics, const_assume)]\n-\n-extern crate core;\n-\n-use core::intrinsics::assume;\n-\n-pub const unsafe fn foo(x: usize, y: usize) -> usize {\n-    assume(y != 0);\n-    x / y\n-}\n-\n-fn main() {}"}]}