{"sha": "ee25791df5f025378e9ddebef661e25cb75d9172", "node_id": "MDY6Q29tbWl0NzI0NzEyOmVlMjU3OTFkZjVmMDI1Mzc4ZTlkZGViZWY2NjFlMjVjYjc1ZDkxNzI=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2017-12-07T12:21:28Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2017-12-07T12:21:28Z"}, "message": "Auto merge of #46523 - CrockAgile:update-fingerprint-tests-macros, r=michaelwoerister\n\nUpdate fingerprint tests macros\n\nPart of #44924\n\nr? @michaelwoerister", "tree": {"sha": "e39e7314205cb2cf60057ef0abc357a10797f2a8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e39e7314205cb2cf60057ef0abc357a10797f2a8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ee25791df5f025378e9ddebef661e25cb75d9172", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ee25791df5f025378e9ddebef661e25cb75d9172", "html_url": "https://github.com/rust-lang/rust/commit/ee25791df5f025378e9ddebef661e25cb75d9172", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ee25791df5f025378e9ddebef661e25cb75d9172/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bb1bd88ec3adf93b678d08ca631e5b3785d2df1b", "url": "https://api.github.com/repos/rust-lang/rust/commits/bb1bd88ec3adf93b678d08ca631e5b3785d2df1b", "html_url": "https://github.com/rust-lang/rust/commit/bb1bd88ec3adf93b678d08ca631e5b3785d2df1b"}, {"sha": "3f0cc7caca2a597c589e4792af2653dcc1d07aa0", "url": "https://api.github.com/repos/rust-lang/rust/commits/3f0cc7caca2a597c589e4792af2653dcc1d07aa0", "html_url": "https://github.com/rust-lang/rust/commit/3f0cc7caca2a597c589e4792af2653dcc1d07aa0"}], "stats": {"total": 724, "additions": 320, "deletions": 404}, "files": [{"sha": "6cea9a0cb140bbb1410de84cfe2c80dbfea0cbdd", "filename": "src/test/incremental/hashes/closure_expressions.rs", "status": "modified", "additions": 24, "deletions": 36, "changes": 60, "blob_url": "https://github.com/rust-lang/rust/blob/ee25791df5f025378e9ddebef661e25cb75d9172/src%2Ftest%2Fincremental%2Fhashes%2Fclosure_expressions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ee25791df5f025378e9ddebef661e25cb75d9172/src%2Ftest%2Fincremental%2Fhashes%2Fclosure_expressions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fincremental%2Fhashes%2Fclosure_expressions.rs?ref=ee25791df5f025378e9ddebef661e25cb75d9172", "patch": "@@ -27,34 +27,30 @@\n \n // Change closure body ---------------------------------------------------------\n #[cfg(cfail1)]\n-fn change_closure_body() {\n+pub fn change_closure_body() {\n     let _ = || 1u32;\n }\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(label=\"Hir\", cfg=\"cfail2\")]\n-#[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n-#[rustc_dirty(label=\"HirBody\", cfg=\"cfail2\")]\n-#[rustc_clean(label=\"HirBody\", cfg=\"cfail3\")]\n-fn change_closure_body() {\n+#[rustc_clean(cfg=\"cfail2\", except=\"HirBody\")]\n+#[rustc_clean(cfg=\"cfail3\")]\n+pub fn change_closure_body() {\n     let _ = || 3u32;\n }\n \n \n \n // Add parameter ---------------------------------------------------------------\n #[cfg(cfail1)]\n-fn add_parameter() {\n+pub fn add_parameter() {\n     let x = 0u32;\n     let _ = || x + 1;\n }\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(label=\"Hir\", cfg=\"cfail2\")]\n-#[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n-#[rustc_dirty(label=\"HirBody\", cfg=\"cfail2\")]\n-#[rustc_clean(label=\"HirBody\", cfg=\"cfail3\")]\n-fn add_parameter() {\n+#[rustc_clean(cfg=\"cfail2\", except=\"HirBody, MirValidated, MirOptimized, TypeckTables\")]\n+#[rustc_clean(cfg=\"cfail3\")]\n+pub fn add_parameter() {\n     let x = 0u32;\n     let _ = |x: u32| x + 1;\n }\n@@ -63,51 +59,45 @@ fn add_parameter() {\n \n // Change parameter pattern ----------------------------------------------------\n #[cfg(cfail1)]\n-fn change_parameter_pattern() {\n+pub fn change_parameter_pattern() {\n     let _ = |x: &u32| x;\n }\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(label=\"Hir\", cfg=\"cfail2\")]\n-#[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n-#[rustc_dirty(label=\"HirBody\", cfg=\"cfail2\")]\n-#[rustc_clean(label=\"HirBody\", cfg=\"cfail3\")]\n-fn change_parameter_pattern() {\n+#[rustc_clean(cfg=\"cfail2\", except=\"HirBody, MirValidated, MirOptimized, TypeckTables\")]\n+#[rustc_clean(cfg=\"cfail3\")]\n+pub fn change_parameter_pattern() {\n     let _ = |&x: &u32| x;\n }\n \n \n \n // Add `move` to closure -------------------------------------------------------\n #[cfg(cfail1)]\n-fn add_move() {\n+pub fn add_move() {\n     let _ = || 1;\n }\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(label=\"Hir\", cfg=\"cfail2\")]\n-#[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n-#[rustc_dirty(label=\"HirBody\", cfg=\"cfail2\")]\n-#[rustc_clean(label=\"HirBody\", cfg=\"cfail3\")]\n-fn add_move() {\n+#[rustc_clean(cfg=\"cfail2\", except=\"HirBody\")]\n+#[rustc_clean(cfg=\"cfail3\")]\n+pub fn add_move() {\n     let _ = move || 1;\n }\n \n \n \n // Add type ascription to parameter --------------------------------------------\n #[cfg(cfail1)]\n-fn add_type_ascription_to_parameter() {\n+pub fn add_type_ascription_to_parameter() {\n     let closure = |x| x + 1u32;\n     let _: u32 = closure(1);\n }\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(label=\"Hir\", cfg=\"cfail2\")]\n-#[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n-#[rustc_dirty(label=\"HirBody\", cfg=\"cfail2\")]\n-#[rustc_clean(label=\"HirBody\", cfg=\"cfail3\")]\n-fn add_type_ascription_to_parameter() {\n+#[rustc_clean(cfg=\"cfail2\", except=\"HirBody\")]\n+#[rustc_clean(cfg=\"cfail3\")]\n+pub fn add_type_ascription_to_parameter() {\n     let closure = |x: u32| x + 1u32;\n     let _: u32 = closure(1);\n }\n@@ -116,17 +106,15 @@ fn add_type_ascription_to_parameter() {\n \n // Change parameter type -------------------------------------------------------\n #[cfg(cfail1)]\n-fn change_parameter_type() {\n+pub fn change_parameter_type() {\n     let closure = |x: u32| (x as u64) + 1;\n     let _ = closure(1);\n }\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(label=\"Hir\", cfg=\"cfail2\")]\n-#[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n-#[rustc_dirty(label=\"HirBody\", cfg=\"cfail2\")]\n-#[rustc_clean(label=\"HirBody\", cfg=\"cfail3\")]\n-fn change_parameter_type() {\n+#[rustc_clean(cfg=\"cfail2\", except=\"HirBody, MirValidated, MirOptimized, TypeckTables\")]\n+#[rustc_clean(cfg=\"cfail3\")]\n+pub fn change_parameter_type() {\n     let closure = |x: u16| (x as u64) + 1;\n     let _ = closure(1);\n }"}, {"sha": "a9b9602c3b19dacb9123277e4f67b3f925a0842a", "filename": "src/test/incremental/hashes/for_loops.rs", "status": "modified", "additions": 44, "deletions": 66, "changes": 110, "blob_url": "https://github.com/rust-lang/rust/blob/ee25791df5f025378e9ddebef661e25cb75d9172/src%2Ftest%2Fincremental%2Fhashes%2Ffor_loops.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ee25791df5f025378e9ddebef661e25cb75d9172/src%2Ftest%2Fincremental%2Fhashes%2Ffor_loops.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fincremental%2Fhashes%2Ffor_loops.rs?ref=ee25791df5f025378e9ddebef661e25cb75d9172", "patch": "@@ -27,7 +27,7 @@\n \n // Change loop body ------------------------------------------------------------\n #[cfg(cfail1)]\n-fn change_loop_body() {\n+pub fn change_loop_body() {\n     let mut _x = 0;\n     for _ in 0..1 {\n         _x = 1;\n@@ -36,11 +36,9 @@ fn change_loop_body() {\n }\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(label=\"Hir\", cfg=\"cfail2\")]\n-#[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n-#[rustc_dirty(label=\"HirBody\", cfg=\"cfail2\")]\n-#[rustc_clean(label=\"HirBody\", cfg=\"cfail3\")]\n-fn change_loop_body() {\n+#[rustc_clean(cfg=\"cfail2\", except=\"HirBody, MirValidated, MirOptimized\")]\n+#[rustc_clean(cfg=\"cfail3\")]\n+pub fn change_loop_body() {\n     let mut _x = 0;\n     for _ in 0..1 {\n         _x = 2;\n@@ -52,7 +50,7 @@ fn change_loop_body() {\n \n // Change iteration variable name ----------------------------------------------\n #[cfg(cfail1)]\n-fn change_iteration_variable_name() {\n+pub fn change_iteration_variable_name() {\n     let mut _x = 0;\n     for _i in 0..1 {\n         _x = 1;\n@@ -61,11 +59,9 @@ fn change_iteration_variable_name() {\n }\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(label=\"Hir\", cfg=\"cfail2\")]\n-#[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n-#[rustc_dirty(label=\"HirBody\", cfg=\"cfail2\")]\n-#[rustc_clean(label=\"HirBody\", cfg=\"cfail3\")]\n-fn change_iteration_variable_name() {\n+#[rustc_clean(cfg=\"cfail2\", except=\"HirBody, MirValidated, MirOptimized\")]\n+#[rustc_clean(cfg=\"cfail3\")]\n+pub fn change_iteration_variable_name() {\n     let mut _x = 0;\n     for _a in 0..1 {\n         _x = 1;\n@@ -77,7 +73,7 @@ fn change_iteration_variable_name() {\n \n // Change iteration variable pattern -------------------------------------------\n #[cfg(cfail1)]\n-fn change_iteration_variable_pattern() {\n+pub fn change_iteration_variable_pattern() {\n     let mut _x = 0;\n     for _i in &[0, 1, 2] {\n         _x = 1;\n@@ -86,11 +82,9 @@ fn change_iteration_variable_pattern() {\n }\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(label=\"Hir\", cfg=\"cfail2\")]\n-#[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n-#[rustc_dirty(label=\"HirBody\", cfg=\"cfail2\")]\n-#[rustc_clean(label=\"HirBody\", cfg=\"cfail3\")]\n-fn change_iteration_variable_pattern() {\n+#[rustc_clean(cfg=\"cfail2\", except=\"HirBody, MirValidated, MirOptimized, TypeckTables\")]\n+#[rustc_clean(cfg=\"cfail3\")]\n+pub fn change_iteration_variable_pattern() {\n     let mut _x = 0;\n     for &_i in &[0, 1, 2] {\n         _x = 1;\n@@ -102,7 +96,7 @@ fn change_iteration_variable_pattern() {\n \n // Change iterable -------------------------------------------------------------\n #[cfg(cfail1)]\n-fn change_iterable() {\n+pub fn change_iterable() {\n     let mut _x = 0;\n     for _ in &[0, 1, 2] {\n         _x = 1;\n@@ -111,11 +105,9 @@ fn change_iterable() {\n }\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(label=\"Hir\", cfg=\"cfail2\")]\n-#[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n-#[rustc_dirty(label=\"HirBody\", cfg=\"cfail2\")]\n-#[rustc_clean(label=\"HirBody\", cfg=\"cfail3\")]\n-fn change_iterable() {\n+#[rustc_clean(cfg=\"cfail2\", except=\"HirBody, MirValidated, MirOptimized\")]\n+#[rustc_clean(cfg=\"cfail3\")]\n+pub fn change_iterable() {\n     let mut _x = 0;\n     for _ in &[0, 1, 3] {\n         _x = 1;\n@@ -127,19 +119,17 @@ fn change_iterable() {\n \n // Add break -------------------------------------------------------------------\n #[cfg(cfail1)]\n-fn add_break() {\n+pub fn add_break() {\n     let mut _x = 0;\n     for _ in 0..1 {\n         _x = 1;\n     }\n }\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(label=\"Hir\", cfg=\"cfail2\")]\n-#[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n-#[rustc_dirty(label=\"HirBody\", cfg=\"cfail2\")]\n-#[rustc_clean(label=\"HirBody\", cfg=\"cfail3\")]\n-fn add_break() {\n+#[rustc_clean(cfg=\"cfail2\", except=\"HirBody, MirValidated, MirOptimized, TypeckTables\")]\n+#[rustc_clean(cfg=\"cfail3\")]\n+pub fn add_break() {\n     let mut _x = 0;\n     for _ in 0..1 {\n         _x = 1;\n@@ -151,7 +141,7 @@ fn add_break() {\n \n // Add loop label --------------------------------------------------------------\n #[cfg(cfail1)]\n-fn add_loop_label() {\n+pub fn add_loop_label() {\n     let mut _x = 0;\n     for _ in 0..1 {\n         _x = 1;\n@@ -160,11 +150,9 @@ fn add_loop_label() {\n }\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(label=\"Hir\", cfg=\"cfail2\")]\n-#[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n-#[rustc_dirty(label=\"HirBody\", cfg=\"cfail2\")]\n-#[rustc_clean(label=\"HirBody\", cfg=\"cfail3\")]\n-fn add_loop_label() {\n+#[rustc_clean(cfg=\"cfail2\", except=\"HirBody\")]\n+#[rustc_clean(cfg=\"cfail3\")]\n+pub fn add_loop_label() {\n     let mut _x = 0;\n     'label: for _ in 0..1 {\n         _x = 1;\n@@ -176,7 +164,7 @@ fn add_loop_label() {\n \n // Add loop label to break -----------------------------------------------------\n #[cfg(cfail1)]\n-fn add_loop_label_to_break() {\n+pub fn add_loop_label_to_break() {\n     let mut _x = 0;\n     'label: for _ in 0..1 {\n         _x = 1;\n@@ -185,11 +173,9 @@ fn add_loop_label_to_break() {\n }\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(label=\"Hir\", cfg=\"cfail2\")]\n-#[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n-#[rustc_dirty(label=\"HirBody\", cfg=\"cfail2\")]\n-#[rustc_clean(label=\"HirBody\", cfg=\"cfail3\")]\n-fn add_loop_label_to_break() {\n+#[rustc_clean(cfg=\"cfail2\", except=\"HirBody\")]\n+#[rustc_clean(cfg=\"cfail3\")]\n+pub fn add_loop_label_to_break() {\n     let mut _x = 0;\n     'label: for _ in 0..1 {\n         _x = 1;\n@@ -201,7 +187,7 @@ fn add_loop_label_to_break() {\n \n // Change break label ----------------------------------------------------------\n #[cfg(cfail1)]\n-fn change_break_label() {\n+pub fn change_break_label() {\n     let mut _x = 0;\n     'outer: for _ in 0..1 {\n         'inner: for _ in 0..1 {\n@@ -212,11 +198,9 @@ fn change_break_label() {\n }\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(label=\"Hir\", cfg=\"cfail2\")]\n-#[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n-#[rustc_dirty(label=\"HirBody\", cfg=\"cfail2\")]\n-#[rustc_clean(label=\"HirBody\", cfg=\"cfail3\")]\n-fn change_break_label() {\n+#[rustc_clean(cfg=\"cfail2\", except=\"HirBody, MirValidated, MirOptimized\")]\n+#[rustc_clean(cfg=\"cfail3\")]\n+pub fn change_break_label() {\n     let mut _x = 0;\n     'outer: for _ in 0..1 {\n         'inner: for _ in 0..1 {\n@@ -230,7 +214,7 @@ fn change_break_label() {\n \n // Add loop label to continue --------------------------------------------------\n #[cfg(cfail1)]\n-fn add_loop_label_to_continue() {\n+pub fn add_loop_label_to_continue() {\n     let mut _x = 0;\n     'label: for _ in 0..1 {\n         _x = 1;\n@@ -239,11 +223,9 @@ fn add_loop_label_to_continue() {\n }\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(label=\"Hir\", cfg=\"cfail2\")]\n-#[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n-#[rustc_dirty(label=\"HirBody\", cfg=\"cfail2\")]\n-#[rustc_clean(label=\"HirBody\", cfg=\"cfail3\")]\n-fn add_loop_label_to_continue() {\n+#[rustc_clean(cfg=\"cfail2\", except=\"HirBody\")]\n+#[rustc_clean(cfg=\"cfail3\")]\n+pub fn add_loop_label_to_continue() {\n     let mut _x = 0;\n     'label: for _ in 0..1 {\n         _x = 1;\n@@ -255,7 +237,7 @@ fn add_loop_label_to_continue() {\n \n // Change continue label ----------------------------------------------------------\n #[cfg(cfail1)]\n-fn change_continue_label() {\n+pub fn change_continue_label() {\n     let mut _x = 0;\n     'outer: for _ in 0..1 {\n         'inner: for _ in 0..1 {\n@@ -266,11 +248,9 @@ fn change_continue_label() {\n }\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(label=\"Hir\", cfg=\"cfail2\")]\n-#[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n-#[rustc_dirty(label=\"HirBody\", cfg=\"cfail2\")]\n-#[rustc_clean(label=\"HirBody\", cfg=\"cfail3\")]\n-fn change_continue_label() {\n+#[rustc_clean(cfg=\"cfail2\", except=\"HirBody, MirValidated, MirOptimized\")]\n+#[rustc_clean(cfg=\"cfail3\")]\n+pub fn change_continue_label() {\n     let mut _x = 0;\n     'outer: for _ in 0..1 {\n         'inner: for _ in 0..1 {\n@@ -284,7 +264,7 @@ fn change_continue_label() {\n \n // Change continue to break ----------------------------------------------------\n #[cfg(cfail1)]\n-fn change_continue_to_break() {\n+pub fn change_continue_to_break() {\n     let mut _x = 0;\n     for _ in 0..1 {\n         _x = 1;\n@@ -293,11 +273,9 @@ fn change_continue_to_break() {\n }\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(label=\"Hir\", cfg=\"cfail2\")]\n-#[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n-#[rustc_dirty(label=\"HirBody\", cfg=\"cfail2\")]\n-#[rustc_clean(label=\"HirBody\", cfg=\"cfail3\")]\n-fn change_continue_to_break() {\n+#[rustc_clean(cfg=\"cfail2\", except=\"HirBody, MirValidated, MirOptimized\")]\n+#[rustc_clean(cfg=\"cfail3\")]\n+pub fn change_continue_to_break() {\n     let mut _x = 0;\n     for _ in 0..1 {\n         _x = 1;"}, {"sha": "952256a65bd8012a6f7e6f8c4ad3fbb5201b8780", "filename": "src/test/incremental/hashes/function_interfaces.rs", "status": "modified", "additions": 124, "deletions": 110, "changes": 234, "blob_url": "https://github.com/rust-lang/rust/blob/ee25791df5f025378e9ddebef661e25cb75d9172/src%2Ftest%2Fincremental%2Fhashes%2Ffunction_interfaces.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ee25791df5f025378e9ddebef661e25cb75d9172/src%2Ftest%2Fincremental%2Fhashes%2Ffunction_interfaces.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fincremental%2Fhashes%2Ffunction_interfaces.rs?ref=ee25791df5f025378e9ddebef661e25cb75d9172", "patch": "@@ -26,323 +26,337 @@\n #![feature(intrinsics)]\n #![feature(linkage)]\n #![feature(rustc_attrs)]\n-#![crate_type=\"rlib\"]\n+#![crate_type = \"rlib\"]\n \n \n // Add Parameter ---------------------------------------------------------------\n \n #[cfg(cfail1)]\n-fn add_parameter() {}\n+pub fn add_parameter() {}\n \n #[cfg(not(cfail1))]\n-#[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n-#[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n-fn add_parameter(p: i32) {}\n+#[rustc_clean(cfg = \"cfail2\",\n+              except = \"Hir, HirBody, MirValidated, MirOptimized, TypeckTables, FnSignature\")]\n+#[rustc_clean(cfg = \"cfail3\")]\n+pub fn add_parameter(p: i32) {}\n \n \n // Add Return Type -------------------------------------------------------------\n \n #[cfg(cfail1)]\n-fn add_return_type() {}\n+pub fn add_return_type() {}\n \n #[cfg(not(cfail1))]\n-#[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n-#[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n-fn add_return_type() -> () {}\n+#[rustc_clean(cfg = \"cfail2\", except = \"Hir, HirBody\")]\n+#[rustc_clean(cfg = \"cfail3\")]\n+pub fn add_return_type() -> () {}\n \n \n // Change Parameter Type -------------------------------------------------------\n \n #[cfg(cfail1)]\n-fn type_of_parameter(p: i32) {}\n+pub fn type_of_parameter(p: i32) {}\n \n #[cfg(not(cfail1))]\n-#[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n-#[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n-fn type_of_parameter(p: i64) {}\n+#[rustc_clean(cfg = \"cfail2\",\n+              except = \"Hir, HirBody, MirValidated, MirOptimized, TypeckTables, FnSignature\")]\n+#[rustc_clean(cfg = \"cfail3\")]\n+pub fn type_of_parameter(p: i64) {}\n \n \n // Change Parameter Type Reference ---------------------------------------------\n \n #[cfg(cfail1)]\n-fn type_of_parameter_ref(p: &i32) {}\n+pub fn type_of_parameter_ref(p: &i32) {}\n \n #[cfg(not(cfail1))]\n-#[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n-#[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n-fn type_of_parameter_ref(p: &mut i32) {}\n+#[rustc_clean(cfg = \"cfail2\",\n+              except = \"Hir, HirBody, MirValidated, MirOptimized, TypeckTables, FnSignature\")]\n+#[rustc_clean(cfg = \"cfail3\")]\n+pub fn type_of_parameter_ref(p: &mut i32) {}\n \n \n // Change Parameter Order ------------------------------------------------------\n \n #[cfg(cfail1)]\n-fn order_of_parameters(p1: i32, p2: i64) {}\n+pub fn order_of_parameters(p1: i32, p2: i64) {}\n \n #[cfg(not(cfail1))]\n-#[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n-#[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n-fn order_of_parameters(p2: i64, p1: i32) {}\n+#[rustc_clean(cfg = \"cfail2\",\n+              except = \"Hir, HirBody, MirValidated, MirOptimized, TypeckTables, FnSignature\")]\n+#[rustc_clean(cfg = \"cfail3\")]\n+pub fn order_of_parameters(p2: i64, p1: i32) {}\n \n \n // Unsafe ----------------------------------------------------------------------\n \n #[cfg(cfail1)]\n-fn make_unsafe() {}\n+pub fn make_unsafe() {}\n \n #[cfg(not(cfail1))]\n-#[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n-#[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n-unsafe fn make_unsafe() {}\n+#[rustc_clean(cfg = \"cfail2\",\n+              except = \"Hir, HirBody, MirValidated, MirOptimized, TypeckTables, FnSignature\")]\n+#[rustc_clean(cfg = \"cfail3\")]\n+pub unsafe fn make_unsafe() {}\n \n \n // Extern ----------------------------------------------------------------------\n \n #[cfg(cfail1)]\n-fn make_extern() {}\n+pub fn make_extern() {}\n \n #[cfg(not(cfail1))]\n-#[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n-#[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n-extern fn make_extern() {}\n+#[rustc_clean(cfg = \"cfail2\", except = \"Hir, HirBody, TypeckTables, FnSignature\")]\n+#[rustc_clean(cfg = \"cfail3\")]\n+pub extern \"C\" fn make_extern() {}\n \n \n // Extern C Extern Rust-Intrinsic ----------------------------------------------\n \n #[cfg(cfail1)]\n-extern \"C\" fn make_intrinsic() {}\n+pub extern \"C\" fn make_intrinsic() {}\n \n #[cfg(not(cfail1))]\n-#[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n-#[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n-extern \"rust-intrinsic\" fn make_intrinsic() {}\n+#[rustc_clean(cfg = \"cfail2\", except = \"Hir, HirBody, TypeckTables, FnSignature\")]\n+#[rustc_clean(cfg = \"cfail3\")]\n+pub extern \"rust-intrinsic\" fn make_intrinsic() {}\n \n \n // Type Parameter --------------------------------------------------------------\n \n #[cfg(cfail1)]\n-fn type_parameter() {}\n+pub fn type_parameter() {}\n \n #[cfg(not(cfail1))]\n-#[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n-#[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n-fn type_parameter<T>() {}\n+#[rustc_clean(cfg = \"cfail2\",\n+              except = \"Hir, HirBody, GenericsOfItem, TypeOfItem, PredicatesOfItem\")]\n+#[rustc_clean(cfg = \"cfail3\")]\n+pub fn type_parameter<T>() {}\n \n \n // Lifetime Parameter ----------------------------------------------------------\n \n #[cfg(cfail1)]\n-fn lifetime_parameter() {}\n+pub fn lifetime_parameter() {}\n \n #[cfg(not(cfail1))]\n-#[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n-#[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n-fn lifetime_parameter<'a>() {}\n+#[rustc_clean(cfg = \"cfail2\", except = \"Hir, HirBody, GenericsOfItem\")]\n+#[rustc_clean(cfg = \"cfail3\")]\n+pub fn lifetime_parameter<'a>() {}\n \n \n // Trait Bound -----------------------------------------------------------------\n \n #[cfg(cfail1)]\n-fn trait_bound<T>() {}\n+pub fn trait_bound<T>() {}\n \n #[cfg(not(cfail1))]\n-#[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n-#[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n-fn trait_bound<T: Eq>() {}\n+#[rustc_clean(cfg = \"cfail2\", except = \"Hir, HirBody, PredicatesOfItem\")]\n+#[rustc_clean(cfg = \"cfail3\")]\n+pub fn trait_bound<T: Eq>() {}\n \n \n // Builtin Bound ---------------------------------------------------------------\n \n #[cfg(cfail1)]\n-fn builtin_bound<T>() {}\n+pub fn builtin_bound<T>() {}\n \n #[cfg(not(cfail1))]\n-#[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n-#[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n-fn builtin_bound<T: Send>() {}\n+#[rustc_clean(cfg = \"cfail2\", except = \"Hir, HirBody, PredicatesOfItem\")]\n+#[rustc_clean(cfg = \"cfail3\")]\n+pub fn builtin_bound<T: Send>() {}\n \n \n // Lifetime Bound --------------------------------------------------------------\n \n #[cfg(cfail1)]\n-fn lifetime_bound<'a, T>() {}\n+pub fn lifetime_bound<'a, T>() {}\n \n #[cfg(not(cfail1))]\n-#[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n-#[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n-fn lifetime_bound<'a, T: 'a>() {}\n+#[rustc_clean(cfg = \"cfail2\",\n+              except = \"Hir, HirBody, GenericsOfItem, TypeOfItem, PredicatesOfItem\")]\n+#[rustc_clean(cfg = \"cfail3\")]\n+pub fn lifetime_bound<'a, T: 'a>() {}\n \n \n // Second Trait Bound ----------------------------------------------------------\n \n #[cfg(cfail1)]\n-fn second_trait_bound<T: Eq>() {}\n+pub fn second_trait_bound<T: Eq>() {}\n \n #[cfg(not(cfail1))]\n-#[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n-#[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n-fn second_trait_bound<T: Eq + Clone>() {}\n+#[rustc_clean(cfg = \"cfail2\", except = \"Hir, HirBody, PredicatesOfItem\")]\n+#[rustc_clean(cfg = \"cfail3\")]\n+pub fn second_trait_bound<T: Eq + Clone>() {}\n \n \n // Second Builtin Bound --------------------------------------------------------\n \n #[cfg(cfail1)]\n-fn second_builtin_bound<T: Send>() {}\n+pub fn second_builtin_bound<T: Send>() {}\n \n #[cfg(not(cfail1))]\n-#[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n-#[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n-fn second_builtin_bound<T: Send + Sized>() {}\n+#[rustc_clean(cfg = \"cfail2\", except = \"Hir, HirBody, PredicatesOfItem\")]\n+#[rustc_clean(cfg = \"cfail3\")]\n+pub fn second_builtin_bound<T: Send + Sized>() {}\n \n \n // Second Lifetime Bound -------------------------------------------------------\n \n #[cfg(cfail1)]\n-fn second_lifetime_bound<'a, 'b, T: 'a>() {}\n+pub fn second_lifetime_bound<'a, 'b, T: 'a>() {}\n \n #[cfg(not(cfail1))]\n-#[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n-#[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n-fn second_lifetime_bound<'a, 'b, T: 'a + 'b>() {}\n+#[rustc_clean(cfg = \"cfail2\",\n+              except = \"Hir, HirBody, GenericsOfItem, TypeOfItem, PredicatesOfItem\")]\n+#[rustc_clean(cfg = \"cfail3\")]\n+pub fn second_lifetime_bound<'a, 'b, T: 'a + 'b>() {}\n \n \n // Inline ----------------------------------------------------------------------\n \n #[cfg(cfail1)]\n-fn inline() {}\n+pub fn inline() {}\n \n #[cfg(not(cfail1))]\n-#[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n-#[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n+#[rustc_clean(cfg = \"cfail2\", except = \"Hir, HirBody\")]\n+#[rustc_clean(cfg = \"cfail3\")]\n #[inline]\n-fn inline() {}\n+pub fn inline() {}\n \n \n // Inline Never ----------------------------------------------------------------\n \n #[cfg(cfail1)]\n #[inline(always)]\n-fn inline_never() {}\n+pub fn inline_never() {}\n \n #[cfg(not(cfail1))]\n-#[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n-#[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n+#[rustc_clean(cfg = \"cfail2\", except = \"Hir, HirBody\")]\n+#[rustc_clean(cfg = \"cfail3\")]\n #[inline(never)]\n-fn inline_never() {}\n+pub fn inline_never() {}\n \n \n // No Mangle -------------------------------------------------------------------\n \n #[cfg(cfail1)]\n-fn no_mangle() {}\n+pub fn no_mangle() {}\n \n #[cfg(not(cfail1))]\n-#[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n-#[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n+#[rustc_clean(cfg = \"cfail2\", except = \"Hir, HirBody\")]\n+#[rustc_clean(cfg = \"cfail3\")]\n #[no_mangle]\n-fn no_mangle() {}\n+pub fn no_mangle() {}\n \n \n // Linkage ---------------------------------------------------------------------\n \n #[cfg(cfail1)]\n-fn linkage() {}\n+pub fn linkage() {}\n \n #[cfg(not(cfail1))]\n-#[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n-#[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n-#[linkage=\"weak_odr\"]\n-fn linkage() {}\n+#[rustc_clean(cfg = \"cfail2\", except = \"Hir, HirBody\")]\n+#[rustc_clean(cfg = \"cfail3\")]\n+#[linkage = \"weak_odr\"]\n+pub fn linkage() {}\n \n \n // Return Impl Trait -----------------------------------------------------------\n \n #[cfg(cfail1)]\n-fn return_impl_trait() -> i32 {\n+pub fn return_impl_trait() -> i32 {\n     0\n }\n \n #[cfg(not(cfail1))]\n-#[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n-#[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n-fn return_impl_trait() -> impl Clone {\n+#[rustc_clean(cfg = \"cfail2\", except = \"Hir, HirBody, TypeckTables, FnSignature\")]\n+#[rustc_clean(cfg = \"cfail3\")]\n+pub fn return_impl_trait() -> impl Clone {\n     0\n }\n \n \n // Change Return Impl Trait ----------------------------------------------------\n \n #[cfg(cfail1)]\n-fn change_return_impl_trait() -> impl Clone {\n+pub fn change_return_impl_trait() -> impl Clone {\n     0u32\n }\n \n #[cfg(not(cfail1))]\n-#[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n-#[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n-fn change_return_impl_trait() -> impl Copy {\n+#[rustc_clean(cfg = \"cfail2\", except = \"Hir, HirBody\")]\n+#[rustc_clean(cfg = \"cfail3\")]\n+pub fn change_return_impl_trait() -> impl Copy {\n     0u32\n }\n \n \n // Change Return Type Indirectly -----------------------------------------------\n \n-struct ReferencedType1;\n-struct ReferencedType2;\n+pub struct ReferencedType1;\n+pub struct ReferencedType2;\n \n-mod change_return_type_indirectly {\n+pub mod change_return_type_indirectly {\n     #[cfg(cfail1)]\n     use super::ReferencedType1 as ReturnType;\n     #[cfg(not(cfail1))]\n     use super::ReferencedType2 as ReturnType;\n \n-    #[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n-    #[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n-    fn indirect_return_type() -> ReturnType {\n+    #[rustc_clean(cfg = \"cfail2\",\n+                  except = \"Hir, HirBody, MirValidated, MirOptimized, TypeckTables, FnSignature\")]\n+    #[rustc_clean(cfg = \"cfail3\")]\n+    pub fn indirect_return_type() -> ReturnType {\n         ReturnType {}\n     }\n }\n \n \n // Change Parameter Type Indirectly --------------------------------------------\n \n-mod change_parameter_type_indirectly {\n+pub mod change_parameter_type_indirectly {\n     #[cfg(cfail1)]\n     use super::ReferencedType1 as ParameterType;\n     #[cfg(not(cfail1))]\n     use super::ReferencedType2 as ParameterType;\n \n-    #[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n-    #[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n-    fn indirect_parameter_type(p: ParameterType) {}\n+    #[rustc_clean(cfg = \"cfail2\",\n+                  except = \"Hir, HirBody, MirValidated, MirOptimized, TypeckTables, FnSignature\")]\n+    #[rustc_clean(cfg = \"cfail3\")]\n+    pub fn indirect_parameter_type(p: ParameterType) {}\n }\n \n \n // Change Trait Bound Indirectly -----------------------------------------------\n \n-trait ReferencedTrait1 {}\n-trait ReferencedTrait2 {}\n+pub trait ReferencedTrait1 {}\n+pub trait ReferencedTrait2 {}\n \n-mod change_trait_bound_indirectly {\n+pub mod change_trait_bound_indirectly {\n     #[cfg(cfail1)]\n     use super::ReferencedTrait1 as Trait;\n     #[cfg(not(cfail1))]\n     use super::ReferencedTrait2 as Trait;\n \n-    #[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n-    #[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n-    fn indirect_trait_bound<T: Trait>(p: T) {}\n+    #[rustc_clean(cfg = \"cfail2\", except = \"Hir, HirBody, PredicatesOfItem\")]\n+    #[rustc_clean(cfg = \"cfail3\")]\n+    pub fn indirect_trait_bound<T: Trait>(p: T) {}\n }\n \n \n // Change Trait Bound Indirectly In Where Clause -------------------------------\n \n-mod change_trait_bound_indirectly_in_where_clause {\n+pub mod change_trait_bound_indirectly_in_where_clause {\n     #[cfg(cfail1)]\n     use super::ReferencedTrait1 as Trait;\n     #[cfg(not(cfail1))]\n     use super::ReferencedTrait2 as Trait;\n \n-    #[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n-    #[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n-    fn indirect_trait_bound_where<T>(p: T) where T: Trait {}\n+    #[rustc_clean(cfg = \"cfail2\", except = \"Hir, HirBody, PredicatesOfItem\")]\n+    #[rustc_clean(cfg = \"cfail3\")]\n+    pub fn indirect_trait_bound_where<T>(p: T)\n+    where\n+        T: Trait,\n+    {\n+    }\n }"}, {"sha": "1d66d4ab9d3038f6a8fbd45795badc18c08440ba", "filename": "src/test/incremental/hashes/inline_asm.rs", "status": "modified", "additions": 24, "deletions": 36, "changes": 60, "blob_url": "https://github.com/rust-lang/rust/blob/ee25791df5f025378e9ddebef661e25cb75d9172/src%2Ftest%2Fincremental%2Fhashes%2Finline_asm.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ee25791df5f025378e9ddebef661e25cb75d9172/src%2Ftest%2Fincremental%2Fhashes%2Finline_asm.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fincremental%2Fhashes%2Finline_asm.rs?ref=ee25791df5f025378e9ddebef661e25cb75d9172", "patch": "@@ -30,7 +30,7 @@\n // Change template -------------------------------------------------------------\n #[cfg(cfail1)]\n #[cfg(any(target_arch = \"x86\", target_arch = \"x86_64\"))]\n-fn change_template(a: i32) -> i32 {\n+pub fn change_template(a: i32) -> i32 {\n     let c: i32;\n     unsafe {\n         asm!(\"add 1, $0\"\n@@ -44,12 +44,10 @@ fn change_template(a: i32) -> i32 {\n }\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(label=\"Hir\", cfg=\"cfail2\")]\n-#[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n-#[rustc_dirty(label=\"HirBody\", cfg=\"cfail2\")]\n-#[rustc_clean(label=\"HirBody\", cfg=\"cfail3\")]\n+#[rustc_clean(cfg=\"cfail2\", except=\"HirBody, MirValidated, MirOptimized\")]\n+#[rustc_clean(cfg=\"cfail3\")]\n #[cfg(any(target_arch = \"x86\", target_arch = \"x86_64\"))]\n-fn change_template(a: i32) -> i32 {\n+pub fn change_template(a: i32) -> i32 {\n     let c: i32;\n     unsafe {\n         asm!(\"add 2, $0\"\n@@ -67,7 +65,7 @@ fn change_template(a: i32) -> i32 {\n // Change output -------------------------------------------------------------\n #[cfg(cfail1)]\n #[cfg(any(target_arch = \"x86\", target_arch = \"x86_64\"))]\n-fn change_output(a: i32) -> i32 {\n+pub fn change_output(a: i32) -> i32 {\n     let mut _out1: i32 = 0;\n     let mut _out2: i32 = 0;\n     unsafe {\n@@ -82,12 +80,10 @@ fn change_output(a: i32) -> i32 {\n }\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(label=\"Hir\", cfg=\"cfail2\")]\n-#[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n-#[rustc_dirty(label=\"HirBody\", cfg=\"cfail2\")]\n-#[rustc_clean(label=\"HirBody\", cfg=\"cfail3\")]\n+#[rustc_clean(cfg=\"cfail2\", except=\"HirBody, MirValidated, MirOptimized\")]\n+#[rustc_clean(cfg=\"cfail3\")]\n #[cfg(any(target_arch = \"x86\", target_arch = \"x86_64\"))]\n-fn change_output(a: i32) -> i32 {\n+pub fn change_output(a: i32) -> i32 {\n     let mut _out1: i32 = 0;\n     let mut _out2: i32 = 0;\n     unsafe {\n@@ -106,7 +102,7 @@ fn change_output(a: i32) -> i32 {\n // Change input -------------------------------------------------------------\n #[cfg(cfail1)]\n #[cfg(any(target_arch = \"x86\", target_arch = \"x86_64\"))]\n-fn change_input(_a: i32, _b: i32) -> i32 {\n+pub fn change_input(_a: i32, _b: i32) -> i32 {\n     let _out;\n     unsafe {\n         asm!(\"add 1, $0\"\n@@ -120,12 +116,10 @@ fn change_input(_a: i32, _b: i32) -> i32 {\n }\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(label=\"Hir\", cfg=\"cfail2\")]\n-#[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n-#[rustc_dirty(label=\"HirBody\", cfg=\"cfail2\")]\n-#[rustc_clean(label=\"HirBody\", cfg=\"cfail3\")]\n+#[rustc_clean(cfg=\"cfail2\", except=\"HirBody, MirValidated, MirOptimized\")]\n+#[rustc_clean(cfg=\"cfail3\")]\n #[cfg(any(target_arch = \"x86\", target_arch = \"x86_64\"))]\n-fn change_input(_a: i32, _b: i32) -> i32 {\n+pub fn change_input(_a: i32, _b: i32) -> i32 {\n     let _out;\n     unsafe {\n         asm!(\"add 1, $0\"\n@@ -143,7 +137,7 @@ fn change_input(_a: i32, _b: i32) -> i32 {\n // Change input constraint -----------------------------------------------------\n #[cfg(cfail1)]\n #[cfg(any(target_arch = \"x86\", target_arch = \"x86_64\"))]\n-fn change_input_constraint(_a: i32, _b: i32) -> i32 {\n+pub fn change_input_constraint(_a: i32, _b: i32) -> i32 {\n     let _out;\n     unsafe {\n         asm!(\"add 1, $0\"\n@@ -157,12 +151,10 @@ fn change_input_constraint(_a: i32, _b: i32) -> i32 {\n }\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(label=\"Hir\", cfg=\"cfail2\")]\n-#[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n-#[rustc_dirty(label=\"HirBody\", cfg=\"cfail2\")]\n-#[rustc_clean(label=\"HirBody\", cfg=\"cfail3\")]\n+#[rustc_clean(cfg=\"cfail2\", except=\"HirBody, MirValidated, MirOptimized\")]\n+#[rustc_clean(cfg=\"cfail3\")]\n #[cfg(any(target_arch = \"x86\", target_arch = \"x86_64\"))]\n-fn change_input_constraint(_a: i32, _b: i32) -> i32 {\n+pub fn change_input_constraint(_a: i32, _b: i32) -> i32 {\n     let _out;\n     unsafe {\n         asm!(\"add 1, $0\"\n@@ -180,7 +172,7 @@ fn change_input_constraint(_a: i32, _b: i32) -> i32 {\n // Change clobber --------------------------------------------------------------\n #[cfg(cfail1)]\n #[cfg(any(target_arch = \"x86\", target_arch = \"x86_64\"))]\n-fn change_clobber(_a: i32) -> i32 {\n+pub fn change_clobber(_a: i32) -> i32 {\n     let _out;\n     unsafe {\n         asm!(\"add 1, $0\"\n@@ -194,12 +186,10 @@ fn change_clobber(_a: i32) -> i32 {\n }\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(label=\"Hir\", cfg=\"cfail2\")]\n-#[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n-#[rustc_dirty(label=\"HirBody\", cfg=\"cfail2\")]\n-#[rustc_clean(label=\"HirBody\", cfg=\"cfail3\")]\n+#[rustc_clean(cfg=\"cfail2\", except=\"HirBody, MirValidated, MirOptimized\")]\n+#[rustc_clean(cfg=\"cfail3\")]\n #[cfg(any(target_arch = \"x86\", target_arch = \"x86_64\"))]\n-fn change_clobber(_a: i32) -> i32 {\n+pub fn change_clobber(_a: i32) -> i32 {\n     let _out;\n     unsafe {\n         asm!(\"add 1, $0\"\n@@ -217,7 +207,7 @@ fn change_clobber(_a: i32) -> i32 {\n // Change options --------------------------------------------------------------\n #[cfg(cfail1)]\n #[cfg(any(target_arch = \"x86\", target_arch = \"x86_64\"))]\n-fn change_options(_a: i32) -> i32 {\n+pub fn change_options(_a: i32) -> i32 {\n     let _out;\n     unsafe {\n         asm!(\"add 1, $0\"\n@@ -231,12 +221,10 @@ fn change_options(_a: i32) -> i32 {\n }\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(label=\"Hir\", cfg=\"cfail2\")]\n-#[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n-#[rustc_dirty(label=\"HirBody\", cfg=\"cfail2\")]\n-#[rustc_clean(label=\"HirBody\", cfg=\"cfail3\")]\n+#[rustc_clean(cfg=\"cfail2\", except=\"HirBody, MirValidated, MirOptimized\")]\n+#[rustc_clean(cfg=\"cfail3\")]\n #[cfg(any(target_arch = \"x86\", target_arch = \"x86_64\"))]\n-fn change_options(_a: i32) -> i32 {\n+pub fn change_options(_a: i32) -> i32 {\n     let _out;\n     unsafe {\n         asm!(\"add 1, $0\""}, {"sha": "243dc9ee519a9c05110317399fe14794ee8583fa", "filename": "src/test/incremental/hashes/loop_expressions.rs", "status": "modified", "additions": 32, "deletions": 48, "changes": 80, "blob_url": "https://github.com/rust-lang/rust/blob/ee25791df5f025378e9ddebef661e25cb75d9172/src%2Ftest%2Fincremental%2Fhashes%2Floop_expressions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ee25791df5f025378e9ddebef661e25cb75d9172/src%2Ftest%2Fincremental%2Fhashes%2Floop_expressions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fincremental%2Fhashes%2Floop_expressions.rs?ref=ee25791df5f025378e9ddebef661e25cb75d9172", "patch": "@@ -27,7 +27,7 @@\n \n // Change loop body ------------------------------------------------------------\n #[cfg(cfail1)]\n-fn change_loop_body() {\n+pub fn change_loop_body() {\n     let mut _x = 0;\n     loop {\n         _x = 1;\n@@ -36,11 +36,9 @@ fn change_loop_body() {\n }\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(label=\"Hir\", cfg=\"cfail2\")]\n-#[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n-#[rustc_dirty(label=\"HirBody\", cfg=\"cfail2\")]\n-#[rustc_clean(label=\"HirBody\", cfg=\"cfail3\")]\n-fn change_loop_body() {\n+#[rustc_clean(cfg=\"cfail2\", except=\"HirBody, MirValidated, MirOptimized\")]\n+#[rustc_clean(cfg=\"cfail3\")]\n+pub fn change_loop_body() {\n     let mut _x = 0;\n     loop {\n         _x = 2;\n@@ -52,19 +50,17 @@ fn change_loop_body() {\n \n // Add break -------------------------------------------------------------------\n #[cfg(cfail1)]\n-fn add_break() {\n+pub fn add_break() {\n     let mut _x = 0;\n     loop {\n         _x = 1;\n     }\n }\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(label=\"Hir\", cfg=\"cfail2\")]\n-#[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n-#[rustc_dirty(label=\"HirBody\", cfg=\"cfail2\")]\n-#[rustc_clean(label=\"HirBody\", cfg=\"cfail3\")]\n-fn add_break() {\n+#[rustc_clean(cfg=\"cfail2\", except=\"HirBody, MirValidated, MirOptimized, TypeckTables\")]\n+#[rustc_clean(cfg=\"cfail3\")]\n+pub fn add_break() {\n     let mut _x = 0;\n     loop {\n         _x = 1;\n@@ -76,7 +72,7 @@ fn add_break() {\n \n // Add loop label --------------------------------------------------------------\n #[cfg(cfail1)]\n-fn add_loop_label() {\n+pub fn add_loop_label() {\n     let mut _x = 0;\n     loop {\n         _x = 1;\n@@ -85,11 +81,9 @@ fn add_loop_label() {\n }\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(label=\"Hir\", cfg=\"cfail2\")]\n-#[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n-#[rustc_dirty(label=\"HirBody\", cfg=\"cfail2\")]\n-#[rustc_clean(label=\"HirBody\", cfg=\"cfail3\")]\n-fn add_loop_label() {\n+#[rustc_clean(cfg=\"cfail2\", except=\"HirBody\")]\n+#[rustc_clean(cfg=\"cfail3\")]\n+pub fn add_loop_label() {\n     let mut _x = 0;\n     'label: loop {\n         _x = 1;\n@@ -101,7 +95,7 @@ fn add_loop_label() {\n \n // Add loop label to break -----------------------------------------------------\n #[cfg(cfail1)]\n-fn add_loop_label_to_break() {\n+pub fn add_loop_label_to_break() {\n     let mut _x = 0;\n     'label: loop {\n         _x = 1;\n@@ -110,11 +104,9 @@ fn add_loop_label_to_break() {\n }\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(label=\"Hir\", cfg=\"cfail2\")]\n-#[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n-#[rustc_dirty(label=\"HirBody\", cfg=\"cfail2\")]\n-#[rustc_clean(label=\"HirBody\", cfg=\"cfail3\")]\n-fn add_loop_label_to_break() {\n+#[rustc_clean(cfg=\"cfail2\", except=\"HirBody\")]\n+#[rustc_clean(cfg=\"cfail3\")]\n+pub fn add_loop_label_to_break() {\n     let mut _x = 0;\n     'label: loop {\n         _x = 1;\n@@ -126,7 +118,7 @@ fn add_loop_label_to_break() {\n \n // Change break label ----------------------------------------------------------\n #[cfg(cfail1)]\n-fn change_break_label() {\n+pub fn change_break_label() {\n     let mut _x = 0;\n     'outer: loop {\n         'inner: loop {\n@@ -137,11 +129,9 @@ fn change_break_label() {\n }\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(label=\"Hir\", cfg=\"cfail2\")]\n-#[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n-#[rustc_dirty(label=\"HirBody\", cfg=\"cfail2\")]\n-#[rustc_clean(label=\"HirBody\", cfg=\"cfail3\")]\n-fn change_break_label() {\n+#[rustc_clean(cfg=\"cfail2\", except=\"HirBody, MirValidated, MirOptimized, TypeckTables\")]\n+#[rustc_clean(cfg=\"cfail3\")]\n+pub fn change_break_label() {\n     let mut _x = 0;\n     'outer: loop {\n         'inner: loop {\n@@ -155,7 +145,7 @@ fn change_break_label() {\n \n // Add loop label to continue --------------------------------------------------\n #[cfg(cfail1)]\n-fn add_loop_label_to_continue() {\n+pub fn add_loop_label_to_continue() {\n     let mut _x = 0;\n     'label: loop {\n         _x = 1;\n@@ -164,11 +154,9 @@ fn add_loop_label_to_continue() {\n }\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(label=\"Hir\", cfg=\"cfail2\")]\n-#[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n-#[rustc_dirty(label=\"HirBody\", cfg=\"cfail2\")]\n-#[rustc_clean(label=\"HirBody\", cfg=\"cfail3\")]\n-fn add_loop_label_to_continue() {\n+#[rustc_clean(cfg=\"cfail2\", except=\"HirBody\")]\n+#[rustc_clean(cfg=\"cfail3\")]\n+pub fn add_loop_label_to_continue() {\n     let mut _x = 0;\n     'label: loop {\n         _x = 1;\n@@ -180,7 +168,7 @@ fn add_loop_label_to_continue() {\n \n // Change continue label ----------------------------------------------------------\n #[cfg(cfail1)]\n-fn change_continue_label() {\n+pub fn change_continue_label() {\n     let mut _x = 0;\n     'outer: loop {\n         'inner: loop {\n@@ -191,11 +179,9 @@ fn change_continue_label() {\n }\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(label=\"Hir\", cfg=\"cfail2\")]\n-#[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n-#[rustc_dirty(label=\"HirBody\", cfg=\"cfail2\")]\n-#[rustc_clean(label=\"HirBody\", cfg=\"cfail3\")]\n-fn change_continue_label() {\n+#[rustc_clean(cfg=\"cfail2\", except=\"HirBody, TypeckTables\")]\n+#[rustc_clean(cfg=\"cfail3\")]\n+pub fn change_continue_label() {\n     let mut _x = 0;\n     'outer: loop {\n         'inner: loop {\n@@ -209,7 +195,7 @@ fn change_continue_label() {\n \n // Change continue to break ----------------------------------------------------\n #[cfg(cfail1)]\n-fn change_continue_to_break() {\n+pub fn change_continue_to_break() {\n     let mut _x = 0;\n     loop {\n         _x = 1;\n@@ -218,11 +204,9 @@ fn change_continue_to_break() {\n }\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(label=\"Hir\", cfg=\"cfail2\")]\n-#[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n-#[rustc_dirty(label=\"HirBody\", cfg=\"cfail2\")]\n-#[rustc_clean(label=\"HirBody\", cfg=\"cfail3\")]\n-fn change_continue_to_break() {\n+#[rustc_clean(cfg=\"cfail2\", except=\"HirBody, MirValidated, MirOptimized, TypeckTables\")]\n+#[rustc_clean(cfg=\"cfail3\")]\n+pub fn change_continue_to_break() {\n     let mut _x = 0;\n     loop {\n         _x = 1;"}, {"sha": "cab38d0adc265c347cc4d0648496a5fc4bd80c41", "filename": "src/test/incremental/hashes/while_let_loops.rs", "status": "modified", "additions": 36, "deletions": 54, "changes": 90, "blob_url": "https://github.com/rust-lang/rust/blob/ee25791df5f025378e9ddebef661e25cb75d9172/src%2Ftest%2Fincremental%2Fhashes%2Fwhile_let_loops.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ee25791df5f025378e9ddebef661e25cb75d9172/src%2Ftest%2Fincremental%2Fhashes%2Fwhile_let_loops.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fincremental%2Fhashes%2Fwhile_let_loops.rs?ref=ee25791df5f025378e9ddebef661e25cb75d9172", "patch": "@@ -27,7 +27,7 @@\n \n // Change loop body ------------------------------------------------------------\n #[cfg(cfail1)]\n-fn change_loop_body() {\n+pub fn change_loop_body() {\n     let mut _x = 0;\n     while let Some(0u32) = None {\n         _x = 1;\n@@ -36,11 +36,9 @@ fn change_loop_body() {\n }\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(label=\"Hir\", cfg=\"cfail2\")]\n-#[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n-#[rustc_dirty(label=\"HirBody\", cfg=\"cfail2\")]\n-#[rustc_clean(label=\"HirBody\", cfg=\"cfail3\")]\n-fn change_loop_body() {\n+#[rustc_clean(cfg=\"cfail2\", except=\"HirBody, MirValidated, MirOptimized\")]\n+#[rustc_clean(cfg=\"cfail3\")]\n+pub fn change_loop_body() {\n     let mut _x = 0;\n     while let Some(0u32) = None {\n         _x = 2;\n@@ -52,7 +50,7 @@ fn change_loop_body() {\n \n // Change loop body ------------------------------------------------------------\n #[cfg(cfail1)]\n-fn change_loop_condition() {\n+pub fn change_loop_condition() {\n     let mut _x = 0;\n     while let Some(0u32) = None {\n         _x = 1;\n@@ -61,11 +59,9 @@ fn change_loop_condition() {\n }\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(label=\"Hir\", cfg=\"cfail2\")]\n-#[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n-#[rustc_dirty(label=\"HirBody\", cfg=\"cfail2\")]\n-#[rustc_clean(label=\"HirBody\", cfg=\"cfail3\")]\n-fn change_loop_condition() {\n+#[rustc_clean(cfg=\"cfail2\", except=\"HirBody, MirValidated, MirOptimized\")]\n+#[rustc_clean(cfg=\"cfail3\")]\n+pub fn change_loop_condition() {\n     let mut _x = 0;\n     while let Some(1u32) = None {\n         _x = 1;\n@@ -77,19 +73,17 @@ fn change_loop_condition() {\n \n // Add break -------------------------------------------------------------------\n #[cfg(cfail1)]\n-fn add_break() {\n+pub fn add_break() {\n     let mut _x = 0;\n     while let Some(0u32) = None {\n         _x = 1;\n     }\n }\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(label=\"Hir\", cfg=\"cfail2\")]\n-#[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n-#[rustc_dirty(label=\"HirBody\", cfg=\"cfail2\")]\n-#[rustc_clean(label=\"HirBody\", cfg=\"cfail3\")]\n-fn add_break() {\n+#[rustc_clean(cfg=\"cfail2\", except=\"HirBody, MirValidated, MirOptimized, TypeckTables\")]\n+#[rustc_clean(cfg=\"cfail3\")]\n+pub fn add_break() {\n     let mut _x = 0;\n     while let Some(0u32) = None {\n         _x = 1;\n@@ -101,7 +95,7 @@ fn add_break() {\n \n // Add loop label --------------------------------------------------------------\n #[cfg(cfail1)]\n-fn add_loop_label() {\n+pub fn add_loop_label() {\n     let mut _x = 0;\n     while let Some(0u32) = None {\n         _x = 1;\n@@ -110,11 +104,9 @@ fn add_loop_label() {\n }\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(label=\"Hir\", cfg=\"cfail2\")]\n-#[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n-#[rustc_dirty(label=\"HirBody\", cfg=\"cfail2\")]\n-#[rustc_clean(label=\"HirBody\", cfg=\"cfail3\")]\n-fn add_loop_label() {\n+#[rustc_clean(cfg=\"cfail2\", except=\"HirBody\")]\n+#[rustc_clean(cfg=\"cfail3\")]\n+pub fn add_loop_label() {\n     let mut _x = 0;\n     'label: while let Some(0u32) = None {\n         _x = 1;\n@@ -126,7 +118,7 @@ fn add_loop_label() {\n \n // Add loop label to break -----------------------------------------------------\n #[cfg(cfail1)]\n-fn add_loop_label_to_break() {\n+pub fn add_loop_label_to_break() {\n     let mut _x = 0;\n     'label: while let Some(0u32) = None {\n         _x = 1;\n@@ -135,11 +127,9 @@ fn add_loop_label_to_break() {\n }\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(label=\"Hir\", cfg=\"cfail2\")]\n-#[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n-#[rustc_dirty(label=\"HirBody\", cfg=\"cfail2\")]\n-#[rustc_clean(label=\"HirBody\", cfg=\"cfail3\")]\n-fn add_loop_label_to_break() {\n+#[rustc_clean(cfg=\"cfail2\", except=\"HirBody\")]\n+#[rustc_clean(cfg=\"cfail3\")]\n+pub fn add_loop_label_to_break() {\n     let mut _x = 0;\n     'label: while let Some(0u32) = None {\n         _x = 1;\n@@ -151,7 +141,7 @@ fn add_loop_label_to_break() {\n \n // Change break label ----------------------------------------------------------\n #[cfg(cfail1)]\n-fn change_break_label() {\n+pub fn change_break_label() {\n     let mut _x = 0;\n     'outer: while let Some(0u32) = None {\n         'inner: while let Some(0u32) = None {\n@@ -162,11 +152,9 @@ fn change_break_label() {\n }\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(label=\"Hir\", cfg=\"cfail2\")]\n-#[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n-#[rustc_dirty(label=\"HirBody\", cfg=\"cfail2\")]\n-#[rustc_clean(label=\"HirBody\", cfg=\"cfail3\")]\n-fn change_break_label() {\n+#[rustc_clean(cfg=\"cfail2\", except=\"HirBody, MirValidated, MirOptimized, TypeckTables\")]\n+#[rustc_clean(cfg=\"cfail3\")]\n+pub fn change_break_label() {\n     let mut _x = 0;\n     'outer: while let Some(0u32) = None {\n         'inner: while let Some(0u32) = None {\n@@ -180,7 +168,7 @@ fn change_break_label() {\n \n // Add loop label to continue --------------------------------------------------\n #[cfg(cfail1)]\n-fn add_loop_label_to_continue() {\n+pub fn add_loop_label_to_continue() {\n     let mut _x = 0;\n     'label: while let Some(0u32) = None {\n         _x = 1;\n@@ -189,11 +177,9 @@ fn add_loop_label_to_continue() {\n }\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(label=\"Hir\", cfg=\"cfail2\")]\n-#[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n-#[rustc_dirty(label=\"HirBody\", cfg=\"cfail2\")]\n-#[rustc_clean(label=\"HirBody\", cfg=\"cfail3\")]\n-fn add_loop_label_to_continue() {\n+#[rustc_clean(cfg=\"cfail2\", except=\"HirBody\")]\n+#[rustc_clean(cfg=\"cfail3\")]\n+pub fn add_loop_label_to_continue() {\n     let mut _x = 0;\n     'label: while let Some(0u32) = None {\n         _x = 1;\n@@ -205,7 +191,7 @@ fn add_loop_label_to_continue() {\n \n // Change continue label ----------------------------------------------------------\n #[cfg(cfail1)]\n-fn change_continue_label() {\n+pub fn change_continue_label() {\n     let mut _x = 0;\n     'outer: while let Some(0u32) = None {\n         'inner: while let Some(0u32) = None {\n@@ -216,11 +202,9 @@ fn change_continue_label() {\n }\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(label=\"Hir\", cfg=\"cfail2\")]\n-#[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n-#[rustc_dirty(label=\"HirBody\", cfg=\"cfail2\")]\n-#[rustc_clean(label=\"HirBody\", cfg=\"cfail3\")]\n-fn change_continue_label() {\n+#[rustc_clean(cfg=\"cfail2\", except=\"HirBody, MirValidated, MirOptimized, TypeckTables\")]\n+#[rustc_clean(cfg=\"cfail3\")]\n+pub fn change_continue_label() {\n     let mut _x = 0;\n     'outer: while let Some(0u32) = None {\n         'inner: while let Some(0u32) = None {\n@@ -234,7 +218,7 @@ fn change_continue_label() {\n \n // Change continue to break ----------------------------------------------------\n #[cfg(cfail1)]\n-fn change_continue_to_break() {\n+pub fn change_continue_to_break() {\n     let mut _x = 0;\n     while let Some(0u32) = None {\n         _x = 1;\n@@ -243,11 +227,9 @@ fn change_continue_to_break() {\n }\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(label=\"Hir\", cfg=\"cfail2\")]\n-#[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n-#[rustc_dirty(label=\"HirBody\", cfg=\"cfail2\")]\n-#[rustc_clean(label=\"HirBody\", cfg=\"cfail3\")]\n-fn change_continue_to_break() {\n+#[rustc_clean(cfg=\"cfail2\", except=\"HirBody, MirValidated, MirOptimized\")]\n+#[rustc_clean(cfg=\"cfail3\")]\n+pub fn change_continue_to_break() {\n     let mut _x = 0;\n     while let Some(0u32) = None {\n         _x = 1;"}, {"sha": "30989f33b4b3d0fccdc9ef9742c746a87a435611", "filename": "src/test/incremental/hashes/while_loops.rs", "status": "modified", "additions": 36, "deletions": 54, "changes": 90, "blob_url": "https://github.com/rust-lang/rust/blob/ee25791df5f025378e9ddebef661e25cb75d9172/src%2Ftest%2Fincremental%2Fhashes%2Fwhile_loops.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ee25791df5f025378e9ddebef661e25cb75d9172/src%2Ftest%2Fincremental%2Fhashes%2Fwhile_loops.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fincremental%2Fhashes%2Fwhile_loops.rs?ref=ee25791df5f025378e9ddebef661e25cb75d9172", "patch": "@@ -27,7 +27,7 @@\n \n // Change loop body ------------------------------------------------------------\n #[cfg(cfail1)]\n-fn change_loop_body() {\n+pub fn change_loop_body() {\n     let mut _x = 0;\n     while true {\n         _x = 1;\n@@ -36,11 +36,9 @@ fn change_loop_body() {\n }\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(label=\"Hir\", cfg=\"cfail2\")]\n-#[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n-#[rustc_dirty(label=\"HirBody\", cfg=\"cfail2\")]\n-#[rustc_clean(label=\"HirBody\", cfg=\"cfail3\")]\n-fn change_loop_body() {\n+#[rustc_clean(cfg=\"cfail2\", except=\"HirBody, MirValidated, MirOptimized\")]\n+#[rustc_clean(cfg=\"cfail3\")]\n+pub fn change_loop_body() {\n     let mut _x = 0;\n     while true {\n         _x = 2;\n@@ -52,7 +50,7 @@ fn change_loop_body() {\n \n // Change loop body ------------------------------------------------------------\n #[cfg(cfail1)]\n-fn change_loop_condition() {\n+pub fn change_loop_condition() {\n     let mut _x = 0;\n     while true {\n         _x = 1;\n@@ -61,11 +59,9 @@ fn change_loop_condition() {\n }\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(label=\"Hir\", cfg=\"cfail2\")]\n-#[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n-#[rustc_dirty(label=\"HirBody\", cfg=\"cfail2\")]\n-#[rustc_clean(label=\"HirBody\", cfg=\"cfail3\")]\n-fn change_loop_condition() {\n+#[rustc_clean(cfg=\"cfail2\", except=\"HirBody, MirValidated, MirOptimized\")]\n+#[rustc_clean(cfg=\"cfail3\")]\n+pub fn change_loop_condition() {\n     let mut _x = 0;\n     while false {\n         _x = 1;\n@@ -77,19 +73,17 @@ fn change_loop_condition() {\n \n // Add break -------------------------------------------------------------------\n #[cfg(cfail1)]\n-fn add_break() {\n+pub fn add_break() {\n     let mut _x = 0;\n     while true {\n         _x = 1;\n     }\n }\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(label=\"Hir\", cfg=\"cfail2\")]\n-#[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n-#[rustc_dirty(label=\"HirBody\", cfg=\"cfail2\")]\n-#[rustc_clean(label=\"HirBody\", cfg=\"cfail3\")]\n-fn add_break() {\n+#[rustc_clean(cfg=\"cfail2\", except=\"HirBody, MirValidated, MirOptimized, TypeckTables\")]\n+#[rustc_clean(cfg=\"cfail3\")]\n+pub fn add_break() {\n     let mut _x = 0;\n     while true {\n         _x = 1;\n@@ -101,7 +95,7 @@ fn add_break() {\n \n // Add loop label --------------------------------------------------------------\n #[cfg(cfail1)]\n-fn add_loop_label() {\n+pub fn add_loop_label() {\n     let mut _x = 0;\n     while true {\n         _x = 1;\n@@ -110,11 +104,9 @@ fn add_loop_label() {\n }\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(label=\"Hir\", cfg=\"cfail2\")]\n-#[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n-#[rustc_dirty(label=\"HirBody\", cfg=\"cfail2\")]\n-#[rustc_clean(label=\"HirBody\", cfg=\"cfail3\")]\n-fn add_loop_label() {\n+#[rustc_clean(cfg=\"cfail2\", except=\"HirBody\")]\n+#[rustc_clean(cfg=\"cfail3\")]\n+pub fn add_loop_label() {\n     let mut _x = 0;\n     'label: while true {\n         _x = 1;\n@@ -126,7 +118,7 @@ fn add_loop_label() {\n \n // Add loop label to break -----------------------------------------------------\n #[cfg(cfail1)]\n-fn add_loop_label_to_break() {\n+pub fn add_loop_label_to_break() {\n     let mut _x = 0;\n     'label: while true {\n         _x = 1;\n@@ -135,11 +127,9 @@ fn add_loop_label_to_break() {\n }\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(label=\"Hir\", cfg=\"cfail2\")]\n-#[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n-#[rustc_dirty(label=\"HirBody\", cfg=\"cfail2\")]\n-#[rustc_clean(label=\"HirBody\", cfg=\"cfail3\")]\n-fn add_loop_label_to_break() {\n+#[rustc_clean(cfg=\"cfail2\", except=\"HirBody\")]\n+#[rustc_clean(cfg=\"cfail3\")]\n+pub fn add_loop_label_to_break() {\n     let mut _x = 0;\n     'label: while true {\n         _x = 1;\n@@ -151,7 +141,7 @@ fn add_loop_label_to_break() {\n \n // Change break label ----------------------------------------------------------\n #[cfg(cfail1)]\n-fn change_break_label() {\n+pub fn change_break_label() {\n     let mut _x = 0;\n     'outer: while true {\n         'inner: while true {\n@@ -162,11 +152,9 @@ fn change_break_label() {\n }\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(label=\"Hir\", cfg=\"cfail2\")]\n-#[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n-#[rustc_dirty(label=\"HirBody\", cfg=\"cfail2\")]\n-#[rustc_clean(label=\"HirBody\", cfg=\"cfail3\")]\n-fn change_break_label() {\n+#[rustc_clean(cfg=\"cfail2\", except=\"HirBody, MirValidated, MirOptimized\")]\n+#[rustc_clean(cfg=\"cfail3\")]\n+pub fn change_break_label() {\n     let mut _x = 0;\n     'outer: while true {\n         'inner: while true {\n@@ -180,7 +168,7 @@ fn change_break_label() {\n \n // Add loop label to continue --------------------------------------------------\n #[cfg(cfail1)]\n-fn add_loop_label_to_continue() {\n+pub fn add_loop_label_to_continue() {\n     let mut _x = 0;\n     'label: while true {\n         _x = 1;\n@@ -189,11 +177,9 @@ fn add_loop_label_to_continue() {\n }\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(label=\"Hir\", cfg=\"cfail2\")]\n-#[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n-#[rustc_dirty(label=\"HirBody\", cfg=\"cfail2\")]\n-#[rustc_clean(label=\"HirBody\", cfg=\"cfail3\")]\n-fn add_loop_label_to_continue() {\n+#[rustc_clean(cfg=\"cfail2\", except=\"HirBody\")]\n+#[rustc_clean(cfg=\"cfail3\")]\n+pub fn add_loop_label_to_continue() {\n     let mut _x = 0;\n     'label: while true {\n         _x = 1;\n@@ -205,7 +191,7 @@ fn add_loop_label_to_continue() {\n \n // Change continue label ----------------------------------------------------------\n #[cfg(cfail1)]\n-fn change_continue_label() {\n+pub fn change_continue_label() {\n     let mut _x = 0;\n     'outer: while true {\n         'inner: while true {\n@@ -216,11 +202,9 @@ fn change_continue_label() {\n }\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(label=\"Hir\", cfg=\"cfail2\")]\n-#[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n-#[rustc_dirty(label=\"HirBody\", cfg=\"cfail2\")]\n-#[rustc_clean(label=\"HirBody\", cfg=\"cfail3\")]\n-fn change_continue_label() {\n+#[rustc_clean(cfg=\"cfail2\", except=\"HirBody, MirValidated\")]\n+#[rustc_clean(cfg=\"cfail3\")]\n+pub fn change_continue_label() {\n     let mut _x = 0;\n     'outer: while true {\n         'inner: while true {\n@@ -234,7 +218,7 @@ fn change_continue_label() {\n \n // Change continue to break ----------------------------------------------------\n #[cfg(cfail1)]\n-fn change_continue_to_break() {\n+pub fn change_continue_to_break() {\n     let mut _x = 0;\n     while true {\n         _x = 1;\n@@ -243,11 +227,9 @@ fn change_continue_to_break() {\n }\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(label=\"Hir\", cfg=\"cfail2\")]\n-#[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n-#[rustc_dirty(label=\"HirBody\", cfg=\"cfail2\")]\n-#[rustc_clean(label=\"HirBody\", cfg=\"cfail3\")]\n-fn change_continue_to_break() {\n+#[rustc_clean(cfg=\"cfail2\", except=\"HirBody, MirValidated, MirOptimized\")]\n+#[rustc_clean(cfg=\"cfail3\")]\n+pub fn change_continue_to_break() {\n     let mut _x = 0;\n     while true {\n         _x = 1;"}]}