{"sha": "29b5844c2d7225936545ead6c25e13fc1e822b63", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI5YjU4NDRjMmQ3MjI1OTM2NTQ1ZWFkNmMyNWUxM2ZjMWU4MjJiNjM=", "commit": {"author": {"name": "Bastian Kauschke", "email": "bastian_kauschke@hotmail.de", "date": "2020-07-07T08:40:36Z"}, "committer": {"name": "Bastian Kauschke", "email": "bastian_kauschke@hotmail.de", "date": "2020-07-15T10:58:32Z"}, "message": "only call `typeck_tables_of_const_arg` for const args", "tree": {"sha": "457310e9ea126dd2f4000f9c3fadb7b0eb23e03b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/457310e9ea126dd2f4000f9c3fadb7b0eb23e03b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/29b5844c2d7225936545ead6c25e13fc1e822b63", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/29b5844c2d7225936545ead6c25e13fc1e822b63", "html_url": "https://github.com/rust-lang/rust/commit/29b5844c2d7225936545ead6c25e13fc1e822b63", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/29b5844c2d7225936545ead6c25e13fc1e822b63/comments", "author": {"login": "lcnr", "id": 29864074, "node_id": "MDQ6VXNlcjI5ODY0MDc0", "avatar_url": "https://avatars.githubusercontent.com/u/29864074?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lcnr", "html_url": "https://github.com/lcnr", "followers_url": "https://api.github.com/users/lcnr/followers", "following_url": "https://api.github.com/users/lcnr/following{/other_user}", "gists_url": "https://api.github.com/users/lcnr/gists{/gist_id}", "starred_url": "https://api.github.com/users/lcnr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lcnr/subscriptions", "organizations_url": "https://api.github.com/users/lcnr/orgs", "repos_url": "https://api.github.com/users/lcnr/repos", "events_url": "https://api.github.com/users/lcnr/events{/privacy}", "received_events_url": "https://api.github.com/users/lcnr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "lcnr", "id": 29864074, "node_id": "MDQ6VXNlcjI5ODY0MDc0", "avatar_url": "https://avatars.githubusercontent.com/u/29864074?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lcnr", "html_url": "https://github.com/lcnr", "followers_url": "https://api.github.com/users/lcnr/followers", "following_url": "https://api.github.com/users/lcnr/following{/other_user}", "gists_url": "https://api.github.com/users/lcnr/gists{/gist_id}", "starred_url": "https://api.github.com/users/lcnr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lcnr/subscriptions", "organizations_url": "https://api.github.com/users/lcnr/orgs", "repos_url": "https://api.github.com/users/lcnr/repos", "events_url": "https://api.github.com/users/lcnr/events{/privacy}", "received_events_url": "https://api.github.com/users/lcnr/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9df03ccf622b96f23bc185019d9be464c308f3fe", "url": "https://api.github.com/repos/rust-lang/rust/commits/9df03ccf622b96f23bc185019d9be464c308f3fe", "html_url": "https://github.com/rust-lang/rust/commit/9df03ccf622b96f23bc185019d9be464c308f3fe"}], "stats": {"total": 19, "additions": 15, "deletions": 4}, "files": [{"sha": "56cd93a509a35dc4fdf34d06d99c72f3b3e4fd7d", "filename": "src/librustc_middle/query/mod.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/29b5844c2d7225936545ead6c25e13fc1e822b63/src%2Flibrustc_middle%2Fquery%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/29b5844c2d7225936545ead6c25e13fc1e822b63/src%2Flibrustc_middle%2Fquery%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_middle%2Fquery%2Fmod.rs?ref=29b5844c2d7225936545ead6c25e13fc1e822b63", "patch": "@@ -579,11 +579,11 @@ rustc_queries! {\n             desc { |tcx| \"type-checking `{}`\", tcx.def_path_str(key.to_def_id()) }\n             cache_on_disk_if { true }\n         }\n-        query typeck_tables_of_const_arg(\n+        query _typeck_tables_of_const_arg(\n             key: ty::WithOptParam<LocalDefId>\n         ) -> &'tcx ty::TypeckTables<'tcx> {\n             desc {\n-                |tcx| \"type-checking the potential const argument `{}`\",\n+                |tcx| \"type-checking the const argument `{}`\",\n                 tcx.def_path_str(key.did.to_def_id()),\n             }\n         }"}, {"sha": "f79297aeac69799cc083125d92c5249066b26d60", "filename": "src/librustc_middle/ty/context.rs", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/29b5844c2d7225936545ead6c25e13fc1e822b63/src%2Flibrustc_middle%2Fty%2Fcontext.rs", "raw_url": "https://github.com/rust-lang/rust/raw/29b5844c2d7225936545ead6c25e13fc1e822b63/src%2Flibrustc_middle%2Fty%2Fcontext.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_middle%2Fty%2Fcontext.rs?ref=29b5844c2d7225936545ead6c25e13fc1e822b63", "patch": "@@ -980,6 +980,17 @@ pub struct GlobalCtxt<'tcx> {\n }\n \n impl<'tcx> TyCtxt<'tcx> {\n+    pub fn typeck_tables_of_const_arg(\n+        self,\n+        def: ty::WithOptParam<LocalDefId>,\n+    ) -> &'tcx TypeckTables<'tcx> {\n+        if def.param_did.is_some() {\n+            self._typeck_tables_of_const_arg(def)\n+        } else {\n+            self.typeck_tables_of(def.did)\n+        }\n+    }\n+\n     pub fn alloc_steal_mir(self, mir: Body<'tcx>) -> &'tcx Steal<Body<'tcx>> {\n         self.arena.alloc(Steal::new(mir))\n     }"}, {"sha": "fdeb01cc6b35ac54bbc736aa1ba7212850f2b0d5", "filename": "src/librustc_typeck/check/mod.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/29b5844c2d7225936545ead6c25e13fc1e822b63/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/29b5844c2d7225936545ead6c25e13fc1e822b63/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs?ref=29b5844c2d7225936545ead6c25e13fc1e822b63", "patch": "@@ -764,7 +764,7 @@ pub fn provide(providers: &mut Providers) {\n     method::provide(providers);\n     *providers = Providers {\n         typeck_item_bodies,\n-        typeck_tables_of_const_arg,\n+        _typeck_tables_of_const_arg: typeck_tables_of_const_arg,\n         typeck_tables_of,\n         diagnostic_only_typeck_tables_of,\n         has_typeck_tables,\n@@ -964,7 +964,7 @@ fn typeck_tables_of_const_arg<'tcx>(\n         let fallback = move || tcx.type_of(param_did);\n         typeck_tables_of_with_fallback(tcx, def.did, fallback)\n     } else {\n-        tcx.typeck_tables_of(def.did)\n+        bug!(\"missing param_did\")\n     }\n }\n "}]}