{"sha": "e1911510010d639cadd85b7b0fc4e3c6b5bbf05e", "node_id": "MDY6Q29tbWl0NzI0NzEyOmUxOTExNTEwMDEwZDYzOWNhZGQ4NWI3YjBmYzRlM2M2YjViYmYwNWU=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2020-08-25T19:30:05Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2020-08-25T19:30:05Z"}, "message": "Auto merge of #5961 - scottmcm:master, r=Manishearth\n\nRe-enable len_zero for ranges now that `is_empty` is stable on them\n\nFixes #5956\n\nCompleted stabilization PR: https://github.com/rust-lang/rust/pull/75132\n\nchangelog: len_zero: re-enable linting ranges now that range_is_empty is stable", "tree": {"sha": "7c0f6829339d8c8eb59265cd70e5e2765afb0b11", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7c0f6829339d8c8eb59265cd70e5e2765afb0b11"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e1911510010d639cadd85b7b0fc4e3c6b5bbf05e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e1911510010d639cadd85b7b0fc4e3c6b5bbf05e", "html_url": "https://github.com/rust-lang/rust/commit/e1911510010d639cadd85b7b0fc4e3c6b5bbf05e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e1911510010d639cadd85b7b0fc4e3c6b5bbf05e/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f3266685777191c62e9941ee43f199d85a39db97", "url": "https://api.github.com/repos/rust-lang/rust/commits/f3266685777191c62e9941ee43f199d85a39db97", "html_url": "https://github.com/rust-lang/rust/commit/f3266685777191c62e9941ee43f199d85a39db97"}, {"sha": "3b1e5d6ff79f93e0215c6fb4c802167834ea4e15", "url": "https://api.github.com/repos/rust-lang/rust/commits/3b1e5d6ff79f93e0215c6fb4c802167834ea4e15", "html_url": "https://github.com/rust-lang/rust/commit/3b1e5d6ff79f93e0215c6fb4c802167834ea4e15"}], "stats": {"total": 63, "additions": 21, "deletions": 42}, "files": [{"sha": "b691d363d2f2165ca03be278f0706a82f018e0bb", "filename": "clippy_lints/src/len_zero.rs", "status": "modified", "additions": 1, "deletions": 16, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/e1911510010d639cadd85b7b0fc4e3c6b5bbf05e/clippy_lints%2Fsrc%2Flen_zero.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e1911510010d639cadd85b7b0fc4e3c6b5bbf05e/clippy_lints%2Fsrc%2Flen_zero.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Flen_zero.rs?ref=e1911510010d639cadd85b7b0fc4e3c6b5bbf05e", "patch": "@@ -1,4 +1,4 @@\n-use crate::utils::{get_item_name, higher, snippet_with_applicability, span_lint, span_lint_and_sugg, walk_ptrs_ty};\n+use crate::utils::{get_item_name, snippet_with_applicability, span_lint, span_lint_and_sugg, walk_ptrs_ty};\n use rustc_ast::ast::LitKind;\n use rustc_data_structures::fx::FxHashSet;\n use rustc_errors::Applicability;\n@@ -260,17 +260,6 @@ fn check_len(\n \n /// Checks if this type has an `is_empty` method.\n fn has_is_empty(cx: &LateContext<'_>, expr: &Expr<'_>) -> bool {\n-    /// Special case ranges until `range_is_empty` is stabilized. See issue 3807.\n-    fn should_skip_range(cx: &LateContext<'_>, expr: &Expr<'_>) -> bool {\n-        higher::range(expr).map_or(false, |_| {\n-            !cx.tcx\n-                .features()\n-                .declared_lib_features\n-                .iter()\n-                .any(|(name, _)| name.as_str() == \"range_is_empty\")\n-        })\n-    }\n-\n     /// Gets an `AssocItem` and return true if it matches `is_empty(self)`.\n     fn is_is_empty(cx: &LateContext<'_>, item: &ty::AssocItem) -> bool {\n         if let ty::AssocKind::Fn = item.kind {\n@@ -296,10 +285,6 @@ fn has_is_empty(cx: &LateContext<'_>, expr: &Expr<'_>) -> bool {\n         })\n     }\n \n-    if should_skip_range(cx, expr) {\n-        return false;\n-    }\n-\n     let ty = &walk_ptrs_ty(cx.typeck_results().expr_ty(expr));\n     match ty.kind {\n         ty::Dynamic(ref tt, ..) => tt.principal().map_or(false, |principal| {"}, {"sha": "1f3b8ac99b19146f766e6758d0cd799d37dc92c0", "filename": "tests/ui/len_zero.fixed", "status": "modified", "additions": 0, "deletions": 8, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/e1911510010d639cadd85b7b0fc4e3c6b5bbf05e/tests%2Fui%2Flen_zero.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/e1911510010d639cadd85b7b0fc4e3c6b5bbf05e/tests%2Fui%2Flen_zero.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Flen_zero.fixed?ref=e1911510010d639cadd85b7b0fc4e3c6b5bbf05e", "patch": "@@ -141,11 +141,3 @@ fn main() {\n fn test_slice(b: &[u8]) {\n     if !b.is_empty() {}\n }\n-\n-mod issue_3807 {\n-    // Avoid suggesting changes to ranges if the user did not enable `range_is_empty`.\n-    // See https://github.com/rust-lang/rust/issues/48111#issuecomment-445132965\n-    fn no_suggestion() {\n-        let _ = (0..42).len() == 0;\n-    }\n-}"}, {"sha": "dc21de0001b6c76eb2f57cdba4e7416319d5b756", "filename": "tests/ui/len_zero.rs", "status": "modified", "additions": 0, "deletions": 8, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/e1911510010d639cadd85b7b0fc4e3c6b5bbf05e/tests%2Fui%2Flen_zero.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e1911510010d639cadd85b7b0fc4e3c6b5bbf05e/tests%2Fui%2Flen_zero.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Flen_zero.rs?ref=e1911510010d639cadd85b7b0fc4e3c6b5bbf05e", "patch": "@@ -141,11 +141,3 @@ fn main() {\n fn test_slice(b: &[u8]) {\n     if b.len() != 0 {}\n }\n-\n-mod issue_3807 {\n-    // Avoid suggesting changes to ranges if the user did not enable `range_is_empty`.\n-    // See https://github.com/rust-lang/rust/issues/48111#issuecomment-445132965\n-    fn no_suggestion() {\n-        let _ = (0..42).len() == 0;\n-    }\n-}"}, {"sha": "7978176624274ab7626f9c45be5d383daf7cde36", "filename": "tests/ui/len_zero_ranges.fixed", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/e1911510010d639cadd85b7b0fc4e3c6b5bbf05e/tests%2Fui%2Flen_zero_ranges.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/e1911510010d639cadd85b7b0fc4e3c6b5bbf05e/tests%2Fui%2Flen_zero_ranges.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Flen_zero_ranges.fixed?ref=e1911510010d639cadd85b7b0fc4e3c6b5bbf05e", "patch": "@@ -1,15 +1,17 @@\n // run-rustfix\n \n-#![feature(range_is_empty)]\n #![warn(clippy::len_zero)]\n #![allow(unused)]\n-#![allow(stable_features)] // TODO: https://github.com/rust-lang/rust-clippy/issues/5956\n \n+// Now that `Range(Inclusive)::is_empty` is stable (1.47), we can always suggest this\n mod issue_3807 {\n-    // With the feature enabled, `is_empty` should be suggested\n-    fn suggestion_is_fine() {\n+    fn suggestion_is_fine_range() {\n         let _ = (0..42).is_empty();\n     }\n+\n+    fn suggestion_is_fine_range_inclusive() {\n+        let _ = (0_u8..=42).is_empty();\n+    }\n }\n \n fn main() {}"}, {"sha": "a0eb51cc9760c462372dddaaa31819db94541efe", "filename": "tests/ui/len_zero_ranges.rs", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/e1911510010d639cadd85b7b0fc4e3c6b5bbf05e/tests%2Fui%2Flen_zero_ranges.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e1911510010d639cadd85b7b0fc4e3c6b5bbf05e/tests%2Fui%2Flen_zero_ranges.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Flen_zero_ranges.rs?ref=e1911510010d639cadd85b7b0fc4e3c6b5bbf05e", "patch": "@@ -1,15 +1,17 @@\n // run-rustfix\n \n-#![feature(range_is_empty)]\n #![warn(clippy::len_zero)]\n #![allow(unused)]\n-#![allow(stable_features)] // TODO: https://github.com/rust-lang/rust-clippy/issues/5956\n \n+// Now that `Range(Inclusive)::is_empty` is stable (1.47), we can always suggest this\n mod issue_3807 {\n-    // With the feature enabled, `is_empty` should be suggested\n-    fn suggestion_is_fine() {\n+    fn suggestion_is_fine_range() {\n         let _ = (0..42).len() == 0;\n     }\n+\n+    fn suggestion_is_fine_range_inclusive() {\n+        let _ = (0_u8..=42).len() == 0;\n+    }\n }\n \n fn main() {}"}, {"sha": "d0defb5a79edcb582ca4b5711ce40ee3a4af0e9f", "filename": "tests/ui/len_zero_ranges.stderr", "status": "modified", "additions": 8, "deletions": 2, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/e1911510010d639cadd85b7b0fc4e3c6b5bbf05e/tests%2Fui%2Flen_zero_ranges.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e1911510010d639cadd85b7b0fc4e3c6b5bbf05e/tests%2Fui%2Flen_zero_ranges.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Flen_zero_ranges.stderr?ref=e1911510010d639cadd85b7b0fc4e3c6b5bbf05e", "patch": "@@ -1,10 +1,16 @@\n error: length comparison to zero\n-  --> $DIR/len_zero_ranges.rs:11:17\n+  --> $DIR/len_zero_ranges.rs:9:17\n    |\n LL |         let _ = (0..42).len() == 0;\n    |                 ^^^^^^^^^^^^^^^^^^ help: using `is_empty` is clearer and more explicit: `(0..42).is_empty()`\n    |\n    = note: `-D clippy::len-zero` implied by `-D warnings`\n \n-error: aborting due to previous error\n+error: length comparison to zero\n+  --> $DIR/len_zero_ranges.rs:13:17\n+   |\n+LL |         let _ = (0_u8..=42).len() == 0;\n+   |                 ^^^^^^^^^^^^^^^^^^^^^^ help: using `is_empty` is clearer and more explicit: `(0_u8..=42).is_empty()`\n+\n+error: aborting due to 2 previous errors\n "}]}