{"sha": "3350b17c60eec98264c62c3e12893d5ca8e00e7d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjMzNTBiMTdjNjBlZWM5ODI2NGM2MmMzZTEyODkzZDVjYThlMDBlN2Q=", "commit": {"author": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2010-09-15T21:36:40Z"}, "committer": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2010-09-15T21:36:40Z"}, "message": "Add pretty-printing for pexps.", "tree": {"sha": "08cd28cb8f3456dc2f2ba828db5d26d9fa4b601e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/08cd28cb8f3456dc2f2ba828db5d26d9fa4b601e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3350b17c60eec98264c62c3e12893d5ca8e00e7d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3350b17c60eec98264c62c3e12893d5ca8e00e7d", "html_url": "https://github.com/rust-lang/rust/commit/3350b17c60eec98264c62c3e12893d5ca8e00e7d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3350b17c60eec98264c62c3e12893d5ca8e00e7d/comments", "author": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "committer": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "77beffc889effe6f77248568a684d8b942610c85", "url": "https://api.github.com/repos/rust-lang/rust/commits/77beffc889effe6f77248568a684d8b942610c85", "html_url": "https://github.com/rust-lang/rust/commit/77beffc889effe6f77248568a684d8b942610c85"}], "stats": {"total": 145, "additions": 145, "deletions": 0}, "files": [{"sha": "8551c5667d1f8678e78e033e6bb4703ed7a67d06", "filename": "src/boot/fe/ast.ml", "status": "modified", "additions": 145, "deletions": 0, "changes": 145, "blob_url": "https://github.com/rust-lang/rust/blob/3350b17c60eec98264c62c3e12893d5ca8e00e7d/src%2Fboot%2Ffe%2Fast.ml", "raw_url": "https://github.com/rust-lang/rust/raw/3350b17c60eec98264c62c3e12893d5ca8e00e7d/src%2Fboot%2Ffe%2Fast.ml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fboot%2Ffe%2Fast.ml?ref=3350b17c60eec98264c62c3e12893d5ca8e00e7d", "patch": "@@ -906,6 +906,151 @@ and fmt_expr (ff:Format.formatter) (e:expr) : unit =\n       end\n   | EXPR_atom a -> fmt_atom ff a\n \n+and fmt_mutability (ff:Format.formatter) (mut:mutability) : unit =\n+  if mut = MUT_mutable then fmt ff \"mutable \"\n+\n+and fmt_pexp (ff:Format.formatter) (pexp:pexp) : unit =\n+  match pexp.node with\n+      PEXP_call (fn, args) ->\n+        fmt_pexp ff fn;\n+        fmt_bracketed_arr_sep \"(\" \")\" \",\" fmt_pexp ff args\n+\n+    | PEXP_spawn (dom, name, call) ->\n+        fmt_domain ff dom;\n+        fmt_str ff (\"\\\"\" ^ name ^ \"\\\"\");\n+        fmt_pexp ff call\n+\n+    | PEXP_bind (fn, arg_opts) ->\n+        fmt_pexp ff fn;\n+        let fmt_opt ff opt =\n+          match opt with\n+              None -> fmt ff \"_\"\n+            | Some p -> fmt_pexp ff p\n+        in\n+          fmt_bracketed_arr_sep \"(\" \")\" \",\" fmt_opt ff arg_opts\n+\n+    | PEXP_rec (elts, base) ->\n+        fmt ff \"rec(\";\n+        let fmt_elt ff (ident, mut, pexp) =\n+          fmt_mutability ff mut;\n+          fmt_ident ff ident;\n+          fmt ff \" = \";\n+          fmt_pexp ff pexp;\n+        in\n+          fmt_arr_sep \",\" fmt_elt ff elts;\n+          begin\n+            match base with\n+                None -> ()\n+              | Some b ->\n+                  fmt ff \" with \";\n+                  fmt_pexp ff b\n+          end;\n+          fmt ff \")\"\n+\n+    | PEXP_tup elts ->\n+        fmt ff \"tup\";\n+        let fmt_elt ff (mut, pexp) =\n+          fmt_mutability ff mut;\n+          fmt_pexp ff pexp\n+        in\n+          fmt_bracketed_arr_sep \"(\" \")\" \",\" fmt_elt ff elts\n+\n+    | PEXP_vec (mut, elts) ->\n+        fmt ff \"vec\";\n+        if mut = MUT_mutable then fmt ff \"[mutable]\";\n+        fmt_bracketed_arr_sep \"(\" \")\" \",\" fmt_pexp ff elts\n+\n+    | PEXP_port ->\n+        fmt ff \"port()\"\n+\n+    | PEXP_chan None ->\n+        fmt ff \"chan()\"\n+\n+    | PEXP_chan (Some pexp) ->\n+        fmt ff \"chan\";\n+        fmt_bracketed \"(\" \")\" fmt_pexp ff pexp\n+\n+    | PEXP_binop (binop, a, b) ->\n+        fmt_pexp ff a;\n+        fmt ff \" \";\n+        fmt_binop ff binop;\n+        fmt ff \" \";\n+        fmt_pexp ff b;\n+\n+    | PEXP_lazy_and (a, b) ->\n+        fmt_pexp ff a;\n+        fmt ff \" && \";\n+        fmt_pexp ff b\n+\n+    | PEXP_lazy_or (a, b) ->\n+        fmt_pexp ff a;\n+        fmt ff \" || \";\n+        fmt_pexp ff b\n+\n+    | PEXP_unop (unop, pexp) ->\n+        begin\n+          match unop with\n+              UNOP_not ->\n+                fmt ff \"!\";\n+                fmt_pexp ff pexp\n+\n+            | UNOP_bitnot ->\n+                fmt ff \"~\";\n+                fmt_pexp ff pexp\n+\n+            | UNOP_neg ->\n+                fmt ff \"-\";\n+                fmt_pexp ff pexp\n+\n+            | UNOP_cast t ->\n+                fmt_pexp ff pexp;\n+                fmt ff \" as \";\n+                fmt_ty ff t.node\n+        end\n+\n+    | PEXP_lval plval ->\n+        fmt_plval ff plval\n+\n+    | PEXP_lit lit ->\n+        fmt_lit ff lit\n+\n+    | PEXP_str str -> fmt_str ff str\n+\n+    | PEXP_box (mut, pexp) ->\n+        fmt_mutability ff mut;\n+        fmt ff \"@\";\n+        fmt_pexp ff pexp\n+\n+    | PEXP_custom (name, args, txt) ->\n+        fmt ff \"#\";\n+        fmt_name ff name;\n+        fmt_bracketed_arr_sep \"(\" \")\" \",\" fmt_pexp ff args;\n+        match txt with\n+            None -> ()\n+          | Some t -> fmt ff \"{%s}\" t\n+\n+\n+and fmt_plval (ff:Format.formatter) (plval:plval) : unit =\n+  match plval with\n+      PLVAL_ident id -> fmt_ident ff id\n+    | PLVAL_app (id, tys) ->\n+        fmt_ident ff id;\n+        fmt_bracketed_arr_sep \"[\" \"]\" \",\" fmt_ty ff tys\n+\n+    | PLVAL_ext_name (pexp, nc) ->\n+        fmt_pexp ff pexp;\n+        fmt ff \".\";\n+        fmt_name_component ff nc\n+\n+    | PLVAL_ext_pexp (pexp, ext) ->\n+        fmt_pexp ff pexp;\n+        fmt_bracketed \".(\" \")\" fmt_pexp ff ext\n+\n+    | PLVAL_ext_deref pexp ->\n+        fmt ff \"*\";\n+        fmt_pexp ff pexp\n+\n+\n and fmt_mach (ff:Format.formatter) (m:ty_mach) : unit =\n   match m with\n     TY_u8 -> fmt ff \"u8\""}]}