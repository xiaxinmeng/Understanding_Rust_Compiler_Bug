{"sha": "8e836566f04eef02799609d8e480f3b038270147", "node_id": "C_kwDOAAsO6NoAKDhlODM2NTY2ZjA0ZWVmMDI3OTk2MDlkOGU0ODBmM2IwMzgyNzAxNDc", "commit": {"author": {"name": "David Wood", "email": "david.wood@huawei.com", "date": "2022-06-27T16:02:46Z"}, "committer": {"name": "David Wood", "email": "david.wood@huawei.com", "date": "2022-06-30T07:59:21Z"}, "message": "lint: port redundant semicolons diagnostics\n\nSigned-off-by: David Wood <david.wood@huawei.com>", "tree": {"sha": "804d813a4d65bc52b5d3aed06ed17b6fb68804b0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/804d813a4d65bc52b5d3aed06ed17b6fb68804b0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8e836566f04eef02799609d8e480f3b038270147", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8e836566f04eef02799609d8e480f3b038270147", "html_url": "https://github.com/rust-lang/rust/commit/8e836566f04eef02799609d8e480f3b038270147", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8e836566f04eef02799609d8e480f3b038270147/comments", "author": {"login": "davidtwco", "id": 1295100, "node_id": "MDQ6VXNlcjEyOTUxMDA=", "avatar_url": "https://avatars.githubusercontent.com/u/1295100?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidtwco", "html_url": "https://github.com/davidtwco", "followers_url": "https://api.github.com/users/davidtwco/followers", "following_url": "https://api.github.com/users/davidtwco/following{/other_user}", "gists_url": "https://api.github.com/users/davidtwco/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidtwco/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidtwco/subscriptions", "organizations_url": "https://api.github.com/users/davidtwco/orgs", "repos_url": "https://api.github.com/users/davidtwco/repos", "events_url": "https://api.github.com/users/davidtwco/events{/privacy}", "received_events_url": "https://api.github.com/users/davidtwco/received_events", "type": "User", "site_admin": false}, "committer": {"login": "davidtwco", "id": 1295100, "node_id": "MDQ6VXNlcjEyOTUxMDA=", "avatar_url": "https://avatars.githubusercontent.com/u/1295100?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidtwco", "html_url": "https://github.com/davidtwco", "followers_url": "https://api.github.com/users/davidtwco/followers", "following_url": "https://api.github.com/users/davidtwco/following{/other_user}", "gists_url": "https://api.github.com/users/davidtwco/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidtwco/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidtwco/subscriptions", "organizations_url": "https://api.github.com/users/davidtwco/orgs", "repos_url": "https://api.github.com/users/davidtwco/repos", "events_url": "https://api.github.com/users/davidtwco/events{/privacy}", "received_events_url": "https://api.github.com/users/davidtwco/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "37588d6d4e9ed03ab82d55d9ac14a973c4b641d3", "url": "https://api.github.com/repos/rust-lang/rust/commits/37588d6d4e9ed03ab82d55d9ac14a973c4b641d3", "html_url": "https://github.com/rust-lang/rust/commit/37588d6d4e9ed03ab82d55d9ac14a973c4b641d3"}], "stats": {"total": 22, "additions": 15, "deletions": 7}, "files": [{"sha": "511c0baaeca9cdfb831e47ca2db820d18279cb8c", "filename": "compiler/rustc_error_messages/locales/en-US/lint.ftl", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/8e836566f04eef02799609d8e480f3b038270147/compiler%2Frustc_error_messages%2Flocales%2Fen-US%2Flint.ftl", "raw_url": "https://github.com/rust-lang/rust/raw/8e836566f04eef02799609d8e480f3b038270147/compiler%2Frustc_error_messages%2Flocales%2Fen-US%2Flint.ftl", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_error_messages%2Flocales%2Fen-US%2Flint.ftl?ref=8e836566f04eef02799609d8e480f3b038270147", "patch": "@@ -131,3 +131,13 @@ lint-noop-method-call = call to `.{$method}()` on a reference in this situation\n \n lint-pass-by-value = passing `{$ty}` by reference\n     .suggestion = try passing by value\n+\n+lint-redundant-semicolons =\n+    unnecessary trailing {$multiple ->\n+        [true] semicolons\n+        *[false] semicolon\n+    }\n+    .suggestion = remove {$multiple ->\n+        [true] these semicolons\n+        *[false] this semicolon\n+    }"}, {"sha": "26f41345383f91bad2218eca90e7048bd5385a51", "filename": "compiler/rustc_lint/src/redundant_semicolon.rs", "status": "modified", "additions": 5, "deletions": 7, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/8e836566f04eef02799609d8e480f3b038270147/compiler%2Frustc_lint%2Fsrc%2Fredundant_semicolon.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8e836566f04eef02799609d8e480f3b038270147/compiler%2Frustc_lint%2Fsrc%2Fredundant_semicolon.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_lint%2Fsrc%2Fredundant_semicolon.rs?ref=8e836566f04eef02799609d8e480f3b038270147", "patch": "@@ -1,6 +1,6 @@\n use crate::{EarlyContext, EarlyLintPass, LintContext};\n use rustc_ast::{Block, StmtKind};\n-use rustc_errors::Applicability;\n+use rustc_errors::{fluent, Applicability};\n use rustc_span::Span;\n \n declare_lint! {\n@@ -49,12 +49,10 @@ fn maybe_lint_redundant_semis(cx: &EarlyContext<'_>, seq: &mut Option<(Span, boo\n         }\n \n         cx.struct_span_lint(REDUNDANT_SEMICOLONS, span, |lint| {\n-            let (msg, rem) = if multiple {\n-                (\"unnecessary trailing semicolons\", \"remove these semicolons\")\n-            } else {\n-                (\"unnecessary trailing semicolon\", \"remove this semicolon\")\n-            };\n-            lint.build(msg).span_suggestion(span, rem, \"\", Applicability::MaybeIncorrect).emit();\n+            lint.build(fluent::lint::redundant_semicolons)\n+                .set_arg(\"multiple\", multiple)\n+                .span_suggestion(span, fluent::lint::suggestion, \"\", Applicability::MaybeIncorrect)\n+                .emit();\n         });\n     }\n }"}]}