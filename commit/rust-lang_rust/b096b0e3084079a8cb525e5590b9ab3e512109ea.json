{"sha": "b096b0e3084079a8cb525e5590b9ab3e512109ea", "node_id": "MDY6Q29tbWl0NzI0NzEyOmIwOTZiMGUzMDg0MDc5YThjYjUyNWU1NTkwYjlhYjNlNTEyMTA5ZWE=", "commit": {"author": {"name": "Adam Bozanich", "email": "adam.boz@gmail.com", "date": "2010-07-09T07:23:12Z"}, "committer": {"name": "Graydon Hoare", "email": "graydon@pobox.com", "date": "2010-07-15T23:19:14Z"}, "message": "permit use before import.  closes #48", "tree": {"sha": "594a5d0acbee6cd4e6d2421cb24a82053bd11301", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/594a5d0acbee6cd4e6d2421cb24a82053bd11301"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b096b0e3084079a8cb525e5590b9ab3e512109ea", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b096b0e3084079a8cb525e5590b9ab3e512109ea", "html_url": "https://github.com/rust-lang/rust/commit/b096b0e3084079a8cb525e5590b9ab3e512109ea", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b096b0e3084079a8cb525e5590b9ab3e512109ea/comments", "author": {"login": "boz", "id": 12553, "node_id": "MDQ6VXNlcjEyNTUz", "avatar_url": "https://avatars.githubusercontent.com/u/12553?v=4", "gravatar_id": "", "url": "https://api.github.com/users/boz", "html_url": "https://github.com/boz", "followers_url": "https://api.github.com/users/boz/followers", "following_url": "https://api.github.com/users/boz/following{/other_user}", "gists_url": "https://api.github.com/users/boz/gists{/gist_id}", "starred_url": "https://api.github.com/users/boz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/boz/subscriptions", "organizations_url": "https://api.github.com/users/boz/orgs", "repos_url": "https://api.github.com/users/boz/repos", "events_url": "https://api.github.com/users/boz/events{/privacy}", "received_events_url": "https://api.github.com/users/boz/received_events", "type": "User", "site_admin": false}, "committer": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6f5ef5815b349ecf80da92c2109db1061a7f9d02", "url": "https://api.github.com/repos/rust-lang/rust/commits/6f5ef5815b349ecf80da92c2109db1061a7f9d02", "html_url": "https://github.com/rust-lang/rust/commit/6f5ef5815b349ecf80da92c2109db1061a7f9d02"}], "stats": {"total": 78, "additions": 42, "deletions": 36}, "files": [{"sha": "ecc182e1f79c48dc15546dc5bf8a9b5840d7af25", "filename": ".gitignore", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/b096b0e3084079a8cb525e5590b9ab3e512109ea/.gitignore", "raw_url": "https://github.com/rust-lang/rust/raw/b096b0e3084079a8cb525e5590b9ab3e512109ea/.gitignore", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/.gitignore?ref=b096b0e3084079a8cb525e5590b9ab3e512109ea", "patch": "@@ -24,6 +24,7 @@\n *.toc\n *.tp\n *.vr\n+*.swp\n .hg/\n .hgignore\n lexer.ml"}, {"sha": "374a301231f3491cf1e095f86b4841e4f749c3cc", "filename": "src/boot/fe/item.ml", "status": "modified", "additions": 23, "deletions": 36, "changes": 59, "blob_url": "https://github.com/rust-lang/rust/blob/b096b0e3084079a8cb525e5590b9ab3e512109ea/src%2Fboot%2Ffe%2Fitem.ml", "raw_url": "https://github.com/rust-lang/rust/raw/b096b0e3084079a8cb525e5590b9ab3e512109ea/src%2Fboot%2Ffe%2Fitem.ml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fboot%2Ffe%2Fitem.ml?ref=b096b0e3084079a8cb525e5590b9ab3e512109ea", "patch": "@@ -879,9 +879,6 @@ and parse_mod_item (ps:pstate) : (Ast.ident * Ast.mod_item) =\n                   note_required_mod ps {lo=apos; hi=bpos} CONV_rust rlib item;\n                   (ident, item)\n           end\n-\n-\n-\n       | _ -> raise (unexpected ps)\n \n \n@@ -890,24 +887,19 @@ and parse_mod_items_from_signature\n     : (Ast.mod_view * Ast.mod_items) =\n   let exports = Hashtbl.create 0 in\n   let mis = Hashtbl.create 0 in\n-  let in_view = ref true in\n     expect ps LBRACE;\n     while not (peek ps = RBRACE)\n     do\n-      if !in_view\n-      then\n-        match peek ps with\n-            EXPORT ->\n-              bump ps;\n-              parse_export ps exports;\n-              expect ps SEMI;\n-          | _ ->\n-              in_view := false\n-      else\n-        let (ident, mti) = ctxt \"mod items from sig: mod item\"\n-          parse_mod_item_from_signature ps\n-        in\n-          Hashtbl.add mis ident mti;\n+      match peek ps with\n+        EXPORT ->\n+            bump ps;\n+            parse_export ps exports;\n+            expect ps SEMI;\n+        | _ ->\n+            let (ident, mti) = ctxt \"mod items from sig: mod item\"\n+              parse_mod_item_from_signature ps\n+            in\n+              Hashtbl.add mis ident mti;\n     done;\n     if (Hashtbl.length exports) = 0\n     then Hashtbl.add exports Ast.EXPORT_all_decls ();\n@@ -1130,27 +1122,22 @@ and parse_mod_items\n   ps.pstate_depth <- ps.pstate_depth + 1;\n   let imports = Hashtbl.create 0 in\n   let exports = Hashtbl.create 0 in\n-  let in_view = ref true in\n   let items = Hashtbl.create 4 in\n     while (not (peek ps = terminal))\n     do\n-      if !in_view\n-      then\n-        match peek ps with\n-            IMPORT ->\n-              bump ps;\n-              parse_import ps imports;\n-              expect ps SEMI;\n-          | EXPORT ->\n-              bump ps;\n-              parse_export ps exports;\n-              expect ps SEMI;\n-          | _ ->\n-              in_view := false\n-      else\n-        let (ident, item) = parse_mod_item ps in\n-          htab_put items ident item;\n-          expand_tags_to_items ps item items;\n+      match peek ps with\n+          IMPORT ->\n+            bump ps;\n+            parse_import ps imports;\n+            expect ps SEMI;\n+        | EXPORT ->\n+            bump ps;\n+            parse_export ps exports;\n+            expect ps SEMI;\n+        | _ ->\n+            let (ident, item) = parse_mod_item ps in\n+              htab_put items ident item;\n+              expand_tags_to_items ps item items;\n     done;\n     if (Hashtbl.length exports) = 0\n     then Hashtbl.add exports Ast.EXPORT_all_decls ();"}, {"sha": "0b3302691a458a2a59e49518f22965dc01607a75", "filename": "src/test/run-pass/use-import-export.rs", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/b096b0e3084079a8cb525e5590b9ab3e512109ea/src%2Ftest%2Frun-pass%2Fuse-import-export.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b096b0e3084079a8cb525e5590b9ab3e512109ea/src%2Ftest%2Frun-pass%2Fuse-import-export.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fuse-import-export.rs?ref=b096b0e3084079a8cb525e5590b9ab3e512109ea", "patch": "@@ -0,0 +1,18 @@\n+\n+mod foo {\n+  export x;\n+  use std (ver=\"0.0.1\");\n+  fn x() -> int { ret 1; }\n+}\n+\n+mod bar {\n+  use std (ver=\"0.0.1\");\n+  export y;\n+  fn y() -> int { ret 1; }\n+}\n+\n+fn main() {\n+  foo.x();\n+  bar.y();\n+}\n+"}]}