{"sha": "8e3efc112f8eb61716c5e8c3fea8f2ef03d88498", "node_id": "MDY6Q29tbWl0NzI0NzEyOjhlM2VmYzExMmY4ZWI2MTcxNmM1ZThjM2ZlYThmMmVmMDNkODg0OTg=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2013-08-30T15:40:46Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2013-08-30T15:40:46Z"}, "message": "auto merge of #8872 : MicahChalmer/rust/emacs-indent-fix, r=pnkfelix\n\nThis fixes some, but not all, of the issues mentioned in #8787", "tree": {"sha": "a7a482ce083b9c008746638efc9d27b04266c863", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a7a482ce083b9c008746638efc9d27b04266c863"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8e3efc112f8eb61716c5e8c3fea8f2ef03d88498", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8e3efc112f8eb61716c5e8c3fea8f2ef03d88498", "html_url": "https://github.com/rust-lang/rust/commit/8e3efc112f8eb61716c5e8c3fea8f2ef03d88498", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8e3efc112f8eb61716c5e8c3fea8f2ef03d88498/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f9142536a6e500c4f0fa70c433ef8026757bb9f0", "url": "https://api.github.com/repos/rust-lang/rust/commits/f9142536a6e500c4f0fa70c433ef8026757bb9f0", "html_url": "https://github.com/rust-lang/rust/commit/f9142536a6e500c4f0fa70c433ef8026757bb9f0"}, {"sha": "7a42dd807430f11678e004bbbad9eda3a550dea9", "url": "https://api.github.com/repos/rust-lang/rust/commits/7a42dd807430f11678e004bbbad9eda3a550dea9", "html_url": "https://github.com/rust-lang/rust/commit/7a42dd807430f11678e004bbbad9eda3a550dea9"}], "stats": {"total": 31, "additions": 26, "deletions": 5}, "files": [{"sha": "92b85247e4891a670dae04ef92f9497bdc757d53", "filename": "src/etc/emacs/rust-mode.el", "status": "modified", "additions": 26, "deletions": 5, "changes": 31, "blob_url": "https://github.com/rust-lang/rust/blob/8e3efc112f8eb61716c5e8c3fea8f2ef03d88498/src%2Fetc%2Femacs%2Frust-mode.el", "raw_url": "https://github.com/rust-lang/rust/raw/8e3efc112f8eb61716c5e8c3fea8f2ef03d88498/src%2Fetc%2Femacs%2Frust-mode.el", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fetc%2Femacs%2Frust-mode.el?ref=8e3efc112f8eb61716c5e8c3fea8f2ef03d88498", "patch": "@@ -5,6 +5,7 @@\n ;; Url: https://github.com/mozilla/rust\n \n (eval-when-compile (require 'cl))\n+(eval-when-compile (require 'misc))\n \n ;; Syntax definitions and helpers\n (defvar rust-mode-syntax-table\n@@ -57,19 +58,39 @@\n               ;; A closing brace is 1 level unindended\n               ((looking-at \"}\") (* rust-indent-offset (- level 1)))\n \n+              ; Doc comments in /** style with leading * indent to line up the *s\n+              ((and (nth 4 (syntax-ppss)) (looking-at \"*\"))\n+               (+ 1 (* rust-indent-offset level)))\n+\n               ;; If we're in any other token-tree / sexp, then:\n               ;;  - [ or ( means line up with the opening token\n               ;;  - { means indent to either nesting-level * rust-indent-offset,\n               ;;    or one further indent from that if either current line\n               ;;    begins with 'else', or previous line didn't end in\n-              ;;    semi, comma or brace, and wasn't an attribute. PHEW.\n+              ;;    semi, comma or brace (other than whitespace and line\n+              ;;    comments) , and wasn't an attribute.  But if we have \n+              ;;    something after the open brace and ending with a comma,\n+              ;;    treat it as fields and align them.  PHEW.\n               ((> level 0)\n                (let ((pt (point)))\n                  (rust-rewind-irrelevant)\n                  (backward-up-list)\n-                 (if (looking-at \"[[(]\")\n-                     (+ 1 (current-column))\n+                 (cond \n+                  ((and\n+                      (looking-at \"[[(]\")\n+                      ; We don't want to indent out to the open bracket if the\n+                      ; open bracket ends the line\n+                      (save-excursion \n+                        (forward-char)\n+                        (not (looking-at \"[[:space:]]*\\\\(?://.*\\\\)?$\"))))\n+                   (+ 1 (current-column)))\n+                  ;; Check for fields on the same line as the open curly brace:\n+                  ((looking-at \"{[[:blank:]]*[^}\\n]*,[[:space:]]*$\")\n                    (progn\n+                    (forward-char)\n+                    (forward-to-word 1)\n+                    (current-column)))\n+                  (t (progn\n                      (goto-char pt)\n                      (back-to-indentation)\n                      (if (looking-at \"\\\\<else\\\\>\")\n@@ -79,12 +100,12 @@\n                          (beginning-of-line)\n                          (rust-rewind-irrelevant)\n                          (end-of-line)\n-                         (if (looking-back \"[{};,]\")\n+                         (if (looking-back \"[,;{}(][[:space:]]*\\\\(?://.*\\\\)?\")\n                              (* rust-indent-offset level)\n                            (back-to-indentation)\n                            (if (looking-at \"#\")\n                                (* rust-indent-offset level)\n-                             (* rust-indent-offset (+ 1 level))))))))))\n+                             (* rust-indent-offset (+ 1 level)))))))))))\n \n               ;; Otherwise we're in a column-zero definition\n               (t 0))))))"}]}