{"sha": "012116f860eb5b859218640e963ba32545311a24", "node_id": "MDY6Q29tbWl0NzI0NzEyOjAxMjExNmY4NjBlYjViODU5MjE4NjQwZTk2M2JhMzI1NDUzMTFhMjQ=", "commit": {"author": {"name": "Adam Perry", "email": "adam.n.perry@gmail.com", "date": "2019-10-04T02:10:34Z"}, "committer": {"name": "Adam Perry", "email": "adam.n.perry@gmail.com", "date": "2019-10-10T03:19:09Z"}, "message": "Add InstanceDef::ReifyShim for track_caller functions.", "tree": {"sha": "af7eebef6268f9699e9b6716fc1ff93a4308182f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/af7eebef6268f9699e9b6716fc1ff93a4308182f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/012116f860eb5b859218640e963ba32545311a24", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/012116f860eb5b859218640e963ba32545311a24", "html_url": "https://github.com/rust-lang/rust/commit/012116f860eb5b859218640e963ba32545311a24", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/012116f860eb5b859218640e963ba32545311a24/comments", "author": {"login": "anp", "id": 6812281, "node_id": "MDQ6VXNlcjY4MTIyODE=", "avatar_url": "https://avatars.githubusercontent.com/u/6812281?v=4", "gravatar_id": "", "url": "https://api.github.com/users/anp", "html_url": "https://github.com/anp", "followers_url": "https://api.github.com/users/anp/followers", "following_url": "https://api.github.com/users/anp/following{/other_user}", "gists_url": "https://api.github.com/users/anp/gists{/gist_id}", "starred_url": "https://api.github.com/users/anp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/anp/subscriptions", "organizations_url": "https://api.github.com/users/anp/orgs", "repos_url": "https://api.github.com/users/anp/repos", "events_url": "https://api.github.com/users/anp/events{/privacy}", "received_events_url": "https://api.github.com/users/anp/received_events", "type": "User", "site_admin": false}, "committer": {"login": "anp", "id": 6812281, "node_id": "MDQ6VXNlcjY4MTIyODE=", "avatar_url": "https://avatars.githubusercontent.com/u/6812281?v=4", "gravatar_id": "", "url": "https://api.github.com/users/anp", "html_url": "https://github.com/anp", "followers_url": "https://api.github.com/users/anp/followers", "following_url": "https://api.github.com/users/anp/following{/other_user}", "gists_url": "https://api.github.com/users/anp/gists{/gist_id}", "starred_url": "https://api.github.com/users/anp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/anp/subscriptions", "organizations_url": "https://api.github.com/users/anp/orgs", "repos_url": "https://api.github.com/users/anp/repos", "events_url": "https://api.github.com/users/anp/events{/privacy}", "received_events_url": "https://api.github.com/users/anp/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ece4977138a8eda96c234982e482fb43f67f1bee", "url": "https://api.github.com/repos/rust-lang/rust/commits/ece4977138a8eda96c234982e482fb43f67f1bee", "html_url": "https://github.com/rust-lang/rust/commit/ece4977138a8eda96c234982e482fb43f67f1bee"}], "stats": {"total": 28, "additions": 27, "deletions": 1}, "files": [{"sha": "265ac975ed7a2c1f2e699da4b2f88af94584cf7a", "filename": "src/librustc/mir/mono.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/012116f860eb5b859218640e963ba32545311a24/src%2Flibrustc%2Fmir%2Fmono.rs", "raw_url": "https://github.com/rust-lang/rust/raw/012116f860eb5b859218640e963ba32545311a24/src%2Flibrustc%2Fmir%2Fmono.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmir%2Fmono.rs?ref=012116f860eb5b859218640e963ba32545311a24", "patch": "@@ -386,6 +386,7 @@ impl<'tcx> CodegenUnit<'tcx> {\n                             tcx.hir().as_local_hir_id(def_id)\n                         }\n                         InstanceDef::VtableShim(..) |\n+                        InstanceDef::ReifyShim(..) |\n                         InstanceDef::Intrinsic(..) |\n                         InstanceDef::FnPtrShim(..) |\n                         InstanceDef::Virtual(..) |"}, {"sha": "e13e097b482f7ea744121724f51391a50101ca89", "filename": "src/librustc/ty/instance.rs", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/012116f860eb5b859218640e963ba32545311a24/src%2Flibrustc%2Fty%2Finstance.rs", "raw_url": "https://github.com/rust-lang/rust/raw/012116f860eb5b859218640e963ba32545311a24/src%2Flibrustc%2Fty%2Finstance.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Finstance.rs?ref=012116f860eb5b859218640e963ba32545311a24", "patch": "@@ -25,6 +25,9 @@ pub enum InstanceDef<'tcx> {\n     /// `<T as Trait>::method` where `method` receives unsizeable `self: Self`.\n     VtableShim(DefId),\n \n+    /// `fn()` where the function is annotated with `#[track_caller]`.\n+    ReifyShim(DefId),\n+\n     /// `<fn() as FnTrait>::call_*`\n     /// `DefId` is `FnTrait::call_*`\n     FnPtrShim(DefId, Ty<'tcx>),\n@@ -123,6 +126,7 @@ impl<'tcx> InstanceDef<'tcx> {\n         match *self {\n             InstanceDef::Item(def_id) |\n             InstanceDef::VtableShim(def_id) |\n+            InstanceDef::ReifyShim(def_id) |\n             InstanceDef::FnPtrShim(def_id, _) |\n             InstanceDef::Virtual(def_id, _) |\n             InstanceDef::Intrinsic(def_id, ) |\n@@ -178,6 +182,9 @@ impl<'tcx> fmt::Display for Instance<'tcx> {\n             InstanceDef::VtableShim(_) => {\n                 write!(f, \" - shim(vtable)\")\n             }\n+            InstanceDef::ReifyShim(_) => {\n+                write!(f, \" - shim(reify)\")\n+            }\n             InstanceDef::Intrinsic(_) => {\n                 write!(f, \" - intrinsic\")\n             }"}, {"sha": "3692caada577c6decff78d289ffeda84e7c81990", "filename": "src/librustc/ty/mod.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/012116f860eb5b859218640e963ba32545311a24/src%2Flibrustc%2Fty%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/012116f860eb5b859218640e963ba32545311a24/src%2Flibrustc%2Fty%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Fmod.rs?ref=012116f860eb5b859218640e963ba32545311a24", "patch": "@@ -3026,6 +3026,7 @@ impl<'tcx> TyCtxt<'tcx> {\n                 self.optimized_mir(did)\n             }\n             ty::InstanceDef::VtableShim(..) |\n+            ty::InstanceDef::ReifyShim(..) |\n             ty::InstanceDef::Intrinsic(..) |\n             ty::InstanceDef::FnPtrShim(..) |\n             ty::InstanceDef::Virtual(..) |"}, {"sha": "8945e1a1debdb9586b0a3fd478636d732ec43d91", "filename": "src/librustc/ty/structural_impls.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/012116f860eb5b859218640e963ba32545311a24/src%2Flibrustc%2Fty%2Fstructural_impls.rs", "raw_url": "https://github.com/rust-lang/rust/raw/012116f860eb5b859218640e963ba32545311a24/src%2Flibrustc%2Fty%2Fstructural_impls.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Fstructural_impls.rs?ref=012116f860eb5b859218640e963ba32545311a24", "patch": "@@ -761,6 +761,8 @@ impl<'a, 'tcx> Lift<'tcx> for ty::InstanceDef<'a> {\n                 Some(ty::InstanceDef::Item(def_id)),\n             ty::InstanceDef::VtableShim(def_id) =>\n                 Some(ty::InstanceDef::VtableShim(def_id)),\n+            ty::InstanceDef::ReifyShim(def_id) =>\n+                Some(ty::InstanceDef::ReifyShim(def_id)),\n             ty::InstanceDef::Intrinsic(def_id) =>\n                 Some(ty::InstanceDef::Intrinsic(def_id)),\n             ty::InstanceDef::FnPtrShim(def_id, ref ty) =>\n@@ -966,6 +968,7 @@ impl<'tcx> TypeFoldable<'tcx> for ty::instance::Instance<'tcx> {\n             def: match self.def {\n                 Item(did) => Item(did.fold_with(folder)),\n                 VtableShim(did) => VtableShim(did.fold_with(folder)),\n+                ReifyShim(did) => ReifyShim(did.fold_with(folder)),\n                 Intrinsic(did) => Intrinsic(did.fold_with(folder)),\n                 FnPtrShim(did, ty) => FnPtrShim(\n                     did.fold_with(folder),\n@@ -994,7 +997,7 @@ impl<'tcx> TypeFoldable<'tcx> for ty::instance::Instance<'tcx> {\n         use crate::ty::InstanceDef::*;\n         self.substs.visit_with(visitor) ||\n         match self.def {\n-            Item(did) | VtableShim(did) | Intrinsic(did) | Virtual(did, _) => {\n+            Item(did) | VtableShim(did) | ReifyShim(did) | Intrinsic(did) | Virtual(did, _) => {\n                 did.visit_with(visitor)\n             },\n             FnPtrShim(did, ty) | CloneShim(did, ty) => {"}, {"sha": "11c7cd0d901d0007b5562b4260c330ed6d266bd9", "filename": "src/librustc_mir/interpret/terminator.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/012116f860eb5b859218640e963ba32545311a24/src%2Flibrustc_mir%2Finterpret%2Fterminator.rs", "raw_url": "https://github.com/rust-lang/rust/raw/012116f860eb5b859218640e963ba32545311a24/src%2Flibrustc_mir%2Finterpret%2Fterminator.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Finterpret%2Fterminator.rs?ref=012116f860eb5b859218640e963ba32545311a24", "patch": "@@ -263,6 +263,7 @@ impl<'mir, 'tcx, M: Machine<'mir, 'tcx>> InterpCx<'mir, 'tcx, M> {\n                 Ok(())\n             }\n             ty::InstanceDef::VtableShim(..) |\n+            ty::InstanceDef::ReifyShim(..) |\n             ty::InstanceDef::ClosureOnceShim { .. } |\n             ty::InstanceDef::FnPtrShim(..) |\n             ty::InstanceDef::DropGlue(..) |"}, {"sha": "07ae4837d1cb3363cf5476dc7aaaf24488158c50", "filename": "src/librustc_mir/monomorphize/collector.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/012116f860eb5b859218640e963ba32545311a24/src%2Flibrustc_mir%2Fmonomorphize%2Fcollector.rs", "raw_url": "https://github.com/rust-lang/rust/raw/012116f860eb5b859218640e963ba32545311a24/src%2Flibrustc_mir%2Fmonomorphize%2Fcollector.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fmonomorphize%2Fcollector.rs?ref=012116f860eb5b859218640e963ba32545311a24", "patch": "@@ -747,6 +747,7 @@ fn visit_instance_use<'tcx>(\n             }\n         }\n         ty::InstanceDef::VtableShim(..) |\n+        ty::InstanceDef::ReifyShim(..) |\n         ty::InstanceDef::Virtual(..) |\n         ty::InstanceDef::DropGlue(_, None) => {\n             // don't need to emit shim if we are calling directly.\n@@ -773,6 +774,7 @@ fn should_monomorphize_locally<'tcx>(tcx: TyCtxt<'tcx>, instance: &Instance<'tcx\n     let def_id = match instance.def {\n         ty::InstanceDef::Item(def_id) => def_id,\n         ty::InstanceDef::VtableShim(..) |\n+        ty::InstanceDef::ReifyShim(..) |\n         ty::InstanceDef::ClosureOnceShim { .. } |\n         ty::InstanceDef::Virtual(..) |\n         ty::InstanceDef::FnPtrShim(..) |"}, {"sha": "b9d38028b72a81f21e8a3cdd4db3317fda5d2410", "filename": "src/librustc_mir/monomorphize/partitioning.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/012116f860eb5b859218640e963ba32545311a24/src%2Flibrustc_mir%2Fmonomorphize%2Fpartitioning.rs", "raw_url": "https://github.com/rust-lang/rust/raw/012116f860eb5b859218640e963ba32545311a24/src%2Flibrustc_mir%2Fmonomorphize%2Fpartitioning.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fmonomorphize%2Fpartitioning.rs?ref=012116f860eb5b859218640e963ba32545311a24", "patch": "@@ -339,6 +339,7 @@ fn mono_item_visibility(\n \n         // These are all compiler glue and such, never exported, always hidden.\n         InstanceDef::VtableShim(..) |\n+        InstanceDef::ReifyShim(..) |\n         InstanceDef::FnPtrShim(..) |\n         InstanceDef::Virtual(..) |\n         InstanceDef::Intrinsic(..) |\n@@ -677,6 +678,7 @@ fn characteristic_def_id_of_mono_item<'tcx>(\n             let def_id = match instance.def {\n                 ty::InstanceDef::Item(def_id) => def_id,\n                 ty::InstanceDef::VtableShim(..) |\n+                ty::InstanceDef::ReifyShim(..) |\n                 ty::InstanceDef::FnPtrShim(..) |\n                 ty::InstanceDef::ClosureOnceShim { .. } |\n                 ty::InstanceDef::Intrinsic(..) |"}, {"sha": "10240271eb8ead838d28966540783655214a11e5", "filename": "src/librustc_mir/shim.rs", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/012116f860eb5b859218640e963ba32545311a24/src%2Flibrustc_mir%2Fshim.rs", "raw_url": "https://github.com/rust-lang/rust/raw/012116f860eb5b859218640e963ba32545311a24/src%2Flibrustc_mir%2Fshim.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fshim.rs?ref=012116f860eb5b859218640e963ba32545311a24", "patch": "@@ -41,6 +41,15 @@ fn make_shim<'tcx>(tcx: TyCtxt<'tcx>, instance: ty::InstanceDef<'tcx>) -> &'tcx\n                 None,\n             )\n         }\n+        ty::InstanceDef::ReifyShim(def_id) => {\n+            build_call_shim(\n+                tcx,\n+                def_id,\n+                Adjustment::DerefMove,\n+                CallKind::Direct(def_id),\n+                None,\n+            )\n+        }\n         ty::InstanceDef::FnPtrShim(def_id, ty) => {\n             let trait_ = tcx.trait_of_item(def_id).unwrap();\n             let adjustment = match tcx.lang_items().fn_trait_kind(trait_) {"}]}