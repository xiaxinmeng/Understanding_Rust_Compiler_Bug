{"sha": "6dd074a8f6bbf126492e15ea2eadaed54ac3d887", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZkZDA3NGE4ZjZiYmYxMjY0OTJlMTVlYTJlYWRhZWQ1NGFjM2Q4ODc=", "commit": {"author": {"name": "Pietro Albini", "email": "pietro@pietroalbini.org", "date": "2019-10-07T12:01:18Z"}, "committer": {"name": "Pietro Albini", "email": "pietro@pietroalbini.org", "date": "2019-10-25T14:03:10Z"}, "message": "ci: extract parts of windows-build-deps into scripts", "tree": {"sha": "d10b5f9a9f28babf740da25afe656671c6d83235", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d10b5f9a9f28babf740da25afe656671c6d83235"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6dd074a8f6bbf126492e15ea2eadaed54ac3d887", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE1JbYPtLJAsc22U9xPgar6Auq8ZwFAl2zAJ4ACgkQPgar6Auq\n8Zx9PRAAkxIsOG/MGP6QxsRewqSXFmhfQRUY+arNhLe42x5XuIXtpe+SbGn8LF7i\nO3AKW1UB8PIQYGhZppmINfFjZSINkqvYEBejngh/5FtIhCOXhuNi4zWBh+NPEF1W\n7OaKws9etGJOcy8XGsPH8fNBZpH+Qeo8Dw/2Pmk8t9XWA57ewrxNpL7BXQ8NMjFY\n3qPyTvpJRr39lBQRIgwB3KNJ8BLMHrJsyH5iR/N5JM2Dx4UtAb/E10j/hYQH7ICH\nB7iJACGl/UKUz5RB2NbGfDhhCb2pVTHD5UQZRoY7k8Xq2Lm0gAD0ymoRV3stzrm6\nJutQFDbuS+2YNINWtEX8RaJ9HGWU2gMp8i2iK/rKjGTdgfT/q0Id0VC5tv37f6DQ\nFRPBJ2maWEdU5RnHirV4/rA1KS5a0uBtXivK2z2yLBHGol7FgedtkSMW3A3Z9zFe\ngVXFRCkyW4AyiBvZJS5WRSs1UOocFwQvZ+KjuW+QmW/X3rziF32FALMt5/M5ytO0\nPNjzXvGaJGmi/+ltJd2iZ6Vz30IOh7YK4UC2AqJ+SeYGM8NU9mlk3sN8Xhp6jaq9\nV0xjvwXem2yjdrNw2LnvgM6UwuT4QTSTdUInAYLE8tN8Lk8n71yhPMSQBCF+fn6E\nmRy2PMFFeLRDYj0Aak9jQGd2sqV/eDBj1JAy9D6N2lg/idR7YRY=\n=+Oxj\n-----END PGP SIGNATURE-----", "payload": "tree d10b5f9a9f28babf740da25afe656671c6d83235\nparent 1c0d76404939f401536271f8053dd999c5f254c9\nauthor Pietro Albini <pietro@pietroalbini.org> 1570449678 +0200\ncommitter Pietro Albini <pietro@pietroalbini.org> 1572012190 +0200\n\nci: extract parts of windows-build-deps into scripts\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6dd074a8f6bbf126492e15ea2eadaed54ac3d887", "html_url": "https://github.com/rust-lang/rust/commit/6dd074a8f6bbf126492e15ea2eadaed54ac3d887", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6dd074a8f6bbf126492e15ea2eadaed54ac3d887/comments", "author": {"login": "pietroalbini", "id": 2299951, "node_id": "MDQ6VXNlcjIyOTk5NTE=", "avatar_url": "https://avatars.githubusercontent.com/u/2299951?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pietroalbini", "html_url": "https://github.com/pietroalbini", "followers_url": "https://api.github.com/users/pietroalbini/followers", "following_url": "https://api.github.com/users/pietroalbini/following{/other_user}", "gists_url": "https://api.github.com/users/pietroalbini/gists{/gist_id}", "starred_url": "https://api.github.com/users/pietroalbini/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pietroalbini/subscriptions", "organizations_url": "https://api.github.com/users/pietroalbini/orgs", "repos_url": "https://api.github.com/users/pietroalbini/repos", "events_url": "https://api.github.com/users/pietroalbini/events{/privacy}", "received_events_url": "https://api.github.com/users/pietroalbini/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pietroalbini", "id": 2299951, "node_id": "MDQ6VXNlcjIyOTk5NTE=", "avatar_url": "https://avatars.githubusercontent.com/u/2299951?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pietroalbini", "html_url": "https://github.com/pietroalbini", "followers_url": "https://api.github.com/users/pietroalbini/followers", "following_url": "https://api.github.com/users/pietroalbini/following{/other_user}", "gists_url": "https://api.github.com/users/pietroalbini/gists{/gist_id}", "starred_url": "https://api.github.com/users/pietroalbini/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pietroalbini/subscriptions", "organizations_url": "https://api.github.com/users/pietroalbini/orgs", "repos_url": "https://api.github.com/users/pietroalbini/repos", "events_url": "https://api.github.com/users/pietroalbini/events{/privacy}", "received_events_url": "https://api.github.com/users/pietroalbini/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1c0d76404939f401536271f8053dd999c5f254c9", "url": "https://api.github.com/repos/rust-lang/rust/commits/1c0d76404939f401536271f8053dd999c5f254c9", "html_url": "https://github.com/rust-lang/rust/commit/1c0d76404939f401536271f8053dd999c5f254c9"}], "stats": {"total": 103, "additions": 68, "deletions": 35}, "files": [{"sha": "18860550e766c35364c7f993e064582d85f252ab", "filename": "src/ci/azure-pipelines/steps/install-windows-build-deps.yml", "status": "modified", "additions": 0, "deletions": 35, "changes": 35, "blob_url": "https://github.com/rust-lang/rust/blob/6dd074a8f6bbf126492e15ea2eadaed54ac3d887/src%2Fci%2Fazure-pipelines%2Fsteps%2Finstall-windows-build-deps.yml", "raw_url": "https://github.com/rust-lang/rust/raw/6dd074a8f6bbf126492e15ea2eadaed54ac3d887/src%2Fci%2Fazure-pipelines%2Fsteps%2Finstall-windows-build-deps.yml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fazure-pipelines%2Fsteps%2Finstall-windows-build-deps.yml?ref=6dd074a8f6bbf126492e15ea2eadaed54ac3d887", "patch": "@@ -1,39 +1,4 @@\n steps:\n-# We use the WIX toolset to create combined installers for Windows, and these\n-# binaries are downloaded from\n-# https://github.com/wixtoolset/wix3 originally\n-- bash: |\n-    set -e\n-    curl -O https://rust-lang-ci-mirrors.s3-us-west-1.amazonaws.com/rustc/wix311-binaries.zip\n-    echo \"##vso[task.setvariable variable=WIX]`pwd`/wix\"\n-    mkdir -p wix/bin\n-    cd wix/bin\n-    7z x ../../wix311-binaries.zip\n-  displayName: Install wix\n-  condition: and(succeeded(), eq(variables['Agent.OS'], 'Windows_NT'))\n-\n-# We use InnoSetup and its `iscc` program to also create combined installers.\n-# Honestly at this point WIX above and `iscc` are just holdovers from\n-# oh-so-long-ago and are required for creating installers on Windows. I think\n-# one is MSI installers and one is EXE, but they're not used so frequently at\n-# this point anyway so perhaps it's a wash!\n-- script: |\n-    echo ##vso[task.prependpath]C:\\Program Files (x86)\\Inno Setup 5\n-    curl.exe -o is-install.exe https://rust-lang-ci-mirrors.s3-us-west-1.amazonaws.com/rustc/2017-08-22-is.exe\n-    is-install.exe /VERYSILENT /SUPPRESSMSGBOXES /NORESTART /SP-\n-  displayName: Install InnoSetup\n-  condition: and(succeeded(), eq(variables['Agent.OS'], 'Windows_NT'))\n-\n-# We've had issues with the default drive in use running out of space during a\n-# build, and it looks like the `C:` drive has more space than the default `D:`\n-# drive. We should probably confirm this with the azure pipelines team at some\n-# point, but this seems to fix our \"disk space full\" problems.\n-- script: |\n-    mkdir c:\\MORE_SPACE\n-    mklink /J build c:\\MORE_SPACE\n-  displayName: \"Ensure build happens on C:/ instead of D:/\"\n-  condition: and(succeeded(), eq(variables['Agent.OS'], 'Windows_NT'))\n-\n - bash: git config --replace-all --global core.autocrlf false\n   displayName: \"Disable git automatic line ending conversion (on C:/)\"\n "}, {"sha": "19745f3f8c964643aa3b1060e163a27487f72ed0", "filename": "src/ci/azure-pipelines/steps/run.yml", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/6dd074a8f6bbf126492e15ea2eadaed54ac3d887/src%2Fci%2Fazure-pipelines%2Fsteps%2Frun.yml", "raw_url": "https://github.com/rust-lang/rust/raw/6dd074a8f6bbf126492e15ea2eadaed54ac3d887/src%2Fci%2Fazure-pipelines%2Fsteps%2Frun.yml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fazure-pipelines%2Fsteps%2Frun.yml?ref=6dd074a8f6bbf126492e15ea2eadaed54ac3d887", "patch": "@@ -69,6 +69,24 @@ steps:\n   displayName: Switch to Xcode 9.3\n   condition: and(succeeded(), not(variables.SKIP_JOB))\n \n+- bash: src/ci/scripts/install-wix.sh\n+  env:\n+    AGENT_OS: $(Agent.OS)\n+  displayName: Install wix\n+  condition: and(succeeded(), not(variables.SKIP_JOB))\n+\n+- bash: src/ci/scripts/install-innosetup.sh\n+  env:\n+    AGENT_OS: $(Agent.OS)\n+  displayName: Install InnoSetup\n+  condition: and(succeeded(), not(variables.SKIP_JOB))\n+\n+- bash: src/ci/scripts/windows-symlink-build-dir.sh\n+  env:\n+    AGENT_OS: $(Agent.OS)\n+  displayName: Ensure the build happens on C:\\ instead of D:\\\n+  condition: and(succeeded(), not(variables.SKIP_JOB))\n+\n - template: install-windows-build-deps.yml\n \n # Looks like docker containers have IPv6 disabled by default, so let's turn it"}, {"sha": "c410bb9b4ff6448f42154a797fce01e95f81fc92", "filename": "src/ci/scripts/install-innosetup.sh", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/6dd074a8f6bbf126492e15ea2eadaed54ac3d887/src%2Fci%2Fscripts%2Finstall-innosetup.sh", "raw_url": "https://github.com/rust-lang/rust/raw/6dd074a8f6bbf126492e15ea2eadaed54ac3d887/src%2Fci%2Fscripts%2Finstall-innosetup.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fscripts%2Finstall-innosetup.sh?ref=6dd074a8f6bbf126492e15ea2eadaed54ac3d887", "patch": "@@ -0,0 +1,18 @@\n+#!/bin/bash\n+# We use InnoSetup and its `iscc` program to also create combined installers.\n+# Honestly at this point WIX above and `iscc` are just holdovers from\n+# oh-so-long-ago and are required for creating installers on Windows. I think\n+# one is MSI installers and one is EXE, but they're not used so frequently at\n+# this point anyway so perhaps it's a wash!\n+\n+set -euo pipefail\n+IFS=$'\\n\\t'\n+\n+source \"$(cd \"$(dirname \"$0\")\" && pwd)/../shared.sh\"\n+\n+if isWindows; then\n+    curl.exe -o is-install.exe https://rust-lang-ci-mirrors.s3-us-west-1.amazonaws.com/rustc/2017-08-22-is.exe\n+    is-install.exe /VERYSILENT /SUPPRESSMSGBOXES /NORESTART /SP-\n+\n+    ciCommandAddPath \"C:\\\\Program Files (x86)\\\\Inno Setup 5\"\n+fi"}, {"sha": "b0b22b347e0d5405ba09031fc8b4ced4f5a410f6", "filename": "src/ci/scripts/install-wix.sh", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/6dd074a8f6bbf126492e15ea2eadaed54ac3d887/src%2Fci%2Fscripts%2Finstall-wix.sh", "raw_url": "https://github.com/rust-lang/rust/raw/6dd074a8f6bbf126492e15ea2eadaed54ac3d887/src%2Fci%2Fscripts%2Finstall-wix.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fscripts%2Finstall-wix.sh?ref=6dd074a8f6bbf126492e15ea2eadaed54ac3d887", "patch": "@@ -0,0 +1,17 @@\n+#!/bin/bash\n+# We use the WIX toolset to create combined installers for Windows, and these\n+# binaries are downloaded from https://github.com/wixtoolset/wix3 originally\n+\n+set -euo pipefail\n+IFS=$'\\n\\t'\n+\n+source \"$(cd \"$(dirname \"$0\")\" && pwd)/../shared.sh\"\n+\n+if isWindows; then\n+    curl -O https://rust-lang-ci-mirrors.s3-us-west-1.amazonaws.com/rustc/wix311-binaries.zip\n+    mkdir -p wix/bin\n+    cd wix/bin\n+    7z x ../../wix311-binaries.zip\n+\n+    ciCommandSetEnv WIX \"$(pwd)/wix\"\n+fi"}, {"sha": "e57128c70f5f194e533adfbc15c1f3cde35220b0", "filename": "src/ci/scripts/windows-symlink-build-dir.sh", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/6dd074a8f6bbf126492e15ea2eadaed54ac3d887/src%2Fci%2Fscripts%2Fwindows-symlink-build-dir.sh", "raw_url": "https://github.com/rust-lang/rust/raw/6dd074a8f6bbf126492e15ea2eadaed54ac3d887/src%2Fci%2Fscripts%2Fwindows-symlink-build-dir.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fscripts%2Fwindows-symlink-build-dir.sh?ref=6dd074a8f6bbf126492e15ea2eadaed54ac3d887", "patch": "@@ -0,0 +1,15 @@\n+#!/bin/bash\n+# We've had issues with the default drive in use running out of space during a\n+# build, and it looks like the `C:` drive has more space than the default `D:`\n+# drive. We should probably confirm this with the azure pipelines team at some\n+# point, but this seems to fix our \"disk space full\" problems.\n+\n+set -euo pipefail\n+IFS=$'\\n\\t'\n+\n+source \"$(cd \"$(dirname \"$0\")\" && pwd)/../shared.sh\"\n+\n+if isWindows; then\n+    cmd //c \"mkdir c:\\\\MORE_SPACE\"\n+    cmd //c \"mklink /J build c:\\\\MORE_SPACE\"\n+fi"}]}