{"sha": "5ac07a89efb0feeae656d0fa562a41c041add6e5", "node_id": "C_kwDOAAsO6NoAKDVhYzA3YTg5ZWZiMGZlZWFlNjU2ZDBmYTU2MmE0MWMwNDFhZGQ2ZTU", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2022-04-06T18:59:13Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-04-06T18:59:13Z"}, "message": "Merge #11916\n\n11916: internal: Add more doc-link tests r=Veykril a=Veykril\n\nbors r+\n\nCo-authored-by: Lukas Wirth <lukastw97@gmail.com>", "tree": {"sha": "592c6e379947a7f7dedce815f53b2d37fe2fe750", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/592c6e379947a7f7dedce815f53b2d37fe2fe750"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5ac07a89efb0feeae656d0fa562a41c041add6e5", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJiTeMBCRBK7hj4Ov3rIwAAnw4IADPeaj8bP/ZzwgK/eymwV/4J\nd8tzYGCDC98lWhuSt/iJkauxdyL0EM/PCl0o8hhStBLwdbrHcYVbWZWIlvHGZb4/\nCeSYtsWoeg9hsAOCXJkk/F+yLOS1bwTE9Ur11KlF8va7aa7sBw5FNZzgz1ghCEWJ\nTIBYE+9OnvIaJt4E3Qp1imWcXTtULs4Wtrl9v1br23VUUMREOjMMP+hV60qtRsfF\nHlDBS26MSOrGH6dqDQIaGdyO64Ycuvj8ttiTZ0lietHieXzf3vG45PohGnF01HPH\nasg+KOm3bY+0PyVUJPbVIzWMUf2FXCmbFFPNLq6Odtb2SI1YLBoazBkQYhjX4f0=\n=blJq\n-----END PGP SIGNATURE-----\n", "payload": "tree 592c6e379947a7f7dedce815f53b2d37fe2fe750\nparent ec56c7ef975cee6fed8f28a0ddb668574e347bcc\nparent 96b641e95e3b096129dda271a98dd5beb8ae0034\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1649271553 +0000\ncommitter GitHub <noreply@github.com> 1649271553 +0000\n\nMerge #11916\n\n11916: internal: Add more doc-link tests r=Veykril a=Veykril\n\nbors r+\n\nCo-authored-by: Lukas Wirth <lukastw97@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5ac07a89efb0feeae656d0fa562a41c041add6e5", "html_url": "https://github.com/rust-lang/rust/commit/5ac07a89efb0feeae656d0fa562a41c041add6e5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5ac07a89efb0feeae656d0fa562a41c041add6e5/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ec56c7ef975cee6fed8f28a0ddb668574e347bcc", "url": "https://api.github.com/repos/rust-lang/rust/commits/ec56c7ef975cee6fed8f28a0ddb668574e347bcc", "html_url": "https://github.com/rust-lang/rust/commit/ec56c7ef975cee6fed8f28a0ddb668574e347bcc"}, {"sha": "96b641e95e3b096129dda271a98dd5beb8ae0034", "url": "https://api.github.com/repos/rust-lang/rust/commits/96b641e95e3b096129dda271a98dd5beb8ae0034", "html_url": "https://github.com/rust-lang/rust/commit/96b641e95e3b096129dda271a98dd5beb8ae0034"}], "stats": {"total": 104, "additions": 94, "deletions": 10}, "files": [{"sha": "86fed390a8c83385cce9124894f7ff325c059d2c", "filename": "crates/ide/src/doc_links/tests.rs", "status": "modified", "additions": 94, "deletions": 10, "changes": 104, "blob_url": "https://github.com/rust-lang/rust/blob/5ac07a89efb0feeae656d0fa562a41c041add6e5/crates%2Fide%2Fsrc%2Fdoc_links%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5ac07a89efb0feeae656d0fa562a41c041add6e5/crates%2Fide%2Fsrc%2Fdoc_links%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fdoc_links%2Ftests.rs?ref=5ac07a89efb0feeae656d0fa562a41c041add6e5", "patch": "@@ -299,23 +299,107 @@ fn foo() {\n }\n \n #[test]\n-fn test_trait_items() {\n+fn doc_links_items_simple() {\n+    check_doc_links(\n+        r#\"\n+//- /main.rs crate:main deps:krate\n+/// [`krate`]\n+//! [`Trait`]\n+//! [`function`]\n+//! [`CONST`]\n+//! [`STATIC`]\n+//! [`Struct`]\n+//! [`Enum`]\n+//! [`Union`]\n+//! [`Type`]\n+//! [`module`]\n+use self$0;\n+\n+const CONST: () = ();\n+   // ^^^^^ CONST\n+static STATIC: () = ();\n+    // ^^^^^^ STATIC\n+trait Trait {\n+   // ^^^^^ Trait\n+}\n+fn function() {}\n+// ^^^^^^^^ function\n+struct Struct;\n+    // ^^^^^^ Struct\n+enum Enum {}\n+  // ^^^^ Enum\n+union Union {__: ()}\n+   // ^^^^^ Union\n+type Type = ();\n+  // ^^^^ Type\n+mod module {}\n+ // ^^^^^^ module\n+//- /krate.rs crate:krate\n+// empty\n+//^file krate\n+\"#,\n+    )\n+}\n+\n+#[test]\n+fn doc_links_inherent_impl_items() {\n+    check_doc_links(\n+        r#\"\n+// /// [`Struct::CONST`]\n+// /// [`Struct::function`]\n+/// FIXME #9694\n+struct Struct$0;\n+\n+impl Struct {\n+    const CONST: () = ();\n+    fn function() {}\n+}\n+\"#,\n+    )\n+}\n+\n+#[test]\n+fn doc_links_trait_impl_items() {\n+    check_doc_links(\n+        r#\"\n+trait Trait {\n+    type Type;\n+    const CONST: usize;\n+    fn function();\n+}\n+// /// [`Struct::Type`]\n+// /// [`Struct::CONST`]\n+// /// [`Struct::function`]\n+/// FIXME #9694\n+struct Struct$0;\n+\n+impl Trait for Struct {\n+    type Type = ();\n+    const CONST: () = ();\n+    fn function() {}\n+}\n+\"#,\n+    )\n+}\n+\n+#[test]\n+fn doc_links_trait_items() {\n     check_doc_links(\n         r#\"\n /// [`Trait`]\n /// [`Trait::Type`]\n /// [`Trait::CONST`]\n-/// [`Trait::func`]\n+/// [`Trait::function`]\n trait Trait$0 {\n    // ^^^^^ Trait\n-    type Type;\n-      // ^^^^ Trait::Type\n-    const CONST: usize;\n-       // ^^^^^ Trait::CONST\n-    fn func();\n-    // ^^^^ Trait::func\n-}\n-        \"#,\n+type Type;\n+  // ^^^^ Trait::Type\n+const CONST: usize;\n+   // ^^^^^ Trait::CONST\n+fn function();\n+// ^^^^^^^^ Trait::function\n+}\n+    \"#,\n     )\n }\n "}]}