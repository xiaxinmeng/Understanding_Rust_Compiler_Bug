{"sha": "33ec632381cb0732dd7db3836116e5e273ab908b", "node_id": "C_kwDOAAsO6NoAKDMzZWM2MzIzODFjYjA3MzJkZDdkYjM4MzYxMTZlNWUyNzNhYjkwOGI", "commit": {"author": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2023-05-14T12:48:57Z"}, "committer": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2023-05-14T12:48:57Z"}, "message": "Add test.", "tree": {"sha": "c551f54ec5fc74b8f659f6f5ced6635decf11846", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c551f54ec5fc74b8f659f6f5ced6635decf11846"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/33ec632381cb0732dd7db3836116e5e273ab908b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/33ec632381cb0732dd7db3836116e5e273ab908b", "html_url": "https://github.com/rust-lang/rust/commit/33ec632381cb0732dd7db3836116e5e273ab908b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/33ec632381cb0732dd7db3836116e5e273ab908b/comments", "author": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "committer": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "343819d33f5c4f026bbd789f87b03f932f11b0cb", "url": "https://api.github.com/repos/rust-lang/rust/commits/343819d33f5c4f026bbd789f87b03f932f11b0cb", "html_url": "https://github.com/rust-lang/rust/commit/343819d33f5c4f026bbd789f87b03f932f11b0cb"}], "stats": {"total": 15, "additions": 15, "deletions": 0}, "files": [{"sha": "0ae7f8da4b4b9328fd62e187d875a2880d9d9379", "filename": "tests/ui/self/self-ctor-nongeneric.rs", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/33ec632381cb0732dd7db3836116e5e273ab908b/tests%2Fui%2Fself%2Fself-ctor-nongeneric.rs", "raw_url": "https://github.com/rust-lang/rust/raw/33ec632381cb0732dd7db3836116e5e273ab908b/tests%2Fui%2Fself%2Fself-ctor-nongeneric.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fself%2Fself-ctor-nongeneric.rs?ref=33ec632381cb0732dd7db3836116e5e273ab908b", "patch": "@@ -0,0 +1,15 @@\n+// `Self` as a constructor is currently allowed when the outer item is not generic.\n+// check-pass\n+\n+struct S0(usize);\n+\n+impl S0 {\n+    fn foo() {\n+        const C: S0 = Self(0);\n+        fn bar() -> S0 {\n+            Self(0)\n+        }\n+    }\n+}\n+\n+fn main() {}"}]}