{"sha": "5ed149504180e04ba81e308b07c2d33af1b7af49", "node_id": "C_kwDOAAsO6NoAKDVlZDE0OTUwNDE4MGUwNGJhODFlMzA4YjA3YzJkMzNhZjFiN2FmNDk", "commit": {"author": {"name": "Santiago Pastorino", "email": "spastorino@gmail.com", "date": "2022-06-21T15:40:32Z"}, "committer": {"name": "Santiago Pastorino", "email": "spastorino@gmail.com", "date": "2022-06-21T15:43:58Z"}, "message": "This comment is out dated and misleading\n\nArms are about TAIT and RPIT, as the variants clearly show.", "tree": {"sha": "6af7d21c2b2d10a836c57bebcdc51b5665d10e6e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6af7d21c2b2d10a836c57bebcdc51b5665d10e6e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5ed149504180e04ba81e308b07c2d33af1b7af49", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEF0ntrgrd9qf9uuThgTGiTgx5768FAmKx52QACgkQgTGiTgx5\n76/qMQ//XkTdouhwkneP+MVDf1dgaj+6BktBYmRcxecRnLVLN9Wr1cX1/gVlShcn\nPNWkkDXmaa6BCe7wtx+DUoqxJmUK77k8C5p8dO3PoaYDwc1d4OBs8qbgYrQJXa7l\nT4IbWGqpIQqaXuU6/VZH1277qG/9zdG/y+7LpuOMV9Yf0rCr8PMW6CvYnW1Vcyjk\nYIn7yFfCPCjQkklMUHSSLqdZ11reTpeUmT4u2q/aspqOiVR4s9oGmrVZCrIKnyOV\nZsofg4evCaIWsQFaTm6+qosMKKXl0kZYigjHGnTP2cEtQkRQMgOuPLcid9hoC6xC\n+ZJVIPlCc6Twmtt/DgVkZtYmr5myWeRy3cD0bkT8nGVxVLXc5aEBqiYqOUgElv4O\nZttSSMEznSMbEAuHMunr85hVis0DBAPPK6U1XHMdOkQ6Ni0ahZdPGuObqPR/X7mp\n1WYDEiiwCzFsPE/hIF4mnJd6gZgDrrS/Jw9Q2pEmfsOF94u7W1Xjf1aRiFnKQ5gP\nMZ/kabUv4UDlG++oBINMPtcO3bdm3WfB3SLtKnUTPKZarBGZwtrN1pOs82jZzVUZ\nL00ngyxSBCA5YnHKrBlXQ7BlQVmMm96w3woSqo2qExgiZ54750oTQAZapUR+kaIq\n6MQdtPUAj4z2GJbfjMVxXInVprAhlliRwEOurHVEAm8pwyqzPB8=\n=1O8u\n-----END PGP SIGNATURE-----", "payload": "tree 6af7d21c2b2d10a836c57bebcdc51b5665d10e6e\nparent a25b1315ee968146a5b206a8f3c670c5b307ebfe\nauthor Santiago Pastorino <spastorino@gmail.com> 1655826032 -0300\ncommitter Santiago Pastorino <spastorino@gmail.com> 1655826238 -0300\n\nThis comment is out dated and misleading\n\nArms are about TAIT and RPIT, as the variants clearly show.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5ed149504180e04ba81e308b07c2d33af1b7af49", "html_url": "https://github.com/rust-lang/rust/commit/5ed149504180e04ba81e308b07c2d33af1b7af49", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5ed149504180e04ba81e308b07c2d33af1b7af49/comments", "author": {"login": "spastorino", "id": 52642, "node_id": "MDQ6VXNlcjUyNjQy", "avatar_url": "https://avatars.githubusercontent.com/u/52642?v=4", "gravatar_id": "", "url": "https://api.github.com/users/spastorino", "html_url": "https://github.com/spastorino", "followers_url": "https://api.github.com/users/spastorino/followers", "following_url": "https://api.github.com/users/spastorino/following{/other_user}", "gists_url": "https://api.github.com/users/spastorino/gists{/gist_id}", "starred_url": "https://api.github.com/users/spastorino/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/spastorino/subscriptions", "organizations_url": "https://api.github.com/users/spastorino/orgs", "repos_url": "https://api.github.com/users/spastorino/repos", "events_url": "https://api.github.com/users/spastorino/events{/privacy}", "received_events_url": "https://api.github.com/users/spastorino/received_events", "type": "User", "site_admin": false}, "committer": {"login": "spastorino", "id": 52642, "node_id": "MDQ6VXNlcjUyNjQy", "avatar_url": "https://avatars.githubusercontent.com/u/52642?v=4", "gravatar_id": "", "url": "https://api.github.com/users/spastorino", "html_url": "https://github.com/spastorino", "followers_url": "https://api.github.com/users/spastorino/followers", "following_url": "https://api.github.com/users/spastorino/following{/other_user}", "gists_url": "https://api.github.com/users/spastorino/gists{/gist_id}", "starred_url": "https://api.github.com/users/spastorino/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/spastorino/subscriptions", "organizations_url": "https://api.github.com/users/spastorino/orgs", "repos_url": "https://api.github.com/users/spastorino/repos", "events_url": "https://api.github.com/users/spastorino/events{/privacy}", "received_events_url": "https://api.github.com/users/spastorino/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a25b1315ee968146a5b206a8f3c670c5b307ebfe", "url": "https://api.github.com/repos/rust-lang/rust/commits/a25b1315ee968146a5b206a8f3c670c5b307ebfe", "html_url": "https://github.com/rust-lang/rust/commit/a25b1315ee968146a5b206a8f3c670c5b307ebfe"}], "stats": {"total": 3, "additions": 0, "deletions": 3}, "files": [{"sha": "55574b83607390db97f7152f5a61a56f5859d786", "filename": "compiler/rustc_resolve/src/late/lifetimes.rs", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/5ed149504180e04ba81e308b07c2d33af1b7af49/compiler%2Frustc_resolve%2Fsrc%2Flate%2Flifetimes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5ed149504180e04ba81e308b07c2d33af1b7af49/compiler%2Frustc_resolve%2Fsrc%2Flate%2Flifetimes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_resolve%2Fsrc%2Flate%2Flifetimes.rs?ref=5ed149504180e04ba81e308b07c2d33af1b7af49", "patch": "@@ -846,8 +846,6 @@ impl<'a, 'tcx> Visitor<'tcx> for LifetimeContext<'a, 'tcx> {\n                 //                                      the opaque_ty generics\n                 let opaque_ty = self.tcx.hir().item(item_id);\n                 let (generics, bounds) = match opaque_ty.kind {\n-                    // Named opaque `impl Trait` types are reached via `TyKind::Path`.\n-                    // This arm is for `impl Trait` in the types of statics, constants and locals.\n                     hir::ItemKind::OpaqueTy(hir::OpaqueTy {\n                         origin: hir::OpaqueTyOrigin::TyAlias,\n                         ..\n@@ -866,7 +864,6 @@ impl<'a, 'tcx> Visitor<'tcx> for LifetimeContext<'a, 'tcx> {\n \n                         return;\n                     }\n-                    // RPIT (return position impl trait)\n                     hir::ItemKind::OpaqueTy(hir::OpaqueTy {\n                         origin: hir::OpaqueTyOrigin::FnReturn(..) | hir::OpaqueTyOrigin::AsyncFn(..),\n                         ref generics,"}]}