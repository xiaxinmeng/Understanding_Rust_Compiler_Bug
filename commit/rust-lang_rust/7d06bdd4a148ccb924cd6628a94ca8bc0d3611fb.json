{"sha": "7d06bdd4a148ccb924cd6628a94ca8bc0d3611fb", "node_id": "MDY6Q29tbWl0NzI0NzEyOjdkMDZiZGQ0YTE0OGNjYjkyNGNkNjYyOGE5NGNhOGJjMGQzNjExZmI=", "commit": {"author": {"name": "Dominik Inf\u00fchr", "email": "dominik.infuehr@gmail.com", "date": "2016-11-03T09:53:13Z"}, "committer": {"name": "Dominik Inf\u00fchr", "email": "dominik.infuehr@gmail.com", "date": "2016-11-03T09:59:32Z"}, "message": "set frame pointer elimination attribute for main\n\nThe rustc-generated function `main` should respect the same config for\nframe pointer elimination as the rest of code.", "tree": {"sha": "eb26211ea48b31d27ae9f4d1b0ec301e7e76ab08", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/eb26211ea48b31d27ae9f4d1b0ec301e7e76ab08"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7d06bdd4a148ccb924cd6628a94ca8bc0d3611fb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7d06bdd4a148ccb924cd6628a94ca8bc0d3611fb", "html_url": "https://github.com/rust-lang/rust/commit/7d06bdd4a148ccb924cd6628a94ca8bc0d3611fb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7d06bdd4a148ccb924cd6628a94ca8bc0d3611fb/comments", "author": {"login": "dinfuehr", "id": 1221573, "node_id": "MDQ6VXNlcjEyMjE1NzM=", "avatar_url": "https://avatars.githubusercontent.com/u/1221573?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dinfuehr", "html_url": "https://github.com/dinfuehr", "followers_url": "https://api.github.com/users/dinfuehr/followers", "following_url": "https://api.github.com/users/dinfuehr/following{/other_user}", "gists_url": "https://api.github.com/users/dinfuehr/gists{/gist_id}", "starred_url": "https://api.github.com/users/dinfuehr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dinfuehr/subscriptions", "organizations_url": "https://api.github.com/users/dinfuehr/orgs", "repos_url": "https://api.github.com/users/dinfuehr/repos", "events_url": "https://api.github.com/users/dinfuehr/events{/privacy}", "received_events_url": "https://api.github.com/users/dinfuehr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "dinfuehr", "id": 1221573, "node_id": "MDQ6VXNlcjEyMjE1NzM=", "avatar_url": "https://avatars.githubusercontent.com/u/1221573?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dinfuehr", "html_url": "https://github.com/dinfuehr", "followers_url": "https://api.github.com/users/dinfuehr/followers", "following_url": "https://api.github.com/users/dinfuehr/following{/other_user}", "gists_url": "https://api.github.com/users/dinfuehr/gists{/gist_id}", "starred_url": "https://api.github.com/users/dinfuehr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dinfuehr/subscriptions", "organizations_url": "https://api.github.com/users/dinfuehr/orgs", "repos_url": "https://api.github.com/users/dinfuehr/repos", "events_url": "https://api.github.com/users/dinfuehr/events{/privacy}", "received_events_url": "https://api.github.com/users/dinfuehr/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f9f45c6dacd0f0d0a44473931291a4fa6bbb4ddc", "url": "https://api.github.com/repos/rust-lang/rust/commits/f9f45c6dacd0f0d0a44473931291a4fa6bbb4ddc", "html_url": "https://github.com/rust-lang/rust/commit/f9f45c6dacd0f0d0a44473931291a4fa6bbb4ddc"}], "stats": {"total": 3, "additions": 3, "deletions": 0}, "files": [{"sha": "47b6fdc740a342ca78769527e6926ff560496aee", "filename": "src/librustc_trans/base.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/7d06bdd4a148ccb924cd6628a94ca8bc0d3611fb/src%2Flibrustc_trans%2Fbase.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7d06bdd4a148ccb924cd6628a94ca8bc0d3611fb/src%2Flibrustc_trans%2Fbase.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Fbase.rs?ref=7d06bdd4a148ccb924cd6628a94ca8bc0d3611fb", "patch": "@@ -1196,6 +1196,9 @@ pub fn maybe_create_entry_wrapper(ccx: &CrateContext) {\n         }\n         let llfn = declare::declare_cfn(ccx, \"main\", llfty);\n \n+        // `main` should respect same config for frame pointer elimination as rest of code\n+        attributes::set_frame_pointer_elimination(ccx, llfn);\n+\n         let llbb = unsafe {\n             llvm::LLVMAppendBasicBlockInContext(ccx.llcx(), llfn, \"top\\0\".as_ptr() as *const _)\n         };"}]}