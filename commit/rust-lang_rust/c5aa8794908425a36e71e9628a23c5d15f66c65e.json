{"sha": "c5aa8794908425a36e71e9628a23c5d15f66c65e", "node_id": "MDY6Q29tbWl0NzI0NzEyOmM1YWE4Nzk0OTA4NDI1YTM2ZTcxZTk2MjhhMjNjNWQxNWY2NmM2NWU=", "commit": {"author": {"name": "Alex Burka", "email": "durka42+github@gmail.com", "date": "2016-05-05T02:09:51Z"}, "committer": {"name": "Alex Burka", "email": "aburka@seas.upenn.edu", "date": "2016-05-05T02:16:06Z"}, "message": "implement RFC 1521\n\nAdds documentation to Clone, specifying that Copy types should have a trivial Clone impl.\n\nFixes #33416.", "tree": {"sha": "778558175e1bc5f7f052f9cfef72724b7a21055c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/778558175e1bc5f7f052f9cfef72724b7a21055c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c5aa8794908425a36e71e9628a23c5d15f66c65e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c5aa8794908425a36e71e9628a23c5d15f66c65e", "html_url": "https://github.com/rust-lang/rust/commit/c5aa8794908425a36e71e9628a23c5d15f66c65e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c5aa8794908425a36e71e9628a23c5d15f66c65e/comments", "author": {"login": "durka", "id": 47007, "node_id": "MDQ6VXNlcjQ3MDA3", "avatar_url": "https://avatars.githubusercontent.com/u/47007?v=4", "gravatar_id": "", "url": "https://api.github.com/users/durka", "html_url": "https://github.com/durka", "followers_url": "https://api.github.com/users/durka/followers", "following_url": "https://api.github.com/users/durka/following{/other_user}", "gists_url": "https://api.github.com/users/durka/gists{/gist_id}", "starred_url": "https://api.github.com/users/durka/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/durka/subscriptions", "organizations_url": "https://api.github.com/users/durka/orgs", "repos_url": "https://api.github.com/users/durka/repos", "events_url": "https://api.github.com/users/durka/events{/privacy}", "received_events_url": "https://api.github.com/users/durka/received_events", "type": "User", "site_admin": false}, "committer": {"login": "durka", "id": 47007, "node_id": "MDQ6VXNlcjQ3MDA3", "avatar_url": "https://avatars.githubusercontent.com/u/47007?v=4", "gravatar_id": "", "url": "https://api.github.com/users/durka", "html_url": "https://github.com/durka", "followers_url": "https://api.github.com/users/durka/followers", "following_url": "https://api.github.com/users/durka/following{/other_user}", "gists_url": "https://api.github.com/users/durka/gists{/gist_id}", "starred_url": "https://api.github.com/users/durka/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/durka/subscriptions", "organizations_url": "https://api.github.com/users/durka/orgs", "repos_url": "https://api.github.com/users/durka/repos", "events_url": "https://api.github.com/users/durka/events{/privacy}", "received_events_url": "https://api.github.com/users/durka/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7a0ccc458f32b2cb2dee33d7a02954a70c09c34b", "url": "https://api.github.com/repos/rust-lang/rust/commits/7a0ccc458f32b2cb2dee33d7a02954a70c09c34b", "html_url": "https://github.com/rust-lang/rust/commit/7a0ccc458f32b2cb2dee33d7a02954a70c09c34b"}], "stats": {"total": 5, "additions": 5, "deletions": 0}, "files": [{"sha": "e8ea993c6940a33c9caa0ae37c01bf82fa9c0f8d", "filename": "src/libcore/clone.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/c5aa8794908425a36e71e9628a23c5d15f66c65e/src%2Flibcore%2Fclone.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c5aa8794908425a36e71e9628a23c5d15f66c65e/src%2Flibcore%2Fclone.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fclone.rs?ref=c5aa8794908425a36e71e9628a23c5d15f66c65e", "patch": "@@ -49,6 +49,11 @@ use marker::Sized;\n /// A common trait for cloning an object.\n ///\n /// This trait can be used with `#[derive]`.\n+///\n+/// Types that are `Copy` should have a trivial implementation of `Clone`. More formally:\n+/// if `T: Copy`, `x: T`, and `y: &T`, then `let x = y.clone();` is equivalent to `let x = *y;`.\n+/// Manual implementations should be careful to uphold this invariant; however, unsafe code\n+/// must not rely on it to ensure memory safety.\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n pub trait Clone : Sized {\n     /// Returns a copy of the value."}]}