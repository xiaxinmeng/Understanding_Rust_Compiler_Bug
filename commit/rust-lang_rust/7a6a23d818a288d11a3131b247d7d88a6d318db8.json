{"sha": "7a6a23d818a288d11a3131b247d7d88a6d318db8", "node_id": "MDY6Q29tbWl0NzI0NzEyOjdhNmEyM2Q4MThhMjg4ZDExYTMxMzFiMjQ3ZDdkODhhNmQzMThkYjg=", "commit": {"author": {"name": "gnzlbg", "email": "gonzalobg88@gmail.com", "date": "2018-05-08T14:16:26Z"}, "committer": {"name": "gnzlbg", "email": "gonzalobg88@gmail.com", "date": "2018-05-24T14:04:39Z"}, "message": "fix tidy", "tree": {"sha": "fbdf8cb29ba5148aa765284da01733c348a9dbbd", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fbdf8cb29ba5148aa765284da01733c348a9dbbd"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7a6a23d818a288d11a3131b247d7d88a6d318db8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7a6a23d818a288d11a3131b247d7d88a6d318db8", "html_url": "https://github.com/rust-lang/rust/commit/7a6a23d818a288d11a3131b247d7d88a6d318db8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7a6a23d818a288d11a3131b247d7d88a6d318db8/comments", "author": {"login": "gnzlbg", "id": 904614, "node_id": "MDQ6VXNlcjkwNDYxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/904614?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gnzlbg", "html_url": "https://github.com/gnzlbg", "followers_url": "https://api.github.com/users/gnzlbg/followers", "following_url": "https://api.github.com/users/gnzlbg/following{/other_user}", "gists_url": "https://api.github.com/users/gnzlbg/gists{/gist_id}", "starred_url": "https://api.github.com/users/gnzlbg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gnzlbg/subscriptions", "organizations_url": "https://api.github.com/users/gnzlbg/orgs", "repos_url": "https://api.github.com/users/gnzlbg/repos", "events_url": "https://api.github.com/users/gnzlbg/events{/privacy}", "received_events_url": "https://api.github.com/users/gnzlbg/received_events", "type": "User", "site_admin": false}, "committer": {"login": "gnzlbg", "id": 904614, "node_id": "MDQ6VXNlcjkwNDYxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/904614?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gnzlbg", "html_url": "https://github.com/gnzlbg", "followers_url": "https://api.github.com/users/gnzlbg/followers", "following_url": "https://api.github.com/users/gnzlbg/following{/other_user}", "gists_url": "https://api.github.com/users/gnzlbg/gists{/gist_id}", "starred_url": "https://api.github.com/users/gnzlbg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gnzlbg/subscriptions", "organizations_url": "https://api.github.com/users/gnzlbg/orgs", "repos_url": "https://api.github.com/users/gnzlbg/repos", "events_url": "https://api.github.com/users/gnzlbg/events{/privacy}", "received_events_url": "https://api.github.com/users/gnzlbg/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f8f204c0bf03ccb0a87940803fddb8f631a92afd", "url": "https://api.github.com/repos/rust-lang/rust/commits/f8f204c0bf03ccb0a87940803fddb8f631a92afd", "html_url": "https://github.com/rust-lang/rust/commit/f8f204c0bf03ccb0a87940803fddb8f631a92afd"}], "stats": {"total": 24, "additions": 18, "deletions": 6}, "files": [{"sha": "a2faaeec789c1746ea46903c92f91d1bb38264c7", "filename": "src/librustc_codegen_llvm/intrinsic.rs", "status": "modified", "additions": 16, "deletions": 6, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/7a6a23d818a288d11a3131b247d7d88a6d318db8/src%2Flibrustc_codegen_llvm%2Fintrinsic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7a6a23d818a288d11a3131b247d7d88a6d318db8/src%2Flibrustc_codegen_llvm%2Fintrinsic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_llvm%2Fintrinsic.rs?ref=7a6a23d818a288d11a3131b247d7d88a6d318db8", "patch": "@@ -1140,8 +1140,12 @@ fn generic_simd_intrinsic<'a, 'tcx>(\n         return Ok(bx.select(m_i1s, args[1].immediate(), args[2].immediate()));\n     }\n \n-    fn simd_simple_float_intrinsic<'a, 'tcx>(name: &str, in_elem: &::rustc::ty::TyS, in_ty: &::rustc::ty::TyS,\n-                                             in_len: usize, bx: &Builder<'a, 'tcx>, span: Span,\n+    fn simd_simple_float_intrinsic<'a, 'tcx>(name: &str,\n+                                             in_elem: &::rustc::ty::TyS,\n+                                             in_ty: &::rustc::ty::TyS,\n+                                             in_len: usize,\n+                                             bx: &Builder<'a, 'tcx>,\n+                                             span: Span,\n                                              args: &[OperandRef<'tcx>])\n                                              -> Result<ValueRef, ()> {\n         macro_rules! emit_error {\n@@ -1167,14 +1171,17 @@ fn generic_simd_intrinsic<'a, 'tcx>(\n         let ety = match in_elem.sty {\n             ty::TyFloat(f) if f.bit_width() == 32 => {\n                 if in_len < 2 || in_len > 16 {\n-                    return_error!(\"unsupported floating-point vector `{}` with length `{}` out-of-range [2, 16]\",\n-                                  in_ty, in_len);\n+                    return_error!(\n+                        \"unsupported floating-point vector `{}` with length `{}` \\\n+                         out-of-range [2, 16]\",\n+                        in_ty, in_len);\n                 }\n                 \"f32\"\n             },\n             ty::TyFloat(f) if f.bit_width() == 64 => {\n                 if in_len < 2 || in_len > 8 {\n-                    return_error!(\"unsupported floating-point vector `{}` with length `{}` out-of-range [2, 8]\",\n+                    return_error!(\"unsupported floating-point vector `{}` with length `{}` \\\n+                                   out-of-range [2, 8]\",\n                                   in_ty, in_len);\n                 }\n                 \"f64\"\n@@ -1504,7 +1511,10 @@ fn generic_simd_intrinsic<'a, 'tcx>(\n         let llvm_intrinsic = format!(\"llvm.masked.scatter.{}.{}\",\n                                      llvm_elem_vec_str, llvm_pointer_vec_str);\n         let f = declare::declare_cfn(bx.cx, &llvm_intrinsic,\n-                                     Type::func(&[llvm_elem_vec_ty, llvm_pointer_vec_ty, alignment_ty, mask_ty], &ret_t));\n+                                     Type::func(&[llvm_elem_vec_ty,\n+                                                  llvm_pointer_vec_ty,\n+                                                  alignment_ty,\n+                                                  mask_ty], &ret_t));\n         llvm::SetUnnamedAddr(f, false);\n         let v = bx.call(f, &[args[0].immediate(), args[1].immediate(), alignment, mask],\n                         None);"}, {"sha": "605a952e8ff051e85858a5efa5aead868dc882ef", "filename": "src/test/codegen/simd-intrinsic-generic-gather.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/7a6a23d818a288d11a3131b247d7d88a6d318db8/src%2Ftest%2Fcodegen%2Fsimd-intrinsic-generic-gather.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7a6a23d818a288d11a3131b247d7d88a6d318db8/src%2Ftest%2Fcodegen%2Fsimd-intrinsic-generic-gather.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcodegen%2Fsimd-intrinsic-generic-gather.rs?ref=7a6a23d818a288d11a3131b247d7d88a6d318db8", "patch": "@@ -9,6 +9,7 @@\n // except according to those terms.\n \n // ignore-emscripten\n+// ignore-tidy-linelength\n \n // compile-flags: -C no-prepopulate-passes\n "}, {"sha": "752265412f0c23285f858d0e1a2af846eab51e2f", "filename": "src/test/codegen/simd-intrinsic-generic-scatter.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/7a6a23d818a288d11a3131b247d7d88a6d318db8/src%2Ftest%2Fcodegen%2Fsimd-intrinsic-generic-scatter.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7a6a23d818a288d11a3131b247d7d88a6d318db8/src%2Ftest%2Fcodegen%2Fsimd-intrinsic-generic-scatter.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcodegen%2Fsimd-intrinsic-generic-scatter.rs?ref=7a6a23d818a288d11a3131b247d7d88a6d318db8", "patch": "@@ -9,6 +9,7 @@\n // except according to those terms.\n \n // ignore-emscripten\n+// ignore-tidy-linelength\n \n // compile-flags: -C no-prepopulate-passes\n "}]}