{"sha": "8d3219ed5e19e63599245ad895827ea764d1cb8b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjhkMzIxOWVkNWUxOWU2MzU5OTI0NWFkODk1ODI3ZWE3NjRkMWNiOGI=", "commit": {"author": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2017-11-06T16:52:39Z"}, "committer": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2017-11-16T10:57:46Z"}, "message": "erase regions in MIR borrowck when checking if type moves by default", "tree": {"sha": "cb2b1c2c9e4e8b1a876fc98590364c4d8195c80b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/cb2b1c2c9e4e8b1a876fc98590364c4d8195c80b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8d3219ed5e19e63599245ad895827ea764d1cb8b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8d3219ed5e19e63599245ad895827ea764d1cb8b", "html_url": "https://github.com/rust-lang/rust/commit/8d3219ed5e19e63599245ad895827ea764d1cb8b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8d3219ed5e19e63599245ad895827ea764d1cb8b/comments", "author": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ef392bc11b99a005da7c07f5f67e7bd75608828f", "url": "https://api.github.com/repos/rust-lang/rust/commits/ef392bc11b99a005da7c07f5f67e7bd75608828f", "html_url": "https://github.com/rust-lang/rust/commit/ef392bc11b99a005da7c07f5f67e7bd75608828f"}], "stats": {"total": 17, "additions": 13, "deletions": 4}, "files": [{"sha": "70f4e41a9cbfe9a12cb07daf9cd6aefe889c10c7", "filename": "src/librustc_mir/borrow_check.rs", "status": "modified", "additions": 13, "deletions": 4, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/8d3219ed5e19e63599245ad895827ea764d1cb8b/src%2Flibrustc_mir%2Fborrow_check.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8d3219ed5e19e63599245ad895827ea764d1cb8b/src%2Flibrustc_mir%2Fborrow_check.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check.rs?ref=8d3219ed5e19e63599245ad895827ea764d1cb8b", "patch": "@@ -136,7 +136,6 @@ fn do_mir_borrowck<'a, 'gcx, 'tcx>(infcx: &InferCtxt<'a, 'gcx, 'tcx>,\n         node_id: id,\n         move_data: &mdpe.move_data,\n         param_env: param_env,\n-        fake_infer_ctxt: &infcx,\n     };\n \n     let mut state = InProgress::new(flow_borrows,\n@@ -154,7 +153,6 @@ pub struct MirBorrowckCtxt<'cx, 'gcx: 'tcx, 'tcx: 'cx> {\n     node_id: ast::NodeId,\n     move_data: &'cx MoveData<'tcx>,\n     param_env: ParamEnv<'gcx>,\n-    fake_infer_ctxt: &'cx InferCtxt<'cx, 'gcx, 'tcx>,\n }\n \n // (forced to be `pub` due to its use as an associated type below.)\n@@ -592,9 +590,20 @@ impl<'cx, 'gcx, 'tcx> MirBorrowckCtxt<'cx, 'gcx, 'tcx> {\n                       lvalue_span: (&Lvalue<'tcx>, Span),\n                       flow_state: &InProgress<'cx, 'gcx, 'tcx>) {\n         let lvalue = lvalue_span.0;\n+\n         let ty = lvalue.ty(self.mir, self.tcx).to_ty(self.tcx);\n-        let moves_by_default =\n-            self.fake_infer_ctxt.type_moves_by_default(self.param_env, ty, DUMMY_SP);\n+\n+        // Erase the regions in type before checking whether it moves by\n+        // default. There are a few reasons to do this:\n+        //\n+        // - They should not affect the result.\n+        // - It avoids adding new region constraints into the surrounding context,\n+        //   which would trigger an ICE, since the infcx will have been \"frozen\" by\n+        //   the NLL region context.\n+        let gcx = self.tcx.global_tcx();\n+        let erased_ty = gcx.lift(&self.tcx.erase_regions(&ty)).unwrap();\n+        let moves_by_default = erased_ty.moves_by_default(gcx, self.param_env, DUMMY_SP);\n+\n         if moves_by_default {\n             // move of lvalue: check if this is move of already borrowed path\n             self.access_lvalue(context, lvalue_span, (Deep, Write(WriteKind::Move)), flow_state);"}]}