{"sha": "1f667e7995680bc4a49d4675310ac3afc5b93db6", "node_id": "MDY6Q29tbWl0NzI0NzEyOjFmNjY3ZTc5OTU2ODBiYzRhNDlkNDY3NTMxMGFjM2FmYzViOTNkYjY=", "commit": {"author": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2013-01-08T06:13:34Z"}, "committer": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2013-01-08T06:13:34Z"}, "message": "test: Regular expression mistake. rs=bustage", "tree": {"sha": "ddf3780c932297fab6229f432ea6c66997044fe6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ddf3780c932297fab6229f432ea6c66997044fe6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1f667e7995680bc4a49d4675310ac3afc5b93db6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1f667e7995680bc4a49d4675310ac3afc5b93db6", "html_url": "https://github.com/rust-lang/rust/commit/1f667e7995680bc4a49d4675310ac3afc5b93db6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1f667e7995680bc4a49d4675310ac3afc5b93db6/comments", "author": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fcc470c0eeedb5101aff5791191aa19a270d1ffd", "url": "https://api.github.com/repos/rust-lang/rust/commits/fcc470c0eeedb5101aff5791191aa19a270d1ffd", "html_url": "https://github.com/rust-lang/rust/commit/fcc470c0eeedb5101aff5791191aa19a270d1ffd"}], "stats": {"total": 44, "additions": 22, "deletions": 22}, "files": [{"sha": "a439d2af8fc020a715e7179d97f458d5c20db355", "filename": "src/test/run-pass/cci_capture_clause.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1f667e7995680bc4a49d4675310ac3afc5b93db6/src%2Ftest%2Frun-pass%2Fcci_capture_clause.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f667e7995680bc4a49d4675310ac3afc5b93db6/src%2Ftest%2Frun-pass%2Fcci_capture_clause.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fcci_capture_clause.rs?ref=1f667e7995680bc4a49d4675310ac3afc5b93db6", "patch": "@@ -18,7 +18,7 @@\n \n extern mod cci_capture_clause;\n \n-use ::core::oldcomm::recv;\n+use core::oldcomm::recv;\n \n fn main() {\n     cci_capture_clause::foo(()).recv()"}, {"sha": "5d53453ffc00564c11bd740c41879c09a62b2737", "filename": "src/test/run-pass/class-cast-to-trait-cross-crate-2.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1f667e7995680bc4a49d4675310ac3afc5b93db6/src%2Ftest%2Frun-pass%2Fclass-cast-to-trait-cross-crate-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f667e7995680bc4a49d4675310ac3afc5b93db6/src%2Ftest%2Frun-pass%2Fclass-cast-to-trait-cross-crate-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fclass-cast-to-trait-cross-crate-2.rs?ref=1f667e7995680bc4a49d4675310ac3afc5b93db6", "patch": "@@ -11,7 +11,7 @@\n // xfail-fast\n // aux-build:cci_class_cast.rs\n extern mod cci_class_cast;\n-use ::core::to_str::ToStr;\n+use core::to_str::ToStr;\n use cci_class_cast::kitty::*;\n \n fn print_out<T: ToStr>(thing: T, expected: ~str) {"}, {"sha": "eb3728f2c6fc3cdbf1d17079883567c459896f32", "filename": "src/test/run-pass/class-separate-impl.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1f667e7995680bc4a49d4675310ac3afc5b93db6/src%2Ftest%2Frun-pass%2Fclass-separate-impl.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f667e7995680bc4a49d4675310ac3afc5b93db6/src%2Ftest%2Frun-pass%2Fclass-separate-impl.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fclass-separate-impl.rs?ref=1f667e7995680bc4a49d4675310ac3afc5b93db6", "patch": "@@ -9,7 +9,7 @@\n // except according to those terms.\n \n // xfail-fast\n-use ::core::to_str::*;\n+use core::to_str::*;\n \n struct cat {\n   priv mut meows : uint,"}, {"sha": "eba69134c4f0a280dce9e84d0d5c0ec114a7fd60", "filename": "src/test/run-pass/import-glob-crate.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1f667e7995680bc4a49d4675310ac3afc5b93db6/src%2Ftest%2Frun-pass%2Fimport-glob-crate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f667e7995680bc4a49d4675310ac3afc5b93db6/src%2Ftest%2Frun-pass%2Fimport-glob-crate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fimport-glob-crate.rs?ref=1f667e7995680bc4a49d4675310ac3afc5b93db6", "patch": "@@ -12,7 +12,7 @@\n \n \n extern mod std;\n-use ::core::vec::*;\n+use core::vec::*;\n \n fn main() {\n     let mut v = from_elem(0u, 0);"}, {"sha": "efa6d05f9da767f460fdde69801685d6eef9055b", "filename": "src/test/run-pass/issue-2214.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/1f667e7995680bc4a49d4675310ac3afc5b93db6/src%2Ftest%2Frun-pass%2Fissue-2214.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f667e7995680bc4a49d4675310ac3afc5b93db6/src%2Ftest%2Frun-pass%2Fissue-2214.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-2214.rs?ref=1f667e7995680bc4a49d4675310ac3afc5b93db6", "patch": "@@ -10,9 +10,9 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-use ::core::cast;\n-use ::core::libc::{c_double, c_int};\n-use ::core::f64::*;\n+use core::cast;\n+use core::libc::{c_double, c_int};\n+use core::f64::*;\n \n fn to_c_int(v: &mut int) -> &mut c_int unsafe {\n     cast::reinterpret_cast(&v)"}, {"sha": "dc7d5b99d77d9a3d42d5eff0f57dd4aca9b08a47", "filename": "src/test/run-pass/issue-2718.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/1f667e7995680bc4a49d4675310ac3afc5b93db6/src%2Ftest%2Frun-pass%2Fissue-2718.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f667e7995680bc4a49d4675310ac3afc5b93db6/src%2Ftest%2Frun-pass%2Fissue-2718.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-2718.rs?ref=1f667e7995680bc4a49d4675310ac3afc5b93db6", "patch": "@@ -12,7 +12,7 @@\n \n // tjc: I don't know why\n pub mod pipes {\n-    use ::core::cast::{forget, transmute};\n+    use core::cast::{forget, transmute};\n \n     pub enum state {\n         empty,\n@@ -212,8 +212,8 @@ pub mod pipes {\n }\n \n pub mod pingpong {\n-    use ::core::cast;\n-    use ::core::ptr;\n+    use core::cast;\n+    use core::ptr;\n \n     pub enum ping = ::pipes::send_packet<pong>;\n     pub enum pong = ::pipes::send_packet<ping>;\n@@ -241,7 +241,7 @@ pub mod pingpong {\n     }\n \n     pub mod client {\n-        use ::core::option;\n+        use core::option;\n         use pingpong;\n \n         pub type ping = ::pipes::send_packet<pingpong::ping>;"}, {"sha": "da7746681f281d449c9f6b8cfd574e7165c78979", "filename": "src/test/run-pass/issue-3559.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1f667e7995680bc4a49d4675310ac3afc5b93db6/src%2Ftest%2Frun-pass%2Fissue-3559.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f667e7995680bc4a49d4675310ac3afc5b93db6/src%2Ftest%2Frun-pass%2Fissue-3559.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-3559.rs?ref=1f667e7995680bc4a49d4675310ac3afc5b93db6", "patch": "@@ -13,7 +13,7 @@\n // rustc --test map_to_str.rs && ./map_to_str\n extern mod std;\n \n-use ::core::io::{WriterUtil};\n+use core::io::{WriterUtil};\n use std::map::*;\n \n #[cfg(test)]"}, {"sha": "66c2a4672b4b0c8a90a43acbb3cd1da147660217", "filename": "src/test/run-pass/issue-3656.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1f667e7995680bc4a49d4675310ac3afc5b93db6/src%2Ftest%2Frun-pass%2Fissue-3656.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f667e7995680bc4a49d4675310ac3afc5b93db6/src%2Ftest%2Frun-pass%2Fissue-3656.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-3656.rs?ref=1f667e7995680bc4a49d4675310ac3afc5b93db6", "patch": "@@ -13,7 +13,7 @@\n // Incorrect struct size computation in the FFI, because of not taking\n // the alignment of elements into account.\n \n-use ::core::libc::*;\n+use core::libc::*;\n \n struct KEYGEN {\n     hash_algorithm: [c_uint * 2],"}, {"sha": "dd5f7484f10374917fdf6b36bb1329abe87bad96", "filename": "src/test/run-pass/mod-view-items.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1f667e7995680bc4a49d4675310ac3afc5b93db6/src%2Ftest%2Frun-pass%2Fmod-view-items.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f667e7995680bc4a49d4675310ac3afc5b93db6/src%2Ftest%2Frun-pass%2Fmod-view-items.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fmod-view-items.rs?ref=1f667e7995680bc4a49d4675310ac3afc5b93db6", "patch": "@@ -18,7 +18,7 @@\n \n mod m {\n     #[legacy_exports];\n-    use ::core::vec;\n+    use core::vec;\n     fn f() -> ~[int] { vec::from_elem(1u, 0) }\n }\n "}, {"sha": "803f7f06b512ccf6ec2448d78aa6e08813d06497", "filename": "src/test/run-pass/pipe-pingpong-bounded.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/1f667e7995680bc4a49d4675310ac3afc5b93db6/src%2Ftest%2Frun-pass%2Fpipe-pingpong-bounded.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f667e7995680bc4a49d4675310ac3afc5b93db6/src%2Ftest%2Frun-pass%2Fpipe-pingpong-bounded.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fpipe-pingpong-bounded.rs?ref=1f667e7995680bc4a49d4675310ac3afc5b93db6", "patch": "@@ -18,8 +18,8 @@\n // This was generated initially by the pipe compiler, but it's been\n // modified in hopefully straightforward ways.\n mod pingpong {\n-    use ::core::pipes::*;\n-    use ::core::ptr;\n+    use core::pipes::*;\n+    use core::ptr;\n \n     pub type packets = {\n         ping: Packet<ping>,\n@@ -43,7 +43,7 @@ mod pingpong {\n     pub enum ping = server::pong;\n     pub enum pong = client::ping;\n     pub mod client {\n-        use ::core::ptr;\n+        use core::ptr;\n \n         pub fn ping(+pipe: ping) -> pong {\n             {\n@@ -61,7 +61,7 @@ mod pingpong {\n                                                   ::pingpong::packets>;\n     }\n     pub mod server {\n-        use ::core::ptr;\n+        use core::ptr;\n \n         pub type ping = pipes::RecvPacketBuffered<::pingpong::ping,\n         ::pingpong::packets>;"}, {"sha": "7fb77cba3bde99fea7fb89a46e138d83f81a1bfa", "filename": "src/test/run-pass/pipe-pingpong-proto.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/1f667e7995680bc4a49d4675310ac3afc5b93db6/src%2Ftest%2Frun-pass%2Fpipe-pingpong-proto.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f667e7995680bc4a49d4675310ac3afc5b93db6/src%2Ftest%2Frun-pass%2Fpipe-pingpong-proto.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fpipe-pingpong-proto.rs?ref=1f667e7995680bc4a49d4675310ac3afc5b93db6", "patch": "@@ -12,7 +12,7 @@\n \n // An example to make sure the protocol parsing syntax extension works.\n \n-use ::core::option;\n+use core::option;\n \n proto! pingpong (\n     ping:send {\n@@ -25,7 +25,7 @@ proto! pingpong (\n )\n \n mod test {\n-    use ::core::pipes::recv;\n+    use core::pipes::recv;\n     use pingpong::{ping, pong};\n \n     pub fn client(-chan: ::pingpong::client::ping) {"}, {"sha": "43cafa49b4e19310548e247d8719cba6dd5a8b60", "filename": "src/test/run-pass/trait-to-str.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1f667e7995680bc4a49d4675310ac3afc5b93db6/src%2Ftest%2Frun-pass%2Ftrait-to-str.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f667e7995680bc4a49d4675310ac3afc5b93db6/src%2Ftest%2Frun-pass%2Ftrait-to-str.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Ftrait-to-str.rs?ref=1f667e7995680bc4a49d4675310ac3afc5b93db6", "patch": "@@ -14,7 +14,7 @@\n \n extern mod core;\n \n-use ::core::{str, int, vec};\n+use core::{str, int, vec};\n \n trait to_str {\n     fn to_str() -> ~str;"}, {"sha": "d938c915dc0bb38386fe1ae31e15d08766cf0ccf", "filename": "src/test/run-pass/use.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1f667e7995680bc4a49d4675310ac3afc5b93db6/src%2Ftest%2Frun-pass%2Fuse.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f667e7995680bc4a49d4675310ac3afc5b93db6/src%2Ftest%2Frun-pass%2Fuse.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fuse.rs?ref=1f667e7995680bc4a49d4675310ac3afc5b93db6", "patch": "@@ -16,7 +16,7 @@ extern mod zed(name = \"core\");\n extern mod bar(name = \"core\", vers = \"0.6\");\n \n \n-use ::core::str;\n+use core::str;\n use x = zed::str;\n mod baz {\n     #[legacy_exports];"}]}