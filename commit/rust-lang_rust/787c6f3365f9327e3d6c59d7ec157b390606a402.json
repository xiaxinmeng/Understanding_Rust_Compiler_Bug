{"sha": "787c6f3365f9327e3d6c59d7ec157b390606a402", "node_id": "C_kwDOAAsO6NoAKDc4N2M2ZjMzNjVmOTMyN2UzZDZjNTlkN2VjMTU3YjM5MDYwNmE0MDI", "commit": {"author": {"name": "Dylan DPC", "email": "99973273+Dylan-DPC@users.noreply.github.com", "date": "2022-02-24T20:42:16Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-02-24T20:42:16Z"}, "message": "Rollup merge of #94308 - tmiasko:normalize-main-ret-ty, r=oli-obk\n\nNormalize main return type during mono item collection & codegen\n\nThe issue can be observed with `-Zprint-mono-items=lazy` in:\n\n```rust\n#![feature(termination_trait_lib)]\nfn main() -> impl std::process::Termination { }\n```\n```\nBEFORE: MONO_ITEM fn std::rt::lang_start::<impl std::process::Termination> ````@@```` t.93933fa2-cgu.2[External]\nAFTER:  MONO_ITEM fn std::rt::lang_start::<()> ````@@```` t.df56e625-cgu.1[External]\n```", "tree": {"sha": "2c20b850c4b0480e9382943f761f1c45b4829697", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2c20b850c4b0480e9382943f761f1c45b4829697"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/787c6f3365f9327e3d6c59d7ec157b390606a402", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJiF+2oCRBK7hj4Ov3rIwAAIxkIAIeWMWBkR57YxFUDZmRmCvuX\nsk3cHcbm2TEWARuzPvqXP6f/CTFpucO0QsBValalHxfDBa4kl4pr0+2cj9xoF4WG\ncmfCYJEGHGrKyWuPy6mvWUZEE67G5vUzUzSjv0Czzxc0ohcI/KmAjgIUUB+FBxRG\nrIqJ2NOHe743XXXBYPGboK7wTxz3eyP3XMcJVXx0StPEuwFXkrBbISMr7vHNKr7G\nPU15uyxBIFqO+NPuNtnz2xzl1RqivJRTm5/bkSxGK88TkZEZX/TfcP4pzaxVuntA\nhBY5lVAgg/a69hNKwrySeLMsUr0ZJv1nXKiMhjEOprtGnFIfr985qUux1mG3nCA=\n=hGNU\n-----END PGP SIGNATURE-----\n", "payload": "tree 2c20b850c4b0480e9382943f761f1c45b4829697\nparent 6b03a46f27821ef5986bd8ab12e5e65cb98fa790\nparent f047af24b3b90f19b89fac80822acd69613b89ec\nauthor Dylan DPC <99973273+Dylan-DPC@users.noreply.github.com> 1645735336 +0100\ncommitter GitHub <noreply@github.com> 1645735336 +0100\n\nRollup merge of #94308 - tmiasko:normalize-main-ret-ty, r=oli-obk\n\nNormalize main return type during mono item collection & codegen\n\nThe issue can be observed with `-Zprint-mono-items=lazy` in:\n\n```rust\n#![feature(termination_trait_lib)]\nfn main() -> impl std::process::Termination { }\n```\n```\nBEFORE: MONO_ITEM fn std::rt::lang_start::<impl std::process::Termination> ````@@```` t.93933fa2-cgu.2[External]\nAFTER:  MONO_ITEM fn std::rt::lang_start::<()> ````@@```` t.df56e625-cgu.1[External]\n```\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/787c6f3365f9327e3d6c59d7ec157b390606a402", "html_url": "https://github.com/rust-lang/rust/commit/787c6f3365f9327e3d6c59d7ec157b390606a402", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/787c6f3365f9327e3d6c59d7ec157b390606a402/comments", "author": {"login": "Dylan-DPC", "id": 99973273, "node_id": "U_kgDOBfV4mQ", "avatar_url": "https://avatars.githubusercontent.com/u/99973273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dylan-DPC", "html_url": "https://github.com/Dylan-DPC", "followers_url": "https://api.github.com/users/Dylan-DPC/followers", "following_url": "https://api.github.com/users/Dylan-DPC/following{/other_user}", "gists_url": "https://api.github.com/users/Dylan-DPC/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dylan-DPC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dylan-DPC/subscriptions", "organizations_url": "https://api.github.com/users/Dylan-DPC/orgs", "repos_url": "https://api.github.com/users/Dylan-DPC/repos", "events_url": "https://api.github.com/users/Dylan-DPC/events{/privacy}", "received_events_url": "https://api.github.com/users/Dylan-DPC/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6b03a46f27821ef5986bd8ab12e5e65cb98fa790", "url": "https://api.github.com/repos/rust-lang/rust/commits/6b03a46f27821ef5986bd8ab12e5e65cb98fa790", "html_url": "https://github.com/rust-lang/rust/commit/6b03a46f27821ef5986bd8ab12e5e65cb98fa790"}, {"sha": "f047af24b3b90f19b89fac80822acd69613b89ec", "url": "https://api.github.com/repos/rust-lang/rust/commits/f047af24b3b90f19b89fac80822acd69613b89ec", "html_url": "https://github.com/rust-lang/rust/commit/f047af24b3b90f19b89fac80822acd69613b89ec"}], "stats": {"total": 15, "additions": 12, "deletions": 3}, "files": [{"sha": "2f71a70a4494615529fd859c4d86c3178a5fe0c0", "filename": "compiler/rustc_codegen_cranelift/src/main_shim.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/787c6f3365f9327e3d6c59d7ec157b390606a402/compiler%2Frustc_codegen_cranelift%2Fsrc%2Fmain_shim.rs", "raw_url": "https://github.com/rust-lang/rust/raw/787c6f3365f9327e3d6c59d7ec157b390606a402/compiler%2Frustc_codegen_cranelift%2Fsrc%2Fmain_shim.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_cranelift%2Fsrc%2Fmain_shim.rs?ref=787c6f3365f9327e3d6c59d7ec157b390606a402", "patch": "@@ -51,7 +51,10 @@ pub(crate) fn maybe_create_entry_wrapper(\n         // late-bound regions, since late-bound\n         // regions must appear in the argument\n         // listing.\n-        let main_ret_ty = tcx.erase_regions(main_ret_ty.no_bound_vars().unwrap());\n+        let main_ret_ty = tcx.normalize_erasing_regions(\n+            ty::ParamEnv::reveal_all(),\n+            main_ret_ty.no_bound_vars().unwrap(),\n+        );\n \n         let cmain_sig = Signature {\n             params: vec!["}, {"sha": "11f32d92e44cd0bf45181e8f8fbd2ee925e702ea", "filename": "compiler/rustc_codegen_ssa/src/base.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/787c6f3365f9327e3d6c59d7ec157b390606a402/compiler%2Frustc_codegen_ssa%2Fsrc%2Fbase.rs", "raw_url": "https://github.com/rust-lang/rust/raw/787c6f3365f9327e3d6c59d7ec157b390606a402/compiler%2Frustc_codegen_ssa%2Fsrc%2Fbase.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_ssa%2Fsrc%2Fbase.rs?ref=787c6f3365f9327e3d6c59d7ec157b390606a402", "patch": "@@ -407,7 +407,10 @@ pub fn maybe_create_entry_wrapper<'a, 'tcx, Bx: BuilderMethods<'a, 'tcx>>(\n         // late-bound regions, since late-bound\n         // regions must appear in the argument\n         // listing.\n-        let main_ret_ty = cx.tcx().erase_regions(main_ret_ty.no_bound_vars().unwrap());\n+        let main_ret_ty = cx.tcx().normalize_erasing_regions(\n+            ty::ParamEnv::reveal_all(),\n+            main_ret_ty.no_bound_vars().unwrap(),\n+        );\n \n         let Some(llfn) = cx.declare_c_main(llfty) else {\n             // FIXME: We should be smart and show a better diagnostic here."}, {"sha": "2f88c45a2a38983915e53fd39257b6a58aa9d7f6", "filename": "compiler/rustc_monomorphize/src/collector.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/787c6f3365f9327e3d6c59d7ec157b390606a402/compiler%2Frustc_monomorphize%2Fsrc%2Fcollector.rs", "raw_url": "https://github.com/rust-lang/rust/raw/787c6f3365f9327e3d6c59d7ec157b390606a402/compiler%2Frustc_monomorphize%2Fsrc%2Fcollector.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_monomorphize%2Fsrc%2Fcollector.rs?ref=787c6f3365f9327e3d6c59d7ec157b390606a402", "patch": "@@ -1270,7 +1270,10 @@ impl<'v> RootCollector<'_, 'v> {\n         // late-bound regions, since late-bound\n         // regions must appear in the argument\n         // listing.\n-        let main_ret_ty = self.tcx.erase_regions(main_ret_ty.no_bound_vars().unwrap());\n+        let main_ret_ty = self.tcx.normalize_erasing_regions(\n+            ty::ParamEnv::reveal_all(),\n+            main_ret_ty.no_bound_vars().unwrap(),\n+        );\n \n         let start_instance = Instance::resolve(\n             self.tcx,"}]}