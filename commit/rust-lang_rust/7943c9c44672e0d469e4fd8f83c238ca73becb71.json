{"sha": "7943c9c44672e0d469e4fd8f83c238ca73becb71", "node_id": "C_kwDOAAsO6NoAKDc5NDNjOWM0NDY3MmUwZDQ2OWU0ZmQ4ZjgzYzIzOGNhNzNiZWNiNzE", "commit": {"author": {"name": "LingMan", "email": "LingMan@users.noreply.github.com", "date": "2021-10-12T12:47:31Z"}, "committer": {"name": "LingMan", "email": "LingMan@users.noreply.github.com", "date": "2021-10-12T12:47:52Z"}, "message": "Use Option::map_or instead of open coding it", "tree": {"sha": "266711df481f301cc4d1d89be1531a0332931029", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/266711df481f301cc4d1d89be1531a0332931029"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7943c9c44672e0d469e4fd8f83c238ca73becb71", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7943c9c44672e0d469e4fd8f83c238ca73becb71", "html_url": "https://github.com/rust-lang/rust/commit/7943c9c44672e0d469e4fd8f83c238ca73becb71", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7943c9c44672e0d469e4fd8f83c238ca73becb71/comments", "author": {"login": "LingMan", "id": 18645382, "node_id": "MDQ6VXNlcjE4NjQ1Mzgy", "avatar_url": "https://avatars.githubusercontent.com/u/18645382?v=4", "gravatar_id": "", "url": "https://api.github.com/users/LingMan", "html_url": "https://github.com/LingMan", "followers_url": "https://api.github.com/users/LingMan/followers", "following_url": "https://api.github.com/users/LingMan/following{/other_user}", "gists_url": "https://api.github.com/users/LingMan/gists{/gist_id}", "starred_url": "https://api.github.com/users/LingMan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/LingMan/subscriptions", "organizations_url": "https://api.github.com/users/LingMan/orgs", "repos_url": "https://api.github.com/users/LingMan/repos", "events_url": "https://api.github.com/users/LingMan/events{/privacy}", "received_events_url": "https://api.github.com/users/LingMan/received_events", "type": "User", "site_admin": false}, "committer": {"login": "LingMan", "id": 18645382, "node_id": "MDQ6VXNlcjE4NjQ1Mzgy", "avatar_url": "https://avatars.githubusercontent.com/u/18645382?v=4", "gravatar_id": "", "url": "https://api.github.com/users/LingMan", "html_url": "https://github.com/LingMan", "followers_url": "https://api.github.com/users/LingMan/followers", "following_url": "https://api.github.com/users/LingMan/following{/other_user}", "gists_url": "https://api.github.com/users/LingMan/gists{/gist_id}", "starred_url": "https://api.github.com/users/LingMan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/LingMan/subscriptions", "organizations_url": "https://api.github.com/users/LingMan/orgs", "repos_url": "https://api.github.com/users/LingMan/repos", "events_url": "https://api.github.com/users/LingMan/events{/privacy}", "received_events_url": "https://api.github.com/users/LingMan/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9475e609b8458fff9e444934a6017d2e590642cf", "url": "https://api.github.com/repos/rust-lang/rust/commits/9475e609b8458fff9e444934a6017d2e590642cf", "html_url": "https://github.com/rust-lang/rust/commit/9475e609b8458fff9e444934a6017d2e590642cf"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "573124c8ec9a8fa3d0d9bb030272bc81e6a4b685", "filename": "compiler/rustc_index/src/bit_set.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7943c9c44672e0d469e4fd8f83c238ca73becb71/compiler%2Frustc_index%2Fsrc%2Fbit_set.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7943c9c44672e0d469e4fd8f83c238ca73becb71/compiler%2Frustc_index%2Fsrc%2Fbit_set.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_index%2Fsrc%2Fbit_set.rs?ref=7943c9c44672e0d469e4fd8f83c238ca73becb71", "patch": "@@ -841,7 +841,7 @@ impl<T: Idx> GrowableBitSet<T> {\n     #[inline]\n     pub fn contains(&self, elem: T) -> bool {\n         let (word_index, mask) = word_index_and_mask(elem);\n-        if let Some(word) = self.bit_set.words.get(word_index) { (word & mask) != 0 } else { false }\n+        self.bit_set.words.get(word_index).map_or(false, |word| (word & mask) != 0)\n     }\n }\n "}]}