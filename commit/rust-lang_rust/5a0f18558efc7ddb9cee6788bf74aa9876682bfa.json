{"sha": "5a0f18558efc7ddb9cee6788bf74aa9876682bfa", "node_id": "MDY6Q29tbWl0NzI0NzEyOjVhMGYxODU1OGVmYzdkZGI5Y2VlNjc4OGJmNzRhYTk4NzY2ODJiZmE=", "commit": {"author": {"name": "Matt Brubeck", "email": "mbrubeck@limpet.net", "date": "2011-10-27T15:36:06Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2011-10-27T20:37:35Z"}, "message": "Add 'as' (cast) operator to the documentation", "tree": {"sha": "53722f3c6b349edc37631cde5a1a2cd63267eac8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/53722f3c6b349edc37631cde5a1a2cd63267eac8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5a0f18558efc7ddb9cee6788bf74aa9876682bfa", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5a0f18558efc7ddb9cee6788bf74aa9876682bfa", "html_url": "https://github.com/rust-lang/rust/commit/5a0f18558efc7ddb9cee6788bf74aa9876682bfa", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5a0f18558efc7ddb9cee6788bf74aa9876682bfa/comments", "author": {"login": "mbrubeck", "id": 5920, "node_id": "MDQ6VXNlcjU5MjA=", "avatar_url": "https://avatars.githubusercontent.com/u/5920?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mbrubeck", "html_url": "https://github.com/mbrubeck", "followers_url": "https://api.github.com/users/mbrubeck/followers", "following_url": "https://api.github.com/users/mbrubeck/following{/other_user}", "gists_url": "https://api.github.com/users/mbrubeck/gists{/gist_id}", "starred_url": "https://api.github.com/users/mbrubeck/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mbrubeck/subscriptions", "organizations_url": "https://api.github.com/users/mbrubeck/orgs", "repos_url": "https://api.github.com/users/mbrubeck/repos", "events_url": "https://api.github.com/users/mbrubeck/events{/privacy}", "received_events_url": "https://api.github.com/users/mbrubeck/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "26d839216b8ca34545f05cf595c6d7044003679a", "url": "https://api.github.com/repos/rust-lang/rust/commits/26d839216b8ca34545f05cf595c6d7044003679a", "html_url": "https://github.com/rust-lang/rust/commit/26d839216b8ca34545f05cf595c6d7044003679a"}], "stats": {"total": 25, "additions": 25, "deletions": 0}, "files": [{"sha": "eacd692d1600debaeca577c86c7a79a33a7fe6ec", "filename": "doc/rust.texi", "status": "modified", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/5a0f18558efc7ddb9cee6788bf74aa9876682bfa/doc%2Frust.texi", "raw_url": "https://github.com/rust-lang/rust/raw/5a0f18558efc7ddb9cee6788bf74aa9876682bfa/doc%2Frust.texi", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/doc%2Frust.texi?ref=5a0f18558efc7ddb9cee6788bf74aa9876682bfa", "patch": "@@ -2930,6 +2930,7 @@ effects of the expression's evaluation.\n * Ref.Expr.Ret::                Expression for stopping and producing a value.\n @c * Ref.Expr.Be::                 Expression for stopping and executing a tail call.\n * Ref.Expr.Put::                Expression for pausing and producing a value.\n+* Ref.Expr.As::                 Expression for casting a value to a different type.\n * Ref.Expr.Fail::               Expression for causing task failure.\n * Ref.Expr.Log::                Expression for logging values to diagnostic buffers.\n * Ref.Expr.Note::               Expression for logging values during failure.\n@@ -3116,6 +3117,30 @@ either continuing execution after the @code{put} expression, or terminating its\n execution and destroying the iterator frame.\n \n \n+@node       Ref.Expr.As\n+@subsection Ref.Expr.As\n+@c * Ref.Expr.As::                 Expression for casting a value to a different type.\n+@cindex As expression\n+@cindex Cast\n+@cindex Typecast\n+\n+Executing an @code{as} expression casts the value on the left-hand side to the\n+type on the right-hand side.\n+\n+A numeric value can be cast to any numeric type.  A native pointer value can\n+be cast to or from any integral type or native pointer type.  Any other cast\n+is unsupported and will fail to compile.\n+\n+An example of an @code{as} expression:\n+@example\n+fn avg(v: [float]) -> float @{\n+  let sum: float = sum(v);\n+  let sz: float = std::vec::len(v) as float;\n+  ret sum / sz;\n+@}\n+@end example\n+\n+\n @node       Ref.Expr.Fail\n @subsection Ref.Expr.Fail\n @c * Ref.Expr.Fail::               Expression for causing task failure."}]}