{"sha": "94b681afe4f8fb09141d459963b268c76fbd0072", "node_id": "MDY6Q29tbWl0NzI0NzEyOjk0YjY4MWFmZTRmOGZiMDkxNDFkNDU5OTYzYjI2OGM3NmZiZDAwNzI=", "commit": {"author": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2011-03-05T02:05:48Z"}, "committer": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2011-03-05T02:05:48Z"}, "message": "rustc: Use copy_ty() when initializing N-ary tag variants. Un-XFAIL generic-tag.rs.", "tree": {"sha": "decda8d0620f3fb17b9790363ce66f31e0512ae0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/decda8d0620f3fb17b9790363ce66f31e0512ae0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/94b681afe4f8fb09141d459963b268c76fbd0072", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/94b681afe4f8fb09141d459963b268c76fbd0072", "html_url": "https://github.com/rust-lang/rust/commit/94b681afe4f8fb09141d459963b268c76fbd0072", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/94b681afe4f8fb09141d459963b268c76fbd0072/comments", "author": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1dc6bdf33191cbd183bb17331e4a71d5c80ad353", "url": "https://api.github.com/repos/rust-lang/rust/commits/1dc6bdf33191cbd183bb17331e4a71d5c80ad353", "html_url": "https://github.com/rust-lang/rust/commit/1dc6bdf33191cbd183bb17331e4a71d5c80ad353"}], "stats": {"total": 26, "additions": 19, "deletions": 7}, "files": [{"sha": "484740b5df2ad87fc5c5c3ddd272c246319645ba", "filename": "src/Makefile", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/94b681afe4f8fb09141d459963b268c76fbd0072/src%2FMakefile", "raw_url": "https://github.com/rust-lang/rust/raw/94b681afe4f8fb09141d459963b268c76fbd0072/src%2FMakefile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2FMakefile?ref=94b681afe4f8fb09141d459963b268c76fbd0072", "patch": "@@ -432,8 +432,7 @@ TEST_XFAILS_BOOT :=  $(TASK_XFAILS) \\\n                     test/compile-fail/tail-non-call.rs \\\n                     test/compile-fail/writing-through-read-alias.rs\n \n-TEST_XFAILS_RUSTC := $(CONST_TAG_XFAILS) \\\n-                     $(addprefix test/run-pass/, \\\n+TEST_XFAILS_RUSTC := $(addprefix test/run-pass/, \\\n                         acyclic-unwind.rs \\\n                         alt-pattern-drop.rs \\\n                         alt-type-simple.rs \\"}, {"sha": "b5ff42248dca32005d96fc0d8611528267378dde", "filename": "src/comp/middle/trans.rs", "status": "modified", "additions": 18, "deletions": 5, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/94b681afe4f8fb09141d459963b268c76fbd0072/src%2Fcomp%2Fmiddle%2Ftrans.rs", "raw_url": "https://github.com/rust-lang/rust/raw/94b681afe4f8fb09141d459963b268c76fbd0072/src%2Fcomp%2Fmiddle%2Ftrans.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Ftrans.rs?ref=94b681afe4f8fb09141d459963b268c76fbd0072", "patch": "@@ -363,17 +363,22 @@ fn T_taskptr(type_names tn) -> TypeRef {\n     ret T_ptr(T_task(tn));\n }\n \n-fn T_typaram_ptr(type_names tn) -> TypeRef {\n+// This type must never be used directly; it must always be cast away.\n+fn T_typaram(type_names tn) -> TypeRef {\n     auto s = \"typaram\";\n     if (tn.name_has_type(s)) {\n         ret tn.get_type(s);\n     }\n \n-    auto t = T_ptr(T_i8());\n+    auto t = T_i8();\n     tn.associate(s, t);\n     ret t;\n }\n \n+fn T_typaram_ptr(type_names tn) -> TypeRef {\n+    ret T_ptr(T_typaram(tn));\n+}\n+\n fn T_closure_ptr(type_names tn,\n                  TypeRef lltarget_ty,\n                  TypeRef llbindings_ty,\n@@ -2068,7 +2073,6 @@ fn call_tydesc_glue(@block_ctxt cx, ValueRef v, @ty.t t, int field) {\n fn incr_all_refcnts(@block_ctxt cx,\n                     ValueRef v,\n                     @ty.t t) -> result {\n-\n     if (!ty.type_is_scalar(t)) {\n         call_tydesc_glue(cx, v, t, abi.tydesc_field_take_glue_off);\n     }\n@@ -4820,9 +4824,18 @@ fn trans_tag_variant(@crate_ctxt cx, ast.def_id tag_id,\n         // works. So we have to cast to the destination's view of the type.\n         auto llargptr = bcx.build.PointerCast(fcx.llargs.get(va.id),\n             val_ty(lldestptr));\n-        auto llargval = bcx.build.Load(llargptr);\n \n-        bcx.build.Store(llargval, lldestptr);\n+        auto arg_ty = arg_tys.(i).ty;\n+        auto llargval;\n+        if (ty.type_is_structural(arg_ty)) {\n+            llargval = llargptr;\n+        } else {\n+            llargval = bcx.build.Load(llargptr);\n+        }\n+\n+        rslt = copy_ty(bcx, INIT, lldestptr, llargval, arg_ty);\n+        bcx = rslt.bcx;\n+\n         i += 1u;\n     }\n "}]}