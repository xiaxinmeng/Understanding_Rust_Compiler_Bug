{"sha": "d892a07c67dfa4f347b62ecf96de184c41dae5dd", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQ4OTJhMDdjNjdkZmE0ZjM0N2I2MmVjZjk2ZGUxODRjNDFkYWU1ZGQ=", "commit": {"author": {"name": "\u5357\u6d66\u6708", "email": "nanpuyue@gmail.com", "date": "2020-08-10T12:20:20Z"}, "committer": {"name": "\u5357\u6d66\u6708", "email": "nanpuyue@gmail.com", "date": "2020-08-11T01:15:08Z"}, "message": "add Ipv6Addr::to_ipv4_mapped", "tree": {"sha": "3026164283a4e586d8e9f23eb6c93c6c7ca7ad4b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3026164283a4e586d8e9f23eb6c93c6c7ca7ad4b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d892a07c67dfa4f347b62ecf96de184c41dae5dd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d892a07c67dfa4f347b62ecf96de184c41dae5dd", "html_url": "https://github.com/rust-lang/rust/commit/d892a07c67dfa4f347b62ecf96de184c41dae5dd", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d892a07c67dfa4f347b62ecf96de184c41dae5dd/comments", "author": {"login": "nanpuyue", "id": 1524609, "node_id": "MDQ6VXNlcjE1MjQ2MDk=", "avatar_url": "https://avatars.githubusercontent.com/u/1524609?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nanpuyue", "html_url": "https://github.com/nanpuyue", "followers_url": "https://api.github.com/users/nanpuyue/followers", "following_url": "https://api.github.com/users/nanpuyue/following{/other_user}", "gists_url": "https://api.github.com/users/nanpuyue/gists{/gist_id}", "starred_url": "https://api.github.com/users/nanpuyue/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nanpuyue/subscriptions", "organizations_url": "https://api.github.com/users/nanpuyue/orgs", "repos_url": "https://api.github.com/users/nanpuyue/repos", "events_url": "https://api.github.com/users/nanpuyue/events{/privacy}", "received_events_url": "https://api.github.com/users/nanpuyue/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nanpuyue", "id": 1524609, "node_id": "MDQ6VXNlcjE1MjQ2MDk=", "avatar_url": "https://avatars.githubusercontent.com/u/1524609?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nanpuyue", "html_url": "https://github.com/nanpuyue", "followers_url": "https://api.github.com/users/nanpuyue/followers", "following_url": "https://api.github.com/users/nanpuyue/following{/other_user}", "gists_url": "https://api.github.com/users/nanpuyue/gists{/gist_id}", "starred_url": "https://api.github.com/users/nanpuyue/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nanpuyue/subscriptions", "organizations_url": "https://api.github.com/users/nanpuyue/orgs", "repos_url": "https://api.github.com/users/nanpuyue/repos", "events_url": "https://api.github.com/users/nanpuyue/events{/privacy}", "received_events_url": "https://api.github.com/users/nanpuyue/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cfdf9d335501cc0a53ae69c940095cca7d4be0f8", "url": "https://api.github.com/repos/rust-lang/rust/commits/cfdf9d335501cc0a53ae69c940095cca7d4be0f8", "html_url": "https://github.com/rust-lang/rust/commit/cfdf9d335501cc0a53ae69c940095cca7d4be0f8"}], "stats": {"total": 40, "additions": 40, "deletions": 0}, "files": [{"sha": "193e626d70468c5e53cf73e1d005eaba2c7667fb", "filename": "library/std/src/net/ip.rs", "status": "modified", "additions": 40, "deletions": 0, "changes": 40, "blob_url": "https://github.com/rust-lang/rust/blob/d892a07c67dfa4f347b62ecf96de184c41dae5dd/library%2Fstd%2Fsrc%2Fnet%2Fip.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d892a07c67dfa4f347b62ecf96de184c41dae5dd/library%2Fstd%2Fsrc%2Fnet%2Fip.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fnet%2Fip.rs?ref=d892a07c67dfa4f347b62ecf96de184c41dae5dd", "patch": "@@ -1488,6 +1488,37 @@ impl Ipv6Addr {\n         (self.segments()[0] & 0xff00) == 0xff00\n     }\n \n+    /// Converts this address to an [IPv4 address] if it's an \"IPv4-mapped IPv6 address\"\n+    /// defined in [IETF RFC 4291 section 2.5.5.2], otherwise returns [`None`].\n+    ///\n+    /// `::ffff:a.b.c.d` becomes `a.b.c.d`.\n+    /// All addresses *not* starting with `::ffff` will return `None`.\n+    ///\n+    /// [IPv4 address]: ../../std/net/struct.Ipv4Addr.html\n+    /// [`None`]: ../../std/option/enum.Option.html#variant.None\n+    /// [IETF RFC 4291 section 2.5.5.2]: https://tools.ietf.org/html/rfc4291#section-2.5.5.2\n+    ///\n+    /// # Examples\n+    ///\n+    /// ```\n+    /// #![feature(ip)]\n+    ///\n+    /// use std::net::{Ipv4Addr, Ipv6Addr};\n+    ///\n+    /// assert_eq!(Ipv6Addr::new(0xff00, 0, 0, 0, 0, 0, 0, 0).to_ipv4_mapped(), None);\n+    /// assert_eq!(Ipv6Addr::new(0, 0, 0, 0, 0, 0xffff, 0xc00a, 0x2ff).to_ipv4_mapped(),\n+    ///            Some(Ipv4Addr::new(192, 10, 2, 255)));\n+    /// assert_eq!(Ipv6Addr::new(0, 0, 0, 0, 0, 0, 0, 1).to_ipv4_mapped(), None);\n+    /// ```\n+    pub fn to_ipv4_mapped(&self) -> Option<Ipv4Addr> {\n+        match self.octets() {\n+            [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0xff, 0xff, a, b, c, d] => {\n+                Some(Ipv4Addr::new(a, b, c, d))\n+            }\n+            _ => None,\n+        }\n+    }\n+\n     /// Converts this address to an [IPv4 address]. Returns [`None`] if this address is\n     /// neither IPv4-compatible or IPv4-mapped.\n     ///\n@@ -2084,6 +2115,15 @@ mod tests {\n         );\n     }\n \n+    #[test]\n+    fn ipv6_to_ipv4_mapped() {\n+        assert_eq!(\n+            Ipv6Addr::new(0, 0, 0, 0, 0, 0xffff, 0x1234, 0x5678).to_ipv4_mapped(),\n+            Some(Ipv4Addr::new(0x12, 0x34, 0x56, 0x78))\n+        );\n+        assert_eq!(Ipv6Addr::new(0, 0, 0, 0, 0, 0, 0x1234, 0x5678).to_ipv4_mapped(), None);\n+    }\n+\n     #[test]\n     fn ipv6_to_ipv4() {\n         assert_eq!("}]}