{"sha": "a7a1bb444d59732e3973b7b2d5b27413c5a1ca81", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE3YTFiYjQ0NGQ1OTczMmUzOTczYjdiMmQ1YjI3NDEzYzVhMWNhODE=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2021-01-24T00:42:59Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-01-24T00:42:59Z"}, "message": "Merge #7413\n\n7413: Handle unions in symbol search r=Veykril a=Veykril\n\nbors r+\n\nCo-authored-by: Lukas Wirth <lukastw97@gmail.com>", "tree": {"sha": "ab1e96340ba6717daec0bd0d3051230463c2916f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ab1e96340ba6717daec0bd0d3051230463c2916f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a7a1bb444d59732e3973b7b2d5b27413c5a1ca81", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJgDMKTCRBK7hj4Ov3rIwAAdHIIAAhOnsgdrEbw2vlXsH37u+BB\nFraxdWmbRcKqkwii8dCLzarwVXznrz4SVH5Chs6ZyYx+XuGM4nlKX+UnU775MxKy\nG8CvuSesYujRbN0Ntkt6GM1c8+f83B7BHz9w5LexGzY29Xw13dD5uuLsHGafgWCt\nQ6Xzck0C5JQfi4x+GHeq8NZ/iZxogSJBaf9eAVlEL4BpXd5ADUIrc6yni7Uwu6ax\nboO49yOmEp1OmWCsMslQGToHBQScPk+2j10n8122+Ct1BqE3+C/smClsBXYQ5//p\nzRPL8s+GFojoww7N8FXVkVP2+kbmh4SFsmznmcyMg6RKV1VvoJr7cacpRCH/TM8=\n=UnSV\n-----END PGP SIGNATURE-----\n", "payload": "tree ab1e96340ba6717daec0bd0d3051230463c2916f\nparent 89fef5307e81d5d23bb65677000f35332190661a\nparent a872ebf81f20815501299ae562c39bb9c872ba47\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1611448979 +0000\ncommitter GitHub <noreply@github.com> 1611448979 +0000\n\nMerge #7413\n\n7413: Handle unions in symbol search r=Veykril a=Veykril\n\nbors r+\n\nCo-authored-by: Lukas Wirth <lukastw97@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a7a1bb444d59732e3973b7b2d5b27413c5a1ca81", "html_url": "https://github.com/rust-lang/rust/commit/a7a1bb444d59732e3973b7b2d5b27413c5a1ca81", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a7a1bb444d59732e3973b7b2d5b27413c5a1ca81/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "89fef5307e81d5d23bb65677000f35332190661a", "url": "https://api.github.com/repos/rust-lang/rust/commits/89fef5307e81d5d23bb65677000f35332190661a", "html_url": "https://github.com/rust-lang/rust/commit/89fef5307e81d5d23bb65677000f35332190661a"}, {"sha": "a872ebf81f20815501299ae562c39bb9c872ba47", "url": "https://api.github.com/repos/rust-lang/rust/commits/a872ebf81f20815501299ae562c39bb9c872ba47", "html_url": "https://github.com/rust-lang/rust/commit/a872ebf81f20815501299ae562c39bb9c872ba47"}], "stats": {"total": 18, "additions": 11, "deletions": 7}, "files": [{"sha": "e11b881ca7888a84c24744bc6fa4b1c1f3d7147e", "filename": "crates/completion/src/render.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/a7a1bb444d59732e3973b7b2d5b27413c5a1ca81/crates%2Fcompletion%2Fsrc%2Frender.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a7a1bb444d59732e3973b7b2d5b27413c5a1ca81/crates%2Fcompletion%2Fsrc%2Frender.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fcompletion%2Fsrc%2Frender.rs?ref=a7a1bb444d59732e3973b7b2d5b27413c5a1ca81", "patch": "@@ -201,8 +201,7 @@ impl<'a> Render<'a> {\n             ScopeDef::ModuleDef(Module(..)) => CompletionItemKind::SymbolKind(SymbolKind::Module),\n             ScopeDef::ModuleDef(Adt(adt)) => CompletionItemKind::SymbolKind(match adt {\n                 hir::Adt::Struct(_) => SymbolKind::Struct,\n-                // FIXME: add CompletionItemKind::Union\n-                hir::Adt::Union(_) => SymbolKind::Struct,\n+                hir::Adt::Union(_) => SymbolKind::Union,\n                 hir::Adt::Enum(_) => SymbolKind::Enum,\n             }),\n             ScopeDef::ModuleDef(Const(..)) => CompletionItemKind::SymbolKind(SymbolKind::Const),"}, {"sha": "f178dd744befa238a3113746505ab60c143cac02", "filename": "crates/ide/src/display/navigation_target.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/a7a1bb444d59732e3973b7b2d5b27413c5a1ca81/crates%2Fide%2Fsrc%2Fdisplay%2Fnavigation_target.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a7a1bb444d59732e3973b7b2d5b27413c5a1ca81/crates%2Fide%2Fsrc%2Fdisplay%2Fnavigation_target.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fdisplay%2Fnavigation_target.rs?ref=a7a1bb444d59732e3973b7b2d5b27413c5a1ca81", "patch": "@@ -173,6 +173,7 @@ impl ToNav for FileSymbol {\n                 FileSymbolKind::Const => SymbolKind::Const,\n                 FileSymbolKind::Static => SymbolKind::Static,\n                 FileSymbolKind::Macro => SymbolKind::Macro,\n+                FileSymbolKind::Union => SymbolKind::Union,\n             }),\n             full_range: self.range,\n             focus_range: self.name_range,"}, {"sha": "9ed9568ce8561c4a96605a85c3628e118f9fb611", "filename": "crates/ide_db/src/symbol_index.rs", "status": "modified", "additions": 9, "deletions": 5, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/a7a1bb444d59732e3973b7b2d5b27413c5a1ca81/crates%2Fide_db%2Fsrc%2Fsymbol_index.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a7a1bb444d59732e3973b7b2d5b27413c5a1ca81/crates%2Fide_db%2Fsrc%2Fsymbol_index.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_db%2Fsrc%2Fsymbol_index.rs?ref=a7a1bb444d59732e3973b7b2d5b27413c5a1ca81", "patch": "@@ -356,15 +356,16 @@ pub struct FileSymbol {\n \n #[derive(PartialEq, Eq, Hash, Clone, Copy, Debug)]\n pub enum FileSymbolKind {\n+    Const,\n+    Enum,\n     Function,\n+    Macro,\n+    Module,\n+    Static,\n     Struct,\n-    Enum,\n     Trait,\n-    Module,\n     TypeAlias,\n-    Const,\n-    Static,\n-    Macro,\n+    Union,\n }\n \n impl FileSymbolKind {\n@@ -375,6 +376,7 @@ impl FileSymbolKind {\n                 | FileSymbolKind::Enum\n                 | FileSymbolKind::Trait\n                 | FileSymbolKind::TypeAlias\n+                | FileSymbolKind::Union\n         )\n     }\n }\n@@ -425,6 +427,7 @@ fn to_symbol(node: &SyntaxNode) -> Option<(SmolStr, SyntaxNodePtr, TextRange)> {\n             ast::Const(it) => decl(it),\n             ast::Static(it) => decl(it),\n             ast::MacroRules(it) => decl(it),\n+            ast::Union(it) => decl(it),\n             _ => None,\n         }\n     }\n@@ -443,6 +446,7 @@ fn to_file_symbol(node: &SyntaxNode, file_id: FileId) -> Option<FileSymbol> {\n             CONST => FileSymbolKind::Const,\n             STATIC => FileSymbolKind::Static,\n             MACRO_RULES => FileSymbolKind::Macro,\n+            UNION => FileSymbolKind::Union,\n             kind => unreachable!(\"{:?}\", kind),\n         },\n         range: node.text_range(),"}]}