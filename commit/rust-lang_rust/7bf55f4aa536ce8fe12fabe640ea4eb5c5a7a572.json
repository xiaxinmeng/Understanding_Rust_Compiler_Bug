{"sha": "7bf55f4aa536ce8fe12fabe640ea4eb5c5a7a572", "node_id": "MDY6Q29tbWl0NzI0NzEyOjdiZjU1ZjRhYTUzNmNlOGZlMTJmYWJlNjQwZWE0ZWI1YzVhN2E1NzI=", "commit": {"author": {"name": "Lzu Tao", "email": "taolzu@gmail.com", "date": "2019-12-15T06:07:46Z"}, "committer": {"name": "Lzu Tao", "email": "taolzu@gmail.com", "date": "2019-12-15T13:55:10Z"}, "message": "use Self alias in place of macros", "tree": {"sha": "2d087fa31d1da662ad683fd28894ac6217bbe144", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2d087fa31d1da662ad683fd28894ac6217bbe144"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7bf55f4aa536ce8fe12fabe640ea4eb5c5a7a572", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7bf55f4aa536ce8fe12fabe640ea4eb5c5a7a572", "html_url": "https://github.com/rust-lang/rust/commit/7bf55f4aa536ce8fe12fabe640ea4eb5c5a7a572", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7bf55f4aa536ce8fe12fabe640ea4eb5c5a7a572/comments", "author": {"login": "tesuji", "id": 15225902, "node_id": "MDQ6VXNlcjE1MjI1OTAy", "avatar_url": "https://avatars.githubusercontent.com/u/15225902?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tesuji", "html_url": "https://github.com/tesuji", "followers_url": "https://api.github.com/users/tesuji/followers", "following_url": "https://api.github.com/users/tesuji/following{/other_user}", "gists_url": "https://api.github.com/users/tesuji/gists{/gist_id}", "starred_url": "https://api.github.com/users/tesuji/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tesuji/subscriptions", "organizations_url": "https://api.github.com/users/tesuji/orgs", "repos_url": "https://api.github.com/users/tesuji/repos", "events_url": "https://api.github.com/users/tesuji/events{/privacy}", "received_events_url": "https://api.github.com/users/tesuji/received_events", "type": "User", "site_admin": false}, "committer": {"login": "tesuji", "id": 15225902, "node_id": "MDQ6VXNlcjE1MjI1OTAy", "avatar_url": "https://avatars.githubusercontent.com/u/15225902?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tesuji", "html_url": "https://github.com/tesuji", "followers_url": "https://api.github.com/users/tesuji/followers", "following_url": "https://api.github.com/users/tesuji/following{/other_user}", "gists_url": "https://api.github.com/users/tesuji/gists{/gist_id}", "starred_url": "https://api.github.com/users/tesuji/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tesuji/subscriptions", "organizations_url": "https://api.github.com/users/tesuji/orgs", "repos_url": "https://api.github.com/users/tesuji/repos", "events_url": "https://api.github.com/users/tesuji/events{/privacy}", "received_events_url": "https://api.github.com/users/tesuji/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a605441e049f0b6d5f7715b94b8ac4662fd7fcf6", "url": "https://api.github.com/repos/rust-lang/rust/commits/a605441e049f0b6d5f7715b94b8ac4662fd7fcf6", "html_url": "https://github.com/rust-lang/rust/commit/a605441e049f0b6d5f7715b94b8ac4662fd7fcf6"}], "stats": {"total": 6, "additions": 3, "deletions": 3}, "files": [{"sha": "d091a8d86ea49ce1bbdbcff41082187a6b694ad1", "filename": "src/libcore/num/mod.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/7bf55f4aa536ce8fe12fabe640ea4eb5c5a7a572/src%2Flibcore%2Fnum%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7bf55f4aa536ce8fe12fabe640ea4eb5c5a7a572/src%2Flibcore%2Fnum%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fnum%2Fmod.rs?ref=7bf55f4aa536ce8fe12fabe640ea4eb5c5a7a572", "patch": "@@ -67,7 +67,7 @@ assert_eq!(size_of::<Option<core::num::\", stringify!($Ty), \">>(), size_of::<\", s\n                 )]\n                 #[inline]\n                 pub const unsafe fn new_unchecked(n: $Int) -> Self {\n-                    $Ty(n)\n+                    Self(n)\n                 }\n \n                 /// Creates a non-zero if the given value is not zero.\n@@ -76,7 +76,7 @@ assert_eq!(size_of::<Option<core::num::\", stringify!($Ty), \">>(), size_of::<\", s\n                 pub fn new(n: $Int) -> Option<Self> {\n                     if n != 0 {\n                         // SAFETY: we just checked that there's no `0`\n-                        Some(unsafe { $Ty(n) })\n+                        Some(unsafe { Self(n) })\n                     } else {\n                         None\n                     }"}, {"sha": "d5b0bc420382f6c442a28820cf969e7d4ae0222c", "filename": "src/libcore/sync/atomic.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7bf55f4aa536ce8fe12fabe640ea4eb5c5a7a572/src%2Flibcore%2Fsync%2Fatomic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7bf55f4aa536ce8fe12fabe640ea4eb5c5a7a572/src%2Flibcore%2Fsync%2Fatomic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fsync%2Fatomic.rs?ref=7bf55f4aa536ce8fe12fabe640ea4eb5c5a7a572", "patch": "@@ -1263,7 +1263,7 @@ let atomic_forty_two = \", stringify!($atomic_type), \"::new(42);\n                 #[$stable]\n                 #[cfg_attr(not(bootstrap), $const_stable)]\n                 pub const fn new(v: $int_type) -> Self {\n-                    $atomic_type {v: UnsafeCell::new(v)}\n+                    Self {v: UnsafeCell::new(v)}\n                 }\n             }\n "}]}