{"sha": "da99f4671150ba90a5441e012d3f1f5b87536f3b", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRhOTlmNDY3MTE1MGJhOTBhNTQ0MWUwMTJkM2YxZjViODc1MzZmM2I=", "commit": {"author": {"name": "Philipp Hansch", "email": "dev@phansch.net", "date": "2019-04-03T19:30:57Z"}, "committer": {"name": "Philipp Hansch", "email": "dev@phansch.net", "date": "2019-04-03T19:37:45Z"}, "message": "rustfix coverage: Skip UI tests with non-json error-format\n\nWhen using the `rustfix-coverage` flag, some tests currently fail\nbecause they define a different error-format than `json`.\n\nThe current implementation crashes when encountering those tests. Since\nwe don't care about non-json test output when collecting the coverage\ndata, we handle those tests by returning an empty `Vec` instead.", "tree": {"sha": "837d96dba458878f85fa96ccb10dee76e8d9d844", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/837d96dba458878f85fa96ccb10dee76e8d9d844"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/da99f4671150ba90a5441e012d3f1f5b87536f3b", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEvUKv4zqIn2RHUgCKtvoGpuDiZlsFAlylC4oACgkQtvoGpuDi\nZluaQhAAhCspZEu8tett4pklhpImJOZCr6f5EBBMRhWyKowEvlM+hmV8zKvMyh4R\nMT9EbSFeMC2lKP+UHY84Zu4MhyScradxxcI398AqiaqTmbDv6DdnvqFhRrf4J3W9\naueR7qCk/7KgD22Rpjxy0fiHtRA041GjRbmRLzpjK1kalKFhIUjz0GeLS5O2K2Wo\n/OQab4b4xH8yRwW+VKG0GHLdCJ12rE/61EcAlRMCj4HPAFnFMKA+veZURlr6uQRm\n07dpyc9gYPfCwYYnrHPdUKA/74rS2FoQYQbRZX/aRKJYiLabnCunzkNDYpbdiU/2\n45odcifpP7Q/vZCSydlO87qR4gaLm5kj4ku9b52lAYdon0KfDd9JLzagh1ac21po\nwavk6I7Duqbl5yYB29HxUxAh2a8TtDErikkIa70zwPustV3Eg2grOeLCBQnn45GX\nDDadGi2Uxg68rA+M9M0rYFhwRbtFKvIhMOIW89GGc9Rv5Fkzj4Vx8nrxltWalbWd\nQieQUwWtHi2BRNGLedSqDM7aK6rrkZbnIW1+DCQbB8bQ7lCPduZsiuUOFixRWkdb\n+GBcKhWIBroIMHJ7uYTdp1Q45Iu86PDJmNsOOGZ8pA6FyhGB/FCGCerGQp27ATLr\nhIRVtYhcWJ9hM0MnoO3mzm5JarelUrYbzc+ohMZf2Ob3mw8NADw=\n=f7/b\n-----END PGP SIGNATURE-----", "payload": "tree 837d96dba458878f85fa96ccb10dee76e8d9d844\nparent f694222887cf31f51e68927716c25736e62f037f\nauthor Philipp Hansch <dev@phansch.net> 1554319857 +0200\ncommitter Philipp Hansch <dev@phansch.net> 1554320265 +0200\n\nrustfix coverage: Skip UI tests with non-json error-format\n\nWhen using the `rustfix-coverage` flag, some tests currently fail\nbecause they define a different error-format than `json`.\n\nThe current implementation crashes when encountering those tests. Since\nwe don't care about non-json test output when collecting the coverage\ndata, we handle those tests by returning an empty `Vec` instead.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/da99f4671150ba90a5441e012d3f1f5b87536f3b", "html_url": "https://github.com/rust-lang/rust/commit/da99f4671150ba90a5441e012d3f1f5b87536f3b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/da99f4671150ba90a5441e012d3f1f5b87536f3b/comments", "author": {"login": "phansch", "id": 2042399, "node_id": "MDQ6VXNlcjIwNDIzOTk=", "avatar_url": "https://avatars.githubusercontent.com/u/2042399?v=4", "gravatar_id": "", "url": "https://api.github.com/users/phansch", "html_url": "https://github.com/phansch", "followers_url": "https://api.github.com/users/phansch/followers", "following_url": "https://api.github.com/users/phansch/following{/other_user}", "gists_url": "https://api.github.com/users/phansch/gists{/gist_id}", "starred_url": "https://api.github.com/users/phansch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/phansch/subscriptions", "organizations_url": "https://api.github.com/users/phansch/orgs", "repos_url": "https://api.github.com/users/phansch/repos", "events_url": "https://api.github.com/users/phansch/events{/privacy}", "received_events_url": "https://api.github.com/users/phansch/received_events", "type": "User", "site_admin": false}, "committer": {"login": "phansch", "id": 2042399, "node_id": "MDQ6VXNlcjIwNDIzOTk=", "avatar_url": "https://avatars.githubusercontent.com/u/2042399?v=4", "gravatar_id": "", "url": "https://api.github.com/users/phansch", "html_url": "https://github.com/phansch", "followers_url": "https://api.github.com/users/phansch/followers", "following_url": "https://api.github.com/users/phansch/following{/other_user}", "gists_url": "https://api.github.com/users/phansch/gists{/gist_id}", "starred_url": "https://api.github.com/users/phansch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/phansch/subscriptions", "organizations_url": "https://api.github.com/users/phansch/orgs", "repos_url": "https://api.github.com/users/phansch/repos", "events_url": "https://api.github.com/users/phansch/events{/privacy}", "received_events_url": "https://api.github.com/users/phansch/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f694222887cf31f51e68927716c25736e62f037f", "url": "https://api.github.com/repos/rust-lang/rust/commits/f694222887cf31f51e68927716c25736e62f037f", "html_url": "https://github.com/rust-lang/rust/commit/f694222887cf31f51e68927716c25736e62f037f"}], "stats": {"total": 7, "additions": 5, "deletions": 2}, "files": [{"sha": "2021dd513aa6209c3207715f24c19c11c2899397", "filename": "src/tools/compiletest/src/runtest.rs", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/da99f4671150ba90a5441e012d3f1f5b87536f3b/src%2Ftools%2Fcompiletest%2Fsrc%2Fruntest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/da99f4671150ba90a5441e012d3f1f5b87536f3b/src%2Ftools%2Fcompiletest%2Fsrc%2Fruntest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fcompiletest%2Fsrc%2Fruntest.rs?ref=da99f4671150ba90a5441e012d3f1f5b87536f3b", "patch": "@@ -2820,12 +2820,15 @@ impl<'test> TestCx<'test> {\n             // don't test rustfix with nll right now\n         } else if self.config.rustfix_coverage {\n             // Find out which tests have `MachineApplicable` suggestions but are missing\n-            // `run-rustfix` or `run-rustfix-only-machine-applicable` headers\n+            // `run-rustfix` or `run-rustfix-only-machine-applicable` headers.\n+            //\n+            // This will return an empty `Vec` in case the executed test file has a\n+            // `compile-flags: --error-format=xxxx` header with a value other than `json`.\n             let suggestions = get_suggestions_from_json(\n                 &proc_res.stderr,\n                 &HashSet::new(),\n                 Filter::MachineApplicableOnly\n-            ).unwrap();\n+            ).unwrap_or_default();\n             if suggestions.len() > 0\n                 && !self.props.run_rustfix\n                 && !self.props.rustfix_only_machine_applicable {"}]}