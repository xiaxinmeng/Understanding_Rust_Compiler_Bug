{"sha": "ad981d58e1ca16bcf4072577934630deb11c5e14", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFkOTgxZDU4ZTFjYTE2YmNmNDA3MjU3NzkzNDYzMGRlYjExYzVlMTQ=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-08-08T19:37:02Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-08-08T19:37:02Z"}, "message": "Auto merge of #86879 - YohDeadfall:stabilize-vec-shrink-to, r=dtolnay\n\nStabilize Vec<T>::shrink_to\n\nThis PR stabilizes `shrink_to` feature and closes the corresponding issue. The second point was addressed already, and no `panic!` should occur.\n\nCloses #56431.", "tree": {"sha": "b96b0d04083ac7a8d8bcc562d2bdb3ce9e16c5cf", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b96b0d04083ac7a8d8bcc562d2bdb3ce9e16c5cf"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ad981d58e1ca16bcf4072577934630deb11c5e14", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ad981d58e1ca16bcf4072577934630deb11c5e14", "html_url": "https://github.com/rust-lang/rust/commit/ad981d58e1ca16bcf4072577934630deb11c5e14", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ad981d58e1ca16bcf4072577934630deb11c5e14/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "442e627beef1c582b81b241bd862fea185937585", "url": "https://api.github.com/repos/rust-lang/rust/commits/442e627beef1c582b81b241bd862fea185937585", "html_url": "https://github.com/rust-lang/rust/commit/442e627beef1c582b81b241bd862fea185937585"}, {"sha": "8ec5060cdd16c772fa9474540ccda3f95996a653", "url": "https://api.github.com/repos/rust-lang/rust/commits/8ec5060cdd16c772fa9474540ccda3f95996a653", "html_url": "https://github.com/rust-lang/rust/commit/8ec5060cdd16c772fa9474540ccda3f95996a653"}], "stats": {"total": 24, "additions": 8, "deletions": 16}, "files": [{"sha": "fb340734e0b7fbdd78feaa45143c2e1aba34edc2", "filename": "library/alloc/src/collections/binary_heap.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/ad981d58e1ca16bcf4072577934630deb11c5e14/library%2Falloc%2Fsrc%2Fcollections%2Fbinary_heap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ad981d58e1ca16bcf4072577934630deb11c5e14/library%2Falloc%2Fsrc%2Fcollections%2Fbinary_heap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Falloc%2Fsrc%2Fcollections%2Fbinary_heap.rs?ref=ad981d58e1ca16bcf4072577934630deb11c5e14", "patch": "@@ -973,7 +973,6 @@ impl<T> BinaryHeap<T> {\n     /// # Examples\n     ///\n     /// ```\n-    /// #![feature(shrink_to)]\n     /// use std::collections::BinaryHeap;\n     /// let mut heap: BinaryHeap<i32> = BinaryHeap::with_capacity(100);\n     ///\n@@ -982,7 +981,7 @@ impl<T> BinaryHeap<T> {\n     /// assert!(heap.capacity() >= 10);\n     /// ```\n     #[inline]\n-    #[unstable(feature = \"shrink_to\", reason = \"new API\", issue = \"56431\")]\n+    #[stable(feature = \"shrink_to\", since = \"1.56.0\")]\n     pub fn shrink_to(&mut self, min_capacity: usize) {\n         self.data.shrink_to(min_capacity)\n     }"}, {"sha": "9a2205420a14b095781c2d06fff6300b91cbeb98", "filename": "library/alloc/src/collections/vec_deque/mod.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/ad981d58e1ca16bcf4072577934630deb11c5e14/library%2Falloc%2Fsrc%2Fcollections%2Fvec_deque%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ad981d58e1ca16bcf4072577934630deb11c5e14/library%2Falloc%2Fsrc%2Fcollections%2Fvec_deque%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Falloc%2Fsrc%2Fcollections%2Fvec_deque%2Fmod.rs?ref=ad981d58e1ca16bcf4072577934630deb11c5e14", "patch": "@@ -816,7 +816,6 @@ impl<T, A: Allocator> VecDeque<T, A> {\n     /// # Examples\n     ///\n     /// ```\n-    /// #![feature(shrink_to)]\n     /// use std::collections::VecDeque;\n     ///\n     /// let mut buf = VecDeque::with_capacity(15);\n@@ -827,7 +826,7 @@ impl<T, A: Allocator> VecDeque<T, A> {\n     /// buf.shrink_to(0);\n     /// assert!(buf.capacity() >= 4);\n     /// ```\n-    #[unstable(feature = \"shrink_to\", reason = \"new API\", issue = \"56431\")]\n+    #[stable(feature = \"shrink_to\", since = \"1.56.0\")]\n     pub fn shrink_to(&mut self, min_capacity: usize) {\n         let min_capacity = cmp::min(min_capacity, self.capacity());\n         // We don't have to worry about an overflow as neither `self.len()` nor `self.capacity()`"}, {"sha": "9aefd882af4e2523fd15f11de6243b104db84b19", "filename": "library/alloc/src/string.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/ad981d58e1ca16bcf4072577934630deb11c5e14/library%2Falloc%2Fsrc%2Fstring.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ad981d58e1ca16bcf4072577934630deb11c5e14/library%2Falloc%2Fsrc%2Fstring.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Falloc%2Fsrc%2Fstring.rs?ref=ad981d58e1ca16bcf4072577934630deb11c5e14", "patch": "@@ -1100,7 +1100,6 @@ impl String {\n     /// # Examples\n     ///\n     /// ```\n-    /// #![feature(shrink_to)]\n     /// let mut s = String::from(\"foo\");\n     ///\n     /// s.reserve(100);\n@@ -1113,7 +1112,7 @@ impl String {\n     /// ```\n     #[cfg(not(no_global_oom_handling))]\n     #[inline]\n-    #[unstable(feature = \"shrink_to\", reason = \"new API\", issue = \"56431\")]\n+    #[stable(feature = \"shrink_to\", since = \"1.56.0\")]\n     pub fn shrink_to(&mut self, min_capacity: usize) {\n         self.vec.shrink_to(min_capacity)\n     }"}, {"sha": "e14ebd869a30857c35c882b2cbc6e3e9318957eb", "filename": "library/alloc/src/vec/mod.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/ad981d58e1ca16bcf4072577934630deb11c5e14/library%2Falloc%2Fsrc%2Fvec%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ad981d58e1ca16bcf4072577934630deb11c5e14/library%2Falloc%2Fsrc%2Fvec%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Falloc%2Fsrc%2Fvec%2Fmod.rs?ref=ad981d58e1ca16bcf4072577934630deb11c5e14", "patch": "@@ -947,7 +947,6 @@ impl<T, A: Allocator> Vec<T, A> {\n     /// # Examples\n     ///\n     /// ```\n-    /// #![feature(shrink_to)]\n     /// let mut vec = Vec::with_capacity(10);\n     /// vec.extend([1, 2, 3]);\n     /// assert_eq!(vec.capacity(), 10);\n@@ -957,7 +956,7 @@ impl<T, A: Allocator> Vec<T, A> {\n     /// assert!(vec.capacity() >= 3);\n     /// ```\n     #[cfg(not(no_global_oom_handling))]\n-    #[unstable(feature = \"shrink_to\", reason = \"new API\", issue = \"56431\")]\n+    #[stable(feature = \"shrink_to\", since = \"1.56.0\")]\n     pub fn shrink_to(&mut self, min_capacity: usize) {\n         if self.capacity() > min_capacity {\n             self.buf.shrink_to_fit(cmp::max(self.len, min_capacity));"}, {"sha": "7e8da13239c5f3e855c37a1e86c235374603f4c4", "filename": "library/std/src/collections/hash/map.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/ad981d58e1ca16bcf4072577934630deb11c5e14/library%2Fstd%2Fsrc%2Fcollections%2Fhash%2Fmap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ad981d58e1ca16bcf4072577934630deb11c5e14/library%2Fstd%2Fsrc%2Fcollections%2Fhash%2Fmap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fcollections%2Fhash%2Fmap.rs?ref=ad981d58e1ca16bcf4072577934630deb11c5e14", "patch": "@@ -667,7 +667,6 @@ where\n     /// # Examples\n     ///\n     /// ```\n-    /// #![feature(shrink_to)]\n     /// use std::collections::HashMap;\n     ///\n     /// let mut map: HashMap<i32, i32> = HashMap::with_capacity(100);\n@@ -680,7 +679,7 @@ where\n     /// assert!(map.capacity() >= 2);\n     /// ```\n     #[inline]\n-    #[unstable(feature = \"shrink_to\", reason = \"new API\", issue = \"56431\")]\n+    #[stable(feature = \"shrink_to\", since = \"1.56.0\")]\n     pub fn shrink_to(&mut self, min_capacity: usize) {\n         self.base.shrink_to(min_capacity);\n     }"}, {"sha": "3b61acd122e2e9ddfd91f74626b84ae5a17438d7", "filename": "library/std/src/collections/hash/set.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/ad981d58e1ca16bcf4072577934630deb11c5e14/library%2Fstd%2Fsrc%2Fcollections%2Fhash%2Fset.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ad981d58e1ca16bcf4072577934630deb11c5e14/library%2Fstd%2Fsrc%2Fcollections%2Fhash%2Fset.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fcollections%2Fhash%2Fset.rs?ref=ad981d58e1ca16bcf4072577934630deb11c5e14", "patch": "@@ -464,7 +464,6 @@ where\n     /// # Examples\n     ///\n     /// ```\n-    /// #![feature(shrink_to)]\n     /// use std::collections::HashSet;\n     ///\n     /// let mut set = HashSet::with_capacity(100);\n@@ -477,7 +476,7 @@ where\n     /// assert!(set.capacity() >= 2);\n     /// ```\n     #[inline]\n-    #[unstable(feature = \"shrink_to\", reason = \"new API\", issue = \"56431\")]\n+    #[stable(feature = \"shrink_to\", since = \"1.56.0\")]\n     pub fn shrink_to(&mut self, min_capacity: usize) {\n         self.base.shrink_to(min_capacity)\n     }"}, {"sha": "8f4cd6c691cf77fff7fe2c05e2442bb2e6883ab6", "filename": "library/std/src/ffi/os_str.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/ad981d58e1ca16bcf4072577934630deb11c5e14/library%2Fstd%2Fsrc%2Fffi%2Fos_str.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ad981d58e1ca16bcf4072577934630deb11c5e14/library%2Fstd%2Fsrc%2Fffi%2Fos_str.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fffi%2Fos_str.rs?ref=ad981d58e1ca16bcf4072577934630deb11c5e14", "patch": "@@ -321,7 +321,6 @@ impl OsString {\n     /// # Examples\n     ///\n     /// ```\n-    /// #![feature(shrink_to)]\n     /// use std::ffi::OsString;\n     ///\n     /// let mut s = OsString::from(\"foo\");\n@@ -335,7 +334,7 @@ impl OsString {\n     /// assert!(s.capacity() >= 3);\n     /// ```\n     #[inline]\n-    #[unstable(feature = \"shrink_to\", reason = \"new API\", issue = \"56431\")]\n+    #[stable(feature = \"shrink_to\", since = \"1.56.0\")]\n     pub fn shrink_to(&mut self, min_capacity: usize) {\n         self.inner.shrink_to(min_capacity)\n     }"}, {"sha": "861a6fc193cc895c2cfeba1dc96b6a3e3d463715", "filename": "library/std/src/lib.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/ad981d58e1ca16bcf4072577934630deb11c5e14/library%2Fstd%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ad981d58e1ca16bcf4072577934630deb11c5e14/library%2Fstd%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Flib.rs?ref=ad981d58e1ca16bcf4072577934630deb11c5e14", "patch": "@@ -308,7 +308,6 @@\n #![feature(ptr_internals)]\n #![feature(rustc_attrs)]\n #![feature(rustc_private)]\n-#![feature(shrink_to)]\n #![feature(slice_concat_ext)]\n #![feature(slice_internals)]\n #![feature(slice_ptr_get)]"}, {"sha": "69419145b1b4f21d80f5ed719d274ae976490e09", "filename": "library/std/src/path.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ad981d58e1ca16bcf4072577934630deb11c5e14/library%2Fstd%2Fsrc%2Fpath.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ad981d58e1ca16bcf4072577934630deb11c5e14/library%2Fstd%2Fsrc%2Fpath.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fpath.rs?ref=ad981d58e1ca16bcf4072577934630deb11c5e14", "patch": "@@ -1398,7 +1398,7 @@ impl PathBuf {\n     /// Invokes [`shrink_to`] on the underlying instance of [`OsString`].\n     ///\n     /// [`shrink_to`]: OsString::shrink_to\n-    #[unstable(feature = \"shrink_to\", issue = \"56431\")]\n+    #[stable(feature = \"shrink_to\", since = \"1.56.0\")]\n     #[inline]\n     pub fn shrink_to(&mut self, min_capacity: usize) {\n         self.inner.shrink_to(min_capacity)"}]}