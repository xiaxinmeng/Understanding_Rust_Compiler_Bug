{"sha": "ebe61cefc4fa30f0a719892d544abcaee25da44c", "node_id": "C_kwDOAAsO6NoAKGViZTYxY2VmYzRmYTMwZjBhNzE5ODkyZDU0NGFiY2FlZTI1ZGE0NGM", "commit": {"author": {"name": "whtahy", "email": "whtahy@users.noreply.github.com", "date": "2023-04-22T17:57:34Z"}, "committer": {"name": "whtahy", "email": "whtahy@users.noreply.github.com", "date": "2023-04-22T17:57:34Z"}, "message": "add known-bug test for unsound issue 104005", "tree": {"sha": "88bc72cd91a9d971e4b9f35147e37e506908c50a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/88bc72cd91a9d971e4b9f35147e37e506908c50a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ebe61cefc4fa30f0a719892d544abcaee25da44c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ebe61cefc4fa30f0a719892d544abcaee25da44c", "html_url": "https://github.com/rust-lang/rust/commit/ebe61cefc4fa30f0a719892d544abcaee25da44c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ebe61cefc4fa30f0a719892d544abcaee25da44c/comments", "author": {"login": "whtahy", "id": 19783477, "node_id": "MDQ6VXNlcjE5NzgzNDc3", "avatar_url": "https://avatars.githubusercontent.com/u/19783477?v=4", "gravatar_id": "", "url": "https://api.github.com/users/whtahy", "html_url": "https://github.com/whtahy", "followers_url": "https://api.github.com/users/whtahy/followers", "following_url": "https://api.github.com/users/whtahy/following{/other_user}", "gists_url": "https://api.github.com/users/whtahy/gists{/gist_id}", "starred_url": "https://api.github.com/users/whtahy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/whtahy/subscriptions", "organizations_url": "https://api.github.com/users/whtahy/orgs", "repos_url": "https://api.github.com/users/whtahy/repos", "events_url": "https://api.github.com/users/whtahy/events{/privacy}", "received_events_url": "https://api.github.com/users/whtahy/received_events", "type": "User", "site_admin": false}, "committer": {"login": "whtahy", "id": 19783477, "node_id": "MDQ6VXNlcjE5NzgzNDc3", "avatar_url": "https://avatars.githubusercontent.com/u/19783477?v=4", "gravatar_id": "", "url": "https://api.github.com/users/whtahy", "html_url": "https://github.com/whtahy", "followers_url": "https://api.github.com/users/whtahy/followers", "following_url": "https://api.github.com/users/whtahy/following{/other_user}", "gists_url": "https://api.github.com/users/whtahy/gists{/gist_id}", "starred_url": "https://api.github.com/users/whtahy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/whtahy/subscriptions", "organizations_url": "https://api.github.com/users/whtahy/orgs", "repos_url": "https://api.github.com/users/whtahy/repos", "events_url": "https://api.github.com/users/whtahy/events{/privacy}", "received_events_url": "https://api.github.com/users/whtahy/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6f6550f156eb6ea18e90db1712b30460613ad4a8", "url": "https://api.github.com/repos/rust-lang/rust/commits/6f6550f156eb6ea18e90db1712b30460613ad4a8", "html_url": "https://github.com/rust-lang/rust/commit/6f6550f156eb6ea18e90db1712b30460613ad4a8"}], "stats": {"total": 37, "additions": 37, "deletions": 0}, "files": [{"sha": "c5ff92c88754af80283fe37ac9d04d30fb1e6669", "filename": "tests/ui/wf/wf-in-fn-type-implicit.rs", "status": "added", "additions": 37, "deletions": 0, "changes": 37, "blob_url": "https://github.com/rust-lang/rust/blob/ebe61cefc4fa30f0a719892d544abcaee25da44c/tests%2Fui%2Fwf%2Fwf-in-fn-type-implicit.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ebe61cefc4fa30f0a719892d544abcaee25da44c/tests%2Fui%2Fwf%2Fwf-in-fn-type-implicit.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fwf%2Fwf-in-fn-type-implicit.rs?ref=ebe61cefc4fa30f0a719892d544abcaee25da44c", "patch": "@@ -0,0 +1,37 @@\n+// check-pass\n+// known-bug: #104005\n+\n+// Should fail. Function type parameters with implicit type annotations are not\n+// checked for well-formedness, which allows incorrect borrowing.\n+\n+// In contrast, user annotations are always checked for well-formedness, and the\n+// commented code below is correctly rejected by the borrow checker.\n+\n+use std::fmt::Display;\n+\n+trait Displayable {\n+    fn display(self) -> Box<dyn Display>;\n+}\n+\n+impl<T: Display> Displayable for (T, Option<&'static T>) {\n+    fn display(self) -> Box<dyn Display> {\n+        Box::new(self.0)\n+    }\n+}\n+\n+fn extend_lt<T, U>(val: T) -> Box<dyn Display>\n+where\n+    (T, Option<U>): Displayable,\n+{\n+    Displayable::display((val, None))\n+}\n+\n+fn main() {\n+    // *incorrectly* compiles\n+    let val = extend_lt(&String::from(\"blah blah blah\"));\n+    println!(\"{}\", val);\n+\n+    // *correctly* fails to compile\n+    // let val = extend_lt::<_, &_>(&String::from(\"blah blah blah\"));\n+    // println!(\"{}\", val);\n+}"}]}