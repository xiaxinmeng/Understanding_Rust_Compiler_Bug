{"sha": "ad9a4442418deb24cbb107d0a56026d005bfa859", "node_id": "C_kwDOAAsO6NoAKGFkOWE0NDQyNDE4ZGViMjRjYmIxMDdkMGE1NjAyNmQwMDViZmE4NTk", "commit": {"author": {"name": "Pietro Albini", "email": "pietro.albini@ferrous-systems.com", "date": "2023-03-02T15:20:18Z"}, "committer": {"name": "Pietro Albini", "email": "pietro.albini@ferrous-systems.com", "date": "2023-03-02T15:34:00Z"}, "message": "avoid overlapping stderr", "tree": {"sha": "f744e4204666603feea59b90e65455c10b4abe74", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f744e4204666603feea59b90e65455c10b4abe74"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ad9a4442418deb24cbb107d0a56026d005bfa859", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEMycKYjxLY0eb13b7zXazX3c0dp4FAmQAwegACgkQzXazX3c0\ndp65OA/8DsBQQLslH3EYOkOpln34gchbkQyHkrPo+0x2ukpWctLG0lb8Xz9FGE7Q\nt26181Gp7NBQvQ6pWpnZca9nbBpoqsy3wJVEgrt15TscVSv+BDk7PjZz00GCdPbY\ngl58n0i8tFWhFW3DNYAZPBVUYdSlYt3nfRJij4ge9wgb8y2iBtG7jio4hNFSoyR2\nZbZLQ4XG5NIFAgwvxtzkx2+F0la4uV+Qj/IIXE2slivfoFLdD3MyWNLMgJFi71RP\nBwegzV8t6qzDwcUs3L/dB7o+a+MR9Amt02SYtHWJsTpWiGioNZDFVeOcjofda9FV\nWSyzRJ26hfkVarg7cSGycmZ/Wegu30G7VMIXiJnHgdx4r3RyhbpySm2W7xuZbhct\nxpWqemTH069TYn9AH5hVPtFG9LxEH/KdED2CJLuiut4wvj2VTuuJvYu5+A/Rj+Ts\nThtIwnK0u4hlS3l5y+7kk8mh4YG03rjmvcrEUv77ht5RnNXVwar7inCC4Mr6R5w5\nKPX5AnmH3HZENpc+BxMnfWtVtllwEI0C6tKVT14vRDhYdBZOW6zPJnZlDDoJtt9R\nulcJYE24CTrmUGn9WRz1qFmI36nsCjUd8jWW7OCPnGG8Cz+TexSNbPyzQPikEw9r\nIpA6Sdh/4UUSQqWmBJZw9RE2za7uADUSMgKcDpCRIDE6N3FNKuo=\n=m3Ms\n-----END PGP SIGNATURE-----", "payload": "tree f744e4204666603feea59b90e65455c10b4abe74\nparent 50b35836956bd39e4bb3144b9139317bc84caf4e\nauthor Pietro Albini <pietro.albini@ferrous-systems.com> 1677770418 +0100\ncommitter Pietro Albini <pietro.albini@ferrous-systems.com> 1677771240 +0100\n\navoid overlapping stderr\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ad9a4442418deb24cbb107d0a56026d005bfa859", "html_url": "https://github.com/rust-lang/rust/commit/ad9a4442418deb24cbb107d0a56026d005bfa859", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ad9a4442418deb24cbb107d0a56026d005bfa859/comments", "author": {"login": "pietroalbini", "id": 2299951, "node_id": "MDQ6VXNlcjIyOTk5NTE=", "avatar_url": "https://avatars.githubusercontent.com/u/2299951?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pietroalbini", "html_url": "https://github.com/pietroalbini", "followers_url": "https://api.github.com/users/pietroalbini/followers", "following_url": "https://api.github.com/users/pietroalbini/following{/other_user}", "gists_url": "https://api.github.com/users/pietroalbini/gists{/gist_id}", "starred_url": "https://api.github.com/users/pietroalbini/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pietroalbini/subscriptions", "organizations_url": "https://api.github.com/users/pietroalbini/orgs", "repos_url": "https://api.github.com/users/pietroalbini/repos", "events_url": "https://api.github.com/users/pietroalbini/events{/privacy}", "received_events_url": "https://api.github.com/users/pietroalbini/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pietroalbini", "id": 2299951, "node_id": "MDQ6VXNlcjIyOTk5NTE=", "avatar_url": "https://avatars.githubusercontent.com/u/2299951?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pietroalbini", "html_url": "https://github.com/pietroalbini", "followers_url": "https://api.github.com/users/pietroalbini/followers", "following_url": "https://api.github.com/users/pietroalbini/following{/other_user}", "gists_url": "https://api.github.com/users/pietroalbini/gists{/gist_id}", "starred_url": "https://api.github.com/users/pietroalbini/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pietroalbini/subscriptions", "organizations_url": "https://api.github.com/users/pietroalbini/orgs", "repos_url": "https://api.github.com/users/pietroalbini/repos", "events_url": "https://api.github.com/users/pietroalbini/events{/privacy}", "received_events_url": "https://api.github.com/users/pietroalbini/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "50b35836956bd39e4bb3144b9139317bc84caf4e", "url": "https://api.github.com/repos/rust-lang/rust/commits/50b35836956bd39e4bb3144b9139317bc84caf4e", "html_url": "https://github.com/rust-lang/rust/commit/50b35836956bd39e4bb3144b9139317bc84caf4e"}], "stats": {"total": 16, "additions": 11, "deletions": 5}, "files": [{"sha": "bdcd39e6b83eb405299d98a628cecd8207b9468e", "filename": "src/bootstrap/render_tests.rs", "status": "modified", "additions": 11, "deletions": 5, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/ad9a4442418deb24cbb107d0a56026d005bfa859/src%2Fbootstrap%2Frender_tests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ad9a4442418deb24cbb107d0a56026d005bfa859/src%2Fbootstrap%2Frender_tests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Frender_tests.rs?ref=ad9a4442418deb24cbb107d0a56026d005bfa859", "patch": "@@ -7,7 +7,7 @@\n //! to reimplement all the rendering logic in this module because of that.\n \n use crate::builder::Builder;\n-use std::io::{BufRead, BufReader, Write};\n+use std::io::{BufRead, BufReader, Cursor, Write};\n use std::process::{ChildStdout, Command, Stdio};\n use std::time::Duration;\n use yansi_term::Color;\n@@ -43,6 +43,7 @@ pub(crate) fn try_run_tests(builder: &Builder<'_>, cmd: &mut Command) -> bool {\n \n fn run_tests(builder: &Builder<'_>, cmd: &mut Command) -> bool {\n     cmd.stdout(Stdio::piped());\n+    cmd.stderr(Stdio::piped());\n \n     builder.verbose(&format!(\"running: {cmd:?}\"));\n \n@@ -52,15 +53,20 @@ fn run_tests(builder: &Builder<'_>, cmd: &mut Command) -> bool {\n     // run this on another thread since the builder is not Sync.\n     Renderer::new(process.stdout.take().unwrap(), builder).render_all();\n \n-    let result = process.wait().unwrap();\n-    if !result.success() && builder.is_verbose() {\n+    let result = process.wait_with_output().unwrap();\n+    if !result.status.success() && builder.is_verbose() {\n         println!(\n             \"\\n\\ncommand did not execute successfully: {cmd:?}\\n\\\n-             expected success, got: {result}\"\n+             expected success, got: {}\",\n+            result.status\n         );\n     }\n \n-    result.success()\n+    // Show the stderr emitted by the test runner at the end. As of 2023-03-02 this is only the\n+    // message at the end of a failed compiletest run.\n+    std::io::copy(&mut Cursor::new(&result.stderr), &mut std::io::stderr().lock()).unwrap();\n+\n+    result.status.success()\n }\n \n struct Renderer<'a> {"}]}