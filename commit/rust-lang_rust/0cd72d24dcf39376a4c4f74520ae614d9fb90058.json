{"sha": "0cd72d24dcf39376a4c4f74520ae614d9fb90058", "node_id": "MDY6Q29tbWl0NzI0NzEyOjBjZDcyZDI0ZGNmMzkzNzZhNGM0Zjc0NTIwYWU2MTRkOWZiOTAwNTg=", "commit": {"author": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2012-03-14T23:13:05Z"}, "committer": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2012-03-14T23:13:05Z"}, "message": "rustc: Autoderef through region pointers", "tree": {"sha": "15ecb478e934cabed957fde27ea6482e1c133fef", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/15ecb478e934cabed957fde27ea6482e1c133fef"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0cd72d24dcf39376a4c4f74520ae614d9fb90058", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0cd72d24dcf39376a4c4f74520ae614d9fb90058", "html_url": "https://github.com/rust-lang/rust/commit/0cd72d24dcf39376a4c4f74520ae614d9fb90058", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0cd72d24dcf39376a4c4f74520ae614d9fb90058/comments", "author": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "45d0b5f0b9bbcf97bc985fd26d64564273b7547a", "url": "https://api.github.com/repos/rust-lang/rust/commits/45d0b5f0b9bbcf97bc985fd26d64564273b7547a", "html_url": "https://github.com/rust-lang/rust/commit/45d0b5f0b9bbcf97bc985fd26d64564273b7547a"}], "stats": {"total": 8, "additions": 6, "deletions": 2}, "files": [{"sha": "016ef5584fa3d7e6c3bd57858e8c48619d919156", "filename": "src/rustc/middle/trans/base.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/0cd72d24dcf39376a4c4f74520ae614d9fb90058/src%2Frustc%2Fmiddle%2Ftrans%2Fbase.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0cd72d24dcf39376a4c4f74520ae614d9fb90058/src%2Frustc%2Fmiddle%2Ftrans%2Fbase.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustc%2Fmiddle%2Ftrans%2Fbase.rs?ref=0cd72d24dcf39376a4c4f74520ae614d9fb90058", "patch": "@@ -1849,6 +1849,10 @@ fn autoderef(cx: block, v: ValueRef, t: ty::t) -> result_t {\n             t1 = derefed.t;\n             v1 = derefed.v;\n           }\n+          ty::ty_rptr(_, mt) {\n+            t1 = mt.ty;\n+            v1 = v;\n+          }\n           ty::ty_res(did, inner, tps) {\n             t1 = ty::substitute_type_params(ccx.tcx, tps, inner);\n             v1 = GEPi(cx, v1, [0, 1]);"}, {"sha": "51abd59b5f60d94ff3b1a0c57a627637021df5f4", "filename": "src/rustc/middle/ty.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0cd72d24dcf39376a4c4f74520ae614d9fb90058/src%2Frustc%2Fmiddle%2Fty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0cd72d24dcf39376a4c4f74520ae614d9fb90058/src%2Frustc%2Fmiddle%2Fty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustc%2Fmiddle%2Fty.rs?ref=0cd72d24dcf39376a4c4f74520ae614d9fb90058", "patch": "@@ -1119,7 +1119,7 @@ fn type_autoderef(cx: ctxt, t: t) -> t {\n     let t1 = t;\n     loop {\n         alt get(t1).struct {\n-          ty_box(mt) | ty_uniq(mt) { t1 = mt.ty; }\n+          ty_box(mt) | ty_uniq(mt) | ty::ty_rptr(_, mt) { t1 = mt.ty; }\n           ty_res(_, inner, tps) {\n             t1 = substitute_type_params(cx, tps, inner);\n           }"}, {"sha": "70fa2c51f88a31ee275d3eb6e52603707f075631", "filename": "src/rustc/middle/typeck.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0cd72d24dcf39376a4c4f74520ae614d9fb90058/src%2Frustc%2Fmiddle%2Ftypeck.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0cd72d24dcf39376a4c4f74520ae614d9fb90058/src%2Frustc%2Fmiddle%2Ftypeck.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustc%2Fmiddle%2Ftypeck.rs?ref=0cd72d24dcf39376a4c4f74520ae614d9fb90058", "patch": "@@ -1058,7 +1058,7 @@ fn do_autoderef(fcx: @fn_ctxt, sp: span, t: ty::t) -> ty::t {\n     let t1 = t;\n     loop {\n         alt structure_of(fcx, sp, t1) {\n-          ty::ty_box(inner) | ty::ty_uniq(inner) {\n+          ty::ty_box(inner) | ty::ty_uniq(inner) | ty::ty_rptr(_, inner) {\n             alt ty::get(t1).struct {\n               ty::ty_var(v1) {\n                 ty::occurs_check(fcx.ccx.tcx, sp, v1,"}]}