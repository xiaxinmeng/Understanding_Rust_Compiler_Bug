{"sha": "625ca7afe4fb50758215d623d45de84a5f4290ae", "node_id": "MDY6Q29tbWl0NzI0NzEyOjYyNWNhN2FmZTRmYjUwNzU4MjE1ZDYyM2Q0NWRlODRhNWY0MjkwYWU=", "commit": {"author": {"name": "blake2-ppc", "email": "blake2-ppc", "date": "2013-07-20T17:19:13Z"}, "committer": {"name": "blake2-ppc", "email": "blake2-ppc", "date": "2013-07-20T17:19:13Z"}, "message": "option: Add .chain_mut_ref()\n\n.chain_mut_ref() is the mutable alternative to .chain_ref().\n\nA use case example for this method is extraction of an optional value\nfrom an Option<Container> value.", "tree": {"sha": "53f974724daf494d699b658a7963e88a53f5c435", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/53f974724daf494d699b658a7963e88a53f5c435"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/625ca7afe4fb50758215d623d45de84a5f4290ae", "comment_count": 5, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/625ca7afe4fb50758215d623d45de84a5f4290ae", "html_url": "https://github.com/rust-lang/rust/commit/625ca7afe4fb50758215d623d45de84a5f4290ae", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/625ca7afe4fb50758215d623d45de84a5f4290ae/comments", "author": null, "committer": null, "parents": [{"sha": "5991c607501595b32998a3367171ca42f5d8ef0b", "url": "https://api.github.com/repos/rust-lang/rust/commits/5991c607501595b32998a3367171ca42f5d8ef0b", "html_url": "https://github.com/rust-lang/rust/commit/5991c607501595b32998a3367171ca42f5d8ef0b"}], "stats": {"total": 11, "additions": 11, "deletions": 0}, "files": [{"sha": "f116c1127ca97e82ed1a644f9afd62601be25eb9", "filename": "src/libstd/option.rs", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/625ca7afe4fb50758215d623d45de84a5f4290ae/src%2Flibstd%2Foption.rs", "raw_url": "https://github.com/rust-lang/rust/raw/625ca7afe4fb50758215d623d45de84a5f4290ae/src%2Flibstd%2Foption.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Foption.rs?ref=625ca7afe4fb50758215d623d45de84a5f4290ae", "patch": "@@ -159,6 +159,17 @@ impl<T> Option<T> {\n         }\n     }\n \n+    /// Update an optional value by optionally running its content by mut reference\n+    /// through a function that returns an option.\n+    #[inline]\n+    pub fn chain_mut_ref<'a, U>(&'a mut self, f: &fn(x: &'a mut T) -> Option<U>)\n+                                -> Option<U> {\n+        match *self {\n+            Some(ref mut x) => f(x),\n+            None => None\n+        }\n+    }\n+\n     /// Filters an optional value using given function.\n     #[inline(always)]\n     pub fn filtered(self, f: &fn(t: &T) -> bool) -> Option<T> {"}]}