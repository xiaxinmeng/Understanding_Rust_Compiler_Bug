{"sha": "d0b24e5ee292cc785401c880f21b690f5f3fa1d6", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQwYjI0ZTVlZTI5MmNjNzg1NDAxYzg4MGYyMWI2OTBmNWYzZmExZDY=", "commit": {"author": {"name": "Oliver Scherer", "email": "github35764891676564198441@oli-obk.de", "date": "2020-01-07T14:59:14Z"}, "committer": {"name": "Oliver Scherer", "email": "github35764891676564198441@oli-obk.de", "date": "2020-01-07T14:59:14Z"}, "message": "Actually use the poison value", "tree": {"sha": "55ef070bcac28d0571e81d06535ffad6032c7656", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/55ef070bcac28d0571e81d06535ffad6032c7656"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d0b24e5ee292cc785401c880f21b690f5f3fa1d6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d0b24e5ee292cc785401c880f21b690f5f3fa1d6", "html_url": "https://github.com/rust-lang/rust/commit/d0b24e5ee292cc785401c880f21b690f5f3fa1d6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d0b24e5ee292cc785401c880f21b690f5f3fa1d6/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "29c372bf8b612dd9e23eb2503a1f1167e2f2f47c", "url": "https://api.github.com/repos/rust-lang/rust/commits/29c372bf8b612dd9e23eb2503a1f1167e2f2f47c", "html_url": "https://github.com/rust-lang/rust/commit/29c372bf8b612dd9e23eb2503a1f1167e2f2f47c"}], "stats": {"total": 10, "additions": 3, "deletions": 7}, "files": [{"sha": "6428caa8fb0eda97c027af67e6924f82b9f5dc43", "filename": "src/librustc_mir/interpret/place.rs", "status": "modified", "additions": 3, "deletions": 7, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/d0b24e5ee292cc785401c880f21b690f5f3fa1d6/src%2Flibrustc_mir%2Finterpret%2Fplace.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d0b24e5ee292cc785401c880f21b690f5f3fa1d6/src%2Flibrustc_mir%2Finterpret%2Fplace.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Finterpret%2Fplace.rs?ref=d0b24e5ee292cc785401c880f21b690f5f3fa1d6", "patch": "@@ -180,13 +180,9 @@ impl<'tcx, Tag> MPlaceTy<'tcx, Tag> {\n     /// Produces a MemPlace that works for ZST but nothing else\n     #[inline]\n     pub fn dangling(layout: TyLayout<'tcx>, cx: &impl HasDataLayout) -> Self {\n-        MPlaceTy {\n-            mplace: MemPlace::from_scalar_ptr(\n-                Scalar::from_uint(layout.align.abi.bytes(), cx.pointer_size()),\n-                layout.align.abi,\n-            ),\n-            layout,\n-        }\n+        let align = layout.align.abi;\n+        let ptr = Scalar::from_uint(align.bytes(), cx.pointer_size());\n+        MPlaceTy { mplace: MemPlace { ptr, align, meta: MemPlaceMeta::Poison }, layout }\n     }\n \n     /// Replace ptr tag, maintain vtable tag (if any)"}]}