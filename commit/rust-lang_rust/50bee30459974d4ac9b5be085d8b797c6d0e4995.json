{"sha": "50bee30459974d4ac9b5be085d8b797c6d0e4995", "node_id": "MDY6Q29tbWl0NzI0NzEyOjUwYmVlMzA0NTk5NzRkNGFjOWI1YmUwODVkOGI3OTdjNmQwZTQ5OTU=", "commit": {"author": {"name": "Daniel Micay", "email": "danielmicay@gmail.com", "date": "2014-01-29T15:41:39Z"}, "committer": {"name": "Daniel Micay", "email": "danielmicay@gmail.com", "date": "2014-01-29T15:41:39Z"}, "message": "stop making visit glue for closures and traits", "tree": {"sha": "e41608c4332dc30002f5f1a905be0963b5a19804", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e41608c4332dc30002f5f1a905be0963b5a19804"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/50bee30459974d4ac9b5be085d8b797c6d0e4995", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/50bee30459974d4ac9b5be085d8b797c6d0e4995", "html_url": "https://github.com/rust-lang/rust/commit/50bee30459974d4ac9b5be085d8b797c6d0e4995", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/50bee30459974d4ac9b5be085d8b797c6d0e4995/comments", "author": {"login": "thestinger", "id": 1505226, "node_id": "MDQ6VXNlcjE1MDUyMjY=", "avatar_url": "https://avatars.githubusercontent.com/u/1505226?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thestinger", "html_url": "https://github.com/thestinger", "followers_url": "https://api.github.com/users/thestinger/followers", "following_url": "https://api.github.com/users/thestinger/following{/other_user}", "gists_url": "https://api.github.com/users/thestinger/gists{/gist_id}", "starred_url": "https://api.github.com/users/thestinger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thestinger/subscriptions", "organizations_url": "https://api.github.com/users/thestinger/orgs", "repos_url": "https://api.github.com/users/thestinger/repos", "events_url": "https://api.github.com/users/thestinger/events{/privacy}", "received_events_url": "https://api.github.com/users/thestinger/received_events", "type": "User", "site_admin": false}, "committer": {"login": "thestinger", "id": 1505226, "node_id": "MDQ6VXNlcjE1MDUyMjY=", "avatar_url": "https://avatars.githubusercontent.com/u/1505226?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thestinger", "html_url": "https://github.com/thestinger", "followers_url": "https://api.github.com/users/thestinger/followers", "following_url": "https://api.github.com/users/thestinger/following{/other_user}", "gists_url": "https://api.github.com/users/thestinger/gists{/gist_id}", "starred_url": "https://api.github.com/users/thestinger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thestinger/subscriptions", "organizations_url": "https://api.github.com/users/thestinger/orgs", "repos_url": "https://api.github.com/users/thestinger/repos", "events_url": "https://api.github.com/users/thestinger/events{/privacy}", "received_events_url": "https://api.github.com/users/thestinger/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7b1432f6c0a18f27fc0003bdd8676ba7ec061306", "url": "https://api.github.com/repos/rust-lang/rust/commits/7b1432f6c0a18f27fc0003bdd8676ba7ec061306", "html_url": "https://github.com/rust-lang/rust/commit/7b1432f6c0a18f27fc0003bdd8676ba7ec061306"}], "stats": {"total": 6, "additions": 3, "deletions": 3}, "files": [{"sha": "a12e3eb82853134c0777d48509885e435e046e14", "filename": "src/librustc/middle/trans/base.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/50bee30459974d4ac9b5be085d8b797c6d0e4995/src%2Flibrustc%2Fmiddle%2Ftrans%2Fbase.rs", "raw_url": "https://github.com/rust-lang/rust/raw/50bee30459974d4ac9b5be085d8b797c6d0e4995/src%2Flibrustc%2Fmiddle%2Ftrans%2Fbase.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftrans%2Fbase.rs?ref=50bee30459974d4ac9b5be085d8b797c6d0e4995", "patch": "@@ -376,7 +376,7 @@ pub fn malloc_raw_dyn<'a>(\n \n         // Get the tydesc for the body:\n         let static_ti = get_tydesc(ccx, t);\n-        glue::lazily_emit_all_tydesc_glue(ccx, static_ti);\n+        glue::lazily_emit_tydesc_glue(ccx, abi::tydesc_field_drop_glue, static_ti);\n \n         // Allocate space:\n         let tydesc = PointerCast(bcx, static_ti.tydesc, Type::i8p());"}, {"sha": "45f95907481f0359584b51beb68036335af218da", "filename": "src/librustc/middle/trans/glue.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/50bee30459974d4ac9b5be085d8b797c6d0e4995/src%2Flibrustc%2Fmiddle%2Ftrans%2Fglue.rs", "raw_url": "https://github.com/rust-lang/rust/raw/50bee30459974d4ac9b5be085d8b797c6d0e4995/src%2Flibrustc%2Fmiddle%2Ftrans%2Fglue.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftrans%2Fglue.rs?ref=50bee30459974d4ac9b5be085d8b797c6d0e4995", "patch": "@@ -131,7 +131,7 @@ fn simplified_glue_type(tcx: ty::ctxt, field: uint, t: ty::t) -> ty::t {\n     t\n }\n \n-fn lazily_emit_tydesc_glue(ccx: @CrateContext, field: uint, ti: @tydesc_info) {\n+pub fn lazily_emit_tydesc_glue(ccx: @CrateContext, field: uint, ti: @tydesc_info) {\n     let _icx = push_ctxt(\"lazily_emit_tydesc_glue\");\n \n     let simpl = simplified_glue_type(ccx.tcx, field, ti.ty);"}, {"sha": "4a8ebafc0b49fbb755acb070b51bae7c4fc82b09", "filename": "src/librustc/middle/trans/meth.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/50bee30459974d4ac9b5be085d8b797c6d0e4995/src%2Flibrustc%2Fmiddle%2Ftrans%2Fmeth.rs", "raw_url": "https://github.com/rust-lang/rust/raw/50bee30459974d4ac9b5be085d8b797c6d0e4995/src%2Flibrustc%2Fmiddle%2Ftrans%2Fmeth.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftrans%2Fmeth.rs?ref=50bee30459974d4ac9b5be085d8b797c6d0e4995", "patch": "@@ -481,7 +481,7 @@ pub fn get_vtable(bcx: &Block,\n \n     // Generate a type descriptor for the vtable.\n     let tydesc = get_tydesc(ccx, self_ty);\n-    glue::lazily_emit_all_tydesc_glue(ccx, tydesc);\n+    glue::lazily_emit_tydesc_glue(ccx, abi::tydesc_field_drop_glue, tydesc);\n \n     let vtable = make_vtable(ccx, tydesc, methods);\n "}]}