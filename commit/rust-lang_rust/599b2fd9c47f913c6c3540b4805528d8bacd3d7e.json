{"sha": "599b2fd9c47f913c6c3540b4805528d8bacd3d7e", "node_id": "C_kwDOAAsO6NoAKDU5OWIyZmQ5YzQ3ZjkxM2M2YzM1NDBiNDgwNTUyOGQ4YmFjZDNkN2U", "commit": {"author": {"name": "Martinez", "email": "Heliozoa@users.noreply.github.com", "date": "2021-10-23T16:01:48Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-10-23T16:01:48Z"}, "message": "Add One option to group_imports (#4966)\n\n* Add Together option to group_imports\r\n\r\n* Rename option to One\r\n\r\n* Rename files from Together to One", "tree": {"sha": "df519c5cf228055645101d8d0fd764514838af58", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/df519c5cf228055645101d8d0fd764514838af58"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/599b2fd9c47f913c6c3540b4805528d8bacd3d7e", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJhdDHsCRBK7hj4Ov3rIwAA4ngIAA2rs5u5zXuxmcetoV0DtnA/\nf4SHfK/SoejJHxDTrYuOPCyOepc6S8vM0ahQYTKSOAEYtXZ8PwOaphxPwX2lJUdo\ne/TyseocZ3eOdwVRhpxidPM+la5UhZidbsBFkSS71n/EqaBfXsuOguF324tqVnXj\n3b8ad0TJFLobK37DjCvmQKzq1Ucau5BBr2bFHF5nQI40GBzOwn07QdM5KI9hp370\n29y95G4mp1SIVrUq/+6tLjQtYPgWQlHuoNkap/eRTvi7a4rEvDs0HGW4ajVw6q5u\nOiSYLMQedoOxhAkfxpjkVxyCfhaA4ZT1SH2pbpbgHsmYoQUCVvfR/Khdvj1b0Qk=\n=3NiR\n-----END PGP SIGNATURE-----\n", "payload": "tree df519c5cf228055645101d8d0fd764514838af58\nparent efa8f5521d3813cc897ba29ea0ef98c7aef66bb6\nauthor Martinez <Heliozoa@users.noreply.github.com> 1635004908 +0300\ncommitter GitHub <noreply@github.com> 1635004908 -0500\n\nAdd One option to group_imports (#4966)\n\n* Add Together option to group_imports\r\n\r\n* Rename option to One\r\n\r\n* Rename files from Together to One"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/599b2fd9c47f913c6c3540b4805528d8bacd3d7e", "html_url": "https://github.com/rust-lang/rust/commit/599b2fd9c47f913c6c3540b4805528d8bacd3d7e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/599b2fd9c47f913c6c3540b4805528d8bacd3d7e/comments", "author": {"login": "Heliozoa", "id": 15956940, "node_id": "MDQ6VXNlcjE1OTU2OTQw", "avatar_url": "https://avatars.githubusercontent.com/u/15956940?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Heliozoa", "html_url": "https://github.com/Heliozoa", "followers_url": "https://api.github.com/users/Heliozoa/followers", "following_url": "https://api.github.com/users/Heliozoa/following{/other_user}", "gists_url": "https://api.github.com/users/Heliozoa/gists{/gist_id}", "starred_url": "https://api.github.com/users/Heliozoa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Heliozoa/subscriptions", "organizations_url": "https://api.github.com/users/Heliozoa/orgs", "repos_url": "https://api.github.com/users/Heliozoa/repos", "events_url": "https://api.github.com/users/Heliozoa/events{/privacy}", "received_events_url": "https://api.github.com/users/Heliozoa/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "efa8f5521d3813cc897ba29ea0ef98c7aef66bb6", "url": "https://api.github.com/repos/rust-lang/rust/commits/efa8f5521d3813cc897ba29ea0ef98c7aef66bb6", "html_url": "https://github.com/rust-lang/rust/commit/efa8f5521d3813cc897ba29ea0ef98c7aef66bb6"}], "stats": {"total": 123, "additions": 121, "deletions": 2}, "files": [{"sha": "13826883d2f4bdf537df1df2a687be215adbaf97", "filename": "Configurations.md", "status": "modified", "additions": 18, "deletions": 1, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/599b2fd9c47f913c6c3540b4805528d8bacd3d7e/Configurations.md", "raw_url": "https://github.com/rust-lang/rust/raw/599b2fd9c47f913c6c3540b4805528d8bacd3d7e/Configurations.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Configurations.md?ref=599b2fd9c47f913c6c3540b4805528d8bacd3d7e", "patch": "@@ -2062,7 +2062,7 @@ use sit;\n Controls the strategy for how imports are grouped together.\n \n - **Default value**: `Preserve`\n-- **Possible values**: `Preserve`, `StdExternalCrate`\n+- **Possible values**: `Preserve`, `StdExternalCrate`, `One`\n - **Stable**: No\n \n #### `Preserve` (default):\n@@ -2108,6 +2108,23 @@ use super::update::convert_publish_payload;\n use crate::models::Event;\n ```\n \n+#### `One`:\n+\n+Discard existing import groups, and create a single group for everything\n+\n+```rust\n+use super::schema::{Context, Payload};\n+use super::update::convert_publish_payload;\n+use crate::models::Event;\n+use alloc::alloc::Layout;\n+use broker::database::PooledConnection;\n+use chrono::Utc;\n+use core::f32;\n+use juniper::{FieldError, FieldResult};\n+use std::sync::Arc;\n+use uuid::Uuid;\n+```\n+\n ## `reorder_modules`\n \n Reorder `mod` declarations alphabetically in group."}, {"sha": "a17d48349c05f8a4fae87e00aee001877cfff901", "filename": "src/config/options.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/599b2fd9c47f913c6c3540b4805528d8bacd3d7e/src%2Fconfig%2Foptions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/599b2fd9c47f913c6c3540b4805528d8bacd3d7e/src%2Fconfig%2Foptions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fconfig%2Foptions.rs?ref=599b2fd9c47f913c6c3540b4805528d8bacd3d7e", "patch": "@@ -112,6 +112,8 @@ pub enum GroupImportsTactic {\n     ///  2. other imports\n     ///  3. `self` / `crate` / `super` imports\n     StdExternalCrate,\n+    /// Discard existing groups, and create a single group for everything\n+    One,\n }\n \n #[config_type]"}, {"sha": "0732c8ee70059ca372ff28c0d2445a2394c586e8", "filename": "src/reorder.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/599b2fd9c47f913c6c3540b4805528d8bacd3d7e/src%2Freorder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/599b2fd9c47f913c6c3540b4805528d8bacd3d7e/src%2Freorder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Freorder.rs?ref=599b2fd9c47f913c6c3540b4805528d8bacd3d7e", "patch": "@@ -118,7 +118,9 @@ fn rewrite_reorderable_or_regroupable_items(\n             };\n \n             let mut regrouped_items = match context.config.group_imports() {\n-                GroupImportsTactic::Preserve => vec![normalized_items],\n+                GroupImportsTactic::Preserve | GroupImportsTactic::One => {\n+                    vec![normalized_items]\n+                }\n                 GroupImportsTactic::StdExternalCrate => group_imports(normalized_items),\n             };\n "}, {"sha": "157d3857908a481154260a675327fcb4d0bf2c80", "filename": "tests/source/configs/group_imports/One-merge_imports.rs", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/599b2fd9c47f913c6c3540b4805528d8bacd3d7e/tests%2Fsource%2Fconfigs%2Fgroup_imports%2FOne-merge_imports.rs", "raw_url": "https://github.com/rust-lang/rust/raw/599b2fd9c47f913c6c3540b4805528d8bacd3d7e/tests%2Fsource%2Fconfigs%2Fgroup_imports%2FOne-merge_imports.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fsource%2Fconfigs%2Fgroup_imports%2FOne-merge_imports.rs?ref=599b2fd9c47f913c6c3540b4805528d8bacd3d7e", "patch": "@@ -0,0 +1,17 @@\n+// rustfmt-group_imports: One\n+// rustfmt-imports_granularity: Crate\n+use chrono::Utc;\n+use super::update::convert_publish_payload;\n+\n+use juniper::{FieldError, FieldResult};\n+use uuid::Uuid;\n+use alloc::alloc::Layout;\n+\n+use std::sync::Arc;\n+use alloc::vec::Vec;\n+\n+use broker::database::PooledConnection;\n+\n+use super::schema::{Context, Payload};\n+use core::f32;\n+use crate::models::Event;"}, {"sha": "109bd07e1ee29278e5cec6ba66a6bc0d7198e670", "filename": "tests/source/configs/group_imports/One-nested.rs", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/599b2fd9c47f913c6c3540b4805528d8bacd3d7e/tests%2Fsource%2Fconfigs%2Fgroup_imports%2FOne-nested.rs", "raw_url": "https://github.com/rust-lang/rust/raw/599b2fd9c47f913c6c3540b4805528d8bacd3d7e/tests%2Fsource%2Fconfigs%2Fgroup_imports%2FOne-nested.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fsource%2Fconfigs%2Fgroup_imports%2FOne-nested.rs?ref=599b2fd9c47f913c6c3540b4805528d8bacd3d7e", "patch": "@@ -0,0 +1,7 @@\n+// rustfmt-group_imports: One\n+mod test {\n+    use crate::foo::bar;\n+\n+    use std::path;\n+    use crate::foo::bar2;\n+}"}, {"sha": "f82f62c7f5b2cd0f5f4a0e287643ee6a2e37474e", "filename": "tests/source/configs/group_imports/One-no_reorder.rs", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/599b2fd9c47f913c6c3540b4805528d8bacd3d7e/tests%2Fsource%2Fconfigs%2Fgroup_imports%2FOne-no_reorder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/599b2fd9c47f913c6c3540b4805528d8bacd3d7e/tests%2Fsource%2Fconfigs%2Fgroup_imports%2FOne-no_reorder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fsource%2Fconfigs%2Fgroup_imports%2FOne-no_reorder.rs?ref=599b2fd9c47f913c6c3540b4805528d8bacd3d7e", "patch": "@@ -0,0 +1,16 @@\n+// rustfmt-group_imports: One\n+// rustfmt-reorder_imports: false\n+use chrono::Utc;\n+use super::update::convert_publish_payload;\n+\n+use juniper::{FieldError, FieldResult};\n+use uuid::Uuid;\n+use alloc::alloc::Layout;\n+\n+use std::sync::Arc;\n+\n+use broker::database::PooledConnection;\n+\n+use super::schema::{Context, Payload};\n+use core::f32;\n+use crate::models::Event;"}, {"sha": "5ab7a950805b18791e227ef07b8cf499aace9f47", "filename": "tests/source/configs/group_imports/One.rs", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/599b2fd9c47f913c6c3540b4805528d8bacd3d7e/tests%2Fsource%2Fconfigs%2Fgroup_imports%2FOne.rs", "raw_url": "https://github.com/rust-lang/rust/raw/599b2fd9c47f913c6c3540b4805528d8bacd3d7e/tests%2Fsource%2Fconfigs%2Fgroup_imports%2FOne.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fsource%2Fconfigs%2Fgroup_imports%2FOne.rs?ref=599b2fd9c47f913c6c3540b4805528d8bacd3d7e", "patch": "@@ -0,0 +1,15 @@\n+// rustfmt-group_imports: One\n+use chrono::Utc;\n+use super::update::convert_publish_payload;\n+\n+use juniper::{FieldError, FieldResult};\n+use uuid::Uuid;\n+use alloc::alloc::Layout;\n+\n+use std::sync::Arc;\n+\n+use broker::database::PooledConnection;\n+\n+use super::schema::{Context, Payload};\n+use core::f32;\n+use crate::models::Event;"}, {"sha": "52e0e1c5ac215a9346ec9bed29c5be36db82da33", "filename": "tests/target/configs/group_imports/One-merge_imports.rs", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/599b2fd9c47f913c6c3540b4805528d8bacd3d7e/tests%2Ftarget%2Fconfigs%2Fgroup_imports%2FOne-merge_imports.rs", "raw_url": "https://github.com/rust-lang/rust/raw/599b2fd9c47f913c6c3540b4805528d8bacd3d7e/tests%2Ftarget%2Fconfigs%2Fgroup_imports%2FOne-merge_imports.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fconfigs%2Fgroup_imports%2FOne-merge_imports.rs?ref=599b2fd9c47f913c6c3540b4805528d8bacd3d7e", "patch": "@@ -0,0 +1,14 @@\n+// rustfmt-group_imports: One\n+// rustfmt-imports_granularity: Crate\n+use super::{\n+    schema::{Context, Payload},\n+    update::convert_publish_payload,\n+};\n+use crate::models::Event;\n+use alloc::{alloc::Layout, vec::Vec};\n+use broker::database::PooledConnection;\n+use chrono::Utc;\n+use core::f32;\n+use juniper::{FieldError, FieldResult};\n+use std::sync::Arc;\n+use uuid::Uuid;"}, {"sha": "5b648548260f8b758781c3a89f1a76901b1c78c1", "filename": "tests/target/configs/group_imports/One-nested.rs", "status": "added", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/599b2fd9c47f913c6c3540b4805528d8bacd3d7e/tests%2Ftarget%2Fconfigs%2Fgroup_imports%2FOne-nested.rs", "raw_url": "https://github.com/rust-lang/rust/raw/599b2fd9c47f913c6c3540b4805528d8bacd3d7e/tests%2Ftarget%2Fconfigs%2Fgroup_imports%2FOne-nested.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fconfigs%2Fgroup_imports%2FOne-nested.rs?ref=599b2fd9c47f913c6c3540b4805528d8bacd3d7e", "patch": "@@ -0,0 +1,6 @@\n+// rustfmt-group_imports: One\n+mod test {\n+    use crate::foo::bar;\n+    use crate::foo::bar2;\n+    use std::path;\n+}"}, {"sha": "015e841d01486e46ee6a5868a713e1229f7b03e3", "filename": "tests/target/configs/group_imports/One-no_reorder.rs", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/599b2fd9c47f913c6c3540b4805528d8bacd3d7e/tests%2Ftarget%2Fconfigs%2Fgroup_imports%2FOne-no_reorder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/599b2fd9c47f913c6c3540b4805528d8bacd3d7e/tests%2Ftarget%2Fconfigs%2Fgroup_imports%2FOne-no_reorder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fconfigs%2Fgroup_imports%2FOne-no_reorder.rs?ref=599b2fd9c47f913c6c3540b4805528d8bacd3d7e", "patch": "@@ -0,0 +1,12 @@\n+// rustfmt-group_imports: One\n+// rustfmt-reorder_imports: false\n+use chrono::Utc;\n+use super::update::convert_publish_payload;\n+use juniper::{FieldError, FieldResult};\n+use uuid::Uuid;\n+use alloc::alloc::Layout;\n+use std::sync::Arc;\n+use broker::database::PooledConnection;\n+use super::schema::{Context, Payload};\n+use core::f32;\n+use crate::models::Event;"}, {"sha": "3094c7ae11572e2d4df0a5a3004496d79bfb8093", "filename": "tests/target/configs/group_imports/One.rs", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/599b2fd9c47f913c6c3540b4805528d8bacd3d7e/tests%2Ftarget%2Fconfigs%2Fgroup_imports%2FOne.rs", "raw_url": "https://github.com/rust-lang/rust/raw/599b2fd9c47f913c6c3540b4805528d8bacd3d7e/tests%2Ftarget%2Fconfigs%2Fgroup_imports%2FOne.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fconfigs%2Fgroup_imports%2FOne.rs?ref=599b2fd9c47f913c6c3540b4805528d8bacd3d7e", "patch": "@@ -0,0 +1,11 @@\n+// rustfmt-group_imports: One\n+use super::schema::{Context, Payload};\n+use super::update::convert_publish_payload;\n+use crate::models::Event;\n+use alloc::alloc::Layout;\n+use broker::database::PooledConnection;\n+use chrono::Utc;\n+use core::f32;\n+use juniper::{FieldError, FieldResult};\n+use std::sync::Arc;\n+use uuid::Uuid;"}]}