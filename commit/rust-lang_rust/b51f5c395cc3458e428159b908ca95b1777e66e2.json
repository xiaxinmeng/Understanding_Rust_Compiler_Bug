{"sha": "b51f5c395cc3458e428159b908ca95b1777e66e2", "node_id": "MDY6Q29tbWl0NzI0NzEyOmI1MWY1YzM5NWNjMzQ1OGU0MjgxNTliOTA4Y2E5NWIxNzc3ZTY2ZTI=", "commit": {"author": {"name": "Eric Holk", "email": "eholk@mozilla.com", "date": "2011-07-23T21:01:43Z"}, "committer": {"name": "Eric Holk", "email": "eholk@mozilla.com", "date": "2011-07-28T17:47:28Z"}, "message": "Made root_task no longer special.", "tree": {"sha": "a531c23c4a54812fd6de8faee80f24f3e4607da9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a531c23c4a54812fd6de8faee80f24f3e4607da9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b51f5c395cc3458e428159b908ca95b1777e66e2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b51f5c395cc3458e428159b908ca95b1777e66e2", "html_url": "https://github.com/rust-lang/rust/commit/b51f5c395cc3458e428159b908ca95b1777e66e2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b51f5c395cc3458e428159b908ca95b1777e66e2/comments", "author": null, "committer": null, "parents": [{"sha": "c15871ac517136e216a1783d722307a1da1da106", "url": "https://api.github.com/repos/rust-lang/rust/commits/c15871ac517136e216a1783d722307a1da1da106", "html_url": "https://github.com/rust-lang/rust/commit/c15871ac517136e216a1783d722307a1da1da106"}], "stats": {"total": 38, "additions": 18, "deletions": 20}, "files": [{"sha": "06097e3419776dcea9eb3e58dfd7cc36daedd7c4", "filename": "src/rt/rust.cpp", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/b51f5c395cc3458e428159b908ca95b1777e66e2/src%2Frt%2Frust.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/b51f5c395cc3458e428159b908ca95b1777e66e2/src%2Frt%2Frust.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frust.cpp?ref=b51f5c395cc3458e428159b908ca95b1777e66e2", "patch": "@@ -144,18 +144,19 @@ rust_start(uintptr_t main_fn, int argc, char **argv, void* crate_map) {\n     rust_srv *srv = new rust_srv();\n     rust_kernel *kernel = new rust_kernel(srv);\n     kernel->start();\n-    rust_scheduler *sched = kernel->get_scheduler();\n+    rust_task *root_task = kernel->create_task(NULL, \"main\");\n+    rust_scheduler *sched = root_task->sched;\n     command_line_args *args\n         = new (kernel, \"main command line args\")\n-        command_line_args(sched->root_task, argc, argv);\n+        command_line_args(root_task, argc, argv);\n \n     DLOG(sched, dom, \"startup: %d args in 0x%\" PRIxPTR,\n              args->argc, (uintptr_t)args->args);\n     for (int i = 0; i < args->argc; i++) {\n         DLOG(sched, dom, \"startup: arg[%d] = '%s'\", i, args->argv[i]);\n     }\n \n-    sched->root_task->start(main_fn, (uintptr_t)args->args);\n+    root_task->start(main_fn, (uintptr_t)args->args);\n \n     int num_threads = get_num_threads();\n "}, {"sha": "53c2d945b09c8db0ee0b3be025b039569854d1f0", "filename": "src/rt/rust_kernel.cpp", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/b51f5c395cc3458e428159b908ca95b1777e66e2/src%2Frt%2Frust_kernel.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/b51f5c395cc3458e428159b908ca95b1777e66e2/src%2Frt%2Frust_kernel.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frust_kernel.cpp?ref=b51f5c395cc3458e428159b908ca95b1777e66e2", "patch": "@@ -261,6 +261,11 @@ int rust_kernel::start_task_threads(int num_threads)\n     return sched->rval;\n }\n \n+rust_task *\n+rust_kernel::create_task(rust_task *spawner, const char *name) {\n+    return sched->create_task(spawner, name);\n+}\n+\n #ifdef __WIN32__\n void\n rust_kernel::win32_require(LPCTSTR fn, BOOL ok) {"}, {"sha": "07f4ff2f787654dde3121776ad36c0152e9306e2", "filename": "src/rt/rust_kernel.h", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b51f5c395cc3458e428159b908ca95b1777e66e2/src%2Frt%2Frust_kernel.h", "raw_url": "https://github.com/rust-lang/rust/raw/b51f5c395cc3458e428159b908ca95b1777e66e2/src%2Frt%2Frust_kernel.h", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frust_kernel.h?ref=b51f5c395cc3458e428159b908ca95b1777e66e2", "patch": "@@ -121,6 +121,8 @@ class rust_kernel : public rust_thread {\n #ifdef __WIN32__\n     void win32_require(LPCTSTR fn, BOOL ok);\n #endif\n+\n+    rust_task *create_task(rust_task *spawner, const char *name);\n };\n \n class rust_task_thread : public rust_thread {"}, {"sha": "09a78cebddbca36522322bf38fb06fa93a2b29e4", "filename": "src/rt/rust_scheduler.cpp", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/b51f5c395cc3458e428159b908ca95b1777e66e2/src%2Frt%2Frust_scheduler.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/b51f5c395cc3458e428159b908ca95b1777e66e2/src%2Frt%2Frust_scheduler.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frust_scheduler.cpp?ref=b51f5c395cc3458e428159b908ca95b1777e66e2", "patch": "@@ -16,8 +16,6 @@ rust_scheduler::rust_scheduler(rust_kernel *kernel,\n     blocked_tasks(this, \"blocked\"),\n     dead_tasks(this, \"dead\"),\n     cache(this),\n-    root_task(NULL),\n-    curr_task(NULL),\n     rval(0),\n     kernel(kernel),\n     message_queue(message_queue)\n@@ -29,7 +27,6 @@ rust_scheduler::rust_scheduler(rust_kernel *kernel,\n     pthread_attr_setstacksize(&attr, 1024 * 1024);\n     pthread_attr_setdetachstate(&attr, true);\n #endif\n-    root_task = create_task(NULL, name);\n }\n \n rust_scheduler::~rust_scheduler() {"}, {"sha": "cabcdf210a89f9ed0c855aa45d2ee2464e674eb7", "filename": "src/rt/rust_scheduler.h", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b51f5c395cc3458e428159b908ca95b1777e66e2/src%2Frt%2Frust_scheduler.h", "raw_url": "https://github.com/rust-lang/rust/raw/b51f5c395cc3458e428159b908ca95b1777e66e2/src%2Frt%2Frust_scheduler.h", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frust_scheduler.h?ref=b51f5c395cc3458e428159b908ca95b1777e66e2", "patch": "@@ -46,8 +46,6 @@ struct rust_scheduler : public kernel_owned<rust_scheduler>,\n     rust_crate_cache cache;\n \n     randctx rctx;\n-    rust_task *root_task;\n-    rust_task *curr_task;\n     int rval;\n \n     rust_kernel *kernel;"}, {"sha": "de6b00acb3fd2f3410d2fbbede9deddb3ebeb7f1", "filename": "src/rt/rust_task.cpp", "status": "modified", "additions": 4, "deletions": 6, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/b51f5c395cc3458e428159b908ca95b1777e66e2/src%2Frt%2Frust_task.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/b51f5c395cc3458e428159b908ca95b1777e66e2/src%2Frt%2Frust_task.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frust_task.cpp?ref=b51f5c395cc3458e428159b908ca95b1777e66e2", "patch": "@@ -103,8 +103,8 @@ rust_task::~rust_task()\n \n     /* FIXME: tighten this up, there are some more\n        assertions that hold at task-lifecycle events. */\n-    I(sched, ref_count == 0 ||\n-      (ref_count == 1 && this == sched->root_task));\n+    // I(sched, ref_count == 0 ||\n+    //   (ref_count == 1 && this == sched->root_task));\n \n     del_stk(this, stk);\n }\n@@ -207,8 +207,8 @@ rust_task::kill() {\n     // Unblock the task so it can unwind.\n     unblock();\n \n-    if (this == sched->root_task)\n-        sched->fail();\n+    // if (this == sched->root_task)\n+    //     sched->fail();\n \n     LOG(this, task, \"preparing to unwind task: 0x%\" PRIxPTR, this);\n     // run_on_resume(rust_unwind_glue);\n@@ -229,8 +229,6 @@ rust_task::fail() {\n         supervisor->kill();\n     }\n     // FIXME: implement unwinding again.\n-    if (this == sched->root_task)\n-        sched->fail();\n     failed = true;\n }\n "}, {"sha": "b1984b9d40b825c920a969615f4834f91b176780", "filename": "src/rt/rust_task.h", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/b51f5c395cc3458e428159b908ca95b1777e66e2/src%2Frt%2Frust_task.h", "raw_url": "https://github.com/rust-lang/rust/raw/b51f5c395cc3458e428159b908ca95b1777e66e2/src%2Frt%2Frust_task.h", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frust_task.h?ref=b51f5c395cc3458e428159b908ca95b1777e66e2", "patch": "@@ -123,9 +123,6 @@ rust_task : public maybe_proxy<rust_task>,\n     void die();\n     void unblock();\n \n-    void check_active() { I(sched, sched->curr_task == this); }\n-    void check_suspended() { I(sched, sched->curr_task != this); }\n-\n     // Print a backtrace, if the \"bt\" logging option is on.\n     void backtrace();\n "}, {"sha": "f9a99d9acb1eaa27214eb1e62ab745fbb1ae9fb5", "filename": "src/rt/test/rust_test_runtime.cpp", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/b51f5c395cc3458e428159b908ca95b1777e66e2/src%2Frt%2Ftest%2Frust_test_runtime.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/b51f5c395cc3458e428159b908ca95b1777e66e2/src%2Frt%2Ftest%2Frust_test_runtime.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Ftest%2Frust_test_runtime.cpp?ref=b51f5c395cc3458e428159b908ca95b1777e66e2", "patch": "@@ -45,9 +45,9 @@ void task_entry() {\n \n void\n rust_task_test::worker::run() {\n-    rust_scheduler *scheduler = kernel->get_scheduler();\n-    scheduler->root_task->start((uintptr_t)&task_entry, (uintptr_t)NULL);\n-    scheduler->start_main_loop(0);\n+    rust_task *root_task = kernel->create_task(NULL, \"main\");\n+    root_task->start((uintptr_t)&task_entry, (uintptr_t)NULL);\n+    root_task->sched->start_main_loop(0);\n }\n \n bool"}]}