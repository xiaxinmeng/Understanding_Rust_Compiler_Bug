{"sha": "a5e2d0c4e5f4afe1bd52ed0ebe0be03890d3af62", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE1ZTJkMGM0ZTVmNGFmZTFiZDUyZWQwZWJlMGJlMDM4OTBkM2FmNjI=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2019-02-24T11:25:46Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2019-02-24T11:25:46Z"}, "message": "remark that the rules are unfinished", "tree": {"sha": "74cced673a763aced8bf637bc73a898d5b3a5ed1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/74cced673a763aced8bf637bc73a898d5b3a5ed1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a5e2d0c4e5f4afe1bd52ed0ebe0be03890d3af62", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a5e2d0c4e5f4afe1bd52ed0ebe0be03890d3af62", "html_url": "https://github.com/rust-lang/rust/commit/a5e2d0c4e5f4afe1bd52ed0ebe0be03890d3af62", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a5e2d0c4e5f4afe1bd52ed0ebe0be03890d3af62/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8ce9b8667ac831821729f11b1e7c685af1e9e21c", "url": "https://api.github.com/repos/rust-lang/rust/commits/8ce9b8667ac831821729f11b1e7c685af1e9e21c", "html_url": "https://github.com/rust-lang/rust/commit/8ce9b8667ac831821729f11b1e7c685af1e9e21c"}], "stats": {"total": 4, "additions": 4, "deletions": 0}, "files": [{"sha": "d4d51f8eeb76ef575a4dcae2b09719499821e39c", "filename": "src/libcore/mem.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/a5e2d0c4e5f4afe1bd52ed0ebe0be03890d3af62/src%2Flibcore%2Fmem.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a5e2d0c4e5f4afe1bd52ed0ebe0be03890d3af62/src%2Flibcore%2Fmem.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fmem.rs?ref=a5e2d0c4e5f4afe1bd52ed0ebe0be03890d3af62", "patch": "@@ -1230,6 +1230,8 @@ impl<T> MaybeUninit<T> {\n     /// let x_vec = unsafe { &*x.as_ptr() };\n     /// // We have created a reference to an uninitialized vector! This is undefined behavior.\n     /// ```\n+    /// (Notice that the rules around referenced to uninitialized data are not finalized yet, but\n+    /// until they are, it is advisable to avoid them.)\n     #[unstable(feature = \"maybe_uninit\", issue = \"53491\")]\n     #[inline(always)]\n     pub fn as_ptr(&self) -> *const T {\n@@ -1266,6 +1268,8 @@ impl<T> MaybeUninit<T> {\n     /// let x_vec = unsafe { &mut *x.as_mut_ptr() };\n     /// // We have created a reference to an uninitialized vector! This is undefined behavior.\n     /// ```\n+    /// (Notice that the rules around referenced to uninitialized data are not finalized yet, but\n+    /// until they are, it is advisable to avoid them.)\n     #[unstable(feature = \"maybe_uninit\", issue = \"53491\")]\n     #[inline(always)]\n     pub fn as_mut_ptr(&mut self) -> *mut T {"}]}