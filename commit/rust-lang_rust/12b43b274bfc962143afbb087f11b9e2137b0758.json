{"sha": "12b43b274bfc962143afbb087f11b9e2137b0758", "node_id": "MDY6Q29tbWl0NzI0NzEyOjEyYjQzYjI3NGJmYzk2MjE0M2FmYmIwODdmMTFiOWUyMTM3YjA3NTg=", "commit": {"author": {"name": "Daniel Micay", "email": "danielmicay@gmail.com", "date": "2013-02-20T00:15:03Z"}, "committer": {"name": "Daniel Micay", "email": "danielmicay@gmail.com", "date": "2013-02-20T01:22:04Z"}, "message": "add range assert when loading bools", "tree": {"sha": "ad965763cbfa43b2141111f1335cfdfb68fc912f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ad965763cbfa43b2141111f1335cfdfb68fc912f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/12b43b274bfc962143afbb087f11b9e2137b0758", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/12b43b274bfc962143afbb087f11b9e2137b0758", "html_url": "https://github.com/rust-lang/rust/commit/12b43b274bfc962143afbb087f11b9e2137b0758", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/12b43b274bfc962143afbb087f11b9e2137b0758/comments", "author": {"login": "thestinger", "id": 1505226, "node_id": "MDQ6VXNlcjE1MDUyMjY=", "avatar_url": "https://avatars.githubusercontent.com/u/1505226?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thestinger", "html_url": "https://github.com/thestinger", "followers_url": "https://api.github.com/users/thestinger/followers", "following_url": "https://api.github.com/users/thestinger/following{/other_user}", "gists_url": "https://api.github.com/users/thestinger/gists{/gist_id}", "starred_url": "https://api.github.com/users/thestinger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thestinger/subscriptions", "organizations_url": "https://api.github.com/users/thestinger/orgs", "repos_url": "https://api.github.com/users/thestinger/repos", "events_url": "https://api.github.com/users/thestinger/events{/privacy}", "received_events_url": "https://api.github.com/users/thestinger/received_events", "type": "User", "site_admin": false}, "committer": {"login": "thestinger", "id": 1505226, "node_id": "MDQ6VXNlcjE1MDUyMjY=", "avatar_url": "https://avatars.githubusercontent.com/u/1505226?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thestinger", "html_url": "https://github.com/thestinger", "followers_url": "https://api.github.com/users/thestinger/followers", "following_url": "https://api.github.com/users/thestinger/following{/other_user}", "gists_url": "https://api.github.com/users/thestinger/gists{/gist_id}", "starred_url": "https://api.github.com/users/thestinger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thestinger/subscriptions", "organizations_url": "https://api.github.com/users/thestinger/orgs", "repos_url": "https://api.github.com/users/thestinger/repos", "events_url": "https://api.github.com/users/thestinger/events{/privacy}", "received_events_url": "https://api.github.com/users/thestinger/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0262e4b138e6fa27188c3b8607fe81a74f0f13f1", "url": "https://api.github.com/repos/rust-lang/rust/commits/0262e4b138e6fa27188c3b8607fe81a74f0f13f1", "html_url": "https://github.com/rust-lang/rust/commit/0262e4b138e6fa27188c3b8607fe81a74f0f13f1"}], "stats": {"total": 17, "additions": 11, "deletions": 6}, "files": [{"sha": "bb870dfbf5bd98f20997f02e83db673913ddd484", "filename": "src/librustc/middle/trans/build.rs", "status": "modified", "additions": 4, "deletions": 5, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/12b43b274bfc962143afbb087f11b9e2137b0758/src%2Flibrustc%2Fmiddle%2Ftrans%2Fbuild.rs", "raw_url": "https://github.com/rust-lang/rust/raw/12b43b274bfc962143afbb087f11b9e2137b0758/src%2Flibrustc%2Fmiddle%2Ftrans%2Fbuild.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftrans%2Fbuild.rs?ref=12b43b274bfc962143afbb087f11b9e2137b0758", "patch": "@@ -16,6 +16,7 @@ use lib::llvm::{Opcode, IntPredicate, RealPredicate, True, False};\n use lib::llvm::{ValueRef, TypeRef, BasicBlockRef, BuilderRef, ModuleRef};\n use libc::{c_uint, c_int, c_ulonglong};\n use middle::trans::common::*;\n+use middle::trans::machine::llsize_of_real;\n \n use core::cast::transmute;\n use core::cast;\n@@ -540,13 +541,11 @@ pub fn LoadRangeAssert(cx: block, PointerVal: ValueRef, lo: c_ulonglong,\n                        hi: c_ulonglong, signed: lib::llvm::Bool) -> ValueRef {\n     let value = Load(cx, PointerVal);\n \n-    let ccx = cx.fcx.ccx;\n-    let ty = val_ty(PointerVal);\n     unsafe {\n-        assert llvm::LLVMGetTypeKind(ty) != lib::llvm::Array;\n+        let t = llvm::LLVMGetElementType(llvm::LLVMTypeOf(PointerVal));\n+        let min = llvm::LLVMConstInt(t, lo, signed);\n+        let max = llvm::LLVMConstInt(t, hi, signed);\n \n-        let min = llvm::LLVMConstInt(ccx.int_type, lo, signed);\n-        let max = llvm::LLVMConstInt(ccx.int_type, hi, signed);\n \n         do vec::as_imm_buf([min, max]) |ptr, len| {\n             llvm::LLVMSetMetadata(value, lib::llvm::MD_range as c_uint,"}, {"sha": "6f1d971263ced399457b33c1dd59d2894a3f230b", "filename": "src/librustc/middle/trans/datum.rs", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/12b43b274bfc962143afbb087f11b9e2137b0758/src%2Flibrustc%2Fmiddle%2Ftrans%2Fdatum.rs", "raw_url": "https://github.com/rust-lang/rust/raw/12b43b274bfc962143afbb087f11b9e2137b0758/src%2Flibrustc%2Fmiddle%2Ftrans%2Fdatum.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftrans%2Fdatum.rs?ref=12b43b274bfc962143afbb087f11b9e2137b0758", "patch": "@@ -431,7 +431,13 @@ pub impl Datum {\n         } else {\n             match self.mode {\n                 ByValue => self.val,\n-                ByRef => Load(bcx, self.val)\n+                ByRef => {\n+                    if ty::type_is_bool(self.ty) {\n+                        LoadRangeAssert(bcx, self.val, 0, 2, lib::llvm::True)\n+                    } else {\n+                        Load(bcx, self.val)\n+                    }\n+                }\n             }\n         }\n     }"}]}