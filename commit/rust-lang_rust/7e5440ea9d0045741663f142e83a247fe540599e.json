{"sha": "7e5440ea9d0045741663f142e83a247fe540599e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjdlNTQ0MGVhOWQwMDQ1NzQxNjYzZjE0MmU4M2EyNDdmZTU0MDU5OWU=", "commit": {"author": {"name": "nham", "email": "hamann.nick@gmail.com", "date": "2014-08-02T02:59:54Z"}, "committer": {"name": "nham", "email": "hamann.nick@gmail.com", "date": "2014-08-02T03:05:16Z"}, "message": "Add a split_at method to slice::ImmutableVector\n\nThis method is similar to the mut_split_at method of slice::MutableVector.", "tree": {"sha": "3781d29bcf296ca7dd968035283b76d84602e956", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3781d29bcf296ca7dd968035283b76d84602e956"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7e5440ea9d0045741663f142e83a247fe540599e", "comment_count": 5, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7e5440ea9d0045741663f142e83a247fe540599e", "html_url": "https://github.com/rust-lang/rust/commit/7e5440ea9d0045741663f142e83a247fe540599e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7e5440ea9d0045741663f142e83a247fe540599e/comments", "author": {"login": "nham", "id": 546409, "node_id": "MDQ6VXNlcjU0NjQwOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/546409?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nham", "html_url": "https://github.com/nham", "followers_url": "https://api.github.com/users/nham/followers", "following_url": "https://api.github.com/users/nham/following{/other_user}", "gists_url": "https://api.github.com/users/nham/gists{/gist_id}", "starred_url": "https://api.github.com/users/nham/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nham/subscriptions", "organizations_url": "https://api.github.com/users/nham/orgs", "repos_url": "https://api.github.com/users/nham/repos", "events_url": "https://api.github.com/users/nham/events{/privacy}", "received_events_url": "https://api.github.com/users/nham/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nham", "id": 546409, "node_id": "MDQ6VXNlcjU0NjQwOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/546409?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nham", "html_url": "https://github.com/nham", "followers_url": "https://api.github.com/users/nham/followers", "following_url": "https://api.github.com/users/nham/following{/other_user}", "gists_url": "https://api.github.com/users/nham/gists{/gist_id}", "starred_url": "https://api.github.com/users/nham/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nham/subscriptions", "organizations_url": "https://api.github.com/users/nham/orgs", "repos_url": "https://api.github.com/users/nham/repos", "events_url": "https://api.github.com/users/nham/events{/privacy}", "received_events_url": "https://api.github.com/users/nham/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d7cfc34a222c0280670690be0d618b67014cc28d", "url": "https://api.github.com/repos/rust-lang/rust/commits/d7cfc34a222c0280670690be0d618b67014cc28d", "html_url": "https://github.com/rust-lang/rust/commit/d7cfc34a222c0280670690be0d618b67014cc28d"}], "stats": {"total": 21, "additions": 17, "deletions": 4}, "files": [{"sha": "d3b761f9665d425f78efd8f101d8f69a02f7434c", "filename": "src/libcore/slice.rs", "status": "modified", "additions": 17, "deletions": 4, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/7e5440ea9d0045741663f142e83a247fe540599e/src%2Flibcore%2Fslice.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7e5440ea9d0045741663f142e83a247fe540599e/src%2Flibcore%2Fslice.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fslice.rs?ref=7e5440ea9d0045741663f142e83a247fe540599e", "patch": "@@ -76,6 +76,16 @@ pub trait ImmutableVector<'a, T> {\n      * Fails when `end` points outside the bounds of self.\n      */\n     fn slice_to(&self, end: uint) -> &'a [T];\n+\n+    /// Divides one slice into two at an index.\n+    ///\n+    /// The first will contain all indices from `[0, mid)` (excluding\n+    /// the index `mid` itself) and the second will contain all\n+    /// indices from `[mid, len)` (excluding the index `len` itself).\n+    ///\n+    /// Fails if `mid > len`.\n+    fn split_at(&self, mid: uint) -> (&'a [T], &'a [T]);\n+\n     /// Returns an iterator over the vector\n     fn iter(self) -> Items<'a, T>;\n     /// Returns an iterator over the subslices of the vector which are\n@@ -247,6 +257,11 @@ impl<'a,T> ImmutableVector<'a, T> for &'a [T] {\n         self.slice(0, end)\n     }\n \n+    #[inline]\n+    fn split_at(&self, mid: uint) -> (&'a [T], &'a [T]) {\n+        (self.slice(0, mid), self.slice(mid, self.len()))\n+    }\n+\n     #[inline]\n     fn iter(self) -> Items<'a, T> {\n         unsafe {\n@@ -1192,8 +1207,7 @@ impl<'a, T> Iterator<&'a [T]> for Chunks<'a, T> {\n             None\n         } else {\n             let chunksz = cmp::min(self.v.len(), self.size);\n-            let (fst, snd) = (self.v.slice_to(chunksz),\n-                              self.v.slice_from(chunksz));\n+            let (fst, snd) = self.v.split_at(chunksz);\n             self.v = snd;\n             Some(fst)\n         }\n@@ -1219,8 +1233,7 @@ impl<'a, T> DoubleEndedIterator<&'a [T]> for Chunks<'a, T> {\n         } else {\n             let remainder = self.v.len() % self.size;\n             let chunksz = if remainder != 0 { remainder } else { self.size };\n-            let (fst, snd) = (self.v.slice_to(self.v.len() - chunksz),\n-                              self.v.slice_from(self.v.len() - chunksz));\n+            let (fst, snd) = self.v.split_at(self.v.len() - chunksz);\n             self.v = fst;\n             Some(snd)\n         }"}]}