{"sha": "86bd551e4c8954330e5e0d71c09c4ecbf514a5b6", "node_id": "MDY6Q29tbWl0NzI0NzEyOjg2YmQ1NTFlNGM4OTU0MzMwZTVlMGQ3MWMwOWM0ZWNiZjUxNGE1YjY=", "commit": {"author": {"name": "Will Crichton", "email": "wcrichto@cs.stanford.edu", "date": "2021-08-27T18:17:27Z"}, "committer": {"name": "Will Crichton", "email": "wcrichto@cs.stanford.edu", "date": "2021-08-27T18:17:27Z"}, "message": "Addd missing domain size assertions", "tree": {"sha": "da22b660fa12e1a223f30c2cc915d7ebda65a25e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/da22b660fa12e1a223f30c2cc915d7ebda65a25e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/86bd551e4c8954330e5e0d71c09c4ecbf514a5b6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/86bd551e4c8954330e5e0d71c09c4ecbf514a5b6", "html_url": "https://github.com/rust-lang/rust/commit/86bd551e4c8954330e5e0d71c09c4ecbf514a5b6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/86bd551e4c8954330e5e0d71c09c4ecbf514a5b6/comments", "author": {"login": "willcrichton", "id": 663326, "node_id": "MDQ6VXNlcjY2MzMyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/663326?v=4", "gravatar_id": "", "url": "https://api.github.com/users/willcrichton", "html_url": "https://github.com/willcrichton", "followers_url": "https://api.github.com/users/willcrichton/followers", "following_url": "https://api.github.com/users/willcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/willcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/willcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/willcrichton/subscriptions", "organizations_url": "https://api.github.com/users/willcrichton/orgs", "repos_url": "https://api.github.com/users/willcrichton/repos", "events_url": "https://api.github.com/users/willcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/willcrichton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "willcrichton", "id": 663326, "node_id": "MDQ6VXNlcjY2MzMyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/663326?v=4", "gravatar_id": "", "url": "https://api.github.com/users/willcrichton", "html_url": "https://github.com/willcrichton", "followers_url": "https://api.github.com/users/willcrichton/followers", "following_url": "https://api.github.com/users/willcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/willcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/willcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/willcrichton/subscriptions", "organizations_url": "https://api.github.com/users/willcrichton/orgs", "repos_url": "https://api.github.com/users/willcrichton/repos", "events_url": "https://api.github.com/users/willcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/willcrichton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c7357270b8b93ef23f6295abecf8ff27948881c3", "url": "https://api.github.com/repos/rust-lang/rust/commits/c7357270b8b93ef23f6295abecf8ff27948881c3", "html_url": "https://github.com/rust-lang/rust/commit/c7357270b8b93ef23f6295abecf8ff27948881c3"}], "stats": {"total": 4, "additions": 3, "deletions": 1}, "files": [{"sha": "8903ed9d9e2af140670b42619c38d711c4f4e15f", "filename": "compiler/rustc_index/src/bit_set.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/86bd551e4c8954330e5e0d71c09c4ecbf514a5b6/compiler%2Frustc_index%2Fsrc%2Fbit_set.rs", "raw_url": "https://github.com/rust-lang/rust/raw/86bd551e4c8954330e5e0d71c09c4ecbf514a5b6/compiler%2Frustc_index%2Fsrc%2Fbit_set.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_index%2Fsrc%2Fbit_set.rs?ref=86bd551e4c8954330e5e0d71c09c4ecbf514a5b6", "patch": "@@ -289,6 +289,7 @@ fn dense_sparse_intersect<T: Idx>(\n // hybrid REL dense\n impl<T: Idx> BitRelations<BitSet<T>> for HybridBitSet<T> {\n     fn union(&mut self, other: &BitSet<T>) -> bool {\n+        assert_eq!(self.domain_size(), other.domain_size);\n         match self {\n             HybridBitSet::Sparse(sparse) => {\n                 // `self` is sparse and `other` is dense. To\n@@ -316,6 +317,7 @@ impl<T: Idx> BitRelations<BitSet<T>> for HybridBitSet<T> {\n     }\n \n     fn subtract(&mut self, other: &BitSet<T>) -> bool {\n+        assert_eq!(self.domain_size(), other.domain_size);\n         match self {\n             HybridBitSet::Sparse(sparse) => {\n                 sequential_update(|elem| sparse.remove(elem), other.iter())\n@@ -325,6 +327,7 @@ impl<T: Idx> BitRelations<BitSet<T>> for HybridBitSet<T> {\n     }\n \n     fn intersect(&mut self, other: &BitSet<T>) -> bool {\n+        assert_eq!(self.domain_size(), other.domain_size);\n         match self {\n             HybridBitSet::Sparse(sparse) => sparse_intersect(sparse, |elem| other.contains(*elem)),\n             HybridBitSet::Dense(dense) => dense.intersect(other),\n@@ -385,7 +388,6 @@ impl<T: Idx> BitRelations<HybridBitSet<T>> for HybridBitSet<T> {\n                         // Both sets are sparse. Add the elements in\n                         // `other_sparse` to `self` one at a time. This\n                         // may or may not cause `self` to be densified.\n-                        assert_eq!(self.domain_size(), other.domain_size());\n                         let mut changed = false;\n                         for elem in other_sparse.iter() {\n                             changed |= self.insert(*elem);"}]}