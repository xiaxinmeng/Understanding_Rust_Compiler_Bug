{"sha": "70a41a92815a79c88dd9a2e8aa02503a3b95eae8", "node_id": "MDY6Q29tbWl0NzI0NzEyOjcwYTQxYTkyODE1YTc5Yzg4ZGQ5YTJlOGFhMDI1MDNhM2I5NWVhZTg=", "commit": {"author": {"name": "JarredAllen", "email": "jarredallen73@gmail.com", "date": "2020-07-16T23:51:12Z"}, "committer": {"name": "JarredAllen", "email": "jarredallen73@gmail.com", "date": "2020-07-16T23:51:12Z"}, "message": "Enable detecting multiple-argument panics", "tree": {"sha": "c2c6f90d9171a2de348f8304896c5fcd3e5efae8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c2c6f90d9171a2de348f8304896c5fcd3e5efae8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/70a41a92815a79c88dd9a2e8aa02503a3b95eae8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/70a41a92815a79c88dd9a2e8aa02503a3b95eae8", "html_url": "https://github.com/rust-lang/rust/commit/70a41a92815a79c88dd9a2e8aa02503a3b95eae8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/70a41a92815a79c88dd9a2e8aa02503a3b95eae8/comments", "author": {"login": "JarredAllen", "id": 19656507, "node_id": "MDQ6VXNlcjE5NjU2NTA3", "avatar_url": "https://avatars.githubusercontent.com/u/19656507?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JarredAllen", "html_url": "https://github.com/JarredAllen", "followers_url": "https://api.github.com/users/JarredAllen/followers", "following_url": "https://api.github.com/users/JarredAllen/following{/other_user}", "gists_url": "https://api.github.com/users/JarredAllen/gists{/gist_id}", "starred_url": "https://api.github.com/users/JarredAllen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JarredAllen/subscriptions", "organizations_url": "https://api.github.com/users/JarredAllen/orgs", "repos_url": "https://api.github.com/users/JarredAllen/repos", "events_url": "https://api.github.com/users/JarredAllen/events{/privacy}", "received_events_url": "https://api.github.com/users/JarredAllen/received_events", "type": "User", "site_admin": false}, "committer": {"login": "JarredAllen", "id": 19656507, "node_id": "MDQ6VXNlcjE5NjU2NTA3", "avatar_url": "https://avatars.githubusercontent.com/u/19656507?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JarredAllen", "html_url": "https://github.com/JarredAllen", "followers_url": "https://api.github.com/users/JarredAllen/followers", "following_url": "https://api.github.com/users/JarredAllen/following{/other_user}", "gists_url": "https://api.github.com/users/JarredAllen/gists{/gist_id}", "starred_url": "https://api.github.com/users/JarredAllen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JarredAllen/subscriptions", "organizations_url": "https://api.github.com/users/JarredAllen/orgs", "repos_url": "https://api.github.com/users/JarredAllen/repos", "events_url": "https://api.github.com/users/JarredAllen/events{/privacy}", "received_events_url": "https://api.github.com/users/JarredAllen/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c2cb565a3e80732233298c1e910883728bdd9174", "url": "https://api.github.com/repos/rust-lang/rust/commits/c2cb565a3e80732233298c1e910883728bdd9174", "html_url": "https://github.com/rust-lang/rust/commit/c2cb565a3e80732233298c1e910883728bdd9174"}], "stats": {"total": 79, "additions": 69, "deletions": 10}, "files": [{"sha": "9944b4096baee5bd4fe6b42ac049e10ead7e071e", "filename": "clippy_lints/src/panic_unimplemented.rs", "status": "modified", "additions": 3, "deletions": 6, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/70a41a92815a79c88dd9a2e8aa02503a3b95eae8/clippy_lints%2Fsrc%2Fpanic_unimplemented.rs", "raw_url": "https://github.com/rust-lang/rust/raw/70a41a92815a79c88dd9a2e8aa02503a3b95eae8/clippy_lints%2Fsrc%2Fpanic_unimplemented.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fpanic_unimplemented.rs?ref=70a41a92815a79c88dd9a2e8aa02503a3b95eae8", "patch": "@@ -96,23 +96,20 @@ impl<'tcx> LateLintPass<'tcx> for PanicUnimplemented {\n         if_chain! {\n             if let ExprKind::Block(ref block, _) = expr.kind;\n             if let Some(ref ex) = block.expr;\n-            if let Some(params) = match_function_call(cx, ex, &paths::BEGIN_PANIC);\n-            if params.len() == 1;\n+            if let Some(params) = match_function_call(cx, ex, &paths::BEGIN_PANIC)\n+                .or(match_function_call(cx, ex, &paths::BEGIN_PANIC_FMT));\n             then {\n+                let span = get_outer_span(expr);\n                 if is_expn_of(expr.span, \"unimplemented\").is_some() {\n-                    let span = get_outer_span(expr);\n                     span_lint(cx, UNIMPLEMENTED, span,\n                               \"`unimplemented` should not be present in production code\");\n                 } else if is_expn_of(expr.span, \"todo\").is_some() {\n-                    let span = get_outer_span(expr);\n                     span_lint(cx, TODO, span,\n                               \"`todo` should not be present in production code\");\n                 } else if is_expn_of(expr.span, \"unreachable\").is_some() {\n-                    let span = get_outer_span(expr);\n                     span_lint(cx, UNREACHABLE, span,\n                               \"`unreachable` should not be present in production code\");\n                 } else if is_expn_of(expr.span, \"panic\").is_some() {\n-                    let span = get_outer_span(expr);\n                     span_lint(cx, PANIC, span,\n                               \"`panic` should not be present in production code\");\n                     match_panic(params, expr, cx);"}, {"sha": "f91ccfaed743d4ac9ceb35e5a7651a9f176aa2e2", "filename": "tests/ui/panicking_macros.rs", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/70a41a92815a79c88dd9a2e8aa02503a3b95eae8/tests%2Fui%2Fpanicking_macros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/70a41a92815a79c88dd9a2e8aa02503a3b95eae8/tests%2Fui%2Fpanicking_macros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fpanicking_macros.rs?ref=70a41a92815a79c88dd9a2e8aa02503a3b95eae8", "patch": "@@ -4,24 +4,32 @@\n fn panic() {\n     let a = 2;\n     panic!();\n+    panic!(\"message\");\n+    panic!(\"{} {}\", \"panic with\", \"multiple arguments\");\n     let b = a + 2;\n }\n \n fn todo() {\n     let a = 2;\n     todo!();\n+    todo!(\"message\");\n+    todo!(\"{} {}\", \"panic with\", \"multiple arguments\");\n     let b = a + 2;\n }\n \n fn unimplemented() {\n     let a = 2;\n     unimplemented!();\n+    unimplemented!(\"message\");\n+    unimplemented!(\"{} {}\", \"panic with\", \"multiple arguments\");\n     let b = a + 2;\n }\n \n fn unreachable() {\n     let a = 2;\n     unreachable!();\n+    unreachable!(\"message\");\n+    unreachable!(\"{} {}\", \"panic with\", \"multiple arguments\");\n     let b = a + 2;\n }\n "}, {"sha": "37c11d72a574a8fdcb0b4d1dbb0e6498c26faa50", "filename": "tests/ui/panicking_macros.stderr", "status": "modified", "additions": 58, "deletions": 4, "changes": 62, "blob_url": "https://github.com/rust-lang/rust/blob/70a41a92815a79c88dd9a2e8aa02503a3b95eae8/tests%2Fui%2Fpanicking_macros.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/70a41a92815a79c88dd9a2e8aa02503a3b95eae8/tests%2Fui%2Fpanicking_macros.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fpanicking_macros.stderr?ref=70a41a92815a79c88dd9a2e8aa02503a3b95eae8", "patch": "@@ -6,29 +6,83 @@ LL |     panic!();\n    |\n    = note: `-D clippy::panic` implied by `-D warnings`\n \n+error: `panic` should not be present in production code\n+  --> $DIR/panicking_macros.rs:7:5\n+   |\n+LL |     panic!(\"message\");\n+   |     ^^^^^^^^^^^^^^^^^^\n+   |\n+   = note: this error originates in a macro (in Nightly builds, run with -Z macro-backtrace for more info)\n+\n+error: `panic` should not be present in production code\n+  --> $DIR/panicking_macros.rs:8:5\n+   |\n+LL |     panic!(\"{} {}\", \"panic with\", \"multiple arguments\");\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |\n+   = note: this error originates in a macro (in Nightly builds, run with -Z macro-backtrace for more info)\n+\n error: `todo` should not be present in production code\n-  --> $DIR/panicking_macros.rs:12:5\n+  --> $DIR/panicking_macros.rs:14:5\n    |\n LL |     todo!();\n    |     ^^^^^^^^\n    |\n    = note: `-D clippy::todo` implied by `-D warnings`\n \n+error: `todo` should not be present in production code\n+  --> $DIR/panicking_macros.rs:15:5\n+   |\n+LL |     todo!(\"message\");\n+   |     ^^^^^^^^^^^^^^^^^\n+\n+error: `todo` should not be present in production code\n+  --> $DIR/panicking_macros.rs:16:5\n+   |\n+LL |     todo!(\"{} {}\", \"panic with\", \"multiple arguments\");\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+\n error: `unimplemented` should not be present in production code\n-  --> $DIR/panicking_macros.rs:18:5\n+  --> $DIR/panicking_macros.rs:22:5\n    |\n LL |     unimplemented!();\n    |     ^^^^^^^^^^^^^^^^^\n    |\n    = note: `-D clippy::unimplemented` implied by `-D warnings`\n \n-error: `unreachable` should not be present in production code\n+error: `unimplemented` should not be present in production code\n+  --> $DIR/panicking_macros.rs:23:5\n+   |\n+LL |     unimplemented!(\"message\");\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^\n+\n+error: `unimplemented` should not be present in production code\n   --> $DIR/panicking_macros.rs:24:5\n    |\n+LL |     unimplemented!(\"{} {}\", \"panic with\", \"multiple arguments\");\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+\n+error: `unreachable` should not be present in production code\n+  --> $DIR/panicking_macros.rs:30:5\n+   |\n LL |     unreachable!();\n    |     ^^^^^^^^^^^^^^^\n    |\n    = note: `-D clippy::unreachable` implied by `-D warnings`\n \n-error: aborting due to 4 previous errors\n+error: `unreachable` should not be present in production code\n+  --> $DIR/panicking_macros.rs:31:5\n+   |\n+LL |     unreachable!(\"message\");\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^\n+   |\n+   = note: this error originates in a macro (in Nightly builds, run with -Z macro-backtrace for more info)\n+\n+error: `unreachable` should not be present in production code\n+  --> $DIR/panicking_macros.rs:32:5\n+   |\n+LL |     unreachable!(\"{} {}\", \"panic with\", \"multiple arguments\");\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+\n+error: aborting due to 12 previous errors\n "}]}