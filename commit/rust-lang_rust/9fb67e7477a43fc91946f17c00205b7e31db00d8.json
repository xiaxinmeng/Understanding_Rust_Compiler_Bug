{"sha": "9fb67e7477a43fc91946f17c00205b7e31db00d8", "node_id": "MDY6Q29tbWl0NzI0NzEyOjlmYjY3ZTc0NzdhNDNmYzkxOTQ2ZjE3YzAwMjA1YjdlMzFkYjAwZDg=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2021-06-14T16:08:12Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2021-06-14T16:08:12Z"}, "message": "internal: document rename challenges", "tree": {"sha": "d8bbae97eb17928ad524d9c16bb0c689119b478c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d8bbae97eb17928ad524d9c16bb0c689119b478c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9fb67e7477a43fc91946f17c00205b7e31db00d8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9fb67e7477a43fc91946f17c00205b7e31db00d8", "html_url": "https://github.com/rust-lang/rust/commit/9fb67e7477a43fc91946f17c00205b7e31db00d8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9fb67e7477a43fc91946f17c00205b7e31db00d8/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "26c978f258ed2af45a6979eefea9860c1eaeacda", "url": "https://api.github.com/repos/rust-lang/rust/commits/26c978f258ed2af45a6979eefea9860c1eaeacda", "html_url": "https://github.com/rust-lang/rust/commit/26c978f258ed2af45a6979eefea9860c1eaeacda"}], "stats": {"total": 43, "additions": 42, "deletions": 1}, "files": [{"sha": "cec1d4552cd46e69183af2c0d96faf4061802824", "filename": "crates/ide/src/references/rename.rs", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/9fb67e7477a43fc91946f17c00205b7e31db00d8/crates%2Fide%2Fsrc%2Freferences%2Frename.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9fb67e7477a43fc91946f17c00205b7e31db00d8/crates%2Fide%2Fsrc%2Freferences%2Frename.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Freferences%2Frename.rs?ref=9fb67e7477a43fc91946f17c00205b7e31db00d8", "patch": "@@ -1767,4 +1767,22 @@ fn f() { <()>::BAR$0; }\"#,\n             res,\n         );\n     }\n+\n+    #[test]\n+    fn macros_are_broken_lol() {\n+        cov_mark::check!(macros_are_broken_lol);\n+        check(\n+            \"lol\",\n+            r#\"\n+macro_rules! m { () => { fn f() {} } }\n+m!();\n+fn main() { f$0()  }\n+\"#,\n+            r#\"\n+macro_rules! m { () => { fn f() {} } }\n+lol\n+fn main() { lol()  }\n+\"#,\n+        )\n+    }\n }"}, {"sha": "d7760245351951c6eaf67156b2b216cf8c287661", "filename": "crates/ide_db/src/rename.rs", "status": "modified", "additions": 24, "deletions": 1, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/9fb67e7477a43fc91946f17c00205b7e31db00d8/crates%2Fide_db%2Fsrc%2Frename.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9fb67e7477a43fc91946f17c00205b7e31db00d8/crates%2Fide_db%2Fsrc%2Frename.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_db%2Fsrc%2Frename.rs?ref=9fb67e7477a43fc91946f17c00205b7e31db00d8", "patch": "@@ -1,3 +1,25 @@\n+//! Rename infrastructure for rust-analyzer. It is used primarily for the\n+//! literal \"rename\" in the ide (look for tests there), but it is also available\n+//! as a general-purpose service. For example, it is used by the fix for the\n+//! \"incorrect case\" diagnostic.\n+//!\n+//! It leverages the [`crate::search`] functionality to find what needs to be\n+//! renamed. The actual renames are tricky -- field shorthands need special\n+//! attention, and, when renaming modules, you also want to rename files on the\n+//! file system.\n+//!\n+//! Another can of worms are macros:\n+//!\n+//! ```\n+//! macro_rules! m { () => { fn f() {} } }\n+//! m!();\n+//! fn main() {\n+//!     f() // <- rename me\n+//! }\n+//! ```\n+//!\n+//! The correct behavior in such cases is probably to show a dialog to the user.\n+//! Our current behavior is \u00af\\_(\u30c4)_/\u00af.\n use std::fmt;\n \n use base_db::{AnchoredPathBuf, FileId, FileRange};\n@@ -64,7 +86,8 @@ impl Definition {\n         // incorrect for renames. The safe behavior would be to return an error for\n         // such cases. The correct behavior would be to return an auxiliary list of\n         // \"can't rename these occurrences in macros\" items, and then show some kind\n-        // of a dialog to the user.\n+        // of a dialog to the user. See:\n+        cov_mark::hit!(macros_are_broken_lol);\n \n         let res = match self {\n             Definition::Macro(mac) => {"}]}