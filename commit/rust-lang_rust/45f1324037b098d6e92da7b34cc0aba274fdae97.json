{"sha": "45f1324037b098d6e92da7b34cc0aba274fdae97", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ1ZjEzMjQwMzdiMDk4ZDZlOTJkYTdiMzRjYzBhYmEyNzRmZGFlOTc=", "commit": {"author": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2015-03-27T17:07:52Z"}, "committer": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2015-03-27T17:07:52Z"}, "message": "rollup merge of #23771: aturon/stab-straggle-1\n\nMarks as `#[stable}`:\n\n* `ok_or`\n* `ok_or_else`\n* `iter_mut`\n* `cloned`\n\nSimilarly to `IteratorExt::cloned`, the `cloned` method is pared down to\nwork only on `Option<&T>`. Thus, this is a:\n\n[breaking-change]\n\nr? @alexcrichton", "tree": {"sha": "b4fd78fabcd37ea532a6c8ae00af5f3f52c3c7c2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b4fd78fabcd37ea532a6c8ae00af5f3f52c3c7c2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/45f1324037b098d6e92da7b34cc0aba274fdae97", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/45f1324037b098d6e92da7b34cc0aba274fdae97", "html_url": "https://github.com/rust-lang/rust/commit/45f1324037b098d6e92da7b34cc0aba274fdae97", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/45f1324037b098d6e92da7b34cc0aba274fdae97/comments", "author": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a491d2135386a53c6e5dd4545ad46b0868ea4721", "url": "https://api.github.com/repos/rust-lang/rust/commits/a491d2135386a53c6e5dd4545ad46b0868ea4721", "html_url": "https://github.com/rust-lang/rust/commit/a491d2135386a53c6e5dd4545ad46b0868ea4721"}, {"sha": "c9f600bceeb5086ea292c3872ee3094ce770f9b0", "url": "https://api.github.com/repos/rust-lang/rust/commits/c9f600bceeb5086ea292c3872ee3094ce770f9b0", "html_url": "https://github.com/rust-lang/rust/commit/c9f600bceeb5086ea292c3872ee3094ce770f9b0"}], "stats": {"total": 17, "additions": 7, "deletions": 10}, "files": [{"sha": "368d56f515e55b2fa47112cc76b67bdaef8ab1e2", "filename": "src/libcore/option.rs", "status": "modified", "additions": 7, "deletions": 10, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/45f1324037b098d6e92da7b34cc0aba274fdae97/src%2Flibcore%2Foption.rs", "raw_url": "https://github.com/rust-lang/rust/raw/45f1324037b098d6e92da7b34cc0aba274fdae97/src%2Flibcore%2Foption.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Foption.rs?ref=45f1324037b098d6e92da7b34cc0aba274fdae97", "patch": "@@ -480,7 +480,7 @@ impl<T> Option<T> {\n     /// assert_eq!(x.ok_or(0), Err(0));\n     /// ```\n     #[inline]\n-    #[unstable(feature = \"core\")]\n+    #[stable(feature = \"rust1\", since = \"1.0.0\")]\n     pub fn ok_or<E>(self, err: E) -> Result<T, E> {\n         match self {\n             Some(v) => Ok(v),\n@@ -502,7 +502,7 @@ impl<T> Option<T> {\n     /// assert_eq!(x.ok_or_else(|| 0), Err(0));\n     /// ```\n     #[inline]\n-    #[unstable(feature = \"core\")]\n+    #[stable(feature = \"rust1\", since = \"1.0.0\")]\n     pub fn ok_or_else<E, F: FnOnce() -> E>(self, err: F) -> Result<T, E> {\n         match self {\n             Some(v) => Ok(v),\n@@ -548,8 +548,7 @@ impl<T> Option<T> {\n     /// assert_eq!(x.iter_mut().next(), None);\n     /// ```\n     #[inline]\n-    #[unstable(feature = \"core\",\n-               reason = \"waiting for iterator conventions\")]\n+    #[stable(feature = \"rust1\", since = \"1.0.0\")]\n     pub fn iter_mut(&mut self) -> IterMut<T> {\n         IterMut { inner: Item { opt: self.as_mut() } }\n     }\n@@ -721,13 +720,11 @@ impl<T> Option<T> {\n     }\n }\n \n-impl<'a, T: Clone, D: Deref<Target=T>> Option<D> {\n-    /// Maps an Option<D> to an Option<T> by dereffing and cloning the contents of the Option.\n-    /// Useful for converting an Option<&T> to an Option<T>.\n-    #[unstable(feature = \"core\",\n-               reason = \"recently added as part of collections reform\")]\n+impl<'a, T: Clone> Option<&'a T> {\n+    /// Maps an Option<&T> to an Option<T> by cloning the contents of the Option.\n+    #[stable(feature = \"rust1\", since = \"1.0.0\")]\n     pub fn cloned(self) -> Option<T> {\n-        self.map(|t| t.deref().clone())\n+        self.map(|t| t.clone())\n     }\n }\n "}]}