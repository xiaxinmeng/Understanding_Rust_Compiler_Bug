{"sha": "c5e2cf2ee5b47a526b2eeebf26312fb184fcf7a6", "node_id": "MDY6Q29tbWl0NzI0NzEyOmM1ZTJjZjJlZTViNDdhNTI2YjJlZWViZjI2MzEyZmIxODRmY2Y3YTY=", "commit": {"author": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2012-09-06T22:40:11Z"}, "committer": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2012-09-06T22:40:11Z"}, "message": "Repair long lines", "tree": {"sha": "2210d87a6153b2b7dd4d785149100d78daea5f28", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2210d87a6153b2b7dd4d785149100d78daea5f28"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c5e2cf2ee5b47a526b2eeebf26312fb184fcf7a6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c5e2cf2ee5b47a526b2eeebf26312fb184fcf7a6", "html_url": "https://github.com/rust-lang/rust/commit/c5e2cf2ee5b47a526b2eeebf26312fb184fcf7a6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c5e2cf2ee5b47a526b2eeebf26312fb184fcf7a6/comments", "author": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ee4ba4490d1f49c8aef12a5194a4e9b50dfc87fa", "url": "https://api.github.com/repos/rust-lang/rust/commits/ee4ba4490d1f49c8aef12a5194a4e9b50dfc87fa", "html_url": "https://github.com/rust-lang/rust/commit/ee4ba4490d1f49c8aef12a5194a4e9b50dfc87fa"}], "stats": {"total": 14, "additions": 8, "deletions": 6}, "files": [{"sha": "7bdc1dd4adb87f2d2fa3fe6c1a41a6373247fdcf", "filename": "src/rustc/middle/typeck/check.rs", "status": "modified", "additions": 8, "deletions": 6, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/c5e2cf2ee5b47a526b2eeebf26312fb184fcf7a6/src%2Frustc%2Fmiddle%2Ftypeck%2Fcheck.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c5e2cf2ee5b47a526b2eeebf26312fb184fcf7a6/src%2Frustc%2Fmiddle%2Ftypeck%2Fcheck.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustc%2Fmiddle%2Ftypeck%2Fcheck.rs?ref=c5e2cf2ee5b47a526b2eeebf26312fb184fcf7a6", "patch": "@@ -749,7 +749,8 @@ fn do_autoderef(fcx: @fn_ctxt, sp: span, t: ty::t) -> ty::t {\n \n         // Some extra checks to detect weird cycles and so forth:\n         match sty {\n-            ty::ty_box(inner) | ty::ty_uniq(inner) | ty::ty_rptr(_, inner) => {\n+            ty::ty_box(inner) | ty::ty_uniq(inner) |\n+            ty::ty_rptr(_, inner) => {\n                 match ty::get(t1).struct {\n                     ty::ty_infer(ty::TyVar(v1)) => {\n                         ty::occurs_check(fcx.ccx.tcx, sp, v1,\n@@ -759,11 +760,12 @@ fn do_autoderef(fcx: @fn_ctxt, sp: span, t: ty::t) -> ty::t {\n                 }\n             }\n             ty::ty_enum(did, _) => {\n-                // Watch out for a type like `enum t = @t`.  Such a type would\n-                // otherwise infinitely auto-deref.  This is the only autoderef\n-                // loop that needs to be concerned with this, as an error will be\n-                // reported on the enum definition as well because the enum is not\n-                // instantiable.\n+                // Watch out for a type like `enum t = @t`.  Such a\n+                // type would otherwise infinitely auto-deref.  This\n+                // is the only autoderef loop that needs to be\n+                // concerned with this, as an error will be reported\n+                // on the enum definition as well because the enum is\n+                // not instantiable.\n                 if vec::contains(enum_dids, did) {\n                     return t1;\n                 }"}]}