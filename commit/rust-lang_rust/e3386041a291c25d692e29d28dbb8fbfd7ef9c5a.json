{"sha": "e3386041a291c25d692e29d28dbb8fbfd7ef9c5a", "node_id": "MDY6Q29tbWl0NzI0NzEyOmUzMzg2MDQxYTI5MWMyNWQ2OTJlMjlkMjhkYmI4ZmJmZDdlZjljNWE=", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2021-02-27T11:05:27Z"}, "committer": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2021-02-28T21:53:52Z"}, "message": "lintcheck: uses consts for clippy driver and cargo clippy paths", "tree": {"sha": "21af9cefa82b3ae09030f4466e853e6cc377496f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/21af9cefa82b3ae09030f4466e853e6cc377496f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e3386041a291c25d692e29d28dbb8fbfd7ef9c5a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e3386041a291c25d692e29d28dbb8fbfd7ef9c5a", "html_url": "https://github.com/rust-lang/rust/commit/e3386041a291c25d692e29d28dbb8fbfd7ef9c5a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e3386041a291c25d692e29d28dbb8fbfd7ef9c5a/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2d9932d720480e9f5e6cbe96bd5aadfd754fc074", "url": "https://api.github.com/repos/rust-lang/rust/commits/2d9932d720480e9f5e6cbe96bd5aadfd754fc074", "html_url": "https://github.com/rust-lang/rust/commit/2d9932d720480e9f5e6cbe96bd5aadfd754fc074"}], "stats": {"total": 24, "additions": 14, "deletions": 10}, "files": [{"sha": "24af64626cb6efbb799706e5d1e8d5b73e390622", "filename": "clippy_dev/src/lintcheck.rs", "status": "modified", "additions": 14, "deletions": 10, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/e3386041a291c25d692e29d28dbb8fbfd7ef9c5a/clippy_dev%2Fsrc%2Flintcheck.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e3386041a291c25d692e29d28dbb8fbfd7ef9c5a/clippy_dev%2Fsrc%2Flintcheck.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_dev%2Fsrc%2Flintcheck.rs?ref=e3386041a291c25d692e29d28dbb8fbfd7ef9c5a", "patch": "@@ -19,6 +19,9 @@ use rayon::prelude::*;\n use serde::{Deserialize, Serialize};\n use serde_json::Value;\n \n+const CLIPPY_DRIVER_PATH: &str = \"target/debug/clippy-driver\";\n+const CARGO_CLIPPY_PATH: &str = \"target/debug/cargo-clippy\";\n+\n /// List of sources to check, loaded from a .toml file\n #[derive(Debug, Serialize, Deserialize)]\n struct SourceList {\n@@ -317,6 +320,9 @@ impl LintcheckConfig {\n         let filename: PathBuf = sources_toml_path.file_stem().unwrap().into();\n         let lintcheck_results_path = PathBuf::from(format!(\"lintcheck-logs/{}_logs.txt\", filename.display()));\n \n+        // look at the --threads arg, if 0 is passed, ask rayon rayon how many threads it would spawn and\n+        // use half of that for the physical core count\n+        // by default use a single thread\n         let max_jobs = match clap_config.value_of(\"threads\") {\n             Some(threads) => {\n                 let threads: usize = threads\n@@ -492,14 +498,12 @@ fn gather_stats(clippy_warnings: &[ClippyWarning]) -> (String, HashMap<&String,\n /// clippy binary, if this is true, we should clean the lintchec shared target directory and recheck\n fn lintcheck_needs_rerun(toml_path: &PathBuf) -> bool {\n     let clippy_modified: std::time::SystemTime = {\n-        let mut times = [\"target/debug/clippy-driver\", \"target/debug/cargo-clippy\"]\n-            .iter()\n-            .map(|p| {\n-                std::fs::metadata(p)\n-                    .expect(\"failed to get metadata of file\")\n-                    .modified()\n-                    .expect(\"failed to get modification date\")\n-            });\n+        let mut times = [CLIPPY_DRIVER_PATH, CARGO_CLIPPY_PATH].iter().map(|p| {\n+            std::fs::metadata(p)\n+                .expect(\"failed to get metadata of file\")\n+                .modified()\n+                .expect(\"failed to get modification date\")\n+        });\n         // the oldest modification of either of the binaries\n         std::cmp::min(times.next().unwrap(), times.next().unwrap())\n     };\n@@ -539,7 +543,7 @@ pub fn run(clap_config: &ArgMatches) {\n         }\n     }\n \n-    let cargo_clippy_path: PathBuf = PathBuf::from(\"target/debug/cargo-clippy\")\n+    let cargo_clippy_path: PathBuf = PathBuf::from(CARGO_CLIPPY_PATH)\n         .canonicalize()\n         .expect(\"failed to canonicalize path to clippy binary\");\n \n@@ -550,7 +554,7 @@ pub fn run(clap_config: &ArgMatches) {\n         cargo_clippy_path.display()\n     );\n \n-    let clippy_ver = std::process::Command::new(\"target/debug/cargo-clippy\")\n+    let clippy_ver = std::process::Command::new(CARGO_CLIPPY_PATH)\n         .arg(\"--version\")\n         .output()\n         .map(|o| String::from_utf8_lossy(&o.stdout).into_owned())"}]}