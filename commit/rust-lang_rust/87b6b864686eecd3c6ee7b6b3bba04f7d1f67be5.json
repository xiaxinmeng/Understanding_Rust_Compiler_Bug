{"sha": "87b6b864686eecd3c6ee7b6b3bba04f7d1f67be5", "node_id": "MDY6Q29tbWl0NzI0NzEyOjg3YjZiODY0Njg2ZWVjZDNjNmVlN2I2YjNiYmEwNGY3ZDFmNjdiZTU=", "commit": {"author": {"name": "Eduard-Mihai Burtescu", "email": "edy.burt@gmail.com", "date": "2019-06-12T12:59:10Z"}, "committer": {"name": "Eduard-Mihai Burtescu", "email": "edy.burt@gmail.com", "date": "2019-06-12T13:02:03Z"}, "message": "rustc_codegen_llvm: `deny(unused_lifetimes)`.", "tree": {"sha": "649274056381d5d465ee5aa7117b91f5f97b2e92", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/649274056381d5d465ee5aa7117b91f5f97b2e92"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/87b6b864686eecd3c6ee7b6b3bba04f7d1f67be5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/87b6b864686eecd3c6ee7b6b3bba04f7d1f67be5", "html_url": "https://github.com/rust-lang/rust/commit/87b6b864686eecd3c6ee7b6b3bba04f7d1f67be5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/87b6b864686eecd3c6ee7b6b3bba04f7d1f67be5/comments", "author": {"login": "eddyb", "id": 77424, "node_id": "MDQ6VXNlcjc3NDI0", "avatar_url": "https://avatars.githubusercontent.com/u/77424?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eddyb", "html_url": "https://github.com/eddyb", "followers_url": "https://api.github.com/users/eddyb/followers", "following_url": "https://api.github.com/users/eddyb/following{/other_user}", "gists_url": "https://api.github.com/users/eddyb/gists{/gist_id}", "starred_url": "https://api.github.com/users/eddyb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eddyb/subscriptions", "organizations_url": "https://api.github.com/users/eddyb/orgs", "repos_url": "https://api.github.com/users/eddyb/repos", "events_url": "https://api.github.com/users/eddyb/events{/privacy}", "received_events_url": "https://api.github.com/users/eddyb/received_events", "type": "User", "site_admin": false}, "committer": {"login": "eddyb", "id": 77424, "node_id": "MDQ6VXNlcjc3NDI0", "avatar_url": "https://avatars.githubusercontent.com/u/77424?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eddyb", "html_url": "https://github.com/eddyb", "followers_url": "https://api.github.com/users/eddyb/followers", "following_url": "https://api.github.com/users/eddyb/following{/other_user}", "gists_url": "https://api.github.com/users/eddyb/gists{/gist_id}", "starred_url": "https://api.github.com/users/eddyb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eddyb/subscriptions", "organizations_url": "https://api.github.com/users/eddyb/orgs", "repos_url": "https://api.github.com/users/eddyb/repos", "events_url": "https://api.github.com/users/eddyb/events{/privacy}", "received_events_url": "https://api.github.com/users/eddyb/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fff08cb04389497d254fb40948674cbbee402908", "url": "https://api.github.com/repos/rust-lang/rust/commits/fff08cb04389497d254fb40948674cbbee402908", "html_url": "https://github.com/rust-lang/rust/commit/fff08cb04389497d254fb40948674cbbee402908"}], "stats": {"total": 24, "additions": 11, "deletions": 13}, "files": [{"sha": "9d2cd8618872a85b3b0c52b9f416c9bd7a7500c1", "filename": "src/librustc_codegen_llvm/base.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/87b6b864686eecd3c6ee7b6b3bba04f7d1f67be5/src%2Flibrustc_codegen_llvm%2Fbase.rs", "raw_url": "https://github.com/rust-lang/rust/raw/87b6b864686eecd3c6ee7b6b3bba04f7d1f67be5/src%2Flibrustc_codegen_llvm%2Fbase.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_llvm%2Fbase.rs?ref=87b6b864686eecd3c6ee7b6b3bba04f7d1f67be5", "patch": "@@ -41,7 +41,7 @@ use rustc::hir::CodegenFnAttrs;\n \n use crate::value::Value;\n \n-pub fn write_compressed_metadata<'a, 'gcx>(\n+pub fn write_compressed_metadata<'gcx>(\n     tcx: TyCtxt<'gcx, 'gcx>,\n     metadata: &EncodedMetadata,\n     llvm_module: &mut ModuleLlvm,\n@@ -123,7 +123,7 @@ pub fn compile_codegen_unit(tcx: TyCtxt<'tcx, 'tcx>, cgu_name: InternedString) {\n \n     submit_codegened_module_to_llvm(&LlvmCodegenBackend(()), tcx, module, cost);\n \n-    fn module_codegen<'ll, 'tcx>(\n+    fn module_codegen<'tcx>(\n         tcx: TyCtxt<'tcx, 'tcx>,\n         cgu_name: InternedString,\n     ) -> ModuleCodegen<ModuleLlvm> {"}, {"sha": "2febba6766d539cd7d0a49806e4e1352d5d930f8", "filename": "src/librustc_codegen_llvm/builder.rs", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/87b6b864686eecd3c6ee7b6b3bba04f7d1f67be5/src%2Flibrustc_codegen_llvm%2Fbuilder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/87b6b864686eecd3c6ee7b6b3bba04f7d1f67be5/src%2Flibrustc_codegen_llvm%2Fbuilder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_llvm%2Fbuilder.rs?ref=87b6b864686eecd3c6ee7b6b3bba04f7d1f67be5", "patch": "@@ -1228,9 +1228,7 @@ impl Builder<'a, 'll, 'tcx> {\n         ret.expect(\"LLVM does not have support for catchret\")\n     }\n \n-    fn check_store<'b>(&mut self,\n-                       val: &'ll Value,\n-                       ptr: &'ll Value) -> &'ll Value {\n+    fn check_store(&mut self, val: &'ll Value, ptr: &'ll Value) -> &'ll Value {\n         let dest_ptr_ty = self.cx.val_ty(ptr);\n         let stored_ty = self.cx.val_ty(val);\n         let stored_ptr_ty = self.cx.type_ptr_to(stored_ty);"}, {"sha": "ac798143c00c8ac0a56c387739c184c2c6ca5b78", "filename": "src/librustc_codegen_llvm/debuginfo/metadata.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/87b6b864686eecd3c6ee7b6b3bba04f7d1f67be5/src%2Flibrustc_codegen_llvm%2Fdebuginfo%2Fmetadata.rs", "raw_url": "https://github.com/rust-lang/rust/raw/87b6b864686eecd3c6ee7b6b3bba04f7d1f67be5/src%2Flibrustc_codegen_llvm%2Fdebuginfo%2Fmetadata.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_llvm%2Fdebuginfo%2Fmetadata.rs?ref=87b6b864686eecd3c6ee7b6b3bba04f7d1f67be5", "patch": "@@ -222,8 +222,7 @@ impl TypeMap<'ll, 'tcx> {\n     // Get the unique type id string for an enum variant part.\n     // Variant parts are not types and shouldn't really have their own id,\n     // but it makes set_members_of_composite_type() simpler.\n-    fn get_unique_type_id_str_of_enum_variant_part<'a>(&mut self,\n-                                                       enum_type_id: UniqueTypeId) -> &str {\n+    fn get_unique_type_id_str_of_enum_variant_part(&mut self, enum_type_id: UniqueTypeId) -> &str {\n         let variant_part_type_id = format!(\"{}_variant_part\",\n                                            self.get_unique_type_id_as_string(enum_type_id));\n         let interner_key = self.unique_id_interner.intern(&variant_part_type_id);"}, {"sha": "7820e9fa494f086b2119b9a7a550454003e7242b", "filename": "src/librustc_codegen_llvm/lib.rs", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/87b6b864686eecd3c6ee7b6b3bba04f7d1f67be5/src%2Flibrustc_codegen_llvm%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/87b6b864686eecd3c6ee7b6b3bba04f7d1f67be5/src%2Flibrustc_codegen_llvm%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_llvm%2Flib.rs?ref=87b6b864686eecd3c6ee7b6b3bba04f7d1f67be5", "patch": "@@ -22,6 +22,7 @@\n #![feature(static_nobundle)]\n #![feature(trusted_len)]\n #![deny(rust_2018_idioms)]\n+#![deny(unused_lifetimes)]\n #![allow(explicit_outlives_requirements)]\n \n use back::write::{create_target_machine, create_informational_target_machine};\n@@ -107,15 +108,15 @@ impl ExtraBackendMethods for LlvmCodegenBackend {\n         ModuleLlvm::new_metadata(tcx, mod_name)\n     }\n \n-    fn write_compressed_metadata<'b, 'gcx>(\n+    fn write_compressed_metadata<'gcx>(\n         &self,\n         tcx: TyCtxt<'gcx, 'gcx>,\n         metadata: &EncodedMetadata,\n         llvm_module: &mut ModuleLlvm,\n     ) {\n         base::write_compressed_metadata(tcx, metadata, llvm_module)\n     }\n-    fn codegen_allocator<'b, 'gcx>(\n+    fn codegen_allocator<'gcx>(\n         &self,\n         tcx: TyCtxt<'gcx, 'gcx>,\n         mods: &mut ModuleLlvm,\n@@ -284,7 +285,7 @@ impl CodegenBackend for LlvmCodegenBackend {\n         attributes::provide_extern(providers);\n     }\n \n-    fn codegen_crate<'b, 'tcx>(\n+    fn codegen_crate<'tcx>(\n         &self,\n         tcx: TyCtxt<'tcx, 'tcx>,\n         metadata: EncodedMetadata,"}, {"sha": "2c167256ad56c5280ff2887cede1e6f6b8a0e1d7", "filename": "src/librustc_codegen_llvm/type_.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/87b6b864686eecd3c6ee7b6b3bba04f7d1f67be5/src%2Flibrustc_codegen_llvm%2Ftype_.rs", "raw_url": "https://github.com/rust-lang/rust/raw/87b6b864686eecd3c6ee7b6b3bba04f7d1f67be5/src%2Flibrustc_codegen_llvm%2Ftype_.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_llvm%2Ftype_.rs?ref=87b6b864686eecd3c6ee7b6b3bba04f7d1f67be5", "patch": "@@ -327,7 +327,7 @@ impl LayoutTypeMethods<'tcx> for CodegenCx<'ll, 'tcx> {\n     fn backend_field_index(&self, layout: TyLayout<'tcx>, index: usize) -> u64 {\n         layout.llvm_field_index(index)\n     }\n-    fn scalar_pair_element_backend_type<'a>(\n+    fn scalar_pair_element_backend_type(\n         &self,\n         layout: TyLayout<'tcx>,\n         index: usize,"}, {"sha": "36a9ff0a2d2e5c0f24d4fe7acd9bd1929f18f9e5", "filename": "src/librustc_codegen_llvm/type_of.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/87b6b864686eecd3c6ee7b6b3bba04f7d1f67be5/src%2Flibrustc_codegen_llvm%2Ftype_of.rs", "raw_url": "https://github.com/rust-lang/rust/raw/87b6b864686eecd3c6ee7b6b3bba04f7d1f67be5/src%2Flibrustc_codegen_llvm%2Ftype_of.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_llvm%2Ftype_of.rs?ref=87b6b864686eecd3c6ee7b6b3bba04f7d1f67be5", "patch": "@@ -175,7 +175,7 @@ impl<'a, 'tcx> CodegenCx<'a, 'tcx> {\n \n pub trait LayoutLlvmExt<'tcx> {\n     fn is_llvm_immediate(&self) -> bool;\n-    fn is_llvm_scalar_pair<'a>(&self) -> bool;\n+    fn is_llvm_scalar_pair(&self) -> bool;\n     fn llvm_type<'a>(&self, cx: &CodegenCx<'a, 'tcx>) -> &'a Type;\n     fn immediate_llvm_type<'a>(&self, cx: &CodegenCx<'a, 'tcx>) -> &'a Type;\n     fn scalar_llvm_type_at<'a>(&self, cx: &CodegenCx<'a, 'tcx>,\n@@ -198,7 +198,7 @@ impl<'tcx> LayoutLlvmExt<'tcx> for TyLayout<'tcx> {\n         }\n     }\n \n-    fn is_llvm_scalar_pair<'a>(&self) -> bool {\n+    fn is_llvm_scalar_pair(&self) -> bool {\n         match self.abi {\n             layout::Abi::ScalarPair(..) => true,\n             layout::Abi::Uninhabited |"}]}