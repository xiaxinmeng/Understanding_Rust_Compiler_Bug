{"sha": "14e98930239e0a419d9662cde6e4a3aac6564f5a", "node_id": "C_kwDOAAsO6NoAKDE0ZTk4OTMwMjM5ZTBhNDE5ZDk2NjJjZGU2ZTRhM2FhYzY1NjRmNWE", "commit": {"author": {"name": "mejrs", "email": "", "date": "2022-09-18T00:59:32Z"}, "committer": {"name": "mejrs", "email": "", "date": "2022-09-18T00:59:32Z"}, "message": "Print out the proper crate path", "tree": {"sha": "ded017e1399bbb1f62dcc3ea72421acf20e77b36", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ded017e1399bbb1f62dcc3ea72421acf20e77b36"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/14e98930239e0a419d9662cde6e4a3aac6564f5a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/14e98930239e0a419d9662cde6e4a3aac6564f5a", "html_url": "https://github.com/rust-lang/rust/commit/14e98930239e0a419d9662cde6e4a3aac6564f5a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/14e98930239e0a419d9662cde6e4a3aac6564f5a/comments", "author": {}, "committer": {}, "parents": [{"sha": "3699c2497bc6ff74126ae8c56a06905f49d0300c", "url": "https://api.github.com/repos/rust-lang/rust/commits/3699c2497bc6ff74126ae8c56a06905f49d0300c", "html_url": "https://github.com/rust-lang/rust/commit/3699c2497bc6ff74126ae8c56a06905f49d0300c"}], "stats": {"total": 16, "additions": 6, "deletions": 10}, "files": [{"sha": "dbe068ff174b34946b46efa6feeb32c7994f9f3f", "filename": "compiler/rustc_infer/src/infer/error_reporting/mod.rs", "status": "modified", "additions": 2, "deletions": 5, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/14e98930239e0a419d9662cde6e4a3aac6564f5a/compiler%2Frustc_infer%2Fsrc%2Finfer%2Ferror_reporting%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/14e98930239e0a419d9662cde6e4a3aac6564f5a/compiler%2Frustc_infer%2Fsrc%2Finfer%2Ferror_reporting%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_infer%2Fsrc%2Finfer%2Ferror_reporting%2Fmod.rs?ref=14e98930239e0a419d9662cde6e4a3aac6564f5a", "patch": "@@ -1779,11 +1779,8 @@ impl<'a, 'tcx> InferCtxt<'a, 'tcx> {\n                                         .tcx\n                                         .parent_module_from_def_id(defid.expect_local())\n                                         .to_def_id();\n-                                    let module_name =\n-                                        self.tcx.def_path(module).to_string_no_crate_verbose();\n-                                    format!(\n-                                        \"{name} is defined in module {module_name} of the current crate\"\n-                                    )\n+                                    let module_name = self.tcx.def_path(module).to_string_no_crate_verbose();\n+                                    format!(\"{name} is defined in module `crate{module_name}` of the current crate\")\n                                 } else if defid.is_local() {\n                                     format!(\"{name} is defined in the current crate\")\n                                 } else {"}, {"sha": "909a597e22135add6f36fc08c2f4467bc50f48b9", "filename": "compiler/rustc_infer/src/lib.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/14e98930239e0a419d9662cde6e4a3aac6564f5a/compiler%2Frustc_infer%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/14e98930239e0a419d9662cde6e4a3aac6564f5a/compiler%2Frustc_infer%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_infer%2Fsrc%2Flib.rs?ref=14e98930239e0a419d9662cde6e4a3aac6564f5a", "patch": "@@ -20,7 +20,6 @@\n #![cfg_attr(bootstrap, feature(label_break_value))]\n #![feature(let_chains)]\n #![cfg_attr(bootstrap, feature(let_else))]\n-#![feature(let_else)]\n #![feature(if_let_guard)]\n #![feature(min_specialization)]\n #![feature(never_type)]"}, {"sha": "a8f23f81dea025b7d690a857836eac842052d585", "filename": "src/test/ui/fully-qualified-type/fully-qualified-type-name2.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/14e98930239e0a419d9662cde6e4a3aac6564f5a/src%2Ftest%2Fui%2Ffully-qualified-type%2Ffully-qualified-type-name2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/14e98930239e0a419d9662cde6e4a3aac6564f5a/src%2Ftest%2Fui%2Ffully-qualified-type%2Ffully-qualified-type-name2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffully-qualified-type%2Ffully-qualified-type-name2.stderr?ref=14e98930239e0a419d9662cde6e4a3aac6564f5a", "patch": "@@ -7,12 +7,12 @@ LL |     return x;\n    |            ^ expected enum `y::Foo`, found enum `x::Foo`\n    |\n    = note: enum `x::Foo` and enum `y::Foo` have similar names, but are actually distinct types\n-note: enum `x::Foo` is defined in module ::x of the current crate\n+note: enum `x::Foo` is defined in module `crate::x` of the current crate\n   --> $DIR/fully-qualified-type-name2.rs:4:5\n    |\n LL |     pub enum Foo { }\n    |     ^^^^^^^^^^^^\n-note: enum `y::Foo` is defined in module ::y of the current crate\n+note: enum `y::Foo` is defined in module `crate::y` of the current crate\n   --> $DIR/fully-qualified-type-name2.rs:8:5\n    |\n LL |     pub enum Foo { }"}, {"sha": "5e48e0955aae94e17626e04255a9771a9ec340d1", "filename": "src/test/ui/mismatched_types/show_module.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/14e98930239e0a419d9662cde6e4a3aac6564f5a/src%2Ftest%2Fui%2Fmismatched_types%2Fshow_module.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/14e98930239e0a419d9662cde6e4a3aac6564f5a/src%2Ftest%2Fui%2Fmismatched_types%2Fshow_module.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmismatched_types%2Fshow_module.stderr?ref=14e98930239e0a419d9662cde6e4a3aac6564f5a", "patch": "@@ -7,12 +7,12 @@ LL |     meh::Foo\n    |     ^^^^^^^^ expected struct `baz::Foo`, found struct `meh::Foo`\n    |\n    = note: struct `meh::Foo` and struct `baz::Foo` have similar names, but are actually distinct types\n-note: struct `meh::Foo` is defined in module ::meh of the current crate\n+note: struct `meh::Foo` is defined in module `crate::meh` of the current crate\n   --> $DIR/show_module.rs:8:5\n    |\n LL |     pub struct Foo;\n    |     ^^^^^^^^^^^^^^\n-note: struct `baz::Foo` is defined in module ::blah::baz of the current crate\n+note: struct `baz::Foo` is defined in module `crate::blah::baz` of the current crate\n   --> $DIR/show_module.rs:3:9\n    |\n LL |         pub struct Foo;"}]}