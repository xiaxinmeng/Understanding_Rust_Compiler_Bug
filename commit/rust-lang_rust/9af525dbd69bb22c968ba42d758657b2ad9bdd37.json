{"sha": "9af525dbd69bb22c968ba42d758657b2ad9bdd37", "node_id": "MDY6Q29tbWl0NzI0NzEyOjlhZjUyNWRiZDY5YmIyMmM5NjhiYTQyZDc1ODY1N2IyYWQ5YmRkMzc=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-02-24T17:49:55Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-02-24T17:49:55Z"}, "message": "simplify", "tree": {"sha": "0a7677e6b315ec6eceb72005d7cf2fb61bc0a4f3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0a7677e6b315ec6eceb72005d7cf2fb61bc0a4f3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9af525dbd69bb22c968ba42d758657b2ad9bdd37", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9af525dbd69bb22c968ba42d758657b2ad9bdd37", "html_url": "https://github.com/rust-lang/rust/commit/9af525dbd69bb22c968ba42d758657b2ad9bdd37", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9af525dbd69bb22c968ba42d758657b2ad9bdd37/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3c7c5a7354760a12b38c7186193232d68056a76e", "url": "https://api.github.com/repos/rust-lang/rust/commits/3c7c5a7354760a12b38c7186193232d68056a76e", "html_url": "https://github.com/rust-lang/rust/commit/3c7c5a7354760a12b38c7186193232d68056a76e"}], "stats": {"total": 66, "additions": 31, "deletions": 35}, "files": [{"sha": "be76b997ec2ca849d4bfc1dfb540b7a47dbfdb03", "filename": "crates/ra_ide_api/src/completion/complete_dot.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/9af525dbd69bb22c968ba42d758657b2ad9bdd37/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fcomplete_dot.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9af525dbd69bb22c968ba42d758657b2ad9bdd37/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fcomplete_dot.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fcomplete_dot.rs?ref=9af525dbd69bb22c968ba42d758657b2ad9bdd37", "patch": "@@ -1,6 +1,6 @@\n use hir::{Ty, AdtDef};\n \n-use crate::completion::{CompletionContext, Completions, CompletionKind};\n+use crate::completion::{CompletionContext, Completions};\n \n /// Complete dot accesses, i.e. fields or methods (currently only fields).\n pub(super) fn complete_dot(acc: &mut Completions, ctx: &CompletionContext) {\n@@ -28,7 +28,7 @@ fn complete_fields(acc: &mut Completions, ctx: &CompletionContext, receiver: Ty)\n                 match def_id {\n                     AdtDef::Struct(s) => {\n                         for field in s.fields(ctx.db) {\n-                            acc.add_field(CompletionKind::Reference, ctx, field, substs);\n+                            acc.add_field(ctx, field, substs);\n                         }\n                     }\n \n@@ -38,7 +38,7 @@ fn complete_fields(acc: &mut Completions, ctx: &CompletionContext, receiver: Ty)\n             }\n             Ty::Tuple(fields) => {\n                 for (i, ty) in fields.iter().enumerate() {\n-                    acc.add_pos_field(CompletionKind::Reference, ctx, i, ty);\n+                    acc.add_pos_field(ctx, i, ty);\n                 }\n             }\n             _ => {}\n@@ -50,7 +50,7 @@ fn complete_methods(acc: &mut Completions, ctx: &CompletionContext, receiver: Ty\n     receiver.iterate_methods(ctx.db, |_ty, func| {\n         let sig = func.signature(ctx.db);\n         if sig.has_self_param() {\n-            acc.add_function(CompletionKind::Reference, ctx, func);\n+            acc.add_function(ctx, func);\n         }\n         None::<()>\n     });"}, {"sha": "d2f65310f73b3fab40346b45f6fa79fa7f282168", "filename": "crates/ra_ide_api/src/completion/complete_path.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9af525dbd69bb22c968ba42d758657b2ad9bdd37/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fcomplete_path.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9af525dbd69bb22c968ba42d758657b2ad9bdd37/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fcomplete_path.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fcomplete_path.rs?ref=9af525dbd69bb22c968ba42d758657b2ad9bdd37", "patch": "@@ -64,7 +64,7 @@ pub(super) fn complete_path(acc: &mut Completions, ctx: &CompletionContext) {\n                 hir::ImplItem::Method(func) => {\n                     let sig = func.signature(ctx.db);\n                     if !sig.has_self_param() {\n-                        acc.add_function(CompletionKind::Reference, ctx, func);\n+                        acc.add_function(ctx, func);\n                     }\n                     None::<()>\n                 }"}, {"sha": "1b8fb076827b018bd147e52f49c4b85d732bc36b", "filename": "crates/ra_ide_api/src/completion/complete_struct_literal.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/9af525dbd69bb22c968ba42d758657b2ad9bdd37/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fcomplete_struct_literal.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9af525dbd69bb22c968ba42d758657b2ad9bdd37/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fcomplete_struct_literal.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fcomplete_struct_literal.rs?ref=9af525dbd69bb22c968ba42d758657b2ad9bdd37", "patch": "@@ -1,6 +1,6 @@\n use hir::{Ty, AdtDef};\n \n-use crate::completion::{CompletionContext, Completions, CompletionKind};\n+use crate::completion::{CompletionContext, Completions};\n \n /// Complete fields in fields literals.\n pub(super) fn complete_struct_literal(acc: &mut Completions, ctx: &CompletionContext) {\n@@ -22,7 +22,7 @@ pub(super) fn complete_struct_literal(acc: &mut Completions, ctx: &CompletionCon\n     match adt {\n         AdtDef::Struct(s) => {\n             for field in s.fields(ctx.db) {\n-                acc.add_field(CompletionKind::Reference, ctx, field, substs);\n+                acc.add_field(ctx, field, substs);\n             }\n         }\n "}, {"sha": "514f3b5397907655626da12abea8861306375847", "filename": "crates/ra_ide_api/src/completion/presentation.rs", "status": "modified", "additions": 24, "deletions": 28, "changes": 52, "blob_url": "https://github.com/rust-lang/rust/blob/9af525dbd69bb22c968ba42d758657b2ad9bdd37/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fpresentation.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9af525dbd69bb22c968ba42d758657b2ad9bdd37/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fpresentation.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fpresentation.rs?ref=9af525dbd69bb22c968ba42d758657b2ad9bdd37", "patch": "@@ -10,47 +10,43 @@ use crate::completion::{\n impl Completions {\n     pub(crate) fn add_field(\n         &mut self,\n-        kind: CompletionKind,\n         ctx: &CompletionContext,\n         field: hir::StructField,\n         substs: &hir::Substs,\n     ) {\n-        CompletionItem::new(kind, ctx.source_range(), field.name(ctx.db).to_string())\n-            .kind(CompletionItemKind::Field)\n-            .detail(field.ty(ctx.db).subst(substs).to_string())\n-            .set_documentation(field.docs(ctx.db))\n-            .add_to(self);\n+        CompletionItem::new(\n+            CompletionKind::Reference,\n+            ctx.source_range(),\n+            field.name(ctx.db).to_string(),\n+        )\n+        .kind(CompletionItemKind::Field)\n+        .detail(field.ty(ctx.db).subst(substs).to_string())\n+        .set_documentation(field.docs(ctx.db))\n+        .add_to(self);\n     }\n \n-    pub(crate) fn add_pos_field(\n-        &mut self,\n-        kind: CompletionKind,\n-        ctx: &CompletionContext,\n-        field: usize,\n-        ty: &hir::Ty,\n-    ) {\n-        CompletionItem::new(kind, ctx.source_range(), field.to_string())\n+    pub(crate) fn add_pos_field(&mut self, ctx: &CompletionContext, field: usize, ty: &hir::Ty) {\n+        CompletionItem::new(CompletionKind::Reference, ctx.source_range(), field.to_string())\n             .kind(CompletionItemKind::Field)\n             .detail(ty.to_string())\n             .add_to(self);\n     }\n \n-    pub(crate) fn add_function(\n-        &mut self,\n-        kind: CompletionKind,\n-        ctx: &CompletionContext,\n-        func: hir::Function,\n-    ) {\n+    pub(crate) fn add_function(&mut self, ctx: &CompletionContext, func: hir::Function) {\n         let sig = func.signature(ctx.db);\n \n-        let mut builder = CompletionItem::new(kind, ctx.source_range(), sig.name().to_string())\n-            .kind(if sig.has_self_param() {\n-                CompletionItemKind::Method\n-            } else {\n-                CompletionItemKind::Function\n-            })\n-            .set_documentation(func.docs(ctx.db))\n-            .set_detail(function_item_label(ctx, func));\n+        let mut builder = CompletionItem::new(\n+            CompletionKind::Reference,\n+            ctx.source_range(),\n+            sig.name().to_string(),\n+        )\n+        .kind(if sig.has_self_param() {\n+            CompletionItemKind::Method\n+        } else {\n+            CompletionItemKind::Function\n+        })\n+        .set_documentation(func.docs(ctx.db))\n+        .set_detail(function_item_label(ctx, func));\n         // If not an import, add parenthesis automatically.\n         if ctx.use_item_syntax.is_none() && !ctx.is_call {\n             tested_by!(inserts_parens_for_function_calls);"}]}