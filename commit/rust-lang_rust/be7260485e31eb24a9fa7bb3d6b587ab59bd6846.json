{"sha": "be7260485e31eb24a9fa7bb3d6b587ab59bd6846", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJlNzI2MDQ4NWUzMWViMjRhOWZhN2JiM2Q2YjU4N2FiNTliZDY4NDY=", "commit": {"author": {"name": "Lukas Wirth", "email": "lukastw97@gmail.com", "date": "2020-12-23T00:26:31Z"}, "committer": {"name": "Lukas Wirth", "email": "lukastw97@gmail.com", "date": "2020-12-23T00:26:31Z"}, "message": "Update ungrammar for const block patterns", "tree": {"sha": "6ebda39cc0aaed9bb2008c2cf68b7adaf549d395", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6ebda39cc0aaed9bb2008c2cf68b7adaf549d395"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/be7260485e31eb24a9fa7bb3d6b587ab59bd6846", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/be7260485e31eb24a9fa7bb3d6b587ab59bd6846", "html_url": "https://github.com/rust-lang/rust/commit/be7260485e31eb24a9fa7bb3d6b587ab59bd6846", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/be7260485e31eb24a9fa7bb3d6b587ab59bd6846/comments", "author": {"login": "Veykril", "id": 3757771, "node_id": "MDQ6VXNlcjM3NTc3NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/3757771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veykril", "html_url": "https://github.com/Veykril", "followers_url": "https://api.github.com/users/Veykril/followers", "following_url": "https://api.github.com/users/Veykril/following{/other_user}", "gists_url": "https://api.github.com/users/Veykril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veykril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veykril/subscriptions", "organizations_url": "https://api.github.com/users/Veykril/orgs", "repos_url": "https://api.github.com/users/Veykril/repos", "events_url": "https://api.github.com/users/Veykril/events{/privacy}", "received_events_url": "https://api.github.com/users/Veykril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Veykril", "id": 3757771, "node_id": "MDQ6VXNlcjM3NTc3NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/3757771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veykril", "html_url": "https://github.com/Veykril", "followers_url": "https://api.github.com/users/Veykril/followers", "following_url": "https://api.github.com/users/Veykril/following{/other_user}", "gists_url": "https://api.github.com/users/Veykril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veykril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veykril/subscriptions", "organizations_url": "https://api.github.com/users/Veykril/orgs", "repos_url": "https://api.github.com/users/Veykril/repos", "events_url": "https://api.github.com/users/Veykril/events{/privacy}", "received_events_url": "https://api.github.com/users/Veykril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4a2f60cb7b83e9ef95d97201d210ff6943b660eb", "url": "https://api.github.com/repos/rust-lang/rust/commits/4a2f60cb7b83e9ef95d97201d210ff6943b660eb", "html_url": "https://github.com/rust-lang/rust/commit/4a2f60cb7b83e9ef95d97201d210ff6943b660eb"}], "stats": {"total": 47, "additions": 40, "deletions": 7}, "files": [{"sha": "47381c08ee07a1ba30f0a4ac1769d86d3986c1de", "filename": "Cargo.lock", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/be7260485e31eb24a9fa7bb3d6b587ab59bd6846/Cargo.lock", "raw_url": "https://github.com/rust-lang/rust/raw/be7260485e31eb24a9fa7bb3d6b587ab59bd6846/Cargo.lock", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Cargo.lock?ref=be7260485e31eb24a9fa7bb3d6b587ab59bd6846", "patch": "@@ -1827,9 +1827,7 @@ checksum = \"56dee185309b50d1f11bfedef0fe6d036842e3fb77413abef29f8f8d1c5d4c1c\"\n \n [[package]]\n name = \"ungrammar\"\n-version = \"1.4.0\"\n-source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"68951379f3ced25754472ca5addbf74d7dab58c9818f49290a3d8caa3ab44fb7\"\n+version = \"1.5.0\"\n \n [[package]]\n name = \"unicase\""}, {"sha": "fdf2a71a06833a189c5f84b4a61632e6e42c64bf", "filename": "Cargo.toml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/be7260485e31eb24a9fa7bb3d6b587ab59bd6846/Cargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/be7260485e31eb24a9fa7bb3d6b587ab59bd6846/Cargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Cargo.toml?ref=be7260485e31eb24a9fa7bb3d6b587ab59bd6846", "patch": "@@ -26,4 +26,4 @@ debug = 0 # Set this to 1 or 2 to get more useful backtraces in debugger.\n # chalk-ir = { path = \"../chalk/chalk-ir\" }\n # chalk-recursive = { path = \"../chalk/chalk-recursive\" }\n \n-# ungrammar = { path = \"../ungrammar\" }\n+ungrammar = { path = \"../ungrammar\" }"}, {"sha": "978c3a32498c0ed51eea9ee06014e61c99a6daf3", "filename": "crates/hir_def/src/body/lower.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/be7260485e31eb24a9fa7bb3d6b587ab59bd6846/crates%2Fhir_def%2Fsrc%2Fbody%2Flower.rs", "raw_url": "https://github.com/rust-lang/rust/raw/be7260485e31eb24a9fa7bb3d6b587ab59bd6846/crates%2Fhir_def%2Fsrc%2Fbody%2Flower.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_def%2Fsrc%2Fbody%2Flower.rs?ref=be7260485e31eb24a9fa7bb3d6b587ab59bd6846", "patch": "@@ -933,7 +933,9 @@ impl ExprCollector<'_> {\n                 Pat::Box { inner }\n             }\n             // FIXME: implement\n-            ast::Pat::RangePat(_) | ast::Pat::MacroPat(_) => Pat::Missing,\n+            ast::Pat::RangePat(_) | ast::Pat::MacroPat(_) | ast::Pat::ConstBlockPat(_) => {\n+                Pat::Missing\n+            }\n         };\n         let ptr = AstPtr::new(&pat);\n         self.alloc_pat(pattern, Either::Left(ptr))"}, {"sha": "f69e71bdba65a17aba832daef02566e380dbf7f5", "filename": "crates/parser/src/syntax_kind/generated.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/be7260485e31eb24a9fa7bb3d6b587ab59bd6846/crates%2Fparser%2Fsrc%2Fsyntax_kind%2Fgenerated.rs", "raw_url": "https://github.com/rust-lang/rust/raw/be7260485e31eb24a9fa7bb3d6b587ab59bd6846/crates%2Fparser%2Fsrc%2Fsyntax_kind%2Fgenerated.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Fsrc%2Fsyntax_kind%2Fgenerated.rs?ref=be7260485e31eb24a9fa7bb3d6b587ab59bd6846", "patch": "@@ -170,6 +170,7 @@ pub enum SyntaxKind {\n     RANGE_PAT,\n     LITERAL_PAT,\n     MACRO_PAT,\n+    CONST_BLOCK_PAT,\n     TUPLE_EXPR,\n     ARRAY_EXPR,\n     PAREN_EXPR,"}, {"sha": "c5b80bffe742cf0a191bbc702479a171020188bc", "filename": "crates/syntax/src/ast/generated/nodes.rs", "status": "modified", "additions": 32, "deletions": 1, "changes": 33, "blob_url": "https://github.com/rust-lang/rust/blob/be7260485e31eb24a9fa7bb3d6b587ab59bd6846/crates%2Fsyntax%2Fsrc%2Fast%2Fgenerated%2Fnodes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/be7260485e31eb24a9fa7bb3d6b587ab59bd6846/crates%2Fsyntax%2Fsrc%2Fast%2Fgenerated%2Fnodes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Fsrc%2Fast%2Fgenerated%2Fnodes.rs?ref=be7260485e31eb24a9fa7bb3d6b587ab59bd6846", "patch": "@@ -763,6 +763,7 @@ impl EffectExpr {\n     pub fn try_token(&self) -> Option<SyntaxToken> { support::token(&self.syntax, T![try]) }\n     pub fn unsafe_token(&self) -> Option<SyntaxToken> { support::token(&self.syntax, T![unsafe]) }\n     pub fn async_token(&self) -> Option<SyntaxToken> { support::token(&self.syntax, T![async]) }\n+    pub fn const_token(&self) -> Option<SyntaxToken> { support::token(&self.syntax, T![const]) }\n     pub fn block_expr(&self) -> Option<BlockExpr> { support::child(&self.syntax) }\n }\n #[derive(Debug, Clone, PartialEq, Eq, Hash)]\n@@ -1251,6 +1252,14 @@ impl TupleStructPat {\n     pub fn r_paren_token(&self) -> Option<SyntaxToken> { support::token(&self.syntax, T![')']) }\n }\n #[derive(Debug, Clone, PartialEq, Eq, Hash)]\n+pub struct ConstBlockPat {\n+    pub(crate) syntax: SyntaxNode,\n+}\n+impl ConstBlockPat {\n+    pub fn const_token(&self) -> Option<SyntaxToken> { support::token(&self.syntax, T![const]) }\n+    pub fn block_expr(&self) -> Option<BlockExpr> { support::child(&self.syntax) }\n+}\n+#[derive(Debug, Clone, PartialEq, Eq, Hash)]\n pub struct RecordPatFieldList {\n     pub(crate) syntax: SyntaxNode,\n }\n@@ -1369,6 +1378,7 @@ pub enum Pat {\n     SlicePat(SlicePat),\n     TuplePat(TuplePat),\n     TupleStructPat(TupleStructPat),\n+    ConstBlockPat(ConstBlockPat),\n }\n #[derive(Debug, Clone, PartialEq, Eq, Hash)]\n pub enum FieldList {\n@@ -2772,6 +2782,17 @@ impl AstNode for TupleStructPat {\n     }\n     fn syntax(&self) -> &SyntaxNode { &self.syntax }\n }\n+impl AstNode for ConstBlockPat {\n+    fn can_cast(kind: SyntaxKind) -> bool { kind == CONST_BLOCK_PAT }\n+    fn cast(syntax: SyntaxNode) -> Option<Self> {\n+        if Self::can_cast(syntax.kind()) {\n+            Some(Self { syntax })\n+        } else {\n+            None\n+        }\n+    }\n+    fn syntax(&self) -> &SyntaxNode { &self.syntax }\n+}\n impl AstNode for RecordPatFieldList {\n     fn can_cast(kind: SyntaxKind) -> bool { kind == RECORD_PAT_FIELD_LIST }\n     fn cast(syntax: SyntaxNode) -> Option<Self> {\n@@ -3242,12 +3263,15 @@ impl From<TuplePat> for Pat {\n impl From<TupleStructPat> for Pat {\n     fn from(node: TupleStructPat) -> Pat { Pat::TupleStructPat(node) }\n }\n+impl From<ConstBlockPat> for Pat {\n+    fn from(node: ConstBlockPat) -> Pat { Pat::ConstBlockPat(node) }\n+}\n impl AstNode for Pat {\n     fn can_cast(kind: SyntaxKind) -> bool {\n         match kind {\n             IDENT_PAT | BOX_PAT | REST_PAT | LITERAL_PAT | MACRO_PAT | OR_PAT | PAREN_PAT\n             | PATH_PAT | WILDCARD_PAT | RANGE_PAT | RECORD_PAT | REF_PAT | SLICE_PAT\n-            | TUPLE_PAT | TUPLE_STRUCT_PAT => true,\n+            | TUPLE_PAT | TUPLE_STRUCT_PAT | CONST_BLOCK_PAT => true,\n             _ => false,\n         }\n     }\n@@ -3268,6 +3292,7 @@ impl AstNode for Pat {\n             SLICE_PAT => Pat::SlicePat(SlicePat { syntax }),\n             TUPLE_PAT => Pat::TuplePat(TuplePat { syntax }),\n             TUPLE_STRUCT_PAT => Pat::TupleStructPat(TupleStructPat { syntax }),\n+            CONST_BLOCK_PAT => Pat::ConstBlockPat(ConstBlockPat { syntax }),\n             _ => return None,\n         };\n         Some(res)\n@@ -3289,6 +3314,7 @@ impl AstNode for Pat {\n             Pat::SlicePat(it) => &it.syntax,\n             Pat::TuplePat(it) => &it.syntax,\n             Pat::TupleStructPat(it) => &it.syntax,\n+            Pat::ConstBlockPat(it) => &it.syntax,\n         }\n     }\n }\n@@ -4137,6 +4163,11 @@ impl std::fmt::Display for TupleStructPat {\n         std::fmt::Display::fmt(self.syntax(), f)\n     }\n }\n+impl std::fmt::Display for ConstBlockPat {\n+    fn fmt(&self, f: &mut std::fmt::Formatter<'_>) -> std::fmt::Result {\n+        std::fmt::Display::fmt(self.syntax(), f)\n+    }\n+}\n impl std::fmt::Display for RecordPatFieldList {\n     fn fmt(&self, f: &mut std::fmt::Formatter<'_>) -> std::fmt::Result {\n         std::fmt::Display::fmt(self.syntax(), f)"}, {"sha": "96b4ea448d476ba173a823ec302c2d1810982de1", "filename": "xtask/Cargo.toml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/be7260485e31eb24a9fa7bb3d6b587ab59bd6846/xtask%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/be7260485e31eb24a9fa7bb3d6b587ab59bd6846/xtask%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/xtask%2FCargo.toml?ref=be7260485e31eb24a9fa7bb3d6b587ab59bd6846", "patch": "@@ -15,7 +15,7 @@ flate2 = \"1.0\"\n pico-args = \"0.3.1\"\n proc-macro2 = \"1.0.8\"\n quote = \"1.0.2\"\n-ungrammar = \"1.4\"\n+ungrammar = \"1.5\"\n walkdir = \"2.3.1\"\n write-json = \"0.1.0\"\n xshell = \"0.1\""}, {"sha": "2b8012bdd55757dcc846920e0d32a2ef148c5457", "filename": "xtask/src/ast_src.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/be7260485e31eb24a9fa7bb3d6b587ab59bd6846/xtask%2Fsrc%2Fast_src.rs", "raw_url": "https://github.com/rust-lang/rust/raw/be7260485e31eb24a9fa7bb3d6b587ab59bd6846/xtask%2Fsrc%2Fast_src.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/xtask%2Fsrc%2Fast_src.rs?ref=be7260485e31eb24a9fa7bb3d6b587ab59bd6846", "patch": "@@ -132,6 +132,7 @@ pub(crate) const KINDS_SRC: KindsSrc = KindsSrc {\n         \"RANGE_PAT\",\n         \"LITERAL_PAT\",\n         \"MACRO_PAT\",\n+        \"CONST_BLOCK_PAT\",\n         // atoms\n         \"TUPLE_EXPR\",\n         \"ARRAY_EXPR\","}]}