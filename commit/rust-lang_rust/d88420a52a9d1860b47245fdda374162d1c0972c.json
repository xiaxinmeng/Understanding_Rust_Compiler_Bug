{"sha": "d88420a52a9d1860b47245fdda374162d1c0972c", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQ4ODQyMGE1MmE5ZDE4NjBiNDcyNDVmZGRhMzc0MTYyZDFjMDk3MmM=", "commit": {"author": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2021-01-21T17:21:55Z"}, "committer": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2021-01-24T11:44:59Z"}, "message": "Review comment.", "tree": {"sha": "43ca2ef3fe634e607248b7d1d31e2437e6687069", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/43ca2ef3fe634e607248b7d1d31e2437e6687069"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d88420a52a9d1860b47245fdda374162d1c0972c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d88420a52a9d1860b47245fdda374162d1c0972c", "html_url": "https://github.com/rust-lang/rust/commit/d88420a52a9d1860b47245fdda374162d1c0972c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d88420a52a9d1860b47245fdda374162d1c0972c/comments", "author": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "committer": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "23d415a484e400d3fb2acf92d7dec67ce8a1e072", "url": "https://api.github.com/repos/rust-lang/rust/commits/23d415a484e400d3fb2acf92d7dec67ce8a1e072", "html_url": "https://github.com/rust-lang/rust/commit/23d415a484e400d3fb2acf92d7dec67ce8a1e072"}], "stats": {"total": 5, "additions": 5, "deletions": 0}, "files": [{"sha": "48524e81f3eee2174ccd40541d0e66ed3e4163c6", "filename": "compiler/rustc_metadata/src/rmeta/encoder.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/d88420a52a9d1860b47245fdda374162d1c0972c/compiler%2Frustc_metadata%2Fsrc%2Frmeta%2Fencoder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d88420a52a9d1860b47245fdda374162d1c0972c/compiler%2Frustc_metadata%2Fsrc%2Frmeta%2Fencoder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_metadata%2Fsrc%2Frmeta%2Fencoder.rs?ref=d88420a52a9d1860b47245fdda374162d1c0972c", "patch": "@@ -783,6 +783,11 @@ fn should_encode_stability(def_kind: DefKind) -> bool {\n \n /// Whether we should encode MIR.\n ///\n+/// Computing, optimizing and encoding the MIR is a relatively expensive operation.\n+/// We want to avoid this work when not required. Therefore:\n+/// - we only compute `mir_for_ctfe` on items with const-eval semantics;\n+/// - we skip `optimized_mir` for check runs.\n+///\n /// Return a pair, resp. for CTFE and for LLVM.\n fn should_encode_mir(tcx: TyCtxt<'_>, def_id: LocalDefId) -> (bool, bool) {\n     match tcx.def_kind(def_id) {"}]}