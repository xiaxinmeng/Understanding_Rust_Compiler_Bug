{"sha": "7e53a3ce23c2ad9c0b92fbc3f5c3a025fa3be6a6", "node_id": "C_kwDOAAsO6NoAKDdlNTNhM2NlMjNjMmFkOWMwYjkyZmJjM2Y1YzNhMDI1ZmEzYmU2YTY", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2021-10-10T08:29:26Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2021-10-10T08:29:26Z"}, "message": "move test", "tree": {"sha": "b1446131dc510a3eb013604da2a0dcc0f80ffc74", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b1446131dc510a3eb013604da2a0dcc0f80ffc74"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7e53a3ce23c2ad9c0b92fbc3f5c3a025fa3be6a6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7e53a3ce23c2ad9c0b92fbc3f5c3a025fa3be6a6", "html_url": "https://github.com/rust-lang/rust/commit/7e53a3ce23c2ad9c0b92fbc3f5c3a025fa3be6a6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7e53a3ce23c2ad9c0b92fbc3f5c3a025fa3be6a6/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "408475a59329c32766b4e4ad8296b6726e17bfec", "url": "https://api.github.com/repos/rust-lang/rust/commits/408475a59329c32766b4e4ad8296b6726e17bfec", "html_url": "https://github.com/rust-lang/rust/commit/408475a59329c32766b4e4ad8296b6726e17bfec"}], "stats": {"total": 40, "additions": 21, "deletions": 19}, "files": [{"sha": "5c0894419c79b1488b4d3eada64a594ced2d353e", "filename": "crates/hir_def/src/macro_expansion_tests.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/7e53a3ce23c2ad9c0b92fbc3f5c3a025fa3be6a6/crates%2Fhir_def%2Fsrc%2Fmacro_expansion_tests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7e53a3ce23c2ad9c0b92fbc3f5c3a025fa3be6a6/crates%2Fhir_def%2Fsrc%2Fmacro_expansion_tests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_def%2Fsrc%2Fmacro_expansion_tests.rs?ref=7e53a3ce23c2ad9c0b92fbc3f5c3a025fa3be6a6", "patch": "@@ -130,6 +130,7 @@ fn pretty_print_macro_expansion(expn: SyntaxNode) -> String {\n             (T![&&], _) | (_, T![&&]) => \" \",\n             (T![,], _) => \" \",\n             (T![fn], T!['(']) => \"\",\n+            (T![']'], _) if curr_kind.is_keyword() => \" \",\n             _ if prev_kind.is_keyword() => \" \",\n             _ => \"\",\n         };"}, {"sha": "2fe70e9f4fc9b49e0ec0c519ef88aaa75460df0b", "filename": "crates/hir_def/src/macro_expansion_tests/mbe.rs", "status": "modified", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/7e53a3ce23c2ad9c0b92fbc3f5c3a025fa3be6a6/crates%2Fhir_def%2Fsrc%2Fmacro_expansion_tests%2Fmbe.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7e53a3ce23c2ad9c0b92fbc3f5c3a025fa3be6a6/crates%2Fhir_def%2Fsrc%2Fmacro_expansion_tests%2Fmbe.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_def%2Fsrc%2Fmacro_expansion_tests%2Fmbe.rs?ref=7e53a3ce23c2ad9c0b92fbc3f5c3a025fa3be6a6", "patch": "@@ -936,3 +936,23 @@ fn foo() {\n \"#]],\n     );\n }\n+\n+#[test]\n+fn test_meta() {\n+    check(\n+        r#\"\n+macro_rules! m {\n+    ($m:meta) => ( #[$m] fn bar() {} )\n+}\n+m! { cfg(target_os = \"windows\") }\n+m! { hello::world }\n+\"#,\n+        expect![[r##\"\n+macro_rules! m {\n+    ($m:meta) => ( #[$m] fn bar() {} )\n+}\n+#[cfg(target_os = \"windows\")] fn bar() {}\n+#[hello::world] fn bar() {}\n+\"##]],\n+    );\n+}"}, {"sha": "7929989442951d129f8c162718146832081dcbfa", "filename": "crates/mbe/src/tests/expand.rs", "status": "modified", "additions": 0, "deletions": 19, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/7e53a3ce23c2ad9c0b92fbc3f5c3a025fa3be6a6/crates%2Fmbe%2Fsrc%2Ftests%2Fexpand.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7e53a3ce23c2ad9c0b92fbc3f5c3a025fa3be6a6/crates%2Fmbe%2Fsrc%2Ftests%2Fexpand.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fmbe%2Fsrc%2Ftests%2Fexpand.rs?ref=7e53a3ce23c2ad9c0b92fbc3f5c3a025fa3be6a6", "patch": "@@ -101,25 +101,6 @@ fn test_attr_to_token_tree() {\n     );\n }\n \n-#[test]\n-fn test_meta() {\n-    parse_macro(\n-        r#\"\n-        macro_rules! foo {\n-            ($ i:meta) => (\n-                #[$ i]\n-                fn bar() {}\n-            )\n-        }\n-\"#,\n-    )\n-    .assert_expand_items(\n-        r#\"foo! { cfg(target_os = \"windows\") }\"#,\n-        r#\"# [cfg (target_os = \"windows\")] fn bar () {}\"#,\n-    )\n-    .assert_expand_items(r#\"foo! { hello::world }\"#, r#\"# [hello :: world] fn bar () {}\"#);\n-}\n-\n #[test]\n fn test_meta_doc_comments() {\n     parse_macro("}]}