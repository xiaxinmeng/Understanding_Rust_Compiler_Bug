{"sha": "2fd618e77accd37426819952ad443e50bb3c9015", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJmZDYxOGU3N2FjY2QzNzQyNjgxOTk1MmFkNDQzZTUwYmIzYzkwMTU=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2014-06-17T18:56:35Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2014-06-17T18:56:35Z"}, "message": "auto merge of #14976 : luqmana/rust/focwtc, r=pcwalton\n\nFixes #14959.", "tree": {"sha": "af98ffa51c454d9f63b7ac23e25ce87cbc3ae063", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/af98ffa51c454d9f63b7ac23e25ce87cbc3ae063"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2fd618e77accd37426819952ad443e50bb3c9015", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2fd618e77accd37426819952ad443e50bb3c9015", "html_url": "https://github.com/rust-lang/rust/commit/2fd618e77accd37426819952ad443e50bb3c9015", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2fd618e77accd37426819952ad443e50bb3c9015/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "db298145c702c49e5f3cc17adeafe58c8b1bbd6a", "url": "https://api.github.com/repos/rust-lang/rust/commits/db298145c702c49e5f3cc17adeafe58c8b1bbd6a", "html_url": "https://github.com/rust-lang/rust/commit/db298145c702c49e5f3cc17adeafe58c8b1bbd6a"}, {"sha": "8827395a3a830a421409ba995991bfd5bce38c1e", "url": "https://api.github.com/repos/rust-lang/rust/commits/8827395a3a830a421409ba995991bfd5bce38c1e", "html_url": "https://github.com/rust-lang/rust/commit/8827395a3a830a421409ba995991bfd5bce38c1e"}], "stats": {"total": 53, "additions": 52, "deletions": 1}, "files": [{"sha": "e8d507c8b4add36573dd368db83c79276185e31c", "filename": "src/librustc/middle/typeck/check/regionck.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/2fd618e77accd37426819952ad443e50bb3c9015/src%2Flibrustc%2Fmiddle%2Ftypeck%2Fcheck%2Fregionck.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2fd618e77accd37426819952ad443e50bb3c9015/src%2Flibrustc%2Fmiddle%2Ftypeck%2Fcheck%2Fregionck.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftypeck%2Fcheck%2Fregionck.rs?ref=2fd618e77accd37426819952ad443e50bb3c9015", "patch": "@@ -443,7 +443,10 @@ fn visit_expr(rcx: &mut Rcx, expr: &ast::Expr) {\n \n     match expr.node {\n         ast::ExprCall(ref callee, ref args) => {\n-            if !has_method_map {\n+            if has_method_map {\n+                constrain_call(rcx, None, expr, Some(*callee),\n+                               args.as_slice(), false);\n+            } else {\n                 constrain_callee(rcx, callee.id, expr, &**callee);\n                 constrain_call(rcx,\n                                Some(callee.id),"}, {"sha": "7fbb0657c704b80548adde0b84363a206dd4e0fb", "filename": "src/test/run-pass/issue-14959.rs", "status": "added", "additions": 48, "deletions": 0, "changes": 48, "blob_url": "https://github.com/rust-lang/rust/blob/2fd618e77accd37426819952ad443e50bb3c9015/src%2Ftest%2Frun-pass%2Fissue-14959.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2fd618e77accd37426819952ad443e50bb3c9015/src%2Ftest%2Frun-pass%2Fissue-14959.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-14959.rs?ref=2fd618e77accd37426819952ad443e50bb3c9015", "patch": "@@ -0,0 +1,48 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#![feature(overloaded_calls)]\n+\n+use std::ops::Fn;\n+\n+trait Response {}\n+trait Request {}\n+trait Ingot<R, S> {\n+    fn enter(&mut self, _: &mut R, _: &mut S, a: &mut Alloy) -> Status;\n+}\n+\n+#[allow(dead_code)]\n+struct HelloWorld;\n+\n+struct SendFile<'a>;\n+struct Alloy;\n+enum Status {\n+    Continue\n+}\n+\n+impl Alloy {\n+    fn find<T>(&self) -> Option<T> {\n+        None\n+    }\n+}\n+\n+impl<'a, 'b> Fn<(&'b mut Response,),()> for SendFile<'a> {\n+    fn call(&self, (_res,): (&'b mut Response,)) {}\n+}\n+\n+impl<Rq: Request, Rs: Response> Ingot<Rq, Rs> for HelloWorld {\n+    fn enter(&mut self, _req: &mut Rq, res: &mut Rs, alloy: &mut Alloy) -> Status {\n+        let send_file = alloy.find::<SendFile>().unwrap();\n+        send_file(res);\n+        Continue\n+    }\n+}\n+\n+fn main() {}"}]}