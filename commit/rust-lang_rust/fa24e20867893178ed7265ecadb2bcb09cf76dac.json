{"sha": "fa24e20867893178ed7265ecadb2bcb09cf76dac", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZhMjRlMjA4Njc4OTMxNzhlZDcyNjVlY2FkYjJiY2IwOWNmNzZkYWM=", "commit": {"author": {"name": "Evgenii P", "email": "eupn@protonmail.com", "date": "2019-08-09T09:08:36Z"}, "committer": {"name": "Evgenii P", "email": "eupn@protonmail.com", "date": "2019-08-09T09:08:36Z"}, "message": "Make name_ref to accept numeric names optionally", "tree": {"sha": "40db0d5e514bf1d260aa21a3a305b37986136481", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/40db0d5e514bf1d260aa21a3a305b37986136481"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/fa24e20867893178ed7265ecadb2bcb09cf76dac", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/fa24e20867893178ed7265ecadb2bcb09cf76dac", "html_url": "https://github.com/rust-lang/rust/commit/fa24e20867893178ed7265ecadb2bcb09cf76dac", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/fa24e20867893178ed7265ecadb2bcb09cf76dac/comments", "author": {"login": "eupn", "id": 36292692, "node_id": "MDQ6VXNlcjM2MjkyNjky", "avatar_url": "https://avatars.githubusercontent.com/u/36292692?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eupn", "html_url": "https://github.com/eupn", "followers_url": "https://api.github.com/users/eupn/followers", "following_url": "https://api.github.com/users/eupn/following{/other_user}", "gists_url": "https://api.github.com/users/eupn/gists{/gist_id}", "starred_url": "https://api.github.com/users/eupn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eupn/subscriptions", "organizations_url": "https://api.github.com/users/eupn/orgs", "repos_url": "https://api.github.com/users/eupn/repos", "events_url": "https://api.github.com/users/eupn/events{/privacy}", "received_events_url": "https://api.github.com/users/eupn/received_events", "type": "User", "site_admin": false}, "committer": {"login": "eupn", "id": 36292692, "node_id": "MDQ6VXNlcjM2MjkyNjky", "avatar_url": "https://avatars.githubusercontent.com/u/36292692?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eupn", "html_url": "https://github.com/eupn", "followers_url": "https://api.github.com/users/eupn/followers", "following_url": "https://api.github.com/users/eupn/following{/other_user}", "gists_url": "https://api.github.com/users/eupn/gists{/gist_id}", "starred_url": "https://api.github.com/users/eupn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eupn/subscriptions", "organizations_url": "https://api.github.com/users/eupn/orgs", "repos_url": "https://api.github.com/users/eupn/repos", "events_url": "https://api.github.com/users/eupn/events{/privacy}", "received_events_url": "https://api.github.com/users/eupn/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "957b5ed23a4860fe3c9b80687a801b5d7870fe00", "url": "https://api.github.com/repos/rust-lang/rust/commits/957b5ed23a4860fe3c9b80687a801b5d7870fe00", "html_url": "https://github.com/rust-lang/rust/commit/957b5ed23a4860fe3c9b80687a801b5d7870fe00"}], "stats": {"total": 18, "additions": 9, "deletions": 9}, "files": [{"sha": "2ee121ccd09da193b0ba08ed1bf731aa040fcc12", "filename": "crates/ra_parser/src/grammar.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/fa24e20867893178ed7265ecadb2bcb09cf76dac/crates%2Fra_parser%2Fsrc%2Fgrammar.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fa24e20867893178ed7265ecadb2bcb09cf76dac/crates%2Fra_parser%2Fsrc%2Fgrammar.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_parser%2Fsrc%2Fgrammar.rs?ref=fa24e20867893178ed7265ecadb2bcb09cf76dac", "patch": "@@ -273,8 +273,8 @@ fn name(p: &mut Parser) {\n     name_r(p, TokenSet::empty())\n }\n \n-fn name_ref(p: &mut Parser) {\n-    if p.at(IDENT) || p.at(INT_NUMBER) {\n+fn name_ref(p: &mut Parser, allow_numeric_names: bool) {\n+    if p.at(IDENT) || (allow_numeric_names && p.at(INT_NUMBER)) {\n         let m = p.start();\n         p.bump();\n         m.complete(p, NAME_REF);"}, {"sha": "9f9e9cb0eed396c3769f044e99597ed81f93c983", "filename": "crates/ra_parser/src/grammar/expressions.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/fa24e20867893178ed7265ecadb2bcb09cf76dac/crates%2Fra_parser%2Fsrc%2Fgrammar%2Fexpressions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fa24e20867893178ed7265ecadb2bcb09cf76dac/crates%2Fra_parser%2Fsrc%2Fgrammar%2Fexpressions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_parser%2Fsrc%2Fgrammar%2Fexpressions.rs?ref=fa24e20867893178ed7265ecadb2bcb09cf76dac", "patch": "@@ -458,7 +458,7 @@ fn method_call_expr(p: &mut Parser, lhs: CompletedMarker) -> CompletedMarker {\n     assert!(p.at(T![.]) && p.nth(1) == IDENT && (p.nth(2) == T!['('] || p.nth(2) == T![::]));\n     let m = lhs.precede(p);\n     p.bump();\n-    name_ref(p);\n+    name_ref(p, false);\n     type_args::opt_type_arg_list(p, true);\n     if p.at(T!['(']) {\n         arg_list(p);\n@@ -485,7 +485,7 @@ fn field_expr(p: &mut Parser, lhs: CompletedMarker) -> CompletedMarker {\n     let m = lhs.precede(p);\n     p.bump();\n     if p.at(IDENT) {\n-        name_ref(p)\n+        name_ref(p, false)\n     } else if p.at(INT_NUMBER) {\n         p.bump();\n     } else if p.at(FLOAT_NUMBER) {\n@@ -587,7 +587,7 @@ pub(crate) fn named_field_list(p: &mut Parser) {\n             IDENT | INT_NUMBER | T![#] => {\n                 let m = p.start();\n                 attributes::outer_attributes(p);\n-                name_ref(p);\n+                name_ref(p, true);\n                 if p.eat(T![:]) {\n                     expr(p);\n                 }"}, {"sha": "b0081f39607111bd1dbedcd706c0fbf4db6c621d", "filename": "crates/ra_parser/src/grammar/items.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fa24e20867893178ed7265ecadb2bcb09cf76dac/crates%2Fra_parser%2Fsrc%2Fgrammar%2Fitems.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fa24e20867893178ed7265ecadb2bcb09cf76dac/crates%2Fra_parser%2Fsrc%2Fgrammar%2Fitems.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_parser%2Fsrc%2Fgrammar%2Fitems.rs?ref=fa24e20867893178ed7265ecadb2bcb09cf76dac", "patch": "@@ -279,7 +279,7 @@ fn extern_crate_item(p: &mut Parser, m: Marker) {\n     p.bump();\n     assert!(p.at(T![crate]));\n     p.bump();\n-    name_ref(p);\n+    name_ref(p, false);\n     opt_alias(p);\n     p.expect(T![;]);\n     m.complete(p, EXTERN_CRATE_ITEM);"}, {"sha": "2c8f0f7e824e6655d6f96fa77b207a548ecdcd7d", "filename": "crates/ra_parser/src/grammar/paths.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fa24e20867893178ed7265ecadb2bcb09cf76dac/crates%2Fra_parser%2Fsrc%2Fgrammar%2Fpaths.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fa24e20867893178ed7265ecadb2bcb09cf76dac/crates%2Fra_parser%2Fsrc%2Fgrammar%2Fpaths.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_parser%2Fsrc%2Fgrammar%2Fpaths.rs?ref=fa24e20867893178ed7265ecadb2bcb09cf76dac", "patch": "@@ -71,7 +71,7 @@ fn path_segment(p: &mut Parser, mode: Mode, first: bool) {\n         }\n         match p.current() {\n             IDENT => {\n-                name_ref(p);\n+                name_ref(p, false);\n                 opt_path_type_args(p, mode);\n             }\n             // test crate_path"}, {"sha": "f1d999dead6f8c96a42093f5d4d76b8662bbf0d1", "filename": "crates/ra_parser/src/grammar/type_args.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/fa24e20867893178ed7265ecadb2bcb09cf76dac/crates%2Fra_parser%2Fsrc%2Fgrammar%2Ftype_args.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fa24e20867893178ed7265ecadb2bcb09cf76dac/crates%2Fra_parser%2Fsrc%2Fgrammar%2Ftype_args.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_parser%2Fsrc%2Fgrammar%2Ftype_args.rs?ref=fa24e20867893178ed7265ecadb2bcb09cf76dac", "patch": "@@ -38,12 +38,12 @@ fn type_arg(p: &mut Parser) {\n         // test associated_type_bounds\n         // fn print_all<T: Iterator<Item: Display>>(printables: T) {}\n         IDENT if p.nth(1) == T![:] => {\n-            name_ref(p);\n+            name_ref(p, false);\n             type_params::bounds(p);\n             m.complete(p, ASSOC_TYPE_ARG);\n         }\n         IDENT if p.nth(1) == T![=] => {\n-            name_ref(p);\n+            name_ref(p, false);\n             p.bump();\n             types::type_(p);\n             m.complete(p, ASSOC_TYPE_ARG);"}]}