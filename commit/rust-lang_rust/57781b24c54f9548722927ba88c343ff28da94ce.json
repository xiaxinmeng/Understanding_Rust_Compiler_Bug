{"sha": "57781b24c54f9548722927ba88c343ff28da94ce", "node_id": "C_kwDOAAsO6NoAKDU3NzgxYjI0YzU0Zjk1NDg3MjI5MjdiYTg4YzM0M2ZmMjhkYTk0Y2U", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-10-19T21:17:09Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-10-19T21:17:09Z"}, "message": "Auto merge of #103264 - matthiaskrgr:rollup-3ja4spo, r=matthiaskrgr\n\nRollup of 7 pull requests\n\nSuccessful merges:\n\n - #103211 (rustdoc: remove class name `location` from sidebar sibling nav)\n - #103223 (Use already checked RHS ty for LHS deref suggestions)\n - #103237 (Clean up codeblock-tooltip rustdoc-gui test)\n - #103239 (Allow #[unstable] impls for fn() with unstable abi.)\n - #103246 (Mark `rust-analyzer` as a host-only tool)\n - #103257 (rustdoc: move `setting-line` color CSS to settings.css)\n - #103258 (Make miri read_dir test a little more robust)\n\nFailed merges:\n\nr? `@ghost`\n`@rustbot` modify labels: rollup", "tree": {"sha": "09d84e244c26de026237e063e85f79487aecec15", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/09d84e244c26de026237e063e85f79487aecec15"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/57781b24c54f9548722927ba88c343ff28da94ce", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/57781b24c54f9548722927ba88c343ff28da94ce", "html_url": "https://github.com/rust-lang/rust/commit/57781b24c54f9548722927ba88c343ff28da94ce", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/57781b24c54f9548722927ba88c343ff28da94ce/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4b8f4319954ff2642690b9e5cbe4af352d095bf6", "url": "https://api.github.com/repos/rust-lang/rust/commits/4b8f4319954ff2642690b9e5cbe4af352d095bf6", "html_url": "https://github.com/rust-lang/rust/commit/4b8f4319954ff2642690b9e5cbe4af352d095bf6"}, {"sha": "652417e33285c22bffcf71bd792d4e05ebac758a", "url": "https://api.github.com/repos/rust-lang/rust/commits/652417e33285c22bffcf71bd792d4e05ebac758a", "html_url": "https://github.com/rust-lang/rust/commit/652417e33285c22bffcf71bd792d4e05ebac758a"}], "stats": {"total": 858, "additions": 526, "deletions": 332}, "files": [{"sha": "ccdfd3a056b8349e6dadf245b868cb90518347d1", "filename": "compiler/rustc_hir_analysis/src/check/expr.rs", "status": "modified", "additions": 6, "deletions": 5, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/57781b24c54f9548722927ba88c343ff28da94ce/compiler%2Frustc_hir_analysis%2Fsrc%2Fcheck%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/57781b24c54f9548722927ba88c343ff28da94ce/compiler%2Frustc_hir_analysis%2Fsrc%2Fcheck%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_hir_analysis%2Fsrc%2Fcheck%2Fexpr.rs?ref=57781b24c54f9548722927ba88c343ff28da94ce", "patch": "@@ -1130,11 +1130,6 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n             }\n         };\n \n-        self.check_lhs_assignable(lhs, \"E0070\", span, |err| {\n-            let rhs_ty = self.check_expr(&rhs);\n-            suggest_deref_binop(err, rhs_ty);\n-        });\n-\n         // This is (basically) inlined `check_expr_coercable_to_type`, but we want\n         // to suggest an additional fixup here in `suggest_deref_binop`.\n         let rhs_ty = self.check_expr_with_hint(&rhs, lhs_ty);\n@@ -1145,6 +1140,12 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n             diag.emit();\n         }\n \n+        self.check_lhs_assignable(lhs, \"E0070\", span, |err| {\n+            if let Some(rhs_ty) = self.typeck_results.borrow().expr_ty_opt(rhs) {\n+                suggest_deref_binop(err, rhs_ty);\n+            }\n+        });\n+\n         self.require_type_is_sized(lhs_ty, lhs.span, traits::AssignmentLhsSized);\n \n         if lhs_ty.references_error() || rhs_ty.references_error() {"}, {"sha": "9591aeb881f3d58c8e4790e0120ff7e7f5381b9d", "filename": "compiler/rustc_passes/src/stability.rs", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/57781b24c54f9548722927ba88c343ff28da94ce/compiler%2Frustc_passes%2Fsrc%2Fstability.rs", "raw_url": "https://github.com/rust-lang/rust/raw/57781b24c54f9548722927ba88c343ff28da94ce/compiler%2Frustc_passes%2Fsrc%2Fstability.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_passes%2Fsrc%2Fstability.rs?ref=57781b24c54f9548722927ba88c343ff28da94ce", "patch": "@@ -891,8 +891,25 @@ impl<'tcx> Visitor<'tcx> for CheckTraitImplStable<'tcx> {\n         if let TyKind::Never = t.kind {\n             self.fully_stable = false;\n         }\n+        if let TyKind::BareFn(f) = t.kind {\n+            if rustc_target::spec::abi::is_stable(f.abi.name()).is_err() {\n+                self.fully_stable = false;\n+            }\n+        }\n         intravisit::walk_ty(self, t)\n     }\n+\n+    fn visit_fn_decl(&mut self, fd: &'tcx hir::FnDecl<'tcx>) {\n+        for ty in fd.inputs {\n+            self.visit_ty(ty)\n+        }\n+        if let hir::FnRetTy::Return(output_ty) = fd.output {\n+            match output_ty.kind {\n+                TyKind::Never => {} // `-> !` is stable\n+                _ => self.visit_ty(output_ty),\n+            }\n+        }\n+    }\n }\n \n /// Given the list of enabled features that were not language features (i.e., that"}, {"sha": "ce45fa13970b4bdfa4f4b25c38100d0e4ffa3381", "filename": "compiler/rustc_target/src/spec/abi.rs", "status": "modified", "additions": 109, "deletions": 159, "changes": 268, "blob_url": "https://github.com/rust-lang/rust/blob/57781b24c54f9548722927ba88c343ff28da94ce/compiler%2Frustc_target%2Fsrc%2Fspec%2Fabi.rs", "raw_url": "https://github.com/rust-lang/rust/raw/57781b24c54f9548722927ba88c343ff28da94ce/compiler%2Frustc_target%2Fsrc%2Fspec%2Fabi.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_target%2Fsrc%2Fspec%2Fabi.rs?ref=57781b24c54f9548722927ba88c343ff28da94ce", "patch": "@@ -109,175 +109,125 @@ pub enum AbiDisabled {\n     Unrecognized,\n }\n \n-fn gate_feature_post(\n+pub fn is_enabled(\n     features: &rustc_feature::Features,\n-    feature: Symbol,\n     span: Span,\n-    explain: &'static str,\n+    name: &str,\n ) -> Result<(), AbiDisabled> {\n-    if !features.enabled(feature) && !span.allows_unstable(feature) {\n-        Err(AbiDisabled::Unstable { feature, explain })\n-    } else {\n-        Ok(())\n+    let s = is_stable(name);\n+    if let Err(AbiDisabled::Unstable { feature, .. }) = s {\n+        if features.enabled(feature) || span.allows_unstable(feature) {\n+            return Ok(());\n+        }\n     }\n+    s\n }\n \n-pub fn is_enabled(\n-    features: &rustc_feature::Features,\n-    span: Span,\n-    name: &str,\n-) -> Result<(), AbiDisabled> {\n+pub fn is_stable(name: &str) -> Result<(), AbiDisabled> {\n     match name {\n         // Stable\n         \"Rust\" | \"C\" | \"cdecl\" | \"stdcall\" | \"fastcall\" | \"aapcs\" | \"win64\" | \"sysv64\"\n         | \"system\" => Ok(()),\n-        \"rust-intrinsic\" => {\n-            gate_feature_post(features, sym::intrinsics, span, \"intrinsics are subject to change\")\n-        }\n-        \"platform-intrinsic\" => gate_feature_post(\n-            features,\n-            sym::platform_intrinsics,\n-            span,\n-            \"platform intrinsics are experimental and possibly buggy\",\n-        ),\n-        \"vectorcall\" => gate_feature_post(\n-            features,\n-            sym::abi_vectorcall,\n-            span,\n-            \"vectorcall is experimental and subject to change\",\n-        ),\n-        \"thiscall\" => gate_feature_post(\n-            features,\n-            sym::abi_thiscall,\n-            span,\n-            \"thiscall is experimental and subject to change\",\n-        ),\n-        \"rust-call\" => gate_feature_post(\n-            features,\n-            sym::unboxed_closures,\n-            span,\n-            \"rust-call ABI is subject to change\",\n-        ),\n-        \"rust-cold\" => gate_feature_post(\n-            features,\n-            sym::rust_cold_cc,\n-            span,\n-            \"rust-cold is experimental and subject to change\",\n-        ),\n-        \"ptx-kernel\" => gate_feature_post(\n-            features,\n-            sym::abi_ptx,\n-            span,\n-            \"PTX ABIs are experimental and subject to change\",\n-        ),\n-        \"unadjusted\" => gate_feature_post(\n-            features,\n-            sym::abi_unadjusted,\n-            span,\n-            \"unadjusted ABI is an implementation detail and perma-unstable\",\n-        ),\n-        \"msp430-interrupt\" => gate_feature_post(\n-            features,\n-            sym::abi_msp430_interrupt,\n-            span,\n-            \"msp430-interrupt ABI is experimental and subject to change\",\n-        ),\n-        \"x86-interrupt\" => gate_feature_post(\n-            features,\n-            sym::abi_x86_interrupt,\n-            span,\n-            \"x86-interrupt ABI is experimental and subject to change\",\n-        ),\n-        \"amdgpu-kernel\" => gate_feature_post(\n-            features,\n-            sym::abi_amdgpu_kernel,\n-            span,\n-            \"amdgpu-kernel ABI is experimental and subject to change\",\n-        ),\n-        \"avr-interrupt\" | \"avr-non-blocking-interrupt\" => gate_feature_post(\n-            features,\n-            sym::abi_avr_interrupt,\n-            span,\n-            \"avr-interrupt and avr-non-blocking-interrupt ABIs are experimental and subject to change\",\n-        ),\n-        \"efiapi\" => gate_feature_post(\n-            features,\n-            sym::abi_efiapi,\n-            span,\n-            \"efiapi ABI is experimental and subject to change\",\n-        ),\n-        \"C-cmse-nonsecure-call\" => gate_feature_post(\n-            features,\n-            sym::abi_c_cmse_nonsecure_call,\n-            span,\n-            \"C-cmse-nonsecure-call ABI is experimental and subject to change\",\n-        ),\n-        \"C-unwind\" => gate_feature_post(\n-            features,\n-            sym::c_unwind,\n-            span,\n-            \"C-unwind ABI is experimental and subject to change\",\n-        ),\n-        \"stdcall-unwind\" => gate_feature_post(\n-            features,\n-            sym::c_unwind,\n-            span,\n-            \"stdcall-unwind ABI is experimental and subject to change\",\n-        ),\n-        \"system-unwind\" => gate_feature_post(\n-            features,\n-            sym::c_unwind,\n-            span,\n-            \"system-unwind ABI is experimental and subject to change\",\n-        ),\n-        \"thiscall-unwind\" => gate_feature_post(\n-            features,\n-            sym::c_unwind,\n-            span,\n-            \"thiscall-unwind ABI is experimental and subject to change\",\n-        ),\n-        \"cdecl-unwind\" => gate_feature_post(\n-            features,\n-            sym::c_unwind,\n-            span,\n-            \"cdecl-unwind ABI is experimental and subject to change\",\n-        ),\n-        \"fastcall-unwind\" => gate_feature_post(\n-            features,\n-            sym::c_unwind,\n-            span,\n-            \"fastcall-unwind ABI is experimental and subject to change\",\n-        ),\n-        \"vectorcall-unwind\" => gate_feature_post(\n-            features,\n-            sym::c_unwind,\n-            span,\n-            \"vectorcall-unwind ABI is experimental and subject to change\",\n-        ),\n-        \"aapcs-unwind\" => gate_feature_post(\n-            features,\n-            sym::c_unwind,\n-            span,\n-            \"aapcs-unwind ABI is experimental and subject to change\",\n-        ),\n-        \"win64-unwind\" => gate_feature_post(\n-            features,\n-            sym::c_unwind,\n-            span,\n-            \"win64-unwind ABI is experimental and subject to change\",\n-        ),\n-        \"sysv64-unwind\" => gate_feature_post(\n-            features,\n-            sym::c_unwind,\n-            span,\n-            \"sysv64-unwind ABI is experimental and subject to change\",\n-        ),\n-        \"wasm\" => gate_feature_post(\n-            features,\n-            sym::wasm_abi,\n-            span,\n-            \"wasm ABI is experimental and subject to change\",\n-        ),\n+        \"rust-intrinsic\" => Err(AbiDisabled::Unstable {\n+            feature: sym::intrinsics,\n+            explain: \"intrinsics are subject to change\",\n+        }),\n+        \"platform-intrinsic\" => Err(AbiDisabled::Unstable {\n+            feature: sym::platform_intrinsics,\n+            explain: \"platform intrinsics are experimental and possibly buggy\",\n+        }),\n+        \"vectorcall\" => Err(AbiDisabled::Unstable {\n+            feature: sym::abi_vectorcall,\n+            explain: \"vectorcall is experimental and subject to change\",\n+        }),\n+        \"thiscall\" => Err(AbiDisabled::Unstable {\n+            feature: sym::abi_thiscall,\n+            explain: \"thiscall is experimental and subject to change\",\n+        }),\n+        \"rust-call\" => Err(AbiDisabled::Unstable {\n+            feature: sym::unboxed_closures,\n+            explain: \"rust-call ABI is subject to change\",\n+        }),\n+        \"rust-cold\" => Err(AbiDisabled::Unstable {\n+            feature: sym::rust_cold_cc,\n+            explain: \"rust-cold is experimental and subject to change\",\n+        }),\n+        \"ptx-kernel\" => Err(AbiDisabled::Unstable {\n+            feature: sym::abi_ptx,\n+            explain: \"PTX ABIs are experimental and subject to change\",\n+        }),\n+        \"unadjusted\" => Err(AbiDisabled::Unstable {\n+            feature: sym::abi_unadjusted,\n+            explain: \"unadjusted ABI is an implementation detail and perma-unstable\",\n+        }),\n+        \"msp430-interrupt\" => Err(AbiDisabled::Unstable {\n+            feature: sym::abi_msp430_interrupt,\n+            explain: \"msp430-interrupt ABI is experimental and subject to change\",\n+        }),\n+        \"x86-interrupt\" => Err(AbiDisabled::Unstable {\n+            feature: sym::abi_x86_interrupt,\n+            explain: \"x86-interrupt ABI is experimental and subject to change\",\n+        }),\n+        \"amdgpu-kernel\" => Err(AbiDisabled::Unstable {\n+            feature: sym::abi_amdgpu_kernel,\n+            explain: \"amdgpu-kernel ABI is experimental and subject to change\",\n+        }),\n+        \"avr-interrupt\" | \"avr-non-blocking-interrupt\" => Err(AbiDisabled::Unstable {\n+            feature: sym::abi_avr_interrupt,\n+            explain: \"avr-interrupt and avr-non-blocking-interrupt ABIs are experimental and subject to change\",\n+        }),\n+        \"efiapi\" => Err(AbiDisabled::Unstable {\n+            feature: sym::abi_efiapi,\n+            explain: \"efiapi ABI is experimental and subject to change\",\n+        }),\n+        \"C-cmse-nonsecure-call\" => Err(AbiDisabled::Unstable {\n+            feature: sym::abi_c_cmse_nonsecure_call,\n+            explain: \"C-cmse-nonsecure-call ABI is experimental and subject to change\",\n+        }),\n+        \"C-unwind\" => Err(AbiDisabled::Unstable {\n+            feature: sym::c_unwind,\n+            explain: \"C-unwind ABI is experimental and subject to change\",\n+        }),\n+        \"stdcall-unwind\" => Err(AbiDisabled::Unstable {\n+            feature: sym::c_unwind,\n+            explain: \"stdcall-unwind ABI is experimental and subject to change\",\n+        }),\n+        \"system-unwind\" => Err(AbiDisabled::Unstable {\n+            feature: sym::c_unwind,\n+            explain: \"system-unwind ABI is experimental and subject to change\",\n+        }),\n+        \"thiscall-unwind\" => Err(AbiDisabled::Unstable {\n+            feature: sym::c_unwind,\n+            explain: \"thiscall-unwind ABI is experimental and subject to change\",\n+        }),\n+        \"cdecl-unwind\" => Err(AbiDisabled::Unstable {\n+            feature: sym::c_unwind,\n+            explain: \"cdecl-unwind ABI is experimental and subject to change\",\n+        }),\n+        \"fastcall-unwind\" => Err(AbiDisabled::Unstable {\n+            feature: sym::c_unwind,\n+            explain: \"fastcall-unwind ABI is experimental and subject to change\",\n+        }),\n+        \"vectorcall-unwind\" => Err(AbiDisabled::Unstable {\n+            feature: sym::c_unwind,\n+            explain: \"vectorcall-unwind ABI is experimental and subject to change\",\n+        }),\n+        \"aapcs-unwind\" => Err(AbiDisabled::Unstable {\n+            feature: sym::c_unwind,\n+            explain: \"aapcs-unwind ABI is experimental and subject to change\",\n+        }),\n+        \"win64-unwind\" => Err(AbiDisabled::Unstable {\n+            feature: sym::c_unwind,\n+            explain: \"win64-unwind ABI is experimental and subject to change\",\n+        }),\n+        \"sysv64-unwind\" => Err(AbiDisabled::Unstable {\n+            feature: sym::c_unwind,\n+            explain: \"sysv64-unwind ABI is experimental and subject to change\",\n+        }),\n+        \"wasm\" => Err(AbiDisabled::Unstable {\n+            feature: sym::wasm_abi,\n+            explain: \"wasm ABI is experimental and subject to change\",\n+        }),\n         _ => Err(AbiDisabled::Unrecognized),\n     }\n }"}, {"sha": "eec74b2675a1e3dfb10eb2fbe2d287821fdd4286", "filename": "src/bootstrap/tool.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/57781b24c54f9548722927ba88c343ff28da94ce/src%2Fbootstrap%2Ftool.rs", "raw_url": "https://github.com/rust-lang/rust/raw/57781b24c54f9548722927ba88c343ff28da94ce/src%2Fbootstrap%2Ftool.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Ftool.rs?ref=57781b24c54f9548722927ba88c343ff28da94ce", "patch": "@@ -698,7 +698,7 @@ pub struct RustAnalyzer {\n impl Step for RustAnalyzer {\n     type Output = Option<PathBuf>;\n     const DEFAULT: bool = true;\n-    const ONLY_HOSTS: bool = false;\n+    const ONLY_HOSTS: bool = true;\n \n     fn should_run(run: ShouldRun<'_>) -> ShouldRun<'_> {\n         let builder = run.builder;\n@@ -742,7 +742,7 @@ pub struct RustAnalyzerProcMacroSrv {\n impl Step for RustAnalyzerProcMacroSrv {\n     type Output = Option<PathBuf>;\n     const DEFAULT: bool = true;\n-    const ONLY_HOSTS: bool = false;\n+    const ONLY_HOSTS: bool = true;\n \n     fn should_run(run: ShouldRun<'_>) -> ShouldRun<'_> {\n         let builder = run.builder;"}, {"sha": "cc96715b28572f89ccff9ea637c1fa51124e6a68", "filename": "src/ci/docker/host-x86_64/x86_64-gnu-tools/browser-ui-test.version", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/57781b24c54f9548722927ba88c343ff28da94ce/src%2Fci%2Fdocker%2Fhost-x86_64%2Fx86_64-gnu-tools%2Fbrowser-ui-test.version", "raw_url": "https://github.com/rust-lang/rust/raw/57781b24c54f9548722927ba88c343ff28da94ce/src%2Fci%2Fdocker%2Fhost-x86_64%2Fx86_64-gnu-tools%2Fbrowser-ui-test.version", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fhost-x86_64%2Fx86_64-gnu-tools%2Fbrowser-ui-test.version?ref=57781b24c54f9548722927ba88c343ff28da94ce", "patch": "@@ -1 +1 @@\n-0.12.6\n\\ No newline at end of file\n+0.12.7\n\\ No newline at end of file"}, {"sha": "eeec6f8fee7786f0eebe53520149afc3e900a8a9", "filename": "src/librustdoc/html/render/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/57781b24c54f9548722927ba88c343ff28da94ce/src%2Flibrustdoc%2Fhtml%2Frender%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/57781b24c54f9548722927ba88c343ff28da94ce/src%2Flibrustdoc%2Fhtml%2Frender%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Frender%2Fmod.rs?ref=57781b24c54f9548722927ba88c343ff28da94ce", "patch": "@@ -1884,7 +1884,7 @@ fn print_sidebar(cx: &Context<'_>, it: &clean::Item, buffer: &mut Buffer) {\n     if !it.is_mod() {\n         let path: String = cx.current.iter().map(|s| s.as_str()).intersperse(\"::\").collect();\n \n-        write!(buffer, \"<h2 class=\\\"location\\\"><a href=\\\"index.html\\\">In {}</a></h2>\", path);\n+        write!(buffer, \"<h2><a href=\\\"index.html\\\">In {}</a></h2>\", path);\n     }\n \n     // Closes sidebar-elems div."}, {"sha": "4a0b583054fb8737d03564a93fd81506fd0448da", "filename": "src/librustdoc/html/static/css/rustdoc.css", "status": "modified", "additions": 18, "deletions": 44, "changes": 62, "blob_url": "https://github.com/rust-lang/rust/blob/57781b24c54f9548722927ba88c343ff28da94ce/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fcss%2Frustdoc.css", "raw_url": "https://github.com/rust-lang/rust/raw/57781b24c54f9548722927ba88c343ff28da94ce/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fcss%2Frustdoc.css", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fcss%2Frustdoc.css?ref=57781b24c54f9548722927ba88c343ff28da94ce", "patch": "@@ -171,7 +171,7 @@ h1.fqn {\n \t Rustdoc-generated h2 section headings (e.g. \"Implementations\", \"Required Methods\", etc)\n \tUnderlines elsewhere in the documentation break up visual flow and tend to invert\n \tsection hierarchies. */\n-h2,\n+.content h2,\n .top-doc .docblock > h3,\n .top-doc .docblock > h4 {\n \tborder-bottom: 1px solid var(--headings-border-bottom-color);\n@@ -397,15 +397,6 @@ img {\n \tleft: 0;\n }\n \n-.sidebar-elems,\n-.sidebar > .location {\n-\tpadding-left: 24px;\n-}\n-\n-.sidebar .location {\n-\toverflow-wrap: anywhere;\n-}\n-\n .rustdoc.source .sidebar {\n \twidth: 50px;\n \tmin-width: 0px;\n@@ -505,8 +496,8 @@ ul.block, .block li {\n }\n \n .block a,\n-.sidebar h3 a,\n-h2.location a {\n+.sidebar h2 a,\n+.sidebar h3 a {\n \tdisplay: block;\n \tpadding: 0.25rem;\n \tmargin-left: -0.25rem;\n@@ -516,8 +507,7 @@ h2.location a {\n }\n \n .sidebar h2 {\n-\tborder-bottom: none;\n-\tfont-weight: 500;\n+\toverflow-wrap: anywhere;\n \tpadding: 0;\n \tmargin: 0;\n \tmargin-top: 0.7rem;\n@@ -526,11 +516,15 @@ h2.location a {\n \n .sidebar h3 {\n \tfont-size: 1.125rem; /* 18px */\n-\tfont-weight: 500;\n \tpadding: 0;\n \tmargin: 0;\n }\n \n+.sidebar-elems,\n+.sidebar > h2 {\n+\tpadding-left: 24px;\n+}\n+\n .sidebar a, .sidebar .current {\n \tcolor: var(--sidebar-link-color);\n }\n@@ -1474,25 +1468,6 @@ h3.variant {\n \tanimation: rotating 2s linear infinite;\n }\n \n-.setting-line .radio-line input:checked {\n-\tbox-shadow: inset 0 0 0 3px var(--main-background-color);\n-\tbackground-color: var(--settings-input-color);\n-}\n-.setting-line .radio-line input:focus {\n-\tbox-shadow: 0 0 1px 1px var(--settings-input-color);\n-}\n-/* In here we combine both `:focus` and `:checked` properties. */\n-.setting-line .radio-line input:checked:focus {\n-\tbox-shadow: inset 0 0 0 3px var(--main-background-color),\n-\t\t0 0 2px 2px var(--settings-input-color);\n-}\n-.setting-line .radio-line input:hover {\n-\tborder-color: var(--settings-input-color) !important;\n-}\n-input:checked + .slider {\n-\tbackground-color: var(--settings-input-color);\n-}\n-\n #help-button > a {\n \ttext-align: center;\n \t/* Rare exception to specifying font sizes in rem. Since this is acting\n@@ -1788,25 +1763,24 @@ in storage.js\n \t\twidth: 0;\n \t}\n \n-\t.mobile-topbar .location a {\n-\t\tpadding: 0;\n-\t\tmargin: 0;\n-\t}\n-\n-\t.mobile-topbar .location {\n-\t\tborder: none;\n-\t\tpadding: 0;\n+\t.mobile-topbar h2 {\n+\t\tpadding-bottom: 0;\n \t\tmargin: auto 0.5em auto auto;\n-\t\ttext-overflow: ellipsis;\n \t\toverflow: hidden;\n-\t\twhite-space: nowrap;\n \t\t/* Rare exception to specifying font sizes in rem. Since the topbar\n \t\t   height is specified in pixels, this also has to be specified in\n \t\t   pixels to avoid overflowing the topbar when the user sets a bigger\n \t\t   font size. */\n \t\tfont-size: 24px;\n \t}\n \n+\t.mobile-topbar h2 a {\n+\t\tdisplay: block;\n+\t\ttext-overflow: ellipsis;\n+\t\toverflow: hidden;\n+\t\twhite-space: nowrap;\n+\t}\n+\n \t.mobile-topbar .logo-container {\n \t\tmax-height: 45px;\n \t}"}, {"sha": "83939f63b4e852e672dfc5837b25ac32ac604c81", "filename": "src/librustdoc/html/static/css/settings.css", "status": "modified", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/57781b24c54f9548722927ba88c343ff28da94ce/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fcss%2Fsettings.css", "raw_url": "https://github.com/rust-lang/rust/raw/57781b24c54f9548722927ba88c343ff28da94ce/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fcss%2Fsettings.css", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fcss%2Fsettings.css?ref=57781b24c54f9548722927ba88c343ff28da94ce", "patch": "@@ -89,3 +89,22 @@ input:checked + .slider:before {\n #settings .setting-line {\n \tmargin: 1.2em 0.6em;\n }\n+\n+.setting-line .radio-line input:checked {\n+\tbox-shadow: inset 0 0 0 3px var(--main-background-color);\n+\tbackground-color: var(--settings-input-color);\n+}\n+.setting-line .radio-line input:focus {\n+\tbox-shadow: 0 0 1px 1px var(--settings-input-color);\n+}\n+/* In here we combine both `:focus` and `:checked` properties. */\n+.setting-line .radio-line input:checked:focus {\n+\tbox-shadow: inset 0 0 0 3px var(--main-background-color),\n+\t\t0 0 2px 2px var(--settings-input-color);\n+}\n+.setting-line .radio-line input:hover {\n+\tborder-color: var(--settings-input-color) !important;\n+}\n+input:checked + .slider {\n+\tbackground-color: var(--settings-input-color);\n+}"}, {"sha": "d8f4bc2db22e18700b46e5d129a5acf306f51cc6", "filename": "src/librustdoc/html/static/js/main.js", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/57781b24c54f9548722927ba88c343ff28da94ce/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fjs%2Fmain.js", "raw_url": "https://github.com/rust-lang/rust/raw/57781b24c54f9548722927ba88c343ff28da94ce/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fjs%2Fmain.js", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fjs%2Fmain.js?ref=57781b24c54f9548722927ba88c343ff28da94ce", "patch": "@@ -55,7 +55,7 @@ function blurHandler(event, parentElem, hideCallback) {\n function setMobileTopbar() {\n     // FIXME: It would be nicer to generate this text content directly in HTML,\n     // but with the current code it's hard to get the right information in the right place.\n-    const mobileLocationTitle = document.querySelector(\".mobile-topbar h2.location\");\n+    const mobileLocationTitle = document.querySelector(\".mobile-topbar h2\");\n     const locationTitle = document.querySelector(\".sidebar h2.location\");\n     if (mobileLocationTitle && locationTitle) {\n         mobileLocationTitle.innerHTML = locationTitle.innerHTML;"}, {"sha": "20a314a1c00e3d628206abcdc30d838d85baa38e", "filename": "src/librustdoc/html/templates/page.html", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/57781b24c54f9548722927ba88c343ff28da94ce/src%2Flibrustdoc%2Fhtml%2Ftemplates%2Fpage.html", "raw_url": "https://github.com/rust-lang/rust/raw/57781b24c54f9548722927ba88c343ff28da94ce/src%2Flibrustdoc%2Fhtml%2Ftemplates%2Fpage.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Ftemplates%2Fpage.html?ref=57781b24c54f9548722927ba88c343ff28da94ce", "patch": "@@ -85,7 +85,7 @@\n             {%- endif -%}\n             </div> {#- -#}\n         </a> {#- -#}\n-        <h2 class=\"location\"></h2> {#- -#}\n+        <h2></h2> {#- -#}\n     </nav> {#- -#}\n     {%- endif -%}\n     <nav class=\"sidebar\"> {#- -#}"}, {"sha": "8e681a2a0c3a35513379e8b184e7cb306d4f48e9", "filename": "src/test/rustdoc-gui/codeblock-tooltip.goml", "status": "modified", "additions": 76, "deletions": 92, "changes": 168, "blob_url": "https://github.com/rust-lang/rust/blob/57781b24c54f9548722927ba88c343ff28da94ce/src%2Ftest%2Frustdoc-gui%2Fcodeblock-tooltip.goml", "raw_url": "https://github.com/rust-lang/rust/raw/57781b24c54f9548722927ba88c343ff28da94ce/src%2Ftest%2Frustdoc-gui%2Fcodeblock-tooltip.goml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-gui%2Fcodeblock-tooltip.goml?ref=57781b24c54f9548722927ba88c343ff28da94ce", "patch": "@@ -2,95 +2,79 @@\n goto: \"file://\" + |DOC_PATH| + \"/test_docs/fn.foo.html\"\n show-text: true\n \n-// Dark theme.\n-local-storage: {\"rustdoc-theme\": \"dark\", \"rustdoc-use-system-theme\": \"false\"}\n-reload:\n-\n-// compile_fail block\n-assert-css: (\".docblock .example-wrap.compile_fail .tooltip\", {\"color\": \"rgba(255, 0, 0, 0.5)\"})\n-assert-css: (\".docblock .example-wrap.compile_fail\", {\"border-left\": \"2px solid rgba(255, 0, 0, 0.5)\"})\n-\n-move-cursor-to: \".docblock .example-wrap.compile_fail\"\n-\n-assert-css: (\".docblock .example-wrap.compile_fail .tooltip\", {\"color\": \"rgb(255, 0, 0)\"})\n-assert-css: (\".docblock .example-wrap.compile_fail\", {\"border-left\": \"2px solid rgb(255, 0, 0)\"})\n-\n-// should_panic block\n-assert-css: (\".docblock .example-wrap.should_panic .tooltip\", {\"color\": \"rgba(255, 0, 0, 0.5)\"})\n-assert-css: (\".docblock .example-wrap.should_panic\", {\"border-left\": \"2px solid rgba(255, 0, 0, 0.5)\"})\n-\n-move-cursor-to: \".docblock .example-wrap.should_panic\"\n-\n-assert-css: (\".docblock .example-wrap.should_panic .tooltip\", {\"color\": \"rgb(255, 0, 0)\"})\n-assert-css: (\".docblock .example-wrap.should_panic\", {\"border-left\": \"2px solid rgb(255, 0, 0)\"})\n-\n-// ignore block\n-assert-css: (\".docblock .example-wrap.ignore .tooltip\", {\"color\": \"rgba(255, 142, 0, 0.6)\"})\n-assert-css: (\".docblock .example-wrap.ignore\", {\"border-left\": \"2px solid rgba(255, 142, 0, 0.6)\"})\n-\n-move-cursor-to: \".docblock .example-wrap.ignore\"\n-\n-assert-css: (\".docblock .example-wrap.ignore .tooltip\", {\"color\": \"rgb(255, 142, 0)\"})\n-assert-css: (\".docblock .example-wrap.ignore\", {\"border-left\": \"2px solid rgb(255, 142, 0)\"})\n-\n-\n-// Light theme.\n-local-storage: {\"rustdoc-theme\": \"light\"}\n-reload:\n-\n-assert-css: (\".docblock .example-wrap.compile_fail .tooltip\", {\"color\": \"rgba(255, 0, 0, 0.5)\"})\n-assert-css: (\".docblock .example-wrap.compile_fail\", {\"border-left\": \"2px solid rgba(255, 0, 0, 0.5)\"})\n-\n-move-cursor-to: \".docblock .example-wrap.compile_fail\"\n-\n-assert-css: (\".docblock .example-wrap.compile_fail .tooltip\", {\"color\": \"rgb(255, 0, 0)\"})\n-assert-css: (\".docblock .example-wrap.compile_fail\", {\"border-left\": \"2px solid rgb(255, 0, 0)\"})\n-\n-// should_panic block\n-assert-css: (\".docblock .example-wrap.should_panic .tooltip\", {\"color\": \"rgba(255, 0, 0, 0.5)\"})\n-assert-css: (\".docblock .example-wrap.should_panic\", {\"border-left\": \"2px solid rgba(255, 0, 0, 0.5)\"})\n-\n-move-cursor-to: \".docblock .example-wrap.should_panic\"\n-\n-assert-css: (\".docblock .example-wrap.should_panic .tooltip\", {\"color\": \"rgb(255, 0, 0)\"})\n-assert-css: (\".docblock .example-wrap.should_panic\", {\"border-left\": \"2px solid rgb(255, 0, 0)\"})\n-\n-// ignore block\n-assert-css: (\".docblock .example-wrap.ignore .tooltip\", {\"color\": \"rgba(255, 142, 0, 0.6)\"})\n-assert-css: (\".docblock .example-wrap.ignore\", {\"border-left\": \"2px solid rgba(255, 142, 0, 0.6)\"})\n-\n-move-cursor-to: \".docblock .example-wrap.ignore\"\n-\n-assert-css: (\".docblock .example-wrap.ignore .tooltip\", {\"color\": \"rgb(255, 142, 0)\"})\n-assert-css: (\".docblock .example-wrap.ignore\", {\"border-left\": \"2px solid rgb(255, 142, 0)\"})\n-\n-\n-// Ayu theme.\n-local-storage: {\"rustdoc-theme\": \"ayu\"}\n-reload:\n-\n-assert-css: (\".docblock .example-wrap.compile_fail .tooltip\", {\"color\": \"rgba(255, 0, 0, 0.5)\"})\n-assert-css: (\".docblock .example-wrap.compile_fail\", {\"border-left\": \"2px solid rgba(255, 0, 0, 0.5)\"})\n-\n-move-cursor-to: \".docblock .example-wrap.compile_fail\"\n-\n-assert-css: (\".docblock .example-wrap.compile_fail .tooltip\", {\"color\": \"rgb(255, 0, 0)\"})\n-assert-css: (\".docblock .example-wrap.compile_fail\", {\"border-left\": \"2px solid rgb(255, 0, 0)\"})\n-\n-// should_panic block\n-assert-css: (\".docblock .example-wrap.should_panic .tooltip\", {\"color\": \"rgba(255, 0, 0, 0.5)\"})\n-assert-css: (\".docblock .example-wrap.should_panic\", {\"border-left\": \"2px solid rgba(255, 0, 0, 0.5)\"})\n-\n-move-cursor-to: \".docblock .example-wrap.should_panic\"\n-\n-assert-css: (\".docblock .example-wrap.should_panic .tooltip\", {\"color\": \"rgb(255, 0, 0)\"})\n-assert-css: (\".docblock .example-wrap.should_panic\", {\"border-left\": \"2px solid rgb(255, 0, 0)\"})\n-\n-// ignore block\n-assert-css: (\".docblock .example-wrap.ignore .tooltip\", {\"color\": \"rgba(255, 142, 0, 0.6)\"})\n-assert-css: (\".docblock .example-wrap.ignore\", {\"border-left\": \"2px solid rgba(255, 142, 0, 0.6)\"})\n-\n-move-cursor-to: \".docblock .example-wrap.ignore\"\n-\n-assert-css: (\".docblock .example-wrap.ignore .tooltip\", {\"color\": \"rgb(255, 142, 0)\"})\n-assert-css: (\".docblock .example-wrap.ignore\", {\"border-left\": \"2px solid rgb(255, 142, 0)\"})\n+define-function: (\n+    \"check-colors\",\n+    (theme),\n+    [\n+        // Setting the theme.\n+        (\"local-storage\", {\"rustdoc-theme\": |theme|, \"rustdoc-use-system-theme\": \"false\"}),\n+        (\"reload\"),\n+\n+        // compile_fail block\n+        (\"assert-css\", (\n+            \".docblock .example-wrap.compile_fail .tooltip\",\n+            {\"color\": \"rgba(255, 0, 0, 0.5)\"},\n+        )),\n+        (\"assert-css\", (\n+            \".docblock .example-wrap.compile_fail\",\n+            {\"border-left\": \"2px solid rgba(255, 0, 0, 0.5)\"},\n+        )),\n+\n+        (\"move-cursor-to\", \".docblock .example-wrap.compile_fail\"),\n+\n+        (\"assert-css\", (\n+            \".docblock .example-wrap.compile_fail .tooltip\",\n+            {\"color\": \"rgb(255, 0, 0)\"},\n+        )),\n+        (\"assert-css\", (\n+            \".docblock .example-wrap.compile_fail\",\n+            {\"border-left\": \"2px solid rgb(255, 0, 0)\"},\n+        )),\n+\n+        // should_panic block\n+        (\"assert-css\", (\n+            \".docblock .example-wrap.should_panic .tooltip\",\n+            {\"color\": \"rgba(255, 0, 0, 0.5)\"},\n+        )),\n+        (\"assert-css\", (\n+            \".docblock .example-wrap.should_panic\",\n+            {\"border-left\": \"2px solid rgba(255, 0, 0, 0.5)\"},\n+        )),\n+\n+        (\"move-cursor-to\", \".docblock .example-wrap.should_panic\"),\n+\n+        (\"assert-css\", (\n+            \".docblock .example-wrap.should_panic .tooltip\",\n+            {\"color\": \"rgb(255, 0, 0)\"},\n+        )),\n+        (\"assert-css\", (\n+            \".docblock .example-wrap.should_panic\",\n+            {\"border-left\": \"2px solid rgb(255, 0, 0)\"},\n+        )),\n+\n+        // ignore block\n+        (\"assert-css\", (\n+            \".docblock .example-wrap.ignore .tooltip\",\n+            {\"color\": \"rgba(255, 142, 0, 0.6)\"},\n+        )),\n+        (\"assert-css\", (\n+            \".docblock .example-wrap.ignore\",\n+            {\"border-left\": \"2px solid rgba(255, 142, 0, 0.6)\"},\n+        )),\n+\n+        (\"move-cursor-to\", \".docblock .example-wrap.ignore\"),\n+\n+        (\"assert-css\", (\n+            \".docblock .example-wrap.ignore .tooltip\",\n+            {\"color\": \"rgb(255, 142, 0)\"},\n+        )),\n+        (\"assert-css\", (\n+            \".docblock .example-wrap.ignore\",\n+            {\"border-left\": \"2px solid rgb(255, 142, 0)\"},\n+        )),\n+    ],\n+)\n+\n+call-function: (\"check-colors\", (\"ayu\"))\n+call-function: (\"check-colors\", (\"dark\"))\n+call-function: (\"check-colors\", (\"light\"))"}, {"sha": "704542a39d21b5678c50f3227306c0ab4842cda0", "filename": "src/test/rustdoc-gui/mobile.goml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/57781b24c54f9548722927ba88c343ff28da94ce/src%2Ftest%2Frustdoc-gui%2Fmobile.goml", "raw_url": "https://github.com/rust-lang/rust/raw/57781b24c54f9548722927ba88c343ff28da94ce/src%2Ftest%2Frustdoc-gui%2Fmobile.goml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-gui%2Fmobile.goml?ref=57781b24c54f9548722927ba88c343ff28da94ce", "patch": "@@ -12,7 +12,7 @@ assert-css: (\".main-heading\", {\n   \"flex-direction\": \"column\"\n })\n \n-assert-property: (\".mobile-topbar h2.location\", {\"offsetHeight\": 36})\n+assert-property: (\".mobile-topbar h2\", {\"offsetHeight\": 36})\n \n // Note: We can't use assert-text here because the 'Since' is set by CSS and\n // is therefore not part of the DOM."}, {"sha": "453873f1b81b6f36270e0f751bd7511d1fb797e8", "filename": "src/test/rustdoc-gui/sidebar-mobile.goml", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/57781b24c54f9548722927ba88c343ff28da94ce/src%2Ftest%2Frustdoc-gui%2Fsidebar-mobile.goml", "raw_url": "https://github.com/rust-lang/rust/raw/57781b24c54f9548722927ba88c343ff28da94ce/src%2Ftest%2Frustdoc-gui%2Fsidebar-mobile.goml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-gui%2Fsidebar-mobile.goml?ref=57781b24c54f9548722927ba88c343ff28da94ce", "patch": "@@ -23,6 +23,11 @@ assert-css: (\".sidebar\", {\"display\": \"block\", \"left\": \"-1000px\"})\n click: \".sidebar-menu-toggle\"\n assert-css: (\".sidebar\", {\"left\": \"0px\"})\n \n+// Make sure the \"struct Foo\" header is hidden, since the mobile topbar already does it.\n+assert-css: (\"//nav[contains(@class, 'sidebar')]//h2/a[text()='Foo']/parent::h2\", {\"display\": \"none\"})\n+// Make sure the global navigation is still here.\n+assert-css: (\"//nav[contains(@class, 'sidebar')]//h2/a[text()='In test_docs']/parent::h2\", {\"display\": \"block\"})\n+\n // Click elsewhere.\n click: \"body\"\n assert-css: (\".sidebar\", {\"display\": \"block\", \"left\": \"-1000px\"})\n@@ -39,7 +44,7 @@ assert-position: (\"#method\\.must_use\", {\"y\": 45})\n // Check that the bottom-most item on the sidebar menu can be scrolled fully into view.\n click: \".sidebar-menu-toggle\"\n scroll-to: \".block.keyword li:nth-child(1)\"\n-compare-elements-position-near: (\".block.keyword li:nth-child(1)\", \".mobile-topbar\", {\"y\": 543})\n+compare-elements-position-near: (\".block.keyword li:nth-child(1)\", \".mobile-topbar\", {\"y\": 543.19})\n \n // Now checking the background color of the sidebar.\n show-text: true"}, {"sha": "c92561b0de14fd182ed1030823cb3cb03894063f", "filename": "src/test/rustdoc-gui/sidebar.goml", "status": "modified", "additions": 8, "deletions": 5, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/57781b24c54f9548722927ba88c343ff28da94ce/src%2Ftest%2Frustdoc-gui%2Fsidebar.goml", "raw_url": "https://github.com/rust-lang/rust/raw/57781b24c54f9548722927ba88c343ff28da94ce/src%2Ftest%2Frustdoc-gui%2Fsidebar.goml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-gui%2Fsidebar.goml?ref=57781b24c54f9548722927ba88c343ff28da94ce", "patch": "@@ -9,6 +9,7 @@ reload:\n assert-text: (\".sidebar > .location\", \"Crate test_docs\")\n // In modules, we only have one \"location\" element.\n assert-count: (\".sidebar .location\", 1)\n+assert-count: (\".sidebar h2\", 1)\n assert-text: (\"#all-types\", \"All Items\")\n assert-css: (\"#all-types\", {\"color\": \"rgb(53, 109, 164)\"})\n // We check that we have the crates list and that the \"current\" on is \"test_docs\".\n@@ -28,7 +29,8 @@ assert-text: (\"#structs + .item-table .item-left > a\", \"Foo\")\n click: \"#structs + .item-table .item-left > a\"\n \n // PAGE: struct.Foo.html\n-assert-count: (\".sidebar .location\", 2)\n+assert-count: (\".sidebar .location\", 1)\n+assert-count: (\".sidebar h2\", 2)\n // We check that there is no crate listed outside of the top level.\n assert-false: \".sidebar-elems > .crate\"\n \n@@ -60,10 +62,11 @@ assert-text: (\"#functions + .item-table .item-left > a\", \"foobar\")\n click: \"#functions + .item-table .item-left > a\"\n \n // PAGE: fn.foobar.html\n-// In items containing no items (like functions or constants) and in modules, we have one\n-// \"location\" elements.\n-assert-count: (\".sidebar .location\", 1)\n-assert-text: (\".sidebar .sidebar-elems .location\", \"In lib2\")\n+// In items containing no items (like functions or constants) and in modules, we have no\n+// \"location\" elements. Only the parent module h2.\n+assert-count: (\".sidebar .location\", 0)\n+assert-count: (\".sidebar h2\", 1)\n+assert-text: (\".sidebar .sidebar-elems h2\", \"In lib2\")\n // We check that we don't have the crate list.\n assert-false: \".sidebar-elems > .crate\"\n "}, {"sha": "fce3002e7508f89d1f4fe0f5b7f9377d9498c67a", "filename": "src/test/rustdoc-gui/type-declation-overflow.goml", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/57781b24c54f9548722927ba88c343ff28da94ce/src%2Ftest%2Frustdoc-gui%2Ftype-declation-overflow.goml", "raw_url": "https://github.com/rust-lang/rust/raw/57781b24c54f9548722927ba88c343ff28da94ce/src%2Ftest%2Frustdoc-gui%2Ftype-declation-overflow.goml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-gui%2Ftype-declation-overflow.goml?ref=57781b24c54f9548722927ba88c343ff28da94ce", "patch": "@@ -32,6 +32,6 @@ assert-property: (\".item-decl pre\", {\"scrollWidth\": \"950\"})\n size: (600, 600)\n goto: \"file://\" + |DOC_PATH| + \"/lib2/too_long/struct.SuperIncrediblyLongLongLongLongLongLongLongGigaGigaGigaMegaLongLongLongStructName.html\"\n // It shouldn't have an overflow in the topbar either.\n-store-property: (scrollWidth, \".mobile-topbar .location\", \"scrollWidth\")\n-assert-property: (\".mobile-topbar .location\", {\"clientWidth\": |scrollWidth|})\n-assert-css: (\".mobile-topbar .location\", {\"overflow-x\": \"hidden\"})\n+store-property: (scrollWidth, \".mobile-topbar h2\", \"scrollWidth\")\n+assert-property: (\".mobile-topbar h2\", {\"clientWidth\": |scrollWidth|})\n+assert-css: (\".mobile-topbar h2\", {\"overflow-x\": \"hidden\"})"}, {"sha": "0c771ae87953c4ef24f9135430681def9f7937ac", "filename": "src/test/ui/stability-attribute/stability-attribute-trait-impl.rs", "status": "modified", "additions": 15, "deletions": 1, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/57781b24c54f9548722927ba88c343ff28da94ce/src%2Ftest%2Fui%2Fstability-attribute%2Fstability-attribute-trait-impl.rs", "raw_url": "https://github.com/rust-lang/rust/raw/57781b24c54f9548722927ba88c343ff28da94ce/src%2Ftest%2Fui%2Fstability-attribute%2Fstability-attribute-trait-impl.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fstability-attribute%2Fstability-attribute-trait-impl.rs?ref=57781b24c54f9548722927ba88c343ff28da94ce", "patch": "@@ -1,4 +1,4 @@\n-#![feature(staged_api)]\n+#![feature(staged_api, never_type, c_unwind)]\n //~^ ERROR module has missing stability attribute\n \n #[stable(feature = \"a\", since = \"1\")]\n@@ -23,7 +23,21 @@ impl StableTrait for UnstableType {}\n impl UnstableTrait for StableType {}\n \n #[unstable(feature = \"h\", issue = \"none\")]\n+impl StableTrait for ! {}\n+\n+// Note: If C-unwind is stabilized, switch this to another (unstable) ABI.\n+#[unstable(feature = \"i\", issue = \"none\")]\n+impl StableTrait for extern \"C-unwind\" fn() {}\n+\n+#[unstable(feature = \"j\", issue = \"none\")]\n //~^ ERROR an `#[unstable]` annotation here has no effect [ineffective_unstable_trait_impl]\n impl StableTrait for StableType {}\n \n+#[unstable(feature = \"k\", issue = \"none\")]\n+//~^ ERROR an `#[unstable]` annotation here has no effect [ineffective_unstable_trait_impl]\n+impl StableTrait for fn() -> ! {}\n+\n+#[unstable(feature = \"l\", issue = \"none\")]\n+impl StableTrait for fn() -> UnstableType {}\n+\n fn main() {}"}, {"sha": "b91a1d2e11a8a9c2dfc3785fb7903443078b8148", "filename": "src/test/ui/stability-attribute/stability-attribute-trait-impl.stderr", "status": "modified", "additions": 12, "deletions": 4, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/57781b24c54f9548722927ba88c343ff28da94ce/src%2Ftest%2Fui%2Fstability-attribute%2Fstability-attribute-trait-impl.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/57781b24c54f9548722927ba88c343ff28da94ce/src%2Ftest%2Fui%2Fstability-attribute%2Fstability-attribute-trait-impl.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fstability-attribute%2Fstability-attribute-trait-impl.stderr?ref=57781b24c54f9548722927ba88c343ff28da94ce", "patch": "@@ -1,16 +1,24 @@\n error: an `#[unstable]` annotation here has no effect\n-  --> $DIR/stability-attribute-trait-impl.rs:25:1\n+  --> $DIR/stability-attribute-trait-impl.rs:32:1\n    |\n-LL | #[unstable(feature = \"h\", issue = \"none\")]\n+LL | #[unstable(feature = \"j\", issue = \"none\")]\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: see issue #55436 <https://github.com/rust-lang/rust/issues/55436> for more information\n    = note: `#[deny(ineffective_unstable_trait_impl)]` on by default\n \n+error: an `#[unstable]` annotation here has no effect\n+  --> $DIR/stability-attribute-trait-impl.rs:36:1\n+   |\n+LL | #[unstable(feature = \"k\", issue = \"none\")]\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |\n+   = note: see issue #55436 <https://github.com/rust-lang/rust/issues/55436> for more information\n+\n error: module has missing stability attribute\n   --> $DIR/stability-attribute-trait-impl.rs:1:1\n    |\n-LL | / #![feature(staged_api)]\n+LL | / #![feature(staged_api, never_type, c_unwind)]\n LL | |\n LL | |\n LL | | #[stable(feature = \"a\", since = \"1\")]\n@@ -19,5 +27,5 @@ LL | |\n LL | | fn main() {}\n    | |____________^\n \n-error: aborting due to 2 previous errors\n+error: aborting due to 3 previous errors\n "}, {"sha": "80dfd683524ce627c11c2c219055ad256a94da29", "filename": "src/test/ui/typeck/slow-lhs-suggestion.rs", "status": "added", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/57781b24c54f9548722927ba88c343ff28da94ce/src%2Ftest%2Fui%2Ftypeck%2Fslow-lhs-suggestion.rs", "raw_url": "https://github.com/rust-lang/rust/raw/57781b24c54f9548722927ba88c343ff28da94ce/src%2Ftest%2Fui%2Ftypeck%2Fslow-lhs-suggestion.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftypeck%2Fslow-lhs-suggestion.rs?ref=57781b24c54f9548722927ba88c343ff28da94ce", "patch": "@@ -0,0 +1,26 @@\n+fn main() {\n+    1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1;\n+    //~^ ERROR invalid left-hand side of assignment\n+    //~| ERROR invalid left-hand side of assignment\n+    //~| ERROR invalid left-hand side of assignment\n+    //~| ERROR invalid left-hand side of assignment\n+    //~| ERROR invalid left-hand side of assignment\n+    //~| ERROR invalid left-hand side of assignment\n+    //~| ERROR invalid left-hand side of assignment\n+    //~| ERROR invalid left-hand side of assignment\n+    //~| ERROR invalid left-hand side of assignment\n+    //~| ERROR invalid left-hand side of assignment\n+    //~| ERROR invalid left-hand side of assignment\n+    //~| ERROR invalid left-hand side of assignment\n+    //~| ERROR invalid left-hand side of assignment\n+    //~| ERROR invalid left-hand side of assignment\n+    //~| ERROR invalid left-hand side of assignment\n+    //~| ERROR invalid left-hand side of assignment\n+    //~| ERROR invalid left-hand side of assignment\n+    //~| ERROR invalid left-hand side of assignment\n+    //~| ERROR invalid left-hand side of assignment\n+    //~| ERROR invalid left-hand side of assignment\n+    //~| ERROR invalid left-hand side of assignment\n+    //~| ERROR invalid left-hand side of assignment\n+    //~| ERROR invalid left-hand side of assignment\n+}"}, {"sha": "c5bf795eeee6acf939f2836b8ea649281372e777", "filename": "src/test/ui/typeck/slow-lhs-suggestion.stderr", "status": "added", "additions": 187, "deletions": 0, "changes": 187, "blob_url": "https://github.com/rust-lang/rust/blob/57781b24c54f9548722927ba88c343ff28da94ce/src%2Ftest%2Fui%2Ftypeck%2Fslow-lhs-suggestion.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/57781b24c54f9548722927ba88c343ff28da94ce/src%2Ftest%2Fui%2Ftypeck%2Fslow-lhs-suggestion.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftypeck%2Fslow-lhs-suggestion.stderr?ref=57781b24c54f9548722927ba88c343ff28da94ce", "patch": "@@ -0,0 +1,187 @@\n+error[E0070]: invalid left-hand side of assignment\n+  --> $DIR/slow-lhs-suggestion.rs:2:95\n+   |\n+LL |     1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1;\n+   |                                                                                             - ^\n+   |                                                                                             |\n+   |                                                                                             cannot assign to this expression\n+\n+error[E0070]: invalid left-hand side of assignment\n+  --> $DIR/slow-lhs-suggestion.rs:2:91\n+   |\n+LL |     1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1;\n+   |                                                                                         - ^\n+   |                                                                                         |\n+   |                                                                                         cannot assign to this expression\n+\n+error[E0070]: invalid left-hand side of assignment\n+  --> $DIR/slow-lhs-suggestion.rs:2:87\n+   |\n+LL |     1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1;\n+   |                                                                                     - ^\n+   |                                                                                     |\n+   |                                                                                     cannot assign to this expression\n+\n+error[E0070]: invalid left-hand side of assignment\n+  --> $DIR/slow-lhs-suggestion.rs:2:83\n+   |\n+LL |     1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1;\n+   |                                                                                 - ^\n+   |                                                                                 |\n+   |                                                                                 cannot assign to this expression\n+\n+error[E0070]: invalid left-hand side of assignment\n+  --> $DIR/slow-lhs-suggestion.rs:2:79\n+   |\n+LL |     1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1;\n+   |                                                                             - ^\n+   |                                                                             |\n+   |                                                                             cannot assign to this expression\n+\n+error[E0070]: invalid left-hand side of assignment\n+  --> $DIR/slow-lhs-suggestion.rs:2:75\n+   |\n+LL |     1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1;\n+   |                                                                         - ^\n+   |                                                                         |\n+   |                                                                         cannot assign to this expression\n+\n+error[E0070]: invalid left-hand side of assignment\n+  --> $DIR/slow-lhs-suggestion.rs:2:71\n+   |\n+LL |     1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1;\n+   |                                                                     - ^\n+   |                                                                     |\n+   |                                                                     cannot assign to this expression\n+\n+error[E0070]: invalid left-hand side of assignment\n+  --> $DIR/slow-lhs-suggestion.rs:2:67\n+   |\n+LL |     1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1;\n+   |                                                                 - ^\n+   |                                                                 |\n+   |                                                                 cannot assign to this expression\n+\n+error[E0070]: invalid left-hand side of assignment\n+  --> $DIR/slow-lhs-suggestion.rs:2:63\n+   |\n+LL |     1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1;\n+   |                                                             - ^\n+   |                                                             |\n+   |                                                             cannot assign to this expression\n+\n+error[E0070]: invalid left-hand side of assignment\n+  --> $DIR/slow-lhs-suggestion.rs:2:59\n+   |\n+LL |     1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1;\n+   |                                                         - ^\n+   |                                                         |\n+   |                                                         cannot assign to this expression\n+\n+error[E0070]: invalid left-hand side of assignment\n+  --> $DIR/slow-lhs-suggestion.rs:2:55\n+   |\n+LL |     1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1;\n+   |                                                     - ^\n+   |                                                     |\n+   |                                                     cannot assign to this expression\n+\n+error[E0070]: invalid left-hand side of assignment\n+  --> $DIR/slow-lhs-suggestion.rs:2:51\n+   |\n+LL |     1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1;\n+   |                                                 - ^\n+   |                                                 |\n+   |                                                 cannot assign to this expression\n+\n+error[E0070]: invalid left-hand side of assignment\n+  --> $DIR/slow-lhs-suggestion.rs:2:47\n+   |\n+LL |     1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1;\n+   |                                             - ^\n+   |                                             |\n+   |                                             cannot assign to this expression\n+\n+error[E0070]: invalid left-hand side of assignment\n+  --> $DIR/slow-lhs-suggestion.rs:2:43\n+   |\n+LL |     1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1;\n+   |                                         - ^\n+   |                                         |\n+   |                                         cannot assign to this expression\n+\n+error[E0070]: invalid left-hand side of assignment\n+  --> $DIR/slow-lhs-suggestion.rs:2:39\n+   |\n+LL |     1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1;\n+   |                                     - ^\n+   |                                     |\n+   |                                     cannot assign to this expression\n+\n+error[E0070]: invalid left-hand side of assignment\n+  --> $DIR/slow-lhs-suggestion.rs:2:35\n+   |\n+LL |     1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1;\n+   |                                 - ^\n+   |                                 |\n+   |                                 cannot assign to this expression\n+\n+error[E0070]: invalid left-hand side of assignment\n+  --> $DIR/slow-lhs-suggestion.rs:2:31\n+   |\n+LL |     1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1;\n+   |                             - ^\n+   |                             |\n+   |                             cannot assign to this expression\n+\n+error[E0070]: invalid left-hand side of assignment\n+  --> $DIR/slow-lhs-suggestion.rs:2:27\n+   |\n+LL |     1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1;\n+   |                         - ^\n+   |                         |\n+   |                         cannot assign to this expression\n+\n+error[E0070]: invalid left-hand side of assignment\n+  --> $DIR/slow-lhs-suggestion.rs:2:23\n+   |\n+LL |     1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1;\n+   |                     - ^\n+   |                     |\n+   |                     cannot assign to this expression\n+\n+error[E0070]: invalid left-hand side of assignment\n+  --> $DIR/slow-lhs-suggestion.rs:2:19\n+   |\n+LL |     1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1;\n+   |                 - ^\n+   |                 |\n+   |                 cannot assign to this expression\n+\n+error[E0070]: invalid left-hand side of assignment\n+  --> $DIR/slow-lhs-suggestion.rs:2:15\n+   |\n+LL |     1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1;\n+   |             - ^\n+   |             |\n+   |             cannot assign to this expression\n+\n+error[E0070]: invalid left-hand side of assignment\n+  --> $DIR/slow-lhs-suggestion.rs:2:11\n+   |\n+LL |     1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1;\n+   |         - ^\n+   |         |\n+   |         cannot assign to this expression\n+\n+error[E0070]: invalid left-hand side of assignment\n+  --> $DIR/slow-lhs-suggestion.rs:2:7\n+   |\n+LL |     1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1 = 1;\n+   |     - ^\n+   |     |\n+   |     cannot assign to this expression\n+\n+error: aborting due to 23 previous errors\n+\n+For more information about this error, try `rustc --explain E0070`."}, {"sha": "e573d330aa4ac327f1bcf8a8f220033a99485e08", "filename": "src/tools/miri/tests/pass-dep/shims/fs.rs", "status": "modified", "additions": 17, "deletions": 11, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/57781b24c54f9548722927ba88c343ff28da94ce/src%2Ftools%2Fmiri%2Ftests%2Fpass-dep%2Fshims%2Ffs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/57781b24c54f9548722927ba88c343ff28da94ce/src%2Ftools%2Fmiri%2Ftests%2Fpass-dep%2Fshims%2Ffs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Fpass-dep%2Fshims%2Ffs.rs?ref=57781b24c54f9548722927ba88c343ff28da94ce", "patch": "@@ -4,7 +4,8 @@\n #![feature(io_error_more)]\n #![feature(io_error_uncategorized)]\n \n-use std::ffi::CString;\n+use std::collections::HashMap;\n+use std::ffi::{CString, OsString};\n use std::fs::{\n     create_dir, read_dir, read_link, remove_dir, remove_dir_all, remove_file, rename, File,\n     OpenOptions,\n@@ -394,29 +395,34 @@ fn test_directory() {\n     // Creating a directory when it already exists should fail.\n     assert_eq!(ErrorKind::AlreadyExists, create_dir(&dir_path).unwrap_err().kind());\n \n-    // Create some files inside the directory\n+    // Create some files and dirs inside the directory\n     let path_1 = dir_path.join(\"test_file_1\");\n     drop(File::create(&path_1).unwrap());\n     let path_2 = dir_path.join(\"test_file_2\");\n     drop(File::create(&path_2).unwrap());\n-    // Test that the files are present inside the directory\n-    let dir_iter = read_dir(&dir_path).unwrap();\n-    let mut file_names = dir_iter.map(|e| e.unwrap().file_name()).collect::<Vec<_>>();\n-    file_names.sort_unstable();\n-    assert_eq!(file_names, vec![\"test_file_1\", \"test_file_2\"]);\n+    let dir_1 = dir_path.join(\"test_dir_1\");\n+    create_dir(&dir_1).unwrap();\n     // Test that read_dir metadata calls succeed\n     assert_eq!(\n-        &[true, true],\n-        &*read_dir(&dir_path)\n+        HashMap::from([\n+            (OsString::from(\"test_file_1\"), true),\n+            (OsString::from(\"test_file_2\"), true),\n+            (OsString::from(\"test_dir_1\"), false)\n+        ]),\n+        read_dir(&dir_path)\n             .unwrap()\n-            .map(|e| e.unwrap().metadata().unwrap().is_file())\n-            .collect::<Vec<_>>()\n+            .map(|e| {\n+                let e = e.unwrap();\n+                (e.file_name(), e.metadata().unwrap().is_file())\n+            })\n+            .collect::<HashMap<_, _>>()\n     );\n     // Deleting the directory should fail, since it is not empty.\n     assert_eq!(ErrorKind::DirectoryNotEmpty, remove_dir(&dir_path).unwrap_err().kind());\n     // Clean up the files in the directory\n     remove_file(&path_1).unwrap();\n     remove_file(&path_2).unwrap();\n+    remove_dir(&dir_1).unwrap();\n     // Now there should be nothing left in the directory.\n     let dir_iter = read_dir(&dir_path).unwrap();\n     let file_names = dir_iter.map(|e| e.unwrap().file_name()).collect::<Vec<_>>();"}]}