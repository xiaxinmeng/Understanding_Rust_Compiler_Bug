{"sha": "6d3dd0e48cdb23c99be9d2d2b33dbfda08b35e30", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZkM2RkMGU0OGNkYjIzYzk5YmU5ZDJkMmIzM2RiZmRhMDhiMzVlMzA=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2011-09-13T23:40:18Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2011-09-13T23:52:12Z"}, "message": "Try harder still to generate fewer landing pads\n\nScopes that don't have cleanups don't need their own landing pads\n\nThis takes the optimized rustc bin from 4.7MB to 4.4", "tree": {"sha": "30857ff754e6277207a3514a8bcbbd45ac23c842", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/30857ff754e6277207a3514a8bcbbd45ac23c842"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6d3dd0e48cdb23c99be9d2d2b33dbfda08b35e30", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6d3dd0e48cdb23c99be9d2d2b33dbfda08b35e30", "html_url": "https://github.com/rust-lang/rust/commit/6d3dd0e48cdb23c99be9d2d2b33dbfda08b35e30", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6d3dd0e48cdb23c99be9d2d2b33dbfda08b35e30/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b8e31ac46917edcf5922f0b191c5e6c4505830d2", "url": "https://api.github.com/repos/rust-lang/rust/commits/b8e31ac46917edcf5922f0b191c5e6c4505830d2", "html_url": "https://github.com/rust-lang/rust/commit/b8e31ac46917edcf5922f0b191c5e6c4505830d2"}], "stats": {"total": 20, "additions": 19, "deletions": 1}, "files": [{"sha": "a579b8fbefa2c93fe5b78a4c1167332581e93f7d", "filename": "src/comp/middle/trans.rs", "status": "modified", "additions": 19, "deletions": 1, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/6d3dd0e48cdb23c99be9d2d2b33dbfda08b35e30/src%2Fcomp%2Fmiddle%2Ftrans.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6d3dd0e48cdb23c99be9d2d2b33dbfda08b35e30/src%2Fcomp%2Fmiddle%2Ftrans.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Ftrans.rs?ref=6d3dd0e48cdb23c99be9d2d2b33dbfda08b35e30", "patch": "@@ -3738,7 +3738,7 @@ fn invoke_(bcx: @block_ctxt, llfn: ValueRef,\n }\n \n fn get_landing_pad(bcx: @block_ctxt) -> BasicBlockRef {\n-    let scope_bcx = find_scope_cx(bcx);\n+    let scope_bcx = find_scope_for_lpad(bcx);\n     if scope_bcx.need_new_lpad {\n         let unwind_bcx = new_sub_block_ctxt(bcx, \"unwind\");\n         let lpadbb = trans_landing_pad(unwind_bcx);\n@@ -3747,6 +3747,24 @@ fn get_landing_pad(bcx: @block_ctxt) -> BasicBlockRef {\n     }\n     assert option::is_some(scope_bcx.lpad);\n     ret option::get(scope_bcx.lpad);\n+\n+    fn find_scope_for_lpad(bcx: @block_ctxt) -> @block_ctxt {\n+        let scope_bcx = bcx;\n+        while true {\n+            scope_bcx = find_scope_cx(scope_bcx);\n+            if vec::is_not_empty(scope_bcx.cleanups) {\n+                ret scope_bcx;\n+            } else {\n+                scope_bcx = alt scope_bcx.parent {\n+                  parent_some(b) { b }\n+                  parent_none. {\n+                    ret scope_bcx;\n+                  }\n+                }\n+            }\n+        }\n+        fail;\n+    }\n }\n \n fn trans_landing_pad(bcx: @block_ctxt) -> BasicBlockRef {"}]}