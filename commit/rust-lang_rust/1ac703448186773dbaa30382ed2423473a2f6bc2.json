{"sha": "1ac703448186773dbaa30382ed2423473a2f6bc2", "node_id": "C_kwDOAAsO6NoAKDFhYzcwMzQ0ODE4Njc3M2RiYWEzMDM4MmVkMjQyMzQ3M2EyZjZiYzI", "commit": {"author": {"name": "Le\u00f3n Orell Valerian Liehr", "email": "liehr.exchange@gmx.net", "date": "2022-11-02T14:20:44Z"}, "committer": {"name": "Le\u00f3n Orell Valerian Liehr", "email": "liehr.exchange@gmx.net", "date": "2022-11-04T18:34:37Z"}, "message": "rustdoc: render `for<>` param lists of cross-crate trait-object types", "tree": {"sha": "3d84938803ffaf50b229a4ca7804a599cf5cf2bb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3d84938803ffaf50b229a4ca7804a599cf5cf2bb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1ac703448186773dbaa30382ed2423473a2f6bc2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1ac703448186773dbaa30382ed2423473a2f6bc2", "html_url": "https://github.com/rust-lang/rust/commit/1ac703448186773dbaa30382ed2423473a2f6bc2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1ac703448186773dbaa30382ed2423473a2f6bc2/comments", "author": {"login": "fmease", "id": 14913065, "node_id": "MDQ6VXNlcjE0OTEzMDY1", "avatar_url": "https://avatars.githubusercontent.com/u/14913065?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fmease", "html_url": "https://github.com/fmease", "followers_url": "https://api.github.com/users/fmease/followers", "following_url": "https://api.github.com/users/fmease/following{/other_user}", "gists_url": "https://api.github.com/users/fmease/gists{/gist_id}", "starred_url": "https://api.github.com/users/fmease/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fmease/subscriptions", "organizations_url": "https://api.github.com/users/fmease/orgs", "repos_url": "https://api.github.com/users/fmease/repos", "events_url": "https://api.github.com/users/fmease/events{/privacy}", "received_events_url": "https://api.github.com/users/fmease/received_events", "type": "User", "site_admin": false}, "committer": {"login": "fmease", "id": 14913065, "node_id": "MDQ6VXNlcjE0OTEzMDY1", "avatar_url": "https://avatars.githubusercontent.com/u/14913065?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fmease", "html_url": "https://github.com/fmease", "followers_url": "https://api.github.com/users/fmease/followers", "following_url": "https://api.github.com/users/fmease/following{/other_user}", "gists_url": "https://api.github.com/users/fmease/gists{/gist_id}", "starred_url": "https://api.github.com/users/fmease/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fmease/subscriptions", "organizations_url": "https://api.github.com/users/fmease/orgs", "repos_url": "https://api.github.com/users/fmease/repos", "events_url": "https://api.github.com/users/fmease/events{/privacy}", "received_events_url": "https://api.github.com/users/fmease/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2d9755fa21bb2184e522a48fa6f3d18f0e1bf62f", "url": "https://api.github.com/repos/rust-lang/rust/commits/2d9755fa21bb2184e522a48fa6f3d18f0e1bf62f", "html_url": "https://github.com/rust-lang/rust/commit/2d9755fa21bb2184e522a48fa6f3d18f0e1bf62f"}], "stats": {"total": 21, "additions": 19, "deletions": 2}, "files": [{"sha": "8508d08628a63cc5cdfeb3caa63b79ffcd22eeec", "filename": "src/librustdoc/clean/mod.rs", "status": "modified", "additions": 19, "deletions": 2, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/1ac703448186773dbaa30382ed2423473a2f6bc2/src%2Flibrustdoc%2Fclean%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ac703448186773dbaa30382ed2423473a2f6bc2/src%2Flibrustdoc%2Fclean%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fclean%2Fmod.rs?ref=1ac703448186773dbaa30382ed2423473a2f6bc2", "patch": "@@ -12,7 +12,7 @@ pub(crate) mod utils;\n \n use rustc_ast as ast;\n use rustc_attr as attr;\n-use rustc_data_structures::fx::{FxHashMap, FxHashSet};\n+use rustc_data_structures::fx::{FxHashMap, FxHashSet, FxIndexSet};\n use rustc_hir as hir;\n use rustc_hir::def::{CtorKind, DefKind, Res};\n use rustc_hir::def_id::{DefId, LOCAL_CRATE};\n@@ -1710,8 +1710,25 @@ pub(crate) fn clean_middle_ty<'tcx>(\n                 })\n                 .collect();\n \n+            let late_bound_regions: FxIndexSet<_> = obj\n+                .iter()\n+                .flat_map(|pb| pb.bound_vars())\n+                .filter_map(|br| match br {\n+                    ty::BoundVariableKind::Region(ty::BrNamed(_, name))\n+                        if name != kw::UnderscoreLifetime =>\n+                    {\n+                        Some(GenericParamDef {\n+                            name,\n+                            kind: GenericParamDefKind::Lifetime { outlives: vec![] },\n+                        })\n+                    }\n+                    _ => None,\n+                })\n+                .collect();\n+            let late_bound_regions = late_bound_regions.into_iter().collect();\n+\n             let path = external_path(cx, did, false, bindings, substs);\n-            bounds.insert(0, PolyTrait { trait_: path, generic_params: Vec::new() });\n+            bounds.insert(0, PolyTrait { trait_: path, generic_params: late_bound_regions });\n \n             DynTrait(bounds, lifetime)\n         }"}]}