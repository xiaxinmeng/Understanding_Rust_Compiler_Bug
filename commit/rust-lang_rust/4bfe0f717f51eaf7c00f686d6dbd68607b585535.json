{"sha": "4bfe0f717f51eaf7c00f686d6dbd68607b585535", "node_id": "MDY6Q29tbWl0NzI0NzEyOjRiZmUwZjcxN2Y1MWVhZjdjMDBmNjg2ZDZkYmQ2ODYwN2I1ODU1MzU=", "commit": {"author": {"name": "Erick Tryzelaar", "email": "erick.tryzelaar@gmail.com", "date": "2013-04-27T01:21:52Z"}, "committer": {"name": "Erick Tryzelaar", "email": "erick.tryzelaar@gmail.com", "date": "2013-05-15T03:10:45Z"}, "message": "rustc: rename some ty_self variables to self_arg", "tree": {"sha": "e79c72db74a14ba45f6878f0eba691c47c23f969", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e79c72db74a14ba45f6878f0eba691c47c23f969"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4bfe0f717f51eaf7c00f686d6dbd68607b585535", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4bfe0f717f51eaf7c00f686d6dbd68607b585535", "html_url": "https://github.com/rust-lang/rust/commit/4bfe0f717f51eaf7c00f686d6dbd68607b585535", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4bfe0f717f51eaf7c00f686d6dbd68607b585535/comments", "author": {"login": "erickt", "id": 84711, "node_id": "MDQ6VXNlcjg0NzEx", "avatar_url": "https://avatars.githubusercontent.com/u/84711?v=4", "gravatar_id": "", "url": "https://api.github.com/users/erickt", "html_url": "https://github.com/erickt", "followers_url": "https://api.github.com/users/erickt/followers", "following_url": "https://api.github.com/users/erickt/following{/other_user}", "gists_url": "https://api.github.com/users/erickt/gists{/gist_id}", "starred_url": "https://api.github.com/users/erickt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/erickt/subscriptions", "organizations_url": "https://api.github.com/users/erickt/orgs", "repos_url": "https://api.github.com/users/erickt/repos", "events_url": "https://api.github.com/users/erickt/events{/privacy}", "received_events_url": "https://api.github.com/users/erickt/received_events", "type": "User", "site_admin": false}, "committer": {"login": "erickt", "id": 84711, "node_id": "MDQ6VXNlcjg0NzEx", "avatar_url": "https://avatars.githubusercontent.com/u/84711?v=4", "gravatar_id": "", "url": "https://api.github.com/users/erickt", "html_url": "https://github.com/erickt", "followers_url": "https://api.github.com/users/erickt/followers", "following_url": "https://api.github.com/users/erickt/following{/other_user}", "gists_url": "https://api.github.com/users/erickt/gists{/gist_id}", "starred_url": "https://api.github.com/users/erickt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/erickt/subscriptions", "organizations_url": "https://api.github.com/users/erickt/orgs", "repos_url": "https://api.github.com/users/erickt/repos", "events_url": "https://api.github.com/users/erickt/events{/privacy}", "received_events_url": "https://api.github.com/users/erickt/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9c80cf548a81730ef085dc22c641d81fbd90e8a3", "url": "https://api.github.com/repos/rust-lang/rust/commits/9c80cf548a81730ef085dc22c641d81fbd90e8a3", "html_url": "https://github.com/rust-lang/rust/commit/9c80cf548a81730ef085dc22c641d81fbd90e8a3"}], "stats": {"total": 18, "additions": 9, "deletions": 9}, "files": [{"sha": "e14d6d79ab51d11410ff831605e6ff5bf9b371d2", "filename": "src/librustc/middle/trans/base.rs", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/4bfe0f717f51eaf7c00f686d6dbd68607b585535/src%2Flibrustc%2Fmiddle%2Ftrans%2Fbase.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4bfe0f717f51eaf7c00f686d6dbd68607b585535/src%2Flibrustc%2Fmiddle%2Ftrans%2Fbase.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftrans%2Fbase.rs?ref=4bfe0f717f51eaf7c00f686d6dbd68607b585535", "patch": "@@ -1664,12 +1664,12 @@ pub fn new_fn_ctxt(ccx: @CrateContext,\n // the function's fn_ctxt).  create_llargs_for_fn_args populates the llargs\n // field of the fn_ctxt with\n pub fn create_llargs_for_fn_args(cx: fn_ctxt,\n-                                 ty_self: self_arg,\n+                                 self_arg: self_arg,\n                                  args: &[ast::arg])\n                               -> ~[ValueRef] {\n     let _icx = cx.insn_ctxt(\"create_llargs_for_fn_args\");\n \n-    match ty_self {\n+    match self_arg {\n       impl_self(tt) => {\n         cx.llself = Some(ValSelfData {\n             v: cx.llenv,\n@@ -1801,7 +1801,7 @@ pub fn trans_closure(ccx: @CrateContext,\n                      decl: &ast::fn_decl,\n                      body: &ast::blk,\n                      llfndecl: ValueRef,\n-                     ty_self: self_arg,\n+                     self_arg: self_arg,\n                      param_substs: Option<@param_substs>,\n                      id: ast::node_id,\n                      impl_id: Option<ast::def_id>,\n@@ -1825,7 +1825,7 @@ pub fn trans_closure(ccx: @CrateContext,\n                                impl_id,\n                                param_substs,\n                                Some(body.span));\n-    let raw_llargs = create_llargs_for_fn_args(fcx, ty_self, decl.inputs);\n+    let raw_llargs = create_llargs_for_fn_args(fcx, self_arg, decl.inputs);\n \n     // Set the fixed stack segment flag if necessary.\n     if attr::attrs_contains_name(attributes, \"fixed_stack_segment\") {\n@@ -1882,16 +1882,16 @@ pub fn trans_fn(ccx: @CrateContext,\n                 decl: &ast::fn_decl,\n                 body: &ast::blk,\n                 llfndecl: ValueRef,\n-                ty_self: self_arg,\n+                self_arg: self_arg,\n                 param_substs: Option<@param_substs>,\n                 id: ast::node_id,\n                 impl_id: Option<ast::def_id>,\n                 attrs: &[ast::attribute]) {\n     let do_time = ccx.sess.trans_stats();\n     let start = if do_time { time::get_time() }\n                 else { time::Timespec::new(0, 0) };\n-    debug!(\"trans_fn(ty_self=%?, param_substs=%s)\",\n-           ty_self,\n+    debug!(\"trans_fn(self_arg=%?, param_substs=%s)\",\n+           self_arg,\n            param_substs.repr(ccx.tcx));\n     let _icx = ccx.insn_ctxt(\"trans_fn\");\n     ccx.stats.n_fns += 1;\n@@ -1902,7 +1902,7 @@ pub fn trans_fn(ccx: @CrateContext,\n                   decl,\n                   body,\n                   llfndecl,\n-                  ty_self,\n+                  self_arg,\n                   param_substs,\n                   id,\n                   impl_id,"}, {"sha": "a6cd7b4a56f8912f396ecc5bb44af5dfea0fffa8", "filename": "src/librustc/middle/ty.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4bfe0f717f51eaf7c00f686d6dbd68607b585535/src%2Flibrustc%2Fmiddle%2Fty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4bfe0f717f51eaf7c00f686d6dbd68607b585535/src%2Flibrustc%2Fmiddle%2Fty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fty.rs?ref=4bfe0f717f51eaf7c00f686d6dbd68607b585535", "patch": "@@ -1382,7 +1382,7 @@ pub fn fold_sty_to_ty(tcx: ty::ctxt, sty: &sty, foldop: &fn(t) -> t) -> t {\n }\n \n pub fn fold_sig(sig: &FnSig, fldop: &fn(t) -> t) -> FnSig {\n-    let args = sig.inputs.map(|arg| fldop(*arg)); \n+    let args = sig.inputs.map(|arg| fldop(*arg));\n \n     FnSig {\n         bound_lifetime_names: copy sig.bound_lifetime_names,"}]}