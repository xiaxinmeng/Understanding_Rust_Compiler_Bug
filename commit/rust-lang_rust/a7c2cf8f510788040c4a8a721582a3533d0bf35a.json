{"sha": "a7c2cf8f510788040c4a8a721582a3533d0bf35a", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE3YzJjZjhmNTEwNzg4MDQwYzRhOGE3MjE1ODJhMzUzM2QwYmYzNWE=", "commit": {"author": {"name": "Josh Stone", "email": "jistone@redhat.com", "date": "2020-06-17T23:30:27Z"}, "committer": {"name": "Josh Stone", "email": "jistone@redhat.com", "date": "2020-06-17T23:30:27Z"}, "message": "Reduce pointer casts in Box::into_boxed_slice\n\nWe only need to cast the pointer once to change `Box<T>` to an array\n`Box<[T; 1]>`, then we can let unsized coercion return `Box<[T]>`.", "tree": {"sha": "3f49d65686178b224cb4c91a2ef9a07929c00a4e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3f49d65686178b224cb4c91a2ef9a07929c00a4e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a7c2cf8f510788040c4a8a721582a3533d0bf35a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a7c2cf8f510788040c4a8a721582a3533d0bf35a", "html_url": "https://github.com/rust-lang/rust/commit/a7c2cf8f510788040c4a8a721582a3533d0bf35a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a7c2cf8f510788040c4a8a721582a3533d0bf35a/comments", "author": {"login": "cuviper", "id": 36186, "node_id": "MDQ6VXNlcjM2MTg2", "avatar_url": "https://avatars.githubusercontent.com/u/36186?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cuviper", "html_url": "https://github.com/cuviper", "followers_url": "https://api.github.com/users/cuviper/followers", "following_url": "https://api.github.com/users/cuviper/following{/other_user}", "gists_url": "https://api.github.com/users/cuviper/gists{/gist_id}", "starred_url": "https://api.github.com/users/cuviper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cuviper/subscriptions", "organizations_url": "https://api.github.com/users/cuviper/orgs", "repos_url": "https://api.github.com/users/cuviper/repos", "events_url": "https://api.github.com/users/cuviper/events{/privacy}", "received_events_url": "https://api.github.com/users/cuviper/received_events", "type": "User", "site_admin": false}, "committer": {"login": "cuviper", "id": 36186, "node_id": "MDQ6VXNlcjM2MTg2", "avatar_url": "https://avatars.githubusercontent.com/u/36186?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cuviper", "html_url": "https://github.com/cuviper", "followers_url": "https://api.github.com/users/cuviper/followers", "following_url": "https://api.github.com/users/cuviper/following{/other_user}", "gists_url": "https://api.github.com/users/cuviper/gists{/gist_id}", "starred_url": "https://api.github.com/users/cuviper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cuviper/subscriptions", "organizations_url": "https://api.github.com/users/cuviper/orgs", "repos_url": "https://api.github.com/users/cuviper/repos", "events_url": "https://api.github.com/users/cuviper/events{/privacy}", "received_events_url": "https://api.github.com/users/cuviper/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2935d294ff862fdf96578d0cbbdc289e8e7ba81c", "url": "https://api.github.com/repos/rust-lang/rust/commits/2935d294ff862fdf96578d0cbbdc289e8e7ba81c", "html_url": "https://github.com/rust-lang/rust/commit/2935d294ff862fdf96578d0cbbdc289e8e7ba81c"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "ab0dde0ada660ecbf08ede47a4e0f58a6191e3bf", "filename": "src/liballoc/boxed.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a7c2cf8f510788040c4a8a721582a3533d0bf35a/src%2Fliballoc%2Fboxed.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a7c2cf8f510788040c4a8a721582a3533d0bf35a/src%2Fliballoc%2Fboxed.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Fboxed.rs?ref=a7c2cf8f510788040c4a8a721582a3533d0bf35a", "patch": "@@ -248,7 +248,7 @@ impl<T> Box<T> {\n     #[unstable(feature = \"box_into_boxed_slice\", issue = \"71582\")]\n     pub fn into_boxed_slice(boxed: Box<T>) -> Box<[T]> {\n         // *mut T and *mut [T; 1] have the same size and alignment\n-        unsafe { Box::from_raw(Box::into_raw(boxed) as *mut [T; 1] as *mut [T]) }\n+        unsafe { Box::from_raw(Box::into_raw(boxed) as *mut [T; 1]) }\n     }\n }\n "}]}