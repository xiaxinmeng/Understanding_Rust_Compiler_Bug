{"sha": "7a23a71e5138531f784ca4118e5136b6664bad55", "node_id": "MDY6Q29tbWl0NzI0NzEyOjdhMjNhNzFlNTEzODUzMWY3ODRjYTQxMThlNTEzNmI2NjY0YmFkNTU=", "commit": {"author": {"name": "LingMan", "email": "LingMan@users.noreply.github.com", "date": "2020-10-12T19:46:15Z"}, "committer": {"name": "LingMan", "email": "LingMan@users.noreply.github.com", "date": "2020-10-13T19:29:38Z"}, "message": "Replace trivial bool matches with the `matches!` macro", "tree": {"sha": "01af6ecb6a21ac698f912e7494d0485083098411", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/01af6ecb6a21ac698f912e7494d0485083098411"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7a23a71e5138531f784ca4118e5136b6664bad55", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7a23a71e5138531f784ca4118e5136b6664bad55", "html_url": "https://github.com/rust-lang/rust/commit/7a23a71e5138531f784ca4118e5136b6664bad55", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7a23a71e5138531f784ca4118e5136b6664bad55/comments", "author": {"login": "LingMan", "id": 18645382, "node_id": "MDQ6VXNlcjE4NjQ1Mzgy", "avatar_url": "https://avatars.githubusercontent.com/u/18645382?v=4", "gravatar_id": "", "url": "https://api.github.com/users/LingMan", "html_url": "https://github.com/LingMan", "followers_url": "https://api.github.com/users/LingMan/followers", "following_url": "https://api.github.com/users/LingMan/following{/other_user}", "gists_url": "https://api.github.com/users/LingMan/gists{/gist_id}", "starred_url": "https://api.github.com/users/LingMan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/LingMan/subscriptions", "organizations_url": "https://api.github.com/users/LingMan/orgs", "repos_url": "https://api.github.com/users/LingMan/repos", "events_url": "https://api.github.com/users/LingMan/events{/privacy}", "received_events_url": "https://api.github.com/users/LingMan/received_events", "type": "User", "site_admin": false}, "committer": {"login": "LingMan", "id": 18645382, "node_id": "MDQ6VXNlcjE4NjQ1Mzgy", "avatar_url": "https://avatars.githubusercontent.com/u/18645382?v=4", "gravatar_id": "", "url": "https://api.github.com/users/LingMan", "html_url": "https://github.com/LingMan", "followers_url": "https://api.github.com/users/LingMan/followers", "following_url": "https://api.github.com/users/LingMan/following{/other_user}", "gists_url": "https://api.github.com/users/LingMan/gists{/gist_id}", "starred_url": "https://api.github.com/users/LingMan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/LingMan/subscriptions", "organizations_url": "https://api.github.com/users/LingMan/orgs", "repos_url": "https://api.github.com/users/LingMan/repos", "events_url": "https://api.github.com/users/LingMan/events{/privacy}", "received_events_url": "https://api.github.com/users/LingMan/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f3ab6f05846951bed41d4b0661ac0735aebf3687", "url": "https://api.github.com/repos/rust-lang/rust/commits/f3ab6f05846951bed41d4b0661ac0735aebf3687", "html_url": "https://github.com/rust-lang/rust/commit/f3ab6f05846951bed41d4b0661ac0735aebf3687"}], "stats": {"total": 10, "additions": 2, "deletions": 8}, "files": [{"sha": "d4718339ffe5c9d4d4c1f797659d938f9db53e4b", "filename": "compiler/rustc_ast_pretty/src/pp.rs", "status": "modified", "additions": 2, "deletions": 8, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/7a23a71e5138531f784ca4118e5136b6664bad55/compiler%2Frustc_ast_pretty%2Fsrc%2Fpp.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7a23a71e5138531f784ca4118e5136b6664bad55/compiler%2Frustc_ast_pretty%2Fsrc%2Fpp.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_ast_pretty%2Fsrc%2Fpp.rs?ref=7a23a71e5138531f784ca4118e5136b6664bad55", "patch": "@@ -170,17 +170,11 @@ pub enum Token {\n \n impl Token {\n     crate fn is_eof(&self) -> bool {\n-        match *self {\n-            Token::Eof => true,\n-            _ => false,\n-        }\n+        matches!(self, Token::Eof)\n     }\n \n     pub fn is_hardbreak_tok(&self) -> bool {\n-        match *self {\n-            Token::Break(BreakToken { offset: 0, blank_space: bs }) if bs == SIZE_INFINITY => true,\n-            _ => false,\n-        }\n+        matches!(self, Token::Break(BreakToken { offset: 0, blank_space: SIZE_INFINITY }))\n     }\n }\n "}]}