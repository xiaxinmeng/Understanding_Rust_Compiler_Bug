{"sha": "2cdba9cd85c4003407e921cb91a42f4562ef0a7c", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJjZGJhOWNkODVjNDAwMzQwN2U5MjFjYjkxYTQyZjQ1NjJlZjBhN2M=", "commit": {"author": {"name": "Ben Boeckel", "email": "ben.boeckel@kitware.com", "date": "2017-01-30T15:44:52Z"}, "committer": {"name": "Ben Boeckel", "email": "ben.boeckel@kitware.com", "date": "2017-01-30T15:44:52Z"}, "message": "methods: fix the option_unwrap_used message\n\nIt had a hard linewrap in it rather than flowing naturally. This\nconfused the Vim error matching.", "tree": {"sha": "65b63ca91793b8f0a4b95d4afb40cb85ecb7b15e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/65b63ca91793b8f0a4b95d4afb40cb85ecb7b15e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2cdba9cd85c4003407e921cb91a42f4562ef0a7c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2cdba9cd85c4003407e921cb91a42f4562ef0a7c", "html_url": "https://github.com/rust-lang/rust/commit/2cdba9cd85c4003407e921cb91a42f4562ef0a7c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2cdba9cd85c4003407e921cb91a42f4562ef0a7c/comments", "author": {"login": "mathstuf", "id": 97253, "node_id": "MDQ6VXNlcjk3MjUz", "avatar_url": "https://avatars.githubusercontent.com/u/97253?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mathstuf", "html_url": "https://github.com/mathstuf", "followers_url": "https://api.github.com/users/mathstuf/followers", "following_url": "https://api.github.com/users/mathstuf/following{/other_user}", "gists_url": "https://api.github.com/users/mathstuf/gists{/gist_id}", "starred_url": "https://api.github.com/users/mathstuf/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mathstuf/subscriptions", "organizations_url": "https://api.github.com/users/mathstuf/orgs", "repos_url": "https://api.github.com/users/mathstuf/repos", "events_url": "https://api.github.com/users/mathstuf/events{/privacy}", "received_events_url": "https://api.github.com/users/mathstuf/received_events", "type": "User", "site_admin": false}, "committer": {"login": "mathstuf", "id": 97253, "node_id": "MDQ6VXNlcjk3MjUz", "avatar_url": "https://avatars.githubusercontent.com/u/97253?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mathstuf", "html_url": "https://github.com/mathstuf", "followers_url": "https://api.github.com/users/mathstuf/followers", "following_url": "https://api.github.com/users/mathstuf/following{/other_user}", "gists_url": "https://api.github.com/users/mathstuf/gists{/gist_id}", "starred_url": "https://api.github.com/users/mathstuf/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mathstuf/subscriptions", "organizations_url": "https://api.github.com/users/mathstuf/orgs", "repos_url": "https://api.github.com/users/mathstuf/repos", "events_url": "https://api.github.com/users/mathstuf/events{/privacy}", "received_events_url": "https://api.github.com/users/mathstuf/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f2f6637ddad3f7bad3891edae9d5c84f3501ce05", "url": "https://api.github.com/repos/rust-lang/rust/commits/f2f6637ddad3f7bad3891edae9d5c84f3501ce05", "html_url": "https://github.com/rust-lang/rust/commit/f2f6637ddad3f7bad3891edae9d5c84f3501ce05"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "8c77a21e88ca7eb415c7ea0d51327f04a5874aac", "filename": "clippy_lints/src/methods.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/2cdba9cd85c4003407e921cb91a42f4562ef0a7c/clippy_lints%2Fsrc%2Fmethods.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2cdba9cd85c4003407e921cb91a42f4562ef0a7c/clippy_lints%2Fsrc%2Fmethods.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmethods.rs?ref=2cdba9cd85c4003407e921cb91a42f4562ef0a7c", "patch": "@@ -996,7 +996,7 @@ fn lint_unwrap(cx: &LateContext, expr: &hir::Expr, unwrap_args: &[hir::Expr]) {\n                   lint,\n                   expr.span,\n                   &format!(\"used unwrap() on {} value. If you don't want to handle the {} case gracefully, consider \\\n-                            using expect() to provide a better panic\n+                            using expect() to provide a better panic \\\n                             message\",\n                            kind,\n                            none_value));"}]}