{"sha": "d65dbe230d6e3aac8fa3aef675e56fd906a8083e", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQ2NWRiZTIzMGQ2ZTNhYWM4ZmEzYWVmNjc1ZTU2ZmQ5MDZhODA4M2U=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2013-10-21T19:01:34Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2013-10-21T19:01:34Z"}, "message": "auto merge of #9997 : thestinger/rust/float, r=thestinger", "tree": {"sha": "e3fea76b987edb14da49d93ae5e28abdd9caccd4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e3fea76b987edb14da49d93ae5e28abdd9caccd4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d65dbe230d6e3aac8fa3aef675e56fd906a8083e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d65dbe230d6e3aac8fa3aef675e56fd906a8083e", "html_url": "https://github.com/rust-lang/rust/commit/d65dbe230d6e3aac8fa3aef675e56fd906a8083e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d65dbe230d6e3aac8fa3aef675e56fd906a8083e/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cf7b9eb51f10fc0b27164c27a30600f80927a1d3", "url": "https://api.github.com/repos/rust-lang/rust/commits/cf7b9eb51f10fc0b27164c27a30600f80927a1d3", "html_url": "https://github.com/rust-lang/rust/commit/cf7b9eb51f10fc0b27164c27a30600f80927a1d3"}, {"sha": "462a28d0030a52eaaf3233219a4a892903f631b0", "url": "https://api.github.com/repos/rust-lang/rust/commits/462a28d0030a52eaaf3233219a4a892903f631b0", "html_url": "https://github.com/rust-lang/rust/commit/462a28d0030a52eaaf3233219a4a892903f631b0"}], "stats": {"total": 38, "additions": 19, "deletions": 19}, "files": [{"sha": "6cb63f9e1a16487dfb5fd995b488f73c2f1a4637", "filename": "src/librustc/middle/trans/base.rs", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/d65dbe230d6e3aac8fa3aef675e56fd906a8083e/src%2Flibrustc%2Fmiddle%2Ftrans%2Fbase.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d65dbe230d6e3aac8fa3aef675e56fd906a8083e/src%2Flibrustc%2Fmiddle%2Ftrans%2Fbase.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftrans%2Fbase.rs?ref=d65dbe230d6e3aac8fa3aef675e56fd906a8083e", "patch": "@@ -2797,8 +2797,8 @@ pub fn declare_intrinsics(llmod: ModuleRef) -> HashMap<&'static str, ValueRef> {\n \n     ifn!(intrinsics, \"llvm.fabs.f32\", [Type::f32()], Type::f32());\n     ifn!(intrinsics, \"llvm.fabs.f64\", [Type::f64()], Type::f64());\n-    ifn!(intrinsics, \"llvm.copysign.f32\", [Type::f32()], Type::f32());\n-    ifn!(intrinsics, \"llvm.copysign.f64\", [Type::f64()], Type::f64());\n+    ifn!(intrinsics, \"llvm.copysign.f32\", [Type::f32(), Type::f32()], Type::f32());\n+    ifn!(intrinsics, \"llvm.copysign.f64\", [Type::f64(), Type::f64()], Type::f64());\n \n     ifn!(intrinsics, \"llvm.floor.f32\",[Type::f32()], Type::f32());\n     ifn!(intrinsics, \"llvm.floor.f64\",[Type::f64()], Type::f64());\n@@ -2807,12 +2807,12 @@ pub fn declare_intrinsics(llmod: ModuleRef) -> HashMap<&'static str, ValueRef> {\n     ifn!(intrinsics, \"llvm.trunc.f32\",[Type::f32()], Type::f32());\n     ifn!(intrinsics, \"llvm.trunc.f64\",[Type::f64()], Type::f64());\n \n-    ifn!(intrinsics, \"llvm.rint.f32\",[Type::f64()], Type::f64());\n-    ifn!(intrinsics, \"llvm.rint.f64\",[Type::f64()], Type::f64());\n-    ifn!(intrinsics, \"llvm.nearbyint.f32\",[Type::f64()], Type::f64());\n-    ifn!(intrinsics, \"llvm.nearbyint.f64\",[Type::f64()], Type::f64());\n-    ifn!(intrinsics, \"llvm.round.f32\",[Type::f64()], Type::f64());\n-    ifn!(intrinsics, \"llvm.round.f64\",[Type::f64()], Type::f64());\n+    ifn!(intrinsics, \"llvm.rint.f32\", [Type::f32()], Type::f32());\n+    ifn!(intrinsics, \"llvm.rint.f64\", [Type::f64()], Type::f64());\n+    ifn!(intrinsics, \"llvm.nearbyint.f32\", [Type::f32()], Type::f32());\n+    ifn!(intrinsics, \"llvm.nearbyint.f64\", [Type::f64()], Type::f64());\n+    ifn!(intrinsics, \"llvm.round.f32\", [Type::f32()], Type::f32());\n+    ifn!(intrinsics, \"llvm.round.f64\", [Type::f64()], Type::f64());\n \n     ifn!(intrinsics, \"llvm.ctpop.i8\", [Type::i8()], Type::i8());\n     ifn!(intrinsics, \"llvm.ctpop.i16\",[Type::i16()], Type::i16());"}, {"sha": "6334677a40695cc3e40871fe6f32322887e75083", "filename": "src/librustc/middle/trans/intrinsic.rs", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/d65dbe230d6e3aac8fa3aef675e56fd906a8083e/src%2Flibrustc%2Fmiddle%2Ftrans%2Fintrinsic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d65dbe230d6e3aac8fa3aef675e56fd906a8083e/src%2Flibrustc%2Fmiddle%2Ftrans%2Fintrinsic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftrans%2Fintrinsic.rs?ref=d65dbe230d6e3aac8fa3aef675e56fd906a8083e", "patch": "@@ -460,20 +460,20 @@ pub fn trans_intrinsic(ccx: @mut CrateContext,\n         \"fmaf64\" => simple_llvm_intrinsic(bcx, \"llvm.fma.f64\", 3),\n         \"fabsf32\" => simple_llvm_intrinsic(bcx, \"llvm.fabs.f32\", 1),\n         \"fabsf64\" => simple_llvm_intrinsic(bcx, \"llvm.fabs.f64\", 1),\n-        \"copysignf32\" => simple_llvm_intrinsic(bcx, \"llvm.copysign.f32\", 1),\n-        \"copysignf64\" => simple_llvm_intrinsic(bcx, \"llvm.copysign.f64\", 1),\n+        \"copysignf32\" => simple_llvm_intrinsic(bcx, \"llvm.copysign.f32\", 2),\n+        \"copysignf64\" => simple_llvm_intrinsic(bcx, \"llvm.copysign.f64\", 2),\n         \"floorf32\" => simple_llvm_intrinsic(bcx, \"llvm.floor.f32\", 1),\n         \"floorf64\" => simple_llvm_intrinsic(bcx, \"llvm.floor.f64\", 1),\n         \"ceilf32\" => simple_llvm_intrinsic(bcx, \"llvm.ceil.f32\", 1),\n         \"ceilf64\" => simple_llvm_intrinsic(bcx, \"llvm.ceil.f64\", 1),\n         \"truncf32\" => simple_llvm_intrinsic(bcx, \"llvm.trunc.f32\", 1),\n         \"truncf64\" => simple_llvm_intrinsic(bcx, \"llvm.trunc.f64\", 1),\n-        \"rintf64\" => simple_llvm_intrinsic(bcx, \"llvm.rint.f64\", 1),\n         \"rintf32\" => simple_llvm_intrinsic(bcx, \"llvm.rint.f32\", 1),\n-        \"nearbyintf32\" => simple_llvm_intrinsic(bcx, \"llvm.nearbyint.f64\", 1),\n-        \"nearbyintf64\" => simple_llvm_intrinsic(bcx, \"llvm.nearbyint.f32\", 1),\n-        \"roundf32\" => simple_llvm_intrinsic(bcx, \"llvm.round.f64\", 1),\n-        \"roundf64\" => simple_llvm_intrinsic(bcx, \"llvm.round.f32\", 1),\n+        \"rintf64\" => simple_llvm_intrinsic(bcx, \"llvm.rint.f64\", 1),\n+        \"nearbyintf32\" => simple_llvm_intrinsic(bcx, \"llvm.nearbyint.f32\", 1),\n+        \"nearbyintf64\" => simple_llvm_intrinsic(bcx, \"llvm.nearbyint.f64\", 1),\n+        \"roundf32\" => simple_llvm_intrinsic(bcx, \"llvm.round.f32\", 1),\n+        \"roundf64\" => simple_llvm_intrinsic(bcx, \"llvm.round.f64\", 1),\n         \"ctpop8\" => simple_llvm_intrinsic(bcx, \"llvm.ctpop.i8\", 1),\n         \"ctpop16\" => simple_llvm_intrinsic(bcx, \"llvm.ctpop.i16\", 1),\n         \"ctpop32\" => simple_llvm_intrinsic(bcx, \"llvm.ctpop.i32\", 1),"}, {"sha": "627216ea7b77bae7d2f8c8b18f01aae069b7c08d", "filename": "src/librustc/middle/typeck/check/mod.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/d65dbe230d6e3aac8fa3aef675e56fd906a8083e/src%2Flibrustc%2Fmiddle%2Ftypeck%2Fcheck%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d65dbe230d6e3aac8fa3aef675e56fd906a8083e/src%2Flibrustc%2Fmiddle%2Ftypeck%2Fcheck%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftypeck%2Fcheck%2Fmod.rs?ref=d65dbe230d6e3aac8fa3aef675e56fd906a8083e", "patch": "@@ -3809,8 +3809,8 @@ pub fn check_intrinsic_type(ccx: @mut CrateCtxt, it: @ast::foreign_item) {\n             }\n             \"fabsf32\"      => (0, ~[ ty::mk_f32() ], ty::mk_f32()),\n             \"fabsf64\"      => (0, ~[ ty::mk_f64() ], ty::mk_f64()),\n-            \"copysignf32\"  => (0, ~[ ty::mk_f32() ], ty::mk_f32()),\n-            \"copysignf64\"  => (0, ~[ ty::mk_f64() ], ty::mk_f64()),\n+            \"copysignf32\"  => (0, ~[ ty::mk_f32(), ty::mk_f32() ], ty::mk_f32()),\n+            \"copysignf64\"  => (0, ~[ ty::mk_f64(), ty::mk_f64() ], ty::mk_f64()),\n             \"floorf32\"     => (0, ~[ ty::mk_f32() ], ty::mk_f32()),\n             \"floorf64\"     => (0, ~[ ty::mk_f64() ], ty::mk_f64()),\n             \"ceilf32\"      => (0, ~[ ty::mk_f32() ], ty::mk_f32()),"}, {"sha": "c9e1b5b3b008d733acb09f10708fe30dbe1d5aee", "filename": "src/libstd/unstable/intrinsics.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/d65dbe230d6e3aac8fa3aef675e56fd906a8083e/src%2Flibstd%2Funstable%2Fintrinsics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d65dbe230d6e3aac8fa3aef675e56fd906a8083e/src%2Flibstd%2Funstable%2Fintrinsics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Funstable%2Fintrinsics.rs?ref=d65dbe230d6e3aac8fa3aef675e56fd906a8083e", "patch": "@@ -414,9 +414,9 @@ extern \"rust-intrinsic\" {\n     pub fn fabsf64(x: f64) -> f64;\n \n     #[cfg(not(stage0))]\n-    pub fn copysignf32(x: f32) -> f32;\n+    pub fn copysignf32(x: f32, y: f32) -> f32;\n     #[cfg(not(stage0))]\n-    pub fn copysignf64(x: f64) -> f64;\n+    pub fn copysignf64(x: f64, y: f64) -> f64;\n \n     pub fn floorf32(x: f32) -> f32;\n     pub fn floorf64(x: f64) -> f64;"}]}