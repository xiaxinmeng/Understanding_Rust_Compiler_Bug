{"sha": "6cd40d0e518b1bd2477932e411aaf6502807edea", "node_id": "C_kwDOAAsO6NoAKDZjZDQwZDBlNTE4YjFiZDI0Nzc5MzJlNDExYWFmNjUwMjgwN2VkZWE", "commit": {"author": {"name": "Nicholas Nethercote", "email": "n.nethercote@gmail.com", "date": "2022-08-17T02:33:42Z"}, "committer": {"name": "Nicholas Nethercote", "email": "n.nethercote@gmail.com", "date": "2022-08-17T02:33:42Z"}, "message": "Remove `attrs` arg from `typaram` and `mk_ty_param`.\n\nBecause it's always empty.", "tree": {"sha": "a87005867b53cc944f816b3f9127acc906c2292a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a87005867b53cc944f816b3f9127acc906c2292a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6cd40d0e518b1bd2477932e411aaf6502807edea", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6cd40d0e518b1bd2477932e411aaf6502807edea", "html_url": "https://github.com/rust-lang/rust/commit/6cd40d0e518b1bd2477932e411aaf6502807edea", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6cd40d0e518b1bd2477932e411aaf6502807edea/comments", "author": {"login": "nnethercote", "id": 1940286, "node_id": "MDQ6VXNlcjE5NDAyODY=", "avatar_url": "https://avatars.githubusercontent.com/u/1940286?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nnethercote", "html_url": "https://github.com/nnethercote", "followers_url": "https://api.github.com/users/nnethercote/followers", "following_url": "https://api.github.com/users/nnethercote/following{/other_user}", "gists_url": "https://api.github.com/users/nnethercote/gists{/gist_id}", "starred_url": "https://api.github.com/users/nnethercote/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nnethercote/subscriptions", "organizations_url": "https://api.github.com/users/nnethercote/orgs", "repos_url": "https://api.github.com/users/nnethercote/repos", "events_url": "https://api.github.com/users/nnethercote/events{/privacy}", "received_events_url": "https://api.github.com/users/nnethercote/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nnethercote", "id": 1940286, "node_id": "MDQ6VXNlcjE5NDAyODY=", "avatar_url": "https://avatars.githubusercontent.com/u/1940286?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nnethercote", "html_url": "https://github.com/nnethercote", "followers_url": "https://api.github.com/users/nnethercote/followers", "following_url": "https://api.github.com/users/nnethercote/following{/other_user}", "gists_url": "https://api.github.com/users/nnethercote/gists{/gist_id}", "starred_url": "https://api.github.com/users/nnethercote/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nnethercote/subscriptions", "organizations_url": "https://api.github.com/users/nnethercote/orgs", "repos_url": "https://api.github.com/users/nnethercote/repos", "events_url": "https://api.github.com/users/nnethercote/events{/privacy}", "received_events_url": "https://api.github.com/users/nnethercote/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2c24958cfd15b5b5f683faf241af5a4e47b2e34b", "url": "https://api.github.com/repos/rust-lang/rust/commits/2c24958cfd15b5b5f683faf241af5a4e47b2e34b", "html_url": "https://github.com/rust-lang/rust/commit/2c24958cfd15b5b5f683faf241af5a4e47b2e34b"}], "stats": {"total": 10, "additions": 4, "deletions": 6}, "files": [{"sha": "9882f7958aaa5a2e2b9d80e2a5f9dbb8ee0063b7", "filename": "compiler/rustc_builtin_macros/src/deriving/generic/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6cd40d0e518b1bd2477932e411aaf6502807edea/compiler%2Frustc_builtin_macros%2Fsrc%2Fderiving%2Fgeneric%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6cd40d0e518b1bd2477932e411aaf6502807edea/compiler%2Frustc_builtin_macros%2Fsrc%2Fderiving%2Fgeneric%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_builtin_macros%2Fsrc%2Fderiving%2Fgeneric%2Fmod.rs?ref=6cd40d0e518b1bd2477932e411aaf6502807edea", "patch": "@@ -603,7 +603,7 @@ impl<'a> TraitDef<'a> {\n                         param.bounds.iter().cloned()\n                     ).collect();\n \n-                cx.typaram(param.ident.span.with_ctxt(ctxt), param.ident, vec![], bounds, None)\n+                cx.typaram(param.ident.span.with_ctxt(ctxt), param.ident, bounds, None)\n             }\n             GenericParamKind::Const { ty, kw_span, .. } => {\n                 let const_nodefault_kind = GenericParamKind::Const {"}, {"sha": "36e2e29308694741deece6a0106b538a29ddc8b3", "filename": "compiler/rustc_builtin_macros/src/deriving/generic/ty.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/6cd40d0e518b1bd2477932e411aaf6502807edea/compiler%2Frustc_builtin_macros%2Fsrc%2Fderiving%2Fgeneric%2Fty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6cd40d0e518b1bd2477932e411aaf6502807edea/compiler%2Frustc_builtin_macros%2Fsrc%2Fderiving%2Fgeneric%2Fty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_builtin_macros%2Fsrc%2Fderiving%2Fgeneric%2Fty.rs?ref=6cd40d0e518b1bd2477932e411aaf6502807edea", "patch": "@@ -146,7 +146,6 @@ fn mk_ty_param(\n     cx: &ExtCtxt<'_>,\n     span: Span,\n     name: Symbol,\n-    attrs: &[ast::Attribute],\n     bounds: &[Path],\n     self_ident: Ident,\n     self_generics: &Generics,\n@@ -158,7 +157,7 @@ fn mk_ty_param(\n             cx.trait_bound(path)\n         })\n         .collect();\n-    cx.typaram(span, Ident::new(name, span), attrs.to_owned(), bounds, None)\n+    cx.typaram(span, Ident::new(name, span), bounds, None)\n }\n \n /// Bounds on type parameters.\n@@ -183,7 +182,7 @@ impl Bounds {\n             .iter()\n             .map(|t| {\n                 let (name, ref bounds) = *t;\n-                mk_ty_param(cx, span, name, &[], &bounds, self_ty, self_generics)\n+                mk_ty_param(cx, span, name, &bounds, self_ty, self_generics)\n             })\n             .collect();\n "}, {"sha": "1f5cd8decbd863d6537e3d713c98249a3d0caa21", "filename": "compiler/rustc_expand/src/build.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/6cd40d0e518b1bd2477932e411aaf6502807edea/compiler%2Frustc_expand%2Fsrc%2Fbuild.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6cd40d0e518b1bd2477932e411aaf6502807edea/compiler%2Frustc_expand%2Fsrc%2Fbuild.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_expand%2Fsrc%2Fbuild.rs?ref=6cd40d0e518b1bd2477932e411aaf6502807edea", "patch": "@@ -106,14 +106,13 @@ impl<'a> ExtCtxt<'a> {\n         &self,\n         span: Span,\n         ident: Ident,\n-        attrs: Vec<ast::Attribute>,\n         bounds: ast::GenericBounds,\n         default: Option<P<ast::Ty>>,\n     ) -> ast::GenericParam {\n         ast::GenericParam {\n             ident: ident.with_span_pos(span),\n             id: ast::DUMMY_NODE_ID,\n-            attrs: attrs.into(),\n+            attrs: AttrVec::new(),\n             bounds,\n             kind: ast::GenericParamKind::Type { default },\n             is_placeholder: false,"}]}