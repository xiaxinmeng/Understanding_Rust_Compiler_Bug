{"sha": "36f18f2d3a2df4a2ce0925f438631b615e2ab4dc", "node_id": "MDY6Q29tbWl0NzI0NzEyOjM2ZjE4ZjJkM2EyZGY0YTJjZTA5MjVmNDM4NjMxYjYxNWUyYWI0ZGM=", "commit": {"author": {"name": "Gabriela Alexandra Moldovan", "email": "gabi_250@live.com", "date": "2019-02-20T16:37:52Z"}, "committer": {"name": "Gabriela Alexandra Moldovan", "email": "gabi_250@live.com", "date": "2019-02-20T21:35:34Z"}, "message": "Allow Self::Module to be mutated.\n\n`codegen_allocator` and `write_metadata` mutate the underlying LLVM module. As\nsuch, it makes sense for these two functions to receive a mutable reference to\nthe module (as opposed to an immutable one).", "tree": {"sha": "57284ed8c3a6b80777c140f94e14f3186f9be5d3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/57284ed8c3a6b80777c140f94e14f3186f9be5d3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/36f18f2d3a2df4a2ce0925f438631b615e2ab4dc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/36f18f2d3a2df4a2ce0925f438631b615e2ab4dc", "html_url": "https://github.com/rust-lang/rust/commit/36f18f2d3a2df4a2ce0925f438631b615e2ab4dc", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/36f18f2d3a2df4a2ce0925f438631b615e2ab4dc/comments", "author": {"login": "gabi-250", "id": 15640520, "node_id": "MDQ6VXNlcjE1NjQwNTIw", "avatar_url": "https://avatars.githubusercontent.com/u/15640520?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gabi-250", "html_url": "https://github.com/gabi-250", "followers_url": "https://api.github.com/users/gabi-250/followers", "following_url": "https://api.github.com/users/gabi-250/following{/other_user}", "gists_url": "https://api.github.com/users/gabi-250/gists{/gist_id}", "starred_url": "https://api.github.com/users/gabi-250/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gabi-250/subscriptions", "organizations_url": "https://api.github.com/users/gabi-250/orgs", "repos_url": "https://api.github.com/users/gabi-250/repos", "events_url": "https://api.github.com/users/gabi-250/events{/privacy}", "received_events_url": "https://api.github.com/users/gabi-250/received_events", "type": "User", "site_admin": false}, "committer": {"login": "gabi-250", "id": 15640520, "node_id": "MDQ6VXNlcjE1NjQwNTIw", "avatar_url": "https://avatars.githubusercontent.com/u/15640520?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gabi-250", "html_url": "https://github.com/gabi-250", "followers_url": "https://api.github.com/users/gabi-250/followers", "following_url": "https://api.github.com/users/gabi-250/following{/other_user}", "gists_url": "https://api.github.com/users/gabi-250/gists{/gist_id}", "starred_url": "https://api.github.com/users/gabi-250/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gabi-250/subscriptions", "organizations_url": "https://api.github.com/users/gabi-250/orgs", "repos_url": "https://api.github.com/users/gabi-250/repos", "events_url": "https://api.github.com/users/gabi-250/events{/privacy}", "received_events_url": "https://api.github.com/users/gabi-250/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f66e4697ae286985ddefc53c3a047614568458bb", "url": "https://api.github.com/repos/rust-lang/rust/commits/f66e4697ae286985ddefc53c3a047614568458bb", "html_url": "https://github.com/rust-lang/rust/commit/f66e4697ae286985ddefc53c3a047614568458bb"}], "stats": {"total": 16, "additions": 8, "deletions": 8}, "files": [{"sha": "9a75b8495ded35a13c8378065c9a66a6464be02c", "filename": "src/librustc_codegen_llvm/lib.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/36f18f2d3a2df4a2ce0925f438631b615e2ab4dc/src%2Flibrustc_codegen_llvm%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/36f18f2d3a2df4a2ce0925f438631b615e2ab4dc/src%2Flibrustc_codegen_llvm%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_llvm%2Flib.rs?ref=36f18f2d3a2df4a2ce0925f438631b615e2ab4dc", "patch": "@@ -120,11 +120,11 @@ impl ExtraBackendMethods for LlvmCodegenBackend {\n     fn write_metadata<'b, 'gcx>(\n         &self,\n         tcx: TyCtxt<'b, 'gcx, 'gcx>,\n-        metadata: &ModuleLlvm\n+        metadata: &mut ModuleLlvm\n     ) -> EncodedMetadata {\n         base::write_metadata(tcx, metadata)\n     }\n-    fn codegen_allocator(&self, tcx: TyCtxt, mods: &ModuleLlvm, kind: AllocatorKind) {\n+    fn codegen_allocator(&self, tcx: TyCtxt, mods: &mut ModuleLlvm, kind: AllocatorKind) {\n         unsafe { allocator::codegen(tcx, mods, kind) }\n     }\n     fn compile_codegen_unit<'a, 'tcx: 'a>("}, {"sha": "92f5c39fe5a181fba9bfa87f3bdfacfe0005747a", "filename": "src/librustc_codegen_ssa/base.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/36f18f2d3a2df4a2ce0925f438631b615e2ab4dc/src%2Flibrustc_codegen_ssa%2Fbase.rs", "raw_url": "https://github.com/rust-lang/rust/raw/36f18f2d3a2df4a2ce0925f438631b615e2ab4dc/src%2Flibrustc_codegen_ssa%2Fbase.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_ssa%2Fbase.rs?ref=36f18f2d3a2df4a2ce0925f438631b615e2ab4dc", "patch": "@@ -551,9 +551,9 @@ pub fn codegen_crate<B: ExtraBackendMethods>(\n                                                             &[\"crate\"],\n                                                             Some(\"metadata\")).as_str()\n                                                                              .to_string();\n-    let metadata_llvm_module = backend.new_metadata(tcx, &metadata_cgu_name);\n+    let mut metadata_llvm_module = backend.new_metadata(tcx, &metadata_cgu_name);\n     let metadata = time(tcx.sess, \"write metadata\", || {\n-        backend.write_metadata(tcx, &metadata_llvm_module)\n+        backend.write_metadata(tcx, &mut metadata_llvm_module)\n     });\n     tcx.sess.profiler(|p| p.end_activity(ProfileCategory::Codegen));\n \n@@ -636,9 +636,9 @@ pub fn codegen_crate<B: ExtraBackendMethods>(\n                                                        &[\"crate\"],\n                                                        Some(\"allocator\")).as_str()\n                                                                          .to_string();\n-        let modules = backend.new_metadata(tcx, &llmod_id);\n+        let mut modules = backend.new_metadata(tcx, &llmod_id);\n         time(tcx.sess, \"write allocator module\", || {\n-            backend.codegen_allocator(tcx, &modules, kind)\n+            backend.codegen_allocator(tcx, &mut modules, kind)\n         });\n \n         Some(ModuleCodegen {"}, {"sha": "6f92024ea8af3fd8a8b275c66873b619742c99ea", "filename": "src/librustc_codegen_ssa/traits/backend.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/36f18f2d3a2df4a2ce0925f438631b615e2ab4dc/src%2Flibrustc_codegen_ssa%2Ftraits%2Fbackend.rs", "raw_url": "https://github.com/rust-lang/rust/raw/36f18f2d3a2df4a2ce0925f438631b615e2ab4dc/src%2Flibrustc_codegen_ssa%2Ftraits%2Fbackend.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_ssa%2Ftraits%2Fbackend.rs?ref=36f18f2d3a2df4a2ce0925f438631b615e2ab4dc", "patch": "@@ -36,9 +36,9 @@ pub trait ExtraBackendMethods: CodegenBackend + WriteBackendMethods + Sized + Se\n     fn write_metadata<'b, 'gcx>(\n         &self,\n         tcx: TyCtxt<'b, 'gcx, 'gcx>,\n-        metadata: &Self::Module,\n+        metadata: &mut Self::Module,\n     ) -> EncodedMetadata;\n-    fn codegen_allocator(&self, tcx: TyCtxt, mods: &Self::Module, kind: AllocatorKind);\n+    fn codegen_allocator(&self, tcx: TyCtxt, mods: &mut Self::Module, kind: AllocatorKind);\n     fn compile_codegen_unit<'a, 'tcx: 'a>(\n         &self,\n         tcx: TyCtxt<'a, 'tcx, 'tcx>,"}]}