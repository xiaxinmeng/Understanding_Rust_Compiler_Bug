{"sha": "c5d7a77a533d33a4681f629744f0d0695c5e08b7", "node_id": "MDY6Q29tbWl0NzI0NzEyOmM1ZDdhNzdhNTMzZDMzYTQ2ODFmNjI5NzQ0ZjBkMDY5NWM1ZTA4Yjc=", "commit": {"author": {"name": "Jed Davis", "email": "jld@panix.com", "date": "2013-06-01T09:35:42Z"}, "committer": {"name": "Jed Davis", "email": "jld@panix.com", "date": "2013-06-01T18:52:02Z"}, "message": "Fix vec::each* return values", "tree": {"sha": "56385da8d7355f26540012014c6241ad429a6662", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/56385da8d7355f26540012014c6241ad429a6662"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c5d7a77a533d33a4681f629744f0d0695c5e08b7", "comment_count": 5, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c5d7a77a533d33a4681f629744f0d0695c5e08b7", "html_url": "https://github.com/rust-lang/rust/commit/c5d7a77a533d33a4681f629744f0d0695c5e08b7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c5d7a77a533d33a4681f629744f0d0695c5e08b7/comments", "author": {"login": "jld", "id": 254973, "node_id": "MDQ6VXNlcjI1NDk3Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/254973?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jld", "html_url": "https://github.com/jld", "followers_url": "https://api.github.com/users/jld/followers", "following_url": "https://api.github.com/users/jld/following{/other_user}", "gists_url": "https://api.github.com/users/jld/gists{/gist_id}", "starred_url": "https://api.github.com/users/jld/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jld/subscriptions", "organizations_url": "https://api.github.com/users/jld/orgs", "repos_url": "https://api.github.com/users/jld/repos", "events_url": "https://api.github.com/users/jld/events{/privacy}", "received_events_url": "https://api.github.com/users/jld/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jld", "id": 254973, "node_id": "MDQ6VXNlcjI1NDk3Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/254973?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jld", "html_url": "https://github.com/jld", "followers_url": "https://api.github.com/users/jld/followers", "following_url": "https://api.github.com/users/jld/following{/other_user}", "gists_url": "https://api.github.com/users/jld/gists{/gist_id}", "starred_url": "https://api.github.com/users/jld/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jld/subscriptions", "organizations_url": "https://api.github.com/users/jld/orgs", "repos_url": "https://api.github.com/users/jld/repos", "events_url": "https://api.github.com/users/jld/events{/privacy}", "received_events_url": "https://api.github.com/users/jld/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "44af5064d0ac3d45223f1555b299f10fd4902f5c", "url": "https://api.github.com/repos/rust-lang/rust/commits/44af5064d0ac3d45223f1555b299f10fd4902f5c", "html_url": "https://github.com/rust-lang/rust/commit/44af5064d0ac3d45223f1555b299f10fd4902f5c"}], "stats": {"total": 21, "additions": 19, "deletions": 2}, "files": [{"sha": "8cd345c09bbd7ab40ebda1777bcd8a68a5579026", "filename": "src/libstd/vec.rs", "status": "modified", "additions": 19, "deletions": 2, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/c5d7a77a533d33a4681f629744f0d0695c5e08b7/src%2Flibstd%2Fvec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c5d7a77a533d33a4681f629744f0d0695c5e08b7/src%2Flibstd%2Fvec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fvec.rs?ref=c5d7a77a533d33a4681f629744f0d0695c5e08b7", "patch": "@@ -1532,7 +1532,7 @@ pub fn each<'r,T>(v: &'r [T], f: &fn(&'r T) -> bool) -> bool {\n         }\n         broke = n > 0;\n     }\n-    return true;\n+    return !broke;\n }\n \n /// Like `each()`, but for the case where you have\n@@ -1554,7 +1554,7 @@ pub fn each_mut<'r,T>(v: &'r mut [T], f: &fn(elem: &'r mut T) -> bool) -> bool {\n         }\n         broke = n > 0;\n     }\n-    return broke;\n+    return !broke;\n }\n \n /// Like `each()`, but for the case where you have a vector that *may or may\n@@ -3566,6 +3566,23 @@ mod tests {\n         }\n     }\n \n+    #[test]\n+    fn test_each_ret_len0() {\n+        let mut a0 : [int, .. 0] = [];\n+        assert_eq!(each(a0, |_p| fail!()), true);\n+        assert_eq!(each_mut(a0, |_p| fail!()), true);\n+    }\n+\n+    #[test]\n+    fn test_each_ret_len1() {\n+        let mut a1 = [17];\n+        assert_eq!(each(a1, |_p| true), true);\n+        assert_eq!(each_mut(a1, |_p| true), true);\n+        assert_eq!(each(a1, |_p| false), false);\n+        assert_eq!(each_mut(a1, |_p| false), false);\n+    }\n+\n+\n     #[test]\n     fn test_each_permutation() {\n         let mut results: ~[~[int]];"}]}