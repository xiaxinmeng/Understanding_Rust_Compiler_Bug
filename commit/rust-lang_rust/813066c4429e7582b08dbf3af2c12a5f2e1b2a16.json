{"sha": "813066c4429e7582b08dbf3af2c12a5f2e1b2a16", "node_id": "MDY6Q29tbWl0NzI0NzEyOjgxMzA2NmM0NDI5ZTc1ODJiMDhkYmYzYWYyYzEyYTVmMmUxYjJhMTY=", "commit": {"author": {"name": "Yuki Okushi", "email": "huyuumi.dev@gmail.com", "date": "2020-10-22T00:45:31Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-10-22T00:45:31Z"}, "message": "Rollup merge of #77554 - varkor:mangle-int-char, r=eddyb\n\nSupport signed integers and `char` in v0 mangling\n\nLikely we want more tests, to check the output is correct too: however, I wasn't sure what kind of test we needed, so I just added one similar to that added in https://github.com/rust-lang/rust/pull/77452 for now.\n\nr? @eddyb", "tree": {"sha": "c583e510288d8fbea9fed521ec5f851256f9d57a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c583e510288d8fbea9fed521ec5f851256f9d57a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/813066c4429e7582b08dbf3af2c12a5f2e1b2a16", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJfkNYrCRBK7hj4Ov3rIwAAdHIIAJss6V6ZXfImEJhfO8Ij3Hwu\nkoucTK2BUJm185BTrb7HUA2KHQMFXa3cgW+QqQzP5t4i3RKhIhylPAv6ir4ZRBO/\nWAX4AMLhCwm0evZ0pGhCSlA/Tl0I4NCzC53crsJQC9NCsIE/4B6gp8RSwk2v5URX\nHd8Gx46I7b5jqQjEBwZ+ShRH6xgzDcG6dQzCSFV+ELDKD3wEgTgCRAGeKAKxSVK8\nl1nag0x419XP6p0ga6CVkUkq/3ekJ+V14yp9IL3VUk947tkgZmBfKJFfWkguQr6k\nyCFFdXYW/pPHPXzw2GpN6HaHtJ0SHunPOGXReLIO2yeiip9e+1qvVQ8NKhXHPNQ=\n=63ML\n-----END PGP SIGNATURE-----\n", "payload": "tree c583e510288d8fbea9fed521ec5f851256f9d57a\nparent 6245b951d555f183e643f469199a408ebe1a3ab6\nparent 878c97e70c01d588c5a96d04f02b1c9298e94ecc\nauthor Yuki Okushi <huyuumi.dev@gmail.com> 1603327531 +0900\ncommitter GitHub <noreply@github.com> 1603327531 +0900\n\nRollup merge of #77554 - varkor:mangle-int-char, r=eddyb\n\nSupport signed integers and `char` in v0 mangling\n\nLikely we want more tests, to check the output is correct too: however, I wasn't sure what kind of test we needed, so I just added one similar to that added in https://github.com/rust-lang/rust/pull/77452 for now.\n\nr? @eddyb\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/813066c4429e7582b08dbf3af2c12a5f2e1b2a16", "html_url": "https://github.com/rust-lang/rust/commit/813066c4429e7582b08dbf3af2c12a5f2e1b2a16", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/813066c4429e7582b08dbf3af2c12a5f2e1b2a16/comments", "author": {"login": "JohnTitor", "id": 25030997, "node_id": "MDQ6VXNlcjI1MDMwOTk3", "avatar_url": "https://avatars.githubusercontent.com/u/25030997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JohnTitor", "html_url": "https://github.com/JohnTitor", "followers_url": "https://api.github.com/users/JohnTitor/followers", "following_url": "https://api.github.com/users/JohnTitor/following{/other_user}", "gists_url": "https://api.github.com/users/JohnTitor/gists{/gist_id}", "starred_url": "https://api.github.com/users/JohnTitor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JohnTitor/subscriptions", "organizations_url": "https://api.github.com/users/JohnTitor/orgs", "repos_url": "https://api.github.com/users/JohnTitor/repos", "events_url": "https://api.github.com/users/JohnTitor/events{/privacy}", "received_events_url": "https://api.github.com/users/JohnTitor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6245b951d555f183e643f469199a408ebe1a3ab6", "url": "https://api.github.com/repos/rust-lang/rust/commits/6245b951d555f183e643f469199a408ebe1a3ab6", "html_url": "https://github.com/rust-lang/rust/commit/6245b951d555f183e643f469199a408ebe1a3ab6"}, {"sha": "878c97e70c01d588c5a96d04f02b1c9298e94ecc", "url": "https://api.github.com/repos/rust-lang/rust/commits/878c97e70c01d588c5a96d04f02b1c9298e94ecc", "html_url": "https://github.com/rust-lang/rust/commit/878c97e70c01d588c5a96d04f02b1c9298e94ecc"}], "stats": {"total": 240, "additions": 227, "deletions": 13}, "files": [{"sha": "a3c4d2493ff180787fc38720ca1428c41833ea6e", "filename": "Cargo.lock", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/813066c4429e7582b08dbf3af2c12a5f2e1b2a16/Cargo.lock", "raw_url": "https://github.com/rust-lang/rust/raw/813066c4429e7582b08dbf3af2c12a5f2e1b2a16/Cargo.lock", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Cargo.lock?ref=813066c4429e7582b08dbf3af2c12a5f2e1b2a16", "patch": "@@ -3276,9 +3276,9 @@ dependencies = [\n \n [[package]]\n name = \"rustc-demangle\"\n-version = \"0.1.16\"\n+version = \"0.1.18\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"4c691c0e608126e00913e33f0ccf3727d5fc84573623b8d65b2df340b5201783\"\n+checksum = \"6e3bad0ee36814ca07d7968269dd4b7ec89ec2da10c4bb613928d3077083c232\"\n dependencies = [\n  \"compiler_builtins\",\n  \"rustc-std-workspace-core\","}, {"sha": "586b9d0837425d5c9f4016f552938ccfec7d954d", "filename": "compiler/rustc_codegen_llvm/Cargo.toml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/813066c4429e7582b08dbf3af2c12a5f2e1b2a16/compiler%2Frustc_codegen_llvm%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/813066c4429e7582b08dbf3af2c12a5f2e1b2a16/compiler%2Frustc_codegen_llvm%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_llvm%2FCargo.toml?ref=813066c4429e7582b08dbf3af2c12a5f2e1b2a16", "patch": "@@ -15,7 +15,7 @@ measureme = \"0.7.1\"\n snap = \"1\"\n tracing = \"0.1\"\n rustc_middle = { path = \"../rustc_middle\" }\n-rustc-demangle = \"0.1\"\n+rustc-demangle = \"0.1.18\"\n rustc_attr = { path = \"../rustc_attr\" }\n rustc_codegen_ssa = { path = \"../rustc_codegen_ssa\" }\n rustc_data_structures = { path = \"../rustc_data_structures\" }"}, {"sha": "3df5f16131922cfb3455d99aa19907ae1edd81cc", "filename": "compiler/rustc_symbol_mangling/Cargo.toml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/813066c4429e7582b08dbf3af2c12a5f2e1b2a16/compiler%2Frustc_symbol_mangling%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/813066c4429e7582b08dbf3af2c12a5f2e1b2a16/compiler%2Frustc_symbol_mangling%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_symbol_mangling%2FCargo.toml?ref=813066c4429e7582b08dbf3af2c12a5f2e1b2a16", "patch": "@@ -10,7 +10,7 @@ doctest = false\n [dependencies]\n tracing = \"0.1\"\n punycode = \"0.4.0\"\n-rustc-demangle = \"0.1.16\"\n+rustc-demangle = \"0.1.18\"\n \n rustc_ast = { path = \"../rustc_ast\" }\n rustc_span = { path = \"../rustc_span\" }"}, {"sha": "7833385cbc99698271dc9478404f4ab8cff45a1c", "filename": "compiler/rustc_symbol_mangling/src/v0.rs", "status": "modified", "additions": 22, "deletions": 7, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/813066c4429e7582b08dbf3af2c12a5f2e1b2a16/compiler%2Frustc_symbol_mangling%2Fsrc%2Fv0.rs", "raw_url": "https://github.com/rust-lang/rust/raw/813066c4429e7582b08dbf3af2c12a5f2e1b2a16/compiler%2Frustc_symbol_mangling%2Fsrc%2Fv0.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_symbol_mangling%2Fsrc%2Fv0.rs?ref=813066c4429e7582b08dbf3af2c12a5f2e1b2a16", "patch": "@@ -4,6 +4,7 @@ use rustc_data_structures::fx::{FxHashMap, FxHashSet};\n use rustc_hir as hir;\n use rustc_hir::def_id::{CrateNum, DefId};\n use rustc_hir::definitions::{DefPathData, DisambiguatedDefPathData};\n+use rustc_middle::mir::interpret::sign_extend;\n use rustc_middle::ty::print::{Print, Printer};\n use rustc_middle::ty::subst::{GenericArg, GenericArgKind, Subst};\n use rustc_middle::ty::{self, Instance, Ty, TyCtxt, TypeFoldable};\n@@ -527,17 +528,31 @@ impl Printer<'tcx> for SymbolMangler<'tcx> {\n         }\n         let start = self.out.len();\n \n-        match ct.ty.kind() {\n-            ty::Uint(_) => {}\n-            ty::Bool => {}\n+        let mut neg = false;\n+        let val = match ct.ty.kind() {\n+            ty::Uint(_) | ty::Bool | ty::Char => {\n+                ct.try_eval_bits(self.tcx, ty::ParamEnv::reveal_all(), ct.ty)\n+            }\n+            ty::Int(_) => {\n+                let param_env = ty::ParamEnv::reveal_all();\n+                ct.try_eval_bits(self.tcx, param_env, ct.ty).and_then(|b| {\n+                    let sz = self.tcx.layout_of(param_env.and(ct.ty)).ok()?.size;\n+                    let val = sign_extend(b, sz) as i128;\n+                    if val < 0 {\n+                        neg = true;\n+                    }\n+                    Some(val.wrapping_abs() as u128)\n+                })\n+            }\n             _ => {\n                 bug!(\"symbol_names: unsupported constant of type `{}` ({:?})\", ct.ty, ct);\n             }\n-        }\n-        self = ct.ty.print(self)?;\n+        };\n \n-        if let Some(bits) = ct.try_eval_bits(self.tcx, ty::ParamEnv::reveal_all(), ct.ty) {\n-            let _ = write!(self.out, \"{:x}_\", bits);\n+        if let Some(bits) = val {\n+            // We only print the type if the const can be evaluated.\n+            self = ct.ty.print(self)?;\n+            let _ = write!(self.out, \"{}{:x}_\", if neg { \"n\" } else { \"\" }, bits);\n         } else {\n             // NOTE(eddyb) despite having the path, we need to\n             // encode a placeholder, as the path could refer"}, {"sha": "47b59d4a6772ce2a58c36811887d4ef5376f698f", "filename": "library/std/Cargo.toml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/813066c4429e7582b08dbf3af2c12a5f2e1b2a16/library%2Fstd%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/813066c4429e7582b08dbf3af2c12a5f2e1b2a16/library%2Fstd%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2FCargo.toml?ref=813066c4429e7582b08dbf3af2c12a5f2e1b2a16", "patch": "@@ -24,7 +24,7 @@ hashbrown = { version = \"0.9.0\", default-features = false, features = ['rustc-de\n \n # Dependencies of the `backtrace` crate\n addr2line = { version = \"0.13.0\", optional = true, default-features = false }\n-rustc-demangle = { version = \"0.1.4\", features = ['rustc-dep-of-std'] }\n+rustc-demangle = { version = \"0.1.18\", features = ['rustc-dep-of-std'] }\n miniz_oxide = { version = \"0.4.0\", optional = true, default-features = false }\n [dependencies.object]\n version = \"0.20\""}, {"sha": "e002124059f83dd322a1cb9f5e14b6202e5a9303", "filename": "src/test/ui/symbol-names/const-generics-demangling.rs", "status": "added", "additions": 38, "deletions": 0, "changes": 38, "blob_url": "https://github.com/rust-lang/rust/blob/813066c4429e7582b08dbf3af2c12a5f2e1b2a16/src%2Ftest%2Fui%2Fsymbol-names%2Fconst-generics-demangling.rs", "raw_url": "https://github.com/rust-lang/rust/raw/813066c4429e7582b08dbf3af2c12a5f2e1b2a16/src%2Ftest%2Fui%2Fsymbol-names%2Fconst-generics-demangling.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsymbol-names%2Fconst-generics-demangling.rs?ref=813066c4429e7582b08dbf3af2c12a5f2e1b2a16", "patch": "@@ -0,0 +1,38 @@\n+// build-fail\n+// compile-flags: -Z symbol-mangling-version=v0\n+\n+#![feature(min_const_generics, rustc_attrs)]\n+\n+pub struct Unsigned<const F: u8>;\n+\n+#[rustc_symbol_name]\n+//~^ ERROR symbol-name(_RMCs4fqI2P2rA04_25const_generics_demanglingINtB0_8UnsignedKhb_E)\n+//~| ERROR demangling(<const_generics_demangling[317d481089b8c8fe]::Unsigned<11: u8>>)\n+//~| ERROR demangling-alt(<const_generics_demangling::Unsigned<11>>)\n+impl Unsigned<11> {}\n+\n+pub struct Signed<const F: i16>;\n+\n+#[rustc_symbol_name]\n+//~^ ERROR symbol-name(_RMs_Cs4fqI2P2rA04_25const_generics_demanglingINtB2_6SignedKsn98_E)\n+//~| ERROR demangling(<const_generics_demangling[317d481089b8c8fe]::Signed<-152: i16>>)\n+//~| ERROR demangling-alt(<const_generics_demangling::Signed<-152>>)\n+impl Signed<-152> {}\n+\n+pub struct Bool<const F: bool>;\n+\n+#[rustc_symbol_name]\n+//~^ ERROR symbol-name(_RMs0_Cs4fqI2P2rA04_25const_generics_demanglingINtB3_4BoolKb1_E)\n+//~| ERROR demangling(<const_generics_demangling[317d481089b8c8fe]::Bool<true: bool>>)\n+//~| ERROR demangling-alt(<const_generics_demangling::Bool<true>>)\n+impl Bool<true> {}\n+\n+pub struct Char<const F: char>;\n+\n+#[rustc_symbol_name]\n+//~^ ERROR symbol-name(_RMs1_Cs4fqI2P2rA04_25const_generics_demanglingINtB3_4CharKc2202_E)\n+//~| ERROR demangling(<const_generics_demangling[317d481089b8c8fe]::Char<'\u2202': char>>)\n+//~| ERROR demangling-alt(<const_generics_demangling::Char<'\u2202'>>)\n+impl Char<'\u2202'> {}\n+\n+fn main() {}"}, {"sha": "022b3188373c935f56cc691e6db2dbb0fc9091cf", "filename": "src/test/ui/symbol-names/const-generics-demangling.stderr", "status": "added", "additions": 74, "deletions": 0, "changes": 74, "blob_url": "https://github.com/rust-lang/rust/blob/813066c4429e7582b08dbf3af2c12a5f2e1b2a16/src%2Ftest%2Fui%2Fsymbol-names%2Fconst-generics-demangling.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/813066c4429e7582b08dbf3af2c12a5f2e1b2a16/src%2Ftest%2Fui%2Fsymbol-names%2Fconst-generics-demangling.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsymbol-names%2Fconst-generics-demangling.stderr?ref=813066c4429e7582b08dbf3af2c12a5f2e1b2a16", "patch": "@@ -0,0 +1,74 @@\n+error: symbol-name(_RMCs4fqI2P2rA04_25const_generics_demanglingINtB0_8UnsignedKhb_E)\n+  --> $DIR/const-generics-demangling.rs:8:1\n+   |\n+LL | #[rustc_symbol_name]\n+   | ^^^^^^^^^^^^^^^^^^^^\n+\n+error: demangling(<const_generics_demangling[317d481089b8c8fe]::Unsigned<11: u8>>)\n+  --> $DIR/const-generics-demangling.rs:8:1\n+   |\n+LL | #[rustc_symbol_name]\n+   | ^^^^^^^^^^^^^^^^^^^^\n+\n+error: demangling-alt(<const_generics_demangling::Unsigned<11>>)\n+  --> $DIR/const-generics-demangling.rs:8:1\n+   |\n+LL | #[rustc_symbol_name]\n+   | ^^^^^^^^^^^^^^^^^^^^\n+\n+error: symbol-name(_RMs_Cs4fqI2P2rA04_25const_generics_demanglingINtB2_6SignedKsn98_E)\n+  --> $DIR/const-generics-demangling.rs:16:1\n+   |\n+LL | #[rustc_symbol_name]\n+   | ^^^^^^^^^^^^^^^^^^^^\n+\n+error: demangling(<const_generics_demangling[317d481089b8c8fe]::Signed<-152: i16>>)\n+  --> $DIR/const-generics-demangling.rs:16:1\n+   |\n+LL | #[rustc_symbol_name]\n+   | ^^^^^^^^^^^^^^^^^^^^\n+\n+error: demangling-alt(<const_generics_demangling::Signed<-152>>)\n+  --> $DIR/const-generics-demangling.rs:16:1\n+   |\n+LL | #[rustc_symbol_name]\n+   | ^^^^^^^^^^^^^^^^^^^^\n+\n+error: symbol-name(_RMs0_Cs4fqI2P2rA04_25const_generics_demanglingINtB3_4BoolKb1_E)\n+  --> $DIR/const-generics-demangling.rs:24:1\n+   |\n+LL | #[rustc_symbol_name]\n+   | ^^^^^^^^^^^^^^^^^^^^\n+\n+error: demangling(<const_generics_demangling[317d481089b8c8fe]::Bool<true: bool>>)\n+  --> $DIR/const-generics-demangling.rs:24:1\n+   |\n+LL | #[rustc_symbol_name]\n+   | ^^^^^^^^^^^^^^^^^^^^\n+\n+error: demangling-alt(<const_generics_demangling::Bool<true>>)\n+  --> $DIR/const-generics-demangling.rs:24:1\n+   |\n+LL | #[rustc_symbol_name]\n+   | ^^^^^^^^^^^^^^^^^^^^\n+\n+error: symbol-name(_RMs1_Cs4fqI2P2rA04_25const_generics_demanglingINtB3_4CharKc2202_E)\n+  --> $DIR/const-generics-demangling.rs:32:1\n+   |\n+LL | #[rustc_symbol_name]\n+   | ^^^^^^^^^^^^^^^^^^^^\n+\n+error: demangling(<const_generics_demangling[317d481089b8c8fe]::Char<'\u2202': char>>)\n+  --> $DIR/const-generics-demangling.rs:32:1\n+   |\n+LL | #[rustc_symbol_name]\n+   | ^^^^^^^^^^^^^^^^^^^^\n+\n+error: demangling-alt(<const_generics_demangling::Char<'\u2202'>>)\n+  --> $DIR/const-generics-demangling.rs:32:1\n+   |\n+LL | #[rustc_symbol_name]\n+   | ^^^^^^^^^^^^^^^^^^^^\n+\n+error: aborting due to 12 previous errors\n+"}, {"sha": "ad87000228d04ac0a98fbdd0f178a3a3c2ea50db", "filename": "src/test/ui/symbol-names/const-generics.rs", "status": "added", "additions": 87, "deletions": 0, "changes": 87, "blob_url": "https://github.com/rust-lang/rust/blob/813066c4429e7582b08dbf3af2c12a5f2e1b2a16/src%2Ftest%2Fui%2Fsymbol-names%2Fconst-generics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/813066c4429e7582b08dbf3af2c12a5f2e1b2a16/src%2Ftest%2Fui%2Fsymbol-names%2Fconst-generics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsymbol-names%2Fconst-generics.rs?ref=813066c4429e7582b08dbf3af2c12a5f2e1b2a16", "patch": "@@ -0,0 +1,87 @@\n+// check-pass\n+// revisions: legacy v0\n+//[legacy]compile-flags: -Z symbol-mangling-version=legacy --crate-type=lib\n+    //[v0]compile-flags: -Z symbol-mangling-version=v0 --crate-type=lib\n+\n+    #![feature(min_const_generics)]\n+\n+    // `char`\n+    pub struct Char<const F: char>;\n+\n+    impl Char<'A'> {\n+        pub fn foo() {}\n+    }\n+\n+    impl<const F: char> Char<F> {\n+        pub fn bar() {}\n+    }\n+\n+    // `i8`\n+    pub struct I8<const F: i8>;\n+\n+    impl I8<{std::i8::MIN}> {\n+        pub fn foo() {}\n+    }\n+\n+    impl I8<{std::i8::MAX}> {\n+        pub fn foo() {}\n+    }\n+\n+    impl<const F: i8> I8<F> {\n+        pub fn bar() {}\n+    }\n+\n+    // `i16`\n+    pub struct I16<const F: i16>;\n+\n+    impl I16<{std::i16::MIN}> {\n+        pub fn foo() {}\n+    }\n+\n+    impl<const F: i16> I16<F> {\n+        pub fn bar() {}\n+    }\n+\n+    // `i32`\n+    pub struct I32<const F: i32>;\n+\n+    impl I32<{std::i32::MIN}> {\n+        pub fn foo() {}\n+    }\n+\n+    impl<const F: i32> I32<F> {\n+        pub fn bar() {}\n+    }\n+\n+    // `i64`\n+    pub struct I64<const F: i64>;\n+\n+    impl I64<{std::i64::MIN}> {\n+        pub fn foo() {}\n+    }\n+\n+    impl<const F: i64> I64<F> {\n+        pub fn bar() {}\n+    }\n+\n+    // `i128`\n+    pub struct I128<const F: i128>;\n+\n+    impl I128<{std::i128::MIN}> {\n+        pub fn foo() {}\n+    }\n+\n+    impl<const F: i128> I128<F> {\n+        pub fn bar() {}\n+    }\n+\n+    // `isize`\n+    pub struct ISize<const F: isize>;\n+\n+    impl ISize<3> {\n+        pub fn foo() {}\n+    }\n+\n+    impl<const F: isize> ISize<F> {\n+        pub fn bar() {}\n+    }"}, {"sha": "ac684a3c47e42f8d6fc88b0383a0392982415aed", "filename": "src/tools/rust-demangler/Cargo.toml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/813066c4429e7582b08dbf3af2c12a5f2e1b2a16/src%2Ftools%2Frust-demangler%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/813066c4429e7582b08dbf3af2c12a5f2e1b2a16/src%2Ftools%2Frust-demangler%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Frust-demangler%2FCargo.toml?ref=813066c4429e7582b08dbf3af2c12a5f2e1b2a16", "patch": "@@ -6,7 +6,7 @@ edition = \"2018\"\n \n [dependencies]\n regex = \"1.0\"\n-rustc-demangle = \"0.1\"\n+rustc-demangle = \"0.1.17\"\n \n [[bin]]\n name = \"rust-demangler\""}]}