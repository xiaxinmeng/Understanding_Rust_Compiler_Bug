{"sha": "a029ce80a6f17f34dbc268cc188ecce1142ab2d9", "node_id": "MDY6Q29tbWl0NzI0NzEyOmEwMjljZTgwYTZmMTdmMzRkYmMyNjhjYzE4OGVjY2UxMTQyYWIyZDk=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-08-10T06:13:24Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-08-10T06:13:24Z"}, "message": "Rollup merge of #63419 - RalfJung:typeid, r=alexcrichton\n\ncheck against more collisions for TypeId of fn pointer\n\nCc https://github.com/rust-lang/rfcs/pull/2738#issuecomment-519923318", "tree": {"sha": "c77dd28a97fe3f389f80b57358eeb8c800ad5a97", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c77dd28a97fe3f389f80b57358eeb8c800ad5a97"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a029ce80a6f17f34dbc268cc188ecce1142ab2d9", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJdTmCECRBK7hj4Ov3rIwAAdHIIAApEIyJVCS9pM4TCCyDtL2qw\nL7TLAIE5BUWA4rKv9boorS8UTQ0IZ2zXuX1Pl21W63UkaKELgEsir7tbRTKYxJfy\nIyUH7EmBgLiuMk6SqPZ6k4GWHrijTeDgeW2/iHBCH93xpXjsdjuhPOBGv7++9fPK\nmK+VYcDZXFlXx7wAiC6l/hegrPmmY98ZBdQb59dMwZ1YMCUnYQEFFxwjUk1HoCJ1\nIHhFmj8MzVmU6mf8zeZYQ/bQdn0dXpZBa4cp60aIa6cXIk2UbvELiw3zvwZyiSj+\n4zkauLx/Tc09utEz1jMvre7gigbQfrj/Sy1zfnThf49098VxVxeLeTi5RMEs1tM=\n=A4a5\n-----END PGP SIGNATURE-----\n", "payload": "tree c77dd28a97fe3f389f80b57358eeb8c800ad5a97\nparent 9e613c74be901b86860aa2f6987228e6328e7a18\nparent 4dd96d2b0fc87e7081009ab26ba396e3638a4ada\nauthor Mazdak Farrokhzad <twingoow@gmail.com> 1565417604 +0200\ncommitter GitHub <noreply@github.com> 1565417604 +0200\n\nRollup merge of #63419 - RalfJung:typeid, r=alexcrichton\n\ncheck against more collisions for TypeId of fn pointer\n\nCc https://github.com/rust-lang/rfcs/pull/2738#issuecomment-519923318\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a029ce80a6f17f34dbc268cc188ecce1142ab2d9", "html_url": "https://github.com/rust-lang/rust/commit/a029ce80a6f17f34dbc268cc188ecce1142ab2d9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a029ce80a6f17f34dbc268cc188ecce1142ab2d9/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9e613c74be901b86860aa2f6987228e6328e7a18", "url": "https://api.github.com/repos/rust-lang/rust/commits/9e613c74be901b86860aa2f6987228e6328e7a18", "html_url": "https://github.com/rust-lang/rust/commit/9e613c74be901b86860aa2f6987228e6328e7a18"}, {"sha": "4dd96d2b0fc87e7081009ab26ba396e3638a4ada", "url": "https://api.github.com/repos/rust-lang/rust/commits/4dd96d2b0fc87e7081009ab26ba396e3638a4ada", "html_url": "https://github.com/rust-lang/rust/commit/4dd96d2b0fc87e7081009ab26ba396e3638a4ada"}], "stats": {"total": 18, "additions": 14, "deletions": 4}, "files": [{"sha": "5bc4e0c217f40894c0d406cce38ceeb41cc95f8d", "filename": "src/test/ui/typeid-intrinsic.rs", "status": "modified", "additions": 14, "deletions": 4, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/a029ce80a6f17f34dbc268cc188ecce1142ab2d9/src%2Ftest%2Fui%2Ftypeid-intrinsic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a029ce80a6f17f34dbc268cc188ecce1142ab2d9/src%2Ftest%2Fui%2Ftypeid-intrinsic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftypeid-intrinsic.rs?ref=a029ce80a6f17f34dbc268cc188ecce1142ab2d9", "patch": "@@ -78,10 +78,20 @@ pub fn main() {\n     assert_eq!(TypeId::of::<other1::U32Iterator>(), other1::id_u32_iterator());\n     assert_eq!(other1::id_i32_iterator(), other2::id_i32_iterator());\n     assert_eq!(other1::id_u32_iterator(), other2::id_u32_iterator());\n-    assert!(other1::id_i32_iterator() != other1::id_u32_iterator());\n-    assert!(TypeId::of::<other1::I32Iterator>() != TypeId::of::<other1::U32Iterator>());\n+    assert_ne!(other1::id_i32_iterator(), other1::id_u32_iterator());\n+    assert_ne!(TypeId::of::<other1::I32Iterator>(), TypeId::of::<other1::U32Iterator>());\n \n     // Check fn pointer against collisions\n-    assert!(TypeId::of::<fn(fn(A) -> A) -> A>() !=\n-            TypeId::of::<fn(fn() -> A, A) -> A>());\n+    assert_ne!(\n+        TypeId::of::<fn(fn(A) -> A) -> A>(),\n+        TypeId::of::<fn(fn() -> A, A) -> A>()\n+    );\n+    assert_ne!(\n+        TypeId::of::<for<'a> fn(&'a i32) -> &'a i32>(),\n+        TypeId::of::<for<'a> fn(&'a i32) -> &'static i32>()\n+    );\n+    assert_ne!(\n+        TypeId::of::<for<'a, 'b> fn(&'a i32, &'b i32) -> &'a i32>(),\n+        TypeId::of::<for<'a, 'b> fn(&'b i32, &'a i32) -> &'a i32>()\n+    );\n }"}]}