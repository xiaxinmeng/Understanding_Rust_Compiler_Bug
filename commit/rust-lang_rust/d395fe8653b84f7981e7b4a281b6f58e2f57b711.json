{"sha": "d395fe8653b84f7981e7b4a281b6f58e2f57b711", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQzOTVmZTg2NTNiODRmNzk4MWU3YjRhMjgxYjZmNThlMmY1N2I3MTE=", "commit": {"author": {"name": "Santiago Pastorino", "email": "spastorino@gmail.com", "date": "2021-07-27T22:48:54Z"}, "committer": {"name": "Santiago Pastorino", "email": "spastorino@gmail.com", "date": "2021-07-27T22:48:54Z"}, "message": "Bless nll tests", "tree": {"sha": "d9a239d5f6c4852f737dbf5633a6a6caa83fe6f4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d9a239d5f6c4852f737dbf5633a6a6caa83fe6f4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d395fe8653b84f7981e7b4a281b6f58e2f57b711", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEF0ntrgrd9qf9uuThgTGiTgx5768FAmEAjVYACgkQgTGiTgx5\n768NzQ/+LaKRCbs9YYGmbu+G2fz5zfwx088SloljT/Tl2GWlJhk3uKxxoPeyvFO+\nH/nHYWR5j6MhDxfh7LYJhOnCqVsYmHdovF2mLrRua78eh67BHVjRoUJ+S59tLwmR\nIvKJxgYD7MUVzKl8NYVfzvJvGS7qhkkcPWdaFQCY34iwc7jl8J6laG4EhI7babLR\n61XeOe+XvN4Pp4ahyonjkH1CadfbDQu+zwFTazO7KbpqfSrP3ZJuB4iCYdmwKMFt\nUAWtefppyblyi79QHPlfAFJ1tVkarR0xI7MChcR6ZNIOx935jKbntxchCFfJnaUA\nzcsUkigN6tF8EpBP7DX1sXDLJqTetX7NqHew1iy1fVc7opnueZhMoX3G9s4MOpFa\nxCRG8/L6GYpjXGhYcq59nqORe4e2vlZn0PrJvpIY6YmfvYd3lRatKr7Up/8FG7zY\nmAK21H9DhMXiwC5t+HW35X/42XfOUqT/OeMVg03dtlTapeNCzQ1GQsX0kyRUDBE3\nS+rNFAYNjGbxObOkV2yiVi4kBfjY2LreU3GiWw6X4Koft8GMnr4PiT/h5i3P4UcV\nXLruehgktjDOIyBt/AcKReAEWiw65x56JzfT5sGGdg/qscOJ29YKnqHVmsD8TEby\nbqrycCqW1BT2vGa/GbnGX+O82QuSENUcaTtikQgpyJHbvIJ61g0=\n=ZhZu\n-----END PGP SIGNATURE-----", "payload": "tree d9a239d5f6c4852f737dbf5633a6a6caa83fe6f4\nparent 9629d798ca289934c0c0b622124c642aaf53e018\nauthor Santiago Pastorino <spastorino@gmail.com> 1627426134 -0300\ncommitter Santiago Pastorino <spastorino@gmail.com> 1627426134 -0300\n\nBless nll tests\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d395fe8653b84f7981e7b4a281b6f58e2f57b711", "html_url": "https://github.com/rust-lang/rust/commit/d395fe8653b84f7981e7b4a281b6f58e2f57b711", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d395fe8653b84f7981e7b4a281b6f58e2f57b711/comments", "author": {"login": "spastorino", "id": 52642, "node_id": "MDQ6VXNlcjUyNjQy", "avatar_url": "https://avatars.githubusercontent.com/u/52642?v=4", "gravatar_id": "", "url": "https://api.github.com/users/spastorino", "html_url": "https://github.com/spastorino", "followers_url": "https://api.github.com/users/spastorino/followers", "following_url": "https://api.github.com/users/spastorino/following{/other_user}", "gists_url": "https://api.github.com/users/spastorino/gists{/gist_id}", "starred_url": "https://api.github.com/users/spastorino/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/spastorino/subscriptions", "organizations_url": "https://api.github.com/users/spastorino/orgs", "repos_url": "https://api.github.com/users/spastorino/repos", "events_url": "https://api.github.com/users/spastorino/events{/privacy}", "received_events_url": "https://api.github.com/users/spastorino/received_events", "type": "User", "site_admin": false}, "committer": {"login": "spastorino", "id": 52642, "node_id": "MDQ6VXNlcjUyNjQy", "avatar_url": "https://avatars.githubusercontent.com/u/52642?v=4", "gravatar_id": "", "url": "https://api.github.com/users/spastorino", "html_url": "https://github.com/spastorino", "followers_url": "https://api.github.com/users/spastorino/followers", "following_url": "https://api.github.com/users/spastorino/following{/other_user}", "gists_url": "https://api.github.com/users/spastorino/gists{/gist_id}", "starred_url": "https://api.github.com/users/spastorino/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/spastorino/subscriptions", "organizations_url": "https://api.github.com/users/spastorino/orgs", "repos_url": "https://api.github.com/users/spastorino/repos", "events_url": "https://api.github.com/users/spastorino/events{/privacy}", "received_events_url": "https://api.github.com/users/spastorino/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9629d798ca289934c0c0b622124c642aaf53e018", "url": "https://api.github.com/repos/rust-lang/rust/commits/9629d798ca289934c0c0b622124c642aaf53e018", "html_url": "https://github.com/rust-lang/rust/commit/9629d798ca289934c0c0b622124c642aaf53e018"}], "stats": {"total": 79, "additions": 79, "deletions": 0}, "files": [{"sha": "84f48cd6c0d202228ceb4916811722ac9887180e", "filename": "src/test/ui/type-alias-impl-trait/generic_type_does_not_live_long_enough.nll.stderr", "status": "added", "additions": 41, "deletions": 0, "changes": 41, "blob_url": "https://github.com/rust-lang/rust/blob/d395fe8653b84f7981e7b4a281b6f58e2f57b711/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Fgeneric_type_does_not_live_long_enough.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d395fe8653b84f7981e7b4a281b6f58e2f57b711/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Fgeneric_type_does_not_live_long_enough.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Fgeneric_type_does_not_live_long_enough.nll.stderr?ref=d395fe8653b84f7981e7b4a281b6f58e2f57b711", "patch": "@@ -0,0 +1,41 @@\n+error: at least one trait must be specified\n+  --> $DIR/generic_type_does_not_live_long_enough.rs:9:24\n+   |\n+LL | type WrongGeneric<T> = impl 'static;\n+   |                        ^^^^^^^^^^^^\n+\n+error[E0308]: mismatched types\n+  --> $DIR/generic_type_does_not_live_long_enough.rs:6:18\n+   |\n+LL |     let z: i32 = x;\n+   |            ---   ^ expected `i32`, found opaque type\n+   |            |\n+   |            expected due to this\n+...\n+LL | type WrongGeneric<T> = impl 'static;\n+   |                        ------------ the found opaque type\n+   |\n+   = note:     expected type `i32`\n+           found opaque type `impl Sized`\n+\n+error[E0310]: the parameter type `T` may not live long enough\n+  --> $DIR/generic_type_does_not_live_long_enough.rs:13:30\n+   |\n+LL | fn wrong_generic<T>(t: T) -> WrongGeneric<T> {\n+   |                              ^^^^^^^^^^^^^^^\n+   |\n+   = help: consider adding an explicit lifetime bound `T: 'static`...\n+\n+error[E0310]: the parameter type `T` may not live long enough\n+  --> $DIR/generic_type_does_not_live_long_enough.rs:9:24\n+   |\n+LL | type WrongGeneric<T> = impl 'static;\n+   |                        ^^^^^^^^^^^^\n+   |\n+   = help: consider adding an explicit lifetime bound `T: 'static`...\n+   = note: ...so that the type `T` will meet its required lifetime bounds\n+\n+error: aborting due to 4 previous errors\n+\n+Some errors have detailed explanations: E0308, E0310.\n+For more information about an error, try `rustc --explain E0308`."}, {"sha": "a4ccae4eb7ed99e7b5b49de3479f78aa5db2f44b", "filename": "src/test/ui/type-alias-impl-trait/issue-57611-trait-alias.nll.stderr", "status": "added", "additions": 38, "deletions": 0, "changes": 38, "blob_url": "https://github.com/rust-lang/rust/blob/d395fe8653b84f7981e7b4a281b6f58e2f57b711/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Fissue-57611-trait-alias.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d395fe8653b84f7981e7b4a281b6f58e2f57b711/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Fissue-57611-trait-alias.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Fissue-57611-trait-alias.nll.stderr?ref=d395fe8653b84f7981e7b4a281b6f58e2f57b711", "patch": "@@ -0,0 +1,38 @@\n+error: higher-ranked subtype error\n+  --> $DIR/issue-57611-trait-alias.rs:21:9\n+   |\n+LL |         |x| x\n+   |         ^^^^^\n+\n+error: higher-ranked subtype error\n+  --> $DIR/issue-57611-trait-alias.rs:21:9\n+   |\n+LL |         |x| x\n+   |         ^^^^^\n+\n+error[E0308]: mismatched types\n+  --> $DIR/issue-57611-trait-alias.rs:17:16\n+   |\n+LL |     type Bar = impl Baz<Self, Self>;\n+   |                ^^^^^^^^^^^^^^^^^^^^ one type is more general than the other\n+   |\n+   = note: expected type `for<'r> Fn<(&'r X,)>`\n+              found type `Fn<(&'static X,)>`\n+note: this closure does not fulfill the lifetime requirements\n+  --> $DIR/issue-57611-trait-alias.rs:21:9\n+   |\n+LL |         |x| x\n+   |         ^^^^^\n+\n+error: implementation of `FnOnce` is not general enough\n+  --> $DIR/issue-57611-trait-alias.rs:17:16\n+   |\n+LL |     type Bar = impl Baz<Self, Self>;\n+   |                ^^^^^^^^^^^^^^^^^^^^ implementation of `FnOnce` is not general enough\n+   |\n+   = note: closure with signature `fn(&'static X) -> &'static X` must implement `FnOnce<(&'0 X,)>`, for any lifetime `'0`...\n+   = note: ...but it actually implements `FnOnce<(&'static X,)>`\n+\n+error: aborting due to 4 previous errors\n+\n+For more information about this error, try `rustc --explain E0308`."}]}