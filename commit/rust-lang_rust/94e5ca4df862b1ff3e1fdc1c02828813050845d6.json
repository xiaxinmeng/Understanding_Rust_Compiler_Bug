{"sha": "94e5ca4df862b1ff3e1fdc1c02828813050845d6", "node_id": "MDY6Q29tbWl0NzI0NzEyOjk0ZTVjYTRkZjg2MmIxZmYzZTFmZGMxYzAyODI4ODEzMDUwODQ1ZDY=", "commit": {"author": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2011-04-23T02:26:00Z"}, "committer": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2011-04-23T02:26:00Z"}, "message": "rustc: Include the cname in the hash to increase entropy", "tree": {"sha": "e98ed5b57268b2fcbe2f5c7601c4092e87299f6b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e98ed5b57268b2fcbe2f5c7601c4092e87299f6b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/94e5ca4df862b1ff3e1fdc1c02828813050845d6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/94e5ca4df862b1ff3e1fdc1c02828813050845d6", "html_url": "https://github.com/rust-lang/rust/commit/94e5ca4df862b1ff3e1fdc1c02828813050845d6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/94e5ca4df862b1ff3e1fdc1c02828813050845d6/comments", "author": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e0eccaddb2bad87993505fffc523a47b68018e64", "url": "https://api.github.com/repos/rust-lang/rust/commits/e0eccaddb2bad87993505fffc523a47b68018e64", "html_url": "https://github.com/rust-lang/rust/commit/e0eccaddb2bad87993505fffc523a47b68018e64"}], "stats": {"total": 11, "additions": 10, "deletions": 1}, "files": [{"sha": "36fb258d55c6dfeefc57e6de17c2bcde7475b101", "filename": "src/comp/middle/ty.rs", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/94e5ca4df862b1ff3e1fdc1c02828813050845d6/src%2Fcomp%2Fmiddle%2Fty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/94e5ca4df862b1ff3e1fdc1c02828813050845d6/src%2Fcomp%2Fmiddle%2Fty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Fty.rs?ref=94e5ca4df862b1ff3e1fdc1c02828813050845d6", "patch": "@@ -120,7 +120,7 @@ fn gen_ty(@type_store tystore, &sty st) -> t {\n }\n \n fn gen_ty_full(@type_store tystore, &sty st, option.t[str] cname) -> t {\n-    auto h = hash_type_structure(st);\n+    auto h = hash_type_info(st, cname);\n     auto new_type = @rec(struct=st, cname=cname, hash=h);\n \n     // Is it interned?\n@@ -888,6 +888,15 @@ fn hash_type_structure(&sty st) -> uint {\n     }\n }\n \n+fn hash_type_info(&sty st, option.t[str] cname_opt) -> uint {\n+    auto h = hash_type_structure(st);\n+    alt (cname_opt) {\n+        case (none[str]) { /* no-op */ }\n+        case (some[str](?s)) { h += h << 5u + _str.hash(s); }\n+    }\n+    ret h;\n+}\n+\n fn hash_ty(&t typ) -> uint { ret typ.hash; }\n \n "}]}