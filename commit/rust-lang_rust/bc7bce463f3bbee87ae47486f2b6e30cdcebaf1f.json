{"sha": "bc7bce463f3bbee87ae47486f2b6e30cdcebaf1f", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJjN2JjZTQ2M2YzYmJlZTg3YWU0NzQ4NmYyYjZlMzBjZGNlYmFmMWY=", "commit": {"author": {"name": "Joshua Nelson", "email": "jyn514@gmail.com", "date": "2020-08-25T13:22:26Z"}, "committer": {"name": "Joshua Nelson", "email": "jyn514@gmail.com", "date": "2020-08-25T13:22:26Z"}, "message": "Rename debugging_options -> debugging_opts to match rustc\n\nThis way the rustdoc field names are the same as the rustc field names.", "tree": {"sha": "e9061a1a5adc7ca0c629c2e5b324322bf4ea58c9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e9061a1a5adc7ca0c629c2e5b324322bf4ea58c9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/bc7bce463f3bbee87ae47486f2b6e30cdcebaf1f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/bc7bce463f3bbee87ae47486f2b6e30cdcebaf1f", "html_url": "https://github.com/rust-lang/rust/commit/bc7bce463f3bbee87ae47486f2b6e30cdcebaf1f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/bc7bce463f3bbee87ae47486f2b6e30cdcebaf1f/comments", "author": {"login": "jyn514", "id": 23638587, "node_id": "MDQ6VXNlcjIzNjM4NTg3", "avatar_url": "https://avatars.githubusercontent.com/u/23638587?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jyn514", "html_url": "https://github.com/jyn514", "followers_url": "https://api.github.com/users/jyn514/followers", "following_url": "https://api.github.com/users/jyn514/following{/other_user}", "gists_url": "https://api.github.com/users/jyn514/gists{/gist_id}", "starred_url": "https://api.github.com/users/jyn514/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jyn514/subscriptions", "organizations_url": "https://api.github.com/users/jyn514/orgs", "repos_url": "https://api.github.com/users/jyn514/repos", "events_url": "https://api.github.com/users/jyn514/events{/privacy}", "received_events_url": "https://api.github.com/users/jyn514/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jyn514", "id": 23638587, "node_id": "MDQ6VXNlcjIzNjM4NTg3", "avatar_url": "https://avatars.githubusercontent.com/u/23638587?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jyn514", "html_url": "https://github.com/jyn514", "followers_url": "https://api.github.com/users/jyn514/followers", "following_url": "https://api.github.com/users/jyn514/following{/other_user}", "gists_url": "https://api.github.com/users/jyn514/gists{/gist_id}", "starred_url": "https://api.github.com/users/jyn514/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jyn514/subscriptions", "organizations_url": "https://api.github.com/users/jyn514/orgs", "repos_url": "https://api.github.com/users/jyn514/repos", "events_url": "https://api.github.com/users/jyn514/events{/privacy}", "received_events_url": "https://api.github.com/users/jyn514/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1a6c3d449acd392a48e2837baffdc6b778c85c19", "url": "https://api.github.com/repos/rust-lang/rust/commits/1a6c3d449acd392a48e2837baffdc6b778c85c19", "html_url": "https://github.com/rust-lang/rust/commit/1a6c3d449acd392a48e2837baffdc6b778c85c19"}], "stats": {"total": 26, "additions": 13, "deletions": 13}, "files": [{"sha": "14df4e7aa8e59567d2594ae9a7069c51ee2dfb84", "filename": "src/librustdoc/config.rs", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/bc7bce463f3bbee87ae47486f2b6e30cdcebaf1f/src%2Flibrustdoc%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bc7bce463f3bbee87ae47486f2b6e30cdcebaf1f/src%2Flibrustdoc%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fconfig.rs?ref=bc7bce463f3bbee87ae47486f2b6e30cdcebaf1f", "patch": "@@ -83,9 +83,9 @@ pub struct Options {\n     /// Codegen options strings to hand to the compiler.\n     pub codegen_options_strs: Vec<String>,\n     /// Debugging (`-Z`) options to pass to the compiler.\n-    pub debugging_options: DebuggingOptions,\n+    pub debugging_opts: DebuggingOptions,\n     /// Debugging (`-Z`) options strings to pass to the compiler.\n-    pub debugging_options_strs: Vec<String>,\n+    pub debugging_opts_strs: Vec<String>,\n     /// The target used to compile the crate against.\n     pub target: TargetTriple,\n     /// Edition used when reading the crate. Defaults to \"2015\". Also used by default when\n@@ -318,9 +318,9 @@ impl Options {\n         let error_format = config::parse_error_format(&matches, color, json_rendered);\n \n         let codegen_options = build_codegen_options(matches, error_format);\n-        let debugging_options = build_debugging_options(matches, error_format);\n+        let debugging_opts = build_debugging_options(matches, error_format);\n \n-        let diag = new_handler(error_format, None, &debugging_options);\n+        let diag = new_handler(error_format, None, &debugging_opts);\n \n         // check for deprecated options\n         check_deprecated_options(&matches, &diag);\n@@ -365,7 +365,7 @@ impl Options {\n             .iter()\n             .map(|s| SearchPath::from_cli_opt(s, error_format))\n             .collect();\n-        let externs = parse_externs(&matches, &debugging_options, error_format);\n+        let externs = parse_externs(&matches, &debugging_opts, error_format);\n         let extern_html_root_urls = match parse_extern_html_roots(&matches) {\n             Ok(ex) => ex,\n             Err(err) => {\n@@ -546,7 +546,7 @@ impl Options {\n         let persist_doctests = matches.opt_str(\"persist-doctests\").map(PathBuf::from);\n         let test_builder = matches.opt_str(\"test-builder\").map(PathBuf::from);\n         let codegen_options_strs = matches.opt_strs(\"C\");\n-        let debugging_options_strs = matches.opt_strs(\"Z\");\n+        let debugging_opts_strs = matches.opt_strs(\"Z\");\n         let lib_strs = matches.opt_strs(\"L\");\n         let extern_strs = matches.opt_strs(\"extern\");\n         let runtool = matches.opt_str(\"runtool\");\n@@ -569,8 +569,8 @@ impl Options {\n             cfgs,\n             codegen_options,\n             codegen_options_strs,\n-            debugging_options,\n-            debugging_options_strs,\n+            debugging_opts,\n+            debugging_opts_strs,\n             target,\n             edition,\n             maybe_sysroot,"}, {"sha": "e3086d32b5cc83e25aa34f965375a1c7c603e0e0", "filename": "src/librustdoc/core.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/bc7bce463f3bbee87ae47486f2b6e30cdcebaf1f/src%2Flibrustdoc%2Fcore.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bc7bce463f3bbee87ae47486f2b6e30cdcebaf1f/src%2Flibrustdoc%2Fcore.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fcore.rs?ref=bc7bce463f3bbee87ae47486f2b6e30cdcebaf1f", "patch": "@@ -294,7 +294,7 @@ pub fn run_core(\n         externs,\n         mut cfgs,\n         codegen_options,\n-        debugging_options,\n+        debugging_opts,\n         target,\n         edition,\n         maybe_sysroot,\n@@ -364,7 +364,7 @@ pub fn run_core(\n         target_triple: target,\n         unstable_features: UnstableFeatures::from_environment(),\n         actually_rustdoc: true,\n-        debugging_opts: debugging_options,\n+        debugging_opts,\n         error_format,\n         edition,\n         describe_lints,"}, {"sha": "b5e246b5d17a56a1f3d5d29a63d2654f8ac1a074", "filename": "src/librustdoc/lib.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/bc7bce463f3bbee87ae47486f2b6e30cdcebaf1f/src%2Flibrustdoc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bc7bce463f3bbee87ae47486f2b6e30cdcebaf1f/src%2Flibrustdoc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Flib.rs?ref=bc7bce463f3bbee87ae47486f2b6e30cdcebaf1f", "patch": "@@ -472,7 +472,7 @@ fn run_renderer<T: formats::FormatRenderer>(\n }\n \n fn main_options(options: config::Options) -> MainResult {\n-    let diag = core::new_handler(options.error_format, None, &options.debugging_options);\n+    let diag = core::new_handler(options.error_format, None, &options.debugging_opts);\n \n     match (options.should_test, options.markdown_input()) {\n         (true, true) => return wrap_return(&diag, markdown::test(options)),\n@@ -488,7 +488,7 @@ fn main_options(options: config::Options) -> MainResult {\n \n     // need to move these items separately because we lose them by the time the closure is called,\n     // but we can't crates the Handler ahead of time because it's not Send\n-    let diag_opts = (options.error_format, options.edition, options.debugging_options.clone());\n+    let diag_opts = (options.error_format, options.edition, options.debugging_opts.clone());\n     let show_coverage = options.show_coverage;\n \n     // First, parse the crate and extract all relevant information."}, {"sha": "7b7c152d8abbf65e6c57a9b3dc41d9b712fff52e", "filename": "src/librustdoc/test.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/bc7bce463f3bbee87ae47486f2b6e30cdcebaf1f/src%2Flibrustdoc%2Ftest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bc7bce463f3bbee87ae47486f2b6e30cdcebaf1f/src%2Flibrustdoc%2Ftest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Ftest.rs?ref=bc7bce463f3bbee87ae47486f2b6e30cdcebaf1f", "patch": "@@ -281,7 +281,7 @@ fn run_test(\n     for codegen_options_str in &options.codegen_options_strs {\n         compiler.arg(\"-C\").arg(&codegen_options_str);\n     }\n-    for debugging_option_str in &options.debugging_options_strs {\n+    for debugging_option_str in &options.debugging_opts_strs {\n         compiler.arg(\"-Z\").arg(&debugging_option_str);\n     }\n     if no_run && !compile_fail {"}]}