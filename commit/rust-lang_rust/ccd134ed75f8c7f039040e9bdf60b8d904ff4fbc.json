{"sha": "ccd134ed75f8c7f039040e9bdf60b8d904ff4fbc", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNjZDEzNGVkNzVmOGM3ZjAzOTA0MGU5YmRmNjBiOGQ5MDRmZjRmYmM=", "commit": {"author": {"name": "Seiichi Uchida", "email": "seuchida@gmail.com", "date": "2018-03-10T06:11:49Z"}, "committer": {"name": "topecongiro", "email": "seuchida@gmail.com", "date": "2018-03-11T22:54:12Z"}, "message": "Add a test for #2497\n\nCloses #2497.", "tree": {"sha": "9ceb97394f6a917ef3bc8fa626150ffbf159e82b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9ceb97394f6a917ef3bc8fa626150ffbf159e82b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ccd134ed75f8c7f039040e9bdf60b8d904ff4fbc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ccd134ed75f8c7f039040e9bdf60b8d904ff4fbc", "html_url": "https://github.com/rust-lang/rust/commit/ccd134ed75f8c7f039040e9bdf60b8d904ff4fbc", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ccd134ed75f8c7f039040e9bdf60b8d904ff4fbc/comments", "author": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "committer": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7917d6f94acff2cd666b95d4e6c7b7acb6442d2c", "url": "https://api.github.com/repos/rust-lang/rust/commits/7917d6f94acff2cd666b95d4e6c7b7acb6442d2c", "html_url": "https://github.com/rust-lang/rust/commit/7917d6f94acff2cd666b95d4e6c7b7acb6442d2c"}], "stats": {"total": 51, "additions": 47, "deletions": 4}, "files": [{"sha": "b639697194b7a5f68ca04e669602d2bb1cffcb90", "filename": "src/items.rs", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ccd134ed75f8c7f039040e9bdf60b8d904ff4fbc/src%2Fitems.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ccd134ed75f8c7f039040e9bdf60b8d904ff4fbc/src%2Fitems.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fitems.rs?ref=ccd134ed75f8c7f039040e9bdf60b8d904ff4fbc", "patch": "@@ -921,10 +921,6 @@ pub fn format_trait(context: &RewriteContext, item: &ast::Item, offset: Indent)\n             }\n         }\n         if !type_param_bounds.is_empty() {\n-            let shape = Shape {\n-                indent: shape.indent.block_unindent(context.config),\n-                ..shape\n-            };\n             result = rewrite_assign_rhs_with(\n                 context,\n                 result + \":\","}, {"sha": "d915fccf1a0f1cb370d8950533cdd548b2b7c4ed", "filename": "tests/source/where-clause-rfc.rs", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/ccd134ed75f8c7f039040e9bdf60b8d904ff4fbc/tests%2Fsource%2Fwhere-clause-rfc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ccd134ed75f8c7f039040e9bdf60b8d904ff4fbc/tests%2Fsource%2Fwhere-clause-rfc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fsource%2Fwhere-clause-rfc.rs?ref=ccd134ed75f8c7f039040e9bdf60b8d904ff4fbc", "patch": "@@ -56,3 +56,20 @@ impl<'a, 'gcx, 'tcx> ProbeContext<'a, 'gcx, 'tcx> {\n         // ...\n     }\n }\n+\n+// #2497\n+fn handle_update<'a, Tab, Conn, R, C>(executor: &Executor<PooledConnection<ConnectionManager<Conn>>>, change_set: &'a C) -> ExecutionResult\n+where &'a C: Identifiable + AsChangeset<Target = Tab> + HasTable<Table = Tab>,\n+      <&'a C as AsChangeset>::Changeset: QueryFragment<Conn::Backend>,\n+      Tab: Table + HasTable<Table = Tab>,\n+      Tab::PrimaryKey: EqAll<<&'a C as Identifiable>::Id>,\n+      Tab::FromClause: QueryFragment<Conn::Backend>,\n+      Tab: FindDsl<<&'a C as Identifiable>::Id>,\n+      Find<Tab, <&'a C as Identifiable>::Id>: IntoUpdateTarget<Table = Tab>,\n+      <Find<Tab, <&'a C as Identifiable>::Id> as IntoUpdateTarget>::WhereClause: QueryFragment<Conn::Backend>,\n+      Tab::Query: FilterDsl<<Tab::PrimaryKey as EqAll<<&'a C as Identifiable>::Id>>::Output>,\n+      Filter<Tab::Query, <Tab::PrimaryKey as EqAll<<&'a C as Identifiable>::Id>>::Output>: LimitDsl,\n+      Limit<Filter<Tab::Query, <Tab::PrimaryKey as EqAll<<&'a C as Identifiable>::Id>>::Output>>: QueryDsl + BoxedDsl< 'a, Conn::Backend, Output = BoxedSelectStatement<'a, R::SqlType, Tab, Conn::Backend>>,\n+      R: LoadingHandler<Conn, Table = Tab, SqlType = Tab::SqlType> + GraphQLType<TypeInfo = (), Context = ()>, {\n+    unimplemented!()\n+}"}, {"sha": "a41d82c8e4179da431c8606a7dcb878e87c3ed1f", "filename": "tests/target/where-clause-rfc.rs", "status": "modified", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/ccd134ed75f8c7f039040e9bdf60b8d904ff4fbc/tests%2Ftarget%2Fwhere-clause-rfc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ccd134ed75f8c7f039040e9bdf60b8d904ff4fbc/tests%2Ftarget%2Fwhere-clause-rfc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fwhere-clause-rfc.rs?ref=ccd134ed75f8c7f039040e9bdf60b8d904ff4fbc", "patch": "@@ -126,3 +126,33 @@ impl<'a, 'gcx, 'tcx> ProbeContext<'a, 'gcx, 'tcx> {\n         // ...\n     }\n }\n+\n+// #2497\n+fn handle_update<'a, Tab, Conn, R, C>(\n+    executor: &Executor<PooledConnection<ConnectionManager<Conn>>>,\n+    change_set: &'a C,\n+) -> ExecutionResult\n+where\n+    &'a C: Identifiable + AsChangeset<Target = Tab> + HasTable<Table = Tab>,\n+    <&'a C as AsChangeset>::Changeset: QueryFragment<Conn::Backend>,\n+    Tab: Table + HasTable<Table = Tab>,\n+    Tab::PrimaryKey: EqAll<<&'a C as Identifiable>::Id>,\n+    Tab::FromClause: QueryFragment<Conn::Backend>,\n+    Tab: FindDsl<<&'a C as Identifiable>::Id>,\n+    Find<Tab, <&'a C as Identifiable>::Id>: IntoUpdateTarget<Table = Tab>,\n+    <Find<Tab, <&'a C as Identifiable>::Id> as IntoUpdateTarget>::WhereClause:\n+        QueryFragment<Conn::Backend>,\n+    Tab::Query: FilterDsl<<Tab::PrimaryKey as EqAll<<&'a C as Identifiable>::Id>>::Output>,\n+    Filter<Tab::Query, <Tab::PrimaryKey as EqAll<<&'a C as Identifiable>::Id>>::Output>: LimitDsl,\n+    Limit<Filter<Tab::Query, <Tab::PrimaryKey as EqAll<<&'a C as Identifiable>::Id>>::Output>>:\n+        QueryDsl\n+            + BoxedDsl<\n+                'a,\n+                Conn::Backend,\n+                Output = BoxedSelectStatement<'a, R::SqlType, Tab, Conn::Backend>,\n+            >,\n+    R: LoadingHandler<Conn, Table = Tab, SqlType = Tab::SqlType>\n+        + GraphQLType<TypeInfo = (), Context = ()>,\n+{\n+    unimplemented!()\n+}"}]}