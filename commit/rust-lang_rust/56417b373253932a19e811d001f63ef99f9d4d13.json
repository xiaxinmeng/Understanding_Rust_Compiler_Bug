{"sha": "56417b373253932a19e811d001f63ef99f9d4d13", "node_id": "MDY6Q29tbWl0NzI0NzEyOjU2NDE3YjM3MzI1MzkzMmExOWU4MTFkMDAxZjYzZWY5OWY5ZDRkMTM=", "commit": {"author": {"name": "Eduard Burtescu", "email": "edy.burt@gmail.com", "date": "2016-03-08T12:11:45Z"}, "committer": {"name": "Eduard Burtescu", "email": "edy.burt@gmail.com", "date": "2016-03-17T19:51:53Z"}, "message": "mir: Monomorphize LvalueTy's of projections.", "tree": {"sha": "b8babe69b215d4050d35993f8032565af77e2172", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b8babe69b215d4050d35993f8032565af77e2172"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/56417b373253932a19e811d001f63ef99f9d4d13", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/56417b373253932a19e811d001f63ef99f9d4d13", "html_url": "https://github.com/rust-lang/rust/commit/56417b373253932a19e811d001f63ef99f9d4d13", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/56417b373253932a19e811d001f63ef99f9d4d13/comments", "author": {"login": "eddyb", "id": 77424, "node_id": "MDQ6VXNlcjc3NDI0", "avatar_url": "https://avatars.githubusercontent.com/u/77424?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eddyb", "html_url": "https://github.com/eddyb", "followers_url": "https://api.github.com/users/eddyb/followers", "following_url": "https://api.github.com/users/eddyb/following{/other_user}", "gists_url": "https://api.github.com/users/eddyb/gists{/gist_id}", "starred_url": "https://api.github.com/users/eddyb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eddyb/subscriptions", "organizations_url": "https://api.github.com/users/eddyb/orgs", "repos_url": "https://api.github.com/users/eddyb/repos", "events_url": "https://api.github.com/users/eddyb/events{/privacy}", "received_events_url": "https://api.github.com/users/eddyb/received_events", "type": "User", "site_admin": false}, "committer": {"login": "eddyb", "id": 77424, "node_id": "MDQ6VXNlcjc3NDI0", "avatar_url": "https://avatars.githubusercontent.com/u/77424?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eddyb", "html_url": "https://github.com/eddyb", "followers_url": "https://api.github.com/users/eddyb/followers", "following_url": "https://api.github.com/users/eddyb/following{/other_user}", "gists_url": "https://api.github.com/users/eddyb/gists{/gist_id}", "starred_url": "https://api.github.com/users/eddyb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eddyb/subscriptions", "organizations_url": "https://api.github.com/users/eddyb/orgs", "repos_url": "https://api.github.com/users/eddyb/repos", "events_url": "https://api.github.com/users/eddyb/events{/privacy}", "received_events_url": "https://api.github.com/users/eddyb/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f9c06abc211f76004f3f558753d5d992ab32d223", "url": "https://api.github.com/repos/rust-lang/rust/commits/f9c06abc211f76004f3f558753d5d992ab32d223", "html_url": "https://github.com/rust-lang/rust/commit/f9c06abc211f76004f3f558753d5d992ab32d223"}], "stats": {"total": 25, "additions": 25, "deletions": 0}, "files": [{"sha": "d7848e60e4ecedeca8d9086ade7ac1a04ede2154", "filename": "src/librustc/mir/tcx.rs", "status": "modified", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/56417b373253932a19e811d001f63ef99f9d4d13/src%2Flibrustc%2Fmir%2Ftcx.rs", "raw_url": "https://github.com/rust-lang/rust/raw/56417b373253932a19e811d001f63ef99f9d4d13/src%2Flibrustc%2Fmir%2Ftcx.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmir%2Ftcx.rs?ref=56417b373253932a19e811d001f63ef99f9d4d13", "patch": "@@ -16,6 +16,7 @@\n use mir::repr::*;\n use middle::subst::{Subst, Substs};\n use middle::ty::{self, AdtDef, Ty, TyCtxt};\n+use middle::ty::fold::{TypeFoldable, TypeFolder, TypeVisitor};\n use rustc_front::hir;\n \n #[derive(Copy, Clone, Debug)]\n@@ -77,6 +78,29 @@ impl<'tcx> LvalueTy<'tcx> {\n     }\n }\n \n+impl<'tcx> TypeFoldable<'tcx> for LvalueTy<'tcx> {\n+    fn super_fold_with<F: TypeFolder<'tcx>>(&self, folder: &mut F) -> Self {\n+        match *self {\n+            LvalueTy::Ty { ty } => LvalueTy::Ty { ty: ty.fold_with(folder) },\n+            LvalueTy::Downcast { adt_def, substs, variant_index } => {\n+                let substs = substs.fold_with(folder);\n+                LvalueTy::Downcast {\n+                    adt_def: adt_def,\n+                    substs: folder.tcx().mk_substs(substs),\n+                    variant_index: variant_index\n+                }\n+            }\n+        }\n+    }\n+\n+    fn super_visit_with<V: TypeVisitor<'tcx>>(&self, visitor: &mut V) -> bool {\n+        match *self {\n+            LvalueTy::Ty { ty } => ty.visit_with(visitor),\n+            LvalueTy::Downcast { substs, .. } => substs.visit_with(visitor)\n+        }\n+    }\n+}\n+\n impl<'tcx> Mir<'tcx> {\n     pub fn operand_ty(&self,\n                       tcx: &TyCtxt<'tcx>,"}, {"sha": "66cbe677bb33aa15032f0d36c59955d53ab7ee52", "filename": "src/librustc_trans/trans/mir/lvalue.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/56417b373253932a19e811d001f63ef99f9d4d13/src%2Flibrustc_trans%2Ftrans%2Fmir%2Flvalue.rs", "raw_url": "https://github.com/rust-lang/rust/raw/56417b373253932a19e811d001f63ef99f9d4d13/src%2Flibrustc_trans%2Ftrans%2Fmir%2Flvalue.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Ftrans%2Fmir%2Flvalue.rs?ref=56417b373253932a19e811d001f63ef99f9d4d13", "patch": "@@ -114,6 +114,7 @@ impl<'bcx, 'tcx> MirContext<'bcx, 'tcx> {\n             mir::Lvalue::Projection(ref projection) => {\n                 let tr_base = self.trans_lvalue(bcx, &projection.base);\n                 let projected_ty = tr_base.ty.projection_ty(tcx, &projection.elem);\n+                let projected_ty = bcx.monomorphize(&projected_ty);\n                 let (llprojected, llextra) = match projection.elem {\n                     mir::ProjectionElem::Deref => {\n                         let base_ty = tr_base.ty.to_ty(tcx);"}]}