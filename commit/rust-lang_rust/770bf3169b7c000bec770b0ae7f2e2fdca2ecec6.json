{"sha": "770bf3169b7c000bec770b0ae7f2e2fdca2ecec6", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc3MGJmMzE2OWI3YzAwMGJlYzc3MGIwYWU3ZjJlMmZkY2EyZWNlYzY=", "commit": {"author": {"name": "Dylan DPC", "email": "dylan.dpc@gmail.com", "date": "2021-04-05T13:48:44Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-04-05T13:48:44Z"}, "message": "Rollup merge of #83877 - jyn514:exceptions, r=Mark-Simulacrum\n\nRemove unnecessary exceptions to the platform-specific code check\n\nSome of these were just wrong, like src/librustc. Some looked outdated,\nlike std::f64. Not sure what was going on with the others - maybe this\ncheck isn't as smart as it needs to be? But in the meantime it seems\nsilly to ignore the check if it will pass anyway.", "tree": {"sha": "4bb51984948440f3f422ac45ef4e06a1b84b94d4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4bb51984948440f3f422ac45ef4e06a1b84b94d4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/770bf3169b7c000bec770b0ae7f2e2fdca2ecec6", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJgaxU9CRBK7hj4Ov3rIwAAdHIIADAt6aeFiPZbaCXyNb0qDeHm\nLOEGkTg/JNQAN+O4vkjmzafudFRpGE9hAUk0BO7ckEnRFJqY+B1fdRWbnRSbX/VA\n//gewGwOeJBeVaEUukHcP46WXiXGl9hb7EggQ/dqO4Mfsdf0stFABLpxFyrSIVjR\nDW9y4qbPKJitaBSTCY4NbWf4GemYuHRkTIKVptFiyucSifD291+KyUB35Ucyo6RW\nxP8gB3FA1D6avXF0Z9m5d7YQiGs6fnhWVsI8gAChDldXcg69lEYIhHW62sjOoBVK\nYhymrHs184Y0uUDCNvjyplDh95ZgECF+SvjE3uNcZaC1A5n/7EjkrTtXgJ3NENE=\n=P32H\n-----END PGP SIGNATURE-----\n", "payload": "tree 4bb51984948440f3f422ac45ef4e06a1b84b94d4\nparent 49b178e9ffe2ae57675692ed11ec1550019d6f4b\nparent 9eabb41ab4299e290f43d614877947d6238c3a96\nauthor Dylan DPC <dylan.dpc@gmail.com> 1617630524 +0200\ncommitter GitHub <noreply@github.com> 1617630524 +0200\n\nRollup merge of #83877 - jyn514:exceptions, r=Mark-Simulacrum\n\nRemove unnecessary exceptions to the platform-specific code check\n\nSome of these were just wrong, like src/librustc. Some looked outdated,\nlike std::f64. Not sure what was going on with the others - maybe this\ncheck isn't as smart as it needs to be? But in the meantime it seems\nsilly to ignore the check if it will pass anyway.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/770bf3169b7c000bec770b0ae7f2e2fdca2ecec6", "html_url": "https://github.com/rust-lang/rust/commit/770bf3169b7c000bec770b0ae7f2e2fdca2ecec6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/770bf3169b7c000bec770b0ae7f2e2fdca2ecec6/comments", "author": {"login": "Dylan-DPC", "id": 99973273, "node_id": "U_kgDOBfV4mQ", "avatar_url": "https://avatars.githubusercontent.com/u/99973273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dylan-DPC", "html_url": "https://github.com/Dylan-DPC", "followers_url": "https://api.github.com/users/Dylan-DPC/followers", "following_url": "https://api.github.com/users/Dylan-DPC/following{/other_user}", "gists_url": "https://api.github.com/users/Dylan-DPC/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dylan-DPC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dylan-DPC/subscriptions", "organizations_url": "https://api.github.com/users/Dylan-DPC/orgs", "repos_url": "https://api.github.com/users/Dylan-DPC/repos", "events_url": "https://api.github.com/users/Dylan-DPC/events{/privacy}", "received_events_url": "https://api.github.com/users/Dylan-DPC/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "49b178e9ffe2ae57675692ed11ec1550019d6f4b", "url": "https://api.github.com/repos/rust-lang/rust/commits/49b178e9ffe2ae57675692ed11ec1550019d6f4b", "html_url": "https://github.com/rust-lang/rust/commit/49b178e9ffe2ae57675692ed11ec1550019d6f4b"}, {"sha": "9eabb41ab4299e290f43d614877947d6238c3a96", "url": "https://api.github.com/repos/rust-lang/rust/commits/9eabb41ab4299e290f43d614877947d6238c3a96", "html_url": "https://github.com/rust-lang/rust/commit/9eabb41ab4299e290f43d614877947d6238c3a96"}], "stats": {"total": 22, "additions": 0, "deletions": 22}, "files": [{"sha": "144529d8641eee4c56bb02f00b1b0fcedae6e18c", "filename": "src/tools/tidy/src/pal.rs", "status": "modified", "additions": 0, "deletions": 22, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/770bf3169b7c000bec770b0ae7f2e2fdca2ecec6/src%2Ftools%2Ftidy%2Fsrc%2Fpal.rs", "raw_url": "https://github.com/rust-lang/rust/raw/770bf3169b7c000bec770b0ae7f2e2fdca2ecec6/src%2Ftools%2Ftidy%2Fsrc%2Fpal.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Ftidy%2Fsrc%2Fpal.rs?ref=770bf3169b7c000bec770b0ae7f2e2fdca2ecec6", "patch": "@@ -40,35 +40,20 @@ const EXCEPTION_PATHS: &[&str] = &[\n     \"library/panic_abort\",\n     \"library/panic_unwind\",\n     \"library/unwind\",\n-    // black_box implementation is LLVM-version specific and it uses\n-    // target_os to tell targets with different LLVM-versions apart\n-    // (e.g. `wasm32-unknown-emscripten` vs `wasm32-unknown-unknown`):\n-    \"library/core/src/hint.rs\",\n     \"library/std/src/sys/\", // Platform-specific code for std lives here.\n     // This has the trailing slash so that sys_common is not excepted.\n     \"library/std/src/os\", // Platform-specific public interfaces\n     \"library/rtstartup\",  // Not sure what to do about this. magic stuff for mingw\n-    // temporary exceptions\n-    \"library/std/src/lib.rs\",\n-    \"library/std/src/path.rs\",\n-    \"library/std/src/f32.rs\",\n-    \"library/std/src/f64.rs\",\n     // Integration test for platform-specific run-time feature detection:\n     \"library/std/tests/run-time-detect.rs\",\n     \"library/std/src/net/test.rs\",\n     \"library/std/src/net/addr\",\n     \"library/std/src/net/udp\",\n-    \"library/std/src/sys_common/mod.rs\",\n-    \"library/std/src/sys_common/net.rs\",\n-    \"library/std/src/sys_common/backtrace.rs\",\n     \"library/std/src/sys_common/remutex.rs\",\n     \"library/std/src/sync/mutex.rs\",\n     \"library/std/src/sync/rwlock.rs\",\n-    // panic_unwind shims\n-    \"library/std/src/panicking.rs\",\n     \"library/term\", // Not sure how to make this crate portable, but test crate needs it.\n     \"library/test\", // Probably should defer to unstable `std::sys` APIs.\n-    \"library/std/src/sync/mpsc\", // some tests are only run on non-emscripten\n     // std testing crates, okay for now at least\n     \"library/core/tests\",\n     \"library/alloc/tests/lib.rs\",\n@@ -79,13 +64,6 @@ const EXCEPTION_PATHS: &[&str] = &[\n     // we must use `#[cfg(windows)]` to conditionally compile the\n     // correct `VaList` structure for windows.\n     \"library/core/src/ffi.rs\",\n-    // non-std crates\n-    \"src/test\",\n-    \"src/tools\",\n-    \"src/librustc\",\n-    \"src/librustdoc\",\n-    \"src/librustc_ast\",\n-    \"src/bootstrap\",\n ];\n \n pub fn check(path: &Path, bad: &mut bool) {"}]}