{"sha": "dc68b894692d309e71d9b639ac6325a9d1cb67e0", "node_id": "C_kwDOAAsO6NoAKGRjNjhiODk0NjkyZDMwOWU3MWQ5YjYzOWFjNjMyNWE5ZDFjYjY3ZTA", "commit": {"author": {"name": "bellau", "email": "laurent.belmonte@gmail.com", "date": "2022-02-13T08:11:35Z"}, "committer": {"name": "bellau", "email": "laurent.belmonte@gmail.com", "date": "2022-02-13T08:11:35Z"}, "message": "oops, remove println", "tree": {"sha": "1f7294d292b34d4ae84ff47e855413a0aabeeb32", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1f7294d292b34d4ae84ff47e855413a0aabeeb32"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/dc68b894692d309e71d9b639ac6325a9d1cb67e0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/dc68b894692d309e71d9b639ac6325a9d1cb67e0", "html_url": "https://github.com/rust-lang/rust/commit/dc68b894692d309e71d9b639ac6325a9d1cb67e0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/dc68b894692d309e71d9b639ac6325a9d1cb67e0/comments", "author": {"login": "bellau", "id": 475393, "node_id": "MDQ6VXNlcjQ3NTM5Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/475393?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bellau", "html_url": "https://github.com/bellau", "followers_url": "https://api.github.com/users/bellau/followers", "following_url": "https://api.github.com/users/bellau/following{/other_user}", "gists_url": "https://api.github.com/users/bellau/gists{/gist_id}", "starred_url": "https://api.github.com/users/bellau/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bellau/subscriptions", "organizations_url": "https://api.github.com/users/bellau/orgs", "repos_url": "https://api.github.com/users/bellau/repos", "events_url": "https://api.github.com/users/bellau/events{/privacy}", "received_events_url": "https://api.github.com/users/bellau/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bellau", "id": 475393, "node_id": "MDQ6VXNlcjQ3NTM5Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/475393?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bellau", "html_url": "https://github.com/bellau", "followers_url": "https://api.github.com/users/bellau/followers", "following_url": "https://api.github.com/users/bellau/following{/other_user}", "gists_url": "https://api.github.com/users/bellau/gists{/gist_id}", "starred_url": "https://api.github.com/users/bellau/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bellau/subscriptions", "organizations_url": "https://api.github.com/users/bellau/orgs", "repos_url": "https://api.github.com/users/bellau/repos", "events_url": "https://api.github.com/users/bellau/events{/privacy}", "received_events_url": "https://api.github.com/users/bellau/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0a18a050b50da53145e43fea9b403eec23ca36c7", "url": "https://api.github.com/repos/rust-lang/rust/commits/0a18a050b50da53145e43fea9b403eec23ca36c7", "html_url": "https://github.com/rust-lang/rust/commit/0a18a050b50da53145e43fea9b403eec23ca36c7"}], "stats": {"total": 1, "additions": 0, "deletions": 1}, "files": [{"sha": "53dbbfea7549372138cda855dd71ed1ef2c45e20", "filename": "crates/parser/src/grammar/expressions/atom.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/dc68b894692d309e71d9b639ac6325a9d1cb67e0/crates%2Fparser%2Fsrc%2Fgrammar%2Fexpressions%2Fatom.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dc68b894692d309e71d9b639ac6325a9d1cb67e0/crates%2Fparser%2Fsrc%2Fgrammar%2Fexpressions%2Fatom.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Fsrc%2Fgrammar%2Fexpressions%2Fatom.rs?ref=dc68b894692d309e71d9b639ac6325a9d1cb67e0", "patch": "@@ -271,7 +271,6 @@ fn closure_expr(p: &mut Parser) -> CompletedMarker {\n         // fn main() { || -> i32 { 92 }(); }\n         block_expr(p);\n     } else if p.at_ts(EXPR_FIRST) {\n-        println!(\"gg\");\n         expr(p);\n     } else {\n         p.error(\"expected expression\");"}]}