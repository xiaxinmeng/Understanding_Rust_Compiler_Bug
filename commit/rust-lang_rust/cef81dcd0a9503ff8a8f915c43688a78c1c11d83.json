{"sha": "cef81dcd0a9503ff8a8f915c43688a78c1c11d83", "node_id": "C_kwDOAAsO6NoAKGNlZjgxZGNkMGE5NTAzZmY4YThmOTE1YzQzNjg4YTc4YzFjMTFkODM", "commit": {"author": {"name": "Konrad Borowski", "email": "konrad@borowski.pw", "date": "2022-08-09T07:12:15Z"}, "committer": {"name": "Konrad Borowski", "email": "konrad@borowski.pw", "date": "2022-10-06T16:05:38Z"}, "message": "Fix handling of trailing bare CR in str::lines\n\nPreviously \"bare\\r\" was split into [\"bare\"] even though the\ndocumentation said that only LF and CRLF count as newlines.\n\nThis fix is a behavioural change, even though it brings the behaviour\ninto line with the documentation, and into line with that of\n`std::io::BufRead::lines()`.\n\nThis is an alternative to #91051, which proposes to document rather\nthan fix the behaviour.\n\nFixes #94435.\n\nCo-authored-by: Ian Jackson <ijackson@chiark.greenend.org.uk>", "tree": {"sha": "44cc2a7f596826fb188e4d3eb025f95d6dc2b26c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/44cc2a7f596826fb188e4d3eb025f95d6dc2b26c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/cef81dcd0a9503ff8a8f915c43688a78c1c11d83", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/cef81dcd0a9503ff8a8f915c43688a78c1c11d83", "html_url": "https://github.com/rust-lang/rust/commit/cef81dcd0a9503ff8a8f915c43688a78c1c11d83", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/cef81dcd0a9503ff8a8f915c43688a78c1c11d83/comments", "author": {"login": "xfix", "id": 1297598, "node_id": "MDQ6VXNlcjEyOTc1OTg=", "avatar_url": "https://avatars.githubusercontent.com/u/1297598?v=4", "gravatar_id": "", "url": "https://api.github.com/users/xfix", "html_url": "https://github.com/xfix", "followers_url": "https://api.github.com/users/xfix/followers", "following_url": "https://api.github.com/users/xfix/following{/other_user}", "gists_url": "https://api.github.com/users/xfix/gists{/gist_id}", "starred_url": "https://api.github.com/users/xfix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/xfix/subscriptions", "organizations_url": "https://api.github.com/users/xfix/orgs", "repos_url": "https://api.github.com/users/xfix/repos", "events_url": "https://api.github.com/users/xfix/events{/privacy}", "received_events_url": "https://api.github.com/users/xfix/received_events", "type": "User", "site_admin": false}, "committer": {"login": "xfix", "id": 1297598, "node_id": "MDQ6VXNlcjEyOTc1OTg=", "avatar_url": "https://avatars.githubusercontent.com/u/1297598?v=4", "gravatar_id": "", "url": "https://api.github.com/users/xfix", "html_url": "https://github.com/xfix", "followers_url": "https://api.github.com/users/xfix/followers", "following_url": "https://api.github.com/users/xfix/following{/other_user}", "gists_url": "https://api.github.com/users/xfix/gists{/gist_id}", "starred_url": "https://api.github.com/users/xfix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/xfix/subscriptions", "organizations_url": "https://api.github.com/users/xfix/orgs", "repos_url": "https://api.github.com/users/xfix/repos", "events_url": "https://api.github.com/users/xfix/events{/privacy}", "received_events_url": "https://api.github.com/users/xfix/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0d8a0c56fee71dac218eb949817669ab8bb00c5e", "url": "https://api.github.com/repos/rust-lang/rust/commits/0d8a0c56fee71dac218eb949817669ab8bb00c5e", "html_url": "https://github.com/rust-lang/rust/commit/0d8a0c56fee71dac218eb949817669ab8bb00c5e"}], "stats": {"total": 36, "additions": 24, "deletions": 12}, "files": [{"sha": "aa767d5691abd45054d9bff7957c40674ae7444e", "filename": "library/alloc/tests/str.rs", "status": "modified", "additions": 19, "deletions": 7, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/cef81dcd0a9503ff8a8f915c43688a78c1c11d83/library%2Falloc%2Ftests%2Fstr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cef81dcd0a9503ff8a8f915c43688a78c1c11d83/library%2Falloc%2Ftests%2Fstr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Falloc%2Ftests%2Fstr.rs?ref=cef81dcd0a9503ff8a8f915c43688a78c1c11d83", "patch": "@@ -1499,13 +1499,25 @@ fn test_split_whitespace() {\n \n #[test]\n fn test_lines() {\n-    let data = \"\\nM\u00e4ry h\u00e4d \u00e4 little l\u00e4mb\\n\\r\\nLittle l\u00e4mb\\n\";\n-    let lines: Vec<&str> = data.lines().collect();\n-    assert_eq!(lines, [\"\", \"M\u00e4ry h\u00e4d \u00e4 little l\u00e4mb\", \"\", \"Little l\u00e4mb\"]);\n-\n-    let data = \"\\r\\nM\u00e4ry h\u00e4d \u00e4 little l\u00e4mb\\n\\nLittle l\u00e4mb\"; // no trailing \\n\n-    let lines: Vec<&str> = data.lines().collect();\n-    assert_eq!(lines, [\"\", \"M\u00e4ry h\u00e4d \u00e4 little l\u00e4mb\", \"\", \"Little l\u00e4mb\"]);\n+    fn t(data: &str, expected: &[&str]) {\n+        let lines: Vec<&str> = data.lines().collect();\n+        assert_eq!(lines, expected);\n+    }\n+    t(\"\", &[]);\n+    t(\"\\n\", &[\"\"]);\n+    t(\"\\n2nd\", &[\"\", \"2nd\"]);\n+    t(\"\\r\\n\", &[\"\"]);\n+    t(\"bare\\r\", &[\"bare\\r\"]);\n+    t(\"bare\\rcr\", &[\"bare\\rcr\"]);\n+    t(\"Text\\n\\r\", &[\"Text\", \"\\r\"]);\n+    t(\n+        \"\\nM\u00e4ry h\u00e4d \u00e4 little l\u00e4mb\\n\\r\\nLittle l\u00e4mb\\n\",\n+        &[\"\", \"M\u00e4ry h\u00e4d \u00e4 little l\u00e4mb\", \"\", \"Little l\u00e4mb\"],\n+    );\n+    t(\n+        \"\\r\\nM\u00e4ry h\u00e4d \u00e4 little l\u00e4mb\\n\\nLittle l\u00e4mb\",\n+        &[\"\", \"M\u00e4ry h\u00e4d \u00e4 little l\u00e4mb\", \"\", \"Little l\u00e4mb\"],\n+    );\n }\n \n #[test]"}, {"sha": "579f5806b1cd6855dbe00d682dc2452776755fac", "filename": "library/core/src/str/iter.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/cef81dcd0a9503ff8a8f915c43688a78c1c11d83/library%2Fcore%2Fsrc%2Fstr%2Fiter.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cef81dcd0a9503ff8a8f915c43688a78c1c11d83/library%2Fcore%2Fsrc%2Fstr%2Fiter.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fstr%2Fiter.rs?ref=cef81dcd0a9503ff8a8f915c43688a78c1c11d83", "patch": "@@ -1091,7 +1091,7 @@ generate_pattern_iterators! {\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n #[must_use = \"iterators are lazy and do nothing unless consumed\"]\n #[derive(Clone, Debug)]\n-pub struct Lines<'a>(pub(super) Map<SplitTerminator<'a, char>, LinesMap>);\n+pub struct Lines<'a>(pub(super) Map<SplitInclusive<'a, char>, LinesMap>);\n \n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n impl<'a> Iterator for Lines<'a> {"}, {"sha": "49478a72f0e4daba32af5e9da3694aaf22ab2669", "filename": "library/core/src/str/mod.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/cef81dcd0a9503ff8a8f915c43688a78c1c11d83/library%2Fcore%2Fsrc%2Fstr%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cef81dcd0a9503ff8a8f915c43688a78c1c11d83/library%2Fcore%2Fsrc%2Fstr%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fstr%2Fmod.rs?ref=cef81dcd0a9503ff8a8f915c43688a78c1c11d83", "patch": "@@ -997,7 +997,7 @@ impl str {\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n     #[inline]\n     pub fn lines(&self) -> Lines<'_> {\n-        Lines(self.split_terminator('\\n').map(LinesMap))\n+        Lines(self.split_inclusive('\\n').map(LinesMap))\n     }\n \n     /// An iterator over the lines of a string.\n@@ -2591,9 +2591,9 @@ impl_fn_for_zst! {\n     /// A nameable, cloneable fn type\n     #[derive(Clone)]\n     struct LinesMap impl<'a> Fn = |line: &'a str| -> &'a str {\n-        let l = line.len();\n-        if l > 0 && line.as_bytes()[l - 1] == b'\\r' { &line[0 .. l - 1] }\n-        else { line }\n+        let Some(line) = line.strip_suffix('\\n') else { return line };\n+        let Some(line) = line.strip_suffix('\\r') else { return line };\n+        line\n     };\n \n     #[derive(Clone)]"}]}