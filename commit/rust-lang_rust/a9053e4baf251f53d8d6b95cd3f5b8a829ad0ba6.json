{"sha": "a9053e4baf251f53d8d6b95cd3f5b8a829ad0ba6", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE5MDUzZTRiYWYyNTFmNTNkOGQ2Yjk1Y2QzZjViOGE4MjlhZDBiYTY=", "commit": {"author": {"name": "hosseind75", "email": "dindar95@bk.ru", "date": "2020-09-19T14:07:58Z"}, "committer": {"name": "hosseind88", "email": "hosseind88@mail.ru", "date": "2020-10-09T17:27:45Z"}, "message": "run full query stack print just when RUST_BACKTRACE is set", "tree": {"sha": "21c112bed9b03478b8255575f2a5d8038078cf70", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/21c112bed9b03478b8255575f2a5d8038078cf70"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a9053e4baf251f53d8d6b95cd3f5b8a829ad0ba6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a9053e4baf251f53d8d6b95cd3f5b8a829ad0ba6", "html_url": "https://github.com/rust-lang/rust/commit/a9053e4baf251f53d8d6b95cd3f5b8a829ad0ba6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a9053e4baf251f53d8d6b95cd3f5b8a829ad0ba6/comments", "author": {"login": "hosseind75", "id": 69863841, "node_id": "MDQ6VXNlcjY5ODYzODQx", "avatar_url": "https://avatars.githubusercontent.com/u/69863841?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hosseind75", "html_url": "https://github.com/hosseind75", "followers_url": "https://api.github.com/users/hosseind75/followers", "following_url": "https://api.github.com/users/hosseind75/following{/other_user}", "gists_url": "https://api.github.com/users/hosseind75/gists{/gist_id}", "starred_url": "https://api.github.com/users/hosseind75/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hosseind75/subscriptions", "organizations_url": "https://api.github.com/users/hosseind75/orgs", "repos_url": "https://api.github.com/users/hosseind75/repos", "events_url": "https://api.github.com/users/hosseind75/events{/privacy}", "received_events_url": "https://api.github.com/users/hosseind75/received_events", "type": "User", "site_admin": false}, "committer": {"login": "hosseind88", "id": 72156162, "node_id": "MDQ6VXNlcjcyMTU2MTYy", "avatar_url": "https://avatars.githubusercontent.com/u/72156162?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hosseind88", "html_url": "https://github.com/hosseind88", "followers_url": "https://api.github.com/users/hosseind88/followers", "following_url": "https://api.github.com/users/hosseind88/following{/other_user}", "gists_url": "https://api.github.com/users/hosseind88/gists{/gist_id}", "starred_url": "https://api.github.com/users/hosseind88/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hosseind88/subscriptions", "organizations_url": "https://api.github.com/users/hosseind88/orgs", "repos_url": "https://api.github.com/users/hosseind88/repos", "events_url": "https://api.github.com/users/hosseind88/events{/privacy}", "received_events_url": "https://api.github.com/users/hosseind88/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ecd308ec394f9d01b4392ee0315ea64d52ab7caa", "url": "https://api.github.com/repos/rust-lang/rust/commits/ecd308ec394f9d01b4392ee0315ea64d52ab7caa", "html_url": "https://github.com/rust-lang/rust/commit/ecd308ec394f9d01b4392ee0315ea64d52ab7caa"}], "stats": {"total": 5, "additions": 4, "deletions": 1}, "files": [{"sha": "0b324775b0d1a9a380a817b7647f7f25d8f9dec6", "filename": "src/driver.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/a9053e4baf251f53d8d6b95cd3f5b8a829ad0ba6/src%2Fdriver.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a9053e4baf251f53d8d6b95cd3f5b8a829ad0ba6/src%2Fdriver.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdriver.rs?ref=a9053e4baf251f53d8d6b95cd3f5b8a829ad0ba6", "patch": "@@ -274,7 +274,10 @@ fn report_clippy_ice(info: &panic::PanicInfo<'_>, bug_report_url: &str) {\n         handler.note_without_error(&note);\n     }\n \n-    TyCtxt::try_print_query_stack(&handler, Some(2));\n+    // If backtraces are enabled, also print the query stack\n+    let backtrace = env::var_os(\"RUST_BACKTRACE\").map_or(false, |x| &x != \"0\");\n+\n+    TyCtxt::try_print_query_stack(&handler, Some(2), Some(backtrace));\n }\n \n fn toolchain_path(home: Option<String>, toolchain: Option<String>) -> Option<PathBuf> {"}]}