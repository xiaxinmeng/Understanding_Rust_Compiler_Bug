{"sha": "d7c09f7e1e446390ed3f02ed576a1efce5279b96", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQ3YzA5ZjdlMWU0NDYzOTBlZDNmMDJlZDU3NmExZWZjZTUyNzliOTY=", "commit": {"author": {"name": "Christian Poveda", "email": "christianpoveda@protonmail.com", "date": "2019-11-26T22:23:24Z"}, "committer": {"name": "Christian Poveda", "email": "christianpoveda@protonmail.com", "date": "2019-11-26T22:23:24Z"}, "message": "Change way of checking SetDiscriminant", "tree": {"sha": "6f8f5bd385a60dbf0bd59ec31a31d379a90d3ff8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6f8f5bd385a60dbf0bd59ec31a31d379a90d3ff8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d7c09f7e1e446390ed3f02ed576a1efce5279b96", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d7c09f7e1e446390ed3f02ed576a1efce5279b96", "html_url": "https://github.com/rust-lang/rust/commit/d7c09f7e1e446390ed3f02ed576a1efce5279b96", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d7c09f7e1e446390ed3f02ed576a1efce5279b96/comments", "author": {"login": "pvdrz", "id": 31802960, "node_id": "MDQ6VXNlcjMxODAyOTYw", "avatar_url": "https://avatars.githubusercontent.com/u/31802960?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pvdrz", "html_url": "https://github.com/pvdrz", "followers_url": "https://api.github.com/users/pvdrz/followers", "following_url": "https://api.github.com/users/pvdrz/following{/other_user}", "gists_url": "https://api.github.com/users/pvdrz/gists{/gist_id}", "starred_url": "https://api.github.com/users/pvdrz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pvdrz/subscriptions", "organizations_url": "https://api.github.com/users/pvdrz/orgs", "repos_url": "https://api.github.com/users/pvdrz/repos", "events_url": "https://api.github.com/users/pvdrz/events{/privacy}", "received_events_url": "https://api.github.com/users/pvdrz/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pvdrz", "id": 31802960, "node_id": "MDQ6VXNlcjMxODAyOTYw", "avatar_url": "https://avatars.githubusercontent.com/u/31802960?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pvdrz", "html_url": "https://github.com/pvdrz", "followers_url": "https://api.github.com/users/pvdrz/followers", "following_url": "https://api.github.com/users/pvdrz/following{/other_user}", "gists_url": "https://api.github.com/users/pvdrz/gists{/gist_id}", "starred_url": "https://api.github.com/users/pvdrz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pvdrz/subscriptions", "organizations_url": "https://api.github.com/users/pvdrz/orgs", "repos_url": "https://api.github.com/users/pvdrz/repos", "events_url": "https://api.github.com/users/pvdrz/events{/privacy}", "received_events_url": "https://api.github.com/users/pvdrz/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c66ad1405782c49bc01b9c2a0b3634765a7cecea", "url": "https://api.github.com/repos/rust-lang/rust/commits/c66ad1405782c49bc01b9c2a0b3634765a7cecea", "html_url": "https://github.com/rust-lang/rust/commit/c66ad1405782c49bc01b9c2a0b3634765a7cecea"}], "stats": {"total": 5, "additions": 2, "deletions": 3}, "files": [{"sha": "7b26ba58e6154b921d8cf1058679a6c555afebea", "filename": "src/librustc_mir/transform/check_consts/validation.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/d7c09f7e1e446390ed3f02ed576a1efce5279b96/src%2Flibrustc_mir%2Ftransform%2Fcheck_consts%2Fvalidation.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d7c09f7e1e446390ed3f02ed576a1efce5279b96/src%2Flibrustc_mir%2Ftransform%2Fcheck_consts%2Fvalidation.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Ftransform%2Fcheck_consts%2Fvalidation.rs?ref=d7c09f7e1e446390ed3f02ed576a1efce5279b96", "patch": "@@ -566,9 +566,8 @@ impl Visitor<'tcx> for Validator<'_, 'mir, 'tcx> {\n             StatementKind::FakeRead(FakeReadCause::ForMatchedPlace, _) => {\n                 self.check_op(ops::IfOrMatch);\n             }\n-            StatementKind::SetDiscriminant { ref place, .. } => {\n-                let ctx = PlaceContext::MutatingUse(MutatingUseContext::Projection);\n-                self.visit_place(&place, ctx, location)\n+            StatementKind::SetDiscriminant { .. } => {\n+                self.super_statement(statement, location)\n             }\n             // FIXME(eddyb) should these really do nothing?\n             StatementKind::FakeRead(..) |"}]}