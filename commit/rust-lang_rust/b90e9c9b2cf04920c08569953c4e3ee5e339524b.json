{"sha": "b90e9c9b2cf04920c08569953c4e3ee5e339524b", "node_id": "MDY6Q29tbWl0NzI0NzEyOmI5MGU5YzliMmNmMDQ5MjBjMDg1Njk5NTNjNGUzZWU1ZTMzOTUyNGI=", "commit": {"author": {"name": "Sunjay Varma", "email": "varma.sunjay@gmail.com", "date": "2017-12-13T23:50:22Z"}, "committer": {"name": "Sunjay Varma", "email": "varma.sunjay@gmail.com", "date": "2017-12-13T23:50:22Z"}, "message": "Added test to make sure we can refer to the declared traits of a generic associated type", "tree": {"sha": "c264e0bf5a975ab7828dad9955928c44467b5e98", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c264e0bf5a975ab7828dad9955928c44467b5e98"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b90e9c9b2cf04920c08569953c4e3ee5e339524b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b90e9c9b2cf04920c08569953c4e3ee5e339524b", "html_url": "https://github.com/rust-lang/rust/commit/b90e9c9b2cf04920c08569953c4e3ee5e339524b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b90e9c9b2cf04920c08569953c4e3ee5e339524b/comments", "author": {"login": "sunjay", "id": 530939, "node_id": "MDQ6VXNlcjUzMDkzOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/530939?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sunjay", "html_url": "https://github.com/sunjay", "followers_url": "https://api.github.com/users/sunjay/followers", "following_url": "https://api.github.com/users/sunjay/following{/other_user}", "gists_url": "https://api.github.com/users/sunjay/gists{/gist_id}", "starred_url": "https://api.github.com/users/sunjay/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sunjay/subscriptions", "organizations_url": "https://api.github.com/users/sunjay/orgs", "repos_url": "https://api.github.com/users/sunjay/repos", "events_url": "https://api.github.com/users/sunjay/events{/privacy}", "received_events_url": "https://api.github.com/users/sunjay/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sunjay", "id": 530939, "node_id": "MDQ6VXNlcjUzMDkzOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/530939?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sunjay", "html_url": "https://github.com/sunjay", "followers_url": "https://api.github.com/users/sunjay/followers", "following_url": "https://api.github.com/users/sunjay/following{/other_user}", "gists_url": "https://api.github.com/users/sunjay/gists{/gist_id}", "starred_url": "https://api.github.com/users/sunjay/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sunjay/subscriptions", "organizations_url": "https://api.github.com/users/sunjay/orgs", "repos_url": "https://api.github.com/users/sunjay/repos", "events_url": "https://api.github.com/users/sunjay/events{/privacy}", "received_events_url": "https://api.github.com/users/sunjay/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4f90eacbfecb2a994532ff4ff3beb3cbda40d622", "url": "https://api.github.com/repos/rust-lang/rust/commits/4f90eacbfecb2a994532ff4ff3beb3cbda40d622", "html_url": "https://github.com/rust-lang/rust/commit/4f90eacbfecb2a994532ff4ff3beb3cbda40d622"}], "stats": {"total": 23, "additions": 18, "deletions": 5}, "files": [{"sha": "1287ddaf7f7feb3f722b1896a88042f2ef856904", "filename": "src/test/ui/rfc1598-generic-associated-types/iterable.rs", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/b90e9c9b2cf04920c08569953c4e3ee5e339524b/src%2Ftest%2Fui%2Frfc1598-generic-associated-types%2Fiterable.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b90e9c9b2cf04920c08569953c4e3ee5e339524b/src%2Ftest%2Fui%2Frfc1598-generic-associated-types%2Fiterable.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc1598-generic-associated-types%2Fiterable.rs?ref=b90e9c9b2cf04920c08569953c4e3ee5e339524b", "patch": "@@ -10,6 +10,8 @@\n \n #![feature(generic_associated_types)]\n \n+use std::ops::Deref;\n+\n //FIXME(#44265): \"lifetime parameters are not allowed on this type\" errors will be addressed in a\n //follow-up PR\n \n@@ -18,6 +20,11 @@ trait Iterable {\n     type Iter<'a>: Iterator<Item = Self::Item<'a>>;\n     //~^ ERROR lifetime parameters are not allowed on this type [E0110]\n \n+    // This weird type tests that we can use universal function call syntax to access the Item on\n+    // Self::Iter which we have declared to be an Iterator\n+    type Iter2<'a>: Deref<Target = <Self::Iter<'a> as Iterator>::Item>;\n+    //~^ ERROR lifetime parameters are not allowed on this type [E0110]\n+\n     fn iter<'a>(&'a self) -> Self::Iter<'a>;\n     //~^ ERROR lifetime parameters are not allowed on this type [E0110]\n }"}, {"sha": "d12ca5e5d4ef74fa4043f9475a327763b70f4862", "filename": "src/test/ui/rfc1598-generic-associated-types/iterable.stderr", "status": "modified", "additions": 11, "deletions": 5, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/b90e9c9b2cf04920c08569953c4e3ee5e339524b/src%2Ftest%2Fui%2Frfc1598-generic-associated-types%2Fiterable.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b90e9c9b2cf04920c08569953c4e3ee5e339524b/src%2Ftest%2Fui%2Frfc1598-generic-associated-types%2Fiterable.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc1598-generic-associated-types%2Fiterable.stderr?ref=b90e9c9b2cf04920c08569953c4e3ee5e339524b", "patch": "@@ -1,14 +1,20 @@\n error[E0110]: lifetime parameters are not allowed on this type\n-  --> $DIR/iterable.rs:18:47\n+  --> $DIR/iterable.rs:20:47\n    |\n-18 |     type Iter<'a>: Iterator<Item = Self::Item<'a>>;\n+20 |     type Iter<'a>: Iterator<Item = Self::Item<'a>>;\n    |                                               ^^ lifetime parameter not allowed on this type\n \n error[E0110]: lifetime parameters are not allowed on this type\n-  --> $DIR/iterable.rs:21:41\n+  --> $DIR/iterable.rs:25:48\n    |\n-21 |     fn iter<'a>(&'a self) -> Self::Iter<'a>;\n+25 |     type Iter2<'a>: Deref<Target = <Self::Iter<'a> as Iterator>::Item>;\n+   |                                                ^^ lifetime parameter not allowed on this type\n+\n+error[E0110]: lifetime parameters are not allowed on this type\n+  --> $DIR/iterable.rs:28:41\n+   |\n+28 |     fn iter<'a>(&'a self) -> Self::Iter<'a>;\n    |                                         ^^ lifetime parameter not allowed on this type\n \n-error: aborting due to 2 previous errors\n+error: aborting due to 3 previous errors\n "}]}