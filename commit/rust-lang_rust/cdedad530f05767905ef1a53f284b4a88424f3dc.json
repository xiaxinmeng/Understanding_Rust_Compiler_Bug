{"sha": "cdedad530f05767905ef1a53f284b4a88424f3dc", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNkZWRhZDUzMGYwNTc2NzkwNWVmMWE1M2YyODRiNGE4ODQyNGYzZGM=", "commit": {"author": {"name": "Jonathan Turner", "email": "jonathandturner@users.noreply.github.com", "date": "2016-08-11T13:34:02Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2016-08-11T13:34:02Z"}, "message": "Rollup merge of #35576 - circuitfox:E0072-update-error-format, r=jonathandturner\n\nE0072 update error format\n\nPart of  #35233\n\nFixes #35506\n\nr? @jonathandturner\n\nThe bonus for this issue currently seems to be impossible to do reliably, as the compiler seems to lack span information for item names alone, like `Foo` in `struct Foo { ... }`. It would be possible to hack something together by computing span offsets, but that seems like a solution that would be begging for trouble.\n\nA proper solution to this would, of course, be to add span information to the right place (seems to be `rustc::hir::Item::name` but I may be wrong).", "tree": {"sha": "6ba1d1befea1f722841b9f4720fbe3eb1d0a0326", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6ba1d1befea1f722841b9f4720fbe3eb1d0a0326"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/cdedad530f05767905ef1a53f284b4a88424f3dc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/cdedad530f05767905ef1a53f284b4a88424f3dc", "html_url": "https://github.com/rust-lang/rust/commit/cdedad530f05767905ef1a53f284b4a88424f3dc", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/cdedad530f05767905ef1a53f284b4a88424f3dc/comments", "author": {"login": "jonathandturner", "id": 111457284, "node_id": "O_kgDOBqS0BA", "avatar_url": "https://avatars.githubusercontent.com/u/111457284?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonathandturner", "html_url": "https://github.com/jonathandturner", "followers_url": "https://api.github.com/users/jonathandturner/followers", "following_url": "https://api.github.com/users/jonathandturner/following{/other_user}", "gists_url": "https://api.github.com/users/jonathandturner/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonathandturner/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonathandturner/subscriptions", "organizations_url": "https://api.github.com/users/jonathandturner/orgs", "repos_url": "https://api.github.com/users/jonathandturner/repos", "events_url": "https://api.github.com/users/jonathandturner/events{/privacy}", "received_events_url": "https://api.github.com/users/jonathandturner/received_events", "type": "Organization", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0e92c5e8b28c41577d40a7e034fa698d74ba4c51", "url": "https://api.github.com/repos/rust-lang/rust/commits/0e92c5e8b28c41577d40a7e034fa698d74ba4c51", "html_url": "https://github.com/rust-lang/rust/commit/0e92c5e8b28c41577d40a7e034fa698d74ba4c51"}, {"sha": "c5f9febc480804c8e9053ca9678058722d1a8ce3", "url": "https://api.github.com/repos/rust-lang/rust/commits/c5f9febc480804c8e9053ca9678058722d1a8ce3", "html_url": "https://github.com/rust-lang/rust/commit/c5f9febc480804c8e9053ca9678058722d1a8ce3"}], "stats": {"total": 6, "additions": 6, "deletions": 0}, "files": [{"sha": "62a31133a5499b33a21ba1898a01e9d0cfde226d", "filename": "src/librustc/traits/error_reporting.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/cdedad530f05767905ef1a53f284b4a88424f3dc/src%2Flibrustc%2Ftraits%2Ferror_reporting.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cdedad530f05767905ef1a53f284b4a88424f3dc/src%2Flibrustc%2Ftraits%2Ferror_reporting.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Ftraits%2Ferror_reporting.rs?ref=cdedad530f05767905ef1a53f284b4a88424f3dc", "patch": "@@ -654,6 +654,7 @@ impl<'a, 'gcx, 'tcx> TyCtxt<'a, 'gcx, 'tcx> {\n         let mut err = struct_span_err!(self.sess, span, E0072,\n                                        \"recursive type `{}` has infinite size\",\n                                        self.item_path_str(type_def_id));\n+        err.span_label(span, &format!(\"recursive type has infinite size\"));\n         err.help(&format!(\"insert indirection (e.g., a `Box`, `Rc`, or `&`) \\\n                            at some point to make `{}` representable\",\n                           self.item_path_str(type_def_id)));"}, {"sha": "e6de7921b30363a648723d5aaf14c71db276c9ef", "filename": "src/test/compile-fail/E0072.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/cdedad530f05767905ef1a53f284b4a88424f3dc/src%2Ftest%2Fcompile-fail%2FE0072.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cdedad530f05767905ef1a53f284b4a88424f3dc/src%2Ftest%2Fcompile-fail%2FE0072.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2FE0072.rs?ref=cdedad530f05767905ef1a53f284b4a88424f3dc", "patch": "@@ -9,6 +9,7 @@\n // except according to those terms.\n \n struct ListNode { //~ ERROR E0072\n+                  //~| NOTE recursive type has infinite size\n     head: u8,\n     tail: Option<ListNode>,\n }"}, {"sha": "38b5fcbb3db0ee36b98b190945e09af7b1b33be4", "filename": "src/test/compile-fail/issue-3008-2.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/cdedad530f05767905ef1a53f284b4a88424f3dc/src%2Ftest%2Fcompile-fail%2Fissue-3008-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cdedad530f05767905ef1a53f284b4a88424f3dc/src%2Ftest%2Fcompile-fail%2Fissue-3008-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-3008-2.rs?ref=cdedad530f05767905ef1a53f284b4a88424f3dc", "patch": "@@ -13,6 +13,7 @@\n enum foo { foo_(bar) }\n struct bar { x: bar }\n //~^ ERROR E0072\n+//~| NOTE recursive type has infinite size\n \n fn main() {\n }"}, {"sha": "afffe2a2c8d03d057a95eb4296f5dea955e1598e", "filename": "src/test/compile-fail/issue-32326.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/cdedad530f05767905ef1a53f284b4a88424f3dc/src%2Ftest%2Fcompile-fail%2Fissue-32326.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cdedad530f05767905ef1a53f284b4a88424f3dc/src%2Ftest%2Fcompile-fail%2Fissue-32326.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-32326.rs?ref=cdedad530f05767905ef1a53f284b4a88424f3dc", "patch": "@@ -13,6 +13,7 @@\n // too big.\n \n enum Expr { //~ ERROR E0072\n+            //~| NOTE recursive type has infinite size\n     Plus(Expr, Expr),\n     Literal(i64),\n }"}, {"sha": "71e9325ab75d135dfb7823e967f0f48d5b74466e", "filename": "src/test/compile-fail/issue-3779.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/cdedad530f05767905ef1a53f284b4a88424f3dc/src%2Ftest%2Fcompile-fail%2Fissue-3779.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cdedad530f05767905ef1a53f284b4a88424f3dc/src%2Ftest%2Fcompile-fail%2Fissue-3779.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-3779.rs?ref=cdedad530f05767905ef1a53f284b4a88424f3dc", "patch": "@@ -9,6 +9,7 @@\n // except according to those terms.\n \n struct S { //~ ERROR E0072\n+           //~| NOTE recursive type has infinite size\n     element: Option<S>\n }\n "}, {"sha": "7b56c6c15ebb308b68b959338bacc1730a665cc5", "filename": "src/test/compile-fail/type-recursive.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/cdedad530f05767905ef1a53f284b4a88424f3dc/src%2Ftest%2Fcompile-fail%2Ftype-recursive.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cdedad530f05767905ef1a53f284b4a88424f3dc/src%2Ftest%2Fcompile-fail%2Ftype-recursive.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Ftype-recursive.rs?ref=cdedad530f05767905ef1a53f284b4a88424f3dc", "patch": "@@ -9,6 +9,7 @@\n // except according to those terms.\n \n struct t1 { //~ ERROR E0072\n+            //~| NOTE recursive type has infinite size\n     foo: isize,\n     foolish: t1\n }"}]}