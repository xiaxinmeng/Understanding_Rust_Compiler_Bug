{"sha": "33f0a3765d6ac523afefa3922d56bcb519edf3c3", "node_id": "MDY6Q29tbWl0NzI0NzEyOjMzZjBhMzc2NWQ2YWM1MjNhZmVmYTM5MjJkNTZiY2I1MTllZGYzYzM=", "commit": {"author": {"name": "varkor", "email": "github@varkor.com", "date": "2019-04-22T15:15:18Z"}, "committer": {"name": "varkor", "email": "github@varkor.com", "date": "2019-04-23T10:42:14Z"}, "message": "Look specifically for comments containing tidy ignore directives", "tree": {"sha": "079b75effdeeb1212958af9bbeade2c76a1fa1a9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/079b75effdeeb1212958af9bbeade2c76a1fa1a9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/33f0a3765d6ac523afefa3922d56bcb519edf3c3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/33f0a3765d6ac523afefa3922d56bcb519edf3c3", "html_url": "https://github.com/rust-lang/rust/commit/33f0a3765d6ac523afefa3922d56bcb519edf3c3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/33f0a3765d6ac523afefa3922d56bcb519edf3c3/comments", "author": {"login": "varkor", "id": 3943692, "node_id": "MDQ6VXNlcjM5NDM2OTI=", "avatar_url": "https://avatars.githubusercontent.com/u/3943692?v=4", "gravatar_id": "", "url": "https://api.github.com/users/varkor", "html_url": "https://github.com/varkor", "followers_url": "https://api.github.com/users/varkor/followers", "following_url": "https://api.github.com/users/varkor/following{/other_user}", "gists_url": "https://api.github.com/users/varkor/gists{/gist_id}", "starred_url": "https://api.github.com/users/varkor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/varkor/subscriptions", "organizations_url": "https://api.github.com/users/varkor/orgs", "repos_url": "https://api.github.com/users/varkor/repos", "events_url": "https://api.github.com/users/varkor/events{/privacy}", "received_events_url": "https://api.github.com/users/varkor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "varkor", "id": 3943692, "node_id": "MDQ6VXNlcjM5NDM2OTI=", "avatar_url": "https://avatars.githubusercontent.com/u/3943692?v=4", "gravatar_id": "", "url": "https://api.github.com/users/varkor", "html_url": "https://github.com/varkor", "followers_url": "https://api.github.com/users/varkor/followers", "following_url": "https://api.github.com/users/varkor/following{/other_user}", "gists_url": "https://api.github.com/users/varkor/gists{/gist_id}", "starred_url": "https://api.github.com/users/varkor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/varkor/subscriptions", "organizations_url": "https://api.github.com/users/varkor/orgs", "repos_url": "https://api.github.com/users/varkor/repos", "events_url": "https://api.github.com/users/varkor/events{/privacy}", "received_events_url": "https://api.github.com/users/varkor/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0f11354a9c1bf0c5ac250c7fa2bafc289a662f42", "url": "https://api.github.com/repos/rust-lang/rust/commits/0f11354a9c1bf0c5ac250c7fa2bafc289a662f42", "html_url": "https://github.com/rust-lang/rust/commit/0f11354a9c1bf0c5ac250c7fa2bafc289a662f42"}], "stats": {"total": 15, "additions": 10, "deletions": 5}, "files": [{"sha": "ae4ddd825dcf93656d96393fde9e5ba13052a694", "filename": "src/tools/tidy/src/style.rs", "status": "modified", "additions": 10, "deletions": 5, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/33f0a3765d6ac523afefa3922d56bcb519edf3c3/src%2Ftools%2Ftidy%2Fsrc%2Fstyle.rs", "raw_url": "https://github.com/rust-lang/rust/raw/33f0a3765d6ac523afefa3922d56bcb519edf3c3/src%2Ftools%2Ftidy%2Fsrc%2Fstyle.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Ftidy%2Fsrc%2Fstyle.rs?ref=33f0a3765d6ac523afefa3922d56bcb519edf3c3", "patch": "@@ -90,6 +90,11 @@ fn long_line_is_ok(line: &str) -> bool {\n     false\n }\n \n+fn contains_ignore_directive(contents: &String, check: &str) -> bool {\n+    contents.contains(&format!(\"// ignore-tidy-{}\", check)) ||\n+        contents.contains(&format!(\"# ignore-tidy-{}\", check))\n+}\n+\n pub fn check(path: &Path, bad: &mut bool) {\n     let mut contents = String::new();\n     super::walk(path, &mut super::filter_dirs, &mut |file| {\n@@ -107,11 +112,11 @@ pub fn check(path: &Path, bad: &mut bool) {\n             tidy_error!(bad, \"{}: empty file\", file.display());\n         }\n \n-        let skip_cr = contents.contains(\"ignore-tidy-cr\");\n-        let skip_tab = contents.contains(\"ignore-tidy-tab\");\n-        let skip_length = contents.contains(\"ignore-tidy-linelength\");\n-        let skip_end_whitespace = contents.contains(\"ignore-tidy-end-whitespace\");\n-        let skip_copyright = contents.contains(\"ignore-tidy-copyright\");\n+        let skip_cr = contains_ignore_directive(&contents, \"cr\");\n+        let skip_tab = contains_ignore_directive(&contents, \"tab\");\n+        let skip_length = contains_ignore_directive(&contents, \"linelength\");\n+        let skip_end_whitespace = contains_ignore_directive(&contents, \"end-whitespace\");\n+        let skip_copyright = contains_ignore_directive(&contents, \"copyright\");\n         let mut leading_new_lines = false;\n         let mut trailing_new_lines = 0;\n         for (i, line) in contents.split('\\n').enumerate() {"}]}