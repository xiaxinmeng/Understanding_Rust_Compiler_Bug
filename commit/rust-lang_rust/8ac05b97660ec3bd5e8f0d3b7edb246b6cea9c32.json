{"sha": "8ac05b97660ec3bd5e8f0d3b7edb246b6cea9c32", "node_id": "C_kwDOAAsO6NoAKDhhYzA1Yjk3NjYwZWMzYmQ1ZThmMGQzYjdlZGIyNDZiNmNlYTljMzI", "commit": {"author": {"name": "David Tolnay", "email": "dtolnay@gmail.com", "date": "2022-01-21T05:22:40Z"}, "committer": {"name": "David Tolnay", "email": "dtolnay@gmail.com", "date": "2022-01-31T03:45:00Z"}, "message": "Fix some double indents on exprs containing blocks\n\nThe `print_expr` method already places an `ibox(INDENT_UNIT)` around\nevery expr that gets printed. Some exprs were then using `self.head`\ninside of that, which does its own `cbox(INDENT_UNIT)`, resulting in two\nlevels of indentation:\n\n    while true {\n            stuff;\n        }\n\nThis commit fixes those cases to produce the expected single level of\nindentation within every expression containing a block.\n\n    while true {\n        stuff;\n    }", "tree": {"sha": "0319260106e9023ad108bf44390b3c7938b7cc12", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0319260106e9023ad108bf44390b3c7938b7cc12"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8ac05b97660ec3bd5e8f0d3b7edb246b6cea9c32", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEERijF2Cz/ZdaBZKeK+boUO5X/bYIFAmH3WzwACgkQ+boUO5X/\nbYLc1xAAw87eeNSwHr+QkNyQgNeveZeo/acUC6Q+XTDN9u3uLSd1qVXiAI/AMp7H\nvw3cs3eUiLWTVLM8Tdq7Yo4A3T/TYLkJBGy78DpPX7D+olsCKee2fV6wOOmq9red\nHfMnzEESYtbjErUELJpfiSZlegK1sdx78TzROtT+GeET6i87Pw0leZZeHyw9PrDv\nHGuU59y7zlpK5FOrgJZS2z2pu2mnuWvbMDUw92OJC7BnFlaW95tV5uULngAJb91r\nhAiIdKadANH8LQfAyBcK0mFlW456JX61JpIxm9pCMVYXLwrOXCG/YuWiKrnLSdby\nMfUMc8UA7q8kbsqDTRqDgqWF+aIGlA2ald7TgmmFE3yLNWRJ0KnZllGapu83Rl1C\nc/Udnecc2p8mM0Who4+QJ0fn4r3htgbp/ELXYvJZCma8x9TpTfpJH39CrmAwZMP4\nAolCTA1WPvDdFz1ReEo2iCuVpZua+HxBK1d8Ze1pl6EtfCPHDxu7lBk7LGGL/IMn\nsOffVQsT/2yFObDFnoXXq5RhSGN1WuWwXs4JNYWM+J2/hcNPHwrMB+jE0z/r44Hc\nQpaTrfPt1HdwnCQYFywVdLmrkVW0tc64dCHJ0UKQ0QMUKAnmLUjX4U1J+ecqstM4\nj6ketQEfslOIj6OV1LAkJBFptd3RvIFxMWKsjeZMwWWqZGDyy0E=\n=cssC\n-----END PGP SIGNATURE-----", "payload": "tree 0319260106e9023ad108bf44390b3c7938b7cc12\nparent cb93e9c0ec6058df03e163fd7b3e652f7f22041d\nauthor David Tolnay <dtolnay@gmail.com> 1642742560 -0800\ncommitter David Tolnay <dtolnay@gmail.com> 1643600700 -0800\n\nFix some double indents on exprs containing blocks\n\nThe `print_expr` method already places an `ibox(INDENT_UNIT)` around\nevery expr that gets printed. Some exprs were then using `self.head`\ninside of that, which does its own `cbox(INDENT_UNIT)`, resulting in two\nlevels of indentation:\n\n    while true {\n            stuff;\n        }\n\nThis commit fixes those cases to produce the expected single level of\nindentation within every expression containing a block.\n\n    while true {\n        stuff;\n    }\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8ac05b97660ec3bd5e8f0d3b7edb246b6cea9c32", "html_url": "https://github.com/rust-lang/rust/commit/8ac05b97660ec3bd5e8f0d3b7edb246b6cea9c32", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8ac05b97660ec3bd5e8f0d3b7edb246b6cea9c32/comments", "author": {"login": "dtolnay", "id": 1940490, "node_id": "MDQ6VXNlcjE5NDA0OTA=", "avatar_url": "https://avatars.githubusercontent.com/u/1940490?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dtolnay", "html_url": "https://github.com/dtolnay", "followers_url": "https://api.github.com/users/dtolnay/followers", "following_url": "https://api.github.com/users/dtolnay/following{/other_user}", "gists_url": "https://api.github.com/users/dtolnay/gists{/gist_id}", "starred_url": "https://api.github.com/users/dtolnay/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dtolnay/subscriptions", "organizations_url": "https://api.github.com/users/dtolnay/orgs", "repos_url": "https://api.github.com/users/dtolnay/repos", "events_url": "https://api.github.com/users/dtolnay/events{/privacy}", "received_events_url": "https://api.github.com/users/dtolnay/received_events", "type": "User", "site_admin": false}, "committer": {"login": "dtolnay", "id": 1940490, "node_id": "MDQ6VXNlcjE5NDA0OTA=", "avatar_url": "https://avatars.githubusercontent.com/u/1940490?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dtolnay", "html_url": "https://github.com/dtolnay", "followers_url": "https://api.github.com/users/dtolnay/followers", "following_url": "https://api.github.com/users/dtolnay/following{/other_user}", "gists_url": "https://api.github.com/users/dtolnay/gists{/gist_id}", "starred_url": "https://api.github.com/users/dtolnay/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dtolnay/subscriptions", "organizations_url": "https://api.github.com/users/dtolnay/orgs", "repos_url": "https://api.github.com/users/dtolnay/repos", "events_url": "https://api.github.com/users/dtolnay/events{/privacy}", "received_events_url": "https://api.github.com/users/dtolnay/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cb93e9c0ec6058df03e163fd7b3e652f7f22041d", "url": "https://api.github.com/repos/rust-lang/rust/commits/cb93e9c0ec6058df03e163fd7b3e652f7f22041d", "html_url": "https://github.com/rust-lang/rust/commit/cb93e9c0ec6058df03e163fd7b3e652f7f22041d"}], "stats": {"total": 28, "additions": 18, "deletions": 10}, "files": [{"sha": "6a5bba30b8bca8b1ef0a0ad8faf5703d321a8ec3", "filename": "compiler/rustc_ast_pretty/src/pprust/state/expr.rs", "status": "modified", "additions": 16, "deletions": 8, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/8ac05b97660ec3bd5e8f0d3b7edb246b6cea9c32/compiler%2Frustc_ast_pretty%2Fsrc%2Fpprust%2Fstate%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8ac05b97660ec3bd5e8f0d3b7edb246b6cea9c32/compiler%2Frustc_ast_pretty%2Fsrc%2Fpprust%2Fstate%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_ast_pretty%2Fsrc%2Fpprust%2Fstate%2Fexpr.rs?ref=8ac05b97660ec3bd5e8f0d3b7edb246b6cea9c32", "patch": "@@ -320,7 +320,9 @@ impl<'a> State<'a> {\n                     self.print_ident(label.ident);\n                     self.word_space(\":\");\n                 }\n-                self.head(\"while\");\n+                self.cbox(0);\n+                self.ibox(0);\n+                self.word_nbsp(\"while\");\n                 self.print_expr_as_cond(test);\n                 self.space();\n                 self.print_block_with_attrs(blk, attrs);\n@@ -330,7 +332,9 @@ impl<'a> State<'a> {\n                     self.print_ident(label.ident);\n                     self.word_space(\":\");\n                 }\n-                self.head(\"for\");\n+                self.cbox(0);\n+                self.ibox(0);\n+                self.word_nbsp(\"for\");\n                 self.print_pat(pat);\n                 self.space();\n                 self.word_space(\"in\");\n@@ -343,12 +347,14 @@ impl<'a> State<'a> {\n                     self.print_ident(label.ident);\n                     self.word_space(\":\");\n                 }\n-                self.head(\"loop\");\n+                self.cbox(0);\n+                self.ibox(0);\n+                self.word_nbsp(\"loop\");\n                 self.print_block_with_attrs(blk, attrs);\n             }\n             ast::ExprKind::Match(ref expr, ref arms) => {\n-                self.cbox(INDENT_UNIT);\n-                self.ibox(INDENT_UNIT);\n+                self.cbox(0);\n+                self.ibox(0);\n                 self.word_nbsp(\"match\");\n                 self.print_expr_as_cond(expr);\n                 self.space();\n@@ -388,7 +394,7 @@ impl<'a> State<'a> {\n                     self.word_space(\":\");\n                 }\n                 // containing cbox, will be closed by print-block at }\n-                self.cbox(INDENT_UNIT);\n+                self.cbox(0);\n                 // head-box, will be closed by print-block after {\n                 self.ibox(0);\n                 self.print_block_with_attrs(blk, attrs);\n@@ -397,7 +403,7 @@ impl<'a> State<'a> {\n                 self.word_nbsp(\"async\");\n                 self.print_capture_clause(capture_clause);\n                 // cbox/ibox in analogy to the `ExprKind::Block` arm above\n-                self.cbox(INDENT_UNIT);\n+                self.cbox(0);\n                 self.ibox(0);\n                 self.print_block_with_attrs(blk, attrs);\n             }\n@@ -500,7 +506,9 @@ impl<'a> State<'a> {\n                 self.word(\"?\")\n             }\n             ast::ExprKind::TryBlock(ref blk) => {\n-                self.head(\"try\");\n+                self.cbox(0);\n+                self.ibox(0);\n+                self.word_nbsp(\"try\");\n                 self.print_block_with_attrs(blk, attrs)\n             }\n             ast::ExprKind::Err => {"}, {"sha": "dac84ae9d5fc87fcbf4fda40a9f247d88e29bd5e", "filename": "compiler/rustc_ast_pretty/src/pprust/state/item.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/8ac05b97660ec3bd5e8f0d3b7edb246b6cea9c32/compiler%2Frustc_ast_pretty%2Fsrc%2Fpprust%2Fstate%2Fitem.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8ac05b97660ec3bd5e8f0d3b7edb246b6cea9c32/compiler%2Frustc_ast_pretty%2Fsrc%2Fpprust%2Fstate%2Fitem.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_ast_pretty%2Fsrc%2Fpprust%2Fstate%2Fitem.rs?ref=8ac05b97660ec3bd5e8f0d3b7edb246b6cea9c32", "patch": "@@ -1,5 +1,5 @@\n use crate::pp::Breaks::Inconsistent;\n-use crate::pprust::state::{AnnNode, PrintState, State, INDENT_UNIT};\n+use crate::pprust::state::{AnnNode, PrintState, State};\n \n use rustc_ast as ast;\n use rustc_ast::GenericBound;\n@@ -377,7 +377,7 @@ impl<'a> State<'a> {\n             self.space_if_not_bol();\n             self.maybe_print_comment(v.span.lo());\n             self.print_outer_attributes(&v.attrs);\n-            self.ibox(INDENT_UNIT);\n+            self.ibox(0);\n             self.print_variant(v);\n             self.word(\",\");\n             self.end();"}]}