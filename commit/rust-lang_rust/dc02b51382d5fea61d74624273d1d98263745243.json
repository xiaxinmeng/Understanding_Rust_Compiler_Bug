{"sha": "dc02b51382d5fea61d74624273d1d98263745243", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRjMDJiNTEzODJkNWZlYTYxZDc0NjI0MjczZDFkOTgyNjM3NDUyNDM=", "commit": {"author": {"name": "Esteban Kuber", "email": "esteban@kuber.com.ar", "date": "2021-09-09T14:22:24Z"}, "committer": {"name": "Esteban Kuber", "email": "esteban@kuber.com.ar", "date": "2021-09-09T14:24:33Z"}, "message": "Use more accurate spans for \"unused delimiter\" lint", "tree": {"sha": "561bfd7d82c09aff66401ef8e5a51981dd1c7eb6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/561bfd7d82c09aff66401ef8e5a51981dd1c7eb6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/dc02b51382d5fea61d74624273d1d98263745243", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/dc02b51382d5fea61d74624273d1d98263745243", "html_url": "https://github.com/rust-lang/rust/commit/dc02b51382d5fea61d74624273d1d98263745243", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/dc02b51382d5fea61d74624273d1d98263745243/comments", "author": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "committer": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "02a57fa13291f5bbb9d8efbc71f7423642b8d105", "url": "https://api.github.com/repos/rust-lang/rust/commits/02a57fa13291f5bbb9d8efbc71f7423642b8d105", "html_url": "https://github.com/rust-lang/rust/commit/02a57fa13291f5bbb9d8efbc71f7423642b8d105"}], "stats": {"total": 701, "additions": 551, "deletions": 150}, "files": [{"sha": "48b955e41ac69506c05e5e46b071c979293dd6d3", "filename": "compiler/rustc_lint/src/unused.rs", "status": "modified", "additions": 52, "deletions": 68, "changes": 120, "blob_url": "https://github.com/rust-lang/rust/blob/dc02b51382d5fea61d74624273d1d98263745243/compiler%2Frustc_lint%2Fsrc%2Funused.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dc02b51382d5fea61d74624273d1d98263745243/compiler%2Frustc_lint%2Fsrc%2Funused.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_lint%2Fsrc%2Funused.rs?ref=dc02b51382d5fea61d74624273d1d98263745243", "patch": "@@ -3,7 +3,6 @@ use crate::{EarlyContext, EarlyLintPass, LateContext, LateLintPass, LintContext}\n use rustc_ast as ast;\n use rustc_ast::util::{classify, parser};\n use rustc_ast::{ExprKind, StmtKind};\n-use rustc_ast_pretty::pprust;\n use rustc_errors::{pluralize, Applicability};\n use rustc_hir as hir;\n use rustc_hir::def::{DefKind, Res};\n@@ -12,7 +11,7 @@ use rustc_middle::ty::adjustment;\n use rustc_middle::ty::{self, Ty};\n use rustc_span::symbol::Symbol;\n use rustc_span::symbol::{kw, sym};\n-use rustc_span::{BytePos, Span, DUMMY_SP};\n+use rustc_span::{BytePos, MultiSpan, Span, DUMMY_SP};\n \n declare_lint! {\n     /// The `unused_must_use` lint detects unused result of a type flagged as\n@@ -491,77 +490,60 @@ trait UnusedDelimLint {\n         left_pos: Option<BytePos>,\n         right_pos: Option<BytePos>,\n     ) {\n-        let expr_text = if let Ok(snippet) = cx.sess().source_map().span_to_snippet(value.span) {\n-            snippet\n-        } else {\n-            pprust::expr_to_string(value)\n+        let spans = match value.kind {\n+            ast::ExprKind::Block(ref block, None) if block.stmts.len() > 0 => {\n+                let start = block.stmts[0].span;\n+                let end = block.stmts[block.stmts.len() - 1].span;\n+                if value.span.from_expansion() || start.from_expansion() || end.from_expansion() {\n+                    (\n+                        value.span.with_hi(value.span.lo() + BytePos(1)),\n+                        value.span.with_lo(value.span.hi() - BytePos(1)),\n+                    )\n+                } else {\n+                    (value.span.with_hi(start.lo()), value.span.with_lo(end.hi()))\n+                }\n+            }\n+            ast::ExprKind::Paren(ref expr) => {\n+                if value.span.from_expansion() || expr.span.from_expansion() {\n+                    (\n+                        value.span.with_hi(value.span.lo() + BytePos(1)),\n+                        value.span.with_lo(value.span.hi() - BytePos(1)),\n+                    )\n+                } else {\n+                    (value.span.with_hi(expr.span.lo()), value.span.with_lo(expr.span.hi()))\n+                }\n+            }\n+            _ => return,\n         };\n         let keep_space = (\n             left_pos.map_or(false, |s| s >= value.span.lo()),\n             right_pos.map_or(false, |s| s <= value.span.hi()),\n         );\n-        self.emit_unused_delims(cx, value.span, &expr_text, ctx.into(), keep_space);\n+        self.emit_unused_delims(cx, spans, ctx.into(), keep_space);\n     }\n \n     fn emit_unused_delims(\n         &self,\n         cx: &EarlyContext<'_>,\n-        span: Span,\n-        pattern: &str,\n+        spans: (Span, Span),\n         msg: &str,\n         keep_space: (bool, bool),\n     ) {\n         // FIXME(flip1995): Quick and dirty fix for #70814. This should be fixed in rustdoc\n         // properly.\n-        if span == DUMMY_SP {\n+        if spans.0 == DUMMY_SP || spans.1 == DUMMY_SP {\n             return;\n         }\n \n-        cx.struct_span_lint(self.lint(), span, |lint| {\n+        cx.struct_span_lint(self.lint(), MultiSpan::from(vec![spans.0, spans.1]), |lint| {\n             let span_msg = format!(\"unnecessary {} around {}\", Self::DELIM_STR, msg);\n             let mut err = lint.build(&span_msg);\n-            let mut ate_left_paren = false;\n-            let mut ate_right_paren = false;\n-            let parens_removed = pattern\n-                .trim_matches(|c| match c {\n-                    '(' | '{' => {\n-                        if ate_left_paren {\n-                            false\n-                        } else {\n-                            ate_left_paren = true;\n-                            true\n-                        }\n-                    }\n-                    ')' | '}' => {\n-                        if ate_right_paren {\n-                            false\n-                        } else {\n-                            ate_right_paren = true;\n-                            true\n-                        }\n-                    }\n-                    _ => false,\n-                })\n-                .trim();\n-\n-            let replace = {\n-                let mut replace = if keep_space.0 {\n-                    let mut s = String::from(\" \");\n-                    s.push_str(parens_removed);\n-                    s\n-                } else {\n-                    String::from(parens_removed)\n-                };\n-\n-                if keep_space.1 {\n-                    replace.push(' ');\n-                }\n-                replace\n-            };\n-\n+            let replacement = vec![\n+                (spans.0, if keep_space.0 { \" \".into() } else { \"\".into() }),\n+                (spans.1, if keep_space.1 { \" \".into() } else { \"\".into() }),\n+            ];\n             let suggestion = format!(\"remove these {}\", Self::DELIM_STR);\n-\n-            err.span_suggestion_short(span, &suggestion, replace, Applicability::MachineApplicable);\n+            err.multipart_suggestion(&suggestion, replacement, Applicability::MachineApplicable);\n             err.emit();\n         });\n     }\n@@ -770,14 +752,15 @@ impl UnusedParens {\n                 // Otherwise proceed with linting.\n                 _ => {}\n             }\n-\n-            let pattern_text =\n-                if let Ok(snippet) = cx.sess().source_map().span_to_snippet(value.span) {\n-                    snippet\n-                } else {\n-                    pprust::pat_to_string(value)\n-                };\n-            self.emit_unused_delims(cx, value.span, &pattern_text, \"pattern\", (false, false));\n+            let spans = if value.span.from_expansion() || inner.span.from_expansion() {\n+                (\n+                    value.span.with_hi(value.span.lo() + BytePos(1)),\n+                    value.span.with_lo(value.span.hi() - BytePos(1)),\n+                )\n+            } else {\n+                (value.span.with_hi(inner.span.lo()), value.span.with_lo(inner.span.hi()))\n+            };\n+            self.emit_unused_delims(cx, spans, \"pattern\", (false, false));\n         }\n     }\n }\n@@ -870,14 +853,15 @@ impl EarlyLintPass for UnusedParens {\n                     );\n                 }\n                 _ => {\n-                    let pattern_text =\n-                        if let Ok(snippet) = cx.sess().source_map().span_to_snippet(ty.span) {\n-                            snippet\n-                        } else {\n-                            pprust::ty_to_string(ty)\n-                        };\n-\n-                    self.emit_unused_delims(cx, ty.span, &pattern_text, \"type\", (false, false));\n+                    let spans = if ty.span.from_expansion() || r.span.from_expansion() {\n+                        (\n+                            ty.span.with_hi(ty.span.lo() + BytePos(1)),\n+                            ty.span.with_lo(ty.span.hi() - BytePos(1)),\n+                        )\n+                    } else {\n+                        (ty.span.with_hi(r.span.lo()), ty.span.with_lo(r.span.hi()))\n+                    };\n+                    self.emit_unused_delims(cx, spans, \"type\", (false, false));\n                 }\n             }\n         }"}, {"sha": "0aea56ddb702b0386cec7e45011e04f1c4ec90bd", "filename": "src/test/ui/async-await/issues/issue-54752-async-block.stderr", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/dc02b51382d5fea61d74624273d1d98263745243/src%2Ftest%2Fui%2Fasync-await%2Fissues%2Fissue-54752-async-block.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/dc02b51382d5fea61d74624273d1d98263745243/src%2Ftest%2Fui%2Fasync-await%2Fissues%2Fissue-54752-async-block.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fasync-await%2Fissues%2Fissue-54752-async-block.stderr?ref=dc02b51382d5fea61d74624273d1d98263745243", "patch": "@@ -2,9 +2,14 @@ warning: unnecessary parentheses around assigned value\n   --> $DIR/issue-54752-async-block.rs:6:22\n    |\n LL | fn main() { let _a = (async  { }); }\n-   |                      ^^^^^^^^^^^^ help: remove these parentheses\n+   |                      ^          ^\n    |\n    = note: `#[warn(unused_parens)]` on by default\n+help: remove these parentheses\n+   |\n+LL - fn main() { let _a = (async  { }); }\n+LL + fn main() { let _a = async  { }; }\n+   | \n \n warning: 1 warning emitted\n "}, {"sha": "533fcabd418228734b6a9d46dfb121ae6d643a09", "filename": "src/test/ui/const-generics/unused_braces.stderr", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/dc02b51382d5fea61d74624273d1d98263745243/src%2Ftest%2Fui%2Fconst-generics%2Funused_braces.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/dc02b51382d5fea61d74624273d1d98263745243/src%2Ftest%2Fui%2Fconst-generics%2Funused_braces.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Funused_braces.stderr?ref=dc02b51382d5fea61d74624273d1d98263745243", "patch": "@@ -2,13 +2,18 @@ warning: unnecessary braces around const expression\n   --> $DIR/unused_braces.rs:9:14\n    |\n LL |     let _: A<{ 7 }>;\n-   |              ^^^^^ help: remove these braces\n+   |              ^^ ^^\n    |\n note: the lint level is defined here\n   --> $DIR/unused_braces.rs:3:9\n    |\n LL | #![warn(unused_braces)]\n    |         ^^^^^^^^^^^^^\n+help: remove these braces\n+   |\n+LL -     let _: A<{ 7 }>;\n+LL +     let _: A<7>;\n+   | \n \n warning: 1 warning emitted\n "}, {"sha": "1d5f9ebb5e5c5e3ba1558e1ab559c4261e347e5b", "filename": "src/test/ui/lint/lint-unnecessary-parens.stderr", "status": "modified", "additions": 118, "deletions": 17, "changes": 135, "blob_url": "https://github.com/rust-lang/rust/blob/dc02b51382d5fea61d74624273d1d98263745243/src%2Ftest%2Fui%2Flint%2Flint-unnecessary-parens.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/dc02b51382d5fea61d74624273d1d98263745243/src%2Ftest%2Fui%2Flint%2Flint-unnecessary-parens.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Flint-unnecessary-parens.stderr?ref=dc02b51382d5fea61d74624273d1d98263745243", "patch": "@@ -2,109 +2,210 @@ error: unnecessary parentheses around `return` value\n   --> $DIR/lint-unnecessary-parens.rs:13:12\n    |\n LL |     return (1);\n-   |            ^^^ help: remove these parentheses\n+   |            ^ ^\n    |\n note: the lint level is defined here\n   --> $DIR/lint-unnecessary-parens.rs:3:9\n    |\n LL | #![deny(unused_parens)]\n    |         ^^^^^^^^^^^^^\n+help: remove these parentheses\n+   |\n+LL -     return (1);\n+LL +     return 1;\n+   | \n \n error: unnecessary parentheses around `return` value\n   --> $DIR/lint-unnecessary-parens.rs:16:12\n    |\n LL |     return (X { y });\n-   |            ^^^^^^^^^ help: remove these parentheses\n+   |            ^       ^\n+   |\n+help: remove these parentheses\n+   |\n+LL -     return (X { y });\n+LL +     return X { y };\n+   | \n \n error: unnecessary parentheses around type\n   --> $DIR/lint-unnecessary-parens.rs:19:46\n    |\n LL | pub fn unused_parens_around_return_type() -> (u32) {\n-   |                                              ^^^^^ help: remove these parentheses\n+   |                                              ^   ^\n+   |\n+help: remove these parentheses\n+   |\n+LL - pub fn unused_parens_around_return_type() -> (u32) {\n+LL + pub fn unused_parens_around_return_type() -> u32 {\n+   | \n \n error: unnecessary parentheses around block return value\n   --> $DIR/lint-unnecessary-parens.rs:25:9\n    |\n LL |         (5)\n-   |         ^^^ help: remove these parentheses\n+   |         ^ ^\n+   |\n+help: remove these parentheses\n+   |\n+LL -         (5)\n+LL +         5\n+   | \n \n error: unnecessary parentheses around block return value\n   --> $DIR/lint-unnecessary-parens.rs:27:5\n    |\n LL |     (5)\n-   |     ^^^ help: remove these parentheses\n+   |     ^ ^\n+   |\n+help: remove these parentheses\n+   |\n+LL -     (5)\n+LL +     5\n+   | \n \n error: unnecessary parentheses around assigned value\n   --> $DIR/lint-unnecessary-parens.rs:44:31\n    |\n LL | pub const CONST_ITEM: usize = (10);\n-   |                               ^^^^ help: remove these parentheses\n+   |                               ^  ^\n+   |\n+help: remove these parentheses\n+   |\n+LL - pub const CONST_ITEM: usize = (10);\n+LL + pub const CONST_ITEM: usize = 10;\n+   | \n \n error: unnecessary parentheses around assigned value\n   --> $DIR/lint-unnecessary-parens.rs:45:33\n    |\n LL | pub static STATIC_ITEM: usize = (10);\n-   |                                 ^^^^ help: remove these parentheses\n+   |                                 ^  ^\n+   |\n+help: remove these parentheses\n+   |\n+LL - pub static STATIC_ITEM: usize = (10);\n+LL + pub static STATIC_ITEM: usize = 10;\n+   | \n \n error: unnecessary parentheses around function argument\n   --> $DIR/lint-unnecessary-parens.rs:49:9\n    |\n LL |     bar((true));\n-   |         ^^^^^^ help: remove these parentheses\n+   |         ^    ^\n+   |\n+help: remove these parentheses\n+   |\n+LL -     bar((true));\n+LL +     bar(true);\n+   | \n \n error: unnecessary parentheses around `if` condition\n   --> $DIR/lint-unnecessary-parens.rs:51:8\n    |\n LL |     if (true) {}\n-   |        ^^^^^^ help: remove these parentheses\n+   |        ^    ^\n+   |\n+help: remove these parentheses\n+   |\n+LL -     if (true) {}\n+LL +     if true {}\n+   | \n \n error: unnecessary parentheses around `while` condition\n   --> $DIR/lint-unnecessary-parens.rs:52:11\n    |\n LL |     while (true) {}\n-   |           ^^^^^^ help: remove these parentheses\n+   |           ^    ^\n+   |\n+help: remove these parentheses\n+   |\n+LL -     while (true) {}\n+LL +     while true {}\n+   | \n \n error: unnecessary parentheses around `match` scrutinee expression\n   --> $DIR/lint-unnecessary-parens.rs:53:11\n    |\n LL |     match (true) {\n-   |           ^^^^^^ help: remove these parentheses\n+   |           ^    ^\n+   |\n+help: remove these parentheses\n+   |\n+LL -     match (true) {\n+LL +     match true {\n+   | \n \n error: unnecessary parentheses around `let` scrutinee expression\n   --> $DIR/lint-unnecessary-parens.rs:56:16\n    |\n LL |     if let 1 = (1) {}\n-   |                ^^^ help: remove these parentheses\n+   |                ^ ^\n+   |\n+help: remove these parentheses\n+   |\n+LL -     if let 1 = (1) {}\n+LL +     if let 1 = 1 {}\n+   | \n \n error: unnecessary parentheses around `let` scrutinee expression\n   --> $DIR/lint-unnecessary-parens.rs:57:19\n    |\n LL |     while let 1 = (2) {}\n-   |                   ^^^ help: remove these parentheses\n+   |                   ^ ^\n+   |\n+help: remove these parentheses\n+   |\n+LL -     while let 1 = (2) {}\n+LL +     while let 1 = 2 {}\n+   | \n \n error: unnecessary parentheses around method argument\n   --> $DIR/lint-unnecessary-parens.rs:73:24\n    |\n LL |     X { y: false }.foo((true));\n-   |                        ^^^^^^ help: remove these parentheses\n+   |                        ^    ^\n+   |\n+help: remove these parentheses\n+   |\n+LL -     X { y: false }.foo((true));\n+LL +     X { y: false }.foo(true);\n+   | \n \n error: unnecessary parentheses around assigned value\n   --> $DIR/lint-unnecessary-parens.rs:75:18\n    |\n LL |     let mut _a = (0);\n-   |                  ^^^ help: remove these parentheses\n+   |                  ^ ^\n+   |\n+help: remove these parentheses\n+   |\n+LL -     let mut _a = (0);\n+LL +     let mut _a = 0;\n+   | \n \n error: unnecessary parentheses around assigned value\n   --> $DIR/lint-unnecessary-parens.rs:76:10\n    |\n LL |     _a = (0);\n-   |          ^^^ help: remove these parentheses\n+   |          ^ ^\n+   |\n+help: remove these parentheses\n+   |\n+LL -     _a = (0);\n+LL +     _a = 0;\n+   | \n \n error: unnecessary parentheses around assigned value\n   --> $DIR/lint-unnecessary-parens.rs:77:11\n    |\n LL |     _a += (1);\n-   |           ^^^ help: remove these parentheses\n+   |           ^ ^\n+   |\n+help: remove these parentheses\n+   |\n+LL -     _a += (1);\n+LL +     _a += 1;\n+   | \n \n error: aborting due to 17 previous errors\n "}, {"sha": "255772ff40261160a1874bd94642806d32bb9357", "filename": "src/test/ui/lint/suggestions.stderr", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/dc02b51382d5fea61d74624273d1d98263745243/src%2Ftest%2Fui%2Flint%2Fsuggestions.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/dc02b51382d5fea61d74624273d1d98263745243/src%2Ftest%2Fui%2Flint%2Fsuggestions.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Fsuggestions.stderr?ref=dc02b51382d5fea61d74624273d1d98263745243", "patch": "@@ -10,13 +10,18 @@ warning: unnecessary parentheses around assigned value\n   --> $DIR/suggestions.rs:48:31\n    |\n LL |         let mut registry_no = (format!(\"NX-{}\", 74205));\n-   |                               ^^^^^^^^^^^^^^^^^^^^^^^^^ help: remove these parentheses\n+   |                               ^                       ^\n    |\n note: the lint level is defined here\n   --> $DIR/suggestions.rs:4:21\n    |\n LL | #![warn(unused_mut, unused_parens)] // UI tests pass `-A unused`\u2014see Issue #43896\n    |                     ^^^^^^^^^^^^^\n+help: remove these parentheses\n+   |\n+LL -         let mut registry_no = (format!(\"NX-{}\", 74205));\n+LL +         let mut registry_no = format!(\"NX-{}\", 74205);\n+   | \n \n warning: variable does not need to be mutable\n   --> $DIR/suggestions.rs:48:13"}, {"sha": "677b96d3f32f082cee633cb9b8631b5241844ce7", "filename": "src/test/ui/lint/unused/issue-54538-unused-parens-lint.stderr", "status": "modified", "additions": 167, "deletions": 24, "changes": 191, "blob_url": "https://github.com/rust-lang/rust/blob/dc02b51382d5fea61d74624273d1d98263745243/src%2Ftest%2Fui%2Flint%2Funused%2Fissue-54538-unused-parens-lint.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/dc02b51382d5fea61d74624273d1d98263745243/src%2Ftest%2Fui%2Flint%2Funused%2Fissue-54538-unused-parens-lint.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Funused%2Fissue-54538-unused-parens-lint.stderr?ref=dc02b51382d5fea61d74624273d1d98263745243", "patch": "@@ -2,151 +2,294 @@ error: unnecessary parentheses around pattern\n   --> $DIR/issue-54538-unused-parens-lint.rs:16:9\n    |\n LL |     let (a) = 0;\n-   |         ^^^ help: remove these parentheses\n+   |         ^ ^\n    |\n note: the lint level is defined here\n   --> $DIR/issue-54538-unused-parens-lint.rs:13:9\n    |\n LL | #![deny(unused_parens)]\n    |         ^^^^^^^^^^^^^\n+help: remove these parentheses\n+   |\n+LL -     let (a) = 0;\n+LL +     let a = 0;\n+   | \n \n error: unnecessary parentheses around pattern\n   --> $DIR/issue-54538-unused-parens-lint.rs:17:9\n    |\n LL |     for (a) in 0..1 {}\n-   |         ^^^ help: remove these parentheses\n+   |         ^ ^\n+   |\n+help: remove these parentheses\n+   |\n+LL -     for (a) in 0..1 {}\n+LL +     for a in 0..1 {}\n+   | \n \n error: unnecessary parentheses around pattern\n   --> $DIR/issue-54538-unused-parens-lint.rs:18:12\n    |\n LL |     if let (a) = 0 {}\n-   |            ^^^ help: remove these parentheses\n+   |            ^ ^\n+   |\n+help: remove these parentheses\n+   |\n+LL -     if let (a) = 0 {}\n+LL +     if let a = 0 {}\n+   | \n \n error: unnecessary parentheses around pattern\n   --> $DIR/issue-54538-unused-parens-lint.rs:19:15\n    |\n LL |     while let (a) = 0 {}\n-   |               ^^^ help: remove these parentheses\n+   |               ^ ^\n+   |\n+help: remove these parentheses\n+   |\n+LL -     while let (a) = 0 {}\n+LL +     while let a = 0 {}\n+   | \n \n error: unnecessary parentheses around pattern\n   --> $DIR/issue-54538-unused-parens-lint.rs:20:12\n    |\n LL |     fn foo((a): u8) {}\n-   |            ^^^ help: remove these parentheses\n+   |            ^ ^\n+   |\n+help: remove these parentheses\n+   |\n+LL -     fn foo((a): u8) {}\n+LL +     fn foo(a: u8) {}\n+   | \n \n error: unnecessary parentheses around pattern\n   --> $DIR/issue-54538-unused-parens-lint.rs:21:14\n    |\n LL |     let _ = |(a): u8| 0;\n-   |              ^^^ help: remove these parentheses\n+   |              ^ ^\n+   |\n+help: remove these parentheses\n+   |\n+LL -     let _ = |(a): u8| 0;\n+LL +     let _ = |a: u8| 0;\n+   | \n \n error: unnecessary parentheses around pattern\n   --> $DIR/issue-54538-unused-parens-lint.rs:49:12\n    |\n LL |     if let (0 | 1) = 0 {}\n-   |            ^^^^^^^ help: remove these parentheses\n+   |            ^     ^\n+   |\n+help: remove these parentheses\n+   |\n+LL -     if let (0 | 1) = 0 {}\n+LL +     if let 0 | 1 = 0 {}\n+   | \n \n error: unnecessary parentheses around pattern\n   --> $DIR/issue-54538-unused-parens-lint.rs:50:13\n    |\n LL |     if let ((0 | 1),) = (0,) {}\n-   |             ^^^^^^^ help: remove these parentheses\n+   |             ^     ^\n+   |\n+help: remove these parentheses\n+   |\n+LL -     if let ((0 | 1),) = (0,) {}\n+LL +     if let (0 | 1,) = (0,) {}\n+   | \n \n error: unnecessary parentheses around pattern\n   --> $DIR/issue-54538-unused-parens-lint.rs:51:13\n    |\n LL |     if let [(0 | 1)] = [0] {}\n-   |             ^^^^^^^ help: remove these parentheses\n+   |             ^     ^\n+   |\n+help: remove these parentheses\n+   |\n+LL -     if let [(0 | 1)] = [0] {}\n+LL +     if let [0 | 1] = [0] {}\n+   | \n \n error: unnecessary parentheses around pattern\n   --> $DIR/issue-54538-unused-parens-lint.rs:52:16\n    |\n LL |     if let 0 | (1 | 2) = 0 {}\n-   |                ^^^^^^^ help: remove these parentheses\n+   |                ^     ^\n+   |\n+help: remove these parentheses\n+   |\n+LL -     if let 0 | (1 | 2) = 0 {}\n+LL +     if let 0 | 1 | 2 = 0 {}\n+   | \n \n error: unnecessary parentheses around pattern\n   --> $DIR/issue-54538-unused-parens-lint.rs:54:15\n    |\n LL |     if let TS((0 | 1)) = TS(0) {}\n-   |               ^^^^^^^ help: remove these parentheses\n+   |               ^     ^\n+   |\n+help: remove these parentheses\n+   |\n+LL -     if let TS((0 | 1)) = TS(0) {}\n+LL +     if let TS(0 | 1) = TS(0) {}\n+   | \n \n error: unnecessary parentheses around pattern\n   --> $DIR/issue-54538-unused-parens-lint.rs:56:20\n    |\n LL |     if let NS { f: (0 | 1) } = (NS { f: 0 }) {}\n-   |                    ^^^^^^^ help: remove these parentheses\n+   |                    ^     ^\n+   |\n+help: remove these parentheses\n+   |\n+LL -     if let NS { f: (0 | 1) } = (NS { f: 0 }) {}\n+LL +     if let NS { f: 0 | 1 } = (NS { f: 0 }) {}\n+   | \n \n error: unnecessary parentheses around pattern\n   --> $DIR/issue-54538-unused-parens-lint.rs:66:9\n    |\n LL |         (_) => {}\n-   |         ^^^ help: remove these parentheses\n+   |         ^ ^\n+   |\n+help: remove these parentheses\n+   |\n+LL -         (_) => {}\n+LL +         _ => {}\n+   | \n \n error: unnecessary parentheses around pattern\n   --> $DIR/issue-54538-unused-parens-lint.rs:67:9\n    |\n LL |         (y) => {}\n-   |         ^^^ help: remove these parentheses\n+   |         ^ ^\n+   |\n+help: remove these parentheses\n+   |\n+LL -         (y) => {}\n+LL +         y => {}\n+   | \n \n error: unnecessary parentheses around pattern\n   --> $DIR/issue-54538-unused-parens-lint.rs:68:9\n    |\n LL |         (ref r) => {}\n-   |         ^^^^^^^ help: remove these parentheses\n+   |         ^     ^\n+   |\n+help: remove these parentheses\n+   |\n+LL -         (ref r) => {}\n+LL +         ref r => {}\n+   | \n \n error: unnecessary parentheses around pattern\n   --> $DIR/issue-54538-unused-parens-lint.rs:69:9\n    |\n LL |         (e @ 1...2) => {}\n-   |         ^^^^^^^^^^^ help: remove these parentheses\n+   |         ^         ^\n+   |\n+help: remove these parentheses\n+   |\n+LL -         (e @ 1...2) => {}\n+LL +         e @ 1...2 => {}\n+   | \n \n error: unnecessary parentheses around pattern\n   --> $DIR/issue-54538-unused-parens-lint.rs:75:9\n    |\n LL |         (e @ &(1...2)) => {}\n-   |         ^^^^^^^^^^^^^^ help: remove these parentheses\n+   |         ^            ^\n+   |\n+help: remove these parentheses\n+   |\n+LL -         (e @ &(1...2)) => {}\n+LL +         e @ &(1...2) => {}\n+   | \n \n error: unnecessary parentheses around pattern\n   --> $DIR/issue-54538-unused-parens-lint.rs:76:10\n    |\n LL |         &(_) => {}\n-   |          ^^^ help: remove these parentheses\n+   |          ^ ^\n+   |\n+help: remove these parentheses\n+   |\n+LL -         &(_) => {}\n+LL +         &_ => {}\n+   | \n \n error: unnecessary parentheses around pattern\n   --> $DIR/issue-54538-unused-parens-lint.rs:87:9\n    |\n LL |         (_) => {}\n-   |         ^^^ help: remove these parentheses\n+   |         ^ ^\n+   |\n+help: remove these parentheses\n+   |\n+LL -         (_) => {}\n+LL +         _ => {}\n+   | \n \n error: unnecessary parentheses around pattern\n   --> $DIR/issue-54538-unused-parens-lint.rs:88:9\n    |\n LL |         (y) => {}\n-   |         ^^^ help: remove these parentheses\n+   |         ^ ^\n+   |\n+help: remove these parentheses\n+   |\n+LL -         (y) => {}\n+LL +         y => {}\n+   | \n \n error: unnecessary parentheses around pattern\n   --> $DIR/issue-54538-unused-parens-lint.rs:89:9\n    |\n LL |         (ref r) => {}\n-   |         ^^^^^^^ help: remove these parentheses\n+   |         ^     ^\n+   |\n+help: remove these parentheses\n+   |\n+LL -         (ref r) => {}\n+LL +         ref r => {}\n+   | \n \n error: unnecessary parentheses around pattern\n   --> $DIR/issue-54538-unused-parens-lint.rs:90:9\n    |\n LL |         (e @ 1..=2) => {}\n-   |         ^^^^^^^^^^^ help: remove these parentheses\n+   |         ^         ^\n+   |\n+help: remove these parentheses\n+   |\n+LL -         (e @ 1..=2) => {}\n+LL +         e @ 1..=2 => {}\n+   | \n \n error: unnecessary parentheses around pattern\n   --> $DIR/issue-54538-unused-parens-lint.rs:96:9\n    |\n LL |         (e @ &(1..=2)) => {}\n-   |         ^^^^^^^^^^^^^^ help: remove these parentheses\n+   |         ^            ^\n+   |\n+help: remove these parentheses\n+   |\n+LL -         (e @ &(1..=2)) => {}\n+LL +         e @ &(1..=2) => {}\n+   | \n \n error: unnecessary parentheses around pattern\n   --> $DIR/issue-54538-unused-parens-lint.rs:97:10\n    |\n LL |         &(_) => {}\n-   |          ^^^ help: remove these parentheses\n+   |          ^ ^\n+   |\n+help: remove these parentheses\n+   |\n+LL -         &(_) => {}\n+LL +         &_ => {}\n+   | \n \n error: aborting due to 24 previous errors\n "}, {"sha": "a715093df4c329c34e40fc372b49e948b1b0bfbc", "filename": "src/test/ui/lint/unused/issue-74883-unused-paren-baren-yield.stderr", "status": "modified", "additions": 40, "deletions": 6, "changes": 46, "blob_url": "https://github.com/rust-lang/rust/blob/dc02b51382d5fea61d74624273d1d98263745243/src%2Ftest%2Fui%2Flint%2Funused%2Fissue-74883-unused-paren-baren-yield.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/dc02b51382d5fea61d74624273d1d98263745243/src%2Ftest%2Fui%2Flint%2Funused%2Fissue-74883-unused-paren-baren-yield.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Funused%2Fissue-74883-unused-paren-baren-yield.stderr?ref=dc02b51382d5fea61d74624273d1d98263745243", "patch": "@@ -2,49 +2,83 @@ error: unnecessary parentheses around `let` scrutinee expression\n   --> $DIR/issue-74883-unused-paren-baren-yield.rs:14:29\n    |\n LL |         while let Some(_) = ({yield}) {}\n-   |                             ^^^^^^^^^ help: remove these parentheses\n+   |                             ^       ^\n    |\n note: the lint level is defined here\n   --> $DIR/issue-74883-unused-paren-baren-yield.rs:3:24\n    |\n LL | #![deny(unused_braces, unused_parens)]\n    |                        ^^^^^^^^^^^^^\n+help: remove these parentheses\n+   |\n+LL -         while let Some(_) = ({yield}) {}\n+LL +         while let Some(_) = {yield} {}\n+   | \n \n error: unnecessary parentheses around `let` scrutinee expression\n   --> $DIR/issue-74883-unused-paren-baren-yield.rs:15:29\n    |\n LL |         while let Some(_) = ((yield)) {}\n-   |                             ^^^^^^^^^ help: remove these parentheses\n+   |                             ^       ^\n+   |\n+help: remove these parentheses\n+   |\n+LL -         while let Some(_) = ((yield)) {}\n+LL +         while let Some(_) = (yield) {}\n+   | \n \n error: unnecessary braces around block return value\n   --> $DIR/issue-74883-unused-paren-baren-yield.rs:16:10\n    |\n LL |         {{yield}};\n-   |          ^^^^^^^ help: remove these braces\n+   |          ^     ^\n    |\n note: the lint level is defined here\n   --> $DIR/issue-74883-unused-paren-baren-yield.rs:3:9\n    |\n LL | #![deny(unused_braces, unused_parens)]\n    |         ^^^^^^^^^^^^^\n+help: remove these braces\n+   |\n+LL -         {{yield}};\n+LL +         {yield};\n+   | \n \n error: unnecessary parentheses around block return value\n   --> $DIR/issue-74883-unused-paren-baren-yield.rs:17:10\n    |\n LL |         {( yield )};\n-   |          ^^^^^^^^^ help: remove these parentheses\n+   |          ^^     ^^\n+   |\n+help: remove these parentheses\n+   |\n+LL -         {( yield )};\n+LL +         {yield};\n+   | \n \n error: unnecessary parentheses around block return value\n   --> $DIR/issue-74883-unused-paren-baren-yield.rs:18:30\n    |\n LL |         while let Some(_) = {(yield)} {}\n-   |                              ^^^^^^^ help: remove these parentheses\n+   |                              ^     ^\n+   |\n+help: remove these parentheses\n+   |\n+LL -         while let Some(_) = {(yield)} {}\n+LL +         while let Some(_) = {yield} {}\n+   | \n \n error: unnecessary braces around block return value\n   --> $DIR/issue-74883-unused-paren-baren-yield.rs:19:30\n    |\n LL |         while let Some(_) = {{yield}} {}\n-   |                              ^^^^^^^ help: remove these braces\n+   |                              ^     ^\n+   |\n+help: remove these braces\n+   |\n+LL -         while let Some(_) = {{yield}} {}\n+LL +         while let Some(_) = {yield} {}\n+   | \n \n error: aborting due to 6 previous errors\n "}, {"sha": "7d6fef00ac1a4078357771226ddb4d6e0ed8955a", "filename": "src/test/ui/lint/unused_braces.stderr", "status": "modified", "additions": 33, "deletions": 5, "changes": 38, "blob_url": "https://github.com/rust-lang/rust/blob/dc02b51382d5fea61d74624273d1d98263745243/src%2Ftest%2Fui%2Flint%2Funused_braces.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/dc02b51382d5fea61d74624273d1d98263745243/src%2Ftest%2Fui%2Flint%2Funused_braces.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Funused_braces.stderr?ref=dc02b51382d5fea61d74624273d1d98263745243", "patch": "@@ -2,43 +2,71 @@ warning: unnecessary parentheses around assigned value\n   --> $DIR/unused_braces.rs:10:13\n    |\n LL |     let _ = (7);\n-   |             ^^^ help: remove these parentheses\n+   |             ^ ^\n    |\n note: the lint level is defined here\n   --> $DIR/unused_braces.rs:4:24\n    |\n LL | #![warn(unused_braces, unused_parens)]\n    |                        ^^^^^^^^^^^^^\n+help: remove these parentheses\n+   |\n+LL -     let _ = (7);\n+LL +     let _ = 7;\n+   | \n \n warning: unnecessary braces around `if` condition\n   --> $DIR/unused_braces.rs:26:8\n    |\n LL |     if { true } {\n-   |        ^^^^^^^^ help: remove these braces\n+   |        ^^    ^^\n    |\n note: the lint level is defined here\n   --> $DIR/unused_braces.rs:4:9\n    |\n LL | #![warn(unused_braces, unused_parens)]\n    |         ^^^^^^^^^^^^^\n+help: remove these braces\n+   |\n+LL -     if { true } {\n+LL +     if true {\n+   | \n \n warning: unnecessary braces around `while` condition\n   --> $DIR/unused_braces.rs:30:11\n    |\n LL |     while { false } {\n-   |           ^^^^^^^^^ help: remove these braces\n+   |           ^^     ^^\n+   |\n+help: remove these braces\n+   |\n+LL -     while { false } {\n+LL +     while false {\n+   | \n \n warning: unnecessary braces around const expression\n   --> $DIR/unused_braces.rs:34:17\n    |\n LL |     let _: [u8; { 3 }];\n-   |                 ^^^^^ help: remove these braces\n+   |                 ^^ ^^\n+   |\n+help: remove these braces\n+   |\n+LL -     let _: [u8; { 3 }];\n+LL +     let _: [u8; 3];\n+   | \n \n warning: unnecessary braces around function argument\n   --> $DIR/unused_braces.rs:37:13\n    |\n LL |     consume({ 7 });\n-   |             ^^^^^ help: remove these braces\n+   |             ^^ ^^\n+   |\n+help: remove these braces\n+   |\n+LL -     consume({ 7 });\n+LL +     consume(7);\n+   | \n \n warning: 5 warnings emitted\n "}, {"sha": "5a5326cab3b1de5391d1d2c7f5eec0144337ba43", "filename": "src/test/ui/lint/unused_braces_borrow.stderr", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/dc02b51382d5fea61d74624273d1d98263745243/src%2Ftest%2Fui%2Flint%2Funused_braces_borrow.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/dc02b51382d5fea61d74624273d1d98263745243/src%2Ftest%2Fui%2Flint%2Funused_braces_borrow.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Funused_braces_borrow.stderr?ref=dc02b51382d5fea61d74624273d1d98263745243", "patch": "@@ -2,13 +2,18 @@ warning: unnecessary braces around function argument\n   --> $DIR/unused_braces_borrow.rs:24:13\n    |\n LL |     consume({ a.b });\n-   |             ^^^^^^^ help: remove these braces\n+   |             ^^   ^^\n    |\n note: the lint level is defined here\n   --> $DIR/unused_braces_borrow.rs:4:9\n    |\n LL | #![warn(unused_braces)]\n    |         ^^^^^^^^^^^^^\n+help: remove these braces\n+   |\n+LL -     consume({ a.b });\n+LL +     consume(a.b);\n+   | \n \n warning: 1 warning emitted\n "}, {"sha": "498c25d2e1c44ed4a2318ef21f6170e9861a2b0c", "filename": "src/test/ui/lint/unused_parens_json_suggestion.stderr", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/dc02b51382d5fea61d74624273d1d98263745243/src%2Ftest%2Fui%2Flint%2Funused_parens_json_suggestion.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/dc02b51382d5fea61d74624273d1d98263745243/src%2Ftest%2Fui%2Flint%2Funused_parens_json_suggestion.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Funused_parens_json_suggestion.stderr?ref=dc02b51382d5fea61d74624273d1d98263745243", "patch": "@@ -1,14 +1,19 @@\n-{\"message\":\"unnecessary parentheses around assigned value\",\"code\":{\"code\":\"unused_parens\",\"explanation\":null},\"level\":\"error\",\"spans\":[{\"file_name\":\"$DIR/unused_parens_json_suggestion.rs\",\"byte_start\":596,\"byte_end\":609,\"line_start\":16,\"line_end\":16,\"column_start\":14,\"column_end\":27,\"is_primary\":true,\"text\":[{\"text\":\"    let _a = (1 / (2 + 3));\n+{\"message\":\"unnecessary parentheses around assigned value\",\"code\":{\"code\":\"unused_parens\",\"explanation\":null},\"level\":\"error\",\"spans\":[{\"file_name\":\"$DIR/unused_parens_json_suggestion.rs\",\"byte_start\":596,\"byte_end\":597,\"line_start\":16,\"line_end\":16,\"column_start\":14,\"column_end\":15,\"is_primary\":true,\"text\":[{\"text\":\"    let _a = (1 / (2 + 3));\n   --> $DIR/unused_parens_json_suggestion.rs:16:14\n    |\n LL |     let _a = (1 / (2 + 3));\n-   |              ^^^^^^^^^^^^^ help: remove these parentheses\n+   |              ^           ^\n    |\n note: the lint level is defined here\n   --> $DIR/unused_parens_json_suggestion.rs:10:9\n    |\n LL | #![deny(unused_parens)]\n    |         ^^^^^^^^^^^^^\n+help: remove these parentheses\n+   |\n+LL -     let _a = (1 / (2 + 3));\n+LL +     let _a = 1 / (2 + 3);\n+   | \n \n \"}\n {\"message\":\"aborting due to previous error\",\"code\":null,\"level\":\"error\",\"spans\":[],\"children\":[],\"rendered\":\"error: aborting due to previous error"}, {"sha": "08291b10fcc204f284fe3347f193846bc10c1b51", "filename": "src/test/ui/lint/unused_parens_remove_json_suggestion.stderr", "status": "modified", "additions": 71, "deletions": 18, "changes": 89, "blob_url": "https://github.com/rust-lang/rust/blob/dc02b51382d5fea61d74624273d1d98263745243/src%2Ftest%2Fui%2Flint%2Funused_parens_remove_json_suggestion.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/dc02b51382d5fea61d74624273d1d98263745243/src%2Ftest%2Fui%2Flint%2Funused_parens_remove_json_suggestion.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Funused_parens_remove_json_suggestion.stderr?ref=dc02b51382d5fea61d74624273d1d98263745243", "patch": "@@ -1,70 +1,123 @@\n-{\"message\":\"unnecessary parentheses around `if` condition\",\"code\":{\"code\":\"unused_parens\",\"explanation\":null},\"level\":\"error\",\"spans\":[{\"file_name\":\"$DIR/unused_parens_remove_json_suggestion.rs\",\"byte_start\":500,\"byte_end\":504,\"line_start\":17,\"line_end\":17,\"column_start\":8,\"column_end\":12,\"is_primary\":true,\"text\":[{\"text\":\"    if (_b) {\n+{\"message\":\"unnecessary parentheses around `if` condition\",\"code\":{\"code\":\"unused_parens\",\"explanation\":null},\"level\":\"error\",\"spans\":[{\"file_name\":\"$DIR/unused_parens_remove_json_suggestion.rs\",\"byte_start\":500,\"byte_end\":501,\"line_start\":17,\"line_end\":17,\"column_start\":8,\"column_end\":9,\"is_primary\":true,\"text\":[{\"text\":\"    if (_b) {\n   --> $DIR/unused_parens_remove_json_suggestion.rs:17:8\n    |\n LL |     if (_b) {\n-   |        ^^^^ help: remove these parentheses\n+   |        ^  ^\n    |\n note: the lint level is defined here\n   --> $DIR/unused_parens_remove_json_suggestion.rs:10:9\n    |\n LL | #![deny(unused_parens)]\n    |         ^^^^^^^^^^^^^\n+help: remove these parentheses\n+   |\n+LL -     if (_b) {\n+LL +     if _b {\n+   | \n \n \"}\n-{\"message\":\"unnecessary parentheses around `if` condition\",\"code\":{\"code\":\"unused_parens\",\"explanation\":null},\"level\":\"error\",\"spans\":[{\"file_name\":\"$DIR/unused_parens_remove_json_suggestion.rs\",\"byte_start\":631,\"byte_end\":634,\"line_start\":28,\"line_end\":28,\"column_start\":7,\"column_end\":10,\"is_primary\":true,\"text\":[{\"text\":\"    if(c) {\n+{\"message\":\"unnecessary parentheses around `if` condition\",\"code\":{\"code\":\"unused_parens\",\"explanation\":null},\"level\":\"error\",\"spans\":[{\"file_name\":\"$DIR/unused_parens_remove_json_suggestion.rs\",\"byte_start\":631,\"byte_end\":632,\"line_start\":28,\"line_end\":28,\"column_start\":7,\"column_end\":8,\"is_primary\":true,\"text\":[{\"text\":\"    if(c) {\n   --> $DIR/unused_parens_remove_json_suggestion.rs:28:7\n    |\n LL |     if(c) {\n-   |       ^^^ help: remove these parentheses\n+   |       ^ ^\n+   |\n+help: remove these parentheses\n+   |\n+LL -     if(c) {\n+LL +     if c {\n+   | \n \n \"}\n-{\"message\":\"unnecessary parentheses around `if` condition\",\"code\":{\"code\":\"unused_parens\",\"explanation\":null},\"level\":\"error\",\"spans\":[{\"file_name\":\"$DIR/unused_parens_remove_json_suggestion.rs\",\"byte_start\":711,\"byte_end\":714,\"line_start\":32,\"line_end\":32,\"column_start\":8,\"column_end\":11,\"is_primary\":true,\"text\":[{\"text\":\"    if (c){\n+{\"message\":\"unnecessary parentheses around `if` condition\",\"code\":{\"code\":\"unused_parens\",\"explanation\":null},\"level\":\"error\",\"spans\":[{\"file_name\":\"$DIR/unused_parens_remove_json_suggestion.rs\",\"byte_start\":711,\"byte_end\":712,\"line_start\":32,\"line_end\":32,\"column_start\":8,\"column_end\":9,\"is_primary\":true,\"text\":[{\"text\":\"    if (c){\n   --> $DIR/unused_parens_remove_json_suggestion.rs:32:8\n    |\n LL |     if (c){\n-   |        ^^^ help: remove these parentheses\n+   |        ^ ^\n+   |\n+help: remove these parentheses\n+   |\n+LL -     if (c){\n+LL +     if c {\n+   | \n \n \"}\n-{\"message\":\"unnecessary parentheses around `while` condition\",\"code\":{\"code\":\"unused_parens\",\"explanation\":null},\"level\":\"error\",\"spans\":[{\"file_name\":\"$DIR/unused_parens_remove_json_suggestion.rs\",\"byte_start\":793,\"byte_end\":808,\"line_start\":36,\"line_end\":36,\"column_start\":11,\"column_end\":26,\"is_primary\":true,\"text\":[{\"text\":\"    while (false && true){\",\"highlight_start\":11,\"highlight_end\":26}],\"label\":null,\"suggested_replacement\":null,\"suggestion_applicability\":null,\"expansion\":null}],\"children\":[{\"message\":\"remove these parentheses\",\"code\":null,\"level\":\"help\",\"spans\":[{\"file_name\":\"$DIR/unused_parens_remove_json_suggestion.rs\",\"byte_start\":793,\"byte_end\":808,\"line_start\":36,\"line_end\":36,\"column_start\":11,\"column_end\":26,\"is_primary\":true,\"text\":[{\"text\":\"    while (false && true){\",\"highlight_start\":11,\"highlight_end\":26}],\"label\":null,\"suggested_replacement\":\"false && true \",\"suggestion_applicability\":\"MachineApplicable\",\"expansion\":null}],\"children\":[],\"rendered\":null}],\"rendered\":\"error: unnecessary parentheses around `while` condition\n+{\"message\":\"unnecessary parentheses around `while` condition\",\"code\":{\"code\":\"unused_parens\",\"explanation\":null},\"level\":\"error\",\"spans\":[{\"file_name\":\"$DIR/unused_parens_remove_json_suggestion.rs\",\"byte_start\":793,\"byte_end\":794,\"line_start\":36,\"line_end\":36,\"column_start\":11,\"column_end\":12,\"is_primary\":true,\"text\":[{\"text\":\"    while (false && true){\",\"highlight_start\":11,\"highlight_end\":12}],\"label\":null,\"suggested_replacement\":null,\"suggestion_applicability\":null,\"expansion\":null},{\"file_name\":\"$DIR/unused_parens_remove_json_suggestion.rs\",\"byte_start\":807,\"byte_end\":808,\"line_start\":36,\"line_end\":36,\"column_start\":25,\"column_end\":26,\"is_primary\":true,\"text\":[{\"text\":\"    while (false && true){\",\"highlight_start\":25,\"highlight_end\":26}],\"label\":null,\"suggested_replacement\":null,\"suggestion_applicability\":null,\"expansion\":null}],\"children\":[{\"message\":\"remove these parentheses\",\"code\":null,\"level\":\"help\",\"spans\":[{\"file_name\":\"$DIR/unused_parens_remove_json_suggestion.rs\",\"byte_start\":793,\"byte_end\":794,\"line_start\":36,\"line_end\":36,\"column_start\":11,\"column_end\":12,\"is_primary\":true,\"text\":[{\"text\":\"    while (false && true){\",\"highlight_start\":11,\"highlight_end\":12}],\"label\":null,\"suggested_replacement\":\"\",\"suggestion_applicability\":\"MachineApplicable\",\"expansion\":null},{\"file_name\":\"$DIR/unused_parens_remove_json_suggestion.rs\",\"byte_start\":807,\"byte_end\":808,\"line_start\":36,\"line_end\":36,\"column_start\":25,\"column_end\":26,\"is_primary\":true,\"text\":[{\"text\":\"    while (false && true){\",\"highlight_start\":25,\"highlight_end\":26}],\"label\":null,\"suggested_replacement\":\" \",\"suggestion_applicability\":\"MachineApplicable\",\"expansion\":null}],\"children\":[],\"rendered\":null}],\"rendered\":\"error: unnecessary parentheses around `while` condition\n   --> $DIR/unused_parens_remove_json_suggestion.rs:36:11\n    |\n LL |     while (false && true){\n-   |           ^^^^^^^^^^^^^^^ help: remove these parentheses\n+   |           ^             ^\n+   |\n+help: remove these parentheses\n+   |\n+LL -     while (false && true){\n+LL +     while false && true {\n+   | \n \n \"}\n-{\"message\":\"unnecessary parentheses around `if` condition\",\"code\":{\"code\":\"unused_parens\",\"explanation\":null},\"level\":\"error\",\"spans\":[{\"file_name\":\"$DIR/unused_parens_remove_json_suggestion.rs\",\"byte_start\":821,\"byte_end\":824,\"line_start\":37,\"line_end\":37,\"column_start\":12,\"column_end\":15,\"is_primary\":true,\"text\":[{\"text\":\"        if (c) {\n+{\"message\":\"unnecessary parentheses around `if` condition\",\"code\":{\"code\":\"unused_parens\",\"explanation\":null},\"level\":\"error\",\"spans\":[{\"file_name\":\"$DIR/unused_parens_remove_json_suggestion.rs\",\"byte_start\":821,\"byte_end\":822,\"line_start\":37,\"line_end\":37,\"column_start\":12,\"column_end\":13,\"is_primary\":true,\"text\":[{\"text\":\"        if (c) {\n   --> $DIR/unused_parens_remove_json_suggestion.rs:37:12\n    |\n LL |         if (c) {\n-   |            ^^^ help: remove these parentheses\n+   |            ^ ^\n+   |\n+help: remove these parentheses\n+   |\n+LL -         if (c) {\n+LL +         if c {\n+   | \n \n \"}\n-{\"message\":\"unnecessary parentheses around `while` condition\",\"code\":{\"code\":\"unused_parens\",\"explanation\":null},\"level\":\"error\",\"spans\":[{\"file_name\":\"$DIR/unused_parens_remove_json_suggestion.rs\",\"byte_start\":918,\"byte_end\":933,\"line_start\":43,\"line_end\":43,\"column_start\":10,\"column_end\":25,\"is_primary\":true,\"text\":[{\"text\":\"    while(true && false) {\n+{\"message\":\"unnecessary parentheses around `while` condition\",\"code\":{\"code\":\"unused_parens\",\"explanation\":null},\"level\":\"error\",\"spans\":[{\"file_name\":\"$DIR/unused_parens_remove_json_suggestion.rs\",\"byte_start\":918,\"byte_end\":919,\"line_start\":43,\"line_end\":43,\"column_start\":10,\"column_end\":11,\"is_primary\":true,\"text\":[{\"text\":\"    while(true && false) {\n   --> $DIR/unused_parens_remove_json_suggestion.rs:43:10\n    |\n LL |     while(true && false) {\n-   |          ^^^^^^^^^^^^^^^ help: remove these parentheses\n+   |          ^             ^\n+   |\n+help: remove these parentheses\n+   |\n+LL -     while(true && false) {\n+LL +     while true && false {\n+   | \n \n \"}\n-{\"message\":\"unnecessary parentheses around `for` iterator expression\",\"code\":{\"code\":\"unused_parens\",\"explanation\":null},\"level\":\"error\",\"spans\":[{\"file_name\":\"$DIR/unused_parens_remove_json_suggestion.rs\",\"byte_start\":987,\"byte_end\":995,\"line_start\":44,\"line_end\":44,\"column_start\":18,\"column_end\":26,\"is_primary\":true,\"text\":[{\"text\":\"        for _ in (0 .. 3){\n+{\"message\":\"unnecessary parentheses around `for` iterator expression\",\"code\":{\"code\":\"unused_parens\",\"explanation\":null},\"level\":\"error\",\"spans\":[{\"file_name\":\"$DIR/unused_parens_remove_json_suggestion.rs\",\"byte_start\":987,\"byte_end\":988,\"line_start\":44,\"line_end\":44,\"column_start\":18,\"column_end\":19,\"is_primary\":true,\"text\":[{\"text\":\"        for _ in (0 .. 3){\n   --> $DIR/unused_parens_remove_json_suggestion.rs:44:18\n    |\n LL |         for _ in (0 .. 3){\n-   |                  ^^^^^^^^ help: remove these parentheses\n+   |                  ^      ^\n+   |\n+help: remove these parentheses\n+   |\n+LL -         for _ in (0 .. 3){\n+LL +         for _ in 0 .. 3 {\n+   | \n \n \"}\n-{\"message\":\"unnecessary parentheses around `for` iterator expression\",\"code\":{\"code\":\"unused_parens\",\"explanation\":null},\"level\":\"error\",\"spans\":[{\"file_name\":\"$DIR/unused_parens_remove_json_suggestion.rs\",\"byte_start\":1088,\"byte_end\":1096,\"line_start\":49,\"line_end\":49,\"column_start\":14,\"column_end\":22,\"is_primary\":true,\"text\":[{\"text\":\"    for _ in (0 .. 3) {\n+{\"message\":\"unnecessary parentheses around `for` iterator expression\",\"code\":{\"code\":\"unused_parens\",\"explanation\":null},\"level\":\"error\",\"spans\":[{\"file_name\":\"$DIR/unused_parens_remove_json_suggestion.rs\",\"byte_start\":1088,\"byte_end\":1089,\"line_start\":49,\"line_end\":49,\"column_start\":14,\"column_end\":15,\"is_primary\":true,\"text\":[{\"text\":\"    for _ in (0 .. 3) {\n   --> $DIR/unused_parens_remove_json_suggestion.rs:49:14\n    |\n LL |     for _ in (0 .. 3) {\n-   |              ^^^^^^^^ help: remove these parentheses\n+   |              ^      ^\n+   |\n+help: remove these parentheses\n+   |\n+LL -     for _ in (0 .. 3) {\n+LL +     for _ in 0 .. 3 {\n+   | \n \n \"}\n-{\"message\":\"unnecessary parentheses around `while` condition\",\"code\":{\"code\":\"unused_parens\",\"explanation\":null},\"level\":\"error\",\"spans\":[{\"file_name\":\"$DIR/unused_parens_remove_json_suggestion.rs\",\"byte_start\":1147,\"byte_end\":1162,\"line_start\":50,\"line_end\":50,\"column_start\":15,\"column_end\":30,\"is_primary\":true,\"text\":[{\"text\":\"        while (true && false) {\n+{\"message\":\"unnecessary parentheses around `while` condition\",\"code\":{\"code\":\"unused_parens\",\"explanation\":null},\"level\":\"error\",\"spans\":[{\"file_name\":\"$DIR/unused_parens_remove_json_suggestion.rs\",\"byte_start\":1147,\"byte_end\":1148,\"line_start\":50,\"line_end\":50,\"column_start\":15,\"column_end\":16,\"is_primary\":true,\"text\":[{\"text\":\"        while (true && false) {\n   --> $DIR/unused_parens_remove_json_suggestion.rs:50:15\n    |\n LL |         while (true && false) {\n-   |               ^^^^^^^^^^^^^^^ help: remove these parentheses\n+   |               ^             ^\n+   |\n+help: remove these parentheses\n+   |\n+LL -         while (true && false) {\n+LL +         while true && false {\n+   | \n \n \"}\n {\"message\":\"aborting due to 9 previous errors\",\"code\":null,\"level\":\"error\",\"spans\":[],\"children\":[],\"rendered\":\"error: aborting due to 9 previous errors"}, {"sha": "8adf02b150b874cf2577068fae6e0c9bd5502327", "filename": "src/test/ui/path-lookahead.stderr", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/dc02b51382d5fea61d74624273d1d98263745243/src%2Ftest%2Fui%2Fpath-lookahead.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/dc02b51382d5fea61d74624273d1d98263745243/src%2Ftest%2Fui%2Fpath-lookahead.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fpath-lookahead.stderr?ref=dc02b51382d5fea61d74624273d1d98263745243", "patch": "@@ -2,13 +2,18 @@ warning: unnecessary parentheses around `return` value\n   --> $DIR/path-lookahead.rs:10:12\n    |\n LL |     return (<T as ToString>::to_string(&arg));\n-   |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: remove these parentheses\n+   |            ^                                ^\n    |\n note: the lint level is defined here\n   --> $DIR/path-lookahead.rs:5:9\n    |\n LL | #![warn(unused_parens)]\n    |         ^^^^^^^^^^^^^\n+help: remove these parentheses\n+   |\n+LL -     return (<T as ToString>::to_string(&arg));\n+LL +     return <T as ToString>::to_string(&arg);\n+   | \n \n warning: 1 warning emitted\n "}, {"sha": "d8dd31645e06162f37987f06b87d04fc2a3a4773", "filename": "src/test/ui/try-block/try-block-unused-delims.stderr", "status": "modified", "additions": 33, "deletions": 5, "changes": 38, "blob_url": "https://github.com/rust-lang/rust/blob/dc02b51382d5fea61d74624273d1d98263745243/src%2Ftest%2Fui%2Ftry-block%2Ftry-block-unused-delims.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/dc02b51382d5fea61d74624273d1d98263745243/src%2Ftest%2Fui%2Ftry-block%2Ftry-block-unused-delims.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftry-block%2Ftry-block-unused-delims.stderr?ref=dc02b51382d5fea61d74624273d1d98263745243", "patch": "@@ -2,43 +2,71 @@ warning: unnecessary parentheses around function argument\n   --> $DIR/try-block-unused-delims.rs:11:13\n    |\n LL |     consume((try {}));\n-   |             ^^^^^^^^ help: remove these parentheses\n+   |             ^      ^\n    |\n note: the lint level is defined here\n   --> $DIR/try-block-unused-delims.rs:6:9\n    |\n LL | #![warn(unused_parens, unused_braces)]\n    |         ^^^^^^^^^^^^^\n+help: remove these parentheses\n+   |\n+LL -     consume((try {}));\n+LL +     consume(try {});\n+   | \n \n warning: unnecessary braces around function argument\n   --> $DIR/try-block-unused-delims.rs:14:13\n    |\n LL |     consume({ try {} });\n-   |             ^^^^^^^^^^ help: remove these braces\n+   |             ^^      ^^\n    |\n note: the lint level is defined here\n   --> $DIR/try-block-unused-delims.rs:6:24\n    |\n LL | #![warn(unused_parens, unused_braces)]\n    |                        ^^^^^^^^^^^^^\n+help: remove these braces\n+   |\n+LL -     consume({ try {} });\n+LL +     consume(try {});\n+   | \n \n warning: unnecessary parentheses around `match` scrutinee expression\n   --> $DIR/try-block-unused-delims.rs:17:11\n    |\n LL |     match (try {}) {\n-   |           ^^^^^^^^ help: remove these parentheses\n+   |           ^      ^\n+   |\n+help: remove these parentheses\n+   |\n+LL -     match (try {}) {\n+LL +     match try {} {\n+   | \n \n warning: unnecessary parentheses around `let` scrutinee expression\n   --> $DIR/try-block-unused-delims.rs:22:22\n    |\n LL |     if let Err(()) = (try {}) {}\n-   |                      ^^^^^^^^ help: remove these parentheses\n+   |                      ^      ^\n+   |\n+help: remove these parentheses\n+   |\n+LL -     if let Err(()) = (try {}) {}\n+LL +     if let Err(()) = try {} {}\n+   | \n \n warning: unnecessary parentheses around `match` scrutinee expression\n   --> $DIR/try-block-unused-delims.rs:25:11\n    |\n LL |     match (try {}) {\n-   |           ^^^^^^^^ help: remove these parentheses\n+   |           ^      ^\n+   |\n+help: remove these parentheses\n+   |\n+LL -     match (try {}) {\n+LL +     match try {} {\n+   | \n \n warning: 5 warnings emitted\n "}]}