{"sha": "19260b043b84dd44e2be26a66771ad621dbf1a59", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE5MjYwYjA0M2I4NGRkNDRlMmJlMjZhNjY3NzFhZDYyMWRiZjFhNTk=", "commit": {"author": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2014-06-18T08:04:35Z"}, "committer": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2014-06-18T08:07:02Z"}, "message": "rustdoc: Fix testing indented code blocks\n\nThe collapse/unindent passes were run in the wrong order, generating different\nmarkdown for indented tests.", "tree": {"sha": "c94f1f83c11a97dfe874e50f63124f51b1ebc08d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c94f1f83c11a97dfe874e50f63124f51b1ebc08d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/19260b043b84dd44e2be26a66771ad621dbf1a59", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/19260b043b84dd44e2be26a66771ad621dbf1a59", "html_url": "https://github.com/rust-lang/rust/commit/19260b043b84dd44e2be26a66771ad621dbf1a59", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/19260b043b84dd44e2be26a66771ad621dbf1a59/comments", "author": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "410d70b5af30a4e5d566b981c9bf1b10b12b796b", "url": "https://api.github.com/repos/rust-lang/rust/commits/410d70b5af30a4e5d566b981c9bf1b10b12b796b", "html_url": "https://github.com/rust-lang/rust/commit/410d70b5af30a4e5d566b981c9bf1b10b12b796b"}], "stats": {"total": 16, "additions": 11, "deletions": 5}, "files": [{"sha": "fa7a8df5035f4b45be500a28450243e0e0d832e9", "filename": "src/liballoc/owned.rs", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/19260b043b84dd44e2be26a66771ad621dbf1a59/src%2Fliballoc%2Fowned.rs", "raw_url": "https://github.com/rust-lang/rust/raw/19260b043b84dd44e2be26a66771ad621dbf1a59/src%2Fliballoc%2Fowned.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Fowned.rs?ref=19260b043b84dd44e2be26a66771ad621dbf1a59", "patch": "@@ -25,8 +25,12 @@ use core::result::{Ok, Err, Result};\n ///\n /// The following two examples are equivalent:\n ///\n-///     let foo = box(HEAP) Bar::new(...);\n-///     let foo = box Bar::new(...);\n+///     use std::owned::HEAP;\n+///\n+///     # struct Bar;\n+///     # impl Bar { fn new(_a: int) { } }\n+///     let foo = box(HEAP) Bar::new(2);\n+///     let foo = box Bar::new(2);\n #[lang=\"exchange_heap\"]\n pub static HEAP: () = ();\n "}, {"sha": "c64bd6201faf356fcb15b043bab6c0d3d00d5df7", "filename": "src/libcore/failure.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/19260b043b84dd44e2be26a66771ad621dbf1a59/src%2Flibcore%2Ffailure.rs", "raw_url": "https://github.com/rust-lang/rust/raw/19260b043b84dd44e2be26a66771ad621dbf1a59/src%2Flibcore%2Ffailure.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Ffailure.rs?ref=19260b043b84dd44e2be26a66771ad621dbf1a59", "patch": "@@ -15,7 +15,9 @@\n //! useful an upstream crate must define failure for libcore to use. The current\n //! interface for failure is:\n //!\n-//!     fn begin_unwind(fmt: &fmt::Arguments, file: &str, line: uint) -> !;\n+//! ```ignore\n+//! fn begin_unwind(fmt: &fmt::Arguments, file: &str, line: uint) -> !;\n+//! ```\n //!\n //! This definition allows for failing with any general message, but it does not\n //! allow for failing with a `~Any` value. The reason for this is that libcore"}, {"sha": "1a24c0863a1860e283353b9b5236a60642525d80", "filename": "src/librustdoc/test.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/19260b043b84dd44e2be26a66771ad621dbf1a59/src%2Flibrustdoc%2Ftest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/19260b043b84dd44e2be26a66771ad621dbf1a59/src%2Flibrustdoc%2Ftest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Ftest.rs?ref=19260b043b84dd44e2be26a66771ad621dbf1a59", "patch": "@@ -86,8 +86,8 @@ pub fn run(input: &str,\n     let mut v = RustdocVisitor::new(&*ctx, None);\n     v.visit(&ctx.krate);\n     let krate = v.clean();\n-    let (krate, _) = passes::unindent_comments(krate);\n     let (krate, _) = passes::collapse_docs(krate);\n+    let (krate, _) = passes::unindent_comments(krate);\n \n     let mut collector = Collector::new(krate.name.to_string(),\n                                        libs,"}, {"sha": "f0184dc8164172077537c7d621f4eb5436ba521a", "filename": "src/libsync/deque.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/19260b043b84dd44e2be26a66771ad621dbf1a59/src%2Flibsync%2Fdeque.rs", "raw_url": "https://github.com/rust-lang/rust/raw/19260b043b84dd44e2be26a66771ad621dbf1a59/src%2Flibsync%2Fdeque.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsync%2Fdeque.rs?ref=19260b043b84dd44e2be26a66771ad621dbf1a59", "patch": "@@ -24,7 +24,7 @@\n //!\n //! # Example\n //!\n-//!     use std::rt::deque::BufferPool;\n+//!     use std::sync::deque::BufferPool;\n //!\n //!     let mut pool = BufferPool::new();\n //!     let (mut worker, mut stealer) = pool.deque();"}]}