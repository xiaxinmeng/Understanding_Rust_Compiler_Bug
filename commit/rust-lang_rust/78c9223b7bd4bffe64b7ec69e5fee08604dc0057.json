{"sha": "78c9223b7bd4bffe64b7ec69e5fee08604dc0057", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc4YzkyMjNiN2JkNGJmZmU2NGI3ZWM2OWU1ZmVlMDg2MDRkYzAwNTc=", "commit": {"author": {"name": "vsrs", "email": "vit@conrlab.com", "date": "2020-06-05T12:25:01Z"}, "committer": {"name": "vsrs", "email": "vit@conrlab.com", "date": "2020-06-05T12:25:01Z"}, "message": "Remove hover contents marking as trusted.\n\nHover contents might be extracted from raw\ndoc comments and need some validation.", "tree": {"sha": "ab1770311871a80703fadb50f4fa05a09512e235", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ab1770311871a80703fadb50f4fa05a09512e235"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/78c9223b7bd4bffe64b7ec69e5fee08604dc0057", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/78c9223b7bd4bffe64b7ec69e5fee08604dc0057", "html_url": "https://github.com/rust-lang/rust/commit/78c9223b7bd4bffe64b7ec69e5fee08604dc0057", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/78c9223b7bd4bffe64b7ec69e5fee08604dc0057/comments", "author": {"login": "vsrs", "id": 62505555, "node_id": "MDQ6VXNlcjYyNTA1NTU1", "avatar_url": "https://avatars.githubusercontent.com/u/62505555?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vsrs", "html_url": "https://github.com/vsrs", "followers_url": "https://api.github.com/users/vsrs/followers", "following_url": "https://api.github.com/users/vsrs/following{/other_user}", "gists_url": "https://api.github.com/users/vsrs/gists{/gist_id}", "starred_url": "https://api.github.com/users/vsrs/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vsrs/subscriptions", "organizations_url": "https://api.github.com/users/vsrs/orgs", "repos_url": "https://api.github.com/users/vsrs/repos", "events_url": "https://api.github.com/users/vsrs/events{/privacy}", "received_events_url": "https://api.github.com/users/vsrs/received_events", "type": "User", "site_admin": false}, "committer": {"login": "vsrs", "id": 62505555, "node_id": "MDQ6VXNlcjYyNTA1NTU1", "avatar_url": "https://avatars.githubusercontent.com/u/62505555?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vsrs", "html_url": "https://github.com/vsrs", "followers_url": "https://api.github.com/users/vsrs/followers", "following_url": "https://api.github.com/users/vsrs/following{/other_user}", "gists_url": "https://api.github.com/users/vsrs/gists{/gist_id}", "starred_url": "https://api.github.com/users/vsrs/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vsrs/subscriptions", "organizations_url": "https://api.github.com/users/vsrs/orgs", "repos_url": "https://api.github.com/users/vsrs/repos", "events_url": "https://api.github.com/users/vsrs/events{/privacy}", "received_events_url": "https://api.github.com/users/vsrs/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0fe43a124bb2b135cfd1268fda2941c3ac170c96", "url": "https://api.github.com/repos/rust-lang/rust/commits/0fe43a124bb2b135cfd1268fda2941c3ac170c96", "html_url": "https://github.com/rust-lang/rust/commit/0fe43a124bb2b135cfd1268fda2941c3ac170c96"}], "stats": {"total": 19, "additions": 3, "deletions": 16}, "files": [{"sha": "8d6efdbe8cf970775f15a7f241c5af720e0b3381", "filename": "crates/rust-analyzer/src/config.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/78c9223b7bd4bffe64b7ec69e5fee08604dc0057/crates%2Frust-analyzer%2Fsrc%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/78c9223b7bd4bffe64b7ec69e5fee08604dc0057/crates%2Frust-analyzer%2Fsrc%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fconfig.rs?ref=78c9223b7bd4bffe64b7ec69e5fee08604dc0057", "patch": "@@ -349,7 +349,7 @@ impl Config {\n             self.assist.allow_snippets(snippet_text_edit);\n \n             self.client_caps.code_action_group = get_bool(\"codeActionGroup\");\n-\t\t\tself.client_caps.resolve_code_action = get_bool(\"resolveCodeAction\");\n+            self.client_caps.resolve_code_action = get_bool(\"resolveCodeAction\");\n             self.client_caps.hover_actions = get_bool(\"hoverActions\");\n         }\n     }"}, {"sha": "65ad573d8c919ec4e1577a72d60e2150cca94524", "filename": "editors/code/src/client.ts", "status": "modified", "additions": 2, "deletions": 15, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/78c9223b7bd4bffe64b7ec69e5fee08604dc0057/editors%2Fcode%2Fsrc%2Fclient.ts", "raw_url": "https://github.com/rust-lang/rust/raw/78c9223b7bd4bffe64b7ec69e5fee08604dc0057/editors%2Fcode%2Fsrc%2Fclient.ts", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fsrc%2Fclient.ts?ref=78c9223b7bd4bffe64b7ec69e5fee08604dc0057", "patch": "@@ -7,20 +7,11 @@ import { CallHierarchyFeature } from 'vscode-languageclient/lib/callHierarchy.pr\n import { SemanticTokensFeature, DocumentSemanticsTokensSignature } from 'vscode-languageclient/lib/semanticTokens.proposed';\n import { assert } from './util';\n \n-function toTrusted(obj: vscode.MarkedString): vscode.MarkedString {\n-    const md = <vscode.MarkdownString>obj;\n-    if (md && md.value.includes(\"```rust\")) {\n-        md.isTrusted = true;\n-        return md;\n-    }\n-    return obj;\n-}\n-\n-function renderCommand(cmd: CommandLink) {\n+function renderCommand(cmd: ra.CommandLink) {\n     return `[${cmd.title}](command:${cmd.command}?${encodeURIComponent(JSON.stringify(cmd.arguments))} '${cmd.tooltip!}')`;\n }\n \n-function renderHoverActions(actions: CommandLinkGroup[]): vscode.MarkdownString {\n+function renderHoverActions(actions: ra.CommandLinkGroup[]): vscode.MarkdownString {\n     const text = actions.map(group =>\n         (group.title ? (group.title + \" \") : \"\") + group.commands.map(renderCommand).join(' | ')\n     ).join('___');\n@@ -63,10 +54,6 @@ export function createClient(serverPath: string, cwd: string): lc.LanguageClient\n                     (result) => {\n                         const hover = client.protocol2CodeConverter.asHover(result);\n                         if (hover) {\n-                            // Workaround to support command links (trusted vscode.MarkdownString) in hovers\n-                            // https://github.com/microsoft/vscode/issues/33577\n-                            hover.contents = hover.contents.map(toTrusted);\n-\n                             const actions = (<any>result).actions;\n                             if (actions) {\n                                 hover.contents.push(renderHoverActions(actions));"}]}