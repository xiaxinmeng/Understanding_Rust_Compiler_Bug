{"sha": "c38d5df4a2a65ed11fefaf792b6535451c2fd767", "node_id": "MDY6Q29tbWl0NzI0NzEyOmMzOGQ1ZGY0YTJhNjVlZDExZmVmYWY3OTJiNjUzNTQ1MWMyZmQ3Njc=", "commit": {"author": {"name": "Jonathan Turner", "email": "jturner@mozilla.com", "date": "2016-07-14T14:36:23Z"}, "committer": {"name": "Jonathan Turner", "email": "jturner@mozilla.com", "date": "2016-07-14T14:36:23Z"}, "message": "Remove unused imports", "tree": {"sha": "d50b595ae6985266760e7047d2c722329d0df42a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d50b595ae6985266760e7047d2c722329d0df42a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c38d5df4a2a65ed11fefaf792b6535451c2fd767", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c38d5df4a2a65ed11fefaf792b6535451c2fd767", "html_url": "https://github.com/rust-lang/rust/commit/c38d5df4a2a65ed11fefaf792b6535451c2fd767", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c38d5df4a2a65ed11fefaf792b6535451c2fd767/comments", "author": null, "committer": null, "parents": [{"sha": "a9dfac8725bb8a550318034a577c9b273545fd27", "url": "https://api.github.com/repos/rust-lang/rust/commits/a9dfac8725bb8a550318034a577c9b273545fd27", "html_url": "https://github.com/rust-lang/rust/commit/a9dfac8725bb8a550318034a577c9b273545fd27"}], "stats": {"total": 19, "additions": 0, "deletions": 19}, "files": [{"sha": "42bb804cff2b9abc91e12af33d2b05114ca90062", "filename": "src/libsyntax/codemap.rs", "status": "modified", "additions": 0, "deletions": 19, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/c38d5df4a2a65ed11fefaf792b6535451c2fd767/src%2Flibsyntax%2Fcodemap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c38d5df4a2a65ed11fefaf792b6535451c2fd767/src%2Flibsyntax%2Fcodemap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fcodemap.rs?ref=c38d5df4a2a65ed11fefaf792b6535451c2fd767", "patch": "@@ -827,7 +827,6 @@ impl CodeMapper for CodeMap {\n #[cfg(test)]\n mod tests {\n     use super::*;\n-    use std::io::{self, Write};\n     use errors::snippet::StyledString;\n     use std::rc::Rc;\n \n@@ -1118,24 +1117,6 @@ mod tests {\n         }\n     }\n \n-    fn splice(start: Span, end: Span) -> Span {\n-        Span {\n-            lo: start.lo,\n-            hi: end.hi,\n-            expn_id: NO_EXPANSION,\n-        }\n-    }\n-\n-    fn make_string(lines: Vec<Vec<StyledString>>) -> String {\n-        lines.iter()\n-            .flat_map(|rl| {\n-                rl.iter()\n-                    .map(|s| &s.text[..])\n-                    .chain(Some(\"\\n\"))\n-            })\n-            .collect()\n-    }\n-\n     fn init_expansion_chain(cm: &CodeMap) -> Span {\n         // Creates an expansion chain containing two recursive calls\n         // root -> expA -> expA -> expB -> expB -> end"}]}