{"sha": "cbae9ed8731d7ad8a167e1a779a881812bf14197", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNiYWU5ZWQ4NzMxZDdhZDhhMTY3ZTFhNzc5YTg4MTgxMmJmMTQxOTc=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2019-05-19T20:44:19Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2019-05-19T20:44:19Z"}, "message": "Auto merge of #4115 - ehuss:fix-compiletest, r=Manishearth\n\nFix compile-test from forcing a rebuild.\n\nIf the `compile-test` test was run, then running a cargo build command immediately after caused everything to be rebuilt. This is because the `compile-test` test was deleting all `.rmeta` files in the target directory. Cargo recently switched to always generating `.rmeta` files (https://github.com/rust-lang/cargo/pull/6883), and when the files are deleted, it thinks it needs to be rebuilt.\n\nI am not very familiar with compiletest or clippy, so please take a close look and test this out (with the most recent nightly). In particular, make sure it doesn't revert the fixes from #3380 (it seems to work for me). Also @oli-obk mentioned something related in https://github.com/rust-lang/rust/pull/60190#issuecomment-493617188, and I want to make sure that is addressed as well.\n\nFixes #4114", "tree": {"sha": "0d26022b3b4da0bfefc87e54ad75268b37bd38cc", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0d26022b3b4da0bfefc87e54ad75268b37bd38cc"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/cbae9ed8731d7ad8a167e1a779a881812bf14197", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/cbae9ed8731d7ad8a167e1a779a881812bf14197", "html_url": "https://github.com/rust-lang/rust/commit/cbae9ed8731d7ad8a167e1a779a881812bf14197", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/cbae9ed8731d7ad8a167e1a779a881812bf14197/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0331b957184ed915b94a046af3968e6bbb5a99e0", "url": "https://api.github.com/repos/rust-lang/rust/commits/0331b957184ed915b94a046af3968e6bbb5a99e0", "html_url": "https://github.com/rust-lang/rust/commit/0331b957184ed915b94a046af3968e6bbb5a99e0"}, {"sha": "a8bf5012392af719f8d478fbefd355eaf5a27d05", "url": "https://api.github.com/repos/rust-lang/rust/commits/a8bf5012392af719f8d478fbefd355eaf5a27d05", "html_url": "https://github.com/rust-lang/rust/commit/a8bf5012392af719f8d478fbefd355eaf5a27d05"}], "stats": {"total": 6, "additions": 2, "deletions": 4}, "files": [{"sha": "e0b1ebf4b8b8f2f22eb727ee5c93821b267566ae", "filename": "tests/compile-test.rs", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/cbae9ed8731d7ad8a167e1a779a881812bf14197/tests%2Fcompile-test.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cbae9ed8731d7ad8a167e1a779a881812bf14197/tests%2Fcompile-test.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompile-test.rs?ref=cbae9ed8731d7ad8a167e1a779a881812bf14197", "patch": "@@ -52,7 +52,7 @@ fn config(mode: &str, dir: PathBuf) -> compiletest::Config {\n     // as we'll get a duplicate matching versions. Instead, disambiguate with\n     // `--extern dep=path`.\n     // See https://github.com/rust-lang/rust-clippy/issues/4015.\n-    let needs_disambiguation = [\"serde\"];\n+    let needs_disambiguation = [\"serde\", \"regex\", \"clippy_lints\"];\n     // This assumes that deps are compiled (they are for Cargo integration tests).\n     let deps = std::fs::read_dir(host_libs().join(\"deps\")).unwrap();\n     let disambiguated = deps\n@@ -62,7 +62,7 @@ fn config(mode: &str, dir: PathBuf) -> compiletest::Config {\n             // NOTE: This only handles a single dep\n             // https://github.com/laumann/compiletest-rs/issues/101\n             needs_disambiguation.iter().find_map(|dep| {\n-                if name.starts_with(&format!(\"lib{}-\", dep)) {\n+                if name.starts_with(&format!(\"lib{}-\", dep)) && name.ends_with(\".rlib\") {\n                     Some(format!(\"--extern {}={}\", dep, path.display()))\n                 } else {\n                     None\n@@ -95,8 +95,6 @@ fn config(mode: &str, dir: PathBuf) -> compiletest::Config {\n \n fn run_mode(mode: &str, dir: PathBuf) {\n     let cfg = config(mode, dir);\n-    // clean rmeta data, otherwise \"cargo check; cargo test\" fails (#2896)\n-    cfg.clean_rmeta();\n     compiletest::run_tests(&cfg);\n }\n "}]}