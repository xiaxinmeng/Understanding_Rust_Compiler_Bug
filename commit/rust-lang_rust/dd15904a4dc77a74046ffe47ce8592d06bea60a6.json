{"sha": "dd15904a4dc77a74046ffe47ce8592d06bea60a6", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRkMTU5MDRhNGRjNzdhNzQwNDZmZmU0N2NlODU5MmQwNmJlYTYwYTY=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-12-03T09:30:40Z"}, "committer": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-12-20T21:41:29Z"}, "message": "parse_bottom_expr: use else if", "tree": {"sha": "3930a0b175cdaf0b09018f3085ca5c4efe20272c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3930a0b175cdaf0b09018f3085ca5c4efe20272c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/dd15904a4dc77a74046ffe47ce8592d06bea60a6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/dd15904a4dc77a74046ffe47ce8592d06bea60a6", "html_url": "https://github.com/rust-lang/rust/commit/dd15904a4dc77a74046ffe47ce8592d06bea60a6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/dd15904a4dc77a74046ffe47ce8592d06bea60a6/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "52acaa69743be657f7d3003ca2a2abf7f1cd7a2e", "url": "https://api.github.com/repos/rust-lang/rust/commits/52acaa69743be657f7d3003ca2a2abf7f1cd7a2e", "html_url": "https://github.com/rust-lang/rust/commit/52acaa69743be657f7d3003ca2a2abf7f1cd7a2e"}], "stats": {"total": 27, "additions": 13, "deletions": 14}, "files": [{"sha": "7af9b7267a87f92ef6947ce0f1e9f1b3202162b4", "filename": "src/librustc_parse/parser/expr.rs", "status": "modified", "additions": 13, "deletions": 14, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/dd15904a4dc77a74046ffe47ce8592d06bea60a6/src%2Flibrustc_parse%2Fparser%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dd15904a4dc77a74046ffe47ce8592d06bea60a6/src%2Flibrustc_parse%2Fparser%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_parse%2Fparser%2Fexpr.rs?ref=dd15904a4dc77a74046ffe47ce8592d06bea60a6", "patch": "@@ -1093,21 +1093,20 @@ impl<'a> Parser<'a> {\n                     let (await_hi, e_kind) = self.parse_incorrect_await_syntax(lo, self.prev_span)?;\n                     hi = await_hi;\n                     ex = e_kind;\n+                } else if !self.unclosed_delims.is_empty() && self.check(&token::Semi) {\n+                    // Don't complain about bare semicolons after unclosed braces\n+                    // recovery in order to keep the error count down. Fixing the\n+                    // delimiters will possibly also fix the bare semicolon found in\n+                    // expression context. For example, silence the following error:\n+                    //\n+                    //     error: expected expression, found `;`\n+                    //      --> file.rs:2:13\n+                    //       |\n+                    //     2 |     foo(bar(;\n+                    //       |             ^ expected expression\n+                    self.bump();\n+                    return Ok(self.mk_expr(self.token.span, ExprKind::Err, ThinVec::new()));\n                 } else {\n-                    if !self.unclosed_delims.is_empty() && self.check(&token::Semi) {\n-                        // Don't complain about bare semicolons after unclosed braces\n-                        // recovery in order to keep the error count down. Fixing the\n-                        // delimiters will possibly also fix the bare semicolon found in\n-                        // expression context. For example, silence the following error:\n-                        //\n-                        //     error: expected expression, found `;`\n-                        //      --> file.rs:2:13\n-                        //       |\n-                        //     2 |     foo(bar(;\n-                        //       |             ^ expected expression\n-                        self.bump();\n-                        return Ok(self.mk_expr(self.token.span, ExprKind::Err, ThinVec::new()));\n-                    }\n                     parse_lit!()\n                 }\n             }"}]}