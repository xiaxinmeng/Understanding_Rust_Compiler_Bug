{"sha": "60e8af59a04a234984badea39c288968e466dea0", "node_id": "MDY6Q29tbWl0NzI0NzEyOjYwZThhZjU5YTA0YTIzNDk4NGJhZGVhMzljMjg4OTY4ZTQ2NmRlYTA=", "commit": {"author": {"name": "Kevin Choubacha", "email": "kchoubacha@weedmaps.com", "date": "2017-12-02T23:23:07Z"}, "committer": {"name": "Kevin Choubacha", "email": "kchoubacha@weedmaps.com", "date": "2017-12-02T23:23:07Z"}, "message": "Combine 3 repeated sections into a single section", "tree": {"sha": "00495bdd9fd10b6fcd9d5bd49a118f6ba8b3574c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/00495bdd9fd10b6fcd9d5bd49a118f6ba8b3574c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/60e8af59a04a234984badea39c288968e466dea0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/60e8af59a04a234984badea39c288968e466dea0", "html_url": "https://github.com/rust-lang/rust/commit/60e8af59a04a234984badea39c288968e466dea0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/60e8af59a04a234984badea39c288968e466dea0/comments", "author": null, "committer": null, "parents": [{"sha": "483f71c8b1dceb684af7c9006d39e8fd56c41c80", "url": "https://api.github.com/repos/rust-lang/rust/commits/483f71c8b1dceb684af7c9006d39e8fd56c41c80", "html_url": "https://github.com/rust-lang/rust/commit/483f71c8b1dceb684af7c9006d39e8fd56c41c80"}], "stats": {"total": 56, "additions": 13, "deletions": 43}, "files": [{"sha": "42bd66da3539bbb08d7297c1801951c8b88fa3b4", "filename": "Configurations.md", "status": "modified", "additions": 13, "deletions": 43, "changes": 56, "blob_url": "https://github.com/rust-lang/rust/blob/60e8af59a04a234984badea39c288968e466dea0/Configurations.md", "raw_url": "https://github.com/rust-lang/rust/raw/60e8af59a04a234984badea39c288968e466dea0/Configurations.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Configurations.md?ref=60e8af59a04a234984badea39c288968e466dea0", "patch": "@@ -1526,75 +1526,45 @@ let lorem = 0 .. 10;\n \n ## `spaces_within_parens_and_brackets`\n \n-Put spaces within non-empty generic arguments\n+Put spaces within non-empty generic arguments, parentheses, and square brackets\n \n - **Default value**: `false`\n - **Possible values**: `true`, `false`\n \n #### `false` (default):\n \n ```rust\n+// generic arguments\n fn lorem<T: Eq>(t: T) {\n     // body\n }\n-```\n-\n-#### `true`:\n-\n-```rust\n-fn lorem< T: Eq >(t: T) {\n-    // body\n-}\n-```\n-\n-See also: [`spaces_within_parens_and_brackets`](#spaces_within_parens_and_brackets), [`spaces_within_parens_and_brackets`](#spaces_within_parens_and_brackets).\n-\n-## `spaces_within_parens_and_brackets`\n-\n-Put spaces within non-empty parentheses\n-\n-- **Default value**: `false`\n-- **Possible values**: `true`, `false`\n \n-#### `false` (default):\n-\n-```rust\n+// non-empty parentheses\n fn lorem<T: Eq>(t: T) {\n     let lorem = (ipsum, dolor);\n }\n+\n+// non-empty square brackets\n+let lorem: [usize; 2] = [ipsum, dolor];\n ```\n \n #### `true`:\n \n ```rust\n+// generic arguments\n+fn lorem< T: Eq >(t: T) {\n+    // body\n+}\n+\n+// non-empty parentheses\n fn lorem<T: Eq>( t: T ) {\n     let lorem = ( ipsum, dolor );\n }\n-```\n-\n-See also: [`spaces_within_parens_and_brackets`](#spaces_within_parens_and_brackets), [`spaces_within_parens_and_brackets`](#spaces_within_parens_and_brackets).\n-\n-## `spaces_within_parens_and_brackets`\n-\n-Put spaces within non-empty square brackets\n-\n-- **Default value**: `false`\n-- **Possible values**: `true`, `false`\n \n-#### `false` (default):\n-\n-```rust\n-let lorem: [usize; 2] = [ipsum, dolor];\n-```\n-\n-#### `true`:\n-\n-```rust\n+// non-empty square brackets\n let lorem: [ usize; 2 ] = [ ipsum, dolor ];\n ```\n \n-See also: [`spaces_within_parens_and_brackets`](#spaces_within_parens_and_brackets), [`spaces_within_parens_and_brackets`](#spaces_within_parens_and_brackets).\n-\n ## `struct_lit_single_line`\n \n Put small struct literals on a single line"}]}