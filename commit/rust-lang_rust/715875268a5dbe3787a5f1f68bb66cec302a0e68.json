{"sha": "715875268a5dbe3787a5f1f68bb66cec302a0e68", "node_id": "MDY6Q29tbWl0NzI0NzEyOjcxNTg3NTI2OGE1ZGJlMzc4N2E1ZjFmNjhiYjY2Y2VjMzAyYTBlNjg=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-04-13T22:23:37Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-04-13T22:23:37Z"}, "message": "Rollup merge of #59830 - ehuss:keyword-links, r=Mark-Simulacrum\n\nFix links on keyword docs.\n\n- Make links relative.\n- Adjust links from old 2018-edition book.\n- Fix broken link in `let` docs.", "tree": {"sha": "19e2fdd371392b8f86a8bfb5cf0efa6073a1cac9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/19e2fdd371392b8f86a8bfb5cf0efa6073a1cac9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/715875268a5dbe3787a5f1f68bb66cec302a0e68", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJcsmFpCRBK7hj4Ov3rIwAAdHIIAH8IaFVJ2voknQxMBw3cjWLD\noIzXme8OZbH3v1GHnyFfTilOrdaspmJgFxlebIV+vLuVsc5RFUTv8t+f2PL0k3Na\ng9vdl6l4dIB+dzHl81en2fz3W6LZgaal2kElEjgmYWz8b1jQH/aw+5EsleDUMzwe\nEd/PVYMvP2nyeq0WrAvYIxxqSoPjpgxdVjCFHWYVTT1KYcXTsqQ2g2HUhkEvKMHW\nlpNthdCGd6e4qoLK23Hgi1LzZKxtBa6kttMxLP5UxmjsGzrTIYub9G1zIM9fjMBC\nfuvvQUrs4P11W5xbaMdk9VQesIymrlx3P68/hVh2AmwEj1g3lF8tnc/AmiMnhrY=\n=cSF2\n-----END PGP SIGNATURE-----\n", "payload": "tree 19e2fdd371392b8f86a8bfb5cf0efa6073a1cac9\nparent 8ad17ec6e42a2f72853d45b009569a7aaa5cab03\nparent 1ad46cd1ede1c246802e5fc3d988d8c6aaa9ac46\nauthor Mazdak Farrokhzad <twingoow@gmail.com> 1555194217 +0200\ncommitter GitHub <noreply@github.com> 1555194217 +0200\n\nRollup merge of #59830 - ehuss:keyword-links, r=Mark-Simulacrum\n\nFix links on keyword docs.\n\n- Make links relative.\n- Adjust links from old 2018-edition book.\n- Fix broken link in `let` docs.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/715875268a5dbe3787a5f1f68bb66cec302a0e68", "html_url": "https://github.com/rust-lang/rust/commit/715875268a5dbe3787a5f1f68bb66cec302a0e68", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/715875268a5dbe3787a5f1f68bb66cec302a0e68/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8ad17ec6e42a2f72853d45b009569a7aaa5cab03", "url": "https://api.github.com/repos/rust-lang/rust/commits/8ad17ec6e42a2f72853d45b009569a7aaa5cab03", "html_url": "https://github.com/rust-lang/rust/commit/8ad17ec6e42a2f72853d45b009569a7aaa5cab03"}, {"sha": "1ad46cd1ede1c246802e5fc3d988d8c6aaa9ac46", "url": "https://api.github.com/repos/rust-lang/rust/commits/1ad46cd1ede1c246802e5fc3d988d8c6aaa9ac46", "html_url": "https://github.com/rust-lang/rust/commit/1ad46cd1ede1c246802e5fc3d988d8c6aaa9ac46"}], "stats": {"total": 55, "additions": 25, "deletions": 30}, "files": [{"sha": "ffe50f11e8a50a5671067bef55def4530b664f45", "filename": "src/libstd/keyword_docs.rs", "status": "modified", "additions": 25, "deletions": 30, "changes": 55, "blob_url": "https://github.com/rust-lang/rust/blob/715875268a5dbe3787a5f1f68bb66cec302a0e68/src%2Flibstd%2Fkeyword_docs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/715875268a5dbe3787a5f1f68bb66cec302a0e68/src%2Flibstd%2Fkeyword_docs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fkeyword_docs.rs?ref=715875268a5dbe3787a5f1f68bb66cec302a0e68", "patch": "@@ -25,8 +25,7 @@\n ///\n /// For more information on what `as` is capable of, see the [Reference]\n ///\n-/// [Reference]:\n-/// https://doc.rust-lang.org/reference/expressions/operator-expr.html#type-cast-expressions\n+/// [Reference]: ../reference/expressions/operator-expr.html#type-cast-expressions\n /// [`crate`]: keyword.crate.html\n mod as_keyword { }\n \n@@ -80,8 +79,8 @@ mod as_keyword { }\n ///\n /// [pointer]: primitive.pointer.html\n /// [Rust Book]:\n-/// https://doc.rust-lang.org/stable/book/2018-edition/ch03-01-variables-and-mutability.html#differences-between-variables-and-constants\n-/// [Reference]: https://doc.rust-lang.org/reference/items/constant-items.html\n+/// ../book/ch03-01-variables-and-mutability.html#differences-between-variables-and-constants\n+/// [Reference]: ../reference/items/constant-items.html\n mod const_keyword { }\n \n #[doc(keyword = \"crate\")]\n@@ -114,7 +113,7 @@ mod const_keyword { }\n /// }\n /// ```\n ///\n-/// [Reference]: https://doc.rust-lang.org/reference/items/extern-crates.html\n+/// [Reference]: ../reference/items/extern-crates.html\n mod crate_keyword { }\n \n #[doc(keyword = \"enum\")]\n@@ -169,8 +168,8 @@ mod crate_keyword { }\n ///\n /// [Algebraic Data Types]: https://en.wikipedia.org/wiki/Algebraic_data_type\n /// [`Option`]: option/enum.Option.html\n-/// [Rust Book]: https://doc.rust-lang.org/book/ch06-01-defining-an-enum.html\n-/// [Reference]: https://doc.rust-lang.org/reference/items/enumerations.html\n+/// [Rust Book]: ../book/ch06-01-defining-an-enum.html\n+/// [Reference]: ../reference/items/enumerations.html\n mod enum_keyword { }\n \n #[doc(keyword = \"extern\")]\n@@ -211,8 +210,8 @@ mod enum_keyword { }\n /// For more information on FFI, check the [Rust book] or the [Reference].\n ///\n /// [Rust book]:\n-/// https://doc.rust-lang.org/book/ch19-01-unsafe-rust.html#using-extern-functions-to-call-external-code\n-/// [Reference]: https://doc.rust-lang.org/reference/items/external-blocks.html\n+/// ../book/ch19-01-unsafe-rust.html#using-extern-functions-to-call-external-code\n+/// [Reference]: ../reference/items/external-blocks.html\n mod extern_keyword { }\n \n #[doc(keyword = \"fn\")]\n@@ -278,8 +277,8 @@ mod extern_keyword { }\n ///\n /// [`impl`]: keyword.impl.html\n /// [`extern`]: keyword.extern.html\n-/// [Rust book]: https://doc.rust-lang.org/book/ch03-03-how-functions-work.html\n-/// [Reference]: https://doc.rust-lang.org/reference/items/functions.html\n+/// [Rust book]: ../book/ch03-03-how-functions-work.html\n+/// [Reference]: ../reference/items/functions.html\n mod fn_keyword { }\n \n #[doc(keyword = \"for\")]\n@@ -352,12 +351,11 @@ mod fn_keyword { }\n /// For more information on for-loops, see the [Rust book] or the [Reference].\n ///\n /// [`impl`]: keyword.impl.html\n-/// [higher-ranked trait bounds]:\n-/// https://doc.rust-lang.org/nightly/reference/trait-bounds.html#higher-ranked-trait-bounds\n+/// [higher-ranked trait bounds]: ../reference/trait-bounds.html#higher-ranked-trait-bounds\n /// [`IntoIterator`]: iter/trait.IntoIterator.html\n /// [Rust book]:\n-/// https://doc.rust-lang.org/book/2018-edition/ch03-05-control-flow.html#looping-through-a-collection-with-for\n-/// [Reference]: https://doc.rust-lang.org/reference/expressions/loop-expr.html#iterator-loops\n+/// ../book/ch03-05-control-flow.html#looping-through-a-collection-with-for\n+/// [Reference]: ../reference/expressions/loop-expr.html#iterator-loops\n mod for_keyword { }\n \n #[doc(keyword = \"if\")]\n@@ -430,9 +428,8 @@ mod for_keyword { }\n ///\n /// For more information on `if` expressions, see the [Rust book] or the [Reference].\n ///\n-/// [Rust book]:\n-/// https://doc.rust-lang.org/stable/book/2018-edition/ch03-05-control-flow.html#if-expressions\n-/// [Reference]: https://doc.rust-lang.org/reference/expressions/if-expr.html\n+/// [Rust book]: ../book/ch03-05-control-flow.html#if-expressions\n+/// [Reference]: ../reference/expressions/if-expr.html\n mod if_keyword { }\n \n #[doc(keyword = \"impl\")]\n@@ -493,10 +490,9 @@ mod if_keyword { }\n ///\n /// For more information on `impl Trait` syntax, see the [Rust book][book2].\n ///\n-/// [book1]: https://doc.rust-lang.org/stable/book/2018-edition/ch05-03-method-syntax.html\n-/// [Reference]: https://doc.rust-lang.org/reference/items/implementations.html\n-/// [book2]:\n-/// https://doc.rust-lang.org/stable/book/2018-edition/ch10-02-traits.html#returning-traits\n+/// [book1]: ../book/ch05-03-method-syntax.html\n+/// [Reference]: ../reference/items/implementations.html\n+/// [book2]: ../book/ch10-02-traits.html#returning-types-that-implement-traits\n mod impl_keyword { }\n \n #[doc(keyword = \"let\")]\n@@ -554,13 +550,12 @@ mod impl_keyword { }\n /// enumerations. `while let` also exists, which runs a loop with a pattern matched value until\n /// that pattern can't be matched.\n ///\n-/// For more information on the `let` keyword, see the [Rust book] or the [Reference]\n+/// For more information on the `let` keyword, see the [Rust book][book2] or the [Reference]\n ///\n-/// [book1]: https://doc.rust-lang.org/stable/book/2018-edition/ch06-02-match.html\n+/// [book1]: ../book/ch06-02-match.html\n /// [`if`]: keyword.if.html\n-/// [book2]:\n-/// https://doc.rust-lang.org/stable/book/2018-edition/ch18-01-all-the-places-for-patterns.html#let-statements\n-/// [Reference]: https://doc.rust-lang.org/reference/statements.html#let-statements\n+/// [book2]: ../book/ch18-01-all-the-places-for-patterns.html#let-statements\n+/// [Reference]: ../reference/statements.html#let-statements\n mod let_keyword { }\n \n #[doc(keyword = \"loop\")]\n@@ -605,7 +600,7 @@ mod let_keyword { }\n ///\n /// For more information on `loop` and loops in general, see the [Reference].\n ///\n-/// [Reference]: https://doc.rust-lang.org/reference/expressions/loop-expr.html\n+/// [Reference]: ../reference/expressions/loop-expr.html\n mod loop_keyword { }\n \n #[doc(keyword = \"struct\")]\n@@ -712,6 +707,6 @@ mod loop_keyword { }\n /// [Reference][reference].\n ///\n /// [`PhantomData`]: marker/struct.PhantomData.html\n-/// [book]: https://doc.rust-lang.org/book/ch05-01-defining-structs.html\n-/// [reference]: https://doc.rust-lang.org/reference/items/structs.html\n+/// [book]: ../book/ch05-01-defining-structs.html\n+/// [reference]: ../reference/items/structs.html\n mod struct_keyword { }"}]}