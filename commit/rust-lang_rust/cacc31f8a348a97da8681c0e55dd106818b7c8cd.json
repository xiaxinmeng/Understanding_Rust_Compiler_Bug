{"sha": "cacc31f8a348a97da8681c0e55dd106818b7c8cd", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNhY2MzMWY4YTM0OGE5N2RhODY4MWMwZTU1ZGQxMDY4MThiN2M4Y2Q=", "commit": {"author": {"name": "Michael Woerister", "email": "michaelwoerister@posteo.net", "date": "2017-07-31T13:41:41Z"}, "committer": {"name": "Michael Woerister", "email": "michaelwoerister@posteo.net", "date": "2017-07-31T13:41:41Z"}, "message": "async-llvm(26): Print error when failing to acquire Jobserver token.", "tree": {"sha": "df74ec3f499b38b24dc37969d72e65c9284b45f0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/df74ec3f499b38b24dc37969d72e65c9284b45f0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/cacc31f8a348a97da8681c0e55dd106818b7c8cd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/cacc31f8a348a97da8681c0e55dd106818b7c8cd", "html_url": "https://github.com/rust-lang/rust/commit/cacc31f8a348a97da8681c0e55dd106818b7c8cd", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/cacc31f8a348a97da8681c0e55dd106818b7c8cd/comments", "author": {"login": "michaelwoerister", "id": 1825894, "node_id": "MDQ6VXNlcjE4MjU4OTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1825894?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelwoerister", "html_url": "https://github.com/michaelwoerister", "followers_url": "https://api.github.com/users/michaelwoerister/followers", "following_url": "https://api.github.com/users/michaelwoerister/following{/other_user}", "gists_url": "https://api.github.com/users/michaelwoerister/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelwoerister/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelwoerister/subscriptions", "organizations_url": "https://api.github.com/users/michaelwoerister/orgs", "repos_url": "https://api.github.com/users/michaelwoerister/repos", "events_url": "https://api.github.com/users/michaelwoerister/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelwoerister/received_events", "type": "User", "site_admin": false}, "committer": {"login": "michaelwoerister", "id": 1825894, "node_id": "MDQ6VXNlcjE4MjU4OTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1825894?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelwoerister", "html_url": "https://github.com/michaelwoerister", "followers_url": "https://api.github.com/users/michaelwoerister/followers", "following_url": "https://api.github.com/users/michaelwoerister/following{/other_user}", "gists_url": "https://api.github.com/users/michaelwoerister/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelwoerister/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelwoerister/subscriptions", "organizations_url": "https://api.github.com/users/michaelwoerister/orgs", "repos_url": "https://api.github.com/users/michaelwoerister/repos", "events_url": "https://api.github.com/users/michaelwoerister/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelwoerister/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a9a0ea921b20f64f0253235704889a2950f72535", "url": "https://api.github.com/repos/rust-lang/rust/commits/a9a0ea921b20f64f0253235704889a2950f72535", "html_url": "https://github.com/rust-lang/rust/commit/a9a0ea921b20f64f0253235704889a2950f72535"}], "stats": {"total": 32, "additions": 18, "deletions": 14}, "files": [{"sha": "85860f0e33a34fd3f7294b2b79ccadb291523c62", "filename": "src/librustc_trans/back/write.rs", "status": "modified", "additions": 18, "deletions": 14, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/cacc31f8a348a97da8681c0e55dd106818b7c8cd/src%2Flibrustc_trans%2Fback%2Fwrite.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cacc31f8a348a97da8681c0e55dd106818b7c8cd/src%2Flibrustc_trans%2Fback%2Fwrite.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Fback%2Fwrite.rs?ref=cacc31f8a348a97da8681c0e55dd106818b7c8cd", "patch": "@@ -1389,21 +1389,25 @@ fn start_executing_work(sess: &Session,\n                 // this to spawn a new unit of work, or it may get dropped\n                 // immediately if we have no more work to spawn.\n                 Message::Token(token) => {\n-                    if let Ok(token) = token {\n-                        tokens.push(token);\n-\n-                        if main_thread_worker_state == MainThreadWorkerState::LLVMing {\n-                            // If the main thread token is used for LLVM work\n-                            // at the moment, we turn that thread into a regular\n-                            // LLVM worker thread, so the main thread is free\n-                            // to react to translation demand.\n-                            main_thread_worker_state = MainThreadWorkerState::Idle;\n-                            running += 1;\n+                    match token {\n+                        Ok(token) => {\n+                            tokens.push(token);\n+\n+                            if main_thread_worker_state == MainThreadWorkerState::LLVMing {\n+                                // If the main thread token is used for LLVM work\n+                                // at the moment, we turn that thread into a regular\n+                                // LLVM worker thread, so the main thread is free\n+                                // to react to translation demand.\n+                                main_thread_worker_state = MainThreadWorkerState::Idle;\n+                                running += 1;\n+                            }\n+                        }\n+                        Err(e) => {\n+                            let msg = &format!(\"failed to acquire jobserver token: {}\", e);\n+                            shared_emitter.fatal(msg);\n+                            // Exit the coordinator thread\n+                            panic!()\n                         }\n-                    } else {\n-                        shared_emitter.fatal(\"failed to acquire jobserver token\");\n-                        // Exit the coordinator thread\n-                        panic!()\n                     }\n                 }\n "}]}