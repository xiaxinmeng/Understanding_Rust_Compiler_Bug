{"sha": "dadcb0550d41c343988310ee1946d8dd8f477008", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRhZGNiMDU1MGQ0MWMzNDM5ODgzMTBlZTE5NDZkOGRkOGY0NzcwMDg=", "commit": {"author": {"name": "Joshua Nelson", "email": "jyn514@gmail.com", "date": "2021-05-01T05:56:52Z"}, "committer": {"name": "Joshua Nelson", "email": "jyn514@gmail.com", "date": "2021-05-01T05:57:15Z"}, "message": "Allow formatting specific subdirectories", "tree": {"sha": "0413320e746377e0731afdbc05712923ce556f91", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0413320e746377e0731afdbc05712923ce556f91"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/dadcb0550d41c343988310ee1946d8dd8f477008", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/dadcb0550d41c343988310ee1946d8dd8f477008", "html_url": "https://github.com/rust-lang/rust/commit/dadcb0550d41c343988310ee1946d8dd8f477008", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/dadcb0550d41c343988310ee1946d8dd8f477008/comments", "author": {"login": "jyn514", "id": 23638587, "node_id": "MDQ6VXNlcjIzNjM4NTg3", "avatar_url": "https://avatars.githubusercontent.com/u/23638587?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jyn514", "html_url": "https://github.com/jyn514", "followers_url": "https://api.github.com/users/jyn514/followers", "following_url": "https://api.github.com/users/jyn514/following{/other_user}", "gists_url": "https://api.github.com/users/jyn514/gists{/gist_id}", "starred_url": "https://api.github.com/users/jyn514/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jyn514/subscriptions", "organizations_url": "https://api.github.com/users/jyn514/orgs", "repos_url": "https://api.github.com/users/jyn514/repos", "events_url": "https://api.github.com/users/jyn514/events{/privacy}", "received_events_url": "https://api.github.com/users/jyn514/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jyn514", "id": 23638587, "node_id": "MDQ6VXNlcjIzNjM4NTg3", "avatar_url": "https://avatars.githubusercontent.com/u/23638587?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jyn514", "html_url": "https://github.com/jyn514", "followers_url": "https://api.github.com/users/jyn514/followers", "following_url": "https://api.github.com/users/jyn514/following{/other_user}", "gists_url": "https://api.github.com/users/jyn514/gists{/gist_id}", "starred_url": "https://api.github.com/users/jyn514/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jyn514/subscriptions", "organizations_url": "https://api.github.com/users/jyn514/orgs", "repos_url": "https://api.github.com/users/jyn514/repos", "events_url": "https://api.github.com/users/jyn514/events{/privacy}", "received_events_url": "https://api.github.com/users/jyn514/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b52769b804a12b7045ee1bce893a64045cdb974a", "url": "https://api.github.com/repos/rust-lang/rust/commits/b52769b804a12b7045ee1bce893a64045cdb974a", "html_url": "https://github.com/rust-lang/rust/commit/b52769b804a12b7045ee1bce893a64045cdb974a"}], "stats": {"total": 26, "additions": 19, "deletions": 7}, "files": [{"sha": "c7034dfeaabd78683f105e4527398896e563d941", "filename": "src/bootstrap/flags.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/dadcb0550d41c343988310ee1946d8dd8f477008/src%2Fbootstrap%2Fflags.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dadcb0550d41c343988310ee1946d8dd8f477008/src%2Fbootstrap%2Fflags.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fflags.rs?ref=dadcb0550d41c343988310ee1946d8dd8f477008", "patch": "@@ -91,6 +91,7 @@ pub enum Subcommand {\n         paths: Vec<PathBuf>,\n     },\n     Format {\n+        paths: Vec<PathBuf>,\n         check: bool,\n     },\n     Doc {\n@@ -578,7 +579,7 @@ Arguments:\n \n                 Subcommand::Clean { all: matches.opt_present(\"all\") }\n             }\n-            \"fmt\" => Subcommand::Format { check: matches.opt_present(\"check\") },\n+            \"fmt\" => Subcommand::Format { check: matches.opt_present(\"check\"), paths },\n             \"dist\" => Subcommand::Dist { paths },\n             \"install\" => Subcommand::Install { paths },\n             \"run\" | \"r\" => {"}, {"sha": "2408344487bb1f8044b9d601bd8047dcf0e7f661", "filename": "src/bootstrap/format.rs", "status": "modified", "additions": 14, "deletions": 3, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/dadcb0550d41c343988310ee1946d8dd8f477008/src%2Fbootstrap%2Fformat.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dadcb0550d41c343988310ee1946d8dd8f477008/src%2Fbootstrap%2Fformat.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fformat.rs?ref=dadcb0550d41c343988310ee1946d8dd8f477008", "patch": "@@ -42,7 +42,7 @@ struct RustfmtConfig {\n     ignore: Vec<String>,\n }\n \n-pub fn format(build: &Build, check: bool) {\n+pub fn format(build: &Build, check: bool, paths: &[PathBuf]) {\n     if build.config.dry_run {\n         return;\n     }\n@@ -118,8 +118,19 @@ pub fn format(build: &Build, check: bool) {\n         .to_path_buf();\n     let src = build.src.clone();\n     let (tx, rx): (SyncSender<PathBuf>, _) = std::sync::mpsc::sync_channel(128);\n-    let walker =\n-        WalkBuilder::new(src.clone()).types(matcher).overrides(ignore_fmt).build_parallel();\n+    let walker = match paths.get(0) {\n+        Some(first) => {\n+            let mut walker = WalkBuilder::new(first);\n+            for path in &paths[1..] {\n+                walker.add(path);\n+            }\n+            walker\n+        }\n+        None => WalkBuilder::new(src.clone()),\n+    }\n+    .types(matcher)\n+    .overrides(ignore_fmt)\n+    .build_parallel();\n \n     // there is a lot of blocking involved in spawning a child process and reading files to format.\n     // spawn more processes than available concurrency to keep the CPU busy"}, {"sha": "2960dd3df6bf48b81a98cbd0ee8c80e42a6176f2", "filename": "src/bootstrap/lib.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/dadcb0550d41c343988310ee1946d8dd8f477008/src%2Fbootstrap%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dadcb0550d41c343988310ee1946d8dd8f477008/src%2Fbootstrap%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Flib.rs?ref=dadcb0550d41c343988310ee1946d8dd8f477008", "patch": "@@ -478,8 +478,8 @@ impl Build {\n             job::setup(self);\n         }\n \n-        if let Subcommand::Format { check } = self.config.cmd {\n-            return format::format(self, check);\n+        if let Subcommand::Format { check, paths } = &self.config.cmd {\n+            return format::format(self, *check, &paths);\n         }\n \n         if let Subcommand::Clean { all } = self.config.cmd {"}, {"sha": "a115ea905aa721a2388ad9e1f7037e18ca94b76a", "filename": "src/bootstrap/test.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/dadcb0550d41c343988310ee1946d8dd8f477008/src%2Fbootstrap%2Ftest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dadcb0550d41c343988310ee1946d8dd8f477008/src%2Fbootstrap%2Ftest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Ftest.rs?ref=dadcb0550d41c343988310ee1946d8dd8f477008", "patch": "@@ -897,7 +897,7 @@ help: to skip test's attempt to check tidiness, pass `--exclude src/tools/tidy`\n                 );\n                 std::process::exit(1);\n             }\n-            crate::format::format(&builder.build, !builder.config.cmd.bless());\n+            crate::format::format(&builder.build, !builder.config.cmd.bless(), &[]);\n         }\n     }\n "}]}