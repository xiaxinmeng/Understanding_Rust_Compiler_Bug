{"sha": "4b3d99f98f393d1c05b1041d3178cae45ebcd3ff", "node_id": "MDY6Q29tbWl0NzI0NzEyOjRiM2Q5OWY5OGYzOTNkMWMwNWIxMDQxZDMxNzhjYWU0NWViY2QzZmY=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2020-08-12T11:51:53Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-08-12T11:51:53Z"}, "message": "Merge #5699\n\n5699: Fix clippy warnings r=matklad a=popzxc\n\nCurrently clippy spawns a bunch of warnings on the `rust-analyzer` project. Nothing critical, but easy to fix, so I guess it won't harm.\n\nCo-authored-by: Igor Aleksanov <popzxc@yandex.ru>", "tree": {"sha": "ded304d310badd7d1dc040efa2c8c17572019464", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ded304d310badd7d1dc040efa2c8c17572019464"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4b3d99f98f393d1c05b1041d3178cae45ebcd3ff", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJfM9fZCRBK7hj4Ov3rIwAAdHIIAFf8xjMSqDR8D6BcHc32S3HJ\nbCT+4XnzMFpnHesKWX4PKdpOnQqMXAaz3fVF9VkUDKKtigEiTjKFmH0318/ZXS0/\nYbGmJ++vveMkla5xkcm3Q79xy9JYUfx88IGMVRUC+cLi70ZfWZAsBfMgNtWiBvoN\n7dH0V3zSGpf5T2yZs2ZZDFmE8UVf+CbEhj6PNBNRT7RTkXetdjV+aQcwnsp0SeoB\nzlRpVIeH18kY7HY/oeS0a9VAnEC6GSXvBkQdjUt1d4QLibBOKPcwnYEd9oxI6XZa\n7DbpjiAbq6oWJpp+PdR+GA/0Vi4X1yJIOyq4XzdREuH0ba8Fh/wbpGDE0W70Cgc=\n=qwh7\n-----END PGP SIGNATURE-----\n", "payload": "tree ded304d310badd7d1dc040efa2c8c17572019464\nparent f6c0b1ce59c9fa5bcbf482b1b9d16a3bae6abf1c\nparent fcd4b0176f1544b389c9b028c547a1dfc92f9a56\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1597233113 +0000\ncommitter GitHub <noreply@github.com> 1597233113 +0000\n\nMerge #5699\n\n5699: Fix clippy warnings r=matklad a=popzxc\n\nCurrently clippy spawns a bunch of warnings on the `rust-analyzer` project. Nothing critical, but easy to fix, so I guess it won't harm.\n\nCo-authored-by: Igor Aleksanov <popzxc@yandex.ru>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4b3d99f98f393d1c05b1041d3178cae45ebcd3ff", "html_url": "https://github.com/rust-lang/rust/commit/4b3d99f98f393d1c05b1041d3178cae45ebcd3ff", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4b3d99f98f393d1c05b1041d3178cae45ebcd3ff/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f6c0b1ce59c9fa5bcbf482b1b9d16a3bae6abf1c", "url": "https://api.github.com/repos/rust-lang/rust/commits/f6c0b1ce59c9fa5bcbf482b1b9d16a3bae6abf1c", "html_url": "https://github.com/rust-lang/rust/commit/f6c0b1ce59c9fa5bcbf482b1b9d16a3bae6abf1c"}, {"sha": "fcd4b0176f1544b389c9b028c547a1dfc92f9a56", "url": "https://api.github.com/repos/rust-lang/rust/commits/fcd4b0176f1544b389c9b028c547a1dfc92f9a56", "html_url": "https://github.com/rust-lang/rust/commit/fcd4b0176f1544b389c9b028c547a1dfc92f9a56"}], "stats": {"total": 25, "additions": 15, "deletions": 10}, "files": [{"sha": "bd83895f78251f2ecac9cba72a3fd64e46ce31dd", "filename": "crates/expect/src/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4b3d99f98f393d1c05b1041d3178cae45ebcd3ff/crates%2Fexpect%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4b3d99f98f393d1c05b1041d3178cae45ebcd3ff/crates%2Fexpect%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fexpect%2Fsrc%2Flib.rs?ref=4b3d99f98f393d1c05b1041d3178cae45ebcd3ff", "patch": "@@ -74,7 +74,7 @@ impl fmt::Display for Position {\n impl Expect {\n     pub fn assert_eq(&self, actual: &str) {\n         let trimmed = self.trimmed();\n-        if &trimmed == actual {\n+        if trimmed == actual {\n             return;\n         }\n         Runtime::fail_expect(self, &trimmed, actual);"}, {"sha": "933a3a3b5e3d178f47425f7d1d86342f9354e749", "filename": "crates/ra_mbe/src/mbe_expander/matcher.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4b3d99f98f393d1c05b1041d3178cae45ebcd3ff/crates%2Fra_mbe%2Fsrc%2Fmbe_expander%2Fmatcher.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4b3d99f98f393d1c05b1041d3178cae45ebcd3ff/crates%2Fra_mbe%2Fsrc%2Fmbe_expander%2Fmatcher.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_mbe%2Fsrc%2Fmbe_expander%2Fmatcher.rs?ref=4b3d99f98f393d1c05b1041d3178cae45ebcd3ff", "patch": "@@ -276,7 +276,7 @@ impl<'a> TtIter<'a> {\n         Ok(tt::Subtree {\n             delimiter: None,\n             token_trees: vec![\n-                tt::Leaf::Punct(punct.clone()).into(),\n+                tt::Leaf::Punct(*punct).into(),\n                 tt::Leaf::Ident(ident.clone()).into(),\n             ],\n         }"}, {"sha": "37dd3f496566d539abd58af086ad0242217048c7", "filename": "crates/ra_proc_macro/src/process.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4b3d99f98f393d1c05b1041d3178cae45ebcd3ff/crates%2Fra_proc_macro%2Fsrc%2Fprocess.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4b3d99f98f393d1c05b1041d3178cae45ebcd3ff/crates%2Fra_proc_macro%2Fsrc%2Fprocess.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_proc_macro%2Fsrc%2Fprocess.rs?ref=4b3d99f98f393d1c05b1041d3178cae45ebcd3ff", "patch": "@@ -90,7 +90,7 @@ impl ProcMacroProcessSrv {\n             }\n             Some(it) => it,\n         };\n-        sender.send(Task { req: req.into(), result_tx }).unwrap();\n+        sender.send(Task { req, result_tx }).unwrap();\n         let res = result_rx\n             .recv()\n             .map_err(|_| ra_tt::ExpansionError::Unknown(\"Proc macro thread is closed.\".into()))?;"}, {"sha": "d68791cf1fdff30445f33ea9be9e9266aeb1462f", "filename": "crates/ra_text_edit/src/lib.rs", "status": "modified", "additions": 9, "deletions": 4, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/4b3d99f98f393d1c05b1041d3178cae45ebcd3ff/crates%2Fra_text_edit%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4b3d99f98f393d1c05b1041d3178cae45ebcd3ff/crates%2Fra_text_edit%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_text_edit%2Fsrc%2Flib.rs?ref=4b3d99f98f393d1c05b1041d3178cae45ebcd3ff", "patch": "@@ -76,10 +76,6 @@ impl TextEdit {\n         self.indels.iter()\n     }\n \n-    pub fn into_iter(self) -> vec::IntoIter<Indel> {\n-        self.indels.into_iter()\n-    }\n-\n     pub fn apply(&self, text: &mut String) {\n         match self.len() {\n             0 => return,\n@@ -141,6 +137,15 @@ impl TextEdit {\n     }\n }\n \n+impl IntoIterator for TextEdit {\n+    type Item = Indel;\n+    type IntoIter = vec::IntoIter<Self::Item>;\n+\n+    fn into_iter(self) -> Self::IntoIter {\n+        self.indels.into_iter()\n+    }\n+}\n+\n impl TextEditBuilder {\n     pub fn replace(&mut self, range: TextRange, replace_with: String) {\n         self.indels.push(Indel::replace(range, replace_with))"}, {"sha": "20c3f5eabfb8dfe54e2e6e75ff3f51882239c737", "filename": "crates/ra_tt/src/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4b3d99f98f393d1c05b1041d3178cae45ebcd3ff/crates%2Fra_tt%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4b3d99f98f393d1c05b1041d3178cae45ebcd3ff/crates%2Fra_tt%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_tt%2Fsrc%2Flib.rs?ref=4b3d99f98f393d1c05b1041d3178cae45ebcd3ff", "patch": "@@ -107,7 +107,7 @@ fn print_debug_subtree(f: &mut fmt::Formatter<'_>, subtree: &Subtree, level: usi\n         for (idx, child) in subtree.token_trees.iter().enumerate() {\n             print_debug_token(f, child, level + 1)?;\n             if idx != subtree.token_trees.len() - 1 {\n-                writeln!(f, \"\")?;\n+                writeln!(f)?;\n             }\n         }\n     }"}, {"sha": "00bfcd29ed066f8d9debc63c6497bf611da35936", "filename": "crates/stdx/src/lib.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/4b3d99f98f393d1c05b1041d3178cae45ebcd3ff/crates%2Fstdx%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4b3d99f98f393d1c05b1041d3178cae45ebcd3ff/crates%2Fstdx%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fstdx%2Fsrc%2Flib.rs?ref=4b3d99f98f393d1c05b1041d3178cae45ebcd3ff", "patch": "@@ -10,15 +10,15 @@ pub fn is_ci() -> bool {\n \n pub trait SepBy: Sized {\n     /// Returns an `impl fmt::Display`, which joins elements via a separator.\n-    fn sep_by<'a>(self, sep: &'a str) -> SepByBuilder<'a, Self>;\n+    fn sep_by(self, sep: &str) -> SepByBuilder<'_, Self>;\n }\n \n impl<I> SepBy for I\n where\n     I: Iterator,\n     I::Item: fmt::Display,\n {\n-    fn sep_by<'a>(self, sep: &'a str) -> SepByBuilder<'a, Self> {\n+    fn sep_by(self, sep: &str) -> SepByBuilder<'_, Self> {\n         SepByBuilder::new(sep, self)\n     }\n }"}]}