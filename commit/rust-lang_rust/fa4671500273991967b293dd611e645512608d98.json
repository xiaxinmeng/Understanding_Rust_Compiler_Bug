{"sha": "fa4671500273991967b293dd611e645512608d98", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZhNDY3MTUwMDI3Mzk5MTk2N2IyOTNkZDYxMWU2NDU1MTI2MDhkOTg=", "commit": {"author": {"name": "Ellen", "email": "supbscripter@gmail.com", "date": "2021-08-05T02:09:01Z"}, "committer": {"name": "Ellen", "email": "supbscripter@gmail.com", "date": "2021-08-05T02:09:01Z"}, "message": "remove tywf relation", "tree": {"sha": "520e7c185456af270e66659c7bd21edf3d331d77", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/520e7c185456af270e66659c7bd21edf3d331d77"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/fa4671500273991967b293dd611e645512608d98", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/fa4671500273991967b293dd611e645512608d98", "html_url": "https://github.com/rust-lang/rust/commit/fa4671500273991967b293dd611e645512608d98", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/fa4671500273991967b293dd611e645512608d98/comments", "author": {"login": "BoxyUwU", "id": 21149742, "node_id": "MDQ6VXNlcjIxMTQ5NzQy", "avatar_url": "https://avatars.githubusercontent.com/u/21149742?v=4", "gravatar_id": "", "url": "https://api.github.com/users/BoxyUwU", "html_url": "https://github.com/BoxyUwU", "followers_url": "https://api.github.com/users/BoxyUwU/followers", "following_url": "https://api.github.com/users/BoxyUwU/following{/other_user}", "gists_url": "https://api.github.com/users/BoxyUwU/gists{/gist_id}", "starred_url": "https://api.github.com/users/BoxyUwU/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/BoxyUwU/subscriptions", "organizations_url": "https://api.github.com/users/BoxyUwU/orgs", "repos_url": "https://api.github.com/users/BoxyUwU/repos", "events_url": "https://api.github.com/users/BoxyUwU/events{/privacy}", "received_events_url": "https://api.github.com/users/BoxyUwU/received_events", "type": "User", "site_admin": false}, "committer": {"login": "BoxyUwU", "id": 21149742, "node_id": "MDQ6VXNlcjIxMTQ5NzQy", "avatar_url": "https://avatars.githubusercontent.com/u/21149742?v=4", "gravatar_id": "", "url": "https://api.github.com/users/BoxyUwU", "html_url": "https://github.com/BoxyUwU", "followers_url": "https://api.github.com/users/BoxyUwU/followers", "following_url": "https://api.github.com/users/BoxyUwU/following{/other_user}", "gists_url": "https://api.github.com/users/BoxyUwU/gists{/gist_id}", "starred_url": "https://api.github.com/users/BoxyUwU/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/BoxyUwU/subscriptions", "organizations_url": "https://api.github.com/users/BoxyUwU/orgs", "repos_url": "https://api.github.com/users/BoxyUwU/repos", "events_url": "https://api.github.com/users/BoxyUwU/events{/privacy}", "received_events_url": "https://api.github.com/users/BoxyUwU/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b1d14ef08fefa81a8f4b459fbfb11dafe9005d0a", "url": "https://api.github.com/repos/rust-lang/rust/commits/b1d14ef08fefa81a8f4b459fbfb11dafe9005d0a", "html_url": "https://github.com/rust-lang/rust/commit/b1d14ef08fefa81a8f4b459fbfb11dafe9005d0a"}], "stats": {"total": 10, "additions": 3, "deletions": 7}, "files": [{"sha": "17f5020300d40c10b23af50e3198376ee2dc5a91", "filename": "compiler/rustc_typeck/src/check/dropck.rs", "status": "modified", "additions": 3, "deletions": 7, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/fa4671500273991967b293dd611e645512608d98/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fdropck.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fa4671500273991967b293dd611e645512608d98/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fdropck.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fdropck.rs?ref=fa4671500273991967b293dd611e645512608d98", "patch": "@@ -217,9 +217,9 @@ fn ensure_drop_predicates_are_implied_by_item_defn<'tcx>(\n         // repeated `.iter().any(..)` calls.\n \n         // This closure is a more robust way to check `Predicate` equality\n-        // than simple `==` checks (which were the previous implementation). It relies on\n-        // `ty::relate` for `TraitPredicate`, `ProjectionPredicate`, `ConstEvaluatable`\n-        // `TypeOutlives` and `TypeWellFormedFromEnv` (which implement the Relate trait),\n+        // than simple `==` checks (which were the previous implementation).\n+        // It relies on `ty::relate` for `TraitPredicate`, `ProjectionPredicate`,\n+        // `ConstEvaluatable` and `TypeOutlives` (which implement the Relate trait),\n         // while delegating on simple equality for the other `Predicate`.\n         // This implementation solves (Issue #59497) and (Issue #58311).\n         // It is unclear to me at the moment whether the approach based on `relate`\n@@ -242,10 +242,6 @@ fn ensure_drop_predicates_are_implied_by_item_defn<'tcx>(\n                 (ty::PredicateKind::TypeOutlives(a), ty::PredicateKind::TypeOutlives(b)) => {\n                     relator.relate(predicate.rebind(a.0), p.rebind(b.0)).is_ok()\n                 }\n-                (\n-                    ty::PredicateKind::TypeWellFormedFromEnv(a),\n-                    ty::PredicateKind::TypeWellFormedFromEnv(b),\n-                ) => relator.relate(predicate.rebind(a), p.rebind(b)).is_ok(),\n                 _ => predicate == p,\n             }\n         };"}]}