{"sha": "5c73be167051c1e353df9f372663f901f212953f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjVjNzNiZTE2NzA1MWMxZTM1M2RmOWYzNzI2NjNmOTAxZjIxMjk1M2Y=", "commit": {"author": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2020-01-04T12:17:30Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-01-04T12:17:30Z"}, "message": "Rollup merge of #67837 - GuillaumeGomez:clean-up-err-codes, r=Dylan-DPC\n\nClean up err codes\n\nr? @Dylan-DPC", "tree": {"sha": "2679146eb8d4c8375ef057a9bab70367917402d3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2679146eb8d4c8375ef057a9bab70367917402d3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5c73be167051c1e353df9f372663f901f212953f", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJeEIJaCRBK7hj4Ov3rIwAAdHIIAA6ygHemZ0/e8tlxhTL/5alp\nfc+6IB0MAgswQKE8QCEcTzOv5ty5RNO6tGyQNTWZV8i1kxTcSwSWJ3eUlTcRzStv\n+p9qoVtmUe0ZifWZBPKI6C617id/zu8/FGheUmvlq04/+Z6okYDkVZ9lDSrEPVjO\n/E9c8uTaWV9nCZ7iC4OfpYH7q3EOZ/lHf3mrrdZscI4ZrRtJQXgOZujav89DTP8G\n3jkkRwR02mk1iE2pCZSzG1N/QmLvVc/a2+czWBavE2vYzaEgwqGrI9XUu4AM9wSF\nvSnUXYhpyLi26txqVJudY8OYz1gsQsawOOUtLku2uY+I9yIM8ZsT3rp2HhrvEtM=\n=HWRn\n-----END PGP SIGNATURE-----\n", "payload": "tree 2679146eb8d4c8375ef057a9bab70367917402d3\nparent 1140ceebccdf9ab00bce927dd71dbe5957486ef2\nparent 062cd789588dfc493ef8c69378379024d3670f75\nauthor Guillaume Gomez <guillaume1.gomez@gmail.com> 1578140250 +0100\ncommitter GitHub <noreply@github.com> 1578140250 +0100\n\nRollup merge of #67837 - GuillaumeGomez:clean-up-err-codes, r=Dylan-DPC\n\nClean up err codes\n\nr? @Dylan-DPC\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5c73be167051c1e353df9f372663f901f212953f", "html_url": "https://github.com/rust-lang/rust/commit/5c73be167051c1e353df9f372663f901f212953f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5c73be167051c1e353df9f372663f901f212953f/comments", "author": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1140ceebccdf9ab00bce927dd71dbe5957486ef2", "url": "https://api.github.com/repos/rust-lang/rust/commits/1140ceebccdf9ab00bce927dd71dbe5957486ef2", "html_url": "https://github.com/rust-lang/rust/commit/1140ceebccdf9ab00bce927dd71dbe5957486ef2"}, {"sha": "062cd789588dfc493ef8c69378379024d3670f75", "url": "https://api.github.com/repos/rust-lang/rust/commits/062cd789588dfc493ef8c69378379024d3670f75", "html_url": "https://github.com/rust-lang/rust/commit/062cd789588dfc493ef8c69378379024d3670f75"}], "stats": {"total": 48, "additions": 35, "deletions": 13}, "files": [{"sha": "b91b52c074cd25ffef100f564d6fc934e7fb4301", "filename": "src/librustc_error_codes/error_codes/E0136.md", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/5c73be167051c1e353df9f372663f901f212953f/src%2Flibrustc_error_codes%2Ferror_codes%2FE0136.md", "raw_url": "https://github.com/rust-lang/rust/raw/5c73be167051c1e353df9f372663f901f212953f/src%2Flibrustc_error_codes%2Ferror_codes%2FE0136.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_error_codes%2Ferror_codes%2FE0136.md?ref=5c73be167051c1e353df9f372663f901f212953f", "patch": "@@ -1,5 +1,4 @@\n-A binary can only have one entry point, and by default that entry point is the\n-function `main()`. If there are multiple such functions, please rename one.\n+More than one `main` function was found.\n \n Erroneous code example:\n \n@@ -14,3 +13,7 @@ fn main() { // error!\n     // ...\n }\n ```\n+\n+A binary can only have one entry point, and by default that entry point is the\n+`main()` function. If there are multiple instances of this function, please\n+rename one of them."}, {"sha": "c2e2f0240f4837abc49343e435b70f78b0cc8d05", "filename": "src/librustc_error_codes/error_codes/E0161.md", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/5c73be167051c1e353df9f372663f901f212953f/src%2Flibrustc_error_codes%2Ferror_codes%2FE0161.md", "raw_url": "https://github.com/rust-lang/rust/raw/5c73be167051c1e353df9f372663f901f212953f/src%2Flibrustc_error_codes%2Ferror_codes%2FE0161.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_error_codes%2Ferror_codes%2FE0161.md?ref=5c73be167051c1e353df9f372663f901f212953f", "patch": "@@ -1,5 +1,4 @@\n-A value was moved. However, its size was not known at compile time, and only\n-values of a known size can be moved.\n+A value was moved whose size was not known at compile time.\n \n Erroneous code example:\n "}, {"sha": "48bb6f4b382836b6ceda03da829b69fb3598af08", "filename": "src/librustc_error_codes/error_codes/E0164.md", "status": "modified", "additions": 29, "deletions": 9, "changes": 38, "blob_url": "https://github.com/rust-lang/rust/blob/5c73be167051c1e353df9f372663f901f212953f/src%2Flibrustc_error_codes%2Ferror_codes%2FE0164.md", "raw_url": "https://github.com/rust-lang/rust/raw/5c73be167051c1e353df9f372663f901f212953f/src%2Flibrustc_error_codes%2Ferror_codes%2FE0164.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_error_codes%2Ferror_codes%2FE0164.md?ref=5c73be167051c1e353df9f372663f901f212953f", "patch": "@@ -1,24 +1,44 @@\n-This error means that an attempt was made to match a struct type enum\n-variant as a non-struct type:\n+Something which is neither a tuple struct nor a tuple variant was used as a\n+pattern.\n+\n+Erroneous code example:\n \n ```compile_fail,E0164\n-enum Foo { B { i: u32 } }\n+enum A {\n+    B,\n+    C,\n+}\n+\n+impl A {\n+    fn new() {}\n+}\n \n-fn bar(foo: Foo) -> u32 {\n+fn bar(foo: A) {\n     match foo {\n-        Foo::B(i) => i, // error E0164\n+        A::new() => (), // error!\n+        _ => {}\n     }\n }\n ```\n \n-Try using `{}` instead:\n+This error means that an attempt was made to match something which is neither a\n+tuple struct nor a tuple variant. Only these two elements are allowed as a\n+pattern:\n \n ```\n-enum Foo { B { i: u32 } }\n+enum A {\n+    B,\n+    C,\n+}\n+\n+impl A {\n+    fn new() {}\n+}\n \n-fn bar(foo: Foo) -> u32 {\n+fn bar(foo: A) {\n     match foo {\n-        Foo::B{i} => i,\n+        A::B => (), // ok!\n+        _ => {}\n     }\n }\n ```"}]}