{"sha": "5b06898d21661414636e35558821173bf16cbf83", "node_id": "C_kwDOAAsO6NoAKDViMDY4OThkMjE2NjE0MTQ2MzZlMzU1NTg4MjExNzNiZjE2Y2JmODM", "commit": {"author": {"name": "Michael Goulet", "email": "michael@errs.io", "date": "2022-10-19T05:28:40Z"}, "committer": {"name": "Michael Goulet", "email": "michael@errs.io", "date": "2022-10-22T06:50:00Z"}, "message": "Check needs_infer before needs_drop in HIR generator analysis", "tree": {"sha": "efdcaf822bed35558e862dd7834e23efb9416d2a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/efdcaf822bed35558e862dd7834e23efb9416d2a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5b06898d21661414636e35558821173bf16cbf83", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5b06898d21661414636e35558821173bf16cbf83", "html_url": "https://github.com/rust-lang/rust/commit/5b06898d21661414636e35558821173bf16cbf83", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5b06898d21661414636e35558821173bf16cbf83/comments", "author": {"login": "compiler-errors", "id": 3674314, "node_id": "MDQ6VXNlcjM2NzQzMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3674314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/compiler-errors", "html_url": "https://github.com/compiler-errors", "followers_url": "https://api.github.com/users/compiler-errors/followers", "following_url": "https://api.github.com/users/compiler-errors/following{/other_user}", "gists_url": "https://api.github.com/users/compiler-errors/gists{/gist_id}", "starred_url": "https://api.github.com/users/compiler-errors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/compiler-errors/subscriptions", "organizations_url": "https://api.github.com/users/compiler-errors/orgs", "repos_url": "https://api.github.com/users/compiler-errors/repos", "events_url": "https://api.github.com/users/compiler-errors/events{/privacy}", "received_events_url": "https://api.github.com/users/compiler-errors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "compiler-errors", "id": 3674314, "node_id": "MDQ6VXNlcjM2NzQzMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3674314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/compiler-errors", "html_url": "https://github.com/compiler-errors", "followers_url": "https://api.github.com/users/compiler-errors/followers", "following_url": "https://api.github.com/users/compiler-errors/following{/other_user}", "gists_url": "https://api.github.com/users/compiler-errors/gists{/gist_id}", "starred_url": "https://api.github.com/users/compiler-errors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/compiler-errors/subscriptions", "organizations_url": "https://api.github.com/users/compiler-errors/orgs", "repos_url": "https://api.github.com/users/compiler-errors/repos", "events_url": "https://api.github.com/users/compiler-errors/events{/privacy}", "received_events_url": "https://api.github.com/users/compiler-errors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "eecde5850cade0c058dc12330081329b31a826c7", "url": "https://api.github.com/repos/rust-lang/rust/commits/eecde5850cade0c058dc12330081329b31a826c7", "html_url": "https://github.com/rust-lang/rust/commit/eecde5850cade0c058dc12330081329b31a826c7"}], "stats": {"total": 21, "additions": 15, "deletions": 6}, "files": [{"sha": "bfe95852aa7b408cd22fc5f6912064fe2eebd67b", "filename": "compiler/rustc_hir_typeck/src/generator_interior/drop_ranges/record_consumed_borrow.rs", "status": "modified", "additions": 11, "deletions": 6, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/5b06898d21661414636e35558821173bf16cbf83/compiler%2Frustc_hir_typeck%2Fsrc%2Fgenerator_interior%2Fdrop_ranges%2Frecord_consumed_borrow.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5b06898d21661414636e35558821173bf16cbf83/compiler%2Frustc_hir_typeck%2Fsrc%2Fgenerator_interior%2Fdrop_ranges%2Frecord_consumed_borrow.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_hir_typeck%2Fsrc%2Fgenerator_interior%2Fdrop_ranges%2Frecord_consumed_borrow.rs?ref=5b06898d21661414636e35558821173bf16cbf83", "patch": "@@ -6,8 +6,11 @@ use crate::{\n use hir::{def_id::DefId, Body, HirId, HirIdMap};\n use rustc_data_structures::fx::FxHashSet;\n use rustc_hir as hir;\n-use rustc_middle::hir::place::{PlaceBase, Projection, ProjectionKind};\n use rustc_middle::ty::{ParamEnv, TyCtxt};\n+use rustc_middle::{\n+    hir::place::{PlaceBase, Projection, ProjectionKind},\n+    ty::TypeVisitable,\n+};\n \n pub(super) fn find_consumed_and_borrowed<'a, 'tcx>(\n     fcx: &'a FnCtxt<'a, 'tcx>,\n@@ -198,11 +201,13 @@ impl<'tcx> expr_use_visitor::Delegate<'tcx> for ExprUseDelegate<'tcx> {\n \n         // If the type being assigned needs dropped, then the mutation counts as a borrow\n         // since it is essentially doing `Drop::drop(&mut x); x = new_value;`.\n-        //\n-        // FIXME(drop-tracking): We need to be more responsible about inference\n-        // variables here, since `needs_drop` is a \"raw\" type query, i.e. it\n-        // basically requires types to have been fully resolved.\n-        if assignee_place.place.base_ty.needs_drop(self.tcx, self.param_env) {\n+        let ty = self.tcx.erase_regions(assignee_place.place.base_ty);\n+        if ty.needs_infer() {\n+            self.tcx.sess.delay_span_bug(\n+                self.tcx.hir().span(assignee_place.hir_id),\n+                &format!(\"inference variables in {ty}\"),\n+            );\n+        } else if ty.needs_drop(self.tcx, self.param_env) {\n             self.places\n                 .borrowed\n                 .insert(TrackedValue::from_place_with_projections_allowed(assignee_place));"}, {"sha": "45d3e22a2135bedac5fe431627bfc1e7d798f279", "filename": "compiler/rustc_hir_typeck/src/generator_interior/mod.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/5b06898d21661414636e35558821173bf16cbf83/compiler%2Frustc_hir_typeck%2Fsrc%2Fgenerator_interior%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5b06898d21661414636e35558821173bf16cbf83/compiler%2Frustc_hir_typeck%2Fsrc%2Fgenerator_interior%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_hir_typeck%2Fsrc%2Fgenerator_interior%2Fmod.rs?ref=5b06898d21661414636e35558821173bf16cbf83", "patch": "@@ -382,6 +382,10 @@ impl<'a, 'tcx> Visitor<'tcx> for InteriorVisitor<'a, 'tcx> {\n             let ty = self.fcx.resolve_vars_if_possible(ty);\n             let ty = self.fcx.tcx.erase_regions(ty);\n             if ty.needs_infer() {\n+                self.fcx\n+                    .tcx\n+                    .sess\n+                    .delay_span_bug(expr.span, &format!(\"inference variables in {ty}\"));\n                 return true;\n             }\n             ty.needs_drop(self.fcx.tcx, self.fcx.param_env)"}]}