{"sha": "f61ad354943ed95700c51a969666a509778640ca", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY2MWFkMzU0OTQzZWQ5NTcwMGM1MWE5Njk2NjZhNTA5Nzc4NjQwY2E=", "commit": {"author": {"name": "Nick Cameron", "email": "ncameron@mozilla.com", "date": "2015-04-29T04:21:04Z"}, "committer": {"name": "Nick Cameron", "email": "ncameron@mozilla.com", "date": "2015-04-29T04:25:52Z"}, "message": "Preserve linebreaks in doc comments", "tree": {"sha": "31a3f9441a129b15e87a21b09d66bd9ca682bc9f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/31a3f9441a129b15e87a21b09d66bd9ca682bc9f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f61ad354943ed95700c51a969666a509778640ca", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f61ad354943ed95700c51a969666a509778640ca", "html_url": "https://github.com/rust-lang/rust/commit/f61ad354943ed95700c51a969666a509778640ca", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f61ad354943ed95700c51a969666a509778640ca/comments", "author": {"login": "nrc", "id": 762626, "node_id": "MDQ6VXNlcjc2MjYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/762626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nrc", "html_url": "https://github.com/nrc", "followers_url": "https://api.github.com/users/nrc/followers", "following_url": "https://api.github.com/users/nrc/following{/other_user}", "gists_url": "https://api.github.com/users/nrc/gists{/gist_id}", "starred_url": "https://api.github.com/users/nrc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nrc/subscriptions", "organizations_url": "https://api.github.com/users/nrc/orgs", "repos_url": "https://api.github.com/users/nrc/repos", "events_url": "https://api.github.com/users/nrc/events{/privacy}", "received_events_url": "https://api.github.com/users/nrc/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nrc", "id": 762626, "node_id": "MDQ6VXNlcjc2MjYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/762626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nrc", "html_url": "https://github.com/nrc", "followers_url": "https://api.github.com/users/nrc/followers", "following_url": "https://api.github.com/users/nrc/following{/other_user}", "gists_url": "https://api.github.com/users/nrc/gists{/gist_id}", "starred_url": "https://api.github.com/users/nrc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nrc/subscriptions", "organizations_url": "https://api.github.com/users/nrc/orgs", "repos_url": "https://api.github.com/users/nrc/repos", "events_url": "https://api.github.com/users/nrc/events{/privacy}", "received_events_url": "https://api.github.com/users/nrc/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "16f905797520febe7a6f0757c09fd7a2758fc70e", "url": "https://api.github.com/repos/rust-lang/rust/commits/16f905797520febe7a6f0757c09fd7a2758fc70e", "html_url": "https://github.com/rust-lang/rust/commit/16f905797520febe7a6f0757c09fd7a2758fc70e"}], "stats": {"total": 44, "additions": 34, "deletions": 10}, "files": [{"sha": "7b18664b6723be999a3968045384017989e73ded", "filename": "src/mod.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/f61ad354943ed95700c51a969666a509778640ca/src%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f61ad354943ed95700c51a969666a509778640ca/src%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fmod.rs?ref=f61ad354943ed95700c51a969666a509778640ca", "patch": "@@ -262,8 +262,8 @@ fn run(args: Vec<String>, write_mode: WriteMode) {\n \n fn main() {\n     let args: Vec<_> = std::env::args().collect();\n-    run(args, WriteMode::Display);\n-    //run(args, WriteMode::Overwrite);\n+    //run(args, WriteMode::Display);\n+    run(args, WriteMode::Overwrite);\n     std::env::set_exit_status(0);\n \n     // TODO unit tests"}, {"sha": "75dcdb12601d3abbf732417b0130f569f43bb06b", "filename": "src/visitor.rs", "status": "modified", "additions": 18, "deletions": 8, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/f61ad354943ed95700c51a969666a509778640ca/src%2Fvisitor.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f61ad354943ed95700c51a969666a509778640ca/src%2Fvisitor.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fvisitor.rs?ref=f61ad354943ed95700c51a969666a509778640ca", "patch": "@@ -257,19 +257,29 @@ impl<'a> FmtVisitor<'a> {\n                 return None;\n             }\n \n-            result.push_str(&self.snippet(a.span));\n+            let a_str = self.snippet(a.span);\n \n-            if i < attrs.len() - 1 {\n-                result.push('\\n');\n-                result.push_str(&indent);\n-\n-                let comment = self.snippet(codemap::mk_sp(a.span.hi, attrs[i+1].span.lo));\n+            if i > 0 {\n+                let comment = self.snippet(codemap::mk_sp(attrs[i-1].span.hi, a.span.lo));\n+                // This particular horror show is to preserve line breaks in between doc\n+                // comments. An alternative would be to force such line breaks to start\n+                // with the usual doc comment token.\n+                let multi_line = a_str.starts_with(\"//\") && comment.matches('\\n').count() > 1;\n                 let comment = comment.trim();\n                 if comment.len() > 0 {\n-                    result.push_str(&self.snippet(a.span));\n-                    result.push('\\n');\n+                    result.push_str(&indent);\n                     result.push_str(comment);\n+                    result.push('\\n');\n+                } else if multi_line {\n+                    result.push('\\n');\n                 }\n+                result.push_str(&indent);\n+            }\n+\n+            result.push_str(&a_str);\n+\n+            if i < attrs.len() -1 {\n+                result.push('\\n');\n             }\n         }\n "}, {"sha": "ee7da10081e2b49f8028dbc6f9e7d6bee0ca8566", "filename": "tests/idem/attrib.rs", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/f61ad354943ed95700c51a969666a509778640ca/tests%2Fidem%2Fattrib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f61ad354943ed95700c51a969666a509778640ca/tests%2Fidem%2Fattrib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fidem%2Fattrib.rs?ref=f61ad354943ed95700c51a969666a509778640ca", "patch": "@@ -1,12 +1,26 @@\n // Test attributes and doc comments are preserved.\n \n+/// Blah blah blah.\n+/// Blah blah blah.\n+/// Blah blah blah.\n+/// Blah blah blah.\n+\n /// Blah blah blah.\n impl Bar {\n+    /// Blah blah blooo.\n+    /// Blah blah blooo.\n+    /// Blah blah blooo.\n     /// Blah blah blooo.\n     #[an_attribute]\n     fn foo(&mut self) -> isize {\n     }\n \n+    /// Blah blah bing.\n+    /// Blah blah bing.\n+    /// Blah blah bing.\n+\n+    /// Blah blah bing.\n+    /// Blah blah bing.\n     /// Blah blah bing.\n     pub fn f2(self) {\n         (foo, bar)"}]}