{"sha": "3c29fc5f6cd69b1299cf5482a6bc991ba6b86a0f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNjMjlmYzVmNmNkNjliMTI5OWNmNTQ4MmE2YmM5OTFiYTZiODZhMGY=", "commit": {"author": {"name": "Seo Sanghyeon", "email": "sanxiyn@gmail.com", "date": "2016-06-29T12:53:01Z"}, "committer": {"name": "Seo Sanghyeon", "email": "sanxiyn@gmail.com", "date": "2016-06-29T14:40:29Z"}, "message": "Fix pretty-printing of lifetime bound", "tree": {"sha": "a792d64db834000861ffa3c59239849fd61f3103", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a792d64db834000861ffa3c59239849fd61f3103"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3c29fc5f6cd69b1299cf5482a6bc991ba6b86a0f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3c29fc5f6cd69b1299cf5482a6bc991ba6b86a0f", "html_url": "https://github.com/rust-lang/rust/commit/3c29fc5f6cd69b1299cf5482a6bc991ba6b86a0f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3c29fc5f6cd69b1299cf5482a6bc991ba6b86a0f/comments", "author": {"login": "sanxiyn", "id": 45249, "node_id": "MDQ6VXNlcjQ1MjQ5", "avatar_url": "https://avatars.githubusercontent.com/u/45249?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sanxiyn", "html_url": "https://github.com/sanxiyn", "followers_url": "https://api.github.com/users/sanxiyn/followers", "following_url": "https://api.github.com/users/sanxiyn/following{/other_user}", "gists_url": "https://api.github.com/users/sanxiyn/gists{/gist_id}", "starred_url": "https://api.github.com/users/sanxiyn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sanxiyn/subscriptions", "organizations_url": "https://api.github.com/users/sanxiyn/orgs", "repos_url": "https://api.github.com/users/sanxiyn/repos", "events_url": "https://api.github.com/users/sanxiyn/events{/privacy}", "received_events_url": "https://api.github.com/users/sanxiyn/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sanxiyn", "id": 45249, "node_id": "MDQ6VXNlcjQ1MjQ5", "avatar_url": "https://avatars.githubusercontent.com/u/45249?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sanxiyn", "html_url": "https://github.com/sanxiyn", "followers_url": "https://api.github.com/users/sanxiyn/followers", "following_url": "https://api.github.com/users/sanxiyn/following{/other_user}", "gists_url": "https://api.github.com/users/sanxiyn/gists{/gist_id}", "starred_url": "https://api.github.com/users/sanxiyn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sanxiyn/subscriptions", "organizations_url": "https://api.github.com/users/sanxiyn/orgs", "repos_url": "https://api.github.com/users/sanxiyn/repos", "events_url": "https://api.github.com/users/sanxiyn/events{/privacy}", "received_events_url": "https://api.github.com/users/sanxiyn/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "366de839ae9794411419c5b579c829e18adde613", "url": "https://api.github.com/repos/rust-lang/rust/commits/366de839ae9794411419c5b579c829e18adde613", "html_url": "https://github.com/rust-lang/rust/commit/366de839ae9794411419c5b579c829e18adde613"}], "stats": {"total": 56, "additions": 33, "deletions": 23}, "files": [{"sha": "94b71661bc21ec7714611162a27dadabbbc726ca", "filename": "src/libsyntax/print/pprust.rs", "status": "modified", "additions": 17, "deletions": 22, "changes": 39, "blob_url": "https://github.com/rust-lang/rust/blob/3c29fc5f6cd69b1299cf5482a6bc991ba6b86a0f/src%2Flibsyntax%2Fprint%2Fpprust.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3c29fc5f6cd69b1299cf5482a6bc991ba6b86a0f/src%2Flibsyntax%2Fprint%2Fpprust.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fprint%2Fpprust.rs?ref=3c29fc5f6cd69b1299cf5482a6bc991ba6b86a0f", "patch": "@@ -1338,7 +1338,7 @@ impl<'a> State<'a> {\n                 if comma {\n                     try!(self.word_space(\",\"))\n                 }\n-                try!(self.print_lifetime_def(lifetime_def));\n+                try!(self.print_lifetime_bounds(&lifetime_def.lifetime, &lifetime_def.bounds));\n                 comma = true;\n             }\n             try!(word(&mut self.s, \">\"));\n@@ -2749,16 +2749,20 @@ impl<'a> State<'a> {\n         self.print_name(lifetime.name)\n     }\n \n-    pub fn print_lifetime_def(&mut self,\n-                              lifetime: &ast::LifetimeDef)\n-                              -> io::Result<()>\n+    pub fn print_lifetime_bounds(&mut self,\n+                                 lifetime: &ast::Lifetime,\n+                                 bounds: &[ast::Lifetime])\n+                                 -> io::Result<()>\n     {\n-        try!(self.print_lifetime(&lifetime.lifetime));\n-        let mut sep = \":\";\n-        for v in &lifetime.bounds {\n-            try!(word(&mut self.s, sep));\n-            try!(self.print_lifetime(v));\n-            sep = \"+\";\n+        try!(self.print_lifetime(lifetime));\n+        if !bounds.is_empty() {\n+            try!(word(&mut self.s, \": \"));\n+            for (i, bound) in bounds.iter().enumerate() {\n+                if i != 0 {\n+                    try!(word(&mut self.s, \" + \"));\n+                }\n+                try!(self.print_lifetime(bound));\n+            }\n         }\n         Ok(())\n     }\n@@ -2781,8 +2785,8 @@ impl<'a> State<'a> {\n \n         try!(self.commasep(Inconsistent, &ints[..], |s, &idx| {\n             if idx < generics.lifetimes.len() {\n-                let lifetime = &generics.lifetimes[idx];\n-                s.print_lifetime_def(lifetime)\n+                let lifetime_def = &generics.lifetimes[idx];\n+                s.print_lifetime_bounds(&lifetime_def.lifetime, &lifetime_def.bounds)\n             } else {\n                 let idx = idx - generics.lifetimes.len();\n                 let param = &generics.ty_params[idx];\n@@ -2833,16 +2837,7 @@ impl<'a> State<'a> {\n                 ast::WherePredicate::RegionPredicate(ast::WhereRegionPredicate{ref lifetime,\n                                                                                ref bounds,\n                                                                                ..}) => {\n-                    try!(self.print_lifetime(lifetime));\n-                    try!(word(&mut self.s, \":\"));\n-\n-                    for (i, bound) in bounds.iter().enumerate() {\n-                        try!(self.print_lifetime(bound));\n-\n-                        if i != 0 {\n-                            try!(word(&mut self.s, \":\"));\n-                        }\n-                    }\n+                    try!(self.print_lifetime_bounds(lifetime, bounds));\n                 }\n                 ast::WherePredicate::EqPredicate(ast::WhereEqPredicate{ref path, ref ty, ..}) => {\n                     try!(self.print_path(path, false, 0));"}, {"sha": "2cc7153b7f5ce57561c1107b3ad82903c180e0db", "filename": "src/test/pretty/lifetime.rs", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/3c29fc5f6cd69b1299cf5482a6bc991ba6b86a0f/src%2Ftest%2Fpretty%2Flifetime.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3c29fc5f6cd69b1299cf5482a6bc991ba6b86a0f/src%2Ftest%2Fpretty%2Flifetime.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fpretty%2Flifetime.rs?ref=3c29fc5f6cd69b1299cf5482a6bc991ba6b86a0f", "patch": "@@ -0,0 +1,15 @@\n+// Copyright 2016 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// pp-exact\n+\n+fn f1<'a, 'b, 'c>(_x: &'a u32, _y: &'b u32, _z: &'c u32) where 'c: 'a + 'b { }\n+\n+fn main() { }"}, {"sha": "388064a8be8546cd0078ef0abf0899b00d1c733d", "filename": "src/test/pretty/where-clauses.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3c29fc5f6cd69b1299cf5482a6bc991ba6b86a0f/src%2Ftest%2Fpretty%2Fwhere-clauses.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3c29fc5f6cd69b1299cf5482a6bc991ba6b86a0f/src%2Ftest%2Fpretty%2Fwhere-clauses.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fpretty%2Fwhere-clauses.rs?ref=3c29fc5f6cd69b1299cf5482a6bc991ba6b86a0f", "patch": "@@ -10,6 +10,6 @@\n \n // pp-exact\n \n-fn f<'a, 'b, T>(t: T) -> isize where T: 'a, 'a:'b, T: Eq { 0 }\n+fn f<'a, 'b, T>(t: T) -> isize where T: 'a, 'a: 'b, T: Eq { 0 }\n \n fn main() { }"}]}