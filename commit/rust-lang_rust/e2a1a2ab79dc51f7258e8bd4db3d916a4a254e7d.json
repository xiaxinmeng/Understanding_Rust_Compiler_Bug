{"sha": "e2a1a2ab79dc51f7258e8bd4db3d916a4a254e7d", "node_id": "C_kwDOAAsO6NoAKGUyYTFhMmFiNzlkYzUxZjcyNThlOGJkNGRiM2Q5MTZhNGEyNTRlN2Q", "commit": {"author": {"name": "Lukas Markeffsky", "email": "@", "date": "2023-02-05T21:51:37Z"}, "committer": {"name": "Lukas Markeffsky", "email": "@", "date": "2023-02-05T21:51:37Z"}, "message": "yet another ui test", "tree": {"sha": "148b23e5c4ba4d7476c9cdae04cc56f64f263ac3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/148b23e5c4ba4d7476c9cdae04cc56f64f263ac3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e2a1a2ab79dc51f7258e8bd4db3d916a4a254e7d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e2a1a2ab79dc51f7258e8bd4db3d916a4a254e7d", "html_url": "https://github.com/rust-lang/rust/commit/e2a1a2ab79dc51f7258e8bd4db3d916a4a254e7d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e2a1a2ab79dc51f7258e8bd4db3d916a4a254e7d/comments", "author": null, "committer": null, "parents": [{"sha": "9d110847ab7f6aef56a8cd20cb6cea4fbcc51cd9", "url": "https://api.github.com/repos/rust-lang/rust/commits/9d110847ab7f6aef56a8cd20cb6cea4fbcc51cd9", "html_url": "https://github.com/rust-lang/rust/commit/9d110847ab7f6aef56a8cd20cb6cea4fbcc51cd9"}], "stats": {"total": 42, "additions": 42, "deletions": 0}, "files": [{"sha": "517a172089fe93e720a276ed51e89c822ee557c1", "filename": "tests/ui/mir/issue-107691.rs", "status": "added", "additions": 42, "deletions": 0, "changes": 42, "blob_url": "https://github.com/rust-lang/rust/blob/e2a1a2ab79dc51f7258e8bd4db3d916a4a254e7d/tests%2Fui%2Fmir%2Fissue-107691.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e2a1a2ab79dc51f7258e8bd4db3d916a4a254e7d/tests%2Fui%2Fmir%2Fissue-107691.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmir%2Fissue-107691.rs?ref=e2a1a2ab79dc51f7258e8bd4db3d916a4a254e7d", "patch": "@@ -0,0 +1,42 @@\n+// build-pass\n+// compile-flags: -C opt-level=3\n+\n+#![crate_type = \"lib\"]\n+\n+pub trait Archive {\n+    type Archived;\n+    type Resolver;\n+\n+    fn resolve(resolver: Self::Resolver, out: *mut Self::Archived);\n+}\n+\n+pub type Archived<T> = <T as Archive>::Archived;\n+pub type Resolver<T> = <T as Archive>::Resolver;\n+\n+pub struct Record<'a> {\n+    _payload: &'a [u8],\n+}\n+\n+pub struct ArchivedRecord<'a>\n+where\n+    &'a [u8]: Archive,\n+{\n+    _payload: Archived<&'a [u8]>,\n+}\n+\n+pub struct RecordResolver<'a>\n+where\n+    &'a [u8]: Archive,\n+{\n+    _payload: Resolver<&'a [u8]>,\n+}\n+\n+impl<'a> Archive for Record<'a>\n+where\n+    &'a [u8]: Archive,\n+{\n+    type Archived = ArchivedRecord<'a>;\n+    type Resolver = RecordResolver<'a>;\n+\n+    fn resolve(_resolver: Self::Resolver, _out: *mut Self::Archived) {}\n+}"}]}