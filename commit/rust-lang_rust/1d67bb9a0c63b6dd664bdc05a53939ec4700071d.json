{"sha": "1d67bb9a0c63b6dd664bdc05a53939ec4700071d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjFkNjdiYjlhMGM2M2I2ZGQ2NjRiZGMwNWE1MzkzOWVjNDcwMDA3MWQ=", "commit": {"author": {"name": "Corey Farwell", "email": "coreyf@rwell.org", "date": "2017-02-08T03:54:21Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2017-02-08T03:54:21Z"}, "message": "Rollup merge of #39372 - seanmonstar:more-addr-froms, r=alexcrichton\n\nA few ergonomic From impls for SocketAddr/IpAddr\n\nMy main motivation is removing things like this: `\"127.0.0.1:3000\".parse().unwrap()`. Instead, this now works: `SocketAddr::from(([127, 0, 0, 1], 3000))` or even `([127, 0, 0, 1], 3000).into())` when passing to a function.", "tree": {"sha": "defe7372c566d4b51e3a25c5af597c12041eabb8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/defe7372c566d4b51e3a25c5af597c12041eabb8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1d67bb9a0c63b6dd664bdc05a53939ec4700071d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1d67bb9a0c63b6dd664bdc05a53939ec4700071d", "html_url": "https://github.com/rust-lang/rust/commit/1d67bb9a0c63b6dd664bdc05a53939ec4700071d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1d67bb9a0c63b6dd664bdc05a53939ec4700071d/comments", "author": {"login": "frewsxcv", "id": 416575, "node_id": "MDQ6VXNlcjQxNjU3NQ==", "avatar_url": "https://avatars.githubusercontent.com/u/416575?v=4", "gravatar_id": "", "url": "https://api.github.com/users/frewsxcv", "html_url": "https://github.com/frewsxcv", "followers_url": "https://api.github.com/users/frewsxcv/followers", "following_url": "https://api.github.com/users/frewsxcv/following{/other_user}", "gists_url": "https://api.github.com/users/frewsxcv/gists{/gist_id}", "starred_url": "https://api.github.com/users/frewsxcv/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/frewsxcv/subscriptions", "organizations_url": "https://api.github.com/users/frewsxcv/orgs", "repos_url": "https://api.github.com/users/frewsxcv/repos", "events_url": "https://api.github.com/users/frewsxcv/events{/privacy}", "received_events_url": "https://api.github.com/users/frewsxcv/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "19977911ce8411db27e24c93a581b856c82f5f06", "url": "https://api.github.com/repos/rust-lang/rust/commits/19977911ce8411db27e24c93a581b856c82f5f06", "html_url": "https://github.com/rust-lang/rust/commit/19977911ce8411db27e24c93a581b856c82f5f06"}, {"sha": "cd603e43241561edf9b2fa56a65a37afe20e8610", "url": "https://api.github.com/repos/rust-lang/rust/commits/cd603e43241561edf9b2fa56a65a37afe20e8610", "html_url": "https://github.com/rust-lang/rust/commit/cd603e43241561edf9b2fa56a65a37afe20e8610"}], "stats": {"total": 29, "additions": 29, "deletions": 0}, "files": [{"sha": "84c4acb8d9247c4365ca33db13653297f405a914", "filename": "src/libstd/net/addr.rs", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/1d67bb9a0c63b6dd664bdc05a53939ec4700071d/src%2Flibstd%2Fnet%2Faddr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1d67bb9a0c63b6dd664bdc05a53939ec4700071d/src%2Flibstd%2Fnet%2Faddr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fnet%2Faddr.rs?ref=1d67bb9a0c63b6dd664bdc05a53939ec4700071d", "patch": "@@ -456,6 +456,13 @@ impl From<SocketAddrV6> for SocketAddr {\n     }\n }\n \n+#[stable(feature = \"addr_from_into_ip\", since = \"1.17.0\")]\n+impl<I: Into<IpAddr>> From<(I, u16)> for SocketAddr {\n+    fn from(pieces: (I, u16)) -> SocketAddr {\n+        SocketAddr::new(pieces.0.into(), pieces.1)\n+    }\n+}\n+\n impl<'a> IntoInner<(*const c::sockaddr, c::socklen_t)> for &'a SocketAddr {\n     fn into_inner(self) -> (*const c::sockaddr, c::socklen_t) {\n         match *self {"}, {"sha": "5d6e8d319d7b259f31d3e785ad9a9ea2484d038a", "filename": "src/libstd/net/ip.rs", "status": "modified", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/1d67bb9a0c63b6dd664bdc05a53939ec4700071d/src%2Flibstd%2Fnet%2Fip.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1d67bb9a0c63b6dd664bdc05a53939ec4700071d/src%2Flibstd%2Fnet%2Fip.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fnet%2Fip.rs?ref=1d67bb9a0c63b6dd664bdc05a53939ec4700071d", "patch": "@@ -656,6 +656,13 @@ impl From<[u8; 4]> for Ipv4Addr {\n     }\n }\n \n+#[stable(feature = \"ip_from_slice\", since = \"1.17.0\")]\n+impl From<[u8; 4]> for IpAddr {\n+    fn from(octets: [u8; 4]) -> IpAddr {\n+        IpAddr::V4(Ipv4Addr::from(octets))\n+    }\n+}\n+\n impl Ipv6Addr {\n     /// Creates a new IPv6 address from eight 16-bit segments.\n     ///\n@@ -1186,6 +1193,21 @@ impl From<[u16; 8]> for Ipv6Addr {\n     }\n }\n \n+\n+#[stable(feature = \"ip_from_slice\", since = \"1.17.0\")]\n+impl From<[u8; 16]> for IpAddr {\n+    fn from(octets: [u8; 16]) -> IpAddr {\n+        IpAddr::V6(Ipv6Addr::from(octets))\n+    }\n+}\n+\n+#[stable(feature = \"ip_from_slice\", since = \"1.17.0\")]\n+impl From<[u16; 8]> for IpAddr {\n+    fn from(segments: [u16; 8]) -> IpAddr {\n+        IpAddr::V6(Ipv6Addr::from(segments))\n+    }\n+}\n+\n // Tests for this module\n #[cfg(all(test, not(target_os = \"emscripten\")))]\n mod tests {"}]}