{"sha": "41433795e75fa96e4ad880802879da7892d12fad", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQxNDMzNzk1ZTc1ZmE5NmU0YWQ4ODA4MDI4NzlkYTc4OTJkMTJmYWQ=", "commit": {"author": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2021-07-16T08:08:08Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-07-16T08:08:08Z"}, "message": "Rollup merge of #87161 - sexxi-goose:fix-issue-87097, r=nikomatsakis\n\nRFC2229: Use the correct place type\n\nCloses https://github.com/rust-lang/rust/issues/87097\n\nThe ICE occurred because instead of looking at the type of the place after all the projections are applied, we instead looked at the `base_ty` of the Place to decide whether a discriminant should be read of not. This lead to two issues:\n\n1. the kind of the type is not necessarily `Adt` since we only look at the `base_ty`, it could be instead `Ref` for example\n2. if the kind of the type is `Adt` you could still be looking at the wrong variant to make a decision on whether the discriminant should be read or not\n\nr? `@nikomatsakis`", "tree": {"sha": "d31facc98fa12aef40e6121e63978329a0a2f38b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d31facc98fa12aef40e6121e63978329a0a2f38b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/41433795e75fa96e4ad880802879da7892d12fad", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJg8T5pCRBK7hj4Ov3rIwAAieYIAKX5QST/htyzYY6QcqxxOJwZ\nFAfmTr0oBdDZ8hwxgykeUaw+jHa1r6dA4ozEdZ2NnE0HUgEWzJD0QbnX+10GT9sL\nwXgfSbrbhp0liBYsvc7ewTsoO2N+QLe1lzcZEGeLUZDqTtsxTbhQrOoLpe9M4VuV\nsVUhKyVGO2obCsKNWedbiMuFrv4inoF2/clsuSjely6ZYV8FhD1UEZH6DP9hJonu\neo3GYbH/V2Q64WFs0mgViDMMRaVN2JZtWFUbOc8BkisQ9J38VvygV1clc7UcrW1q\nFmXUvBVYzk3PVDU2TuzlUmWlYf77uWrqi5TWq3hzzA62jKYEzqUvNlQ408PwM3s=\n=C0NK\n-----END PGP SIGNATURE-----\n", "payload": "tree d31facc98fa12aef40e6121e63978329a0a2f38b\nparent c1b9bbf1e78b932b857849330241f742e01238de\nparent 9fe470b620430775d084130ccd9333c15deb54d0\nauthor Guillaume Gomez <guillaume1.gomez@gmail.com> 1626422888 +0200\ncommitter GitHub <noreply@github.com> 1626422888 +0200\n\nRollup merge of #87161 - sexxi-goose:fix-issue-87097, r=nikomatsakis\n\nRFC2229: Use the correct place type\n\nCloses https://github.com/rust-lang/rust/issues/87097\n\nThe ICE occurred because instead of looking at the type of the place after all the projections are applied, we instead looked at the `base_ty` of the Place to decide whether a discriminant should be read of not. This lead to two issues:\n\n1. the kind of the type is not necessarily `Adt` since we only look at the `base_ty`, it could be instead `Ref` for example\n2. if the kind of the type is `Adt` you could still be looking at the wrong variant to make a decision on whether the discriminant should be read or not\n\nr? `@nikomatsakis`\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/41433795e75fa96e4ad880802879da7892d12fad", "html_url": "https://github.com/rust-lang/rust/commit/41433795e75fa96e4ad880802879da7892d12fad", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/41433795e75fa96e4ad880802879da7892d12fad/comments", "author": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c1b9bbf1e78b932b857849330241f742e01238de", "url": "https://api.github.com/repos/rust-lang/rust/commits/c1b9bbf1e78b932b857849330241f742e01238de", "html_url": "https://github.com/rust-lang/rust/commit/c1b9bbf1e78b932b857849330241f742e01238de"}, {"sha": "9fe470b620430775d084130ccd9333c15deb54d0", "url": "https://api.github.com/repos/rust-lang/rust/commits/9fe470b620430775d084130ccd9333c15deb54d0", "html_url": "https://github.com/rust-lang/rust/commit/9fe470b620430775d084130ccd9333c15deb54d0"}], "stats": {"total": 76, "additions": 74, "deletions": 2}, "files": [{"sha": "806f1a2711c012b9d52d7830d5d40efd755a5b7a", "filename": "compiler/rustc_typeck/src/expr_use_visitor.rs", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/41433795e75fa96e4ad880802879da7892d12fad/compiler%2Frustc_typeck%2Fsrc%2Fexpr_use_visitor.rs", "raw_url": "https://github.com/rust-lang/rust/raw/41433795e75fa96e4ad880802879da7892d12fad/compiler%2Frustc_typeck%2Fsrc%2Fexpr_use_visitor.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fexpr_use_visitor.rs?ref=41433795e75fa96e4ad880802879da7892d12fad", "patch": "@@ -252,12 +252,16 @@ impl<'a, 'tcx> ExprUseVisitor<'a, 'tcx> {\n                             | PatKind::Path(..)\n                             | PatKind::Struct(..)\n                             | PatKind::Tuple(..) => {\n-                                // If the PatKind is a TupleStruct, Struct or Tuple then we want to check\n+                                // If the PatKind is a TupleStruct, Path, Struct or Tuple then we want to check\n                                 // whether the Variant is a MultiVariant or a SingleVariant. We only want\n                                 // to borrow discr if it is a MultiVariant.\n                                 // If it is a SingleVariant and creates a binding we will handle that when\n                                 // this callback gets called again.\n-                                if let ty::Adt(def, _) = place.place.base_ty.kind() {\n+\n+                                // Get the type of the Place after all projections have been applied\n+                                let place_ty = place.place.ty();\n+\n+                                if let ty::Adt(def, _) = place_ty.kind() {\n                                     if def.variants.len() > 1 {\n                                         needs_to_be_read = true;\n                                     }"}, {"sha": "241ddcb83e10989379c98b10db23ec1efa92f899", "filename": "src/test/ui/closures/2229_closure_analysis/issue-87097.rs", "status": "added", "additions": 35, "deletions": 0, "changes": 35, "blob_url": "https://github.com/rust-lang/rust/blob/41433795e75fa96e4ad880802879da7892d12fad/src%2Ftest%2Fui%2Fclosures%2F2229_closure_analysis%2Fissue-87097.rs", "raw_url": "https://github.com/rust-lang/rust/raw/41433795e75fa96e4ad880802879da7892d12fad/src%2Ftest%2Fui%2Fclosures%2F2229_closure_analysis%2Fissue-87097.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fclosures%2F2229_closure_analysis%2Fissue-87097.rs?ref=41433795e75fa96e4ad880802879da7892d12fad", "patch": "@@ -0,0 +1,35 @@\n+// run-pass\n+// edition:2021\n+\n+enum Variant {\n+    A,\n+    B, //~ WARNING: variant is never constructed: `B`\n+}\n+\n+struct A {\n+    field: Variant,\n+}\n+\n+fn discriminant_is_a_ref() {\n+    let here = A { field: Variant::A };\n+    let out_ref = &here.field;\n+\n+    || match out_ref { //~ WARNING: unused closure that must be used\n+        Variant::A => (),\n+        Variant::B => (),\n+    };\n+}\n+\n+fn discriminant_is_a_field() {\n+    let here = A { field: Variant::A };\n+\n+    || match here.field { //~ WARNING: unused closure that must be used\n+        Variant::A => (),\n+        Variant::B => (),\n+    };\n+}\n+\n+fn main() {\n+    discriminant_is_a_ref();\n+    discriminant_is_a_field();\n+}"}, {"sha": "38f2929a05f2dd2de5786a9ac14b2d072ca1aa2d", "filename": "src/test/ui/closures/2229_closure_analysis/issue-87097.stderr", "status": "added", "additions": 33, "deletions": 0, "changes": 33, "blob_url": "https://github.com/rust-lang/rust/blob/41433795e75fa96e4ad880802879da7892d12fad/src%2Ftest%2Fui%2Fclosures%2F2229_closure_analysis%2Fissue-87097.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/41433795e75fa96e4ad880802879da7892d12fad/src%2Ftest%2Fui%2Fclosures%2F2229_closure_analysis%2Fissue-87097.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fclosures%2F2229_closure_analysis%2Fissue-87097.stderr?ref=41433795e75fa96e4ad880802879da7892d12fad", "patch": "@@ -0,0 +1,33 @@\n+warning: variant is never constructed: `B`\n+  --> $DIR/issue-87097.rs:6:5\n+   |\n+LL |     B,\n+   |     ^\n+   |\n+   = note: `#[warn(dead_code)]` on by default\n+\n+warning: unused closure that must be used\n+  --> $DIR/issue-87097.rs:17:5\n+   |\n+LL | /     || match out_ref {\n+LL | |         Variant::A => (),\n+LL | |         Variant::B => (),\n+LL | |     };\n+   | |______^\n+   |\n+   = note: `#[warn(unused_must_use)]` on by default\n+   = note: closures are lazy and do nothing unless called\n+\n+warning: unused closure that must be used\n+  --> $DIR/issue-87097.rs:26:5\n+   |\n+LL | /     || match here.field {\n+LL | |         Variant::A => (),\n+LL | |         Variant::B => (),\n+LL | |     };\n+   | |______^\n+   |\n+   = note: closures are lazy and do nothing unless called\n+\n+warning: 3 warnings emitted\n+"}]}