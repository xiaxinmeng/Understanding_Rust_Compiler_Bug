{"sha": "6cc502c986d42da407e26a49d4f09f21d3072fcb", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZjYzUwMmM5ODZkNDJkYTQwN2UyNmE0OWQ0ZjA5ZjIxZDMwNzJmY2I=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2016-03-22T04:07:28Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2016-03-22T04:07:28Z"}, "message": "Auto merge of #32253 - durka:derive-31886, r=alexcrichton\n\nderive: assume enum repr defaults to isize\n\nderive: assume enum repr defaults to isize\n\nFixes #31886.\n\nSpawned from #32139.\n\nr? @alexcrichton", "tree": {"sha": "29fd917cf34d4785cf73c9fcc32c140a2c1999d1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/29fd917cf34d4785cf73c9fcc32c140a2c1999d1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6cc502c986d42da407e26a49d4f09f21d3072fcb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6cc502c986d42da407e26a49d4f09f21d3072fcb", "html_url": "https://github.com/rust-lang/rust/commit/6cc502c986d42da407e26a49d4f09f21d3072fcb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6cc502c986d42da407e26a49d4f09f21d3072fcb/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4621dd21715c2abee70f3057c608d1ee9c3e8b84", "url": "https://api.github.com/repos/rust-lang/rust/commits/4621dd21715c2abee70f3057c608d1ee9c3e8b84", "html_url": "https://github.com/rust-lang/rust/commit/4621dd21715c2abee70f3057c608d1ee9c3e8b84"}, {"sha": "9d0748f7eb75c422b61446f846251177faffeb45", "url": "https://api.github.com/repos/rust-lang/rust/commits/9d0748f7eb75c422b61446f846251177faffeb45", "html_url": "https://github.com/rust-lang/rust/commit/9d0748f7eb75c422b61446f846251177faffeb45"}], "stats": {"total": 22, "additions": 21, "deletions": 1}, "files": [{"sha": "6dac2f5f9e515b2669247ef002bb35ffe1667bb7", "filename": "src/libsyntax_ext/deriving/generic/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6cc502c986d42da407e26a49d4f09f21d3072fcb/src%2Flibsyntax_ext%2Fderiving%2Fgeneric%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6cc502c986d42da407e26a49d4f09f21d3072fcb/src%2Flibsyntax_ext%2Fderiving%2Fgeneric%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax_ext%2Fderiving%2Fgeneric%2Fmod.rs?ref=6cc502c986d42da407e26a49d4f09f21d3072fcb", "patch": "@@ -758,7 +758,7 @@ impl<'a> TraitDef<'a> {\n \n fn find_repr_type_name(diagnostic: &Handler,\n                        type_attrs: &[ast::Attribute]) -> &'static str {\n-    let mut repr_type_name = \"i32\";\n+    let mut repr_type_name = \"isize\";\n     for a in type_attrs {\n         for r in &attr::find_repr_attrs(diagnostic, a) {\n             repr_type_name = match *r {"}, {"sha": "3a243330ad9b06f4b70cb9cc9361b490ca37e3cb", "filename": "src/test/compile-fail/enum-discrim-autosizing.rs", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/6cc502c986d42da407e26a49d4f09f21d3072fcb/src%2Ftest%2Fcompile-fail%2Fenum-discrim-autosizing.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6cc502c986d42da407e26a49d4f09f21d3072fcb/src%2Ftest%2Fcompile-fail%2Fenum-discrim-autosizing.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fenum-discrim-autosizing.rs?ref=6cc502c986d42da407e26a49d4f09f21d3072fcb", "patch": "@@ -0,0 +1,20 @@\n+// Copyright 2016 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// With no repr attribute the discriminant will default to isize.\n+// On 32-bit architectures this is equivalent to i32 so the variants\n+// collide. On other architectures we need compilation to fail anyway,\n+// so force the repr.\n+#[cfg_attr(not(target_pointer_width = \"32\"), repr(i32))]\n+enum Eu64 {\n+    Au64 = 0,\n+    Bu64 = 0x8000_0000_0000_0000 //~ERROR already exists\n+}\n+"}]}