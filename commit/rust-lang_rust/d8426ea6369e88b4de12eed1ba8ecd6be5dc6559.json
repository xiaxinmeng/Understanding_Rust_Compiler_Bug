{"sha": "d8426ea6369e88b4de12eed1ba8ecd6be5dc6559", "node_id": "C_kwDOAAsO6NoAKGQ4NDI2ZWE2MzY5ZTg4YjRkZTEyZWVkMWJhOGVjZDZiZTVkYzY1NTk", "commit": {"author": {"name": "Matthew Jasper", "email": "mjjasper1@gmail.com", "date": "2021-10-28T20:48:21Z"}, "committer": {"name": "Matthew Jasper", "email": "mjjasper1@gmail.com", "date": "2021-10-28T20:48:21Z"}, "message": "Remove `ModData` from rustc_metadata\n\nThis avoids having to decode 2 `Lazy`s when decoding a modules exports.", "tree": {"sha": "bae86a2edc06025c91ea8301840a1a927d1f2d16", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bae86a2edc06025c91ea8301840a1a927d1f2d16"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d8426ea6369e88b4de12eed1ba8ecd6be5dc6559", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d8426ea6369e88b4de12eed1ba8ecd6be5dc6559", "html_url": "https://github.com/rust-lang/rust/commit/d8426ea6369e88b4de12eed1ba8ecd6be5dc6559", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d8426ea6369e88b4de12eed1ba8ecd6be5dc6559/comments", "author": {"login": "matthewjasper", "id": 20113453, "node_id": "MDQ6VXNlcjIwMTEzNDUz", "avatar_url": "https://avatars.githubusercontent.com/u/20113453?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthewjasper", "html_url": "https://github.com/matthewjasper", "followers_url": "https://api.github.com/users/matthewjasper/followers", "following_url": "https://api.github.com/users/matthewjasper/following{/other_user}", "gists_url": "https://api.github.com/users/matthewjasper/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthewjasper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthewjasper/subscriptions", "organizations_url": "https://api.github.com/users/matthewjasper/orgs", "repos_url": "https://api.github.com/users/matthewjasper/repos", "events_url": "https://api.github.com/users/matthewjasper/events{/privacy}", "received_events_url": "https://api.github.com/users/matthewjasper/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matthewjasper", "id": 20113453, "node_id": "MDQ6VXNlcjIwMTEzNDUz", "avatar_url": "https://avatars.githubusercontent.com/u/20113453?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthewjasper", "html_url": "https://github.com/matthewjasper", "followers_url": "https://api.github.com/users/matthewjasper/followers", "following_url": "https://api.github.com/users/matthewjasper/following{/other_user}", "gists_url": "https://api.github.com/users/matthewjasper/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthewjasper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthewjasper/subscriptions", "organizations_url": "https://api.github.com/users/matthewjasper/orgs", "repos_url": "https://api.github.com/users/matthewjasper/repos", "events_url": "https://api.github.com/users/matthewjasper/events{/privacy}", "received_events_url": "https://api.github.com/users/matthewjasper/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fabede185151d10019e41273d056b36990d76399", "url": "https://api.github.com/repos/rust-lang/rust/commits/fabede185151d10019e41273d056b36990d76399", "html_url": "https://github.com/rust-lang/rust/commit/fabede185151d10019e41273d056b36990d76399"}], "stats": {"total": 18, "additions": 5, "deletions": 13}, "files": [{"sha": "5e90aec003e9b1a20e381b1069059a87b1125bc6", "filename": "compiler/rustc_metadata/src/rmeta/decoder.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/d8426ea6369e88b4de12eed1ba8ecd6be5dc6559/compiler%2Frustc_metadata%2Fsrc%2Frmeta%2Fdecoder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d8426ea6369e88b4de12eed1ba8ecd6be5dc6559/compiler%2Frustc_metadata%2Fsrc%2Frmeta%2Fdecoder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_metadata%2Fsrc%2Frmeta%2Fdecoder.rs?ref=d8426ea6369e88b4de12eed1ba8ecd6be5dc6559", "patch": "@@ -1198,8 +1198,8 @@ impl<'a, 'tcx> CrateMetadataRef<'a> {\n             }\n         }\n \n-        if let EntryKind::Mod(data) = kind {\n-            for exp in data.decode((self, sess)).reexports.decode((self, sess)) {\n+        if let EntryKind::Mod(exports) = kind {\n+            for exp in exports.decode((self, sess)) {\n                 match exp.res {\n                     Res::Def(DefKind::Macro(..), _) => {}\n                     _ if macros_only => continue,"}, {"sha": "0dbef66ac37d77ff78eeb6fa2fb10a5986f1e1f3", "filename": "compiler/rustc_metadata/src/rmeta/encoder.rs", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/d8426ea6369e88b4de12eed1ba8ecd6be5dc6559/compiler%2Frustc_metadata%2Fsrc%2Frmeta%2Fencoder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d8426ea6369e88b4de12eed1ba8ecd6be5dc6559/compiler%2Frustc_metadata%2Fsrc%2Frmeta%2Fencoder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_metadata%2Fsrc%2Frmeta%2Fencoder.rs?ref=d8426ea6369e88b4de12eed1ba8ecd6be5dc6559", "patch": "@@ -1086,9 +1086,7 @@ impl EncodeContext<'a, 'tcx> {\n             Lazy::empty()\n         };\n \n-        let data = ModData { reexports };\n-\n-        record!(self.tables.kind[def_id] <- EntryKind::Mod(self.lazy(data)));\n+        record!(self.tables.kind[def_id] <- EntryKind::Mod(reexports));\n         if self.is_proc_macro {\n             record!(self.tables.children[def_id] <- &[]);\n             // Encode this here because we don't do it in encode_def_ids."}, {"sha": "4e09d23169aca3c771b86ad12d68c6ec713c32b2", "filename": "compiler/rustc_metadata/src/rmeta/mod.rs", "status": "modified", "additions": 1, "deletions": 6, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/d8426ea6369e88b4de12eed1ba8ecd6be5dc6559/compiler%2Frustc_metadata%2Fsrc%2Frmeta%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d8426ea6369e88b4de12eed1ba8ecd6be5dc6559/compiler%2Frustc_metadata%2Fsrc%2Frmeta%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_metadata%2Fsrc%2Frmeta%2Fmod.rs?ref=d8426ea6369e88b4de12eed1ba8ecd6be5dc6559", "patch": "@@ -346,7 +346,7 @@ enum EntryKind {\n     Union(Lazy<VariantData>, ReprOptions),\n     Fn(Lazy<FnData>),\n     ForeignFn(Lazy<FnData>),\n-    Mod(Lazy<ModData>),\n+    Mod(Lazy<[Export]>),\n     MacroDef(Lazy<MacroDef>),\n     ProcMacro(MacroKind),\n     Closure,\n@@ -364,11 +364,6 @@ enum EntryKind {\n #[derive(Encodable, Decodable)]\n struct RenderedConst(String);\n \n-#[derive(MetadataEncodable, MetadataDecodable)]\n-struct ModData {\n-    reexports: Lazy<[Export]>,\n-}\n-\n #[derive(MetadataEncodable, MetadataDecodable)]\n struct FnData {\n     asyncness: hir::IsAsync,"}, {"sha": "33af9884cbb6686ced37c2729251fdb5094491e1", "filename": "compiler/rustc_resolve/src/build_reduced_graph.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/d8426ea6369e88b4de12eed1ba8ecd6be5dc6559/compiler%2Frustc_resolve%2Fsrc%2Fbuild_reduced_graph.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d8426ea6369e88b4de12eed1ba8ecd6be5dc6559/compiler%2Frustc_resolve%2Fsrc%2Fbuild_reduced_graph.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_resolve%2Fsrc%2Fbuild_reduced_graph.rs?ref=d8426ea6369e88b4de12eed1ba8ecd6be5dc6559", "patch": "@@ -145,12 +145,11 @@ impl<'a> Resolver<'a> {\n                     } else {\n                         def_key.disambiguated_data.data.get_opt_name().expect(\"module without name\")\n                     };\n-                    let expn_id = self.cstore().module_expansion_untracked(def_id, &self.session);\n \n                     Some(self.new_module(\n                         parent,\n                         ModuleKind::Def(def_kind, def_id, name),\n-                        expn_id,\n+                        self.cstore().module_expansion_untracked(def_id, &self.session),\n                         self.cstore().get_span_untracked(def_id, &self.session),\n                         // FIXME: Account for `#[no_implicit_prelude]` attributes.\n                         parent.map_or(false, |module| module.no_implicit_prelude),"}]}