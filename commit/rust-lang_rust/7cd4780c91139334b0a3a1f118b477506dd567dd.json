{"sha": "7cd4780c91139334b0a3a1f118b477506dd567dd", "node_id": "C_kwDOAAsO6NoAKDdjZDQ3ODBjOTExMzkzMzRiMGEzYTFmMTE4YjQ3NzUwNmRkNTY3ZGQ", "commit": {"author": {"name": "Yuki Okushi", "email": "jtitor@2k36.org", "date": "2022-09-29T02:42:03Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-09-29T02:42:03Z"}, "message": "Rollup merge of #98368 - sunfishcode:sunfishcode/std-os-fd, r=joshtriplett\n\nMake `std::os::fd` public.\n\n`std::os::fd` defines types like `OwnedFd` and `RawFd` and is common\nbetween Unix and non-Unix platforms that share a basic file-descriptor\nconcept. Rust currently uses this internally to simplify its own code,\nbut it would be useful for external users in the same way, so make it\npublic.\n\nThis means that `OwnedFd` etc. will all appear in three places, for\nexample on unix platforms:\n - `std::os::fd::OwnedFd`\n - `std::os::unix::io::OwnedFd`\n - `std::os::unix::prelude::OwnedFd`\n\nr? `````@joshtriplett`````", "tree": {"sha": "5d31b0c5a746ff4016e14e117afba2098d4cc8a6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5d31b0c5a746ff4016e14e117afba2098d4cc8a6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7cd4780c91139334b0a3a1f118b477506dd567dd", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJjNQX7CRBK7hj4Ov3rIwAARTQIAFj4HLHNG2QR4roit0Div6l3\ncSMXIK9N5pP85fJOqTsOcrMMpy0AUoBZLCTF6i6SzxvDNaphs1XrCfucTxyIdd/r\nv16BKSvel97jX+UyJ/2MH1clZDcnZeqN6SJWuiTO8V89g+w1MUthg7N1aZ+0ehNJ\niNLUSfnxjKoM2aTIpeKuUxh1SJsEL/+XuQw5kvpcRNy7FHazaizhWR7HhvACvttU\nWklcFHZCKv7CfxpnfD+PEP3+bt1Om3DkDrkTFubAcCmS8/2iG4wVbXYQQ6+bwWRB\n5tvw0mObGBua5IaMh83qGvdOXoyTtizKQmXrBLJsSJR9bQBgOWaVJNcGvRUdEFw=\n=e2OO\n-----END PGP SIGNATURE-----\n", "payload": "tree 5d31b0c5a746ff4016e14e117afba2098d4cc8a6\nparent b30c88623cf1f8f3e67b189fb2c5df5a0d89aaed\nparent a7f3ba9c135fff78728eb7790aae7907a7621922\nauthor Yuki Okushi <jtitor@2k36.org> 1664419323 +0900\ncommitter GitHub <noreply@github.com> 1664419323 +0900\n\nRollup merge of #98368 - sunfishcode:sunfishcode/std-os-fd, r=joshtriplett\n\nMake `std::os::fd` public.\n\n`std::os::fd` defines types like `OwnedFd` and `RawFd` and is common\nbetween Unix and non-Unix platforms that share a basic file-descriptor\nconcept. Rust currently uses this internally to simplify its own code,\nbut it would be useful for external users in the same way, so make it\npublic.\n\nThis means that `OwnedFd` etc. will all appear in three places, for\nexample on unix platforms:\n - `std::os::fd::OwnedFd`\n - `std::os::unix::io::OwnedFd`\n - `std::os::unix::prelude::OwnedFd`\n\nr? `````@joshtriplett`````\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7cd4780c91139334b0a3a1f118b477506dd567dd", "html_url": "https://github.com/rust-lang/rust/commit/7cd4780c91139334b0a3a1f118b477506dd567dd", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7cd4780c91139334b0a3a1f118b477506dd567dd/comments", "author": {"login": "JohnTitor", "id": 25030997, "node_id": "MDQ6VXNlcjI1MDMwOTk3", "avatar_url": "https://avatars.githubusercontent.com/u/25030997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JohnTitor", "html_url": "https://github.com/JohnTitor", "followers_url": "https://api.github.com/users/JohnTitor/followers", "following_url": "https://api.github.com/users/JohnTitor/following{/other_user}", "gists_url": "https://api.github.com/users/JohnTitor/gists{/gist_id}", "starred_url": "https://api.github.com/users/JohnTitor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JohnTitor/subscriptions", "organizations_url": "https://api.github.com/users/JohnTitor/orgs", "repos_url": "https://api.github.com/users/JohnTitor/repos", "events_url": "https://api.github.com/users/JohnTitor/events{/privacy}", "received_events_url": "https://api.github.com/users/JohnTitor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b30c88623cf1f8f3e67b189fb2c5df5a0d89aaed", "url": "https://api.github.com/repos/rust-lang/rust/commits/b30c88623cf1f8f3e67b189fb2c5df5a0d89aaed", "html_url": "https://github.com/rust-lang/rust/commit/b30c88623cf1f8f3e67b189fb2c5df5a0d89aaed"}, {"sha": "a7f3ba9c135fff78728eb7790aae7907a7621922", "url": "https://api.github.com/repos/rust-lang/rust/commits/a7f3ba9c135fff78728eb7790aae7907a7621922", "html_url": "https://github.com/rust-lang/rust/commit/a7f3ba9c135fff78728eb7790aae7907a7621922"}], "stats": {"total": 78, "additions": 29, "deletions": 49}, "files": [{"sha": "c6aa7c77dbc41d74ff1fb776de1d82c13be3a8bc", "filename": "library/std/src/os/fd/mod.rs", "status": "modified", "additions": 11, "deletions": 2, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/7cd4780c91139334b0a3a1f118b477506dd567dd/library%2Fstd%2Fsrc%2Fos%2Ffd%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7cd4780c91139334b0a3a1f118b477506dd567dd/library%2Fstd%2Fsrc%2Fos%2Ffd%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fos%2Ffd%2Fmod.rs?ref=7cd4780c91139334b0a3a1f118b477506dd567dd", "patch": "@@ -1,16 +1,25 @@\n //! Owned and borrowed Unix-like file descriptors.\n+//!\n+//! This module is supported on Unix platforms and WASI, which both use a\n+//! similar file descriptor system for referencing OS resources.\n \n #![stable(feature = \"io_safety\", since = \"1.63.0\")]\n #![deny(unsafe_op_in_unsafe_fn)]\n \n // `RawFd`, `AsRawFd`, etc.\n-pub mod raw;\n+mod raw;\n \n // `OwnedFd`, `AsFd`, etc.\n-pub mod owned;\n+mod owned;\n \n // Implementations for `AsRawFd` etc. for network types.\n mod net;\n \n #[cfg(test)]\n mod tests;\n+\n+// Export the types and traits for the public API.\n+#[unstable(feature = \"os_fd\", issue = \"98699\")]\n+pub use owned::*;\n+#[unstable(feature = \"os_fd\", issue = \"98699\")]\n+pub use raw::*;"}, {"sha": "9875c389d8aaf7273b7f0812f3f9217cc0ea13df", "filename": "library/std/src/os/fd/owned.rs", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/7cd4780c91139334b0a3a1f118b477506dd567dd/library%2Fstd%2Fsrc%2Fos%2Ffd%2Fowned.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7cd4780c91139334b0a3a1f118b477506dd567dd/library%2Fstd%2Fsrc%2Fos%2Ffd%2Fowned.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fos%2Ffd%2Fowned.rs?ref=7cd4780c91139334b0a3a1f118b477506dd567dd", "patch": "@@ -206,10 +206,8 @@ pub trait AsFd {\n     /// ```rust,no_run\n     /// use std::fs::File;\n     /// # use std::io;\n-    /// # #[cfg(target_os = \"wasi\")]\n-    /// # use std::os::wasi::io::{AsFd, BorrowedFd};\n-    /// # #[cfg(unix)]\n-    /// # use std::os::unix::io::{AsFd, BorrowedFd};\n+    /// # #[cfg(any(unix, target_os = \"wasi\"))]\n+    /// # use std::os::fd::{AsFd, BorrowedFd};\n     ///\n     /// let mut f = File::open(\"foo.txt\")?;\n     /// # #[cfg(any(unix, target_os = \"wasi\"))]"}, {"sha": "f92a05066706d276cb98599992d518e37ee4b6a4", "filename": "library/std/src/os/fd/raw.rs", "status": "modified", "additions": 6, "deletions": 12, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/7cd4780c91139334b0a3a1f118b477506dd567dd/library%2Fstd%2Fsrc%2Fos%2Ffd%2Fraw.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7cd4780c91139334b0a3a1f118b477506dd567dd/library%2Fstd%2Fsrc%2Fos%2Ffd%2Fraw.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fos%2Ffd%2Fraw.rs?ref=7cd4780c91139334b0a3a1f118b477506dd567dd", "patch": "@@ -42,10 +42,8 @@ pub trait AsRawFd {\n     /// ```no_run\n     /// use std::fs::File;\n     /// # use std::io;\n-    /// #[cfg(unix)]\n-    /// use std::os::unix::io::{AsRawFd, RawFd};\n-    /// #[cfg(target_os = \"wasi\")]\n-    /// use std::os::wasi::io::{AsRawFd, RawFd};\n+    /// #[cfg(any(unix, target_os = \"wasi\"))]\n+    /// use std::os::fd::{AsRawFd, RawFd};\n     ///\n     /// let mut f = File::open(\"foo.txt\")?;\n     /// // Note that `raw_fd` is only valid as long as `f` exists.\n@@ -83,10 +81,8 @@ pub trait FromRawFd {\n     /// ```no_run\n     /// use std::fs::File;\n     /// # use std::io;\n-    /// #[cfg(unix)]\n-    /// use std::os::unix::io::{FromRawFd, IntoRawFd, RawFd};\n-    /// #[cfg(target_os = \"wasi\")]\n-    /// use std::os::wasi::io::{FromRawFd, IntoRawFd, RawFd};\n+    /// #[cfg(any(unix, target_os = \"wasi\"))]\n+    /// use std::os::fd::{FromRawFd, IntoRawFd, RawFd};\n     ///\n     /// let f = File::open(\"foo.txt\")?;\n     /// # #[cfg(any(unix, target_os = \"wasi\"))]\n@@ -121,10 +117,8 @@ pub trait IntoRawFd {\n     /// ```no_run\n     /// use std::fs::File;\n     /// # use std::io;\n-    /// #[cfg(unix)]\n-    /// use std::os::unix::io::{IntoRawFd, RawFd};\n-    /// #[cfg(target_os = \"wasi\")]\n-    /// use std::os::wasi::io::{IntoRawFd, RawFd};\n+    /// #[cfg(any(unix, target_os = \"wasi\"))]\n+    /// use std::os::fd::{IntoRawFd, RawFd};\n     ///\n     /// let f = File::open(\"foo.txt\")?;\n     /// #[cfg(any(unix, target_os = \"wasi\"))]"}, {"sha": "f62f5af774f0e4a171000d2394613dc916dde08f", "filename": "library/std/src/os/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7cd4780c91139334b0a3a1f118b477506dd567dd/library%2Fstd%2Fsrc%2Fos%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7cd4780c91139334b0a3a1f118b477506dd567dd/library%2Fstd%2Fsrc%2Fos%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fos%2Fmod.rs?ref=7cd4780c91139334b0a3a1f118b477506dd567dd", "patch": "@@ -147,7 +147,7 @@ pub mod solid;\n pub mod vxworks;\n \n #[cfg(any(unix, target_os = \"wasi\", doc))]\n-mod fd;\n+pub mod fd;\n \n #[cfg(any(target_os = \"linux\", target_os = \"android\", doc))]\n mod net;"}, {"sha": "d4cb696459b7e6c3f0f91ddc93fe2d729a8bea08", "filename": "library/std/src/os/unix/io/fd.rs", "status": "removed", "additions": 0, "deletions": 8, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/b30c88623cf1f8f3e67b189fb2c5df5a0d89aaed/library%2Fstd%2Fsrc%2Fos%2Funix%2Fio%2Ffd.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b30c88623cf1f8f3e67b189fb2c5df5a0d89aaed/library%2Fstd%2Fsrc%2Fos%2Funix%2Fio%2Ffd.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fos%2Funix%2Fio%2Ffd.rs?ref=b30c88623cf1f8f3e67b189fb2c5df5a0d89aaed", "patch": "@@ -1,8 +0,0 @@\n-//! Owned and borrowed file descriptors.\n-\n-// Tests for this module\n-#[cfg(test)]\n-mod tests;\n-\n-#[stable(feature = \"io_safety\", since = \"1.63.0\")]\n-pub use crate::os::fd::owned::*;"}, {"sha": "25b5dbff14f309d185d79f833ea419981586dc0d", "filename": "library/std/src/os/unix/io/mod.rs", "status": "modified", "additions": 5, "deletions": 6, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/7cd4780c91139334b0a3a1f118b477506dd567dd/library%2Fstd%2Fsrc%2Fos%2Funix%2Fio%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7cd4780c91139334b0a3a1f118b477506dd567dd/library%2Fstd%2Fsrc%2Fos%2Funix%2Fio%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fos%2Funix%2Fio%2Fmod.rs?ref=7cd4780c91139334b0a3a1f118b477506dd567dd", "patch": "@@ -77,10 +77,9 @@\n \n #![stable(feature = \"rust1\", since = \"1.0.0\")]\n \n-mod fd;\n-mod raw;\n-\n-#[stable(feature = \"io_safety\", since = \"1.63.0\")]\n-pub use fd::*;\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n-pub use raw::*;\n+pub use crate::os::fd::*;\n+\n+// Tests for this module\n+#[cfg(test)]\n+mod tests;"}, {"sha": "a4d2ba797d9c470362bb82916cdb52e333aac634", "filename": "library/std/src/os/unix/io/raw.rs", "status": "removed", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/b30c88623cf1f8f3e67b189fb2c5df5a0d89aaed/library%2Fstd%2Fsrc%2Fos%2Funix%2Fio%2Fraw.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b30c88623cf1f8f3e67b189fb2c5df5a0d89aaed/library%2Fstd%2Fsrc%2Fos%2Funix%2Fio%2Fraw.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fos%2Funix%2Fio%2Fraw.rs?ref=b30c88623cf1f8f3e67b189fb2c5df5a0d89aaed", "patch": "@@ -1,6 +0,0 @@\n-//! Unix-specific extensions to general I/O primitives.\n-\n-#![stable(feature = \"rust1\", since = \"1.0.0\")]\n-\n-#[stable(feature = \"rust1\", since = \"1.0.0\")]\n-pub use crate::os::fd::raw::*;"}, {"sha": "84d2a7a1a91b4f391f5c79161708c01664d93273", "filename": "library/std/src/os/unix/io/tests.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/7cd4780c91139334b0a3a1f118b477506dd567dd/library%2Fstd%2Fsrc%2Fos%2Funix%2Fio%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7cd4780c91139334b0a3a1f118b477506dd567dd/library%2Fstd%2Fsrc%2Fos%2Funix%2Fio%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fos%2Funix%2Fio%2Ftests.rs?ref=7cd4780c91139334b0a3a1f118b477506dd567dd", "previous_filename": "library/std/src/os/unix/io/fd/tests.rs"}, {"sha": "d528590d75b9ab6c37673ef48eb1cee89c5ae262", "filename": "library/std/src/os/wasi/io/mod.rs", "status": "modified", "additions": 1, "deletions": 7, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/7cd4780c91139334b0a3a1f118b477506dd567dd/library%2Fstd%2Fsrc%2Fos%2Fwasi%2Fio%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7cd4780c91139334b0a3a1f118b477506dd567dd/library%2Fstd%2Fsrc%2Fos%2Fwasi%2Fio%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fos%2Fwasi%2Fio%2Fmod.rs?ref=7cd4780c91139334b0a3a1f118b477506dd567dd", "patch": "@@ -1,12 +1,6 @@\n //! WASI-specific extensions to general I/O primitives.\n \n-#![deny(unsafe_op_in_unsafe_fn)]\n #![unstable(feature = \"wasi_ext\", issue = \"71213\")]\n \n-mod fd;\n-mod raw;\n-\n-#[unstable(feature = \"wasi_ext\", issue = \"71213\")]\n-pub use fd::*;\n #[unstable(feature = \"wasi_ext\", issue = \"71213\")]\n-pub use raw::*;\n+pub use crate::os::fd::*;"}, {"sha": "369a34f9c6eb7e64f318bba62cb2ce8f7c67c580", "filename": "src/test/rustdoc-js-std/asrawfd.js", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/7cd4780c91139334b0a3a1f118b477506dd567dd/src%2Ftest%2Frustdoc-js-std%2Fasrawfd.js", "raw_url": "https://github.com/rust-lang/rust/raw/7cd4780c91139334b0a3a1f118b477506dd567dd/src%2Ftest%2Frustdoc-js-std%2Fasrawfd.js", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-js-std%2Fasrawfd.js?ref=7cd4780c91139334b0a3a1f118b477506dd567dd", "patch": "@@ -6,9 +6,9 @@ const EXPECTED = {\n     'others': [\n         // Reproduction test for https://github.com/rust-lang/rust/issues/78724\n         // Validate that type alias methods get the correct path.\n-        { 'path': 'std::os::unix::io::AsRawFd', 'name': 'as_raw_fd' },\n-        { 'path': 'std::os::wasi::io::AsRawFd', 'name': 'as_raw_fd' },\n+        { 'path': 'std::os::fd::AsRawFd', 'name': 'as_raw_fd' },\n+        { 'path': 'std::os::fd::AsRawFd', 'name': 'as_raw_fd' },\n         { 'path': 'std::os::linux::process::PidFd', 'name': 'as_raw_fd' },\n-        { 'path': 'std::os::unix::io::RawFd', 'name': 'as_raw_fd' },\n+        { 'path': 'std::os::fd::RawFd', 'name': 'as_raw_fd' },\n     ],\n };"}]}