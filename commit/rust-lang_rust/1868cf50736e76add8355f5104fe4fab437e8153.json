{"sha": "1868cf50736e76add8355f5104fe4fab437e8153", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE4NjhjZjUwNzM2ZTc2YWRkODM1NWY1MTA0ZmU0ZmFiNDM3ZTgxNTM=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2014-05-07T06:28:32Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2014-05-07T21:12:43Z"}, "message": "std: Remove bump_box_refcount. Deprecated and unused. Deprecused.", "tree": {"sha": "06c660dc6574c905d78fce740e57d50ccf33c648", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/06c660dc6574c905d78fce740e57d50ccf33c648"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1868cf50736e76add8355f5104fe4fab437e8153", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1868cf50736e76add8355f5104fe4fab437e8153", "html_url": "https://github.com/rust-lang/rust/commit/1868cf50736e76add8355f5104fe4fab437e8153", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1868cf50736e76add8355f5104fe4fab437e8153/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "87115fd001440652291c509a77bda74fa511dab0", "url": "https://api.github.com/repos/rust-lang/rust/commits/87115fd001440652291c509a77bda74fa511dab0", "html_url": "https://github.com/rust-lang/rust/commit/87115fd001440652291c509a77bda74fa511dab0"}], "stats": {"total": 24, "additions": 1, "deletions": 23}, "files": [{"sha": "25b6fd1b2cf1c7825b75aff8ad5170c86d0c0ca0", "filename": "src/libcore/cast.rs", "status": "modified", "additions": 1, "deletions": 23, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/1868cf50736e76add8355f5104fe4fab437e8153/src%2Flibcore%2Fcast.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1868cf50736e76add8355f5104fe4fab437e8153/src%2Flibcore%2Fcast.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fcast.rs?ref=1868cf50736e76add8355f5104fe4fab437e8153", "patch": "@@ -33,13 +33,6 @@ pub unsafe fn transmute_copy<T, U>(src: &T) -> U {\n #[inline]\n pub unsafe fn forget<T>(thing: T) { intrinsics::forget(thing); }\n \n-/**\n- * Force-increment the reference count on a shared box. If used\n- * carelessly, this can leak the box.\n- */\n-#[inline]\n-pub unsafe fn bump_box_refcount<T>(t: @T) { forget(t); }\n-\n /**\n  * Transform a value of one type into a value of another type.\n  * Both types must have the same size and alignment.\n@@ -106,7 +99,7 @@ pub unsafe fn copy_lifetime_vec<'a,S,T>(_ptr: &'a [S], ptr: &T) -> &'a T {\n \n #[cfg(test)]\n mod tests {\n-    use cast::{bump_box_refcount, transmute};\n+    use cast::transmute;\n     use raw;\n     use realstd::str::StrAllocating;\n \n@@ -115,21 +108,6 @@ mod tests {\n         assert_eq!(1u, unsafe { ::cast::transmute_copy(&1) });\n     }\n \n-    #[test]\n-    fn test_bump_managed_refcount() {\n-        unsafe {\n-            let managed = @\"box box box\".to_owned();      // refcount 1\n-            bump_box_refcount(managed);     // refcount 2\n-            let ptr: *int = transmute(managed); // refcount 2\n-            let _box1: @~str = ::cast::transmute_copy(&ptr);\n-            let _box2: @~str = ::cast::transmute_copy(&ptr);\n-            assert!(*_box1 == \"box box box\".to_owned());\n-            assert!(*_box2 == \"box box box\".to_owned());\n-            // Will destroy _box1 and _box2. Without the bump, this would\n-            // use-after-free. With too many bumps, it would leak.\n-        }\n-    }\n-\n     #[test]\n     fn test_transmute() {\n         unsafe {"}]}