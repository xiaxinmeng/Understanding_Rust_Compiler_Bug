{"sha": "7ea1eacb17f32b7cefc773e05cf770d4c3cea812", "node_id": "MDY6Q29tbWl0NzI0NzEyOjdlYTFlYWNiMTdmMzJiN2NlZmM3NzNlMDVjZjc3MGQ0YzNjZWE4MTI=", "commit": {"author": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2020-11-25T21:45:24Z"}, "committer": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2021-03-09T18:09:35Z"}, "message": "Remove hir::Local::attrs.", "tree": {"sha": "fb358f44162aa08866239cd33ec3bf3957038092", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fb358f44162aa08866239cd33ec3bf3957038092"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7ea1eacb17f32b7cefc773e05cf770d4c3cea812", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7ea1eacb17f32b7cefc773e05cf770d4c3cea812", "html_url": "https://github.com/rust-lang/rust/commit/7ea1eacb17f32b7cefc773e05cf770d4c3cea812", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7ea1eacb17f32b7cefc773e05cf770d4c3cea812/comments", "author": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "committer": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ff79ad394f1866d93f76ada88895ca4845c6abad", "url": "https://api.github.com/repos/rust-lang/rust/commits/ff79ad394f1866d93f76ada88895ca4845c6abad", "html_url": "https://github.com/rust-lang/rust/commit/ff79ad394f1866d93f76ada88895ca4845c6abad"}], "stats": {"total": 17, "additions": 3, "deletions": 14}, "files": [{"sha": "653a3b3fda22cf8ebd6eee93b0fd887d9cd094f1", "filename": "compiler/rustc_ast_lowering/src/lib.rs", "status": "modified", "additions": 2, "deletions": 12, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/7ea1eacb17f32b7cefc773e05cf770d4c3cea812/compiler%2Frustc_ast_lowering%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7ea1eacb17f32b7cefc773e05cf770d4c3cea812/compiler%2Frustc_ast_lowering%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_ast_lowering%2Fsrc%2Flib.rs?ref=7ea1eacb17f32b7cefc773e05cf770d4c3cea812", "patch": "@@ -1800,16 +1800,14 @@ impl<'a, 'hir> LoweringContext<'a, 'hir> {\n         });\n         let init = l.init.as_ref().map(|e| self.lower_expr(e));\n         let hir_id = self.lower_node_id(l.id);\n-        let attrs = l.attrs.iter().map(|a| self.lower_attr(a)).collect::<Vec<_>>();\n-        self.attrs.push_sparse(hir_id, &*self.arena.alloc_from_iter(attrs.iter().cloned()));\n+        self.lower_attrs(hir_id, &l.attrs);\n         (\n             hir::Local {\n                 hir_id,\n                 ty,\n                 pat: self.lower_pat(&l.pat),\n                 init,\n                 span: l.span,\n-                attrs: attrs.into(),\n                 source: hir::LocalSource::Normal,\n             },\n             ids,\n@@ -2534,15 +2532,7 @@ impl<'a, 'hir> LoweringContext<'a, 'hir> {\n     ) -> hir::Stmt<'hir> {\n         let hir_id = self.next_id();\n         self.attrs.push_sparse(hir_id, attrs);\n-        let local = hir::Local {\n-            attrs: attrs.iter().cloned().collect::<Vec<_>>().into(),\n-            hir_id,\n-            init,\n-            pat,\n-            source,\n-            span,\n-            ty: None,\n-        };\n+        let local = hir::Local { hir_id, init, pat, source, span, ty: None };\n         self.stmt(span, hir::StmtKind::Local(self.arena.alloc(local)))\n     }\n "}, {"sha": "ed7a1415c2a850f95c1278e384adba0841bd22c6", "filename": "compiler/rustc_hir/src/hir.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/7ea1eacb17f32b7cefc773e05cf770d4c3cea812/compiler%2Frustc_hir%2Fsrc%2Fhir.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7ea1eacb17f32b7cefc773e05cf770d4c3cea812/compiler%2Frustc_hir%2Fsrc%2Fhir.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_hir%2Fsrc%2Fhir.rs?ref=7ea1eacb17f32b7cefc773e05cf770d4c3cea812", "patch": "@@ -1179,7 +1179,6 @@ pub struct Local<'hir> {\n     pub init: Option<&'hir Expr<'hir>>,\n     pub hir_id: HirId,\n     pub span: Span,\n-    pub attrs: AttrVec,\n     /// Can be `ForLoopDesugar` if the `let` statement is part of a `for` loop\n     /// desugaring. Otherwise will be `Normal`.\n     pub source: LocalSource,"}, {"sha": "e8646695e0b232ae9156a8452579e248b42da50c", "filename": "src/tools/clippy/clippy_lints/src/returns.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7ea1eacb17f32b7cefc773e05cf770d4c3cea812/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Freturns.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7ea1eacb17f32b7cefc773e05cf770d4c3cea812/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Freturns.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Freturns.rs?ref=7ea1eacb17f32b7cefc773e05cf770d4c3cea812", "patch": "@@ -81,7 +81,7 @@ impl<'tcx> LateLintPass<'tcx> for Return {\n             if let Some(stmt) = block.stmts.iter().last();\n             if let StmtKind::Local(local) = &stmt.kind;\n             if local.ty.is_none();\n-            if local.attrs.is_empty();\n+            if cx.tcx.hir().attrs(local.hir_id).is_empty();\n             if let Some(initexpr) = &local.init;\n             if let PatKind::Binding(.., ident, _) = local.pat.kind;\n             if let ExprKind::Path(qpath) = &retexpr.kind;"}]}