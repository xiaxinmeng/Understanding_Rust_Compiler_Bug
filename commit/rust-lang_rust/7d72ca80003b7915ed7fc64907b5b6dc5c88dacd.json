{"sha": "7d72ca80003b7915ed7fc64907b5b6dc5c88dacd", "node_id": "MDY6Q29tbWl0NzI0NzEyOjdkNzJjYTgwMDAzYjc5MTVlZDdmYzY0OTA3YjViNmRjNWM4OGRhY2Q=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2019-08-29T14:04:28Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-08-29T14:04:28Z"}, "message": "Merge #1738\n\n1738: :arrow_up: insta r=matklad a=matklad\n\n\n\nCo-authored-by: Aleksey Kladov <aleksey.kladov@gmail.com>", "tree": {"sha": "4aa7826d1b9a7222ad64085f136a1615d7daa7a5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4aa7826d1b9a7222ad64085f136a1615d7daa7a5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7d72ca80003b7915ed7fc64907b5b6dc5c88dacd", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJdZ9tsCRBK7hj4Ov3rIwAAdHIIAEsrqyzKqQw1B9PUGxxWsMau\n5j0FvGUtvBfycI2rVk1ZjZQTT4Hi8rfbWv6u73xhgENCcDAiHb3lKZUc5pGQT094\nhehP57b7WSu8rp1jic3dLqtq0NjPBT1Lvz0EzuVJGfaVYKPbXzoSO2ecHGKT6ORK\n0j+ROuVPfXk4DHi6coErOqsJPmkGmTmWIx25WpzAfr7s+Q5MerDlKzDa6ayKjyx7\nP2tgSh3d7XGthFFiQTNIOhOnN7PUaVz1aQ1maG5nc/6zi9MDqjYqqSfPbFeF6UAz\nvONuoxvMwUA5CuT77pSKQv5dtxAZWBjJNoJeMEf8uq+6n00RYm8NPzn+mU33TLM=\n=eTzH\n-----END PGP SIGNATURE-----\n", "payload": "tree 4aa7826d1b9a7222ad64085f136a1615d7daa7a5\nparent 5a99184967c89992df4544d0c1ca27d79946a1a7\nparent 0f6c048ce1a621ccd3e2080ec5aafbd053c516f4\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1567087468 +0000\ncommitter GitHub <noreply@github.com> 1567087468 +0000\n\nMerge #1738\n\n1738: :arrow_up: insta r=matklad a=matklad\n\n\n\nCo-authored-by: Aleksey Kladov <aleksey.kladov@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7d72ca80003b7915ed7fc64907b5b6dc5c88dacd", "html_url": "https://github.com/rust-lang/rust/commit/7d72ca80003b7915ed7fc64907b5b6dc5c88dacd", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7d72ca80003b7915ed7fc64907b5b6dc5c88dacd/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5a99184967c89992df4544d0c1ca27d79946a1a7", "url": "https://api.github.com/repos/rust-lang/rust/commits/5a99184967c89992df4544d0c1ca27d79946a1a7", "html_url": "https://github.com/rust-lang/rust/commit/5a99184967c89992df4544d0c1ca27d79946a1a7"}, {"sha": "0f6c048ce1a621ccd3e2080ec5aafbd053c516f4", "url": "https://api.github.com/repos/rust-lang/rust/commits/0f6c048ce1a621ccd3e2080ec5aafbd053c516f4", "html_url": "https://github.com/rust-lang/rust/commit/0f6c048ce1a621ccd3e2080ec5aafbd053c516f4"}], "stats": {"total": 2932, "additions": 1446, "deletions": 1486}, "files": [{"sha": "93814bedc9cfe655d3362556eb4d21842c1efc97", "filename": "Cargo.lock", "status": "modified", "additions": 21, "deletions": 159, "changes": 180, "blob_url": "https://github.com/rust-lang/rust/blob/7d72ca80003b7915ed7fc64907b5b6dc5c88dacd/Cargo.lock", "raw_url": "https://github.com/rust-lang/rust/raw/7d72ca80003b7915ed7fc64907b5b6dc5c88dacd/Cargo.lock", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Cargo.lock?ref=7d72ca80003b7915ed7fc64907b5b6dc5c88dacd", "patch": "@@ -76,25 +76,6 @@ name = \"bitflags\"\n version = \"1.1.0\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n \n-[[package]]\n-name = \"block-buffer\"\n-version = \"0.7.3\"\n-source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-dependencies = [\n- \"block-padding 0.1.4 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"byte-tools 0.3.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"byteorder 1.3.2 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"generic-array 0.12.3 (registry+https://github.com/rust-lang/crates.io-index)\",\n-]\n-\n-[[package]]\n-name = \"block-padding\"\n-version = \"0.1.4\"\n-source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-dependencies = [\n- \"byte-tools 0.3.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n-]\n-\n [[package]]\n name = \"bstr\"\n version = \"0.2.7\"\n@@ -103,11 +84,6 @@ dependencies = [\n  \"memchr 2.2.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n \n-[[package]]\n-name = \"byte-tools\"\n-version = \"0.3.1\"\n-source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-\n [[package]]\n name = \"byteorder\"\n version = \"1.3.2\"\n@@ -206,15 +182,9 @@ dependencies = [\n  \"libc 0.2.62 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"num-integer 0.1.41 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"num-traits 0.2.8 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"serde 1.0.99 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"time 0.1.42 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n \n-[[package]]\n-name = \"ci_info\"\n-version = \"0.3.1\"\n-source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-\n [[package]]\n name = \"clap\"\n version = \"2.33.0\"\n@@ -261,6 +231,21 @@ dependencies = [\n  \"winapi 0.3.7 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n \n+[[package]]\n+name = \"console\"\n+version = \"0.8.0\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+dependencies = [\n+ \"clicolors-control 1.0.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"encode_unicode 0.3.5 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"lazy_static 1.3.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"libc 0.2.62 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"regex 1.2.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"termios 0.3.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"unicode-width 0.1.6 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"winapi 0.3.7 (registry+https://github.com/rust-lang/crates.io-index)\",\n+]\n+\n [[package]]\n name = \"crossbeam\"\n version = \"0.7.2\"\n@@ -345,14 +330,6 @@ name = \"difference\"\n version = \"2.0.0\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n \n-[[package]]\n-name = \"digest\"\n-version = \"0.8.1\"\n-source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-dependencies = [\n- \"generic-array 0.12.3 (registry+https://github.com/rust-lang/crates.io-index)\",\n-]\n-\n [[package]]\n name = \"drop_bomb\"\n version = \"0.1.4\"\n@@ -409,11 +386,6 @@ dependencies = [\n  \"synstructure 0.10.2 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n \n-[[package]]\n-name = \"fake-simd\"\n-version = \"0.1.2\"\n-source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-\n [[package]]\n name = \"filetime\"\n version = \"0.2.5\"\n@@ -512,14 +484,6 @@ dependencies = [\n  \"serde_json 1.0.40 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n \n-[[package]]\n-name = \"generic-array\"\n-version = \"0.12.3\"\n-source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-dependencies = [\n- \"typenum 1.10.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n-]\n-\n [[package]]\n name = \"getrandom\"\n version = \"0.1.10\"\n@@ -602,18 +566,12 @@ dependencies = [\n \n [[package]]\n name = \"insta\"\n-version = \"0.10.1\"\n+version = \"0.11.0\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n dependencies = [\n- \"chrono 0.4.7 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"ci_info 0.3.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"console 0.7.7 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"console 0.8.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"difference 2.0.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"failure 0.1.5 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"lazy_static 1.3.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"pest 2.1.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"pest_derive 2.1.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"ron 0.4.2 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"serde 1.0.99 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"serde_json 1.0.40 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"serde_yaml 0.8.9 (registry+https://github.com/rust-lang/crates.io-index)\",\n@@ -743,11 +701,6 @@ dependencies = [\n  \"url 2.1.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n \n-[[package]]\n-name = \"maplit\"\n-version = \"1.0.1\"\n-source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-\n [[package]]\n name = \"matches\"\n version = \"0.1.8\"\n@@ -879,11 +832,6 @@ dependencies = [\n  \"parking_lot 0.9.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n \n-[[package]]\n-name = \"opaque-debug\"\n-version = \"0.2.3\"\n-source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-\n [[package]]\n name = \"ordermap\"\n version = \"0.3.5\"\n@@ -938,45 +886,6 @@ name = \"percent-encoding\"\n version = \"2.1.0\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n \n-[[package]]\n-name = \"pest\"\n-version = \"2.1.1\"\n-source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-dependencies = [\n- \"ucd-trie 0.1.2 (registry+https://github.com/rust-lang/crates.io-index)\",\n-]\n-\n-[[package]]\n-name = \"pest_derive\"\n-version = \"2.1.0\"\n-source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-dependencies = [\n- \"pest 2.1.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"pest_generator 2.1.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n-]\n-\n-[[package]]\n-name = \"pest_generator\"\n-version = \"2.1.0\"\n-source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-dependencies = [\n- \"pest 2.1.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"pest_meta 2.1.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"proc-macro2 0.4.30 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"quote 0.6.13 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"syn 0.15.44 (registry+https://github.com/rust-lang/crates.io-index)\",\n-]\n-\n-[[package]]\n-name = \"pest_meta\"\n-version = \"2.1.1\"\n-source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-dependencies = [\n- \"maplit 1.0.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"pest 2.1.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"sha-1 0.8.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n-]\n-\n [[package]]\n name = \"petgraph\"\n version = \"0.4.13\"\n@@ -1134,7 +1043,7 @@ dependencies = [\n  \"chalk-rust-ir 0.1.0 (git+https://github.com/rust-lang/chalk.git)\",\n  \"chalk-solve 0.1.0 (git+https://github.com/rust-lang/chalk.git)\",\n  \"ena 0.13.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"insta 0.10.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"insta 0.11.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"lalrpop-intern 0.15.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"log 0.4.8 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"once_cell 0.2.6 (registry+https://github.com/rust-lang/crates.io-index)\",\n@@ -1156,7 +1065,7 @@ version = \"0.1.0\"\n dependencies = [\n  \"format-buf 1.0.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"fst 0.3.5 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"insta 0.10.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"insta 0.11.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"itertools 0.8.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"join_to_string 0.1.3 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"log 0.4.8 (registry+https://github.com/rust-lang/crates.io-index)\",\n@@ -1529,16 +1438,6 @@ dependencies = [\n  \"winapi 0.3.7 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n \n-[[package]]\n-name = \"ron\"\n-version = \"0.4.2\"\n-source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-dependencies = [\n- \"base64 0.10.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"bitflags 1.1.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"serde 1.0.99 (registry+https://github.com/rust-lang/crates.io-index)\",\n-]\n-\n [[package]]\n name = \"ron\"\n version = \"0.5.1\"\n@@ -1688,17 +1587,6 @@ dependencies = [\n  \"yaml-rust 0.4.3 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n \n-[[package]]\n-name = \"sha-1\"\n-version = \"0.8.1\"\n-source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-dependencies = [\n- \"block-buffer 0.7.3 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"digest 0.8.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"fake-simd 0.1.2 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"opaque-debug 0.2.3 (registry+https://github.com/rust-lang/crates.io-index)\",\n-]\n-\n [[package]]\n name = \"slab\"\n version = \"0.4.2\"\n@@ -1842,16 +1730,6 @@ dependencies = [\n  \"winapi 0.3.7 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n \n-[[package]]\n-name = \"typenum\"\n-version = \"1.10.0\"\n-source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-\n-[[package]]\n-name = \"ucd-trie\"\n-version = \"0.1.2\"\n-source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-\n [[package]]\n name = \"unicase\"\n version = \"2.4.0\"\n@@ -2006,10 +1884,7 @@ source = \"registry+https://github.com/rust-lang/crates.io-index\"\n \"checksum bit-set 0.5.1 (registry+https://github.com/rust-lang/crates.io-index)\" = \"e84c238982c4b1e1ee668d136c510c67a13465279c0cb367ea6baf6310620a80\"\n \"checksum bit-vec 0.5.1 (registry+https://github.com/rust-lang/crates.io-index)\" = \"f59bbe95d4e52a6398ec21238d31577f2b28a9d86807f06ca59d191d8440d0bb\"\n \"checksum bitflags 1.1.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"3d155346769a6855b86399e9bc3814ab343cd3d62c7e985113d46a0ec3c281fd\"\n-\"checksum block-buffer 0.7.3 (registry+https://github.com/rust-lang/crates.io-index)\" = \"c0940dc441f31689269e10ac70eb1002a3a1d3ad1390e030043662eb7fe4688b\"\n-\"checksum block-padding 0.1.4 (registry+https://github.com/rust-lang/crates.io-index)\" = \"6d4dc3af3ee2e12f3e5d224e5e1e3d73668abbeb69e566d361f7d5563a4fdf09\"\n \"checksum bstr 0.2.7 (registry+https://github.com/rust-lang/crates.io-index)\" = \"94cdf78eb7e94c566c1f5dbe2abf8fc70a548fc902942a48c4b3a98b48ca9ade\"\n-\"checksum byte-tools 0.3.1 (registry+https://github.com/rust-lang/crates.io-index)\" = \"e3b5ca7a04898ad4bcd41c90c5285445ff5b791899bb1b0abdd2a2aa791211d7\"\n \"checksum byteorder 1.3.2 (registry+https://github.com/rust-lang/crates.io-index)\" = \"a7c3dd8985a7111efc5c80b44e23ecdd8c007de8ade3b96595387e812b957cf5\"\n \"checksum c2-chacha 0.2.2 (registry+https://github.com/rust-lang/crates.io-index)\" = \"7d64d04786e0f528460fc884753cf8dddcc466be308f6026f8e355c41a0e4101\"\n \"checksum cargo_metadata 0.8.2 (registry+https://github.com/rust-lang/crates.io-index)\" = \"700b3731fd7d357223d0000f4dbf1808401b694609035c3c411fbc0cd375c426\"\n@@ -2021,11 +1896,11 @@ source = \"registry+https://github.com/rust-lang/crates.io-index\"\n \"checksum chalk-rust-ir 0.1.0 (git+https://github.com/rust-lang/chalk.git)\" = \"<none>\"\n \"checksum chalk-solve 0.1.0 (git+https://github.com/rust-lang/chalk.git)\" = \"<none>\"\n \"checksum chrono 0.4.7 (registry+https://github.com/rust-lang/crates.io-index)\" = \"77d81f58b7301084de3b958691458a53c3f7e0b1d702f77e550b6a88e3a88abe\"\n-\"checksum ci_info 0.3.1 (registry+https://github.com/rust-lang/crates.io-index)\" = \"e5e881307a989a3a5e20d52a32cc05950e3c2178cccfcc9428271a6cde09f902\"\n \"checksum clap 2.33.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"5067f5bb2d80ef5d68b4c87db81601f0b75bca627bc2ef76b141d7b846a3c6d9\"\n \"checksum clicolors-control 1.0.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"73abfd4c73d003a674ce5d2933fca6ce6c42480ea84a5ffe0a2dc39ed56300f9\"\n \"checksum cloudabi 0.0.3 (registry+https://github.com/rust-lang/crates.io-index)\" = \"ddfc5b9aa5d4507acaf872de71051dfd0e309860e88966e1051e462a077aac4f\"\n \"checksum console 0.7.7 (registry+https://github.com/rust-lang/crates.io-index)\" = \"8ca57c2c14b8a2bf3105bc9d15574aad80babf6a9c44b1058034cdf8bd169628\"\n+\"checksum console 0.8.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"b147390a412132d75d10dd3b7b175a69cf5fd95032f7503c7091b8831ba10242\"\n \"checksum crossbeam 0.7.2 (registry+https://github.com/rust-lang/crates.io-index)\" = \"2d818a4990769aac0c7ff1360e233ef3a41adcb009ebb2036bf6915eb0f6b23c\"\n \"checksum crossbeam-channel 0.3.9 (registry+https://github.com/rust-lang/crates.io-index)\" = \"c8ec7fcd21571dc78f96cc96243cab8d8f035247c3efd16c687be154c3fa9efa\"\n \"checksum crossbeam-deque 0.6.3 (registry+https://github.com/rust-lang/crates.io-index)\" = \"05e44b8cf3e1a625844d1750e1f7820da46044ff6d28f4d43e455ba3e5bb2c13\"\n@@ -2035,7 +1910,6 @@ source = \"registry+https://github.com/rust-lang/crates.io-index\"\n \"checksum crossbeam-utils 0.6.6 (registry+https://github.com/rust-lang/crates.io-index)\" = \"04973fa96e96579258a5091af6003abde64af786b860f18622b82e026cca60e6\"\n \"checksum derive-new 0.5.8 (registry+https://github.com/rust-lang/crates.io-index)\" = \"71f31892cd5c62e414316f2963c5689242c43d8e7bbcaaeca97e5e28c95d91d9\"\n \"checksum difference 2.0.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"524cbf6897b527295dff137cec09ecf3a05f4fddffd7dfcd1585403449e74198\"\n-\"checksum digest 0.8.1 (registry+https://github.com/rust-lang/crates.io-index)\" = \"f3d0c8c8752312f9713efd397ff63acb9f85585afbf179282e720e7704954dd5\"\n \"checksum drop_bomb 0.1.4 (registry+https://github.com/rust-lang/crates.io-index)\" = \"69b26e475fd29098530e709294e94e661974c851aed42512793f120fed4e199f\"\n \"checksum dtoa 0.4.4 (registry+https://github.com/rust-lang/crates.io-index)\" = \"ea57b42383d091c85abcc2706240b94ab2a8fa1fc81c10ff23c4de06e2a90b5e\"\n \"checksum either 1.5.2 (registry+https://github.com/rust-lang/crates.io-index)\" = \"5527cfe0d098f36e3f8839852688e63c8fff1c90b2b405aef730615f9a7bcf7b\"\n@@ -2044,7 +1918,6 @@ source = \"registry+https://github.com/rust-lang/crates.io-index\"\n \"checksum encode_unicode 0.3.5 (registry+https://github.com/rust-lang/crates.io-index)\" = \"90b2c9496c001e8cb61827acdefad780795c42264c137744cae6f7d9e3450abd\"\n \"checksum failure 0.1.5 (registry+https://github.com/rust-lang/crates.io-index)\" = \"795bd83d3abeb9220f257e597aa0080a508b27533824adf336529648f6abf7e2\"\n \"checksum failure_derive 0.1.5 (registry+https://github.com/rust-lang/crates.io-index)\" = \"ea1063915fd7ef4309e222a5a07cf9c319fb9c7836b1f89b85458672dbb127e1\"\n-\"checksum fake-simd 0.1.2 (registry+https://github.com/rust-lang/crates.io-index)\" = \"e88a8acf291dafb59c2d96e8f59828f3838bb1a70398823ade51a84de6a6deed\"\n \"checksum filetime 0.2.5 (registry+https://github.com/rust-lang/crates.io-index)\" = \"2f8c63033fcba1f51ef744505b3cad42510432b904c062afa67ad7ece008429d\"\n \"checksum fixedbitset 0.1.9 (registry+https://github.com/rust-lang/crates.io-index)\" = \"86d4de0081402f5e88cdac65c8dcdcc73118c1a7a465e2a05f0da05843a8ea33\"\n \"checksum flexi_logger 0.14.1 (registry+https://github.com/rust-lang/crates.io-index)\" = \"2be2727ae1f60711d1991788605245e70cc500bd1d92edb909af160634e1a869\"\n@@ -2057,7 +1930,6 @@ source = \"registry+https://github.com/rust-lang/crates.io-index\"\n \"checksum fuchsia-cprng 0.1.1 (registry+https://github.com/rust-lang/crates.io-index)\" = \"a06f77d526c1a601b7c4cdd98f54b5eaabffc14d5f2f0296febdc7f357c6d3ba\"\n \"checksum fuchsia-zircon 0.3.3 (registry+https://github.com/rust-lang/crates.io-index)\" = \"2e9763c69ebaae630ba35f74888db465e49e259ba1bc0eda7d06f4a067615d82\"\n \"checksum fuchsia-zircon-sys 0.3.3 (registry+https://github.com/rust-lang/crates.io-index)\" = \"3dcaa9ae7725d12cdb85b3ad99a434db70b468c09ded17e012d86b5c1010f7a7\"\n-\"checksum generic-array 0.12.3 (registry+https://github.com/rust-lang/crates.io-index)\" = \"c68f0274ae0e023facc3c97b2e00f076be70e254bc851d972503b328db79b2ec\"\n \"checksum getrandom 0.1.10 (registry+https://github.com/rust-lang/crates.io-index)\" = \"6171a6cc63fbabbe27c2b5ee268e8b7fe5dc1eb0dd2dfad537c1dfed6f69117e\"\n \"checksum glob 0.3.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"9b919933a397b79c37e33b77bb2aa3dc8eb6e165ad809e58ff75bc7db2e34574\"\n \"checksum globset 0.4.4 (registry+https://github.com/rust-lang/crates.io-index)\" = \"925aa2cac82d8834e2b2a4415b6f6879757fb5c0928fc445ae76461a12eed8f2\"\n@@ -2067,7 +1939,7 @@ source = \"registry+https://github.com/rust-lang/crates.io-index\"\n \"checksum indicatif 0.11.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"2c60da1c9abea75996b70a931bba6c750730399005b61ccd853cee50ef3d0d0c\"\n \"checksum inotify 0.6.1 (registry+https://github.com/rust-lang/crates.io-index)\" = \"40b54539f3910d6f84fbf9a643efd6e3aa6e4f001426c0329576128255994718\"\n \"checksum inotify-sys 0.1.3 (registry+https://github.com/rust-lang/crates.io-index)\" = \"e74a1aa87c59aeff6ef2cc2fa62d41bc43f54952f55652656b18a02fd5e356c0\"\n-\"checksum insta 0.10.1 (registry+https://github.com/rust-lang/crates.io-index)\" = \"fcb8917b02e8fee27da19291be792fa53acec68ea0b7a45a914dcb80a67d42ab\"\n+\"checksum insta 0.11.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"23f83ab4ee86f38b292f0420c27fd412690a4baa9ea0ad4e3fa624bf34379b76\"\n \"checksum iovec 0.1.2 (registry+https://github.com/rust-lang/crates.io-index)\" = \"dbe6e417e7d0975db6512b90796e8ce223145ac4e33c377e4a42882a0e88bb08\"\n \"checksum itertools 0.8.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"5b8467d9c1cebe26feb08c640139247fac215782d35371ade9a2136ed6085358\"\n \"checksum itoa 0.4.4 (registry+https://github.com/rust-lang/crates.io-index)\" = \"501266b7edd0174f8530248f87f99c88fbe60ca4ef3dd486835b8d8d53136f7f\"\n@@ -2085,7 +1957,6 @@ source = \"registry+https://github.com/rust-lang/crates.io-index\"\n \"checksum lock_api 0.3.1 (registry+https://github.com/rust-lang/crates.io-index)\" = \"f8912e782533a93a167888781b836336a6ca5da6175c05944c86cf28c31104dc\"\n \"checksum log 0.4.8 (registry+https://github.com/rust-lang/crates.io-index)\" = \"14b6052be84e6b71ab17edffc2eeabf5c2c3ae1fdb464aae35ac50c67a44e1f7\"\n \"checksum lsp-types 0.60.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"fe3edefcd66dde1f7f1df706f46520a3c93adc5ca4bc5747da6621195e894efd\"\n-\"checksum maplit 1.0.1 (registry+https://github.com/rust-lang/crates.io-index)\" = \"08cbb6b4fef96b6d77bfc40ec491b1690c779e77b05cd9f07f787ed376fd4c43\"\n \"checksum matches 0.1.8 (registry+https://github.com/rust-lang/crates.io-index)\" = \"7ffc5c5338469d4d3ea17d269fa8ea3512ad247247c30bd2df69e68309ed0a08\"\n \"checksum memchr 2.2.1 (registry+https://github.com/rust-lang/crates.io-index)\" = \"88579771288728879b57485cc7d6b07d648c9f0141eb955f8ab7f9d45394468e\"\n \"checksum memoffset 0.5.1 (registry+https://github.com/rust-lang/crates.io-index)\" = \"ce6075db033bbbb7ee5a0bbd3a3186bbae616f57fb001c485c7ff77955f8177f\"\n@@ -2100,17 +1971,12 @@ source = \"registry+https://github.com/rust-lang/crates.io-index\"\n \"checksum num_cpus 1.10.1 (registry+https://github.com/rust-lang/crates.io-index)\" = \"bcef43580c035376c0705c42792c294b66974abbfd2789b511784023f71f3273\"\n \"checksum number_prefix 0.2.8 (registry+https://github.com/rust-lang/crates.io-index)\" = \"dbf9993e59c894e3c08aa1c2712914e9e6bf1fcbfc6bef283e2183df345a4fee\"\n \"checksum once_cell 0.2.6 (registry+https://github.com/rust-lang/crates.io-index)\" = \"1824583b0e4dc0c1716eea4fb51a9ca2634943f0b07fd929e79af6aeb5a513cc\"\n-\"checksum opaque-debug 0.2.3 (registry+https://github.com/rust-lang/crates.io-index)\" = \"2839e79665f131bdb5782e51f2c6c9599c133c6098982a54c794358bf432529c\"\n \"checksum ordermap 0.3.5 (registry+https://github.com/rust-lang/crates.io-index)\" = \"a86ed3f5f244b372d6b1a00b72ef7f8876d0bc6a78a4c9985c53614041512063\"\n \"checksum parking_lot 0.9.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"f842b1982eb6c2fe34036a4fbfb06dd185a3f5c8edfaacdf7d1ea10b07de6252\"\n \"checksum parking_lot_core 0.6.2 (registry+https://github.com/rust-lang/crates.io-index)\" = \"b876b1b9e7ac6e1a74a6da34d25c42e17e8862aa409cbbbdcfc8d86c6f3bc62b\"\n \"checksum paste 0.1.6 (registry+https://github.com/rust-lang/crates.io-index)\" = \"423a519e1c6e828f1e73b720f9d9ed2fa643dce8a7737fb43235ce0b41eeaa49\"\n \"checksum paste-impl 0.1.6 (registry+https://github.com/rust-lang/crates.io-index)\" = \"4214c9e912ef61bf42b81ba9a47e8aad1b2ffaf739ab162bf96d1e011f54e6c5\"\n \"checksum percent-encoding 2.1.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"d4fd5641d01c8f18a23da7b6fe29298ff4b55afcccdf78973b24cf3175fee32e\"\n-\"checksum pest 2.1.1 (registry+https://github.com/rust-lang/crates.io-index)\" = \"933085deae3f32071f135d799d75667b63c8dc1f4537159756e3d4ceab41868c\"\n-\"checksum pest_derive 2.1.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"833d1ae558dc601e9a60366421196a8d94bc0ac980476d0b67e1d0988d72b2d0\"\n-\"checksum pest_generator 2.1.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"63120576c4efd69615b5537d3d052257328a4ca82876771d6944424ccfd9f646\"\n-\"checksum pest_meta 2.1.1 (registry+https://github.com/rust-lang/crates.io-index)\" = \"f249ea6de7c7b7aba92b4ff4376a994c6dbd98fd2166c89d5c4947397ecb574d\"\n \"checksum petgraph 0.4.13 (registry+https://github.com/rust-lang/crates.io-index)\" = \"9c3659d1ee90221741f65dd128d9998311b0e40c5d3c23a62445938214abce4f\"\n \"checksum ppv-lite86 0.2.5 (registry+https://github.com/rust-lang/crates.io-index)\" = \"e3cbf9f658cdb5000fcf6f362b8ea2ba154b9f146a61c7a20d647034c6b6561b\"\n \"checksum proc-macro-hack 0.5.9 (registry+https://github.com/rust-lang/crates.io-index)\" = \"e688f31d92ffd7c1ddc57a1b4e6d773c0f2a14ee437a4b0a4f5a69c80eb221c8\"\n@@ -2145,7 +2011,6 @@ source = \"registry+https://github.com/rust-lang/crates.io-index\"\n \"checksum regex-syntax 0.6.11 (registry+https://github.com/rust-lang/crates.io-index)\" = \"b143cceb2ca5e56d5671988ef8b15615733e7ee16cd348e064333b251b89343f\"\n \"checksum relative-path 0.4.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"0e7790c7f1cc73d831d28dc5a7deb316a006e7848e6a7f467cdb10a0a9e0fb1c\"\n \"checksum remove_dir_all 0.5.2 (registry+https://github.com/rust-lang/crates.io-index)\" = \"4a83fa3702a688b9359eccba92d153ac33fd2e8462f9e0e3fdf155239ea7792e\"\n-\"checksum ron 0.4.2 (registry+https://github.com/rust-lang/crates.io-index)\" = \"17f52a24414403f81528b67488cf8edc4eda977d3af1646bb6b106a600ead78f\"\n \"checksum ron 0.5.1 (registry+https://github.com/rust-lang/crates.io-index)\" = \"2ece421e0c4129b90e4a35b6f625e472e96c552136f5093a2f4fa2bbb75a62d5\"\n \"checksum rowan 0.6.2 (registry+https://github.com/rust-lang/crates.io-index)\" = \"dc2b79612dedc9004083a61448eb669d336d56690aab29fbd7249e8c8ab41d8c\"\n \"checksum rustc-demangle 0.1.16 (registry+https://github.com/rust-lang/crates.io-index)\" = \"4c691c0e608126e00913e33f0ccf3727d5fc84573623b8d65b2df340b5201783\"\n@@ -2163,7 +2028,6 @@ source = \"registry+https://github.com/rust-lang/crates.io-index\"\n \"checksum serde_json 1.0.40 (registry+https://github.com/rust-lang/crates.io-index)\" = \"051c49229f282f7c6f3813f8286cc1e3323e8051823fce42c7ea80fe13521704\"\n \"checksum serde_repr 0.1.5 (registry+https://github.com/rust-lang/crates.io-index)\" = \"cd02c7587ec314570041b2754829f84d873ced14a96d1fd1823531e11db40573\"\n \"checksum serde_yaml 0.8.9 (registry+https://github.com/rust-lang/crates.io-index)\" = \"38b08a9a90e5260fe01c6480ec7c811606df6d3a660415808c3c3fa8ed95b582\"\n-\"checksum sha-1 0.8.1 (registry+https://github.com/rust-lang/crates.io-index)\" = \"23962131a91661d643c98940b20fcaffe62d776a823247be80a48fcb8b6fce68\"\n \"checksum slab 0.4.2 (registry+https://github.com/rust-lang/crates.io-index)\" = \"c111b5bd5695e56cffe5129854aa230b39c93a305372fdbb2668ca2394eea9f8\"\n \"checksum smallvec 0.6.10 (registry+https://github.com/rust-lang/crates.io-index)\" = \"ab606a9c5e214920bb66c458cd7be8ef094f813f20fe77a54cc7dbfff220d4b7\"\n \"checksum smol_str 0.1.12 (registry+https://github.com/rust-lang/crates.io-index)\" = \"590700be3630457c56f8c73c0ea39881476ad7076cd84057d44f4f38f79914fb\"\n@@ -2179,8 +2043,6 @@ source = \"registry+https://github.com/rust-lang/crates.io-index\"\n \"checksum thread_local 0.3.6 (registry+https://github.com/rust-lang/crates.io-index)\" = \"c6b53e329000edc2b34dbe8545fd20e55a333362d0a321909685a19bd28c3f1b\"\n \"checksum threadpool 1.7.1 (registry+https://github.com/rust-lang/crates.io-index)\" = \"e2f0c90a5f3459330ac8bc0d2f879c693bb7a2f59689c1083fc4ef83834da865\"\n \"checksum time 0.1.42 (registry+https://github.com/rust-lang/crates.io-index)\" = \"db8dcfca086c1143c9270ac42a2bbd8a7ee477b78ac8e45b19abfb0cbede4b6f\"\n-\"checksum typenum 1.10.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"612d636f949607bdf9b123b4a6f6d966dedf3ff669f7f045890d3a4a73948169\"\n-\"checksum ucd-trie 0.1.2 (registry+https://github.com/rust-lang/crates.io-index)\" = \"8f00ed7be0c1ff1e24f46c3d2af4859f7e863672ba3a6e92e7cff702bf9f06c2\"\n \"checksum unicase 2.4.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"a84e5511b2a947f3ae965dcb29b13b7b1691b6e7332cf5dbc1744138d5acb7f6\"\n \"checksum unicode-bidi 0.3.4 (registry+https://github.com/rust-lang/crates.io-index)\" = \"49f2bd0c6468a8230e1db229cff8029217cf623c767ea5d60bfbd42729ea54d5\"\n \"checksum unicode-normalization 0.1.8 (registry+https://github.com/rust-lang/crates.io-index)\" = \"141339a08b982d942be2ca06ff8b076563cbe223d1befd5450716790d44e2426\""}, {"sha": "646c96692da681d599fb39a51a072b2fd4221898", "filename": "crates/ra_hir/Cargo.toml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7d72ca80003b7915ed7fc64907b5b6dc5c88dacd/crates%2Fra_hir%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/7d72ca80003b7915ed7fc64907b5b6dc5c88dacd/crates%2Fra_hir%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2FCargo.toml?ref=7d72ca80003b7915ed7fc64907b5b6dc5c88dacd", "patch": "@@ -27,4 +27,4 @@ chalk-ir = { git = \"https://github.com/rust-lang/chalk.git\" }\n lalrpop-intern = \"0.15.1\"\n \n [dev-dependencies]\n-insta = \"0.10.0\"\n+insta = \"0.11.0\""}, {"sha": "77a44a275b5deb5a42ea685a03c2229da9cb90e0", "filename": "crates/ra_hir/src/mock.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7d72ca80003b7915ed7fc64907b5b6dc5c88dacd/crates%2Fra_hir%2Fsrc%2Fmock.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7d72ca80003b7915ed7fc64907b5b6dc5c88dacd/crates%2Fra_hir%2Fsrc%2Fmock.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Fmock.rs?ref=7d72ca80003b7915ed7fc64907b5b6dc5c88dacd", "patch": "@@ -75,7 +75,7 @@ impl MockDatabase {\n     }\n \n     pub fn diagnostics(&self) -> String {\n-        let mut buf = String::from(\"\\n\");\n+        let mut buf = String::new();\n         let mut files: Vec<FileId> = self.files.values().copied().collect();\n         files.sort();\n         for file in files {"}, {"sha": "c1dbad283a4deaf7b4b0a9010e27e98a62578799", "filename": "crates/ra_hir/src/nameres/tests.rs", "status": "modified", "additions": 16, "deletions": 16, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/7d72ca80003b7915ed7fc64907b5b6dc5c88dacd/crates%2Fra_hir%2Fsrc%2Fnameres%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7d72ca80003b7915ed7fc64907b5b6dc5c88dacd/crates%2Fra_hir%2Fsrc%2Fnameres%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Fnameres%2Ftests.rs?ref=7d72ca80003b7915ed7fc64907b5b6dc5c88dacd", "patch": "@@ -6,7 +6,7 @@ mod mods;\n \n use std::sync::Arc;\n \n-use insta::assert_snapshot_matches;\n+use insta::assert_snapshot;\n use ra_db::SourceDatabase;\n use test_utils::covers;\n \n@@ -97,7 +97,7 @@ fn crate_def_map_smoke_test() {\n         enum E { V }\n         \",\n     );\n-    assert_snapshot_matches!(map, @r###\"\n+    assert_snapshot!(map, @r###\"\n         \u22eecrate\n         \u22eeE: t\n         \u22eeS: t v\n@@ -130,7 +130,7 @@ fn bogus_paths() {\n \n         \",\n     );\n-    assert_snapshot_matches!(map, @r###\"\n+    assert_snapshot!(map, @r###\"\n    \u22eecrate\n    \u22eeS: t v\n    \u22eefoo: t\n@@ -153,7 +153,7 @@ fn use_as() {\n         pub struct Baz;\n         \",\n     );\n-    assert_snapshot_matches!(map,\n+    assert_snapshot!(map,\n         @r###\"\n    \u22eecrate\n    \u22eeFoo: t v\n@@ -182,7 +182,7 @@ fn use_trees() {\n         pub enum Quux {};\n         \",\n     );\n-    assert_snapshot_matches!(map, @r###\"\n+    assert_snapshot!(map, @r###\"\n         \u22eecrate\n         \u22eeBaz: t v\n         \u22eeQuux: t\n@@ -215,7 +215,7 @@ fn re_exports() {\n         pub struct Baz;\n         \",\n     );\n-    assert_snapshot_matches!(map, @r###\"\n+    assert_snapshot!(map, @r###\"\n         \u22eecrate\n         \u22eeBaz: t v\n         \u22eefoo: t\n@@ -250,7 +250,7 @@ fn std_prelude() {\n             \"test_crate\": (\"/lib.rs\", []),\n         },\n     );\n-    assert_snapshot_matches!(map, @r###\"\n+    assert_snapshot!(map, @r###\"\n         \u22eecrate\n         \u22eeBar: t v\n         \u22eeBaz: t v\n@@ -267,7 +267,7 @@ fn can_import_enum_variant() {\n         use self::E::V;\n         \",\n     );\n-    assert_snapshot_matches!(map, @r###\"\n+    assert_snapshot!(map, @r###\"\n         \u22eecrate\n         \u22eeE: t\n         \u22eeV: t v\n@@ -299,7 +299,7 @@ fn edition_2015_imports() {\n         },\n     );\n \n-    assert_snapshot_matches!(map, @r###\"\n+    assert_snapshot!(map, @r###\"\n         \u22eecrate\n         \u22eebar: t\n         \u22eefoo: t\n@@ -326,7 +326,7 @@ fn item_map_using_self() {\n         pub struct Baz;\n         \",\n     );\n-    assert_snapshot_matches!(map, @r###\"\n+    assert_snapshot!(map, @r###\"\n         \u22eecrate\n         \u22eeBaz: t v\n         \u22eefoo: t\n@@ -355,7 +355,7 @@ fn item_map_across_crates() {\n         },\n     );\n \n-    assert_snapshot_matches!(map, @r###\"\n+    assert_snapshot!(map, @r###\"\n         \u22eecrate\n         \u22eeBaz: t v\n     \"###);\n@@ -383,7 +383,7 @@ fn extern_crate_rename() {\n         },\n     );\n \n-    assert_snapshot_matches!(map, @r###\"\n+    assert_snapshot!(map, @r###\"\n    \u22eecrate\n    \u22eealloc_crate: t\n    \u22eesync: t\n@@ -415,7 +415,7 @@ fn extern_crate_rename_2015_edition() {\n         },\n     );\n \n-    assert_snapshot_matches!(map,\n+    assert_snapshot!(map,\n         @r###\"\n    \u22eecrate\n    \u22eealloc_crate: t\n@@ -449,7 +449,7 @@ fn import_across_source_roots() {\n         },\n     );\n \n-    assert_snapshot_matches!(map, @r###\"\n+    assert_snapshot!(map, @r###\"\n         \u22eecrate\n         \u22eeC: t v\n     \"###);\n@@ -476,7 +476,7 @@ fn reexport_across_crates() {\n         },\n     );\n \n-    assert_snapshot_matches!(map, @r###\"\n+    assert_snapshot!(map, @r###\"\n         \u22eecrate\n         \u22eeBaz: t v\n     \"###);\n@@ -499,7 +499,7 @@ fn values_dont_shadow_extern_crates() {\n         },\n     );\n \n-    assert_snapshot_matches!(map, @r###\"\n+    assert_snapshot!(map, @r###\"\n         \u22eecrate\n         \u22eeBar: t v\n         \u22eefoo: v"}, {"sha": "7ac22b47b80809e22ca5614cacf0f23de386cb63", "filename": "crates/ra_hir/src/nameres/tests/globs.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/7d72ca80003b7915ed7fc64907b5b6dc5c88dacd/crates%2Fra_hir%2Fsrc%2Fnameres%2Ftests%2Fglobs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7d72ca80003b7915ed7fc64907b5b6dc5c88dacd/crates%2Fra_hir%2Fsrc%2Fnameres%2Ftests%2Fglobs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Fnameres%2Ftests%2Fglobs.rs?ref=7d72ca80003b7915ed7fc64907b5b6dc5c88dacd", "patch": "@@ -17,7 +17,7 @@ fn glob_1() {\n         pub struct Baz;\n         \",\n     );\n-    assert_snapshot_matches!(map, @r###\"\n+    assert_snapshot!(map, @r###\"\n    \u22eecrate\n    \u22eeBaz: t v\n    \u22eeFoo: t v\n@@ -53,7 +53,7 @@ fn glob_2() {\n         pub use super::*;\n         \",\n     );\n-    assert_snapshot_matches!(map, @r###\"\n+    assert_snapshot!(map, @r###\"\n    \u22eecrate\n    \u22eeBaz: t v\n    \u22eeFoo: t v\n@@ -89,7 +89,7 @@ fn glob_across_crates() {\n             \"test_crate\": (\"/lib.rs\", []),\n         },\n     );\n-    assert_snapshot_matches!(map, @r###\"\n+    assert_snapshot!(map, @r###\"\n    \u22eecrate\n    \u22eeBaz: t v\n     \"###\n@@ -108,7 +108,7 @@ fn glob_enum() {\n         use self::Foo::*;\n         \",\n     );\n-    assert_snapshot_matches!(map, @r###\"\n+    assert_snapshot!(map, @r###\"\n    \u22eecrate\n    \u22eeBar: t v\n    \u22eeBaz: t v"}, {"sha": "631df2ceff12deeffe5d2654d8869a492fa9212b", "filename": "crates/ra_hir/src/nameres/tests/macros.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/7d72ca80003b7915ed7fc64907b5b6dc5c88dacd/crates%2Fra_hir%2Fsrc%2Fnameres%2Ftests%2Fmacros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7d72ca80003b7915ed7fc64907b5b6dc5c88dacd/crates%2Fra_hir%2Fsrc%2Fnameres%2Ftests%2Fmacros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Fnameres%2Ftests%2Fmacros.rs?ref=7d72ca80003b7915ed7fc64907b5b6dc5c88dacd", "patch": "@@ -17,7 +17,7 @@ fn macro_rules_are_globally_visible() {\n         structs!(Bar, Baz);\n         \",\n     );\n-    assert_snapshot_matches!(map, @r###\"\n+    assert_snapshot!(map, @r###\"\n    \u22eecrate\n    \u22eeFoo: t v\n    \u22eenested: t\n@@ -45,7 +45,7 @@ fn macro_rules_can_define_modules() {\n         struct X;\n         \",\n     );\n-    assert_snapshot_matches!(map, @r###\"\n+    assert_snapshot!(map, @r###\"\n    \u22eecrate\n    \u22eem: m\n    \u22een1: t\n@@ -82,7 +82,7 @@ fn macro_rules_from_other_crates_are_visible() {\n             \"foo\": (\"/lib.rs\", []),\n         },\n     );\n-    assert_snapshot_matches!(map, @r###\"\n+    assert_snapshot!(map, @r###\"\n    \u22eecrate\n    \u22eeBar: t v\n    \u22eeFoo: t v\n@@ -129,7 +129,7 @@ fn unexpanded_macro_should_expand_by_fixedpoint_loop() {\n             \"foo\": (\"/lib.rs\", []),\n         },\n     );\n-    assert_snapshot_matches!(map, @r###\"\n+    assert_snapshot!(map, @r###\"\n    \u22eecrate\n    \u22eeFoo: t v\n    \u22eebar: m"}, {"sha": "4f8398460d11e953fffaa2e368e1f60c77fd9241", "filename": "crates/ra_hir/src/nameres/tests/mods.rs", "status": "modified", "additions": 28, "deletions": 28, "changes": 56, "blob_url": "https://github.com/rust-lang/rust/blob/7d72ca80003b7915ed7fc64907b5b6dc5c88dacd/crates%2Fra_hir%2Fsrc%2Fnameres%2Ftests%2Fmods.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7d72ca80003b7915ed7fc64907b5b6dc5c88dacd/crates%2Fra_hir%2Fsrc%2Fnameres%2Ftests%2Fmods.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Fnameres%2Ftests%2Fmods.rs?ref=7d72ca80003b7915ed7fc64907b5b6dc5c88dacd", "patch": "@@ -19,7 +19,7 @@ fn name_res_works_for_broken_modules() {\n         pub struct Baz;\n         \",\n     );\n-    assert_snapshot_matches!(map, @r###\"\n+    assert_snapshot!(map, @r###\"\n         \u22eecrate\n         \u22eeBaz: _\n     \"###);\n@@ -41,7 +41,7 @@ fn module_resolution_works_for_non_standard_filenames() {\n         },\n     );\n \n-    assert_snapshot_matches!(map, @r###\"\n+    assert_snapshot!(map, @r###\"\n         \u22eecrate\n         \u22eeBar: t v\n         \u22eefoo: t\n@@ -67,7 +67,7 @@ fn module_resolution_works_for_raw_modules() {\n         },\n     );\n \n-    assert_snapshot_matches!(map, @r###\"\n+    assert_snapshot!(map, @r###\"\n         \u22eecrate\n         \u22eeBar: t v\n         \u22eeasync: t\n@@ -94,7 +94,7 @@ fn module_resolution_decl_path() {\n         },\n     );\n \n-    assert_snapshot_matches!(map, @r###\"\n+    assert_snapshot!(map, @r###\"\n         \u22eecrate\n         \u22eeBar: t v\n         \u22eefoo: t\n@@ -110,7 +110,7 @@ fn module_resolution_module_with_path_in_mod_rs() {\n         r###\"\n         //- /main.rs\n         mod foo;\n-        \n+\n         //- /foo/mod.rs\n         #[path = \"baz.rs\"]\n         pub mod bar;\n@@ -125,7 +125,7 @@ fn module_resolution_module_with_path_in_mod_rs() {\n         },\n     );\n \n-    assert_snapshot_matches!(map, @r###\"\n+    assert_snapshot!(map, @r###\"\n         \u22eecrate\n         \u22eefoo: t\n         \u22ee\n@@ -144,7 +144,7 @@ fn module_resolution_module_with_path_non_crate_root() {\n         r###\"\n         //- /main.rs\n         mod foo;\n-        \n+\n         //- /foo.rs\n         #[path = \"baz.rs\"]\n         pub mod bar;\n@@ -159,7 +159,7 @@ fn module_resolution_module_with_path_non_crate_root() {\n         },\n     );\n \n-    assert_snapshot_matches!(map, @r###\"\n+    assert_snapshot!(map, @r###\"\n         \u22eecrate\n         \u22eefoo: t\n         \u22ee\n@@ -189,7 +189,7 @@ fn module_resolution_module_decl_path_super() {\n         },\n     );\n \n-    assert_snapshot_matches!(map, @r###\"\n+    assert_snapshot!(map, @r###\"\n         \u22eecrate\n         \u22eeBaz: t v\n         \u22eefoo: t\n@@ -215,7 +215,7 @@ fn module_resolution_explicit_path_mod_rs() {\n         },\n     );\n \n-    assert_snapshot_matches!(map, @r###\"\n+    assert_snapshot!(map, @r###\"\n         \u22eecrate\n         \u22eefoo: t\n         \u22ee\n@@ -243,7 +243,7 @@ fn module_resolution_relative_path() {\n         },\n     );\n \n-    assert_snapshot_matches!(map, @r###\"\n+    assert_snapshot!(map, @r###\"\n         \u22eecrate\n         \u22eefoo: t\n         \u22ee\n@@ -274,7 +274,7 @@ fn module_resolution_relative_path_2() {\n         },\n     );\n \n-    assert_snapshot_matches!(map, @r###\"\n+    assert_snapshot!(map, @r###\"\n         \u22eecrate\n         \u22eefoo: t\n         \u22ee\n@@ -302,7 +302,7 @@ fn module_resolution_explicit_path_mod_rs_2() {\n         },\n     );\n \n-    assert_snapshot_matches!(map, @r###\"\n+    assert_snapshot!(map, @r###\"\n         \u22eecrate\n         \u22eefoo: t\n         \u22ee\n@@ -327,7 +327,7 @@ fn module_resolution_explicit_path_mod_rs_with_win_separator() {\n         },\n     );\n \n-    assert_snapshot_matches!(map, @r###\"\n+    assert_snapshot!(map, @r###\"\n         \u22eecrate\n         \u22eefoo: t\n         \u22ee\n@@ -354,7 +354,7 @@ fn module_resolution_decl_inside_inline_module_with_path_attribute() {\n         },\n     );\n \n-    assert_snapshot_matches!(map, @r###\"\n+    assert_snapshot!(map, @r###\"\n         \u22eecrate\n         \u22eefoo: t\n         \u22ee\n@@ -383,7 +383,7 @@ fn module_resolution_decl_inside_inline_module() {\n         },\n     );\n \n-    assert_snapshot_matches!(map, @r###\"\n+    assert_snapshot!(map, @r###\"\n         \u22eecrate\n         \u22eefoo: t\n         \u22ee\n@@ -413,7 +413,7 @@ fn module_resolution_decl_inside_inline_module_2_with_path_attribute() {\n         },\n     );\n \n-    assert_snapshot_matches!(map, @r###\"\n+    assert_snapshot!(map, @r###\"\n         \u22eecrate\n         \u22eefoo: t\n         \u22ee\n@@ -444,7 +444,7 @@ fn module_resolution_decl_inside_inline_module_3() {\n         },\n     );\n \n-    assert_snapshot_matches!(map, @r###\"\n+    assert_snapshot!(map, @r###\"\n         \u22eecrate\n         \u22eefoo: t\n         \u22ee\n@@ -475,7 +475,7 @@ fn module_resolution_decl_inside_inline_module_empty_path() {\n         },\n     );\n \n-    assert_snapshot_matches!(map, @r###\"\n+    assert_snapshot!(map, @r###\"\n         \u22eecrate\n         \u22eefoo: t\n         \u22ee\n@@ -503,7 +503,7 @@ fn module_resolution_decl_empty_path() {\n         },\n     );\n \n-    assert_snapshot_matches!(map, @r###\"\n+    assert_snapshot!(map, @r###\"\n         \u22eecrate\n         \u22eefoo: t\n         \u22ee\n@@ -530,7 +530,7 @@ fn module_resolution_decl_inside_inline_module_relative_path() {\n         },\n     );\n \n-    assert_snapshot_matches!(map, @r###\"\n+    assert_snapshot!(map, @r###\"\n         \u22eecrate\n         \u22eefoo: t\n         \u22ee\n@@ -561,7 +561,7 @@ fn module_resolution_decl_inside_inline_module_in_crate_root() {\n         },\n     );\n \n-    assert_snapshot_matches!(map, @r###\"\n+    assert_snapshot!(map, @r###\"\n         \u22eecrate\n         \u22eeBaz: t v\n         \u22eefoo: t\n@@ -596,7 +596,7 @@ fn module_resolution_decl_inside_inline_module_in_mod_rs() {\n         },\n     );\n \n-    assert_snapshot_matches!(map, @r###\"\n+    assert_snapshot!(map, @r###\"\n         \u22eecrate\n         \u22eefoo: t\n         \u22ee\n@@ -634,7 +634,7 @@ fn module_resolution_decl_inside_inline_module_in_non_crate_root() {\n         },\n     );\n \n-    assert_snapshot_matches!(map, @r###\"\n+    assert_snapshot!(map, @r###\"\n         \u22eecrate\n         \u22eefoo: t\n         \u22ee\n@@ -672,7 +672,7 @@ fn module_resolution_decl_inside_inline_module_in_non_crate_root_2() {\n         },\n     );\n \n-    assert_snapshot_matches!(map, @r###\"\n+    assert_snapshot!(map, @r###\"\n         \u22eecrate\n         \u22eefoo: t\n         \u22ee\n@@ -701,8 +701,8 @@ fn unresolved_module_diagnostics() {\n     )\n     .diagnostics();\n \n-    assert_snapshot_matches!(diagnostics, @r###\"\n-\"mod bar;\": unresolved module\n-\"###\n+    assert_snapshot!(diagnostics, @r###\"\n+    \"mod bar;\": unresolved module\n+    \"###\n     );\n }"}, {"sha": "0e27086585c3635dcc2a84027f0073bff87c2322", "filename": "crates/ra_hir/src/nameres/tests/primitives.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7d72ca80003b7915ed7fc64907b5b6dc5c88dacd/crates%2Fra_hir%2Fsrc%2Fnameres%2Ftests%2Fprimitives.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7d72ca80003b7915ed7fc64907b5b6dc5c88dacd/crates%2Fra_hir%2Fsrc%2Fnameres%2Ftests%2Fprimitives.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Fnameres%2Ftests%2Fprimitives.rs?ref=7d72ca80003b7915ed7fc64907b5b6dc5c88dacd", "patch": "@@ -12,7 +12,7 @@ fn primitive_reexport() {\n         pub use i32 as int;\n         \",\n     );\n-    assert_snapshot_matches!(map, @r###\"\n+    assert_snapshot!(map, @r###\"\n    \u22eecrate\n    \u22eefoo: t\n    \u22eeint: t"}, {"sha": "b034fd59e9d68d22f24abd566cab12f2e9e0c406", "filename": "crates/ra_hir/src/ty/tests.rs", "status": "modified", "additions": 1265, "deletions": 1167, "changes": 2432, "blob_url": "https://github.com/rust-lang/rust/blob/7d72ca80003b7915ed7fc64907b5b6dc5c88dacd/crates%2Fra_hir%2Fsrc%2Fty%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7d72ca80003b7915ed7fc64907b5b6dc5c88dacd/crates%2Fra_hir%2Fsrc%2Fty%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Fty%2Ftests.rs?ref=7d72ca80003b7915ed7fc64907b5b6dc5c88dacd"}, {"sha": "0006946209b494ad75fb695b0f6ee1f6ba717e68", "filename": "crates/ra_ide_api/Cargo.toml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7d72ca80003b7915ed7fc64907b5b6dc5c88dacd/crates%2Fra_ide_api%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/7d72ca80003b7915ed7fc64907b5b6dc5c88dacd/crates%2Fra_ide_api%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2FCargo.toml?ref=7d72ca80003b7915ed7fc64907b5b6dc5c88dacd", "patch": "@@ -27,7 +27,7 @@ test_utils = { path = \"../test_utils\" }\n ra_assists = { path = \"../ra_assists\" }\n \n [dev-dependencies]\n-insta = \"0.10.0\"\n+insta = \"0.11.0\"\n \n [dev-dependencies.proptest]\n version = \"0.9.0\""}, {"sha": "2325cdf088af63a1b7e7bf333cd9752394058c56", "filename": "crates/ra_ide_api/src/completion/complete_dot.rs", "status": "modified", "additions": 14, "deletions": 14, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/7d72ca80003b7915ed7fc64907b5b6dc5c88dacd/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fcomplete_dot.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7d72ca80003b7915ed7fc64907b5b6dc5c88dacd/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fcomplete_dot.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fcomplete_dot.rs?ref=7d72ca80003b7915ed7fc64907b5b6dc5c88dacd", "patch": "@@ -68,15 +68,15 @@ fn complete_methods(acc: &mut Completions, ctx: &CompletionContext, receiver: Ty\n #[cfg(test)]\n mod tests {\n     use crate::completion::{do_completion, CompletionItem, CompletionKind};\n-    use insta::assert_debug_snapshot_matches;\n+    use insta::assert_debug_snapshot;\n \n     fn do_ref_completion(code: &str) -> Vec<CompletionItem> {\n         do_completion(code, CompletionKind::Reference)\n     }\n \n     #[test]\n     fn test_struct_field_completion() {\n-        assert_debug_snapshot_matches!(\n+        assert_debug_snapshot!(\n         do_ref_completion(\n                 r\"\n                 struct A { the_field: u32 }\n@@ -102,7 +102,7 @@ mod tests {\n \n     #[test]\n     fn test_struct_field_completion_self() {\n-        assert_debug_snapshot_matches!(\n+        assert_debug_snapshot!(\n         do_ref_completion(\n             r\"\n             struct A {\n@@ -144,7 +144,7 @@ mod tests {\n \n     #[test]\n     fn test_struct_field_completion_autoderef() {\n-        assert_debug_snapshot_matches!(\n+        assert_debug_snapshot!(\n         do_ref_completion(\n             r\"\n             struct A { the_field: (u32, i32) }\n@@ -180,7 +180,7 @@ mod tests {\n \n     #[test]\n     fn test_no_struct_field_completion_for_method_call() {\n-        assert_debug_snapshot_matches!(\n+        assert_debug_snapshot!(\n         do_ref_completion(\n             r\"\n             struct A { the_field: u32 }\n@@ -195,7 +195,7 @@ mod tests {\n \n     #[test]\n     fn test_method_completion() {\n-        assert_debug_snapshot_matches!(\n+        assert_debug_snapshot!(\n         do_ref_completion(\n             r\"\n             struct A {}\n@@ -224,7 +224,7 @@ mod tests {\n \n     #[test]\n     fn test_trait_method_completion() {\n-        assert_debug_snapshot_matches!(\n+        assert_debug_snapshot!(\n             do_ref_completion(\n                 r\"\n             struct A {}\n@@ -252,7 +252,7 @@ mod tests {\n \n     #[test]\n     fn test_trait_method_completion_deduplicated() {\n-        assert_debug_snapshot_matches!(\n+        assert_debug_snapshot!(\n             do_ref_completion(\n                 r\"\n             struct A {}\n@@ -280,7 +280,7 @@ mod tests {\n \n     #[test]\n     fn test_no_non_self_method() {\n-        assert_debug_snapshot_matches!(\n+        assert_debug_snapshot!(\n         do_ref_completion(\n             r\"\n             struct A {}\n@@ -298,7 +298,7 @@ mod tests {\n \n     #[test]\n     fn test_method_attr_filtering() {\n-        assert_debug_snapshot_matches!(\n+        assert_debug_snapshot!(\n         do_ref_completion(\n             r\"\n             struct A {}\n@@ -331,7 +331,7 @@ mod tests {\n \n     #[test]\n     fn test_tuple_field_completion() {\n-        assert_debug_snapshot_matches!(\n+        assert_debug_snapshot!(\n         do_ref_completion(\n             r\"\n             fn foo() {\n@@ -365,7 +365,7 @@ mod tests {\n \n     #[test]\n     fn test_tuple_field_inference() {\n-        assert_debug_snapshot_matches!(\n+        assert_debug_snapshot!(\n         do_ref_completion(\n             r\"\n             pub struct S;\n@@ -400,7 +400,7 @@ mod tests {\n \n     #[test]\n     fn test_completion_works_in_consts() {\n-        assert_debug_snapshot_matches!(\n+        assert_debug_snapshot!(\n         do_ref_completion(\n             r\"\n             struct A { the_field: u32 }\n@@ -426,7 +426,7 @@ mod tests {\n \n     #[test]\n     fn test_completion_await_impls_future() {\n-        assert_debug_snapshot_matches!(\n+        assert_debug_snapshot!(\n         do_completion(\n             r###\"\n             //- /main.rs"}, {"sha": "6639b6fffed15186e25951438e217481819d6938", "filename": "crates/ra_ide_api/src/completion/complete_fn_param.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/7d72ca80003b7915ed7fc64907b5b6dc5c88dacd/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fcomplete_fn_param.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7d72ca80003b7915ed7fc64907b5b6dc5c88dacd/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fcomplete_fn_param.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fcomplete_fn_param.rs?ref=7d72ca80003b7915ed7fc64907b5b6dc5c88dacd", "patch": "@@ -51,15 +51,15 @@ pub(super) fn complete_fn_param(acc: &mut Completions, ctx: &CompletionContext)\n #[cfg(test)]\n mod tests {\n     use crate::completion::{do_completion, CompletionItem, CompletionKind};\n-    use insta::assert_debug_snapshot_matches;\n+    use insta::assert_debug_snapshot;\n \n     fn do_magic_completion(code: &str) -> Vec<CompletionItem> {\n         do_completion(code, CompletionKind::Magic)\n     }\n \n     #[test]\n     fn test_param_completion_last_param() {\n-        assert_debug_snapshot_matches!(\n+        assert_debug_snapshot!(\n         do_magic_completion(\n                 r\"\n                 fn foo(file_id: FileId) {}\n@@ -83,7 +83,7 @@ mod tests {\n \n     #[test]\n     fn test_param_completion_nth_param() {\n-        assert_debug_snapshot_matches!(\n+        assert_debug_snapshot!(\n         do_magic_completion(\n                 r\"\n                 fn foo(file_id: FileId) {}\n@@ -107,7 +107,7 @@ mod tests {\n \n     #[test]\n     fn test_param_completion_trait_param() {\n-        assert_debug_snapshot_matches!(\n+        assert_debug_snapshot!(\n         do_magic_completion(\n                 r\"\n                 pub(crate) trait SourceRoot {"}, {"sha": "c527a9f63175114a8a411a6501eab78acc8bf473", "filename": "crates/ra_ide_api/src/completion/complete_keyword.rs", "status": "modified", "additions": 14, "deletions": 14, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/7d72ca80003b7915ed7fc64907b5b6dc5c88dacd/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fcomplete_keyword.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7d72ca80003b7915ed7fc64907b5b6dc5c88dacd/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fcomplete_keyword.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fcomplete_keyword.rs?ref=7d72ca80003b7915ed7fc64907b5b6dc5c88dacd", "patch": "@@ -113,15 +113,15 @@ fn complete_return(\n #[cfg(test)]\n mod tests {\n     use crate::completion::{do_completion, CompletionItem, CompletionKind};\n-    use insta::assert_debug_snapshot_matches;\n+    use insta::assert_debug_snapshot;\n \n     fn do_keyword_completion(code: &str) -> Vec<CompletionItem> {\n         do_completion(code, CompletionKind::Keyword)\n     }\n \n     #[test]\n     fn completes_keywords_in_use_stmt() {\n-        assert_debug_snapshot_matches!(\n+        assert_debug_snapshot!(\n             do_keyword_completion(\n                 r\"\n                 use <|>\n@@ -152,7 +152,7 @@ mod tests {\n ]\"###\n         );\n \n-        assert_debug_snapshot_matches!(\n+        assert_debug_snapshot!(\n             do_keyword_completion(\n                 r\"\n                 use a::<|>\n@@ -176,7 +176,7 @@ mod tests {\n ]\"###\n         );\n \n-        assert_debug_snapshot_matches!(\n+        assert_debug_snapshot!(\n             do_keyword_completion(\n                 r\"\n                 use a::{b, <|>}\n@@ -203,7 +203,7 @@ mod tests {\n \n     #[test]\n     fn completes_various_keywords_in_function() {\n-        assert_debug_snapshot_matches!(\n+        assert_debug_snapshot!(\n             do_keyword_completion(\n                 r\"\n                 fn quux() {\n@@ -253,7 +253,7 @@ mod tests {\n \n     #[test]\n     fn completes_else_after_if() {\n-        assert_debug_snapshot_matches!(\n+        assert_debug_snapshot!(\n             do_keyword_completion(\n                 r\"\n                 fn quux() {\n@@ -319,7 +319,7 @@ mod tests {\n \n     #[test]\n     fn test_completion_return_value() {\n-        assert_debug_snapshot_matches!(\n+        assert_debug_snapshot!(\n             do_keyword_completion(\n                 r\"\n                 fn quux() -> i32 {\n@@ -366,7 +366,7 @@ mod tests {\n     },\n ]\"###\n         );\n-        assert_debug_snapshot_matches!(\n+        assert_debug_snapshot!(\n             do_keyword_completion(\n                 r\"\n                 fn quux() {\n@@ -417,7 +417,7 @@ mod tests {\n \n     #[test]\n     fn dont_add_semi_after_return_if_not_a_statement() {\n-        assert_debug_snapshot_matches!(\n+        assert_debug_snapshot!(\n             do_keyword_completion(\n                 r\"\n                 fn quux() -> i32 {\n@@ -469,7 +469,7 @@ mod tests {\n \n     #[test]\n     fn last_return_in_block_has_semi() {\n-        assert_debug_snapshot_matches!(\n+        assert_debug_snapshot!(\n             do_keyword_completion(\n                 r\"\n                 fn quux() -> i32 {\n@@ -517,7 +517,7 @@ mod tests {\n     },\n ]\"###\n         );\n-        assert_debug_snapshot_matches!(\n+        assert_debug_snapshot!(\n             do_keyword_completion(\n                 r\"\n                 fn quux() -> i32 {\n@@ -571,7 +571,7 @@ mod tests {\n \n     #[test]\n     fn completes_break_and_continue_in_loops() {\n-        assert_debug_snapshot_matches!(\n+        assert_debug_snapshot!(\n             do_keyword_completion(\n                 r\"\n                 fn quux() -> i32 {\n@@ -633,7 +633,7 @@ mod tests {\n         );\n \n         // No completion: lambda isolates control flow\n-        assert_debug_snapshot_matches!(\n+        assert_debug_snapshot!(\n             do_keyword_completion(\n                 r\"\n                 fn quux() -> i32 {\n@@ -683,7 +683,7 @@ mod tests {\n \n     #[test]\n     fn no_semi_after_break_continue_in_expr() {\n-        assert_debug_snapshot_matches!(\n+        assert_debug_snapshot!(\n             do_keyword_completion(\n                 r\"\n                 fn f() {"}, {"sha": "d6b5ac9ad7c0123a1f69eaecd7d7efcdb6aa7ef7", "filename": "crates/ra_ide_api/src/completion/complete_path.rs", "status": "modified", "additions": 15, "deletions": 15, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/7d72ca80003b7915ed7fc64907b5b6dc5c88dacd/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fcomplete_path.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7d72ca80003b7915ed7fc64907b5b6dc5c88dacd/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fcomplete_path.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fcomplete_path.rs?ref=7d72ca80003b7915ed7fc64907b5b6dc5c88dacd", "patch": "@@ -79,7 +79,7 @@ mod tests {\n     use test_utils::covers;\n \n     use crate::completion::{do_completion, CompletionItem, CompletionKind};\n-    use insta::assert_debug_snapshot_matches;\n+    use insta::assert_debug_snapshot;\n \n     fn do_reference_completion(code: &str) -> Vec<CompletionItem> {\n         do_completion(code, CompletionKind::Reference)\n@@ -120,7 +120,7 @@ mod tests {\n \n     #[test]\n     fn completes_mod_with_docs() {\n-        assert_debug_snapshot_matches!(\n+        assert_debug_snapshot!(\n             do_reference_completion(\n                 r\"\n                 use self::my<|>;\n@@ -149,7 +149,7 @@ mod tests {\n \n     #[test]\n     fn completes_use_item_starting_with_self() {\n-        assert_debug_snapshot_matches!(\n+        assert_debug_snapshot!(\n             do_reference_completion(\n                 r\"\n                 use self::m::<|>;\n@@ -173,7 +173,7 @@ mod tests {\n \n     #[test]\n     fn completes_use_item_starting_with_crate() {\n-        assert_debug_snapshot_matches!(\n+        assert_debug_snapshot!(\n             do_reference_completion(\n                 \"\n                 //- /lib.rs\n@@ -204,7 +204,7 @@ mod tests {\n \n     #[test]\n     fn completes_nested_use_tree() {\n-        assert_debug_snapshot_matches!(\n+        assert_debug_snapshot!(\n             do_reference_completion(\n                 \"\n                 //- /lib.rs\n@@ -235,7 +235,7 @@ mod tests {\n \n     #[test]\n     fn completes_deeply_nested_use_tree() {\n-        assert_debug_snapshot_matches!(\n+        assert_debug_snapshot!(\n             do_reference_completion(\n                 \"\n                 //- /lib.rs\n@@ -263,7 +263,7 @@ mod tests {\n \n     #[test]\n     fn completes_enum_variant() {\n-        assert_debug_snapshot_matches!(\n+        assert_debug_snapshot!(\n             do_reference_completion(\n                 \"\n                 //- /lib.rs\n@@ -306,7 +306,7 @@ mod tests {\n \n     #[test]\n     fn completes_enum_variant_with_details() {\n-        assert_debug_snapshot_matches!(\n+        assert_debug_snapshot!(\n             do_reference_completion(\n                 \"\n                 //- /lib.rs\n@@ -363,7 +363,7 @@ mod tests {\n \n     #[test]\n     fn completes_struct_associated_method() {\n-        assert_debug_snapshot_matches!(\n+        assert_debug_snapshot!(\n             do_reference_completion(\n                 \"\n                 //- /lib.rs\n@@ -396,7 +396,7 @@ mod tests {\n \n     #[test]\n     fn completes_struct_associated_const() {\n-        assert_debug_snapshot_matches!(\n+        assert_debug_snapshot!(\n             do_reference_completion(\n                 \"\n                 //- /lib.rs\n@@ -429,7 +429,7 @@ mod tests {\n \n     #[test]\n     fn completes_struct_associated_type() {\n-        assert_debug_snapshot_matches!(\n+        assert_debug_snapshot!(\n             do_reference_completion(\n                 \"\n                 //- /lib.rs\n@@ -462,7 +462,7 @@ mod tests {\n \n     #[test]\n     fn completes_enum_associated_method() {\n-        assert_debug_snapshot_matches!(\n+        assert_debug_snapshot!(\n             do_reference_completion(\n                 \"\n                 //- /lib.rs\n@@ -495,7 +495,7 @@ mod tests {\n \n     #[test]\n     fn completes_union_associated_method() {\n-        assert_debug_snapshot_matches!(\n+        assert_debug_snapshot!(\n             do_reference_completion(\n                 \"\n                 //- /lib.rs\n@@ -528,7 +528,7 @@ mod tests {\n \n     #[test]\n     fn completes_use_paths_across_crates() {\n-        assert_debug_snapshot_matches!(\n+        assert_debug_snapshot!(\n             do_reference_completion(\n                 \"\n                 //- /main.rs\n@@ -554,7 +554,7 @@ mod tests {\n \n     #[test]\n     fn completes_type_alias() {\n-        assert_debug_snapshot_matches!(\n+        assert_debug_snapshot!(\n             do_reference_completion(\n                 \"\n                 struct S;"}, {"sha": "fb02844fad7617593a5ad0fffc121c2d011fa6f8", "filename": "crates/ra_ide_api/src/completion/complete_pattern.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/7d72ca80003b7915ed7fc64907b5b6dc5c88dacd/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fcomplete_pattern.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7d72ca80003b7915ed7fc64907b5b6dc5c88dacd/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fcomplete_pattern.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fcomplete_pattern.rs?ref=7d72ca80003b7915ed7fc64907b5b6dc5c88dacd", "patch": "@@ -28,7 +28,7 @@ pub(super) fn complete_pattern(acc: &mut Completions, ctx: &CompletionContext) {\n #[cfg(test)]\n mod tests {\n     use crate::completion::{do_completion, CompletionItem, CompletionKind};\n-    use insta::assert_debug_snapshot_matches;\n+    use insta::assert_debug_snapshot;\n \n     fn complete(code: &str) -> Vec<CompletionItem> {\n         do_completion(code, CompletionKind::Reference)\n@@ -53,7 +53,7 @@ mod tests {\n             }\n             \",\n         );\n-        assert_debug_snapshot_matches!(completions, @r###\"\n+        assert_debug_snapshot!(completions, @r###\"\n        \u22ee[\n        \u22ee    CompletionItem {\n        \u22ee        label: \"E\","}, {"sha": "3970d1af3419f8ad5678bd6157293a9ad14b637f", "filename": "crates/ra_ide_api/src/completion/complete_postfix.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/7d72ca80003b7915ed7fc64907b5b6dc5c88dacd/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fcomplete_postfix.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7d72ca80003b7915ed7fc64907b5b6dc5c88dacd/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fcomplete_postfix.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fcomplete_postfix.rs?ref=7d72ca80003b7915ed7fc64907b5b6dc5c88dacd", "patch": "@@ -72,15 +72,15 @@ pub(super) fn complete_postfix(acc: &mut Completions, ctx: &CompletionContext) {\n #[cfg(test)]\n mod tests {\n     use crate::completion::{do_completion, CompletionItem, CompletionKind};\n-    use insta::assert_debug_snapshot_matches;\n+    use insta::assert_debug_snapshot;\n \n     fn do_postfix_completion(code: &str) -> Vec<CompletionItem> {\n         do_completion(code, CompletionKind::Postfix)\n     }\n \n     #[test]\n     fn postfix_completion_works_for_trivial_path_expression() {\n-        assert_debug_snapshot_matches!(\n+        assert_debug_snapshot!(\n             do_postfix_completion(\n                 r#\"\n                 fn main() {\n@@ -152,7 +152,7 @@ mod tests {\n \n     #[test]\n     fn some_postfix_completions_ignored() {\n-        assert_debug_snapshot_matches!(\n+        assert_debug_snapshot!(\n             do_postfix_completion(\n                 r#\"\n                 fn main() {"}, {"sha": "ed40299647289fb54afe3ad0c685f64ecf6adc7d", "filename": "crates/ra_ide_api/src/completion/complete_record_literal.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/7d72ca80003b7915ed7fc64907b5b6dc5c88dacd/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fcomplete_record_literal.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7d72ca80003b7915ed7fc64907b5b6dc5c88dacd/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fcomplete_record_literal.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fcomplete_record_literal.rs?ref=7d72ca80003b7915ed7fc64907b5b6dc5c88dacd", "patch": "@@ -23,7 +23,7 @@ pub(super) fn complete_record_literal(acc: &mut Completions, ctx: &CompletionCon\n #[cfg(test)]\n mod tests {\n     use crate::completion::{do_completion, CompletionItem, CompletionKind};\n-    use insta::assert_debug_snapshot_matches;\n+    use insta::assert_debug_snapshot;\n \n     fn complete(code: &str) -> Vec<CompletionItem> {\n         do_completion(code, CompletionKind::Reference)\n@@ -39,7 +39,7 @@ mod tests {\n             }\n             \",\n         );\n-        assert_debug_snapshot_matches!(completions, @r###\"\n+        assert_debug_snapshot!(completions, @r###\"\n        \u22ee[\n        \u22ee    CompletionItem {\n        \u22ee        label: \"the_field\",\n@@ -65,7 +65,7 @@ mod tests {\n             }\n             \",\n         );\n-        assert_debug_snapshot_matches!(completions, @r###\"\n+        assert_debug_snapshot!(completions, @r###\"\n        \u22ee[\n        \u22ee    CompletionItem {\n        \u22ee        label: \"a\",\n@@ -91,7 +91,7 @@ mod tests {\n             }\n             \",\n         );\n-        assert_debug_snapshot_matches!(completions, @r###\"\n+        assert_debug_snapshot!(completions, @r###\"\n        \u22ee[\n        \u22ee    CompletionItem {\n        \u22ee        label: \"b\",\n@@ -116,7 +116,7 @@ mod tests {\n             }\n             \",\n         );\n-        assert_debug_snapshot_matches!(completions, @r###\"\n+        assert_debug_snapshot!(completions, @r###\"\n        \u22ee[\n        \u22ee    CompletionItem {\n        \u22ee        label: \"a\","}, {"sha": "70716b3d608022742d11f23ccb63edca1aab9058", "filename": "crates/ra_ide_api/src/completion/complete_record_pattern.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/7d72ca80003b7915ed7fc64907b5b6dc5c88dacd/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fcomplete_record_pattern.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7d72ca80003b7915ed7fc64907b5b6dc5c88dacd/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fcomplete_record_pattern.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fcomplete_record_pattern.rs?ref=7d72ca80003b7915ed7fc64907b5b6dc5c88dacd", "patch": "@@ -22,7 +22,7 @@ pub(super) fn complete_record_pattern(acc: &mut Completions, ctx: &CompletionCon\n #[cfg(test)]\n mod tests {\n     use crate::completion::{do_completion, CompletionItem, CompletionKind};\n-    use insta::assert_debug_snapshot_matches;\n+    use insta::assert_debug_snapshot;\n \n     fn complete(code: &str) -> Vec<CompletionItem> {\n         do_completion(code, CompletionKind::Reference)\n@@ -41,7 +41,7 @@ mod tests {\n             }\n             \",\n         );\n-        assert_debug_snapshot_matches!(completions, @r###\"\n+        assert_debug_snapshot!(completions, @r###\"\n        \u22ee[\n        \u22ee    CompletionItem {\n        \u22ee        label: \"foo\",\n@@ -70,7 +70,7 @@ mod tests {\n             }\n             \",\n         );\n-        assert_debug_snapshot_matches!(completions, @r###\"\n+        assert_debug_snapshot!(completions, @r###\"\n        \u22ee[\n        \u22ee    CompletionItem {\n        \u22ee        label: \"bar\","}, {"sha": "d6a44c3e03ff5a2c9dbb2e374ac7f0f98666cb25", "filename": "crates/ra_ide_api/src/completion/complete_scope.rs", "status": "modified", "additions": 13, "deletions": 13, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/7d72ca80003b7915ed7fc64907b5b6dc5c88dacd/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fcomplete_scope.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7d72ca80003b7915ed7fc64907b5b6dc5c88dacd/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fcomplete_scope.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fcomplete_scope.rs?ref=7d72ca80003b7915ed7fc64907b5b6dc5c88dacd", "patch": "@@ -122,15 +122,15 @@ impl ImportResolver {\n #[cfg(test)]\n mod tests {\n     use crate::completion::{do_completion, CompletionItem, CompletionKind};\n-    use insta::assert_debug_snapshot_matches;\n+    use insta::assert_debug_snapshot;\n \n     fn do_reference_completion(code: &str) -> Vec<CompletionItem> {\n         do_completion(code, CompletionKind::Reference)\n     }\n \n     #[test]\n     fn completes_bindings_from_let() {\n-        assert_debug_snapshot_matches!(\n+        assert_debug_snapshot!(\n             do_reference_completion(\n                 r\"\n                 fn quux(x: i32) {\n@@ -171,7 +171,7 @@ mod tests {\n \n     #[test]\n     fn completes_bindings_from_if_let() {\n-        assert_debug_snapshot_matches!(\n+        assert_debug_snapshot!(\n             do_reference_completion(\n                 r\"\n                 fn quux() {\n@@ -215,7 +215,7 @@ mod tests {\n \n     #[test]\n     fn completes_bindings_from_for() {\n-        assert_debug_snapshot_matches!(\n+        assert_debug_snapshot!(\n             do_reference_completion(\n                 r\"\n                 fn quux() {\n@@ -247,7 +247,7 @@ mod tests {\n \n     #[test]\n     fn completes_generic_params() {\n-        assert_debug_snapshot_matches!(\n+        assert_debug_snapshot!(\n             do_reference_completion(\n                 r\"\n                 fn quux<T>() {\n@@ -277,7 +277,7 @@ mod tests {\n \n     #[test]\n     fn completes_generic_params_in_struct() {\n-        assert_debug_snapshot_matches!(\n+        assert_debug_snapshot!(\n             do_reference_completion(\n                 r\"\n                 struct X<T> {\n@@ -306,7 +306,7 @@ mod tests {\n \n     #[test]\n     fn completes_module_items() {\n-        assert_debug_snapshot_matches!(\n+        assert_debug_snapshot!(\n         do_reference_completion(\n             r\"\n                 struct Foo;\n@@ -345,7 +345,7 @@ mod tests {\n \n     #[test]\n     fn completes_extern_prelude() {\n-        assert_debug_snapshot_matches!(\n+        assert_debug_snapshot!(\n             do_reference_completion(\n                 r\"\n                 //- /lib.rs\n@@ -369,7 +369,7 @@ mod tests {\n \n     #[test]\n     fn completes_module_items_in_nested_modules() {\n-        assert_debug_snapshot_matches!(\n+        assert_debug_snapshot!(\n             do_reference_completion(\n                 r\"\n                 struct Foo;\n@@ -401,7 +401,7 @@ mod tests {\n \n     #[test]\n     fn completes_return_type() {\n-        assert_debug_snapshot_matches!(\n+        assert_debug_snapshot!(\n             do_reference_completion(\n                 r\"\n                 struct Foo;\n@@ -430,7 +430,7 @@ mod tests {\n \n     #[test]\n     fn dont_show_both_completions_for_shadowing() {\n-        assert_debug_snapshot_matches!(\n+        assert_debug_snapshot!(\n             do_reference_completion(\n                 r\"\n                 fn foo() {\n@@ -465,7 +465,7 @@ mod tests {\n \n     #[test]\n     fn completes_self_in_methods() {\n-        assert_debug_snapshot_matches!(\n+        assert_debug_snapshot!(\n             do_reference_completion(r\"impl S { fn foo(&self) { <|> } }\"),\n             @r#\"[\n     CompletionItem {\n@@ -489,7 +489,7 @@ mod tests {\n \n     #[test]\n     fn completes_prelude() {\n-        assert_debug_snapshot_matches!(\n+        assert_debug_snapshot!(\n             do_reference_completion(\n                 \"\n                 //- /main.rs"}, {"sha": "b06221c2a65b4b0d3a90261f70304ff03407f741", "filename": "crates/ra_ide_api/src/completion/complete_snippet.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/7d72ca80003b7915ed7fc64907b5b6dc5c88dacd/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fcomplete_snippet.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7d72ca80003b7915ed7fc64907b5b6dc5c88dacd/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fcomplete_snippet.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fcomplete_snippet.rs?ref=7d72ca80003b7915ed7fc64907b5b6dc5c88dacd", "patch": "@@ -40,15 +40,15 @@ fn ${1:feature}() {\n #[cfg(test)]\n mod tests {\n     use crate::completion::{do_completion, CompletionItem, CompletionKind};\n-    use insta::assert_debug_snapshot_matches;\n+    use insta::assert_debug_snapshot;\n \n     fn do_snippet_completion(code: &str) -> Vec<CompletionItem> {\n         do_completion(code, CompletionKind::Snippet)\n     }\n \n     #[test]\n     fn completes_snippets_in_expressions() {\n-        assert_debug_snapshot_matches!(\n+        assert_debug_snapshot!(\n                     do_snippet_completion(r\"fn foo(x: i32) { <|> }\"),\n         @r#\"[\n     CompletionItem {\n@@ -71,19 +71,19 @@ mod tests {\n \n     #[test]\n     fn should_not_complete_snippets_in_path() {\n-        assert_debug_snapshot_matches!(\n+        assert_debug_snapshot!(\n                     do_snippet_completion(r\"fn foo(x: i32) { ::foo<|> }\"),\n         @r#\"[]\"#\n                 );\n-        assert_debug_snapshot_matches!(\n+        assert_debug_snapshot!(\n                     do_snippet_completion(r\"fn foo(x: i32) { ::<|> }\"),\n         @r#\"[]\"#\n                 );\n     }\n \n     #[test]\n     fn completes_snippets_in_items() {\n-        assert_debug_snapshot_matches!(\n+        assert_debug_snapshot!(\n             do_snippet_completion(\n                 r\"\n                 #[cfg(test)]"}, {"sha": "f19eec9b767f878e6282e95c2512c478cd434144", "filename": "crates/ra_ide_api/src/completion/presentation.rs", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/7d72ca80003b7915ed7fc64907b5b6dc5c88dacd/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fpresentation.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7d72ca80003b7915ed7fc64907b5b6dc5c88dacd/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fpresentation.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fpresentation.rs?ref=7d72ca80003b7915ed7fc64907b5b6dc5c88dacd", "patch": "@@ -186,7 +186,7 @@ impl Completions {\n #[cfg(test)]\n mod tests {\n     use crate::completion::{do_completion, CompletionItem, CompletionKind};\n-    use insta::assert_debug_snapshot_matches;\n+    use insta::assert_debug_snapshot;\n     use test_utils::covers;\n \n     fn do_reference_completion(code: &str) -> Vec<CompletionItem> {\n@@ -196,7 +196,7 @@ mod tests {\n     #[test]\n     fn inserts_parens_for_function_calls() {\n         covers!(inserts_parens_for_function_calls);\n-        assert_debug_snapshot_matches!(\n+        assert_debug_snapshot!(\n             do_reference_completion(\n                 r\"\n                 fn no_args() {}\n@@ -222,7 +222,7 @@ mod tests {\n     },\n ]\"###\n         );\n-        assert_debug_snapshot_matches!(\n+        assert_debug_snapshot!(\n             do_reference_completion(\n                 r\"\n                 fn with_args(x: i32, y: String) {}\n@@ -248,7 +248,7 @@ mod tests {\n     },\n ]\"###\n         );\n-        assert_debug_snapshot_matches!(\n+        assert_debug_snapshot!(\n             do_reference_completion(\n                 r\"\n                 struct S {}\n@@ -275,7 +275,7 @@ mod tests {\n \n     #[test]\n     fn dont_render_function_parens_in_use_item() {\n-        assert_debug_snapshot_matches!(\n+        assert_debug_snapshot!(\n             do_reference_completion(\n                 \"\n                 //- /lib.rs\n@@ -298,7 +298,7 @@ mod tests {\n \n     #[test]\n     fn dont_render_function_parens_if_already_call() {\n-        assert_debug_snapshot_matches!(\n+        assert_debug_snapshot!(\n             do_reference_completion(\n                 \"\n                 //- /lib.rs\n@@ -327,7 +327,7 @@ mod tests {\n     },\n ]\"#\n         );\n-        assert_debug_snapshot_matches!(\n+        assert_debug_snapshot!(\n             do_reference_completion(\n                 \"\n                 //- /lib.rs"}, {"sha": "c448aa8c5d43a417f3d18c3bd079fcab75fa89c2", "filename": "crates/ra_ide_api/src/diagnostics.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/7d72ca80003b7915ed7fc64907b5b6dc5c88dacd/crates%2Fra_ide_api%2Fsrc%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7d72ca80003b7915ed7fc64907b5b6dc5c88dacd/crates%2Fra_ide_api%2Fsrc%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Fdiagnostics.rs?ref=7d72ca80003b7915ed7fc64907b5b6dc5c88dacd", "patch": "@@ -183,7 +183,7 @@ fn check_struct_shorthand_initialization(\n \n #[cfg(test)]\n mod tests {\n-    use insta::assert_debug_snapshot_matches;\n+    use insta::assert_debug_snapshot;\n     use join_to_string::join;\n     use ra_syntax::SourceFile;\n     use test_utils::assert_eq_text;\n@@ -519,7 +519,7 @@ mod tests {\n     fn test_unresolved_module_diagnostic() {\n         let (analysis, file_id) = single_file(\"mod foo;\");\n         let diagnostics = analysis.diagnostics(file_id).unwrap();\n-        assert_debug_snapshot_matches!(diagnostics, @r###\"\n+        assert_debug_snapshot!(diagnostics, @r###\"\n        \u22ee[\n        \u22ee    Diagnostic {\n        \u22ee        message: \"unresolved module\","}, {"sha": "be042ed176ec11129279f2f704ea415578552936", "filename": "crates/ra_ide_api/src/display/structure.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/7d72ca80003b7915ed7fc64907b5b6dc5c88dacd/crates%2Fra_ide_api%2Fsrc%2Fdisplay%2Fstructure.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7d72ca80003b7915ed7fc64907b5b6dc5c88dacd/crates%2Fra_ide_api%2Fsrc%2Fdisplay%2Fstructure.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Fdisplay%2Fstructure.rs?ref=7d72ca80003b7915ed7fc64907b5b6dc5c88dacd", "patch": "@@ -161,7 +161,7 @@ fn structure_node(node: &SyntaxNode) -> Option<StructureNode> {\n #[cfg(test)]\n mod tests {\n     use super::*;\n-    use insta::assert_debug_snapshot_matches;\n+    use insta::assert_debug_snapshot;\n \n     #[test]\n     fn test_file_structure() {\n@@ -204,7 +204,7 @@ fn very_obsolete() {}\n         .ok()\n         .unwrap();\n         let structure = file_structure(&file);\n-        assert_debug_snapshot_matches!(structure,\n+        assert_debug_snapshot!(structure,\n         @r#\"[\n     StructureNode {\n         parent: None,"}, {"sha": "16bdcf9d16bbe1b8ba120fd402d39a7875350625", "filename": "crates/ra_ide_api/src/inlay_hints.rs", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/7d72ca80003b7915ed7fc64907b5b6dc5c88dacd/crates%2Fra_ide_api%2Fsrc%2Finlay_hints.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7d72ca80003b7915ed7fc64907b5b6dc5c88dacd/crates%2Fra_ide_api%2Fsrc%2Finlay_hints.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Finlay_hints.rs?ref=7d72ca80003b7915ed7fc64907b5b6dc5c88dacd", "patch": "@@ -169,7 +169,7 @@ fn get_node_displayable_type(\n #[cfg(test)]\n mod tests {\n     use crate::mock_analysis::single_file;\n-    use insta::assert_debug_snapshot_matches;\n+    use insta::assert_debug_snapshot;\n \n     #[test]\n     fn let_statement() {\n@@ -210,7 +210,7 @@ fn main() {\n }\"#,\n         );\n \n-        assert_debug_snapshot_matches!(analysis.inlay_hints(file_id).unwrap(), @r#\"[\n+        assert_debug_snapshot!(analysis.inlay_hints(file_id).unwrap(), @r#\"[\n     InlayHint {\n         range: [193; 197),\n         kind: TypeHint,\n@@ -277,7 +277,7 @@ fn main() {\n }\"#,\n         );\n \n-        assert_debug_snapshot_matches!(analysis.inlay_hints(file_id).unwrap(), @r#\"[\n+        assert_debug_snapshot!(analysis.inlay_hints(file_id).unwrap(), @r#\"[\n     InlayHint {\n         range: [21; 30),\n         kind: TypeHint,\n@@ -304,7 +304,7 @@ fn main() {\n }\"#,\n         );\n \n-        assert_debug_snapshot_matches!(analysis.inlay_hints(file_id).unwrap(), @r#\"[\n+        assert_debug_snapshot!(analysis.inlay_hints(file_id).unwrap(), @r#\"[\n     InlayHint {\n         range: [21; 30),\n         kind: TypeHint,\n@@ -350,7 +350,7 @@ fn main() {\n }\"#,\n         );\n \n-        assert_debug_snapshot_matches!(analysis.inlay_hints(file_id).unwrap(), @r#\"[\n+        assert_debug_snapshot!(analysis.inlay_hints(file_id).unwrap(), @r#\"[\n     InlayHint {\n         range: [166; 170),\n         kind: TypeHint,\n@@ -411,7 +411,7 @@ fn main() {\n }\"#,\n         );\n \n-        assert_debug_snapshot_matches!(analysis.inlay_hints(file_id).unwrap(), @r###\"\n+        assert_debug_snapshot!(analysis.inlay_hints(file_id).unwrap(), @r###\"\n        \u22ee[\n        \u22ee    InlayHint {\n        \u22ee        range: [166; 170),\n@@ -474,7 +474,7 @@ fn main() {\n }\"#,\n         );\n \n-        assert_debug_snapshot_matches!(analysis.inlay_hints(file_id).unwrap(), @r#\"[\n+        assert_debug_snapshot!(analysis.inlay_hints(file_id).unwrap(), @r#\"[\n     InlayHint {\n         range: [311; 315),\n         kind: TypeHint,"}, {"sha": "d8a00067fe96ab7f0756e259d10d1548f0702b21", "filename": "crates/ra_ide_api/src/references.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/7d72ca80003b7915ed7fc64907b5b6dc5c88dacd/crates%2Fra_ide_api%2Fsrc%2Freferences.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7d72ca80003b7915ed7fc64907b5b6dc5c88dacd/crates%2Fra_ide_api%2Fsrc%2Freferences.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Freferences.rs?ref=7d72ca80003b7915ed7fc64907b5b6dc5c88dacd", "patch": "@@ -200,7 +200,7 @@ mod tests {\n         mock_analysis::analysis_and_position, mock_analysis::single_file_with_position, FileId,\n         ReferenceSearchResult,\n     };\n-    use insta::assert_debug_snapshot_matches;\n+    use insta::assert_debug_snapshot;\n     use test_utils::assert_eq_text;\n \n     #[test]\n@@ -341,7 +341,7 @@ mod tests {\n         );\n         let new_name = \"foo2\";\n         let source_change = analysis.rename(position, new_name).unwrap();\n-        assert_debug_snapshot_matches!(&source_change,\n+        assert_debug_snapshot!(&source_change,\n @r#\"Some(\n     SourceChange {\n         label: \"rename\",\n@@ -388,7 +388,7 @@ mod tests {\n         );\n         let new_name = \"foo2\";\n         let source_change = analysis.rename(position, new_name).unwrap();\n-        assert_debug_snapshot_matches!(&source_change,\n+        assert_debug_snapshot!(&source_change,\n         @r###\"Some(\n     SourceChange {\n         label: \"rename\","}, {"sha": "9d84b3d0847f79328d6305eeac7e4674cae8f3a4", "filename": "crates/ra_ide_api/src/runnables.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/7d72ca80003b7915ed7fc64907b5b6dc5c88dacd/crates%2Fra_ide_api%2Fsrc%2Frunnables.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7d72ca80003b7915ed7fc64907b5b6dc5c88dacd/crates%2Fra_ide_api%2Fsrc%2Frunnables.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Frunnables.rs?ref=7d72ca80003b7915ed7fc64907b5b6dc5c88dacd", "patch": "@@ -71,7 +71,7 @@ fn runnable_mod(db: &RootDatabase, file_id: FileId, module: ast::Module) -> Opti\n \n #[cfg(test)]\n mod tests {\n-    use insta::assert_debug_snapshot_matches;\n+    use insta::assert_debug_snapshot;\n \n     use crate::mock_analysis::analysis_and_position;\n \n@@ -92,7 +92,7 @@ mod tests {\n         \"#,\n         );\n         let runnables = analysis.runnables(pos.file_id).unwrap();\n-        assert_debug_snapshot_matches!(&runnables,\n+        assert_debug_snapshot!(&runnables,\n         @r#\"[\n     Runnable {\n         range: [1; 21),\n@@ -127,7 +127,7 @@ mod tests {\n         \"#,\n         );\n         let runnables = analysis.runnables(pos.file_id).unwrap();\n-        assert_debug_snapshot_matches!(&runnables,\n+        assert_debug_snapshot!(&runnables,\n         @r#\"[\n     Runnable {\n         range: [1; 59),\n@@ -160,7 +160,7 @@ mod tests {\n         \"#,\n         );\n         let runnables = analysis.runnables(pos.file_id).unwrap();\n-        assert_debug_snapshot_matches!(&runnables,\n+        assert_debug_snapshot!(&runnables,\n         @r#\"[\n     Runnable {\n         range: [23; 85),\n@@ -195,7 +195,7 @@ mod tests {\n         \"#,\n         );\n         let runnables = analysis.runnables(pos.file_id).unwrap();\n-        assert_debug_snapshot_matches!(&runnables,\n+        assert_debug_snapshot!(&runnables,\n         @r#\"[\n     Runnable {\n         range: [41; 115),"}]}