{"sha": "dd59237e0ce48adc0f5f459c73a5687ffa748a2a", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRkNTkyMzdlMGNlNDhhZGMwZjVmNDU5YzczYTU2ODdmZmE3NDhhMmE=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-04-23T21:18:18Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-04-23T21:18:18Z"}, "message": "minor", "tree": {"sha": "e55fa2dcf9da27772aa2573e9b83b033221baebf", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e55fa2dcf9da27772aa2573e9b83b033221baebf"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/dd59237e0ce48adc0f5f459c73a5687ffa748a2a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/dd59237e0ce48adc0f5f459c73a5687ffa748a2a", "html_url": "https://github.com/rust-lang/rust/commit/dd59237e0ce48adc0f5f459c73a5687ffa748a2a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/dd59237e0ce48adc0f5f459c73a5687ffa748a2a/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "27dd0086ea0642cc36e2a388dcfd7e5f6a466ac5", "url": "https://api.github.com/repos/rust-lang/rust/commits/27dd0086ea0642cc36e2a388dcfd7e5f6a466ac5", "html_url": "https://github.com/rust-lang/rust/commit/27dd0086ea0642cc36e2a388dcfd7e5f6a466ac5"}], "stats": {"total": 4, "additions": 0, "deletions": 4}, "files": [{"sha": "ecbfffcf42d6d092e808066be92f1060c5e2a3c2", "filename": "crates/ra_syntax/src/ptr.rs", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/dd59237e0ce48adc0f5f459c73a5687ffa748a2a/crates%2Fra_syntax%2Fsrc%2Fptr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dd59237e0ce48adc0f5f459c73a5687ffa748a2a/crates%2Fra_syntax%2Fsrc%2Fptr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Fsrc%2Fptr.rs?ref=dd59237e0ce48adc0f5f459c73a5687ffa748a2a", "patch": "@@ -30,10 +30,6 @@ impl SyntaxNodePtr {\n         .unwrap_or_else(|| panic!(\"can't resolve local ptr to SyntaxNode: {:?}\", self))\n     }\n \n-    // pub fn range(&self) -> TextRange {\n-    //     self.range\n-    // }\n-\n     pub fn cast<N: AstNode>(self) -> Option<AstPtr<N>> {\n         if !N::can_cast(self.kind) {\n             return None;"}]}