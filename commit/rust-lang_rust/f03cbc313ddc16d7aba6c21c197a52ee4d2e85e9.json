{"sha": "f03cbc313ddc16d7aba6c21c197a52ee4d2e85e9", "node_id": "MDY6Q29tbWl0NzI0NzEyOmYwM2NiYzMxM2RkYzE2ZDdhYmE2YzIxYzE5N2E1MmVlNGQyZTg1ZTk=", "commit": {"author": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2019-11-09T17:01:12Z"}, "committer": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2019-11-10T11:24:22Z"}, "message": "Merge hir::Unsafety into ast::Unsafety.", "tree": {"sha": "c56c0afcbd78bbec0d00c556dacf89b65b2f0e94", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c56c0afcbd78bbec0d00c556dacf89b65b2f0e94"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f03cbc313ddc16d7aba6c21c197a52ee4d2e85e9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f03cbc313ddc16d7aba6c21c197a52ee4d2e85e9", "html_url": "https://github.com/rust-lang/rust/commit/f03cbc313ddc16d7aba6c21c197a52ee4d2e85e9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f03cbc313ddc16d7aba6c21c197a52ee4d2e85e9/comments", "author": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "committer": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1f21c080ebee10e0ad14197e7d7dbfcb687e303a", "url": "https://api.github.com/repos/rust-lang/rust/commits/1f21c080ebee10e0ad14197e7d7dbfcb687e303a", "html_url": "https://github.com/rust-lang/rust/commit/1f21c080ebee10e0ad14197e7d7dbfcb687e303a"}], "stats": {"total": 78, "additions": 28, "deletions": 50}, "files": [{"sha": "02afdc27acdca8bec1b9d2b4e5eaf175d509cbf1", "filename": "src/librustc/hir/lowering.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f03cbc313ddc16d7aba6c21c197a52ee4d2e85e9/src%2Flibrustc%2Fhir%2Flowering.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f03cbc313ddc16d7aba6c21c197a52ee4d2e85e9/src%2Flibrustc%2Fhir%2Flowering.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fhir%2Flowering.rs?ref=f03cbc313ddc16d7aba6c21c197a52ee4d2e85e9", "patch": "@@ -1213,7 +1213,7 @@ impl<'a> LoweringContext<'a> {\n                                     &NodeMap::default(),\n                                     ImplTraitContext::disallowed(),\n                                 ),\n-                                unsafety: this.lower_unsafety(f.unsafety),\n+                                unsafety: f.unsafety,\n                                 abi: this.lower_abi(f.abi),\n                                 decl: this.lower_fn_decl(&f.decl, None, false, None),\n                                 param_names: this.lower_fn_params_to_names(&f.decl),"}, {"sha": "bf288f271a69f1263fcd3be9c7cd4eca70694548", "filename": "src/librustc/hir/lowering/item.rs", "status": "modified", "additions": 3, "deletions": 10, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/f03cbc313ddc16d7aba6c21c197a52ee4d2e85e9/src%2Flibrustc%2Fhir%2Flowering%2Fitem.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f03cbc313ddc16d7aba6c21c197a52ee4d2e85e9/src%2Flibrustc%2Fhir%2Flowering%2Fitem.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fhir%2Flowering%2Fitem.rs?ref=f03cbc313ddc16d7aba6c21c197a52ee4d2e85e9", "patch": "@@ -433,7 +433,7 @@ impl LoweringContext<'_> {\n                 );\n \n                 hir::ItemKind::Impl(\n-                    self.lower_unsafety(unsafety),\n+                    unsafety,\n                     self.lower_impl_polarity(polarity),\n                     self.lower_defaultness(defaultness, true /* [1] */),\n                     generics,\n@@ -450,7 +450,7 @@ impl LoweringContext<'_> {\n                     .collect();\n                 hir::ItemKind::Trait(\n                     self.lower_is_auto(is_auto),\n-                    self.lower_unsafety(unsafety),\n+                    unsafety,\n                     self.lower_generics(generics, ImplTraitContext::disallowed()),\n                     bounds,\n                     items,\n@@ -1284,7 +1284,7 @@ impl LoweringContext<'_> {\n \n     fn lower_fn_header(&mut self, h: FnHeader) -> hir::FnHeader {\n         hir::FnHeader {\n-            unsafety: self.lower_unsafety(h.unsafety),\n+            unsafety: h.unsafety,\n             asyncness: self.lower_asyncness(h.asyncness.node),\n             constness: h.constness.node,\n             abi: self.lower_abi(h.abi),\n@@ -1311,13 +1311,6 @@ impl LoweringContext<'_> {\n         .emit();\n     }\n \n-    pub(super) fn lower_unsafety(&mut self, u: Unsafety) -> hir::Unsafety {\n-        match u {\n-            Unsafety::Unsafe => hir::Unsafety::Unsafe,\n-            Unsafety::Normal => hir::Unsafety::Normal,\n-        }\n-    }\n-\n     fn lower_asyncness(&mut self, a: IsAsync) -> hir::IsAsync {\n         match a {\n             IsAsync::Async { .. } => hir::IsAsync::Async,"}, {"sha": "645d7b5fdb0157a156df55bc99ef438c18aa383f", "filename": "src/librustc/hir/mod.rs", "status": "modified", "additions": 1, "deletions": 26, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/f03cbc313ddc16d7aba6c21c197a52ee4d2e85e9/src%2Flibrustc%2Fhir%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f03cbc313ddc16d7aba6c21c197a52ee4d2e85e9/src%2Flibrustc%2Fhir%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fhir%2Fmod.rs?ref=f03cbc313ddc16d7aba6c21c197a52ee4d2e85e9", "patch": "@@ -22,7 +22,7 @@ use syntax_pos::{Span, DUMMY_SP, MultiSpan};\n use syntax::source_map::Spanned;\n use syntax::ast::{self, CrateSugar, Ident, Name, NodeId, AsmDialect};\n use syntax::ast::{Attribute, Label, LitKind, StrStyle, FloatTy, IntTy, UintTy};\n-pub use syntax::ast::{Mutability, Constness};\n+pub use syntax::ast::{Mutability, Constness, Unsafety};\n use syntax::attr::{InlineAttr, OptimizeAttr};\n use syntax::symbol::{Symbol, kw};\n use syntax::tokenstream::TokenStream;\n@@ -2154,22 +2154,6 @@ pub enum IsAsync {\n     NotAsync,\n }\n \n-#[derive(Copy, Clone, PartialEq, Eq, PartialOrd, Ord, HashStable,\n-         RustcEncodable, RustcDecodable, Hash, Debug)]\n-pub enum Unsafety {\n-    Unsafe,\n-    Normal,\n-}\n-\n-impl Unsafety {\n-    pub fn prefix_str(&self) -> &'static str {\n-        match self {\n-            Unsafety::Unsafe => \"unsafe \",\n-            Unsafety::Normal => \"\",\n-        }\n-    }\n-}\n-\n #[derive(Copy, Clone, PartialEq, RustcEncodable, RustcDecodable, Debug, HashStable)]\n pub enum Defaultness {\n     Default { has_value: bool },\n@@ -2196,15 +2180,6 @@ impl Defaultness {\n     }\n }\n \n-impl fmt::Display for Unsafety {\n-    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {\n-        f.write_str(match self {\n-            Unsafety::Normal => \"normal\",\n-            Unsafety::Unsafe => \"unsafe\",\n-        })\n-    }\n-}\n-\n #[derive(Copy, Clone, PartialEq, RustcEncodable, RustcDecodable, HashStable)]\n pub enum ImplPolarity {\n     /// `impl Trait for Type`"}, {"sha": "887d7beed6dedee9b3f12b6d047d9fca240a737d", "filename": "src/libsyntax/ast.rs", "status": "modified", "additions": 23, "deletions": 13, "changes": 36, "blob_url": "https://github.com/rust-lang/rust/blob/f03cbc313ddc16d7aba6c21c197a52ee4d2e85e9/src%2Flibsyntax%2Fast.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f03cbc313ddc16d7aba6c21c197a52ee4d2e85e9/src%2Flibsyntax%2Fast.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fast.rs?ref=f03cbc313ddc16d7aba6c21c197a52ee4d2e85e9", "patch": "@@ -1991,12 +1991,34 @@ pub enum IsAuto {\n     No,\n }\n \n-#[derive(Copy, Clone, PartialEq, RustcEncodable, RustcDecodable, Debug)]\n+#[derive(Copy, Clone, PartialEq, Eq, PartialOrd, Ord, Hash,\n+         RustcEncodable, RustcDecodable, Debug)]\n pub enum Unsafety {\n     Unsafe,\n     Normal,\n }\n \n+impl Unsafety {\n+    pub fn prefix_str(&self) -> &'static str {\n+        match self {\n+            Unsafety::Unsafe => \"unsafe \",\n+            Unsafety::Normal => \"\",\n+        }\n+    }\n+}\n+\n+impl fmt::Display for Unsafety {\n+    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {\n+        fmt::Display::fmt(\n+            match *self {\n+                Unsafety::Normal => \"normal\",\n+                Unsafety::Unsafe => \"unsafe\",\n+            },\n+            f,\n+        )\n+    }\n+}\n+\n #[derive(Copy, Clone, RustcEncodable, RustcDecodable, Debug)]\n pub enum IsAsync {\n     Async {\n@@ -2041,18 +2063,6 @@ pub enum Defaultness {\n     Final,\n }\n \n-impl fmt::Display for Unsafety {\n-    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {\n-        fmt::Display::fmt(\n-            match *self {\n-                Unsafety::Normal => \"normal\",\n-                Unsafety::Unsafe => \"unsafe\",\n-            },\n-            f,\n-        )\n-    }\n-}\n-\n #[derive(Copy, Clone, PartialEq, RustcEncodable, RustcDecodable)]\n pub enum ImplPolarity {\n     /// `impl Trait for Type`"}]}