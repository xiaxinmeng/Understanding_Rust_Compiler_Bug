{"sha": "9909ccb4f4a25314f0b831d56c8447345d8fa396", "node_id": "MDY6Q29tbWl0NzI0NzEyOjk5MDljY2I0ZjRhMjUzMTRmMGI4MzFkNTZjODQ0NzM0NWQ4ZmEzOTY=", "commit": {"author": {"name": "Lukas Wirth", "email": "lukastw97@gmail.com", "date": "2020-10-11T16:27:38Z"}, "committer": {"name": "Lukas Wirth", "email": "lukastw97@gmail.com", "date": "2020-10-11T16:39:03Z"}, "message": "Fix `mut self` not emitting mutable binding on `self` use", "tree": {"sha": "2f8e621258aebc627b952c60e6251f0405f4d4f2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2f8e621258aebc627b952c60e6251f0405f4d4f2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9909ccb4f4a25314f0b831d56c8447345d8fa396", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9909ccb4f4a25314f0b831d56c8447345d8fa396", "html_url": "https://github.com/rust-lang/rust/commit/9909ccb4f4a25314f0b831d56c8447345d8fa396", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9909ccb4f4a25314f0b831d56c8447345d8fa396/comments", "author": {"login": "Veykril", "id": 3757771, "node_id": "MDQ6VXNlcjM3NTc3NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/3757771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veykril", "html_url": "https://github.com/Veykril", "followers_url": "https://api.github.com/users/Veykril/followers", "following_url": "https://api.github.com/users/Veykril/following{/other_user}", "gists_url": "https://api.github.com/users/Veykril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veykril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veykril/subscriptions", "organizations_url": "https://api.github.com/users/Veykril/orgs", "repos_url": "https://api.github.com/users/Veykril/repos", "events_url": "https://api.github.com/users/Veykril/events{/privacy}", "received_events_url": "https://api.github.com/users/Veykril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Veykril", "id": 3757771, "node_id": "MDQ6VXNlcjM3NTc3NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/3757771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veykril", "html_url": "https://github.com/Veykril", "followers_url": "https://api.github.com/users/Veykril/followers", "following_url": "https://api.github.com/users/Veykril/following{/other_user}", "gists_url": "https://api.github.com/users/Veykril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veykril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veykril/subscriptions", "organizations_url": "https://api.github.com/users/Veykril/orgs", "repos_url": "https://api.github.com/users/Veykril/repos", "events_url": "https://api.github.com/users/Veykril/events{/privacy}", "received_events_url": "https://api.github.com/users/Veykril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cde189c5d5d77afd077b067a887bbc7e3adb4f80", "url": "https://api.github.com/repos/rust-lang/rust/commits/cde189c5d5d77afd077b067a887bbc7e3adb4f80", "html_url": "https://github.com/rust-lang/rust/commit/cde189c5d5d77afd077b067a887bbc7e3adb4f80"}], "stats": {"total": 7, "additions": 5, "deletions": 2}, "files": [{"sha": "01e72690a244d24c3a5fa2fbb9fa992c178082ce", "filename": "crates/hir_def/src/body/lower.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/9909ccb4f4a25314f0b831d56c8447345d8fa396/crates%2Fhir_def%2Fsrc%2Fbody%2Flower.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9909ccb4f4a25314f0b831d56c8447345d8fa396/crates%2Fhir_def%2Fsrc%2Fbody%2Flower.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_def%2Fsrc%2Fbody%2Flower.rs?ref=9909ccb4f4a25314f0b831d56c8447345d8fa396", "patch": "@@ -107,7 +107,10 @@ impl ExprCollector<'_> {\n                 let param_pat = self.alloc_pat(\n                     Pat::Bind {\n                         name: name![self],\n-                        mode: BindingAnnotation::Unannotated,\n+                        mode: BindingAnnotation::new(\n+                            self_param.mut_token().is_some() && self_param.amp_token().is_none(),\n+                            false,\n+                        ),\n                         subpat: None,\n                     },\n                     Either::Right(ptr),"}, {"sha": "3d54e48244c10eca3c2780f761b082f9b350a684", "filename": "crates/ide/src/syntax_highlighting/test_data/highlighting.html", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9909ccb4f4a25314f0b831d56c8447345d8fa396/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Ftest_data%2Fhighlighting.html", "raw_url": "https://github.com/rust-lang/rust/raw/9909ccb4f4a25314f0b831d56c8447345d8fa396/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Ftest_data%2Fhighlighting.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Ftest_data%2Fhighlighting.html?ref=9909ccb4f4a25314f0b831d56c8447345d8fa396", "patch": "@@ -62,7 +62,7 @@\n \n <span class=\"keyword\">impl</span> <span class=\"struct\">Foo</span> <span class=\"punctuation\">{</span>\n     <span class=\"keyword\">fn</span> <span class=\"function declaration\">baz</span><span class=\"punctuation\">(</span><span class=\"keyword\">mut</span> <span class=\"self_keyword mutable\">self</span><span class=\"punctuation\">,</span> <span class=\"value_param declaration\">f</span><span class=\"punctuation\">:</span> <span class=\"struct\">Foo</span><span class=\"punctuation\">)</span> <span class=\"operator\">-&gt;</span> <span class=\"builtin_type\">i32</span> <span class=\"punctuation\">{</span>\n-        <span class=\"value_param\">f</span><span class=\"punctuation\">.</span><span class=\"function consuming\">baz</span><span class=\"punctuation\">(</span><span class=\"self_keyword consuming\">self</span><span class=\"punctuation\">)</span>\n+        <span class=\"value_param\">f</span><span class=\"punctuation\">.</span><span class=\"function consuming\">baz</span><span class=\"punctuation\">(</span><span class=\"self_keyword mutable consuming\">self</span><span class=\"punctuation\">)</span>\n     <span class=\"punctuation\">}</span>\n \n     <span class=\"keyword\">fn</span> <span class=\"function declaration\">qux</span><span class=\"punctuation\">(</span><span class=\"operator\">&</span><span class=\"keyword\">mut</span> <span class=\"self_keyword mutable\">self</span><span class=\"punctuation\">)</span> <span class=\"punctuation\">{</span>"}]}