{"sha": "79b5177378097ee39e595517ca76132b3a3dc0eb", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc5YjUxNzczNzgwOTdlZTM5ZTU5NTUxN2NhNzYxMzJiM2EzZGMwZWI=", "commit": {"author": {"name": "Nick Cameron", "email": "ncameron@mozilla.com", "date": "2016-10-06T19:18:17Z"}, "committer": {"name": "Nick Cameron", "email": "ncameron@mozilla.com", "date": "2016-10-11T19:40:23Z"}, "message": "Review changes", "tree": {"sha": "709e9b9ecc5802bfb4383d4d7859ab67ba9c340f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/709e9b9ecc5802bfb4383d4d7859ab67ba9c340f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/79b5177378097ee39e595517ca76132b3a3dc0eb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/79b5177378097ee39e595517ca76132b3a3dc0eb", "html_url": "https://github.com/rust-lang/rust/commit/79b5177378097ee39e595517ca76132b3a3dc0eb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/79b5177378097ee39e595517ca76132b3a3dc0eb/comments", "author": {"login": "nrc", "id": 762626, "node_id": "MDQ6VXNlcjc2MjYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/762626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nrc", "html_url": "https://github.com/nrc", "followers_url": "https://api.github.com/users/nrc/followers", "following_url": "https://api.github.com/users/nrc/following{/other_user}", "gists_url": "https://api.github.com/users/nrc/gists{/gist_id}", "starred_url": "https://api.github.com/users/nrc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nrc/subscriptions", "organizations_url": "https://api.github.com/users/nrc/orgs", "repos_url": "https://api.github.com/users/nrc/repos", "events_url": "https://api.github.com/users/nrc/events{/privacy}", "received_events_url": "https://api.github.com/users/nrc/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nrc", "id": 762626, "node_id": "MDQ6VXNlcjc2MjYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/762626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nrc", "html_url": "https://github.com/nrc", "followers_url": "https://api.github.com/users/nrc/followers", "following_url": "https://api.github.com/users/nrc/following{/other_user}", "gists_url": "https://api.github.com/users/nrc/gists{/gist_id}", "starred_url": "https://api.github.com/users/nrc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nrc/subscriptions", "organizations_url": "https://api.github.com/users/nrc/orgs", "repos_url": "https://api.github.com/users/nrc/repos", "events_url": "https://api.github.com/users/nrc/events{/privacy}", "received_events_url": "https://api.github.com/users/nrc/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "14c62f91b7f09d6ff5fe94089c466a4f181a6f38", "url": "https://api.github.com/repos/rust-lang/rust/commits/14c62f91b7f09d6ff5fe94089c466a4f181a6f38", "html_url": "https://github.com/rust-lang/rust/commit/14c62f91b7f09d6ff5fe94089c466a4f181a6f38"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "6e08abd34614386c41479764b91248ea788f23d0", "filename": "src/libcore/macros.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/79b5177378097ee39e595517ca76132b3a3dc0eb/src%2Flibcore%2Fmacros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/79b5177378097ee39e595517ca76132b3a3dc0eb/src%2Flibcore%2Fmacros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fmacros.rs?ref=79b5177378097ee39e595517ca76132b3a3dc0eb", "patch": "@@ -256,7 +256,7 @@ macro_rules! debug_assert_ne {\n /// with converting downstream errors.\n ///\n /// Prefer using `?` syntax to `try!`. `?` is built in to the language and is\n-/// more succinct than `try!`, it is the standard method for error propogation.\n+/// more succinct than `try!`. It is the standard method for error propagation.\n ///\n /// `try!` matches the given `Result`. In case of the `Ok` variant, the\n /// expression has the value of the wrapped value."}]}