{"sha": "ea2c86874448439a31012ccb141450c67e3d94d8", "node_id": "MDY6Q29tbWl0NzI0NzEyOmVhMmM4Njg3NDQ0ODQzOWEzMTAxMmNjYjE0MTQ1MGM2N2UzZDk0ZDg=", "commit": {"author": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2011-03-10T00:07:55Z"}, "committer": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2011-03-10T00:07:55Z"}, "message": "rustc: Perform type substitutions for tag variants in dynamic_size_of()", "tree": {"sha": "68833c7d2988438da9bbfc88de251dc1801ba498", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/68833c7d2988438da9bbfc88de251dc1801ba498"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ea2c86874448439a31012ccb141450c67e3d94d8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ea2c86874448439a31012ccb141450c67e3d94d8", "html_url": "https://github.com/rust-lang/rust/commit/ea2c86874448439a31012ccb141450c67e3d94d8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ea2c86874448439a31012ccb141450c67e3d94d8/comments", "author": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1e65baad94ca8ae1f96472bf9efeb8e5ae04cf26", "url": "https://api.github.com/repos/rust-lang/rust/commits/1e65baad94ca8ae1f96472bf9efeb8e5ae04cf26", "html_url": "https://github.com/rust-lang/rust/commit/1e65baad94ca8ae1f96472bf9efeb8e5ae04cf26"}], "stats": {"total": 10, "additions": 9, "deletions": 1}, "files": [{"sha": "3c5253ff60ea75108e0e007865da49ce78737c6e", "filename": "src/comp/middle/trans.rs", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/ea2c86874448439a31012ccb141450c67e3d94d8/src%2Fcomp%2Fmiddle%2Ftrans.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ea2c86874448439a31012ccb141450c67e3d94d8/src%2Fcomp%2Fmiddle%2Ftrans.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Ftrans.rs?ref=ea2c86874448439a31012ccb141450c67e3d94d8", "patch": "@@ -1020,9 +1020,17 @@ fn dynamic_size_of(@block_ctxt cx, @ty.t t) -> result {\n             let ValueRef max_size = bcx.build.Alloca(T_int());\n             bcx.build.Store(C_int(0), max_size);\n \n+            auto ty_params = tag_ty_params(bcx.fcx.ccx, tid);\n             auto variants = tag_variants(bcx.fcx.ccx, tid);\n             for (ast.variant variant in variants) {\n-                let vec[@ty.t] tys = variant_types(bcx.fcx.ccx, variant);\n+                // Perform type substitution on the raw variant types.\n+                let vec[@ty.t] raw_tys = variant_types(bcx.fcx.ccx, variant);\n+                let vec[@ty.t] tys = vec();\n+                for (@ty.t raw_ty in raw_tys) {\n+                    auto t = ty.substitute_ty_params(ty_params, tps, raw_ty);\n+                    tys += vec(t);\n+                }\n+\n                 auto rslt = align_elements(bcx, tys);\n                 bcx = rslt.bcx;\n "}]}