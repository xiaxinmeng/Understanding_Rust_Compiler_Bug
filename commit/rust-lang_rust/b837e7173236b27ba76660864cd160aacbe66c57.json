{"sha": "b837e7173236b27ba76660864cd160aacbe66c57", "node_id": "MDY6Q29tbWl0NzI0NzEyOmI4MzdlNzE3MzIzNmIyN2JhNzY2NjA4NjRjZDE2MGFhY2JlNjZjNTc=", "commit": {"author": {"name": "Oliver Scherer", "email": "github35764891676564198441@oli-obk.de", "date": "2020-02-10T14:36:14Z"}, "committer": {"name": "Oliver Scherer", "email": "github35764891676564198441@oli-obk.de", "date": "2020-03-11T08:10:49Z"}, "message": "Reduce special casing in the const pretty printer", "tree": {"sha": "adae746393df59412febbb2332b25606ebac65ef", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/adae746393df59412febbb2332b25606ebac65ef"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b837e7173236b27ba76660864cd160aacbe66c57", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b837e7173236b27ba76660864cd160aacbe66c57", "html_url": "https://github.com/rust-lang/rust/commit/b837e7173236b27ba76660864cd160aacbe66c57", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b837e7173236b27ba76660864cd160aacbe66c57/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e22ddfd80d840f310d00fc756ab298caa181a326", "url": "https://api.github.com/repos/rust-lang/rust/commits/e22ddfd80d840f310d00fc756ab298caa181a326", "html_url": "https://github.com/rust-lang/rust/commit/e22ddfd80d840f310d00fc756ab298caa181a326"}], "stats": {"total": 18, "additions": 6, "deletions": 12}, "files": [{"sha": "446bb3db0046485517e97fe4e513a5dbcb1c9d40", "filename": "src/librustc/ty/print/pretty.rs", "status": "modified", "additions": 3, "deletions": 9, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/b837e7173236b27ba76660864cd160aacbe66c57/src%2Flibrustc%2Fty%2Fprint%2Fpretty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b837e7173236b27ba76660864cd160aacbe66c57/src%2Flibrustc%2Fty%2Fprint%2Fpretty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Fprint%2Fpretty.rs?ref=b837e7173236b27ba76660864cd160aacbe66c57", "patch": "@@ -937,7 +937,6 @@ pub trait PrettyPrinter<'tcx>:\n             // Bool\n             (Scalar::Raw { data: 0, .. }, ty::Bool) => p!(write(\"false\")),\n             (Scalar::Raw { data: 1, .. }, ty::Bool) => p!(write(\"true\")),\n-            (Scalar::Raw { data, .. }, ty::Bool) => p!(write(\"{}_bool\", data)),\n             // Float\n             (Scalar::Raw { data, .. }, ty::Float(ast::FloatTy::F32)) => {\n                 p!(write(\"{}f32\", Single::from_bits(data)))\n@@ -975,14 +974,9 @@ pub trait PrettyPrinter<'tcx>:\n                 Some(c) => p!(write(\"{:?}\", c)),\n                 None => p!(write(\"{}_char\", data)),\n             },\n-            // References and pointers\n-            (Scalar::Raw { data: 0, .. }, ty::RawPtr(_)) => p!(write(\"{{null pointer}}\")),\n-            // This is UB, but we still print it\n-            (Scalar::Raw { data: 0, .. }, ty::Ref(_, ty, _)) => {\n-                p!(write(\"{{null reference to \"), print(ty), write(\"}}\"))\n-            }\n-            (Scalar::Raw { data, .. }, ty::Ref(..)) | (Scalar::Raw { data, .. }, ty::RawPtr(_)) => {\n-                p!(write(\"0x{:x}\", data))\n+            // Raw pointers\n+            (Scalar::Raw { data, .. }, ty::RawPtr(_)) => {\n+                p!(write(\"{{0x{:x} as \", data), print(ty), write(\"}}\"))\n             }\n             (Scalar::Ptr(ptr), ty::FnPtr(_)) => {\n                 let instance = {"}, {"sha": "d9794f60a19ceb2bd648bf1709a7d909d66a501a", "filename": "src/test/ui/const-generics/raw-ptr-const-param.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/b837e7173236b27ba76660864cd160aacbe66c57/src%2Ftest%2Fui%2Fconst-generics%2Fraw-ptr-const-param.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b837e7173236b27ba76660864cd160aacbe66c57/src%2Ftest%2Fui%2Fconst-generics%2Fraw-ptr-const-param.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fraw-ptr-const-param.stderr?ref=b837e7173236b27ba76660864cd160aacbe66c57", "patch": "@@ -10,12 +10,12 @@ error[E0308]: mismatched types\n   --> $DIR/raw-ptr-const-param.rs:7:40\n    |\n LL |     let _: Const<{ 15 as *const _ }> = Const::<{ 10 as *const _ }>;\n-   |            -------------------------   ^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `0xf`, found `0xa`\n+   |            -------------------------   ^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `{0xf as *const u32}`, found `{0xa as *const u32}`\n    |            |\n    |            expected due to this\n    |\n-   = note: expected struct `Const<0xf>`\n-              found struct `Const<0xa>`\n+   = note: expected struct `Const<{0xf as *const u32}>`\n+              found struct `Const<{0xa as *const u32}>`\n \n error: aborting due to previous error\n "}]}