{"sha": "88b7ae642cbf1968452f63dca32a3c9567d4d8ff", "node_id": "MDY6Q29tbWl0NzI0NzEyOjg4YjdhZTY0MmNiZjE5Njg0NTJmNjNkY2EzMmEzYzk1NjdkNGQ4ZmY=", "commit": {"author": {"name": "The8472", "email": "git@infinite-source.de", "date": "2019-11-15T01:37:55Z"}, "committer": {"name": "The8472", "email": "git@infinite-source.de", "date": "2020-09-03T18:59:06Z"}, "message": "implement drop handling", "tree": {"sha": "8475e6c9b3841d594e86c5527e033811dc04eff4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8475e6c9b3841d594e86c5527e033811dc04eff4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/88b7ae642cbf1968452f63dca32a3c9567d4d8ff", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/88b7ae642cbf1968452f63dca32a3c9567d4d8ff", "html_url": "https://github.com/rust-lang/rust/commit/88b7ae642cbf1968452f63dca32a3c9567d4d8ff", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/88b7ae642cbf1968452f63dca32a3c9567d4d8ff/comments", "author": {"login": "the8472", "id": 1065730, "node_id": "MDQ6VXNlcjEwNjU3MzA=", "avatar_url": "https://avatars.githubusercontent.com/u/1065730?v=4", "gravatar_id": "", "url": "https://api.github.com/users/the8472", "html_url": "https://github.com/the8472", "followers_url": "https://api.github.com/users/the8472/followers", "following_url": "https://api.github.com/users/the8472/following{/other_user}", "gists_url": "https://api.github.com/users/the8472/gists{/gist_id}", "starred_url": "https://api.github.com/users/the8472/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/the8472/subscriptions", "organizations_url": "https://api.github.com/users/the8472/orgs", "repos_url": "https://api.github.com/users/the8472/repos", "events_url": "https://api.github.com/users/the8472/events{/privacy}", "received_events_url": "https://api.github.com/users/the8472/received_events", "type": "User", "site_admin": false}, "committer": {"login": "the8472", "id": 1065730, "node_id": "MDQ6VXNlcjEwNjU3MzA=", "avatar_url": "https://avatars.githubusercontent.com/u/1065730?v=4", "gravatar_id": "", "url": "https://api.github.com/users/the8472", "html_url": "https://github.com/the8472", "followers_url": "https://api.github.com/users/the8472/followers", "following_url": "https://api.github.com/users/the8472/following{/other_user}", "gists_url": "https://api.github.com/users/the8472/gists{/gist_id}", "starred_url": "https://api.github.com/users/the8472/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/the8472/subscriptions", "organizations_url": "https://api.github.com/users/the8472/orgs", "repos_url": "https://api.github.com/users/the8472/repos", "events_url": "https://api.github.com/users/the8472/events{/privacy}", "received_events_url": "https://api.github.com/users/the8472/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "73a982e9ecc81ad40b3c7f35ef6a4387140fa12f", "url": "https://api.github.com/repos/rust-lang/rust/commits/73a982e9ecc81ad40b3c7f35ef6a4387140fa12f", "html_url": "https://github.com/rust-lang/rust/commit/73a982e9ecc81ad40b3c7f35ef6a4387140fa12f"}], "stats": {"total": 33, "additions": 26, "deletions": 7}, "files": [{"sha": "a056f2abcd60e5f8a2e65ab98cff1b8e2841d139", "filename": "library/alloc/src/vec.rs", "status": "modified", "additions": 26, "deletions": 7, "changes": 33, "blob_url": "https://github.com/rust-lang/rust/blob/88b7ae642cbf1968452f63dca32a3c9567d4d8ff/library%2Falloc%2Fsrc%2Fvec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/88b7ae642cbf1968452f63dca32a3c9567d4d8ff/library%2Falloc%2Fsrc%2Fvec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Falloc%2Fsrc%2Fvec.rs?ref=88b7ae642cbf1968452f63dca32a3c9567d4d8ff", "patch": "@@ -2126,35 +2126,54 @@ where\n     }\n }\n \n+struct InPlaceIterFront<T> {\n+    inner: *mut T,\n+    count: usize,\n+    did_panic: bool,\n+}\n+\n+impl<T> Drop for InPlaceIterFront<T> {\n+    #[inline]\n+    fn drop(&mut self) {\n+        unsafe {\n+            if mem::needs_drop::<T>() && self.did_panic {\n+                ptr::drop_in_place(slice::from_raw_parts_mut(self.inner, self.count) as *mut _);\n+            }\n+        }\n+    }\n+}\n+\n fn from_into_iter_source<T, I>(mut iterator: I) -> Vec<T>\n where\n     I: Iterator<Item = T> + InPlaceIterable + SourceIter<Source = IntoIter<T>>,\n {\n-    let mut insert_pos = 0;\n     let original_ptr = iterator.as_inner().buf.as_ptr();\n+    let mut front_buffer = InPlaceIterFront { inner: original_ptr, count: 0, did_panic: true };\n \n-    // FIXME: how to drop values written into source when iteration panics?\n-    //   tail already gets cleaned by IntoIter::drop\n     while let Some(item) = iterator.next() {\n         let source_iter = iterator.as_inner();\n         let src_buf = source_iter.buf.as_ptr();\n         debug_assert_eq!(original_ptr, src_buf);\n         let src_idx = source_iter.ptr;\n         unsafe {\n-            let dst = src_buf.offset(insert_pos as isize);\n+            let dst = src_buf.offset(front_buffer.count as isize);\n             debug_assert!(\n                 dst as *const _ < src_idx,\n                 \"InPlaceIterable implementation produced more\\\n                           items than it consumed from the source\"\n             );\n             ptr::write(dst, item)\n         }\n-        insert_pos += 1;\n+        front_buffer.count += 1;\n     }\n \n     let src = iterator.as_inner();\n-    let vec = unsafe { Vec::from_raw_parts(src.buf.as_ptr(), insert_pos, src.cap) };\n-    mem::forget(iterator);\n+    front_buffer.did_panic = false;\n+    let vec = unsafe { Vec::from_raw_parts(src.buf.as_ptr(), front_buffer.count, src.cap) };\n+    src.cap = 0;\n+    src.buf = unsafe { NonNull::new_unchecked(RawVec::NEW.ptr()) };\n+    src.ptr = src.buf.as_ptr();\n+    src.end = src.buf.as_ptr();\n     vec\n }\n "}]}