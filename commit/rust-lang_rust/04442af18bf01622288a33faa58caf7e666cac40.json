{"sha": "04442af18bf01622288a33faa58caf7e666cac40", "node_id": "MDY6Q29tbWl0NzI0NzEyOjA0NDQyYWYxOGJmMDE2MjIyODhhMzNmYWE1OGNhZjdlNjY2Y2FjNDA=", "commit": {"author": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2018-03-13T14:54:03Z"}, "committer": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2018-03-13T14:54:03Z"}, "message": "rustc: Don't invoke `lld` with an `@`-file\n\nLooks like LLD doesn't support this yet, so always try to use the OS before we\nfall back to using `@`", "tree": {"sha": "ba40185af3e18be38ce4d6d455b2d9834f712a90", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ba40185af3e18be38ce4d6d455b2d9834f712a90"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/04442af18bf01622288a33faa58caf7e666cac40", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/04442af18bf01622288a33faa58caf7e666cac40", "html_url": "https://github.com/rust-lang/rust/commit/04442af18bf01622288a33faa58caf7e666cac40", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/04442af18bf01622288a33faa58caf7e666cac40/comments", "author": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "883e74645d350b6752cb94d48f46363f6f8789e9", "url": "https://api.github.com/repos/rust-lang/rust/commits/883e74645d350b6752cb94d48f46363f6f8789e9", "html_url": "https://github.com/rust-lang/rust/commit/883e74645d350b6752cb94d48f46363f6f8789e9"}], "stats": {"total": 13, "additions": 12, "deletions": 1}, "files": [{"sha": "a5649e98baa76c6f03f0cd8f3d296cbfff37d97d", "filename": "src/librustc_trans/back/command.rs", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/04442af18bf01622288a33faa58caf7e666cac40/src%2Flibrustc_trans%2Fback%2Fcommand.rs", "raw_url": "https://github.com/rust-lang/rust/raw/04442af18bf01622288a33faa58caf7e666cac40/src%2Flibrustc_trans%2Fback%2Fcommand.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Fback%2Fcommand.rs?ref=04442af18bf01622288a33faa58caf7e666cac40", "patch": "@@ -132,6 +132,13 @@ impl Command {\n             return false\n         }\n \n+        // Right now LLD doesn't support the `@` syntax of passing an argument\n+        // through files, so regardless of the platform we try to go to the OS\n+        // on this one.\n+        if let Program::Lld(..) = self.program {\n+            return false\n+        }\n+\n         // Ok so on Windows to spawn a process is 32,768 characters in its\n         // command line [1]. Unfortunately we don't actually have access to that\n         // as it's calculated just before spawning. Instead we perform a"}, {"sha": "bdda7741221f5e288567361807010c1f01b720a6", "filename": "src/librustc_trans/back/link.rs", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/04442af18bf01622288a33faa58caf7e666cac40/src%2Flibrustc_trans%2Fback%2Flink.rs", "raw_url": "https://github.com/rust-lang/rust/raw/04442af18bf01622288a33faa58caf7e666cac40/src%2Flibrustc_trans%2Fback%2Flink.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Fback%2Flink.rs?ref=04442af18bf01622288a33faa58caf7e666cac40", "patch": "@@ -827,11 +827,14 @@ fn exec_linker(sess: &Session, cmd: &mut Command, tmpdir: &Path)\n     if !cmd.very_likely_to_exceed_some_spawn_limit() {\n         match cmd.command().stdout(Stdio::piped()).stderr(Stdio::piped()).spawn() {\n             Ok(child) => return child.wait_with_output(),\n-            Err(ref e) if command_line_too_big(e) => {}\n+            Err(ref e) if command_line_too_big(e) => {\n+                info!(\"command line to linker was too big: {}\", e);\n+            }\n             Err(e) => return Err(e)\n         }\n     }\n \n+    info!(\"falling back to passing arguments to linker via an @-file\");\n     let mut cmd2 = cmd.clone();\n     let mut args = String::new();\n     for arg in cmd2.take_args() {\n@@ -856,6 +859,7 @@ fn exec_linker(sess: &Session, cmd: &mut Command, tmpdir: &Path)\n     };\n     fs::write(&file, &bytes)?;\n     cmd2.arg(format!(\"@{}\", file.display()));\n+    info!(\"invoking linker {:?}\", cmd2);\n     return cmd2.output();\n \n     #[cfg(unix)]"}]}