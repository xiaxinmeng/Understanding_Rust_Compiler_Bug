{"sha": "db11c1939cfca105116a5cdf13f63e5005471aad", "node_id": "C_kwDOAAsO6NoAKGRiMTFjMTkzOWNmY2ExMDUxMTZhNWNkZjEzZjYzZTUwMDU0NzFhYWQ", "commit": {"author": {"name": "lcnr", "email": "rust@lcnr.de", "date": "2022-05-20T12:46:18Z"}, "committer": {"name": "lcnr", "email": "rust@lcnr.de", "date": "2022-05-21T06:13:17Z"}, "message": "update mir user type printing and apparently fix an ICE", "tree": {"sha": "fcae9fbaee07deb6c41809b591f6e236b84d133c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fcae9fbaee07deb6c41809b591f6e236b84d133c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/db11c1939cfca105116a5cdf13f63e5005471aad", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/db11c1939cfca105116a5cdf13f63e5005471aad", "html_url": "https://github.com/rust-lang/rust/commit/db11c1939cfca105116a5cdf13f63e5005471aad", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/db11c1939cfca105116a5cdf13f63e5005471aad/comments", "author": {"login": "lcnr", "id": 29864074, "node_id": "MDQ6VXNlcjI5ODY0MDc0", "avatar_url": "https://avatars.githubusercontent.com/u/29864074?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lcnr", "html_url": "https://github.com/lcnr", "followers_url": "https://api.github.com/users/lcnr/followers", "following_url": "https://api.github.com/users/lcnr/following{/other_user}", "gists_url": "https://api.github.com/users/lcnr/gists{/gist_id}", "starred_url": "https://api.github.com/users/lcnr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lcnr/subscriptions", "organizations_url": "https://api.github.com/users/lcnr/orgs", "repos_url": "https://api.github.com/users/lcnr/repos", "events_url": "https://api.github.com/users/lcnr/events{/privacy}", "received_events_url": "https://api.github.com/users/lcnr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "lcnr", "id": 29864074, "node_id": "MDQ6VXNlcjI5ODY0MDc0", "avatar_url": "https://avatars.githubusercontent.com/u/29864074?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lcnr", "html_url": "https://github.com/lcnr", "followers_url": "https://api.github.com/users/lcnr/followers", "following_url": "https://api.github.com/users/lcnr/following{/other_user}", "gists_url": "https://api.github.com/users/lcnr/gists{/gist_id}", "starred_url": "https://api.github.com/users/lcnr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lcnr/subscriptions", "organizations_url": "https://api.github.com/users/lcnr/orgs", "repos_url": "https://api.github.com/users/lcnr/repos", "events_url": "https://api.github.com/users/lcnr/events{/privacy}", "received_events_url": "https://api.github.com/users/lcnr/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "39a03779f8412c776cebaca7173369dbc0025d50", "url": "https://api.github.com/repos/rust-lang/rust/commits/39a03779f8412c776cebaca7173369dbc0025d50", "html_url": "https://github.com/rust-lang/rust/commit/39a03779f8412c776cebaca7173369dbc0025d50"}], "stats": {"total": 59, "additions": 11, "deletions": 48}, "files": [{"sha": "eaa68bf1b38ddc682bbeb8b9daa2049aa250d62c", "filename": "compiler/rustc_middle/src/mir/pretty.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/db11c1939cfca105116a5cdf13f63e5005471aad/compiler%2Frustc_middle%2Fsrc%2Fmir%2Fpretty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/db11c1939cfca105116a5cdf13f63e5005471aad/compiler%2Frustc_middle%2Fsrc%2Fmir%2Fpretty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fmir%2Fpretty.rs?ref=db11c1939cfca105116a5cdf13f63e5005471aad", "patch": "@@ -1007,10 +1007,11 @@ fn write_user_type_annotations(\n     for (index, annotation) in body.user_type_annotations.iter_enumerated() {\n         writeln!(\n             w,\n-            \"| {:?}: {:?} at {}\",\n+            \"| {:?}: user_ty: {:?}, span: {}, inferred_ty: {:?}\",\n             index.index(),\n             annotation.user_ty,\n-            tcx.sess.source_map().span_to_embeddable_string(annotation.span)\n+            tcx.sess.source_map().span_to_embeddable_string(annotation.span),\n+            annotation.inferred_ty,\n         )?;\n     }\n     if !body.user_type_annotations.is_empty() {"}, {"sha": "811832848d9dd24f5206e3d160841e4fee7af808", "filename": "src/test/ui/type-alias-impl-trait/cross_inference_pattern_bug.rs", "status": "modified", "additions": 2, "deletions": 18, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/db11c1939cfca105116a5cdf13f63e5005471aad/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Fcross_inference_pattern_bug.rs", "raw_url": "https://github.com/rust-lang/rust/raw/db11c1939cfca105116a5cdf13f63e5005471aad/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Fcross_inference_pattern_bug.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Fcross_inference_pattern_bug.rs?ref=db11c1939cfca105116a5cdf13f63e5005471aad", "patch": "@@ -1,24 +1,8 @@\n-// known-bug\n-// failure-status: 101\n-// compile-flags: --edition=2021 --crate-type=lib\n-// rustc-env:RUST_BACKTRACE=0\n-\n-// normalize-stderr-test \"thread 'rustc' panicked.*\" -> \"thread 'rustc' panicked\"\n-// normalize-stderr-test \"note:.*RUST_BACKTRACE=1.*\\n\" -> \"\"\n-// normalize-stderr-test \"\\nerror: internal compiler error.*\\n\\n\" -> \"\"\n-// normalize-stderr-test \"note:.*unexpectedly panicked.*\\n\\n\" -> \"\"\n-// normalize-stderr-test \"note: we would appreciate a bug report.*\\n\\n\" -> \"\"\n-// normalize-stderr-test \"note: compiler flags.*\\n\\n\" -> \"\"\n-// normalize-stderr-test \"note: rustc.*running on.*\\n\\n\" -> \"\"\n-// normalize-stderr-test \"#.*\\n\" -> \"\"\n-// normalize-stderr-test \".*delayed.*\\n\" -> \"\"\n-\n-// tracked in https://github.com/rust-lang/rust/issues/96572\n-\n+// compile-flags: --edition=2021\n #![feature(type_alias_impl_trait)]\n \n fn main() {\n-    type T = impl Copy;\n+    type T = impl Copy; //~ ERROR unconstrained opaque type\n     let foo: T = (1u32, 2u32);\n     let (a, b): (u32, u32) = foo;\n }"}, {"sha": "03b172e6de5706f8dcf6e1c38e289bed1df6f022", "filename": "src/test/ui/type-alias-impl-trait/cross_inference_pattern_bug.stderr", "status": "modified", "additions": 6, "deletions": 28, "changes": 34, "blob_url": "https://github.com/rust-lang/rust/blob/db11c1939cfca105116a5cdf13f63e5005471aad/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Fcross_inference_pattern_bug.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/db11c1939cfca105116a5cdf13f63e5005471aad/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Fcross_inference_pattern_bug.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Fcross_inference_pattern_bug.stderr?ref=db11c1939cfca105116a5cdf13f63e5005471aad", "patch": "@@ -1,32 +1,10 @@\n-error: internal compiler error: no errors encountered even though `delay_span_bug` issued\n-\n-error: internal compiler error: broken MIR in DefId(0:3 ~ cross_inference_pattern_bug[646d]::main) ((_1.0: u32)): can't project out of PlaceTy { ty: main::T, variant_index: None }\n-  --> $DIR/cross_inference_pattern_bug.rs:23:10\n-   |\n-LL |     let (a, b): (u32, u32) = foo;\n-   |          ^\n-   |\n-\n-error: internal compiler error: TyKind::Error constructed but no error reported\n-   |\n-\n-error: internal compiler error: TyKind::Error constructed but no error reported\n+error: unconstrained opaque type\n+  --> $DIR/cross_inference_pattern_bug.rs:5:14\n    |\n-\n-error: internal compiler error: broken MIR in DefId(0:3 ~ cross_inference_pattern_bug[646d]::main) ((_1.1: u32)): can't project out of PlaceTy { ty: main::T, variant_index: None }\n-  --> $DIR/cross_inference_pattern_bug.rs:23:13\n-   |\n-LL |     let (a, b): (u32, u32) = foo;\n-   |             ^\n-   |\n-\n-error: internal compiler error: TyKind::Error constructed but no error reported\n-   |\n-\n-error: internal compiler error: TyKind::Error constructed but no error reported\n+LL |     type T = impl Copy;\n+   |              ^^^^^^^^^\n    |\n+   = note: `T` must be used in combination with a concrete type within the same module\n \n-thread 'rustc' panicked\n+error: aborting due to previous error\n \n-query stack during panic:\n-end of query stack"}]}