{"sha": "0a6f45e2e5057fa47c4687edb493e9ce02a5db9a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjBhNmY0NWUyZTUwNTdmYTQ3YzQ2ODdlZGI0OTNlOWNlMDJhNWRiOWE=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2020-03-02T21:43:31Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2020-03-04T09:31:00Z"}, "message": "point cargo-miri to the right xargo binary", "tree": {"sha": "f84a706888eba156a22214f1eeb6abbbc4726ae9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f84a706888eba156a22214f1eeb6abbbc4726ae9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0a6f45e2e5057fa47c4687edb493e9ce02a5db9a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0a6f45e2e5057fa47c4687edb493e9ce02a5db9a", "html_url": "https://github.com/rust-lang/rust/commit/0a6f45e2e5057fa47c4687edb493e9ce02a5db9a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0a6f45e2e5057fa47c4687edb493e9ce02a5db9a/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c839a7b4c26e58319b0c40448dd423facff34cd0", "url": "https://api.github.com/repos/rust-lang/rust/commits/c839a7b4c26e58319b0c40448dd423facff34cd0", "html_url": "https://github.com/rust-lang/rust/commit/c839a7b4c26e58319b0c40448dd423facff34cd0"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "1b9e9a889483c0921ad3d5a53021bbdbb5809093", "filename": "src/bootstrap/test.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0a6f45e2e5057fa47c4687edb493e9ce02a5db9a/src%2Fbootstrap%2Ftest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0a6f45e2e5057fa47c4687edb493e9ce02a5db9a/src%2Fbootstrap%2Ftest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Ftest.rs?ref=0a6f45e2e5057fa47c4687edb493e9ce02a5db9a", "patch": "@@ -391,7 +391,7 @@ impl Step for Miri {\n             // Overwrite bootstrap's `rustc` wrapper overwriting our flags.\n             cargo.env(\"RUSTC_DEBUG_ASSERTIONS\", \"true\");\n             // Let cargo-miri know where xargo ended up.\n-            cargo.env(\"XARGO\", builder.out.join(\"bin\").join(\"xargo\"));\n+            cargo.env(\"XARGO_CHECK\", builder.out.join(\"bin\").join(\"xargo-check\"));\n \n             let mut cargo = Command::from(cargo);\n             if !try_run(builder, &mut cargo) {"}]}