{"sha": "2b36a8eab41a4e323f9c234ff89a46fbe2cd84d5", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJiMzZhOGVhYjQxYTRlMzIzZjljMjM0ZmY4OWE0NmZiZTJjZDg0ZDU=", "commit": {"author": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2010-12-08T23:29:09Z"}, "committer": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2010-12-08T23:29:09Z"}, "message": "Fix log upcall translation bug. Un-XFAIL rec-auto.rs.", "tree": {"sha": "cdb523adcb43bf4b3436521715b66048fdd556b5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/cdb523adcb43bf4b3436521715b66048fdd556b5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2b36a8eab41a4e323f9c234ff89a46fbe2cd84d5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2b36a8eab41a4e323f9c234ff89a46fbe2cd84d5", "html_url": "https://github.com/rust-lang/rust/commit/2b36a8eab41a4e323f9c234ff89a46fbe2cd84d5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2b36a8eab41a4e323f9c234ff89a46fbe2cd84d5/comments", "author": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "committer": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6ccfba34f3eab71abc7eed4adc30cfee9fabd49e", "url": "https://api.github.com/repos/rust-lang/rust/commits/6ccfba34f3eab71abc7eed4adc30cfee9fabd49e", "html_url": "https://github.com/rust-lang/rust/commit/6ccfba34f3eab71abc7eed4adc30cfee9fabd49e"}], "stats": {"total": 33, "additions": 13, "deletions": 20}, "files": [{"sha": "2a41351d2fe360987428803213b8483526747522", "filename": "src/Makefile", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/2b36a8eab41a4e323f9c234ff89a46fbe2cd84d5/src%2FMakefile", "raw_url": "https://github.com/rust-lang/rust/raw/2b36a8eab41a4e323f9c234ff89a46fbe2cd84d5/src%2FMakefile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2FMakefile?ref=2b36a8eab41a4e323f9c234ff89a46fbe2cd84d5", "patch": "@@ -544,6 +544,7 @@ TEST_XFAILS_SELF := $(filter-out \\\n                         multiline-comment.rs \\\n                         readalias.rs \\\n                         rec.rs \\\n+                        rec-auto.rs \\\n                         rec-tup.rs \\\n                         return-nil.rs \\\n                         tup.rs \\"}, {"sha": "5e96f58e2b08556e489ab91255fee3e42e906106", "filename": "src/comp/middle/trans.rs", "status": "modified", "additions": 12, "deletions": 20, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/2b36a8eab41a4e323f9c234ff89a46fbe2cd84d5/src%2Fcomp%2Fmiddle%2Ftrans.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2b36a8eab41a4e323f9c234ff89a46fbe2cd84d5/src%2Fcomp%2Fmiddle%2Ftrans.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Ftrans.rs?ref=2b36a8eab41a4e323f9c234ff89a46fbe2cd84d5", "patch": "@@ -1547,31 +1547,23 @@ fn load_non_structural(@block_ctxt cx,\n }\n \n impure fn trans_log(@block_ctxt cx, @ast.expr e) -> result {\n-    alt (e.node) {\n-        case (ast.expr_lit(?lit, _)) {\n-            alt (lit.node) {\n-                case (ast.lit_str(_)) {\n-                    auto sub = trans_expr(cx, e);\n-                    auto v = sub.bcx.build.PtrToInt(sub.val, T_int());\n-                    ret trans_upcall(sub.bcx,\n-                                     \"upcall_log_str\",\n-                                     vec(v));\n-                }\n \n-                case (_) {\n-                    auto sub = trans_expr(cx, e);\n-                    ret trans_upcall(sub.bcx,\n-                                     \"upcall_log_int\",\n-                                     vec(sub.val));\n-                }\n-            }\n+    auto sub = trans_expr(cx, e);\n+    auto e_ty = typeck.expr_ty(e);\n+    alt (e_ty.struct) {\n+        case (typeck.ty_str) {\n+            auto v = sub.bcx.build.PtrToInt(sub.val, T_int());\n+            ret trans_upcall(sub.bcx,\n+                             \"upcall_log_str\",\n+                             vec(v));\n         }\n-\n         case (_) {\n-            auto sub = trans_expr(cx, e);\n-            ret trans_upcall(sub.bcx, \"upcall_log_int\", vec(sub.val));\n+            ret trans_upcall(sub.bcx,\n+                             \"upcall_log_int\",\n+                             vec(sub.val));\n         }\n     }\n+    fail;\n }\n \n impure fn trans_check_expr(@block_ctxt cx, @ast.expr e) -> result {"}]}