{"sha": "a6a5e4884a6c5be54acd53773e68faf02d79f52f", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE2YTVlNDg4NGE2YzViZTU0YWNkNTM3NzNlNjhmYWYwMmQ3OWY1MmY=", "commit": {"author": {"name": "Eduard Burtescu", "email": "edy.burt@gmail.com", "date": "2016-05-11T22:25:20Z"}, "committer": {"name": "Eduard Burtescu", "email": "edy.burt@gmail.com", "date": "2016-05-24T22:34:20Z"}, "message": "trans: force absolute item paths within symbols.", "tree": {"sha": "4081d5ea8f3f1e3b05c8c388d8af3602dc3c9fb7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4081d5ea8f3f1e3b05c8c388d8af3602dc3c9fb7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a6a5e4884a6c5be54acd53773e68faf02d79f52f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a6a5e4884a6c5be54acd53773e68faf02d79f52f", "html_url": "https://github.com/rust-lang/rust/commit/a6a5e4884a6c5be54acd53773e68faf02d79f52f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a6a5e4884a6c5be54acd53773e68faf02d79f52f/comments", "author": {"login": "eddyb", "id": 77424, "node_id": "MDQ6VXNlcjc3NDI0", "avatar_url": "https://avatars.githubusercontent.com/u/77424?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eddyb", "html_url": "https://github.com/eddyb", "followers_url": "https://api.github.com/users/eddyb/followers", "following_url": "https://api.github.com/users/eddyb/following{/other_user}", "gists_url": "https://api.github.com/users/eddyb/gists{/gist_id}", "starred_url": "https://api.github.com/users/eddyb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eddyb/subscriptions", "organizations_url": "https://api.github.com/users/eddyb/orgs", "repos_url": "https://api.github.com/users/eddyb/repos", "events_url": "https://api.github.com/users/eddyb/events{/privacy}", "received_events_url": "https://api.github.com/users/eddyb/received_events", "type": "User", "site_admin": false}, "committer": {"login": "eddyb", "id": 77424, "node_id": "MDQ6VXNlcjc3NDI0", "avatar_url": "https://avatars.githubusercontent.com/u/77424?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eddyb", "html_url": "https://github.com/eddyb", "followers_url": "https://api.github.com/users/eddyb/followers", "following_url": "https://api.github.com/users/eddyb/following{/other_user}", "gists_url": "https://api.github.com/users/eddyb/gists{/gist_id}", "starred_url": "https://api.github.com/users/eddyb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eddyb/subscriptions", "organizations_url": "https://api.github.com/users/eddyb/orgs", "repos_url": "https://api.github.com/users/eddyb/repos", "events_url": "https://api.github.com/users/eddyb/events{/privacy}", "received_events_url": "https://api.github.com/users/eddyb/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "14133d33bcc2e6e3939fa4b485294334366bf162", "url": "https://api.github.com/repos/rust-lang/rust/commits/14133d33bcc2e6e3939fa4b485294334366bf162", "html_url": "https://github.com/rust-lang/rust/commit/14133d33bcc2e6e3939fa4b485294334366bf162"}], "stats": {"total": 47, "additions": 42, "deletions": 5}, "files": [{"sha": "ee9983038b162aab2c8fdaa3009f59a0c966d91d", "filename": "src/librustc/ty/item_path.rs", "status": "modified", "additions": 33, "deletions": 3, "changes": 36, "blob_url": "https://github.com/rust-lang/rust/blob/a6a5e4884a6c5be54acd53773e68faf02d79f52f/src%2Flibrustc%2Fty%2Fitem_path.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a6a5e4884a6c5be54acd53773e68faf02d79f52f/src%2Flibrustc%2Fty%2Fitem_path.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Fitem_path.rs?ref=a6a5e4884a6c5be54acd53773e68faf02d79f52f", "patch": "@@ -14,12 +14,38 @@ use hir::def_id::{DefId, CRATE_DEF_INDEX};\n use ty::{self, Ty, TyCtxt};\n use syntax::ast;\n \n+use std::cell::Cell;\n+\n+thread_local! {\n+    static FORCE_ABSOLUTE: Cell<bool> = Cell::new(false)\n+}\n+\n+/// Enforces that item_path_str always returns an absolute path.\n+/// This is useful when building symbols that contain types,\n+/// where we want the crate name to be part of the symbol.\n+pub fn with_forced_absolute_paths<F: FnOnce() -> R, R>(f: F) -> R {\n+    FORCE_ABSOLUTE.with(|force| {\n+        let old = force.get();\n+        force.set(true);\n+        let result = f();\n+        force.set(old);\n+        result\n+    })\n+}\n+\n impl<'a, 'gcx, 'tcx> TyCtxt<'a, 'gcx, 'tcx> {\n     /// Returns a string identifying this def-id. This string is\n     /// suitable for user output. It is relative to the current crate\n-    /// root.\n+    /// root, unless with_forced_absolute_paths was used.\n     pub fn item_path_str(self, def_id: DefId) -> String {\n-        let mut buffer = LocalPathBuffer::new(RootMode::Local);\n+        let mode = FORCE_ABSOLUTE.with(|force| {\n+            if force.get() {\n+                RootMode::Absolute\n+            } else {\n+                RootMode::Local\n+            }\n+        });\n+        let mut buffer = LocalPathBuffer::new(mode);\n         self.push_item_path(&mut buffer, def_id);\n         buffer.into_string()\n     }\n@@ -75,7 +101,11 @@ impl<'a, 'gcx, 'tcx> TyCtxt<'a, 'gcx, 'tcx> {\n             RootMode::Absolute => {\n                 // In absolute mode, just write the crate name\n                 // unconditionally.\n-                buffer.push(&self.crate_name(cnum));\n+                if cnum == LOCAL_CRATE {\n+                    buffer.push(&self.crate_name(cnum));\n+                } else {\n+                    buffer.push(&self.sess.cstore.original_crate_name(cnum));\n+                }\n             }\n         }\n     }"}, {"sha": "4c166029c3e7baaa6c5c379a1700081707ec7319", "filename": "src/librustc_trans/back/symbol_names.rs", "status": "modified", "additions": 9, "deletions": 2, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/a6a5e4884a6c5be54acd53773e68faf02d79f52f/src%2Flibrustc_trans%2Fback%2Fsymbol_names.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a6a5e4884a6c5be54acd53773e68faf02d79f52f/src%2Flibrustc_trans%2Fback%2Fsymbol_names.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Fback%2Fsymbol_names.rs?ref=a6a5e4884a6c5be54acd53773e68faf02d79f52f", "patch": "@@ -120,7 +120,11 @@ pub fn def_id_to_string<'a, 'tcx>(tcx: TyCtxt<'a, 'tcx, 'tcx>, def_id: DefId) ->\n fn def_path_to_string<'a, 'tcx>(tcx: TyCtxt<'a, 'tcx, 'tcx>, def_path: &DefPath) -> String {\n     let mut s = String::with_capacity(def_path.data.len() * 16);\n \n-    s.push_str(&tcx.crate_name(def_path.krate));\n+    if def_path.krate == cstore::LOCAL_CRATE {\n+        s.push_str(&tcx.crate_name(def_path.krate));\n+    } else {\n+        s.push_str(&tcx.sess.cstore.original_crate_name(def_path.krate));\n+    }\n     s.push_str(\"/\");\n     s.push_str(&tcx.crate_disambiguator(def_path.krate));\n \n@@ -265,7 +269,10 @@ pub fn exported_name<'a, 'tcx>(scx: &SharedCrateContext<'a, 'tcx>,\n     let mut buffer = SymbolPathBuffer {\n         names: Vec::with_capacity(def_path.data.len())\n     };\n-    ccx.tcx().push_item_path(&mut buffer, def_id);\n+\n+    item_path::with_forced_absolute_paths(|| {\n+        scx.tcx().push_item_path(&mut buffer, def_id);\n+    });\n \n     mangle(buffer.names.into_iter(), Some(&hash[..]))\n }"}]}