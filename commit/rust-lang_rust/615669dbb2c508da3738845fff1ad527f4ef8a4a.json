{"sha": "615669dbb2c508da3738845fff1ad527f4ef8a4a", "node_id": "C_kwDOAAsO6NoAKDYxNTY2OWRiYjJjNTA4ZGEzNzM4ODQ1ZmZmMWFkNTI3ZjRlZjhhNGE", "commit": {"author": {"name": "Yuki Okushi", "email": "jtitor@2k36.org", "date": "2023-04-20T08:03:25Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2023-04-20T08:03:25Z"}, "message": "Rollup merge of #110548 - kpreid:span, r=WaffleLapkin\n\nMake `impl Debug for Span` not panic on not having session globals.\n\nI hit the panic that this patch avoids while messing with the early lints in `rustc_session::config::build_session_options()`. The rest of that project is not finished, but this seemed like a self-contained improvement.\n\n(Should changes like this add tests? I don't see similar unit tests.)", "tree": {"sha": "49f7f76d9ea6871331e47ae7d5ff267d525a397a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/49f7f76d9ea6871331e47ae7d5ff267d525a397a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/615669dbb2c508da3738845fff1ad527f4ef8a4a", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJkQPHNCRBK7hj4Ov3rIwAAzqkIAKBLUzDuBZ8fqMD72Nmyw73Y\n+PR2hAqKLky1xZkvkOL9As7pcWA0YJfPhPjxlVHLVWNqoYhrpnYjYLJZFPh5+Na0\nFBb7zLv4oYR3zNrd1fHSwtp0f+hrR9DbHXVp7y1fBqvmYxy2trWw9uRlDc5fU7HG\nIC2IymJkOROIfx6mxY/6CaLH10BA5Xm+IFIlfsZCjPizz+Z8vNFi702wZVJj95Uh\n+g0fPCEJbnzCstt2a63uFx4YyGN9fGV/RRTwY6cVuH0C/OytxOJRu5EhyPUqIfaN\nO1a8JL63wBiNv65pHfpkGOfqTAvIFl4eDz9irg1aMZj5jPju5QtVHGJGQE8z908=\n=BCjp\n-----END PGP SIGNATURE-----\n", "payload": "tree 49f7f76d9ea6871331e47ae7d5ff267d525a397a\nparent f71e78e0df2a3bbac30f4a1873afc8d5c180def7\nparent 883606f2c06821e0a2c0e7a8c6219a1225d9bea4\nauthor Yuki Okushi <jtitor@2k36.org> 1681977805 +0900\ncommitter GitHub <noreply@github.com> 1681977805 +0900\n\nRollup merge of #110548 - kpreid:span, r=WaffleLapkin\n\nMake `impl Debug for Span` not panic on not having session globals.\n\nI hit the panic that this patch avoids while messing with the early lints in `rustc_session::config::build_session_options()`. The rest of that project is not finished, but this seemed like a self-contained improvement.\n\n(Should changes like this add tests? I don't see similar unit tests.)\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/615669dbb2c508da3738845fff1ad527f4ef8a4a", "html_url": "https://github.com/rust-lang/rust/commit/615669dbb2c508da3738845fff1ad527f4ef8a4a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/615669dbb2c508da3738845fff1ad527f4ef8a4a/comments", "author": {"login": "JohnTitor", "id": 25030997, "node_id": "MDQ6VXNlcjI1MDMwOTk3", "avatar_url": "https://avatars.githubusercontent.com/u/25030997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JohnTitor", "html_url": "https://github.com/JohnTitor", "followers_url": "https://api.github.com/users/JohnTitor/followers", "following_url": "https://api.github.com/users/JohnTitor/following{/other_user}", "gists_url": "https://api.github.com/users/JohnTitor/gists{/gist_id}", "starred_url": "https://api.github.com/users/JohnTitor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JohnTitor/subscriptions", "organizations_url": "https://api.github.com/users/JohnTitor/orgs", "repos_url": "https://api.github.com/users/JohnTitor/repos", "events_url": "https://api.github.com/users/JohnTitor/events{/privacy}", "received_events_url": "https://api.github.com/users/JohnTitor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f71e78e0df2a3bbac30f4a1873afc8d5c180def7", "url": "https://api.github.com/repos/rust-lang/rust/commits/f71e78e0df2a3bbac30f4a1873afc8d5c180def7", "html_url": "https://github.com/rust-lang/rust/commit/f71e78e0df2a3bbac30f4a1873afc8d5c180def7"}, {"sha": "883606f2c06821e0a2c0e7a8c6219a1225d9bea4", "url": "https://api.github.com/repos/rust-lang/rust/commits/883606f2c06821e0a2c0e7a8c6219a1225d9bea4", "html_url": "https://github.com/rust-lang/rust/commit/883606f2c06821e0a2c0e7a8c6219a1225d9bea4"}], "stats": {"total": 31, "additions": 20, "deletions": 11}, "files": [{"sha": "8a900ca427ebe92af8641a574965e84813e9c923", "filename": "compiler/rustc_span/src/lib.rs", "status": "modified", "additions": 20, "deletions": 11, "changes": 31, "blob_url": "https://github.com/rust-lang/rust/blob/615669dbb2c508da3738845fff1ad527f4ef8a4a/compiler%2Frustc_span%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/615669dbb2c508da3738845fff1ad527f4ef8a4a/compiler%2Frustc_span%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_span%2Fsrc%2Flib.rs?ref=615669dbb2c508da3738845fff1ad527f4ef8a4a", "patch": "@@ -1044,17 +1044,26 @@ impl fmt::Debug for Span {\n     fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {\n         // Use the global `SourceMap` to print the span. If that's not\n         // available, fall back to printing the raw values.\n-        with_session_globals(|session_globals| {\n-            if let Some(source_map) = &*session_globals.source_map.borrow() {\n-                write!(f, \"{} ({:?})\", source_map.span_to_diagnostic_string(*self), self.ctxt())\n-            } else {\n-                f.debug_struct(\"Span\")\n-                    .field(\"lo\", &self.lo())\n-                    .field(\"hi\", &self.hi())\n-                    .field(\"ctxt\", &self.ctxt())\n-                    .finish()\n-            }\n-        })\n+\n+        fn fallback(span: Span, f: &mut fmt::Formatter<'_>) -> fmt::Result {\n+            f.debug_struct(\"Span\")\n+                .field(\"lo\", &span.lo())\n+                .field(\"hi\", &span.hi())\n+                .field(\"ctxt\", &span.ctxt())\n+                .finish()\n+        }\n+\n+        if SESSION_GLOBALS.is_set() {\n+            with_session_globals(|session_globals| {\n+                if let Some(source_map) = &*session_globals.source_map.borrow() {\n+                    write!(f, \"{} ({:?})\", source_map.span_to_diagnostic_string(*self), self.ctxt())\n+                } else {\n+                    fallback(*self, f)\n+                }\n+            })\n+        } else {\n+            fallback(*self, f)\n+        }\n     }\n }\n "}]}