{"sha": "57e85b5f947387195cec1338fcb94b7cfb88bd86", "node_id": "MDY6Q29tbWl0NzI0NzEyOjU3ZTg1YjVmOTQ3Mzg3MTk1Y2VjMTMzOGZjYjk0YjdjZmI4OGJkODY=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2013-03-14T03:02:48Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2013-03-18T23:59:37Z"}, "message": "core: Add rt::io and start sketching the API", "tree": {"sha": "44f4e6d4698873cfe47a846b2f0955c4fb512cb4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/44f4e6d4698873cfe47a846b2f0955c4fb512cb4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/57e85b5f947387195cec1338fcb94b7cfb88bd86", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/57e85b5f947387195cec1338fcb94b7cfb88bd86", "html_url": "https://github.com/rust-lang/rust/commit/57e85b5f947387195cec1338fcb94b7cfb88bd86", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/57e85b5f947387195cec1338fcb94b7cfb88bd86/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5e6dacf32edc5b8529e6f0aafd17754d0e2e2284", "url": "https://api.github.com/repos/rust-lang/rust/commits/5e6dacf32edc5b8529e6f0aafd17754d0e2e2284", "html_url": "https://github.com/rust-lang/rust/commit/5e6dacf32edc5b8529e6f0aafd17754d0e2e2284"}], "stats": {"total": 94, "additions": 93, "deletions": 1}, "files": [{"sha": "dd2e6a95861bd82f3a851d71f18336ed900889a9", "filename": "Makefile.in", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/57e85b5f947387195cec1338fcb94b7cfb88bd86/Makefile.in", "raw_url": "https://github.com/rust-lang/rust/raw/57e85b5f947387195cec1338fcb94b7cfb88bd86/Makefile.in", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Makefile.in?ref=57e85b5f947387195cec1338fcb94b7cfb88bd86", "patch": "@@ -238,7 +238,7 @@ $(foreach target,$(CFG_TARGET_TRIPLES),\\\n \n CORELIB_CRATE := $(S)src/libcore/core.rc\n CORELIB_INPUTS := $(wildcard $(addprefix $(S)src/libcore/,        \\\n-                                           core.rc *.rs */*.rs))\n+                                           core.rc *.rs */*.rs */*/*rs))\n \n ######################################################################\n # Standard library variables"}, {"sha": "02ad6a00a149d719a225a0ead7c7c3c1033fb37d", "filename": "src/libcore/rt/io/file.rs", "status": "added", "additions": 45, "deletions": 0, "changes": 45, "blob_url": "https://github.com/rust-lang/rust/blob/57e85b5f947387195cec1338fcb94b7cfb88bd86/src%2Flibcore%2Frt%2Fio%2Ffile.rs", "raw_url": "https://github.com/rust-lang/rust/raw/57e85b5f947387195cec1338fcb94b7cfb88bd86/src%2Flibcore%2Frt%2Fio%2Ffile.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Frt%2Fio%2Ffile.rs?ref=57e85b5f947387195cec1338fcb94b7cfb88bd86", "patch": "@@ -0,0 +1,45 @@\n+// Copyright 2013 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+use prelude::*;\n+use super::super::sched::*;\n+use super::super::rtio::*;\n+use super::Stream;\n+\n+pub struct FileStream;\n+\n+pub impl FileStream {\n+    static fn new(path: Path) -> FileStream {\n+        fail!()\n+    }\n+}\n+\n+impl Stream for FileStream {\n+    fn read(&mut self, buf: &mut [u8]) -> uint {\n+        fail!()\n+    }\n+\n+    fn eof(&mut self) -> bool {\n+        fail!()\n+    }\n+\n+    fn write(&mut self, v: &const [u8]) {\n+        fail!()\n+    }\n+}\n+\n+#[test]\n+#[ignore]\n+fn super_simple_smoke_test_lets_go_read_some_files_and_have_a_good_time() {\n+    let message = \"it's alright. have a good time\";\n+    let filename = Path(\"test.txt\");\n+    let mut outstream = FileStream::new(filename);\n+    outstream.write(message.to_bytes());\n+}"}, {"sha": "f82092b829c9b53bf7f4ad0a42038a4e4f75e310", "filename": "src/libcore/rt/io/mod.rs", "status": "added", "additions": 45, "deletions": 0, "changes": 45, "blob_url": "https://github.com/rust-lang/rust/blob/57e85b5f947387195cec1338fcb94b7cfb88bd86/src%2Flibcore%2Frt%2Fio%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/57e85b5f947387195cec1338fcb94b7cfb88bd86/src%2Flibcore%2Frt%2Fio%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Frt%2Fio%2Fmod.rs?ref=57e85b5f947387195cec1338fcb94b7cfb88bd86", "patch": "@@ -0,0 +1,45 @@\n+// Copyright 2013 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+use option::*;\n+use comm::{GenericPort, GenericChan};\n+\n+pub mod file;\n+\n+// FIXME #5370 Strongly want this to be StreamError(&mut Stream)\n+pub struct StreamError;\n+\n+// XXX: Can't put doc comments on macros\n+// Raised by `Stream` instances on error. Returning `true` from the handler\n+// indicates that the `Stream` should continue, `false` that it should fail.\n+condition! {\n+    stream_error: super::StreamError -> bool;\n+}\n+\n+pub trait Stream {\n+    /// Read bytes, up to the length of `buf` and place them in `buf`,\n+    /// returning the number of bytes read or an `IoError`. Reads\n+    /// 0 bytes on EOF.\n+    ///\n+    /// # Failure\n+    ///\n+    /// Raises the `reader_error` condition on error\n+    fn read(&mut self, buf: &mut [u8]) -> uint;\n+\n+    /// Return whether the Reader has reached the end of the stream\n+    fn eof(&mut self) -> bool;\n+\n+    /// Write the given buffer\n+    ///\n+    /// # Failure\n+    ///\n+    /// Raises the `writer_error` condition on error\n+    fn write(&mut self, v: &const [u8]);\n+}"}, {"sha": "c00162287fd33379ae9cee4cdbae61e1e236c9fa", "filename": "src/libcore/rt/mod.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/57e85b5f947387195cec1338fcb94b7cfb88bd86/src%2Flibcore%2Frt%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/57e85b5f947387195cec1338fcb94b7cfb88bd86/src%2Flibcore%2Frt%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Frt%2Fmod.rs?ref=57e85b5f947387195cec1338fcb94b7cfb88bd86", "patch": "@@ -34,6 +34,8 @@ mod rtio;\n pub mod uvll;\n mod uvio;\n mod uv;\n+#[path = \"io/mod.rs\"]\n+mod io;\n // FIXME #5248: The import in `sched` doesn't resolve unless this is pub!\n pub mod thread_local_storage;\n mod work_queue;"}]}