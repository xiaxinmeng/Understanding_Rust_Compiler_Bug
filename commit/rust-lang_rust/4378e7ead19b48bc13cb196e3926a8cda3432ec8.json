{"sha": "4378e7ead19b48bc13cb196e3926a8cda3432ec8", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQzNzhlN2VhZDE5YjQ4YmMxM2NiMTk2ZTM5MjZhOGNkYTM0MzJlYzg=", "commit": {"author": {"name": "Ben Blum", "email": "bblum@andrew.cmu.edu", "date": "2012-07-25T21:37:40Z"}, "committer": {"name": "Ben Blum", "email": "bblum@andrew.cmu.edu", "date": "2012-07-25T22:03:00Z"}, "message": "Fix os::env race (#2870)", "tree": {"sha": "22070c9a6ad419ea6ba255b09fdc6d2f0f722be8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/22070c9a6ad419ea6ba255b09fdc6d2f0f722be8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4378e7ead19b48bc13cb196e3926a8cda3432ec8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4378e7ead19b48bc13cb196e3926a8cda3432ec8", "html_url": "https://github.com/rust-lang/rust/commit/4378e7ead19b48bc13cb196e3926a8cda3432ec8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4378e7ead19b48bc13cb196e3926a8cda3432ec8/comments", "author": {"login": "bblum", "id": 1820515, "node_id": "MDQ6VXNlcjE4MjA1MTU=", "avatar_url": "https://avatars.githubusercontent.com/u/1820515?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bblum", "html_url": "https://github.com/bblum", "followers_url": "https://api.github.com/users/bblum/followers", "following_url": "https://api.github.com/users/bblum/following{/other_user}", "gists_url": "https://api.github.com/users/bblum/gists{/gist_id}", "starred_url": "https://api.github.com/users/bblum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bblum/subscriptions", "organizations_url": "https://api.github.com/users/bblum/orgs", "repos_url": "https://api.github.com/users/bblum/repos", "events_url": "https://api.github.com/users/bblum/events{/privacy}", "received_events_url": "https://api.github.com/users/bblum/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bblum", "id": 1820515, "node_id": "MDQ6VXNlcjE4MjA1MTU=", "avatar_url": "https://avatars.githubusercontent.com/u/1820515?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bblum", "html_url": "https://github.com/bblum", "followers_url": "https://api.github.com/users/bblum/followers", "following_url": "https://api.github.com/users/bblum/following{/other_user}", "gists_url": "https://api.github.com/users/bblum/gists{/gist_id}", "starred_url": "https://api.github.com/users/bblum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bblum/subscriptions", "organizations_url": "https://api.github.com/users/bblum/orgs", "repos_url": "https://api.github.com/users/bblum/repos", "events_url": "https://api.github.com/users/bblum/events{/privacy}", "received_events_url": "https://api.github.com/users/bblum/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "43867bf6f333049ede4611c9eace092bfc2b9696", "url": "https://api.github.com/repos/rust-lang/rust/commits/43867bf6f333049ede4611c9eace092bfc2b9696", "html_url": "https://github.com/rust-lang/rust/commit/43867bf6f333049ede4611c9eace092bfc2b9696"}], "stats": {"total": 42, "additions": 30, "deletions": 12}, "files": [{"sha": "bc36775d0ca06b775b46fc0fc818fd71af28830c", "filename": "src/libcore/os.rs", "status": "modified", "additions": 30, "deletions": 12, "changes": 42, "blob_url": "https://github.com/rust-lang/rust/blob/4378e7ead19b48bc13cb196e3926a8cda3432ec8/src%2Flibcore%2Fos.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4378e7ead19b48bc13cb196e3926a8cda3432ec8/src%2Flibcore%2Fos.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fos.rs?ref=4378e7ead19b48bc13cb196e3926a8cda3432ec8", "patch": "@@ -41,7 +41,6 @@ export walk_dir;\n export as_c_charp, fill_charp_buf;\n \n extern mod rustrt {\n-    fn rust_env_pairs() -> ~[~str];\n     fn rust_getcwd() -> ~str;\n     fn rust_path_is_dir(path: *libc::c_char) -> c_int;\n     fn rust_path_exists(path: *libc::c_char) -> c_int;\n@@ -52,16 +51,6 @@ extern mod rustrt {\n }\n \n \n-fn env() -> ~[(~str,~str)] {\n-    let mut pairs = ~[];\n-    for vec::each(rustrt::rust_env_pairs()) |p| {\n-        let vs = str::splitn_char(p, '=', 1u);\n-        assert vec::len(vs) == 2u;\n-        vec::push(pairs, (vs[0], vs[1]));\n-    }\n-    ret pairs;\n-}\n-\n const tmpbuf_sz : uint = 1000u;\n \n fn as_c_charp<T>(s: ~str, f: fn(*c_char) -> T) -> T {\n@@ -130,19 +119,25 @@ fn setenv(n: ~str, v: ~str) {\n     global_env::setenv(n, v)\n }\n \n+fn env() -> ~[(~str,~str)] {\n+    global_env::env()\n+}\n+\n mod global_env {\n     //! Internal module for serializing access to getenv/setenv\n \n     export getenv;\n     export setenv;\n+    export env;\n \n     extern mod rustrt {\n         fn rust_global_env_chan_ptr() -> *libc::uintptr_t;\n     }\n \n     enum msg {\n         msg_getenv(~str, comm::chan<option<~str>>),\n-        msg_setenv(~str, ~str, comm::chan<()>)\n+        msg_setenv(~str, ~str, comm::chan<()>),\n+        msg_env(comm::chan<~[(~str,~str)]>)\n     }\n \n     fn getenv(n: ~str) -> option<~str> {\n@@ -159,6 +154,13 @@ mod global_env {\n         comm::recv(po)\n     }\n \n+    fn env() -> ~[(~str,~str)] {\n+        let env_ch = get_global_env_chan();\n+        let po = comm::port();\n+        comm::send(env_ch, msg_env(comm::chan(po)));\n+        comm::recv(po)\n+    }\n+\n     fn get_global_env_chan() -> comm::chan<msg> {\n         let global_ptr = rustrt::rust_global_env_chan_ptr();\n         let task_build_fn = || {\n@@ -183,6 +185,9 @@ mod global_env {\n                       either::left(msg_setenv(n, v, resp_ch)) {\n                         comm::send(resp_ch, impl::setenv(n, v))\n                       }\n+                      either::left(msg_env(resp_ch)) {\n+                        comm::send(resp_ch, impl::env())\n+                      }\n                       either::right(_) {\n                         break;\n                       }\n@@ -193,6 +198,19 @@ mod global_env {\n     }\n \n     mod impl {\n+        extern mod rustrt {\n+            fn rust_env_pairs() -> ~[~str];\n+        }\n+\n+        fn env() -> ~[(~str,~str)] {\n+            let mut pairs = ~[];\n+            for vec::each(rustrt::rust_env_pairs()) |p| {\n+                let vs = str::splitn_char(p, '=', 1u);\n+                assert vec::len(vs) == 2u;\n+                vec::push(pairs, (vs[0], vs[1]));\n+            }\n+            ret pairs;\n+        }\n \n         #[cfg(unix)]\n         fn getenv(n: ~str) -> option<~str> {"}]}