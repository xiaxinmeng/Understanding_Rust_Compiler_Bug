{"sha": "eb3f001d3739e5e9f35e1a4b4e600889cf9980c6", "node_id": "C_kwDOAAsO6NoAKGViM2YwMDFkMzczOWU1ZTlmMzVlMWE0YjRlNjAwODg5Y2Y5OTgwYzY", "commit": {"author": {"name": "The 8472", "email": "git@infinite-source.de", "date": "2022-10-23T17:17:41Z"}, "committer": {"name": "The 8472", "email": "git@infinite-source.de", "date": "2022-11-07T20:44:25Z"}, "message": "make the array initialization guard available to other modules", "tree": {"sha": "989ea209d1d82914596f3594669aded0038532ce", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/989ea209d1d82914596f3594669aded0038532ce"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/eb3f001d3739e5e9f35e1a4b4e600889cf9980c6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/eb3f001d3739e5e9f35e1a4b4e600889cf9980c6", "html_url": "https://github.com/rust-lang/rust/commit/eb3f001d3739e5e9f35e1a4b4e600889cf9980c6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/eb3f001d3739e5e9f35e1a4b4e600889cf9980c6/comments", "author": {"login": "the8472", "id": 1065730, "node_id": "MDQ6VXNlcjEwNjU3MzA=", "avatar_url": "https://avatars.githubusercontent.com/u/1065730?v=4", "gravatar_id": "", "url": "https://api.github.com/users/the8472", "html_url": "https://github.com/the8472", "followers_url": "https://api.github.com/users/the8472/followers", "following_url": "https://api.github.com/users/the8472/following{/other_user}", "gists_url": "https://api.github.com/users/the8472/gists{/gist_id}", "starred_url": "https://api.github.com/users/the8472/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/the8472/subscriptions", "organizations_url": "https://api.github.com/users/the8472/orgs", "repos_url": "https://api.github.com/users/the8472/repos", "events_url": "https://api.github.com/users/the8472/events{/privacy}", "received_events_url": "https://api.github.com/users/the8472/received_events", "type": "User", "site_admin": false}, "committer": {"login": "the8472", "id": 1065730, "node_id": "MDQ6VXNlcjEwNjU3MzA=", "avatar_url": "https://avatars.githubusercontent.com/u/1065730?v=4", "gravatar_id": "", "url": "https://api.github.com/users/the8472", "html_url": "https://github.com/the8472", "followers_url": "https://api.github.com/users/the8472/followers", "following_url": "https://api.github.com/users/the8472/following{/other_user}", "gists_url": "https://api.github.com/users/the8472/gists{/gist_id}", "starred_url": "https://api.github.com/users/the8472/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/the8472/subscriptions", "organizations_url": "https://api.github.com/users/the8472/orgs", "repos_url": "https://api.github.com/users/the8472/repos", "events_url": "https://api.github.com/users/the8472/events{/privacy}", "received_events_url": "https://api.github.com/users/the8472/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b00666ed09f186d9891be463355d6f8c984dcd9e", "url": "https://api.github.com/repos/rust-lang/rust/commits/b00666ed09f186d9891be463355d6f8c984dcd9e", "html_url": "https://github.com/rust-lang/rust/commit/b00666ed09f186d9891be463355d6f8c984dcd9e"}], "stats": {"total": 36, "additions": 18, "deletions": 18}, "files": [{"sha": "24e5d0fba21bf898ecfd22965cdc843ad5a4fb66", "filename": "library/core/src/array/mod.rs", "status": "modified", "additions": 18, "deletions": 18, "changes": 36, "blob_url": "https://github.com/rust-lang/rust/blob/eb3f001d3739e5e9f35e1a4b4e600889cf9980c6/library%2Fcore%2Fsrc%2Farray%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/eb3f001d3739e5e9f35e1a4b4e600889cf9980c6/library%2Fcore%2Fsrc%2Farray%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Farray%2Fmod.rs?ref=eb3f001d3739e5e9f35e1a4b4e600889cf9980c6", "patch": "@@ -865,24 +865,6 @@ where\n         return Ok(Try::from_output(unsafe { mem::zeroed() }));\n     }\n \n-    struct Guard<'a, T, const N: usize> {\n-        array_mut: &'a mut [MaybeUninit<T>; N],\n-        initialized: usize,\n-    }\n-\n-    impl<T, const N: usize> Drop for Guard<'_, T, N> {\n-        fn drop(&mut self) {\n-            debug_assert!(self.initialized <= N);\n-\n-            // SAFETY: this slice will contain only initialized objects.\n-            unsafe {\n-                crate::ptr::drop_in_place(MaybeUninit::slice_assume_init_mut(\n-                    &mut self.array_mut.get_unchecked_mut(..self.initialized),\n-                ));\n-            }\n-        }\n-    }\n-\n     let mut array = MaybeUninit::uninit_array::<N>();\n     let mut guard = Guard { array_mut: &mut array, initialized: 0 };\n \n@@ -920,6 +902,24 @@ where\n     Ok(Try::from_output(output))\n }\n \n+pub(crate) struct Guard<'a, T, const N: usize> {\n+    pub array_mut: &'a mut [MaybeUninit<T>; N],\n+    pub initialized: usize,\n+}\n+\n+impl<T, const N: usize> Drop for Guard<'_, T, N> {\n+    fn drop(&mut self) {\n+        debug_assert!(self.initialized <= N);\n+\n+        // SAFETY: this slice will contain only initialized objects.\n+        unsafe {\n+            crate::ptr::drop_in_place(MaybeUninit::slice_assume_init_mut(\n+                &mut self.array_mut.get_unchecked_mut(..self.initialized),\n+            ));\n+        }\n+    }\n+}\n+\n /// Returns the next chunk of `N` items from the iterator or errors with an\n /// iterator over the remainder. Used for `Iterator::next_chunk`.\n #[inline]"}]}