{"sha": "596e10fd3221e50e6cdb182b3ad76cc6d660f170", "node_id": "MDY6Q29tbWl0NzI0NzEyOjU5NmUxMGZkMzIyMWU1MGU2Y2RiMTgyYjNhZDc2Y2M2ZDY2MGYxNzA=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2018-12-04T07:00:19Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2018-12-04T07:00:19Z"}, "message": "Auto merge of #55707 - GuillaumeGomez:file-sidebar, r=QuietMisdreavus\n\nAdd source file sidebar\n\nThis is just a start currently but that gives a good overview of what it'll look like:\n\n<img width=\"1440\" alt=\"screenshot 2018-11-06 at 01 39 15\" src=\"https://user-images.githubusercontent.com/3050060/48035592-05336180-e165-11e8-82e1-5ead0c345eb9.png\">\n\nr? @QuietMisdreavus", "tree": {"sha": "fa59c224d3b1c52eba2964e3ed54fe23b84643f6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fa59c224d3b1c52eba2964e3ed54fe23b84643f6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/596e10fd3221e50e6cdb182b3ad76cc6d660f170", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/596e10fd3221e50e6cdb182b3ad76cc6d660f170", "html_url": "https://github.com/rust-lang/rust/commit/596e10fd3221e50e6cdb182b3ad76cc6d660f170", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/596e10fd3221e50e6cdb182b3ad76cc6d660f170/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "91d5d56c00d8e2926ccf856f14a4e52ef480d039", "url": "https://api.github.com/repos/rust-lang/rust/commits/91d5d56c00d8e2926ccf856f14a4e52ef480d039", "html_url": "https://github.com/rust-lang/rust/commit/91d5d56c00d8e2926ccf856f14a4e52ef480d039"}, {"sha": "82a7b6fde819e7e402ea9be6af14fe2c1575950e", "url": "https://api.github.com/repos/rust-lang/rust/commits/82a7b6fde819e7e402ea9be6af14fe2c1575950e", "html_url": "https://github.com/rust-lang/rust/commit/82a7b6fde819e7e402ea9be6af14fe2c1575950e"}], "stats": {"total": 488, "additions": 425, "deletions": 63}, "files": [{"sha": "5263cfe7b0e4f8089e97151f75808486fe28edc9", "filename": "src/librustdoc/html/layout.rs", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/596e10fd3221e50e6cdb182b3ad76cc6d660f170/src%2Flibrustdoc%2Fhtml%2Flayout.rs", "raw_url": "https://github.com/rust-lang/rust/raw/596e10fd3221e50e6cdb182b3ad76cc6d660f170/src%2Flibrustdoc%2Fhtml%2Flayout.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Flayout.rs?ref=596e10fd3221e50e6cdb182b3ad76cc6d660f170", "patch": "@@ -33,7 +33,7 @@ pub struct Page<'a> {\n \n pub fn render<T: fmt::Display, S: fmt::Display>(\n     dst: &mut dyn io::Write, layout: &Layout, page: &Page, sidebar: &S, t: &T,\n-    css_file_extension: bool, themes: &[PathBuf])\n+    css_file_extension: bool, themes: &[PathBuf], extra_scripts: &[&str])\n     -> io::Result<()>\n {\n     write!(dst,\n@@ -149,6 +149,7 @@ pub fn render<T: fmt::Display, S: fmt::Display>(\n     </script>\\\n     <script src=\\\"{root_path}aliases.js\\\"></script>\\\n     <script src=\\\"{root_path}main{suffix}.js\\\"></script>\\\n+    {extra_scripts}\\\n     <script defer src=\\\"{root_path}search-index.js\\\"></script>\\\n </body>\\\n </html>\",\n@@ -192,6 +193,11 @@ pub fn render<T: fmt::Display, S: fmt::Display>(\n                                     page.resource_suffix))\n                    .collect::<String>(),\n     suffix=page.resource_suffix,\n+    extra_scripts=extra_scripts.iter().map(|e| {\n+        format!(\"<script src=\\\"{root_path}{extra_script}.js\\\"></script>\",\n+                root_path=page.root_path,\n+                extra_script=e)\n+    }).collect::<String>(),\n     )\n }\n "}, {"sha": "2c4ddf38e986871ec521807eb79fdade5950ed34", "filename": "src/librustdoc/html/render.rs", "status": "modified", "additions": 89, "deletions": 5, "changes": 94, "blob_url": "https://github.com/rust-lang/rust/blob/596e10fd3221e50e6cdb182b3ad76cc6d660f170/src%2Flibrustdoc%2Fhtml%2Frender.rs", "raw_url": "https://github.com/rust-lang/rust/raw/596e10fd3221e50e6cdb182b3ad76cc6d660f170/src%2Flibrustdoc%2Fhtml%2Frender.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Frender.rs?ref=596e10fd3221e50e6cdb182b3ad76cc6d660f170", "patch": "@@ -859,6 +859,11 @@ themePicker.onblur = handleThemeButtonsBlur;\n     write_minify(cx.dst.join(&format!(\"settings{}.js\", cx.shared.resource_suffix)),\n                  static_files::SETTINGS_JS,\n                  options.enable_minification)?;\n+    if cx.shared.include_sources {\n+        write_minify(cx.dst.join(&format!(\"source-script{}.js\", cx.shared.resource_suffix)),\n+                     static_files::sidebar::SOURCE_SCRIPT,\n+                     options.enable_minification)?;\n+    }\n \n     {\n         let mut data = format!(\"var resourcesSuffix = \\\"{}\\\";\\n\",\n@@ -969,10 +974,88 @@ themePicker.onblur = handleThemeButtonsBlur;\n         }\n     }\n \n+    use std::ffi::OsString;\n+\n+    #[derive(Debug)]\n+    struct Hierarchy {\n+        elem: OsString,\n+        children: FxHashMap<OsString, Hierarchy>,\n+        elems: FxHashSet<OsString>,\n+    }\n+\n+    impl Hierarchy {\n+        fn new(elem: OsString) -> Hierarchy {\n+            Hierarchy {\n+                elem,\n+                children: FxHashMap::default(),\n+                elems: FxHashSet::default(),\n+            }\n+        }\n+\n+        fn to_json_string(&self) -> String {\n+            let mut subs: Vec<&Hierarchy> = self.children.values().collect();\n+            subs.sort_unstable_by(|a, b| a.elem.cmp(&b.elem));\n+            let mut files = self.elems.iter()\n+                                      .map(|s| format!(\"\\\"{}\\\"\",\n+                                                       s.to_str()\n+                                                        .expect(\"invalid osstring conversion\")))\n+                                      .collect::<Vec<_>>();\n+            files.sort_unstable_by(|a, b| a.cmp(b));\n+            // FIXME(imperio): we could avoid to generate \"dirs\" and \"files\" if they're empty.\n+            format!(\"{{\\\"name\\\":\\\"{name}\\\",\\\"dirs\\\":[{subs}],\\\"files\\\":[{files}]}}\",\n+                    name=self.elem.to_str().expect(\"invalid osstring conversion\"),\n+                    subs=subs.iter().map(|s| s.to_json_string()).collect::<Vec<_>>().join(\",\"),\n+                    files=files.join(\",\"))\n+        }\n+    }\n+\n+    if cx.shared.include_sources {\n+        use std::path::Component;\n+\n+        let mut hierarchy = Hierarchy::new(OsString::new());\n+        for source in cx.shared.local_sources.iter()\n+                                             .filter_map(|p| p.0.strip_prefix(&cx.shared.src_root)\n+                                                                .ok()) {\n+            let mut h = &mut hierarchy;\n+            let mut elems = source.components()\n+                                  .filter_map(|s| {\n+                                      match s {\n+                                          Component::Normal(s) => Some(s.to_owned()),\n+                                          _ => None,\n+                                      }\n+                                  })\n+                                  .peekable();\n+            loop {\n+                let cur_elem = elems.next().expect(\"empty file path\");\n+                if elems.peek().is_none() {\n+                    h.elems.insert(cur_elem);\n+                    break;\n+                } else {\n+                    let e = cur_elem.clone();\n+                    h.children.entry(cur_elem.clone()).or_insert_with(|| Hierarchy::new(e));\n+                    h = h.children.get_mut(&cur_elem).expect(\"not found child\");\n+                }\n+            }\n+        }\n+\n+        let dst = cx.dst.join(\"source-files.js\");\n+        let (mut all_sources, _krates) = try_err!(collect(&dst, &krate.name, \"sourcesIndex\"), &dst);\n+        all_sources.push(format!(\"sourcesIndex['{}'] = {};\",\n+                                 &krate.name,\n+                                 hierarchy.to_json_string()));\n+        all_sources.sort();\n+        let mut w = try_err!(File::create(&dst), &dst);\n+        try_err!(writeln!(&mut w,\n+                          \"var N = null;var sourcesIndex = {{}};\\n{}\",\n+                          all_sources.join(\"\\n\")),\n+                 &dst);\n+    }\n+\n     // Update the search index\n     let dst = cx.dst.join(\"search-index.js\");\n     let (mut all_indexes, mut krates) = try_err!(collect(&dst, &krate.name, \"searchIndex\"), &dst);\n     all_indexes.push(search_index);\n+\n     // Sort the indexes by crate so the file will be generated identically even\n     // with rustdoc running in parallel.\n     all_indexes.sort();\n@@ -1020,7 +1103,7 @@ themePicker.onblur = handleThemeButtonsBlur;\n             try_err!(layout::render(&mut w, &cx.shared.layout,\n                                     &page, &(\"\"), &content,\n                                     cx.shared.css_file_extension.is_some(),\n-                                    &cx.shared.themes), &dst);\n+                                    &cx.shared.themes, &[]), &dst);\n             try_err!(w.flush(), &dst);\n         }\n     }\n@@ -1292,7 +1375,8 @@ impl<'a> SourceCollector<'a> {\n         layout::render(&mut w, &self.scx.layout,\n                        &page, &(\"\"), &Source(contents),\n                        self.scx.css_file_extension.is_some(),\n-                       &self.scx.themes)?;\n+                       &self.scx.themes, &[\"source-files\",\n+                                           &format!(\"source-script{}\", page.resource_suffix)])?;\n         w.flush()?;\n         self.scx.local_sources.insert(p.clone(), href);\n         Ok(())\n@@ -1890,7 +1974,7 @@ impl Context {\n         try_err!(layout::render(&mut w, &self.shared.layout,\n                                 &page, &sidebar, &all,\n                                 self.shared.css_file_extension.is_some(),\n-                                &self.shared.themes),\n+                                &self.shared.themes, &[]),\n                  &final_file);\n \n         // Generating settings page.\n@@ -1910,7 +1994,7 @@ impl Context {\n         try_err!(layout::render(&mut w, &layout,\n                                 &page, &sidebar, &settings,\n                                 self.shared.css_file_extension.is_some(),\n-                                &themes),\n+                                &themes, &[]),\n                  &settings_file);\n \n         Ok(())\n@@ -1968,7 +2052,7 @@ impl Context {\n                            &Sidebar{ cx: self, item: it },\n                            &Item{ cx: self, item: it },\n                            self.shared.css_file_extension.is_some(),\n-                           &self.shared.themes)?;\n+                           &self.shared.themes, &[])?;\n         } else {\n             let mut url = self.root_path();\n             if let Some(&(ref names, ty)) = cache().paths.get(&it.def_id) {"}, {"sha": "781f99cd6932f6ca4f92cbd964b9c237b161f4a4", "filename": "src/librustdoc/html/static/main.js", "status": "modified", "additions": 13, "deletions": 53, "changes": 66, "blob_url": "https://github.com/rust-lang/rust/blob/596e10fd3221e50e6cdb182b3ad76cc6d660f170/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fmain.js", "raw_url": "https://github.com/rust-lang/rust/raw/596e10fd3221e50e6cdb182b3ad76cc6d660f170/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fmain.js", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fmain.js?ref=596e10fd3221e50e6cdb182b3ad76cc6d660f170", "patch": "@@ -13,6 +13,19 @@\n /*jslint browser: true, es5: true */\n /*globals $: true, rootPath: true */\n \n+if (!String.prototype.startsWith) {\n+    String.prototype.startsWith = function(searchString, position) {\n+        position = position || 0;\n+        return this.indexOf(searchString, position) === position;\n+    };\n+}\n+if (!String.prototype.endsWith) {\n+    String.prototype.endsWith = function(suffix, length) {\n+        var l = length || this.length;\n+        return this.indexOf(suffix, l - suffix.length) !== -1;\n+    };\n+}\n+\n (function() {\n     \"use strict\";\n \n@@ -57,19 +70,6 @@\n \n     var titleBeforeSearch = document.title;\n \n-    if (!String.prototype.startsWith) {\n-        String.prototype.startsWith = function(searchString, position) {\n-            position = position || 0;\n-            return this.indexOf(searchString, position) === position;\n-        };\n-    }\n-    if (!String.prototype.endsWith) {\n-        String.prototype.endsWith = function(suffix, length) {\n-            var l = length || this.length;\n-            return this.indexOf(suffix, l - suffix.length) !== -1;\n-        };\n-    }\n-\n     function getPageId() {\n         var id = document.location.href.split('#')[1];\n         if (id) {\n@@ -78,46 +78,6 @@\n         return null;\n     }\n \n-    function hasClass(elem, className) {\n-        if (elem && className && elem.className) {\n-            var elemClass = elem.className;\n-            var start = elemClass.indexOf(className);\n-            if (start === -1) {\n-                return false;\n-            } else if (elemClass.length === className.length) {\n-                return true;\n-            } else {\n-                if (start > 0 && elemClass[start - 1] !== ' ') {\n-                    return false;\n-                }\n-                var end = start + className.length;\n-                return !(end < elemClass.length && elemClass[end] !== ' ');\n-            }\n-        }\n-        return false;\n-    }\n-\n-    function addClass(elem, className) {\n-        if (elem && className && !hasClass(elem, className)) {\n-            if (elem.className && elem.className.length > 0) {\n-                elem.className += ' ' + className;\n-            } else {\n-                elem.className = className;\n-            }\n-        }\n-    }\n-\n-    function removeClass(elem, className) {\n-        if (elem && className && elem.className) {\n-            elem.className = (\" \" + elem.className + \" \").replace(\" \" + className + \" \", \" \")\n-                                                         .trim();\n-        }\n-    }\n-\n-    function isHidden(elem) {\n-        return (elem.offsetParent === null)\n-    }\n-\n     function showSidebar() {\n         var elems = document.getElementsByClassName(\"sidebar-elems\")[0];\n         if (elems) {"}, {"sha": "b6242457ae2b8cabf72dafe64035a4a12ba740ad", "filename": "src/librustdoc/html/static/rustdoc.css", "status": "modified", "additions": 70, "deletions": 4, "changes": 74, "blob_url": "https://github.com/rust-lang/rust/blob/596e10fd3221e50e6cdb182b3ad76cc6d660f170/src%2Flibrustdoc%2Fhtml%2Fstatic%2Frustdoc.css", "raw_url": "https://github.com/rust-lang/rust/raw/596e10fd3221e50e6cdb182b3ad76cc6d660f170/src%2Flibrustdoc%2Fhtml%2Fstatic%2Frustdoc.css", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic%2Frustdoc.css?ref=596e10fd3221e50e6cdb182b3ad76cc6d660f170", "patch": "@@ -113,7 +113,8 @@ h3.impl, h3.method, h3.type {\n \n h1, h2, h3, h4,\n .sidebar, a.source, .search-input, .content table :not(code)>a,\n-.collapse-toggle, div.item-list .out-of-band {\n+.collapse-toggle, div.item-list .out-of-band,\n+#source-sidebar, #sidebar-toggle {\n \tfont-family: \"Fira Sans\", sans-serif;\n }\n \n@@ -668,9 +669,9 @@ a {\n \tpadding-right: 10px;\n }\n .content .search-results td:first-child a:after {\n-    clear: both;\n-    content: \"\";\n-    display: block;\n+\tclear: both;\n+\tcontent: \"\";\n+\tdisplay: block;\n }\n .content .search-results td:first-child a span {\n \tfloat: left;\n@@ -1459,3 +1460,68 @@ kbd {\n .non-exhaustive {\n \tmargin-bottom: 1em;\n }\n+\n+#sidebar-toggle {\n+\tposition: fixed;\n+\ttop: 30px;\n+\tleft: 300px;\n+\tz-index: 10;\n+\tpadding: 3px;\n+\tborder-top-right-radius: 3px;\n+\tborder-bottom-right-radius: 3px;\n+\tcursor: pointer;\n+\tfont-weight: bold;\n+\ttransition: left .5s;\n+\tfont-size: 1.2em;\n+\tborder: 1px solid;\n+\tborder-left: 0;\n+}\n+#source-sidebar {\n+\tposition: fixed;\n+\ttop: 0;\n+\tbottom: 0;\n+\tleft: 0;\n+\twidth: 300px;\n+\tz-index: 1;\n+\toverflow: auto;\n+\ttransition: left .5s;\n+\tborder-right: 1px solid;\n+}\n+#source-sidebar > .title {\n+\tfont-size: 1.5em;\n+\ttext-align: center;\n+\tborder-bottom: 1px solid;\n+\tmargin-bottom: 6px;\n+}\n+\n+div.children {\n+\tpadding-left: 27px;\n+\tdisplay: none;\n+}\n+div.name {\n+\tcursor: pointer;\n+\tposition: relative;\n+\tmargin-left: 16px;\n+}\n+div.files > a {\n+\tdisplay: block;\n+\tpadding: 0 3px;\n+}\n+div.files > a:hover, div.name:hover {\n+\tbackground-color: #a14b4b;\n+}\n+div.name.expand + .children {\n+\tdisplay: block;\n+}\n+div.name::before {\n+\tcontent: \"\\25B6\";\n+\tpadding-left: 4px;\n+\tfont-size: 0.7em;\n+\tposition: absolute;\n+\tleft: -16px;\n+\ttop: 4px;\n+}\n+div.name.expand::before {\n+\ttransform: rotate(90deg);\n+\tleft: -14px;\n+}"}, {"sha": "1db8218dae6f29d044e68fb1d67e0f72da87b895", "filename": "src/librustdoc/html/static/source-script.js", "status": "added", "additions": 147, "deletions": 0, "changes": 147, "blob_url": "https://github.com/rust-lang/rust/blob/596e10fd3221e50e6cdb182b3ad76cc6d660f170/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fsource-script.js", "raw_url": "https://github.com/rust-lang/rust/raw/596e10fd3221e50e6cdb182b3ad76cc6d660f170/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fsource-script.js", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fsource-script.js?ref=596e10fd3221e50e6cdb182b3ad76cc6d660f170", "patch": "@@ -0,0 +1,147 @@\n+/*!\n+ * Copyright 2018 The Rust Project Developers. See the COPYRIGHT\n+ * file at the top-level directory of this distribution and at\n+ * http://rust-lang.org/COPYRIGHT.\n+ *\n+ * Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+ * http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+ * <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+ * option. This file may not be copied, modified, or distributed\n+ * except according to those terms.\n+ */\n+\n+function getCurrentFilePath() {\n+    var parts = window.location.pathname.split(\"/\");\n+    var rootPathParts = window.rootPath.split(\"/\");\n+\n+    for (var i = 0; i < rootPathParts.length; ++i) {\n+        if (rootPathParts[i] === \"..\") {\n+            parts.pop();\n+        }\n+    }\n+    var file = window.location.pathname.substring(parts.join(\"/\").length);\n+    if (file.startsWith(\"/\")) {\n+        file = file.substring(1);\n+    }\n+    return file.substring(0, file.length - 5);\n+}\n+\n+function createDirEntry(elem, parent, fullPath, currentFile, hasFoundFile) {\n+    var name = document.createElement(\"div\");\n+    name.className = \"name\";\n+\n+    fullPath += elem[\"name\"] + \"/\";\n+\n+    name.onclick = function() {\n+        if (hasClass(this, \"expand\")) {\n+            removeClass(this, \"expand\");\n+        } else {\n+            addClass(this, \"expand\");\n+        }\n+    };\n+    name.innerText = elem[\"name\"];\n+\n+    var children = document.createElement(\"div\");\n+    children.className = \"children\";\n+    var folders = document.createElement(\"div\");\n+    folders.className = \"folders\";\n+    for (var i = 0; i < elem.dirs.length; ++i) {\n+        if (createDirEntry(elem.dirs[i], folders, fullPath, currentFile,\n+                           hasFoundFile) === true) {\n+            addClass(name, \"expand\");\n+            hasFoundFile = true;\n+        }\n+    }\n+    children.appendChild(folders);\n+\n+    var files = document.createElement(\"div\");\n+    files.className = \"files\";\n+    for (i = 0; i < elem.files.length; ++i) {\n+        var file = document.createElement(\"a\");\n+        file.innerText = elem.files[i];\n+        file.href = window.rootPath + \"src/\" + fullPath + elem.files[i] + \".html\";\n+        if (hasFoundFile === false &&\n+                currentFile === fullPath + elem.files[i]) {\n+            file.className = \"selected\";\n+            addClass(name, \"expand\");\n+            hasFoundFile = true;\n+        }\n+        files.appendChild(file);\n+    }\n+    search.fullPath = fullPath;\n+    children.appendChild(files);\n+    parent.appendChild(name);\n+    parent.appendChild(children);\n+    return hasFoundFile === true && currentFile.startsWith(fullPath);\n+}\n+\n+function toggleSidebar() {\n+    var sidebar = document.getElementById(\"source-sidebar\");\n+    var child = this.children[0].children[0];\n+    if (child.innerText === \">\") {\n+        sidebar.style.left = \"\";\n+        this.style.left = \"\";\n+        child.innerText = \"<\";\n+        updateLocalStorage(\"rustdoc-source-sidebar-show\", \"true\");\n+    } else {\n+        sidebar.style.left = \"-300px\";\n+        this.style.left = \"0\";\n+        child.innerText = \">\";\n+        updateLocalStorage(\"rustdoc-source-sidebar-show\", \"false\");\n+    }\n+}\n+\n+function createSidebarToggle() {\n+    var sidebarToggle = document.createElement(\"div\");\n+    sidebarToggle.id = \"sidebar-toggle\";\n+    sidebarToggle.onclick = toggleSidebar;\n+\n+    var inner1 = document.createElement(\"div\");\n+    inner1.style.position = \"relative\";\n+\n+    var inner2 = document.createElement(\"div\");\n+    inner2.style.marginTop = \"-2px\";\n+    if (getCurrentValue(\"rustdoc-source-sidebar-show\") === \"true\") {\n+        inner2.innerText = \"<\";\n+    } else {\n+        inner2.innerText = \">\";\n+        sidebarToggle.style.left = \"0\";\n+    }\n+\n+    inner1.appendChild(inner2);\n+    sidebarToggle.appendChild(inner1);\n+    return sidebarToggle;\n+}\n+\n+function createSourceSidebar() {\n+    if (window.rootPath.endsWith(\"/\") === false) {\n+        window.rootPath += \"/\";\n+    }\n+    var main = document.getElementById(\"main\");\n+\n+    var sidebarToggle = createSidebarToggle();\n+    main.insertBefore(sidebarToggle, main.firstChild);\n+\n+    var sidebar = document.createElement(\"div\");\n+    sidebar.id = \"source-sidebar\";\n+    if (getCurrentValue(\"rustdoc-source-sidebar-show\") !== \"true\") {\n+        sidebar.style.left = \"-300px\";\n+    }\n+\n+    var currentFile = getCurrentFilePath();\n+    var hasFoundFile = false;\n+\n+    var title = document.createElement(\"div\");\n+    title.className = \"title\";\n+    title.innerText = \"Files\";\n+    sidebar.appendChild(title);\n+    Object.keys(sourcesIndex).forEach(function(key) {\n+        sourcesIndex[key].name = key;\n+        hasFoundFile = createDirEntry(sourcesIndex[key], sidebar, \"\",\n+                                      currentFile, hasFoundFile);\n+    });\n+\n+    main.insertBefore(sidebar, main.firstChild);\n+}\n+\n+createSourceSidebar();"}, {"sha": "150001a7514459e4892c6b5966c892107287215f", "filename": "src/librustdoc/html/static/storage.js", "status": "modified", "additions": 40, "deletions": 0, "changes": 40, "blob_url": "https://github.com/rust-lang/rust/blob/596e10fd3221e50e6cdb182b3ad76cc6d660f170/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fstorage.js", "raw_url": "https://github.com/rust-lang/rust/raw/596e10fd3221e50e6cdb182b3ad76cc6d660f170/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fstorage.js", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fstorage.js?ref=596e10fd3221e50e6cdb182b3ad76cc6d660f170", "patch": "@@ -15,6 +15,46 @@ var mainTheme = document.getElementById(\"mainThemeStyle\");\n \n var savedHref = [];\n \n+function hasClass(elem, className) {\n+    if (elem && className && elem.className) {\n+        var elemClass = elem.className;\n+        var start = elemClass.indexOf(className);\n+        if (start === -1) {\n+            return false;\n+        } else if (elemClass.length === className.length) {\n+            return true;\n+        } else {\n+            if (start > 0 && elemClass[start - 1] !== ' ') {\n+                return false;\n+            }\n+            var end = start + className.length;\n+            return !(end < elemClass.length && elemClass[end] !== ' ');\n+        }\n+    }\n+    return false;\n+}\n+\n+function addClass(elem, className) {\n+    if (elem && className && !hasClass(elem, className)) {\n+        if (elem.className && elem.className.length > 0) {\n+            elem.className += ' ' + className;\n+        } else {\n+            elem.className = className;\n+        }\n+    }\n+}\n+\n+function removeClass(elem, className) {\n+    if (elem && className && elem.className) {\n+        elem.className = (\" \" + elem.className + \" \").replace(\" \" + className + \" \", \" \")\n+                                                     .trim();\n+    }\n+}\n+\n+function isHidden(elem) {\n+    return (elem.offsetParent === null)\n+}\n+\n function onEach(arr, func, reversed) {\n     if (arr && arr.length > 0 && func) {\n         if (reversed !== true) {"}, {"sha": "acf9a8cca6447e919d06645dead24992d35e71a7", "filename": "src/librustdoc/html/static/themes/dark.css", "status": "modified", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/596e10fd3221e50e6cdb182b3ad76cc6d660f170/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fthemes%2Fdark.css", "raw_url": "https://github.com/rust-lang/rust/raw/596e10fd3221e50e6cdb182b3ad76cc6d660f170/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fthemes%2Fdark.css", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fthemes%2Fdark.css?ref=596e10fd3221e50e6cdb182b3ad76cc6d660f170", "patch": "@@ -416,3 +416,22 @@ kbd {\n .impl-items code {\n \tbackground-color: rgba(0, 0, 0, 0);\n }\n+\n+#sidebar-toggle {\n+\tbackground-color: #565656;\n+}\n+#sidebar-toggle:hover {\n+\tbackground-color: #676767;\n+}\n+#source-sidebar {\n+\tbackground-color: #565656;\n+}\n+#source-sidebar > .title {\n+\tborder-bottom-color: #ccc;\n+}\n+div.files > a:hover, div.name:hover {\n+\tbackground-color: #444;\n+}\n+div.files > .selected {\n+\tbackground-color: #333;\n+}"}, {"sha": "d98f1718a6ab74c94c8083cd48e1e66c66bf49ac", "filename": "src/librustdoc/html/static/themes/light.css", "status": "modified", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/596e10fd3221e50e6cdb182b3ad76cc6d660f170/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fthemes%2Flight.css", "raw_url": "https://github.com/rust-lang/rust/raw/596e10fd3221e50e6cdb182b3ad76cc6d660f170/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fthemes%2Flight.css", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fthemes%2Flight.css?ref=596e10fd3221e50e6cdb182b3ad76cc6d660f170", "patch": "@@ -410,3 +410,22 @@ kbd {\n .impl-items code {\n \tbackground-color: rgba(0, 0, 0, 0);\n }\n+\n+#sidebar-toggle {\n+\tbackground-color: #F1F1F1;\n+}\n+#sidebar-toggle:hover {\n+\tbackground-color: #E0E0E0;\n+}\n+#source-sidebar {\n+\tbackground-color: #F1F1F1;\n+}\n+#source-sidebar > .title {\n+\tborder-bottom-color: #ccc;\n+}\n+div.files > a:hover, div.name:hover {\n+\tbackground-color: #E0E0E0;\n+}\n+div.files > .selected {\n+\tbackground-color: #fff;\n+}"}, {"sha": "ee29f15d686c1acf57a9c9f749734a73aef73967", "filename": "src/librustdoc/html/static_files.rs", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/596e10fd3221e50e6cdb182b3ad76cc6d660f170/src%2Flibrustdoc%2Fhtml%2Fstatic_files.rs", "raw_url": "https://github.com/rust-lang/rust/raw/596e10fd3221e50e6cdb182b3ad76cc6d660f170/src%2Flibrustdoc%2Fhtml%2Fstatic_files.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic_files.rs?ref=596e10fd3221e50e6cdb182b3ad76cc6d660f170", "patch": "@@ -109,3 +109,9 @@ pub mod source_code_pro {\n     /// The file `SourceCodePro-LICENSE.txt`, the license text of the Source Code Pro font.\n     pub static LICENSE: &'static [u8] = include_bytes!(\"static/SourceCodePro-LICENSE.txt\");\n }\n+\n+/// Files related to the sidebar in rustdoc sources.\n+pub mod sidebar {\n+    /// File script to handle sidebar.\n+    pub static SOURCE_SCRIPT: &'static str = include_str!(\"static/source-script.js\");\n+}"}, {"sha": "077817bcf5b466742d8b7674169ee9e9fb84ec77", "filename": "src/test/rustdoc/source-file.rs", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/596e10fd3221e50e6cdb182b3ad76cc6d660f170/src%2Ftest%2Frustdoc%2Fsource-file.rs", "raw_url": "https://github.com/rust-lang/rust/raw/596e10fd3221e50e6cdb182b3ad76cc6d660f170/src%2Ftest%2Frustdoc%2Fsource-file.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fsource-file.rs?ref=596e10fd3221e50e6cdb182b3ad76cc6d660f170", "patch": "@@ -0,0 +1,15 @@\n+// Copyright 2018 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#![crate_name = \"foo\"]\n+\n+// @has source-files.js source-file.rs\n+\n+pub struct Foo;"}]}