{"sha": "81933edf92afda59ea41ec3692ab43759285b731", "node_id": "MDY6Q29tbWl0NzI0NzEyOjgxOTMzZWRmOTJhZmRhNTllYTQxZWMzNjkyYWI0Mzc1OTI4NWI3MzE=", "commit": {"author": {"name": "blake2-ppc", "email": "blake2-ppc", "date": "2013-07-06T03:42:45Z"}, "committer": {"name": "blake2-ppc", "email": "blake2-ppc", "date": "2013-07-06T03:42:45Z"}, "message": "deque: Add tests and bench tests\n\nAdd a test that excercises deque growing.\n\nAdd bench tests for grow, new, add_back, add_front, to expose how slow\nthese functions are.", "tree": {"sha": "0b7fef59113673c8555630c2874c63d6e0b7adac", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0b7fef59113673c8555630c2874c63d6e0b7adac"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/81933edf92afda59ea41ec3692ab43759285b731", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/81933edf92afda59ea41ec3692ab43759285b731", "html_url": "https://github.com/rust-lang/rust/commit/81933edf92afda59ea41ec3692ab43759285b731", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/81933edf92afda59ea41ec3692ab43759285b731/comments", "author": null, "committer": null, "parents": [{"sha": "5a37cf8a31c4d4eeb1805eb3e90894b8e67d16c8", "url": "https://api.github.com/repos/rust-lang/rust/commits/5a37cf8a31c4d4eeb1805eb3e90894b8e67d16c8", "html_url": "https://github.com/rust-lang/rust/commit/5a37cf8a31c4d4eeb1805eb3e90894b8e67d16c8"}], "stats": {"total": 56, "additions": 56, "deletions": 0}, "files": [{"sha": "a07d9e6fd22a4147b15c41becf1a7aabb963e5b4", "filename": "src/libextra/deque.rs", "status": "modified", "additions": 56, "deletions": 0, "changes": 56, "blob_url": "https://github.com/rust-lang/rust/blob/81933edf92afda59ea41ec3692ab43759285b731/src%2Flibextra%2Fdeque.rs", "raw_url": "https://github.com/rust-lang/rust/raw/81933edf92afda59ea41ec3692ab43759285b731/src%2Flibextra%2Fdeque.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibextra%2Fdeque.rs?ref=81933edf92afda59ea41ec3692ab43759285b731", "patch": "@@ -256,6 +256,7 @@ mod tests {\n     use std::cmp::Eq;\n     use std::kinds::Copy;\n     use std::int;\n+    use extra::test;\n \n     #[test]\n     fn test_simple() {\n@@ -369,6 +370,61 @@ mod tests {\n         assert_eq!(copy *deq.get(3), copy d);\n     }\n \n+    #[test]\n+    fn test_add_front_grow() {\n+        let mut deq = Deque::new();\n+        for int::range(0, 66) |i| {\n+            deq.add_front(i);\n+        }\n+        assert_eq!(deq.len(), 66);\n+\n+        for int::range(0, 66) |i| {\n+            assert_eq!(*deq.get(i), 65 - i);\n+        }\n+\n+        let mut deq = Deque::new();\n+        for int::range(0, 66) |i| {\n+            deq.add_back(i);\n+        }\n+\n+        for int::range(0, 66) |i| {\n+            assert_eq!(*deq.get(i), i);\n+        }\n+    }\n+\n+    #[bench]\n+    fn bench_new(b: &mut test::BenchHarness) {\n+        do b.iter {\n+            let _ = Deque::new::<u64>();\n+        }\n+    }\n+\n+    #[bench]\n+    fn bench_add_back(b: &mut test::BenchHarness) {\n+        let mut deq = Deque::new();\n+        do b.iter {\n+            deq.add_back(0);\n+        }\n+    }\n+\n+    #[bench]\n+    fn bench_add_front(b: &mut test::BenchHarness) {\n+        let mut deq = Deque::new();\n+        do b.iter {\n+            deq.add_front(0);\n+        }\n+    }\n+\n+    #[bench]\n+    fn bench_grow(b: &mut test::BenchHarness) {\n+        let mut deq = Deque::new();\n+        do b.iter {\n+            for 65.times {\n+                deq.add_front(1);\n+            }\n+        }\n+    }\n+\n     #[deriving(Eq)]\n     enum Taggy { One(int), Two(int, int), Three(int, int, int), }\n "}]}