{"sha": "f0d9d55138fd08f7f4af1c6c311694452369c111", "node_id": "MDY6Q29tbWl0NzI0NzEyOmYwZDlkNTUxMzhmZDA4ZjdmNGFmMWM2YzMxMTY5NDQ1MjM2OWMxMTE=", "commit": {"author": {"name": "Santiago Pastorino", "email": "spastorino@gmail.com", "date": "2019-06-20T01:02:53Z"}, "committer": {"name": "Santiago Pastorino", "email": "spastorino@gmail.com", "date": "2019-06-20T12:25:58Z"}, "message": "Implement Debug for PlaceBase", "tree": {"sha": "bcd65305055cc5fdb33ab8e35f8deeeb160fce0d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bcd65305055cc5fdb33ab8e35f8deeeb160fce0d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f0d9d55138fd08f7f4af1c6c311694452369c111", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f0d9d55138fd08f7f4af1c6c311694452369c111", "html_url": "https://github.com/rust-lang/rust/commit/f0d9d55138fd08f7f4af1c6c311694452369c111", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f0d9d55138fd08f7f4af1c6c311694452369c111/comments", "author": {"login": "spastorino", "id": 52642, "node_id": "MDQ6VXNlcjUyNjQy", "avatar_url": "https://avatars.githubusercontent.com/u/52642?v=4", "gravatar_id": "", "url": "https://api.github.com/users/spastorino", "html_url": "https://github.com/spastorino", "followers_url": "https://api.github.com/users/spastorino/followers", "following_url": "https://api.github.com/users/spastorino/following{/other_user}", "gists_url": "https://api.github.com/users/spastorino/gists{/gist_id}", "starred_url": "https://api.github.com/users/spastorino/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/spastorino/subscriptions", "organizations_url": "https://api.github.com/users/spastorino/orgs", "repos_url": "https://api.github.com/users/spastorino/repos", "events_url": "https://api.github.com/users/spastorino/events{/privacy}", "received_events_url": "https://api.github.com/users/spastorino/received_events", "type": "User", "site_admin": false}, "committer": {"login": "spastorino", "id": 52642, "node_id": "MDQ6VXNlcjUyNjQy", "avatar_url": "https://avatars.githubusercontent.com/u/52642?v=4", "gravatar_id": "", "url": "https://api.github.com/users/spastorino", "html_url": "https://github.com/spastorino", "followers_url": "https://api.github.com/users/spastorino/followers", "following_url": "https://api.github.com/users/spastorino/following{/other_user}", "gists_url": "https://api.github.com/users/spastorino/gists{/gist_id}", "starred_url": "https://api.github.com/users/spastorino/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/spastorino/subscriptions", "organizations_url": "https://api.github.com/users/spastorino/orgs", "repos_url": "https://api.github.com/users/spastorino/repos", "events_url": "https://api.github.com/users/spastorino/events{/privacy}", "received_events_url": "https://api.github.com/users/spastorino/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2fe7b3383c1e0a8b68f8a809be3ac21006998929", "url": "https://api.github.com/repos/rust-lang/rust/commits/2fe7b3383c1e0a8b68f8a809be3ac21006998929", "html_url": "https://github.com/rust-lang/rust/commit/2fe7b3383c1e0a8b68f8a809be3ac21006998929"}], "stats": {"total": 48, "additions": 25, "deletions": 23}, "files": [{"sha": "6e09cc045282806cdf89801bd051f3180fda47ae", "filename": "src/librustc/mir/mod.rs", "status": "modified", "additions": 25, "deletions": 23, "changes": 48, "blob_url": "https://github.com/rust-lang/rust/blob/f0d9d55138fd08f7f4af1c6c311694452369c111/src%2Flibrustc%2Fmir%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f0d9d55138fd08f7f4af1c6c311694452369c111/src%2Flibrustc%2Fmir%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmir%2Fmod.rs?ref=f0d9d55138fd08f7f4af1c6c311694452369c111", "patch": "@@ -2184,29 +2184,7 @@ impl<'tcx> Debug for Place<'tcx> {\n         });\n \n         self.iterate(|place_base, place_projections| {\n-            match place_base {\n-                PlaceBase::Local(id) => {\n-                    write!(fmt, \"{:?}\", id)?;\n-                }\n-                PlaceBase::Static(box self::Static { ty, kind: StaticKind::Static(def_id) }) => {\n-                    write!(\n-                        fmt,\n-                        \"({}: {:?})\",\n-                        ty::tls::with(|tcx| tcx.def_path_str(*def_id)),\n-                        ty\n-                    )?;\n-                },\n-                PlaceBase::Static(\n-                    box self::Static { ty, kind: StaticKind::Promoted(promoted) }\n-                ) => {\n-                    write!(\n-                        fmt,\n-                        \"({:?}: {:?})\",\n-                        promoted,\n-                        ty\n-                    )?;\n-                },\n-            }\n+            write!(fmt, \"{:?}\", place_base)?;\n \n             for projection in place_projections {\n                 match projection.elem {\n@@ -2256,6 +2234,30 @@ impl<'tcx> Debug for Place<'tcx> {\n     }\n }\n \n+impl Debug for PlaceBase<'_> {\n+    fn fmt(&self, fmt: &mut Formatter<'_>) -> fmt::Result {\n+        match *self {\n+            PlaceBase::Local(id) => write!(fmt, \"{:?}\", id),\n+            PlaceBase::Static(box self::Static { ty, kind: StaticKind::Static(def_id) }) => {\n+                write!(\n+                    fmt,\n+                    \"({}: {:?})\",\n+                    ty::tls::with(|tcx| tcx.def_path_str(def_id)),\n+                    ty\n+                )\n+            },\n+            PlaceBase::Static(box self::Static { ty, kind: StaticKind::Promoted(promoted) }) => {\n+                write!(\n+                    fmt,\n+                    \"({:?}: {:?})\",\n+                    promoted,\n+                    ty\n+                )\n+            },\n+        }\n+    }\n+}\n+\n ///////////////////////////////////////////////////////////////////////////\n // Scopes\n "}]}