{"sha": "a6c27be0b1074684ae918ab7132bbeb8f75d4f2a", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE2YzI3YmUwYjEwNzQ2ODRhZTkxOGFiNzEzMmJiZWI4Zjc1ZDRmMmE=", "commit": {"author": {"name": "Ulrik Sverdrup", "email": "bluss@users.noreply.github.com", "date": "2016-04-06T10:19:19Z"}, "committer": {"name": "Ulrik Sverdrup", "email": "bluss@users.noreply.github.com", "date": "2016-04-06T10:19:19Z"}, "message": "slice: Use doc(hidden) on private traits\n\nThis should avoid the trait impls showing up in rustdoc.", "tree": {"sha": "a81c9160a52fb8364161594ff2945107a1573134", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a81c9160a52fb8364161594ff2945107a1573134"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a6c27be0b1074684ae918ab7132bbeb8f75d4f2a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a6c27be0b1074684ae918ab7132bbeb8f75d4f2a", "html_url": "https://github.com/rust-lang/rust/commit/a6c27be0b1074684ae918ab7132bbeb8f75d4f2a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a6c27be0b1074684ae918ab7132bbeb8f75d4f2a/comments", "author": {"login": "bluss", "id": 3209739, "node_id": "MDQ6VXNlcjMyMDk3Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/3209739?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bluss", "html_url": "https://github.com/bluss", "followers_url": "https://api.github.com/users/bluss/followers", "following_url": "https://api.github.com/users/bluss/following{/other_user}", "gists_url": "https://api.github.com/users/bluss/gists{/gist_id}", "starred_url": "https://api.github.com/users/bluss/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bluss/subscriptions", "organizations_url": "https://api.github.com/users/bluss/orgs", "repos_url": "https://api.github.com/users/bluss/repos", "events_url": "https://api.github.com/users/bluss/events{/privacy}", "received_events_url": "https://api.github.com/users/bluss/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bluss", "id": 3209739, "node_id": "MDQ6VXNlcjMyMDk3Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/3209739?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bluss", "html_url": "https://github.com/bluss", "followers_url": "https://api.github.com/users/bluss/followers", "following_url": "https://api.github.com/users/bluss/following{/other_user}", "gists_url": "https://api.github.com/users/bluss/gists{/gist_id}", "starred_url": "https://api.github.com/users/bluss/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bluss/subscriptions", "organizations_url": "https://api.github.com/users/bluss/orgs", "repos_url": "https://api.github.com/users/bluss/repos", "events_url": "https://api.github.com/users/bluss/events{/privacy}", "received_events_url": "https://api.github.com/users/bluss/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "28c4d12c031aba96acf72d30dfaa22a51fcf719e", "url": "https://api.github.com/repos/rust-lang/rust/commits/28c4d12c031aba96acf72d30dfaa22a51fcf719e", "html_url": "https://github.com/rust-lang/rust/commit/28c4d12c031aba96acf72d30dfaa22a51fcf719e"}], "stats": {"total": 4, "additions": 4, "deletions": 0}, "files": [{"sha": "25082eed2fe6f4b7843eb06064110157f8366f00", "filename": "src/libcore/slice.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/a6c27be0b1074684ae918ab7132bbeb8f75d4f2a/src%2Flibcore%2Fslice.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a6c27be0b1074684ae918ab7132bbeb8f75d4f2a/src%2Flibcore%2Fslice.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fslice.rs?ref=a6c27be0b1074684ae918ab7132bbeb8f75d4f2a", "patch": "@@ -1672,6 +1672,7 @@ impl<T: PartialOrd> PartialOrd for [T] {\n     }\n }\n \n+#[doc(hidden)]\n // intermediate trait for specialization of slice's PartialEq\n trait SlicePartialEq<B> {\n     fn equal(&self, other: &[B]) -> bool;\n@@ -1731,6 +1732,7 @@ impl<A> SlicePartialEq<A> for [A]\n     }\n }\n \n+#[doc(hidden)]\n // intermediate trait for specialization of slice's PartialOrd\n trait SlicePartialOrd<B> {\n     fn partial_compare(&self, other: &[B]) -> Option<Ordering>;\n@@ -1765,6 +1767,7 @@ impl SlicePartialOrd<u8> for [u8] {\n     }\n }\n \n+#[doc(hidden)]\n // intermediate trait for specialization of slice's Ord\n trait SliceOrd<B> {\n     fn compare(&self, other: &[B]) -> Ordering;\n@@ -1811,6 +1814,7 @@ impl SliceOrd<u8> for [u8] {\n     }\n }\n \n+#[doc(hidden)]\n /// Trait implemented for types that can be compared for equality using\n /// their bytewise representation\n trait BytewiseEquality { }"}]}