{"sha": "b04b415e0d6c8b069fd2ee9ed2b5aba097413229", "node_id": "MDY6Q29tbWl0NzI0NzEyOmIwNGI0MTVlMGQ2YzhiMDY5ZmQyZWU5ZWQyYjVhYmEwOTc0MTMyMjk=", "commit": {"author": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2012-04-23T22:23:20Z"}, "committer": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2012-04-23T23:41:11Z"}, "message": "encode the borrowing table, add a simple cross-crate borrowing test", "tree": {"sha": "6e7e549fd0838675796b8f32690b781590e8ed69", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6e7e549fd0838675796b8f32690b781590e8ed69"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b04b415e0d6c8b069fd2ee9ed2b5aba097413229", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b04b415e0d6c8b069fd2ee9ed2b5aba097413229", "html_url": "https://github.com/rust-lang/rust/commit/b04b415e0d6c8b069fd2ee9ed2b5aba097413229", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b04b415e0d6c8b069fd2ee9ed2b5aba097413229/comments", "author": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7d05bea7b90a6963b48f761390fc6bc7ae2bb527", "url": "https://api.github.com/repos/rust-lang/rust/commits/7d05bea7b90a6963b48f761390fc6bc7ae2bb527", "html_url": "https://github.com/rust-lang/rust/commit/7d05bea7b90a6963b48f761390fc6bc7ae2bb527"}], "stats": {"total": 31, "additions": 30, "deletions": 1}, "files": [{"sha": "ac0b07cef4b01aa10ea18d5a5a7b3b4a5ec68aa2", "filename": "src/rustc/metadata/astencode.rs", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/b04b415e0d6c8b069fd2ee9ed2b5aba097413229/src%2Frustc%2Fmetadata%2Fastencode.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b04b415e0d6c8b069fd2ee9ed2b5aba097413229/src%2Frustc%2Fmetadata%2Fastencode.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustc%2Fmetadata%2Fastencode.rs?ref=b04b415e0d6c8b069fd2ee9ed2b5aba097413229", "patch": "@@ -844,6 +844,12 @@ fn encode_side_tables_for_id(ecx: @e::encode_ctxt,\n             }\n         }\n     }\n+\n+    option::iter(tcx.borrowings.find(id)) {|_i|\n+        ebml_w.tag(c::tag_table_borrowings) {||\n+            ebml_w.id(id);\n+        }\n+    }\n }\n \n impl decoder for ebml::doc {\n@@ -914,6 +920,8 @@ fn decode_side_tables(xcx: extended_decode_ctxt,\n             dcx.maps.copy_map.insert(id, ());\n         } else if tag == (c::tag_table_spill as uint) {\n             dcx.maps.spill_map.insert(id, ());\n+        } else if tag == (c::tag_table_borrowings as uint) {\n+            dcx.tcx.borrowings.insert(id, ());\n         } else {\n             let val_doc = entry_doc[c::tag_table_val];\n             let val_dsr = ebml::ebml_deserializer(val_doc);"}, {"sha": "4262266a0d9ffd6becb55091a9286b32312c1c68", "filename": "src/rustc/metadata/common.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/b04b415e0d6c8b069fd2ee9ed2b5aba097413229/src%2Frustc%2Fmetadata%2Fcommon.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b04b415e0d6c8b069fd2ee9ed2b5aba097413229/src%2Frustc%2Fmetadata%2Fcommon.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustc%2Fmetadata%2Fcommon.rs?ref=b04b415e0d6c8b069fd2ee9ed2b5aba097413229", "patch": "@@ -109,7 +109,8 @@ enum astencode_tag { // Reserves 0x50 -- 0x6f\n     tag_table_last_use,\n     tag_table_spill,\n     tag_table_method_map,\n-    tag_table_vtable_map\n+    tag_table_vtable_map,\n+    tag_table_borrowings\n }\n \n // djb's cdb hashes."}, {"sha": "872dfa8b8d49909ef4d1ed8a70ed1b0fe1e960ff", "filename": "src/rustc/metadata/tydecode.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/b04b415e0d6c8b069fd2ee9ed2b5aba097413229/src%2Frustc%2Fmetadata%2Ftydecode.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b04b415e0d6c8b069fd2ee9ed2b5aba097413229/src%2Frustc%2Fmetadata%2Ftydecode.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustc%2Fmetadata%2Ftydecode.rs?ref=b04b415e0d6c8b069fd2ee9ed2b5aba097413229", "patch": "@@ -307,6 +307,11 @@ fn parse_ty(st: @pstate, conv: conv_did) -> ty::t {\n       '@' { ret ty::mk_box(st.tcx, parse_mt(st, conv)); }\n       '~' { ret ty::mk_uniq(st.tcx, parse_mt(st, conv)); }\n       '*' { ret ty::mk_ptr(st.tcx, parse_mt(st, conv)); }\n+      '&' {\n+        let r = parse_region(st);\n+        let mt = parse_mt(st, conv);\n+        ret ty::mk_rptr(st.tcx, r, mt);\n+      }\n       'I' { ret ty::mk_vec(st.tcx, parse_mt(st, conv)); }\n       'V' {\n         let mt = parse_mt(st, conv);"}, {"sha": "80c1817746fb3ec6518d4e32754769a444edc713", "filename": "src/test/auxiliary/cci_borrow_lib.rs", "status": "added", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/b04b415e0d6c8b069fd2ee9ed2b5aba097413229/src%2Ftest%2Fauxiliary%2Fcci_borrow_lib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b04b415e0d6c8b069fd2ee9ed2b5aba097413229/src%2Ftest%2Fauxiliary%2Fcci_borrow_lib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fauxiliary%2Fcci_borrow_lib.rs?ref=b04b415e0d6c8b069fd2ee9ed2b5aba097413229", "patch": "@@ -0,0 +1,3 @@\n+fn foo(x: &uint) -> uint {\n+    *x\n+}"}, {"sha": "f15481d64fe3c00b76948ffbf88f43c17660da8c", "filename": "src/test/run-pass/cci_borrow.rs", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/b04b415e0d6c8b069fd2ee9ed2b5aba097413229/src%2Ftest%2Frun-pass%2Fcci_borrow.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b04b415e0d6c8b069fd2ee9ed2b5aba097413229/src%2Ftest%2Frun-pass%2Fcci_borrow.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fcci_borrow.rs?ref=b04b415e0d6c8b069fd2ee9ed2b5aba097413229", "patch": "@@ -0,0 +1,12 @@\n+// xfail-fast - check-fast doesn't understand aux-build\n+// aux-build:cci_borrow_lib.rs\n+\n+use cci_borrow_lib;\n+import cci_borrow_lib::foo;\n+\n+fn main() {\n+    let p = @22u;\n+    let r = foo(p);\n+    #debug[\"r=%u\", r];\n+    assert r == 22u;\n+}"}]}