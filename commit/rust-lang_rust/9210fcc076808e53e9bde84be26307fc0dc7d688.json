{"sha": "9210fcc076808e53e9bde84be26307fc0dc7d688", "node_id": "MDY6Q29tbWl0NzI0NzEyOjkyMTBmY2MwNzY4MDhlNTNlOWJkZTg0YmUyNjMwN2ZjMGRjN2Q2ODg=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2020-07-16T14:29:57Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-07-16T14:29:57Z"}, "message": "Merge #4676\n\n4676: proc_macro: fix current nightly/future stable ABI incompatibility r=matklad a=robojumper\n\nWith rust-lang/rust#72233, the proc_macro ABI has changed, leading to the `test_derive_serialize_proc_macro` test believing that `serde` wants to pass the struct name as a byte string literal instead of a string literal.\r\n\r\nFixes #4866.\n\nCo-authored-by: robojumper <robojumper@gmail.com>", "tree": {"sha": "8fb1d73b29402ea279e670dffecb84279029dc3f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8fb1d73b29402ea279e670dffecb84279029dc3f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9210fcc076808e53e9bde84be26307fc0dc7d688", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJfEGRlCRBK7hj4Ov3rIwAAdHIIAJ+VxQfi2PIgWhBpoeXNxx3R\nxX1ZoBQ3kJex9UlkkZ/CVA+tgIfbPkqMFWdz3DQwwnXA9NdS4lsmz24O3J0YTcM3\nUkjUb9vH69vB3M73swSeOlwn2QJSnIUVungzdgkU7xLlB9XdQpqyXqBbY2Ty16z3\n54au8ti7FLQ8Kv8MVe3RmKAUohCYYfzapx5q8PaYE8qXqWbe9UKpmTIUSbV+9tQn\nau1CSPUXTbauZKkudQgDVO4/5UySUb/YMzLKPO+4qjtUTLNsoY1bENf4JoYoKwVT\nCraj8imscrpgtFHLGxC/9u7s4O5xfvRs8DJDg7K8crocdmMwXjaTgIPDqgFiUt4=\n=chf0\n-----END PGP SIGNATURE-----\n", "payload": "tree 8fb1d73b29402ea279e670dffecb84279029dc3f\nparent 30245eabb438cc0f1bcb4f05000de8b771da752c\nparent 09ded918c492821d5b7a69004738c38ff4a0624d\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1594909797 +0000\ncommitter GitHub <noreply@github.com> 1594909797 +0000\n\nMerge #4676\n\n4676: proc_macro: fix current nightly/future stable ABI incompatibility r=matklad a=robojumper\n\nWith rust-lang/rust#72233, the proc_macro ABI has changed, leading to the `test_derive_serialize_proc_macro` test believing that `serde` wants to pass the struct name as a byte string literal instead of a string literal.\r\n\r\nFixes #4866.\n\nCo-authored-by: robojumper <robojumper@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9210fcc076808e53e9bde84be26307fc0dc7d688", "html_url": "https://github.com/rust-lang/rust/commit/9210fcc076808e53e9bde84be26307fc0dc7d688", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9210fcc076808e53e9bde84be26307fc0dc7d688/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "30245eabb438cc0f1bcb4f05000de8b771da752c", "url": "https://api.github.com/repos/rust-lang/rust/commits/30245eabb438cc0f1bcb4f05000de8b771da752c", "html_url": "https://github.com/rust-lang/rust/commit/30245eabb438cc0f1bcb4f05000de8b771da752c"}, {"sha": "09ded918c492821d5b7a69004738c38ff4a0624d", "url": "https://api.github.com/repos/rust-lang/rust/commits/09ded918c492821d5b7a69004738c38ff4a0624d", "html_url": "https://github.com/rust-lang/rust/commit/09ded918c492821d5b7a69004738c38ff4a0624d"}], "stats": {"total": 38, "additions": 29, "deletions": 9}, "files": [{"sha": "cb4b3bdb0d3eb8f99f2118cde2eb177fd3697e3c", "filename": "crates/ra_proc_macro_srv/src/proc_macro/bridge/client.rs", "status": "modified", "additions": 10, "deletions": 4, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/9210fcc076808e53e9bde84be26307fc0dc7d688/crates%2Fra_proc_macro_srv%2Fsrc%2Fproc_macro%2Fbridge%2Fclient.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9210fcc076808e53e9bde84be26307fc0dc7d688/crates%2Fra_proc_macro_srv%2Fsrc%2Fproc_macro%2Fbridge%2Fclient.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_proc_macro_srv%2Fsrc%2Fproc_macro%2Fbridge%2Fclient.rs?ref=9210fcc076808e53e9bde84be26307fc0dc7d688", "patch": "@@ -18,7 +18,7 @@ macro_rules! define_handles {\n         }\n \n         impl HandleCounters {\n-            // FIXME(eddyb) use a reference to the `static COUNTERS`, intead of\n+            // FIXME(eddyb) use a reference to the `static COUNTERS`, instead of\n             // a wrapper `fn` pointer, once `const fn` can reference `static`s.\n             extern \"C\" fn get() -> &'static Self {\n                 static COUNTERS: HandleCounters = HandleCounters {\n@@ -205,10 +205,16 @@ impl Clone for Literal {\n     }\n }\n \n-// FIXME(eddyb) `Literal` should not expose internal `Debug` impls.\n impl fmt::Debug for Literal {\n     fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {\n-        f.write_str(&self.debug())\n+        f.debug_struct(\"Literal\")\n+            // format the kind without quotes, as in `kind: Float`\n+            // .field(\"kind\", &format_args!(\"{}\", &self.debug_kind()))\n+            .field(\"symbol\", &self.symbol())\n+            // format `Some(\"...\")` on one line even in {:#?} mode\n+            // .field(\"suffix\", &format_args!(\"{:?}\", &self.suffix()))\n+            .field(\"span\", &self.span())\n+            .finish()\n     }\n }\n \n@@ -339,7 +345,7 @@ impl Bridge<'_> {\n #[repr(C)]\n #[derive(Copy, Clone)]\n pub struct Client<F> {\n-    // FIXME(eddyb) use a reference to the `static COUNTERS`, intead of\n+    // FIXME(eddyb) use a reference to the `static COUNTERS`, instead of\n     // a wrapper `fn` pointer, once `const fn` can reference `static`s.\n     pub(super) get_handle_counters: extern \"C\" fn() -> &'static HandleCounters,\n     pub(super) run: extern \"C\" fn(Bridge<'_>, F) -> Buffer<u8>,"}, {"sha": "273a977158862ba5632c236f21ca8fd4e5086314", "filename": "crates/ra_proc_macro_srv/src/proc_macro/bridge/closure.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/9210fcc076808e53e9bde84be26307fc0dc7d688/crates%2Fra_proc_macro_srv%2Fsrc%2Fproc_macro%2Fbridge%2Fclosure.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9210fcc076808e53e9bde84be26307fc0dc7d688/crates%2Fra_proc_macro_srv%2Fsrc%2Fproc_macro%2Fbridge%2Fclosure.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_proc_macro_srv%2Fsrc%2Fproc_macro%2Fbridge%2Fclosure.rs?ref=9210fcc076808e53e9bde84be26307fc0dc7d688", "patch": "@@ -11,6 +11,9 @@ pub struct Closure<'a, A, R> {\n \n struct Env;\n \n+// impl<'a, A, R> !Sync for Closure<'a, A, R> {}\n+// impl<'a, A, R> !Send for Closure<'a, A, R> {}\n+\n impl<'a, A, R, F: FnMut(A) -> R> From<&'a mut F> for Closure<'a, A, R> {\n     fn from(f: &'a mut F) -> Self {\n         unsafe extern \"C\" fn call<A, R, F: FnMut(A) -> R>(env: &mut Env, arg: A) -> R {"}, {"sha": "aeb05aad44810aed89ef19d1a64a31c3b2340d5b", "filename": "crates/ra_proc_macro_srv/src/proc_macro/bridge/mod.rs", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/9210fcc076808e53e9bde84be26307fc0dc7d688/crates%2Fra_proc_macro_srv%2Fsrc%2Fproc_macro%2Fbridge%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9210fcc076808e53e9bde84be26307fc0dc7d688/crates%2Fra_proc_macro_srv%2Fsrc%2Fproc_macro%2Fbridge%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_proc_macro_srv%2Fsrc%2Fproc_macro%2Fbridge%2Fmod.rs?ref=9210fcc076808e53e9bde84be26307fc0dc7d688", "patch": "@@ -108,8 +108,9 @@ macro_rules! with_api {\n             Literal {\n                 fn drop($self: $S::Literal);\n                 fn clone($self: &$S::Literal) -> $S::Literal;\n-                // FIXME(eddyb) `Literal` should not expose internal `Debug` impls.\n-                fn debug($self: &$S::Literal) -> String;\n+                fn debug_kind($self: &$S::Literal) -> String;\n+                fn symbol($self: &$S::Literal) -> String;\n+                fn suffix($self: &$S::Literal) -> Option<String>;\n                 fn integer(n: &str) -> $S::Literal;\n                 fn typed_integer(n: &str, kind: &str) -> $S::Literal;\n                 fn float(n: &str) -> $S::Literal;\n@@ -222,6 +223,9 @@ pub struct Bridge<'a> {\n     dispatch: closure::Closure<'a, Buffer<u8>, Buffer<u8>>,\n }\n \n+// impl<'a> !Sync for Bridge<'a> {}\n+// impl<'a> !Send for Bridge<'a> {}\n+\n #[forbid(unsafe_code)]\n #[allow(non_camel_case_types)]\n mod api_tags {"}, {"sha": "cc32d5a6ddd59ba6be15dbd35357ff699907ec1b", "filename": "crates/ra_proc_macro_srv/src/rustc_server.rs", "status": "modified", "additions": 10, "deletions": 3, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/9210fcc076808e53e9bde84be26307fc0dc7d688/crates%2Fra_proc_macro_srv%2Fsrc%2Frustc_server.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9210fcc076808e53e9bde84be26307fc0dc7d688/crates%2Fra_proc_macro_srv%2Fsrc%2Frustc_server.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_proc_macro_srv%2Fsrc%2Frustc_server.rs?ref=9210fcc076808e53e9bde84be26307fc0dc7d688", "patch": "@@ -463,9 +463,16 @@ impl server::Ident for Rustc {\n }\n \n impl server::Literal for Rustc {\n-    // FIXME(eddyb) `Literal` should not expose internal `Debug` impls.\n-    fn debug(&mut self, literal: &Self::Literal) -> String {\n-        format!(\"{:?}\", literal)\n+    fn debug_kind(&mut self, _literal: &Self::Literal) -> String {\n+        // r-a: debug_kind and suffix are unsupported; corresponding client code has been changed to not call these.\n+        // They must still be present to be ABI-compatible and work with upstream proc_macro.\n+        \"\".to_owned()\n+    }\n+    fn symbol(&mut self, literal: &Self::Literal) -> String {\n+        literal.text.to_string()\n+    }\n+    fn suffix(&mut self, _literal: &Self::Literal) -> Option<String> {\n+        None\n     }\n \n     fn integer(&mut self, n: &str) -> Self::Literal {"}]}