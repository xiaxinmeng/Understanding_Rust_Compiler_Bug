{"sha": "7912189ec304b28c4df0030b5282cf3d21074154", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc5MTIxODllYzMwNGIyOGM0ZGYwMDMwYjUyODJjZjNkMjEwNzQxNTQ=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2018-07-31T20:38:19Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2018-07-31T20:44:31Z"}, "message": "reorganize", "tree": {"sha": "03a0a1b128439fdefbd1d012b392995ca8a6e264", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/03a0a1b128439fdefbd1d012b392995ca8a6e264"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7912189ec304b28c4df0030b5282cf3d21074154", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7912189ec304b28c4df0030b5282cf3d21074154", "html_url": "https://github.com/rust-lang/rust/commit/7912189ec304b28c4df0030b5282cf3d21074154", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7912189ec304b28c4df0030b5282cf3d21074154/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d1400e95d7ad701fcba1191cb00968c2eae8b394", "url": "https://api.github.com/repos/rust-lang/rust/commits/d1400e95d7ad701fcba1191cb00968c2eae8b394", "html_url": "https://github.com/rust-lang/rust/commit/d1400e95d7ad701fcba1191cb00968c2eae8b394"}], "stats": {"total": 155, "additions": 77, "deletions": 78}, "files": [{"sha": "c411d4d7f387922b0a0b0b62ca625aa687c29aba", "filename": "src/grammar/attributes.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/7912189ec304b28c4df0030b5282cf3d21074154/src%2Fgrammar%2Fattributes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7912189ec304b28c4df0030b5282cf3d21074154/src%2Fgrammar%2Fattributes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fgrammar%2Fattributes.rs?ref=7912189ec304b28c4df0030b5282cf3d21074154", "previous_filename": "src/parser/grammar/attributes.rs"}, {"sha": "06f9105c6a31b78c137e150d9daf3783ecf05acf", "filename": "src/grammar/expressions.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/7912189ec304b28c4df0030b5282cf3d21074154/src%2Fgrammar%2Fexpressions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7912189ec304b28c4df0030b5282cf3d21074154/src%2Fgrammar%2Fexpressions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fgrammar%2Fexpressions.rs?ref=7912189ec304b28c4df0030b5282cf3d21074154", "previous_filename": "src/parser/grammar/expressions.rs"}, {"sha": "ca26a78149283bba4b672cbd1222d4657abd0945", "filename": "src/grammar/items/consts.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/7912189ec304b28c4df0030b5282cf3d21074154/src%2Fgrammar%2Fitems%2Fconsts.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7912189ec304b28c4df0030b5282cf3d21074154/src%2Fgrammar%2Fitems%2Fconsts.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fgrammar%2Fitems%2Fconsts.rs?ref=7912189ec304b28c4df0030b5282cf3d21074154", "previous_filename": "src/parser/grammar/items/consts.rs"}, {"sha": "d5f75f13ddc65b3a21f00b94f661fcdc797c9b4e", "filename": "src/grammar/items/mod.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/7912189ec304b28c4df0030b5282cf3d21074154/src%2Fgrammar%2Fitems%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7912189ec304b28c4df0030b5282cf3d21074154/src%2Fgrammar%2Fitems%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fgrammar%2Fitems%2Fmod.rs?ref=7912189ec304b28c4df0030b5282cf3d21074154", "previous_filename": "src/parser/grammar/items/mod.rs"}, {"sha": "7ced542a4e46eb66a13a3e1c852cf733e3b954c3", "filename": "src/grammar/items/structs.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/7912189ec304b28c4df0030b5282cf3d21074154/src%2Fgrammar%2Fitems%2Fstructs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7912189ec304b28c4df0030b5282cf3d21074154/src%2Fgrammar%2Fitems%2Fstructs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fgrammar%2Fitems%2Fstructs.rs?ref=7912189ec304b28c4df0030b5282cf3d21074154", "previous_filename": "src/parser/grammar/items/structs.rs"}, {"sha": "bda13e56504a1f1d2c91ac59b823eeda5ee2bd9d", "filename": "src/grammar/items/traits.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/7912189ec304b28c4df0030b5282cf3d21074154/src%2Fgrammar%2Fitems%2Ftraits.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7912189ec304b28c4df0030b5282cf3d21074154/src%2Fgrammar%2Fitems%2Ftraits.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fgrammar%2Fitems%2Ftraits.rs?ref=7912189ec304b28c4df0030b5282cf3d21074154", "previous_filename": "src/parser/grammar/items/traits.rs"}, {"sha": "a3f7f0da88686588c994cb8a2b685f24a6bad600", "filename": "src/grammar/items/use_item.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/7912189ec304b28c4df0030b5282cf3d21074154/src%2Fgrammar%2Fitems%2Fuse_item.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7912189ec304b28c4df0030b5282cf3d21074154/src%2Fgrammar%2Fitems%2Fuse_item.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fgrammar%2Fitems%2Fuse_item.rs?ref=7912189ec304b28c4df0030b5282cf3d21074154", "previous_filename": "src/parser/grammar/items/use_item.rs"}, {"sha": "b558da477d09cde7f4824ff355a16db982ddb1a2", "filename": "src/grammar/mod.rs", "status": "renamed", "additions": 3, "deletions": 6, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/7912189ec304b28c4df0030b5282cf3d21074154/src%2Fgrammar%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7912189ec304b28c4df0030b5282cf3d21074154/src%2Fgrammar%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fgrammar%2Fmod.rs?ref=7912189ec304b28c4df0030b5282cf3d21074154", "patch": "@@ -24,18 +24,15 @@\n mod attributes;\n mod expressions;\n mod items;\n+mod params;\n mod paths;\n mod patterns;\n-mod params;\n-mod type_params;\n mod type_args;\n+mod type_params;\n mod types;\n \n use {\n-    parser::{\n-        parser::{CompletedMarker, Parser},\n-        token_set::TokenSet,\n-    },\n+    parser_api::{CompletedMarker, Parser, TokenSet},\n     SyntaxKind::{self, *},\n };\n ", "previous_filename": "src/parser/grammar/mod.rs"}, {"sha": "be985c80f9ab8e75644f294e6d107401a7d93a56", "filename": "src/grammar/params.rs", "status": "renamed", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/7912189ec304b28c4df0030b5282cf3d21074154/src%2Fgrammar%2Fparams.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7912189ec304b28c4df0030b5282cf3d21074154/src%2Fgrammar%2Fparams.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fgrammar%2Fparams.rs?ref=7912189ec304b28c4df0030b5282cf3d21074154", "patch": "@@ -68,4 +68,3 @@ fn self_param(p: &mut Parser) {\n         p.expect(COMMA);\n     }\n }\n-", "previous_filename": "src/parser/grammar/params.rs"}, {"sha": "fe69db09699f3eb4ba80bb6a89b351d5022a8d2d", "filename": "src/grammar/paths.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/7912189ec304b28c4df0030b5282cf3d21074154/src%2Fgrammar%2Fpaths.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7912189ec304b28c4df0030b5282cf3d21074154/src%2Fgrammar%2Fpaths.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fgrammar%2Fpaths.rs?ref=7912189ec304b28c4df0030b5282cf3d21074154", "previous_filename": "src/parser/grammar/paths.rs"}, {"sha": "7216807fda4e09c79e63a0ecf738d3face905720", "filename": "src/grammar/patterns.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/7912189ec304b28c4df0030b5282cf3d21074154/src%2Fgrammar%2Fpatterns.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7912189ec304b28c4df0030b5282cf3d21074154/src%2Fgrammar%2Fpatterns.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fgrammar%2Fpatterns.rs?ref=7912189ec304b28c4df0030b5282cf3d21074154", "previous_filename": "src/parser/grammar/patterns.rs"}, {"sha": "5b960f10bcce4ac36e019878ac92bc777c550f35", "filename": "src/grammar/type_args.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/7912189ec304b28c4df0030b5282cf3d21074154/src%2Fgrammar%2Ftype_args.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7912189ec304b28c4df0030b5282cf3d21074154/src%2Fgrammar%2Ftype_args.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fgrammar%2Ftype_args.rs?ref=7912189ec304b28c4df0030b5282cf3d21074154", "previous_filename": "src/parser/grammar/type_args.rs"}, {"sha": "1227482ad4ac7e09a04356827e6d14c61c5e1d93", "filename": "src/grammar/type_params.rs", "status": "renamed", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/7912189ec304b28c4df0030b5282cf3d21074154/src%2Fgrammar%2Ftype_params.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7912189ec304b28c4df0030b5282cf3d21074154/src%2Fgrammar%2Ftype_params.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fgrammar%2Ftype_params.rs?ref=7912189ec304b28c4df0030b5282cf3d21074154", "patch": "@@ -83,7 +83,6 @@ pub(super) fn bounds_without_colon(p: &mut Parser) {\n     }\n }\n \n-\n pub(super) fn where_clause(p: &mut Parser) {\n     if p.at(WHERE_KW) {\n         let m = p.start();", "previous_filename": "src/parser/grammar/type_params.rs"}, {"sha": "565037cb075354fb55b4e13c5899aa3026a951e0", "filename": "src/grammar/types.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/7912189ec304b28c4df0030b5282cf3d21074154/src%2Fgrammar%2Ftypes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7912189ec304b28c4df0030b5282cf3d21074154/src%2Fgrammar%2Ftypes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fgrammar%2Ftypes.rs?ref=7912189ec304b28c4df0030b5282cf3d21074154", "previous_filename": "src/parser/grammar/types.rs"}, {"sha": "8f25de9a4413202d61176721a90fb64ef3451ca0", "filename": "src/lib.rs", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/7912189ec304b28c4df0030b5282cf3d21074154/src%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7912189ec304b28c4df0030b5282cf3d21074154/src%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flib.rs?ref=7912189ec304b28c4df0030b5282cf3d21074154", "patch": "@@ -27,7 +27,11 @@ extern crate unicode_xid;\n pub mod algo;\n pub mod ast;\n mod lexer;\n-mod parser;\n+#[macro_use]\n+mod parser_api;\n+mod grammar;\n+mod parser_impl;\n+\n mod syntax_kinds;\n /// Utilities for simple uses of the parser.\n pub mod utils;\n@@ -43,5 +47,5 @@ pub use {\n \n pub fn parse(text: String) -> SyntaxNode {\n     let tokens = tokenize(&text);\n-    parser::parse::<yellow::GreenBuilder>(text, &tokens)\n+    parser_impl::parse::<yellow::GreenBuilder>(text, &tokens)\n }"}, {"sha": "8631baa2e92288a33cf933d051690d5b646455fe", "filename": "src/parser/mod.rs", "status": "removed", "additions": 0, "deletions": 24, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/d1400e95d7ad701fcba1191cb00968c2eae8b394/src%2Fparser%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d1400e95d7ad701fcba1191cb00968c2eae8b394/src%2Fparser%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fparser%2Fmod.rs?ref=d1400e95d7ad701fcba1191cb00968c2eae8b394", "patch": "@@ -1,24 +0,0 @@\n-#[macro_use]\n-mod token_set;\n-mod event;\n-mod grammar;\n-mod input;\n-mod parser;\n-\n-use {lexer::Token, parser::event::process};\n-\n-pub(crate) use self::event::Sink;\n-\n-/// Parse a sequence of tokens into the representative node tree\n-pub(crate) fn parse<S: Sink>(text: String, tokens: &[Token]) -> S::Tree {\n-    let events = {\n-        let input = input::ParserInput::new(&text, tokens);\n-        let parser_impl = parser::imp::ParserImpl::new(&input);\n-        let mut parser = parser::Parser(parser_impl);\n-        grammar::file(&mut parser);\n-        parser.0.into_events()\n-    };\n-    let mut sink = S::new(text);\n-    process(&mut sink, tokens, events);\n-    sink.finish()\n-}"}, {"sha": "a800f200db6fe5706e40025f8bc37e69fcea0265", "filename": "src/parser/token_set.rs", "status": "removed", "additions": 0, "deletions": 24, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/d1400e95d7ad701fcba1191cb00968c2eae8b394/src%2Fparser%2Ftoken_set.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d1400e95d7ad701fcba1191cb00968c2eae8b394/src%2Fparser%2Ftoken_set.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fparser%2Ftoken_set.rs?ref=d1400e95d7ad701fcba1191cb00968c2eae8b394", "patch": "@@ -1,24 +0,0 @@\n-use SyntaxKind;\n-\n-pub(crate) struct TokenSet {\n-    pub tokens: &'static [SyntaxKind],\n-}\n-\n-impl TokenSet {\n-    pub fn contains(&self, kind: SyntaxKind) -> bool {\n-        self.tokens.contains(&kind)\n-    }\n-}\n-\n-#[macro_export]\n-macro_rules! token_set {\n-    ($($t:ident),*) => {\n-        TokenSet {\n-            tokens: &[$($t),*],\n-        }\n-    };\n-\n-    ($($t:ident),* ,) => {\n-        token_set!($($t),*)\n-    };\n-}"}, {"sha": "5a0da32c950ce2b6c8f8fd7f6096867785a0fc27", "filename": "src/parser_api.rs", "status": "renamed", "additions": 26, "deletions": 3, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/7912189ec304b28c4df0030b5282cf3d21074154/src%2Fparser_api.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7912189ec304b28c4df0030b5282cf3d21074154/src%2Fparser_api.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fparser_api.rs?ref=7912189ec304b28c4df0030b5282cf3d21074154", "patch": "@@ -1,7 +1,30 @@\n-use SyntaxKind::{self, ERROR};\n+use {\n+    parser_impl::ParserImpl,\n+    SyntaxKind::{self, ERROR},\n+};\n \n-pub(super) mod imp;\n-use self::imp::ParserImpl;\n+pub(crate) struct TokenSet {\n+    pub tokens: &'static [SyntaxKind],\n+}\n+\n+impl TokenSet {\n+    pub fn contains(&self, kind: SyntaxKind) -> bool {\n+        self.tokens.contains(&kind)\n+    }\n+}\n+\n+#[macro_export]\n+macro_rules! token_set {\n+    ($($t:ident),*) => {\n+        TokenSet {\n+            tokens: &[$($t),*],\n+        }\n+    };\n+\n+    ($($t:ident),* ,) => {\n+        token_set!($($t),*)\n+    };\n+}\n \n /// `Parser` struct provides the low-level API for\n /// navigating through the stream of tokens and", "previous_filename": "src/parser/parser/mod.rs"}, {"sha": "eb5d0a4be40c24547470dc74c2374effa24a0bff", "filename": "src/parser_impl/event.rs", "status": "renamed", "additions": 1, "deletions": 13, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/7912189ec304b28c4df0030b5282cf3d21074154/src%2Fparser_impl%2Fevent.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7912189ec304b28c4df0030b5282cf3d21074154/src%2Fparser_impl%2Fevent.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fparser_impl%2Fevent.rs?ref=7912189ec304b28c4df0030b5282cf3d21074154", "patch": "@@ -9,22 +9,10 @@\n //! this stream to a real tree.\n use {\n     lexer::Token,\n+    parser_impl::Sink,\n     SyntaxKind::{self, TOMBSTONE},\n-    TextUnit,\n };\n \n-pub(crate) trait Sink {\n-    type Tree;\n-\n-    fn new(text: String) -> Self;\n-\n-    fn leaf(&mut self, kind: SyntaxKind, len: TextUnit);\n-    fn start_internal(&mut self, kind: SyntaxKind);\n-    fn finish_internal(&mut self);\n-    fn error(&mut self, err: String);\n-    fn finish(self) -> Self::Tree;\n-}\n-\n /// `Parser` produces a flat list of `Event`s.\n /// They are converted to a tree-structure in\n /// a separate pass, via `TreeBuilder`.", "previous_filename": "src/parser/event.rs"}, {"sha": "db76364b211ab569c13ab56ee873c663bbb616e3", "filename": "src/parser_impl/input.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/7912189ec304b28c4df0030b5282cf3d21074154/src%2Fparser_impl%2Finput.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7912189ec304b28c4df0030b5282cf3d21074154/src%2Fparser_impl%2Finput.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fparser_impl%2Finput.rs?ref=7912189ec304b28c4df0030b5282cf3d21074154", "previous_filename": "src/parser/input.rs"}, {"sha": "b58094be38eedca9946b4398210efc97b210830a", "filename": "src/parser_impl/mod.rs", "status": "renamed", "additions": 39, "deletions": 2, "changes": 41, "blob_url": "https://github.com/rust-lang/rust/blob/7912189ec304b28c4df0030b5282cf3d21074154/src%2Fparser_impl%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7912189ec304b28c4df0030b5282cf3d21074154/src%2Fparser_impl%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fparser_impl%2Fmod.rs?ref=7912189ec304b28c4df0030b5282cf3d21074154", "patch": "@@ -1,8 +1,45 @@\n-use parser::event::Event;\n-use parser::input::{InputPosition, ParserInput};\n+mod event;\n+mod input;\n+\n+use {\n+    grammar,\n+    lexer::Token,\n+    parser_api::Parser,\n+    parser_impl::{\n+        event::{process, Event},\n+        input::{InputPosition, ParserInput},\n+    },\n+    TextUnit,\n+};\n \n use SyntaxKind::{self, EOF, TOMBSTONE};\n \n+pub(crate) trait Sink {\n+    type Tree;\n+\n+    fn new(text: String) -> Self;\n+\n+    fn leaf(&mut self, kind: SyntaxKind, len: TextUnit);\n+    fn start_internal(&mut self, kind: SyntaxKind);\n+    fn finish_internal(&mut self);\n+    fn error(&mut self, err: String);\n+    fn finish(self) -> Self::Tree;\n+}\n+\n+/// Parse a sequence of tokens into the representative node tree\n+pub(crate) fn parse<S: Sink>(text: String, tokens: &[Token]) -> S::Tree {\n+    let events = {\n+        let input = input::ParserInput::new(&text, tokens);\n+        let parser_impl = ParserImpl::new(&input);\n+        let mut parser_api = Parser(parser_impl);\n+        grammar::file(&mut parser_api);\n+        parser_api.0.into_events()\n+    };\n+    let mut sink = S::new(text);\n+    process(&mut sink, tokens, events);\n+    sink.finish()\n+}\n+\n /// Implementation details of `Parser`, extracted\n /// to a separate struct in order not to pollute\n /// the public API of the `Parser`.", "previous_filename": "src/parser/parser/imp.rs"}, {"sha": "b68ba789ebcfac67d2ce1981b132533a03b93762", "filename": "src/yellow/builder.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7912189ec304b28c4df0030b5282cf3d21074154/src%2Fyellow%2Fbuilder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7912189ec304b28c4df0030b5282cf3d21074154/src%2Fyellow%2Fbuilder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fyellow%2Fbuilder.rs?ref=7912189ec304b28c4df0030b5282cf3d21074154", "patch": "@@ -1,5 +1,5 @@\n use {\n-    parser::Sink,\n+    parser_impl::Sink,\n     yellow::{GreenNode, GreenNodeBuilder, SyntaxError, SyntaxNode, SyntaxRoot},\n     SyntaxKind, TextRange, TextUnit,\n };"}, {"sha": "714158f55484e451819b4d6f0ab7c6149acb987c", "filename": "tools/src/main.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7912189ec304b28c4df0030b5282cf3d21074154/tools%2Fsrc%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7912189ec304b28c4df0030b5282cf3d21074154/tools%2Fsrc%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tools%2Fsrc%2Fmain.rs?ref=7912189ec304b28c4df0030b5282cf3d21074154", "patch": "@@ -18,7 +18,7 @@ use tools::{collect_tests, Test};\n \n type Result<T> = ::std::result::Result<T, failure::Error>;\n \n-const GRAMMAR_DIR: &str = \"./src/parser/grammar\";\n+const GRAMMAR_DIR: &str = \"./src/grammar\";\n const INLINE_TESTS_DIR: &str = \"tests/data/parser/inline\";\n const GRAMMAR: &str = \"./src/grammar.ron\";\n const SYNTAX_KINDS: &str = \"./src/syntax_kinds/generated.rs\";"}]}