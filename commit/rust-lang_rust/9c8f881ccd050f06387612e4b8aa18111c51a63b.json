{"sha": "9c8f881ccd050f06387612e4b8aa18111c51a63b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjljOGY4ODFjY2QwNTBmMDYzODc2MTJlNGI4YWExODExMWM1MWE2M2I=", "commit": {"author": {"name": "Alexis Bourget", "email": "alexis.bourget@gmail.com", "date": "2020-06-07T21:42:55Z"}, "committer": {"name": "Alexis Bourget", "email": "alexis.bourget@gmail.com", "date": "2020-06-07T21:42:55Z"}, "message": "Improved the example to work with mutable data, providing a reason for the mutex holding it", "tree": {"sha": "7a879708ef634e6d28c27b9c2e14886898d8debd", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7a879708ef634e6d28c27b9c2e14886898d8debd"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9c8f881ccd050f06387612e4b8aa18111c51a63b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9c8f881ccd050f06387612e4b8aa18111c51a63b", "html_url": "https://github.com/rust-lang/rust/commit/9c8f881ccd050f06387612e4b8aa18111c51a63b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9c8f881ccd050f06387612e4b8aa18111c51a63b/comments", "author": {"login": "poliorcetics", "id": 7951708, "node_id": "MDQ6VXNlcjc5NTE3MDg=", "avatar_url": "https://avatars.githubusercontent.com/u/7951708?v=4", "gravatar_id": "", "url": "https://api.github.com/users/poliorcetics", "html_url": "https://github.com/poliorcetics", "followers_url": "https://api.github.com/users/poliorcetics/followers", "following_url": "https://api.github.com/users/poliorcetics/following{/other_user}", "gists_url": "https://api.github.com/users/poliorcetics/gists{/gist_id}", "starred_url": "https://api.github.com/users/poliorcetics/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/poliorcetics/subscriptions", "organizations_url": "https://api.github.com/users/poliorcetics/orgs", "repos_url": "https://api.github.com/users/poliorcetics/repos", "events_url": "https://api.github.com/users/poliorcetics/events{/privacy}", "received_events_url": "https://api.github.com/users/poliorcetics/received_events", "type": "User", "site_admin": false}, "committer": {"login": "poliorcetics", "id": 7951708, "node_id": "MDQ6VXNlcjc5NTE3MDg=", "avatar_url": "https://avatars.githubusercontent.com/u/7951708?v=4", "gravatar_id": "", "url": "https://api.github.com/users/poliorcetics", "html_url": "https://github.com/poliorcetics", "followers_url": "https://api.github.com/users/poliorcetics/followers", "following_url": "https://api.github.com/users/poliorcetics/following{/other_user}", "gists_url": "https://api.github.com/users/poliorcetics/gists{/gist_id}", "starred_url": "https://api.github.com/users/poliorcetics/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/poliorcetics/subscriptions", "organizations_url": "https://api.github.com/users/poliorcetics/orgs", "repos_url": "https://api.github.com/users/poliorcetics/repos", "events_url": "https://api.github.com/users/poliorcetics/events{/privacy}", "received_events_url": "https://api.github.com/users/poliorcetics/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "95c4899e55e7aab68f06e67660257d73e6a46eda", "url": "https://api.github.com/repos/rust-lang/rust/commits/95c4899e55e7aab68f06e67660257d73e6a46eda", "html_url": "https://github.com/rust-lang/rust/commit/95c4899e55e7aab68f06e67660257d73e6a46eda"}], "stats": {"total": 10, "additions": 6, "deletions": 4}, "files": [{"sha": "633496154aefe8934cbe406134c5b4bc0094bb3c", "filename": "src/libstd/sync/mutex.rs", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/9c8f881ccd050f06387612e4b8aa18111c51a63b/src%2Flibstd%2Fsync%2Fmutex.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9c8f881ccd050f06387612e4b8aa18111c51a63b/src%2Flibstd%2Fsync%2Fmutex.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsync%2Fmutex.rs?ref=9c8f881ccd050f06387612e4b8aa18111c51a63b", "patch": "@@ -119,7 +119,7 @@ use crate::sys_common::poison::{self, LockResult, TryLockError, TryLockResult};\n /// const N: usize = 3;\n ///\n /// // Some data to work with in multiple threads.\n-/// let data_mutex = Arc::new(Mutex::new([1, 2, 3, 4]));\n+/// let data_mutex = Arc::new(Mutex::new(vec![1, 2, 3, 4]));\n /// // The result of all the work across all threads.\n /// let res_mutex = Arc::new(Mutex::new(0));\n ///\n@@ -131,9 +131,10 @@ use crate::sys_common::poison::{self, LockResult, TryLockError, TryLockResult};\n ///     let res_mutex_clone = Arc::clone(&res_mutex);\n ///\n ///     threads.push(thread::spawn(move || {\n-///         let data = *data_mutex_clone.lock().unwrap();\n+///         let mut data = data_mutex_clone.lock().unwrap();\n ///         // This is the result of some important and long-ish work.\n ///         let result = data.iter().fold(0, |acc, x| acc + x * 2);\n+///         data.push(result);\n ///         // We drop the `data` explicitely because it's not necessary anymore\n ///         // and the thread still has work to do. This allow other threads to\n ///         // start working on the data immediately, without waiting\n@@ -143,9 +144,10 @@ use crate::sys_common::poison::{self, LockResult, TryLockError, TryLockResult};\n ///     }));\n /// });\n ///\n-/// let data = *data_mutex.lock().unwrap();\n+/// let mut data = data_mutex.lock().unwrap();\n /// // This is the result of some important and long-ish work.\n /// let result = data.iter().fold(0, |acc, x| acc + x * 2);\n+/// data.push(result);\n /// // We drop the `data` explicitely because it's not necessary anymore\n /// // and the thread still has work to do. This allow other threads to\n /// // start working on the data immediately, without waiting\n@@ -166,7 +168,7 @@ use crate::sys_common::poison::{self, LockResult, TryLockError, TryLockResult};\n ///         .expect(\"The thread creating or execution failed !\")\n /// });\n ///\n-/// assert_eq!(*res_mutex.lock().unwrap(), 80);\n+/// assert_eq!(*res_mutex.lock().unwrap(), 800);\n /// ```\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n #[cfg_attr(not(test), rustc_diagnostic_item = \"mutex_type\")]"}]}