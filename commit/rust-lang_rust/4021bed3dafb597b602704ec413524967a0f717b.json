{"sha": "4021bed3dafb597b602704ec413524967a0f717b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQwMjFiZWQzZGFmYjU5N2I2MDI3MDRlYzQxMzUyNDk2N2EwZjcxN2I=", "commit": {"author": {"name": "Seiichi Uchida", "email": "seuchida@gmail.com", "date": "2017-11-05T15:48:12Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2017-11-05T15:48:12Z"}, "message": "Merge pull request #2118 from killercup/rustup/2017-11-04\n\nFix compile on 2017-11-04 nightly", "tree": {"sha": "18fcfa209f992c91570044fbf414be7771279fb4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/18fcfa209f992c91570044fbf414be7771279fb4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4021bed3dafb597b602704ec413524967a0f717b", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJZ/zK8CRBK7hj4Ov3rIwAAdHIIAH31RyKBHrxD1eGotfSioilU\ndvvDgEp8bVEZa0vjVfL+MIIjl83bGHKSIk3cwB1nTPMMolKkSzI6JNYjYbKwwr/6\nLR4TCiWu9kx/5F+ECxruqmc1oJ92ToSYqE/qXyaYXM/bLRRlwfxPGn7FZ1GjSpmV\nW1bEOsK2/9wj0BHs97aoALjFImOneDE9YOKJgW0x61Hsylb9hrK7RQeA39Inc9i3\nBhy2EoV5ZHaFYvG4hNjTQ6kRKhA5tfnGCTxD4ZqtDPrK//aVBwQSWrvAJAjnQDMH\nvSWmfcouUCfMw8EIF7eCR+NE8+VH048MvusbRR4b4P7QXq/dQ5qLcx64W89YRso=\n=gufd\n-----END PGP SIGNATURE-----\n", "payload": "tree 18fcfa209f992c91570044fbf414be7771279fb4\nparent 1e4c2fb713a9d92828f63b63595e177fb575fd77\nparent 536526685d296d81ec52755f85f1b369daab87f4\nauthor Seiichi Uchida <seuchida@gmail.com> 1509896892 +0900\ncommitter GitHub <noreply@github.com> 1509896892 +0900\n\nMerge pull request #2118 from killercup/rustup/2017-11-04\n\nFix compile on 2017-11-04 nightly"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4021bed3dafb597b602704ec413524967a0f717b", "html_url": "https://github.com/rust-lang/rust/commit/4021bed3dafb597b602704ec413524967a0f717b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4021bed3dafb597b602704ec413524967a0f717b/comments", "author": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1e4c2fb713a9d92828f63b63595e177fb575fd77", "url": "https://api.github.com/repos/rust-lang/rust/commits/1e4c2fb713a9d92828f63b63595e177fb575fd77", "html_url": "https://github.com/rust-lang/rust/commit/1e4c2fb713a9d92828f63b63595e177fb575fd77"}, {"sha": "536526685d296d81ec52755f85f1b369daab87f4", "url": "https://api.github.com/repos/rust-lang/rust/commits/536526685d296d81ec52755f85f1b369daab87f4", "html_url": "https://github.com/rust-lang/rust/commit/536526685d296d81ec52755f85f1b369daab87f4"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "728433b62ec929b0a5bedfdd1ecfd9f4fcc793f0", "filename": "src/items.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4021bed3dafb597b602704ec413524967a0f717b/src%2Fitems.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4021bed3dafb597b602704ec413524967a0f717b/src%2Fitems.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fitems.rs?ref=4021bed3dafb597b602704ec413524967a0f717b", "patch": "@@ -894,7 +894,7 @@ pub fn format_struct(\n }\n \n pub fn format_trait(context: &RewriteContext, item: &ast::Item, offset: Indent) -> Option<String> {\n-    if let ast::ItemKind::Trait(unsafety, ref generics, ref type_param_bounds, ref trait_items) =\n+    if let ast::ItemKind::Trait(_, unsafety, ref generics, ref type_param_bounds, ref trait_items) =\n         item.node\n     {\n         let mut result = String::with_capacity(128);"}, {"sha": "642f75e58ab215e7a1f5696228c03ff73c9f54dd", "filename": "src/visitor.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4021bed3dafb597b602704ec413524967a0f717b/src%2Fvisitor.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4021bed3dafb597b602704ec413524967a0f717b/src%2Fvisitor.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fvisitor.rs?ref=4021bed3dafb597b602704ec413524967a0f717b", "patch": "@@ -418,7 +418,7 @@ impl<'a> FmtVisitor<'a> {\n                 );\n                 self.push_rewrite(item.span, rewrite);\n             }\n-            ast::ItemKind::DefaultImpl(..) => {\n+            ast::ItemKind::AutoImpl(..) => {\n                 // FIXME(#78): format impl definitions.\n             }\n             ast::ItemKind::Fn(ref decl, unsafety, constness, abi, ref generics, ref body) => {"}]}