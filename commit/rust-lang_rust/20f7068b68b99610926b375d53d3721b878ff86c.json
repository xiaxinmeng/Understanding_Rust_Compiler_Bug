{"sha": "20f7068b68b99610926b375d53d3721b878ff86c", "node_id": "MDY6Q29tbWl0NzI0NzEyOjIwZjcwNjhiNjhiOTk2MTA5MjZiMzc1ZDUzZDM3MjFiODc4ZmY4NmM=", "commit": {"author": {"name": "Edwin Cheng", "email": "edwin0cheng@gmail.com", "date": "2020-05-14T09:57:37Z"}, "committer": {"name": "Edwin Cheng", "email": "edwin0cheng@gmail.com", "date": "2020-05-14T09:57:51Z"}, "message": "Store proc-macro result in salsa db", "tree": {"sha": "70935f3d8f07b50082d62110eb29bafc484eb1f3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/70935f3d8f07b50082d62110eb29bafc484eb1f3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/20f7068b68b99610926b375d53d3721b878ff86c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/20f7068b68b99610926b375d53d3721b878ff86c", "html_url": "https://github.com/rust-lang/rust/commit/20f7068b68b99610926b375d53d3721b878ff86c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/20f7068b68b99610926b375d53d3721b878ff86c/comments", "author": {"login": "edwin0cheng", "id": 11014119, "node_id": "MDQ6VXNlcjExMDE0MTE5", "avatar_url": "https://avatars.githubusercontent.com/u/11014119?v=4", "gravatar_id": "", "url": "https://api.github.com/users/edwin0cheng", "html_url": "https://github.com/edwin0cheng", "followers_url": "https://api.github.com/users/edwin0cheng/followers", "following_url": "https://api.github.com/users/edwin0cheng/following{/other_user}", "gists_url": "https://api.github.com/users/edwin0cheng/gists{/gist_id}", "starred_url": "https://api.github.com/users/edwin0cheng/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/edwin0cheng/subscriptions", "organizations_url": "https://api.github.com/users/edwin0cheng/orgs", "repos_url": "https://api.github.com/users/edwin0cheng/repos", "events_url": "https://api.github.com/users/edwin0cheng/events{/privacy}", "received_events_url": "https://api.github.com/users/edwin0cheng/received_events", "type": "User", "site_admin": false}, "committer": {"login": "edwin0cheng", "id": 11014119, "node_id": "MDQ6VXNlcjExMDE0MTE5", "avatar_url": "https://avatars.githubusercontent.com/u/11014119?v=4", "gravatar_id": "", "url": "https://api.github.com/users/edwin0cheng", "html_url": "https://github.com/edwin0cheng", "followers_url": "https://api.github.com/users/edwin0cheng/followers", "following_url": "https://api.github.com/users/edwin0cheng/following{/other_user}", "gists_url": "https://api.github.com/users/edwin0cheng/gists{/gist_id}", "starred_url": "https://api.github.com/users/edwin0cheng/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/edwin0cheng/subscriptions", "organizations_url": "https://api.github.com/users/edwin0cheng/orgs", "repos_url": "https://api.github.com/users/edwin0cheng/repos", "events_url": "https://api.github.com/users/edwin0cheng/events{/privacy}", "received_events_url": "https://api.github.com/users/edwin0cheng/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6fde7f1b6bb30481a38c3346729dde9bd1b42c1a", "url": "https://api.github.com/repos/rust-lang/rust/commits/6fde7f1b6bb30481a38c3346729dde9bd1b42c1a", "html_url": "https://github.com/rust-lang/rust/commit/6fde7f1b6bb30481a38c3346729dde9bd1b42c1a"}], "stats": {"total": 40, "additions": 37, "deletions": 3}, "files": [{"sha": "bf30d71519e10b7b08270619b3b11e02cce330ea", "filename": "crates/ra_hir_expand/src/db.rs", "status": "modified", "additions": 35, "deletions": 1, "changes": 36, "blob_url": "https://github.com/rust-lang/rust/blob/20f7068b68b99610926b375d53d3721b878ff86c/crates%2Fra_hir_expand%2Fsrc%2Fdb.rs", "raw_url": "https://github.com/rust-lang/rust/raw/20f7068b68b99610926b375d53d3721b878ff86c/crates%2Fra_hir_expand%2Fsrc%2Fdb.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_expand%2Fsrc%2Fdb.rs?ref=20f7068b68b99610926b375d53d3721b878ff86c", "patch": "@@ -34,7 +34,12 @@ impl TokenExpander {\n             // FIXME switch these to ExpandResult as well\n             TokenExpander::Builtin(it) => it.expand(db, id, tt).into(),\n             TokenExpander::BuiltinDerive(it) => it.expand(db, id, tt).into(),\n-            TokenExpander::ProcMacro(it) => it.expand(db, id, tt).into(),\n+            TokenExpander::ProcMacro(_) => {\n+                // We store the result in salsa db to prevent non-determinisc behavior in\n+                // some proc-macro implementation\n+                // See #4315 for details\n+                db.expand_proc_macro(id.into()).into()\n+            }\n         }\n     }\n \n@@ -75,6 +80,8 @@ pub trait AstDatabase: SourceDatabase {\n \n     #[salsa::interned]\n     fn intern_eager_expansion(&self, eager: EagerCallLoc) -> EagerMacroId;\n+\n+    fn expand_proc_macro(&self, call: MacroCallId) -> Result<tt::Subtree, mbe::ExpandError>;\n }\n \n /// This expands the given macro call, but with different arguments. This is\n@@ -216,6 +223,33 @@ fn macro_expand_with_arg(\n     (Some(Arc::new(tt)), err.map(|e| format!(\"{:?}\", e)))\n }\n \n+pub(crate) fn expand_proc_macro(\n+    db: &dyn AstDatabase,\n+    id: MacroCallId,\n+) -> Result<tt::Subtree, mbe::ExpandError> {\n+    let lazy_id = match id {\n+        MacroCallId::LazyMacro(id) => id,\n+        MacroCallId::EagerMacro(_) => unreachable!(),\n+    };\n+\n+    let loc = db.lookup_intern_macro(lazy_id);\n+    let macro_arg = match db.macro_arg(id) {\n+        Some(it) => it,\n+        None => {\n+            return Err(\n+                tt::ExpansionError::Unknown(\"No arguments for proc-macro\".to_string()).into()\n+            )\n+        }\n+    };\n+\n+    let expander = match loc.def.kind {\n+        MacroDefKind::CustomDerive(expander) => expander,\n+        _ => unreachable!(),\n+    };\n+\n+    expander.expand(db, lazy_id, &macro_arg.0)\n+}\n+\n pub(crate) fn parse_or_expand(db: &dyn AstDatabase, file_id: HirFileId) -> Option<SyntaxNode> {\n     match file_id.0 {\n         HirFileIdRepr::FileId(file_id) => Some(db.parse(file_id).tree().syntax().clone()),"}, {"sha": "9c450eabaed018f7e42f607fbdcf046da54a6cb7", "filename": "crates/ra_mbe/src/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/20f7068b68b99610926b375d53d3721b878ff86c/crates%2Fra_mbe%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/20f7068b68b99610926b375d53d3721b878ff86c/crates%2Fra_mbe%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_mbe%2Fsrc%2Flib.rs?ref=20f7068b68b99610926b375d53d3721b878ff86c", "patch": "@@ -22,7 +22,7 @@ pub enum ParseError {\n     RepetitionEmtpyTokenTree,\n }\n \n-#[derive(Debug, PartialEq, Eq)]\n+#[derive(Debug, PartialEq, Eq, Clone)]\n pub enum ExpandError {\n     NoMatchingRule,\n     UnexpectedToken,"}, {"sha": "342ddbe32947766a52b04a1e839f5b7a0eb9fc4b", "filename": "crates/ra_tt/src/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/20f7068b68b99610926b375d53d3721b878ff86c/crates%2Fra_tt%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/20f7068b68b99610926b375d53d3721b878ff86c/crates%2Fra_tt%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_tt%2Fsrc%2Flib.rs?ref=20f7068b68b99610926b375d53d3721b878ff86c", "patch": "@@ -243,7 +243,7 @@ impl Subtree {\n \n pub mod buffer;\n \n-#[derive(Debug, PartialEq, Eq)]\n+#[derive(Debug, PartialEq, Eq, Clone)]\n pub enum ExpansionError {\n     IOError(String),\n     JsonError(String),"}]}