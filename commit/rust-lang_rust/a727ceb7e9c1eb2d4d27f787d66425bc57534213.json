{"sha": "a727ceb7e9c1eb2d4d27f787d66425bc57534213", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE3MjdjZWI3ZTljMWViMmQ0ZDI3Zjc4N2Q2NjQyNWJjNTc1MzQyMTM=", "commit": {"author": {"name": "Oliver Schneider", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2017-02-13T12:46:39Z"}, "committer": {"name": "Oliver Schneider", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2017-02-14T09:19:18Z"}, "message": "fast path for zsts", "tree": {"sha": "13bad4bc1259104fdd4cdf208722e72d69b81fd0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/13bad4bc1259104fdd4cdf208722e72d69b81fd0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a727ceb7e9c1eb2d4d27f787d66425bc57534213", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEYFTdM4NKd7XQft77pp+NIls619kFAliiy5YACgkQpp+NIls6\n19mrDw//cpBnfAIDO4dRgNTKebglAgkUyr68dpi6WDEm6AT9fzyOHDzoTfc9MAj4\nvXDFo9RCItJYNTd4gUuwFgIkP8dYqUc7JCkmGB6+MSycK9ZIdcni+CuR4kCLHitJ\nl34FnylW6wUd3HhcH5t3OK8ZK9pt7Scu6VWUcfGp0dFt1MWhjwgVInIL4/uTe52p\nZgeJS0IYOG3NMhepq8d8OFo3rJb/2WZ+YZMQA3mUt5Rzsyc8Jm/ZPlATClwM5hDr\nNEtW7sjBdtkYiw//pdXD86D01Dh5hJl20Y8N2IjZ6JHKzcrJiIt2+8zVcWtde2ul\ntVFsZU+BO6NkVwJBTsP/8iitDQfe16AIw7AYo5sfy5Lh6LQpPeZbGO/YKH4oHhYU\nzRfF+qJadsXPjVSiIKS2yuWw6aCoWWdJXUKLUGSqxCC7nz33OsNZBevvfwzJp5JA\nIDwIZ/71s952snjzDF6cpkYLQO11jHDDPi3EaosP2473aoZi2W5+qZjySGVmetUX\ni47TAPNsLz75emwVbNsaUO1i1Y12Wrv41wTtDOZU984NhWaM7KOitLy3mRT9EAVq\nCap8Of34YYHWdu39lrV/YfkQ6wcrqUu8H+Ffe79Av+vZRWhZyC1U7e1jhqeU43SH\nloN3xY/yy6hEqOWdRtBl0Pa8Iy7mF89UqddAAY8EKQLkPFIwN6k=\n=yNup\n-----END PGP SIGNATURE-----", "payload": "tree 13bad4bc1259104fdd4cdf208722e72d69b81fd0\nparent eeae478e7428f40959d048adce14605c47a6d378\nauthor Oliver Schneider <git-spam-no-reply9815368754983@oli-obk.de> 1486989999 +0100\ncommitter Oliver Schneider <git-spam-no-reply9815368754983@oli-obk.de> 1487063958 +0100\n\nfast path for zsts\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a727ceb7e9c1eb2d4d27f787d66425bc57534213", "html_url": "https://github.com/rust-lang/rust/commit/a727ceb7e9c1eb2d4d27f787d66425bc57534213", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a727ceb7e9c1eb2d4d27f787d66425bc57534213/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "eeae478e7428f40959d048adce14605c47a6d378", "url": "https://api.github.com/repos/rust-lang/rust/commits/eeae478e7428f40959d048adce14605c47a6d378", "html_url": "https://github.com/rust-lang/rust/commit/eeae478e7428f40959d048adce14605c47a6d378"}], "stats": {"total": 24, "additions": 17, "deletions": 7}, "files": [{"sha": "9fb6492efd39e460e3d2679fac808ac1e770eae8", "filename": "src/eval_context.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/a727ceb7e9c1eb2d4d27f787d66425bc57534213/src%2Feval_context.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a727ceb7e9c1eb2d4d27f787d66425bc57534213/src%2Feval_context.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Feval_context.rs?ref=a727ceb7e9c1eb2d4d27f787d66425bc57534213", "patch": "@@ -436,6 +436,9 @@ impl<'a, 'tcx> EvalContext<'a, 'tcx> {\n                 self.write_primval(dest, operator::unary_op(un_op, val, kind)?, dest_ty)?;\n             }\n \n+            // Skip everything for zsts\n+            Aggregate(..) if self.type_size(dest_ty)? == Some(0) => {}\n+\n             Aggregate(ref kind, ref operands) => {\n                 self.inc_step_counter_and_check_limit(operands.len() as u64)?;\n                 use rustc::ty::layout::Layout::*;"}, {"sha": "d8035c9f6700fac551d7d7718cd13417dd122044", "filename": "src/terminator/mod.rs", "status": "modified", "additions": 14, "deletions": 7, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/a727ceb7e9c1eb2d4d27f787d66425bc57534213/src%2Fterminator%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a727ceb7e9c1eb2d4d27f787d66425bc57534213/src%2Fterminator%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fterminator%2Fmod.rs?ref=a727ceb7e9c1eb2d4d27f787d66425bc57534213", "patch": "@@ -501,13 +501,20 @@ impl<'a, 'tcx> EvalContext<'a, 'tcx> {\n                 (&ty::TyTuple(fields, _),\n                  &Layout::Univariant { ref variant, .. }) => {\n                     let offsets = variant.offsets.iter().map(|s| s.bytes());\n-                    let last_ptr = match last {\n-                        Value::ByRef(ptr) => ptr,\n-                        _ => bug!(\"rust-call ABI tuple argument wasn't Value::ByRef\"),\n-                    };\n-                    for (offset, ty) in offsets.zip(fields) {\n-                        let arg = Value::ByRef(last_ptr.offset(offset));\n-                        args.push((arg, ty));\n+                    match last {\n+                        Value::ByRef(last_ptr) => {\n+                            for (offset, ty) in offsets.zip(fields) {\n+                                let arg = Value::ByRef(last_ptr.offset(offset));\n+                                args.push((arg, ty));\n+                            }\n+                        },\n+                        // propagate undefs\n+                        undef @ Value::ByVal(PrimVal::Undef) => {\n+                            for field_ty in fields {\n+                                args.push((undef, field_ty));\n+                            }\n+                        },\n+                        _ => bug!(\"rust-call ABI tuple argument was {:?}\", last),\n                     }\n                 }\n                 ty => bug!(\"expected tuple as last argument in function with 'rust-call' ABI, got {:?}\", ty),"}]}