{"sha": "477b654f4f4896dab766a398cf1f2955146088d5", "node_id": "C_kwDOAAsO6NoAKDQ3N2I2NTRmNGY0ODk2ZGFiNzY2YTM5OGNmMWYyOTU1MTQ2MDg4ZDU", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2022-01-17T23:57:30Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-01-17T23:57:30Z"}, "message": "Merge #11311\n\n11311: fix: insert auto-imports after header comments r=repnop a=repnop\n\nFixes #8607.\r\n\r\nThis commit changes the auto-import functionality and causes it to add imports after any leading comments, which are commonly license headers. This does not affect comments on items as they're considered part of the item itself and not separate.\n\nCo-authored-by: Wesley Norris <repnop@outlook.com>", "tree": {"sha": "cc271c10280d76645753bc3a83075f2c9239e061", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/cc271c10280d76645753bc3a83075f2c9239e061"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/477b654f4f4896dab766a398cf1f2955146088d5", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJh5gJqCRBK7hj4Ov3rIwAAtN8IAHQC4JR5eqKJK/GGAvvwSANC\nJJofn68Q/EvBzLNd5YjPNVrfYoZ75LUsVqzC4u2bUAEOWX1XCKnX+bScBbYxGq/s\nGWu1Ut0EqYTFsPej68dqWI/Efl0BCMBeYqWdoLqX4LEnr9WeghWEIQHbvUg19wZx\n3xJmMnu/xdzS1JJevk8cwHf91s6Oy0BzF09Tee5MbBOXKtfIsdHEIJPjKkf+/7Nj\nPoYSCzI8YeFq4Y8Qba1xn7PgPvpkjzQNeYqJ1hw7uyh76g+tLXvw9Xfv4dQOkptm\nqx/u1mpJuM7v69lXqcYfoGHsf7/zypFlNoyyy/pRxl1cRRW2ZOcYvfGfJCiy2vw=\n=69mb\n-----END PGP SIGNATURE-----\n", "payload": "tree cc271c10280d76645753bc3a83075f2c9239e061\nparent 8be2be8c794192c32b1814d6a0be04c68af13855\nparent ba82cc7722aeb1627da8cde9f342c73a937b276c\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1642463850 +0000\ncommitter GitHub <noreply@github.com> 1642463850 +0000\n\nMerge #11311\n\n11311: fix: insert auto-imports after header comments r=repnop a=repnop\n\nFixes #8607.\r\n\r\nThis commit changes the auto-import functionality and causes it to add imports after any leading comments, which are commonly license headers. This does not affect comments on items as they're considered part of the item itself and not separate.\n\nCo-authored-by: Wesley Norris <repnop@outlook.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/477b654f4f4896dab766a398cf1f2955146088d5", "html_url": "https://github.com/rust-lang/rust/commit/477b654f4f4896dab766a398cf1f2955146088d5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/477b654f4f4896dab766a398cf1f2955146088d5/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8be2be8c794192c32b1814d6a0be04c68af13855", "url": "https://api.github.com/repos/rust-lang/rust/commits/8be2be8c794192c32b1814d6a0be04c68af13855", "html_url": "https://github.com/rust-lang/rust/commit/8be2be8c794192c32b1814d6a0be04c68af13855"}, {"sha": "ba82cc7722aeb1627da8cde9f342c73a937b276c", "url": "https://api.github.com/repos/rust-lang/rust/commits/ba82cc7722aeb1627da8cde9f342c73a937b276c", "html_url": "https://github.com/rust-lang/rust/commit/ba82cc7722aeb1627da8cde9f342c73a937b276c"}], "stats": {"total": 63, "additions": 59, "deletions": 4}, "files": [{"sha": "d6f8cd0f4b72be45e384e2f91a6c387e6e933f57", "filename": "crates/ide_db/src/helpers/insert_use.rs", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/477b654f4f4896dab766a398cf1f2955146088d5/crates%2Fide_db%2Fsrc%2Fhelpers%2Finsert_use.rs", "raw_url": "https://github.com/rust-lang/rust/raw/477b654f4f4896dab766a398cf1f2955146088d5/crates%2Fide_db%2Fsrc%2Fhelpers%2Finsert_use.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_db%2Fsrc%2Fhelpers%2Finsert_use.rs?ref=477b654f4f4896dab766a398cf1f2955146088d5", "patch": "@@ -401,7 +401,7 @@ fn insert_use_(\n         .children_with_tokens()\n         .filter(|child| match child {\n             NodeOrToken::Node(node) => is_inner_attribute(node.clone()),\n-            NodeOrToken::Token(token) => is_inner_comment(token.clone()),\n+            NodeOrToken::Token(token) => is_comment(token.clone()),\n         })\n         .last()\n     {\n@@ -440,7 +440,6 @@ fn is_inner_attribute(node: SyntaxNode) -> bool {\n     ast::Attr::cast(node).map(|attr| attr.kind()) == Some(ast::AttrKind::Inner)\n }\n \n-fn is_inner_comment(token: SyntaxToken) -> bool {\n-    ast::Comment::cast(token).and_then(|comment| comment.kind().doc)\n-        == Some(ast::CommentPlacement::Inner)\n+fn is_comment(token: SyntaxToken) -> bool {\n+    ast::Comment::cast(token).is_some()\n }"}, {"sha": "4219358a07f33aba74d57bd8a4ea29c7508d8033", "filename": "crates/ide_db/src/helpers/insert_use/tests.rs", "status": "modified", "additions": 56, "deletions": 0, "changes": 56, "blob_url": "https://github.com/rust-lang/rust/blob/477b654f4f4896dab766a398cf1f2955146088d5/crates%2Fide_db%2Fsrc%2Fhelpers%2Finsert_use%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/477b654f4f4896dab766a398cf1f2955146088d5/crates%2Fide_db%2Fsrc%2Fhelpers%2Finsert_use%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_db%2Fsrc%2Fhelpers%2Finsert_use%2Ftests.rs?ref=477b654f4f4896dab766a398cf1f2955146088d5", "patch": "@@ -390,6 +390,62 @@ use foo::bar::Baz;\"#,\n     );\n }\n \n+#[test]\n+fn inserts_after_single_line_comments() {\n+    check_none(\n+        \"foo::bar::Baz\",\n+        \"// Represents a possible license header and/or general module comments\",\n+        r#\"// Represents a possible license header and/or general module comments\n+\n+use foo::bar::Baz;\"#,\n+    );\n+}\n+\n+#[test]\n+fn inserts_after_multiple_single_line_comments() {\n+    check_none(\n+        \"foo::bar::Baz\",\n+        \"// Represents a possible license header and/or general module comments\n+// Second single-line comment\n+// Third single-line comment\",\n+        r#\"// Represents a possible license header and/or general module comments\n+// Second single-line comment\n+// Third single-line comment\n+\n+use foo::bar::Baz;\"#,\n+    );\n+}\n+\n+#[test]\n+fn inserts_before_single_line_item_comments() {\n+    check_none(\n+        \"foo::bar::Baz\",\n+        r#\"// Represents a comment about a function\n+fn foo() {}\"#,\n+        r#\"use foo::bar::Baz;\n+\n+// Represents a comment about a function\n+fn foo() {}\"#,\n+    );\n+}\n+\n+#[test]\n+fn inserts_after_single_line_header_comments_and_before_item() {\n+    check_none(\n+        \"foo::bar::Baz\",\n+        r#\"// Represents a possible license header\n+// Line two of possible license header\n+\n+fn foo() {}\"#,\n+        r#\"// Represents a possible license header\n+// Line two of possible license header\n+\n+use foo::bar::Baz;\n+\n+fn foo() {}\"#,\n+    );\n+}\n+\n #[test]\n fn inserts_after_multiline_inner_comments() {\n     check_none("}]}