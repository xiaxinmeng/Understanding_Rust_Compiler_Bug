{"sha": "46e3d04b2baab130be52dc2b3a26085b3582f8ba", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ2ZTNkMDRiMmJhYWIxMzBiZTUyZGMyYjNhMjYwODViMzU4MmY4YmE=", "commit": {"author": {"name": "Michael Woerister", "email": "michaelwoerister@posteo", "date": "2019-05-21T11:41:44Z"}, "committer": {"name": "Michael Woerister", "email": "michaelwoerister@posteo", "date": "2019-05-21T11:48:29Z"}, "message": "debuginfo: Revert to old/more verbose behavior for -Cdebuginfo=1.\n\nhttps://github.com/rust-lang/rust/commit/cff075009 made LLVM emit\nless debuginfo when compiling with \"line-tables-only\". The change\nwas essentially correct but the reduced amount of debuginfo broke\na number of tools.\n\nThis commit reverts the change so we get back the old behavior,\nuntil we figure out how to do this properly and give external\ntools to adapt to the new format.\n\nSee https://github.com/rust-lang/rust/issues/60020 for more info.", "tree": {"sha": "155c9d0261bb0a88b6c6b4336df4a759bd91c91a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/155c9d0261bb0a88b6c6b4336df4a759bd91c91a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/46e3d04b2baab130be52dc2b3a26085b3582f8ba", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/46e3d04b2baab130be52dc2b3a26085b3582f8ba", "html_url": "https://github.com/rust-lang/rust/commit/46e3d04b2baab130be52dc2b3a26085b3582f8ba", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/46e3d04b2baab130be52dc2b3a26085b3582f8ba/comments", "author": {"login": "michaelwoerister", "id": 1825894, "node_id": "MDQ6VXNlcjE4MjU4OTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1825894?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelwoerister", "html_url": "https://github.com/michaelwoerister", "followers_url": "https://api.github.com/users/michaelwoerister/followers", "following_url": "https://api.github.com/users/michaelwoerister/following{/other_user}", "gists_url": "https://api.github.com/users/michaelwoerister/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelwoerister/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelwoerister/subscriptions", "organizations_url": "https://api.github.com/users/michaelwoerister/orgs", "repos_url": "https://api.github.com/users/michaelwoerister/repos", "events_url": "https://api.github.com/users/michaelwoerister/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelwoerister/received_events", "type": "User", "site_admin": false}, "committer": {"login": "michaelwoerister", "id": 1825894, "node_id": "MDQ6VXNlcjE4MjU4OTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1825894?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelwoerister", "html_url": "https://github.com/michaelwoerister", "followers_url": "https://api.github.com/users/michaelwoerister/followers", "following_url": "https://api.github.com/users/michaelwoerister/following{/other_user}", "gists_url": "https://api.github.com/users/michaelwoerister/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelwoerister/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelwoerister/subscriptions", "organizations_url": "https://api.github.com/users/michaelwoerister/orgs", "repos_url": "https://api.github.com/users/michaelwoerister/repos", "events_url": "https://api.github.com/users/michaelwoerister/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelwoerister/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c2e49bf1a279ec704bfe39fa149b64783454d72d", "url": "https://api.github.com/repos/rust-lang/rust/commits/c2e49bf1a279ec704bfe39fa149b64783454d72d", "html_url": "https://github.com/rust-lang/rust/commit/c2e49bf1a279ec704bfe39fa149b64783454d72d"}], "stats": {"total": 23, "additions": 21, "deletions": 2}, "files": [{"sha": "13590faa12384ce139c7ed330e112789e0db77fe", "filename": "src/librustc_codegen_llvm/debuginfo/metadata.rs", "status": "modified", "additions": 21, "deletions": 2, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/46e3d04b2baab130be52dc2b3a26085b3582f8ba/src%2Flibrustc_codegen_llvm%2Fdebuginfo%2Fmetadata.rs", "raw_url": "https://github.com/rust-lang/rust/raw/46e3d04b2baab130be52dc2b3a26085b3582f8ba/src%2Flibrustc_codegen_llvm%2Fdebuginfo%2Fmetadata.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_llvm%2Fdebuginfo%2Fmetadata.rs?ref=46e3d04b2baab130be52dc2b3a26085b3582f8ba", "patch": "@@ -31,7 +31,7 @@ use rustc::ty::{self, AdtKind, ParamEnv, Ty, TyCtxt};\n use rustc::ty::layout::{self, Align, Integer, IntegerExt, LayoutOf,\n                         PrimitiveExt, Size, TyLayout, VariantIdx};\n use rustc::ty::subst::UnpackedKind;\n-use rustc::session::config;\n+use rustc::session::config::{self, DebugInfo};\n use rustc::util::nodemap::FxHashMap;\n use rustc_fs_util::path_to_c_string;\n use rustc_data_structures::small_c_str::SmallCStr;\n@@ -925,7 +925,26 @@ pub fn compile_unit_metadata(tcx: TyCtxt<'_, '_, '_>,\n     let producer = CString::new(producer).unwrap();\n     let flags = \"\\0\";\n     let split_name = \"\\0\";\n-    let kind = DebugEmissionKind::from_generic(tcx.sess.opts.debuginfo);\n+\n+    // FIXME(#60020):\n+    //\n+    //    This should actually be\n+    //\n+    //    ```\n+    //      let kind = DebugEmissionKind::from_generic(tcx.sess.opts.debuginfo);\n+    //    ```\n+    //\n+    //    that is, we should set LLVM's emission kind to `LineTablesOnly` if\n+    //    we are compiling with \"limited\" debuginfo. However, some of the\n+    //    existing tools relied on slightly more debuginfo being generated than\n+    //    would be the case with `LineTablesOnly`, and we did not want to break\n+    //    these tools in a \"drive-by fix\", without a good idea or plan about\n+    //    what limited debuginfo should exactly look like. So for now we keep\n+    //    the emission kind as `FullDebug`.\n+    //\n+    //    See https://github.com/rust-lang/rust/issues/60020 for details.\n+    let kind = DebugEmissionKind::FullDebug;\n+    assert!(tcx.sess.opts.debuginfo != DebugInfo::None);\n \n     unsafe {\n         let file_metadata = llvm::LLVMRustDIBuilderCreateFile("}]}