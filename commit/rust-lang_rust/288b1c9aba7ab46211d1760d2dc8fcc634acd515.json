{"sha": "288b1c9aba7ab46211d1760d2dc8fcc634acd515", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI4OGIxYzlhYmE3YWI0NjIxMWQxNzYwZDJkYzhmY2M2MzRhY2Q1MTU=", "commit": {"author": {"name": "Steve Klabnik", "email": "steve@steveklabnik.com", "date": "2015-04-06T18:25:39Z"}, "committer": {"name": "Steve Klabnik", "email": "steve@steveklabnik.com", "date": "2015-04-10T16:44:20Z"}, "message": "Add examples for Convert", "tree": {"sha": "80a9ad0713cdda77bab393501d15b7d5645f0be2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/80a9ad0713cdda77bab393501d15b7d5645f0be2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/288b1c9aba7ab46211d1760d2dc8fcc634acd515", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/288b1c9aba7ab46211d1760d2dc8fcc634acd515", "html_url": "https://github.com/rust-lang/rust/commit/288b1c9aba7ab46211d1760d2dc8fcc634acd515", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/288b1c9aba7ab46211d1760d2dc8fcc634acd515/comments", "author": {"login": "steveklabnik", "id": 27786, "node_id": "MDQ6VXNlcjI3Nzg2", "avatar_url": "https://avatars.githubusercontent.com/u/27786?v=4", "gravatar_id": "", "url": "https://api.github.com/users/steveklabnik", "html_url": "https://github.com/steveklabnik", "followers_url": "https://api.github.com/users/steveklabnik/followers", "following_url": "https://api.github.com/users/steveklabnik/following{/other_user}", "gists_url": "https://api.github.com/users/steveklabnik/gists{/gist_id}", "starred_url": "https://api.github.com/users/steveklabnik/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/steveklabnik/subscriptions", "organizations_url": "https://api.github.com/users/steveklabnik/orgs", "repos_url": "https://api.github.com/users/steveklabnik/repos", "events_url": "https://api.github.com/users/steveklabnik/events{/privacy}", "received_events_url": "https://api.github.com/users/steveklabnik/received_events", "type": "User", "site_admin": false}, "committer": {"login": "steveklabnik", "id": 27786, "node_id": "MDQ6VXNlcjI3Nzg2", "avatar_url": "https://avatars.githubusercontent.com/u/27786?v=4", "gravatar_id": "", "url": "https://api.github.com/users/steveklabnik", "html_url": "https://github.com/steveklabnik", "followers_url": "https://api.github.com/users/steveklabnik/followers", "following_url": "https://api.github.com/users/steveklabnik/following{/other_user}", "gists_url": "https://api.github.com/users/steveklabnik/gists{/gist_id}", "starred_url": "https://api.github.com/users/steveklabnik/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/steveklabnik/subscriptions", "organizations_url": "https://api.github.com/users/steveklabnik/orgs", "repos_url": "https://api.github.com/users/steveklabnik/repos", "events_url": "https://api.github.com/users/steveklabnik/events{/privacy}", "received_events_url": "https://api.github.com/users/steveklabnik/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9f37ba64e812713b273ad9818f05d852f6563b87", "url": "https://api.github.com/repos/rust-lang/rust/commits/9f37ba64e812713b273ad9818f05d852f6563b87", "html_url": "https://github.com/rust-lang/rust/commit/9f37ba64e812713b273ad9818f05d852f6563b87"}], "stats": {"total": 56, "additions": 51, "deletions": 5}, "files": [{"sha": "1c1ad5fd33fb8bdfbaf142e4244853db5b469170", "filename": "src/libcore/convert.rs", "status": "modified", "additions": 51, "deletions": 5, "changes": 56, "blob_url": "https://github.com/rust-lang/rust/blob/288b1c9aba7ab46211d1760d2dc8fcc634acd515/src%2Flibcore%2Fconvert.rs", "raw_url": "https://github.com/rust-lang/rust/raw/288b1c9aba7ab46211d1760d2dc8fcc634acd515/src%2Flibcore%2Fconvert.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fconvert.rs?ref=288b1c9aba7ab46211d1760d2dc8fcc634acd515", "patch": "@@ -10,15 +10,35 @@\n \n //! Traits for conversions between types.\n //!\n-//! The traits in this module provide a general way to talk about\n-//! conversions from one type to another. They follow the standard\n-//! Rust conventions of `as`/`to`/`into`/`from`.\n+//! The traits in this module provide a general way to talk about conversions from one type to\n+//! another. They follow the standard Rust conventions of `as`/`to`/`into`/`from`.\n+//!\n+//! Like many traits, these are often used as bounds for generic functions, to support arguments of\n+//! multiple types.\n+//!\n+//! See each trait for usage examples.\n \n #![stable(feature = \"rust1\", since = \"1.0.0\")]\n \n use marker::Sized;\n \n /// A cheap, reference-to-reference conversion.\n+///\n+/// # Examples\n+///\n+/// Both `String` and `&str` implement `AsRef<str>`:\n+///\n+/// ```\n+/// fn is_hello<T: AsRef<str>>(s: T) {\n+///    assert_eq!(\"hello\", s.as_ref());\n+/// }\n+///\n+/// let s = \"hello\";\n+/// is_hello(s);\n+///\n+/// let s = \"hello\".to_string();\n+/// is_hello(s);\n+/// ```\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n pub trait AsRef<T: ?Sized> {\n     /// Performs the conversion.\n@@ -34,8 +54,21 @@ pub trait AsMut<T: ?Sized> {\n     fn as_mut(&mut self) -> &mut T;\n }\n \n-/// A conversion that consumes `self`, which may or may not be\n-/// expensive.\n+/// A conversion that consumes `self`, which may or may not be expensive.\n+///\n+/// # Examples\n+///\n+/// `String` implements `Into<Vec<u8>>`:\n+///\n+/// ```\n+/// fn is_hello<T: Into<Vec<u8>>>(s: T) {\n+///    let bytes = b\"hello\".to_vec();\n+///    assert_eq!(bytes, s.into());\n+/// }\n+///\n+/// let s = \"hello\".to_string();\n+/// is_hello(s);\n+/// ```\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n pub trait Into<T>: Sized {\n     /// Performs the conversion.\n@@ -44,6 +77,19 @@ pub trait Into<T>: Sized {\n }\n \n /// Construct `Self` via a conversion.\n+///\n+/// # Examples\n+///\n+/// `String` implements `From<&str>`:\n+///\n+/// ```\n+/// let s = \"hello\";\n+/// let string = \"hello\".to_string();\n+///\n+/// let other_string: String = From::from(s);\n+///\n+/// assert_eq!(string, other_string);\n+/// ```\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n pub trait From<T> {\n     /// Performs the conversion."}]}