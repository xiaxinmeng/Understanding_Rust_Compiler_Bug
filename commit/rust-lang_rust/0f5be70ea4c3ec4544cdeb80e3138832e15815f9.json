{"sha": "0f5be70ea4c3ec4544cdeb80e3138832e15815f9", "node_id": "MDY6Q29tbWl0NzI0NzEyOjBmNWJlNzBlYTRjM2VjNDU0NGNkZWI4MGUzMTM4ODMyZTE1ODE1Zjk=", "commit": {"author": {"name": "Joshua Nelson", "email": "jyn514@gmail.com", "date": "2020-08-04T01:50:24Z"}, "committer": {"name": "Joshua Nelson", "email": "jyn514@gmail.com", "date": "2020-08-04T01:58:32Z"}, "message": "Revert to the old `impl Trait` behavior for everyone except rustdoc", "tree": {"sha": "e58f64d418e28a189d71fd60edff29fa5be2ed3a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e58f64d418e28a189d71fd60edff29fa5be2ed3a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0f5be70ea4c3ec4544cdeb80e3138832e15815f9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0f5be70ea4c3ec4544cdeb80e3138832e15815f9", "html_url": "https://github.com/rust-lang/rust/commit/0f5be70ea4c3ec4544cdeb80e3138832e15815f9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0f5be70ea4c3ec4544cdeb80e3138832e15815f9/comments", "author": {"login": "jyn514", "id": 23638587, "node_id": "MDQ6VXNlcjIzNjM4NTg3", "avatar_url": "https://avatars.githubusercontent.com/u/23638587?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jyn514", "html_url": "https://github.com/jyn514", "followers_url": "https://api.github.com/users/jyn514/followers", "following_url": "https://api.github.com/users/jyn514/following{/other_user}", "gists_url": "https://api.github.com/users/jyn514/gists{/gist_id}", "starred_url": "https://api.github.com/users/jyn514/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jyn514/subscriptions", "organizations_url": "https://api.github.com/users/jyn514/orgs", "repos_url": "https://api.github.com/users/jyn514/repos", "events_url": "https://api.github.com/users/jyn514/events{/privacy}", "received_events_url": "https://api.github.com/users/jyn514/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jyn514", "id": 23638587, "node_id": "MDQ6VXNlcjIzNjM4NTg3", "avatar_url": "https://avatars.githubusercontent.com/u/23638587?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jyn514", "html_url": "https://github.com/jyn514", "followers_url": "https://api.github.com/users/jyn514/followers", "following_url": "https://api.github.com/users/jyn514/following{/other_user}", "gists_url": "https://api.github.com/users/jyn514/gists{/gist_id}", "starred_url": "https://api.github.com/users/jyn514/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jyn514/subscriptions", "organizations_url": "https://api.github.com/users/jyn514/orgs", "repos_url": "https://api.github.com/users/jyn514/repos", "events_url": "https://api.github.com/users/jyn514/events{/privacy}", "received_events_url": "https://api.github.com/users/jyn514/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "70697d8be87635d294f29c9c7a2a31b8ed08e49c", "url": "https://api.github.com/repos/rust-lang/rust/commits/70697d8be87635d294f29c9c7a2a31b8ed08e49c", "html_url": "https://github.com/rust-lang/rust/commit/70697d8be87635d294f29c9c7a2a31b8ed08e49c"}], "stats": {"total": 16, "additions": 14, "deletions": 2}, "files": [{"sha": "48d846dfefd2425b2ee4a5014dcc56f1ff7b4743", "filename": "src/librustc_privacy/lib.rs", "status": "modified", "additions": 14, "deletions": 2, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/0f5be70ea4c3ec4544cdeb80e3138832e15815f9/src%2Flibrustc_privacy%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0f5be70ea4c3ec4544cdeb80e3138832e15815f9/src%2Flibrustc_privacy%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_privacy%2Flib.rs?ref=0f5be70ea4c3ec4544cdeb80e3138832e15815f9", "patch": "@@ -778,8 +778,20 @@ impl Visitor<'tcx> for EmbargoVisitor<'tcx> {\n             }\n             // The interface is empty.\n             hir::ItemKind::GlobalAsm(..) => {}\n-            // assume the type is never reachable - since it's opaque, no one can use it from this interface\n-            hir::ItemKind::OpaqueTy(..) => {}\n+            hir::ItemKind::OpaqueTy(..) => {\n+                // HACK(jynelson): trying to infer the type of `impl trait` breaks `async-std` (and `pub async fn` in general)\n+                // Since rustdoc never need to do codegen and doesn't care about link-time reachability,\n+                // mark this as unreachable.\n+                // See https://github.com/rust-lang/rust/issues/75100\n+                if !self.tcx.sess.opts.actually_rustdoc {\n+                    // FIXME: This is some serious pessimization intended to workaround deficiencies\n+                    // in the reachability pass (`middle/reachable.rs`). Types are marked as link-time\n+                    // reachable if they are returned via `impl Trait`, even from private functions.\n+                    let exist_level = cmp::max(item_level, Some(AccessLevel::ReachableFromImplTrait));\n+                    self.reach(item.hir_id, exist_level).generics().predicates().ty();\n+\n+                }\n+            }\n             // Visit everything.\n             hir::ItemKind::Const(..)\n             | hir::ItemKind::Static(..)"}]}