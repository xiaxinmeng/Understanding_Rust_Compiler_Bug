{"sha": "bc416284ac070fcf904cfd900c72610519c40730", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJjNDE2Mjg0YWMwNzBmY2Y5MDRjZmQ5MDBjNzI2MTA1MTljNDA3MzA=", "commit": {"author": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2011-01-14T21:59:35Z"}, "committer": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2011-01-14T21:59:35Z"}, "message": "Trim long lines.", "tree": {"sha": "1c371178fabffedf283445193d5f74be409612e6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1c371178fabffedf283445193d5f74be409612e6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/bc416284ac070fcf904cfd900c72610519c40730", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/bc416284ac070fcf904cfd900c72610519c40730", "html_url": "https://github.com/rust-lang/rust/commit/bc416284ac070fcf904cfd900c72610519c40730", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/bc416284ac070fcf904cfd900c72610519c40730/comments", "author": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "committer": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b039be1e5ca039747b2c8a65b8cb4df14d27b476", "url": "https://api.github.com/repos/rust-lang/rust/commits/b039be1e5ca039747b2c8a65b8cb4df14d27b476", "html_url": "https://github.com/rust-lang/rust/commit/b039be1e5ca039747b2c8a65b8cb4df14d27b476"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "efea151b709327923273350f3e5ee42f9ab04f53", "filename": "src/comp/middle/trans.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/bc416284ac070fcf904cfd900c72610519c40730/src%2Fcomp%2Fmiddle%2Ftrans.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bc416284ac070fcf904cfd900c72610519c40730/src%2Fcomp%2Fmiddle%2Ftrans.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Ftrans.rs?ref=bc416284ac070fcf904cfd900c72610519c40730", "patch": "@@ -311,7 +311,7 @@ fn type_of(@crate_ctxt cx, @ty.t t) -> TypeRef {\n     ret llty;\n }\n \n-// NB: this function must match the ABI assumptions of trans_args exactly.\n+// NB: this function must match the ABI assumptions of trans_args.\n fn type_of_fn_full(@crate_ctxt cx,\n                    option.t[TypeRef] obj_self,\n                    vec[ty.arg] inputs,\n@@ -1964,7 +1964,7 @@ impure fn trans_cast(@block_ctxt cx, @ast.expr e, &ast.ann ann) -> result {\n }\n \n \n-// NB: this function must match the ABI assumptions of type_of_fn_full exactly.\n+// NB: this function must match the ABI assumptions of type_of_fn_full.\n impure fn trans_args(@block_ctxt cx,\n                      ValueRef llclosure,\n                      option.t[ValueRef] llobj,"}]}