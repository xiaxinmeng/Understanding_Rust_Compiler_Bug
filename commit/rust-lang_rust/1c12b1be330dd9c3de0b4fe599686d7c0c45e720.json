{"sha": "1c12b1be330dd9c3de0b4fe599686d7c0c45e720", "node_id": "MDY6Q29tbWl0NzI0NzEyOjFjMTJiMWJlMzMwZGQ5YzNkZTBiNGZlNTk5Njg2ZDdjMGM0NWU3MjA=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2019-06-24T20:58:53Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2019-06-24T20:58:53Z"}, "message": "call out explicitly that general read needs to be called with an initialized buffer", "tree": {"sha": "9309e6b417a353a3fc009b637006196ba554ae6d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9309e6b417a353a3fc009b637006196ba554ae6d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1c12b1be330dd9c3de0b4fe599686d7c0c45e720", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1c12b1be330dd9c3de0b4fe599686d7c0c45e720", "html_url": "https://github.com/rust-lang/rust/commit/1c12b1be330dd9c3de0b4fe599686d7c0c45e720", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1c12b1be330dd9c3de0b4fe599686d7c0c45e720/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7e08576e4276a97b523c25bfd196d419c39c7b87", "url": "https://api.github.com/repos/rust-lang/rust/commits/7e08576e4276a97b523c25bfd196d419c39c7b87", "html_url": "https://github.com/rust-lang/rust/commit/7e08576e4276a97b523c25bfd196d419c39c7b87"}], "stats": {"total": 11, "additions": 10, "deletions": 1}, "files": [{"sha": "7fba844897ffeabbcaaa4145d4b0f0a331616e03", "filename": "src/libstd/io/mod.rs", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/1c12b1be330dd9c3de0b4fe599686d7c0c45e720/src%2Flibstd%2Fio%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1c12b1be330dd9c3de0b4fe599686d7c0c45e720/src%2Flibstd%2Fio%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fio%2Fmod.rs?ref=1c12b1be330dd9c3de0b4fe599686d7c0c45e720", "patch": "@@ -506,9 +506,18 @@ pub trait Read {\n     ///\n     /// No guarantees are provided about the contents of `buf` when this\n     /// function is called, implementations cannot rely on any property of the\n-    /// contents of `buf` being true. It is recommended that implementations\n+    /// contents of `buf` being true. It is recommended that *implementations*\n     /// only write data to `buf` instead of reading its contents.\n     ///\n+    /// Correspondingly, however, *users* of this trait may not assume any guarantees\n+    /// about how the implementation uses `buf`. The trait is safe to implement,\n+    /// so it is perfectly possible that the implementation might inspect that data.\n+    /// As a caller, it is your responsibility to make sure that `buf` is initialized\n+    /// before calling `read`. Calling `read` with an uninitialized `buf` (of the kind one\n+    /// obtains via [`MaybeUninit<T>`]) is not safe, and can lead to undefined behavior.\n+    ///\n+    /// [`MaybeUninit<T>`]: ../mem/union.MaybeUninit.html\n+    ///\n     /// # Errors\n     ///\n     /// If this function encounters any form of I/O or other error, an error"}]}