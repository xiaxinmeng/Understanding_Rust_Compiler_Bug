{"sha": "858b44a4338b403cdc9bf5669af768738e0d85f3", "node_id": "MDY6Q29tbWl0NzI0NzEyOjg1OGI0NGE0MzM4YjQwM2NkYzliZjU2NjlhZjc2ODczOGUwZDg1ZjM=", "commit": {"author": {"name": "Dylan DPC", "email": "dylan.dpc@gmail.com", "date": "2020-11-29T02:14:13Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-11-29T02:14:13Z"}, "message": "Rollup merge of #79340 - GuillaumeGomez:rename-stability, r=jyn514\n\nRename \"stability\" CSS class to \"item-info\" and combine `document_stability` with `document_short`\n\nFollow-up of #79300\n\nThe point of this PR is to make the CSS class more accurate since it's not only about stability anymore.\n\nr? ``@jyn514``", "tree": {"sha": "ae1415bcfc11fabca20a9b621384ffea67870044", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ae1415bcfc11fabca20a9b621384ffea67870044"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/858b44a4338b403cdc9bf5669af768738e0d85f3", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJfwwP2CRBK7hj4Ov3rIwAAdHIIABLxI+dLy7GNhq6jmgeloUqI\nwpave6akL+sX4HS1cn6OGRP6uowrroxYcPDrn6OmTuJ4Vi8C/KZIqBxhtZavfwW0\nac+StimiH6tm9lLt/J1abqII3O0oQhse8vIXY5ZR43NLgCiHyJlxaKEKMl62KkvG\n7byDBmhWoZkwebHIRcyzi6gmLIhXD15hybK0Gq3phJk+EcL1CrF7FZ4nmmvUsMgN\nyd7/lg3Lvh+g0SP4UXBjaUPuXLael/pxgO8NISxThoWMmnEXmTR/yQUm2vFCWs38\neMZgWRMZWM+szzHC6A/ryRpzvhFZHhFluK/CjkaE0vQmDY86jwiwLqzduJBFVk4=\n=UsnM\n-----END PGP SIGNATURE-----\n", "payload": "tree ae1415bcfc11fabca20a9b621384ffea67870044\nparent a2b4d97984bfe9df4b47da345aa01d79eb57a9f9\nparent be0484b65def1c07aa2fbc456db0d02f59895b4a\nauthor Dylan DPC <dylan.dpc@gmail.com> 1606616053 +0100\ncommitter GitHub <noreply@github.com> 1606616053 +0100\n\nRollup merge of #79340 - GuillaumeGomez:rename-stability, r=jyn514\n\nRename \"stability\" CSS class to \"item-info\" and combine `document_stability` with `document_short`\n\nFollow-up of #79300\n\nThe point of this PR is to make the CSS class more accurate since it's not only about stability anymore.\n\nr? ``@jyn514``\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/858b44a4338b403cdc9bf5669af768738e0d85f3", "html_url": "https://github.com/rust-lang/rust/commit/858b44a4338b403cdc9bf5669af768738e0d85f3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/858b44a4338b403cdc9bf5669af768738e0d85f3/comments", "author": {"login": "Dylan-DPC", "id": 99973273, "node_id": "U_kgDOBfV4mQ", "avatar_url": "https://avatars.githubusercontent.com/u/99973273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dylan-DPC", "html_url": "https://github.com/Dylan-DPC", "followers_url": "https://api.github.com/users/Dylan-DPC/followers", "following_url": "https://api.github.com/users/Dylan-DPC/following{/other_user}", "gists_url": "https://api.github.com/users/Dylan-DPC/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dylan-DPC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dylan-DPC/subscriptions", "organizations_url": "https://api.github.com/users/Dylan-DPC/orgs", "repos_url": "https://api.github.com/users/Dylan-DPC/repos", "events_url": "https://api.github.com/users/Dylan-DPC/events{/privacy}", "received_events_url": "https://api.github.com/users/Dylan-DPC/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a2b4d97984bfe9df4b47da345aa01d79eb57a9f9", "url": "https://api.github.com/repos/rust-lang/rust/commits/a2b4d97984bfe9df4b47da345aa01d79eb57a9f9", "html_url": "https://github.com/rust-lang/rust/commit/a2b4d97984bfe9df4b47da345aa01d79eb57a9f9"}, {"sha": "be0484b65def1c07aa2fbc456db0d02f59895b4a", "url": "https://api.github.com/repos/rust-lang/rust/commits/be0484b65def1c07aa2fbc456db0d02f59895b4a", "html_url": "https://github.com/rust-lang/rust/commit/be0484b65def1c07aa2fbc456db0d02f59895b4a"}], "stats": {"total": 135, "additions": 77, "deletions": 58}, "files": [{"sha": "bbd4be88e6a8bdd54641899fa2367d1af87ef495", "filename": "src/librustdoc/html/render/mod.rs", "status": "modified", "additions": 46, "deletions": 28, "changes": 74, "blob_url": "https://github.com/rust-lang/rust/blob/858b44a4338b403cdc9bf5669af768738e0d85f3/src%2Flibrustdoc%2Fhtml%2Frender%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/858b44a4338b403cdc9bf5669af768738e0d85f3/src%2Flibrustdoc%2Fhtml%2Frender%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Frender%2Fmod.rs?ref=858b44a4338b403cdc9bf5669af768738e0d85f3", "patch": "@@ -1844,7 +1844,7 @@ fn document(w: &mut Buffer, cx: &Context, item: &clean::Item, parent: Option<&cl\n     if let Some(ref name) = item.name {\n         info!(\"Documenting {}\", name);\n     }\n-    document_stability(w, cx, item, false, parent);\n+    document_item_info(w, cx, item, false, parent);\n     document_full(w, item, cx, \"\", false);\n }\n \n@@ -1880,10 +1880,17 @@ fn render_markdown(\n fn document_short(\n     w: &mut Buffer,\n     item: &clean::Item,\n+    cx: &Context,\n     link: AssocItemLink<'_>,\n     prefix: &str,\n     is_hidden: bool,\n+    parent: Option<&clean::Item>,\n+    show_def_docs: bool,\n ) {\n+    document_item_info(w, cx, item, is_hidden, parent);\n+    if !show_def_docs {\n+        return;\n+    }\n     if let Some(s) = item.doc_value() {\n         let mut summary_html = MarkdownSummaryLine(s, &item.links()).into_string();\n \n@@ -1928,18 +1935,23 @@ fn document_full(w: &mut Buffer, item: &clean::Item, cx: &Context, prefix: &str,\n     }\n }\n \n-fn document_stability(\n+/// Add extra information about an item such as:\n+///\n+/// * Stability\n+/// * Deprecated\n+/// * Required features (through the `doc_cfg` feature)\n+fn document_item_info(\n     w: &mut Buffer,\n     cx: &Context,\n     item: &clean::Item,\n     is_hidden: bool,\n     parent: Option<&clean::Item>,\n ) {\n-    let stabilities = short_stability(item, cx, parent);\n-    if !stabilities.is_empty() {\n-        write!(w, \"<div class=\\\"stability{}\\\">\", if is_hidden { \" hidden\" } else { \"\" });\n-        for stability in stabilities {\n-            write!(w, \"{}\", stability);\n+    let item_infos = short_item_info(item, cx, parent);\n+    if !item_infos.is_empty() {\n+        write!(w, \"<div class=\\\"item-info{}\\\">\", if is_hidden { \" hidden\" } else { \"\" });\n+        for info in item_infos {\n+            write!(w, \"{}\", info);\n         }\n         write!(w, \"</div>\");\n     }\n@@ -2194,7 +2206,7 @@ fn item_module(w: &mut Buffer, cx: &Context, item: &clean::Item, items: &[clean:\n                          <td class=\\\"docblock-short\\\">{stab_tags}{docs}</td>\\\n                      </tr>\",\n                     name = *myitem.name.as_ref().unwrap(),\n-                    stab_tags = stability_tags(myitem, item),\n+                    stab_tags = extra_info_tags(myitem, item),\n                     docs = MarkdownSummaryLine(doc_value, &myitem.links()).into_string(),\n                     class = myitem.type_(),\n                     add = add,\n@@ -2216,9 +2228,9 @@ fn item_module(w: &mut Buffer, cx: &Context, item: &clean::Item, items: &[clean:\n     }\n }\n \n-/// Render the stability and deprecation tags that are displayed in the item's summary at the\n-/// module level.\n-fn stability_tags(item: &clean::Item, parent: &clean::Item) -> String {\n+/// Render the stability, deprecation and portability tags that are displayed in the item's summary\n+/// at the module level.\n+fn extra_info_tags(item: &clean::Item, parent: &clean::Item) -> String {\n     let mut tags = String::new();\n \n     fn tag_html(class: &str, title: &str, contents: &str) -> String {\n@@ -2271,10 +2283,10 @@ fn portability(item: &clean::Item, parent: Option<&clean::Item>) -> Option<Strin\n     Some(format!(\"<div class=\\\"stab portability\\\">{}</div>\", cfg?.render_long_html()))\n }\n \n-/// Render the stability and/or deprecation warning that is displayed at the top of the item's\n-/// documentation.\n-fn short_stability(item: &clean::Item, cx: &Context, parent: Option<&clean::Item>) -> Vec<String> {\n-    let mut stability = vec![];\n+/// Render the stability, deprecation and portability information that is displayed at the top of\n+/// the item's documentation.\n+fn short_item_info(item: &clean::Item, cx: &Context, parent: Option<&clean::Item>) -> Vec<String> {\n+    let mut extra_info = vec![];\n     let error_codes = cx.shared.codes;\n \n     if let Some(Deprecation { ref note, ref since, is_since_rustc_version }) = item.deprecation {\n@@ -2301,7 +2313,7 @@ fn short_stability(item: &clean::Item, cx: &Context, parent: Option<&clean::Item\n             );\n             message.push_str(&format!(\": {}\", html.into_string()));\n         }\n-        stability.push(format!(\n+        extra_info.push(format!(\n             \"<div class=\\\"stab deprecated\\\"><span class=\\\"emoji\\\">\ud83d\udc4e</span> {}</div>\",\n             message,\n         ));\n@@ -2345,14 +2357,14 @@ fn short_stability(item: &clean::Item, cx: &Context, parent: Option<&clean::Item\n             );\n         }\n \n-        stability.push(format!(\"<div class=\\\"stab unstable\\\">{}</div>\", message));\n+        extra_info.push(format!(\"<div class=\\\"stab unstable\\\">{}</div>\", message));\n     }\n \n     if let Some(portability) = portability(item, parent) {\n-        stability.push(portability);\n+        extra_info.push(portability);\n     }\n \n-    stability\n+    extra_info\n }\n \n fn item_constant(w: &mut Buffer, cx: &Context, it: &clean::Item, c: &clean::Constant) {\n@@ -3703,7 +3715,7 @@ fn render_impl(\n \n         if trait_.is_some() {\n             if let Some(portability) = portability(&i.impl_item, Some(parent)) {\n-                write!(w, \"<div class=\\\"stability\\\">{}</div>\", portability);\n+                write!(w, \"<div class=\\\"item-info\\\">{}</div>\", portability);\n             }\n         }\n \n@@ -3801,26 +3813,32 @@ fn render_impl(\n                     if let Some(it) = t.items.iter().find(|i| i.name == item.name) {\n                         // We need the stability of the item from the trait\n                         // because impls can't have a stability.\n-                        document_stability(w, cx, it, is_hidden, Some(parent));\n                         if item.doc_value().is_some() {\n+                            document_item_info(w, cx, it, is_hidden, Some(parent));\n                             document_full(w, item, cx, \"\", is_hidden);\n-                        } else if show_def_docs {\n+                        } else {\n                             // In case the item isn't documented,\n                             // provide short documentation from the trait.\n-                            document_short(w, it, link, \"\", is_hidden);\n+                            document_short(\n+                                w,\n+                                it,\n+                                cx,\n+                                link,\n+                                \"\",\n+                                is_hidden,\n+                                Some(parent),\n+                                show_def_docs,\n+                            );\n                         }\n                     }\n                 } else {\n-                    document_stability(w, cx, item, is_hidden, Some(parent));\n+                    document_item_info(w, cx, item, is_hidden, Some(parent));\n                     if show_def_docs {\n                         document_full(w, item, cx, \"\", is_hidden);\n                     }\n                 }\n             } else {\n-                document_stability(w, cx, item, is_hidden, Some(parent));\n-                if show_def_docs {\n-                    document_short(w, item, link, \"\", is_hidden);\n-                }\n+                document_short(w, item, cx, link, \"\", is_hidden, Some(parent), show_def_docs);\n             }\n         }\n     }"}, {"sha": "7ca43684dced20627124ae74fdffdff9a2e485ab", "filename": "src/librustdoc/html/static/main.js", "status": "modified", "additions": 9, "deletions": 8, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/858b44a4338b403cdc9bf5669af768738e0d85f3/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fmain.js", "raw_url": "https://github.com/rust-lang/rust/raw/858b44a4338b403cdc9bf5669af768738e0d85f3/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fmain.js", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fmain.js?ref=858b44a4338b403cdc9bf5669af768738e0d85f3", "patch": "@@ -2266,7 +2266,7 @@ function defocusSearchBar() {\n                         }\n                     }\n                     var ns = n.nextElementSibling;\n-                    while (ns && (hasClass(ns, \"docblock\") || hasClass(ns, \"stability\"))) {\n+                    while (ns && (hasClass(ns, \"docblock\") || hasClass(ns, \"item-info\"))) {\n                         if (addOrRemove) {\n                             addClass(ns, \"hidden-by-impl-hider\");\n                         } else {\n@@ -2282,7 +2282,7 @@ function defocusSearchBar() {\n         var action = mode;\n         if (hasClass(toggle.parentNode, \"impl\") === false) {\n             relatedDoc = toggle.parentNode.nextElementSibling;\n-            if (hasClass(relatedDoc, \"stability\")) {\n+            if (hasClass(relatedDoc, \"item-info\")) {\n                 relatedDoc = relatedDoc.nextElementSibling;\n             }\n             if (hasClass(relatedDoc, \"docblock\") || hasClass(relatedDoc, \"sub-variant\")) {\n@@ -2332,16 +2332,17 @@ function defocusSearchBar() {\n             var dontApplyBlockRule = toggle.parentNode.parentNode.id !== \"main\";\n             if (action === \"show\") {\n                 removeClass(relatedDoc, \"fns-now-collapsed\");\n-                // Stability information is never hidden.\n-                if (hasClass(docblock, \"stability\") === false) {\n+                // Stability/deprecation/portability information is never hidden.\n+                if (hasClass(docblock, \"item-info\") === false) {\n                     removeClass(docblock, \"hidden-by-usual-hider\");\n                 }\n                 onEachLazy(toggle.childNodes, adjustToggle(false, dontApplyBlockRule));\n                 onEachLazy(relatedDoc.childNodes, implHider(false, dontApplyBlockRule));\n             } else if (action === \"hide\") {\n                 addClass(relatedDoc, \"fns-now-collapsed\");\n-                // Stability information should be shown even when detailed info is hidden.\n-                if (hasClass(docblock, \"stability\") === false) {\n+                // Stability/deprecation/portability information should be shown even when detailed\n+                // info is hidden.\n+                if (hasClass(docblock, \"item-info\") === false) {\n                     addClass(docblock, \"hidden-by-usual-hider\");\n                 }\n                 onEachLazy(toggle.childNodes, adjustToggle(true, dontApplyBlockRule));\n@@ -2445,7 +2446,7 @@ function defocusSearchBar() {\n \n         var func = function(e) {\n             var next = e.nextElementSibling;\n-            if (next && hasClass(next, \"stability\")) {\n+            if (next && hasClass(next, \"item-info\")) {\n               next = next.nextElementSibling;\n             }\n             if (!next) {\n@@ -2462,7 +2463,7 @@ function defocusSearchBar() {\n \n         var funcImpl = function(e) {\n             var next = e.nextElementSibling;\n-            if (next && hasClass(next, \"stability\")) {\n+            if (next && hasClass(next, \"item-info\")) {\n                 next = next.nextElementSibling;\n             }\n             if (next && hasClass(next, \"docblock\")) {"}, {"sha": "8eef65a231d0be7c9cc31b935c554b9cb8c92c66", "filename": "src/librustdoc/html/static/rustdoc.css", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/858b44a4338b403cdc9bf5669af768738e0d85f3/src%2Flibrustdoc%2Fhtml%2Fstatic%2Frustdoc.css", "raw_url": "https://github.com/rust-lang/rust/raw/858b44a4338b403cdc9bf5669af768738e0d85f3/src%2Flibrustdoc%2Fhtml%2Fstatic%2Frustdoc.css", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic%2Frustdoc.css?ref=858b44a4338b403cdc9bf5669af768738e0d85f3", "patch": "@@ -553,21 +553,21 @@ h4 > code, h3 > code, .invisible > code {\n \tborder: none;\n }\n \n-.content .stability code {\n+.content .item-info code {\n \tfont-size: 90%;\n }\n \n-.content .stability {\n+.content .item-info {\n \tposition: relative;\n \tmargin-left: 33px;\n \tmargin-top: -13px;\n }\n \n-.sub-variant > div > .stability {\n+.sub-variant > div > .item-info {\n \tmargin-top: initial;\n }\n \n-.content .stability::before {\n+.content .item-info::before {\n \tcontent: '\u2b11';\n \tfont-size: 25px;\n \tposition: absolute;\n@@ -579,23 +579,23 @@ h4 > code, h3 > code, .invisible > code {\n \tmargin-left: 20px;\n }\n \n-.content .impl-items .docblock, .content .impl-items .stability {\n+.content .impl-items .docblock, .content .impl-items .item-info {\n \tmargin-bottom: .6em;\n }\n \n-.content .impl-items > .stability {\n+.content .impl-items > .item-info {\n \tmargin-left: 40px;\n }\n \n-.methods > .stability, .content .impl-items > .stability {\n+.methods > .item-info, .content .impl-items > .item-info {\n \tmargin-top: -8px;\n }\n \n .impl-items {\n \tflex-basis: 100%;\n }\n \n-#main > .stability {\n+#main > .item-info {\n \tmargin-top: 0;\n }\n \n@@ -655,7 +655,7 @@ a {\n }\n \n .docblock a:not(.srclink):not(.test-arrow):hover,\n-.docblock-short a:not(.srclink):not(.test-arrow):hover, .stability a {\n+.docblock-short a:not(.srclink):not(.test-arrow):hover, .item-info a {\n \ttext-decoration: underline;\n }\n "}, {"sha": "c1f796f09e80474a453e2c3ab573ed978a58c5b7", "filename": "src/librustdoc/html/static/themes/ayu.css", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/858b44a4338b403cdc9bf5669af768738e0d85f3/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fthemes%2Fayu.css", "raw_url": "https://github.com/rust-lang/rust/raw/858b44a4338b403cdc9bf5669af768738e0d85f3/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fthemes%2Fayu.css", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fthemes%2Fayu.css?ref=858b44a4338b403cdc9bf5669af768738e0d85f3", "patch": "@@ -166,7 +166,7 @@ pre {\n \tcolor: #c5c5c5;\n }\n \n-.content .stability::before { color: #ccc; }\n+.content .item-info::before { color: #ccc; }\n \n .content span.foreigntype, .content a.foreigntype { color: #ef57ff; }\n .content span.union, .content a.union { color: #98a01c; }\n@@ -219,7 +219,7 @@ a {\n }\n \n .docblock:not(.type-decl) a:not(.srclink):not(.test-arrow),\n-.docblock-short a:not(.srclink):not(.test-arrow), .stability a,\n+.docblock-short a:not(.srclink):not(.test-arrow), .item-info a,\n #help a {\n \tcolor: #39AFD7;\n }"}, {"sha": "946ca0a40c9dc9595ed610113ada880970caa86d", "filename": "src/librustdoc/html/static/themes/dark.css", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/858b44a4338b403cdc9bf5669af768738e0d85f3/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fthemes%2Fdark.css", "raw_url": "https://github.com/rust-lang/rust/raw/858b44a4338b403cdc9bf5669af768738e0d85f3/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fthemes%2Fdark.css", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fthemes%2Fdark.css?ref=858b44a4338b403cdc9bf5669af768738e0d85f3", "patch": "@@ -136,7 +136,7 @@ pre {\n .content .highlighted.primitive { background-color: #00708a; }\n .content .highlighted.keyword { background-color: #884719; }\n \n-.content .stability::before { color: #ccc; }\n+.content .item-info::before { color: #ccc; }\n \n .content span.enum, .content a.enum, .block a.current.enum { color: #82b089; }\n .content span.struct, .content a.struct, .block a.current.struct { color: #2dbfb8; }\n@@ -177,7 +177,7 @@ a {\n }\n \n .docblock:not(.type-decl) a:not(.srclink):not(.test-arrow),\n-.docblock-short a:not(.srclink):not(.test-arrow), .stability a,\n+.docblock-short a:not(.srclink):not(.test-arrow), .item-info a,\n #help a {\n \tcolor: #D2991D;\n }"}, {"sha": "e0b9a04921a80561ca7d9e045c81adcc7d5f0181", "filename": "src/librustdoc/html/static/themes/light.css", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/858b44a4338b403cdc9bf5669af768738e0d85f3/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fthemes%2Flight.css", "raw_url": "https://github.com/rust-lang/rust/raw/858b44a4338b403cdc9bf5669af768738e0d85f3/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fthemes%2Flight.css", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fthemes%2Flight.css?ref=858b44a4338b403cdc9bf5669af768738e0d85f3", "patch": "@@ -134,7 +134,7 @@ pre {\n .content .highlighted.primitive { background-color: #9aecff; }\n .content .highlighted.keyword { background-color: #f99650; }\n \n-.content .stability::before { color: #ccc; }\n+.content .item-info::before { color: #ccc; }\n \n .content span.enum, .content a.enum, .block a.current.enum { color: #508157; }\n .content span.struct, .content a.struct, .block a.current.struct { color: #ad448e; }\n@@ -175,7 +175,7 @@ a {\n }\n \n .docblock:not(.type-decl) a:not(.srclink):not(.test-arrow),\n-.docblock-short a:not(.srclink):not(.test-arrow), .stability a,\n+.docblock-short a:not(.srclink):not(.test-arrow), .item-info a,\n #help a {\n \tcolor: #3873AD;\n }"}, {"sha": "f86541cd1181e65f71614053c45487a77413010f", "filename": "src/test/rustdoc/doc-cfg.rs", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/858b44a4338b403cdc9bf5669af768738e0d85f3/src%2Ftest%2Frustdoc%2Fdoc-cfg.rs", "raw_url": "https://github.com/rust-lang/rust/raw/858b44a4338b403cdc9bf5669af768738e0d85f3/src%2Ftest%2Frustdoc%2Fdoc-cfg.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fdoc-cfg.rs?ref=858b44a4338b403cdc9bf5669af768738e0d85f3", "patch": "@@ -2,28 +2,28 @@\n #![feature(target_feature, cfg_target_feature)]\n \n // @has doc_cfg/struct.Portable.html\n-// @!has - '//*[@id=\"main\"]/*[@class=\"stability\"]/*[@class=\"stab portability\"]' ''\n+// @!has - '//*[@id=\"main\"]/*[@class=\"item-info\"]/*[@class=\"stab portability\"]' ''\n // @has - '//*[@id=\"method.unix_and_arm_only_function\"]' 'fn unix_and_arm_only_function()'\n // @has - '//*[@class=\"stab portability\"]' 'This is supported on Unix and ARM only.'\n pub struct Portable;\n \n // @has doc_cfg/unix_only/index.html \\\n-//  '//*[@id=\"main\"]/*[@class=\"stability\"]/*[@class=\"stab portability\"]' \\\n+//  '//*[@id=\"main\"]/*[@class=\"item-info\"]/*[@class=\"stab portability\"]' \\\n //  'This is supported on Unix only.'\n // @matches - '//*[@class=\"module-item\"]//*[@class=\"stab portability\"]' '\\AARM\\Z'\n // @count - '//*[@class=\"stab portability\"]' 2\n #[doc(cfg(unix))]\n pub mod unix_only {\n     // @has doc_cfg/unix_only/fn.unix_only_function.html \\\n-    //  '//*[@id=\"main\"]/*[@class=\"stability\"]/*[@class=\"stab portability\"]' \\\n+    //  '//*[@id=\"main\"]/*[@class=\"item-info\"]/*[@class=\"stab portability\"]' \\\n     //  'This is supported on Unix only.'\n     // @count - '//*[@class=\"stab portability\"]' 1\n     pub fn unix_only_function() {\n         content::should::be::irrelevant();\n     }\n \n     // @has doc_cfg/unix_only/trait.ArmOnly.html \\\n-    //  '//*[@id=\"main\"]/*[@class=\"stability\"]/*[@class=\"stab portability\"]' \\\n+    //  '//*[@id=\"main\"]/*[@class=\"item-info\"]/*[@class=\"stab portability\"]' \\\n     //  'This is supported on Unix and ARM only.'\n     // @count - '//*[@class=\"stab portability\"]' 2\n     #[doc(cfg(target_arch = \"arm\"))]\n@@ -44,15 +44,15 @@ pub mod unix_only {\n // @matches - '//*[@class=\"module-item\"]//*[@class=\"stab portability\"]' '\\Aavx\\Z'\n \n // @has doc_cfg/fn.uses_target_feature.html\n-// @has - '//*[@id=\"main\"]/*[@class=\"stability\"]/*[@class=\"stab portability\"]' \\\n+// @has - '//*[@id=\"main\"]/*[@class=\"item-info\"]/*[@class=\"stab portability\"]' \\\n //        'This is supported with target feature avx only.'\n #[target_feature(enable = \"avx\")]\n pub unsafe fn uses_target_feature() {\n     content::should::be::irrelevant();\n }\n \n // @has doc_cfg/fn.uses_cfg_target_feature.html\n-// @has - '//*[@id=\"main\"]/*[@class=\"stability\"]/*[@class=\"stab portability\"]' \\\n+// @has - '//*[@id=\"main\"]/*[@class=\"item-info\"]/*[@class=\"stab portability\"]' \\\n //        'This is supported with target feature avx only.'\n #[doc(cfg(target_feature = \"avx\"))]\n pub fn uses_cfg_target_feature() {"}, {"sha": "4ff06d9c9954e4a7cb6c8b9cf2c33fb242645f42", "filename": "src/test/rustdoc/stability.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/858b44a4338b403cdc9bf5669af768738e0d85f3/src%2Ftest%2Frustdoc%2Fstability.rs", "raw_url": "https://github.com/rust-lang/rust/raw/858b44a4338b403cdc9bf5669af768738e0d85f3/src%2Ftest%2Frustdoc%2Fstability.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fstability.rs?ref=858b44a4338b403cdc9bf5669af768738e0d85f3", "patch": "@@ -4,7 +4,7 @@\n \n pub struct Unstable {\n     // @has stability/struct.Unstable.html \\\n-    //      '//div[@class=\"stability\"]//div[@class=\"stab unstable\"]' \\\n+    //      '//div[@class=\"item-info\"]//div[@class=\"stab unstable\"]' \\\n     //      'This is a nightly-only experimental API'\n     // @count stability/struct.Unstable.html '//span[@class=\"stab unstable\"]' 0\n     pub foo: u32,"}]}