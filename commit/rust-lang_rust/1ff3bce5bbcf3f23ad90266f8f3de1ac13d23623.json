{"sha": "1ff3bce5bbcf3f23ad90266f8f3de1ac13d23623", "node_id": "MDY6Q29tbWl0NzI0NzEyOjFmZjNiY2U1YmJjZjNmMjNhZDkwMjY2ZjhmM2RlMWFjMTNkMjM2MjM=", "commit": {"author": {"name": "Vadim Petrochenkov", "email": "vadim.petrochenkov@gmail.com", "date": "2019-06-17T22:36:44Z"}, "committer": {"name": "Vadim Petrochenkov", "email": "vadim.petrochenkov@gmail.com", "date": "2019-06-18T07:48:56Z"}, "message": "hygiene: Avoid some unnecessary `ExpnInfo` clones", "tree": {"sha": "7c003f826e27aa27615b4086c5c1118a3639b8ce", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7c003f826e27aa27615b4086c5c1118a3639b8ce"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1ff3bce5bbcf3f23ad90266f8f3de1ac13d23623", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1ff3bce5bbcf3f23ad90266f8f3de1ac13d23623", "html_url": "https://github.com/rust-lang/rust/commit/1ff3bce5bbcf3f23ad90266f8f3de1ac13d23623", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1ff3bce5bbcf3f23ad90266f8f3de1ac13d23623/comments", "author": {"login": "petrochenkov", "id": 5751617, "node_id": "MDQ6VXNlcjU3NTE2MTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5751617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrochenkov", "html_url": "https://github.com/petrochenkov", "followers_url": "https://api.github.com/users/petrochenkov/followers", "following_url": "https://api.github.com/users/petrochenkov/following{/other_user}", "gists_url": "https://api.github.com/users/petrochenkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrochenkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrochenkov/subscriptions", "organizations_url": "https://api.github.com/users/petrochenkov/orgs", "repos_url": "https://api.github.com/users/petrochenkov/repos", "events_url": "https://api.github.com/users/petrochenkov/events{/privacy}", "received_events_url": "https://api.github.com/users/petrochenkov/received_events", "type": "User", "site_admin": false}, "committer": {"login": "petrochenkov", "id": 5751617, "node_id": "MDQ6VXNlcjU3NTE2MTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5751617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrochenkov", "html_url": "https://github.com/petrochenkov", "followers_url": "https://api.github.com/users/petrochenkov/followers", "following_url": "https://api.github.com/users/petrochenkov/following{/other_user}", "gists_url": "https://api.github.com/users/petrochenkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrochenkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrochenkov/subscriptions", "organizations_url": "https://api.github.com/users/petrochenkov/orgs", "repos_url": "https://api.github.com/users/petrochenkov/repos", "events_url": "https://api.github.com/users/petrochenkov/events{/privacy}", "received_events_url": "https://api.github.com/users/petrochenkov/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2de2278f1a356cba63300cee0bca49ad8f4905ab", "url": "https://api.github.com/repos/rust-lang/rust/commits/2de2278f1a356cba63300cee0bca49ad8f4905ab", "html_url": "https://github.com/rust-lang/rust/commit/2de2278f1a356cba63300cee0bca49ad8f4905ab"}], "stats": {"total": 10, "additions": 5, "deletions": 5}, "files": [{"sha": "4dbd4ccda910a6ef99c4ed010cfe0e07525788be", "filename": "src/libsyntax_pos/hygiene.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/1ff3bce5bbcf3f23ad90266f8f3de1ac13d23623/src%2Flibsyntax_pos%2Fhygiene.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ff3bce5bbcf3f23ad90266f8f3de1ac13d23623/src%2Flibsyntax_pos%2Fhygiene.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax_pos%2Fhygiene.rs?ref=1ff3bce5bbcf3f23ad90266f8f3de1ac13d23623", "patch": "@@ -112,7 +112,7 @@ impl Mark {\n \n     #[inline]\n     pub fn expn_info(self) -> Option<ExpnInfo> {\n-        HygieneData::with(|data| data.expn_info(self))\n+        HygieneData::with(|data| data.expn_info(self).cloned())\n     }\n \n     #[inline]\n@@ -204,8 +204,8 @@ impl HygieneData {\n         GLOBALS.with(|globals| f(&mut *globals.hygiene_data.borrow_mut()))\n     }\n \n-    fn expn_info(&self, mark: Mark) -> Option<ExpnInfo> {\n-        self.marks[mark.0 as usize].expn_info.clone()\n+    fn expn_info(&self, mark: Mark) -> Option<&ExpnInfo> {\n+        self.marks[mark.0 as usize].expn_info.as_ref()\n     }\n \n     fn is_descendant_of(&self, mut mark: Mark, ancestor: Mark) -> bool {\n@@ -598,7 +598,7 @@ impl SyntaxContext {\n     /// `ctxt.outer().expn_info()`.\n     #[inline]\n     pub fn outer_expn_info(self) -> Option<ExpnInfo> {\n-        HygieneData::with(|data| data.expn_info(data.outer(self)))\n+        HygieneData::with(|data| data.expn_info(data.outer(self)).cloned())\n     }\n \n     /// `ctxt.outer_and_expn_info()` is equivalent to but faster than\n@@ -607,7 +607,7 @@ impl SyntaxContext {\n     pub fn outer_and_expn_info(self) -> (Mark, Option<ExpnInfo>) {\n         HygieneData::with(|data| {\n             let outer = data.outer(self);\n-            (outer, data.expn_info(outer))\n+            (outer, data.expn_info(outer).cloned())\n         })\n     }\n "}]}