{"sha": "76502deb53f5b30e0ee7f132ba23f8e31263853c", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc2NTAyZGViNTNmNWIzMGUwZWU3ZjEzMmJhMjNmOGUzMTI2Mzg1M2M=", "commit": {"author": {"name": "Joshua Nelson", "email": "jyn514@gmail.com", "date": "2021-04-15T23:36:25Z"}, "committer": {"name": "Joshua Nelson", "email": "jyn514@gmail.com", "date": "2021-06-04T12:46:59Z"}, "message": "Implement DepTrackingHash for `Option` through blanket impls instead of macros\n\nThis avoids having to add a new macro call for both the `Option` and the\ntype itself.", "tree": {"sha": "791006b16ca0972bbe892344cf5fbc6954c6df1f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/791006b16ca0972bbe892344cf5fbc6954c6df1f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/76502deb53f5b30e0ee7f132ba23f8e31263853c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/76502deb53f5b30e0ee7f132ba23f8e31263853c", "html_url": "https://github.com/rust-lang/rust/commit/76502deb53f5b30e0ee7f132ba23f8e31263853c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/76502deb53f5b30e0ee7f132ba23f8e31263853c/comments", "author": {"login": "jyn514", "id": 23638587, "node_id": "MDQ6VXNlcjIzNjM4NTg3", "avatar_url": "https://avatars.githubusercontent.com/u/23638587?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jyn514", "html_url": "https://github.com/jyn514", "followers_url": "https://api.github.com/users/jyn514/followers", "following_url": "https://api.github.com/users/jyn514/following{/other_user}", "gists_url": "https://api.github.com/users/jyn514/gists{/gist_id}", "starred_url": "https://api.github.com/users/jyn514/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jyn514/subscriptions", "organizations_url": "https://api.github.com/users/jyn514/orgs", "repos_url": "https://api.github.com/users/jyn514/repos", "events_url": "https://api.github.com/users/jyn514/events{/privacy}", "received_events_url": "https://api.github.com/users/jyn514/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jyn514", "id": 23638587, "node_id": "MDQ6VXNlcjIzNjM4NTg3", "avatar_url": "https://avatars.githubusercontent.com/u/23638587?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jyn514", "html_url": "https://github.com/jyn514", "followers_url": "https://api.github.com/users/jyn514/followers", "following_url": "https://api.github.com/users/jyn514/following{/other_user}", "gists_url": "https://api.github.com/users/jyn514/gists{/gist_id}", "starred_url": "https://api.github.com/users/jyn514/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jyn514/subscriptions", "organizations_url": "https://api.github.com/users/jyn514/orgs", "repos_url": "https://api.github.com/users/jyn514/repos", "events_url": "https://api.github.com/users/jyn514/events{/privacy}", "received_events_url": "https://api.github.com/users/jyn514/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c4c2ab57a43737867982fafc8cfacd9b069fee96", "url": "https://api.github.com/repos/rust-lang/rust/commits/c4c2ab57a43737867982fafc8cfacd9b069fee96", "html_url": "https://github.com/rust-lang/rust/commit/c4c2ab57a43737867982fafc8cfacd9b069fee96"}], "stats": {"total": 42, "additions": 22, "deletions": 20}, "files": [{"sha": "496375292345bf99858f772a86033d1954063a19", "filename": "compiler/rustc_session/src/config.rs", "status": "modified", "additions": 22, "deletions": 20, "changes": 42, "blob_url": "https://github.com/rust-lang/rust/blob/76502deb53f5b30e0ee7f132ba23f8e31263853c/compiler%2Frustc_session%2Fsrc%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/76502deb53f5b30e0ee7f132ba23f8e31263853c/compiler%2Frustc_session%2Fsrc%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_session%2Fsrc%2Fconfig.rs?ref=76502deb53f5b30e0ee7f132ba23f8e31263853c", "patch": "@@ -2427,30 +2427,32 @@ crate mod dep_tracking {\n         )+};\n     }\n \n+    impl<T: DepTrackingHash> DepTrackingHash for Option<T> {\n+        fn hash(&self, hasher: &mut DefaultHasher, error_format: ErrorOutputType) {\n+            match self {\n+                Some(x) => {\n+                    Hash::hash(&1, hasher);\n+                    DepTrackingHash::hash(x, hasher, error_format);\n+                }\n+                None => Hash::hash(&0, hasher),\n+            }\n+        }\n+    }\n+\n     impl_dep_tracking_hash_via_hash!(\n         bool,\n         usize,\n+        NonZeroUsize,\n         u64,\n         String,\n         PathBuf,\n         lint::Level,\n-        Option<bool>,\n-        Option<u32>,\n-        Option<usize>,\n-        Option<NonZeroUsize>,\n-        Option<String>,\n-        Option<(String, u64)>,\n-        Option<Vec<String>>,\n-        Option<MergeFunctions>,\n-        Option<RelocModel>,\n-        Option<CodeModel>,\n-        Option<TlsModel>,\n-        Option<WasiExecModel>,\n-        Option<PanicStrategy>,\n-        Option<RelroLevel>,\n-        Option<InstrumentCoverage>,\n-        Option<lint::Level>,\n-        Option<PathBuf>,\n+        WasiExecModel,\n+        u32,\n+        RelocModel,\n+        CodeModel,\n+        TlsModel,\n+        InstrumentCoverage,\n         CrateType,\n         MergeFunctions,\n         PanicStrategy,\n@@ -2468,10 +2470,10 @@ crate mod dep_tracking {\n         TargetTriple,\n         Edition,\n         LinkerPluginLto,\n-        Option<SplitDebuginfo>,\n+        SplitDebuginfo,\n         SwitchWithOptPath,\n-        Option<SymbolManglingVersion>,\n-        Option<SourceFileHashAlgorithm>,\n+        SymbolManglingVersion,\n+        SourceFileHashAlgorithm,\n         TrimmedDefPaths,\n     );\n "}]}