{"sha": "df127b86cb90470d8ceebdd880db8ad4c372f91b", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRmMTI3Yjg2Y2I5MDQ3MGQ4Y2VlYmRkODgwZGI4YWQ0YzM3MmY5MWI=", "commit": {"author": {"name": "Ding Xiang Fei", "email": "dingxiangfei2009@protonmail.ch", "date": "2020-08-19T01:04:40Z"}, "committer": {"name": "Ding Xiang Fei", "email": "dingxiangfei2009@protonmail.ch", "date": "2020-10-13T16:50:58Z"}, "message": "switch the test to an actual MCVE", "tree": {"sha": "d2123061ede5e8590235b6f1645e9e2b99325844", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d2123061ede5e8590235b6f1645e9e2b99325844"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/df127b86cb90470d8ceebdd880db8ad4c372f91b", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE0u8S3YU336XkLsQOPNdIZH7vY1kFAl+F2vIACgkQPNdIZH7v\nY1nBMA//fpEJONCovATSVPCowtfu4I7t7yRGxGL9NzvCYUF7r20RceQPvZ7119I3\nl+5qLHW7W+NB94Ra9xbYpF6rUfPLSEWL/kqw3QdJZyMf2qZTF7U0VOLsyFs+NEdj\nKxjcjx3yHXrVBfg5z5z7gWepD3mIWuMPwCTkg0472fAEfm2w2c7HpOYS8gB1VkS9\nzKsHaFsw/MZxmm8U3ZpH3YQAbQxhojM+oTwo2fOhgv25I+hXneFylk/QWqd0BuwU\ngI5XskLf5m4Vlh7rE6S7PQ4dXP98hp8Vn4m0JpssLjFEeVf7jMWsnMLtr94QNf5v\nFqsQeeZcL1Ulm6YaUD+umU7UEttoHoG/EDSVBKpv3gvHdt4I1NTjpgU/ZWiWTlhF\nvAxvZ6IF7d4ruJ96bmfh9DD15KqQXNAVhDTAAdzrEPz6K6NCLxkpvCqLmoC78X47\ntT4C3znpZleMPs4xhu8+0iy84jqYo4EAaobAxfZfXDLXWJaTj7lmL1pbKiBIT9fd\nZzLtlWDcwmkdedWa1JHGF1qg98nj6OuiD3i1Nzwf9VbsATlRgJhQ6MXaMJLNFVoJ\nAX+pOx+kOY05MU6PrdfVEwlmNWq1z5jWO5jxYsZjtcUlK8S8zKx2rP4/goFdhFgC\nNbR0N3lQZd12z/x/CZG5PrQxM1rYrDachGI+RbGqDRBEB3KxRmY=\n=caev\n-----END PGP SIGNATURE-----", "payload": "tree d2123061ede5e8590235b6f1645e9e2b99325844\nparent 66345d93592cda1d8f01d4cd0331a95e8feee45c\nauthor Ding Xiang Fei <dingxiangfei2009@protonmail.ch> 1597799080 +0800\ncommitter Ding Xiang Fei <dingxiangfei2009@protonmail.ch> 1602607858 +0800\n\nswitch the test to an actual MCVE\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/df127b86cb90470d8ceebdd880db8ad4c372f91b", "html_url": "https://github.com/rust-lang/rust/commit/df127b86cb90470d8ceebdd880db8ad4c372f91b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/df127b86cb90470d8ceebdd880db8ad4c372f91b/comments", "author": {"login": "dingxiangfei2009", "id": 6884440, "node_id": "MDQ6VXNlcjY4ODQ0NDA=", "avatar_url": "https://avatars.githubusercontent.com/u/6884440?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dingxiangfei2009", "html_url": "https://github.com/dingxiangfei2009", "followers_url": "https://api.github.com/users/dingxiangfei2009/followers", "following_url": "https://api.github.com/users/dingxiangfei2009/following{/other_user}", "gists_url": "https://api.github.com/users/dingxiangfei2009/gists{/gist_id}", "starred_url": "https://api.github.com/users/dingxiangfei2009/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dingxiangfei2009/subscriptions", "organizations_url": "https://api.github.com/users/dingxiangfei2009/orgs", "repos_url": "https://api.github.com/users/dingxiangfei2009/repos", "events_url": "https://api.github.com/users/dingxiangfei2009/events{/privacy}", "received_events_url": "https://api.github.com/users/dingxiangfei2009/received_events", "type": "User", "site_admin": false}, "committer": {"login": "dingxiangfei2009", "id": 6884440, "node_id": "MDQ6VXNlcjY4ODQ0NDA=", "avatar_url": "https://avatars.githubusercontent.com/u/6884440?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dingxiangfei2009", "html_url": "https://github.com/dingxiangfei2009", "followers_url": "https://api.github.com/users/dingxiangfei2009/followers", "following_url": "https://api.github.com/users/dingxiangfei2009/following{/other_user}", "gists_url": "https://api.github.com/users/dingxiangfei2009/gists{/gist_id}", "starred_url": "https://api.github.com/users/dingxiangfei2009/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dingxiangfei2009/subscriptions", "organizations_url": "https://api.github.com/users/dingxiangfei2009/orgs", "repos_url": "https://api.github.com/users/dingxiangfei2009/repos", "events_url": "https://api.github.com/users/dingxiangfei2009/events{/privacy}", "received_events_url": "https://api.github.com/users/dingxiangfei2009/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "66345d93592cda1d8f01d4cd0331a95e8feee45c", "url": "https://api.github.com/repos/rust-lang/rust/commits/66345d93592cda1d8f01d4cd0331a95e8feee45c", "html_url": "https://github.com/rust-lang/rust/commit/66345d93592cda1d8f01d4cd0331a95e8feee45c"}], "stats": {"total": 23, "additions": 9, "deletions": 14}, "files": [{"sha": "d8aa354b1c604bb382622b1b8e09e9d423dd0937", "filename": "src/test/ui/generator/yielding-in-match-guards.rs", "status": "modified", "additions": 9, "deletions": 14, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/df127b86cb90470d8ceebdd880db8ad4c372f91b/src%2Ftest%2Fui%2Fgenerator%2Fyielding-in-match-guards.rs", "raw_url": "https://github.com/rust-lang/rust/raw/df127b86cb90470d8ceebdd880db8ad4c372f91b/src%2Ftest%2Fui%2Fgenerator%2Fyielding-in-match-guards.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fgenerator%2Fyielding-in-match-guards.rs?ref=df127b86cb90470d8ceebdd880db8ad4c372f91b", "patch": "@@ -2,28 +2,23 @@\n // edition:2018\n \n // This test is derived from\n-// https://github.com/rust-lang/rust/issues/74961#issuecomment-666893845\n-// by @SNCPlay42\n+// https://github.com/rust-lang/rust/issues/72651#issuecomment-668720468\n \n // This test demonstrates that, in `async fn g()`,\n // indeed a temporary borrow `y` from `x` is live\n // while `f().await` is being evaluated.\n-// Thus, `&'_ A` should be included in type signature\n+// Thus, `&'_ u8` should be included in type signature\n // of the underlying generator.\n \n-#[derive(PartialEq, Eq)]\n-struct A;\n+async fn f() -> u8 { 1 }\n \n-async fn f() -> A {\n-    A\n-}\n-\n-async fn g() {\n-    let x = A;\n+pub async fn g(x: u8) {\n     match x {\n-        y if f().await == y => {}\n-        _ => {}\n+        y if f().await == y => (),\n+        _ => (),\n     }\n }\n \n-fn main() {}\n+fn main() {\n+    let _ = g(10);\n+}"}]}