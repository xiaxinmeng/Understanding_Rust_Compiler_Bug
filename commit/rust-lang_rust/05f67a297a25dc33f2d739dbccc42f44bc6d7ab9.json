{"sha": "05f67a297a25dc33f2d739dbccc42f44bc6d7ab9", "node_id": "MDY6Q29tbWl0NzI0NzEyOjA1ZjY3YTI5N2EyNWRjMzNmMmQ3MzlkYmNjYzQyZjQ0YmM2ZDdhYjk=", "commit": {"author": {"name": "Taiki Endo", "email": "te316e89@gmail.com", "date": "2019-07-27T03:35:05Z"}, "committer": {"name": "Taiki Endo", "email": "te316e89@gmail.com", "date": "2019-07-27T03:35:05Z"}, "message": "arbitrary_self_types lifetime elision: --bless --compare-mode=nll", "tree": {"sha": "12e7634fa71deb63557339fb9d8f7f6a8c44b32c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/12e7634fa71deb63557339fb9d8f7f6a8c44b32c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/05f67a297a25dc33f2d739dbccc42f44bc6d7ab9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/05f67a297a25dc33f2d739dbccc42f44bc6d7ab9", "html_url": "https://github.com/rust-lang/rust/commit/05f67a297a25dc33f2d739dbccc42f44bc6d7ab9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/05f67a297a25dc33f2d739dbccc42f44bc6d7ab9/comments", "author": {"login": "taiki-e", "id": 43724913, "node_id": "MDQ6VXNlcjQzNzI0OTEz", "avatar_url": "https://avatars.githubusercontent.com/u/43724913?v=4", "gravatar_id": "", "url": "https://api.github.com/users/taiki-e", "html_url": "https://github.com/taiki-e", "followers_url": "https://api.github.com/users/taiki-e/followers", "following_url": "https://api.github.com/users/taiki-e/following{/other_user}", "gists_url": "https://api.github.com/users/taiki-e/gists{/gist_id}", "starred_url": "https://api.github.com/users/taiki-e/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/taiki-e/subscriptions", "organizations_url": "https://api.github.com/users/taiki-e/orgs", "repos_url": "https://api.github.com/users/taiki-e/repos", "events_url": "https://api.github.com/users/taiki-e/events{/privacy}", "received_events_url": "https://api.github.com/users/taiki-e/received_events", "type": "User", "site_admin": false}, "committer": {"login": "taiki-e", "id": 43724913, "node_id": "MDQ6VXNlcjQzNzI0OTEz", "avatar_url": "https://avatars.githubusercontent.com/u/43724913?v=4", "gravatar_id": "", "url": "https://api.github.com/users/taiki-e", "html_url": "https://github.com/taiki-e", "followers_url": "https://api.github.com/users/taiki-e/followers", "following_url": "https://api.github.com/users/taiki-e/following{/other_user}", "gists_url": "https://api.github.com/users/taiki-e/gists{/gist_id}", "starred_url": "https://api.github.com/users/taiki-e/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/taiki-e/subscriptions", "organizations_url": "https://api.github.com/users/taiki-e/orgs", "repos_url": "https://api.github.com/users/taiki-e/repos", "events_url": "https://api.github.com/users/taiki-e/events{/privacy}", "received_events_url": "https://api.github.com/users/taiki-e/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "34f59eb9c5b3ced90e77fff9983a1711e06b731a", "url": "https://api.github.com/repos/rust-lang/rust/commits/34f59eb9c5b3ced90e77fff9983a1711e06b731a", "html_url": "https://github.com/rust-lang/rust/commit/34f59eb9c5b3ced90e77fff9983a1711e06b731a"}], "stats": {"total": 342, "additions": 342, "deletions": 0}, "files": [{"sha": "dcfc9ba511d740a7ec03c0e2a25080a81e69fb5d", "filename": "src/test/ui/self/arbitrary_self_types_pin_lifetime_impl_trait.nll.stderr", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/05f67a297a25dc33f2d739dbccc42f44bc6d7ab9/src%2Ftest%2Fui%2Fself%2Farbitrary_self_types_pin_lifetime_impl_trait.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/05f67a297a25dc33f2d739dbccc42f44bc6d7ab9/src%2Ftest%2Fui%2Fself%2Farbitrary_self_types_pin_lifetime_impl_trait.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fself%2Farbitrary_self_types_pin_lifetime_impl_trait.nll.stderr?ref=05f67a297a25dc33f2d739dbccc42f44bc6d7ab9", "patch": "@@ -0,0 +1,14 @@\n+error: lifetime may not live long enough\n+  --> $DIR/arbitrary_self_types_pin_lifetime_impl_trait.rs:8:31\n+   |\n+LL |     fn f(self: Pin<&Self>) -> impl Clone { self }\n+   |                    -          ^^^^^^^^^^ opaque type requires that `'1` must outlive `'static`\n+   |                    |\n+   |                    let's call the lifetime of this reference `'1`\n+help: to allow this `impl Trait` to capture borrowed data with lifetime `'1`, add `'_` as a constraint\n+   |\n+LL |     fn f(self: Pin<&Self>) -> impl Clone + '_ { self }\n+   |                               ^^^^^^^^^^^^^^^\n+\n+error: aborting due to previous error\n+"}, {"sha": "8a0f1a804ad826efbadab059e809da3b39ff5499", "filename": "src/test/ui/self/arbitrary_self_types_pin_lifetime_mismatch.nll.stderr", "status": "added", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/05f67a297a25dc33f2d739dbccc42f44bc6d7ab9/src%2Ftest%2Fui%2Fself%2Farbitrary_self_types_pin_lifetime_mismatch.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/05f67a297a25dc33f2d739dbccc42f44bc6d7ab9/src%2Ftest%2Fui%2Fself%2Farbitrary_self_types_pin_lifetime_mismatch.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fself%2Farbitrary_self_types_pin_lifetime_mismatch.nll.stderr?ref=05f67a297a25dc33f2d739dbccc42f44bc6d7ab9", "patch": "@@ -0,0 +1,28 @@\n+error: lifetime may not live long enough\n+  --> $DIR/arbitrary_self_types_pin_lifetime_mismatch.rs:8:46\n+   |\n+LL |     fn a(self: Pin<&Foo>, f: &Foo) -> &Foo { f }\n+   |                    -         -               ^ function was supposed to return data with lifetime `'2` but it is returning data with lifetime `'1`\n+   |                    |         |\n+   |                    |         let's call the lifetime of this reference `'1`\n+   |                    let's call the lifetime of this reference `'2`\n+\n+error: lifetime may not live long enough\n+  --> $DIR/arbitrary_self_types_pin_lifetime_mismatch.rs:10:69\n+   |\n+LL |     fn c(self: Pin<&Self>, f: &Foo, g: &Foo) -> (Pin<&Foo>, &Foo) { (self, f) }\n+   |                    -          -                                     ^^^^^^^^^ function was supposed to return data with lifetime `'2` but it is returning data with lifetime `'1`\n+   |                    |          |\n+   |                    |          let's call the lifetime of this reference `'1`\n+   |                    let's call the lifetime of this reference `'2`\n+\n+error: lifetime may not live long enough\n+  --> $DIR/arbitrary_self_types_pin_lifetime_mismatch.rs:15:58\n+   |\n+LL |     fn bar<'a>(self: Alias<&Self>, arg: &'a ()) -> &() { arg }\n+   |            --  ---- has type `std::pin::Pin<&'1 Foo>`    ^^^ function was supposed to return data with lifetime `'1` but it is returning data with lifetime `'a`\n+   |            |\n+   |            lifetime `'a` defined here\n+\n+error: aborting due to 3 previous errors\n+"}, {"sha": "e97a01e746d4b8e5a52bb872a6d6e1ed6466c339", "filename": "src/test/ui/self/elision/lt-ref-self.nll.stderr", "status": "added", "additions": 62, "deletions": 0, "changes": 62, "blob_url": "https://github.com/rust-lang/rust/blob/05f67a297a25dc33f2d739dbccc42f44bc6d7ab9/src%2Ftest%2Fui%2Fself%2Felision%2Flt-ref-self.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/05f67a297a25dc33f2d739dbccc42f44bc6d7ab9/src%2Ftest%2Fui%2Fself%2Felision%2Flt-ref-self.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fself%2Felision%2Flt-ref-self.nll.stderr?ref=05f67a297a25dc33f2d739dbccc42f44bc6d7ab9", "patch": "@@ -0,0 +1,62 @@\n+error: lifetime may not live long enough\n+  --> $DIR/lt-ref-self.rs:12:9\n+   |\n+LL |     fn ref_self(&self, f: &u32) -> &u32 {\n+   |                 -         - let's call the lifetime of this reference `'1`\n+   |                 |\n+   |                 let's call the lifetime of this reference `'2`\n+LL |         f\n+   |         ^ function was supposed to return data with lifetime `'2` but it is returning data with lifetime `'1`\n+\n+error: lifetime may not live long enough\n+  --> $DIR/lt-ref-self.rs:18:9\n+   |\n+LL |     fn ref_Self(self: &Self, f: &u32) -> &u32 {\n+   |                       -         - let's call the lifetime of this reference `'1`\n+   |                       |\n+   |                       let's call the lifetime of this reference `'2`\n+LL |         f\n+   |         ^ function was supposed to return data with lifetime `'2` but it is returning data with lifetime `'1`\n+\n+error: lifetime may not live long enough\n+  --> $DIR/lt-ref-self.rs:22:9\n+   |\n+LL |     fn box_ref_Self(self: Box<&Self>, f: &u32) -> &u32 {\n+   |                               -          - let's call the lifetime of this reference `'1`\n+   |                               |\n+   |                               let's call the lifetime of this reference `'2`\n+LL |         f\n+   |         ^ function was supposed to return data with lifetime `'2` but it is returning data with lifetime `'1`\n+\n+error: lifetime may not live long enough\n+  --> $DIR/lt-ref-self.rs:26:9\n+   |\n+LL |     fn pin_ref_Self(self: Pin<&Self>, f: &u32) -> &u32 {\n+   |                               -          - let's call the lifetime of this reference `'1`\n+   |                               |\n+   |                               let's call the lifetime of this reference `'2`\n+LL |         f\n+   |         ^ function was supposed to return data with lifetime `'2` but it is returning data with lifetime `'1`\n+\n+error: lifetime may not live long enough\n+  --> $DIR/lt-ref-self.rs:30:9\n+   |\n+LL |     fn box_box_ref_Self(self: Box<Box<&Self>>, f: &u32) -> &u32 {\n+   |                                       -           - let's call the lifetime of this reference `'1`\n+   |                                       |\n+   |                                       let's call the lifetime of this reference `'2`\n+LL |         f\n+   |         ^ function was supposed to return data with lifetime `'2` but it is returning data with lifetime `'1`\n+\n+error: lifetime may not live long enough\n+  --> $DIR/lt-ref-self.rs:34:9\n+   |\n+LL |     fn box_pin_Self(self: Box<Pin<&Self>>, f: &u32) -> &u32 {\n+   |                                   -           - let's call the lifetime of this reference `'1`\n+   |                                   |\n+   |                                   let's call the lifetime of this reference `'2`\n+LL |         f\n+   |         ^ function was supposed to return data with lifetime `'2` but it is returning data with lifetime `'1`\n+\n+error: aborting due to 6 previous errors\n+"}, {"sha": "3a8ae3fdcba8c0ff759472b613d5d56bb719fde6", "filename": "src/test/ui/self/elision/ref-mut-self.nll.stderr", "status": "added", "additions": 62, "deletions": 0, "changes": 62, "blob_url": "https://github.com/rust-lang/rust/blob/05f67a297a25dc33f2d739dbccc42f44bc6d7ab9/src%2Ftest%2Fui%2Fself%2Felision%2Fref-mut-self.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/05f67a297a25dc33f2d739dbccc42f44bc6d7ab9/src%2Ftest%2Fui%2Fself%2Felision%2Fref-mut-self.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fself%2Felision%2Fref-mut-self.nll.stderr?ref=05f67a297a25dc33f2d739dbccc42f44bc6d7ab9", "patch": "@@ -0,0 +1,62 @@\n+error: lifetime may not live long enough\n+  --> $DIR/ref-mut-self.rs:12:9\n+   |\n+LL |     fn ref_self(&mut self, f: &u32) -> &u32 {\n+   |                 -             - let's call the lifetime of this reference `'1`\n+   |                 |\n+   |                 let's call the lifetime of this reference `'2`\n+LL |         f\n+   |         ^ function was supposed to return data with lifetime `'2` but it is returning data with lifetime `'1`\n+\n+error: lifetime may not live long enough\n+  --> $DIR/ref-mut-self.rs:18:9\n+   |\n+LL |     fn ref_Self(self: &mut Self, f: &u32) -> &u32 {\n+   |                       -             - let's call the lifetime of this reference `'1`\n+   |                       |\n+   |                       let's call the lifetime of this reference `'2`\n+LL |         f\n+   |         ^ function was supposed to return data with lifetime `'2` but it is returning data with lifetime `'1`\n+\n+error: lifetime may not live long enough\n+  --> $DIR/ref-mut-self.rs:22:9\n+   |\n+LL |     fn box_ref_Self(self: Box<&mut Self>, f: &u32) -> &u32 {\n+   |                               -              - let's call the lifetime of this reference `'1`\n+   |                               |\n+   |                               let's call the lifetime of this reference `'2`\n+LL |         f\n+   |         ^ function was supposed to return data with lifetime `'2` but it is returning data with lifetime `'1`\n+\n+error: lifetime may not live long enough\n+  --> $DIR/ref-mut-self.rs:26:9\n+   |\n+LL |     fn pin_ref_Self(self: Pin<&mut Self>, f: &u32) -> &u32 {\n+   |                               -              - let's call the lifetime of this reference `'1`\n+   |                               |\n+   |                               let's call the lifetime of this reference `'2`\n+LL |         f\n+   |         ^ function was supposed to return data with lifetime `'2` but it is returning data with lifetime `'1`\n+\n+error: lifetime may not live long enough\n+  --> $DIR/ref-mut-self.rs:30:9\n+   |\n+LL |     fn box_box_ref_Self(self: Box<Box<&mut Self>>, f: &u32) -> &u32 {\n+   |                                       -               - let's call the lifetime of this reference `'1`\n+   |                                       |\n+   |                                       let's call the lifetime of this reference `'2`\n+LL |         f\n+   |         ^ function was supposed to return data with lifetime `'2` but it is returning data with lifetime `'1`\n+\n+error: lifetime may not live long enough\n+  --> $DIR/ref-mut-self.rs:34:9\n+   |\n+LL |     fn box_pin_ref_Self(self: Box<Pin<&mut Self>>, f: &u32) -> &u32 {\n+   |                                       -               - let's call the lifetime of this reference `'1`\n+   |                                       |\n+   |                                       let's call the lifetime of this reference `'2`\n+LL |         f\n+   |         ^ function was supposed to return data with lifetime `'2` but it is returning data with lifetime `'1`\n+\n+error: aborting due to 6 previous errors\n+"}, {"sha": "66152ba40a5f5bdf51eeeb82a93990c87d28cf3f", "filename": "src/test/ui/self/elision/ref-mut-struct.nll.stderr", "status": "added", "additions": 52, "deletions": 0, "changes": 52, "blob_url": "https://github.com/rust-lang/rust/blob/05f67a297a25dc33f2d739dbccc42f44bc6d7ab9/src%2Ftest%2Fui%2Fself%2Felision%2Fref-mut-struct.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/05f67a297a25dc33f2d739dbccc42f44bc6d7ab9/src%2Ftest%2Fui%2Fself%2Felision%2Fref-mut-struct.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fself%2Felision%2Fref-mut-struct.nll.stderr?ref=05f67a297a25dc33f2d739dbccc42f44bc6d7ab9", "patch": "@@ -0,0 +1,52 @@\n+error: lifetime may not live long enough\n+  --> $DIR/ref-mut-struct.rs:12:9\n+   |\n+LL |     fn ref_Struct(self: &mut Struct, f: &u32) -> &u32 {\n+   |                         -               - let's call the lifetime of this reference `'1`\n+   |                         |\n+   |                         let's call the lifetime of this reference `'2`\n+LL |         f\n+   |         ^ function was supposed to return data with lifetime `'2` but it is returning data with lifetime `'1`\n+\n+error: lifetime may not live long enough\n+  --> $DIR/ref-mut-struct.rs:16:9\n+   |\n+LL |     fn box_ref_Struct(self: Box<&mut Struct>, f: &u32) -> &u32 {\n+   |                                 -                - let's call the lifetime of this reference `'1`\n+   |                                 |\n+   |                                 let's call the lifetime of this reference `'2`\n+LL |         f\n+   |         ^ function was supposed to return data with lifetime `'2` but it is returning data with lifetime `'1`\n+\n+error: lifetime may not live long enough\n+  --> $DIR/ref-mut-struct.rs:20:9\n+   |\n+LL |     fn pin_ref_Struct(self: Pin<&mut Struct>, f: &u32) -> &u32 {\n+   |                                 -                - let's call the lifetime of this reference `'1`\n+   |                                 |\n+   |                                 let's call the lifetime of this reference `'2`\n+LL |         f\n+   |         ^ function was supposed to return data with lifetime `'2` but it is returning data with lifetime `'1`\n+\n+error: lifetime may not live long enough\n+  --> $DIR/ref-mut-struct.rs:24:9\n+   |\n+LL |     fn box_box_ref_Struct(self: Box<Box<&mut Struct>>, f: &u32) -> &u32 {\n+   |                                         -                 - let's call the lifetime of this reference `'1`\n+   |                                         |\n+   |                                         let's call the lifetime of this reference `'2`\n+LL |         f\n+   |         ^ function was supposed to return data with lifetime `'2` but it is returning data with lifetime `'1`\n+\n+error: lifetime may not live long enough\n+  --> $DIR/ref-mut-struct.rs:28:9\n+   |\n+LL |     fn box_pin_ref_Struct(self: Box<Pin<&mut Struct>>, f: &u32) -> &u32 {\n+   |                                         -                 - let's call the lifetime of this reference `'1`\n+   |                                         |\n+   |                                         let's call the lifetime of this reference `'2`\n+LL |         f\n+   |         ^ function was supposed to return data with lifetime `'2` but it is returning data with lifetime `'1`\n+\n+error: aborting due to 5 previous errors\n+"}, {"sha": "20045be0527a4a233b03d0db20e26525a58906cc", "filename": "src/test/ui/self/elision/ref-self.nll.stderr", "status": "added", "additions": 72, "deletions": 0, "changes": 72, "blob_url": "https://github.com/rust-lang/rust/blob/05f67a297a25dc33f2d739dbccc42f44bc6d7ab9/src%2Ftest%2Fui%2Fself%2Felision%2Fref-self.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/05f67a297a25dc33f2d739dbccc42f44bc6d7ab9/src%2Ftest%2Fui%2Fself%2Felision%2Fref-self.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fself%2Felision%2Fref-self.nll.stderr?ref=05f67a297a25dc33f2d739dbccc42f44bc6d7ab9", "patch": "@@ -0,0 +1,72 @@\n+error: lifetime may not live long enough\n+  --> $DIR/ref-self.rs:21:9\n+   |\n+LL |     fn ref_self(&self, f: &u32) -> &u32 {\n+   |                 -         - let's call the lifetime of this reference `'1`\n+   |                 |\n+   |                 let's call the lifetime of this reference `'2`\n+LL |         f\n+   |         ^ function was supposed to return data with lifetime `'2` but it is returning data with lifetime `'1`\n+\n+error: lifetime may not live long enough\n+  --> $DIR/ref-self.rs:27:9\n+   |\n+LL |     fn ref_Self(self: &Self, f: &u32) -> &u32 {\n+   |                       -         - let's call the lifetime of this reference `'1`\n+   |                       |\n+   |                       let's call the lifetime of this reference `'2`\n+LL |         f\n+   |         ^ function was supposed to return data with lifetime `'2` but it is returning data with lifetime `'1`\n+\n+error: lifetime may not live long enough\n+  --> $DIR/ref-self.rs:31:9\n+   |\n+LL |     fn box_ref_Self(self: Box<&Self>, f: &u32) -> &u32 {\n+   |                               -          - let's call the lifetime of this reference `'1`\n+   |                               |\n+   |                               let's call the lifetime of this reference `'2`\n+LL |         f\n+   |         ^ function was supposed to return data with lifetime `'2` but it is returning data with lifetime `'1`\n+\n+error: lifetime may not live long enough\n+  --> $DIR/ref-self.rs:35:9\n+   |\n+LL |     fn pin_ref_Self(self: Pin<&Self>, f: &u32) -> &u32 {\n+   |                               -          - let's call the lifetime of this reference `'1`\n+   |                               |\n+   |                               let's call the lifetime of this reference `'2`\n+LL |         f\n+   |         ^ function was supposed to return data with lifetime `'2` but it is returning data with lifetime `'1`\n+\n+error: lifetime may not live long enough\n+  --> $DIR/ref-self.rs:39:9\n+   |\n+LL |     fn box_box_ref_Self(self: Box<Box<&Self>>, f: &u32) -> &u32 {\n+   |                                       -           - let's call the lifetime of this reference `'1`\n+   |                                       |\n+   |                                       let's call the lifetime of this reference `'2`\n+LL |         f\n+   |         ^ function was supposed to return data with lifetime `'2` but it is returning data with lifetime `'1`\n+\n+error: lifetime may not live long enough\n+  --> $DIR/ref-self.rs:43:9\n+   |\n+LL |     fn box_pin_ref_Self(self: Box<Pin<&Self>>, f: &u32) -> &u32 {\n+   |                                       -           - let's call the lifetime of this reference `'1`\n+   |                                       |\n+   |                                       let's call the lifetime of this reference `'2`\n+LL |         f\n+   |         ^ function was supposed to return data with lifetime `'2` but it is returning data with lifetime `'1`\n+\n+error: lifetime may not live long enough\n+  --> $DIR/ref-self.rs:47:9\n+   |\n+LL |     fn wrap_ref_Self_Self(self: Wrap<&Self, Self>, f: &u8) -> &u8 {\n+   |                                      -                - let's call the lifetime of this reference `'1`\n+   |                                      |\n+   |                                      let's call the lifetime of this reference `'2`\n+LL |         f\n+   |         ^ function was supposed to return data with lifetime `'2` but it is returning data with lifetime `'1`\n+\n+error: aborting due to 7 previous errors\n+"}, {"sha": "a258bc9f7439038b5f6498418312edab3ae495c5", "filename": "src/test/ui/self/elision/ref-struct.nll.stderr", "status": "added", "additions": 52, "deletions": 0, "changes": 52, "blob_url": "https://github.com/rust-lang/rust/blob/05f67a297a25dc33f2d739dbccc42f44bc6d7ab9/src%2Ftest%2Fui%2Fself%2Felision%2Fref-struct.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/05f67a297a25dc33f2d739dbccc42f44bc6d7ab9/src%2Ftest%2Fui%2Fself%2Felision%2Fref-struct.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fself%2Felision%2Fref-struct.nll.stderr?ref=05f67a297a25dc33f2d739dbccc42f44bc6d7ab9", "patch": "@@ -0,0 +1,52 @@\n+error: lifetime may not live long enough\n+  --> $DIR/ref-struct.rs:12:9\n+   |\n+LL |     fn ref_Struct(self: &Struct, f: &u32) -> &u32 {\n+   |                         -           - let's call the lifetime of this reference `'1`\n+   |                         |\n+   |                         let's call the lifetime of this reference `'2`\n+LL |         f\n+   |         ^ function was supposed to return data with lifetime `'2` but it is returning data with lifetime `'1`\n+\n+error: lifetime may not live long enough\n+  --> $DIR/ref-struct.rs:16:9\n+   |\n+LL |     fn box_ref_Struct(self: Box<&Struct>, f: &u32) -> &u32 {\n+   |                                 -            - let's call the lifetime of this reference `'1`\n+   |                                 |\n+   |                                 let's call the lifetime of this reference `'2`\n+LL |         f\n+   |         ^ function was supposed to return data with lifetime `'2` but it is returning data with lifetime `'1`\n+\n+error: lifetime may not live long enough\n+  --> $DIR/ref-struct.rs:20:9\n+   |\n+LL |     fn pin_ref_Struct(self: Pin<&Struct>, f: &u32) -> &u32 {\n+   |                                 -            - let's call the lifetime of this reference `'1`\n+   |                                 |\n+   |                                 let's call the lifetime of this reference `'2`\n+LL |         f\n+   |         ^ function was supposed to return data with lifetime `'2` but it is returning data with lifetime `'1`\n+\n+error: lifetime may not live long enough\n+  --> $DIR/ref-struct.rs:24:9\n+   |\n+LL |     fn box_box_ref_Struct(self: Box<Box<&Struct>>, f: &u32) -> &u32 {\n+   |                                         -             - let's call the lifetime of this reference `'1`\n+   |                                         |\n+   |                                         let's call the lifetime of this reference `'2`\n+LL |         f\n+   |         ^ function was supposed to return data with lifetime `'2` but it is returning data with lifetime `'1`\n+\n+error: lifetime may not live long enough\n+  --> $DIR/ref-struct.rs:28:9\n+   |\n+LL |     fn box_pin_Struct(self: Box<Pin<&Struct>>, f: &u32) -> &u32 {\n+   |                                     -             - let's call the lifetime of this reference `'1`\n+   |                                     |\n+   |                                     let's call the lifetime of this reference `'2`\n+LL |         f\n+   |         ^ function was supposed to return data with lifetime `'2` but it is returning data with lifetime `'1`\n+\n+error: aborting due to 5 previous errors\n+"}]}