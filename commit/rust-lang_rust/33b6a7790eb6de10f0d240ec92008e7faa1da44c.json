{"sha": "33b6a7790eb6de10f0d240ec92008e7faa1da44c", "node_id": "C_kwDOAAsO6NoAKDMzYjZhNzc5MGViNmRlMTBmMGQyNDBlYzkyMDA4ZTdmYWExZGE0NGM", "commit": {"author": {"name": "Oli Scherer", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2022-12-05T16:43:06Z"}, "committer": {"name": "Oli Scherer", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2023-01-12T17:14:17Z"}, "message": "Remove `untracked_crate` field and instead pass it along with the resolver.", "tree": {"sha": "8f265d27ada4ecb736be2da864eacd7f5df13890", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8f265d27ada4ecb736be2da864eacd7f5df13890"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/33b6a7790eb6de10f0d240ec92008e7faa1da44c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/33b6a7790eb6de10f0d240ec92008e7faa1da44c", "html_url": "https://github.com/rust-lang/rust/commit/33b6a7790eb6de10f0d240ec92008e7faa1da44c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/33b6a7790eb6de10f0d240ec92008e7faa1da44c/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "194b4a2adbda6809d9fd878bfbb4998f0a0e90bb", "url": "https://api.github.com/repos/rust-lang/rust/commits/194b4a2adbda6809d9fd878bfbb4998f0a0e90bb", "html_url": "https://github.com/rust-lang/rust/commit/194b4a2adbda6809d9fd878bfbb4998f0a0e90bb"}], "stats": {"total": 21, "additions": 9, "deletions": 12}, "files": [{"sha": "41d4a5679f1a0b2822396af1256c20e5497350a0", "filename": "compiler/rustc_ast_lowering/src/lib.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/33b6a7790eb6de10f0d240ec92008e7faa1da44c/compiler%2Frustc_ast_lowering%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/33b6a7790eb6de10f0d240ec92008e7faa1da44c/compiler%2Frustc_ast_lowering%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_ast_lowering%2Fsrc%2Flib.rs?ref=33b6a7790eb6de10f0d240ec92008e7faa1da44c", "patch": "@@ -416,8 +416,7 @@ fn compute_hir_hash(\n \n pub fn lower_to_hir(tcx: TyCtxt<'_>, (): ()) -> hir::Crate<'_> {\n     let sess = tcx.sess;\n-    let krate = tcx.untracked_crate.steal();\n-    let mut resolver = tcx.resolver_for_lowering(()).steal();\n+    let (mut resolver, krate) = tcx.resolver_for_lowering(()).steal();\n \n     let ast_index = index_crate(&resolver.node_id_to_def_id, &krate);\n     let mut owners = IndexVec::from_fn_n("}, {"sha": "62441646b7579196f1a702e4289ca8ed23b70495", "filename": "compiler/rustc_interface/src/passes.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/33b6a7790eb6de10f0d240ec92008e7faa1da44c/compiler%2Frustc_interface%2Fsrc%2Fpasses.rs", "raw_url": "https://github.com/rust-lang/rust/raw/33b6a7790eb6de10f0d240ec92008e7faa1da44c/compiler%2Frustc_interface%2Fsrc%2Fpasses.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_interface%2Fsrc%2Fpasses.rs?ref=33b6a7790eb6de10f0d240ec92008e7faa1da44c", "patch": "@@ -818,7 +818,6 @@ pub fn create_global_ctxt<'tcx>(\n                 arena,\n                 hir_arena,\n                 untracked,\n-                krate,\n                 dep_graph,\n                 queries.on_disk_cache.as_ref().map(OnDiskCache::as_dyn),\n                 queries.as_dyn(),\n@@ -831,7 +830,9 @@ pub fn create_global_ctxt<'tcx>(\n     let mut qcx = QueryContext { gcx };\n     qcx.enter(|tcx| {\n         let feed = tcx.feed_unit_query();\n-        feed.resolver_for_lowering(tcx.arena.alloc(Steal::new(untracked_resolver_for_lowering)));\n+        feed.resolver_for_lowering(\n+            tcx.arena.alloc(Steal::new((untracked_resolver_for_lowering, krate))),\n+        );\n         feed.resolutions(tcx.arena.alloc(untracked_resolutions));\n         let feed = tcx.feed_local_crate();\n         feed.crate_name(crate_name);"}, {"sha": "9ab2d4c2106a04e9fa3726eb219b5a9c58ab06e0", "filename": "compiler/rustc_middle/src/arena.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/33b6a7790eb6de10f0d240ec92008e7faa1da44c/compiler%2Frustc_middle%2Fsrc%2Farena.rs", "raw_url": "https://github.com/rust-lang/rust/raw/33b6a7790eb6de10f0d240ec92008e7faa1da44c/compiler%2Frustc_middle%2Fsrc%2Farena.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Farena.rs?ref=33b6a7790eb6de10f0d240ec92008e7faa1da44c", "patch": "@@ -30,7 +30,10 @@ macro_rules! arena_types {\n             [decode] typeck_results: rustc_middle::ty::TypeckResults<'tcx>,\n             [decode] borrowck_result:\n                 rustc_middle::mir::BorrowCheckResult<'tcx>,\n-            [] resolver: rustc_data_structures::steal::Steal<rustc_middle::ty::ResolverAstLowering>,\n+            [] resolver: rustc_data_structures::steal::Steal<(\n+                rustc_middle::ty::ResolverAstLowering,\n+                rustc_data_structures::sync::Lrc<rustc_ast::Crate>,\n+            )>,\n             [] resolutions: rustc_middle::ty::ResolverGlobalCtxt,\n             [decode] unsafety_check_result: rustc_middle::mir::UnsafetyCheckResult,\n             [decode] code_region: rustc_middle::mir::coverage::CodeRegion,"}, {"sha": "88048c9775cb29e8e592bf49c397d9d535820817", "filename": "compiler/rustc_middle/src/query/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/33b6a7790eb6de10f0d240ec92008e7faa1da44c/compiler%2Frustc_middle%2Fsrc%2Fquery%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/33b6a7790eb6de10f0d240ec92008e7faa1da44c/compiler%2Frustc_middle%2Fsrc%2Fquery%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fquery%2Fmod.rs?ref=33b6a7790eb6de10f0d240ec92008e7faa1da44c", "patch": "@@ -32,7 +32,7 @@ rustc_queries! {\n         desc { \"getting the resolver outputs\" }\n     }\n \n-    query resolver_for_lowering(_: ()) -> &'tcx Steal<ty::ResolverAstLowering> {\n+    query resolver_for_lowering(_: ()) -> &'tcx Steal<(ty::ResolverAstLowering, Lrc<ast::Crate>)> {\n         feedable\n         no_hash\n         desc { \"getting the resolver for lowering\" }"}, {"sha": "60c7d9ad3d0c8e0cc4be320fb076924750084d48", "filename": "compiler/rustc_middle/src/ty/context.rs", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/33b6a7790eb6de10f0d240ec92008e7faa1da44c/compiler%2Frustc_middle%2Fsrc%2Fty%2Fcontext.rs", "raw_url": "https://github.com/rust-lang/rust/raw/33b6a7790eb6de10f0d240ec92008e7faa1da44c/compiler%2Frustc_middle%2Fsrc%2Fty%2Fcontext.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fty%2Fcontext.rs?ref=33b6a7790eb6de10f0d240ec92008e7faa1da44c", "patch": "@@ -432,10 +432,6 @@ pub struct GlobalCtxt<'tcx> {\n \n     untracked: Untracked,\n \n-    /// The entire crate as AST. This field serves as the input for the hir_crate query,\n-    /// which lowers it from AST to HIR. It must not be read or used by anything else.\n-    pub untracked_crate: Steal<Lrc<ast::Crate>>,\n-\n     /// This provides access to the incremental compilation on-disk cache for query results.\n     /// Do not access this directly. It is only meant to be used by\n     /// `DepGraph::try_mark_green()` and the query infrastructure.\n@@ -591,7 +587,6 @@ impl<'tcx> TyCtxt<'tcx> {\n         arena: &'tcx WorkerLocal<Arena<'tcx>>,\n         hir_arena: &'tcx WorkerLocal<hir::Arena<'tcx>>,\n         untracked: Untracked,\n-        krate: Lrc<ast::Crate>,\n         dep_graph: DepGraph,\n         on_disk_cache: Option<&'tcx dyn OnDiskCache<'tcx>>,\n         queries: &'tcx dyn query::QueryEngine<'tcx>,\n@@ -618,7 +613,6 @@ impl<'tcx> TyCtxt<'tcx> {\n             lifetimes: common_lifetimes,\n             consts: common_consts,\n             untracked,\n-            untracked_crate: Steal::new(krate),\n             on_disk_cache,\n             queries,\n             query_caches: query::QueryCaches::default(),"}]}