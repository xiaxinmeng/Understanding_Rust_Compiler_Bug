{"sha": "9f886414505cce50eae02fb241b83701dc61c837", "node_id": "MDY6Q29tbWl0NzI0NzEyOjlmODg2NDE0NTA1Y2NlNTBlYWUwMmZiMjQxYjgzNzAxZGM2MWM4Mzc=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2019-02-02T00:12:32Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2019-02-02T00:12:32Z"}, "message": "Auto merge of #3731 - phansch:travis, r=phansch\n\nTravis: Don't run integration tests on every PR commit\n\nThis does not save Clippy any time but it makes sure that the concurrent\nbuild limit is not reached as quickly for the `rust-lang` Travis\naccount.\n\nI can't create a permalink to the discussion somehow, so here's an\nexcerpt from the Infra channel:\n\n```\n[11:57 PM] pietroalbini: there is a clippy build (20 jobs) and a packed_simd one (42 builders)  and a rustc one which isn't scheduling atm\n[11:58 PM] pietroalbini: I don't think there is a way to prioritize rustc builds in the queue on travis, right?\n[12:22 AM] alexcrichton: pietro: I don't think so no\n[12:22 AM] alexcrichton: If it's a problem we should cull builds on other projects\n[12:22 AM] alexcrichton: The rust repo is the #1 priority\n```\n\nSince the integration tests are rarely failing these days, I think it's\nfine to not run them on every commit.\n\nIf needed, it's also still possible to do a complete test run with `@bors try`.", "tree": {"sha": "8f2d6ffec9765cfdfcc2e2ba1058c148bff7d863", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8f2d6ffec9765cfdfcc2e2ba1058c148bff7d863"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9f886414505cce50eae02fb241b83701dc61c837", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9f886414505cce50eae02fb241b83701dc61c837", "html_url": "https://github.com/rust-lang/rust/commit/9f886414505cce50eae02fb241b83701dc61c837", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9f886414505cce50eae02fb241b83701dc61c837/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2972d546021a3035a118c8e25df3e0f0ca2ef12c", "url": "https://api.github.com/repos/rust-lang/rust/commits/2972d546021a3035a118c8e25df3e0f0ca2ef12c", "html_url": "https://github.com/rust-lang/rust/commit/2972d546021a3035a118c8e25df3e0f0ca2ef12c"}, {"sha": "69d96c7cdf384309ad429e075ff6082c8b090667", "url": "https://api.github.com/repos/rust-lang/rust/commits/69d96c7cdf384309ad429e075ff6082c8b090667", "html_url": "https://github.com/rust-lang/rust/commit/69d96c7cdf384309ad429e075ff6082c8b090667"}], "stats": {"total": 33, "additions": 19, "deletions": 14}, "files": [{"sha": "d7b262255187236bd90de421b40e1b0256b496b4", "filename": ".travis.yml", "status": "modified", "additions": 19, "deletions": 14, "changes": 33, "blob_url": "https://github.com/rust-lang/rust/blob/9f886414505cce50eae02fb241b83701dc61c837/.travis.yml", "raw_url": "https://github.com/rust-lang/rust/raw/9f886414505cce50eae02fb241b83701dc61c837/.travis.yml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/.travis.yml?ref=9f886414505cce50eae02fb241b83701dc61c837", "patch": "@@ -39,40 +39,45 @@ install:\n matrix:\n   fast_finish: true\n   include:\n+    # Builds that are executed for every PR\n     - os: osx # run base tests on both platforms\n       env: BASE_TESTS=true\n     - os: linux\n       env: BASE_TESTS=true\n     - os: windows\n       env: CARGO_INCREMENTAL=0 BASE_TESTS=true\n+\n+    # Builds that are only executed when a PR is r+ed or a try build is started\n+    # We don't want to run these always because they go towards\n+    # the build limit within the Travis rust-lang account.\n     - env: INTEGRATION=rust-lang/cargo\n-      if: repo =~ /^rust-lang\\/rust-clippy$/\n+      if: repo =~ /^rust-lang\\/rust-clippy$/ AND branch IN (auto, try)\n     - env: INTEGRATION=rust-random/rand\n-      if: repo =~ /^rust-lang\\/rust-clippy$/\n+      if: repo =~ /^rust-lang\\/rust-clippy$/ AND branch IN (auto, try)\n     - env: INTEGRATION=rust-lang-nursery/stdsimd\n-      if: repo =~ /^rust-lang\\/rust-clippy$/\n+      if: repo =~ /^rust-lang\\/rust-clippy$/ AND branch IN (auto, try)\n     - env: INTEGRATION=rust-lang/rustfmt\n-      if: repo =~ /^rust-lang\\/rust-clippy$/\n+      if: repo =~ /^rust-lang\\/rust-clippy$/ AND branch IN (auto, try)\n     - env: INTEGRATION=rust-lang-nursery/futures-rs\n-      if: repo =~ /^rust-lang\\/rust-clippy$/\n+      if: repo =~ /^rust-lang\\/rust-clippy$/ AND branch IN (auto, try)\n     - env: INTEGRATION=rust-lang-nursery/failure\n-      if: repo =~ /^rust-lang\\/rust-clippy$/\n+      if: repo =~ /^rust-lang\\/rust-clippy$/ AND branch IN (auto, try)\n     - env: INTEGRATION=rust-lang-nursery/log\n-      if: repo =~ /^rust-lang\\/rust-clippy$/\n+      if: repo =~ /^rust-lang\\/rust-clippy$/ AND branch IN (auto, try)\n     - env: INTEGRATION=rust-lang-nursery/chalk\n-      if: repo =~ /^rust-lang\\/rust-clippy$/\n+      if: repo =~ /^rust-lang\\/rust-clippy$/ AND branch IN (auto, try)\n     - env: INTEGRATION=rust-lang/rls\n-      if: repo =~ /^rust-lang\\/rust-clippy$/\n+      if: repo =~ /^rust-lang\\/rust-clippy$/ AND branch IN (auto, try)\n     - env: INTEGRATION=chronotope/chrono\n-      if: repo =~ /^rust-lang\\/rust-clippy$/\n+      if: repo =~ /^rust-lang\\/rust-clippy$/ AND branch IN (auto, try)\n     - env: INTEGRATION=serde-rs/serde\n-      if: repo =~ /^rust-lang\\/rust-clippy$/\n+      if: repo =~ /^rust-lang\\/rust-clippy$/ AND branch IN (auto, try)\n     - env: INTEGRATION=Geal/nom\n-      if: repo =~ /^rust-lang\\/rust-clippy$/\n+      if: repo =~ /^rust-lang\\/rust-clippy$/ AND branch IN (auto, try)\n     - env: INTEGRATION=hyperium/hyper\n-      if: repo =~ /^rust-lang\\/rust-clippy$/\n+      if: repo =~ /^rust-lang\\/rust-clippy$/ AND branch IN (auto, try)\n     - env: INTEGRATION=bluss/rust-itertools\n-      if: repo =~ /^rust-lang\\/rust-clippy$/\n+      if: repo =~ /^rust-lang\\/rust-clippy$/ AND branch IN (auto, try)\n   allow_failures:\n   - os: windows\n     env: CARGO_INCREMENTAL=0 BASE_TESTS=true"}]}