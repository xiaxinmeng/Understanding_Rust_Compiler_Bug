{"sha": "66470d3217f27b5950c38a3af4a99e0ef12fa2c8", "node_id": "MDY6Q29tbWl0NzI0NzEyOjY2NDcwZDMyMTdmMjdiNTk1MGMzOGEzYWY0YTk5ZTBlZjEyZmEyYzg=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-12-04T07:10:41Z"}, "committer": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-12-20T21:53:40Z"}, "message": "recover `#[attr] if expr {}`", "tree": {"sha": "423921e10f1a61276c526800ce6e88f12edb39a1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/423921e10f1a61276c526800ce6e88f12edb39a1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/66470d3217f27b5950c38a3af4a99e0ef12fa2c8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/66470d3217f27b5950c38a3af4a99e0ef12fa2c8", "html_url": "https://github.com/rust-lang/rust/commit/66470d3217f27b5950c38a3af4a99e0ef12fa2c8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/66470d3217f27b5950c38a3af4a99e0ef12fa2c8/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c9e1f13f6eb9d21224c083eb07d894adffc7ec96", "url": "https://api.github.com/repos/rust-lang/rust/commits/c9e1f13f6eb9d21224c083eb07d894adffc7ec96", "html_url": "https://github.com/rust-lang/rust/commit/c9e1f13f6eb9d21224c083eb07d894adffc7ec96"}], "stats": {"total": 62, "additions": 54, "deletions": 8}, "files": [{"sha": "3de7f888724b4b45c044d13835d6773be4154842", "filename": "src/librustc_parse/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/66470d3217f27b5950c38a3af4a99e0ef12fa2c8/src%2Flibrustc_parse%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/66470d3217f27b5950c38a3af4a99e0ef12fa2c8/src%2Flibrustc_parse%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_parse%2Flib.rs?ref=66470d3217f27b5950c38a3af4a99e0ef12fa2c8", "patch": "@@ -2,6 +2,7 @@\n \n #![feature(bool_to_option)]\n #![feature(crate_visibility_modifier)]\n+#![feature(slice_patterns)]\n \n use syntax::ast;\n use syntax::print::pprust;"}, {"sha": "68af34a36bbec3264f7e52b65af02a7bf20aad66", "filename": "src/librustc_parse/parser/expr.rs", "status": "modified", "additions": 9, "deletions": 8, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/66470d3217f27b5950c38a3af4a99e0ef12fa2c8/src%2Flibrustc_parse%2Fparser%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/66470d3217f27b5950c38a3af4a99e0ef12fa2c8/src%2Flibrustc_parse%2Fparser%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_parse%2Fparser%2Fexpr.rs?ref=66470d3217f27b5950c38a3af4a99e0ef12fa2c8", "patch": "@@ -668,19 +668,20 @@ impl<'a> Parser<'a> {\n             expr.map(|mut expr| {\n                 attrs.extend::<Vec<_>>(expr.attrs.into());\n                 expr.attrs = attrs;\n-                match expr.kind {\n-                    ExprKind::If(..) if !expr.attrs.is_empty() => {\n-                        // Just point to the first attribute in there...\n-                        let span = expr.attrs[0].span;\n-                        self.span_err(span, \"attributes are not yet allowed on `if` expressions\");\n-                    }\n-                    _ => {}\n-                }\n+                self.error_attr_on_if_expr(&expr);\n                 expr\n             })\n         )\n     }\n \n+    fn error_attr_on_if_expr(&self, expr: &Expr) {\n+        if let (ExprKind::If(..), [a0, ..]) = (&expr.kind, &*expr.attrs) {\n+            // Just point to the first attribute in there...\n+            self.struct_span_err(a0.span, \"attributes are not yet allowed on `if` expressions\")\n+                .emit();\n+        }\n+    }\n+\n     fn parse_dot_or_call_expr_with_(&mut self, e0: P<Expr>, lo: Span) -> PResult<'a, P<Expr>> {\n         let mut e = e0;\n         let mut hi;"}, {"sha": "0d1f5be7b4930524cf00dece81f9a8dda4efb023", "filename": "src/test/ui/parser/recovery-attr-on-if.rs", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/66470d3217f27b5950c38a3af4a99e0ef12fa2c8/src%2Ftest%2Fui%2Fparser%2Frecovery-attr-on-if.rs", "raw_url": "https://github.com/rust-lang/rust/raw/66470d3217f27b5950c38a3af4a99e0ef12fa2c8/src%2Ftest%2Fui%2Fparser%2Frecovery-attr-on-if.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Frecovery-attr-on-if.rs?ref=66470d3217f27b5950c38a3af4a99e0ef12fa2c8", "patch": "@@ -0,0 +1,9 @@\n+fn main() {\n+    #[attr] if true {};\n+    //~^ ERROR cannot find attribute\n+    //~| ERROR attributes are not yet allowed on `if` expressions\n+    #[attr] if true {};\n+    //~^ ERROR cannot find attribute\n+    //~| ERROR attributes are not yet allowed on `if` expressions\n+    let _recovery_witness: () = 0; //~ ERROR mismatched types\n+}"}, {"sha": "a02846827c9ab34072d1c86f0d5177df634c4217", "filename": "src/test/ui/parser/recovery-attr-on-if.stderr", "status": "added", "additions": 35, "deletions": 0, "changes": 35, "blob_url": "https://github.com/rust-lang/rust/blob/66470d3217f27b5950c38a3af4a99e0ef12fa2c8/src%2Ftest%2Fui%2Fparser%2Frecovery-attr-on-if.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/66470d3217f27b5950c38a3af4a99e0ef12fa2c8/src%2Ftest%2Fui%2Fparser%2Frecovery-attr-on-if.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Frecovery-attr-on-if.stderr?ref=66470d3217f27b5950c38a3af4a99e0ef12fa2c8", "patch": "@@ -0,0 +1,35 @@\n+error: attributes are not yet allowed on `if` expressions\n+  --> $DIR/recovery-attr-on-if.rs:2:5\n+   |\n+LL |     #[attr] if true {};\n+   |     ^^^^^^^\n+\n+error: attributes are not yet allowed on `if` expressions\n+  --> $DIR/recovery-attr-on-if.rs:5:5\n+   |\n+LL |     #[attr] if true {};\n+   |     ^^^^^^^\n+\n+error: cannot find attribute `attr` in this scope\n+  --> $DIR/recovery-attr-on-if.rs:5:7\n+   |\n+LL |     #[attr] if true {};\n+   |       ^^^^\n+\n+error: cannot find attribute `attr` in this scope\n+  --> $DIR/recovery-attr-on-if.rs:2:7\n+   |\n+LL |     #[attr] if true {};\n+   |       ^^^^\n+\n+error[E0308]: mismatched types\n+  --> $DIR/recovery-attr-on-if.rs:8:33\n+   |\n+LL |     let _recovery_witness: () = 0;\n+   |                            --   ^ expected `()`, found integer\n+   |                            |\n+   |                            expected due to this\n+\n+error: aborting due to 5 previous errors\n+\n+For more information about this error, try `rustc --explain E0308`."}]}