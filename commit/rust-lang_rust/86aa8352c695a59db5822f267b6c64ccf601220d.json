{"sha": "86aa8352c695a59db5822f267b6c64ccf601220d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjg2YWE4MzUyYzY5NWE1OWRiNTgyMmYyNjdiNmM2NGNjZjYwMTIyMGQ=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2018-10-24T13:29:48Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2018-10-24T13:29:48Z"}, "message": "Work on miri installation and usage instructions", "tree": {"sha": "a7f396a9d7b496a4082763c5b64d5a0872c096f1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a7f396a9d7b496a4082763c5b64d5a0872c096f1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/86aa8352c695a59db5822f267b6c64ccf601220d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/86aa8352c695a59db5822f267b6c64ccf601220d", "html_url": "https://github.com/rust-lang/rust/commit/86aa8352c695a59db5822f267b6c64ccf601220d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/86aa8352c695a59db5822f267b6c64ccf601220d/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1cbed5ca3501e139babeaedf54cdc609cfbc9e02", "url": "https://api.github.com/repos/rust-lang/rust/commits/1cbed5ca3501e139babeaedf54cdc609cfbc9e02", "html_url": "https://github.com/rust-lang/rust/commit/1cbed5ca3501e139babeaedf54cdc609cfbc9e02"}], "stats": {"total": 39, "additions": 26, "deletions": 13}, "files": [{"sha": "c5ac8172999406ca188ed214b36db39f80087c0d", "filename": "README.md", "status": "modified", "additions": 26, "deletions": 13, "changes": 39, "blob_url": "https://github.com/rust-lang/rust/blob/86aa8352c695a59db5822f267b6c64ccf601220d/README.md", "raw_url": "https://github.com/rust-lang/rust/raw/86aa8352c695a59db5822f267b6c64ccf601220d/README.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/README.md?ref=86aa8352c695a59db5822f267b6c64ccf601220d", "patch": "@@ -7,15 +7,23 @@ undergraduate research course at the [University of Saskatchewan][usask].\n \n ## Building Miri\n \n-I recommend that you install [rustup][rustup] to obtain Rust.  Miri comes with a\n-`rust-version` file describing the latest supported nightly version of the Rust\n-compiler toolchain. Then all you have to do is:\n+I recommend that you install [rustup][rustup] to obtain Rust. Then all you have\n+to do is:\n \n ```sh\n cargo +nightly build\n ```\n \n-with `+nightly` replaced with the appropriate nightly version of Rust.\n+This uses the very latest Rust version.  If you experience any problem, refer to\n+the `rust-version` file which contains a particular Rust nightly version that\n+has been tested against the version of miri you are using.  Make sure to use\n+that particular `nightly-YYYY-MM-DD` whenever the instructions just say\n+`nightly`.\n+\n+To avoid repeating the nightly version all the time, you can use\n+`rustup override set nightly` (or `rustup override set nightly-YYYY-MM-DD`),\n+which means `nightly` Rust will automatically be used whenever you are working\n+in this directory.\n \n ## Running Miri\n \n@@ -41,18 +49,23 @@ Now you can run Miri against the libstd compiled by xargo:\n MIRI_SYSROOT=~/.xargo/HOST cargo +nightly run tests/run-pass-fullmir/hashmap.rs\n ```\n \n-Notice that you will have to re-run the last step of the preparations above when\n-your toolchain changes (e.g., when you update the nightly).\n-\n-You can also set `-Zmiri-start-fn` to make Miri start evaluation with the\n-`start_fn` lang item, instead of starting at the `main` function.\n+Notice that you will have to re-run the last step of the preparations above\n+(`xargo/build.sh`) when your toolchain changes (e.g., when you update the\n+nightly).\n \n ## Running Miri on your own project('s test suite)\n \n-Install Miri as a cargo subcommand with `cargo install +nightly --all-features --path .`.\n-\n-Compile your project and its dependencies against a MIR-enabled libstd as described\n-above:\n+Install Miri as a cargo subcommand with `cargo install +nightly --all-features\n+--path .`.  Be aware that if you used `rustup override set` to fix a particular\n+Rust version for the miri directory, that will *not* apply to your own project\n+directory!  You have to use a consistent Rust version for building miri and your\n+project for this to work, so remember to either always specify the nightly\n+version manually, overriding it in your project directory as well, or use\n+`rustup default nightly` (or `rustup default nightly-YYYY-MM-DD`) to globally\n+make `nightly` the default toolchain.\n+\n+We assume that you have prepared a MIR-enabled libstd as described above.  Now\n+compile your project and its dependencies against that libstd:\n \n 1. Run `cargo clean` to eliminate any cached dependencies that were built against\n the non-MIR `libstd`."}]}