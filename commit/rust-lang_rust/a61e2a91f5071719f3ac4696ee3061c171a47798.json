{"sha": "a61e2a91f5071719f3ac4696ee3061c171a47798", "node_id": "C_kwDOAAsO6NoAKGE2MWUyYTkxZjUwNzE3MTlmM2FjNDY5NmVlMzA2MWMxNzFhNDc3OTg", "commit": {"author": {"name": "Michael Goulet", "email": "michael@errs.io", "date": "2022-11-25T17:28:50Z"}, "committer": {"name": "Michael Goulet", "email": "michael@errs.io", "date": "2022-11-28T17:35:39Z"}, "message": "FnCtxt normalization stuff", "tree": {"sha": "be8a9bc156be4a6767323efbf21127c79c7754f5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/be8a9bc156be4a6767323efbf21127c79c7754f5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a61e2a91f5071719f3ac4696ee3061c171a47798", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a61e2a91f5071719f3ac4696ee3061c171a47798", "html_url": "https://github.com/rust-lang/rust/commit/a61e2a91f5071719f3ac4696ee3061c171a47798", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a61e2a91f5071719f3ac4696ee3061c171a47798/comments", "author": {"login": "compiler-errors", "id": 3674314, "node_id": "MDQ6VXNlcjM2NzQzMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3674314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/compiler-errors", "html_url": "https://github.com/compiler-errors", "followers_url": "https://api.github.com/users/compiler-errors/followers", "following_url": "https://api.github.com/users/compiler-errors/following{/other_user}", "gists_url": "https://api.github.com/users/compiler-errors/gists{/gist_id}", "starred_url": "https://api.github.com/users/compiler-errors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/compiler-errors/subscriptions", "organizations_url": "https://api.github.com/users/compiler-errors/orgs", "repos_url": "https://api.github.com/users/compiler-errors/repos", "events_url": "https://api.github.com/users/compiler-errors/events{/privacy}", "received_events_url": "https://api.github.com/users/compiler-errors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "compiler-errors", "id": 3674314, "node_id": "MDQ6VXNlcjM2NzQzMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3674314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/compiler-errors", "html_url": "https://github.com/compiler-errors", "followers_url": "https://api.github.com/users/compiler-errors/followers", "following_url": "https://api.github.com/users/compiler-errors/following{/other_user}", "gists_url": "https://api.github.com/users/compiler-errors/gists{/gist_id}", "starred_url": "https://api.github.com/users/compiler-errors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/compiler-errors/subscriptions", "organizations_url": "https://api.github.com/users/compiler-errors/orgs", "repos_url": "https://api.github.com/users/compiler-errors/repos", "events_url": "https://api.github.com/users/compiler-errors/events{/privacy}", "received_events_url": "https://api.github.com/users/compiler-errors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "82c07f09e52379c8388abd8ca5ea6df246f686b1", "url": "https://api.github.com/repos/rust-lang/rust/commits/82c07f09e52379c8388abd8ca5ea6df246f686b1", "html_url": "https://github.com/rust-lang/rust/commit/82c07f09e52379c8388abd8ca5ea6df246f686b1"}], "stats": {"total": 5, "additions": 2, "deletions": 3}, "files": [{"sha": "2ceda3511fe44642b1a822dcddd5eb8857e8da2b", "filename": "clippy_utils/src/ty.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/a61e2a91f5071719f3ac4696ee3061c171a47798/clippy_utils%2Fsrc%2Fty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a61e2a91f5071719f3ac4696ee3061c171a47798/clippy_utils%2Fsrc%2Fty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_utils%2Fsrc%2Fty.rs?ref=a61e2a91f5071719f3ac4696ee3061c171a47798", "patch": "@@ -22,8 +22,7 @@ use rustc_span::symbol::Ident;\n use rustc_span::{sym, Span, Symbol, DUMMY_SP};\n use rustc_target::abi::{Size, VariantIdx};\n use rustc_trait_selection::infer::InferCtxtExt;\n-use rustc_trait_selection::traits::NormalizeExt;\n-use rustc_trait_selection::traits::query::normalize::AtExt;\n+use rustc_trait_selection::traits::query::normalize::QueryNormalizeExt;\n use std::iter;\n \n use crate::{match_def_path, path_res, paths};\n@@ -284,7 +283,7 @@ fn is_normalizable_helper<'tcx>(\n     cache.insert(ty, false);\n     let infcx = cx.tcx.infer_ctxt().build();\n     let cause = rustc_middle::traits::ObligationCause::dummy();\n-    let result = if infcx.at(&cause, param_env).normalize(ty).is_ok() {\n+    let result = if infcx.at(&cause, param_env).query_normalize(ty).is_ok() {\n         match ty.kind() {\n             ty::Adt(def, substs) => def.variants().iter().all(|variant| {\n                 variant"}]}