{"sha": "11fc7852fe7304b84a3bb642a0ab2d60611df1e0", "node_id": "C_kwDOAAsO6NoAKDExZmM3ODUyZmU3MzA0Yjg0YTNiYjY0MmEwYWIyZDYwNjExZGYxZTA", "commit": {"author": {"name": "David Wood", "email": "david.wood@huawei.com", "date": "2022-08-31T11:06:22Z"}, "committer": {"name": "David Wood", "email": "david.wood@huawei.com", "date": "2022-08-31T12:48:11Z"}, "message": "lint: avoid linting diag functions with diag lints\n\nFunctions annotated with `#[rustc_lint_diagnostics]` are used by the\ndiagnostic migration lints to know when to lint, but functions that are\nannotated with this attribute shouldn't themselves be linted.\n\nSigned-off-by: David Wood <david.wood@huawei.com>", "tree": {"sha": "c0d6d7f09e07ea3043fade044700cdb6d96c5122", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c0d6d7f09e07ea3043fade044700cdb6d96c5122"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/11fc7852fe7304b84a3bb642a0ab2d60611df1e0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/11fc7852fe7304b84a3bb642a0ab2d60611df1e0", "html_url": "https://github.com/rust-lang/rust/commit/11fc7852fe7304b84a3bb642a0ab2d60611df1e0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/11fc7852fe7304b84a3bb642a0ab2d60611df1e0/comments", "author": {"login": "davidtwco", "id": 1295100, "node_id": "MDQ6VXNlcjEyOTUxMDA=", "avatar_url": "https://avatars.githubusercontent.com/u/1295100?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidtwco", "html_url": "https://github.com/davidtwco", "followers_url": "https://api.github.com/users/davidtwco/followers", "following_url": "https://api.github.com/users/davidtwco/following{/other_user}", "gists_url": "https://api.github.com/users/davidtwco/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidtwco/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidtwco/subscriptions", "organizations_url": "https://api.github.com/users/davidtwco/orgs", "repos_url": "https://api.github.com/users/davidtwco/repos", "events_url": "https://api.github.com/users/davidtwco/events{/privacy}", "received_events_url": "https://api.github.com/users/davidtwco/received_events", "type": "User", "site_admin": false}, "committer": {"login": "davidtwco", "id": 1295100, "node_id": "MDQ6VXNlcjEyOTUxMDA=", "avatar_url": "https://avatars.githubusercontent.com/u/1295100?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidtwco", "html_url": "https://github.com/davidtwco", "followers_url": "https://api.github.com/users/davidtwco/followers", "following_url": "https://api.github.com/users/davidtwco/following{/other_user}", "gists_url": "https://api.github.com/users/davidtwco/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidtwco/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidtwco/subscriptions", "organizations_url": "https://api.github.com/users/davidtwco/orgs", "repos_url": "https://api.github.com/users/davidtwco/repos", "events_url": "https://api.github.com/users/davidtwco/events{/privacy}", "received_events_url": "https://api.github.com/users/davidtwco/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7f442f8ba174fd4233a14ef4d7b577aa907db594", "url": "https://api.github.com/repos/rust-lang/rust/commits/7f442f8ba174fd4233a14ef4d7b577aa907db594", "html_url": "https://github.com/rust-lang/rust/commit/7f442f8ba174fd4233a14ef4d7b577aa907db594"}], "stats": {"total": 34, "additions": 24, "deletions": 10}, "files": [{"sha": "6d451f3090acb22c499aad8bd51c2eaab2eaa542", "filename": "compiler/rustc_lint/src/internal.rs", "status": "modified", "additions": 9, "deletions": 3, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/11fc7852fe7304b84a3bb642a0ab2d60611df1e0/compiler%2Frustc_lint%2Fsrc%2Finternal.rs", "raw_url": "https://github.com/rust-lang/rust/raw/11fc7852fe7304b84a3bb642a0ab2d60611df1e0/compiler%2Frustc_lint%2Fsrc%2Finternal.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_lint%2Fsrc%2Finternal.rs?ref=11fc7852fe7304b84a3bb642a0ab2d60611df1e0", "patch": "@@ -393,8 +393,14 @@ impl LateLintPass<'_> for Diagnostics {\n             return;\n         }\n \n+        let mut found_parent_with_attr = false;\n         let mut found_impl = false;\n-        for (_, parent) in cx.tcx.hir().parent_iter(expr.hir_id) {\n+        for (hir_id, parent) in cx.tcx.hir().parent_iter(expr.hir_id) {\n+            if let Some(owner_did) = hir_id.as_owner() {\n+                found_parent_with_attr = found_parent_with_attr\n+                    || cx.tcx.has_attr(owner_did.to_def_id(), sym::rustc_lint_diagnostics);\n+            }\n+\n             debug!(?parent);\n             if let Node::Item(Item { kind: ItemKind::Impl(impl_), .. }) = parent &&\n                 let Impl { of_trait: Some(of_trait), .. } = impl_ &&\n@@ -407,7 +413,7 @@ impl LateLintPass<'_> for Diagnostics {\n             }\n         }\n         debug!(?found_impl);\n-        if !found_impl {\n+        if !found_parent_with_attr && !found_impl {\n             cx.struct_span_lint(DIAGNOSTIC_OUTSIDE_OF_IMPL, span, |lint| {\n                 lint.build(fluent::lint::diag_out_of_impl).emit();\n             })\n@@ -425,7 +431,7 @@ impl LateLintPass<'_> for Diagnostics {\n             }\n         }\n         debug!(?found_diagnostic_message);\n-        if !found_diagnostic_message {\n+        if !found_parent_with_attr && !found_diagnostic_message {\n             cx.struct_span_lint(UNTRANSLATABLE_DIAGNOSTIC, span, |lint| {\n                 lint.build(fluent::lint::untranslatable_diag).emit();\n             })"}, {"sha": "0e449256153a2224949094a65297991e4b39938d", "filename": "src/test/ui-fulldeps/internal-lints/diagnostics.rs", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/11fc7852fe7304b84a3bb642a0ab2d60611df1e0/src%2Ftest%2Fui-fulldeps%2Finternal-lints%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/11fc7852fe7304b84a3bb642a0ab2d60611df1e0/src%2Ftest%2Fui-fulldeps%2Finternal-lints%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui-fulldeps%2Finternal-lints%2Fdiagnostics.rs?ref=11fc7852fe7304b84a3bb642a0ab2d60611df1e0", "patch": "@@ -1,6 +1,7 @@\n // compile-flags: -Z unstable-options\n \n #![crate_type = \"lib\"]\n+#![feature(rustc_attrs)]\n #![feature(rustc_private)]\n #![deny(rustc::untranslatable_diagnostic)]\n #![deny(rustc::diagnostic_outside_of_impl)]\n@@ -71,3 +72,10 @@ pub fn make_diagnostics<'a>(sess: &'a ParseSess) {\n     //~^ ERROR diagnostics should only be created in `SessionDiagnostic`/`AddSubdiagnostic` impls\n     //~^^ ERROR diagnostics should be created using translatable messages\n }\n+\n+// Check that `rustc_lint_diagnostics`-annotated functions aren't themselves linted.\n+\n+#[rustc_lint_diagnostics]\n+pub fn skipped_because_of_annotation<'a>(sess: &'a ParseSess) {\n+    let _diag = sess.struct_err(\"untranslatable diagnostic\"); // okay!\n+}"}, {"sha": "ed5105dabcd3ff8d686257031a5d6106df10d4b5", "filename": "src/test/ui-fulldeps/internal-lints/diagnostics.stderr", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/11fc7852fe7304b84a3bb642a0ab2d60611df1e0/src%2Ftest%2Fui-fulldeps%2Finternal-lints%2Fdiagnostics.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/11fc7852fe7304b84a3bb642a0ab2d60611df1e0/src%2Ftest%2Fui-fulldeps%2Finternal-lints%2Fdiagnostics.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui-fulldeps%2Finternal-lints%2Fdiagnostics.stderr?ref=11fc7852fe7304b84a3bb642a0ab2d60611df1e0", "patch": "@@ -1,41 +1,41 @@\n error: diagnostics should be created using translatable messages\n-  --> $DIR/diagnostics.rs:36:14\n+  --> $DIR/diagnostics.rs:37:14\n    |\n LL |         sess.struct_err(\"untranslatable diagnostic\")\n    |              ^^^^^^^^^^\n    |\n note: the lint level is defined here\n-  --> $DIR/diagnostics.rs:5:9\n+  --> $DIR/diagnostics.rs:6:9\n    |\n LL | #![deny(rustc::untranslatable_diagnostic)]\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: diagnostics should be created using translatable messages\n-  --> $DIR/diagnostics.rs:53:14\n+  --> $DIR/diagnostics.rs:54:14\n    |\n LL |         diag.note(\"untranslatable diagnostic\");\n    |              ^^^^\n \n error: diagnostics should only be created in `SessionDiagnostic`/`AddSubdiagnostic` impls\n-  --> $DIR/diagnostics.rs:67:22\n+  --> $DIR/diagnostics.rs:68:22\n    |\n LL |     let _diag = sess.struct_err(fluent::parser::expect_path);\n    |                      ^^^^^^^^^^\n    |\n note: the lint level is defined here\n-  --> $DIR/diagnostics.rs:6:9\n+  --> $DIR/diagnostics.rs:7:9\n    |\n LL | #![deny(rustc::diagnostic_outside_of_impl)]\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: diagnostics should only be created in `SessionDiagnostic`/`AddSubdiagnostic` impls\n-  --> $DIR/diagnostics.rs:70:22\n+  --> $DIR/diagnostics.rs:71:22\n    |\n LL |     let _diag = sess.struct_err(\"untranslatable diagnostic\");\n    |                      ^^^^^^^^^^\n \n error: diagnostics should be created using translatable messages\n-  --> $DIR/diagnostics.rs:70:22\n+  --> $DIR/diagnostics.rs:71:22\n    |\n LL |     let _diag = sess.struct_err(\"untranslatable diagnostic\");\n    |                      ^^^^^^^^^^"}]}