{"sha": "3119e634e178d8acaed4a2d4a9d52e3b76ae79cf", "node_id": "MDY6Q29tbWl0NzI0NzEyOjMxMTllNjM0ZTE3OGQ4YWNhZWQ0YTJkNGE5ZDUyZTNiNzZhZTc5Y2Y=", "commit": {"author": {"name": "Scott McMurray", "email": "scottmcm@users.noreply.github.com", "date": "2017-05-31T09:16:01Z"}, "committer": {"name": "Scott McMurray", "email": "scottmcm@users.noreply.github.com", "date": "2017-05-31T09:16:01Z"}, "message": "Add some try_trait ramblings to the unstable book", "tree": {"sha": "7e2a71210fa560c1d1a271bad30738491ff55449", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7e2a71210fa560c1d1a271bad30738491ff55449"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3119e634e178d8acaed4a2d4a9d52e3b76ae79cf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3119e634e178d8acaed4a2d4a9d52e3b76ae79cf", "html_url": "https://github.com/rust-lang/rust/commit/3119e634e178d8acaed4a2d4a9d52e3b76ae79cf", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3119e634e178d8acaed4a2d4a9d52e3b76ae79cf/comments", "author": {"login": "scottmcm", "id": 18526288, "node_id": "MDQ6VXNlcjE4NTI2Mjg4", "avatar_url": "https://avatars.githubusercontent.com/u/18526288?v=4", "gravatar_id": "", "url": "https://api.github.com/users/scottmcm", "html_url": "https://github.com/scottmcm", "followers_url": "https://api.github.com/users/scottmcm/followers", "following_url": "https://api.github.com/users/scottmcm/following{/other_user}", "gists_url": "https://api.github.com/users/scottmcm/gists{/gist_id}", "starred_url": "https://api.github.com/users/scottmcm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/scottmcm/subscriptions", "organizations_url": "https://api.github.com/users/scottmcm/orgs", "repos_url": "https://api.github.com/users/scottmcm/repos", "events_url": "https://api.github.com/users/scottmcm/events{/privacy}", "received_events_url": "https://api.github.com/users/scottmcm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "scottmcm", "id": 18526288, "node_id": "MDQ6VXNlcjE4NTI2Mjg4", "avatar_url": "https://avatars.githubusercontent.com/u/18526288?v=4", "gravatar_id": "", "url": "https://api.github.com/users/scottmcm", "html_url": "https://github.com/scottmcm", "followers_url": "https://api.github.com/users/scottmcm/followers", "following_url": "https://api.github.com/users/scottmcm/following{/other_user}", "gists_url": "https://api.github.com/users/scottmcm/gists{/gist_id}", "starred_url": "https://api.github.com/users/scottmcm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/scottmcm/subscriptions", "organizations_url": "https://api.github.com/users/scottmcm/orgs", "repos_url": "https://api.github.com/users/scottmcm/repos", "events_url": "https://api.github.com/users/scottmcm/events{/privacy}", "received_events_url": "https://api.github.com/users/scottmcm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7a87469af7be24f6653ab59be0f1a544f4f3eb80", "url": "https://api.github.com/repos/rust-lang/rust/commits/7a87469af7be24f6653ab59be0f1a544f4f3eb80", "html_url": "https://github.com/rust-lang/rust/commit/7a87469af7be24f6653ab59be0f1a544f4f3eb80"}], "stats": {"total": 43, "additions": 43, "deletions": 0}, "files": [{"sha": "0c07329025bca002306d20758de81db54344d881", "filename": "src/doc/unstable-book/src/library-features/try-trait.md", "status": "modified", "additions": 43, "deletions": 0, "changes": 43, "blob_url": "https://github.com/rust-lang/rust/blob/3119e634e178d8acaed4a2d4a9d52e3b76ae79cf/src%2Fdoc%2Funstable-book%2Fsrc%2Flibrary-features%2Ftry-trait.md", "raw_url": "https://github.com/rust-lang/rust/raw/3119e634e178d8acaed4a2d4a9d52e3b76ae79cf/src%2Fdoc%2Funstable-book%2Fsrc%2Flibrary-features%2Ftry-trait.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Funstable-book%2Fsrc%2Flibrary-features%2Ftry-trait.md?ref=3119e634e178d8acaed4a2d4a9d52e3b76ae79cf", "patch": "@@ -5,3 +5,46 @@ The tracking issue for this feature is: [#42327]\n [#42327]: https://github.com/rust-lang/rust/issues/42327\n \n ------------------------\n+\n+This introduces a new trait `Try` for extending the `?` operator to types\n+other than `Result` (a part of [RFC 1859]).  The trait provides the canonical\n+way to _view_ a type in terms of a success/failure dichotomy.  This will\n+allow `?` to supplant the `try_opt!` macro on `Option` and the `try_ready!`\n+macro on `Poll`, among other things.\n+\n+[RFC 1859]: https://github.com/rust-lang/rfcs/pull/1859\n+\n+Here's an example implementation of the trait:\n+\n+```rust,ignore\n+/// A distinct type to represent the `None` value of an `Option`.\n+///\n+/// This enables using the `?` operator on `Option`; it's rarely useful alone.\n+#[derive(Debug)]\n+#[unstable(feature = \"try_trait\", issue = \"42327\")]\n+pub struct None { _priv: () }\n+\n+#[unstable(feature = \"try_trait\", issue = \"42327\")]\n+impl<T> ops::Try for Option<T>  {\n+    type Ok = T;\n+    type Error = None;\n+\n+    fn into_result(self) -> Result<T, None> {\n+        self.ok_or(None { _priv: () })\n+    }\n+\n+    fn from_ok(v: T) -> Self {\n+        Some(v)\n+    }\n+\n+    fn from_error(_: None) -> Self {\n+        None\n+    }\n+}\n+```\n+\n+Note the `Error` associated type here is a new marker.  The `?` operator\n+allows interconversion between different `Try` implementers only when\n+the error type can be converted `Into` the error type of the enclosing\n+function (or catch block).  Having a distinct error type (as opposed to\n+just `()`, or similar) restricts this to where it's semantically meaningful."}]}