{"sha": "07104692d5df1401fe0109fca800e4efe4e81a6c", "node_id": "MDY6Q29tbWl0NzI0NzEyOjA3MTA0NjkyZDVkZjE0MDFmZTAxMDlmY2E4MDBlNGVmZTRlODFhNmM=", "commit": {"author": {"name": "Mark Mansi", "email": "markm@cs.wisc.edu", "date": "2018-03-17T16:46:31Z"}, "committer": {"name": "Mark Mansi", "email": "markm@cs.wisc.edu", "date": "2018-03-26T13:37:56Z"}, "message": "Fix missed i128 feature gates", "tree": {"sha": "e7856e54c9046533f10a6d78cd06b53a1a2adebc", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e7856e54c9046533f10a6d78cd06b53a1a2adebc"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/07104692d5df1401fe0109fca800e4efe4e81a6c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/07104692d5df1401fe0109fca800e4efe4e81a6c", "html_url": "https://github.com/rust-lang/rust/commit/07104692d5df1401fe0109fca800e4efe4e81a6c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/07104692d5df1401fe0109fca800e4efe4e81a6c/comments", "author": {"login": "mark-i-m", "id": 8827840, "node_id": "MDQ6VXNlcjg4Mjc4NDA=", "avatar_url": "https://avatars.githubusercontent.com/u/8827840?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mark-i-m", "html_url": "https://github.com/mark-i-m", "followers_url": "https://api.github.com/users/mark-i-m/followers", "following_url": "https://api.github.com/users/mark-i-m/following{/other_user}", "gists_url": "https://api.github.com/users/mark-i-m/gists{/gist_id}", "starred_url": "https://api.github.com/users/mark-i-m/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mark-i-m/subscriptions", "organizations_url": "https://api.github.com/users/mark-i-m/orgs", "repos_url": "https://api.github.com/users/mark-i-m/repos", "events_url": "https://api.github.com/users/mark-i-m/events{/privacy}", "received_events_url": "https://api.github.com/users/mark-i-m/received_events", "type": "User", "site_admin": false}, "committer": {"login": "mark-i-m", "id": 8827840, "node_id": "MDQ6VXNlcjg4Mjc4NDA=", "avatar_url": "https://avatars.githubusercontent.com/u/8827840?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mark-i-m", "html_url": "https://github.com/mark-i-m", "followers_url": "https://api.github.com/users/mark-i-m/followers", "following_url": "https://api.github.com/users/mark-i-m/following{/other_user}", "gists_url": "https://api.github.com/users/mark-i-m/gists{/gist_id}", "starred_url": "https://api.github.com/users/mark-i-m/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mark-i-m/subscriptions", "organizations_url": "https://api.github.com/users/mark-i-m/orgs", "repos_url": "https://api.github.com/users/mark-i-m/repos", "events_url": "https://api.github.com/users/mark-i-m/events{/privacy}", "received_events_url": "https://api.github.com/users/mark-i-m/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ea89b507b37e089e87af5646042b911c84656b4a", "url": "https://api.github.com/repos/rust-lang/rust/commits/ea89b507b37e089e87af5646042b911c84656b4a", "html_url": "https://github.com/rust-lang/rust/commit/ea89b507b37e089e87af5646042b911c84656b4a"}], "stats": {"total": 85, "additions": 19, "deletions": 66}, "files": [{"sha": "0858988952c105c3e987f16e977ed8510209aa61", "filename": "src/doc/unstable-book/src/language-features/repr128.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/07104692d5df1401fe0109fca800e4efe4e81a6c/src%2Fdoc%2Funstable-book%2Fsrc%2Flanguage-features%2Frepr128.md", "raw_url": "https://github.com/rust-lang/rust/raw/07104692d5df1401fe0109fca800e4efe4e81a6c/src%2Fdoc%2Funstable-book%2Fsrc%2Flanguage-features%2Frepr128.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Funstable-book%2Fsrc%2Flanguage-features%2Frepr128.md?ref=07104692d5df1401fe0109fca800e4efe4e81a6c", "patch": "@@ -1,4 +1,4 @@\n-# `repri128`\n+# `repr128`\n \n The tracking issue for this feature is: [#35118]\n "}, {"sha": "55186b0a3aca2adc72f4f3cf68febb34626f6e77", "filename": "src/libcore/num/mod.rs", "status": "modified", "additions": 12, "deletions": 12, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/07104692d5df1401fe0109fca800e4efe4e81a6c/src%2Flibcore%2Fnum%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/07104692d5df1401fe0109fca800e4efe4e81a6c/src%2Flibcore%2Fnum%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fnum%2Fmod.rs?ref=07104692d5df1401fe0109fca800e4efe4e81a6c", "patch": "@@ -4046,39 +4046,39 @@ macro_rules! impl_from {\n impl_from! { u8, u16, #[stable(feature = \"lossless_int_conv\", since = \"1.5.0\")] }\n impl_from! { u8, u32, #[stable(feature = \"lossless_int_conv\", since = \"1.5.0\")] }\n impl_from! { u8, u64, #[stable(feature = \"lossless_int_conv\", since = \"1.5.0\")] }\n-impl_from! { u8, u128, #[unstable(feature = \"i128\", issue = \"35118\")] }\n+impl_from! { u8, u128, #[stable(feature = \"i128\", since = \"1.26.0\")] }\n impl_from! { u8, usize, #[stable(feature = \"lossless_int_conv\", since = \"1.5.0\")] }\n impl_from! { u16, u32, #[stable(feature = \"lossless_int_conv\", since = \"1.5.0\")] }\n impl_from! { u16, u64, #[stable(feature = \"lossless_int_conv\", since = \"1.5.0\")] }\n-impl_from! { u16, u128, #[unstable(feature = \"i128\", issue = \"35118\")] }\n+impl_from! { u16, u128, #[stable(feature = \"i128\", since = \"1.26.0\")] }\n impl_from! { u32, u64, #[stable(feature = \"lossless_int_conv\", since = \"1.5.0\")] }\n-impl_from! { u32, u128, #[unstable(feature = \"i128\", issue = \"35118\")] }\n-impl_from! { u64, u128, #[unstable(feature = \"i128\", issue = \"35118\")] }\n+impl_from! { u32, u128, #[stable(feature = \"i128\", since = \"1.26.0\")] }\n+impl_from! { u64, u128, #[stable(feature = \"i128\", since = \"1.26.0\")] }\n \n // Signed -> Signed\n impl_from! { i8, i16, #[stable(feature = \"lossless_int_conv\", since = \"1.5.0\")] }\n impl_from! { i8, i32, #[stable(feature = \"lossless_int_conv\", since = \"1.5.0\")] }\n impl_from! { i8, i64, #[stable(feature = \"lossless_int_conv\", since = \"1.5.0\")] }\n-impl_from! { i8, i128, #[unstable(feature = \"i128\", issue = \"35118\")] }\n+impl_from! { i8, i128, #[stable(feature = \"i128\", since = \"1.26.0\")] }\n impl_from! { i8, isize, #[stable(feature = \"lossless_int_conv\", since = \"1.5.0\")] }\n impl_from! { i16, i32, #[stable(feature = \"lossless_int_conv\", since = \"1.5.0\")] }\n impl_from! { i16, i64, #[stable(feature = \"lossless_int_conv\", since = \"1.5.0\")] }\n-impl_from! { i16, i128, #[unstable(feature = \"i128\", issue = \"35118\")] }\n+impl_from! { i16, i128, #[stable(feature = \"i128\", since = \"1.26.0\")] }\n impl_from! { i32, i64, #[stable(feature = \"lossless_int_conv\", since = \"1.5.0\")] }\n-impl_from! { i32, i128, #[unstable(feature = \"i128\", issue = \"35118\")] }\n-impl_from! { i64, i128, #[unstable(feature = \"i128\", issue = \"35118\")] }\n+impl_from! { i32, i128, #[stable(feature = \"i128\", since = \"1.26.0\")] }\n+impl_from! { i64, i128, #[stable(feature = \"i128\", since = \"1.26.0\")] }\n \n // Unsigned -> Signed\n impl_from! { u8, i16, #[stable(feature = \"lossless_int_conv\", since = \"1.5.0\")] }\n impl_from! { u8, i32, #[stable(feature = \"lossless_int_conv\", since = \"1.5.0\")] }\n impl_from! { u8, i64, #[stable(feature = \"lossless_int_conv\", since = \"1.5.0\")] }\n-impl_from! { u8, i128, #[unstable(feature = \"i128\", issue = \"35118\")] }\n+impl_from! { u8, i128, #[stable(feature = \"i128\", since = \"1.26.0\")] }\n impl_from! { u16, i32, #[stable(feature = \"lossless_int_conv\", since = \"1.5.0\")] }\n impl_from! { u16, i64, #[stable(feature = \"lossless_int_conv\", since = \"1.5.0\")] }\n-impl_from! { u16, i128, #[unstable(feature = \"i128\", issue = \"35118\")] }\n+impl_from! { u16, i128, #[stable(feature = \"i128\", since = \"1.26.0\")] }\n impl_from! { u32, i64, #[stable(feature = \"lossless_int_conv\", since = \"1.5.0\")] }\n-impl_from! { u32, i128, #[unstable(feature = \"i128\", issue = \"35118\")] }\n-impl_from! { u64, i128, #[unstable(feature = \"i128\", issue = \"35118\")] }\n+impl_from! { u32, i128, #[stable(feature = \"i128\", since = \"1.26.0\")] }\n+impl_from! { u64, i128, #[stable(feature = \"i128\", since = \"1.26.0\")] }\n \n // Note: integers can only be represented with full precision in a float if\n // they fit in the significand, which is 24 bits in f32 and 53 bits in f64."}, {"sha": "ce4bbfffc2e47b0644c11821f7f7e41eba69c79f", "filename": "src/libstd/primitive_docs.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/07104692d5df1401fe0109fca800e4efe4e81a6c/src%2Flibstd%2Fprimitive_docs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/07104692d5df1401fe0109fca800e4efe4e81a6c/src%2Flibstd%2Fprimitive_docs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fprimitive_docs.rs?ref=07104692d5df1401fe0109fca800e4efe4e81a6c", "patch": "@@ -751,7 +751,7 @@ mod prim_i64 { }\n /// The 128-bit signed integer type.\n ///\n /// *[See also the `std::i128` module](i128/index.html).*\n-#[unstable(feature = \"i128\", issue=\"35118\")]\n+#[stable(feature = \"i128\", since=\"1.26.0\")]\n mod prim_i128 { }\n \n #[doc(primitive = \"u8\")]\n@@ -791,7 +791,7 @@ mod prim_u64 { }\n /// The 128-bit unsigned integer type.\n ///\n /// *[See also the `std::u128` module](u128/index.html).*\n-#[unstable(feature = \"i128\", issue=\"35118\")]\n+#[stable(feature = \"i128\", since=\"1.26.0\")]\n mod prim_u128 { }\n \n #[doc(primitive = \"isize\")]"}, {"sha": "bb7988e64bce9b9f7a9e0a272151a27e16a607a4", "filename": "src/libsyntax/diagnostic_list.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/07104692d5df1401fe0109fca800e4efe4e81a6c/src%2Flibsyntax%2Fdiagnostic_list.rs", "raw_url": "https://github.com/rust-lang/rust/raw/07104692d5df1401fe0109fca800e4efe4e81a6c/src%2Flibsyntax%2Fdiagnostic_list.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fdiagnostic_list.rs?ref=07104692d5df1401fe0109fca800e4efe4e81a6c", "patch": "@@ -250,7 +250,7 @@ An unstable feature was used.\n Erroneous code example:\n \n ```compile_fail,E658\n-#[repr(u128)] // error: use of unstable library feature 'i128'\n+#[repr(u128)] // error: use of unstable library feature 'repr128'\n enum Foo {\n     Bar(u64),\n }\n@@ -264,7 +264,7 @@ If you're using a nightly version of rustc, just add the corresponding feature\n to be able to use it:\n \n ```\n-#![feature(repri128)]\n+#![feature(repr128)]\n \n #[repr(u128)] // ok!\n enum Foo {"}, {"sha": "ad3b4b172594e47836ecdb6510f54b56e64cc04c", "filename": "src/test/run-pass/saturating-float-casts.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/07104692d5df1401fe0109fca800e4efe4e81a6c/src%2Ftest%2Frun-pass%2Fsaturating-float-casts.rs", "raw_url": "https://github.com/rust-lang/rust/raw/07104692d5df1401fe0109fca800e4efe4e81a6c/src%2Ftest%2Frun-pass%2Fsaturating-float-casts.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fsaturating-float-casts.rs?ref=07104692d5df1401fe0109fca800e4efe4e81a6c", "patch": "@@ -11,7 +11,7 @@\n // Tests saturating float->int casts. See u128-as-f32.rs for the opposite direction.\n // compile-flags: -Z saturating-float-casts\n \n-#![feature(test, i128, stmt_expr_attributes)]\n+#![feature(test, stmt_expr_attributes)]\n #![deny(overflowing_literals)]\n extern crate test;\n "}, {"sha": "2848fb2d51a6be67c34c88e79d184b8e2995d7ff", "filename": "src/test/run-pass/u128-as-f32.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/07104692d5df1401fe0109fca800e4efe4e81a6c/src%2Ftest%2Frun-pass%2Fu128-as-f32.rs", "raw_url": "https://github.com/rust-lang/rust/raw/07104692d5df1401fe0109fca800e4efe4e81a6c/src%2Ftest%2Frun-pass%2Fu128-as-f32.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fu128-as-f32.rs?ref=07104692d5df1401fe0109fca800e4efe4e81a6c", "patch": "@@ -10,7 +10,7 @@\n \n // ignore-emscripten u128 not supported\n \n-#![feature(test, i128)]\n+#![feature(test)]\n #![deny(overflowing_literals)]\n extern crate test;\n "}, {"sha": "cd65b9d922337345dcfbc457d10d8e3b8831059c", "filename": "src/test/ui/feature-gate-i128_type2.rs", "status": "removed", "additions": 0, "deletions": 34, "changes": 34, "blob_url": "https://github.com/rust-lang/rust/blob/ea89b507b37e089e87af5646042b911c84656b4a/src%2Ftest%2Fui%2Ffeature-gate-i128_type2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ea89b507b37e089e87af5646042b911c84656b4a/src%2Ftest%2Fui%2Ffeature-gate-i128_type2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gate-i128_type2.rs?ref=ea89b507b37e089e87af5646042b911c84656b4a", "patch": "@@ -1,34 +0,0 @@\n-// Copyright 2016 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n-// gate-test-i128_type\n-\n-fn test1() -> i128 {\n-    0\n-}\n-\n-fn test1_2() -> u128 {\n-    0\n-}\n-\n-fn test3() {\n-    let x: i128 = 0;\n-}\n-\n-fn test3_2() {\n-    let x: u128 = 0;\n-}\n-\n-#[repr(u128)]\n-enum A { //~ ERROR 128-bit type is unstable\n-    A(u64)\n-}\n-\n-fn main() {}"}, {"sha": "fe4557899acda1b4946af6285d20fa4319812e9f", "filename": "src/test/ui/feature-gate-i128_type2.stderr", "status": "removed", "additions": 0, "deletions": 13, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/ea89b507b37e089e87af5646042b911c84656b4a/src%2Ftest%2Fui%2Ffeature-gate-i128_type2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/ea89b507b37e089e87af5646042b911c84656b4a/src%2Ftest%2Fui%2Ffeature-gate-i128_type2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gate-i128_type2.stderr?ref=ea89b507b37e089e87af5646042b911c84656b4a", "patch": "@@ -1,13 +0,0 @@\n-error[E0658]: repr with 128-bit type is unstable (see issue #35118)\n-  --> $DIR/feature-gate-i128_type2.rs:30:1\n-   |\n-LL | / enum A { //~ ERROR 128-bit type is unstable\n-LL | |     A(u64)\n-LL | | }\n-   | |_^\n-   |\n-   = help: add #![feature(repr128)] to the crate attributes to enable\n-\n-error: aborting due to 5 previous errors\n-\n-For more information about this error, try `rustc --explain E0658`."}]}