{"sha": "fd0f29237c9562efef25fb30f03df24edb1e2042", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZkMGYyOTIzN2M5NTYyZWZlZjI1ZmIzMGYwM2RmMjRlZGIxZTIwNDI=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2018-01-14T06:09:14Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2018-01-14T06:09:14Z"}, "message": "Auto merge of #47261 - estebank:immutable-arg, r=petrochenkov\n\nAssignment to immutable argument: diagnostic tweak\n\nRe #46659.", "tree": {"sha": "f1089715f81323619836d9e81f17828609da6bb0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f1089715f81323619836d9e81f17828609da6bb0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/fd0f29237c9562efef25fb30f03df24edb1e2042", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/fd0f29237c9562efef25fb30f03df24edb1e2042", "html_url": "https://github.com/rust-lang/rust/commit/fd0f29237c9562efef25fb30f03df24edb1e2042", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/fd0f29237c9562efef25fb30f03df24edb1e2042/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b762c2d9dd47e75905cdeae6bef81a745f09534c", "url": "https://api.github.com/repos/rust-lang/rust/commits/b762c2d9dd47e75905cdeae6bef81a745f09534c", "html_url": "https://github.com/rust-lang/rust/commit/b762c2d9dd47e75905cdeae6bef81a745f09534c"}, {"sha": "90bc98c5d1f58659b8aaa50e8505919215771b4a", "url": "https://api.github.com/repos/rust-lang/rust/commits/90bc98c5d1f58659b8aaa50e8505919215771b4a", "html_url": "https://github.com/rust-lang/rust/commit/90bc98c5d1f58659b8aaa50e8505919215771b4a"}], "stats": {"total": 92, "additions": 78, "deletions": 14}, "files": [{"sha": "4529e4bab752cbb51fe1ce2f3526d796d577ed6b", "filename": "src/librustc_borrowck/borrowck/mod.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/fd0f29237c9562efef25fb30f03df24edb1e2042/src%2Flibrustc_borrowck%2Fborrowck%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fd0f29237c9562efef25fb30f03df24edb1e2042/src%2Flibrustc_borrowck%2Fborrowck%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_borrowck%2Fborrowck%2Fmod.rs?ref=fd0f29237c9562efef25fb30f03df24edb1e2042", "patch": "@@ -772,11 +772,12 @@ impl<'a, 'tcx> BorrowckCtxt<'a, 'tcx> {\n                                                 &move_data::Assignment) {\n         let mut err = self.cannot_reassign_immutable(span,\n                                                      &self.loan_path_to_string(lp),\n+                                                     false,\n                                                      Origin::Ast);\n         err.span_label(span, \"cannot assign twice to immutable variable\");\n         if span != assign.span {\n             err.span_label(assign.span, format!(\"first assignment to `{}`\",\n-                                              self.loan_path_to_string(lp)));\n+                                                self.loan_path_to_string(lp)));\n         }\n         err.emit();\n     }"}, {"sha": "520febca938f098dcba9d4fd89f259602fe2f415", "filename": "src/librustc_mir/borrow_check/error_reporting.rs", "status": "modified", "additions": 27, "deletions": 7, "changes": 34, "blob_url": "https://github.com/rust-lang/rust/blob/fd0f29237c9562efef25fb30f03df24edb1e2042/src%2Flibrustc_mir%2Fborrow_check%2Ferror_reporting.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fd0f29237c9562efef25fb30f03df24edb1e2042/src%2Flibrustc_mir%2Fborrow_check%2Ferror_reporting.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check%2Ferror_reporting.rs?ref=fd0f29237c9562efef25fb30f03df24edb1e2042", "patch": "@@ -10,7 +10,7 @@\n \n use syntax_pos::Span;\n use rustc::middle::region::ScopeTree;\n-use rustc::mir::{BorrowKind, Field, Local, Location, Operand};\n+use rustc::mir::{BorrowKind, Field, Local, LocalKind, Location, Operand};\n use rustc::mir::{Place, ProjectionElem, Rvalue, Statement, StatementKind};\n use rustc::ty::{self, RegionKind};\n use rustc_data_structures::indexed_vec::Idx;\n@@ -568,19 +568,39 @@ impl<'cx, 'gcx, 'tcx> MirBorrowckCtxt<'cx, 'gcx, 'tcx> {\n         (place, span): (&Place<'tcx>, Span),\n         assigned_span: Span,\n     ) {\n+        let is_arg = if let Place::Local(local) = place {\n+            if let LocalKind::Arg = self.mir.local_kind(*local) {\n+                true\n+            } else {\n+                false\n+            }\n+        } else {\n+            false\n+        };\n+\n         let mut err = self.tcx.cannot_reassign_immutable(\n             span,\n             &self.describe_place(place).unwrap_or(\"_\".to_owned()),\n+            is_arg,\n             Origin::Mir,\n         );\n-        err.span_label(span, \"cannot assign twice to immutable variable\");\n+        let msg = if is_arg {\n+            \"cannot assign to immutable argument\"\n+        } else {\n+            \"cannot assign twice to immutable variable\"\n+        };\n         if span != assigned_span {\n-            let value_msg = match self.describe_place(place) {\n-                Some(name) => format!(\"`{}`\", name),\n-                None => \"value\".to_owned(),\n-            };\n-            err.span_label(assigned_span, format!(\"first assignment to {}\", value_msg));\n+            if is_arg {\n+                err.span_label(assigned_span, \"argument not declared as `mut`\");\n+            } else {\n+                let value_msg = match self.describe_place(place) {\n+                    Some(name) => format!(\"`{}`\", name),\n+                    None => \"value\".to_owned(),\n+                };\n+                err.span_label(assigned_span, format!(\"first assignment to {}\", value_msg));\n+            }\n         }\n+        err.span_label(span, msg);\n         err.emit();\n     }\n }"}, {"sha": "4a7ee397aec00b887fd6382f22c52713e93eb22d", "filename": "src/librustc_mir/util/borrowck_errors.rs", "status": "modified", "additions": 8, "deletions": 3, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/fd0f29237c9562efef25fb30f03df24edb1e2042/src%2Flibrustc_mir%2Futil%2Fborrowck_errors.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fd0f29237c9562efef25fb30f03df24edb1e2042/src%2Flibrustc_mir%2Futil%2Fborrowck_errors.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Futil%2Fborrowck_errors.rs?ref=fd0f29237c9562efef25fb30f03df24edb1e2042", "patch": "@@ -269,12 +269,17 @@ pub trait BorrowckErrors {\n         self.cancel_if_wrong_origin(err, o)\n     }\n \n-    fn cannot_reassign_immutable(&self, span: Span, desc: &str, o: Origin)\n+    fn cannot_reassign_immutable(&self, span: Span, desc: &str, is_arg: bool, o: Origin)\n                                  -> DiagnosticBuilder\n     {\n+        let msg = if is_arg {\n+            \"to immutable argument\"\n+        } else {\n+            \"twice to immutable variable\"\n+        };\n         let err = struct_span_err!(self, span, E0384,\n-                                   \"cannot assign twice to immutable variable `{}`{OGN}\",\n-                                   desc, OGN=o);\n+                                   \"cannot assign {} `{}`{OGN}\",\n+                                   msg, desc, OGN=o);\n \n         self.cancel_if_wrong_origin(err, o)\n     }"}, {"sha": "ecddb4c101fdf7f89d26008f9ff4768dc2e513fd", "filename": "src/test/compile-fail/issue-45199.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/fd0f29237c9562efef25fb30f03df24edb1e2042/src%2Ftest%2Fcompile-fail%2Fissue-45199.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fd0f29237c9562efef25fb30f03df24edb1e2042/src%2Ftest%2Fcompile-fail%2Fissue-45199.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-45199.rs?ref=fd0f29237c9562efef25fb30f03df24edb1e2042", "patch": "@@ -31,11 +31,11 @@ fn test_call() {\n }\n \n fn test_args(b: Box<i32>) {  //[ast]~ NOTE first assignment\n-                                //[mir]~^ NOTE first assignment\n+                                //[mir]~^ NOTE argument not declared as `mut`\n     b = Box::new(2);            //[ast]~ ERROR cannot assign twice to immutable variable\n-                                //[mir]~^ ERROR cannot assign twice to immutable variable `b`\n+                                //[mir]~^ ERROR cannot assign to immutable argument `b`\n                                 //[ast]~| NOTE cannot assign twice to immutable\n-                                //[mir]~| NOTE cannot assign twice to immutable\n+                                //[mir]~| NOTE cannot assign to immutable argument\n }\n \n fn main() {}"}, {"sha": "7c387ed080821095adf683cfa791d70179c5858c", "filename": "src/test/ui/borrowck/immutable-arg.rs", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/fd0f29237c9562efef25fb30f03df24edb1e2042/src%2Ftest%2Fui%2Fborrowck%2Fimmutable-arg.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fd0f29237c9562efef25fb30f03df24edb1e2042/src%2Ftest%2Fui%2Fborrowck%2Fimmutable-arg.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fborrowck%2Fimmutable-arg.rs?ref=fd0f29237c9562efef25fb30f03df24edb1e2042", "patch": "@@ -0,0 +1,20 @@\n+// Copyright 2018 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+//compile-flags: -Z emit-end-regions -Z borrowck=compare\n+\n+fn foo(_x: u32) {\n+    _x = 4;\n+    //~^ ERROR cannot assign to immutable argument `_x` (Mir)\n+    //~^^ ERROR cannot assign twice to immutable variable `_x` (Ast)\n+}\n+\n+fn main() {}\n+"}, {"sha": "40e1878f7321421649e319964ba0dc74dac4e655", "filename": "src/test/ui/borrowck/immutable-arg.stderr", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/fd0f29237c9562efef25fb30f03df24edb1e2042/src%2Ftest%2Fui%2Fborrowck%2Fimmutable-arg.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fd0f29237c9562efef25fb30f03df24edb1e2042/src%2Ftest%2Fui%2Fborrowck%2Fimmutable-arg.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fborrowck%2Fimmutable-arg.stderr?ref=fd0f29237c9562efef25fb30f03df24edb1e2042", "patch": "@@ -0,0 +1,18 @@\n+error[E0384]: cannot assign twice to immutable variable `_x` (Ast)\n+  --> $DIR/immutable-arg.rs:14:5\n+   |\n+13 | fn foo(_x: u32) {\n+   |        -- first assignment to `_x`\n+14 |     _x = 4;\n+   |     ^^^^^^ cannot assign twice to immutable variable\n+\n+error[E0384]: cannot assign to immutable argument `_x` (Mir)\n+  --> $DIR/immutable-arg.rs:14:5\n+   |\n+13 | fn foo(_x: u32) {\n+   |        -- argument not declared as `mut`\n+14 |     _x = 4;\n+   |     ^^^^^^ cannot assign to immutable argument\n+\n+error: aborting due to 2 previous errors\n+"}]}