{"sha": "e26aac5a9f541a2823922c5ab291da569c49acdf", "node_id": "MDY6Q29tbWl0NzI0NzEyOmUyNmFhYzVhOWY1NDFhMjgyMzkyMmM1YWIyOTFkYTU2OWM0OWFjZGY=", "commit": {"author": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2018-01-25T14:52:11Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2018-01-25T14:52:11Z"}, "message": "Rollup merge of #47534 - estebank:suggest-public-traits, r=petrochenkov\n\nOn missing method do not suggest private traits\n\nWhen encountering a method call for an ADT that doesn't have any\nimplementation of it, we search for traits that could be implemented\nthat do have that method. Filter out private non-local traits that would\nnot be able to be implemented.\n\nThis doesn't account for public traits that are in a private scope, but\nworks as a first approximation and is a more correct behavior than the\ncurrent one.\n\nFix #45781.", "tree": {"sha": "5a949b33c6aa0c1e4e529ce77c376b4779408ad1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5a949b33c6aa0c1e4e529ce77c376b4779408ad1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e26aac5a9f541a2823922c5ab291da569c49acdf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e26aac5a9f541a2823922c5ab291da569c49acdf", "html_url": "https://github.com/rust-lang/rust/commit/e26aac5a9f541a2823922c5ab291da569c49acdf", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e26aac5a9f541a2823922c5ab291da569c49acdf/comments", "author": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4cf26f8a133039bfeb5b9f684df9f547278db206", "url": "https://api.github.com/repos/rust-lang/rust/commits/4cf26f8a133039bfeb5b9f684df9f547278db206", "html_url": "https://github.com/rust-lang/rust/commit/4cf26f8a133039bfeb5b9f684df9f547278db206"}, {"sha": "4121ddb041aaa20769c8b31bc6496906c6330170", "url": "https://api.github.com/repos/rust-lang/rust/commits/4121ddb041aaa20769c8b31bc6496906c6330170", "html_url": "https://github.com/rust-lang/rust/commit/4121ddb041aaa20769c8b31bc6496906c6330170"}], "stats": {"total": 57, "additions": 42, "deletions": 15}, "files": [{"sha": "4556b5a42b3d61fd6946fc5bdd5755baeb5a5dd4", "filename": "src/librustc_typeck/check/method/suggest.rs", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/e26aac5a9f541a2823922c5ab291da569c49acdf/src%2Flibrustc_typeck%2Fcheck%2Fmethod%2Fsuggest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e26aac5a9f541a2823922c5ab291da569c49acdf/src%2Flibrustc_typeck%2Fcheck%2Fmethod%2Fsuggest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fmethod%2Fsuggest.rs?ref=e26aac5a9f541a2823922c5ab291da569c49acdf", "patch": "@@ -513,8 +513,13 @@ impl<'a, 'gcx, 'tcx> FnCtxt<'a, 'gcx, 'tcx> {\n                 // this isn't perfect (that is, there are cases when\n                 // implementing a trait would be legal but is rejected\n                 // here).\n-                (type_is_local || info.def_id.is_local())\n-                    && self.associated_item(info.def_id, item_name, Namespace::Value).is_some()\n+                (type_is_local || info.def_id.is_local()) &&\n+                    self.associated_item(info.def_id, item_name, Namespace::Value)\n+                        .filter(|item| {\n+                            // We only want to suggest public or local traits (#45781).\n+                            item.vis == ty::Visibility::Public || info.def_id.is_local()\n+                        })\n+                        .is_some()\n             })\n             .collect::<Vec<_>>();\n "}, {"sha": "75a74e1069c3182afacc04e056a23d239da21410", "filename": "src/librustc_typeck/lib.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/e26aac5a9f541a2823922c5ab291da569c49acdf/src%2Flibrustc_typeck%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e26aac5a9f541a2823922c5ab291da569c49acdf/src%2Flibrustc_typeck%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Flib.rs?ref=e26aac5a9f541a2823922c5ab291da569c49acdf", "patch": "@@ -75,12 +75,13 @@ This API is completely unstable and subject to change.\n #![feature(advanced_slice_patterns)]\n #![feature(box_patterns)]\n #![feature(box_syntax)]\n-#![feature(crate_visibility_modifier)]\n #![feature(conservative_impl_trait)]\n #![feature(copy_closures, clone_closures)]\n+#![feature(crate_visibility_modifier)]\n #![feature(from_ref)]\n #![feature(match_default_bindings)]\n #![feature(never_type)]\n+#![feature(option_filter)]\n #![feature(quote)]\n #![feature(refcell_replace_swap)]\n #![feature(rustc_diagnostic_macros)]"}, {"sha": "882113b8176ea5ccd2648a87d1abc3446cbe6b47", "filename": "src/test/ui/impl-trait/no-method-suggested-traits.stderr", "status": "modified", "additions": 4, "deletions": 8, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/e26aac5a9f541a2823922c5ab291da569c49acdf/src%2Ftest%2Fui%2Fimpl-trait%2Fno-method-suggested-traits.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e26aac5a9f541a2823922c5ab291da569c49acdf/src%2Ftest%2Fui%2Fimpl-trait%2Fno-method-suggested-traits.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fimpl-trait%2Fno-method-suggested-traits.stderr?ref=e26aac5a9f541a2823922c5ab291da569c49acdf", "patch": "@@ -95,10 +95,8 @@ error[E0599]: no method named `method` found for type `Foo` in the current scope\n    = note: the following traits define an item `method`, perhaps you need to implement one of them:\n            candidate #1: `foo::Bar`\n            candidate #2: `no_method_suggested_traits::foo::PubPub`\n-           candidate #3: `no_method_suggested_traits::bar::PubPriv`\n-           candidate #4: `no_method_suggested_traits::qux::PrivPub`\n-           candidate #5: `no_method_suggested_traits::quz::PrivPriv`\n-           candidate #6: `no_method_suggested_traits::Reexported`\n+           candidate #3: `no_method_suggested_traits::qux::PrivPub`\n+           candidate #4: `no_method_suggested_traits::Reexported`\n \n error[E0599]: no method named `method` found for type `std::rc::Rc<&mut std::boxed::Box<&Foo>>` in the current scope\n   --> $DIR/no-method-suggested-traits.rs:52:43\n@@ -110,10 +108,8 @@ error[E0599]: no method named `method` found for type `std::rc::Rc<&mut std::box\n    = note: the following traits define an item `method`, perhaps you need to implement one of them:\n            candidate #1: `foo::Bar`\n            candidate #2: `no_method_suggested_traits::foo::PubPub`\n-           candidate #3: `no_method_suggested_traits::bar::PubPriv`\n-           candidate #4: `no_method_suggested_traits::qux::PrivPub`\n-           candidate #5: `no_method_suggested_traits::quz::PrivPriv`\n-           candidate #6: `no_method_suggested_traits::Reexported`\n+           candidate #3: `no_method_suggested_traits::qux::PrivPub`\n+           candidate #4: `no_method_suggested_traits::Reexported`\n \n error[E0599]: no method named `method2` found for type `u64` in the current scope\n   --> $DIR/no-method-suggested-traits.rs:55:10"}, {"sha": "f9524696ed724c80e8fb061dc93478f612ba3300", "filename": "src/test/ui/method-call-err-msg.stderr", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/e26aac5a9f541a2823922c5ab291da569c49acdf/src%2Ftest%2Fui%2Fmethod-call-err-msg.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e26aac5a9f541a2823922c5ab291da569c49acdf/src%2Ftest%2Fui%2Fmethod-call-err-msg.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmethod-call-err-msg.stderr?ref=e26aac5a9f541a2823922c5ab291da569c49acdf", "patch": "@@ -38,10 +38,8 @@ error[E0599]: no method named `take` found for type `Foo` in the current scope\n            `&mut Foo : std::iter::Iterator`\n    = help: items from traits can only be used if the trait is implemented and in scope\n    = note: the following traits define an item `take`, perhaps you need to implement one of them:\n-           candidate #1: `std::collections::hash::Recover`\n-           candidate #2: `std::io::Read`\n-           candidate #3: `std::iter::Iterator`\n-           candidate #4: `alloc::btree::Recover`\n+           candidate #1: `std::io::Read`\n+           candidate #2: `std::iter::Iterator`\n \n error: aborting due to 4 previous errors\n "}, {"sha": "99bee0d3c59e2a488f0ad3a14677cace7ac5c210", "filename": "src/test/ui/suggestions/dont-suggest-private-trait-method.rs", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/e26aac5a9f541a2823922c5ab291da569c49acdf/src%2Ftest%2Fui%2Fsuggestions%2Fdont-suggest-private-trait-method.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e26aac5a9f541a2823922c5ab291da569c49acdf/src%2Ftest%2Fui%2Fsuggestions%2Fdont-suggest-private-trait-method.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Fdont-suggest-private-trait-method.rs?ref=e26aac5a9f541a2823922c5ab291da569c49acdf", "patch": "@@ -0,0 +1,16 @@\n+// Copyright 2018 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+struct T;\n+\n+fn main() {\n+    T::new();\n+    //~^ ERROR no function or associated item named `new` found for type `T` in the current scope\n+}"}, {"sha": "97f424f9fbf6d49afb4ea4411849443b306fd0a5", "filename": "src/test/ui/suggestions/dont-suggest-private-trait-method.stderr", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/e26aac5a9f541a2823922c5ab291da569c49acdf/src%2Ftest%2Fui%2Fsuggestions%2Fdont-suggest-private-trait-method.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e26aac5a9f541a2823922c5ab291da569c49acdf/src%2Ftest%2Fui%2Fsuggestions%2Fdont-suggest-private-trait-method.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Fdont-suggest-private-trait-method.stderr?ref=e26aac5a9f541a2823922c5ab291da569c49acdf", "patch": "@@ -0,0 +1,11 @@\n+error[E0599]: no function or associated item named `new` found for type `T` in the current scope\n+  --> $DIR/dont-suggest-private-trait-method.rs:14:5\n+   |\n+11 | struct T;\n+   | --------- function or associated item `new` not found for this\n+...\n+14 |     T::new();\n+   |     ^^^^^^ function or associated item not found in `T`\n+\n+error: aborting due to previous error\n+"}]}