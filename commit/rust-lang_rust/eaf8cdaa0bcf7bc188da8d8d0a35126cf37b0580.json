{"sha": "eaf8cdaa0bcf7bc188da8d8d0a35126cf37b0580", "node_id": "C_kwDOAAsO6NoAKGVhZjhjZGFhMGJjZjdiYzE4OGRhOGQ4ZDBhMzUxMjZjZjM3YjA1ODA", "commit": {"author": {"name": "b-naber", "email": "bn263@gmx.de", "date": "2022-04-12T13:07:35Z"}, "committer": {"name": "b-naber", "email": "bn263@gmx.de", "date": "2022-04-21T08:59:12Z"}, "message": "add helper methods on ValTree", "tree": {"sha": "71461a4b81cd7d7076702efafd81e954e6f093fa", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/71461a4b81cd7d7076702efafd81e954e6f093fa"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/eaf8cdaa0bcf7bc188da8d8d0a35126cf37b0580", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/eaf8cdaa0bcf7bc188da8d8d0a35126cf37b0580", "html_url": "https://github.com/rust-lang/rust/commit/eaf8cdaa0bcf7bc188da8d8d0a35126cf37b0580", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/eaf8cdaa0bcf7bc188da8d8d0a35126cf37b0580/comments", "author": {"login": "b-naber", "id": 71934879, "node_id": "MDQ6VXNlcjcxOTM0ODc5", "avatar_url": "https://avatars.githubusercontent.com/u/71934879?v=4", "gravatar_id": "", "url": "https://api.github.com/users/b-naber", "html_url": "https://github.com/b-naber", "followers_url": "https://api.github.com/users/b-naber/followers", "following_url": "https://api.github.com/users/b-naber/following{/other_user}", "gists_url": "https://api.github.com/users/b-naber/gists{/gist_id}", "starred_url": "https://api.github.com/users/b-naber/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/b-naber/subscriptions", "organizations_url": "https://api.github.com/users/b-naber/orgs", "repos_url": "https://api.github.com/users/b-naber/repos", "events_url": "https://api.github.com/users/b-naber/events{/privacy}", "received_events_url": "https://api.github.com/users/b-naber/received_events", "type": "User", "site_admin": false}, "committer": {"login": "b-naber", "id": 71934879, "node_id": "MDQ6VXNlcjcxOTM0ODc5", "avatar_url": "https://avatars.githubusercontent.com/u/71934879?v=4", "gravatar_id": "", "url": "https://api.github.com/users/b-naber", "html_url": "https://github.com/b-naber", "followers_url": "https://api.github.com/users/b-naber/followers", "following_url": "https://api.github.com/users/b-naber/following{/other_user}", "gists_url": "https://api.github.com/users/b-naber/gists{/gist_id}", "starred_url": "https://api.github.com/users/b-naber/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/b-naber/subscriptions", "organizations_url": "https://api.github.com/users/b-naber/orgs", "repos_url": "https://api.github.com/users/b-naber/repos", "events_url": "https://api.github.com/users/b-naber/events{/privacy}", "received_events_url": "https://api.github.com/users/b-naber/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2bc59c7ae2631863e947ccdba42b989feeec6b36", "url": "https://api.github.com/repos/rust-lang/rust/commits/2bc59c7ae2631863e947ccdba42b989feeec6b36", "html_url": "https://github.com/rust-lang/rust/commit/2bc59c7ae2631863e947ccdba42b989feeec6b36"}], "stats": {"total": 16, "additions": 16, "deletions": 0}, "files": [{"sha": "e17c69cb3537e1d54d0bfb8e03d829468859a503", "filename": "compiler/rustc_middle/src/ty/consts/valtree.rs", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/eaf8cdaa0bcf7bc188da8d8d0a35126cf37b0580/compiler%2Frustc_middle%2Fsrc%2Fty%2Fconsts%2Fvaltree.rs", "raw_url": "https://github.com/rust-lang/rust/raw/eaf8cdaa0bcf7bc188da8d8d0a35126cf37b0580/compiler%2Frustc_middle%2Fsrc%2Fty%2Fconsts%2Fvaltree.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fty%2Fconsts%2Fvaltree.rs?ref=eaf8cdaa0bcf7bc188da8d8d0a35126cf37b0580", "patch": "@@ -31,4 +31,20 @@ impl<'tcx> ValTree<'tcx> {\n     pub fn zst() -> Self {\n         Self::Branch(&[])\n     }\n+\n+    #[inline]\n+    pub fn unwrap_leaf(self) -> ScalarInt {\n+        match self {\n+            Self::Leaf(s) => s,\n+            _ => bug!(\"expected leaf, got {:?}\", self),\n+        }\n+    }\n+\n+    #[inline]\n+    pub fn unwrap_branch(self) -> &'tcx [Self] {\n+        match self {\n+            Self::Branch(branch) => branch,\n+            _ => bug!(\"expected branch, got {:?}\", self),\n+        }\n+    }\n }"}]}