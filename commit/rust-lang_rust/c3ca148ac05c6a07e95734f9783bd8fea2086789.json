{"sha": "c3ca148ac05c6a07e95734f9783bd8fea2086789", "node_id": "MDY6Q29tbWl0NzI0NzEyOmMzY2ExNDhhYzA1YzZhMDdlOTU3MzRmOTc4M2JkOGZlYTIwODY3ODk=", "commit": {"author": {"name": "Ian Jackson", "email": "ijackson@chiark.greenend.org.uk", "date": "2021-05-10T11:58:03Z"}, "committer": {"name": "Ian Jackson", "email": "ijackson@chiark.greenend.org.uk", "date": "2021-05-10T12:03:49Z"}, "message": "io::Seek: Provide rewind()\n\nSigned-off-by: Ian Jackson <ijackson@chiark.greenend.org.uk>", "tree": {"sha": "f3120820506874a1164901c6f0e2d9a9724380a0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f3120820506874a1164901c6f0e2d9a9724380a0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c3ca148ac05c6a07e95734f9783bd8fea2086789", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c3ca148ac05c6a07e95734f9783bd8fea2086789", "html_url": "https://github.com/rust-lang/rust/commit/c3ca148ac05c6a07e95734f9783bd8fea2086789", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c3ca148ac05c6a07e95734f9783bd8fea2086789/comments", "author": {"login": "ijackson", "id": 2090772, "node_id": "MDQ6VXNlcjIwOTA3NzI=", "avatar_url": "https://avatars.githubusercontent.com/u/2090772?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ijackson", "html_url": "https://github.com/ijackson", "followers_url": "https://api.github.com/users/ijackson/followers", "following_url": "https://api.github.com/users/ijackson/following{/other_user}", "gists_url": "https://api.github.com/users/ijackson/gists{/gist_id}", "starred_url": "https://api.github.com/users/ijackson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ijackson/subscriptions", "organizations_url": "https://api.github.com/users/ijackson/orgs", "repos_url": "https://api.github.com/users/ijackson/repos", "events_url": "https://api.github.com/users/ijackson/events{/privacy}", "received_events_url": "https://api.github.com/users/ijackson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ijackson", "id": 2090772, "node_id": "MDQ6VXNlcjIwOTA3NzI=", "avatar_url": "https://avatars.githubusercontent.com/u/2090772?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ijackson", "html_url": "https://github.com/ijackson", "followers_url": "https://api.github.com/users/ijackson/followers", "following_url": "https://api.github.com/users/ijackson/following{/other_user}", "gists_url": "https://api.github.com/users/ijackson/gists{/gist_id}", "starred_url": "https://api.github.com/users/ijackson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ijackson/subscriptions", "organizations_url": "https://api.github.com/users/ijackson/orgs", "repos_url": "https://api.github.com/users/ijackson/repos", "events_url": "https://api.github.com/users/ijackson/events{/privacy}", "received_events_url": "https://api.github.com/users/ijackson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "74e0e45f3c32aef30ab5cdb7bf1980eb087830de", "url": "https://api.github.com/repos/rust-lang/rust/commits/74e0e45f3c32aef30ab5cdb7bf1980eb087830de", "html_url": "https://github.com/rust-lang/rust/commit/74e0e45f3c32aef30ab5cdb7bf1980eb087830de"}], "stats": {"total": 35, "additions": 35, "deletions": 0}, "files": [{"sha": "7165b155eef9870b636396c81d79a26d7164729e", "filename": "library/std/src/io/mod.rs", "status": "modified", "additions": 35, "deletions": 0, "changes": 35, "blob_url": "https://github.com/rust-lang/rust/blob/c3ca148ac05c6a07e95734f9783bd8fea2086789/library%2Fstd%2Fsrc%2Fio%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c3ca148ac05c6a07e95734f9783bd8fea2086789/library%2Fstd%2Fsrc%2Fio%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fio%2Fmod.rs?ref=c3ca148ac05c6a07e95734f9783bd8fea2086789", "patch": "@@ -1669,6 +1669,41 @@ pub trait Seek {\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n     fn seek(&mut self, pos: SeekFrom) -> Result<u64>;\n \n+    /// Rewind to the beginning of a stream.\n+    ///\n+    /// This is a convenience method, equivalent to `seek(SeekFrom::Start(0)`.\n+    ///\n+    /// # Errors\n+    ///\n+    /// Rewinding can fail, for example becaue it might involve flushing a buffer.\n+    ///\n+    /// # Example\n+    ///\n+    /// ```no_run\n+    /// #![feature(seek_rewind)]\n+    /// use std::io::{Read, Seek, Write};\n+    /// use std::fs::OpenOptions;\n+    ///\n+    /// let mut f = OpenOptions::new()\n+    ///     .write(true)\n+    ///     .read(true)\n+    ///     .create(true)\n+    ///     .open(\"foo.txt\").unwrap();\n+    ///\n+    /// let hello = \"Hello!\\n\";\n+    /// write!(f, \"{}\", hello).unwrap();\n+    /// f.rewind().unwrap();\n+    ///\n+    /// let mut buf = String::new();\n+    /// f.read_to_string(&mut buf).unwrap();\n+    /// assert_eq!(&buf, hello);\n+    /// ```\n+    #[unstable(feature = \"seek_rewind\", issue = \"none\")]\n+    fn rewind(&mut self) -> Result<()> {\n+        self.seek(SeekFrom::Start(0))?;\n+        Ok(())\n+    }\n+\n     /// Returns the length of this stream (in bytes).\n     ///\n     /// This method is implemented using up to three seek operations. If this"}]}