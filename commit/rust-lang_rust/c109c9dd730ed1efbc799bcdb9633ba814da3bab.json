{"sha": "c109c9dd730ed1efbc799bcdb9633ba814da3bab", "node_id": "MDY6Q29tbWl0NzI0NzEyOmMxMDljOWRkNzMwZWQxZWZiYzc5OWJjZGI5NjMzYmE4MTRkYTNiYWI=", "commit": {"author": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2011-06-21T14:59:05Z"}, "committer": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2011-06-21T15:10:14Z"}, "message": "rustc: Output an unimplemented message when alias encounters an unknown sequence type", "tree": {"sha": "0a4c02e2abcc5a18bb19eb3c07839d48685d325e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0a4c02e2abcc5a18bb19eb3c07839d48685d325e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c109c9dd730ed1efbc799bcdb9633ba814da3bab", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c109c9dd730ed1efbc799bcdb9633ba814da3bab", "html_url": "https://github.com/rust-lang/rust/commit/c109c9dd730ed1efbc799bcdb9633ba814da3bab", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c109c9dd730ed1efbc799bcdb9633ba814da3bab/comments", "author": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "062c6b946b660c8418359974db38be43b3ab31aa", "url": "https://api.github.com/repos/rust-lang/rust/commits/062c6b946b660c8418359974db38be43b3ab31aa", "html_url": "https://github.com/rust-lang/rust/commit/062c6b946b660c8418359974db38be43b3ab31aa"}], "stats": {"total": 4, "additions": 4, "deletions": 0}, "files": [{"sha": "38211f633ff1879bd36e1a3ce2a8e07fc63ff88f", "filename": "src/comp/middle/alias.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/c109c9dd730ed1efbc799bcdb9633ba814da3bab/src%2Fcomp%2Fmiddle%2Falias.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c109c9dd730ed1efbc799bcdb9633ba814da3bab/src%2Fcomp%2Fmiddle%2Falias.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Falias.rs?ref=c109c9dd730ed1efbc799bcdb9633ba814da3bab", "patch": "@@ -340,6 +340,10 @@ fn check_for(&ctx cx, &@ast::local local, &@ast::expr seq, &ast::block block,\n             if (mt.mut != ast::imm) { unsafe = [seq_t]; }\n         }\n         case (ty::ty_istr) { /* no-op */ }\n+        case (_) {\n+            cx.tcx.sess.span_unimpl(seq.span, \"unknown seq type \" +\n+                                    pretty::ppaux::ty_to_str(*cx.tcx, seq_t));\n+        }\n     }\n     auto new_sc =\n         @rec(root_vars=root_def,"}]}