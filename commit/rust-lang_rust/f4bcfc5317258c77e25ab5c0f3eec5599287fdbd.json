{"sha": "f4bcfc5317258c77e25ab5c0f3eec5599287fdbd", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY0YmNmYzUzMTcyNThjNzdlMjVhYjVjMGYzZWVjNTU5OTI4N2ZkYmQ=", "commit": {"author": {"name": "Petr Sumbera", "email": "petr.sumbera@oracle.com", "date": "2018-01-18T12:26:01Z"}, "committer": {"name": "Petr Sumbera", "email": "petr.sumbera@oracle.com", "date": "2018-01-18T12:26:01Z"}, "message": "Fixes sparc64 cabi fixes.\n\nArgument up to 16 bytes size is provided in registers.\nReturn value up to 32 bytes size is stored in registers.\n\nFixes: #46679", "tree": {"sha": "641c6081bbc179e69001330f4d7724a22543faf8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/641c6081bbc179e69001330f4d7724a22543faf8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f4bcfc5317258c77e25ab5c0f3eec5599287fdbd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f4bcfc5317258c77e25ab5c0f3eec5599287fdbd", "html_url": "https://github.com/rust-lang/rust/commit/f4bcfc5317258c77e25ab5c0f3eec5599287fdbd", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f4bcfc5317258c77e25ab5c0f3eec5599287fdbd/comments", "author": {"login": "psumbera", "id": 4249116, "node_id": "MDQ6VXNlcjQyNDkxMTY=", "avatar_url": "https://avatars.githubusercontent.com/u/4249116?v=4", "gravatar_id": "", "url": "https://api.github.com/users/psumbera", "html_url": "https://github.com/psumbera", "followers_url": "https://api.github.com/users/psumbera/followers", "following_url": "https://api.github.com/users/psumbera/following{/other_user}", "gists_url": "https://api.github.com/users/psumbera/gists{/gist_id}", "starred_url": "https://api.github.com/users/psumbera/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/psumbera/subscriptions", "organizations_url": "https://api.github.com/users/psumbera/orgs", "repos_url": "https://api.github.com/users/psumbera/repos", "events_url": "https://api.github.com/users/psumbera/events{/privacy}", "received_events_url": "https://api.github.com/users/psumbera/received_events", "type": "User", "site_admin": false}, "committer": {"login": "psumbera", "id": 4249116, "node_id": "MDQ6VXNlcjQyNDkxMTY=", "avatar_url": "https://avatars.githubusercontent.com/u/4249116?v=4", "gravatar_id": "", "url": "https://api.github.com/users/psumbera", "html_url": "https://github.com/psumbera", "followers_url": "https://api.github.com/users/psumbera/followers", "following_url": "https://api.github.com/users/psumbera/following{/other_user}", "gists_url": "https://api.github.com/users/psumbera/gists{/gist_id}", "starred_url": "https://api.github.com/users/psumbera/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/psumbera/subscriptions", "organizations_url": "https://api.github.com/users/psumbera/orgs", "repos_url": "https://api.github.com/users/psumbera/repos", "events_url": "https://api.github.com/users/psumbera/events{/privacy}", "received_events_url": "https://api.github.com/users/psumbera/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0f9c784751434c70ddd6719ccda6817c819126f9", "url": "https://api.github.com/repos/rust-lang/rust/commits/0f9c784751434c70ddd6719ccda6817c819126f9", "html_url": "https://github.com/rust-lang/rust/commit/0f9c784751434c70ddd6719ccda6817c819126f9"}], "stats": {"total": 9, "additions": 7, "deletions": 2}, "files": [{"sha": "6c5d3254191483c7041da4c49c9ad0e32e04d137", "filename": "src/librustc_trans/cabi_sparc64.rs", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/f4bcfc5317258c77e25ab5c0f3eec5599287fdbd/src%2Flibrustc_trans%2Fcabi_sparc64.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f4bcfc5317258c77e25ab5c0f3eec5599287fdbd/src%2Flibrustc_trans%2Fcabi_sparc64.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Fcabi_sparc64.rs?ref=f4bcfc5317258c77e25ab5c0f3eec5599287fdbd", "patch": "@@ -24,7 +24,7 @@ fn is_homogeneous_aggregate<'a, 'tcx>(cx: &CodegenCx<'a, 'tcx>, arg: &mut ArgTyp\n         let valid_unit = match unit.kind {\n             RegKind::Integer => false,\n             RegKind::Float => true,\n-            RegKind::Vector => arg.layout.size.bits() == 128\n+            RegKind::Vector => arg.layout.size.bits() == 256\n         };\n \n         if valid_unit {\n@@ -50,7 +50,7 @@ fn classify_ret_ty<'a, 'tcx>(cx: &CodegenCx<'a, 'tcx>, ret: &mut ArgType<'tcx>)\n     }\n     let size = ret.layout.size;\n     let bits = size.bits();\n-    if bits <= 128 {\n+    if bits <= 256 {\n         let unit = if bits <= 8 {\n             Reg::i8()\n         } else if bits <= 16 {\n@@ -84,6 +84,11 @@ fn classify_arg_ty<'a, 'tcx>(cx: &CodegenCx<'a, 'tcx>, arg: &mut ArgType<'tcx>)\n     }\n \n     let total = arg.layout.size;\n+    if total.bits() > 128 {\n+        arg.make_indirect(cx);\n+        return;\n+    }\n+\n     arg.cast_to(Uniform {\n         unit: Reg::i64(),\n         total"}]}