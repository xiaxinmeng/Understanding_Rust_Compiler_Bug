{"sha": "149a988146e1e23849338cefe8df7823e1ca3853", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE0OWE5ODgxNDZlMWUyMzg0OTMzOGNlZmU4ZGY3ODIzZTFjYTM4NTM=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2019-06-19T10:35:28Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2019-06-19T10:35:28Z"}, "message": "Auto merge of #4218 - lzutao:rustup, r=phansch\n\nRustup\n\nchangelog: none", "tree": {"sha": "a5100605eb14d65ff8dea860cb2063f167d353bf", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a5100605eb14d65ff8dea860cb2063f167d353bf"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/149a988146e1e23849338cefe8df7823e1ca3853", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/149a988146e1e23849338cefe8df7823e1ca3853", "html_url": "https://github.com/rust-lang/rust/commit/149a988146e1e23849338cefe8df7823e1ca3853", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/149a988146e1e23849338cefe8df7823e1ca3853/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "97f8caabf64b4dc3c2e89feeb59330ed2d11127c", "url": "https://api.github.com/repos/rust-lang/rust/commits/97f8caabf64b4dc3c2e89feeb59330ed2d11127c", "html_url": "https://github.com/rust-lang/rust/commit/97f8caabf64b4dc3c2e89feeb59330ed2d11127c"}, {"sha": "5e887b2a6a133cb85bc540ffe58840cd6d7cb5a8", "url": "https://api.github.com/repos/rust-lang/rust/commits/5e887b2a6a133cb85bc540ffe58840cd6d7cb5a8", "html_url": "https://github.com/rust-lang/rust/commit/5e887b2a6a133cb85bc540ffe58840cd6d7cb5a8"}], "stats": {"total": 19, "additions": 12, "deletions": 7}, "files": [{"sha": "882f9a1af1bc300e0deaceaa021205a213c878ad", "filename": "clippy_lints/src/loops.rs", "status": "modified", "additions": 8, "deletions": 3, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/149a988146e1e23849338cefe8df7823e1ca3853/clippy_lints%2Fsrc%2Floops.rs", "raw_url": "https://github.com/rust-lang/rust/raw/149a988146e1e23849338cefe8df7823e1ca3853/clippy_lints%2Fsrc%2Floops.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Floops.rs?ref=149a988146e1e23849338cefe8df7823e1ca3853", "patch": "@@ -736,7 +736,7 @@ fn never_loop_expr(expr: &Expr, main_loop_id: HirId) -> NeverLoopResult {\n             }\n         },\n         ExprKind::Struct(_, _, None)\n-        | ExprKind::Yield(_)\n+        | ExprKind::Yield(_, _)\n         | ExprKind::Closure(_, _, _, _, _)\n         | ExprKind::InlineAsm(_, _, _)\n         | ExprKind::Path(_)\n@@ -1245,7 +1245,12 @@ fn is_len_call(expr: &Expr, var: Name) -> bool {\n     false\n }\n \n-fn is_end_eq_array_len(cx: &LateContext<'_, '_>, end: &Expr, limits: ast::RangeLimits, indexed_ty: Ty<'_>) -> bool {\n+fn is_end_eq_array_len<'tcx>(\n+    cx: &LateContext<'_, 'tcx>,\n+    end: &Expr,\n+    limits: ast::RangeLimits,\n+    indexed_ty: Ty<'tcx>,\n+) -> bool {\n     if_chain! {\n         if let ExprKind::Lit(ref lit) = end.node;\n         if let ast::LitKind::Int(end_int, _) = lit.node;\n@@ -1982,7 +1987,7 @@ fn is_ref_iterable_type(cx: &LateContext<'_, '_>, e: &Expr) -> bool {\n     match_type(cx, ty, &paths::BTREESET)\n }\n \n-fn is_iterable_array(ty: Ty<'_>, cx: &LateContext<'_, '_>) -> bool {\n+fn is_iterable_array<'tcx>(ty: Ty<'tcx>, cx: &LateContext<'_, 'tcx>) -> bool {\n     // IntoIterator is currently only implemented for array sizes <= 32 in rustc\n     match ty.sty {\n         ty::Array(_, n) => (0..=32).contains(&n.assert_usize(cx.tcx).expect(\"array length\")),"}, {"sha": "29ea6d018ad5b26ba7b217fdc5daaf82554f55c6", "filename": "clippy_lints/src/methods/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/149a988146e1e23849338cefe8df7823e1ca3853/clippy_lints%2Fsrc%2Fmethods%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/149a988146e1e23849338cefe8df7823e1ca3853/clippy_lints%2Fsrc%2Fmethods%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmethods%2Fmod.rs?ref=149a988146e1e23849338cefe8df7823e1ca3853", "patch": "@@ -1773,7 +1773,7 @@ fn derefs_to_slice<'a, 'tcx>(\n     expr: &'tcx hir::Expr,\n     ty: Ty<'tcx>,\n ) -> Option<&'tcx hir::Expr> {\n-    fn may_slice(cx: &LateContext<'_, '_>, ty: Ty<'_>) -> bool {\n+    fn may_slice<'a>(cx: &LateContext<'_, 'a>, ty: Ty<'a>) -> bool {\n         match ty.sty {\n             ty::Slice(_) => true,\n             ty::Adt(def, _) if def.is_box() => may_slice(cx, ty.boxed_ty()),"}, {"sha": "3e3a5c48dabfc4602ee16fe111a6535057f887d7", "filename": "clippy_lints/src/utils/author.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/149a988146e1e23849338cefe8df7823e1ca3853/clippy_lints%2Fsrc%2Futils%2Fauthor.rs", "raw_url": "https://github.com/rust-lang/rust/raw/149a988146e1e23849338cefe8df7823e1ca3853/clippy_lints%2Fsrc%2Futils%2Fauthor.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Futils%2Fauthor.rs?ref=149a988146e1e23849338cefe8df7823e1ca3853", "patch": "@@ -377,7 +377,7 @@ impl<'tcx> Visitor<'tcx> for PrintVisitor {\n                 println!(\"Closure(ref capture_clause, ref func, _, _, _) = {};\", current);\n                 println!(\"    // unimplemented: `ExprKind::Closure` is not further destructured at the moment\");\n             },\n-            ExprKind::Yield(ref sub) => {\n+            ExprKind::Yield(ref sub, _) => {\n                 let sub_pat = self.next(\"sub\");\n                 println!(\"Yield(ref sub) = {};\", current);\n                 self.current = sub_pat;"}, {"sha": "7f58d21a3158b14822338e5db89e37b2a021e1f4", "filename": "clippy_lints/src/utils/hir_utils.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/149a988146e1e23849338cefe8df7823e1ca3853/clippy_lints%2Fsrc%2Futils%2Fhir_utils.rs", "raw_url": "https://github.com/rust-lang/rust/raw/149a988146e1e23849338cefe8df7823e1ca3853/clippy_lints%2Fsrc%2Futils%2Fhir_utils.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Futils%2Fhir_utils.rs?ref=149a988146e1e23849338cefe8df7823e1ca3853", "patch": "@@ -436,7 +436,7 @@ impl<'a, 'tcx: 'a> SpanlessHash<'a, 'tcx> {\n                     self.hash_expr(&*j);\n                 }\n             },\n-            ExprKind::Box(ref e) | ExprKind::DropTemps(ref e) | ExprKind::Yield(ref e) => {\n+            ExprKind::Box(ref e) | ExprKind::DropTemps(ref e) | ExprKind::Yield(ref e, _) => {\n                 self.hash_expr(e);\n             },\n             ExprKind::Call(ref fun, ref args) => {"}, {"sha": "f7b865bd2ca2e96c8a037798d98f430226680405", "filename": "clippy_lints/src/utils/inspector.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/149a988146e1e23849338cefe8df7823e1ca3853/clippy_lints%2Fsrc%2Futils%2Finspector.rs", "raw_url": "https://github.com/rust-lang/rust/raw/149a988146e1e23849338cefe8df7823e1ca3853/clippy_lints%2Fsrc%2Futils%2Finspector.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Futils%2Finspector.rs?ref=149a988146e1e23849338cefe8df7823e1ca3853", "patch": "@@ -227,7 +227,7 @@ fn print_expr(cx: &LateContext<'_, '_>, expr: &hir::Expr, indent: usize) {\n             println!(\"{}Closure\", ind);\n             println!(\"{}clause: {:?}\", ind, clause);\n         },\n-        hir::ExprKind::Yield(ref sub) => {\n+        hir::ExprKind::Yield(ref sub, _) => {\n             println!(\"{}Yield\", ind);\n             print_expr(cx, sub, indent + 1);\n         },"}]}