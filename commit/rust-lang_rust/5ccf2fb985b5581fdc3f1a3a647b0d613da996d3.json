{"sha": "5ccf2fb985b5581fdc3f1a3a647b0d613da996d3", "node_id": "MDY6Q29tbWl0NzI0NzEyOjVjY2YyZmI5ODViNTU4MWZkYzNmMWEzYTY0N2IwZDYxM2RhOTk2ZDM=", "commit": {"author": {"name": "Mike Boutin", "email": "mike.boutin@gmail.com", "date": "2019-05-05T14:25:01Z"}, "committer": {"name": "Mike Boutin", "email": "mike.boutin@gmail.com", "date": "2019-05-11T19:04:10Z"}, "message": "Add #[doc(hidden)] attribute on compiler generated proc-macro module.\n\nStops unavoidable `missing_docs` warning/error on proc-macro crates.\nResolves #42008.", "tree": {"sha": "96ad90430b0022db6d5fdc068c70aafc7901aa50", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/96ad90430b0022db6d5fdc068c70aafc7901aa50"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5ccf2fb985b5581fdc3f1a3a647b0d613da996d3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5ccf2fb985b5581fdc3f1a3a647b0d613da996d3", "html_url": "https://github.com/rust-lang/rust/commit/5ccf2fb985b5581fdc3f1a3a647b0d613da996d3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5ccf2fb985b5581fdc3f1a3a647b0d613da996d3/comments", "author": {"login": "iliekturtles", "id": 5081378, "node_id": "MDQ6VXNlcjUwODEzNzg=", "avatar_url": "https://avatars.githubusercontent.com/u/5081378?v=4", "gravatar_id": "", "url": "https://api.github.com/users/iliekturtles", "html_url": "https://github.com/iliekturtles", "followers_url": "https://api.github.com/users/iliekturtles/followers", "following_url": "https://api.github.com/users/iliekturtles/following{/other_user}", "gists_url": "https://api.github.com/users/iliekturtles/gists{/gist_id}", "starred_url": "https://api.github.com/users/iliekturtles/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/iliekturtles/subscriptions", "organizations_url": "https://api.github.com/users/iliekturtles/orgs", "repos_url": "https://api.github.com/users/iliekturtles/repos", "events_url": "https://api.github.com/users/iliekturtles/events{/privacy}", "received_events_url": "https://api.github.com/users/iliekturtles/received_events", "type": "User", "site_admin": false}, "committer": {"login": "iliekturtles", "id": 5081378, "node_id": "MDQ6VXNlcjUwODEzNzg=", "avatar_url": "https://avatars.githubusercontent.com/u/5081378?v=4", "gravatar_id": "", "url": "https://api.github.com/users/iliekturtles", "html_url": "https://github.com/iliekturtles", "followers_url": "https://api.github.com/users/iliekturtles/followers", "following_url": "https://api.github.com/users/iliekturtles/following{/other_user}", "gists_url": "https://api.github.com/users/iliekturtles/gists{/gist_id}", "starred_url": "https://api.github.com/users/iliekturtles/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/iliekturtles/subscriptions", "organizations_url": "https://api.github.com/users/iliekturtles/orgs", "repos_url": "https://api.github.com/users/iliekturtles/repos", "events_url": "https://api.github.com/users/iliekturtles/events{/privacy}", "received_events_url": "https://api.github.com/users/iliekturtles/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5f1924c9922c640108d2225d6b68e69e589b94ae", "url": "https://api.github.com/repos/rust-lang/rust/commits/5f1924c9922c640108d2225d6b68e69e589b94ae", "html_url": "https://github.com/rust-lang/rust/commit/5f1924c9922c640108d2225d6b68e69e589b94ae"}], "stats": {"total": 23, "additions": 22, "deletions": 1}, "files": [{"sha": "e14781c4fa9f526d9b7920838dacd81c124bb437", "filename": "src/libsyntax_ext/proc_macro_decls.rs", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/5ccf2fb985b5581fdc3f1a3a647b0d613da996d3/src%2Flibsyntax_ext%2Fproc_macro_decls.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5ccf2fb985b5581fdc3f1a3a647b0d613da996d3/src%2Flibsyntax_ext%2Fproc_macro_decls.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax_ext%2Fproc_macro_decls.rs?ref=5ccf2fb985b5581fdc3f1a3a647b0d613da996d3", "patch": "@@ -324,6 +324,7 @@ impl<'a> Visitor<'a> for CollectProcMacros<'a> {\n \n // Creates a new module which looks like:\n //\n+//      #[doc(hidden)]\n //      mod $gensym {\n //          extern crate proc_macro;\n //\n@@ -357,6 +358,10 @@ fn mk_decls(\n     });\n     let span = DUMMY_SP.apply_mark(mark);\n \n+    let hidden = cx.meta_list_item_word(span, Symbol::intern(\"hidden\"));\n+    let doc = cx.meta_list(span, Symbol::intern(\"doc\"), vec![hidden]);\n+    let doc_hidden = cx.attribute(span, doc);\n+\n     let proc_macro = Ident::from_str(\"proc_macro\");\n     let krate = cx.item(span,\n                         proc_macro,\n@@ -421,7 +426,7 @@ fn mk_decls(\n         span,\n         span,\n         ast::Ident::with_empty_ctxt(Symbol::gensym(\"decls\")),\n-        vec![],\n+        vec![doc_hidden],\n         vec![krate, decls_static],\n     ).map(|mut i| {\n         i.vis = respan(span, ast::VisibilityKind::Public);"}, {"sha": "e5a5f8beb45857f111f5673c361cdf53a162bfc7", "filename": "src/test/ui/proc-macro/no-missing-docs.rs", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/5ccf2fb985b5581fdc3f1a3a647b0d613da996d3/src%2Ftest%2Fui%2Fproc-macro%2Fno-missing-docs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5ccf2fb985b5581fdc3f1a3a647b0d613da996d3/src%2Ftest%2Fui%2Fproc-macro%2Fno-missing-docs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fproc-macro%2Fno-missing-docs.rs?ref=5ccf2fb985b5581fdc3f1a3a647b0d613da996d3", "patch": "@@ -0,0 +1,16 @@\n+//! Verify that the `decls` module implicitly added by the compiler does not cause `missing_docs`\n+//! warnings.\n+\n+// compile-pass\n+// force-host\n+// no-prefer-dynamic\n+\n+#![crate_type = \"proc-macro\"]\n+#![deny(missing_docs)]\n+\n+extern crate proc_macro;\n+use proc_macro::*;\n+\n+/// Foo1.\n+#[proc_macro]\n+pub fn foo1(input: TokenStream) -> TokenStream { input }"}]}