{"sha": "b5f5676a2ffacf58fc3831846c5357b7e2b46109", "node_id": "MDY6Q29tbWl0NzI0NzEyOmI1ZjU2NzZhMmZmYWNmNThmYzM4MzE4NDZjNTM1N2I3ZTJiNDYxMDk=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-07-07T01:27:42Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-07-07T01:27:42Z"}, "message": "tutorial: Use consistent casing in headers", "tree": {"sha": "7be835346cc5602bc450241975c67f8044f5fb8c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7be835346cc5602bc450241975c67f8044f5fb8c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b5f5676a2ffacf58fc3831846c5357b7e2b46109", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b5f5676a2ffacf58fc3831846c5357b7e2b46109", "html_url": "https://github.com/rust-lang/rust/commit/b5f5676a2ffacf58fc3831846c5357b7e2b46109", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b5f5676a2ffacf58fc3831846c5357b7e2b46109/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "28fec95c5963bbd524f4271cb7cac63dcd2ec0cf", "url": "https://api.github.com/repos/rust-lang/rust/commits/28fec95c5963bbd524f4271cb7cac63dcd2ec0cf", "html_url": "https://github.com/rust-lang/rust/commit/28fec95c5963bbd524f4271cb7cac63dcd2ec0cf"}], "stats": {"total": 6, "additions": 3, "deletions": 3}, "files": [{"sha": "f0bbde068056a337a0b90351fb7dfd1c235ae933", "filename": "doc/tutorial.md", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/b5f5676a2ffacf58fc3831846c5357b7e2b46109/doc%2Ftutorial.md", "raw_url": "https://github.com/rust-lang/rust/raw/b5f5676a2ffacf58fc3831846c5357b7e2b46109/doc%2Ftutorial.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/doc%2Ftutorial.md?ref=b5f5676a2ffacf58fc3831846c5357b7e2b46109", "patch": "@@ -11,7 +11,7 @@ comparisons to other languages in the C family. The tutorial covers\n the whole language, though not with the depth and precision of the\n [language reference](rust.html).\n \n-## Language Overview\n+## Language overview\n \n Rust is a systems programming language with a focus on type safety,\n memory safety, concurrency and performance. It is intended for writing\n@@ -38,7 +38,7 @@ high-level features include:\n * Generics - Functions and types can be parameterized over generic\n   types with optional type constraints\n \n-## First Impressions\n+## First impressions\n \n As a curly-brace language in the tradition of C, C++, and JavaScript,\n Rust looks a lot like other languages you may be familiar with.\n@@ -1557,7 +1557,7 @@ to other tasks. The sending task will give up ownership of the box,\n and won't be able to access it afterwards. The receiving task will\n become the sole owner of the box.\n \n-### Borrowed Pointers\n+### Borrowed pointers\n \n Rust borrowed pointers are a general purpose reference/pointer type,\n similar to the C++ reference type, but guaranteed to point to valid"}]}