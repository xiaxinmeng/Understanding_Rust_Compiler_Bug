{"sha": "a96b44c9e2f952282cff1b833f39d10b8cda5f66", "node_id": "C_kwDOAAsO6NoAKGE5NmI0NGM5ZTJmOTUyMjgyY2ZmMWI4MzNmMzlkMTBiOGNkYTVmNjY", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2022-08-29T04:34:42Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-08-29T04:34:42Z"}, "message": "Rollup merge of #96334 - devnexen:socket_mark, r=dtolnay\n\nsocket `set_mark` addition.\n\nto be able to set a marker/id on the socket for network filtering\n (iptables/ipfw here) purpose.", "tree": {"sha": "2cd4a6c1dfb604e092be897eff794a4ebe6427a1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2cd4a6c1dfb604e092be897eff794a4ebe6427a1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a96b44c9e2f952282cff1b833f39d10b8cda5f66", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJjDEHiCRBK7hj4Ov3rIwAA19cIAHmVnUYGG/R1u2J4R0ZbKdoS\nZev282tDlPm5a87+9scBKF7cglRVCZ4SnIBpuOAw4fJ+xBFPKR0TkxJc+J1p5Xrs\nODiHhgDR5M/sca6YEW+UXLzAQys8yCVvm8S32ZwuE9Xd0jE52u2CYN4BGbbEOv+l\n3W2rYwnoSRgG9zYRLEf1zvOZgXWmRPtgrzwzJHDygLpYGvoF5pdRI1/UhxAfIXoH\nmqwFAJqPe4ZdUxDABc/lnMibvnT1pumlklm4OYdBEoiqACUVjAI5NXBt4C0uRKKN\n9GJJwhI86YomoAKKr2b3tlFbJT8wUSYxL3RptfKB3Y7fWB+7Xbo6v5hp8DmyioI=\n=LZ8/\n-----END PGP SIGNATURE-----\n", "payload": "tree 2cd4a6c1dfb604e092be897eff794a4ebe6427a1\nparent 52016a10053bcdd6c52b60cdcab8c316d26f4172\nparent f6efb0b74f286dc806b2fb46b3bd880606533c64\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1661747682 +0200\ncommitter GitHub <noreply@github.com> 1661747682 +0200\n\nRollup merge of #96334 - devnexen:socket_mark, r=dtolnay\n\nsocket `set_mark` addition.\n\nto be able to set a marker/id on the socket for network filtering\n (iptables/ipfw here) purpose.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a96b44c9e2f952282cff1b833f39d10b8cda5f66", "html_url": "https://github.com/rust-lang/rust/commit/a96b44c9e2f952282cff1b833f39d10b8cda5f66", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a96b44c9e2f952282cff1b833f39d10b8cda5f66/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "52016a10053bcdd6c52b60cdcab8c316d26f4172", "url": "https://api.github.com/repos/rust-lang/rust/commits/52016a10053bcdd6c52b60cdcab8c316d26f4172", "html_url": "https://github.com/rust-lang/rust/commit/52016a10053bcdd6c52b60cdcab8c316d26f4172"}, {"sha": "f6efb0b74f286dc806b2fb46b3bd880606533c64", "url": "https://api.github.com/repos/rust-lang/rust/commits/f6efb0b74f286dc806b2fb46b3bd880606533c64", "html_url": "https://github.com/rust-lang/rust/commit/f6efb0b74f286dc806b2fb46b3bd880606533c64"}], "stats": {"total": 61, "additions": 61, "deletions": 0}, "files": [{"sha": "f758f88d0a37026b0c9da8ce6de9d95d8572203c", "filename": "library/std/src/os/unix/net/datagram.rs", "status": "modified", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/a96b44c9e2f952282cff1b833f39d10b8cda5f66/library%2Fstd%2Fsrc%2Fos%2Funix%2Fnet%2Fdatagram.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a96b44c9e2f952282cff1b833f39d10b8cda5f66/library%2Fstd%2Fsrc%2Fos%2Funix%2Fnet%2Fdatagram.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fos%2Funix%2Fnet%2Fdatagram.rs?ref=a96b44c9e2f952282cff1b833f39d10b8cda5f66", "patch": "@@ -838,6 +838,31 @@ impl UnixDatagram {\n         self.0.passcred()\n     }\n \n+    /// Set the id of the socket for network filtering purpose\n+    ///\n+    #[cfg_attr(\n+        any(target_os = \"linux\", target_os = \"freebsd\", target_os = \"openbsd\"),\n+        doc = \"```no_run\"\n+    )]\n+    #[cfg_attr(\n+        not(any(target_os = \"linux\", target_os = \"freebsd\", target_os = \"openbsd\")),\n+        doc = \"```ignore\"\n+    )]\n+    /// #![feature(unix_set_mark)]\n+    /// use std::os::unix::net::UnixDatagram;\n+    ///\n+    /// fn main() -> std::io::Result<()> {\n+    ///     let sock = UnixDatagram::unbound()?;\n+    ///     sock.set_mark(32)?;\n+    ///     Ok(())\n+    /// }\n+    /// ```\n+    #[cfg(any(doc, target_os = \"linux\", target_os = \"freebsd\", target_os = \"openbsd\",))]\n+    #[unstable(feature = \"unix_set_mark\", issue = \"96467\")]\n+    pub fn set_mark(&self, mark: u32) -> io::Result<()> {\n+        self.0.set_mark(mark)\n+    }\n+\n     /// Returns the value of the `SO_ERROR` option.\n     ///\n     /// # Examples"}, {"sha": "dff8f6e8567508cdcf4aa49a1929c348bf2684d6", "filename": "library/std/src/os/unix/net/stream.rs", "status": "modified", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/a96b44c9e2f952282cff1b833f39d10b8cda5f66/library%2Fstd%2Fsrc%2Fos%2Funix%2Fnet%2Fstream.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a96b44c9e2f952282cff1b833f39d10b8cda5f66/library%2Fstd%2Fsrc%2Fos%2Funix%2Fnet%2Fstream.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fos%2Funix%2Fnet%2Fstream.rs?ref=a96b44c9e2f952282cff1b833f39d10b8cda5f66", "patch": "@@ -427,6 +427,31 @@ impl UnixStream {\n         self.0.passcred()\n     }\n \n+    /// Set the id of the socket for network filtering purpose\n+    ///\n+    #[cfg_attr(\n+        any(target_os = \"linux\", target_os = \"freebsd\", target_os = \"openbsd\"),\n+        doc = \"```no_run\"\n+    )]\n+    #[cfg_attr(\n+        not(any(target_os = \"linux\", target_os = \"freebsd\", target_os = \"openbsd\")),\n+        doc = \"```ignore\"\n+    )]\n+    /// #![feature(unix_set_mark)]\n+    /// use std::os::unix::net::UnixStream;\n+    ///\n+    /// fn main() -> std::io::Result<()> {\n+    ///     let sock = UnixStream::connect(\"/tmp/sock\")?;\n+    ///     sock.set_mark(32)?;\n+    ///     Ok(())\n+    /// }\n+    /// ```\n+    #[cfg(any(doc, target_os = \"linux\", target_os = \"freebsd\", target_os = \"openbsd\",))]\n+    #[unstable(feature = \"unix_set_mark\", issue = \"96467\")]\n+    pub fn set_mark(&self, mark: u32) -> io::Result<()> {\n+        self.0.set_mark(mark)\n+    }\n+\n     /// Returns the value of the `SO_ERROR` option.\n     ///\n     /// # Examples"}, {"sha": "b84bf8f9264a405821f6453296c0d43de65f42f4", "filename": "library/std/src/sys/unix/net.rs", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/a96b44c9e2f952282cff1b833f39d10b8cda5f66/library%2Fstd%2Fsrc%2Fsys%2Funix%2Fnet.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a96b44c9e2f952282cff1b833f39d10b8cda5f66/library%2Fstd%2Fsrc%2Fsys%2Funix%2Fnet.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsys%2Funix%2Fnet.rs?ref=a96b44c9e2f952282cff1b833f39d10b8cda5f66", "patch": "@@ -438,6 +438,17 @@ impl Socket {\n         self.0.set_nonblocking(nonblocking)\n     }\n \n+    #[cfg(any(target_os = \"linux\", target_os = \"freebsd\", target_os = \"openbsd\"))]\n+    pub fn set_mark(&self, mark: u32) -> io::Result<()> {\n+        #[cfg(target_os = \"linux\")]\n+        let option = libc::SO_MARK;\n+        #[cfg(target_os = \"freebsd\")]\n+        let option = libc::SO_USER_COOKIE;\n+        #[cfg(target_os = \"openbsd\")]\n+        let option = libc::SO_RTABLE;\n+        setsockopt(self, libc::SOL_SOCKET, option, mark as libc::c_int)\n+    }\n+\n     pub fn take_error(&self) -> io::Result<Option<io::Error>> {\n         let raw: c_int = getsockopt(self, libc::SOL_SOCKET, libc::SO_ERROR)?;\n         if raw == 0 { Ok(None) } else { Ok(Some(io::Error::from_raw_os_error(raw as i32))) }"}]}