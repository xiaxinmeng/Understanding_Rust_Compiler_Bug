{"sha": "1c4a9b98b9ac7afebe88db13c028f645c5f0b922", "node_id": "MDY6Q29tbWl0NzI0NzEyOjFjNGE5Yjk4YjlhYzdhZmViZTg4ZGIxM2MwMjhmNjQ1YzVmMGI5MjI=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2014-05-19T20:36:22Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2014-05-19T20:36:22Z"}, "message": "auto merge of #14294 : kballard/rust/result_unwrap_or_else, r=alexcrichton\n\nResult.unwrap_or_handle() is the equivalent of Option.unwrap_or_else().\r\nIn the interests of naming consistency, call it the same thing.\r\n\r\n[breaking-change]", "tree": {"sha": "da91897fe2dfcdf5d9d78e346174a933673db49f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/da91897fe2dfcdf5d9d78e346174a933673db49f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1c4a9b98b9ac7afebe88db13c028f645c5f0b922", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1c4a9b98b9ac7afebe88db13c028f645c5f0b922", "html_url": "https://github.com/rust-lang/rust/commit/1c4a9b98b9ac7afebe88db13c028f645c5f0b922", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1c4a9b98b9ac7afebe88db13c028f645c5f0b922/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "44fcf46b00389bea30f4902ce77f2e33557d9170", "url": "https://api.github.com/repos/rust-lang/rust/commits/44fcf46b00389bea30f4902ce77f2e33557d9170", "html_url": "https://github.com/rust-lang/rust/commit/44fcf46b00389bea30f4902ce77f2e33557d9170"}, {"sha": "24468278fd0b6c09d3b105dd2dfc56e7066b961b", "url": "https://api.github.com/repos/rust-lang/rust/commits/24468278fd0b6c09d3b105dd2dfc56e7066b961b", "html_url": "https://github.com/rust-lang/rust/commit/24468278fd0b6c09d3b105dd2dfc56e7066b961b"}], "stats": {"total": 15, "additions": 11, "deletions": 4}, "files": [{"sha": "46f4427e8387e67074bfa9a0c49d9fa8a1cce5af", "filename": "src/libcore/result.rs", "status": "modified", "additions": 11, "deletions": 4, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/1c4a9b98b9ac7afebe88db13c028f645c5f0b922/src%2Flibcore%2Fresult.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1c4a9b98b9ac7afebe88db13c028f645c5f0b922/src%2Flibcore%2Fresult.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fresult.rs?ref=1c4a9b98b9ac7afebe88db13c028f645c5f0b922", "patch": "@@ -508,12 +508,19 @@ impl<T, E> Result<T, E> {\n     /// Unwraps a result, yielding the content of an `Ok`.\n     /// If the value is an `Err` then it calls `op` with its value.\n     #[inline]\n-    pub fn unwrap_or_handle(self, op: |E| -> T) -> T {\n+    pub fn unwrap_or_else(self, op: |E| -> T) -> T {\n         match self {\n             Ok(t) => t,\n             Err(e) => op(e)\n         }\n     }\n+\n+    /// Deprecated name for `unwrap_or_else()`.\n+    #[deprecated = \"replaced by .unwrap_or_else()\"]\n+    #[inline]\n+    pub fn unwrap_or_handle(self, op: |E| -> T) -> T {\n+        self.unwrap_or_else(op)\n+    }\n }\n \n impl<T, E: Show> Result<T, E> {\n@@ -758,8 +765,8 @@ mod tests {\n         let ok: Result<int, ~str> = Ok(100);\n         let ok_err: Result<int, ~str> = Err(\"I got this.\".to_owned());\n \n-        assert_eq!(ok.unwrap_or_handle(handler), 100);\n-        assert_eq!(ok_err.unwrap_or_handle(handler), 50);\n+        assert_eq!(ok.unwrap_or_else(handler), 100);\n+        assert_eq!(ok_err.unwrap_or_else(handler), 50);\n     }\n \n     #[test]\n@@ -774,6 +781,6 @@ mod tests {\n         }\n \n         let bad_err: Result<int, ~str> = Err(\"Unrecoverable mess.\".to_owned());\n-        let _ : int = bad_err.unwrap_or_handle(handler);\n+        let _ : int = bad_err.unwrap_or_else(handler);\n     }\n }"}]}