{"sha": "c318cf453dafbd8129203c3117d8f7be799f62ef", "node_id": "C_kwDOAAsO6NoAKGMzMThjZjQ1M2RhZmJkODEyOTIwM2MzMTE3ZDhmN2JlNzk5ZjYyZWY", "commit": {"author": {"name": "Nicholas Nethercote", "email": "n.nethercote@gmail.com", "date": "2022-04-28T20:52:01Z"}, "committer": {"name": "Nicholas Nethercote", "email": "n.nethercote@gmail.com", "date": "2022-05-04T21:06:12Z"}, "message": "Overhaul `MacArgs::Eq`.\n\nThe value in `MacArgs::Eq` is currently represented as a `Token`.\nBecause of `TokenKind::Interpolated`, `Token` can be either a token or\nan arbitrary AST fragment. In practice, a `MacArgs::Eq` starts out as a\nliteral or macro call AST fragment, and then is later lowered to a\nliteral token. But this is very non-obvious. `Token` is a much more\ngeneral type than what is needed.\n\nThis commit restricts things, by introducing a new type `MacArgsEqKind`\nthat is either an AST expression (pre-lowering) or an AST literal\n(post-lowering). The downside is that the code is a bit more verbose in\na few places. The benefit is that makes it much clearer what the\npossibilities are (though also shorter in some other places). Also, it\nremoves one use of `TokenKind::Interpolated`, taking us a step closer to\nremoving that variant, which will let us make `Token` impl `Copy` and\nremove many \"handle Interpolated\" code paths in the parser.\n\nThings to note:\n- Error messages have improved. Messages like this:\n  ```\n  unexpected token: `\"bug\" + \"found\"`\n  ```\n  now say \"unexpected expression\", which makes more sense. Although\n  arbitrary expressions can exist within tokens thanks to\n  `TokenKind::Interpolated`, that's not obvious to anyone who doesn't\n  know compiler internals.\n- In `parse_mac_args_common`, we no longer need to collect tokens for\n  the value expression.", "tree": {"sha": "0d0cc61c5b463a37a96fe905001001ed9a677b0d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0d0cc61c5b463a37a96fe905001001ed9a677b0d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c318cf453dafbd8129203c3117d8f7be799f62ef", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c318cf453dafbd8129203c3117d8f7be799f62ef", "html_url": "https://github.com/rust-lang/rust/commit/c318cf453dafbd8129203c3117d8f7be799f62ef", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c318cf453dafbd8129203c3117d8f7be799f62ef/comments", "author": {"login": "nnethercote", "id": 1940286, "node_id": "MDQ6VXNlcjE5NDAyODY=", "avatar_url": "https://avatars.githubusercontent.com/u/1940286?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nnethercote", "html_url": "https://github.com/nnethercote", "followers_url": "https://api.github.com/users/nnethercote/followers", "following_url": "https://api.github.com/users/nnethercote/following{/other_user}", "gists_url": "https://api.github.com/users/nnethercote/gists{/gist_id}", "starred_url": "https://api.github.com/users/nnethercote/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nnethercote/subscriptions", "organizations_url": "https://api.github.com/users/nnethercote/orgs", "repos_url": "https://api.github.com/users/nnethercote/repos", "events_url": "https://api.github.com/users/nnethercote/events{/privacy}", "received_events_url": "https://api.github.com/users/nnethercote/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nnethercote", "id": 1940286, "node_id": "MDQ6VXNlcjE5NDAyODY=", "avatar_url": "https://avatars.githubusercontent.com/u/1940286?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nnethercote", "html_url": "https://github.com/nnethercote", "followers_url": "https://api.github.com/users/nnethercote/followers", "following_url": "https://api.github.com/users/nnethercote/following{/other_user}", "gists_url": "https://api.github.com/users/nnethercote/gists{/gist_id}", "starred_url": "https://api.github.com/users/nnethercote/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nnethercote/subscriptions", "organizations_url": "https://api.github.com/users/nnethercote/orgs", "repos_url": "https://api.github.com/users/nnethercote/repos", "events_url": "https://api.github.com/users/nnethercote/events{/privacy}", "received_events_url": "https://api.github.com/users/nnethercote/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ec3afba5d48427801a490ba91e6ce6d0bd3bfae9", "url": "https://api.github.com/repos/rust-lang/rust/commits/ec3afba5d48427801a490ba91e6ce6d0bd3bfae9", "html_url": "https://github.com/rust-lang/rust/commit/ec3afba5d48427801a490ba91e6ce6d0bd3bfae9"}], "stats": {"total": 3, "additions": 2, "deletions": 1}, "files": [{"sha": "7919800483f522ff5bdb1434a6584fe31686543f", "filename": "clippy_utils/src/ast_utils.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/c318cf453dafbd8129203c3117d8f7be799f62ef/clippy_utils%2Fsrc%2Fast_utils.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c318cf453dafbd8129203c3117d8f7be799f62ef/clippy_utils%2Fsrc%2Fast_utils.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_utils%2Fsrc%2Fast_utils.rs?ref=c318cf453dafbd8129203c3117d8f7be799f62ef", "patch": "@@ -688,7 +688,8 @@ pub fn eq_mac_args(l: &MacArgs, r: &MacArgs) -> bool {\n     match (l, r) {\n         (Empty, Empty) => true,\n         (Delimited(_, ld, lts), Delimited(_, rd, rts)) => ld == rd && lts.eq_unspanned(rts),\n-        (Eq(_, lt), Eq(_, rt)) => lt.kind == rt.kind,\n+        (Eq(_, MacArgsEq::Ast(le)), Eq(_, MacArgsEq::Ast(re))) => eq_expr(le, re),\n+        (Eq(_, MacArgsEq::Hir(ll)), Eq(_, MacArgsEq::Hir(rl))) => ll.kind == rl.kind,\n         _ => false,\n     }\n }"}]}