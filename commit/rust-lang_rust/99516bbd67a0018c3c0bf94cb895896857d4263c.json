{"sha": "99516bbd67a0018c3c0bf94cb895896857d4263c", "node_id": "MDY6Q29tbWl0NzI0NzEyOjk5NTE2YmJkNjdhMDAxOGMzYzBiZjk0Y2I4OTU4OTY4NTdkNDI2M2M=", "commit": {"author": {"name": "Dawer", "email": "7803845+iDawer@users.noreply.github.com", "date": "2021-06-01T12:21:00Z"}, "committer": {"name": "Dawer", "email": "7803845+iDawer@users.noreply.github.com", "date": "2021-06-01T20:32:05Z"}, "message": "minor: Avoid eprintln on panic", "tree": {"sha": "082062340352ee742fb0ab0a9a0b9859943e22df", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/082062340352ee742fb0ab0a9a0b9859943e22df"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/99516bbd67a0018c3c0bf94cb895896857d4263c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/99516bbd67a0018c3c0bf94cb895896857d4263c", "html_url": "https://github.com/rust-lang/rust/commit/99516bbd67a0018c3c0bf94cb895896857d4263c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/99516bbd67a0018c3c0bf94cb895896857d4263c/comments", "author": {"login": "iDawer", "id": 7803845, "node_id": "MDQ6VXNlcjc4MDM4NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/7803845?v=4", "gravatar_id": "", "url": "https://api.github.com/users/iDawer", "html_url": "https://github.com/iDawer", "followers_url": "https://api.github.com/users/iDawer/followers", "following_url": "https://api.github.com/users/iDawer/following{/other_user}", "gists_url": "https://api.github.com/users/iDawer/gists{/gist_id}", "starred_url": "https://api.github.com/users/iDawer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/iDawer/subscriptions", "organizations_url": "https://api.github.com/users/iDawer/orgs", "repos_url": "https://api.github.com/users/iDawer/repos", "events_url": "https://api.github.com/users/iDawer/events{/privacy}", "received_events_url": "https://api.github.com/users/iDawer/received_events", "type": "User", "site_admin": false}, "committer": {"login": "iDawer", "id": 7803845, "node_id": "MDQ6VXNlcjc4MDM4NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/7803845?v=4", "gravatar_id": "", "url": "https://api.github.com/users/iDawer", "html_url": "https://github.com/iDawer", "followers_url": "https://api.github.com/users/iDawer/followers", "following_url": "https://api.github.com/users/iDawer/following{/other_user}", "gists_url": "https://api.github.com/users/iDawer/gists{/gist_id}", "starred_url": "https://api.github.com/users/iDawer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/iDawer/subscriptions", "organizations_url": "https://api.github.com/users/iDawer/orgs", "repos_url": "https://api.github.com/users/iDawer/repos", "events_url": "https://api.github.com/users/iDawer/events{/privacy}", "received_events_url": "https://api.github.com/users/iDawer/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "71117e6812f87e014bc8e984e195a75e222ac227", "url": "https://api.github.com/repos/rust-lang/rust/commits/71117e6812f87e014bc8e984e195a75e222ac227", "html_url": "https://github.com/rust-lang/rust/commit/71117e6812f87e014bc8e984e195a75e222ac227"}], "stats": {"total": 28, "additions": 15, "deletions": 13}, "files": [{"sha": "a2a4d61db5fbb4f43fd2363b3373dec4eafcea99", "filename": "crates/hir_ty/src/diagnostics/expr.rs", "status": "modified", "additions": 13, "deletions": 10, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/99516bbd67a0018c3c0bf94cb895896857d4263c/crates%2Fhir_ty%2Fsrc%2Fdiagnostics%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/99516bbd67a0018c3c0bf94cb895896857d4263c/crates%2Fhir_ty%2Fsrc%2Fdiagnostics%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_ty%2Fsrc%2Fdiagnostics%2Fexpr.rs?ref=99516bbd67a0018c3c0bf94cb895896857d4263c", "patch": "@@ -357,17 +357,20 @@ impl<'a, 'b> ExprValidator<'a, 'b> {\n             infer: &infer,\n             db,\n             pattern_arena: &pattern_arena,\n-            eprint_panic_context: &|| {\n+            panic_context: &|| {\n                 use syntax::AstNode;\n-                if let Ok(scrutinee_sptr) = source_map.expr_syntax(match_expr) {\n-                    let root = scrutinee_sptr.file_syntax(db.upcast());\n-                    if let Some(match_ast) = scrutinee_sptr.value.to_node(&root).syntax().parent() {\n-                        eprintln!(\n-                            \"Match checking is about to panic on this expression:\\n{}\",\n-                            match_ast.to_string(),\n-                        );\n-                    }\n-                }\n+                let match_expr_text = source_map\n+                    .expr_syntax(match_expr)\n+                    .ok()\n+                    .and_then(|scrutinee_sptr| {\n+                        let root = scrutinee_sptr.file_syntax(db.upcast());\n+                        scrutinee_sptr.value.to_node(&root).syntax().parent()\n+                    })\n+                    .map(|node| node.to_string());\n+                format!(\n+                    \"expression:\\n{}\",\n+                    match_expr_text.as_deref().unwrap_or(\"<synthesized expr>\")\n+                )\n             },\n         };\n         let report = compute_match_usefulness(&cx, &m_arms);"}, {"sha": "bd76a606cb120dbb03122c7ee8d6212cfe2448e4", "filename": "crates/hir_ty/src/diagnostics/match_check/usefulness.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/99516bbd67a0018c3c0bf94cb895896857d4263c/crates%2Fhir_ty%2Fsrc%2Fdiagnostics%2Fmatch_check%2Fusefulness.rs", "raw_url": "https://github.com/rust-lang/rust/raw/99516bbd67a0018c3c0bf94cb895896857d4263c/crates%2Fhir_ty%2Fsrc%2Fdiagnostics%2Fmatch_check%2Fusefulness.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_ty%2Fsrc%2Fdiagnostics%2Fmatch_check%2Fusefulness.rs?ref=99516bbd67a0018c3c0bf94cb895896857d4263c", "patch": "@@ -295,7 +295,7 @@ pub(crate) struct MatchCheckCtx<'a> {\n     pub(crate) db: &'a dyn HirDatabase,\n     /// Lowered patterns from arms plus generated by the check.\n     pub(crate) pattern_arena: &'a RefCell<PatternArena>,\n-    pub(crate) eprint_panic_context: &'a dyn Fn(),\n+    pub(crate) panic_context: &'a dyn Fn() -> String,\n }\n \n impl<'a> MatchCheckCtx<'a> {\n@@ -331,8 +331,7 @@ impl<'a> MatchCheckCtx<'a> {\n \n     #[track_caller]\n     pub(super) fn bug(&self, info: &str) -> ! {\n-        (self.eprint_panic_context)();\n-        panic!(\"bug: {}\", info);\n+        panic!(\"bug: {}\\n{}\", info, (self.panic_context)());\n     }\n }\n "}]}