{"sha": "1766aae145c6925a33e427f2fe6ef2a56c301665", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE3NjZhYWUxNDVjNjkyNWEzM2U0MjdmMmZlNmVmMmE1NmMzMDE2NjU=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-07-30T15:56:53Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-07-30T15:56:53Z"}, "message": "Rename EnumVariant -> Variant", "tree": {"sha": "dfcf22990794a5990602a468b862d544fbe63f0a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/dfcf22990794a5990602a468b862d544fbe63f0a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1766aae145c6925a33e427f2fe6ef2a56c301665", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1766aae145c6925a33e427f2fe6ef2a56c301665", "html_url": "https://github.com/rust-lang/rust/commit/1766aae145c6925a33e427f2fe6ef2a56c301665", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1766aae145c6925a33e427f2fe6ef2a56c301665/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "609680ef97dbf82c07b6b06e21aa366423892304", "url": "https://api.github.com/repos/rust-lang/rust/commits/609680ef97dbf82c07b6b06e21aa366423892304", "html_url": "https://github.com/rust-lang/rust/commit/609680ef97dbf82c07b6b06e21aa366423892304"}], "stats": {"total": 172, "additions": 86, "deletions": 86}, "files": [{"sha": "ccec688caee1a4858b809b27234ac98ecc79d77f", "filename": "crates/ra_assists/src/handlers/extract_struct_from_enum_variant.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1766aae145c6925a33e427f2fe6ef2a56c301665/crates%2Fra_assists%2Fsrc%2Fhandlers%2Fextract_struct_from_enum_variant.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1766aae145c6925a33e427f2fe6ef2a56c301665/crates%2Fra_assists%2Fsrc%2Fhandlers%2Fextract_struct_from_enum_variant.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_assists%2Fsrc%2Fhandlers%2Fextract_struct_from_enum_variant.rs?ref=1766aae145c6925a33e427f2fe6ef2a56c301665", "patch": "@@ -31,7 +31,7 @@ pub(crate) fn extract_struct_from_enum_variant(\n     acc: &mut Assists,\n     ctx: &AssistContext,\n ) -> Option<()> {\n-    let variant = ctx.find_node_at_offset::<ast::EnumVariant>()?;\n+    let variant = ctx.find_node_at_offset::<ast::Variant>()?;\n     let field_list = match variant.kind() {\n         ast::StructKind::Tuple(field_list) => field_list,\n         _ => return None,"}, {"sha": "5b282a30ac40991880689abfcb60a8fcdf473896", "filename": "crates/ra_assists/src/handlers/generate_from_impl_for_enum.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/1766aae145c6925a33e427f2fe6ef2a56c301665/crates%2Fra_assists%2Fsrc%2Fhandlers%2Fgenerate_from_impl_for_enum.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1766aae145c6925a33e427f2fe6ef2a56c301665/crates%2Fra_assists%2Fsrc%2Fhandlers%2Fgenerate_from_impl_for_enum.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_assists%2Fsrc%2Fhandlers%2Fgenerate_from_impl_for_enum.rs?ref=1766aae145c6925a33e427f2fe6ef2a56c301665", "patch": "@@ -22,7 +22,7 @@ use crate::{utils::FamousDefs, AssistContext, AssistId, AssistKind, Assists};\n // }\n // ```\n pub(crate) fn generate_from_impl_for_enum(acc: &mut Assists, ctx: &AssistContext) -> Option<()> {\n-    let variant = ctx.find_node_at_offset::<ast::EnumVariant>()?;\n+    let variant = ctx.find_node_at_offset::<ast::Variant>()?;\n     let variant_name = variant.name()?;\n     let enum_name = variant.parent_enum().name()?;\n     let field_list = match variant.kind() {\n@@ -69,7 +69,7 @@ impl From<{0}> for {1} {{\n \n fn existing_from_impl(\n     sema: &'_ hir::Semantics<'_, RootDatabase>,\n-    variant: &ast::EnumVariant,\n+    variant: &ast::Variant,\n ) -> Option<()> {\n     let variant = sema.to_def(variant)?;\n     let enum_ = variant.parent_enum(sema.db);"}, {"sha": "1c57475816d929cfc5a4be4f3e14cb9d5d7d6f83", "filename": "crates/ra_hir/src/has_source.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/1766aae145c6925a33e427f2fe6ef2a56c301665/crates%2Fra_hir%2Fsrc%2Fhas_source.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1766aae145c6925a33e427f2fe6ef2a56c301665/crates%2Fra_hir%2Fsrc%2Fhas_source.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Fhas_source.rs?ref=1766aae145c6925a33e427f2fe6ef2a56c301665", "patch": "@@ -75,8 +75,8 @@ impl HasSource for Enum {\n     }\n }\n impl HasSource for EnumVariant {\n-    type Ast = ast::EnumVariant;\n-    fn source(self, db: &dyn HirDatabase) -> InFile<ast::EnumVariant> {\n+    type Ast = ast::Variant;\n+    fn source(self, db: &dyn HirDatabase) -> InFile<ast::Variant> {\n         self.parent.id.child_source(db.upcast()).map(|map| map[self.id].clone())\n     }\n }"}, {"sha": "e18df25371574f0fbd3a70f1f6f8057659f5af2d", "filename": "crates/ra_hir/src/semantics.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1766aae145c6925a33e427f2fe6ef2a56c301665/crates%2Fra_hir%2Fsrc%2Fsemantics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1766aae145c6925a33e427f2fe6ef2a56c301665/crates%2Fra_hir%2Fsrc%2Fsemantics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Fsemantics.rs?ref=1766aae145c6925a33e427f2fe6ef2a56c301665", "patch": "@@ -591,7 +591,7 @@ to_def_impls![\n     (crate::Function, ast::Fn, fn_to_def),\n     (crate::Field, ast::RecordField, record_field_to_def),\n     (crate::Field, ast::TupleField, tuple_field_to_def),\n-    (crate::EnumVariant, ast::EnumVariant, enum_variant_to_def),\n+    (crate::EnumVariant, ast::Variant, enum_variant_to_def),\n     (crate::TypeParam, ast::TypeParam, type_param_to_def),\n     (crate::MacroDef, ast::MacroCall, macro_call_to_def), // this one is dubious, not all calls are macros\n     (crate::Local, ast::BindPat, bind_pat_to_def),"}, {"sha": "b85a126801400160a898a7dac8fbe05bff1450a4", "filename": "crates/ra_hir/src/semantics/source_to_def.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/1766aae145c6925a33e427f2fe6ef2a56c301665/crates%2Fra_hir%2Fsrc%2Fsemantics%2Fsource_to_def.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1766aae145c6925a33e427f2fe6ef2a56c301665/crates%2Fra_hir%2Fsrc%2Fsemantics%2Fsource_to_def.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Fsemantics%2Fsource_to_def.rs?ref=1766aae145c6925a33e427f2fe6ef2a56c301665", "patch": "@@ -100,9 +100,9 @@ impl SourceToDefCtx<'_, '_> {\n     }\n     pub(super) fn enum_variant_to_def(\n         &mut self,\n-        src: InFile<ast::EnumVariant>,\n+        src: InFile<ast::Variant>,\n     ) -> Option<EnumVariantId> {\n-        self.to_def(src, keys::ENUM_VARIANT)\n+        self.to_def(src, keys::VARIANT)\n     }\n     pub(super) fn bind_pat_to_def(\n         &mut self,"}, {"sha": "231c1dfab8e05f4a8900d7fc0af34fb479a4a42f", "filename": "crates/ra_hir_def/src/adt.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/1766aae145c6925a33e427f2fe6ef2a56c301665/crates%2Fra_hir_def%2Fsrc%2Fadt.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1766aae145c6925a33e427f2fe6ef2a56c301665/crates%2Fra_hir_def%2Fsrc%2Fadt.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_def%2Fsrc%2Fadt.rs?ref=1766aae145c6925a33e427f2fe6ef2a56c301665", "patch": "@@ -112,7 +112,7 @@ impl EnumData {\n \n impl HasChildSource for EnumId {\n     type ChildId = LocalEnumVariantId;\n-    type Value = ast::EnumVariant;\n+    type Value = ast::Variant;\n     fn child_source(&self, db: &dyn DefDatabase) -> InFile<ArenaMap<Self::ChildId, Self::Value>> {\n         let src = self.lookup(db).source(db);\n         let mut trace = Trace::new_for_map();\n@@ -123,7 +123,7 @@ impl HasChildSource for EnumId {\n \n fn lower_enum(\n     db: &dyn DefDatabase,\n-    trace: &mut Trace<EnumVariantData, ast::EnumVariant>,\n+    trace: &mut Trace<EnumVariantData, ast::Variant>,\n     ast: &InFile<ast::Enum>,\n     module_id: ModuleId,\n ) {"}, {"sha": "dcb00a1d9a0ba916cc83b3bcc0015f7a9c79aab7", "filename": "crates/ra_hir_def/src/child_by_source.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1766aae145c6925a33e427f2fe6ef2a56c301665/crates%2Fra_hir_def%2Fsrc%2Fchild_by_source.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1766aae145c6925a33e427f2fe6ef2a56c301665/crates%2Fra_hir_def%2Fsrc%2Fchild_by_source.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_def%2Fsrc%2Fchild_by_source.rs?ref=1766aae145c6925a33e427f2fe6ef2a56c301665", "patch": "@@ -162,7 +162,7 @@ impl ChildBySource for EnumId {\n         let arena_map = arena_map.as_ref();\n         for (local_id, source) in arena_map.value.iter() {\n             let id = EnumVariantId { parent: *self, local_id };\n-            res[keys::ENUM_VARIANT].insert(arena_map.with_value(source.clone()), id)\n+            res[keys::VARIANT].insert(arena_map.with_value(source.clone()), id)\n         }\n \n         res"}, {"sha": "6d963c85225535266b71cea82785bf813faba9ab", "filename": "crates/ra_hir_def/src/item_tree/lower.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/1766aae145c6925a33e427f2fe6ef2a56c301665/crates%2Fra_hir_def%2Fsrc%2Fitem_tree%2Flower.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1766aae145c6925a33e427f2fe6ef2a56c301665/crates%2Fra_hir_def%2Fsrc%2Fitem_tree%2Flower.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_def%2Fsrc%2Fitem_tree%2Flower.rs?ref=1766aae145c6925a33e427f2fe6ef2a56c301665", "patch": "@@ -259,7 +259,7 @@ impl Ctx {\n         Some(id(self.data().enums.alloc(res)))\n     }\n \n-    fn lower_variants(&mut self, variants: &ast::EnumVariantList) -> IdRange<Variant> {\n+    fn lower_variants(&mut self, variants: &ast::VariantList) -> IdRange<Variant> {\n         let start = self.next_variant_idx();\n         for variant in variants.variants() {\n             if let Some(data) = self.lower_variant(&variant) {\n@@ -271,7 +271,7 @@ impl Ctx {\n         IdRange::new(start..end)\n     }\n \n-    fn lower_variant(&mut self, variant: &ast::EnumVariant) -> Option<Variant> {\n+    fn lower_variant(&mut self, variant: &ast::Variant) -> Option<Variant> {\n         let name = variant.name()?.as_name();\n         let fields = self.lower_fields(&variant.kind());\n         let res = Variant { name, fields };"}, {"sha": "c2a03dfedae7b90559bd09151d870181ef42b920", "filename": "crates/ra_hir_def/src/keys.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1766aae145c6925a33e427f2fe6ef2a56c301665/crates%2Fra_hir_def%2Fsrc%2Fkeys.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1766aae145c6925a33e427f2fe6ef2a56c301665/crates%2Fra_hir_def%2Fsrc%2Fkeys.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_def%2Fsrc%2Fkeys.rs?ref=1766aae145c6925a33e427f2fe6ef2a56c301665", "patch": "@@ -24,7 +24,7 @@ pub const STRUCT: Key<ast::Struct, StructId> = Key::new();\n pub const UNION: Key<ast::Union, UnionId> = Key::new();\n pub const ENUM: Key<ast::Enum, EnumId> = Key::new();\n \n-pub const ENUM_VARIANT: Key<ast::EnumVariant, EnumVariantId> = Key::new();\n+pub const VARIANT: Key<ast::Variant, EnumVariantId> = Key::new();\n pub const TUPLE_FIELD: Key<ast::TupleField, FieldId> = Key::new();\n pub const RECORD_FIELD: Key<ast::RecordField, FieldId> = Key::new();\n pub const TYPE_PARAM: Key<ast::TypeParam, TypeParamId> = Key::new();"}, {"sha": "c30b91fe0aa1131a64dd0454575d173382bfa03a", "filename": "crates/ra_ide/src/display/navigation_target.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/1766aae145c6925a33e427f2fe6ef2a56c301665/crates%2Fra_ide%2Fsrc%2Fdisplay%2Fnavigation_target.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1766aae145c6925a33e427f2fe6ef2a56c301665/crates%2Fra_ide%2Fsrc%2Fdisplay%2Fnavigation_target.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fdisplay%2Fnavigation_target.rs?ref=1766aae145c6925a33e427f2fe6ef2a56c301665", "patch": "@@ -388,7 +388,7 @@ pub(crate) fn docs_from_symbol(db: &RootDatabase, symbol: &FileSymbol) -> Option\n             ast::ConstDef(it) => it.doc_comment_text(),\n             ast::StaticDef(it) => it.doc_comment_text(),\n             ast::RecordField(it) => it.doc_comment_text(),\n-            ast::EnumVariant(it) => it.doc_comment_text(),\n+            ast::Variant(it) => it.doc_comment_text(),\n             ast::MacroCall(it) => it.doc_comment_text(),\n             _ => None,\n         }\n@@ -413,7 +413,7 @@ pub(crate) fn description_from_symbol(db: &RootDatabase, symbol: &FileSymbol) ->\n             ast::ConstDef(it) => it.short_label(),\n             ast::StaticDef(it) => it.short_label(),\n             ast::RecordField(it) => it.short_label(),\n-            ast::EnumVariant(it) => it.short_label(),\n+            ast::Variant(it) => it.short_label(),\n             _ => None,\n         }\n     }"}, {"sha": "ddf1059eecda196287e9744be1d2341962df8cd5", "filename": "crates/ra_ide/src/display/short_label.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1766aae145c6925a33e427f2fe6ef2a56c301665/crates%2Fra_ide%2Fsrc%2Fdisplay%2Fshort_label.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1766aae145c6925a33e427f2fe6ef2a56c301665/crates%2Fra_ide%2Fsrc%2Fdisplay%2Fshort_label.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fdisplay%2Fshort_label.rs?ref=1766aae145c6925a33e427f2fe6ef2a56c301665", "patch": "@@ -71,7 +71,7 @@ impl ShortLabel for ast::RecordField {\n     }\n }\n \n-impl ShortLabel for ast::EnumVariant {\n+impl ShortLabel for ast::Variant {\n     fn short_label(&self) -> Option<String> {\n         Some(self.name()?.text().to_string())\n     }"}, {"sha": "fc81b48ccef19acaa34a762e98164e06b752a3b1", "filename": "crates/ra_ide/src/extend_selection.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1766aae145c6925a33e427f2fe6ef2a56c301665/crates%2Fra_ide%2Fsrc%2Fextend_selection.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1766aae145c6925a33e427f2fe6ef2a56c301665/crates%2Fra_ide%2Fsrc%2Fextend_selection.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fextend_selection.rs?ref=1766aae145c6925a33e427f2fe6ef2a56c301665", "patch": "@@ -42,7 +42,7 @@ fn try_extend_selection(\n         RECORD_FIELD_LIST,\n         TUPLE_FIELD_LIST,\n         RECORD_EXPR_FIELD_LIST,\n-        ENUM_VARIANT_LIST,\n+        VARIANT_LIST,\n         USE_TREE_LIST,\n         GENERIC_PARAM_LIST,\n         TYPE_ARG_LIST,"}, {"sha": "43202499d7ae05edaab707fc63bf477770b2d6b9", "filename": "crates/ra_ide/src/file_structure.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/1766aae145c6925a33e427f2fe6ef2a56c301665/crates%2Fra_ide%2Fsrc%2Ffile_structure.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1766aae145c6925a33e427f2fe6ef2a56c301665/crates%2Fra_ide%2Fsrc%2Ffile_structure.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Ffile_structure.rs?ref=1766aae145c6925a33e427f2fe6ef2a56c301665", "patch": "@@ -129,7 +129,7 @@ fn structure_node(node: &SyntaxNode) -> Option<StructureNode> {\n             ast::Struct(it) => decl(it),\n             ast::Union(it) => decl(it),\n             ast::Enum(it) => decl(it),\n-            ast::EnumVariant(it) => decl(it),\n+            ast::Variant(it) => decl(it),\n             ast::TraitDef(it) => decl(it),\n             ast::Module(it) => decl(it),\n             ast::TypeAlias(it) => {\n@@ -319,7 +319,7 @@ fn very_obsolete() {}\n                         label: \"X\",\n                         navigation_range: 169..170,\n                         node_range: 169..170,\n-                        kind: ENUM_VARIANT,\n+                        kind: VARIANT,\n                         detail: None,\n                         deprecated: false,\n                     },\n@@ -330,7 +330,7 @@ fn very_obsolete() {}\n                         label: \"Y\",\n                         navigation_range: 172..173,\n                         node_range: 172..178,\n-                        kind: ENUM_VARIANT,\n+                        kind: VARIANT,\n                         detail: None,\n                         deprecated: false,\n                     },"}, {"sha": "5a6e17936f94b068f28eeb9977e846702f97d34f", "filename": "crates/ra_ide/src/folding_ranges.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1766aae145c6925a33e427f2fe6ef2a56c301665/crates%2Fra_ide%2Fsrc%2Ffolding_ranges.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1766aae145c6925a33e427f2fe6ef2a56c301665/crates%2Fra_ide%2Fsrc%2Ffolding_ranges.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Ffolding_ranges.rs?ref=1766aae145c6925a33e427f2fe6ef2a56c301665", "patch": "@@ -93,7 +93,7 @@ fn fold_kind(kind: SyntaxKind) -> Option<FoldKind> {\n         | USE_TREE_LIST\n         | BLOCK_EXPR\n         | MATCH_ARM_LIST\n-        | ENUM_VARIANT_LIST\n+        | VARIANT_LIST\n         | TOKEN_TREE => Some(FoldKind::Block),\n         _ => None,\n     }"}, {"sha": "519e4bf1a255a88ee9aa545228121f657f62eeb0", "filename": "crates/ra_ide/src/references.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1766aae145c6925a33e427f2fe6ef2a56c301665/crates%2Fra_ide%2Fsrc%2Freferences.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1766aae145c6925a33e427f2fe6ef2a56c301665/crates%2Fra_ide%2Fsrc%2Freferences.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Freferences.rs?ref=1766aae145c6925a33e427f2fe6ef2a56c301665", "patch": "@@ -390,7 +390,7 @@ enum Foo {\n }\n \"#,\n         );\n-        check_result(refs, \"B ENUM_VARIANT FileId(1) 22..23 22..23 Other\", &[]);\n+        check_result(refs, \"B VARIANT FileId(1) 22..23 22..23 Other\", &[]);\n     }\n \n     #[test]"}, {"sha": "ce890c81677957429317a6152454b3463b9c678e", "filename": "crates/ra_ide/src/syntax_highlighting.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1766aae145c6925a33e427f2fe6ef2a56c301665/crates%2Fra_ide%2Fsrc%2Fsyntax_highlighting.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1766aae145c6925a33e427f2fe6ef2a56c301665/crates%2Fra_ide%2Fsrc%2Fsyntax_highlighting.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fsyntax_highlighting.rs?ref=1766aae145c6925a33e427f2fe6ef2a56c301665", "patch": "@@ -716,7 +716,7 @@ fn highlight_name_by_syntax(name: ast::Name) -> Highlight {\n         FN => HighlightTag::Function,\n         CONST_DEF => HighlightTag::Constant,\n         STATIC_DEF => HighlightTag::Static,\n-        ENUM_VARIANT => HighlightTag::EnumVariant,\n+        VARIANT => HighlightTag::EnumVariant,\n         BIND_PAT => HighlightTag::Local,\n         _ => default,\n     };"}, {"sha": "635cf706c2eeb07b032dc8ce59c1440acc9b2899", "filename": "crates/ra_ide_db/src/defs.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1766aae145c6925a33e427f2fe6ef2a56c301665/crates%2Fra_ide_db%2Fsrc%2Fdefs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1766aae145c6925a33e427f2fe6ef2a56c301665/crates%2Fra_ide_db%2Fsrc%2Fdefs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_db%2Fsrc%2Fdefs.rs?ref=1766aae145c6925a33e427f2fe6ef2a56c301665", "patch": "@@ -170,7 +170,7 @@ pub fn classify_name(sema: &Semantics<RootDatabase>, name: &ast::Name) -> Option\n                 let def: hir::Static = sema.to_def(&it)?;\n                 Some(NameClass::Definition(Definition::ModuleDef(def.into())))\n             },\n-            ast::EnumVariant(it) => {\n+            ast::Variant(it) => {\n                 let def: hir::EnumVariant = sema.to_def(&it)?;\n                 Some(NameClass::Definition(Definition::ModuleDef(def.into())))\n             },"}, {"sha": "22a7acdf31c2c8ec734459e6bcbefd1f0ea6d9c0", "filename": "crates/ra_parser/src/grammar.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1766aae145c6925a33e427f2fe6ef2a56c301665/crates%2Fra_parser%2Fsrc%2Fgrammar.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1766aae145c6925a33e427f2fe6ef2a56c301665/crates%2Fra_parser%2Fsrc%2Fgrammar.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_parser%2Fsrc%2Fgrammar.rs?ref=1766aae145c6925a33e427f2fe6ef2a56c301665", "patch": "@@ -144,7 +144,7 @@ pub(crate) fn reparser(\n         BLOCK_EXPR => expressions::block_expr,\n         RECORD_FIELD_LIST => items::record_field_def_list,\n         RECORD_EXPR_FIELD_LIST => items::record_field_list,\n-        ENUM_VARIANT_LIST => items::enum_variant_list,\n+        VARIANT_LIST => items::enum_variant_list,\n         MATCH_ARM_LIST => items::match_arm_list,\n         USE_TREE_LIST => items::use_tree_list,\n         EXTERN_ITEM_LIST => items::extern_item_list,"}, {"sha": "addfb59d4b1a98377f243d4bbb7c300a053aa10a", "filename": "crates/ra_parser/src/grammar/items/adt.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/1766aae145c6925a33e427f2fe6ef2a56c301665/crates%2Fra_parser%2Fsrc%2Fgrammar%2Fitems%2Fadt.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1766aae145c6925a33e427f2fe6ef2a56c301665/crates%2Fra_parser%2Fsrc%2Fgrammar%2Fitems%2Fadt.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_parser%2Fsrc%2Fgrammar%2Fitems%2Fadt.rs?ref=1766aae145c6925a33e427f2fe6ef2a56c301665", "patch": "@@ -91,7 +91,7 @@ pub(crate) fn enum_variant_list(p: &mut Parser) {\n             if p.eat(T![=]) {\n                 expressions::expr(p);\n             }\n-            var.complete(p, ENUM_VARIANT);\n+            var.complete(p, VARIANT);\n         } else {\n             var.abandon(p);\n             p.err_and_bump(\"expected enum variant\");\n@@ -101,7 +101,7 @@ pub(crate) fn enum_variant_list(p: &mut Parser) {\n         }\n     }\n     p.expect(T!['}']);\n-    m.complete(p, ENUM_VARIANT_LIST);\n+    m.complete(p, VARIANT_LIST);\n }\n \n pub(crate) fn record_field_def_list(p: &mut Parser) {"}, {"sha": "3b82347f388460e9a5d3d14ea3a274eb167bf124", "filename": "crates/ra_parser/src/syntax_kind/generated.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/1766aae145c6925a33e427f2fe6ef2a56c301665/crates%2Fra_parser%2Fsrc%2Fsyntax_kind%2Fgenerated.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1766aae145c6925a33e427f2fe6ef2a56c301665/crates%2Fra_parser%2Fsrc%2Fsyntax_kind%2Fgenerated.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_parser%2Fsrc%2Fsyntax_kind%2Fgenerated.rs?ref=1766aae145c6925a33e427f2fe6ef2a56c301665", "patch": "@@ -206,12 +206,12 @@ pub enum SyntaxKind {\n     BIN_EXPR,\n     EXTERN_BLOCK,\n     EXTERN_ITEM_LIST,\n-    ENUM_VARIANT,\n+    VARIANT,\n     RECORD_FIELD_LIST,\n     RECORD_FIELD,\n     TUPLE_FIELD_LIST,\n     TUPLE_FIELD,\n-    ENUM_VARIANT_LIST,\n+    VARIANT_LIST,\n     ITEM_LIST,\n     ASSOC_ITEM_LIST,\n     ATTR,"}, {"sha": "6613b54ba59ab0c8c90bf8ed95f98f1973ed57cd", "filename": "crates/ra_syntax/src/ast/generated/nodes.rs", "status": "modified", "additions": 15, "deletions": 15, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/1766aae145c6925a33e427f2fe6ef2a56c301665/crates%2Fra_syntax%2Fsrc%2Fast%2Fgenerated%2Fnodes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1766aae145c6925a33e427f2fe6ef2a56c301665/crates%2Fra_syntax%2Fsrc%2Fast%2Fgenerated%2Fnodes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Fsrc%2Fast%2Fgenerated%2Fnodes.rs?ref=1766aae145c6925a33e427f2fe6ef2a56c301665", "patch": "@@ -53,7 +53,7 @@ impl ast::VisibilityOwner for Enum {}\n impl ast::GenericParamsOwner for Enum {}\n impl Enum {\n     pub fn enum_token(&self) -> Option<SyntaxToken> { support::token(&self.syntax, T![enum]) }\n-    pub fn variant_list(&self) -> Option<EnumVariantList> { support::child(&self.syntax) }\n+    pub fn variant_list(&self) -> Option<VariantList> { support::child(&self.syntax) }\n }\n #[derive(Debug, Clone, PartialEq, Eq, Hash)]\n pub struct ExternBlock {\n@@ -427,22 +427,22 @@ impl TupleField {\n     pub fn type_ref(&self) -> Option<TypeRef> { support::child(&self.syntax) }\n }\n #[derive(Debug, Clone, PartialEq, Eq, Hash)]\n-pub struct EnumVariantList {\n+pub struct VariantList {\n     pub(crate) syntax: SyntaxNode,\n }\n-impl EnumVariantList {\n+impl VariantList {\n     pub fn l_curly_token(&self) -> Option<SyntaxToken> { support::token(&self.syntax, T!['{']) }\n-    pub fn variants(&self) -> AstChildren<EnumVariant> { support::children(&self.syntax) }\n+    pub fn variants(&self) -> AstChildren<Variant> { support::children(&self.syntax) }\n     pub fn r_curly_token(&self) -> Option<SyntaxToken> { support::token(&self.syntax, T!['}']) }\n }\n #[derive(Debug, Clone, PartialEq, Eq, Hash)]\n-pub struct EnumVariant {\n+pub struct Variant {\n     pub(crate) syntax: SyntaxNode,\n }\n-impl ast::AttrsOwner for EnumVariant {}\n-impl ast::NameOwner for EnumVariant {}\n-impl ast::VisibilityOwner for EnumVariant {}\n-impl EnumVariant {\n+impl ast::AttrsOwner for Variant {}\n+impl ast::NameOwner for Variant {}\n+impl ast::VisibilityOwner for Variant {}\n+impl Variant {\n     pub fn field_list(&self) -> Option<FieldList> { support::child(&self.syntax) }\n     pub fn eq_token(&self) -> Option<SyntaxToken> { support::token(&self.syntax, T![=]) }\n     pub fn expr(&self) -> Option<Expr> { support::child(&self.syntax) }\n@@ -1806,8 +1806,8 @@ impl AstNode for TupleField {\n     }\n     fn syntax(&self) -> &SyntaxNode { &self.syntax }\n }\n-impl AstNode for EnumVariantList {\n-    fn can_cast(kind: SyntaxKind) -> bool { kind == ENUM_VARIANT_LIST }\n+impl AstNode for VariantList {\n+    fn can_cast(kind: SyntaxKind) -> bool { kind == VARIANT_LIST }\n     fn cast(syntax: SyntaxNode) -> Option<Self> {\n         if Self::can_cast(syntax.kind()) {\n             Some(Self { syntax })\n@@ -1817,8 +1817,8 @@ impl AstNode for EnumVariantList {\n     }\n     fn syntax(&self) -> &SyntaxNode { &self.syntax }\n }\n-impl AstNode for EnumVariant {\n-    fn can_cast(kind: SyntaxKind) -> bool { kind == ENUM_VARIANT }\n+impl AstNode for Variant {\n+    fn can_cast(kind: SyntaxKind) -> bool { kind == VARIANT }\n     fn cast(syntax: SyntaxNode) -> Option<Self> {\n         if Self::can_cast(syntax.kind()) {\n             Some(Self { syntax })\n@@ -3640,12 +3640,12 @@ impl std::fmt::Display for TupleField {\n         std::fmt::Display::fmt(self.syntax(), f)\n     }\n }\n-impl std::fmt::Display for EnumVariantList {\n+impl std::fmt::Display for VariantList {\n     fn fmt(&self, f: &mut std::fmt::Formatter<'_>) -> std::fmt::Result {\n         std::fmt::Display::fmt(self.syntax(), f)\n     }\n }\n-impl std::fmt::Display for EnumVariant {\n+impl std::fmt::Display for Variant {\n     fn fmt(&self, f: &mut std::fmt::Formatter<'_>) -> std::fmt::Result {\n         std::fmt::Display::fmt(self.syntax(), f)\n     }"}, {"sha": "05ec49cecf75cd6916de3bf1e4605b2fcb68dbc8", "filename": "crates/ra_syntax/src/ast/node_ext.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/1766aae145c6925a33e427f2fe6ef2a56c301665/crates%2Fra_syntax%2Fsrc%2Fast%2Fnode_ext.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1766aae145c6925a33e427f2fe6ef2a56c301665/crates%2Fra_syntax%2Fsrc%2Fast%2Fnode_ext.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Fsrc%2Fast%2Fnode_ext.rs?ref=1766aae145c6925a33e427f2fe6ef2a56c301665", "patch": "@@ -247,7 +247,7 @@ impl ast::RecordFieldPat {\n     }\n }\n \n-impl ast::EnumVariant {\n+impl ast::Variant {\n     pub fn parent_enum(&self) -> ast::Enum {\n         self.syntax()\n             .parent()\n@@ -480,7 +480,7 @@ impl ast::DocCommentsOwner for ast::Union {}\n impl ast::DocCommentsOwner for ast::RecordField {}\n impl ast::DocCommentsOwner for ast::TupleField {}\n impl ast::DocCommentsOwner for ast::Enum {}\n-impl ast::DocCommentsOwner for ast::EnumVariant {}\n+impl ast::DocCommentsOwner for ast::Variant {}\n impl ast::DocCommentsOwner for ast::TraitDef {}\n impl ast::DocCommentsOwner for ast::Module {}\n impl ast::DocCommentsOwner for ast::StaticDef {}"}, {"sha": "c586dc320a9791565718eb80e42bad38cd95c1d5", "filename": "crates/ra_syntax/src/parsing/text_tree_sink.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1766aae145c6925a33e427f2fe6ef2a56c301665/crates%2Fra_syntax%2Fsrc%2Fparsing%2Ftext_tree_sink.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1766aae145c6925a33e427f2fe6ef2a56c301665/crates%2Fra_syntax%2Fsrc%2Fparsing%2Ftext_tree_sink.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Fsrc%2Fparsing%2Ftext_tree_sink.rs?ref=1766aae145c6925a33e427f2fe6ef2a56c301665", "patch": "@@ -146,7 +146,7 @@ fn n_attached_trivias<'a>(\n     trivias: impl Iterator<Item = (SyntaxKind, &'a str)>,\n ) -> usize {\n     match kind {\n-        MACRO_CALL | CONST_DEF | TYPE_ALIAS | STRUCT | ENUM | ENUM_VARIANT | FN | TRAIT_DEF\n+        MACRO_CALL | CONST_DEF | TYPE_ALIAS | STRUCT | ENUM | VARIANT | FN | TRAIT_DEF\n         | MODULE | RECORD_FIELD | STATIC_DEF => {\n             let mut res = 0;\n             let mut trivias = trivias.enumerate().peekable();"}, {"sha": "fca646557305b6175f63aa10bf68bc3bdcdeda50", "filename": "crates/ra_syntax/test_data/parser/err/0025_nope.rast", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/1766aae145c6925a33e427f2fe6ef2a56c301665/crates%2Fra_syntax%2Ftest_data%2Fparser%2Ferr%2F0025_nope.rast", "raw_url": "https://github.com/rust-lang/rust/raw/1766aae145c6925a33e427f2fe6ef2a56c301665/crates%2Fra_syntax%2Ftest_data%2Fparser%2Ferr%2F0025_nope.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Ferr%2F0025_nope.rast?ref=1766aae145c6925a33e427f2fe6ef2a56c301665", "patch": "@@ -17,15 +17,15 @@ SOURCE_FILE@0..575\n         NAME@21..25\n           IDENT@21..25 \"Test\"\n         WHITESPACE@25..26 \" \"\n-        ENUM_VARIANT_LIST@26..152\n+        VARIANT_LIST@26..152\n           L_CURLY@26..27 \"{\"\n           WHITESPACE@27..36 \"\\n        \"\n-          ENUM_VARIANT@36..40\n+          VARIANT@36..40\n             NAME@36..40\n               IDENT@36..40 \"Var1\"\n           COMMA@40..41 \",\"\n           WHITESPACE@41..50 \"\\n        \"\n-          ENUM_VARIANT@50..62\n+          VARIANT@50..62\n             NAME@50..54\n               IDENT@50..54 \"Var2\"\n             TUPLE_FIELD_LIST@54..62\n@@ -39,7 +39,7 @@ SOURCE_FILE@0..575\n               R_PAREN@61..62 \")\"\n           COMMA@62..63 \",\"\n           WHITESPACE@63..72 \"\\n        \"\n-          ENUM_VARIANT@72..145\n+          VARIANT@72..145\n             NAME@72..76\n               IDENT@72..76 \"Var3\"\n             WHITESPACE@76..77 \" \"\n@@ -85,10 +85,10 @@ SOURCE_FILE@0..575\n         NAME@196..201\n           IDENT@196..201 \"Test2\"\n         WHITESPACE@201..202 \" \"\n-        ENUM_VARIANT_LIST@202..223\n+        VARIANT_LIST@202..223\n           L_CURLY@202..203 \"{\"\n           WHITESPACE@203..212 \"\\n        \"\n-          ENUM_VARIANT@212..216\n+          VARIANT@212..216\n             NAME@212..216\n               IDENT@212..216 \"Fine\"\n           COMMA@216..217 \",\"\n@@ -101,10 +101,10 @@ SOURCE_FILE@0..575\n         NAME@234..239\n           IDENT@234..239 \"Test3\"\n         WHITESPACE@239..240 \" \"\n-        ENUM_VARIANT_LIST@240..300\n+        VARIANT_LIST@240..300\n           L_CURLY@240..241 \"{\"\n           WHITESPACE@241..250 \"\\n        \"\n-          ENUM_VARIANT@250..293\n+          VARIANT@250..293\n             NAME@250..259\n               IDENT@250..259 \"StillFine\"\n             WHITESPACE@259..260 \" \"\n@@ -140,10 +140,10 @@ SOURCE_FILE@0..575\n             NAME@343..348\n               IDENT@343..348 \"Test4\"\n             WHITESPACE@348..349 \" \"\n-            ENUM_VARIANT_LIST@349..453\n+            VARIANT_LIST@349..453\n               L_CURLY@349..350 \"{\"\n               WHITESPACE@350..363 \"\\n            \"\n-              ENUM_VARIANT@363..372\n+              VARIANT@363..372\n                 NAME@363..367\n                   IDENT@363..367 \"Nope\"\n                 TUPLE_FIELD_LIST@367..372"}, {"sha": "f2561abd69bae9681b00ff1a356e7c2d4540cc51", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0118_impl_inner_attributes.rast", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1766aae145c6925a33e427f2fe6ef2a56c301665/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0118_impl_inner_attributes.rast", "raw_url": "https://github.com/rust-lang/rust/raw/1766aae145c6925a33e427f2fe6ef2a56c301665/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0118_impl_inner_attributes.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0118_impl_inner_attributes.rast?ref=1766aae145c6925a33e427f2fe6ef2a56c301665", "patch": "@@ -4,7 +4,7 @@ SOURCE_FILE@0..94\n     WHITESPACE@4..5 \" \"\n     NAME@5..6\n       IDENT@5..6 \"F\"\n-    ENUM_VARIANT_LIST@6..8\n+    VARIANT_LIST@6..8\n       L_CURLY@6..7 \"{\"\n       R_CURLY@7..8 \"}\"\n   WHITESPACE@8..9 \"\\n\""}, {"sha": "429a0506e1a2548fd16a103952d5201820369a9d", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0134_nocontentexpr_after_item.rast", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/1766aae145c6925a33e427f2fe6ef2a56c301665/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0134_nocontentexpr_after_item.rast", "raw_url": "https://github.com/rust-lang/rust/raw/1766aae145c6925a33e427f2fe6ef2a56c301665/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0134_nocontentexpr_after_item.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0134_nocontentexpr_after_item.rast?ref=1766aae145c6925a33e427f2fe6ef2a56c301665", "patch": "@@ -17,15 +17,15 @@ SOURCE_FILE@0..111\n         NAME@32..41\n           IDENT@32..41 \"LocalEnum\"\n         WHITESPACE@41..42 \" \"\n-        ENUM_VARIANT_LIST@42..75\n+        VARIANT_LIST@42..75\n           L_CURLY@42..43 \"{\"\n           WHITESPACE@43..52 \"\\n        \"\n-          ENUM_VARIANT@52..55\n+          VARIANT@52..55\n             NAME@52..55\n               IDENT@52..55 \"One\"\n           COMMA@55..56 \",\"\n           WHITESPACE@56..65 \"\\n        \"\n-          ENUM_VARIANT@65..68\n+          VARIANT@65..68\n             NAME@65..68\n               IDENT@65..68 \"Two\"\n           COMMA@68..69 \",\""}, {"sha": "a2e05eb2e2a7d6d518b490cafd1f48b5cac0196b", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0157_variant_discriminant.rast", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/1766aae145c6925a33e427f2fe6ef2a56c301665/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0157_variant_discriminant.rast", "raw_url": "https://github.com/rust-lang/rust/raw/1766aae145c6925a33e427f2fe6ef2a56c301665/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0157_variant_discriminant.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0157_variant_discriminant.rast?ref=1766aae145c6925a33e427f2fe6ef2a56c301665", "patch": "@@ -5,10 +5,10 @@ SOURCE_FILE@0..23\n     NAME@5..6\n       IDENT@5..6 \"E\"\n     WHITESPACE@6..7 \" \"\n-    ENUM_VARIANT_LIST@7..22\n+    VARIANT_LIST@7..22\n       L_CURLY@7..8 \"{\"\n       WHITESPACE@8..9 \" \"\n-      ENUM_VARIANT@9..20\n+      VARIANT@9..20\n         NAME@9..10\n           IDENT@9..10 \"X\"\n         TUPLE_FIELD_LIST@10..15"}, {"sha": "c3df008146d74c3f15ea4e751ffc59505e1fcd6e", "filename": "crates/ra_syntax/test_data/parser/ok/0019_enums.rast", "status": "modified", "additions": 13, "deletions": 13, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/1766aae145c6925a33e427f2fe6ef2a56c301665/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0019_enums.rast", "raw_url": "https://github.com/rust-lang/rust/raw/1766aae145c6925a33e427f2fe6ef2a56c301665/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0019_enums.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0019_enums.rast?ref=1766aae145c6925a33e427f2fe6ef2a56c301665", "patch": "@@ -5,7 +5,7 @@ SOURCE_FILE@0..182\n     NAME@5..7\n       IDENT@5..7 \"E1\"\n     WHITESPACE@7..8 \" \"\n-    ENUM_VARIANT_LIST@8..11\n+    VARIANT_LIST@8..11\n       L_CURLY@8..9 \"{\"\n       WHITESPACE@9..10 \"\\n\"\n       R_CURLY@10..11 \"}\"\n@@ -22,7 +22,7 @@ SOURCE_FILE@0..182\n           IDENT@21..22 \"T\"\n       R_ANGLE@22..23 \">\"\n     WHITESPACE@23..24 \" \"\n-    ENUM_VARIANT_LIST@24..27\n+    VARIANT_LIST@24..27\n       L_CURLY@24..25 \"{\"\n       WHITESPACE@25..26 \"\\n\"\n       R_CURLY@26..27 \"}\"\n@@ -33,10 +33,10 @@ SOURCE_FILE@0..182\n     NAME@34..36\n       IDENT@34..36 \"E3\"\n     WHITESPACE@36..37 \" \"\n-    ENUM_VARIANT_LIST@37..46\n+    VARIANT_LIST@37..46\n       L_CURLY@37..38 \"{\"\n       WHITESPACE@38..43 \"\\n    \"\n-      ENUM_VARIANT@43..44\n+      VARIANT@43..44\n         NAME@43..44\n           IDENT@43..44 \"X\"\n       WHITESPACE@44..45 \"\\n\"\n@@ -48,10 +48,10 @@ SOURCE_FILE@0..182\n     NAME@53..55\n       IDENT@53..55 \"E4\"\n     WHITESPACE@55..56 \" \"\n-    ENUM_VARIANT_LIST@56..66\n+    VARIANT_LIST@56..66\n       L_CURLY@56..57 \"{\"\n       WHITESPACE@57..62 \"\\n    \"\n-      ENUM_VARIANT@62..63\n+      VARIANT@62..63\n         NAME@62..63\n           IDENT@62..63 \"X\"\n       COMMA@63..64 \",\"\n@@ -64,15 +64,15 @@ SOURCE_FILE@0..182\n     NAME@73..75\n       IDENT@73..75 \"E5\"\n     WHITESPACE@75..76 \" \"\n-    ENUM_VARIANT_LIST@76..181\n+    VARIANT_LIST@76..181\n       L_CURLY@76..77 \"{\"\n       WHITESPACE@77..82 \"\\n    \"\n-      ENUM_VARIANT@82..83\n+      VARIANT@82..83\n         NAME@82..83\n           IDENT@82..83 \"A\"\n       COMMA@83..84 \",\"\n       WHITESPACE@84..89 \"\\n    \"\n-      ENUM_VARIANT@89..95\n+      VARIANT@89..95\n         NAME@89..90\n           IDENT@89..90 \"B\"\n         WHITESPACE@90..91 \" \"\n@@ -82,7 +82,7 @@ SOURCE_FILE@0..182\n           INT_NUMBER@93..95 \"92\"\n       COMMA@95..96 \",\"\n       WHITESPACE@96..101 \"\\n    \"\n-      ENUM_VARIANT@101..146\n+      VARIANT@101..146\n         NAME@101..102\n           IDENT@101..102 \"C\"\n         WHITESPACE@102..103 \" \"\n@@ -119,7 +119,7 @@ SOURCE_FILE@0..182\n           R_CURLY@145..146 \"}\"\n       COMMA@146..147 \",\"\n       WHITESPACE@147..152 \"\\n    \"\n-      ENUM_VARIANT@152..156\n+      VARIANT@152..156\n         NAME@152..153\n           IDENT@152..153 \"F\"\n         WHITESPACE@153..154 \" \"\n@@ -128,7 +128,7 @@ SOURCE_FILE@0..182\n           R_CURLY@155..156 \"}\"\n       COMMA@156..157 \",\"\n       WHITESPACE@157..162 \"\\n    \"\n-      ENUM_VARIANT@162..169\n+      VARIANT@162..169\n         NAME@162..163\n           IDENT@162..163 \"D\"\n         TUPLE_FIELD_LIST@163..169\n@@ -143,7 +143,7 @@ SOURCE_FILE@0..182\n           R_PAREN@168..169 \")\"\n       COMMA@169..170 \",\"\n       WHITESPACE@170..175 \"\\n    \"\n-      ENUM_VARIANT@175..178\n+      VARIANT@175..178\n         NAME@175..176\n           IDENT@175..176 \"E\"\n         TUPLE_FIELD_LIST@176..178"}, {"sha": "7a54fa11320b542ee025678ec42d5fcf9e806d85", "filename": "crates/ra_syntax/test_data/parser/ok/0047_minus_in_inner_pattern.rast", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/1766aae145c6925a33e427f2fe6ef2a56c301665/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0047_minus_in_inner_pattern.rast", "raw_url": "https://github.com/rust-lang/rust/raw/1766aae145c6925a33e427f2fe6ef2a56c301665/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0047_minus_in_inner_pattern.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0047_minus_in_inner_pattern.rast?ref=1766aae145c6925a33e427f2fe6ef2a56c301665", "patch": "@@ -262,10 +262,10 @@ SOURCE_FILE@0..395\n     NAME@348..349\n       IDENT@348..349 \"A\"\n     WHITESPACE@349..350 \" \"\n-    ENUM_VARIANT_LIST@350..367\n+    VARIANT_LIST@350..367\n       L_CURLY@350..351 \"{\"\n       WHITESPACE@351..356 \"\\n    \"\n-      ENUM_VARIANT@356..365\n+      VARIANT@356..365\n         NAME@356..357\n           IDENT@356..357 \"B\"\n         TUPLE_FIELD_LIST@357..365"}, {"sha": "dcd81da6ec20ae92a867b69b21f288d196ea7def", "filename": "crates/rust-analyzer/src/to_proto.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1766aae145c6925a33e427f2fe6ef2a56c301665/crates%2Frust-analyzer%2Fsrc%2Fto_proto.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1766aae145c6925a33e427f2fe6ef2a56c301665/crates%2Frust-analyzer%2Fsrc%2Fto_proto.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fto_proto.rs?ref=1766aae145c6925a33e427f2fe6ef2a56c301665", "patch": "@@ -34,7 +34,7 @@ pub(crate) fn symbol_kind(syntax_kind: SyntaxKind) -> lsp_types::SymbolKind {\n         SyntaxKind::FN => lsp_types::SymbolKind::Function,\n         SyntaxKind::STRUCT => lsp_types::SymbolKind::Struct,\n         SyntaxKind::ENUM => lsp_types::SymbolKind::Enum,\n-        SyntaxKind::ENUM_VARIANT => lsp_types::SymbolKind::EnumMember,\n+        SyntaxKind::VARIANT => lsp_types::SymbolKind::EnumMember,\n         SyntaxKind::TRAIT_DEF => lsp_types::SymbolKind::Interface,\n         SyntaxKind::MACRO_CALL => lsp_types::SymbolKind::Function,\n         SyntaxKind::MODULE => lsp_types::SymbolKind::Module,"}, {"sha": "94f4d17aa49623685517256fdb34eef9c1077e1a", "filename": "xtask/src/ast_src.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/1766aae145c6925a33e427f2fe6ef2a56c301665/xtask%2Fsrc%2Fast_src.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1766aae145c6925a33e427f2fe6ef2a56c301665/xtask%2Fsrc%2Fast_src.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/xtask%2Fsrc%2Fast_src.rs?ref=1766aae145c6925a33e427f2fe6ef2a56c301665", "patch": "@@ -179,12 +179,12 @@ pub(crate) const KINDS_SRC: KindsSrc = KindsSrc {\n         \"BIN_EXPR\",\n         \"EXTERN_BLOCK\",\n         \"EXTERN_ITEM_LIST\",\n-        \"ENUM_VARIANT\",\n+        \"VARIANT\",\n         \"RECORD_FIELD_LIST\",\n         \"RECORD_FIELD\",\n         \"TUPLE_FIELD_LIST\",\n         \"TUPLE_FIELD\",\n-        \"ENUM_VARIANT_LIST\",\n+        \"VARIANT_LIST\",\n         \"ITEM_LIST\",\n         \"ASSOC_ITEM_LIST\",\n         \"ATTR\","}, {"sha": "48d4f4b4a045579e36ecfdcf7d60fb147da867fe", "filename": "xtask/src/codegen/rust.ungram", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/1766aae145c6925a33e427f2fe6ef2a56c301665/xtask%2Fsrc%2Fcodegen%2Frust.ungram", "raw_url": "https://github.com/rust-lang/rust/raw/1766aae145c6925a33e427f2fe6ef2a56c301665/xtask%2Fsrc%2Fcodegen%2Frust.ungram", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/xtask%2Fsrc%2Fcodegen%2Frust.ungram?ref=1766aae145c6925a33e427f2fe6ef2a56c301665", "patch": "@@ -100,12 +100,12 @@ FieldList =\n \n Enum =\n   Attr* Visibility? 'enum' Name GenericParamList? WhereClause?\n-  variant_list:EnumVariantList\n+  VariantList\n \n-EnumVariantList =\n- '{' variants:EnumVariant* '}'\n+VariantList =\n+ '{' Variant* '}'\n \n-EnumVariant =\n+Variant =\n   Attr* Visibility? Name FieldList ('=' Expr)?\n \n Union ="}]}