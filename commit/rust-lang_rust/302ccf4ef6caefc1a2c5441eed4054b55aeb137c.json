{"sha": "302ccf4ef6caefc1a2c5441eed4054b55aeb137c", "node_id": "MDY6Q29tbWl0NzI0NzEyOjMwMmNjZjRlZjZjYWVmYzFhMmM1NDQxZWVkNDA1NGI1NWFlYjEzN2M=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2020-08-08T12:05:31Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2020-08-08T12:05:31Z"}, "message": "Auto merge of #1500 - RalfJung:rustup, r=RalfJung\n\nrustup\n\nAdjust for https://github.com/rust-lang/rust/pull/74932.\nBlocked on https://github.com/rust-lang/rust/pull/75282.", "tree": {"sha": "9f52bd1b5aa90c1a2d5983179ab9a3b5e7e24c6e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9f52bd1b5aa90c1a2d5983179ab9a3b5e7e24c6e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/302ccf4ef6caefc1a2c5441eed4054b55aeb137c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/302ccf4ef6caefc1a2c5441eed4054b55aeb137c", "html_url": "https://github.com/rust-lang/rust/commit/302ccf4ef6caefc1a2c5441eed4054b55aeb137c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/302ccf4ef6caefc1a2c5441eed4054b55aeb137c/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cf633d0e897c065381b7b7d14984830176caf8b2", "url": "https://api.github.com/repos/rust-lang/rust/commits/cf633d0e897c065381b7b7d14984830176caf8b2", "html_url": "https://github.com/rust-lang/rust/commit/cf633d0e897c065381b7b7d14984830176caf8b2"}, {"sha": "07a4383ac8930d3d1a243f3e44f6cbc33e42696b", "url": "https://api.github.com/repos/rust-lang/rust/commits/07a4383ac8930d3d1a243f3e44f6cbc33e42696b", "html_url": "https://github.com/rust-lang/rust/commit/07a4383ac8930d3d1a243f3e44f6cbc33e42696b"}], "stats": {"total": 10, "additions": 4, "deletions": 6}, "files": [{"sha": "75cd757fcc4c54f0feef220e4978347d86cc4b9c", "filename": "rust-version", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/302ccf4ef6caefc1a2c5441eed4054b55aeb137c/rust-version", "raw_url": "https://github.com/rust-lang/rust/raw/302ccf4ef6caefc1a2c5441eed4054b55aeb137c/rust-version", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/rust-version?ref=302ccf4ef6caefc1a2c5441eed4054b55aeb137c", "patch": "@@ -1 +1 @@\n-1d69e3b1d753951bc7df0f02d6fd4719065d98c3\n+c92fc8db8b009b7661cff31fa59a7c0348653bd0"}, {"sha": "56d19e62749ea0bd09b7a4b9f9c8ac3212f9924c", "filename": "src/bin/miri-rustc-tests.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/302ccf4ef6caefc1a2c5441eed4054b55aeb137c/src%2Fbin%2Fmiri-rustc-tests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/302ccf4ef6caefc1a2c5441eed4054b55aeb137c/src%2Fbin%2Fmiri-rustc-tests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbin%2Fmiri-rustc-tests.rs?ref=302ccf4ef6caefc1a2c5441eed4054b55aeb137c", "patch": "@@ -38,7 +38,7 @@ impl rustc_driver::Callbacks for MiriCompilerCalls {\n                         if let hir::ItemKind::Fn(.., body_id) = i.kind {\n                             if i.attrs\n                                 .iter()\n-                                .any(|attr| attr.check_name(rustc_span::symbol::sym::test))\n+                                .any(|attr| self.0.sess.check_name(attr, rustc_span::symbol::sym::test))\n                             {\n                                 let config = miri::MiriConfig::default();\n                                 let did = self.0.hir().body_owner_def_id(body_id).to_def_id();"}, {"sha": "9e22825ccac4bbdcd08591844359f0f9f6de2560", "filename": "src/machine.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/302ccf4ef6caefc1a2c5441eed4054b55aeb137c/src%2Fmachine.rs", "raw_url": "https://github.com/rust-lang/rust/raw/302ccf4ef6caefc1a2c5441eed4054b55aeb137c/src%2Fmachine.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fmachine.rs?ref=302ccf4ef6caefc1a2c5441eed4054b55aeb137c", "patch": "@@ -11,7 +11,6 @@ use std::fmt;\n use log::trace;\n use rand::rngs::StdRng;\n \n-use rustc_ast::attr;\n use rustc_data_structures::fx::FxHashMap;\n use rustc_middle::{\n     mir,\n@@ -442,7 +441,7 @@ impl<'mir, 'tcx> Machine<'mir, 'tcx> for Evaluator<'mir, 'tcx> {\n         def_id: DefId,\n     ) -> InterpResult<'tcx, AllocId> {\n         let attrs = memory.tcx.get_attrs(def_id);\n-        let link_name = match attr::first_attr_value_str_by_name(&attrs, sym::link_name) {\n+        let link_name = match memory.tcx.sess.first_attr_value_str_by_name(&attrs, sym::link_name) {\n             Some(name) => name,\n             None => memory.tcx.item_name(def_id),\n         };"}, {"sha": "355801eb8ffb26a05d5185b1c08849260f4ff9db", "filename": "src/shims/foreign_items.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/302ccf4ef6caefc1a2c5441eed4054b55aeb137c/src%2Fshims%2Fforeign_items.rs", "raw_url": "https://github.com/rust-lang/rust/raw/302ccf4ef6caefc1a2c5441eed4054b55aeb137c/src%2Fshims%2Fforeign_items.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fshims%2Fforeign_items.rs?ref=302ccf4ef6caefc1a2c5441eed4054b55aeb137c", "patch": "@@ -7,7 +7,6 @@ use rustc_middle::{mir, ty};\n use rustc_target::abi::{Align, Size};\n use rustc_apfloat::Float;\n use rustc_span::symbol::sym;\n-use rustc_ast::attr;\n \n use crate::*;\n use helpers::check_arg_count;\n@@ -117,7 +116,7 @@ pub trait EvalContextExt<'mir, 'tcx: 'mir>: crate::MiriEvalContextExt<'mir, 'tcx\n     ) -> InterpResult<'tcx, Option<&'mir mir::Body<'tcx>>> {\n         let this = self.eval_context_mut();\n         let attrs = this.tcx.get_attrs(def_id);\n-        let link_name = match attr::first_attr_value_str_by_name(&attrs, sym::link_name) {\n+        let link_name = match this.tcx.sess.first_attr_value_str_by_name(&attrs, sym::link_name) {\n             Some(name) => name.as_str(),\n             None => this.tcx.item_name(def_id).as_str(),\n         };"}]}