{"sha": "da4384583b84c262dec82be4b041f0332ca16e57", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRhNDM4NDU4M2I4NGMyNjJkZWM4MmJlNGIwNDFmMDMzMmNhMTZlNTc=", "commit": {"author": {"name": "Huon Wilson", "email": "dbau.pp+github@gmail.com", "date": "2013-07-01T03:50:39Z"}, "committer": {"name": "Huon Wilson", "email": "dbau.pp+github@gmail.com", "date": "2013-07-01T07:46:57Z"}, "message": "lint: make the non_camel_case_types lint work with scripts without a upper/lowercase distinction.", "tree": {"sha": "c078fae292b1929ee9738a86d3d4eab0eddd947a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c078fae292b1929ee9738a86d3d4eab0eddd947a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/da4384583b84c262dec82be4b041f0332ca16e57", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/da4384583b84c262dec82be4b041f0332ca16e57", "html_url": "https://github.com/rust-lang/rust/commit/da4384583b84c262dec82be4b041f0332ca16e57", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/da4384583b84c262dec82be4b041f0332ca16e57/comments", "author": {"login": "huonw", "id": 1203825, "node_id": "MDQ6VXNlcjEyMDM4MjU=", "avatar_url": "https://avatars.githubusercontent.com/u/1203825?v=4", "gravatar_id": "", "url": "https://api.github.com/users/huonw", "html_url": "https://github.com/huonw", "followers_url": "https://api.github.com/users/huonw/followers", "following_url": "https://api.github.com/users/huonw/following{/other_user}", "gists_url": "https://api.github.com/users/huonw/gists{/gist_id}", "starred_url": "https://api.github.com/users/huonw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/huonw/subscriptions", "organizations_url": "https://api.github.com/users/huonw/orgs", "repos_url": "https://api.github.com/users/huonw/repos", "events_url": "https://api.github.com/users/huonw/events{/privacy}", "received_events_url": "https://api.github.com/users/huonw/received_events", "type": "User", "site_admin": false}, "committer": {"login": "huonw", "id": 1203825, "node_id": "MDQ6VXNlcjEyMDM4MjU=", "avatar_url": "https://avatars.githubusercontent.com/u/1203825?v=4", "gravatar_id": "", "url": "https://api.github.com/users/huonw", "html_url": "https://github.com/huonw", "followers_url": "https://api.github.com/users/huonw/followers", "following_url": "https://api.github.com/users/huonw/following{/other_user}", "gists_url": "https://api.github.com/users/huonw/gists{/gist_id}", "starred_url": "https://api.github.com/users/huonw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/huonw/subscriptions", "organizations_url": "https://api.github.com/users/huonw/orgs", "repos_url": "https://api.github.com/users/huonw/repos", "events_url": "https://api.github.com/users/huonw/events{/privacy}", "received_events_url": "https://api.github.com/users/huonw/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "07feeb95c5e73c5d871c7e365cf4a7138774d449", "url": "https://api.github.com/repos/rust-lang/rust/commits/07feeb95c5e73c5d871c7e365cf4a7138774d449", "html_url": "https://github.com/rust-lang/rust/commit/07feeb95c5e73c5d871c7e365cf4a7138774d449"}], "stats": {"total": 5, "additions": 4, "deletions": 1}, "files": [{"sha": "d7e49a8225345b099c9fbe75112dbe03b31d1e0e", "filename": "src/librustc/middle/lint.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/da4384583b84c262dec82be4b041f0332ca16e57/src%2Flibrustc%2Fmiddle%2Flint.rs", "raw_url": "https://github.com/rust-lang/rust/raw/da4384583b84c262dec82be4b041f0332ca16e57/src%2Flibrustc%2Fmiddle%2Flint.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Flint.rs?ref=da4384583b84c262dec82be4b041f0332ca16e57", "patch": "@@ -854,7 +854,10 @@ fn check_item_non_camel_case_types(cx: &Context, it: &ast::item) {\n         let ident = cx.sess.str_of(ident);\n         assert!(!ident.is_empty());\n         let ident = ident.trim_chars(&'_');\n-        char::is_uppercase(ident.char_at(0)) &&\n+\n+        // start with a non-lowercase letter rather than non-uppercase\n+        // ones (some scripts don't have a concept of upper/lowercase)\n+        !ident.char_at(0).is_lowercase() &&\n             !ident.contains_char('_')\n     }\n "}]}