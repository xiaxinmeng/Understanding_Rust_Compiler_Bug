{"sha": "65a666c339a515ed39e61319d5101c8b98e77ba2", "node_id": "MDY6Q29tbWl0NzI0NzEyOjY1YTY2NmMzMzlhNTE1ZWQzOWU2MTMxOWQ1MTAxYzhiOThlNzdiYTI=", "commit": {"author": {"name": "Vadim Petrochenkov", "email": "vadim.petrochenkov@gmail.com", "date": "2020-02-29T15:56:05Z"}, "committer": {"name": "Vadim Petrochenkov", "email": "vadim.petrochenkov@gmail.com", "date": "2020-02-29T15:56:05Z"}, "message": "rustc_parse: Tweak the function parameter name check", "tree": {"sha": "1529d30b4ca7e56e3e6ceaefb60dfc7d3e700b2a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1529d30b4ca7e56e3e6ceaefb60dfc7d3e700b2a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/65a666c339a515ed39e61319d5101c8b98e77ba2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/65a666c339a515ed39e61319d5101c8b98e77ba2", "html_url": "https://github.com/rust-lang/rust/commit/65a666c339a515ed39e61319d5101c8b98e77ba2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/65a666c339a515ed39e61319d5101c8b98e77ba2/comments", "author": {"login": "petrochenkov", "id": 5751617, "node_id": "MDQ6VXNlcjU3NTE2MTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5751617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrochenkov", "html_url": "https://github.com/petrochenkov", "followers_url": "https://api.github.com/users/petrochenkov/followers", "following_url": "https://api.github.com/users/petrochenkov/following{/other_user}", "gists_url": "https://api.github.com/users/petrochenkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrochenkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrochenkov/subscriptions", "organizations_url": "https://api.github.com/users/petrochenkov/orgs", "repos_url": "https://api.github.com/users/petrochenkov/repos", "events_url": "https://api.github.com/users/petrochenkov/events{/privacy}", "received_events_url": "https://api.github.com/users/petrochenkov/received_events", "type": "User", "site_admin": false}, "committer": {"login": "petrochenkov", "id": 5751617, "node_id": "MDQ6VXNlcjU3NTE2MTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5751617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrochenkov", "html_url": "https://github.com/petrochenkov", "followers_url": "https://api.github.com/users/petrochenkov/followers", "following_url": "https://api.github.com/users/petrochenkov/following{/other_user}", "gists_url": "https://api.github.com/users/petrochenkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrochenkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrochenkov/subscriptions", "organizations_url": "https://api.github.com/users/petrochenkov/orgs", "repos_url": "https://api.github.com/users/petrochenkov/repos", "events_url": "https://api.github.com/users/petrochenkov/events{/privacy}", "received_events_url": "https://api.github.com/users/petrochenkov/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3f9bddc7fea3ca1d49f39f22bb937a84ed32f84e", "url": "https://api.github.com/repos/rust-lang/rust/commits/3f9bddc7fea3ca1d49f39f22bb937a84ed32f84e", "html_url": "https://github.com/rust-lang/rust/commit/3f9bddc7fea3ca1d49f39f22bb937a84ed32f84e"}], "stats": {"total": 7, "additions": 4, "deletions": 3}, "files": [{"sha": "d00d9fc72bfff80de4282ff36811a05e4e512d08", "filename": "src/librustc_parse/parser/item.rs", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/65a666c339a515ed39e61319d5101c8b98e77ba2/src%2Flibrustc_parse%2Fparser%2Fitem.rs", "raw_url": "https://github.com/rust-lang/rust/raw/65a666c339a515ed39e61319d5101c8b98e77ba2/src%2Flibrustc_parse%2Fparser%2Fitem.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_parse%2Fparser%2Fitem.rs?ref=65a666c339a515ed39e61319d5101c8b98e77ba2", "patch": "@@ -6,6 +6,7 @@ use crate::maybe_whole;\n \n use rustc_ast_pretty::pprust;\n use rustc_errors::{struct_span_err, Applicability, PResult, StashKey};\n+use rustc_span::edition::Edition;\n use rustc_span::source_map::{self, Span};\n use rustc_span::symbol::{kw, sym, Symbol};\n use syntax::ast::{self, AttrStyle, AttrVec, Attribute, Ident, DUMMY_NODE_ID};\n@@ -636,7 +637,7 @@ impl<'a> Parser<'a> {\n     }\n \n     pub fn parse_trait_item(&mut self) -> PResult<'a, Option<Option<P<AssocItem>>>> {\n-        self.parse_assoc_item(|t| t.span.rust_2018())\n+        self.parse_assoc_item(|edition| edition >= Edition::Edition2018)\n     }\n \n     /// Parses associated items.\n@@ -1380,7 +1381,7 @@ impl<'a> Parser<'a> {\n /// The parsing configuration used to parse a parameter list (see `parse_fn_params`).\n ///\n /// The function decides if, per-parameter `p`, `p` must have a pattern or just a type.\n-type ReqName = fn(&token::Token) -> bool;\n+type ReqName = fn(Edition) -> bool;\n \n /// Parsing of functions and methods.\n impl<'a> Parser<'a> {\n@@ -1536,7 +1537,7 @@ impl<'a> Parser<'a> {\n \n         let is_name_required = match self.token.kind {\n             token::DotDotDot => false,\n-            _ => req_name(&self.normalized_token),\n+            _ => req_name(self.normalized_token.span.edition()),\n         };\n         let (pat, ty) = if is_name_required || self.is_named_param() {\n             debug!(\"parse_param_general parse_pat (is_name_required:{})\", is_name_required);"}]}