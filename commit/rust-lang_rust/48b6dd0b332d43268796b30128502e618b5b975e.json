{"sha": "48b6dd0b332d43268796b30128502e618b5b975e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ4YjZkZDBiMzMyZDQzMjY4Nzk2YjMwMTI4NTAyZTYxOGI1Yjk3NWU=", "commit": {"author": {"name": "unexge", "email": "unexge@gmail.com", "date": "2020-06-08T12:38:10Z"}, "committer": {"name": "unexge", "email": "unexge@gmail.com", "date": "2020-06-08T12:38:10Z"}, "message": "Use explicit match for extracting def from `classify_name`", "tree": {"sha": "5c72789a41a0af6082539d3d44af068e278cb154", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5c72789a41a0af6082539d3d44af068e278cb154"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/48b6dd0b332d43268796b30128502e618b5b975e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/48b6dd0b332d43268796b30128502e618b5b975e", "html_url": "https://github.com/rust-lang/rust/commit/48b6dd0b332d43268796b30128502e618b5b975e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/48b6dd0b332d43268796b30128502e618b5b975e/comments", "author": {"login": "unexge", "id": 16212576, "node_id": "MDQ6VXNlcjE2MjEyNTc2", "avatar_url": "https://avatars.githubusercontent.com/u/16212576?v=4", "gravatar_id": "", "url": "https://api.github.com/users/unexge", "html_url": "https://github.com/unexge", "followers_url": "https://api.github.com/users/unexge/followers", "following_url": "https://api.github.com/users/unexge/following{/other_user}", "gists_url": "https://api.github.com/users/unexge/gists{/gist_id}", "starred_url": "https://api.github.com/users/unexge/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/unexge/subscriptions", "organizations_url": "https://api.github.com/users/unexge/orgs", "repos_url": "https://api.github.com/users/unexge/repos", "events_url": "https://api.github.com/users/unexge/events{/privacy}", "received_events_url": "https://api.github.com/users/unexge/received_events", "type": "User", "site_admin": false}, "committer": {"login": "unexge", "id": 16212576, "node_id": "MDQ6VXNlcjE2MjEyNTc2", "avatar_url": "https://avatars.githubusercontent.com/u/16212576?v=4", "gravatar_id": "", "url": "https://api.github.com/users/unexge", "html_url": "https://github.com/unexge", "followers_url": "https://api.github.com/users/unexge/followers", "following_url": "https://api.github.com/users/unexge/following{/other_user}", "gists_url": "https://api.github.com/users/unexge/gists{/gist_id}", "starred_url": "https://api.github.com/users/unexge/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/unexge/subscriptions", "organizations_url": "https://api.github.com/users/unexge/orgs", "repos_url": "https://api.github.com/users/unexge/repos", "events_url": "https://api.github.com/users/unexge/events{/privacy}", "received_events_url": "https://api.github.com/users/unexge/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4edf736eb23c2d94a8c65a83a83201590e847b3f", "url": "https://api.github.com/repos/rust-lang/rust/commits/4edf736eb23c2d94a8c65a83a83201590e847b3f", "html_url": "https://github.com/rust-lang/rust/commit/4edf736eb23c2d94a8c65a83a83201590e847b3f"}], "stats": {"total": 7, "additions": 5, "deletions": 2}, "files": [{"sha": "0798d2c3617044f02b9a902889073af29e320cf6", "filename": "crates/ra_ide/src/goto_definition.rs", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/48b6dd0b332d43268796b30128502e618b5b975e/crates%2Fra_ide%2Fsrc%2Fgoto_definition.rs", "raw_url": "https://github.com/rust-lang/rust/raw/48b6dd0b332d43268796b30128502e618b5b975e/crates%2Fra_ide%2Fsrc%2Fgoto_definition.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fgoto_definition.rs?ref=48b6dd0b332d43268796b30128502e618b5b975e", "patch": "@@ -1,6 +1,6 @@\n use hir::Semantics;\n use ra_ide_db::{\n-    defs::{classify_name, classify_name_ref},\n+    defs::{classify_name, classify_name_ref, NameClass},\n     symbol_index, RootDatabase,\n };\n use ra_syntax::{\n@@ -39,7 +39,10 @@ pub(crate) fn goto_definition(\n                 reference_definition(&sema, &name_ref).to_vec()\n             },\n             ast::Name(name) => {\n-                let def = classify_name(&sema, &name)?.into_definition()?;\n+                let def = match classify_name(&sema, &name)? {\n+                    NameClass::Definition(def) | NameClass::ConstReference(def) => def,\n+                    NameClass::FieldShorthand { local: _, field } => field,\n+                };\n                 let nav = def.try_to_nav(sema.db)?;\n                 vec![nav]\n             },"}]}