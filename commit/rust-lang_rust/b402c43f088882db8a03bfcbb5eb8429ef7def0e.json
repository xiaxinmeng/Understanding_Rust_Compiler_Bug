{"sha": "b402c43f088882db8a03bfcbb5eb8429ef7def0e", "node_id": "MDY6Q29tbWl0NzI0NzEyOmI0MDJjNDNmMDg4ODgyZGI4YTAzYmZjYmI1ZWI4NDI5ZWY3ZGVmMGU=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2015-05-07T23:40:55Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2015-05-07T23:40:55Z"}, "message": "Auto merge of #25123 - arielb1:self-inhibiting-error, r=nikomatsakis\n\nFix #25076.\r\n\r\nr? @nikomatsakis", "tree": {"sha": "2bf19641c9a79b3d1d3e672048e8148ffec03282", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2bf19641c9a79b3d1d3e672048e8148ffec03282"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b402c43f088882db8a03bfcbb5eb8429ef7def0e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b402c43f088882db8a03bfcbb5eb8429ef7def0e", "html_url": "https://github.com/rust-lang/rust/commit/b402c43f088882db8a03bfcbb5eb8429ef7def0e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b402c43f088882db8a03bfcbb5eb8429ef7def0e/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5ae026e8923d71d16a4d2b9a592bbcab92d8723a", "url": "https://api.github.com/repos/rust-lang/rust/commits/5ae026e8923d71d16a4d2b9a592bbcab92d8723a", "html_url": "https://github.com/rust-lang/rust/commit/5ae026e8923d71d16a4d2b9a592bbcab92d8723a"}, {"sha": "ea3747902cb29338878a1e497b8c28f344c4fc6a", "url": "https://api.github.com/repos/rust-lang/rust/commits/ea3747902cb29338878a1e497b8c28f344c4fc6a", "html_url": "https://github.com/rust-lang/rust/commit/ea3747902cb29338878a1e497b8c28f344c4fc6a"}], "stats": {"total": 39, "additions": 34, "deletions": 5}, "files": [{"sha": "79d08cd825d8842e8bc17e6d12d93af45f18a2bd", "filename": "src/librustc/middle/traits/error_reporting.rs", "status": "modified", "additions": 8, "deletions": 2, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/b402c43f088882db8a03bfcbb5eb8429ef7def0e/src%2Flibrustc%2Fmiddle%2Ftraits%2Ferror_reporting.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b402c43f088882db8a03bfcbb5eb8429ef7def0e/src%2Flibrustc%2Fmiddle%2Ftraits%2Ferror_reporting.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftraits%2Ferror_reporting.rs?ref=b402c43f088882db8a03bfcbb5eb8429ef7def0e", "patch": "@@ -56,7 +56,12 @@ pub fn report_projection_error<'a, 'tcx>(infcx: &InferCtxt<'a, 'tcx>,\n {\n     let predicate =\n         infcx.resolve_type_vars_if_possible(&obligation.predicate);\n-    if !predicate.references_error() {\n+    // The ty_err created by normalize_to_error can end up being unified\n+    // into all obligations: for example, if our obligation is something\n+    // like `$X = <() as Foo<$X>>::Out` and () does not implement Foo<_>,\n+    // then $X will be unified with ty_err, but the error still needs to be\n+    // reported.\n+    if !infcx.tcx.sess.has_errors() || !predicate.references_error() {\n         span_err!(infcx.tcx.sess, obligation.cause.span, E0271,\n                 \"type mismatch resolving `{}`: {}\",\n                 predicate.user_string(infcx.tcx),\n@@ -183,7 +188,8 @@ pub fn report_selection_error<'a, 'tcx>(infcx: &InferCtxt<'a, 'tcx>,\n                             let trait_predicate =\n                                 infcx.resolve_type_vars_if_possible(trait_predicate);\n \n-                            if !trait_predicate.references_error() {\n+                            if !infcx.tcx.sess.has_errors() ||\n+                               !trait_predicate.references_error() {\n                                 let trait_ref = trait_predicate.to_poly_trait_ref();\n                                 span_err!(infcx.tcx.sess, obligation.cause.span, E0277,\n                                         \"the trait `{}` is not implemented for the type `{}`\","}, {"sha": "f6bde80e29875ce2b6df67793adcaaca9ef08a64", "filename": "src/librustc/middle/traits/project.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/b402c43f088882db8a03bfcbb5eb8429ef7def0e/src%2Flibrustc%2Fmiddle%2Ftraits%2Fproject.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b402c43f088882db8a03bfcbb5eb8429ef7def0e/src%2Flibrustc%2Fmiddle%2Ftraits%2Fproject.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftraits%2Fproject.rs?ref=b402c43f088882db8a03bfcbb5eb8429ef7def0e", "patch": "@@ -408,7 +408,10 @@ fn opt_normalize_projection_type<'a,'b,'tcx>(\n }\n \n /// in various error cases, we just set ty_err and return an obligation\n-/// that, when fulfilled, will lead to an error\n+/// that, when fulfilled, will lead to an error.\n+///\n+/// FIXME: the ty_err created here can enter the obligation we create,\n+/// leading to error messages involving ty_err.\n fn normalize_to_error<'a,'tcx>(selcx: &mut SelectionContext<'a,'tcx>,\n                                projection_ty: ty::ProjectionTy<'tcx>,\n                                cause: ObligationCause<'tcx>,"}, {"sha": "d7f909e4ebcf628bb7fa55009d7b9205be7303fe", "filename": "src/test/compile-fail/issue-23966.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/b402c43f088882db8a03bfcbb5eb8429ef7def0e/src%2Ftest%2Fcompile-fail%2Fissue-23966.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b402c43f088882db8a03bfcbb5eb8429ef7def0e/src%2Ftest%2Fcompile-fail%2Fissue-23966.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-23966.rs?ref=b402c43f088882db8a03bfcbb5eb8429ef7def0e", "patch": "@@ -9,6 +9,5 @@\n // except according to those terms.\n \n fn main() {\n-    \"\".chars().fold(|_, _| (), ());\n-    //~^ ERROR cannot determine a type for this expression: unconstrained type\n+    \"\".chars().fold(|_, _| (), ()); //~ ERROR is not implemented for the type `()`\n }"}, {"sha": "40f3b72849612daef711869ec38ed0661fcb07ba", "filename": "src/test/compile-fail/issue-25076.rs", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/b402c43f088882db8a03bfcbb5eb8429ef7def0e/src%2Ftest%2Fcompile-fail%2Fissue-25076.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b402c43f088882db8a03bfcbb5eb8429ef7def0e/src%2Ftest%2Fcompile-fail%2Fissue-25076.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-25076.rs?ref=b402c43f088882db8a03bfcbb5eb8429ef7def0e", "patch": "@@ -0,0 +1,21 @@\n+// Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+struct S;\n+\n+trait InOut<T> { type Out; }\n+\n+fn do_fold<B, F: InOut<B, Out=B>>(init: B, f: F) {}\n+\n+fn bot<T>() -> T { loop {} }\n+\n+fn main() {\n+    do_fold(bot(), ()); //~ ERROR is not implemented for the type `()`\n+}"}]}