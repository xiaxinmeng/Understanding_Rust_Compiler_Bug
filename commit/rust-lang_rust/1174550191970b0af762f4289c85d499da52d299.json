{"sha": "1174550191970b0af762f4289c85d499da52d299", "node_id": "MDY6Q29tbWl0NzI0NzEyOjExNzQ1NTAxOTE5NzBiMGFmNzYyZjQyODljODVkNDk5ZGE1MmQyOTk=", "commit": {"author": {"name": "Nick Cameron", "email": "ncameron@mozilla.com", "date": "2015-01-19T01:04:46Z"}, "committer": {"name": "Nick Cameron", "email": "ncameron@mozilla.com", "date": "2015-01-29T22:57:33Z"}, "message": "save-analysis: Use the correct span for `extern crate`", "tree": {"sha": "51c5748fcfe7a812000fef70da7bb4c84a45c6e7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/51c5748fcfe7a812000fef70da7bb4c84a45c6e7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1174550191970b0af762f4289c85d499da52d299", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1174550191970b0af762f4289c85d499da52d299", "html_url": "https://github.com/rust-lang/rust/commit/1174550191970b0af762f4289c85d499da52d299", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1174550191970b0af762f4289c85d499da52d299/comments", "author": {"login": "nrc", "id": 762626, "node_id": "MDQ6VXNlcjc2MjYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/762626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nrc", "html_url": "https://github.com/nrc", "followers_url": "https://api.github.com/users/nrc/followers", "following_url": "https://api.github.com/users/nrc/following{/other_user}", "gists_url": "https://api.github.com/users/nrc/gists{/gist_id}", "starred_url": "https://api.github.com/users/nrc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nrc/subscriptions", "organizations_url": "https://api.github.com/users/nrc/orgs", "repos_url": "https://api.github.com/users/nrc/repos", "events_url": "https://api.github.com/users/nrc/events{/privacy}", "received_events_url": "https://api.github.com/users/nrc/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nrc", "id": 762626, "node_id": "MDQ6VXNlcjc2MjYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/762626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nrc", "html_url": "https://github.com/nrc", "followers_url": "https://api.github.com/users/nrc/followers", "following_url": "https://api.github.com/users/nrc/following{/other_user}", "gists_url": "https://api.github.com/users/nrc/gists{/gist_id}", "starred_url": "https://api.github.com/users/nrc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nrc/subscriptions", "organizations_url": "https://api.github.com/users/nrc/orgs", "repos_url": "https://api.github.com/users/nrc/repos", "events_url": "https://api.github.com/users/nrc/events{/privacy}", "received_events_url": "https://api.github.com/users/nrc/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "127c253d404cf6c62f1f761c57a78d9b20beebe2", "url": "https://api.github.com/repos/rust-lang/rust/commits/127c253d404cf6c62f1f761c57a78d9b20beebe2", "html_url": "https://github.com/rust-lang/rust/commit/127c253d404cf6c62f1f761c57a78d9b20beebe2"}], "stats": {"total": 30, "additions": 15, "deletions": 15}, "files": [{"sha": "b4b7ffc0137e02d01aea679a6ea1ba047dbc68d1", "filename": "src/librustc_trans/save/mod.rs", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/1174550191970b0af762f4289c85d499da52d299/src%2Flibrustc_trans%2Fsave%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1174550191970b0af762f4289c85d499da52d299/src%2Flibrustc_trans%2Fsave%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Fsave%2Fmod.rs?ref=1174550191970b0af762f4289c85d499da52d299", "patch": "@@ -1121,23 +1121,23 @@ impl<'l, 'tcx, 'v> Visitor<'v> for DxrVisitor<'l, 'tcx> {\n                 }\n             }\n             ast::ItemExternCrate(ref s) => {\n-                let name = get_ident(item.ident);\n+                let name = get_ident(ident);\n                 let name = name.get();\n-                let s = match *s {\n+                let location = match *s {\n                     Some((ref s, _)) => s.get().to_string(),\n                     None => name.to_string(),\n                 };\n-                let sub_span = self.span.sub_span_after_keyword(item.span, keywords::Crate);\n-                let cnum = match self.sess.cstore.find_extern_mod_stmt_cnum(item.id) {\n+                let alias_span = self.span.span_for_last_ident(i.span);\n+                let cnum = match self.sess.cstore.find_extern_mod_stmt_cnum(id) {\n                     Some(cnum) => cnum,\n                     None => 0,\n                 };\n-                self.fmt.extern_crate_str(item.span,\n-                                          sub_span,\n-                                          item.id,\n+                self.fmt.extern_crate_str(i.span,\n+                                          alias_span,\n+                                          id,\n                                           cnum,\n                                           name,\n-                                          &s[],\n+                                          &location[],\n                                           self.cur_scope);\n             }\n             ast::ItemFn(ref decl, _, _, ref ty_params, ref body) =>"}, {"sha": "5b8c1878cf266cd8b611be3fa3f91b5f09467683", "filename": "src/librustc_trans/save/recorder.rs", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/1174550191970b0af762f4289c85d499da52d299/src%2Flibrustc_trans%2Fsave%2Frecorder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1174550191970b0af762f4289c85d499da52d299/src%2Flibrustc_trans%2Fsave%2Frecorder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Fsave%2Frecorder.rs?ref=1174550191970b0af762f4289c85d499da52d299", "patch": "@@ -496,13 +496,13 @@ impl<'a> FmtStrs<'a> {\n     }\n \n     pub fn extern_crate_str(&mut self,\n-                          span: Span,\n-                          sub_span: Option<Span>,\n-                          id: NodeId,\n-                          cnum: ast::CrateNum,\n-                          name: &str,\n-                          loc: &str,\n-                          parent: NodeId) {\n+                            span: Span,\n+                            sub_span: Option<Span>,\n+                            id: NodeId,\n+                            cnum: ast::CrateNum,\n+                            name: &str,\n+                            loc: &str,\n+                            parent: NodeId) {\n         self.check_and_record(ExternCrate,\n                               span,\n                               sub_span,"}]}